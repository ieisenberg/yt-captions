[
  {
    "start": "0",
    "end": "172000"
  },
  {
    "text": "welcome from my side my name is Michael Hanish I'm a Solutions Architect with AWS and today I'm going to talk about",
    "start": "960",
    "end": "7919"
  },
  {
    "text": "auto scaling this is like a level 200",
    "start": "7919",
    "end": "13740"
  },
  {
    "text": "session so first a quick question like who of you is using auto scaling already",
    "start": "13740",
    "end": "19880"
  },
  {
    "text": "quite a few ok alright so the session is not titled all there is to know about",
    "start": "19880",
    "end": "26699"
  },
  {
    "text": "auto scaling but everything you need to know so I'll try to focus on that but I think we can have a longer time for Q&A",
    "start": "26699",
    "end": "32550"
  },
  {
    "text": "at the end so we can probably discuss some of the more advanced topics as we",
    "start": "32550",
    "end": "38070"
  },
  {
    "text": "go along all right so let's get started what I'm going to do today is basically",
    "start": "38070",
    "end": "45300"
  },
  {
    "text": "give you give a basic introduction to auto scaling concepts like all the the",
    "start": "45300",
    "end": "50789"
  },
  {
    "text": "bits and pieces that you need to get auto scaling setup and running I'll talk about scaling policies different kind of",
    "start": "50789",
    "end": "56940"
  },
  {
    "text": "scaling policies how and when to use for example how i can control the instance",
    "start": "56940",
    "end": "62460"
  },
  {
    "text": "lifecycle and yeah the basic goal for today is to give a good overview and",
    "start": "62460",
    "end": "67920"
  },
  {
    "text": "give you enough ideas of where you could look to optimize your uses of auto scaling ok let's get let's get the",
    "start": "67920",
    "end": "76680"
  },
  {
    "text": "basics out of the way so what what does it do right I'm going to focus on a",
    "start": "76680",
    "end": "82979"
  },
  {
    "text": "fairly simple example so let's assume that I'm like a small business owner I have like my own ice cream shop",
    "start": "82979",
    "end": "88200"
  },
  {
    "text": "somewhere in Vegas and I have a website of Forth where people can reserve a table for example and since I'm smart I",
    "start": "88200",
    "end": "96600"
  },
  {
    "text": "care about availability so I use my multiple web servers across to AZ's I've got an elastic load balancer in front",
    "start": "96600",
    "end": "103670"
  },
  {
    "text": "all this fine and well write until reinvent descends into town and suddenly my servers are like quite overloaded so",
    "start": "103670",
    "end": "110790"
  },
  {
    "text": "I figure ok I'm going to launch 2 more right set everything up register them",
    "start": "110790",
    "end": "116340"
  },
  {
    "text": "with the EOB so that I can keep going people can get to a table actually quickly and yeah that's fine right so I",
    "start": "116340",
    "end": "126259"
  },
  {
    "text": "noticed an increase in demand I noticed increase in utilization and I want to adapt to that and that's exactly what",
    "start": "126259",
    "end": "132870"
  },
  {
    "text": "auto scaling heids so instead of loading that manually like scaling up from two to",
    "start": "132870",
    "end": "139050"
  },
  {
    "text": "four servers I can also just leave that to auto scaling and place my service",
    "start": "139050",
    "end": "144270"
  },
  {
    "text": "into the so called auto scaling group that still main and central concept to auto scaling the group has like three",
    "start": "144270",
    "end": "151440"
  },
  {
    "text": "different variables a minimum capacity so how many instances do you need to",
    "start": "151440",
    "end": "158340"
  },
  {
    "text": "keep running at all and a maximum capacity which is typically controlled by your budget right and somewhere in",
    "start": "158340",
    "end": "163890"
  },
  {
    "text": "between there is the desired capacity which is what you believe or what auto scaling believes you're going to need so",
    "start": "163890",
    "end": "171450"
  },
  {
    "text": "now once you've defined group given that a name and set those parameters auto",
    "start": "171450",
    "end": "177600"
  },
  {
    "start": "172000",
    "end": "172000"
  },
  {
    "text": "scaling will do its best to make sure that you always have the minimum capacity the minimum number of instances",
    "start": "177600",
    "end": "184140"
  },
  {
    "text": "running at any time so it will launch or terminate instances to adapt its current",
    "start": "184140",
    "end": "190920"
  },
  {
    "text": "capacity to your desired one and it will assure you that it it won't ever start",
    "start": "190920",
    "end": "197130"
  },
  {
    "text": "more than the maximum number of instances and another nice thing is that",
    "start": "197130",
    "end": "202440"
  },
  {
    "text": "it works across a zs and it works across subnets if you're if you're running in a",
    "start": "202440",
    "end": "207989"
  },
  {
    "text": "B PC and whenever you have multiple Easy's for example auto scaling will",
    "start": "207989",
    "end": "213120"
  },
  {
    "text": "work to distribute the desired capacity but occurring capacity that it has across da ZZZ as evenly as possible to",
    "start": "213120",
    "end": "220410"
  },
  {
    "text": "make sure that you won't get hit like if any problem occurs in one of those daisies all right so back to this",
    "start": "220410",
    "end": "229950"
  },
  {
    "text": "example let's say it is not only reinvent but probably another conference as well and suddenly I figure I need more servers so all I need to do is",
    "start": "229950",
    "end": "236519"
  },
  {
    "text": "basically say ok desired capacity desired number of service is six not four right so just tell all the",
    "start": "236519",
    "end": "243900"
  },
  {
    "text": "scaling and what it's going to do is going to launch two new ec2 instances",
    "start": "243900",
    "end": "249230"
  },
  {
    "text": "make sure to up and running in register them with the low bound so that you've configured that it's also a good benefit",
    "start": "249230",
    "end": "257100"
  },
  {
    "text": "of auto scaling that is well integrated with the ELB but next question of course",
    "start": "257100",
    "end": "263789"
  },
  {
    "start": "262000",
    "end": "262000"
  },
  {
    "text": "is how does it know what kind of server to launch and the answer is launch configurations",
    "start": "263789",
    "end": "269850"
  },
  {
    "text": "that's the second thing you need to configure when you when you launch an auto scaling group so because the launch",
    "start": "269850",
    "end": "276720"
  },
  {
    "text": "configuration tells the auto scaling service what exactly it needs to launch and at least at the very least it needs",
    "start": "276720",
    "end": "283889"
  },
  {
    "text": "to know which kind of am i should it run so what kind of software configuration operating system is in there which size",
    "start": "283889",
    "end": "290880"
  },
  {
    "text": "of machine you want which type of machine you want and then of course all",
    "start": "290880",
    "end": "296610"
  },
  {
    "text": "various security settings security groups feed an ec2 classic or in V PC the SSH keys the I am instance profile",
    "start": "296610",
    "end": "303660"
  },
  {
    "text": "and a couple of other things basically everything you need to launch an ec2",
    "start": "303660",
    "end": "308669"
  },
  {
    "text": "instance needs to go into that launch configuration except for Daz or subnet",
    "start": "308669",
    "end": "314340"
  },
  {
    "text": "because that's something that the auto scaling group will decide for you depending on where that capacity is needed most when you launch an ec2",
    "start": "314340",
    "end": "323520"
  },
  {
    "text": "instance a regular one you can always pass in this user user data attribute",
    "start": "323520",
    "end": "328970"
  },
  {
    "text": "I'm not sure how many people use that when it does launch like any old ec2 instance but in the case of auto scaling",
    "start": "328970",
    "end": "335310"
  },
  {
    "text": "it's a very important piece of the puzzle because you just tell auto",
    "start": "335310",
    "end": "340860"
  },
  {
    "text": "scaling what it needs to do but all the rest needs to be fully automated and user data helps you to do it so the user",
    "start": "340860",
    "end": "348570"
  },
  {
    "start": "346000",
    "end": "346000"
  },
  {
    "text": "data field is basically a place where you can put in a couple of kilobytes of",
    "start": "348570",
    "end": "355160"
  },
  {
    "text": "arbitrary data which will be transferred to your ec2 instance as it launches up",
    "start": "355160",
    "end": "360180"
  },
  {
    "text": "and typically if you if you use Linux instance for example you'll have like a",
    "start": "360180",
    "end": "366270"
  },
  {
    "text": "CF n init process that will actually take the contents of that user data field and evaluate that does the syntax",
    "start": "366270",
    "end": "373530"
  },
  {
    "text": "of just installs packages but if it just starts with like hash bang it will",
    "start": "373530",
    "end": "378780"
  },
  {
    "text": "basically execute the whole thing as a shell script but that allows you to just start with a basic ami and automate",
    "start": "378780",
    "end": "385289"
  },
  {
    "text": "everything that happens on top of that or if you use a Windows instance with all scaling you can just put in a",
    "start": "385289",
    "end": "390599"
  },
  {
    "text": "PowerShell snippet for example that will be executed as the machine is booted up and that's important because the whole",
    "start": "390599",
    "end": "396510"
  },
  {
    "text": "boost rowing process that needs to be fully automated right it doesn't make sense if you have automated scale but then you need to log in and do",
    "start": "396510",
    "end": "402480"
  },
  {
    "text": "something manually right and there is no right or wrong way to do bootstrapping",
    "start": "402480",
    "end": "408480"
  },
  {
    "text": "and I think it's like a whole spectrum of different approaches one approach on",
    "start": "408480",
    "end": "414960"
  },
  {
    "text": "one end of the spectrum is to use a golden image right you basically create one Amazon machine image get picked the",
    "start": "414960",
    "end": "422370"
  },
  {
    "text": "right OS yuan installed web server you need configure it install your",
    "start": "422370",
    "end": "427560"
  },
  {
    "text": "application all the assets that will probably need and so on and then create a new ami out of that",
    "start": "427560",
    "end": "433250"
  },
  {
    "text": "benefit is you just need to give that ami to launch configuration auto scaling automatically knows what to do with it",
    "start": "433250",
    "end": "439140"
  },
  {
    "text": "right we'll just put up the ami and everything will be fine now that works",
    "start": "439140",
    "end": "444450"
  },
  {
    "text": "pretty well you can also automate this process fully if you do a lot of changes you'll end up",
    "start": "444450",
    "end": "449520"
  },
  {
    "text": "with a lot of a.m. eyes with which adds the challenge that you need to keep track of which one is current which one",
    "start": "449520",
    "end": "454980"
  },
  {
    "text": "has changed is which one has changed dad on the flip side is easy to rollback",
    "start": "454980",
    "end": "460560"
  },
  {
    "text": "right just create a new one or basically roll back to a previous ami and you're good to go but one one drawback to this",
    "start": "460560",
    "end": "469410"
  },
  {
    "text": "gold image approach is that you're tying together changes that occur at different speeds for example you bring in",
    "start": "469410",
    "end": "475830"
  },
  {
    "text": "operating system changes changes to the web server changes through configuration as well as changes to your application",
    "start": "475830",
    "end": "481770"
  },
  {
    "text": "and they probably occur at different speeds depending on how much you how much time you invest in developing your",
    "start": "481770",
    "end": "487170"
  },
  {
    "text": "website so that might be a bit of a problem so what what most people do but",
    "start": "487170",
    "end": "492840"
  },
  {
    "text": "I typically recommend is to split this out a little bit and just start with a base am i right so the question is how",
    "start": "492840",
    "end": "500910"
  },
  {
    "text": "much you put in there it could be just a plain vanilla operating system or it could be the base ami together with the",
    "start": "500910",
    "end": "508800"
  },
  {
    "text": "general web server that you use some kind of monitoring agents and so on rolled out into a custom ami and make that your base ami and whenever",
    "start": "508800",
    "end": "515969"
  },
  {
    "text": "auto-scaling boots it up use user data for example to inject the current version of the application you want to",
    "start": "515970",
    "end": "522120"
  },
  {
    "text": "run any configuration items that this application needs and then you'll boot",
    "start": "522120",
    "end": "528330"
  },
  {
    "text": "up the boot image and user data will do the rest and",
    "start": "528330",
    "end": "533540"
  },
  {
    "text": "we're exactly a draw the line between what goes into the image and what goes into the user data script etc that",
    "start": "533810",
    "end": "540230"
  },
  {
    "text": "depends a lot on the culture that you have that your development team do the amount of changes or the frequency of",
    "start": "540230",
    "end": "545930"
  },
  {
    "text": "changes that occur like in your code versus on the software you use it will also depend on what kind of extra tools",
    "start": "545930",
    "end": "552380"
  },
  {
    "text": "you use so I've I'll show you an example of how to use user data like I said you can just pass in a shell script that will be",
    "start": "552380",
    "end": "558710"
  },
  {
    "text": "executed that's one way to do it but maybe many people are also heavily invested into configuration management",
    "start": "558710",
    "end": "564589"
  },
  {
    "text": "solutions like Schaffer Pappa tangible and that's also a good way to get this",
    "start": "564589",
    "end": "570290"
  },
  {
    "text": "going to to take care of the bootstrapping process which basically means pick your base am I probably one",
    "start": "570290",
    "end": "576860"
  },
  {
    "text": "that is including like the puppet agent whatever and make sure it is whenever this image is spin up is spun up it can",
    "start": "576860",
    "end": "583730"
  },
  {
    "text": "automatically contact the puppet master for example and then in the user data",
    "start": "583730",
    "end": "588860"
  },
  {
    "text": "script that you put in the launch configuration you will just need to reference the kind of role or kind of",
    "start": "588860",
    "end": "594339"
  },
  {
    "text": "tasks that this machine needs to fulfill and then you can use the then you can",
    "start": "594339",
    "end": "599420"
  },
  {
    "text": "check for popular ansible do the rest and of course another solution is to use",
    "start": "599420",
    "end": "605240"
  },
  {
    "text": "AWS code deploy which does pretty much what it says right it just deploys code",
    "start": "605240",
    "end": "612710"
  },
  {
    "text": "which it takes from a three for example from other locations and rolls it out and it can do that just as well together",
    "start": "612710",
    "end": "619700"
  },
  {
    "text": "with auto scaling that's one example for",
    "start": "619700",
    "end": "625850"
  },
  {
    "text": "user data script as you can G it's just an arbitrary shell script it just does an update installs Ruby CLI and then it",
    "start": "625850",
    "end": "633890"
  },
  {
    "text": "basically downloads and installs the AWS code deploy agent right so you could you",
    "start": "633890",
    "end": "639950"
  },
  {
    "text": "could basically do that with like many flavors of Linux and we'll just do the right thing and then the code deploy",
    "start": "639950",
    "end": "647690"
  },
  {
    "text": "agent will run and then you can configure the code deploy service to actually tell it that this auto scaling",
    "start": "647690",
    "end": "652850"
  },
  {
    "text": "group which has this configuration now should be part of a certain deployment",
    "start": "652850",
    "end": "658070"
  },
  {
    "text": "proof for your application all right so I think we've talked a bit about how we",
    "start": "658070",
    "end": "664940"
  },
  {
    "text": "can get the bootstrapping process going and how you can actually get your software configuration onto your",
    "start": "664940",
    "end": "671420"
  },
  {
    "text": "machines no our two additional instances",
    "start": "671420",
    "end": "676519"
  },
  {
    "text": "has put it up now we have like six system right I think we're happy CPU utilization will go down people know",
    "start": "676519",
    "end": "682519"
  },
  {
    "text": "long I have to wait for their requests but let's look at at the opposite right",
    "start": "682519",
    "end": "687829"
  },
  {
    "text": "we figure out okay traffic is going down we're going to save cost so we want to",
    "start": "687829",
    "end": "692870"
  },
  {
    "text": "reduce the desired capacity to five and in this case auto scaling will pick an",
    "start": "692870",
    "end": "698240"
  },
  {
    "text": "instance and terminate it but before it",
    "start": "698240",
    "end": "704360"
  },
  {
    "text": "happens it will be register it from the load balancer if that has been configured it will wait until the grace",
    "start": "704360",
    "end": "710750"
  },
  {
    "text": "period passes so that any any connections that might still might have been open to that instance will be will",
    "start": "710750",
    "end": "716839"
  },
  {
    "text": "be drained and only then it will terminate the instance and now we have our desired capacity of five now the",
    "start": "716839",
    "end": "724100"
  },
  {
    "text": "question of course is how does auto scaling choose which of those six instances it will terminate right and",
    "start": "724100",
    "end": "731350"
  },
  {
    "text": "that's something you can actually configure using termination policies",
    "start": "731350",
    "end": "737800"
  },
  {
    "start": "734000",
    "end": "734000"
  },
  {
    "text": "first of all the important thing to know is that auto scaling will always work and always ensure that your balance that",
    "start": "738250",
    "end": "744290"
  },
  {
    "text": "your capacity is balanced across AZ's so in our example it was perfectly balanced we had two ACS with like three machines",
    "start": "744290",
    "end": "750319"
  },
  {
    "text": "each so that's fine so it could take a machine from any of those two aziz right",
    "start": "750319",
    "end": "757250"
  },
  {
    "text": "and then once it has figure out which AZ it can wear it can reduce the capacity or where it should reduce the capacity",
    "start": "757250",
    "end": "763130"
  },
  {
    "text": "first it will consult the termination policy that you've configured to decide which instance to pick and there are",
    "start": "763130",
    "end": "770209"
  },
  {
    "text": "three different options as of now first of all you can get rid of the longest",
    "start": "770209",
    "end": "775279"
  },
  {
    "text": "running instance first very useful if you if you tend to have number of leaks and such right but maybe you just want",
    "start": "775279",
    "end": "780949"
  },
  {
    "text": "to clean up the old stuff you can also get rid of the width of the instances",
    "start": "780949",
    "end": "786740"
  },
  {
    "text": "with the oldest launch configuration first it's also interesting because one",
    "start": "786740",
    "end": "793519"
  },
  {
    "text": "thing I haven't said about launch configuration is that you can keep changing them as during the life of your",
    "start": "793519",
    "end": "799370"
  },
  {
    "text": "auto scaling policy you have to define one launch configuration so that auto-scaling knows what to do but if you're a my change if",
    "start": "799370",
    "end": "807010"
  },
  {
    "text": "you decides on a different instance type for example you can just replace their launch configuration with a new one and",
    "start": "807010",
    "end": "812490"
  },
  {
    "text": "it won't affect the currently running instances or the currently running auto scaling group but the next time the next",
    "start": "812490",
    "end": "818710"
  },
  {
    "text": "time it needs to launch a new instance or two or ten or whatever it will look at that new launch configuration and",
    "start": "818710",
    "end": "824380"
  },
  {
    "text": "launch those kinds of servers and that's one way to replace operating system",
    "start": "824380",
    "end": "830020"
  },
  {
    "text": "server stacks application stacks and so on inside auto scaling group basically just configure a new launch",
    "start": "830020",
    "end": "835720"
  },
  {
    "text": "configuration and make sure that you basically cycle all the instances terminate the instances one after the",
    "start": "835720",
    "end": "841420"
  },
  {
    "text": "other and it will bring up instances that are in accordance with the new launch configuration with the new software",
    "start": "841420",
    "end": "847780"
  },
  {
    "text": "stack and so on right away and if you want to make sure that that process is smooth you can choose the oldest launch",
    "start": "847780",
    "end": "854920"
  },
  {
    "text": "configuration policy that will always get rid of the oldest instances first and replace it with a brand new one",
    "start": "854920",
    "end": "860020"
  },
  {
    "text": "using the latest configuration the third option is useful for cost control it",
    "start": "860020",
    "end": "866050"
  },
  {
    "text": "will just delete those machines or terminate those which means first that are closest to the full billing hour so",
    "start": "866050",
    "end": "872890"
  },
  {
    "text": "basically the Machine you get the most money and most value out of and leave live the others run right all right the",
    "start": "872890",
    "end": "883150"
  },
  {
    "start": "882000",
    "end": "882000"
  },
  {
    "text": "third piece of the puzzle besides launch configuration and termination policies",
    "start": "883150",
    "end": "888190"
  },
  {
    "text": "are the scaling plans they basically determine when auto scaling will launch",
    "start": "888190",
    "end": "893590"
  },
  {
    "text": "or terminate instances and basically it all comes down to current capacity that all scaling is observing and whatever",
    "start": "893590",
    "end": "899650"
  },
  {
    "text": "tell whatever you tell it about its desired capacity if you tell if you need more if you launch more if you say I",
    "start": "899650",
    "end": "906550"
  },
  {
    "text": "want less about automatically terminate those there's a couple of different scaling plans so if you don't configure",
    "start": "906550",
    "end": "914050"
  },
  {
    "text": "anything else the default scaling plan will be in effect and that just means that auto",
    "start": "914050",
    "end": "919810"
  },
  {
    "text": "scaling will just sit on whatever instances you've launched and make sure that they stay up and running if one of",
    "start": "919810",
    "end": "925780"
  },
  {
    "text": "them fails for a bit of a reason if you replace it but other than that it will",
    "start": "925780",
    "end": "931240"
  },
  {
    "text": "always stick to the desired capacity then of course you have the option to do what I call manual scaling which",
    "start": "931240",
    "end": "939350"
  },
  {
    "text": "basically means you can set the desired capacity using the API command-line interface or the console on your own to",
    "start": "939350",
    "end": "945440"
  },
  {
    "text": "trigger a scaling event obviously it's not that much fun if you do that manually though is helpful for testing",
    "start": "945440",
    "end": "951440"
  },
  {
    "text": "but it's also a good thing because you can connect that to other systems right if you already have like a monitoring",
    "start": "951440",
    "end": "957680"
  },
  {
    "text": "system or some kind of configuration system that takes care of how many instances you need and how much capacity",
    "start": "957680",
    "end": "963830"
  },
  {
    "text": "you have then you can just connect it basically by a shell script using the CLI tools to just set the desired",
    "start": "963830",
    "end": "970580"
  },
  {
    "text": "capacity depending on whichever stage you configuration management tells you about auto scaling also supports",
    "start": "970580",
    "end": "977570"
  },
  {
    "text": "scheduled scaling so basically you tell it every morning at 8 o'clock scale up every morning every evening at",
    "start": "977570",
    "end": "984410"
  },
  {
    "text": "like 6 p.m. scale down and of course and that's the most important thing and probably the broadest appeal of the",
    "start": "984410",
    "end": "991070"
  },
  {
    "text": "service is that it can scale automatically based on cloud watch metrics ok so these are the three things",
    "start": "991070",
    "end": "999170"
  },
  {
    "start": "997000",
    "end": "997000"
  },
  {
    "text": "we've covered so far the very basics the auto scaling group basically controls a fleet of servers make sure it always has",
    "start": "999170",
    "end": "1006190"
  },
  {
    "text": "the right servers running and the right number of service running and balance the cross AZ's so to here cover it again",
    "start": "1006190",
    "end": "1011890"
  },
  {
    "text": "since the failures ad failures and so on the launch configuration which tells it which servers to launch and finally the",
    "start": "1011890",
    "end": "1020230"
  },
  {
    "text": "scaling plan that tells the auto scaling service like when to scale in or out your fleet and as I've said before in",
    "start": "1020230",
    "end": "1031630"
  },
  {
    "text": "this example it's not the only example but it's one very common one is where",
    "start": "1031630",
    "end": "1037060"
  },
  {
    "start": "1037000",
    "end": "1037000"
  },
  {
    "text": "you integrate auto scaling with the with the EOB load balancer because many",
    "start": "1037060",
    "end": "1043329"
  },
  {
    "text": "people use auto scaling for web-based workloads of course if you have multiple machines you need some point that acts",
    "start": "1043330",
    "end": "1049300"
  },
  {
    "text": "as an entry point and can distribute incoming traffic the nice thing about",
    "start": "1049300",
    "end": "1055200"
  },
  {
    "text": "about ELB and auto scaling is that they are well integrated so for example you'll be supports connection draining",
    "start": "1055200",
    "end": "1061960"
  },
  {
    "text": "as I said before and it tells auto scaling like once the draining period is",
    "start": "1061960",
    "end": "1067720"
  },
  {
    "text": "over and it's safe to actually terminate an instance is about to be terminated it generates metrics which you can use in",
    "start": "1067720",
    "end": "1074110"
  },
  {
    "text": "auto scaling as well it interacts free well I guess I'll show you a couple examples later on the interesting thing",
    "start": "1074110",
    "end": "1082360"
  },
  {
    "text": "is that you can configure the auto scaling group to work with one or multiple load balancers right so",
    "start": "1082360",
    "end": "1087850"
  },
  {
    "text": "depending on how you set up your system you might have multiple load balancers connected to the same fleet of servers",
    "start": "1087850",
    "end": "1093370"
  },
  {
    "text": "probably accessing the same web servers different ports stuff like that and once",
    "start": "1093370",
    "end": "1100090"
  },
  {
    "text": "you have connected an auto scaling group and an ELB the artists current group will tell the load balancer whenever a",
    "start": "1100090",
    "end": "1105700"
  },
  {
    "text": "new instance has been launched it will automatically add it to load balancer pool and also when an instance is due",
    "start": "1105700",
    "end": "1112090"
  },
  {
    "text": "for termination it will inform that as well okay so I",
    "start": "1112090",
    "end": "1119290"
  },
  {
    "text": "think that covers the most basic points and I think one of the the main features",
    "start": "1119290",
    "end": "1125620"
  },
  {
    "text": "of auto scaling is that this is like one of the places where like the clouds promise of elastic capacity comes to",
    "start": "1125620",
    "end": "1132250"
  },
  {
    "text": "life right because you can really automate an infrastructure that adapts",
    "start": "1132250",
    "end": "1137620"
  },
  {
    "text": "to demand but it's not the only benefit the other benefit I see is increased",
    "start": "1137620",
    "end": "1144880"
  },
  {
    "text": "availability and reliability of your system because auto scaling does health",
    "start": "1144880",
    "end": "1150250"
  },
  {
    "start": "1148000",
    "end": "1148000"
  },
  {
    "text": "checks it does those periodically and it keeps track of which instances are",
    "start": "1150250",
    "end": "1155680"
  },
  {
    "text": "healthy or unhealthy and if an instance doesn't look as good anymore it's going to terminate it and replace it with a",
    "start": "1155680",
    "end": "1161500"
  },
  {
    "text": "new one so that's also part of the default scaling plan as soon as something seems to fail it will be",
    "start": "1161500",
    "end": "1167470"
  },
  {
    "text": "replaced and it does a couple different options for health checks so the default",
    "start": "1167470",
    "end": "1173890"
  },
  {
    "text": "is to just use the ec2 health checks which you can also see in the ec2",
    "start": "1173890",
    "end": "1179020"
  },
  {
    "text": "instances list or console if one of the instances is not running so for example if you terminate it manually or if it",
    "start": "1179020",
    "end": "1186790"
  },
  {
    "text": "the the system with health check or system status is impaired auto scaling",
    "start": "1186790",
    "end": "1192430"
  },
  {
    "text": "will automatically recognize that instance as bound to fail and it will replace it right away now if you have an",
    "start": "1192430",
    "end": "1199180"
  },
  {
    "text": "L be in front of the air fleet of web servers the EOB has its own health check which is like on an application level so it",
    "start": "1199180",
    "end": "1206059"
  },
  {
    "text": "does an HTTP call or a couple of them actually and looks for a 200 response code and if it does see that then",
    "start": "1206059",
    "end": "1213110"
  },
  {
    "text": "everything is fine if it sees something else like a 4 or 5 or 3 for example it will mark the instance that actually",
    "start": "1213110",
    "end": "1218840"
  },
  {
    "text": "returned that code as unhealthy and if the elbe is connected to an auto scaling group you can configure the auto scaling",
    "start": "1218840",
    "end": "1224809"
  },
  {
    "text": "group to automatically use the EOB health check instead or in addition to the ec2 instance health check",
    "start": "1224809",
    "end": "1231590"
  },
  {
    "text": "so whenever the elbe doesn't get the replied wants to see it can tell the auto scaling group to replace the",
    "start": "1231590",
    "end": "1236869"
  },
  {
    "text": "instance right away and of course everything has an API so you can mark",
    "start": "1236869",
    "end": "1242809"
  },
  {
    "text": "individual instances as unhealthy right using command-line tools using connection to your monitoring system so",
    "start": "1242809",
    "end": "1250249"
  },
  {
    "text": "you can define your own health checks and define your own rules for when an instance should be replaced so you could",
    "start": "1250249",
    "end": "1257929"
  },
  {
    "text": "tie down to various metrics for example if I don't know this guy all seems to take too long or disk is running full or",
    "start": "1257929",
    "end": "1264379"
  },
  {
    "text": "whatever you could basically have that trigger an instance replacement all",
    "start": "1264379",
    "end": "1272690"
  },
  {
    "text": "right so what does it look like if we look at our example from before we have our six web servers a video fills instances fail",
    "start": "1272690",
    "end": "1281779"
  },
  {
    "text": "the health check whether that's an ec2 health check woody lb health check it gets replaced right away because if you",
    "start": "1281779",
    "end": "1289100"
  },
  {
    "text": "look at this right now we're below our desired capacity so that's where the scaling plan kicks in just says ok I",
    "start": "1289100",
    "end": "1295549"
  },
  {
    "text": "need another instance to satisfy demand and the same is true as well",
    "start": "1295549",
    "end": "1304009"
  },
  {
    "text": "if for example a whole ad would fail where the connectivity to a whole AC fails right auto-scaling can balance",
    "start": "1304009",
    "end": "1311539"
  },
  {
    "text": "across multiple ICS and in this example it will always try to balance across both them but if one of them is not",
    "start": "1311539",
    "end": "1318200"
  },
  {
    "text": "reachable for whatever reason there could be a network split split or a power issue it will make sure that the",
    "start": "1318200",
    "end": "1323989"
  },
  {
    "text": "capacity that has fallen fall away here gets replaced in the other AC it will",
    "start": "1323989",
    "end": "1332359"
  },
  {
    "text": "automatically tell the load balancer to take care of those new instances and add them to the pool as well now this doesn't last forever",
    "start": "1332359",
    "end": "1342620"
  },
  {
    "text": "so as soon as the the the first AZ in this example comes back to life it's",
    "start": "1342620",
    "end": "1349070"
  },
  {
    "text": "available again and auto-scaling will keep trying to launch instances there for a number of times and if the first",
    "start": "1349070",
    "end": "1356690"
  },
  {
    "text": "instance long succeeded it knows that the AZ is alive and well again and then",
    "start": "1356690",
    "end": "1361730"
  },
  {
    "text": "it will start rebalancing so it will then figure out okay I want six instances I have two AZ so I guess it",
    "start": "1361730",
    "end": "1368299"
  },
  {
    "text": "means three in each and it has six in one of them so it's not really balanced so it needs to move 3a these three",
    "start": "1368299",
    "end": "1375440"
  },
  {
    "text": "instances from one AZ to the other and that's pretty much the only case where",
    "start": "1375440",
    "end": "1382490"
  },
  {
    "text": "you can go above the maximum capacity for a short amount of time because auto scaling doesn't just shut down three of",
    "start": "1382490",
    "end": "1389210"
  },
  {
    "text": "those instances right away because that will bring down your capacity much too low and you will see failures and",
    "start": "1389210",
    "end": "1394580"
  },
  {
    "text": "whatnot but instead it will it will launch up to ten percent of the capacity",
    "start": "1394580",
    "end": "1399980"
  },
  {
    "text": "that you have and AZ be in AZ a wait until those are online until they've",
    "start": "1399980",
    "end": "1405890"
  },
  {
    "text": "been added to the web server and only then it will terminate the now superfluous capacity in in AZ B right so",
    "start": "1405890",
    "end": "1413240"
  },
  {
    "text": "worst case if something scream happens like this if we had like ten instances in AZ B it would need to rebalance so",
    "start": "1413240",
    "end": "1420530"
  },
  {
    "text": "then it would launch one after one and the first a Z until its rebalanced again",
    "start": "1420530",
    "end": "1425720"
  },
  {
    "text": "so for a short amount of time you can go up to eleven instances right that's something you need to be aware of but I",
    "start": "1425720",
    "end": "1431600"
  },
  {
    "text": "think it does the right job because it always works hard to to ensure capacity above everything else and that's the",
    "start": "1431600",
    "end": "1441620"
  },
  {
    "start": "1439000",
    "end": "1439000"
  },
  {
    "text": "that's the second big benefit I would say it counteracts failures what it does instances failing applications failing",
    "start": "1441620",
    "end": "1449059"
  },
  {
    "text": "in case on you'll be health check or whole AZ is failing unlikely as it is and that's also one reason why people",
    "start": "1449059",
    "end": "1457460"
  },
  {
    "text": "sometimes use auto scaling groups that have a min and maximum capacity of one right you can just run an auto scaling",
    "start": "1457460",
    "end": "1463700"
  },
  {
    "text": "group that's that always has like one instance in it and will do its job to just keep that instance a lie",
    "start": "1463700",
    "end": "1469220"
  },
  {
    "text": "and if it fails it will replace it with a new one but you always have like one machine up and running all the time and",
    "start": "1469220",
    "end": "1475460"
  },
  {
    "text": "it can also move from one AZ to the other if necessary right if you configure this auto scaling group multiply these let's all say a neat",
    "start": "1475460",
    "end": "1482690"
  },
  {
    "text": "trick now that ec2 supports instance recovery that's that's less common but it's still",
    "start": "1482690",
    "end": "1489620"
  },
  {
    "text": "something that's very useful to know because you can also relaunch one instance across multiple AZ's okay let's",
    "start": "1489620",
    "end": "1499580"
  },
  {
    "text": "have a quick look at the various flavors of scaling policies which we have so now",
    "start": "1499580",
    "end": "1509659"
  },
  {
    "text": "a scaling policy basically tells auto scaling when to change capacity okay there's three different ways to do it so",
    "start": "1509659",
    "end": "1515270"
  },
  {
    "text": "first of all you can tell it how many instances you want right I mean it's",
    "start": "1515270",
    "end": "1520640"
  },
  {
    "text": "fairly static it's also useful especially if you have like schedule scaling right so if I want to have like",
    "start": "1520640",
    "end": "1528860"
  },
  {
    "text": "an intranet application from ice cream shop I can probably shut it down at night and as soon as I open up again",
    "start": "1528860",
    "end": "1535520"
  },
  {
    "text": "I can have a schedule scaling it's getting a scale out that actually increases decides my auto scaling group",
    "start": "1535520",
    "end": "1540950"
  },
  {
    "text": "and then sets these our capacity to one or two so that I'm good to go for the day and then it's business wines down it",
    "start": "1540950",
    "end": "1548150"
  },
  {
    "text": "can shut everything down go back to zero just to save cost outside of of",
    "start": "1548150",
    "end": "1553730"
  },
  {
    "text": "scheduled scaling does this probably some we don't see as frequently unless",
    "start": "1553730",
    "end": "1559130"
  },
  {
    "text": "you're integrating with another kind of management layer that already knows exactly how much capacity things should",
    "start": "1559130",
    "end": "1564650"
  },
  {
    "text": "be there then is also one thing to just really tell the auto scaling API how many exactly you need and we'll take",
    "start": "1564650",
    "end": "1570650"
  },
  {
    "text": "care of that what we see more often is that people asked for a fixed number of",
    "start": "1570650",
    "end": "1575900"
  },
  {
    "text": "instances to be added but you can also add a certain add or remove a certain percentage of the middle instances that",
    "start": "1575900",
    "end": "1583220"
  },
  {
    "text": "you have right now so depending on how fast you scale how how fast you",
    "start": "1583220",
    "end": "1589429"
  },
  {
    "text": "anticipate you need to scale and you can choose one or the other scaling on a schedule is very useful",
    "start": "1589429",
    "end": "1597740"
  },
  {
    "start": "1596000",
    "end": "1596000"
  },
  {
    "text": "it's useful for things like batch processing probably not as used for for web loads unless he has something",
    "start": "1597740",
    "end": "1604890"
  },
  {
    "text": "that's very predictable so for example people probably go and get ice cream",
    "start": "1604890",
    "end": "1610010"
  },
  {
    "text": "around noon or maybe after work or probably like all around today on a",
    "start": "1610010",
    "end": "1615150"
  },
  {
    "text": "weekend right but probably not for breakfast so you can automatically anticipate that demand and have like a",
    "start": "1615150",
    "end": "1620670"
  },
  {
    "text": "schedule that says every weekday I don't know 11 a.m. just scale up a",
    "start": "1620670",
    "end": "1627180"
  },
  {
    "text": "little bit so that I'm prepared there's two different ways to do it there's a cron like syntax which you can use and",
    "start": "1627180",
    "end": "1635600"
  },
  {
    "text": "that buddy does yeah what it's supposed to do it's useful for recurring scaling",
    "start": "1635600",
    "end": "1641640"
  },
  {
    "text": "events you can use a cron like syntax and do something do a scale-up event like every second Monday for example or",
    "start": "1641640",
    "end": "1648600"
  },
  {
    "text": "like every day at quarter past 12:00 I don't know but you can also schedule",
    "start": "1648600",
    "end": "1655500"
  },
  {
    "text": "individual events up to 35 days in advance if you're planning like big launches or campaigns or whatever you",
    "start": "1655500",
    "end": "1663210"
  },
  {
    "text": "can anticipate that and scare the Alayna guns that's not available in the",
    "start": "1663210",
    "end": "1670170"
  },
  {
    "text": "management console in case you're looking for it but it's available in the CLI and in the SDK now most people",
    "start": "1670170",
    "end": "1679890"
  },
  {
    "text": "probably use auto scaling because of dynamic scaling policies and they just",
    "start": "1679890",
    "end": "1685650"
  },
  {
    "start": "1683000",
    "end": "1683000"
  },
  {
    "text": "trigger scale ins or scale outs based on demand and the demand is based just on",
    "start": "1685650",
    "end": "1691980"
  },
  {
    "text": "metrics and what it what it does it basically it allows you to define a number of different scaling policies so",
    "start": "1691980",
    "end": "1698910"
  },
  {
    "text": "scale up a little bit get up hard scale out scale and scale and very quickly for example entitles to a map those two",
    "start": "1698910",
    "end": "1706080"
  },
  {
    "text": "changes in the metrics and certain levels of changing metrics those metrics",
    "start": "1706080",
    "end": "1712230"
  },
  {
    "start": "1710000",
    "end": "1710000"
  },
  {
    "text": "come from Amazon Cloud Watch so if you have ec2 instances you get",
    "start": "1712230",
    "end": "1717540"
  },
  {
    "text": "those metrics for free anyway they're collected on a regular basis you collect",
    "start": "1717540",
    "end": "1723570"
  },
  {
    "text": "metrics on CPU usage that's probably the most common one that's used with auto scaling but you can also monitor network",
    "start": "1723570",
    "end": "1729360"
  },
  {
    "text": "traffic and so on and once you have a metric it could be a custom metric as well so you can put in an application",
    "start": "1729360",
    "end": "1735420"
  },
  {
    "text": "level Petric into cloud watch and then use that for all the scaling as well as soon",
    "start": "1735420",
    "end": "1740880"
  },
  {
    "text": "as you have them identified the metric you can define an alarm which basically means you set a certain threshold at",
    "start": "1740880",
    "end": "1746130"
  },
  {
    "text": "which a scaling policy should apply and as soon as the alarm changes its state",
    "start": "1746130",
    "end": "1752660"
  },
  {
    "text": "yeah it will trigger your alarm or you can you can define that the alarm needs",
    "start": "1752660",
    "end": "1760020"
  },
  {
    "text": "the alarm threshold needs to be breached for a certain certain number of periods for example for five minutes in a row",
    "start": "1760020",
    "end": "1766049"
  },
  {
    "text": "and only then start scaling because you probably don't want to scale like in every spike in CPU utilization how do",
    "start": "1766049",
    "end": "1775559"
  },
  {
    "start": "1773000",
    "end": "1773000"
  },
  {
    "text": "you sell arms work all of the instances in the auto scaling group emit metrics",
    "start": "1775559",
    "end": "1782220"
  },
  {
    "text": "right away which allows you for example to get the average CPU utilization for",
    "start": "1782220",
    "end": "1787440"
  },
  {
    "text": "the whole auto scaling group you don't need to know which instances are in there you just need to know the name of the group you can ask cloud watch it",
    "start": "1787440",
    "end": "1793500"
  },
  {
    "text": "will tell you what the current average maximum and so on is and then as those",
    "start": "1793500",
    "end": "1801030"
  },
  {
    "text": "metrics are collected in cloud watch you can define an alarm that fires whenever like the CPU utilization goes up to high",
    "start": "1801030",
    "end": "1808549"
  },
  {
    "text": "this alarm you can then connect to an auto scaling policy as well as to SNS notifications and so on and when does",
    "start": "1808549",
    "end": "1816299"
  },
  {
    "text": "when is scaling policy fires it triggers a so called scaling event and that's when you tell the auto scaling group I",
    "start": "1816299",
    "end": "1822690"
  },
  {
    "text": "want to have 10% more instances or I want to have two instances less than it currently have and when that happens",
    "start": "1822690",
    "end": "1831630"
  },
  {
    "text": "geniuses are brought online they're added to the group so crowd watch starts",
    "start": "1831630",
    "end": "1837929"
  },
  {
    "text": "collecting metrics for those instances as well so at this point you should see like a drop in the CPU utilization and",
    "start": "1837929",
    "end": "1843539"
  },
  {
    "text": "the instance is registered with the load balancer now let's look at a quick",
    "start": "1843539",
    "end": "1848549"
  },
  {
    "text": "example to see how that behaves over time",
    "start": "1848549",
    "end": "1852740"
  },
  {
    "text": "just covering CP utilization and I want to scale up whenever I'm at like 62%",
    "start": "1855110",
    "end": "1862680"
  },
  {
    "text": "that's not like that so glove watch will keep monitoring CP",
    "start": "1862680",
    "end": "1868440"
  },
  {
    "text": "utilization across my whole fleet and at this point we'll notice yeah okay",
    "start": "1868440",
    "end": "1874340"
  },
  {
    "text": "it doesn't fit so it will actually trigger the alarm state but I've set my",
    "start": "1874340",
    "end": "1880950"
  },
  {
    "text": "alarm to not fire right away but I've defined it to fire like two minutes later because I want to make sure that I",
    "start": "1880950",
    "end": "1888480"
  },
  {
    "text": "don't see just a little bit of spike for just five seconds launch new instance right because by the time this is",
    "start": "1888480",
    "end": "1893700"
  },
  {
    "text": "launched everything might be over again and this time is the evaluation period",
    "start": "1893700",
    "end": "1899460"
  },
  {
    "text": "that's something you define when you define the alarm and now once it is done you'll raise the scaling event so auto",
    "start": "1899460",
    "end": "1906090"
  },
  {
    "text": "scaling group will add certain number of instances and it will then wait a",
    "start": "1906090",
    "end": "1912630"
  },
  {
    "text": "certain amount of time to give the instance is actually a chance to get spun up to get the web service up and",
    "start": "1912630",
    "end": "1919290"
  },
  {
    "text": "running before you will actually start to see a decrease in the CPU utilization because it will take in a bit of time to",
    "start": "1919290",
    "end": "1925500"
  },
  {
    "text": "get the instances up and running okay take one minute can take five depending on how much you load how big your ami is",
    "start": "1925500",
    "end": "1930620"
  },
  {
    "text": "right and you can specify the cooldown",
    "start": "1930620",
    "end": "1935700"
  },
  {
    "text": "as a default for the group or you can also specify a cool-down just for a particular scaling action and",
    "start": "1935700",
    "end": "1947510"
  },
  {
    "text": "one challenge here is that during this whole period during a point that the alarm triggered and we started",
    "start": "1947510",
    "end": "1953280"
  },
  {
    "text": "evaluating and the time the cooldown period is over there aren't any more additional alarms or additional scaling",
    "start": "1953280",
    "end": "1960150"
  },
  {
    "text": "actions possible this makes it challenging sometimes to use let's say",
    "start": "1960150",
    "end": "1965490"
  },
  {
    "text": "scaling based on different metrics right because while CP utilization might be",
    "start": "1965490",
    "end": "1970680"
  },
  {
    "text": "fine some other metric that you might want to what modern wise model monitor might be in bridge for example but",
    "start": "1970680",
    "end": "1977340"
  },
  {
    "text": "nothing will happen during this amount of time and it could be worth because",
    "start": "1977340",
    "end": "1983280"
  },
  {
    "text": "there are cases where maybe it doesn't work out as nicely right and you just bring the capacity on",
    "start": "1983280",
    "end": "1988830"
  },
  {
    "text": "in time but we're utilization goes through the roof right and if we actually looked at when does",
    "start": "1988830",
    "end": "1996840"
  },
  {
    "text": "alarm would have fired like two minutes later because we evaluate everything for two minutes it might have been way too late we were almost like 90 percent",
    "start": "1996840",
    "end": "2004070"
  },
  {
    "text": "something like that which might be too close to actually launched disorient capacity and bring it online before you",
    "start": "2004070",
    "end": "2009799"
  },
  {
    "text": "run out of capacity before customers start seeing errors and that's the main",
    "start": "2009799",
    "end": "2016309"
  },
  {
    "text": "reason why the auto scaling team launched step scaling policies in the last year because they address this",
    "start": "2016309",
    "end": "2023809"
  },
  {
    "text": "particular challenge and they give you a bit more flexibility on how how",
    "start": "2023809",
    "end": "2028880"
  },
  {
    "text": "aggressive you want to react to breaches a new metrics now in the scape scaling",
    "start": "2028880",
    "end": "2035630"
  },
  {
    "start": "2034000",
    "end": "2034000"
  },
  {
    "text": "policies you can't define just one step you can say okay I'm a breach of this CPU monitoring metrics so I want to add",
    "start": "2035630",
    "end": "2041360"
  },
  {
    "text": "like ten percent but you can actually define multiple steps depending on how",
    "start": "2041360",
    "end": "2046370"
  },
  {
    "text": "much you're over your target so if I said like sixty something percent right and it monitor is like eighty percent",
    "start": "2046370",
    "end": "2053169"
  },
  {
    "text": "then probably the reaction will be different than when it monitored like sixty five percent right then I don't",
    "start": "2053169",
    "end": "2058638"
  },
  {
    "text": "have to react as aggressively and as quickly and the other thing is that the",
    "start": "2058639",
    "end": "2064099"
  },
  {
    "text": "scaling policies are evaluated continuously so there is no cooldown period that blocks the whole thing so if",
    "start": "2064099",
    "end": "2071540"
  },
  {
    "text": "like for example I breach the the threshold I'm at sixty five percent utilization it will start scaling out",
    "start": "2071540",
    "end": "2078230"
  },
  {
    "text": "like somewhat gently right but maybe done it go through the roof it is like eighty eighty five percent maybe then",
    "start": "2078230",
    "end": "2083990"
  },
  {
    "text": "another rule would kick in and start adding much more capacity so that I can anticipate that growth and I don't run",
    "start": "2083990",
    "end": "2091398"
  },
  {
    "text": "the risk that my capacity comes online too late and since it doesn't lock",
    "start": "2091399",
    "end": "2097900"
  },
  {
    "text": "additional alarms can fire at the same time which means that now you also have the opportunity to use additional",
    "start": "2097900",
    "end": "2104990"
  },
  {
    "text": "metrics for your scaling policies as well because they are no longer well block each other out you can define them",
    "start": "2104990",
    "end": "2112369"
  },
  {
    "text": "using these CLI API and also in the console right now that's actually the default experience in the console",
    "start": "2112369",
    "end": "2118569"
  },
  {
    "text": "because you can now define multiple steps multiple actions that you can take as",
    "start": "2118569",
    "end": "2124460"
  },
  {
    "text": "you see here for example with CP utilizations between 30 and 50 let's say I'm just going to add like single",
    "start": "2124460",
    "end": "2130430"
  },
  {
    "text": "instance if it's like between 50 and 70 I'm gonna probably add to two more right",
    "start": "2130430",
    "end": "2137329"
  },
  {
    "text": "but when it's above 70 I'm just going to add four because it seems to be growing and the actual value is still matter but",
    "start": "2137329",
    "end": "2144789"
  },
  {
    "text": "what matters is dead now you can actually figure out like where to place",
    "start": "2144789",
    "end": "2150140"
  },
  {
    "text": "the thresholds you can have not only one but multiple thresholds and make sure that you pick the right strategy to",
    "start": "2150140",
    "end": "2156740"
  },
  {
    "text": "actually to actually address the metrics that you see over here two simple",
    "start": "2156740",
    "end": "2164990"
  },
  {
    "start": "2162000",
    "end": "2162000"
  },
  {
    "text": "scaling policies used to be the only option till a couple months ago they always have the same reaction so",
    "start": "2164990",
    "end": "2172279"
  },
  {
    "text": "you can address - like how bad it is how bad your CP utilization looks right now and it locks everything up they're",
    "start": "2172279",
    "end": "2182630"
  },
  {
    "text": "easy to understand but typically steps getting policies are the better choice",
    "start": "2182630",
    "end": "2187730"
  },
  {
    "text": "because they continuously react which allows them to react much much faster and give you more options because now",
    "start": "2187730",
    "end": "2195680"
  },
  {
    "text": "you can actually have multiple metrics and so on they don't support the cool",
    "start": "2195680",
    "end": "2201349"
  },
  {
    "text": "down configurations even if you provide one it's not taking it to account but they have a warmup period instead it",
    "start": "2201349",
    "end": "2208099"
  },
  {
    "text": "sounds pretty similar but the implementation is a bit different so while the kuna cool down basically meant",
    "start": "2208099",
    "end": "2214579"
  },
  {
    "text": "that no scaling action took place and whole group was basically locked for scaling until the cooldown period was",
    "start": "2214579",
    "end": "2219859"
  },
  {
    "text": "over the warmup doesn't lock anything it just means that the new instance is",
    "start": "2219859",
    "end": "2224960"
  },
  {
    "text": "brought up and then you can specify a number of seconds it takes to get this instance into service and during this",
    "start": "2224960",
    "end": "2231319"
  },
  {
    "text": "time cloud watch won't collect any metrics for this particular instance right yeah idea behind that is the",
    "start": "2231319",
    "end": "2238160"
  },
  {
    "text": "instance might take a while to warm up until the caches are filled the servers are all running the daemons are running before you will actually see an effect",
    "start": "2238160",
    "end": "2245089"
  },
  {
    "text": "on your cloud watch metric right and you don't want to risk triggering another Sailing step just before just because",
    "start": "2245089",
    "end": "2252920"
  },
  {
    "text": "you're like a second away from actually getting the new web server on",
    "start": "2252920",
    "end": "2257950"
  },
  {
    "text": "so if in doubt you step scaling policies I guess that's that's the key message",
    "start": "2258640",
    "end": "2263780"
  },
  {
    "text": "here I think that's something that many people aren't aware of especially if they've been using auto-scaling for a while because they are fairly new but",
    "start": "2263780",
    "end": "2270830"
  },
  {
    "text": "they're usually the better choice all",
    "start": "2270830",
    "end": "2275960"
  },
  {
    "text": "right we've talked about how to scale in how to scale out when to trigger that how to trigger that we talked a bit about",
    "start": "2275960",
    "end": "2281090"
  },
  {
    "text": "launch configurations how we can pick the right instance how auto-scaling",
    "start": "2281090",
    "end": "2286490"
  },
  {
    "text": "decides which kind of instance to launch now let's talk a bit about what the instance lifecycle looks like so",
    "start": "2286490",
    "end": "2298130"
  },
  {
    "text": "basically you have a group that's coming along you have instances that are inside that group that are running then some kind of",
    "start": "2298130",
    "end": "2304190"
  },
  {
    "text": "scale out demand occurs even whether that's like triggered by cloud watch or triggered on a schedule it means that",
    "start": "2304190",
    "end": "2310940"
  },
  {
    "text": "the auto scaling group will be told okay you need to launch additional capacity when it happens it creates a new",
    "start": "2310940",
    "end": "2317810"
  },
  {
    "text": "instance that's in pending state right so it doesn't collect metrics it doesn't register it to the elbe until that",
    "start": "2317810",
    "end": "2325940"
  },
  {
    "text": "instance is actually up and running until it's in service and if it then if",
    "start": "2325940",
    "end": "2331040"
  },
  {
    "text": "then the health check works it stays and service is registered with ELB for example until well until as fails a",
    "start": "2331040",
    "end": "2340010"
  },
  {
    "text": "health check or until a scaling event occurs and then the instance moves into the terminating state and the terminated",
    "start": "2340010",
    "end": "2345470"
  },
  {
    "text": "state ok fairly straightforward state machine now if you want to take more control you can actually hook into those",
    "start": "2345470",
    "end": "2353060"
  },
  {
    "text": "life cycle transitions that gives you quite a bit of control over how exactly",
    "start": "2353060",
    "end": "2359420"
  },
  {
    "text": "instances are launched and terminated why would you want to do this there's a",
    "start": "2359420",
    "end": "2365420"
  },
  {
    "start": "2363000",
    "end": "2363000"
  },
  {
    "text": "couple of common things that people always do or ask how to do it for example I have like a pool of elastic IP",
    "start": "2365420",
    "end": "2371630"
  },
  {
    "text": "addresses whatever launched new machine I want to assign one right that's something that you could do on startup",
    "start": "2371630",
    "end": "2376869"
  },
  {
    "text": "or you want to register your new instances was like I don't know your own DNS subscribe them as workers to your",
    "start": "2376869",
    "end": "2385280"
  },
  {
    "text": "queue for example or probably the most common case and most common requirement I've heard is",
    "start": "2385280",
    "end": "2391550"
  },
  {
    "text": "that oh we have locked files on the insula storage we want to save them - as three before the instance is terminated",
    "start": "2391550",
    "end": "2396640"
  },
  {
    "text": "very common thing that's something you can you can finish or you can achieve",
    "start": "2396640",
    "end": "2402370"
  },
  {
    "text": "using these lifecycle hooks how does it work well that's what we've just seen it",
    "start": "2402370",
    "end": "2408350"
  },
  {
    "start": "2405000",
    "end": "2405000"
  },
  {
    "text": "basically as soon as you configure lifecycle hooks either for termination or for launch ins for launches it will",
    "start": "2408350",
    "end": "2415820"
  },
  {
    "text": "add a couple of different states so for example if you want to have a life cycle",
    "start": "2415820",
    "end": "2421670"
  },
  {
    "text": "hook on instance launches the instances aren't launched right away but they're",
    "start": "2421670",
    "end": "2427010"
  },
  {
    "text": "put into a pending white state you can keep them there basically as long as you like by default if they're not if you",
    "start": "2427010",
    "end": "2434270"
  },
  {
    "text": "don't reply back to auto scaling after like sixty minutes it will terminate it because the things that something went wrong but basically you have a lot of",
    "start": "2434270",
    "end": "2442310"
  },
  {
    "text": "time to actually do something to the instance like install software assign VIPs attach EBS volumes from a snapshot",
    "start": "2442310",
    "end": "2449870"
  },
  {
    "text": "for example if you like if you want to distribute files to Dwight and then once you feel that you're done you tell auto",
    "start": "2449870",
    "end": "2456740"
  },
  {
    "text": "scaling either to continue then the instance will going service will register with ELB and so on or you can",
    "start": "2456740",
    "end": "2462470"
  },
  {
    "text": "tell it to abandon the livestock to hook and then it will go into terminating right away but if anything goes wrong",
    "start": "2462470",
    "end": "2468050"
  },
  {
    "text": "and the same is possible if you take care of terminations it the",
    "start": "2468050",
    "end": "2473960"
  },
  {
    "text": "answers will enter a terminating wait state that basically gives you time to take care of your log files move them",
    "start": "2473960",
    "end": "2480020"
  },
  {
    "text": "into a persistent storage for example and when you're done you just tell it and it will terminate the instance the",
    "start": "2480020",
    "end": "2486560"
  },
  {
    "text": "only thing to watch out for once it isn't terminating wait the only next state is terminating its terminated",
    "start": "2486560",
    "end": "2492500"
  },
  {
    "text": "right so you can't go back into an service so no matter what you do it will",
    "start": "2492500",
    "end": "2499040"
  },
  {
    "text": "always terminate later on how do you do it basically first you need to create a",
    "start": "2499040",
    "end": "2505130"
  },
  {
    "text": "target for the notification and as soon for example as a new instance launches",
    "start": "2505130",
    "end": "2510680"
  },
  {
    "text": "as a new instance would launch for example the pending wait state auto-scaling will send a notification to",
    "start": "2510680",
    "end": "2516830"
  },
  {
    "text": "the config atari and that can be an SNS topic or sqs queue obviously for August",
    "start": "2516830",
    "end": "2523670"
  },
  {
    "text": "the autoscanning service to do that it needs to have permissions to access this particular queue or topic into your",
    "start": "2523670",
    "end": "2530030"
  },
  {
    "text": "account so you need to define an IM role that the auto-scaling service can assume which gives it the permission to write",
    "start": "2530030",
    "end": "2536660"
  },
  {
    "text": "into this particular topic and then you associate the lifecycle hook basically",
    "start": "2536660",
    "end": "2542809"
  },
  {
    "text": "the name with your auto scaling group tell it when it should fire so either launch or in termination or actually both and then you need to write the code",
    "start": "2542809",
    "end": "2551530"
  },
  {
    "text": "so that's easy said but also easy done this is what the notifications look like",
    "start": "2551530",
    "end": "2557299"
  },
  {
    "start": "2554000",
    "end": "2554000"
  },
  {
    "text": "that you get those should give you some ideas of what you can do in your lifecycle hook first of all it tells you",
    "start": "2557299",
    "end": "2564920"
  },
  {
    "text": "which auto scaling group this is about so it gives you an opportunity to hook the same system into multiple auto",
    "start": "2564920",
    "end": "2569990"
  },
  {
    "text": "scaling group it is useful it tells you the name of the hook so you can choose",
    "start": "2569990",
    "end": "2575540"
  },
  {
    "text": "the behavior based on that it will tell you the instance ID so you can immediately act on that and for example",
    "start": "2575540",
    "end": "2581690"
  },
  {
    "text": "assign an EAP or attach EBS volume and it tells you which lifecycle transition",
    "start": "2581690",
    "end": "2587390"
  },
  {
    "text": "you're in right now in this case it's just launching an instance versus terminating so you can use the same hook for those if you like and the important",
    "start": "2587390",
    "end": "2595280"
  },
  {
    "text": "thing here is the life cycle action token this is basically a unique ID",
    "start": "2595280",
    "end": "2600430"
  },
  {
    "text": "which you need to pass back to the auto scaling group whenever you want to continue or abandon the process or other",
    "start": "2600430",
    "end": "2608980"
  },
  {
    "text": "option if you say 60 minutes is not enough I need more time to keep auto",
    "start": "2608980",
    "end": "2614480"
  },
  {
    "text": "scaling from terminating that pending instance you can just tell it okay I've made progress but it still needs some",
    "start": "2614480",
    "end": "2620569"
  },
  {
    "text": "more time here's the token it will give you some more time in addition to finished whatever work you've you've",
    "start": "2620569",
    "end": "2626540"
  },
  {
    "text": "been doing okay and how does writing a",
    "start": "2626540",
    "end": "2632390"
  },
  {
    "start": "2629000",
    "end": "2629000"
  },
  {
    "text": "life cycle hook look like you can pick any programming language you like doesn't matter you just need to extract",
    "start": "2632390",
    "end": "2637609"
  },
  {
    "text": "the information you need you need at least a token so you can talk back to auto-scaling you probably need the",
    "start": "2637609",
    "end": "2643640"
  },
  {
    "text": "instance ID so that you know which instance you're working with and some other parameters",
    "start": "2643640",
    "end": "2650020"
  },
  {
    "text": "remember the token guess is useful then do whatever you need to do like move away log files",
    "start": "2650020",
    "end": "2657049"
  },
  {
    "text": "and then once you're done call complete lifecycle action passing into token to",
    "start": "2657049",
    "end": "2662449"
  },
  {
    "text": "tell auto-scaling when you're done and then it will move the instance into in-service state at this point if you",
    "start": "2662449",
    "end": "2670249"
  },
  {
    "text": "call complete lifecycle actually need to tell us whether to continue or abandon and depending on what you pass in there",
    "start": "2670249",
    "end": "2675890"
  },
  {
    "text": "it will execute additional lifecycle hooks or not because you can have multiple hooks on the same auto scaling",
    "start": "2675890",
    "end": "2681619"
  },
  {
    "text": "group for example if you have one hook that takes care of VIP is one of what takes care of EBS volumes you can",
    "start": "2681619",
    "end": "2687949"
  },
  {
    "text": "connect them to the same group and they will run one after the other basically but of course if one of them abandons",
    "start": "2687949",
    "end": "2694099"
  },
  {
    "text": "then the other one will be abandoned as well and the instance will terminate",
    "start": "2694099",
    "end": "2698799"
  },
  {
    "text": "okay you know now lifecycle hooks use SNS notifications or they use messages",
    "start": "2699699",
    "end": "2707059"
  },
  {
    "text": "in sqs queue but if you've been working with auto-scaling for a while you're",
    "start": "2707059",
    "end": "2712579"
  },
  {
    "text": "probably aware that auto-scaling has been supporting SNS notifications for other years so the question is how are",
    "start": "2712579",
    "end": "2720229"
  },
  {
    "text": "those different and the main difference is that the regular notifications that",
    "start": "2720229",
    "end": "2726349"
  },
  {
    "text": "auto-scaling sense to SNS they only get sent after something happened they get",
    "start": "2726349",
    "end": "2731630"
  },
  {
    "text": "sent after an instance has entered the in service State and is ready for use or after an instance has been terminated so",
    "start": "2731630",
    "end": "2739249"
  },
  {
    "text": "obviously if you care about your NOC files this will be too late so that's exactly when lifecycle hooks come in",
    "start": "2739249",
    "end": "2744409"
  },
  {
    "text": "because they allow you to actually influence the state transition enter a white state and they will tell you",
    "start": "2744409",
    "end": "2750169"
  },
  {
    "text": "before something happens you can actually anticipate what's going to come and react to that before it happens",
    "start": "2750169",
    "end": "2757009"
  },
  {
    "text": "versus the other notifications are mostly useful for auditing and keeping track keeping tabs on what's been going",
    "start": "2757009",
    "end": "2763279"
  },
  {
    "text": "on with your group alright coming back",
    "start": "2763279",
    "end": "2769339"
  },
  {
    "text": "to the overall lifecycle one thing that's worth calling out is that as I've",
    "start": "2769339",
    "end": "2774889"
  },
  {
    "text": "said before if you have an instance that is in the terminating weight State the only next possible state is terminating",
    "start": "2774889",
    "end": "2782059"
  },
  {
    "text": "right terminated so the answers will be gone basically so everything you need to do you can do a lot on that instance you",
    "start": "2782059",
    "end": "2788359"
  },
  {
    "text": "can try to keep it running by x10 by extending the time out that auto-scaling gives you and whatnot but",
    "start": "2788359",
    "end": "2794600"
  },
  {
    "text": "you can bring it back to life at some point is this well be terminated but there are cases when this is not desired",
    "start": "2794600",
    "end": "2801200"
  },
  {
    "text": "so for example if you notice that something weird has been going on on",
    "start": "2801200",
    "end": "2806450"
  },
  {
    "text": "your instance you want to do a bit of forensics or just want to have a look at the current state and so on you probably",
    "start": "2806450",
    "end": "2812390"
  },
  {
    "text": "don't want to have it in service right but you don't want it want it to be terminated because yeah you might be",
    "start": "2812390",
    "end": "2818750"
  },
  {
    "text": "able to use it and that's where another state comes in and that's the standby state and that pretty much does what it",
    "start": "2818750",
    "end": "2828109"
  },
  {
    "text": "says with the benefit that you can go back into the in-service State so that's",
    "start": "2828109",
    "end": "2833330"
  },
  {
    "text": "very useful if you just want to have a quick look at an instance you can basically tell it to enter standby there's an API command or a CLI command",
    "start": "2833330",
    "end": "2839510"
  },
  {
    "text": "then you can log into the distance for example have a look at what's going on the log files at the disk filling up",
    "start": "2839510",
    "end": "2845380"
  },
  {
    "text": "whatever is happening there you can even make changes then once you're done you can just exit the standby state again",
    "start": "2845380",
    "end": "2851210"
  },
  {
    "text": "and it will then once it goes back into the service state auto-scaling will",
    "start": "2851210",
    "end": "2857180"
  },
  {
    "text": "react read register this instance with the LD etc etc so that's another benefit",
    "start": "2857180",
    "end": "2866359"
  },
  {
    "text": "of auto-scaling dead it allows you to customize Thung is usually very",
    "start": "2866359",
    "end": "2872210"
  },
  {
    "text": "automated you can override launch configurations you can override lifecycle hooks gives you a lot of",
    "start": "2872210",
    "end": "2878810"
  },
  {
    "text": "opportunities to actually influence the behavior of the group now before we",
    "start": "2878810",
    "end": "2885619"
  },
  {
    "text": "start with Q&A I just wanted to do a brief outlook because we have a couple people that have been using auto scaling",
    "start": "2885619",
    "end": "2891369"
  },
  {
    "start": "2890000",
    "end": "2890000"
  },
  {
    "text": "but for those of you that haven't been using auto scaling that much there are",
    "start": "2891369",
    "end": "2896420"
  },
  {
    "text": "like two things I'd like to call out so first of all all of scaling works very well with spot instances I haven't",
    "start": "2896420",
    "end": "2902450"
  },
  {
    "text": "covered that right now but it's very straightforward and easy to use right so",
    "start": "2902450",
    "end": "2908750"
  },
  {
    "text": "all you need to do is basically create an auto scaling group associate that with a bid price and once you get once",
    "start": "2908750",
    "end": "2917720"
  },
  {
    "text": "you get the spot instances they will be launched it will be part of the auto scaling group which means if",
    "start": "2917720",
    "end": "2923360"
  },
  {
    "text": "fail for some other reason than the spot price changing they will be replaced and so on and it just allows you to save",
    "start": "2923360",
    "end": "2929840"
  },
  {
    "text": "cost because what's interesting here as well is that you can combine multiple",
    "start": "2929840",
    "end": "2934850"
  },
  {
    "text": "auto scaling groups you can have one that runs on on-demand instances and scale is fairly conservatively for",
    "start": "2934850",
    "end": "2940310"
  },
  {
    "text": "example and you can have another one that scales more aggressively based on spot instances right and tied them to",
    "start": "2940310",
    "end": "2946370"
  },
  {
    "text": "the same load balancer so if the load increases it will auto scale we try to",
    "start": "2946370",
    "end": "2952670"
  },
  {
    "text": "add more spot instances first for example because they're cheaper and you've configured at the point but when",
    "start": "2952670",
    "end": "2958220"
  },
  {
    "text": "for example when it can't get any more responses because the price has risen or I don't know when that happens then you",
    "start": "2958220",
    "end": "2970430"
  },
  {
    "text": "can automatically or you will automatically large additional on-demand instances to fulfill that demand for",
    "start": "2970430",
    "end": "2975830"
  },
  {
    "text": "capacity that's one option to do and one thing to do and the other useful thing",
    "start": "2975830",
    "end": "2980840"
  },
  {
    "text": "is that and I've alluded to that earlier is that you can handle things like rolling deployments using auto scaling groups write a one straightforward",
    "start": "2980840",
    "end": "2988220"
  },
  {
    "text": "example is to just update the launch configuration replaced it with a new one and then just terminating the instances",
    "start": "2988220",
    "end": "2994070"
  },
  {
    "text": "one by one everything is everyone is terminated will be replaced with the new one with the new AMI then you're good to",
    "start": "2994070",
    "end": "2999980"
  },
  {
    "text": "go but also for example if you use code deploy if you set that up as I've shown",
    "start": "2999980",
    "end": "3006490"
  },
  {
    "text": "earlier if you connect the auto scaling group to code deployed directly then you can also configure a rolling update",
    "start": "3006490",
    "end": "3012490"
  },
  {
    "text": "across your auto scaling fleet without having to rely on auto scaling to",
    "start": "3012490",
    "end": "3017560"
  },
  {
    "text": "recycle instances alright that's the end",
    "start": "3017560",
    "end": "3025120"
  },
  {
    "text": "of the presentation so thank you very much for listening getting up early",
    "start": "3025120",
    "end": "3031619"
  },
  {
    "text": "you",
    "start": "3032490",
    "end": "3034550"
  }
]