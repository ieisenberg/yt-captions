[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "all right well they'll get started my name is Tony Patterson I work in the",
    "start": "0",
    "end": "6930"
  },
  {
    "text": "database engineering team at AWS I have my friend Ian here he's gonna join us",
    "start": "6930",
    "end": "12990"
  },
  {
    "text": "later and we're gonna talk about databases and which database to use when",
    "start": "12990",
    "end": "18140"
  },
  {
    "text": "it's a it's a loaded question we've got a lot a lot of loaded answers for you so",
    "start": "18140",
    "end": "25800"
  },
  {
    "start": "25000",
    "end": "37000"
  },
  {
    "text": "one of the things we're not gonna start with is we're not gonna start with these generalities so we're not gonna say well",
    "start": "25800",
    "end": "31260"
  },
  {
    "text": "if you need relational or non relation or sequel no sequel we're just gonna dive into some more detailed stuff the",
    "start": "31260",
    "end": "39540"
  },
  {
    "start": "37000",
    "end": "61000"
  },
  {
    "text": "idea is that most databases that were ever developed built invented we're",
    "start": "39540",
    "end": "45030"
  },
  {
    "text": "built for a purpose and when you find a database which was built for the purpose",
    "start": "45030",
    "end": "51030"
  },
  {
    "text": "and that your application really needs that stuff then you have the best match so when your application needs meet the",
    "start": "51030",
    "end": "58140"
  },
  {
    "text": "purposes of the database when it was invented you have a good match so this",
    "start": "58140",
    "end": "64228"
  },
  {
    "start": "61000",
    "end": "108000"
  },
  {
    "text": "being a database conversation and it's being about storing retrieving and processing data let's take a look at the",
    "start": "64229",
    "end": "72030"
  },
  {
    "text": "data first so usually the things that I look at when looking at databases and",
    "start": "72030",
    "end": "78119"
  },
  {
    "text": "which database to use in the application I look at the application with respect to the data and the shape of the data in",
    "start": "78119",
    "end": "86009"
  },
  {
    "text": "the size of the data and the computational requirements for that data and these are really three important",
    "start": "86009",
    "end": "92880"
  },
  {
    "text": "things that help you decide which database is the right database for your application so we'll spend some time",
    "start": "92880",
    "end": "100560"
  },
  {
    "text": "talking about these three things and then we'll dive into more details so",
    "start": "100560",
    "end": "107479"
  },
  {
    "text": "shape when it comes to databases you",
    "start": "107479",
    "end": "115350"
  },
  {
    "start": "108000",
    "end": "450000"
  },
  {
    "text": "know relational databases have been around a long time since the 70s and they were built around the rope so the",
    "start": "115350",
    "end": "122670"
  },
  {
    "text": "concept of that row is a fundamental component of an RDD a mash you know if",
    "start": "122670",
    "end": "129270"
  },
  {
    "text": "you go read the papers from the 70s you know they talk about the top pole which is the row Rowe has many columns but rose doors are",
    "start": "129270",
    "end": "136400"
  },
  {
    "text": "generally built and optimized for doing things at the rural level so the smallest unit of operation is a troll",
    "start": "136400",
    "end": "143209"
  },
  {
    "text": "you get the rule you update the row you delete the row you insert the row and and most of the stuff is you know based",
    "start": "143209",
    "end": "149239"
  },
  {
    "text": "on that so then you have your records which in the form of a row and a group of rows most applications that were",
    "start": "149239",
    "end": "157099"
  },
  {
    "text": "built for payroll and HR and Finance and so on model the data in form of rows",
    "start": "157099",
    "end": "162590"
  },
  {
    "text": "which was great and it had good performance when you wanted to basically",
    "start": "162590",
    "end": "168650"
  },
  {
    "text": "deal with that record like a new employee joins you create a record for it in the record that fits in this row",
    "start": "168650",
    "end": "176989"
  },
  {
    "text": "and all the columns are there and you operate at the row and then years goes by and people have lots of data in their",
    "start": "176989",
    "end": "182719"
  },
  {
    "text": "databases and they're doing queries now people want to do sums and aggregations to figure out that well how much stuff",
    "start": "182719",
    "end": "189620"
  },
  {
    "text": "did we sell last month or last three months or last year or last quarter so you start doing a lot of query processing and one of the interesting",
    "start": "189620",
    "end": "196370"
  },
  {
    "text": "things about query processing is that usually don't run a query that requires the entire row because for example",
    "start": "196370",
    "end": "203720"
  },
  {
    "text": "you're looking at the sales figures so you want to sum of all the sales or you want to do sum of all the salaries or",
    "start": "203720",
    "end": "209840"
  },
  {
    "text": "something like that maybe you need two columns or three columns so doing the analytics workloads on row store became",
    "start": "209840",
    "end": "217329"
  },
  {
    "text": "expensive and inefficient so that's why column store was invented and column store stores the data in form of a",
    "start": "217329",
    "end": "224930"
  },
  {
    "text": "column it takes the row it breaks it up and stores each column separately and this is gives you great performance and",
    "start": "224930",
    "end": "232040"
  },
  {
    "text": "efficiency when you're doing a query which goes out and gets 10 million or a",
    "start": "232040",
    "end": "237169"
  },
  {
    "text": "billion rows but only interested in the one column which has the sales figures and you're doing a sum or a min or a max",
    "start": "237169",
    "end": "243530"
  },
  {
    "text": "so you only work at the subset of the data that you need and that's why you",
    "start": "243530",
    "end": "248689"
  },
  {
    "text": "know when you do aggregations scans joins column or databases work really well and then we have key value stores",
    "start": "248689",
    "end": "255709"
  },
  {
    "text": "and it gets a little simpler because key value stores were invented to store keys and values where you are doing queries",
    "start": "255709",
    "end": "263870"
  },
  {
    "text": "based on the key right and the idea was I need to do a lot of key value lookups",
    "start": "263870",
    "end": "268970"
  },
  {
    "text": "and I need them to be really really fast and I want them to be always fast regardless of the size of the data and",
    "start": "268970",
    "end": "275900"
  },
  {
    "text": "that's one of the reasons key value stores are used in so many workloads where you have vast amounts of particle",
    "start": "275900",
    "end": "282229"
  },
  {
    "text": "data where you need like I need every time I go get a value using a key I need",
    "start": "282229",
    "end": "288110"
  },
  {
    "text": "that to happen in three millisecond whether I have a billion or a hundred billion or a trillion items in my table",
    "start": "288110",
    "end": "294199"
  },
  {
    "text": "I need that consistent performance document stores were invented to hold",
    "start": "294199",
    "end": "299270"
  },
  {
    "text": "guess what document there's a lot of data which fits really nicely in the",
    "start": "299270",
    "end": "305120"
  },
  {
    "text": "form of a document so for example if you're building a an application to keep track of patient records well a patient",
    "start": "305120",
    "end": "312800"
  },
  {
    "text": "doesn't fit in a row you know every time you go to the doctors they take notes and stuff that's a lot of data is",
    "start": "312800",
    "end": "318379"
  },
  {
    "text": "generated it doesn't really lend itself to the row format so trying to define a",
    "start": "318379",
    "end": "323690"
  },
  {
    "text": "person and their medical history in rows is just not efficient",
    "start": "323690",
    "end": "329810"
  },
  {
    "text": "whereas you can say a patient is a collection of document and we add to the document another document every time you",
    "start": "329810",
    "end": "335990"
  },
  {
    "text": "go see the doctor so it becomes an easy way of modeling things which is a document so document",
    "start": "335990",
    "end": "341990"
  },
  {
    "text": "stores are in it for that they're really good for storing documents indexing and storing documents querying documents on",
    "start": "341990",
    "end": "348800"
  },
  {
    "text": "various properties of the document graph store well when you need to persist",
    "start": "348800",
    "end": "358330"
  },
  {
    "text": "relationships graph store is a really good thing now a lot of people say but relational databases should be really",
    "start": "358330",
    "end": "365180"
  },
  {
    "text": "good for relations right then the answer is well no graph is not really a relation graph is a graph and so the",
    "start": "365180",
    "end": "372949"
  },
  {
    "text": "interesting thing about graph store is that it actually persists the relationship so that it's really fast at",
    "start": "372949",
    "end": "380930"
  },
  {
    "text": "retrieving and processing relationship data so social graphs recommendation",
    "start": "380930",
    "end": "387259"
  },
  {
    "text": "things like that fits really well in a graph store and then time series is of course is the data which is sequenced in",
    "start": "387259",
    "end": "393860"
  },
  {
    "text": "time you almost never updated it's always an insert workload and what is a",
    "start": "393860",
    "end": "399139"
  },
  {
    "text": "good time series data stock data what was the price of particular stock at a particular second",
    "start": "399139",
    "end": "405790"
  },
  {
    "text": "during the day and you have one of these records every second forever right and",
    "start": "405790",
    "end": "411190"
  },
  {
    "text": "then you usually look at time series data not based on a particular point in",
    "start": "411190",
    "end": "416710"
  },
  {
    "text": "time but usually a set of computation applied to a range of data like what was",
    "start": "416710",
    "end": "422590"
  },
  {
    "text": "the min max an average CPU utilization for my database servers in the last",
    "start": "422590",
    "end": "427780"
  },
  {
    "text": "three days right so you go get the range of data you apply the computation and you return",
    "start": "427780",
    "end": "432970"
  },
  {
    "text": "the answer so the job of a time series store is to return answers not give you",
    "start": "432970",
    "end": "438280"
  },
  {
    "text": "the data so you can go compute it later by non-structured store is exactly that",
    "start": "438280",
    "end": "443770"
  },
  {
    "text": "it's for storing unstructured data where you impose the structure on the data yourself sighs the interesting thing",
    "start": "443770",
    "end": "456100"
  },
  {
    "start": "450000",
    "end": "668000"
  },
  {
    "text": "about science is that the size add limit is far more interesting than this current size of your database and what",
    "start": "456100",
    "end": "463060"
  },
  {
    "text": "do we mean by size that limit there are some workloads that generate data where",
    "start": "463060",
    "end": "468370"
  },
  {
    "text": "the size of the data data is fairly well bounded for example if you build an app",
    "start": "468370",
    "end": "474490"
  },
  {
    "text": "to track employees of a company and said well we have 10,000 employees we have",
    "start": "474490",
    "end": "480760"
  },
  {
    "text": "aspirations to grow and have hundred thousand employees okay so you're gonna have 10x more data a hundred thousand",
    "start": "480760",
    "end": "487030"
  },
  {
    "text": "you're not gonna go and and hire every person on the planet right so the size of the data is fairly well bounded as",
    "start": "487030",
    "end": "494020"
  },
  {
    "text": "opposed to something like I'm gonna keep track of sensors in in a particular car",
    "start": "494020",
    "end": "499990"
  },
  {
    "text": "and cars used to have 1012 sensors 40 years ago now they have thousands of",
    "start": "499990",
    "end": "506320"
  },
  {
    "text": "sensors and probably self-driving cars will have tens of thousands or hundreds of thousands of sensors per car it is an",
    "start": "506320",
    "end": "513430"
  },
  {
    "text": "unbounded problem you have no idea how big it's going to be but it'll probably be big and so that is a really important",
    "start": "513430",
    "end": "520990"
  },
  {
    "text": "element when picking databases I'm working set size and retrieval size partitioning versus non partitioning",
    "start": "520990",
    "end": "527470"
  },
  {
    "text": "there are some workloads that are lend themselves really well for being partitioned a bowl because you store the",
    "start": "527470",
    "end": "532810"
  },
  {
    "text": "data based on certain partitioning keys and you compute the data based on the same",
    "start": "532810",
    "end": "538440"
  },
  {
    "text": "partitioning keys and a good example is like the location of a car the location of my car",
    "start": "538440",
    "end": "544410"
  },
  {
    "text": "whoever it is has nothing to do with the location of your car so it's a nicely partition above thing each data element",
    "start": "544410",
    "end": "549899"
  },
  {
    "text": "is its own thing as opposed to the payroll data is not really partition above because you kind of look at an",
    "start": "549899",
    "end": "556440"
  },
  {
    "text": "employee a group of employees or all the employees so Union be able to apply processing to all of it",
    "start": "556440",
    "end": "563010"
  },
  {
    "text": "so take these things into consideration and then there's compute when it comes",
    "start": "563010",
    "end": "569940"
  },
  {
    "text": "to compute we have stores that are really really good at retrieving data",
    "start": "569940",
    "end": "575700"
  },
  {
    "text": "and storing data but they don't do a lot of computation for it right so that's",
    "start": "575700",
    "end": "580920"
  },
  {
    "text": "not their job there get put but do it really really fast I want you to go and",
    "start": "580920",
    "end": "586260"
  },
  {
    "text": "get the rows that match a particular predicate filter it's sorted right",
    "start": "586260",
    "end": "592500"
  },
  {
    "text": "that's very different than saying go calculate the sum of these ten billion",
    "start": "592500",
    "end": "599310"
  },
  {
    "text": "rows a particular column and give me the answer where you are perhaps processing",
    "start": "599310",
    "end": "605760"
  },
  {
    "text": "a terabyte of data and coming out with the answer seven verses in the other",
    "start": "605760",
    "end": "611070"
  },
  {
    "text": "case where you're basically saying give me the row give me the row give me the item give me the document right",
    "start": "611070",
    "end": "617540"
  },
  {
    "text": "throughput latency change rate rate of ingestion these are all things that you",
    "start": "617540",
    "end": "623670"
  },
  {
    "text": "have to consider when choosing a database for example if you are picking",
    "start": "623670",
    "end": "629730"
  },
  {
    "text": "a database to keep track of the location of cars every minute then you get a lot of inserts because",
    "start": "629730",
    "end": "636300"
  },
  {
    "text": "there's a lot of cars on this planet and I don't know maybe the particular brand of car you're selling there's tens of",
    "start": "636300",
    "end": "641700"
  },
  {
    "text": "millions of them out there and you want to record their location every minute when they're changing well that's that's",
    "start": "641700",
    "end": "646950"
  },
  {
    "text": "a lot of data to ingest as opposed to keeping track of employees maybe you hire ten employees a month I don't know",
    "start": "646950",
    "end": "654329"
  },
  {
    "text": "maybe 100 employees a month maybe a thousand employees a month it's still very small compared to the location of",
    "start": "654329",
    "end": "661529"
  },
  {
    "text": "five million cars every minute okay so shape size and compute when you take",
    "start": "661529",
    "end": "670019"
  },
  {
    "start": "668000",
    "end": "739000"
  },
  {
    "text": "into those consideration and then you go pick a database and go okay my database",
    "start": "670019",
    "end": "675839"
  },
  {
    "text": "my favorite database can do it all it's it's it's an idea that exists out there",
    "start": "675839",
    "end": "683759"
  },
  {
    "text": "and sometimes it's true if you have a very small workload and not a lot of",
    "start": "683759",
    "end": "689429"
  },
  {
    "text": "data maybe you have I don't know 50 gigabytes of data you can probably use any database relational or whatever any",
    "start": "689429",
    "end": "697199"
  },
  {
    "text": "brand of database you want and on a modern machine the whole thing will fit in memory the performance will be fine",
    "start": "697199",
    "end": "703589"
  },
  {
    "text": "that's okay but what is the efficiency at scale that really matters so I'm not",
    "start": "703589",
    "end": "710519"
  },
  {
    "text": "suggesting for every workload you go find a specialized database because",
    "start": "710519",
    "end": "715799"
  },
  {
    "text": "there are some databases that you can generically use but when it stuff gets big when when cost is important when",
    "start": "715799",
    "end": "723989"
  },
  {
    "text": "operational efficiency is important when you're dealing with 100 terabytes of data as opposed to you know 5 gigabytes",
    "start": "723989",
    "end": "731039"
  },
  {
    "text": "of data then the choice becomes really really important so which database to",
    "start": "731039",
    "end": "737069"
  },
  {
    "text": "use one well before we can answer that there's this other thing that we need to",
    "start": "737069",
    "end": "742199"
  },
  {
    "start": "739000",
    "end": "861000"
  },
  {
    "text": "talk about which is managed database services versus unmanaged database services and why does this matter it",
    "start": "742199",
    "end": "749639"
  },
  {
    "text": "matters because it changes the cost and TCO and convenience and developer",
    "start": "749639",
    "end": "758149"
  },
  {
    "text": "capabilities why if you were gonna build an application 30 years ago on-premises",
    "start": "758149",
    "end": "764879"
  },
  {
    "text": "you would go buy an enterprise class server you would go buy some database you would pay for the licenses per CPU",
    "start": "764879",
    "end": "772859"
  },
  {
    "text": "core or whatever you would hire a DBA and a system administrator and that machine would be taken care of really",
    "start": "772859",
    "end": "780149"
  },
  {
    "text": "well well-managed the backups are always done and so on and the developers come said I need a database to go put it in",
    "start": "780149",
    "end": "787019"
  },
  {
    "text": "this one because it's well-maintained right so the developer says ok I've got videos I'm gonna put it in a database",
    "start": "787019",
    "end": "793649"
  },
  {
    "text": "I've got invoice images I'm gonna put it in the database I've got data roll logs hist",
    "start": "793649",
    "end": "799230"
  },
  {
    "text": "everything goes in the database why this is the most convenient thing to do because nobody wanted to go by 10",
    "start": "799230",
    "end": "805230"
  },
  {
    "text": "servers 10 different software packages 10 different DBAs so you try to standardize on one thing but when you",
    "start": "805230",
    "end": "812610"
  },
  {
    "text": "move to the cloud and you start using managed databases a lot of those",
    "start": "812610",
    "end": "818460"
  },
  {
    "text": "inconveniences go away so everything is just at an end of an API call so whether",
    "start": "818460",
    "end": "823620"
  },
  {
    "text": "you make an API call to put an image in s3 a blob store or you make an API call",
    "start": "823620",
    "end": "829560"
  },
  {
    "text": "to insert a JSON item into dynamo DB or you do an insert into a Postgres",
    "start": "829560",
    "end": "836370"
  },
  {
    "text": "database like Aurora it's just an API call it's not like you have to go manage",
    "start": "836370",
    "end": "841740"
  },
  {
    "text": "those servers and do backups on them and and fix the memory when they break and replace the disks that die so developers",
    "start": "841740",
    "end": "849210"
  },
  {
    "text": "now have the choice of using the right set of api's to build an application and what that's at least this leads to is",
    "start": "849210",
    "end": "855360"
  },
  {
    "text": "most of the modern applications that we see people building use a multitude of",
    "start": "855360",
    "end": "860430"
  },
  {
    "text": "databases so really which databases to use for what components of your",
    "start": "860430",
    "end": "865860"
  },
  {
    "start": "861000",
    "end": "891000"
  },
  {
    "text": "application you take this one step further into unbuilding micro services and I have a micro service for shopping",
    "start": "865860",
    "end": "873090"
  },
  {
    "text": "cart because I'm building a retail website well maybe the shopping cart stuff goes into one database then you do",
    "start": "873090",
    "end": "881730"
  },
  {
    "text": "the transaction when you actually sold something that goes into something and then you have you know the recommendation maybe that goes into",
    "start": "881730",
    "end": "888330"
  },
  {
    "text": "graph so it becomes a lot more convenient to use them all so for us at",
    "start": "888330",
    "end": "893610"
  },
  {
    "start": "891000",
    "end": "920000"
  },
  {
    "text": "AWS the strategy is to purpose-built databases to satisfy the particular",
    "start": "893610",
    "end": "899610"
  },
  {
    "text": "workload for the best performance price convenience and programmability without",
    "start": "899610",
    "end": "906360"
  },
  {
    "text": "having to tell the developer i know that you want to use different databases but",
    "start": "906360",
    "end": "911610"
  },
  {
    "text": "you should just pick one and stick with it because it's easier at the end of the day it's not easier because you have",
    "start": "911610",
    "end": "918360"
  },
  {
    "text": "this mismatch workloads and mismatch databases so back to some generalities",
    "start": "918360",
    "end": "925220"
  },
  {
    "start": "920000",
    "end": "1035000"
  },
  {
    "text": "most workloads we look at you know you can kind of split them between analytics",
    "start": "925220",
    "end": "931050"
  },
  {
    "text": "and operational wares analytics state of workloads are about getting insight it may be retrospective as in how much",
    "start": "931050",
    "end": "938970"
  },
  {
    "text": "stuff did we sell last quarter last year last five years you look at history it",
    "start": "938970",
    "end": "945090"
  },
  {
    "text": "could be streaming it's like the data coming in from some devices you know and",
    "start": "945090",
    "end": "950910"
  },
  {
    "text": "you need to raise an alarm when something gets too hot or too cold or whatever and there's a predictive stuff",
    "start": "950910",
    "end": "957120"
  },
  {
    "text": "where you look at a body of data and you try to figure out what's going to happen tomorrow which is very different than a",
    "start": "957120",
    "end": "963990"
  },
  {
    "text": "retrospective stuff which to us what did happen yes what happened yesterday now why is the retro predictive stuff",
    "start": "963990",
    "end": "970230"
  },
  {
    "text": "important because most applications are now starting to employ some kind of an ml machine learning algorithms to",
    "start": "970230",
    "end": "977370"
  },
  {
    "text": "improve like I don't know is it gonna rain tomorrow well you probably have to go look at the history of the weather",
    "start": "977370",
    "end": "983220"
  },
  {
    "text": "data and the current condition and maybe you'll guess if it's gonna rain tomorrow or how many people should you have",
    "start": "983220",
    "end": "989750"
  },
  {
    "text": "employed tomorrow at the Starbucks downstairs because there's 42,000 people",
    "start": "989750",
    "end": "996240"
  },
  {
    "text": "running around right it would be good if they could predict some of that stuff",
    "start": "996240",
    "end": "1001610"
  },
  {
    "text": "better on the operational side you have your transactional workloads you know I",
    "start": "1001610",
    "end": "1007000"
  },
  {
    "text": "took five dollars out of my account for the five dollars out of my account put ten dollars in my account there's a",
    "start": "1007000",
    "end": "1013460"
  },
  {
    "text": "system of record where's Tony's car where the employee",
    "start": "1013460",
    "end": "1019040"
  },
  {
    "text": "records where is this patient record and there's content management stuff I don't",
    "start": "1019040",
    "end": "1025459"
  },
  {
    "text": "know I spin up a blog use WordPress there's probably a my sequel database",
    "start": "1025459",
    "end": "1032270"
  },
  {
    "text": "somewhere there right so let's talk about operational stuff there's some basic characteristics that go to the",
    "start": "1032270",
    "end": "1039589"
  },
  {
    "start": "1035000",
    "end": "1155000"
  },
  {
    "text": "operational databases usually a good fit for caching compute size is usually",
    "start": "1039589",
    "end": "1045110"
  },
  {
    "text": "small like you're dealing with one patient five patients you know a doctor can see so many patients a day they they",
    "start": "1045110",
    "end": "1053120"
  },
  {
    "text": "generally require low latency nobody's willing for their transaction on their credit card to take one second that",
    "start": "1053120",
    "end": "1059090"
  },
  {
    "text": "needs to happen really really fast high throughput because there's a lot of people trying to do a lot of little",
    "start": "1059090",
    "end": "1064580"
  },
  {
    "text": "things high concurrency there's 10 million cars",
    "start": "1064580",
    "end": "1070270"
  },
  {
    "text": "where are they they're all emitting telemetry saying where they are and you need to insert them and a lot of them at",
    "start": "1070270",
    "end": "1076570"
  },
  {
    "text": "the same time and then almost all of operational data and not have this mission-critical HADR data protection",
    "start": "1076570",
    "end": "1083350"
  },
  {
    "text": "don't lose this stuff you know backups and then the stuff which is you know",
    "start": "1083350",
    "end": "1089650"
  },
  {
    "text": "useful to think about when you're making decisions our slides at the limit is it",
    "start": "1089650",
    "end": "1097060"
  },
  {
    "text": "bounded or unbounded are you going to deal with rows are you going to model your data in form of rows or key values",
    "start": "1097060",
    "end": "1104440"
  },
  {
    "text": "or documents is it a graph do you need relational capabilities do you need to",
    "start": "1104440",
    "end": "1111430"
  },
  {
    "text": "be able to push compute to the database or do you need the database to just give you the data so you can go do whatever",
    "start": "1111430",
    "end": "1117310"
  },
  {
    "text": "it is that you need to do in your application what is the change velocity so for example the telemetry coming from",
    "start": "1117310",
    "end": "1125560"
  },
  {
    "text": "a car it never changes nobody goes back and says no no Tony's car wasn't parked here it was parked there right it's an",
    "start": "1125560",
    "end": "1132550"
  },
  {
    "text": "insert only workloads as opposed to Tony's salary is continuously updated and increased because I'm really good or",
    "start": "1132550",
    "end": "1140530"
  },
  {
    "text": "I like to think that so that's an update workload it doesn't happen it really",
    "start": "1140530",
    "end": "1147100"
  },
  {
    "text": "gets updated so and then ingestion",
    "start": "1147100",
    "end": "1152770"
  },
  {
    "text": "requirement again is the ability to take in the data so I'm gonna ask you and to",
    "start": "1152770",
    "end": "1157840"
  },
  {
    "start": "1155000",
    "end": "1206000"
  },
  {
    "text": "come up so we can actually have a debate about what databases to use but this is a good summary kind of way of thinking",
    "start": "1157840",
    "end": "1165220"
  },
  {
    "text": "about it relational databases are really good if you need into a referential",
    "start": "1165220",
    "end": "1171490"
  },
  {
    "text": "integrity if you need strong consistency if you need to do transactions across",
    "start": "1171490",
    "end": "1176830"
  },
  {
    "text": "five tables right key value low latency key based get input high throughput",
    "start": "1176830",
    "end": "1183300"
  },
  {
    "text": "partitioning unbounded data size documents really good for documents and",
    "start": "1183300",
    "end": "1189240"
  },
  {
    "text": "anything that you model like I have a 17 deep JSON document okay that's probably",
    "start": "1189240",
    "end": "1194980"
  },
  {
    "text": "a a document for a document store and then there is graph so en and I work together",
    "start": "1194980",
    "end": "1203450"
  },
  {
    "text": "at AWS and so we're going to talk about some by the most of the slides were made",
    "start": "1203450",
    "end": "1209450"
  },
  {
    "start": "1206000",
    "end": "1598000"
  },
  {
    "text": "by Iain so if they're good it's his work so if you've got Amazon RDS we're not",
    "start": "1209450",
    "end": "1216530"
  },
  {
    "text": "gonna go through and explain what Amazon RDS is and what are the various databases because chances are if you're interested in databases you've probably",
    "start": "1216530",
    "end": "1222860"
  },
  {
    "text": "heard of them but if you haven't you can go to the website and see all of the stuff about Amazon RDS but we do have a",
    "start": "1222860",
    "end": "1229670"
  },
  {
    "text": "lot of engines so tell me what would be a good workload for say Postgres and why",
    "start": "1229670",
    "end": "1238160"
  },
  {
    "text": "would I pick Postgres versus something else sure so RDS is you know a great",
    "start": "1238160",
    "end": "1243980"
  },
  {
    "text": "general-purpose database that has the ability to start very small and then grow with your business and offer all",
    "start": "1243980",
    "end": "1250130"
  },
  {
    "text": "these different engines and so you know we see already asked being a great place to start for when you're building an",
    "start": "1250130",
    "end": "1256340"
  },
  {
    "text": "application where you want to use common frameworks like ruby on rails or Django and you may have a particular engine",
    "start": "1256340",
    "end": "1263180"
  },
  {
    "text": "that you choose on the basis of skills in your team's types of frameworks that you happen to be using may be",
    "start": "1263180",
    "end": "1269450"
  },
  {
    "text": "third-party packages that you're bringing in from the outside and so you can really tailor it knowing that the",
    "start": "1269450",
    "end": "1275090"
  },
  {
    "text": "underlying principle of these applications are the things that we've touched on with row stores where the",
    "start": "1275090",
    "end": "1281630"
  },
  {
    "text": "database is going to validate some data for you it's going to help you manage",
    "start": "1281630",
    "end": "1286790"
  },
  {
    "text": "uniqueness constraints it's gonna allow you to push computation down to the",
    "start": "1286790",
    "end": "1291800"
  },
  {
    "text": "application rather than having to write it within your code you know you're gonna have a database centric model so",
    "start": "1291800",
    "end": "1297260"
  },
  {
    "text": "so if I have some workload on premises I don't know maybe I built an app and I don't want to touch the app but the",
    "start": "1297260",
    "end": "1303350"
  },
  {
    "text": "hardware is getting old and it's starting to not be so available anymore maybe it was written with entity",
    "start": "1303350",
    "end": "1310760"
  },
  {
    "text": "framework what do you have what would you recommend do I rewrite it put it in a row out I put it in dynamo what what",
    "start": "1310760",
    "end": "1317090"
  },
  {
    "text": "do I do sure yeah so bringing applications into the cloud certainly we see most commonly that people will start with RDS and the",
    "start": "1317090",
    "end": "1323030"
  },
  {
    "text": "reason is that they can tailor the database and the engine that you choose to exactly these sorts of require",
    "start": "1323030",
    "end": "1328910"
  },
  {
    "text": "so we have you know a sequel server option for when you're bringing in an IAS or.net application and so it is very",
    "start": "1328910",
    "end": "1335480"
  },
  {
    "text": "very common that what you're looking at achieving with this kind of operational database is looking to get out of the",
    "start": "1335480",
    "end": "1341060"
  },
  {
    "text": "business of doing so much management so maybe you can focus your time on making that application better so you don't",
    "start": "1341060",
    "end": "1346430"
  },
  {
    "text": "want to do backups and you don't want to do patching and you don't want to do you know all the hard work of running a database so you say look I know it's",
    "start": "1346430",
    "end": "1352370"
  },
  {
    "text": "compatible and that allows me just to focus on my business no I'm not",
    "start": "1352370",
    "end": "1358550"
  },
  {
    "text": "I've got developers they have their preferences with respect to languages I know a lot of people love to write code",
    "start": "1358550",
    "end": "1364190"
  },
  {
    "text": "in Python Django what do you have for them I'm gonna build some application to",
    "start": "1364190",
    "end": "1370580"
  },
  {
    "text": "keep track of I don't know surveys in my company it's not gonna get very big but it's",
    "start": "1370580",
    "end": "1375590"
  },
  {
    "text": "important stuff sure yeah so you know again one of the reasons that you choose one of these particular engines is going",
    "start": "1375590",
    "end": "1381440"
  },
  {
    "text": "to be about the skills that you have in-house so for instance we see a lot of affinity between the Python community",
    "start": "1381440",
    "end": "1386600"
  },
  {
    "text": "and Postgres whereas as Tony you said you know a content management system",
    "start": "1386600",
    "end": "1392720"
  },
  {
    "text": "will often have a my sequel disposition just because that's what's been used in the past you may have an application",
    "start": "1392720",
    "end": "1399380"
  },
  {
    "text": "that you're running on premises that runs on Oracle you just want to be able to bring that in so it really is about focusing on what your team's can do",
    "start": "1399380",
    "end": "1405800"
  },
  {
    "text": "what's gonna help you be most productive and then you know the nice thing about this type of service is it cuts across",
    "start": "1405800",
    "end": "1411380"
  },
  {
    "text": "all of those different engine considerations and just gives you like really simple to operate database so so",
    "start": "1411380",
    "end": "1417050"
  },
  {
    "text": "then tell me what is the difference between Postgres running and RDS and Postgres running in ec2 and Postgres",
    "start": "1417050",
    "end": "1422900"
  },
  {
    "text": "running as part of Amazon Aurora sure so so when you pick an engine certainly you",
    "start": "1422900",
    "end": "1428060"
  },
  {
    "text": "can choose from different types of storage that would be the contrast between using Aurora storage for",
    "start": "1428060",
    "end": "1433880"
  },
  {
    "text": "Postgres versus the standard RDS Postgres which which uses EBS based",
    "start": "1433880",
    "end": "1439280"
  },
  {
    "text": "storage but the real difference is that you're not gonna focus on managing the database yourself you're not gonna think",
    "start": "1439280",
    "end": "1444350"
  },
  {
    "text": "about patching the server you're not gonna think about doing backups yourself and then really thinking about the",
    "start": "1444350",
    "end": "1450170"
  },
  {
    "text": "difference between storage and Aurora or not is gonna be about what are your availability characteristics how quickly",
    "start": "1450170",
    "end": "1456590"
  },
  {
    "text": "do you need to do failover and certainly Aurora is a fantastic storage environment because it's always multi",
    "start": "1456590",
    "end": "1463070"
  },
  {
    "text": "see that's a real differentiator for these types of engines traditional relational databases they work with a",
    "start": "1463070",
    "end": "1468500"
  },
  {
    "text": "primary node that takes responsibility for all the rights and then in RDS you can spin up read replicas for certain",
    "start": "1468500",
    "end": "1474590"
  },
  {
    "text": "engines and as we heard obviously we we now are going to support multi master for where you have very very high",
    "start": "1474590",
    "end": "1480830"
  },
  {
    "text": "availability requirements so for massive scale relational workloads which you",
    "start": "1480830",
    "end": "1486920"
  },
  {
    "text": "know can get pretty big yes in writing apps app from scratch so I don't have",
    "start": "1486920",
    "end": "1494530"
  },
  {
    "text": "preferences I'm not using anything on pram yeah what would be that go-to place",
    "start": "1494530",
    "end": "1500300"
  },
  {
    "text": "if I need relational capabilities yeah so so Aurora every time and then choose",
    "start": "1500300",
    "end": "1505400"
  },
  {
    "text": "which engine to use on the basis of the features of your application that you're building so a very common request is I'm",
    "start": "1505400",
    "end": "1511160"
  },
  {
    "text": "building an application that's gonna have some some ability to track location and so we'll see people gravitate",
    "start": "1511160",
    "end": "1517670"
  },
  {
    "text": "towards Postgres because it has post GIS the ability to run geospatial queries in a relational context in other cases you",
    "start": "1517670",
    "end": "1525050"
  },
  {
    "text": "may say again my team is really comfortable with my sequel but I need that massive scale I need the ability to",
    "start": "1525050",
    "end": "1530360"
  },
  {
    "text": "scale up dynamically on my storage volume and I needed to give me a huge number of read and write I ops so in",
    "start": "1530360",
    "end": "1536570"
  },
  {
    "text": "both cases Aurora is a great place to start it allows you to scale to extremely high scale right over time so",
    "start": "1536570",
    "end": "1542870"
  },
  {
    "text": "so relational workloads I need relational capabilities I like sequel as a language I use Java or",
    "start": "1542870",
    "end": "1550970"
  },
  {
    "text": "whatever you have the variety of things to say but I mean there is a limit there",
    "start": "1550970",
    "end": "1556220"
  },
  {
    "text": "is like if I want to record the location of every car every minute right and have",
    "start": "1556220",
    "end": "1564260"
  },
  {
    "text": "a massive input coming in yep yeah exactly so RDS is one of these systems that we talk to it's bounded at limit",
    "start": "1564260",
    "end": "1571550"
  },
  {
    "text": "you're gonna provision a certain amount of storage and you're gonna grow into that storage certainly with Aurora and",
    "start": "1571550",
    "end": "1577280"
  },
  {
    "text": "you're gonna be flexible but ultimately there is a size to the database where some of the principles you mentioned",
    "start": "1577280",
    "end": "1582380"
  },
  {
    "text": "like the ability to have completely predictable performance regardless of the size of the database where we may",
    "start": "1582380",
    "end": "1588410"
  },
  {
    "text": "need to look at something that's a little bit more sophisticated and gives us some features that relational",
    "start": "1588410",
    "end": "1593720"
  },
  {
    "text": "databases traditionally haven't been able to support so dynamo dynamo yeah so dynamodb then",
    "start": "1593720",
    "end": "1601489"
  },
  {
    "start": "1598000",
    "end": "1793000"
  },
  {
    "text": "is gonna be give us the ability to really break out of the boundaries that we may find from a relational database",
    "start": "1601489",
    "end": "1607460"
  },
  {
    "text": "with the relational validation that's occurring within the database and really",
    "start": "1607460",
    "end": "1612919"
  },
  {
    "text": "gives us the ability to operate much more efficiently with unbounded scale",
    "start": "1612919",
    "end": "1618259"
  },
  {
    "text": "okay is it one or the other no in fact you you'll certainly need to look at",
    "start": "1618259",
    "end": "1624859"
  },
  {
    "text": "what kind of data sets really do act like unbounded at scale and choose the",
    "start": "1624859",
    "end": "1630679"
  },
  {
    "text": "right database for you know the kinds of requirements so if you have a huge amount of pushdown computation you may",
    "start": "1630679",
    "end": "1636559"
  },
  {
    "text": "put that against the data that sits in an RDS database and then for certain types of things the example you used",
    "start": "1636559",
    "end": "1641749"
  },
  {
    "text": "with a shopping cart is a fantastic one putting your shopping cart in the ability to transact with really high",
    "start": "1641749",
    "end": "1647149"
  },
  {
    "text": "availability really high throughput where you'll never run out of capacity that's what makes your business",
    "start": "1647149",
    "end": "1652519"
  },
  {
    "text": "successful you put that on DynamoDB maybe the customer records stay in a relational database so that you can do",
    "start": "1652519",
    "end": "1658369"
  },
  {
    "text": "fast mutation and validate that their addresses are correct and these sorts of things so so that's a good break down I",
    "start": "1658369",
    "end": "1664820"
  },
  {
    "text": "mean I was talking to a customer earlier and they were telling me that you know they have a bunch of data and it's",
    "start": "1664820",
    "end": "1670100"
  },
  {
    "text": "relational and they put it in in Postgres but they have some massive read requirements and it needs to be global",
    "start": "1670100",
    "end": "1676789"
  },
  {
    "text": "because they're a global company and they need it everywhere and they need it to be synced so they were telling me",
    "start": "1676789",
    "end": "1682999"
  },
  {
    "text": "that they basically read from RDS Postgres and then they stuff it in",
    "start": "1682999",
    "end": "1690639"
  },
  {
    "text": "dynamo and then they scale the reads off of dynamo for computed results that",
    "start": "1690639",
    "end": "1695809"
  },
  {
    "text": "comes from Postgres so being able to mix and match easy absolutely absolutely so",
    "start": "1695809",
    "end": "1701720"
  },
  {
    "text": "as soon as you want to try and scale relational data sets in the way that you're describing for instance using",
    "start": "1701720",
    "end": "1707359"
  },
  {
    "text": "things like globally replicated dynamo tables then you do have to think about that in the similar way as you would",
    "start": "1707359",
    "end": "1712970"
  },
  {
    "text": "think about caching for example where you're going to take your application takes the responsibility of pulling the",
    "start": "1712970",
    "end": "1718129"
  },
  {
    "text": "data out of an operational store that's good at storing those data elements long-term and then moving them into",
    "start": "1718129",
    "end": "1724190"
  },
  {
    "text": "dynamo DB managing the consistency between those two systems so it is something you need to work with but it",
    "start": "1724190",
    "end": "1729619"
  },
  {
    "text": "is then very trivial to scale that working set to virtually unlimited size and presence around the globe so if I end up using a",
    "start": "1729619",
    "end": "1736490"
  },
  {
    "text": "couple of different engines but I need the data to easily move between them what are the options sure some moving",
    "start": "1736490",
    "end": "1743210"
  },
  {
    "text": "data between data sources is something that the the data migration service is particularly good at and then you may",
    "start": "1743210",
    "end": "1749510"
  },
  {
    "text": "also be looking at the ability to use things like dynamo DB update streams update streams allows you to kind of",
    "start": "1749510",
    "end": "1755960"
  },
  {
    "text": "listen to changes that are occurring on your Dynamo environment and then replicate those down into relational",
    "start": "1755960",
    "end": "1761540"
  },
  {
    "text": "database for example so there are absolutely integration patterns that allow you to move data in and out of these different environments without",
    "start": "1761540",
    "end": "1767510"
  },
  {
    "text": "having to do a lot of ops can you trigger a like a lambda function with these update streams to do stuff yeah",
    "start": "1767510",
    "end": "1773720"
  },
  {
    "text": "absolutely so so that's one of the native integrations for dynamo DB update streams you can run computation on the",
    "start": "1773720",
    "end": "1779150"
  },
  {
    "text": "basis of an update event coming out of DynamoDB and then you know do something",
    "start": "1779150",
    "end": "1784280"
  },
  {
    "text": "useful with that so that could be an example of moving data into cold storage on a different database and implementing",
    "start": "1784280",
    "end": "1791060"
  },
  {
    "text": "replication for example cool so you have this thing called Dax for dynamo DB",
    "start": "1791060",
    "end": "1796580"
  },
  {
    "start": "1793000",
    "end": "1859000"
  },
  {
    "text": "caching just give me a 15 second story I'm sure so we talked about DynamoDB",
    "start": "1796580",
    "end": "1803450"
  },
  {
    "text": "being able to be you know running you a scale if that's unbounded docks really then gives us virtually unbounded low",
    "start": "1803450",
    "end": "1811250"
  },
  {
    "text": "latency so what dax allows us to do we create a layer with dynamodb or we",
    "start": "1811250",
    "end": "1818180"
  },
  {
    "text": "implement our application on dynamodb so that we get really high availability and really high performance but we can also",
    "start": "1818180",
    "end": "1824000"
  },
  {
    "text": "now add Dax which drives the latency down to microseconds but where we don't",
    "start": "1824000",
    "end": "1829880"
  },
  {
    "text": "have to worry about managing the complexity of cache management where we",
    "start": "1829880",
    "end": "1835010"
  },
  {
    "text": "don't have to think about what is the data up-to-date in my dynamodb table versus my cache and the reason is that",
    "start": "1835010",
    "end": "1840530"
  },
  {
    "text": "Dax is what we call the write through cache so I just do the writes to Dax and Dax takes responsibility for writing to",
    "start": "1840530",
    "end": "1847100"
  },
  {
    "text": "dynamodb so I get all the benefits I get API compliance with DynamoDB but I get",
    "start": "1847100",
    "end": "1852380"
  },
  {
    "text": "this massive acceleration and performance really nice thing to have where you want to have microsecond high",
    "start": "1852380",
    "end": "1857960"
  },
  {
    "text": "performance what about elastic cache when do I use that sure so elastic a base",
    "start": "1857960",
    "end": "1864169"
  },
  {
    "start": "1859000",
    "end": "1962000"
  },
  {
    "text": "load thing yeah so ElastiCache is then where you want to add caching on but you're using a different type of",
    "start": "1864169",
    "end": "1869929"
  },
  {
    "text": "operational store and the real difference between something like Dax being a write through cache and",
    "start": "1869929",
    "end": "1875080"
  },
  {
    "text": "ElastiCache where you're adding it on to one of these other operational systems is that your application is gonna take",
    "start": "1875080",
    "end": "1881119"
  },
  {
    "text": "responsibility for making the cache and the data store consistent and there are",
    "start": "1881119",
    "end": "1886519"
  },
  {
    "text": "lots of frameworks that will do this for you we talked about the choice of RDS just very general purpose database",
    "start": "1886519",
    "end": "1892970"
  },
  {
    "text": "because you might be using some type of an entity management framework well very consistently those entity management",
    "start": "1892970",
    "end": "1898100"
  },
  {
    "text": "frameworks will allow you to plug in a cache on the side and they'll do all the hard work of keeping that cache up-to-date really fast response times so",
    "start": "1898100",
    "end": "1905210"
  },
  {
    "text": "ElastiCache gives you a memcache and Redis interfaces so you can have an open",
    "start": "1905210",
    "end": "1910419"
  },
  {
    "text": "approach to bringing in your entity management frameworks use a standard engine but we do the hard work of",
    "start": "1910419",
    "end": "1916460"
  },
  {
    "text": "operating it so low latency reads I need from dynamo I can use Dax Dax is a",
    "start": "1916460",
    "end": "1921679"
  },
  {
    "text": "specialized caching for dynamo that's and then elastic cache is a generic caching mechanism with radius or you can",
    "start": "1921679",
    "end": "1929629"
  },
  {
    "text": "in front that in any any of the RDS databases you probably put it in front of the dynamo as well if you really want",
    "start": "1929629",
    "end": "1936559"
  },
  {
    "text": "absolutely so alright so if you need low latency reads and your data set size",
    "start": "1936559",
    "end": "1943009"
  },
  {
    "text": "that you're operating it fits in the cache then caching is a good thing if your data is bigger than a cache and",
    "start": "1943009",
    "end": "1949100"
  },
  {
    "text": "every access is a Matt cache miss then you're just wasting your time missing on the cache so there are some",
    "start": "1949100",
    "end": "1955789"
  },
  {
    "text": "intricacies so not everything is cashable obviously and you have to be careful about that all right so we",
    "start": "1955789",
    "end": "1964460"
  },
  {
    "start": "1962000",
    "end": "2103000"
  },
  {
    "text": "announced neptune because we have recognized the fact that graph is really",
    "start": "1964460",
    "end": "1970970"
  },
  {
    "text": "an important thing and maybe it was you know I don't know Facebook uses graph databases because well yeah that's a",
    "start": "1970970",
    "end": "1979730"
  },
  {
    "text": "pretty good app so you know why would you do this why would you use a purpose built in specialized database for",
    "start": "1979730",
    "end": "1986419"
  },
  {
    "text": "something like relations is because it's actually really hard to manage graphs",
    "start": "1986419",
    "end": "1993109"
  },
  {
    "text": "and relations in any other type of operational store we have some other analytical systems",
    "start": "1993109",
    "end": "1999450"
  },
  {
    "text": "that support graphs like elasticsearch but with the kind of performance that you're gonna get from Neptune you really",
    "start": "1999450",
    "end": "2005840"
  },
  {
    "text": "do need a specially built database for that and you know as you mentioned in the intro things like making",
    "start": "2005840",
    "end": "2011090"
  },
  {
    "text": "recommendations to be able to answer a question of what pieces of content are similar to a piece of content that I",
    "start": "2011090",
    "end": "2018169"
  },
  {
    "text": "just said I liked well I have to have a relationship between those two and it's probably going to be a similarity or",
    "start": "2018169",
    "end": "2024879"
  },
  {
    "text": "when I want to answer a question like people who bought what you just bought",
    "start": "2024879",
    "end": "2031399"
  },
  {
    "text": "they also bought these other things well that requires the ability to create links between people and behavior and",
    "start": "2031399",
    "end": "2038509"
  },
  {
    "text": "then those relations themselves actually have traits they have properties that are interesting and meaningful and",
    "start": "2038509",
    "end": "2044960"
  },
  {
    "text": "modeling data in that way in a relational database is really complicated modeling it that way in",
    "start": "2044960",
    "end": "2050059"
  },
  {
    "text": "dynamodb you can absolutely do but graph databases are specialized for then querying that data and there are",
    "start": "2050059",
    "end": "2057049"
  },
  {
    "text": "specific algorithms for graphs that are really important I recently got a lecture on this because it's saying I",
    "start": "2057049",
    "end": "2062210"
  },
  {
    "text": "can model relations in their relational database and write queries and then somebody showed me that at the sequel",
    "start": "2062210",
    "end": "2068148"
  },
  {
    "text": "text of computing the relationships between family members and the graph",
    "start": "2068149",
    "end": "2074089"
  },
  {
    "text": "version like in gremlin which is like a one line you know statement and and so",
    "start": "2074089",
    "end": "2080240"
  },
  {
    "text": "the idea is that yeah it's really difficult when you have to compute the relationships between say myself and",
    "start": "2080240",
    "end": "2087289"
  },
  {
    "text": "every family member in a in a relational because you have to compute that relation at the time of query as opposed",
    "start": "2087289",
    "end": "2094039"
  },
  {
    "text": "to using something like a graph store where the relationship is persisted and so you just get the relationship and you",
    "start": "2094039",
    "end": "2100250"
  },
  {
    "text": "can walk the notes so so quick quick show of hands in the audience is anybody in here ever written a recursive query",
    "start": "2100250",
    "end": "2106609"
  },
  {
    "start": "2103000",
    "end": "2178000"
  },
  {
    "text": "in a database common table expressions connected by Prior yeah those hands you need a graph database",
    "start": "2106609",
    "end": "2111770"
  },
  {
    "text": "[Laughter] it could help in some cases so",
    "start": "2111770",
    "end": "2118150"
  },
  {
    "text": "operational databases and the dimensions that you look at so we we kind of look at okay the size that limit is it",
    "start": "2118150",
    "end": "2124070"
  },
  {
    "text": "bounded is it unbounded if you really have data which is unbounded you really",
    "start": "2124070",
    "end": "2129380"
  },
  {
    "text": "should think about you know a system that can give you constant performance regardless of size if you have a system",
    "start": "2129380",
    "end": "2135380"
  },
  {
    "text": "of a database which the performance gets slower and slower the bigger it gets and then you're not gonna have constant",
    "start": "2135380",
    "end": "2141020"
  },
  {
    "text": "performance so that's a problem you know if you if your data models best for key",
    "start": "2141020",
    "end": "2146750"
  },
  {
    "text": "value then use a key value store if you're always operating on a record and its entirety and record is a good thing",
    "start": "2146750",
    "end": "2153320"
  },
  {
    "text": "right so these are some of the things that you should look at when you're going through",
    "start": "2153320",
    "end": "2159800"
  },
  {
    "text": "this decision process and and and now if you have to admit that it's not a simple thing go okay here's the seven question",
    "start": "2159800",
    "end": "2166250"
  },
  {
    "text": "you answer at the end of the day you will know exactly which database to use for every workload if it was that simple",
    "start": "2166250",
    "end": "2171560"
  },
  {
    "text": "then a lot of us wouldn't actually have a job so so let's talk about analytics",
    "start": "2171560",
    "end": "2178760"
  },
  {
    "start": "2178000",
    "end": "2220000"
  },
  {
    "text": "so this retrospective predictive and streaming thing I think it's fairly you",
    "start": "2178760",
    "end": "2185480"
  },
  {
    "text": "know if you look at it historically the retrospective analytics came first because people were able to then query",
    "start": "2185480",
    "end": "2192010"
  },
  {
    "text": "transactional databases and see what happened in the past streaming analytics",
    "start": "2192010",
    "end": "2198500"
  },
  {
    "text": "came in the way with the machine learning and people looking at telemetry",
    "start": "2198500",
    "end": "2203930"
  },
  {
    "text": "coming from devices and of course the predictive stuff you know if you don't think you need ml for your applications",
    "start": "2203930",
    "end": "2211119"
  },
  {
    "text": "well you should really consider why is that that you don't think you could",
    "start": "2211119",
    "end": "2216560"
  },
  {
    "text": "benefit from that a lot of workloads do so on analytic workloads almost always",
    "start": "2216560",
    "end": "2222590"
  },
  {
    "start": "2220000",
    "end": "2287000"
  },
  {
    "text": "you're better off with some kind of a column or format as opposed to not because it is the most efficient why is",
    "start": "2222590",
    "end": "2228619"
  },
  {
    "text": "a column or format most efficient for analytics workloads because data in columns tends to repeat therefore it's",
    "start": "2228619",
    "end": "2236570"
  },
  {
    "text": "very compressible as opposed to adjacent columns in a row are not related like my",
    "start": "2236570",
    "end": "2244220"
  },
  {
    "text": "age is not related to my first name where is the of everyone in this room a who",
    "start": "2244220",
    "end": "2251020"
  },
  {
    "text": "repeats a lot there's probably a lot of people who are 37 years old no no no one",
    "start": "2251020",
    "end": "2259330"
  },
  {
    "text": "that's really easy to compress right it's not yeah there's only one all right",
    "start": "2259330",
    "end": "2265750"
  },
  {
    "text": "so they're usually large Anna Lake workload we require a lot of",
    "start": "2265750",
    "end": "2272210"
  },
  {
    "text": "computational memory like when you're looking at a billion rows and you're computing stuff and you're doing joins",
    "start": "2272210",
    "end": "2278300"
  },
  {
    "text": "and so on analytic workloads are rarely updated it's an insert and it's a delete",
    "start": "2278300",
    "end": "2285050"
  },
  {
    "text": "maybe it's a bringing a new partition get rid of an old partition but you don't go and change history very often",
    "start": "2285050",
    "end": "2293170"
  },
  {
    "start": "2287000",
    "end": "2354000"
  },
  {
    "text": "so they're loving memory capabilities for most analytic systems and the things",
    "start": "2293170",
    "end": "2300260"
  },
  {
    "text": "that you really have to then consider is it do I have need to do streaming",
    "start": "2300260",
    "end": "2307240"
  },
  {
    "text": "analytics do I need insight from a stream of data coming from somewhere it",
    "start": "2307240",
    "end": "2312620"
  },
  {
    "text": "could be devices it could be an ax maybe you're on a train system and you're emitting telemetry from the brakes and",
    "start": "2312620",
    "end": "2320240"
  },
  {
    "text": "the temperature of the brakes from all the trains that are running in the city and you need to know and the brakes on a particular train get too hot and that's",
    "start": "2320240",
    "end": "2327050"
  },
  {
    "text": "a real-time thing so you need to analyze the stream of data all the time that would be a streaming analytics do you do",
    "start": "2327050",
    "end": "2333800"
  },
  {
    "text": "ETL do you move data back and forth how much processing you do do you want",
    "start": "2333800",
    "end": "2339170"
  },
  {
    "text": "server less or do you need servers that are always there because I don't know you have a data warehouse which is being",
    "start": "2339170",
    "end": "2345650"
  },
  {
    "text": "used 24 hours a day every day and then what is your data format so these are",
    "start": "2345650",
    "end": "2351530"
  },
  {
    "text": "some of the things that would help you guide so we have Amazon Athena which is",
    "start": "2351530",
    "end": "2357890"
  },
  {
    "start": "2354000",
    "end": "2627000"
  },
  {
    "text": "one of our interactive analysis products so when would I use Athena it's not a",
    "start": "2357890",
    "end": "2365690"
  },
  {
    "text": "database though is it no because it's I don't know what tell me what is this thing oh it's that I did",
    "start": "2365690",
    "end": "2371390"
  },
  {
    "text": "it fantastic because it allows you to treat data at rest unstructured or",
    "start": "2371390",
    "end": "2377180"
  },
  {
    "text": "structured data like it was a database and that's a really powerful concept we started this conversation around",
    "start": "2377180",
    "end": "2384230"
  },
  {
    "text": "analytics with Athena because it is the place that you will probably start when you're working with your data a very",
    "start": "2384230",
    "end": "2391940"
  },
  {
    "text": "very common pattern is that you're gonna ingest your data into a format that is",
    "start": "2391940",
    "end": "2397160"
  },
  {
    "text": "good for the type of data that you're storing if you're working with lots of log files then you're gonna store those",
    "start": "2397160",
    "end": "2403490"
  },
  {
    "text": "as log files and you should compress those every time if you're working with",
    "start": "2403490",
    "end": "2409309"
  },
  {
    "text": "much more structured data than using a format like park' or orc it's very",
    "start": "2409309",
    "end": "2414529"
  },
  {
    "text": "useful because it implements that compression but once you've written it down and it's sitting on a storage",
    "start": "2414529",
    "end": "2419960"
  },
  {
    "text": "system Athena just gives you the ability to start working with it it's not a database it's an engine for working with",
    "start": "2419960",
    "end": "2425480"
  },
  {
    "text": "data it allows you to write sequel as though it was a database alright so I'm a little confused let's say I have an",
    "start": "2425480",
    "end": "2431630"
  },
  {
    "text": "OLTP system and I do transactions I sell stuff and I have the last five years",
    "start": "2431630",
    "end": "2438019"
  },
  {
    "text": "worth of sales data and I export it out of my OLTP system in a comma separated",
    "start": "2438019",
    "end": "2443440"
  },
  {
    "text": "vial and I put this file on s3 and I have done nothing else you're saying I",
    "start": "2443440",
    "end": "2449630"
  },
  {
    "text": "can query this file now with sequel that's right so you're paying for the storage on s3 for the data that you",
    "start": "2449630",
    "end": "2456859"
  },
  {
    "text": "should be keeping anyway and then you're able to issue a query using an C sequel",
    "start": "2456859",
    "end": "2462849"
  },
  {
    "text": "there's no service to provision there's no babysitting of that environment over",
    "start": "2462849",
    "end": "2468890"
  },
  {
    "text": "time you simply pay for the data that streams through Athena and you get your",
    "start": "2468890",
    "end": "2474769"
  },
  {
    "text": "answer back you can either use that in an interactive way with the Athena console or you can use an API to save",
    "start": "2474769",
    "end": "2481549"
  },
  {
    "text": "that data down to another location whatever so why wouldn't I just take this export file an immediately imported",
    "start": "2481549",
    "end": "2487250"
  },
  {
    "text": "it into a column or database and start querying it there yeah because well maybe you don't know what the shape of",
    "start": "2487250",
    "end": "2493579"
  },
  {
    "text": "it is maybe you're integrating with a third party that has been known to add or remove columns from time to time",
    "start": "2493579",
    "end": "2499849"
  },
  {
    "text": "that's a really common use case that we see and in some cases you will import",
    "start": "2499849",
    "end": "2505490"
  },
  {
    "text": "data where you know the schema and with the glue data catalog and glue crawlers",
    "start": "2505490",
    "end": "2511880"
  },
  {
    "text": "that data will be analyzed on s3 and lift it up into a format that Athena then can",
    "start": "2511880",
    "end": "2517880"
  },
  {
    "text": "work with or you can work with data that has no format at all we call it a model",
    "start": "2517880",
    "end": "2524000"
  },
  {
    "text": "on read semantics you apply a schema at the time you issue the query and so you",
    "start": "2524000",
    "end": "2530360"
  },
  {
    "text": "don't have to only work with data that you understand and in fact you might not actually know if it's useful got it so",
    "start": "2530360",
    "end": "2537740"
  },
  {
    "text": "you not want to import it until you know what's useful so if I get a giant data dump from some group in my company about",
    "start": "2537740",
    "end": "2546530"
  },
  {
    "text": "every failure in the brand of cars that we make over the last 10 years and and",
    "start": "2546530",
    "end": "2553340"
  },
  {
    "text": "this is like I don't know 15 terabyte pile of data and I dumped it in s3",
    "start": "2553340",
    "end": "2559340"
  },
  {
    "text": "you're saying I could start querying it to figure out what it is in there if there's interesting stuff in there",
    "start": "2559340",
    "end": "2565370"
  },
  {
    "text": "before I actually start buying databases and provisioning stuff and loading it",
    "start": "2565370",
    "end": "2571070"
  },
  {
    "text": "into yeah and that's why we say you know it is really the first step on the journey of doing analytics you should",
    "start": "2571070",
    "end": "2578300"
  },
  {
    "text": "absolutely be investigating your data and doing data exploration to establish",
    "start": "2578300",
    "end": "2583310"
  },
  {
    "text": "its value to start to mark data sets as to their value to enhance them",
    "start": "2583310",
    "end": "2589220"
  },
  {
    "text": "potentially with other data sets so that you can really do that exploration process if I have it if I have a data",
    "start": "2589220",
    "end": "2594680"
  },
  {
    "text": "warehouse and I have 10 years worth of data in there but I usually just use the last I don't know two three years of",
    "start": "2594680",
    "end": "2599990"
  },
  {
    "text": "data can I take the old stuff and just dump em in s3 and it's there",
    "start": "2599990",
    "end": "2606230"
  },
  {
    "text": "I can query it anytime I need to but then it will save me a lot of money because I'm not paying for databases",
    "start": "2606230",
    "end": "2614090"
  },
  {
    "text": "that are running all the time to hold this data that I never used but I'm not willing to throw away and I needed to be",
    "start": "2614090",
    "end": "2620990"
  },
  {
    "text": "queryable if somebody wants to yep cool that's pretty handy all right redshift",
    "start": "2620990",
    "end": "2629200"
  },
  {
    "start": "2627000",
    "end": "2791000"
  },
  {
    "text": "yeah so you just said if I had a data warehouse and I wanted to be able to issue queries and then I wanted to do",
    "start": "2629200",
    "end": "2636500"
  },
  {
    "text": "some cost optimization so redshift is really the counter side to where you're",
    "start": "2636500",
    "end": "2642290"
  },
  {
    "text": "doing data exploration with redshift you select redshift because you understand your data you understand its",
    "start": "2642290",
    "end": "2649490"
  },
  {
    "text": "and you understand its value and you import that into a system that is designed for extremely fast query times",
    "start": "2649490",
    "end": "2656750"
  },
  {
    "text": "at scale and there's also the ability to integrate in an Athena model with",
    "start": "2656750",
    "end": "2664010"
  },
  {
    "text": "redshift spectrum so you don't actually have to choose either or you can use",
    "start": "2664010",
    "end": "2670220"
  },
  {
    "text": "Athena to establish that some data is actually useful you can generate new data sets and immediately start querying",
    "start": "2670220",
    "end": "2677030"
  },
  {
    "text": "those from inside of your enterprise data warehouse in a hybrid compute and",
    "start": "2677030",
    "end": "2682220"
  },
  {
    "text": "storage model so you get the best of both worlds of extremely fast query response times from data stored within",
    "start": "2682220",
    "end": "2688460"
  },
  {
    "text": "the spectra the redshift data warehouse and then the ability to also use this data at rest so this is because the data",
    "start": "2688460",
    "end": "2696170"
  },
  {
    "text": "which is in redshift has been consumed converted from a bunch of text in a CSV",
    "start": "2696170",
    "end": "2702260"
  },
  {
    "text": "into internal database formats as numbers and whatever it's been indexed a",
    "start": "2702260",
    "end": "2707360"
  },
  {
    "text": "fan and now it's just queryable you don't actually have to process the the text or anything you're just doing",
    "start": "2707360",
    "end": "2713930"
  },
  {
    "text": "that's right so you've probably modeled your data in a way that's sympathetic to the types of queries that you're gonna",
    "start": "2713930",
    "end": "2719570"
  },
  {
    "text": "get as opposed to Athena which is issuing a query that you can expect and you might actually be modeling your data",
    "start": "2719570",
    "end": "2726109"
  },
  {
    "text": "using a regular expression or a grok expression right with redshift you know what that data is you know that",
    "start": "2726109",
    "end": "2732980"
  },
  {
    "text": "it has value to add and you've done all the things that you described so that you can get that really really fast query time so you know it's very likely",
    "start": "2732980",
    "end": "2739850"
  },
  {
    "text": "that the CF always wants to know we made the numbers what was the numbers was the sales was the profits and those are all",
    "start": "2739850",
    "end": "2747530"
  },
  {
    "text": "well-understood questions the VP of Sales always wants to know who are the top salespeople",
    "start": "2747530",
    "end": "2752540"
  },
  {
    "text": "did I make quota raised so if you're gonna build a dashboard for people to",
    "start": "2752540",
    "end": "2758090"
  },
  {
    "text": "look at these reports then and you want the dashboard to be really fast and",
    "start": "2758090",
    "end": "2763310"
  },
  {
    "text": "people don't wait more than a second then you want the data to be in a database which is already processed and",
    "start": "2763310",
    "end": "2769640"
  },
  {
    "text": "index so for for fast queries as opposed to something like Athena where you say okay go open this terabyte of stuff and",
    "start": "2769640",
    "end": "2777080"
  },
  {
    "text": "figure out what the schema is and do some conversion and when I say to a sum then you go read",
    "start": "2777080",
    "end": "2782710"
  },
  {
    "text": "all of that stuff it might take longer but then of course you didn't pay for unused servers I'll try to sit there for",
    "start": "2782710",
    "end": "2789430"
  },
  {
    "text": "days and days and days that's right okay so so both of the fina and redshift are",
    "start": "2789430",
    "end": "2796030"
  },
  {
    "text": "about doing retrospective analysis of data that you've imported into an environment you've written it down you've said I want to keep this and I",
    "start": "2796030",
    "end": "2802420"
  },
  {
    "text": "want to be able to establish trends and I want to be able to train models but",
    "start": "2802420",
    "end": "2807490"
  },
  {
    "text": "then take those retrospective measures and predict them in the future Kinesis analytics is about that now it's",
    "start": "2807490",
    "end": "2814930"
  },
  {
    "text": "about the ability to do analytics second by second by second as the data comes in",
    "start": "2814930",
    "end": "2820690"
  },
  {
    "text": "and again the common thread that runs across these analytics tools is that they use SQL athena's using ANSI sequel",
    "start": "2820690",
    "end": "2828490"
  },
  {
    "text": "redshift uses sequel ANSI sequel and Kinesis Analytics use this streaming",
    "start": "2828490",
    "end": "2833800"
  },
  {
    "text": "sequel so it's really all about moving historical analysis into that very very",
    "start": "2833800",
    "end": "2841390"
  },
  {
    "text": "short term of decision making and you need to have an answer very quickly and",
    "start": "2841390",
    "end": "2847870"
  },
  {
    "text": "your business needs to be able to react to that there needs to be business value associated with you making a decision",
    "start": "2847870",
    "end": "2853780"
  },
  {
    "text": "quickly so an example would be a customer support case where you have an unhappy customer the sooner you know",
    "start": "2853780",
    "end": "2859900"
  },
  {
    "text": "about that the sooner that you can react to it the sooner that you can understand maybe that that consumers device is",
    "start": "2859900",
    "end": "2865210"
  },
  {
    "text": "failing you can then proactively address their issue and make sure that they have a good outcome and then after you do that",
    "start": "2865210",
    "end": "2871690"
  },
  {
    "text": "the better off you are and/or that telemetry coming from the trains when the train is going up the",
    "start": "2871690",
    "end": "2876820"
  },
  {
    "text": "hills but the brakes are hot and there's no reason for the brakes to be hot while you're going up the hill exactly because",
    "start": "2876820",
    "end": "2882460"
  },
  {
    "text": "when you start going down the hill something Bad's gonna happen they want to know that and raise an alarm before",
    "start": "2882460",
    "end": "2887620"
  },
  {
    "text": "yeah right you don't have time to index that data into a data warehouse I got to",
    "start": "2887620",
    "end": "2893680"
  },
  {
    "text": "eat later that's right that's right so so in the case of making a decision in the now making a session decision",
    "start": "2893680",
    "end": "2900940"
  },
  {
    "text": "retrospectively we've been doing a lot with sequel there are other cases of where you want to be much more flexible",
    "start": "2900940",
    "end": "2908050"
  },
  {
    "text": "about how you can ask a question of your data so so tell me why elasticsearch even",
    "start": "2908050",
    "end": "2915350"
  },
  {
    "text": "comes up as a database here yeah well it does store your data in the form of specialized indices for doing a specific",
    "start": "2915350",
    "end": "2924710"
  },
  {
    "text": "type of query so you might have an index that's particularly good at doing a natural language search you might have",
    "start": "2924710",
    "end": "2930500"
  },
  {
    "text": "another type of index that's really good at doing a time series expansion or interpolation you might have another",
    "start": "2930500",
    "end": "2936770"
  },
  {
    "text": "type of index that's particularly good at doing geospatial manipulations and so in these cases you want to do analysis",
    "start": "2936770",
    "end": "2943250"
  },
  {
    "text": "that isn't about select star from whatever it's about having a lot more",
    "start": "2943250",
    "end": "2948860"
  },
  {
    "text": "flexibility to explore your data in different ways that are probably more natural for again that exploratory mmm a",
    "start": "2948860",
    "end": "2956510"
  },
  {
    "text": "case and certainly with the case of elastic search given that it has cabana bundled in you have the ability then to",
    "start": "2956510",
    "end": "2963560"
  },
  {
    "text": "create graphs and dashboards that are based upon these much more interesting",
    "start": "2963560",
    "end": "2968570"
  },
  {
    "text": "types of queries and and much more powerful for certain types of problems so if I was storing documents in say",
    "start": "2968570",
    "end": "2976190"
  },
  {
    "text": "dynamo and I have I don't know big giant JSON so there's free text you told me",
    "start": "2976190",
    "end": "2982100"
  },
  {
    "text": "that update stream from dynamo can actually send the changes that are happening and I can have a lambda",
    "start": "2982100",
    "end": "2988340"
  },
  {
    "text": "trigger that calls elasticsearch and indexes the data in dynamo so that my",
    "start": "2988340",
    "end": "2994460"
  },
  {
    "text": "application can go query elastic search for a particular keyword and find all",
    "start": "2994460",
    "end": "3000430"
  },
  {
    "text": "the records in dynamo right exactly mmm exactly or to apply a time series",
    "start": "3000430",
    "end": "3006220"
  },
  {
    "text": "expansion on a stream of IOT data that you're storing in dynamo DB because it's extremely high throughput rates and you",
    "start": "3006220",
    "end": "3013120"
  },
  {
    "text": "need to be able to find anomalies for example alright so the things that",
    "start": "3013120",
    "end": "3018160"
  },
  {
    "start": "3017000",
    "end": "3092000"
  },
  {
    "text": "matter in picking the right database for analytics is it streaming or not is it",
    "start": "3018160",
    "end": "3025000"
  },
  {
    "text": "server less ad hoc queries do you have do you find value in that the process",
    "start": "3025000",
    "end": "3030510"
  },
  {
    "text": "prepare and index in place or not pay per query or you have dedicated servers",
    "start": "3030510",
    "end": "3037840"
  },
  {
    "text": "that you pay all the time so these are all the interesting things now that the last line here just",
    "start": "3037840",
    "end": "3044020"
  },
  {
    "text": "spending a few seconds on if you have data sitting in s3 which happens to be",
    "start": "3044020",
    "end": "3049990"
  },
  {
    "text": "SCS vu you query with Athena of course you have to convert the text into numbers and stuff because you want to do",
    "start": "3049990",
    "end": "3056710"
  },
  {
    "text": "sums so that you pay the computation that brute force computation you pay that while you're querying but something",
    "start": "3056710",
    "end": "3064150"
  },
  {
    "text": "like Athena can also open other formats like JSON and and and and part K and",
    "start": "3064150",
    "end": "3069310"
  },
  {
    "text": "part K is a column or format which is very handy so if you actually store your",
    "start": "3069310",
    "end": "3075100"
  },
  {
    "text": "data in the format of parquet in s3 when you run Athena on it then you don't have to do the conversion pay for that at the",
    "start": "3075100",
    "end": "3082450"
  },
  {
    "text": "query time because that you're already converted to data and you can query so there's a lot of interesting",
    "start": "3082450",
    "end": "3088420"
  },
  {
    "text": "combinations that you can get to with these workloads and one of the things that's very very",
    "start": "3088420",
    "end": "3096100"
  },
  {
    "start": "3092000",
    "end": "3172000"
  },
  {
    "text": "large customers I have yet to find someone says no we have one data warehouse it's one kind of a database",
    "start": "3096100",
    "end": "3102670"
  },
  {
    "text": "that's all we need we get all the insights from that thing and that's it right not-not-not these days where",
    "start": "3102670",
    "end": "3108220"
  },
  {
    "text": "people are trying to find insights from all kinds of data so what we do see is a lot of people who have a hybrid systems",
    "start": "3108220",
    "end": "3116619"
  },
  {
    "text": "you might have redshift you might have Athena you might be doing streaming you might have your operational databases",
    "start": "3116619",
    "end": "3124450"
  },
  {
    "text": "wired to your analytics systems you",
    "start": "3124450",
    "end": "3130210"
  },
  {
    "text": "might be going through s3 maybe your operational databases occasionally export and dump stuff in s3 which then",
    "start": "3130210",
    "end": "3136690"
  },
  {
    "text": "you can query with Athena to see if there's anything useful in there which then if you do find it you might",
    "start": "3136690",
    "end": "3142840"
  },
  {
    "text": "actually write an ETL job to go from your OLTP system directly to your data warehouse and the nice thing about these",
    "start": "3142840",
    "end": "3150550"
  },
  {
    "text": "combination is that you basically start using the right set of tools right because maybe you you don't need to have",
    "start": "3150550",
    "end": "3160060"
  },
  {
    "text": "servers that are up all the time because you occasionally query some data and that Athena comes in really well but for",
    "start": "3160060",
    "end": "3166030"
  },
  {
    "text": "the dashboard that you need to be active all the time you use redshift or you use a combination of all of them which",
    "start": "3166030",
    "end": "3172840"
  },
  {
    "text": "really brings back to the portfolio choosing the right database it's not about choosing the",
    "start": "3172840",
    "end": "3178359"
  },
  {
    "text": "right database for everything you do is choosing the right set of databases to apply to the right set of data for the",
    "start": "3178359",
    "end": "3184809"
  },
  {
    "text": "particular applications that you have and I think you'll end up using a combination and this is why we kind of",
    "start": "3184809",
    "end": "3191799"
  },
  {
    "text": "are pushing for the managed stuff because you're gonna use a combination of databases you certainly don't want to",
    "start": "3191799",
    "end": "3197259"
  },
  {
    "text": "have to figure out how to do backups on DynamoDB and Aurora and redshift because",
    "start": "3197259",
    "end": "3202390"
  },
  {
    "text": "that's really painful so we do that for you so you don't have to deal with the manageability part so this is kind of",
    "start": "3202390",
    "end": "3208509"
  },
  {
    "text": "the stack if you look at the stack how do you move data where is the terminal place for data something like glue where",
    "start": "3208509",
    "end": "3215829"
  },
  {
    "text": "you can do your ETL you have your operational databases you have your analytics databases and then you have",
    "start": "3215829",
    "end": "3221920"
  },
  {
    "text": "things like quick sites that sit on top for visualization dashboarding and your",
    "start": "3221920",
    "end": "3227559"
  },
  {
    "text": "reports and such and then the announce stage maker which is basically our machine learning capabilities that you",
    "start": "3227559",
    "end": "3233890"
  },
  {
    "text": "can now use to apply to your analytics work clothes to even build models and maybe you even",
    "start": "3233890",
    "end": "3241450"
  },
  {
    "text": "start using some of your models in your operational databases so I don't know",
    "start": "3241450",
    "end": "3246940"
  },
  {
    "text": "for scheduling staff at the restaurant on busy days so this is kind of the",
    "start": "3246940",
    "end": "3253890"
  },
  {
    "text": "picture that we're driving again purpose-built databases are more",
    "start": "3253890",
    "end": "3259599"
  },
  {
    "text": "efficient at scale so if you're building big stuff don't try to stuff everything",
    "start": "3259599",
    "end": "3264910"
  },
  {
    "text": "into the one database because you think that's more convenient to just have one I think the diversified backends for",
    "start": "3264910",
    "end": "3271410"
  },
  {
    "text": "databases ultimately end up being better we try to make sure that everything is",
    "start": "3271410",
    "end": "3278319"
  },
  {
    "text": "managed so you don't have to take the inconvenience and we are always trying to stay open so elastic cash for example",
    "start": "3278319",
    "end": "3286269"
  },
  {
    "text": "with Redis or Postgres or my sequel this or none of these are AWS thing you want",
    "start": "3286269",
    "end": "3291849"
  },
  {
    "text": "to take your my sequel database somewhere else you can and so that is the idea of remaining open so that you",
    "start": "3291849",
    "end": "3297369"
  },
  {
    "text": "can bring stuff in and you can take stuff out you want to bring your my sequel or sequel server or CRO or take",
    "start": "3297369",
    "end": "3303279"
  },
  {
    "text": "it out you know that openness allows you to do that and of course the customer session is you tell us what doesn't work",
    "start": "3303279",
    "end": "3310000"
  },
  {
    "text": "for you give us feedback at reinvent Vigo spend the next 12 months fixing all",
    "start": "3310000",
    "end": "3315280"
  },
  {
    "text": "the stuff which you want us to fix we come back here and then we start the cycle all over again so I'll pause here",
    "start": "3315280",
    "end": "3321520"
  },
  {
    "text": "maybe well we have four minutes so we'll take a couple of questions if if you have any questions please use the mic so",
    "start": "3321520",
    "end": "3327310"
  },
  {
    "text": "people can hear your question you had mentioned Dax Dax and in the",
    "start": "3327310",
    "end": "3338500"
  },
  {
    "text": "case where you're using Dax is there any need to use ElastiCache and especially",
    "start": "3338500",
    "end": "3344680"
  },
  {
    "text": "if you're wanting to run geospatial queries sure so so Doc's is really then",
    "start": "3344680",
    "end": "3350710"
  },
  {
    "text": "going to give you the ability to query through to dynamodb you have other types of queries you need against other data",
    "start": "3350710",
    "end": "3357190"
  },
  {
    "text": "sources and you mentioned geospatial for example then you may run that query against Postgres database and then push",
    "start": "3357190",
    "end": "3365050"
  },
  {
    "text": "the geospatial coordinates for example into a cache so you can consume those",
    "start": "3365050",
    "end": "3370119"
  },
  {
    "text": "over time so pick up my most recent route or route options for example if",
    "start": "3370119",
    "end": "3375250"
  },
  {
    "text": "you were doing a mapping application you might say go compute a few routes cache those so if somebody wants to come along because there's no traffic works then",
    "start": "3375250",
    "end": "3381940"
  },
  {
    "text": "they can pick up and pick those out for example you can also use elastic search for that and then put a cache in front",
    "start": "3381940",
    "end": "3387340"
  },
  {
    "text": "of that for the geospatial types thank you yes where do you see a data Lake sitting in",
    "start": "3387340",
    "end": "3394359"
  },
  {
    "text": "all this sure so data Lake really is going to be the the foundation of data rest for all of the different types of",
    "start": "3394359",
    "end": "3401890"
  },
  {
    "text": "data that you're ingesting and give you the ability to make these choices about which engine to choose for a particular",
    "start": "3401890",
    "end": "3409510"
  },
  {
    "text": "problem so we started to see that data Lake is the foundation of data storage and then you start to look at projecting",
    "start": "3409510",
    "end": "3416260"
  },
  {
    "text": "that data Lake data into an engine to solve a problem and so I think they work very well in concert and the data Lake",
    "start": "3416260",
    "end": "3423310"
  },
  {
    "start": "3419000",
    "end": "3600000"
  },
  {
    "text": "gives you the ability to change over time to take advantage of new technologies as they come about and a",
    "start": "3423310",
    "end": "3429430"
  },
  {
    "text": "great example is a Neptune if you have a query that you're servicing today with a relational database you have the ability",
    "start": "3429430",
    "end": "3434770"
  },
  {
    "text": "to push that through your data Lake and load in Neptune and start using an a-star query for example okay yes what is the",
    "start": "3434770",
    "end": "3442610"
  },
  {
    "text": "difference between Athena and it's a spectrum or what is a use case for each",
    "start": "3442610",
    "end": "3447740"
  },
  {
    "text": "one then you use it yeah great question comes up very very frequently so redshift spectrum is for data that is",
    "start": "3447740",
    "end": "3455540"
  },
  {
    "text": "optimized for working within a like a star schema model for example because it",
    "start": "3455540",
    "end": "3461360"
  },
  {
    "text": "is a data warehousing workload and spectrum is the ability to separate compute from storage within an",
    "start": "3461360",
    "end": "3466910"
  },
  {
    "text": "enterprise data warehouse architecture Athena is very different in that you're applying a schema either through the",
    "start": "3466910",
    "end": "3473000"
  },
  {
    "text": "data catalog or when you're actually issuing the query and so you have a lot",
    "start": "3473000",
    "end": "3478490"
  },
  {
    "text": "more flexibility in terms of the types of data that you can issue queries against with an engine like Athena where",
    "start": "3478490",
    "end": "3484070"
  },
  {
    "text": "a spectrum is for giving you very well-structured well modeled data where you're getting the price point of s3",
    "start": "3484070",
    "end": "3490180"
  },
  {
    "text": "because probably that data is not as high a value and in fact you can share",
    "start": "3490180",
    "end": "3495350"
  },
  {
    "text": "data between clusters using spectrum and you can query the same data that you're",
    "start": "3495350",
    "end": "3500600"
  },
  {
    "text": "querying from spectrum in Athena and vice versa so you don't only have to make one choice versus the other but",
    "start": "3500600",
    "end": "3506240"
  },
  {
    "text": "certainly the source of data for spectrum tends to be well modeled data warehousing type data you also have to",
    "start": "3506240",
    "end": "3513050"
  },
  {
    "text": "have a provision redshift cluster to use specs that's where that computer can we",
    "start": "3513050",
    "end": "3518510"
  },
  {
    "text": "assume that the structured data instead of loading interactive keep it in s3 and",
    "start": "3518510",
    "end": "3523700"
  },
  {
    "text": "then use the spectrum for querying it yeah absolutely you know it's it's a very common pattern where in order to",
    "start": "3523700",
    "end": "3529340"
  },
  {
    "text": "keep the we talked about the hot working set for an operational database well analytics has the same thing you may say",
    "start": "3529340",
    "end": "3536300"
  },
  {
    "text": "we really only tend to query a year's worth of data so you keep that in your data warehouse you keep everything",
    "start": "3536300",
    "end": "3541880"
  },
  {
    "text": "forever in spectrum and then you only need to size your redshift cluster to",
    "start": "3541880",
    "end": "3547550"
  },
  {
    "text": "deal with the hot data you can still reach through into the data store we're using spectrum thank you yes",
    "start": "3547550",
    "end": "3553010"
  },
  {
    "text": "on the left side what do you say about",
    "start": "3553010",
    "end": "3559120"
  },
  {
    "text": "Cassandra is there any recommendation of shifting to one of the Amazon supported",
    "start": "3559120",
    "end": "3564380"
  },
  {
    "text": "stuff or so of course DynamoDB is is a good place",
    "start": "3564380",
    "end": "3571740"
  },
  {
    "text": "for for that especially now that we have global tables and that we announced",
    "start": "3571740",
    "end": "3577500"
  },
  {
    "text": "today where you can have replication across regions you can do master master and a lot of people use cassandra for",
    "start": "3577500",
    "end": "3583440"
  },
  {
    "text": "that and lots of people use cassandra in ec2 and one of the reasons a lot of",
    "start": "3583440",
    "end": "3589170"
  },
  {
    "text": "customers that we see that move from cassandra to dynamo is because they just don't want to manage the cassandra",
    "start": "3589170",
    "end": "3594480"
  },
  {
    "text": "cluster otherwise you know you have the option of running Cassandra and ec2 or",
    "start": "3594480",
    "end": "3599990"
  },
  {
    "text": "use dynamodb that would be the place to go and it's also important to call out that DynamoDB is is quite unique in that",
    "start": "3599990",
    "end": "3607109"
  },
  {
    "text": "it supports both a document oriented interface for working with data as well as something that's more like a column",
    "start": "3607109",
    "end": "3612630"
  },
  {
    "text": "family database like cassandra to kind of get both in this this which API you use yes actually following up on the",
    "start": "3612630",
    "end": "3620760"
  },
  {
    "text": "document database part of dynamo what are the use cases we have is we have JSON stores or XML stores which we'd",
    "start": "3620760",
    "end": "3627119"
  },
  {
    "text": "like to store and be able to query those by different attributes is that possible with dynamo now you have the option of",
    "start": "3627119",
    "end": "3636119"
  },
  {
    "text": "using global indexes and local indexes so you would be able to index on a",
    "start": "3636119",
    "end": "3641910"
  },
  {
    "text": "property for that but could we do all the properties to be Auto index we don't",
    "start": "3641910",
    "end": "3648119"
  },
  {
    "text": "have an auto index for all properties so and then and you have to take care about",
    "start": "3648119",
    "end": "3653760"
  },
  {
    "text": "just indexing everything all the time because it you know it has consequences",
    "start": "3653760",
    "end": "3659160"
  },
  {
    "text": "right you know things in a big you have to pay for it so we would recommend that instead of Auto indexing everything to",
    "start": "3659160",
    "end": "3665339"
  },
  {
    "text": "index the things that you really need and then if you really want to you can",
    "start": "3665339",
    "end": "3671040"
  },
  {
    "text": "also do the elastic search to index some of the things which you think needs an",
    "start": "3671040",
    "end": "3676470"
  },
  {
    "text": "indexing in a different way than the indexes that a dynamo provides and using the dynamo",
    "start": "3676470",
    "end": "3682230"
  },
  {
    "text": "streams to then send updates to elastic search is a really good way to go thank",
    "start": "3682230",
    "end": "3688080"
  },
  {
    "text": "you yes last question so our team has started exploring it too predictive",
    "start": "3688080",
    "end": "3693720"
  },
  {
    "text": "analytics for strategic planning how they do currently is get a data dump",
    "start": "3693720",
    "end": "3701220"
  },
  {
    "text": "CSV formats but these are multiple spreadsheets and they manually kind of do we look upon spreadsheets and combine",
    "start": "3701220",
    "end": "3707190"
  },
  {
    "text": "into one so how can a tina helped me in combining these spreadsheets do have to",
    "start": "3707190",
    "end": "3713849"
  },
  {
    "text": "do it manually and dump it in to put it on s3 so that i can query the data that i want our do i have to use some kind of",
    "start": "3713849",
    "end": "3721230"
  },
  {
    "text": "lambda to kind of combine these spreadsheets and then use a tina over it",
    "start": "3721230",
    "end": "3726410"
  },
  {
    "text": "go ahead yeah so there's a lot of different options for for how you would mix that data together and enhance it",
    "start": "3726410",
    "end": "3733320"
  },
  {
    "text": "and certainly the ability to import CSV s via your data catalog and then issue queries that would mix that data",
    "start": "3733320",
    "end": "3739380"
  },
  {
    "text": "together you don't necessarily need to go fro U at that problem with an ETL like approach you may be able to query",
    "start": "3739380",
    "end": "3746369"
  },
  {
    "text": "it at rest combine it enhance it and then write a more structured modeled set of data than meets some business needs",
    "start": "3746369",
    "end": "3752940"
  },
  {
    "text": "so yeah a very common use case it's also worth mentioning if the CSV s are useful",
    "start": "3752940",
    "end": "3758250"
  },
  {
    "text": "in their own right those can be imported straight into quick site and you can just start using them thank you alright",
    "start": "3758250",
    "end": "3764520"
  },
  {
    "text": "so we're out of time I'll be hanging around here if you just want to come and chat for a little while - thank you",
    "start": "3764520",
    "end": "3772640"
  }
]