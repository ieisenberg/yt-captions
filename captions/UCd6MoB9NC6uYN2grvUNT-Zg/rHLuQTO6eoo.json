[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "Welcome to 'This is My Architecture.'",
    "start": "7458",
    "end": "9446"
  },
  {
    "text": "Today I have here, Cem from Insider.\nHello, Cem.",
    "start": "9446",
    "end": "11941"
  },
  {
    "text": "Hello, Kamran.",
    "start": "11941",
    "end": "13297"
  },
  {
    "text": "Can you tell me a little bit more about Insider?",
    "start": "13297",
    "end": "15085"
  },
  {
    "text": "Sure.",
    "start": "15085",
    "end": "16256"
  },
  {
    "text": "Insider is a multi-channel\nmarketing automation platform",
    "start": "16256",
    "end": "19276"
  },
  {
    "text": "that enables brands\nto deliver personalized experiences",
    "start": "19276",
    "end": "22581"
  },
  {
    "text": "to their customers.",
    "start": "22582",
    "end": "24587"
  },
  {
    "start": "24000",
    "end": "60000"
  },
  {
    "text": "So we have a really\ninteresting architecture here.",
    "start": "24587",
    "end": "26769"
  },
  {
    "text": "Can you tell me what challenge\nyou were trying to solve?",
    "start": "26769",
    "end": "28838"
  },
  {
    "text": "Yeah, so before,\nwe are big Spot users within Insider.",
    "start": "30135",
    "end": "34741"
  },
  {
    "text": "Before using EKS,",
    "start": "34741",
    "end": "35996"
  },
  {
    "text": "we were managing our Spot\nInstances via auto-scaling groups,",
    "start": "35996",
    "end": "40642"
  },
  {
    "text": "Spot fleets and Elastic Beanstalk.",
    "start": "40642",
    "end": "44760"
  },
  {
    "text": "So with EKS,",
    "start": "44761",
    "end": "46036"
  },
  {
    "text": "we have consolidated all that",
    "start": "46036",
    "end": "48411"
  },
  {
    "text": "compute architecture into one place,",
    "start": "50715",
    "end": "52789"
  },
  {
    "text": "and we are also solving the problem of data",
    "start": "52789",
    "end": "55322"
  },
  {
    "text": "flowing from multiple channels\nto the company.",
    "start": "55322",
    "end": "58808"
  },
  {
    "text": "That's great,\nso getting value out of the data.",
    "start": "58808",
    "end": "60962"
  },
  {
    "start": "60000",
    "end": "118000"
  },
  {
    "text": "- Yeah.\n- So let's dive in.",
    "start": "60963",
    "end": "62277"
  },
  {
    "text": "Sure.",
    "start": "62277",
    "end": "63319"
  },
  {
    "text": "So a typical, we have integrations\nwith multiple channels, as I said,",
    "start": "63319",
    "end": "68355"
  },
  {
    "text": "so let's take a mobile,\nour Mobile SDK, for example.",
    "start": "68355",
    "end": "72800"
  },
  {
    "text": "Once the user uses the app,",
    "start": "72800",
    "end": "76356"
  },
  {
    "text": "we get the data through our public ELB,\nwhich is provisioned by EKS.",
    "start": "76356",
    "end": "80883"
  },
  {
    "text": "So, that ELB then forwards the traffic",
    "start": "82310",
    "end": "86527"
  },
  {
    "text": "to EKS, to one of,",
    "start": "86527",
    "end": "89362"
  },
  {
    "text": "we have two actually two microservices",
    "start": "89362",
    "end": "91860"
  },
  {
    "text": "that are in charge\nof receiving the incoming traffic.",
    "start": "91860",
    "end": "96258"
  },
  {
    "text": "So those services,\nthey contain minimal business logic,",
    "start": "96258",
    "end": "101442"
  },
  {
    "text": "they just do simple validations\nand sanity checks",
    "start": "101442",
    "end": "103284"
  },
  {
    "text": "and then forward the data\nto our queue solution,",
    "start": "103284",
    "end": "106459"
  },
  {
    "text": "- which is NS Queue.\n- Okay.",
    "start": "106459",
    "end": "108768"
  },
  {
    "text": "And, within EKS, we use managed node groups.",
    "start": "108768",
    "end": "112357"
  },
  {
    "text": "So that lets us take advantage\nof Spot Instances very efficiently.",
    "start": "112358",
    "end": "117097"
  },
  {
    "text": "All right, that's great.",
    "start": "117097",
    "end": "118425"
  },
  {
    "start": "118000",
    "end": "140000"
  },
  {
    "text": "So what kind of scale\nare we talking about here?",
    "start": "118425",
    "end": "120592"
  },
  {
    "text": "So through our public ELB,",
    "start": "120592",
    "end": "123922"
  },
  {
    "text": "we have about 50,000 requests per second.",
    "start": "123922",
    "end": "128209"
  },
  {
    "text": "And this is for write.",
    "start": "130416",
    "end": "132133"
  },
  {
    "text": "This is our write workloads.",
    "start": "132133",
    "end": "133328"
  },
  {
    "text": "And for our read workload,",
    "start": "133328",
    "end": "135855"
  },
  {
    "text": "we have about 100,000 requests per second.",
    "start": "135855",
    "end": "139702"
  },
  {
    "text": "Okay, so you write it into a queue,\nand then what happens next?",
    "start": "139702",
    "end": "143912"
  },
  {
    "start": "140000",
    "end": "188000"
  },
  {
    "text": "So what happens next is,\nwe have consumers within EKS, again,",
    "start": "143912",
    "end": "147874"
  },
  {
    "text": "and those consumers,",
    "start": "147874",
    "end": "150028"
  },
  {
    "text": "I tie to the depth\nof the queue via custom metrics,",
    "start": "150028",
    "end": "155886"
  },
  {
    "text": "so our HBase scale our consumers,\ndepending on the depth of the queue.",
    "start": "155886",
    "end": "161116"
  },
  {
    "text": "So, once we write the data,",
    "start": "161116",
    "end": "163422"
  },
  {
    "text": "we read it back into EKS, to our consumers.",
    "start": "163422",
    "end": "166856"
  },
  {
    "text": "And we provision more consumers depending\non how much data we have in the queue,",
    "start": "166856",
    "end": "170348"
  },
  {
    "text": "as I said.",
    "start": "170348",
    "end": "171824"
  },
  {
    "text": "And once we read that data,\nthat piece of traffic actually,",
    "start": "171824",
    "end": "175524"
  },
  {
    "text": "we write it three ways.",
    "start": "175524",
    "end": "177675"
  },
  {
    "text": "We write it to DynamoDB,\nour OLAP DB solution, which is ClickHouse,",
    "start": "180568",
    "end": "185189"
  },
  {
    "text": "and then we write it to an S3 bucket.",
    "start": "185190",
    "end": "187039"
  },
  {
    "text": "Okay, why the segregation of data between\nDynamo and ClickHouse and S3?",
    "start": "187039",
    "end": "191396"
  },
  {
    "start": "188000",
    "end": "248000"
  },
  {
    "text": "Well, we use S3 to troubleshoot our problems.",
    "start": "192737",
    "end": "196099"
  },
  {
    "text": "Okay.",
    "start": "196099",
    "end": "197908"
  },
  {
    "text": "What we do is we write every piece of traffic\nto S3 along with a lot of meta data.",
    "start": "197908",
    "end": "202910"
  },
  {
    "text": "So in case there is like a bad integration",
    "start": "202910",
    "end": "206693"
  },
  {
    "text": "or unwanted data for situations,",
    "start": "206693",
    "end": "209997"
  },
  {
    "text": "we just plug Athena in to S3",
    "start": "209998",
    "end": "213451"
  },
  {
    "text": "to find the root cause\nof that unwanted data.",
    "start": "213451",
    "end": "217594"
  },
  {
    "text": "We can easily identify it via the meta data\nthat we write alongside the traffic.",
    "start": "217594",
    "end": "222172"
  },
  {
    "text": "So like we can do quick troubleshooting\nregarding the ingestion of data.",
    "start": "222172",
    "end": "227069"
  },
  {
    "text": "And another use case we have is,",
    "start": "227070",
    "end": "229221"
  },
  {
    "text": "if something goes wrong\nwith our data sources,",
    "start": "229221",
    "end": "231446"
  },
  {
    "text": "we can just replay",
    "start": "231446",
    "end": "234858"
  },
  {
    "text": "the entire traffic between\na specified amount of time",
    "start": "234858",
    "end": "240482"
  },
  {
    "text": "from Athena and we just read\nthe traffic back and write it to a queue.",
    "start": "240482",
    "end": "243724"
  },
  {
    "text": "And then the process starts\nall over again. ",
    "start": "243724",
    "end": "246305"
  },
  {
    "text": "It's really powerful use\ncase with Athena as well.",
    "start": "246305",
    "end": "248506"
  },
  {
    "start": "248000",
    "end": "322000"
  },
  {
    "text": "I also see you have a private ELB here.",
    "start": "248506",
    "end": "250398"
  },
  {
    "text": "I'm assuming this is for your internal users.",
    "start": "250398",
    "end": "252719"
  },
  {
    "text": "That's correct.\nSo we have many teams within the company.",
    "start": "252719",
    "end": "257410"
  },
  {
    "text": "And all of them need the data",
    "start": "257410",
    "end": "261357"
  },
  {
    "text": "that is stored within those\ndata sources from us.",
    "start": "261357",
    "end": "264564"
  },
  {
    "text": "So this is how we communicate with\nthe outside world, if you will.",
    "start": "264564",
    "end": "269625"
  },
  {
    "text": "So when a product wants a specific piece\nof data from us, I mean,",
    "start": "271358",
    "end": "275984"
  },
  {
    "text": "all the products within the company\nare basically our customers, right?",
    "start": "275984",
    "end": "279028"
  },
  {
    "text": "We don't have products ourselves\nin this architecture.",
    "start": "279028",
    "end": "282203"
  },
  {
    "text": "When they want data from us,",
    "start": "282203",
    "end": "285207"
  },
  {
    "text": "they communicate it to us via the private ELB,",
    "start": "285207",
    "end": "288108"
  },
  {
    "text": "which then goes to EKS,",
    "start": "288108",
    "end": "290608"
  },
  {
    "text": "which is where we have\na lot of microservices",
    "start": "290608",
    "end": "293785"
  },
  {
    "text": "that serve different purposes.",
    "start": "293785",
    "end": "297312"
  },
  {
    "text": "So depending on the use case, the data\ncan be read from DynamoDB or ClickHouse,",
    "start": "297312",
    "end": "303068"
  },
  {
    "text": "and then served back\nto whichever product requested the data",
    "start": "303068",
    "end": "308466"
  },
  {
    "text": "in a manner that's formatted,",
    "start": "308466",
    "end": "313073"
  },
  {
    "text": "consolidated and sanitized.",
    "start": "313073",
    "end": "315348"
  },
  {
    "text": "So we never allow direct access\nto data sources.",
    "start": "315348",
    "end": "317628"
  },
  {
    "text": "We do everything through our APIs.",
    "start": "317628",
    "end": "319737"
  },
  {
    "text": "To provide that security for data as well.",
    "start": "319738",
    "end": "320856"
  },
  {
    "text": "- Right, exactly.\n- That's great.",
    "start": "320856",
    "end": "322565"
  },
  {
    "start": "322000",
    "end": "388000"
  },
  {
    "text": "So, what kind of benefits have you\nrealized from this architecture?",
    "start": "322566",
    "end": "325284"
  },
  {
    "text": "As I said, we're big Spot users.",
    "start": "326582",
    "end": "328105"
  },
  {
    "text": "So moving this architecture",
    "start": "328105",
    "end": "332371"
  },
  {
    "text": "to EKS enabled us to spend less time",
    "start": "332371",
    "end": "336446"
  },
  {
    "text": "on DevOps operations.",
    "start": "336446",
    "end": "339942"
  },
  {
    "text": "And the other thing is,\nsince we have many products,",
    "start": "339942",
    "end": "343628"
  },
  {
    "text": "we have different data stores\nfor all of our products, right?",
    "start": "343628",
    "end": "346684"
  },
  {
    "text": "And they all had their own data solutions\nat the time.",
    "start": "346684",
    "end": "351367"
  },
  {
    "text": "What we did here is once we centralized\nall the data processing into one place,",
    "start": "351368",
    "end": "356940"
  },
  {
    "text": "we effectively freed\nall the other product teams",
    "start": "356940",
    "end": "362038"
  },
  {
    "text": "to actually focus\non creating product features",
    "start": "362038",
    "end": "365233"
  },
  {
    "text": "and create business value rather than\nspend time with data management.",
    "start": "365233",
    "end": "370300"
  },
  {
    "text": "That's great.",
    "start": "370300",
    "end": "371353"
  },
  {
    "text": "So you're getting the value out\nof the data that you're acquiring.",
    "start": "371353",
    "end": "373639"
  },
  {
    "text": "- All right.\n- Yeah.",
    "start": "373640",
    "end": "374715"
  },
  {
    "text": "So, Cem, thank you for sharing\nyour work with me today.",
    "start": "374715",
    "end": "377949"
  },
  {
    "text": "Yeah, thank you for having me, Kamran.",
    "start": "377949",
    "end": "379802"
  },
  {
    "text": "And thank you for joining\n'This is My Architecture.'",
    "start": "379802",
    "end": "382475"
  }
]