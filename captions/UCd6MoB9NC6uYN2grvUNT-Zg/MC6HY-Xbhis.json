[
  {
    "text": "good afternoon and welcome to the session of several as architecture so",
    "start": "179",
    "end": "5810"
  },
  {
    "text": "I'm Prakash ponnuswamy I'm a solution architect with AWS so in this session in",
    "start": "5810",
    "end": "12840"
  },
  {
    "text": "this session we are going to briefly talk about what basically server Alice's and what are the components of server",
    "start": "12840",
    "end": "17880"
  },
  {
    "text": "list and then we are going to look into some of the architecture best practices that we can cover on various different",
    "start": "17880",
    "end": "23330"
  },
  {
    "text": "application or use cases okay so what is serverless when it when we say several",
    "start": "23330",
    "end": "30539"
  },
  {
    "text": "is what we mean is like removing the here heavy lifting for you basically",
    "start": "30539",
    "end": "37290"
  },
  {
    "text": "like we take care of all the server operations so you don't need to worry about managing any of the servers and",
    "start": "37290",
    "end": "43200"
  },
  {
    "text": "stuff like that so when it comes to server less so we have this four important tenets so one is you don't",
    "start": "43200",
    "end": "48690"
  },
  {
    "text": "need to worry about servers you don't need to provision any servers you want to maintain patching any of those things",
    "start": "48690",
    "end": "53910"
  },
  {
    "text": "you don't need to manage the next thing is you pay only for what you use so effectively in a normal case you you",
    "start": "53910",
    "end": "60149"
  },
  {
    "text": "provision and then you pay for it all the time it is being running whereas in case of servers you pay only for what you exactly using another thing is you",
    "start": "60149",
    "end": "67470"
  },
  {
    "text": "don't need to worry about scaling in the sense like you can can be a small start-up start with hundred user per",
    "start": "67470",
    "end": "72659"
  },
  {
    "text": "second you can scale to 100,000 users per second and then you will be able to handle it for you without any major",
    "start": "72659",
    "end": "79460"
  },
  {
    "text": "architectural changes and then it should happen gracefully another important thing is high availability and security",
    "start": "79460",
    "end": "86159"
  },
  {
    "text": "aspect of it so it should come transparent to you so you don't need to",
    "start": "86159",
    "end": "91200"
  },
  {
    "text": "worry about whether I am deployed that in multiple easy or in multiple data center kind of constraint so it",
    "start": "91200",
    "end": "96450"
  },
  {
    "text": "automatically handles that for you and then it scales across different availability zones so you don't need to",
    "start": "96450",
    "end": "102420"
  },
  {
    "text": "worry about the scalability part okay when it comes to server less in AWS we",
    "start": "102420",
    "end": "109259"
  },
  {
    "text": "have various different services which we call a server list which have this the four tenets that we discussed before",
    "start": "109259",
    "end": "115219"
  },
  {
    "text": "today we are going to talk about compute part of it we are going to talk about the how serverless compute can be done",
    "start": "115219",
    "end": "121790"
  },
  {
    "text": "so and as you see here there are lots of customers who love service it can range",
    "start": "121790",
    "end": "128819"
  },
  {
    "text": "from various customers from a small start-up to me th companies to public sector companies like governments",
    "start": "128819",
    "end": "135090"
  },
  {
    "text": "and also very big corporates like coca-cola Jet Propulsion labs many of",
    "start": "135090",
    "end": "141300"
  },
  {
    "text": "them using serverless applications one one typical example is FINRA FINRA has a",
    "start": "141300",
    "end": "147330"
  },
  {
    "text": "very unique use case where they have a kind of a Hadoop environment which they thought of they were running on promise",
    "start": "147330",
    "end": "153630"
  },
  {
    "text": "and then they thought of migrating to ec2 when we are when they were evaluating this use case they identified",
    "start": "153630",
    "end": "158850"
  },
  {
    "text": "ok probably serverless might be helping them so they started using serverless technologies like yeah",
    "start": "158850",
    "end": "164340"
  },
  {
    "text": "aw lambda Amazon s3 Amazon sqs and then they were able to achieve the whole",
    "start": "164340",
    "end": "169350"
  },
  {
    "text": "modeling and the evaluation just using the service technology and then they were able to develop the whole solution",
    "start": "169350",
    "end": "175410"
  },
  {
    "text": "within three months and it saved them lots of money at the same time it was able to perform in faster than what they",
    "start": "175410",
    "end": "181140"
  },
  {
    "text": "were doing before okay now let's little bit focus on the compute part of it right so when we talk",
    "start": "181140",
    "end": "188069"
  },
  {
    "text": "about several us compute there are the two major things one is a SS lambda and then a SATA base forget when it comes to",
    "start": "188069",
    "end": "194310"
  },
  {
    "text": "aw slam de it is so you you write a code which is which we call as functions and then it'll be triggered by an event and",
    "start": "194310",
    "end": "200760"
  },
  {
    "text": "you can able to scale that automatically without worrying about any of the other configurations so that's the advantage",
    "start": "200760",
    "end": "206730"
  },
  {
    "text": "of lambda functions when it comes to there are most of the cases that you can do with a double is lambda there are",
    "start": "206730",
    "end": "213030"
  },
  {
    "text": "some use cases where you might need kind of a network kind of boundaries or you might have a situations where like I",
    "start": "213030",
    "end": "219329"
  },
  {
    "text": "want to connect this particular network to a specific another network or applications so in those cases probably",
    "start": "219329",
    "end": "225420"
  },
  {
    "text": "you might use a base far gate which is basically container as a service so you can able to launch your container and",
    "start": "225420",
    "end": "230489"
  },
  {
    "text": "then you don't worry about the time limitations which have with lambda and then you can able to run it as as long",
    "start": "230489",
    "end": "236609"
  },
  {
    "text": "as that you want so that's another advantage of for gate okay now let's dig",
    "start": "236609",
    "end": "242549"
  },
  {
    "text": "a little bit into a SS lambda so as I mentioned right so when you write a",
    "start": "242549",
    "end": "248130"
  },
  {
    "text": "lambda function which is basically a code that you write which we call as functions in database lambdas parlance",
    "start": "248130",
    "end": "253950"
  },
  {
    "text": "and this function can be written in various programming languages currently we support node.js Python Java goshi sharp so you",
    "start": "253950",
    "end": "262320"
  },
  {
    "text": "can write any of these languages and whenever you need to this function you need an event so that",
    "start": "262320",
    "end": "268970"
  },
  {
    "text": "even source can be multiple different types either you can manually invoke that event or it can automatically",
    "start": "268970",
    "end": "274370"
  },
  {
    "text": "invoke through a various different even streams so there will be some event which will be trading this lambda",
    "start": "274370",
    "end": "279800"
  },
  {
    "text": "function and once I trigger the lambda function that lambda function will make a business logic and when you make the",
    "start": "279800",
    "end": "286190"
  },
  {
    "text": "business logic it can connect to a external service or it can talk to another UW service or the various things",
    "start": "286190",
    "end": "292190"
  },
  {
    "text": "like it can able to connect to any of the other application that is running in V PC so it's completely possible okay as",
    "start": "292190",
    "end": "301220"
  },
  {
    "text": "I mentioned light serverless is mostly kind of an operating model so this is kind of an overview of various operating",
    "start": "301220",
    "end": "307040"
  },
  {
    "text": "model that we have so if you could look at the bottom which is basically easy to which is virtual machines so when it",
    "start": "307040",
    "end": "312230"
  },
  {
    "text": "comes to virtual machines as you see the responsibilities of AWS is taking care of physical servers and hypervisors and",
    "start": "312230",
    "end": "317900"
  },
  {
    "text": "then completely all other things like operating system patching operating system security all those things become",
    "start": "317900",
    "end": "323420"
  },
  {
    "text": "new responsibilities as you move up the ladder as you see here if you go to container management solutions here it",
    "start": "323420",
    "end": "328430"
  },
  {
    "text": "is take care of the whole container management whereas you need to take care of the worker nodes and also you need to make sure what are the applications that",
    "start": "328430",
    "end": "334820"
  },
  {
    "text": "you are deploying in the worker nodes and also the continuous the next level is far gate where you just need to",
    "start": "334820",
    "end": "340310"
  },
  {
    "text": "manage about your container images so you just take care of container images what are all the packages that you are",
    "start": "340310",
    "end": "345500"
  },
  {
    "text": "building as part of the container images that becomes your responsibility everything else becomes a dubious responsibility the next lever as you see",
    "start": "345500",
    "end": "352220"
  },
  {
    "text": "here you offload most of the responsibility dubious you just take care of your function code and then security of the function code so that's",
    "start": "352220",
    "end": "358250"
  },
  {
    "text": "becomes the only responsibility so the advantage of this is since you can offload most of the responsibility you",
    "start": "358250",
    "end": "363830"
  },
  {
    "text": "can spend more time on developing your own application so you can able to innovate and then spend more time on",
    "start": "363830",
    "end": "369380"
  },
  {
    "text": "your innovation instead of managing the servers are patching the servers how we",
    "start": "369380",
    "end": "374870"
  },
  {
    "text": "can use AWS lambda so you'll you'll be writing a lambda functions using various",
    "start": "374870",
    "end": "379910"
  },
  {
    "text": "different programming languages that I mentioned and along with that you can also bring all the all the available",
    "start": "379910",
    "end": "386150"
  },
  {
    "text": "public libraries for example if you are using Python or node.js or any of the programming languages if there are any libraries that you are using you can",
    "start": "386150",
    "end": "392090"
  },
  {
    "text": "able to bring that library as part of the package that you are creating for the lambda functions and lambda console",
    "start": "392090",
    "end": "397730"
  },
  {
    "text": "comes up with the cloud 9 interface which is basically an IDE so online ID you can able to write your lambda",
    "start": "397730",
    "end": "404159"
  },
  {
    "text": "function directly on the console if you don't want that if you want to do it also supports various different IDs so",
    "start": "404159",
    "end": "410340"
  },
  {
    "text": "we have plug-ins for various IDs and then you can able to use them to program in the way that you're already doing it",
    "start": "410340",
    "end": "416250"
  },
  {
    "text": "and when it comes to configuring the lambda function the conferring lambda function is usually based on the memory",
    "start": "416250",
    "end": "422340"
  },
  {
    "text": "so you only one parameter that you are going to configure what is the size of the memory so based on the memory size",
    "start": "422340",
    "end": "427830"
  },
  {
    "text": "that you configured you will see pu and then at work performance will scale proportionally so you are offloading",
    "start": "427830",
    "end": "433110"
  },
  {
    "text": "most of the responsibility so it become easier for you whenever you start using lambda functions ok couple of slides",
    "start": "433110",
    "end": "441090"
  },
  {
    "text": "backs we see that there is a lambda function and there will be an even which will be training the lambda functions so",
    "start": "441090",
    "end": "446159"
  },
  {
    "text": "here you see a whole bunch of even sources that can trigger a lambda function so you can see like for example",
    "start": "446159",
    "end": "452310"
  },
  {
    "text": "when it come to a data stores there can be s3 where you can store an object in s3 whenever you store an object in s3 it",
    "start": "452310",
    "end": "458699"
  },
  {
    "text": "automatically can trigger a lambda function or when it comes to messaging for example you can have an SNS SNS",
    "start": "458699",
    "end": "465630"
  },
  {
    "text": "basically a topic where you send a message to the topic that message will be automatically clearing a lambda function and then you can able to",
    "start": "465630",
    "end": "472139"
  },
  {
    "text": "process whatever in that message or you can able to schedule the lambda function based on the cron jobs or if you look at",
    "start": "472139",
    "end": "477960"
  },
  {
    "text": "alexa most of the alux are back in these days runs on lambda it's a very common use case right so you don't need to run",
    "start": "477960",
    "end": "484469"
  },
  {
    "text": "a server always only whenever a user makes an Alexa call then you need to run that so in that case lambda becomes a",
    "start": "484469",
    "end": "491039"
  },
  {
    "text": "very natural use case for it like you don't pay for a static server always",
    "start": "491039",
    "end": "496590"
  },
  {
    "text": "running you pay only whenever somebody uses that and then it becomes a right very good choice for those kind of",
    "start": "496590",
    "end": "502020"
  },
  {
    "text": "applications ok so we talked about event sources the next one is execution model",
    "start": "502020",
    "end": "508889"
  },
  {
    "text": "so ok I have an event and that even will be training a lambda function there are three different ways that lambda",
    "start": "508889",
    "end": "514709"
  },
  {
    "text": "function can behave so first one is synchronous execution when you are having an API you send a request and",
    "start": "514709",
    "end": "521130"
  },
  {
    "text": "then you usually immediately request a response so that is request response model which is a synchronous model the",
    "start": "521130",
    "end": "527699"
  },
  {
    "text": "next one is a synchronous event model where let us say like as I mentioned either you send a match",
    "start": "527699",
    "end": "533370"
  },
  {
    "text": "to an SNS topic you send them upload a file to s3 so those cases that can",
    "start": "533370",
    "end": "538620"
  },
  {
    "text": "trigger a lambda function which can happen are synchronously and then get the response back for you the another third execution model is",
    "start": "538620",
    "end": "545160"
  },
  {
    "text": "stream stream processing which works mostly in case of DynamoDB streams and kenosis streams so whenever there is a",
    "start": "545160",
    "end": "551100"
  },
  {
    "text": "changes that is happening to dynamodb that can trigger a lambda function so or whenever so let's say I have a kicks",
    "start": "551100",
    "end": "557190"
  },
  {
    "text": "click stream website you have a website and then you are getting a clickstream data which needs to be sent to kinases",
    "start": "557190",
    "end": "562860"
  },
  {
    "text": "streams which you can have a lambda and then do a real-time processing using lambda functions that's an example so",
    "start": "562860",
    "end": "568770"
  },
  {
    "text": "these are all the execution models with lambda function okay how lambda help development easier I mentioned lambda",
    "start": "568770",
    "end": "576870"
  },
  {
    "text": "supports like five or six run times apart from that if you are more familiar",
    "start": "576870",
    "end": "583620"
  },
  {
    "text": "with a different runtime like different programming languages then you can bring your own programming languages so you",
    "start": "583620",
    "end": "588720"
  },
  {
    "text": "can build your own custom runtime and then bring your own language if you look at there are already currently there are",
    "start": "588720",
    "end": "594029"
  },
  {
    "text": "lots of open source that is available in open source repositories for programming languages like rust Perl PHP which are",
    "start": "594029",
    "end": "600810"
  },
  {
    "text": "directly not supported by lambda but it is a custom runtime that you can bring and there is another interesting aspect",
    "start": "600810",
    "end": "606870"
  },
  {
    "text": "for lambda function that we launched at reinvented Slayers so basically let us say like if you have a common code or a",
    "start": "606870",
    "end": "613529"
  },
  {
    "text": "common functionality that should be applied to a brief lambda functions that you create in your account what you can create is you can create a layer and",
    "start": "613529",
    "end": "620550"
  },
  {
    "text": "then you can share that layer within your account or multiple accounts and then that layer can be added as part of",
    "start": "620550",
    "end": "626250"
  },
  {
    "text": "your lambda function so you can able to share a common code across multiple functions and as I mentioned lambda also",
    "start": "626250",
    "end": "633240"
  },
  {
    "text": "has integration with various IDs we have plugins so it provides local debugging you can do it racing locally and then",
    "start": "633240",
    "end": "639270"
  },
  {
    "text": "see you whenever you develop a lambda functions and we also enabled integrations with sqs excuse of queuing",
    "start": "639270",
    "end": "645450"
  },
  {
    "text": "service so you can able to build a queue based processing service that adds",
    "start": "645450",
    "end": "650490"
  },
  {
    "text": "additional advantage like you can able to don't need to wait for a synchronous",
    "start": "650490",
    "end": "655529"
  },
  {
    "text": "actions you can put it in the queue and then you can proceed based on the queue a later point in time and we also added",
    "start": "655529",
    "end": "662130"
  },
  {
    "text": "an integration with load balancers so earlier you need to always have an EAP interface in front of lambda to make any",
    "start": "662130",
    "end": "668350"
  },
  {
    "text": "API call now you can have a load balancer and then you can you make an API call directly to lambda function",
    "start": "668350",
    "end": "674200"
  },
  {
    "text": "through a load balancer okay so we talked about events we talked about",
    "start": "674200",
    "end": "680350"
  },
  {
    "text": "execution models the next one is permissions when we talk about",
    "start": "680350",
    "end": "689260"
  },
  {
    "text": "permissions there are two important permission models so one is invoke",
    "start": "689260",
    "end": "696130"
  },
  {
    "text": "so the function policies is basically who has the permissions to make changes to the lambda function or who can invoke",
    "start": "696130",
    "end": "702370"
  },
  {
    "text": "the lambda function so in some cases it can be API gateway or it can be whatever",
    "start": "702370",
    "end": "707770"
  },
  {
    "text": "even stream which can trigger the lambda function that that's a permission that they need to have then next one is",
    "start": "707770",
    "end": "713200"
  },
  {
    "text": "execution policies the execution policies is basically what the lambda",
    "start": "713200",
    "end": "718840"
  },
  {
    "text": "function can do for example you have a lambda function and then it needs to download a file from s3 then you need to",
    "start": "718840",
    "end": "725350"
  },
  {
    "text": "define the lambda of role policies such that the lambda has a permission so that it can go and download the file from s3",
    "start": "725350",
    "end": "731680"
  },
  {
    "text": "or upload the file to s3 so this is the two different security construct with lambda next one is how well basic lambda",
    "start": "731680",
    "end": "740380"
  },
  {
    "text": "function looks as you see here you have a lambda function lambda function has two different parameters passed as part",
    "start": "740380",
    "end": "747010"
  },
  {
    "text": "of its even Handler so whenever you create a lambda function it will be having a handler function the handler function is what we invoked whenever a",
    "start": "747010",
    "end": "753670"
  },
  {
    "text": "new event comes in and that whenever it get invoked it has two parameters one is",
    "start": "753670",
    "end": "759010"
  },
  {
    "text": "even even contains the actual data payload that comes as part of the event and then we have the context the context",
    "start": "759010",
    "end": "765670"
  },
  {
    "text": "parameter contains the actual lambda context so you can able to identify how much time remaining in the lambda function or all those kind of things as",
    "start": "765670",
    "end": "772210"
  },
  {
    "text": "part of the lambda context in some case of a synchronous programming languages like Java Script you can able to perform",
    "start": "772210",
    "end": "780220"
  },
  {
    "text": "a callback using the the context object",
    "start": "780220",
    "end": "785850"
  },
  {
    "text": "okay so we seen various different aspects of lambda function now let us look into the AP gateway so AP gateway",
    "start": "785850",
    "end": "794800"
  },
  {
    "text": "is a fully managed AP service it you can able to build an unified",
    "start": "794800",
    "end": "799990"
  },
  {
    "text": "a platform using APA gateway it handles authentication authorization for you you can able to throttle you can able to",
    "start": "799990",
    "end": "805660"
  },
  {
    "text": "perform DJ's production various things are possible with a big gateway another advantage is you can able to create a",
    "start": "805660",
    "end": "812740"
  },
  {
    "text": "plan with AP gateway for example if you have a premium users that you can configure it such that the premie user",
    "start": "812740",
    "end": "818500"
  },
  {
    "text": "can have 100,000 requests per second and in case of free users you can restrict it only to ten requests per second or 50",
    "start": "818500",
    "end": "825010"
  },
  {
    "text": "requests per second so you can able to define a usage plan using a pay gateway seamlessly so let's look little deep",
    "start": "825010",
    "end": "833110"
  },
  {
    "text": "into how ap gateway outreach it works as I see here you have an application which",
    "start": "833110",
    "end": "839500"
  },
  {
    "text": "makes an API call to a pay gateway ap key to come in you can configure an epoch it in two different ways either it",
    "start": "839500",
    "end": "846490"
  },
  {
    "text": "can be an edge optimized endpoint or regional endpoints edge optimized and when you have an edge up to my standpoint it will have a cloud front",
    "start": "846490",
    "end": "852700"
  },
  {
    "text": "basically content delivery network in front of it so you can able to invoke anywhere from the globe with a better",
    "start": "852700",
    "end": "857860"
  },
  {
    "text": "latency in case of regional optimize a p8 will be better performing within the regional location so whenever you make",
    "start": "857860",
    "end": "865300"
  },
  {
    "text": "an API call to a ap gateway it goes to in case of edge optimizer it will goes",
    "start": "865300",
    "end": "871240"
  },
  {
    "text": "to the core front and then see if the data is in CloudFront cache if it is it will be respond back with the cache",
    "start": "871240",
    "end": "876459"
  },
  {
    "text": "content if not it will go to the API gateway back-end ap get way back when will check its own cache if you have",
    "start": "876459",
    "end": "881890"
  },
  {
    "text": "configured it and then get that value from the apk to a cache and then respond back only if it is not there in the epic",
    "start": "881890",
    "end": "887230"
  },
  {
    "text": "etre cache it will go to the backend to make make that request and the backend can be various different application it",
    "start": "887230",
    "end": "893260"
  },
  {
    "text": "can be an ec2 instance or it can be containers running in a kind of EPC or it can be a public HTTP endpoint or it",
    "start": "893260",
    "end": "899860"
  },
  {
    "text": "can be another database service for example if you just want to query data from a dynamo DB database table we can directly integrate a few Gateway with",
    "start": "899860",
    "end": "905980"
  },
  {
    "text": "dynamo DB table and then directly query the data from dynamo DB table through a piggy tree instead of having another",
    "start": "905980",
    "end": "911589"
  },
  {
    "text": "lambda function between it okay so we talked about compute service computer",
    "start": "911589",
    "end": "918760"
  },
  {
    "text": "and then AP management the next interesting part as you know lambda is server less and then stateless so it's",
    "start": "918760",
    "end": "924700"
  },
  {
    "text": "just like a function you provide an input and then you expect an output whereas when you are building an application you need to be stateful in",
    "start": "924700",
    "end": "930940"
  },
  {
    "text": "that case you need a state machine that's what a double step function is edible stuff function access escape machine where you can able to integrate",
    "start": "930940",
    "end": "938230"
  },
  {
    "text": "multiple lambda functions to create a stateful application the advantages with",
    "start": "938230",
    "end": "943240"
  },
  {
    "text": "step functions is you can able to create a it can act as a you can build this",
    "start": "943240",
    "end": "949089"
  },
  {
    "text": "function as part of a code you can build a JSON file and then provide that two step function step functions create the",
    "start": "949089",
    "end": "954490"
  },
  {
    "text": "flow for you you can create sequential retrace error handling or parallel",
    "start": "954490",
    "end": "959980"
  },
  {
    "text": "executions you can do multiple different things with step functions and you can",
    "start": "959980",
    "end": "965459"
  },
  {
    "text": "automatically track what happening at each stages so whether it succeed or fail you can able to track at each stage",
    "start": "965459",
    "end": "970930"
  },
  {
    "text": "and then you can able to die OD upon each state to see whether it is a failure what does a stack trace of the",
    "start": "970930",
    "end": "976779"
  },
  {
    "text": "failure and then able to debug what happens in this stage okay the next one",
    "start": "976779",
    "end": "982300"
  },
  {
    "text": "is security part so you have a service application and you want to make sure",
    "start": "982300",
    "end": "988390"
  },
  {
    "text": "only authenticated users are able to log into the application then we have two",
    "start": "988390",
    "end": "993940"
  },
  {
    "text": "different ways that you can integrate security with a Piketty oneness identity and access management if you have an",
    "start": "993940",
    "end": "1000329"
  },
  {
    "text": "internal if your application is just internal and then you have an iamb role that you can assume then you can use a",
    "start": "1000329",
    "end": "1006959"
  },
  {
    "text": "wim so that you can able to make an API call to that API endpoint only through",
    "start": "1006959",
    "end": "1013440"
  },
  {
    "text": "an authenticated I am user another option is using Amazon Cognito Amazon cognitive and user management user",
    "start": "1013440",
    "end": "1019949"
  },
  {
    "text": "authentication management service Cognito has two different components one is federated identity and cognate or",
    "start": "1019949",
    "end": "1026490"
  },
  {
    "text": "user pools so if you already have a user directory on-premise or different like",
    "start": "1026490",
    "end": "1032130"
  },
  {
    "text": "different directories like any of the federated identities so what you can do is you can integrate that directly with",
    "start": "1032130",
    "end": "1037438"
  },
  {
    "text": "them cognitive federated identity and then you can just use the same user directory and then make that to authenticate to your application let's",
    "start": "1037439",
    "end": "1044520"
  },
  {
    "text": "say if you don't have a user directory at all you want to build your own you say directly then you can use cognitive user pools so that you can build your",
    "start": "1044520",
    "end": "1050340"
  },
  {
    "text": "user directories which enables both sign up sign names and all those things are handled transparently for you it's a",
    "start": "1050340",
    "end": "1056100"
  },
  {
    "text": "fully managed service then you can able to manage it transparently and handle it in a better way with",
    "start": "1056100",
    "end": "1062760"
  },
  {
    "text": "Amazon cognitive user poles he said we talked about security",
    "start": "1062760",
    "end": "1068380"
  },
  {
    "text": "executions ap management's the next one is flowing and monitoring so we use",
    "start": "1068380",
    "end": "1074920"
  },
  {
    "text": "cloud watch to perform the monitoring so cloud watch s two important components to it one s matrix publish matrix and",
    "start": "1074920",
    "end": "1081760"
  },
  {
    "text": "there one is cloud watch locks so cloud watch matrix is where you collect the metrics from any of the services for",
    "start": "1081760",
    "end": "1087100"
  },
  {
    "text": "example in case of lamda how much time it took stew executes that lambda function become a metric that will be available in cloud watch metric so you",
    "start": "1087100",
    "end": "1093160"
  },
  {
    "text": "can able to see the graph to understand how your lambda functions are performing in case of AP gateway you can see the",
    "start": "1093160",
    "end": "1099070"
  },
  {
    "text": "latency of your API endpoint you can able to see the error rate how much for errors are final errors at my API",
    "start": "1099070",
    "end": "1105429"
  },
  {
    "text": "endpoint is receiving we can able to mount all those things using flourish metrics and then both lambda and API",
    "start": "1105429",
    "end": "1111370"
  },
  {
    "text": "gateway writes the logs to cloud watch logs so you can able to go and dive deep to see what happened in the function or",
    "start": "1111370",
    "end": "1117100"
  },
  {
    "text": "in a big way to execution to understand if it is performing as expected so let",
    "start": "1117100",
    "end": "1122559"
  },
  {
    "text": "us take an example like you have a lambda functions and then one of the lambda functions is taking a long time",
    "start": "1122559",
    "end": "1127929"
  },
  {
    "text": "you identified that using closed metrics you want to dive deep to understand what happens that's when you start using it",
    "start": "1127929",
    "end": "1133750"
  },
  {
    "text": "with x-ray irritably success at tracing service where it helps you to trace the whole flow of the exhibition and then",
    "start": "1133750",
    "end": "1142150"
  },
  {
    "text": "you can able to see how much time it took for the execution at each stages so that you can able to see how much time",
    "start": "1142150",
    "end": "1147400"
  },
  {
    "text": "it takes for the content of the startup how much time it took for the runtime and then how much time it took for the",
    "start": "1147400",
    "end": "1152770"
  },
  {
    "text": "lambda execution so that you can able to optimize your code based on the execution time and also you can able to see the stack trace from the x-ray Lexi",
    "start": "1152770",
    "end": "1161050"
  },
  {
    "text": "also will create a service map so that it'll create a map as shown in the figure so that you can see the connectivities and then flow of the data",
    "start": "1161050",
    "end": "1167380"
  },
  {
    "text": "between each functions in your application that you developed ok so we",
    "start": "1167380",
    "end": "1174250"
  },
  {
    "text": "talked about security monitoring and various different aspect of serverless another important thing is in flushes of",
    "start": "1174250",
    "end": "1180400"
  },
  {
    "text": "code so when you are building a service application it is highly recommended that you build SNFs a code because that",
    "start": "1180400",
    "end": "1186309"
  },
  {
    "text": "enables you to perform the normal software life software dog-bone life cycle that you do with any code so you can able to do unit testing you can able",
    "start": "1186309",
    "end": "1193210"
  },
  {
    "text": "to do linting and all those things as part of the infrastructure also so",
    "start": "1193210",
    "end": "1198940"
  },
  {
    "text": "that's where several application model which we call us Sam can help you to build an interaction as",
    "start": "1198940",
    "end": "1205060"
  },
  {
    "text": "a code for several us applications so it is just an extension of CloudFormation so whatever you can do it's",
    "start": "1205060",
    "end": "1210640"
  },
  {
    "text": "CloudFormation you cannot say able to do with several application model but in a more easier friendly way for several",
    "start": "1210640",
    "end": "1216130"
  },
  {
    "text": "applications so it includes functions for lambdas a pig Adrian dynamodb so you",
    "start": "1216130",
    "end": "1221200"
  },
  {
    "text": "can able to easily configure those resources easily with serverless application model and it also include",
    "start": "1221200",
    "end": "1227530"
  },
  {
    "text": "some of the capabilities like build deploy and package so you can use this build deploy package command to package",
    "start": "1227530",
    "end": "1233740"
  },
  {
    "text": "the whole serverless application and then deploy it directly from the command line or you can able to automate it as",
    "start": "1233740",
    "end": "1239620"
  },
  {
    "text": "part of the work Anya's delivery pipeline and there is also a service",
    "start": "1239620",
    "end": "1246280"
  },
  {
    "text": "application repository where lots of people have published their service application and the code will be",
    "start": "1246280",
    "end": "1253330"
  },
  {
    "text": "available in open source repositories so you can able to go and check those repositories and I review the code",
    "start": "1253330",
    "end": "1259210"
  },
  {
    "text": "whether it might be useful you can also develop your own service application then publishing service application repository for others to use ok so this",
    "start": "1259210",
    "end": "1268900"
  },
  {
    "text": "gives you an overview about various different serverless constructs so now let's look into some of the common",
    "start": "1268900",
    "end": "1274180"
  },
  {
    "text": "architecture patterns so these are all the some of the common use cases that we have seen across with serverless start",
    "start": "1274180",
    "end": "1281290"
  },
  {
    "text": "from the publication's to automation to chat BOTS to big data processing or stream processing the various different",
    "start": "1281290",
    "end": "1287860"
  },
  {
    "text": "use cases that we have seen that service applications are being used let's look into one of the use case like web",
    "start": "1287860",
    "end": "1294610"
  },
  {
    "text": "applications so when it comes to applications the characteristics is like you have a static and dynamic content",
    "start": "1294610",
    "end": "1300310"
  },
  {
    "text": "and it should be available globally and then it should make sure that it is scalable and it can handle micro service",
    "start": "1300310",
    "end": "1306670"
  },
  {
    "text": "kind of architecture so considering all these factors when we look into a design you see here we have yes 3 which is",
    "start": "1306670",
    "end": "1316270"
  },
  {
    "text": "where that storage so you store all your static content of the website in s3 which acts as a static website which is",
    "start": "1316270",
    "end": "1323290"
  },
  {
    "text": "printed by a cloud front which is basically a kind of delusion Network so you can get a faster response time to the inducers so this serves the static",
    "start": "1323290",
    "end": "1330610"
  },
  {
    "text": "content then to make a dynamic content you make another call to the APD tree so the",
    "start": "1330610",
    "end": "1337570"
  },
  {
    "text": "job HTML files might have a JavaScript integrated with it the JavaScript make an AP equal to AP a gateway which has a",
    "start": "1337570",
    "end": "1344050"
  },
  {
    "text": "denim lambda backend which performs some business logic and then update the data to dynamodb and then retrieve the data",
    "start": "1344050",
    "end": "1350470"
  },
  {
    "text": "and then return it back to the inducers and this is kind of a single kind of micro service as you can able to build",
    "start": "1350470",
    "end": "1356590"
  },
  {
    "text": "multiple similar micro services using this model so now you have a you have",
    "start": "1356590",
    "end": "1363670"
  },
  {
    "text": "the service application in a single region so let's say if you want to go to",
    "start": "1363670",
    "end": "1369430"
  },
  {
    "text": "global region so what you can do is you can use route 53 which is acts as a traffic manager so that you can able to",
    "start": "1369430",
    "end": "1375670"
  },
  {
    "text": "distribute the traffic across two different deployments in different regions for example if you want to route",
    "start": "1375670",
    "end": "1381310"
  },
  {
    "text": "traffic based on geo based routing okay this particular IP ranges I should send traffic to Ireland the other ranges have",
    "start": "1381310",
    "end": "1388270"
  },
  {
    "text": "sent to Frankfort or you can able to try route based on the weights like 50",
    "start": "1388270",
    "end": "1393970"
  },
  {
    "text": "percent there 60 percent there like 40 so you can able to distribute based on the weights using route 53 that can also",
    "start": "1393970",
    "end": "1400810"
  },
  {
    "text": "help you to perform a be kind of testing on different applications now let's look",
    "start": "1400810",
    "end": "1407350"
  },
  {
    "text": "at the another customer use case Buzzle is one of certain fashion website which",
    "start": "1407350",
    "end": "1413310"
  },
  {
    "text": "they want to they're having a high difficulty with their web application scaling when they started using virtual",
    "start": "1413310",
    "end": "1421870"
  },
  {
    "text": "machine based application so they started building their web application on server list using a Bleus api gateway",
    "start": "1421870",
    "end": "1427900"
  },
  {
    "text": "and here is lambda they were able to achieve much better performance at the",
    "start": "1427900",
    "end": "1434380"
  },
  {
    "text": "same time they saved a significant cost using serverless model now let's look at",
    "start": "1434380",
    "end": "1441220"
  },
  {
    "text": "an another use case let's say this is an automation use case when it comes to automation there are different",
    "start": "1441220",
    "end": "1447490"
  },
  {
    "text": "characteristics right it can be triggered on a time basis or it can be triggered based on event and most cases",
    "start": "1447490",
    "end": "1454030"
  },
  {
    "text": "it will be you will be able to audit and then see what happened in it when an automation job has run and it also",
    "start": "1454030",
    "end": "1460870"
  },
  {
    "text": "should be able to handle multiple different database functionalities that are supported so let's look at an example so this is two and",
    "start": "1460870",
    "end": "1467680"
  },
  {
    "text": "security policies so let's say like you want to make sure that nobody in your company should open a search already be",
    "start": "1467680",
    "end": "1473860"
  },
  {
    "text": "put to the whole world so in this example so what happens is whenever somebody opens an RDP port to the whole",
    "start": "1473860",
    "end": "1479290"
  },
  {
    "text": "world it will be sending an event crowd watch will send an event which will",
    "start": "1479290",
    "end": "1485020"
  },
  {
    "text": "trigger a lambda function which automatically check the security group and then remove that security group rule automatically and then it will send a",
    "start": "1485020",
    "end": "1492190"
  },
  {
    "text": "notification saying that this particular action has been happened so that you can able to monitor what happened at the",
    "start": "1492190",
    "end": "1497710"
  },
  {
    "text": "same time you can able to reactively fix whenever something happened without leaving it for a long time when you can",
    "start": "1497710",
    "end": "1504220"
  },
  {
    "text": "able to automate these things another example with autodesk to order this has",
    "start": "1504220",
    "end": "1510690"
  },
  {
    "text": "challenges when they had to provision an account they had a process to manually",
    "start": "1510690",
    "end": "1516040"
  },
  {
    "text": "position the con which usually takes ten days earlier so they use the service and then they built something called a SS",
    "start": "1516040",
    "end": "1522309"
  },
  {
    "text": "tailor which is open sourced an development github which is used using",
    "start": "1522309",
    "end": "1527440"
  },
  {
    "text": "serverless technology they were able to automate the whole a contouring process and they were able to achieve that whole",
    "start": "1527440",
    "end": "1533650"
  },
  {
    "text": "thing in self-service model within ten minutes instead of 10 10 days before",
    "start": "1533650",
    "end": "1540450"
  },
  {
    "text": "another example of automation is a tubeless ops automata so ops Automator",
    "start": "1540990",
    "end": "1546190"
  },
  {
    "text": "is kind of a framework which can help you to automate most of the operations tasks for example if you want to take a",
    "start": "1546190",
    "end": "1551650"
  },
  {
    "text": "snapshot Eby snapshots if i want to take a snapshot of redshift for database data warehouse instances or you want to",
    "start": "1551650",
    "end": "1557980"
  },
  {
    "text": "backup anything those kind of operational tasks you can able to schedule it with ops automated and ops automatically automatically handles that",
    "start": "1557980",
    "end": "1564250"
  },
  {
    "text": "for you so as this example as I see here you have a ground-based schedule which",
    "start": "1564250",
    "end": "1569679"
  },
  {
    "text": "is busy cloud watch events which will automatically trigger a lambda function which will go and check the",
    "start": "1569679",
    "end": "1574900"
  },
  {
    "text": "configuration in the dynamo DB whether you have configured any of the ops automation part like at this day this",
    "start": "1574900",
    "end": "1583000"
  },
  {
    "text": "time I want to take a backup of a certain set of instances if you have scheduled it it will trigger lambda",
    "start": "1583000",
    "end": "1588790"
  },
  {
    "text": "functions to go and take the backup and that lambda function once it backs up it will update the DynamoDB table saying",
    "start": "1588790",
    "end": "1593890"
  },
  {
    "text": "that this backup has been happened and then it will also send a notification saying ok the backup or whatever the",
    "start": "1593890",
    "end": "1599590"
  },
  {
    "text": "automation job has been complete again the advantage of this is it's your",
    "start": "1599590",
    "end": "1606600"
  },
  {
    "text": "since you're using serverless technologies you pay only for whenever it runs not like always running and then",
    "start": "1606600",
    "end": "1611850"
  },
  {
    "text": "sky keep polling it another common",
    "start": "1611850",
    "end": "1616890"
  },
  {
    "text": "example is image processing or recognition using serverless model so let's say you have a publication the",
    "start": "1616890",
    "end": "1623190"
  },
  {
    "text": "users are authenticated through Cognito and then the you service whenever they upload an image it goes to s3 which can",
    "start": "1623190",
    "end": "1629880"
  },
  {
    "text": "automatically trigger a lambda function s3 can automatically trigger a lambda function whenever a put object has been invoked that lambda function will make a",
    "start": "1629880",
    "end": "1637410"
  },
  {
    "text": "call to step function a step function at the same time parallely invoke multiple stage steps like it can extract the",
    "start": "1637410",
    "end": "1645300"
  },
  {
    "text": "image metadata and it can also go and identify objects in the metadata and then I did you can also do moderation as",
    "start": "1645300",
    "end": "1651690"
  },
  {
    "text": "part of this stages and then identify whether that image is appropriate for this for the web application to be",
    "start": "1651690",
    "end": "1657060"
  },
  {
    "text": "uploaded or not you can able to handle that in a server this way and at the same time it also creates a thumbnail",
    "start": "1657060",
    "end": "1662400"
  },
  {
    "text": "everything happens parallely and once it is done it will send a response back to dynamodb saying that this operation has",
    "start": "1662400",
    "end": "1669690"
  },
  {
    "text": "been completed and the end user will be able to see that the operation has been completed when when the image processing",
    "start": "1669690",
    "end": "1675930"
  },
  {
    "text": "has been completed so this is a simple example of how a step function flow looks as you look so there is the first",
    "start": "1675930",
    "end": "1682860"
  },
  {
    "text": "it performs the image metadata extraction if it is identify it is able to do then it will be continuing to the",
    "start": "1682860",
    "end": "1688530"
  },
  {
    "text": "next part if not it will just terminate there itself then if it is able to continue it just performs parallel",
    "start": "1688530",
    "end": "1694020"
  },
  {
    "text": "operations to recognition and also create a thumbnail and once both the parallel operations are completed you",
    "start": "1694020",
    "end": "1699120"
  },
  {
    "text": "will get send the response back to dynamodb table okay now let's look at an",
    "start": "1699120",
    "end": "1706620"
  },
  {
    "text": "example of stream processing so when it comes to stream processing it again has its own characteristics like it has a",
    "start": "1706620",
    "end": "1711870"
  },
  {
    "text": "high injection rate sometimes it will be a bust capacity the scaling happens like let's say there's a video like a news",
    "start": "1711870",
    "end": "1718350"
  },
  {
    "text": "article that's create a sudden spike or there's a TV program that can create a certain spike so those kind of spikes if",
    "start": "1718350",
    "end": "1723540"
  },
  {
    "text": "you want to handle and again another characteristics like durability of the message and the order of the message",
    "start": "1723540",
    "end": "1729480"
  },
  {
    "text": "should be maintained so anyhow these kind of characteristics you can look at services like this kind of architecture where can use",
    "start": "1729480",
    "end": "1735919"
  },
  {
    "text": "kinases can assess a stream processing service so you can use your web application or a client to send all that",
    "start": "1735919",
    "end": "1742779"
  },
  {
    "text": "you went to the kinases streams and the kinases streams will trigger the lambda function so in this case we have two",
    "start": "1742779",
    "end": "1749239"
  },
  {
    "text": "lambda functions the first lambda function will be able to apply the data to dynamodb for kind of real-time",
    "start": "1749239",
    "end": "1755419"
  },
  {
    "text": "analysis at the same time you can also create a custom matrix and then write it to cloud watch as part of that there's",
    "start": "1755419",
    "end": "1762799"
  },
  {
    "text": "an another lambda function in the parallely it can write the raw data to s3 so that at any point time you can able to see what happened at the raw",
    "start": "1762799",
    "end": "1768710"
  },
  {
    "text": "data and then you're able to go through it or if you want to do an even kind of",
    "start": "1768710",
    "end": "1774019"
  },
  {
    "text": "even streaming kind of thing you can able to do an even streaming and then check what happened and then do a",
    "start": "1774019",
    "end": "1781009"
  },
  {
    "text": "playback of all the events that happened so far another typical example of a",
    "start": "1781009",
    "end": "1787820"
  },
  {
    "text": "stream processing is IOT so where you have a huge set of a IOT sensors which",
    "start": "1787820",
    "end": "1792979"
  },
  {
    "text": "collects all the data and send it to the IOT gateway IOT gateway will send that data to IOT rules IOT rules based on the",
    "start": "1792979",
    "end": "1799580"
  },
  {
    "text": "rules that you have defined it will be performing multiple actions that can be single actions there are multiple actions as you see here in this case it",
    "start": "1799580",
    "end": "1806599"
  },
  {
    "text": "writes how multiple actions one of them is writing the record directly to s3 the next one is you can write it to kinases",
    "start": "1806599",
    "end": "1812809"
  },
  {
    "text": "analytics streams so that you can perform a real-time analytics or you can also write to the kinases firehose which",
    "start": "1812809",
    "end": "1818539"
  },
  {
    "text": "directly dumps all the data to s3 you can also do transformation as part of fire fire hose so that you can able to",
    "start": "1818539",
    "end": "1825859"
  },
  {
    "text": "write the process data when it writes to s3 so another example is batch",
    "start": "1825859",
    "end": "1833899"
  },
  {
    "text": "processing when it comes to batch processing as you see here this this looks like a map produced in dove and",
    "start": "1833899",
    "end": "1839119"
  },
  {
    "text": "use case as you see there is a big data that are sitting in s3 so there's a",
    "start": "1839119",
    "end": "1845960"
  },
  {
    "text": "lambda function which goes and get this data and then create an mapper task so that it just creates small chunks of",
    "start": "1845960",
    "end": "1852229"
  },
  {
    "text": "tasks and then put that into queue that that queue will automatically trigger multiple lambda functions the lambda",
    "start": "1852229",
    "end": "1857419"
  },
  {
    "text": "functions will be performing its own operations based on the message in that message queue and then it will be able to write the data to DynamoDB once there",
    "start": "1857419",
    "end": "1865070"
  },
  {
    "text": "a descender DynamoDB then the reduces script we'll be able to execute and then able to reduce all the multiple",
    "start": "1865070",
    "end": "1871600"
  },
  {
    "text": "operations that has been performed with multiple different lambda functions and then provide their selves in s3 so you",
    "start": "1871600",
    "end": "1876680"
  },
  {
    "text": "can able to kind of build up your own MapReduce kind of environment using lambda and various service solutions",
    "start": "1876680",
    "end": "1883390"
  },
  {
    "text": "whereas there is also other unity services like glue Athena quick site and redshift spectrum",
    "start": "1883390",
    "end": "1890240"
  },
  {
    "text": "which can help you to perform analytics directly on s3 data so similar to this",
    "start": "1890240",
    "end": "1896600"
  },
  {
    "text": "so we have another use case like fanime so it's a financial modeling company",
    "start": "1896600",
    "end": "1902300"
  },
  {
    "text": "they want to model their mud gauge data for the financial modelling so they they",
    "start": "1902300",
    "end": "1909020"
  },
  {
    "text": "were thinking about moving their onto my syndrome onto AWS and when they looked",
    "start": "1909020",
    "end": "1914210"
  },
  {
    "text": "at several s they were able to achieve whatever they can do with their existing interest sure in almost very less amount",
    "start": "1914210",
    "end": "1922310"
  },
  {
    "text": "of time compared to what they are doing on to mice and that enabled them to handle very huge load of data and at a",
    "start": "1922310",
    "end": "1930440"
  },
  {
    "text": "very low cost compared to what they were already doing okay now let's look at a",
    "start": "1930440",
    "end": "1939170"
  },
  {
    "text": "quick demo so here is a simple architecture of this demo so we have a static files in an s3 bucket which has",
    "start": "1939170",
    "end": "1945620"
  },
  {
    "text": "HTML and JavaScript and CSS files and when we make an API call it will send an",
    "start": "1945620",
    "end": "1951140"
  },
  {
    "text": "API request to API gateway which will trigger a lambda function the lambda function at the same time we'll be",
    "start": "1951140",
    "end": "1957530"
  },
  {
    "text": "making an API call to comprehend so comprehend is a natural language processing service to identify what is",
    "start": "1957530",
    "end": "1963800"
  },
  {
    "text": "the sentiment of the data that we have provided and based on the sentiment it will give a response back and it also",
    "start": "1963800",
    "end": "1970040"
  },
  {
    "text": "make an API call to translate to translate to a different language so this is an example of positive chat so",
    "start": "1970040",
    "end": "1975860"
  },
  {
    "text": "we are building a chat application where you make sure that only positive content are displayed in the chat and negative",
    "start": "1975860",
    "end": "1982910"
  },
  {
    "text": "condoms are not allowed",
    "start": "1982910",
    "end": "1985690"
  },
  {
    "text": "okay so here",
    "start": "1999499",
    "end": "2003489"
  },
  {
    "text": "so I'm logging in as user Prakash and I want to translate they say to French",
    "start": "2006100",
    "end": "2013230"
  },
  {
    "text": "as you see here actually in kind of a near real-time it is able to translate the language and then provide you the",
    "start": "2017600",
    "end": "2022850"
  },
  {
    "text": "response back and it also able to I as you see here it also able to say in what",
    "start": "2022850",
    "end": "2027859"
  },
  {
    "text": "language that I have provided the input",
    "start": "2027859",
    "end": "2031330"
  },
  {
    "text": "so as I see it it also able to I didn't hear which the language I say and then it can able to translate it so again and",
    "start": "2036970",
    "end": "2050898"
  },
  {
    "text": "kind of again I can able to change the language in real-time so as you see here it can able to translate in real-time",
    "start": "2050899",
    "end": "2056599"
  },
  {
    "text": "whatever language that I select now let",
    "start": "2056599",
    "end": "2064128"
  },
  {
    "text": "us say I am posting an negative message",
    "start": "2064129",
    "end": "2068858"
  },
  {
    "text": "it automatically identified this is a negative message and then it immediately send the response like and this will be",
    "start": "2069309",
    "end": "2075049"
  },
  {
    "text": "visible only to my user it won't be visible to the other users so for me it",
    "start": "2075049",
    "end": "2080270"
  },
  {
    "text": "will say like we please Express",
    "start": "2080270",
    "end": "2083559"
  },
  {
    "text": "okay so this is a simple demo and if you look at the code it is so simple so how",
    "start": "2091060",
    "end": "2100120"
  },
  {
    "text": "so how the index chart HTML which is basically HTML file which is referring",
    "start": "2100120",
    "end": "2105320"
  },
  {
    "text": "to the index dot J's javascript file so this is the index of jsjr script file which lists all the languages that we",
    "start": "2105320",
    "end": "2110960"
  },
  {
    "text": "are supporting and it makes an API call to an API gateway end point and that ap",
    "start": "2110960",
    "end": "2119090"
  },
  {
    "text": "gateway end point will make an call to the lambda function which is the lambda function this lambda function have a",
    "start": "2119090",
    "end": "2124190"
  },
  {
    "text": "WebSocket connection to the API gateway and it will make so this lambda function",
    "start": "2124190",
    "end": "2131240"
  },
  {
    "text": "is what performing the API call to translate to get the translated message it make the AP equal to the comprehend",
    "start": "2131240",
    "end": "2137090"
  },
  {
    "text": "to identify the negative sentiment and then able to say okay what whether it is appropriate or not so see here it is not",
    "start": "2137090",
    "end": "2143840"
  },
  {
    "text": "more than 300 lines of code and I have automated everything with several",
    "start": "2143840",
    "end": "2148940"
  },
  {
    "text": "application model so this is basically the service application model template as you see here I am creating an API here and I'm create an API integration",
    "start": "2148940",
    "end": "2158740"
  },
  {
    "text": "and I also have DynamoDB table so I'm storing the data and DynamoDB table so",
    "start": "2158740",
    "end": "2164540"
  },
  {
    "text": "that I can able to retrieve it much faster way so I don't need to go and get",
    "start": "2164540",
    "end": "2169760"
  },
  {
    "text": "the data in a different every time we don't need to make an API call for this",
    "start": "2169760",
    "end": "2176290"
  },
  {
    "text": "and here is the AP gateway so as I see here this is just three call to the",
    "start": "2180420",
    "end": "2185519"
  },
  {
    "text": "socket connections one is connect called disconnect call and default call so all of them is going to the back end lambda",
    "start": "2185519",
    "end": "2191640"
  },
  {
    "text": "function that I showed in the app dot JS file and the data has are stored in",
    "start": "2191640",
    "end": "2198720"
  },
  {
    "text": "dynamo DB table so if you look at the conversation table we can see whatever we disc we typed so far as I see here it",
    "start": "2198720",
    "end": "2207809"
  },
  {
    "text": "stores the translated content so it can able to bring up the content immediately and then provide that data as a endpoint",
    "start": "2207809",
    "end": "2218150"
  },
  {
    "text": "so now let's say like I log into this as a different user",
    "start": "2219140",
    "end": "2224809"
  },
  {
    "text": "so you can see the same messages that that you have seen there at the same",
    "start": "2247510",
    "end": "2254980"
  },
  {
    "text": "time if you see it it didn't show the message that it showed to us like whenever I type a negative content that",
    "start": "2254980",
    "end": "2260320"
  },
  {
    "text": "message will be visible only to that particular user",
    "start": "2260320",
    "end": "2264210"
  },
  {
    "text": "see here right but it won't be visible for the other users so it will be only available one only when it is yeah",
    "start": "2269150",
    "end": "2279970"
  },
  {
    "text": "yeah this is with the demo",
    "start": "2283250",
    "end": "2286720"
  },
  {
    "text": "going to the salon it's back okay so with this hope this gives you an",
    "start": "2292350",
    "end": "2297570"
  },
  {
    "text": "introduction to several s and also what are the different kind of architectures that you can try with several applications and thank you please rate",
    "start": "2297570",
    "end": "2305580"
  },
  {
    "text": "the session",
    "start": "2305580",
    "end": "2307820"
  }
]