[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "awesome demo sang so how could we spend",
    "start": "1919",
    "end": "4480"
  },
  {
    "text": "some time discussing the various options",
    "start": "4480",
    "end": "6460"
  },
  {
    "text": "of you know configuring all these pizzas",
    "start": "6460",
    "end": "10630"
  },
  {
    "text": "together and and kind of dive deep a",
    "start": "10630",
    "end": "12700"
  },
  {
    "text": "little bit and understand the different",
    "start": "12700",
    "end": "14049"
  },
  {
    "text": "moving parts in terms of the",
    "start": "14049",
    "end": "15750"
  },
  {
    "text": "technologies in use and what is actually",
    "start": "15750",
    "end": "18700"
  },
  {
    "text": "making this data flow from Salesforce to",
    "start": "18700",
    "end": "21460"
  },
  {
    "text": "AWS and back from AWS to Salesforce",
    "start": "21460",
    "end": "23680"
  },
  {
    "text": "possible you know talk a little bit",
    "start": "23680",
    "end": "25570"
  },
  {
    "text": "about those things yeah yeah let's let's",
    "start": "25570",
    "end": "28330"
  },
  {
    "text": "get under the covers here",
    "start": "28330",
    "end": "29950"
  },
  {
    "text": "so what Salesforce provides is they",
    "start": "29950",
    "end": "33070"
  },
  {
    "start": "30000",
    "end": "56000"
  },
  {
    "text": "provide a messaging framework called",
    "start": "33070",
    "end": "35350"
  },
  {
    "text": "platform events and so that's what they",
    "start": "35350",
    "end": "37600"
  },
  {
    "text": "recommend if you want to do anything",
    "start": "37600",
    "end": "40330"
  },
  {
    "text": "near real-time and so well what we would",
    "start": "40330",
    "end": "44620"
  },
  {
    "text": "recommend it's leverage that and",
    "start": "44620",
    "end": "46230"
  },
  {
    "text": "platform events that essentially will",
    "start": "46230",
    "end": "48190"
  },
  {
    "text": "put events onto a bus and you just need",
    "start": "48190",
    "end": "53110"
  },
  {
    "text": "a way to be able to read off of that bus",
    "start": "53110",
    "end": "55090"
  },
  {
    "text": "and and you could you can implement that",
    "start": "55090",
    "end": "58150"
  },
  {
    "start": "56000",
    "end": "73000"
  },
  {
    "text": "in any type of compute that you want",
    "start": "58150",
    "end": "59920"
  },
  {
    "text": "whether that be directly on ec2 or",
    "start": "59920",
    "end": "62170"
  },
  {
    "text": "whether that be on Fargate or KS or UC",
    "start": "62170",
    "end": "65770"
  },
  {
    "text": "yes but lambda is also a great option",
    "start": "65770",
    "end": "68620"
  },
  {
    "text": "serverless why not right exactly you",
    "start": "68620",
    "end": "70630"
  },
  {
    "text": "don't have to manage any of your servers",
    "start": "70630",
    "end": "72430"
  },
  {
    "text": "just write write code and so lambda is",
    "start": "72430",
    "end": "76530"
  },
  {
    "start": "73000",
    "end": "87000"
  },
  {
    "text": "listening for a platform event and when",
    "start": "76530",
    "end": "80350"
  },
  {
    "text": "that platform event arrives it'll go",
    "start": "80350",
    "end": "82150"
  },
  {
    "text": "ahead and grab that platform event and",
    "start": "82150",
    "end": "84040"
  },
  {
    "text": "write it to an SMS queue and the reason",
    "start": "84040",
    "end": "87460"
  },
  {
    "text": "why I recommend doing this is because",
    "start": "87460",
    "end": "89520"
  },
  {
    "text": "you want to keep your lambda functions",
    "start": "89520",
    "end": "92530"
  },
  {
    "text": "as minimal as possible just as a best",
    "start": "92530",
    "end": "96250"
  },
  {
    "text": "practice that's right you want to scope",
    "start": "96250",
    "end": "97659"
  },
  {
    "text": "them down so that one lambda function is",
    "start": "97659",
    "end": "100810"
  },
  {
    "text": "really doing one thing a purpose-built",
    "start": "100810",
    "end": "102820"
  },
  {
    "text": "yes yes an SNS also provides a buffer",
    "start": "102820",
    "end": "106330"
  },
  {
    "start": "103000",
    "end": "125000"
  },
  {
    "text": "layer right so that you can this",
    "start": "106330",
    "end": "108130"
  },
  {
    "text": "solution will scale as well so and the",
    "start": "108130",
    "end": "111280"
  },
  {
    "text": "intent there is to potentially call on",
    "start": "111280",
    "end": "113710"
  },
  {
    "text": "other functions or other services using",
    "start": "113710",
    "end": "116530"
  },
  {
    "text": "the same event yeah exactly and so you",
    "start": "116530",
    "end": "118780"
  },
  {
    "text": "can get one event and have multiple",
    "start": "118780",
    "end": "120310"
  },
  {
    "text": "actions be triggered off of that one",
    "start": "120310",
    "end": "123460"
  },
  {
    "text": "event through SNS right and so lambda",
    "start": "123460",
    "end": "126369"
  },
  {
    "text": "calls SNS SNS then calls another lambda",
    "start": "126369",
    "end": "128979"
  },
  {
    "text": "right and that that second lambda is is",
    "start": "128979",
    "end": "131859"
  },
  {
    "text": "what's doing the heavy lifting yeah that",
    "start": "131859",
    "end": "133629"
  },
  {
    "text": "that's what's leverage",
    "start": "133629",
    "end": "135069"
  },
  {
    "text": "the Salesforce REST API is to pull off",
    "start": "135069",
    "end": "137439"
  },
  {
    "text": "the whole opportunity object that's",
    "start": "137439",
    "end": "139810"
  },
  {
    "text": "what's grabbing that attachment and",
    "start": "139810",
    "end": "142390"
  },
  {
    "text": "pulling it out and writing into s3",
    "start": "142390",
    "end": "144840"
  },
  {
    "text": "excellent so what what's the what's the",
    "start": "144840",
    "end": "148510"
  },
  {
    "start": "145000",
    "end": "181000"
  },
  {
    "text": "need for a a user to write all these",
    "start": "148510",
    "end": "151930"
  },
  {
    "text": "events to s3 a couple of similar",
    "start": "151930",
    "end": "155829"
  },
  {
    "text": "questions on the on the same line is is",
    "start": "155829",
    "end": "158200"
  },
  {
    "text": "it mandatory to always write things to",
    "start": "158200",
    "end": "160659"
  },
  {
    "text": "s3 or or you just decided to take that",
    "start": "160659",
    "end": "164439"
  },
  {
    "text": "approach because that's what our",
    "start": "164439",
    "end": "166239"
  },
  {
    "text": "customers are asking for that's really",
    "start": "166239",
    "end": "168310"
  },
  {
    "text": "you know exactly that J you know where",
    "start": "168310",
    "end": "172510"
  },
  {
    "text": "Amazon is a customer obsessed company",
    "start": "172510",
    "end": "174939"
  },
  {
    "text": "and and our customers are specifically",
    "start": "174939",
    "end": "178359"
  },
  {
    "text": "asking us how do we get this data into",
    "start": "178359",
    "end": "181090"
  },
  {
    "start": "181000",
    "end": "218000"
  },
  {
    "text": "s3 and the reason for that it gives them",
    "start": "181090",
    "end": "183400"
  },
  {
    "text": "the most flexibility of course customers",
    "start": "183400",
    "end": "185739"
  },
  {
    "text": "can write to any of our AWS services",
    "start": "185739",
    "end": "187709"
  },
  {
    "text": "whether that be an EBS volume EF EFS it",
    "start": "187709",
    "end": "192129"
  },
  {
    "text": "could be it could be a lasso search",
    "start": "192129",
    "end": "195310"
  },
  {
    "text": "right or or one of our database",
    "start": "195310",
    "end": "197729"
  },
  {
    "text": "offerings right so but s3 gives you the",
    "start": "197729",
    "end": "201940"
  },
  {
    "text": "maximum flexibility in terms of then",
    "start": "201940",
    "end": "204099"
  },
  {
    "text": "pushing it elsewhere if you want and",
    "start": "204099",
    "end": "205989"
  },
  {
    "text": "also it's it acts as a archive right so",
    "start": "205989",
    "end": "209799"
  },
  {
    "text": "then lifecycle it into say something",
    "start": "209799",
    "end": "213340"
  },
  {
    "text": "like glacier for example using this tree",
    "start": "213340",
    "end": "215019"
  },
  {
    "text": "lifecycle policy and so on",
    "start": "215019",
    "end": "216400"
  },
  {
    "text": "exactly",
    "start": "216400",
    "end": "218939"
  }
]