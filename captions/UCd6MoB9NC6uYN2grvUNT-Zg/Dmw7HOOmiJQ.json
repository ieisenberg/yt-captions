[
  {
    "text": "hi everyone",
    "start": "4319",
    "end": "5040"
  },
  {
    "text": "my name is roy hassan i'm a analytics",
    "start": "5040",
    "end": "7919"
  },
  {
    "text": "specialist at aws",
    "start": "7919",
    "end": "10400"
  },
  {
    "text": "i work with a lot of customers to build",
    "start": "10400",
    "end": "14080"
  },
  {
    "text": "and optimize their data platforms and",
    "start": "14080",
    "end": "17279"
  },
  {
    "text": "one of the common questions that i get",
    "start": "17279",
    "end": "19760"
  },
  {
    "text": "and this is not just from",
    "start": "19760",
    "end": "21760"
  },
  {
    "text": "users that are building data platform",
    "start": "21760",
    "end": "23359"
  },
  {
    "text": "this is just anybody who's using",
    "start": "23359",
    "end": "25279"
  },
  {
    "text": "aws is how do i analyze quickly",
    "start": "25279",
    "end": "28880"
  },
  {
    "text": "the logs that my infrastructure is",
    "start": "28880",
    "end": "32238"
  },
  {
    "text": "is generating and one common one is",
    "start": "32239",
    "end": "34160"
  },
  {
    "text": "cloudtrail if you're not familiar with",
    "start": "34160",
    "end": "36079"
  },
  {
    "text": "aws cloudtrail is a service that allows",
    "start": "36079",
    "end": "38399"
  },
  {
    "text": "you to collect",
    "start": "38399",
    "end": "39680"
  },
  {
    "text": "all the api events from all of your",
    "start": "39680",
    "end": "42000"
  },
  {
    "text": "infrastructure for aws infrastructure",
    "start": "42000",
    "end": "44239"
  },
  {
    "text": "into the single service and then from",
    "start": "44239",
    "end": "46320"
  },
  {
    "text": "there you can extract the data and you",
    "start": "46320",
    "end": "47920"
  },
  {
    "text": "can analyze it so",
    "start": "47920",
    "end": "49120"
  },
  {
    "text": "what i wanted to do today is take that",
    "start": "49120",
    "end": "51520"
  },
  {
    "text": "example and show you how to",
    "start": "51520",
    "end": "53600"
  },
  {
    "text": "analyze amazon athena events",
    "start": "53600",
    "end": "57199"
  },
  {
    "text": "using athena to be able to understand",
    "start": "57199",
    "end": "59520"
  },
  {
    "text": "how",
    "start": "59520",
    "end": "60960"
  },
  {
    "text": "our users are using athena so let's um",
    "start": "60960",
    "end": "63520"
  },
  {
    "text": "let's start by",
    "start": "63520",
    "end": "65040"
  },
  {
    "text": "uh looking at the data so if you enable",
    "start": "65040",
    "end": "67600"
  },
  {
    "text": "cloudtrail it will output it into a",
    "start": "67600",
    "end": "69280"
  },
  {
    "text": "bucket of your choice",
    "start": "69280",
    "end": "71360"
  },
  {
    "text": "in my case i picked this and you can see",
    "start": "71360",
    "end": "73920"
  },
  {
    "text": "it has a particular region",
    "start": "73920",
    "end": "75360"
  },
  {
    "text": "and it breaks it up by by year month and",
    "start": "75360",
    "end": "77920"
  },
  {
    "text": "day",
    "start": "77920",
    "end": "79280"
  },
  {
    "text": "and inside here you'll see a bunch of",
    "start": "79280",
    "end": "81920"
  },
  {
    "text": "json files",
    "start": "81920",
    "end": "83840"
  },
  {
    "text": "gz compressed so athena can can easily",
    "start": "83840",
    "end": "86479"
  },
  {
    "text": "read the compressed data",
    "start": "86479",
    "end": "87920"
  },
  {
    "text": "so that's that's kind of the data set so",
    "start": "87920",
    "end": "90159"
  },
  {
    "text": "the next thing we want to do is we have",
    "start": "90159",
    "end": "91680"
  },
  {
    "text": "to create a table",
    "start": "91680",
    "end": "92880"
  },
  {
    "text": "um we have this in our documentation i'm",
    "start": "92880",
    "end": "94720"
  },
  {
    "text": "just going to paste it here so it's",
    "start": "94720",
    "end": "96000"
  },
  {
    "text": "easier",
    "start": "96000",
    "end": "97200"
  },
  {
    "text": "but you can see some of the fields are",
    "start": "97200",
    "end": "98720"
  },
  {
    "text": "nested struct fairly deeply nested and",
    "start": "98720",
    "end": "101040"
  },
  {
    "text": "you'll see that in a minute as well so",
    "start": "101040",
    "end": "103119"
  },
  {
    "text": "just kind of run this query",
    "start": "103119",
    "end": "105520"
  },
  {
    "text": "all right so that that completed",
    "start": "105520",
    "end": "108799"
  },
  {
    "text": "what we can do now is we can do select",
    "start": "108799",
    "end": "111280"
  },
  {
    "text": "star",
    "start": "111280",
    "end": "112079"
  },
  {
    "text": "from this data set",
    "start": "112079",
    "end": "115920"
  },
  {
    "text": "what is it called raw cloud trail",
    "start": "115920",
    "end": "120960"
  },
  {
    "text": "logs and let's just limit it to 10 we",
    "start": "120960",
    "end": "123439"
  },
  {
    "text": "don't care about more than that all",
    "start": "123439",
    "end": "128000"
  },
  {
    "text": "right so now we can see",
    "start": "128000",
    "end": "129440"
  },
  {
    "text": "a bunch of data the user identity field",
    "start": "129440",
    "end": "132000"
  },
  {
    "text": "um",
    "start": "132000",
    "end": "133120"
  },
  {
    "text": "there's a bunch of interesting columns",
    "start": "133120",
    "end": "135040"
  },
  {
    "text": "here like the the event time",
    "start": "135040",
    "end": "137120"
  },
  {
    "text": "the event source what service sent this",
    "start": "137120",
    "end": "140160"
  },
  {
    "text": "sds s3 uh the event name",
    "start": "140160",
    "end": "143200"
  },
  {
    "text": "right which api was was called uh and a",
    "start": "143200",
    "end": "146000"
  },
  {
    "text": "bunch of other parameters and the",
    "start": "146000",
    "end": "147760"
  },
  {
    "text": "request parameters which is the the more",
    "start": "147760",
    "end": "149520"
  },
  {
    "text": "interesting one",
    "start": "149520",
    "end": "150879"
  },
  {
    "text": "um so the first thing we uh we really",
    "start": "150879",
    "end": "153599"
  },
  {
    "text": "want to do here is we want to just",
    "start": "153599",
    "end": "156239"
  },
  {
    "text": "analyze this data a little bit more",
    "start": "156239",
    "end": "159519"
  },
  {
    "text": "so let's um let's start with and just",
    "start": "159519",
    "end": "162480"
  },
  {
    "text": "paste a query in here that i already",
    "start": "162480",
    "end": "164239"
  },
  {
    "text": "have",
    "start": "164239",
    "end": "165280"
  },
  {
    "text": "let's just filter it on",
    "start": "165280",
    "end": "168400"
  },
  {
    "text": "athena events that we're interested in",
    "start": "168400",
    "end": "171440"
  },
  {
    "text": "so",
    "start": "171440",
    "end": "172239"
  },
  {
    "text": "we'll we'll use the event source of",
    "start": "172239",
    "end": "174080"
  },
  {
    "text": "athena the event name to start query",
    "start": "174080",
    "end": "176319"
  },
  {
    "text": "execution so this is the apis that",
    "start": "176319",
    "end": "178159"
  },
  {
    "text": "starts",
    "start": "178159",
    "end": "178640"
  },
  {
    "text": "a query or runs a query just run this",
    "start": "178640",
    "end": "182840"
  },
  {
    "text": "quickly",
    "start": "182840",
    "end": "184239"
  },
  {
    "text": "and we can see here that the user",
    "start": "184239",
    "end": "185840"
  },
  {
    "text": "identity has a bunch of information in",
    "start": "185840",
    "end": "187440"
  },
  {
    "text": "it we'll parse that in a minute",
    "start": "187440",
    "end": "189280"
  },
  {
    "text": "um and then we can see athena is the",
    "start": "189280",
    "end": "192000"
  },
  {
    "text": "event source and the name as the api is",
    "start": "192000",
    "end": "194239"
  },
  {
    "text": "this",
    "start": "194239",
    "end": "194800"
  },
  {
    "text": "and in the request parameters you can",
    "start": "194800",
    "end": "196720"
  },
  {
    "text": "actually see the query that was",
    "start": "196720",
    "end": "198080"
  },
  {
    "text": "executed um you know you can encrypt",
    "start": "198080",
    "end": "200720"
  },
  {
    "text": "this so",
    "start": "200720",
    "end": "201440"
  },
  {
    "text": "it's not accessible to anybody but in",
    "start": "201440",
    "end": "203519"
  },
  {
    "text": "this case i left it like this so we can",
    "start": "203519",
    "end": "204959"
  },
  {
    "text": "actually analyze it",
    "start": "204959",
    "end": "206000"
  },
  {
    "text": "there's also some other parameters in",
    "start": "206000",
    "end": "207599"
  },
  {
    "text": "here that we may want to look at later",
    "start": "207599",
    "end": "209920"
  },
  {
    "text": "on like the output location",
    "start": "209920",
    "end": "212000"
  },
  {
    "text": "uh and in the war group that was used so",
    "start": "212000",
    "end": "215120"
  },
  {
    "text": "the the first thing that we want to do",
    "start": "215120",
    "end": "217120"
  },
  {
    "text": "next is",
    "start": "217120",
    "end": "218159"
  },
  {
    "text": "let's just kind of break this up a",
    "start": "218159",
    "end": "219599"
  },
  {
    "text": "little a little bit and add some more",
    "start": "219599",
    "end": "222159"
  },
  {
    "text": "um or extract some more columns maybe",
    "start": "222159",
    "end": "224159"
  },
  {
    "text": "some room here",
    "start": "224159",
    "end": "226159"
  },
  {
    "text": "so uh the first thing that i wanted to",
    "start": "226159",
    "end": "229280"
  },
  {
    "text": "do is look at the date",
    "start": "229280",
    "end": "231120"
  },
  {
    "text": "uh the timestamp here and convert it",
    "start": "231120",
    "end": "233200"
  },
  {
    "text": "from string",
    "start": "233200",
    "end": "234319"
  },
  {
    "text": "to a date format or timestamp format",
    "start": "234319",
    "end": "237120"
  },
  {
    "text": "it's easier",
    "start": "237120",
    "end": "237599"
  },
  {
    "text": "for you so we'll use a function called",
    "start": "237599",
    "end": "240159"
  },
  {
    "text": "uh",
    "start": "240159",
    "end": "241159"
  },
  {
    "text": "myso8601 timestamp",
    "start": "241159",
    "end": "245519"
  },
  {
    "text": "and we want to do it event time as dt",
    "start": "245760",
    "end": "249760"
  },
  {
    "text": "right the next thing is we want to use",
    "start": "249760",
    "end": "251760"
  },
  {
    "text": "we want to look at the user identity",
    "start": "251760",
    "end": "253680"
  },
  {
    "text": "so the user identity type",
    "start": "253680",
    "end": "256720"
  },
  {
    "text": "um oh we just want to save it as",
    "start": "256720",
    "end": "260160"
  },
  {
    "text": "a session type right and this tells us",
    "start": "260160",
    "end": "263520"
  },
  {
    "text": "whether it's a role",
    "start": "263520",
    "end": "265199"
  },
  {
    "text": "an iem user a root account i'll be",
    "start": "265199",
    "end": "268639"
  },
  {
    "text": "good to understand what types of iem",
    "start": "268639",
    "end": "270880"
  },
  {
    "text": "users are accessing our",
    "start": "270880",
    "end": "272400"
  },
  {
    "text": "our data or our athena the next thing i",
    "start": "272400",
    "end": "274720"
  },
  {
    "text": "want to do is i want to look at the",
    "start": "274720",
    "end": "276560"
  },
  {
    "text": "username of that",
    "start": "276560",
    "end": "278400"
  },
  {
    "text": "that identity now the username based on",
    "start": "278400",
    "end": "280960"
  },
  {
    "text": "what role it's stored in a different",
    "start": "280960",
    "end": "283440"
  },
  {
    "text": "field instead of the user identity",
    "start": "283440",
    "end": "286000"
  },
  {
    "text": "struct or element",
    "start": "286000",
    "end": "287520"
  },
  {
    "text": "so we'll just use a simple case",
    "start": "287520",
    "end": "289120"
  },
  {
    "text": "statement",
    "start": "289120",
    "end": "291520"
  },
  {
    "text": "edition username and let's just say",
    "start": "293199",
    "end": "296880"
  },
  {
    "text": "when the user identity",
    "start": "296880",
    "end": "300400"
  },
  {
    "text": "is assumed role",
    "start": "300400",
    "end": "304400"
  },
  {
    "text": "right um then the user identity",
    "start": "304400",
    "end": "309600"
  },
  {
    "text": "session context that",
    "start": "309600",
    "end": "314080"
  },
  {
    "text": "it's in decision issuer um",
    "start": "314080",
    "end": "317440"
  },
  {
    "text": "that username and i did a little bit of",
    "start": "317440",
    "end": "318720"
  },
  {
    "text": "homework beforehand so you have to spend",
    "start": "318720",
    "end": "320479"
  },
  {
    "text": "time on this",
    "start": "320479",
    "end": "321600"
  },
  {
    "text": "um and if it's not then it's a user",
    "start": "321600",
    "end": "324160"
  },
  {
    "text": "identity",
    "start": "324160",
    "end": "325600"
  },
  {
    "text": "that username is the field that we want",
    "start": "325600",
    "end": "327680"
  },
  {
    "text": "to grab the username from",
    "start": "327680",
    "end": "329600"
  },
  {
    "text": "um citation context session issuer okay",
    "start": "329600",
    "end": "333280"
  },
  {
    "text": "cool",
    "start": "333280",
    "end": "333840"
  },
  {
    "text": "so we got we got that part um",
    "start": "333840",
    "end": "337280"
  },
  {
    "text": "next thing we want to do is we want to",
    "start": "337280",
    "end": "338479"
  },
  {
    "text": "grab the user agent right",
    "start": "338479",
    "end": "340479"
  },
  {
    "text": "user agent uh let's also grab the",
    "start": "340479",
    "end": "344400"
  },
  {
    "text": "request",
    "start": "344400",
    "end": "346560"
  },
  {
    "text": "parameters just so we can uh dig into",
    "start": "346560",
    "end": "349680"
  },
  {
    "text": "that a little bit more",
    "start": "349680",
    "end": "351360"
  },
  {
    "text": "okay so we have that let's just run our",
    "start": "351360",
    "end": "353680"
  },
  {
    "text": "query",
    "start": "353680",
    "end": "356080"
  },
  {
    "text": "awesome so now we have the user the",
    "start": "356800",
    "end": "358639"
  },
  {
    "text": "session type we have it here we have the",
    "start": "358639",
    "end": "360479"
  },
  {
    "text": "the session username",
    "start": "360479",
    "end": "362160"
  },
  {
    "text": "uh this particular is a lambda function",
    "start": "362160",
    "end": "364400"
  },
  {
    "text": "that's using this this particular",
    "start": "364400",
    "end": "366000"
  },
  {
    "text": "wall um it's using this user agent great",
    "start": "366000",
    "end": "369280"
  },
  {
    "text": "and then we have the",
    "start": "369280",
    "end": "370800"
  },
  {
    "text": "the the sql the next thing",
    "start": "370800",
    "end": "373840"
  },
  {
    "text": "that i think we should do and i'm just",
    "start": "373840",
    "end": "375600"
  },
  {
    "text": "gonna copy this and paste it so it's",
    "start": "375600",
    "end": "377520"
  },
  {
    "text": "easier less less typing and less",
    "start": "377520",
    "end": "379280"
  },
  {
    "text": "clicking for you to listen to",
    "start": "379280",
    "end": "381690"
  },
  {
    "text": "[Music]",
    "start": "381690",
    "end": "383520"
  },
  {
    "text": "what we're going to do is we're going to",
    "start": "383520",
    "end": "385520"
  },
  {
    "text": "go in here we're going to add",
    "start": "385520",
    "end": "387440"
  },
  {
    "text": "these these two lines and what these two",
    "start": "387440",
    "end": "389520"
  },
  {
    "text": "lines do is the first one is",
    "start": "389520",
    "end": "391840"
  },
  {
    "text": "using a json extract function and there",
    "start": "391840",
    "end": "394080"
  },
  {
    "text": "are two functions that you can use json",
    "start": "394080",
    "end": "396080"
  },
  {
    "text": "extract",
    "start": "396080",
    "end": "396960"
  },
  {
    "text": "which extracts looks at a json string",
    "start": "396960",
    "end": "399199"
  },
  {
    "text": "and extract another",
    "start": "399199",
    "end": "400319"
  },
  {
    "text": "a set of data but returns you a json",
    "start": "400319",
    "end": "403280"
  },
  {
    "text": "string in return",
    "start": "403280",
    "end": "405039"
  },
  {
    "text": "the extract scalar takes that and",
    "start": "405039",
    "end": "407440"
  },
  {
    "text": "returns",
    "start": "407440",
    "end": "408080"
  },
  {
    "text": "you a sql native uh type",
    "start": "408080",
    "end": "411280"
  },
  {
    "text": "right so in this case we're using the",
    "start": "411280",
    "end": "413360"
  },
  {
    "text": "json extract function",
    "start": "413360",
    "end": "415120"
  },
  {
    "text": "you with a json path to find the output",
    "start": "415120",
    "end": "418960"
  },
  {
    "text": "location and return it as a string",
    "start": "418960",
    "end": "421039"
  },
  {
    "text": "rather than returning it as a json",
    "start": "421039",
    "end": "422880"
  },
  {
    "text": "string returning it is a sql string so",
    "start": "422880",
    "end": "425199"
  },
  {
    "text": "it's easier for us to work with",
    "start": "425199",
    "end": "426880"
  },
  {
    "text": "so once we return that in we're going to",
    "start": "426880",
    "end": "429199"
  },
  {
    "text": "pass it to a url extract host",
    "start": "429199",
    "end": "431840"
  },
  {
    "text": "function that will take out the hostname",
    "start": "431840",
    "end": "435039"
  },
  {
    "text": "of that string because it's an s3 path",
    "start": "435039",
    "end": "438160"
  },
  {
    "text": "the host name is a bucket name and when",
    "start": "438160",
    "end": "440720"
  },
  {
    "text": "we're going to we're going to upload",
    "start": "440720",
    "end": "441919"
  },
  {
    "text": "that into the upward bucket",
    "start": "441919",
    "end": "443280"
  },
  {
    "text": "column doing something very similar in",
    "start": "443280",
    "end": "445919"
  },
  {
    "text": "the next function but we wanted to",
    "start": "445919",
    "end": "447360"
  },
  {
    "text": "basically grab the word group",
    "start": "447360",
    "end": "450080"
  },
  {
    "text": "so again using json path to go into the",
    "start": "450080",
    "end": "453599"
  },
  {
    "text": "the word group",
    "start": "453599",
    "end": "454639"
  },
  {
    "text": "field and grab that out and because i'm",
    "start": "454639",
    "end": "456479"
  },
  {
    "text": "using extract scalar it's going to",
    "start": "456479",
    "end": "457840"
  },
  {
    "text": "return it as a string",
    "start": "457840",
    "end": "460240"
  },
  {
    "text": "so let's just run this",
    "start": "460240",
    "end": "464080"
  },
  {
    "text": "and we should be able to see here so we",
    "start": "464080",
    "end": "465840"
  },
  {
    "text": "have the output bucket and it gives us",
    "start": "465840",
    "end": "467440"
  },
  {
    "text": "only the bucket name",
    "start": "467440",
    "end": "468879"
  },
  {
    "text": "there's no word group in this case",
    "start": "468879",
    "end": "470240"
  },
  {
    "text": "because this particular lambda function",
    "start": "470240",
    "end": "471840"
  },
  {
    "text": "is not using word groups",
    "start": "471840",
    "end": "473199"
  },
  {
    "text": "and it was created before work groups",
    "start": "473199",
    "end": "476000"
  },
  {
    "text": "were being",
    "start": "476000",
    "end": "476560"
  },
  {
    "text": "uh were uh mandatory so we have it",
    "start": "476560",
    "end": "480560"
  },
  {
    "text": "it's empty but i have others that show",
    "start": "480560",
    "end": "482720"
  },
  {
    "text": "it um",
    "start": "482720",
    "end": "484160"
  },
  {
    "text": "so that's that's um the next thing that",
    "start": "484160",
    "end": "486319"
  },
  {
    "text": "we can do so the",
    "start": "486319",
    "end": "487280"
  },
  {
    "text": "the second thing i wanted to do is um",
    "start": "487280",
    "end": "490479"
  },
  {
    "text": "what i thought it would be will be",
    "start": "490479",
    "end": "491599"
  },
  {
    "text": "helpful is if we look",
    "start": "491599",
    "end": "493599"
  },
  {
    "text": "at the query string itself and try to",
    "start": "493599",
    "end": "496319"
  },
  {
    "text": "understand",
    "start": "496319",
    "end": "497759"
  },
  {
    "text": "um from the query what type of queries",
    "start": "497759",
    "end": "500560"
  },
  {
    "text": "our users are running right are these a",
    "start": "500560",
    "end": "502000"
  },
  {
    "text": "lot of select queries do we see a lot of",
    "start": "502000",
    "end": "504000"
  },
  {
    "text": "create queries or drop queries",
    "start": "504000",
    "end": "506879"
  },
  {
    "text": "so i have a fairly naive approach to to",
    "start": "506879",
    "end": "510000"
  },
  {
    "text": "that problem i'm sure you can find a",
    "start": "510000",
    "end": "511520"
  },
  {
    "text": "different way to solve it but",
    "start": "511520",
    "end": "513760"
  },
  {
    "text": "what we can do is just add a case",
    "start": "513760",
    "end": "517120"
  },
  {
    "text": "statement here that again uses",
    "start": "517120",
    "end": "519599"
  },
  {
    "text": "the json extract function to",
    "start": "519599",
    "end": "522719"
  },
  {
    "text": "go to the request parameters column and",
    "start": "522719",
    "end": "524640"
  },
  {
    "text": "extract the query string",
    "start": "524640",
    "end": "526480"
  },
  {
    "text": "and from there we return it as a is a",
    "start": "526480",
    "end": "528560"
  },
  {
    "text": "sql string and then using regular",
    "start": "528560",
    "end": "530480"
  },
  {
    "text": "expression",
    "start": "530480",
    "end": "531680"
  },
  {
    "text": "we are checking if there's any keywords",
    "start": "531680",
    "end": "534320"
  },
  {
    "text": "in that string and based on that we're",
    "start": "534320",
    "end": "536080"
  },
  {
    "text": "going to bucket it into",
    "start": "536080",
    "end": "538000"
  },
  {
    "text": "specific query types right whether it's",
    "start": "538000",
    "end": "540560"
  },
  {
    "text": "a create",
    "start": "540560",
    "end": "541680"
  },
  {
    "text": "statement an insert statement a select a",
    "start": "541680",
    "end": "543920"
  },
  {
    "text": "drop",
    "start": "543920",
    "end": "545200"
  },
  {
    "text": "again this is naive there could be a lot",
    "start": "545200",
    "end": "547040"
  },
  {
    "text": "of different variations to this but",
    "start": "547040",
    "end": "548959"
  },
  {
    "text": "in most cases this is this is pretty",
    "start": "548959",
    "end": "550880"
  },
  {
    "text": "straightforward",
    "start": "550880",
    "end": "552080"
  },
  {
    "text": "and if we don't know if we can't figure",
    "start": "552080",
    "end": "553760"
  },
  {
    "text": "it out then the default will just",
    "start": "553760",
    "end": "555839"
  },
  {
    "text": "select right that's typically what the",
    "start": "555839",
    "end": "557360"
  },
  {
    "text": "queries are and then we're going to save",
    "start": "557360",
    "end": "559120"
  },
  {
    "text": "it as a sql op",
    "start": "559120",
    "end": "560640"
  },
  {
    "text": "column so let's just run this",
    "start": "560640",
    "end": "563839"
  },
  {
    "text": "all right so now you can see that we get",
    "start": "566800",
    "end": "569360"
  },
  {
    "text": "all the same information we had before",
    "start": "569360",
    "end": "571920"
  },
  {
    "text": "but now we have the sql up column that",
    "start": "571920",
    "end": "574560"
  },
  {
    "text": "tells us uh",
    "start": "574560",
    "end": "576080"
  },
  {
    "text": "what type of query was run select query",
    "start": "576080",
    "end": "579200"
  },
  {
    "text": "create query etc so now that we have",
    "start": "579200",
    "end": "582320"
  },
  {
    "text": "this created what we want to do",
    "start": "582320",
    "end": "584080"
  },
  {
    "text": "is and this is how we make it really",
    "start": "584080",
    "end": "586320"
  },
  {
    "text": "easy for our users",
    "start": "586320",
    "end": "588000"
  },
  {
    "text": "is we want to take this all this work",
    "start": "588000",
    "end": "589920"
  },
  {
    "text": "that we've done",
    "start": "589920",
    "end": "591040"
  },
  {
    "text": "and actually create a table out of that",
    "start": "591040",
    "end": "594320"
  },
  {
    "text": "and the way we do it is we use a create",
    "start": "594320",
    "end": "596720"
  },
  {
    "text": "table statement that looks kind of like",
    "start": "596720",
    "end": "598560"
  },
  {
    "text": "this",
    "start": "598560",
    "end": "599519"
  },
  {
    "text": "so you do create table we give it a name",
    "start": "599519",
    "end": "602399"
  },
  {
    "text": "let's just call it staging",
    "start": "602399",
    "end": "605200"
  },
  {
    "text": "and then we pass it a parameter called",
    "start": "605200",
    "end": "608320"
  },
  {
    "text": "with and width allows us to define",
    "start": "608320",
    "end": "610959"
  },
  {
    "text": "different",
    "start": "610959",
    "end": "611519"
  },
  {
    "text": "um characteristics of our table so the",
    "start": "611519",
    "end": "613920"
  },
  {
    "text": "first thing we want to do is we want to",
    "start": "613920",
    "end": "615200"
  },
  {
    "text": "we want to define",
    "start": "615200",
    "end": "616079"
  },
  {
    "text": "a format let's just call it uh",
    "start": "616079",
    "end": "619200"
  },
  {
    "text": "parquet um so that's that's the format",
    "start": "619200",
    "end": "622560"
  },
  {
    "text": "that we want to save in part k it's",
    "start": "622560",
    "end": "623839"
  },
  {
    "text": "automatically going to be",
    "start": "623839",
    "end": "624880"
  },
  {
    "text": "compressed uh in snappy so you don't",
    "start": "624880",
    "end": "626800"
  },
  {
    "text": "have to do that in addition",
    "start": "626800",
    "end": "628399"
  },
  {
    "text": "uh you can add partitioning you can do",
    "start": "628399",
    "end": "630560"
  },
  {
    "text": "partitioned by",
    "start": "630560",
    "end": "632560"
  },
  {
    "text": "and give it an array of",
    "start": "632560",
    "end": "636160"
  },
  {
    "text": "columns um you know column ids whatever",
    "start": "636160",
    "end": "638959"
  },
  {
    "text": "there may be in this case i'm not going",
    "start": "638959",
    "end": "640399"
  },
  {
    "text": "to partition it because",
    "start": "640399",
    "end": "642320"
  },
  {
    "text": "i don't need to partition it but what i",
    "start": "642320",
    "end": "643920"
  },
  {
    "text": "am going to do is i'm going to bucket it",
    "start": "643920",
    "end": "645920"
  },
  {
    "text": "so",
    "start": "645920",
    "end": "647120"
  },
  {
    "text": "bucketed by and it's the same syntax",
    "start": "647120",
    "end": "651440"
  },
  {
    "text": "so array i'm actually going to use the",
    "start": "651440",
    "end": "654480"
  },
  {
    "text": "dt column the daytime column that we",
    "start": "654480",
    "end": "657680"
  },
  {
    "text": "created",
    "start": "657680",
    "end": "658880"
  },
  {
    "text": "and i'm also going to pick uh three",
    "start": "658880",
    "end": "661839"
  },
  {
    "text": "buckets",
    "start": "661839",
    "end": "662560"
  },
  {
    "text": "and what bucketing does is it takes the",
    "start": "662560",
    "end": "664640"
  },
  {
    "text": "data and it sorts it based on the column",
    "start": "664640",
    "end": "666959"
  },
  {
    "text": "that you're given in this case dt",
    "start": "666959",
    "end": "669040"
  },
  {
    "text": "and then it it tries to evenly split the",
    "start": "669040",
    "end": "671839"
  },
  {
    "text": "data up into those",
    "start": "671839",
    "end": "673200"
  },
  {
    "text": "the number of buckets that you gave it",
    "start": "673200",
    "end": "675200"
  },
  {
    "text": "right so you're going to end up with",
    "start": "675200",
    "end": "676560"
  },
  {
    "text": "three buckets and",
    "start": "676560",
    "end": "677519"
  },
  {
    "text": "in in in the scene of three buckets",
    "start": "677519",
    "end": "679839"
  },
  {
    "text": "equals three files and you'll see this",
    "start": "679839",
    "end": "681519"
  },
  {
    "text": "in a second uh",
    "start": "681519",
    "end": "682560"
  },
  {
    "text": "in ns3 um so this is this is a form of",
    "start": "682560",
    "end": "685920"
  },
  {
    "text": "optimization especially for these kind",
    "start": "685920",
    "end": "687519"
  },
  {
    "text": "of temp tables that we're creating that",
    "start": "687519",
    "end": "689040"
  },
  {
    "text": "we're going to use and eventually throw",
    "start": "689040",
    "end": "690480"
  },
  {
    "text": "away",
    "start": "690480",
    "end": "691279"
  },
  {
    "text": "um it's it's a good way to optimize",
    "start": "691279",
    "end": "693360"
  },
  {
    "text": "because we're sorting data in advance",
    "start": "693360",
    "end": "695680"
  },
  {
    "text": "um we're reducing the number of files",
    "start": "695680",
    "end": "698640"
  },
  {
    "text": "we're",
    "start": "698640",
    "end": "698959"
  },
  {
    "text": "keeping the files in in a manageable",
    "start": "698959",
    "end": "701440"
  },
  {
    "text": "size and will make it easier and more",
    "start": "701440",
    "end": "703200"
  },
  {
    "text": "performant for athena to query",
    "start": "703200",
    "end": "705279"
  },
  {
    "text": "the next thing the next thing i wanted",
    "start": "705279",
    "end": "706720"
  },
  {
    "text": "to also do here is",
    "start": "706720",
    "end": "708480"
  },
  {
    "text": "um change the location so this is the",
    "start": "708480",
    "end": "711519"
  },
  {
    "text": "location where the data will be saved",
    "start": "711519",
    "end": "713360"
  },
  {
    "text": "into",
    "start": "713360",
    "end": "714399"
  },
  {
    "text": "uh so we're going to use athena",
    "start": "714399",
    "end": "719760"
  },
  {
    "text": "output oops output we'll just give it",
    "start": "719760",
    "end": "724079"
  },
  {
    "text": "um you know just a location right um",
    "start": "724079",
    "end": "728000"
  },
  {
    "text": "and and what this does is it takes the",
    "start": "728000",
    "end": "730320"
  },
  {
    "text": "the table that we're creating and he",
    "start": "730320",
    "end": "731680"
  },
  {
    "text": "puts it in this particular bucket now",
    "start": "731680",
    "end": "733760"
  },
  {
    "text": "if you don't do this by default it's",
    "start": "733760",
    "end": "735279"
  },
  {
    "text": "going to put it into the folder that you",
    "start": "735279",
    "end": "737440"
  },
  {
    "text": "define in your athena configuration",
    "start": "737440",
    "end": "739120"
  },
  {
    "text": "which is",
    "start": "739120",
    "end": "740000"
  },
  {
    "text": "um under here right uh",
    "start": "740000",
    "end": "743279"
  },
  {
    "text": "so you can you can easily do that but if",
    "start": "743279",
    "end": "746320"
  },
  {
    "text": "you want to put the data in a specific",
    "start": "746320",
    "end": "748000"
  },
  {
    "text": "location",
    "start": "748000",
    "end": "748880"
  },
  {
    "text": "you can set your external uh location",
    "start": "748880",
    "end": "750959"
  },
  {
    "text": "now once you do that",
    "start": "750959",
    "end": "752720"
  },
  {
    "text": "you do as and then",
    "start": "752720",
    "end": "755839"
  },
  {
    "text": "you can run the query now the one thing",
    "start": "755839",
    "end": "757920"
  },
  {
    "text": "that i forgot to do here is that the",
    "start": "757920",
    "end": "760160"
  },
  {
    "text": "bucketed by",
    "start": "760160",
    "end": "761760"
  },
  {
    "text": "feature does not support timestamp uh",
    "start": "761760",
    "end": "764639"
  },
  {
    "text": "but it does support a date stamp so we",
    "start": "764639",
    "end": "766720"
  },
  {
    "text": "have to convert this time step into a",
    "start": "766720",
    "end": "768639"
  },
  {
    "text": "date",
    "start": "768639",
    "end": "769519"
  },
  {
    "text": "um so we we we do it like this so i'm",
    "start": "769519",
    "end": "771600"
  },
  {
    "text": "not going to run this because i already",
    "start": "771600",
    "end": "772880"
  },
  {
    "text": "did and it takes a couple minutes i'm",
    "start": "772880",
    "end": "774160"
  },
  {
    "text": "going to save a couple minutes here",
    "start": "774160",
    "end": "776480"
  },
  {
    "text": "but once you run this you end up with a",
    "start": "776480",
    "end": "779040"
  },
  {
    "text": "staging table that looks like this",
    "start": "779040",
    "end": "781839"
  },
  {
    "text": "right we have our our columns",
    "start": "781839",
    "end": "784880"
  },
  {
    "text": "and it's it's already there ready to go",
    "start": "784880",
    "end": "787040"
  },
  {
    "text": "so what i'm going to do is now",
    "start": "787040",
    "end": "788560"
  },
  {
    "text": "just quickly preview this table",
    "start": "788560",
    "end": "792240"
  },
  {
    "text": "great so now you can see here it's",
    "start": "793920",
    "end": "796480"
  },
  {
    "text": "exactly what we",
    "start": "796480",
    "end": "797600"
  },
  {
    "text": "created before just in a table ready for",
    "start": "797600",
    "end": "800639"
  },
  {
    "text": "us to to work with",
    "start": "800639",
    "end": "802320"
  },
  {
    "text": "um so now that we've done all the data",
    "start": "802320",
    "end": "804399"
  },
  {
    "text": "prep fairly straightforward there's a",
    "start": "804399",
    "end": "806160"
  },
  {
    "text": "lot of functions already available for",
    "start": "806160",
    "end": "807680"
  },
  {
    "text": "you in athena that you can use",
    "start": "807680",
    "end": "809920"
  },
  {
    "text": "once you've used those functions and you",
    "start": "809920",
    "end": "811839"
  },
  {
    "text": "you prepare the data and you structure",
    "start": "811839",
    "end": "813760"
  },
  {
    "text": "in a way that makes sense to you",
    "start": "813760",
    "end": "815279"
  },
  {
    "text": "you can then create these temp tables",
    "start": "815279",
    "end": "816880"
  },
  {
    "text": "temporary tables for",
    "start": "816880",
    "end": "818720"
  },
  {
    "text": "yourself to analyze maybe you can",
    "start": "818720",
    "end": "820800"
  },
  {
    "text": "connect them to",
    "start": "820800",
    "end": "821920"
  },
  {
    "text": "you know amazon quicksite for",
    "start": "821920",
    "end": "823279"
  },
  {
    "text": "visualization sharing with other people",
    "start": "823279",
    "end": "825920"
  },
  {
    "text": "but they're easy to work with they're",
    "start": "825920",
    "end": "827279"
  },
  {
    "text": "optimized um and you get the best",
    "start": "827279",
    "end": "829519"
  },
  {
    "text": "performance and the best cost savings so",
    "start": "829519",
    "end": "830880"
  },
  {
    "text": "maybe a couple things that we can do",
    "start": "830880",
    "end": "832320"
  },
  {
    "text": "here is",
    "start": "832320",
    "end": "833519"
  },
  {
    "text": "uh let's just show how many times",
    "start": "833519",
    "end": "836639"
  },
  {
    "text": "a particular sql query type was run so",
    "start": "836639",
    "end": "840639"
  },
  {
    "text": "we're gonna look at the sql up column",
    "start": "840639",
    "end": "842320"
  },
  {
    "text": "we're going to count it",
    "start": "842320",
    "end": "843760"
  },
  {
    "text": "um and then we're going to order a group",
    "start": "843760",
    "end": "845680"
  },
  {
    "text": "it by the sql operation and order it",
    "start": "845680",
    "end": "848160"
  },
  {
    "text": "um so very quickly right we see we have",
    "start": "848160",
    "end": "851199"
  },
  {
    "text": "about uh",
    "start": "851199",
    "end": "851839"
  },
  {
    "text": "over you know 1100 uh queries that were",
    "start": "851839",
    "end": "855279"
  },
  {
    "text": "run",
    "start": "855279",
    "end": "855760"
  },
  {
    "text": "that were select queries there's a bunch",
    "start": "855760",
    "end": "858000"
  },
  {
    "text": "of create queries right this is creating",
    "start": "858000",
    "end": "859839"
  },
  {
    "text": "new tables creating table as select",
    "start": "859839",
    "end": "861920"
  },
  {
    "text": "statements",
    "start": "861920",
    "end": "862959"
  },
  {
    "text": "uh there's a few inserts and a few drops",
    "start": "862959",
    "end": "865120"
  },
  {
    "text": "that we did",
    "start": "865120",
    "end": "866320"
  },
  {
    "text": "so this is cool we're just going to get",
    "start": "866320",
    "end": "867600"
  },
  {
    "text": "an idea of what type of queries our",
    "start": "867600",
    "end": "869440"
  },
  {
    "text": "users are running",
    "start": "869440",
    "end": "871680"
  },
  {
    "text": "another another one that may be",
    "start": "871680",
    "end": "873360"
  },
  {
    "text": "interesting for us to to look at is the",
    "start": "873360",
    "end": "875440"
  },
  {
    "text": "word groups that i talked about",
    "start": "875440",
    "end": "877680"
  },
  {
    "text": "so here we're going to select the word",
    "start": "877680",
    "end": "879040"
  },
  {
    "text": "groups and we're going to count how many",
    "start": "879040",
    "end": "880880"
  },
  {
    "text": "queries",
    "start": "880880",
    "end": "882000"
  },
  {
    "text": "were executed per war group um and we're",
    "start": "882000",
    "end": "885120"
  },
  {
    "text": "gonna",
    "start": "885120",
    "end": "885680"
  },
  {
    "text": "we're gonna group them by the word group",
    "start": "885680",
    "end": "887040"
  },
  {
    "text": "so you can see here that we have a bunch",
    "start": "887040",
    "end": "889120"
  },
  {
    "text": "of work groups there's an empty word",
    "start": "889120",
    "end": "890480"
  },
  {
    "text": "group that's the the lambda function",
    "start": "890480",
    "end": "892480"
  },
  {
    "text": "uh there's a whole lot of queries being",
    "start": "892480",
    "end": "894320"
  },
  {
    "text": "run from that function but it's not in a",
    "start": "894320",
    "end": "896000"
  },
  {
    "text": "word group so that's something maybe we",
    "start": "896000",
    "end": "897680"
  },
  {
    "text": "should go back and look at let's update",
    "start": "897680",
    "end": "900480"
  },
  {
    "text": "the lambda function to use the word",
    "start": "900480",
    "end": "902000"
  },
  {
    "text": "group so we can actually track it in",
    "start": "902000",
    "end": "903600"
  },
  {
    "text": "case something happens",
    "start": "903600",
    "end": "904880"
  },
  {
    "text": "we can put cost controls around it to",
    "start": "904880",
    "end": "906959"
  },
  {
    "text": "stop it from",
    "start": "906959",
    "end": "907920"
  },
  {
    "text": "from from over overspending",
    "start": "907920",
    "end": "911040"
  },
  {
    "text": "we can also see that you know our",
    "start": "911040",
    "end": "912480"
  },
  {
    "text": "reporting team you know ran",
    "start": "912480",
    "end": "914160"
  },
  {
    "text": "you know about 52 queries ad hoc users",
    "start": "914160",
    "end": "917040"
  },
  {
    "text": "are running",
    "start": "917040",
    "end": "917920"
  },
  {
    "text": "uh you know 31 queries um there's a",
    "start": "917920",
    "end": "921120"
  },
  {
    "text": "bunch of queries running",
    "start": "921120",
    "end": "922320"
  },
  {
    "text": "against the the preview functionality",
    "start": "922320",
    "end": "924000"
  },
  {
    "text": "work group so people are testing new",
    "start": "924000",
    "end": "925920"
  },
  {
    "text": "features",
    "start": "925920",
    "end": "926800"
  },
  {
    "text": "uh so that's great right there's a lot",
    "start": "926800",
    "end": "928240"
  },
  {
    "text": "of cool things so just to kind of",
    "start": "928240",
    "end": "930320"
  },
  {
    "text": "recap what we talked about um edibles",
    "start": "930320",
    "end": "933040"
  },
  {
    "text": "cloudtrail",
    "start": "933040",
    "end": "934000"
  },
  {
    "text": "is a place where you store a lot of the",
    "start": "934000",
    "end": "936240"
  },
  {
    "text": "aws infrastructure logs",
    "start": "936240",
    "end": "938000"
  },
  {
    "text": "so anything you do in aws gets captured",
    "start": "938000",
    "end": "940240"
  },
  {
    "text": "there so it's a gold mine of information",
    "start": "940240",
    "end": "942560"
  },
  {
    "text": "to see how users are using your service",
    "start": "942560",
    "end": "944480"
  },
  {
    "text": "and how services are",
    "start": "944480",
    "end": "945680"
  },
  {
    "text": "interacting with each other we focused",
    "start": "945680",
    "end": "948720"
  },
  {
    "text": "on the athena",
    "start": "948720",
    "end": "950079"
  },
  {
    "text": "events in particular looking at those",
    "start": "950079",
    "end": "952800"
  },
  {
    "text": "that were starting queries",
    "start": "952800",
    "end": "954000"
  },
  {
    "text": "so we can see what sql queries are being",
    "start": "954000",
    "end": "956079"
  },
  {
    "text": "run",
    "start": "956079",
    "end": "957199"
  },
  {
    "text": "we transformed it we cleaned it and then",
    "start": "957199",
    "end": "959040"
  },
  {
    "text": "we derived the table out of that we",
    "start": "959040",
    "end": "960720"
  },
  {
    "text": "created a new table",
    "start": "960720",
    "end": "962320"
  },
  {
    "text": "out of that transformations so now we're",
    "start": "962320",
    "end": "964880"
  },
  {
    "text": "able to very quickly analyze it and use",
    "start": "964880",
    "end": "966800"
  },
  {
    "text": "it",
    "start": "966800",
    "end": "967440"
  },
  {
    "text": "and also visualize it so that's it um",
    "start": "967440",
    "end": "969920"
  },
  {
    "text": "hopefully this was uh",
    "start": "969920",
    "end": "971279"
  },
  {
    "text": "interesting for you and hopefully this",
    "start": "971279",
    "end": "973600"
  },
  {
    "text": "will get you uh",
    "start": "973600",
    "end": "974639"
  },
  {
    "text": "starting analyzing some cloud trail data",
    "start": "974639",
    "end": "976320"
  },
  {
    "text": "using amazon athena so thank you very",
    "start": "976320",
    "end": "978240"
  },
  {
    "text": "much for the time",
    "start": "978240",
    "end": "980320"
  },
  {
    "text": "take care",
    "start": "980320",
    "end": "983120"
  }
]