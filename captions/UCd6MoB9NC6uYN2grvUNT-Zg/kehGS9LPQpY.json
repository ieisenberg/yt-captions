[
  {
    "text": "[Music]",
    "start": "200",
    "end": "3280"
  },
  {
    "text": "hello guys let's start the",
    "start": "8719",
    "end": "13240"
  },
  {
    "text": "slideshow welcome to web 204 session on speeding up your sites",
    "start": "16039",
    "end": "21680"
  },
  {
    "text": "performance with a webcache I am Steve Mueller Solutions architect for Amazon web services based out of the New York",
    "start": "21680",
    "end": "28960"
  },
  {
    "text": "Market where I cover a number of large Enterprise uh customers uh in the media",
    "start": "28960",
    "end": "34320"
  },
  {
    "text": "Financial pharmaceutical Industries So today we're going to talk",
    "start": "34320",
    "end": "40280"
  },
  {
    "text": "about web apps how do you increase and improve performance of your web app what",
    "start": "40280",
    "end": "46440"
  },
  {
    "text": "go fast switches exist for you in those web apps what options do you have in front of you but before we get there for",
    "start": "46440",
    "end": "54000"
  },
  {
    "text": "those in the room who may not be at as familiar with basic web transaction we should just Baseline and say that a web",
    "start": "54000",
    "end": "60719"
  },
  {
    "text": "app and its basic web transaction is really at this point a wellestablished design pattern involving load balancers",
    "start": "60719",
    "end": "68520"
  },
  {
    "text": "in front of web servers and app servers and those app servers and web servers will frontend backend services that",
    "start": "68520",
    "end": "74640"
  },
  {
    "text": "backend service may be a database that database may be relational database service or RDS from AWS or something",
    "start": "74640",
    "end": "81320"
  },
  {
    "text": "that you run on ec2 it may be a backend API call or a back-end Legacy system but",
    "start": "81320",
    "end": "88159"
  },
  {
    "text": "at this point the basic web transaction is well defined but it does leave some",
    "start": "88159",
    "end": "93960"
  },
  {
    "text": "performance questions for us namely does your application perform as well as it",
    "start": "93960",
    "end": "101240"
  },
  {
    "text": "should corollary question to that is are you characterizing your application's",
    "start": "101240",
    "end": "106640"
  },
  {
    "text": "performance do you know what you should expect out of your application in terms of its",
    "start": "106640",
    "end": "112479"
  },
  {
    "text": "performance second big question is are you causing unnecessary strain on your",
    "start": "112479",
    "end": "117719"
  },
  {
    "text": "backend system if you're hitting it every time for dynamic content that doesn't change",
    "start": "117719",
    "end": "123119"
  },
  {
    "text": "or even more specifically static content that doesn't change why are you doing",
    "start": "123119",
    "end": "128399"
  },
  {
    "text": "that you might be paying too much and AWS offers elastic features to actually reduce the size of those instances and",
    "start": "128399",
    "end": "135319"
  },
  {
    "text": "offset them with some type of performance cache finally can you improve the",
    "start": "135319",
    "end": "141400"
  },
  {
    "text": "experience for your customers there's an old saying that if you don't hear your customers complain then your website",
    "start": "141400",
    "end": "146800"
  },
  {
    "text": "must be performing just fine but the reality is web c customers on your websites may",
    "start": "146800",
    "end": "152560"
  },
  {
    "text": "actually be experiencing performance problems and you don't know it so how do you",
    "start": "152560",
    "end": "157800"
  },
  {
    "text": "address Performance how do you transform your jog into a",
    "start": "158239",
    "end": "166159"
  },
  {
    "text": "Sprint the use of a webcache will be the focus of today's session there are three",
    "start": "166319",
    "end": "172760"
  },
  {
    "text": "major goast switches as I like to call them however in a web application so let's take a look at what",
    "start": "172760",
    "end": "179680"
  },
  {
    "text": "those those are first is the in-memory object cache as you will find out this",
    "start": "179680",
    "end": "185159"
  },
  {
    "text": "is traditional M cach D or reddis we also look at web caches themselves front-end web accelerators",
    "start": "185159",
    "end": "192680"
  },
  {
    "text": "and finally the concept of content distribution networks for Global Edge content",
    "start": "192680",
    "end": "198000"
  },
  {
    "text": "delivery which go fast switch should you choose I argue there's not necessarily",
    "start": "198000",
    "end": "203560"
  },
  {
    "text": "one that's right let the use case Drive which goast switch you will CH choose",
    "start": "203560",
    "end": "209480"
  },
  {
    "text": "for your web app so to set the landscape for this",
    "start": "209480",
    "end": "214920"
  },
  {
    "text": "conversation around webcash and in particular varnish we have to understand what that landscape looks like as I said",
    "start": "214920",
    "end": "221920"
  },
  {
    "text": "earlier first in any web application today you have the option to implement",
    "start": "221920",
    "end": "228239"
  },
  {
    "text": "an in-memory object cache this is usually a key Value Store",
    "start": "228239",
    "end": "234879"
  },
  {
    "text": "why are key values so important in HTTP well the HTTP session State itself is a",
    "start": "234879",
    "end": "240319"
  },
  {
    "text": "key value pair I have a key that equals a value therefore I would like to store it in",
    "start": "240319",
    "end": "245560"
  },
  {
    "text": "memory as a key value pair object caches are great for",
    "start": "245560",
    "end": "250720"
  },
  {
    "text": "handling small chunks of small data that data could be arbitrary in size in terms of",
    "start": "250720",
    "end": "258359"
  },
  {
    "text": "volume some object caches in memory get up to gigabytes in size that is an",
    "start": "258359",
    "end": "264520"
  },
  {
    "text": "optimization the key Takeaway on an object cache is really focusing on the result of a data datase or an API call",
    "start": "264520",
    "end": "271919"
  },
  {
    "text": "and as I said earlier m cach d and reddis are great examples of inmemory caches from this",
    "start": "271919",
    "end": "278759"
  },
  {
    "text": "diagram you can see that the inmemory object cache sits as a layer between your ec2 instances and your backend",
    "start": "278759",
    "end": "286400"
  },
  {
    "text": "systems in this example I'm using databases and I've selected a few I don't have postgress up here but we'll",
    "start": "286400",
    "end": "292680"
  },
  {
    "text": "assume postgress in any other relational database for that matter would",
    "start": "292680",
    "end": "297879"
  },
  {
    "text": "work the goal of the inmemory object cache is to reduce your database weit",
    "start": "298000",
    "end": "303400"
  },
  {
    "text": "time I talk about backend for the Simplicity of this conversation we'll just assume a",
    "start": "303400",
    "end": "309479"
  },
  {
    "text": "database and by not only reducing the weight time you're also pulling away",
    "start": "309479",
    "end": "316360"
  },
  {
    "text": "unnecessary resource consumption there is a time when your database may be running hot on CPU",
    "start": "316360",
    "end": "324520"
  },
  {
    "text": "Cycles in executing stored procedures you don't need to execute every time",
    "start": "324520",
    "end": "329759"
  },
  {
    "text": "other times you might be running hot in memory as you have temp table space for joins the question is why would you do",
    "start": "329759",
    "end": "335800"
  },
  {
    "text": "those large scale joins if you don't have to so that is the goal of the in-memory object",
    "start": "335800",
    "end": "343560"
  },
  {
    "text": "cache the second goast switch that really exists in the web app tier market",
    "start": "343960",
    "end": "349880"
  },
  {
    "text": "today is the what we call the web cache this is also referred to as a Content",
    "start": "349880",
    "end": "356720"
  },
  {
    "text": "cache web accelerator reverse proxy in some scenarios or an application delivery",
    "start": "356720",
    "end": "363880"
  },
  {
    "text": "controller it takes on many different names but in the end it is the same thing its purpose is to Cache front-end",
    "start": "363880",
    "end": "371240"
  },
  {
    "text": "response objects and not those from an individual API or database call such as",
    "start": "371240",
    "end": "377319"
  },
  {
    "text": "the in-memory object cache the big takeaway here is when you",
    "start": "377319",
    "end": "383160"
  },
  {
    "text": "hear webcache or web accelerator you should think this is going to handle my",
    "start": "383160",
    "end": "388360"
  },
  {
    "text": "static and dynamic h HTTP content that's a little different than if we interact with a database the",
    "start": "388360",
    "end": "395120"
  },
  {
    "text": "database is all about strings and lookups and objects and I don't want to go back here and do this again because",
    "start": "395120",
    "end": "400800"
  },
  {
    "text": "if I can afford to take 85% of the workload off my database I should this",
    "start": "400800",
    "end": "405840"
  },
  {
    "text": "is actually more about how do I cash HTTP responses maybe it's an API call",
    "start": "405840",
    "end": "412080"
  },
  {
    "text": "rest call maybe it's just a standard Dynamic HTML page how do I reduce the",
    "start": "412080",
    "end": "417120"
  },
  {
    "text": "load on those servers that is the goal of today's session in",
    "start": "417120",
    "end": "422160"
  },
  {
    "text": "understanding web caches and varnish in particular as an example in today's",
    "start": "422160",
    "end": "429080"
  },
  {
    "text": "session we talk about varnish but the market also offers a number of other web caches such as squid Apache mod cache",
    "start": "429080",
    "end": "436840"
  },
  {
    "text": "engine X you may be using these today if so we hope to bring something new to you",
    "start": "436840",
    "end": "442680"
  },
  {
    "text": "for the varnish discussion so where does the webcache",
    "start": "442680",
    "end": "447960"
  },
  {
    "text": "sit it sits in in front of the web and application tiers usually between the",
    "start": "447960",
    "end": "453960"
  },
  {
    "text": "load balancers now if you've got this implementation or have done this design in the past you may realize that",
    "start": "453960",
    "end": "460919"
  },
  {
    "text": "immediately we've already posted the best practice we'll explain later why this is",
    "start": "460919",
    "end": "466159"
  },
  {
    "text": "a best practice we could have simply put the web caches in front of the web tiers as well and reduced the",
    "start": "466159",
    "end": "473120"
  },
  {
    "text": "need for the load balancer there all right but in the end you see that the",
    "start": "473120",
    "end": "480360"
  },
  {
    "text": "most important takeaway is not only is it caching the results of its static and dynamic HTTP content",
    "start": "480360",
    "end": "486159"
  },
  {
    "text": "but what is the website now it is no longer your ec2 instances it is a set of",
    "start": "486159",
    "end": "493400"
  },
  {
    "text": "ec2 instances running a webcache such as varnish from a front-end VIP or load",
    "start": "493400",
    "end": "500759"
  },
  {
    "text": "bouncer now before we dive into webcache is again the goal of today's 204",
    "start": "500759",
    "end": "506080"
  },
  {
    "text": "section we should understand that cont content distribution networks exist as",
    "start": "506080",
    "end": "511200"
  },
  {
    "text": "well and I will call it out up front that there is some early concern if",
    "start": "511200",
    "end": "516839"
  },
  {
    "text": "you're new to the web cash and content distribution game that boy they seem awfully familiar well that's right but",
    "start": "516839",
    "end": "524480"
  },
  {
    "text": "there is a separation of purpose here a Content distribution network is really identified by its ability to distribute",
    "start": "524480",
    "end": "531920"
  },
  {
    "text": "content all around the world from locations in geographies and do things like Geo fencing and",
    "start": "531920",
    "end": "538440"
  },
  {
    "text": "restriction today Amazon offers a Content distribution Network or a CDN as",
    "start": "538440",
    "end": "544000"
  },
  {
    "text": "the industry calls it known as AWS cloudfront it is also referred to as",
    "start": "544000",
    "end": "550079"
  },
  {
    "text": "Edge caching border caching Edge caching and like web caching it too handles",
    "start": "550079",
    "end": "556120"
  },
  {
    "text": "static and dynamic results the difference between a webcache and a CDN is that the webcash",
    "start": "556120",
    "end": "563560"
  },
  {
    "text": "lives behind your proverbial firewall local the CDN lives Global",
    "start": "563560",
    "end": "570079"
  },
  {
    "text": "external to your application external to your",
    "start": "570079",
    "end": "574440"
  },
  {
    "text": "vpcs here we see an example of that Amazon web services today offers",
    "start": "575440",
    "end": "581360"
  },
  {
    "text": "52 geographical locations for",
    "start": "581360",
    "end": "586440"
  },
  {
    "text": "cloudfront and it uses one or more sources behind the scenes what we call",
    "start": "586440",
    "end": "591480"
  },
  {
    "text": "backend Origins so we've highlighted just by the star some areas that we're actually featured in you can find all of our CDN",
    "start": "591480",
    "end": "598880"
  },
  {
    "text": "location on our website under the global infrastructure",
    "start": "598880",
    "end": "603640"
  },
  {
    "text": "section so let's take a deeper dive into web",
    "start": "604040",
    "end": "610160"
  },
  {
    "text": "caching the content starts at what's known as the",
    "start": "610920",
    "end": "616720"
  },
  {
    "text": "origin if you look at what we've got in this slide as opposed to what we looked at in the last Slide the origin is",
    "start": "616720",
    "end": "623839"
  },
  {
    "text": "actually defined as a subset of what would appear to be the overall application delivery",
    "start": "623839",
    "end": "632320"
  },
  {
    "text": "engine that origin features a load balancer set of one or more ec2",
    "start": "632320",
    "end": "638480"
  },
  {
    "text": "instances and if you're following best practi is autoscaled across multiple availability",
    "start": "638480",
    "end": "643839"
  },
  {
    "text": "zones with your backend services this origin produces content as",
    "start": "643839",
    "end": "650440"
  },
  {
    "text": "a backend service to one or more nodes running on",
    "start": "650440",
    "end": "656399"
  },
  {
    "text": "ec2 known as a web cache the webcache consumes the origins so in this example",
    "start": "656399",
    "end": "664160"
  },
  {
    "text": "we see that we've got a front-end load balancer that frontend load balancer is",
    "start": "664160",
    "end": "669639"
  },
  {
    "text": "actually what's mapped to your public endpoint space as in this example an external",
    "start": "669639",
    "end": "675360"
  },
  {
    "text": "elb this is the load balancer that your customers will hit you could be surfacing API calls for rest you could",
    "start": "675360",
    "end": "682880"
  },
  {
    "text": "be surfacing web content again the takeaway in a web cache isn't HTML it's",
    "start": "682880",
    "end": "690040"
  },
  {
    "text": "HTTP so what you're actually caching is a result set as long as it's HTTP you",
    "start": "690040",
    "end": "696000"
  },
  {
    "text": "can provide that to your end user so for example let's say we've got an elastic load balancer and that",
    "start": "696000",
    "end": "702200"
  },
  {
    "text": "has Route 53 DNS public DNS because we've just announced private DNS a few",
    "start": "702200",
    "end": "707399"
  },
  {
    "text": "weeks ago but we publicly create a DNS record and map it back to the",
    "start": "707399",
    "end": "712760"
  },
  {
    "text": "elb that is the URL right here that your customers will hit now assuming that",
    "start": "712760",
    "end": "719079"
  },
  {
    "text": "there there is a match for a result that's already been cached in the web",
    "start": "719079",
    "end": "724839"
  },
  {
    "text": "cache or web accelerator layer there's no need to actually Traverse back to the origin this is all",
    "start": "724839",
    "end": "733240"
  },
  {
    "text": "local as you can see by the lock we indicate that this happens in your VPC",
    "start": "733240",
    "end": "739399"
  },
  {
    "text": "we are behind your proverbial firewall quote unquote and that's important distinction between a webcache and a",
    "start": "739399",
    "end": "747040"
  },
  {
    "text": "Content distribution Network this also helps buffer against the",
    "start": "747040",
    "end": "752760"
  },
  {
    "text": "origin why is that important the key to a web cache's",
    "start": "752760",
    "end": "759320"
  },
  {
    "text": "success is how well it can protect your origin the origin being the source of your content delivery within the local",
    "start": "759320",
    "end": "767320"
  },
  {
    "text": "VPC not it makes your websites work smarter and more efficiently not harder",
    "start": "767320",
    "end": "773760"
  },
  {
    "text": "as I like to say your servers are not in a gym they don't need to be working out all the time",
    "start": "773760",
    "end": "780240"
  },
  {
    "text": "and this is important because as I show you in the last bullet a small number of",
    "start": "780240",
    "end": "785920"
  },
  {
    "text": "webcache instances such as varnish will actually help you reduce in",
    "start": "785920",
    "end": "791519"
  },
  {
    "text": "the long run the overall cost of your web application for example assume that",
    "start": "791519",
    "end": "797199"
  },
  {
    "text": "we're running at a c38 XL that's the largest CPU in compute instance we have",
    "start": "797199",
    "end": "802279"
  },
  {
    "text": "32 vcpu 60 gigs of memory by putting just a small set of maybe M3 large instances to 2 vcpu 8",
    "start": "802279",
    "end": "810360"
  },
  {
    "text": "gigs of ram in front of it to offload and handle the cache you may be able to reduce yourself down to a C3 4XL or even",
    "start": "810360",
    "end": "817959"
  },
  {
    "text": "a C3 XL a savings that can be significant in the long run so the elasticity that you've been hearing",
    "start": "817959",
    "end": "823920"
  },
  {
    "text": "about all this week at reinvent from Amazon web services comes into play when",
    "start": "823920",
    "end": "829120"
  },
  {
    "text": "you look at how can I actually get these instance types down in",
    "start": "829120",
    "end": "834399"
  },
  {
    "text": "size put a small layer of cach in front of them for the HTTP response using a",
    "start": "834399",
    "end": "839800"
  },
  {
    "text": "product like varnish and this can overall reduce the cost of your monthly",
    "start": "839800",
    "end": "846240"
  },
  {
    "text": "bill in addition Origins no matter how welld",
    "start": "846240",
    "end": "851920"
  },
  {
    "text": "designed are at risk for failure again the best practice design",
    "start": "851920",
    "end": "857920"
  },
  {
    "text": "is to go multi- availability zone or multi-az but why not place a webc layer",
    "start": "857920",
    "end": "864480"
  },
  {
    "text": "that spans multiple availability zones as well to mitigate any risk here buffer",
    "start": "864480",
    "end": "869720"
  },
  {
    "text": "the origin if you hit the cache what we call hit the cach or a successful hit",
    "start": "869720",
    "end": "874759"
  },
  {
    "text": "against this web cache there's no need to worry about what the back end does this concept by the way translates not",
    "start": "874759",
    "end": "880279"
  },
  {
    "text": "only from webcache but also to content distribution networks the idea being for example in",
    "start": "880279",
    "end": "886440"
  },
  {
    "text": "cloudfront if S3 were to ever go down and you've got it cached in cloudfront you never have to worry about the S3",
    "start": "886440",
    "end": "892920"
  },
  {
    "text": "failure you decouple the source origin from the delivery mechanism and that is exactly",
    "start": "892920",
    "end": "899240"
  },
  {
    "text": "what we're doing here finally one of the bigger pain points for certain application Stacks I",
    "start": "899240",
    "end": "907079"
  },
  {
    "text": "have a customer where that customer says Drupal is tough because of the policies",
    "start": "907079",
    "end": "913720"
  },
  {
    "text": "and decisions in its rendering capabilities they were forced to look at a webcache to",
    "start": "913720",
    "end": "920880"
  },
  {
    "text": "assist in getting better response times for their customers so some application",
    "start": "920880",
    "end": "926120"
  },
  {
    "text": "Stacks don't render content as well because there's a lot going on in the decision-making tree of the rendering",
    "start": "926120",
    "end": "932000"
  },
  {
    "text": "process this is how you protect your origin and ultimately deliver a better experience for your",
    "start": "932000",
    "end": "939560"
  },
  {
    "text": "customer so I've mentioned varnish a few times let's step back and take a look at what varnish is some of you may be using",
    "start": "940920",
    "end": "947759"
  },
  {
    "text": "varnish some of you may be using Apache we'll use a Varnish in this session as an example as I've already",
    "start": "947759",
    "end": "954079"
  },
  {
    "text": "mentioned varnish is an open- Source web accelerator it is the webcache an",
    "start": "954079",
    "end": "959319"
  },
  {
    "text": "example of the webcache that we've been talking about it was developed in",
    "start": "959319",
    "end": "966360"
  },
  {
    "text": "2006 by a gentleman at a Norwegian tabloid newspaper he ran in the online",
    "start": "966360",
    "end": "972240"
  },
  {
    "text": "division of it about eight years ago he said we can do this better so he developed",
    "start": "972240",
    "end": "978360"
  },
  {
    "text": "varnish he took varnish hired a company called LOD they spun into their own",
    "start": "978360",
    "end": "983680"
  },
  {
    "text": "company what you have today in the varnish open source world there's also a commercial implementation of varnish",
    "start": "983680",
    "end": "989600"
  },
  {
    "text": "that will provide support and management for you varnish is history it 1.0 was in",
    "start": "989600",
    "end": "996279"
  },
  {
    "text": "2006 2.0 was in 2008 3.0 was in 2011 and finally we reached version 4.0 in 2014",
    "start": "996279",
    "end": "1004000"
  },
  {
    "text": "and if you follow the varnish track there were big milestones at version three when they offered gzip compression",
    "start": "1004000",
    "end": "1010319"
  },
  {
    "text": "and decompression just some historical notes about varnish varnish actually going back to",
    "start": "1010319",
    "end": "1017880"
  },
  {
    "text": "the original architecture that we've pitched involving your origin which again",
    "start": "1017880",
    "end": "1023880"
  },
  {
    "text": "is your load balancer and your ec2 instances with your back end varnish it becomes the webcache it",
    "start": "1023880",
    "end": "1031319"
  },
  {
    "text": "is that webcache layer and it runs on ec2 instances it can run out a buntu it",
    "start": "1031319",
    "end": "1036480"
  },
  {
    "text": "can run on Amazon Linux it's very straightforward to install we'll actually show you how easy it is to install in a few slides and again it all",
    "start": "1036480",
    "end": "1044280"
  },
  {
    "text": "runs inside of your VPC and the idea is that you spam and multiple availability",
    "start": "1044280",
    "end": "1051280"
  },
  {
    "text": "zones with each node and load balance accordingly with your external load",
    "start": "1051280",
    "end": "1056400"
  },
  {
    "text": "balancer now just a few items here to highlight as well this load balancer in the front of",
    "start": "1056400",
    "end": "1062840"
  },
  {
    "text": "course is the external elb as we've mentioned and of course you've got your varnish nodes those varnish nodes",
    "start": "1062840",
    "end": "1068840"
  },
  {
    "text": "actually can live in the private subnets there's no need to surface or expose them in public because the load balancer",
    "start": "1068840",
    "end": "1075240"
  },
  {
    "text": "the external load balancer will do that for you so tuck as much of of this way as possible if you're putting services",
    "start": "1075240",
    "end": "1081880"
  },
  {
    "text": "in a public subnet that don't need to have a public IP and be directly accessible from the internet revisit",
    "start": "1081880",
    "end": "1087960"
  },
  {
    "text": "that design and tuck them into the private subnet diving a little more specifically",
    "start": "1087960",
    "end": "1093440"
  },
  {
    "text": "varnish will actually turn to an internal load balancer this internal",
    "start": "1093440",
    "end": "1098760"
  },
  {
    "text": "load balancer will listen to One front end inside the private subnet and also",
    "start": "1098760",
    "end": "1104080"
  },
  {
    "text": "broker The Exchange back to one or more instances behind it also in private subnets not one element here sits in the",
    "start": "1104080",
    "end": "1112200"
  },
  {
    "text": "public subnet there's no need for that don't expose yourself to extraordinary",
    "start": "1112200",
    "end": "1117720"
  },
  {
    "text": "risk while we're here we might as well discuss that and then finally your database",
    "start": "1117720",
    "end": "1124480"
  },
  {
    "text": "servers from an architecture perspective there really are two different patterns",
    "start": "1125200",
    "end": "1130840"
  },
  {
    "text": "you can use varnish with you can actually load balance you can handle and",
    "start": "1130840",
    "end": "1136919"
  },
  {
    "text": "manage the load balancing up in front of your ec2 instances of",
    "start": "1136919",
    "end": "1142559"
  },
  {
    "text": "yourself or you can actually provide an end a a backend to Varnish which is",
    "start": "1142559",
    "end": "1147679"
  },
  {
    "text": "nothing more than a load balancer the slides we've shown to date have been",
    "start": "1147679",
    "end": "1153200"
  },
  {
    "text": "using the internal load balancer which is option two earlier I said this was a best",
    "start": "1153200",
    "end": "1160720"
  },
  {
    "text": "practice the reason for it being a best practice is what's the",
    "start": "1160720",
    "end": "1166679"
  },
  {
    "text": "challenge if your web cache is sitting in front of ec2 instances that are",
    "start": "1166679",
    "end": "1173799"
  },
  {
    "text": "autoscaling so if you have a web cache in front of a set of ec2 instances that",
    "start": "1175400",
    "end": "1181280"
  },
  {
    "text": "autoscale based on some triggered condition how does the cash know who's",
    "start": "1181280",
    "end": "1187840"
  },
  {
    "text": "in or who's out I got spun up within the last 30 seconds I actually had three instances",
    "start": "1187840",
    "end": "1194039"
  },
  {
    "text": "spin up well the webcache is saying Hey listen you know what I'll handle the load balancer might I'll do the I'll be",
    "start": "1194039",
    "end": "1200200"
  },
  {
    "text": "the load balancer forget it we don't need to use elb I'll be the load balancer well you have to have some",
    "start": "1200200",
    "end": "1206039"
  },
  {
    "text": "smarts then if you're going to be the load balancer and the problem is and why this",
    "start": "1206039",
    "end": "1211520"
  },
  {
    "text": "is actually a best practice to use the load balancer and why this one while functionally feasible will become",
    "start": "1211520",
    "end": "1217039"
  },
  {
    "text": "operationally difficult is because you're left having to do all of the management of the autoscaling layer",
    "start": "1217039",
    "end": "1223919"
  },
  {
    "text": "yourself let me give you an example this is the real talk you have to actually write Cron job that Cron job has to run",
    "start": "1223919",
    "end": "1230679"
  },
  {
    "text": "every minute every minute you have to query our apis you have to say hey what's the current stat status of Auto",
    "start": "1230679",
    "end": "1236880"
  },
  {
    "text": "scaling how many instances are in here I have 65 oh I had 60 last time and then you have to maintain State on that and",
    "start": "1236880",
    "end": "1244120"
  },
  {
    "text": "then you have to take the current state of what you've got and resolve it against the previous state and go back to Varnish and say oh uh let's inject a",
    "start": "1244120",
    "end": "1250720"
  },
  {
    "text": "new configuration in here please we're actually uh five more servers than we thought we were so the while it's not a",
    "start": "1250720",
    "end": "1258120"
  },
  {
    "text": "bad design design I wouldn't necessarily recommend it to my customers in New York why because you'll spend unnecessary",
    "start": "1258120",
    "end": "1265440"
  },
  {
    "text": "compute Cycles calculating autoscaling events aren't we trying to get away from",
    "start": "1265440",
    "end": "1270559"
  },
  {
    "text": "unnecessary computer Cycles by simply going to a load",
    "start": "1270559",
    "end": "1276480"
  },
  {
    "text": "balancer you delegate the responsibility to the services that are meant to do just that so while it might feel strange",
    "start": "1276480",
    "end": "1283919"
  },
  {
    "text": "to actually say I've got a layer of one or more ec2 instances that are caching HTTP responses and using a load balancer",
    "start": "1283919",
    "end": "1292640"
  },
  {
    "text": "as a backend origin Source doesn't matter it looks like a VIP it looks like a frontend URL to you let the load",
    "start": "1292640",
    "end": "1299520"
  },
  {
    "text": "balancer do the work for you and also again why because elb plays really well",
    "start": "1299520",
    "end": "1305200"
  },
  {
    "text": "with autoscaling natively handles it all so there's no need in from where we",
    "start": "1305200",
    "end": "1310520"
  },
  {
    "text": "stand at Amazon web services we would recommend to you and our customers outside of this room web caches be it",
    "start": "1310520",
    "end": "1317000"
  },
  {
    "text": "varnish or anything else look at using an EOP as your back end",
    "start": "1317000",
    "end": "1322919"
  },
  {
    "text": "just a few points about uh varnish itself the process is an HTTP demon that",
    "start": "1322919",
    "end": "1328720"
  },
  {
    "text": "runs on your system known as varnish D you'll see in a few slides that it",
    "start": "1328720",
    "end": "1333760"
  },
  {
    "text": "actually runs off a configuration file varnish has got a domain specific language that lives in this configuration",
    "start": "1333760",
    "end": "1339960"
  },
  {
    "text": "file the web content itself is stored in memory and this does create a more",
    "start": "1339960",
    "end": "1346039"
  },
  {
    "text": "advanced condition that you have to look at once you get get familiar with varnish about how long do I want things",
    "start": "1346039",
    "end": "1351600"
  },
  {
    "text": "to live in memory and how do I what if it went down and how do I repopulate that cash these are all topics that are",
    "start": "1351600",
    "end": "1358600"
  },
  {
    "text": "a little more advanced uh than here today but nonetheless I'll actually show you a few slides where we talk about",
    "start": "1358600",
    "end": "1365840"
  },
  {
    "text": "that the while the web content is stored in memory it",
    "start": "1365840",
    "end": "1371840"
  },
  {
    "text": "is paging to disk and one of the things that the varnish Community likes is that",
    "start": "1371840",
    "end": "1377080"
  },
  {
    "text": "it doesn't do the paging to dis it lets the operating system do that so the",
    "start": "1377080",
    "end": "1382720"
  },
  {
    "text": "value there and it's not necessarily Apparent at first glance is that if the",
    "start": "1382720",
    "end": "1388440"
  },
  {
    "text": "operating system is trying to page and a process running as a demon is trying to page there's a level of contention and",
    "start": "1388440",
    "end": "1395120"
  },
  {
    "text": "the goal here is to reduce CPU and memory contention so varnish made a strategic decision in their design to",
    "start": "1395120",
    "end": "1401880"
  },
  {
    "text": "actually allow the OS to page I apologize I went one back",
    "start": "1401880",
    "end": "1408799"
  },
  {
    "text": "this does reduce the contention risk client requests that come in to the",
    "start": "1408799",
    "end": "1416320"
  },
  {
    "text": "cashing layer are actually handled by what's known as worker threads and each",
    "start": "1416320",
    "end": "1422320"
  },
  {
    "text": "worker thread will handle a individual client request and you can configure the",
    "start": "1422320",
    "end": "1428159"
  },
  {
    "text": "number of worker threads that you have in your process and this becomes a more advanced tuning parameter for varnish",
    "start": "1428159",
    "end": "1433400"
  },
  {
    "text": "how many threads do I want running in a process that's independent of Amazon web services or any technology that is a",
    "start": "1433400",
    "end": "1439919"
  },
  {
    "text": "function of the operating system and general process architecture if a client request comes",
    "start": "1439919",
    "end": "1445760"
  },
  {
    "text": "in and all of the worker threads are filled you will go into an overflow queue you will want to look at the",
    "start": "1445760",
    "end": "1452000"
  },
  {
    "text": "statistical data coming out of varnish as to the utilization of your threads and how many you can handle concurrently",
    "start": "1452000",
    "end": "1458520"
  },
  {
    "text": "why is that important it's important because the whole goal of Varnish in the",
    "start": "1458520",
    "end": "1463640"
  },
  {
    "text": "end is really to give you fast delivery and we see it in content Delivery",
    "start": "1463640",
    "end": "1469279"
  },
  {
    "text": "Systems in front of systems like WordPress Drupal other CMS systems and so you're",
    "start": "1469279",
    "end": "1477600"
  },
  {
    "text": "going to see concurrency at scale so one thing you want to think about if you're looking to use varnish or a webcast in",
    "start": "1477600",
    "end": "1484880"
  },
  {
    "text": "general what's the concurrency Factor how many concurrent threads do I how many concurrent requests do I expect to",
    "start": "1484880",
    "end": "1491679"
  },
  {
    "text": "process and Service as we said earlier it can front",
    "start": "1491679",
    "end": "1498600"
  },
  {
    "text": "end the ec2 instances itself as a load balancer or it can front end the load",
    "start": "1498600",
    "end": "1504200"
  },
  {
    "text": "balancer itself the takeaway here should be flat out please use the load balancer autoscaling is a difficult event to",
    "start": "1504200",
    "end": "1510679"
  },
  {
    "text": "capture no need to burn KRON job Cycles on it so at a high level some features of",
    "start": "1510679",
    "end": "1519039"
  },
  {
    "text": "varnish that the community actually Prides itself on it is designed for Content heavy",
    "start": "1519039",
    "end": "1525159"
  },
  {
    "text": "websites these websites are also don't assume it should just be static one of the features of varnish is something",
    "start": "1525159",
    "end": "1531640"
  },
  {
    "text": "known as an edge side include or an ESI the ESI or Edge side include for",
    "start": "1531640",
    "end": "1538159"
  },
  {
    "text": "short is it's akin to saying I have a page that 95% of the content is static",
    "start": "1538159",
    "end": "1546520"
  },
  {
    "text": "5% is actually going to change for example if I pull up the amazon web services",
    "start": "1546520",
    "end": "1551799"
  },
  {
    "text": "console the dashboard is pretty static but two things change my username",
    "start": "1551799",
    "end": "1557200"
  },
  {
    "text": "actually that doesn't even change at all but the region it could change those are personalized elements and a lot of",
    "start": "1557200",
    "end": "1564360"
  },
  {
    "text": "caching systems and people who Implement cashes think there is a small part of personalization on this page therefore I",
    "start": "1564360",
    "end": "1570480"
  },
  {
    "text": "cannot cash any part of it yeah it's Dynamic the region you select is dynamic",
    "start": "1570480",
    "end": "1576080"
  },
  {
    "text": "based on the context you're in but Edge side includes in the web",
    "start": "1576080",
    "end": "1582240"
  },
  {
    "text": "cache actually allow for you to carve out and select which pieces you want to",
    "start": "1582240",
    "end": "1589039"
  },
  {
    "text": "cash and which pieces you want to send along to the origin for rendering so",
    "start": "1589039",
    "end": "1594720"
  },
  {
    "text": "imagine you actually are able to carve out a personalized area of a website",
    "start": "1594720",
    "end": "1600159"
  },
  {
    "text": "using some directives and scriptlets and configuration and say you're not going to cash this that part of Amazon web",
    "start": "1600159",
    "end": "1607120"
  },
  {
    "text": "services console that everybody knows the dashboard that just changed yesterday I think when we all looked at and said oh where's Cloud information",
    "start": "1607120",
    "end": "1613600"
  },
  {
    "text": "where's VPC all of that is static you can mark",
    "start": "1613600",
    "end": "1618720"
  },
  {
    "text": "that as static in the ESI uh as of varnish 3.0 gzip compression and decompression was",
    "start": "1618720",
    "end": "1624880"
  },
  {
    "text": "released this is a big feature prior to 3.0 you actually had to go to an external process system third party uh",
    "start": "1624880",
    "end": "1631440"
  },
  {
    "text": "3.0 made that irrelevant uh and it is now today featured for uh uh reducing the bandwidth why is that important by",
    "start": "1631440",
    "end": "1637760"
  },
  {
    "text": "the way because outbound data is the data you get charged for an AWS right",
    "start": "1637760",
    "end": "1645399"
  },
  {
    "text": "you don't get charged for inbound get charged for outbound so you're not only looking to cach your web content I'm",
    "start": "1645399",
    "end": "1652240"
  },
  {
    "text": "sorry your HTTP content you're looking to also reduce the bandwidth and the requirements for data on the",
    "start": "1652240",
    "end": "1658760"
  },
  {
    "text": "outbound uh it does like we said me uh utilize persistent storage by having a",
    "start": "1658760",
    "end": "1664559"
  },
  {
    "text": "disc in the back end you don't have to evict based on least recently used lru",
    "start": "1664559",
    "end": "1670240"
  },
  {
    "text": "so traditional caching systems will use lru algorithms to say I only have so",
    "start": "1670240",
    "end": "1675360"
  },
  {
    "text": "much size and memory to hold these objects you haven't been touched in a",
    "start": "1675360",
    "end": "1680960"
  },
  {
    "text": "long time you're out that's the lru pattern but by paging to dis and",
    "start": "1680960",
    "end": "1686760"
  },
  {
    "text": "becoming persisted storage and being able to be retrieved from Storage when it needs to get called back into memory",
    "start": "1686760",
    "end": "1692720"
  },
  {
    "text": "you don't lose your objects due to lru",
    "start": "1692720",
    "end": "1696880"
  },
  {
    "text": "eviction oh I actually would be a bit remiss if I didn't call out biggest",
    "start": "1698919",
    "end": "1705240"
  },
  {
    "text": "one it's HTTP only varnish is HTTP only there are some",
    "start": "1705240",
    "end": "1712399"
  },
  {
    "text": "caches that will handle FTP SMTP and other protocols this one is HTTP only and there's a reason they did this speed",
    "start": "1712399",
    "end": "1720399"
  },
  {
    "text": "varnish is very fast as a result of focusing and optimizing on just the HTP",
    "start": "1720399",
    "end": "1726559"
  },
  {
    "text": "protocol I know we all like to see configuration files up on our slides so I thought I would share something with",
    "start": "1727840",
    "end": "1734679"
  },
  {
    "text": "you varnish has a configuration language known as the VC",
    "start": "1734679",
    "end": "1739720"
  },
  {
    "text": "this is the varnish configuration language and it allows you to programmatically Define and handle each",
    "start": "1739720",
    "end": "1746159"
  },
  {
    "text": "request and Implement document caching policies for an incoming HTP request so",
    "start": "1746159",
    "end": "1752760"
  },
  {
    "text": "for example this is actually an overridden",
    "start": "1752760",
    "end": "1757799"
  },
  {
    "text": "method in vcl that says let's Purge but",
    "start": "1757799",
    "end": "1763440"
  },
  {
    "text": "says oh wait I'm only going to accept Purge requests from the local host or",
    "start": "1763440",
    "end": "1768960"
  },
  {
    "text": "anybody in the 1012 sl24 Network and in varnish in the vcl in",
    "start": "1768960",
    "end": "1777320"
  },
  {
    "text": "particular the method known as vcl receive RCV you see it reads pretty much",
    "start": "1777320",
    "end": "1784600"
  },
  {
    "text": "like I'd say you could say python you could say pearl if the request method equals Purge",
    "start": "1784600",
    "end": "1791279"
  },
  {
    "text": "and if the client IP is not equal to that of the ACL Purge",
    "start": "1791279",
    "end": "1796760"
  },
  {
    "text": "object meaning meaning you weren't allowed to purge then let's return a 405 erir and say you're not allowed",
    "start": "1796760",
    "end": "1802440"
  },
  {
    "text": "otherwise go ahead and let the purge call continue the point is with vcl you you write this configuration in a way",
    "start": "1802440",
    "end": "1809240"
  },
  {
    "text": "that overrides the methods that vcl calls vcl is our Varnish in particular",
    "start": "1809240",
    "end": "1814799"
  },
  {
    "text": "is a hook driven system these are hooks that you're overwriting this is how you control and configure your webcash you",
    "start": "1814799",
    "end": "1821720"
  },
  {
    "text": "tell it what to do all right and in doing so in taking this language it is",
    "start": "1821720",
    "end": "1827240"
  },
  {
    "text": "translated to for you it is compiled down to a shared object and is loaded directly into the web accelerator",
    "start": "1827240",
    "end": "1832960"
  },
  {
    "text": "technically it stands on its own next to it on the side but this has a important value and that",
    "start": "1832960",
    "end": "1839760"
  },
  {
    "text": "is you don't need to restart the accelerator it's configuration",
    "start": "1839760",
    "end": "1844840"
  },
  {
    "text": "management injection if you will injection of configuration management or rather injection of",
    "start": "1844840",
    "end": "1850640"
  },
  {
    "text": "configuration so how do we configure varnish varnish uh 681 on the port if",
    "start": "1850640",
    "end": "1857120"
  },
  {
    "text": "there's an administrator Port as well there are uh command line management tools that allow you to modify the",
    "start": "1857120",
    "end": "1862360"
  },
  {
    "text": "parameters of varnish again compiling loading and activating your handlers",
    "start": "1862360",
    "end": "1869360"
  },
  {
    "text": "without restarting the accelerator this is important right restarting accelerator would mean an outage and",
    "start": "1869360",
    "end": "1875320"
  },
  {
    "text": "that mean I'd have to have more varnish instances or autoscaling policies to take over where these guys went down so",
    "start": "1875320",
    "end": "1881120"
  },
  {
    "text": "restarting varnish would be a bad thing in terms of performance and of course you can",
    "start": "1881120",
    "end": "1886799"
  },
  {
    "text": "control things like the number of Min number of minmax worker threads you can analyze the throughput concurrency",
    "start": "1886799",
    "end": "1893639"
  },
  {
    "text": "timeouts are particularly important they're out of scope actually for this session but when you get familiar with",
    "start": "1893639",
    "end": "1898880"
  },
  {
    "text": "varnish and you start to dive in you start to really focus on time to live values you start to focus on where's my",
    "start": "1898880",
    "end": "1906080"
  },
  {
    "text": "expiration where's my cash control how do I evict when do I actually want to invalidate my",
    "start": "1906080",
    "end": "1911840"
  },
  {
    "text": "cash more advanced topics but configuring varnish will allow you to do",
    "start": "1911840",
    "end": "1917000"
  },
  {
    "text": "just that so why varnish again earlier we said that there",
    "start": "1917000",
    "end": "1923799"
  },
  {
    "text": "is support for well-known CMS and e-commerce Stacks Magento and WordPress",
    "start": "1923799",
    "end": "1930240"
  },
  {
    "text": "are two that come to mind in fact we have another session with my colleague Sean Pierce out of the UK where he will",
    "start": "1930240",
    "end": "1936240"
  },
  {
    "text": "focus on Magento and varnish I believe that is tomorrow at 9",
    "start": "1936240",
    "end": "1941919"
  },
  {
    "text": "a.m. by the way I believe pages on the site that are Dynamic but don't change",
    "start": "1941919",
    "end": "1946960"
  },
  {
    "text": "often search results actually this is kind of Falls if you talk to certain individuals they feel that search",
    "start": "1946960",
    "end": "1952639"
  },
  {
    "text": "results are similar to e-commerce Stacks right if you go to amazon.com and you search for a book it will probably always return the same book based on the",
    "start": "1952639",
    "end": "1958880"
  },
  {
    "text": "same ISBN odds are the ISBN didn't change so it's the same book so search",
    "start": "1958880",
    "end": "1964200"
  },
  {
    "text": "results can be equated to similarly Commerce tools and they don't change",
    "start": "1964200",
    "end": "1969399"
  },
  {
    "text": "much so why not why would we do the search over and over again when we can just draw it back from the cache again a",
    "start": "1969399",
    "end": "1976080"
  },
  {
    "text": "sleeping instance is a good instance because it means you can turn it down in size and save yourself money c3s are",
    "start": "1976080",
    "end": "1983440"
  },
  {
    "text": "more expensive than M3s Built For Speed it has one job",
    "start": "1983440",
    "end": "1992440"
  },
  {
    "text": "fast so some tips and tricks for varnish these do get you into the more",
    "start": "1993679",
    "end": "2000799"
  },
  {
    "text": "advanced areas but I felt like let's open this up a bit and dive a little deeper even if it's a 204 session",
    "start": "2000799",
    "end": "2008399"
  },
  {
    "text": "the concept of the hit ratio for a cash is if I call for an object is it in the",
    "start": "2008399",
    "end": "2015279"
  },
  {
    "text": "cash and what's the hit ratio 95% successful meaning 5% of the time it",
    "start": "2015279",
    "end": "2021039"
  },
  {
    "text": "wasn't in the cash I had actually retriev it from the origin the higher the hit ratio the better your cash is",
    "start": "2021039",
    "end": "2028039"
  },
  {
    "text": "doing 100% means you're absolutely not touching the servers at all and who knows maybe you can even",
    "start": "2028039",
    "end": "2035480"
  },
  {
    "text": "reduce the number of instances behind it now there's a trade-off when you increase the hit rate",
    "start": "2035480",
    "end": "2041600"
  },
  {
    "text": "when your in when your hit ratio increases by keeping time to lives high",
    "start": "2041600",
    "end": "2047720"
  },
  {
    "text": "now let's the time to livees let's just stop there for a minute if you raise the time to live it means it's going to",
    "start": "2047720",
    "end": "2053398"
  },
  {
    "text": "exist in the cash longer so if it's in the cash longer odds are you going to get more",
    "start": "2053399",
    "end": "2059878"
  },
  {
    "text": "hits but the challenge is on the flip side a longer TTL means you may be at",
    "start": "2059879",
    "end": "2065560"
  },
  {
    "text": "risk for going stale behind you oh I'm getting awesome hit ratios oh",
    "start": "2065560",
    "end": "2070800"
  },
  {
    "text": "well that data was five hours old it's now updated so these are things that you",
    "start": "2070800",
    "end": "2075919"
  },
  {
    "text": "need to look at as you dive deeper into varnish TTL is probably one of the",
    "start": "2075919",
    "end": "2084679"
  },
  {
    "text": "most advanced areas of configuring it and how do you stage that TTL against",
    "start": "2084679",
    "end": "2090040"
  },
  {
    "text": "all the other elements you're caching okay um there's this this notion I have a",
    "start": "2090040",
    "end": "2096878"
  },
  {
    "text": "customer who calls it uh nuking that's his that's his colloquia I guess is the word uh we call it cash",
    "start": "2096879",
    "end": "2104720"
  },
  {
    "text": "eviction or invalidation really um best practice don't Purge your cash",
    "start": "2104720",
    "end": "2110400"
  },
  {
    "text": "and varnish don't call for Purge even though you saw my example that was an example for the vcl really don't Purge",
    "start": "2110400",
    "end": "2117560"
  },
  {
    "text": "your cash and varnish let your Origins do it via HTTP control headers",
    "start": "2117560",
    "end": "2124640"
  },
  {
    "text": "so when you deal with caches and HT in particular you have to refresh your memory if you're not current on it or if",
    "start": "2124640",
    "end": "2131240"
  },
  {
    "text": "you're like me and you tend to forget because you get older every year you got to think that there's no cash option for",
    "start": "2131240",
    "end": "2137640"
  },
  {
    "text": "HTTP there's an expires for HTTP HTTP as a protocol definition has a number of",
    "start": "2137640",
    "end": "2143119"
  },
  {
    "text": "parameters that control the life the lifespan or TTL or the expiration date of an object uh cookies also have an",
    "start": "2143119",
    "end": "2150160"
  },
  {
    "text": "impact on varnish too by the way so take a look at that so if the origins",
    "start": "2150160",
    "end": "2156040"
  },
  {
    "text": "control the life cycle of how long that data lives you can push it all Downstream and I have a diagram that",
    "start": "2156040",
    "end": "2162160"
  },
  {
    "text": "shows just that so don't Purge your cash and varnish it's a very expensive operation one thing to note about varnish too I didn't talk about",
    "start": "2162160",
    "end": "2169200"
  },
  {
    "text": "this caches can go very large these are inmemory processes we've seen caches get",
    "start": "2169200",
    "end": "2175079"
  },
  {
    "text": "up above one gig or more right I think the default configuration for varnish maybe 256 Megs but it's not uncommon to",
    "start": "2175079",
    "end": "2183119"
  },
  {
    "text": "see caches go two three four gigs out in size that's the job of a cash right large memory um and so when you purge a",
    "start": "2183119",
    "end": "2191640"
  },
  {
    "text": "cash in varnish you got to think how much am I purging or worse yet how long is it",
    "start": "2191640",
    "end": "2198920"
  },
  {
    "text": "going to take to load back in I have one customer who on a more",
    "start": "2198920",
    "end": "2204359"
  },
  {
    "text": "advanced area they do purges but they don't necessarily always know when",
    "start": "2204359",
    "end": "2209520"
  },
  {
    "text": "they're purging so it's a non-deterministic state they say oh wow we uh we might be",
    "start": "2209520",
    "end": "2216760"
  },
  {
    "text": "stale do we have the current data set that's called non-deterministic deterministic",
    "start": "2216760",
    "end": "2222359"
  },
  {
    "text": "in cash world is I have this and I Know It EXA it is exactly the updated copy of",
    "start": "2222359",
    "end": "2228280"
  },
  {
    "text": "the data in the back end that is a deterministic state for cache systems non-deterministic",
    "start": "2228280",
    "end": "2234119"
  },
  {
    "text": "says I think I might have the right one I don't know and so when you get into this area it's very dangerous because",
    "start": "2234119",
    "end": "2241359"
  },
  {
    "text": "dangerous in terms of you could deliver something that's out of out out of date right so it's a bad customer experience",
    "start": "2241359",
    "end": "2246640"
  },
  {
    "text": "that would be bad for us at Amazon right what if we told you on the side we have 22 instances of this and we",
    "start": "2246640",
    "end": "2253760"
  },
  {
    "text": "were cashing that right but it wasn't up to date and the reality was we didn't have any left so bad customer experience",
    "start": "2253760",
    "end": "2260119"
  },
  {
    "text": "um so when you have to resolve a non-deterministic varnish cache it usually ends up in my",
    "start": "2260119",
    "end": "2266680"
  },
  {
    "text": "customer's case of you take it down and if you're at two or four gigs in size that's not necessar fast to load up",
    "start": "2266680",
    "end": "2272520"
  },
  {
    "text": "right so keep that in mind um probably the biggest one uh that my colleagues in",
    "start": "2272520",
    "end": "2279599"
  },
  {
    "text": "particular will really drive home with our customers is make varnish a part of",
    "start": "2279599",
    "end": "2284839"
  },
  {
    "text": "your design don't bolt it on after the fact this will increase your efficiency and",
    "start": "2284839",
    "end": "2291920"
  },
  {
    "text": "your use of varnish there's this afterthought of I I called it the go",
    "start": "2291920",
    "end": "2297040"
  },
  {
    "text": "fast switch and I do that because I've worked in companies in the past where the idea was we built this we developed",
    "start": "2297040",
    "end": "2304280"
  },
  {
    "text": "it and then oops it didn't perform somebody to go hit the go fast switch right the Panacea of it all the the",
    "start": "2304280",
    "end": "2310760"
  },
  {
    "text": "solution to it if you design for a caching system up front you will get better utilization of this this is just",
    "start": "2310760",
    "end": "2317280"
  },
  {
    "text": "like security they go hand inand they shop at the same aisle in the grocery store right increase your cash effic",
    "start": "2317280",
    "end": "2323000"
  },
  {
    "text": "efficiency by designing for it don't use an endpoint into your Apache servers or",
    "start": "2323000",
    "end": "2328119"
  },
  {
    "text": "your engine X servers and think I'm just going to put a cach in front of it and coming back to",
    "start": "2328119",
    "end": "2334240"
  },
  {
    "text": "ESI I mentioned this earlier but I'm going to drive it home again a different way way Edge side includes are your",
    "start": "2334240",
    "end": "2340800"
  },
  {
    "text": "friend and on a more advanced area focus on how many of your of those you're",
    "start": "2340800",
    "end": "2346400"
  },
  {
    "text": "using if you have configuration esis that say I'm going to pull out 42 different pieces of this page because",
    "start": "2346400",
    "end": "2352920"
  },
  {
    "text": "they're personalized as you start to study varnish on the more advanced level you'll realize that's 42 calls back to",
    "start": "2352920",
    "end": "2360200"
  },
  {
    "text": "the back end right well maybe a few was",
    "start": "2360200",
    "end": "2365319"
  },
  {
    "text": "good but if I'm making 42 calls to the back end I probably really have a very Dynamic page so study how much of your",
    "start": "2365319",
    "end": "2373800"
  },
  {
    "text": "content is truly Dynamic how much you really can cash versus how much really",
    "start": "2373800",
    "end": "2379359"
  },
  {
    "text": "needs to go to the back end you might actually hurt yourself by saying I'm going to try to cash this and use esis",
    "start": "2379359",
    "end": "2385240"
  },
  {
    "text": "but at the same time don't throw the baby out with the bath water just because there's personalized",
    "start": "2385240",
    "end": "2391720"
  },
  {
    "text": "content or in varnish terms there's a cookie in your return response",
    "start": "2391720",
    "end": "2397520"
  },
  {
    "text": "which IND indicates personalized results okay session based results personalized results don't throw it out use esis use",
    "start": "2397520",
    "end": "2405920"
  },
  {
    "text": "them well and study how many times you're going to go back and forth to the back end so uh something that is a a",
    "start": "2405920",
    "end": "2411839"
  },
  {
    "text": "Nuance um but certainly uh as my colleagues and customers will tell you uh your best",
    "start": "2411839",
    "end": "2418079"
  },
  {
    "text": "friend my favorite slide how do I start it's actually I'm a big cloud",
    "start": "2418079",
    "end": "2425880"
  },
  {
    "text": "information fan but this is actually my favorite slide because it's two lines Cloud information ends up being about 12 lines uh AWS ec2 run instances spin",
    "start": "2425880",
    "end": "2432720"
  },
  {
    "text": "yourself up an ec2 instance if you're on the Amazon Linux",
    "start": "2432720",
    "end": "2437960"
  },
  {
    "text": "platform you'll do a pseudo yum install varnish if you read the Ludo you'll do",
    "start": "2437960",
    "end": "2445640"
  },
  {
    "text": "apartment get that's the debban package format for a bun two so very straightforward get it from yum get it",
    "start": "2445640",
    "end": "2451359"
  },
  {
    "text": "from your appropriate uh package installer install varnish",
    "start": "2451359",
    "end": "2458000"
  },
  {
    "text": "so as we wrap up with just under four minutes to go putting it all together we started",
    "start": "2459240",
    "end": "2466880"
  },
  {
    "text": "out by saying the web app and its performance are directly",
    "start": "2466880",
    "end": "2473000"
  },
  {
    "text": "impacted by three areas that you can control in your",
    "start": "2473000",
    "end": "2479040"
  },
  {
    "text": "design and I said wow we've got MCD and we've got reddis we've got this thing",
    "start": "2479599",
    "end": "2485280"
  },
  {
    "text": "called cloudfront from Amazon web service we've got web cach where did it where",
    "start": "2485280",
    "end": "2491119"
  },
  {
    "text": "does it all come together and if you remember earlier I said which go fast switch do I turn on the reality is you",
    "start": "2491119",
    "end": "2498960"
  },
  {
    "text": "can have them all three on as a best practice taking a review of it why",
    "start": "2498960",
    "end": "2506040"
  },
  {
    "text": "wouldn't we put an in-memory object cache like me mcash D or redus between",
    "start": "2506040",
    "end": "2511720"
  },
  {
    "text": "the Middle tier and the database why wouldn't we use a web cache",
    "start": "2511720",
    "end": "2517880"
  },
  {
    "text": "in front of a load balancer and treat this whole entity as the",
    "start": "2517880",
    "end": "2523720"
  },
  {
    "text": "application origin in fact if you notice the in memory object cache of mcash to",
    "start": "2523720",
    "end": "2529800"
  },
  {
    "text": "your Reddit in this example are actually part of the origin there's a cache within the origin and now I've got a",
    "start": "2529800",
    "end": "2535520"
  },
  {
    "text": "webcache and then finally you can roll this all up to your content distribution Network right",
    "start": "2535520",
    "end": "2542400"
  },
  {
    "text": "cloudfront again the idea is make no mistake cloudfront has to to go back to",
    "start": "2542400",
    "end": "2548000"
  },
  {
    "text": "An Origin it has to fetch results if the time to live is expired",
    "start": "2548000",
    "end": "2553480"
  },
  {
    "text": "or if there's a a mised hit it will go back to that origin uh and we're talking about mostly Dynamic content here we're",
    "start": "2553480",
    "end": "2559440"
  },
  {
    "text": "not talking about S3 right um S3 applies the same way but focusing on cloud uh on",
    "start": "2559440",
    "end": "2565760"
  },
  {
    "text": "cloud front so you end up in the more advanced areas of varnish and this is what I want",
    "start": "2565760",
    "end": "2571960"
  },
  {
    "text": "to leave you with is yes you can put it all together by using the three types of",
    "start": "2571960",
    "end": "2578400"
  },
  {
    "text": "caches that we've talked about and in the end you get a very local database services",
    "start": "2578400",
    "end": "2585160"
  },
  {
    "text": "Cache you get a HTTP accelerator or web cache like",
    "start": "2585160",
    "end": "2591480"
  },
  {
    "text": "varnish and you get global distribution across in Amazon web services 52",
    "start": "2591480",
    "end": "2596559"
  },
  {
    "text": "locations worldwide and the goal in the end is to not only help you give a faster response",
    "start": "2596559",
    "end": "2603800"
  },
  {
    "text": "to your customers but also to allow you to reduce the instance size and the",
    "start": "2603800",
    "end": "2610079"
  },
  {
    "text": "number of instances you have running and this translates to a lower monthly cost in addition to better customer",
    "start": "2610079",
    "end": "2617880"
  },
  {
    "text": "experience so with that in mind that will conclude our session for 204 for",
    "start": "2617880",
    "end": "2623839"
  },
  {
    "text": "web 204 please give your feedback on this session and if you could complete the session evaluations you can earn",
    "start": "2623839",
    "end": "2631200"
  },
  {
    "text": "valuable reinvent swag thanks guys",
    "start": "2631200",
    "end": "2636880"
  }
]