[
  {
    "text": "In this video, you’ll see how to assess app resilience \nwith AWS Resilience Hub and AWS CodePipeline.",
    "start": "0",
    "end": "7889"
  },
  {
    "text": "With these solutions, you can automate \napplication resiliency assessments from",
    "start": "8711",
    "end": "12815"
  },
  {
    "text": "your pipelines that will help catch resiliency \nweaknesses as soon as a change is deployed.",
    "start": "12815",
    "end": "18067"
  },
  {
    "text": "We’ll begin by navigating to the AWS \nCodePipeline console, where a simple",
    "start": "20183",
    "end": "24574"
  },
  {
    "text": "pipeline for an existing AWS \napplication has already been created.",
    "start": "24574",
    "end": "28727"
  },
  {
    "text": "This pipeline includes a source stage \nwith a CodeCommit provider, and a",
    "start": "29549",
    "end": "33185"
  },
  {
    "text": "deploy stage that will deploy an \nAWS CloudFormation template.",
    "start": "33185",
    "end": "37570"
  },
  {
    "text": "Whenever we commit changes to our \nrepository, we want to assess if the",
    "start": "38351",
    "end": "42402"
  },
  {
    "text": "changes impact the resiliency of our application.",
    "start": "42402",
    "end": "45616"
  },
  {
    "text": "To do so, let’s first navigate to AWS Resilience Hub.",
    "start": "46007",
    "end": "50860"
  },
  {
    "text": "We’ll add our application to assess its resiliency.",
    "start": "51601",
    "end": "54267"
  },
  {
    "text": "Let’s provide our application’s name.",
    "start": "54940",
    "end": "56907"
  },
  {
    "text": "Next, let’s specify how our application is managed.",
    "start": "58942",
    "end": "62205"
  },
  {
    "text": "We’ll add the CloudFormation stack for our app.",
    "start": "62502",
    "end": "64806"
  },
  {
    "text": "By default, a scheduled assessment will run daily.",
    "start": "72951",
    "end": "76075"
  },
  {
    "text": "We’ll deactivate it since we want to run an assessment \neach time we commit changes to our repository.",
    "start": "76358",
    "end": "81222"
  },
  {
    "text": "Resilience Hub has identified the \nsupported resources from our application.",
    "start": "83580",
    "end": "87742"
  },
  {
    "text": "Let’s continue.",
    "start": "88025",
    "end": "89130"
  },
  {
    "text": "Next, let’s create a resiliency policy to define the \nrecovery objectives that Resilience Hub will evaluate.",
    "start": "90639",
    "end": "97002"
  },
  {
    "text": "We’ll provide a name and choose \none of the suggested policies.",
    "start": "98417",
    "end": "101518"
  },
  {
    "text": "Let’s create the policy.",
    "start": "107865",
    "end": "109342"
  },
  {
    "text": "We’ll choose the policy we \njust created and continue.",
    "start": "111283",
    "end": "114151"
  },
  {
    "text": "Now let’s review the details \nand publish the application.",
    "start": "117722",
    "end": "120538"
  },
  {
    "text": "Our application has been \npublished in AWS Resilience Hub.",
    "start": "123421",
    "end": "126786"
  },
  {
    "text": "Next, we’ll use AWS Step Functions to orchestrate AWS \nSDK calls to trigger an assessment in our pipeline.",
    "start": "127151",
    "end": "134155"
  },
  {
    "text": "We’ll create a state machine, which \nis a serverless orchestration workflow.",
    "start": "135085",
    "end": "138765"
  },
  {
    "text": "Let’s design our workflow visually.",
    "start": "139628",
    "end": "141512"
  },
  {
    "text": "First, let’s add an action to import the \nresources for the draft version of our application.",
    "start": "142468",
    "end": "147351"
  },
  {
    "text": "We’ll update the configuration \nto use our API parameters.",
    "start": "149668",
    "end": "152885"
  },
  {
    "text": "Next, let’s add a Wait state to \nwait for the import to complete.",
    "start": "156604",
    "end": "159930"
  },
  {
    "text": "Next, let’s add an action to \ndescribe the resource import status.",
    "start": "162000",
    "end": "165754"
  },
  {
    "text": "Again, we’ll update the API parameters.",
    "start": "170591",
    "end": "173220"
  },
  {
    "text": "Next, let’s add conditional logic that \nwill determine what state the workflow",
    "start": "175969",
    "end": "179995"
  },
  {
    "text": "should transition to based on the import status.",
    "start": "179995",
    "end": "183000"
  },
  {
    "text": "We’ll edit Rule #1 and add a condition to\n evaluate whether the import was successful.",
    "start": "183903",
    "end": "188359"
  },
  {
    "text": "Let’s configure the default rule to return to the previous \nWait state if the condition for Rule #1 is not met.",
    "start": "200633",
    "end": "206310"
  },
  {
    "text": "Next, we’ll add an action to publish the \ndraft version of the app once the import",
    "start": "210905",
    "end": "214972"
  },
  {
    "text": "is successful, so Resilience Hub \ncan run the assessment on it.",
    "start": "214972",
    "end": "218953"
  },
  {
    "text": "Once the app version is published, \nResilience Hub will start the app assessment.",
    "start": "223682",
    "end": "227855"
  },
  {
    "text": "Let’s add another Wait state.",
    "start": "235579",
    "end": "237045"
  },
  {
    "text": "Next, we’ll add an action to describe \nthe results of the app assessment.",
    "start": "240777",
    "end": "244866"
  },
  {
    "text": "Let’s add another Choice state to determine \nhow to proceed based on the assessment results.",
    "start": "255177",
    "end": "259915"
  },
  {
    "text": "We’ll add a Success state for when the assessment \ncompletes successfully and meets our policies.",
    "start": "260832",
    "end": "265671"
  },
  {
    "text": "Let’s add the Choice Rules and conditions.",
    "start": "266533",
    "end": "268754"
  },
  {
    "text": "We’ll use an OR operator to evaluate whether \nthe assessment is in progress or pending.",
    "start": "274938",
    "end": "280457"
  },
  {
    "text": "If either of these conditions are true, the \nworkflow will wait for the assessment to complete.",
    "start": "296693",
    "end": "301505"
  },
  {
    "text": "Next, let’s add a new Choice Rule for when \nthe assessment completes successfully.",
    "start": "305198",
    "end": "309678"
  },
  {
    "text": "Two conditions must be met, \nso we’ll use the AND operator.",
    "start": "312360",
    "end": "315584"
  },
  {
    "text": "The first condition will evaluate whether \nthe assessment completed successfully.",
    "start": "317470",
    "end": "321598"
  },
  {
    "text": "The second condition will evaluate if \nthe app meets our policy requirements.",
    "start": "328160",
    "end": "331994"
  },
  {
    "text": "We’ll configure the state machine to transition to \nthe Success state when both conditions are met.",
    "start": "340456",
    "end": "345074"
  },
  {
    "text": "Next, let’s add a Fail state for the choice.",
    "start": "349332",
    "end": "351854"
  },
  {
    "text": "We’ll also configure the choice we \nset up earlier to use this Fail state.",
    "start": "352743",
    "end": "356398"
  },
  {
    "text": "We’ll add a new rule in case the import \nfails, and direct the workflow to the Fail state.",
    "start": "357000",
    "end": "361670"
  },
  {
    "text": "The state machine is ready.",
    "start": "379947",
    "end": "381319"
  },
  {
    "text": "Next, let’s review the generated code.",
    "start": "381467",
    "end": "384000"
  },
  {
    "text": "We’ll name our state machine.",
    "start": "387449",
    "end": "388942"
  },
  {
    "text": "Under Permissions, we’ll choose an existing AWS\n Identity and Access Management (IAM) role.",
    "start": "391543",
    "end": "397923"
  },
  {
    "text": "Let’s create the state machine.",
    "start": "401049",
    "end": "402809"
  },
  {
    "text": "Now let’s return to the CodePipeline \nconsole and edit the pipeline.",
    "start": "403725",
    "end": "407215"
  },
  {
    "text": "We’ll add a stage to run the resilience assessment.",
    "start": "412537",
    "end": "415065"
  },
  {
    "text": "Next, we’ll add an action group and \nname it RunResilienceAssessment.",
    "start": "422391",
    "end": "426285"
  },
  {
    "text": "For the action provider, we'll \nselect AWS Step Functions.",
    "start": "428940",
    "end": "432339"
  },
  {
    "text": "Next, we’ll select the state machine Amazon \nResource Name (ARN) and execution name prefix.",
    "start": "435546",
    "end": "441988"
  },
  {
    "text": "We’ll use the literal input type and specify the \nJSON to provide the base for the SDK calls.",
    "start": "445344",
    "end": "451235"
  },
  {
    "text": "We'll define it as an output of \nthe CloudFormation template,",
    "start": "451518",
    "end": "454884"
  },
  {
    "text": "and pass it into the output artifacts \nportion of the deploy stage.",
    "start": "454884",
    "end": "458791"
  },
  {
    "text": "Let’s return to Resilience Hub to copy \nthe ARN for the application we added earlier.",
    "start": "459600",
    "end": "464230"
  },
  {
    "text": "Let’s paste it in the input and continue.",
    "start": "469929",
    "end": "472034"
  },
  {
    "text": "Now let’s save the pipeline \nand release the change.",
    "start": "476958",
    "end": "479472"
  },
  {
    "text": "The pipeline executed and the resilience\nassessment completed successfully.",
    "start": "488674",
    "end": "492582"
  },
  {
    "text": "Now let's open the CodeCommit \nrepository for our application.",
    "start": "492865",
    "end": "496703"
  },
  {
    "text": "We’ll add an updated template.yaml file\n that will weaken the app’s resilience.",
    "start": "499156",
    "end": "503476"
  },
  {
    "text": "Let’s return to the pipeline.",
    "start": "518378",
    "end": "519857"
  },
  {
    "text": "The pipeline has been triggered.",
    "start": "525382",
    "end": "526877"
  },
  {
    "text": "The pipeline has finished executing \nand the resilience assessment failed.",
    "start": "528373",
    "end": "532148"
  },
  {
    "text": "Let’s view the assessment in Step \nFunctions to get more details.",
    "start": "532984",
    "end": "536106"
  },
  {
    "text": "We can see the Fail state executed.",
    "start": "537000",
    "end": "538873"
  },
  {
    "text": "Let’s view the workflow graph to \ninvestigate where the failure occurred.",
    "start": "539816",
    "end": "543188"
  },
  {
    "text": "The failure happened at Choice (1) because \nthe compliance status is PolicyBreached.",
    "start": "544145",
    "end": "548674"
  },
  {
    "text": "Now let’s return to AWS Resilience Hub to view the \nmost recent resiliency assessment for our application.",
    "start": "551046",
    "end": "556579"
  },
  {
    "text": "We’ll review the resiliency recommendations.",
    "start": "565448",
    "end": "567692"
  },
  {
    "text": "The ComputeAppComponent has a \npolicy compliance status of Breached",
    "start": "570656",
    "end": "574768"
  },
  {
    "text": "because it’s an Auto Scaling group \nwith only one availability zone.",
    "start": "574768",
    "end": "578312"
  },
  {
    "text": "You've just seen how to assess app resilience \nwith AWS Resilience Hub and AWS CodePipeline.",
    "start": "580806",
    "end": "586707"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "587812",
    "end": "591507"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "591857",
    "end": "594605"
  }
]