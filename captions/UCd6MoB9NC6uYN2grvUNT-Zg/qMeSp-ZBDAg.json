[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "hello welcome back to our coverage from",
    "start": "30",
    "end": "2100"
  },
  {
    "text": "AWS reinvent 2018 we are live with you",
    "start": "2100",
    "end": "5640"
  },
  {
    "text": "from the sands Expo here in Las Vegas",
    "start": "5640",
    "end": "7290"
  },
  {
    "text": "I'm joined by Randall hunt at the flower",
    "start": "7290",
    "end": "9750"
  },
  {
    "text": "into the desk",
    "start": "9750",
    "end": "10349"
  },
  {
    "text": "my name is ian from the AWS evangelism",
    "start": "10349",
    "end": "12300"
  },
  {
    "text": "team and i have two very special guests",
    "start": "12300",
    "end": "14040"
  },
  {
    "text": "with me as well who I'd like to invite",
    "start": "14040",
    "end": "15690"
  },
  {
    "text": "to introduce themselves first of all I'm",
    "start": "15690",
    "end": "24990"
  },
  {
    "text": "Tony potos√≠ and I work on dynamodb",
    "start": "24990",
    "end": "26930"
  },
  {
    "text": "awesome and we're here in this next",
    "start": "26930",
    "end": "29010"
  },
  {
    "text": "segment to introduce a new feature for",
    "start": "29010",
    "end": "31189"
  },
  {
    "text": "dynamodb before we do that I think we",
    "start": "31189",
    "end": "34530"
  },
  {
    "text": "should probably start by explaining what",
    "start": "34530",
    "end": "36000"
  },
  {
    "text": "DynamoDB is saw burner can you talk a",
    "start": "36000",
    "end": "37829"
  },
  {
    "text": "little bit more about what the service",
    "start": "37829",
    "end": "39120"
  },
  {
    "text": "is and what kind of problems dynamodb",
    "start": "39120",
    "end": "41280"
  },
  {
    "text": "solves for our customers today well Dan",
    "start": "41280",
    "end": "43590"
  },
  {
    "start": "43000",
    "end": "355000"
  },
  {
    "text": "Willoughby is a database built for",
    "start": "43590",
    "end": "45870"
  },
  {
    "text": "internet scale applications now where",
    "start": "45870",
    "end": "48149"
  },
  {
    "text": "you really require guaranteed or",
    "start": "48149",
    "end": "52050"
  },
  {
    "text": "rock-solid performance regardless of",
    "start": "52050",
    "end": "55559"
  },
  {
    "text": "what kind of load you put on the",
    "start": "55559",
    "end": "56610"
  },
  {
    "text": "database highly reliable scalable secure",
    "start": "56610",
    "end": "59670"
  },
  {
    "text": "if it's focused on the non non",
    "start": "59670",
    "end": "62100"
  },
  {
    "text": "relational model and there's many many",
    "start": "62100",
    "end": "64920"
  },
  {
    "text": "sides to it I think that's a key value",
    "start": "64920",
    "end": "66450"
  },
  {
    "text": "is loz document based all of those are",
    "start": "66450",
    "end": "68850"
  },
  {
    "text": "not all supported by by DynamoDB and is",
    "start": "68850",
    "end": "71760"
  },
  {
    "text": "used by most of our customers for their",
    "start": "71760",
    "end": "73799"
  },
  {
    "text": "most demanding applications then take",
    "start": "73799",
    "end": "76619"
  },
  {
    "text": "something for example like a company",
    "start": "76619",
    "end": "78390"
  },
  {
    "text": "like supercell you know when when they",
    "start": "78390",
    "end": "81090"
  },
  {
    "text": "launch a new game on day one immediately",
    "start": "81090",
    "end": "83970"
  },
  {
    "text": "millions of customers will be will be",
    "start": "83970",
    "end": "86790"
  },
  {
    "text": "using their applications and as such",
    "start": "86790",
    "end": "88200"
  },
  {
    "text": "that database needs to scale to",
    "start": "88200",
    "end": "90049"
  },
  {
    "text": "significant load and I think DynamoDB",
    "start": "90049",
    "end": "92520"
  },
  {
    "text": "has demonstrated over the years that it",
    "start": "92520",
    "end": "94650"
  },
  {
    "text": "can really give rock-solid consistent",
    "start": "94650",
    "end": "97259"
  },
  {
    "text": "performance I think one of the one of",
    "start": "97259",
    "end": "101460"
  },
  {
    "text": "the things that we really tried to do",
    "start": "101460",
    "end": "103079"
  },
  {
    "text": "from day one with DynamoDB is is take",
    "start": "103079",
    "end": "106619"
  },
  {
    "text": "away much of the management hassle that",
    "start": "106619",
    "end": "109140"
  },
  {
    "text": "you normally have with database yeah if",
    "start": "109140",
    "end": "112320"
  },
  {
    "text": "you look at how the homilies databases",
    "start": "112320",
    "end": "113970"
  },
  {
    "text": "are Meletus relational non-relational",
    "start": "113970",
    "end": "115890"
  },
  {
    "text": "you have the manager buffer pool",
    "start": "115890",
    "end": "117270"
  },
  {
    "text": "settlement",
    "start": "117270",
    "end": "118140"
  },
  {
    "text": "since dreams all these kind of things",
    "start": "118140",
    "end": "119940"
  },
  {
    "text": "just to get consistent performance and",
    "start": "119940",
    "end": "122520"
  },
  {
    "text": "if you database and when we design",
    "start": "122520",
    "end": "124680"
  },
  {
    "text": "DynamoDB we looked at that a fault why",
    "start": "124680",
    "end": "126840"
  },
  {
    "text": "do we can give them just an interface",
    "start": "126840",
    "end": "128459"
  },
  {
    "text": "that says and this is the consistent",
    "start": "128459",
    "end": "130440"
  },
  {
    "text": "performance I want and let AWS figure",
    "start": "130440",
    "end": "133260"
  },
  {
    "text": "out how to achieve that perfect dynamic",
    "start": "133260",
    "end": "135780"
  },
  {
    "text": "DBS we will have the greatest success",
    "start": "135780",
    "end": "137520"
  },
  {
    "text": "stories of AWS and both in terms of on",
    "start": "137520",
    "end": "141330"
  },
  {
    "text": "most demanding customers are using it as",
    "start": "141330",
    "end": "143250"
  },
  {
    "text": "and one of those most demanding",
    "start": "143250",
    "end": "145140"
  },
  {
    "text": "customers is actually Amazon the",
    "start": "145140",
    "end": "146489"
  },
  {
    "text": "retailer itself who uses dynamodb all",
    "start": "146489",
    "end": "149280"
  },
  {
    "text": "over the place",
    "start": "149280",
    "end": "150120"
  },
  {
    "text": "you mentioned developers interacting",
    "start": "150120",
    "end": "152489"
  },
  {
    "text": "with the service there as a software",
    "start": "152489",
    "end": "153840"
  },
  {
    "text": "developer how do I go about integrating",
    "start": "153840",
    "end": "156480"
  },
  {
    "text": "DynamoDB with my apps what sort of",
    "start": "156480",
    "end": "158370"
  },
  {
    "text": "mechanisms can I use to store and",
    "start": "158370",
    "end": "159900"
  },
  {
    "text": "retrieve data from the service well the",
    "start": "159900",
    "end": "161970"
  },
  {
    "text": "usual service interfaces that we've",
    "start": "161970",
    "end": "164519"
  },
  {
    "text": "always built for api's making it very",
    "start": "164519",
    "end": "167910"
  },
  {
    "text": "easy for you to sort of store and",
    "start": "167910",
    "end": "169739"
  },
  {
    "text": "retrieve data and even there's a",
    "start": "169739",
    "end": "172650"
  },
  {
    "text": "mechanism almost already from day one",
    "start": "172650",
    "end": "174750"
  },
  {
    "text": "where you can make a decision whether",
    "start": "174750",
    "end": "176430"
  },
  {
    "text": "you want to have consistent versus",
    "start": "176430",
    "end": "178070"
  },
  {
    "text": "eventually consistent reads and we",
    "start": "178070",
    "end": "180510"
  },
  {
    "text": "really expose that through the pricing",
    "start": "180510",
    "end": "182880"
  },
  {
    "text": "model as well because for example for",
    "start": "182880",
    "end": "185010"
  },
  {
    "text": "consistent reads you need to read from",
    "start": "185010",
    "end": "186450"
  },
  {
    "text": "two of the replicas and a search like",
    "start": "186450",
    "end": "189299"
  },
  {
    "text": "that comes at a higher cost because with",
    "start": "189299",
    "end": "191070"
  },
  {
    "text": "more consistency so we're giving you an",
    "start": "191070",
    "end": "192989"
  },
  {
    "text": "interface that really matches sort of",
    "start": "192989",
    "end": "195480"
  },
  {
    "text": "how mobile application development is",
    "start": "195480",
    "end": "196980"
  },
  {
    "text": "being done okay what about the history",
    "start": "196980",
    "end": "198630"
  },
  {
    "text": "of dynamo DB when was the service",
    "start": "198630",
    "end": "200310"
  },
  {
    "text": "conceived",
    "start": "200310",
    "end": "201060"
  },
  {
    "text": "what's the backstory in how the service",
    "start": "201060",
    "end": "203220"
  },
  {
    "text": "evolved since its launch so I think see",
    "start": "203220",
    "end": "206400"
  },
  {
    "text": "this is a history before dynamodb which",
    "start": "206400",
    "end": "210060"
  },
  {
    "text": "was called Amazon's dynamo which was and",
    "start": "210060",
    "end": "213480"
  },
  {
    "text": "if you catch to come to my keynote on",
    "start": "213480",
    "end": "215540"
  },
  {
    "text": "our first day you'll hear me talk more",
    "start": "215540",
    "end": "218760"
  },
  {
    "text": "about the original story behind Dynamo",
    "start": "218760",
    "end": "220890"
  },
  {
    "text": "why we did this but let's say we just",
    "start": "220890",
    "end": "223110"
  },
  {
    "text": "need a deep dive ever moment about how",
    "start": "223110",
    "end": "224910"
  },
  {
    "text": "we we're actually using our databases",
    "start": "224910",
    "end": "226470"
  },
  {
    "text": "and the majority within amazon.com was",
    "start": "226470",
    "end": "229019"
  },
  {
    "text": "actually key value we're using",
    "start": "229019",
    "end": "230670"
  },
  {
    "text": "relational databases to do key value",
    "start": "230670",
    "end": "232650"
  },
  {
    "text": "could see that because both of these",
    "start": "232650",
    "end": "234600"
  },
  {
    "text": "queries just a primary key in a single",
    "start": "234600",
    "end": "237480"
  },
  {
    "text": "world was really between back and about",
    "start": "237480",
    "end": "239310"
  },
  {
    "text": "70% of the operations data operations",
    "start": "239310",
    "end": "241620"
  },
  {
    "text": "within Amazon wiki value so we realized",
    "start": "241620",
    "end": "244769"
  },
  {
    "text": "that we could actually build a dedicated",
    "start": "244769",
    "end": "246300"
  },
  {
    "text": "database for that we didn't need to use",
    "start": "246300",
    "end": "248260"
  },
  {
    "text": "you know databases that could operate at",
    "start": "248260",
    "end": "249939"
  },
  {
    "text": "scale and give consistent performance",
    "start": "249939",
    "end": "252930"
  },
  {
    "text": "that must be and we we were the paper",
    "start": "252930",
    "end": "255939"
  },
  {
    "text": "about that one moment in 2007 and",
    "start": "255939",
    "end": "258030"
  },
  {
    "text": "actually we just entered the ACM Hall of",
    "start": "258030",
    "end": "261489"
  },
  {
    "text": "Fame with this paper because after ten",
    "start": "261489",
    "end": "263260"
  },
  {
    "text": "years they become eligible for the Hall",
    "start": "263260",
    "end": "265449"
  },
  {
    "text": "of Fame and we just enter that one on",
    "start": "265449",
    "end": "266949"
  },
  {
    "text": "the on the first try so over time we saw",
    "start": "266949",
    "end": "271990"
  },
  {
    "text": "that our AWS customers who were in need",
    "start": "271990",
    "end": "274210"
  },
  {
    "text": "of a similar type of tech technology I",
    "start": "274210",
    "end": "276610"
  },
  {
    "text": "mean all these learnings from dynamo",
    "start": "276610",
    "end": "278650"
  },
  {
    "text": "inside using it inside Amazon as well as",
    "start": "278650",
    "end": "281860"
  },
  {
    "text": "the amount of the earlier services a day",
    "start": "281860",
    "end": "283419"
  },
  {
    "text": "to be a simple DB that sort of similar",
    "start": "283419",
    "end": "285669"
  },
  {
    "text": "capability so the lessons from both of",
    "start": "285669",
    "end": "287289"
  },
  {
    "text": "those databases came to life and",
    "start": "287289",
    "end": "290110"
  },
  {
    "text": "dynamodb when we launched that I think I",
    "start": "290110",
    "end": "292270"
  },
  {
    "text": "was in two thousand twelve thousand",
    "start": "292270",
    "end": "294070"
  },
  {
    "text": "twelve yeah so and and these guys have",
    "start": "294070",
    "end": "296770"
  },
  {
    "text": "been innovating like mad I mean the the",
    "start": "296770",
    "end": "299620"
  },
  {
    "text": "features that have rolled out since",
    "start": "299620",
    "end": "302370"
  },
  {
    "text": "secondary in this is global Tables",
    "start": "302370",
    "end": "305010"
  },
  {
    "text": "DynamoDB streams all of those are",
    "start": "305010",
    "end": "309550"
  },
  {
    "text": "helping our customers build really",
    "start": "309550",
    "end": "311650"
  },
  {
    "text": "complex internet scale applications that",
    "start": "311650",
    "end": "313960"
  },
  {
    "text": "give consistent performance and",
    "start": "313960",
    "end": "315340"
  },
  {
    "text": "continuing that theme we've got",
    "start": "315340",
    "end": "316720"
  },
  {
    "text": "something new to announce on dynamodb",
    "start": "316720",
    "end": "318669"
  },
  {
    "text": "today so what are we announcing today",
    "start": "318669",
    "end": "320590"
  },
  {
    "text": "here we reinvent on this service well",
    "start": "320590",
    "end": "322840"
  },
  {
    "text": "actually so one of the things that many",
    "start": "322840",
    "end": "324130"
  },
  {
    "text": "of our customers have asked for and they",
    "start": "324130",
    "end": "325990"
  },
  {
    "text": "initially know 95% of our features and",
    "start": "325990",
    "end": "328750"
  },
  {
    "text": "services come out of direct customer",
    "start": "328750",
    "end": "330550"
  },
  {
    "text": "requests so a particular challenge that",
    "start": "330550",
    "end": "334240"
  },
  {
    "text": "customers had as if they wanted to",
    "start": "334240",
    "end": "335620"
  },
  {
    "text": "update multiple items in the table in a",
    "start": "335620",
    "end": "338830"
  },
  {
    "text": "consistent manner or even offer multiple",
    "start": "338830",
    "end": "340690"
  },
  {
    "text": "tables that they wanted something like",
    "start": "340690",
    "end": "342910"
  },
  {
    "text": "there was traditionally databases like",
    "start": "342910",
    "end": "345039"
  },
  {
    "text": "transactions so today I'm very happy to",
    "start": "345039",
    "end": "347500"
  },
  {
    "text": "announce that dynamodb will have",
    "start": "347500",
    "end": "349840"
  },
  {
    "text": "transaction capabilities for those who",
    "start": "349840",
    "end": "351729"
  },
  {
    "text": "are looking for it right take just",
    "start": "351729",
    "end": "355599"
  },
  {
    "start": "355000",
    "end": "633000"
  },
  {
    "text": "turning to you Tony what use cases do",
    "start": "355599",
    "end": "357639"
  },
  {
    "text": "these transaction capabilities enable",
    "start": "357639",
    "end": "359440"
  },
  {
    "text": "for customers what can customers now do",
    "start": "359440",
    "end": "361060"
  },
  {
    "text": "that they couldn't do previously so what",
    "start": "361060",
    "end": "363039"
  },
  {
    "text": "we've done is we've introduced two new",
    "start": "363039",
    "end": "365289"
  },
  {
    "text": "api's one is for right transaction",
    "start": "365289",
    "end": "368409"
  },
  {
    "text": "amount for retracts and with these you",
    "start": "368409",
    "end": "370389"
  },
  {
    "text": "can combine several updates within a",
    "start": "370389",
    "end": "372789"
  },
  {
    "text": "single transactional API call and make",
    "start": "372789",
    "end": "375010"
  },
  {
    "text": "the call and you get an all-or-nothing",
    "start": "375010",
    "end": "377550"
  },
  {
    "text": "characteristics that all succeed or all",
    "start": "377550",
    "end": "379719"
  },
  {
    "text": "fail and",
    "start": "379719",
    "end": "381230"
  },
  {
    "text": "isolation level across transactions you",
    "start": "381230",
    "end": "384090"
  },
  {
    "text": "can do transactions across many items in",
    "start": "384090",
    "end": "386970"
  },
  {
    "text": "one or more tables within a region and a",
    "start": "386970",
    "end": "389760"
  },
  {
    "text": "single account so if you want to update",
    "start": "389760",
    "end": "391560"
  },
  {
    "text": "let's say you have three items you want",
    "start": "391560",
    "end": "393360"
  },
  {
    "text": "to update and they're in the same table",
    "start": "393360",
    "end": "395460"
  },
  {
    "text": "but you want to move points from one",
    "start": "395460",
    "end": "397380"
  },
  {
    "text": "item to another item and you want to",
    "start": "397380",
    "end": "399600"
  },
  {
    "text": "subtract something and that to something",
    "start": "399600",
    "end": "401130"
  },
  {
    "text": "else you can do transactionally so",
    "start": "401130",
    "end": "403410"
  },
  {
    "text": "you're guaranteed that both will succeed",
    "start": "403410",
    "end": "405449"
  },
  {
    "text": "or both of them will fail and you get a",
    "start": "405449",
    "end": "407430"
  },
  {
    "text": "return code if something goes wrong and",
    "start": "407430",
    "end": "409860"
  },
  {
    "text": "it really helps developers make write",
    "start": "409860",
    "end": "413040"
  },
  {
    "text": "code a lot easier when you don't have to",
    "start": "413040",
    "end": "415260"
  },
  {
    "text": "have these crazy compensation code for",
    "start": "415260",
    "end": "419700"
  },
  {
    "text": "dealing with errors and you can also add",
    "start": "419700",
    "end": "422280"
  },
  {
    "text": "conditions to the transactions so you",
    "start": "422280",
    "end": "424979"
  },
  {
    "text": "know if you want to take money from an",
    "start": "424979",
    "end": "426300"
  },
  {
    "text": "account and add it to another account",
    "start": "426300",
    "end": "427979"
  },
  {
    "text": "you can check to see if there's",
    "start": "427979",
    "end": "429540"
  },
  {
    "text": "sufficient funds if not you cancel the",
    "start": "429540",
    "end": "431430"
  },
  {
    "text": "transaction and as a developer you don't",
    "start": "431430",
    "end": "433710"
  },
  {
    "text": "have to anything alright you just write",
    "start": "433710",
    "end": "435630"
  },
  {
    "text": "your code and off you go and I think",
    "start": "435630",
    "end": "437550"
  },
  {
    "text": "there's an important distinction to be",
    "start": "437550",
    "end": "438810"
  },
  {
    "text": "made here and that binding will DynamoDB",
    "start": "438810",
    "end": "441180"
  },
  {
    "text": "already had batch operations built into",
    "start": "441180",
    "end": "443100"
  },
  {
    "text": "the SDK you could make multiple updates",
    "start": "443100",
    "end": "444930"
  },
  {
    "text": "but what is very different about this is",
    "start": "444930",
    "end": "447270"
  },
  {
    "text": "even though it's exposed to a similar",
    "start": "447270",
    "end": "449340"
  },
  {
    "text": "interface there's actually a transaction",
    "start": "449340",
    "end": "450960"
  },
  {
    "text": "just like you would get in in another",
    "start": "450960",
    "end": "452700"
  },
  {
    "text": "database you can say like hey I want you",
    "start": "452700",
    "end": "454350"
  },
  {
    "text": "to not commit all of this until I'm sure",
    "start": "454350",
    "end": "456090"
  },
  {
    "text": "it's all done yes and it protects you",
    "start": "456090",
    "end": "458789"
  },
  {
    "text": "across all the variants of failures that",
    "start": "458789",
    "end": "461070"
  },
  {
    "text": "can happen in this mode one of the nice",
    "start": "461070",
    "end": "463710"
  },
  {
    "text": "things about it is that because it's an",
    "start": "463710",
    "end": "465479"
  },
  {
    "text": "API call you batch up all of your",
    "start": "465479",
    "end": "467550"
  },
  {
    "text": "updates deletes or inserts as a single",
    "start": "467550",
    "end": "470490"
  },
  {
    "text": "API call and you make the call and again",
    "start": "470490",
    "end": "472620"
  },
  {
    "text": "you get consistent performance we're not",
    "start": "472620",
    "end": "474870"
  },
  {
    "text": "we're not trying to do conversational",
    "start": "474870",
    "end": "476700"
  },
  {
    "text": "transactions where you say begin",
    "start": "476700",
    "end": "478260"
  },
  {
    "text": "transaction and maybe you go to lunch",
    "start": "478260",
    "end": "479970"
  },
  {
    "text": "and and then the DBA is trying to find",
    "start": "479970",
    "end": "481950"
  },
  {
    "text": "the humm transaction and kill it and",
    "start": "481950",
    "end": "483539"
  },
  {
    "text": "long-running transactions and so it's",
    "start": "483539",
    "end": "485550"
  },
  {
    "text": "all again in the spirit of dynamodb it's",
    "start": "485550",
    "end": "488340"
  },
  {
    "text": "about consistent performance and now you",
    "start": "488340",
    "end": "490349"
  },
  {
    "text": "can have consistent performance with",
    "start": "490349",
    "end": "492180"
  },
  {
    "text": "transactions do we have to make",
    "start": "492180",
    "end": "493950"
  },
  {
    "text": "underlying changes to the dynamodb",
    "start": "493950",
    "end": "495930"
  },
  {
    "text": "platform or technology in order to",
    "start": "495930",
    "end": "497280"
  },
  {
    "text": "enable this how is it built well you",
    "start": "497280",
    "end": "499830"
  },
  {
    "text": "know as as mentioned before within a",
    "start": "499830",
    "end": "501750"
  },
  {
    "text": "single item you always have",
    "start": "501750",
    "end": "502919"
  },
  {
    "text": "transactional characteristics for a",
    "start": "502919",
    "end": "504870"
  },
  {
    "text": "single item so what we have to do is",
    "start": "504870",
    "end": "507120"
  },
  {
    "text": "make the transaction coordinate across",
    "start": "507120",
    "end": "509370"
  },
  {
    "text": "many items and",
    "start": "509370",
    "end": "510880"
  },
  {
    "text": "many items could be spread across many",
    "start": "510880",
    "end": "513280"
  },
  {
    "text": "machines in a data center sometimes",
    "start": "513280",
    "end": "515140"
  },
  {
    "text": "thousands or tens of thousands hundreds",
    "start": "515140",
    "end": "517000"
  },
  {
    "text": "of thousands of machines so we now have",
    "start": "517000",
    "end": "519099"
  },
  {
    "text": "a fleet of transaction coordination",
    "start": "519099",
    "end": "521349"
  },
  {
    "text": "systems that is addition to the",
    "start": "521349",
    "end": "522969"
  },
  {
    "text": "transaction control system that ensures",
    "start": "522970",
    "end": "525100"
  },
  {
    "text": "that the transaction across all of the",
    "start": "525100",
    "end": "527440"
  },
  {
    "text": "nodes that are participating in this API",
    "start": "527440",
    "end": "529630"
  },
  {
    "text": "call are coordinated",
    "start": "529630",
    "end": "531150"
  },
  {
    "text": "that's how it works what about billing",
    "start": "531150",
    "end": "533890"
  },
  {
    "text": "for the service how this pricing work",
    "start": "533890",
    "end": "535390"
  },
  {
    "text": "how does this affect the amount so",
    "start": "535390",
    "end": "538600"
  },
  {
    "text": "there's no there's no changes in the",
    "start": "538600",
    "end": "539980"
  },
  {
    "text": "billing and the metering transactions do",
    "start": "539980",
    "end": "542710"
  },
  {
    "text": "require more work so we usually do two",
    "start": "542710",
    "end": "544660"
  },
  {
    "text": "reads for a for a transaction because we",
    "start": "544660",
    "end": "547390"
  },
  {
    "text": "have to agree yeah we have to do a",
    "start": "547390",
    "end": "548890"
  },
  {
    "text": "prepare and then we have to do a the",
    "start": "548890",
    "end": "551050"
  },
  {
    "text": "commit so you end up getting charged for",
    "start": "551050",
    "end": "553300"
  },
  {
    "text": "example if you do a transactional get",
    "start": "553300",
    "end": "555580"
  },
  {
    "text": "you will have to use to read units",
    "start": "555580",
    "end": "557830"
  },
  {
    "text": "because the first read unit will read it",
    "start": "557830",
    "end": "559960"
  },
  {
    "text": "prepared the transaction the second one",
    "start": "559960",
    "end": "561820"
  },
  {
    "text": "will commit the transaction so basically",
    "start": "561820",
    "end": "565210"
  },
  {
    "text": "it said two requests were sell photos of",
    "start": "565210",
    "end": "570040"
  },
  {
    "text": "you that might be new to DynamoDB",
    "start": "570040",
    "end": "572230"
  },
  {
    "text": "billing you are provisioning capacity",
    "start": "572230",
    "end": "574300"
  },
  {
    "text": "units containing a certain amount of",
    "start": "574300",
    "end": "576040"
  },
  {
    "text": "read throughput so you were essentially",
    "start": "576040",
    "end": "578170"
  },
  {
    "text": "consuming those capacities yes more",
    "start": "578170",
    "end": "580030"
  },
  {
    "text": "quickly by using this feature right and",
    "start": "580030",
    "end": "581680"
  },
  {
    "text": "if you think about like the eventually",
    "start": "581680",
    "end": "584410"
  },
  {
    "text": "consistent reads requires half a unit a",
    "start": "584410",
    "end": "586750"
  },
  {
    "text": "consistent read is one unit and a",
    "start": "586750",
    "end": "588730"
  },
  {
    "text": "transactional read is two units and one",
    "start": "588730",
    "end": "590680"
  },
  {
    "text": "of the really interesting components of",
    "start": "590680",
    "end": "592450"
  },
  {
    "text": "read capacity units write capacity units",
    "start": "592450",
    "end": "594520"
  },
  {
    "text": "is some workloads are write heavy some",
    "start": "594520",
    "end": "597250"
  },
  {
    "text": "workloads are read heavy but dynamodb",
    "start": "597250",
    "end": "599230"
  },
  {
    "text": "now has auto scaling on each one of",
    "start": "599230",
    "end": "601360"
  },
  {
    "text": "those units independently if you have a",
    "start": "601360",
    "end": "602920"
  },
  {
    "text": "table that you're committing everything",
    "start": "602920",
    "end": "604300"
  },
  {
    "text": "to once and maybe you're doing a small",
    "start": "604300",
    "end": "606010"
  },
  {
    "text": "amount of write transactions but you",
    "start": "606010",
    "end": "607720"
  },
  {
    "text": "have you know 70,000 read throughput you",
    "start": "607720",
    "end": "610600"
  },
  {
    "text": "know you can do that very easily and",
    "start": "610600",
    "end": "612010"
  },
  {
    "text": "then when you're not using it it'll",
    "start": "612010",
    "end": "613210"
  },
  {
    "text": "scale right back down to nothing all",
    "start": "613210",
    "end": "615400"
  },
  {
    "text": "right now you mentioned a cross-table",
    "start": "615400",
    "end": "617800"
  },
  {
    "text": "support so can I have transactions that",
    "start": "617800",
    "end": "619900"
  },
  {
    "text": "have des items that are in multiple",
    "start": "619900",
    "end": "621550"
  },
  {
    "text": "tables absolutely and can those tables",
    "start": "621550",
    "end": "623650"
  },
  {
    "text": "be in multiple regions or do they have",
    "start": "623650",
    "end": "625210"
  },
  {
    "text": "to be no so transactions are limited to",
    "start": "625210",
    "end": "627310"
  },
  {
    "text": "a single region within an account okay",
    "start": "627310",
    "end": "629200"
  },
  {
    "text": "so the blast radius is still protected",
    "start": "629200",
    "end": "631390"
  },
  {
    "text": "in again the spirit of dynamo okay cool",
    "start": "631390",
    "end": "634180"
  },
  {
    "start": "633000",
    "end": "969000"
  },
  {
    "text": "I notice you've got something to show us",
    "start": "634180",
    "end": "635470"
  },
  {
    "text": "on screen here so if you want to talk us",
    "start": "635470",
    "end": "637030"
  },
  {
    "text": "through that can we have the laptop up",
    "start": "637030",
    "end": "638950"
  },
  {
    "text": "on the screen please Thanks sure so I",
    "start": "638950",
    "end": "640990"
  },
  {
    "text": "have a little bit of",
    "start": "640990",
    "end": "641980"
  },
  {
    "text": "code here basically this is a little app",
    "start": "641980",
    "end": "645040"
  },
  {
    "text": "that we wrote as it as a demo you think",
    "start": "645040",
    "end": "648640"
  },
  {
    "text": "of a ride-sharing thing and we're",
    "start": "648640",
    "end": "650530"
  },
  {
    "text": "sharing rides and you know the two of us",
    "start": "650530",
    "end": "652960"
  },
  {
    "text": "get in a car and at some point you don't",
    "start": "652960",
    "end": "655060"
  },
  {
    "text": "have to deduct some money from your",
    "start": "655060",
    "end": "658060"
  },
  {
    "text": "account and some money from my account",
    "start": "658060",
    "end": "659500"
  },
  {
    "text": "and add it to the drivers account who",
    "start": "659500",
    "end": "661450"
  },
  {
    "text": "was getting it and so we want to be able",
    "start": "661450",
    "end": "663520"
  },
  {
    "text": "to do these operations as an atomic unit",
    "start": "663520",
    "end": "666940"
  },
  {
    "text": "you know as a transaction so in this",
    "start": "666940",
    "end": "670450"
  },
  {
    "text": "code I'm preparing three updates one is",
    "start": "670450",
    "end": "673210"
  },
  {
    "text": "to update the rider one account to",
    "start": "673210",
    "end": "675670"
  },
  {
    "text": "reduce their balance because they have",
    "start": "675670",
    "end": "678670"
  },
  {
    "text": "to pay for the fare and then there's a",
    "start": "678670",
    "end": "680350"
  },
  {
    "text": "rider to account so I'm preparing the",
    "start": "680350",
    "end": "683200"
  },
  {
    "text": "second update and then the the third",
    "start": "683200",
    "end": "685030"
  },
  {
    "text": "update here for the driver update is",
    "start": "685030",
    "end": "687130"
  },
  {
    "text": "basically you know the driver is the one",
    "start": "687130",
    "end": "689200"
  },
  {
    "text": "who gets the additional money so if we",
    "start": "689200",
    "end": "691630"
  },
  {
    "text": "prepare all of these updates and then we",
    "start": "691630",
    "end": "694030"
  },
  {
    "text": "have a single transact right item",
    "start": "694030",
    "end": "696430"
  },
  {
    "text": "request here so that's the new API call",
    "start": "696430",
    "end": "700230"
  },
  {
    "text": "transact write items which basically",
    "start": "700230",
    "end": "704590"
  },
  {
    "text": "takes an array of updates deletes or",
    "start": "704590",
    "end": "707230"
  },
  {
    "text": "inserts that you've prepared and applies",
    "start": "707230",
    "end": "709270"
  },
  {
    "text": "it and so then it would be begets the",
    "start": "709270",
    "end": "711160"
  },
  {
    "text": "API call and then goes out and then",
    "start": "711160",
    "end": "713050"
  },
  {
    "text": "coordinates all of these updates and",
    "start": "713050",
    "end": "714670"
  },
  {
    "text": "when it's done committing all of them it",
    "start": "714670",
    "end": "716560"
  },
  {
    "text": "comes back with the success the success",
    "start": "716560",
    "end": "718840"
  },
  {
    "text": "code and you can add conditionals on all",
    "start": "718840",
    "end": "720940"
  },
  {
    "text": "of these things like you know if I don't",
    "start": "720940",
    "end": "722620"
  },
  {
    "text": "have enough money in my account then you",
    "start": "722620",
    "end": "725110"
  },
  {
    "text": "know you can't go forward with this",
    "start": "725110",
    "end": "726400"
  },
  {
    "text": "transaction and so basically transaction",
    "start": "726400",
    "end": "728800"
  },
  {
    "text": "is canceled saying hey condition didn't",
    "start": "728800",
    "end": "730330"
  },
  {
    "text": "meet yeah so you don't have to read and",
    "start": "730330",
    "end": "734230"
  },
  {
    "text": "then do it try to do it right and hope",
    "start": "734230",
    "end": "736810"
  },
  {
    "text": "that it worked or version that you just",
    "start": "736810",
    "end": "738400"
  },
  {
    "text": "do it all at one step so no it's this",
    "start": "738400",
    "end": "740110"
  },
  {
    "text": "code samples here in Java which AWS SDKs",
    "start": "740110",
    "end": "743200"
  },
  {
    "text": "are supported is it going to be",
    "start": "743200",
    "end": "744310"
  },
  {
    "text": "available at all listed yeah all only",
    "start": "744310",
    "end": "745840"
  },
  {
    "text": "one one thing in particular that I'm",
    "start": "745840",
    "end": "747760"
  },
  {
    "text": "super happy about is in the Python SDK",
    "start": "747760",
    "end": "749290"
  },
  {
    "text": "it's just you it's just photo you know",
    "start": "749290",
    "end": "751750"
  },
  {
    "text": "you go with photo like you normally",
    "start": "751750",
    "end": "753220"
  },
  {
    "text": "would",
    "start": "753220",
    "end": "753580"
  },
  {
    "text": "and then you get the ability to create",
    "start": "753580",
    "end": "756040"
  },
  {
    "text": "define a context manager so in Python if",
    "start": "756040",
    "end": "758260"
  },
  {
    "text": "you've ever written before there's a",
    "start": "758260",
    "end": "759880"
  },
  {
    "text": "statement called width you define a",
    "start": "759880",
    "end": "762040"
  },
  {
    "text": "contact manager and then you put a",
    "start": "762040",
    "end": "763390"
  },
  {
    "text": "little colon and you type everything you",
    "start": "763390",
    "end": "766090"
  },
  {
    "text": "want to happen so you define all the",
    "start": "766090",
    "end": "767560"
  },
  {
    "text": "transactions that you want to do and",
    "start": "767560",
    "end": "768880"
  },
  {
    "text": "then",
    "start": "768880",
    "end": "769510"
  },
  {
    "text": "you know the end of that block is your",
    "start": "769510",
    "end": "772930"
  },
  {
    "text": "transaction you don't have to do any",
    "start": "772930",
    "end": "774160"
  },
  {
    "text": "extra where it's it's extremely powerful",
    "start": "774160",
    "end": "776700"
  },
  {
    "text": "we've got a couple of questions from the",
    "start": "776700",
    "end": "778780"
  },
  {
    "text": "supports for rollback to by the way so",
    "start": "778780",
    "end": "781000"
  },
  {
    "text": "have you honey you implement you roll",
    "start": "781000",
    "end": "782290"
  },
  {
    "text": "back here so because it's a API based if",
    "start": "782290",
    "end": "786220"
  },
  {
    "text": "any of the condition within your",
    "start": "786220",
    "end": "787840"
  },
  {
    "text": "transaction is false then the",
    "start": "787840",
    "end": "790720"
  },
  {
    "text": "transaction by default is canceled and",
    "start": "790720",
    "end": "792730"
  },
  {
    "text": "so there's no need for a rollback",
    "start": "792730",
    "end": "794410"
  },
  {
    "text": "because we basically don't find what",
    "start": "794410",
    "end": "796660"
  },
  {
    "text": "follow at the commit we do the preparer",
    "start": "796660",
    "end": "798730"
  },
  {
    "text": "and if the transaction conditions aren't",
    "start": "798730",
    "end": "801040"
  },
  {
    "text": "met then we really roll back for you so",
    "start": "801040",
    "end": "804340"
  },
  {
    "text": "you don't have to do it begin and the",
    "start": "804340",
    "end": "806440"
  },
  {
    "text": "commit or rollback okay you just load it",
    "start": "806440",
    "end": "808660"
  },
  {
    "text": "all up as your conditions and submit the",
    "start": "808660",
    "end": "810580"
  },
  {
    "text": "API questions we've got from the stream",
    "start": "810580",
    "end": "813670"
  },
  {
    "text": "Prime Java guy Prime Java one guy asks",
    "start": "813670",
    "end": "816280"
  },
  {
    "text": "is this generally available or in",
    "start": "816280",
    "end": "817990"
  },
  {
    "text": "preview and in which regions is a",
    "start": "817990",
    "end": "819460"
  },
  {
    "text": "service available form so it will be",
    "start": "819460",
    "end": "821350"
  },
  {
    "text": "available in all regions there it's it's",
    "start": "821350",
    "end": "824770"
  },
  {
    "text": "everywhere now SDK will drop tomorrow",
    "start": "824770",
    "end": "827710"
  },
  {
    "text": "for all of the AWS supported languages",
    "start": "827710",
    "end": "831370"
  },
  {
    "text": "so starting tomorrow you can download",
    "start": "831370",
    "end": "833620"
  },
  {
    "text": "the SDK and and write code in any region",
    "start": "833620",
    "end": "836290"
  },
  {
    "text": "you want great and presumably the",
    "start": "836290",
    "end": "838540"
  },
  {
    "text": "documentation will be out there I think",
    "start": "838540",
    "end": "842590"
  },
  {
    "text": "there's a great blog coming out for for",
    "start": "842590",
    "end": "845650"
  },
  {
    "text": "transactions there's some examples so",
    "start": "845650",
    "end": "847810"
  },
  {
    "text": "it'll be ready tomorrow I think there's",
    "start": "847810",
    "end": "850030"
  },
  {
    "text": "also I don't know how many people how",
    "start": "850030",
    "end": "851980"
  },
  {
    "text": "often you get the chance to actually",
    "start": "851980",
    "end": "853360"
  },
  {
    "text": "dive deep and see the dynamodb great",
    "start": "853360",
    "end": "855580"
  },
  {
    "text": "language in action I I know we have a",
    "start": "855580",
    "end": "856900"
  },
  {
    "text": "pretty broad audience on the stream",
    "start": "856900",
    "end": "858370"
  },
  {
    "text": "today I don't know if we can go back but",
    "start": "858370",
    "end": "859960"
  },
  {
    "text": "you know one of the things that really",
    "start": "859960",
    "end": "861340"
  },
  {
    "text": "makes anybody be super attractive as a",
    "start": "861340",
    "end": "863920"
  },
  {
    "text": "developer is you define these condition",
    "start": "863920",
    "end": "866620"
  },
  {
    "text": "expressions and you're just defining",
    "start": "866620",
    "end": "867880"
  },
  {
    "text": "variables and then you fill in those",
    "start": "867880",
    "end": "869290"
  },
  {
    "text": "values",
    "start": "869290",
    "end": "869650"
  },
  {
    "text": "so you're saying set balance you know",
    "start": "869650",
    "end": "871780"
  },
  {
    "text": "it's it's a very readable syntax it's a",
    "start": "871780",
    "end": "873520"
  },
  {
    "text": "very easy way to think about and",
    "start": "873520",
    "end": "874960"
  },
  {
    "text": "structure your queries it's not you know",
    "start": "874960",
    "end": "877510"
  },
  {
    "text": "having the structure inner join on top",
    "start": "877510",
    "end": "880240"
  },
  {
    "text": "of you know select foreign key from this",
    "start": "880240",
    "end": "882550"
  },
  {
    "text": "other table it's it's a it's a much more",
    "start": "882550",
    "end": "884470"
  },
  {
    "text": "fluid way of thinking about the way you",
    "start": "884470",
    "end": "886120"
  },
  {
    "text": "you write code and the way you",
    "start": "886120",
    "end": "888580"
  },
  {
    "text": "instrument data and work with data",
    "start": "888580",
    "end": "892250"
  },
  {
    "text": "the final thing I wanted to ask you",
    "start": "892250",
    "end": "893690"
  },
  {
    "text": "about was the future for dynamo so a lot",
    "start": "893690",
    "end": "896000"
  },
  {
    "text": "of updates in the last couple of years",
    "start": "896000",
    "end": "897530"
  },
  {
    "text": "with things like global tables and",
    "start": "897530",
    "end": "899120"
  },
  {
    "text": "streams preceding that and now this",
    "start": "899120",
    "end": "900670"
  },
  {
    "text": "transactions of day what do you think",
    "start": "900670",
    "end": "902570"
  },
  {
    "text": "the future holds for dynamo DB what",
    "start": "902570",
    "end": "904970"
  },
  {
    "text": "areas of development are we looking out",
    "start": "904970",
    "end": "906410"
  },
  {
    "text": "for the next couple of years so you know",
    "start": "906410",
    "end": "908690"
  },
  {
    "text": "our focus is to make dynamo DB as",
    "start": "908690",
    "end": "912020"
  },
  {
    "text": "approachable for developers as possible",
    "start": "912020",
    "end": "914240"
  },
  {
    "text": "because we really think that this is a",
    "start": "914240",
    "end": "916250"
  },
  {
    "text": "great developer tool and so we're gonna",
    "start": "916250",
    "end": "918590"
  },
  {
    "text": "continue to improve on that front and",
    "start": "918590",
    "end": "921620"
  },
  {
    "text": "then one of the other things which is",
    "start": "921620",
    "end": "922940"
  },
  {
    "text": "happening with dynamo is our customer",
    "start": "922940",
    "end": "924800"
  },
  {
    "text": "base is really diversifying we have",
    "start": "924800",
    "end": "927530"
  },
  {
    "text": "customers in financials in manufacturing",
    "start": "927530",
    "end": "929720"
  },
  {
    "text": "in automotives health and and so some of",
    "start": "929720",
    "end": "932930"
  },
  {
    "text": "the features which we're building like",
    "start": "932930",
    "end": "934580"
  },
  {
    "text": "you know I need GDP are I need",
    "start": "934580",
    "end": "936590"
  },
  {
    "text": "compliance I need backup restore so this",
    "start": "936590",
    "end": "938900"
  },
  {
    "text": "is the stuff that we worked on and then",
    "start": "938900",
    "end": "940970"
  },
  {
    "text": "so as our customer base diversifies the",
    "start": "940970",
    "end": "945080"
  },
  {
    "text": "request and that asks from customers get",
    "start": "945080",
    "end": "947450"
  },
  {
    "text": "more interesting and we've we are going",
    "start": "947450",
    "end": "950180"
  },
  {
    "text": "to stay true to the mission of dynamo",
    "start": "950180",
    "end": "952010"
  },
  {
    "text": "which is going to be single-digit",
    "start": "952010",
    "end": "953930"
  },
  {
    "text": "millisecond response time at any scale",
    "start": "953930",
    "end": "955970"
  },
  {
    "text": "and we're not gonna do anything that",
    "start": "955970",
    "end": "957560"
  },
  {
    "text": "compromises the unit that that promise",
    "start": "957560",
    "end": "959810"
  },
  {
    "text": "of dynamo so it's going to be scalable",
    "start": "959810",
    "end": "962540"
  },
  {
    "text": "it's going to grow and it's gonna",
    "start": "962540",
    "end": "964910"
  },
  {
    "text": "support more diverse workloads and more",
    "start": "964910",
    "end": "966800"
  },
  {
    "text": "more diverse industries working really",
    "start": "966800",
    "end": "971360"
  },
  {
    "text": "hard to make sure that our customers",
    "start": "971360",
    "end": "972890"
  },
  {
    "text": "actually have the lowest cost possible",
    "start": "972890",
    "end": "974810"
  },
  {
    "text": "so I do a lot of innovation with a",
    "start": "974810",
    "end": "977540"
  },
  {
    "text": "behind the chorus to actually reduce",
    "start": "977540",
    "end": "979790"
  },
  {
    "text": "costs for for our customers since that",
    "start": "979790",
    "end": "982400"
  },
  {
    "text": "this becomes really elicited transaction",
    "start": "982400",
    "end": "985190"
  },
  {
    "text": "per dollar amount or dollar per",
    "start": "985190",
    "end": "986900"
  },
  {
    "text": "transaction amount really drives down",
    "start": "986900",
    "end": "988730"
  },
  {
    "text": "much lower than many of the relational",
    "start": "988730",
    "end": "991220"
  },
  {
    "text": "databases out there one of the things",
    "start": "991220",
    "end": "993740"
  },
  {
    "text": "that I also like about dynamo DB is that",
    "start": "993740",
    "end": "995750"
  },
  {
    "text": "it improves without you as a developer",
    "start": "995750",
    "end": "997580"
  },
  {
    "text": "having to do anything",
    "start": "997580",
    "end": "998690"
  },
  {
    "text": "so server-side encryption was originally",
    "start": "998690",
    "end": "1000910"
  },
  {
    "text": "an option and now it's just enabled by",
    "start": "1000910",
    "end": "1002830"
  },
  {
    "text": "default it's just a thing that we can do",
    "start": "1002830",
    "end": "1004990"
  },
  {
    "text": "with all of the different tables and you",
    "start": "1004990",
    "end": "1007150"
  },
  {
    "text": "get that additional you know compliance",
    "start": "1007150",
    "end": "1009310"
  },
  {
    "text": "check or you get that additional",
    "start": "1009310",
    "end": "1010390"
  },
  {
    "text": "security without having to think about",
    "start": "1010390",
    "end": "1012370"
  },
  {
    "text": "it or do anything you know I'm not",
    "start": "1012370",
    "end": "1013540"
  },
  {
    "text": "provisioning certificates you're not",
    "start": "1013540",
    "end": "1014860"
  },
  {
    "text": "like making private AES keys or anything",
    "start": "1014860",
    "end": "1016540"
  },
  {
    "text": "like",
    "start": "1016540",
    "end": "1016920"
  },
  {
    "text": "you know there are no maintenance",
    "start": "1016920",
    "end": "1018360"
  },
  {
    "text": "windows for dynamodb you don't have to",
    "start": "1018360",
    "end": "1021149"
  },
  {
    "text": "define a maintenance window and it's not",
    "start": "1021149",
    "end": "1022980"
  },
  {
    "text": "version it's just always works so when",
    "start": "1022980",
    "end": "1025199"
  },
  {
    "text": "we said hey you know as of now all",
    "start": "1025199",
    "end": "1026970"
  },
  {
    "text": "tables are encrypted you know we have",
    "start": "1026970",
    "end": "1028890"
  },
  {
    "text": "hundreds afraid of my stuff stuff back",
    "start": "1028890",
    "end": "1030540"
  },
  {
    "text": "there so it's taken us a long time to",
    "start": "1030540",
    "end": "1033178"
  },
  {
    "text": "methodically go through and encrypt",
    "start": "1033179",
    "end": "1035160"
  },
  {
    "text": "everything without a single customer",
    "start": "1035160",
    "end": "1036928"
  },
  {
    "text": "noticing that we've gone through and",
    "start": "1036929",
    "end": "1039089"
  },
  {
    "text": "have done all this work and that's one",
    "start": "1039089",
    "end": "1040829"
  },
  {
    "text": "of the beauties of that fully managed",
    "start": "1040829",
    "end": "1042780"
  },
  {
    "text": "server list database point in time",
    "start": "1042780",
    "end": "1047220"
  },
  {
    "text": "recovery and and backup and restore and",
    "start": "1047220",
    "end": "1049230"
  },
  {
    "text": "everything to dynamodb and one of the",
    "start": "1049230",
    "end": "1051750"
  },
  {
    "text": "amazing things is that it works for",
    "start": "1051750",
    "end": "1053240"
  },
  {
    "text": "database it's you know ten megabytes but",
    "start": "1053240",
    "end": "1055559"
  },
  {
    "text": "it also works for its database that's",
    "start": "1055559",
    "end": "1057030"
  },
  {
    "text": "you know terabyte or more that's right",
    "start": "1057030",
    "end": "1058860"
  },
  {
    "text": "hundreds of terabytes hundreds of",
    "start": "1058860",
    "end": "1060600"
  },
  {
    "text": "terabytes it's it's me actually I'm a",
    "start": "1060600",
    "end": "1062010"
  },
  {
    "text": "customer with the table which is you",
    "start": "1062010",
    "end": "1063809"
  },
  {
    "text": "know in a 200 plus terabyte inside of a",
    "start": "1063809",
    "end": "1066360"
  },
  {
    "text": "single table with two and a half",
    "start": "1066360",
    "end": "1067919"
  },
  {
    "text": "trillion items in it so and let me do",
    "start": "1067919",
    "end": "1070140"
  },
  {
    "text": "backups on that they don't notice Wow",
    "start": "1070140",
    "end": "1072150"
  },
  {
    "text": "yeah and so many innovations in and",
    "start": "1072150",
    "end": "1075570"
  },
  {
    "text": "around",
    "start": "1075570",
    "end": "1076049"
  },
  {
    "text": "dynamodb we had to make sure that we",
    "start": "1076049",
    "end": "1078600"
  },
  {
    "text": "don't break existing applications",
    "start": "1078600",
    "end": "1080309"
  },
  {
    "text": "I think launching new features such as",
    "start": "1080309",
    "end": "1082380"
  },
  {
    "text": "transactions don't require custom set of",
    "start": "1082380",
    "end": "1085200"
  },
  {
    "text": "existing code to make any any changes",
    "start": "1085200",
    "end": "1087120"
  },
  {
    "text": "and I think that's also the power behind",
    "start": "1087120",
    "end": "1089700"
  },
  {
    "text": "Dax the dynamo accelerator which gives",
    "start": "1089700",
    "end": "1093330"
  },
  {
    "text": "you basically an in-memory cache in",
    "start": "1093330",
    "end": "1095250"
  },
  {
    "text": "front of dynamo without that yet to make",
    "start": "1095250",
    "end": "1097260"
  },
  {
    "text": "any changes to your code just change the",
    "start": "1097260",
    "end": "1099510"
  },
  {
    "text": "end point and everything still works",
    "start": "1099510",
    "end": "1101190"
  },
  {
    "text": "just get microsecond late to see several",
    "start": "1101190",
    "end": "1103590"
  },
  {
    "text": "milliseconds yeah great",
    "start": "1103590",
    "end": "1105900"
  },
  {
    "text": "there's just one more question from the",
    "start": "1105900",
    "end": "1107370"
  },
  {
    "text": "stream that I'm gonna take and I'm gonna",
    "start": "1107370",
    "end": "1108660"
  },
  {
    "text": "ask you just to share a little bit about",
    "start": "1108660",
    "end": "1109830"
  },
  {
    "text": "when your Kino is Verna but a question",
    "start": "1109830",
    "end": "1112470"
  },
  {
    "text": "here from a nice wig say is now that you",
    "start": "1112470",
    "end": "1115290"
  },
  {
    "text": "have multiple transaction now that you",
    "start": "1115290",
    "end": "1117030"
  },
  {
    "text": "have transactions multiple tables may be",
    "start": "1117030",
    "end": "1119700"
  },
  {
    "text": "updated in different orders will you be",
    "start": "1119700",
    "end": "1122130"
  },
  {
    "text": "able to address dead locking so there",
    "start": "1122130",
    "end": "1126150"
  },
  {
    "text": "will be no deadlocks we do optimistic",
    "start": "1126150",
    "end": "1128940"
  },
  {
    "text": "concurrency so there will be no",
    "start": "1128940",
    "end": "1130260"
  },
  {
    "text": "deadlocks there will be no long-running",
    "start": "1130260",
    "end": "1132510"
  },
  {
    "text": "transactions there'll be no open",
    "start": "1132510",
    "end": "1134130"
  },
  {
    "text": "transactions will support transactions",
    "start": "1134130",
    "end": "1136830"
  },
  {
    "text": "without the pain and the suffering that",
    "start": "1136830",
    "end": "1138150"
  },
  {
    "text": "comes for dbaas in the traditional",
    "start": "1138150",
    "end": "1140340"
  },
  {
    "text": "systems we manage transactions on behalf",
    "start": "1140340",
    "end": "1143200"
  },
  {
    "text": "you and will drive transactions to",
    "start": "1143200",
    "end": "1144820"
  },
  {
    "text": "completions or if we cancel and return",
    "start": "1144820",
    "end": "1146710"
  },
  {
    "text": "an error to you with you know specific",
    "start": "1146710",
    "end": "1149110"
  },
  {
    "text": "reasons why the transaction was canceled",
    "start": "1149110",
    "end": "1151269"
  },
  {
    "text": "because you want to set the kind of",
    "start": "1151269",
    "end": "1153159"
  },
  {
    "text": "stuff there to prevent that you know",
    "start": "1153159",
    "end": "1155380"
  },
  {
    "text": "last right win scenario you can just in",
    "start": "1155380",
    "end": "1157389"
  },
  {
    "text": "your condition expression have something",
    "start": "1157389",
    "end": "1158919"
  },
  {
    "text": "that says hey don't update this if",
    "start": "1158919",
    "end": "1160450"
  },
  {
    "text": "something else has already happened yeah",
    "start": "1160450",
    "end": "1161710"
  },
  {
    "text": "and I'd like to believe that most",
    "start": "1161710",
    "end": "1163690"
  },
  {
    "text": "customers most developers will be using",
    "start": "1163690",
    "end": "1165880"
  },
  {
    "text": "this for the of all the assets parts",
    "start": "1165880",
    "end": "1169929"
  },
  {
    "text": "there will be mostly using it for the",
    "start": "1169929",
    "end": "1171700"
  },
  {
    "text": "atomicity part to be able to update",
    "start": "1171700",
    "end": "1173529"
  },
  {
    "text": "multiple items whether they're in single",
    "start": "1173529",
    "end": "1174970"
  },
  {
    "text": "table of multiple tables as well a",
    "start": "1174970",
    "end": "1176860"
  },
  {
    "text": "Potomac operation excellent so I've just",
    "start": "1176860",
    "end": "1179350"
  },
  {
    "text": "like to wrap up by asking you when",
    "start": "1179350",
    "end": "1180870"
  },
  {
    "text": "viewers on the stream and here we invent",
    "start": "1180870",
    "end": "1183039"
  },
  {
    "text": "can see your key know this week when and",
    "start": "1183039",
    "end": "1184659"
  },
  {
    "text": "where will you be on stage on Thursday I",
    "start": "1184659",
    "end": "1187120"
  },
  {
    "text": "believe at 8:30 this when I start and",
    "start": "1187120",
    "end": "1189220"
  },
  {
    "text": "let people sleep in for a half an hour",
    "start": "1189220",
    "end": "1191019"
  },
  {
    "text": "longer and we have lots of great deep",
    "start": "1191019",
    "end": "1193840"
  },
  {
    "text": "technical content so we're ending mostly",
    "start": "1193840",
    "end": "1196389"
  },
  {
    "text": "focuses on the business side and all the",
    "start": "1196389",
    "end": "1198039"
  },
  {
    "text": "the new products and announcements that",
    "start": "1198039",
    "end": "1199809"
  },
  {
    "text": "we're making if you come to my keynote",
    "start": "1199809",
    "end": "1201789"
  },
  {
    "text": "will do a really deep dive on all the",
    "start": "1201789",
    "end": "1204730"
  },
  {
    "text": "AWS tech technology and talk about a lot",
    "start": "1204730",
    "end": "1208419"
  },
  {
    "text": "of new stuff around 2 plus n lambda cool",
    "start": "1208419",
    "end": "1212110"
  },
  {
    "text": "you can catch that here on twitch.tv",
    "start": "1212110",
    "end": "1213669"
  },
  {
    "text": "slash AWS as well so hey you'll see you",
    "start": "1213669",
    "end": "1216220"
  },
  {
    "text": "there",
    "start": "1216220",
    "end": "1216669"
  },
  {
    "text": "bye bye thanks",
    "start": "1216669",
    "end": "1219990"
  }
]