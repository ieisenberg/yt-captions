[
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "6776"
  },
  {
    "start": "6776",
    "end": "13559"
  },
  {
    "text": "JUSTIN SOLOMON: So\ntoday, we're going to continue in our discussion\nof dynamic programming.",
    "start": "13560",
    "end": "19980"
  },
  {
    "text": "I actually found this set\nof problem session problems to be easier than\nthe previous one.",
    "start": "19980",
    "end": "26610"
  },
  {
    "text": "There's a funny\nthing, which is we learned in class about\npseudo polynomial time style",
    "start": "26610",
    "end": "32820"
  },
  {
    "text": "dynamic programs. Somehow, that language is\na little bit liberating,",
    "start": "32820",
    "end": "38220"
  },
  {
    "text": "in the sense that you're using\nparameters that you really shouldn't, when it comes to\nthe runtime of your algorithm.",
    "start": "38220",
    "end": "44160"
  },
  {
    "text": "Well, I suppose we should, in\nthe sense that it's allowed, if you call your algorithm\npseudo polynomial time.",
    "start": "44160",
    "end": "49230"
  },
  {
    "text": "But it somehow makes\nit a little easier to formulate your dynamic\nprogramming algorithm, because all the numbers are\nstaring you right in the face.",
    "start": "49230",
    "end": "56220"
  },
  {
    "text": "You don't have to be so\ncareful about what's fair game and what's not, when you post\nyour algorithm so long as it's",
    "start": "56220",
    "end": "62910"
  },
  {
    "text": "efficient in the values\nthat you care about. And so today's problem session\nhas five problems squeezed",
    "start": "62910",
    "end": "70130"
  },
  {
    "text": "instead of the usual four. We'll see how far we get,\nseeing that I usually talk too much anyway.",
    "start": "70130",
    "end": "75157"
  },
  {
    "text": "But I'll try to stay\non schedule here, and we'll see how well we do. Any questions from our students\nabout dynamic programming",
    "start": "75157",
    "end": "82115"
  },
  {
    "text": "before we get started here? AUDIENCE: You can\ncut one, if you want. JUSTIN SOLOMON: We can cut one? Oh, I will gladly cut\none if I run out of time.",
    "start": "82115",
    "end": "89220"
  },
  {
    "text": "Yeah. OK, so without\nfurther ado, let's get started with coin-crafting,\nwhich is problem 9-1 here.",
    "start": "89220",
    "end": "99270"
  },
  {
    "text": "So I suppose it\nshould be Ceal Naffrey if I were to work through my\nsplinterism properly here.",
    "start": "99270",
    "end": "108640"
  },
  {
    "text": "In any event, we\nhave a thief who's in desperate need of money,\nas with many thieves, or else, of course, they wouldn't\nresort to the world of prime.",
    "start": "108640",
    "end": "116580"
  },
  {
    "text": "And Ceal Naffrey here\nhas n identical coins.",
    "start": "116580",
    "end": "123090"
  },
  {
    "start": "123090",
    "end": "128328"
  },
  {
    "text": "I've been very\nself-conscious about the way that I write the letter I,\never since Eric pointed it out, and it's only gotten worse.",
    "start": "128328",
    "end": "133645"
  },
  {
    "text": "Now it's inconsistent\nand hard to read. But in any event, so we\nhave n identical coins.",
    "start": "133645",
    "end": "141400"
  },
  {
    "text": "And of course, these coins\nhave very distinctive markings. And so we can't possibly\nrun away with them",
    "start": "141400",
    "end": "147550"
  },
  {
    "text": "as is, because if you take\nthem to your standard jeweler, they'll immediately recognize\nthat these markings are",
    "start": "147550",
    "end": "152980"
  },
  {
    "text": "bad and stolen. And that's not so good. So instead, we can melt these\ncoins into other objects.",
    "start": "152980",
    "end": "160690"
  },
  {
    "text": "So our sneaky thief here has\nidentified a potential buyer.",
    "start": "160690",
    "end": "166930"
  },
  {
    "text": "And the buyer has a\nfew criteria here. So we have a buyer, and the\nbuyer has a very strange value",
    "start": "166930",
    "end": "179002"
  },
  {
    "text": "system thing, that\napparently, it's easy to take coins and make\nthem into other things.",
    "start": "179002",
    "end": "184790"
  },
  {
    "text": "But in any event, the\nbuyer, what they care about is not the fact that the\ncoins are made of gold, but rather that they like\nparticular objects better",
    "start": "184790",
    "end": "193180"
  },
  {
    "text": "than others made\nout of said gold. So in particular, they\nhave a different rate",
    "start": "193180",
    "end": "198880"
  },
  {
    "text": "for each object, a different\nprice they're willing to pay. And so they have a\nlist of n objects",
    "start": "198880",
    "end": "211230"
  },
  {
    "text": "that they're interested in. And each one is associated\nwith two things of n objects.",
    "start": "211230",
    "end": "220060"
  },
  {
    "text": "They have a price-- so the amount that the\nbuyer is willing to pay for that object, which, again,\nis not just the weight in gold,",
    "start": "220060",
    "end": "226950"
  },
  {
    "text": "for some reason. There's a value added\ntax in this universe.",
    "start": "226950",
    "end": "233280"
  },
  {
    "text": "And it takes a different\nnumber of coins to manufacture.",
    "start": "233280",
    "end": "238594"
  },
  {
    "text": "Right? So maybe I can make a\ngolden chocolate fountain,",
    "start": "238594",
    "end": "243990"
  },
  {
    "text": "and that takes 10 coins. But I don't want two of those. So if I make that, then\nthe next thing I have to do is a figurine of Eric and\nJason to put alongside it.",
    "start": "243990",
    "end": "252935"
  },
  {
    "text": "And having more\nthan one of those would also be creepy and weird. So I can only make\none of each object.",
    "start": "252935",
    "end": "258959"
  },
  {
    "text": "And of course, my goal\nhere is I have n coins. By the way, the\nfact that there's n coins and n objects for the\nbuyer doesn't really matter.",
    "start": "258959",
    "end": "268007"
  },
  {
    "text": "I mean, it will for the runtime. But you could imagine\nthis being n and m. So I wouldn't be\ntoo hung up on that.",
    "start": "268007",
    "end": "275378"
  },
  {
    "text": "And what you're trying\nto do is, of course, maximize your revenue,\nsubject to the constraints",
    "start": "275378",
    "end": "280530"
  },
  {
    "text": "that you have n coins,\nand you can't make two objects that are the same.",
    "start": "280530",
    "end": "286189"
  },
  {
    "text": "Hopefully, I've captured the\nessence of our problem OK. OK, fabulous. So as with all of our dynamic\nprogramming problems in 6006,",
    "start": "286190",
    "end": "297440"
  },
  {
    "text": "we have a paradigm for\nhow to approach them, which has a cute\nacronym, which is SRTBOT",
    "start": "297440",
    "end": "304099"
  },
  {
    "text": "And I think SRTBOT is a totally\nrelevant and straightforward approach to this problem here.",
    "start": "304100",
    "end": "310370"
  },
  {
    "text": "Yeah, so in particular,\nlet's give ourselves a bit of notation. So we're going to number\nour objects between 1 and n,",
    "start": "310370",
    "end": "317900"
  },
  {
    "text": "just for convenience. So we'll say that Pi is\nthe price of object i.",
    "start": "317900",
    "end": "327410"
  },
  {
    "text": " OK. And we'll say that Ki is\nwhat the problem calls",
    "start": "327410",
    "end": "336800"
  },
  {
    "text": "the melting number. In other words, if I\nwant to make object i,",
    "start": "336800",
    "end": "341840"
  },
  {
    "text": "this is the amount of\ncoins that I'd have to melt to make that object. OK? So just a tiny bit of notation.",
    "start": "341840",
    "end": "349240"
  },
  {
    "text": "And in general,\nso OK, what do we do when we formulate our\ndynamic programming problems?",
    "start": "349240",
    "end": "355720"
  },
  {
    "text": "Some problems we could\nsolve that are smaller. And when we compose\nthem all together,",
    "start": "355720",
    "end": "361220"
  },
  {
    "text": "we get the final\nsolution to our problem. And this particular problem,\ninvolving manufacturing objects",
    "start": "361220",
    "end": "367330"
  },
  {
    "text": "out of coins, I think is a\nreally classic one, when it comes to dynamic programming. This is the sort of\nthing where someday,",
    "start": "367330",
    "end": "374500"
  },
  {
    "text": "when you're trying to\npay for your tuition by doing these hacker\ncontests online, this is the sort of thing\nthat comes up all the time",
    "start": "374500",
    "end": "381220"
  },
  {
    "text": "in that universe, right? So in particular, the\ntwo variables here,",
    "start": "381220",
    "end": "388865"
  },
  {
    "text": "when I make a new object,\nis what object did I make? And how many coins did\nI spend when I did that?",
    "start": "388865",
    "end": "394889"
  },
  {
    "text": "So those are the two\nnatural parameters to use, when I solve my\ndynamic programming problem.",
    "start": "394890",
    "end": "399960"
  },
  {
    "text": "Yeah. And of course, it's going to\nbe recursive, in the sense that I can either choose\nto make object i or not.",
    "start": "399960",
    "end": "407590"
  },
  {
    "text": "And it doesn't matter what\norder I make my objects in or similarly, what order\nI spend my coins in, which is usually a\nnice property to have",
    "start": "407590",
    "end": "414259"
  },
  {
    "text": "in a dynamic\nprogramming universe. So in particular-- oh,\nthis thing is my nemesis.",
    "start": "414260",
    "end": "422780"
  },
  {
    "text": "This is front. I think this class\nis particularly tough for short people, because\nit's moving up and down all",
    "start": "422780",
    "end": "429780"
  },
  {
    "text": "the time. OK, so given our observation\nhere, if we're doing SRTBOT,",
    "start": "429780",
    "end": "436950"
  },
  {
    "text": "so what's our S again? Let me ask myself that-- Sub-problems. Thank you, Professor Demaine.",
    "start": "436950",
    "end": "443790"
  },
  {
    "text": "Then essentially,\nwhat we want to do, based on what I argued\nverbally, is maybe",
    "start": "443790",
    "end": "449789"
  },
  {
    "text": "define our variable\nx i, j the thing we're going to compute, to be\nthe revenue from using i coins",
    "start": "449790",
    "end": "464440"
  },
  {
    "text": "and objects 1 to j. ",
    "start": "464440",
    "end": "472930"
  },
  {
    "text": "OK. So in other words, I have\ni coins left in the bank, and I'm only allowed to\nuse the first j objects.",
    "start": "472930",
    "end": "478793"
  },
  {
    "text": "And we can already see that\nthis is kind of a sensible way to approach this\ndynamic programming problem, in the\nsense that there's",
    "start": "478793",
    "end": "485197"
  },
  {
    "text": "an obvious recursion here. I choose to make an object. I have fewer coins. And I can sort of imagine there\nbeing a topological order,",
    "start": "485197",
    "end": "493900"
  },
  {
    "text": "in the sense that I could\nfirst decide about object 1, and then object 2, and object\n3, and so on, or vice versa,",
    "start": "493900",
    "end": "499820"
  },
  {
    "text": "depending on whether you're a\nprefix or suffix kind of guy-- which I still get backward.",
    "start": "499820",
    "end": "505330"
  },
  {
    "text": "But the good news is that\nit doesn't really matter. What matters is\nformulating the equation. OK, any questions about\nour definition of the thing",
    "start": "505330",
    "end": "513880"
  },
  {
    "text": "that we're going to\nchase after here? Fabulous.",
    "start": "513880",
    "end": "519788"
  },
  {
    "text": "Ah-- OK, right.",
    "start": "519789",
    "end": "528020"
  },
  {
    "text": "So let's continue SRTBOT. So our next piece\nof our puzzle here",
    "start": "528020",
    "end": "534590"
  },
  {
    "text": "is the R. I believe R\nstands for recursion. This is a new\nacronym for me, too. Ope, no, Relate.",
    "start": "534590",
    "end": "540470"
  },
  {
    "text": "But it might as\nwell be Recursion for most of these problems. Right, so the basic relationship\nhere is that, of course,",
    "start": "540470",
    "end": "547460"
  },
  {
    "text": "I can either use object j,\nor I can not use object j.",
    "start": "547460",
    "end": "553430"
  },
  {
    "text": "And in both of those cases,\nIf j is the very last guy that I'm going to\nconsider, that'll",
    "start": "553430",
    "end": "559190"
  },
  {
    "text": "be a totally reasonable\nrecursive rule, right? So in particular,\nI have that xi,",
    "start": "559190",
    "end": "565885"
  },
  {
    "text": "j essentially can take\none of two values.",
    "start": "565885",
    "end": "571250"
  },
  {
    "text": "That's a parenthesis, in\ncase you're wondering. And of course, you're trying\nto maximize your revenue.",
    "start": "571250",
    "end": "578580"
  },
  {
    "text": "So let's do that, OK? So we have two\npotential options.",
    "start": "578580",
    "end": "589537"
  },
  {
    "text": "But we have to be a bit careful. Is there a case where\nI can't make object j? ",
    "start": "589537",
    "end": "596270"
  },
  {
    "text": "Yes, class, there is,\nwhich is the case where I don't have enough coins\nleft in the bank, right?",
    "start": "596270",
    "end": "601650"
  },
  {
    "text": "So I want to make that\nreally expensive fountain, but I only have one coin. Then I'm out of luck, yeah?",
    "start": "601650",
    "end": "607100"
  },
  {
    "text": "So let's do these two cases. So first, if-- oops, I\ngot my cases backward.",
    "start": "607100",
    "end": "621230"
  },
  {
    "text": "That's OK. Right. So let's say that I choose\nnot to make object j.",
    "start": "621230",
    "end": "626810"
  },
  {
    "text": "OK, so what does that mean? So did I spend any coins? No. And moreover, what\nis my maximum profit?",
    "start": "626810",
    "end": "633290"
  },
  {
    "text": "Well, it's going to be the\nsame as the maximum profit, using objects 1\nthrough j minus 1, because I didn't use object j.",
    "start": "633290",
    "end": "639500"
  },
  {
    "text": "Yeah? So in particular,\nthat would be x. ",
    "start": "639500",
    "end": "645450"
  },
  {
    "text": "Let's see, I got it\nbackward in my notes, so we're going to do\nit live, like that. OK?",
    "start": "645450",
    "end": "651610"
  },
  {
    "text": "And otherwise, let's say that\nI did choose to make object j. Well, what happened?",
    "start": "651610",
    "end": "656710"
  },
  {
    "text": "So I did get some\nrevenue now, right? Man, what on earth did\nI write on these notes?",
    "start": "656710",
    "end": "663690"
  },
  {
    "text": "So I get the price of\nobjects j here as my revenue. But I spent some\ncoins in the process.",
    "start": "663690",
    "end": "672490"
  },
  {
    "text": "So I have i minus K sub i,\nwhich is the number of coins.",
    "start": "672490",
    "end": "678779"
  },
  {
    "text": "What's that? AUDIENCE: K sub j. JUSTIN SOLOMON: Oh, thank\nyou-- sorry, K sub j. That's why we should be\nconsistent with our indices",
    "start": "678780",
    "end": "684930"
  },
  {
    "text": "when we write these things down. So I spent K sub j coins\nmaking this thing, object j.",
    "start": "684930",
    "end": "693470"
  },
  {
    "text": "And moreover, I can\nstill choose to make any of the previous objects. So it's still just j minus 1.",
    "start": "693470",
    "end": "700580"
  },
  {
    "text": "But I have to be careful,\nbecause I can't always do this. In particular, this had better\nbe a positive number for n,",
    "start": "700580",
    "end": "708220"
  },
  {
    "text": "or at least a\nnon-negative number. Because if I end up with a\nnegative number of coins, well, that that's not\na physical universe",
    "start": "708220",
    "end": "714910"
  },
  {
    "text": "that I choose to be in. So in particular, what\nwe need, in some sense,",
    "start": "714910",
    "end": "720550"
  },
  {
    "text": "is i minus k minus\nj, and k and j to be greater than\nor equal to 0.",
    "start": "720550",
    "end": "725990"
  },
  {
    "text": "Or equivalently, i is greater\nthan or equal to K sub j. I think you guys could\nall do that one at home.",
    "start": "725990",
    "end": "731569"
  },
  {
    "text": "OK, and this is our recursion. Hopefully, I've gotten it\nright, because it disagrees with the crazy thing I wrote in\nmy notes at 1:00 AM yesterday.",
    "start": "731570",
    "end": "738590"
  },
  {
    "text": "But I think it's\npretty straightforward. Essentially, either I can\nchoose to use the last object, or I choose not to.",
    "start": "738590",
    "end": "745160"
  },
  {
    "text": "And either one of\nthose, of course, decrements j, because\nthat's the index of the object I'm considering.",
    "start": "745160",
    "end": "751670"
  },
  {
    "text": "And I either account for the\nprice, but have to pay in gold, or I don't account\nfor the price. So implicitly, there's a 0, and\nI don't have to pay in gold.",
    "start": "751670",
    "end": "759430"
  },
  {
    "text": "OK, good. All right, so let's\ncontinue with SRTBOT. We might, later in\nthe session, relax",
    "start": "759430",
    "end": "766575"
  },
  {
    "text": "going through every\none of these steps, because a lot of the\narguments are similar. But for now, we'll do\none or two carefully.",
    "start": "766575",
    "end": "772490"
  },
  {
    "text": "So T, I believe, stands\nfor Topological order. And here, it's staring\nus in the phase.",
    "start": "772490",
    "end": "777980"
  },
  {
    "text": "Because notice that\nxi, j only depends",
    "start": "777980",
    "end": "786019"
  },
  {
    "text": "on x question mark,\ncomma, j minus 1.",
    "start": "786020",
    "end": "791570"
  },
  {
    "text": "[LAUGHING] Right? So of course, on\nyour problem set,",
    "start": "791570",
    "end": "797510"
  },
  {
    "text": "you should write\nthings more carefully. But the basic point\nhere is that there's a clear topological\norder, just by looking",
    "start": "797510",
    "end": "803420"
  },
  {
    "text": "at that second index. Because if you think of all your\nx's as variables in a graph, which we've actually\ndrawn in lecture--",
    "start": "803420",
    "end": "809639"
  },
  {
    "text": "so maybe these are all\nthe i's and then the j-- so i goes down, and\nj goes to the right.",
    "start": "809640",
    "end": "817940"
  },
  {
    "text": "Then essentially,\nthis argument is saying that all the arrows\npoint left in this graph.",
    "start": "817940",
    "end": "823280"
  },
  {
    "text": " I suppose the way I've drawn\nmy arrows isn't quite accurate.",
    "start": "823280",
    "end": "828960"
  },
  {
    "text": "But it actually doesn't matter. The only thing that\nmatters is that it goes from right to left. But I'm going to erase this,\nso you don't remember it.",
    "start": "828960",
    "end": "836639"
  },
  {
    "text": "OK. So in general,\njust when you want to make your topological\norder argument,",
    "start": "836640",
    "end": "842220"
  },
  {
    "text": "I think the totally\nsensible one is looking at the\nindices of recursion and then just trying to find\nsome number that decreases.",
    "start": "842220",
    "end": "849710"
  },
  {
    "text": "Incidentally, if you take a\ndifferential equation course, that's roughly how you prove\nthat a lot of those things converge, too.",
    "start": "849710",
    "end": "855930"
  },
  {
    "text": "So there's a generic math\ncheck that we use a lot. What do you call that\nin ODE where have",
    "start": "855930",
    "end": "861950"
  },
  {
    "text": "some number that decreases? AUDIENCE: I would call\nthat potential function. JUSTIN SOLOMON:\nPotential function-- that's a perfectly sensible one.",
    "start": "861950",
    "end": "868084"
  },
  {
    "text": "It's not Lipschitz. It's some other mathematician. Anyway, OK, so let's\ncontinue SRTBOT.",
    "start": "868085",
    "end": "874690"
  },
  {
    "text": "So next we need B,\nwhich is our Base case. So in this case, it's\npretty straightforward.",
    "start": "874690",
    "end": "881250"
  },
  {
    "text": "If I don't have any coins,\nI can't make any money. I have a t-shirt that\nsays that at home.",
    "start": "881250",
    "end": "887730"
  },
  {
    "text": "And moreover, if I\ncan't sell anything, I can't make any money. So those are pretty\nstraightforward cases.",
    "start": "887730",
    "end": "893460"
  },
  {
    "text": "So we have that 0\nequals x of 0, comma j.",
    "start": "893460",
    "end": "899100"
  },
  {
    "text": "Remember, the first index is\nthe number of coins you have. So this is saying, I\ncan't make anything.",
    "start": "899100",
    "end": "905870"
  },
  {
    "text": "I don't have any coins. And similarly, equals x\ni, comma 0 for all i, j.",
    "start": "905870",
    "end": "914079"
  },
  {
    "text": "So this is the coins\nand the objects. OK.",
    "start": "914080",
    "end": "920070"
  },
  {
    "text": "So let's see. I keep writing these\nproblem sessions too big and then spending\nhalf of it erasing. So let's try and fit\nthis on one board here.",
    "start": "920070",
    "end": "926440"
  },
  {
    "text": "So we're going to do SRTBOT. Then the second--\nno, the first O,",
    "start": "926440",
    "end": "932040"
  },
  {
    "text": "because there's no O in SRT-- is the original problem\nthat you want to solve.",
    "start": "932040",
    "end": "938080"
  },
  {
    "text": "So of course, you start out\nwith n objects and n coins.",
    "start": "938080",
    "end": "943420"
  },
  {
    "text": "So the original problem\nwe want to solve is equivalent to\ncomputing x income n.",
    "start": "943420",
    "end": "950070"
  },
  {
    "text": "And then finally, we've\ngot to do our runtime. T stands for runtime,\nor Time, I suppose.",
    "start": "950070",
    "end": "957570"
  },
  {
    "text": "So first of all, how\nmany problems are there? Well, there's x i, j. Both I can go from 0 to n.",
    "start": "957570",
    "end": "965040"
  },
  {
    "text": "This is a great\nway to be off by 1. So there's n plus 1\nsquared sub problems.",
    "start": "965040",
    "end": "975710"
  },
  {
    "text": "And how much work does\neach sub-problem do? Well, it does boring work. It's just a formula. Right?",
    "start": "975710",
    "end": "981230"
  },
  {
    "text": "So there's order 1\nwork per sub-problem.",
    "start": "981230",
    "end": "988079"
  },
  {
    "text": "So the overall algorithm\ntakes n squared time.",
    "start": "988080",
    "end": "993750"
  },
  {
    "text": "So I promised to do something\nin our last problem session. Then I didn't actually do it. So I did think I would spend\njust a minute here translating",
    "start": "993750",
    "end": "1002380"
  },
  {
    "text": "what this SRTBOT thing\nwould mean in terms of code. Because I think that it's\na little bit implicit here.",
    "start": "1002380",
    "end": "1007930"
  },
  {
    "text": "In particular, I\nthink this step here, I mean, you will see\nthat it really clearly",
    "start": "1007930",
    "end": "1013203"
  },
  {
    "text": "is going to give\nyou an algorithm. But I think it's kind of easy\nto, again, just to forget what",
    "start": "1013203",
    "end": "1018690"
  },
  {
    "text": "your code actually looks like. And actually, the\ncoding problems on these problem sessions\nare almost too interesting and can obscure it a little bit.",
    "start": "1018690",
    "end": "1025630"
  },
  {
    "text": "So I thought we'd\ndo a boring problem and show you that it's really\nnot so hard to do this. And in fact, we covered two\ndifferent strategies in class",
    "start": "1025630",
    "end": "1033910"
  },
  {
    "text": "for how to take\nSRTBOT and convert it into a piece of code. Although, they might have zipped\npast you in this 2x speed thing",
    "start": "1033910",
    "end": "1041890"
  },
  {
    "text": "that you can do now. So here are two options. One of them is\ncalled memoization.",
    "start": "1041890",
    "end": "1048339"
  },
  {
    "text": "And the other, I don't\nknow, bottom up, I guess, is a reasonable\nphrase to describe. And so I thought\nwe'd do them both,",
    "start": "1048339",
    "end": "1053590"
  },
  {
    "text": "because they're both easy\nfor this particular problem. ",
    "start": "1053590",
    "end": "1059440"
  },
  {
    "text": "OK. Right. So let's do that. So is this necessary\non your homework?",
    "start": "1059440",
    "end": "1067990"
  },
  {
    "text": "Strictly speaking, no. If you've gone through SRTBOT,\nthen essentially, everything that happens after\nthat is boilerplate,",
    "start": "1067990",
    "end": "1074799"
  },
  {
    "text": "in terms of converting these\nsteps into a piece of code or an algorithm. But I do think, just\nfor understanding",
    "start": "1074800",
    "end": "1080590"
  },
  {
    "text": "why SRTBOT makes\nsense, it's worth thinking about for a minute. So option A here is memoization.",
    "start": "1080590",
    "end": "1087700"
  },
  {
    "text": " Ironically, I've taught and\nTA'd algorithms a few times,",
    "start": "1087700",
    "end": "1093900"
  },
  {
    "text": "and I never actually knew\nwhat memoization meant. So I learned something from\nEric's lecture the other day.",
    "start": "1093900",
    "end": "1100110"
  },
  {
    "text": "Which remember, memoization\nis the key thing in what, apparently, is a\nmade-up word, is memo--",
    "start": "1100110",
    "end": "1107190"
  },
  {
    "text": "if you're back in the day,\nand you had a steno pad, and you were writing down stuff. Because that's how you solved\nproblems, with your slide rule.",
    "start": "1107190",
    "end": "1115830"
  },
  {
    "text": "Then essentially, the idea\nis that, if I compute x i, j for some i, j pair, I\nshouldn't compute it again.",
    "start": "1115830",
    "end": "1123100"
  },
  {
    "text": "I should just write it\ndown on my memo pad. Stenoization sounds\nbetter to me. But I suppose we'd have to go\nback to the 1940s and fix it.",
    "start": "1123100",
    "end": "1132580"
  },
  {
    "text": "OK, so let's\nactually write down. I'm going to write down\npseudocode, that will probably look more like Matlab,\nbecause I'm that kind of guy.",
    "start": "1132580",
    "end": "1140120"
  },
  {
    "text": "So let's say that\nI wanted to make a function, which, I guess,\nis revenue of i, j, like that.",
    "start": "1140120",
    "end": "1151490"
  },
  {
    "text": "Bah. And this is the thing\nI wanted to compute.",
    "start": "1151490",
    "end": "1156632"
  },
  {
    "text": "That's actually going to be\na problem, because we're not going to be able to see. OK, right.",
    "start": "1156632",
    "end": "1163350"
  },
  {
    "text": "So in addition to this, I'm\ngoing to pass in an array",
    "start": "1163350",
    "end": "1168510"
  },
  {
    "text": "x, which is going to\nbe like my memo pad. This is going to be\nterrible coding practice,",
    "start": "1168510",
    "end": "1173730"
  },
  {
    "text": "but easy board coding practice. So if I were in C++, maybe\nI'm passing by reference, so that when I edit--",
    "start": "1173730",
    "end": "1180560"
  },
  {
    "text": "that's a treble\nclef, but whatever-- when I edit x, it actually\npersists when I recurse.",
    "start": "1180560",
    "end": "1187309"
  },
  {
    "text": "This is terrible\ncoding practice, and you shouldn't do it. OK? But it's just going\nto be because I don't want to write too many\nlines on the board here.",
    "start": "1187310",
    "end": "1195480"
  },
  {
    "text": "And maybe we initialize. We have some helper\nfunction to--",
    "start": "1195480",
    "end": "1203630"
  },
  {
    "text": "let's see, we want\nour revenue to be big. Well, actually no. We'll just initialize\nit to not a number,",
    "start": "1203630",
    "end": "1209910"
  },
  {
    "text": "so that we know that we\nhaven't computed it yet. How about that? OK, so what should we do?",
    "start": "1209910",
    "end": "1217807"
  },
  {
    "text": "Well, if we're going to memoize,\nthe first thing we should do, any time that I call my\nrevenue function on an i,",
    "start": "1217807",
    "end": "1222977"
  },
  {
    "text": "j pair is check that\nI've already computed it. Yeah? So in my goofy, bad board-coding\nstyle here, what could I do?",
    "start": "1222977",
    "end": "1229668"
  },
  {
    "text": "I'd say, well, if I've\nalready computed it, then this thing won't\nequal NaN anymore and won't be not a number.",
    "start": "1229668",
    "end": "1234740"
  },
  {
    "text": "So I can say, OK, if x is\nnot equal to not a number--",
    "start": "1234740",
    "end": "1242059"
  },
  {
    "text": "so in other words,\nit is a number-- return. ",
    "start": "1242060",
    "end": "1249210"
  },
  {
    "text": "And this, I think that this\nlittle line of code here, it gets a little lost. But this, we should\nput sparkles around it.",
    "start": "1249210",
    "end": "1257020"
  },
  {
    "text": "This is the magic of\ndynamic programming, because I just killed\nrecursive calls.",
    "start": "1257020",
    "end": "1263309"
  },
  {
    "text": "Even if i and j are 17 and\n23, if I already computed it, I'm done, right? I don't have to call\nmy recursion again.",
    "start": "1263310",
    "end": "1270990"
  },
  {
    "text": "OK. And otherwise, what\nam I going to do? ",
    "start": "1270990",
    "end": "1277330"
  },
  {
    "text": "Well, otherwise,\nI'll maybe call-- do I want to write it all down? I don't want to\nwrite it all down.",
    "start": "1277330",
    "end": "1283717"
  },
  {
    "text": " So otherwise, I'm going\nto evaluate, R, where",
    "start": "1283717",
    "end": "1295000"
  },
  {
    "text": "R is this formula over here. Notice that this will require\nrecursive calls, right?",
    "start": "1295000",
    "end": "1303970"
  },
  {
    "text": "And I'm going to store it in\nx i, j and then return x i, j.",
    "start": "1303970",
    "end": "1313131"
  },
  {
    "text": " OK? So basically, the\nonly difference",
    "start": "1313131",
    "end": "1319090"
  },
  {
    "text": "between what we've seen\nin the first 2/3 of 6006 and now is this beautiful line\nof code, saying, if I already",
    "start": "1319090",
    "end": "1325929"
  },
  {
    "text": "computed this thing, return it. And this is the memoized\nversion of our algorithm.",
    "start": "1325930",
    "end": "1331399"
  },
  {
    "text": "I think this is the easiest\none to maybe think about. But actually, from\na runtime analysis,",
    "start": "1331400",
    "end": "1336970"
  },
  {
    "text": "it's a little bit annoying. It's not in the sense that\nwe convinced ourselves that SRTBOT is OK.",
    "start": "1336970",
    "end": "1342160"
  },
  {
    "text": "But of course, if you're\nthinking about your recursion tree, what's happening\nis that you're maybe convincing yourself that\nthis piece can be lopped off",
    "start": "1342160",
    "end": "1350140"
  },
  {
    "text": "in your function calls. So you have to do your\ncounting carefully.",
    "start": "1350140",
    "end": "1355850"
  },
  {
    "text": "There's a different way to\nimplement the same thing. So this would be\noption B. This is maybe",
    "start": "1355850",
    "end": "1362198"
  },
  {
    "text": "more efficient,\nmaybe less efficient, depending on your problem. But these are all within\nconstant factors of each other, for the most part--",
    "start": "1362198",
    "end": "1368130"
  },
  {
    "text": "not always, but\nfor the most part. This would be bottom up.",
    "start": "1368130",
    "end": "1373400"
  },
  {
    "text": "And this is the idea\nof, rather than just taking our recursive algorithm\nthat we already know, and then just checking a\ntable to say, like, OK,",
    "start": "1373400",
    "end": "1381033"
  },
  {
    "text": "did I already do this? And in that case, return it,\nin the bottom-up version, I'm going to build up my array\nx i, j because so there's",
    "start": "1381033",
    "end": "1389000"
  },
  {
    "text": "no recursion at all. So what would that look like? So in the bottom-up case,\nnotice that, in some sense,",
    "start": "1389000",
    "end": "1396770"
  },
  {
    "text": "memoization is a\ntop-down strategy. I would call it on n, comma n. Here, we're going\nto start from 0",
    "start": "1396770",
    "end": "1402345"
  },
  {
    "text": "and work our way\ntoward n, right? So we'll start\nwith x 0, j equals",
    "start": "1402345",
    "end": "1409909"
  },
  {
    "text": "x i, 0 equals 0 for all i, j. Obviously, I can do\nthis with a for loop.",
    "start": "1409910",
    "end": "1417710"
  },
  {
    "text": "And now, well,\nremember, if we think about our topological\norder, x i,",
    "start": "1417710",
    "end": "1422720"
  },
  {
    "text": "j only depends on\nprevious j's, right? So it makes sense to have an\nouter loop, which is over j.",
    "start": "1422720",
    "end": "1428270"
  },
  {
    "start": "1428270",
    "end": "1434600"
  },
  {
    "text": "And now, inside of\nthis outer loop, I can compute anything that\nI want in that j column of x.",
    "start": "1434600",
    "end": "1442460"
  },
  {
    "text": "And I'm in good shape, because\nI'm building it up one column at a time, right? So in particular, now we\ncan do our loop over i",
    "start": "1442460",
    "end": "1453480"
  },
  {
    "text": "and then just have x j and\nnow evaluate our R step",
    "start": "1453480",
    "end": "1459900"
  },
  {
    "text": "in our SRTBOT paradigm. And notice that\nthat's perfectly fine. Because by the time I\nget to computing x i,",
    "start": "1459900",
    "end": "1466425"
  },
  {
    "text": "j, I've already filled\nin x i, j minus 1, which is all I needed to\nevaluate that formula.",
    "start": "1466425",
    "end": "1472600"
  },
  {
    "text": "So what are the advantages\nand disadvantages here? So notice that here, our runtime\nis staring you in the phase.",
    "start": "1472600",
    "end": "1477760"
  },
  {
    "text": "Right? We have n squared sub-problems,\norder 1 work, and you're done.",
    "start": "1477760",
    "end": "1483620"
  },
  {
    "text": "On the other hand,\nthere's some possibility. If you were an\nold-school AI person,",
    "start": "1483620",
    "end": "1489850"
  },
  {
    "text": "you might be able to do some\npruning on your left-hand side",
    "start": "1489850",
    "end": "1495450"
  },
  {
    "text": "that I can't do over here. Right? So here, I'm\nliterally evaluating every entry of x i, j.",
    "start": "1495450",
    "end": "1501632"
  },
  {
    "text": "It's not the case for\nthis particular problem, but maybe x i, j only\ndepends on x i, j minus 5.",
    "start": "1501633",
    "end": "1507913"
  },
  {
    "text": "This strategy is going to still\nbuild up that whole table. This one, maybe you can\nskip over some entries. So in practice, it could help.",
    "start": "1507913",
    "end": "1514090"
  },
  {
    "text": "On the other hand, here, I've\ngot a bunch of recursive calls I've put on the\nstack of my computer, that here, I don't have.",
    "start": "1514090",
    "end": "1520532"
  },
  {
    "text": "So I think, actually, because\nof the overhead of recursion, typically, the\nstrategy on the right is preferred; also, for clarity.",
    "start": "1520532",
    "end": "1526980"
  },
  {
    "text": "But that's a blanket statement\nthat I shouldn't make. OK, so anyway, I think I've\ndone this problem to death.",
    "start": "1526980",
    "end": "1534289"
  },
  {
    "text": "Are there any questions here? I just thought I'd fill in for\nsomething I promised last time and didn't actually do.",
    "start": "1534290",
    "end": "1541080"
  },
  {
    "text": "OK, fabulous. So we'll go on to problem 9-2.",
    "start": "1541080",
    "end": "1547710"
  },
  {
    "text": "So this is continuing\nfrom last time in the saga of Tim\nthe Beaver here. So I forget what Tim the Beaver\nwas doing in our last problem",
    "start": "1547710",
    "end": "1555300"
  },
  {
    "text": "session. But today, Tim the Beaver\nis going to the career fair.",
    "start": "1555300",
    "end": "1561060"
  },
  {
    "text": "And as we all know,\nthe only real purpose of going to a career fair\nis to pick up free stuff.",
    "start": "1561060",
    "end": "1569420"
  },
  {
    "text": " We joke. Actually, you guys should\nall go to the career fair. I got my first\njob out of college",
    "start": "1569420",
    "end": "1575990"
  },
  {
    "text": "by going to a career\nfair and haranguing somebody that picks our\nbooth, until they let me in.",
    "start": "1575990",
    "end": "1582270"
  },
  {
    "text": "But in any event,\nso Tim the Beaver",
    "start": "1582270",
    "end": "1587330"
  },
  {
    "text": "is not interested\nin getting a job, but rather just wants swag,\njust wants free stuff out of booths at the career fair.",
    "start": "1587330",
    "end": "1594039"
  },
  {
    "text": "OK? So in this particular\nproblem, there's n booths--",
    "start": "1594040",
    "end": "1599700"
  },
  {
    "text": "is it booths? It's certainly not boots. I don't know. There are n booths, each\nof which has a swag.",
    "start": "1599700",
    "end": "1607640"
  },
  {
    "text": "And in particular,\neach swag has a value associated to it,\nwhich is Ci, which",
    "start": "1607640",
    "end": "1614660"
  },
  {
    "text": "is the coolness of object i.",
    "start": "1614660",
    "end": "1620780"
  },
  {
    "text": "It additionally has Wi. This is the weight of object i.",
    "start": "1620780",
    "end": "1627930"
  },
  {
    "text": "And just to make this\nproblem verbally difficult to communicate, there's a\nW-A-I-T associated with each",
    "start": "1627930",
    "end": "1636860"
  },
  {
    "text": "object, which is the time it\ntakes to wait in line and pick",
    "start": "1636860",
    "end": "1641929"
  },
  {
    "text": "up object i. OK? And Tim the Beaver, if there's\nsome ridiculously cool object with a little wait time, he\nmight just keep getting in line",
    "start": "1641930",
    "end": "1649970"
  },
  {
    "text": "and getting more of that object. So unlike Ceal Naffrey\non our first problem,",
    "start": "1649970",
    "end": "1657360"
  },
  {
    "text": "Tim the Beaver is perfectly\nhappy to have more than one of the same thing. OK. ",
    "start": "1657360",
    "end": "1665080"
  },
  {
    "text": "In addition to\nthis, just to make this problem, in my\nopinion, slightly more annoying and point-losing,\nTim the Beaver",
    "start": "1665080",
    "end": "1673780"
  },
  {
    "text": "also takes one minute to\nget in line at any booth. So we're just going to\nhave to remember that when",
    "start": "1673780",
    "end": "1679150"
  },
  {
    "text": "we account for our time ti. OK. So let's continue adding some\nmore constants to our problem.",
    "start": "1679150",
    "end": "1688250"
  },
  {
    "text": "So each booth has an object\nwhich has coolness, Ci, weight Wi, time ti.",
    "start": "1688250",
    "end": "1694690"
  },
  {
    "text": "Tim is carrying a bag. The bag can hold a\nparticular weight. b.",
    "start": "1694690",
    "end": "1705340"
  },
  {
    "text": "So this is the max weight\nthat Tim can hold in his bag",
    "start": "1705340",
    "end": "1712120"
  },
  {
    "text": "at any given time. And finally, Tim\nis a greedy beaver,",
    "start": "1712120",
    "end": "1718870"
  },
  {
    "text": "but he also can go home,\nor go back to his dam,",
    "start": "1718870",
    "end": "1724140"
  },
  {
    "text": "I suppose, and empty his bag. Right? And so h is the amount of\ntime to go home and back",
    "start": "1724140",
    "end": "1740760"
  },
  {
    "text": "and empty his bag,\nin the meantime. And again, just to\nbe annoying, don't",
    "start": "1740760",
    "end": "1746280"
  },
  {
    "text": "forget he incurs plus 1\nto get in the next line. This is what made my answer\nwrong, and I'm bitter. So I'm going to keep\ncomplaining about it.",
    "start": "1746280",
    "end": "1752910"
  },
  {
    "text": "OK. So of course, what\nhe wants is the max. ",
    "start": "1752910",
    "end": "1760110"
  },
  {
    "text": "What would economists call this? I don't know. But for Tim the Beaver, he wants\nthe max total coolness, or MTC,",
    "start": "1760110",
    "end": "1769955"
  },
  {
    "text": "which is, of course, a\nnumber that we're all trying to optimize, in k minutes.",
    "start": "1769955",
    "end": "1777600"
  },
  {
    "text": "You might remember\nthose old TV shows, where you get one minute\nin a grocery store to empty the shells into\nyour cart kind of thing.",
    "start": "1777600",
    "end": "1786340"
  },
  {
    "text": "So he wants to do this,\nand the computation time that he's reserved for\nthis is an order nbk.",
    "start": "1786340",
    "end": "1794929"
  },
  {
    "text": "And I know it's a big setup. I tried to document all the\ndifferent constants that are in this problem.",
    "start": "1794930",
    "end": "1800410"
  },
  {
    "text": "I don't think I missed any here. OK, fabulous. So incidentally, continuing on--",
    "start": "1800410",
    "end": "1806500"
  },
  {
    "text": "AUDIENCE: What's k? JUSTIN SOLOMON: k-- k is\nthe total amount of time that Tim the Beaver has allotted\nto do his job fair scavenging.",
    "start": "1806500",
    "end": "1818490"
  },
  {
    "text": "Fabulous. Any other? Cool.",
    "start": "1818490",
    "end": "1824179"
  },
  {
    "text": "OK. Notice that this is going to\nbe an example of a problem that",
    "start": "1824180",
    "end": "1829190"
  },
  {
    "text": "was not kosher in last\nweek's problem session, in the sense that k is\nincluded in our runtime.",
    "start": "1829190",
    "end": "1834390"
  },
  {
    "text": "Right? But what is k? It's just a number. k doesn't scale in the size of\nyour problem in a linear way.",
    "start": "1834390",
    "end": "1841950"
  },
  {
    "text": "So it's not going to matter\nfor how we solve our problem But it is just a feature\nthat's worth pointing out.",
    "start": "1841950",
    "end": "1848090"
  },
  {
    "text": "OK. So how do we solve dynamic\nprogramming problems? We use SRTBOT, or a Señor BST,\nif you are watching previous",
    "start": "1848090",
    "end": "1858110"
  },
  {
    "text": "iterations of this course. OK, so right, so let's do that.",
    "start": "1858110",
    "end": "1864650"
  },
  {
    "text": "See, I'm trying\nto conserve space. This is not going to\nend up succeeding. So again, what are the\ndifferent sub-problems here?",
    "start": "1864650",
    "end": "1873230"
  },
  {
    "text": "Well, what are the\ndifferent things that are limiting Tim the Beaver?",
    "start": "1873230",
    "end": "1878550"
  },
  {
    "text": "What are his constraints? Well, he only has so much time. And this is going to sound\nmore philosophical in intent,",
    "start": "1878550",
    "end": "1887180"
  },
  {
    "text": "but time always moves\nforward for Tim the Beaver. So this is a pretty\ngood candidate",
    "start": "1887180",
    "end": "1892580"
  },
  {
    "text": "in terms of dynamic programming. Because there's not going to\nbe some cyclical dependency. Remember that in\ndynamic programming,",
    "start": "1892580",
    "end": "1898460"
  },
  {
    "text": "we're all about trying to\nidentify topological orderings in our sub-problems. And when you see\nsomething like time,",
    "start": "1898460",
    "end": "1904700"
  },
  {
    "text": "not only does it also begin with\nt, but it's useful in the sense that time moves forward.",
    "start": "1904700",
    "end": "1910460"
  },
  {
    "text": "There's never a case\nwhere Tim the Beaver purchases a weird\nWarp Speed airplane",
    "start": "1910460",
    "end": "1916280"
  },
  {
    "text": "and somehow goes back in time. That doesn't happen in this\nparticular homework problem and for Tim the\nBeaver's for sake,",
    "start": "1916280",
    "end": "1922470"
  },
  {
    "text": "I hope in no homework problems.  So this is a long-winded\nway of saying",
    "start": "1922470",
    "end": "1928640"
  },
  {
    "text": "that time is a pretty\nreasonable constraint to put in our problem, not a\nconstraint as much as an index,",
    "start": "1928640",
    "end": "1934279"
  },
  {
    "text": "I guess. Moreover, there's\nanother thing which is limiting Tim\nthe Beaver, which",
    "start": "1934280",
    "end": "1941000"
  },
  {
    "text": "is the capacity of his bag. Remember, he can\nonly hold weight b. But this one should give you\nthe heebie-jeebies a little bit.",
    "start": "1941000",
    "end": "1948830"
  },
  {
    "text": "Because this\nproblem, as a twist, has allowed the bag\nto empty itself out.",
    "start": "1948830",
    "end": "1955730"
  },
  {
    "text": "So it's not true\nthat somehow, you can come up with sub-problems\nwhere Tim the Beaver is just",
    "start": "1955730",
    "end": "1962690"
  },
  {
    "text": "monotonically decreasing\nthe weight of his bag. However, if he does choose to\ndecrease the weight of his bag,",
    "start": "1962690",
    "end": "1970290"
  },
  {
    "text": "he has to spend time doing it. So time continues to move\nforward for Tim the Beaver. And that's what's going to\ngive us our topological order.",
    "start": "1970290",
    "end": "1977280"
  },
  {
    "text": "Yeah? This is a little too\nphilosophical, I guess. But in some sense, this is\na long-winded way of saying,",
    "start": "1977280",
    "end": "1982710"
  },
  {
    "text": "for our SRTBOT paradigm here, a\ntotally reasonable thing to do would be to have x i, j--",
    "start": "1982710",
    "end": "1992163"
  },
  {
    "text": "I don't think, in this class,\nwe do this definition notation. So just x i, j equals\nthe max coolness",
    "start": "1992163",
    "end": "2004790"
  },
  {
    "text": "where he has i minutes,\nand he has j weight--",
    "start": "2004790",
    "end": "2012610"
  },
  {
    "text": " let me glance at\nmy answer to see if it's left in his bag or\nweight that he's carrying.",
    "start": "2012610",
    "end": "2020350"
  },
  {
    "text": "Left in his bag-- either one would make\na reasonable problem. I'm just bad at\nlooking at my notes",
    "start": "2020350",
    "end": "2027252"
  },
  {
    "text": "and seeing them\ndisagree with the board. So I'm going to try\nand stay consistent. OK, so x i, j is the MTC, but\nin i minutes with j weight left,",
    "start": "2027253",
    "end": "2036399"
  },
  {
    "text": "rather than in k minutes\nwith b weight, which is going to be our base problem.",
    "start": "2036400",
    "end": "2042660"
  },
  {
    "text": "OK. Oh no, I did it out of order. Disregard that. We'll get to the b in a minute.",
    "start": "2042660",
    "end": "2048100"
  },
  {
    "text": "OK. ",
    "start": "2048100",
    "end": "2056908"
  },
  {
    "text": "OK, so that's our sub-problems. ",
    "start": "2056909",
    "end": "2064929"
  },
  {
    "text": "So now let's do the R in SRTBOT. [LAUGHING] I hate this\nclassroom so much.",
    "start": "2064929",
    "end": "2071882"
  },
  {
    "text": " I'm sorry. So right, so let's say that Tim\nthe Beaver has i minutes left",
    "start": "2071882",
    "end": "2080658"
  },
  {
    "text": "on the clock. And he has j weight in his bag. He's got a number of\nactions that he can take.",
    "start": "2080659",
    "end": "2086819"
  },
  {
    "text": "Yeah? And let's think about what\nall those actions are. By the way, there's one thing\nthat plausibly, Tim the Beaver",
    "start": "2086820",
    "end": "2094408"
  },
  {
    "text": "could do. But he doesn't really need to,\nis do nothing now, but then in 10 seconds, do something.",
    "start": "2094409",
    "end": "2101908"
  },
  {
    "text": "You could account for\nthat in this problem, but there's not a reason, right? He might as well stack\nup all his actions",
    "start": "2101908",
    "end": "2107119"
  },
  {
    "text": "and then leave all of his\nleftover time at the end. You convince yourself\nthat that's sort of OK.",
    "start": "2107120",
    "end": "2112900"
  },
  {
    "text": "Tim prefers a\ncompressed schedule. Right. So he's got a lot of\nenergy, this Beaver.",
    "start": "2112900",
    "end": "2118535"
  },
  {
    "text": "That's what they say. They're nature's construction\nworkers, something? OK.",
    "start": "2118535",
    "end": "2125450"
  },
  {
    "text": "All right, so let's think\nabout all of our options. So for one, Tim the Beaver\ncould not do a damn thing.",
    "start": "2125450",
    "end": "2132263"
  },
  {
    "text": "He could just sit around\nfor the rest of time, and that would be\nperfectly fine. So a different way of putting\nthat is that he could give up.",
    "start": "2132263",
    "end": "2139690"
  },
  {
    "text": "How much coolness would\nTim get from giving up? 0. That's right, kids.",
    "start": "2139690",
    "end": "2145930"
  },
  {
    "text": "Giving up makes you zero cool. So OK, so Tim the Beaver\nis trying to maximize.",
    "start": "2145930",
    "end": "2153760"
  },
  {
    "text": "He has a lot of\ndifferent options. One of them is 0,\nmeaning he gave up.",
    "start": "2153760",
    "end": "2162850"
  },
  {
    "text": "Right? Notice he could recurse. Like, x-- I guess\nwhat would be-- he could give up for one minute,\nand have that be x i minus 1j,",
    "start": "2162850",
    "end": "2171140"
  },
  {
    "text": "or something. I forget if I'm going\nto do i plus 1 or i minus 1. i minus 1j.",
    "start": "2171140",
    "end": "2177553"
  },
  {
    "text": "But there's no reason. He can just give up and stop. That would just be\nextra recursive cost for no good reason.",
    "start": "2177553",
    "end": "2183820"
  },
  {
    "text": "OK. The next thing\nthat he could do is he could get in\nline for a booth. Right?",
    "start": "2183820",
    "end": "2189480"
  },
  {
    "text": "So first, let's work\nout what happens then. So for one, he gets coolness.",
    "start": "2189480",
    "end": "2195150"
  },
  {
    "text": "Let's say that he\ngets into booth k. So he gets coolness\nCk when he does that.",
    "start": "2195150",
    "end": "2200789"
  },
  {
    "text": "And now he can recurse. So first, you have to\naccount for the time. So it takes tk--",
    "start": "2200790",
    "end": "2208380"
  },
  {
    "text": "that's a t-- time. Or does it? No. Because it takes an\nextra minute for him",
    "start": "2208380",
    "end": "2214717"
  },
  {
    "text": "to get in the next line,\nor to get in this line. I guess this is better.",
    "start": "2214717",
    "end": "2220099"
  },
  {
    "text": "And moreover, he needs to\naccount for j minus Wk,",
    "start": "2220100",
    "end": "2227180"
  },
  {
    "text": "like that. Can he always do this? No, he needs to have\nthis much time remaining,",
    "start": "2227180",
    "end": "2232280"
  },
  {
    "text": "and he needs this\nmuch time in his bag-- or this much weight\nremaining in his bag.",
    "start": "2232280",
    "end": "2240218"
  },
  {
    "text": "You guys can work\nout the inequality. But since I only\nhave a foot here, I'll just say, if applicable. ",
    "start": "2240218",
    "end": "2247590"
  },
  {
    "text": "This is a great way to lose\npoints on your homework. But for board-writing, it's OK. So when I say applicable, I mean\nthese two numbers had better",
    "start": "2247590",
    "end": "2254330"
  },
  {
    "text": "be greater than or equal to 0. OK? And you can do this\nfor all k, right?",
    "start": "2254330",
    "end": "2259730"
  },
  {
    "text": "So in other words, he can\nchoose to get into booth k. And Tim has the third option,\nwhich is he can go home.",
    "start": "2259730",
    "end": "2266690"
  },
  {
    "text": "OK? So what happens if he goes home?  Does Tim the Beaver get\ncooler when he goes home?",
    "start": "2266690",
    "end": "2273530"
  },
  {
    "text": "No, I'm afraid to say. ",
    "start": "2273530",
    "end": "2280010"
  },
  {
    "text": "But he does spend time. So how much time does he spend?",
    "start": "2280010",
    "end": "2285370"
  },
  {
    "text": "h--  AUDIENCE: He should\nhave lost coolness. JUSTIN SOLOMON: What was that?",
    "start": "2285370",
    "end": "2290906"
  },
  {
    "text": "AUDIENCE: He should\nhave lost coolness. JUSTIN SOLOMON: He should have\nlost coolness by going home. No, home is cool, guys,\nespecially this semester.",
    "start": "2290906",
    "end": "2298710"
  },
  {
    "text": "Stay home. Stay indoors. Right. So he loses home time h and\n1 to get in the next line.",
    "start": "2298710",
    "end": "2306829"
  },
  {
    "text": "OK? But he's got a devil's\nbargain, of sorts. He loses time, but he\ngains bag, bagginess.",
    "start": "2306830",
    "end": "2316590"
  },
  {
    "text": "Weight is the word that I'm\nlooking for, b, like that. OK?",
    "start": "2316590",
    "end": "2321720"
  },
  {
    "text": "Again, in this case,\nremember that he still needs, if i is greater than h.",
    "start": "2321720",
    "end": "2327670"
  },
  {
    "text": "Otherwise, he's in trouble. By the way, I wrote\nthis in an annoying way.",
    "start": "2327670",
    "end": "2333490"
  },
  {
    "text": "A different way of saying\nthat is i minus h minus 1 is greater than or\nequal to 0, which is really what's applicable\nin every recursive call.",
    "start": "2333490",
    "end": "2339807"
  },
  {
    "text": "But this is strict\ngreater than [INAUDIBLE].. There's another little thing\nthat caught me up, when I was reading the answer here.",
    "start": "2339807",
    "end": "2344810"
  },
  {
    "text": "OK, and those are all the\noptions for Tim the Beaver, yeah? Notice that every\none of our options",
    "start": "2344810",
    "end": "2350840"
  },
  {
    "text": "either gives up completely\nor decreases time.",
    "start": "2350840",
    "end": "2356070"
  },
  {
    "text": "So we have our\ntopological order, which is, again,\nthe arrow of time",
    "start": "2356070",
    "end": "2361910"
  },
  {
    "text": "always continues\nto move forward. I'm going to prove that\nrigorously by putting a check mark next to the letter T.\nAgain, on your homework,",
    "start": "2361910",
    "end": "2368450"
  },
  {
    "text": "you should write\nout your answers. What is our base case for Tim?",
    "start": "2368450",
    "end": "2373779"
  },
  {
    "text": "Well, how much coolness do\nyou get, if you have no time?",
    "start": "2373780",
    "end": "2379940"
  },
  {
    "text": "0 coolness. That's how much. So we have this expression,\nx0j equals 0 for all j.",
    "start": "2379940",
    "end": "2392550"
  },
  {
    "text": "Incidentally, although\nit's perfectly fine to have this be your base\ncase, actually, in some sense,",
    "start": "2392550",
    "end": "2397840"
  },
  {
    "text": "I didn't need it, because\nTim the Beaver always had the option of giving up. So you could, I guess,\nin this problem,",
    "start": "2397840",
    "end": "2402940"
  },
  {
    "text": "have no base case,\nif you really wanted. It would be OK,\nbut kind of weird.",
    "start": "2402940",
    "end": "2408880"
  },
  {
    "text": "OK. And what's our original problem? Well, he starts out with\ntime k and weight capacity b",
    "start": "2408880",
    "end": "2416860"
  },
  {
    "text": "in his bag. So it's x k, b. And then finally, we need\nto do our runtime analysis.",
    "start": "2416860",
    "end": "2425300"
  },
  {
    "text": "So how many\nsub-problems are there? Well, again, a\nsub-problem is basically just the number of indexes for\nmost of our dynamic programming",
    "start": "2425300",
    "end": "2432100"
  },
  {
    "text": "problems. Right? So the first index is time.",
    "start": "2432100",
    "end": "2438450"
  },
  {
    "text": "The second one is bag size. This is always between 0 and b.",
    "start": "2438450",
    "end": "2443790"
  },
  {
    "text": "This is always between 0 and k. So there's order\nkb sub-problems.",
    "start": "2443790",
    "end": "2452789"
  },
  {
    "text": "How much time does\neach sub-problem take? Well, notice that I\nhave to loop over all of my different options k here.",
    "start": "2452790",
    "end": "2459910"
  },
  {
    "text": "So I incur-- oh, I'm noticing\nk is abused in our answer",
    "start": "2459910",
    "end": "2469132"
  },
  {
    "text": "to this problem. We should use k only once. OK, so here's where\nI made a mistake.",
    "start": "2469133",
    "end": "2475518"
  },
  {
    "text": "And I believe it's in\nthe written solution, but I'm not going to take now. There's k, which is the total\ntime that Tim the Beaver has,",
    "start": "2475518",
    "end": "2481569"
  },
  {
    "text": "and there's the k that\nI use as an index here. And those are not the same. I guess I can make\nthis k bar really fast.",
    "start": "2481570",
    "end": "2490319"
  },
  {
    "text": "There you go, problem solved. And I just noticed that,\nbecause I was doing my runtime. And it's not order k.",
    "start": "2490320",
    "end": "2497200"
  },
  {
    "text": "It's the loop over\nall the k bars. How many k bars are there?",
    "start": "2497200",
    "end": "2502390"
  },
  {
    "text": "Well, these are all\nthe different booths, and those are n of those. So this is order n\ntime per sub-problem,",
    "start": "2502390",
    "end": "2511410"
  },
  {
    "text": "which gives me a total\nruntime of order kbn, which,",
    "start": "2511410",
    "end": "2516809"
  },
  {
    "text": "I believe-- oh-oh, our desired\nruntime was order nbk.",
    "start": "2516810",
    "end": "2521917"
  },
  {
    "text": "But I think we can convince\nourselves that indeed, those are the same thing. OK, so my apologies for a slight\noverloaded character here.",
    "start": "2521917",
    "end": "2530320"
  },
  {
    "text": "But honestly, it's one of those\nthings, if you read the answer, you probably\nwouldn't even notice. But now that I'm saying\nit out loud, I am.",
    "start": "2530320",
    "end": "2536910"
  },
  {
    "text": "OK. And that solves Tim the\nBeaver's maximization problem. He's a very cool Beaver.",
    "start": "2536910",
    "end": "2542460"
  },
  {
    "text": "Any questions about this one? Notice that both\nof these problems are very similar in nature.",
    "start": "2542460",
    "end": "2548140"
  },
  {
    "text": "I basically just\nwrote sub-problems indexed by every possible\nthing and then enumerated every possible solution.",
    "start": "2548140",
    "end": "2554450"
  },
  {
    "text": "I think this is\ntotally sensible. Again, I remember I had a\nmath Professor in college that always would use this phrase--",
    "start": "2554450",
    "end": "2560440"
  },
  {
    "text": "it's important\nnot to think here. And I think this\nis absolutely true for these dynamic\nprogramming problems,",
    "start": "2560440",
    "end": "2565820"
  },
  {
    "text": "that somehow they look a lot\nmore complicated than they are. Fabulous. So problem 3, protein parsing.",
    "start": "2565820",
    "end": "2574730"
  },
  {
    "text": "Ah, yeah, so this one also got\nme tripped up for a minute. Because the runtime\nthey want is not",
    "start": "2574730",
    "end": "2581480"
  },
  {
    "text": "the runtime of the\nobvious solution, but it kind of, sort of is,\nafter a little bit of fixing.",
    "start": "2581480",
    "end": "2587990"
  },
  {
    "text": "OK. So Professor Leric\nAnder has a laboratory.",
    "start": "2587990",
    "end": "2594410"
  },
  {
    "text": "And that laboratory\nprocesses DNA. Ta-da.",
    "start": "2594410",
    "end": "2600004"
  },
  {
    "text": "OK, so let me go\nto my notes here, because I think\nthey're easier to read.",
    "start": "2600004",
    "end": "2605670"
  },
  {
    "text": "So a strand of DNA,\nas we all know, because we're MIT students,\nis equal to basically a strand",
    "start": "2605670",
    "end": "2612840"
  },
  {
    "text": "of characters that are ACTG. If you ask me to name\nwhat those stood for,",
    "start": "2612840",
    "end": "2619680"
  },
  {
    "text": "I could make a stab\nat one or two of them. But I'm a failure of--",
    "start": "2619680",
    "end": "2624870"
  },
  {
    "text": "I did not have the GIR,\nbecause I went to Stanford. And this is why I'm apparently\na poorly educated person,",
    "start": "2624870",
    "end": "2631200"
  },
  {
    "text": "according to a person\nin a faculty meeting. But in any event, so we\nhave a strand of DNA.",
    "start": "2631200",
    "end": "2638160"
  },
  {
    "text": "It's basically a long\nstring of characters that are one of four options. I'm told that there's sometimes\na fifth and a sixth option,",
    "start": "2638160",
    "end": "2643859"
  },
  {
    "text": "but not too often. In this problem, there's not. And moreover, so a\nstrand can be cut up.",
    "start": "2643860",
    "end": "2652030"
  },
  {
    "text": "So I have this big,\nlong strand, and I'm looking for certain markers. In particular, I have\na list P of markers,",
    "start": "2652030",
    "end": "2663829"
  },
  {
    "text": "which are really a sequence\nof less than or equal to k",
    "start": "2663830",
    "end": "2670220"
  },
  {
    "text": "nucleotides. ",
    "start": "2670220",
    "end": "2675500"
  },
  {
    "text": "By the way, this really is\nsomething that people do. String searching really is\napplicable to processing",
    "start": "2675500",
    "end": "2681890"
  },
  {
    "text": "these DNA strands. Obviously, . I think, in practice,\nthese techniques have to be a lot more\nresilient to error.",
    "start": "2681890",
    "end": "2688010"
  },
  {
    "text": "But really, a lot of these\nalgorithms we're covering are not all that\nfar off from how people process these giant data\nsets, which is pretty cool,",
    "start": "2688010",
    "end": "2696290"
  },
  {
    "text": "I think. OK, so what are we going to do? We have a string.",
    "start": "2696290",
    "end": "2702273"
  },
  {
    "text": "And then we're going\nto make a division. ",
    "start": "2702273",
    "end": "2708170"
  },
  {
    "text": "So we'll call our string\nS and our division D, which kind of\nlooks like d1 to dm,",
    "start": "2708170",
    "end": "2716750"
  },
  {
    "text": "which are substrings\nthat concatenate to make the full guy.",
    "start": "2716750",
    "end": "2723642"
  },
  {
    "start": "2723642",
    "end": "2730250"
  },
  {
    "text": "So if S is our input\nstring, then a division D",
    "start": "2730250",
    "end": "2735560"
  },
  {
    "text": "is just like chopping up\nS into little substrings, each of which we can give\na name little d here.",
    "start": "2735560",
    "end": "2740690"
  },
  {
    "text": "So big D is the full division. Little d is all\nthe little pieces.",
    "start": "2740690",
    "end": "2747320"
  },
  {
    "text": "There's that old song about\ngoing through the big D in [INAUDIBLE], Dallas. I think it's for divorce.",
    "start": "2747320",
    "end": "2754220"
  },
  {
    "text": "Right, OK, so the\nvalue of a division",
    "start": "2754220",
    "end": "2762970"
  },
  {
    "text": "is the number of strands. ",
    "start": "2762970",
    "end": "2768500"
  },
  {
    "text": "So strands are these little d's\nhere, that are in our list P.",
    "start": "2768500",
    "end": "2776270"
  },
  {
    "text": "OK? So given S and P, what\nwe want is the max value.",
    "start": "2776270",
    "end": "2782585"
  },
  {
    "text": " And the runtime\nthat we're budgeted",
    "start": "2782585",
    "end": "2789310"
  },
  {
    "text": "is kind of a weird runtime. And this should make\nus a little suspicious. So the max value is big O of--",
    "start": "2789310",
    "end": "2798460"
  },
  {
    "text": "I think I wrote it slightly\ndifferently in the problem, but whatever-- distributed\nto k, like that.",
    "start": "2798460",
    "end": "2805589"
  },
  {
    "text": "So it's k mod P plus\nk squared. mod S. So we have two terms\nhere, which somehow smells",
    "start": "2805590",
    "end": "2811470"
  },
  {
    "text": "funny in dynamic programming. OK.",
    "start": "2811470",
    "end": "2816859"
  },
  {
    "text": "So what are we to do? Well, what I did is I\nignored our desired runtime, came up with a dynamic\nprogram, and noticed",
    "start": "2816860",
    "end": "2824660"
  },
  {
    "text": "that it was a little\nwrong, and then fixed it. By wrong, I mean it was correct. It just wasn't fast enough.",
    "start": "2824660",
    "end": "2830460"
  },
  {
    "text": "OK, so let's do version 1 here-- ",
    "start": "2830460",
    "end": "2836710"
  },
  {
    "text": "1.0, that makes it more\naccurate, or more precise.",
    "start": "2836710",
    "end": "2843190"
  },
  {
    "text": "I always confuse those two. So here's a thing that is\ngoing to be a little bit funny.",
    "start": "2843190",
    "end": "2849078"
  },
  {
    "text": "Because it's going\nto look like we're going to have an easy\ncomputational problem. But then it's going to turn out\nthat it's actually too slow.",
    "start": "2849078",
    "end": "2855520"
  },
  {
    "text": "So in particular,\nin our S in SRTBOT, what we could do\nis say, xi is going",
    "start": "2855520",
    "end": "2863940"
  },
  {
    "text": "to be the max value of a suffix.",
    "start": "2863940",
    "end": "2870430"
  },
  {
    "text": "If you're wondering, I\ndon't know the difference between prefix and suffix. But I wrote the word\nsuffix in my notes and checked it at home.",
    "start": "2870430",
    "end": "2877050"
  },
  {
    "text": "Si, comma, colon-- see, it's\nsuffix, because it starts at i, and it goes to the end.",
    "start": "2877050",
    "end": "2882300"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] JUSTIN SOLOMON: Huh? AUDIENCE: No comma. JUSTIN SOLOMON: In Matlab,\nit would be a comma.",
    "start": "2882300",
    "end": "2888830"
  },
  {
    "text": "And that's a colon,\nand that's an i. OK. [LAUGHING] Thanks.",
    "start": "2888830",
    "end": "2895549"
  },
  {
    "text": "I'm inventing my own programming\nlanguage on the board as we go today. All right, so and notice\nthis is a reasonable set",
    "start": "2895550",
    "end": "2902840"
  },
  {
    "text": "of sub-problems, right? Because obviously, if I lop\noff some piece of my string,",
    "start": "2902840",
    "end": "2909200"
  },
  {
    "text": "then the max value\nI can get is just the value of whatever remains. So spiritually,\nthis somehow feels",
    "start": "2909200",
    "end": "2915770"
  },
  {
    "text": "like the right\ndynamic programming. And indeed, we'll\nsee that it is. But it just requires\na little bit",
    "start": "2915770",
    "end": "2921740"
  },
  {
    "text": "of a list that could be\nto run on the right time. OK? So let's do a recursive call.",
    "start": "2921740",
    "end": "2928970"
  },
  {
    "text": "And this is actually\nstraightforward. At least, the recursive\ncall that you want to make",
    "start": "2928970",
    "end": "2937130"
  },
  {
    "text": "is straightforward. And then we'll see that there\nis an equivalent formula, which is the one you'll see\nin the solution, which looks more complicated.",
    "start": "2937130",
    "end": "2943160"
  },
  {
    "text": "But is the same thing. So I'm going to write\nit as pseudocode for our recursive call, rather\nthan as one giant formula,",
    "start": "2943160",
    "end": "2949190"
  },
  {
    "text": "because I think it's\neasier to follow. Not pseudocode-- I\nknow that's frowned upon in this class, a\ndescription of a set of steps",
    "start": "2949190",
    "end": "2956390"
  },
  {
    "text": "for obtaining a recursive\ncall, rather than a formula. So in particular, we're going\nto initialize xi to be 0.",
    "start": "2956390",
    "end": "2965390"
  },
  {
    "text": " We want to do a\nmaximization problem.",
    "start": "2965390",
    "end": "2970770"
  },
  {
    "text": "So initializing a variable to\n0 is a sensible thing to do. And remember, what\ncan we do here?",
    "start": "2970770",
    "end": "2975990"
  },
  {
    "text": "So we're looking at a suffix. I could go down my list P of\nall the different markers,",
    "start": "2975990",
    "end": "2981350"
  },
  {
    "text": "see if any of the matches the\nfirst couple of characters of my string. If it does, I get\nsome value, and then I",
    "start": "2981350",
    "end": "2987109"
  },
  {
    "text": "hop onto the next thing. Does that make sense? ",
    "start": "2987110",
    "end": "2995665"
  },
  {
    "text": "Oops, I'm realizing I have\na slight mistake here. Rather than initializing\nto 0, [LAUGHING]",
    "start": "2995665",
    "end": "3004428"
  },
  {
    "text": "I actually have one\nadditional option that I forgot to account for. Because I could just\nnot use this character. I could put it in its\nown little snippet",
    "start": "3004428",
    "end": "3011160"
  },
  {
    "text": "and get no value from it. So maybe initially, I make\na recursive call like that. It would be OK to\ninitialize it to 0",
    "start": "3011160",
    "end": "3018150"
  },
  {
    "text": "and then do this-- but whatever. Notice we're already\nseeing the t in our SRTBOT start to stick out at us.",
    "start": "3018150",
    "end": "3024300"
  },
  {
    "text": "We're going to only depend\non bigger indices i. OK. But in addition to this,\nthis isn't enough, right?",
    "start": "3024300",
    "end": "3030660"
  },
  {
    "text": "This would obviously just\nrecurse the end of our list and do nothing. We get value if we can find a\nsubstring that's in our list.",
    "start": "3030660",
    "end": "3038860"
  },
  {
    "text": "So what we could do is,\nfor each marker in P--",
    "start": "3038860",
    "end": "3048540"
  },
  {
    "text": "remember P is the list of\nthings that we're looking for-- ",
    "start": "3048540",
    "end": "3054349"
  },
  {
    "text": "OK, what could I do? If the marker matches\nS starting at i--",
    "start": "3054350",
    "end": "3068960"
  },
  {
    "text": "I'm going to just not even\nattempt to do Python-- starting at i and ending at\nthe length of the marker, well,",
    "start": "3068960",
    "end": "3077560"
  },
  {
    "text": "what could I do? I could get $1 by\nmatching that object.",
    "start": "3077560",
    "end": "3085170"
  },
  {
    "text": "And then I have to hop forward\nthe length of the string in my recursive call, right? So well, I could do that,\nor I could not do that.",
    "start": "3085170",
    "end": "3095880"
  },
  {
    "text": "And I want to maximize, right? So I can keep my old value,\nor I could get one point",
    "start": "3095880",
    "end": "3105440"
  },
  {
    "text": "by using this as\nmy match, plus xi plus the length of the marker.",
    "start": "3105440",
    "end": "3113580"
  },
  {
    "text": "OK? This is actually, in\nmy mind, the simplest possible dynamic program\nyou could come up with.",
    "start": "3113580",
    "end": "3119280"
  },
  {
    "text": "This is actually a totally\nfine dynamic program. We'll just see that the\nruntime isn't good enough. ",
    "start": "3119280",
    "end": "3126660"
  },
  {
    "text": "OK. So does everybody\nagree this is a way I could solve this\nproblem, and it",
    "start": "3126660",
    "end": "3132060"
  },
  {
    "text": "would give me a correct answer? I'll do the TBOT.",
    "start": "3132060",
    "end": "3137970"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] JUSTIN SOLOMON: Yeah, that's\nwhat we're going to do. But we're going to maybe\nskip some parts of SRTBOT.",
    "start": "3137970",
    "end": "3143150"
  },
  {
    "text": "So in particular, what's\nthe topological order? Notice that I always look to the\nright, when I make a recursive",
    "start": "3143150",
    "end": "3149600"
  },
  {
    "text": "call. What's my base case? Well, in this case, it's\njust a x of 0, I guess,",
    "start": "3149600",
    "end": "3157040"
  },
  {
    "text": "because I'm looking forward. Oh, I'm sorry. My base case is x of the whole\nlength of the string, which",
    "start": "3157040",
    "end": "3162050"
  },
  {
    "text": "is going to return 0, right? Because if I have no string, I\ncan't get any value out of it.",
    "start": "3162050",
    "end": "3167089"
  },
  {
    "text": "The original is x of 0, meaning\nthat I want the whole string. And let's actually do\nthe runtime analysis,",
    "start": "3167090",
    "end": "3173460"
  },
  {
    "text": "as Jason suggests,\nbecause that's, of course, the relevant computation here.",
    "start": "3173460",
    "end": "3179920"
  },
  {
    "text": "So this is T2, because it's\nthe second T in SRTBOT.",
    "start": "3179920",
    "end": "3185730"
  },
  {
    "text": "OK, so how many\nsub-problems are there? Well, I mean, it\nalmost looks like we",
    "start": "3185730",
    "end": "3193082"
  },
  {
    "text": "should have a fast algorithm. Because our sub-problems are\nonly indexed by i, right?",
    "start": "3193082",
    "end": "3198100"
  },
  {
    "text": "So there's one sub-problem\nfor basically each character in the string. So there's mod S\nsub-problems total.",
    "start": "3198100",
    "end": "3206260"
  },
  {
    "text": " But how much time does it\ntake for each sub-problem? ,",
    "start": "3206260",
    "end": "3212599"
  },
  {
    "text": "Well let's be careful. So there's a for loop\nover all the markers in P.",
    "start": "3212600",
    "end": "3219850"
  },
  {
    "text": "So I know that I incur at least\nmod P work in my sub-problem.",
    "start": "3219850",
    "end": "3227620"
  },
  {
    "text": "Is that all the\nwork that I incur? It kind of looks like it,\nbecause there's only one for loop, and there's an if.",
    "start": "3227620",
    "end": "3233537"
  },
  {
    "text": "But how do I check\nif strings are equal? Well, I have to iterate over\nthe length of the string. So I incur a second\ncost, which is checking",
    "start": "3233537",
    "end": "3241160"
  },
  {
    "text": "if two strings are equal. We know that our\nstrings are at most-- well, I didn't\nactually write it down.",
    "start": "3241160",
    "end": "3246170"
  },
  {
    "text": "But the problem tells\nus that our strings are at most length k. So I incur another\nfactor of k in every one",
    "start": "3246170",
    "end": "3254900"
  },
  {
    "text": "of my sub-problems. And that implies that\nour whole algorithm, that I've outlined for you all\nabove, takes mod S k squared--",
    "start": "3254900",
    "end": "3265150"
  },
  {
    "text": "oh, I'm sorry. That was a lie. If I actually multiply these\nthings together, what I get",
    "start": "3265150",
    "end": "3270524"
  },
  {
    "text": "is-- sorry. [LAUGHING] I need more sleep-- S P k. And that is against the rules.",
    "start": "3270524",
    "end": "3277180"
  },
  {
    "text": "So that's frowny face, yeah. Because in particular, I took\ntwo big numbers, in some sense,",
    "start": "3277180",
    "end": "3283540"
  },
  {
    "text": "and multiplied them together,\nand that's not good. So what is a person to do?",
    "start": "3283540",
    "end": "3290100"
  },
  {
    "text": "I tried to solve my problem. I came up with-- by the\nway, from a partial credit perspective, I think\nyou'd be doing OK",
    "start": "3290100",
    "end": "3296220"
  },
  {
    "text": "if you got to this point. OK, not great, but OK. But of course, the\nproblem is asking",
    "start": "3296220",
    "end": "3303210"
  },
  {
    "text": "you to solve this is\nthis funny runtime, which is kP, plus k squared S.",
    "start": "3303210",
    "end": "3311500"
  },
  {
    "text": "When I see a sum like this-- and remember that there\nare two problems to solve. There are two strategies\nfor solving problems",
    "start": "3311500",
    "end": "3317590"
  },
  {
    "text": "in algorithms class. There's one which is useful\nin your everyday lives, which is to devise algorithms.",
    "start": "3317590",
    "end": "3322690"
  },
  {
    "text": "There's a second, which is\nto psychologically diagnose your instructors. And I think that second strategy\nis actually pretty effective",
    "start": "3322690",
    "end": "3328810"
  },
  {
    "text": "here. I see two terms. Most of our dynamic\nprogramming things involve filling in a\ntable, where you would",
    "start": "3328810",
    "end": "3333880"
  },
  {
    "text": "expect there to be a product. So in general, I would squint at\nthis and think, like, hm, maybe",
    "start": "3333880",
    "end": "3339790"
  },
  {
    "text": "I have to do some\npre-computation. Yeah? In particular, we've got to\ndo a lot of string-matching",
    "start": "3339790",
    "end": "3347630"
  },
  {
    "text": "in our problem, and maybe we\ncan make that more efficient. Yeah?",
    "start": "3347630",
    "end": "3353020"
  },
  {
    "text": "That's sort of the\nmain question here. So this thing is too slow,\nand we're trying to fix it.",
    "start": "3353020",
    "end": "3359030"
  },
  {
    "text": "The way I'm going\nto try and fix it is to say, like, OK, well,\nI have mod S sub-problems.",
    "start": "3359030",
    "end": "3365422"
  },
  {
    "text": "If I look at these two\nterms, how much work can I actually do in my\nsub-problem, something that looks like k squared,\nmaybe plus this amount",
    "start": "3365422",
    "end": "3372560"
  },
  {
    "text": "of pre-computation. See what I did there? OK. So let's do that.",
    "start": "3372560",
    "end": "3379510"
  },
  {
    "text": "So in particular,\nhere are the types of queries that I'm\ngoing to have to make. ",
    "start": "3379510",
    "end": "3386579"
  },
  {
    "text": "There's a bunch of\ntimes in my code when-- here's a number that-- [HICCUPS] yikes,\nI'm falling apart.",
    "start": "3386580",
    "end": "3393930"
  },
  {
    "text": "That's what I get for sprinting\nacross campus to get here. I'm going to find\na number m i, j.",
    "start": "3393930",
    "end": "3401280"
  },
  {
    "text": "And it's going to be 1\nif the substring S i--",
    "start": "3401280",
    "end": "3407835"
  },
  {
    "text": "oh, man-- to j is in my list\nof markers P, and 0 otherwise.",
    "start": "3407835",
    "end": "3417741"
  },
  {
    "text": " By the way, why is this enough? Notice that I'm not\nanswering, which marker?",
    "start": "3417741",
    "end": "3425069"
  },
  {
    "text": "But the problem doesn't\nreally care, right? This problem just checks\nif there is a marker. And if so, then\nI use that, yeah.",
    "start": "3425070",
    "end": "3431988"
  },
  {
    "text": "So if I have this\nthing, that's going to somehow make this\nfor loop a heck of a lot easier, because now I don't\nhave to do string-matching.",
    "start": "3431988",
    "end": "3437730"
  },
  {
    "text": "We'll return to\nthat in a minute. OK. So my question is, how\ncan I compute this thing?",
    "start": "3437730",
    "end": "3444790"
  },
  {
    "text": "And by the way,\nnotice that I know",
    "start": "3444790",
    "end": "3450030"
  },
  {
    "text": "how to compute this when the\ndifference between i and j is bigger than k, because I\nknow that all of my markers",
    "start": "3450030",
    "end": "3456870"
  },
  {
    "text": "have length k or less. That's going to be\nimportant, because even though m is doubly indexed, I\ndon't actually need to do that.",
    "start": "3456870",
    "end": "3464980"
  },
  {
    "text": "In fact, I could even\nstore it using less memory than that, if I\nwanted to, by just storing that diagonal block.",
    "start": "3464980",
    "end": "3471240"
  },
  {
    "text": "OK, right. So the other thing,\nwhich I think we saw in a previous\nproblem session, as well,",
    "start": "3471240",
    "end": "3478180"
  },
  {
    "text": "is that when we do a\nlot of string-matching, it often pays to put our\nstrings into a hash table,",
    "start": "3478180",
    "end": "3483670"
  },
  {
    "text": "so that they're easier\nto look up later. Does this string exist\nin this thing or not? Rather than matching every\ncharacter every single time.",
    "start": "3483670",
    "end": "3491210"
  },
  {
    "text": "So maybe we do\nthat, just for fun. And in general, when you see\na string-matching problem--",
    "start": "3491210",
    "end": "3497272"
  },
  {
    "text": "and you have a list\nof strings, I'd suggest thinking\nabout hash tables, just for fun and profit. So in step one here, maybe\nI put all the strings in P",
    "start": "3497272",
    "end": "3507520"
  },
  {
    "text": "into a hash.  OK?",
    "start": "3507520",
    "end": "3513782"
  },
  {
    "text": "How much time does that take? Well, I have to process\nevery string, find its code,",
    "start": "3513782",
    "end": "3519207"
  },
  {
    "text": "which is going to\ntake more of k time. There's mod P of them,\nso this is k mod P time.",
    "start": "3519207",
    "end": "3526880"
  },
  {
    "text": "Notice that that conveniently\nagrees with our first term here. So we feel like, aha,\nwe're in good shape.",
    "start": "3526880",
    "end": "3532410"
  },
  {
    "text": "We're making progress here. And now, maybe I want to fill\nin this m, i, j objects here.",
    "start": "3532410",
    "end": "3541130"
  },
  {
    "text": "How could I do that? Well, for one, I'm certainly\ngoing to iterate over all",
    "start": "3541130",
    "end": "3547250"
  },
  {
    "text": "possible i's. OK? So let's do that. So we're going to do 2.",
    "start": "3547250",
    "end": "3552410"
  },
  {
    "text": "By the way, I'm using 1's\nand 2's and a's and b's and the whatever. These are just ways to\ndenote steps of things.",
    "start": "3552410",
    "end": "3558230"
  },
  {
    "text": "[LAUGHING] OK, so\nlet's say that I just",
    "start": "3558230",
    "end": "3564330"
  },
  {
    "text": "want to fill in m using\na brain-dead algorithm. So I could go from 1 to the\nsize of my strings for i.",
    "start": "3564330",
    "end": "3573349"
  },
  {
    "text": "Careful. Now I can't incur an S squared. But I know that my strings\nare always at mostly k.",
    "start": "3573350",
    "end": "3580770"
  },
  {
    "text": "So I could do for j equals\ni plus 1 to i plus k.",
    "start": "3580770",
    "end": "3591900"
  },
  {
    "text": "So this for loop actually\nincurs k time, not mod S time. And now I can do two things.",
    "start": "3591900",
    "end": "3598450"
  },
  {
    "text": "I can find the hash of\nthe string from i to j.",
    "start": "3598450",
    "end": "3606270"
  },
  {
    "text": "This is going to\ntake order k time. And I can search for it--",
    "start": "3606270",
    "end": "3615250"
  },
  {
    "text": "ah, no-- to see if it's\nactually in our hash table of P.",
    "start": "3615250",
    "end": "3629360"
  },
  {
    "text": "And if it is, then\nI set m equal to 1. Otherwise, I set m equal to 0. ",
    "start": "3629360",
    "end": "3637700"
  },
  {
    "text": "And these are constant\ntime operations, at least in expectation. So how much cost to it?",
    "start": "3637700",
    "end": "3643710"
  },
  {
    "text": "And so this, you can convince\nyourself fills in that array m. How much time does it take? Well, I have a loop to the size\nof S. I have a loop of size k.",
    "start": "3643710",
    "end": "3653900"
  },
  {
    "text": "I have a second loop of size\nk here to compute the hash. So this whole thing is going\nto take order k squared mod",
    "start": "3653900",
    "end": "3661885"
  },
  {
    "text": "S time, like that. Now, this conveniently--\nthere's chalk on the floor.",
    "start": "3661885",
    "end": "3668390"
  },
  {
    "text": "And this is the second\nterm in our runtime. So this is kosher. We can fill in m. And that's a convenient\nobject to have around.",
    "start": "3668390",
    "end": "3676700"
  },
  {
    "text": "So the only thing\nthat remains is to revise our R from above, to\nmake use of the m that we have.",
    "start": "3676700",
    "end": "3684170"
  },
  {
    "text": "And that's pretty\nstraightforward. ",
    "start": "3684170",
    "end": "3690560"
  },
  {
    "text": "So the trick is to not\nlean against this thing and to actually hit\nthe stop button. I'm learning.",
    "start": "3690560",
    "end": "3696230"
  },
  {
    "text": "So now I suppose we had T2 for\nthe second T. So for revised R,",
    "start": "3696230",
    "end": "3703350"
  },
  {
    "text": "we should have R prime. [LAUGHING] AUDIENCE: [INAUDIBLE]",
    "start": "3703350",
    "end": "3708810"
  },
  {
    "text": "JUSTIN SOLOMON: What was that? AUDIENCE: The deriviative. JUSTIN SOLOMON: That's right. The derivative-- yeah, we\ncould do Christoffel symbols,",
    "start": "3708810",
    "end": "3713820"
  },
  {
    "text": "like i, j prime,\nand semicolon k. ",
    "start": "3713820",
    "end": "3719099"
  },
  {
    "text": "Take 6838 if you want to learn\nwhat Christoffel symbols are.",
    "start": "3719100",
    "end": "3724740"
  },
  {
    "text": "Right, so now, what is\nmy recursive call for xi?",
    "start": "3724740",
    "end": "3730500"
  },
  {
    "text": "Well, I want to maximize.  Well, what can I do?",
    "start": "3730500",
    "end": "3736430"
  },
  {
    "text": "I can check every\npossible length of a string that\ncould be in P, check",
    "start": "3736430",
    "end": "3742450"
  },
  {
    "text": "if it is, using my array m,\nand get that amount of profit.",
    "start": "3742450",
    "end": "3747570"
  },
  {
    "text": "So in particular, I get m. By the way, I keep using\nthe word profit here. I am essentially using\nthat to mean increment",
    "start": "3747570",
    "end": "3754390"
  },
  {
    "text": "in every single one\nof our problems here. I like to think of our\nproblems as maximizing profit, because I'm a greedy professor.",
    "start": "3754390",
    "end": "3760270"
  },
  {
    "text": "So this is m, i j, which would\nbe 1 if I found a string there",
    "start": "3760270",
    "end": "3765370"
  },
  {
    "text": "and 0 if I'm not, plus xi plus\nj, to account for the length",
    "start": "3765370",
    "end": "3772510"
  },
  {
    "text": "here, where j is in 1 to--",
    "start": "3772510",
    "end": "3778300"
  },
  {
    "text": "well, either the\nlength of the string, or I get to the end of--",
    "start": "3778300",
    "end": "3784089"
  },
  {
    "text": "either the maximum\nlength of a string in P, or I get to the end of\nmy array, like that.",
    "start": "3784090",
    "end": "3791220"
  },
  {
    "text": "OK. And this is our\nnew recursive call. The one thing we\nshould double-check is, what is the runtime for\nactually filling in x now?",
    "start": "3791220",
    "end": "3798119"
  },
  {
    "text": "Well, there's still\nthe mod S sub-problems. And now how long does it take?",
    "start": "3798120",
    "end": "3804950"
  },
  {
    "text": "Well, now I just have\none loop over k things. This is mod S times k. It's actually less than\nany of the terms that's",
    "start": "3804950",
    "end": "3811780"
  },
  {
    "text": "in our runtime. And so this is fine. This actually is kind\nof a funny example,",
    "start": "3811780",
    "end": "3817569"
  },
  {
    "text": "where the dynamic programming\npart of our algorithm, once we've done all this\ncute pre-computation,",
    "start": "3817570",
    "end": "3823329"
  },
  {
    "text": "is actually insignificant,\ncompared to all the pre-computation that we had\nto do in our final runtime--",
    "start": "3823330",
    "end": "3829240"
  },
  {
    "text": "sneaky. All right, any questions\nabout protein folding, or whatever it is\nthat we just did?",
    "start": "3829240",
    "end": "3835710"
  },
  {
    "text": "OK. So as usual, I'm\ntalking too much. AUDIENCE: [INAUDIBLE]? JUSTIN SOLOMON: Yeah, which\none would you prefer to cut?",
    "start": "3835710",
    "end": "3841050"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] JUSTIN SOLOMON: I have\nvery few preferences.",
    "start": "3841050",
    "end": "3846690"
  },
  {
    "text": "OK, so one of your problems-- I would take a vote,\nbut with our audience,",
    "start": "3846690",
    "end": "3852210"
  },
  {
    "text": "there's is a high probability\nof a split on jury here. Right. So there's two\nremaining problems",
    "start": "3852210",
    "end": "3858000"
  },
  {
    "text": "on the problem session. As usual, your instructor-- AUDIENCE: [INAUDIBLE] JUSTIN SOLOMON: You\ncan leave it there.",
    "start": "3858000",
    "end": "3863520"
  },
  {
    "text": "This is another\nproblem to learn about. As usual, I've talked too much\nand haven't got to the end.",
    "start": "3863520",
    "end": "3870210"
  },
  {
    "text": "I get the impression that\nin 6006, this egg drop thing is a bit of a tradition anyway. So maybe we'll cover\nthat problem really fast.",
    "start": "3870210",
    "end": "3877110"
  },
  {
    "text": "Do they do that in\nsection, some variation? AUDIENCE: No. JUSTIN SOLOMON: Not this time-- even better. OK, so yes, so maybe we'll\ndo this egg-drop thing,",
    "start": "3877110",
    "end": "3884976"
  },
  {
    "text": "mostly because the\nother one, I think, takes a lot of verbal setup. The other one is--",
    "start": "3884977",
    "end": "3891570"
  },
  {
    "text": "I would say, from a dynamic\nprogramming perspective, maybe not super exciting. But from an interesting\nproblem perspective,",
    "start": "3891570",
    "end": "3897690"
  },
  {
    "text": "it's kind of cool\nto think about. So I'd encourage you\nto leave it in there, and you guys can\nread it at home.",
    "start": "3897690",
    "end": "3904829"
  },
  {
    "text": "From a coding perspective,\nit's also kind of fun. I notice the solution\ndidn't do what I would do, which would be to\nuse the bits in the--",
    "start": "3904830",
    "end": "3911799"
  },
  {
    "text": "assume that something\nwasn't too tall, use the bits in an integer to\nstore your binary variables.",
    "start": "3911800",
    "end": "3918080"
  },
  {
    "text": "But that's an old hack. That's like this old\nhack for computing the square root of a\nnumber, that's apparently",
    "start": "3918080",
    "end": "3923720"
  },
  {
    "text": "in the code for the Doom\nvideo game, which involves bit-shifting, and it happens\nto agree with square root,",
    "start": "3923720",
    "end": "3930140"
  },
  {
    "text": "for some magic reason, that\nnumerical analysts really hate. OK, so let's do lazy\negg drop instead.",
    "start": "3930140",
    "end": "3938940"
  },
  {
    "text": "So that's problem 4. OK. So we're in a building.",
    "start": "3938940",
    "end": "3946000"
  },
  {
    "text": "Our building has n\nfloors and k eggs.",
    "start": "3946000",
    "end": "3951690"
  },
  {
    "text": " I guess it's debatable\nwhether the building has eggs or the residents--\nbut in any event,",
    "start": "3951690",
    "end": "3958780"
  },
  {
    "text": "have some set of eggs. And maybe I'm in\nthis data center or some other weird building. So I don't have heights of\nfloors that are isotropic,",
    "start": "3958780",
    "end": "3968470"
  },
  {
    "text": "but rather, each floor\nhas a different height, which could vary. ",
    "start": "3968470",
    "end": "3975040"
  },
  {
    "text": "So it's height of floor, or i.",
    "start": "3975040",
    "end": "3980060"
  },
  {
    "text": "I really want to write\nflour, but I digress. And we're going to assume that\nour list is already sorted.",
    "start": "3980060",
    "end": "3988753"
  },
  {
    "text": "So in other words,\nthe fifth floor is taller than the\nfourth floor, and we don't have to spend n\nlog-in time doing that.",
    "start": "3988753",
    "end": "3996710"
  },
  {
    "text": "OK. Right. So apparently, in\nour problem, we",
    "start": "3996710",
    "end": "4002410"
  },
  {
    "text": "have an egg with a mysterious\nmechanical property that we are trying to recover.",
    "start": "4002410",
    "end": "4007900"
  },
  {
    "text": "And all eggs, as we\nknow, are identical. So the only difference between\neggs is chicken, versus goose,",
    "start": "4007900",
    "end": "4014830"
  },
  {
    "text": "versus-- I'm struggling to think of a\nthird category of poultry-- turkey. Thank you.",
    "start": "4014830",
    "end": "4021640"
  },
  {
    "text": "But assuming that I\ngot all of my eggs at the same Stop-N-Shop,\nand they all come from the same\nspecies, then they",
    "start": "4021640",
    "end": "4026770"
  },
  {
    "text": "have roughly the same\nmechanical properties. Actually, probably\nthe better setup is that floors are\nvery far apart relative",
    "start": "4026770",
    "end": "4032150"
  },
  {
    "text": "to the size of an egg. And if I get high\nenough, my egg,",
    "start": "4032150",
    "end": "4037690"
  },
  {
    "text": "when I drop them on the\nground, like that, breaks.",
    "start": "4037690",
    "end": "4042998"
  },
  {
    "text": "Didn't break. But it could have broken. And of course, if I drop it\nfrom an even higher height,",
    "start": "4042998",
    "end": "4048310"
  },
  {
    "text": "my egg still is going to break. However, if I have a very\nlow floor-- apparently, a very low floor.",
    "start": "4048310",
    "end": "4053800"
  },
  {
    "text": "Maybe this is a house for mice. And I drop my egg, it\nactually stays intact.",
    "start": "4053800",
    "end": "4060280"
  },
  {
    "text": "And the question, as all\ngood scientists want to know, is, what is the highest floor\nin my building from which I",
    "start": "4060280",
    "end": "4066760"
  },
  {
    "text": "can drop an egg and\nhave it remain intact? And the question is\nkind of a funny one.",
    "start": "4066760",
    "end": "4076500"
  },
  {
    "text": "It's sort of like experimental\ndesign, in some sense. It's not asking, given this\nand a list of experiments, try",
    "start": "4076500",
    "end": "4085130"
  },
  {
    "text": "and figure, infer,\nsomething about the eggs. But rather, it's\nsaying, if I carefully",
    "start": "4085130",
    "end": "4090830"
  },
  {
    "text": "design a sequence of floors\nto drop my eggs from, from which upon I\ndrop my eggs, then",
    "start": "4090830",
    "end": "4102170"
  },
  {
    "text": "what is the maximum\nnumber of experiments I need to do to triangulate\nin on that floor,",
    "start": "4102170",
    "end": "4108380"
  },
  {
    "text": "that critical floor,\nabove which my eggs break? So what I'm given are\nthe heights of the floors",
    "start": "4108380",
    "end": "4114920"
  },
  {
    "text": "and a bunch of eggs. In some sense,\nthe budget of eggs doesn't matter more than just\nputting a cap on the size",
    "start": "4114920",
    "end": "4122818"
  },
  {
    "text": "of our problem, in some sense. What really matters is I'd\nlike to use fewer than k eggs to determine that.",
    "start": "4122819",
    "end": "4128147"
  },
  {
    "text": "Because of course,\nthe remaining ones I'm going to use\nto make an omelet. But notice that\nI can be a little",
    "start": "4128147",
    "end": "4134409"
  },
  {
    "text": "sneaky in my\nexperimental design, that what happens if I\ndrop my egg from a really",
    "start": "4134410",
    "end": "4142278"
  },
  {
    "text": "low floor in my building? Well, it remains intact. So I can schlep down the stairs.",
    "start": "4142279",
    "end": "4149310"
  },
  {
    "text": "I can pick up my egg, and I can\nuse it for my next experiment. And I have not paid an egg.",
    "start": "4149310",
    "end": "4155520"
  },
  {
    "text": "Yeah? So the first question\nyou might ask is, like, well, why the\nheck wouldn't I just",
    "start": "4155520",
    "end": "4162520"
  },
  {
    "text": "start on the first\nfloor, drop the egg. If it's not broken,\ngo on to the next one",
    "start": "4162520",
    "end": "4167625"
  },
  {
    "text": "and then drop the\negg, and so on? That would be the most\negg-efficient plan. And indeed that is the\ncase, because you'll only",
    "start": "4167625",
    "end": "4174040"
  },
  {
    "text": "break at most one egg. But you're schlepping\nup and down the stairs a bunch of times when\nyou solve that, right?",
    "start": "4174040",
    "end": "4180130"
  },
  {
    "text": "Every single time, you've got to\ngo retrieve that unbroken egg. You've got to run\ndown the stairs,",
    "start": "4180130",
    "end": "4185770"
  },
  {
    "text": "pick the thing up, and then\nrun up to the next floor. And maybe in your\noptimization problem, rather than trying to\nminimize the number of eggs",
    "start": "4185770",
    "end": "4192830"
  },
  {
    "text": "that you break, you're trying\nto minimize the expense on your quads. And so instead, you've skipped\nyour leg day, or whatever,",
    "start": "4192830",
    "end": "4203020"
  },
  {
    "text": "and the thing that\nyou're trying to minimize is the sum over the heights of\nthe drops in your experiments.",
    "start": "4203020",
    "end": "4214600"
  },
  {
    "text": "So you're trying to determine\nthe mechanical property of your egg by designing\nan experiment, sort",
    "start": "4214600",
    "end": "4221580"
  },
  {
    "text": "of a procedure, that\nminimizes the number of times that you need to drop eggs. Because every time\nyou do, you've",
    "start": "4221580",
    "end": "4227700"
  },
  {
    "text": "got to run all the way\nback down the stairs, and go look at the pavement,\nand see if the egg broke or not. That's a lot of work. OK.",
    "start": "4227700",
    "end": "4233610"
  },
  {
    "text": "This is different from the\nclassic egg-drop 6006 problem, which I encourage you\nguys to go seek out,",
    "start": "4233610",
    "end": "4238980"
  },
  {
    "text": "in previous iterations\nof this course. Let me see.",
    "start": "4238980",
    "end": "4244680"
  },
  {
    "text": "And so the question is, what is\nthe minimum number of egg drops",
    "start": "4244680",
    "end": "4250170"
  },
  {
    "text": "you need to do to ascertain\nthat for any type of egg-- so I give you a\nmystery basket of eggs,",
    "start": "4250170",
    "end": "4256739"
  },
  {
    "text": "and you have to design\nthe experimental procedure and bound the number of\nthis particular value here,",
    "start": "4256740",
    "end": "4263280"
  },
  {
    "text": "given a budget of k eggs. OK. And the amount of time that\nwe have to do that is order n",
    "start": "4263280",
    "end": "4273690"
  },
  {
    "text": "cubed k. Apparently, our\nbuilding, we have lots of eggs and not\nvery many floors.",
    "start": "4273690",
    "end": "4280760"
  },
  {
    "text": "OK. Does our setup make\nsome sense here? We're just trying to avoid\nrunning up and down the stairs.",
    "start": "4280760",
    "end": "4285980"
  },
  {
    "text": "That's the main takeaway. OK. So what are we going to do?",
    "start": "4285980",
    "end": "4291730"
  },
  {
    "text": "SRTBOT, because that's all\nwe know how to do, yeah? And in particular, we're going\nto make one observation, which",
    "start": "4291730",
    "end": "4297550"
  },
  {
    "text": "is kind of handy. If I drop a floor-- ooh, if I drop an\negg from a floor,",
    "start": "4297550",
    "end": "4305600"
  },
  {
    "text": "in this deterministic universe,\nwhere egg mechanics are very predictable,\nthere's only one",
    "start": "4305600",
    "end": "4311850"
  },
  {
    "text": "of two things that can happen. Either the egg\nbroke or it didn't, while I run into\nthe board again.",
    "start": "4311850",
    "end": "4318900"
  },
  {
    "text": "So let's think about\nour experiment. Remember, at the end\nof the day, we're trying to figure out the\ntallest floor in my building",
    "start": "4318900",
    "end": "4327340"
  },
  {
    "text": "from which I can\nsafely drop an egg. So if I think about bracketing\nthat height of that floor,",
    "start": "4327340",
    "end": "4337095"
  },
  {
    "text": "for one thing, do I\never need a bracket that's not a continuous or\na connected set of numbers?",
    "start": "4337095",
    "end": "4343370"
  },
  {
    "text": "The answer is no, right? It should never be the\ncase that, like, oh, I think that my eggs\ncould be on floors one--",
    "start": "4343370",
    "end": "4349588"
  },
  {
    "text": "only the prime number of floors\nin my building, or something. That really makes\nno sense, right? Because if I convince myself\nmy egg breaks at four or five,",
    "start": "4349588",
    "end": "4356900"
  },
  {
    "text": "then obviously, floors six\nthrough n, my egg also breaks. And so I always can just keep\nnarrowing down some interval.",
    "start": "4356900",
    "end": "4364610"
  },
  {
    "text": "Right? So in particular,\nhere's a clever S in my SRTBOT, which\nis to say that I'm",
    "start": "4364610",
    "end": "4373960"
  },
  {
    "text": "going to say that x, i, j,\ne is equal to the minimum--",
    "start": "4373960",
    "end": "4384060"
  },
  {
    "text": "by the way, I'm writing this\nas minimum total height. So this is the minimum total\ntimes I've got to run down",
    "start": "4384060",
    "end": "4389580"
  },
  {
    "text": "the stairs and check my eggs,\nor total height that I run down the stair-- the number\nof stairs I run down,",
    "start": "4389580",
    "end": "4397199"
  },
  {
    "text": "assuming my stairs\nare 1 foot tall-- where I have e eggs left.",
    "start": "4397200",
    "end": "4404220"
  },
  {
    "text": " Notice the way that we've\nwritten the problem this time, I might as well use\nall of my k eggs.",
    "start": "4404220",
    "end": "4411150"
  },
  {
    "text": "That doesn't cost me anything. What costs me is running\nup and down the stairs. And that I have floors i\nthrough j inclusive to check.",
    "start": "4411150",
    "end": "4424610"
  },
  {
    "text": "So in other words, if I'm\non a floor below floor i, I've convinced myself\nmy egg won't break. But if I'm on a a\nfloor above floor j,",
    "start": "4424610",
    "end": "4431480"
  },
  {
    "text": "I'm convinced my egg will break. OK? So what do I do?",
    "start": "4431480",
    "end": "4437560"
  },
  {
    "text": "Well, remember that this is an\nexperimental design problem. I can drop my egg from any\nfloor f, which is in the range i",
    "start": "4437560",
    "end": "4454110"
  },
  {
    "text": "to j. And of course, there's\nnever a reason for me to drop an egg from a\nfloor below i or above j,",
    "start": "4454110",
    "end": "4460350"
  },
  {
    "text": "because we already know\nwhat happens in that case. OK? So what happens when we do that?",
    "start": "4460350",
    "end": "4469320"
  },
  {
    "text": "Well, if I drop\nit from floor f, I have to pay, in terms of\nmy cost function, right?",
    "start": "4469320",
    "end": "4474980"
  },
  {
    "text": "Because to pay the height of f,\nI've got run down the stairs. OK?",
    "start": "4474980",
    "end": "4481670"
  },
  {
    "text": "But in exchange for that,\nI learn a little bit about my egg problem.",
    "start": "4481670",
    "end": "4486739"
  },
  {
    "text": "I either get an upper\nor a lower bound of f, depending on whether\nthe egg broke. OK? So let's formalize\nthat mathematically.",
    "start": "4486740",
    "end": "4495240"
  },
  {
    "text": "So in particular,\nwe have x i, j, e. ",
    "start": "4495240",
    "end": "4502720"
  },
  {
    "text": "Well, what do I get\nto control in my life? And what do I have to deal with?",
    "start": "4502720",
    "end": "4508159"
  },
  {
    "text": "Well, what I have to\ndeal with is the fact that I don't know what's\ngoing to happen to the egg. It might break. It might not. Right? And the egg might be\nan adversarial egg--",
    "start": "4508160",
    "end": "4515020"
  },
  {
    "text": "it wants you to run up\nand down the stairs. And I have to account for that. But i and the egg's\nadversary need",
    "start": "4515020",
    "end": "4522070"
  },
  {
    "text": "to choose what floor\nI drop it from. So remember, we saw an example.",
    "start": "4522070",
    "end": "4527410"
  },
  {
    "text": "I forget what, from class,\nwhere there was a game. One guy was trying to minimize. The other was\ntrying to maximize.",
    "start": "4527410",
    "end": "4533320"
  },
  {
    "text": "In some sense, the egg is trying\nto maximize the amount of work you have to do, running up\nand down the stairs to do",
    "start": "4533320",
    "end": "4541540"
  },
  {
    "text": "your experiment. A better way to put\nit is that we're trying to upper bound\nthe amount of work in your experimental procedure.",
    "start": "4541540",
    "end": "4547840"
  },
  {
    "text": "And I'm trying to\ndesign a procedure that minimizes my work. So let's say that\nI'm the player. So I want to minimize.",
    "start": "4547840",
    "end": "4555230"
  },
  {
    "text": "And the decision that I get to\nmake, the control that I have,",
    "start": "4555230",
    "end": "4560530"
  },
  {
    "text": "is what? Well, it's what floor I choose. So let's say I choose floor f.",
    "start": "4560530",
    "end": "4566212"
  },
  {
    "text": "Well, I have to go\ndown the stairs. So that takes me hf. This was going up the\nstairs, is probably",
    "start": "4566212",
    "end": "4571380"
  },
  {
    "text": "what incurs the hf\ngoing down is nothing. But I digress. But now I still am not done.",
    "start": "4571380",
    "end": "4578850"
  },
  {
    "text": "I've narrowed it down into\none of two cases, right? Either f is my new lower\nbound or my new upper bound.",
    "start": "4578850",
    "end": "4584415"
  },
  {
    "text": "And I have to account for\nboth of those in my recursion and actually, the max of\nthose two, in the sense",
    "start": "4584415",
    "end": "4590160"
  },
  {
    "text": "that I need, in\nevery possible case, that my egg drop\nexperiment narrows down",
    "start": "4590160",
    "end": "4595620"
  },
  {
    "text": "my floor to a width of 0. So in particular, this\nis a mini-max problem.",
    "start": "4595620",
    "end": "4603059"
  },
  {
    "text": "There's a max inside\nof of a min here. So either the egg broke in\nmy experiment or it didn't.",
    "start": "4603060",
    "end": "4610719"
  },
  {
    "text": "Right? So if it did broke, then,\nwell, what happened? Well, let's see here.",
    "start": "4610720",
    "end": "4617970"
  },
  {
    "text": "If the egg broke, then I got\nan upper bound for my floor. So my lower bound\nremains the same. It's i.",
    "start": "4617970",
    "end": "4624090"
  },
  {
    "text": "My upper bound is f minus 1,\nbecause it broke on floor f.",
    "start": "4624090",
    "end": "4629389"
  },
  {
    "text": "Well, what happens to\neggs when they break? I can't drop them\nfrom floors again.",
    "start": "4629390",
    "end": "4634920"
  },
  {
    "text": "So I lost an egg. OK? So this is my egg broke.",
    "start": "4634920",
    "end": "4644540"
  },
  {
    "text": "OK? Or my egg didn't break. So in that case, well,\nif my egg did break,",
    "start": "4644540",
    "end": "4651430"
  },
  {
    "text": "now I have a lower bound. So I'm only unclear\nabout floors f plus 1.",
    "start": "4651430",
    "end": "4657940"
  },
  {
    "text": "But the upper bound\ndidn't change. It's still j. And how many eggs do I have?",
    "start": "4657940",
    "end": "4663587"
  },
  {
    "text": "Well, my egg didn't\nbreak, so I can run down the stairs, which is\ngoing to be tiring, I've accounted for that here.",
    "start": "4663587",
    "end": "4668665"
  },
  {
    "text": "But at least I\ncan re-use my egg. So I didn't lose anything. OK?",
    "start": "4668665",
    "end": "4674489"
  },
  {
    "text": "And I get to choose. So notice-- oops--\nso do you guys",
    "start": "4674490",
    "end": "4681030"
  },
  {
    "text": "see why there's a max here? Essentially, I have to account\nfor every possible scenario when I'm designing my\nexperimental procedure.",
    "start": "4681030",
    "end": "4689130"
  },
  {
    "text": "But I get to\nminimize, in the sense that I can choose what\nfloor at every step. So in particular, my f here is\nin the range i to j, like that.",
    "start": "4689130",
    "end": "4703810"
  },
  {
    "text": "OK, and now we have\nour recursive formula for our egg drop that\nminimizes total height.",
    "start": "4703810",
    "end": "4709400"
  },
  {
    "text": "So now let's finish off\nSRTBOT in four minutes. It's actually not too hard. So I think we'll\nactually make it",
    "start": "4709400",
    "end": "4714945"
  },
  {
    "text": "for once by removing\n20% of the problems I was supposed to cover.",
    "start": "4714945",
    "end": "4720910"
  },
  {
    "text": "All right. ",
    "start": "4720910",
    "end": "4727420"
  },
  {
    "text": "So first of all, what's\nour topological order? So this one seems\nkind of annoying.",
    "start": "4727420",
    "end": "4737460"
  },
  {
    "text": "Because I think\nusually, we think of spending stuff in a lot\nof these dynamic programming",
    "start": "4737460",
    "end": "4744730"
  },
  {
    "text": "problems. But do we actually spend an egg? Not necessarily, right? Because in this recursive\ncall, the number of eggs",
    "start": "4744730",
    "end": "4752910"
  },
  {
    "text": "I had remained the same. So maybe that's not actually\na great way to establish a topological order.",
    "start": "4752910",
    "end": "4758400"
  },
  {
    "text": "But instead, what do we know? What is in science the\npurpose of an experiment?",
    "start": "4758400",
    "end": "4764040"
  },
  {
    "text": "It's to improve our\nunderstanding of the world. In this case, our\nworld consists only",
    "start": "4764040",
    "end": "4769500"
  },
  {
    "text": "of eggs and floors of buildings. And in particular,\nonce I drop that egg, I learn something\nabout my building.",
    "start": "4769500",
    "end": "4774750"
  },
  {
    "text": "And I narrowed down\nthe range of floors that are uncertain for me. So in particular,\nI know that x i,",
    "start": "4774750",
    "end": "4783548"
  },
  {
    "text": "j, e only depends on x, I guess,\ni prime, j prime, e prime,",
    "start": "4783548",
    "end": "4797199"
  },
  {
    "text": "with what? Well, my sub-problems, I always\nhave a smaller range of flaws than I did before.",
    "start": "4797200",
    "end": "4802880"
  },
  {
    "text": "So in particular,\nj prime minus i prime is going to be smaller\nstrictly than j minus i.",
    "start": "4802880",
    "end": "4810969"
  },
  {
    "text": "And that'll give me\nmy topological order. Cool.",
    "start": "4810970",
    "end": "4816420"
  },
  {
    "text": "And so that's actually, I think,\nthe sort of annoying part, other than working out this\nmini-max expression here.",
    "start": "4816420",
    "end": "4821940"
  },
  {
    "text": "The remaining things\nare not so hard. So what are our base cases? Well, let's say I\nhave 0 eggs left.",
    "start": "4821940",
    "end": "4831969"
  },
  {
    "text": "But I still have a set\nof uncertain floors. That's bad news. Yeah?",
    "start": "4831970",
    "end": "4838120"
  },
  {
    "text": "Yeah, so that\nshould be infinity. And the reason is, of course,\nI'm going to take the min here.",
    "start": "4838120",
    "end": "4847960"
  },
  {
    "text": "Right? And so obviously, I should\nnever choose infinity as a min. So in other words, I should\nnever choose an option",
    "start": "4847960",
    "end": "4853960"
  },
  {
    "text": "for a floor that\ncould possibly lead me to an uncertain scenario,\nwhen I run out of eggs, yeah?",
    "start": "4853960",
    "end": "4861550"
  },
  {
    "text": "In addition to that, there's\nanother base case here. This is I've got no eggs left,\nbut some floors to check,",
    "start": "4861550",
    "end": "4867885"
  },
  {
    "text": "is the second one, i minus 1e.",
    "start": "4867885",
    "end": "4875000"
  },
  {
    "text": "So in this case, I've got e\neggs left, and I'm done, right? I've narrowed it\ndown to the bounds.",
    "start": "4875000",
    "end": "4881588"
  },
  {
    "text": "Incidentally, the way I wrote\nit in terms of inclusive, versus exclusive, might\nbe a little fishy.",
    "start": "4881588",
    "end": "4887230"
  },
  {
    "text": "Over here, you guys\nshouldn't be off by 1, like your instructor often is. But in any event,\nhere, you're 0, right?",
    "start": "4887230",
    "end": "4893577"
  },
  {
    "text": "There's no more\nfloors left to check. You've narrowed it\ndown to a range of 1. Again, something\nthat I'm out of time",
    "start": "4893578",
    "end": "4899060"
  },
  {
    "text": "so I'm not going\nto check carefully, is if my bounds are inclusive,\nshould that be i, j minus 1--",
    "start": "4899060",
    "end": "4904270"
  },
  {
    "text": "i minus 1 or just i, i? But I think you guys\nare all smart enough to work that out at home,.",
    "start": "4904270",
    "end": "4909530"
  },
  {
    "text": "Which would my original\ncase be, well, now I have all the floors to\ncheck, and all my eggs",
    "start": "4909530",
    "end": "4915940"
  },
  {
    "text": "in my metaphorical basket here. So I have floors 1 to n here.",
    "start": "4915940",
    "end": "4924940"
  },
  {
    "text": "And the problem tells me I\nhave k eggs when I start. And then finally, I need\nto do my sub-problems here.",
    "start": "4924940",
    "end": "4936020"
  },
  {
    "text": "I think you can actually\nsimplify the argument that's written down a tiny bit. And just again, look\nat your sub-problems.",
    "start": "4936020",
    "end": "4942690"
  },
  {
    "text": "They're indexed\nby three numbers, I'm going to do a really\nconservative estimate. I think the problem actually\nworks out a better estimate,",
    "start": "4942690",
    "end": "4949855"
  },
  {
    "text": "but then asymptotically,\nit's the same. What's our bound on the\nfirst and second index?",
    "start": "4949855",
    "end": "4955360"
  },
  {
    "text": "Well, they're both\njust the index of floors, which\ngo between 0 and n.",
    "start": "4955360",
    "end": "4961730"
  },
  {
    "text": "Yeah? Obviously, you could do better\nthan that, because the lower floor is always less than\nthe upper floor, which is what the problem accounts for.",
    "start": "4961730",
    "end": "4967930"
  },
  {
    "text": "But if I'm being lazy,\nthen, well, there's n squared sub-problems to\naccount for the two floors.",
    "start": "4967930",
    "end": "4977469"
  },
  {
    "text": "And the third\nindex is your eggs, which you have at most k of.",
    "start": "4977470",
    "end": "4983650"
  },
  {
    "text": "OK, how much work do we\nhave per sub-problem?",
    "start": "4983650",
    "end": "4988960"
  },
  {
    "text": "Well, let's see here. There's a for loop over f. f Is over floors.",
    "start": "4988960",
    "end": "4994510"
  },
  {
    "text": "Again, if I'm going to\nbe really conservative, well, there's at most n\nfloors total in my building.",
    "start": "4994510",
    "end": "5002860"
  },
  {
    "text": "And so that leads us to\na runtime and n cubed k, which is what we wanted,\nat the end of the day.",
    "start": "5002860",
    "end": "5009780"
  },
  {
    "text": "OK?  This should be a big O here,\nbecause I think technically,",
    "start": "5009780",
    "end": "5015690"
  },
  {
    "text": "this is n plus 1, to\naccount for floor zero. OK.",
    "start": "5015690",
    "end": "5022490"
  },
  {
    "text": "And that solves our\negg-drop experiment. I think this is a nice one. And I think, in\nmy mind, actually,",
    "start": "5022490",
    "end": "5028700"
  },
  {
    "text": "in terms of dynamic\nprogramming, this is one of the harder\nthings to get right, which are these mini-max games.",
    "start": "5028700",
    "end": "5037315"
  },
  {
    "text": "I'd have to think\nabout it, which in my negative two minutes, I'm\nnot going to have time to do.",
    "start": "5037315",
    "end": "5042800"
  },
  {
    "text": "I think in lecture, the way\nthat we solve minimize problem was we separated out\nthe min and the max,",
    "start": "5042800",
    "end": "5048670"
  },
  {
    "text": "and we thought of there\nbeing two dynamic programming problems that are\ninteracting with each other. You could probably write this\none in that form, as well,",
    "start": "5048670",
    "end": "5055869"
  },
  {
    "text": "I guess, just by pulling\nthis term out and thinking of it as a different array.",
    "start": "5055870",
    "end": "5061210"
  },
  {
    "text": "But this form is\nperfectly fine, too. Either one's all right. But in my mind, these\nare the hardest things to get right in\ndynamic programming.",
    "start": "5061210",
    "end": "5067230"
  },
  {
    "text": "So I would choose whichever\none jives in your brain. So in your thing, should we\nchoose to leave it alone?",
    "start": "5067230",
    "end": "5074750"
  },
  {
    "text": "There is a fifth problem\nhere, which, as usual, I haven't managed to get to,\nwhere you're building walls",
    "start": "5074750",
    "end": "5080740"
  },
  {
    "text": "by placing tiles. This is an interesting\none, because your runtime is exponential. But the problem tells\nyou that that's allowed.",
    "start": "5080740",
    "end": "5087969"
  },
  {
    "text": "But there's some exponential\nthings which are OK and some that are not. Essentially, what you\ndon't want is the product",
    "start": "5087970",
    "end": "5093610"
  },
  {
    "text": "of two giant exponentials. You'd like to just\nget it down to one. AUDIENCE: It's\nbasically saying it's going to be polynomial\n[INAUDIBLE] small [INAUDIBLE]..",
    "start": "5093610",
    "end": "5101050"
  },
  {
    "text": "JUSTIN SOLOMON: That's right. Or it's polynomial in\neverything except for the things it's exponential in.",
    "start": "5101050",
    "end": "5106205"
  },
  {
    "text": "And moreover, the things it's\nexponential in are small. And the problem says that. So I encourage you\nguys to take a look.",
    "start": "5106205",
    "end": "5112119"
  },
  {
    "text": "Because it really does take\nsome time to logic through it. But the setup for\nthat problem is, I think, longer than my\nglacially slow board-writing",
    "start": "5112120",
    "end": "5118990"
  },
  {
    "text": "can handle. But with that, we'll\ncall it for the day.",
    "start": "5118990",
    "end": "5124140"
  },
  {
    "start": "5124140",
    "end": "5128195"
  }
]