[
  {
    "text": "We can tweak the design of the DM cache a\nlittle to take advantage of locality and save",
    "start": "459",
    "end": "5600"
  },
  {
    "text": "some of the overhead of tag fields and valid\nbits.",
    "start": "5600",
    "end": "9280"
  },
  {
    "text": "We can increase the size of the data field\nin a cache from 1 word to 2 words, or 4 words,",
    "start": "9280",
    "end": "15080"
  },
  {
    "text": "etc.",
    "start": "15080",
    "end": "16080"
  },
  {
    "text": "The number of data words in each cache line\nis called the \"block size\" and is always a",
    "start": "16080",
    "end": "19949"
  },
  {
    "text": "power of two.",
    "start": "19949",
    "end": "22150"
  },
  {
    "text": "Using a larger block size makes sense.",
    "start": "22150",
    "end": "24678"
  },
  {
    "text": "If there's a high probability of accessing\nnearby words, why not fetch a larger block",
    "start": "24679",
    "end": "29849"
  },
  {
    "text": "of words on a cache miss, trading the increased\ncost of the miss against the increased probability",
    "start": "29849",
    "end": "36000"
  },
  {
    "text": "of future hits.",
    "start": "36000",
    "end": "38690"
  },
  {
    "text": "Compare the 16-word DM cache shown here with\na block size of 4 with a different 16-word",
    "start": "38690",
    "end": "45300"
  },
  {
    "text": "DM cache with a block size of 1.",
    "start": "45300",
    "end": "48350"
  },
  {
    "text": "In this cache for every 128 bits of data there\nare 27 bits of tags and valid bit, so ~17%",
    "start": "48350",
    "end": "55640"
  },
  {
    "text": "of the SRAM bits are overhead in the sense\nthat they're not being used to store data.",
    "start": "55640",
    "end": "62710"
  },
  {
    "text": "In the cache with block size 1, for every\n32 bits of data there are 27 bits of tag and",
    "start": "62710",
    "end": "67940"
  },
  {
    "text": "valid bit, so ~46% of the SRAM bits are overhead.",
    "start": "67940",
    "end": "72710"
  },
  {
    "text": "So a larger block size means we'll be using\nthe SRAM more efficiently.",
    "start": "72710",
    "end": "78930"
  },
  {
    "text": "Since there are 16 bytes of data in each cache\nline, there are now 4 offset bits.",
    "start": "78930",
    "end": "84420"
  },
  {
    "text": "The cache uses the high-order two bits of\nthe offset to select which of the 4 words",
    "start": "84420",
    "end": "88850"
  },
  {
    "text": "to return to the CPU on a cache hit.",
    "start": "88850",
    "end": "93298"
  },
  {
    "text": "There are 4 cache lines, so we'll need two\ncache line index bits from the incoming address.",
    "start": "93299",
    "end": "98850"
  },
  {
    "text": "And, finally, the remaining 26 address bits\nare used as the tag field.",
    "start": "98850",
    "end": "106130"
  },
  {
    "text": "Note that there's only a single valid bit\nfor each cache line, so either the entire",
    "start": "106130",
    "end": "110890"
  },
  {
    "text": "4-word block is present in the cache or it's\nnot.",
    "start": "110890",
    "end": "114290"
  },
  {
    "text": "Would it be worth the extra complication to\nsupport caching partial blocks?",
    "start": "114290",
    "end": "119240"
  },
  {
    "text": "Probably not.",
    "start": "119240",
    "end": "120890"
  },
  {
    "text": "Locality tells us that we'll probably want\nthose other words in the near future, so having",
    "start": "120890",
    "end": "124850"
  },
  {
    "text": "them in the cache will likely improve the\nhit ratio.",
    "start": "124850",
    "end": "128600"
  },
  {
    "text": "What's the tradeoff between block size and\nperformance?",
    "start": "128600",
    "end": "132470"
  },
  {
    "text": "We've argued that increasing the block size\nfrom 1 was a good idea.",
    "start": "132470",
    "end": "136440"
  },
  {
    "text": "Is there a limit to how large blocks should\nbe?",
    "start": "136440",
    "end": "139250"
  },
  {
    "text": "Let's look at the costs and benefits of an\nincreased block size.",
    "start": "139250",
    "end": "143800"
  },
  {
    "text": "With a larger block size we have to fetch\nmore words on a cache miss and the miss penalty",
    "start": "143800",
    "end": "149410"
  },
  {
    "text": "grows linearly with increasing block size.",
    "start": "149410",
    "end": "153520"
  },
  {
    "text": "Note that since the access time for the first\nword from DRAM is quite high, the increased",
    "start": "153520",
    "end": "158460"
  },
  {
    "text": "miss penalty isn't as painful as it might\nbe.",
    "start": "158460",
    "end": "162980"
  },
  {
    "text": "Increasing the block size past 1 reduces the\nmiss ratio since we're bringing words into",
    "start": "162980",
    "end": "167159"
  },
  {
    "text": "the cache that will then be cache hits on\nsubsequent accesses.",
    "start": "167160",
    "end": "172040"
  },
  {
    "text": "Assuming we don't increase the overall cache\ncapacity, increasing the block size means",
    "start": "172040",
    "end": "176890"
  },
  {
    "text": "we'll make a corresponding reduction in the\nnumber of cache lines.",
    "start": "176890",
    "end": "182220"
  },
  {
    "text": "Reducing the number of lines impacts the number\nof separate address blocks that can be accommodated",
    "start": "182220",
    "end": "186620"
  },
  {
    "text": "in the cache.",
    "start": "186620",
    "end": "188390"
  },
  {
    "text": "As we saw in the discussion on the size of\nthe working set of a running program, there",
    "start": "188390",
    "end": "192731"
  },
  {
    "text": "are a certain number of separate regions we\nneed to accommodate to achieve a high hit",
    "start": "192731",
    "end": "196730"
  },
  {
    "text": "ratio: program, stack, data, etc.",
    "start": "196730",
    "end": "200489"
  },
  {
    "text": "So we need to ensure there are a sufficient\nnumber of blocks to hold the different addresses",
    "start": "200490",
    "end": "205130"
  },
  {
    "text": "in the working set.",
    "start": "205130",
    "end": "207450"
  },
  {
    "text": "The bottom line is that there is an optimum\nblock size that minimizes the miss ratio and",
    "start": "207450",
    "end": "213400"
  },
  {
    "text": "increasing the block size past that point\nwill be counterproductive.",
    "start": "213400",
    "end": "218129"
  },
  {
    "text": "Combining the information in these two graphs,\nwe can use the formula for AMAT to choose",
    "start": "218130",
    "end": "224120"
  },
  {
    "text": "the block size the gives us the best possible\nAMAT.",
    "start": "224120",
    "end": "229459"
  },
  {
    "text": "In modern processors, a common block size\nis 64 bytes (16 words).",
    "start": "229460",
    "end": "235430"
  },
  {
    "text": "DM caches do have an Achilles heel.",
    "start": "235430",
    "end": "239569"
  },
  {
    "text": "Consider running the 3-instruction LOOPA code\nwith the instructions located starting at",
    "start": "239570",
    "end": "244440"
  },
  {
    "text": "word address 1024 and the data starting at\nword address 37 where the program is making",
    "start": "244440",
    "end": "250710"
  },
  {
    "text": "alternating accesses to instruction and data,\ne.g., a loop of LD instructions.",
    "start": "250710",
    "end": "256120"
  },
  {
    "text": "Assuming a 1024-line DM cache with a block\nsize of 1, the steady state hit ratio will",
    "start": "256120",
    "end": "262419"
  },
  {
    "text": "be 100% once all six locations have been loaded\ninto the cache since each location is mapped",
    "start": "262419",
    "end": "268610"
  },
  {
    "text": "to a different cache line.",
    "start": "268610",
    "end": "271800"
  },
  {
    "text": "Now consider the execution of the same program,\nbut this time the data has been relocated",
    "start": "271800",
    "end": "277030"
  },
  {
    "text": "to start at word address 2048.",
    "start": "277030",
    "end": "280419"
  },
  {
    "text": "Now the instructions and data are competing\nfor use of the same cache lines.",
    "start": "280419",
    "end": "285509"
  },
  {
    "text": "For example, the first instruction (at address\n1024) and the first data word (at address",
    "start": "285509",
    "end": "291099"
  },
  {
    "text": "2048) both map to cache line 0, so only one\nthem can be in the cache at a time.",
    "start": "291099",
    "end": "298710"
  },
  {
    "text": "So fetching the first instruction fills cache\nline 0 with the contents of location 1024,",
    "start": "298710",
    "end": "304550"
  },
  {
    "text": "but then the first data access misses and\nthen refills cache line 0 with the contents",
    "start": "304550",
    "end": "310020"
  },
  {
    "text": "of location 2048.",
    "start": "310020",
    "end": "313180"
  },
  {
    "text": "The data address is said to \"conflict\" with\nthe instruction address.",
    "start": "313180",
    "end": "317749"
  },
  {
    "text": "The next time through the loop, the first\ninstruction will no longer be in the cache",
    "start": "317749",
    "end": "321190"
  },
  {
    "text": "and it's fetch will cause a cache miss, called\na \"conflict miss\".",
    "start": "321190",
    "end": "325770"
  },
  {
    "text": "So in the steady state, the cache will never\ncontain the word requested by the CPU.",
    "start": "325770",
    "end": "332370"
  },
  {
    "text": "This is very unfortunate!",
    "start": "332370",
    "end": "334550"
  },
  {
    "text": "We were hoping to design a memory system that\noffered the simple abstraction of a flat,",
    "start": "334550",
    "end": "338960"
  },
  {
    "text": "uniform address space.",
    "start": "338960",
    "end": "341220"
  },
  {
    "text": "But in this example we see that simply changing\na few addresses results in the cache hit ratio",
    "start": "341220",
    "end": "346430"
  },
  {
    "text": "dropping from 100% to 0%.",
    "start": "346430",
    "end": "350590"
  },
  {
    "text": "The programmer will certainly notice her program\nrunning 10 times slower!",
    "start": "350590",
    "end": "354979"
  },
  {
    "text": "So while we like the simplicity of DM caches,\nwe'll need to make some architectural changes",
    "start": "354979",
    "end": "360599"
  },
  {
    "text": "to avoid the performance problems caused by\nconflict misses.",
    "start": "360599",
    "end": "363909"
  }
]