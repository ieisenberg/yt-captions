[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "7350"
  },
  {
    "start": "7350",
    "end": "12760"
  },
  {
    "text": "JASON KU: OK, let's get started. Welcome to the 12th\nlecture of 6.006.",
    "start": "12760",
    "end": "19270"
  },
  {
    "text": "This is our second lecture\ntalking about weighted graphs, and in particular, weighted\nshortest paths, algorithms.",
    "start": "19270",
    "end": "27670"
  },
  {
    "text": "Last time we talked\nabout weighted graphs. This is a kind of\na generalization of what we mean by distance\nin an unweighted graph instead",
    "start": "27670",
    "end": "36610"
  },
  {
    "text": "of each edge having a\nweight of 1, essentially. We generalize that\nto be any integer.",
    "start": "36610",
    "end": "44440"
  },
  {
    "text": "And last time, we\nshowed how to solve shortest single-source\nshortest paths in a graph that",
    "start": "44440",
    "end": "51790"
  },
  {
    "text": "doesn't have cycles\neven if it has 0 or negative weights in linear\ntime using an algorithm called",
    "start": "51790",
    "end": "58540"
  },
  {
    "text": "DAG relaxation. We also showed in that\nlecture how in linear time,",
    "start": "58540",
    "end": "64180"
  },
  {
    "text": "if we are given the shortest\npath weights to all the things reachable in finite--",
    "start": "64180",
    "end": "69940"
  },
  {
    "text": "or with shortest path\ndistance that's finite, we can construct a\nshortest paths tree",
    "start": "69940",
    "end": "76960"
  },
  {
    "text": "from those weights\nin linear time. So this is motivating\nwhy we're not really",
    "start": "76960",
    "end": "83049"
  },
  {
    "text": "going to talk about parent\npointers for the next couple of lectures. We're just going to concentrate\non the shortest path weights.",
    "start": "83050",
    "end": "90940"
  },
  {
    "text": "And so today, we're\ngoing to be talking about our most general\nalgorithm we'll",
    "start": "90940",
    "end": "95950"
  },
  {
    "text": "be showing for solving\nsingle source shortest paths, in particular in graphs\nthat could contain cycles",
    "start": "95950",
    "end": "102940"
  },
  {
    "text": "and could have negative weights. So just to recap our\nlittle roadmap here,",
    "start": "102940",
    "end": "110930"
  },
  {
    "start": "110000",
    "end": "150000"
  },
  {
    "text": "single source shortest\npaths in linear time. Last time we discussed\nanother linear time algorithm,",
    "start": "110930",
    "end": "116440"
  },
  {
    "text": "DAG relaxation. And today we're\ngoing to be talking about Bellman-Ford, which isn't\nlimited to asymptotic graphs.",
    "start": "116440",
    "end": "124240"
  },
  {
    "text": "In particular, there could\nbe negative weight cycles in our graph.",
    "start": "124240",
    "end": "129459"
  },
  {
    "text": "If it has cycles, if it\nhas negative weights, the worry is that we could\nhave negative weight cycles,",
    "start": "129460",
    "end": "135820"
  },
  {
    "text": "in which case there-- if a negative weight cycle\nis reachable from our source,",
    "start": "135820",
    "end": "142420"
  },
  {
    "text": "then the vertices in\nthat cycle and anything reachable from that\ncycle will potentially",
    "start": "142420",
    "end": "148420"
  },
  {
    "text": "have an unbounded number of\nedges you need to go through.",
    "start": "148420",
    "end": "154540"
  },
  {
    "start": "150000",
    "end": "285000"
  },
  {
    "text": "There's not a bound on the\nnumber of edges for a shortest path, because I could\njust keep going around",
    "start": "154540",
    "end": "161470"
  },
  {
    "text": "that cycle as many times as I\nwant and get a shorter path. And so we assign those\ndistances to be minus infinity.",
    "start": "161470",
    "end": "169558"
  },
  {
    "text": "So that's what we're going\nto do today in Bellman-Ford. In particular, what we're going\nto do is compute our shortest",
    "start": "169558",
    "end": "177400"
  },
  {
    "text": "path distances,\nthe shortest path waits for every\nvertex in our graph,",
    "start": "177400",
    "end": "183760"
  },
  {
    "text": "setting the ones that are\nnot reachable to infinity, and the ones that are reachable\nthrough a negative weight",
    "start": "183760",
    "end": "190300"
  },
  {
    "text": "cycle to minus infinity, and\nall other ones we're going to set to a finite weight.",
    "start": "190300",
    "end": "196420"
  },
  {
    "text": "And another thing\nthat we might want is if there's a\nnegative weight cycle in the graph, let's return one.",
    "start": "196420",
    "end": "204129"
  },
  {
    "text": "So those are the\ntwo kinds of things that we're trying to\nsolve in today's lecture.",
    "start": "204130",
    "end": "209350"
  },
  {
    "text": "But before we do\nthat, let's warm up with two short exercises.",
    "start": "209350",
    "end": "216019"
  },
  {
    "text": "The first one, exercise 1,\ngiven an undirected graph,",
    "start": "216020",
    "end": "228110"
  },
  {
    "text": "given undirected graph G,\nreturn whether G contains",
    "start": "228110",
    "end": "252280"
  },
  {
    "text": "a negative weight cycle. ",
    "start": "252280",
    "end": "260139"
  },
  {
    "text": "Anyone have an idea of how we\ncan solve this in linear time, actually? In fact, we can do it in\norder E. No-- yes, yes.",
    "start": "260140",
    "end": "270280"
  },
  {
    "text": "Reachable from S. I guess-- let's just say a negative\nweight cycle at all.",
    "start": "270280",
    "end": "280110"
  },
  {
    "text": "Not in the context of\nsingle-source shortest paths. AUDIENCE: Detect whether\nthere's a negative weight edge?",
    "start": "280110",
    "end": "285120"
  },
  {
    "start": "285000",
    "end": "440000"
  },
  {
    "text": "JASON KU: Ah. Your colleague has determined\nan interesting fact",
    "start": "285120",
    "end": "290610"
  },
  {
    "text": "about undirected graphs. If you have a negative weight\nedge in an undirected graph,",
    "start": "290610",
    "end": "297720"
  },
  {
    "text": "I can just move back and\nforth along that edge. That's a cycle of length 2--",
    "start": "297720",
    "end": "303270"
  },
  {
    "text": "or I guess three vertices\nback to where we came from. There is of negative\nweight, because I'm just",
    "start": "303270",
    "end": "309210"
  },
  {
    "text": "traversing that weight over\nand over and over again. So the question of\nsingle-source shortest paths",
    "start": "309210",
    "end": "316319"
  },
  {
    "text": "of finding negative\nweights is not particularly interesting\nin the undirected case.",
    "start": "316320",
    "end": "322780"
  },
  {
    "text": "What I can do is just for\nevery negative weight edge, undirected edge in my graph, I\ncan just find the readability",
    "start": "322780",
    "end": "331050"
  },
  {
    "text": "from the vertices-- the endpoints of that edge\nand label them as minus--",
    "start": "331050",
    "end": "340199"
  },
  {
    "text": "basically if the connected\ncomponent containing S has a negative weight edge,\nthen everything in the graph",
    "start": "340200",
    "end": "347160"
  },
  {
    "text": "is accessible from a\nnegative weight cycle. So this is not such an\ninteresting problem. And so we're going to\nrestrict our discussion today",
    "start": "347160",
    "end": "360540"
  },
  {
    "text": "to directed graphs. ",
    "start": "360540",
    "end": "369020"
  },
  {
    "text": "So this is if and only if\nexists negative weight edge.",
    "start": "369020",
    "end": "380919"
  },
  {
    "text": " OK, exercise 2, kind of a little\npreview for what's to come,",
    "start": "380920",
    "end": "392770"
  },
  {
    "text": "we're actually not going to show\nyou an algorithm directly that meets this Bellman-Ford\nrunning time, V times E.",
    "start": "392770",
    "end": "400050"
  },
  {
    "text": "What instead we're going to show\nyou is an algorithm that solves single-source\nshortest paths in--",
    "start": "400050",
    "end": "407080"
  },
  {
    "text": "So given an algorithm,\nAlg A, solves",
    "start": "407080",
    "end": "414069"
  },
  {
    "text": "single-source shortest paths\nin order V times V plus E time.",
    "start": "414070",
    "end": "424522"
  },
  {
    "text": "OK, what is that? That's V squared plus\nV times E. That's close to what this V times E is.",
    "start": "424522",
    "end": "433509"
  },
  {
    "text": "That's what we're\ngoing to show you. But if I had such an\nalgorithm, can anyone",
    "start": "433510",
    "end": "439870"
  },
  {
    "text": "tell me a single-source\nshortest paths algorithm-- how we can use this algorithm\nto solve single-source shortest",
    "start": "439870",
    "end": "446560"
  },
  {
    "text": "paths in just V times E time? ",
    "start": "446560",
    "end": "455730"
  },
  {
    "text": "Show how to solve SSSP\nin order the V times E. I",
    "start": "455730",
    "end": "468990"
  },
  {
    "text": "guess we can put a\ndot there as well. So this is a little tricky.",
    "start": "468990",
    "end": "475080"
  },
  {
    "text": "It's kind of related\nto the difference we had between the\nreachability problem and the single-source\nshortest paths problem",
    "start": "475080",
    "end": "481979"
  },
  {
    "text": "that we saw last lecture. When are these asymptotically\ndifferent in their upper bound",
    "start": "481980",
    "end": "489840"
  },
  {
    "text": "is when V is asymptotically\nlarger than E.",
    "start": "489840",
    "end": "497590"
  },
  {
    "text": "But the connected\ncomponent containing S can have at most E\nvertices, or order",
    "start": "497590",
    "end": "507090"
  },
  {
    "text": "E. It can actually have\nat most E plus 1 vertices, because otherwise it\nwouldn't be connected.",
    "start": "507090",
    "end": "517169"
  },
  {
    "text": "So, what we can do if we\nhad such an algorithm, we could first, when we're\ngiving our graph, explore",
    "start": "517169",
    "end": "524399"
  },
  {
    "text": "everything in the\ngraph using BFS or DFS, find all the things\nreachable from S,",
    "start": "524400",
    "end": "530670"
  },
  {
    "text": "and then just throw\naway everything else. Now I have a graph for\nwhich V is asymptotically",
    "start": "530670",
    "end": "536700"
  },
  {
    "text": "no bigger than E, and then\nwe can use this algorithm to solve single-source shortest\npaths in V times E time.",
    "start": "536700",
    "end": "544529"
  },
  {
    "text": "I'm not going to write\nall that down here. You can see it in the notes. Yeah? AUDIENCE: Does this work\nif your graph isn't simple?",
    "start": "544530",
    "end": "550913"
  },
  {
    "text": "JASON KU: Does this work\nas your graph isn't simple? I haven't thought about it. We are not going to talk\nabout non-simple graphs",
    "start": "550913",
    "end": "556290"
  },
  {
    "text": "in this class, but\nprobably not because you've got a lot of edges.",
    "start": "556290",
    "end": "561780"
  },
  {
    "text": "Though in our class\nif we're talking about single-source\nshortest paths, if we have multiple edges\nbetween two vertices,",
    "start": "561780",
    "end": "568829"
  },
  {
    "text": "we can just take the\nminimum weight one because it's never better\nto take the larger ones. Does that answer your question?",
    "start": "568830",
    "end": "575430"
  },
  {
    "text": "Great. All right. So those are our\nwarm-ups, that's our goal. We need to find an algorithm for\nsingle-source shortest paths.",
    "start": "575430",
    "end": "582270"
  },
  {
    "text": "And general graphs,\ngraphs with-- potentially graphs with\ncycles, and negative weights,",
    "start": "582270",
    "end": "589020"
  },
  {
    "text": "and solve it in this V\ntimes linear kind of time.",
    "start": "589020",
    "end": "594270"
  },
  {
    "text": "That makes sense? All right. So first, before we\nget to the algorithm,",
    "start": "594270",
    "end": "600149"
  },
  {
    "text": "we're going to\ndiscuss a little bit about simple short-- about\nshortest paths in general.",
    "start": "600150",
    "end": "606670"
  },
  {
    "text": "If we didn't-- the problem\nhere is negative weights. How do we find-- if we had negative\nweight cycles,",
    "start": "606670",
    "end": "614040"
  },
  {
    "text": "there seems to be\nthese problems, because we could have minus\ninfinities is in our deltas.",
    "start": "614040",
    "end": "620360"
  },
  {
    "text": "But if we didn't have\nnegative weights, I'd like to assert to you\nthat our shortest paths, even",
    "start": "620360",
    "end": "626360"
  },
  {
    "text": "if there are negative weights,\nare going to be simple. They won't repeat vertices. So that's the first thing\nwe're going to show you.",
    "start": "626360",
    "end": "633590"
  },
  {
    "text": " Let's see.",
    "start": "633590",
    "end": "640050"
  },
  {
    "text": "Simple shortest paths.",
    "start": "640050",
    "end": "645235"
  },
  {
    "text": " OK.",
    "start": "645235",
    "end": "651130"
  },
  {
    "text": "So, claim.  I'm going to give\nmy claims numbers",
    "start": "651130",
    "end": "658240"
  },
  {
    "text": "today just because I'm\ngoing to have a lot of them. If my shortest path distance\nfrom S to some vertex",
    "start": "658240",
    "end": "666580"
  },
  {
    "text": "is finite, meaning it's not\ninfinite or minus infinite--",
    "start": "666580",
    "end": "673750"
  },
  {
    "text": "some finite value, there\nexists a shortest path--",
    "start": "673750",
    "end": "685315"
  },
  {
    "text": " a shortest S to V\npath that is simple.",
    "start": "685315",
    "end": "697269"
  },
  {
    "text": "And remember, simple means\nnot going through a vertex more than once. All right.",
    "start": "697270",
    "end": "702958"
  },
  {
    "text": "How are we going to prove this? ",
    "start": "702958",
    "end": "709390"
  },
  {
    "text": "Well, consider if this\nclaim was not true.",
    "start": "709390",
    "end": "715960"
  },
  {
    "text": "If every shortest path\ncontained a cycle, essentially.",
    "start": "715960",
    "end": "721625"
  },
  {
    "text": "It repeated a vertex. Then my path looks\nsomething like this.",
    "start": "721625",
    "end": "727910"
  },
  {
    "text": " I mean, there's some vertices\nalong here, and then I go to V.",
    "start": "727910",
    "end": "736930"
  },
  {
    "text": "So here's S, and then\nthere's some cycle I repeat, some vertex. I'm going to call this cycle C.",
    "start": "736930",
    "end": "746310"
  },
  {
    "text": "Now what do I know\nabout this path? I know that it has--\nit's a shortest path",
    "start": "746310",
    "end": "754079"
  },
  {
    "text": "and it has finite weight. So in particular, this\npath-- this delta distance",
    "start": "754080",
    "end": "759950"
  },
  {
    "text": "is not minus infinity. But if this is not\nminus infinity,",
    "start": "759950",
    "end": "765010"
  },
  {
    "text": "what do I know about the\nweight of this cycle? AUDIENCE: It's not negative. JASON KU: Yeah.",
    "start": "765010",
    "end": "770535"
  },
  {
    "text": "It can't be negative. Because if it was\nnegative, I could keep going around\nthis cycle, and this",
    "start": "770535",
    "end": "775580"
  },
  {
    "text": "would have a non-finite weight. Shortest path distance\nfrom S. So I know this is--",
    "start": "775580",
    "end": "783350"
  },
  {
    "text": "can't be negative, so it\nmust be 0 or positive. But if it's 0 or positive\nand this is a shortest path--",
    "start": "783350",
    "end": "790880"
  },
  {
    "text": "went through this cycle,\nthen I could remove it,",
    "start": "790880",
    "end": "796960"
  },
  {
    "text": "and now I have a new path\nwith one fewer cycle. I could just keep doing this\nto create a simple path.",
    "start": "796960",
    "end": "806130"
  },
  {
    "text": "So that checks out. OK. So, that's interesting.",
    "start": "806130",
    "end": "813060"
  },
  {
    "text": "If it's simple, what do we\nknow about the number of edges",
    "start": "813060",
    "end": "819000"
  },
  {
    "text": "in a simple shortest paths? How many could\nthere possibly be?",
    "start": "819000",
    "end": "825740"
  },
  {
    "text": "How long in number of edges\ncould a simple shortest path",
    "start": "825740",
    "end": "831550"
  },
  {
    "text": "be? If I can't repeat\nvertices, I can have at most vertices\non my simple path, which",
    "start": "831550",
    "end": "840709"
  },
  {
    "text": "means I can use at\nmost V minus 1 edges-- fence posting.",
    "start": "840710",
    "end": "846589"
  },
  {
    "text": "So, simple paths have\nat most V minus 1 edges.",
    "start": "846590",
    "end": "859260"
  },
  {
    "start": "859260",
    "end": "865520"
  },
  {
    "text": "That's a nice little\nthing I'd like to box off. That's a really nice property.",
    "start": "865520",
    "end": "871355"
  },
  {
    "text": " So while a shortest path here\ncould have an infinite number",
    "start": "871355",
    "end": "880000"
  },
  {
    "text": "of edges, if the shortest\npath distance is finite,",
    "start": "880000",
    "end": "885310"
  },
  {
    "start": "882000",
    "end": "1077000"
  },
  {
    "text": "I know I only have\nto check paths that use up to V minus 1 edges.",
    "start": "885310",
    "end": "891710"
  },
  {
    "text": "In particular, this is finitely\nbounded in terms of the number of paths I have to consider.",
    "start": "891710",
    "end": "897950"
  },
  {
    "text": "It's exponential, potentially,\nbut at least it's finite. The other way, I potentially\nhad to check every possible path",
    "start": "897950",
    "end": "909129"
  },
  {
    "text": "of which there could be infinite\nif there's cycles in my graph. OK.",
    "start": "909130",
    "end": "914420"
  },
  {
    "text": "So I have an idea.",
    "start": "914420",
    "end": "919930"
  },
  {
    "text": "What if I could find\nshortest-path distances",
    "start": "919930",
    "end": "925950"
  },
  {
    "text": "by limiting the number\nof edges I go through? So not the full shortest\npath distance from S",
    "start": "925950",
    "end": "935524"
  },
  {
    "text": "to V, but let's limit\nthe number of edges I'm allowed to go\nthrough, and let's",
    "start": "935525",
    "end": "941480"
  },
  {
    "text": "talk about those\nshortest-path distances, just among the paths that\nhave at most a certain number",
    "start": "941480",
    "end": "946639"
  },
  {
    "text": "of edges. I'm going to call\nthis k-edge distance.",
    "start": "946640",
    "end": "955370"
  },
  {
    "text": "And I'm just going to provide\na little notation here. Instead of having a delta,\nI'll have a delta k here.",
    "start": "955370",
    "end": "962339"
  },
  {
    "text": "That means how many\nedges I'm limited by. So from S to V is shortest S to\nV path using at most k edges.",
    "start": "962340",
    "end": "984334"
  },
  {
    "start": "984335",
    "end": "989750"
  },
  {
    "text": "Short-- weight-- weight of a.",
    "start": "989750",
    "end": "996800"
  },
  {
    "text": "Shortest path, shortest S to\nV path using at most k edges.",
    "start": "996800",
    "end": "1003550"
  },
  {
    "text": "And these notions seem\nsomewhat symmetric. If I were able to compute this\nthing for V minus 1, then--",
    "start": "1003550",
    "end": "1019699"
  },
  {
    "text": "for all the vertices, then\nif the distance is finite,",
    "start": "1019700",
    "end": "1026430"
  },
  {
    "text": "then I'll have\nsuccessfully computed the real shortest paths\nbecause of this statement.",
    "start": "1026430",
    "end": "1032569"
  },
  {
    "text": "Now that doesn't mean\nthat if this is-- ",
    "start": "1032569",
    "end": "1040189"
  },
  {
    "text": "it doesn't mean the other way. If this is minus infinity, if\nthe shortest-path distance is",
    "start": "1040190",
    "end": "1046939"
  },
  {
    "text": "minus infinity, it doesn't say\nanything about what this is. It just says the\nshortest path using",
    "start": "1046940",
    "end": "1054500"
  },
  {
    "text": "at most V minus 1 vertices,\nusing at most V minus 1 edges",
    "start": "1054500",
    "end": "1060200"
  },
  {
    "text": "would be whatever this is. But really, the\nshortest path length needs to consider an\ninfinite number of edges.",
    "start": "1060200",
    "end": "1066620"
  },
  {
    "text": "So it doesn't really\ntell us much about that. But for the finite ones it does. It works well.",
    "start": "1066620",
    "end": "1073049"
  },
  {
    "text": "And so if we are able to\ncompute this thing for k equals V minus 1 in a graph that\ndoesn't contain negative weight",
    "start": "1073050",
    "end": "1081850"
  },
  {
    "start": "1077000",
    "end": "1507000"
  },
  {
    "text": "cycles, we'd be done.  I claim to you a\nstronger statement,",
    "start": "1081850",
    "end": "1089769"
  },
  {
    "text": "that if the shortest path using\nat most V edges from s to v Is",
    "start": "1089770",
    "end": "1104960"
  },
  {
    "text": "less than-- strictly less\nthan delta of V minus 1-- ",
    "start": "1104960",
    "end": "1113659"
  },
  {
    "text": "this is all in the\nsubscript here. Basically this is the\nshortest-path distance",
    "start": "1113660",
    "end": "1123600"
  },
  {
    "text": "of any simple path, and possibly\nones that also contain cycles,",
    "start": "1123600",
    "end": "1129240"
  },
  {
    "text": "but definitely it includes\nall the simple paths. If there's a shorter\npath to my vertex",
    "start": "1129240",
    "end": "1138590"
  },
  {
    "text": "that goes through more\nthan V minus 1 edges, that this path can't\nbe simple, because it",
    "start": "1138590",
    "end": "1146809"
  },
  {
    "text": "goes through a vertex\nmore than once. Otherwise it would be\nincluded in this distance set.",
    "start": "1146810",
    "end": "1153539"
  },
  {
    "text": "So if this is the case,\nand I found a shorter path to V that uses v edges--",
    "start": "1153540",
    "end": "1161790"
  },
  {
    "text": "yeah, that use V\nedges, that path can't be simple, which\nmeans that path or some path",
    "start": "1161790",
    "end": "1168520"
  },
  {
    "text": "there contains a\nnegative weight cycle. So if this is true,\nthen I know that",
    "start": "1168520",
    "end": "1178960"
  },
  {
    "text": "the real shortest-path\ndistance from S to V must be minus infinity.",
    "start": "1178960",
    "end": "1185830"
  },
  {
    "text": " I'm going to call such\na vertex a witness.",
    "start": "1185830",
    "end": "1193360"
  },
  {
    "text": "If we can find a vertex\nthat has this property-- I mean, I haven't shown you how\nto compute these things yet,",
    "start": "1193360",
    "end": "1199720"
  },
  {
    "text": "but if I were able\nto find a vertex V-- and these are capital V's\nif you're having trouble.",
    "start": "1199720",
    "end": "1208980"
  },
  {
    "text": "This V is different than\nthis V, this is cardinality. If we can find such\na vertex V, that",
    "start": "1208980",
    "end": "1215670"
  },
  {
    "text": "certifies that there\nis a negative weight cycle in our graph.",
    "start": "1215670",
    "end": "1221590"
  },
  {
    "text": "So I'm going to\ncall V is a witness. ",
    "start": "1221590",
    "end": "1230630"
  },
  {
    "text": "OK. So, if this property\nis true, it's a witness",
    "start": "1230630",
    "end": "1238720"
  },
  {
    "text": "and it definitely has this. Is it possible, you think-- I'm going to claim\nto you that it's possible that a vertex could\nhave minus infinite distance",
    "start": "1238720",
    "end": "1249330"
  },
  {
    "text": "but not have this property\nhalt. I could probably",
    "start": "1249330",
    "end": "1255059"
  },
  {
    "text": "give you an example-- I don't have one off the\ntop of my head right now, but that's possible.",
    "start": "1255060",
    "end": "1260220"
  },
  {
    "text": "You could imagine,\nthere might be no path going to a vertex on\na negative weight cycle that",
    "start": "1260220",
    "end": "1267630"
  },
  {
    "text": "goes through V exactly V edges. It might go through more\nedges, a shorter one.",
    "start": "1267630",
    "end": "1274860"
  },
  {
    "text": "So this equation\nwould be inequality and would not certify\nthat this is true.",
    "start": "1274860",
    "end": "1283529"
  },
  {
    "text": "But I claim to you, if a\nvertex has this property, if it's its shortest path\ndistances minus infinite,",
    "start": "1283530",
    "end": "1293010"
  },
  {
    "text": "then it must be\nreachable from a witness. So that's the claim. ",
    "start": "1293010",
    "end": "1301010"
  },
  {
    "text": "If delta S, V is\nminus infinity, then V",
    "start": "1301010",
    "end": "1312460"
  },
  {
    "text": "is reachable from a witness.",
    "start": "1312460",
    "end": "1322559"
  },
  {
    "text": "Reachable from a vertex that\nhas this property-- that has this property. And if it's reachable\nfrom something",
    "start": "1322560",
    "end": "1329100"
  },
  {
    "text": "that has minus infinity\nshortest pathway, then I can take that path\ngo to my reachable vertex,",
    "start": "1329100",
    "end": "1336940"
  },
  {
    "text": "and that's also\nminus infinite path. OK. So how do we prove this?",
    "start": "1336940",
    "end": "1342180"
  },
  {
    "start": "1342180",
    "end": "1348320"
  },
  {
    "text": "Well, let's consider--\nlet's I'm going",
    "start": "1348320",
    "end": "1357799"
  },
  {
    "text": "to state a somewhat stronger\nstatement that we'll prove instead.",
    "start": "1357800",
    "end": "1363940"
  },
  {
    "text": "It suffices to prove that\nevery negative weight cycle contains a witness.",
    "start": "1363940",
    "end": "1371210"
  },
  {
    "text": "If we are to prove\nthat, then every vertex with this property, every\nvertex with this property",
    "start": "1371210",
    "end": "1385510"
  },
  {
    "text": "is reachable from a negative\nweight cycle by definition.",
    "start": "1385510",
    "end": "1390840"
  },
  {
    "text": "So, if we can prove that every-- ",
    "start": "1390840",
    "end": "1398920"
  },
  {
    "text": "prove every negative weight\ncycle contains witness.",
    "start": "1398920",
    "end": "1416510"
  },
  {
    "text": " If we can prove that every\nnegative weight cycle contains",
    "start": "1416510",
    "end": "1422040"
  },
  {
    "text": "a witness, then every vertex\nreachable from one of those",
    "start": "1422040",
    "end": "1427800"
  },
  {
    "text": "witnesses-- in particular,\nreachable from the negative weight cycle-- ",
    "start": "1427800",
    "end": "1433850"
  },
  {
    "text": "has shortest distance\nminus infinity,",
    "start": "1433850",
    "end": "1439897"
  },
  {
    "text": "and that should prove the claim.  This thing has to be reachable\nfrom a negative weight cycle.",
    "start": "1439897",
    "end": "1446900"
  },
  {
    "start": "1446900",
    "end": "1452700"
  },
  {
    "text": "And so if we prove negative\nweight cycles contain witnesses, then all\nof these vertices",
    "start": "1452700",
    "end": "1459232"
  },
  {
    "text": "are reachable from a witness. OK, great, great. Confusing myself\nthere for a second. OK.",
    "start": "1459232",
    "end": "1465679"
  },
  {
    "text": "So let's consider a\nnegative weight cycle.",
    "start": "1465680",
    "end": "1470820"
  },
  {
    "text": "NG. Here's a directed\nnegative weight cycle. Recall.",
    "start": "1470820",
    "end": "1475860"
  },
  {
    "text": " This will be my\nnegative weight cycle C.",
    "start": "1475860",
    "end": "1482870"
  },
  {
    "text": "All of the sum of the\nedges in this thing, the weights has negative weight.",
    "start": "1482870",
    "end": "1488100"
  },
  {
    "text": " And I'm going to have\na little bit notation-- if I have a vertex\nV here, I'm going",
    "start": "1488100",
    "end": "1496560"
  },
  {
    "text": "to say that its predecessor\nin the cycle, I'm just going to call it V prime.",
    "start": "1496560",
    "end": "1502961"
  },
  {
    "text": "That's just some notation.  All right.",
    "start": "1502962",
    "end": "1508970"
  },
  {
    "text": "So, if I have computed these\nshortest-path distances",
    "start": "1508970",
    "end": "1515480"
  },
  {
    "text": "to every vertex in my graph,\nshortest-path distance going through at most V vertices\nand the shortest path",
    "start": "1515480",
    "end": "1521780"
  },
  {
    "text": "distance going through at\nmost V minus 1 vertices, then I know the\nfollowing thing holds.",
    "start": "1521780",
    "end": "1527420"
  },
  {
    "text": "Delta V going from S to V\nfor any vertex in my cycle",
    "start": "1527420",
    "end": "1535600"
  },
  {
    "text": "can't be bigger\nthan delta V minus 1",
    "start": "1535600",
    "end": "1541120"
  },
  {
    "text": "from S to U plus the weight--",
    "start": "1541120",
    "end": "1546400"
  },
  {
    "text": "sorry, not U-- V\nprime, its predecessor, plus the weight going from\nthe predecessor to my vertex.",
    "start": "1546400",
    "end": "1556100"
  },
  {
    "text": "Why is that? Why is that? Because this is the\nweight of some vertex--",
    "start": "1556100",
    "end": "1562020"
  },
  {
    "text": "this is the weight-- the shortest-path\ndistance to my predecessor",
    "start": "1562020",
    "end": "1568080"
  },
  {
    "text": "using one fewer edge. And so this in\nparticular is the weight of some path that uses V edges.",
    "start": "1568080",
    "end": "1577010"
  },
  {
    "text": "So if this is the shortest\nsuch path distance, this has to upper\nbound it at least--",
    "start": "1577010",
    "end": "1584870"
  },
  {
    "text": "at most. Yeah? AUDIENCE: Is that the\ntriangle inequality? JASON KU: That is a statement\nof the triangle inequality, thank you.",
    "start": "1584870",
    "end": "1592240"
  },
  {
    "text": "All right. So, yes, this is just\nby triangle inequality.",
    "start": "1592240",
    "end": "1597460"
  },
  {
    "text": "OK. Now what we can say is, let's\ntake this equation summed",
    "start": "1597460",
    "end": "1603490"
  },
  {
    "text": "over all vertices in my cycle. So I'm just going\nto add summation",
    "start": "1603490",
    "end": "1611260"
  },
  {
    "text": "here of all vertices in my\ncycle of this whole thing.",
    "start": "1611260",
    "end": "1617350"
  },
  {
    "text": "I'm going to do that\nout a little bit neater. Summation of delta, not d.",
    "start": "1617350",
    "end": "1628420"
  },
  {
    "text": "Delta V S, V. I guess I don't\nneed this open parentheses.",
    "start": "1628420",
    "end": "1638150"
  },
  {
    "text": "Equals-- or less than or equal\nto sum of V and C of delta",
    "start": "1638150",
    "end": "1646760"
  },
  {
    "text": "V minus 1 V prime. ",
    "start": "1646760",
    "end": "1653890"
  },
  {
    "text": "And here, I'm\nsumming over V and C, and this is just my notation\nfor the predecessor.",
    "start": "1653890",
    "end": "1662320"
  },
  {
    "text": "And then I'm going to sum\nover the weights in my cycle",
    "start": "1662320",
    "end": "1668740"
  },
  {
    "text": "V and C. These are the sum\nof the weights in my cycle. Well, what do I know\nabout this cycle?",
    "start": "1668740",
    "end": "1677090"
  },
  {
    "text": "This is just the weight\nof C. The weight of C-- that's awful handwriting.",
    "start": "1677090",
    "end": "1683799"
  },
  {
    "text": "C, what do I know about\nthe weight of the cycle? It's negative.",
    "start": "1683800",
    "end": "1689240"
  },
  {
    "text": "So, this is less than 0, which\nmeans that if I remove this,",
    "start": "1689240",
    "end": "1696452"
  },
  {
    "text": "this needs to be\na strict equality. ",
    "start": "1696452",
    "end": "1702630"
  },
  {
    "text": "But if the sum of all\nof these is strictly less than the sum\nof all these, we",
    "start": "1702630",
    "end": "1710110"
  },
  {
    "text": "can't have none of the vertices\nin my graph satisfying--",
    "start": "1710110",
    "end": "1716440"
  },
  {
    "text": "not satisfying this property. ",
    "start": "1716440",
    "end": "1722030"
  },
  {
    "text": "If all of them\nare not witnesses, then this thing is bigger\nthan this thing-- at least",
    "start": "1722030",
    "end": "1729970"
  },
  {
    "text": "as big as this thing for every\nvertex in my cycle, which is a contradiction.",
    "start": "1729970",
    "end": "1736640"
  },
  {
    "text": "So, the claim holds, if we\nhave a negative infinite",
    "start": "1736640",
    "end": "1742560"
  },
  {
    "text": "shortest-path distance, then\nV is reachable from a witness. So it suffices for us to\nfind all the witnesses,",
    "start": "1742560",
    "end": "1749190"
  },
  {
    "text": "find all the vertices\nreachable from the witnesses, and then mark them\nas minus infinity.",
    "start": "1749190",
    "end": "1756049"
  },
  {
    "text": "Does that make sense? OK. So, now we finally are able\nto get to our algorithm.",
    "start": "1756050",
    "end": "1766610"
  },
  {
    "text": "Bellman-Ford. ",
    "start": "1766610",
    "end": "1771710"
  },
  {
    "text": "And what I'm going\nto show you today is a little different\nthan what is normally",
    "start": "1771710",
    "end": "1777019"
  },
  {
    "text": "presented as Bellman-Ford. The original\nBellman-Ford algorithm",
    "start": "1777020",
    "end": "1782040"
  },
  {
    "text": "does something a\nlittle different. And because it does\nsomething a little different, which we'll talk\nabout at the end,",
    "start": "1782040",
    "end": "1788130"
  },
  {
    "text": "it's a little\nhairier to analyze. I'm going to show you\na modification that",
    "start": "1788130",
    "end": "1793950"
  },
  {
    "text": "is a little easier to analyze\nand has this nice property that we're going to be\nable to use the algorithm",
    "start": "1793950",
    "end": "1801120"
  },
  {
    "text": "to give us a negative\nweight cycle if it exists. ",
    "start": "1801120",
    "end": "1806919"
  },
  {
    "text": "So, we're going to say this is\nmaybe a modified Bellman-Ford.",
    "start": "1806920",
    "end": "1812000"
  },
  {
    "text": "And the idea here is to make\na vertex associate-- make",
    "start": "1812000",
    "end": "1820000"
  },
  {
    "start": "1817000",
    "end": "2097000"
  },
  {
    "text": "many versions of a vertex. And I want this\nversion of the vertex",
    "start": "1820000",
    "end": "1826300"
  },
  {
    "text": "to correspond to whether I came\nhere using 0 edges, 1 edge, 2",
    "start": "1826300",
    "end": "1832360"
  },
  {
    "text": "edges, 3 edges-- I have a different\nvertex version of the vertex for\neach one of these--",
    "start": "1832360",
    "end": "1839530"
  },
  {
    "text": "for a path going\nthrough, at most,",
    "start": "1839530",
    "end": "1844660"
  },
  {
    "text": "a certain number of edges. OK. So this is an idea\ncalled graph duplication.",
    "start": "1844660",
    "end": "1851080"
  },
  {
    "text": "Idea, graph duplication.",
    "start": "1851080",
    "end": "1858870"
  },
  {
    "text": "And this is a very\ncommon technique for solving\ngraph-related problems.",
    "start": "1858870",
    "end": "1864890"
  },
  {
    "text": "Because essentially\nwhat I get to do is I get to store information. ",
    "start": "1864890",
    "end": "1871860"
  },
  {
    "text": "If I'm having different\nversions of a vertex, I can have that\nvertex correspond",
    "start": "1871860",
    "end": "1878270"
  },
  {
    "text": "to reaching that vertex\nin a different state. So that's what we're\ngoing to do here.",
    "start": "1878270",
    "end": "1884179"
  },
  {
    "text": "The idea here is make\nV plus 1 levels--",
    "start": "1884180",
    "end": "1896040"
  },
  {
    "text": "basically duplicate\nvertices in our graph-- ",
    "start": "1896040",
    "end": "1904080"
  },
  {
    "text": "where vertex Vk in level k\nrepresents reaching vertex",
    "start": "1904080",
    "end": "1925480"
  },
  {
    "text": "V using at most k edges.",
    "start": "1925480",
    "end": "1933120"
  },
  {
    "text": "OK, so this definition\nseems similar to what we're doing up here.",
    "start": "1933120",
    "end": "1939840"
  },
  {
    "text": "If we have vertices that\nhave this property, then their shortest paths\nin this new graph",
    "start": "1939840",
    "end": "1946710"
  },
  {
    "text": "might correspond to\nthese k edge distances. And really, the name\nof the game here",
    "start": "1946710",
    "end": "1952200"
  },
  {
    "text": "is to compute these\ntwo for every vertex, because then we can-- then if d is finite,\ndelta is finite,",
    "start": "1952200",
    "end": "1962350"
  },
  {
    "text": "then this guy will be the\nlength of our shortest path. And if they are different,\nthat will be a witness",
    "start": "1962350",
    "end": "1968190"
  },
  {
    "text": "and we can explore from it. So-- and if we connect\nedges from one level",
    "start": "1968190",
    "end": "1994750"
  },
  {
    "text": "to only higher levels, basically\nlevels with a higher k, then",
    "start": "1994750",
    "end": "2006400"
  },
  {
    "text": "this graph is going to be a DAG. ",
    "start": "2006400",
    "end": "2014419"
  },
  {
    "text": "Whoa. That's cool. Why is that cool? Because we saw how to solve\nsingle-source shortest paths",
    "start": "2014420",
    "end": "2022440"
  },
  {
    "text": "in a DAG and linear time. Now this graph that\nwe're going to construct is going to have\nV plus 1 levels.",
    "start": "2022440",
    "end": "2029100"
  },
  {
    "text": "So could have-- our graph\nkind of explodes V times.",
    "start": "2029100",
    "end": "2035245"
  },
  {
    "text": " We're going to do\nthat in a second. I'm going to be more precise\nwith what I mean there.",
    "start": "2035245",
    "end": "2042560"
  },
  {
    "text": "But if we're multiplying\nour graph V plus 1 times,",
    "start": "2042560",
    "end": "2047740"
  },
  {
    "text": "then the size of our graph\nis now V times larger. Now that doesn't-- that's\nnot so hard to believe.",
    "start": "2047740",
    "end": "2054789"
  },
  {
    "text": "But if we made our\ngraph V times larger and we ran a shortest path\nalgorithm in linear time",
    "start": "2054790",
    "end": "2061300"
  },
  {
    "text": "with respect to that\ngraph, then that graph has something like size\nV times V plus E size.",
    "start": "2061300",
    "end": "2073669"
  },
  {
    "text": " That looks familiar, maybe?",
    "start": "2073670",
    "end": "2079100"
  },
  {
    "text": " That's this running time.",
    "start": "2079100",
    "end": "2085388"
  },
  {
    "text": "So if we can find an algorithm\nthat runs in that running time, we can get down to V times E.",
    "start": "2085389",
    "end": "2091129"
  },
  {
    "text": "So let's try to do that. ",
    "start": "2091130",
    "end": "2097640"
  },
  {
    "start": "2097000",
    "end": "2557000"
  },
  {
    "text": "Here's the transformation\nI'm going to show you. I'm going to show you\nfirst with an example.",
    "start": "2097640",
    "end": "2102830"
  },
  {
    "text": "Here's an example of a directed\ngraph that does contain",
    "start": "2102830",
    "end": "2108770"
  },
  {
    "text": "a negative weight cycle. Can anyone find it for me? ",
    "start": "2108770",
    "end": "2116830"
  },
  {
    "text": "bcd. Has weigh minus\n4 plus 3 minus 1.",
    "start": "2116830",
    "end": "2121960"
  },
  {
    "text": "It has a minus 2 total weight. So that's a negative\nweight cycle.",
    "start": "2121960",
    "end": "2128839"
  },
  {
    "text": "So in order to take\nshortest paths from a,",
    "start": "2128840",
    "end": "2133870"
  },
  {
    "text": "I will want to say at the end of\nmy algorithm, this better be 0,",
    "start": "2133870",
    "end": "2139330"
  },
  {
    "text": "and all of these better\nbe minus infinity. So that's what I\nwant in my algorithm.",
    "start": "2139330",
    "end": "2147170"
  },
  {
    "text": "So what's my\nalgorithm going to be? I'm going to make V plus\n1 copies of this graph,",
    "start": "2147170",
    "end": "2155250"
  },
  {
    "text": "and I'm going to kind\nof stretch it out. OK. So here, I have\nV 0, 1, 2, 3, 4--",
    "start": "2155250",
    "end": "2162260"
  },
  {
    "text": "there are four\nvertices in my graph. So this is 1, 2, 3, 4,\n5 copies of my graph.",
    "start": "2162260",
    "end": "2168620"
  },
  {
    "text": "I have a version of vertex a\nfor each one of those copies, a version of vertex b for\neach of those copies, c",
    "start": "2168620",
    "end": "2176390"
  },
  {
    "text": "and d, et cetera. So I have this nice\ngrid of vertices.",
    "start": "2176390",
    "end": "2181730"
  },
  {
    "text": "And I'm not going to put\nany edges within a layer, within a level.",
    "start": "2181730",
    "end": "2187900"
  },
  {
    "text": "Because then-- I mean,\nthis graph has cycles. And I don't want\ncycles in my graph.",
    "start": "2187900",
    "end": "2193059"
  },
  {
    "text": "What I'm going to do\ninstead is for every edge in my original graph-- for\nexample, the edge from a to b,",
    "start": "2193060",
    "end": "2200140"
  },
  {
    "text": "I'm going to connect it to\nthe b in the next level. So a0 is connected to b1 with\nan edge weight of minus 5,",
    "start": "2200140",
    "end": "2209860"
  },
  {
    "text": "just like in the original. And I'm going to do that\nfor every edge in my graph, and I'm going to repeat\nthat down all the way.",
    "start": "2209860",
    "end": "2215807"
  },
  {
    "text": " In addition, I'm going to\nadd zero-weight edge from a0",
    "start": "2215807",
    "end": "2223770"
  },
  {
    "text": "to a1 or from every vertex\nall the way down the line. These are all zero-weight\nedges corresponding to--",
    "start": "2223770",
    "end": "2231510"
  },
  {
    "text": "I'm not going to\ntraverse an edge, I'm just going to\nstay at this vertex.",
    "start": "2231510",
    "end": "2237360"
  },
  {
    "text": "That's going to\nallow us to simulate this at most k edges condition.",
    "start": "2237360",
    "end": "2242460"
  },
  {
    "text": "Now if you take a look at\npaths in this graph from a0, our starting\nvertex, clearly none",
    "start": "2242460",
    "end": "2252760"
  },
  {
    "text": "of the other vertices in that\nlevel are reachable from a0,",
    "start": "2252760",
    "end": "2258700"
  },
  {
    "text": "just as we want. Because the\nshortest-path distance to any of these vertices\nusing at most 0 edges",
    "start": "2258700",
    "end": "2267100"
  },
  {
    "text": "should be infinite. I can't get there in 0 edges. ",
    "start": "2267100",
    "end": "2273730"
  },
  {
    "text": "But then any path in this\ngraph using at most k edges",
    "start": "2273730",
    "end": "2283920"
  },
  {
    "text": "is going to correspond\nto a path from a0",
    "start": "2283920",
    "end": "2289530"
  },
  {
    "text": "to a vertex in that level,\nthe corresponding level. So for example, if I had a--",
    "start": "2289530",
    "end": "2296610"
  },
  {
    "text": "if I was looking\nfor paths 2b using",
    "start": "2296610",
    "end": "2306450"
  },
  {
    "text": "at most three edges, any path--",
    "start": "2306450",
    "end": "2314400"
  },
  {
    "text": "a path from a0 to\nb3 in this graph",
    "start": "2314400",
    "end": "2320670"
  },
  {
    "text": "would correspond to a\npath in this graph that uses at most three edges.",
    "start": "2320670",
    "end": "2327320"
  },
  {
    "text": "so Let's find such a path. So going from a0,\nb1, stay at b1--",
    "start": "2327320",
    "end": "2338260"
  },
  {
    "text": "stay at b, sorry. Yeah, that's a path using\nfewer than three edges--",
    "start": "2338260",
    "end": "2345020"
  },
  {
    "text": "or at most three edges. But there's another path here. Where is it?",
    "start": "2345020",
    "end": "2351100"
  },
  {
    "text": "Going from a, a, a to b-- OK, that's not such\nan interesting one. That's the same path.",
    "start": "2351100",
    "end": "2357410"
  },
  {
    "text": "So I might have more than one\npath in here corresponding to a path in there, but my\nclaim is that any path in here",
    "start": "2357410",
    "end": "2364420"
  },
  {
    "text": "corresponds to a path in here. So what's a path of length?",
    "start": "2364420",
    "end": "2371790"
  },
  {
    "text": "3, that's non-trivial. Yeah, a to c to d to b. So a to c to d to b.",
    "start": "2371790",
    "end": "2382620"
  },
  {
    "text": "Yeah, that's a path. And basically, because\nI constructed this so that the edges always\nmoved from level to level,",
    "start": "2382620",
    "end": "2389670"
  },
  {
    "text": "as I traverse these edges,\nI always change levels. Yeah?",
    "start": "2389670",
    "end": "2396487"
  },
  {
    "text": "AUDIENCE: But my original\ngraph doesn't have these self-loops with 0 weight. JASON KU: Yes. My original graph doesn't\nhave an edge from a to a.",
    "start": "2396487",
    "end": "2406059"
  },
  {
    "text": "That's true. I'm using these edges\nto correspond to--",
    "start": "2406060",
    "end": "2412430"
  },
  {
    "text": "I'm deciding not\nto take an edge. ",
    "start": "2412430",
    "end": "2419160"
  },
  {
    "text": "It's not that I'm like\ndoing any work here, I'm just staying\nthere for a state.",
    "start": "2419160",
    "end": "2425349"
  },
  {
    "text": "And that's what's going to allow\nme to get this at most edges. All right. So, this is the graph construct.",
    "start": "2425350",
    "end": "2431040"
  },
  {
    "text": "Hopefully you understand\nthat we made these V layers.",
    "start": "2431040",
    "end": "2437760"
  },
  {
    "text": "This is V. And a vertex--",
    "start": "2437760",
    "end": "2444600"
  },
  {
    "text": "we made V copies of every\nvertex and connected them using edges in this way. OK.",
    "start": "2444600",
    "end": "2450980"
  },
  {
    "text": "So, first step of Bellman-Ford\nis construct this graph. ",
    "start": "2450980",
    "end": "2458980"
  },
  {
    "text": "So, Bellman-Ford, construct\nG prime as described above.",
    "start": "2458980",
    "end": "2469619"
  },
  {
    "text": "It has how many vertices? ",
    "start": "2469620",
    "end": "2476980"
  },
  {
    "text": "V times V plus 1. V times V plus 1 vertices.",
    "start": "2476980",
    "end": "2482829"
  },
  {
    "text": "And how many edges? Well, I have one edge for\noutgoing edge for each vertex",
    "start": "2482830",
    "end": "2489820"
  },
  {
    "text": "corresponding to just\nstaying in the same place. So that's V squared vertices--",
    "start": "2489820",
    "end": "2497880"
  },
  {
    "text": "I mean edges. And then I have one edge-- for every edge in\nmy graph, I have--",
    "start": "2497880",
    "end": "2505539"
  },
  {
    "text": "sorry. I have a V minus 1-- sorry. Just V. I have V edges for\nevery edge in my graph.",
    "start": "2505540",
    "end": "2513420"
  },
  {
    "text": "So that means-- so this\nis the number of vertices. ",
    "start": "2513420",
    "end": "2520230"
  },
  {
    "text": "And V times V plus\nV times E, this",
    "start": "2520230",
    "end": "2531600"
  },
  {
    "text": "is V V plus E. All right, cool.",
    "start": "2531600",
    "end": "2538710"
  },
  {
    "text": "So that's how many edges I have. So constructed in\nthat way, it's a DAG.",
    "start": "2538710",
    "end": "2544900"
  },
  {
    "text": "If we only have edges\ngoing to increasing levels, then this thing\ncan't have cycles,",
    "start": "2544900",
    "end": "2551115"
  },
  {
    "text": "because otherwise that\nwould mean there would be an edge pointing backwards. And we didn't\nconstruct any of those.",
    "start": "2551115",
    "end": "2557090"
  },
  {
    "start": "2557000",
    "end": "2939000"
  },
  {
    "text": "All right. So we construct\nthis graph G prime. We can do that in linear time\nwith respect to these things.",
    "start": "2557090",
    "end": "2563620"
  },
  {
    "text": "I just go through all the\nedges, I make these edges, and I make these vertices. It doesn't take anything--",
    "start": "2563620",
    "end": "2569630"
  },
  {
    "text": "I just do it naively. Right I can do that in time V\ntimes V plus E asymptotically.",
    "start": "2569630",
    "end": "2579269"
  },
  {
    "text": "OK. Now I run DAG relaxation,\nour nice algorithm",
    "start": "2579270",
    "end": "2588210"
  },
  {
    "text": "we had last time, from--",
    "start": "2588210",
    "end": "2593625"
  },
  {
    "text": " in there was a0. I'm going to say\nit's S0, our source.",
    "start": "2593625",
    "end": "2602600"
  },
  {
    "text": "Our source vertex. Single source shortest paths.",
    "start": "2602600",
    "end": "2607940"
  },
  {
    "text": "So that I compute delta of\nS0 to Vk for all k and--",
    "start": "2607940",
    "end": "2624670"
  },
  {
    "text": "what is it? 0 to V. That's what single\nsource shortest paths does.",
    "start": "2624670",
    "end": "2634430"
  },
  {
    "text": "It computes for me this\ndistance from my source-- at some source to every\nother vertex in the graph.",
    "start": "2634430",
    "end": "2641090"
  },
  {
    "text": "And so in particular\nI get these. Well, that is all of them. ",
    "start": "2641090",
    "end": "2648349"
  },
  {
    "text": "Then for each vertex V, set--",
    "start": "2648350",
    "end": "2661240"
  },
  {
    "text": "the thing I'm going to\nreturn, d-value, S to V,",
    "start": "2661240",
    "end": "2667960"
  },
  {
    "text": "equal to the\nshortest-path distance I got from DAG relaxation\nto a particular vertex.",
    "start": "2667960",
    "end": "2674339"
  },
  {
    "start": "2674340",
    "end": "2680640"
  },
  {
    "text": "V V minus 1. Why am I doing this?",
    "start": "2680640",
    "end": "2687779"
  },
  {
    "text": "I'm setting it to be the\nshortest-path distance to the guy in the\nsecond-to-last row here",
    "start": "2687780",
    "end": "2696330"
  },
  {
    "text": "or column in my modified graph.",
    "start": "2696330",
    "end": "2702440"
  },
  {
    "text": " The hope is that this\ndistance in my DAG",
    "start": "2702440",
    "end": "2713390"
  },
  {
    "text": "corresponds to this distance\nin my original graph.",
    "start": "2713390",
    "end": "2723019"
  },
  {
    "text": "The distance to V using\nat most V minus 1 edges. So that's the claim--\nthat's a claim we're going",
    "start": "2723020",
    "end": "2729560"
  },
  {
    "text": "to prove in just a second. I'm going to write it down\njust so that we have-- just to continue our\ntrain of thought.",
    "start": "2729560",
    "end": "2736490"
  },
  {
    "text": "Claim, delta S0 Vk equals delta\nk, the k edge distance, from S",
    "start": "2736490",
    "end": "2751670"
  },
  {
    "text": "to V. That's what\nwe want to claim.",
    "start": "2751670",
    "end": "2757280"
  },
  {
    "text": "That would then-- what\nwould that mean, then? That would mean\nthat I'm correctly setting the shortest-path\ndistance here",
    "start": "2757280",
    "end": "2764300"
  },
  {
    "text": "for all vertices whose\ndistances finite. Great.",
    "start": "2764300",
    "end": "2769670"
  },
  {
    "text": "I mean, I set values to things\nwhere they're not finite, where they're minus\ninfinity also,",
    "start": "2769670",
    "end": "2776380"
  },
  {
    "text": "but in particular I set the ones\ncorrectly if they're finite.",
    "start": "2776380",
    "end": "2782150"
  },
  {
    "text": "OK. So the last thing\nwe need to do is deal with these minus\ninfinity vertices.",
    "start": "2782150",
    "end": "2788150"
  },
  {
    "text": " But we know how to do that. We just look at the witnesses.",
    "start": "2788150",
    "end": "2794230"
  },
  {
    "text": "Because we've computed\nthis value for k",
    "start": "2794230",
    "end": "2802619"
  },
  {
    "text": "equals V equals V minus 1,\nand if that claim over there is true, then those\nshortest-path distances",
    "start": "2802620",
    "end": "2810030"
  },
  {
    "text": "are the same as these k edge\nshortest-path distances.",
    "start": "2810030",
    "end": "2815310"
  },
  {
    "text": "And we can just,\nfor every vertex, we compare these things. If this is satisfied,\nwe got a witness.",
    "start": "2815310",
    "end": "2822910"
  },
  {
    "text": "OK. So for each witness U\nand V where delta S0 U",
    "start": "2822910",
    "end": "2850880"
  },
  {
    "text": "V is less than, strictly,\nS0 U V minus 1--",
    "start": "2850880",
    "end": "2859609"
  },
  {
    "text": "that's the definition\nof a witness here, close the parentheses.",
    "start": "2859610",
    "end": "2865670"
  },
  {
    "text": "Then for each vertex V\nreachable from U set--",
    "start": "2865670",
    "end": "2878390"
  },
  {
    "text": " sorry, d, is what we're\nreturning, d of S, V",
    "start": "2878390",
    "end": "2885410"
  },
  {
    "text": "equal to minus infinity. That's the end of the algorithm. Basically I'm looking\nfor all the witnesses.",
    "start": "2885410",
    "end": "2892850"
  },
  {
    "text": "For each witness, I find all of\nthe vertices reachable from it and set it to minus infinity\njust as we argued before.",
    "start": "2892850",
    "end": "2900150"
  },
  {
    "text": "OK. So, it remains to\nprove this claim. ",
    "start": "2900150",
    "end": "2908420"
  },
  {
    "text": "How do we prove this claim? Well, we can induct on k.",
    "start": "2908420",
    "end": "2917020"
  },
  {
    "text": "Is this true for k equals 0? Yeah. We kind of already\nargued it over here",
    "start": "2917020",
    "end": "2922680"
  },
  {
    "text": "when we are talking about\nour initialization step or what DAG relaxation does.",
    "start": "2922680",
    "end": "2928560"
  },
  {
    "text": "It'll set this to be the\nshortest path from this guy to all these vertices.",
    "start": "2928560",
    "end": "2933569"
  },
  {
    "text": "These aren't\nreachable from here, and so these are infinite. And that one's 0.",
    "start": "2933570",
    "end": "2940369"
  },
  {
    "start": "2939000",
    "end": "3227000"
  },
  {
    "text": "So the base case-- so induct on k base\ncase, k equals 0?",
    "start": "2940370",
    "end": "2954970"
  },
  {
    "text": "Check. That's all good. Now we-- in our inductive\nstep, let's take a look",
    "start": "2954970",
    "end": "2963790"
  },
  {
    "text": "at the shortest-path\ndistance from 0-- from S0 to V of k\nprime for some k prime.",
    "start": "2963790",
    "end": "2972310"
  },
  {
    "text": "And the assumption is,\nthe inductive hypothesis is that this distance is the k\nedge distance for all k prime",
    "start": "2972310",
    "end": "2982390"
  },
  {
    "text": "less than-- I mean all k less than k prime. Well, kind of by definition\nof a shortest path,",
    "start": "2982390",
    "end": "2990190"
  },
  {
    "text": "this is the minimum\noverall incoming vertices",
    "start": "2990190",
    "end": "2995650"
  },
  {
    "text": "of the shortest path from\nS0 to U of k prime minus 1",
    "start": "2995650",
    "end": "3005299"
  },
  {
    "text": "plus the weight of the\nedge from U of k prime",
    "start": "3005300",
    "end": "3010850"
  },
  {
    "text": "minus to Vk prime for\nall Uk prime minus 1",
    "start": "3010850",
    "end": "3021140"
  },
  {
    "text": "in the adjacencies, the incoming\nadjacencies of Vk prime.",
    "start": "3021140",
    "end": "3029039"
  },
  {
    "text": "OK, what does this mean? I'm just saying in\nmy graph G prime,",
    "start": "3029040",
    "end": "3034840"
  },
  {
    "text": "a shortest path to\nthis vertex needs to go first through some\nvertex in the layer before it,",
    "start": "3034840",
    "end": "3043040"
  },
  {
    "text": "which is one of these. And in particular,\nI'm only connected to things adjacent to me.",
    "start": "3043040",
    "end": "3049700"
  },
  {
    "text": "That's all this is saying. I have to go through that\nvertex and take some shortest path to one of those\nprevious vertices.",
    "start": "3049700",
    "end": "3057609"
  },
  {
    "text": "Now s actuality, these\nadjacencies, I constructed them",
    "start": "3057610",
    "end": "3063460"
  },
  {
    "text": "to be similar to the\nadjacencies in my original graph in addition to one edge coming\nfrom my original vertex,",
    "start": "3063460",
    "end": "3071440"
  },
  {
    "text": "from vertex V. So this is the\nsame as the minimum of this set",
    "start": "3071440",
    "end": "3077710"
  },
  {
    "text": "delta S0.  Same thing.",
    "start": "3077710",
    "end": "3082960"
  },
  {
    "text": " Plus W U, V for all U in the\nadjacent-- incoming adjacencies",
    "start": "3082960",
    "end": "3103130"
  },
  {
    "text": "of my original vertex. In addition to one more term. What is that other term?",
    "start": "3103130",
    "end": "3108890"
  },
  {
    "start": "3108890",
    "end": "3114410"
  },
  {
    "text": "These are all of the\nthings corresponding to my incoming edges\nin my original thing, but I also have that one edge\ncoming from the V before it.",
    "start": "3114410",
    "end": "3123359"
  },
  {
    "text": "So this is-- I'm\ngoing to union-- union-- union this with delta\nS0 V of k prime minus 1.",
    "start": "3123360",
    "end": "3136600"
  },
  {
    "text": "Awful. I think there's\nanother one here. This is S0 of k prime minus 1.",
    "start": "3136600",
    "end": "3145170"
  },
  {
    "text": "I\"m not going to rewrite it. OK. ",
    "start": "3145170",
    "end": "3154110"
  },
  {
    "text": "Then by induction, this\nthing and this thing must be the edge shortest\npaths using k minus 1 vertices.",
    "start": "3154110",
    "end": "3165190"
  },
  {
    "text": "And then that's just the\nstatement of what the shortest path should be using at\nmost k prime edges going",
    "start": "3165190",
    "end": "3177730"
  },
  {
    "text": "from S to V. So, these things\nare the same as we claimed.",
    "start": "3177730",
    "end": "3186000"
  },
  {
    "text": "Yay, check. All right. And then it's not such--",
    "start": "3186000",
    "end": "3191300"
  },
  {
    "text": "it's kind of a\ntrivial leap, then, to say that at the end of\nBellman-Ford, these guys--",
    "start": "3191300",
    "end": "3199880"
  },
  {
    "text": "sorry, the things that\nwe return, these guys, are the shortest-path\ndistances, because here,",
    "start": "3199880",
    "end": "3206359"
  },
  {
    "text": "if they're finite, we set them\nto their true shortest-path distance; and if\nthey're minus infinity,",
    "start": "3206360",
    "end": "3214980"
  },
  {
    "text": "that invariant means that these\nthings correspond to exactly",
    "start": "3214980",
    "end": "3220050"
  },
  {
    "text": "this claim over here.  It's a witness.",
    "start": "3220050",
    "end": "3225565"
  },
  {
    "text": " And then finding all\nthe vertices reachable",
    "start": "3225565",
    "end": "3231430"
  },
  {
    "start": "3227000",
    "end": "3459000"
  },
  {
    "text": "from those witnesses, we\nset all of the infinite ones",
    "start": "3231430",
    "end": "3236440"
  },
  {
    "text": "to be minus infinity as desired. OK, so what's the running\ntime of this thing?",
    "start": "3236440",
    "end": "3242610"
  },
  {
    "text": "Well, we had to\nconstruct this graph, so we had to take that time. We ran DAG relaxation, that\ntakes the same amount of time.",
    "start": "3242610",
    "end": "3250770"
  },
  {
    "text": "For every vertex, we\ndid order V at work. And then for each witness,\nhow many could there be?",
    "start": "3250770",
    "end": "3257369"
  },
  {
    "text": "And most, V. Checking the\nreachability of each vertex, that can be done in how long?",
    "start": "3257370",
    "end": "3264300"
  },
  {
    "text": "Order E time. Because we don't need to\nconsider the things that",
    "start": "3264300",
    "end": "3270750"
  },
  {
    "text": "aren't connected to S-- or aren't connected\nto the witness. So this thing takes\norder V times E work.",
    "start": "3270750",
    "end": "3281430"
  },
  {
    "text": "So we're upper-bounded\nby this time it took to construct\nthe original graph",
    "start": "3281430",
    "end": "3287349"
  },
  {
    "text": "and by the claim we had before,\nthat takes V times E time.",
    "start": "3287350",
    "end": "3293000"
  },
  {
    "text": "OK. So that's Bellman-Ford. I'm just going to leave\nyou with two nuggets.",
    "start": "3293000",
    "end": "3299415"
  },
  {
    "text": " First, the shortest path,\nif for any witness--",
    "start": "3299415",
    "end": "3312150"
  },
  {
    "text": "let's say we have\na witness here. Do I have any witnesses here? I didn't fill in all these.",
    "start": "3312150",
    "end": "3318920"
  },
  {
    "text": "But is there a\nvertex on this cycle that goes through who\nhas the shortest path?",
    "start": "3318920",
    "end": "3327830"
  },
  {
    "text": "That goes through four vertices\nthat's smaller than any other. OK. I can go from a to c\nto b to d to b to c.",
    "start": "3327830",
    "end": "3337850"
  },
  {
    "text": " And you can work\nout this algorithm--",
    "start": "3337850",
    "end": "3343030"
  },
  {
    "text": "I have it in the notes that\nyou can take a look at. This will actually have a\nshorter path for vertex--",
    "start": "3343030",
    "end": "3350450"
  },
  {
    "text": "sorry. It'll have a shorter\npath for vertex b. ",
    "start": "3350450",
    "end": "3361010"
  },
  {
    "text": "a to b to c to d to b. Thank you. That's a path of length\n4, of four edges.",
    "start": "3361010",
    "end": "3369000"
  },
  {
    "text": "That has shorter path than\nany path that has fewer edges. In particular, there's\nonly one other path",
    "start": "3369000",
    "end": "3375390"
  },
  {
    "text": "to b using fewer than four-- there's two other paths. One path of length--",
    "start": "3375390",
    "end": "3381900"
  },
  {
    "text": "that has one edge, that\nhas weight minus 5, and one path-- this path that\nhas weight 9 minus 1 is 8.",
    "start": "3381900",
    "end": "3389579"
  },
  {
    "text": "Whereas this path, minus\n5, minus 4, 3, minus 1",
    "start": "3389580",
    "end": "3394590"
  },
  {
    "text": "has minus 10 plus 3 is minus 7,\nwhich is shorter than minus 5.",
    "start": "3394590",
    "end": "3401610"
  },
  {
    "text": "So b and d is a witness. And if we actually take\na look at that path",
    "start": "3401610",
    "end": "3408660"
  },
  {
    "text": "through this graph, going from\na to b to c to d back to b",
    "start": "3408660",
    "end": "3423400"
  },
  {
    "text": "we see that there's a negative\nweight cycle in this graph. b to c to d to b.",
    "start": "3423400",
    "end": "3430960"
  },
  {
    "text": "And indeed, that's always\nthe case for our witnesses. You can see a proof\nof that in the notes,",
    "start": "3430960",
    "end": "3437820"
  },
  {
    "text": "and you can see in recitation\na little space optimization to make us not have to construct\nthis entire graph on the fly,",
    "start": "3437820",
    "end": "3446770"
  },
  {
    "text": "but actually only use order\nV space while they're going. OK. So that's Bellman-Ford.",
    "start": "3446770",
    "end": "3452260"
  },
  {
    "text": "Sorry for running a little late. ",
    "start": "3452260",
    "end": "3460000"
  }
]