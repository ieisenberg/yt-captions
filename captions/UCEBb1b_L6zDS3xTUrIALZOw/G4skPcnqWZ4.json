[
  {
    "text": " The following\ncontent is provided by MIT OpenCourseWare under\na Creative Commons license.",
    "start": "0",
    "end": "6340"
  },
  {
    "text": "Additional information about our\nlicense and MIT OpenCourseWare, in general, is available\nat ocw.mit.edu.",
    "start": "6340",
    "end": "12730"
  },
  {
    "text": " GEORGE CHURCH: OK, so welcome\nto the fourth lecture.",
    "start": "12730",
    "end": "26130"
  },
  {
    "text": "This will be the second\none on the subject of DNA. The major difference between\nthis lecture and the last one",
    "start": "26130",
    "end": "34370"
  },
  {
    "text": "is that last one,\nso-called DNA 1, we focused in on types of\nmutants, their really closely",
    "start": "34370",
    "end": "47030"
  },
  {
    "text": "related DNA sequences. And this one, we'll talk\nabout the most distant related biopolymer sequences.",
    "start": "47030",
    "end": "52700"
  },
  {
    "text": "So we went through the\nway you can generate closely related sequences and\nthe way that the populations",
    "start": "52700",
    "end": "61550"
  },
  {
    "text": "which are made up of\nclosely related sequences obtain those allele frequencies\nthrough mutation drift",
    "start": "61550",
    "end": "69469"
  },
  {
    "text": "and selection. And I argued that, deep down,\nat the most precise level,",
    "start": "69470",
    "end": "74899"
  },
  {
    "text": "you've got a binomial\ndistribution behind each of the processes of mutation\ndrift and selection, at least",
    "start": "74900",
    "end": "84562"
  },
  {
    "text": "under a certain\nset of assumptions. And then we went on to another\nvery valuable statistic, which is the chi-square,\nwhich you can use in a number",
    "start": "84562",
    "end": "90750"
  },
  {
    "text": "of different scenarios\nbut, in particular, with association studies,\nwhere we did a simple case",
    "start": "90750",
    "end": "96050"
  },
  {
    "text": "of a two-allele system\nwith two outcomes-- HIV resistance and sensitivity.",
    "start": "96050",
    "end": "104150"
  },
  {
    "text": "And then this association led to\na broader discussion of alleles",
    "start": "104150",
    "end": "110420"
  },
  {
    "text": "and haplotypes and\ngenotypes, in general, and how one can obtain those\nand, in the process of doing",
    "start": "110420",
    "end": "115640"
  },
  {
    "text": "so, expose oneself to\nrandom systematic errors, a theme that we'll return\nto from time to time.",
    "start": "115640",
    "end": "122310"
  },
  {
    "text": "So today, we'll talk not about\nvery closely related sequences",
    "start": "122310",
    "end": "127799"
  },
  {
    "text": "but very distant\nrelated sequences and what are the\nalgorithms that are available for finding those. These distant related sequences\nget a very different set",
    "start": "127800",
    "end": "137420"
  },
  {
    "text": "of avenues. Here, we're trying to look for\nhints, for hypotheses in, say, new genome sequences as to\nwhat new genes might do.",
    "start": "137420",
    "end": "147860"
  },
  {
    "text": "So we'll begin by comparing\ndifferent types of algorithms",
    "start": "147860",
    "end": "153980"
  },
  {
    "text": "that will allow us\nto do alignments. In particular, we'll stress\nthe hero of today's show",
    "start": "153980",
    "end": "159710"
  },
  {
    "text": "is dynamic programming. It comes up again and again\nthroughout the course, not merely in pairwise\nsequence alignment",
    "start": "159710",
    "end": "167150"
  },
  {
    "text": "but multisequence alignment. And we'll then go on to how\nthe space in your computer,",
    "start": "167150",
    "end": "177770"
  },
  {
    "text": "or the memory,\ndedicated to processing the time determine trade-offs.",
    "start": "177770",
    "end": "185600"
  },
  {
    "text": "And in some cases, you\nwill have to even sacrifice accuracy or completeness. And this also leads to\nthe issue of finding",
    "start": "185600",
    "end": "193939"
  },
  {
    "text": "genes, a particular type of\ndistant sequence comparison.",
    "start": "193940",
    "end": "198950"
  },
  {
    "text": "The ones interested in\nis finding motifs that are involved in finding genes. And finally, we'll end on hidden\nMarkov model, the simplest one",
    "start": "198950",
    "end": "207049"
  },
  {
    "text": "that I could think of that\nwould really illustrate the idea of Markov models,\nprobabilistic models,",
    "start": "207050",
    "end": "212810"
  },
  {
    "text": "and the hiddenness. And so this is illustrated\nwith a single dinucleotide",
    "start": "212810",
    "end": "219980"
  },
  {
    "text": "with two states. So this puts in context-- in the first couple\nof lectures, we",
    "start": "219980",
    "end": "228709"
  },
  {
    "text": "talked about the tree of life\nand how, right at the core, we had the common\nand most simple",
    "start": "228710",
    "end": "235280"
  },
  {
    "text": "forms, which share the\nsimple genetic code. And that was-- and\nthen last time,",
    "start": "235280",
    "end": "241640"
  },
  {
    "text": "we talked about the very\ntip of one branch of one of these trees--\nbasically, the human branch",
    "start": "241640",
    "end": "248360"
  },
  {
    "text": "of the animal branch. And what has happened at the\ntip of that the last 5,000",
    "start": "248360",
    "end": "255590"
  },
  {
    "text": "generations, since the fairly\nsignificant bottlenecks that resulted that predated\nthe population explosion.",
    "start": "255590",
    "end": "265889"
  },
  {
    "text": "And so this time, we're going\nto talk about the whole tree and how these very deep branches\ncan be obtained in comparing",
    "start": "265890",
    "end": "275480"
  },
  {
    "text": "biopolymer sequences. Some of the earliest\ntrees of life were based on the\nribosomal RNA sequence",
    "start": "275480",
    "end": "281295"
  },
  {
    "text": "because that's something that's\nfairly easy to trace back to common ancestors. But you also want to\nbe able to do this",
    "start": "281295",
    "end": "286940"
  },
  {
    "text": "with a variety of\nproteins, some of which go only a short distance\ntraceably in sequence,",
    "start": "286940",
    "end": "292613"
  },
  {
    "text": "and some of them go\nall the way back.  What can we do with\ndynamic programming?",
    "start": "292613",
    "end": "298910"
  },
  {
    "text": "I alluded to its multiple\nuses throughout the course. Here's some examples.",
    "start": "298910",
    "end": "304560"
  },
  {
    "text": "We already mentioned\nshotgun sequence assembly. This is relatively easy because\nthe sequences are fairly closely related to one another.",
    "start": "304560",
    "end": "311660"
  },
  {
    "text": "Multiple alignments\ninclude sequence assembly, where you have multiple\nsimilar sequences.",
    "start": "311660",
    "end": "317616"
  },
  {
    "text": "But as you get to more and\nmore distant sequences, you can glean more and more\nabout structural and functional",
    "start": "317617",
    "end": "324110"
  },
  {
    "text": "conclusions about\nproteins and nucleic acids when you have a very large\nnumber, in the hundreds.",
    "start": "324110",
    "end": "330350"
  },
  {
    "text": "And we'll see the\nchallenges that come there. Repeats are a\nparticular-- you can",
    "start": "330350",
    "end": "337220"
  },
  {
    "text": "have repeats within\na genome, or we can have alignments\nbetween different species.",
    "start": "337220",
    "end": "344232"
  },
  {
    "text": "Now, birdsong seems a\nlittle out of place here. But historically, it's one\nof the first applications of dynamic programming\nwhere you, in a sense,",
    "start": "344232",
    "end": "350940"
  },
  {
    "text": "have a continuous time\naxis, and you sample that",
    "start": "350940",
    "end": "356270"
  },
  {
    "text": "at discrete points,\noften, in order to sample the intensity\nof the audio recording.",
    "start": "356270",
    "end": "366860"
  },
  {
    "text": "And this will have\na more direct analog than sequence alignments,\nwhich we'll do today.",
    "start": "366860",
    "end": "374300"
  },
  {
    "text": "Later, when we're\ndoing the RNA analyses, gene expression will show\na direct time warping",
    "start": "374300",
    "end": "381980"
  },
  {
    "text": "algorithm, which is very similar\nin outline to the birdsong. ",
    "start": "381980",
    "end": "389300"
  },
  {
    "text": "And then, finally,\nhidden Markov models, which would be the\nlast thing today, use dynamic programming as\npart of the process by which",
    "start": "389300",
    "end": "398840"
  },
  {
    "text": "the decisions are made about\nthe model that's represented,",
    "start": "398840",
    "end": "404010"
  },
  {
    "text": "the hidden Markov model. And these hidden\nMarkov models, in turn, allow us to do RNA gene\nsearches, structure prediction,",
    "start": "404010",
    "end": "411890"
  },
  {
    "text": "distant protein homologies,\nspeech recognition, and so on.",
    "start": "411890",
    "end": "417720"
  },
  {
    "text": "So there's three types\nof alignments and scores",
    "start": "417720",
    "end": "422750"
  },
  {
    "text": "that we'll discuss on\nthe slide number 5. The main dichotomy is\nbetween global and local.",
    "start": "422750",
    "end": "429289"
  },
  {
    "text": "Originally, in\nsequence alignment in the '70s, Needleman-Wunsch\nhad a global algorithm,",
    "start": "429290",
    "end": "434338"
  },
  {
    "text": "which has been modified-- Smith and Waterman's local\nalgorithm-- about a decade later. And the major difference here\nis that in a global algorithm,",
    "start": "434338",
    "end": "445940"
  },
  {
    "text": "you have reason to believe that\nthe sequences align end to end. And you really just want\nto ask how many mismatches",
    "start": "445940",
    "end": "452210"
  },
  {
    "text": "and insertions and\ndeletions are there in the middle of the sequence?",
    "start": "452210",
    "end": "457320"
  },
  {
    "text": "So for example, you might have\ntwo proteins that really have the same start and stop site. Or you might have an\nentire chromosome,",
    "start": "457320",
    "end": "464000"
  },
  {
    "text": "and you're asking\nquestions about haplotype, as we were in the last\nclass, which would be, what mutations are in cis on one\nchromosome relative to another?",
    "start": "464000",
    "end": "474854"
  },
  {
    "text": "Another example is\nyou might be scanning a chromosome for a\nmotif that occurs again",
    "start": "474854",
    "end": "481490"
  },
  {
    "text": "and again, like an Alu repeat or\na transcription factor binding motif. And this might be in the\nmiddle of one sequence,",
    "start": "481490",
    "end": "487100"
  },
  {
    "text": "at the end of another,\nor in the middle of both. Here, it's at the end of one\nand the middle of another.",
    "start": "487100",
    "end": "492180"
  },
  {
    "text": "And it's short and local. And so you don't\nwant to constrain the sequence ends to align.",
    "start": "492180",
    "end": "498050"
  },
  {
    "text": "And you don't want to\npenalize if there's some deviation from\nalignment of the ends.",
    "start": "498050",
    "end": "503390"
  },
  {
    "text": "Taking this one step further\nso that it's not internal to either one, in\nan ideal assembly--",
    "start": "503390",
    "end": "512630"
  },
  {
    "text": "shotgun assembly of sequence,\nas we talked about last time-- you would expect,\nas one fragment--",
    "start": "512630",
    "end": "518270"
  },
  {
    "text": "one clone fragment--\nends, hopefully, you have a little bit of overlap at\nthe beginning of the next one, and you'll be able to jump along\nthese stepping stones to get",
    "start": "518270",
    "end": "527300"
  },
  {
    "text": "to the end of the sequence. Because you can't\nsequence the whole thing. But this ideal suffix,\nwhere a suffix of one",
    "start": "527300",
    "end": "535700"
  },
  {
    "text": "overlaps the suffix, or the\nverse complement, of another,",
    "start": "535700",
    "end": "543365"
  },
  {
    "text": "this sort of alignment\ncan be imperfect because of errors at the\nends of these sequences.",
    "start": "543365",
    "end": "550080"
  },
  {
    "text": "So generally speaking,\nwe'll be talking about global versus local. And these specific\nsequences we'll",
    "start": "550080",
    "end": "556430"
  },
  {
    "text": "come back to several\nslides from now. Now, you want to have\na scoring algorithm. We'll use this very\nsimple scoring metric",
    "start": "556430",
    "end": "567140"
  },
  {
    "text": "off and on during this talk. And here, we're\njust giving plus 1",
    "start": "567140",
    "end": "572240"
  },
  {
    "text": "for every perfect match,\nindicated by a colon where an a matches an a, and\na minus 1 for every mismatch,",
    "start": "572240",
    "end": "578210"
  },
  {
    "text": "indicated by an x, where c does\nnot match an a, for example. So we have five perfect\nmatches and five",
    "start": "578210",
    "end": "584420"
  },
  {
    "text": "mismatches in this case. And so it's a total\nof 5 minus 3 is 2.",
    "start": "584420",
    "end": "591440"
  },
  {
    "text": "And in the local\ncase, we're not going to require the ends to align. And so we can slip\nthis a little bit",
    "start": "591440",
    "end": "596820"
  },
  {
    "text": "so that now, there's\nfour perfect matches, and we're not penalizing\nthe terminal mismatches.",
    "start": "596820",
    "end": "602210"
  },
  {
    "text": "And so we have a\ntotal of four, which, if these were directly\ncomparable scores,",
    "start": "602210",
    "end": "607400"
  },
  {
    "text": "would be a superior score. And you can see\nthe suffixes, here,",
    "start": "607400",
    "end": "612770"
  },
  {
    "text": "you're enforcing that\nit be at the ends. And it's a score of 3. So now we're going to\ncompare different ways",
    "start": "612770",
    "end": "620500"
  },
  {
    "text": "of searching through sequences.",
    "start": "620500",
    "end": "625940"
  },
  {
    "text": "Now, that one was an exact\nmatch with mismatches, where",
    "start": "625940",
    "end": "635120"
  },
  {
    "text": "the mismatches are penalized. And so an exact search, a truly\nexact search, is fairly rare--",
    "start": "635120",
    "end": "641480"
  },
  {
    "text": "maybe a restriction site,\nsomething like that. You can expand this to\na regular expression where the insertions\nare restricted.",
    "start": "641480",
    "end": "648770"
  },
  {
    "text": "They, in this case, an insertion\ncan be indicated by any base. A, C, G, or T can occur.",
    "start": "648770",
    "end": "656040"
  },
  {
    "text": "And then the number\nthat you will tolerate is indicated by a\nnumeric range-- zero to nine, in this case.",
    "start": "656040",
    "end": "661620"
  },
  {
    "text": "And so the particular\nexample given-- this equals sign just means\nthat this is an example.",
    "start": "661620",
    "end": "667470"
  },
  {
    "text": "So C, G are strict at the ends. And then it happened to\nhave two As there, which",
    "start": "667470",
    "end": "673339"
  },
  {
    "text": "an A is an example\nof a nucleotide that satisfies the abbreviation\nN. N is all possible.",
    "start": "673340",
    "end": "679190"
  },
  {
    "text": "But you could\nsimilarly have the zero to nine bracket could\nrefer to a short sequence,",
    "start": "679190",
    "end": "684440"
  },
  {
    "text": "like a G sequence and so on. So you could get a\nknown number of repeats.",
    "start": "684440",
    "end": "691610"
  },
  {
    "text": "And that could represent\nthe empirical observation that you have zero\nto nine AG repeats. ",
    "start": "691610",
    "end": "700920"
  },
  {
    "text": "Now, in the previous\nexample, we just penalized whenever it was a\nmismatch by a fixed amount.",
    "start": "700920",
    "end": "705990"
  },
  {
    "text": "But you could have a\nsubstitution matrix, which would actually\ncodify your observations.",
    "start": "705990",
    "end": "711870"
  },
  {
    "text": "When you look through natural\nsequences and you line them up, how often do you get an\nA substituting for a G?",
    "start": "711870",
    "end": "719790"
  },
  {
    "text": "And so the penalty wouldn't\nbe a strict minus 1. It would be something\nyou'd look up in a table.",
    "start": "719790",
    "end": "726339"
  },
  {
    "text": "And in that table, the\ndiagonal would be the matches, and the off-diagonals would\nbe specific mismatches.",
    "start": "726340",
    "end": "733200"
  },
  {
    "text": "And we'll show how we get\nsuch a matrix and use it.",
    "start": "733200",
    "end": "739830"
  },
  {
    "text": "Now, then you can\nhave a profile matrix. Or this PSI means\nposition-sensitive.",
    "start": "739830",
    "end": "747720"
  },
  {
    "text": "And the position-sensitive means\nyou have a different lookup table for every position\nin your biopolymer.",
    "start": "747720",
    "end": "754320"
  },
  {
    "text": "And that makes sense\nbecause not all positions have the same set of equally--",
    "start": "754320",
    "end": "762690"
  },
  {
    "text": "or have the same sort of\nsubstitutions that are allowed. So in parentheses\nalong here, these",
    "start": "762690",
    "end": "770380"
  },
  {
    "text": "are actual names\nof programs that are available, either\nin commercial packages",
    "start": "770380",
    "end": "778170"
  },
  {
    "text": "or for free. BLAST is Basic Local\nAlignment Sequence.",
    "start": "778170",
    "end": "785340"
  },
  {
    "text": "And the N refers to nucleotide. And here, PSI-BLAST,\nagain, position-sensitive.",
    "start": "785340",
    "end": "791795"
  },
  {
    "text": "These are some of\nthe ones you'll run into most frequently. ",
    "start": "791795",
    "end": "799649"
  },
  {
    "text": "The original versions\nof BLAST were basically aimed at having the largest\nblock of contiguous sequence",
    "start": "799650",
    "end": "810120"
  },
  {
    "text": "without gaps. And there were so-called\nCarlin statistics",
    "start": "810120",
    "end": "815910"
  },
  {
    "text": "that would tell you that that's\nthe largest sequence that will give you the best probability.",
    "start": "815910",
    "end": "822300"
  },
  {
    "text": "But then it was\nwidely recognized that when people actually\nevaluate matches between two",
    "start": "822300",
    "end": "827819"
  },
  {
    "text": "sequences, they're not\njust evaluating the longest ungapped sequences. They're actually interested\nin the significance",
    "start": "827820",
    "end": "834660"
  },
  {
    "text": "of a sequence that can include\ninsertions and deletions. And so BLAST has been\nextended to include gaps.",
    "start": "834660",
    "end": "840660"
  },
  {
    "text": "And prior to that long\nhistory back to the '70s is the Needleman-Wunsch\nand Smith-Waterman that I mentioned, a global\nand local, respectively, which",
    "start": "840660",
    "end": "848339"
  },
  {
    "text": "would allow a large number\nof insertions and deletions",
    "start": "848340",
    "end": "853560"
  },
  {
    "text": "of single bases\nand multiple bases, as determined by the parameters\nthat were either manually",
    "start": "853560",
    "end": "859589"
  },
  {
    "text": "set or determined empirically. And we'll try to\nstress ways that this can be determined empirically.",
    "start": "859590",
    "end": "865350"
  },
  {
    "text": "And finally, the hidden\nMarkov models truly take a probabilistic\napproach to each of these,",
    "start": "865350",
    "end": "875759"
  },
  {
    "text": "allowing position-sensitive\nand models that are extendable",
    "start": "875760",
    "end": "883440"
  },
  {
    "text": "not just where each position\nhas a set of probabilities",
    "start": "883440",
    "end": "888510"
  },
  {
    "text": "but there can be dependencies\nupon adjacent positions.",
    "start": "888510",
    "end": "893970"
  },
  {
    "text": "And we'll get to\nthis at the very end. And when we talked in\nthe very first class",
    "start": "893970",
    "end": "900180"
  },
  {
    "text": "about different\ndefinitions of complexity, one of them we talked about was\nthe computational complexity,",
    "start": "900180",
    "end": "905670"
  },
  {
    "text": "or hardness, of the amount\nof time that it takes, or the amount of space,\nor space and time, that it",
    "start": "905670",
    "end": "912630"
  },
  {
    "text": "takes to solve a problem. And this certainly is a good\nillustration in today's talk",
    "start": "912630",
    "end": "919200"
  },
  {
    "text": "in dynamic programming. Because when we want to do\neither a pairwise sequence",
    "start": "919200",
    "end": "925763"
  },
  {
    "text": "alignment or a\nmultisequence alignment-- let's start with\npairwise, we're aligning k equals 2 sequences of length\nn, and we're allowing gaps.",
    "start": "925763",
    "end": "933060"
  },
  {
    "text": "Now, if we're just\ncomparing them without gaps, as we did in the earlier\nslides, it's trivial.",
    "start": "933060",
    "end": "939300"
  },
  {
    "text": "It's linear with the\ntotal number of bases. It's linear within. And that, of course,\nscales very gracefully.",
    "start": "939300",
    "end": "945000"
  },
  {
    "text": "But if you have a very naive--\nand I'm going to set up a straw man here-- you have a very naive\nalgorithm, then you'll go along,",
    "start": "945000",
    "end": "952440"
  },
  {
    "text": "and you'll put in a gap\nat every possible position at the top in combination\nwith every possible position",
    "start": "952440",
    "end": "958800"
  },
  {
    "text": "in the bottom. And so that means that\nthere's n on the top and n on the bottom for a\ntotal of 2n possible positions",
    "start": "958800",
    "end": "964740"
  },
  {
    "text": "that you could put in a gap. And the gap can be\nany length, as you see on the right here\nof slide 7 is that you",
    "start": "964740",
    "end": "971339"
  },
  {
    "text": "can have a gap up to length n. So roughly speaking,\nsuch a naive algorithm",
    "start": "971340",
    "end": "977760"
  },
  {
    "text": "would scale very exponentially\nn to the 2n power. And this is just enormous\nfor n the dozens.",
    "start": "977760",
    "end": "986160"
  },
  {
    "text": "And when n is in the billions,\nthen you can just basically forget about it. We're not even talking\nabout computers or particles",
    "start": "986160",
    "end": "993990"
  },
  {
    "text": "in the universe anymore. And that's for k equals 2, the\nsimplest possible case where",
    "start": "993990",
    "end": "1000290"
  },
  {
    "text": "you're aligning two sequences. If you're aligning\nmultiple sequences-- we'll get to that in a moment--",
    "start": "1000290",
    "end": "1006710"
  },
  {
    "text": "it definitely becomes\nexponential in k, even in a-non naive algorithm.",
    "start": "1006710",
    "end": "1012710"
  },
  {
    "text": "So we're going to\nshow that it's going to be non-exponential in n,\nthe length of the sequences.",
    "start": "1012710",
    "end": "1018720"
  },
  {
    "text": "But in order to do that, in\norder to assess algorithms,",
    "start": "1018720",
    "end": "1024380"
  },
  {
    "text": "we can do them-- some of them we can\ndo theoretically. And in fact, for the\ndynamic programming,",
    "start": "1024380",
    "end": "1030000"
  },
  {
    "text": "we will show that you\ncan convince yourself that an n squared\nalgorithm is precise.",
    "start": "1030000",
    "end": "1035689"
  },
  {
    "text": "But others, we will\nhave to do empirically. And I just want to\ntake an aside here to talk about how a particular\ncomparison of sequence",
    "start": "1035690",
    "end": "1047079"
  },
  {
    "text": "alignment programs was done. So the critical thing, not just\nfor this test but for many that",
    "start": "1047079",
    "end": "1056450"
  },
  {
    "text": "you'll be seeing in\nthis course and you may want to do in\nyour own projects, you want to set aside a\ntraining set in which you",
    "start": "1056450",
    "end": "1065270"
  },
  {
    "text": "run through a\nnumber of algorithms or a number of parameters\nwithin an algorithm to assess which\nones are the best.",
    "start": "1065270",
    "end": "1071550"
  },
  {
    "text": "And once you've determined\nthe algorithms that are best or the\nparameters that are best, then you want to have a\ntesting set that's independent.",
    "start": "1071550",
    "end": "1078660"
  },
  {
    "text": "That means\nnon-redundant, as well. So the training set, if\nyou use the training set",
    "start": "1078660",
    "end": "1086389"
  },
  {
    "text": "as your testing set,\nyou may lull yourself into a sense of complacency\nbecause it's been overtrained.",
    "start": "1086390",
    "end": "1091730"
  },
  {
    "text": "And you're basically only\ncapable of solving the problems that you set before it. So you want a\nseparate testing set.",
    "start": "1091730",
    "end": "1097399"
  },
  {
    "text": "And that was done in this case. We need some sort of\nevaluation criteria.",
    "start": "1097400",
    "end": "1102780"
  },
  {
    "text": "So we talked a\nlittle bit of scores that you'd set up\nin order to score whether one alignment is\nbetter than another alignment.",
    "start": "1102780",
    "end": "1110929"
  },
  {
    "text": "But in addition, when you want\nto compare two algorithms that",
    "start": "1110930",
    "end": "1116340"
  },
  {
    "text": "may give you the\nsame score, you want to have an external\nevaluation criterion.",
    "start": "1116340",
    "end": "1125510"
  },
  {
    "text": "Typically, the\nevaluation criterion that one might have is\nsensitivity and specificity.",
    "start": "1125510",
    "end": "1130664"
  },
  {
    "text": "Occasionally, you'll\nfind in literature where people will just\nfocus on one or the other. For some reason or other, they\ndon't want to miss anything.",
    "start": "1130665",
    "end": "1138913"
  },
  {
    "text": "So they want to\nkeep their false-- they want to reduce their false\npositives as much as possible. Or they don't want to plow\nthrough mountains of output,",
    "start": "1138913",
    "end": "1146640"
  },
  {
    "text": "and so they keep the\nfalse positives down. But you really want to\nhave them both very low. And sometimes this is restated\nas sensitivity and specificity,",
    "start": "1146640",
    "end": "1154760"
  },
  {
    "text": "where sensitivity is\nthe number of true hits",
    "start": "1154760",
    "end": "1163140"
  },
  {
    "text": "that you've predicted over\nthe total number of true hits. This is, say, in\nyour training set,",
    "start": "1163140",
    "end": "1168450"
  },
  {
    "text": "where you know what\nthe true hits are from some outside source.",
    "start": "1168450",
    "end": "1173820"
  },
  {
    "text": "And then specificity is\nthe number of true hits that you predicted over all of\nthe hits that you predicted,",
    "start": "1173820",
    "end": "1179970"
  },
  {
    "text": "true and false. Now, this truth here that\ncomes in your training",
    "start": "1179970",
    "end": "1185080"
  },
  {
    "text": "set, where does that come from? If we had access to\ntruth, in general, then",
    "start": "1185080",
    "end": "1190330"
  },
  {
    "text": "what do we need\nthese algorithms for? And the answer is\nthat we do have access",
    "start": "1190330",
    "end": "1195760"
  },
  {
    "text": "to, maybe, a higher\ntruth or something that's outside of sequence alignment.",
    "start": "1195760",
    "end": "1202120"
  },
  {
    "text": "And this is crystallography,\ngenetics, and biochemistry. Crystallography,\nfor reasons we'll go into in the protein\npart of this course,",
    "start": "1202120",
    "end": "1209530"
  },
  {
    "text": "is capable of detecting much\nmore ancient relationships between biopolymers\nthan is sequence alone.",
    "start": "1209530",
    "end": "1215920"
  },
  {
    "text": "Similar genetics\nin biochemistry can test structural and\nfunctional hypotheses",
    "start": "1215920",
    "end": "1223120"
  },
  {
    "text": "through great expense. And so these are expensive. And so that's the reason they're\ngreat for making training sets,",
    "start": "1223120",
    "end": "1228580"
  },
  {
    "text": "but they won't\nnecessarily replace sequence alignment and scores.",
    "start": "1228580",
    "end": "1236380"
  },
  {
    "text": "So that was the setup\nfor this slide, which is that Bill Pearson, who\nactually developed the FASTA",
    "start": "1236380",
    "end": "1242070"
  },
  {
    "text": "algorithm, among others,\ndid a thorough assessment",
    "start": "1242070",
    "end": "1249880"
  },
  {
    "text": "of various algorithms. FASTA was one that was\nbased on words, meaning exact matches of some fixed\nlengths the user could set;",
    "start": "1249880",
    "end": "1258610"
  },
  {
    "text": "FASTP, which was based on\nthese maximum-lengths blocks without gaps in it.",
    "start": "1258610",
    "end": "1264820"
  },
  {
    "text": "Blitz is a variation on the\nSmith-Waterman algorithm, meaning a full dynamic\nprogramming, which we'll be",
    "start": "1264820",
    "end": "1270670"
  },
  {
    "text": "talking about in a short while. This is a highly\nparallelized version of it, early parallel\nversion of it.",
    "start": "1270670",
    "end": "1277010"
  },
  {
    "text": "So the different algorithms\nfor doing the alignment were compared, different\nsubstitution matrices and different databases.",
    "start": "1277010",
    "end": "1283030"
  },
  {
    "text": "Just in case there was\nsome database bias, he included that.",
    "start": "1283030",
    "end": "1290240"
  },
  {
    "text": "And so we're going to talk about\nsubstitution matrices in just a moment. But basically, these are what\namino acid or nucleotide--",
    "start": "1290240",
    "end": "1299809"
  },
  {
    "text": "what amino acid, in this\ncase, can substitute for another amino acid in\nactual protein segments",
    "start": "1299810",
    "end": "1307880"
  },
  {
    "text": "that have diverged\nby about the amount that you want to\ndo your test on.",
    "start": "1307880",
    "end": "1313550"
  },
  {
    "text": "And these different\nnumbers just refer to roughly how distantly\nrelated the proteins are.",
    "start": "1313550",
    "end": "1322440"
  },
  {
    "text": "The higher the number,\nthe more distantly related they are in the\ncase of the PAM matrices.",
    "start": "1322440",
    "end": "1330020"
  },
  {
    "text": "So now, why did he do\nthat with a protein level rather than doing it to\nthe nucleic acid level?",
    "start": "1330020",
    "end": "1337030"
  },
  {
    "text": "Well, historically, it's because\nthere weren't any nucleic acid sequences. There were mostly\nprotein sequences.",
    "start": "1337030",
    "end": "1342830"
  },
  {
    "text": "But even today, there is\nobviously a lot more nucleic",
    "start": "1342830",
    "end": "1349330"
  },
  {
    "text": "acid sequence. But there's a real reason to do\nit at the protein level, which",
    "start": "1349330",
    "end": "1354940"
  },
  {
    "text": "is that when you\nlook at the code that we've been talking\nabout in these lectures,",
    "start": "1354940",
    "end": "1361720"
  },
  {
    "text": "something like leucine\ncan be represented by six different codons,\nwhich can have wildly",
    "start": "1361720",
    "end": "1368560"
  },
  {
    "text": "different nucleotide sequences. So for example, CUG\nis valid, and UUA.",
    "start": "1368560",
    "end": "1376180"
  },
  {
    "text": "And those only share one\nnucleotide out of three. And over long periods\nof time, if there's",
    "start": "1376180",
    "end": "1383320"
  },
  {
    "text": "heavy selection on the protein\nand relatively weak selection on the nucleic acid,\nor there could even",
    "start": "1383320",
    "end": "1388480"
  },
  {
    "text": "be pressure on the\nnucleic acid to change for reasons that we'll go\ninto in the second half",
    "start": "1388480",
    "end": "1393580"
  },
  {
    "text": "of this lecture, that pressure\non the nucleotide sequence",
    "start": "1393580",
    "end": "1399460"
  },
  {
    "text": "can cause the nucleotide\nsequence to change a lot and the protein sequence\nnot to change much at all. ",
    "start": "1399460",
    "end": "1406880"
  },
  {
    "text": "So an example of pressure\nis if the tRNAs change in their abundance, then\nthere'd be a pressure",
    "start": "1406880",
    "end": "1412030"
  },
  {
    "text": "to codon usage to change. There are some reasons to do\nit at the nucleotide level.",
    "start": "1412030",
    "end": "1417500"
  },
  {
    "text": "For example, if you're\ncomparing sequences which don't encode proteins,\nthat's an obvious reason.",
    "start": "1417500",
    "end": "1422679"
  },
  {
    "text": "If you have a lot of\ninsertion and deletions",
    "start": "1422680",
    "end": "1427960"
  },
  {
    "text": "or a tricky biological\nphenomenon like RNA splicing",
    "start": "1427960",
    "end": "1433570"
  },
  {
    "text": "that causes the protein\nto be out of phase-- ",
    "start": "1433570",
    "end": "1440740"
  },
  {
    "text": "the inferred protein to be out\nof phase or hard to infer-- then you would do it at the\nnucleotide sequence level.",
    "start": "1440740",
    "end": "1446500"
  },
  {
    "text": " Now, I'm going to\nshow this slide twice.",
    "start": "1446500",
    "end": "1451670"
  },
  {
    "text": "The first time, we're\ngoing to take it as a given that we've been given this\nmultisequence alignment, and we're not going to question\nright now how we got it.",
    "start": "1451670",
    "end": "1461755"
  },
  {
    "text": "But we're going to use that\nmultisequence alignment to derive, or to talk\nabout how we would derive,",
    "start": "1461755",
    "end": "1467480"
  },
  {
    "text": "a substitution matrix. And here, a\nsubstitution matrix, you can think-- this is a\nmultisequence alignment.",
    "start": "1467480",
    "end": "1474290"
  },
  {
    "text": "So essentially, we have\na weight matrix, which, if this were position-sensitive,\nwe would say, at this position,",
    "start": "1474290",
    "end": "1480409"
  },
  {
    "text": "C never changes. If we do enough\nof these proteins and we don't care\nabout position,",
    "start": "1480410",
    "end": "1486470"
  },
  {
    "text": "we can build up a\nbig set of matrices. And in general, we\nwill find that C tends to substitute for C,\nand very few other things",
    "start": "1486470",
    "end": "1493520"
  },
  {
    "text": "substitute for it. Eventually, you will\nfind other substitutions. Cysteine and\ntryptophan, C and W,",
    "start": "1493520",
    "end": "1500179"
  },
  {
    "text": "are relatively rare amino acids,\nand they're highly conserved. Other ones can be substituted,\nas you can see here--",
    "start": "1500180",
    "end": "1507590"
  },
  {
    "text": "threonine, serine, and valine\ncan substitute for one another. So now let's take a look\nat how this plays out",
    "start": "1507590",
    "end": "1514520"
  },
  {
    "text": "when we look at all the possible\nsubstitutions that can occur.",
    "start": "1514520",
    "end": "1520110"
  },
  {
    "text": "And that's what's in slide 12. If you look along the very\ntop row are the percentages,",
    "start": "1520110",
    "end": "1528890"
  },
  {
    "text": "the abundances, of amino acids\nin a particular organism,",
    "start": "1528890",
    "end": "1534650"
  },
  {
    "text": "say E. coli. And then there's a\nsingle-letter code, A through Y.",
    "start": "1534650",
    "end": "1543920"
  },
  {
    "text": "And along the diagonal is\nthe substitution matrix, the score which has\nbeen determined--",
    "start": "1543920",
    "end": "1550670"
  },
  {
    "text": "this is the BLOSUM matrix-- for a block represented in\ndistantly related blocks.",
    "start": "1550670",
    "end": "1557900"
  },
  {
    "text": "Here, you can see that\nthe diagonal represents the tendency for the amino\nacid to substitute for itself.",
    "start": "1557900",
    "end": "1564740"
  },
  {
    "text": "And those amino acids,\nwhich generally are not easily substituted-- as I\nsay, are highly conserved,",
    "start": "1564740",
    "end": "1570197"
  },
  {
    "text": "which we pointed out\nin the previous slide-- were cysteine, C,\nand tryptophan, W.",
    "start": "1570197",
    "end": "1575810"
  },
  {
    "text": "And for example, W is the\nmost strongly conserved. It's 22 along the diagonal. And the consequence\nof that is there'll",
    "start": "1575810",
    "end": "1582170"
  },
  {
    "text": "be relatively few positive\nvalues off the diagonal. And in fact, for tryptophan,\nthere are no positive values.",
    "start": "1582170",
    "end": "1589295"
  },
  {
    "text": " The numbers here have been\ngenerated in such a way",
    "start": "1589295",
    "end": "1595610"
  },
  {
    "text": "that the negatives\nwill tend to cancel out",
    "start": "1595610",
    "end": "1603059"
  },
  {
    "text": "the positives in alignments,\nknown alignments, of sequences",
    "start": "1603060",
    "end": "1608580"
  },
  {
    "text": "that are about the right\nevolutionary distance from one another. You want to pick--",
    "start": "1608580",
    "end": "1613920"
  },
  {
    "text": "you want to make your\nmatrix, if you're trying to look for very\ndistant related proteins, you want to take\nthe substitutions",
    "start": "1613920",
    "end": "1622110"
  },
  {
    "text": "that you're sampling\nin your training set to be as far at that\nsame distance-- that",
    "start": "1622110",
    "end": "1629250"
  },
  {
    "text": "is, very distantly related. And this is one of the mistakes\nthat was made in the early PAM matrix. There were two mistakes,\nactually-- the mathematics--",
    "start": "1629250",
    "end": "1637110"
  },
  {
    "text": "well, first, the proteins\nthat were compared were very closely related. Because closely related\nproteins were more trustworthy.",
    "start": "1637110",
    "end": "1643649"
  },
  {
    "text": "You could align closed\nsequences more easily. The algorithms didn't\nhave to be sophisticated.",
    "start": "1643650",
    "end": "1649800"
  },
  {
    "text": "And the trees could\nbe more precise. But then, because\nthey had done-- so that already was a bias\nbecause the substitutions",
    "start": "1649800",
    "end": "1657720"
  },
  {
    "text": "you get in closely\nrelated sequences aren't really the same. And then they apply to a\nmathematical extrapolation",
    "start": "1657720",
    "end": "1662850"
  },
  {
    "text": "method, which was\nnot adequate in terms of the actual evolution and\nalso wasn't even correct,",
    "start": "1662850",
    "end": "1669900"
  },
  {
    "text": "mathematically, although\nthis persisted for decades as the most common--",
    "start": "1669900",
    "end": "1674970"
  },
  {
    "text": "and still-- the most\ncommonly used matrix. ",
    "start": "1674970",
    "end": "1679980"
  },
  {
    "text": "Anyway, you can see that,\nalthough tryptophan doesn't have any positive off-diagonal,\nsomething like arginine, here, in this blue, has\na positive 4 off-diagonal",
    "start": "1679980",
    "end": "1690750"
  },
  {
    "text": "and a positive 10 on-diagonal. So as you might guess,\nwhat's the most likely",
    "start": "1690750",
    "end": "1700230"
  },
  {
    "text": "substituted for positively\ncharged arginine? It's positively charged lysine\nunder physiological conditions.",
    "start": "1700230",
    "end": "1707172"
  },
  {
    "text": "And that's why\nthat's off-diagonal. And there are other ones. We've color coded these the\nsame as the genetic code, where",
    "start": "1707172",
    "end": "1712620"
  },
  {
    "text": "the negatively charged\namino acids can also substitute for one another.",
    "start": "1712620",
    "end": "1718590"
  },
  {
    "text": " So the significance of that top\nrow, of the percent abundance,",
    "start": "1718590",
    "end": "1726120"
  },
  {
    "text": "is that if you find\ntwo matching As, that's not so significant\nbecause that's the most frequently occurring\namino acid in this organism.",
    "start": "1726120",
    "end": "1734429"
  },
  {
    "text": "On the other hand, if\nyou find two matching Cs, that's very significant.",
    "start": "1734430",
    "end": "1739560"
  },
  {
    "text": "Because those are rare. And finding two of\nthem at the same place in a particular alignment\nmeans it's significant.",
    "start": "1739560",
    "end": "1746800"
  },
  {
    "text": "So both the abundance and\nthe substitution matrix can be useful.",
    "start": "1746800",
    "end": "1753610"
  },
  {
    "text": "So now, we're going to walk\nthrough a actual scoring",
    "start": "1753610",
    "end": "1759090"
  },
  {
    "text": "of some alignments. And we want to do this in this\nmore challenging situation",
    "start": "1759090",
    "end": "1766259"
  },
  {
    "text": "where you allow\ninsertions and deletions. So first, we will,\neven though we've",
    "start": "1766260",
    "end": "1773610"
  },
  {
    "text": "told how it is that we get the\nmatch versus mismatch numbers",
    "start": "1773610",
    "end": "1781470"
  },
  {
    "text": "as a full substitution\nmatrix, here, you can imagine substitution matrix\nhas plus 1's along its diagonal",
    "start": "1781470",
    "end": "1788220"
  },
  {
    "text": "and minus 1's on\noff-diagonal just so you can do all the\ncalculations I'm going to show you in the next\nfew slides in your head.",
    "start": "1788220",
    "end": "1794100"
  },
  {
    "text": "But also, simultaneously\nimagine that it could have the richness\nof the substitution matrix we just had. We're going to do this, the\nnext few, with nucleic acid.",
    "start": "1794100",
    "end": "1801390"
  },
  {
    "text": "But imagine you could also\ndo it with amino acids. The nucleic acid substitution\nmatrix will be a 4 by 4.",
    "start": "1801390",
    "end": "1807960"
  },
  {
    "text": "The one we just saw was a\n20 by 20 for amino acids. The indels, we'll\npenalize them by minus 2.",
    "start": "1807960",
    "end": "1816450"
  },
  {
    "text": "But this is an arbitrary number. And you'll see how critical\nit is in just a moment.",
    "start": "1816450",
    "end": "1822700"
  },
  {
    "text": "But you can imagine that\nthis could be determined empirically, just\nlike the substitution matrix was determined\nempirically",
    "start": "1822700",
    "end": "1829200"
  },
  {
    "text": "in the previous slide. The alignment score, then, will\nbe defined as a sum of columns.",
    "start": "1829200",
    "end": "1835230"
  },
  {
    "text": "We're going to be assuming\nthat adjacent positions are independent of one another.",
    "start": "1835230",
    "end": "1840610"
  },
  {
    "text": "And we'll be scoring them\nindependently and then just taking the sum. That gives us the\nalignment score",
    "start": "1840610",
    "end": "1846360"
  },
  {
    "text": "for a particular alignment,\na particular set of indels",
    "start": "1846360",
    "end": "1851760"
  },
  {
    "text": "and a particular set\nof offsets from one sequence relative to another.",
    "start": "1851760",
    "end": "1856902"
  },
  {
    "text": "But what we really\nwant to do is go through all those\npossible alignments to get the optimal\nalignment, which is",
    "start": "1856902",
    "end": "1861990"
  },
  {
    "text": "the maximal score defined here. To get the optimal\nalignment, we'd like to do that in less than\nexponential time with at least",
    "start": "1861990",
    "end": "1870269"
  },
  {
    "text": "less than exponential per\nn length of the sequences. ",
    "start": "1870270",
    "end": "1876870"
  },
  {
    "text": "So we're going to use this\npair of sequences, ATGA, ACTA,",
    "start": "1876870",
    "end": "1885790"
  },
  {
    "text": "twice on this slide. And we're going to use\nit in subsequent slides where we do it a\nslightly different way.",
    "start": "1885790",
    "end": "1891100"
  },
  {
    "text": "And we're going to use that\nvery simple scoring metric-- plus 1 from that perfect match,\nminus 1 for mismatch, minus 2",
    "start": "1891100",
    "end": "1898480"
  },
  {
    "text": "for indel. And what we get here\nis these are just",
    "start": "1898480",
    "end": "1905080"
  },
  {
    "text": "two of many different\nalignments we could have with different\ninsertions here. On the left, number one,\nthe most extreme case,",
    "start": "1905080",
    "end": "1912250"
  },
  {
    "text": "no insertions or deletions\non either sequence. We're only counting mismatches. There are two matches,\ntwo mismatches.",
    "start": "1912250",
    "end": "1917620"
  },
  {
    "text": "And so that's two plus\n1's, two minus 1's. And they cancel out. And the score is 0 for\nthe one on the left.",
    "start": "1917620",
    "end": "1925640"
  },
  {
    "text": "Then the one on the\nright, we've gone to the-- allowed an insertion on each\nstrand, indicated by a dash",
    "start": "1925640",
    "end": "1937190"
  },
  {
    "text": "on the opposite sequence. And now, you see you have\nthree perfect matches, which",
    "start": "1937190",
    "end": "1944640"
  },
  {
    "text": "is an increase in the\nnumber of perfect matches, but penalized with two indels,\nwhich are both negative 2.",
    "start": "1944640",
    "end": "1951710"
  },
  {
    "text": "So it's plus 2 minus\n2 minus 2 for minus 1. So this is not an improvement\nfor the alignment on the left",
    "start": "1951710",
    "end": "1961370"
  },
  {
    "text": "if we accept the\nscoring metrics that we had in the previous slide--",
    "start": "1961370",
    "end": "1967309"
  },
  {
    "text": "plus 1, minus 1, and\nminus 2 for the indels. If, instead, we say, well,\nindels really shouldn't be penalized that much-- we can\naccept insertions and deletions",
    "start": "1967310",
    "end": "1975440"
  },
  {
    "text": "in these kind of sequences,\nwe'll penalize by minus 1, penalize it the\nsame as a mismatch--",
    "start": "1975440",
    "end": "1981110"
  },
  {
    "text": "now the score is the 3--",
    "start": "1981110",
    "end": "1987960"
  },
  {
    "text": "score for the one on the right,\nwith three perfect matches and two insertion-deletions,\nis now plus 1.",
    "start": "1987960",
    "end": "1994110"
  },
  {
    "text": "And it beats the\nperfectly aligned ones. So whether 1 is better than\n2 depends on the indel score",
    "start": "1994110",
    "end": "2002335"
  },
  {
    "text": "that you chose. STUDENT: Can I ask\nyou a question? GEORGE CHURCH: Yes, question. STUDENT: Now that\nyou are aligning two different sequences and\nin the case of the indel,",
    "start": "2002335",
    "end": "2012040"
  },
  {
    "text": "you are allowing insertions\nall over the place-- I mean, you could theoretically\nhave millions of those.",
    "start": "2012040",
    "end": "2018519"
  },
  {
    "text": "But in reality, this [INAUDIBLE]\nthe sequences in most cases would be no. You would know what it is.",
    "start": "2018520",
    "end": "2024300"
  },
  {
    "text": "You can't-- GEORGE CHURCH: We know\nboth of these sequences. These are sequences\nthat we're comparing",
    "start": "2024300",
    "end": "2030300"
  },
  {
    "text": "two different organisms. STUDENT: Right. So if you know both\nof them, then what's the point in allowing all\nthese indel [INAUDIBLE]..",
    "start": "2030300",
    "end": "2038520"
  },
  {
    "text": "GEORGE CHURCH: So the question\nis, why are we allowing insertions and deletions? And the reason is that during\nevolution, say, either lab",
    "start": "2038520",
    "end": "2047429"
  },
  {
    "text": "evolution or ancient,\ninsertions and deletions are valid mutations.",
    "start": "2047430",
    "end": "2053980"
  },
  {
    "text": "And so we're trying to\ndetermine where the most likely places that insertions\nand deletions might",
    "start": "2053980",
    "end": "2060599"
  },
  {
    "text": "have occurred over the course\nof the divergence of two sequences. And believe me,\ninsertions and deletions",
    "start": "2060600",
    "end": "2067500"
  },
  {
    "text": "are very, very common. So that's why we permit them. Now, why it is that\ninsertion-deletions",
    "start": "2067500",
    "end": "2076290"
  },
  {
    "text": "might be highly penalized\nor low penalized might depend on a\nposition in the sequence.",
    "start": "2076290",
    "end": "2081699"
  },
  {
    "text": "So for example, if you have\na transcription factor where its precise geometry\nis important",
    "start": "2081699",
    "end": "2089340"
  },
  {
    "text": "or an alpha helix and a\nprotein or the translation",
    "start": "2089340",
    "end": "2094649"
  },
  {
    "text": "of a genetic code\nwhere an insertion will throw the entire frame\nout of whack, as we",
    "start": "2094650",
    "end": "2101730"
  },
  {
    "text": "had in the chemokine\nreceptor in last class, then you want to penalize\nan indel very heavily.",
    "start": "2101730",
    "end": "2109140"
  },
  {
    "text": "On the other hand,\nif you have a bunch of motifs that are kind of\nseparated by variable linkers,",
    "start": "2109140",
    "end": "2115303"
  },
  {
    "text": "then the insertion-deletion\ncould almost be zero, no penalty at all. So you can see it matters, and\nit might be position-sensitive.",
    "start": "2115303",
    "end": "2121619"
  },
  {
    "text": "It might not be\none size fits all. But these are\nempirically determined--",
    "start": "2121620",
    "end": "2127230"
  },
  {
    "text": "can be empirically determined. So here's the hero--\ndynamic programming. We've hopefully motivated\nthat we can do scoring.",
    "start": "2127230",
    "end": "2135450"
  },
  {
    "text": "We can determine empirically\nuseful substitution matrices and indels.",
    "start": "2135450",
    "end": "2140850"
  },
  {
    "text": "Now, how do we apply them? And dynamic programming\nextends beyond biology,",
    "start": "2140850",
    "end": "2149700"
  },
  {
    "text": "as I've alluded. And such an algorithm solves\nevery subproblem just once",
    "start": "2149700",
    "end": "2156450"
  },
  {
    "text": "and saves its answer in\na table, thereby avoiding the work of recomputing\nthe answer every time.",
    "start": "2156450",
    "end": "2162609"
  },
  {
    "text": "So the strawman that\nI threw up before of having this exponential\nproblem is very readily solved.",
    "start": "2162610",
    "end": "2171180"
  },
  {
    "text": "And the way it's solved\nis this is the subproblem way of dealing with it. And the idea of recursion,\nwhich we lightly",
    "start": "2171180",
    "end": "2178980"
  },
  {
    "text": "touched upon when we\ndefined the factorial, n factorial as equal to n\ntimes n minus 1 factorial,",
    "start": "2178980",
    "end": "2186130"
  },
  {
    "text": "so defining it in\nterms of itself. But the key thing behind\nthat definition and the ones",
    "start": "2186130",
    "end": "2191519"
  },
  {
    "text": "we'll have here is that\nwhen you define something it terms of itself,\nyou'd better have the call be a simpler problem\nand eventually terminate.",
    "start": "2191520",
    "end": "2201600"
  },
  {
    "text": "And so that's what we have here. I'm going to give two\nexamples in slide 17",
    "start": "2201600",
    "end": "2208320"
  },
  {
    "text": "and in the next slide, one of\nthem global and one of them local.",
    "start": "2208320",
    "end": "2213510"
  },
  {
    "text": "This one will be\ndone in terms of a tetranucleotide comparison,\nthe same one we've been dealing with all along.",
    "start": "2213510",
    "end": "2218655"
  },
  {
    "text": "And the other one will be\nin a more abstract sequence. ",
    "start": "2218655",
    "end": "2224940"
  },
  {
    "text": "Here, the way do the\nsub-subproblem by recursion is",
    "start": "2224940",
    "end": "2230220"
  },
  {
    "text": "we say we define the score\nof aligning these two tetranucleotides\nas the maximum of--",
    "start": "2230220",
    "end": "2239220"
  },
  {
    "text": "and then there\nare three options. It can be either\nthe score of having",
    "start": "2239220",
    "end": "2244650"
  },
  {
    "text": "an insertion on the top strand,\nand that's the top option.",
    "start": "2244650",
    "end": "2252059"
  },
  {
    "text": "The middle one is having\nno insertions or deletions on either strand\nand just evaluating",
    "start": "2252060",
    "end": "2257640"
  },
  {
    "text": "the last base comparison,\nwhich, in this case,",
    "start": "2257640",
    "end": "2263809"
  },
  {
    "text": "is an A versus an A. Now, that is the way that\nthe algorithm terminates. When you have a single-base\ncomparison or a single base",
    "start": "2263810",
    "end": "2272240"
  },
  {
    "text": "compared to an\nindel, then you look up the scoring algorithm,\nor the scoring metrics",
    "start": "2272240",
    "end": "2279200"
  },
  {
    "text": "we've been using all along. So here, let's look at that\nfinal right-hand column. The score for an indel versus\nan A would be that minus 2",
    "start": "2279200",
    "end": "2288560"
  },
  {
    "text": "that we've been assuming along. And the score of\nan A versus A would be the substitution\nmatrix diagonal,",
    "start": "2288560",
    "end": "2293900"
  },
  {
    "text": "which would be a plus 1\nand then, here, a minus 2. And so you can see\nthat you're calling up",
    "start": "2293900",
    "end": "2300769"
  },
  {
    "text": "these three possibilities--\nindel, no insertion on the top,",
    "start": "2300770",
    "end": "2306440"
  },
  {
    "text": "no insertion on the bottom. And you take the maximum of\nthese, whichever one of these gives the best score.",
    "start": "2306440",
    "end": "2312980"
  },
  {
    "text": "Now, that requires going\nback and calling it again. But you're calling\nit with a simpler--",
    "start": "2312980",
    "end": "2318590"
  },
  {
    "text": "you're asking for a simpler one. So now, you'll take the\nmax of ATG versus ACT.",
    "start": "2318590",
    "end": "2323820"
  },
  {
    "text": "And that'll ask you to\nlook up the max of AT AC. And finally, it'll get\nthe max of A versus A.",
    "start": "2323820",
    "end": "2329480"
  },
  {
    "text": "And then you end. STUDENT: Excuse me. GEORGE CHURCH: Yeah. STUDENT: Are you assuming that\ninsertion side is always a 1?",
    "start": "2329480",
    "end": "2336310"
  },
  {
    "text": "The insertion side\nis always 1, right? GEORGE CHURCH: No. This algorithm allows\nany number of insertions",
    "start": "2336310",
    "end": "2342890"
  },
  {
    "text": "up to the length of a sequence. And you'll see it when we\ndo this in tabular form, how every possibility.",
    "start": "2342890",
    "end": "2349250"
  },
  {
    "text": "But you do one at a time. There are only three cases here. By dealing with just\nthree cases at a time,",
    "start": "2349250",
    "end": "2355250"
  },
  {
    "text": "you actually end up having the\nfull generality of any number of insertions and deletions.",
    "start": "2355250",
    "end": "2360330"
  },
  {
    "text": "And that's the beauty\nof this algorithm. You don't have to explicitly\ndo every possible insertion",
    "start": "2360330",
    "end": "2365360"
  },
  {
    "text": "with every possible deletion. You just have to run\nthem through once. OK.",
    "start": "2365360",
    "end": "2371890"
  },
  {
    "text": "Now, I said that I was\ngoing to do two treatments of certain similarities.",
    "start": "2371890",
    "end": "2378170"
  },
  {
    "text": "These are both\ndynamic programming of pairwise sequences. The previous one was global.",
    "start": "2378170",
    "end": "2384559"
  },
  {
    "text": "This one is local. The only difference now is\nthat we restrain the score",
    "start": "2384560",
    "end": "2392090"
  },
  {
    "text": "to be greater than 0. We don't permit negative. So that means we're not\npenalizing the mismatches,",
    "start": "2392090",
    "end": "2397369"
  },
  {
    "text": "for example, at the ends. Remember when I showed you\nthat specific example early on. So now we have four choices--",
    "start": "2397370",
    "end": "2403040"
  },
  {
    "text": "the same three as before plus 0. And the other thing that I\nmade a little different here",
    "start": "2403040",
    "end": "2409550"
  },
  {
    "text": "is, rather than having a\nspecific sequence-- that tetra nucleotide-- here, we have\na general sequence where",
    "start": "2409550",
    "end": "2414830"
  },
  {
    "text": "you show that the ellipses,\nthe sequence is up to i",
    "start": "2414830",
    "end": "2420290"
  },
  {
    "text": "long and up to j long here. And at this stage\nin the scoring,",
    "start": "2420290",
    "end": "2425990"
  },
  {
    "text": "you're going to either lop off\nthe i and j sequence element--",
    "start": "2425990",
    "end": "2434270"
  },
  {
    "text": "this would be a single\nbase, and you do that score in the central scoring here--",
    "start": "2434270",
    "end": "2439490"
  },
  {
    "text": "or you have an insertion at the\ntop or insertion at the bottom.",
    "start": "2439490",
    "end": "2445530"
  },
  {
    "text": "So this is just a restatement\nof the previous one, generalized and made into a local\nalignment, which,",
    "start": "2445530",
    "end": "2452990"
  },
  {
    "text": "in general, is what people do. People do local alignments\nrather than global ones. Because it's unsafe to say\nthat the ends of your sequence",
    "start": "2452990",
    "end": "2460910"
  },
  {
    "text": "will align. But we'll work through\nboth of these as examples.",
    "start": "2460910",
    "end": "2466430"
  },
  {
    "text": "Now, we're going to compute\nthis as a row-by-row algorithm.",
    "start": "2466430",
    "end": "2473859"
  },
  {
    "text": "Now, casually, you\ncould just leave off this frame along the edge.",
    "start": "2473860",
    "end": "2482930"
  },
  {
    "text": "But in order to make\nthe algorithm be the same for the beginning and\nall the intermediate steps,",
    "start": "2482930",
    "end": "2490480"
  },
  {
    "text": "what you do is you\npre-fill this with numbers such that the edges are some\nvery, very small number which",
    "start": "2490480",
    "end": "2503320"
  },
  {
    "text": "is smaller than the\nsum of all the scores that you could get\nout of this table so that you can't really\ncome in from those edges.",
    "start": "2503320",
    "end": "2510970"
  },
  {
    "text": "You have to come\nin from the zero point, which is the\nglobal alignment requires",
    "start": "2510970",
    "end": "2517060"
  },
  {
    "text": "the ends to align. So this is requiring the\nleft-hand end to align. And so then the\nfirst comparison--",
    "start": "2517060",
    "end": "2523444"
  },
  {
    "text": "the only comparison\nyou can really do-- is the A, A. That's the\nterminal comparison. And that happens to\nbe a perfect match,",
    "start": "2523445",
    "end": "2529340"
  },
  {
    "text": "so it gets a score of plus 1. Now, the next square that\nyou can do is minus 1.",
    "start": "2529340",
    "end": "2535960"
  },
  {
    "text": "And remember, each of these\nhas three possibilities",
    "start": "2535960",
    "end": "2541330"
  },
  {
    "text": "in the global alignment. Remember, it can be an\ninsertion, a deletion,",
    "start": "2541330",
    "end": "2547260"
  },
  {
    "text": "or just a direct comparison\nof match versus mismatch. So this first one, the insertion\nand deletion were ruled out.",
    "start": "2547260",
    "end": "2554760"
  },
  {
    "text": "They weren't going to\nwin the maximum score. So you basically got 1.",
    "start": "2554760",
    "end": "2561065"
  },
  {
    "text": "It gets a little\nmore interesting when you go to\nadding this next C. In order to add this C\non the horizontal axis",
    "start": "2561065",
    "end": "2569910"
  },
  {
    "text": "without adding anything\non the vertical axis, that means that you've got an indel. And that means that\nyou've got your A-A match.",
    "start": "2569910",
    "end": "2577109"
  },
  {
    "text": "But now, to add this C, you've\ngot a negative 2-- a penalty of minus 2.",
    "start": "2577110",
    "end": "2582810"
  },
  {
    "text": "And so for the net\nresult is a minus 1. And then, for each\nsubsequent one,",
    "start": "2582810",
    "end": "2588990"
  },
  {
    "text": "it's assumed that\nthe extension is the same as the initial indel,\nwhich is all negative 2.",
    "start": "2588990",
    "end": "2596310"
  },
  {
    "text": "And so this is an\nA-A match followed by one insertion, two\ninsertions, or three",
    "start": "2596310",
    "end": "2602850"
  },
  {
    "text": "insertions. And three insertions, of\ncourse, that gives you minus 5. And you just keep\nwalking through this.",
    "start": "2602850",
    "end": "2610790"
  },
  {
    "text": "Each one of these\nsquares, essentially, is the maximum of\nthree possibilities.",
    "start": "2610790",
    "end": "2619170"
  },
  {
    "text": "The diagonal, if you follow\nthe little yellow diagonal line from the 1 to\nthe 0, that means",
    "start": "2619170",
    "end": "2626390"
  },
  {
    "text": "you've taken an A-A\nmatch and a C-T mismatch, and the negative 1 is\ncanceled out to positive 1,",
    "start": "2626390",
    "end": "2632720"
  },
  {
    "text": "and you get a 0. Alternatively,\nthat 0 is actually the maximum of that\nindividual score compared",
    "start": "2632720",
    "end": "2641690"
  },
  {
    "text": "to an indel from a minus 1 plus\nthis mismatch, which is not",
    "start": "2641690",
    "end": "2651980"
  },
  {
    "text": "going to be better\nthan 0, and a minus 1 plus the mismatch coming in\nhorizontally, which is also not",
    "start": "2651980",
    "end": "2658516"
  },
  {
    "text": "going to be better than 0. So you end up with 0,\nwhich is the perfect match plus a mismatch, no indels.",
    "start": "2658517",
    "end": "2663710"
  },
  {
    "start": "2663710",
    "end": "2669080"
  },
  {
    "text": "And similarly, you can fill\nup the entire table this way. ",
    "start": "2669080",
    "end": "2675680"
  },
  {
    "text": "Finally, now, you can trace\nwhat the best scores are",
    "start": "2675680",
    "end": "2683210"
  },
  {
    "text": "going from end to\nend here, going all the way from your A-A\nterminal match at the left end",
    "start": "2683210",
    "end": "2691759"
  },
  {
    "text": "to the A-A terminal\nmatch at the right end. And you can see the best\ntraceback route is going",
    "start": "2691760",
    "end": "2699920"
  },
  {
    "text": "through the diagonal here. This 0 is the maximum of three\npossibilities-- left-right,",
    "start": "2699920",
    "end": "2707730"
  },
  {
    "text": "up-down, and diagonal. Similarly, this minus 1 was the\nbest of three possibilities.",
    "start": "2707730",
    "end": "2714079"
  },
  {
    "text": "Remember, this is\na global alignment that allows negative values. And its maximum was along\nthe diagonal and so forth.",
    "start": "2714080",
    "end": "2722810"
  },
  {
    "text": " That's an example of\nthe two basic steps.",
    "start": "2722810",
    "end": "2731780"
  },
  {
    "text": "You set up the scoring metrics. You set up this n by\nn or n by m matrix.",
    "start": "2731780",
    "end": "2740420"
  },
  {
    "text": "And then you just fill it up. And that's an n\nsquared operation. It just goes up\nwith the number of--",
    "start": "2740420",
    "end": "2746029"
  },
  {
    "text": "the length of the two sequences. STUDENT: [INAUDIBLE]. GEORGE CHURCH: Question. STUDENT: A diagonal is\nnot the only optimal--",
    "start": "2746030",
    "end": "2752299"
  },
  {
    "text": "GEORGE CHURCH: It's not. That's true. STUDENT: [INAUDIBLE] GEORGE CHURCH: That's right.",
    "start": "2752300",
    "end": "2757610"
  },
  {
    "text": "If you have an off-diagonal\nthat's equivalent, then that's another\nvalid sequence alignment.",
    "start": "2757610",
    "end": "2764690"
  },
  {
    "text": "And actually, it comes\nup quite commonly, both in global and\nlocal alignments. ",
    "start": "2764690",
    "end": "2773510"
  },
  {
    "text": "And then the lower\nright-hand corner of slide 20",
    "start": "2773510",
    "end": "2779990"
  },
  {
    "text": "shows the specific\ninterpretation of this [? Brown ?]\nset of errors, the particular traceback that\nwe chose to highlight here,",
    "start": "2779990",
    "end": "2789930"
  },
  {
    "text": "which is not the only one. And that's interpreted\nin this the same way",
    "start": "2789930",
    "end": "2797990"
  },
  {
    "text": "that we interpreted the-- symbolically in\nan earlier slide.",
    "start": "2797990",
    "end": "2805200"
  },
  {
    "text": "Now, this is also from\na much earlier slide. This is the one where\nwe had the motif",
    "start": "2805200",
    "end": "2813240"
  },
  {
    "text": "to illustrate the\nlocal alignment. And on the left-hand side matrix\nis for local alignment using",
    "start": "2813240",
    "end": "2821370"
  },
  {
    "text": "a Smith and Waterman algorithm. And on the right-hand side\nis the global alignment",
    "start": "2821370",
    "end": "2826530"
  },
  {
    "text": "using the Needleman-Wunsch\ntype algorithm, which we just used on a shorter sequence. And here, we've emphasized\nthe diagonal, which",
    "start": "2826530",
    "end": "2842530"
  },
  {
    "text": "gives a score of 2 and has a\ntraceback along the magenta diagonal and would\nhave the interpretation",
    "start": "2842530",
    "end": "2849910"
  },
  {
    "text": "of the top sequence directly\nover the bottom sequence.",
    "start": "2849910",
    "end": "2856390"
  },
  {
    "text": "On the other hand, if we\nlook for local alignments and we do not penalize\nthe offsets or the indels,",
    "start": "2856390",
    "end": "2862119"
  },
  {
    "text": "then you can get an example. And here's another magenta\ntraceback where we've gone--",
    "start": "2862120",
    "end": "2868780"
  },
  {
    "text": "the A-A match is\nnot on the diagonal",
    "start": "2868780",
    "end": "2876240"
  },
  {
    "text": "for the global\nsequence alignment, but it hasn't been penalized. So it picks up the\n0's from the frame",
    "start": "2876240",
    "end": "2883050"
  },
  {
    "text": "boundary cells and just picks\nup the positive 1 perfect match.",
    "start": "2883050",
    "end": "2889140"
  },
  {
    "text": "And then, when you add a\nC, it picks up another one, and another C, another a. And all four add up to 4.",
    "start": "2889140",
    "end": "2896220"
  },
  {
    "text": "Adding an additional base,\nhowever, does not help. Because it has to be a mismatch\nor an insertion or deletion.",
    "start": "2896220",
    "end": "2904720"
  },
  {
    "text": "So you going from the 4 to\nan indel causes it to drop by minus 2, giving the two 2's.",
    "start": "2904720",
    "end": "2910950"
  },
  {
    "text": "And going along the diagonal\npicks up a mismatch, which is a minus 1 penalty. So you just can't do better.",
    "start": "2910950",
    "end": "2916630"
  },
  {
    "text": "And so that determines the\nedges of your local alignment. So you not only have a\nscore and a traceback",
    "start": "2916630",
    "end": "2923519"
  },
  {
    "text": "but you also have endpoints. STUDENT: [INAUDIBLE]. GEORGE CHURCH: Yes, question?",
    "start": "2923520",
    "end": "2929900"
  },
  {
    "text": "You, yeah. STUDENT: Now, when this\ngets going, though,",
    "start": "2929900",
    "end": "2935180"
  },
  {
    "text": "on the not exactly diagonal\nbut in diagonal [INAUDIBLE]---- GEORGE CHURCH: Yes,\nyou'll get a longer--",
    "start": "2935180",
    "end": "2941150"
  },
  {
    "text": "STUDENT: B, which is\nobviously not as good-- GEORGE CHURCH: And then 4. STUDENT: And then you keep\ngoing, you get back to 4. GEORGE CHURCH: And\nthat's another example,",
    "start": "2941150",
    "end": "2947460"
  },
  {
    "text": "just like the previous one. That's another valid alignment. ",
    "start": "2947460",
    "end": "2953510"
  },
  {
    "text": "It's still a local alignment. It doesn't have the\ntotal global endpoints.",
    "start": "2953510",
    "end": "2960440"
  },
  {
    "text": "And it has an equal score\nto the shorter motif. STUDENT: So how do\nthese two compare?",
    "start": "2960440",
    "end": "2965550"
  },
  {
    "text": "I mean, would you-- GEORGE CHURCH: They're equal. STUDENT: --say because the other\none is a longer [INAUDIBLE] GEORGE CHURCH:\nWell, in this case,",
    "start": "2965550",
    "end": "2972010"
  },
  {
    "text": "the scoring algorithm\nwas set up in such a way that length didn't\nfactor into it,",
    "start": "2972010",
    "end": "2977589"
  },
  {
    "text": "other than the fact that longer\nsequences have more chances to have more perfect matches. So in this case, they\nwould be equivalent.",
    "start": "2977590",
    "end": "2984542"
  },
  {
    "text": " As you get to more detailed\nsubstitution matrices,",
    "start": "2984542",
    "end": "2994900"
  },
  {
    "text": "the chances of getting two\nidentical scores are weaker. But with nucleic acids with\nthis kind of simple scoring,",
    "start": "2994900",
    "end": "3000653"
  },
  {
    "text": "it comes up all the time.  So that's fine.",
    "start": "3000653",
    "end": "3007320"
  },
  {
    "text": "We've now bargained our way\ndown from a horrible exponential",
    "start": "3007320",
    "end": "3014610"
  },
  {
    "text": "potential way of\ndoing alignments to something which\nscales by n times",
    "start": "3014610",
    "end": "3021120"
  },
  {
    "text": "m where those are the\nlengths of the two sequences.",
    "start": "3021120",
    "end": "3026910"
  },
  {
    "text": "You could think of this\nas a rectangular matrix such as the ones\nwe've been doing.",
    "start": "3026910",
    "end": "3032640"
  },
  {
    "text": "And both the time and the\nspace or memory requirements",
    "start": "3032640",
    "end": "3038279"
  },
  {
    "text": "for the algorithm will scale\nby this quadratic relationship.",
    "start": "3038280",
    "end": "3045030"
  },
  {
    "text": "And the amount of time\nin memory is modest. ",
    "start": "3045030",
    "end": "3052329"
  },
  {
    "text": "So in absolute terms, it\nwould be on the order of one comparison-- that's that\nmaximum comparison--",
    "start": "3052330",
    "end": "3058920"
  },
  {
    "text": " three multiplication steps\nand in computing the entry.",
    "start": "3058920",
    "end": "3065529"
  },
  {
    "text": "And the memory could be\non the order of a byte. Data structure could be integer,\nor it could be floating point.",
    "start": "3065530",
    "end": "3072940"
  },
  {
    "text": "And again, you have to\nhave some way of finding the entries in the table.",
    "start": "3072940",
    "end": "3079685"
  },
  {
    "text": "So that's fine. It scales gracefully. But how big is it? Let's say we had two\nmegabase genomes.",
    "start": "3079685",
    "end": "3088440"
  },
  {
    "text": "In order to find\nentries of that size, you might want to\nset aside 4 bytes.",
    "start": "3088440",
    "end": "3094289"
  },
  {
    "text": "And so you have the 4 bytes\ntimes 10 to the sixth squared.",
    "start": "3094290",
    "end": "3100320"
  },
  {
    "text": "Or this is just ballpark. There are various ways you\ncould squeeze this a bit. But this is 4\ngigabytes of memory.",
    "start": "3100320",
    "end": "3107280"
  },
  {
    "text": "And for a gigahertz\nCPU, you might",
    "start": "3107280",
    "end": "3113280"
  },
  {
    "text": "be able to do a million entries\nper second so that with 10",
    "start": "3113280",
    "end": "3118370"
  },
  {
    "text": "to the 6 squared entries,\nthat's about 10 days. Now, that's a\nfairly small genome.",
    "start": "3118370",
    "end": "3123859"
  },
  {
    "text": "Most genomes are\nbigger than 1 megabase. And so when we had\nthe discussions at the beginning of\nthe Genome Project,",
    "start": "3123860",
    "end": "3130310"
  },
  {
    "text": "one of the things the\ncomputer people brought up was, how are we going to\ncompare a billion base pairs",
    "start": "3130310",
    "end": "3139130"
  },
  {
    "text": "with a billion base pairs\nif the goal of this project is to do the three billion\nbase pair human genome?",
    "start": "3139130",
    "end": "3144650"
  },
  {
    "text": "And of course, back then, most\ncomputers were 4 gigabytes,",
    "start": "3144650",
    "end": "3150770"
  },
  {
    "text": "and a gigahertz was a\nquite remarkable computer.",
    "start": "3150770",
    "end": "3157340"
  },
  {
    "text": "And of course, the\nanswer was that we weren't going to do a\nfull dynamic programming of the human genome\nagainst itself.",
    "start": "3157340",
    "end": "3164300"
  },
  {
    "text": "We were going to\ncheat in various ways. And it took the\nrecognition that it really",
    "start": "3164300",
    "end": "3175200"
  },
  {
    "text": "was practical and, biologically,\nnot much of a shortcut to look for little anchor\npoints that would tell you",
    "start": "3175200",
    "end": "3183839"
  },
  {
    "text": "that maybe the sequences\ndon't align end to end, but there's some anchor\npoint where you have enough bases or enough\namino acids in a row",
    "start": "3183840",
    "end": "3191640"
  },
  {
    "text": "that you can say, OK,\nhere's one point where they definitely align. Let's now make\nreasonable assumptions",
    "start": "3191640",
    "end": "3197369"
  },
  {
    "text": "by how many indels there\ncan be, for example,",
    "start": "3197370",
    "end": "3203670"
  },
  {
    "text": "by knowing how different\nthe two sequences are. And so if you know the\ndifferences of sequences,",
    "start": "3203670",
    "end": "3210420"
  },
  {
    "text": "then you can say, I'm\nnot going to allow more than a reasonable\nnumber of indels",
    "start": "3210420",
    "end": "3216210"
  },
  {
    "text": "based on how different\nthe sequences are. And you make a band\nwhich is a narrow width-- here's a fairly extreme example\nwhere we have a width of 3.",
    "start": "3216210",
    "end": "3224220"
  },
  {
    "text": "And so rather than\ndoing a full n squared matrix where you\nfilled up the entire thing,",
    "start": "3224220",
    "end": "3230820"
  },
  {
    "text": "we just do this band,\nwhich is on the order of the width of the band times\nthe length of the longest",
    "start": "3230820",
    "end": "3240090"
  },
  {
    "text": "sequence. Now, this doesn't look very\nimpressive for this case",
    "start": "3240090",
    "end": "3246330"
  },
  {
    "text": "because n is small, and\nw is relatively large. But if n were billions\nand w were, say, 3 to 5,",
    "start": "3246330",
    "end": "3254220"
  },
  {
    "text": "then it would be a very\nsignificant savings. So there's two key things here. One is the banding,\nand the other",
    "start": "3254220",
    "end": "3260580"
  },
  {
    "text": "is getting the anchor points. So summary for this\nhalf of the talk",
    "start": "3260580",
    "end": "3268080"
  },
  {
    "text": "is that dynamic programming\nis really the rigorous way",
    "start": "3268080",
    "end": "3273810"
  },
  {
    "text": "to compare two sequences. And after the break,\nwe'll see how you can compare multiple sequences.",
    "start": "3273810",
    "end": "3279210"
  },
  {
    "text": "We need to work towards a\nstatistical interpretation of these alignments. That's going to require\nsome test sets--",
    "start": "3279210",
    "end": "3287490"
  },
  {
    "text": "sorry, some training sets-- where you can see\nhow it actually behaves on real biological\npopulations of sequence",
    "start": "3287490",
    "end": "3297240"
  },
  {
    "text": "alignments. We need to compute either a\nglobal or a local alignment.",
    "start": "3297240",
    "end": "3302357"
  },
  {
    "text": "And you've seen algorithms\nfor doing each of those and how there's important\nbut subtle differences between them.",
    "start": "3302357",
    "end": "3308322"
  },
  {
    "text": "And we've talked\nabout ways that we can improve the algorithm\ntremendously using",
    "start": "3308322",
    "end": "3317700"
  },
  {
    "text": "the simple scoring functions\nor complicated ones that are determined empirically. So let's take a little break.",
    "start": "3317700",
    "end": "3323579"
  },
  {
    "text": "And we'll come back and talk\nabout multisequence alignment. ",
    "start": "3323580",
    "end": "3328000"
  }
]