[
  {
    "text": " The following\ncontent is provided under a Creative\nCommons license. Your support will help MIT\nOpenCourseWare continue",
    "start": "0",
    "end": "6860"
  },
  {
    "text": "to offer high quality\neducational resources for free. To make a donation, or\nview additional materials",
    "start": "6860",
    "end": "13330"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13330",
    "end": "22242"
  },
  {
    "text": "PROFESSOR: Thanks for coming. I know there's a\nproblem set due. There's a quiz coming\nup on Thursday.",
    "start": "22242",
    "end": "27890"
  },
  {
    "text": "We won't have\nlecture on Thursday. But we will have a\nquiz in the evening.",
    "start": "27890",
    "end": "35489"
  },
  {
    "text": "And there will be a\nrecitation section tomorrow, which will be a quiz review.",
    "start": "35490",
    "end": "41900"
  },
  {
    "text": "So, today's lecture is the last\nof the lectures in the shortest",
    "start": "41900",
    "end": "47220"
  },
  {
    "text": "path module. And, unlike previous\nlectures, we're",
    "start": "47220",
    "end": "53020"
  },
  {
    "text": "going to be talking about\noptimizations that don't change the worst case, or\nasymptotic, complexity.",
    "start": "53020",
    "end": "60670"
  },
  {
    "text": "But improve empirical,\nreal life performance.",
    "start": "60670",
    "end": "65890"
  },
  {
    "text": "Or potentially, and we can't\nprove this, but performance in the average case.",
    "start": "65890",
    "end": "71640"
  },
  {
    "text": "And so we look at a\ncouple of examples. The first one\nyou've already done.",
    "start": "71640",
    "end": "78450"
  },
  {
    "text": "You can optimize\nDijkstra when you're looking for a single target.",
    "start": "78450",
    "end": "85000"
  },
  {
    "text": "So, implicitly, we've\nassumed that we're solving the single source, any\nor all destination problem,",
    "start": "85000",
    "end": "99900"
  },
  {
    "text": "when we've looked at\nthe original Dijkstra algorithm, and the\nBellman-Ford algorithm.",
    "start": "99900",
    "end": "107020"
  },
  {
    "text": "Many a time, you're going\nto have a source, s. And you want to find\nthe shortest path",
    "start": "107020",
    "end": "113500"
  },
  {
    "text": "to a specific destination, t. And you're doing this\nin your problem set. And you can do\nsome optimization.",
    "start": "113500",
    "end": "119799"
  },
  {
    "text": "It doesn't change the\nworst case complexity. But it reduces runtime.",
    "start": "119800",
    "end": "125210"
  },
  {
    "text": "And then you have\na specific target. Especially if the\ntarget is close to you. And you don't have to\ntraverse the entire graph.",
    "start": "125210",
    "end": "132170"
  },
  {
    "text": "Obviously, the\nalgorithm has to prove that the particular\npath that was chosen is, in fact, the shortest\npath from s to t.",
    "start": "132170",
    "end": "139209"
  },
  {
    "text": "But it's a fairly\nstraightforward modification. And I will go over it,\nbut you're actually implementing it in PS 6.",
    "start": "139210",
    "end": "146037"
  },
  {
    "text": "We talked about\nbi-directional search. Again, something you're\ndoing from a standpoint of breadth-first search.",
    "start": "146037",
    "end": "152330"
  },
  {
    "text": "How can you get from one\nsource to a destination,",
    "start": "152330",
    "end": "158860"
  },
  {
    "text": "by doing bi-directional\nDijkstra? And you can think of this as\na frontier off shortest paths",
    "start": "158860",
    "end": "165900"
  },
  {
    "text": "is being constructed from\nthe source, s, forward. And this backward frontier,\nyou're falling edges backward,",
    "start": "165900",
    "end": "175470"
  },
  {
    "text": "is being constructed\nfrom the destination. And, effectively, when\nthese two frontiers meet,",
    "start": "175470",
    "end": "181280"
  },
  {
    "text": "you're going to be able to\ndiscover shortest paths. And, it turns out, it's not\nas simple as what I just",
    "start": "181280",
    "end": "186870"
  },
  {
    "text": "described. And so we'll have to look at\nthat a little more carefully. ",
    "start": "186870",
    "end": "193349"
  },
  {
    "text": "So that is our single source,\nsingle target problem. We won't cover this in 006.",
    "start": "193350",
    "end": "199280"
  },
  {
    "text": "But there's also this notion of\nall pairs shortest paths, which",
    "start": "199280",
    "end": "206050"
  },
  {
    "text": "is something that 6046 covers. And that is something\nthat says, well, I don't know what the source is.",
    "start": "206050",
    "end": "212420"
  },
  {
    "text": "I don't know what\nthe destination is. For any pair of vertices,\nfind me the shortest path",
    "start": "212420",
    "end": "218350"
  },
  {
    "text": "from s to t, given that pair. And so that, of\ncourse, is more work",
    "start": "218350",
    "end": "224299"
  },
  {
    "text": "than even the single source,\nall destination problem because you're\nvarying the source.",
    "start": "224300",
    "end": "229850"
  },
  {
    "text": "All right? So those are the three different\nshortest path problems.",
    "start": "229850",
    "end": "235080"
  },
  {
    "text": "And we've looked at that. And we're going to\nlook at this today.",
    "start": "235080",
    "end": "240360"
  },
  {
    "text": "And we looked at it\nin the problem set. But we'll spend time,\nspecifically on this one.",
    "start": "240360",
    "end": "247410"
  },
  {
    "text": "And try and see if we can do\nsome coding optimizations, if you will, to\nimprove run time.",
    "start": "247410",
    "end": "254430"
  },
  {
    "text": "All right? So, I emphasize that\nworst case complexity is unchanged for all of\nthe Dijkstra versions",
    "start": "254430",
    "end": "262019"
  },
  {
    "text": "that we'll be looking at today. So I want to put up a pseudocode\nthat you've written code",
    "start": "262019",
    "end": "271520"
  },
  {
    "text": "for at this point, which\nis the Dijkstra pseudocode. Because we'll take a look at it,\nand modify it, and execute it.",
    "start": "271520",
    "end": "281960"
  },
  {
    "text": "So you have your set\nof vertices that you don't know the\nshortest paths to.",
    "start": "281960",
    "end": "288540"
  },
  {
    "text": "So we do have initialize is\ngoing to set d of s to be 0.",
    "start": "288540",
    "end": "294090"
  },
  {
    "text": "And b of u, not equal\nto s, to be infinity.",
    "start": "294090",
    "end": "299120"
  },
  {
    "text": "And we have this\nset, Q, that we're going to process and continually\nextract the minimum priority",
    "start": "299120",
    "end": "311500"
  },
  {
    "text": "from Q. And, once we\ndo that, we actually",
    "start": "311500",
    "end": "317440"
  },
  {
    "text": "know the shortest\npath to you already. That's what the\nDijkstra invariant is.",
    "start": "317440",
    "end": "326490"
  },
  {
    "text": "And the process of\nextracting u implies",
    "start": "326490",
    "end": "332250"
  },
  {
    "text": "that we have to do a\nrelaxation step that updates the priorities.",
    "start": "332250",
    "end": "338090"
  },
  {
    "text": "And also modifies\nthe parent pointers. So there's also the pi\nof v that is set to u.",
    "start": "338090",
    "end": "348355"
  },
  {
    "text": " As well as d of v\ngetting decremented.",
    "start": "348355",
    "end": "358200"
  },
  {
    "text": "OK? So that's the\nDijkstra algorithm. And one of the things\nthat we can do,",
    "start": "358200",
    "end": "363889"
  },
  {
    "text": "the straightforward thing, which\nis one line of code literally, is to say that, if you know\nwhat the single target is, then",
    "start": "363890",
    "end": "372819"
  },
  {
    "text": "you simply stop if u equals t.",
    "start": "372820",
    "end": "379190"
  },
  {
    "text": "So no need to stop\nwhen Q becomes null.",
    "start": "379190",
    "end": "385900"
  },
  {
    "text": "Or, you don't get to the\npoint where Q is null. You stop when you've lifted off\nthe y vertex from Q. All right?",
    "start": "385900",
    "end": "396220"
  },
  {
    "text": "And so, obviously,\nthis will run faster, assuming this check\nis a 0 time check.",
    "start": "396220",
    "end": "403870"
  },
  {
    "text": "And that's really\none instruction, so you can think of it that way.",
    "start": "403870",
    "end": "409139"
  },
  {
    "text": "And you will, basically,\nrun faster for sure,",
    "start": "409140",
    "end": "415220"
  },
  {
    "text": "when you have a specific target. It may be the case that your\ntarget is the last vertex that you find.",
    "start": "415220",
    "end": "421090"
  },
  {
    "text": "And in that case,\nyou run no slower. All right?",
    "start": "421090",
    "end": "426130"
  },
  {
    "text": "So that's something\nthat you looked at. And that takes care of the\nfirst optimization corresponding",
    "start": "426130",
    "end": "436430"
  },
  {
    "text": "to single source, single target. Let's talk about\nsomething that's a little more interesting,\nand non-obvious,",
    "start": "436430",
    "end": "445590"
  },
  {
    "text": "which is the notion of\nbi-directional search.  And, in bi-directional\nsearch, we have s.",
    "start": "445590",
    "end": "456800"
  },
  {
    "text": "And we have t. And we have a bunch\nof nodes in between,",
    "start": "456800",
    "end": "468169"
  },
  {
    "text": "corresponding to\nthis graph here.",
    "start": "468170",
    "end": "476670"
  },
  {
    "text": "And what you do is,\nyou alternate search in the forward direction\nand backward direction.",
    "start": "476670",
    "end": "486940"
  },
  {
    "text": "So, you're going to do one step\nof Dijkstra, standard Dijkstra",
    "start": "486940",
    "end": "495550"
  },
  {
    "text": "that starts with s. And goes forward.",
    "start": "495550",
    "end": "501360"
  },
  {
    "text": "And so, you could imagine\nthat you're forward search in the first step, you're\ngoing to pick the vertex, s,",
    "start": "501360",
    "end": "510410"
  },
  {
    "text": "off of Q. And you're\ngoing to process the edges that come out of s.",
    "start": "510410",
    "end": "516469"
  },
  {
    "text": "And that would correspond\nwith these two edges. And so that's one step of\nforward search, going forward.",
    "start": "516470",
    "end": "523479"
  },
  {
    "text": "And then you stop with\nthe forward search, and you do a step\nof backward search.",
    "start": "523480",
    "end": "530170"
  },
  {
    "text": "And so, you go backward\nsearch, and I'll explain exactly what this\nmeans, backward search from t.",
    "start": "530170",
    "end": "538917"
  },
  {
    "text": "And the important\nthing is that you're following edges backward.",
    "start": "538917",
    "end": "545380"
  },
  {
    "text": "So that means your\ndata structure has to, essentially, have these\nedges that can be traversed",
    "start": "545380",
    "end": "552070"
  },
  {
    "text": "in either the forward direction,\nor the reverse direction. So that's something\nto keep in mind.",
    "start": "552070",
    "end": "557100"
  },
  {
    "text": "But what will happen\nhere is simply that your first frontier\nof backward search,",
    "start": "557100",
    "end": "564750"
  },
  {
    "text": "t now, in the backward search,\nis the minimum priority.",
    "start": "564750",
    "end": "570360"
  },
  {
    "text": "So , we're going to have to have\ntwo priorities corresponding to s in the fourth search, where\nthat's a straightforward one.",
    "start": "570360",
    "end": "577590"
  },
  {
    "text": "v of s equals 0. And we should think of\nit as d of f s equals 0.",
    "start": "577590",
    "end": "586210"
  },
  {
    "text": "And we have d of b t equals 0.",
    "start": "586210",
    "end": "592310"
  },
  {
    "text": "And these subscripts\ncorrespond to these two different priorities. And it's exactly complimentary.",
    "start": "592310",
    "end": "600240"
  },
  {
    "text": "Only the source, s,\nin the forward search, has 0 priority in the beginning. Everything else has\ninfinite priority.",
    "start": "600240",
    "end": "608190"
  },
  {
    "text": "Only the target,\nor destination, has",
    "start": "608190",
    "end": "613230"
  },
  {
    "text": "0 priority in the\nbackward search. Everything else is infinity. And you go forward,\nbackward, forward, backward.",
    "start": "613230",
    "end": "622480"
  },
  {
    "text": "And so on. And the question is,\nwhen do you stop? And we have to talk about that. And, it turns out, it's not\na perfectly straightforward",
    "start": "622480",
    "end": "630230"
  },
  {
    "text": "stopping condition. But it's something that\nwill make sense, hopefully, when I get around\nto describing it.",
    "start": "630230",
    "end": "636980"
  },
  {
    "text": "But, having said\nall that, let's just put down all of the\ndifferent data structures",
    "start": "636980",
    "end": "645770"
  },
  {
    "text": "that we have to have. And it's kind of a doubling\nof the data structure, right, because just like\nI double the priorities,",
    "start": "645770",
    "end": "652530"
  },
  {
    "text": "I also need two\ndifferent min priority queues, corresponding\nto Q f and Q b.",
    "start": "652530",
    "end": "658750"
  },
  {
    "text": "And, as I said\nbefore, these edges have to be traversable in\nthe backward direction.",
    "start": "658750",
    "end": "664090"
  },
  {
    "text": "So this edge, in the\ngraph, goes this way. But you're going in\nthe backward direction,",
    "start": "664090",
    "end": "669590"
  },
  {
    "text": "as you are growing\nyour backward frontier. OK? That's important to understand.",
    "start": "669590",
    "end": "675759"
  },
  {
    "text": "So let me put down all of\nthe specifics associated",
    "start": "675760",
    "end": "681270"
  },
  {
    "text": "with these data structures. df u correspond to the distances\nfor the forward search.",
    "start": "681270",
    "end": "689790"
  },
  {
    "text": " And db u correspond\nto the distances",
    "start": "689790",
    "end": "699390"
  },
  {
    "text": "for the backward search.  OK?",
    "start": "699390",
    "end": "704840"
  },
  {
    "text": "And, of course,\nwe're going to have to have priority queues, plural.",
    "start": "704840",
    "end": "718500"
  },
  {
    "text": "Qf corresponding to\nthe forward search.",
    "start": "718500",
    "end": "723650"
  },
  {
    "text": "And Qb corresponding\nto the backward search. And in initialize,\nas I said before,",
    "start": "723650",
    "end": "730959"
  },
  {
    "text": "we're going to initialize df\ns to be 0 and db t equals 0. And then everything, the\ndf's and the db's, are",
    "start": "730960",
    "end": "738000"
  },
  {
    "text": "going to be infinity. All right? OK. Great. So that's what we have here.",
    "start": "738000",
    "end": "744760"
  },
  {
    "text": "Now, first question. ",
    "start": "744760",
    "end": "760230"
  },
  {
    "text": "Roughly speaking, as I said,\nyou can imagine intuitively that you're going to\nterminate the search when",
    "start": "760230",
    "end": "768720"
  },
  {
    "text": "these frontiers meet, OK? Clearly, you can't\nterminate it when these frontiers\nlook like this, OK.",
    "start": "768720",
    "end": "776460"
  },
  {
    "text": "So that's the intuition. And you see that\nfor the [INAUDIBLE]",
    "start": "776460",
    "end": "782460"
  },
  {
    "text": "first, as well, in\nyour problem set. But in the context of Dijkstra,\nsingle source, single target,",
    "start": "782460",
    "end": "789370"
  },
  {
    "text": "can someone tell me what\nthe termination condition should be by\nlooking at the code?",
    "start": "789370",
    "end": "795930"
  },
  {
    "text": "I want a more specific,\nor a more concrete, termination condition that\nI can actually code up,",
    "start": "795930",
    "end": "801980"
  },
  {
    "text": "as opposed to saying,\nthe frontiers meet. Which, you know, I\ndon't know how to code. OK?",
    "start": "801980",
    "end": "808450"
  },
  {
    "text": "Someone else? All right, go for it. AUDIENCE: When\nthere's some node that",
    "start": "808450",
    "end": "816016"
  },
  {
    "text": "can keep track of two\ndifferent cost values from--",
    "start": "816017",
    "end": "821610"
  },
  {
    "text": "PROFESSOR: The Qf and\nthe Qb, that's correct. And, somehow-- AUDIENCE: Somehow\nthey're cost runs",
    "start": "821610",
    "end": "828386"
  },
  {
    "text": "to get there from the start\nand from the [INAUDIBLE]. PROFESSOR: OK.",
    "start": "828386",
    "end": "833930"
  },
  {
    "text": "It's close. It's not quite\nsomething I can code up. Someone want to improve that?",
    "start": "833930",
    "end": "840120"
  },
  {
    "text": "Someone want to improve that? I want something\nvery, very specific. Someone?",
    "start": "840120",
    "end": "845390"
  },
  {
    "text": "Go for it. AUDIENCE: The node has been\nextracted from both Qf and Qb. PROFESSOR: The\nnode which has been",
    "start": "845390",
    "end": "851520"
  },
  {
    "text": "extracted from both Qf and Qb. So, the reason I didn't\nquite buy your answer was, finite part is\nobviously correct.",
    "start": "851520",
    "end": "860430"
  },
  {
    "text": "But I wanted a\nspecific condition that says, I'm going\nto do extract-min,",
    "start": "860430",
    "end": "865790"
  },
  {
    "text": "just like I said when I\nextract-min and u equals t, I stop with the single\nsource, single target.",
    "start": "865790",
    "end": "871010"
  },
  {
    "text": "In the bi-directional\ncase, I need to pull out a node from Qf. And pull out a node from Qb.",
    "start": "871010",
    "end": "878510"
  },
  {
    "text": "And then I get to\nstop, all right? So, you get a cushion. You don't need to\nfeel too bad because I",
    "start": "878510",
    "end": "885000"
  },
  {
    "text": "think you already\nhave a cushion. Yeah. I know that. I know everyone\nwho has cushions.",
    "start": "885000",
    "end": "890716"
  },
  {
    "text": "Right. Actually, I don't. But I'm going to pretend I do.",
    "start": "890716",
    "end": "896149"
  },
  {
    "text": "So, the termination condition\nis that some vertex, and this is",
    "start": "896150",
    "end": "903490"
  },
  {
    "text": "correct, some vertex,\nu, has been processed,",
    "start": "903490",
    "end": "909800"
  },
  {
    "text": "both in the forward search\nand the backward search.",
    "start": "909800",
    "end": "923880"
  },
  {
    "text": "OK? That corresponds to\nthe frontiers meeting. But, specifically,\nit's been deleted,",
    "start": "923880",
    "end": "933290"
  },
  {
    "text": "or extracted from\nboth Qf and Qb.",
    "start": "933290",
    "end": "942019"
  },
  {
    "text": "So that's actually\nthe easier question. Visit a harder question, which\nis how do we find the shortest",
    "start": "942020",
    "end": "958770"
  },
  {
    "text": "path after termination\nfrom s to t?",
    "start": "958770",
    "end": "967705"
  },
  {
    "text": "OK? And I should say specifically,\nthat-- and I forgot to put this up, which\nI should-- that we're",
    "start": "967705",
    "end": "974020"
  },
  {
    "text": "going to have to have\npi f and pi b, which this is the normal\ndata structure.",
    "start": "974020",
    "end": "981690"
  },
  {
    "text": "And the pi b is following\nthe edges backward.",
    "start": "981690",
    "end": "987960"
  },
  {
    "text": "So, in some sense,\nthe predecessor, in the case of pi b, what\nyou're saying is, on this node",
    "start": "987960",
    "end": "995990"
  },
  {
    "text": "here-- which I'll\ncall v2 for example--",
    "start": "995990",
    "end": "1004420"
  },
  {
    "text": "is, if I'm going to\nchoose this path here-- and I need to obviously choose\nthis edge here in any shortest",
    "start": "1004420",
    "end": "1011690"
  },
  {
    "text": "path that gets to t, right? Because that's the only\nedge that goes to t. And so, what I'm saying here\nis that a predecessor of pi b t",
    "start": "1011690",
    "end": "1025410"
  },
  {
    "text": "equals v2. OK? That make sense?",
    "start": "1025410",
    "end": "1030990"
  },
  {
    "text": "And then over here,\nif this was v1, then I would have\npi f v1 equals s.",
    "start": "1030990",
    "end": "1042240"
  },
  {
    "text": "Right? That make sense? Everybody buy that? All right, so how do I find\nthe shortest path from s to t,",
    "start": "1042240",
    "end": "1051980"
  },
  {
    "text": "after these frontiers have met,\nand I've terminated the search? How do I do that?",
    "start": "1051980",
    "end": "1058960"
  },
  {
    "text": "Someone?  Go ahead. AUDIENCE: Well, given that data\nstructure, you start at your t.",
    "start": "1058960",
    "end": "1067518"
  },
  {
    "text": "And you keep on going\nback to the [INAUDIBLE] until you get to the point\nwhere they've peaked.",
    "start": "1067518",
    "end": "1072876"
  },
  {
    "text": "Then you use the pi f\nto go from that node, all the way back to s. ",
    "start": "1072876",
    "end": "1080059"
  },
  {
    "text": "PROFESSOR: So, what\nI'm going to have to do is-- but where do I\nswitch, is the question.",
    "start": "1080059",
    "end": "1087470"
  },
  {
    "text": "Where do I switch\nfrom pi f to pi b? There has to be some point where\nI switch from-- Yeah, go ahead.",
    "start": "1087470",
    "end": "1096240"
  },
  {
    "text": "AUDIENCE: At the meeting\npoint of the node that was [INAUDIBLE]\nQ [INAUDIBLE].",
    "start": "1096240",
    "end": "1103440"
  },
  {
    "text": "PROFESSOR: All right. Is that what you\nwere saying, too? OK. So the claim is, if w was\nprocessed first, extracted",
    "start": "1103440",
    "end": "1123720"
  },
  {
    "text": "from both Qf and Qb, then find\nthe shortest path using pi",
    "start": "1123720",
    "end": "1136059"
  },
  {
    "text": "f from s to w.",
    "start": "1136060",
    "end": "1142181"
  },
  {
    "text": "Right? So, you can use pi f\nto get from s to w. And the way you do that\nis by applying pi f to w.",
    "start": "1142181",
    "end": "1148440"
  },
  {
    "text": "And then keep applying it\nuntil you get to s, OK? This is normal search, right?",
    "start": "1148440",
    "end": "1153890"
  },
  {
    "text": "Everybody knows this. You coded it. So I hope you know it. ",
    "start": "1153890",
    "end": "1160690"
  },
  {
    "text": "And then, we go find shortest\npath using pi b, right?",
    "start": "1160690",
    "end": "1168299"
  },
  {
    "text": "And you're going\nto constantly apply pi b-- and this is the\nbackward path-- from t to w.",
    "start": "1168300",
    "end": "1178520"
  },
  {
    "text": " And this follows the\nedges backward, all right?",
    "start": "1178520",
    "end": "1188450"
  },
  {
    "text": "This sounds pretty good? Everybody agree with this? ",
    "start": "1188450",
    "end": "1194600"
  },
  {
    "text": "Anybody disagree? Yeah. AUDIENCE: Pi b. If [INAUDIBLE], pi b would\nbe like pi b b2 equals t,",
    "start": "1194600",
    "end": "1207594"
  },
  {
    "text": "because b2 [INAUDIBLE]-- PROFESSOR: That's\na good question. I might have done this wrong.",
    "start": "1207594",
    "end": "1213070"
  },
  {
    "text": "So, in the backward search,\nthis can get pretty confusing.",
    "start": "1213070",
    "end": "1221230"
  },
  {
    "text": "So what do I have here? I want to follow\nthe predecessor.",
    "start": "1221230",
    "end": "1226630"
  },
  {
    "text": "You're exactly right. You're exactly right. Thank you. Thank you for pointing that out. All right, so what\nI have here is",
    "start": "1226630",
    "end": "1235220"
  },
  {
    "text": "when I look at this path that\ngoes this way, all right? I'm going to look at the\npath that goes this way.",
    "start": "1235220",
    "end": "1242130"
  },
  {
    "text": "s is the predecessor of v1. v1 is a predecessor\nof, let's call this v3.",
    "start": "1242130",
    "end": "1247250"
  },
  {
    "text": "v3 is a predecessor of v4. I'm just talking about\nthe regular forward path. We have s to v1.",
    "start": "1247250",
    "end": "1253299"
  },
  {
    "text": "v1 to v3. v3 to v4. All the way to t, right?",
    "start": "1253300",
    "end": "1259370"
  },
  {
    "text": "So what I have here is correct. The predecessor of v1 is s. The predecessor\nof v3 would be v1.",
    "start": "1259370",
    "end": "1265600"
  },
  {
    "text": "So I could write,\npi f v3 equals v1.",
    "start": "1265600",
    "end": "1271049"
  },
  {
    "text": "Et cetera. Now, let's just forget about\nthe forward path, and let's just talk about\nthe backward path.",
    "start": "1271050",
    "end": "1276250"
  },
  {
    "text": "In the backwoods\npath, I want to be able to construct\nthis backward path.",
    "start": "1276250",
    "end": "1282840"
  },
  {
    "text": "It's got to be the reverse\nof what I have, OK? And, in that case,\nwhat I'm saying",
    "start": "1282840",
    "end": "1289669"
  },
  {
    "text": "is that I want to move\nin this direction. So pretend that I've\nmade the edges flip, OK?",
    "start": "1289670",
    "end": "1299830"
  },
  {
    "text": "So, in that case, if I pretend\nthat this edge is like that,",
    "start": "1299830",
    "end": "1305390"
  },
  {
    "text": "and then I just apply\nthe regular predecessor relationship, then t is\nthe predecessor of v2.",
    "start": "1305390",
    "end": "1312220"
  },
  {
    "text": "And that's the\npoint you're making. OK? t is the predecessor of v2. And so, my apologies.",
    "start": "1312220",
    "end": "1318539"
  },
  {
    "text": " I have pi b v2 equals t.",
    "start": "1318540",
    "end": "1328120"
  },
  {
    "text": "And, if I follow this\nedge here, then I'd have the appropriate\nrelationship. But let's just stick to\nthis one because that's",
    "start": "1328120",
    "end": "1335510"
  },
  {
    "text": "the simple example. I don't quite know\nwhether this edge is going to be part of\nmy shortest path or not.",
    "start": "1335510",
    "end": "1341300"
  },
  {
    "text": "It might be. And that's something\nthat we'll compute. But what I have here is the\npredecessor relationship",
    "start": "1341300",
    "end": "1349150"
  },
  {
    "text": "corresponding to\nthe backward edge. And so, that's like\nflipping this edge. And, hopefully, that\nmakes sense now.",
    "start": "1349150",
    "end": "1357910"
  },
  {
    "text": "Thanks for pointing that out. And so, let's talk\nabout what happens here.",
    "start": "1357910",
    "end": "1362929"
  },
  {
    "text": "We know what happens\nin the forward search. You've done that before. In the backward\nsearch, what happens",
    "start": "1362930",
    "end": "1368770"
  },
  {
    "text": "is that I need to start--\naccording to this condition--",
    "start": "1368770",
    "end": "1374790"
  },
  {
    "text": "just like in the forward\nsearch, I found a w. And I continually\napplied pi of f to w.",
    "start": "1374790",
    "end": "1383410"
  },
  {
    "text": "So, this is apply pi of f to w. And then do pi of f pi of f w.",
    "start": "1383410",
    "end": "1392919"
  },
  {
    "text": "And so on and so forth. And that's what you do in order\nto construct the shortest path. People buy that?",
    "start": "1392920",
    "end": "1398820"
  },
  {
    "text": "Right? And what I want to do\nhere is apply pi b to w.",
    "start": "1398820",
    "end": "1409519"
  },
  {
    "text": "And then, pi b of pi b to w.",
    "start": "1409520",
    "end": "1415740"
  },
  {
    "text": "And so on and so\nforth, till I get to t. Right? And this one, till I get to s.",
    "start": "1415740",
    "end": "1420820"
  },
  {
    "text": "Right? So, what I wrote\nhere, s to w, t to w. There's nothing\nincorrect about that.",
    "start": "1420820",
    "end": "1429000"
  },
  {
    "text": "What's important to understand\nis the application of the pi f and the pi b.",
    "start": "1429000",
    "end": "1435210"
  },
  {
    "text": "Both, according to\nthis, start with w, which is this vertex that caused\nthe termination to happen.",
    "start": "1435210",
    "end": "1445350"
  },
  {
    "text": "All right? So, people buy this? Any other questions?",
    "start": "1445350",
    "end": "1451651"
  },
  {
    "text": "All right. Turns out this is\nnot quite correct. OK? This is not quite\ncorrect, right?",
    "start": "1451651",
    "end": "1458350"
  },
  {
    "text": "And not because of the pi b\ninversion that I had before,",
    "start": "1458350",
    "end": "1464360"
  },
  {
    "text": "right? So what have I said, so far? It makes perfect sense. It says, I have a vertex\nthat caused the termination.",
    "start": "1464360",
    "end": "1472490"
  },
  {
    "text": "I'm going to call it w. OK? And that vertex is on the\nintersection of these two",
    "start": "1472490",
    "end": "1479620"
  },
  {
    "text": "frontiers, OK? And I'm going to use that\nto construct the shortest",
    "start": "1479620",
    "end": "1484630"
  },
  {
    "text": "path by constructing\ntwo sub paths, using the forward pointers\nand the backward pointers.",
    "start": "1484630",
    "end": "1491840"
  },
  {
    "text": "All right? So all of that\nmakes sense except, it turns out, that w may\nnot be on the shortest path.",
    "start": "1491840",
    "end": "1503800"
  },
  {
    "text": " OK? ",
    "start": "1503800",
    "end": "1509700"
  },
  {
    "text": "And I'll show you\nan example where w is not on the shortest path. All right? So that's at a real\nsubtle condition.",
    "start": "1509700",
    "end": "1517650"
  },
  {
    "text": "So we have to actually augment\nthe termination condition. Or, we have to do something more\nthan the termination condition.",
    "start": "1517650",
    "end": "1525460"
  },
  {
    "text": "So, I will tell you right\naway, the termination condition is correct. OK?",
    "start": "1525460",
    "end": "1530679"
  },
  {
    "text": "And so, the guy who got the\ncushion, deserved the cushion. OK?",
    "start": "1530680",
    "end": "1535870"
  },
  {
    "text": "So the termination\ncondition as correct. You are going to run Dijkstra\n's ultimate forward search",
    "start": "1535870",
    "end": "1541779"
  },
  {
    "text": "and backward search. And you're going to terminate\nwhen a particular vertex, call it w, is going to get pulled\nout from both Qf and Qb.",
    "start": "1541780",
    "end": "1551509"
  },
  {
    "text": "All right? What is incorrect\nhere is the use of w",
    "start": "1551510",
    "end": "1557670"
  },
  {
    "text": "to construct the shortest path. All right? It turns out, we have\nto do a little more work",
    "start": "1557670",
    "end": "1563070"
  },
  {
    "text": "to go find the shortest\npath, after we've terminated. And w may not be on\nthe shortest path.",
    "start": "1563070",
    "end": "1569660"
  },
  {
    "text": "All right? Any ideas as to\nwhat we might do?",
    "start": "1569660",
    "end": "1575170"
  },
  {
    "text": "This is a bit of\nan unfair question, but certainly worth a cushion. How do you think\nwe can fix this?",
    "start": "1575170",
    "end": "1581520"
  },
  {
    "text": " If w is not on\nthe shortest path, what do you think would\nbe on the shortest path?",
    "start": "1581520",
    "end": "1588880"
  },
  {
    "text": "Is there a way of\nfinding this vertex, so we can break this up? We absolutely have to\nuse both pi f and pi b.",
    "start": "1588880",
    "end": "1595640"
  },
  {
    "text": "There's no getting\naway from that because these two frontiers\nhave just barely collided.",
    "start": "1595640",
    "end": "1600860"
  },
  {
    "text": "The instant they barely\ncollided, we've stopped. OK? So we can't use pi f\nall the way from s to t.",
    "start": "1600860",
    "end": "1607230"
  },
  {
    "text": "We can't use pi b all\nthe way from t to s. These frontiers have\njust barely collided. OK?",
    "start": "1607230",
    "end": "1612930"
  },
  {
    "text": "So what happens if w is\nnot on the shortest path? And why is that the case? Yeah.",
    "start": "1612930",
    "end": "1618326"
  },
  {
    "text": "AUDIENCE: I just had a question. Are all the edge\nweights identical? Or are they-- PROFESSOR: So, the edge\nweights don't change.",
    "start": "1618326",
    "end": "1623604"
  },
  {
    "text": " There are no new edges.",
    "start": "1623604",
    "end": "1628834"
  },
  {
    "text": "The way you want\nto think about is that, you can traverse\nthe edges backward.",
    "start": "1628834",
    "end": "1633850"
  },
  {
    "text": "And so, it's not like\nthere are two edges here.",
    "start": "1633850",
    "end": "1639020"
  },
  {
    "text": "Now, you could fake\nit, and have two edges with exactly the same\nweights over here. But are you saying there are\nedge weights in the graph,",
    "start": "1639020",
    "end": "1645490"
  },
  {
    "text": "all identical across the edges? Or are you asking about\nthe forward search versus the backward search? AUDIENCE: That's\nwhat I was asking.",
    "start": "1645490",
    "end": "1651505"
  },
  {
    "text": "Is each edge weight\nthe same in the graph. PROFESSOR: No. They're using Dijkstra. The edge ways can be arbitrary.",
    "start": "1651505",
    "end": "1657250"
  },
  {
    "text": "But they're non-negative. OK? So that's the usual\nDijkstra requirement.",
    "start": "1657250",
    "end": "1664050"
  },
  {
    "text": "They could be real numbers. They could be\nirrational numbers. They could be whatever. But they're all non-negative.",
    "start": "1664050",
    "end": "1671190"
  },
  {
    "text": "All right? Now, in the backward search\nand the forward search-- just to make that clear-- while I've\ndrawn this particular edge,",
    "start": "1671190",
    "end": "1679270"
  },
  {
    "text": "that weight hasn't changed, OK? That weight had\nbetter be the same. OK?",
    "start": "1679270",
    "end": "1685140"
  },
  {
    "text": "All right, so I'll\nshow you an example. And we'll take an example, a\nfairly straightforward example,",
    "start": "1685140",
    "end": "1692820"
  },
  {
    "text": "it turns out. It took a while to\nconcoct this five node example that shows\nthe idea here.",
    "start": "1692820",
    "end": "1702450"
  },
  {
    "text": "But what we're going to do is,\ntake a look at the termination",
    "start": "1702450",
    "end": "1707480"
  },
  {
    "text": "condition in a\nspecific case, where we're going to do this\nalternation of forward and backward search.",
    "start": "1707480",
    "end": "1713570"
  },
  {
    "text": "And we'll see,\nwhen it terminates, as to what the correct way is\nto construct the shortest path.",
    "start": "1713570",
    "end": "1719720"
  },
  {
    "text": "All right? And, as I said before,\nthe termination condition is correct. It's not like we stop too early.",
    "start": "1719720",
    "end": "1725480"
  },
  {
    "text": "When one of those nodes\ngets off from Qf and Qb,",
    "start": "1725480",
    "end": "1730760"
  },
  {
    "text": "you get to stop. So that's my s, over here.",
    "start": "1730760",
    "end": "1735889"
  },
  {
    "text": "And I have a fairly\nstraightforward graph. I have 5, 5, 3, 3, 3.",
    "start": "1735890",
    "end": "1746682"
  },
  {
    "text": "So we don't need\na computer program to tell us that the\nshortest path from s to t is the path with three\nedges that goes on top, OK,",
    "start": "1746682",
    "end": "1755180"
  },
  {
    "text": "which has a weight of 9. All right. So this is a forward search.",
    "start": "1755180",
    "end": "1763120"
  },
  {
    "text": "And I'm going to call all\nof these vertices names. So I have u prime.",
    "start": "1763120",
    "end": "1769600"
  },
  {
    "text": "t. et cetera. OK? So, in the first step\nof the forward search,",
    "start": "1769600",
    "end": "1775789"
  },
  {
    "text": "I'm going to be able\nto set-- oh, I'm sorry. This one is a w.",
    "start": "1775790",
    "end": "1780930"
  },
  {
    "text": "I'm going to be able\nto set df w equals 5.",
    "start": "1780930",
    "end": "1787060"
  },
  {
    "text": "And df u equals 3. And, obviously,\ndf of s equals 0.",
    "start": "1787060",
    "end": "1795625"
  },
  {
    "text": "And I'm not going to bother\nwriting the infinities. It's just going to clutter\nup the board, all right? So, stop me if you have\nquestions on anything",
    "start": "1795625",
    "end": "1803330"
  },
  {
    "text": "I'm writing here. So that's a forward search.",
    "start": "1803330",
    "end": "1808730"
  },
  {
    "text": "Now, let's do the first step\nof backward search, right? Alternate, remember?",
    "start": "1808730",
    "end": "1814440"
  },
  {
    "text": "Alternate forward\nsearch, backward search, forward search, backward search. And I'm just going to\nwrite this out again, so bear with me,\nbecause I think it'd",
    "start": "1814440",
    "end": "1820711"
  },
  {
    "text": "be clearer if you see\nthis graph many times.",
    "start": "1820711",
    "end": "1826380"
  },
  {
    "text": "As opposed to my erasing\nwhat I've written. So I've got an s, here.",
    "start": "1826380",
    "end": "1832296"
  },
  {
    "text": "t there. u. u prime. w. And I'm going to hash\nthis vertex vertically",
    "start": "1832296",
    "end": "1839790"
  },
  {
    "text": "because that's my\nbackward search. And db of t equals 0.",
    "start": "1839790",
    "end": "1846690"
  },
  {
    "text": "OK? And I'm going to follow this\nbackward, and this backward. And my weights are the same.",
    "start": "1846690",
    "end": "1853809"
  },
  {
    "text": "It's the same graph. So I'm going to have d\nof b u prime equals 3.",
    "start": "1853810",
    "end": "1863544"
  },
  {
    "text": "And db of w equals 5. And I haven't seen u yet.",
    "start": "1863544",
    "end": "1871050"
  },
  {
    "text": "I haven't seen s yet. And so, all I've done\nis mark these two. All right?",
    "start": "1871050",
    "end": "1877060"
  },
  {
    "text": "So far, so good? Again, stop me if\nyou have questions. We've got, obviously, a\ncouple more steps to go here.",
    "start": "1877060",
    "end": "1886870"
  },
  {
    "text": "And let's keep going.",
    "start": "1886870",
    "end": "1895280"
  },
  {
    "text": "So now we do a\nforward search again. ",
    "start": "1895280",
    "end": "1909679"
  },
  {
    "text": "Yeah, that's fine. That's this hash that\nway, just to make sure. This is s, u, u prime, w, t.",
    "start": "1909680",
    "end": "1917019"
  },
  {
    "start": "1917020",
    "end": "1923020"
  },
  {
    "text": "And what I have\nnow is, I'm going process this vertex\nin the forward search because I have a choice\nin the forward search",
    "start": "1923020",
    "end": "1929785"
  },
  {
    "text": "to either pick w or w. This clearly has lower\npriority because df w equals 5.",
    "start": "1929785",
    "end": "1937380"
  },
  {
    "text": "And df of u equals 3. So extract-min is\nobviously going to pick u.",
    "start": "1937380",
    "end": "1943600"
  },
  {
    "text": "And it's going to process this\nedge now, after extract-min. And I'm going have df\nof u prime equals 6.",
    "start": "1943600",
    "end": "1953090"
  },
  {
    "text": "OK? AUDIENCE: It's 3 over there. PROFESSOR: Oh,\nit's 3 over there. Thanks. Good.",
    "start": "1953090",
    "end": "1958660"
  },
  {
    "text": "So, so far, so good? Yeah? All right. So now, I go to the\nbackward search.",
    "start": "1958660",
    "end": "1964755"
  },
  {
    "start": "1964755",
    "end": "1975170"
  },
  {
    "text": "And again, I have\ns, t, u, u prime, w.",
    "start": "1975170",
    "end": "1981550"
  },
  {
    "text": "I'm going to go\nahead and hash this. This has been\nhashed horizontally. The hash horizontally means\nthat it's been removed from Qf.",
    "start": "1981550",
    "end": "1989779"
  },
  {
    "text": "The hash vertically means that\nit's been removed from Qb. And so, when I look at this,\nand I do a backward search,",
    "start": "1989780",
    "end": "1997370"
  },
  {
    "text": "I'm going to hash this. And I'm going to set\ndb of u prime equals 3.",
    "start": "1997370",
    "end": "2005360"
  },
  {
    "text": "And I have db of w equals 5.",
    "start": "2005360",
    "end": "2010715"
  },
  {
    "start": "2010715",
    "end": "2016370"
  },
  {
    "text": "So, that I already had. And so, when I have db of w\nequals 5 and db of u prime",
    "start": "2016370",
    "end": "2023340"
  },
  {
    "text": "equals 3, then,\nobviously, I'm going to pick the one with\nthe min priority.",
    "start": "2023340",
    "end": "2033049"
  },
  {
    "text": "This corresponds to this one. And what it's going\nto do is, it's",
    "start": "2033050",
    "end": "2038510"
  },
  {
    "text": "going to go process that\nand set db of u equals 6. All right?",
    "start": "2038510",
    "end": "2044460"
  },
  {
    "text": "So what happened here simply was\nthat I picked this vertex off of Qb because that\nwas the min priority.",
    "start": "2044460",
    "end": "2052309"
  },
  {
    "text": "And all I did was relax\nthis particular edge in the backward direction. And said db u equals 6.",
    "start": "2052310",
    "end": "2059398"
  },
  {
    "text": "All right? Almost there. Any questions so far? Any bugs you noticed so\nfar, in what I've written?",
    "start": "2059399",
    "end": "2065888"
  },
  {
    "text": "Yeah, back there, question. AUDIENCE: [INAUDIBLE]. PROFESSOR: OK.",
    "start": "2065889",
    "end": "2071000"
  },
  {
    "text": "Good. So people agree with this. All right, one more. One more board to draw.",
    "start": "2071000",
    "end": "2076710"
  },
  {
    "text": "And we'll be done. We will have terminated. ",
    "start": "2076710",
    "end": "2087408"
  },
  {
    "text": "All right, so\ngetting pretty close. ",
    "start": "2087409",
    "end": "2106490"
  },
  {
    "text": "So I'm set up this way. Oh, shoot. Sorry. ",
    "start": "2106490",
    "end": "2113319"
  },
  {
    "text": "This is horizontal. ",
    "start": "2113319",
    "end": "2121290"
  },
  {
    "text": "So, now I'm looking at it, and\nI've taken care of these two.",
    "start": "2121290",
    "end": "2127840"
  },
  {
    "text": "And I'm talking about\nthe forward search here. So this is, again, the forward. And that's the backward.",
    "start": "2127840",
    "end": "2134740"
  },
  {
    "text": "And now I'm doing\na forward again. And my only choice, now, is to\npick the w vertex off of Qf.",
    "start": "2134740",
    "end": "2143611"
  },
  {
    "text": "Right? Because df w equals 5. And this one has\nalready been processed.",
    "start": "2143611",
    "end": "2150450"
  },
  {
    "text": "df of u equals 3. But I've hashed that. And so I've gone ahead\nand processed that vertex.",
    "start": "2150450",
    "end": "2158100"
  },
  {
    "text": "And this one, df of\nu prime equals 6.",
    "start": "2158100",
    "end": "2163940"
  },
  {
    "text": "So, in Qf, I would be\ncomparing u prime and w.",
    "start": "2163940",
    "end": "2169550"
  },
  {
    "text": "And I would take w, OK? People buy that? That's because, I guess you by\nthe fact that 5 is less than 6.",
    "start": "2169550",
    "end": "2177720"
  },
  {
    "text": "I hope. So that's what happens in\nthe step of forward search.",
    "start": "2177720",
    "end": "2184240"
  },
  {
    "text": "And then you go ahead\nand process this. You're going to set\ndf of t to be 10.",
    "start": "2184240",
    "end": "2196030"
  },
  {
    "text": "OK? And now you're\nstarting to see why there may be a bit of a\nproblem with our shortest path",
    "start": "2196030",
    "end": "2201820"
  },
  {
    "text": "computation, right? Maybe. All right? Everything good? All right. So what have I done here?",
    "start": "2201820",
    "end": "2209020"
  },
  {
    "text": "I've removed w from Qf.",
    "start": "2209020",
    "end": "2214700"
  },
  {
    "text": "OK. I've removed w from Qf. All right. Now, let's look at the last step\nhere, of the backward search.",
    "start": "2214700",
    "end": "2221050"
  },
  {
    "start": "2221050",
    "end": "2229890"
  },
  {
    "text": "s, t.  And so, this was hashed.",
    "start": "2229890",
    "end": "2236174"
  },
  {
    "text": "That was hashed. ",
    "start": "2236174",
    "end": "2242580"
  },
  {
    "text": "And, if I look at\nwhat I have here, I have db u prime equals 3.",
    "start": "2242580",
    "end": "2251790"
  },
  {
    "text": "df u prime equals 6. This was df w equals 5.",
    "start": "2251790",
    "end": "2261130"
  },
  {
    "text": "db w equals 5. And so on and so forth.",
    "start": "2261130",
    "end": "2266630"
  },
  {
    "text": "Again, you compare w. And you see that db w equals 5. And df u prime equals 6.",
    "start": "2266630",
    "end": "2273880"
  },
  {
    "text": "So therefore, you will pick w. OK?",
    "start": "2273880",
    "end": "2278930"
  },
  {
    "text": "You will pick w, and\nremove it from Qf. So remove w from Qf.",
    "start": "2278930",
    "end": "2287619"
  },
  {
    "text": "All right? And process it. And what you end up with\nis df of s equals 10.",
    "start": "2287620",
    "end": "2297080"
  },
  {
    "text": "OK? That's what you get\nbecause this is a 5. And that's a 5. ",
    "start": "2297080",
    "end": "2304520"
  },
  {
    "text": "OK? People see the problem here? What's the problem?",
    "start": "2304520",
    "end": "2310110"
  },
  {
    "text": "Someone articulate the problem. AUDIENCE: [INAUDIBLE]. PROFESSOR: Yeah. I mean, so, what I have so\nfar is, I've terminated.",
    "start": "2310110",
    "end": "2317890"
  },
  {
    "text": "But it looks like I\nend up with d of s. If I look at it\nfrom a standpoint",
    "start": "2317890",
    "end": "2323690"
  },
  {
    "text": "of the forward weight,\nI got a 10 for t.",
    "start": "2323690",
    "end": "2329550"
  },
  {
    "text": "I get db t equals 10. If I look from a standpoint\nof the backward weight,",
    "start": "2329550",
    "end": "2334890"
  },
  {
    "text": "I get db s equals 10. OK? And we all know that the\nshortest path should be 9.",
    "start": "2334890",
    "end": "2341080"
  },
  {
    "text": "OK. So what happened here? Well, we terminated\naccording to this condition. We terminated when w was\npulled off from Qf and Qb",
    "start": "2341080",
    "end": "2350730"
  },
  {
    "text": "because that was the\nshort path, in some sense, in terms of number\nof edges, right? It was only of length 2.",
    "start": "2350730",
    "end": "2358290"
  },
  {
    "text": "And so, then the\nfrontiers collide. This is a subtlety\nin the algorithm. The frontiers collide\nat some vertex,",
    "start": "2358290",
    "end": "2365540"
  },
  {
    "text": "regardless of the\nweights of the edges. Because we are alternating\nthe forward search",
    "start": "2365540",
    "end": "2370630"
  },
  {
    "text": "and the backward\nsearch, in effect, the frontiers are going to\ncollide on the shortest length",
    "start": "2370630",
    "end": "2376690"
  },
  {
    "text": "path. Right? That makes sense, right? So this example is set up so\nthe shortest length path is not",
    "start": "2376690",
    "end": "2385970"
  },
  {
    "text": "the shortest weight path. OK? So we can't take the w\nand use pi f to construct",
    "start": "2385970",
    "end": "2399310"
  },
  {
    "text": "part of the path, and\nuse pi b to construct the other part of the path. And find the\nshortest weight path.",
    "start": "2399310",
    "end": "2405780"
  },
  {
    "text": "We would get\nsomething incorrect. Right? We would get a path of\nlength 10, in this case, if we did that.",
    "start": "2405780",
    "end": "2411370"
  },
  {
    "text": "So how do we fix it? How do we fix it?",
    "start": "2411370",
    "end": "2416460"
  },
  {
    "text": "One little termination\ncondition doesn't change. How do we fix it? Someone?",
    "start": "2416460",
    "end": "2422559"
  },
  {
    "text": "Back there. Or, actually, you. AUDIENCE: Ordinate\nbased on the weight. PROFESSOR: Ordinate\nbased on the weight.",
    "start": "2422560",
    "end": "2428260"
  },
  {
    "text": "So exactly how would we do that? AUDIENCE: At each\npoint you take the one that has the [INAUDIBLE].",
    "start": "2428260",
    "end": "2434537"
  },
  {
    "text": "PROFESSOR: But that's what\nwe're doing now, right?  So, are you changing\nthe alternation",
    "start": "2434537",
    "end": "2441015"
  },
  {
    "text": "between the forward search\nand the backward search? AUDIENCE: Yeah. PROFESSOR: You're\nsaying that you're going to do more forward\nsearches, as opposed",
    "start": "2441015",
    "end": "2447850"
  },
  {
    "text": "to backward searches? AUDIENCE: If the\noverall cost is lower. PROFESSOR: Overall\ncost is lower. You know, if you code it\nup, you get to keep this.",
    "start": "2447850",
    "end": "2458010"
  },
  {
    "text": "If I want a slightly\ndifferent, simpler fix because I think what\nyou're saying here--",
    "start": "2458010",
    "end": "2464190"
  },
  {
    "text": "and I like the idea. I actually do like the idea. You're saying you're going\nto not do strict alternation.",
    "start": "2464190",
    "end": "2471146"
  },
  {
    "text": "But you're going to do some\nsort of weighted alternation, from what I can tell,\nbased on the weights. OK?",
    "start": "2471146",
    "end": "2476660"
  },
  {
    "text": "And I think there's an\nalgorithm there that's correct. OK? I probably won't\nbe able to prove",
    "start": "2476660",
    "end": "2484359"
  },
  {
    "text": "that it's correct to\nmyself in five minutes. OK. Or 10 minutes.",
    "start": "2484360",
    "end": "2490079"
  },
  {
    "text": "But let's talk\nabout that offline. And see if there's a way. I'm a little\nworried that, if you",
    "start": "2490080",
    "end": "2496260"
  },
  {
    "text": "have positive rational\nnumbers, and you've got root 2, square\nroot of 2, and pi.",
    "start": "2496260",
    "end": "2504110"
  },
  {
    "text": "And the transcendental number\ncorresponding to these weights, that this weighted\nalternation is going to be a bit hard\nto implement correctly.",
    "start": "2504110",
    "end": "2512630"
  },
  {
    "text": "But it's a neat idea. I would actually like\na follow up on that. Something that's a\nlittle-- yeah, back there.",
    "start": "2512630",
    "end": "2519918"
  },
  {
    "text": "AUDIENCE: Can you look at the\nneighbors of all the nodes that are in your forward\n[INAUDIBLE], and see if any of their neighbors\nare in backwards [INAUDIBLE].",
    "start": "2519918",
    "end": "2527004"
  },
  {
    "text": "And see if that's going to give\nyou a shorter path than the one that you pulled out previously.",
    "start": "2527004",
    "end": "2532597"
  },
  {
    "text": "PROFESSOR: That's correct. That's almost exactly correct. I won't bother throwing it\nover, but this is yours.",
    "start": "2532597",
    "end": "2539809"
  },
  {
    "text": "You want to catch it? AUDIENCE: I already have one. PROFESSOR: You already\nhave a cushion. All right. So how about I just throw it. And anybody who wants\nto catch it gets it.",
    "start": "2539810",
    "end": "2546480"
  },
  {
    "text": "How's that? Whoa. All right. I didn't hit anybody. Anybody who wants it, who\ndoesn't have a cushion.",
    "start": "2546480",
    "end": "2552859"
  },
  {
    "text": "Right. We've got all these cushions in\nmy office, and Eric's office. We've got to do\nsomething about them.",
    "start": "2552860",
    "end": "2559627"
  },
  {
    "text": "They're actually not that great.  You know, it's bit of\nan issue, I understand.",
    "start": "2559627",
    "end": "2566535"
  },
  {
    "text": "You know, we've got to\ndo Frisbees next time, or something. I can see why you're not\nenthusiastic about this.",
    "start": "2566535",
    "end": "2573540"
  },
  {
    "text": "Right? OK. All right, so the answer\nwas, in fact, correct.",
    "start": "2573541",
    "end": "2579100"
  },
  {
    "text": "And let me write\nit up over here.",
    "start": "2579100",
    "end": "2584270"
  },
  {
    "text": "So we had to do a\nlittle more work. We terminate properly. We do the strict alternation.",
    "start": "2584270",
    "end": "2589990"
  },
  {
    "text": "But we have to do a\nlittle bit more work. OK. And the work we have to do\nis summarized very neatly",
    "start": "2589990",
    "end": "2599950"
  },
  {
    "text": "by saying, we want to\nfind an x, which is maybe",
    "start": "2599950",
    "end": "2610030"
  },
  {
    "text": "different from w,\npossibly, that has",
    "start": "2610030",
    "end": "2620610"
  },
  {
    "text": "minimum value of\nd of x plus db x.",
    "start": "2620610",
    "end": "2633895"
  },
  {
    "text": "All right? So we have to actually look. And this x is going\nto be neighboring. But we don't really\nneed to specify that.",
    "start": "2633895",
    "end": "2640880"
  },
  {
    "text": "What we say is, you're going\nto have to look at Qf and Qb. And it's possible\nthat w is the one that",
    "start": "2640880",
    "end": "2648580"
  },
  {
    "text": "has minimum df w plus db w. But, clearly, that wasn't\nthe case in this example.",
    "start": "2648580",
    "end": "2654820"
  },
  {
    "text": "So, in this example, w\ncaused the termination. But now we need to scan. And there's only\ntwo other vertices",
    "start": "2654820",
    "end": "2660258"
  },
  {
    "text": "that are interesting here,\nwhich are u and u prime. And either of those\nwill fit the bill because we see that df of u\nplus db of u equals 3 plus 6",
    "start": "2660258",
    "end": "2671270"
  },
  {
    "text": "equals 9. And df of u prime plus db of\nu prime equals-- I'm sorry,",
    "start": "2671270",
    "end": "2681070"
  },
  {
    "text": "I should have out db here. db of u prime would\nbe 6 plus 3 equals 9.",
    "start": "2681070",
    "end": "2688369"
  },
  {
    "text": "Right? So both of these\nare less than 10. And so we had to pick\none of these as our x.",
    "start": "2688370",
    "end": "2694450"
  },
  {
    "text": "OK. And if you pick one of these\nas our x, then, at that point,",
    "start": "2694450",
    "end": "2701052"
  },
  {
    "text": "we don't do w here. We do x. OK? ",
    "start": "2701052",
    "end": "2709330"
  },
  {
    "text": "Let me write it as x. It looks like a cross here. ",
    "start": "2709330",
    "end": "2715570"
  },
  {
    "text": "So that's what happens. So this small little tweak. Do the alternation. Do the termination.",
    "start": "2715570",
    "end": "2720700"
  },
  {
    "text": "Once you do the\ntermination, go look and see if you can\nminimize the shortest path length by finding\nan appropriate x.",
    "start": "2720700",
    "end": "2727680"
  },
  {
    "text": "Which has the minimum sum of\nthe forward and the backward priorities. And then, you're in business.",
    "start": "2727680",
    "end": "2734000"
  },
  {
    "text": "And then, everything works. OK? All right. Great. So, so much for\nbi-directional search.",
    "start": "2734000",
    "end": "2742950"
  },
  {
    "text": "Let me talk a little\nbit about heuristics that people use to modify the\ngraph so things run faster",
    "start": "2742950",
    "end": "2753160"
  },
  {
    "text": "in practice. So, in particular, you can think\nabout the goal directed search,",
    "start": "2753160",
    "end": "2761500"
  },
  {
    "text": "or a star, if\nyou're taking 6034. And there's some\ncommonality between what",
    "start": "2761500",
    "end": "2768970"
  },
  {
    "text": "I'm going to talk about\nhere, and that material. The basic idea is\nthat we're going",
    "start": "2768970",
    "end": "2777190"
  },
  {
    "text": "to modify the edge\nweights in such a way",
    "start": "2777190",
    "end": "2789910"
  },
  {
    "text": "that you go downhill\ntoward the shortest path.",
    "start": "2789910",
    "end": "2796660"
  },
  {
    "text": "And so, the priorities are\nmodified heuristically. So things run a\nlittle bit quicker.",
    "start": "2796660",
    "end": "2803806"
  },
  {
    "text": "You're trying to\nprune the search here. ",
    "start": "2803806",
    "end": "2810020"
  },
  {
    "text": "So we're going to\nmodify edge weights. And we have to be careful\nwhen we do this, obviously. We don't want to do\nthings that are incorrect.",
    "start": "2810020",
    "end": "2817809"
  },
  {
    "text": "But the way we want to\nmodify the edge weights",
    "start": "2817810",
    "end": "2823960"
  },
  {
    "text": "is by having some sort\nof potential function that corresponds to lambda.",
    "start": "2823960",
    "end": "2830800"
  },
  {
    "text": "And, if the edge\nis between u and v, then we have an equation\ngiven a lambda that says,",
    "start": "2830800",
    "end": "2837180"
  },
  {
    "text": "the new w, w bar, is w u, v\nminus lambda u plus lambda",
    "start": "2837180",
    "end": "2842760"
  },
  {
    "text": "v. OK? Now, we have to be a little\ncareful here, with respect",
    "start": "2842760",
    "end": "2849319"
  },
  {
    "text": "to the choice of lambda. But the basic idea,\nin terms of lambda, is that, suppose you\nhave something like this,",
    "start": "2849320",
    "end": "2865720"
  },
  {
    "text": "where you have a\nsource vertex, s. And you're again trying\nto do a single source,",
    "start": "2865720",
    "end": "2871730"
  },
  {
    "text": "single target going to t. And let's say I have an\nedge of weight 5 going out",
    "start": "2871730",
    "end": "2876810"
  },
  {
    "text": "and an edge of a 5\ngoing out this way. Is there a way\nthat you can guess",
    "start": "2876810",
    "end": "2883790"
  },
  {
    "text": "that this is the\nedge that is more likely to be on\nyour shortest path? As opposed to this other edge?",
    "start": "2883790",
    "end": "2889940"
  },
  {
    "start": "2889940",
    "end": "2897430"
  },
  {
    "text": "Essentially increase\nthe potential of this node, all right?",
    "start": "2897430",
    "end": "2903690"
  },
  {
    "text": "So this node here\nmay be the node t2. And this node may\nbe the node t1.",
    "start": "2903690",
    "end": "2910660"
  },
  {
    "text": "You want to increase the\npotential of node t2, such that, you're\nactually trying",
    "start": "2910660",
    "end": "2915829"
  },
  {
    "text": "to go uphill when\nyou go this way. And this goes downhill. And that has the\nappropriate modifications",
    "start": "2915830",
    "end": "2922390"
  },
  {
    "text": "on the edge weights, such\nthat the Dijkstra algorithm is steered towards going downhill.",
    "start": "2922390",
    "end": "2928070"
  },
  {
    "text": "And going down this path. And it terminates a\nlittle bit quicker. Right? It doesn't change as\nasymptotic complexity.",
    "start": "2928070",
    "end": "2934270"
  },
  {
    "text": "It just makes things run, in\npractice, a little bit faster. If you choose the\nright potentials.",
    "start": "2934270",
    "end": "2940369"
  },
  {
    "text": "Right? Feels like magic. How do you know how to\nincrease the potential?",
    "start": "2940370",
    "end": "2946030"
  },
  {
    "text": "What would you increase\nthe potential for? What nodes do you\nwant to make uphill?",
    "start": "2946030",
    "end": "2951700"
  },
  {
    "text": "What nodes do you\nwant to make downhill? So there's a bunch of questions.",
    "start": "2951700",
    "end": "2956910"
  },
  {
    "text": "I'm not going to get\ninto a lot of details. But I will tell you\na couple of things. I'm going to give you, really\nquickly, a simple example",
    "start": "2956910",
    "end": "2966400"
  },
  {
    "text": "that is both correct, in terms\nof the actual shortest path you will get is the correct one.",
    "start": "2966400",
    "end": "2973750"
  },
  {
    "text": "And a particular\nmechanism off modifying the potentials that\nuses landmarks.",
    "start": "2973750",
    "end": "2979910"
  },
  {
    "text": "Right. So the way we are\ngoing to do this is by saying that\nany path wp is going",
    "start": "2979910",
    "end": "2988210"
  },
  {
    "text": "to get modified based on\nits destination and source.",
    "start": "2988210",
    "end": "3005720"
  },
  {
    "text": "So the only way that we can\nuse the potential method is by ensuring that\nall of the shortest",
    "start": "3005720",
    "end": "3012850"
  },
  {
    "text": "paths between any pair\nof vertices, we're only concerned about single\nsource, single target here.",
    "start": "3012850",
    "end": "3018990"
  },
  {
    "text": "But, in general,\nit's a good thing to not change any of\nthe shortest paths. So what used to\nbe a shortest path",
    "start": "3018990",
    "end": "3024420"
  },
  {
    "text": "should stay the shortest path. And the way you do\nthat is by having a potential function that,\nif you have an arbitrary",
    "start": "3024420",
    "end": "3030710"
  },
  {
    "text": "path, essentially-- and\nthis is a path from s to t. That you subtract\nout something based",
    "start": "3030710",
    "end": "3036880"
  },
  {
    "text": "on a function of the vertex. In this case, you have s. And, in this case, you have t.",
    "start": "3036880",
    "end": "3042200"
  },
  {
    "text": "So the nice thing is\nthat, any path from s to t is going to get shifted by\nthe same amount, corresponding",
    "start": "3042200",
    "end": "3048020"
  },
  {
    "text": "to this additional term here. So what that means is\nthat the final shortest",
    "start": "3048020",
    "end": "3053829"
  },
  {
    "text": "path that you discover will\nbe the correct shortest path. You just may, hopefully,\ndiscover it faster.",
    "start": "3053830",
    "end": "3060080"
  },
  {
    "text": "All right? So that's the correctness check. And I'll put this in the notes. And maybe the TAs can\ncover it in the section.",
    "start": "3060080",
    "end": "3068580"
  },
  {
    "text": "But one way of getting\nthis potential function is to use what's\ncalled a landmark.",
    "start": "3068580",
    "end": "3075560"
  },
  {
    "text": "And so the basic idea is\nthat you have a landmark, l,",
    "start": "3075560",
    "end": "3085040"
  },
  {
    "text": "which is a vertex\nbelonging to v. And we're going to pre-compute\ndelta of u comma l.",
    "start": "3085040",
    "end": "3097880"
  },
  {
    "text": "So, for any input\nvertex, you want to find the shortest\npath to this landmark.",
    "start": "3097880",
    "end": "3104320"
  },
  {
    "text": "So it's like, change the\nsource, but the destination stays the same. And the potential\nlambda t u is defined",
    "start": "3104320",
    "end": "3113900"
  },
  {
    "text": "as delta of u, l\nminus delta of t, l.",
    "start": "3113900",
    "end": "3120839"
  },
  {
    "text": "OK? So you have the source, s. You have a destination, t. And now you have a landmark, l.",
    "start": "3120840",
    "end": "3128180"
  },
  {
    "text": "I'm going to pre-compute delta\nu,l for all u belonging to v.",
    "start": "3128180",
    "end": "3136710"
  },
  {
    "text": "And I'm also going to\npre-compute, for a given t, delta t, l.",
    "start": "3136710",
    "end": "3142220"
  },
  {
    "text": "So that's just a single t. So that's just one computation. This one is much\nmore computation.",
    "start": "3142220",
    "end": "3148380"
  },
  {
    "text": "And, if I use this potential,\nyou can show that it's correct,",
    "start": "3148380",
    "end": "3155359"
  },
  {
    "text": "using the triangle inequality. And this is not a heuristic. With the correct\nchoice of landmark,",
    "start": "3155360",
    "end": "3162530"
  },
  {
    "text": "Dijkstra, empirically,\nwill run faster. So, if you know\nfor sure that you",
    "start": "3162530",
    "end": "3167660"
  },
  {
    "text": "need to go through middle\nAmerica to get from Cal Tech to Boston-- and there's\none particular landmark",
    "start": "3167660",
    "end": "3174030"
  },
  {
    "text": "you want to go through--\nTexas or something. And you pick Austin, Texas, then\nyou can do this computation.",
    "start": "3174030",
    "end": "3182840"
  },
  {
    "text": "And maybe Dijkstra runs\n2x faster, 20% faster. All right? I'll put the argument about\ncorrectness, and the specifics",
    "start": "3182840",
    "end": "3190590"
  },
  {
    "text": "of these things, in the notes. And you can take a\nlook at it offline.",
    "start": "3190590",
    "end": "3195950"
  }
]