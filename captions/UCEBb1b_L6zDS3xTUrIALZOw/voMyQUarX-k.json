[
  {
    "start": "0",
    "end": "150000"
  },
  {
    "text": "PROFESSOR: All right. So Lecture 7 was\nabout many things--",
    "start": "0",
    "end": "7779"
  },
  {
    "text": "universal foldings by box\npleating, maze folding, and then lots of\nNP hardness stuff.",
    "start": "7780",
    "end": "14420"
  },
  {
    "text": "So we're going to go through\nthings in that order. I thought I'd start by showing\nsome old history of box",
    "start": "14420",
    "end": "21619"
  },
  {
    "text": "pleating, where it comes from. The first design is by this guy\nRaymond McLain, 1967, design",
    "start": "21620",
    "end": "28240"
  },
  {
    "text": "called the Mooser's train. And you can see all the creases\nare horizontal, vertical, and diagonal, 45 degrees.",
    "start": "28240",
    "end": "34746"
  },
  {
    "text": "This is the original\nhandwritten thing, and this is apparently before\nthe time of origami books,",
    "start": "34746",
    "end": "39920"
  },
  {
    "text": "for the most part. So people would\njust photocopy this, and hand it around, just\nkind distribute it out",
    "start": "39920",
    "end": "45110"
  },
  {
    "text": "through the origami community. And kind of spawned a\nrevolution origami design,",
    "start": "45110",
    "end": "51170"
  },
  {
    "text": "because it was the\nfirst model to make sort of a very complicated\nmulti-object piece out",
    "start": "51170",
    "end": "58070"
  },
  {
    "text": "of one piece of paper. Happened to be a\nrectangle of paper, but a pretty cool design .",
    "start": "58070",
    "end": "63200"
  },
  {
    "text": "And it really got\npeople thinking about. And the basic, original\nprincipal in box pleating",
    "start": "63200",
    "end": "68410"
  },
  {
    "text": "was to make boxes, and then find\nways to attach them together. And it's fairly\npowerful and believed",
    "start": "68410",
    "end": "73580"
  },
  {
    "text": "to be universal by\norigamists for a long time. And we proved it with\nthat cube gadget. Now, the designs that come\nout of the cube gadget",
    "start": "73580",
    "end": "79751"
  },
  {
    "text": "are not especially efficient. I've got some ways to\noptimize it, as you saw, but at least it proves\neverything is possible",
    "start": "79751",
    "end": "87525"
  },
  {
    "text": "that you could\nmake out of cubes, you can make out\nof box pleating. Another kind of\ninfluential design",
    "start": "87525",
    "end": "94350"
  },
  {
    "text": "is this black\nforce cuckoo clock. For a long time, one of the most\ncomplicated origamis out there.",
    "start": "94350",
    "end": "99360"
  },
  {
    "text": "It was designed by\nRobert Lang in the '80s, and there's a few of\nthem in existence. It has lot of detail-- it\nhas a clock, that's correct",
    "start": "99360",
    "end": "108140"
  },
  {
    "text": "twice a day, and it's he\nmodeled it after a real cuckoo",
    "start": "108140",
    "end": "113460"
  },
  {
    "text": "clock he saw in\nthe Black Forest. It's got a zillion\ncreases, especially in this long rectangle of paper.",
    "start": "113460",
    "end": "118600"
  },
  {
    "text": "And there's diagrams for it\nin Origami Design Secrets, if you want to make your own.",
    "start": "118600",
    "end": "123899"
  },
  {
    "text": "And it's also based on\nthis box pleating idea, and sort of in the early days\nof the tree theory, and so on.",
    "start": "123900",
    "end": "131350"
  },
  {
    "text": "So really, before that kicked\noff, box pleating was around. And people still do\nbasic box pleating, although now there's\nthe fusion of the tree",
    "start": "131350",
    "end": "136950"
  },
  {
    "text": "method with box pleating. There's a lot of designs\nbased on that, because they're easy to fold from\nangular perspective,",
    "start": "136950",
    "end": "143110"
  },
  {
    "text": "easy to find where the\ncreases are, anyway, that's box pleating. So next, we go on to-- I\nthink it's an open problem.",
    "start": "143110",
    "end": "152010"
  },
  {
    "start": "150000",
    "end": "317000"
  },
  {
    "text": "Yeah, this is a\ncool open problem. For some reason, never\nthought about it. I'm sure briefly thought about\nit, but never worked on it.",
    "start": "152010",
    "end": "159201"
  },
  {
    "text": "In the same way we get\nuniversal hinge patterns, box pleating can make any poly\ncube, what if you want to make,",
    "start": "159201",
    "end": "164720"
  },
  {
    "text": "out of the simple cube gadget,\ncan we design an analogous cube gadget for\ntetrahedra, octahedra,",
    "start": "164720",
    "end": "170840"
  },
  {
    "text": "might be nice, regular octahedra\ntile space, out of something like a triangular grid,\nmaybe with 30 degree lines.",
    "start": "170840",
    "end": "179240"
  },
  {
    "text": "That's a natural\nquestion-- open. Maybe we'll work on it sometime,\nbut I think it'd be neat. You just need a nice\ngadget, and then we",
    "start": "179240",
    "end": "185810"
  },
  {
    "text": "know how to compose them by\ninduction just like in lecture seven. So it could be a\nfun thing to attack.",
    "start": "185810",
    "end": "194890"
  },
  {
    "text": "Next, we go to maze folding.",
    "start": "194890",
    "end": "200319"
  },
  {
    "text": "So I thought I'd\nshow-- we've seen this maze fold-- the 6.849.",
    "start": "200320",
    "end": "206900"
  },
  {
    "text": "So this is folded\nby Jenny and Eli based on the algorithm that\nyou saw, and you might play",
    "start": "206900",
    "end": "213600"
  },
  {
    "text": "with it on your\nproblem set three. Design your own maze. You can click any\npattern you want.",
    "start": "213600",
    "end": "219390"
  },
  {
    "text": "Make whatever letters you want,\nor any other cool orthogonal pattern.",
    "start": "219390",
    "end": "226970"
  },
  {
    "text": "Marty and I have made a\nbunch of different print designs based around this idea\nof taking not just the crease",
    "start": "226970",
    "end": "233659"
  },
  {
    "text": "pattern you get for\nfolding-- here we're folding the word yes\nin three dimensions--",
    "start": "233660",
    "end": "239280"
  },
  {
    "text": "but we've shaded the original\npiece of paper in this pattern. So that it looks like nothing\non here, but when you fold it,",
    "start": "239280",
    "end": "246440"
  },
  {
    "text": "the shading comes\ntogether to spell no. So it's kind of ambiguity, or\nthe shadow of the yes is no, and so on.",
    "start": "246440",
    "end": "252700"
  },
  {
    "text": "And Jenny and Eli folded\nthat as well, and here it is. The first folding.",
    "start": "252700",
    "end": "258463"
  },
  {
    "text": " But our idea is not\nnecessarily to fold them.",
    "start": "258464",
    "end": "263730"
  },
  {
    "text": "I mean, it's cool that\nthey can be folded. That's neat\nconceptually, but we also like to design ones that\nreally should not be folded.",
    "start": "263730",
    "end": "271240"
  },
  {
    "text": "Next one here is\nscience and art, so you fold the science\nin three dimensions",
    "start": "271240",
    "end": "276349"
  },
  {
    "text": "and the art is in the\nbackground lurking there. I imagine this will\nnever be folded.",
    "start": "276350",
    "end": "282955"
  },
  {
    "text": "It'd be rather painful. Here's another very\ncomplicated one. Here we're playing around with\nputting little shaded regions",
    "start": "282955",
    "end": "290950"
  },
  {
    "text": "in these squares. These are just the\nsquares that end up mapping to the flat\nparts over here. And so you get--\nwe took an image",
    "start": "290950",
    "end": "297560"
  },
  {
    "text": "and spliced it up into\nthousands of pieces. So you get-- this is a\nphotograph of Martin Gardner,",
    "start": "297560",
    "end": "302960"
  },
  {
    "text": "who died a couple\nyears ago sadly. We never met him,\nbut he was the father",
    "start": "302960",
    "end": "310210"
  },
  {
    "text": "of recreational mathematics\namong other things. Also magician--\nlots of cool things.",
    "start": "310210",
    "end": "315750"
  },
  {
    "text": "So this is in tribute to him. And this is our latest\ndesign in this spirit. We're trying to be a\nlittle more artistic",
    "start": "315750",
    "end": "322133"
  },
  {
    "start": "317000",
    "end": "363000"
  },
  {
    "text": "and just be about the crease\npattern, not necessarily the folding. So the 3-D thing that this\nfolds into is not shown here,",
    "start": "322133",
    "end": "329360"
  },
  {
    "text": "and in theory all these\nlines go off to infinity. But this spells the word glass.",
    "start": "329360",
    "end": "334955"
  },
  {
    "text": "We made it when we were at\nthe Pilchuck Glass School this summer.",
    "start": "334955",
    "end": "340190"
  },
  {
    "text": "And it's now on t-shirts of many\nglass blowers around the world. How many of them know\nexactly what it folds into,",
    "start": "340190",
    "end": "345860"
  },
  {
    "text": "I don't know. But that's pretty cool. So we were working\non glass folding, so that seemed like a\nnatural thing to do.",
    "start": "345860",
    "end": "352940"
  },
  {
    "text": "So that is maze folding\nand see some designs. How you can use it\nfor cool things.",
    "start": "352940",
    "end": "360990"
  },
  {
    "text": "The next topic is\nNP-hardness, and that will be what we spend\nmost of today on.",
    "start": "360990",
    "end": "368130"
  },
  {
    "start": "363000",
    "end": "530000"
  },
  {
    "text": "And so, first kind\nof general question is what does it all mean?",
    "start": "368130",
    "end": "373620"
  },
  {
    "text": "What does NP-hardness\nreally tell you? Can you give me like a\nspecific instance that's hard,",
    "start": "373620",
    "end": "379610"
  },
  {
    "text": "and-- this is more for people\nwho haven't seen MP-hardness before-- the answer is no.",
    "start": "379610",
    "end": "385190"
  },
  {
    "text": "NP-hardness is kind of a\nconceptual, philosophical thing. No specific problem\nis ever NP-hard.",
    "start": "385190",
    "end": "391639"
  },
  {
    "text": "It's all about whole families\nof problems being hard. And really it's about\nmeasuring the growth of problem",
    "start": "391640",
    "end": "398020"
  },
  {
    "text": "complexity with problem size. So in this case, it's\nhow much running time do you need to\nsolve your problem",
    "start": "398020",
    "end": "405990"
  },
  {
    "text": "as a function of\nthe problem size. And we're interested in whether\nthat grows only polynomially or it grows exponentially,\nand NP-hardness probably",
    "start": "405990",
    "end": "413490"
  },
  {
    "text": "implies exponential growth. A nice example of this is chess. So eight-by-eight\nchess-- people have",
    "start": "413490",
    "end": "419990"
  },
  {
    "text": "spent many years trying to\nsolve it and do it perfectly, and to be the best player.",
    "start": "419990",
    "end": "425480"
  },
  {
    "text": "But from a theoretical,\ncomputer science perspective, chess in its original\nform, is trivial because it just has a\nconstant number of states.",
    "start": "425480",
    "end": "433370"
  },
  {
    "text": "You could just enumerate\nthem all in constant time. You know who wins in\nchess-- probably white.",
    "start": "433370",
    "end": "440070"
  },
  {
    "text": "But it's not very satisfying,\nbut the more interesting thing to say is to study\nchess as it grows,",
    "start": "440070",
    "end": "446930"
  },
  {
    "text": "and the natural way to make it\ngrow is with an n-by-n board. So with an n-by-n\nboard, if I give you an arrangement of\nchess pieces and I",
    "start": "446930",
    "end": "452559"
  },
  {
    "text": "want to know who wins,\nthat you can prove is something even stronger than\nNP-hardness called X-hardness.",
    "start": "452559",
    "end": "459046"
  },
  {
    "text": "So there you can actually\nprove you need exponential time to solve n-by-n chess. And that gives you a sense\nthe chess really is hard.",
    "start": "459046",
    "end": "465910"
  },
  {
    "text": "There's not going to be a good\nalgorithm that magically will solve it for eight-by-eight,\nbecause in general as board",
    "start": "465911",
    "end": "471740"
  },
  {
    "text": "size increases, you know it\nhas to grow exponentially, and probably eight-by-eight\nis big enough.",
    "start": "471740",
    "end": "476800"
  },
  {
    "text": "That there's no good\nalgorithm to do it. You can't prove that\nthere's no good algorithm to do eight-by-eight,\nbut you can",
    "start": "476800",
    "end": "482455"
  },
  {
    "text": "prove there's no good\nalgorithms to do n-by-n. So that's the limitation of\ntheoretical computer science",
    "start": "482455",
    "end": "487520"
  },
  {
    "text": "and of NP-hardness. So you take any\nparticular crease pattern. You want to know\nwhether it folds flat. You might be able to do\nthat by exhaustive search",
    "start": "487520",
    "end": "494540"
  },
  {
    "text": "and exponential\ntime might be OK, but you know that as the\ncrease patterns get big, you're totally screwed.",
    "start": "494540",
    "end": "501880"
  },
  {
    "text": "So, next question about\nhardness is can we",
    "start": "501880",
    "end": "507599"
  },
  {
    "text": "do it with a little\nless hand waving? So in a little bit\nmore detail, because I covered a lot of proofs. So I'm going to\nlook at two of them.",
    "start": "507599",
    "end": "513460"
  },
  {
    "text": "The simple full hardness--\nwhich is from partition-- and the crease pattern\nflat foldability which",
    "start": "513460",
    "end": "521323"
  },
  {
    "text": "is from not all equal\nSAT-- 3SAT-- and I'll give some more details.",
    "start": "521324",
    "end": "529270"
  },
  {
    "text": "So let's start by going\nthrough this proof. Remember, in general with\nan NP-hardness reduction,",
    "start": "529270",
    "end": "534930"
  },
  {
    "start": "530000",
    "end": "792000"
  },
  {
    "text": "we want to take some\nknown hard problem and convert it into our\nproblem, because that proves that our problem is at least\nas hard as the original one.",
    "start": "534930",
    "end": "542880"
  },
  {
    "text": "So in this case, the known\nhard problem is I give you n integers-- a1, a2, up to an.",
    "start": "542880",
    "end": "550110"
  },
  {
    "text": "And I want to know, can I\nsplit them into two groups so that the two\ngroups have equal sum?",
    "start": "550110",
    "end": "556250"
  },
  {
    "text": "And here we're mapping that into\nthe simple fold problem, which was given a crease\npattern can you fold it.",
    "start": "556250",
    "end": "562160"
  },
  {
    "text": "Can you follow all the\ncreases flat by simple folds? We're mapping it\ninto these lengths--",
    "start": "562160",
    "end": "568290"
  },
  {
    "text": "these lengths are the AIs\nbetween the different legs of the staircase. And then there's\nthis extra stuff.",
    "start": "568290",
    "end": "575260"
  },
  {
    "text": "This is a super long\nlength-- length l-- and this is a doubly\nsuper long length-- 2l.",
    "start": "575260",
    "end": "581790"
  },
  {
    "text": "And then there's this\nframe, which has height 2l, and this part is aligned\nright at the midway.",
    "start": "581790",
    "end": "588630"
  },
  {
    "text": "And so the idea was if there's\na partition-- if there's",
    "start": "588630",
    "end": "593960"
  },
  {
    "text": "a partition of the AIs\ninto two groups-- call them Group A and Group\nB-- then I'm going",
    "start": "593960",
    "end": "601740"
  },
  {
    "text": "to fold some of the creases. The ones between any two\nguys of different groups.",
    "start": "601740",
    "end": "611990"
  },
  {
    "text": "Because folding here corresponds\nto switching directions. So whenever I fold, I'm kind of\nswitching which group I'm in,",
    "start": "611990",
    "end": "618520"
  },
  {
    "text": "and then Group A will\nbe all the up directions and Group B will be all\nthe down directions. So maybe both of these\nguys are in Group B",
    "start": "618520",
    "end": "625440"
  },
  {
    "text": "so they both go down, and this\nis a Group A guy, so we go up, and then down, and then up. And if we get them-- A and\nB to be balanced-- then",
    "start": "625440",
    "end": "632459"
  },
  {
    "text": "we'll end up right\nwhere we started. So we'll end up right at\nthe middle point here.",
    "start": "632460",
    "end": "639630"
  },
  {
    "text": "And, in that case, there's\nthese two more folds-- this vertical fold and\nthat vertical fold.",
    "start": "639630",
    "end": "645720"
  },
  {
    "text": "And then if you-- sorry. Yeah, I don't have\nit drawn here.",
    "start": "645720",
    "end": "650740"
  },
  {
    "text": "When you do one more fold here,\nthis will fall into the frame, and if you got this to stay--\nif you got this point basically",
    "start": "650740",
    "end": "659639"
  },
  {
    "text": "to be aligned with\nhere, then going up L, and then back down to L will\nnot collide with this box.",
    "start": "659640",
    "end": "665420"
  },
  {
    "text": "It just barely fits,\nand so you fold that in. Then you fold this vertical\nline and you fold it back out.",
    "start": "665420",
    "end": "674060"
  },
  {
    "text": "So the goal was just to\nget these two folds made. Once they're made and\nit's back out here, you can finish all folds\nthat you didn't fold before.",
    "start": "674060",
    "end": "682421"
  },
  {
    "text": "And what we're checking here\nis that during all this motion, you don't get collision\nbecause simple folds are not",
    "start": "682421",
    "end": "687630"
  },
  {
    "text": "allowed to collide\nduring the motion. So if this, for example, went\ntoo far down or too far up",
    "start": "687630",
    "end": "693939"
  },
  {
    "text": "and it collided with\nthe frame, then you wouldn't be able to make the\nsecond vertical fold here because you'd have to\nbring the frame with you,",
    "start": "693940",
    "end": "700288"
  },
  {
    "text": "and the frame's not\nsupposed to move. So in particular,\nthere's this question.",
    "start": "700288",
    "end": "705900"
  },
  {
    "text": "Seems like we're not\nmaking all the folds, and that's because I\ndidn't say the last part. After you fold it in\nhere and avoid collision,",
    "start": "705900",
    "end": "711660"
  },
  {
    "text": "you fold it back out with the\nsecond of these two folds. Then you can finish\nall the folds. Indeed the goal is\nto fold everything,",
    "start": "711660",
    "end": "718740"
  },
  {
    "text": "but in order to avoid\ncollision, when I fold this, this thing has to be nice and\ncompact and fit within this 2L",
    "start": "718740",
    "end": "724710"
  },
  {
    "text": "boundary. Then it goes through. So what we really\nneed to show though",
    "start": "724710",
    "end": "731690"
  },
  {
    "text": "at the top level is\ngiven any set of AIs, we can convert it into an\nequivalent simple fold problem.",
    "start": "731690",
    "end": "739659"
  },
  {
    "text": "There's actually two things we\nneed to check for equivalence. We need to check that\nif there's a partition, then there's a way to fold it.",
    "start": "739659",
    "end": "745780"
  },
  {
    "text": "We also need to check\nthe reverse, which is if there's a way to fold\nit, then there's a partition. But both of these kind of\nfollow from this argument.",
    "start": "745780",
    "end": "753750"
  },
  {
    "text": "In order to-- when\nwe make this fold, this guy's got to-- or\nwhichever of these two is first.",
    "start": "753750",
    "end": "759220"
  },
  {
    "text": "They're kind of equivalent. If we collide, we won't be\nable to finish the folding.",
    "start": "759220",
    "end": "764545"
  },
  {
    "text": "That's the claim. You might have done all\nthe folds over here, but they'll be the\nsecond of these two,",
    "start": "764545",
    "end": "771040"
  },
  {
    "text": "and so when you do the first,\nyou'll either get stuck or you'll be able to proceed. If you were able to\nproceed, you can read off",
    "start": "771040",
    "end": "776370"
  },
  {
    "text": "from the ups and downs here\nwhat the partition was. So you can convert in either\ndirection using this reduction.",
    "start": "776370",
    "end": "783786"
  },
  {
    "text": "Any more questions about\nthe simple folds one? So, of course, one of the easier\nproofs, the crease pattern",
    "start": "783786",
    "end": "790949"
  },
  {
    "text": "flatfold ability is definitely\non the more complicated side, and this was the\noverview of the proof.",
    "start": "790950",
    "end": "796850"
  },
  {
    "text": "Basically there were lots\nof little local gadgets. There's the wire,\nwhich communicates",
    "start": "796850",
    "end": "804000"
  },
  {
    "text": "truthiness or falsity\nas we like to say. Or things like-- the\nmain gadget is the one",
    "start": "804000",
    "end": "812000"
  },
  {
    "text": "at the top and not\nall equal clause, which forces among the\nthree wires coming in.",
    "start": "812000",
    "end": "817950"
  },
  {
    "text": "They can't all have\nthe same value. So there could be\ntwo true, one false. Or two false, one true.",
    "start": "817950",
    "end": "824560"
  },
  {
    "text": "But not all true\nand not all false. And then we needed\nsome auxiliary gadgets for turning, duplicating,\nand crossing over.",
    "start": "824560",
    "end": "832110"
  },
  {
    "text": "Those were fairly\nstraightforward. The heart is a wire, and\na not all equal clause.",
    "start": "832110",
    "end": "838870"
  },
  {
    "text": "And so the idea was we were\ngiven a formula-- in this case, it's a bunch of triples,\nand each of the triples",
    "start": "838870",
    "end": "845440"
  },
  {
    "text": "should be not all equal. And there's like n\nvariables-- there's a lot of different clauses\non those variables.",
    "start": "845440",
    "end": "851410"
  },
  {
    "text": "A lot of not all equal\nconstraints on those clauses. We want to represent that\nby the flatfold ability of the crease pattern.",
    "start": "851410",
    "end": "857086"
  },
  {
    "text": " So we basically make\nall the variables",
    "start": "857086",
    "end": "864269"
  },
  {
    "text": "off the left edge\nof the paper here. We make lots of copies\nof them by zigzagging, and then we make lots of clauses\nat the top-- only drawn two",
    "start": "864270",
    "end": "873640"
  },
  {
    "text": "up there-- and then in our input\nwe're given a bunch of triples of variables that should\nbelong to a common clause,",
    "start": "873640",
    "end": "879620"
  },
  {
    "text": "and we just route these\nsignals to go to that clause. And then the clauses constrain\nthe values of those variables",
    "start": "879620",
    "end": "886540"
  },
  {
    "text": "to be not all equal in\nthe appropriate triples. And the splitters\ndown here enforce",
    "start": "886540",
    "end": "893620"
  },
  {
    "text": "all the different copies of\nthat variable to be the same. And so any flat\nfolding will require",
    "start": "893620",
    "end": "900100"
  },
  {
    "text": "these guys are consistently\nassigned one truth value throughout\nthe construction,",
    "start": "900100",
    "end": "905800"
  },
  {
    "text": "and those clauses will\nforce not all equal things to be seen in pairs. So if there's a flat\nfolding of this,",
    "start": "905800",
    "end": "911100"
  },
  {
    "text": "you can read off on the\nmountain valley assignment here which one based\non whether it's",
    "start": "911100",
    "end": "916190"
  },
  {
    "text": "left valley, right mountain,\nor left mountain, right valley. You can read of what\nthe truth assignment is",
    "start": "916190",
    "end": "921520"
  },
  {
    "text": "that satisfies all the clauses. That was one direction\nfrom flat foldability to satisfiability of the\nnot all equal triples",
    "start": "921520",
    "end": "934219"
  },
  {
    "text": "in the reverse direction. If there's a not all equal\nassignment of triples, you need to verify that this\nthing actually does fold flat.",
    "start": "934219",
    "end": "943040"
  },
  {
    "text": "I didn't detail\nthat, but basically to do that, you have to prove\nthat each of the gadgets works exactly as desired.",
    "start": "943040",
    "end": "949140"
  },
  {
    "text": "So you could really fold it\nflat if these have equal value, for example, and this\nhas a negated value.",
    "start": "949140",
    "end": "954880"
  },
  {
    "text": "You could actually always\nfold the not all equal cause when it's satisfied. And then once you know that\neach of these gadgets--",
    "start": "954880",
    "end": "961720"
  },
  {
    "text": "because the gadgets are\nvery small-- once you know that each of them\nfolds correctly, and they have a sort\nof comparable interface",
    "start": "961720",
    "end": "967750"
  },
  {
    "text": "because these things are\njust extending through, you could basically paste\nglue together all of those folded states.",
    "start": "967750",
    "end": "974019"
  },
  {
    "text": "So as long as you\nverify the gadgets work, the whole thing\nwill work provided there is a satisfying\nassignment.",
    "start": "974020",
    "end": "979810"
  },
  {
    "start": "978000",
    "end": "1102000"
  },
  {
    "text": "So that's-- yeah, question? AUDIENCE: Can you actually\ngo in the other direction properly in the same cell?",
    "start": "979810",
    "end": "985029"
  },
  {
    "text": "Can you map any flat\nfoldability [INAUDIBLE]? PROFESSOR: OK, can you\nmap any flat foldability",
    "start": "985030",
    "end": "990810"
  },
  {
    "text": "of a crease pattern\nproblem to SAT? That doesn't follow\nfrom this proof, but I think it should be true.",
    "start": "990810",
    "end": "997580"
  },
  {
    "text": "Uh, let's see-- I think so.",
    "start": "997580",
    "end": "1010934"
  },
  {
    "text": "So if I give you\na crease pattern, I want to know\nwhether it folds flat. As mentioned in lecture,\nyou can determine",
    "start": "1010934",
    "end": "1016760"
  },
  {
    "text": "where all the facets lie in 2D. And challenges the\nstacking order,",
    "start": "1016760",
    "end": "1022120"
  },
  {
    "text": "which implies the mountain\nvalley assignment. So I think you could\nmake a variable in a SAT problem for this piece--\nthis little polygon lives",
    "start": "1022120",
    "end": "1030369"
  },
  {
    "text": "in the stacking level. You have to figure out how many\nlevels you need, but at most 10 of them, I guess.",
    "start": "1030369",
    "end": "1036339"
  },
  {
    "text": "And then write down\nthe constraints between different polygons\nif there are no crossings.",
    "start": "1036339",
    "end": "1043276"
  },
  {
    "text": "There's a paper\nby Jacques Justin that does that explicitly. ",
    "start": "1043276",
    "end": "1048650"
  },
  {
    "text": "So that should give you a way to\nreduce to SAT, which gives you an algorithm-- an exponential\ntime algorithm to solve it.",
    "start": "1048650",
    "end": "1054814"
  },
  {
    "text": "In general, I'm pretty\nsure this problem is in NP, which implies there's\nat least an algorithm for it.",
    "start": "1054814",
    "end": "1060150"
  },
  {
    "text": "But I think in particular,\nyou can reduce it to SAT. So that's a good question.",
    "start": "1060150",
    "end": "1066350"
  },
  {
    "text": "So pretty much\nevery problem we'll talk about at least with\norigami has a finite algorithm",
    "start": "1066350",
    "end": "1071950"
  },
  {
    "text": "to solve it, but it's a very\nslow algorithm in general. Of course, there's a lot of\ngood SAT solvers out there,",
    "start": "1071950",
    "end": "1077160"
  },
  {
    "text": "and I don't know if people\nhave actually tried to do that. I know there are some-- there's\na software called ORIPA, which",
    "start": "1077160",
    "end": "1086090"
  },
  {
    "text": "in Japan some\nversions try to find a valid folding-- a\nvalid folded state",
    "start": "1086090",
    "end": "1092320"
  },
  {
    "text": "by some kind of careful,\nexhaustive search. I don't think they use\nSAT solvers though. You might get more mileage\nout of SAT solvers.",
    "start": "1092320",
    "end": "1099080"
  },
  {
    "text": "Other questions\nabout this proof?  There's one explicit question\nabout the reflector gadget.",
    "start": "1099080",
    "end": "1106580"
  },
  {
    "start": "1102000",
    "end": "1235000"
  },
  {
    "text": "This probably worth talking\nabout because these arrows are maybe not so\nobvious what they mean.",
    "start": "1106580",
    "end": "1112830"
  },
  {
    "text": "So the question is what\nis true and what is false. It's kind of philosophy,\nbut in this case",
    "start": "1112830",
    "end": "1120450"
  },
  {
    "text": "these arrows are explicitly\ndrawn on this diagram. If you look closely, there's an\narrow this way, then this way,",
    "start": "1120450",
    "end": "1126640"
  },
  {
    "text": "then this way. And that's defining what we mean\nby the orientation of a wire, and then if it's a valley\non the left relative",
    "start": "1126640",
    "end": "1134350"
  },
  {
    "text": "to the arrow, that's true. If it's mountain on the\nleft relative to the arrow, that's false.",
    "start": "1134350",
    "end": "1139760"
  },
  {
    "text": "And that's why this\nis drawn this way assuming I got it right. Here it's valley on the\nleft relative to the arrow.",
    "start": "1139760",
    "end": "1145830"
  },
  {
    "text": "Here it's mountain on the\nleft relative to the arrow. So notice these are pointing\nin different directions.",
    "start": "1145830",
    "end": "1151422"
  },
  {
    "text": "So that can get a\nlittle confusing, but it's kind of what\nwe want in that proof because we really want to route\nthat thing in this direction.",
    "start": "1151422",
    "end": "1159400"
  },
  {
    "text": "We don't care about\nwhat things look like relative to\nthe center here. Because the center-- the\ngadget we are looking at",
    "start": "1159400",
    "end": "1167230"
  },
  {
    "text": "keeps changing. So we want to route\nthis as a single wire. ",
    "start": "1167230",
    "end": "1172821"
  },
  {
    "text": "And this one I\nalready talked about. You need to prove\nboth directions-- that flat foldability implies\nnot all equal satisfiability,",
    "start": "1172821",
    "end": "1178964"
  },
  {
    "text": "and the reverse.  OK, we move on.",
    "start": "1178964",
    "end": "1188110"
  },
  {
    "start": "1188110",
    "end": "1195090"
  },
  {
    "text": "So now we get to\nsome new material. So I mentioned in the\nlecture that there",
    "start": "1195090",
    "end": "1200920"
  },
  {
    "text": "are two hardness proofs. The one we've been talking\nabout is given a crease pattern, does it fold flat?",
    "start": "1200920",
    "end": "1206120"
  },
  {
    "text": "That's strongly NP-hard. And the other is if I\ngive you something--",
    "start": "1206120",
    "end": "1212092"
  },
  {
    "text": "I might even tell you\nit's flat foldable. That's kind of not too relevant. But I give you\nmountains and valleys,",
    "start": "1212092",
    "end": "1217830"
  },
  {
    "text": "and I want to know--\nI want to find a valid folded\nstate of that, or I",
    "start": "1217830",
    "end": "1223370"
  },
  {
    "text": "want to decide whether\nthe mountain valley pattern is valid. These are strongly NP-hard hard,\nand this is a different proof.",
    "start": "1223370",
    "end": "1230420"
  },
  {
    "text": "It uses completely\ndifferent gadgets. So I thought I'd show you\nsome of those gadgets.",
    "start": "1230420",
    "end": "1237040"
  },
  {
    "start": "1235000",
    "end": "1600000"
  },
  {
    "text": "Sort of the key ones. So the first part\nis the wire, and I think I made one of these.",
    "start": "1237040",
    "end": "1243880"
  },
  {
    "text": "Maybe I didn't. No wire.",
    "start": "1243880",
    "end": "1248910"
  },
  {
    "text": "Well, this is the end\nof a wire-- er, no, that's not the end of a wire. ",
    "start": "1248910",
    "end": "1255570"
  },
  {
    "text": "Here's an end of a wire. So the idea here is we've\ngot a fixed mountain valley",
    "start": "1255570",
    "end": "1261510"
  },
  {
    "text": "pattern now because that's\nno longer free for the folder to choose. And you've got\ntwo tabs, and they",
    "start": "1261510",
    "end": "1267390"
  },
  {
    "text": "could stack one\nway or the other. In this case, they\ncan stacked like this, or they can stack like that.",
    "start": "1267390",
    "end": "1274520"
  },
  {
    "text": "So I've got a\nchoice in stacking. That changes the folded state. That's the choice that the\nfolder is going to make,",
    "start": "1274520",
    "end": "1281630"
  },
  {
    "text": "but in either case the mountain\nvalley assignment is the same. So that's how we're going to\ncommunicate true and false,",
    "start": "1281630",
    "end": "1288570"
  },
  {
    "text": "and I haven't\nprovided orientation. Should have drawn\nan arrow there. ",
    "start": "1288570",
    "end": "1294190"
  },
  {
    "text": "Next gadget is this tab\ngadget, and this is just a tool for building\nweird shapes,",
    "start": "1294190",
    "end": "1300454"
  },
  {
    "text": "and it's kind of similar\nto some of the things you've seen in the\ncheckerboard folding. So our crease pattern looks\nlike this, and fold it flat.",
    "start": "1300454",
    "end": "1312290"
  },
  {
    "text": "And there's two ways to fold it. Actually, a few\ndifferent folded states.",
    "start": "1312290",
    "end": "1318620"
  },
  {
    "text": "But in particular,\nthere's a state like this where there's this\nindividually manipulatable tab,",
    "start": "1318620",
    "end": "1325830"
  },
  {
    "text": "but there's no crease here. So it can't go backwards. The crease is in here. So it's got a fall\ndown like that.",
    "start": "1325830",
    "end": "1333410"
  },
  {
    "text": "OK, so what this reduction\ndoes is, ahead of time basically, force a\nlot of these foldings.",
    "start": "1333410",
    "end": "1340820"
  },
  {
    "text": "And so we start\nwith a square paper. We end up with a smaller square\npaper with tabs sticking out in various directions\nof various places.",
    "start": "1340820",
    "end": "1347470"
  },
  {
    "text": "So this is much messier\nand it'd be harder to draw the whole diagram of\nwhat your crease pattern looks like, but in theory\nyou can do this.",
    "start": "1347470",
    "end": "1354190"
  },
  {
    "text": "That's also kind of\nlike the box pleading method where you just\nmake a cube ahead of time, and it's like you had\na square originally.",
    "start": "1354190",
    "end": "1360400"
  },
  {
    "text": "There just happens to\nbe a cube sitting here, and then you do other folding. And the angles in this\ncrease pattern-- these",
    "start": "1360400",
    "end": "1367290"
  },
  {
    "text": "are not 45 degrees. They're at a bit\nof a weird angle to basically force\nthis to happen first. It can't interact with\nany of the other gadgets",
    "start": "1367290",
    "end": "1374180"
  },
  {
    "text": "that I show you. Because you've got to get rid of\nthose angles in the beginning. Then, the main gadget here\nis the not all equal clause,",
    "start": "1374180",
    "end": "1383010"
  },
  {
    "text": "and that's what I\nhave folded here. So it's a little crazy,\nbut basically you've",
    "start": "1383010",
    "end": "1388160"
  },
  {
    "text": "got three pleats-- three of\nthese double pleats coming together. These guys could stack-- this\none on top, this one on top.",
    "start": "1388160",
    "end": "1396300"
  },
  {
    "text": "Now we're the same\nfor all three of them, and then you've got this little\ntwist like thing in the center,",
    "start": "1396300",
    "end": "1402376"
  },
  {
    "text": "and it's really\nhard to draw what the folded state looks like. This is what it looks\nlike within shadow pattern",
    "start": "1402376",
    "end": "1407730"
  },
  {
    "text": "with transparency. Here's the real thing. And also, there's\nthese yellow tabs",
    "start": "1407730",
    "end": "1414450"
  },
  {
    "text": "attached at very\nspecific locations. And this is a little\nhard to imagine.",
    "start": "1414450",
    "end": "1421576"
  },
  {
    "text": "I encourage you to fold\none of these in order to really see what's going on.",
    "start": "1421576",
    "end": "1427190"
  },
  {
    "text": "But as I said before, you've\ngot-- each of these guys can be independently stacked\none way or the other.",
    "start": "1427190",
    "end": "1432760"
  },
  {
    "text": "There's that one or this one\ncan stack this way or that way",
    "start": "1432760",
    "end": "1438300"
  },
  {
    "text": "for all three, but we want\nto forbid the case where they're all stacked\nthe same way. And the arrows here are all\npointing towards the gadget.",
    "start": "1438300",
    "end": "1445150"
  },
  {
    "text": "So we want to forbid\nthe case when they're all-- when it's\nrotationally symmetric. Gadget is rotationally\nsymmetric,",
    "start": "1445150",
    "end": "1451260"
  },
  {
    "text": "but if you choose the layer\norder rotationally symmetric, you're in trouble. So let me make it\nrotationally symmetric.",
    "start": "1451260",
    "end": "1458054"
  },
  {
    "text": "That would be like this. So when it's\nrotationally symmetric, you see-- basically\nall the panels",
    "start": "1458055",
    "end": "1464600"
  },
  {
    "text": "you see-- there's three panels. This one, this\none, and this one. Each of them has a\ntab sticking out,",
    "start": "1464600",
    "end": "1471740"
  },
  {
    "text": "and basically these tabs have\nto also be cyclically ordered,",
    "start": "1471740",
    "end": "1477700"
  },
  {
    "text": "but it's not possible--\nthis is hard to do. It's like this.",
    "start": "1477700",
    "end": "1482750"
  },
  {
    "text": "You see they're kind\nof colliding here. Because if you look at each\nof the tabs in projection,",
    "start": "1482750",
    "end": "1488190"
  },
  {
    "text": "it collides with where\nthe tab is attached. So you basically-- if you went--\nso someone has to be the lowest",
    "start": "1488190",
    "end": "1497430"
  },
  {
    "text": "tab, and that tab will intersect\nthe other two tabs actually",
    "start": "1497430",
    "end": "1503100"
  },
  {
    "text": "where that tab is attached. So it'll penetrate\nand you can see they're not very\nhappy to stack here.",
    "start": "1503100",
    "end": "1510290"
  },
  {
    "text": "But if I change the\nlayer order in any way, our lowest tab is actually\nhappy to go behind other layers,",
    "start": "1510290",
    "end": "1518460"
  },
  {
    "text": "and then you can just stack\nthem, and they barely fit. So it's a little tricky to get\nall the details here to work,",
    "start": "1518460",
    "end": "1525900"
  },
  {
    "text": "but I think this particular\ngeometry-- and the reason I drew this in this exact way\nis to make sure yeah, everything",
    "start": "1525900",
    "end": "1532500"
  },
  {
    "text": "works. You do not penetrate here,\nwhich would be a problem. You do not penetrate\nthis crease,",
    "start": "1532500",
    "end": "1537749"
  },
  {
    "text": "which would be a problem. So the tab just fits in\nbetween here and here, but it does cross.",
    "start": "1537749",
    "end": "1544280"
  },
  {
    "text": "If you look at this tab,\nit's attached along this edge as drawn up there.",
    "start": "1544280",
    "end": "1549830"
  },
  {
    "text": "And this tab here will penetrate\nthis part of that edge, and it will penetrate this\npart of this edge which",
    "start": "1549830",
    "end": "1556160"
  },
  {
    "text": "is where this tab is attached. So they cause trouble in\nthis cyclic situation,",
    "start": "1556160",
    "end": "1561879"
  },
  {
    "text": "but when it's a cyclic\nlike in this picture, you can put that\nbottom tab way down",
    "start": "1561880",
    "end": "1569419"
  },
  {
    "text": "here and avoid any collision. Then you can basically\nbreak the cyclic condition,",
    "start": "1569420",
    "end": "1575630"
  },
  {
    "text": "and you get to stack them\nin some linear order. So it's a little hard to\nsee without physically",
    "start": "1575630",
    "end": "1582444"
  },
  {
    "text": "manipulating it. Feel free to come and\nplay with that after. That's their proof.",
    "start": "1582444",
    "end": "1587540"
  },
  {
    "text": "Now there's also splitters, and\nturn gadgets, and crossovers,",
    "start": "1587540",
    "end": "1593200"
  },
  {
    "text": "but I'll leave it at that. Those are more similar. This is the heart of what's\ngoing on in this proof.",
    "start": "1593200",
    "end": "1601370"
  },
  {
    "start": "1600000",
    "end": "1699000"
  },
  {
    "text": "So it's a completely\nseparate proof from the one that we saw before. Any questions about that?",
    "start": "1601370",
    "end": "1607650"
  },
  {
    "text": " All right-- AUDIENCE: Here.",
    "start": "1607650",
    "end": "1612911"
  },
  {
    "text": "PROFESSOR: Yeah? AUDIENCE: I don't understand\nwhy the tabs fold.  PROFESSOR: How do the tabs fold?",
    "start": "1612911",
    "end": "1618840"
  },
  {
    "text": "AUDIENCE: No, why do we need\ntabs if everything folds?  PROFESSOR: So the tabs\nare being used as a device",
    "start": "1618840",
    "end": "1627770"
  },
  {
    "text": "to build gadgets. So the tabs serve no\npurpose by themselves. But this gadget involves\nfirst folding three tabs here,",
    "start": "1627770",
    "end": "1637270"
  },
  {
    "text": "which are actually\npointing-- they're pointing in that\ndirection, I believe.",
    "start": "1637270",
    "end": "1642799"
  },
  {
    "text": "Then you add this crease\npattern afterwards. So originally there\nare tabs here,",
    "start": "1642800",
    "end": "1648520"
  },
  {
    "text": "which means there's a\nbunch of creases here. After you fold them, then you\nlay on this crease pattern.",
    "start": "1648520",
    "end": "1654000"
  },
  {
    "text": "So if you unfolded it, you\nget some much more complicated crease pattern. Which is when I made that,\nI just taped the tabs on.",
    "start": "1654000",
    "end": "1659320"
  },
  {
    "text": "But in reality, first you fold\nthe tabs so they exist there, then you fold this on top.",
    "start": "1659320",
    "end": "1665400"
  },
  {
    "text": "So the fold crease pattern\nwould be quite complicated. It's going to have\ntabs here, tabs here,",
    "start": "1665400",
    "end": "1670510"
  },
  {
    "text": "tabs there, and then this\nreflected a few times.",
    "start": "1670510",
    "end": "1675650"
  },
  {
    "text": "And so then when you\nfold it-- the fold gadget is this thing with the tabs. The tabs are just\nlike a stepping stone",
    "start": "1675650",
    "end": "1681880"
  },
  {
    "text": "toward making this gadget. The other gadgets use more tabs. Obvious open problem here is\nto make a simpler reduction.",
    "start": "1681880",
    "end": "1689847"
  },
  {
    "text": "Shouldn't have to\nbe this complicated, and I've heard Tom Hall talk\nabout different approaches for making simpler\nNP-hardness proofs,",
    "start": "1689847",
    "end": "1696820"
  },
  {
    "text": "but we're not there yet.  Other questions?",
    "start": "1696820",
    "end": "1703402"
  },
  {
    "start": "1699000",
    "end": "1793000"
  },
  {
    "text": "AUDIENCE: So these proofs\ndon't imply anything about the [INAUDIBLE]? They can all be very\neasily [INAUDIBLE].",
    "start": "1703402",
    "end": "1709258"
  },
  {
    "text": " PROFESSOR: So this proof\nimplies these kinds",
    "start": "1709258",
    "end": "1716250"
  },
  {
    "text": "of tessellation style crease\npatterns are hard to fold, which implies that\nin general crease",
    "start": "1716250",
    "end": "1721460"
  },
  {
    "text": "patterns are hard to fold. But you could look at some\nother specific pattern. For example, it's\nthe next topic.",
    "start": "1721460",
    "end": "1727309"
  },
  {
    "text": "You could look at\nmap folding where",
    "start": "1727310",
    "end": "1733150"
  },
  {
    "text": "you have horizontal\nand vertical creases in a rectangular sheet of paper. Maybe each of these squares\nis-- or each of these cells",
    "start": "1733150",
    "end": "1740550"
  },
  {
    "text": "is a unit square, let's say. And I give you a mountain\nvalley assignment on that. Some of these are mountains.",
    "start": "1740550",
    "end": "1748030"
  },
  {
    "text": "Some of them are valleys.  Whatever.",
    "start": "1748030",
    "end": "1753070"
  },
  {
    "text": "And I want to know\ndoes this fold flat? That we don't know\nthe complexity of. Could be solvable by\npolynomial time algorithm.",
    "start": "1753070",
    "end": "1760690"
  },
  {
    "text": "Could be NP-hard. And this is actually mentioned\nin lecture two notes,",
    "start": "1760690",
    "end": "1768030"
  },
  {
    "text": "but not actually orally. And so I wanted to\nget back to this. This is from lecture two notes.",
    "start": "1768030",
    "end": "1774860"
  },
  {
    "text": "2D map folding, Jack\nEdmonds poses this problem, can you characterize flat\nfoldable mountain valley",
    "start": "1774860",
    "end": "1780590"
  },
  {
    "text": "pattern. Is there an algorithm\nor is it NP-hard? And even the 2-by-n\nproblem was open",
    "start": "1780590",
    "end": "1786530"
  },
  {
    "text": "when I wrote these\nnotes in 2010, but it has since been solved. So I thought I'd tell you a\nlittle bit about that solution.",
    "start": "1786530",
    "end": "1794389"
  },
  {
    "start": "1793000",
    "end": "1911000"
  },
  {
    "text": "So yeah, there can be special\ncases of crease patterns that are easy to solve. We just know in\ngeneral they are hard.",
    "start": "1794390",
    "end": "1801990"
  },
  {
    "text": "So 2-by-n is this\nkind of picture. So this is what I call\n2, counting cells.",
    "start": "1801990",
    "end": "1810650"
  },
  {
    "start": "1810650",
    "end": "1816370"
  },
  {
    "text": "This is based on a class\nproject in this class",
    "start": "1816370",
    "end": "1823510"
  },
  {
    "text": "from two years ago by\nEric Lew and Tom Morgan, but the paper got\nfinished this year.",
    "start": "1823510",
    "end": "1833840"
  },
  {
    "text": "So it's based on a\nseries of reductions. On the one hand, we're going to\nstart with something called--",
    "start": "1833840",
    "end": "1841280"
  },
  {
    "text": "OK, so we have map\nholding on the left. We're going to\nconvert map folding",
    "start": "1841280",
    "end": "1847870"
  },
  {
    "text": "into a different presentation,\nwhich is NEWS labeling. ",
    "start": "1847870",
    "end": "1854710"
  },
  {
    "text": "We're going to convert that\ninto something called a top edge view. ",
    "start": "1854710",
    "end": "1861630"
  },
  {
    "text": "We're going to convert\nthat into a ray diagram. ",
    "start": "1861630",
    "end": "1867659"
  },
  {
    "text": "And the last part, which I\nwon't talk too much about, is we convert that into\nsomething called a hidden tree",
    "start": "1867660",
    "end": "1873080"
  },
  {
    "text": "problem.  Each of these steps is\nfairly straightforward,",
    "start": "1873080",
    "end": "1878130"
  },
  {
    "text": "but there are obviously\na lot of them.  But in the end, you get a\npolynomial time algorithm",
    "start": "1878130",
    "end": "1884680"
  },
  {
    "text": "to solve this, which implies\nyou get a polynomial time algorithm to solve this. And I'll talk mostly\nabout these reductions.",
    "start": "1884680",
    "end": "1891309"
  },
  {
    "text": "It's the same idea\nin NP-hardness. We use reductions from a\nhard problem to our problem. In this case, we're\ndoing the reverse.",
    "start": "1891310",
    "end": "1898730"
  },
  {
    "text": "We're reducing our problem\nto an easier problem, so that by the end we\nget something that's so easy we know how to solve it.",
    "start": "1898730",
    "end": "1904380"
  },
  {
    "text": "The reductions are useful\nboth for positive results and negative results. So let me show you\nvisually some--",
    "start": "1904380",
    "end": "1911190"
  },
  {
    "start": "1911000",
    "end": "2018000"
  },
  {
    "text": "oh, before we get\nto the proof, I wanted to mention this\npuzzle which you probably folded in problem set one.",
    "start": "1911191",
    "end": "1919770"
  },
  {
    "text": "It's a map folding problem. It's a 3-by-3 map,\nand so we didn't have any good algorithms\nto solve them.",
    "start": "1919770",
    "end": "1926440"
  },
  {
    "text": "So we used a not\nso good algorithm-- namely exhaustive enumeration. We enumerated all possible\nfolded states of a 3-by-3 map.",
    "start": "1926440",
    "end": "1934230"
  },
  {
    "text": "We drew them out graphically. There's a scroll bar here,\nso you don't see them all. But we put them in\na giant-- I forget,",
    "start": "1934230",
    "end": "1941360"
  },
  {
    "text": "there's 1,000\nfolded states or so, so it's like 100-by--\nwhatever-- 10 array.",
    "start": "1941360",
    "end": "1950500"
  },
  {
    "text": "And for each of\nthem-- so here's where you're designing your pattern. So you could make holes.",
    "start": "1950500",
    "end": "1956000"
  },
  {
    "text": "You could put in patterns. This is sort of an early design\nwhere it would spell MIT. The hole would show\nthe I on another side,",
    "start": "1956000",
    "end": "1962060"
  },
  {
    "text": "so it's equivalent to\nthe puzzle you solve. And this is what\nthe top looks like.",
    "start": "1962060",
    "end": "1968120"
  },
  {
    "text": "This is what the\nbottom looks like. So you can hover over these\nand change the letters that appeared, and then\nit would show you",
    "start": "1968120",
    "end": "1974424"
  },
  {
    "text": "what every single\nstate would look like, and it would color it in yellow\nif one side looked like MIT, and it would color it in red\nif both sides look like MIT.",
    "start": "1974424",
    "end": "1982060"
  },
  {
    "text": "And the point was\nto verify there was exactly one solution\nfor that puzzle. And so we kept-- we\nwould fold things",
    "start": "1982060",
    "end": "1989080"
  },
  {
    "text": "to make it a tricky fold. Then we put into the\nsoftware and label things accordingly, then\nput into the software",
    "start": "1989080",
    "end": "1995510"
  },
  {
    "text": "and see is there unique folding? And then we could add in\nextra misleading clues here,",
    "start": "1995510",
    "end": "2002560"
  },
  {
    "text": "and see did they accidentally\nmake an extra solution? So we could add in\nextra stuff to pack in.",
    "start": "2002560",
    "end": "2008080"
  },
  {
    "text": "As much irrelevant stuff as we\ncould, and still make it unique so it's more challenging.",
    "start": "2008080",
    "end": "2013549"
  },
  {
    "text": "That's a nice use of exponential\nalgorithms to design puzzles.",
    "start": "2013550",
    "end": "2018552"
  },
  {
    "start": "2018000",
    "end": "2139000"
  },
  {
    "text": "All right, but\nback to this proof. ",
    "start": "2018552",
    "end": "2023790"
  },
  {
    "text": "So I have here a much\nsimpler map than this one.",
    "start": "2023790",
    "end": "2028880"
  },
  {
    "text": "This is what we\ncall the NEW map. N-E-W.",
    "start": "2028880",
    "end": "2034030"
  },
  {
    "text": "So the labeling\nhere is very simple. If you look at this crease\npattern, by [INAUDIBLE],",
    "start": "2034030",
    "end": "2039760"
  },
  {
    "text": "there's got to be three of one\ntype and one of the other type. So just label each vertex\nby which way is unique.",
    "start": "2039760",
    "end": "2047690"
  },
  {
    "text": "So from here, the\nNorth direction is the uniquely label-- it's the\nmountain among three valleys.",
    "start": "2047690",
    "end": "2053599"
  },
  {
    "text": "And then this vertex--\nthe East label-- is the mountain\namong three valleys, and then the next one is the\nWest label among three valleys.",
    "start": "2053600",
    "end": "2060791"
  },
  {
    "text": "Of course it doesn't\nhave to be like that. It could, for\nexample, you can have three mountains at a vertex,\nbut then the label of this guy's",
    "start": "2060791",
    "end": "2068110"
  },
  {
    "text": "going to be W. It's going\nto be the one that's unique among the other three.",
    "start": "2068110",
    "end": "2073620"
  },
  {
    "text": "So if you fold this\nmap, it looks like this. I have one here, but it's\na little hard to see.",
    "start": "2073620",
    "end": "2080489"
  },
  {
    "text": "We've got lots of back\nand forth on the top edge. Some orienting it so that\nthe-- we've got 2 by n maps.",
    "start": "2080489",
    "end": "2088760"
  },
  {
    "text": "So there's two\ncritical features. There's the center line. I'll call that the\nspine of the map.",
    "start": "2088760",
    "end": "2094219"
  },
  {
    "text": "There's the top side\nand the bottom side. When you fold\nthat-- this is just",
    "start": "2094219",
    "end": "2099500"
  },
  {
    "text": "a sequence of simple folds. You see at this last fold, the\ntop side and the bottom side",
    "start": "2099500",
    "end": "2106099"
  },
  {
    "text": "come together, and the\nspine is-- stays together.",
    "start": "2106100",
    "end": "2111500"
  },
  {
    "text": "So when I orient it like\nthis as in the picture, the top side is where originally\nthe top and the bottom",
    "start": "2111500",
    "end": "2119350"
  },
  {
    "text": "of the map all come to here\nbecause of that spine fold, and the spine folds\nare all down here.",
    "start": "2119350",
    "end": "2127020"
  },
  {
    "text": "You can't see them\nhere, but there's you can see them at\nthe bottom there. There's some kind of\nconnections on the bottom,",
    "start": "2127020",
    "end": "2133880"
  },
  {
    "text": "but there's this nice relatively\none-dimensional picture up here. So we're going to draw that.",
    "start": "2133880",
    "end": "2142340"
  },
  {
    "start": "2139000",
    "end": "2430000"
  },
  {
    "text": "This is the top edge view. Got clipped a little\nbit, but there's one more segment at the top.",
    "start": "2142340",
    "end": "2148960"
  },
  {
    "text": "So that is just this.  See it?",
    "start": "2148960",
    "end": "2155400"
  },
  {
    "text": "Now there's also\nthese blue lines. The blue lines correspond to\nwhat's going on at the bottom",
    "start": "2155400",
    "end": "2160420"
  },
  {
    "text": "from the spine. Because if you think\nabout it, you've",
    "start": "2160420",
    "end": "2166520"
  },
  {
    "text": "got the-- in a\n2-by-n map-- you've got the top panels and these\nedges making the top edge.",
    "start": "2166520",
    "end": "2172622"
  },
  {
    "text": "And you've also got the\nbottom panels and these edges making the bottom edge. They come in pairs. These guys are paired up.",
    "start": "2172622",
    "end": "2177811"
  },
  {
    "text": "These guys are paired up,\nand so on down the line because they are\njoined by a spine edge.",
    "start": "2177811",
    "end": "2183630"
  },
  {
    "text": "Those spine edges\ncorrespond to the things on the bottom of the\nfolding, and they",
    "start": "2183630",
    "end": "2189560"
  },
  {
    "text": "need to not cross each other. And that's what's illustrated\nby the blue connections. So the very top edge is paired\nwith the very bottom edge.",
    "start": "2189560",
    "end": "2199130"
  },
  {
    "text": "These two-- this panel\nhere and the back panel here-- are connected\non the bottom.",
    "start": "2199130",
    "end": "2204370"
  },
  {
    "text": "And that-- I'm sorry,\nthat's not true. This one is paired\nwith this one.",
    "start": "2204370",
    "end": "2210360"
  },
  {
    "text": "The top one is paired\nwith the second one. So it's actually these two\nare connected on the bottom. That's this little connection\nhere, and then these guys--",
    "start": "2210360",
    "end": "2220220"
  },
  {
    "text": "this wraps around everything. That's that connection. But what you can't see\nit in this folding--",
    "start": "2220220",
    "end": "2226600"
  },
  {
    "text": "because it's hidden inside--\nis that within this connection on the bottom, there's this\nconnection on the bottom.",
    "start": "2226600",
    "end": "2231910"
  },
  {
    "text": "And within that one,\nthere's this connection. Now this is OK. Might look like they're crossing\nbecause they're overlapping.",
    "start": "2231910",
    "end": "2237760"
  },
  {
    "text": "But as long as they\nare nested-- as long as you don't start from\ninside here and go to outside.",
    "start": "2237760",
    "end": "2244190"
  },
  {
    "text": "That would be a crossing. You start inside,\nyou should end inside like in all these pictures.",
    "start": "2244190",
    "end": "2249460"
  },
  {
    "text": "If you start outside,\nyou should end outside. So that's why-- these guys\nare disjoint, so that's OK.",
    "start": "2249460",
    "end": "2255030"
  },
  {
    "text": "This is nested in\nthat, so it's OK. Kind of like\nbalance parentheses. And so that's what it makes.",
    "start": "2255030",
    "end": "2261080"
  },
  {
    "text": "A top valid top edge view. What's nice about this is it's\na one-dimensional diagram. What's not nice is it has all\nthese crossings because there's",
    "start": "2261080",
    "end": "2268111"
  },
  {
    "text": "the blue stuff on top\nof the black stuff. So it's a little\nhard to find-- we're",
    "start": "2268111",
    "end": "2273459"
  },
  {
    "text": "trying to find a\nvalid folding state. We're trying to\nfind one of these. ",
    "start": "2273459",
    "end": "2279610"
  },
  {
    "text": "We're not restricting ourselves\nto simple folds here yet. Simple map folding we already\nsolved in lecture two.",
    "start": "2279610",
    "end": "2285810"
  },
  {
    "text": "So this is all-- I should've\nsaid non-simple folds. ",
    "start": "2285810",
    "end": "2293380"
  },
  {
    "text": "That's what makes\nit hard, and that's what's still open\nfor 3-by-n maps if you don't know how to do it.",
    "start": "2293380",
    "end": "2299460"
  },
  {
    "text": "But for 2-by-n maps,\nwe've made two steps here. We have another view,\nwhich is the ray diagram,",
    "start": "2299460",
    "end": "2305450"
  },
  {
    "text": "and this is really\nspecific to 2-by-n. And it lets us reduce\nto a tree problem. So before we get there,\nlet's talk in general",
    "start": "2305450",
    "end": "2314540"
  },
  {
    "text": "about the top edge view. You can actually convert from\nthe North, East, West, South",
    "start": "2314540",
    "end": "2319710"
  },
  {
    "text": "labeling to a top edge\nview in the following way.",
    "start": "2319710",
    "end": "2324750"
  },
  {
    "text": "Whenever-- and you can kind\nof see what's going on. So first we have an n. So we've got these\ntwo guys, which",
    "start": "2324750",
    "end": "2329970"
  },
  {
    "text": "are just paired\ntogether happily. That's the beginning of the map. Then we turn left, and we've got\nthis guy paired with this guy.",
    "start": "2329970",
    "end": "2339004"
  },
  {
    "text": "And so, in general,\nwhenever you have a North, you turn left with\nyour two guys.",
    "start": "2339004",
    "end": "2344202"
  },
  {
    "text": "So that's what happens. Then we hit an East in\nthe map, and what happens here is this guy turns right,\nbut this one turns left.",
    "start": "2344202",
    "end": "2351910"
  },
  {
    "text": "This is what you might\ncall an inside turn. It's like an inside\nreverse fold in origami. And in general, whenever\nyou have an East,",
    "start": "2351910",
    "end": "2357970"
  },
  {
    "text": "you turn inside like that. So this guy's paired\nwith that one, and now this guy's\npaired with that one.",
    "start": "2357970",
    "end": "2363990"
  },
  {
    "text": "They both turn in. And then it's symmetric. Next one is a w, which is\nthe opposite of an e, which",
    "start": "2363990",
    "end": "2370370"
  },
  {
    "text": "means you turn out here. And in general, whenever you\nhave a West, you turn out.",
    "start": "2370370",
    "end": "2376900"
  },
  {
    "text": "And a South, you turn right. So those are the\nfour possible things you could imagine when you\nhave a pair of things turning,",
    "start": "2376900",
    "end": "2382510"
  },
  {
    "text": "and those exactly correspond\nto N, E, W, and S. So it's clear what you need\nto do in this situation,",
    "start": "2382510",
    "end": "2389780"
  },
  {
    "text": "but there's flexibility, right? For example, this guy--\nwhen you turn out-- here",
    "start": "2389780",
    "end": "2395980"
  },
  {
    "text": "I turned out to the\nvery next layer, but this could have\nturned out to go up here. Would that be OK?",
    "start": "2395980",
    "end": "2402540"
  },
  {
    "text": "Ah, no. If this one turned\nout to go up here,",
    "start": "2402540",
    "end": "2409020"
  },
  {
    "text": "that edge up there would be\npaired with this one down here. So there'd be a blue\nline going like that,",
    "start": "2409020",
    "end": "2414890"
  },
  {
    "text": "and that would be a\ncrossing situation because that blue line\nwould cross this one. Because it starts inside\nand it goes to outside.",
    "start": "2414890",
    "end": "2422329"
  },
  {
    "text": "So it's a little tricky. This definitely gives you\nsome of the layer constraints, but it doesn't\ncheck for crossings.",
    "start": "2422330",
    "end": "2428600"
  },
  {
    "text": "Which is the big\nchallenge in this problem. So we're going to\nsimplify this diagram.",
    "start": "2428600",
    "end": "2433990"
  },
  {
    "start": "2430000",
    "end": "2682000"
  },
  {
    "text": "So just think about\ntop edge views. Forget about map folding now. You can forget about\nthe previous layers,",
    "start": "2433990",
    "end": "2439760"
  },
  {
    "text": "and we are now focusing\non this reduction. So we've got top edge view\nconverting to ray diagrams.",
    "start": "2439760",
    "end": "2447900"
  },
  {
    "text": "You can see it's much simpler. This is the ray diagram\nof that picture. And essentially--\nthere's two ways",
    "start": "2447900",
    "end": "2452980"
  },
  {
    "text": "to think about what we're doing. Instead of having two edges,\nand we track two edges turning, we just want one edge.",
    "start": "2452980",
    "end": "2458992"
  },
  {
    "text": "That's one thing we're doing. You can think of that as\ntracking the spine instead",
    "start": "2458992",
    "end": "2464859"
  },
  {
    "text": "of the top and the bottom sides. But it's a little-- ray diagrams\nare going to get confusing.",
    "start": "2464860",
    "end": "2470795"
  },
  {
    "text": "I'll just tell you\nthat right now. Every time I look\nat it, I understand",
    "start": "2470795",
    "end": "2476039"
  },
  {
    "text": "it a little bit\nmore, but it's not going to be obviously that\nthis is equivalent to this. I'll just tell you--\nhere's an alternate way",
    "start": "2476040",
    "end": "2481880"
  },
  {
    "text": "to think about it. Basically, the vertical--\nthe y direction here is going to\nbe nesting depth.",
    "start": "2481880",
    "end": "2489080"
  },
  {
    "text": "So whenever we go in\nlike this, we go deeper. ",
    "start": "2489080",
    "end": "2495480"
  },
  {
    "text": "So for whatever reason,\nI flipped the labeling, but it is indeed East. When you go in, you go down.",
    "start": "2495480",
    "end": "2503237"
  },
  {
    "text": "I should have just moved these\ntwo figures so they correspond, but when you go East you go\ndown a layer because you're",
    "start": "2503237",
    "end": "2511150"
  },
  {
    "text": "nesting deeper. And when you go West,\nyou're going out, so you go up a layer in this\nnew weird ray diagram view.",
    "start": "2511150",
    "end": "2518859"
  },
  {
    "text": "And North and South turn out\nto not turnaround in this view. We're just going to\nfire a ray downward,",
    "start": "2518860",
    "end": "2525775"
  },
  {
    "text": "and there's either a\nNorth ray-- a blue one-- or a South ray-- a red one. ",
    "start": "2525775",
    "end": "2532390"
  },
  {
    "text": "And so if you follow\nthis diagram, it's N-E-W. So first we have an N, which\nmeans we shoot a ray down.",
    "start": "2532390",
    "end": "2538950"
  },
  {
    "text": "Then we have an E, which\nmeans we turn downwards. And then we have a W, which\nmeans we turn to go up a layer.",
    "start": "2538950",
    "end": "2546642"
  },
  {
    "text": "And I haven't told you what\nthe constraints are here, but I claim this is a valid\nfolding just like that one.",
    "start": "2546642",
    "end": "2552920"
  },
  {
    "text": "And it's obviously a\nlot easier to draw. It's a much slower complexity. But the cool thing\nis you no longer",
    "start": "2552920",
    "end": "2559380"
  },
  {
    "text": "have these crossing parts. So let me show you--\nfirst, let me tell you what the constraints are.",
    "start": "2559380",
    "end": "2565559"
  },
  {
    "text": "So in general, you're going\nto have lots of downward rays. This is a North. This is a South. A North, a South.",
    "start": "2565560",
    "end": "2571080"
  },
  {
    "text": "So if you had like N, S,\nN, S, in your pattern, it's just going to\nbe a straight segment with downward rays\nof different colors.",
    "start": "2571080",
    "end": "2577950"
  },
  {
    "text": "First constraint is whenever you\nhave a an N ray-- a North ray-- it has to hit another North\nray or just go off to infinity.",
    "start": "2577950",
    "end": "2585190"
  },
  {
    "text": "And the same-- South rays\ncan only hit South rays or go off to infinity. So they line up in\nthis way, but you",
    "start": "2585190",
    "end": "2591090"
  },
  {
    "text": "can stretch the x-coordinate\nto do whatever you want. This corresponds to basically\njumping over a bunch of layers.",
    "start": "2591090",
    "end": "2597849"
  },
  {
    "text": "When you turn in\nyour folded state, you can skip a bunch of\nlayers and just go up here. So that corresponds to jumping\nover a bunch of folds here.",
    "start": "2597850",
    "end": "2608209"
  },
  {
    "text": "But in particular\nwe get these things called constrained segments. Constrained segments\nare portions of this black spine between\ntwo rays that below it only",
    "start": "2608209",
    "end": "2619870"
  },
  {
    "text": "see black. OK, so for example, this\none is unconstrained, because below it, you\ncan see off to infinity.",
    "start": "2619870",
    "end": "2626240"
  },
  {
    "text": "So that's unconstrained. We don't care about that one. But among unconstrained\nsegments-- these are two\nconstrained segments--",
    "start": "2626240",
    "end": "2631780"
  },
  {
    "text": "we want that all of the rays\nthat they see below them-- so here I see one red\nray, one blue ray-- I want",
    "start": "2631780",
    "end": "2637450"
  },
  {
    "text": "the number of reds\nand blues to be equal. So this is valid because\nthere's one red, one blue.",
    "start": "2637450",
    "end": "2643080"
  },
  {
    "text": "This one is invalid because\nthere's two blue and one red. This turns out to be\nthe right constraint.",
    "start": "2643080",
    "end": "2649060"
  },
  {
    "text": "Essentially this is saying\nhowever much you spiral, you should spiral. That's the intuition.",
    "start": "2649060",
    "end": "2655500"
  },
  {
    "text": "So here you're spiraling\ntwice, unspiraling once. So you're trapped inside, and\nso these folds cannot actually",
    "start": "2655500",
    "end": "2661920"
  },
  {
    "text": "come together. The rays coming\ntogether correspond to a nice nesting\nbetween two North folds.",
    "start": "2661920",
    "end": "2670780"
  },
  {
    "text": "So it's not obvious,\nbut this turns out to be the only\nconstraints you have. The black should\nnot cross itself.",
    "start": "2670780",
    "end": "2676540"
  },
  {
    "text": "Constraint segments should\nbe valid in this way, and blue should hit blue\nand red should hit red.",
    "start": "2676540",
    "end": "2682410"
  },
  {
    "text": "So that's not obvious,\nbut it's true, and then you can take very\ncomplicated diagrams like this",
    "start": "2682410",
    "end": "2688369"
  },
  {
    "text": "and simplify them into\nthese nice pictures. ",
    "start": "2688370",
    "end": "2693559"
  },
  {
    "text": "So these are two\ndifferent foldings of the same pattern,\nwhich I guess",
    "start": "2693560",
    "end": "2699170"
  },
  {
    "text": "is N-E-N-- I can see\nthat easily here.",
    "start": "2699170",
    "end": "2705160"
  },
  {
    "text": "You could have also\nextracted it from here. There's two foldings\nbecause these two layers",
    "start": "2705160",
    "end": "2710410"
  },
  {
    "text": "could go here in the middle. Or they could be pushed\nup to fit in here, and then we get this picture.",
    "start": "2710410",
    "end": "2717214"
  },
  {
    "text": "And in the ray diagram--\nyou can see this pretty easily-- either you have\nthese n rays just both go off",
    "start": "2717215",
    "end": "2723120"
  },
  {
    "text": "to infinity, and this is an\nunconstrained segment so we don't care about that there's\nonly one North ray below.",
    "start": "2723120",
    "end": "2730390"
  },
  {
    "text": "Or, you can extend\nthe x, because I can stretch the\nx parts however I want and make these blue\nsegments align with each other.",
    "start": "2730390",
    "end": "2737339"
  },
  {
    "text": "And that corresponds\nto this folding. So really, all folded\nstates of the original thing are represented by\nthe ray diagram.",
    "start": "2737339",
    "end": "2744170"
  },
  {
    "text": "Of course, if I had any\nW, this would be valid, but this would not be that.",
    "start": "2744170",
    "end": "2749350"
  },
  {
    "text": "N-E-S-- blast from the past. If I had N-E-S, then this would\nbe blue, this would be red,",
    "start": "2749350",
    "end": "2757866"
  },
  {
    "text": "and so this would be valid. But this would be\ninvalid, and so on. So it's obviously a lot\neasier conceptually,",
    "start": "2757866",
    "end": "2764000"
  },
  {
    "text": "but you can also-- and here's\na more complicated algorithm. You take a really crazy map. This notation, by the\nway, was introduced",
    "start": "2764000",
    "end": "2770770"
  },
  {
    "text": "by Jacques Justin\nlike late 1980s. You may remember his name\nfrom Kawasaki-Justin theorem.",
    "start": "2770770",
    "end": "2777840"
  },
  {
    "text": "So at the same time he\nwas looking at map folding and he came up\nwith this notation, the ray diagram was introduced\nin the open problem session",
    "start": "2777840",
    "end": "2784839"
  },
  {
    "start": "2783000",
    "end": "2974000"
  },
  {
    "text": "in this class two years ago--\nor actually five years ago if I recall correctly-- by\nDavid Charlton and Yoyo Zhou.",
    "start": "2784840",
    "end": "2794020"
  },
  {
    "text": "And then it was picked\nup again two years ago, and finally we took\nthis ray diagram and came up with an algorithm.",
    "start": "2794020",
    "end": "2799300"
  },
  {
    "text": "So how does the algorithm work? Here's a ray\ndiagram-- the black, and the red, and the blue.",
    "start": "2799300",
    "end": "2805750"
  },
  {
    "text": "We observe that the blank\nspace here between the spine",
    "start": "2805750",
    "end": "2811800"
  },
  {
    "text": "stuff-- between all the black--\nis kind of a tree structure.",
    "start": "2811800",
    "end": "2817040"
  },
  {
    "text": "You've got-- and\nthat's what's drawn in cyan with the red dots. So if you draw a node every time\nyou turn around on the outside.",
    "start": "2817040",
    "end": "2826160"
  },
  {
    "text": "Then you say, well, I can get\nfrom this node to this one, so I'm going to draw\na segment there.",
    "start": "2826160",
    "end": "2831184"
  },
  {
    "text": "And I can get from\nthis node to this one without crossing any black,\nso I'll draw a segment there. That's sort of it on that side.",
    "start": "2831184",
    "end": "2838139"
  },
  {
    "text": "There's nothing else down here. That sort of doesn't count. But here's there's\nanother dot, and I can get from this one\nto there by going out",
    "start": "2838139",
    "end": "2844920"
  },
  {
    "text": "here without crossing black. Here to here, here to over\nhere without crossing black,",
    "start": "2844920",
    "end": "2850470"
  },
  {
    "text": "and so on. So that cyan structure is\na tree-- has no cycles.",
    "start": "2850470",
    "end": "2855490"
  },
  {
    "text": "Which in general is good\nnews for algorithms. Trees are relatively\neasy to find algorithms",
    "start": "2855490",
    "end": "2860569"
  },
  {
    "text": "for using dynamic programming. If you've seen dynamic\nprogramming for trees, this is not like that.",
    "start": "2860570",
    "end": "2866369"
  },
  {
    "text": "It's a little different because\nwe don't know what the tree is. We have to figure\nout what the tree is. But basically, we can\nguess the tree recursively.",
    "start": "2866370",
    "end": "2874450"
  },
  {
    "text": "So there's some first\nnode-- I don't know, maybe it's this one--\njust guess that.",
    "start": "2874450",
    "end": "2879880"
  },
  {
    "text": "Not randomly, but guess\nmeans try all the options. So you guess some node, and\nthen OK, we've got-- maybe",
    "start": "2879880",
    "end": "2885780"
  },
  {
    "text": "we've got two subtrees. Maybe we've got three. I think that's about\nall there could be.",
    "start": "2885780",
    "end": "2892400"
  },
  {
    "text": "And so, just guessed that,\nand then so recursively guess a subtree here and\na subtree here.",
    "start": "2892400",
    "end": "2897440"
  },
  {
    "text": "And each of the sub\ntrees corresponds to a sub segment of this--\nof the original map.",
    "start": "2897440",
    "end": "2904820"
  },
  {
    "text": "The spine, roughly speaking. And roughly speaking,\nthese portions",
    "start": "2904820",
    "end": "2910530"
  },
  {
    "text": "do not interact with each other. There's this issue of\nhow the rays align, and that's sort of the challenge\nin getting this algorithm",
    "start": "2910530",
    "end": "2916570"
  },
  {
    "text": "to work. But you can essentially\nlocally check whether a subtree\nis good enough. That it will interact OK\nwith a different subtree,",
    "start": "2916570",
    "end": "2923590"
  },
  {
    "text": "and just split this\nproblem up recursively guessing all the way. Effectively trying all\ntrees, but in polynomial time",
    "start": "2923590",
    "end": "2929370"
  },
  {
    "text": "instead of exponential time. Forget the running time is\nsomething like n to the 10 or some really big constant,\nbut at least finally we",
    "start": "2929370",
    "end": "2937000"
  },
  {
    "text": "know 2-by-n maps can be\nsolved in polynomial time. We give the mountain\nvalley assignment. We still don't\nknow about 3-by-n.",
    "start": "2937000",
    "end": "2944820"
  },
  {
    "text": "That's the open question, and\nthese techniques unfortunately don't seem to apply. You definitely don't\nget a tree anymore.",
    "start": "2944820",
    "end": "2950894"
  },
  {
    "text": "You might get some\nnice structure that's kind of vaguely tree\nlike, but this was already",
    "start": "2950894",
    "end": "2955930"
  },
  {
    "text": "super complicated. So we've gotten stuck here. Any questions? ",
    "start": "2955930",
    "end": "2963655"
  },
  {
    "text": "All right. That's it. ",
    "start": "2963655",
    "end": "2974497"
  }
]