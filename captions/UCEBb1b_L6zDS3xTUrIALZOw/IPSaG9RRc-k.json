[
  {
    "start": "0",
    "end": "12837"
  },
  {
    "text": "JASON KU: I'm Jason. Hopefully you guys\nsaw me on Tuesday. This is our first ever\n6.006 problem session",
    "start": "12837",
    "end": "20900"
  },
  {
    "text": "that we'll be having\non Fridays this term. It's really an experiment. We've never done this before.",
    "start": "20900",
    "end": "27100"
  },
  {
    "text": "But one of the things that we\nwere discussed while preparing for this class is that we\nhave two different methods",
    "start": "27100",
    "end": "34310"
  },
  {
    "text": "of instruction, formally,\nusually in this class-- a lecture, which is\nthere to present you with",
    "start": "34310",
    "end": "41239"
  },
  {
    "text": "the fundamental material,\nthe data structures, and the algorithms that are the\nbase, the foundation of what--",
    "start": "41240",
    "end": "49210"
  },
  {
    "text": "how you will be approaching\nproblems in this class; and then the problem sets\nthat you will work on,",
    "start": "49210",
    "end": "58440"
  },
  {
    "text": "our applications\nof that material. But there's usually\na much different feel",
    "start": "58440",
    "end": "64250"
  },
  {
    "text": "between those problems\nthat we'll give you then the underlying\nfoundational material.",
    "start": "64250",
    "end": "69640"
  },
  {
    "text": "So the application\nof that material will feel very different. And a lot of times,\nthere are tricks to approaching the problems\nor ways of approaching",
    "start": "69640",
    "end": "78560"
  },
  {
    "text": "the problems that\nyou kind of just have to figure out by\nworking on the problem,",
    "start": "78560",
    "end": "83820"
  },
  {
    "text": "sometimes going to office hours. But what we want to\ndo this term was to--",
    "start": "83820",
    "end": "90170"
  },
  {
    "text": "since we had the opportunity\nto be recorded by OCW, was to record us going\nthrough some problems",
    "start": "90170",
    "end": "97520"
  },
  {
    "text": "that we've had on\nproblem sets in the past so you could see how\nwe would approach",
    "start": "97520",
    "end": "102650"
  },
  {
    "text": "working on these problems\nthat you'll be working on, at least in a similar vein.",
    "start": "102650",
    "end": "107659"
  },
  {
    "text": "So that's the goal of\nthese problem sessions. In the past, for OCW, we\nhave recorded a recitation,",
    "start": "107660",
    "end": "115020"
  },
  {
    "text": "but we felt that that was\na little less useful to you guys, because\nrecitation is meant for interaction, questions--\none-on-one questions.",
    "start": "115020",
    "end": "123260"
  },
  {
    "text": "We want to be a safe\nspace for you guys to interact with\nthe material with-- in a smaller environment\nthat might not be recorded.",
    "start": "123260",
    "end": "131569"
  },
  {
    "text": "So that's the goal of this-- these sessions that we\nwill be doing on Fridays.",
    "start": "131570",
    "end": "137660"
  },
  {
    "text": "Any questions about what\nwe're going to be doing today? OK. So we do have a handout up\nhere by the door, which we may",
    "start": "137660",
    "end": "148240"
  },
  {
    "text": "or may not have in the future. This is all an\nexperiment, so you'll have to work with us as\nwe figure this stuff out.",
    "start": "148240",
    "end": "154280"
  },
  {
    "text": "They were posted on LMOD about\nan hour before this session. We'll try to keep\nthat as a standard.",
    "start": "154280",
    "end": "163189"
  },
  {
    "text": "But it just shows\nyou the questions we'll work on today\nin the session.",
    "start": "163190",
    "end": "168935"
  },
  {
    "text": " It isn't just the problem\nset from last term.",
    "start": "168935",
    "end": "175520"
  },
  {
    "text": "It's a selection of problems\nfrom previous terms, and some of them\nhave been edited to be maybe a little shorter\nand things like that.",
    "start": "175520",
    "end": "182880"
  },
  {
    "text": "So what we're\ngoing to do is just go through the\nproblems one by one. I'll try to just show you how\nI'm approaching the problems,",
    "start": "182880",
    "end": "190370"
  },
  {
    "text": "but at any point, if you want\nto, you can ask questions. That's fine. OK?",
    "start": "190370",
    "end": "195380"
  },
  {
    "text": "All right, so the first\nquestion we have is-- has a setup that's\nvery similar to what",
    "start": "195380",
    "end": "200870"
  },
  {
    "text": "you will have on your Pset1. It's essentially saying that\nit has usually many parts.",
    "start": "200870",
    "end": "208670"
  },
  {
    "text": "This has two parts, an\nA part and a B part. I've omitted a B\nand a C that that",
    "start": "208670",
    "end": "215780"
  },
  {
    "text": "was on last term's problem set. And it has five functions\neach, and you're trying",
    "start": "215780",
    "end": "220939"
  },
  {
    "text": "to order them increasing as-- based on their\nasymptotic behavior.",
    "start": "220940",
    "end": "226349"
  },
  {
    "text": "So here are the\nfunctions that we have. Maybe I'll stick it up instead.",
    "start": "226350",
    "end": "232400"
  },
  {
    "start": "232400",
    "end": "238299"
  },
  {
    "text": "All right, so we have a\nfew sets of functions, and we just want to order them. And some of the functions may\nbe asymptotically equivalent--",
    "start": "238300",
    "end": "249730"
  },
  {
    "text": "in which case, when we\nare ordering these things, we're going to put\nthose numbers in a set. So what we have as an\nexample are three functions--",
    "start": "249730",
    "end": "259480"
  },
  {
    "text": "n, root n, and n plus root n.",
    "start": "259480",
    "end": "264490"
  },
  {
    "text": "This is one, two, three. And what we're going\nto ask you to do is order those functions based\non their asymptotic complexity.",
    "start": "264490",
    "end": "272740"
  },
  {
    "text": "So hopefully you guys\ncan get this one. Which one's the slowest\ngrowth in terms--",
    "start": "272740",
    "end": "279730"
  },
  {
    "text": "root n, so number two. So if we say f of 2\nwill be our first one.",
    "start": "279730",
    "end": "285340"
  },
  {
    "text": "And then, how about\nthe other two? STUDENT: [INAUDIBLE] JASON KU: They're the same. They're both order n.",
    "start": "285340",
    "end": "292060"
  },
  {
    "text": "So we would put in set\nbrackets f1 and f3.",
    "start": "292060",
    "end": "297660"
  },
  {
    "text": "And on your problem set, if you\nput just 2, and 1, and 3 here, that would probably be fine.",
    "start": "297660",
    "end": "304120"
  },
  {
    "text": "But if you were to\nput 2 over here or not have these curly\nbraces around here,",
    "start": "304120",
    "end": "311210"
  },
  {
    "text": "those would not be correct, and\nyou'd get points marked off. Does that make sense? OK, so we're going to approach\nthe first set of problems--",
    "start": "311210",
    "end": "320000"
  },
  {
    "text": "first set of functions,\nwhich is a little different than the\nsecond set of functions. Hopefully this one's\na little easier.",
    "start": "320000",
    "end": "325832"
  },
  {
    "text": " One of the common\napproaches that I have in going through these things--",
    "start": "325832",
    "end": "332650"
  },
  {
    "text": "some of these are in a\nform that is hard for me to tell how they would\ncompare to other things.",
    "start": "332650",
    "end": "339430"
  },
  {
    "text": "Actually, most of these\nare fine, but in general-- can anyone, just by\neyeballing, tell me",
    "start": "339430",
    "end": "346600"
  },
  {
    "text": "an order that works for them? ",
    "start": "346600",
    "end": "351820"
  },
  {
    "text": "Yeah? STUDENT: OK-- JASON KU: This is\na little difficult to do on the spot\nwith five functions.",
    "start": "351820",
    "end": "358427"
  },
  {
    "text": "STUDENT: Yeah. A little iffy about f1. JASON KU: OK. STUDENT: But f5 is definitely\nsmaller than f2, which is--",
    "start": "358427",
    "end": "364370"
  },
  {
    "text": "smaller than f2 which\nis smaller than f4. And f1 in iffy. JASON KU: OK, great.",
    "start": "364370",
    "end": "369910"
  },
  {
    "text": "That's excellent. So what we've got here\nis, on f2, f3, and f5,",
    "start": "369910",
    "end": "376150"
  },
  {
    "text": "you kind of have\nthis n leading term. If we factor an n out of that,\nthen we're comparing log with--",
    "start": "376150",
    "end": "384699"
  },
  {
    "text": "basically, we look over here\nat the polynomial function. This one's smallest out of\nthem, and then the log factor",
    "start": "384700",
    "end": "392140"
  },
  {
    "text": "is smaller than a\npolynomial factor. Log grows slower than linear. And so this guy is smaller\nthan f2 is smaller than f3.",
    "start": "392140",
    "end": "402250"
  },
  {
    "text": "That's great-- that\nyour colleague said.  Hopefully proved in\nrecitation today--",
    "start": "402250",
    "end": "410080"
  },
  {
    "text": "no, Wednesday-- this nice fact,\nI guess, that a is less than,",
    "start": "410080",
    "end": "423340"
  },
  {
    "text": "asymptotically,\nthis polynomial-- this log n to any power\nis asymptotically less",
    "start": "423340",
    "end": "431050"
  },
  {
    "text": "than any polynomial for\nany positive a and b. And in particular, there's\nactually a stronger thing",
    "start": "431050",
    "end": "437169"
  },
  {
    "text": "you can say, which is little o. Did you guys talk about\nlittle o in recitation at all?",
    "start": "437170",
    "end": "443229"
  },
  {
    "text": "Probably not. It's kind of the same as big\nO, except is big O minus theta.",
    "start": "443230",
    "end": "449930"
  },
  {
    "text": "So things that are\nasymptotically equivalent are not going to be\nincluded in this set.",
    "start": "449930",
    "end": "455379"
  },
  {
    "text": "So actually, these\nthings are strictly asymptotic-- grow\nstrictly asymptotically slower than any polynomial.",
    "start": "455380",
    "end": "461510"
  },
  {
    "text": "Does that make sense? OK. So knowing this identity,\nor this relation,",
    "start": "461510",
    "end": "469262"
  },
  {
    "text": "can we say anything about f1? ",
    "start": "469262",
    "end": "474557"
  },
  {
    "text": "Maybe someone else-- STUDENT: Any a and b, right? JASON KU: Any a and b--\nany positive a and B-- anyone else have a guess?",
    "start": "474557",
    "end": "481669"
  },
  {
    "text": "Yeah? STUDENT: That f1\nis less than f5-- JASON KU: Yeah, f1 is\nless than f5, right?",
    "start": "481670",
    "end": "488150"
  },
  {
    "text": "Because just using that\nidentity, this-- sorry-- a here that erased, stupidly,\nis smaller than, say--",
    "start": "488150",
    "end": "495560"
  },
  {
    "text": "this is bigger than n, and n\nto the b, being 1, is bigger.",
    "start": "495560",
    "end": "503600"
  },
  {
    "text": "And then, as your colleague\npointed out before, this thing is exponential,\nso definitely higher",
    "start": "503600",
    "end": "510840"
  },
  {
    "text": "than a polynomial. OK, so that was\nvery easy, right? So the answer here\nis, if I got--",
    "start": "510840",
    "end": "516590"
  },
  {
    "text": "if I remember correctly, f1,\nf5, f2, f3, and then f4--",
    "start": "516590",
    "end": "525320"
  },
  {
    "text": "great. So that one was pretty easy. How about b-- or d, I guess?",
    "start": "525320",
    "end": "533360"
  },
  {
    "text": "Yeah? STUDENT: Can I just\nanother question-- JASON KU: Sure. STUDENT: [INAUDIBLE] How would\nyou go about proving that? JASON KU: How would you\ngo about proving that?",
    "start": "533360",
    "end": "540217"
  },
  {
    "text": "So there is a proof in your\nrecitation handout there. The method in which they proved\nthat in the recitation handout",
    "start": "540217",
    "end": "548260"
  },
  {
    "text": "was putting the two--",
    "start": "548260",
    "end": "555100"
  },
  {
    "text": "taking a ratio of\nthe two functions and taking their limit\nas n goes to infinity.",
    "start": "555100",
    "end": "561580"
  },
  {
    "text": "And if the top one-- it grows arbitrarily, then\nthe top one would be--",
    "start": "561580",
    "end": "569019"
  },
  {
    "text": "grow asymptotically faster. And if the it went\nto 0, the bottom one would grow\nasymptotically faster.",
    "start": "569020",
    "end": "575529"
  },
  {
    "text": "And if it went to\nsome constant, then that would be\nasymptotically equivalent.",
    "start": "575530",
    "end": "580810"
  },
  {
    "text": "Does that make sense? In actuality, to make\nthe limit easier to take, we take the limit of the\nlogarithm of the ratio.",
    "start": "580810",
    "end": "589270"
  },
  {
    "text": "It just made it easier. Does that makes sense? OK, so let's move on to b.",
    "start": "589270",
    "end": "596875"
  },
  {
    "text": "b-- we have a polynomial,\nand an exponential, and then we have these\nthings down here.",
    "start": "596875",
    "end": "602940"
  },
  {
    "text": "What do these things\nin parentheses mean? STUDENT: Choose. JASON KU: Choose, right.",
    "start": "602940",
    "end": "608620"
  },
  {
    "text": "It's a binomial coefficient. Does anyone know the\nbinomial coefficient is?",
    "start": "608620",
    "end": "614040"
  },
  {
    "text": "Yeah? Hopefully from\n6.042 or something like that, or whatever\nyour competition math background is--",
    "start": "614040",
    "end": "620320"
  },
  {
    "text": "but in general, we\nhave this definition. This thing is what? Does anyone remember?",
    "start": "620320",
    "end": "626370"
  },
  {
    "text": "What does n choose k mean? Yeah? STUDENT: The number of ways\nto choose k objects from n",
    "start": "626370",
    "end": "633520"
  },
  {
    "text": "[INAUDIBLE] JASON KU: Yeah, the\nnumber of ways to choose k objects from n things-- I never remember this formula.",
    "start": "633520",
    "end": "641820"
  },
  {
    "text": "And probably, a lot of you\nhave memorized this formula. I'm not going to\nask you to do it.",
    "start": "641820",
    "end": "647140"
  },
  {
    "text": "I'm going to tell you\nhow I think about this. What if I want to know the\nnumber of permutations of n",
    "start": "647140",
    "end": "654570"
  },
  {
    "text": "choose k-- or I mean of n? Sorry. Just how many permutations\nare there of n items?",
    "start": "654570",
    "end": "661680"
  },
  {
    "text": "What is that? That's just n factorial, right? So what we do here is\nwe'd want to choose",
    "start": "661680",
    "end": "668400"
  },
  {
    "text": "some n number of things. ",
    "start": "668400",
    "end": "674130"
  },
  {
    "text": "I have n factorial different\nways of choosing those, but then, essentially, in here\nand in here, k and n minus k--",
    "start": "674130",
    "end": "684089"
  },
  {
    "text": "I don't really care\nwhat their order is. So I'm going to divide\nout the permutations",
    "start": "684090",
    "end": "690360"
  },
  {
    "text": "of this stuff and this stuff. Does that makes sense? So the formula here\nas I remember it,",
    "start": "690360",
    "end": "696540"
  },
  {
    "text": "that hopefully is correct,\nis n minus k factorial.",
    "start": "696540",
    "end": "702300"
  },
  {
    "text": "So I'm getting all of the\npermutations of the whole thing divided by their constituents.",
    "start": "702300",
    "end": "708930"
  },
  {
    "text": "Does that make sense? Did I do that right? OK, cool-- so that's\na nice transformation.",
    "start": "708930",
    "end": "716330"
  },
  {
    "text": "So the first step is writing\nthese in terms of factorials. That doesn't really help me\nany, because I don't know",
    "start": "716330",
    "end": "721360"
  },
  {
    "text": "how big factorial is based-- with respect to\nthese other things. Does anyone know how\nbig factorial is?",
    "start": "721360",
    "end": "729930"
  },
  {
    "text": "Yeah? STUDENT: You can use\nSterling's approximation. JASON KU: You can use\nSterling's approximation. So that's nice. Does anyone remember what\nSterling's approximation is?",
    "start": "729930",
    "end": "738240"
  },
  {
    "text": "No. I don't remember either. I always have to look it up. Sterling's approximation says\nn factorial is approximately--",
    "start": "738240",
    "end": "750720"
  },
  {
    "text": "and this approximately\nis much stronger than an asymptotic behavior.",
    "start": "750720",
    "end": "758700"
  },
  {
    "text": "It's actually, as these things-- as n approaches infinity,\nthese things are equal. The limit is the identity.",
    "start": "758700",
    "end": "766170"
  },
  {
    "text": "But the approximation\nis the square root of 2 pi n n/3 to the n.",
    "start": "766170",
    "end": "773759"
  },
  {
    "text": "OK, that's fun.  So what kind of growth is this?",
    "start": "773760",
    "end": "779259"
  },
  {
    "text": " Super bad, right?",
    "start": "779260",
    "end": "785620"
  },
  {
    "text": "It's definitely exponential\nor higher than exponential.",
    "start": "785620",
    "end": "791190"
  },
  {
    "text": "It's n to the n--\nsomething like that-- dividing out an e-- this is e, the base of\nthe natural logarithm.",
    "start": "791190",
    "end": "801890"
  },
  {
    "text": "And this is a\nconstant, and so is pi. Pi is a constant--\nkind of interesting that we have two\ntranscendental numbers here.",
    "start": "801890",
    "end": "807780"
  },
  {
    "text": "That's kind of fun mathematics. I'm sure some-- one of\nyour 6.042 instructors",
    "start": "807780",
    "end": "813690"
  },
  {
    "text": "could tell you why. I can't right now off\nthe top of my head. But this is an approximation\nthat's very good.",
    "start": "813690",
    "end": "822330"
  },
  {
    "text": "And actually,\nsometimes other people will think-- this is what people\ncall Sterling's approximation.",
    "start": "822330",
    "end": "830380"
  },
  {
    "text": "One weaker notion that\nsometimes is useful for you is, if you take the\nlogarithm of both sides,",
    "start": "830380",
    "end": "841280"
  },
  {
    "text": "this is asymptotically what? ",
    "start": "841280",
    "end": "848800"
  },
  {
    "text": "If I took the log\nof this thing-- STUDENT: Polynomial-- JASON KU: It is a\npolynomial thing.",
    "start": "848800",
    "end": "855957"
  },
  {
    "text": "STUDENT: [INAUDIBLE] JASON KU: It's\nbasically n log n. If we take a log of this thing,\nit would be various things.",
    "start": "855957",
    "end": "866270"
  },
  {
    "text": "All right, let's do it out. 2 pi n n/e to the n--",
    "start": "866270",
    "end": "873110"
  },
  {
    "text": "so when we're inside a\nlogarithm, multiplication-- we can split it out-- becomes addition.",
    "start": "873110",
    "end": "879410"
  },
  {
    "text": "Division becomes subtraction. And this thing grows faster\nthan all these other things,",
    "start": "879410",
    "end": "887880"
  },
  {
    "text": "so we can ignore them when we\nadd them out asymptotically. And so what we end up\ngetting is this n to the n.",
    "start": "887880",
    "end": "893899"
  },
  {
    "text": "The n comes out\non the logarithm, and you get something\nthat's theta n log n.",
    "start": "893900",
    "end": "900890"
  },
  {
    "text": "Oh, that's fun. This is something we might\nuse later on in the class.",
    "start": "900890",
    "end": "907190"
  },
  {
    "text": "OK, but when we are\ncomparing these functions, one of the nice things\nto do is convert them",
    "start": "907190",
    "end": "914750"
  },
  {
    "text": "into something\nthat's familiar to us so that we can\ncompare them easily. So here, this thing is\nwhatever that thing is, roughly",
    "start": "914750",
    "end": "925490"
  },
  {
    "text": "square root n n/e to the n.",
    "start": "925490",
    "end": "931370"
  },
  {
    "text": "This is, I'm going\nto say, theta. That's a little\nbit more precise.",
    "start": "931370",
    "end": "938870"
  },
  {
    "text": "All right, then what\nabout these two things? Let's start with the bottom one. Can someone tell me what\nthis is, asymptotically?",
    "start": "938870",
    "end": "945240"
  },
  {
    "text": "Yeah? STUDENT: n cubed-- JASON KU: n cubed-- why is that? Well, if we plug this stuff\ninto that definition here,",
    "start": "945240",
    "end": "952699"
  },
  {
    "text": "we have n factorial over 3\nfactorial n minus 3 factorial.",
    "start": "952700",
    "end": "961100"
  },
  {
    "text": "n factorial over n\nminus 3 factorial just leaves us with\nan n, an n minus 1,",
    "start": "961100",
    "end": "966620"
  },
  {
    "text": "and an n minus 2 over 6. And if you multiply\nall that out,",
    "start": "966620",
    "end": "971899"
  },
  {
    "text": "the leading term is an\nn cubed, so this thing is asymptotically n cubed.",
    "start": "971900",
    "end": "980460"
  },
  {
    "text": "I skipped some steps,\nbut hopefully you could follow that.",
    "start": "980460",
    "end": "985720"
  },
  {
    "text": "And then the last thing to\nremain is this one right there.",
    "start": "985720",
    "end": "992550"
  },
  {
    "text": "That one's a little tricky. Anyone want to help me out here?",
    "start": "992550",
    "end": "997780"
  },
  {
    "text": "What we can do is we can\nstick it into this formula, and then apply\nSterling's approximation",
    "start": "997780",
    "end": "1004589"
  },
  {
    "text": "to replace the factorials. That makes sense? OK, so what I'm going to do is--",
    "start": "1004590",
    "end": "1010680"
  },
  {
    "text": "let's do this in two steps. This is going to be\nn factorial over--",
    "start": "1010680",
    "end": "1017760"
  },
  {
    "text": "what is this? n/2\nfactorial-- and then what is n minus n over 2? That's also n/2.",
    "start": "1017760",
    "end": "1023490"
  },
  {
    "text": "So this is going to be\nn/2 factorial squared.",
    "start": "1023490",
    "end": "1030720"
  },
  {
    "text": "Is that OK? Yeah? Now let's replace this stuff\nwith Sterling's approximation",
    "start": "1030720",
    "end": "1037119"
  },
  {
    "text": "and see if we can simplify. So on the top, we have 2\npi n n/e to the n over--",
    "start": "1037119",
    "end": "1045939"
  },
  {
    "text": "and then we've got\na square here, pi n.",
    "start": "1045940",
    "end": "1051460"
  },
  {
    "text": "I cancelled the 2-- n/2 over e to the n/2.",
    "start": "1051460",
    "end": "1057880"
  },
  {
    "text": " Did I do that right? OK. I can't spell, and\na lot of times,",
    "start": "1057880",
    "end": "1065110"
  },
  {
    "text": "I make arithmetic errors, so\ncatch me if I am doing one. OK, so let's simplify\nthis bottom here.",
    "start": "1065110",
    "end": "1073965"
  },
  {
    "text": "I'm not going to\nrewrite the top. The bottom here--\nwe square this guy. It's the pi times n.",
    "start": "1073965",
    "end": "1080350"
  },
  {
    "text": "And then this guy, n/2 squared-- that just stays is an n.",
    "start": "1080350",
    "end": "1087010"
  },
  {
    "text": "Then we have n/2 to the n/e-- ",
    "start": "1087010",
    "end": "1094540"
  },
  {
    "text": "something like that. n/2 over\ne to the n-- that makes more-- me happier. OK, so now we have\nthis over this.",
    "start": "1094540",
    "end": "1101710"
  },
  {
    "text": "How do we simplify? Well, we can cancel out\none of the root n's.",
    "start": "1101710",
    "end": "1107230"
  },
  {
    "text": "So we've got square root of pi\nn down here and square root of 2",
    "start": "1107230",
    "end": "1114010"
  },
  {
    "text": "up top. And then what have we got?",
    "start": "1114010",
    "end": "1120590"
  },
  {
    "text": "We've got n to the n down here\nand n to the n down-- up there, so those cancel.",
    "start": "1120590",
    "end": "1126070"
  },
  {
    "text": "We got 1 over e to the n,\n1 over e to the n up there. Those cancel.",
    "start": "1126070",
    "end": "1131410"
  },
  {
    "text": "What's left in this term,\nwhen-- after we cancel? 1 over 2 to the n in the\ndenominator, which is",
    "start": "1131410",
    "end": "1138630"
  },
  {
    "text": "2 to the n in the numerator-- so this thing is what\nthis thing is right.",
    "start": "1138630",
    "end": "1147169"
  },
  {
    "text": "Asymptote. We can get rid of\nthese constants. And it's root n-- I mean, it's 2 to the n\nover root n, asymptotically.",
    "start": "1147170",
    "end": "1155520"
  },
  {
    "text": "Does that makes\nsense, everybody? OK. With that knowledge-- and I'm\nsorry for my messy board work--",
    "start": "1155520",
    "end": "1162930"
  },
  {
    "text": "what is the ordering of\nthese functions then? Can someone help me out? Someone else-- Eric, I'm sorry.",
    "start": "1162930",
    "end": "1174410"
  },
  {
    "text": "You can't answer. Come on, guys. You followed what I said. ",
    "start": "1174410",
    "end": "1180740"
  },
  {
    "text": "Start it out for me. STUDENT: I think [INAUDIBLE]\nf2 and f5 [INAUDIBLE]",
    "start": "1180740",
    "end": "1189783"
  },
  {
    "text": "JASON KU: Right. So both of these things are\nasymptotically equivalent, so we should put\nthose in brackets--",
    "start": "1189783",
    "end": "1196080"
  },
  {
    "text": "f2, f5. STUDENT: And then\nit would go f--",
    "start": "1196080",
    "end": "1204266"
  },
  {
    "text": "[INAUDIBLE] 3. JASON KU: f3. This one? Why this one?",
    "start": "1204266",
    "end": "1210504"
  },
  {
    "text": "STUDENT: Nevermind. JASON KU: I'm just asking you\nto justify what you're saying. STUDENT: Well, because I feel\nlike we have the [INAUDIBLE]",
    "start": "1210504",
    "end": "1217372"
  },
  {
    "text": "JASON KU: Uh-huh. STUDENT: [INAUDIBLE] JASON KU: This\none's the biggest?",
    "start": "1217372",
    "end": "1222640"
  },
  {
    "text": "STUDENT: [INAUDIBLE] JASON KU: f4 is\nthe biggest, right? So this one's definitely\nbigger than this,",
    "start": "1222640",
    "end": "1228760"
  },
  {
    "text": "because it's n to the n,\nas opposed to 2 to the n.",
    "start": "1228760",
    "end": "1234790"
  },
  {
    "text": "So for any n larger\nthan 2 plus e",
    "start": "1234790",
    "end": "1240250"
  },
  {
    "text": "is fairly obvious\nthat that's bigger. STUDENT: So wouldn't\nf3 be before f1?",
    "start": "1240250",
    "end": "1245980"
  },
  {
    "text": "JASON KU: Why would\nf3 be before f1? STUDENT: [INAUDIBLE] 2 to\nthe n divided by [INAUDIBLE] JASON KU: But we're dividing\nby a polynomial factor, right?",
    "start": "1245980",
    "end": "1252490"
  },
  {
    "text": "So it's going to be\nslower asymptotically than the first one right there.",
    "start": "1252490",
    "end": "1259140"
  },
  {
    "text": "So you got it right. What is it? F3, f1, and f4--",
    "start": "1259140",
    "end": "1267970"
  },
  {
    "text": "OK? Cool-- so it's a\nlittle complicated,",
    "start": "1267970",
    "end": "1273040"
  },
  {
    "text": "but just applying some\nlogarithm an exponent rules, understanding that logarithmic\nfactors grow slower",
    "start": "1273040",
    "end": "1280840"
  },
  {
    "text": "than polynomial ones,\nand again, grow slower than exponential ones.",
    "start": "1280840",
    "end": "1286090"
  },
  {
    "text": "And being able to do some\ntransformations of some of these mathematical\nquantities to get them in a polynomial-like\nlooking form",
    "start": "1286090",
    "end": "1293620"
  },
  {
    "text": "is how you're going to\napproach these problems. Does that make sense? All right, so we're going to\nmove on to question 2 now.",
    "start": "1293620",
    "end": "1301513"
  },
  {
    "text": "Yeah, you've got a question? STUDENT: Yeah, I\nhave a question. What did you say the\ntheta bound was for 4?",
    "start": "1301513",
    "end": "1306790"
  },
  {
    "text": "JASON KU: Theta bound for 4? This guy? STUDENT: [INAUDIBLE]",
    "start": "1306790",
    "end": "1311870"
  },
  {
    "text": "JASON KU: So it's just that. I don't know how to\nsimplify that any further. You've got a\npolynomial factor here,",
    "start": "1311870",
    "end": "1318180"
  },
  {
    "text": "and then this is an n to the n\nterm divided by an exponential. Yeah? STUDENT: For f3,\nwhich one did you--",
    "start": "1318180",
    "end": "1325820"
  },
  {
    "text": "how did you reduce-- which one is f3 [INAUDIBLE] JASON KU: f3 took this\nlittle cycle here.",
    "start": "1325820",
    "end": "1335140"
  },
  {
    "text": "What we did was we\nexpanded out the definition",
    "start": "1335140",
    "end": "1340720"
  },
  {
    "text": "of the binomial\ncoefficient here. Then we applied\nSterling, and then we simplified and got back.",
    "start": "1340720",
    "end": "1346880"
  },
  {
    "text": "Does that make sense? Yeah? STUDENT: [INAUDIBLE] JASON KU: Sure. STUDENT: Is there a reason\nthat f3 is before f1?",
    "start": "1346880",
    "end": "1354000"
  },
  {
    "text": "JASON KU: Why is f3 before f1? If I erase the 2 and the pi,\nthis thing is theta of that--",
    "start": "1354000",
    "end": "1364140"
  },
  {
    "text": "2 to the n over a\npolynomial factor. It's over n to the 1/2.",
    "start": "1364140",
    "end": "1371279"
  },
  {
    "text": "n to the 1/2 grows\nnon-trivially. Right?",
    "start": "1371280",
    "end": "1376440"
  },
  {
    "text": "And so this is going to decrease\nthe running time of this thing by a polynomial factor.",
    "start": "1376440",
    "end": "1381590"
  },
  {
    "text": "You could think about-- we're multiplying this by\nn to the minus 1/2 as well.",
    "start": "1381590",
    "end": "1387220"
  },
  {
    "text": "That's another way\nof thinking about it. Any other questions?",
    "start": "1387220",
    "end": "1392490"
  },
  {
    "text": "OK, so we're going to move\non to problem 2, I guess.",
    "start": "1392490",
    "end": "1402140"
  },
  {
    "text": "I need a eraser. ",
    "start": "1402140",
    "end": "1410500"
  },
  {
    "text": "So problem 2 is kind of\na funny looking problem.",
    "start": "1410500",
    "end": "1416150"
  },
  {
    "text": "The point of this\nproblem is to get",
    "start": "1416150",
    "end": "1421960"
  },
  {
    "text": "you to think about using\nsome of the things we're going to be using in this\nclass as a black box.",
    "start": "1421960",
    "end": "1428679"
  },
  {
    "text": "What using something\nas a black box means is that has a kind of a\npublic interface that you're",
    "start": "1428680",
    "end": "1433780"
  },
  {
    "text": "allowed to work with,\nbut I'm not allowed to see what's inside of it. And a lot of times, what\nwe'll do in this class",
    "start": "1433780",
    "end": "1440770"
  },
  {
    "text": "is try to use a\nblack box and just try to use the abstracted\nouter functions so that we",
    "start": "1440770",
    "end": "1449380"
  },
  {
    "text": "can prove things about it. We can just accept\nthose as true, and then use those to\ndeal with our analysis.",
    "start": "1449380",
    "end": "1457130"
  },
  {
    "text": "So what we're given\nin this problem is a data structure supporting\na sequence interface",
    "start": "1457130",
    "end": "1465190"
  },
  {
    "text": "that you heard about yesterday. What's a sequence\ninterface again? ",
    "start": "1465190",
    "end": "1471560"
  },
  {
    "text": "How does it store items? Anyone remember? Yeah? STUDENT: [INAUDIBLE]",
    "start": "1471560",
    "end": "1477780"
  },
  {
    "text": "JASON KU: Well, it-- OK. STUDENT: [INAUDIBLE] JASON KU: All right. So what your colleague\nis saying here",
    "start": "1477780",
    "end": "1483900"
  },
  {
    "text": "is we list them in\na contiguous array. Does anyone have a problem\nwith that definition?",
    "start": "1483900",
    "end": "1490100"
  },
  {
    "text": "Yeah, up there-- STUDENT: [INAUDIBLE] JASON KU: OK.",
    "start": "1490100",
    "end": "1496530"
  },
  {
    "text": "So one of the important\nthings about this class is abstracting this\nidea of an interface",
    "start": "1496530",
    "end": "1503920"
  },
  {
    "text": "versus an implementation. And so what this student\ndown here was talking to me about an array as an\nunderlying implementation,",
    "start": "1503920",
    "end": "1511958"
  },
  {
    "text": "and what the student back\nthere was talking about is a linked list. These are both things that\ncan implement that interface.",
    "start": "1511958",
    "end": "1519309"
  },
  {
    "text": "But in reality, the interface\nis something abstracted outside of those ideas. We could implement with either\nof those data structures.",
    "start": "1519310",
    "end": "1527529"
  },
  {
    "text": "So what makes the sequence\ninterface a sequence interface? Yeah? STUDENT: It's in\norder, or at least it's",
    "start": "1527530",
    "end": "1533606"
  },
  {
    "text": "indexed in a specific way\nthat allows for [INAUDIBLE] JASON KU: So it's about the\ndata that we're storing.",
    "start": "1533607",
    "end": "1542259"
  },
  {
    "text": "We're storing some\nnumber of things, and the important thing\nis that the data structure",
    "start": "1542260",
    "end": "1549010"
  },
  {
    "text": "is maintaining being\nable to find items in that set by maintaining\nan order on them.",
    "start": "1549010",
    "end": "1557919"
  },
  {
    "text": "I usually like to call\nit an extrinsic order on these things. It has nothing to do\nwith what the items are.",
    "start": "1557920",
    "end": "1564070"
  },
  {
    "text": "It has to do with how\nI put them in order. There's a first thing,\nthere's a 10th thing, there's a last thing.",
    "start": "1564070",
    "end": "1569410"
  },
  {
    "text": "Right? That's what a sequence\nof items is right. And so what this\ndata structure is",
    "start": "1569410",
    "end": "1576340"
  },
  {
    "text": "doing, that's the input that\nis what we have available to us",
    "start": "1576340",
    "end": "1581950"
  },
  {
    "text": "in this problem, is some\nkind of data structure storing a sequence of things.",
    "start": "1581950",
    "end": "1588130"
  },
  {
    "text": "And it can support\nthese four operations-- an insert first, insert last,\ndelete first, and delete last.",
    "start": "1588130",
    "end": "1596290"
  },
  {
    "text": "And it supports each of those\nthings in constant time. You don't a data structure\nthat does that yet.",
    "start": "1596290",
    "end": "1604760"
  },
  {
    "text": "You will on your\nproblem set 1, and we'll talk about another\nway to do that today.",
    "start": "1604760",
    "end": "1611540"
  },
  {
    "text": "But we don't care\nhow it's implemented. We just give you this black\nbox that achieves these things.",
    "start": "1611540",
    "end": "1617090"
  },
  {
    "text": "Yay-- awesome. And so what we're trying to\ndo is, we have this thing,",
    "start": "1617090",
    "end": "1623690"
  },
  {
    "text": "and I want to be able to\nmanipulate the sequence stored inside, but all I have access to\nare these external operations.",
    "start": "1623690",
    "end": "1632690"
  },
  {
    "text": "So the idea is going to be\nlet's implement algorithms",
    "start": "1632690",
    "end": "1639259"
  },
  {
    "text": "for these-- some\nhigher level operations in terms of these lower level\nthings that are given to us.",
    "start": "1639260",
    "end": "1645500"
  },
  {
    "text": "Does that makes sense? And this is actually a\npretty easy question. Hopefully we'll have slightly\nmore difficult ones for you",
    "start": "1645500",
    "end": "1653180"
  },
  {
    "text": "on-- in a different context\non problem set 1. OK, so the first operation\nwe're going to support--",
    "start": "1653180",
    "end": "1662149"
  },
  {
    "text": "or try to support-- is an operation\ncalled swap_ends.",
    "start": "1662150",
    "end": "1669080"
  },
  {
    "text": "And what this is going to do\nis take the data structure that we gave-- another way you could do this\nis put this as a method on that",
    "start": "1669080",
    "end": "1675530"
  },
  {
    "text": "data structure, but let's\ndo this separately-- it's going to take that data\nstructure that we gave--",
    "start": "1675530",
    "end": "1680840"
  },
  {
    "text": "that I gave you, that's\nstoring the sequence,",
    "start": "1680840",
    "end": "1685850"
  },
  {
    "text": "as the only argument. And what we're\nasking you to do is describe an algorithm to swap\nthe first and the last items.",
    "start": "1685850",
    "end": "1693320"
  },
  {
    "text": " I it was an array, I could just\nlook at index 0, look at that,",
    "start": "1693320",
    "end": "1701659"
  },
  {
    "text": "look at the last one look\nat that, and swap them. But I don't have access to what\nthat underlying representation",
    "start": "1701660",
    "end": "1709010"
  },
  {
    "text": "is, so how would I do that\nusing the things that we have available to us?",
    "start": "1709010",
    "end": "1715470"
  },
  {
    "text": "This is a pretty easy question. What have we got? STUDENT: Just a quick question. JASON KU: Yeah. STUDENT: Does the delete\nmethod also return",
    "start": "1715470",
    "end": "1722231"
  },
  {
    "text": "whatever it deletes? JASON KU: Yes. Yes, it does. So in general, if you actually\ntake a look at the session",
    "start": "1722232",
    "end": "1727490"
  },
  {
    "text": "notes, it's giving you\na nice little reminder-- recall, the delete operations\nreturn the deleted item.",
    "start": "1727490",
    "end": "1732770"
  },
  {
    "text": "OK? It says it right\nthere on the thing. ",
    "start": "1732770",
    "end": "1739550"
  },
  {
    "text": "Yeah? STUDENT: Oh, I also\nhad a question. JASON KU: Sure. STUDENT: And this\nactually [INAUDIBLE]",
    "start": "1739550",
    "end": "1745240"
  },
  {
    "text": "JASON KU: Mm-hmm. STUDENT: It's not\nrelated [INAUDIBLE] if they don't specify a space\n[INAUDIBLE] does that mean",
    "start": "1745240",
    "end": "1752334"
  },
  {
    "text": "[INAUDIBLE] JASON KU: Yeah, so\none of the things that Eric talked about yesterday\nwas generally, in this class,",
    "start": "1752334",
    "end": "1758760"
  },
  {
    "text": "if you have-- usually what we'll give\nyou is a running time bound on the things\nthat you asked for. And because allocation\nof space by our model",
    "start": "1758760",
    "end": "1766970"
  },
  {
    "text": "takes that amount of\ntime, the amount of time-- the amount of space\nthat we are using",
    "start": "1766970",
    "end": "1774019"
  },
  {
    "text": "is going to be asymptotically\nupper bounded by the time that we're going to\nuse for the algorithm.",
    "start": "1774020",
    "end": "1779120"
  },
  {
    "text": "And so generally, we'll ask you\nto stay within a time bound, and not ask you to do\nsomething separate with space,",
    "start": "1779120",
    "end": "1785900"
  },
  {
    "text": "but there are problems probably\nat the end of this unit where we might talk\nabout space complexity.",
    "start": "1785900",
    "end": "1792289"
  },
  {
    "text": "But usually, we will\nbe very specific if we want you to\nthink about space.",
    "start": "1792290",
    "end": "1798380"
  },
  {
    "text": "Any other questions? All right, so how do we\nimplement this swap_ends thing? Yeah. This is a pretty easy one.",
    "start": "1798380",
    "end": "1805560"
  },
  {
    "text": "Yeah? STUDENT: [INAUDIBLE] say\nfirst equals [INAUDIBLE] JASON KU: OK, so another\nthing about this class--",
    "start": "1805560",
    "end": "1814850"
  },
  {
    "text": "your colleague\nover here is trying to write code to me, which\nis great for a computer,",
    "start": "1814850",
    "end": "1823190"
  },
  {
    "text": "and that's great if\nyou're taking 6.009. It's not great if you're\ntalking to your friends or if you're talking to me.",
    "start": "1823190",
    "end": "1830360"
  },
  {
    "text": "I can't parse code in my head\nand compile it all the time. Sometimes I can, but\nnot all the time,",
    "start": "1830360",
    "end": "1837303"
  },
  {
    "text": "especially when it gets\nto be a large program. So I want you to\nexplain in words to me, and we want you to explain in\nwords in your LaTeX submissions",
    "start": "1837303",
    "end": "1846440"
  },
  {
    "text": "what it is the\nalgorithm is doing. So can you start over\nwith your description?",
    "start": "1846440",
    "end": "1852716"
  },
  {
    "text": "STUDENT: Words are hard. JASON KU: Words are hard. I agree with you. STUDENT: This is a\ncomputer science class. STUDENT: I would delete\nthe last [INAUDIBLE]",
    "start": "1852717",
    "end": "1861500"
  },
  {
    "text": "and then take that\nvalue [INAUDIBLE] JASON KU: OK. So proposal-- we have\na sequence of things.",
    "start": "1861500",
    "end": "1869420"
  },
  {
    "text": "Again, as Eric was doing\nin lecture yesterday, this isn't\nrepresenting an array.",
    "start": "1869420",
    "end": "1875090"
  },
  {
    "text": "It's representing a sequence. So this is the front\nfirst I guessed and last.",
    "start": "1875090",
    "end": "1882440"
  },
  {
    "text": "And what your colleague was\nsaying was to delete this guy",
    "start": "1882440",
    "end": "1888860"
  },
  {
    "text": "and stick it on the front,\nmaybe by using delete last",
    "start": "1888860",
    "end": "1893870"
  },
  {
    "text": "and insert first.  That sounds pretty good.",
    "start": "1893870",
    "end": "1899570"
  },
  {
    "text": "Does that do what\nswap_ends is doing? Swap_ends-- swap the first and\nlast items in the sequence. ",
    "start": "1899570",
    "end": "1906917"
  },
  {
    "text": "STUDENT: It's probably\nbetter if we first store it in some other variable, so that\nway we can get the-- delete",
    "start": "1906917",
    "end": "1912242"
  },
  {
    "text": "the n [INAUDIBLE] JASON KU: So what your\ncolleague is saying is, well, we've done kind\nof half of our work.",
    "start": "1912242",
    "end": "1919670"
  },
  {
    "text": "The first one's still over here. That's no good. Does someone have a\nway to modify this?",
    "start": "1919670",
    "end": "1926299"
  },
  {
    "text": "Yeah? STUDENT: Before modifying,\nyou can [INAUDIBLE] to modify. [INAUDIBLE] about the amount\nof things we're storing.",
    "start": "1926300",
    "end": "1933085"
  },
  {
    "text": "JASON KU: Yeah. So how much extra space\ncan we use, for example? STUDENT: The\neasiest way would be to delete the last\n[INAUDIBLE] the first,",
    "start": "1933085",
    "end": "1941030"
  },
  {
    "text": "and then just, if we have\nthem already kept [INAUDIBLE] but I don't know if I can\nkeep two different variables",
    "start": "1941030",
    "end": "1947232"
  },
  {
    "text": "at the same time. JASON KU: Good question--\nso the question-- can I use additional space?",
    "start": "1947232",
    "end": "1952980"
  },
  {
    "text": "And in general, if\nwe don't give you any restrictions on what you\ncan store, then you can go wild.",
    "start": "1952980",
    "end": "1960860"
  },
  {
    "text": "Do whatever you want, outside\nof this data structure. One of the things you\ncould do is remove first",
    "start": "1960860",
    "end": "1969820"
  },
  {
    "text": "all of these things, store\nit and some data structure you like, manipulate\nit as much as you want,",
    "start": "1969820",
    "end": "1977420"
  },
  {
    "text": "and then insert first\nall the way back in and rewrite the thing. But that's not going to\ngive us constant time, which",
    "start": "1977420",
    "end": "1983559"
  },
  {
    "text": "is what we're asking for. But if we don't tell you\notherwise, feel free to--",
    "start": "1983560",
    "end": "1990047"
  },
  {
    "text": "probably, you're only allowed\nto store a constant number of things, since we\nhave constant time, but generally, unless\nwe say, no, you",
    "start": "1990047",
    "end": "1997420"
  },
  {
    "text": "can't use additional space,\nyou can use additional space. OK? So how would you do that?",
    "start": "1997420",
    "end": "2002805"
  },
  {
    "text": "STUDENT: I would probably erase\nthe last one and the first one, keep them both, then\nanswer the first one,",
    "start": "2002805",
    "end": "2007980"
  },
  {
    "text": "answer everything else, and\nthen answer the last one. JASON KU: That's great. So what your\ncolleague is saying-- we delete both of them, we store\nthem in temporary variables,",
    "start": "2007980",
    "end": "2016830"
  },
  {
    "text": "and then, one at a time,\nwe insert each of them in their corresponding\nplace using the functions that we have available.",
    "start": "2016830",
    "end": "2022470"
  },
  {
    "text": "OK, so if I were to write\nlittle pseudocode for this, I might take the first one--",
    "start": "2022470",
    "end": "2032010"
  },
  {
    "text": "I'd delete first.",
    "start": "2032010",
    "end": "2039180"
  },
  {
    "text": "I'm really abusing\nnotation here. That's OK. You get what I'm saying.",
    "start": "2039180",
    "end": "2045059"
  },
  {
    "text": "Delete the last,\nand then store them",
    "start": "2045060",
    "end": "2052350"
  },
  {
    "text": "in their respective places. Insert at the front-- which one am I going to insert?",
    "start": "2052350",
    "end": "2060379"
  },
  {
    "text": "What's up?  Speak up, guys.",
    "start": "2060380",
    "end": "2066440"
  },
  {
    "text": "STUDENT: x2-- JASON KU: x2-- yes. Thank you. And insert last, x1--",
    "start": "2066440",
    "end": "2075500"
  },
  {
    "text": "OK, that's pretty easy. Yeah? STUDENT: In this\ncase, what would",
    "start": "2075500",
    "end": "2080800"
  },
  {
    "text": "[INAUDIBLE] I think\nthis might be relevant. [INAUDIBLE] What would\nconstitute a pseudocode versus [INAUDIBLE]\naccidentally writing",
    "start": "2080800",
    "end": "2087039"
  },
  {
    "text": "Python syntax [INAUDIBLE] JASON KU: All right,\nso for this problem, you'll see the solutions\nposted to this later on.",
    "start": "2087040",
    "end": "2093310"
  },
  {
    "text": "In that one, I wrote\nup a description of what I was going to do, and\nthen I actually-- because this",
    "start": "2093310",
    "end": "2099369"
  },
  {
    "text": "was pretty easy, I actually\nwrote down some Python code to do whatever this thing was.",
    "start": "2099370",
    "end": "2105410"
  },
  {
    "text": "But in general--\nand it's actually OK to write Python or pseudocode\nof this form on your problem",
    "start": "2105410",
    "end": "2113920"
  },
  {
    "text": "sets, or on an exam,\nor something like that. But if we can't understand\nwhat your variables mean,",
    "start": "2113920",
    "end": "2120160"
  },
  {
    "text": "if we can't understand what\nyour pseudocode is doing, then that's not sufficient.",
    "start": "2120160",
    "end": "2126250"
  },
  {
    "text": "So the reason why\nwe ask for words is so that you can\ncommunicate those ideas well.",
    "start": "2126250",
    "end": "2133132"
  },
  {
    "text": "STUDENT: Just a\nfollow-up on that-- so can you also\nhave a combination of pseudocode and description? JASON KU: Sure. STUDENT: OK.",
    "start": "2133132",
    "end": "2138385"
  },
  {
    "text": "JASON KU: Yeah--\nincluding both of them can be clarifying\nfor you, potentially.",
    "start": "2138385",
    "end": "2144490"
  },
  {
    "text": "Any other questions? ",
    "start": "2144490",
    "end": "2151810"
  },
  {
    "text": "This is not such an\ninteresting question from an algorithm standpoint.",
    "start": "2151810",
    "end": "2156960"
  },
  {
    "text": "This is a constant\nsize problem kind of. I have this data structure.",
    "start": "2156960",
    "end": "2162520"
  },
  {
    "text": "I do two operations. I need to do something. And this is so easy that\nI'm really not even going",
    "start": "2162520",
    "end": "2168520"
  },
  {
    "text": "to argue correctness-- I'm not even going to\nhave to argue correctness to you, because we're\nessentially just doing",
    "start": "2168520",
    "end": "2174309"
  },
  {
    "text": "exactly what we asked for. Most of the time in this class,\nwhen you're doing something",
    "start": "2174310",
    "end": "2179890"
  },
  {
    "text": "non-trivial-- especially when\nyou're doing something that has to recurse in\nsome way-- we do",
    "start": "2179890",
    "end": "2185020"
  },
  {
    "text": "want you to argue correctness. But in this case, for example,\nthe time analysis is very easy.",
    "start": "2185020",
    "end": "2192730"
  },
  {
    "text": "We do for operations. They each take constant\ntime, so this operation takes constant time-- done.",
    "start": "2192730",
    "end": "2198550"
  },
  {
    "text": "Yeah? All right, so how about\nthe second operation? Second operation at least allows\nus to use a little bit more.",
    "start": "2198550",
    "end": "2208480"
  },
  {
    "text": "So Shift_left D, K-- this is the\noperation we're supporting now",
    "start": "2208480",
    "end": "2219970"
  },
  {
    "text": "is we are given this sequence,\nand what we want to do is take the first K, here and stick it\nover here at the back so that",
    "start": "2219970",
    "end": "2234730"
  },
  {
    "text": "the-- these K go here. So the K-th item ends\nup being the last item",
    "start": "2234730",
    "end": "2240579"
  },
  {
    "text": "and the K plus 1th item\nnow becomes the first item. Does that makes sense?",
    "start": "2240580",
    "end": "2245900"
  },
  {
    "text": "OK. Again, this is actually not\nsuch an interesting algorithm from an algorithm standpoint,\nbut it's hopefully",
    "start": "2245900",
    "end": "2254029"
  },
  {
    "text": "helpful to talk about from an\ninstructional point of view. OK? So how would I\napproach this problem?",
    "start": "2254030",
    "end": "2259760"
  },
  {
    "text": "I need this operation to\nhappen in order K time.",
    "start": "2259760",
    "end": "2267350"
  },
  {
    "text": "Yeah? STUDENT: OK. So first, go and delete-- set a variable x1 to be the\nd dot delete first element.",
    "start": "2267350",
    "end": "2275809"
  },
  {
    "text": "Then do d dot insert at the\nlast x1, write a for loop,",
    "start": "2275810",
    "end": "2281990"
  },
  {
    "text": "and then do that K times. And that should take\n2K steps, which is OK. JASON KU: OK. So what your\ncolleague was saying",
    "start": "2281990",
    "end": "2288019"
  },
  {
    "text": "is that we're just going\nto delete this guy, stick it on there,\ndo it K times.",
    "start": "2288020",
    "end": "2296900"
  },
  {
    "text": "That sound good? Yeah. One of the things in this\nclass that you have, in terms",
    "start": "2296900",
    "end": "2302180"
  },
  {
    "text": "of implementation-- usually there are two ways-- at least two ways you\ncould do something",
    "start": "2302180",
    "end": "2308720"
  },
  {
    "text": "that takes longer\nthan constant time. You could write a four loop\nwhere you could use recursion.",
    "start": "2308720",
    "end": "2314180"
  },
  {
    "text": " Sometimes approaching a\nproblem would be good one way,",
    "start": "2314180",
    "end": "2320610"
  },
  {
    "text": "rather than another. Why is it that a lot\nof computer scientists,",
    "start": "2320610",
    "end": "2327030"
  },
  {
    "text": "as opposed to coding\nengineers, prefer to think about an algorithm recursively? Does anyone know why?",
    "start": "2327030",
    "end": "2332820"
  },
  {
    "text": "At least I do, when\nI'm explaining it from a theory standpoint. It actually might not be\ngood from an implementation",
    "start": "2332820",
    "end": "2339480"
  },
  {
    "text": "standpoint, because your\ncomputer can vectorized for loops and things like--\nbut that's not something",
    "start": "2339480",
    "end": "2344550"
  },
  {
    "text": "we need to talk about. Why would we want to talk\nabout a recursive algorithm",
    "start": "2344550",
    "end": "2350250"
  },
  {
    "text": "maybe more? STUDENT: It lets you break up\nthe problem into much smaller, more manageable pieces. JASON KU: OK, so recursion\nlets you break up the problem",
    "start": "2350250",
    "end": "2358320"
  },
  {
    "text": "into small measurable pieces. That's actually true\nin some context.",
    "start": "2358320",
    "end": "2365670"
  },
  {
    "text": "How I like to think about\nrecursion a lot of times is, if I have a non-constant amount\nof work that I have to do,",
    "start": "2365670",
    "end": "2371760"
  },
  {
    "text": "usually easy for me-- it's hard for me to hold\na non-constant amount of information in my head.",
    "start": "2371760",
    "end": "2378317"
  },
  {
    "text": "What I want to do is think\nabout a constant amount of information at any\ngiven point in time,",
    "start": "2378317",
    "end": "2383730"
  },
  {
    "text": "because that's easier\nfor me to argue on. It's easier for me to think\nabout making arguments, case",
    "start": "2383730",
    "end": "2391080"
  },
  {
    "text": "analysis on these\nsmall amount of things. And so one of the\nthings you can do",
    "start": "2391080",
    "end": "2396360"
  },
  {
    "text": "is, if you break it down\nso that I solve a slightly smaller problem\nrecursively, and then",
    "start": "2396360",
    "end": "2403650"
  },
  {
    "text": "do a constant amount of work\nand maintain some invariant,",
    "start": "2403650",
    "end": "2409150"
  },
  {
    "text": "then it's very easy to\nargue things about it. It's very easy for\nme to convince myself",
    "start": "2409150",
    "end": "2414990"
  },
  {
    "text": "that this thing's correct. So I'm going to\nprovide a recursive way",
    "start": "2414990",
    "end": "2421770"
  },
  {
    "text": "of solving this problem. Can anyone set up\nmaybe a recursive way of thinking about this\nproblem, instead of",
    "start": "2421770",
    "end": "2427380"
  },
  {
    "text": "putting this inside a for loop,\nlike your colleague was saying? ",
    "start": "2427380",
    "end": "2437810"
  },
  {
    "text": "Yeah? STUDENT: [INAUDIBLE]\npeople do is just consider what will happen\nwhen k equals 0 you're not",
    "start": "2437810",
    "end": "2445270"
  },
  {
    "text": "[INAUDIBLE] it at all. JASON KU: OK. STUDENT: [INAUDIBLE]\nwhat it originally was. And then-- but if that\nk is greater than 0,",
    "start": "2445270",
    "end": "2451830"
  },
  {
    "text": "you just [INAUDIBLE] and\nthen [INAUDIBLE] k is 1 less",
    "start": "2451830",
    "end": "2457010"
  },
  {
    "text": "[INAUDIBLE] JASON KU: So what your\ncolleague is saying is setting up the--\na very nice thing.",
    "start": "2457010",
    "end": "2464760"
  },
  {
    "text": "She's saying that, if we\nthink about this recursively, we'll think about a base case--",
    "start": "2464760",
    "end": "2471610"
  },
  {
    "text": "which, your colleague was\nsaying maybe K equals 0. ",
    "start": "2471610",
    "end": "2476820"
  },
  {
    "text": "And otherwise, if\nwe're not at 0, what we'll do is we'll start\nit out, move one of these guys",
    "start": "2476820",
    "end": "2485220"
  },
  {
    "text": "over, and then we have\nan instance where we want to shift K minus 1 things over.",
    "start": "2485220",
    "end": "2492440"
  },
  {
    "text": " Want to do the same thing,\nbut with K minus 1 things.",
    "start": "2492440",
    "end": "2499050"
  },
  {
    "text": "And so we can just call this\nthing for a smaller value of K. Does that makes sense? ",
    "start": "2499050",
    "end": "2506010"
  },
  {
    "text": "All right, so let's\ntry to write that out. ",
    "start": "2506010",
    "end": "2514180"
  },
  {
    "text": "The first thing I'm going to\nwrite out is kind of a break. If I'm at a base case, let's\nnot do anything to this thing.",
    "start": "2514180",
    "end": "2523480"
  },
  {
    "text": "And maybe I also\nwant some bounce checking to make sure\nthat we're in range. OK, so I'm going to say,\nif our K is less than 1,",
    "start": "2523480",
    "end": "2534917"
  },
  {
    "text": "I don't think we should be\ndoing anything to this array. So let's just not do anything. If K is less than\n1 or K is bigger",
    "start": "2534917",
    "end": "2546700"
  },
  {
    "text": "than the length of D minus\n1-- so I don't know what",
    "start": "2546700",
    "end": "2552040"
  },
  {
    "text": "to do if you're asking me to\nshift more than the things I have, so let's not do that.",
    "start": "2552040",
    "end": "2559560"
  },
  {
    "start": "2559560",
    "end": "2565980"
  },
  {
    "text": "Yeah-- because if\nit was length of D, we would just not\nmove anything anyway,",
    "start": "2565980",
    "end": "2571140"
  },
  {
    "text": "because we'd shift\nthe whole thing. So we don't have to do anything. All right. If we're in either\nof these cases, we're just going to return,\nbecause I either shouldn't",
    "start": "2571140",
    "end": "2580042"
  },
  {
    "text": "do anything to the array\nor I have no idea what you're talking about,\nif it's negative or something like that.",
    "start": "2580042",
    "end": "2585710"
  },
  {
    "text": "OK, so that's the first thing. Otherwise, what do we do? We shift one thing over and\nthen we make a recursive call.",
    "start": "2585710",
    "end": "2594350"
  },
  {
    "text": "Does that make sense? OK. So we'll delete the first\nthing as a temporary variable--",
    "start": "2594350",
    "end": "2607890"
  },
  {
    "text": "delete first.  And then we'll insert last, x.",
    "start": "2607890",
    "end": "2620220"
  },
  {
    "text": " And then we need to\ndo the recursive call.",
    "start": "2620220",
    "end": "2626770"
  },
  {
    "text": "So what's a recursive\ncall look like? Yeah? STUDENT: Shift_left\nD, K minus 1--",
    "start": "2626770",
    "end": "2631995"
  },
  {
    "text": "JASON KU: Yeah. So shift_left D, K minus 1--",
    "start": "2631995",
    "end": "2640540"
  },
  {
    "text": "OK? And then we can return. This thing doesn't need\nto return anything.",
    "start": "2640540",
    "end": "2646600"
  },
  {
    "text": "It's just doing\nstuff to the thing. Right? And whenever we\nget this K, we make",
    "start": "2646600",
    "end": "2653089"
  },
  {
    "text": "a call, that gets down\nto 0, we will terminate because we will return.",
    "start": "2653090",
    "end": "2659780"
  },
  {
    "text": "We're in this range\nsomewhere between we-- have an input after this line.",
    "start": "2659780",
    "end": "2664859"
  },
  {
    "text": "We know that K is somewhere\nbetween 1 and n minus 1.",
    "start": "2664860",
    "end": "2670070"
  },
  {
    "text": "And what we'll do is, every\ntime through this recursion, we will subtract 1\nfrom K. So this is",
    "start": "2670070",
    "end": "2676799"
  },
  {
    "text": "a nice, well-ordered sequence. We do the correct thing\nobviously in the base case,",
    "start": "2676800",
    "end": "2685150"
  },
  {
    "text": "and as long as this thing\nwas correct for a smaller value of K, this thing also\ndoes the correct thing,",
    "start": "2685150",
    "end": "2692650"
  },
  {
    "text": "because we're shifting\nover one, as we are asked, and we're letting this\ndo the work of the rest.",
    "start": "2692650",
    "end": "2699460"
  },
  {
    "text": "I don't have to\nthink about that. I just have to think about\nthis one loop, this one part",
    "start": "2699460",
    "end": "2704990"
  },
  {
    "text": "of the thing that I'm doing. Constant amount of work\nis done in this section. And how many times\ndo I call a function?",
    "start": "2704990",
    "end": "2712430"
  },
  {
    "text": "STUDENT: [INAUDIBLE] JASON KU: Yeah. I think K minus 1 times, or-- I don't know. I forget. But it's ordered\nK for sure, right?",
    "start": "2712430",
    "end": "2718940"
  },
  {
    "text": "And we do a constant\namount of work per call, ignoring this extra call.",
    "start": "2718940",
    "end": "2724340"
  },
  {
    "text": "Does that make sense? So this thing runs in\norder K, as desired.",
    "start": "2724340",
    "end": "2731330"
  },
  {
    "text": "OK? Does that make sense? All right. So now we will move\non to question 3.",
    "start": "2731330",
    "end": "2739089"
  },
  {
    "text": " Any questions about question 2?",
    "start": "2739090",
    "end": "2745190"
  },
  {
    "text": "That one's really probably\none of the easiest problems we've ever had on a problem set.",
    "start": "2745190",
    "end": "2751490"
  },
  {
    "text": "Sorry to scare you. So problem 3-- OK, so this is a little\nblock of text right here.",
    "start": "2751490",
    "end": "2760000"
  },
  {
    "text": "A dynamic array can support\na sequence interface supporting worst case\nconstant time indexing as well as insertion\nand removal of items",
    "start": "2760000",
    "end": "2766210"
  },
  {
    "text": "at the back of the array\nin amortized constant time. So this is what we did\nyesterday in lecture, right?",
    "start": "2766210",
    "end": "2772420"
  },
  {
    "text": "We showed how a dynamic array-- it's fast to do dynamic\noperations at the end.",
    "start": "2772420",
    "end": "2779799"
  },
  {
    "text": "OK. However, insertion and\ndeletion at the front is not very efficient because,\nif you tried to do that,",
    "start": "2779800",
    "end": "2785360"
  },
  {
    "text": "you'd have to shift\neverything over. That makes sense? All right, on the other hand,\nwhat we talked about yesterday",
    "start": "2785360",
    "end": "2790960"
  },
  {
    "text": "was linked lists. They can be made to support\ninsertion and deletion",
    "start": "2790960",
    "end": "2797530"
  },
  {
    "text": "at both ends in constant time. OK, so that's a little\nforeshadowing of something you're going to do on Pset1.",
    "start": "2797530",
    "end": "2803470"
  },
  {
    "text": "But in lecture, we talked\nabout that operation-- that data structure,\na singly linked list,",
    "start": "2803470",
    "end": "2810279"
  },
  {
    "text": "being good at dynamic operations\nat the front of the list, because essentially,\nwe could just",
    "start": "2810280",
    "end": "2815440"
  },
  {
    "text": "remember where the\nfront of the list was and swap things\nin as needed.",
    "start": "2815440",
    "end": "2821050"
  },
  {
    "text": "That makes sense? So on your problem set,\nwhat you're going to do is make end operations good\non the linked list as well,",
    "start": "2821050",
    "end": "2829120"
  },
  {
    "text": "as well as supporting\nanother operation. But what's the problem\nwith linked lists,",
    "start": "2829120",
    "end": "2837340"
  },
  {
    "text": "as compared to dynamic arrays? Yeah? STUDENT: Linked list lookups\ncan take up to linear time.",
    "start": "2837340",
    "end": "2845109"
  },
  {
    "text": "JASON KU: Yeah,\nlinked lists lookups can take linear time,\nbecause I have no-- I don't have the benefit of\nan array, where I can randomly",
    "start": "2845110",
    "end": "2852520"
  },
  {
    "text": "access something in the middle\nby essentially just doing one arithmetic\noffset calculation",
    "start": "2852520",
    "end": "2858820"
  },
  {
    "text": "from the front address and be\nable to find this thing further",
    "start": "2858820",
    "end": "2863920"
  },
  {
    "text": "down in constant time using\nour model of computation of the random net\naccess machine.",
    "start": "2863920",
    "end": "2869770"
  },
  {
    "text": "In a linked list,\nthese things could be stored all over\nthe place in memory, and I have to traverse those\npointers until I get to the one",
    "start": "2869770",
    "end": "2877810"
  },
  {
    "text": "that I'm looking for. That's a benefit of\nan array-based data",
    "start": "2877810",
    "end": "2883030"
  },
  {
    "text": "structure versus a\nlinked, pointer-based one. OK, so then we get to the\nmeat of this question.",
    "start": "2883030",
    "end": "2891280"
  },
  {
    "text": "Show that we can have\nthe best of both worlds-- we can have a data\nstructure that",
    "start": "2891280",
    "end": "2897250"
  },
  {
    "text": "supports worst case\nconstant time lookup, just like an array, but amortized\nconstant time dynamic",
    "start": "2897250",
    "end": "2905790"
  },
  {
    "text": "operations from the back and\nthe front of the sequence.",
    "start": "2905790",
    "end": "2911220"
  },
  {
    "text": "Does that make sense? All right. Is this question or a-- OK. STUDENT: Can you define\namortize one more time?",
    "start": "2911220",
    "end": "2918088"
  },
  {
    "text": "JASON KU: Yes. Sorry about that. Can I define amortize\none more time? OK, so this is a tough\nthing to define in general,",
    "start": "2918088",
    "end": "2930260"
  },
  {
    "text": "but not that much. All right, so amortization\nusually you put in--",
    "start": "2930260",
    "end": "2936602"
  },
  {
    "text": "at least in this\nclass, we're going to put in terms of\na data structure. So you have this thing.",
    "start": "2936602",
    "end": "2942110"
  },
  {
    "text": "It supports some\noperations, and you're going to do a bunch of\noperations on that thing. There's not really a reason\nto have a data structure,",
    "start": "2942110",
    "end": "2949100"
  },
  {
    "text": "unless you're going to\ndo lots of things to it. Otherwise, you just\nwrite a single algorithm",
    "start": "2949100",
    "end": "2954530"
  },
  {
    "text": "to do whatever it is\nthat you want to do. The value of the\ndata structure is",
    "start": "2954530",
    "end": "2960830"
  },
  {
    "text": "that you can do\nsome work up front by making this thing make some\nof these operations faster.",
    "start": "2960830",
    "end": "2968090"
  },
  {
    "text": "OK? So what amortization\nmeans is, OK,",
    "start": "2968090",
    "end": "2973099"
  },
  {
    "text": "if I have, say, a\ndynamic array, where I'm going to be inserting\nthings at the end,",
    "start": "2973100",
    "end": "2982190"
  },
  {
    "text": "sometimes, when I\nadd something, I'm going to spend a lot of\ntime to add that thing.",
    "start": "2982190",
    "end": "2987430"
  },
  {
    "text": "I'm going to spend linear time. But what's the\npoint of this data structure in the first place?",
    "start": "2987430",
    "end": "2993200"
  },
  {
    "text": "The point is that I want to\nbe able to potentially add a lot of things to this thing.",
    "start": "2993200",
    "end": "2998330"
  },
  {
    "text": "Does that make sense? Amortization is saying\nthat, even though sometimes this operation will be bad,\naveraged over many operations,",
    "start": "2998330",
    "end": "3009007"
  },
  {
    "text": "this is going to have\na better running time. That's the amortization. So more formally, what\nthat's going to say is,",
    "start": "3009007",
    "end": "3014590"
  },
  {
    "text": "if I have an operation, the\ndefinition of it running in amortized some amount\nof time-- say K time or--",
    "start": "3014590",
    "end": "3023849"
  },
  {
    "text": "yeah, sure-- that means\nthat, if I do n operations,",
    "start": "3023850",
    "end": "3030080"
  },
  {
    "text": "generally for large N-- if I do that operation n\ntimes, the total time it takes",
    "start": "3030080",
    "end": "3036380"
  },
  {
    "text": "me to do all of those\noperations is not going to be more than n\ntimes K. So on average,",
    "start": "3036380",
    "end": "3042289"
  },
  {
    "text": "it's going to take me K time. Now, in O-4-6 you'll get a\nmore formal definition of that",
    "start": "3042290",
    "end": "3048230"
  },
  {
    "text": "and you'll get a lot of\nways of analyzing things, like a potential function and--",
    "start": "3048230",
    "end": "3055680"
  },
  {
    "text": "we're going to use in what\nwe call charging arguments even today.",
    "start": "3055680",
    "end": "3061430"
  },
  {
    "text": "So it's a much broader\nanalysis paradigm than what we're\ngoing to talk about.",
    "start": "3061430",
    "end": "3066870"
  },
  {
    "text": "We're only going\nto talk about it for this material\nwith dynamic arrays, and we'll just kind of--",
    "start": "3066870",
    "end": "3072319"
  },
  {
    "text": "it's just kind of an\nintroduction to that. But does that make sense? STUDENT: Yes. JASON KU: Amortized as\na financial term, if you",
    "start": "3072320",
    "end": "3079790"
  },
  {
    "text": "know from financial term,\nmeans over the long term, this is what it is on average.",
    "start": "3079790",
    "end": "3086030"
  },
  {
    "text": "You can think about-- but that's different\nthan running time. That's average running\ntime of an algorithm.",
    "start": "3086030",
    "end": "3093380"
  },
  {
    "text": "It's a much different concept. What is an average running time? Well, that's hard to\ndefine, because it's",
    "start": "3093380",
    "end": "3100310"
  },
  {
    "text": "talking about an average over\nall possible inputs, and then-- OK, so maybe some inputs\nare more likely than others,",
    "start": "3100310",
    "end": "3107660"
  },
  {
    "text": "and so you've got a\ndistribution on the inputs and you're trying to average\nthe running time of--",
    "start": "3107660",
    "end": "3113329"
  },
  {
    "text": "this has nothing\nto do with that. Amortization means that\nyou have a-- usually a data structure that\nyou're operating on,",
    "start": "3113330",
    "end": "3120650"
  },
  {
    "text": "and you're doing an\noperation multiple times, and you're getting a\nbenefit because you're doing that operation lots of times.",
    "start": "3120650",
    "end": "3127200"
  },
  {
    "text": "And so when you are\ninstantiating a Python list and you're doing push and\npop operations on the back,",
    "start": "3127200",
    "end": "3135590"
  },
  {
    "text": "that's-- or is it append-- STUDENT: [INAUDIBLE] JASON KU: Append and pop? OK. I've been writing JavaScript\na little bit recently.",
    "start": "3135590",
    "end": "3145819"
  },
  {
    "text": "But so append and pop-- those operations, while\nnot cheap all the time,",
    "start": "3145820",
    "end": "3152660"
  },
  {
    "text": "are cheap well enough that, when\nwe analyze an entire algorithm that might do a linear number\nof appends to this list,",
    "start": "3152660",
    "end": "3162350"
  },
  {
    "text": "all of those appends\nadded together will only take linear\ntime, because I've done a linear number of them.",
    "start": "3162350",
    "end": "3167560"
  },
  {
    "text": "Does that make sense? STUDENT: Yeah. Thank you. JASON KU: OK-- long-winded\nanswer to your question. Sorry about that.",
    "start": "3167560",
    "end": "3174350"
  },
  {
    "text": "Any other questions\nbefore we get going? All right.",
    "start": "3174350",
    "end": "3179500"
  },
  {
    "text": "Anyone have any\nideas of how we can use the ideas of a dynamic array\nand make it good for operations",
    "start": "3179500",
    "end": "3187329"
  },
  {
    "text": "on both ends? I'll let someone else answer. I'll give a second, and\nthen go to you in a sec.",
    "start": "3187330",
    "end": "3194349"
  },
  {
    "text": "Yeah? STUDENT: So [INAUDIBLE] dynamic\n[INAUDIBLE] left true on one",
    "start": "3194350",
    "end": "3199438"
  },
  {
    "text": "end [INAUDIBLE] JASON KU: Sure. STUDENT: [INAUDIBLE] here we\ncould leave some [INAUDIBLE] JASON KU: That's\nan excellent idea.",
    "start": "3199438",
    "end": "3208100"
  },
  {
    "text": "We're going to talk about\ntwo ways of doing this. Right. So what your colleague was\nsaying was that, in lecture,",
    "start": "3208100",
    "end": "3214730"
  },
  {
    "text": "when we're talking about\ndynamic ways and we want to make operations on the\nright side-- the end--",
    "start": "3214730",
    "end": "3221720"
  },
  {
    "text": "fast, what we did was we\nallocated some extra space at the end, and then,\nwhen we added things,",
    "start": "3221720",
    "end": "3229152"
  },
  {
    "text": "we didn't have to reallocate. We had space to\nput those things. So what your colleague\nwas saying was,",
    "start": "3229152",
    "end": "3235849"
  },
  {
    "text": "let's just do the same\nthing on both ends. Let's leave some extra space\non the front and extra space",
    "start": "3235850",
    "end": "3241970"
  },
  {
    "text": "on the back when we\ninstantiate this thing, and then we can rebuild\nless frequently than if we",
    "start": "3241970",
    "end": "3249650"
  },
  {
    "text": "didn't have that extra space. Does that makes sense? OK, so what we had for,\nlet's say, down here--",
    "start": "3249650",
    "end": "3258000"
  },
  {
    "text": "so this is question 3-- the idea of the\ndynamic array right was that we left some\nextra space here at the end",
    "start": "3258000",
    "end": "3269599"
  },
  {
    "text": "so that, sure, we allocated\nmore than we needed to,",
    "start": "3269600",
    "end": "3274700"
  },
  {
    "text": "but when we insert\nthings now, it's cheap. And we don't have to allocate\nmore space for this thing",
    "start": "3274700",
    "end": "3282410"
  },
  {
    "text": "until we've done a linear\nnumber of insertions. This was n.",
    "start": "3282410",
    "end": "3287509"
  },
  {
    "text": "This was n. Really any constant\nfactor will do here. But if you had n\nthings here, we'd",
    "start": "3287510",
    "end": "3292910"
  },
  {
    "text": "be assured that I\nwouldn't need to rebuild this thing until I've done a\nlinear number of operations.",
    "start": "3292910",
    "end": "3299869"
  },
  {
    "text": "And so in a sense, I can charge\nthe linear time operation",
    "start": "3299870",
    "end": "3304970"
  },
  {
    "text": "of re-expanding this thing to\neach one of those operations. And so on average,\nit'll be constant.",
    "start": "3304970",
    "end": "3311180"
  },
  {
    "text": "Does that makes sense? Right. So instead, what your\ncolleague was saying--",
    "start": "3311180",
    "end": "3316430"
  },
  {
    "text": "let's instantiate this\nthing with some extra space on both sides.",
    "start": "3316430",
    "end": "3321870"
  },
  {
    "text": "OK? So now, as I insert thing here,\ninsert thing here-- blah, blah,",
    "start": "3321870",
    "end": "3327060"
  },
  {
    "text": "blah, blah, blah-- I'll definitely know that, after\na linear number of insertions,",
    "start": "3327060",
    "end": "3332430"
  },
  {
    "text": "when I rebuild this\nthing, I'll have done enough operations to pay\nfor that expensive operation. Does that makes sense?",
    "start": "3332430",
    "end": "3338859"
  },
  {
    "text": "So that's the idea behind\nexpanding this dynamic array",
    "start": "3338860",
    "end": "3343890"
  },
  {
    "text": "to be kind of this dynamic deck. It's a doubly ended\nqueue kind of system",
    "start": "3343890",
    "end": "3351120"
  },
  {
    "text": "where I can do dynamic\noperations efficiently on both ends.",
    "start": "3351120",
    "end": "3357170"
  },
  {
    "text": "So one of the things that\nwe talked about yesterday was also removing\nright at the end.",
    "start": "3357170",
    "end": "3366289"
  },
  {
    "text": "Removing items from\nthe back of this thing",
    "start": "3366290",
    "end": "3371620"
  },
  {
    "text": "will decrease the number of\nitems we're storing, right? That makes sense.",
    "start": "3371620",
    "end": "3377340"
  },
  {
    "text": "And maybe we're just\nfine with that right. ",
    "start": "3377340",
    "end": "3383210"
  },
  {
    "text": "As a programmer, why\nmight you not like just removing items\nuntil you got to nothing,",
    "start": "3383210",
    "end": "3390710"
  },
  {
    "text": "and just leaving the\nspace where it is? Yeah? STUDENT: Might lock up a\nlot of memory [INAUDIBLE] JASON KU: Yeah.",
    "start": "3390710",
    "end": "3396105"
  },
  {
    "text": "So let's say, over the\ncourse of my program, I use this data structure. I'm just trying to\nfill it up with stuff,",
    "start": "3396105",
    "end": "3403310"
  },
  {
    "text": "and then I remove all\nbut like two things, and then I go about my business.",
    "start": "3403310",
    "end": "3408980"
  },
  {
    "text": "I run through the program. But I'm never really using\nany but those two things for the rest of my program.",
    "start": "3408980",
    "end": "3416329"
  },
  {
    "text": "But now I've got-- I don't know-- maybe I did\nput 1,000, or a million, or a billion things in that\nthing, and then, when I--",
    "start": "3416330",
    "end": "3423335"
  },
  {
    "text": "as I decreased, as I removed\nthings from that item, I still have all that\nspace there being taken up",
    "start": "3423335",
    "end": "3430760"
  },
  {
    "text": "by essentially nothing, because\nI've removed everything from it-- at least in my conception.",
    "start": "3430760",
    "end": "3438230"
  },
  {
    "text": "So what I would really like\nto maintain with this data structure is that\nat no point in time",
    "start": "3438230",
    "end": "3446060"
  },
  {
    "text": "am I using more than a\nlinear amount of space with respect to the number of\nthings that are stored in it.",
    "start": "3446060",
    "end": "3454530"
  },
  {
    "text": "Does that make sense? So in a dynamic\narray, what we do",
    "start": "3454530",
    "end": "3463780"
  },
  {
    "text": "is, when we get small enough,\nlet's resize this thing down",
    "start": "3463780",
    "end": "3471260"
  },
  {
    "text": "so that we have-- we're using less space. ",
    "start": "3471260",
    "end": "3477079"
  },
  {
    "text": "As I'm decreasing,\nas I'm popping things from the end of this\nthing, at what point",
    "start": "3477080",
    "end": "3483030"
  },
  {
    "text": "do you think I should\nrebuild my array? When I'm no longer\na linear amount?",
    "start": "3483030",
    "end": "3490140"
  },
  {
    "text": "Well, that's a little hard to\ntell what that is in real life, because our ends\naren't arbitrary.",
    "start": "3490140",
    "end": "3495480"
  },
  {
    "text": "We need to actually have a time\nat which we need to transition",
    "start": "3495480",
    "end": "3501420"
  },
  {
    "text": "over and copy things over. So when might we\nwant to do that? STUDENT: [INAUDIBLE] JASON KU: Say again.",
    "start": "3501420",
    "end": "3507100"
  },
  {
    "text": "STUDENT: After n/2 [INAUDIBLE] JASON KU: After n/2 removals-- OK.",
    "start": "3507100",
    "end": "3512620"
  },
  {
    "text": "So I remove n/2 things. OK, so now we're kind\nof at a n/4 fill--",
    "start": "3512620",
    "end": "3520569"
  },
  {
    "text": "so we're using a\nfourth of the space. And now-- great. So you're saying rebuild.",
    "start": "3520570",
    "end": "3526390"
  },
  {
    "text": "OK, so I'll stick everything\nin something that's now--",
    "start": "3526390",
    "end": "3531490"
  },
  {
    "text": "this is m. I'm going to call\nthis m, and now we're sticking it into something\nthat has size m/4.",
    "start": "3531490",
    "end": "3539200"
  },
  {
    "text": "Sound good? Yeah? ",
    "start": "3539200",
    "end": "3544270"
  },
  {
    "text": "Yeah? Everyone OK with this? STUDENT: [INAUDIBLE]\nm/4 [INAUDIBLE] JASON KU: Oh, OK.",
    "start": "3544270",
    "end": "3550660"
  },
  {
    "text": "So what you're saying\nis that we actually want to keep some\nextra space back here.",
    "start": "3550660",
    "end": "3557470"
  },
  {
    "text": "And why is that?  Because imagine if we just\nallocated this amount of space,",
    "start": "3557470",
    "end": "3565470"
  },
  {
    "text": "and I removed the m/4\nplus 1th item here,",
    "start": "3565470",
    "end": "3570720"
  },
  {
    "text": "we resized down to\nthis thing, and then I want to do an insertion again. ",
    "start": "3570720",
    "end": "3577820"
  },
  {
    "text": "Well, then I have to re expand\nout to something like this, and that's maybe not\ngoing to be a good thing.",
    "start": "3577820",
    "end": "3584495"
  },
  {
    "text": "We might have to bounce\nback and forth a lot. That's hard for me to think\nabout what we're going to do.",
    "start": "3584495",
    "end": "3590000"
  },
  {
    "text": "But if we always resize\nto a fill ratio that",
    "start": "3590000",
    "end": "3595340"
  },
  {
    "text": "includes a linear amount\nof things on the end, then I know that,\nwhen I resize down,",
    "start": "3595340",
    "end": "3602810"
  },
  {
    "text": "I'll be doing either a\nlinear number of deletions or a linear number of insertions\nbefore I have to rebuild again.",
    "start": "3602810",
    "end": "3609890"
  },
  {
    "text": "So this charging\nargument again-- I have to do a linear\nnumber of cheap things before I have to do an\nexpensive thing again.",
    "start": "3609890",
    "end": "3615930"
  },
  {
    "text": "OK? So I resize down to be-- still keep a linear amount\nof extra space at the end.",
    "start": "3615930",
    "end": "3623660"
  },
  {
    "text": "And with the double\nended thing, you can write the same\nkind of policy.",
    "start": "3623660",
    "end": "3629900"
  },
  {
    "text": "With the extra space, as\nyour colleague was saying, we can just resize down always\nto shift these things to be",
    "start": "3629900",
    "end": "3639920"
  },
  {
    "text": "placed in the middle with a\nlinear amount of extra space on the ends.",
    "start": "3639920",
    "end": "3645365"
  },
  {
    "text": " Does that make sense?",
    "start": "3645365",
    "end": "3651390"
  },
  {
    "text": "No questions? All right. That was a way in which\nwe had to redefine",
    "start": "3651390",
    "end": "3658650"
  },
  {
    "text": "an entirely new data structure. We took the ideas\nbehind dynamic arrays",
    "start": "3658650",
    "end": "3664769"
  },
  {
    "text": "and we extended those ideas\nto make this thing have extra space on both ends. But we kind of had to do\nthat re-implementation",
    "start": "3664770",
    "end": "3672480"
  },
  {
    "text": "all by ourselves. If we were doing code, that\nwould be kind of gnarly.",
    "start": "3672480",
    "end": "3677700"
  },
  {
    "text": "But what if someone just\ngave us a dynamic array? What if someone gave\nyou a Python list,",
    "start": "3677700",
    "end": "3683640"
  },
  {
    "text": "and you wanted\nthis functionality? I don't want to reimplement\na dynamic array,",
    "start": "3683640",
    "end": "3689700"
  },
  {
    "text": "but I want this\nbehavior, so how-- any way that I could\ndo that by reducing to using a dynamic array--",
    "start": "3689700",
    "end": "3697860"
  },
  {
    "text": "get this kind of running time? ",
    "start": "3697860",
    "end": "3702890"
  },
  {
    "text": "No? No one thinks that\nwe can do this. This is impossible.",
    "start": "3702890",
    "end": "3708759"
  },
  {
    "text": "No? No ideas?  No ideas-- let's say I had--",
    "start": "3708760",
    "end": "3717640"
  },
  {
    "text": "I have a dynamic array\nthat's good on one side.",
    "start": "3717640",
    "end": "3725690"
  },
  {
    "text": " Is there anything I can do\nto support dynamic operations",
    "start": "3725690",
    "end": "3731392"
  },
  {
    "text": "on both sides of a sequence?  Yeah? STUDENT: Are we able\nto just use [INAUDIBLE]",
    "start": "3731393",
    "end": "3744450"
  },
  {
    "text": "JASON KU: Oh, that's\nsupposed to be empty, right? ",
    "start": "3744450",
    "end": "3750590"
  },
  {
    "text": "Yeah. So what your colleague is\nsaying-- yeah, let's do that. Let's have one\npointing forwards,",
    "start": "3750590",
    "end": "3755740"
  },
  {
    "text": "one pointing backwards. This is the first\nof a certain thing. When we were doing just\na dynamic array here,",
    "start": "3755740",
    "end": "3762970"
  },
  {
    "text": "where we had to\nrebuild everything, it was important\nthat we kept track of where the front thing was so\nthat we could do time indexing.",
    "start": "3762970",
    "end": "3772630"
  },
  {
    "text": "As this thing\nchanged, we would now have to compute where our\nindex was in this thing",
    "start": "3772630",
    "end": "3778450"
  },
  {
    "text": "by adding it to\nwhere the front was. On this one, we've got\nsome similar problems.",
    "start": "3778450",
    "end": "3785760"
  },
  {
    "text": "So what I'm going\nto do is I'm going to divide the\nsequence I'm trying to store up into two sections,\nmaybe about the same size.",
    "start": "3785760",
    "end": "3797050"
  },
  {
    "text": "So each of these contains\na linear number of items. That's how I'm\ngoing to instantiate my thing with a linear amount\nof extra space on both ends.",
    "start": "3797050",
    "end": "3804710"
  },
  {
    "text": "So now, as I insert\non either side or delete from either side,\nit's going to work just",
    "start": "3804710",
    "end": "3810980"
  },
  {
    "text": "like a dynamic array. I have to do some arithmetic\nhere to figure out where--",
    "start": "3810980",
    "end": "3816290"
  },
  {
    "text": "if I was trying to\naccess these items, I'd have to subtract from\nwherever this thing--",
    "start": "3816290",
    "end": "3822530"
  },
  {
    "text": "I have to do some index\narithmetic, but that's tedious, but you could do it.",
    "start": "3822530",
    "end": "3829400"
  },
  {
    "text": "OK. There's one caveat,\none problem that you run into in using\nsomething like this.",
    "start": "3829400",
    "end": "3836400"
  },
  {
    "text": "And what would that be? Yeah? STUDENT: I'm not\nsure, but you store things in the second\nhalf of a dynamic array.",
    "start": "3836400",
    "end": "3846430"
  },
  {
    "text": "JASON KU: In here? STUDENT: In the first one. JASON KU: In here? STUDENT: [INAUDIBLE] JASON KU: Right. So what I'm doing\nhere is actually,",
    "start": "3846430",
    "end": "3852670"
  },
  {
    "text": "I'm thinking of this\nas two dynamic arrays, but I'm viewing\nthis one in reverse.",
    "start": "3852670",
    "end": "3860980"
  },
  {
    "text": "So this is actually the\nlast of this dynamic array.",
    "start": "3860980",
    "end": "3866530"
  },
  {
    "text": "Does that make sense? All right. So if that's the\nsituation I'm in, is--",
    "start": "3866530",
    "end": "3873369"
  },
  {
    "text": "am I done? Do I have to care\nabout anything else? You guys are all\nlike, we're done,",
    "start": "3873370",
    "end": "3879920"
  },
  {
    "text": "and I would not give\nyou full points. Why aren't we done? ",
    "start": "3879920",
    "end": "3888230"
  },
  {
    "text": "Yeah? STUDENT: [INAUDIBLE]",
    "start": "3888230",
    "end": "3899953"
  },
  {
    "text": "JASON KU: OK, so what your\ncolleague is saying is we somehow got to merge\nthese into one array. So we're getting around that\nby keeping indexes to here",
    "start": "3899953",
    "end": "3908000"
  },
  {
    "text": "and being able to do index\narithmetic to kind of simulate an array underneath.",
    "start": "3908000",
    "end": "3913279"
  },
  {
    "text": "So we can compute where\nthese indices should be. Anyone have another problem\nwith an underspecified data",
    "start": "3913280",
    "end": "3922005"
  },
  {
    "text": "structure here? Yeah? STUDENT: [INAUDIBLE] it\ncould be that [INAUDIBLE]",
    "start": "3922005",
    "end": "3929263"
  },
  {
    "text": "JASON KU: I see. So what your\ncolleague is saying, which is exactly correct-- if I were removing\nthings, removing things,",
    "start": "3929263",
    "end": "3935390"
  },
  {
    "text": "removing things, I have\nnothing else in here. If I try to pop\nfrom this end again,",
    "start": "3935390",
    "end": "3940993"
  },
  {
    "text": "I'm going to have to pop from\nthe beginning of this thing, which I don't really-- that's going to break\nsomething of what I'm doing.",
    "start": "3940993",
    "end": "3947998"
  },
  {
    "text": "It's not maintaining\nthe invariants of what I want on my data structure. And so the only caveat here\nis that, when I reduce down",
    "start": "3947998",
    "end": "3955190"
  },
  {
    "text": "to one of these is\nempty, what do I do? STUDENT: You have to cut the\nother one in half [INAUDIBLE]",
    "start": "3955190",
    "end": "3961960"
  },
  {
    "text": "JASON KU: You cut this thing in\nhalf, move these elements over. But that's going to leave\nthese things in the middle",
    "start": "3961960",
    "end": "3967720"
  },
  {
    "text": "here, right? The nice thing that\nhappens here is I've done a linear\nnumber of options--",
    "start": "3967720",
    "end": "3974880"
  },
  {
    "text": "operations. I now have an\namortized cost build-up",
    "start": "3974880",
    "end": "3981420"
  },
  {
    "text": "that I can spend to now rebuild\nthe entire data structure. Does that make sense?",
    "start": "3981420",
    "end": "3987390"
  },
  {
    "text": "I can now, once I get down\nto this thing, take whatever the remaining things\nare, split it in half,",
    "start": "3987390",
    "end": "3993000"
  },
  {
    "text": "put it into two entirely new\narrays, copy them all over, and now I've restored my\ninvariant, where I'm, again,",
    "start": "3993000",
    "end": "3999190"
  },
  {
    "text": "a linear amount\nof operations away from having to do an\nexpensive operation again.",
    "start": "3999190",
    "end": "4005690"
  },
  {
    "text": "Does that make sense? So while we were able to reduce\nto using these dynamic arrays",
    "start": "4005690",
    "end": "4012470"
  },
  {
    "text": "for a lot of the\ncases, we actually had to do a little bit more\nwork to make this work out.",
    "start": "4012470",
    "end": "4021140"
  },
  {
    "text": "That make sense? OK, cool-- so that's two ways\nof approaching problem 3.",
    "start": "4021140",
    "end": "4028430"
  },
  {
    "text": "In the last little\nbit, we're going to talk about the last problem.",
    "start": "4028430",
    "end": "4034900"
  },
  {
    "text": "All right, that makes sense. I'm going to erase this picture,\nif that's all right with you guys. ",
    "start": "4034900",
    "end": "4041569"
  },
  {
    "text": "STUDENT: [INAUDIBLE] JASON KU: What's up? It's not all right? Well, too bad-- watch the video.",
    "start": "4041570",
    "end": "4048270"
  },
  {
    "text": "OK, so problem 4-- also a fairly accessible,\nshall we say, coding question--",
    "start": "4048270",
    "end": "4059940"
  },
  {
    "text": "what we're doing on\nproblem 4 is we've got this nice little story\nat the beginning, which is about this woman\nJen and her friend",
    "start": "4059940",
    "end": "4068250"
  },
  {
    "text": "Barry, who are trying to sell\nice cream to elementary school kids. They're basically lined\nup at Jen's truck,",
    "start": "4068250",
    "end": "4074010"
  },
  {
    "text": "and she's like, oh, there's\ntoo many students here. So she calls up\nher friend Barry. He has another ice cream truck,\nparts at the end of the line,",
    "start": "4074010",
    "end": "4082050"
  },
  {
    "text": "and the students--\nwhat they want to do is, to make it more\nfair, is they're going to take the\nlast half of the line,",
    "start": "4082050",
    "end": "4088530"
  },
  {
    "text": "reverse it to make it more fair. I don't know. It's a stupid situation, but\nthe underlying thing is what",
    "start": "4088530",
    "end": "4096330"
  },
  {
    "text": "we're doing is-- part\nA here is we have-- we're giving you a linked list--",
    "start": "4096330",
    "end": "4103409"
  },
  {
    "text": "a singly linked list, and\nwhat I want you to do--",
    "start": "4103410",
    "end": "4111000"
  },
  {
    "text": "the singly linked list-- all it has is a notion\nof size, how long it is.",
    "start": "4111000",
    "end": "4117810"
  },
  {
    "text": "It has a size and it\nhas a head this list--",
    "start": "4117810",
    "end": "4122818"
  },
  {
    "text": "it has a size and it has a head. And this head is a\npointer to a node,",
    "start": "4122819",
    "end": "4128790"
  },
  {
    "text": "and the node has just one-- two things stored in it.",
    "start": "4128790",
    "end": "4134680"
  },
  {
    "text": "It has who-- the name of\nthe child that's there, and the next pointer\nto the next node.",
    "start": "4134680",
    "end": "4141950"
  },
  {
    "text": "That's what a singly\nlinked list is. So node has an item\nkey and a next pointer.",
    "start": "4141950",
    "end": "4150842"
  },
  {
    "text": "This next pointer points to\nthe next node in the sequence. OK? And the question is asking, if\nwe give you a linked list that",
    "start": "4150843",
    "end": "4162229"
  },
  {
    "text": "has 2n nodes, I want you\nto take the last n nodes,",
    "start": "4162229",
    "end": "4168330"
  },
  {
    "text": "and reverse their order, and\ndo this to the data structure.",
    "start": "4168330",
    "end": "4173910"
  },
  {
    "text": "You're not going to return\na new data structure. You're going to modify\nthe existing nodes.",
    "start": "4173910",
    "end": "4180149"
  },
  {
    "text": "And actually, here is--\ngoes back to your question. ",
    "start": "4180149",
    "end": "4186509"
  },
  {
    "text": "What are we limited to in\nhow we approach this problem? What this problem serves as\nyour algorithm should not",
    "start": "4186510",
    "end": "4193200"
  },
  {
    "text": "make any new linked list nodes\nor instantiate any new non constant sized data structures.",
    "start": "4193200",
    "end": "4199390"
  },
  {
    "text": "So it's not like I can write\nthrough this whole thing, find out where the\nn plus 1th node is,",
    "start": "4199390",
    "end": "4206820"
  },
  {
    "text": "read out all of those\nnames, store them in an array somewhere, and\nthen rewrite them back out.",
    "start": "4206820",
    "end": "4214230"
  },
  {
    "text": "I'm not allowed to store\nmore than a constant amount of stuff outside of\nthis linked list,",
    "start": "4214230",
    "end": "4219390"
  },
  {
    "text": "and I'm not able to\nmake any new nodes. Essentially, I just have to\nprobably keep these items",
    "start": "4219390",
    "end": "4224400"
  },
  {
    "text": "where they are and\nmove around the nodes. Yeah? STUDENT: Can you use\nnon-constant space",
    "start": "4224400",
    "end": "4229695"
  },
  {
    "text": "without creating\na data structure? JASON KU: So if you're\nusing non-constant space,",
    "start": "4229695",
    "end": "4236280"
  },
  {
    "text": "you're instantiating some\nkind of data structure, whether it be in an array or--",
    "start": "4236280",
    "end": "4241380"
  },
  {
    "text": "STUDENT: [INAUDIBLE] JASON KU: Sure.",
    "start": "4241380",
    "end": "4246840"
  },
  {
    "text": "I'm wanting you not to do that. Yeah. ",
    "start": "4246840",
    "end": "4254600"
  },
  {
    "text": "Any other questions? So how are we going\nto do this problem?",
    "start": "4254600",
    "end": "4263590"
  },
  {
    "start": "4263590",
    "end": "4268940"
  },
  {
    "text": "Anybody? Anyone have approach for how\nI might approach this problem? Yeah?",
    "start": "4268940",
    "end": "4275330"
  },
  {
    "text": "STUDENT: In order to\nget to the second half you don't have to do\nall of that [INAUDIBLE]",
    "start": "4275330",
    "end": "4281095"
  },
  {
    "text": "JASON KU: Sure. STUDENT: Could you start--  probably start\ncounting backwards so",
    "start": "4281095",
    "end": "4287120"
  },
  {
    "text": "that you can get them\nin the back order, and then meet it in the\nmiddle so [INAUDIBLE] JASON KU: Interesting.",
    "start": "4287120",
    "end": "4292700"
  },
  {
    "text": "So there's a lot of things-- let's break this down. So a lot of times,\nwhen we're asking",
    "start": "4292700",
    "end": "4298580"
  },
  {
    "text": "you to construct an\nalgorithm-- a lot of times, it makes sense to develop\nan outline or a game",
    "start": "4298580",
    "end": "4305650"
  },
  {
    "text": "plan of constituent\nparts that you might want to approach this problem with.",
    "start": "4305650",
    "end": "4311050"
  },
  {
    "text": "So the first thing that your\ncolleague over here was saying was, at some point, we\nneed to find out where the middle of this thing is.",
    "start": "4311050",
    "end": "4318306"
  },
  {
    "text": "Does that makes sense? So maybe the first thing we want\nto do to approach this problem",
    "start": "4318306",
    "end": "4326349"
  },
  {
    "text": "is, one, find n-th node.",
    "start": "4326350",
    "end": "4332890"
  },
  {
    "text": " That's the end of the\nfirst set of children.",
    "start": "4332890",
    "end": "4338180"
  },
  {
    "text": "OK?  Then I have a second\nthing that I want to do.",
    "start": "4338180",
    "end": "4348812"
  },
  {
    "text": "What's the next\nthing I have to do? I have to reverse the\npointers of everything",
    "start": "4348812",
    "end": "4353870"
  },
  {
    "text": "after the n-th node, right? OK, so second thing--",
    "start": "4353870",
    "end": "4360079"
  },
  {
    "text": "reverse, I guess, next pointers\nof everything after the n-th",
    "start": "4360080",
    "end": "4378470"
  },
  {
    "text": "node-- the nodes n plus 1 to 2n. Does that make sense?",
    "start": "4378470",
    "end": "4384220"
  },
  {
    "text": " And after I reversed all of\nthose things, what do I have?",
    "start": "4384220",
    "end": "4390850"
  },
  {
    "text": "I have a first block. This points like that. And now we've got this\nthing, and we've reversed",
    "start": "4390850",
    "end": "4400380"
  },
  {
    "text": "all the pointers like this. ",
    "start": "4400380",
    "end": "4407460"
  },
  {
    "text": "That's after step 2. Is that what we want? ",
    "start": "4407460",
    "end": "4415060"
  },
  {
    "text": "Yeah? STUDENT: Step 3\nwould be [INAUDIBLE]",
    "start": "4415060",
    "end": "4424020"
  },
  {
    "text": "JASON KU: So this is my new end. I'm going to call this\nnode a, and this node b,",
    "start": "4424020",
    "end": "4432810"
  },
  {
    "text": "and this node C. So tell\nme, in terms of a, b,",
    "start": "4432810",
    "end": "4438658"
  },
  {
    "text": "and c, what I'm supposed to do. Yeah? STUDENT: Quick\nquestion-- how would we reverse the next pointer?",
    "start": "4438658",
    "end": "4444410"
  },
  {
    "text": "I get what you're saying, but-- JASON KU: Right. STUDENT: --to actually\nmade that happen-- JASON KU: Yeah. So to actually make that happen,\nthis thing has an next pointer.",
    "start": "4444410",
    "end": "4452190"
  },
  {
    "text": "It's pointed to--\npointing to some node. I'm needing to relink it\nto the thing before me,",
    "start": "4452190",
    "end": "4457710"
  },
  {
    "text": "so I better remember\nwhat was before me so I can set node b.next\nequals the thing before me,",
    "start": "4457710",
    "end": "4465380"
  },
  {
    "text": "instead of the thing after me. Does that make sense? So that would be relinking the-- STUDENT: And then it\ndisconnects the linked list. JASON KU: It disconnects\nthe linked list",
    "start": "4465380",
    "end": "4471887"
  },
  {
    "text": "possibly temporarily. STUDENT: Oh, OK. It's temporary, and therefore,\nit still works out [INAUDIBLE] JASON KU: Well, we have\nto relink everything",
    "start": "4471887",
    "end": "4478530"
  },
  {
    "text": "to make sure it's temporary.  It's very possible, when\nyou're dealing with linked data",
    "start": "4478530",
    "end": "4485510"
  },
  {
    "text": "structures, to unlink something\nand not have a reference back to it, and now this\nthing is in memory",
    "start": "4485510",
    "end": "4491570"
  },
  {
    "text": "that your garbage collector\nhopefully will pick up. But if you're writing\nin a language that's",
    "start": "4491570",
    "end": "4496880"
  },
  {
    "text": "not garbage collected, then\nthat's called a memory leak. That's no good.",
    "start": "4496880",
    "end": "4503500"
  },
  {
    "text": "OK, so how do I\nrelink these things? ",
    "start": "4503500",
    "end": "4511380"
  },
  {
    "text": "This is the picture\nthat I have right now. How do I make this into\na linked list, where",
    "start": "4511380",
    "end": "4516588"
  },
  {
    "text": "it's here and then reversed?  Yeah?",
    "start": "4516588",
    "end": "4521830"
  },
  {
    "text": "STUDENT: You can link\na to c [INAUDIBLE] JASON KU: Yeah. So I replace this\npointer from a to b",
    "start": "4521830",
    "end": "4529270"
  },
  {
    "text": "to make it point to\nc instead, and then, whatever my pointer is to b-- from b-- b is reversed--\nit's pointing to a--",
    "start": "4529270",
    "end": "4536590"
  },
  {
    "text": "let's set that equal to none. So basically, the last\nstep here is clean up ends.",
    "start": "4536590",
    "end": "4548480"
  },
  {
    "text": "And in LaTeX\nwrite-up, you'd want to specify, what are the\nthings that you're relinking?",
    "start": "4548480",
    "end": "4557600"
  },
  {
    "text": "But this was a coding\nquestion, and so we actually gave you code to work with.",
    "start": "4557600",
    "end": "4562910"
  },
  {
    "text": "So I'm going to see whether\nI can live code this for you",
    "start": "4562910",
    "end": "4568400"
  },
  {
    "text": "in front of you. ",
    "start": "4568400",
    "end": "4573740"
  },
  {
    "text": "OK. So here was our code\nsubmission site from last term.",
    "start": "4573740",
    "end": "4581050"
  },
  {
    "text": "And what I have here is my\ntemplate from last term, Pset1. It opens this folder.",
    "start": "4581050",
    "end": "4587410"
  },
  {
    "text": "It's got a bunch\nof things in it, the LaTeX template\nthat you have, and then a bunch of\nthese Python files.",
    "start": "4587410",
    "end": "4594790"
  },
  {
    "text": "So I'm going to-- where is it? Here. OK, so these are the files\nthat are in my directory.",
    "start": "4594790",
    "end": "4601630"
  },
  {
    "text": "I've given you a version of\nthis linked list sequence. And then we have two more\ncode questions-- a tests file",
    "start": "4601630",
    "end": "4608290"
  },
  {
    "text": "and a reorder_students file. So reorder_students look\nsomething like this.",
    "start": "4608290",
    "end": "4614949"
  },
  {
    "text": "It has a template of\nthe code that we're going to want you to write,\nwith inputs and outputs. And you're putting\nyour code here.",
    "start": "4614950",
    "end": "4622000"
  },
  {
    "text": "And this function doesn't\nneed to return anything. All right, and then\nwe also give you this linked list\nimplementation, which",
    "start": "4622000",
    "end": "4628210"
  },
  {
    "text": "is what's in your\nrecitation handout. I'm actually going to\nignore most of this stuff--",
    "start": "4628210",
    "end": "4634210"
  },
  {
    "text": "really just that this thing\ncontains an item in next in your node--",
    "start": "4634210",
    "end": "4639640"
  },
  {
    "text": "I'm not actually going to\nlook at the items at all-- and a head and size in my\nlinked list at the top level.",
    "start": "4639640",
    "end": "4645470"
  },
  {
    "text": "OK? But this is just to tell\nyou what's in there. So that's what's going\nto be input to my thing,",
    "start": "4645470",
    "end": "4652030"
  },
  {
    "text": "and if I go here\nand I run the tests document that you\ngave me, it fails",
    "start": "4652030",
    "end": "4658775"
  },
  {
    "text": "because I don't have anything. It didn't do\nanything to the list. OK? All right.",
    "start": "4658775",
    "end": "4664690"
  },
  {
    "text": "And in fact, if I go into\nhere to the tests and I--",
    "start": "4664690",
    "end": "4672404"
  },
  {
    "text": "what is it? It's reordering\nthe students here. I print the linked\nlist that you gave me.",
    "start": "4672404",
    "end": "4678600"
  },
  {
    "text": "I'm going to have\na line break here. What we can see is,\nwhen I do this--",
    "start": "4678600",
    "end": "4689280"
  },
  {
    "text": "here are my test cases. Here's a linked list. And what's happening\nis it's just spitting",
    "start": "4689280",
    "end": "4694580"
  },
  {
    "text": "out the same linked lists. I haven't done anything to it. All right, so we need\nto do something to it.",
    "start": "4694580",
    "end": "4701090"
  },
  {
    "text": "How are we going to do that? All right, so let's\nimplement this function. And I'm going to get rid\nof this stuff, because--",
    "start": "4701090",
    "end": "4708193"
  },
  {
    "text": "get rid of that. All right, so we need\nto reorder the students. So I'm going to break\nthis up into three parts that we have here.",
    "start": "4708193",
    "end": "4713780"
  },
  {
    "text": "We're going to\nfind the n-th node. So how do we find the n-th node?",
    "start": "4713780",
    "end": "4720230"
  },
  {
    "text": "This thing has a size\non it, so let's at least figure out what n is. So let's set n equal to--",
    "start": "4720230",
    "end": "4727880"
  },
  {
    "text": "I think I can use\nlength, because I've implemented that on\nmy thing, and it's going to be whatever\nthe length is over 2.",
    "start": "4727880",
    "end": "4733890"
  },
  {
    "text": "And I'm defined by\nthe problem statement that I'm only going\nto have even inputs. And I'm going to set, at first,\nmy a to be the starting place.",
    "start": "4733890",
    "end": "4748204"
  },
  {
    "text": "I'm going to just have a little\ntemporary variable that's going to say this is going to\nbe equal to the head of my list.",
    "start": "4748205",
    "end": "4754480"
  },
  {
    "text": "And what I'm going to do is\nwhat your colleague was saying-- is I'm just going to\nloop through n times",
    "start": "4754480",
    "end": "4760540"
  },
  {
    "text": "until I reach the n-th thing. Actually, how many\ntimes do I have to travel through next\npointers to get to node a?",
    "start": "4760540",
    "end": "4769170"
  },
  {
    "text": "n minus 1, actually-- yep. So this is going to be for. I don't care about\nthis loop variable,",
    "start": "4769170",
    "end": "4775679"
  },
  {
    "text": "so I'm going to just use\nthat n minus 1 times. What am I going to do?",
    "start": "4775680",
    "end": "4781400"
  },
  {
    "text": "I want to replace a with\nthe thing it's pointed to, so I'm going to just walk down\nthis thing. a equals a.next.",
    "start": "4781400",
    "end": "4787790"
  },
  {
    "text": " And now, after the end\nof this loop, what is a?",
    "start": "4787790",
    "end": "4796430"
  },
  {
    "text": "a is the n-th node. I've now made it the\nn-th node-- fantastic.",
    "start": "4796430",
    "end": "4803190"
  },
  {
    "text": "And now I'm going to say that\nb is going to be the next one. Just in terms of my write-up,\nI labeled these things",
    "start": "4803190",
    "end": "4809790"
  },
  {
    "text": "as a, and b, and c,\nand so in my mind, I'm going to want to use\nthe same kind of notation",
    "start": "4809790",
    "end": "4815880"
  },
  {
    "text": "here so that I can\nunderstand my code. OK, so b is going to\nbe the next thing. ",
    "start": "4815880",
    "end": "4823420"
  },
  {
    "text": "And now, in this process, as\nI'm going to flip things around, what I'm going to\ndo is I'm going to keep track of three nodes.",
    "start": "4823420",
    "end": "4829420"
  },
  {
    "text": "I'm going to keep track of\nx, which is the node that I'm going to be relinking.",
    "start": "4829420",
    "end": "4835182"
  },
  {
    "text": "And what else do I\nneed to keep track of? ",
    "start": "4835182",
    "end": "4840310"
  },
  {
    "text": "If I'm-- STUDENT: [INAUDIBLE]\ndestination. JASON KU: Yeah,\nwhere I came from and where I'm going\nto, because that's what",
    "start": "4840310",
    "end": "4846520"
  },
  {
    "text": "I'm going to need to relink. In particular, I'm going to\nhave someone pointing to me, which I'm going to\ncall next previous--",
    "start": "4846520",
    "end": "4855050"
  },
  {
    "text": "or the x previous. When I'm going to label it,\nit's going to be the next thing.",
    "start": "4855050",
    "end": "4861470"
  },
  {
    "text": "All right? Does that make sense? So in my first situation, I'm--",
    "start": "4861470",
    "end": "4868850"
  },
  {
    "text": "the first thing I\nneed to relink is b, so that's going to be my x. And x previous is going to be a.",
    "start": "4868850",
    "end": "4875500"
  },
  {
    "text": "Does that makes sense? So I'm going to instantiate\nthose two variables. x and x_p are going\nto be b and a.",
    "start": "4875500",
    "end": "4884950"
  },
  {
    "text": "Sorry. That's right. Yeah. Maybe it makes more sense to\nhave x previous and x equal ab.",
    "start": "4884950",
    "end": "4892900"
  },
  {
    "text": "All right, that's\nin the right order. Either way is fine.",
    "start": "4892900",
    "end": "4898040"
  },
  {
    "text": "And then I want to\ngo through a loop. I'm going to be\ndoing a loop way. You can do it a recursive\nway, if you want.",
    "start": "4898040",
    "end": "4904540"
  },
  {
    "text": "Here's a loop way, in\nwhich I'm just going to loop through how many times? How many pointers am I going to\nrelink as I go down this thing?",
    "start": "4904540",
    "end": "4914520"
  },
  {
    "text": "I need to relink the pointers\nof all of these guys. How many are there? STUDENT: [INAUDIBLE]",
    "start": "4914520",
    "end": "4919590"
  },
  {
    "text": "JASON KU: How many? STUDENT: [INAUDIBLE] JASON KU: n-- there\nare n of them. So for-- I don't care about\nthe loop variable here either.",
    "start": "4919590",
    "end": "4928160"
  },
  {
    "text": "I'm going to do this n times. And what am I going to do? I'm going to first figure\nout who my next guy is.",
    "start": "4928160",
    "end": "4936320"
  },
  {
    "text": "I'm going to set x_n\nequals what? x.next--",
    "start": "4936320",
    "end": "4941610"
  },
  {
    "text": "all right, so now I know\nwho's next to me right, so I can go there later\nafter I relink my pointer.",
    "start": "4941610",
    "end": "4949080"
  },
  {
    "text": "I'm remembering that. Now, I don't care about what's\nstored in x.next, because I've",
    "start": "4949080",
    "end": "4957989"
  },
  {
    "text": "stored it locally. That makes sense. All right, so now I am free\nto relink that next pointer",
    "start": "4957990",
    "end": "4965100"
  },
  {
    "text": "to my previous guy. ",
    "start": "4965100",
    "end": "4970510"
  },
  {
    "text": "And now I can essentially\nshift my perspective over,",
    "start": "4970510",
    "end": "4976789"
  },
  {
    "text": "so the thing that I'm going\nto relink now is the next one. So x previous and x\nnow equals x, x_next.",
    "start": "4976790",
    "end": "4989660"
  },
  {
    "text": "Does that make sense? Just relinked things over--",
    "start": "4989660",
    "end": "4995130"
  },
  {
    "text": "so that's the end of step 2. Now, as I got down this at\nthe end of this for loop,",
    "start": "4995130",
    "end": "5001159"
  },
  {
    "text": "where is x?  What is x_p, x, and\nx_next-- or x_n?",
    "start": "5001160",
    "end": "5009260"
  },
  {
    "text": "Really, I'm only keeping\ntrack of x and x_p here. So what are x_p and x\nat the end of this loop?",
    "start": "5009260",
    "end": "5016100"
  },
  {
    "text": " I've done this n times.",
    "start": "5016100",
    "end": "5021940"
  },
  {
    "text": "I started with b at x. ",
    "start": "5021940",
    "end": "5029698"
  },
  {
    "text": "So what is x? Yeah? So we have a vote that x is c.",
    "start": "5029698",
    "end": "5037260"
  },
  {
    "text": "STUDENT: [INAUDIBLE] JASON KU: So this is\na little interesting. All right.",
    "start": "5037260",
    "end": "5043050"
  },
  {
    "text": "I will tell you that c\nis either x_p, x, or x_n.",
    "start": "5043050",
    "end": "5048750"
  },
  {
    "text": "So we have one vote for x. Who says something else? ",
    "start": "5048750",
    "end": "5056840"
  },
  {
    "text": "Eric doesn't like x.  There are only\ntwo other choices.",
    "start": "5056840",
    "end": "5064310"
  },
  {
    "text": "Does someone say something? x_p-- I will argue\nthat it is x_p.",
    "start": "5064310",
    "end": "5071219"
  },
  {
    "text": "Why? Because I'm at b. There are n things. I did n operations, and every\noperation, I move 1 over.",
    "start": "5071220",
    "end": "5081590"
  },
  {
    "text": "So when I've done n minus 1\nthings, I'm at c, the n-th one. Now x is none, because\nthere's null pointer",
    "start": "5081590",
    "end": "5088310"
  },
  {
    "text": "at the end of the list. So x_p is c, so I'm going to\nset p equal to x_p, which is--",
    "start": "5088310",
    "end": "5095465"
  },
  {
    "text": "it's just for me to remember\nwhat these things are. And I just relink\nthese two pointers.",
    "start": "5095465",
    "end": "5101150"
  },
  {
    "text": "a.next should be c and\nb.next should be none.",
    "start": "5101150",
    "end": "5108710"
  },
  {
    "text": " Does that make sense, everybody?",
    "start": "5108710",
    "end": "5113990"
  },
  {
    "text": "Let's see if we did it right. So we save that thing and we\nrun Python on the test cases,",
    "start": "5113990",
    "end": "5122510"
  },
  {
    "text": "and it did the right\nthing apparently-- maybe. Let's see-- ran\nfive test cases--",
    "start": "5122510",
    "end": "5129290"
  },
  {
    "text": "OK. All right, so let's\ntake a look at this. We had this linked list--",
    "start": "5129290",
    "end": "5135170"
  },
  {
    "text": "Lilly, Sally, Cindy,\nMaisy, Sammy, Davey. And what it turns into is Lilly,\nSally, Cindy, which is correct.",
    "start": "5135170",
    "end": "5143648"
  },
  {
    "text": "And then it reverses this\nlast part of the list-- Danny, Sammy, Maisy--\ncool, awesome.",
    "start": "5143648",
    "end": "5150830"
  },
  {
    "text": "But these are the test\ncases we gave you. So let's try this\nagainst our code checker.",
    "start": "5150830",
    "end": "5156430"
  },
  {
    "text": "So I select the file. Where do I go? I think I'm in my desktop here\nin session 1, and template,",
    "start": "5156430",
    "end": "5164390"
  },
  {
    "text": "and reorder students. I submit it. Please work. Please work. Please work.",
    "start": "5164390",
    "end": "5169577"
  },
  {
    "start": "5169578",
    "end": "5175390"
  },
  {
    "text": "And 100%-- and now we're\nhappy, and we can go party. OK.",
    "start": "5175390",
    "end": "5180580"
  },
  {
    "text": "All right, so that's\nthe first problem. Hopefully this was\nhelpful to you. We will release problem set 1\ntomorrow, and good luck on it.",
    "start": "5180580",
    "end": "5191580"
  },
  {
    "start": "5191580",
    "end": "5197251"
  }
]