[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6340"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6340",
    "end": "13320"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13320",
    "end": "20274"
  },
  {
    "text": "SRINIVAS DEVADAS: All right. Good morning, everyone. Welcome back from spring break. Hope you had a nice\ntime off and couldn't",
    "start": "20274",
    "end": "26270"
  },
  {
    "text": "wait to get back to 6.046. So exciting second half.",
    "start": "26270",
    "end": "31619"
  },
  {
    "text": "Going to do flow networks\ntoday on Thursday. Next week, it's\nlinear programming,",
    "start": "31620",
    "end": "38890"
  },
  {
    "text": "on to complexity, distributed\nalgorithms, cryptography. Topics going to come\nfast and furious.",
    "start": "38890",
    "end": "45730"
  },
  {
    "text": "Hopefully, they'll\nall be interesting. So there's a lot\nof setup associated with network flow, max flow.",
    "start": "45730",
    "end": "54220"
  },
  {
    "text": "It's an optimization problem. And so I'm going to spend\nlike the first hour here-- and hopefully, it\nwon't be too boring--",
    "start": "54220",
    "end": "61820"
  },
  {
    "text": "setting up flow networks,\ndescribing the max flow problem. As you can see, this\noutline is fairly involved,",
    "start": "61820",
    "end": "68920"
  },
  {
    "text": "talking about cuts in a\nnetwork, residual networks. And we'll, more or less, end\nthe lecture with the statement,",
    "start": "68920",
    "end": "80655"
  },
  {
    "text": "though not the\nproof-- we'll save that for next time-- of the\nmas-flow min-cut theorem, which",
    "start": "80655",
    "end": "86150"
  },
  {
    "text": "is really an iconic\ntheorem in the literature, and suddenly, the crucial\ntheorem for flow networks.",
    "start": "86150",
    "end": "94340"
  },
  {
    "text": "And we'll take the\nmax-flow min-cut theorem",
    "start": "94340",
    "end": "99679"
  },
  {
    "text": "and use that to get to the first\never max-flow algorithm, which",
    "start": "99680",
    "end": "106140"
  },
  {
    "text": "was due to Ford and Fulkerson. And that should be, pretty much,\nat the end of today's lecture.",
    "start": "106140",
    "end": "113390"
  },
  {
    "text": "And next time, we'll talk about\nthe proof of max-flow min-cut,",
    "start": "113390",
    "end": "118990"
  },
  {
    "text": "talk about some of the\nissues with Ford-Fulkerson, and then use max\nflow as a hammer",
    "start": "118990",
    "end": "126350"
  },
  {
    "text": "to solve interesting problems\nin bipartite matching, baseball",
    "start": "126350",
    "end": "131650"
  },
  {
    "text": "playoff elimination,\nand things like that. So just like shortest\npaths, can be used not just",
    "start": "131650",
    "end": "137730"
  },
  {
    "text": "to compute the shortest distance\nfrom point A to point B,",
    "start": "137730",
    "end": "143370"
  },
  {
    "text": "you can imagine that other\nproblems, for example, scheduling problems,\ntime problems, could be solved using\nDijkstra-- and you've probably",
    "start": "143370",
    "end": "150390"
  },
  {
    "text": "seen examples of\nthat-- max flow is another algorithmic hammer\nthat's being used to solve",
    "start": "150390",
    "end": "156360"
  },
  {
    "text": "a wide variety of problems. We won't really touch\non that aspect today, but we'll spend a bunch of time\non Thursday talking about that.",
    "start": "156360",
    "end": "165680"
  },
  {
    "text": "So let's get started.  We're going to\nstart with defining",
    "start": "165680",
    "end": "172069"
  },
  {
    "text": "what a flow network is. And at some level,\nit's really simple. I mean, it's a graph.",
    "start": "172070",
    "end": "178815"
  },
  {
    "text": "A graph is going to\nhave vertices and edges. We're going to only\nlook at directed graphs.",
    "start": "178815",
    "end": "186470"
  },
  {
    "text": "And we're going to have a\ncouple of constraints associated with these directed\ngraphs that are going to make the algorithms,\nand the proofs,",
    "start": "186470",
    "end": "193390"
  },
  {
    "text": "and the notation a lot simpler. I'll get to that\nin a few minutes. And the key thing with\nthe flow networks-- I",
    "start": "193390",
    "end": "200590"
  },
  {
    "text": "mean, just like you have\na source and a destination for shortest paths,\nin a flow network",
    "start": "200590",
    "end": "205760"
  },
  {
    "text": "as well, you're going\nto have a source, and you're going to have a sink. So we're going to have\ndistinguished vertices, two",
    "start": "205760",
    "end": "213612"
  },
  {
    "text": "distinguished vertices. ",
    "start": "213612",
    "end": "219160"
  },
  {
    "text": "And we're going to call them\nthe source, s, and a sink, t.",
    "start": "219160",
    "end": "226330"
  },
  {
    "text": "And so the basic idea here--\nand just to sort of set things up right up front--\nis that there's going to be some\nflow coming out of s.",
    "start": "226330",
    "end": "233980"
  },
  {
    "text": "And it's going to have to obey\nsome constraints associated with capacities of the edges,\nin order to make its way to t.",
    "start": "233980",
    "end": "241310"
  },
  {
    "text": "And along the\nway-- this is flow. This is water. You can think of it as water,\nor cars, or what have you.",
    "start": "241310",
    "end": "247670"
  },
  {
    "text": "It's a rate. You're not going to\nallow accumulation in the intermediate nodes.",
    "start": "247670",
    "end": "253650"
  },
  {
    "text": "So you're going to have law\nof conservation associated with this commodity\nthat's flowing,",
    "start": "253650",
    "end": "260250"
  },
  {
    "text": "be water, or cars, or people. And that essentially comes\ndown to, for any vertex, other",
    "start": "260250",
    "end": "268960"
  },
  {
    "text": "than s or t, everything\nentering the vertex has to leave the vertex.",
    "start": "268960",
    "end": "274550"
  },
  {
    "text": "So that's like Kirchoff's\ncurrent law, for example. So there's a lot of analogies\nhere with respect to real life,",
    "start": "274550",
    "end": "282139"
  },
  {
    "text": "or electricity in this case. And you'll see that, I think,\nover and over as we go along.",
    "start": "282140",
    "end": "290240"
  },
  {
    "text": "So let's take a look\nat a flow network. I'm not going to\ndraw it out here. I'm going to keep\nthis one example",
    "start": "290240",
    "end": "296560"
  },
  {
    "text": "all through the lecture. But just to go off and talk\nabout edges and capacities",
    "start": "296560",
    "end": "304750"
  },
  {
    "text": "before we actually\ndraw an example, we're going to have\nedges, directed edges,",
    "start": "304750",
    "end": "310840"
  },
  {
    "text": "u, v. So you have\nan edge from u to v. And it's going to\nbelong to E, obviously.",
    "start": "310840",
    "end": "318680"
  },
  {
    "text": "That's the reason the\nedge is in the network. And this edge is going\nto have a non-negative--",
    "start": "318680",
    "end": "326160"
  },
  {
    "text": "each edge is going to have a\nnon-negative capacity, C(u,v).",
    "start": "326160",
    "end": "333748"
  },
  {
    "text": "Right? And if perchance theres'\nno edge from, let's say,",
    "start": "333748",
    "end": "340430"
  },
  {
    "text": "s1 to s2-- these are\ndifferent vertices from the source or the\nsink, just as an example,",
    "start": "340430",
    "end": "349020"
  },
  {
    "text": "you can say it's between\na and b-- then, we can assume that the capacity is 0.",
    "start": "349020",
    "end": "354560"
  },
  {
    "text": "So if u, v does not belong to\nE, then assume that C(u,v) is 0.",
    "start": "354560",
    "end": "363560"
  },
  {
    "text": "So there's no way\nof getting from u to v. This rate, wall\nwater, cars-- you know,",
    "start": "363560",
    "end": "369350"
  },
  {
    "text": "there's no road that\ngets you from u to v, OK? So let's draw an example\nof a flow network.",
    "start": "369350",
    "end": "376699"
  },
  {
    "text": "We'll talk a little bit\nabout what the flow is and what the max flow is\nin example-driven algorithm",
    "start": "376700",
    "end": "385760"
  },
  {
    "text": "design, if you will. So I've got a source, s. And I've got a sink, t.",
    "start": "385760",
    "end": "393950"
  },
  {
    "text": "And then, I've got a bunch\nof nodes in the middle. Just draw them out. ",
    "start": "393950",
    "end": "401780"
  },
  {
    "text": "I'm not going to bother\nnaming those nodes. Well, that might be a mistake.",
    "start": "401780",
    "end": "408800"
  },
  {
    "text": "We'll see. ",
    "start": "408800",
    "end": "417000"
  },
  {
    "text": "So this is not like\nit's an acyclic graph. ",
    "start": "417000",
    "end": "422490"
  },
  {
    "text": "You're allowed\ncycles in this graph. But we will have a\ncouple of constraints",
    "start": "422490",
    "end": "428910"
  },
  {
    "text": "that are associated\nwith this graph that I'll get to\nin just a minute. So first, that's all we've got.",
    "start": "428910",
    "end": "434970"
  },
  {
    "text": "You've got g,v,e,\ndirected graph. Can't have cycles in it. And I'm going to draw a\ncouple of numbers here.",
    "start": "434970",
    "end": "443520"
  },
  {
    "text": "The numbers I'm putting up here\nare the capacities associated",
    "start": "443520",
    "end": "456620"
  },
  {
    "text": "with each of these edges. So those are just\nthe capacities.",
    "start": "456620",
    "end": "462270"
  },
  {
    "text": "Those are C(u,v). And I said that, if u,v\ndoes not belong to E,",
    "start": "462270",
    "end": "467295"
  },
  {
    "text": "then you're going to\nassume that C(u,v) is 0. So there's no edge, for\nexample, between this node",
    "start": "467295",
    "end": "475800"
  },
  {
    "text": "and that node. So there's no way\nthat you can directly get from here to there. You can go like this,\nlike this, and like that,",
    "start": "475800",
    "end": "483770"
  },
  {
    "text": "and get from here to there. And you can obviously go\nlike so, and like this,",
    "start": "483770",
    "end": "489840"
  },
  {
    "text": "and like that, to get from\nthe one on the top left",
    "start": "489840",
    "end": "495550"
  },
  {
    "text": "to the one on the\nbottom right, OK? So that's essentially\nthe set up,",
    "start": "495550",
    "end": "503040"
  },
  {
    "text": "except for the fact that we've\njust talked about capacities. And this is sort of the\nbandwidth, if you will.",
    "start": "503040",
    "end": "511020"
  },
  {
    "text": "This is the amount of traffic\nthat can go through this road. And now, we have to talk\nabout the specific case",
    "start": "511020",
    "end": "517039"
  },
  {
    "text": "where we're actually\ngoing to shove things through the network. So we're going to\nhave another number.",
    "start": "517039",
    "end": "522479"
  },
  {
    "text": "So typically, we're going to\nhave two numbers associated with each edge. One of them is going\nto be the capacity,",
    "start": "522480",
    "end": "528320"
  },
  {
    "text": "and the other one is\ngoing to be the flow that goes through the edge. And as you can\nimagine, we're going",
    "start": "528320",
    "end": "533410"
  },
  {
    "text": "to have this constraint that\nsays that the flow can never exceed the capacity. And that's the local constraint\nassociated with each edge, OK?",
    "start": "533410",
    "end": "542800"
  },
  {
    "text": "That doesn't mean\nthat there aren't variations possible with\nrespect to the overall flow",
    "start": "542800",
    "end": "551030"
  },
  {
    "text": "of the network. Things can change. You obey the edge capacities.",
    "start": "551030",
    "end": "557329"
  },
  {
    "text": "And there could be different\nflow coming out of s and going into t, et cetera.",
    "start": "557330",
    "end": "562972"
  },
  {
    "text": "And so there is going to be an\noptimization here associated with the exact\nnumbers that all obey",
    "start": "562972",
    "end": "568750"
  },
  {
    "text": "these edge constraints, so these\nedge capacity constraints, OK? So let's take a\nreal simple example",
    "start": "568750",
    "end": "576290"
  },
  {
    "text": "of a flow in this network. And ah, I have some\ncolored chalk here.",
    "start": "576290",
    "end": "584110"
  },
  {
    "text": "So I can put down\nthe flow over here.",
    "start": "584110",
    "end": "589123"
  },
  {
    "text": "And so this is flow.  Wow. That is an ugly color.",
    "start": "589123",
    "end": "595470"
  },
  {
    "text": "[LAUGHTER] But now, we're stuck for\nthe rest of this lecture.",
    "start": "595470",
    "end": "601690"
  },
  {
    "text": "So I've got 2, 2, 1, colon, 3.",
    "start": "601690",
    "end": "607840"
  },
  {
    "text": "So the first number is the\nflow, and the second number is the capacity. Let me just write that out.",
    "start": "607840",
    "end": "614000"
  },
  {
    "text": "This is-- and then,\nthis is 1, colon, 3.",
    "start": "614000",
    "end": "622100"
  },
  {
    "text": "This is 1, colon, 2. So that meets the capacity.",
    "start": "622100",
    "end": "627959"
  },
  {
    "text": "This is 2, colon, 3. And then 1, colon, 3, 2,\ncolon, 3, and 1, 2, right?",
    "start": "627960",
    "end": "639020"
  },
  {
    "text": "So that's my first\nexample of a flow.",
    "start": "639020",
    "end": "644780"
  },
  {
    "text": "And we want to make sure that\nthis flow makes sense, OK?",
    "start": "644780",
    "end": "649880"
  },
  {
    "text": "And we're going to write\nthis down a little more precisely in just a minute,\nbut I've sort of given you",
    "start": "649880",
    "end": "655690"
  },
  {
    "text": "the intuition already. I've talked about it's OK to\nhave a flow from the source.",
    "start": "655690",
    "end": "663050"
  },
  {
    "text": "It's the mountain\nspewing water, or that's the source of the river.",
    "start": "663050",
    "end": "669180"
  },
  {
    "text": "And this is the\nsea, for example. And the river flows into it. But along the way, you really\ncan't have accumulation, OK?",
    "start": "669180",
    "end": "680190"
  },
  {
    "text": "Because when you think\nabout it as a rate-- and so this is sort of gallons\nper second-- then maybe",
    "start": "680190",
    "end": "686960"
  },
  {
    "text": "you'll have a little bit\nof accumulation allowed. But over a huge\nperiod of time, you",
    "start": "686960",
    "end": "692020"
  },
  {
    "text": "can't have infinite\naccumulation. So that's where the conservation\nlaw kicks in, which says,",
    "start": "692020",
    "end": "697760"
  },
  {
    "text": "anything that goes into\na node that is not marked s or t has to leave the node.",
    "start": "697760",
    "end": "704370"
  },
  {
    "text": "So you look at this, and\nyou go, well, there's two things coming in here. There's 1 and 1,\nwhich adds up to 2.",
    "start": "704370",
    "end": "713060"
  },
  {
    "text": "And there's two 2 leaving. So we're good there. OK? And then pick another one.",
    "start": "713060",
    "end": "719149"
  },
  {
    "text": "This one, for example. You've got 2 coming in, and\nyou've got 1 and 1 leaving.",
    "start": "719150",
    "end": "724530"
  },
  {
    "text": "We're good there, right? For t, you've got 3\ncoming in, 2 plus 1.",
    "start": "724530",
    "end": "730280"
  },
  {
    "text": "And another check to\ndo is, well, you've got 2 coming out of\nthe source, right?",
    "start": "730280",
    "end": "736310"
  },
  {
    "text": "So hopefully, that\nall will make sense. And ask questions\nif you're confused.",
    "start": "736310",
    "end": "743830"
  },
  {
    "text": "One other thing to look\nat, which is interesting, is that you could have flows\nthat are essentially cyclic.",
    "start": "743830",
    "end": "753210"
  },
  {
    "text": "You could have commodities that\nare flowing in a little cycle. And can you see that?",
    "start": "753210",
    "end": "758680"
  },
  {
    "text": "Can anyone see that over here? Yep?",
    "start": "758680",
    "end": "765000"
  },
  {
    "text": "Go ahead. STUDENT: The bottom-right\ntriangle [INAUDIBLE]. SRINIVAS DEVADAS:\nBottom-right triangle?",
    "start": "765000",
    "end": "770480"
  },
  {
    "text": "This thing over here? STUDENT: Yeah. SRINIVAS DEVADAS: Like that? Good. Right? So you see this one going\nover this way, this way,",
    "start": "770480",
    "end": "775503"
  },
  {
    "text": "and that way? And so there's nothing that's\nstopping us from taking this",
    "start": "775503",
    "end": "784100"
  },
  {
    "text": "and-- I had 1 over here, so\nI'm going to make that 0. I had 2 over here, and\nI'm going to make that 1.",
    "start": "784100",
    "end": "790450"
  },
  {
    "text": "And I had 2 over here, and\nI'm going to make that 1. STUDENT: [INAUDIBLE]. STUDENT: [INAUDIBLE]",
    "start": "790450",
    "end": "795455"
  },
  {
    "text": "SRINIVAS DEVADAS: Oh. What is it? STUDENT: It was 1. SRINIVAS DEVADAS:\nIt was 1 before? Oh, you're right.",
    "start": "795455",
    "end": "800850"
  },
  {
    "text": "It was 1 before. So I should make that 0 then. Good. I wanted to subtract 1 from\nwhat I had before, right?",
    "start": "800850",
    "end": "808280"
  },
  {
    "text": "And I screwed that one\nup, the simple thing. All right? Wow.",
    "start": "808280",
    "end": "815300"
  },
  {
    "text": "No wonder I didn't\nmajor in mathematics. [LAUGHTER] OK. Computer Science is\nthis forgiving field.",
    "start": "815300",
    "end": "822650"
  },
  {
    "text": "So you can go 0--\nwell, this is 0. So now, let's take a\nlook at what we have here",
    "start": "822650",
    "end": "829459"
  },
  {
    "text": "and check that nothing\nwent wrong, right? We want to check that\nnothing went wrong.",
    "start": "829460",
    "end": "835160"
  },
  {
    "text": "And so 2 coming in, 1\ngoing out, 1 going out. And nothing coming in\nhere, so we're all good.",
    "start": "835160",
    "end": "841290"
  },
  {
    "text": "And so on and so forth, OK? So there's interesting\nthings happening here",
    "start": "841290",
    "end": "847190"
  },
  {
    "text": "with respect to the conservation\nlaws and having to obey them.",
    "start": "847190",
    "end": "857170"
  },
  {
    "text": "In general, you can imagine\nthat what we're interested in is simply maximizing the\nflow from the source,",
    "start": "857170",
    "end": "867340"
  },
  {
    "text": "and getting as much flow out\nof the source as possible, and pushing it into the sink. OK?",
    "start": "867340",
    "end": "872710"
  },
  {
    "text": "Now, the flow here\ninto t, as you can see, is 2 plus 1, which is 3, OK?",
    "start": "872710",
    "end": "881810"
  },
  {
    "text": "Can anyone take this\nparticular flow network and increase the flow?",
    "start": "881810",
    "end": "888410"
  },
  {
    "text": "I mean, it's easy to\ndecrease the flow. You can make everything 0,\nand that'd be valid, right? But can you increase the flow?",
    "start": "888410",
    "end": "895370"
  },
  {
    "text": "Do you think that\nthis flow network allows for a larger\nflow than 3, given",
    "start": "895370",
    "end": "902920"
  },
  {
    "text": "that the capacities of\nthose edges are fixed and I'm not going\nto change them? ",
    "start": "902920",
    "end": "910370"
  },
  {
    "text": "Let's see. I think all of you\nhave Frisbees, right? Yeah.",
    "start": "910370",
    "end": "915890"
  },
  {
    "text": "Yeah, back there. STUDENT: I don't think\nyou can, because you're maximizing two edges, which\nwould have to be increased.",
    "start": "915890",
    "end": "923379"
  },
  {
    "text": "Like, the bottom\none coming out of s would have to be increased. Or the one on the very\ntop would, too, also",
    "start": "923380",
    "end": "931024"
  },
  {
    "text": "have to be increased. SRINIVAS DEVADAS:\nPeople agree with that? Over there?",
    "start": "931024",
    "end": "936320"
  },
  {
    "text": "Yep? STUDENT: You can have\na path going along the top with a flow\nof 2, so that s is the one on the top of it has 2.",
    "start": "936320",
    "end": "942660"
  },
  {
    "text": "That, from that, to the\nright, has 2, like it has now. From that node, the t has 2.",
    "start": "942660",
    "end": "947810"
  },
  {
    "text": "And then, along\nthe bottom, we have another path that has 2, from\ns to the 1 [? plot of it. ?] And then [INAUDIBLE].",
    "start": "947810",
    "end": "953204"
  },
  {
    "text": "SRINIVAS DEVADAS: OK. So-- [LAUGHTER] That made perfect sense-- to me.",
    "start": "953205",
    "end": "958970"
  },
  {
    "text": "[CHUCKLES] It did. So one of the\ncrucial observations",
    "start": "958970",
    "end": "964350"
  },
  {
    "text": "that [? Rajesh ?] made here--\nand let me just focus in on that-- is-- and that's why I\nthink the other gentleman said",
    "start": "964350",
    "end": "971390"
  },
  {
    "text": "no-- is that you can\nactually decrease the flow in particular edges.",
    "start": "971390",
    "end": "977130"
  },
  {
    "text": "And that's going to\nhelp you increase the overall flow, right? And that's why this\nproblem is challenging.",
    "start": "977130",
    "end": "982970"
  },
  {
    "text": "That's why we need so much\nof a setup, all right? So one thing that I could do\nis I could essentially say,",
    "start": "982970",
    "end": "990450"
  },
  {
    "text": "I'm going to take\nthis and make this 0.",
    "start": "990450",
    "end": "995660"
  },
  {
    "text": "So when I do that,\nessentially what I have is I get to push more flow\nout from here, right?",
    "start": "995660",
    "end": "1006200"
  },
  {
    "text": "So I get to push more flow. I can turn this into a 2. And I can turn this\ninto a 2, right?",
    "start": "1006200",
    "end": "1014370"
  },
  {
    "text": "Am I done? STUDENT: No. SRINIVAS DEVADAS: Not quite. I mean, I've got\none little bug here, but I can fix that, right?",
    "start": "1014370",
    "end": "1020310"
  },
  {
    "text": "I've got one little\nbug here which says, I've got 2 coming out here. I made this 0, so I have\nto push something more.",
    "start": "1020310",
    "end": "1026230"
  },
  {
    "text": "But hey, I'm lucky. I've got a s here, which is\ngiving me as much as I want, correct?",
    "start": "1026230",
    "end": "1031410"
  },
  {
    "text": "So I can just make this a 2.  And so now we get\na flow of 4, right?",
    "start": "1031410",
    "end": "1038849"
  },
  {
    "text": "You both get Frisbees. Shall we do blue and purple? Here you go.",
    "start": "1038849",
    "end": "1043880"
  },
  {
    "text": "Could you stand up?  Oh, OK. Over there.",
    "start": "1043880",
    "end": "1048890"
  },
  {
    "text": " So that actually\nkind of summarizes,",
    "start": "1048890",
    "end": "1055600"
  },
  {
    "text": "at some level, our\ntask ahead, right? So we have to find ways\nof increasing the flow.",
    "start": "1055600",
    "end": "1064549"
  },
  {
    "text": "And sometimes, we have to take\na step backwards in the sense that we decrease the flow\non a particular edge, right?",
    "start": "1064550",
    "end": "1071259"
  },
  {
    "text": "So it's not this monotonic\nincrease that Dijkstra would do",
    "start": "1071260",
    "end": "1076370"
  },
  {
    "text": "or a greedy algorithm, like\nMST that Eric talked about. There's going to be something\na little more interesting here.",
    "start": "1076370",
    "end": "1082210"
  },
  {
    "text": "We eventually are\ngoing to end up doing things in a monotonic way,\nin terms of the overall flow.",
    "start": "1082210",
    "end": "1090960"
  },
  {
    "text": "So the max flow that\nwe're trying to get at is going to start\nwith the current flow.",
    "start": "1090960",
    "end": "1096029"
  },
  {
    "text": "And we're going to improve\nthe current flow constantly. But that doesn't\nmean that the edges",
    "start": "1096030",
    "end": "1103750"
  },
  {
    "text": "are going to look\nmonotonic in terms of the flows on a\nparticular edge in relation",
    "start": "1103750",
    "end": "1109610"
  },
  {
    "text": "to the capacity. You'll never exceed\nthe capacity. But as you saw in this\nlittle example already, we increase from 3 to 4,\nby taking that edge that",
    "start": "1109610",
    "end": "1117640"
  },
  {
    "text": "was vertical up there,\nwhich says 0, colon, 3, and that was 1, and we\nshrank the flow on it.",
    "start": "1117640",
    "end": "1124309"
  },
  {
    "text": "And so how are we going\nto discover these paths, especially if we have a\n5,000-node network and-- I",
    "start": "1124310",
    "end": "1130660"
  },
  {
    "text": "don't know-- 10,000 edges? And so that's\nessentially what we have to do for the\nrest of this lecture.",
    "start": "1130660",
    "end": "1136870"
  },
  {
    "text": "Any questions so far? OK. So we've done flow networks.",
    "start": "1136870",
    "end": "1144090"
  },
  {
    "text": "I kind of defined what\nthe max flow problem is. And let me just write\nthat out more precisely.",
    "start": "1144090",
    "end": "1151964"
  },
  {
    "text": " Given a flow network,\nG, find the flow",
    "start": "1151964",
    "end": "1171400"
  },
  {
    "text": "with maximum value on G. And for\nthat, the max flow is 4, right?",
    "start": "1171400",
    "end": "1186769"
  },
  {
    "text": "So that's another thing\nwe haven't actually done, which is obviously\nimportant for us to do, which is we have to show\nthat the 4, in this case,",
    "start": "1186769",
    "end": "1195940"
  },
  {
    "text": "is the max flow, right? So now, of course,\nI've given that away. And so I'm not going to ask you\ncan you push this over to 5.",
    "start": "1195940",
    "end": "1204120"
  },
  {
    "text": "But you might think that\n5 is a possibility, simply because the capacities\nof the edges that are coming out of the source\nare 3 plus 2, which is 5, right?",
    "start": "1204120",
    "end": "1213130"
  },
  {
    "text": "So it's certainly\npossible that you could push at least, if you\nonly look at those two edges,",
    "start": "1213130",
    "end": "1220379"
  },
  {
    "text": "that you could push 5\nunits from the source. But in this case,\nin this example,",
    "start": "1220380",
    "end": "1225950"
  },
  {
    "text": "if you obey the laws\nof conservation, you cannot obey those laws and\nget 5 units from the source",
    "start": "1225950",
    "end": "1234850"
  },
  {
    "text": "to the sink, t. But we have to prove that. And we have an\nalgorithm that says this is the best that\nyou can possibly do.",
    "start": "1234850",
    "end": "1241370"
  },
  {
    "text": "And the algorithm terminates\nwhen that happens. And that's our Ford-Fulkerson\nalgorithm, right? ",
    "start": "1241370",
    "end": "1249009"
  },
  {
    "text": "Good. So that's what we have so far.",
    "start": "1249010",
    "end": "1254430"
  },
  {
    "text": "I want to talk about\nflow network assumptions. And I can do that over here.",
    "start": "1254430",
    "end": "1260544"
  },
  {
    "text": "This is going to\nmake our life easier.  One of the things that's\na little bit confusing",
    "start": "1260544",
    "end": "1268730"
  },
  {
    "text": "sometimes is the circular\nflow and the fact that we're going\nto potentially have",
    "start": "1268730",
    "end": "1278940"
  },
  {
    "text": "flows that correspond to edges\ncoming in and edges going out.",
    "start": "1278940",
    "end": "1285940"
  },
  {
    "text": "So for example, if I had\nsomething like s and u,",
    "start": "1285940",
    "end": "1291940"
  },
  {
    "text": "for example-- and s could\nbe the source in this case, or it could be\nanother node-- suppose",
    "start": "1291940",
    "end": "1297690"
  },
  {
    "text": "I had a little subnetwork\nthat looks like this. And I'm just giving you\nwhat the capacities are.",
    "start": "1297690",
    "end": "1305830"
  },
  {
    "text": "This is a bit\nstrange in the sense that you could have a\nsituation where you essentially",
    "start": "1305830",
    "end": "1314789"
  },
  {
    "text": "have zero flow, really, because\nyou have one unit coming in here and one unit leaving.",
    "start": "1314790",
    "end": "1321950"
  },
  {
    "text": "All right? And you can think of\nthis-- let's just call this s1, to make it\nclear that it doesn't",
    "start": "1321950",
    "end": "1327720"
  },
  {
    "text": "have to be the source, right? And so you could\nhave the circularity that you saw over there.",
    "start": "1327720",
    "end": "1333390"
  },
  {
    "text": "And now you're\ntalking about, well, I might have 1, colon, 1\nhere, and 1, colon, 2 here,",
    "start": "1333390",
    "end": "1340429"
  },
  {
    "text": "which is fine for\nthis subnetwork. But if I have stuff going\nout, what happens with that?",
    "start": "1340430",
    "end": "1346320"
  },
  {
    "text": "Well that's got to be a 0. I could have a 1 and a 2. And if I have a 2 here, then--\nif I had a 1 and 2 here,",
    "start": "1346320",
    "end": "1356530"
  },
  {
    "text": "then that doesn't\nwork, because maybe I need something else coming in.",
    "start": "1356530",
    "end": "1361669"
  },
  {
    "text": "So you can see that,\npretty quickly, it gets kind of\nconfusing, if we end up having these cycles that\nare such simple cycles,",
    "start": "1361670",
    "end": "1374929"
  },
  {
    "text": "especially the ones where\nyou have Su and Us, OK? And so we're going to disallow\ncycles of two kinds, right?",
    "start": "1374930",
    "end": "1383696"
  },
  {
    "text": "The first cycle we're\ngoing to disallow is this simple one where\nwe say, if I have a, then",
    "start": "1383696",
    "end": "1389929"
  },
  {
    "text": "no self-loop edges allowed. ",
    "start": "1389930",
    "end": "1400570"
  },
  {
    "text": "So that would\ninvolve accumulation at a particular node. And it's going to make\nthings really confusing.",
    "start": "1400570",
    "end": "1406160"
  },
  {
    "text": "And CLRS disallows that. And most flow network algorithms\nassume that you're just",
    "start": "1406160",
    "end": "1411930"
  },
  {
    "text": "going to discard these cycles. This particular transformation\nthat I'm going to describe here",
    "start": "1411930",
    "end": "1419580"
  },
  {
    "text": "is something that is\ngoing to be forced on you. And this is for your benefit in\nover 6 lectures and sections.",
    "start": "1419580",
    "end": "1431430"
  },
  {
    "text": "But it's not actually\nsomething that CLRS follows. And it's going to make\nthings simpler, though.",
    "start": "1431430",
    "end": "1438640"
  },
  {
    "text": "And what we're\ngoing to do is we're going to take any\npair of vertices that",
    "start": "1438640",
    "end": "1446210"
  },
  {
    "text": "has this characteristic, where\nyou have s1, u, and u, s1, and they have\nnon-zero capacities.",
    "start": "1446210",
    "end": "1454549"
  },
  {
    "text": "So s1, u has a capacity of 1. u, s1 has a capacity of 2.",
    "start": "1454550",
    "end": "1459740"
  },
  {
    "text": "Both of these edges exist. And if these edges\nexist, that means they have non-zero\ncapacity, positive capacity.",
    "start": "1459740",
    "end": "1466580"
  },
  {
    "text": "And we're going to transform\nthat, very simply, into-- this",
    "start": "1466580",
    "end": "1471909"
  },
  {
    "text": "is not changing the\ngenerality of the algorithm, but all I'm going\nto do is transform",
    "start": "1471910",
    "end": "1478250"
  },
  {
    "text": "it-- call this s1--\ninto something that satisfies this restriction.",
    "start": "1478250",
    "end": "1485750"
  },
  {
    "text": "So I could have 2\nhere, 1, and 1, OK?",
    "start": "1485750",
    "end": "1492330"
  },
  {
    "text": "So all I've done is\nintroduce u prime, right? Then I can always\ndo this-- if this",
    "start": "1492330",
    "end": "1497550"
  },
  {
    "text": "is trivial for any\npair of vertices, I can introduce\none other vertex.",
    "start": "1497550",
    "end": "1502670"
  },
  {
    "text": "It all works out. Linear expansion, constant\nfactors, ignore them.",
    "start": "1502670",
    "end": "1508179"
  },
  {
    "text": "Life is wonderful. So all I've done is\ntaken away the situation",
    "start": "1508180",
    "end": "1515430"
  },
  {
    "text": "where I have-- you can think of\nit as two-way streets, right? Two-way streets are annoying.",
    "start": "1515430",
    "end": "1522310"
  },
  {
    "text": "You don't quite know\nwhat the rate of traffic is from one end of\nthe street to another, because cars are going\nin both directions.",
    "start": "1522310",
    "end": "1528769"
  },
  {
    "text": "And you have to do subtraction. Subtraction is painful,\nso we don't want that.",
    "start": "1528770",
    "end": "1535060"
  },
  {
    "text": "So we're just going to\nassume that this is u prime. And now, you're all set.",
    "start": "1535060",
    "end": "1541120"
  },
  {
    "text": "We allow this. So we have to allow\nfor generality reasons. As we saw in that very\nfirst example there,",
    "start": "1541120",
    "end": "1548230"
  },
  {
    "text": "we are going to have\ncycles here, OK? But we just don't want cycles\nto be of length 1 or 2, OK?",
    "start": "1548230",
    "end": "1555179"
  },
  {
    "text": "So that's essentially what\nwe're going to disallow. All right? The good news is\nthat, if you do this,",
    "start": "1555180",
    "end": "1561800"
  },
  {
    "text": "then we'll only have a\nsingle notion of flow. Whereas, if you go\nread CLRS, you'll",
    "start": "1561800",
    "end": "1568860"
  },
  {
    "text": "see that there's two\nnotions of flow in CLRS. There's positive flow, which\nis different from net flow.",
    "start": "1568860",
    "end": "1575059"
  },
  {
    "text": " And the positive flow is\ndifferent from net flow",
    "start": "1575060",
    "end": "1580610"
  },
  {
    "text": "in graphs that have this\nparticular structure, or have nodes with\nthese properties.",
    "start": "1580610",
    "end": "1587840"
  },
  {
    "text": "But if you disallow them, then\nyou can just talk about flow, and it doesn't matter.",
    "start": "1587840",
    "end": "1593140"
  },
  {
    "text": "Positive flow is the same\nas net flow, all right? So for the purposes\nof [? 6 over 6, ?] for this semester, we're going\nto simply think about flow",
    "start": "1593140",
    "end": "1602400"
  },
  {
    "text": "and equate that to positive\nflow, equate that to net flow. And it's all going\nto work out, assuming",
    "start": "1602400",
    "end": "1608140"
  },
  {
    "text": "your graphs satisfy these\ntwo properties of the cycle lengths.",
    "start": "1608140",
    "end": "1613350"
  },
  {
    "text": "All right? Cool. Good. So let's keep going here.",
    "start": "1613350",
    "end": "1619250"
  },
  {
    "text": "So we're up to finished\nup on max flow. ",
    "start": "1619250",
    "end": "1624929"
  },
  {
    "text": "Let me just give you\nsome sense of notation. ",
    "start": "1624930",
    "end": "1633320"
  },
  {
    "text": "I've talked a lot\nabout constraints.",
    "start": "1633320",
    "end": "1640159"
  },
  {
    "text": "But we've got to\nwrite some stuff out, because we're going to\nbe getting more precise",
    "start": "1640160",
    "end": "1648659"
  },
  {
    "text": "and proving things in\njust a few minutes. ",
    "start": "1648660",
    "end": "1654260"
  },
  {
    "text": "So what is a flow? Well, to be precise, it is going\nto be a function that satisfies",
    "start": "1654260",
    "end": "1664230"
  },
  {
    "text": "the following properties. It satisfies the\ncapacity constraint. ",
    "start": "1664230",
    "end": "1679960"
  },
  {
    "text": "This is the obvious capacity\nconstraint, intuitive capacity",
    "start": "1679960",
    "end": "1686799"
  },
  {
    "text": "constraint. And then we've got\nflow conservation. ",
    "start": "1686800",
    "end": "1696120"
  },
  {
    "text": "And the important thing here is\nthat I don't have it for all V,",
    "start": "1696120",
    "end": "1702940"
  },
  {
    "text": "but I do have it for\nvertices, V, that are not the source or the sink.",
    "start": "1702940",
    "end": "1709760"
  },
  {
    "text": "And I'm going to require\nf(u,v) equals 0, right?",
    "start": "1709760",
    "end": "1721660"
  },
  {
    "text": "And the last one, which\nI haven't talked about,",
    "start": "1721660",
    "end": "1726680"
  },
  {
    "text": "but becomes easy to talk\nabout, given this constraint,",
    "start": "1726680",
    "end": "1732070"
  },
  {
    "text": "is skew symmetry. ",
    "start": "1732070",
    "end": "1746430"
  },
  {
    "text": "So if you take-- this doesn't\nhave to be an edge between u",
    "start": "1746430",
    "end": "1752110"
  },
  {
    "text": "and v. Now, I'm talking about\nthe flow, f, between u and v.",
    "start": "1752110",
    "end": "1757370"
  },
  {
    "text": "And so the u could be\ns, which is the source. v could be t, which is the sink.",
    "start": "1757370",
    "end": "1762770"
  },
  {
    "text": "So in general, I'm not\ntalking about a flow. And there obviously has\nto be a path from u to v,",
    "start": "1762770",
    "end": "1771300"
  },
  {
    "text": "in order for there to be a\nnon-zero flow, f(u,v), right? If there's no path, there's\nno way of getting there.",
    "start": "1771300",
    "end": "1778040"
  },
  {
    "text": "But having said that, the\ndefinition of a flow here",
    "start": "1778040",
    "end": "1783770"
  },
  {
    "text": "in our network is the\nstraightforward definition, which simply says, if\nthere's a flow from u to v,",
    "start": "1783770",
    "end": "1792380"
  },
  {
    "text": "regardless of what u and v are,\nthen the value of that flow is simply the\nnegation of the value",
    "start": "1792380",
    "end": "1800570"
  },
  {
    "text": "of the flow from v to u, which\nmakes perfect sense, right?",
    "start": "1800570",
    "end": "1806769"
  },
  {
    "text": "And this all works out under\nthe definition of net flow.",
    "start": "1806770",
    "end": "1813510"
  },
  {
    "text": "And so this is essentially\nwhat the definition of net flow is in the textbook.",
    "start": "1813510",
    "end": "1818910"
  },
  {
    "text": "But for our purposes\nhere, we don't have to add that adjective.",
    "start": "1818910",
    "end": "1824310"
  },
  {
    "text": "We just are going to\nbe talking about flows. Positive or net, they're\nthe same, all right?",
    "start": "1824310",
    "end": "1830350"
  },
  {
    "text": "All right. Good. So one of the things you\ncan do with this notation--",
    "start": "1830350",
    "end": "1841580"
  },
  {
    "text": "and we're going to use what's\ncalled implicit summation notation on top of this-- is to\nprove some interesting things,",
    "start": "1841580",
    "end": "1850280"
  },
  {
    "text": "interesting theorems,\nthat give you some intuition as to how\nalgorithms on flow networks",
    "start": "1850280",
    "end": "1855309"
  },
  {
    "text": "are going to work. And in particular, we're going\nto use this notation when we",
    "start": "1855310",
    "end": "1867159"
  },
  {
    "text": "talk about the value of a flow. So the value of a\nflow, f, is denoted--",
    "start": "1867160",
    "end": "1880220"
  },
  {
    "text": "you can think of it\nas a cardinality of f. And f is v, belonging\nto capital V, f(s,v).",
    "start": "1880220",
    "end": "1893380"
  },
  {
    "text": "And that is f(s,V), so\nwhat I have written here.",
    "start": "1893380",
    "end": "1898410"
  },
  {
    "text": "Well, given a flow network, I\nwant one particular quantity",
    "start": "1898410",
    "end": "1904250"
  },
  {
    "text": "that I want to maximize. And that particular\nquantity is going to be defined, based on how much\nI can push from s, how much can",
    "start": "1904250",
    "end": "1915220"
  },
  {
    "text": "I push outward from s. That's the crucial quantity\nthat I want to maximize.",
    "start": "1915220",
    "end": "1921130"
  },
  {
    "text": "That quantity is-- you\nthink about everything that is going out of s, and\nyou add it all up together.",
    "start": "1921130",
    "end": "1929230"
  },
  {
    "text": "So from s, you look at any other\nvertex, every other vertex,",
    "start": "1929230",
    "end": "1937380"
  },
  {
    "text": "and you say, what is f(s,v)? And I'm not talking about just\nthe edges that come out of s.",
    "start": "1937380",
    "end": "1943840"
  },
  {
    "text": "A vertex, v, small\nv, can be any vertex. If I add up all of the flows\nthat come out of s, then",
    "start": "1943840",
    "end": "1954750"
  },
  {
    "text": "that is the flow that\nresponds to my flow network. That is everything that's\ngetting pushed out of s, OK?",
    "start": "1954750",
    "end": "1964360"
  },
  {
    "text": "Now, it may be the\ncase that-- remember, I'm talking about\nflow here-- so it",
    "start": "1964360",
    "end": "1969840"
  },
  {
    "text": "may be the case that you have an\nedge from s coming in from v4.",
    "start": "1969840",
    "end": "1980470"
  },
  {
    "text": "And there may be a flow\nassociated with that.",
    "start": "1980470",
    "end": "1986309"
  },
  {
    "text": "This is maybe something\nlike 1, colon, 2, all right? So what this means is that\nf(s,vr) is-- this is f,",
    "start": "1986310",
    "end": "2000020"
  },
  {
    "text": "remember-- so this\nis minus f(v4,s). And in this particular\ncase, this is 1.",
    "start": "2000020",
    "end": "2010790"
  },
  {
    "text": "So this is minus 1, OK? So keep that in mind.",
    "start": "2010790",
    "end": "2018040"
  },
  {
    "text": "When I talk about the\nflow of the network, I'm going to be\nlooking at the source.",
    "start": "2018040",
    "end": "2023130"
  },
  {
    "text": "And I'm going to be looking\nat all of the flows that are going outward. And I have to keep in mind the\nskew symmetry relationship.",
    "start": "2023130",
    "end": "2030400"
  },
  {
    "text": "I obviously have to obey\ncapacity constraints and the conservation\nlaws, all right?",
    "start": "2030400",
    "end": "2036919"
  },
  {
    "text": "So given that, let's use this\nimplicit summation notation",
    "start": "2036920",
    "end": "2043880"
  },
  {
    "text": "and show some simple\nproperties of flow. So let's look at--\none thing I want",
    "start": "2043880",
    "end": "2070669"
  },
  {
    "text": "to emphasize is\nwhat I've done here is use this implicit\nsummation notation,",
    "start": "2070670",
    "end": "2082820"
  },
  {
    "text": "which simply says, if I\nsee a capital letter here, that's a set. And I'm going to\nhave to enumerate",
    "start": "2082820",
    "end": "2092080"
  },
  {
    "text": "all of the members of that set. And it's implicit summation.",
    "start": "2092080",
    "end": "2098790"
  },
  {
    "text": "So as I enumerate\nthose members, I'm going to add up all of\nthese quantities, right?",
    "start": "2098790",
    "end": "2103855"
  },
  {
    "text": "So that's really\nwhat this means. So the sigma here gets\nembedded into this capital",
    "start": "2103855",
    "end": "2109359"
  },
  {
    "text": "V. So two things going on. The small v turned\ninto capital V, because I'm looking\nat the entire set.",
    "start": "2109360",
    "end": "2115250"
  },
  {
    "text": "And the sigma gets in there too. And that's why it's\nimplicit summation, not just implicit set notation.",
    "start": "2115250",
    "end": "2122670"
  },
  {
    "text": "So some simple properties. I can say, f(x,x) is 0,\nwhere x is an arbitrary set.",
    "start": "2122670",
    "end": "2131741"
  },
  {
    "text": "All that says is, let's say,\nx has a single member in it,",
    "start": "2131741",
    "end": "2138150"
  },
  {
    "text": "which is a. Then f(a,a) is always 0, because\nif you don't allow self-loop",
    "start": "2138150",
    "end": "2144430"
  },
  {
    "text": "edges, and that's pretty\nmuch all you need. If you have a pair of\nvertices here, a and b,",
    "start": "2144430",
    "end": "2153630"
  },
  {
    "text": "then what you're saying is\nf(a,b) plus f(b,a) is 0.",
    "start": "2153630",
    "end": "2162559"
  },
  {
    "text": "And that's true, because\nof skew symmetry. Right? We just wrote that out. So f(x,x) is 0.",
    "start": "2162560",
    "end": "2170520"
  },
  {
    "text": "And in general, you can say,\neven though X and Y are sets of vertices, I'm going to\nbe able to use skew symmetry",
    "start": "2170520",
    "end": "2180240"
  },
  {
    "text": "to say that f(X,Y) is\nminus of f(Y,X), all right?",
    "start": "2180240",
    "end": "2187180"
  },
  {
    "text": "Similar argument. And then, lastly-- there's\nany number of these,",
    "start": "2187180",
    "end": "2192930"
  },
  {
    "text": "we just do three of\nthem here-- X of f(XUY,",
    "start": "2192930",
    "end": "2200819"
  },
  {
    "text": "to Z) is f(X,Z) plus f(Y,Z)--\nwe've got to use these",
    "start": "2200820",
    "end": "2208590"
  },
  {
    "text": "properties to prove our first\ntheorem here on flow networks-- if X of X intersection\nY is null.",
    "start": "2208590",
    "end": "2217500"
  },
  {
    "text": "So you don't want\nto double-count. So that's all this is. Make sure you're\nnot double-counting. You've got f(XUY),\nand you want to look",
    "start": "2217500",
    "end": "2226660"
  },
  {
    "text": "at that entire set,\nthe union, and then look at the flow from any member\nin XUY to any member in Z.",
    "start": "2226660",
    "end": "2236940"
  },
  {
    "text": "And you can do that\nby breaking it up, provided you're careful\nabout double-counting.",
    "start": "2236940",
    "end": "2242470"
  },
  {
    "text": "And the fact that the\ntwo sets, X and Y, do not have an intersection, or\nthey have a null intersection,",
    "start": "2242470",
    "end": "2248910"
  },
  {
    "text": "implies that you're OK with\nthe [? write ?] inside. All right? So you might be going,\nwhy are we doing this?",
    "start": "2248910",
    "end": "2255529"
  },
  {
    "text": "Well, here's a good reason to\nlike implicit set notation.",
    "start": "2255530",
    "end": "2263390"
  },
  {
    "text": "You can prove some interesting\ntheorems in a very elegant way,",
    "start": "2263390",
    "end": "2270529"
  },
  {
    "text": "using this notation. So let's do one example of that. You'll probably see\nothers in section.",
    "start": "2270530",
    "end": "2276765"
  },
  {
    "text": " So one of the things\nthat we'd like to do",
    "start": "2276765",
    "end": "2283980"
  },
  {
    "text": "is prove a pretty\nimportant theorem,",
    "start": "2283980",
    "end": "2289090"
  },
  {
    "text": "which I think all\nof you probably can assume in your heads, given\nall of the properties of flow",
    "start": "2289090",
    "end": "2297350"
  },
  {
    "text": "networks that we have. And it's a very simple\ntheorem that simply says,",
    "start": "2297350",
    "end": "2303100"
  },
  {
    "text": "I have the law of\nconservation that is applied on all of these\nintermediate vertices,",
    "start": "2303100",
    "end": "2308440"
  },
  {
    "text": "and I've got a bunch\nof commodities, I've got a flow going\nout of s, right?",
    "start": "2308440",
    "end": "2316750"
  },
  {
    "text": "So where can this flow go? Where does this flow end up?",
    "start": "2316750",
    "end": "2322580"
  },
  {
    "text": "It ends up at the\nsink, at t, right?",
    "start": "2322580",
    "end": "2328430"
  },
  {
    "text": "So the point is that, if you\nhave all of these properties that we have up here, you're\ngoing to be able to show--",
    "start": "2328430",
    "end": "2337480"
  },
  {
    "text": "and you want to show this,\nyou want to prove this-- that the value of a flow, which\nis defined as what gets pushed",
    "start": "2337480",
    "end": "2347530"
  },
  {
    "text": "out from the source, is exactly\nwhat goes into the sink, right?",
    "start": "2347530",
    "end": "2354000"
  },
  {
    "text": "If that's not the case,\nthere's been a violation of some property, perhaps a\ncapacity constraint, perhaps,",
    "start": "2354000",
    "end": "2361700"
  },
  {
    "text": "more likely, a conservation\nconstraint, OK? So the theorem that we'd like\nto prove is simply that f is",
    "start": "2361700",
    "end": "2371890"
  },
  {
    "text": "f(v,t), right? That's the theorem. And there's a lot going\non here, so it's worth",
    "start": "2371890",
    "end": "2378359"
  },
  {
    "text": "spending 30 seconds looking\nat what exactly this means. What I have here is that,\nif you just look at this",
    "start": "2378360",
    "end": "2385819"
  },
  {
    "text": "and that, I'm saying\nthat f is what gets",
    "start": "2385820",
    "end": "2390890"
  },
  {
    "text": "pushed out of the source, OK? And now what I'm saying\nhere is that f, the value,",
    "start": "2390890",
    "end": "2398870"
  },
  {
    "text": "is exactly what gets\npushed into the sink, OK?",
    "start": "2398870",
    "end": "2404120"
  },
  {
    "text": "So this is what I\nhave to prove, right? And I should be able to prove\nthat, by invoking my laws.",
    "start": "2404120",
    "end": "2409920"
  },
  {
    "text": "That's it. I mean, that's my\naxiomatic system. I've got those laws. I've got a definition of a\nflow that may not necessarily",
    "start": "2409920",
    "end": "2418319"
  },
  {
    "text": "be the max flow. It might be something much\nless than the max flow, it might be the max flow. Regardless, what gets\nout of the source",
    "start": "2418320",
    "end": "2424940"
  },
  {
    "text": "has to get into the sink, right? So how are we going to do that? And the implicit\nsummation notation",
    "start": "2424940",
    "end": "2430464"
  },
  {
    "text": "is going to give\nyou, essentially, a three or four-line proof,\nwhich is very intuitive, right? So let's do that.",
    "start": "2430464",
    "end": "2436270"
  },
  {
    "text": "And maybe you can help me. So we're going to start\nwith what we know.",
    "start": "2436270",
    "end": "2441410"
  },
  {
    "text": "So that's the proof. f equals f(s,V).",
    "start": "2441410",
    "end": "2446642"
  },
  {
    "text": " Right? So that's what we've got. That's the definition\nof cardinality",
    "start": "2446642",
    "end": "2454050"
  },
  {
    "text": "of f, or a value of f, OK? ",
    "start": "2454050",
    "end": "2459830"
  },
  {
    "text": "What I'm going to\ndo is I'm going to say this is the same as--\nI'll give you the first step,",
    "start": "2459830",
    "end": "2468080"
  },
  {
    "text": "and then let's see\nif you can help me with the remaining-- is\nthe same as f of v minus s",
    "start": "2468080",
    "end": "2476289"
  },
  {
    "text": "capital V, right? So if you're having trouble\ndifferentiating between my cap",
    "start": "2476290",
    "end": "2484070"
  },
  {
    "text": "V's and small v's, holler. I'm trying to write\nthem as big as possible. Yeah? STUDENT: Could you maybe put\nlittle hats on the top of them?",
    "start": "2484070",
    "end": "2491050"
  },
  {
    "text": "SRINIVAS DEVADAS: Put\nlittle hats on them. Yes, I will put\nlittle hats on them. I'd put little Frisbees\non them, if I could,",
    "start": "2491050",
    "end": "2496150"
  },
  {
    "text": "but-- I like Frisbees\nmuch better than hats.",
    "start": "2496150",
    "end": "2501990"
  },
  {
    "text": "All right. That's good. That's good to do. So yeah.",
    "start": "2501990",
    "end": "2507210"
  },
  {
    "text": "So I think, hopefully,\nI'll keep doing this, and it won't be confusing. So what I've done here\nis invoke, essentially,",
    "start": "2507210",
    "end": "2516370"
  },
  {
    "text": "this, except it's not\nexactly that, in the sense that it's written a\nlittle bit differently.",
    "start": "2516370",
    "end": "2523170"
  },
  {
    "text": "But if you see what's going\non here, what I've done is look at this s, and\nI've said, think of this s",
    "start": "2523170",
    "end": "2535420"
  },
  {
    "text": "as being cap V minus s.",
    "start": "2535420",
    "end": "2542339"
  },
  {
    "text": "Right? So that gives you s. And those are clearly\ndisjoint, right? Those are clearly disjoint sets.",
    "start": "2542340",
    "end": "2548430"
  },
  {
    "text": "There is this one and this\none are disjoint sets. That's what I mean to say. I mean, these two\naren't disjoint, but this and that are disjoint.",
    "start": "2548430",
    "end": "2554354"
  },
  {
    "text": "And that's what\nyou need, in order to invoke the little\nproperty that you have here.",
    "start": "2554354",
    "end": "2560220"
  },
  {
    "text": "And so that all make sense? You see why I did that? OK?",
    "start": "2560220",
    "end": "2565960"
  },
  {
    "text": "What can I say about either\nof these two quantities? Can I say something about\neither of these two quantities?",
    "start": "2565960",
    "end": "2572660"
  },
  {
    "text": " Yeah? STUDENT: f(V,V) is 0.",
    "start": "2572660",
    "end": "2578869"
  },
  {
    "text": "SRINIVAS DEVADAS: f(V,V) is 0. That's exactly right. f(V,V) is 0. There you go.",
    "start": "2578870",
    "end": "2584905"
  },
  {
    "text": "Yep.  So this is simply I'm\ngoing to invert that.",
    "start": "2584905",
    "end": "2594910"
  },
  {
    "text": "I'm going to write this\nas f of V hat minus s, OK?",
    "start": "2594910",
    "end": "2603256"
  },
  {
    "text": "I'll just flip this. I had a negative sign here,\nbut I've flipped that. And skew symmetry tells\nme I can do that, right?",
    "start": "2603257",
    "end": "2609662"
  },
  {
    "text": " All right. So I'm up to this point here.",
    "start": "2609663",
    "end": "2616630"
  },
  {
    "text": "Now, what I'm going to do\nis I'm going to do f(V,t).",
    "start": "2616630",
    "end": "2623894"
  },
  {
    "text": "And the reason I want to\ndo this is because this is where I want to get at, right? Eventually, I want to show\nsomething that corresponds",
    "start": "2623895",
    "end": "2629608"
  },
  {
    "text": "to f(V,t), right?",
    "start": "2629608",
    "end": "2634710"
  },
  {
    "text": "And what I have here is V,t. But now, I could do\nplus f(V,V minus-- cap--",
    "start": "2634710",
    "end": "2646119"
  },
  {
    "text": "minus s minus t) right? So what I've done here\nis taken V minus s",
    "start": "2646120",
    "end": "2653859"
  },
  {
    "text": "and pulled out t from it. Remember, t is\npart of cap V. Cap V contains all of the vertices.",
    "start": "2653860",
    "end": "2660809"
  },
  {
    "text": "So I've pulled out t\nfrom it, but that implies that I have to do a V\nminus s minus t over here.",
    "start": "2660810",
    "end": "2666750"
  },
  {
    "text": "And again, they're\ndisjoint, so it's all good.",
    "start": "2666750",
    "end": "2672000"
  },
  {
    "text": "What can I say about this?",
    "start": "2672000",
    "end": "2677150"
  },
  {
    "text": "Yeah? STUDENT: It's 0 because\nof flow conservation? SRINIVAS DEVADAS: It's 0\nbecause of flow conservation.",
    "start": "2677150",
    "end": "2682520"
  },
  {
    "text": "That's exactly right. We didn't quite\nwrite it that way. But if you look at what the\nimplicit summation notation",
    "start": "2682520",
    "end": "2689770"
  },
  {
    "text": "would mean for that, you\nlook at it and you say, maybe one more step would\nbe, let me think about this",
    "start": "2689770",
    "end": "2700400"
  },
  {
    "text": "as being, f(V,t).  It'll become more obvious\nif I write it this way.",
    "start": "2700400",
    "end": "2708720"
  },
  {
    "text": "f(V-- I'm putting\na minus in here-- V minus s minus t and\ncap V again, right?",
    "start": "2708720",
    "end": "2718220"
  },
  {
    "text": "So all I've done here\nis flip these two. Skew symmetry allows\nme to do that.",
    "start": "2718220",
    "end": "2723750"
  },
  {
    "text": "And now look at\nwhat I have here. I'm talking about a\nflow that corresponds to some-- for any\nvertex, I pick--",
    "start": "2723750",
    "end": "2734330"
  },
  {
    "text": "and it's not an s vertex,\nit's not a t vertex, so it's an intermediate vertex. And if I look at an\nintermediate vertex",
    "start": "2734330",
    "end": "2740050"
  },
  {
    "text": "and look at the flow that\ngoes out to all vertices,",
    "start": "2740050",
    "end": "2745720"
  },
  {
    "text": "conservation says that\nhas to be 0, right? So that's exactly\nwhat this says.",
    "start": "2745720",
    "end": "2751540"
  },
  {
    "text": "For any u that's neither s nor\nt but in V, the sum has to be 0.",
    "start": "2751540",
    "end": "2758810"
  },
  {
    "text": "So this is zero, and we're done. All right.",
    "start": "2758810",
    "end": "2764997"
  },
  {
    "text": "Oh, you-- a Frisbee? Who is that? Ah. Here. ",
    "start": "2764997",
    "end": "2770800"
  },
  {
    "text": "So that's the power of\nimplicit summation notation. So we could invoke these\ndifferent properties.",
    "start": "2770800",
    "end": "2779740"
  },
  {
    "text": "It was fairly straightforward. Your first example of this. You'll probably see a few more. All right?",
    "start": "2779740",
    "end": "2785560"
  },
  {
    "text": "Any questions so far?  OK.",
    "start": "2785560",
    "end": "2790950"
  },
  {
    "text": "So as you can see, as I\npromised, or threatened at the beginning, but\nfollowed through on my threat,",
    "start": "2790950",
    "end": "2798869"
  },
  {
    "text": "we have a lot of\nnotation, a lot of baggage here before we\nget to algorithms. But we're slowly getting there.",
    "start": "2798870",
    "end": "2805500"
  },
  {
    "text": "The next major concept\nis the concept of cuts. So a cut, you think\nof a cut as being,",
    "start": "2805500",
    "end": "2813440"
  },
  {
    "text": "well, a cut through paper, a\ncut through the air, whatever. It turns out that notion\nof a cut in a network",
    "start": "2813440",
    "end": "2819859"
  },
  {
    "text": "is more general\nthan that, right? A cut is basically a partition. A cut is a partition of nodes.",
    "start": "2819860",
    "end": "2826490"
  },
  {
    "text": "And a partition means\nthat you can't have a node in both sides, right? So a cut is going to give\nyou two disjoint components",
    "start": "2826490",
    "end": "2835470"
  },
  {
    "text": "at the end of it. But the cut doesn't have\nto be something contiguous. It doesn't have to be a\nline through the network.",
    "start": "2835470",
    "end": "2841587"
  },
  {
    "text": "And everything to\nthe left of the line is in one half of the\ncut, and everything on the right of the line is in\na different half of the cut.",
    "start": "2841587",
    "end": "2849460"
  },
  {
    "text": "I can just break up these\nnodes into two disjoint parts. And the only constraint\nthat I'm going to ask for",
    "start": "2849460",
    "end": "2856780"
  },
  {
    "text": "is that s, which is the source,\nis on one side of the cut,",
    "start": "2856780",
    "end": "2863080"
  },
  {
    "text": "and t, which is the sink, is\nanother side of the cut, OK? That's it.",
    "start": "2863080",
    "end": "2868640"
  },
  {
    "text": "And given that, I'm going to\nsay interesting things, really interesting things, about\nthe flow through a cut, OK?",
    "start": "2868640",
    "end": "2878180"
  },
  {
    "text": "And so let's do that. Let's define a cut. ",
    "start": "2878180",
    "end": "2902839"
  },
  {
    "text": "So a cut is (S,T) of\na flow network, G,",
    "start": "2902840",
    "end": "2921850"
  },
  {
    "text": "is a partition of V, such\nthat small s belongs to cap S,",
    "start": "2921850",
    "end": "2933640"
  },
  {
    "text": "and small t belongs to\ncap T. I don't know.",
    "start": "2933640",
    "end": "2939819"
  },
  {
    "text": "Do you want hats on the T too? ",
    "start": "2939820",
    "end": "2945890"
  },
  {
    "text": "I'll just write them large. If a flow on G-- if\nf is a flow on G,",
    "start": "2945890",
    "end": "2963930"
  },
  {
    "text": "then the flow across\nthe cut is f(S,T).",
    "start": "2963930",
    "end": "2971140"
  },
  {
    "text": " OK?",
    "start": "2971140",
    "end": "2977440"
  },
  {
    "text": "So again, implicit\nsummation notation here. The flow across the cut\nis as the sum of the flows",
    "start": "2977440",
    "end": "2986780"
  },
  {
    "text": "corresponding to each\npair of vertices, such that the source vertex\nis part of capital S.",
    "start": "2986780",
    "end": "2995359"
  },
  {
    "text": "And the destination vertex is\npart of capital T. All right?",
    "start": "2995360",
    "end": "3000570"
  },
  {
    "text": "That's it. I'm just going to\nadd them all up. That's the flow across the cut. ",
    "start": "3000570",
    "end": "3009090"
  },
  {
    "text": "So what I can do now\nis just talk about-- let's just go up\nhere back to this.",
    "start": "3009090",
    "end": "3016460"
  },
  {
    "text": "And I'm going to look at\nexactly what I have here.",
    "start": "3016460",
    "end": "3023010"
  },
  {
    "text": "Is that right? Not exactly. I'm going to change\nthis a little bit,",
    "start": "3023010",
    "end": "3028370"
  },
  {
    "text": "because I want to\nmake sure I don't have to add up numbers\nand do that incorrectly.",
    "start": "3028370",
    "end": "3037730"
  },
  {
    "text": "So I need a 1.  Yup.",
    "start": "3037730",
    "end": "3043150"
  },
  {
    "text": "That's all I need\nto do is change it. So I'm going to change\nour example here,",
    "start": "3043150",
    "end": "3049820"
  },
  {
    "text": "not the topology of the\nexample, but the actual numbers.",
    "start": "3049820",
    "end": "3055570"
  },
  {
    "text": "And you'll need to verify that\nwhat I have here satisfies",
    "start": "3055570",
    "end": "3061420"
  },
  {
    "text": "our flow network properties. And there's one more.",
    "start": "3061420",
    "end": "3068033"
  },
  {
    "start": "3068033",
    "end": "3073650"
  },
  {
    "text": "OK? So I think I'm good. All right. So this is going to be\nan example of a cut.",
    "start": "3073650",
    "end": "3082990"
  },
  {
    "text": "I haven't defined the cut yet.  Let's get rid of that.",
    "start": "3082990",
    "end": "3090510"
  },
  {
    "text": "Holler if you think there's\nsomething wrong with this flow. All right? I think I got it right.",
    "start": "3090510",
    "end": "3095549"
  },
  {
    "text": "It satisfies\ncapacity constraints. It satisfies flow\nconservation constraints.",
    "start": "3095550",
    "end": "3101650"
  },
  {
    "text": "The flow that is\ngoing into t is 4. This happens to be a max flow. Doesn't really matter.",
    "start": "3101650",
    "end": "3107440"
  },
  {
    "text": "So what we're going to talk\nabout with respect to cuts, it doesn't require the\nflow to be maximum.",
    "start": "3107440",
    "end": "3113730"
  },
  {
    "text": "Keep that in mind. What do I mean by the flow\nacross a cut via an example?",
    "start": "3113730",
    "end": "3122270"
  },
  {
    "text": "I'm going to simply say that\nthe shaded nodes, two of them,",
    "start": "3122270",
    "end": "3132090"
  },
  {
    "text": "are part of capital S, OK? ",
    "start": "3132090",
    "end": "3147160"
  },
  {
    "text": "So as you can see, I\njust arbitrarily picked a couple of nodes. And that not necessarily\nsomething that can be easily",
    "start": "3147160",
    "end": "3154880"
  },
  {
    "text": "partitioned using an actual\ncut line, a physical cut line. I just picked that one over\nthere and the one over here",
    "start": "3154880",
    "end": "3161620"
  },
  {
    "text": "with S. And so, I can now look at this,\nand I can compute numerically,",
    "start": "3161620",
    "end": "3173150"
  },
  {
    "text": "for this example. And it's worth doing\nat least once what the flow across\nthis particular cut",
    "start": "3173150",
    "end": "3179220"
  },
  {
    "text": "is, defined by the particular\nchoice of cap S and cap T, OK?",
    "start": "3179220",
    "end": "3187430"
  },
  {
    "text": "And that's what\nwe're going to do. So f(S,T) is-- I'm going to\nhave to look at pairs of nodes,",
    "start": "3187430",
    "end": "3203099"
  },
  {
    "text": "such that I've got a shaded\nnode on the left-hand side and non-shaded node on\nthe right-hand side.",
    "start": "3203100",
    "end": "3209985"
  },
  {
    "text": "And I'm going to have\nto go through all of the combinations, right?",
    "start": "3209985",
    "end": "3215090"
  },
  {
    "text": "So if I look at\nthis, I can first knock off this one, and\nthat one, and that one.",
    "start": "3215090",
    "end": "3222650"
  },
  {
    "text": "Let me actually put in-- let's\ncall this a, b, and c here.",
    "start": "3222650",
    "end": "3230740"
  },
  {
    "text": "And we can call that d. So we have s and d as\nbeing part of the cut,",
    "start": "3230740",
    "end": "3236280"
  },
  {
    "text": "in terms of s, capital S. And\nthe other ones are in cap T.",
    "start": "3236280",
    "end": "3241450"
  },
  {
    "text": "And so what I have is\nI could do Sa and Sb. So I've got 2 plus 2, all right?",
    "start": "3241450",
    "end": "3248170"
  },
  {
    "text": "And this would\ncorrespond to Sa and Sb. So those are going out, right?",
    "start": "3248170",
    "end": "3254030"
  },
  {
    "text": "So far, so good. And then, I'm going to write\nout a bunch of numbers here,",
    "start": "3254030",
    "end": "3259170"
  },
  {
    "text": "minus 2 plus 1 minus 1 plus 2.",
    "start": "3259170",
    "end": "3264260"
  },
  {
    "text": "And the minus 2, where\nwould the minus 2 come from?",
    "start": "3264260",
    "end": "3269640"
  },
  {
    "text": "Well, an a,d, for example,\nis a minus 2, right?",
    "start": "3269640",
    "end": "3274970"
  },
  {
    "text": "Because d is part\nof-- it would be d, a. So a, d has a flow\nof 2, correct?",
    "start": "3274970",
    "end": "3283579"
  },
  {
    "text": "And so d, a has a flow\nof minus 2, right? And d, a is part of\nwhat I have here, because d is part of capital\nS, and A is part of capital T.",
    "start": "3283580",
    "end": "3292241"
  },
  {
    "text": "You guys see that? So this is not trivial,\nso pay attention.",
    "start": "3292241",
    "end": "3297670"
  },
  {
    "text": "So this would be, for\nexample, the minus 2 would correspond to d, a.",
    "start": "3297670",
    "end": "3307150"
  },
  {
    "text": "That's what I need here. And I could also have--\nwhat do I have here?",
    "start": "3307150",
    "end": "3312270"
  },
  {
    "text": "I have something\nis going into d. So a c, d is 1. So d, c is minus 1, right?",
    "start": "3312270",
    "end": "3319990"
  },
  {
    "text": "Make sense? d, c is minus 1. What about the plus 1? Where do I get a plus 1 from?",
    "start": "3319990",
    "end": "3325823"
  },
  {
    "text": " STUDENT: d, b. SRINIVAS DEVADAS:\nd, b is going out.",
    "start": "3325823",
    "end": "3332130"
  },
  {
    "text": "That's exactly right, d, b. And the plus 2, it\nwould be d, T, right?",
    "start": "3332130",
    "end": "3339120"
  },
  {
    "text": " And so you have to\ndo the enumeration.",
    "start": "3339120",
    "end": "3346760"
  },
  {
    "text": "It's worthwhile doing once. And then it gets kind of boring. We won't to do it again. But you have to realize that\nyou have to absolutely look",
    "start": "3346760",
    "end": "3354930"
  },
  {
    "text": "at every pair of vertices. And you have to\nuse skew symmetry",
    "start": "3354930",
    "end": "3361190"
  },
  {
    "text": "and ensure that, even\nthough there's actually no edge going out, if\nthere's an edge coming in,",
    "start": "3361190",
    "end": "3366729"
  },
  {
    "text": "you've got to count that. And that's going\nto get a negative. Whatever is coming in,\nyou've got to subtract, OK?",
    "start": "3366729",
    "end": "3372212"
  },
  {
    "text": "So it's not that complicated. Yeah, go ahead. STUDENT: Do we\nnot consider S, c? SRINIVAS DEVADAS: I'm sorry? STUDENT: Do we\nnot consider S, c?",
    "start": "3372212",
    "end": "3379220"
  },
  {
    "text": "SRINIVAS DEVADAS: So\nthe beauty of this is that, when you don't have\na particular edge from S to c,",
    "start": "3379220",
    "end": "3388760"
  },
  {
    "text": "you can use skew symmetry\nto argue that S, c and c, S cancel out each\nother, all right?",
    "start": "3388760",
    "end": "3395299"
  },
  {
    "text": "So that's the good part, right? And thanks for\nasking the question. That's a good question. All right. Here you go.",
    "start": "3395300",
    "end": "3400729"
  },
  {
    "text": " So you can do that by\njust looking at the edges.",
    "start": "3400729",
    "end": "3407950"
  },
  {
    "text": "And you can add up the\nnumbers, all right? And so I don't\nthink this is going",
    "start": "3407950",
    "end": "3413970"
  },
  {
    "text": "to be absolutely\ncrucial to understand the rest of the lecture.",
    "start": "3413970",
    "end": "3419220"
  },
  {
    "text": "Keep this in mind, that\nthere's a process by which you define the value of a cut.",
    "start": "3419220",
    "end": "3427309"
  },
  {
    "text": "And we're going to\nget back to this, when we prove the max-flow\nmin-cut theorem next time.",
    "start": "3427310",
    "end": "3432470"
  },
  {
    "text": "But at this point, I want\nto say something actually much more straightforward,\nwhich is going to be important",
    "start": "3432470",
    "end": "3437710"
  },
  {
    "text": "when we look at\nresidual networks, which is the last concept that\nwe need to get at before we",
    "start": "3437710",
    "end": "3445790"
  },
  {
    "text": "get to an algorithm. And that is simply that\nthe capacity of a cut",
    "start": "3445790",
    "end": "3455580"
  },
  {
    "text": "and the relationship between\nthe capacity of the cut and the flow of a cut.",
    "start": "3455580",
    "end": "3462650"
  },
  {
    "text": "So the capacity of\na cut is c(S,T). ",
    "start": "3462650",
    "end": "3469190"
  },
  {
    "text": "Oops. I didn't draw that properly. Open brackets,\ncapital S, capital T.",
    "start": "3469190",
    "end": "3475190"
  },
  {
    "text": "And we can do it exactly\nthe same way, except this is a lot simpler, because\nyou only look at edges",
    "start": "3475190",
    "end": "3483150"
  },
  {
    "text": "and you only have\npositive quantities. So in this case,\nyou'll simply say it's 3 plus 2, corresponding\nto-- what did I have here?",
    "start": "3483150",
    "end": "3492670"
  },
  {
    "text": "I had d, a-- S, a and S, d.",
    "start": "3492670",
    "end": "3498309"
  },
  {
    "text": "And then, the\ncapacity is you only",
    "start": "3498310",
    "end": "3503580"
  },
  {
    "text": "need to look at the edges\nthat go from a node in S to a node in capital T.\nAnd so those are 1 plus 3.",
    "start": "3503580",
    "end": "3514900"
  },
  {
    "text": "And this simply would\nbe the 1 would be d, b.",
    "start": "3514900",
    "end": "3521190"
  },
  {
    "text": "And the 3 is d, t.",
    "start": "3521190",
    "end": "3526490"
  },
  {
    "text": "So you don't care\nabout the other flows. This is not about flows, this\nis simply about capacity.",
    "start": "3526490",
    "end": "3531800"
  },
  {
    "text": "So this adds up to 9, OK?",
    "start": "3531800",
    "end": "3538820"
  },
  {
    "text": "And so we have, at\nthis point, we have",
    "start": "3538820",
    "end": "3545840"
  },
  {
    "text": "defined the flow through a cut. And we know the\ncapacity of a cut, OK?",
    "start": "3545840",
    "end": "3552440"
  },
  {
    "text": "It's more or less obvious--\nthough you could certainly",
    "start": "3552440",
    "end": "3557730"
  },
  {
    "text": "prove a theorem which is going\nto take a couple of lines-- to say that the\nvalue of any flow",
    "start": "3557730",
    "end": "3575430"
  },
  {
    "text": "is bounded by the\ncapacity of any cut.",
    "start": "3575430",
    "end": "3586579"
  },
  {
    "text": "And sorry, I lied. It's not a trivial proof.",
    "start": "3586580",
    "end": "3592710"
  },
  {
    "text": "And that is actually something\nprofound going on here. And so I'll have to explain\nexactly what this means.",
    "start": "3592710",
    "end": "3600150"
  },
  {
    "text": "And then we'll take a look at\nhow we could prove something like this. So what's cool about\nthis is that you're",
    "start": "3600150",
    "end": "3609070"
  },
  {
    "text": "saying that it's the\nvalue of any flow is bounded by the capacity\nof any cut, OK?",
    "start": "3609070",
    "end": "3617740"
  },
  {
    "text": "And so that's an upper-bound on\nthe maximum flow value, right? So I'm saying there's\nall these cuts that",
    "start": "3617740",
    "end": "3624880"
  },
  {
    "text": "are possible in the network. And I'm making a statement\nabout what the maximum flow can",
    "start": "3624880",
    "end": "3633100"
  },
  {
    "text": "be, based on the values\ncorresponding to the capacities",
    "start": "3633100",
    "end": "3639510"
  },
  {
    "text": "of any cut, right? So why is that the case?",
    "start": "3639510",
    "end": "3644800"
  },
  {
    "text": "Well, we're not going to be\nable to prove that fully today.",
    "start": "3644800",
    "end": "3650490"
  },
  {
    "text": "That's the max-flow\nmin-cut theorem. But you can certainly\nget a sense of it,",
    "start": "3650490",
    "end": "3655620"
  },
  {
    "text": "by looking at a different\ncharacterization of the flow",
    "start": "3655620",
    "end": "3660860"
  },
  {
    "text": "value. So I'm going to give you one\nhalf of the proof, at least, and intuition about\nthe other half.",
    "start": "3660860",
    "end": "3667470"
  },
  {
    "text": "And we'll finish it next time. ",
    "start": "3667470",
    "end": "3672540"
  },
  {
    "text": "But here's another\ncharacterization",
    "start": "3672540",
    "end": "3683928"
  },
  {
    "text": "of the flow value. ",
    "start": "3683928",
    "end": "3689080"
  },
  {
    "text": "So our lemma here,\nwhich is going to lead us to this statement,\nis that, for any flow, f,",
    "start": "3689080",
    "end": "3701680"
  },
  {
    "text": "and any cut, (S, T), we have\na really powerful dilemma.",
    "start": "3701680",
    "end": "3720150"
  },
  {
    "text": "Maybe you should\ncall it a theorem. But it essentially\nsays, look, it doesn't matter what\ncut you choose,",
    "start": "3720150",
    "end": "3727520"
  },
  {
    "text": "you've got a flow\non the network. And when you look at\nthe flow on the network,",
    "start": "3727520",
    "end": "3734240"
  },
  {
    "text": "it's going to equal the\nflow across the cut. And the only reason\nfor this is simply because you've got the source\non one side of the cut.",
    "start": "3734240",
    "end": "3742510"
  },
  {
    "text": "And you've got the sink on\nthe other side of the cut. That's it. That's the only thing\nthat you need, right?",
    "start": "3742510",
    "end": "3748140"
  },
  {
    "text": "You dump these vertices\nthese into two bins. You know, dump the\nsource on the left, and dump the sink on the right.",
    "start": "3748140",
    "end": "3755550"
  },
  {
    "text": "And you compute the flow\nthe way we've defined it. That's the flow. It doesn't matter how you\npartition these vertices,",
    "start": "3755550",
    "end": "3762310"
  },
  {
    "text": "as long as you've got the\nsource on the left and the sink on the right, OK? And so we can prove this using\nimplicit summation notation.",
    "start": "3762310",
    "end": "3770180"
  },
  {
    "text": " We'll do that.",
    "start": "3770180",
    "end": "3775660"
  },
  {
    "text": "And that'll give you a\nreally good sense of why this statement is\ntrue, because we",
    "start": "3775660",
    "end": "3781820"
  },
  {
    "text": "know that, for any given\ncut, the flow that cut",
    "start": "3781820",
    "end": "3787170"
  },
  {
    "text": "is bounded by the capacity\nof that cut, right? You know that. But to show this, here's\nhow we could show that, f(S,",
    "start": "3787170",
    "end": "3797150"
  },
  {
    "text": "T) is f(S, V) minus f(S, S), OK?",
    "start": "3797150",
    "end": "3810170"
  },
  {
    "text": "So I'm playing around,\njust like I did before. I had taken the cap T-- I know\nthat S union T is cap V, right?",
    "start": "3810170",
    "end": "3819480"
  },
  {
    "text": "This is a partition. So I know that S\nunion T is cap V. So I can put a V here\nand an S here, right?",
    "start": "3819480",
    "end": "3825380"
  },
  {
    "text": "And that's a subtraction\nover there, of course, right? So put that up here and finish\nthis, a couple more lines.",
    "start": "3825380",
    "end": "3833910"
  },
  {
    "start": "3833910",
    "end": "3841760"
  },
  {
    "text": "And what can I say\nabout either of these? I could say something\nabout one of these terms.",
    "start": "3841760",
    "end": "3849471"
  },
  {
    "text": "Yep? STUDENT: The one on the\nright is [INAUDIBLE]. SRINIVAS DEVADAS: The\none on the right is 0. So call this f(S,V).",
    "start": "3849471",
    "end": "3856040"
  },
  {
    "text": " Right? And now, I'm going to break\nit up again, make it small s,",
    "start": "3856040",
    "end": "3865440"
  },
  {
    "text": "big V, plus f(S minus s, cap V).",
    "start": "3865440",
    "end": "3873730"
  },
  {
    "text": "So broken this up into\nsmall s, which is just joined from cap S\nminus s, clearly.",
    "start": "3873730",
    "end": "3880435"
  },
  {
    "text": " And what can I say about this?",
    "start": "3880436",
    "end": "3886930"
  },
  {
    "text": "This is a little more\nsubtle than, perhaps,",
    "start": "3886930",
    "end": "3893500"
  },
  {
    "text": "the previous question. What can I say\nabout that quantity? I mean, the answer is not\nsubtle, but-- yeah, go ahead.",
    "start": "3893500",
    "end": "3900285"
  },
  {
    "text": "STUDENT: That that\nis equal to 0. SRINIVAS DEVADAS: And why? STUDENT: Because the\ncap S doesn't contain t.",
    "start": "3900285",
    "end": "3906175"
  },
  {
    "text": "SRINIVAS DEVADAS: Ah. Beautiful. That's right. So that's what I wanted. So this does not contain t. ",
    "start": "3906175",
    "end": "3915030"
  },
  {
    "text": "And so, now you can use\nflow conservation, right? And that's the important thing. You can use flow conservation,\nbecause this does not",
    "start": "3915030",
    "end": "3924000"
  },
  {
    "text": "contain t. And then, it clearly does not\ncontain small s, because I just took it out of it, right?",
    "start": "3924000",
    "end": "3930180"
  },
  {
    "text": "So that goes to 0. And voila. That's simply f(S, V),\nwhich we know is f.",
    "start": "3930180",
    "end": "3940560"
  },
  {
    "text": "We proved that. Our first implicit\nsummation proof was showing that-- well,\nthis is a definition.",
    "start": "3940560",
    "end": "3948640"
  },
  {
    "text": "Excuse me. So we did it for the sink.",
    "start": "3948640",
    "end": "3954460"
  },
  {
    "text": "But this is simply the\ndefinition of the flow value, right? So this is beautiful.",
    "start": "3954460",
    "end": "3960520"
  },
  {
    "text": "I mean, it's like\nfantastic, right? Why aren't people excited?",
    "start": "3960520",
    "end": "3966140"
  },
  {
    "text": "[LAUGHTER] Because I put people to sleep\nbefore, in the hour before. But this is\nabsolutely fantastic,",
    "start": "3966140",
    "end": "3972670"
  },
  {
    "text": "because this says that I\nhave ways of figuring out",
    "start": "3972670",
    "end": "3979410"
  },
  {
    "text": "what the maximum flow\nof the network would be,",
    "start": "3979410",
    "end": "3984630"
  },
  {
    "text": "by making arbitrary cuts\nthrough this network and looking for capacities\nof these cuts, right?",
    "start": "3984630",
    "end": "3991690"
  },
  {
    "text": "Because I know that the\ncapacity of any cut-- and now you see why min cut\nis interesting--",
    "start": "3991690",
    "end": "3998109"
  },
  {
    "text": "but you know that the\ncapacity of any cut is going to bound the\nflow of the network,",
    "start": "3998110",
    "end": "4003580"
  },
  {
    "text": "because the flow\nthrough a cut is the flow through the network. So if I go through and look\nat the min cut corresponding",
    "start": "4003580",
    "end": "4010849"
  },
  {
    "text": "to the minimum capacity\nassociated with the flow network, that's going to\npoint me to my max flow,",
    "start": "4010850",
    "end": "4016900"
  },
  {
    "text": "because that going to be\nan upper bound on the max flow, right? And so now you see why the\nmin-- not the min flow,",
    "start": "4016900",
    "end": "4023690"
  },
  {
    "text": "sorry-- the min-cut max-flow\ntheorem is an interesting one. But it relates-- and this is the\nbeginning of that relationship,",
    "start": "4023690",
    "end": "4033680"
  },
  {
    "text": "we're not quite\ndone to prove it-- but the beginning\nof the relationship is that you can look at any cut,\nand you can look at the flow",
    "start": "4033680",
    "end": "4043369"
  },
  {
    "text": "through the cut as being the\nflow through the network. And then you use the\nsecond part of it, which is the capacity\nbounding-- of course, in a very",
    "start": "4043370",
    "end": "4049830"
  },
  {
    "text": "simple way, because of\nedge capacities-- the flow through the cut. And you can put those two\nthings together, all right?",
    "start": "4049830",
    "end": "4056790"
  },
  {
    "text": "We still don't quite know how\nto find these cuts, right? So we don't quite know\nhow to find these cuts.",
    "start": "4056790",
    "end": "4063250"
  },
  {
    "text": "And that's the last\nthing that we're going to do today,\ngive you a sense of how we're going to find\nthese min cuts,",
    "start": "4063250",
    "end": "4068900"
  },
  {
    "text": "so we can find the max flow. All right? Cool.",
    "start": "4068900",
    "end": "4074270"
  },
  {
    "text": "So the one last\nnotion that we have here that is going to allow\nus to go into the algorithm",
    "start": "4074270",
    "end": "4081780"
  },
  {
    "text": "domain, as opposed to the\nanalysis domain-- all we've done so far is analysis,\nanalysis, analysis--",
    "start": "4081780",
    "end": "4088550"
  },
  {
    "text": "is the notion of a\nresidual network. OK? And a residual network,\nas its name implies,",
    "start": "4088550",
    "end": "4096390"
  },
  {
    "text": "is something that has\nresidual capacities. It's the network that\npoints you to places",
    "start": "4096390",
    "end": "4102549"
  },
  {
    "text": "where you can increase the flow,\nbecause there's capacity left. Your flow is less than\nthe edge capacity.",
    "start": "4102550",
    "end": "4109439"
  },
  {
    "text": "It's a local notion, so\nit's easy to compute. There's a capacity of 3 on\nthis edge, there's a flow of 2.",
    "start": "4109439",
    "end": "4116009"
  },
  {
    "text": "The residual\ncapacity is 1, right? 3 minus 2. And so the residual\nnetwork Gf (V, Ef), right?",
    "start": "4116010",
    "end": "4135370"
  },
  {
    "text": "So the actual\nnetwork is G(V, E). And the vertices are\ngoing to be the same. The graph is\nobviously different,",
    "start": "4135370",
    "end": "4141170"
  },
  {
    "text": "but the edges are\ngoing to be different. There's going to be a\ndifferent set of edges in the residual network, as\nopposed to the flow network,",
    "start": "4141170",
    "end": "4148870"
  },
  {
    "text": "OK? And you have strictly positive.",
    "start": "4148870",
    "end": "4157920"
  },
  {
    "text": "That means greater than\n0, strictly greater than 0, residual capacities.",
    "start": "4157920",
    "end": "4163609"
  },
  {
    "start": "4163609",
    "end": "4170399"
  },
  {
    "text": "So Cf ) equals\nc(u,v) minus f(u,v).",
    "start": "4170399",
    "end": "4179839"
  },
  {
    "text": "And that's strictly\ngreater than 0. I'm going to put an\nedge in there, if there is a residual capacity.",
    "start": "4179840",
    "end": "4185818"
  },
  {
    "text": "0 doesn't mean there's\nany residual capacity. Edges in Ef admit more flow, OK?",
    "start": "4185819",
    "end": "4200144"
  },
  {
    "text": " And one last thing.",
    "start": "4200144",
    "end": "4206820"
  },
  {
    "text": "If (V, u) does not belong to\nE-- so we are talking about",
    "start": "4206820",
    "end": "4213550"
  },
  {
    "text": "the original network here, E\nmeans the original network-- then we know c(V, u) equals 0.",
    "start": "4213550",
    "end": "4222790"
  },
  {
    "text": "That was our definition. If you don't have that\nedge, the capacity is 0. But we are talking\nnow about f, which",
    "start": "4222790",
    "end": "4232680"
  },
  {
    "text": "is a flow, which\ndoesn't necessarily require that there be an edge.",
    "start": "4232680",
    "end": "4237980"
  },
  {
    "text": "And we are simply going to use\nour skew symmetry relationship.",
    "start": "4237980",
    "end": "4243739"
  },
  {
    "text": "And you'll see that this may not\nbe completely clear as to why I wrote this at this moment.",
    "start": "4243740",
    "end": "4249250"
  },
  {
    "text": "But as I draw the\nresidual network, you'll see why\nthat is important. It's going to be\nthe case that we're",
    "start": "4249250",
    "end": "4254710"
  },
  {
    "text": "going to have extra edges\nin the residual network that don't exist in the\noriginal network,",
    "start": "4254710",
    "end": "4262430"
  },
  {
    "text": "because of that last\nline there, right? So let me clear that up. So we're going to draw\na residual network",
    "start": "4262430",
    "end": "4271600"
  },
  {
    "text": "for-- I'm going to\nchange that yet again-- but we're going to draw\nthe residual network",
    "start": "4271600",
    "end": "4278660"
  },
  {
    "text": "for our example up there. Topology is going\nto stay the same.",
    "start": "4278660",
    "end": "4284760"
  },
  {
    "text": "Numbers are going\nto change, because I want something slightly\nmore interesting than what",
    "start": "4284760",
    "end": "4290340"
  },
  {
    "text": "we have there. So I'm going to take\nthis out-- 2, 1.",
    "start": "4290340",
    "end": "4300940"
  },
  {
    "text": "1, 2-- go back to what\nit was before, I think.",
    "start": "4300940",
    "end": "4306630"
  },
  {
    "text": "1-- all right. Good.",
    "start": "4306630",
    "end": "4311730"
  },
  {
    "text": "So I want a 1 over here. I want a 1 over\nhere, a 2 over here.",
    "start": "4311730",
    "end": "4322260"
  },
  {
    "text": "And keep checking to make\nsure I'm not messing up here,",
    "start": "4322260",
    "end": "4327719"
  },
  {
    "text": "in terms of flow constraints. But that's pretty\nmuch all I got. ",
    "start": "4327720",
    "end": "4335560"
  },
  {
    "text": "OK? So the flow here and the s and\nt don't particularly matter.",
    "start": "4335560",
    "end": "4342530"
  },
  {
    "text": "The max flow is 4. The flow that you\nsee up there is 3. This is what we had right\nat the beginning, all right?",
    "start": "4342530",
    "end": "4349570"
  },
  {
    "text": "So what I want to\ndo now is give you what the residual network\nis for this particular flow.",
    "start": "4349570",
    "end": "4355840"
  },
  {
    "text": "Remember, the residual network\nis defined, based on a flow. That's why you have\nGf, G subscript f.",
    "start": "4355840",
    "end": "4363050"
  },
  {
    "text": "f is a flow. So you're going to have a\ndifferent residual network, if the flow is different. So that original\nexample that I had",
    "start": "4363050",
    "end": "4368834"
  },
  {
    "text": "would have a different\nresidual network. This one is going to have\nthe one I'm going to draw, all right? So the residual network has\nthe same set of vertices.",
    "start": "4368834",
    "end": "4377489"
  },
  {
    "text": "So I can go ahead and\ndraw these vertices. ",
    "start": "4377490",
    "end": "4385690"
  },
  {
    "text": "I'll just mark T\nand S over here. Those are exactly\nthe same as before. And this is Gf, OK?",
    "start": "4385690",
    "end": "4392920"
  },
  {
    "text": "That's a residual network. And the edges are\ngoing to be different. All I have to do is\nlook up there and say,",
    "start": "4392920",
    "end": "4399100"
  },
  {
    "text": "look, I'm going to have a\nresidual capacity of 2-- let me use a different\ncolor, since I have them--",
    "start": "4399100",
    "end": "4407920"
  },
  {
    "text": "corresponding to that\nedge from S to a, because I clearly\nhave a capacity of 3,",
    "start": "4407920",
    "end": "4413340"
  },
  {
    "text": "and I only have a\nflow of 1, right? So that's all there is to it. Now, the interesting thing\nis that, because of this line",
    "start": "4413340",
    "end": "4420980"
  },
  {
    "text": "over here, I'm actually going\nto define an edge in Ef, in Gf",
    "start": "4420980",
    "end": "4429560"
  },
  {
    "text": "or Ef, that corresponds to this\nedge that didn't exist in E, because I can shrink\nthe flow from 1 to 0.",
    "start": "4429560",
    "end": "4438469"
  },
  {
    "text": "And that essentially says that\nthat shrinkage is represented in the residual\nnetwork by an edge that",
    "start": "4438470",
    "end": "4445430"
  },
  {
    "text": "goes from this node, a,\nup there, to s, right? And that is going to have a\nresidual capacity of 1, right?",
    "start": "4445430",
    "end": "4456280"
  },
  {
    "text": "So that's it. That's the only\nextra thing that you have to remember when you\ndraw the residual network.",
    "start": "4456280",
    "end": "4462960"
  },
  {
    "text": "You not only can increase the\nflow, you can also shrink it. You have to represent\nthe shrinkage of the flow",
    "start": "4462960",
    "end": "4470079"
  },
  {
    "text": "by an edge in the\nresidual network. And you obviously represent\nthe increase of the flow by an edge in the\nresidual network.",
    "start": "4470080",
    "end": "4476434"
  },
  {
    "text": "And now you see why this\nis all going to make sense. Remember, way back, eons\nago, only an hour ago,",
    "start": "4476434",
    "end": "4483180"
  },
  {
    "text": "but we had this\nexample where we had to shrink the flow\nin a particular edge,",
    "start": "4483180",
    "end": "4491020"
  },
  {
    "text": "in order to get the overall\nflow to increase, right? The residual network\nis going to point us",
    "start": "4491020",
    "end": "4496680"
  },
  {
    "text": "in the direction of,\npotentially, those edges whose flow has to shrink.",
    "start": "4496680",
    "end": "4502590"
  },
  {
    "text": "But they're going to be\nrepresented, in effect, as these reverse edges with\npositive numbers associated",
    "start": "4502590",
    "end": "4509360"
  },
  {
    "text": "with them. So there's a 1 here. It's positive, because\nit goes from this node, call it a, back to s.",
    "start": "4509360",
    "end": "4515530"
  },
  {
    "text": "And if I shrink\nthis from 1 to 0,",
    "start": "4515530",
    "end": "4521369"
  },
  {
    "text": "that is, in effect,\ntaking what I have up here and making this 1 as 0, OK?",
    "start": "4521370",
    "end": "4527177"
  },
  {
    "text": "That's the way you want\nto think about this. So that's pretty much it. I could draw out\nthe rest of this,",
    "start": "4527177",
    "end": "4533110"
  },
  {
    "text": "and it should all make sense. I have an edge like that. ",
    "start": "4533110",
    "end": "4541980"
  },
  {
    "text": "So the edges that are\nat capacity up there",
    "start": "4541980",
    "end": "4548620"
  },
  {
    "text": "aren't going to show up here. The edges that are not at\ncapacity end up with two edges down below, if they have a\nflow that is non-zero, right?",
    "start": "4548620",
    "end": "4557690"
  },
  {
    "text": "If you have a 0 flow\nup there, you're only going to get one edge. ",
    "start": "4557690",
    "end": "4563459"
  },
  {
    "text": "Obviously, you'll get one\nedge, because the capacity is non-zero. But the ones that are\nnot quite at capacity end",
    "start": "4563459",
    "end": "4569380"
  },
  {
    "text": "up to two edges, right? Think of that as\nbeing the simple rule. And make sure that I'm\nfollowing this rule.",
    "start": "4569380",
    "end": "4575219"
  },
  {
    "text": "Good exercise is to check\nfor bugs, lecture bugs. Best way of understanding\nthe material.",
    "start": "4575220",
    "end": "4581576"
  },
  {
    "start": "4581576",
    "end": "4595421"
  },
  {
    "text": "OK? So that's my residual network. And let me just point--\nI'll put in some numbers.",
    "start": "4595421",
    "end": "4603060"
  },
  {
    "text": "Or maybe you can tell me what\nsome of these numbers are. What is this number? STUDENT: 2. SRINIVAS DEVADAS: 2.",
    "start": "4603060",
    "end": "4609199"
  },
  {
    "text": "Right? Now, this is a\nlittle more tricky. Take a look at the\nnumber that goes up, versus the number\nthat comes down.",
    "start": "4609200",
    "end": "4615190"
  },
  {
    "text": "What is this number? Goes up. STUDENTS: 2. SRINIVAS DEVADAS: That's 2,\nbecause I can go from 1 to 3.",
    "start": "4615190",
    "end": "4620390"
  },
  {
    "text": "And this number would be? STUDENTS: 1. SRINIVAS DEVADAS: Beautiful. All right, you guys got it. Did my job.",
    "start": "4620390",
    "end": "4625543"
  },
  {
    "start": "4625543",
    "end": "4636980"
  },
  {
    "text": "All right, so that's\nour residual network for this particular flow. So a mechanical way\nof computing it.",
    "start": "4636980",
    "end": "4644430"
  },
  {
    "text": "And you should be\nable to do that. Now what exactly can we do\nwith this residual network?",
    "start": "4644430",
    "end": "4653780"
  },
  {
    "text": "It turns out that\nthe algorithm now can be described in a\ncouple of sentences, right?",
    "start": "4653780",
    "end": "4661280"
  },
  {
    "text": "Essentially our\nFord-Fulkerson algorithm-- I'm not going to bother\nwriting this out, because I'm going\nto have to prove the max-flow min-cut\ntheorem next time.",
    "start": "4661280",
    "end": "4668300"
  },
  {
    "text": "And we're going to talk about\nthe Ford-Fulkerson algorithm and issues with it next time. But I'm going to show you how\nthe Ford-Fulkerson algorithm",
    "start": "4668300",
    "end": "4675030"
  },
  {
    "text": "works on this\nparticular example. And it's only going to\nhave one step, all right? So it's going to\nconverge in one step.",
    "start": "4675030",
    "end": "4681560"
  },
  {
    "text": "So it's going to\nbe relatively easy. But the bottom line is the\nthe Ford-Fulkerson algorithm",
    "start": "4681560",
    "end": "4687670"
  },
  {
    "text": "is going to look for\naugmenting paths in Gf.",
    "start": "4687670",
    "end": "4698050"
  },
  {
    "text": "Augmenting paths are defined\nin the residual network. What is an augmenting\npath, you ask?",
    "start": "4698050",
    "end": "4705290"
  },
  {
    "text": "Well, an augmenting path is\nsimply a path from s in Gf",
    "start": "4705290",
    "end": "4711724"
  },
  {
    "text": "to t in Gf, OK? That's it. That's all there is to it.",
    "start": "4711724",
    "end": "4717190"
  },
  {
    "text": "If you can find a path, you\ncould use depth-first search, you could use\nbreadth-first search, you could use\nwhatever you wanted.",
    "start": "4717190",
    "end": "4723510"
  },
  {
    "text": "You find a path from s to t, OK? If you find such a path,\nif this path exists,",
    "start": "4723510",
    "end": "4732270"
  },
  {
    "text": "it means that the flow\nis not maximum, OK? If no path exists, the flow\nis maximum, and you're done.",
    "start": "4732270",
    "end": "4741870"
  },
  {
    "text": "If such a path\nexists, you will be able to increase the flow,\nin this case, because we",
    "start": "4741870",
    "end": "4747470"
  },
  {
    "text": "have integral quantities,\nby at least one, OK? And you will be able to\nincrease the flow by one.",
    "start": "4747470",
    "end": "4753600"
  },
  {
    "text": "And not only that,\nthe augmenting path is going to tell you exactly\nwhat to do with respect to what",
    "start": "4753600",
    "end": "4760470"
  },
  {
    "text": "edges to change,\nsometimes subtract the flow from, sometimes\nincrease, right?",
    "start": "4760470",
    "end": "4766585"
  },
  {
    "text": "So the augmenting path is\ngoing to take care of it. But you've flipped it, so\neverything is positive. You know, life is great.",
    "start": "4766585",
    "end": "4772650"
  },
  {
    "text": "Positive numbers. Just look at s to t and\ngive me any path from s",
    "start": "4772650",
    "end": "4779570"
  },
  {
    "text": "to t here in the\nresidual network.",
    "start": "4779570",
    "end": "4785159"
  },
  {
    "text": "So let me just call\nthem a, b, d, and c.",
    "start": "4785160",
    "end": "4793030"
  },
  {
    "text": "And we don't care about\npartitions or cuts at this point. That's required for proofs. But give me a path from\ns to t Yeah, go ahead.",
    "start": "4793030",
    "end": "4802452"
  },
  {
    "text": "STUDENT: S to a, a to b-- All right a little\nbit more slowly. s a, OK.",
    "start": "4802452",
    "end": "4809060"
  },
  {
    "text": "And then? STUDENT: a to b. SRINIVAS DEVADAS: a to b. Beautiful. STUDENT: b to c.",
    "start": "4809060",
    "end": "4814170"
  },
  {
    "text": "SRINIVAS DEVADAS: b to c. STUDENT: c to t. SRINIVAS DEVADAS: And c to t. Wonderful. And I have a capacity, a\nresidual capacity, of 2 here.",
    "start": "4814170",
    "end": "4826520"
  },
  {
    "text": "I have a residual capacity of\n1 here, 1 here, and 1 here. And so the value of this\naugmenting path is 1, right?",
    "start": "4826520",
    "end": "4838790"
  },
  {
    "text": "It's not 2, because the\nminimum value is what I can push through the network.",
    "start": "4838790",
    "end": "4845850"
  },
  {
    "text": "And I just need to\ntake the min of all of the residual capacities\ncorresponding to the edges",
    "start": "4845850",
    "end": "4851030"
  },
  {
    "text": "that I traversed,\nthat correspond to this particular path. And that min value of\n2, 1, 1, 1, is 1, right?",
    "start": "4851030",
    "end": "4858179"
  },
  {
    "text": "So what this means is I've\ndiscovered an augmenting path of residual capacity, 1.",
    "start": "4858180",
    "end": "4865670"
  },
  {
    "text": "Now I can go back to\nthis thing over here. And these edges are going\nto point me, in some cases,",
    "start": "4865670",
    "end": "4873760"
  },
  {
    "text": "to complimentary edges, in some\ncases to the direct edges that are going to have to have their\nflows changed, either increased",
    "start": "4873760",
    "end": "4882200"
  },
  {
    "text": "or decreased, to increase the\nflow in the original network. So you're guaranteed\nnow that f, which",
    "start": "4882200",
    "end": "4889520"
  },
  {
    "text": "caused this residual network to\nhave an augmenting path in it was not maximum.",
    "start": "4889520",
    "end": "4894750"
  },
  {
    "text": "You're guaranteed that, because\nyou found this path, OK? So what happens here?",
    "start": "4894750",
    "end": "4899760"
  },
  {
    "text": "Well, you go back up\nand you say, remember, I'm going to\nincrement by plus 1, because that's the\nresidual capacity.",
    "start": "4899760",
    "end": "4906699"
  },
  {
    "text": "So I'm going to go up\nhere, and I have s to a. You'll need to\nhelp me out again.",
    "start": "4906700",
    "end": "4911889"
  },
  {
    "text": "So I'm going to make\nthis 2, because I needed to add a one to it. What happens here?",
    "start": "4911890",
    "end": "4918099"
  },
  {
    "text": "This is the key step. STUDENT: Subtract. SRINIVAS DEVADAS: Subtract\nand make this a 0, right?",
    "start": "4918100",
    "end": "4924280"
  },
  {
    "text": "We're not quite done. What's next? ",
    "start": "4924280",
    "end": "4929510"
  },
  {
    "text": "I have b to c, right? Right? You're still on the hook. STUDENT: [LAUGHS]. SRINIVAS DEVADAS:\nb to c becomes?",
    "start": "4929510",
    "end": "4936000"
  },
  {
    "text": "STUDENT: 3. SRINIVAS DEVADAS: 3. Right.  And then, lastly,\nthis becomes 2.",
    "start": "4936000",
    "end": "4944101"
  },
  {
    "text": " OK? And at this point, if you\ncreate a residual network",
    "start": "4944101",
    "end": "4953300"
  },
  {
    "text": "for this new flow,\nyou will not be able to find a path in that\nresidual network from s to t.",
    "start": "4953300",
    "end": "4959630"
  },
  {
    "text": "And you know you're done, right? So all of this works. We haven't quite shown that\nit works, because we haven't",
    "start": "4959630",
    "end": "4966450"
  },
  {
    "text": "done enough of the proofs. But you have a sense\nas to why this works. You could probably code this up.",
    "start": "4966450",
    "end": "4971570"
  },
  {
    "text": "It would all work. A couple of issues\nin applications. See you next time.",
    "start": "4971570",
    "end": "4977050"
  }
]