[
  {
    "start": "0",
    "end": "128000"
  },
  {
    "start": "0",
    "end": "8982"
  },
  {
    "text": "PROFESSOR: It was written about\nRoute 66, which used to be the main highway between\nChicago, Illinois and Los",
    "start": "8982",
    "end": "15640"
  },
  {
    "text": "Angeles, California. Very famous highway because\nanybody who wanted to go across country always took route\n66 because it was the",
    "start": "15640",
    "end": "23550"
  },
  {
    "text": "shortest way to go. And the question is, how do you\nfind the shortest path?",
    "start": "23550",
    "end": "29620"
  },
  {
    "text": "Not just any old path or a good\npath, but how do you find",
    "start": "29620",
    "end": "34760"
  },
  {
    "text": "the very shortest path? And that'll be the subject\nthat we're going to discuss today. But route 66, I lament its\npassing, but it's been largely",
    "start": "34760",
    "end": "43560"
  },
  {
    "text": "replaced by the interstate\nhighway system that was created by President\nEisenhower. Guess why?",
    "start": "43560",
    "end": "49600"
  },
  {
    "text": " Let's see, maybe the\nROTC people know.",
    "start": "49600",
    "end": "55860"
  },
  {
    "text": "You know why Eisenhower\ncreated the interstate highway system?",
    "start": "55860",
    "end": "61800"
  },
  {
    "text": "Well, in public affairs, of\ncourse, there's always a distinction to be\nmade between the",
    "start": "61800",
    "end": "68420"
  },
  {
    "text": "explanation and the reason. The explanation was-- AUDIENCE: To move weapons\nacross the country?",
    "start": "68420",
    "end": "76463"
  },
  {
    "text": "PROFESSOR: Well,\nto move nuclear weapons across the country. Let's put it in, sightly,\nmore benign terms. Eisenhower had observed that\nthe German army was able to",
    "start": "76463",
    "end": "84240"
  },
  {
    "text": "move its troops rapidly, even\nthough we bombed their railroads into oblivion because\nof their auto bond.",
    "start": "84240",
    "end": "92909"
  },
  {
    "text": "So Eisenhower conceived that if\nthere were ever an invasion in the United States, we too\nwould want to be able to move",
    "start": "92910",
    "end": "99600"
  },
  {
    "text": "our forces around on\na highway system. And consequence of that, we\nhave a pretty good highway",
    "start": "99600",
    "end": "106340"
  },
  {
    "text": "system and pretty awful\nrailroad system. It's interesting. I'm a beneficiary of that, in a\nfunny way, because I'm from",
    "start": "106340",
    "end": "113409"
  },
  {
    "text": "East Peoria, Illinois. And I was surrounded by the\nfactors of Caterpillar Tractor Company, which made all of the\ntractors that built all of",
    "start": "113410",
    "end": "120725"
  },
  {
    "text": "those roads. So my high school spent money\nlike water from that huge tax",
    "start": "120725",
    "end": "126180"
  },
  {
    "text": "base of all those factors. Anyway, today we want to find\nthe very best path, instead of",
    "start": "126180",
    "end": "134990"
  },
  {
    "text": "just a good path. And like the last time, we'll\ndeal with, both, an example",
    "start": "134990",
    "end": "146050"
  },
  {
    "text": "that we can set our program\nto work on. By the way, can you find the\nshortest path between S and G?",
    "start": "146050",
    "end": "154180"
  },
  {
    "text": "Would you like to bet your\nlife on the shortest path between S and G? Probably, not.",
    "start": "154180",
    "end": "159920"
  },
  {
    "text": "With your eye, you can\nfind a good path. But you can't find the\nbest possible path.",
    "start": "159920",
    "end": "166020"
  },
  {
    "text": "Today, what we're doing is\nprobably not modeling any obvious property of what we\nhave inside our heads.",
    "start": "166020",
    "end": "171550"
  },
  {
    "text": "But being able to find the best\npath is part of the skill set that anybody who's had a\ncourse artificial intelligence",
    "start": "171550",
    "end": "178260"
  },
  {
    "text": "would be expected to have. So we're going to look at it,\neven though it's not like many of the things we do. A model of something\nthat's, probably,",
    "start": "178260",
    "end": "184660"
  },
  {
    "text": "going on in your head. So we're going to use, both,\nthis example from Cambridge",
    "start": "184660",
    "end": "190710"
  },
  {
    "text": "and our Blackboard example. Let's see, we have to\ncaution ourselves.",
    "start": "190710",
    "end": "196800"
  },
  {
    "text": "Tanya, is search about maps? No, it's about what?",
    "start": "196800",
    "end": "202690"
  },
  {
    "text": "Starts with a C. And the next\nletter is H. And it ends up",
    "start": "202690",
    "end": "207830"
  },
  {
    "text": "being choice. So we're talking about choice. Not about maps. Even though our examples are\ndrawn from maps because",
    "start": "207830",
    "end": "215150"
  },
  {
    "text": "they're convenient, they're\nvisual, and helps understand the concepts behind the\nalgorithms I'm talking about.",
    "start": "215150",
    "end": "222190"
  },
  {
    "start": "221000",
    "end": "413000"
  },
  {
    "text": "So let's start off by looking\nat our classroom example. And I did something today that\nI neglected to do last time.",
    "start": "222190",
    "end": "230569"
  },
  {
    "text": "And that's talk to you\nabout what I meant by heuristic distance. It's those pink lines that\nI just drew on the map.",
    "start": "230570",
    "end": "237349"
  },
  {
    "text": "We're talking about the distance\nas the crow would fly between two places, even though\nthere's no road that",
    "start": "237350",
    "end": "243520"
  },
  {
    "text": "goes between those two places. So in general, and we discussed\nlast time, it's best",
    "start": "243520",
    "end": "251099"
  },
  {
    "text": "to get yourself into a place\nthat's close, as the crow flies, to your goal.",
    "start": "251100",
    "end": "257169"
  },
  {
    "text": "And of course, that's a\nheuristic and it can get you in trouble because it's\nnot always true.",
    "start": "257170",
    "end": "263020"
  },
  {
    "text": "It would appear that being at\nnode E is a good place to be because it's not very far from\nG. But in that particular case",
    "start": "263020",
    "end": "271040"
  },
  {
    "text": "designed to illustrate the\npoint, being close is, actually, not a good thing\nbecause it's a dead end.",
    "start": "271040",
    "end": "277770"
  },
  {
    "text": "But in general, it's a good\nthing to be close. And we talked last time about\nhill climbing and beam search,",
    "start": "277770",
    "end": "286150"
  },
  {
    "text": "being close was the objective\nof those kinds of searches. And at one point, in a beam\nsearch illustration, we had C,",
    "start": "286150",
    "end": "292060"
  },
  {
    "text": "B, A, and D. We had paths\nterminating at all four of those nodes as candidates for\nthe next round of search.",
    "start": "292060",
    "end": "300980"
  },
  {
    "text": "And we decided on the basis of\nthese airline distances to keep D and B, and reject A and C\nbecause they're further away",
    "start": "300980",
    "end": "309720"
  },
  {
    "text": "as the crow flies. Now, I repeat this even though\nmany of you have had this fixed already in your tutorials\nbecause we're going",
    "start": "309720",
    "end": "316790"
  },
  {
    "text": "to need this concept of\nheuristic distance today.",
    "start": "316790",
    "end": "322450"
  },
  {
    "text": "And I wanted to be sure that\nthat point has been clarified.",
    "start": "322450",
    "end": "328250"
  },
  {
    "text": "So now, with this smaller map I\nimagine you can do, by eye, a determination of what\nthe shortest path is.",
    "start": "328250",
    "end": "337580"
  },
  {
    "text": "What is it, Juana? Can you help me out with that? AUDIENCE: S, A, D, G.",
    "start": "337580",
    "end": "343800"
  },
  {
    "text": "PROFESSOR: S, A, D, G. And if\nyou add up those distances, the distance is 11 along that\npath that goes from S, first",
    "start": "343800",
    "end": "354430"
  },
  {
    "text": "to A, and then to D, and then\nfrom D to G. So Juana asserts",
    "start": "354430",
    "end": "359639"
  },
  {
    "text": "that that is the best path. And we're going to treat Juana\nas an Oracle because we're going to follow, in our initial\nattempt to understand",
    "start": "359640",
    "end": "367830"
  },
  {
    "text": "these algorithms,\na very important principle of problem solving. And that is that, if you want\nto solve a problem, the",
    "start": "367830",
    "end": "374770"
  },
  {
    "text": "easiest way is, usually, ask\nsomebody who knows the answer. Or Google, which also, probably,\nknows the answer.",
    "start": "374770",
    "end": "382290"
  },
  {
    "text": "So in this particular case,\nwe believe that Juana knows the answer. And she said that the shortest\npath is S,A, D, G, and its",
    "start": "382290",
    "end": "390169"
  },
  {
    "text": "path length is 11. But we don't trust her because\nwe're applying to the same",
    "start": "390170",
    "end": "396680"
  },
  {
    "text": "medical school and she may\nbe trying to screw us. [LAUGHTER]",
    "start": "396680",
    "end": "402140"
  },
  {
    "text": "PROFESSOR: So we're going to\nbe very cautious about accepting her answer until we've\nchecked it to make sure",
    "start": "402140",
    "end": "408320"
  },
  {
    "text": "that she hasn't attempted\nto delude us.",
    "start": "408320",
    "end": "413750"
  },
  {
    "start": "413000",
    "end": "685000"
  },
  {
    "text": "So how do we go about\ndoing that? Well, one way to do that is to\ncheck to be sure that all",
    "start": "413750",
    "end": "419490"
  },
  {
    "text": "other possible paths that we\ncould develop end up being, for sure, longer than the one\nthat Juana has told us about.",
    "start": "419490",
    "end": "427700"
  },
  {
    "text": "So she's told us about S, A, D,\nG. And it has a total path",
    "start": "427700",
    "end": "436910"
  },
  {
    "text": "length of 11. And now what I'm going to do is\nI'm just going to develop the rest of this tree-like\ndiagram.",
    "start": "436910",
    "end": "445995"
  },
  {
    "text": "But what I'm going to do is,\nI'm not going to do it in a British Museum or random way. What I'm going to do is, I'm\ngoing to look at the choice",
    "start": "445995",
    "end": "454830"
  },
  {
    "text": "that corresponds the shortest\npath that can be extended. So the shortest path that\ncan be extended is",
    "start": "454830",
    "end": "462160"
  },
  {
    "text": "this one right here. The one that just has the\nstarting node in it.",
    "start": "462160",
    "end": "467479"
  },
  {
    "text": "And I could have gone this other\nway to B. And if I go that other way to B, then\nthe path length along",
    "start": "467480",
    "end": "473870"
  },
  {
    "text": "that side is 5. And likewise, if I look at the\npath that terminates in A,",
    "start": "473870",
    "end": "482759"
  },
  {
    "text": "that has a path length of 3. So now I've got two choices.",
    "start": "482760",
    "end": "488300"
  },
  {
    "text": "A and B. I've got choices\nthat extend beyond those two places.",
    "start": "488300",
    "end": "494169"
  },
  {
    "text": "So I'm always going to\nextend the one that has the shorter length. So in this case, that would be\nthe path that goes from S to",
    "start": "494170",
    "end": "500450"
  },
  {
    "text": "A. So if I from S to A, I don't\nhave to go to D. I can also go",
    "start": "500450",
    "end": "505480"
  },
  {
    "text": "to B. And if I go to B, then the\naccumulated path length is",
    "start": "505480",
    "end": "513429"
  },
  {
    "text": "S, A, B. That's 7.  And know that we're talking now\nabout the path, like the",
    "start": "513429",
    "end": "523120"
  },
  {
    "text": "accumulated path length, that\nwe've traveled so far. Last time we were talking\na lot about distances to the goal.",
    "start": "523120",
    "end": "530220"
  },
  {
    "text": "Heuristic estimates of how\nfar we are from the goal. Now we're doing exactly\nthe opposite.",
    "start": "530220",
    "end": "535500"
  },
  {
    "text": "We're not considering how\nfar we've got to go. We're only thinking about how\nfar we've gone so far.",
    "start": "535500",
    "end": "542450"
  },
  {
    "text": "So now, repeating these\nsteps again. I've got 7 and 5.",
    "start": "542450",
    "end": "547660"
  },
  {
    "text": "So I'll go over and consider\nthe choices that go through the B node on the path S, B. And\nthat gives me S, B, A and",
    "start": "547660",
    "end": "556360"
  },
  {
    "text": "S, B, C. And what are\nthose path lengths?",
    "start": "556360",
    "end": "561440"
  },
  {
    "text": "Well, let's see. S, B, A would be 9.",
    "start": "561440",
    "end": "567199"
  },
  {
    "text": "And S, B,C would be 9. And now the shortest path\nis this one over here.",
    "start": "567200",
    "end": "572740"
  },
  {
    "text": "So I extend that. I go S, A, B. S, A, B. The only\nplace I can go is C. That",
    "start": "572740",
    "end": "580279"
  },
  {
    "text": "adds another 4. So that's 11. And what do I know\nabout that path?",
    "start": "580280",
    "end": "586690"
  },
  {
    "text": "I don't have to take that\nany further, right? Because the path length, since\nI've gone on that path",
    "start": "586690",
    "end": "593350"
  },
  {
    "text": "already, is equal to the path\nlength that Juana has told me gets me to the goal.",
    "start": "593350",
    "end": "599240"
  },
  {
    "text": "So it'll be foolhardy to carry\non because, presuming that these lengths are all\nnon-negative, I",
    "start": "599240",
    "end": "604810"
  },
  {
    "text": "can't do any better. And I can't even do as well,\nunless I've got a length that",
    "start": "604810",
    "end": "610270"
  },
  {
    "text": "has 0 length. So now that I have that idea,\nI can quickly finish up by",
    "start": "610270",
    "end": "615820"
  },
  {
    "text": "saying, well, let me consider\nthese two paths. S, B, A can only go to D. And\nif I go to D, that adds 3.",
    "start": "615820",
    "end": "623982"
  },
  {
    "text": "9 plus 3 is 12. Nothing else can happen there\nbecause that's 12 and I've got",
    "start": "623982",
    "end": "630750"
  },
  {
    "text": "a path of a goal that's 11. C, I can only go to E. It's a\ndead-end but I don't have to",
    "start": "630750",
    "end": "637500"
  },
  {
    "text": "think about that because I\nknow that the accumulated distance along this\npath is 6 plus 9.",
    "start": "637500",
    "end": "643730"
  },
  {
    "text": "That's 15. So all of these need not be\nextended any further because",
    "start": "643730",
    "end": "650740"
  },
  {
    "text": "their length, accumulated so\nfar, is equal to or less than a length of a goal. So I've checked the Oracle.",
    "start": "650740",
    "end": "657380"
  },
  {
    "text": "And although we're applying to\nthe same medical school, Juana has told me the truth.",
    "start": "657380",
    "end": "664400"
  },
  {
    "text": "So now, unfortunately, Juana's\nnot always around. And I don't always\nhave an Oracle.",
    "start": "664400",
    "end": "670690"
  },
  {
    "text": "So I'm going to have to have\nsome way of finding the shortest path without\nthat Oracle",
    "start": "670690",
    "end": "677440"
  },
  {
    "text": "that I can check against. ",
    "start": "677440",
    "end": "682740"
  },
  {
    "text": "Let's see. What can I do?  Maybe I can do the same\nthing I just did.",
    "start": "682740",
    "end": "689430"
  },
  {
    "start": "685000",
    "end": "900000"
  },
  {
    "text": "Always extend the shortest path\nso far and hope that I run into the goal\nat some point.",
    "start": "689430",
    "end": "694630"
  },
  {
    "text": "And then I have to ask myself\nthe question how much extra work did I need to do when\nI don't have the Oracle?",
    "start": "694630",
    "end": "700209"
  },
  {
    "text": "Let's just try it and\nsee what happens. You don't have that\npath to start.",
    "start": "700210",
    "end": "705400"
  },
  {
    "text": "So I just have S. This\ndistance is 0. I can go either to A or B.\nIf I go to A, I've got",
    "start": "705400",
    "end": "714590"
  },
  {
    "text": "a distance of 3. Here, I've got a\ndistance of 5. I'll extend the path that goes\nS, A. That can either got to B",
    "start": "714590",
    "end": "724550"
  },
  {
    "text": "or D. Going to B or D\ngives me 7 that way.",
    "start": "724550",
    "end": "730360"
  },
  {
    "text": "S, A, D gives me 6. So looking across all of these\nand extending the shortest",
    "start": "730360",
    "end": "735690"
  },
  {
    "text": "path so far takes me back over\nto S, B. So I extend those.",
    "start": "735690",
    "end": "744980"
  },
  {
    "text": "S, B takes me to A or C.",
    "start": "744980",
    "end": "750510"
  },
  {
    "text": "And those, in turn, have\ntotal accumulated path lengths of 9 and 9.",
    "start": "750510",
    "end": "755880"
  },
  {
    "text": "Now the shortest one is S, A,\nD. You see the pattern. Now let's see.",
    "start": "755880",
    "end": "760890"
  },
  {
    "text": "I haven't found the goal yet.",
    "start": "760890",
    "end": "765930"
  },
  {
    "text": "So I can ask myself the question\nis any of the work that I've done so far wasted?",
    "start": "765930",
    "end": "772189"
  },
  {
    "text": "No because all of the paths\nthat I've got so far are shorter than the path of the\ngoal because the goal",
    "start": "772190",
    "end": "777750"
  },
  {
    "text": "hasn't shown up. So when I do my oracle checking\nafter I found the goal, none of that work's\ngoing to be wasted.",
    "start": "777750",
    "end": "786220"
  },
  {
    "text": "So in the end, I don't,\nactually, need the Oracle. I could just develop this\ngraph by extending the",
    "start": "786220",
    "end": "792760"
  },
  {
    "text": "shortest path, so far,\nuntil I hit the goal. And then, perhaps, do a little\nremaining checking to make",
    "start": "792760",
    "end": "799030"
  },
  {
    "text": "sure that all the other paths\nextend with a length that's greater than the path\nof the goal.",
    "start": "799030",
    "end": "804970"
  },
  {
    "text": "So if those words are confusing,\nlet's carry on with the algorithm, and I think\nit'll be clearer.",
    "start": "804970",
    "end": "810000"
  },
  {
    "text": "So let's see. We've got the 7,\n6, and two 9s. We're going to extend\nthe one that's 6.",
    "start": "810000",
    "end": "815529"
  },
  {
    "text": "That gets this to the goal. Boom, we've got it. And we've got a path\nlength of 11.",
    "start": "815530",
    "end": "821230"
  },
  {
    "text": "Note, though, we can't quit\nbecause we have to be sure that all other paths\nare longer than 11.",
    "start": "821230",
    "end": "829300"
  },
  {
    "text": "So now we have to carry on with\nthe same algorithm that we started with. The Oracle checking algorithm.",
    "start": "829300",
    "end": "835630"
  },
  {
    "text": "And when we do that, we look\nfor this shortest path, so far, that has not\nbeen extended.",
    "start": "835630",
    "end": "841650"
  },
  {
    "text": "That's B, S, A, B. That\ngoes to C. That's 11.",
    "start": "841650",
    "end": "848360"
  },
  {
    "text": "So we're done there. A goes to D. That adds 3.",
    "start": "848360",
    "end": "853600"
  },
  {
    "text": "That's 12. C goes to E. That adds 6. That's 15.",
    "start": "853600",
    "end": "860050"
  },
  {
    "text": "And sure enough, we're done. OK? ",
    "start": "860050",
    "end": "866296"
  },
  {
    "text": "Elliot? AUDIENCE: Does it know that\nthere's know that there isn't a chance that you could have a\nzero distance extension from",
    "start": "866296",
    "end": "873110"
  },
  {
    "text": "the [INAUDIBLE]? PROFESSOR: The question is, does\nit know that there's no",
    "start": "873110",
    "end": "879302"
  },
  {
    "text": "zero distance length\nthat's coming up.",
    "start": "879302",
    "end": "884510"
  },
  {
    "text": "That's an implementation\ndetail. This guarantees you'll find a\npath that's as short as any",
    "start": "884510",
    "end": "891010"
  },
  {
    "text": "that you can possibly find. But there might be others if\nthey're zero-length lengths. As long as they're non-negative",
    "start": "891010",
    "end": "896580"
  },
  {
    "text": "lengths, we're safe. We've got a shortest path. So that was easy.",
    "start": "896580",
    "end": "901670"
  },
  {
    "start": "900000",
    "end": "1112000"
  },
  {
    "text": "And now we can repeat the\nexercise with our more complicated map of Cambridge. ",
    "start": "901670",
    "end": "910260"
  },
  {
    "text": "First of all, let's do depth\nfirst just to recall what that looks like. That is, certainly,\nnot a short path.",
    "start": "910260",
    "end": "918209"
  },
  {
    "text": "So let's try this idea, which,\nby the way, bares the label branch inbound.",
    "start": "918210",
    "end": "924110"
  },
  {
    "text": "Let's try branch inbound\non the same map. ",
    "start": "924110",
    "end": "930226"
  },
  {
    "text": "And there it goes. Each of those little flickers\nis trying another path.",
    "start": "930226",
    "end": "935720"
  },
  {
    "text": "So you can see it's working\nit's guts out to find the shortest path.",
    "start": "935720",
    "end": "941840"
  },
  {
    "start": "941840",
    "end": "952250"
  },
  {
    "text": "It's almost there but it's\nalmost a pathological case.",
    "start": "952250",
    "end": "957870"
  },
  {
    "text": "Or it's almost doing\nBritish Museum. There it's finally found\nthe shortest path.",
    "start": "957870",
    "end": "964620"
  },
  {
    "text": "Now there are some things\nwe can ask about that. But first of all, before I ask\nanything about it, I'd like to get the flow chart up on the\nboard because we're going to",
    "start": "964620",
    "end": "971250"
  },
  {
    "text": "decorate that flow chart,\na little bit, as we go. So the first thing we do\nis initialize queue.",
    "start": "971250",
    "end": "977139"
  },
  {
    "start": "977140",
    "end": "984100"
  },
  {
    "text": "Then we're going to test first\npath on the queue.",
    "start": "984100",
    "end": "991310"
  },
  {
    "text": " Then we might be happy because\nwe might be done.",
    "start": "991310",
    "end": "998650"
  },
  {
    "text": "We might have a shortest\npath to the goal. Actually, that's not\nquite true, is it? We can't really quit until\nevery other path is it.",
    "start": "998650",
    "end": "1008070"
  },
  {
    "text": "Well, that's interesting. ",
    "start": "1008070",
    "end": "1015760"
  },
  {
    "text": "If the first element on the\nqueue gets us all the way to the goal, and we sorted our\nqueue by path length, are we",
    "start": "1015760",
    "end": "1022500"
  },
  {
    "text": "through as soon as that first\nelement on the queue gets us to the goal?",
    "start": "1022500",
    "end": "1029110"
  },
  {
    "text": "Yeah because every other\npath must have been sorted beyond it.",
    "start": "1029111",
    "end": "1034230"
  },
  {
    "text": "And therefore, it can't offer us\na shorter path to the goal. So if the first path is a path\nto the goal we're done.",
    "start": "1034230",
    "end": "1042550"
  },
  {
    "text": "Alas, it usually isn't. So we'll extend first path. ",
    "start": "1042550",
    "end": "1056549"
  },
  {
    "text": "We're going to put all those\nextensions back on the queue, and then we're going\nto sort them. ",
    "start": "1056549",
    "end": "1066030"
  },
  {
    "text": "So that's, pretty much, the\nsame as we did last time. We're always going to put the\nelements back on the queue.",
    "start": "1066030",
    "end": "1075610"
  },
  {
    "text": "We're going to look at the first\nelement the queue and see if it's a winner. If it is we're done. If it's not, we're going\nto extend it.",
    "start": "1075610",
    "end": "1082520"
  },
  {
    "text": "And then go back in here\nand try again. ",
    "start": "1082520",
    "end": "1089710"
  },
  {
    "text": "Well, sort of. But we noted that this did a\nawful lot of work because if",
    "start": "1089710",
    "end": "1095600"
  },
  {
    "text": "we look at those statistics\nup there, it put 1,354",
    "start": "1095600",
    "end": "1100970"
  },
  {
    "text": "paths onto the queue. That's the N queueing part. And then it extended 835,000\npaths that had come to the",
    "start": "1100970",
    "end": "1108690"
  },
  {
    "text": "front of the queue.  Now I'd like to give you an\naside because it's easy to get",
    "start": "1108690",
    "end": "1117590"
  },
  {
    "start": "1112000",
    "end": "1469000"
  },
  {
    "text": "confused about N queueing\nand extending. In all of the searches we did\nlast time, it would have been",
    "start": "1117590",
    "end": "1125110"
  },
  {
    "text": "perfectly reasonable to keep a\nlist of all the paths that we had put onto the queue.",
    "start": "1125110",
    "end": "1131444"
  },
  {
    "text": "An N queueing list. And never add a path to our\nqueue if it terminates in a",
    "start": "1131444",
    "end": "1140539"
  },
  {
    "text": "node that some other path\nterminate in that has already",
    "start": "1140540",
    "end": "1145820"
  },
  {
    "text": "gone to the queue. What I said last time was let\nus keep track of the things",
    "start": "1145820",
    "end": "1151820"
  },
  {
    "text": "that have been extended and\nnot extend them again. So you can either keep track\nof the nodes that have been",
    "start": "1151820",
    "end": "1159830"
  },
  {
    "text": "extended and not extend\nthem again. Or look at the paths with nodes\nthat terminate, and",
    "start": "1159830",
    "end": "1166290"
  },
  {
    "text": "blah, blah, blah and been put on\nthe queue, the queued ones. And not put things back\non the queue again.",
    "start": "1166290",
    "end": "1171380"
  },
  {
    "text": "And I think, last time, I may\nhave put a column in there that said N queued. It should have been extended.",
    "start": "1171380",
    "end": "1179090"
  },
  {
    "text": "Even though N queued worked last\ntime, only extended works this time because we want to\nbe sure that anything we",
    "start": "1179090",
    "end": "1186690"
  },
  {
    "text": "extend is a short path. So the N queued idea doesn't\nwork, at all, for these",
    "start": "1186690",
    "end": "1194370"
  },
  {
    "text": "optimal paths. So now I want to come back over\nhere off the side bar and say that we're keeping track\nof all of the nodes, all of",
    "start": "1194370",
    "end": "1201945"
  },
  {
    "text": "the paths that end in nodes\nunless they have already been",
    "start": "1201945",
    "end": "1207039"
  },
  {
    "text": "extended beyond that\nparticular place. So we need to decorate our\nalgorithm here and say test",
    "start": "1207040",
    "end": "1216590"
  },
  {
    "text": "first path and extend\nthe first path",
    "start": "1216590",
    "end": "1224470"
  },
  {
    "text": "if not already extended.",
    "start": "1224470",
    "end": "1231179"
  },
  {
    "text": " Because you can see that in the\nexample I had, so far, we",
    "start": "1231180",
    "end": "1238740"
  },
  {
    "text": "did that same silliness that\nwe talked about last time. We extended paths that\nwent through A more",
    "start": "1238740",
    "end": "1249030"
  },
  {
    "text": "than once, like so. Would it ever make sense\nto extend this path?",
    "start": "1249030",
    "end": "1255470"
  },
  {
    "text": "No because we've already\nextended a path that got there with less distance.",
    "start": "1255470",
    "end": "1260780"
  },
  {
    "text": "Will it ever make sense\nto extend this path? No because we've already\nextended another path that",
    "start": "1260780",
    "end": "1267460"
  },
  {
    "text": "gets to be by a shorter\ndistance. So if we keep an extended\nlist, we can add that to",
    "start": "1267460",
    "end": "1275040"
  },
  {
    "text": "branch inbound to\nour advantage. So let's see how that would work\non the classroom example.",
    "start": "1275040",
    "end": "1282570"
  },
  {
    "text": "And then we'll do Cambridge. So this is bridge inbound,\nplus an extended list. ",
    "start": "1282570",
    "end": "1293414"
  },
  {
    "text": "And I do mean extended. Not in the N queued list. N queued list won't work here.",
    "start": "1293414",
    "end": "1299600"
  },
  {
    "text": " So let's see, I start off the\nsame way as I did before.",
    "start": "1299600",
    "end": "1305910"
  },
  {
    "text": "S goes to either A or B.\nThat's a length of 3.",
    "start": "1305910",
    "end": "1312200"
  },
  {
    "text": "That's a length of 5. So I extend A. That goes to\neither B or D. But B is as if",
    "start": "1312200",
    "end": "1325100"
  },
  {
    "text": "it wasn't there at all. Oh, sorry. Hang on. ",
    "start": "1325100",
    "end": "1333179"
  },
  {
    "text": "B goes there. And those path lengths\nare 7 and 6. And now I look around on the\nboard, and I say what is the",
    "start": "1333180",
    "end": "1341260"
  },
  {
    "text": "shortest path so far? And it's B. So I extend that\nto get to A and C with path",
    "start": "1341260",
    "end": "1348610"
  },
  {
    "text": "lengths of 9 and 9. And what's the shortest\none next?",
    "start": "1348610",
    "end": "1353820"
  },
  {
    "text": "It's D. And that goes to G.\nAnd the path length is 11. And what's the shortest\none on the board?",
    "start": "1353820",
    "end": "1362639"
  },
  {
    "text": "The one that has to\nbe extended next. That's this one that gets to B.\nBut I've already extended a path that get to B. So I don't,",
    "start": "1362640",
    "end": "1369230"
  },
  {
    "text": "actually, do that extension. So I've saved some work. But I've got to go over here\nand do these two now.",
    "start": "1369230",
    "end": "1376260"
  },
  {
    "text": "But wait. I've already extended B. I've\nalready extended A, so I don't have to do that one either.",
    "start": "1376260",
    "end": "1381930"
  },
  {
    "text": "The only one I have to do is\nthe one that goes to C. And that those then to E with\na path length of 15.",
    "start": "1381930",
    "end": "1387950"
  },
  {
    "text": "And I'm done. So if you compare this one with\na previous one, you can see that there might be vast\nareas of this tree that are",
    "start": "1387950",
    "end": "1395450"
  },
  {
    "text": "pruned away and don't have\nto be examined all. So now, just for the sake of\nillustrating that, I would",
    "start": "1395450",
    "end": "1401860"
  },
  {
    "text": "like to keep track of just\none of those statistics. The number of extensions.",
    "start": "1401860",
    "end": "1407260"
  },
  {
    "text": "So for this particular example,\ncase one, the number of extensions was 835.",
    "start": "1407260",
    "end": "1415330"
  },
  {
    "text": "Why don't you see if you can\nguess to yourself what it would be if I use this concept\nof an extended list.",
    "start": "1415330",
    "end": "1422360"
  },
  {
    "text": "See, I'm not going to extend\nanything I've already extended because it's guaranteed to have\na longer path length then",
    "start": "1422360",
    "end": "1427420"
  },
  {
    "text": "something that already got\nto that same place. So it makes no sense to do it.",
    "start": "1427420",
    "end": "1433789"
  },
  {
    "text": "So let me change the type to\nbranch-and-bound with an extended list.",
    "start": "1433790",
    "end": "1440750"
  },
  {
    "text": "I'm going to turn the speed\ndown a little bit so we can watch it. It might take the rest\nof the hour.",
    "start": "1440750",
    "end": "1445830"
  },
  {
    "text": "Who knows? ",
    "start": "1445830",
    "end": "1453159"
  },
  {
    "text": "Still doing a lot of work. Still examining a\nlot of paths. ",
    "start": "1453160",
    "end": "1462880"
  },
  {
    "text": "Well, look at that.  Instead of 835 extensions\nit only did 38.",
    "start": "1462880",
    "end": "1473200"
  },
  {
    "start": "1469000",
    "end": "1604000"
  },
  {
    "text": "So that's a pretty substantial\nsavings. And you would never not\nwant to do that.",
    "start": "1473200",
    "end": "1479360"
  },
  {
    "text": "So note that that's a layering\non top of branching out. That's not a different\nalgorithm. It's an adjustment improvement\nto the algorithm, and it makes",
    "start": "1479360",
    "end": "1487250"
  },
  {
    "text": "it more efficient.  So this whole thing is\nbased on what I call",
    "start": "1487250",
    "end": "1495490"
  },
  {
    "text": "the dead horse principle. As soon as we figure out that\na path that goes to a",
    "start": "1495490",
    "end": "1500980"
  },
  {
    "text": "particular place can't possibly\nbe the winning path, we get rid of it, and don't\nbother extending it.",
    "start": "1500980",
    "end": "1508830"
  },
  {
    "text": "It's a dead horse principle. But if we look at this example,\nwhat's the shortest",
    "start": "1508830",
    "end": "1518830"
  },
  {
    "text": "possible length of a\npath that's already gone from S to B? ",
    "start": "1518830",
    "end": "1527776"
  },
  {
    "text": "What do you think, Tanya?  Well, first of all, it can't be\nless than 5 because we've",
    "start": "1527776",
    "end": "1534110"
  },
  {
    "text": "already gone that distance. So when I say what's the\nshortest length of any path",
    "start": "1534110",
    "end": "1540300"
  },
  {
    "text": "that there could possibly be\nthat goes from S to D. We know it's at least 5.",
    "start": "1540300",
    "end": "1546419"
  },
  {
    "text": "But can we say something\nmore about it? Especially, when we look at\nthese airline distances, and",
    "start": "1546420",
    "end": "1554140"
  },
  {
    "text": "note that this airline distance\nis 6, and that's a little more than 7, and that's\na little more than 7.",
    "start": "1554140",
    "end": "1561150"
  },
  {
    "text": "So what do you think?  So it's gone from S to B, and\nthe question is what's the",
    "start": "1561150",
    "end": "1567270"
  },
  {
    "text": "shortest path that could\npossibly be that had started",
    "start": "1567270",
    "end": "1573370"
  },
  {
    "text": "out going from S to B?  11 right?",
    "start": "1573370",
    "end": "1579780"
  },
  {
    "text": "Because we can't have a path\nthat's shorter than the airline distance.",
    "start": "1579780",
    "end": "1585629"
  },
  {
    "text": "If there were a straight line\nroad from A to G, its length would be 6. But there isn't.",
    "start": "1585630",
    "end": "1591630"
  },
  {
    "text": "So that gives us a lower bound\non the distance that we have",
    "start": "1591630",
    "end": "1597740"
  },
  {
    "text": "along that path. So we're using the accumulated\ndistance, plus the airline",
    "start": "1597740",
    "end": "1605520"
  },
  {
    "start": "1604000",
    "end": "1664000"
  },
  {
    "text": "distance, to give us a lower\nbound on the path that we've started off on that\ngoes from S to B.",
    "start": "1605520",
    "end": "1613750"
  },
  {
    "text": "Once again, let's solidify a\nlittle bit by simulating the search and seeing how\nit turns out.",
    "start": "1613750",
    "end": "1621320"
  },
  {
    "text": "Not just I did last time, I'm\ngoing to forget that I've got an extended list.",
    "start": "1621320",
    "end": "1626510"
  },
  {
    "text": "I don't want to carry both of\nthose things around with me at the same time. So forget that we've got\nan extended list.",
    "start": "1626510",
    "end": "1632620"
  },
  {
    "text": "We'll bring all those back\ntogether a little later. So we're going to forget\nwhat we just did there.",
    "start": "1632620",
    "end": "1638160"
  },
  {
    "text": "And instead we're just going\nto use this concept of an airline distance and\nsee what happens. ",
    "start": "1638160",
    "end": "1664890"
  },
  {
    "start": "1664000",
    "end": "1874000"
  },
  {
    "text": "As before we start with\na starting node. We have two choices as always. We can go to A or B. And the\naccumulated distance, if we go",
    "start": "1664890",
    "end": "1672160"
  },
  {
    "text": "to A, is 3. And then accumulated distance\nif we go to B is 5.",
    "start": "1672160",
    "end": "1678350"
  },
  {
    "text": "But now we're going to add\nin the airline distances. So the airline distance from A\nto G is a little more than 7,",
    "start": "1678350",
    "end": "1688140"
  },
  {
    "text": "which is 10 plus. The airline distance from\nB to G is exactly 6.",
    "start": "1688140",
    "end": "1696400"
  },
  {
    "text": "So that gives us 11. And following the procedure\nwe've all been using already",
    "start": "1696400",
    "end": "1702070"
  },
  {
    "text": "so far, we're going to extend\nthe path that seems to have the shortest potential. Now it's the shortest potential\ndistance S to G. So",
    "start": "1702070",
    "end": "1710390"
  },
  {
    "text": "that must be this one here. So from A we can go to B\nor D. The accumulated",
    "start": "1710390",
    "end": "1721480"
  },
  {
    "text": "distance S, A, B, is 7.  The airline distance is 6,\nso that's equal to 11.",
    "start": "1721480",
    "end": "1728549"
  },
  {
    "start": "1728550",
    "end": "1733700"
  },
  {
    "text": "Standard arithmetic 13. The distance S, A, D. That is\n6 plus a little more than 7.",
    "start": "1733700",
    "end": "1745280"
  },
  {
    "start": "1745280",
    "end": "1750900"
  },
  {
    "text": "So what's the accumulated\ndistance? S, A, D is 3 plus 3 is 6.",
    "start": "1750900",
    "end": "1758809"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: What? AUDIENCE: The airline distance\nfrom D would be 5.",
    "start": "1758810",
    "end": "1765565"
  },
  {
    "text": "PROFESSOR: Would be 5, right. So airline distance, in this\ncase, is the same as the actual distance.",
    "start": "1765565",
    "end": "1771309"
  },
  {
    "text": "So the accumulated\ndistance is 6. The actual distance is 5. So that's equal to 11.",
    "start": "1771310",
    "end": "1776610"
  },
  {
    "text": " So now I've got two\n11's on the board.",
    "start": "1776610",
    "end": "1782419"
  },
  {
    "text": "And simulating what we'd ask\nyou do on a quiz, we don't know which of those is\ngoing to be better.",
    "start": "1782420",
    "end": "1787520"
  },
  {
    "text": "They've got a tie score. So what we're going to do is\nwe're going to choose the one that's lexically least. So B comes before D. So we'll\nexpand B. And that can go to",
    "start": "1787520",
    "end": "1798260"
  },
  {
    "text": "either A or C. And we have to\ncalculate the best possible",
    "start": "1798260",
    "end": "1805170"
  },
  {
    "text": "distance that goes along\nthose paths. The accumulated distance\nS, B, A. S, B, A is 9.",
    "start": "1805170",
    "end": "1814670"
  },
  {
    "text": "So that's 9 plus 7 plus. That's 16 plus.",
    "start": "1814670",
    "end": "1820700"
  },
  {
    "text": "This has an accumulated\nlead of distance of 9. Also plus 7 plus. Also 16 plus.",
    "start": "1820700",
    "end": "1829059"
  },
  {
    "text": "Well, now let's see. Things are shaping up pretty\nwell because this one has the lowest score so far.",
    "start": "1829060",
    "end": "1837000"
  },
  {
    "text": "We extend that to\nG. And now the accumulated distance is 11.",
    "start": "1837000",
    "end": "1842470"
  },
  {
    "text": "The airline distance\nis 0, so that's 11. And that's smaller than\neverybody else.",
    "start": "1842470",
    "end": "1848840"
  },
  {
    "text": "So we've got. So now compare this one with\nour branch inbound graph.",
    "start": "1848840",
    "end": "1856700"
  },
  {
    "text": "And you see, once again, we've\ndone considerably less work. And that, in many practical\ncases, means that instead of",
    "start": "1856700",
    "end": "1864850"
  },
  {
    "text": "taking more than the remaining\nlifetime of the universe to complete the calculation, it can\nhappen in a few seconds.",
    "start": "1864850",
    "end": "1872760"
  },
  {
    "text": "But let's see how it works\non the example. So I'm not going to use\nthe extended list.",
    "start": "1872760",
    "end": "1878370"
  },
  {
    "start": "1874000",
    "end": "2244000"
  },
  {
    "text": "I'm just going to use this idea\nof using a lower bound on",
    "start": "1878370",
    "end": "1883809"
  },
  {
    "text": "the distance remaining,\nthe airline distance, and see what happens. ",
    "start": "1883810",
    "end": "1920168"
  },
  {
    "text": "So this time, the number\nof extensions is 70. ",
    "start": "1920168",
    "end": "1928880"
  },
  {
    "text": "So it didn't do quite as well\nas working alone as the extended list did\nworking alone.",
    "start": "1928880",
    "end": "1934679"
  },
  {
    "text": "So we immediately conclude that\nthe extended list is more",
    "start": "1934680",
    "end": "1940160"
  },
  {
    "text": "useful than using one of these\nlower bound heuristics. By the way, this is called\nan admissible heuristic.",
    "start": "1940160",
    "end": "1945570"
  },
  {
    "start": "1945570",
    "end": "1953554"
  },
  {
    "text": "If the heuristic estimate is\nguaranteed to be less than the actual distance, that's called\nan admissible heuristic.",
    "start": "1953555",
    "end": "1961110"
  },
  {
    "text": "Admissible because you can use\nit for this kind of purpose. So it looks like the day\nextended list is a more useful",
    "start": "1961110",
    "end": "1971940"
  },
  {
    "text": "idea than the admissible idea. Right? What do you think about\nthat, Brett?",
    "start": "1971940",
    "end": "1978409"
  },
  {
    "text": "Am I hacking? Am I joking? AUDIENCE: I think you're\njudging prematurely. PROFESSOR: Why am I judging\nprematurely?",
    "start": "1978410",
    "end": "1984179"
  },
  {
    "text": "What do you think it\nmight depend on? AUDIENCE: The fact that we're\nusing extensions and the extended list pretty much\nguarantees you can only extend",
    "start": "1984180",
    "end": "1989436"
  },
  {
    "text": "each node once. PROFESSOR: Well, Brett has sad\nsomething unintelligible that",
    "start": "1989436",
    "end": "1995945"
  },
  {
    "text": "I can't think how to repeat. What he meant to say,\nthough, was that-- [LAUGHTER]",
    "start": "1995945",
    "end": "2002360"
  },
  {
    "text": "PROFESSOR: --in these cases,\nit almost always depends on the problem itself. If you change the problem, you\nmay get a different result.",
    "start": "2002360",
    "end": "2009670"
  },
  {
    "text": "So why don't we change the\nproblem and see if we get a different result? So instead of starting on the\nextreme left, let's start in",
    "start": "2009670",
    "end": "2016040"
  },
  {
    "text": "the middle and see\nwhat happens. ",
    "start": "2016040",
    "end": "2022350"
  },
  {
    "text": "So I'll readjust my starting\nposition to be right there. Oops, that's the wrong\nadjustment.",
    "start": "2022350",
    "end": "2028320"
  },
  {
    "start": "2028320",
    "end": "2034130"
  },
  {
    "text": "And we might as well start\nby getting our baseline branch-and-bound without\nanything. ",
    "start": "2034130",
    "end": "2041039"
  },
  {
    "text": "And for that one, maybe, we'll\nspeed it up a little bit. ",
    "start": "2041040",
    "end": "2049070"
  },
  {
    "text": "So that gives us\n57 extensions. It's an easier problem. ",
    "start": "2049070",
    "end": "2058879"
  },
  {
    "text": "So let's try it with the\nadmissible heuristic. ",
    "start": "2058880",
    "end": "2067960"
  },
  {
    "text": "That went too fast. ",
    "start": "2067960",
    "end": "2073919"
  },
  {
    "text": "Wow, still pretty fast. Six extensions. ",
    "start": "2073920",
    "end": "2079382"
  },
  {
    "text": "What do you think this\nnumber's going to be? Closer to six or closer to 57?",
    "start": "2079382",
    "end": "2085989"
  },
  {
    "text": "Better than six? Worse than six? Well, let's think. What we're going to do is we're\ngoing to just not repeat",
    "start": "2085989",
    "end": "2094099"
  },
  {
    "text": "any movements through\nthe same node again. But it's not going to\ndo something very",
    "start": "2094100",
    "end": "2099360"
  },
  {
    "text": "important for us. It's not going to keep us out\nof the left side because it has no idea of the remaining\nairline distance to the goal.",
    "start": "2099360",
    "end": "2108930"
  },
  {
    "text": "So let's see if that's\ntrue It sure is.",
    "start": "2108930",
    "end": "2119380"
  },
  {
    "text": "Look at that. It is, foolishly, spending\na lot of its' time doing something we would never do. Namely, looking over there\non the left side.",
    "start": "2119380",
    "end": "2125740"
  },
  {
    "start": "2125740",
    "end": "2131510"
  },
  {
    "text": "So this time, the number\nof extensions is 35.  So in case two, the admissible\nheuristic",
    "start": "2131510",
    "end": "2138860"
  },
  {
    "text": "does very much better. In case one, the extension\nthing does much better.",
    "start": "2138860",
    "end": "2143920"
  },
  {
    "text": "But wait a minute, would we ever\nnot want to use both at the same time? ",
    "start": "2143920",
    "end": "2150570"
  },
  {
    "text": "We wouldn't want to use just\none of these, right? They both have the possibility\nof doing us a lot of good.",
    "start": "2150570",
    "end": "2157230"
  },
  {
    "text": "So maybe if we put them in\nharness together, we'll get something that's even better. And when we do that--",
    "start": "2157230",
    "end": "2164349"
  },
  {
    "text": "see here, the extended list\nis a layer on top of branch and bound. The admissible heuristic\nis another layer on top",
    "start": "2164350",
    "end": "2171200"
  },
  {
    "text": "of branch and bound. If we put those together, we get\nsomething called A star.",
    "start": "2171200",
    "end": "2177490"
  },
  {
    "text": "So A star is just branch and\nbound, plus an extended list, plus and admissible heuristic.",
    "start": "2177490",
    "end": "2184290"
  },
  {
    "text": "So let's go back to our original\nproblem and try A star on that. ",
    "start": "2184290",
    "end": "2198760"
  },
  {
    "text": "We're running this at a pretty\nslow speed because we're expecting it to be a lot more\nefficient than the original branch and bound.",
    "start": "2198760",
    "end": "2203890"
  },
  {
    "text": "And sure enough it is. The number of extensions\nis 27. So look at that.",
    "start": "2203890",
    "end": "2209910"
  },
  {
    "text": "A lot better than either of\nthose working independently. Now I can stick the thing in\nthe center and see what happens then.",
    "start": "2209910",
    "end": "2216000"
  },
  {
    "start": "2216000",
    "end": "2225450"
  },
  {
    "text": "So in this particular case,\nthe extended list didn't, actually, help us because our\nadmissible heuristic was",
    "start": "2225450",
    "end": "2232090"
  },
  {
    "text": "channeling us so tightly\ntoward the goal it didn't matter. So it all depends on the nature\nof the space that",
    "start": "2232090",
    "end": "2239470"
  },
  {
    "text": "you're trying to explore. By the way, you know how\nthe whole works, right?",
    "start": "2239470",
    "end": "2246869"
  },
  {
    "text": "So what you want to do is\nyou want to extend the first path and sort.",
    "start": "2246870",
    "end": "2252119"
  },
  {
    "text": "But not just by accumulated\ndistance. Sort by accumulated distance\nplus admissible heuristic.",
    "start": "2252120",
    "end": "2265550"
  },
  {
    "start": "2265550",
    "end": "2273010"
  },
  {
    "text": "But what are the\ntheoreticians? You must be complaining. Sort's expensive.",
    "start": "2273010",
    "end": "2278440"
  },
  {
    "text": "Do we actually need to sort? ",
    "start": "2278440",
    "end": "2283470"
  },
  {
    "text": "No, we don't actually\nneed to sort. What do we to do? AUDIENCE: We just need to keep\ntrack of what's the minimum.",
    "start": "2283470",
    "end": "2289140"
  },
  {
    "text": "PROFESSOR: We just need\nto keep track of what's the minimum. So we don't need to, actually,\ndo that sort. That's an unnecessary\ncomputation.",
    "start": "2289141",
    "end": "2296670"
  },
  {
    "text": "So instead, we can test, not\nthe first path but the shortest path.",
    "start": "2296670",
    "end": "2302020"
  },
  {
    "start": "2302020",
    "end": "2307990"
  },
  {
    "text": "And now you have it. Now you have the whole\nof A star. And now you can go home, but I\ndon't think you should because",
    "start": "2307990",
    "end": "2316650"
  },
  {
    "text": "I'm about to show you that this\nidea of admissibility,",
    "start": "2316650",
    "end": "2322089"
  },
  {
    "text": "actually, leads to certain screw\ncases that we're very fond of asking about on exams.",
    "start": "2322090",
    "end": "2328339"
  },
  {
    "text": "So it turns out that the\nadmissible heuristic, in certain circumstances, could\nget you into trouble.",
    "start": "2328340",
    "end": "2333400"
  },
  {
    "text": "It doesn't look like it could\nbecause, logically, nothing I've said seems strange\nor questionable.",
    "start": "2333400",
    "end": "2340480"
  },
  {
    "text": "But that's because I've been\nworking with a map. And it turns out that if you\nwork with a map then",
    "start": "2340480",
    "end": "2346099"
  },
  {
    "text": "admissibility is a perfectly\nsound way of doing an optimal search.",
    "start": "2346100",
    "end": "2351710"
  },
  {
    "text": "But, Travis, is search\njust about maps? No, search is not\njust about maps.",
    "start": "2351710",
    "end": "2357130"
  },
  {
    "text": "So we may have non-Euclidean\narrangements that will cause us trouble.",
    "start": "2357130",
    "end": "2362710"
  },
  {
    "text": "So I'd like to illustrate that\nwith the following example. ",
    "start": "2362710",
    "end": "2372710"
  },
  {
    "text": "It's not going to be a large\nmap or a large graph. S, then go up here to A or\ndown here to B. Then they",
    "start": "2372710",
    "end": "2383866"
  },
  {
    "text": "merge at C. And then they go\nout here to the goal, G.",
    "start": "2383866",
    "end": "2391650"
  },
  {
    "text": "And the actual distances\nare 1, 1, 1, and 10.",
    "start": "2391650",
    "end": "2398809"
  },
  {
    "text": "And over here, we'll\nmake that 100. So it's a kind of oddly\nconstructed map, but it's",
    "start": "2398810",
    "end": "2405339"
  },
  {
    "text": "there because we need a\npathological case to illustrate the idea. Now that's the actual\ndistances.",
    "start": "2405340",
    "end": "2411590"
  },
  {
    "text": "And if we did branch and down\nwith an extended list, everything would\nwork just fine.",
    "start": "2411590",
    "end": "2417250"
  },
  {
    "text": "But we're not. We're going to use an admissible\nheuristic. And we're going to say that\nthis guy has an estimated",
    "start": "2417250",
    "end": "2422760"
  },
  {
    "text": "distance to the goal of 100. This guy is 0.",
    "start": "2422760",
    "end": "2427830"
  },
  {
    "text": "And this guy is 0. Now, 0 is always an\nunderestimate of the actual",
    "start": "2427830",
    "end": "2433500"
  },
  {
    "text": "distance to the goal, right? So I'm always free to use 0. Is that 100 OK?",
    "start": "2433500",
    "end": "2439349"
  },
  {
    "text": "Yeah because the actual\ndistances is 101, so it's less than that the actual distance.",
    "start": "2439350",
    "end": "2444650"
  },
  {
    "text": "So it's OK as an admissible\nheuristic. So these numbers that I put up\nhere, together, constitute an",
    "start": "2444650",
    "end": "2453570"
  },
  {
    "text": "admissible heuristic set of\nestimates to the goal. So now, let's just simulate A\nstar and see what happens.",
    "start": "2453570",
    "end": "2466370"
  },
  {
    "start": "2457000",
    "end": "2916000"
  },
  {
    "text": "So first of all, you start with\nS, and that can either go to A or B. The actual distance\nis 1 plus an estimate on the",
    "start": "2466370",
    "end": "2480130"
  },
  {
    "text": "remaining distance. That gives us 100 plus 100.",
    "start": "2480130",
    "end": "2485410"
  },
  {
    "text": "That's equal to 101. If we go to B instead, the\nactual distance is 1 plus the",
    "start": "2485410",
    "end": "2492160"
  },
  {
    "text": "heuristic's distance is 0,\nso that's equal to 1. OK, good. So now we know that we\nalways extend the",
    "start": "2492160",
    "end": "2499140"
  },
  {
    "text": "shortest path so far. Did I goof this, or are\nyou asking a question? AUDIENCE: [INAUDIBLE]?",
    "start": "2499140",
    "end": "2505270"
  },
  {
    "text": " PROFESSOR: Yeah, when I say\nactual, it's the actual",
    "start": "2505270",
    "end": "2511730"
  },
  {
    "text": "distance that you've traveled. AUDIENCE: But that's\n[INAUDIBLE]. PROFESSOR: So wait a second.",
    "start": "2511730",
    "end": "2517250"
  },
  {
    "text": "If I go from S to A,\nthe actual distance I've traveled is 1. AUDIENCE: I meant like,\ndoes the map--",
    "start": "2517250",
    "end": "2523282"
  },
  {
    "text": "PROFESSOR: So now I'm taking\nthe sum of the actual distance, plus the estimated\ndistance to go.",
    "start": "2523282",
    "end": "2528735"
  },
  {
    "text": "AUDIENCE: All right. I'm just wondering if the\noriginal map has to be [INAUDIBLE]. PROFESSOR: See this\nis not a map.",
    "start": "2528735",
    "end": "2537270"
  },
  {
    "text": "She was asking if the map has to\nbe geometrically accurate. See, this could be a model of\nsomething that's not a map.",
    "start": "2537270",
    "end": "2545480"
  },
  {
    "text": "And so, I'm free to put any\nnumbers on those links that I want, including estimates, as\nlong as they're underestimates",
    "start": "2545480",
    "end": "2551520"
  },
  {
    "text": "of the distance along\nthe lengths. So this tells me that my\nestimated distance",
    "start": "2551520",
    "end": "2558150"
  },
  {
    "text": "here, so far, is 1. So I'll, surely, go down here\nto C. And if I go to C, then",
    "start": "2558150",
    "end": "2565530"
  },
  {
    "text": "my accumulated distance is 11.",
    "start": "2565530",
    "end": "2570890"
  },
  {
    "text": "And my estimate of the remaining\ndistance is 0. ",
    "start": "2570890",
    "end": "2576140"
  },
  {
    "text": "So that's a total of 11.  So now I'm following my\nheuristic again and saying",
    "start": "2576140",
    "end": "2582270"
  },
  {
    "text": "what's the shortest path on\na base of the accumulated distance plus the estimated\ndistance?",
    "start": "2582270",
    "end": "2590180"
  },
  {
    "text": "Here, the accumulated\ndistance plus the estimated distance is 101. Here, it's only 11.",
    "start": "2590180",
    "end": "2595600"
  },
  {
    "text": "So plainly, I extend this guy. And that gets me to the goal.",
    "start": "2595600",
    "end": "2601299"
  },
  {
    "text": "And the total accumulated\ndistance is now 111 plus 0",
    "start": "2601300",
    "end": "2607980"
  },
  {
    "text": "equals 111. ",
    "start": "2607980",
    "end": "2615130"
  },
  {
    "text": "And that's not the shortest\npath, but wait. I still have to do my\nchecking, right? I have to extend A. I when I\nextend A, I get to B. And now,",
    "start": "2615130",
    "end": "2625900"
  },
  {
    "text": "when I get to B that\nway, my accumulated distance is 2 plus my--",
    "start": "2625900",
    "end": "2633230"
  },
  {
    "text": "oh, sorry. S, A, C. My accumulate distance it 2.",
    "start": "2633230",
    "end": "2639170"
  },
  {
    "text": "My estimated distance is 0,\nso that's equal to 2. So I'm OK because I'm still\ngoing to extend",
    "start": "2639170",
    "end": "2645150"
  },
  {
    "text": "to this guy, right? Wrong. I've already extended\nthat guy. ",
    "start": "2645150",
    "end": "2652220"
  },
  {
    "text": "So I'm hosed. I won't find the shortest\npath because I'm going to stop there.",
    "start": "2652220",
    "end": "2657740"
  },
  {
    "text": "And I'm going to stop there\nbecause this is an admissible heuristic and that's not good\nenough unless it's a map.",
    "start": "2657740",
    "end": "2664450"
  },
  {
    "text": "It's not good enough for this\nparticular case because this is not geometric. This cannot be done as\na map on a plane.",
    "start": "2664450",
    "end": "2672900"
  },
  {
    "text": "So that's a situation where what\nI've talked to you about, so far, works with\nbranch-and-bound.",
    "start": "2672900",
    "end": "2679730"
  },
  {
    "text": "Works with branch-and -bound\nplus an extended list. But doesn't work when we added\nan admissible heuristic.",
    "start": "2679730",
    "end": "2685210"
  },
  {
    "text": "So if we're going to do this in\ngeneral, we need something stronger than admissibility,\nwhich works only on maps.",
    "start": "2685210",
    "end": "2691480"
  },
  {
    "text": "And so the flourish that I'll\ntell you about here in the last few seconds of today's\nlecture is to add a refinement",
    "start": "2691480",
    "end": "2710780"
  },
  {
    "text": "as follows. So far, we've got\nadmissibility. ",
    "start": "2710780",
    "end": "2720020"
  },
  {
    "text": "And if we want to write this\ndown in a kind of mathematical notation, we could say that\nit's admissible if the",
    "start": "2720020",
    "end": "2725680"
  },
  {
    "text": "estimated distance between any\nnode X and the goal is less",
    "start": "2725680",
    "end": "2731500"
  },
  {
    "text": "than or equal to the\nactual distance between X and the goal.",
    "start": "2731500",
    "end": "2738490"
  },
  {
    "text": "That's the definition\nof admissible. As long as heuristic does\nthat it's admissible. And A star works\nif it's a map.",
    "start": "2738490",
    "end": "2746250"
  },
  {
    "text": "But for that kind of situation\nwhere it's not a map we need a stronger condition, which\nis called consistency.",
    "start": "2746250",
    "end": "2751445"
  },
  {
    "text": " And what that says is that the\ndistance between X and the",
    "start": "2751445",
    "end": "2759100"
  },
  {
    "text": "goal minus the distance between\nsome other node in the",
    "start": "2759100",
    "end": "2764940"
  },
  {
    "text": "goal, Y. Take the absolute\nvalue of that.",
    "start": "2764940",
    "end": "2771010"
  },
  {
    "text": "That has to be less than or\nequal to the actual distance between X and Y.",
    "start": "2771010",
    "end": "2778700"
  },
  {
    "text": "So this heuristic satisfy the\nconsistency condition?",
    "start": "2778700",
    "end": "2784280"
  },
  {
    "text": "Well, let's see. Here the guess is 100. Here it's 0. So the absolute difference\nis 100.",
    "start": "2784280",
    "end": "2791589"
  },
  {
    "text": "But the actual distance\nis only 2. So it satisfies admissibility,\nbut it doesn't satisfy",
    "start": "2791590",
    "end": "2798170"
  },
  {
    "text": "consistency. And it doesn't work. So you can almost be guaranteed\nwe'll give you a situation where if you\nuse an admissible",
    "start": "2798170",
    "end": "2807829"
  },
  {
    "text": "heuristic you'll lose. And if you use a consistent\nheuristic, you'll still win.",
    "start": "2807830",
    "end": "2814290"
  },
  {
    "text": " So how can we bring this\nback into the fold?",
    "start": "2814290",
    "end": "2820570"
  },
  {
    "text": "Well, we can't use\nthat heuristic. It's no good. But if this heuristic estimate\nof the goal were 2, then we'd",
    "start": "2820570",
    "end": "2829690"
  },
  {
    "text": "be OK because then it would\nstill be admissible.",
    "start": "2829690",
    "end": "2835099"
  },
  {
    "text": "But it would also\nbe consistent. So the bottom line is that you\nnow know something you didn't",
    "start": "2835100",
    "end": "2840565"
  },
  {
    "text": "know when you started out\ntwo lectures ago. You now know how MapQuest and\nall of its' descendents work.",
    "start": "2840565",
    "end": "2848450"
  },
  {
    "text": "Now you can find an optimal\npath, as well as a heuristically good path. You see that if you don't do\nanything other than branch and",
    "start": "2848450",
    "end": "2854795"
  },
  {
    "text": "bound it can be extremely\nexpensive. And you can even invent\npathological cases where it's exponential and the distance\nto the goal.",
    "start": "2854795",
    "end": "2865890"
  },
  {
    "text": "So because it can be so\ncomputationally horrible, you want to use every advantage\nyou can, which, generally,",
    "start": "2865890",
    "end": "2871359"
  },
  {
    "text": "involves using an\nextended list. As well as-- no laptops, please.",
    "start": "2871360",
    "end": "2876870"
  },
  {
    "text": "It still holds. No smoking, no drinking,\nand no laptops. ",
    "start": "2876870",
    "end": "2884160"
  },
  {
    "text": "So you're going to use all\nthe muscles you can. And those muscles include using\nan extended list and an",
    "start": "2884160",
    "end": "2891180"
  },
  {
    "text": "admissible or consistent\nheuristic, depending on the circumstances.",
    "start": "2891180",
    "end": "2896349"
  },
  {
    "text": "And so, I think we'll conclude\nthere since our time is up. And Elliot, you can ask a\nquestion after class.",
    "start": "2896350",
    "end": "2901589"
  },
  {
    "text": "Why don't you come up\nand ask it now? ",
    "start": "2901590",
    "end": "2916727"
  }
]