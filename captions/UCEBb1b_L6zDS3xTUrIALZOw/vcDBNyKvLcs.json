[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "7410"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation or view\nadditional materials from",
    "start": "7410",
    "end": "13960"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at ocw.mit.edu.",
    "start": "13960",
    "end": "20190"
  },
  {
    "text": " PROFESSOR: So hello.",
    "start": "20190",
    "end": "25620"
  },
  {
    "text": " Today I want to talk about, and\nI want to finish talking",
    "start": "25620",
    "end": "31380"
  },
  {
    "text": "about, search algorithms.  So last time we started to think\nabout a framework within",
    "start": "31380",
    "end": "38710"
  },
  {
    "text": "which to think about search and\nthe important thing was to figure out a way to be\nsystematic about it.",
    "start": "38710",
    "end": "45350"
  },
  {
    "text": "So we figured out a way to\norganize the way we think about searching by\nway of a tree.",
    "start": "45350",
    "end": "51399"
  },
  {
    "text": "Put all the possible places\nwhere we could be in the search, consider all the\npossible actions that we could",
    "start": "51400",
    "end": "58380"
  },
  {
    "text": "take, so if we started it at\nA, there are two different actions we could've taken, we\ncould have gone to B or D",
    "start": "58380",
    "end": "63980"
  },
  {
    "text": "Think of the actions as the\nedges of the graph and then think about where we land.",
    "start": "63980",
    "end": "72100"
  },
  {
    "text": "Then, by way of that graph,\nthink about the shortest path to the goal.",
    "start": "72100",
    "end": "77990"
  },
  {
    "text": "So that was the idea and the big\noutcome was order matters.",
    "start": "77990",
    "end": "83689"
  },
  {
    "text": "So if we were to construct an\nagenda, which is the list of",
    "start": "83690",
    "end": "89030"
  },
  {
    "text": "nodes that we are currently\nconsidering, if we started at A, we would start by putting\nA on the agenda.",
    "start": "89030",
    "end": "97659"
  },
  {
    "text": "Then we would pop A out of the\nagenda and replace it with its children, its children\nare AB and AD.",
    "start": "97660",
    "end": "105240"
  },
  {
    "text": "If the algorithm was replaced,\nthe first node in the agenda by the children, the\nfirst node is AB.",
    "start": "105240",
    "end": "111620"
  },
  {
    "text": "So then we would pop AB and\nreplace it with its children, AB has children ACE, etc.",
    "start": "111620",
    "end": "117490"
  },
  {
    "text": " And the result would be\nsomething that we call a depth",
    "start": "117490",
    "end": "124350"
  },
  {
    "text": "first search, because what's\nhappening is we're following line lines deeply before\nwe look crosswise.",
    "start": "124350",
    "end": "134400"
  },
  {
    "text": "And there's a million varieties\nof this that you could think of. You would get the same kind of\nalgorithm if you replaced the",
    "start": "134400",
    "end": "140010"
  },
  {
    "text": "last node by its children. Then you would start with A,\nreplace it by its children,",
    "start": "140010",
    "end": "146209"
  },
  {
    "text": "which is still B,D -- but now expand D in terms\nof its children.",
    "start": "146210",
    "end": "152900"
  },
  {
    "text": "Then you'd take the last trial,\nexpand it and we would get another depth search.",
    "start": "152900",
    "end": "159299"
  },
  {
    "text": "So the idea is whatever order\nyou choose affects the solution that you find.",
    "start": "159300",
    "end": "166210"
  },
  {
    "text": "Generally, we're interested in\nfinding a search that locates the best, shortest path, and so\na good method is to remove",
    "start": "166210",
    "end": "176820"
  },
  {
    "text": "the first node from the\nagenda and add the children to the end. That's a cube-based ordering\nwhere the first out",
    "start": "176820",
    "end": "187890"
  },
  {
    "text": "is the first in. Then if you imagine starting\nat A, replacing it by its",
    "start": "187890",
    "end": "193599"
  },
  {
    "text": "children, B,D, take the first\nguy out-- that's AB--",
    "start": "193600",
    "end": "198680"
  },
  {
    "text": "consider its children and put\nthem at the end of the list. Then we go back and expand AD\nbefore we think about the",
    "start": "198680",
    "end": "206930"
  },
  {
    "text": "children of AB and so the\nresult-- if you just follow the red up here--",
    "start": "206930",
    "end": "212930"
  },
  {
    "text": "the result of that search is\nwhat we call breadth first. So we systematically propagate\ndown the search tree looking",
    "start": "212930",
    "end": "219960"
  },
  {
    "text": "at short paths first. So that's the idea, the idea\nis search is easy, you",
    "start": "219960",
    "end": "225459"
  },
  {
    "text": "organize it around one of\nthese graphs and just",
    "start": "225460",
    "end": "231130"
  },
  {
    "text": "systematically run through the\nsearch by keeping track of what we call the agenda, the\nnodes under consideration, and",
    "start": "231130",
    "end": "237290"
  },
  {
    "text": "the only trick is that\norder matters. We found two useful orders last\ntime, first in, first out",
    "start": "237290",
    "end": "246270"
  },
  {
    "text": "and last in, first out, one of\nthose giving depth first, which is generally\nnot a good idea.",
    "start": "246270",
    "end": "251750"
  },
  {
    "text": "The other giving breadth first,\nwhich is generally a much better idea. Today what I want to do is\ngeneralize that structure to",
    "start": "251750",
    "end": "257959"
  },
  {
    "text": "take into account a much more\nflexible group of problems. That'll give rise to something\nwe call uniform cost search",
    "start": "257959",
    "end": "266930"
  },
  {
    "text": "and the other thing that\nI want to think about is, again, the order. By thinking about the order, we\ncan drastically improve the",
    "start": "266930",
    "end": "274120"
  },
  {
    "text": "efficiency of a search and\nthat idea gives rise to something that we'll\ncall heuristics.",
    "start": "274120",
    "end": "282099"
  },
  {
    "text": "So the idea then that I want to\nlook at first in terms of",
    "start": "282100",
    "end": "288740"
  },
  {
    "text": "uniform cost search is the idea\nthat so far, we've only looked at problems where\nthe cost of each",
    "start": "288740",
    "end": "296580"
  },
  {
    "text": "child is the same. We were only looking at how many\nchildren in total, how",
    "start": "296580",
    "end": "306280"
  },
  {
    "text": "many generations did we have to\ngo through to get from the starting point to the goal.",
    "start": "306280",
    "end": "313650"
  },
  {
    "text": "That's an important class of\nproblems, but it's by no means the only important class of\nproblems and in fact, the most",
    "start": "313650",
    "end": "319180"
  },
  {
    "text": "trivial problems you can think\nof don't fall into that class. So for example, imagine that\nwhat we were doing, so I",
    "start": "319180",
    "end": "325169"
  },
  {
    "text": "motivated the entire problem\nlast time in terms of searching for a path on\na Manhattan Grid.",
    "start": "325170",
    "end": "331319"
  },
  {
    "text": "So if I wanted to go from A to\nI, where all the distances are equal, then minimizing the\nnumber of generations,",
    "start": "331320",
    "end": "340410"
  },
  {
    "text": "minimizing the number of\nintersections that I go through, will give rise\nto the best search. However, imagine that\none particular node",
    "start": "340410",
    "end": "348570"
  },
  {
    "text": "is way off the map. Then the number of generations\nthat I go through is obviously",
    "start": "348570",
    "end": "355000"
  },
  {
    "text": "not the right answer because\nthere's a penalty for taking a path that goes through C because\nthe distance between B",
    "start": "355000",
    "end": "362060"
  },
  {
    "text": "and C is so much bigger than\nthe distance, for example, from D to G.",
    "start": "362060",
    "end": "368050"
  },
  {
    "text": "So the first thing that I want\nto look at is how do we incorporate that kind\nof new information into the search algorithm?",
    "start": "368050",
    "end": "375189"
  },
  {
    "text": "So before I do that,\nthink about how the breadth-first search--",
    "start": "375190",
    "end": "381210"
  },
  {
    "text": "the thing we found last time\nthat was the best-- breadth-first search with\ndynamic programming -- think about how it would\napproach the problem and think",
    "start": "381210",
    "end": "388930"
  },
  {
    "text": "about as we go through step by\nstep, what is it doing wrong? OK? So I'm going to go through\nan algorithm that is",
    "start": "388930",
    "end": "395409"
  },
  {
    "text": "known not to work -- with the idea that you're\nsupposed to identify as I'm",
    "start": "395410",
    "end": "400660"
  },
  {
    "text": "doing that what step\nwas wrong. So imagine that I'm doing this\nand then I'm going to compare",
    "start": "400660",
    "end": "408970"
  },
  {
    "text": "it in a moment to C\nbeing off the map.  So if I do this problem with\ndynamic programming, I have to",
    "start": "408970",
    "end": "418490"
  },
  {
    "text": "keep track of how many nodes I\nalready visited and I have to keep track of all the nodes\nunder consideration.",
    "start": "418490",
    "end": "425270"
  },
  {
    "text": "The nodes under consideration is\nwhat we call the agenda and I will call the list of nodes\nthat we're keeping track of",
    "start": "425270",
    "end": "431730"
  },
  {
    "text": "for dynamic programming, I'll\ncall that the visited list because we'll add nodes\nto the list.",
    "start": "431730",
    "end": "437240"
  },
  {
    "text": "We'll add states to the\nlist as we visit them. So we start out the algorithm\nwith node A being on the",
    "start": "437240",
    "end": "444820"
  },
  {
    "text": "agenda, we're trying to go to\nnode I. And by the time I've",
    "start": "444820",
    "end": "450470"
  },
  {
    "text": "started, I've already visited\nA. So the starting point is that the visited list has one\nelement in at A, the agenda",
    "start": "450470",
    "end": "456980"
  },
  {
    "text": "has one element in it, A. So the\nalgorithm is going to be",
    "start": "456980",
    "end": "462240"
  },
  {
    "text": "pop the first guy out of the\nagenda and add the children to the end, paying attention\nto the visited list.",
    "start": "462240",
    "end": "470520"
  },
  {
    "text": "So pop A out of the agenda, the\nchildren of A are B and D.",
    "start": "470520",
    "end": "475970"
  },
  {
    "text": "As I visit them, they get added\nto visited list, B and D. So I pop the first person\nout, that's AB.",
    "start": "475970",
    "end": "487460"
  },
  {
    "text": "Then I want to think about the\nchildren of AB, that's ACE. A is already visited, so I don't\nneed to add that again,",
    "start": "487460",
    "end": "496310"
  },
  {
    "text": "but C and E are not, so I add\nthem and add them to the visited last. ",
    "start": "496310",
    "end": "503250"
  },
  {
    "text": "Then I pop AD out, well\nthe children are AEG.",
    "start": "503250",
    "end": "509230"
  },
  {
    "text": "A and E are in the list already,\nG is not, so I end up adding G to the list.",
    "start": "509230",
    "end": "515099"
  },
  {
    "text": " Next is to pop out C. The\nchildren of C are B and F. B",
    "start": "515100",
    "end": "523460"
  },
  {
    "text": "was in the list, F was not\nso I add the trial that has F at the end. ",
    "start": "523460",
    "end": "531000"
  },
  {
    "text": "Then the next one is E.\nE has children BDFH.",
    "start": "531000",
    "end": "536070"
  },
  {
    "text": "B,D,F, the only new one is H,\nthen G. Take G out, the",
    "start": "536070",
    "end": "545930"
  },
  {
    "text": "children of G are D and H but\nthey're already in a visited list, so I don't need\nto worry about them. ",
    "start": "545930",
    "end": "553130"
  },
  {
    "text": "Then A,B,C,F, so F is this guy,\nC,E,I. CE I is not in the",
    "start": "553130",
    "end": "560850"
  },
  {
    "text": "list, and that's my answer. ",
    "start": "560850",
    "end": "566842"
  },
  {
    "text": "Yes? AUDIENCE: [UNINTELLIGIBLE]\nonce more, then you get",
    "start": "566842",
    "end": "572686"
  },
  {
    "text": "another path that's\nequally short. So why is that not the\ncorrect answer? ",
    "start": "572686",
    "end": "579009"
  },
  {
    "text": "PROFESSOR: A slightly different\nalgorithm might give me that solution.  All that I'm tracing here, I'm\ntrying to be consistent with",
    "start": "579010",
    "end": "587079"
  },
  {
    "text": "the algorithm that we\ndiscussed last time. But that's a very good point.",
    "start": "587080",
    "end": "592350"
  },
  {
    "text": "So the breadth-first search with\ndynamic programming is guaranteed to give\nyou a solution",
    "start": "592350",
    "end": "599510"
  },
  {
    "text": "that has minimum length. It's not guaranteed to give you\na particular solution of",
    "start": "599510",
    "end": "607040"
  },
  {
    "text": "minimum length. So when there exists multiple\nsolutions with the same length, this search algorithm\nmight to give you any of them,",
    "start": "607040",
    "end": "614230"
  },
  {
    "text": "and that's an important\nthing to keep in mind. ",
    "start": "614230",
    "end": "620130"
  },
  {
    "text": "So with regard to the problem,\nI'm trying to think ahead. I'm trying to think ahead to\nwhere this C is off the map,",
    "start": "620130",
    "end": "625899"
  },
  {
    "text": "it's over here someplace.  So what I want to do is stop\nthinking about how many hops",
    "start": "625900",
    "end": "633730"
  },
  {
    "text": "there were and start\nthinking about how many miles there are.",
    "start": "633730",
    "end": "639330"
  },
  {
    "text": "The first thing I want you to\nnotice is that this search pattern that we did created\na visitation list.",
    "start": "639330",
    "end": "649500"
  },
  {
    "text": "We visited the states\nin the order of increasing number of hops.",
    "start": "649500",
    "end": "655400"
  },
  {
    "text": "That's obviously a good thing. If we can always keep in the\nagenda the smallest number of",
    "start": "655400",
    "end": "661889"
  },
  {
    "text": "hops to the next place, and if\nwe faithfully visit states",
    "start": "661890",
    "end": "667570"
  },
  {
    "text": "starting at the minimum number\nand proceeding up, so we started with A, there's\nno hops in getting to",
    "start": "667570",
    "end": "673440"
  },
  {
    "text": "A, so that's 0. In going from A to\nB, there's 1 hop.",
    "start": "673440",
    "end": "678930"
  },
  {
    "text": "In going from A to\nD there's 1 hop. In going from A to B to C,\nABC, there's 2 hops.",
    "start": "678930",
    "end": "684444"
  },
  {
    "text": " So what the algorithm that\nwe described last time--",
    "start": "684445",
    "end": "691050"
  },
  {
    "text": "breadth-first with than dynamic\nprogramming does-- is it visits the states\nin the order of",
    "start": "691050",
    "end": "697150"
  },
  {
    "text": "increasing number of hops. That's obviously a good thing. OK so what's my next slide?",
    "start": "697150",
    "end": "704890"
  },
  {
    "text": "I want to think about\nC being off the map. So what I'd like to do is think\nabout what order would",
    "start": "704890",
    "end": "713930"
  },
  {
    "text": "this algorithm visit\nnumber of miles? So If I think about replacing\nthe metric in the bottom with",
    "start": "713930",
    "end": "723580"
  },
  {
    "text": "the number of miles, whenever\nthe different actions that can occur incur different costs.",
    "start": "723580",
    "end": "732150"
  },
  {
    "text": "Think about what I'm saying. So I'm saying that if I were\nat B and I think about my children ACE, which action I\ntake, go from B to A or go",
    "start": "732150",
    "end": "743280"
  },
  {
    "text": "from B to C are go from B to A,\nwhich action I take incurs different cost.",
    "start": "743280",
    "end": "751010"
  },
  {
    "text": "So what I want to do now is\nthink about, change the focus from thinking about how many\nhops is it to thinking about",
    "start": "751010",
    "end": "758070"
  },
  {
    "text": "how many miles is it. So now, if I replace\nthe metric--",
    "start": "758070",
    "end": "763930"
  },
  {
    "text": "so over here, the metric was\nhow many hops, replace how many hops with how\nmany miles--",
    "start": "763930",
    "end": "771050"
  },
  {
    "text": "and what you see is that the\nalgorithm is not picking up. It's not visiting the\nstates in order of",
    "start": "771050",
    "end": "779930"
  },
  {
    "text": "increasing path length. That's what's wrong. So what we'd like to do is\nmodify the algorithm somehow",
    "start": "779930",
    "end": "789890"
  },
  {
    "text": "so that it proceeds through the\npaths shortest to longest.",
    "start": "789890",
    "end": "796640"
  },
  {
    "text": "So that's the goal. And that's pretty easy to do. The first thing we have to do\nis put that new information",
    "start": "796640",
    "end": "805970"
  },
  {
    "text": "somewhere, and I've already\nalluded to the fact that the way to think about the new\ninformation is that it's",
    "start": "805970",
    "end": "812440"
  },
  {
    "text": "associated with actions. It's not associated\nwith states.",
    "start": "812440",
    "end": "817529"
  },
  {
    "text": "States are where we go to in the\ndiagram, like state E. The",
    "start": "817530",
    "end": "825250"
  },
  {
    "text": "extra cost is not summarized in\nthe state, the extra cost is summarized in the exact\npath that we took.",
    "start": "825250",
    "end": "833880"
  },
  {
    "text": "And the way we'll think about\nthat is incrementally. So we create the past by doing\nactions and each action has a",
    "start": "833880",
    "end": "841750"
  },
  {
    "text": "different cost. So the first thing we do is\nassociate this additional cost with the actions.",
    "start": "841750",
    "end": "848880"
  },
  {
    "text": "Then we are looking for a search\nprocedure that will",
    "start": "848880",
    "end": "854110"
  },
  {
    "text": "enumerate the paths in the\norder of path cost. And the way to do that is to\nthink about the basic ordering",
    "start": "854110",
    "end": "861400"
  },
  {
    "text": "schemes that we had before,\nwhich were the stack, last in,",
    "start": "861400",
    "end": "867340"
  },
  {
    "text": "first out versus the queue,\nfirst in, first out.",
    "start": "867340",
    "end": "872390"
  },
  {
    "text": "What we'll do is we'll make a\ntrivial modification to the idea of a queue and we'll call\nit a priority queue.",
    "start": "872390",
    "end": "878580"
  },
  {
    "text": "So a priority queue is basically\nlike a queue, except the things that are queued\nhave priorities.",
    "start": "878580",
    "end": "887360"
  },
  {
    "text": "So the idea will be that when\nyou push at possible action,",
    "start": "887360",
    "end": "893250"
  },
  {
    "text": "say I had actions A,B, or C -- in addition to pushing them onto\nthe queue, which is how",
    "start": "893250",
    "end": "899509"
  },
  {
    "text": "we would have done breadth-first\nsearch, in addition to pushing them on the\nqueue, I'll also associate",
    "start": "899510",
    "end": "906460"
  },
  {
    "text": "with them a cost. So when I push A on the queue,\nthe priority queue, I'll",
    "start": "906460",
    "end": "913650"
  },
  {
    "text": "associate with that a cost,\nwhich I've arbitrarily said here, the cost is 3.",
    "start": "913650",
    "end": "919960"
  },
  {
    "text": "When I push B, I'll associate\na cost 6. When I push C, I'll associate a\ncost 1 so that when I do the",
    "start": "919960",
    "end": "926089"
  },
  {
    "text": "first pop, what will come out\nwill be the element that I pushed that has the smallest\nassociated cost.",
    "start": "926090",
    "end": "935540"
  },
  {
    "text": "That'll be a way that I can\norder then my search through the search tree in terms\nof the minimum costs.",
    "start": "935540",
    "end": "943350"
  },
  {
    "text": "Is that clear? So the first time I do a pop,\nthe element that pops out is",
    "start": "943350",
    "end": "949120"
  },
  {
    "text": "the one with the least cost,\nwhich is this one, so I get C. C is then removed from the list\nand the second time I do",
    "start": "949120",
    "end": "958000"
  },
  {
    "text": "it, when I do a pop, I pick out\nthe one with the cost 3 which is A. That's an easy\nmodification to the schemes",
    "start": "958000",
    "end": "967880"
  },
  {
    "text": "that we used before. Just like before, we can\nimplement a priority queue with a list.",
    "start": "967880",
    "end": "973320"
  },
  {
    "text": "Here we've put all the\ncomplication into popping. So we just push like we did\nbefore, just jam it in.",
    "start": "973320",
    "end": "982540"
  },
  {
    "text": "So just add it to the\nend of the list. And we put the complication into\npop, pop looks through",
    "start": "982540",
    "end": "988830"
  },
  {
    "text": "the list and finds the\none that has the biggest negative cost.",
    "start": "988830",
    "end": "994120"
  },
  {
    "text": "That's just because we've got a\nutility routine that gave us the biggest. We want the smallest.",
    "start": "994120",
    "end": "999990"
  },
  {
    "text": "We know that the costs are\nnon-negative, so we implement",
    "start": "999990",
    "end": "1005779"
  },
  {
    "text": "the find the smallest by calling\nthe routine find the biggest with a negative cost. ",
    "start": "1005780",
    "end": "1013440"
  },
  {
    "text": "So notice that all the new\ncomplication is in this pop routine, and if you think\nabout it, pop is doing",
    "start": "1013440",
    "end": "1019459"
  },
  {
    "text": "far too much work. The way this routine works,\nevery time you do a pop, it",
    "start": "1019460",
    "end": "1026609"
  },
  {
    "text": "goes through the whole\nlist looking for something that is small. Obviously it ought to be able to\nkeep track of progress that",
    "start": "1026609",
    "end": "1033970"
  },
  {
    "text": "it's made in that previously. There are much better\nalgorithms, but for the purpose of this illustration,\nwe didn't bother with it.",
    "start": "1033970",
    "end": "1041660"
  },
  {
    "text": "So this is not a very clever\nimplementation. We're not trying to be clever,\nwe're trying to",
    "start": "1041660",
    "end": "1047970"
  },
  {
    "text": "illustrate the point. So if you were seriously try to\ndo a big search, if you're",
    "start": "1047970",
    "end": "1053779"
  },
  {
    "text": "writing code for Google, you\nwould never do it this way. But the idea again is\nin abstraction.",
    "start": "1053780",
    "end": "1060649"
  },
  {
    "text": "We're going to bury those\ndetails in the way the queue is implemented and then at the\nnext higher level, we don't",
    "start": "1060650",
    "end": "1067210"
  },
  {
    "text": "need to worry about\nthose details. We'll abstract them away. Is that all clear?",
    "start": "1067210",
    "end": "1073680"
  },
  {
    "text": "OK. So this then is the way we\nend up doing the search. So when we do the search, when\nwe create a new node, the idea",
    "start": "1073680",
    "end": "1083340"
  },
  {
    "text": "is going to be that we\ncan generate a cost. Remember, nodes in the search\ntree summarize paths.",
    "start": "1083340",
    "end": "1091470"
  },
  {
    "text": "Nodes are different from\nstates, right? States are places that we can\nvisit, nodes are paths.",
    "start": "1091470",
    "end": "1098980"
  },
  {
    "text": "So the thing that we need to\nkeep track of now in addition to what we did before, before we\nhad the idea that nodes had",
    "start": "1098980",
    "end": "1107620"
  },
  {
    "text": "states, they have a place\nwhere you are currently in the search.",
    "start": "1107620",
    "end": "1112640"
  },
  {
    "text": "They have actions, which is\nwhich direction do you go next and they have parents and that\nwas enough information to",
    "start": "1112640",
    "end": "1120740"
  },
  {
    "text": "create and maintain\na search tree. Now what we need to do is\nalso keep track of cost.",
    "start": "1120740",
    "end": "1128669"
  },
  {
    "text": "So we do that by adding\ninstantiation time. When we create a new node, we\nhave to also pass it what is",
    "start": "1128670",
    "end": "1135210"
  },
  {
    "text": "the action cost. So in the previous example, the\naction cost would be the",
    "start": "1135210",
    "end": "1140470"
  },
  {
    "text": "distance from B to C, for\nexample, being 5, which is different from the distance\nbetween B to E, which is 1.",
    "start": "1140470",
    "end": "1149250"
  },
  {
    "text": "So we have to associate at the\ntime we create a node, what is the action cost associated\nwith this new node.",
    "start": "1149250",
    "end": "1156620"
  },
  {
    "text": "And then the node keeps track\nof the total path cost, so",
    "start": "1156620",
    "end": "1161740"
  },
  {
    "text": "that's what the red\nstuff is doing. So it's a very small change to\nthe code that we used for",
    "start": "1161740",
    "end": "1167410"
  },
  {
    "text": "creating nodes in the previous\ntwo searches, and then we have",
    "start": "1167410",
    "end": "1173330"
  },
  {
    "text": "to also change the way we do\nthe basic search algorithm. And here too, the idea\nis pretty simple.",
    "start": "1173330",
    "end": "1180120"
  },
  {
    "text": "It's almost exactly the same\nthing that we did before, with the idea that we substitute keep\ntrack of the agenda with",
    "start": "1180120",
    "end": "1186550"
  },
  {
    "text": "a priority queue rather than\nwith a queue or a stack.",
    "start": "1186550",
    "end": "1191800"
  },
  {
    "text": "There's one more complication,\nand that is that in the past,",
    "start": "1191800",
    "end": "1198480"
  },
  {
    "text": "we knew that all children\nadded the same penalty. Because we only keeping track\nall of how many generations,",
    "start": "1198480",
    "end": "1209309"
  },
  {
    "text": "how many hops are there to the\ncurrent node, all children",
    "start": "1209310",
    "end": "1215140"
  },
  {
    "text": "were in some sense created equal\nbecause we knew they all incurred one more hop.",
    "start": "1215140",
    "end": "1223310"
  },
  {
    "text": "Here, because the children can\nhave different associated",
    "start": "1223310",
    "end": "1229590"
  },
  {
    "text": "action costs, we don't know at\nthe time we've picked up the",
    "start": "1229590",
    "end": "1236850"
  },
  {
    "text": "parent, we don't know at that\ntime which child is going to end up being the shortest one.",
    "start": "1236850",
    "end": "1242930"
  },
  {
    "text": "So previously, the goal test\nwas performed when the children were pushed\nonto the agenda.",
    "start": "1242930",
    "end": "1249360"
  },
  {
    "text": "Here we have to wait until we\nlook at all of the children",
    "start": "1249360",
    "end": "1255220"
  },
  {
    "text": "before we will know which child\nhas the shortest length. And that just means that we take\nthe goal test, which had",
    "start": "1255220",
    "end": "1262050"
  },
  {
    "text": "been inside the 'for\na in actions' loop. We have to factor that out and\ndefer until the next time.",
    "start": "1262050",
    "end": "1271490"
  },
  {
    "text": "So that's the only change\nto the algorithm that we need to make.",
    "start": "1271490",
    "end": "1276679"
  },
  {
    "text": "So is that clear? So the idea is it's a pretty\nsimple modification of the",
    "start": "1276680",
    "end": "1281980"
  },
  {
    "text": "algorithm that we have so far,\nbut it gives rise to a much more versatile kind of search.",
    "start": "1281980",
    "end": "1288340"
  },
  {
    "text": " So last time we saw that there\nwas really no good point for",
    "start": "1288340",
    "end": "1295409"
  },
  {
    "text": "not doing the search, the\nbreadth-first search with dynamic programming, we have\nthe same thing here.",
    "start": "1295410",
    "end": "1301640"
  },
  {
    "text": "So when you're doing the uniform\ncosts search, there's",
    "start": "1301640",
    "end": "1307270"
  },
  {
    "text": "no real good reason for not\nimplementing that with dynamic programming, so we also want\nto think about the dynamic",
    "start": "1307270",
    "end": "1312590"
  },
  {
    "text": "programming algorithm. So you remember in breadth-first\nsearch and in depth-first search, dynamic\nprogramming referred to the",
    "start": "1312590",
    "end": "1320669"
  },
  {
    "text": "principle that the shortest path\nfrom X to Z through Y, so",
    "start": "1320670",
    "end": "1327810"
  },
  {
    "text": "if you have a path from X to Z\nand you know it goes through Y, the shortest way you can get\nfrom X to Z through Y is",
    "start": "1327810",
    "end": "1333210"
  },
  {
    "text": "to add the shortest path from\nX to Y to the shortest path from Y to Z. Sounds trivial, but it has a\ntremendous impact on the",
    "start": "1333210",
    "end": "1341210"
  },
  {
    "text": "number of states that can be\nomitted from the search. Here, when we do the uniform\ncost search, we can do the",
    "start": "1341210",
    "end": "1348470"
  },
  {
    "text": "same sort of thing but except\nthat we run into the same sort of problem with not all\npaths from X to",
    "start": "1348470",
    "end": "1356600"
  },
  {
    "text": "Y are created equally. We don't want to remember any\nrandom path from X to Y, we",
    "start": "1356600",
    "end": "1363820"
  },
  {
    "text": "want to remember the best one,\nwhich means that in general, we're going to have to expand\nall of the children before",
    "start": "1363820",
    "end": "1374460"
  },
  {
    "text": "we'll know which child gives\nthe minimum length path.",
    "start": "1374460",
    "end": "1380210"
  },
  {
    "text": "So that means that the dynamic\nprogramming principle that we'll use is to remember the\nstate when it gets expanded,",
    "start": "1380210",
    "end": "1389870"
  },
  {
    "text": "because it only gets expanded\nafter its already being compared to its siblings.",
    "start": "1389870",
    "end": "1396590"
  },
  {
    "text": "So wait until a state, wait\nuntil a path has been compared",
    "start": "1396590",
    "end": "1402419"
  },
  {
    "text": "to all the siblings of that\nparticular path before you consider it for dynamic\nprogramming.",
    "start": "1402420",
    "end": "1408950"
  },
  {
    "text": "So we'll do that by not keeping\ntrack of states as they are visited, but instead\nkeeping track of states as",
    "start": "1408950",
    "end": "1415520"
  },
  {
    "text": "they are expanded. That's the same idea that we\nhad to do when we had to reorder goal test.",
    "start": "1415520",
    "end": "1421770"
  },
  {
    "text": "Defer the goal task until\nafter you think about all the children.",
    "start": "1421770",
    "end": "1427799"
  },
  {
    "text": "Defer putting it in the dynamic\nprogramming list until",
    "start": "1427800",
    "end": "1433010"
  },
  {
    "text": "after you've looked at all the\nchildren and so that means that we think about expansions\ninstead of visits.",
    "start": "1433010",
    "end": "1439909"
  },
  {
    "text": "And so that looks like this. So just like we took the goal\ntest outside the action list,",
    "start": "1439910",
    "end": "1449539"
  },
  {
    "text": "in the previous breadth-first\nsearch we did the test goal state in this loop, here we\ndefer it until we've looked at",
    "start": "1449540",
    "end": "1457360"
  },
  {
    "text": "all the children and\nfetched the parent. So we defer it into the higher\nloop, we take it out of this",
    "start": "1457360",
    "end": "1464360"
  },
  {
    "text": "moving into this and similarly,\nwe take the dynamic programming memory.",
    "start": "1464360",
    "end": "1470490"
  },
  {
    "text": "We now call it expanded to\nremind ourselves that what we're doing is keeping track\nof states after they were",
    "start": "1470490",
    "end": "1478130"
  },
  {
    "text": "expanded, not after\nthey were visited. And updating it again, not when\nwe look at the individual",
    "start": "1478130",
    "end": "1487760"
  },
  {
    "text": "actions, but only after\nwe've decided which trial is the winner.",
    "start": "1487760",
    "end": "1495330"
  },
  {
    "text": "OK? That's probably confusing. That's not important at this\npoint, because I've written an",
    "start": "1495330",
    "end": "1501080"
  },
  {
    "text": "example and hopefully by\nthinking through the example, you'll be able to see what the\ncode is supposed to be doing.",
    "start": "1501080",
    "end": "1507470"
  },
  {
    "text": "And then a good exercise is to\ngo through the example, which will be posted on the web with\nall the gory details, and make",
    "start": "1507470",
    "end": "1514420"
  },
  {
    "text": "sure that you can match\nup the search--",
    "start": "1514420",
    "end": "1519940"
  },
  {
    "text": "the partial results of the\nsearch-- to the way the algorithm is written. OK?",
    "start": "1519940",
    "end": "1526679"
  },
  {
    "text": "So now I want to do the\nproblem of interest. Think about what if one of\nthese nodes, one of the",
    "start": "1526680",
    "end": "1533660"
  },
  {
    "text": "states, state C,\nis very distant relative to all the rest.",
    "start": "1533660",
    "end": "1539270"
  },
  {
    "text": "How will the new search, the\nuniform cost search, work with this problem?",
    "start": "1539270",
    "end": "1544760"
  },
  {
    "text": "So we do the same sort of\nthing we did before. Now we have an agenda to keep\ntrack of the nodes under",
    "start": "1544760",
    "end": "1552450"
  },
  {
    "text": "consideration. We have a dynamic programming\nlist that is going to be called expanded because we\ndon't add to it until we",
    "start": "1552450",
    "end": "1560670"
  },
  {
    "text": "expand states. It had previously been\ncalled visited.",
    "start": "1560670",
    "end": "1566100"
  },
  {
    "text": "And we also keep track\nof the metric, which is the path costs.",
    "start": "1566100",
    "end": "1572000"
  },
  {
    "text": "So if we start by putting node A\non the agenda, its path cost",
    "start": "1572000",
    "end": "1577800"
  },
  {
    "text": "is 0, because it doesn't cost\nanything to get there because that's where we started. And we haven't expanded\nanybody yet.",
    "start": "1577800",
    "end": "1585669"
  },
  {
    "text": "So notice that the starting\nstate is a little bit different here because we're\nkeeping track of expanded.",
    "start": "1585670",
    "end": "1591050"
  },
  {
    "text": "The expanded list started out\nwith 0 elements in it. Previously where we were keeping\ntrack of visits, it",
    "start": "1591050",
    "end": "1596820"
  },
  {
    "text": "started out knowing already\nwhat was going on with A. So now we expand A, think about\nA's children, B and D,",
    "start": "1596820",
    "end": "1607789"
  },
  {
    "text": "put them on the agenda, and add\nA to the expanded list.",
    "start": "1607790",
    "end": "1612870"
  },
  {
    "text": "We expanded A so it's time\nto add it to the dynamic programming list.",
    "start": "1612870",
    "end": "1618570"
  },
  {
    "text": "Then also keep track of the\ncosts of these paths.",
    "start": "1618570",
    "end": "1624340"
  },
  {
    "text": "AB costs 1, AD costs 1.",
    "start": "1624340",
    "end": "1630330"
  },
  {
    "text": "That's the end of\nthe first pass. Now pop the first guy\noff the queue.",
    "start": "1630330",
    "end": "1636030"
  },
  {
    "text": "Expand it, that means we're\nexpanding the B state. We go from A to B, so we're\ngoing to expand B. B Has",
    "start": "1636030",
    "end": "1642389"
  },
  {
    "text": "children A, C and E. A has\nalready been expanded so we don't need to think\nabout A anymore.",
    "start": "1642390",
    "end": "1648875"
  },
  {
    "text": " C and E, so it was A, C and\nE, C and E have not been",
    "start": "1648875",
    "end": "1655700"
  },
  {
    "text": "expanded, so I expand B to get\nthese two and I associate",
    "start": "1655700",
    "end": "1661789"
  },
  {
    "text": "their total path costs. So the path ABC, ABC has\nlength 6 and the path",
    "start": "1661790",
    "end": "1672600"
  },
  {
    "text": "ABE has length 2. ",
    "start": "1672600",
    "end": "1679669"
  },
  {
    "text": "Then I take the first one off\nthe agenda again, that's AD.",
    "start": "1679670",
    "end": "1685100"
  },
  {
    "text": "I expand AD, which is expanding\nD. Put that on the expanded list, on the dynamic\nprogramming was list.",
    "start": "1685100",
    "end": "1692700"
  },
  {
    "text": "D has children A, E, G. A is\nalready on the expanded list,",
    "start": "1692700",
    "end": "1698710"
  },
  {
    "text": "so that means I have to worry\nabout E and G. Those paths",
    "start": "1698710",
    "end": "1705470"
  },
  {
    "text": "have length 2 and 2. That was the same so far\nas the previous search.",
    "start": "1705470",
    "end": "1712470"
  },
  {
    "text": "Now I see something different. Because I'm using a priority\nqueue, I skip ABC because",
    "start": "1712470",
    "end": "1720420"
  },
  {
    "text": "that's just not the right\none to do next. So ABC, I'm keeping track of\nwith the priority queue.",
    "start": "1720420",
    "end": "1728650"
  },
  {
    "text": "I know that that path\nis already length 6. It could end up being the\noptimum path, but at this",
    "start": "1728650",
    "end": "1738110"
  },
  {
    "text": "phase of the search,\nit's not the one I should think of next. The one I should think of next\nis the shortest path.",
    "start": "1738110",
    "end": "1744600"
  },
  {
    "text": "So what I'm trying to do is\nsearch the search tree in order of shortest path.",
    "start": "1744600",
    "end": "1750620"
  },
  {
    "text": "So I skip the ABC because its\npath is long and the minimum",
    "start": "1750620",
    "end": "1756380"
  },
  {
    "text": "length, so back up one. So in the priority queue idea,\nI want to extract from the",
    "start": "1756380",
    "end": "1762680"
  },
  {
    "text": "queue the first item with the\nminimum length, so that's ABE. ",
    "start": "1762680",
    "end": "1770240"
  },
  {
    "text": "Everyone's with that? So then I want to expand E. E\nhas children B, D, F, H. So B",
    "start": "1770240",
    "end": "1780419"
  },
  {
    "text": "and D are here, F and\nH are not, so I add ABEFH to the agenda.",
    "start": "1780420",
    "end": "1789380"
  },
  {
    "text": "Each of those have length 3.  So what's the next guy\nout of the agenda?",
    "start": "1789380",
    "end": "1798195"
  },
  {
    "text": "AUDIENCE: A and E. PROFESSOR: I need the first one\nwith the smallest path,",
    "start": "1798195",
    "end": "1805470"
  },
  {
    "text": "the smallest cost possible. The smallest cost possible is\n2, so ADE is the next guy.",
    "start": "1805470",
    "end": "1811910"
  },
  {
    "text": "So I expand ADE, but I've\nalready expanded E. I Don't need to do anything.",
    "start": "1811910",
    "end": "1818950"
  },
  {
    "text": "OK? The dynamic expansion list is\nkeeping track of the nodes I've already expanded.",
    "start": "1818950",
    "end": "1825130"
  },
  {
    "text": "I already did E, there's nothing\nnew to be learned. So that doesn't do anything.",
    "start": "1825130",
    "end": "1832130"
  },
  {
    "text": "So the next one is G. Well I\ndidn't do G yet, so add it to the expanded list.",
    "start": "1832130",
    "end": "1838200"
  },
  {
    "text": "G is shorter than D and H. D was\nalready there, H was not, so add H.",
    "start": "1838200",
    "end": "1848990"
  },
  {
    "text": "The next one is F. I haven't\nexpanded F yet, so let's do F.",
    "start": "1848990",
    "end": "1855420"
  },
  {
    "text": "So F's children are C, E, I. C\nis not there, E is there, I is",
    "start": "1855420",
    "end": "1864090"
  },
  {
    "text": "not there, so I add those. ",
    "start": "1864090",
    "end": "1869980"
  },
  {
    "text": "So next is this guy, H. H\nwasn't expended, so I",
    "start": "1869980",
    "end": "1876059"
  },
  {
    "text": "add H to the list. H's children are E, G, I. EG are\nalready there, I is not,",
    "start": "1876060",
    "end": "1884570"
  },
  {
    "text": "so I add that.  Try expanding H, but already\ndid expand H so",
    "start": "1884570",
    "end": "1891720"
  },
  {
    "text": "that doesn't count.  Try expanding C, that's fine.",
    "start": "1891720",
    "end": "1898460"
  },
  {
    "text": "Expand C, I haven't expanded C\nbefore, add it to the list. C's children are B and F. B and\nF are both there, didn't",
    "start": "1898460",
    "end": "1905929"
  },
  {
    "text": "add any new children. AUDIENCE: Why'd you expand\nthat C, why not H? ",
    "start": "1905930",
    "end": "1913330"
  },
  {
    "text": "PROFESSOR: Oh look at\nthat, you're right. Oh, thank you very much. My slide is wrong. Ignore that, you're absolutely\ncorrect, thank you.",
    "start": "1913330",
    "end": "1920720"
  },
  {
    "text": "So let's say I guess this\nproves that 200 people watching the lecturer have\ngreater insight--",
    "start": "1920720",
    "end": "1928095"
  },
  {
    "text": "well anyway. Yes, that's wrong. Don't bother with that because\nit's got the wrong priority. Jump straight to that.",
    "start": "1928095",
    "end": "1935110"
  },
  {
    "text": "I'll fix the slide on the web. You're absolutely right. I should have gone straight to\nthere and when I tried to",
    "start": "1935110",
    "end": "1941450"
  },
  {
    "text": "expand I, I realize that that's\nmy answer, so I'm done.",
    "start": "1941450",
    "end": "1948529"
  },
  {
    "text": "OK? Questions? OK it's a little tedious.",
    "start": "1948530",
    "end": "1954170"
  },
  {
    "text": "The point is that it really\nwasn't very much different",
    "start": "1954170",
    "end": "1959550"
  },
  {
    "text": "from doing breadth-first\nsearch. The same ideas still work.",
    "start": "1959550",
    "end": "1965130"
  },
  {
    "text": "The same idea of organizing the\nsearch on a tree, looking",
    "start": "1965130",
    "end": "1970350"
  },
  {
    "text": "for the minimum cost\nanswer on a tree, that's the big picture. That's what we want\nyou to know about.",
    "start": "1970350",
    "end": "1977679"
  },
  {
    "text": "I mean, we may ask you a quiz\nquestion about breadth-first search or depth-first search\nor dynamic programming or",
    "start": "1977680",
    "end": "1982929"
  },
  {
    "text": "whatever, but the big picture,\nthe thing we really want you to know is how to think\nabout a search.",
    "start": "1982930",
    "end": "1989730"
  },
  {
    "text": "The way to think about a search\nis a sequence of states",
    "start": "1989730",
    "end": "1994850"
  },
  {
    "text": "organized in a tree\nthat you can then systematically search.",
    "start": "1994850",
    "end": "2000350"
  },
  {
    "text": "That's the idea, and the point\nof going through the uniform cost search is to see first and\nforemost, that it fits the",
    "start": "2000350",
    "end": "2010540"
  },
  {
    "text": "same structure, it's the\nsame kind of problem. Secondly, there are very tiny\ndetails and so I've tried go",
    "start": "2010540",
    "end": "2018020"
  },
  {
    "text": "over those details. The details have to do with\nkeeping track of the action cost and keeping track of which\none to do next by way of",
    "start": "2018020",
    "end": "2027020"
  },
  {
    "text": "a priority queue. But the big picture is\nthe same idea works. States, nodes, trees,\nsearch, cues.",
    "start": "2027020",
    "end": "2036220"
  },
  {
    "text": "Questions? Comments?  OK.",
    "start": "2036220",
    "end": "2041550"
  },
  {
    "text": " The other important thing that\nI want to talk about today is",
    "start": "2041550",
    "end": "2048570"
  },
  {
    "text": "again, this idea of trying\nto minimize the length of your search.",
    "start": "2048570",
    "end": "2054399"
  },
  {
    "text": "The other point that you're\nsupposed to get from these two lectures is depending on exactly\nhow you set up the",
    "start": "2054400",
    "end": "2060560"
  },
  {
    "text": "search, you can do a lot\nof work or less work.",
    "start": "2060560",
    "end": "2066280"
  },
  {
    "text": "And we're always interested to\ndo less, especially because if",
    "start": "2066280",
    "end": "2071658"
  },
  {
    "text": "you can do a lot less, you can\ndo a lot harder problem. So the other thing I want to\ntalk about next is the idea",
    "start": "2071659",
    "end": "2085360"
  },
  {
    "text": "that our searches so far have\nbeen starting state centric.",
    "start": "2085360",
    "end": "2093129"
  },
  {
    "text": "What do I mean by that? Every search has a starting\nstate and a goal, and the",
    "start": "2093130",
    "end": "2099330"
  },
  {
    "text": "ordering of our searches so\nfar have been go to the starting state, think of all\nthe steps you can make from",
    "start": "2099330",
    "end": "2106359"
  },
  {
    "text": "the starting state and just\nkeep widening your search",
    "start": "2106360",
    "end": "2111965"
  },
  {
    "text": "wider and wider and\nwider until you stumble onto the goal. ",
    "start": "2111965",
    "end": "2118740"
  },
  {
    "text": "OK, can you all see that that's\nwhat we've been doing? So nowhere in our code was the\ncode aware of the goal other",
    "start": "2118740",
    "end": "2129310"
  },
  {
    "text": "than am I there yet? ",
    "start": "2129310",
    "end": "2134400"
  },
  {
    "text": "So the search algorithm so\nfar has been start at the beginning state, ask if I'm\nthere yet, try the closest",
    "start": "2134400",
    "end": "2143099"
  },
  {
    "text": "place I can go, am\nI there yet? Am I at the goal yet? Try the next closest place I can\ngo from the start, am I at",
    "start": "2143100",
    "end": "2150920"
  },
  {
    "text": "the goal yet? Try the next closest\nplace I can start from, am I there yet?",
    "start": "2150920",
    "end": "2156880"
  },
  {
    "text": "Everything has been starting\nstate centric.",
    "start": "2156880",
    "end": "2162299"
  },
  {
    "text": "Obviously, that's wrong. Somehow, when you do a search,\nif you were asked to find the",
    "start": "2162300",
    "end": "2172260"
  },
  {
    "text": "shortest route through the\ninterstate highway system from",
    "start": "2172260",
    "end": "2177640"
  },
  {
    "text": "Kansas to Boston, there's a good\nchance you wouldn't be",
    "start": "2177640",
    "end": "2182910"
  },
  {
    "text": "looking at Wyoming. Everybody knows enough\ngeography to do that one, right?",
    "start": "2182910",
    "end": "2189050"
  },
  {
    "text": "So the idea is that in the\nsearches we've done so far, you would look at Wyoming\nbefore you'd look at",
    "start": "2189050",
    "end": "2195010"
  },
  {
    "text": "Massachusetts. OK? That's stupid, right? Everybody sort of see that?",
    "start": "2195010",
    "end": "2200810"
  },
  {
    "text": "So the searches we've done\nso far have been starting state centric.",
    "start": "2200810",
    "end": "2207270"
  },
  {
    "text": "So what I'd like to\ndo is think about a way to undo that. But again, to set things\nup, let's think about",
    "start": "2207270",
    "end": "2213850"
  },
  {
    "text": "what I mean by that. Let's imagine a search very much\nlike what we did before,",
    "start": "2213850",
    "end": "2219720"
  },
  {
    "text": "except let's go from E to I,\nfrom Kansas to Boston, and I",
    "start": "2219720",
    "end": "2225060"
  },
  {
    "text": "guess it's Kansas\nto Tallahassee, but you get the idea. So we start at E and\nlet's think about",
    "start": "2225060",
    "end": "2231900"
  },
  {
    "text": "how our search proceeds. So if you start at E, think\nabout if we push E in the",
    "start": "2231900",
    "end": "2239560"
  },
  {
    "text": "agenda, so I'm doing the uniform\ncost search with dynamic programing.",
    "start": "2239560",
    "end": "2247300"
  },
  {
    "text": "I'm keeping track of the\nexpanded state as my dynamic programming state. I'm starting at E. The cost of\nbeing at E is 0 because that's",
    "start": "2247300",
    "end": "2256630"
  },
  {
    "text": "where I started. And now, I think about expanding\nE. So E goes on the expanded list.",
    "start": "2256630",
    "end": "2262780"
  },
  {
    "text": " I think about all the children\nof E, the children are",
    "start": "2262780",
    "end": "2267920"
  },
  {
    "text": "B,D,F,H. All of those children\nhave distance 1, so when I",
    "start": "2267920",
    "end": "2277420"
  },
  {
    "text": "look among them to figure out\nthe next one that I should do, I do the first guy, EB.",
    "start": "2277420",
    "end": "2284215"
  },
  {
    "text": "B's children are A and C, so I\ntake off EB from the beginning",
    "start": "2284215",
    "end": "2289680"
  },
  {
    "text": "of the agenda. ",
    "start": "2289680",
    "end": "2295650"
  },
  {
    "text": "Start again, B. B's children\nare A, C, E. E is already expanded.",
    "start": "2295650",
    "end": "2300670"
  },
  {
    "text": "Push A and C. Pop D, D's\nchildren are A, E, G push A",
    "start": "2300670",
    "end": "2309745"
  },
  {
    "text": "and G because E's\nalready there.  Expand F. F's children\nare C, E, I. E is",
    "start": "2309746",
    "end": "2319710"
  },
  {
    "text": "already there, push CI. Expand H. H's children are G,\nI, E, G, I. E is already",
    "start": "2319710",
    "end": "2329190"
  },
  {
    "text": "there, push GI. Expand A. A's children are B and\nD. They're already there,",
    "start": "2329190",
    "end": "2336470"
  },
  {
    "text": "don't need to do anything. Expand C. C's children are BF.",
    "start": "2336470",
    "end": "2342126"
  },
  {
    "text": "BF are there, I don't\nneed to do anything. Expand A. BD are already\nthere, I",
    "start": "2342126",
    "end": "2347510"
  },
  {
    "text": "don't need to do anything. Expand G. G's children are DH,\nDH are both there, I don't",
    "start": "2347510",
    "end": "2353460"
  },
  {
    "text": "need to do anything. Expand C. BF, BF nothing. Expand I, I'm there.",
    "start": "2353460",
    "end": "2360299"
  },
  {
    "text": "Yes? AUDIENCE: Were you supposed\nadding ACE? PROFESSOR: Was I supposed\nto be adding AC?",
    "start": "2360300",
    "end": "2367940"
  },
  {
    "text": "You add A when you expand it. Ah, yes, yes, yes. Thank you.",
    "start": "2367940",
    "end": "2373619"
  },
  {
    "text": "I'll fix this one, too. So the question was when I\nexpanded A, when I did this",
    "start": "2373620",
    "end": "2380070"
  },
  {
    "text": "one for example, when I tried\nto expand A, I should have",
    "start": "2380070",
    "end": "2385120"
  },
  {
    "text": "added it to the list here so\nI don't try to do it again. It wouldn't have affected the\noutcome, but I should have",
    "start": "2385120",
    "end": "2392265"
  },
  {
    "text": "added it to that list. Thank you.  Class -- 2 Freeman --",
    "start": "2392265",
    "end": "2398430"
  },
  {
    "text": "0. Yes? AUDIENCE: What if you\ndidn't expand it?",
    "start": "2398430",
    "end": "2405510"
  },
  {
    "text": "I mean, do you consider it\n[UNINTELLIGIBLE] you should expand it? ",
    "start": "2405510",
    "end": "2411510"
  },
  {
    "text": "PROFESSOR: I'm sorry, I didn't\nhear the question. AUDIENCE: We didn't actually\nexpand it. We considered expanding it,\nbut then we noticed that.",
    "start": "2411510",
    "end": "2417510"
  },
  {
    "text": "PROFESSOR: Correct, correct. So what I really should do is go\nback and read the code and figure out what I should do.",
    "start": "2417510",
    "end": "2422950"
  },
  {
    "text": "What I'm trying to do\nis emulate the code. So your point is, it's a\ntechnical definition about",
    "start": "2422950",
    "end": "2429320"
  },
  {
    "text": "whether I want to think about\nwhether I actually expanded it or not. If I don't add any children,\nwas it a real expansion?",
    "start": "2429320",
    "end": "2436579"
  },
  {
    "text": "And that's a question that is\ndetermined by where was the if statement in the code, and\nfrankly I don't remember.",
    "start": "2436580",
    "end": "2443445"
  },
  {
    "text": " It does not expand it, ah\nI have the right answer.",
    "start": "2443445",
    "end": "2448700"
  },
  {
    "text": "AUDIENCE: It does expand it. PROFESSOR: It does expand it. So I have the wrong answer. Class -- 2 and a 1/2.",
    "start": "2448700",
    "end": "2455100"
  },
  {
    "text": "OK so the point of this is that\nthe search was symmetric",
    "start": "2455100",
    "end": "2464360"
  },
  {
    "text": "around E, even though\nthe goal is not. ",
    "start": "2464360",
    "end": "2471140"
  },
  {
    "text": "OK? And the question is, how could\nwe fix it so the search is not",
    "start": "2471140",
    "end": "2476390"
  },
  {
    "text": "symmetric around E --\nthe starting point. How do I fix it so the search is\nbiased toward going toward",
    "start": "2476390",
    "end": "2484670"
  },
  {
    "text": "the answer?  And so the way we think about\nthis is with something we",
    "start": "2484670",
    "end": "2491920"
  },
  {
    "text": "called heuristics. So if you think about the\nsearches we've been doing,",
    "start": "2491920",
    "end": "2499369"
  },
  {
    "text": "either breadth-first or\ndepth-first from last time where we counted the number of\nhops or today where we counted",
    "start": "2499370",
    "end": "2509720"
  },
  {
    "text": "the lengths of paths, each of\nthose considered what thing to",
    "start": "2509720",
    "end": "2515849"
  },
  {
    "text": "do next based on the path from\nthe starting point to the",
    "start": "2515850",
    "end": "2521620"
  },
  {
    "text": "point under consideration. The idea of a heuristic is to\nadd something that informs the",
    "start": "2521620",
    "end": "2530150"
  },
  {
    "text": "search about how distance, how\nmuch distance we're expecting",
    "start": "2530150",
    "end": "2535730"
  },
  {
    "text": "to add from the point under\nconsideration to the goal.",
    "start": "2535730",
    "end": "2540940"
  },
  {
    "text": "So the idea of the heuristic is\nto put in the second part of the path.",
    "start": "2540940",
    "end": "2546920"
  },
  {
    "text": " The problem with a heuristic\nis that finding the second",
    "start": "2546920",
    "end": "2552710"
  },
  {
    "text": "part of the path is just as hard\nas finding the first part",
    "start": "2552710",
    "end": "2558089"
  },
  {
    "text": "of the path, and it would be a\nterrible idea to -- for every",
    "start": "2558090",
    "end": "2565240"
  },
  {
    "text": "point in the search tree run a\nnew search to find the best",
    "start": "2565240",
    "end": "2572460"
  },
  {
    "text": "answer from that point\nto the goal --",
    "start": "2572460",
    "end": "2578020"
  },
  {
    "text": "because that would increase the\nlength of the search time enormously.",
    "start": "2578020",
    "end": "2584500"
  },
  {
    "text": "So it's a bad idea. So the problems are of equal\ncomplexity, the problem of",
    "start": "2584500",
    "end": "2589790"
  },
  {
    "text": "getting from the start point to\nthe place of interest and the problem of going from the\nplace of interest to the goal",
    "start": "2589790",
    "end": "2597020"
  },
  {
    "text": "are problems of equal\ncomplexity. We don't want to try to solve\nthe problem of making the",
    "start": "2597020",
    "end": "2603220"
  },
  {
    "text": "search better informed by\nincreasing the complexity of the search drastically.",
    "start": "2603220",
    "end": "2610900"
  },
  {
    "text": "So that's the issue. So a heuristic is going to be\na way of approximating the",
    "start": "2610900",
    "end": "2616380"
  },
  {
    "text": "amount of work we have to do\nyet, where what we would like it to be is not all that\nterribly difficult to compute.",
    "start": "2616380",
    "end": "2625380"
  },
  {
    "text": "So one way we could think\nabout that would be to consider as an approximation\nto how much work we have to",
    "start": "2625380",
    "end": "2632960"
  },
  {
    "text": "do, the Manhattan distance for\nexample, to complete the path.",
    "start": "2632960",
    "end": "2638760"
  },
  {
    "text": "The Manhattan distance is the\nsum of the x and y distance.",
    "start": "2638760",
    "end": "2644670"
  },
  {
    "text": "Generally speaking, Manhattan\ndistance is not a good idea for map-like problems because\ngenerally you can cut across",
    "start": "2644670",
    "end": "2651680"
  },
  {
    "text": "corners in such searches. In this particular search, since\nI've excluded cutting",
    "start": "2651680",
    "end": "2657619"
  },
  {
    "text": "across diagonals, since the\nsearch space is already",
    "start": "2657620",
    "end": "2663370"
  },
  {
    "text": "Manhattan, thinking about a\nheuristic that's based on Manhattan distance\nis probably OK.",
    "start": "2663370",
    "end": "2669232"
  },
  {
    "text": " So the idea is to develop a\nheuristic and he what I'm",
    "start": "2669232",
    "end": "2677120"
  },
  {
    "text": "going to think about is, what\nif I complete the path by adding the Manhattan distance\nfrom the point under",
    "start": "2677120",
    "end": "2686100"
  },
  {
    "text": "consideration to the goal. OK, so now if I started at E\nlike before and I'm going",
    "start": "2686100",
    "end": "2693000"
  },
  {
    "text": "toward I like before, then I\nstart with the agenda having",
    "start": "2693000",
    "end": "2698560"
  },
  {
    "text": "just E and having expanded\nnothing. ",
    "start": "2698560",
    "end": "2704890"
  },
  {
    "text": "However, the cost associated\nwith E is no longer 0.",
    "start": "2704890",
    "end": "2711160"
  },
  {
    "text": "The cost of going from E, the\nstarting point to E, the point under consideration is still 0,\nbut I'm estimating the cost",
    "start": "2711160",
    "end": "2720410"
  },
  {
    "text": "of going from E to I by the\nManhattan distance between E and I, which is 2.",
    "start": "2720410",
    "end": "2727410"
  },
  {
    "text": "The Manhattan distance between\nE and I is you have to increment x by 1 and you have\nto document y by 1.",
    "start": "2727410",
    "end": "2734370"
  },
  {
    "text": "So instead of saying that the\ncost of state E is 0, I'm",
    "start": "2734370",
    "end": "2740560"
  },
  {
    "text": "saying that it's 2. Is that clear why\nI'm doing that?",
    "start": "2740560",
    "end": "2745980"
  },
  {
    "text": "So now I expand E, I think about\nthe children B,D,F,H --",
    "start": "2745980",
    "end": "2751140"
  },
  {
    "text": "BDFH, and those children now\nare not the same cost.",
    "start": "2751140",
    "end": "2757789"
  },
  {
    "text": "Even though it costs the same\namount to go from E to each of its children, going from its\nchildren to the goal, going",
    "start": "2757790",
    "end": "2766579"
  },
  {
    "text": "from each child to the goal does\nnot cost the same amount. If I were to go from E to\nB, that's a cost of 1.",
    "start": "2766580",
    "end": "2776610"
  },
  {
    "text": "But the Manhattan distance\nfrom B to I is 3.",
    "start": "2776610",
    "end": "2782090"
  },
  {
    "text": "So I'm estimating, then, that\nthe cost of making the decision go from E to B is 4.",
    "start": "2782090",
    "end": "2791030"
  },
  {
    "text": "The real cost of going from E\nto B plus the estimated cost",
    "start": "2791030",
    "end": "2796330"
  },
  {
    "text": "of going from B to I. Similarly,\nif I go from E to",
    "start": "2796330",
    "end": "2802350"
  },
  {
    "text": "D, the Manhattan distance is\n3, so that's a length 4.",
    "start": "2802350",
    "end": "2807370"
  },
  {
    "text": "If I go from E to F, Manhattan\ndistance from F to I is just 1, so the total cost\nis just 2.",
    "start": "2807370",
    "end": "2814910"
  },
  {
    "text": "So now rather than circling out\nfrom the starting point,",
    "start": "2814910",
    "end": "2820250"
  },
  {
    "text": "my next step is biased\ntoward the goal. So my next step is biased toward\nso the remaining items,",
    "start": "2820250",
    "end": "2829700"
  },
  {
    "text": "the smallest cost is 2,\nso the next place that I expand is EF.",
    "start": "2829700",
    "end": "2837430"
  },
  {
    "text": "F's children are C, E, I.\nE is already here, so I",
    "start": "2837430",
    "end": "2842880"
  },
  {
    "text": "only think of CI. C and I also have different\ncosts, So the cost of going",
    "start": "2842880",
    "end": "2852070"
  },
  {
    "text": "EFC, EFC, the direct cost is 2\nand the estimated distance,",
    "start": "2852070",
    "end": "2859630"
  },
  {
    "text": "the Manhattan distance between C\nand I is also 2, so that's a cost 4 whereas the cost of EFI,\nEFI has a direct cost of",
    "start": "2859630",
    "end": "2868529"
  },
  {
    "text": "2 and the Manhattan distance\nfrom I to I is 0.",
    "start": "2868530",
    "end": "2874300"
  },
  {
    "text": "So now I look for the minimum\ndistance that's remaining, so",
    "start": "2874300",
    "end": "2879730"
  },
  {
    "text": "that's going to be H. I expand\nH, the children are E, G, I.",
    "start": "2879730",
    "end": "2887180"
  },
  {
    "text": "So E is already here. I think about GI. Same sort of deal, some of them\nare short, some of them",
    "start": "2887180",
    "end": "2892286"
  },
  {
    "text": "are long and as I proceed to\nthe search, I very quickly find I without having ever\nlooked in the wrong direction,",
    "start": "2892286",
    "end": "2902809"
  },
  {
    "text": "or at least having\nlooked minimally in the wrong direction. Is that clear? So the idea in a heuristic is to\nadd an estimate of how much",
    "start": "2902810",
    "end": "2915940"
  },
  {
    "text": "it will cost to complete the\npath so that you bias the",
    "start": "2915940",
    "end": "2921280"
  },
  {
    "text": "search toward the goal. Rather than making circles\nthat spiral out from the",
    "start": "2921280",
    "end": "2926860"
  },
  {
    "text": "starting point, make\nthe spirals biased toward the goal.",
    "start": "2926860",
    "end": "2932090"
  },
  {
    "text": "And here's the way\nyou do that. It's very easy. All you do is every place we\nwould have looked at cost",
    "start": "2932090",
    "end": "2937589"
  },
  {
    "text": "before, add the heuristic\nfunction. So you have to add a heuristic\nfunction, that's the part",
    "start": "2937590",
    "end": "2944170"
  },
  {
    "text": "that's hard. The code, given the heuristic\nfunction, is easy. The really hard part is actually\nfiguring out what a",
    "start": "2944170",
    "end": "2951050"
  },
  {
    "text": "reasonable heuristic is. The reason that's hard is that\nyou have to be careful not to",
    "start": "2951050",
    "end": "2958130"
  },
  {
    "text": "miss the solution. So the heuristic function\ncan't be bigger than the",
    "start": "2958130",
    "end": "2965700"
  },
  {
    "text": "actual distance. OK, why is that? The agenda is trying to keep\ntrack of all the possible",
    "start": "2965700",
    "end": "2971590"
  },
  {
    "text": "places that you could\nlook next. If your heuristic function makes\nthe next step look too",
    "start": "2971590",
    "end": "2980230"
  },
  {
    "text": "big, it'll be taken out of the\nagenda and never appear again,",
    "start": "2980230",
    "end": "2986160"
  },
  {
    "text": "and you'll never\nfind that path. So when you're making a\nheuristic function, you have",
    "start": "2986160",
    "end": "2991930"
  },
  {
    "text": "to be very careful not to ever\noverestimate the distance from",
    "start": "2991930",
    "end": "2997300"
  },
  {
    "text": "where you are to the goal. If you ever overestimate it,\nthen you can exclude forever",
    "start": "2997300",
    "end": "3004920"
  },
  {
    "text": "more, so think about the agenda\nas a pruning operation.",
    "start": "3004920",
    "end": "3010089"
  },
  {
    "text": "We did this starting\nlast time. When we think about pruning,\nwe pop off things from the agenda. We say --",
    "start": "3010090",
    "end": "3015130"
  },
  {
    "text": "don't ever need to look there,\ndon't need to look there. We pruned it. ",
    "start": "3015130",
    "end": "3021660"
  },
  {
    "text": "If you have a heuristic that it\nis too big you can prune a path that was the answer.",
    "start": "3021660",
    "end": "3028970"
  },
  {
    "text": "So you have to be careful\nnever to do that. So it's asymmetrical. If you were to put in a\nheuristic that is too small,",
    "start": "3028970",
    "end": "3038300"
  },
  {
    "text": "that causes you to underestimate\nthe penalty of going in the wrong direction.",
    "start": "3038300",
    "end": "3045109"
  },
  {
    "text": "So if you said, I'm trying to\ngo from Kansas to Boston and you inadvertently said that\nWyoming really didn't cost",
    "start": "3045110",
    "end": "3052740"
  },
  {
    "text": "anything, then you would not\nnecessarily exclude the",
    "start": "3052740",
    "end": "3058830"
  },
  {
    "text": "correct answer, but you would\ninclude and cause the search to consider a necessary path.",
    "start": "3058830",
    "end": "3067140"
  },
  {
    "text": "So the idea is that you would\nlike the heuristic to be the same as the real cost\nor smaller.",
    "start": "3067140",
    "end": "3076299"
  },
  {
    "text": "You don't want to end up solving\nanother search problem in order to calculate it,\nbecause that will increase the",
    "start": "3076300",
    "end": "3082680"
  },
  {
    "text": "cost of doing the\nsearch too much. So you would like some number\nthat's easy to calculate that",
    "start": "3082680",
    "end": "3090280"
  },
  {
    "text": "has the guarantee that it will\nalways be less than or equal to the actual cost, and that's\nthe art of doing a heuristic.",
    "start": "3090280",
    "end": "3098200"
  },
  {
    "text": "If you satisfy those, then that\nprevious algorithm that we looked at, which is -- in the literature it's call\nthe A-Star Algorithm for",
    "start": "3098200",
    "end": "3104920"
  },
  {
    "text": "historical reasons. That algorithm, if you obey\nthese rules for finding",
    "start": "3104920",
    "end": "3110640"
  },
  {
    "text": "admission an admissible\nheuristic, if you find an admissible heuristic, then the\nA-Star search will be a lot",
    "start": "3110640",
    "end": "3117590"
  },
  {
    "text": "faster and still find a solution\nwith the same length.",
    "start": "3117590",
    "end": "3122980"
  },
  {
    "text": " OK, so now just to see if you're\nfollowing what I'm",
    "start": "3122980",
    "end": "3128920"
  },
  {
    "text": "saying, here's a question\nto ask yourself. Remember the tiles problem? The tiles problem is the first\nproblem that I did last time.",
    "start": "3128920",
    "end": "3137109"
  },
  {
    "text": "The idea was, imagine\nstarting in this configuration 12345678.",
    "start": "3137110",
    "end": "3142890"
  },
  {
    "text": "Move one tile at a time by\nmoving the tile into the free spot, so I could move 8 to\nthe right or 6 down.",
    "start": "3142890",
    "end": "3150740"
  },
  {
    "text": "Keep doing that until you\nperturb this configuration into this configuration. ",
    "start": "3150740",
    "end": "3158349"
  },
  {
    "text": "We saw last time that there are\na large number of states-- there's a third of a\nmillion states--",
    "start": "3158350",
    "end": "3164390"
  },
  {
    "text": "so this is a big search problem,\neven though it's something you've almost\ncertainly also solved as a child.",
    "start": "3164390",
    "end": "3169625"
  },
  {
    "text": "And in fact, my version, it\nwas the same as yours, I'm sure, was a 4-by-4. I did the 15 puzzle, not\nthe eight puzzle, but",
    "start": "3169625",
    "end": "3177170"
  },
  {
    "text": "it's the same idea. So what I want to do is\nconsider heuristics.",
    "start": "3177170",
    "end": "3184339"
  },
  {
    "text": "Consider three heuristics. Heuristic A is 0. It always returns 0.",
    "start": "3184340",
    "end": "3190850"
  },
  {
    "text": "That's an easy heuristic\nto calculate, right? Heuristic B is sum the number\nof tiles that are",
    "start": "3190850",
    "end": "3198000"
  },
  {
    "text": "in the wrong position. What is heuristic B\nfor this state?",
    "start": "3198000",
    "end": "3203960"
  },
  {
    "text": "AUDIENCE: 8?  PROFESSOR: 8 -- there's 8 tiles",
    "start": "3203960",
    "end": "3210910"
  },
  {
    "text": "that are out of position. So heuristic C is the sum of\nthe Manhattan Distances",
    "start": "3210910",
    "end": "3220359"
  },
  {
    "text": "required to move each title to\ntheir respective locations and",
    "start": "3220360",
    "end": "3231040"
  },
  {
    "text": "then calculate two\npartial sums. Consider MI to be the number of\nmoves and the best solution",
    "start": "3231040",
    "end": "3237480"
  },
  {
    "text": "if you use heuristic I and EI\nis the number of states that are expanded while you're\ndoing the search.",
    "start": "3237480",
    "end": "3244410"
  },
  {
    "text": "If you use heuristic I,\nwhich of the following statements are true?",
    "start": "3244410",
    "end": "3250890"
  },
  {
    "text": "OK, take a minute, talk to your\nneighbor, figure it out which of these are true.",
    "start": "3250890",
    "end": "3257196"
  },
  {
    "text": "[CLASS TALKING]",
    "start": "3257196",
    "end": "3452480"
  },
  {
    "text": "PROFESSOR: OK so what's\nthe smallest numbered correct answer?",
    "start": "3452480",
    "end": "3458090"
  },
  {
    "start": "3458090",
    "end": "3463608"
  },
  {
    "text": "The smallest numbered\ncorrect answer. Oh, come on. Volunteer.",
    "start": "3463608",
    "end": "3469064"
  },
  {
    "text": "Explain it with your neighbor. OK, very good. The smallest numbered correct\nanswer is (1).",
    "start": "3469064",
    "end": "3474540"
  },
  {
    "text": "MA equals MB equals MC. Why is that?",
    "start": "3474540",
    "end": "3479545"
  },
  {
    "text": "How can I prove that MA\nequals MB equals MC. What do I have to do?",
    "start": "3479545",
    "end": "3487496"
  },
  {
    "text": "Yes? AUDIENCE: You'll have\nto reach the shortest possible solution. PROFESSOR: So under what\nconditions will they all reach",
    "start": "3487497",
    "end": "3494810"
  },
  {
    "text": "the same length solution? AUDIENCE: They're all\ndoing backflips. PROFESSOR: They're all\ndoing backflips.",
    "start": "3494810",
    "end": "3501413"
  },
  {
    "text": "There's another condition. Yes? AUDIENCE: That they're all\neither exactly [INAUDIBLE].",
    "start": "3501413",
    "end": "3507430"
  },
  {
    "text": "PROFESSOR: So the heuristics,\nall three heuristics have to",
    "start": "3507430",
    "end": "3512460"
  },
  {
    "text": "be admissible, which means\nthat they have to be",
    "start": "3512460",
    "end": "3517630"
  },
  {
    "text": "non-negative numbers. To be admissible, a heuristic\nhas to be non-negative.",
    "start": "3517630",
    "end": "3523520"
  },
  {
    "text": "And it has to generate an answer\nthat's smaller than the actual number of moves\nnecessary to",
    "start": "3523520",
    "end": "3530310"
  },
  {
    "text": "complete the path. So we have to prove that these\nare all admissible. ",
    "start": "3530310",
    "end": "3538400"
  },
  {
    "text": "So, are they all non-negative? Yes. Are they all less than or\nequal to the number?",
    "start": "3538400",
    "end": "3546900"
  },
  {
    "text": "So let's do that. Let's first of all\nget an answer. So we'll do that after we\ndo the second part.",
    "start": "3546900",
    "end": "3552079"
  },
  {
    "text": "What's the second smallest\ncorrect statement? ",
    "start": "3552080",
    "end": "3558514"
  },
  {
    "text": "Let me see if I can\nanswer it, yes? OK, the answer is 4.",
    "start": "3558514",
    "end": "3564690"
  },
  {
    "text": "So, how do you know that\nEA is bigger than EB is bigger than EC? ",
    "start": "3564690",
    "end": "3570090"
  },
  {
    "text": "So the number of states expanded\nhas to do with the size of the heuristic.",
    "start": "3570090",
    "end": "3575800"
  },
  {
    "text": "If the size of the heuristic is\n0, that's the same as not using a heuristic. That will search all possible\nstates in a breadth-first",
    "start": "3575800",
    "end": "3583120"
  },
  {
    "text": "search fashion. If the heuristic is anything\nthat's bigger, the number of",
    "start": "3583120",
    "end": "3589630"
  },
  {
    "text": "searches will go down. What's the greater than or equal\nto thing doing here?",
    "start": "3589630",
    "end": "3595570"
  },
  {
    "text": "Yes? AUDIENCE: Number (3) is\ntechnically also true, because if (1) is true, then\n(3) has to be true. PROFESSOR: If the number\n(3) is technically",
    "start": "3595570",
    "end": "3603025"
  },
  {
    "text": "the number M. [LAUGHTER]",
    "start": "3603025",
    "end": "3610500"
  },
  {
    "text": "OK, OK, OK. [APPLAUSE] OK, class, three plus.",
    "start": "3610500",
    "end": "3619070"
  },
  {
    "text": "Freeman, oh well.",
    "start": "3619070",
    "end": "3624240"
  },
  {
    "text": "Yes, you're right. Yes, I agree. Did you raise your\nhand for (3)? ",
    "start": "3624240",
    "end": "3631120"
  },
  {
    "text": "So (3) is technically the\nsecond, yes that's right, that's right.",
    "start": "3631120",
    "end": "3636990"
  },
  {
    "text": "OK so moving on. Number (5) --",
    "start": "3636990",
    "end": "3642150"
  },
  {
    "text": "the same best solution\nwill result for all the heuristics -- true or false? ",
    "start": "3642150",
    "end": "3656100"
  },
  {
    "text": "Come on, things can only\ngo downhill for me. So the same best solution will\nresult for all of the",
    "start": "3656100",
    "end": "3664290"
  },
  {
    "text": "heuristics?  How could it possibly\nbe false?",
    "start": "3664290",
    "end": "3671260"
  },
  {
    "text": "Right? Didn't we already said MA was\nequal to MB equals MC. ",
    "start": "3671260",
    "end": "3682434"
  },
  {
    "text": "Yeah? AUDIENCE: It's the same amount\nof moves, but maybe not exactly the same solutions. So if there are multiple\nsolutions of the same length,",
    "start": "3682434",
    "end": "3691340"
  },
  {
    "text": "the difference heuristics don't\nhave to give you the same solution exactly.",
    "start": "3691340",
    "end": "3696579"
  },
  {
    "text": "They have to give you solutions with the same length. ",
    "start": "3696580",
    "end": "3702180"
  },
  {
    "text": "So what happens with the\nheuristics is you perturb the order of search.",
    "start": "3702180",
    "end": "3707560"
  },
  {
    "text": "If you perturb the order of\nsearch, the only thing that is proved is that you get a minimum\nlength solution, not",
    "start": "3707560",
    "end": "3714260"
  },
  {
    "text": "the same minimum length\nsolution. This particular problem has lots\nof solutions and so you don't necessarily get the same\nsolution when you use",
    "start": "3714260",
    "end": "3721329"
  },
  {
    "text": "different heuristics, OK? So the final point is that the\naddition of the heuristics can",
    "start": "3721330",
    "end": "3731620"
  },
  {
    "text": "be extremely effective. If you run this problem with\nour search algorithm, you",
    "start": "3731620",
    "end": "3740760"
  },
  {
    "text": "always get solutions with\n22 moves in them. That's good because all the\nheuristics were admissible so",
    "start": "3740760",
    "end": "3747770"
  },
  {
    "text": "you always get a right answer\n-- a shortest answer.",
    "start": "3747770",
    "end": "3753390"
  },
  {
    "text": "But the number of visited and\nexpanded are drastically different when you add\nthe heuristics.",
    "start": "3753390",
    "end": "3761200"
  },
  {
    "text": "So if you use here heuristic A,\nwhich is equivalent to no",
    "start": "3761200",
    "end": "3767150"
  },
  {
    "text": "heuristic, you end up visiting\n170,000 states to find this",
    "start": "3767150",
    "end": "3773799"
  },
  {
    "text": "answer, where if you used the\nManhattan distance to the goal, the sum of the Manhattan\ndistances, you do a very small",
    "start": "3773800",
    "end": "3781190"
  },
  {
    "text": "fraction of that. So the point is that this stuff\nmatters, especially when you do a higher-dimension\nsearch, which is all of the",
    "start": "3781190",
    "end": "3788859"
  },
  {
    "text": "searches that we'll will\nbe interested in. So the idea is that the order\nreally does matter and with",
    "start": "3788860",
    "end": "3795970"
  },
  {
    "text": "that, I'll conclude with a\nreminder that tomorrow evening is the makeup/retake day\nfor Nano Quizzes.",
    "start": "3795970",
    "end": "3803830"
  },
  {
    "text": "Please come to the lab if\nyou'd like to make up or retake the Nano Quiz. ",
    "start": "3803830",
    "end": "3814228"
  }
]