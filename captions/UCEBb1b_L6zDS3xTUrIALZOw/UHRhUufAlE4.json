[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "7410"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation or view\nadditional materials from",
    "start": "7410",
    "end": "13960"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at",
    "start": "13960",
    "end": "19780"
  },
  {
    "text": "ocw.mit.edu. ",
    "start": "19780",
    "end": "25998"
  },
  {
    "text": "AUDIENCE: OK. Number (2) -- (2.3). It says if the code\n[INAUDIBLE]",
    "start": "25998",
    "end": "34962"
  },
  {
    "text": "0 would be the [INAUDIBLE]. I thought it was, you're\ngenerating random values for that?",
    "start": "34962",
    "end": "41440"
  },
  {
    "text": "PROFESSOR: Yeah, you were but if\nyou look at what totes 0 is collecting, so if you look at\nthe, where it draws a random",
    "start": "41440",
    "end": "52570"
  },
  {
    "text": "number, j is indexing\nin totes, right?",
    "start": "52570",
    "end": "57640"
  },
  {
    "text": "So when j is 0 your standard\ndeviation, which is also being indexed by j, is\ngoing to be 0.",
    "start": "57640",
    "end": "64704"
  },
  {
    "text": "So you're always going to\nget the same value. ",
    "start": "64704",
    "end": "70058"
  },
  {
    "text": "Any more questions? No? OK, that was easy.",
    "start": "70058",
    "end": "75490"
  },
  {
    "text": " So in lecture we were talking a\nlot about clustering, we've",
    "start": "75490",
    "end": "83490"
  },
  {
    "text": "been talking about clustering\nthe past, is it two lectures? And we had two different\ntypes of clustering",
    "start": "83490",
    "end": "90549"
  },
  {
    "text": "methods, what were they? AUDIENCE: Hierarchical and--",
    "start": "90550",
    "end": "95630"
  },
  {
    "text": "PROFESSOR: Heirarchical\nand K-means.  Can someone give me a run down\nof what the steps are in",
    "start": "95630",
    "end": "102450"
  },
  {
    "text": "hierarchical clustering? ",
    "start": "102450",
    "end": "110310"
  },
  {
    "text": "AUDIENCE: Something that breaks\neverything down into one cluster [INAUDIBLE] ",
    "start": "110310",
    "end": "116970"
  },
  {
    "text": "PROFESSOR: So let's say I have\na bunch of data points. What would be the first step? ",
    "start": "116970",
    "end": "129750"
  },
  {
    "text": "You're going to first assign\neach point to a cluster. So each point gets\nits own cluster.",
    "start": "129750",
    "end": "140410"
  },
  {
    "text": "And then the next step\nwould be what? ",
    "start": "140410",
    "end": "150237"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: Right, so you're\ngoing to find the two clusters that are closest to each\nother and merge them.",
    "start": "150238",
    "end": "156700"
  },
  {
    "text": "So in this very contrived\nexample, would be these guys. And then you're going to keep\ndoing that until you get to a",
    "start": "156700",
    "end": "165040"
  },
  {
    "text": "certain number of\nclusters, right? So you merge these two, then you\nmight merge these two, and",
    "start": "165040",
    "end": "170480"
  },
  {
    "text": "you might merge these two, et\ncetera, et cetera, right? AUDIENCE: [INAUDIBLE]",
    "start": "170480",
    "end": "178190"
  },
  {
    "text": "PROFESSOR: So you're going to\nset the number of clusters that you want at the outset, so\nI guess, for the mammalian",
    "start": "178190",
    "end": "187590"
  },
  {
    "text": "teeth example, there was\nstopping criteria of two clusters, if I'm not mistaken. ",
    "start": "187590",
    "end": "200080"
  },
  {
    "text": "So let's take a look at the code\nhere that implements a hierarchical cluster. ",
    "start": "200080",
    "end": "207770"
  },
  {
    "text": "So this is just some\ninfrastructure code, it builds up the number of points.",
    "start": "207770",
    "end": "213720"
  },
  {
    "text": "We have a cluster set class,\nwhich we'll go over in a second, and then we just add,\nfor each point we're going to",
    "start": "213720",
    "end": "223150"
  },
  {
    "text": "create a cluster object, and\nadd it to the cluster set.",
    "start": "223150",
    "end": "229610"
  },
  {
    "text": "Let's take a look at\nthe cluster set. ",
    "start": "229610",
    "end": "236390"
  },
  {
    "text": "Cluster set has one attribute,\nthe members attribute, and it",
    "start": "236390",
    "end": "242600"
  },
  {
    "text": "just has a set of points, or a\nset of clusters, actually.",
    "start": "242600",
    "end": "248770"
  },
  {
    "text": "And the key method in here--",
    "start": "248770",
    "end": "253900"
  },
  {
    "text": "or the key methods are\nmerge-1 and merge-n. Merge-n is what actually\nimplements the clustering here.",
    "start": "253900",
    "end": "259799"
  },
  {
    "text": "So you give it the distance\nmetric that you're going to use for your points, the number\nof clusters that you",
    "start": "259800",
    "end": "268210"
  },
  {
    "text": "want at the end of your\nclustering, the history tracker, and then you also tell\nit if you want to print",
    "start": "268210",
    "end": "275530"
  },
  {
    "text": "out some debugging\ninformation. So, which apparently is not used\nto this method, oh, now",
    "start": "275530",
    "end": "284590"
  },
  {
    "text": "it is, merge-1. Anyway, so while we have more\nclusters than the number of",
    "start": "284590",
    "end": "293690"
  },
  {
    "text": "clusters we desire, we're going\nto keep reiterating. And on each step we're going\nto call this function--",
    "start": "293690",
    "end": "299560"
  },
  {
    "text": "or method called merge-1\nand just pass at the distance metric.",
    "start": "299560",
    "end": "304750"
  },
  {
    "text": "And all merge-1 is going to\ndo is it's going to, if",
    "start": "304750",
    "end": "313500"
  },
  {
    "text": "there's only one-- if there's only one cluster\nhere, then it's just going to",
    "start": "313500",
    "end": "319470"
  },
  {
    "text": "return none. If there are two clusters and\nits going to merge them, and",
    "start": "319470",
    "end": "330610"
  },
  {
    "text": "if there are more than two\nclusters, it's going to find the closest, according to\nthe distance metric and",
    "start": "330610",
    "end": "336220"
  },
  {
    "text": "then merge those two.  So then the return value\nis going to be the",
    "start": "336220",
    "end": "343780"
  },
  {
    "text": "two clusters it merged. ",
    "start": "343780",
    "end": "352660"
  },
  {
    "text": "Let's look at the merge\nclusters code.",
    "start": "352660",
    "end": "358200"
  },
  {
    "text": "All it does is it takes the\ntwo clusters and for each",
    "start": "358200",
    "end": "364960"
  },
  {
    "text": "point, in both clusters, it adds\nit to a new list points",
    "start": "364960",
    "end": "371400"
  },
  {
    "text": "and it creates a new cluster\nfrom those points. And then it removes two clusters\nfrom members and adds",
    "start": "371400",
    "end": "378720"
  },
  {
    "text": "the newly created cluster. ",
    "start": "378720",
    "end": "386480"
  },
  {
    "text": "So then, find closest method. ",
    "start": "386480",
    "end": "395870"
  },
  {
    "text": "So what's this bit of\ncode doing here? AUDIENCE: [INAUDIBLE]",
    "start": "395870",
    "end": "401268"
  },
  {
    "start": "401268",
    "end": "407290"
  },
  {
    "text": "PROFESSOR: Right, so we'll get\nto the metric in a second. So it initially finds, it looks\nat the first two members",
    "start": "407290",
    "end": "419010"
  },
  {
    "text": "in the cluster set and it sets\nminDistance to be that, and it sets toMerge to be these\ntwo members.",
    "start": "419010",
    "end": "425290"
  },
  {
    "text": "And then it narrates through\nevery possible pair of",
    "start": "425290",
    "end": "431710"
  },
  {
    "text": "clusters, in this cluster set\nand finds the minimum distance",
    "start": "431710",
    "end": "439560"
  },
  {
    "text": "according to the metric. ",
    "start": "439560",
    "end": "453080"
  },
  {
    "text": "So let's look at the\ncluster class. All the cluster object does\nor class does is it",
    "start": "453080",
    "end": "461540"
  },
  {
    "text": "holds a set of points. It knows the type of point that\nit's holding because that",
    "start": "461540",
    "end": "467900"
  },
  {
    "text": "becomes important, when we talk\nabout the different types of things that we want to\ncluster, and then it also has",
    "start": "467900",
    "end": "474160"
  },
  {
    "text": "something called a centroid. All a centroid is, is just the\nmiddle of the cluster, if you",
    "start": "474160",
    "end": "481150"
  },
  {
    "text": "take all of the points and\naverage their distances, or",
    "start": "481150",
    "end": "486370"
  },
  {
    "text": "average their location. So these different functions,\nthese just compute metrics",
    "start": "486370",
    "end": "496980"
  },
  {
    "text": "about this particular\ncluster, right? So single linkage dist., all\nthis is going to do is it",
    "start": "496980",
    "end": "503610"
  },
  {
    "text": "finds a minimum distance between\nevery pair of points",
    "start": "503610",
    "end": "508919"
  },
  {
    "text": "in the cluster. ",
    "start": "508920",
    "end": "513950"
  },
  {
    "text": "And what does max linkage\ndistance do? I'm sorry I'm mistaken it finds\nthe minimum distance",
    "start": "513950",
    "end": "522719"
  },
  {
    "text": "between this-- a point in this cluster\nand a point in another cluster, I misspoke.",
    "start": "522720",
    "end": "530100"
  },
  {
    "text": "So what does max linkage\ndistance do? AUDIENCE: [INAUDIBLE]",
    "start": "530100",
    "end": "536669"
  },
  {
    "text": "PROFESSOR: The opposite. I have to keep you talking\nor you'll fall asleep.",
    "start": "536669",
    "end": "541680"
  },
  {
    "text": "And then, averageLinkageDist?  Same thing.",
    "start": "541680",
    "end": "546740"
  },
  {
    "text": "This is why having meaningful\nfunction names is important, because it helps you\nexplain code.",
    "start": "546740",
    "end": "553000"
  },
  {
    "text": "So it also has this method in\nhere called update and what update does, is it takes a new\nset of points and it sets the",
    "start": "553000",
    "end": "567570"
  },
  {
    "text": "points that this cluster has,\nto be these new points. And then it computes a new\ncentroid for this cluster.",
    "start": "567570",
    "end": "575440"
  },
  {
    "text": "And the return value is the\ndistance of the old centroid",
    "start": "575440",
    "end": "581990"
  },
  {
    "text": "from the new centroid. And this becomes important in\nsome of the algorithms.",
    "start": "581990",
    "end": "587920"
  },
  {
    "text": " Then there's just some\nbookkeeping stuff here, like",
    "start": "587920",
    "end": "594820"
  },
  {
    "text": "members will just give you all\nthe points in this cluster.",
    "start": "594820",
    "end": "599890"
  },
  {
    "text": "You all know what yield\ndoes, right? AUDIENCE: [INAUDIBLE]",
    "start": "599890",
    "end": "605428"
  },
  {
    "text": "PROFESSOR: OK. So yield returns a generator\nobject, which allows you to iterate over elements.",
    "start": "605428",
    "end": "612200"
  },
  {
    "text": "So this was asked during\nthe quiz review.",
    "start": "612200",
    "end": "617210"
  },
  {
    "text": "What's the difference between\nrange and x range? Right. So if I have a range of values\nit actually returns a",
    "start": "617210",
    "end": "648570"
  },
  {
    "text": "different type. So I can print out\nthis list, right?",
    "start": "648570",
    "end": "656980"
  },
  {
    "text": " In this case, it will print out\nthe type of object it is,",
    "start": "656980",
    "end": "668540"
  },
  {
    "text": "so this is accomplished\nusing yield.",
    "start": "668540",
    "end": "676040"
  },
  {
    "text": "So if I wanted to write this\nmyself, what this is going to",
    "start": "676040",
    "end": "705060"
  },
  {
    "text": "do is going to return something called a generator object. And all it does is, instead of\nholding all the numbers in",
    "start": "705060",
    "end": "712740"
  },
  {
    "text": "memory, it's going to return\nthem one at a time to me. So like when I use range here,\nit constructs a list and it",
    "start": "712740",
    "end": "720520"
  },
  {
    "text": "has all of those integers\nin memory. If I use xrange it's not going\nto hold all the integers in",
    "start": "720520",
    "end": "727330"
  },
  {
    "text": "memory, but I can still\niterate over them one at a time. AUDIENCE: So within that\nfunction [INAUDIBLE]",
    "start": "727330",
    "end": "734877"
  },
  {
    "text": "yield a bunch of times before\nthe function, right? PROFESSOR: Yeah. AUDIENCE: How is that\naccomplished?",
    "start": "734877",
    "end": "741870"
  },
  {
    "text": "Does it operate [INAUDIBLE]\nwithin the way you normally have functions [INAUDIBLE]?",
    "start": "741870",
    "end": "747130"
  },
  {
    "text": "PROFESSOR: Right. So what this tells Python is\nthat when it sees a yield,",
    "start": "747130",
    "end": "754110"
  },
  {
    "text": "it's sort of like a return,\nexcept it's telling Python that I want to come back to this\nlocation at some point.",
    "start": "754110",
    "end": "759220"
  },
  {
    "text": "So it a return just returns\nout of the function completely.",
    "start": "759220",
    "end": "764790"
  },
  {
    "text": "What a yield does is it takes\nthe value that is specified after yield, and it returns to\nthe calling place in the",
    "start": "764790",
    "end": "776720"
  },
  {
    "text": "program that value. But then, when it comes time\nto get a new value, it'll",
    "start": "776720",
    "end": "785980"
  },
  {
    "text": "return back to where\nthis yield exited. So kind of a way maybe\nseeing this is if I",
    "start": "785980",
    "end": "794800"
  },
  {
    "text": "iterate over my xrange. ",
    "start": "794800",
    "end": "823590"
  },
  {
    "text": "Each time it needs new value,\nit's going to go back inside this function and grab it.",
    "start": "823590",
    "end": "828780"
  },
  {
    "text": "So it looks like a function. But what it's actually doing\nis creating what's called a",
    "start": "828780",
    "end": "836240"
  },
  {
    "text": "generator object. And it has these special\nmethods for getting the next value. So it's some nice\nsyntactic sugar.",
    "start": "836240",
    "end": "844990"
  },
  {
    "text": "But it's pretty neat. But that's what's going on with\nthis yield statement here",
    "start": "844990",
    "end": "850279"
  },
  {
    "text": "is that instead of returning the\nentire list of points, or instead of doing it in some\nother way, all it's doing is",
    "start": "850280",
    "end": "859630"
  },
  {
    "text": "just yielding each point one\nat a time so that you can iterate over them. ",
    "start": "859630",
    "end": "870139"
  },
  {
    "text": "So what else?  So here's a method for computing\nthe centroid.",
    "start": "870140",
    "end": "877822"
  },
  {
    "start": "877822",
    "end": "884810"
  },
  {
    "text": "All we are going to do is total\nup where each point is.",
    "start": "884810",
    "end": "895750"
  },
  {
    "text": "And then, take the average\nover all the points. ",
    "start": "895750",
    "end": "902400"
  },
  {
    "text": "Does that makes sense? All right.  So the example we saw\nwas mammal teeth.",
    "start": "902400",
    "end": "912050"
  },
  {
    "text": "And the way that that's\naccomplished in this set of code is we're going to define a\nsub-class of a class, point,",
    "start": "912050",
    "end": "920850"
  },
  {
    "text": "that's call mammal. And what point does is it has a\nname for a given data point.",
    "start": "920850",
    "end": "933190"
  },
  {
    "text": "It has a set of attributes. And then, you can also give it\nsome normalized attributes.",
    "start": "933190",
    "end": "939370"
  },
  {
    "text": "If you don't give it the\nnormalized attributes, then it'll just use the original\nattributes.",
    "start": "939370",
    "end": "944810"
  },
  {
    "text": "So it becomes important\nwhen we talk about-- when we do scaling over data,\nwhich we'll do shortly.",
    "start": "944810",
    "end": "954019"
  },
  {
    "text": "So there's nothing really\nspecial about it except for",
    "start": "954020",
    "end": "959580"
  },
  {
    "text": "this distance function. It's just defining the Euclidean\ndistance for a given",
    "start": "959580",
    "end": "965880"
  },
  {
    "text": "multi-dimensional point. So everyone knows that if\nyou have a point in two",
    "start": "965880",
    "end": "972990"
  },
  {
    "text": "dimensions, then if it's an\nxy point, then it's just",
    "start": "972990",
    "end": "978620"
  },
  {
    "text": "x-squared plus y-squared\n-- square root of. It generalizes to higher\ndimensions if you weren't",
    "start": "978620",
    "end": "984360"
  },
  {
    "text": "already aware. So if I want to find the\nstraight line distance between a point in 3D, it's just going\nto be x-squared plus y-squared",
    "start": "984360",
    "end": "993990"
  },
  {
    "text": "plus z-squared -- square root. That's all. And then, so on and so forth.",
    "start": "993990",
    "end": "999640"
  },
  {
    "start": "999640",
    "end": "1011010"
  },
  {
    "text": "So all this does is it\nsub-classes point. And it has this function,\nscaleFeatures.",
    "start": "1011010",
    "end": "1021070"
  },
  {
    "text": "And what scaleFeatures does\nis it'll take a key.",
    "start": "1021070",
    "end": "1027354"
  },
  {
    "text": "And in this case, we have to\nfind two ways of scaling this data, of scaling this point. So we have the identity, which\nis it's just going to leave",
    "start": "1027354",
    "end": "1033790"
  },
  {
    "text": "every point alone. And then, we have this 1 over\nmax, which is going to scale",
    "start": "1033790",
    "end": "1039819"
  },
  {
    "text": "each attribute by the maximum\nvalue in this data set.",
    "start": "1039819",
    "end": "1044929"
  },
  {
    "text": "And if we look at the data\nset, we know that our max",
    "start": "1044930",
    "end": "1053600"
  },
  {
    "text": "value is 6. So you could do that\nautomatically.",
    "start": "1053600",
    "end": "1058910"
  },
  {
    "text": "But in this case, we're using\nprior knowledge of the data",
    "start": "1058910",
    "end": "1065620"
  },
  {
    "text": "set that we have. ",
    "start": "1065620",
    "end": "1074100"
  },
  {
    "text": "So why don't we do a cluster? So this is going to do a\nhierarchical cluster, right?",
    "start": "1074100",
    "end": "1080540"
  },
  {
    "text": "And what we're going to ask, if\nI just specify the default parameters, all it's going to\ndo is it's going to look for",
    "start": "1080540",
    "end": "1086140"
  },
  {
    "text": "two clusters. It's going to use\nthe identity. And it's just going to print\nout the history, like when",
    "start": "1086140",
    "end": "1093760"
  },
  {
    "text": "it's performed the\ndifferent merges. ",
    "start": "1093760",
    "end": "1101400"
  },
  {
    "text": "Unless I have extraneous code\nthat I'm already running. ",
    "start": "1101400",
    "end": "1130470"
  },
  {
    "text": "So what starts off first is we\nget a lot of merges with just these single element\nclusters, right?",
    "start": "1130470",
    "end": "1137650"
  },
  {
    "text": "So I have a beaver with a\ngroundhog, so I guess they're pretty similar in\nterms of teeth.",
    "start": "1137650",
    "end": "1142740"
  },
  {
    "text": "We have a squirrel with a\nporcupine, wolf with a bear. And so eventually, though, we\nstart finding clusters--",
    "start": "1142740",
    "end": "1153570"
  },
  {
    "text": "a wolf and a bear, I guess,\nare more similar. But they're also similar\nwith a dog.",
    "start": "1153570",
    "end": "1158919"
  },
  {
    "text": "So we're going to start merging\nmulti-point clusters. ",
    "start": "1158920",
    "end": "1167650"
  },
  {
    "text": "So we start seeing to beaver and\ngroundhog cluster is going",
    "start": "1167650",
    "end": "1172770"
  },
  {
    "text": "to get merged with\nthe squirrel and the porcupine cluster. So if you were to visualize\nthis, the reason why it's",
    "start": "1172770",
    "end": "1182460"
  },
  {
    "text": "called hierarchical\nclustering is-- which one did I say? Beaver, groundhog--",
    "start": "1182460",
    "end": "1188010"
  },
  {
    "text": " these guys have been merged\ninto a cluster, right?",
    "start": "1188010",
    "end": "1196019"
  },
  {
    "text": "They started out as\ntheir own cluster. And they've been merged into\ntheir own cluster.",
    "start": "1196020",
    "end": "1201659"
  },
  {
    "text": "And then, the grey squirrel and\nthe porcupine, same thing.",
    "start": "1201660",
    "end": "1206970"
  },
  {
    "text": "They started off with their own\nclusters at the beginning. They got merged. And now, what this step is\nsaying is that these two",
    "start": "1206970",
    "end": "1214580"
  },
  {
    "text": "clusters get merged. So we're building this\ntree, or hierarchy. That's where the hierarchical\ncomes from.",
    "start": "1214580",
    "end": "1219990"
  },
  {
    "text": " So we use hierarchical\nclustering a",
    "start": "1219990",
    "end": "1228720"
  },
  {
    "text": "lot in other fields. So in speech recognition,\nwe can do a hierarchical",
    "start": "1228720",
    "end": "1234660"
  },
  {
    "text": "clustering of speech sounds. So if I have say different\nvowels, and maybe a couple of",
    "start": "1234660",
    "end": "1247169"
  },
  {
    "text": "consonants, I would expect to\nsee, say, these kind of",
    "start": "1247170",
    "end": "1254040"
  },
  {
    "text": "clustered together first.  And so what I might see is these\nwould be fricatives.",
    "start": "1254040",
    "end": "1264730"
  },
  {
    "text": "But then, I might have some\nstops, like \"t\" and \"b\" that get merged first.",
    "start": "1264730",
    "end": "1270100"
  },
  {
    "text": "So it's a way of making these\ngeneralized groupings at",
    "start": "1270100",
    "end": "1276929"
  },
  {
    "text": "different levels. ",
    "start": "1276930",
    "end": "1283450"
  },
  {
    "text": "I don't know. Does anyone have any real\nquestions about hierarchical clustering? ",
    "start": "1283450",
    "end": "1290700"
  },
  {
    "text": "So should I move\non to k-means? All right. So what's the general\nidea with k-means?",
    "start": "1290700",
    "end": "1298590"
  },
  {
    "start": "1298590",
    "end": "1306860"
  },
  {
    "text": "So I start off with a\nset of data points. ",
    "start": "1306860",
    "end": "1317390"
  },
  {
    "text": "What's my first step? AUDIENCE: Choose your total\nnumber of clusters?",
    "start": "1317390",
    "end": "1322570"
  },
  {
    "text": "PROFESSOR: Right, so I'm\ngoing to choose a k. So let's say for giggles we're\ngoing to choose k equals 3.",
    "start": "1322570",
    "end": "1331620"
  },
  {
    "text": "And then, what's my next step?  AUDIENCE: Choose k's\n[INAUDIBLE]?",
    "start": "1331620",
    "end": "1338780"
  },
  {
    "text": "PROFESSOR: So we're going\nto pick k random points from our data set. ",
    "start": "1338780",
    "end": "1345870"
  },
  {
    "text": "All right, and then,\nwhat do I do? ",
    "start": "1345870",
    "end": "1354170"
  },
  {
    "text": "AUDIENCE: Cluster? PROFESSOR: Then you'd cluster. Yeah, all right.",
    "start": "1354170",
    "end": "1359200"
  },
  {
    "text": "So after we've chosen our three\ncentroids here, these become our clusters, right?",
    "start": "1359200",
    "end": "1365275"
  },
  {
    "text": "And we're going to look\nat each point. And we're going to figure\nout which cluster",
    "start": "1365275",
    "end": "1370400"
  },
  {
    "text": "they're closest to. So in this case, this is going\nto be a pretty easy",
    "start": "1370400",
    "end": "1375920"
  },
  {
    "text": "clustering. So all these points are\ngoing to belong here.  All these points are going\nto belong here.",
    "start": "1375920",
    "end": "1384390"
  },
  {
    "text": "All these points are going\nto belong here, right? And then, we're going to update\nour centroid for each",
    "start": "1384390",
    "end": "1392820"
  },
  {
    "text": "of these clusters. And there's going to be a\ndistance that the centroid",
    "start": "1392820",
    "end": "1399340"
  },
  {
    "text": "moves each time we update it. So in this case, the centroid\nmoved quite a bit, right?",
    "start": "1399340",
    "end": "1411920"
  },
  {
    "text": "Then, we're going to find the\nmaximum distance that the centroid moved.",
    "start": "1411920",
    "end": "1417169"
  },
  {
    "text": "And if it's below a certain\ncut off value, then we're going to say, I've got a\ngood enough clustering. If it's above a certain cut off\nvalue, then what I'm going",
    "start": "1417170",
    "end": "1425110"
  },
  {
    "text": "to say is like, this centroid\nmoved quite a bit for this cluster, right?",
    "start": "1425110",
    "end": "1430370"
  },
  {
    "text": "So I'm going to try\nanother iteration. I'm going to say, for each one\nof these points, I'm now going",
    "start": "1430370",
    "end": "1435549"
  },
  {
    "text": "to look and try to the closest\ncluster that it belongs to based on these new centroids.",
    "start": "1435550",
    "end": "1442990"
  },
  {
    "text": "And in this case, nothing's\nreally going to change. So all of the deltas, all of\nthe centroids, are going to",
    "start": "1442990",
    "end": "1448059"
  },
  {
    "text": "stay the same. So it's going to be below\nthe cut off value. And it's going to stop.",
    "start": "1448060",
    "end": "1454340"
  },
  {
    "text": "So what's an advantage of\nk-means over hierarchical",
    "start": "1454340",
    "end": "1463000"
  },
  {
    "text": "clustering?  AUDIENCE: More efficient?",
    "start": "1463000",
    "end": "1470680"
  },
  {
    "text": "PROFESSOR: Yeah. So let's say that I have\na million points. ",
    "start": "1470680",
    "end": "1478620"
  },
  {
    "text": "If I were to hierarchically\ncluster these, that means I'd start off with a million\nclusters. And now, in each iteration,\nI'm just going to",
    "start": "1478620",
    "end": "1484960"
  },
  {
    "text": "reduce it by 1. ",
    "start": "1484960",
    "end": "1493485"
  },
  {
    "text": "I don't know, let's say 3, OK? So on each iteration, we're just\nreducing it by 1, which,",
    "start": "1493485",
    "end": "1502310"
  },
  {
    "text": "if that's all we were doing,\nwould not be so hard. It doesn't take too long\nto count down from a million on a computer.",
    "start": "1502310",
    "end": "1507480"
  },
  {
    "text": "But on each one of these steps,\nwe have to compute the pairwise distance between\neach cluster.",
    "start": "1507480",
    "end": "1514490"
  },
  {
    "text": "So it's going to be n times n\nminus 1 comparisons on each",
    "start": "1514490",
    "end": "1520160"
  },
  {
    "text": "step which, in this first case,\nworks out to a lot. ",
    "start": "1520160",
    "end": "1529410"
  },
  {
    "text": "And it doesn't get\nmuch better. So approximately, right?",
    "start": "1529410",
    "end": "1537520"
  },
  {
    "text": "And it doesn't get much\nbetter as we go down. With k-means, what happens is\nwe just have to perform, on",
    "start": "1537520",
    "end": "1547510"
  },
  {
    "text": "each step, if we have a million\npoints and we have k",
    "start": "1547510",
    "end": "1554120"
  },
  {
    "text": "clusters, we just have to\nperform k times 1 million",
    "start": "1554120",
    "end": "1561600"
  },
  {
    "text": "comparisons. Because for each point, we\nneed to find the closest centroid approximately.",
    "start": "1561600",
    "end": "1570940"
  },
  {
    "text": "So the upshot is that k-means\nwinds up being a lot more efficient on each iteration,\nwhich is why if you have a",
    "start": "1570940",
    "end": "1578210"
  },
  {
    "text": "large number of points, you\nmight want to choose k-means over hierarchical clustering.",
    "start": "1578210",
    "end": "1583360"
  },
  {
    "text": " What's an advantage, though,\nof hierarchical clustering",
    "start": "1583360",
    "end": "1592360"
  },
  {
    "text": "over k-means? Even though it's less efficient,\nwhat's another--",
    "start": "1592360",
    "end": "1599220"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: What's that? AUDIENCE: More thorough. PROFESSOR: More thorough.",
    "start": "1599220",
    "end": "1604570"
  },
  {
    "text": "AUDIENCE: And you can get a lot\nof different levels that you can look at. PROFESSOR: Yeah, you can get\na lot of different levels. So you can look at the\nclusterings from different",
    "start": "1604570",
    "end": "1612730"
  },
  {
    "text": "perspectives. But the key thing with--",
    "start": "1612730",
    "end": "1617957"
  },
  {
    "text": "AUDIENCE: You don't necessarily\nknow how many clusters there actually are.",
    "start": "1617957",
    "end": "1624418"
  },
  {
    "text": "Hierarchical clustering will\ntell you all of the [INAUDIBLE]. You can just go down\nthe tree and--",
    "start": "1624418",
    "end": "1631950"
  },
  {
    "text": "PROFESSOR: Right, so you could\ngo down different levels of the tree and pick however many\nnumber of clusters you want.",
    "start": "1631950",
    "end": "1639130"
  },
  {
    "text": "But the big reason-- or one of the kind of main\nadvantages that hierarchical clustering has over k-means\nis that k-means is random.",
    "start": "1639130",
    "end": "1648830"
  },
  {
    "text": "It's non-deterministic. Hierarchical clustering\nis deterministic.",
    "start": "1648830",
    "end": "1654140"
  },
  {
    "text": "It's always going to give\nyou the same result. With k-means, because your\ninitial starting conditions",
    "start": "1654140",
    "end": "1660840"
  },
  {
    "text": "are random because you're\nchoosing k random points, the end result will be different\neach time.",
    "start": "1660840",
    "end": "1669649"
  },
  {
    "text": "And so when we do k-means\nclustering, this necessarily",
    "start": "1669650",
    "end": "1675340"
  },
  {
    "text": "means that we don't necessarily want to do it once. Like if we choose k equals 3,\nwe might want to do five",
    "start": "1675340",
    "end": "1683780"
  },
  {
    "text": "different k-means clusterings\nand take the best one. ",
    "start": "1683780",
    "end": "1692240"
  },
  {
    "text": "So that's one of the big\npoints with k-means. ",
    "start": "1692240",
    "end": "1699120"
  },
  {
    "text": "There's a degenerate condition\nwith k-means. So if my objective is to--",
    "start": "1699120",
    "end": "1710600"
  },
  {
    "text": "if my stopping criteria is\nthat the centroid doesn't move, what's a really easy way\nto make the centroid not move",
    "start": "1710600",
    "end": "1718690"
  },
  {
    "text": "by choosing k?  What was it?",
    "start": "1718690",
    "end": "1724380"
  },
  {
    "text": "K equals n, right? So if I have n points and I have\nk equals n, then all of",
    "start": "1724380",
    "end": "1732902"
  },
  {
    "text": "my points are going to\nbe their own cluster. And every time I update,\nI'm never going to move my centroid.",
    "start": "1732902",
    "end": "1738150"
  },
  {
    "text": " So in your problem set, you're\ngoing to be asked to compute a standard error for each of the\nclusters and a total error for",
    "start": "1738150",
    "end": "1746935"
  },
  {
    "text": "the entire cluster. So what that is, is if I have\nthe centroids, and I had each",
    "start": "1746935",
    "end": "1760549"
  },
  {
    "text": "point in the centroids-- ",
    "start": "1760550",
    "end": "1775809"
  },
  {
    "text": "so what I'm going to do is I'm\ngoing to take the centroid for each cluster.",
    "start": "1775810",
    "end": "1781370"
  },
  {
    "text": "And I'm going to find the\ndistance from each point in the cluster to the centroid.",
    "start": "1781370",
    "end": "1788049"
  },
  {
    "text": "And then, I'm going to sum up\nall of those distances over the entire cluster. That's going to give\nme my error.",
    "start": "1788050",
    "end": "1795662"
  },
  {
    "text": "Not sure if this equation's\ntotally right. There might be a like of\ndivision in there.",
    "start": "1795662",
    "end": "1802354"
  },
  {
    "text": "But the general idea, what I'm\ntrying to emphasize, is that we can reduce this number\nby just increasing",
    "start": "1802354",
    "end": "1810250"
  },
  {
    "text": "the number of k. And if we make k equal n, then\nthis is going to be 0.",
    "start": "1810250",
    "end": "1815770"
  },
  {
    "text": "So like I was saying with\nstatistics, you never want to trust just one number.",
    "start": "1815770",
    "end": "1821610"
  },
  {
    "text": "With k-means, you never just\nwant to trust one clustering or one measurement of error. You want to look at it from\nmultiple perspectives and",
    "start": "1821610",
    "end": "1828850"
  },
  {
    "text": "advantage points.  So why don't we look at the code\nand try to match up all",
    "start": "1828850",
    "end": "1835840"
  },
  {
    "text": "of that stuff with what you'll\nsee on your problem set? ",
    "start": "1835840",
    "end": "1842860"
  },
  {
    "text": "So the big function to\nlook at for k-means is aptly named k-means.",
    "start": "1842860",
    "end": "1850870"
  },
  {
    "text": "And it's going to take\na set of points. It's going to take a\nnumber of clusters.",
    "start": "1850870",
    "end": "1856520"
  },
  {
    "text": "It's going to take a cut off\nvalue, and a point type, and a",
    "start": "1856520",
    "end": "1861930"
  },
  {
    "text": "variable named maxIters. So first step, we get our\ninitial centroids.",
    "start": "1861930",
    "end": "1869289"
  },
  {
    "text": "All we're going to do is we're\ngoing to sample our points randomly and choose k of them. ",
    "start": "1869290",
    "end": "1876470"
  },
  {
    "text": "Our clusters, we're going\nto represent as a list. And we are going to, for all\nthe points in the initial",
    "start": "1876470",
    "end": "1889280"
  },
  {
    "text": "centroids, we are going\nto add a cluster",
    "start": "1889280",
    "end": "1896600"
  },
  {
    "text": "with just that point. And then, we get into\nour loop here.",
    "start": "1896600",
    "end": "1904789"
  },
  {
    "text": "So what this is saying is, while\nour biggest change in centroid is greater than the\ncut off and we haven't",
    "start": "1904790",
    "end": "1914490"
  },
  {
    "text": "exceeded the number of\niterations, or the maximum number of iterations, we're\ngoing to keep trying to refine",
    "start": "1914490",
    "end": "1921325"
  },
  {
    "text": "our cluster. So that brings up a point I\nactually failed to mention.",
    "start": "1921325",
    "end": "1928669"
  },
  {
    "text": "Why should we have this cut\noff point, maxiters? ",
    "start": "1928670",
    "end": "1934170"
  },
  {
    "text": "AUDIENCE: It'll go forever? PROFESSOR: Yeah, there's a\nchance that, if our cut-off value is too small, or we have a\npoint that's on a border and",
    "start": "1934170",
    "end": "1943059"
  },
  {
    "text": "likes to jump between clusters\nand move the centroid just above the cut off point,\nthat we'll never",
    "start": "1943060",
    "end": "1951790"
  },
  {
    "text": "converge to our cut off. And so we want to set up\na secondary break.",
    "start": "1951790",
    "end": "1956809"
  },
  {
    "text": "So we have this maxIters,\nwhich defaults to 100.",
    "start": "1956810",
    "end": "1962420"
  },
  {
    "text": "So with this set up, though,\nthere's a couple of things you have to consider. And this is, one, you need\nto make sure that",
    "start": "1962420",
    "end": "1969290"
  },
  {
    "text": "maxiters is not too small. Because if it's too small,\nyou're not going to converge.",
    "start": "1969290",
    "end": "1974660"
  },
  {
    "text": "And you don't want to make it\ntoo large, because then your algorithm will just take\nforever to run, right?",
    "start": "1974660",
    "end": "1980270"
  },
  {
    "text": "Likewise, you don't want\nto make your cut off too small, either. So sometimes you have to play\naround with the algorithm to",
    "start": "1980270",
    "end": "1988260"
  },
  {
    "text": "figure out what the best\nparameters are. And that's, oftentimes, more of\nan art than a hard science.",
    "start": "1988260",
    "end": "1997049"
  },
  {
    "text": "So anyway, continuing on.",
    "start": "1997050",
    "end": "2002730"
  },
  {
    "text": "for each iteration, we're\ngoing to set up a new set of clusters. And we're going to set them\ninitially to have no points in them.",
    "start": "2002730",
    "end": "2009140"
  },
  {
    "text": "And then, for all the points in\nour data set, we are going",
    "start": "2009140",
    "end": "2015750"
  },
  {
    "text": "to look for the smallest\ndistance. So that means we are\ngoing to look--",
    "start": "2015750",
    "end": "2021140"
  },
  {
    "text": "we're going to initially set\nour smallest distance to be the distance from the point\nto the first centroid. And then, we're just going to\ninterate through all the",
    "start": "2021140",
    "end": "2028309"
  },
  {
    "text": "centroids, or through all the\nclusters, and then find the smallest distance.",
    "start": "2028310",
    "end": "2033610"
  },
  {
    "text": "Is anyone lost by that? Make sense? ",
    "start": "2033610",
    "end": "2039060"
  },
  {
    "text": "Once we find that, we're just\ngoing to add that point to the new clusters.",
    "start": "2039060",
    "end": "2044710"
  },
  {
    "text": " And then, we're going to\ngo through our update.",
    "start": "2044710",
    "end": "2050908"
  },
  {
    "text": "We're going to iterate through\neach of our clusters. We are going to update the\npoints in the cluster.",
    "start": "2050909",
    "end": "2057530"
  },
  {
    "text": "So remember, the update method\nsets the points of the cluster to be this new set of points\nyou've given it.",
    "start": "2057530",
    "end": "2064010"
  },
  {
    "text": "And it also updates the\ncentroid, or it updates the centroid, and it returns the\ndelta between the old centroid",
    "start": "2064010",
    "end": "2071590"
  },
  {
    "text": "and the new centroid. So that's where this change\nvariable is coming from. And then, we're just go look for\nthe biggest change, right?",
    "start": "2071590",
    "end": "2080388"
  },
  {
    "text": "And if, at some point in our\nclustering, the centroids have stabilized and our clusters\nare relatively stationary,",
    "start": "2080389",
    "end": "2089460"
  },
  {
    "text": "then our max change\nwill be small. And it'll wind up terminating\nthe algorithm.",
    "start": "2089460",
    "end": "2096143"
  },
  {
    "text": " And all this function does is,\nonce it's converged or it's",
    "start": "2096143",
    "end": "2106750"
  },
  {
    "text": "gone through the maximum number\nof iterations, it's just going to find the\nmaximum distance of a",
    "start": "2106750",
    "end": "2113600"
  },
  {
    "text": "point to its centroid. So it's going to look for a\npoint that has a maximum",
    "start": "2113600",
    "end": "2122730"
  },
  {
    "text": "distance from its corresponding\ncentroid. And that's going to be the\ncoherence of this clustering.",
    "start": "2122730",
    "end": "2131500"
  },
  {
    "text": "And then, it's just going to\nreturn a tuple containing the clusters and the maximum\ndistance. ",
    "start": "2131500",
    "end": "2138220"
  },
  {
    "text": "So it's not a hard algorithm\nto understand. And it's pretty simple\nto implement.",
    "start": "2138220",
    "end": "2145890"
  },
  {
    "text": "There any real questions about\nwhat's going on here? ",
    "start": "2145890",
    "end": "2154250"
  },
  {
    "text": "So the example that he went over\nin lecture with k-means",
    "start": "2154250",
    "end": "2162050"
  },
  {
    "text": "was this counties clustering\nexample.",
    "start": "2162050",
    "end": "2167960"
  },
  {
    "text": "So we had a bunch of data of\ndifferent counties in the US.",
    "start": "2167960",
    "end": "2173010"
  },
  {
    "text": "And we just played around with\nclustering them and seeing what we got.",
    "start": "2173010",
    "end": "2178820"
  },
  {
    "text": "So if we made five clusters,\nand we clustered on all the",
    "start": "2178820",
    "end": "2185390"
  },
  {
    "text": "features, wanted to see what the\ndistribution would be for,",
    "start": "2185390",
    "end": "2192210"
  },
  {
    "text": "say, incomes, what this\nfunction, test, is going to do",
    "start": "2192210",
    "end": "2205830"
  },
  {
    "text": "is it's going to take\na k, a cut off,",
    "start": "2205830",
    "end": "2210910"
  },
  {
    "text": "and a number of trials. So remember, we said that\nbecause k-means is non-deterministic, we're going\nto want to run it a number of",
    "start": "2210910",
    "end": "2216670"
  },
  {
    "text": "times to find maybe we get a bad\ninitial set of points for",
    "start": "2216670",
    "end": "2224895"
  },
  {
    "text": "our centroids or for\nour clusters. And that gives us a\nbad clustering.",
    "start": "2224895",
    "end": "2230910"
  },
  {
    "text": "So we're going to run it a\nnumber of times and try and prevent that from happening.",
    "start": "2230910",
    "end": "2236386"
  },
  {
    "text": "AUDIENCE: How do we [INAUDIBLE]\nmultiple runs, because [INAUDIBLE] really different clustering\nhappens [INAUDIBLE]",
    "start": "2236386",
    "end": "2244543"
  },
  {
    "text": "after you run it a\ncouple of times?  PROFESSOR: It can be tricky,\nto be honest.",
    "start": "2244543",
    "end": "2253070"
  },
  {
    "text": "One technique you could use\nwould be to have a training",
    "start": "2253070",
    "end": "2259400"
  },
  {
    "text": "set and a development set.  What I mean by that is, you\nperform a clustering on the",
    "start": "2259400",
    "end": "2268059"
  },
  {
    "text": "training set. And then, you take the\ndevelopment set, and you",
    "start": "2268060",
    "end": "2273980"
  },
  {
    "text": "figure out which clusters\nthey belong to. And then, you measure the error\nof that development set.",
    "start": "2273980",
    "end": "2281470"
  },
  {
    "text": "So once you've assigned these\ndevelopment points to the",
    "start": "2281470",
    "end": "2288170"
  },
  {
    "text": "clusters, you measure the\ndistance to the centroid. And you sum up the squared\ndistances, and you sum up over",
    "start": "2288170",
    "end": "2293750"
  },
  {
    "text": "all the clusters. Then if you do that a number of\ntimes, what you would do is you'd choose the clustering\nthat gave you the smallest",
    "start": "2293750",
    "end": "2302240"
  },
  {
    "text": "error on your development set. And then, you'd say, that's\nprobably my best clustering for this data.",
    "start": "2302240",
    "end": "2308480"
  },
  {
    "text": "So that's one way of doing it. There's multiple ways\nof skinning the cat.",
    "start": "2308480",
    "end": "2317380"
  },
  {
    "text": "Was trying to think of\na good aphorism. And actually, that's what's\non your problem set.",
    "start": "2317380",
    "end": "2322809"
  },
  {
    "text": "One of the problems on your\nproblem set is to cluster based on a holdout set and see\nwhat the effect of the error",
    "start": "2322810",
    "end": "2331490"
  },
  {
    "text": "is on this holdout set. So did that answer\nyour question?",
    "start": "2331490",
    "end": "2338735"
  },
  {
    "text": "AUDIENCE: Yeah. PROFESSOR: OK. And then, choosing k, there's\ndifferent methods",
    "start": "2338736",
    "end": "2345490"
  },
  {
    "text": "for doing it, too. A lot of it is you run a lot\nof experiments and you see",
    "start": "2345490",
    "end": "2350990"
  },
  {
    "text": "what you get. This is where the research part\ncomes in for a lot of applications.",
    "start": "2350990",
    "end": "2357910"
  },
  {
    "text": "So you can also try some other\nautomatic methods, like",
    "start": "2357910",
    "end": "2363670"
  },
  {
    "text": "entropy or other,\nmore complicated measurements of error. But don't worry about those.",
    "start": "2363670",
    "end": "2371910"
  },
  {
    "text": "For our purposes, if you get\nbelow the cut off value, and you run a number of iterations,\nand you've",
    "start": "2371910",
    "end": "2378310"
  },
  {
    "text": "minimized your error on your\ntest set, we'll be happy. ",
    "start": "2378310",
    "end": "2384440"
  },
  {
    "text": "We want you to be familiar with\nk-means, but not experts in it because it's a useful\ntool for your kit.",
    "start": "2384440",
    "end": "2393620"
  },
  {
    "text": "Anyway, so all this code is\ngoing to do is it's going to",
    "start": "2393620",
    "end": "2400850"
  },
  {
    "text": "run a number of trials. It's going to perform\nk-means clustering.",
    "start": "2400850",
    "end": "2406970"
  },
  {
    "text": "And it's going to look for the\nclustering with the smallest",
    "start": "2406970",
    "end": "2416640"
  },
  {
    "text": "maximum distance. So remember, the return value\nof k-means is the maximum",
    "start": "2416640",
    "end": "2423080"
  },
  {
    "text": "distance from a point\nto its centroid. We're going to define our best\nclustering as being the",
    "start": "2423080",
    "end": "2429500"
  },
  {
    "text": "clustering that gives us the\nsmallest max distance. So that's another way you\nwould choose your best",
    "start": "2429500",
    "end": "2436869"
  },
  {
    "text": "clustering. ",
    "start": "2436870",
    "end": "2443470"
  },
  {
    "text": "Yeah, and that's all we're\ngoing to do for this bit of code here. We're going to find the average\nincome in each cluster",
    "start": "2443470",
    "end": "2452350"
  },
  {
    "text": "and draw a histogram. ",
    "start": "2452350",
    "end": "2458110"
  },
  {
    "text": "So I think this is\nactually done.  So we have five clusters.",
    "start": "2458110",
    "end": "2465990"
  },
  {
    "text": "And what they're showing us\nis that the clusters-- if we take the average income\nof the different clusters,",
    "start": "2465990",
    "end": "2472310"
  },
  {
    "text": "they're going to be centered\nat these average incomes. ",
    "start": "2472310",
    "end": "2482215"
  },
  {
    "text": "Let's see what some other\nplots look like. ",
    "start": "2482215",
    "end": "2495529"
  },
  {
    "text": "This set of examples is\nusing a point type that's called county.",
    "start": "2495530",
    "end": "2502620"
  },
  {
    "text": "And county, like the mammal\nclass, inherits from point. And it defines a set of\nfeatures that can be",
    "start": "2502620",
    "end": "2514450"
  },
  {
    "text": "used, or a set of-- it calls them filters. But basically, if you pass it\none of these filter names,",
    "start": "2514450",
    "end": "2520160"
  },
  {
    "text": "like allEducation,\nnoEducational, wealthOnly, noWealth, what this is doing\nis it's selecting",
    "start": "2520160",
    "end": "2528550"
  },
  {
    "text": "this tuple of tuples. And so if I say wealthonly, it's\ngoing to use this tuple",
    "start": "2528550",
    "end": "2536620"
  },
  {
    "text": "as a filter. And for each element in this\ntuple of tuples, it has a",
    "start": "2536620",
    "end": "2546810"
  },
  {
    "text": "tuple that has the name of the\nattribute and whether or not it should be used in\nthe clustering. So if it has a 1, it\nshould be used.",
    "start": "2546810",
    "end": "2552910"
  },
  {
    "text": "If it has a 0, it shouldn't\nbe used. So if we look at how that's\napplied, it'll get a",
    "start": "2552910",
    "end": "2560560"
  },
  {
    "text": "filterSpec. And then, it'll just set an\nattribute called atrFilter.",
    "start": "2560560",
    "end": "2576080"
  },
  {
    "text": "And if we see where that's\nused, then it's going to",
    "start": "2576080",
    "end": "2585230"
  },
  {
    "text": "iterate through all\nof the attributes. And if the given attribute has\na 1, then it's going to",
    "start": "2585230",
    "end": "2593430"
  },
  {
    "text": "include it in the set of\nfeatures that are used in this distance computation.",
    "start": "2593430",
    "end": "2598590"
  },
  {
    "text": " So did that make sense at all? ",
    "start": "2598590",
    "end": "2607390"
  },
  {
    "text": "No? All right. ",
    "start": "2607390",
    "end": "2617866"
  },
  {
    "text": "So the idea is to illustrate\nthat if you use different features when you're doing\nyour clustering, you'll",
    "start": "2617866",
    "end": "2624119"
  },
  {
    "text": "probably attain different\nclusterings. So in that first example\nI showed, we used all the features.",
    "start": "2624120",
    "end": "2630269"
  },
  {
    "text": "But in this example, we are\ngoing to look at only wealth.",
    "start": "2630270",
    "end": "2636410"
  },
  {
    "text": "And that includes the features,\nif we look at this",
    "start": "2636410",
    "end": "2643170"
  },
  {
    "text": "set of filters here, it's going\nto include the home value, the income,\nthe poverty.",
    "start": "2643170",
    "end": "2650930"
  },
  {
    "text": "And then, all the other\nattributes, like population change, it's not include.",
    "start": "2650930",
    "end": "2656000"
  },
  {
    "text": "So those aren't going to be\nused in the clusterings. So this is going to change what\nour clusters look like.",
    "start": "2656000",
    "end": "2664280"
  },
  {
    "text": "So if we look at what we have\nfor our clusters-- well, that's not very clear.",
    "start": "2664280",
    "end": "2670295"
  },
  {
    "text": " Yeah, so let's see\nwhat happens.",
    "start": "2670295",
    "end": "2677790"
  },
  {
    "start": "2677790",
    "end": "2690245"
  },
  {
    "text": "I'm not sure that's really\ngoing to show us. ",
    "start": "2690245",
    "end": "2695820"
  },
  {
    "text": "Probably better if I show\nthem all at once, right? ",
    "start": "2695820",
    "end": "2705225"
  },
  {
    "text": "So this will take a while. ",
    "start": "2705225",
    "end": "2728890"
  },
  {
    "text": "Yes? AUDIENCE: Actually I had just\none question [INAUDIBLE] but there is a method showing\nus [INAUDIBLE] iterative",
    "start": "2728890",
    "end": "2738218"
  },
  {
    "text": "additionally? PROFESSOR: Mm-hm. AUDIENCE: [INAUDIBLE] PROFESSOR: It's like iterValues\nor iterKeys, yeah.",
    "start": "2738218",
    "end": "2744790"
  },
  {
    "text": "AUDIENCE: I was wondering how\nto go about using that in actual code. PROFESSOR: In actual code?",
    "start": "2744790",
    "end": "2750760"
  },
  {
    "text": "So you know that if you\nhave a dictionary, d,",
    "start": "2750760",
    "end": "2756470"
  },
  {
    "text": "you can do like d.keys.  So remember I was demo-ing\nthat code, the difference",
    "start": "2756470",
    "end": "2764820"
  },
  {
    "text": "between range and xrange? Same thing. This is going to return\nan actual list of",
    "start": "2764820",
    "end": "2770059"
  },
  {
    "text": "all the keys, right? What's d.iterkeys returns is a\ngenerator object that gives",
    "start": "2770060",
    "end": "2778720"
  },
  {
    "text": "you, one by one by one, each\nkey in the dictionary. So a lot of times, you guys in\nyour code will use something",
    "start": "2778720",
    "end": "2785319"
  },
  {
    "text": "like for k in d.keys(): to\niterate through all the keys",
    "start": "2785320",
    "end": "2792726"
  },
  {
    "text": "in the dictionary. What this method does, though,\nis it creates an actual copy",
    "start": "2792726",
    "end": "2799260"
  },
  {
    "text": "of that list of keys, right? So when you call d.keys, if you\nhave a lot of keys in your",
    "start": "2799260",
    "end": "2806850"
  },
  {
    "text": "dictionary, it's going to go\none by one by one by one through each of those keys,\nadd it to a list, and then",
    "start": "2806850",
    "end": "2813510"
  },
  {
    "text": "return it to you. What d.iterkeys does is it skips\nthat going one by one by",
    "start": "2813510",
    "end": "2821330"
  },
  {
    "text": "one and adding it\nto a new list. It just gives you a generator\nobject which, when you use it",
    "start": "2821330",
    "end": "2826620"
  },
  {
    "text": "in a for loop-- ",
    "start": "2826620",
    "end": "2840240"
  },
  {
    "text": "when you use it in a for loop,\nit's going to just yield the",
    "start": "2840240",
    "end": "2845690"
  },
  {
    "text": "key one at a time without\ncreating a separate list. That make sense?",
    "start": "2845690",
    "end": "2851365"
  },
  {
    "text": "AUDIENCE: So will it\nbe more efficient? PROFESSOR: Yeah, it's generally\nmore efficient. And then, there's also, I think,\niterValues, which goes",
    "start": "2851365",
    "end": "2861170"
  },
  {
    "text": "through each of the values. And then, I think there's\niterItems. ",
    "start": "2861170",
    "end": "2869220"
  },
  {
    "text": "And I think, if I'm not\nmistaken, if you do something just like that, so you do, for\nk, v in d, this is going to",
    "start": "2869220",
    "end": "2884230"
  },
  {
    "text": "iterate through a tuple that\ncontains the key and the values associated\nwith that key.",
    "start": "2884230",
    "end": "2890575"
  },
  {
    "text": "And it's equivalent\nto doing this.",
    "start": "2890575",
    "end": "2900760"
  },
  {
    "text": " Make sense?",
    "start": "2900760",
    "end": "2906156"
  },
  {
    "text": "AUDIENCE: Yeah. ",
    "start": "2906156",
    "end": "2911570"
  },
  {
    "text": "PROFESSOR: So where\nwere we here?  Oh, maybe I shouldn't have\ndone this all at once.",
    "start": "2911570",
    "end": "2917873"
  },
  {
    "start": "2917873",
    "end": "2934882"
  },
  {
    "text": "Why don't we just look at two? ",
    "start": "2934882",
    "end": "2939900"
  },
  {
    "text": "Why don't we take a look at what\nthe average incomes, what the clustering gives us for\naverage incomes for education",
    "start": "2939900",
    "end": "2952950"
  },
  {
    "text": "versus no education. That's probably not going to\nbe a very good comparison.",
    "start": "2952950",
    "end": "2960000"
  },
  {
    "text": "Just doing five trials and two\ntrials for each clustering. ",
    "start": "2960000",
    "end": "2970900"
  },
  {
    "text": "So k-means is the efficient\none, which means that hierarchical would take\na long, long time.",
    "start": "2970900",
    "end": "2975990"
  },
  {
    "text": " There we go.",
    "start": "2975990",
    "end": "2981240"
  },
  {
    "text": " So these are the average incomes\nif we cluster with k",
    "start": "2981240",
    "end": "2991750"
  },
  {
    "text": "equals 50 on education. And then, there should\nbe another one.",
    "start": "2991750",
    "end": "2998704"
  },
  {
    "start": "2998705",
    "end": "3008060"
  },
  {
    "text": "I didn't create the\nnew figure. ",
    "start": "3008060",
    "end": "3014980"
  },
  {
    "text": "So apparently there's\na bug in the code. I wanted to show the two plots\nside by side so you could see",
    "start": "3014980",
    "end": "3020260"
  },
  {
    "text": "the differences. Because what you\nshould see is-- ",
    "start": "3020260",
    "end": "3025960"
  },
  {
    "text": "we would see a different\ndistribution in incomes among the clusters if we clustered\nbased on no education versus",
    "start": "3025960",
    "end": "3033310"
  },
  {
    "text": "education level. But my code is buggy and\nnot working the way",
    "start": "3033310",
    "end": "3040810"
  },
  {
    "text": "I expected it to. So I apologize. ",
    "start": "3040810",
    "end": "3048852"
  }
]