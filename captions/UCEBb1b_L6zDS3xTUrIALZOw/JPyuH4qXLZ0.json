[
  {
    "start": "0",
    "end": "6000"
  },
  {
    "text": "And finally we look at the 6\nAnd at that point we are done. We're going to get started.",
    "start": "6000",
    "end": "11665"
  },
  {
    "text": "Handouts are the by the door\nif anybody didn't pick one up. My name is Charles Leiserson.",
    "start": "11665",
    "end": "18000"
  },
  {
    "text": "I will be lecturing this\ncourse this term, Introduction to Algorithms,\nwith Erik Demaine.",
    "start": "18000",
    "end": "25000"
  },
  {
    "text": "In addition, this is an\nSMA course, a Singapore MIT Alliance course which will be\nrun in Singapore by David Hsu.",
    "start": "25000",
    "end": "35000"
  },
  {
    "text": "And so all the lectures\nwill be videotaped and made available on the Web for\nthe Singapore students,",
    "start": "35000",
    "end": "42724"
  },
  {
    "text": "as well as for MIT students\nwho choose to watch them on the Web.",
    "start": "42724",
    "end": "49000"
  },
  {
    "text": "If you have an issue of not\nwanting to be on the videotape,",
    "start": "49000",
    "end": "55000"
  },
  {
    "text": "you should sit in the back row. OK? Otherwise, you will be on it.",
    "start": "55000",
    "end": "60724"
  },
  {
    "text": "There is a video\nrecording policy, but it seems like they ran out.",
    "start": "60724",
    "end": "66000"
  },
  {
    "text": "If anybody wants\nto see it, people, if they could just\nsort of pass them",
    "start": "66000",
    "end": "71089"
  },
  {
    "text": "around maybe a little bit,\nonce you're done reading it, or you can come up.",
    "start": "71089",
    "end": "76331"
  },
  {
    "text": "I did secure one copy. Before we get into the\ncontent of the course, let's briefly go over\nthe course information",
    "start": "76331",
    "end": "84108"
  },
  {
    "text": "because there are some\nadministrative things that we sort of have to do.",
    "start": "84108",
    "end": "90000"
  },
  {
    "text": "As you can see, this\nterm we have a big staff. Take a look at the handout here. Including this\nterm six TAs, which",
    "start": "90000",
    "end": "97496"
  },
  {
    "text": "is two more TAs than we\nnormally get for this course.",
    "start": "97496",
    "end": "102500"
  },
  {
    "text": "That means recitations\nwill be particularly small. There is a World Wide Web page,\nand you should bookmark that",
    "start": "102500",
    "end": "110500"
  },
  {
    "text": "and go there regularly\nbecause that is where everything will be distributed.",
    "start": "110500",
    "end": "117834"
  },
  {
    "text": "Email. You should not be\nemailing directly to, even though we give you\nour email addresses,",
    "start": "117834",
    "end": "124000"
  },
  {
    "text": "to the individual\nmembers of the staff. You should email us generally. And the reason is you will\nget much faster response.",
    "start": "124000",
    "end": "131284"
  },
  {
    "text": "And also, for any\ncommunications, generally we like to monitor\nwhat the communications are",
    "start": "131284",
    "end": "137600"
  },
  {
    "text": "so it's helpful to have\nemails coming to everybody on the course staff.",
    "start": "137600",
    "end": "143000"
  },
  {
    "text": "As I mentioned, we will be doing\ndistance learning this term. And so you can watch\nlectures online",
    "start": "143000",
    "end": "149500"
  },
  {
    "text": "if you choose to do that. I would recommend, for people\nwho have the opportunity",
    "start": "149500",
    "end": "157000"
  },
  {
    "text": "to watch, to come live. It's better live. You get to interact. There's an intangible that\ncomes with having it live.",
    "start": "157000",
    "end": "165815"
  },
  {
    "text": "In fact, in addition\nto the videos, I meet weekly with\nthe Singapore students",
    "start": "165815",
    "end": "171631"
  },
  {
    "text": "so that they have a\nlive session as well.",
    "start": "171632",
    "end": "177284"
  },
  {
    "text": "Prerequisites. The prerequisites\nfor this course are 6.042, which is Math for\nComputer Science, and 6.001.",
    "start": "177284",
    "end": "185000"
  },
  {
    "text": "You basically need discrete\nmathematics and probability, as well as\nprogramming experience",
    "start": "185000",
    "end": "191220"
  },
  {
    "text": "to take this course\nsuccessfully. People do not have that\nbackground should not",
    "start": "191220",
    "end": "197284"
  },
  {
    "text": "be in the class. We will be checking\nprerequisites. If you have any\nquestions, please",
    "start": "197284",
    "end": "204496"
  },
  {
    "text": "come to talk to us after class. Let's see. Lectures are here.",
    "start": "204496",
    "end": "210500"
  },
  {
    "text": "For SMA students, they\nhave the videotapes and they will also\nhave a weekly meeting.",
    "start": "210500",
    "end": "216428"
  },
  {
    "text": "Students must attend a one hour\nrecitation session each week. There will be new material\npresented in the recitation.",
    "start": "216428",
    "end": "225712"
  },
  {
    "text": "Unlike the lectures,\nthey will not be online. Unlike the lectures,\nthere will not",
    "start": "225712",
    "end": "232200"
  },
  {
    "text": "be lecture notes distributed\nfor the recitations in general. And, yet, there will\nbe material there",
    "start": "232200",
    "end": "240000"
  },
  {
    "text": "that is directly on the exams. And so every term we say\noh, when did you cover that?",
    "start": "240000",
    "end": "247000"
  },
  {
    "text": "That was in recitation. You missed that one. So, recitations are mandatory.",
    "start": "247000",
    "end": "252284"
  },
  {
    "text": "And, in particular,\nalso let me just mention your recitation\ninstructor is the one who",
    "start": "252284",
    "end": "258415"
  },
  {
    "text": "assigns your final grade. So we have a grade meeting\nand keep everybody normal,",
    "start": "258416",
    "end": "264500"
  },
  {
    "text": "but your recitation has the\nfinal say on your grade. Handouts.",
    "start": "264500",
    "end": "270000"
  },
  {
    "text": "Handouts are available\non the course Web page. We will not generally, except\nfor this one, first handout,",
    "start": "270000",
    "end": "279142"
  },
  {
    "text": "be bringing handouts to class. Textbook is this book,\nIntroduction to Algorithms.",
    "start": "279142",
    "end": "286000"
  },
  {
    "text": "MIT students can get it any of\nthe local bookstores, including the MIT Coop.",
    "start": "286000",
    "end": "292000"
  },
  {
    "text": "There is also a\nnew online service that provides textbooks.",
    "start": "292000",
    "end": "297180"
  },
  {
    "text": "You can also get a\ndiscount if you buy it at the MIT Press Bookstore.",
    "start": "297180",
    "end": "304000"
  },
  {
    "text": "There is a coupon in the MIT\nStudent Telephone Directory",
    "start": "304000",
    "end": "309450"
  },
  {
    "text": "for a discount on\nMIT Press books. And you can use that to purchase\nthis book at a discount.",
    "start": "309450",
    "end": "317000"
  },
  {
    "text": "Course website. This is the course website. It links to the\nStellar website, which",
    "start": "317000",
    "end": "324108"
  },
  {
    "text": "is where, actually,\neverything will be kept.",
    "start": "324108",
    "end": "330000"
  },
  {
    "text": "And SMA students have\ntheir own website. Some students find this\ncourse particularly challenges",
    "start": "330000",
    "end": "336108"
  },
  {
    "text": "so we will have extra help. We will post weekly\noffice hours on the course",
    "start": "336108",
    "end": "342500"
  },
  {
    "text": "website for the TAs. And then as an\nexperiment this term, we are going to offer\nhomework labs for this class.",
    "start": "342500",
    "end": "351000"
  },
  {
    "text": "What a homework lab is,\nis it's a place and a time you can go where other\npeople in the course",
    "start": "351000",
    "end": "358500"
  },
  {
    "text": "will go to do homework. And there will be typically\ntwo TAs who staff the lab.",
    "start": "358500",
    "end": "365360"
  },
  {
    "text": "And so, as you're\nworking on your homework, you can get help from\nthe TAs if you need it.",
    "start": "365360",
    "end": "371331"
  },
  {
    "text": "And it's generally a place,\nwe're going to schedule those, and they will be on the course\ncalendar for where it is",
    "start": "371332",
    "end": "378535"
  },
  {
    "text": "and when it is that they\nwill be held, but usually Sundays 2:00 to 4:00 pm, or\nelse it will be some evening.",
    "start": "378535",
    "end": "386444"
  },
  {
    "text": "I think the first one\nis an evening, right? Near to when the\nhomework is due.",
    "start": "386444",
    "end": "393333"
  },
  {
    "text": "Your best bet is try\nto do the homework in advance of the homework lab.",
    "start": "393333",
    "end": "399000"
  },
  {
    "text": "But then, if you\nwant extra help, if you want to talk over\nyour solutions with people",
    "start": "399000",
    "end": "405000"
  },
  {
    "text": "because as we will\ntalk about problem sets you can solve in collaboration\nwith other people in the class.",
    "start": "405000",
    "end": "414200"
  },
  {
    "text": "In addition, there are several\npeer assistance programs.",
    "start": "414200",
    "end": "420000"
  },
  {
    "text": "Also the office of\nMinority Education has an assistance\nprogram, and those usually",
    "start": "420000",
    "end": "425776"
  },
  {
    "text": "get booked up pretty quickly. If you're interested\nin those, good idea",
    "start": "425776",
    "end": "430800"
  },
  {
    "text": "to make an appointment to\nget there and get help soon. The homework labs, I hope a lot\nof people will try that out.",
    "start": "430800",
    "end": "439666"
  },
  {
    "text": "We've never done this. I don't know of\nany other course. Do other people know of courses\nat MIT that have done this?",
    "start": "439666",
    "end": "448000"
  },
  {
    "text": "6.011 did it, OK. Good. And was it successful\nin that class?",
    "start": "448000",
    "end": "454500"
  },
  {
    "text": "It never went, OK. Good. [LAUGHTER] We will see. If it's not paying\noff then we will just",
    "start": "454500",
    "end": "463000"
  },
  {
    "text": "return to ordinary office\nhours for those TAs, but I think for some students\nthat is a good opportunity.",
    "start": "463000",
    "end": "472000"
  },
  {
    "text": "If you wish to be\nregistered in this course, you must sign up on\nthe course Web page.",
    "start": "472000",
    "end": "480664"
  },
  {
    "text": "So, that is requirement one. It must be done today.",
    "start": "480664",
    "end": "486270"
  },
  {
    "text": "You will find it difficult to\npass the course if you are not",
    "start": "486270",
    "end": "491800"
  },
  {
    "text": "in the class. And you should\nnotify your TA if you decide to drop so that\nwe can get you off",
    "start": "491800",
    "end": "500452"
  },
  {
    "text": "and stop the mailings,\nstop the spam. And you should register\ntoday before 7:00 PM.",
    "start": "500452",
    "end": "509000"
  },
  {
    "text": "And then we're going to email\nyour recitation assignment to you before Noon tomorrow.",
    "start": "509000",
    "end": "514199"
  },
  {
    "text": "And if you don't receive this\ninformation by Thursday Noon, please send us an email\nto the course staff",
    "start": "514200",
    "end": "521855"
  },
  {
    "text": "generally, not to\nme individually, saying that you didn't receive\nyour recitation assignment.",
    "start": "521856",
    "end": "528000"
  },
  {
    "text": "And so if you haven't\nreceived it by Thursday Noon you want to. I think generally they\nare going to send them",
    "start": "528000",
    "end": "535267"
  },
  {
    "text": "out tonight or at least\nby tomorrow morning. Yeah. OK.",
    "start": "535267",
    "end": "540499"
  },
  {
    "text": "SMA students don't have\nto worry about this. Problem sets. We have nine problem sets\nthat we project will be",
    "start": "540499",
    "end": "546630"
  },
  {
    "text": "assigned during the semester. A couple things\nabout problem sets. Homeworks won't\ngenerally be accepted,",
    "start": "546630",
    "end": "552428"
  },
  {
    "text": "if you have extenuating\ncircumstances you should make prior arrangements\nwith your recitation",
    "start": "552428",
    "end": "557500"
  },
  {
    "text": "instructor. In fact, almost all of\nthe administrative stuff, you shouldn't come\nto me to ask and say",
    "start": "557500",
    "end": "563565"
  },
  {
    "text": "can I hand in something late? You should be talking to\nyour recitation instructor. You can read the other\nthings about the form,",
    "start": "563565",
    "end": "572999"
  },
  {
    "text": "but let me just mention that\nthere are exercises that should be solved but not handed\nin as well to give you drill",
    "start": "572999",
    "end": "581875"
  },
  {
    "text": "on the material. I highly recommend you\ndoing the exercises. They both test your\nunderstanding of the material,",
    "start": "581875",
    "end": "590000"
  },
  {
    "text": "and exercises have this way of\nfinding themselves on quizzes. You're often asked to\ndescribe algorithms.",
    "start": "590000",
    "end": "600000"
  },
  {
    "text": "And here is a little\noutline of what you can use to describe an algorithm.",
    "start": "600000",
    "end": "606500"
  },
  {
    "text": "The grading policy is\nsomething that somehow I cover. And always every term\nthere are at least",
    "start": "606500",
    "end": "615832"
  },
  {
    "text": "a couple of students who pretend\nlike I never showed them this.",
    "start": "615832",
    "end": "620888"
  },
  {
    "text": "If you skip problems it has a\nnonlinear effect on your grade.",
    "start": "620888",
    "end": "628285"
  },
  {
    "text": "Nonlinear, OK? If you don't skip any problems,\nno effect on your grade.",
    "start": "628285",
    "end": "634000"
  },
  {
    "text": "If you skip one problem, a\nhundredth of a letter grade, we can handle that.",
    "start": "634000",
    "end": "639600"
  },
  {
    "text": "But two problems it's a tenth. And, as you see, by the time you\nhave skipped like five letter",
    "start": "639600",
    "end": "647332"
  },
  {
    "text": "grades, it is already\nfive problems. This is not problem\nsets, by the way.",
    "start": "647332",
    "end": "653000"
  },
  {
    "text": "This is problems, OK? You're down a third\nof a letter grade.",
    "start": "653000",
    "end": "659000"
  },
  {
    "text": "And if you don't\ndo nine or more, so that's typically about\nthree to four problem sets,",
    "start": "659000",
    "end": "665000"
  },
  {
    "text": "you don't pass the class. I always have some students\ncoming at the end of the year",
    "start": "665000",
    "end": "671000"
  },
  {
    "text": "saying oh, I didn't\ndo any of my problems. Can you just pass me because\nI did OK on the exams?",
    "start": "671000",
    "end": "678000"
  },
  {
    "text": "Answer no, a very simple answer\nbecause we've said it upfront. So, the problem sets are an\nintegral part of the course.",
    "start": "678000",
    "end": "687000"
  },
  {
    "text": "Collaboration policy. This is extremely important\nso everybody pay attention.",
    "start": "687000",
    "end": "692899"
  },
  {
    "text": "If you are asleep now wake up. Like that's going to\nwake anybody up, right?",
    "start": "692900",
    "end": "699000"
  },
  {
    "text": "[LAUGHTER] The goal of homework. Professor Demaine\nand my philosophy is that the goal of homework is\nto help you learn the material.",
    "start": "699000",
    "end": "708000"
  },
  {
    "text": "And one way of helping\nto learn is not to just be stuck and\nunable to solve something",
    "start": "708000",
    "end": "713600"
  },
  {
    "text": "because then you're\nin no better shape when the exam roles around,\nwhich is where we're actually",
    "start": "713600",
    "end": "720571"
  },
  {
    "text": "evaluating you. So, you're encouraged\nto collaborate. But there are some commonsense\nthings about collaboration.",
    "start": "720571",
    "end": "728332"
  },
  {
    "text": "If you go and you\ncollaborate to the extent that all you're doing is getting\nthe information from somebody",
    "start": "728332",
    "end": "735856"
  },
  {
    "text": "else, you're not\nlearning the material and you're not going to\ndo well on the exams.",
    "start": "735856",
    "end": "742000"
  },
  {
    "text": "In our experience, students\nwho collaborate generally do better than students\nwho work alone.",
    "start": "742000",
    "end": "750000"
  },
  {
    "text": "But you owe it to\nyourself, if you're going to work in a study group,\nto be prepared for your study",
    "start": "750000",
    "end": "756200"
  },
  {
    "text": "group meeting. And specifically you\nshould spend a half an hour to 45 minutes on each\nproblem before you",
    "start": "756200",
    "end": "761842"
  },
  {
    "text": "go to group so\nyou're up to speed and you've tried out your ideas.",
    "start": "761842",
    "end": "767000"
  },
  {
    "text": "And you may have\nsolutions to some, you may be stuck\non some other ones, but at least you\napplied yourself to it.",
    "start": "767000",
    "end": "774000"
  },
  {
    "text": "After 30 to 45 minutes, if\nyou cannot get the problem, just sitting there and banging\nyour head against it makes no",
    "start": "774000",
    "end": "780928"
  },
  {
    "text": "sense. It's not a productive\nuse of your time. And I know most of you have\nissues with having time",
    "start": "780928",
    "end": "788000"
  },
  {
    "text": "on your hands, right? Like it's not there. So, don't go banging your\nhead against problems",
    "start": "788000",
    "end": "793600"
  },
  {
    "text": "that are too hard or\nwhere you don't understand what's going on or whatever. That's when the study\ngroup can help out.",
    "start": "793600",
    "end": "801000"
  },
  {
    "text": "And, as I mentioned,\nwe'll have homework labs which will give\nyou an opportunity to go and do that and\ncoordinate with other students",
    "start": "801000",
    "end": "809199"
  },
  {
    "text": "rather than necessarily\nhaving to form your own group. And the TAs will be there.",
    "start": "809200",
    "end": "815000"
  },
  {
    "text": "If your group is unable\nto solve the problem then talk to other groups or ask\nyour recitation instruction.",
    "start": "815000",
    "end": "823000"
  },
  {
    "text": "And, that's how you\ngo about solving them. Writing up the\nproblem sets, however,",
    "start": "823000",
    "end": "829330"
  },
  {
    "text": "is your individual\nresponsibility and should be done alone. You don't write up your problem\nsolutions with other students,",
    "start": "829330",
    "end": "838000"
  },
  {
    "text": "you write them up on your own. And you should on\nyour problem sets,",
    "start": "838000",
    "end": "844428"
  },
  {
    "text": "because this is\nan academic place, we understand that the source\nof academic information",
    "start": "844428",
    "end": "851000"
  },
  {
    "text": "is very important, if you\ncollaborated on solutions you should write a list\nof the collaborators.",
    "start": "851000",
    "end": "858664"
  },
  {
    "text": "Say I worked with so\nand so on this solution. It does not affect your grade.",
    "start": "858664",
    "end": "865000"
  },
  {
    "text": "It's just a question\nof being scholarly. It is a violation of this policy\nto submit a problem solution",
    "start": "865000",
    "end": "874363"
  },
  {
    "text": "that you cannot orally explain\nto a member of the course staff. You say oh, well, my write up is\nsimilar to that other person's.",
    "start": "874363",
    "end": "884000"
  },
  {
    "text": "I didn't copy them. We may ask you to orally\nexplain your solution.",
    "start": "884000",
    "end": "889284"
  },
  {
    "text": "If you are unable,\naccording to this policy, the presumption is\nthat you cheated.",
    "start": "889284",
    "end": "895375"
  },
  {
    "text": "So, do not write up stuff\nthat you don't understand. You should be able to write up\nthe stuff that you understand.",
    "start": "895375",
    "end": "906220"
  },
  {
    "text": "Understand why you're putting\ndown what you're putting down. If it isn't obvious, no\ncollaboration whatsoever",
    "start": "906220",
    "end": "913284"
  },
  {
    "text": "is permitted on exams. Exams is when we evaluate you. And now we're not interested\nin evaluating other people,",
    "start": "913284",
    "end": "921284"
  },
  {
    "text": "we're interested\nin evaluating you. So, no collaboration on exams. We will have a take home\nexam for the second quiz.",
    "start": "921284",
    "end": "931000"
  },
  {
    "text": "You should look at the schedule. If there are problems\nwith the schedule of that, we want to know early.",
    "start": "931000",
    "end": "937360"
  },
  {
    "text": "And we will give\nyou more details about the collaboration in the\nlecture on Monday, November",
    "start": "937360",
    "end": "943500"
  },
  {
    "text": "28th. Now, generally, the lectures\nhere, they're mandatory and you have to know them, but\nI know that some people say gee,",
    "start": "943500",
    "end": "952272"
  },
  {
    "text": "9:30 is kind of\nearly, especially on a Monday or whatever. It can be kind of\nearly to get up.",
    "start": "952272",
    "end": "958750"
  },
  {
    "text": "However, on Monday,\nNovember 28th, you fail the exam if you do\nnot show up to lecture on time.",
    "start": "958750",
    "end": "967304"
  },
  {
    "text": "That one day you must show up. Any questions about that? That one day you\nmust show up here,",
    "start": "967304",
    "end": "974400"
  },
  {
    "text": "even if you've been\nwatching them on the Web. And generally, if you think\nyou have transgressed,",
    "start": "974400",
    "end": "981333"
  },
  {
    "text": "the best is to come to\nus to talk about it. We can usually\nwork something out.",
    "start": "981333",
    "end": "988571"
  },
  {
    "text": "It's when we find somebody has\ntransgressed from a third party",
    "start": "988571",
    "end": "994269"
  },
  {
    "text": "or from obvious analyses\nthat we do with homeworks, that's when things get messy.",
    "start": "994270",
    "end": "1001000"
  },
  {
    "text": "So, if you think, for\nsome reason or other, oh, I may have done\nsomething wrong,",
    "start": "1001000",
    "end": "1007331"
  },
  {
    "text": "please come and talk to us. We actually were students once,\ntoo, albeit many years ago.",
    "start": "1007331",
    "end": "1014855"
  },
  {
    "text": "Any questions? So, this class has\ngreat material.",
    "start": "1014855",
    "end": "1020000"
  },
  {
    "text": "Fabulous material. And it's really fun, but\nyou do have to work hard.",
    "start": "1020000",
    "end": "1033000"
  },
  {
    "text": "Let's talk content. ",
    "start": "1033000",
    "end": "1049000"
  },
  {
    "text": "This is the topic of the\nfirst part of the course. The first part of the course\nis focused on analysis.",
    "start": "1049000",
    "end": "1055000"
  },
  {
    "text": "The second part of the\ncourse is focused on design. Before you can do\ndesign, you have",
    "start": "1055000",
    "end": "1061331"
  },
  {
    "text": "to master a bunch of techniques\nfor analyzing algorithms. And then you'll be in a\nposition to design algorithms",
    "start": "1061331",
    "end": "1069000"
  },
  {
    "text": "that you can analyze and\nthat which are efficient. The analysis of algorithm is\nthe theoretical study -- --",
    "start": "1069000",
    "end": "1086333"
  },
  {
    "text": "of computer program performance\n-- -- and resource usage.",
    "start": "1086333",
    "end": "1101220"
  },
  {
    "text": "And a particular\nfocus on performance. We're studying how\nto make things fast.",
    "start": "1101220",
    "end": "1109500"
  },
  {
    "text": "In particular,\ncomputer programs. We also will discover and\ntalk about other resources",
    "start": "1109500",
    "end": "1117998"
  },
  {
    "text": "such as communication, such\nas memory, whether RAM memory",
    "start": "1117998",
    "end": "1123000"
  },
  {
    "text": "or disk memory. There are other resources\nthat we may care about,",
    "start": "1123000",
    "end": "1129776"
  },
  {
    "text": "but predominantly we\nfocus on performance. Because this is a course\nabout performance,",
    "start": "1129776",
    "end": "1137500"
  },
  {
    "text": "I like to put things in\nperspective a little bit",
    "start": "1137500",
    "end": "1142625"
  },
  {
    "text": "by starting out and asking,\nin programming, what is more",
    "start": "1142625",
    "end": "1150000"
  },
  {
    "text": "important than performance? If you're in an engineering\nsituation and writing code,",
    "start": "1150000",
    "end": "1158000"
  },
  {
    "text": "writing software, what's more\nimportant than performance?",
    "start": "1158000",
    "end": "1164500"
  },
  {
    "text": "Correctness. Good. OK. What else? Simplicity can be.",
    "start": "1164500",
    "end": "1171000"
  },
  {
    "text": "Very good. Yeah. Maintainability often much more\nimportant than performance.",
    "start": "1171000",
    "end": "1180000"
  },
  {
    "text": "Cost. And what type of cost\nare you thinking? No, I mean cost of what?",
    "start": "1180000",
    "end": "1189000"
  },
  {
    "text": "We're talking\nsoftware here, right? What type of cost\ndo you have in mind?",
    "start": "1189000",
    "end": "1200000"
  },
  {
    "text": "There are some costs that\nare involved when programming like programmer time.",
    "start": "1200000",
    "end": "1205856"
  },
  {
    "text": "So, programmer time is another\nthing also that might be. Stability.",
    "start": "1205856",
    "end": "1211000"
  },
  {
    "text": "Robustness of the software. Does it break all the time? What else?",
    "start": "1211000",
    "end": "1218000"
  },
  {
    "start": "1218000",
    "end": "1225000"
  },
  {
    "text": "Come on. We've got a bunch\nof engineers here. A lot of things. How about features?",
    "start": "1225000",
    "end": "1231125"
  },
  {
    "text": "Features can be more important. Having a wider collection of\nfeatures than your competitors.",
    "start": "1231125",
    "end": "1237000"
  },
  {
    "text": "Functionality. Modularity. Is it designed in a way\nwhere you can make changes",
    "start": "1237000",
    "end": "1242927"
  },
  {
    "text": "in a local part of the code and\nyou don't have to make changes across the code in order\nto affect a simple change",
    "start": "1242927",
    "end": "1250903"
  },
  {
    "text": "in the functionality? There is one big one\nwhich definitely, especially in the `90s, was\nlike the big thing in computers.",
    "start": "1250904",
    "end": "1261000"
  },
  {
    "text": "The big thing. Well, security actually. Good. I don't even have that one down.",
    "start": "1261000",
    "end": "1266500"
  },
  {
    "text": "Security is excellent. That's actually been\nmore in the 2000. Security has been\nfar more important",
    "start": "1266500",
    "end": "1273250"
  },
  {
    "text": "often than performance. Scalability has been important,\nalthough scalability, in some sense, is\nperformance related.",
    "start": "1273250",
    "end": "1281500"
  },
  {
    "text": "But, yes, scalability is good. What was the big breakthrough\nand why do people use Macintosh",
    "start": "1281500",
    "end": "1289000"
  },
  {
    "text": "rather than Windows,\nthose people who are of that religion? User-friendliness.",
    "start": "1289000",
    "end": "1295750"
  },
  {
    "text": "Wow. If you look at the number of\ncycles of computers that went into user friendliness\nin the `90s,",
    "start": "1295750",
    "end": "1303363"
  },
  {
    "text": "it grew from almost nothing to\nwhere it's now the vast part of the computation goes\ninto user friendly.",
    "start": "1303363",
    "end": "1312000"
  },
  {
    "text": "So, all those things are more\nimportant than performance. This is a course on performance.",
    "start": "1312000",
    "end": "1320000"
  },
  {
    "text": "Then you can say OK,\nwell, why do we bother and why study algorithms\nand performance if it's",
    "start": "1320000",
    "end": "1328816"
  },
  {
    "text": "at the bottom of the heap? Almost always\npeople would rather",
    "start": "1328816",
    "end": "1335714"
  },
  {
    "text": "have these other things\nthan performance. You go off and you\nsay to somebody,",
    "start": "1335714",
    "end": "1344000"
  },
  {
    "text": "would I rather have performance\nor more user friendliness?",
    "start": "1344000",
    "end": "1352000"
  },
  {
    "text": "It's almost always more\nimportant than performance. Why do we care then?",
    "start": "1352000",
    "end": "1358500"
  },
  {
    "text": "Yeah? ",
    "start": "1358500",
    "end": "1364000"
  },
  {
    "text": "That wasn't user friendly. Sometimes performance\nis correlated with user",
    "start": "1364000",
    "end": "1369250"
  },
  {
    "text": "friendliness, absolutely. Nothing is more frustrating than\nsitting there waiting, right?",
    "start": "1369250",
    "end": "1375000"
  },
  {
    "text": "So, that's a good reason. What are some other reasons why? Sometimes they have\nreal time constraints",
    "start": "1375000",
    "end": "1382625"
  },
  {
    "text": "so they don't actually work\nunless they perform adequately.",
    "start": "1382625",
    "end": "1389000"
  },
  {
    "text": "Yeah? Hard to get, well,\nwe don't usually quantify user friendliness\nso I'm not sure,",
    "start": "1389000",
    "end": "1397000"
  },
  {
    "text": "but I understand\nwhat you're saying. He said we don't get exponential\nperformance improvements",
    "start": "1397000",
    "end": "1405250"
  },
  {
    "text": "in user friendliness. We often don't get that in\nperformance either, by the way.",
    "start": "1405250",
    "end": "1414000"
  },
  {
    "text": "[LAUGHTER] Sometimes\nwe do, but that's good. There are several reasons\nthat I think are important.",
    "start": "1414000",
    "end": "1422000"
  },
  {
    "text": "Once is that often\nperformance measures the line between the\nfeasible and the infeasible.",
    "start": "1422000",
    "end": "1428600"
  },
  {
    "text": "We have heard some\nof these things. For example, when there\nare real time requirements,",
    "start": "1428600",
    "end": "1436000"
  },
  {
    "text": "if it's not fast enough\nit's simply not functional.",
    "start": "1436000",
    "end": "1442000"
  },
  {
    "text": "Or, if it uses too much\nmemory it's simply not going to work for you. And, as a consequence,\nwhat you find is algorithms",
    "start": "1442000",
    "end": "1448360"
  },
  {
    "text": "are on the cutting edge\nof entrepreneurship. If you're talking about\njust re implementing stuff",
    "start": "1448360",
    "end": "1453999"
  },
  {
    "text": "that people did ten\nyears ago, performance isn't that important\nat some level.",
    "start": "1453999",
    "end": "1459000"
  },
  {
    "text": "But, if you're talking\nabout doing stuff that nobody has done\nbefore, one of the reasons",
    "start": "1459000",
    "end": "1464665"
  },
  {
    "text": "often that they haven't\ndone it is because it's too time consuming. Things don't scale and so forth.",
    "start": "1464665",
    "end": "1471600"
  },
  {
    "text": "So, that's one reason, is the\nfeasible versus infeasible. Another thing is that\nalgorithms give you",
    "start": "1471600",
    "end": "1479108"
  },
  {
    "text": "a language for talking\nabout program behavior, and that turns out\nto be a language that",
    "start": "1479108",
    "end": "1485776"
  },
  {
    "text": "has been pervasive\nthrough computer science, is that the theoretical language\nis what gets adopted by all",
    "start": "1485776",
    "end": "1493400"
  },
  {
    "text": "the practitioners because\nit's a clean way of thinking about things. A good way I think\nabout performance,",
    "start": "1493400",
    "end": "1502454"
  },
  {
    "text": "and the reason it's on\nthe bottom of the heap, is sort of like performance is\nlike money, it's like currency.",
    "start": "1502454",
    "end": "1513000"
  },
  {
    "text": "You say what good does a\nstack of hundred dollar bills do for you?",
    "start": "1513000",
    "end": "1518428"
  },
  {
    "text": "Would you rather have food or\nwater or shelter or whatever?",
    "start": "1518428",
    "end": "1523725"
  },
  {
    "text": "And you're willing to\npay those hundred dollar bills, if you have\nhundred dollar bills,",
    "start": "1523725",
    "end": "1531600"
  },
  {
    "text": "for that commodity. Even though water is far more\nimportant to your living.",
    "start": "1531600",
    "end": "1539000"
  },
  {
    "text": "Well, similarly,\nperformance is what you use to pay for user friendliness. It's what you pay for security.",
    "start": "1539000",
    "end": "1546178"
  },
  {
    "text": "And you hear people\nsay, for example, that I want greater\nfunctionality, so people will program\nin Java, even though it's",
    "start": "1546178",
    "end": "1554362"
  },
  {
    "text": "much slower than\nC, because they'll say it costs me maybe\na factor of three",
    "start": "1554362",
    "end": "1560331"
  },
  {
    "text": "or something in performance\nto program in Java. But Java is worth\nit because it's",
    "start": "1560331",
    "end": "1566444"
  },
  {
    "text": "got all these object oriented\nfeatures and so forth, exception mechanisms and so on.",
    "start": "1566444",
    "end": "1572000"
  },
  {
    "text": "And so people are willing\nto pay a factor of three in performance. So, that's why you\nwant performance",
    "start": "1572000",
    "end": "1578333"
  },
  {
    "text": "because you can use it to\npay for these other things that you want. And that's why, in some sense,\nit's on the bottom of the heap,",
    "start": "1578333",
    "end": "1587000"
  },
  {
    "text": "because it's the universal\nthing that you quantify. Do you want to spend a\nfactor of two on this",
    "start": "1587000",
    "end": "1595663"
  },
  {
    "text": "or spend a factor of three\non security, et cetera? And, in addition, the\nlessons generalize",
    "start": "1595663",
    "end": "1602000"
  },
  {
    "text": "to other resource measures\nlike communication, like memory and so forth.",
    "start": "1602000",
    "end": "1607815"
  },
  {
    "text": "And the last reason we\nstudy algorithm performance is it's tons of fun.",
    "start": "1607815",
    "end": "1614000"
  },
  {
    "text": "Speed is always fun, right? Why do people drive fast\ncars, race horses, whatever?",
    "start": "1614000",
    "end": "1620000"
  },
  {
    "text": "Rockets, et cetera,\nwhy do we do that? Because speed is fun.",
    "start": "1620000",
    "end": "1625700"
  },
  {
    "text": "Ski. Who likes to ski? I love to ski. I like going fast on those skis. It's fun.",
    "start": "1625700",
    "end": "1631000"
  },
  {
    "text": "Hockey, fast sports, right? We all like the fast sports. Not all of us, I mean.",
    "start": "1631000",
    "end": "1636570"
  },
  {
    "text": "Some people say he's\nnot talking to me. OK, let's move on. That's sort of a little bit of a\nnotion as to why we study this,",
    "start": "1636570",
    "end": "1644375"
  },
  {
    "text": "is that it does,\nin some sense, form a common basis for all these\nother things we care about.",
    "start": "1644375",
    "end": "1650714"
  },
  {
    "text": "And so we want to understand\nhow can we generate money",
    "start": "1650714",
    "end": "1657775"
  },
  {
    "text": "for ourselves in computation? We're going to start out\nwith a very simple problem.",
    "start": "1657775",
    "end": "1664000"
  },
  {
    "text": "It's one of the\noldest problems that has been studied in algorithms,\nis the problem of sorting.",
    "start": "1664000",
    "end": "1672000"
  },
  {
    "text": "We're going to actually study\nthis for several lectures because sorting contains\nmany algorithmic techniques.",
    "start": "1672000",
    "end": "1683000"
  },
  {
    "text": "The sorting problem\nis the following.",
    "start": "1683000",
    "end": "1690000"
  },
  {
    "text": "We have a sequence a 1, a 2\nup to a n of numbers as input.",
    "start": "1690000",
    "end": "1701142"
  },
  {
    "text": "And our output is a\npermutation of those numbers.",
    "start": "1701142",
    "end": "1713000"
  },
  {
    "start": "1713000",
    "end": "1722000"
  },
  {
    "text": "A permutation is a\nrearrangement of the numbers. Every number appears exactly\nonce in the rearrangement such",
    "start": "1722000",
    "end": "1733000"
  },
  {
    "text": "that, I sometimes use a dollar\nsign to mean \"such that,\" a 1 is less than or\nequal to a 2 prime.",
    "start": "1733000",
    "end": "1743664"
  },
  {
    "text": "Such that they are monotonically\nincreasing in size.",
    "start": "1743664",
    "end": "1751000"
  },
  {
    "text": "Take a bunch of numbers,\nput them in order.",
    "start": "1751000",
    "end": "1757000"
  },
  {
    "text": "Here's an algorithm to do it.",
    "start": "1757000",
    "end": "1763000"
  },
  {
    "text": "It's called insertion sort. ",
    "start": "1763000",
    "end": "1780000"
  },
  {
    "text": "And we will write this algorithm\nin what we call pseudocode. It's sort of a\nprogramming language,",
    "start": "1780000",
    "end": "1787500"
  },
  {
    "text": "except it's got\nEnglish in there often. And it's just a shorthand for\nwriting for being precise.",
    "start": "1787500",
    "end": "1797000"
  },
  {
    "text": "So this sorts A from 1 to n. And here is the code for it.",
    "start": "1797000",
    "end": "1806000"
  },
  {
    "start": "1806000",
    "end": "1859000"
  },
  {
    "text": "This is what we call pseudocode. And if you don't understand\nthe pseudocode then",
    "start": "1859000",
    "end": "1864632"
  },
  {
    "text": "you should ask questions\nabout any of the notations. You will start to get\nused to it as we go on.",
    "start": "1864632",
    "end": "1873000"
  },
  {
    "text": "One thing is that\nin the pseudocode we use indentation,\nwhere in most languages",
    "start": "1873000",
    "end": "1879816"
  },
  {
    "text": "they have some kind of begin\nend delimiters like curly braces or something in Java\nor C, for example.",
    "start": "1879816",
    "end": "1888332"
  },
  {
    "text": "We just use indentation. The whole idea of\nthe pseudocode is to try to get the algorithms\nas short as possible",
    "start": "1888332",
    "end": "1897220"
  },
  {
    "text": "while still understanding\nwhat the individual steps are. In practice, there\nactually have been",
    "start": "1897220",
    "end": "1904000"
  },
  {
    "text": "languages that use indentation\nas a means of showing the nesting of things. It's generally a bad idea,\nbecause if things go over one",
    "start": "1904000",
    "end": "1912000"
  },
  {
    "text": "page to another, for example,\nyou cannot tell what level of nesting it is.",
    "start": "1912000",
    "end": "1919000"
  },
  {
    "text": "Whereas, with explicit braces\nit's much easier to tell. So, there are reasons why this\nis a bad notation if you were",
    "start": "1919000",
    "end": "1929000"
  },
  {
    "text": "doing software engineering. But it's a good one\nfor us because it just",
    "start": "1929000",
    "end": "1935362"
  },
  {
    "text": "keeps things short and makes\nfewer things to write down. So, this is insertion sort.",
    "start": "1935362",
    "end": "1943000"
  },
  {
    "text": "Let's try to figure out a\nlittle bit what this does.",
    "start": "1943000",
    "end": "1949000"
  },
  {
    "text": "It basically takes an\narray A and at any point",
    "start": "1949000",
    "end": "1954380"
  },
  {
    "text": "the thing to understand is,\nwe're setting basically,",
    "start": "1954380",
    "end": "1962000"
  },
  {
    "text": "we're running the outer\nloop from j is 2 to n,",
    "start": "1962000",
    "end": "1968000"
  },
  {
    "text": "and the inner loop that\nstarts at j minus 1",
    "start": "1968000",
    "end": "1973710"
  },
  {
    "text": "and then goes down\nuntil it's zero. Basically, if we look at\nany point in the algorithm,",
    "start": "1973710",
    "end": "1983776"
  },
  {
    "text": "we essentially are looking\nat some element here j. A of j, the jth element.",
    "start": "1983776",
    "end": "1990000"
  },
  {
    "text": "And what we do essentially\nis we pull a value out here that we call the key.",
    "start": "1990000",
    "end": "1996999"
  },
  {
    "text": "And at this point the\nimportant thing to understand, and we'll talk more about\nthis in recitation on Friday,",
    "start": "1996999",
    "end": "2005600"
  },
  {
    "text": "is that there is an invariant\nthat is being maintained",
    "start": "2005600",
    "end": "2010799"
  },
  {
    "text": "by this loop each time through. And the invariant is that this\npart of the array is sorted.",
    "start": "2010800",
    "end": "2020000"
  },
  {
    "text": "And the goal each time through\nthe loop is to increase, is to add one to the length\nof the things that are sorted.",
    "start": "2020000",
    "end": "2031000"
  },
  {
    "text": "And the way we do that\nis we pull out the key and we just copy\nvalues up like this.",
    "start": "2031000",
    "end": "2038725"
  },
  {
    "text": "And keep copying\nup until we find the place where this\nkey goes, and then we",
    "start": "2038725",
    "end": "2045840"
  },
  {
    "text": "insert it in that place. And that's why it's\ncalled insertion sort.",
    "start": "2045840",
    "end": "2051000"
  },
  {
    "text": "We just sort of move the\nthings, copy the things up",
    "start": "2051000",
    "end": "2056270"
  },
  {
    "text": "until we find where it goes,\nand then we put it into place.",
    "start": "2056270",
    "end": "2061331"
  },
  {
    "text": "And now we have it from A\nfrom one to j is sorted, and now we can\nwork on j plus one.",
    "start": "2061331",
    "end": "2068713"
  },
  {
    "text": "Let's give an example of that. Imagine we are doing\n8, 2, 4, 9, 3, 6.",
    "start": "2068714",
    "end": "2078000"
  },
  {
    "text": "We start out with j equals 2. And we figure out that we\nwant to insert it there.",
    "start": "2078000",
    "end": "2087000"
  },
  {
    "text": "Now we have 2, 8, 4, 9, 3, 6. Then we look at the four and say\noh, well, that goes over here.",
    "start": "2087000",
    "end": "2100000"
  },
  {
    "text": "We get 2, 4, 8, 9, 3, 6\nafter the second iteration of the outer loop.",
    "start": "2100000",
    "end": "2105500"
  },
  {
    "text": "Then we look at 9 and\ndiscover immediately it just goes right there.",
    "start": "2105500",
    "end": "2112000"
  },
  {
    "text": "Very little work\nto do on that step. So, we have exactly the same\noutput after that iteration.",
    "start": "2112000",
    "end": "2120000"
  },
  {
    "text": "Then we look at the\n3 and that's going to be inserted over there.",
    "start": "2120000",
    "end": "2126666"
  },
  {
    "text": "2, 3, 4, 8, 9, and\nthat goes in there.",
    "start": "2126666",
    "end": "2136500"
  },
  {
    "text": "2, 3, 4, 6, 8,",
    "start": "2136500",
    "end": "2144000"
  },
  {
    "text": "Question? ",
    "start": "2144000",
    "end": "2158000"
  },
  {
    "text": "The array initially\nstarts at one, yes. A[1...n], OK? So, this is the\ninsertion sort algorithm.",
    "start": "2158000",
    "end": "2165666"
  },
  {
    "text": "And it's the first algorithm\nthat we're going to analyze.",
    "start": "2165666",
    "end": "2171725"
  },
  {
    "text": "And we're going to\npull out some tools that we have from\nour math background",
    "start": "2171725",
    "end": "2178744"
  },
  {
    "text": "to help to analyze it. First of all, let's take a look\nat the issue of running time.",
    "start": "2178744",
    "end": "2189000"
  },
  {
    "text": "The running time depends,\nof this algorithm depends on a lot of things.",
    "start": "2189000",
    "end": "2197500"
  },
  {
    "text": "One thing it depends\non is the input itself. For example, if the input\nis already sorted -- --",
    "start": "2197500",
    "end": "2215500"
  },
  {
    "text": "then insertion sort has\nvery little work to do. Because every time through it's\ngoing to be like this case.",
    "start": "2215500",
    "end": "2224000"
  },
  {
    "text": "It doesn't have to\nshuffle too many guys over because they're\nalready in place.",
    "start": "2224000",
    "end": "2229284"
  },
  {
    "text": "Whereas, in some sense,\nwhat's the worst case for insertion sort? If it is reverse\nsorted then it's",
    "start": "2229284",
    "end": "2236499"
  },
  {
    "text": "going to have to\ndo a lot of work because it's going to have\nto shuffle everything over",
    "start": "2236499",
    "end": "2243000"
  },
  {
    "text": "on each step of the outer loop. In addition to the actual\ninput it depends, of course,",
    "start": "2243000",
    "end": "2250500"
  },
  {
    "text": "on the input size. ",
    "start": "2250500",
    "end": "2258000"
  },
  {
    "text": "Here, for example,\nwe did six elements. It's going to take longer if\nwe, for example, do six times",
    "start": "2258000",
    "end": "2267500"
  },
  {
    "text": "ten to the ninth elements. If we were sorting\na lot more stuff,",
    "start": "2267500",
    "end": "2273424"
  },
  {
    "text": "it's going to take\nus a lot longer. Typically, the way\nwe handle that is we",
    "start": "2273424",
    "end": "2281635"
  },
  {
    "text": "are going to parameterize\nthings in the input size. We are going to talk\nabout time as a function",
    "start": "2281635",
    "end": "2291284"
  },
  {
    "text": "of the size of\nthings that we are sorting so we can look at\nwhat is the behavior of that.",
    "start": "2291284",
    "end": "2299000"
  },
  {
    "text": "And the last thing I want\nto say about running time is generally we want upper\nbonds on the running time.",
    "start": "2299000",
    "end": "2310000"
  },
  {
    "text": "We want to know that the time is\nno more than a certain amount. And the reason is because\nthat represents a guarantee",
    "start": "2310000",
    "end": "2318500"
  },
  {
    "text": "to the user. If I say it's not going to\nrun, for example, if I tell",
    "start": "2318500",
    "end": "2324071"
  },
  {
    "text": "you here's a program\nand it won't run more than three\nseconds, that gives you",
    "start": "2324071",
    "end": "2330000"
  },
  {
    "text": "real information about how\nyou could use it, for example,",
    "start": "2330000",
    "end": "2335220"
  },
  {
    "text": "in a real time setting. Whereas, if I said\nhere's a program",
    "start": "2335220",
    "end": "2340331"
  },
  {
    "text": "and it goes at\nleast three seconds, you don't know if it's\ngoing to go for three years.",
    "start": "2340331",
    "end": "2347599"
  },
  {
    "text": "It doesn't give you\nthat much guarantee if you are a user of it.",
    "start": "2347600",
    "end": "2353000"
  },
  {
    "text": "Generally we want upper\nbonds because it represents a guarantee to the user.",
    "start": "2353000",
    "end": "2360000"
  },
  {
    "start": "2360000",
    "end": "2370000"
  },
  {
    "text": "There are different kinds\nof analyses that people do. ",
    "start": "2370000",
    "end": "2384000"
  },
  {
    "text": "The one we're mostly\ngoing to focus on",
    "start": "2384000",
    "end": "2390544"
  },
  {
    "text": "is what's called\nworst case analysis. And this is what we do\nusually where we define T of n",
    "start": "2390544",
    "end": "2404995"
  },
  {
    "text": "to be the maximum time\non any input of size n.",
    "start": "2404996",
    "end": "2412142"
  },
  {
    "text": "So, it's the maximum input,\nthe maximum it could possibly cost us on an input of size n.",
    "start": "2412142",
    "end": "2419000"
  },
  {
    "text": "What that does is, if\nyou look at the fact that sometimes the\ninputs are better",
    "start": "2419000",
    "end": "2424220"
  },
  {
    "text": "and sometimes\nthey're worse, we're looking at the\nworst case of those because that's the\nway we're going",
    "start": "2424220",
    "end": "2430888"
  },
  {
    "text": "to be able to make a guarantee. It always does something\nrather than just sometimes",
    "start": "2430888",
    "end": "2436664"
  },
  {
    "text": "does something. So, we're looking\nat the maximum. Notice that if I didn't have\nmaximum then T(n) in some sense",
    "start": "2436664",
    "end": "2444663"
  },
  {
    "text": "is a relation, not a\nfunction, because the time on an input of size n depends\non which input of size n.",
    "start": "2444664",
    "end": "2452000"
  },
  {
    "text": "I could have many\ndifferent times, but by putting\nthe maximum at it, it turns that relation\ninto a function",
    "start": "2452000",
    "end": "2459400"
  },
  {
    "text": "because there's only one\nmaximum time that it will take. Sometimes we will talk\nabout average case.",
    "start": "2459400",
    "end": "2473856"
  },
  {
    "text": "Sometimes we will do this.",
    "start": "2473856",
    "end": "2481000"
  },
  {
    "text": "Here T of n is then the expected\ntime over all inputs of size n.",
    "start": "2481000",
    "end": "2496332"
  },
  {
    "text": "It's the expected time. Now, if I talk about\nexpected time, what else do",
    "start": "2496332",
    "end": "2503280"
  },
  {
    "text": "I need to say here? What does that\nmean, expected time? I'm sorry.",
    "start": "2503280",
    "end": "2509000"
  },
  {
    "text": "Raise your hand. Expected inputs. What does that mean,\nexpected inputs?",
    "start": "2509000",
    "end": "2516000"
  },
  {
    "start": "2516000",
    "end": "2525000"
  },
  {
    "text": "I need more math. What do I need by\nexpected time here, math?",
    "start": "2525000",
    "end": "2530888"
  },
  {
    "text": "You have to take the\ntime of every input and then average them, OK.",
    "start": "2530888",
    "end": "2538000"
  },
  {
    "text": "That's kind of what we\nmean by expected time. Good. Not quite.",
    "start": "2538000",
    "end": "2544000"
  },
  {
    "text": "I mean, what you say\nis completely correct, except is not quite enough.",
    "start": "2544000",
    "end": "2552165"
  },
  {
    "text": "Yeah? It's the time of every\ninput times the probability",
    "start": "2552165",
    "end": "2557905"
  },
  {
    "text": "that it will be that input. It's a way of taking a weighted\naverage, exactly right.",
    "start": "2557905",
    "end": "2565665"
  },
  {
    "text": "How do I know what the\nprobability of every input is?",
    "start": "2565665",
    "end": "2571270"
  },
  {
    "text": "How do I know what the\nprobability a particular input",
    "start": "2571270",
    "end": "2577200"
  },
  {
    "text": "occurs is in a given situation? I don't.",
    "start": "2577200",
    "end": "2583000"
  },
  {
    "text": "I have to make an assumption. What's that assumption called?",
    "start": "2583000",
    "end": "2588400"
  },
  {
    "text": "What kind of assumption\ndo I have to meet?",
    "start": "2588400",
    "end": "2593875"
  },
  {
    "text": "I need an assumption -- -- of\nthe statistical distribution",
    "start": "2593875",
    "end": "2606855"
  },
  {
    "text": "of inputs. Otherwise, expected time\ndoesn't mean anything because I don't know what the\nprobability of something is.",
    "start": "2606855",
    "end": "2618000"
  },
  {
    "text": "In order to do probability,\nyou need some assumptions and you've got to state\nthose assumptions clearly.",
    "start": "2618000",
    "end": "2628000"
  },
  {
    "text": "One of the most\ncommon assumptions is that all inputs\nare equally likely.",
    "start": "2628000",
    "end": "2634713"
  },
  {
    "text": "That's called the\nuniform distribution. Every input of size n is equally\nlikely, that kind of thing.",
    "start": "2634713",
    "end": "2644000"
  },
  {
    "text": "But there are other ways that\nyou could make that assumption, and they may not all be true.",
    "start": "2644000",
    "end": "2651912"
  },
  {
    "text": "This is much more\ncomplicated, as you can see. Fortunately, all of you have a\nstrong probability background.",
    "start": "2651912",
    "end": "2660000"
  },
  {
    "text": "And so we will not have\nany trouble addressing these probabilistic\nissues of dealing",
    "start": "2660000",
    "end": "2667000"
  },
  {
    "text": "with expectations and such. If you don't, time\nto go and say gee,",
    "start": "2667000",
    "end": "2674000"
  },
  {
    "text": "maybe I should take\nthat Probability class that is a prerequisite\nfor this class.",
    "start": "2674000",
    "end": "2682180"
  },
  {
    "text": "The last one I am going to\nmention is best case analysis.",
    "start": "2682180",
    "end": "2689180"
  },
  {
    "text": "And this I claim is bogus. Bogus. No good.",
    "start": "2689180",
    "end": "2695000"
  },
  {
    "text": "Why is best-case analysis bogus? Yeah?",
    "start": "2695000",
    "end": "2700333"
  },
  {
    "text": "The best case probably\ndoesn't ever happen. Actually, it's interesting\nbecause for the sorting",
    "start": "2700333",
    "end": "2706816"
  },
  {
    "text": "problem, the most common\nthings that get sorted are things that are already\nsorted interestingly,",
    "start": "2706816",
    "end": "2715000"
  },
  {
    "text": "or at least almost sorted. For example, one of the most\ncommon things that are sorted",
    "start": "2715000",
    "end": "2721744"
  },
  {
    "text": "is check numbers by banks. They tend to come in, in\nthe same order that they",
    "start": "2721744",
    "end": "2728750"
  },
  {
    "text": "are written. They're sorting things that\nare almost always sorted.",
    "start": "2728750",
    "end": "2736000"
  },
  {
    "text": "I mean, it's good. When upper bond,\nnot lower bound?",
    "start": "2736000",
    "end": "2742665"
  },
  {
    "text": "Yeah, you want to\nmake a guarantee. And so why is this\nnot a guarantee?",
    "start": "2742665",
    "end": "2751000"
  },
  {
    "text": "You're onto something there, but\nwe need a little more precision",
    "start": "2751000",
    "end": "2761125"
  },
  {
    "text": "here. How can I cheat? Yeah? Yeah, you can cheat. You cheat.",
    "start": "2761125",
    "end": "2767000"
  },
  {
    "text": "You take any slow\nalgorithm that you want and just check for\nsome particular input,",
    "start": "2767000",
    "end": "2775875"
  },
  {
    "text": "and if it's that input, then you\nsay immediately yeah, OK, here",
    "start": "2775875",
    "end": "2783200"
  },
  {
    "text": "is the answer. And then it's got\na good best case.",
    "start": "2783200",
    "end": "2790000"
  },
  {
    "text": "But I didn't tell you anything\nabout the vast majority",
    "start": "2790000",
    "end": "2795830"
  },
  {
    "text": "of what is going on. So, you can cheat\nwith a slow algorithm",
    "start": "2795830",
    "end": "2802571"
  },
  {
    "text": "that works fast on some input. It doesn't really\ndo much for you",
    "start": "2802571",
    "end": "2810081"
  },
  {
    "text": "so we normally don't\nworry about that. Let's see.",
    "start": "2810081",
    "end": "2816000"
  },
  {
    "text": "What is insertion\nsorts worst case time?",
    "start": "2816000",
    "end": "2822000"
  },
  {
    "text": "Now we get into some\nsort of funny issues. First of all, it sort of\ndepends on the computer",
    "start": "2822000",
    "end": "2832833"
  },
  {
    "text": "you're running on. Whose computer, right? Is it a big supercomputer\nor is it your wristwatch?",
    "start": "2832833",
    "end": "2844499"
  },
  {
    "text": "They have different\ncomputational abilities. And when we compare\nalgorithms, we",
    "start": "2844499",
    "end": "2854428"
  },
  {
    "text": "compare them typically\nfor relative speed. This is if you compared two\nalgorithms on the same machine.",
    "start": "2854428",
    "end": "2862000"
  },
  {
    "text": "You could argue, well,\nit doesn't really matter what the machine\nis because I will just",
    "start": "2862000",
    "end": "2868328"
  },
  {
    "text": "look at their relative speed. But, of course, I may also be\ninterested in absolute speed.",
    "start": "2868328",
    "end": "2875000"
  },
  {
    "text": "Is one algorithm\nactually better no matter what machine it's run on?",
    "start": "2875000",
    "end": "2882000"
  },
  {
    "start": "2882000",
    "end": "2888000"
  },
  {
    "text": "And so this kind of\ngets sort of confusing as to how I can talk\nabout the worst case",
    "start": "2888000",
    "end": "2894920"
  },
  {
    "text": "time of an algorithm\nof a piece of software when I am not talking\nabout the hardware because,",
    "start": "2894920",
    "end": "2903000"
  },
  {
    "text": "clearly, if I had run\non a faster machine, my algorithms are\ngoing to go faster.",
    "start": "2903000",
    "end": "2910000"
  },
  {
    "text": "So, this is where you get\nthe big idea of algorithms.",
    "start": "2910000",
    "end": "2916000"
  },
  {
    "text": "Which is why algorithm\nis such a huge field, why it spawns companies\nlike Google, like Akamai,",
    "start": "2916000",
    "end": "2923000"
  },
  {
    "text": "like Amazon. Why algorithmic analysis,\nthroughout the history of computing, has been\nsuch a huge success,",
    "start": "2923000",
    "end": "2930416"
  },
  {
    "text": "is our ability to\nmaster and to be able to take what is\napparently a really",
    "start": "2930416",
    "end": "2937775"
  },
  {
    "text": "messy, complicated situation\nand reduce it to being able to do some mathematics.",
    "start": "2937775",
    "end": "2945000"
  },
  {
    "text": "And that idea is called\nasymptotic analysis. ",
    "start": "2945000",
    "end": "2957000"
  },
  {
    "text": "And the basic idea of\nasymptotic analysis is to ignore machine-dependent\nconstants -- --",
    "start": "2957000",
    "end": "2974500"
  },
  {
    "text": "and, instead of the\nactual running time, look at the growth\nof the running time.",
    "start": "2974500",
    "end": "2983000"
  },
  {
    "start": "2983000",
    "end": "2999000"
  },
  {
    "text": "So, we don't look at\nthe actual running time. We look at the growth.",
    "start": "2999000",
    "end": "3004080"
  },
  {
    "text": "Let's see what we mean by that. This is a huge idea. It's not a hard\nidea, otherwise I",
    "start": "3004080",
    "end": "3011000"
  },
  {
    "text": "wouldn't be able to teach\nit in the first lecture, but it's a huge idea.",
    "start": "3011000",
    "end": "3017665"
  },
  {
    "text": "We are going to spend\na couple of lectures understanding the\nimplications of that",
    "start": "3017665",
    "end": "3023885"
  },
  {
    "text": "and will basically be doing\nit throughout the term.",
    "start": "3023885",
    "end": "3030000"
  },
  {
    "text": "And if you go on to be\npracticing engineers, you will be doing\nit all the time.",
    "start": "3030000",
    "end": "3036000"
  },
  {
    "text": "In order to do that,\nwe adopt some notations that are going to help us.",
    "start": "3036000",
    "end": "3042140"
  },
  {
    "text": "In particular, we will\nadopt asymptotic notation. Most of you have seen some\nkind of asymptotic notation.",
    "start": "3042140",
    "end": "3051000"
  },
  {
    "text": "Maybe a few of you\nhaven't, but mostly you should have seen a little bit.",
    "start": "3051000",
    "end": "3056200"
  },
  {
    "text": "The one we're going to\nbe using in this class",
    "start": "3056200",
    "end": "3061571"
  },
  {
    "text": "predominantly is theta notation. And theta notation is\npretty easy notation",
    "start": "3061571",
    "end": "3069900"
  },
  {
    "text": "to master because all you\ndo is, from a formula,",
    "start": "3069900",
    "end": "3076000"
  },
  {
    "text": "just drop low order terms\nand ignore leading constants.",
    "start": "3076000",
    "end": "3084000"
  },
  {
    "start": "3084000",
    "end": "3090000"
  },
  {
    "text": "For example, if I have a formula\nlike 3n^3 = 90n^2 - 5n + 6046,",
    "start": "3090000",
    "end": "3097500"
  },
  {
    "text": "I say, well, what low\norder terms do I drop?",
    "start": "3097500",
    "end": "3103494"
  },
  {
    "text": "Well, n^3 is a\nbigger term n^2 than.",
    "start": "3103494",
    "end": "3108500"
  },
  {
    "text": "I am going to drop all these\nterms and ignore the leading",
    "start": "3108500",
    "end": "3116000"
  },
  {
    "text": "constant, so I say\nthat's Theta(n^3). That's pretty easy.",
    "start": "3116000",
    "end": "3124000"
  },
  {
    "text": "So, that's theta notation. Now, this is an engineering way\nof manipulating theta notation.",
    "start": "3124000",
    "end": "3131000"
  },
  {
    "text": "There is actually a\nmathematical definition for this, which we\nare going to talk",
    "start": "3131000",
    "end": "3138000"
  },
  {
    "text": "about next time, which\nis a definition in terms of sets of functions.",
    "start": "3138000",
    "end": "3143200"
  },
  {
    "text": "And, you are going\nto be responsible, this is both a math and a\ncomputer science engineering",
    "start": "3143200",
    "end": "3150571"
  },
  {
    "text": "class. Throughout the\ncourse you are going to be responsible both\nfor mathematical rigor",
    "start": "3150571",
    "end": "3157328"
  },
  {
    "text": "as if it were a math\ncourse and engineering commonsense because it's\nan engineering course.",
    "start": "3157328",
    "end": "3163666"
  },
  {
    "text": "We are going to be doing both. This is the engineering way\nof understanding what you do,",
    "start": "3163666",
    "end": "3170000"
  },
  {
    "text": "so you're responsible for being\nable to do these manipulations. You're also going to be\nresponsible for understanding",
    "start": "3170000",
    "end": "3177000"
  },
  {
    "text": "the mathematical\ndefinition of theta notion and of its related O\nnotation and omega notation.",
    "start": "3177000",
    "end": "3183500"
  },
  {
    "text": "If I take a look as n\napproached infinity,",
    "start": "3183500",
    "end": "3189332"
  },
  {
    "text": "a Theta(n^2) algorithm\nalways beats, eventually,",
    "start": "3189332",
    "end": "3196400"
  },
  {
    "text": "a Theta(n^3) algorithm. As n gets bigger, it doesn't\nmatter what these other terms",
    "start": "3196400",
    "end": "3207600"
  },
  {
    "text": "were if I were describing\nthe absolute precise behavior",
    "start": "3207600",
    "end": "3214636"
  },
  {
    "text": "in terms of a formula. If I had a Theta(n^2) algorithm,\nit would always be faster",
    "start": "3214636",
    "end": "3224000"
  },
  {
    "text": "for sufficiently large n\nthan a Theta(n^3) algorithm. It wouldn't matter what\nthose low order terms were.",
    "start": "3224000",
    "end": "3231776"
  },
  {
    "text": "It wouldn't matter what\nthe leading constant was. This one will always be faster.",
    "start": "3231776",
    "end": "3239000"
  },
  {
    "text": "Even if you ran the Theta(n^2)\nalgorithm on a slow computer",
    "start": "3239000",
    "end": "3244500"
  },
  {
    "text": "and the Theta(n^3) algorithm\non a fast computer. The great thing about\nasymptotic notation",
    "start": "3244500",
    "end": "3252000"
  },
  {
    "text": "is it satisfies\nour issue of being able to compare both\nrelative and absolute speed,",
    "start": "3252000",
    "end": "3260500"
  },
  {
    "text": "because we are able\nto do this no matter",
    "start": "3260500",
    "end": "3265666"
  },
  {
    "text": "what the computer platform. On different platforms we may\nget different constants here,",
    "start": "3265666",
    "end": "3274000"
  },
  {
    "text": "machine dependent constants\nfor the actual running time, but if I look at the growth\nas the size of the input",
    "start": "3274000",
    "end": "3284564"
  },
  {
    "text": "gets larger, the asymptotics\ngenerally won't change. For example, I will just\ndraw that as a picture.",
    "start": "3284564",
    "end": "3293444"
  },
  {
    "text": "If I have n on this axis\nand T(n) on this axis.",
    "start": "3293444",
    "end": "3299284"
  },
  {
    "text": "This may be, for example, a\nTheta(n^3) algorithm and this may be a Theta(n^2) algorithm.",
    "start": "3299284",
    "end": "3306270"
  },
  {
    "text": "There is always going to be some\npoint n o where for everything",
    "start": "3306270",
    "end": "3312500"
  },
  {
    "text": "larger the Theta(n^2) algorithm\nis going to be cheaper than the Theta(n^3) algorithm not\nmatter how much advantage you",
    "start": "3312500",
    "end": "3321496"
  },
  {
    "text": "give it at the beginning\nin terms of the speed of the computer\nyou are running on.",
    "start": "3321496",
    "end": "3330000"
  },
  {
    "text": "Now, from an engineering\npoint of view, there are some issues we have to\ndeal with because sometimes it",
    "start": "3330000",
    "end": "3336664"
  },
  {
    "text": "could be that that n o is so\nlarge that the computers aren't big enough to run the problem.",
    "start": "3336664",
    "end": "3343500"
  },
  {
    "text": "That's why we, nevertheless,\nare interested in some of the slower algorithms,\nbecause some of the slower",
    "start": "3343500",
    "end": "3351000"
  },
  {
    "text": "algorithms, even though they may\nnot asymptotically be slower, I mean asymptotically\nthey will be slower.",
    "start": "3351000",
    "end": "3360000"
  },
  {
    "text": "They may still be faster on\nreasonable sizes of things. And so we have to both balance\nour mathematical understanding",
    "start": "3360000",
    "end": "3367000"
  },
  {
    "text": "with our engineering\ncommonsense in order to do good programming. So, just having done\nanalysis of algorithms",
    "start": "3367000",
    "end": "3374625"
  },
  {
    "text": "doesn't automatically make\nyou a good programmer. You also need to learn\nhow to program and use",
    "start": "3374625",
    "end": "3381070"
  },
  {
    "text": "these tools in\npractice to understand when they are relevant and\nwhen they are not relevant.",
    "start": "3381070",
    "end": "3387332"
  },
  {
    "text": "There is a saying. If you want to be\na good program,",
    "start": "3387332",
    "end": "3392664"
  },
  {
    "text": "you just program ever\nday for two years, you will be an\nexcellent programmer.",
    "start": "3392664",
    "end": "3398443"
  },
  {
    "text": "If you want to be a\nworld class programmer, you can program every\nday for ten years,",
    "start": "3398444",
    "end": "3406000"
  },
  {
    "text": "or you can program\nevery day for two years and take an algorithms class.",
    "start": "3406000",
    "end": "3411888"
  },
  {
    "text": "Let's get back to\nwhat we were doing, which is analyzing\ninsertion sort.",
    "start": "3411888",
    "end": "3420000"
  },
  {
    "text": "We are going to look\nat the worse case. ",
    "start": "3420000",
    "end": "3436000"
  },
  {
    "text": "Which, as we mentioned before,\nis when the input is reverse sorted.",
    "start": "3436000",
    "end": "3441500"
  },
  {
    "text": "The biggest element comes\nfirst and the smallest last because now every time you\ndo the insertion you've",
    "start": "3441500",
    "end": "3450713"
  },
  {
    "text": "got to shuffle everything over. You can write down\nthe running time",
    "start": "3450714",
    "end": "3456750"
  },
  {
    "text": "by looking at the\nnesting of loops. What we do is we sum up. What we assume is\nthat every operation,",
    "start": "3456750",
    "end": "3462331"
  },
  {
    "text": "every elemental operation\nis going to take some constant amount of time. But we don't have\nto worry about what",
    "start": "3462331",
    "end": "3469176"
  },
  {
    "text": "that constant is because\nwe're going to be doing asymptotic analysis. As I say, the\nbeautify of the method",
    "start": "3469176",
    "end": "3474840"
  },
  {
    "text": "is that it causes\nall these things that are real distinctions\nto sort of vanish.",
    "start": "3474840",
    "end": "3481000"
  },
  {
    "text": "We sort of look at\nthem from 30,000 feet rather than from three\nmillimeters or something.",
    "start": "3481000",
    "end": "3486776"
  },
  {
    "text": "Each of these operations\nis going to sort of be a basic operation.",
    "start": "3486776",
    "end": "3492000"
  },
  {
    "text": "One way to think about this, in\nterms of counting operations, is counting memory references.",
    "start": "3492000",
    "end": "3499000"
  },
  {
    "text": "How many times do you\nactually access some variable? That's another way of sort\nof thinking about this model.",
    "start": "3499000",
    "end": "3509000"
  },
  {
    "text": "When we do that, well, we're\ngoing to go through this loop, j is going from 2\nto n, and then we're",
    "start": "3509000",
    "end": "3517800"
  },
  {
    "text": "going to add up the work\nthat we do within the loop.",
    "start": "3517800",
    "end": "3523000"
  },
  {
    "text": "We can sort of write that\nin math as summation of j",
    "start": "3523000",
    "end": "3528136"
  },
  {
    "text": "equals 2 to n. And then what is the work\nthat is going on in this loop?",
    "start": "3528136",
    "end": "3535304"
  },
  {
    "text": "Well, the work that is\ngoing on in this loop varies, but in the worst case\nhow many operations are going",
    "start": "3535304",
    "end": "3545100"
  },
  {
    "text": "on here for each value of j? For a given value of j, how\nmuch work goes on in this loop?",
    "start": "3545100",
    "end": "3557600"
  },
  {
    "text": "Can somebody tell me? Asymptotically. It's j times some\nconstant, so it's theta j.",
    "start": "3557600",
    "end": "3568544"
  },
  {
    "text": "So, there is theta\nj work going on here",
    "start": "3568544",
    "end": "3573768"
  },
  {
    "text": "because this loop starts\nout with i being j minus 1, and then it's doing just\na constant amount of stuff",
    "start": "3573768",
    "end": "3583450"
  },
  {
    "text": "for each step of the value\nof i, and i is running from j minus one down to zero.",
    "start": "3583450",
    "end": "3590664"
  },
  {
    "text": "So, we can say that is theta\nj work that is going on.",
    "start": "3590664",
    "end": "3597330"
  },
  {
    "text": "Do people follow that? OK. And now we have a\nformula we can evaluate.",
    "start": "3597330",
    "end": "3603665"
  },
  {
    "text": "What is the evaluation? If I want to simplify this\nformula, what is that equal to?",
    "start": "3603665",
    "end": "3611000"
  },
  {
    "start": "3611000",
    "end": "3619901"
  },
  {
    "text": "Sorry. In the back there. ",
    "start": "3619901",
    "end": "3628000"
  },
  {
    "text": "Yeah. OK. That's just Theta(n^2), good.",
    "start": "3628000",
    "end": "3634125"
  },
  {
    "text": "Because when you're saying is\nthe sum of consecutive numbers, you mean what?",
    "start": "3634125",
    "end": "3639564"
  },
  {
    "text": "What's the mathematic\nterm we have for that so we can communicate? You've got to know these\nthings so you can communicate.",
    "start": "3639564",
    "end": "3648158"
  },
  {
    "text": "It's called what\ntype of sequence? It's actually a\nseries, but that's OK.",
    "start": "3648158",
    "end": "3653479"
  },
  {
    "text": "What type of series\nis this called? Arithmetic series, good. Wow, we've got some sharp\npeople who can communicate.",
    "start": "3653479",
    "end": "3662411"
  },
  {
    "text": "This is an arithmetic series. You're basically summing 1 + 2 +\n3 + 4, some constants in there,",
    "start": "3662412",
    "end": "3671937"
  },
  {
    "text": "but basically it's 1 + 2\n+ 3 + 4 + 5 + 6 up to n.",
    "start": "3671937",
    "end": "3677210"
  },
  {
    "text": "That's Theta(n^2). If you don't know this math,\nthere is a chapter in the book,",
    "start": "3677210",
    "end": "3685043"
  },
  {
    "text": "or you could have\ntaken the prerequisite. Arithmetic series.",
    "start": "3685043",
    "end": "3691390"
  },
  {
    "text": "People have this\nvague recollection. Oh, yeah. Good. Now, you have to learn\nthese manipulations.",
    "start": "3691390",
    "end": "3698048"
  },
  {
    "text": "We will talk about\na bit next time, but you have to learn\nyour theta manipulations",
    "start": "3698048",
    "end": "3703452"
  },
  {
    "text": "for what works with theta. And you have to be very\ncareful because theta",
    "start": "3703452",
    "end": "3708765"
  },
  {
    "text": "is a weak notation. A strong notation is something\nlike Leibniz notation",
    "start": "3708765",
    "end": "3713880"
  },
  {
    "text": "from calculus where\nthe chain rule is just canceling two things. It's just fabulous that you\ncan cancel in the chain rule.",
    "start": "3713881",
    "end": "3723544"
  },
  {
    "text": "And Leibniz notation just\nexpresses that so directly you can manipulate. Theta notation is not like that.",
    "start": "3723544",
    "end": "3729468"
  },
  {
    "text": "If you think it is like\nthat you are in trouble. You really have to think\nof what is going on",
    "start": "3729468",
    "end": "3735033"
  },
  {
    "text": "under the theta notation. And it is more of a\ndescriptive notation than it is a\nmanipulative notation.",
    "start": "3735033",
    "end": "3740867"
  },
  {
    "text": "There are manipulations\nyou can do with it, but unless you\nunderstand what is really going on under the theta\nnotation you will find yourself",
    "start": "3740867",
    "end": "3749325"
  },
  {
    "text": "in trouble. And next time we will\ntalk a little bit more",
    "start": "3749325",
    "end": "3754575"
  },
  {
    "text": "about theta notation. Is insertion sort fast? ",
    "start": "3754575",
    "end": "3769000"
  },
  {
    "text": "Well, it turns out for small\nn it is moderately fast. ",
    "start": "3769000",
    "end": "3782000"
  },
  {
    "text": "But it is not at\nall for large n.",
    "start": "3782000",
    "end": "3791000"
  },
  {
    "start": "3791000",
    "end": "3798000"
  },
  {
    "text": "So, I am going to give you\nan algorithm that is faster. It's called merge sort. I wonder if I should\nleave insertion sort up.",
    "start": "3798000",
    "end": "3806164"
  },
  {
    "text": "Why not. ",
    "start": "3806165",
    "end": "3826000"
  },
  {
    "text": "I am going to write\non this later, so if you are taking notes,\nleave some space on the left.",
    "start": "3826000",
    "end": "3836099"
  },
  {
    "text": "Here is merge sort of an\narray A from 1 up to n.",
    "start": "3836099",
    "end": "3842000"
  },
  {
    "text": "And it is basically three steps. If n equals 1 we are done.",
    "start": "3842000",
    "end": "3850078"
  },
  {
    "text": "Sorting one element,\nit is already sorted. All right.",
    "start": "3850079",
    "end": "3855807"
  },
  {
    "text": "Recursive algorithm. Otherwise, what we do is we\nrecursively sort A from 1",
    "start": "3855808",
    "end": "3864962"
  },
  {
    "text": "up to the ceiling of n over 2.",
    "start": "3864962",
    "end": "3870000"
  },
  {
    "text": "And the array A of the ceiling\nof n over 2 plus one up to n.",
    "start": "3870000",
    "end": "3879102"
  },
  {
    "text": "So, we sort two\nhalves of the input.",
    "start": "3879102",
    "end": "3884502"
  },
  {
    "text": "And then, three, we take those\ntwo lists that we have done",
    "start": "3884502",
    "end": "3893502"
  },
  {
    "text": "and we merge them. ",
    "start": "3893502",
    "end": "3903000"
  },
  {
    "text": "And, to do that, we\nuse a merge subroutine which I will show you. ",
    "start": "3903000",
    "end": "3914000"
  },
  {
    "text": "The key subroutine here is\nmerge, and it works like this.",
    "start": "3914000",
    "end": "3920492"
  },
  {
    "text": "I have two lists. Let's say one of them is 20.",
    "start": "3920492",
    "end": "3925710"
  },
  {
    "text": "I am doing this\nin reverse order. I have sorted this like this.",
    "start": "3925710",
    "end": "3932682"
  },
  {
    "text": "And then I sort another one. I don't know why I do it\nthis order, but anyway.",
    "start": "3932682",
    "end": "3939795"
  },
  {
    "text": "Here is my other list. I have my two lists\nthat I have sorted.",
    "start": "3939795",
    "end": "3945445"
  },
  {
    "text": "So, this is AA[1] to AA[|n/2|] and\nAA[|n/2|+1] to AA[n] for the way",
    "start": "3945445",
    "end": "3950608"
  },
  {
    "text": "it will be called\nin this program. And now to merge these\ntwo, what I want to do",
    "start": "3950608",
    "end": "3959286"
  },
  {
    "text": "is produce a sorted list\nout of both of them. What I do is first observe\nwhere is the smallest",
    "start": "3959286",
    "end": "3967900"
  },
  {
    "text": "element of any two lists\nthat are already sorted? It's in one of two places,\nthe head of the first list",
    "start": "3967900",
    "end": "3975783"
  },
  {
    "text": "or the head of the second list. I look at those two elements\nand say which one is smaller?",
    "start": "3975783",
    "end": "3983028"
  },
  {
    "text": "This one is smaller. Then what I do is output\ninto my output array",
    "start": "3983028",
    "end": "3988273"
  },
  {
    "text": "the smaller of the two. And I cross it off. And now where is the\nnext smallest element?",
    "start": "3988273",
    "end": "3995702"
  },
  {
    "text": "And the answer is it's going to\nbe the head of one of these two lists.",
    "start": "3995702",
    "end": "4000819"
  },
  {
    "text": "Then I cross out this\nguy and put him here and circle this one. Now I look at these two guys.",
    "start": "4000819",
    "end": "4007958"
  },
  {
    "text": "This one is smaller so I output\nthat and circle that one. Now I look at these\ntwo guys, output 9.",
    "start": "4007958",
    "end": "4015130"
  },
  {
    "text": "So, every step here is some\nfixed number of operations that is independent of the size\nof the arrays at each step.",
    "start": "4015131",
    "end": "4024729"
  },
  {
    "text": "Each individual step is just\nme looking at two elements",
    "start": "4024729",
    "end": "4030474"
  },
  {
    "text": "and picking out the smallest\nand advancing some pointers",
    "start": "4030474",
    "end": "4035483"
  },
  {
    "text": "into the array so\nthat I know where the current head\nof that list is.",
    "start": "4035483",
    "end": "4043522"
  },
  {
    "text": "And so, therefore, the time is\norder n on n total elements.",
    "start": "4043522",
    "end": "4050000"
  },
  {
    "text": "The time to actually go through\nthis and merge two lists is order n.",
    "start": "4050000",
    "end": "4055470"
  },
  {
    "text": "We sometimes call this linear\ntime because it's not quadratic or whatever.",
    "start": "4055470",
    "end": "4061012"
  },
  {
    "text": "It is proportional to n,\nproportional to the input size. It's linear time.",
    "start": "4061012",
    "end": "4066502"
  },
  {
    "text": "I go through and just do\nthis simple operation, just working up these\nlists, and in the end",
    "start": "4066502",
    "end": "4074291"
  },
  {
    "text": "I have done essentially\nn operations, order n operations each of\nwhich cost constant time.",
    "start": "4074291",
    "end": "4082000"
  },
  {
    "text": "That's a total of order n time. Everybody with me? OK.",
    "start": "4082000",
    "end": "4087371"
  },
  {
    "text": "So, this is a recursive program. We can actually now\nwrite what is called",
    "start": "4087371",
    "end": "4094503"
  },
  {
    "text": "a recurrence for this program. The way we do that is\nsay let's let the time",
    "start": "4094503",
    "end": "4101884"
  },
  {
    "text": "to sort n elements to be T(n). Then how long does it\ntake to do step one?",
    "start": "4101885",
    "end": "4110000"
  },
  {
    "text": " That's just constant time.",
    "start": "4110000",
    "end": "4116299"
  },
  {
    "text": "We just check to see if n is\n1, and if it is we return.",
    "start": "4116300",
    "end": "4121369"
  },
  {
    "text": "That's independent of the size\nof anything that we are doing. It just takes a certain\nnumber of machine instructions",
    "start": "4121370",
    "end": "4128856"
  },
  {
    "text": "on whatever machine and we\nsay it is constant time. We call that theta one.",
    "start": "4128856",
    "end": "4134732"
  },
  {
    "text": "This is actually a little bit\nof an abuse if you get into it.",
    "start": "4134732",
    "end": "4140000"
  },
  {
    "text": "And the reason is because\ntypically in order to say it you need to say what\nit is growing with.",
    "start": "4140000",
    "end": "4147205"
  },
  {
    "text": "Nevertheless, we use this\nas an abuse of the notation just to mean it is a constant.",
    "start": "4147206",
    "end": "4153549"
  },
  {
    "text": "So, that's an abuse\njust so people know. But it simplifies things if\nI can just write theta one.",
    "start": "4153550",
    "end": "4160835"
  },
  {
    "text": "And it basically\nmeans the same thing. Now we recursively\nsort these two things.",
    "start": "4160835",
    "end": "4166865"
  },
  {
    "text": "How can I describe that? The time to do this, I\ncan describe recursively",
    "start": "4166866",
    "end": "4174673"
  },
  {
    "text": "as T of ceiling\nof n over 2 plus T",
    "start": "4174674",
    "end": "4180004"
  },
  {
    "text": "of n minus ceiling of n over 2. That is actually kind of messy,\nso what we will do is just be",
    "start": "4180004",
    "end": "4192626"
  },
  {
    "text": "sloppy and write 2T(n/2). So, this is just\nus being sloppy.",
    "start": "4192626",
    "end": "4200000"
  },
  {
    "text": "And we will see on\nFriday in recitation that it is OK to be sloppy. That's the great thing\nabout algorithms.",
    "start": "4200000",
    "end": "4206979"
  },
  {
    "text": "As long as you are\nrigorous and precise, you can be as\nsloppy as you want.",
    "start": "4206979",
    "end": "4212502"
  },
  {
    "text": "[LAUGHTER] This is sloppy\nbecause I didn't worry about what was going\non, because it turns out",
    "start": "4212502",
    "end": "4219051"
  },
  {
    "text": "it doesn't make any difference. And we are going to actually\nsee that that is the case.",
    "start": "4219051",
    "end": "4225798"
  },
  {
    "text": "And, finally, I have to merge\nthe two sorted lists which have a total of n elements. And we just analyze that\nusing the merge subroutine.",
    "start": "4225798",
    "end": "4232576"
  },
  {
    "text": "And that takes us\nto theta n time. ",
    "start": "4232576",
    "end": "4240000"
  },
  {
    "text": "That allows us now to write a\nrecurrence for the performance of merge sort. ",
    "start": "4240000",
    "end": "4257000"
  },
  {
    "text": "Which is to say that T\nof n is equal to theta 1",
    "start": "4257000",
    "end": "4263032"
  },
  {
    "text": "if n equals 1 and 2T of\nn over 2 plus theta of n",
    "start": "4263032",
    "end": "4269488"
  },
  {
    "text": "if n is bigger than 1. Because either I\nam doing step one",
    "start": "4269488",
    "end": "4276324"
  },
  {
    "text": "or I am doing all steps\none, two and three.",
    "start": "4276324",
    "end": "4281977"
  },
  {
    "text": "Here I am doing step one\nand I return and I am done.",
    "start": "4281977",
    "end": "4288742"
  },
  {
    "text": "Or else I am doing step\none, I don't return, and then I also do\nsteps two and three.",
    "start": "4288742",
    "end": "4296730"
  },
  {
    "text": "So, I add those together. I could say theta n plus theta\n1, but theta n plus theta 1",
    "start": "4296730",
    "end": "4303456"
  },
  {
    "text": "is just theta n because\ntheta 1 is a lower order term than theta n and\nI can throw it away.",
    "start": "4303456",
    "end": "4310831"
  },
  {
    "text": "It is either theta 1 or it is\n2T of n over 2 plus theta n.",
    "start": "4310831",
    "end": "4316111"
  },
  {
    "text": "Now, typically we\nwon't be writing this. Usually we omit this.",
    "start": "4316111",
    "end": "4321477"
  },
  {
    "text": "If it makes no difference to\nthe solution of the recurrence, we will usually omit\nconstant base cases.",
    "start": "4321478",
    "end": "4328446"
  },
  {
    "text": "In algorithms, it's not true\ngenerally in mathematics, but in algorithms if you\nare running something",
    "start": "4328446",
    "end": "4335123"
  },
  {
    "text": "on a constant size input it\ntakes constant time always. So, we don't worry about\nwhat this value is.",
    "start": "4335123",
    "end": "4342172"
  },
  {
    "text": "And it turns out it\nhas no real impact on the asymptotic solution\nof the recurrence.",
    "start": "4342172",
    "end": "4348171"
  },
  {
    "text": "How do we solve a\nrecurrence like this? I now have T of n expressed\nin terms of T of n over 2.",
    "start": "4348171",
    "end": "4356888"
  },
  {
    "text": "That's in the book and\nit is also in Lecture 2. We are going to do\nLecture 2 to solve that,",
    "start": "4356888",
    "end": "4363901"
  },
  {
    "text": "but in the meantime\nwhat I am going to do is give you a visual\nway of understanding what",
    "start": "4363901",
    "end": "4371455"
  },
  {
    "text": "this costs, which is\none of the techniques we will elaborate on next time.",
    "start": "4371455",
    "end": "4377526"
  },
  {
    "text": "It is called a recursion\ntree technique. And I will use it for the\nactual recurrence that is almost",
    "start": "4377526",
    "end": "4387681"
  },
  {
    "text": "the same 2T(n/2), but I am\ngoing to actually explicitly, because I want you to\nsee where it occurs,",
    "start": "4387681",
    "end": "4397249"
  },
  {
    "text": "plus some constant times n where\nc is a constant greater than",
    "start": "4397249",
    "end": "4403048"
  },
  {
    "text": "zero. So, we are going to look at\nthis recurrence with a base",
    "start": "4403048",
    "end": "4409518"
  },
  {
    "text": "case of order one. I am just making the\nconstant in here,",
    "start": "4409518",
    "end": "4414672"
  },
  {
    "text": "the upper bound\non the constant be explicit rather than implicit. And the way you do a recursion\ntree is the following.",
    "start": "4414672",
    "end": "4423092"
  },
  {
    "text": "You start out by writing\ndown the left hand side of the recurrence. And then what you do is you\nsay well, that is equal to,",
    "start": "4423092",
    "end": "4431562"
  },
  {
    "text": "and now let's\nwrite it as a tree. I do c of n work plus now I\nam going to have to do work",
    "start": "4431562",
    "end": "4438603"
  },
  {
    "text": "on each of my two children. T of n over 2 and T of n over\nIf I sum up what is in here,",
    "start": "4438603",
    "end": "4448149"
  },
  {
    "text": "I get this because that is\nwhat the recurrence says,",
    "start": "4448149",
    "end": "4454395"
  },
  {
    "text": "T(n)=2T(n/2)+cn. I have 2T(n/2)+cn. Then I do it again.",
    "start": "4454395",
    "end": "4459664"
  },
  {
    "text": "I have cn here. I now have here cn/2. And here is cn/2.",
    "start": "4459664",
    "end": "4465618"
  },
  {
    "text": "And each of these\nnow has a T(n/4).",
    "start": "4465618",
    "end": "4471000"
  },
  {
    "text": " And these each have a T(n/4).",
    "start": "4471000",
    "end": "4479972"
  },
  {
    "text": "And this has a T(n/4). And I keep doing that, the\ndangerous dot, dot, dots.",
    "start": "4479972",
    "end": "4490284"
  },
  {
    "text": "And, if I keep doing that, I end\nup with it looking like this.",
    "start": "4490284",
    "end": "4500000"
  },
  {
    "start": "4500000",
    "end": "4518000"
  },
  {
    "text": "And I keep going down\nuntil I get to a leaf.",
    "start": "4518000",
    "end": "4523318"
  },
  {
    "text": "And a leaf, I have\nessentially a T(1). That is T(1).",
    "start": "4523318",
    "end": "4529702"
  },
  {
    "text": "And so the first question\nI ask here is, what",
    "start": "4529702",
    "end": "4535608"
  },
  {
    "text": "is the height of this tree? Yeah. It's log n.",
    "start": "4535608",
    "end": "4541008"
  },
  {
    "text": "It's actually very\nclose to exactly log n because I am starting\nout at the top with n",
    "start": "4541008",
    "end": "4551144"
  },
  {
    "text": "and then I go to n/2 and n/4\nand all the way down until I",
    "start": "4551144",
    "end": "4559639"
  },
  {
    "text": "get to The number of halvings\nof n until I get to 1 is log n so the height\nhere is log n.",
    "start": "4559639",
    "end": "4567070"
  },
  {
    "text": "It's OK if it is\nconstant times log n. It doesn't matter. How many leaves are in\nthis tree, by the way?",
    "start": "4567070",
    "end": "4575000"
  },
  {
    "start": "4575000",
    "end": "4585000"
  },
  {
    "text": "How many leaves\ndoes this tree have? Yeah. The number of\nleaves, once again,",
    "start": "4585000",
    "end": "4591951"
  },
  {
    "text": "is actually pretty close. It's actually n. If you took it all the way down.",
    "start": "4591951",
    "end": "4598847"
  },
  {
    "text": "Let's make some simplifying\nassumption. n is a perfect power of 2, so it\nis an integer power of 2.",
    "start": "4598847",
    "end": "4607849"
  },
  {
    "text": "Then this is exactly log\nn to get down to T(1). And then there are\nexactly n leaves,",
    "start": "4607849",
    "end": "4615337"
  },
  {
    "text": "because the number\nof leaves here, the number of nodes at\nthis level is 1, 2, 4, 8.",
    "start": "4615337",
    "end": "4625000"
  },
  {
    "text": "And if I go down\nheight h, I have 2 to the h leaves, 2 to\nthe log n, that is just n.",
    "start": "4625000",
    "end": "4633963"
  },
  {
    "text": "We are doing math here, right? Now let's figure\nout how much work,",
    "start": "4633963",
    "end": "4640567"
  },
  {
    "text": "if I look at adding up\neverything in this tree I am going to get T(n),\nso let's add that up.",
    "start": "4640567",
    "end": "4651518"
  },
  {
    "text": "Well, let's add it\nup level by level. How much do we have\nin the first level?",
    "start": "4651518",
    "end": "4660763"
  },
  {
    "text": "Just cn. If I add up the second\nlevel, how much do I have?",
    "start": "4660763",
    "end": "4667786"
  },
  {
    "text": "cn. How about if I add up\nthe third level? cn.",
    "start": "4667786",
    "end": "4673059"
  },
  {
    "text": "How about if I add\nup all the leaves? Theta n.",
    "start": "4673059",
    "end": "4678989"
  },
  {
    "text": "It is not necessarily cn\nbecause the boundary case",
    "start": "4678989",
    "end": "4685759"
  },
  {
    "text": "may have a different constant. It is actually theta n,\nbut cn all the way here.",
    "start": "4685759",
    "end": "4694988"
  },
  {
    "text": "If I add up the\ntotal amount, that is equal to cn times\nlog n, because that's",
    "start": "4694988",
    "end": "4703583"
  },
  {
    "text": "the height, that is how many\ncn's I have here, plus theta n.",
    "start": "4703583",
    "end": "4711233"
  },
  {
    "text": "And this is a higher order term\nthan this, so this goes away,",
    "start": "4711233",
    "end": "4719258"
  },
  {
    "text": "get rid of the constants, that\nis equal to theta(n lg n).",
    "start": "4719258",
    "end": "4725782"
  },
  {
    "text": "And theta(n lg n) is\nasymptotically faster than",
    "start": "4725783",
    "end": "4731674"
  },
  {
    "text": "theta(n^2). So, merge sort, on a\nlarge enough input size,",
    "start": "4731674",
    "end": "4738073"
  },
  {
    "text": "is going to beat insertion sort. Merge sort is going to\nbe a faster algorithm.",
    "start": "4738073",
    "end": "4747291"
  },
  {
    "text": "Sorry, you guys,\nI didn't realize you couldn't see over there.",
    "start": "4747291",
    "end": "4753014"
  },
  {
    "text": "You should speak up\nif you cannot see. So, this is a faster algorithm\nbecause theta(n lg n) grows",
    "start": "4753014",
    "end": "4762662"
  },
  {
    "text": "more slowly than theta(n^2). And merge sort asymptotically\nbeats insertion sort.",
    "start": "4762662",
    "end": "4771000"
  },
  {
    "text": "Even if you ran insertion\nsort on a supercomputer, somebody running on a PC with\nmerge sort for sufficient large",
    "start": "4771000",
    "end": "4780842"
  },
  {
    "text": "input will clobber them because\nactually n^2 is way bigger than",
    "start": "4780842",
    "end": "4786441"
  },
  {
    "text": "n log n once you get\nthe n's to be large. And, in practice, merge sort\ntends to win here for n bigger",
    "start": "4786441",
    "end": "4795572"
  },
  {
    "text": "than, say, 30 or so. If you have a very small\ninput like 30 elements,",
    "start": "4795572",
    "end": "4802092"
  },
  {
    "text": "insertion sort is a\nperfectly decent sort to use. But merge sort is going to be\na lot faster even for something",
    "start": "4802092",
    "end": "4811497"
  },
  {
    "text": "that is only a few\ndozen elements. It is going to actually\nbe a faster algorithm.",
    "start": "4811497",
    "end": "4818289"
  },
  {
    "text": "That's sort of the lessons, OK? Remember that to get your\nrecitation assignments",
    "start": "4818289",
    "end": "4824785"
  },
  {
    "text": "and attend recitation on Friday. Because we are going to be going\nthrough a bunch of the things",
    "start": "4824786",
    "end": "4833952"
  },
  {
    "text": "that I have left\non the table here. And see you next Monday.",
    "start": "4833952",
    "end": "4839321"
  }
]