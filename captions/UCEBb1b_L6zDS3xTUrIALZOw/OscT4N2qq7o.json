[
  {
    "start": "0",
    "end": "152000"
  },
  {
    "text": " [MUSIC-- \"JESU, JOY OF\nMAN'S DESIRING\" BY JOHANN SEBASTIAN BACH]",
    "start": "0",
    "end": "5529"
  },
  {
    "start": "5529",
    "end": "20180"
  },
  {
    "text": "PROFESSOR: So far in this course\nwe've been talking a lot about data abstraction. And remember the idea is that\nwe build systems that have",
    "start": "20180",
    "end": "28230"
  },
  {
    "text": "these horizontal barriers in\nthem, these abstraction barriers that separate use,\nthe way you might use some",
    "start": "28230",
    "end": "38489"
  },
  {
    "text": "data object, from the way\nyou might represent it. ",
    "start": "38490",
    "end": "48985"
  },
  {
    "text": "Or another way to think of that\nis up here you have the boss who's going to be using\nsome sort of data object.",
    "start": "48985",
    "end": "57109"
  },
  {
    "text": "And down here is George\nwho's implemented it.",
    "start": "57110",
    "end": "62310"
  },
  {
    "text": "Now this notion of separating\nuse from representation so you can think about these two\nproblems separately is a very,",
    "start": "62310",
    "end": "70930"
  },
  {
    "text": "very powerful programming\nmethodology, data abstraction. On the other hand, it's not\nreally sufficient for really",
    "start": "70930",
    "end": "81040"
  },
  {
    "text": "complex systems. And the problem\nwith this is George.",
    "start": "81040",
    "end": "88640"
  },
  {
    "text": "Or actually, the problem\nis that there are a lot of Georges.",
    "start": "88640",
    "end": "94630"
  },
  {
    "text": "Let's be concrete. Let's suppose there is George,\nand there's also Martha.",
    "start": "94630",
    "end": "101192"
  },
  {
    "text": "OK, now George and Martha are\nboth working on this system, both designing representations,\nand",
    "start": "101192",
    "end": "109250"
  },
  {
    "text": "absolutely are incompatible. They wouldn't cooperate on a\nrepresentation under any",
    "start": "109250",
    "end": "114620"
  },
  {
    "text": "circumstances. And the problem is you would\nlike to have some system where",
    "start": "114620",
    "end": "120060"
  },
  {
    "text": "both George and Martha are\ndesigning representations, and",
    "start": "120060",
    "end": "125380"
  },
  {
    "text": "yet, if you're above this\nabstraction barrier you don't want to have to worry about\nthat, whether something is",
    "start": "125380",
    "end": "132360"
  },
  {
    "text": "done by George or by Martha. And you don't want George\nand Martha to interfere with each other. Somehow in designing a system,\nyou not only want these",
    "start": "132360",
    "end": "140310"
  },
  {
    "text": "horizontal barriers, but you\nalso want some kind of",
    "start": "140310",
    "end": "146300"
  },
  {
    "text": "vertical barrier to keep George\nand Martha separate.",
    "start": "146300",
    "end": "152980"
  },
  {
    "start": "152000",
    "end": "330000"
  },
  {
    "text": "Let me be a little bit\nmore concrete. Imagine that you're thinking\nabout personnel records for a",
    "start": "152980",
    "end": "162650"
  },
  {
    "text": "large company with a lot of\nloosely linked divisions that",
    "start": "162650",
    "end": "168180"
  },
  {
    "text": "don't cooperate very\nwell either. And imagine even that this\ncompany is formed by merging a",
    "start": "168180",
    "end": "177040"
  },
  {
    "text": "whole bunch of companies that\nalready have their personnel record system set up. ",
    "start": "177040",
    "end": "183250"
  },
  {
    "text": "And imagine that once these\ndivisions are all linked in some kind of very sophisticated\nsatellite",
    "start": "183250",
    "end": "188530"
  },
  {
    "text": "network, and all these databases\nare put together. And what you'd like to do is,\nfrom any place in the company,",
    "start": "188530",
    "end": "197260"
  },
  {
    "text": "to be able to say things like,\noh, what's the name in a",
    "start": "197260",
    "end": "203129"
  },
  {
    "text": "personnel record? Or, what's the job description\nin a personnel record?",
    "start": "203130",
    "end": "210540"
  },
  {
    "text": "And not have to worry about the\nfact that each division obviously is going to have\ncompletely separate",
    "start": "210540",
    "end": "216760"
  },
  {
    "text": "conventions for how you might\nimplement these records. From this point you don't\nwant to know about that.",
    "start": "216760",
    "end": "224960"
  },
  {
    "text": "Well how could you\npossibly do that? One way, of course, is to send\ndown an edict from somewhere",
    "start": "224960",
    "end": "232640"
  },
  {
    "text": "that everybody has to change\ntheir format to some fixed compatible thing.",
    "start": "232640",
    "end": "238069"
  },
  {
    "text": "That's what people often try,\nand of course it never works. Another thing that you might\nwant to do is somehow arrange",
    "start": "238070",
    "end": "247340"
  },
  {
    "text": "it so you can have these\nvertical barriers. So that when you ask for the\nname of a personnel record,",
    "start": "247340",
    "end": "254430"
  },
  {
    "text": "somehow, whatever format it\nhappens to be, name will figure out how to do\nthe right thing.",
    "start": "254430",
    "end": "259470"
  },
  {
    "text": " We want name to be, so-called,\na generic operator.",
    "start": "259470",
    "end": "266260"
  },
  {
    "text": "Generic operator means what it\nsort of precisely does depends on the kind of data that\nit's looking at.",
    "start": "266260",
    "end": "273650"
  },
  {
    "text": "More than that, you'd like to\ndesign the system so that the next time a new division comes\ninto the company they don't",
    "start": "273650",
    "end": "283250"
  },
  {
    "text": "have to make any big changes in\nwhat they're already doing to link into this system, and\nthe rest of the company",
    "start": "283250",
    "end": "290110"
  },
  {
    "text": "doesn't have to make any big\nchanges to admit their stuff to the system.",
    "start": "290110",
    "end": "295520"
  },
  {
    "text": "So that's the problem you should\nbe thinking about. Like it's sort of\njust your work.",
    "start": "295520",
    "end": "300770"
  },
  {
    "text": "You want to be able to\ninclude new things by making minimal changes. ",
    "start": "300770",
    "end": "305980"
  },
  {
    "text": "OK, well that's the problem\nthat we'll be talking about today. And you should have this sort\nof distributed personnel",
    "start": "305980",
    "end": "313140"
  },
  {
    "text": "record system in your mind. But actually the one I'll be\ntalking about is a problem that's a little bit more\nself-contained than that.",
    "start": "313140",
    "end": "318900"
  },
  {
    "text": "that'll bring up the issues,\nI think, more clearly. That's the problem of doing a\nsystem that does arithmetic on",
    "start": "318900",
    "end": "325300"
  },
  {
    "text": "complex numbers. So let's take a look here.",
    "start": "325300",
    "end": "330690"
  },
  {
    "start": "330000",
    "end": "1018000"
  },
  {
    "text": "Just as a little review,\nthere are things called complex numbers. Complex number you can think\nof as a point in",
    "start": "330690",
    "end": "336960"
  },
  {
    "text": "the plane, or z. And you can represent a point\neither by its real-part and",
    "start": "336960",
    "end": "346229"
  },
  {
    "text": "its imaginary-part. So if this is z and its\nreal-part is this much, and",
    "start": "346230",
    "end": "351690"
  },
  {
    "text": "its imaginary-part is that\nmuch, and you write z equals x plus iy. ",
    "start": "351690",
    "end": "359110"
  },
  {
    "text": "Or another way to represent a\ncomplex number is by saying, what's the distance from the\norigin, and what's the angle?",
    "start": "359110",
    "end": "370900"
  },
  {
    "text": "So that represents a complex\nnumber as its radius times an angle.",
    "start": "370900",
    "end": "376670"
  },
  {
    "text": " This one's called-- the\noriginal one's called rectangular form, rectangular\nrepresentation, real- and",
    "start": "376670",
    "end": "384690"
  },
  {
    "text": "imaginary-part, or polar\nrepresentation. Magnitude and angle--",
    "start": "384690",
    "end": "390040"
  },
  {
    "text": "and if you know the real- and\nimaginary-part, you can figure out the magnitude and angle. If you know x and y, you can\nget r by this formula.",
    "start": "390040",
    "end": "397190"
  },
  {
    "text": "Square root of sum of the\nsquares, and you can get the angle as an arctangent. Or conversely, if you knew\nr and A you could",
    "start": "397190",
    "end": "404420"
  },
  {
    "text": "figure out x and y. x is r times the cosine of A,\nand y is r times the sine of",
    "start": "404420",
    "end": "409435"
  },
  {
    "text": "A. All right, so there's\nthese two. They're complex numbers. You can think of them\neither in polar form",
    "start": "409435",
    "end": "415810"
  },
  {
    "text": "or rectangular form. What we would like to do is\nmake a system that does arithmetic on complex numbers.",
    "start": "415810",
    "end": "423849"
  },
  {
    "text": "In other words, what\nwe'd like-- just like the rational\nnumber example-- is to have some operations plus\nc, which is going to take",
    "start": "423850",
    "end": "431120"
  },
  {
    "text": "two complex numbers and add\nthem, subtract them, and multiply them, and\ndivide them.",
    "start": "431120",
    "end": "436910"
  },
  {
    "text": " OK, well there's little bit\nof mathematics behind it.",
    "start": "436910",
    "end": "445280"
  },
  {
    "text": "What are the actual formulas for\nmanipulating such things? And it's sort of not important\nwhere they come from, but just",
    "start": "445280",
    "end": "454270"
  },
  {
    "text": "as an implementer let's see-- if you want to add two complex\nnumbers it's pretty easy to",
    "start": "454270",
    "end": "460030"
  },
  {
    "text": "get its real-part and\nits imaginary-part. The real-part of the sum of\ntwo complex numbers, the",
    "start": "460030",
    "end": "467810"
  },
  {
    "text": "real-part of the z1 plus z2 is\nthe real-part of z1 plus the",
    "start": "467810",
    "end": "473720"
  },
  {
    "text": "real-part of z2.  And the imaginary-part of z1\nplus z2 is the imaginary part",
    "start": "473720",
    "end": "482770"
  },
  {
    "text": "of z1 plus the imaginary\npart of z2. So it's pretty easy to\nadd complex numbers.",
    "start": "482770",
    "end": "489480"
  },
  {
    "text": "You just add the corresponding\nparts and make a new complex number with those parts. If you want to multiply them,\nit's kind of nice to do it in",
    "start": "489480",
    "end": "497180"
  },
  {
    "text": "polar form. Because if you have two complex\nnumbers, the magnitude of their product is here, the\nproduct of the magnitudes.",
    "start": "497180",
    "end": "506285"
  },
  {
    "text": " And the angle of the product\nis the sum of the angles.",
    "start": "506285",
    "end": "515809"
  },
  {
    "text": "So that's sort of mathematics\nthat allows you to do arithmetic on complex numbers. Let's actually think about\nthe implementation.",
    "start": "515809",
    "end": "523719"
  },
  {
    "text": "Well we do it just like\nrational numbers.",
    "start": "523720",
    "end": "529329"
  },
  {
    "text": "We come down, we assume\nwe have some constructors and selectors. What would we like?",
    "start": "529330",
    "end": "535330"
  },
  {
    "text": "Well let's assume that we make\na data object cloud, which is a complex number that has some\nstuff in it, and that we can",
    "start": "535330",
    "end": "542510"
  },
  {
    "text": "get out from a complex number\nthe real-part, or the imaginary-part, or the\nmagnitude, or the angle.",
    "start": "542510",
    "end": "552150"
  },
  {
    "text": "We want some ways of making\ncomplex numbers-- not only selectors, but constructors. So we'll assume we have a thing\ncalled make-rectangular.",
    "start": "552150",
    "end": "560160"
  },
  {
    "text": "What make-rectangular is going\nto do is take a real-part and an imaginary-part and construct\na complex number",
    "start": "560160",
    "end": "568610"
  },
  {
    "text": "with those parts. Similarly, we can have\nmake-polar which will take a",
    "start": "568610",
    "end": "575010"
  },
  {
    "text": "magnitude and an angle, and\nconstruct a complex number",
    "start": "575010",
    "end": "582550"
  },
  {
    "text": "which has that magnitude\nand angle. So here's a system. We'll have two constructors\nand four selectors.",
    "start": "582550",
    "end": "588910"
  },
  {
    "text": "And now, just like before, in\nterms of that abstract data",
    "start": "588910",
    "end": "595149"
  },
  {
    "text": "we'll go ahead and implement our\ncomplex number operations. And here you can see translated\ninto Lisp code just",
    "start": "595150",
    "end": "603279"
  },
  {
    "text": "the arithmetic formulas\nI put down before.",
    "start": "603280",
    "end": "608330"
  },
  {
    "text": "If I want to add two complex\nnumbers I will make a complex",
    "start": "608330",
    "end": "613450"
  },
  {
    "text": "number out of its real-\nand imaginary-parts. The real part of the complex\nnumber I'm going to make is",
    "start": "613450",
    "end": "619680"
  },
  {
    "text": "the sum of the real-parts. The imaginary part of the\ncomplex number I'm going to",
    "start": "619680",
    "end": "625250"
  },
  {
    "text": "make is the sum of the\nimaginary-parts. ",
    "start": "625250",
    "end": "630310"
  },
  {
    "text": "I put those together, make\na complex number. That's how I implement complex\nnumber addition.",
    "start": "630310",
    "end": "635779"
  },
  {
    "text": "Subtraction is essentially\nthe same. All I do is subtract the parts\nrather than add them.",
    "start": "635780",
    "end": "645140"
  },
  {
    "text": "To multiply two complex\nnumbers, I use the other formula. I'll make a complex number out\nof a magnitude and angle.",
    "start": "645140",
    "end": "655350"
  },
  {
    "text": "The magnitude is going to be the\nproduct of the magnitudes of the two complex numbers\nI'm multiplying.",
    "start": "655350",
    "end": "660464"
  },
  {
    "text": " And the angle is going to be the\nsum of the angles of the",
    "start": "660465",
    "end": "666980"
  },
  {
    "text": "two complex numbers\nI'm multiplying. So there's multiplication. And then division, division\nis almost the same.",
    "start": "666980",
    "end": "677370"
  },
  {
    "text": "Here I divide the magnitudes\nand subtract the angles. ",
    "start": "677370",
    "end": "688639"
  },
  {
    "text": "Now I've implemented\nthe operations. And what do we do? We call on George.",
    "start": "688640",
    "end": "696060"
  },
  {
    "text": "We've done the use, let's\nworry about the representation. We'll call on George and say to\nGeorge, go ahead and build",
    "start": "696060",
    "end": "702200"
  },
  {
    "text": "us a complex number\nrepresentation. Well that's fine.",
    "start": "702200",
    "end": "707770"
  },
  {
    "text": "George can say, we'll implement\na complex number simply as a pair that has\nthe real-part and the",
    "start": "707770",
    "end": "716399"
  },
  {
    "text": "imaginary-part. So if I want to make a complex\nnumber with a certain real-part and an imaginary-part,\nI'll just use",
    "start": "716400",
    "end": "723860"
  },
  {
    "text": "cons to form a pair, and that\nwill-- that's George's representation of a\ncomplex number.",
    "start": "723860",
    "end": "729780"
  },
  {
    "text": "So if I want to get out the\nreal-part of something, I just extract the car,\nthe first part. If I want to get the\nimaginary-part, I extract the",
    "start": "729780",
    "end": "736300"
  },
  {
    "text": "cdr. How do I deal with the\nmagnitude and angle?",
    "start": "736300",
    "end": "742220"
  },
  {
    "text": "Well if I want to extract the\nmagnitude of one of these things, I get the square root\nof the sum of the square of",
    "start": "742220",
    "end": "748894"
  },
  {
    "text": "the car plus the square of the\ncdr. If I want to get the",
    "start": "748895",
    "end": "754310"
  },
  {
    "text": "angle, I compute the\narctangent of the cdr in the car.",
    "start": "754310",
    "end": "759529"
  },
  {
    "text": "This is a list procedure for\ncomputing arctangent. ",
    "start": "759530",
    "end": "764970"
  },
  {
    "text": "And if somebody hands me a\nmagnitude and an angle and says, make me a complex number,\nwell I compute the",
    "start": "764970",
    "end": "771670"
  },
  {
    "text": "real-part and the\nimaginary-part, or our cosine of a and our sine of\na, and stick them",
    "start": "771670",
    "end": "778120"
  },
  {
    "text": "together into a pair. OK so we're done. In fact, what I just did,\nconceptually, is absolutely no",
    "start": "778120",
    "end": "787830"
  },
  {
    "text": "different from the rational\nnumber representation that we looked at last time. It's the same sort of idea.",
    "start": "787830",
    "end": "793910"
  },
  {
    "text": "You implement the operators,\nyou pick a representation. Nothing different.",
    "start": "793910",
    "end": "800070"
  },
  {
    "text": "Now let's worry about Martha. See, Martha has a\ndifferent idea.",
    "start": "800070",
    "end": "806670"
  },
  {
    "text": "She doesn't want to represent a\ncomplex number as a pair of a real-part and an\nimaginary-part. What she would like to do is\nrepresent a complex number as",
    "start": "806670",
    "end": "814170"
  },
  {
    "text": "a pair of a magnitude\nand an angle.",
    "start": "814170",
    "end": "819550"
  },
  {
    "text": "So if instead of calling up\nGeorge we ask Martha to design our representation, we get\nsomething like this.",
    "start": "819550",
    "end": "824570"
  },
  {
    "text": "We get make-polar. Sure, if I give you a magnitude\nand an angle we're",
    "start": "824570",
    "end": "830220"
  },
  {
    "text": "just going to form a pair that\nhas magnitude and angle.",
    "start": "830220",
    "end": "835430"
  },
  {
    "text": "If you want to extract the\nmagnitude, that's easy. You just pull out the\ncar or the pair. If you want to extract the\nangle, sure, that's easy.",
    "start": "835430",
    "end": "842670"
  },
  {
    "text": "You just pull out the cdr.\nIf you want to look for real-parts and imaginary-parts,\nwell then you have to do some work.",
    "start": "842670",
    "end": "848589"
  },
  {
    "text": "If you want the real-part, you\nhave to get r cosine a.",
    "start": "848590",
    "end": "854580"
  },
  {
    "text": "In other words, r, the car of\nthe pair, times the cosine of",
    "start": "854580",
    "end": "859990"
  },
  {
    "text": "the cdr of the pair. So this is r times\nthe cosine of a,",
    "start": "859990",
    "end": "866230"
  },
  {
    "text": "and that's the real-part. If you want to get the\nimaginary-part, it's r times the sine of a.",
    "start": "866230",
    "end": "872660"
  },
  {
    "text": "And if I hand you a real-part\nand an imaginary-part and say,",
    "start": "872660",
    "end": "877930"
  },
  {
    "text": "make me a complex number\nwith that real-part and imaginary-part, well I figure\nout what the magnitude and",
    "start": "877930",
    "end": "884170"
  },
  {
    "text": "angle should be. The magnitude's the square root\nof the sum of the squares and the angle's the\narctangent.",
    "start": "884170",
    "end": "889230"
  },
  {
    "text": "I put those together\nto make a pair. So there's Martha's idea. ",
    "start": "889230",
    "end": "896690"
  },
  {
    "text": "Well which is better? Well if you're doing a lot of\nadditions, probably George's",
    "start": "896690",
    "end": "902850"
  },
  {
    "text": "is better, because you're doing\na lot of real-parts and imaginary-parts. If mostly you're going to be\ndoing multiplications and",
    "start": "902850",
    "end": "907920"
  },
  {
    "text": "divisions, then maybe Martha's\nidea is better. Or maybe, and this is the real\npoint, you can't decide.",
    "start": "907920",
    "end": "916590"
  },
  {
    "text": "Or maybe you just have to let\nthem both hang around, for personality reasons.",
    "start": "916590",
    "end": "923480"
  },
  {
    "text": "Maybe you just really\ncan't ever decide what you would like.",
    "start": "923480",
    "end": "928560"
  },
  {
    "text": "And again, what we would really\nlike is a system that looks like this. That somehow there's George\nover here, who has built",
    "start": "928560",
    "end": "937090"
  },
  {
    "text": "rectangular complex numbers. And Martha, who has polar\ncomplex numbers.",
    "start": "937090",
    "end": "946120"
  },
  {
    "text": "And somehow we have operations\nthat can add, and subtract,",
    "start": "946120",
    "end": "954200"
  },
  {
    "text": "and multiply, and divide, and it\nshouldn't matter that there",
    "start": "954200",
    "end": "959710"
  },
  {
    "text": "are two incompatible\nrepresentations of complex numbers floating around\nthis system. In other words, not only like\nan abstraction barrier here",
    "start": "959710",
    "end": "969639"
  },
  {
    "text": "that has things in it like\na real-part, and an",
    "start": "969640",
    "end": "975770"
  },
  {
    "text": "imaginary-part, and magnitude,\nand angle.",
    "start": "975770",
    "end": "983830"
  },
  {
    "text": "So not only is there an\nabstraction barrier that hides the actual representation from\nus, but also there's some kind",
    "start": "983830",
    "end": "990310"
  },
  {
    "text": "of vertical barrier here that\nallows both of these representations to\nexist without",
    "start": "990310",
    "end": "996270"
  },
  {
    "text": "interfering with each other. The idea is that the\nthings in here--",
    "start": "996270",
    "end": "1001900"
  },
  {
    "text": "real-part, imaginary-part,\nmagnitude, and angle-- will be generic operators.",
    "start": "1001900",
    "end": "1007310"
  },
  {
    "text": "If you ask for the real-part,\nit will worry about what representation it's\nlooking at.",
    "start": "1007310",
    "end": "1013880"
  },
  {
    "text": "OK, well how can we do that? There's actually a really\nobvious idea, if you're used",
    "start": "1013880",
    "end": "1020290"
  },
  {
    "start": "1018000",
    "end": "1184000"
  },
  {
    "text": "to thinking about\ncomplex numbers. If you're used to thinking\nabout compound data.",
    "start": "1020290",
    "end": "1026390"
  },
  {
    "text": "See, suppose you could just tell\nby looking at a complex number whether it\nwas constructed",
    "start": "1026390",
    "end": "1033189"
  },
  {
    "text": "by George or Martha. In other words, so it's not that\nwhat's floating around",
    "start": "1033190",
    "end": "1038900"
  },
  {
    "text": "here are ordinary, just complex\nnumbers, right? They're fancy, designer\ncomplex numbers.",
    "start": "1038900",
    "end": "1044390"
  },
  {
    "text": "So you look at a complex numbers\nas it's not just a complex number, it's got a label\non it that says, this one is by Martha.",
    "start": "1044390",
    "end": "1051450"
  },
  {
    "text": "Or this is a complex\nnumber by George. Right? They're signed.",
    "start": "1051450",
    "end": "1056860"
  },
  {
    "text": "See, and then whenever we looked\nat a complex number we could just read the label, and\nthen we'd know how you expect",
    "start": "1056860",
    "end": "1065800"
  },
  {
    "text": "to operate on that. In other words, what\nwe want is not just ordinary data objects.",
    "start": "1065800",
    "end": "1071190"
  },
  {
    "text": "We want to introduce the\nnotion of what's called typed data. ",
    "start": "1071190",
    "end": "1079760"
  },
  {
    "text": "Typed data means, again, there's\nsome sort of cloud. And what it's got in it is an\nordinary data object like",
    "start": "1079760",
    "end": "1088929"
  },
  {
    "text": "we've been thinking about.  Pulled out the contents, sort\nof the actual data.",
    "start": "1088930",
    "end": "1096540"
  },
  {
    "text": " But also a thing called a\ntype, but it's signed by",
    "start": "1096540",
    "end": "1104220"
  },
  {
    "text": "either George or Martha. So we're going to go from\nregular data to type data. ",
    "start": "1104220",
    "end": "1111950"
  },
  {
    "text": "How do we build that? Well that's easy. We know how to build clouds. We build them out of pairs.",
    "start": "1111950",
    "end": "1117919"
  },
  {
    "text": "So here's a little\nrepresentation that supports typed data.",
    "start": "1117920",
    "end": "1123510"
  },
  {
    "text": "There's a thing called take a\ntype and attach it to a piece",
    "start": "1123510",
    "end": "1129020"
  },
  {
    "text": "of contents, and we\njust use cons. And if we have a piece of typed\ndata, we can look at the type, which is the car.",
    "start": "1129020",
    "end": "1136290"
  },
  {
    "text": "We can look at the contents,\nwhich is the cdr. Now along with that, the way we use our\ntype data will test, when",
    "start": "1136290",
    "end": "1145419"
  },
  {
    "text": "we're given a piece of data,\nwhat type it is. So we have some type\npredicates with us.",
    "start": "1145420",
    "end": "1150510"
  },
  {
    "text": "For example, to see whether\na complex number is one of George's, whether it's\nrectangular, we just check to",
    "start": "1150510",
    "end": "1156860"
  },
  {
    "text": "see if the type of that is the\nsymbol rectangular, right?",
    "start": "1156860",
    "end": "1163850"
  },
  {
    "text": "The symbol rectangular.  And to check whether a complex\nnumber is one of Martha's, we",
    "start": "1163850",
    "end": "1170649"
  },
  {
    "text": "check to see whether the type\nis the symbol polar. ",
    "start": "1170650",
    "end": "1176460"
  },
  {
    "text": "So that's a way to test\nwhat kind of number we're looking at. Now let's think about\nhow we can use that",
    "start": "1176460",
    "end": "1182070"
  },
  {
    "text": "to build the system. So let's suppose that George\nand Martha were off working separately, and each of them\nhad designed their complex",
    "start": "1182070",
    "end": "1190710"
  },
  {
    "start": "1184000",
    "end": "1305000"
  },
  {
    "text": "number representation\npackages. What do they have to do to\nbecome part of the system, to",
    "start": "1190710",
    "end": "1198980"
  },
  {
    "text": "exist compatibly? Well it's really pretty easy. Remember, George had\nthis package.",
    "start": "1198980",
    "end": "1205970"
  },
  {
    "text": "Here's George's original\npackage, or half of it. And underlined in red are the\nchanges he has to make.",
    "start": "1205970",
    "end": "1212090"
  },
  {
    "text": "So before, when George made a\ncomplex number out of an x and y, he just put them together\nto make a pair.",
    "start": "1212090",
    "end": "1220930"
  },
  {
    "text": "And the only difference is\nthat now he signs them. He attaches the type,\nwhich is the symbol",
    "start": "1220930",
    "end": "1226919"
  },
  {
    "text": "rectangular to that pair. Everything else George does\nis the same, except that--",
    "start": "1226920",
    "end": "1233919"
  },
  {
    "text": "see, George and Martha both\nhave procedures named real-part and imaginary-part. So to allow them both to exist\nin the same Lisp environment,",
    "start": "1233920",
    "end": "1244220"
  },
  {
    "text": "George had changed the names\nof his procedures. So we'll say, this is George's\nreal-part procedure. It's the real-part rectangular\nprocedure, the imaginary-part",
    "start": "1244220",
    "end": "1252710"
  },
  {
    "text": "rectangular procedure. And then here's the rest\nof George's package.",
    "start": "1252710",
    "end": "1259130"
  },
  {
    "text": "He'd had magnitude and angle,\njust renames them magnitude rectangular and angle\nrectangular.",
    "start": "1259130",
    "end": "1265702"
  },
  {
    "text": "And Martha has to do basically\nthe same thing. Martha previously, when she made\na complex number out of a",
    "start": "1265702",
    "end": "1275200"
  },
  {
    "text": "magnitude and angle,\nshe just cons them. Now she attaches the type polar,\nand she changes the",
    "start": "1275200",
    "end": "1285330"
  },
  {
    "text": "name so her real-part procedure\nwon't conflict in name with George's.",
    "start": "1285330",
    "end": "1290710"
  },
  {
    "text": "It's a real-part-polar,\nimaginary-part-polar, magnitude polar, and\nangle polar.",
    "start": "1290710",
    "end": "1298060"
  },
  {
    "start": "1298060",
    "end": "1305000"
  },
  {
    "text": "Now we have the system. Right there's George\nand Martha. And now we've got to get some\nkind of manager to look at",
    "start": "1305000",
    "end": "1311050"
  },
  {
    "text": "these types.  How are these things actually\ngoing to work now that George",
    "start": "1311050",
    "end": "1317530"
  },
  {
    "text": "and Martha have supplied\nus with typed data? Well what we have are a bunch\nof generic selectors.",
    "start": "1317530",
    "end": "1325260"
  },
  {
    "text": "Generic selectors for complex\nnumbers real-part, imaginary-part, magnitude,\nand angle.",
    "start": "1325260",
    "end": "1330630"
  },
  {
    "text": " Let's look at them\nmore closely. ",
    "start": "1330630",
    "end": "1337930"
  },
  {
    "text": "What does a real-part do? If I ask for the real part\nof a complex number,",
    "start": "1337930",
    "end": "1344070"
  },
  {
    "text": "well I look at it. I look at its type. I say, is it rectangular? ",
    "start": "1344070",
    "end": "1351019"
  },
  {
    "text": "If so, I apply George's real\npart procedure to the contents",
    "start": "1351020",
    "end": "1356970"
  },
  {
    "text": "of that complex number.  This is a number that\nhas a type on it.",
    "start": "1356970",
    "end": "1363720"
  },
  {
    "text": "I strip off the type\nusing contents and apply George's procedure. ",
    "start": "1363720",
    "end": "1370700"
  },
  {
    "text": "Or is this a polar\ncomplex number? If I want the real part, I\napply Martha's real part",
    "start": "1370700",
    "end": "1376889"
  },
  {
    "text": "procedure to the contents\nof that number. So that's how real part works.",
    "start": "1376890",
    "end": "1382260"
  },
  {
    "text": "And then similarly there's\nimaginary-part, which is almost the same. It looks at the number and\nif it's rectangular, uses",
    "start": "1382260",
    "end": "1389600"
  },
  {
    "text": "George's imaginary-part\nprocedure. If it's polar, uses Martha's. And then there's a magnitude\nand an angle.",
    "start": "1389600",
    "end": "1397240"
  },
  {
    "text": " So there's a system. ",
    "start": "1397240",
    "end": "1403460"
  },
  {
    "text": "Has three parts. There's sort of George, and\nMartha, and the manager. And that's how you get generic\noperators implemented.",
    "start": "1403460",
    "end": "1408970"
  },
  {
    "start": "1405000",
    "end": "1579000"
  },
  {
    "text": "Let's look at just a simple\nexample, just to pin it down. But exactly how this is going to\nwork, suppose you're going",
    "start": "1408970",
    "end": "1420240"
  },
  {
    "text": "to be looking at the complex\nnumber who's real-part is one, and who's imaginary-part\nis two.",
    "start": "1420240",
    "end": "1426090"
  },
  {
    "text": "So that would be one plus 2i. What would happen is up here,\nup here above where the",
    "start": "1426090",
    "end": "1436350"
  },
  {
    "text": "operations have to happen,\nthat number would be represented as a pair of 1 and\n2 together with typed data.",
    "start": "1436350",
    "end": "1450320"
  },
  {
    "text": "That would be the contents. And the whole data would be\nthat thing with the symbol",
    "start": "1450320",
    "end": "1456300"
  },
  {
    "text": "rectangular added onto that. And that's the way that complex\nnumber would exist in the system.",
    "start": "1456300",
    "end": "1462330"
  },
  {
    "text": "When you went to take the\nreal-part, the manager would look at this and say, oh\nit's one of George's.",
    "start": "1462330",
    "end": "1470270"
  },
  {
    "text": "He'll strip off the type\nand hand down to George the pair 1, 2.",
    "start": "1470270",
    "end": "1477532"
  },
  {
    "text": "And that's the kind of data\nthat George developed his system to use.",
    "start": "1477532",
    "end": "1482670"
  },
  {
    "text": " So it gets stripped down. Later on, if you ask George to\nconstruct a complex number,",
    "start": "1482670",
    "end": "1491240"
  },
  {
    "text": "George would construct some\ncomplex number as a pair, and before he passes it back up\nthrough the manager would",
    "start": "1491240",
    "end": "1499630"
  },
  {
    "text": "attach the type rectangular.  So you see what happens.",
    "start": "1499630",
    "end": "1504650"
  },
  {
    "text": "There's no confusion\nin this system. It doesn't matter in the least\nthat the pair 1, 2 means",
    "start": "1504650",
    "end": "1513780"
  },
  {
    "text": "something completely different\nin Martha's world. In Martha's world this pair\nmeans the complex number whose magnitude is 1 and\nwhose angle is 2.",
    "start": "1513780",
    "end": "1521190"
  },
  {
    "text": "And there's no confusion,\nbecause by the time any pair like this gets handed back\nthrough the manager to the",
    "start": "1521190",
    "end": "1527250"
  },
  {
    "text": "main system it's going to have\nthe type polar attached. Whereas this one would have the\ntype rectangular attached.",
    "start": "1527250",
    "end": "1533669"
  },
  {
    "text": " OK, let's take a break. ",
    "start": "1533670",
    "end": "1540770"
  },
  {
    "text": "[MUSIC-- \"JESU, JOY OF\nMAN'S DESIRING\" BY JOHANN SEBASTIAN BACH] ",
    "start": "1540770",
    "end": "1580210"
  },
  {
    "start": "1579000",
    "end": "1763000"
  },
  {
    "text": "We just looked at\na strategy for implementing generic operators. That strategy has a name: it's\ncalled dispatch type.",
    "start": "1580210",
    "end": "1591400"
  },
  {
    "text": " And the idea is that you\nbreak your system",
    "start": "1591400",
    "end": "1598480"
  },
  {
    "text": "into a bunch of pieces. There's George and Martha, who\nare making representations, and then there's the manager.",
    "start": "1598480",
    "end": "1606320"
  },
  {
    "text": "Looks at the types on the data\nand then dispatches them to the right person.",
    "start": "1606320",
    "end": "1611990"
  },
  {
    "text": "Well what criticisms can we\nmake of that as a system organization? ",
    "start": "1611990",
    "end": "1618149"
  },
  {
    "text": "Well first of all there was this\nlittle, annoying problem that George and Martha had to\nchange the names of their procedures.",
    "start": "1618150",
    "end": "1624220"
  },
  {
    "text": "George originally had a\nreal-part procedure, and he had to go name it real-part\nrectangular so it wouldn't interfere with Martha's\nreal-part procedure, which is",
    "start": "1624220",
    "end": "1631170"
  },
  {
    "text": "now named real-part-polar, so it\nwouldn't interfere with the manager's real-part procedure,\nwho's now named real-part.",
    "start": "1631170",
    "end": "1637310"
  },
  {
    "text": "That's kind of an annoying\nproblem. But I'm not going to talk\nabout that one now. We'll see later on when we think\nabout the structure of",
    "start": "1637310",
    "end": "1644450"
  },
  {
    "text": "Lisp names and environments that\nthere really are ways to package all those so-called name\nspaces separately so they",
    "start": "1644450",
    "end": "1650390"
  },
  {
    "text": "don't interfere with\neach other. Not going to think about\nthat problem now.",
    "start": "1650390",
    "end": "1655720"
  },
  {
    "text": "The problem that I actually\nwant to focus on is what happens when you bring somebody\nnew into the system.",
    "start": "1655720",
    "end": "1664510"
  },
  {
    "text": "What has to happen? Well George and Martha\ndon't care. George is sitting there in his\nrectangular world, has his",
    "start": "1664510",
    "end": "1672830"
  },
  {
    "text": "procedures and his types. Martha sits in her\npolar world. She doesn't care.",
    "start": "1672830",
    "end": "1679380"
  },
  {
    "text": "But let's look at the manager. What's the manager have to do? The manager comes through and\nhad these operations.",
    "start": "1679380",
    "end": "1687360"
  },
  {
    "text": "There was a test\nfor rectangular and a test for polar. If Harry comes in with some new\nkind of complex number,",
    "start": "1687360",
    "end": "1697210"
  },
  {
    "text": "and Harry has a new type, Harry\ntype complex number, the manager has to go in and change\nall those procedures.",
    "start": "1697210",
    "end": "1705240"
  },
  {
    "text": "So the inflexibility in the\nsystem, the place where work has to happen to accommodate\nchange, is in the manager.",
    "start": "1705240",
    "end": "1714889"
  },
  {
    "text": "That's pretty annoying. It's even more annoying when you\nrealize the manager's not",
    "start": "1714890",
    "end": "1720300"
  },
  {
    "text": "doing anything. The manager is just being\na paper pusher.",
    "start": "1720300",
    "end": "1726690"
  },
  {
    "text": "Let's look again at these\nprograms. What are they doing?",
    "start": "1726690",
    "end": "1731759"
  },
  {
    "text": "What does real-part do? Real-part says, oh, is it the\nkind of complex number that George can handle?",
    "start": "1731760",
    "end": "1737000"
  },
  {
    "text": "If so, send it off to George. Is it the kind of complex number\nthat Martha can handle? If so, send it off to Martha.",
    "start": "1737000",
    "end": "1745040"
  },
  {
    "text": "So it's really annoying that the\nbottleneck in this system, the thing that's preventing\nflexibility and change, is",
    "start": "1745040",
    "end": "1753039"
  },
  {
    "text": "completely in the bureaucracy. It's not in anybody who's\ndoing any of the work.",
    "start": "1753040",
    "end": "1759700"
  },
  {
    "text": "Not an uncommon situation,\nunfortunately. See, what's really going on-- abstractly in the system,\nthere's a table.",
    "start": "1759700",
    "end": "1768100"
  },
  {
    "start": "1763000",
    "end": "2070000"
  },
  {
    "text": "So what's really happening is\nsomewhere there's a table.  There're types.",
    "start": "1768100",
    "end": "1774400"
  },
  {
    "text": "There's polar and rectangular. ",
    "start": "1774400",
    "end": "1781549"
  },
  {
    "text": "And Harry's may be over here. And there are operators.",
    "start": "1781550",
    "end": "1788050"
  },
  {
    "text": "There's an operator\nlike real-part. ",
    "start": "1788050",
    "end": "1795600"
  },
  {
    "text": "Or imaginary-part. Or a magnitude and angle.",
    "start": "1795600",
    "end": "1805830"
  },
  {
    "text": "And sitting in this table are\nthe right procedures.",
    "start": "1805830",
    "end": "1819279"
  },
  {
    "text": "So sitting here for the type\npolar and real-part is Martha's procedure\nreal-part-polar.",
    "start": "1819280",
    "end": "1824730"
  },
  {
    "start": "1824730",
    "end": "1830570"
  },
  {
    "text": "And over here in the table\nis George's procedure real-part-rectangular. ",
    "start": "1830570",
    "end": "1837740"
  },
  {
    "text": "And over here would be, say,\nMartha's procedure magnitude-polar, and\nGeorge's procedure",
    "start": "1837740",
    "end": "1846780"
  },
  {
    "text": "magnitude-rectangular,\nright, and so on. The rest of this table's\nfilled in.",
    "start": "1846780",
    "end": "1852390"
  },
  {
    "text": "And that's really\nwhat's going on. ",
    "start": "1852390",
    "end": "1857630"
  },
  {
    "text": "So in some sense, all the\nmanager is doing is acting as",
    "start": "1857630",
    "end": "1863380"
  },
  {
    "text": "this table.  Well how do we fix our system?",
    "start": "1863380",
    "end": "1868610"
  },
  {
    "text": " How do you fix bureaucracies\na lot of the time?",
    "start": "1868610",
    "end": "1873770"
  },
  {
    "text": "What you do is you get\nrid of the manager. We just take the manager and\nreplace him by a computer.",
    "start": "1873770",
    "end": "1880170"
  },
  {
    "text": "We're going to automate\nhim out of existence. Namely, instead of having the\nmanager who basically consults",
    "start": "1880170",
    "end": "1885970"
  },
  {
    "text": "this table, we'll have our\nsystem use the table directly.",
    "start": "1885970",
    "end": "1891020"
  },
  {
    "text": "What do I mean by that? Let's assume, again using data\nabstraction, that we have some",
    "start": "1891020",
    "end": "1898730"
  },
  {
    "text": "kind of data structure\nthat's a table. And we have ways of sticking\nthings in and ways of getting things out.",
    "start": "1898730",
    "end": "1904356"
  },
  {
    "text": "And to be explicit, let me\nassume that there's an operation called \"put.\" And put\nis going to take, in this",
    "start": "1904356",
    "end": "1912710"
  },
  {
    "text": "case two things I'll call\n\"keys.\" Key1 and key2.",
    "start": "1912710",
    "end": "1920130"
  },
  {
    "text": "And a value. ",
    "start": "1920130",
    "end": "1926200"
  },
  {
    "text": "And that stores the value in the\ntable under key1 and key2.",
    "start": "1926200",
    "end": "1931490"
  },
  {
    "text": "And then we'll assume there's\na thing called \"get,\" such that if later on I say, get me\nwhat's in the table stored",
    "start": "1931490",
    "end": "1939680"
  },
  {
    "text": "under key1 and key2, it'll\nretrieve whatever value was",
    "start": "1939680",
    "end": "1945010"
  },
  {
    "text": "stored there. And let's not worry about how\ntables are implemented. That's yet another data\nabstraction, George's problem.",
    "start": "1945010",
    "end": "1953060"
  },
  {
    "text": "And maybe we'll see later-- talk about how you might\nactually build tables in Lisp. ",
    "start": "1953060",
    "end": "1960710"
  },
  {
    "text": "Well given this organization,\nwhat did George and Martha have to do?",
    "start": "1960710",
    "end": "1967380"
  },
  {
    "text": "Well when they build their\nsystem, they each have the responsibility to set\nup their appropriate",
    "start": "1967380",
    "end": "1972750"
  },
  {
    "text": "column in the table. So what George does, for\nexample, when he defines his",
    "start": "1972750",
    "end": "1980620"
  },
  {
    "text": "procedures, all he has to do\nis go off and put into the table under the\ntype-rectangular.",
    "start": "1980620",
    "end": "1986990"
  },
  {
    "text": " And the name of the operation\nis real-part, his procedure",
    "start": "1986990",
    "end": "1994100"
  },
  {
    "text": "real-part-rectangular. So notice what's going\ninto this table. The two keys here are symbols,\nrectangular and real-part.",
    "start": "1994100",
    "end": "2002100"
  },
  {
    "text": "That's the quote. And what's going into the table\nis the actual procedure",
    "start": "2002100",
    "end": "2007410"
  },
  {
    "text": "that he wrote, real-part\nrectangular.  And then puts an imaginary part\ninto the table, filed",
    "start": "2007410",
    "end": "2015000"
  },
  {
    "text": "under the keys rectangular-\nand imaginary-part, and magnitude under the keys\nrectangular magnitude, angle",
    "start": "2015000",
    "end": "2024020"
  },
  {
    "text": "under rectangular-angle.  So that's what George has to do\nto be part of this system.",
    "start": "2024020",
    "end": "2030840"
  },
  {
    "text": " Martha similarly sets\nup the column and",
    "start": "2030840",
    "end": "2037740"
  },
  {
    "text": "the table under polar. Polar and real-part. Is the procedure\nreal-part-polar?",
    "start": "2037740",
    "end": "2044340"
  },
  {
    "text": "And imaginary-part, and\nmagnitude, and angle. So this is what Martha has to\ndo to be part of the system.",
    "start": "2044340",
    "end": "2051408"
  },
  {
    "text": "Everyone who makes a\nrepresentation has the responsibility for setting\nup a column in the table.",
    "start": "2051409",
    "end": "2057840"
  },
  {
    "text": "And what does Harry do when\nHarry comes in with his brilliant idea for implementing\ncomplex numbers? Well he makes whatever procedure\nhe wants and builds",
    "start": "2057840",
    "end": "2065169"
  },
  {
    "text": "a new column in this table. OK, well what happened\nto the manager?",
    "start": "2065170",
    "end": "2071330"
  },
  {
    "start": "2070000",
    "end": "2242000"
  },
  {
    "text": "The manager has been automated\nout of existence and is replaced by a procedure\ncalled operate.",
    "start": "2071330",
    "end": "2077110"
  },
  {
    "text": "And this is the key procedure\nin the whole system. Let's say define operate.",
    "start": "2077110",
    "end": "2085919"
  },
  {
    "start": "2085920",
    "end": "2091059"
  },
  {
    "text": "Operate is going to take an\noperation that you want to do,",
    "start": "2091060",
    "end": "2097750"
  },
  {
    "text": "the name of an operation, and an\nobject that you would like to apply that operation to.",
    "start": "2097750",
    "end": "2104210"
  },
  {
    "text": "So for example, the real-part\nof some particular complex number, what does it do?",
    "start": "2104210",
    "end": "2109890"
  },
  {
    "text": "Well the first thing it does,\nit looks in the table. Goes into the table and tries\nto find a procedure that's",
    "start": "2109890",
    "end": "2120710"
  },
  {
    "text": "stored in the table. So it gets from the table, using\nas keys the type of the",
    "start": "2120710",
    "end": "2129830"
  },
  {
    "text": "object and the operator, but\nlooks on the table and sees",
    "start": "2129830",
    "end": "2140450"
  },
  {
    "text": "what's stored under the type\nof the object and the operator, sees if anything's\nstored. Let's assume that get\nis implemented.",
    "start": "2140450",
    "end": "2145930"
  },
  {
    "text": "So if nothing is stored there,\nit'll return the empty list.",
    "start": "2145930",
    "end": "2152559"
  },
  {
    "text": "So it says, if there's actually\nsomething stored there, if the procedure here is\nnot no, then it'll take the",
    "start": "2152560",
    "end": "2164920"
  },
  {
    "text": "procedure that it found in the\ntable and apply it to the",
    "start": "2164920",
    "end": "2171240"
  },
  {
    "text": "contents of the object. ",
    "start": "2171240",
    "end": "2178042"
  },
  {
    "text": "And otherwise if there was\nnothing stored there, it'll-- well we can decide. In this case let's have it put\nout an error message saying,",
    "start": "2178042",
    "end": "2185920"
  },
  {
    "text": "undefined operator. No operator for this type. ",
    "start": "2185920",
    "end": "2192770"
  },
  {
    "text": "Or some appropriate\nerror message. ",
    "start": "2192770",
    "end": "2199150"
  },
  {
    "text": "OK? And that replaces the manager. How do we really use it? Well what we say is we'll go\noff and define our generic",
    "start": "2199150",
    "end": "2208580"
  },
  {
    "text": "selectors using operate. We'll say that the real-part\nof an object is found by",
    "start": "2208580",
    "end": "2217140"
  },
  {
    "text": "operating on the object with\nthe name of the operation",
    "start": "2217140",
    "end": "2225010"
  },
  {
    "text": "being real-part.  And then similarly,\nimaginary-part is operate",
    "start": "2225010",
    "end": "2230870"
  },
  {
    "text": "using the name imaginary-part\nand magnitude and angle.",
    "start": "2230870",
    "end": "2236080"
  },
  {
    "text": "That's our implementation. That plus the tape plus\nthe operate procedure.",
    "start": "2236080",
    "end": "2241329"
  },
  {
    "text": "And the table effectively\nreplaces what the manager used to do. Let's just go through that\nslowly to show you",
    "start": "2241330",
    "end": "2247039"
  },
  {
    "text": "what's going on. Suppose I have one of Martha's\ncomplex numbers.",
    "start": "2247040",
    "end": "2253000"
  },
  {
    "text": " It's got magnitude\n1 and angle 2.",
    "start": "2253000",
    "end": "2259100"
  },
  {
    "text": "And it's one of Martha's. So it's labeled here, polar.",
    "start": "2259100",
    "end": "2267119"
  },
  {
    "text": "Let's call that z. Suppose that's z.  And suppose with this\nimplementation someone comes",
    "start": "2267120",
    "end": "2274320"
  },
  {
    "text": "up and asks for the\nreal-part of z. ",
    "start": "2274320",
    "end": "2284870"
  },
  {
    "text": "Well real-part now is defined\nin terms of operate. So that's equivalent to saying\noperate with the name of the",
    "start": "2284870",
    "end": "2298470"
  },
  {
    "text": "operator being real-part, the\nsymbol real-part on z.",
    "start": "2298470",
    "end": "2307060"
  },
  {
    "text": "And now operate comes. It's going to look in the table,\nand it's going to try and find something\nstored under--",
    "start": "2307060",
    "end": "2314005"
  },
  {
    "text": " the operation is going to apply\nby looking in the table",
    "start": "2314005",
    "end": "2322160"
  },
  {
    "text": "under the type of the object. And the type of z is polar.",
    "start": "2322160",
    "end": "2328790"
  },
  {
    "text": "So it's going to look and say,\ncan I get using polar? And the operation name,\nwhich was real-part.",
    "start": "2328790",
    "end": "2338250"
  },
  {
    "start": "2338250",
    "end": "2345960"
  },
  {
    "text": "It's going to look in there\nand apply that to the contents of z.",
    "start": "2345960",
    "end": "2354930"
  },
  {
    "text": "And that? If everything was set up\ncorrectly, this thing is the",
    "start": "2354930",
    "end": "2360349"
  },
  {
    "text": "procedure that Martha\nput there. This is real-part-polar. ",
    "start": "2360350",
    "end": "2370790"
  },
  {
    "text": "And this is z without\nits type. The thing that Martha originally\ndesigned those",
    "start": "2370790",
    "end": "2377859"
  },
  {
    "text": "procedures to work on,\nwhich is 1, 2. ",
    "start": "2377860",
    "end": "2383790"
  },
  {
    "text": "And so operate sort of does\nuniformly what the manager used to do sort of all\nover the system.",
    "start": "2383790",
    "end": "2389450"
  },
  {
    "text": "It finds the right thing, looks\nin the table, strips off the type, and passes\nit down into the",
    "start": "2389450",
    "end": "2396599"
  },
  {
    "text": "person who handles it. This is another, and, you can\nsee, more flexible for most",
    "start": "2396600",
    "end": "2404980"
  },
  {
    "text": "purposes, way of implementing\ngeneric operators. And it's called data-directed\nprogramming.",
    "start": "2404980",
    "end": "2415505"
  },
  {
    "text": " And the idea of that is in some\nsense the data objects",
    "start": "2415505",
    "end": "2424920"
  },
  {
    "text": "themselves, those little complex\nnumbers that are floating around the system,\nare carrying with them the",
    "start": "2424920",
    "end": "2430340"
  },
  {
    "text": "information about how you\nshould operate on them.",
    "start": "2430340",
    "end": "2435390"
  },
  {
    "text": "Let's break for questions. ",
    "start": "2435390",
    "end": "2441000"
  },
  {
    "text": "Yes. AUDIENCE: What do you have\nstored in that data object? You have the data itself, you\nhave its type, and you have",
    "start": "2441000",
    "end": "2447849"
  },
  {
    "text": "the operations for that type? Or where are the operations\nthat you found?",
    "start": "2447850",
    "end": "2453599"
  },
  {
    "text": "PROFESSOR: OK, let me-- yeah, that's a good question. Because it raises other\npossibilities of how",
    "start": "2453600",
    "end": "2459700"
  },
  {
    "text": "you might do it. And of course there are a\nlot of possibilities. In this particular\nimplementation, what's sitting",
    "start": "2459700",
    "end": "2466820"
  },
  {
    "text": "in this data object, for\nexample, is the data itself-- which in this case is\na pair of 1 and 2--",
    "start": "2466820",
    "end": "2474980"
  },
  {
    "text": "and also a symbol. This is the symbol, the word\nP-O-L-A-R, and that's what's",
    "start": "2474980",
    "end": "2481140"
  },
  {
    "text": "sitting in this data object.  Where are the operations\nthemselves?",
    "start": "2481140",
    "end": "2486690"
  },
  {
    "text": "The operations are sitting\nin the table. So in this table, the rows and\ncolumns of the table are",
    "start": "2486690",
    "end": "2495450"
  },
  {
    "text": "labeled by symbols. So when I store something in\nthis table, the key might be",
    "start": "2495450",
    "end": "2500810"
  },
  {
    "text": "the symbol polar and the\nsymbol magnitude.",
    "start": "2500810",
    "end": "2508240"
  },
  {
    "text": "And I think by writing it this\nway I've been very confusing. Because what's really\nsitting here isn't-- when I wrote magnitude polar,\nwhat I mean is the procedure",
    "start": "2508240",
    "end": "2518359"
  },
  {
    "text": "magnitude polar. And probably what I really\nshould have written-- except it's too small\nfor me to write",
    "start": "2518360",
    "end": "2524200"
  },
  {
    "text": "in this little space-- is something like lambda\nof z, the thing that",
    "start": "2524200",
    "end": "2531250"
  },
  {
    "text": "Martha wrote to implement. And then you can see from that,\nthere's another way that",
    "start": "2531250",
    "end": "2536619"
  },
  {
    "text": "I alluded to of solving this\nname conflict problem, which is that George and Martha\nnever have to name their",
    "start": "2536620",
    "end": "2542380"
  },
  {
    "text": "procedures at all. They can just stick the\nanonymous things generated by lambda directly into\nthe table.",
    "start": "2542380",
    "end": "2548660"
  },
  {
    "text": "There's also another thing that\nyour question raises, is the possibility that maybe what\nI would like somehow is",
    "start": "2548660",
    "end": "2556045"
  },
  {
    "text": "to store in this data object not\nthe symbol P-O-L-A-R but maybe actually all the\noperations themselves.",
    "start": "2556045",
    "end": "2563520"
  },
  {
    "text": "And that's another way to\norganize the system, called message passing.",
    "start": "2563520",
    "end": "2568650"
  },
  {
    "text": "So there are a lot of\nways you can do it. ",
    "start": "2568650",
    "end": "2574640"
  },
  {
    "text": "AUDIENCE: Therefore if Martha\nand George had used the same procedure names, it would be\nOK because it wouldn't look",
    "start": "2574640",
    "end": "2581230"
  },
  {
    "text": "[UNINTELLIGIBLE]. PROFESSOR: That's right. That's right. See, they wouldn't even\nhave to name their",
    "start": "2581230",
    "end": "2587059"
  },
  {
    "text": "procedures at all. What George could have written\ninstead of saying put in the",
    "start": "2587060",
    "end": "2592440"
  },
  {
    "text": "table under rectangular- and\nreal-part, the procedure real-part rectangular, George\ncould have written put under",
    "start": "2592440",
    "end": "2599660"
  },
  {
    "text": "rectangular real-part, lambda\nof z, such and such, and such and such. And the system would work\ncompletely the same.",
    "start": "2599660",
    "end": "2607330"
  },
  {
    "text": "AUDIENCE: My question is, Martha\ncould have put key1 key2 real-part, and George\ncould have put key1 key2",
    "start": "2607330",
    "end": "2617120"
  },
  {
    "text": "real-part, and as long as they\ndefined them differently they wouldn't have had any\nconflicts, right? PROFESSOR: Yes, that would all\nbe OK except for the fact that",
    "start": "2617120",
    "end": "2625130"
  },
  {
    "text": "if you imagine George and Martha\ntyping at the same console with the same meanings\nfor all their names, and it would get confused by real-part,\nbut there are ways",
    "start": "2625130",
    "end": "2631720"
  },
  {
    "text": "to arrange that, too. And in principle you're\nabsolutely right. If their names didn't\nconflict-- it's the objects that go in\nthe table, not the names.",
    "start": "2631720",
    "end": "2638190"
  },
  {
    "start": "2638190",
    "end": "2648200"
  },
  {
    "text": "OK, let's take a break.  [MUSIC-- \"JESU, JOY OF\nMAN'S DESIRING\" BY JOHANN SEBASTIAN BACH]",
    "start": "2648200",
    "end": "2654086"
  },
  {
    "start": "2654086",
    "end": "2712880"
  },
  {
    "text": "All right, well we just looked\nat data-directed programming as a way of implementing a\nsystem that does arithmetic on",
    "start": "2712880",
    "end": "2721589"
  },
  {
    "text": "complex numbers. ",
    "start": "2721590",
    "end": "2727420"
  },
  {
    "text": "So I had these operations in it\ncalled plus C and minus C,",
    "start": "2727420",
    "end": "2732880"
  },
  {
    "text": "and multiply, and divide,\nand maybe some others.",
    "start": "2732880",
    "end": "2738230"
  },
  {
    "text": "And that sat on top of-- and\nthis is the key point-- sat on",
    "start": "2738230",
    "end": "2746030"
  },
  {
    "text": "top of two different\nrepresentations. A rectangular package here,\nand a polar package.",
    "start": "2746030",
    "end": "2755110"
  },
  {
    "text": " And maybe some more. And we saw that the whole idea\nis that maybe some more are",
    "start": "2755110",
    "end": "2761640"
  },
  {
    "text": "now very easy to add. But that doesn't really show the\npower of this methodology.",
    "start": "2761640",
    "end": "2768900"
  },
  {
    "start": "2764000",
    "end": "2861000"
  },
  {
    "text": "Shows you what's going on. The power of the methodology\nonly becomes apparent when you start embedding this in some\nmore complex system.",
    "start": "2768900",
    "end": "2777080"
  },
  {
    "text": "What I'm going to do now is\nembed this in some more complex system. Let's assume that what we really\nhave is a general kind",
    "start": "2777080",
    "end": "2783960"
  },
  {
    "text": "of arithmetic system. So called generic arithmetic\nsystem. And at the top level here,\nsomebody can say add two",
    "start": "2783960",
    "end": "2792060"
  },
  {
    "text": "things, or subtract two things,\nor multiply two",
    "start": "2792060",
    "end": "2798450"
  },
  {
    "text": "things, or divide two things. ",
    "start": "2798450",
    "end": "2804140"
  },
  {
    "text": "And underneath that there's\nan abstraction barrier. And underneath this barrier,\nis, say, a",
    "start": "2804140",
    "end": "2810510"
  },
  {
    "text": "complex arithmetic package. And you can say, add two\ncomplex numbers. Or you might also have--\nremember we did a rational",
    "start": "2810510",
    "end": "2817540"
  },
  {
    "text": "number package-- you might\nhave that sitting there. And there might be\na rational thing.",
    "start": "2817540",
    "end": "2823950"
  },
  {
    "text": "And the rational number package,\nwell, has the things we implemented. Plus rat, and times\nrat, and so on.",
    "start": "2823950",
    "end": "2835490"
  },
  {
    "text": "Or you might have ordinary\nLisp numbers. You might say add\nthree and four. So we might have ordinary\nnumbers, in which case we have",
    "start": "2835490",
    "end": "2849030"
  },
  {
    "text": "the Lisp supplied plus, and\nminus, and times, and slash.",
    "start": "2849030",
    "end": "2856670"
  },
  {
    "text": "OK, so we might imagine this\ncomplex number system sitting in a more complicated generic\noperator structure at",
    "start": "2856670",
    "end": "2863660"
  },
  {
    "start": "2861000",
    "end": "2995000"
  },
  {
    "text": "the next level up.  Well how can we make that?",
    "start": "2863660",
    "end": "2869050"
  },
  {
    "text": "We already have the\nidea, we're just going to do it again. We've implemented a rational\nnumber package.",
    "start": "2869050",
    "end": "2874720"
  },
  {
    "text": "Let's look at how it\nhas to be changed. ",
    "start": "2874720",
    "end": "2881589"
  },
  {
    "text": "In fact, at this level\nit doesn't have to be changed at all. This is exactly the code that\nwe wrote last time.",
    "start": "2881590",
    "end": "2887180"
  },
  {
    "text": "To add two rational\nnumbers, remember there was this formula. You make a rational number\nwhose numerator--",
    "start": "2887180",
    "end": "2894980"
  },
  {
    "text": "the numerator of the first times\nthe denominator of the second, plus the denominator\nof the first times the",
    "start": "2894980",
    "end": "2900486"
  },
  {
    "text": "numerator of the second. And who's denominator is the\nproduct of the denominators.",
    "start": "2900486",
    "end": "2905760"
  },
  {
    "text": "And minus rat, and star\nrat, and slash rat. And this is exactly the rational\nnumber package that",
    "start": "2905760",
    "end": "2914420"
  },
  {
    "text": "we made before. We're ignoring the GCD problem,\nbut let's not worry about that.",
    "start": "2914420",
    "end": "2920240"
  },
  {
    "text": "As implementers of this rational\nnumber package, how do we install it in the generic\narithmetic system?",
    "start": "2920240",
    "end": "2925570"
  },
  {
    "text": "Well that's easy.  There's only one thing we\nhave to do differently.",
    "start": "2925570",
    "end": "2931840"
  },
  {
    "text": "Whereas previously we said that\nto make a rational number you built a pair of the\nnumerator and denominator,",
    "start": "2931840",
    "end": "2940960"
  },
  {
    "text": "here we'll not only build the\npair, but we'll sign it. We'll attach the\ntype rational.",
    "start": "2940960",
    "end": "2946120"
  },
  {
    "text": "That's the only thing we have\nto do different, make it a typed data object.",
    "start": "2946120",
    "end": "2952380"
  },
  {
    "text": "And now we'll stick our\noperations in the table. We'll put under the symbol\nrational and the operation add",
    "start": "2952380",
    "end": "2958920"
  },
  {
    "text": "our procedure, plus rat. And, again, note this\nis a symbol. Right?",
    "start": "2958920",
    "end": "2963930"
  },
  {
    "text": "Quote, unquote, but the actual\nthing we're putting in the table is the procedure.",
    "start": "2963930",
    "end": "2970060"
  },
  {
    "text": "And for how to subtract,\nwell you subtract rationals with minus rat.",
    "start": "2970060",
    "end": "2978270"
  },
  {
    "text": "And multiply, and divide. And that is exactly and\nprecisely what we have to do",
    "start": "2978270",
    "end": "2983640"
  },
  {
    "text": "to fit inside this generic\narithmetic system. Well how does the whole\nthing work?",
    "start": "2983640",
    "end": "2991560"
  },
  {
    "text": "See, what we want to do is have\nsome generic operators.",
    "start": "2991560",
    "end": "3000170"
  },
  {
    "start": "2995000",
    "end": "3262000"
  },
  {
    "text": "Have add and sub and\n[UNINTELLIGIBLE] be generic operators. So we're going to define add and\nsay, to add x and y, that",
    "start": "3000170",
    "end": "3018930"
  },
  {
    "text": "will be operate-- ",
    "start": "3018930",
    "end": "3026080"
  },
  {
    "text": "we were going to call\nit operate-2. This is our operator procedure,\nbut set up for two arguments using add\non x and y.",
    "start": "3026080",
    "end": "3037261"
  },
  {
    "text": "And so this is the analog\nto operate. Let's look at the\ncode for second. It's almost like operate.",
    "start": "3037261",
    "end": "3042930"
  },
  {
    "text": " To operate with some operator\non an argument 1 and an",
    "start": "3042930",
    "end": "3051550"
  },
  {
    "text": "argument 2, well the first thing\nwe're going to do is check and see if the two\narguments have the same type.",
    "start": "3051550",
    "end": "3061900"
  },
  {
    "text": "So we'll say, is the type of the\nfirst argument the same as the type of the second\nargument?",
    "start": "3061900",
    "end": "3067860"
  },
  {
    "text": " And if they're not, we'll go\noff and complain, and say,",
    "start": "3067860",
    "end": "3075070"
  },
  {
    "text": "that's an error. We don't know how to do that. If they do have the same\ntype, we'll do",
    "start": "3075070",
    "end": "3080920"
  },
  {
    "text": "exactly what we did before. We'll go look and filed under\nthe type of the argument--",
    "start": "3080920",
    "end": "3086460"
  },
  {
    "text": "arg 1 and arg 2 have the same\ntype, so it doesn't matter. So we'll look in the table,\nfind the procedure.",
    "start": "3086460",
    "end": "3093640"
  },
  {
    "text": "If there is a procedure there,\nthen we'll apply it to the",
    "start": "3093640",
    "end": "3098869"
  },
  {
    "text": "contents of the argument 1 and\nthe contents of arg 2. And otherwise we'll\nsay, error.",
    "start": "3098870",
    "end": "3104760"
  },
  {
    "text": "Undefined operator. And so there's operate-2. ",
    "start": "3104760",
    "end": "3111326"
  },
  {
    "text": "And that's all we have to do. We just built the complex\nnumber package before.",
    "start": "3111326",
    "end": "3117640"
  },
  {
    "text": "How do we embed that complex\nnumber package in this generic system? Almost the same.",
    "start": "3117640",
    "end": "3123390"
  },
  {
    "text": " We make a procedure called\nmake-complex that takes",
    "start": "3123390",
    "end": "3131059"
  },
  {
    "text": "whatever George and Martha\nhand to us and add the type-complex. ",
    "start": "3131060",
    "end": "3138170"
  },
  {
    "text": "And then we say, to add complex\nnumbers, plus complex,",
    "start": "3138170",
    "end": "3145839"
  },
  {
    "text": "we use our internal procedure,\nplus c, and attach a type,",
    "start": "3145840",
    "end": "3152240"
  },
  {
    "text": "make that a complex number. ",
    "start": "3152240",
    "end": "3157560"
  },
  {
    "text": "So our original package had\nnames plus c and minus c that",
    "start": "3157560",
    "end": "3162840"
  },
  {
    "text": "we're using to communicate\nwith George and Martha. And then to communicate with the\noutside world, we have a thing called plus-complex\nand minus-complex.",
    "start": "3162840",
    "end": "3172380"
  },
  {
    "text": " And so on. And the only difference\nis that these return",
    "start": "3172380",
    "end": "3179000"
  },
  {
    "text": "values that are tight. So they can be looked\nat up here. And these are internal\noperations.",
    "start": "3179000",
    "end": "3184690"
  },
  {
    "text": " Let's go look at that\nslide again.",
    "start": "3184690",
    "end": "3190680"
  },
  {
    "text": "There's one more thing we do. After defining plus-complex, we\nput under the type complex",
    "start": "3190680",
    "end": "3199280"
  },
  {
    "text": "and the symbol add, that\nprocedure plus complex. And then similarly for\nsubtracting complex numbers,",
    "start": "3199280",
    "end": "3207130"
  },
  {
    "text": "and multiplying them,\nand dividing them.  OK, how do we install\nordinary numbers?",
    "start": "3207130",
    "end": "3215250"
  },
  {
    "text": "Exactly the same way. Come off and say, well we'll\nmake a thing called",
    "start": "3215250",
    "end": "3220500"
  },
  {
    "text": "make-number.  Make-number takes a number and\nattaches a type, which is the",
    "start": "3220500",
    "end": "3228500"
  },
  {
    "text": "symbol number. We build a procedure called\nplus-number, which is simply,",
    "start": "3228500",
    "end": "3235300"
  },
  {
    "text": "add the two things using the\nordinary addition, because in this case we're talking about\nordinary numbers, and attach a",
    "start": "3235300",
    "end": "3241849"
  },
  {
    "text": "type to it and make\nthat a number. And then we put into the table\nunder the symbol number and",
    "start": "3241850",
    "end": "3248700"
  },
  {
    "text": "the operation add, this\nprocedure plus-number, and then the same thing for\nsubtracting, and multiplying,",
    "start": "3248700",
    "end": "3255360"
  },
  {
    "text": "and dividing. ",
    "start": "3255360",
    "end": "3262750"
  },
  {
    "start": "3262000",
    "end": "3449000"
  },
  {
    "text": "Let's look at an example,\njust to make it clear. Suppose, for instance,\nI'm going",
    "start": "3262750",
    "end": "3272600"
  },
  {
    "text": "to perform the operation. So I sit up here and I'm going\nto perform the operation,",
    "start": "3272600",
    "end": "3278220"
  },
  {
    "text": "which looks like multiplying\ntwo complex numbers. So I would multiply, say,\n3 plus 4i and 2 plus 6i.",
    "start": "3278220",
    "end": "3289786"
  },
  {
    "text": "And that's something that\nI might want to take hand that to mul. I'll write mul as my generic\noperator here.",
    "start": "3289786",
    "end": "3297170"
  },
  {
    "text": "How's that going to work? Well 3 plus 4i, say, sits in\nthe system at this level as",
    "start": "3297170",
    "end": "3305020"
  },
  {
    "text": "something that looks\nlike this. Let's say it was one\nof George's. So it would have a 3 and a 4.",
    "start": "3305020",
    "end": "3314695"
  },
  {
    "text": " And attached to that would be\nGeorge's type, which would say",
    "start": "3314695",
    "end": "3325330"
  },
  {
    "text": "rectangular, it came\nfrom George. And attached to that--",
    "start": "3325330",
    "end": "3331230"
  },
  {
    "text": "and this itself would be the\ndata view from the next level up, which it is--",
    "start": "3331230",
    "end": "3337700"
  },
  {
    "text": "so that itself would be a\ntype-data object which would say complex. ",
    "start": "3337700",
    "end": "3344820"
  },
  {
    "text": "So that's what this object would\nlook like up here at the very highest level, where\nthe really super-generic",
    "start": "3344820",
    "end": "3352300"
  },
  {
    "text": "operations are looking at it. Now what happens, mul\neventually's going to come",
    "start": "3352300",
    "end": "3358220"
  },
  {
    "text": "along and say, oh,\nwhat's it's type? It's type is complex. ",
    "start": "3358220",
    "end": "3364270"
  },
  {
    "text": "Go through to operate-2 and say,\noh, what I want to do is apply what's in the table,\nwhich is going to be the",
    "start": "3364270",
    "end": "3370440"
  },
  {
    "text": "procedure star complex, on\nthis thing with the type",
    "start": "3370440",
    "end": "3377150"
  },
  {
    "text": "stripped off. So it's going to strip off the\ntype, take that much, and send",
    "start": "3377150",
    "end": "3382400"
  },
  {
    "text": "that down into the\ncomplex world. The complex world looks at its\noperations and says, oh, I",
    "start": "3382400",
    "end": "3388950"
  },
  {
    "text": "have to apply star c. Star c might say, oh, at some\npoint I want to look at the",
    "start": "3388950",
    "end": "3394490"
  },
  {
    "text": "magnitude of this object that\nit's in, that it's got. And they'll say, oh, it's",
    "start": "3394490",
    "end": "3400160"
  },
  {
    "text": "rectangular, it's one of George's. So it'll then strip off the next\nversion of type, and hand",
    "start": "3400160",
    "end": "3407340"
  },
  {
    "text": "that down to George to take\nthe magnitude of. So you see what's going\non is that there are",
    "start": "3407340",
    "end": "3415289"
  },
  {
    "text": "these chains of types. And the length of the chain is\nsort of the number of levels",
    "start": "3415290",
    "end": "3421530"
  },
  {
    "text": "that you're going to be going\nup in this table. And what a type tells you, every\ntime you have a vertical",
    "start": "3421530",
    "end": "3429590"
  },
  {
    "text": "barrier in this table, where\nthere's some ambiguity about where you should go down to the\nnext level, the type is",
    "start": "3429590",
    "end": "3435010"
  },
  {
    "text": "telling you where to go. And then everybody at the\nbottom, as they construct data and filter it up, they stick\ntheir type back on.",
    "start": "3435010",
    "end": "3442810"
  },
  {
    "text": " So that's the general structure\nof the system.",
    "start": "3442810",
    "end": "3450750"
  },
  {
    "start": "3449000",
    "end": "3599000"
  },
  {
    "text": " OK. Now that we've got this, let's\ngo and make this thing even",
    "start": "3450750",
    "end": "3458660"
  },
  {
    "text": "more complex.  Let's talk about adding to the\nsystem not only these kinds of",
    "start": "3458660",
    "end": "3466150"
  },
  {
    "text": "numbers, but it's also\nmeaningful to start talking about adding polynomials.",
    "start": "3466150",
    "end": "3471510"
  },
  {
    "text": "Might do arithmetic\non polynomials. Like we could have x to the\nfifteenth plus 2x to the",
    "start": "3471510",
    "end": "3477570"
  },
  {
    "text": "seventh plus 5.",
    "start": "3477570",
    "end": "3484480"
  },
  {
    "text": "That might be some polynomial. And if we have two such gadgets\nwe can add them or multiply them.",
    "start": "3484480",
    "end": "3490530"
  },
  {
    "text": "Let's not worry about\ndividing them. Just add them, multiply them,\nthen we'll subtract them.",
    "start": "3490530",
    "end": "3495869"
  },
  {
    "text": "What do we have to do? Well let's think about how we\nmight represent a polynomial.",
    "start": "3495870",
    "end": "3501829"
  },
  {
    "text": "It's going to be some\ntyped data object. So let's say a polynomial to\nthis system might look like a",
    "start": "3501830",
    "end": "3509690"
  },
  {
    "text": "thing that starts with\nthe type polynomial. And then maybe it says the\nnext thing is what variable its in. So I might say I'm a polynomial\nin the variable x.",
    "start": "3509690",
    "end": "3518960"
  },
  {
    "text": "And then it'll have some\ninformation about what the terms are. And there're just tons of ways\nto do this, but one way is to",
    "start": "3518960",
    "end": "3525620"
  },
  {
    "text": "say we're going to have a thing\ncalled a term-list. And",
    "start": "3525620",
    "end": "3531520"
  },
  {
    "text": "a term-list-- well, in our case we'll\nuse something that looks like this. We'll make it a bunch of pairs\nwhich have an order in a",
    "start": "3531520",
    "end": "3539010"
  },
  {
    "text": "coefficient. So this polynomial would be\nrepresented by this term-list.",
    "start": "3539010",
    "end": "3549069"
  },
  {
    "text": "And what that means is that\nthis polynomial starts off with a term of order 15\nand coefficient 1.",
    "start": "3549070",
    "end": "3559710"
  },
  {
    "text": " And the next thing in it is\na term of order 7 and",
    "start": "3559710",
    "end": "3566780"
  },
  {
    "text": "coefficient 2, a term of order\n0, which is constant in coefficient 5. And there are lots and lots of\nways, and lots and lots of",
    "start": "3566780",
    "end": "3575599"
  },
  {
    "text": "trade-offs when you really think\nabout making algebraic manipulation packages about\nexactly how you should represent these things.",
    "start": "3575600",
    "end": "3581730"
  },
  {
    "text": "But this is a fairly\nstandard one. It's useful in a lot\nof contexts.",
    "start": "3581730",
    "end": "3587770"
  },
  {
    "text": "OK, well how do we implement\nour polynomial arithmetic? ",
    "start": "3587770",
    "end": "3594270"
  },
  {
    "text": "Let's start out.  What we'll do to make\na polynomial--",
    "start": "3594270",
    "end": "3600760"
  },
  {
    "text": "we'll first have a way\nto make polynomials. We're going to make a polynomial\nout of variable",
    "start": "3600760",
    "end": "3608560"
  },
  {
    "text": "like x and term-list. And all\nthat does is we'll package them together someway.",
    "start": "3608560",
    "end": "3614290"
  },
  {
    "text": "We'll put the variable together\nwith the term list using cons, and then attached\nto that the type polynomial.",
    "start": "3614290",
    "end": "3621380"
  },
  {
    "text": " OK, how do we add\ntwo polynomials?",
    "start": "3621380",
    "end": "3629280"
  },
  {
    "text": "To add a polynomial, p1 and\np2, and then just for simplicity let's say\nwe will only add",
    "start": "3629280",
    "end": "3636060"
  },
  {
    "text": "things in the same variable. So if they have the same\nvariable, and same variable here is going to be some\nselector we write, whose",
    "start": "3636060",
    "end": "3643160"
  },
  {
    "text": "details we don't care about. If the two polynomials have the\nsame variable, then we'll",
    "start": "3643160",
    "end": "3648279"
  },
  {
    "text": "do something. If they don't have the same\nvariable, we'll give an error, polynomials not in the\nsame variable.",
    "start": "3648280",
    "end": "3655480"
  },
  {
    "text": "And if they do have the same\nvariable, what we'll do is we'll make a polynomial whose\nvariable is whatever that",
    "start": "3655480",
    "end": "3661130"
  },
  {
    "text": "variable is, and whose term-list\nis something we'll call sum-terms. Plus terms will\nadd the two term lists.",
    "start": "3661130",
    "end": "3670170"
  },
  {
    "text": "So we'll add the two term\nlists to the polynomial. That'll give us a term-list.\nWe'll add on, we'll say it's a",
    "start": "3670170",
    "end": "3676755"
  },
  {
    "text": "polynomial in the variable\nwith that term-list. That's plus poly.",
    "start": "3676755",
    "end": "3682550"
  },
  {
    "text": "And then we're going to put in\nour table under the type polynomial, add them\nusing plus poly.",
    "start": "3682550",
    "end": "3690520"
  },
  {
    "text": "And of course we really\nhaven't done much. What we've really done is pushed\nall the work onto this thing, plus-terms, which is\nsupposed to add term-lists.",
    "start": "3690520",
    "end": "3698480"
  },
  {
    "text": "Let's look at that. Here's an overview of how we\nmight add two term-lists.",
    "start": "3698480",
    "end": "3708900"
  },
  {
    "text": "So L1 and L2 were going\nto be two term-lists. And a term-list is a bunch of\npairs, coefficient in order.",
    "start": "3708900",
    "end": "3715700"
  },
  {
    "text": "And it's a big case analysis.  And the first thing we'll check\nfor and see if there are",
    "start": "3715700",
    "end": "3723470"
  },
  {
    "text": "any terms. We're going to\nrecursively work down these term-lists, so eventually we'll\nget to a place where",
    "start": "3723470",
    "end": "3729980"
  },
  {
    "text": "either L1 or L2 might\nbe empty. And if either one is empty,\nour answer will",
    "start": "3729980",
    "end": "3735160"
  },
  {
    "text": "be the other one. So if L1 is empty we'll return\nL2, and if L2 is empty",
    "start": "3735160",
    "end": "3740720"
  },
  {
    "text": "we'll return L1. Otherwise there are sort of\nthree interesting cases.",
    "start": "3740720",
    "end": "3747220"
  },
  {
    "text": "What we're going to do is grab\nthe first term in each of those lists, called t1 and t2.",
    "start": "3747220",
    "end": "3757660"
  },
  {
    "text": "And we're going to look at\nthree cases, depending on",
    "start": "3757660",
    "end": "3763089"
  },
  {
    "text": "whether the order of t1 is\ngreater than the order of t2, or less than t2, or the same.",
    "start": "3763090",
    "end": "3770470"
  },
  {
    "text": " Those are the three cases\nwe're going to look at. Let's look at this case.",
    "start": "3770470",
    "end": "3776160"
  },
  {
    "text": " If the order of t1 is greater\nthan the order of t2, then",
    "start": "3776160",
    "end": "3783549"
  },
  {
    "text": "what that means is that our\nanswer is going to start with this term of the order of t1.",
    "start": "3783550",
    "end": "3791480"
  },
  {
    "text": "Because it won't combine with\nany lower order terms. So what we do is add the lower order\nterms. We recursively add",
    "start": "3791480",
    "end": "3799720"
  },
  {
    "text": "together all the terms\nin the rest of the term-list in L1 and L2.",
    "start": "3799720",
    "end": "3806880"
  },
  {
    "text": "That's going to be the lower\norder terms of the answer. And then we're going to\nadjoin to that the highest order term.",
    "start": "3806880",
    "end": "3813180"
  },
  {
    "text": "And I'm using here a whole bunch\nof procedures I haven't defined, like a adjoin-term, and\nrest-terms, and selectors",
    "start": "3813180",
    "end": "3819360"
  },
  {
    "text": "that get order. But you can imagine\nwhat those are.",
    "start": "3819360",
    "end": "3824730"
  },
  {
    "text": "So if the first term-list has\na higher order than the second, we recursively add all\nthe lower terms and then stick",
    "start": "3824730",
    "end": "3831830"
  },
  {
    "text": "on that last term. The other case, the same way.",
    "start": "3831830",
    "end": "3836890"
  },
  {
    "text": "If the first term has a smaller\norder, well then we",
    "start": "3836890",
    "end": "3845400"
  },
  {
    "text": "add the first term-list and the\nrest of the terms in the second one, and adjoin on\nthis highest order term.",
    "start": "3845400",
    "end": "3851430"
  },
  {
    "text": " So so far nothing's much\nhappened, we've just sort of",
    "start": "3851430",
    "end": "3856660"
  },
  {
    "text": "pushed this thing off into\nadding lower order terms. The last case where you actually get\nto a coefficients that you",
    "start": "3856660",
    "end": "3862869"
  },
  {
    "text": "have to add, this will\nbe the case where the orders are equal. What we do is, well again\nrecursively add the lower",
    "start": "3862870",
    "end": "3870340"
  },
  {
    "text": "order terms. But now we have to\nreally combine something. What we do is we make a term\nwhose order is the order of",
    "start": "3870340",
    "end": "3878960"
  },
  {
    "text": "the term we're looking at. By now t1 and t2 have\nthe same order.",
    "start": "3878960",
    "end": "3884320"
  },
  {
    "text": "That's its order. And its coefficient is gotten\nby adding the coefficient of",
    "start": "3884320",
    "end": "3890400"
  },
  {
    "text": "t1 and the coefficient of t2. ",
    "start": "3890400",
    "end": "3896359"
  },
  {
    "text": "This is a big recursive working\ndown of terms, but really there's only one\ninteresting symbol in this",
    "start": "3896360",
    "end": "3903070"
  },
  {
    "text": "procedure, only one\ninteresting idea. The interesting idea\nis this add.",
    "start": "3903070",
    "end": "3908500"
  },
  {
    "text": " And the reason that's\ninteresting is because",
    "start": "3908500",
    "end": "3915329"
  },
  {
    "text": "something completely wonderful\njust happened. We reduced adding polynomials,\nnot to sort of plus, but to",
    "start": "3915330",
    "end": "3925440"
  },
  {
    "text": "the generic add. In other words, by implementing\nit that way, not",
    "start": "3925440",
    "end": "3933270"
  },
  {
    "text": "only do we have our system where\nwe can have rational numbers, or complex numbers,\nor ordinary numbers, we've",
    "start": "3933270",
    "end": "3942090"
  },
  {
    "text": "just added on polynomials. ",
    "start": "3942090",
    "end": "3948520"
  },
  {
    "text": "But the coefficients of the\npolynomials can be anything that the system can add.",
    "start": "3948520",
    "end": "3953590"
  },
  {
    "text": "So these could be polynomials\nwhose coefficients are rational numbers or complex\nnumbers, which in turn could",
    "start": "3953590",
    "end": "3964109"
  },
  {
    "text": "be either rectangular, or polar,\nor ordinary numbers.",
    "start": "3964110",
    "end": "3971250"
  },
  {
    "start": "3971250",
    "end": "3979860"
  },
  {
    "text": "So what I mean precisely\nis our system right now automatically can handle things\nlike adding together",
    "start": "3979860",
    "end": "3990200"
  },
  {
    "text": "polynomials that have this one:\n2/3 of x squared plus",
    "start": "3990200",
    "end": "3995829"
  },
  {
    "text": "5/17 x plus 11/4.",
    "start": "3995830",
    "end": "4000940"
  },
  {
    "text": "Or automatically handle\npolynomials that look like 3 plus 2i times x to the fifth\nplus 4 plus 7i, or something.",
    "start": "4000940",
    "end": "4014160"
  },
  {
    "text": "You can automatically\nhandle those things. Why is that? That's merely because, or\nprofoundly because we reduced",
    "start": "4014160",
    "end": "4023280"
  },
  {
    "text": "adding polynomials to adding\ntheir coefficients. And adding coefficients was\ndone by the generic add",
    "start": "4023280",
    "end": "4029670"
  },
  {
    "text": "operator, which said, I don't\ncare what your types are as long as I know how to add you.",
    "start": "4029670",
    "end": "4035170"
  },
  {
    "text": "So automatically for\nfree we get the ability to handle that.",
    "start": "4035170",
    "end": "4040880"
  },
  {
    "text": "What's even better than that,\nbecause remember one of the things we did is we put into the\ntable that the way you add",
    "start": "4040880",
    "end": "4049869"
  },
  {
    "text": "polynomials is using\nplus poly. That means that polynomials\nthemselves are",
    "start": "4049870",
    "end": "4057480"
  },
  {
    "text": "things that can be added. So for instance let\nme write one here. ",
    "start": "4057480",
    "end": "4065260"
  },
  {
    "text": "Here's a polynomial. ",
    "start": "4065260",
    "end": "4070560"
  },
  {
    "text": "So this gadget here I'm\nwriting up, this is a polynomial in y whose\ncoefficients are",
    "start": "4070560",
    "end": "4082710"
  },
  {
    "text": "polynomials in x. ",
    "start": "4082710",
    "end": "4088609"
  },
  {
    "text": "So you see, simply by saying,\npolynomials are themselves things that can be added, we can\ngo off and say, well not",
    "start": "4088610",
    "end": "4095590"
  },
  {
    "text": "only can we deal with rationals,\nor complex, or ordinary numbers, but we can\ndeal with polynomials whose",
    "start": "4095590",
    "end": "4102330"
  },
  {
    "text": "coefficients are rationals, or\ncomplex, or ordinary numbers, or polynomials whose\ncoefficients are rationals, or",
    "start": "4102330",
    "end": "4111979"
  },
  {
    "text": "complex, rectangular, polar,\nor ordinary numbers, or",
    "start": "4111979",
    "end": "4117568"
  },
  {
    "text": "polynomials whose coefficients\nare rationals, complex, or",
    "start": "4117569",
    "end": "4122609"
  },
  {
    "text": "ordinary numbers. And so on, and so\non, and so on. So this is sort of an infinite\nor maybe a recursive tower of",
    "start": "4122609",
    "end": "4130830"
  },
  {
    "text": "types that we've built up. And it's all exactly from\nthat one little symbol.",
    "start": "4130830",
    "end": "4136420"
  },
  {
    "text": "A-D-D. Writing \"add\" instead\nof \"plus\" in the polynomial thing.",
    "start": "4136420",
    "end": "4142270"
  },
  {
    "text": "Slightly different way to\nthink about it is that polynomials are a constructor\nfor types.",
    "start": "4142270",
    "end": "4148740"
  },
  {
    "text": "Namely you give it a type, like\ninteger, and it returns for you polynomials in x whose\ncoefficients are integers.",
    "start": "4148740",
    "end": "4156278"
  },
  {
    "text": "And the important thing about\nthat is that the operations on polynomials reduce to the\noperations on the",
    "start": "4156279",
    "end": "4162729"
  },
  {
    "text": "coefficients. And there are a lot of\nthings like that. So for example, let's go back\nand rational numbers.",
    "start": "4162729",
    "end": "4168869"
  },
  {
    "text": "We thought about rational\nnumbers as an integer over an integer, but there's\nthe general notion",
    "start": "4168870",
    "end": "4174229"
  },
  {
    "text": "of a rational object. Like we might think about 3x\nplus 7 over x squared plus 1.",
    "start": "4174229",
    "end": "4183009"
  },
  {
    "text": "That's general rational object\nwhose numerator and denominator are polynomials.",
    "start": "4183010",
    "end": "4190310"
  },
  {
    "text": "And to add two of them we use\nthe same formula, numerator times denominator plus\ndenominator times numerator",
    "start": "4190310",
    "end": "4195720"
  },
  {
    "text": "over product of denominators. How could we install\nthat in our system? Well here's our original\nrational",
    "start": "4195720",
    "end": "4201820"
  },
  {
    "text": "number arithmetic package. And all we have to do in order\nto make the entire system",
    "start": "4201820",
    "end": "4208660"
  },
  {
    "text": "continue working with general\nrational objects, is replace these particular pluses and\nstars by the generic operator.",
    "start": "4208660",
    "end": "4216480"
  },
  {
    "text": "So if we simply change that\nprocedure to this one, here we've changed plus and star\nto add a mul, those are",
    "start": "4216480",
    "end": "4223100"
  },
  {
    "text": "absolutely the only change,\nthen suddenly our entire",
    "start": "4223100",
    "end": "4228170"
  },
  {
    "text": "system can start talking about\nobjects that look like this.",
    "start": "4228170",
    "end": "4234000"
  },
  {
    "text": "So for example, here is a\nrational object whose",
    "start": "4234000",
    "end": "4240350"
  },
  {
    "text": "numerator is a polynomial in\nx whose coefficients are rational numbers.",
    "start": "4240350",
    "end": "4247349"
  },
  {
    "text": "Or here is a rational object\nwhose numerator is polynomials",
    "start": "4247350",
    "end": "4253740"
  },
  {
    "text": "in x whose coefficients are\nrational objects constructed",
    "start": "4253740",
    "end": "4260480"
  },
  {
    "text": "out of complex numbers. And then there are a lot of\nother things like that. See, whenever you have a thing\nwhere the operations reduce to",
    "start": "4260480",
    "end": "4267500"
  },
  {
    "text": "operations on the pieces,\nanother example would be two by two matrices. I have the idea, there might\nbe a matrix here of general",
    "start": "4267500",
    "end": "4277030"
  },
  {
    "text": "things that I don't\ncare about. But if I add two of them, the\nanswer over here is gotten by",
    "start": "4277030",
    "end": "4285179"
  },
  {
    "text": "adding this one and that one,\nhowever they like to add. So I can implement that\nthe same way.",
    "start": "4285180",
    "end": "4291110"
  },
  {
    "text": "And if I do that, then again\nsuddenly my system can start handling things like this. So here's a matrix whose\nelements happen to be--",
    "start": "4291110",
    "end": "4299460"
  },
  {
    "text": "we'll say this element here\nis a rational object whose numerator and denominators\nare polynomials.",
    "start": "4299460",
    "end": "4307230"
  },
  {
    "text": "And all that comes for free. ",
    "start": "4307230",
    "end": "4312579"
  },
  {
    "text": "What's really going on here? What's really going on is\ngetting rid of this manager",
    "start": "4312580",
    "end": "4318910"
  },
  {
    "text": "who's sitting there poking his\nnose into who everybody's business is. We built a system that has\ndecentralized control.",
    "start": "4318910",
    "end": "4325900"
  },
  {
    "start": "4325900",
    "end": "4334350"
  },
  {
    "text": "So when you come into and no\none's poking around saying, gee, are you in the\nofficial list of",
    "start": "4334350",
    "end": "4341080"
  },
  {
    "text": "people who can be added? Rather you say, well go off\nand add yourself how your parts like to be added.",
    "start": "4341080",
    "end": "4347810"
  },
  {
    "text": "And the result of that is you\ncan get this very, very, very complex hierarchy where a lot\nof things just get done and",
    "start": "4347810",
    "end": "4353869"
  },
  {
    "text": "rooted to the right place\nautomatically. Let's stop for questions. ",
    "start": "4353870",
    "end": "4360380"
  },
  {
    "text": "AUDIENCE: You say you\nget this for free. One thing that strikes me is\nthat now you've lost kind of",
    "start": "4360380",
    "end": "4366920"
  },
  {
    "text": "the cleanness of the break\nbetween what's on top and what's underneath. In other words, now you're\ndefining some of the",
    "start": "4366920",
    "end": "4372770"
  },
  {
    "text": "lower-level procedures\nin terms of things above their own line. Isn't that dangerous?",
    "start": "4372770",
    "end": "4380350"
  },
  {
    "text": "Or, if nothing more, a little\nless structured?",
    "start": "4380350",
    "end": "4385440"
  },
  {
    "text": "PROFESSOR: No, I-- the question is whether that's\nless structured. Depends on what you\nmean by structure. All this is doing\nis recursion.",
    "start": "4385440",
    "end": "4391050"
  },
  {
    "text": "See, it's saying that the\nway you add these guys is to use that.",
    "start": "4391050",
    "end": "4398639"
  },
  {
    "text": "And that's not less structured,\nit's just a recursive structure. So I don't think it's\nparticularly any less clean.",
    "start": "4398640",
    "end": "4404730"
  },
  {
    "text": "AUDIENCE: Now when you want to\nchange the multiplier or the add operator, suddenly you've\ngot tremendous consequences",
    "start": "4404730",
    "end": "4411380"
  },
  {
    "text": "underneath that you're not\neven sure the extent of. PROFESSOR: That's right, but\nit depends what you mean.",
    "start": "4411380",
    "end": "4417080"
  },
  {
    "text": "See, this goes both ways.  What would be a good example?",
    "start": "4417080",
    "end": "4424690"
  },
  {
    "text": "I ignored greatest common\ndivisor, for instance. I ignored that problem just to\nkeep the example simple.",
    "start": "4424690",
    "end": "4430280"
  },
  {
    "text": "But if I suddenly decided that\nplus rat here should do a GCD",
    "start": "4430280",
    "end": "4439820"
  },
  {
    "text": "computation and install that,\nthen that immediately becomes available to all of these, to\nthat guy, and that guy, and",
    "start": "4439820",
    "end": "4448280"
  },
  {
    "text": "that guy, and all\nthe way down. So it depends what you mean by\nthe coherence of your system.",
    "start": "4448280",
    "end": "4453890"
  },
  {
    "text": "It's certainly true that you\nmight want to have a special different one that didn't\nfilter down through the",
    "start": "4453890",
    "end": "4458949"
  },
  {
    "text": "coefficients, but the nice thing\nabout this particular example is that mostly you do.",
    "start": "4458950",
    "end": "4465440"
  },
  {
    "text": "AUDIENCE: Isn't that the\nproblem, I think, that you're getting to tied in with the fact\nthat the structuring, the",
    "start": "4465440",
    "end": "4472949"
  },
  {
    "text": "recursiveness of that\nstructuring there is actually in execution as opposed to just\ndefinition of the actual",
    "start": "4472950",
    "end": "4480340"
  },
  {
    "text": "types themselves?  PROFESSOR: I think I understand\nthe question.",
    "start": "4480340",
    "end": "4486120"
  },
  {
    "text": "The point is that these types\nevolve and get more and more complex as the thing's\nactually running. Is that what-- AUDIENCE: Yes. As it's running.",
    "start": "4486120",
    "end": "4491790"
  },
  {
    "text": "PROFESSOR: --what\nyou're saying? Yes, the point is-- AUDIENCE: As opposed to\nthe basic definitions. PROFESSOR: Right. The type structure is\nsort of recursive.",
    "start": "4491790",
    "end": "4497210"
  },
  {
    "text": "It's not that you can make this\nfinite list of the actual",
    "start": "4497210",
    "end": "4502770"
  },
  {
    "text": "things they might look like\nbefore the system runs. It's something that evolves. So if you want to specify that\nsystem, you have to do in some",
    "start": "4502770",
    "end": "4509610"
  },
  {
    "text": "other way than by this finite\nlist. You have to do it by a recursive structure. AUDIENCE: Because the basic\nstructure of the types is",
    "start": "4509610",
    "end": "4516960"
  },
  {
    "text": "pretty clean and simple. PROFESSOR: Right. Yes? AUDIENCE: I have a question.",
    "start": "4516960",
    "end": "4522870"
  },
  {
    "text": "I understand once you have your\ndata structure set up, how it pulls off complex and\npasses that down, and then",
    "start": "4522870",
    "end": "4529230"
  },
  {
    "text": "pulls off rect, passes\nthat down. But if you're just a user and\nyou don't know anything about rect or polar or whatever, how\ndo you initially set up that",
    "start": "4529230",
    "end": "4535610"
  },
  {
    "text": "data structure so that\neverything goes to the right spot? If I just have the equation over\nthere on the left and I",
    "start": "4535610",
    "end": "4541210"
  },
  {
    "text": "just want to add, multiply\ncomplex numbers-- PROFESSOR: Well that's\nthe wonderful thing. If you're just a user\nyou say \"mul.\"",
    "start": "4541210",
    "end": "4547730"
  },
  {
    "text": "AUDIENCE: And it figures out\nthat I mean complex numbers? Or how do I tell it\nthat I want-- PROFESSOR: Well you're\ngoing to have in your hands complex numbers.",
    "start": "4547730",
    "end": "4553050"
  },
  {
    "text": "See what you would have at some\nlevel, as a real user, is a constructor for\ncomplex numbers.",
    "start": "4553050",
    "end": "4558370"
  },
  {
    "text": "AUDIENCE: So then I have to\nmake complex numbers? PROFESSOR: So you have\nto make them. What you would probably have as\na user is some little thing in the reader loop, which would\ngive you some plausible",
    "start": "4558370",
    "end": "4567390"
  },
  {
    "text": "way to type in a complex\nnumber, in whatever format you like. Or it might be that you're\nnever typing them in.",
    "start": "4567390",
    "end": "4574360"
  },
  {
    "text": "Someone's just handing\nyou a complex number. AUDIENCE: OK, so if I had a\ncomplex number that had a",
    "start": "4574360",
    "end": "4579500"
  },
  {
    "text": "polynomial in it, I'd have to\nmake my polynomial and then make my complex number. PROFESSOR: Right if you wanted\nit constructed from scratch. At some point you construct\nthem from scratch.",
    "start": "4579500",
    "end": "4585710"
  },
  {
    "text": "But what you don't have to know\nof that is when you have the object you can just say\n\"mul.\" And it'll multiply.",
    "start": "4585710",
    "end": "4592344"
  },
  {
    "text": "Yeah? AUDIENCE: I think the question\nthat was being posed here is, say if I want to change my\npresentation of complexes, or",
    "start": "4592345",
    "end": "4600220"
  },
  {
    "text": "some operation of complex, how\nmuch real code I will have to",
    "start": "4600220",
    "end": "4606330"
  },
  {
    "text": "gets around with, or change\nto change it in one specific operation?",
    "start": "4606330",
    "end": "4612270"
  },
  {
    "text": "PROFESSOR: [UNINTELLIGIBLE]\nwhat you have to change. And the point is that\nyou only have to change what you're changing. See if Martha decides that\nshe would rather--",
    "start": "4612270",
    "end": "4620320"
  },
  {
    "text": "let's see something silly-- like change the order\nin the pair. Like angle and magnitude in\nthe other order, she just",
    "start": "4620320",
    "end": "4629700"
  },
  {
    "text": "makes that change locally. And the whole thing will\npropagate through the system in the right way.",
    "start": "4629700",
    "end": "4634790"
  },
  {
    "text": "Or if suddenly you said, gee, I\nhave another representation for rationals. And I'm going to stick it\nhere, by filing those",
    "start": "4634790",
    "end": "4642740"
  },
  {
    "text": "operations in the table. Then suddenly all of these\npolynomials whose coefficients are coefficients of\ncoefficients, or whatever,",
    "start": "4642740",
    "end": "4649240"
  },
  {
    "text": "also can automatically have\navailable that representation. That's the power of this\nparticular one.",
    "start": "4649240",
    "end": "4655952"
  },
  {
    "text": "AUDIENCE: I'm not sure if I can\neven pose an intelligent sounding question. But somehow this whole thing\nwent really nicely to this",
    "start": "4655952",
    "end": "4662920"
  },
  {
    "text": "beautiful finish where\nall the things seemed to fall into place. Sort of seemed a little\ncontrived.",
    "start": "4662920",
    "end": "4668530"
  },
  {
    "text": " That's all for the sake,\nI'm sure, of teaching. I doubt that the guys\nwho first did this--",
    "start": "4668530",
    "end": "4675100"
  },
  {
    "text": "and I could be wrong-- figured it all out so that when\nthey just all put it all together, you could all of the\nsudden, blam, do any kind of",
    "start": "4675100",
    "end": "4682410"
  },
  {
    "text": "arithmetic on any\nkind of object. It seems like maybe they had\nto play with it for a while",
    "start": "4682410",
    "end": "4687929"
  },
  {
    "text": "and had to bash it\nand rework it. And it seems like that's the\nkind of problem we're really",
    "start": "4687930",
    "end": "4694119"
  },
  {
    "text": "faced with we start trying to\ndesign a really complex system, is having lots of\ndifferent kinds of parts and",
    "start": "4694120",
    "end": "4699390"
  },
  {
    "text": "not even knowing what kinds of\noperations we're going to want to do on those parts.",
    "start": "4699390",
    "end": "4704620"
  },
  {
    "text": "How to organize the operations\nin this nice way so that no matter what you do, when you\nstart putting them together",
    "start": "4704620",
    "end": "4709630"
  },
  {
    "text": "everything starts falling\nout for free. PROFESSOR: OK, well\nthat's certainly a very intelligent question. ",
    "start": "4709630",
    "end": "4717020"
  },
  {
    "text": "One part is this is a very good\nmethodology that people have discovered a lot coming\nfrom symbolic algebra.",
    "start": "4717020",
    "end": "4724590"
  },
  {
    "text": "Because there are a lot\nof complications. To allow you to implement these\nthings before you decide",
    "start": "4724590",
    "end": "4730710"
  },
  {
    "text": "what you want all the\noperations to be, and all of that. So in some sense it's an\nanswer that people have discovered by wading\nthrough this stuff.",
    "start": "4730710",
    "end": "4738560"
  },
  {
    "text": "In another sense, it is a\nvery contrived example. AUDIENCE: It seems like to be\nable to do this you do have to",
    "start": "4738560",
    "end": "4746240"
  },
  {
    "text": "wade through it for a certain\namount of time before you can become good at it. PROFESSOR: Let me show you how\nterribly contrived this is.",
    "start": "4746240",
    "end": "4752219"
  },
  {
    "text": "So you can write all these\nwonderful things. But the system that I wrote\nhere, and if we had another",
    "start": "4752220",
    "end": "4757600"
  },
  {
    "text": "half an hour to give this\nlecture I would have given this part of it, which says,\nnotice that it breaks down if",
    "start": "4757600",
    "end": "4763469"
  },
  {
    "text": "I tell it to do something as\nfoolish as add 3 plus 7/2.",
    "start": "4763470",
    "end": "4770880"
  },
  {
    "text": "Because what will happen is\nyou'll get to operate-2, and operate-2 will say, oh\nthis is type number,",
    "start": "4770880",
    "end": "4776180"
  },
  {
    "text": "and that's type rational. I don't know how to add them. ",
    "start": "4776180",
    "end": "4781530"
  },
  {
    "text": "So you'd like the system at\nleast to be able to say something like, gee,\nbefore you do that",
    "start": "4781530",
    "end": "4788660"
  },
  {
    "text": "change that to 3/1. Turn it into a rational number,\nhand that to the rational package. ",
    "start": "4788660",
    "end": "4795510"
  },
  {
    "text": "That's the thing I didn't talk\nabout in this lecture. It's a little bit in the book,\nwhich talks about the problem",
    "start": "4795510",
    "end": "4800880"
  },
  {
    "text": "of what's called coercion. Where you wanted-- see, having so carefully set\nup all of these types as",
    "start": "4800880",
    "end": "4808280"
  },
  {
    "text": "distinct objects, a lot of times\nyou want to also put in knowledge about how to view\nan ordinary number",
    "start": "4808280",
    "end": "4816650"
  },
  {
    "text": "as a kind of rational. Or view an ordinary number\nas a kind of complex. That's where the complexity in\nthe system really starts",
    "start": "4816650",
    "end": "4824580"
  },
  {
    "text": "happening, where you talk\nabout, see where do I put that knowledge? Is it rational to know that\nordinary numbers might be",
    "start": "4824580",
    "end": "4830810"
  },
  {
    "text": "pieces of [UNINTELLIGIBLE]\nof them? Or they're terrible, terrible\nexamples, like if I might want",
    "start": "4830810",
    "end": "4838790"
  },
  {
    "text": "to add a complex number\nto a rational number.",
    "start": "4838790",
    "end": "4847510"
  },
  {
    "text": " Bad example. 5/7. ",
    "start": "4847510",
    "end": "4853860"
  },
  {
    "text": "Then somebody's got to know that\nI have to convert these to another type, which is\ncomplex numbers whose parts",
    "start": "4853860",
    "end": "4859790"
  },
  {
    "text": "might be rationals. And who worries about that? Does complex worry about that? Does rational worry\nabout that?",
    "start": "4859790",
    "end": "4865030"
  },
  {
    "text": "Does plus worry about that? That's where the real\ncomplexity comes in. And that's where it's pretty\nwell sorted out.",
    "start": "4865030",
    "end": "4871380"
  },
  {
    "text": "And a lot of, in fact, all of\nthis message passing stuff was motivated by problems\nlike this.",
    "start": "4871380",
    "end": "4878460"
  },
  {
    "text": "And when you really push it,\npeople are-- somehow the algebraic manipulation problem\nseems to be so complex that",
    "start": "4878460",
    "end": "4885330"
  },
  {
    "text": "the people who are always at the\nedge of it are exactly in the state you said. They're wading through this\nthing, mucking around, seeing what they use, trying\nto distill stuff.",
    "start": "4885330",
    "end": "4893469"
  },
  {
    "text": "AUDIENCE: I just want to come\nback to this issue of complexity once more.",
    "start": "4893470",
    "end": "4899250"
  },
  {
    "text": "It certainly seems to be true\nthat you have a great deal of",
    "start": "4899250",
    "end": "4904550"
  },
  {
    "text": "flexibility in altering the\nlower level kinds of things.",
    "start": "4904550",
    "end": "4909579"
  },
  {
    "text": "But it is true that you are,\nin a sense, freezing higher level operations.",
    "start": "4909580",
    "end": "4915449"
  },
  {
    "text": "Or at least if you change them\nyou don't know where all of the changes are going to show\nup, or how they are.",
    "start": "4915450",
    "end": "4922059"
  },
  {
    "text": "PROFESSOR: OK, that's an\nextremely good question. What I have to do is, if I\ndecide there's a new general",
    "start": "4922060",
    "end": "4930130"
  },
  {
    "text": "operation called equality test,\nthen all of these people",
    "start": "4930130",
    "end": "4936300"
  },
  {
    "text": "have to decide whether or not\nthey would like to have an equality test by looking\nin the table.",
    "start": "4936300",
    "end": "4944650"
  },
  {
    "text": "There're ways to decentralize\nit even more. That's what I sort of hinted at\nlast time, where I said you",
    "start": "4944650",
    "end": "4951430"
  },
  {
    "text": "could not only have this type as\na symbol, but you actually might store in each object\nthe operations",
    "start": "4951430",
    "end": "4957850"
  },
  {
    "text": "that it knows of that. So you might have things like\ngreatest common divisor, which",
    "start": "4957850",
    "end": "4964670"
  },
  {
    "text": "is a thing here which is defined\nonly for integers, and not in general for\nrational numbers.",
    "start": "4964670",
    "end": "4971030"
  },
  {
    "text": "So it might be a very, very\nfragmented system. And then depending on where\nyou want your flexibility,",
    "start": "4971030",
    "end": "4976570"
  },
  {
    "text": "there's a whole spectrum\nof places that you can build that in. But you're pointing at the place\nwhere this starts being",
    "start": "4976570",
    "end": "4982320"
  },
  {
    "text": "weak, that there has to be some\nagreement on top here about these general\noperations. Or at least people have\nto think about them.",
    "start": "4982320",
    "end": "4988390"
  },
  {
    "text": "Or you might decide, you might\nhave a table that's very sparse, that only has\na few things in it.",
    "start": "4988390",
    "end": "4994010"
  },
  {
    "text": "But there are lot of ways\nto play that game. ",
    "start": "4994010",
    "end": "4999780"
  },
  {
    "text": "OK, thank you.  [MUSIC: \"JESU, JOY OF\nMAN'S DESIRING\" BY JOHANN SEBASTIAN BACH]",
    "start": "4999780",
    "end": "5005099"
  },
  {
    "start": "5005099",
    "end": "5016682"
  }
]