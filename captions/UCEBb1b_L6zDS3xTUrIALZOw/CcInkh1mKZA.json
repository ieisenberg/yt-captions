[
  {
    "start": "0",
    "end": "0"
  },
  {
    "start": "0",
    "end": "500"
  },
  {
    "text": "Let’s try using the latch\nas the memory component",
    "start": "500",
    "end": "3350"
  },
  {
    "text": "in our sequential logic system.",
    "start": "3350",
    "end": "6170"
  },
  {
    "text": "To load the encoding of the\nnew state into the latch,",
    "start": "6170",
    "end": "8790"
  },
  {
    "text": "we open the latch by setting\nthe latch’s gate input HIGH,",
    "start": "8790",
    "end": "12350"
  },
  {
    "text": "letting the new value propagate\nto the latch’s Q output,",
    "start": "12350",
    "end": "15480"
  },
  {
    "text": "which represents\nthe current state.",
    "start": "15480",
    "end": "18010"
  },
  {
    "text": "This updated value\npropagates through",
    "start": "18010",
    "end": "19810"
  },
  {
    "text": "the combinational logic,\nupdating the new state",
    "start": "19810",
    "end": "22340"
  },
  {
    "text": "information.",
    "start": "22340",
    "end": "23740"
  },
  {
    "text": "Oops, if the gate\nstays HIGH too long,",
    "start": "23740",
    "end": "26300"
  },
  {
    "text": "we’ve created a loop in our\nsystem and our plan to load",
    "start": "26300",
    "end": "29210"
  },
  {
    "text": "the latch with new state goes\nawry as the new state value",
    "start": "29210",
    "end": "33100"
  },
  {
    "text": "starts to change rapidly as\ninformation propagates around",
    "start": "33100",
    "end": "36769"
  },
  {
    "text": "and around the loop.",
    "start": "36770",
    "end": "38810"
  },
  {
    "text": "So to make this work, we need\nto carefully time the interval",
    "start": "38810",
    "end": "41780"
  },
  {
    "text": "when G is HIGH.",
    "start": "41780",
    "end": "43870"
  },
  {
    "text": "It has to be long enough\nto satisfy the constraints",
    "start": "43870",
    "end": "46590"
  },
  {
    "text": "of the dynamic discipline,",
    "start": "46590",
    "end": "48090"
  },
  {
    "text": "but it has to be short enough\nthat the latch closes again",
    "start": "48090",
    "end": "51070"
  },
  {
    "text": "before the new state information\nhas a chance to propagate",
    "start": "51070",
    "end": "54040"
  },
  {
    "text": "all the way around the loop.",
    "start": "54040",
    "end": "56120"
  },
  {
    "text": "Hmm.",
    "start": "56120",
    "end": "57360"
  },
  {
    "text": "I think Mr. Blue is right: this\nsort of tricky system timing",
    "start": "57360",
    "end": "60670"
  },
  {
    "text": "would likely be error-prone\nsince the exact timing",
    "start": "60670",
    "end": "64009"
  },
  {
    "text": "of signals is almost\nimpossible to guarantee.",
    "start": "64010",
    "end": "67450"
  },
  {
    "text": "We have upper and lower\nbounds on the timing of signal",
    "start": "67450",
    "end": "70110"
  },
  {
    "text": "transitions but no guarantees\nof exact intervals.",
    "start": "70110",
    "end": "73470"
  },
  {
    "text": "To make this work, we\nwant to a load signal",
    "start": "73470",
    "end": "75510"
  },
  {
    "text": "that marks an instant in\ntime, not an interval.",
    "start": "75510",
    "end": "80160"
  },
  {
    "start": "79000",
    "end": "79000"
  },
  {
    "text": "Here’s an analogy that will help\nus understand what’s happening",
    "start": "80160",
    "end": "83190"
  },
  {
    "text": "and what we can do about it.",
    "start": "83190",
    "end": "85190"
  },
  {
    "text": "Imagine a line cars waiting\nat a toll booth gate.",
    "start": "85190",
    "end": "88720"
  },
  {
    "text": "The sequence of cars\nrepresents the sequence",
    "start": "88720",
    "end": "90780"
  },
  {
    "text": "of states in our\nsequential logic",
    "start": "90780",
    "end": "92710"
  },
  {
    "text": "and the gated toll both\nrepresents the latch.",
    "start": "92710",
    "end": "96560"
  },
  {
    "text": "Initially the gate is closed and\nthe cars are waiting patiently",
    "start": "96560",
    "end": "99460"
  },
  {
    "text": "to go through the toll booth.",
    "start": "99460",
    "end": "101620"
  },
  {
    "text": "When the gate\nopens, the first car",
    "start": "101620",
    "end": "103290"
  },
  {
    "text": "proceeds out of the toll both.",
    "start": "103290",
    "end": "105710"
  },
  {
    "text": "But you can see that the timing\nof when to close the gate",
    "start": "105710",
    "end": "108770"
  },
  {
    "text": "is going to be tricky.",
    "start": "108770",
    "end": "110280"
  },
  {
    "text": "It has to be open long\nenough for the first car",
    "start": "110280",
    "end": "112470"
  },
  {
    "text": "to make it through, but not too\nlong lest the other cars also",
    "start": "112470",
    "end": "116280"
  },
  {
    "text": "make it through.",
    "start": "116280",
    "end": "117909"
  },
  {
    "text": "This is exactly\nthe issue we faced",
    "start": "117910",
    "end": "119940"
  },
  {
    "text": "with using the latch\nas our memory component",
    "start": "119940",
    "end": "122190"
  },
  {
    "text": "in our sequential logic.",
    "start": "122190",
    "end": "124570"
  },
  {
    "text": "So how do we ensure only one car\nmakes it through the open gate?",
    "start": "124570",
    "end": "129580"
  },
  {
    "start": "129000",
    "end": "129000"
  },
  {
    "text": "One solution is\nto use TWO gates!",
    "start": "129580",
    "end": "132110"
  },
  {
    "text": "Here’s the plan: Initially Gate\n1 is open allowing exactly one",
    "start": "132110",
    "end": "136550"
  },
  {
    "text": "car to enter the toll\nbooth and Gate 2 is closed.",
    "start": "136550",
    "end": "140640"
  },
  {
    "text": "Then at a particular\npoint in time,",
    "start": "140640",
    "end": "142530"
  },
  {
    "text": "we close Gate 1\nwhile opening Gate 2.",
    "start": "142530",
    "end": "145819"
  },
  {
    "text": "This lets the car in the\ntoll booth proceed on,",
    "start": "145820",
    "end": "148350"
  },
  {
    "text": "but prevents any other\ncar from passing through.",
    "start": "148350",
    "end": "151600"
  },
  {
    "text": "We can repeat this\ntwo-step process",
    "start": "151600",
    "end": "153620"
  },
  {
    "text": "to deal with each\ncar one-at-time.",
    "start": "153620",
    "end": "156640"
  },
  {
    "text": "The key is that at\nno time is there",
    "start": "156640",
    "end": "158750"
  },
  {
    "text": "a path through both gates.",
    "start": "158750",
    "end": "162060"
  },
  {
    "text": "This is the same arrangement\nas the escapement mechanism",
    "start": "162060",
    "end": "164900"
  },
  {
    "text": "in a mechanical clock.",
    "start": "164900",
    "end": "166909"
  },
  {
    "text": "The escapement ensures that the\ngear attached to the clock’s",
    "start": "166910",
    "end": "169850"
  },
  {
    "text": "spring only advances\none tooth at a time,",
    "start": "169850",
    "end": "172450"
  },
  {
    "text": "preventing the spring from\nspinning the gear wildly",
    "start": "172450",
    "end": "175470"
  },
  {
    "text": "causing a whole day\nto pass at once!",
    "start": "175470",
    "end": "179100"
  },
  {
    "text": "If we observed the\ntoll booth’s output,",
    "start": "179100",
    "end": "181510"
  },
  {
    "text": "we would see a car emerge\nshortly after the instant",
    "start": "181510",
    "end": "184680"
  },
  {
    "text": "in time when Gate 2 opens.",
    "start": "184680",
    "end": "187359"
  },
  {
    "text": "The next car would\nemerge shortly",
    "start": "187360",
    "end": "189100"
  },
  {
    "text": "after the next time\nGate 2 opens, and so on.",
    "start": "189100",
    "end": "192900"
  },
  {
    "text": "Cars would proceed\nthrough the toll booth",
    "start": "192900",
    "end": "194750"
  },
  {
    "text": "at a rate set by the interval\nbetween Gate 2 openings.",
    "start": "194750",
    "end": "199180"
  },
  {
    "text": "Let’s apply this solution\nto design a memory component",
    "start": "199180",
    "end": "201980"
  },
  {
    "text": "for our sequential logic.",
    "start": "201980",
    "end": "204409"
  },
  {
    "start": "204000",
    "end": "204000"
  },
  {
    "text": "Taking our cue from\nthe 2-gate toll both,",
    "start": "204410",
    "end": "206940"
  },
  {
    "text": "we’ll design a new component,\ncalled a D register,",
    "start": "206940",
    "end": "209750"
  },
  {
    "text": "using two back-to-back latches.",
    "start": "209750",
    "end": "212560"
  },
  {
    "text": "The load signal for a D\nregister is typically called",
    "start": "212560",
    "end": "215030"
  },
  {
    "text": "the register’s “clock”, but the\nregister’s D input and Q output",
    "start": "215030",
    "end": "218970"
  },
  {
    "text": "play the same roles as\nthey did for the latch.",
    "start": "218970",
    "end": "222200"
  },
  {
    "text": "First we’ll describe the\ninternal structure of the D",
    "start": "222200",
    "end": "224480"
  },
  {
    "text": "register, then we’ll describe\nwhat it does and look in detail",
    "start": "224480",
    "end": "228250"
  },
  {
    "text": "at how it does it.",
    "start": "228250",
    "end": "230470"
  },
  {
    "text": "The D input is connected to\nwhat we call the master latch",
    "start": "230470",
    "end": "233330"
  },
  {
    "text": "and the Q output is\nconnected to the slave latch.",
    "start": "233330",
    "end": "237670"
  },
  {
    "text": "Note that the clock signal is\ninverted before it’s connected",
    "start": "237670",
    "end": "240720"
  },
  {
    "text": "to the gate input\nof the master latch.",
    "start": "240720",
    "end": "243580"
  },
  {
    "text": "So when the master latch is\nopen, the slave is closed,",
    "start": "243580",
    "end": "247470"
  },
  {
    "text": "and vice versa.",
    "start": "247470",
    "end": "248710"
  },
  {
    "text": "This achieves the escapement\nbehavior we saw on the previous",
    "start": "248710",
    "end": "251620"
  },
  {
    "text": "slide: at no time is there\nactive path from the register’s",
    "start": "251620",
    "end": "255540"
  },
  {
    "text": "D input to the\nregister’s Q output.",
    "start": "255540",
    "end": "258680"
  },
  {
    "text": "The delay introduced by the\ninverter on the clock signal",
    "start": "258680",
    "end": "261160"
  },
  {
    "text": "might give us cause for concern.",
    "start": "261160",
    "end": "263430"
  },
  {
    "text": "When there’s a rising 0-to-1\ntransition on the clock signal,",
    "start": "263430",
    "end": "266720"
  },
  {
    "text": "might there be a brief interval\nwhen the gate signal is HIGH",
    "start": "266720",
    "end": "269920"
  },
  {
    "text": "for both latches since there\nwill be a small delay before",
    "start": "269920",
    "end": "273210"
  },
  {
    "text": "the inverter’s output\ntransitions from 1 to 0?",
    "start": "273210",
    "end": "276490"
  },
  {
    "text": "Actually the inverter\nisn’t necessary:",
    "start": "276490",
    "end": "279069"
  },
  {
    "text": "Mr Blue is looking at a slightly\ndifferent latch schematic",
    "start": "279070",
    "end": "282150"
  },
  {
    "text": "where the latch is\nopen when G is LOW",
    "start": "282150",
    "end": "284280"
  },
  {
    "text": "and closed when G is high.",
    "start": "284280",
    "end": "286520"
  },
  {
    "text": "Just what we need\nfor the master latch!",
    "start": "286520",
    "end": "289919"
  },
  {
    "text": "By the way, you’ll sometimes\nhear a register called",
    "start": "289920",
    "end": "292440"
  },
  {
    "text": "a flip-flop because of the\nbistable nature of the positive",
    "start": "292440",
    "end": "295620"
  },
  {
    "text": "feedback loops in the latches.",
    "start": "295620",
    "end": "298710"
  },
  {
    "text": "That’s the internal\nstructure of the D register.",
    "start": "298710",
    "end": "301199"
  },
  {
    "text": "In the next section we’ll\ntake a step-by-step tour",
    "start": "301200",
    "end": "304160"
  },
  {
    "text": "of the register in operation.",
    "start": "304160",
    "end": "306630"
  }
]