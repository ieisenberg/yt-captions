[
  {
    "start": "0",
    "end": "6136"
  },
  {
    "text": "SRINI DEVADAS: Good\nmorning, everyone.",
    "start": "6136",
    "end": "8270"
  },
  {
    "text": "Thanks for coming in\non a Friday morning,",
    "start": "8270",
    "end": "10130"
  },
  {
    "text": "especially with the\nlong weekend coming up.",
    "start": "10130",
    "end": "12680"
  },
  {
    "text": "We're going to pick up\nwhere we left off yesterday.",
    "start": "12680",
    "end": "17900"
  },
  {
    "text": "And so if you recall,\nwe were looking",
    "start": "17900",
    "end": "23810"
  },
  {
    "text": "at an iterative approach\nto solving the eight queens",
    "start": "23810",
    "end": "27710"
  },
  {
    "text": "problem.",
    "start": "27710",
    "end": "29150"
  },
  {
    "text": "And in case you've\nforgotten in the,",
    "start": "29150",
    "end": "32730"
  },
  {
    "text": "I guess, intervening 20 hours,\nthe eight queens problem,",
    "start": "32730",
    "end": "37600"
  },
  {
    "text": "which is a specific\ninstance of n queens",
    "start": "37600",
    "end": "41559"
  },
  {
    "text": "is you have a chess board--",
    "start": "41560",
    "end": "43270"
  },
  {
    "text": "and I won't draw\nall the squares--",
    "start": "43270",
    "end": "45960"
  },
  {
    "text": "which is, obviously,\nan 8 by 8 board.",
    "start": "45960",
    "end": "48200"
  },
  {
    "text": "And you want to place\neight queens on this board",
    "start": "48200",
    "end": "52530"
  },
  {
    "text": "such that no two queens\nattack each other.",
    "start": "52530",
    "end": "55219"
  },
  {
    "text": "And we looked at different\ndata structures to solve this.",
    "start": "55220",
    "end": "58970"
  },
  {
    "text": "The naive data\nstructure would be",
    "start": "58970",
    "end": "62510"
  },
  {
    "text": "to represent the board as\na two-dimensional list.",
    "start": "62510",
    "end": "69860"
  },
  {
    "text": "And so you end up\nhaving an 8 by 8,",
    "start": "69860",
    "end": "73120"
  },
  {
    "text": "if you have a chessboard for\nthe eight queens problem.",
    "start": "73120",
    "end": "75830"
  },
  {
    "text": "We looked at a 4\nby 4 for starters.",
    "start": "75830",
    "end": "79100"
  },
  {
    "text": "And then after that, we\nlooked at compressing",
    "start": "79100",
    "end": "82729"
  },
  {
    "text": "that representation down to\na one-dimensional list where",
    "start": "82730",
    "end": "89090"
  },
  {
    "text": "let's say you had a 5\nby 5 board because we've",
    "start": "89090",
    "end": "91670"
  },
  {
    "text": "got five entries here.",
    "start": "91670",
    "end": "93049"
  },
  {
    "start": "93050",
    "end": "96920"
  },
  {
    "text": "You exploit the fact that\nthere can be at most one",
    "start": "96920",
    "end": "100670"
  },
  {
    "text": "queen on any given column.",
    "start": "100670",
    "end": "103670"
  },
  {
    "text": "And you say I'm\ngoing to represent",
    "start": "103670",
    "end": "106729"
  },
  {
    "text": "the position of that queen using\na single number where is from,",
    "start": "106730",
    "end": "112490"
  },
  {
    "text": "in this case 0 through 4,\nif I have a 5 by 5 board,",
    "start": "112490",
    "end": "118220"
  },
  {
    "text": "and you put that in here.",
    "start": "118220",
    "end": "120090"
  },
  {
    "text": "So a minus 1 would\nrepresent this being empty.",
    "start": "120090",
    "end": "123259"
  },
  {
    "text": "A 2 would represent a\nqueen in the second column",
    "start": "123260",
    "end": "133690"
  },
  {
    "text": "in this position over\nhere, et cetera, et cetera.",
    "start": "133690",
    "end": "137110"
  },
  {
    "text": "So with this more\ncompact representation,",
    "start": "137110",
    "end": "140920"
  },
  {
    "text": "it turns out that\nthe conflict check",
    "start": "140920",
    "end": "143770"
  },
  {
    "text": "becomes pretty straightforward.",
    "start": "143770",
    "end": "147140"
  },
  {
    "text": "And if you remember,\nour conflict check",
    "start": "147140",
    "end": "150819"
  },
  {
    "text": "is incremental in the sense\nthat what you're going to do",
    "start": "150820",
    "end": "154360"
  },
  {
    "text": "is assume that queens\nhave already been placed",
    "start": "154360",
    "end": "159220"
  },
  {
    "text": "in some number of columns.",
    "start": "159220",
    "end": "160510"
  },
  {
    "text": "I mean, it could be zero.",
    "start": "160510",
    "end": "161680"
  },
  {
    "text": "In this case it's 2.",
    "start": "161680",
    "end": "163150"
  },
  {
    "text": "And you're going\nto try and check",
    "start": "163150",
    "end": "165430"
  },
  {
    "text": "to see when a third\nqueen is placed",
    "start": "165430",
    "end": "167680"
  },
  {
    "text": "on this third\ncolumn, number two,",
    "start": "167680",
    "end": "170280"
  },
  {
    "text": "whether it conflicts\nwith the existing queens.",
    "start": "170280",
    "end": "175240"
  },
  {
    "text": "But you don't have to worry\nabout the checks associated",
    "start": "175240",
    "end": "179372"
  },
  {
    "text": "with the existing queens\nbecause you've already",
    "start": "179372",
    "end": "181329"
  },
  {
    "text": "taken care of that.",
    "start": "181330",
    "end": "182560"
  },
  {
    "text": "So that's the incremental\nnature of this check.",
    "start": "182560",
    "end": "185080"
  },
  {
    "text": "And I won't go over\nthis code again,",
    "start": "185080",
    "end": "187570"
  },
  {
    "text": "but the check\nassociated with ensuring",
    "start": "187570",
    "end": "193030"
  },
  {
    "text": "that when you place a\nqueen on a given column,",
    "start": "193030",
    "end": "200730"
  },
  {
    "text": "it checks the diagonals.",
    "start": "200730",
    "end": "201909"
  },
  {
    "text": "That's the most\ninteresting part.",
    "start": "201910",
    "end": "204250"
  },
  {
    "text": "And you put a queen here,\nyou need to check this,",
    "start": "204250",
    "end": "209260"
  },
  {
    "text": "and you need to check that.",
    "start": "209260",
    "end": "210920"
  },
  {
    "text": "And in this case, obviously\nthere's a conflict.",
    "start": "210920",
    "end": "212950"
  },
  {
    "text": "And because there are\ntwo diagonals, that's",
    "start": "212950",
    "end": "214741"
  },
  {
    "text": "why you have the ABS, the\nabsolute value over there,",
    "start": "214741",
    "end": "217060"
  },
  {
    "text": "and you're exploiting the\nfact that the diagonal is",
    "start": "217060",
    "end": "219720"
  },
  {
    "text": "a diagonal of a square,\nand how much you move up",
    "start": "219720",
    "end": "222790"
  },
  {
    "text": "should be how much you move\nto the right or down, left,",
    "start": "222790",
    "end": "225909"
  },
  {
    "text": "or what have you.",
    "start": "225910",
    "end": "227680"
  },
  {
    "text": "Another check is simply\nensuring that when",
    "start": "227680",
    "end": "231670"
  },
  {
    "text": "you look at the\nparticular column",
    "start": "231670",
    "end": "233670"
  },
  {
    "text": "and you see the number current\nis a particular column,",
    "start": "233670",
    "end": "238060"
  },
  {
    "text": "the number associated with\nthat particular column",
    "start": "238060",
    "end": "240220"
  },
  {
    "text": "shouldn't be repeated\nin some other column.",
    "start": "240220",
    "end": "242960"
  },
  {
    "text": "Because that would imply that\nif you saw a 2 and a 2 here,",
    "start": "242960",
    "end": "248470"
  },
  {
    "text": "obviously, that\nwould imply that you",
    "start": "248470",
    "end": "251770"
  },
  {
    "text": "have two queens on the same\nrow, and you can't have that.",
    "start": "251770",
    "end": "256690"
  },
  {
    "text": "So that's the story.",
    "start": "256690",
    "end": "258000"
  },
  {
    "text": "And we decided to use iteration\nbecause, at this point in time,",
    "start": "258000",
    "end": "263560"
  },
  {
    "text": "you know nothing else in\nterms of control flow.",
    "start": "263560",
    "end": "265970"
  },
  {
    "text": "I know that's not the\ncase, but we assume that.",
    "start": "265970",
    "end": "269350"
  },
  {
    "text": "And so you end up\nhaving this ugly code",
    "start": "269350",
    "end": "272680"
  },
  {
    "text": "associated with eight\nnested loops that does",
    "start": "272680",
    "end": "279100"
  },
  {
    "text": "this incremental enumeration.",
    "start": "279100",
    "end": "283960"
  },
  {
    "text": "So board 0 being i implies that\nyou're taking the first column",
    "start": "283960",
    "end": "292960"
  },
  {
    "text": "and you're iterating\nthe positions",
    "start": "292960",
    "end": "294819"
  },
  {
    "text": "of the queen in the rows\nof the first column,",
    "start": "294820",
    "end": "297860"
  },
  {
    "text": "and so on and so forth.",
    "start": "297860",
    "end": "299240"
  },
  {
    "text": "And if you go\nahead and run this,",
    "start": "299240",
    "end": "300669"
  },
  {
    "text": "which we did last\ntime you end up",
    "start": "300670",
    "end": "302950"
  },
  {
    "text": "getting 92 different solutions\nto the eight queens problem,",
    "start": "302950",
    "end": "308470"
  },
  {
    "text": "and as I mentioned, there's\nonly 12 distinct ones.",
    "start": "308470",
    "end": "311350"
  },
  {
    "text": "So if you take rotation\nand reflection into account",
    "start": "311350",
    "end": "314410"
  },
  {
    "text": "and each of these is\na legitimate solution,",
    "start": "314410",
    "end": "317540"
  },
  {
    "text": "that needs to be\ntranslated into the picture",
    "start": "317540",
    "end": "320440"
  },
  {
    "text": "that you see here by\nessentially taking this data",
    "start": "320440",
    "end": "324820"
  },
  {
    "text": "structure that you see.",
    "start": "324820",
    "end": "326480"
  },
  {
    "text": "7 becomes the queen in the\nleft corner, et cetera.",
    "start": "326480",
    "end": "331300"
  },
  {
    "text": "So we absolutely wouldn't\nwant to publish this code.",
    "start": "331300",
    "end": "337840"
  },
  {
    "text": "I guess, in effect,\nI'm doing it.",
    "start": "337840",
    "end": "339400"
  },
  {
    "text": "But you would not want to\nclaim authorship of this code",
    "start": "339400",
    "end": "345970"
  },
  {
    "text": "especially if you know about\nthe programming technique that's",
    "start": "345970",
    "end": "350500"
  },
  {
    "text": "called recursion.",
    "start": "350500",
    "end": "351860"
  },
  {
    "text": "So that's really what\nwe're going to do today.",
    "start": "351860",
    "end": "353800"
  },
  {
    "text": "We're going to look at a\ncouple of different puzzles.",
    "start": "353800",
    "end": "356008"
  },
  {
    "text": "We'll finish up with the n\nqueen's puzzle fairly quickly,",
    "start": "356008",
    "end": "359320"
  },
  {
    "text": "and we'll look at how we\ncould use recursion, which",
    "start": "359320",
    "end": "362330"
  },
  {
    "text": "is an algorithm paradigm as\nwell as a programming paradigm",
    "start": "362330",
    "end": "365439"
  },
  {
    "text": "to solve challenging problems.",
    "start": "365440",
    "end": "368330"
  },
  {
    "text": "And there's really\ntwo classes, at least,",
    "start": "368330",
    "end": "372009"
  },
  {
    "text": "of recursive\nalgorithms, and you're",
    "start": "372010",
    "end": "374170"
  },
  {
    "text": "going to see both\nof those today.",
    "start": "374170",
    "end": "375830"
  },
  {
    "text": "The first one is nQueens, and\nI'll get to the second one",
    "start": "375830",
    "end": "378729"
  },
  {
    "text": "when we get to the second one.",
    "start": "378730",
    "end": "381670"
  },
  {
    "text": "So our goal now is to take that\nugly code and make it pretty.",
    "start": "381670",
    "end": "387460"
  },
  {
    "text": "And before I get\ninto that, I want",
    "start": "387460",
    "end": "390190"
  },
  {
    "text": "to show you a simpler example\nof iteration versus recursion.",
    "start": "390190",
    "end": "397150"
  },
  {
    "text": "And this is about\nas simple as it",
    "start": "397150",
    "end": "399669"
  },
  {
    "text": "gets while still\nbeing interesting",
    "start": "399670",
    "end": "401980"
  },
  {
    "text": "from an algorithmic standpoint.",
    "start": "401980",
    "end": "403730"
  },
  {
    "text": "So the greatest common divisor,\nEuclid's age-old algorithm",
    "start": "403730",
    "end": "409990"
  },
  {
    "text": "to compute the greatest\ncommon divisor.",
    "start": "409990",
    "end": "412479"
  },
  {
    "text": "And you see the two\nline, three line,",
    "start": "412480",
    "end": "415300"
  },
  {
    "text": "what have you\niterative algorithm up",
    "start": "415300",
    "end": "417669"
  },
  {
    "text": "there that corresponds to taking\nthe pair of numbers, obviously,",
    "start": "417670",
    "end": "422590"
  },
  {
    "text": "m and n that you need\nto compute the greatest",
    "start": "422590",
    "end": "426699"
  },
  {
    "text": "common divisor for.",
    "start": "426700",
    "end": "428230"
  },
  {
    "text": "And all you do is assign m\nto n and n becomes n mod m.",
    "start": "428230",
    "end": "440320"
  },
  {
    "text": "And I'm not going to explain\nwhy this algorithm is correct",
    "start": "440320",
    "end": "443950"
  },
  {
    "text": "or anything like that.",
    "start": "443950",
    "end": "445120"
  },
  {
    "text": "I'm not particularly\ninterested in that.",
    "start": "445120",
    "end": "446979"
  },
  {
    "text": "What I'm much more\ninterested in is",
    "start": "446980",
    "end": "449290"
  },
  {
    "text": "ensuring that you understand\nthat the iterative algorithm is",
    "start": "449290",
    "end": "454510"
  },
  {
    "text": "the same as the recursive one.",
    "start": "454510",
    "end": "457990"
  },
  {
    "text": "The recursive one gets\nyou the correct answer",
    "start": "457990",
    "end": "460854"
  },
  {
    "text": "if you assume the\niterative algorithm is",
    "start": "460854",
    "end": "462520"
  },
  {
    "text": "correct and vice\nversa, and that's",
    "start": "462520",
    "end": "464830"
  },
  {
    "text": "really what this is about.",
    "start": "464830",
    "end": "466659"
  },
  {
    "text": "So we won't argue if\nEuclid is correct or not.",
    "start": "466660",
    "end": "471530"
  },
  {
    "text": "But the point here is you\ncould have translated--",
    "start": "471530",
    "end": "477440"
  },
  {
    "text": "well, you did translate\nthis iterative algorithm",
    "start": "477440",
    "end": "479650"
  },
  {
    "text": "into a recursive one.",
    "start": "479650",
    "end": "481060"
  },
  {
    "text": "And there's a couple\nof things I want",
    "start": "481060",
    "end": "482919"
  },
  {
    "text": "you to keep in mind when\nyou look at recursive code",
    "start": "482920",
    "end": "486700"
  },
  {
    "text": "and certainly when you\nwrite recursive code.",
    "start": "486700",
    "end": "488860"
  },
  {
    "text": "And it's much easier\npointing this out",
    "start": "488860",
    "end": "491139"
  },
  {
    "text": "in a simple example like this.",
    "start": "491140",
    "end": "493870"
  },
  {
    "text": "So first off, when\nwe say recursion--",
    "start": "493870",
    "end": "499449"
  },
  {
    "text": "and I should have probably said\nthis a little bit earlier--",
    "start": "499450",
    "end": "502000"
  },
  {
    "text": "recursion is something\ncalling itself.",
    "start": "502000",
    "end": "506230"
  },
  {
    "text": "So you can say a function,\nf, calling itself,",
    "start": "506230",
    "end": "509980"
  },
  {
    "text": "that's the simple case.",
    "start": "509980",
    "end": "512020"
  },
  {
    "text": "We also consider if\nyou have f calling",
    "start": "512020",
    "end": "514479"
  },
  {
    "text": "g, which calls f, then\nthat is recursive as well.",
    "start": "514480",
    "end": "522048"
  },
  {
    "text": "And see you can have\narbitrary structures that",
    "start": "522049",
    "end": "525070"
  },
  {
    "text": "correspond to nested recursion.",
    "start": "525070",
    "end": "526920"
  },
  {
    "text": "We're really only going\nto be looking at functions",
    "start": "526920",
    "end": "531660"
  },
  {
    "text": "at least in this lecture, where\nyou have a single function, f,",
    "start": "531660",
    "end": "535389"
  },
  {
    "text": "calling itself, which\nis exactly the case",
    "start": "535390",
    "end": "538210"
  },
  {
    "text": "for our RGCD, the Recursive\nGCD that you see here.",
    "start": "538210",
    "end": "541880"
  },
  {
    "text": "You see a call RGCD\ninside of RGCD,",
    "start": "541880",
    "end": "545530"
  },
  {
    "text": "and you know this\nfunction is recursive.",
    "start": "545530",
    "end": "547270"
  },
  {
    "text": "Sometimes you may\nlook at a function",
    "start": "547270",
    "end": "549730"
  },
  {
    "text": "and you don't see that\nimmediate syntactic evidence",
    "start": "549730",
    "end": "555070"
  },
  {
    "text": "that the function is recursive,\nbut it may be recursive",
    "start": "555070",
    "end": "559330"
  },
  {
    "text": "because of nested\nrecursion, f calling",
    "start": "559330",
    "end": "563740"
  },
  {
    "text": "g, more complicated recursion.",
    "start": "563740",
    "end": "566240"
  },
  {
    "text": "So this is clearly a\nrecursive function, RGCD.",
    "start": "566240",
    "end": "569649"
  },
  {
    "text": "And two things that\nyou need to look",
    "start": "569650",
    "end": "574870"
  },
  {
    "text": "for if you want to write\ncorrect recursion, I mean this",
    "start": "574870",
    "end": "578620"
  },
  {
    "text": "is not sufficient to\nwrite correct recursion,",
    "start": "578620",
    "end": "581300"
  },
  {
    "text": "but necessary.",
    "start": "581300",
    "end": "583450"
  },
  {
    "text": "And in particular, when\nI say correct recursion,",
    "start": "583450",
    "end": "586930"
  },
  {
    "text": "I want it to be\nnon-terminating, so the problem",
    "start": "586930",
    "end": "592220"
  },
  {
    "text": "with something calling itself\nis, you think of it as there's",
    "start": "592220",
    "end": "596230"
  },
  {
    "text": "some sort of cycle\nand you absolutely",
    "start": "596230",
    "end": "599334"
  },
  {
    "text": "need to break out of the\ncycle, otherwise, you",
    "start": "599334",
    "end": "601250"
  },
  {
    "text": "will be in the cycle forever.",
    "start": "601250",
    "end": "602770"
  },
  {
    "text": "You could call something\nwhich calls something, which",
    "start": "602770",
    "end": "605970"
  },
  {
    "text": "calls something that\ngoes on, your program",
    "start": "605970",
    "end": "608259"
  },
  {
    "text": "isn't going to terminate.",
    "start": "608260",
    "end": "609807"
  },
  {
    "text": "So you always want to be careful\nwhen you write recursive code",
    "start": "609807",
    "end": "612390"
  },
  {
    "text": "that there's a base case.",
    "start": "612390",
    "end": "614900"
  },
  {
    "text": "There's a termination condition.",
    "start": "614900",
    "end": "616970"
  },
  {
    "text": "So there should be\nsome part of the code",
    "start": "616970",
    "end": "620560"
  },
  {
    "text": "where if certain\nconditions are satisfied,",
    "start": "620560",
    "end": "625029"
  },
  {
    "text": "you're not making\na recursive call.",
    "start": "625030",
    "end": "627880"
  },
  {
    "text": "That is what I would\nconsider the base case.",
    "start": "627880",
    "end": "629920"
  },
  {
    "text": "That really comes from induction\nand from the mathematics",
    "start": "629920",
    "end": "632769"
  },
  {
    "text": "of recursion.",
    "start": "632770",
    "end": "633820"
  },
  {
    "text": "You want to have a base\ncase and then the recursion",
    "start": "633820",
    "end": "636190"
  },
  {
    "text": "is really the inductive step.",
    "start": "636190",
    "end": "638770"
  },
  {
    "text": "If that doesn't make too much\nsense, don't worry about it.",
    "start": "638770",
    "end": "641620"
  },
  {
    "text": "You can think of\nit syntactically.",
    "start": "641620",
    "end": "643330"
  },
  {
    "text": "Look for a path in\nthe code where you",
    "start": "643330",
    "end": "645490"
  },
  {
    "text": "don't see RGCD inside of RGCD.",
    "start": "645490",
    "end": "648220"
  },
  {
    "text": "And you can clearly see\nthat in the if m mod n",
    "start": "648220",
    "end": "652180"
  },
  {
    "text": "equals equals 0, return n.",
    "start": "652180",
    "end": "654370"
  },
  {
    "start": "654370",
    "end": "657520"
  },
  {
    "text": "So you want to have\nwhat we call the base",
    "start": "657520",
    "end": "660310"
  },
  {
    "text": "case where a function returns.",
    "start": "660310",
    "end": "667150"
  },
  {
    "start": "667150",
    "end": "670660"
  },
  {
    "text": "That's not enough\nbecause you don't quite",
    "start": "670660",
    "end": "672670"
  },
  {
    "text": "know if you're going to get\nto that base case or not.",
    "start": "672670",
    "end": "675940"
  },
  {
    "text": "You're going to call this\nfunction with some arguments,",
    "start": "675940",
    "end": "679900"
  },
  {
    "text": "and you want to get some\nsense that the arguments are",
    "start": "679900",
    "end": "682780"
  },
  {
    "text": "shrinking as you go.",
    "start": "682780",
    "end": "685666"
  },
  {
    "text": "And it could even be\nthe other way around.",
    "start": "685666",
    "end": "687415"
  },
  {
    "text": "The arguments may\nincrease, and once you",
    "start": "687415",
    "end": "690370"
  },
  {
    "text": "grow beyond a certain threshold,\nyou fire off on the return",
    "start": "690370",
    "end": "694240"
  },
  {
    "text": "without making the\nrecursive call.",
    "start": "694240",
    "end": "697390"
  },
  {
    "text": "So this notion of the\narguments becoming smaller",
    "start": "697390",
    "end": "701050"
  },
  {
    "text": "is very common in the case\nof the algorithmic paradigm",
    "start": "701050",
    "end": "706089"
  },
  {
    "text": "that we'll be\nfollowing in this class",
    "start": "706090",
    "end": "707930"
  },
  {
    "text": "where we're going to take\nlarge problems like a eight",
    "start": "707930",
    "end": "710200"
  },
  {
    "text": "queens or n queens and\ngo to n minus 1 queens",
    "start": "710200",
    "end": "713700"
  },
  {
    "text": "and n minus 2 queens.",
    "start": "713700",
    "end": "715300"
  },
  {
    "text": "And divide and conquer, which is\nother paradigm that we look at.",
    "start": "715300",
    "end": "719800"
  },
  {
    "text": "As you can see from the\nname is taking a big problem",
    "start": "719800",
    "end": "723130"
  },
  {
    "text": "and making it smaller.",
    "start": "723130",
    "end": "725080"
  },
  {
    "text": "So really for the\nmost part, you're",
    "start": "725080",
    "end": "727030"
  },
  {
    "text": "going to essentially have\na situation where you're",
    "start": "727030",
    "end": "730270"
  },
  {
    "text": "going to say that the\narguments to the function",
    "start": "730270",
    "end": "739240"
  },
  {
    "text": "should be smaller in some sense.",
    "start": "739240",
    "end": "745279"
  },
  {
    "text": "And smaller could mean bigger.",
    "start": "745280",
    "end": "747590"
  },
  {
    "text": "I mean, it's just a\ndefinitional thing.",
    "start": "747590",
    "end": "749420"
  },
  {
    "text": "I mean, the point is when\nyou get to the base case,",
    "start": "749420",
    "end": "753079"
  },
  {
    "text": "usually you are saying, as\nyou can see in this base case,",
    "start": "753080",
    "end": "755750"
  },
  {
    "text": "you're saying when it\ncomes down to the fact",
    "start": "755750",
    "end": "758220"
  },
  {
    "text": "that a particular condition\nis satisfied, in this case,",
    "start": "758220",
    "end": "761660"
  },
  {
    "text": "it's the relationship\nbetween m and n.",
    "start": "761660",
    "end": "763759"
  },
  {
    "text": "And if that's 0,\nthen we return n.",
    "start": "763760",
    "end": "765920"
  },
  {
    "text": "But in other cases,\nit just might",
    "start": "765920",
    "end": "767630"
  },
  {
    "text": "be when you get to a one\nqueen problem, you're done.",
    "start": "767630",
    "end": "771950"
  },
  {
    "text": "I mean, you have no choice.",
    "start": "771950",
    "end": "773390"
  },
  {
    "text": "You've got this 1 by\n1 board and you've",
    "start": "773390",
    "end": "775070"
  },
  {
    "text": "got to put your queen on\nit, and obviously, that",
    "start": "775070",
    "end": "777500"
  },
  {
    "text": "might create a conflict,\nbut you're done.",
    "start": "777500",
    "end": "780080"
  },
  {
    "text": "I mean, there's no\ntwo things about it",
    "start": "780080",
    "end": "781790"
  },
  {
    "text": "if you have one queen problem.",
    "start": "781790",
    "end": "783290"
  },
  {
    "text": "There's only one step.",
    "start": "783290",
    "end": "784959"
  },
  {
    "text": "You put your queen down.",
    "start": "784960",
    "end": "787310"
  },
  {
    "text": "So that's where we were at\nwith respect to the puzzles",
    "start": "787310",
    "end": "790250"
  },
  {
    "text": "that we're going to\nbe doing in this class",
    "start": "790250",
    "end": "792410"
  },
  {
    "text": "where you're going to\nshrink things down.",
    "start": "792410",
    "end": "795589"
  },
  {
    "text": "So in that sense, smaller\nwould mean smaller.",
    "start": "795590",
    "end": "800360"
  },
  {
    "text": "It's not necessarily in quotes.",
    "start": "800360",
    "end": "802810"
  },
  {
    "text": "So that makes sense?",
    "start": "802810",
    "end": "803690"
  },
  {
    "text": "Any questions at all\nabout syntax or anything",
    "start": "803690",
    "end": "806630"
  },
  {
    "text": "that you see on the board here?",
    "start": "806630",
    "end": "809940"
  },
  {
    "text": "All right good.",
    "start": "809940",
    "end": "811110"
  },
  {
    "text": "So now, I'm ready to show\nyou what the n queens",
    "start": "811110",
    "end": "820990"
  },
  {
    "text": "code looks like.",
    "start": "820990",
    "end": "822239"
  },
  {
    "text": "One of the other\nproblems, of course,",
    "start": "822239",
    "end": "823780"
  },
  {
    "text": "with the eight queens\ncode is that it only",
    "start": "823780",
    "end": "831440"
  },
  {
    "text": "works for eight queens, and\nit doesn't work for nine.",
    "start": "831440",
    "end": "835820"
  },
  {
    "text": "And that's annoying,\nso you'd like",
    "start": "835820",
    "end": "840290"
  },
  {
    "text": "to have a procedure that takes\nn as an argument and works",
    "start": "840290",
    "end": "845720"
  },
  {
    "text": "for n equals 4, n equals 8.",
    "start": "845720",
    "end": "848509"
  },
  {
    "text": "And eventually, you could\nrun this on n equals 20,",
    "start": "848510",
    "end": "851030"
  },
  {
    "text": "and it will finish.",
    "start": "851030",
    "end": "852260"
  },
  {
    "text": "I'll show you.",
    "start": "852260",
    "end": "853350"
  },
  {
    "text": "But there is an\nexponential relationship",
    "start": "853350",
    "end": "856550"
  },
  {
    "text": "between run time and\nn because it's just",
    "start": "856550",
    "end": "861330"
  },
  {
    "text": "a complicated problem.",
    "start": "861330",
    "end": "862560"
  },
  {
    "text": "There's a lot of combinations.",
    "start": "862560",
    "end": "864090"
  },
  {
    "text": "So you do not want to run this\ncode for more than n equals 25.",
    "start": "864090",
    "end": "867880"
  },
  {
    "text": "It hasn't completed.",
    "start": "867880",
    "end": "869810"
  },
  {
    "text": "I think at some point I\ndid an analysis on how long",
    "start": "869810",
    "end": "873590"
  },
  {
    "text": "it would take for n\nequals 30, and it wasn't",
    "start": "873590",
    "end": "877009"
  },
  {
    "text": "something I wanted to wait for.",
    "start": "877009",
    "end": "878300"
  },
  {
    "text": "I mean, my computer\nwould have gotten old",
    "start": "878300",
    "end": "880430"
  },
  {
    "text": "and died before the\nprogram came back.",
    "start": "880430",
    "end": "884720"
  },
  {
    "text": "Which is a reasonable\nexperiment to carry out,",
    "start": "884720",
    "end": "887360"
  },
  {
    "text": "but I like my computer.",
    "start": "887360",
    "end": "889490"
  },
  {
    "text": "I'm kind of annoyed with it\nbecause of the new operating",
    "start": "889490",
    "end": "892760"
  },
  {
    "text": "system, but I generally like it.",
    "start": "892760",
    "end": "895310"
  },
  {
    "text": "So you can see that\nwe're going to use",
    "start": "895310",
    "end": "897710"
  },
  {
    "text": "exactly the same framework.",
    "start": "897710",
    "end": "899710"
  },
  {
    "text": "We're going to use the\nsame no conflicts routine.",
    "start": "899710",
    "end": "904080"
  },
  {
    "text": "There's no change there, no\nchange in data structures.",
    "start": "904080",
    "end": "907460"
  },
  {
    "text": "There's no change in really\neven the incremental strategy",
    "start": "907460",
    "end": "910160"
  },
  {
    "text": "that we're following.",
    "start": "910160",
    "end": "911649"
  },
  {
    "text": "But we can take\nthat intuitive code",
    "start": "911650",
    "end": "913640"
  },
  {
    "text": "and turn it into this pretty\ncode that has about five lines,",
    "start": "913640",
    "end": "916910"
  },
  {
    "text": "or seven lines, what have you.",
    "start": "916910",
    "end": "919740"
  },
  {
    "text": "And so you can see, again,\nthat if you look at that code,",
    "start": "919740",
    "end": "923060"
  },
  {
    "text": "I mean, it's not that\nmuch more complicated.",
    "start": "923060",
    "end": "924960"
  },
  {
    "text": "There's more going on in there.",
    "start": "924960",
    "end": "926789"
  },
  {
    "text": "There's more going on because\nit's a more interesting problem",
    "start": "926789",
    "end": "929330"
  },
  {
    "text": "at some level than GCD, but it\nhas the same characteristics",
    "start": "929330",
    "end": "935780"
  },
  {
    "text": "in terms of having a base case,\nand it's actually an easy one",
    "start": "935780",
    "end": "939650"
  },
  {
    "text": "to look at.",
    "start": "939650",
    "end": "940370"
  },
  {
    "text": "And it also has\na property 2 here",
    "start": "940370",
    "end": "944270"
  },
  {
    "text": "where the argument\nto the nQueens",
    "start": "944270",
    "end": "946490"
  },
  {
    "text": "is going to be one less than\nwhat the caller function has",
    "start": "946490",
    "end": "951050"
  },
  {
    "text": "as its argument because\nyou're going column by column,",
    "start": "951050",
    "end": "953779"
  },
  {
    "text": "and you're taking away.",
    "start": "953780",
    "end": "955410"
  },
  {
    "text": "In this case, you're not\nnecessarily going to a 7",
    "start": "955410",
    "end": "958759"
  },
  {
    "text": "by 7, really.",
    "start": "958760",
    "end": "960470"
  },
  {
    "text": "It's not that you're going\nfrom 8 by 8 to 7 by 7.",
    "start": "960470",
    "end": "964279"
  },
  {
    "text": "You're going from\n8 by 8 to 7 by 8.",
    "start": "964280",
    "end": "967340"
  },
  {
    "start": "967340",
    "end": "969920"
  },
  {
    "text": "You have one less column.",
    "start": "969920",
    "end": "971250"
  },
  {
    "text": "You still have to work\nwith all the rows.",
    "start": "971250",
    "end": "974990"
  },
  {
    "text": "So that's really what's\ngoing on out here.",
    "start": "974990",
    "end": "976830"
  },
  {
    "text": "If current equal size--",
    "start": "976830",
    "end": "978600"
  },
  {
    "text": "so what's happening is current\nis actually incrementing.",
    "start": "978600",
    "end": "982399"
  },
  {
    "text": "So you're moving and what is\nremaining is becoming smaller.",
    "start": "982400",
    "end": "988820"
  },
  {
    "text": "And current starts with--",
    "start": "988820",
    "end": "991710"
  },
  {
    "text": "so if you look at\nnQueens here, it",
    "start": "991710",
    "end": "994980"
  },
  {
    "text": "says nQueens, a\nsize, and rQueens,",
    "start": "994980",
    "end": "999170"
  },
  {
    "text": "which is this routine here,\nit sets current to be 0.",
    "start": "999170",
    "end": "1007120"
  },
  {
    "text": "And size is, of course,\nwhatever you give nQueens,",
    "start": "1007120",
    "end": "1010540"
  },
  {
    "text": "which could be 8 or 20.",
    "start": "1010540",
    "end": "1013009"
  },
  {
    "text": "And finally, if you look\nat this part of the code,",
    "start": "1013010",
    "end": "1020290"
  },
  {
    "text": "you get to the point\nwhere you run out",
    "start": "1020290",
    "end": "1022060"
  },
  {
    "text": "of columns when\ncurrent equals size.",
    "start": "1022060",
    "end": "1024490"
  },
  {
    "text": "And at this point, you\nput all the queens down,",
    "start": "1024490",
    "end": "1027730"
  },
  {
    "text": "and that things\nhaven't fallen apart--",
    "start": "1027730",
    "end": "1030010"
  },
  {
    "text": "you haven't returned false--",
    "start": "1030010",
    "end": "1031630"
  },
  {
    "text": "and therefore, you're done.",
    "start": "1031630",
    "end": "1034150"
  },
  {
    "text": "So when you get to that\nquote ninth column,",
    "start": "1034150",
    "end": "1036880"
  },
  {
    "text": "you're off the board,\nand you're done.",
    "start": "1036880",
    "end": "1039209"
  },
  {
    "text": "And all of the existing\nqueens, the eight queens",
    "start": "1039210",
    "end": "1041829"
  },
  {
    "text": "that were put on\nthe board, didn't",
    "start": "1041829",
    "end": "1043689"
  },
  {
    "text": "conflict with each other.",
    "start": "1043690",
    "end": "1045459"
  },
  {
    "text": "That's how it works.",
    "start": "1045460",
    "end": "1047140"
  },
  {
    "text": "And then over here, you've\ntaken your eight loops that",
    "start": "1047140",
    "end": "1051859"
  },
  {
    "text": "were in the eight queens problem\nor the for loops in the four",
    "start": "1051859",
    "end": "1054400"
  },
  {
    "text": "queens problem and\nyou've gone off",
    "start": "1054400",
    "end": "1057800"
  },
  {
    "text": "and turned it into one loop.",
    "start": "1057800",
    "end": "1059860"
  },
  {
    "text": "And the reason that\nworks is because rQueens",
    "start": "1059860",
    "end": "1061809"
  },
  {
    "text": "is calling rQueens out here.",
    "start": "1061810",
    "end": "1063430"
  },
  {
    "text": "So that's your recursive call.",
    "start": "1063430",
    "end": "1066610"
  },
  {
    "text": "And then the argument\nhere is current plus 1,",
    "start": "1066610",
    "end": "1071080"
  },
  {
    "text": "and it's getting closer\nand closer to size",
    "start": "1071080",
    "end": "1073120"
  },
  {
    "text": "as you go around, which\nmeans that it's effectively",
    "start": "1073120",
    "end": "1076150"
  },
  {
    "text": "getting smaller.",
    "start": "1076150",
    "end": "1077950"
  },
  {
    "text": "What you're working\nwith is getting smaller.",
    "start": "1077950",
    "end": "1081159"
  },
  {
    "text": "So if of look at\nwhat happens here,",
    "start": "1081160",
    "end": "1084280"
  },
  {
    "text": "you can trace the\nexecution of this,",
    "start": "1084280",
    "end": "1087610"
  },
  {
    "text": "and this is worthwhile doing.",
    "start": "1087610",
    "end": "1089559"
  },
  {
    "text": "And I'll put this in the notes,\nand you can look at it for a 4",
    "start": "1089560",
    "end": "1093490"
  },
  {
    "text": "by 4.",
    "start": "1093490",
    "end": "1094360"
  },
  {
    "text": "But in general, if you're\nconfused about recursion,",
    "start": "1094360",
    "end": "1098030"
  },
  {
    "text": "it's absolutely\nworthwhile to trace",
    "start": "1098030",
    "end": "1100780"
  },
  {
    "text": "the execution for\nsmall arguments",
    "start": "1100780",
    "end": "1104650"
  },
  {
    "text": "and figure out exactly\nwhen things are terminating",
    "start": "1104650",
    "end": "1107710"
  },
  {
    "text": "and when things are\nbeing called recursively.",
    "start": "1107710",
    "end": "1110919"
  },
  {
    "text": "And this is simply\na single call.",
    "start": "1110920",
    "end": "1114325"
  },
  {
    "start": "1114325",
    "end": "1119500"
  },
  {
    "text": "It looks like it's a single\ncall, because there's",
    "start": "1119500",
    "end": "1125920"
  },
  {
    "text": "only one instance of rQueens.",
    "start": "1125920",
    "end": "1127750"
  },
  {
    "text": "But if you look at the\ncode, how many calls would",
    "start": "1127750",
    "end": "1131700"
  },
  {
    "text": "I possibly make if I were\nsitting with an eight queens",
    "start": "1131700",
    "end": "1136590"
  },
  {
    "text": "problem and I started\nwith size equals 8?",
    "start": "1136590",
    "end": "1143279"
  },
  {
    "text": "Then in that very\nfirst, I invoke rQueens",
    "start": "1143280",
    "end": "1146070"
  },
  {
    "text": "with current equal\n0 and size equals 8.",
    "start": "1146070",
    "end": "1150130"
  },
  {
    "text": "How many rQueens calls will\nthe first rQueens make?",
    "start": "1150130",
    "end": "1153360"
  },
  {
    "start": "1153360",
    "end": "1158120"
  },
  {
    "text": "How many times would\npotentially make that?",
    "start": "1158120",
    "end": "1162130"
  },
  {
    "text": "So if I look at the branching\nhere and I say this is rQueens",
    "start": "1162130",
    "end": "1166810"
  },
  {
    "text": "and this has current\nequals 0 and size equals 8,",
    "start": "1166810",
    "end": "1174610"
  },
  {
    "text": "the way you want to think about\nthis from a tracing standpoint",
    "start": "1174610",
    "end": "1179309"
  },
  {
    "text": "is you're making calls.",
    "start": "1179310",
    "end": "1181960"
  },
  {
    "text": "rQueens is calling rQueens.",
    "start": "1181960",
    "end": "1184690"
  },
  {
    "text": "And obviously, there is\nrQueens in the middle",
    "start": "1184690",
    "end": "1188320"
  },
  {
    "text": "of that code over there.",
    "start": "1188320",
    "end": "1191360"
  },
  {
    "text": "And so what is the\nbreadth here in terms",
    "start": "1191360",
    "end": "1194679"
  },
  {
    "text": "of the number of calls?",
    "start": "1194680",
    "end": "1196010"
  },
  {
    "start": "1196010",
    "end": "1198617"
  },
  {
    "text": "Someone?",
    "start": "1198617",
    "end": "1199116"
  },
  {
    "start": "1199116",
    "end": "1204659"
  },
  {
    "text": "Trace the code.",
    "start": "1204660",
    "end": "1205600"
  },
  {
    "text": "So i in range 8, which\nmeans 0 through 7,",
    "start": "1205600",
    "end": "1210010"
  },
  {
    "text": "and then I'm going to go off,\nand this is the very first one.",
    "start": "1210010",
    "end": "1213480"
  },
  {
    "text": "So noConflicts is going\nto constantly return--",
    "start": "1213480",
    "end": "1217150"
  },
  {
    "text": "it's the first queen.",
    "start": "1217150",
    "end": "1218650"
  },
  {
    "text": "So noConflicts is going\nto constantly return true.",
    "start": "1218650",
    "end": "1221950"
  },
  {
    "text": "So I'm going to go\ninside of the if,",
    "start": "1221950",
    "end": "1224350"
  },
  {
    "text": "and I'm going to make\nthat rQueens call.",
    "start": "1224350",
    "end": "1227220"
  },
  {
    "text": "So I'm going to have eight\ndifferent calls associated",
    "start": "1227220",
    "end": "1231039"
  },
  {
    "text": "with each of the\npositions that corresponds",
    "start": "1231040",
    "end": "1232990"
  },
  {
    "text": "to the queen on\nthat first column.",
    "start": "1232990",
    "end": "1236440"
  },
  {
    "text": "And then each of these\ncould potentially",
    "start": "1236440",
    "end": "1240279"
  },
  {
    "text": "make eight different\ncalls, potentially I",
    "start": "1240280",
    "end": "1243890"
  },
  {
    "text": "said because as you get\ndeeper in the recursion,",
    "start": "1243890",
    "end": "1246640"
  },
  {
    "text": "the noConflicts is\ngoing to fire false,",
    "start": "1246640",
    "end": "1249820"
  },
  {
    "text": "and it may not make the call.",
    "start": "1249820",
    "end": "1251892"
  },
  {
    "text": "But obviously, the\nvery first one, you're",
    "start": "1251892",
    "end": "1253600"
  },
  {
    "text": "going to make eight calls.",
    "start": "1253600",
    "end": "1255320"
  },
  {
    "text": "So recursion is scary from\na performance standpoint",
    "start": "1255320",
    "end": "1260669"
  },
  {
    "text": "to some people and rightly so\nbecause things could explode",
    "start": "1260670",
    "end": "1265294"
  },
  {
    "text": "on you, and this\ngoes back to what",
    "start": "1265294",
    "end": "1266710"
  },
  {
    "text": "I said about running\nthis with n r size",
    "start": "1266710",
    "end": "1270679"
  },
  {
    "text": "equals 25 and so\non and so forth.",
    "start": "1270680",
    "end": "1272630"
  },
  {
    "text": "And one of the things\nthat is worth doing",
    "start": "1272630",
    "end": "1274510"
  },
  {
    "text": "and you have to do this type of\nanalysis in classes like 6.006,",
    "start": "1274510",
    "end": "1283240"
  },
  {
    "text": "not a lot of this\nbut because we don't",
    "start": "1283240",
    "end": "1285309"
  },
  {
    "text": "do exponential algorithms.",
    "start": "1285310",
    "end": "1287050"
  },
  {
    "text": "But you can look\nat this tree that",
    "start": "1287050",
    "end": "1290020"
  },
  {
    "text": "is being generated by\nthese recursive calls",
    "start": "1290020",
    "end": "1292820"
  },
  {
    "text": "and you do want to get some\nsense of how large this tree is",
    "start": "1292820",
    "end": "1296139"
  },
  {
    "text": "going to become.",
    "start": "1296140",
    "end": "1297300"
  },
  {
    "text": "And we're going to look at a\ndifferent class of algorithms.",
    "start": "1297300",
    "end": "1299807"
  },
  {
    "text": "Most of algorithms\nwe're going to look",
    "start": "1299807",
    "end": "1301390"
  },
  {
    "text": "at that are recursive for the\nrest of this course including",
    "start": "1301390",
    "end": "1305920"
  },
  {
    "text": "the next one that we'll\nget to in a few minutes,",
    "start": "1305920",
    "end": "1309700"
  },
  {
    "text": "aren't as bad as\nthis one in terms",
    "start": "1309700",
    "end": "1312100"
  },
  {
    "text": "of computational complexity.",
    "start": "1312100",
    "end": "1314620"
  },
  {
    "text": "But n queens is a hard problem.",
    "start": "1314620",
    "end": "1316420"
  },
  {
    "text": "It needs exhaustive search, and\nthere's a lot of combinations.",
    "start": "1316420",
    "end": "1320570"
  },
  {
    "text": "And so it's not an\nefficient algorithm.",
    "start": "1320570",
    "end": "1322960"
  },
  {
    "text": "Efficient means\npolynomial times something",
    "start": "1322960",
    "end": "1325450"
  },
  {
    "text": "like n square quadratic,\nn cubed, and so on.",
    "start": "1325450",
    "end": "1329179"
  },
  {
    "text": "And this is not efficient,\nand the reason for that",
    "start": "1329180",
    "end": "1331630"
  },
  {
    "text": "is this explosion in the\nnumber of recursive calls.",
    "start": "1331630",
    "end": "1334630"
  },
  {
    "text": "So it's easy to write five\nlines of code that takes forever",
    "start": "1334630",
    "end": "1337990"
  },
  {
    "text": "to run.",
    "start": "1337990",
    "end": "1338830"
  },
  {
    "text": "It will terminate.",
    "start": "1338830",
    "end": "1339700"
  },
  {
    "text": "It's not that it had\nan infinite loop in it,",
    "start": "1339700",
    "end": "1341679"
  },
  {
    "text": "but the number of combinations\nexplodes on you because",
    "start": "1341680",
    "end": "1344500"
  },
  {
    "text": "of eight and then eight again\nfor each of these and then--",
    "start": "1344500",
    "end": "1352300"
  },
  {
    "text": "and so on.",
    "start": "1352300",
    "end": "1352850"
  },
  {
    "text": "So you can see that gets\npretty large pretty quick.",
    "start": "1352850",
    "end": "1356980"
  },
  {
    "text": "So this code is something\nthat, as I said,",
    "start": "1356980",
    "end": "1365799"
  },
  {
    "text": "is essentially the same.",
    "start": "1365800",
    "end": "1367990"
  },
  {
    "text": "It's sitting there\ncomputing nQueens 20.",
    "start": "1367990",
    "end": "1371350"
  },
  {
    "text": "That's why this is not a problem\nwith my laptop, at least,",
    "start": "1371350",
    "end": "1374590"
  },
  {
    "text": "as of this moment, I don't think\nit's a problem with my laptop.",
    "start": "1374590",
    "end": "1378466"
  },
  {
    "text": "And so there you go.",
    "start": "1378467",
    "end": "1379300"
  },
  {
    "text": "So nQueens 20 gave you the\nrepresentation that we chose.",
    "start": "1379300",
    "end": "1387140"
  },
  {
    "text": "You can try and\nconvince yourself",
    "start": "1387140",
    "end": "1389350"
  },
  {
    "text": "that this, in fact, is correct.",
    "start": "1389350",
    "end": "1391780"
  },
  {
    "text": "I haven't.",
    "start": "1391780",
    "end": "1393410"
  },
  {
    "text": "But that code is so\nstraightforward at this point",
    "start": "1393410",
    "end": "1396790"
  },
  {
    "text": "that if there is\nanything wrong with it,",
    "start": "1396790",
    "end": "1400200"
  },
  {
    "text": "it would be\ncatastrophically wrong.",
    "start": "1400200",
    "end": "1402850"
  },
  {
    "text": "It would just crash or it\nwouldn't return anything.",
    "start": "1402850",
    "end": "1406679"
  },
  {
    "text": "And so that is one solution.",
    "start": "1406680",
    "end": "1408620"
  },
  {
    "text": "There's many, many solutions.",
    "start": "1408620",
    "end": "1409900"
  },
  {
    "text": "Unlike the eight queens case,\nwhere I ran it to completion",
    "start": "1409900",
    "end": "1413710"
  },
  {
    "text": "and all the 92 solutions\ngot printed out,",
    "start": "1413710",
    "end": "1416200"
  },
  {
    "text": "there's millions\nof solutions here.",
    "start": "1416200",
    "end": "1418100"
  },
  {
    "text": "So if I just took out a return\nstatement and let it run,",
    "start": "1418100",
    "end": "1421179"
  },
  {
    "text": "you'll get screen\nfulls of solutions",
    "start": "1421180",
    "end": "1424030"
  },
  {
    "text": "to the 20 queens problem\nbecause if you did that, there",
    "start": "1424030",
    "end": "1429700"
  },
  {
    "text": "would be a lot of solutions.",
    "start": "1429700",
    "end": "1430990"
  },
  {
    "text": "But especially given\nthat we are not",
    "start": "1430990",
    "end": "1432820"
  },
  {
    "text": "exploiting rotational\nsymmetry and reflections,",
    "start": "1432820",
    "end": "1436960"
  },
  {
    "text": "there's a lot of solutions.",
    "start": "1436960",
    "end": "1438880"
  },
  {
    "text": "But that's one of them.",
    "start": "1438880",
    "end": "1440230"
  },
  {
    "text": "So there you go.",
    "start": "1440230",
    "end": "1442870"
  },
  {
    "text": "Yeah.",
    "start": "1442870",
    "end": "1443650"
  },
  {
    "text": "Question.",
    "start": "1443650",
    "end": "1444150"
  },
  {
    "text": "AUDIENCE: Is there an expression\nfor the number of solutions",
    "start": "1444150",
    "end": "1445770"
  },
  {
    "text": "you'll get, that depends on n?",
    "start": "1445770",
    "end": "1447706"
  },
  {
    "text": "SRINI DEVADAS: No.",
    "start": "1447706",
    "end": "1448660"
  },
  {
    "text": "There's no closed form solution.",
    "start": "1448660",
    "end": "1450161"
  },
  {
    "text": "No.",
    "start": "1450161",
    "end": "1450660"
  },
  {
    "start": "1450660",
    "end": "1453650"
  },
  {
    "text": "The 12 is a concrete number,\nand 92 and 12 were enumerated.",
    "start": "1453650",
    "end": "1459790"
  },
  {
    "text": "Now you could obviously write a\ncomputer program that counted--",
    "start": "1459790",
    "end": "1462991"
  },
  {
    "text": "I mean, you didn't\nhave to print this out.",
    "start": "1462991",
    "end": "1464740"
  },
  {
    "text": "You could count the\nnumber of solutions",
    "start": "1464740",
    "end": "1466780"
  },
  {
    "text": "to the 20 queens problem,\nand you can find that out.",
    "start": "1466780",
    "end": "1470060"
  },
  {
    "text": "But then if you want to do\nrotations and reflections,",
    "start": "1470060",
    "end": "1472360"
  },
  {
    "text": "you'd have to start\nshaving things off.",
    "start": "1472360",
    "end": "1474230"
  },
  {
    "text": "Yeah, back there.",
    "start": "1474230",
    "end": "1474970"
  },
  {
    "text": "AUDIENCE: Do you have the run\ntime for the recursive one?",
    "start": "1474970",
    "end": "1477345"
  },
  {
    "text": "Would that be n to the n?",
    "start": "1477345",
    "end": "1478734"
  },
  {
    "text": "SRINI DEVADAS: No.",
    "start": "1478734",
    "end": "1480010"
  },
  {
    "text": "Because you're doing\nsignificant pruning.",
    "start": "1480010",
    "end": "1481780"
  },
  {
    "text": "Great question.",
    "start": "1481780",
    "end": "1483200"
  },
  {
    "text": "So some of these things get\ntruncated because you end up",
    "start": "1483200",
    "end": "1489250"
  },
  {
    "text": "doing this, and\nthen this one you",
    "start": "1489250",
    "end": "1492002"
  },
  {
    "text": "don't have to go any further.",
    "start": "1492002",
    "end": "1493210"
  },
  {
    "start": "1493210",
    "end": "1496240"
  },
  {
    "text": "So it's not n to the n\nsimply because you never",
    "start": "1496240",
    "end": "1500530"
  },
  {
    "text": "have to put down another\nqueen if the first two queens",
    "start": "1500530",
    "end": "1505510"
  },
  {
    "text": "conflict with each other.",
    "start": "1505510",
    "end": "1508850"
  },
  {
    "text": "So you likely did,\nactually, been back",
    "start": "1508850",
    "end": "1511350"
  },
  {
    "text": "on Thursday about\nthis time yesterday,",
    "start": "1511350",
    "end": "1514470"
  },
  {
    "text": "we were going over the 4 by 4.",
    "start": "1514470",
    "end": "1516600"
  },
  {
    "text": "And we didn't even\nput a queen down.",
    "start": "1516600",
    "end": "1519929"
  },
  {
    "text": "We went over and we\nsaid, oh, this clearly",
    "start": "1519930",
    "end": "1522760"
  },
  {
    "text": "can't work because there's\na queen on this row already.",
    "start": "1522760",
    "end": "1526710"
  },
  {
    "text": "This clearly can't work because\nthere's a queen one a way.",
    "start": "1526710",
    "end": "1529679"
  },
  {
    "text": "So there's no\nreason to go deeper.",
    "start": "1529680",
    "end": "1531600"
  },
  {
    "text": "You would go n raised to n if\nyou only did the conflict check",
    "start": "1531600",
    "end": "1537780"
  },
  {
    "text": "after you put n queens down.",
    "start": "1537780",
    "end": "1540540"
  },
  {
    "text": "And if you put\nall n queens down,",
    "start": "1540540",
    "end": "1542520"
  },
  {
    "text": "closed your eyes put n queens\ndown and then ran a conflict",
    "start": "1542520",
    "end": "1545070"
  },
  {
    "text": "check, and then did\nthat over and over,",
    "start": "1545070",
    "end": "1547529"
  },
  {
    "text": "over and over, it\nwould be n raised to n.",
    "start": "1547530",
    "end": "1549840"
  },
  {
    "text": "But that's not what we're doing.",
    "start": "1549840",
    "end": "1551620"
  },
  {
    "text": "What we're doing is if you look\nat the code, we are saying if--",
    "start": "1551620",
    "end": "1556020"
  },
  {
    "text": "this is an important\nstatement, actually.",
    "start": "1556020",
    "end": "1558960"
  },
  {
    "text": "Thanks for the question.",
    "start": "1558960",
    "end": "1560340"
  },
  {
    "text": "That is pruning your\nsearch, and that",
    "start": "1560340",
    "end": "1562110"
  },
  {
    "text": "is making it significantly\nless than n raised to n.",
    "start": "1562110",
    "end": "1565914"
  },
  {
    "text": "A nice exercise.",
    "start": "1565914",
    "end": "1566580"
  },
  {
    "text": "Remember what I said about\nopportunity for homework,",
    "start": "1566580",
    "end": "1569539"
  },
  {
    "text": "when I get questions.",
    "start": "1569540",
    "end": "1571070"
  },
  {
    "text": "A nice exercise is to\ngo to 8 raised to 8",
    "start": "1571070",
    "end": "1574620"
  },
  {
    "text": "and then go to the\neight queens problem",
    "start": "1574620",
    "end": "1579930"
  },
  {
    "text": "and figure out\nwhat that number is",
    "start": "1579930",
    "end": "1581430"
  },
  {
    "text": "in terms of the number\nof times you're actually",
    "start": "1581430",
    "end": "1583740"
  },
  {
    "text": "checking for no conflicts.",
    "start": "1583740",
    "end": "1585270"
  },
  {
    "text": "So count the number of times,\nnot the number of solutions,",
    "start": "1585270",
    "end": "1588150"
  },
  {
    "text": "but the number of times\nnoConflicts is being called,",
    "start": "1588150",
    "end": "1591266"
  },
  {
    "text": "and you'll find that it's\nsignificantly less than 8",
    "start": "1591266",
    "end": "1593390"
  },
  {
    "text": "raised to 8.",
    "start": "1593390",
    "end": "1594954"
  },
  {
    "text": "Because you're\npruning the search.",
    "start": "1594954",
    "end": "1596370"
  },
  {
    "start": "1596370",
    "end": "1598980"
  },
  {
    "text": "Technically, it's called pruning\nthe search high up in the tree.",
    "start": "1598980",
    "end": "1604230"
  },
  {
    "text": "That's the technical\nterm for it.",
    "start": "1604230",
    "end": "1607140"
  },
  {
    "text": "All right?",
    "start": "1607140",
    "end": "1607840"
  },
  {
    "text": "Good.",
    "start": "1607840",
    "end": "1608640"
  },
  {
    "text": "Any other questions?",
    "start": "1608640",
    "end": "1609860"
  },
  {
    "start": "1609860",
    "end": "1612520"
  },
  {
    "text": "So we're done with eight\nqueens and nQueens.",
    "start": "1612520",
    "end": "1616200"
  },
  {
    "start": "1616200",
    "end": "1622144"
  }
]