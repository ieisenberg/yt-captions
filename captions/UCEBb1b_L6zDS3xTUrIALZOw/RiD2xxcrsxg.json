[
  {
    "start": "0",
    "end": "500"
  },
  {
    "text": "Let’s summarize what we’ve\nlearned about controlling",
    "start": "500",
    "end": "3210"
  },
  {
    "text": "pipelined systems.",
    "start": "3210",
    "end": "5115"
  },
  {
    "text": "The most\nstraightforward approach",
    "start": "5115",
    "end": "6490"
  },
  {
    "text": "is to use a pipeline\nwith the system",
    "start": "6490",
    "end": "8320"
  },
  {
    "text": "clock chosen to accommodate\nthe worst-case processing time.",
    "start": "8320",
    "end": "12969"
  },
  {
    "text": "These systems are easy to\ndesign but can’t produce higher",
    "start": "12970",
    "end": "16299"
  },
  {
    "text": "throughputs if the processing\nstages might run more quickly",
    "start": "16300",
    "end": "19590"
  },
  {
    "text": "for some data values.",
    "start": "19590",
    "end": "22190"
  },
  {
    "text": "We saw that we could\nuse a simple handshake",
    "start": "22190",
    "end": "24320"
  },
  {
    "text": "protocol to move data\nthrough the system.",
    "start": "24320",
    "end": "27010"
  },
  {
    "text": "All communication still\nhappens on the rising edge",
    "start": "27010",
    "end": "29190"
  },
  {
    "text": "of the system clock, but\nthe specific clock edge",
    "start": "29190",
    "end": "31870"
  },
  {
    "text": "used to transfer\ndata is determined",
    "start": "31870",
    "end": "33720"
  },
  {
    "text": "by the stages themselves.",
    "start": "33720",
    "end": "36690"
  },
  {
    "text": "It’s tempting to wonder if we\ncan might adjust the global",
    "start": "36690",
    "end": "39149"
  },
  {
    "text": "clock period to take advantage\nof data-dependent processing",
    "start": "39150",
    "end": "42100"
  },
  {
    "text": "speedups.",
    "start": "42100",
    "end": "43649"
  },
  {
    "text": "But the necessary\ntiming generators",
    "start": "43650",
    "end": "45480"
  },
  {
    "text": "can be very complicated\nin large systems.",
    "start": "45480",
    "end": "48460"
  },
  {
    "text": "It’s usually much easier to\nuse local communication between",
    "start": "48460",
    "end": "51620"
  },
  {
    "text": "modules to determine system\ntiming than trying to figure",
    "start": "51620",
    "end": "54820"
  },
  {
    "text": "out all the constraints\nat the system level.",
    "start": "54820",
    "end": "57370"
  },
  {
    "text": "So this approach isn’t\nusually a good one.",
    "start": "57370",
    "end": "60800"
  },
  {
    "text": "But what about locally-timed\nasynchronous systems",
    "start": "60800",
    "end": "63680"
  },
  {
    "text": "like the example we just saw?",
    "start": "63680",
    "end": "66330"
  },
  {
    "text": "Each generation of engineers\nhas heard the siren call",
    "start": "66330",
    "end": "69330"
  },
  {
    "text": "of asynchronous logic.",
    "start": "69330",
    "end": "71170"
  },
  {
    "text": "Sadly, it usually proves\ntoo hard to produce",
    "start": "71170",
    "end": "73659"
  },
  {
    "text": "a provably reliable\ndesign for a large system,",
    "start": "73660",
    "end": "76510"
  },
  {
    "text": "say, a modern computer.",
    "start": "76510",
    "end": "79190"
  },
  {
    "text": "But there are special cases,\nsuch as the logic for integer",
    "start": "79190",
    "end": "82150"
  },
  {
    "text": "division, where the\ndata-dependent speed-ups",
    "start": "82150",
    "end": "85220"
  },
  {
    "text": "make the extra work worthwhile.",
    "start": "85220",
    "end": "88420"
  },
  {
    "text": "We characterized the\nperformance of our systems",
    "start": "88420",
    "end": "90840"
  },
  {
    "text": "by measuring their\nlatency and throughput.",
    "start": "90840",
    "end": "93679"
  },
  {
    "text": "For combinational\ncircuits, the latency",
    "start": "93680",
    "end": "95550"
  },
  {
    "text": "is simply the propagation\ndelay of the circuit",
    "start": "95550",
    "end": "97920"
  },
  {
    "text": "and its throughput\nis just 1/latency.",
    "start": "97920",
    "end": "101799"
  },
  {
    "text": "We introduced a systematic\nstrategy for designing",
    "start": "101800",
    "end": "104390"
  },
  {
    "text": "K-pipelines, where there’s a\nregister on the outputs of each",
    "start": "104390",
    "end": "108580"
  },
  {
    "text": "stage, and there are exactly\nK registers on every path from",
    "start": "108580",
    "end": "112320"
  },
  {
    "text": "input to output.",
    "start": "112320",
    "end": "114840"
  },
  {
    "text": "The period of the\nsystem clock t_CLK",
    "start": "114840",
    "end": "117049"
  },
  {
    "text": "is determined by the propagation\ndelay of the slowest pipeline",
    "start": "117050",
    "end": "120850"
  },
  {
    "text": "stage.",
    "start": "120850",
    "end": "122210"
  },
  {
    "text": "The throughput of a pipelined\nsystem is 1/t_CLK and its",
    "start": "122210",
    "end": "125840"
  },
  {
    "text": "latency is K times t_CLK.",
    "start": "125840",
    "end": "129780"
  },
  {
    "text": "Pipelining is the\nkey to increasing",
    "start": "129780",
    "end": "131840"
  },
  {
    "text": "the throughput of most\nhigh-performance digital",
    "start": "131840",
    "end": "134269"
  },
  {
    "text": "systems.",
    "start": "134270",
    "end": "135820"
  }
]