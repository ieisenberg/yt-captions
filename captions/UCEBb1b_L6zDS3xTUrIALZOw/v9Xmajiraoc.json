[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "start": "0",
    "end": "8610"
  },
  {
    "text": "PROFESSOR: OK, so we've\ncome to the last lecture. So what I want to do is let's\ndo some overview of what we went",
    "start": "8610",
    "end": "16230"
  },
  {
    "text": "through to make sure that\neverybody's-- remembers, basically, from the beginning,\ntalk a little bit about",
    "start": "16230",
    "end": "22980"
  },
  {
    "text": "the project, and a little bit\nabout what you can use this",
    "start": "22980",
    "end": "30180"
  },
  {
    "text": "class material for. I mean, this is\nat least my view. After talking to\na few people who have been taking this\nclass over the years, where",
    "start": "30180",
    "end": "36810"
  },
  {
    "text": "they have been using it. And I think-- so you\ndon't just completely the minute you finish\nthe next quiz completely",
    "start": "36810",
    "end": "42570"
  },
  {
    "text": "forget about everything\nand just move on. And if I have time,\nI will go and talk",
    "start": "42570",
    "end": "49019"
  },
  {
    "text": "about current research. So if you're interested\nin compiler stuff, to give you a flavor of this\nis great, what you learn,",
    "start": "49020",
    "end": "55630"
  },
  {
    "text": "you actually got a good sliver\nof what compilers are all about. But what happens today in\nthe research community?",
    "start": "55630",
    "end": "63570"
  },
  {
    "text": "Just touch on some of that. And hopefully,\nwe'll have some time for discussion and feedback.",
    "start": "63570",
    "end": "70539"
  },
  {
    "text": "So this is where we started. We started saying we\nhave this program.",
    "start": "70540",
    "end": "76079"
  },
  {
    "text": "So we're thinking\nprogramming languages. And then microprocessors,\nunderstand assembly language,",
    "start": "76080",
    "end": "81660"
  },
  {
    "text": "or object code. And we want to build a\ncompiler there to do that.",
    "start": "81660",
    "end": "86740"
  },
  {
    "text": "And so here's a simple\nprogram that we started with. So the first thing you\ncan do is you can generate",
    "start": "86740",
    "end": "94380"
  },
  {
    "start": "92000",
    "end": "92000"
  },
  {
    "text": "this unoptimized piece of code. This actually came out of I\nhad a CPC code that I came out",
    "start": "94380",
    "end": "101369"
  },
  {
    "text": "of GCC minus or 0. And then the\ninteresting thing is you can actually\noptimize and get rid a lot of these\nredundant instructions",
    "start": "101370",
    "end": "108060"
  },
  {
    "text": "and run it much faster. And I think we went from doing\nleft and now last project.",
    "start": "108060",
    "end": "115770"
  },
  {
    "text": "And this one, what\nyou're working on will end up more to the right. So in this thing, you basically\nbuild one from scratch.",
    "start": "115770",
    "end": "124180"
  },
  {
    "text": "This is very interesting,\nbecause many places where you go take compiler course, you\nbuild a compiler from scratch.",
    "start": "124180",
    "end": "130860"
  },
  {
    "text": "But most of the\ntime what you get, since this is such\na large project, most places, when you do\nteach a compiler course,",
    "start": "130860",
    "end": "136740"
  },
  {
    "text": "you get a template and\nsay, here's a template. You go fill out the things,\nfill out the optimizations,",
    "start": "136740",
    "end": "141780"
  },
  {
    "text": "fill out parsing,\nand stuff like that. And you basically go end-to-end. But what's missing there is\nmost of the decisions are",
    "start": "141780",
    "end": "150450"
  },
  {
    "text": "done for you, OK? You don't get to design\nthe instruction set. You don't get to design\nthe [? intermediate ?]",
    "start": "150450",
    "end": "156270"
  },
  {
    "text": "representation, stuff like that. So what that means is\nat the end of the day, you build a compiler.",
    "start": "156270",
    "end": "162330"
  },
  {
    "text": "But you don't have idea\nwhat the hard decisions are. In this course, we\nbasically, what I like to say",
    "start": "162330",
    "end": "169980"
  },
  {
    "text": "is give you the rope\nto hang yourself with. Basically we said,\nit's all open. Go do it. And what that\nmeans is many times",
    "start": "169980",
    "end": "177420"
  },
  {
    "text": "what happens is do something,\nyou make a decision early on. And then later you\nlearn something. And then you say, oops,\nthat was a bad decision.",
    "start": "177420",
    "end": "183540"
  },
  {
    "text": "You had to go undo things. I mean, I guess a lot of\npeople had that feeling. I think key thing is it's a much\nharder course because of that.",
    "start": "183540",
    "end": "191220"
  },
  {
    "text": "I mean, if you talk to your\npeers in other institutions, they might have done a compiler. But you probably had\nto deal with a lot",
    "start": "191220",
    "end": "197220"
  },
  {
    "text": "of those decisions, and\nall the bad decisions, and recover from it. And the nice thing\nabout [INAUDIBLE] they",
    "start": "197220",
    "end": "203694"
  },
  {
    "text": "manage to recover from those\nthings and still do and keep going. And what that means is you\nunderstood some very basic",
    "start": "203695",
    "end": "209640"
  },
  {
    "text": "stuff about building compiler,\nwhat those hard decisions are. This is a lot more\nimportant, because next time when you decide to compile, you\nactually have that knowledge.",
    "start": "209640",
    "end": "216180"
  },
  {
    "text": "Because you actually had\nmade the decision yourself. So I think that is key. So if we look at a\ncompiler, what's a compiler?",
    "start": "216180",
    "end": "224220"
  },
  {
    "text": "So you have a program. You do lexical analysis,\nget a token stream. You do syntax analysis, parser.",
    "start": "224220",
    "end": "231510"
  },
  {
    "start": "231000",
    "end": "231000"
  },
  {
    "text": "Get a parse tree. Do some semantic\nanalysis and have intermediate\nrepresentation at the end.",
    "start": "231510",
    "end": "237792"
  },
  {
    "text": "You code optimize, and we\ndo it in a different order. But normally, the code\noptimization come-- you optimize intermediate\nrepresentation.",
    "start": "237792",
    "end": "243720"
  },
  {
    "text": "And finally a code generator\nand design assembly. So here's a question.",
    "start": "243720",
    "end": "248890"
  },
  {
    "text": "Why do you need a lexical\nanalyzer, a syntax analyzer? Why can't both be\ncombined to one?",
    "start": "248890",
    "end": "254910"
  },
  {
    "text": "Can you combine it to one? ",
    "start": "254910",
    "end": "263120"
  },
  {
    "text": "Can't you just have a grammar\nthat read just characters,",
    "start": "263120",
    "end": "271979"
  },
  {
    "text": "and then write you\nexpressions and your tokens--",
    "start": "271980",
    "end": "277050"
  },
  {
    "text": "your tokens also\nwith the grammar. Why did-- AUDIENCE: And actually\ncompares to have both of those",
    "start": "277050",
    "end": "282790"
  },
  {
    "text": "in [INAUDIBLE]. PROFESSOR: OK, that's--\nwell, [INAUDIBLE].. That's good answer.",
    "start": "282790",
    "end": "287940"
  },
  {
    "text": "What's else? Why can't-- AUDIENCE: Because you need to\nactually see the time thing for, actually, [INAUDIBLE].",
    "start": "287940",
    "end": "294960"
  },
  {
    "text": "PROFESSOR: Not really. I mean, in LR(1) one\npath, you had to only see a little bit forward. You can still do that.",
    "start": "294960",
    "end": "303290"
  },
  {
    "text": "What else? ",
    "start": "303290",
    "end": "316550"
  },
  {
    "text": "And well, it stopped. AUDIENCE: I guess,\nthere's syntax and things that maybe do with just\ntokens that might not fit in",
    "start": "316550",
    "end": "323220"
  },
  {
    "text": "[INAUDIBLE]. ",
    "start": "323220",
    "end": "328230"
  },
  {
    "text": "PROFESSOR: Different-- AUDIENCE:\n[? Text representations. ?] PROFESSOR: Yeah. ",
    "start": "328230",
    "end": "334199"
  },
  {
    "text": "So here's my take on it. I think there are a few things. First of all, it's doable.",
    "start": "334200",
    "end": "339960"
  },
  {
    "text": "But then, I probably have to-- I can do just-- if I do LR(1) passing,\nI look ahead one token.",
    "start": "339960",
    "end": "348030"
  },
  {
    "text": "But now if I\nactually build, that gives me a lot of expression--\nexpressiveness in my language. But on the other\nhand, if I actually",
    "start": "348030",
    "end": "354330"
  },
  {
    "text": "had to build the token\nmyself, I probably had to look forward a\nlot further so in there. So I might have issue\nabout looking forward.",
    "start": "354330",
    "end": "360360"
  },
  {
    "text": "Because the minute I go there,\nI probably cannot make that decision. So there might be\nlook-ahead issues in there.",
    "start": "360360",
    "end": "365470"
  },
  {
    "text": "Second, I think it's a little\nbit of historical reasons because for a long\ntime, passing was",
    "start": "365470",
    "end": "372030"
  },
  {
    "text": "a very computation-heavy thing. I mean, to build\nthis past reason,",
    "start": "372030",
    "end": "377168"
  },
  {
    "text": "and large programs took a\nlot of time, a lot of effort, very large tables,\nand stuff like that. It was taxing programs.",
    "start": "377168",
    "end": "382940"
  },
  {
    "text": "So by doing lexical\nanalysis, you really brought in having 100,000 characters,\nyou only have 5,000 tokens.",
    "start": "382940",
    "end": "390800"
  },
  {
    "text": "So it really reduces\nwhat you had to do. So in some sense, when\nyou are really doing that, that breakdown was a\ngood logical breakdown.",
    "start": "390800",
    "end": "397789"
  },
  {
    "text": "But on the other hand, I think\nyou can do both together. And there might be\nissues in there. But it's not--",
    "start": "397790",
    "end": "403970"
  },
  {
    "text": "I don't think it's fundamental. So in lexical analysis,\nwhat do you do? You have tokens out\nof character string.",
    "start": "403970",
    "end": "411860"
  },
  {
    "text": "And we did it with\nregular expressions. And I'm just picking sides.",
    "start": "411860",
    "end": "418460"
  },
  {
    "text": "I mean, you should\nknow these things. I don't have to go and explain\nwhat regular expression works. So this is just to bring those\nthings back to your mind.",
    "start": "418460",
    "end": "428360"
  },
  {
    "start": "428000",
    "end": "428000"
  },
  {
    "text": "And then, we dealt\nwith lexical analysis. So what we did was, we\ndefined regular expressions.",
    "start": "428360",
    "end": "434260"
  },
  {
    "text": "And we built a nondeterministic\nfinite automaton out of that NFA.",
    "start": "434260",
    "end": "439902"
  },
  {
    "text": "And then, we came up\nwith the algorithms, actually go from NFA to DFA. And then, DFA you can distribute\nit, go and build these tokens",
    "start": "439902",
    "end": "448780"
  },
  {
    "text": "very nicely. So that was really\na nice set of theory that we really use in compilers.",
    "start": "448780",
    "end": "456000"
  },
  {
    "start": "456000",
    "end": "456000"
  },
  {
    "text": "Then we went to syntax analysis. So that means we start\ndefining language using context-free grammars.",
    "start": "456000",
    "end": "462630"
  },
  {
    "text": "So now we have much\nmore expressive thing. We can actually\ncreate this grammars",
    "start": "462630",
    "end": "468900"
  },
  {
    "text": "from modern languages in there. And so, here's a simple\nexample where what you",
    "start": "468900",
    "end": "474300"
  },
  {
    "start": "471000",
    "end": "471000"
  },
  {
    "text": "have is a bunch\nof this expression recognizer with minus plus\nand multiply simple thing.",
    "start": "474300",
    "end": "480910"
  },
  {
    "start": "480000",
    "end": "480000"
  },
  {
    "text": "And then, we basically build\na pass tree at the end. So you were token stream\ncomes a pass tree at the end.",
    "start": "480910",
    "end": "486640"
  },
  {
    "start": "486000",
    "end": "486000"
  },
  {
    "text": "So here's something\na little bit new I am adding in\nhere that we didn't talk this time in the class. So if you look at\ndifferent grammars,",
    "start": "486640",
    "end": "494940"
  },
  {
    "text": "the simplest grammar\nis regular expression. It's a grammar. It's a very simple grammar. And the biggest grammar\nis a context-free grammar.",
    "start": "494940",
    "end": "502080"
  },
  {
    "text": "That basically\nsays you can define from a context-free language how\nbiggest thing you can define.",
    "start": "502080",
    "end": "510480"
  },
  {
    "start": "506000",
    "end": "506000"
  },
  {
    "text": "Something a little bit less\nis unambiguous grammar. So you can write a\ncontext-free grammar",
    "start": "510480",
    "end": "515700"
  },
  {
    "text": "that's basically ambiguous. You don't know-- you have\nmultiple ways of going that. And after that, you can create\nmore and more restrictive",
    "start": "515700",
    "end": "522389"
  },
  {
    "text": "sets by defining the technique\nyou can use to identify that. So if, for example, if\nyou have the LR(0) passer,",
    "start": "522390",
    "end": "529440"
  },
  {
    "text": "there's a certain type of\ngrammars it can recognize. Beyond that, it\ncannot recognize. And as we go, we\ncan keep building",
    "start": "529440",
    "end": "536070"
  },
  {
    "text": "higher and higher things. So for example, if you are doing\na modern programming language, you can come and say,\nOK, this language",
    "start": "536070",
    "end": "542970"
  },
  {
    "text": "can be represented\nin the grammar that LR(1) passer can pass. So you can have these\nmultiple classes in there.",
    "start": "542970",
    "end": "550410"
  },
  {
    "text": "And that's LR(k), k\ncould be any number. So that's why I\nsaid, if I actually",
    "start": "550410",
    "end": "556410"
  },
  {
    "text": "start doing the entire\ntokens also using grammar, so probably I have to have\na very high k in the large k",
    "start": "556410",
    "end": "564660"
  },
  {
    "text": "passer. So then, basically, we came\nup with this pass engine,",
    "start": "564660",
    "end": "570520"
  },
  {
    "text": "which you give this table. And you have a state\nstack and a symbol stack. And then we just\nbasically go streaming",
    "start": "570520",
    "end": "579190"
  },
  {
    "text": "through the input data and\nlook at the current symbol and look at what's in the stack. And we get a pass action\ngiven in the table.",
    "start": "579190",
    "end": "586690"
  },
  {
    "text": "So you can have a generic\nengine given a passer table, and it lets you do\nthe right thing.",
    "start": "586690",
    "end": "592600"
  },
  {
    "start": "587000",
    "end": "587000"
  },
  {
    "text": "And of course,\ndepending on the k, you have to actually look\nahead too a little bit. And then, we came\nup with a method",
    "start": "592600",
    "end": "598750"
  },
  {
    "text": "to divide these passer tables. A lot of these things, probably\nyou can just completely",
    "start": "598750",
    "end": "604383"
  },
  {
    "text": "forget about it after this\nclass because you are not going to come up with\nand write a [INAUDIBLE]",
    "start": "604383",
    "end": "609850"
  },
  {
    "text": "yourself to do a passage\nand that you probably use a tool that\nactually do [INAUDIBLE] or something like that\nto do the generator.",
    "start": "609850",
    "end": "616240"
  },
  {
    "text": "So but the interesting thing\nto use that is when it comes and say there's a shift reducer.",
    "start": "616240",
    "end": "622149"
  },
  {
    "text": "You at least know what it means. Instead of say,\ndarn, what this mean? What do I have to do? Now you understand\nwhy it's saying",
    "start": "622150",
    "end": "628000"
  },
  {
    "text": "that's a shift reduce error-- shift reduce conflict. And then, you actually\ncan think through this and figure that out.",
    "start": "628000",
    "end": "633830"
  },
  {
    "text": "And that's why this-- learning this was interesting. And then, we move into semantic\nanalysis, did a bunch of checks",
    "start": "633830",
    "end": "644730"
  },
  {
    "start": "641000",
    "end": "641000"
  },
  {
    "text": "to understand the\nbeyond context freeness. That means that we are\nactually putting context into these checks in there,\nunderstand the types,",
    "start": "644730",
    "end": "654990"
  },
  {
    "text": "uniqueness of variables. For control checks, you can do\na bunch of things statically and also dynamic things\nlike array bounds checks",
    "start": "654990",
    "end": "660920"
  },
  {
    "text": "and null pointer checks\nthat can be done. And by doing-- after doing\nthat, we translate it",
    "start": "660920",
    "end": "666660"
  },
  {
    "start": "663000",
    "end": "663000"
  },
  {
    "text": "into intermediate format\nthat basically got rid of both a lot of\nlanguage-specific thing",
    "start": "666660",
    "end": "673470"
  },
  {
    "text": "and also machine--\ndependent part. So you came up with a\nvery simple representation that just basically understand\nthe programming there.",
    "start": "673470",
    "end": "681490"
  },
  {
    "text": "And we basically multiple\nlayers in the high level that has more and more language\nspecifics in the high level IR.",
    "start": "681490",
    "end": "687200"
  },
  {
    "text": "And as we go to lower\nlevel, you eliminate a lot of this\nlanguage-dependent stuff. ",
    "start": "687200",
    "end": "693540"
  },
  {
    "start": "693000",
    "end": "693000"
  },
  {
    "text": "And finally, one before the\nlast we did code optimization. So a key thing\nis, we want to get",
    "start": "693540",
    "end": "701140"
  },
  {
    "text": "as close as possible to what\nsomebody would write by hand. And if we have good\nhand assembler.",
    "start": "701140",
    "end": "706180"
  },
  {
    "text": "And also, we want to\nstart taking advantage of, in this project, exploiting\narchitectural strengths",
    "start": "706180",
    "end": "713829"
  },
  {
    "text": "and weaknesses-- strengths to take advantage,\nand weaknesses you're trying to avoid in there.",
    "start": "713830",
    "end": "720040"
  },
  {
    "text": "And we did a bunch of things. I guess we already\ndo register location. And we are open to do\nother things in this thing.",
    "start": "720040",
    "end": "726040"
  },
  {
    "text": "So good. That's the entire semester\nand in 10 minutes.",
    "start": "726040",
    "end": "737430"
  },
  {
    "text": "So you guys have\nactually amazingly built a good compiler.",
    "start": "737430",
    "end": "743070"
  },
  {
    "text": "And from all\nindications, every group managed to get a\ncompiler working. This is amazing feat given\nhow complex this project is",
    "start": "743070",
    "end": "750029"
  },
  {
    "text": "and knowing this\nnot only project you guys are also working on. And this is really cool. I think this is a\ngreat achievement",
    "start": "750030",
    "end": "755910"
  },
  {
    "text": "to get all those things done. And so, now the fun part. This is optional, but I\nhope everybody participates.",
    "start": "755910",
    "end": "762160"
  },
  {
    "text": "So what you want\nto do is figure out who has the fastest\ncompiler, or at least who produces the fastest\nscores in the compiler.",
    "start": "762160",
    "end": "768750"
  },
  {
    "text": "And some years, people\nhave really surprised me.",
    "start": "768750",
    "end": "773910"
  },
  {
    "text": "And from how well they do. And in fact, one year they\nmanaged to beat GCC03.",
    "start": "773910",
    "end": "780540"
  },
  {
    "start": "777000",
    "end": "777000"
  },
  {
    "text": "And I didn't believe them. I said it can't be done. But after looking at it,\nthey actually did it. And so, I was like, wow.",
    "start": "780540",
    "end": "785940"
  },
  {
    "text": "So people-- I mean,\nI don't think they got any sleep for a few weeks. But besides that,\nI mean, so there's",
    "start": "785940",
    "end": "793740"
  },
  {
    "text": "a lot of history behind it. So what I'm going to do\nis, for the first time we are going to give the\nprogram 12 hours in advance.",
    "start": "793740",
    "end": "801600"
  },
  {
    "text": "The main reason\nis, I want to make sure you get all your\noptimizations working on this program. A lot of times, it is happen\nis, I give it an hour before,",
    "start": "801600",
    "end": "809130"
  },
  {
    "text": "within the beginning\nof the hour. And for most people, some\noptimizations didn't work. And actually, there\nare some years",
    "start": "809130",
    "end": "815280"
  },
  {
    "text": "that the most aggressive\ncompilers didn't really win because they couldn't get\nall the optimizations to work.",
    "start": "815280",
    "end": "820350"
  },
  {
    "text": "They did a lot of things. Whereas the few compilers\nthat did some things that managed to be more robust wins.",
    "start": "820350",
    "end": "827310"
  },
  {
    "text": "And this year, we give--\nbecause of that, I'm going to give 12 hours. But this has a huge temptation.",
    "start": "827310",
    "end": "834260"
  },
  {
    "text": "You look at the code and say,\nhmm, that statement there, it's a random number.",
    "start": "834260",
    "end": "839787"
  },
  {
    "text": "I know what it does. I can actually replace\nit with this crazy thing. And I can get this to\nrun so much faster.",
    "start": "839787",
    "end": "846690"
  },
  {
    "text": "I don't want to see that. I mean, the thing\nis, if you win, then we'll actually examine\nwhat you compile it,",
    "start": "846690",
    "end": "851720"
  },
  {
    "text": "and you explain the code and\ntell us how you achieved that. So don't try to do\ncrazy things to make--",
    "start": "851720",
    "end": "860209"
  },
  {
    "text": "everything you do\nshould be correct-- is provably correct. I mean, of course you are\nto look at a transformation.",
    "start": "860210",
    "end": "866510"
  },
  {
    "text": "But you should be able to\nprove that it's doable. Because there are a lot of\ntimes you look at the program, you say, aha, this\ntransformation is correct.",
    "start": "866510",
    "end": "872240"
  },
  {
    "text": "But there's no way for you\neyeball and you can do that. But you should be\nable to-- the compiler should be able to\nprove everything",
    "start": "872240",
    "end": "878427"
  },
  {
    "text": "it does in fact is correct. So that's critical. So you can't look\nat the function and say, OK, I can do this.",
    "start": "878427",
    "end": "883492"
  },
  {
    "text": "And it will work. That doesn't work. So you had actually say that,\nI go from A to B, and I--",
    "start": "883492",
    "end": "889350"
  },
  {
    "text": "in the compile in the\ncode, not in your head, prove that going from\nA to B is correct. So I don't want\nthat people do that.",
    "start": "889350",
    "end": "896420"
  },
  {
    "text": "So this is on the\n14th at 11:00 AM. And we'll announce\na place where,",
    "start": "896420",
    "end": "901870"
  },
  {
    "text": "and we'll provide\nsome refreshments. So we can have fun. And I think this is a fun\ntime to celebrate everybody's",
    "start": "901870",
    "end": "907570"
  },
  {
    "text": "what they have done. So a little bit on so\nwhat's this all about.",
    "start": "907570",
    "end": "915200"
  },
  {
    "text": "You had, you spend some bunch\nof sleepless nights building a compiler. What did you gain?",
    "start": "915200",
    "end": "920959"
  },
  {
    "start": "920000",
    "end": "920000"
  },
  {
    "text": "I think, after you\nleft this course, at many different levels I\nthink you have gained something.",
    "start": "920960",
    "end": "927590"
  },
  {
    "text": "Most of you will become a-- will be programming for a\nlong time in your careers, and where you end up doing. And I think this whole\ncourse you actually",
    "start": "927590",
    "end": "935120"
  },
  {
    "text": "learn something in that. And there are few things\nyou might want to-- some direct things that we learn\nin this language you can use.",
    "start": "935120",
    "end": "944530"
  },
  {
    "text": "Some of this-- and\npeople you will be working with, things\nlike new architectures, either from designing\narchitectures,",
    "start": "944530",
    "end": "950380"
  },
  {
    "text": "building compilers, this\nlarge group of easiest type end up doing things like that.",
    "start": "950380",
    "end": "956330"
  },
  {
    "text": "And then, I think\nthat will be useful. And very few of you,\nprobably one or two, probably one in this\nclass if I'm lucky",
    "start": "956330",
    "end": "962140"
  },
  {
    "text": "will become a true compiler\nhacker and do a lot of it. But even if you don't do\nthat, I think you learn a lot.",
    "start": "962140",
    "end": "968540"
  },
  {
    "start": "967000",
    "end": "967000"
  },
  {
    "text": "So from an informed\nprogrammer's point of view, every program has\nto use a compiler. And with things\nlike JIT compiler,",
    "start": "968540",
    "end": "974649"
  },
  {
    "text": "things are much even more\ncomplex, more random, a lot of things happen. And for most of you\nuntil now, probably you",
    "start": "974650",
    "end": "981910"
  },
  {
    "text": "treated the compiler\nas a black box. It's there, you give a\nprogram, something comes out, and it runs.",
    "start": "981910",
    "end": "987640"
  },
  {
    "text": "And you had to trust it\nto do the right thing. And of course,\ncompilers are programs.",
    "start": "987640",
    "end": "994600"
  },
  {
    "text": "They have bugs too. And they have many implications\nfor performance, debugging, correctness, that\nfrom now you should",
    "start": "994600",
    "end": "1002759"
  },
  {
    "text": "be able to just not\ntrust this black box to be working all the time\nand trusting it all the time.",
    "start": "1002760",
    "end": "1009130"
  },
  {
    "text": "So what did you\nlearn from 6.035? You learned how\noptimizations work.",
    "start": "1009130",
    "end": "1014570"
  },
  {
    "text": "And you also know\nwhy it didn't work. So assume you did something,\nand you expecting some results. And if it doesn't happen of\nwhat you expected, and you",
    "start": "1014570",
    "end": "1022820"
  },
  {
    "text": "can look at that and say,\naha, this is not to my fault, because I fooled the compiler.",
    "start": "1022820",
    "end": "1027859"
  },
  {
    "text": "Compiler got fooled\nbecause of that. It might be\noptimization problem. It might be a correctness issue. There might be issues in\nthere that [? new-- ?]",
    "start": "1027859",
    "end": "1034790"
  },
  {
    "text": "now because you understand\nwhat the compiler does, can actually decipher that. And another\ninteresting thing is,",
    "start": "1034790",
    "end": "1040490"
  },
  {
    "text": "you should be able to read\noptimized code because you ran through the compiler\nand you're trying to debug.",
    "start": "1040490",
    "end": "1045920"
  },
  {
    "text": "And there's this\ngarbled grou-- a bunch of assembly instructions, and\nyou don't know what's going on.",
    "start": "1045920",
    "end": "1051852"
  },
  {
    "text": "And if you know\nhow to optimize it, you say, aha, this is\nbecause it did comments about expression elimination. I see that. And that is why this\ncode looks like this.",
    "start": "1051852",
    "end": "1058532"
  },
  {
    "text": "And I think for\ndebugging purposes, especially if you're\ndoing low-level debugging, this is very useful.",
    "start": "1058532",
    "end": "1063660"
  },
  {
    "text": "And for example,\nsome of the stuff I have been in more\nrecent is basically",
    "start": "1063660",
    "end": "1070520"
  },
  {
    "text": "trying to reverse\nengineer production code. So you don't have source. You have a binary.",
    "start": "1070520",
    "end": "1077163"
  },
  {
    "text": "And you need to figure out\nwhat's happening in the binary. And they are optimized code. And so, you look at a piece\nof instructions and you say,",
    "start": "1077163",
    "end": "1083000"
  },
  {
    "text": "what kind of code would\nhave produced that? And knowing optimizations,\nyou say, aha, this is probably\nwhat it produced.",
    "start": "1083000",
    "end": "1088820"
  },
  {
    "text": "And then after optimization,\nthis is how it looks like. So knowing all these\noptimizations, what they do, will be really useful\nwhen you're debugging.",
    "start": "1088820",
    "end": "1098290"
  },
  {
    "start": "1096000",
    "end": "1096000"
  },
  {
    "text": "Second thing, a lot of people\nuse this kind of knowledge is doing simple\nlanguage extensions.",
    "start": "1098290",
    "end": "1105159"
  },
  {
    "text": "Most of the time when you have\na large programming project, one of the easiest\nabstraction you can do",
    "start": "1105160",
    "end": "1111100"
  },
  {
    "text": "is do a very simple\nlanguage abstraction. You are assigned some--",
    "start": "1111100",
    "end": "1117220"
  },
  {
    "text": "read some complex input\nout there, XML file, or some very complex--\nyou try to define some kind of interface.",
    "start": "1117220",
    "end": "1124299"
  },
  {
    "text": "You are doing-- you have a\nbunch of very high-level problem",
    "start": "1124300",
    "end": "1131820"
  },
  {
    "text": "that, for example, you are\ntrying to build interface for people to use. And you can say, OK, well,\nI can build a huge library",
    "start": "1131820",
    "end": "1137190"
  },
  {
    "text": "where I can define a\nvery simple language. And the nice thing\nabout doing a language",
    "start": "1137190",
    "end": "1142530"
  },
  {
    "text": "is you can easily add\nnice functionality in here and check for semantics.",
    "start": "1142530",
    "end": "1148440"
  },
  {
    "text": "And you can, instead of\nhaving a language-type thing where if people make mistakes\nit's hard to understand,",
    "start": "1148440",
    "end": "1155117"
  },
  {
    "text": "building a simple language\nyou can actually give people warnings and guide people within\nthe domain you want to be.",
    "start": "1155118",
    "end": "1161630"
  },
  {
    "text": "And you can also help\nwith optimization. So for example, if--",
    "start": "1161630",
    "end": "1167039"
  },
  {
    "text": "compilers show up in\nweird places postscript. It's a printer, but\nit's a language.",
    "start": "1167040",
    "end": "1172340"
  },
  {
    "text": "It has optimization. OpenGL for graphics, XML,\nall those things, I mean,",
    "start": "1172340",
    "end": "1178080"
  },
  {
    "text": "they don't sound like\na programming language. But a lot of this\nactually is a language. There's a compiler and\noptimization, all those tools",
    "start": "1178080",
    "end": "1185480"
  },
  {
    "text": "it comes into play. And a lot of times, my\nfeeling is, as a programmer,",
    "start": "1185480",
    "end": "1191082"
  },
  {
    "text": "at least when I was doing\na lot of programming, every six months I\ncame up with a problem, I said, the best solution\nis trying to come up",
    "start": "1191082",
    "end": "1196760"
  },
  {
    "text": "with a simple language. And I'll do the language. And I'll compile\ninto that language. And because of that, I\ncan have this interface",
    "start": "1196760",
    "end": "1203899"
  },
  {
    "text": "that is lot tighter\nthan anything you could do with\nproviding a Java interface",
    "start": "1203900",
    "end": "1210032"
  },
  {
    "text": "or something like that. Because when you need to do\nthat library, people abuse it, misuse it, do things. And in language,\nyou can actually",
    "start": "1210032",
    "end": "1216650"
  },
  {
    "text": "have much more better\ncontrol, give good feedback, even do nice optimizations\nand stuff like that.",
    "start": "1216650",
    "end": "1224580"
  },
  {
    "text": "And 6.035 actually\nprovided a lot of it. I mean, if you are\ndoing language, you need a, let's\nsay, and a passer,",
    "start": "1224580",
    "end": "1231480"
  },
  {
    "text": "and we actually gave\nyou all those things-- tools, and you learn to do that. And using [INAUDIBLE]\nrepresentations,",
    "start": "1231480",
    "end": "1238289"
  },
  {
    "text": "how to build that-- you\nlearned all those things. So next thing you\nmight do is, if you",
    "start": "1238290",
    "end": "1246450"
  },
  {
    "start": "1246000",
    "end": "1246000"
  },
  {
    "text": "are involved in more aspect of\nE side of computer architecture side, every processor--",
    "start": "1246450",
    "end": "1254250"
  },
  {
    "text": "there are many\ndifferent processors. It's not just Intel\nx86 out there. There are hundreds\nof different process.",
    "start": "1254250",
    "end": "1259930"
  },
  {
    "text": "Your cell phone has one. Your watch has one. If [INAUDIBLE] to\nbuild a process, you need to program it.",
    "start": "1259930",
    "end": "1265000"
  },
  {
    "text": "And we need to\nprogram it, you need some kind of a toolchain,\nprobably C Java, some kind of a compiler,\nor a [INAUDIBLE]",
    "start": "1265000",
    "end": "1272500"
  },
  {
    "text": "that actually maps into that. And it has implications in\nmany different directions. So for example.",
    "start": "1272500",
    "end": "1279179"
  },
  {
    "text": "If you are more from\nthe architecture side. If designing\narchitects, you really",
    "start": "1279180",
    "end": "1284370"
  },
  {
    "text": "need to have understanding\nabout the compiler aspects. Also, every\narchitecture has to have coupled with the\nback-end compiler",
    "start": "1284370",
    "end": "1289950"
  },
  {
    "text": "that people targets\nthat architecture. So I think that's--",
    "start": "1289950",
    "end": "1295077"
  },
  {
    "start": "1291000",
    "end": "1291000"
  },
  {
    "text": "from architect's\npoint of view, there are a lot of cool things\nhappening these days. I mean, I don't\nknow how many of you are interested in that area.",
    "start": "1295078",
    "end": "1303993"
  },
  {
    "text": "And people are looking at many\ndifferent new architectures to build. How, if you are\nbuilding architecture, ever become architect?",
    "start": "1303993",
    "end": "1311169"
  },
  {
    "text": "You have to have a really good\nnotion of what compilers can do and cannot do. So you can actually balance\nof what happens in hardware",
    "start": "1311170",
    "end": "1318250"
  },
  {
    "text": "and what happens in\nsoftware, with compilers is one come in the middle. So a very good\narchitect is somebody--",
    "start": "1318250",
    "end": "1324070"
  },
  {
    "text": "is done by people who really\nunderstand the capabilities and limitations of the compiler. They can say, aha, I can\nget the compiler to do this.",
    "start": "1324070",
    "end": "1330273"
  },
  {
    "text": "I don't have to\ndo it in hardware. This is something that\ncompilers can't do where I will do it in hardware. So that limitation that\npeople understand actually",
    "start": "1330273",
    "end": "1337480"
  },
  {
    "text": "builds very good hardware. So knowing that\nis very important, especially architects.",
    "start": "1337480",
    "end": "1344270"
  },
  {
    "text": "And this is what you learn. [COUGHS] Excuse me. You need to-- you learn\nwhat are the capabilities",
    "start": "1344270",
    "end": "1350929"
  },
  {
    "text": "and limitations of compilers. And you need to you learn\nhow to think like a compiler right there.",
    "start": "1350930",
    "end": "1356409"
  },
  {
    "start": "1355000",
    "end": "1355000"
  },
  {
    "text": "And also, every time you come\nup with a new architecture, you actually have to have\na compiler toolchain.",
    "start": "1356410",
    "end": "1361800"
  },
  {
    "text": "So there'll be even\nthe same amount of people actually building\nthe compiler toolchain. And what that means\nis, every architecture",
    "start": "1361800",
    "end": "1368997"
  },
  {
    "text": "is a little bit different. And how to take advantage\nof that difference is generate the right code,\ngenerate optimal code,",
    "start": "1368997",
    "end": "1374159"
  },
  {
    "text": "stuff like that. And in here, we learn\na lot about that.",
    "start": "1374160",
    "end": "1379440"
  },
  {
    "text": "We learned about\nintermediate representations, doing a lot of different\noptimizations, things",
    "start": "1379440",
    "end": "1385890"
  },
  {
    "text": "like issues like\nassembly interfaces, register location issues,\ncode scheduling issues, calling conventions,\nstuff like that.",
    "start": "1385890",
    "end": "1392580"
  },
  {
    "text": "All those things come into play. So this is, I think, interesting\nwhat do we have to do. ",
    "start": "1392580",
    "end": "1402443"
  },
  {
    "text": "So all those\ninteresting outcomes. I think there's a lot that\nyou guys learned here.",
    "start": "1402443",
    "end": "1407710"
  },
  {
    "text": "And then, finally, if you are\nnot sick of compilers by now--",
    "start": "1407710",
    "end": "1412919"
  },
  {
    "text": "some of you might decide to\nactually become a true compiler hacker. Compilers are very\ninteresting field.",
    "start": "1412920",
    "end": "1418570"
  },
  {
    "text": "It combines things like\ntheory, a lot of things you do,",
    "start": "1418570",
    "end": "1424029"
  },
  {
    "text": "things like if you look at\nlexical analysis in passing,",
    "start": "1424030",
    "end": "1429580"
  },
  {
    "text": "data [? analysis, ?] a lot of\nvery serious theory behind it. And there's a lot of algorithms.",
    "start": "1429580",
    "end": "1435940"
  },
  {
    "text": "Because everything in\ncompiler is basically from algorithmic transformation. And also, there are\nthe aspect, compilers",
    "start": "1435940",
    "end": "1442070"
  },
  {
    "text": "is probably one of the\nmost complex piece of code that you have to implement. So there's a huge amount of\nimplementation system aspect",
    "start": "1442070",
    "end": "1448520"
  },
  {
    "text": "of it. So it really spans the\nentire spectrum in there. ",
    "start": "1448520",
    "end": "1456730"
  },
  {
    "text": "In theory, what\nwe do is basically we have to develop these\ngeneral abstract concepts,",
    "start": "1456730",
    "end": "1462100"
  },
  {
    "text": "and things like prove\ncorrectness, prove optimality. I mean, for example, interesting\nthing about something",
    "start": "1462100",
    "end": "1468760"
  },
  {
    "text": "like Java these days. So when you get a Java piece of\ncode, and you are running it,",
    "start": "1468760",
    "end": "1475780"
  },
  {
    "text": "the people working\non saying, can you actually prove things about it? So instead of\nblindly run it, i.e.",
    "start": "1475780",
    "end": "1482855"
  },
  {
    "text": "You give me a proof\nthat I can actually verify that, in fact, it's\nnot going to do a bad thing. How do you do that?",
    "start": "1482855",
    "end": "1489487"
  },
  {
    "text": "Then think of what's going\nto prove getting code. So code comes to the\nproof of its goodness. It says, I will give\nyou these guarantees.",
    "start": "1489488",
    "end": "1495700"
  },
  {
    "text": "And here's a proof. And you can go and verify. So there are a lot of\nthose kind of things. It's very theoretical\naspect for that.",
    "start": "1495700",
    "end": "1501320"
  },
  {
    "text": "And also, programming\nlanguages also people are exploring lots\nof different ways. I mean, we are used to\nthis imperative paradigm.",
    "start": "1501320",
    "end": "1507790"
  },
  {
    "text": "But there are object-oriented\nprogramming, logic programming, very different paradigms\nto think, OK, it's like--",
    "start": "1507790",
    "end": "1514570"
  },
  {
    "text": "I think 001 kind of\ntouches some of it. So what does it mean,\nthe very abstract concept",
    "start": "1514570",
    "end": "1520660"
  },
  {
    "text": "of programming? And a lot of these\ncome in this theory. And here are some\nexample past theory.",
    "start": "1520660",
    "end": "1526950"
  },
  {
    "text": "And we talked about\nlattices in data flow. There are a lot of\ntheory behind it. In programming language, there\nare people doing language just",
    "start": "1526950",
    "end": "1534040"
  },
  {
    "text": "to evaluate this space in there.  Algorithms-- and most of\nthe things we have learned",
    "start": "1534040",
    "end": "1542710"
  },
  {
    "start": "1539000",
    "end": "1539000"
  },
  {
    "text": "has huge amount of algorithms. And most transformation you\nhave, you want to do something,",
    "start": "1542710",
    "end": "1548169"
  },
  {
    "text": "and you need to have algorithmic\nsolutions to do that. And think of-- we use things\nfrom all over the place-- graph",
    "start": "1548170",
    "end": "1555610"
  },
  {
    "text": "theory, number theory,\nmany different aspects come in-- optimization theory,\nall those things come in",
    "start": "1555610",
    "end": "1561450"
  },
  {
    "text": "in doing a lot of\ncompiler transformation. And also, there's\nanother aspect of it.",
    "start": "1561450",
    "end": "1566770"
  },
  {
    "text": "A lot of times, a lot of\ntransformations are heuristics. Because the theoretical\nsolution is too complicated.",
    "start": "1566770",
    "end": "1572343"
  },
  {
    "text": "So people come up\nwith heuristics. So there's a lot of\nalgorithmic aspect and also a lot of heuristic\ndevelopment aspect.",
    "start": "1572343",
    "end": "1580660"
  },
  {
    "text": "So there's a huge range\nin here for people who are-- there are a lot\nof good compiler people",
    "start": "1580660",
    "end": "1586030"
  },
  {
    "text": "who are really good\nalgorithms people. Things like one reason\noptimization people",
    "start": "1586030",
    "end": "1593070"
  },
  {
    "text": "have been working is called\npartial redundancy elimination. It's like a combination\nof things like dead code",
    "start": "1593070",
    "end": "1598230"
  },
  {
    "text": "elimination, and\ncost and propagation, and [INAUDIBLE] elimination. Can you combine\nall those into one?",
    "start": "1598230",
    "end": "1605257"
  },
  {
    "text": "Register allocation\nby graph coloring. So here's the\n[INAUDIBLE] problem map into really concrete algorithm.",
    "start": "1605257",
    "end": "1611750"
  },
  {
    "text": "Things like most of\nthese architecture have these multimedia\ninstructions-- how do we take advantage,\nhow to compile to that?",
    "start": "1611750",
    "end": "1617370"
  },
  {
    "text": "There's a lot of algorithms\nbehind doing things like that. Come up with a compiler\nto this automatically.",
    "start": "1617370",
    "end": "1624520"
  },
  {
    "text": "And finally, implementation. Compilers are probably one\nof the most complex pieces of software out there.",
    "start": "1624520",
    "end": "1630570"
  },
  {
    "text": "I was fond of saying\nfor a long time, one only saving\ngrace for compilers",
    "start": "1630570",
    "end": "1635640"
  },
  {
    "text": "is it's deterministic. For example, operating\nsystem is deterministic. But JIT compilers\njust completely",
    "start": "1635640",
    "end": "1641507"
  },
  {
    "text": "threw that out, basically. Now you-- compilers-- they\nare not even deterministic. So it's complex.",
    "start": "1641507",
    "end": "1646520"
  },
  {
    "text": "And it is very deterministic. You can replay things\nand get the same results. But JIT compilers, that\nentire concept is gone.",
    "start": "1646520",
    "end": "1652490"
  },
  {
    "text": "And so, we are basically-- every problem of developing\na large piece of software",
    "start": "1652490",
    "end": "1659390"
  },
  {
    "text": "is in here. And any reasonable compiler\nhas probably millions of lines of code.",
    "start": "1659390",
    "end": "1664790"
  },
  {
    "text": "And the worst is,\nmost of other-- for example, operating\nsystem comes in nice modules.",
    "start": "1664790",
    "end": "1670309"
  },
  {
    "text": "Compilers, a lot of times,\none gigantic big beast. It's just all has to\nwork with very much more closer approximation then.",
    "start": "1670310",
    "end": "1677070"
  },
  {
    "text": "Because in operating\nsystem, there are very well-defined\ninterfaces. Compiler is very hard. It's the same piece of code\nthat we keep working on.",
    "start": "1677070",
    "end": "1685309"
  },
  {
    "text": "So compilers in some sense has\na huge systems problem in here. JIT compilers-- compilers\nare entire in, I say--",
    "start": "1685310",
    "end": "1697730"
  },
  {
    "text": "one thing I say is the\nmost lucrative compiler business in industry is\nactually all the databases.",
    "start": "1697730",
    "end": "1705440"
  },
  {
    "text": "What's the database? It's basically BigQuery\noptimization engine. And also, there's some\noperating system aspect of it",
    "start": "1705440",
    "end": "1712490"
  },
  {
    "text": "to get a consistency,\npersistency. And there are a lot of\nthings you have to get.",
    "start": "1712490",
    "end": "1717870"
  },
  {
    "text": "But one large aspect is\na query optimization. So it's a compiler. A lot of-- if you\ngo to Oracle, it's",
    "start": "1717870",
    "end": "1724190"
  },
  {
    "text": "a large group of compiler-type\npeople working on that. PostScript [INAUDIBLE],,\nit's a compiler.",
    "start": "1724190",
    "end": "1731330"
  },
  {
    "text": "I mean, every HP's\nprinter division has a bunch of\ncompiler guys trying to figure out what's the best\nway to get from postscript",
    "start": "1731330",
    "end": "1738049"
  },
  {
    "text": "[INAUDIBLE] drive. It's a compiler. So there are a lot of places-- XML parsing, XML\nprocessing, a lot of things",
    "start": "1738050",
    "end": "1744440"
  },
  {
    "text": "have very compiler-oriented. So if thinking like\na compiler hacker is very interesting\nin these things.",
    "start": "1744440",
    "end": "1751440"
  },
  {
    "text": "So to be a compiler hacker,\nwhat did you learn in 6.035?",
    "start": "1751440",
    "end": "1756559"
  },
  {
    "text": "Basically everything. I mean, everything we did is\nalso put in this mainframe.",
    "start": "1756560",
    "end": "1762120"
  },
  {
    "text": "So yeah, I have about\n10 minutes before we",
    "start": "1762120",
    "end": "1767900"
  },
  {
    "start": "1764000",
    "end": "1764000"
  },
  {
    "text": "do the [INAUDIBLE] review. And in that 10 minutes,\nI want to just switch gears a little bit and\ntalk about current compiler",
    "start": "1767900",
    "end": "1775645"
  },
  {
    "text": "research. So this is not going\nto be in the test. So don't worry about it.",
    "start": "1775645",
    "end": "1781070"
  },
  {
    "text": "And don't [INAUDIBLE]. So I will go through\nsomething very far. So one thing I did was,\nif you're interested, I added a list of places where\nyou find the most up-to-date",
    "start": "1781070",
    "end": "1790610"
  },
  {
    "start": "1784000",
    "end": "1784000"
  },
  {
    "text": "compiler work. Most of them are in conference\nproceedings because we--",
    "start": "1790610",
    "end": "1795650"
  },
  {
    "text": "most compiler people\ndon't publish in journals. With some areas,\nit's all journals. And I listed\ndifferent proceedings.",
    "start": "1795650",
    "end": "1801210"
  },
  {
    "text": "So if you are really\ninterested, you can-- some of these journals\navailable on the web. You can search for it. I can look it up.",
    "start": "1801210",
    "end": "1807863"
  },
  {
    "text": "This is not exhaustive list. And this is some-- and depending\non where your emphasis is, there are-- it's a\nvery broad field.",
    "start": "1807863",
    "end": "1813590"
  },
  {
    "text": "There are many, many other\nconferences, and journals, and places.",
    "start": "1813590",
    "end": "1819116"
  },
  {
    "text": "But here is a subset. So what I want to do is\nswitch from doing a class",
    "start": "1819116",
    "end": "1831550"
  },
  {
    "text": "to give you a feel for\nwhat's happening at research. So I'm going to\ntalk about a project that I'm doing in my group.",
    "start": "1831550",
    "end": "1836755"
  },
  {
    "text": "There are a bunch of people\nout there setting up, they're actually\nworking on this project. So I give you a very quick\nglimpse of what it's like.",
    "start": "1836755",
    "end": "1846590"
  },
  {
    "text": "So one thing I'm\nbuilding in my group that it's this\nreally exciting thing is this new language and\ncompiler for streaming domain.",
    "start": "1846590",
    "end": "1854890"
  },
  {
    "text": "Streaming means everything that\nfrom audio, video, everything",
    "start": "1854890",
    "end": "1860320"
  },
  {
    "text": "in cell phone, lot of\napplications today, they have data\nstreaming through that, and how do we\nactually program it.",
    "start": "1860320",
    "end": "1866769"
  },
  {
    "start": "1866000",
    "end": "1866000"
  },
  {
    "text": "So we have a language\ncalled StreamIt. And it provides a very high\nlevel abstraction for streams.",
    "start": "1866770",
    "end": "1873140"
  },
  {
    "text": "So a lot of\ninteresting things that drove us was mostly\nstreaming applications",
    "start": "1873140",
    "end": "1878550"
  },
  {
    "text": "are written in\nnice block, saying the block does something,\nfeed their next block. I mean, if you look\nat the DSP class,",
    "start": "1878550",
    "end": "1885250"
  },
  {
    "text": "it's all in block diagrams. And the minute you write\nC, the entire blocks vanishes all over the place. And then, it's a\nvery ugly mess of C.",
    "start": "1885250",
    "end": "1891723"
  },
  {
    "text": "And so we figured\nout, OK, how can you actually have a\nlanguage that you actually have that representation? So another thing is,\nminute you go into language",
    "start": "1891723",
    "end": "1899620"
  },
  {
    "text": "like C, those languages\nvery hard to analyze. Because everything\nin single memory,",
    "start": "1899620",
    "end": "1905980"
  },
  {
    "text": "everything in\nsingle control flow. All that nice\nrepresentation is gone. So in this language, what we\nhave done is create a-- still",
    "start": "1905980",
    "end": "1913330"
  },
  {
    "text": "maintain that representation\nthat gives us a nice ability to do a bunch of analysis.",
    "start": "1913330",
    "end": "1919610"
  },
  {
    "text": "And then we build\na compiler that to understand all those\nthings and actually can do really cool amount\nof transformation.",
    "start": "1919610",
    "end": "1925880"
  },
  {
    "text": "So let me give a little bit\nof a view of the language. It's, like, kind of like Java.",
    "start": "1925880",
    "end": "1931640"
  },
  {
    "start": "1927000",
    "end": "1927000"
  },
  {
    "text": "So here's a filter. Here's a computer in it. And it has what we\ncall init function.",
    "start": "1931640",
    "end": "1937100"
  },
  {
    "text": "We have in the filter starts, it\njust calculate some local ones. And then, there's a thing\ncalled a work function",
    "start": "1937100",
    "end": "1942350"
  },
  {
    "text": "that keep executing forever. So what happens is\nthere's input data coming.",
    "start": "1942350",
    "end": "1947570"
  },
  {
    "text": "This work function says,\nI look at two, peak two. I take-- I remove\none from the input",
    "start": "1947570",
    "end": "1953030"
  },
  {
    "text": "and produce one into the output. So every invocation of that,\nI look at two elements,",
    "start": "1953030",
    "end": "1958490"
  },
  {
    "text": "I produce one and consume one. And the next invocation\nI will go up. So I keep doing this forever.",
    "start": "1958490",
    "end": "1964980"
  },
  {
    "text": "And so, that's very\nrepresentative of a lot of stream calculation. Same thing keep\nhappening forever.",
    "start": "1964980",
    "end": "1970650"
  },
  {
    "text": "So this is only one filter. And then, you can\ncombine these filters from pipelines and parallelism\nfor what we call split joints.",
    "start": "1970650",
    "end": "1978980"
  },
  {
    "text": "And then there's a feedback\nloop when they have feedback. So by doing this, you can build\nthis very complex higher larger",
    "start": "1978980",
    "end": "1985409"
  },
  {
    "start": "1980000",
    "end": "1980000"
  },
  {
    "text": "graphs. So here's a very simple\nStreamIt program. The only thing to observe\nhere, the important thing",
    "start": "1985410",
    "end": "1992270"
  },
  {
    "start": "1986000",
    "end": "1986000"
  },
  {
    "text": "is, you have this graph\nrepresentation and a text representation, we\nare almost one-to-one. You can look at a text\nand almost imagine",
    "start": "1992270",
    "end": "1998150"
  },
  {
    "text": "what the graph is like. And what it is, is\nyou build this graph. And you're instantiating\nthese nodes into the graph.",
    "start": "1998150",
    "end": "2005350"
  },
  {
    "text": "And then after, this program\nbasically will build the graph. And then, when you say run,\nit keep running forever.",
    "start": "2005350",
    "end": "2010780"
  },
  {
    "text": "So it's not-- what\nthis program does is, the running of\nthis program basically builds this entire graph.",
    "start": "2010780",
    "end": "2015962"
  },
  {
    "text": "And you can build\nvery large graph. So there are some examples of\na graph of FM radio, Vocoder",
    "start": "2015962",
    "end": "2024070"
  },
  {
    "start": "2022000",
    "end": "2022000"
  },
  {
    "text": "that basically process-- or separate amplitude\nand frequency of voice and do different\nprocessing in there.",
    "start": "2024070",
    "end": "2030970"
  },
  {
    "start": "2030000",
    "end": "2030000"
  },
  {
    "text": "There's a GSM decoder\nin a cell phone. So these complicated graphs. Each node is doing a\nbunch of computation.",
    "start": "2030970",
    "end": "2039020"
  },
  {
    "start": "2038000",
    "end": "2038000"
  },
  {
    "text": "And this is 3G, this\nnext phone in there.",
    "start": "2039020",
    "end": "2047070"
  },
  {
    "start": "2045000",
    "end": "2045000"
  },
  {
    "text": "And so, we can build this graph. So the next thing\nI want to do is talk about some kind of\noptimization we can do that.",
    "start": "2047070",
    "end": "2052739"
  },
  {
    "text": "So a lot of these are\nfor DSP application. So one thing we--",
    "start": "2052739",
    "end": "2057860"
  },
  {
    "text": "compilers do is we basically\nlook at what people do by hand and automate it. So what a good compiler does is\nlook at what assembly program",
    "start": "2057860",
    "end": "2066290"
  },
  {
    "text": "is going to do by hand,\ntrying to abstract it out, and automate it. So in here what we\ndid was we looked at what DSP engineers do by\nhand and try to automate it.",
    "start": "2066290",
    "end": "2074789"
  },
  {
    "text": "So one thing is DSP\nengineer look at is what we call linear\nstate space filters.",
    "start": "2074790",
    "end": "2080310"
  },
  {
    "text": "These are the ones that\nare input are basically linear functions, or outputs\nare linear function of inputs",
    "start": "2080310",
    "end": "2086779"
  },
  {
    "text": "and some kind of internal state. And the state also\nkeeps changing from a linear function.",
    "start": "2086780",
    "end": "2092300"
  },
  {
    "text": "So in the DSP community,\nthere's a lot of math around it. And what we try to do is come\nup with a way to automate that.",
    "start": "2092300",
    "end": "2097580"
  },
  {
    "text": "So many DSP filters, programs\nfit into this category.",
    "start": "2097580",
    "end": "2103110"
  },
  {
    "text": "So what that means is that\neach block is represented by-- if you have input coming\nin and some local state,",
    "start": "2103110",
    "end": "2109080"
  },
  {
    "text": "and local state is\nupdated using the inputs and the previous state, and\noutput is also calculated",
    "start": "2109080",
    "end": "2115250"
  },
  {
    "text": "using the inputs and the state. And you have some matrices A, B,\nC, D defining what's going on.",
    "start": "2115250",
    "end": "2121850"
  },
  {
    "text": "So interesting thing\nhere is, assume you have program in there.",
    "start": "2121850",
    "end": "2128150"
  },
  {
    "text": "We came up with here's\na representation of that program in this state.",
    "start": "2128150",
    "end": "2133690"
  },
  {
    "text": "So A, B, C, D, you have some\nconcrete values in here. And we came up with the\nlinear data for analysis",
    "start": "2133690",
    "end": "2139340"
  },
  {
    "text": "to look at the program\nand get to the right. So you write-- some would\nwrite this, something looking like that left.",
    "start": "2139340",
    "end": "2144770"
  },
  {
    "text": "And we automatically do\nthe data for analysis. And you can easily build\nthe data from equations and do that. And we end up in this right.",
    "start": "2144770",
    "end": "2151130"
  },
  {
    "text": "So the nice thing is, now when\nyou get to this representation, so you learn different\nrepresentation. We learn one interior\nrepresentation",
    "start": "2151130",
    "end": "2158150"
  },
  {
    "text": "in this program-- in this class. And here, we have using\na different [INAUDIBLE] representation. It's basically four\nmatrices representing",
    "start": "2158150",
    "end": "2164330"
  },
  {
    "text": "each of these filters. And the nice thing about\nthat is, when you have that you can do a lot of\ninteresting optimizations",
    "start": "2164330",
    "end": "2170043"
  },
  {
    "start": "2167000",
    "end": "2167000"
  },
  {
    "text": "using that representation. I will show on and show\nresults for two others.",
    "start": "2170043",
    "end": "2177510"
  },
  {
    "start": "2177000",
    "end": "2177000"
  },
  {
    "text": "So one thing you can do is\ncombine adjacent filters. So assume the filter one is--",
    "start": "2177510",
    "end": "2182750"
  },
  {
    "text": "to simplify, I only\nuse D. So output of the first filter, output is\nmatrix multiplied by the input.",
    "start": "2182750",
    "end": "2190579"
  },
  {
    "text": "And the second filter\nhas the same thing. One thing we can do is,\nso the output of both",
    "start": "2190580",
    "end": "2196130"
  },
  {
    "text": "is D2 time D1 time mu. And you can calculate this\na priory at compile time",
    "start": "2196130",
    "end": "2202220"
  },
  {
    "text": "and come up with a combined\nfilter basically just do that. So instead of doing these two\nmatrix as separate things,",
    "start": "2202220",
    "end": "2208930"
  },
  {
    "text": "I can just do the\nmatrix multiplication. Because D1 and D2 are\nbasically constants. It's in the program. And I will do that matrix\nmultiplication once",
    "start": "2208930",
    "end": "2215970"
  },
  {
    "text": "and do that. So the nice thing\nabout here is, so if we have these two\nfilters like that,",
    "start": "2215970",
    "end": "2221160"
  },
  {
    "start": "2217000",
    "end": "2217000"
  },
  {
    "text": "and I can come up with\nthis combined filter. And in the first\none, for each output we can have to do\neight floating point",
    "start": "2221160",
    "end": "2227340"
  },
  {
    "text": "operations to get the output. The second one you only\nneed do six operations, because some of them are done\nonce at the compile time.",
    "start": "2227340",
    "end": "2233339"
  },
  {
    "text": "So I reduce the amount of\noperations you need to do. So by doing that, I can really\neliminate a lot of computation.",
    "start": "2233340",
    "end": "2239500"
  },
  {
    "text": "So this is an\ninteresting optimization. And actually, if you\ndo a lot-- the first--",
    "start": "2239500",
    "end": "2247320"
  },
  {
    "text": "the simulator basically\neliminates one value. So it's only looking\nat one result. If the decimator eliminate a\nlot of values and only look at--",
    "start": "2247320",
    "end": "2253766"
  },
  {
    "text": "because a lot of times, in DSP\nalgorithm, that's what they do, you down-sample. You only look at\nevery 100th value.",
    "start": "2253767",
    "end": "2259871"
  },
  {
    "text": "If you go, you can\nalmost eliminate 75% of all the computation. So neat.",
    "start": "2259872",
    "end": "2265285"
  },
  {
    "text": "So you can do\noptimization, you get rid of huge amount of computation. So in fact, for a\nbunch of programs",
    "start": "2265285",
    "end": "2271050"
  },
  {
    "text": "we looked at, so the\nfirst line is show-- the yellow, the\nlight blue line shows",
    "start": "2271050",
    "end": "2280180"
  },
  {
    "text": "what the results of the\noptimizer I talk about. So most times, you can eliminate\n80% of the computation.",
    "start": "2280180",
    "end": "2286760"
  },
  {
    "text": "So 80% is huge. Basically, at the end of the\nday, most of the computation is gone.",
    "start": "2286760",
    "end": "2291820"
  },
  {
    "text": "So there are two other\noptimizations we did. The second one here is\nbasically-- a lot of in DSP,",
    "start": "2291820",
    "end": "2297790"
  },
  {
    "text": "people go from free-- time down to frequency\ndomain manually. We said, why don't we do it--",
    "start": "2297790",
    "end": "2303340"
  },
  {
    "text": "why don't we automate that? So we look at the\nprogram and said, aha, instead of doing all\nthis thing in time domain, we'll automatically go\nto frequency domain,",
    "start": "2303340",
    "end": "2309820"
  },
  {
    "start": "2305000",
    "end": "2305000"
  },
  {
    "text": "do a simplified calculation,\nand come back to time domain. And it's a very, very tedious\nprocess to do it manually.",
    "start": "2309820",
    "end": "2315579"
  },
  {
    "text": "Because a lot of these matrices\nhave to be transformed. A lot of weird [INAUDIBLE]\nconditions has to be met. It's all done automatically\nnicely in the compiler.",
    "start": "2315580",
    "end": "2322235"
  },
  {
    "text": "And we get a huge\namount of benefit. And then, we actually\nhave a programming--",
    "start": "2322235",
    "end": "2328597"
  },
  {
    "text": "we have an algorithm to select\nwhat's the best transformations to do and get a very good\nperformance [? move. ?]",
    "start": "2328597",
    "end": "2333829"
  },
  {
    "text": "So here's the kind of\nthings we do today. So for this very\nhigh-level new domain,",
    "start": "2333830",
    "end": "2339220"
  },
  {
    "text": "we are building a compiler\nthat basically trying to automate the DSP engineer. Because right now, this\nis all done by some guy",
    "start": "2339220",
    "end": "2345760"
  },
  {
    "text": "by hand, basically,\nfor each algorithm. So we are trying\nto automate that.",
    "start": "2345760",
    "end": "2352300"
  },
  {
    "text": "So this kind of gives\nyou a feel for what goes a few floors up here.",
    "start": "2352300",
    "end": "2358990"
  },
  {
    "text": "There are some people\nhere who are basically working on these\nprojects as [INAUDIBLE].. And if anybody else is\ninterested in working",
    "start": "2358990",
    "end": "2366430"
  },
  {
    "text": "in these kind of projects as\n[INAUDIBLE] at some point, send me mail.",
    "start": "2366430",
    "end": "2372710"
  },
  {
    "start": "2372710",
    "end": "2374000"
  }
]