[
  {
    "text": "The following\ncontent is provided by MIT OpenCourseWare under\na Creative Commons license.",
    "start": "0",
    "end": "6120"
  },
  {
    "text": "Additional information\nabout our license and MIT OpenCourseWare\nin general is available at ocw.mit.edu.",
    "start": "6120",
    "end": "11930"
  },
  {
    "text": " PROFESSOR: This\nmorning's SIAM News.",
    "start": "11930",
    "end": "18120"
  },
  {
    "text": " Well, it's an\narticle on something that's not totally up to date\nbecause it's a method that",
    "start": "18120",
    "end": "26210"
  },
  {
    "text": "was developed 50 years ago\ncalled alternating direction and it was exactly\ndeveloped-- first",
    "start": "26210",
    "end": "32950"
  },
  {
    "text": "you did an iteration\nin the x direction.",
    "start": "32950",
    "end": "39330"
  },
  {
    "text": "Of course, we're\ntridiagonal along every row, we're one-dimensional.",
    "start": "39330",
    "end": "44460"
  },
  {
    "text": "And then the second\nhalf-step is an iteration",
    "start": "44460",
    "end": "49809"
  },
  {
    "text": "in the y direction. Again, tridiagonal, so\nthe iteration's very fast. You flip-- alternating direction\ndescribes it perfectly.",
    "start": "49810",
    "end": "58200"
  },
  {
    "text": "And that method is still used. It got developed in the oil\nreservoir simulation world.",
    "start": "58200",
    "end": "65449"
  },
  {
    "text": "That is, Houston. And the article\nsays the evolution",
    "start": "65450",
    "end": "72740"
  },
  {
    "text": "of techniques for oil reservoir\nsimulation has continued.",
    "start": "72740",
    "end": "78189"
  },
  {
    "text": "And then mentions 3-- so it went\nfrom this alternating direction",
    "start": "78190",
    "end": "84210"
  },
  {
    "text": "to line overrelaxation,\nLSOR, overrelaxation,",
    "start": "84210",
    "end": "92430"
  },
  {
    "text": "and I only spoke\nbriefly about that. What's that word line mean?",
    "start": "92430",
    "end": "97600"
  },
  {
    "text": "That means that we're\ntaking whole rows at once, working with blocks.",
    "start": "97600",
    "end": "103520"
  },
  {
    "text": "And I'll add some\nnotes about that today. So that was the\nnext step, line SOR.",
    "start": "103520",
    "end": "112159"
  },
  {
    "text": "Then to the Newton-Krylov\nschemes, that's what's coming, Krylov, Conjugate gradients,\nwith ILU type preconditioners.",
    "start": "112160",
    "end": "123439"
  },
  {
    "text": "So again, we're talking\nabout preconditioners and one important choice\nis this incomplete LU.",
    "start": "123440",
    "end": "133120"
  },
  {
    "text": "So notes on Gauss-Seidel and I\nshould maybe add incomplete LU.",
    "start": "133120",
    "end": "139970"
  },
  {
    "text": "By the way, experiments\nbadly needed here too. Because incomplete LU has\nthis tolerance and as you",
    "start": "139970",
    "end": "152090"
  },
  {
    "text": "move the tolerance you\nget closer or far away",
    "start": "152090",
    "end": "157470"
  },
  {
    "text": "to the exact L and U, but\nyou get faster or slower.",
    "start": "157470",
    "end": "163530"
  },
  {
    "text": "So what's the balance? What's the right tolerance? How do these methods\ncompare-- and overall,",
    "start": "163530",
    "end": "171620"
  },
  {
    "text": "how do these iterative methods\nthat we're speaking about compare with these\ndirect methods?",
    "start": "171620",
    "end": "178390"
  },
  {
    "text": "So we really are in this new\nchapter, solving large systems,",
    "start": "178390",
    "end": "184670"
  },
  {
    "text": "facing a whole lot of\npossible new experiments.",
    "start": "184670",
    "end": "190080"
  },
  {
    "text": "So just to continue the history\nor the future as described in SIAM News, so there was\nalternating direction, line",
    "start": "190080",
    "end": "199230"
  },
  {
    "text": "SOR. Then to Krylov schemes with ILU\npreconditioners in use today.",
    "start": "199230",
    "end": "208700"
  },
  {
    "text": "So this is a big use area. And the multiscale, multigrid\nsolvers that are quote,",
    "start": "208700",
    "end": "218170"
  },
  {
    "text": "now starting to come of age. So that's a third topic for\ntoday's lecture, multigrid.",
    "start": "218170",
    "end": "227180"
  },
  {
    "text": "That-- of course, it's\nbeen around for some time,",
    "start": "227180",
    "end": "232299"
  },
  {
    "text": "but it involved,\nespecially at the start, more effort in programming.",
    "start": "232300",
    "end": "241420"
  },
  {
    "text": " So it didn't quickly-- I\nmean, it gave great results",
    "start": "241420",
    "end": "249459"
  },
  {
    "text": "on model problems. On other problems,\ntoo, but still",
    "start": "249460",
    "end": "255290"
  },
  {
    "text": "it kind of hasn't yet,\nbut is penetrating into production code,\nwhere the oil reservoir",
    "start": "255290",
    "end": "263430"
  },
  {
    "text": "industry or other big\nindustries would use it. So here you see, really, a\npretty fair picture of where we",
    "start": "263430",
    "end": "273520"
  },
  {
    "text": "are today with large solvers. These are very important.",
    "start": "273520",
    "end": "279759"
  },
  {
    "text": "Minimum degree-- if the\nsize is not overwhelming,",
    "start": "279760",
    "end": "284830"
  },
  {
    "text": "direct methods are going\nto be right up there. And these are the\npure iterations,",
    "start": "284830",
    "end": "293850"
  },
  {
    "text": "stationary iterations that, with\nthis idea, this incomplete LU",
    "start": "293850",
    "end": "301050"
  },
  {
    "text": "idea, get pretty good. But the formula's\nalways simple there.",
    "start": "301050",
    "end": "307410"
  },
  {
    "text": "The new x comes from the old\nx by the same iterations.",
    "start": "307410",
    "end": "313730"
  },
  {
    "text": "Whereas, if we use\nthe ideas there as preconditioners and look\nto see-- so the point was,",
    "start": "313730",
    "end": "325060"
  },
  {
    "text": "and I'll repeat it again,\nthat Gauss-Seidel and Jacobi, the standard iterations,\nwere quite satisfactory",
    "start": "325060",
    "end": "332760"
  },
  {
    "text": "on high frequencies. They damped those out\nquite well in the error,",
    "start": "332760",
    "end": "337960"
  },
  {
    "text": "but they don't tackle the low\nfrequency, the smooth part of the error, very efficiently.",
    "start": "337960",
    "end": "344560"
  },
  {
    "text": "And that's what multigrid\ndoes incredibly well, so it's a nice mixture of the two.",
    "start": "344560",
    "end": "351890"
  },
  {
    "text": "These are the smoothers,\nthis is the change of scale, change of grid that's\ncoming now and will come.",
    "start": "351890",
    "end": "360169"
  },
  {
    "text": "So all this will be my subject\nfor this week and next,",
    "start": "360170",
    "end": "366190"
  },
  {
    "text": "prior to spring break. And I think you will have enough\nto go on to do experiments.",
    "start": "366190",
    "end": "373390"
  },
  {
    "text": "It could be highly interesting. OK, so that's the\nSIAM News report.",
    "start": "373390",
    "end": "380810"
  },
  {
    "text": "OK, what do I want to\nsay about minimum degree?",
    "start": "380810",
    "end": "386910"
  },
  {
    "text": "And more will go on the web. Just a few more notes about what\nwe did on Monday after class.",
    "start": "386910",
    "end": "397100"
  },
  {
    "text": "If you take a matrix like\nthat, you take a matrix",
    "start": "397100",
    "end": "403710"
  },
  {
    "text": "and-- how is it described\nin sparse format? Sparse format you can\nsee-- normally you",
    "start": "403710",
    "end": "412290"
  },
  {
    "text": "don't have to see\nit, it's usually inside the sparse\nMATLAB, but if you",
    "start": "412290",
    "end": "418229"
  },
  {
    "text": "want to see what's happening,\nyou could ask for i, j, and s.",
    "start": "418230",
    "end": "423970"
  },
  {
    "text": "Now what are those? What will that\nproduce? i will be",
    "start": "423970",
    "end": "430660"
  },
  {
    "text": "the list of nonzeros,\nthe list of the row numbers of the nonzeros.",
    "start": "430660",
    "end": "436420"
  },
  {
    "text": "So i will be-- maybe I'll write\nit as a row so I'm transposing,",
    "start": "436420",
    "end": "443060"
  },
  {
    "text": "So the row numbers would\nbe row 1, row 2, not row 3.",
    "start": "443060",
    "end": "448820"
  },
  {
    "text": "Row 1, 2, 3, row 2, 3. ",
    "start": "448820",
    "end": "455319"
  },
  {
    "text": "The column numbers\nwould be-- these are going to be\nthe pairs (i, j).",
    "start": "455320",
    "end": "462040"
  },
  {
    "text": "So that's column 1 twice,\ncolumn 2 three times.",
    "start": "462040",
    "end": "468010"
  },
  {
    "text": "Column 3 twice.  And what's s? s is the actual\nnumbers in position (i, j),",
    "start": "468010",
    "end": "478440"
  },
  {
    "text": "is the number 2. In position (2, 1) is\nthe number minus 1.",
    "start": "478440",
    "end": "484240"
  },
  {
    "text": "So those numbers, minus 1,\n2, minus 1 is that column. And then minus 1,\n2 is that column.",
    "start": "484240",
    "end": "492810"
  },
  {
    "text": "So of course, we've got all\nthe information in the matrix. We know every nonzero position\nand we know what that entry is.",
    "start": "492810",
    "end": "503190"
  },
  {
    "text": "And of course, our matrices\nare much bigger than this one, but already we can see\none useful point-- point",
    "start": "503190",
    "end": "515370"
  },
  {
    "text": "being that key word-- that the\ncolumn numbers, this-- I mean,",
    "start": "515370",
    "end": "521169"
  },
  {
    "text": "imagine we have a large\nmatrix, so this j is not very efficiently recorded\nhere because what's j?",
    "start": "521170",
    "end": "532610"
  },
  {
    "text": "We're looking at nonzeros\na column at a time, so of course, we'll have a few\nones for the nonzeros in column",
    "start": "532610",
    "end": "540089"
  },
  {
    "text": "1 and then some twos and then\nsome threes and some fours,",
    "start": "540090",
    "end": "547340"
  },
  {
    "text": "but all this row is-- the\nreal information in that row",
    "start": "547340",
    "end": "554650"
  },
  {
    "text": "is a pointer to--\nin other words,",
    "start": "554650",
    "end": "560290"
  },
  {
    "text": "I don't have to\nrepeat 2 three times. So really, if I put inside\nhere a compressed version",
    "start": "560290",
    "end": "570780"
  },
  {
    "text": "of j, a pointer, would be a\nshort factor that just has a 1.",
    "start": "570780",
    "end": "576720"
  },
  {
    "text": "It says look in position 1\nfor the start of column 1.",
    "start": "576720",
    "end": "582860"
  },
  {
    "text": "Then a 3-- see, I didn't\nneed that because that just",
    "start": "582860",
    "end": "588610"
  },
  {
    "text": "continued column 1. That just repeated\nthe j I already had. But this tells me that\nin the third position",
    "start": "588610",
    "end": "597699"
  },
  {
    "text": "I start down column 2. And this would tell me that\nin position number 4, 5, 6,",
    "start": "597700",
    "end": "604230"
  },
  {
    "text": "I guess, I start down column 3.",
    "start": "604230",
    "end": "609540"
  },
  {
    "text": "You see the point of that 6. That 6 picks out--\nyes-- 1, 2, 3, 4, 5,",
    "start": "609540",
    "end": "615670"
  },
  {
    "text": "the sixth row number\nis the beginning of information on column 3.",
    "start": "615670",
    "end": "622670"
  },
  {
    "text": "And then it's\nconventional to have a pointer, 8, to say finish.",
    "start": "622670",
    "end": "631010"
  },
  {
    "text": "So that's pointing\nto empty space.",
    "start": "631010",
    "end": "636100"
  },
  {
    "text": "So in other words, j got\ncompressed to 1, 3, 6, 8 and in a large problem it\nwould get seriously compressed.",
    "start": "636100",
    "end": "644690"
  },
  {
    "text": "OK, so that's the form in\nwhich the code keeps the matrix",
    "start": "644690",
    "end": "654800"
  },
  {
    "text": "and does the reorderings.",
    "start": "654800",
    "end": "660490"
  },
  {
    "text": "Let me just mention that\nthe opposite of this would create the matrix\nout of these i, j, s.",
    "start": "660490",
    "end": "669630"
  },
  {
    "text": "What command would that be? You could create the matrix\nA out of-- the command sparse",
    "start": "669630",
    "end": "678450"
  },
  {
    "text": "would be good. Sparse of the inputs,\nnow, would be i, j, s.",
    "start": "678450",
    "end": "685110"
  },
  {
    "text": "If I input i, j, and s then\nthat lab creates a matrix.",
    "start": "685110",
    "end": "691670"
  },
  {
    "text": "And sometimes I\nmay want to include the m and n, the shape of the\nmatrix, as further parameters,",
    "start": "691670",
    "end": "701970"
  },
  {
    "text": "but actually here\nI wouldn't have to. So this is the opposite\ncommand from this one",
    "start": "701970",
    "end": "708970"
  },
  {
    "text": "that we're interested in. You can imagine. Suppose by using minimum\ndegree or some other decision,",
    "start": "708970",
    "end": "724250"
  },
  {
    "text": "I've eliminated up\nto a certain point and I want to put the remaining\ncolumns in a different order.",
    "start": "724250",
    "end": "731420"
  },
  {
    "text": "I can do that just by\nplaying with the pointers. So it's a very efficient\nstructure for sparse matrices.",
    "start": "731420",
    "end": "741130"
  },
  {
    "start": "741130",
    "end": "747690"
  },
  {
    "text": "And then comes the question,\nOK, what's the good order? ",
    "start": "747690",
    "end": "754269"
  },
  {
    "text": "I was surprised to realize\nhow open a problem that still is, even from the expert\nwho's developing the key code.",
    "start": "754270",
    "end": "767720"
  },
  {
    "text": " So approximate minimum degree,\nof course, by that word",
    "start": "767720",
    "end": "776339"
  },
  {
    "text": "you see that it allows freedom. There are also\ndecisions to be made",
    "start": "776340",
    "end": "782140"
  },
  {
    "text": "when minimum degree is a\ntie between several nodes, as it commonly is.",
    "start": "782140",
    "end": "788080"
  },
  {
    "text": "And it's rather nice to\nget a MATLAB movie that shows the order\nin which nodes are",
    "start": "788080",
    "end": "798260"
  },
  {
    "text": "eliminated, edges are removed\nfrom the graph, from the mesh.",
    "start": "798260",
    "end": "804670"
  },
  {
    "text": "You'll see that. All right, I'm ready to go\nahead now to some comment",
    "start": "804670",
    "end": "810899"
  },
  {
    "text": "on Gauss-Seidel. Maybe I'll put that here. In fact, maybe I'll just\ntake the same matrix.",
    "start": "810900",
    "end": "817779"
  },
  {
    "text": "So now I want to remember,\nwhat is the Gauss-Seidel method",
    "start": "817780",
    "end": "823880"
  },
  {
    "text": "for A*x equal b. What's the iteration now? And again, A will be the same:\n2, minus 1, zero; minus 1,",
    "start": "823880",
    "end": "832230"
  },
  {
    "text": "2, minus 1. My favorite, OK.",
    "start": "832230",
    "end": "837620"
  },
  {
    "text": "So all these iterations,\nyou remember, are splittings of the matrix.",
    "start": "837620",
    "end": "844720"
  },
  {
    "text": "Some of the matrix goes\non the left-hand side. That's the preconditioner. So it's P, the\npreconditioner that's",
    "start": "844720",
    "end": "851940"
  },
  {
    "text": "sort of close to A in some\nsense, but easy to work with,",
    "start": "851940",
    "end": "856970"
  },
  {
    "text": "multiplies the new thing\nand on the other side is A minus A-- the rest\nof the matrix-- that",
    "start": "856970",
    "end": "865890"
  },
  {
    "text": "multiplies the old plus\nthe right-hand side b.",
    "start": "865890",
    "end": "871900"
  },
  {
    "text": "Let's just remember again, that\nif we converge to the point where this is the same as this,\nthen we have the right answer.",
    "start": "871900",
    "end": "882300"
  },
  {
    "text": "We have the right answer because\nif that's the same as that, P*x is the same as P*x, this\ncomes over on the other side,",
    "start": "882300",
    "end": "889780"
  },
  {
    "text": "A*x equals b. So when it converges, it\nconverges to the right answer,",
    "start": "889780",
    "end": "896870"
  },
  {
    "text": "but you remember that\nthe key equation was that the new error is\nthe old error multiplied",
    "start": "896870",
    "end": "906920"
  },
  {
    "text": "by this matrix I minus P inverse\nA. That's the iteration matrix,",
    "start": "906920",
    "end": "914240"
  },
  {
    "text": "you could say. I just get it when I multiply\nboth sides by P inverse.",
    "start": "914240",
    "end": "921400"
  },
  {
    "text": "And so the problem is choose\nP so that this is easy to do",
    "start": "921400",
    "end": "930240"
  },
  {
    "text": "and at the same time,\nthis has small eigenvalues or as small as you can get.",
    "start": "930240",
    "end": "935820"
  },
  {
    "text": "So the Gauss-Seidel is\na particular choice, which takes the lower-- P is\nthe lower triangular part here.",
    "start": "935820",
    "end": "943430"
  },
  {
    "text": "So P is, so I just thought I'd\nbetter write down, explicitly: Gauss-Seidel takes\nthat, with zeros there,",
    "start": "943430",
    "end": "955020"
  },
  {
    "text": "as multiplying-- that's\nP. And what's P minus A?",
    "start": "955020",
    "end": "960200"
  },
  {
    "text": "It's the rest. And it's been moved\nto the other side",
    "start": "960200",
    "end": "965639"
  },
  {
    "text": "so the rest is going to be the\nstrictly upper triangular part.",
    "start": "965640",
    "end": "970740"
  },
  {
    "text": "And because it's moved\nover to the other side it'll have a plus sign. It'll be 1 and 1.",
    "start": "970740",
    "end": "975750"
  },
  {
    "text": " x_k plus b.",
    "start": "975750",
    "end": "984740"
  },
  {
    "text": "I just write it out so that\nyou see, totally explicitly,",
    "start": "984740",
    "end": "991810"
  },
  {
    "text": "how being triangular makes\nthe solution step immediate.",
    "start": "991810",
    "end": "1001420"
  },
  {
    "text": "Because the first equation will\ntell us the first component, right?",
    "start": "1001420",
    "end": "1006680"
  },
  {
    "text": "The first equation,\nbecause it's triangular there's only an entry here. And by the way, all these\ncodes, including Tim Davis's",
    "start": "1006680",
    "end": "1017860"
  },
  {
    "text": "minimum degree codes,\ntheir very first step is reorder the\nequations if necessary",
    "start": "1017860",
    "end": "1025100"
  },
  {
    "text": "to guarantee that the main\ndiagonal has no zeros. We want to know that in advance.",
    "start": "1025100",
    "end": "1033250"
  },
  {
    "text": "So that you just\ndo, let's assume it. Of course, for us it\nhappens automatically.",
    "start": "1033250",
    "end": "1038689"
  },
  {
    "text": "OK, so that's not zero. And that first equation\ngives us the first component,",
    "start": "1038690",
    "end": "1044579"
  },
  {
    "text": "then we know the first\ncomponent so we use it here, and the second equation tells\nus what the second component is.",
    "start": "1044580",
    "end": "1052470"
  },
  {
    "text": "We use that second component\nin the third equation to find the third component.",
    "start": "1052470",
    "end": "1060590"
  },
  {
    "text": "So there's no loss of\nspeed compared to diagonal",
    "start": "1060590",
    "end": "1065700"
  },
  {
    "text": "and actually, it's faster\nbecause the storage-- we're changing-- we're using\nthe new first component to find",
    "start": "1065700",
    "end": "1075210"
  },
  {
    "text": "the second and the new second\ncomponent to find the third, so we can overwrite\nx_k by x_(k+1).",
    "start": "1075210",
    "end": "1084920"
  },
  {
    "text": " Let's see. I guess if I had space and had\nprepared I would figure out",
    "start": "1084920",
    "end": "1093490"
  },
  {
    "text": "what this matrix is. Maybe you could do that.",
    "start": "1093490",
    "end": "1099000"
  },
  {
    "text": "Figure out what-- here's\nP. It's invertible. P inverse is going\nto be quite simple.",
    "start": "1099000",
    "end": "1106169"
  },
  {
    "text": "Actually, it would\nbe extremely simple. You'll be able to see its\neigenvalues immediately.",
    "start": "1106170",
    "end": "1112799"
  },
  {
    "text": " We could stop to do it,\nbut I think if you do it,",
    "start": "1112800",
    "end": "1118940"
  },
  {
    "text": "it's more valuable. So we would find that its\neigenvalues were below 1",
    "start": "1118940",
    "end": "1125510"
  },
  {
    "text": "and that they were the squares\nof the Jacobi eigenvalues,",
    "start": "1125510",
    "end": "1132360"
  },
  {
    "text": "so the method is twice\nas fast as Jacobi. But it has the same good feature\nof damping the high frequencies",
    "start": "1132360",
    "end": "1142180"
  },
  {
    "text": "and the same bad feature\nof not very much damping",
    "start": "1142180",
    "end": "1147420"
  },
  {
    "text": "the low, smooth\npart of the error. Now we're ready for multigrid,\nwhich is intended to solve it.",
    "start": "1147420",
    "end": "1156179"
  },
  {
    "text": "So multigrid is going to be--\nthe point is, by changing grid,",
    "start": "1156180",
    "end": "1168570"
  },
  {
    "text": "by changing from the fine\ngrid to a coarse grid,",
    "start": "1168570",
    "end": "1178269"
  },
  {
    "text": "the smooth oscillation\ndoesn't look so smooth. On the coarse grid,\nits effective frequency",
    "start": "1178270",
    "end": "1188620"
  },
  {
    "text": "is effectively doubled and it's\nmoving over in the direction",
    "start": "1188620",
    "end": "1195059"
  },
  {
    "text": "where the smoother\ncan attack it. We'll see that happen.",
    "start": "1195060",
    "end": "1201100"
  },
  {
    "text": "So now, I have to, really--\nthis begins the lecture on multigrid, which\nis going to take,",
    "start": "1201100",
    "end": "1207470"
  },
  {
    "text": "certainly, today and Friday. ",
    "start": "1207470",
    "end": "1212700"
  },
  {
    "text": "There's a very good book\nby Briggs and others. ",
    "start": "1212700",
    "end": "1224110"
  },
  {
    "text": "He wrote the first\nedition of the book",
    "start": "1224110",
    "end": "1229910"
  },
  {
    "text": "and coauthored the second one. And it's beautifully\nshort and clear and simple",
    "start": "1229910",
    "end": "1236559"
  },
  {
    "text": "and this presentation will\nfollow the same exposition",
    "start": "1236560",
    "end": "1245750"
  },
  {
    "text": "that the book does. ",
    "start": "1245750",
    "end": "1251400"
  },
  {
    "text": "So the key idea is\nto see what-- how",
    "start": "1251400",
    "end": "1260380"
  },
  {
    "text": "to go from a fine\ngrid problem, so this is on the fine grid\nwith step size h.",
    "start": "1260380",
    "end": "1267670"
  },
  {
    "text": "So this A_h is our problem. A_h is A. A_h, b\nsub h, we're looking",
    "start": "1267670",
    "end": "1276490"
  },
  {
    "text": "for u_h on the fine grid. Fine grid means\nlots of mesh points,",
    "start": "1276490",
    "end": "1284040"
  },
  {
    "text": "lots of unknowns, big problem. OK, so the idea is\ngoing to be, somehow,",
    "start": "1284040",
    "end": "1290760"
  },
  {
    "text": "to-- let me just\nstart with two grids. ",
    "start": "1290760",
    "end": "1299309"
  },
  {
    "text": "Well, you can see what you do\non the fine grid at the start.",
    "start": "1299310",
    "end": "1306820"
  },
  {
    "text": "You iterate. You use Gauss-Seidel\nor Jacobi, whatever. Maybe three times.",
    "start": "1306820",
    "end": "1312940"
  },
  {
    "text": "Maybe three\niterations, but don't continue to a\nthousand iterations, it's a waste of time.",
    "start": "1312940",
    "end": "1319450"
  },
  {
    "text": "Then, here is the real--\nthis is the multigrid part. ",
    "start": "1319450",
    "end": "1327460"
  },
  {
    "text": "The multigrid part\nis going-- you get an answer after\na few iterations,",
    "start": "1327460",
    "end": "1334070"
  },
  {
    "text": "after you've smoothed it. You compute this\nresidual, which is",
    "start": "1334070",
    "end": "1341390"
  },
  {
    "text": "the amount you're wrong in\nthe equation, the difference",
    "start": "1341390",
    "end": "1347410"
  },
  {
    "text": "between the right side\nand the left side.",
    "start": "1347410",
    "end": "1352950"
  },
  {
    "text": "I can put h's here\ntoo, to emphasize. This is residuals being\ncomputed with what we have,",
    "start": "1352950",
    "end": "1359429"
  },
  {
    "text": "which is on the fine grid. Now here's the change of grid.",
    "start": "1359430",
    "end": "1365620"
  },
  {
    "text": "Number two says, restrict\nto a coarse grid. Take that r_h, that residual\nwhich is probably a bit smooth,",
    "start": "1365620",
    "end": "1377000"
  },
  {
    "text": "and move it to the coarse grid. So the coarse grid we\nidentify by the fact",
    "start": "1377000",
    "end": "1385490"
  },
  {
    "text": "that its mesh width\nis twice as big, 2h.",
    "start": "1385490",
    "end": "1391630"
  },
  {
    "text": "And so we're going to\nneed some restriction, so the input to\nthis multigrid is",
    "start": "1391630",
    "end": "1398549"
  },
  {
    "text": "to decide on a restriction\nmatrix, how shall we take",
    "start": "1398550",
    "end": "1404880"
  },
  {
    "text": "values that are\ngiven on a fine grid and restrict them\nto a coarse grid?",
    "start": "1404880",
    "end": "1413340"
  },
  {
    "text": "Of course, one restriction\nis-- and it's not that bad-- is just to\ntake the values of r",
    "start": "1413340",
    "end": "1422670"
  },
  {
    "text": "that are on the coarse grid\nat every other grid point, use those.",
    "start": "1422670",
    "end": "1428910"
  },
  {
    "text": "Or we could take into\naccount the neighbors.",
    "start": "1428910",
    "end": "1434020"
  },
  {
    "text": "You see the question. So this is coming now\nin this restriction.",
    "start": "1434020",
    "end": "1440130"
  },
  {
    "text": "So the restriction\nis, restriction R, this is fine to coarse,\nand we have this question",
    "start": "1440130",
    "end": "1451110"
  },
  {
    "text": "of use neighbors or not?",
    "start": "1451110",
    "end": "1458309"
  },
  {
    "text": "That will enter. Well, the decision on\nwhat the matrix R is.",
    "start": "1458310",
    "end": "1465680"
  },
  {
    "text": "That's the key. OK, so we choose\nan R, we restrict,",
    "start": "1465680",
    "end": "1470840"
  },
  {
    "text": "and we have now a\nhalf-size problem. Well, half-size in 1D,\nquarter-size in 2D,",
    "start": "1470840",
    "end": "1477570"
  },
  {
    "text": "eighth-size in 3D because\nthe mesh width has",
    "start": "1477570",
    "end": "1484130"
  },
  {
    "text": "doubled in every coordinate.  Now I've put solve.",
    "start": "1484130",
    "end": "1491030"
  },
  {
    "text": "I better put quotes around that. Well, solve the problem\non the coarse mesh.",
    "start": "1491030",
    "end": "1498500"
  },
  {
    "text": "So the idea is that\nthat's much faster. Well, you might\nsay, what problem?",
    "start": "1498500",
    "end": "1504540"
  },
  {
    "text": "Well, we have to\ncreate, somehow,",
    "start": "1504540",
    "end": "1510080"
  },
  {
    "text": "the matrix on the coarse mesh. That's not necessarily\ngiven to us.",
    "start": "1510080",
    "end": "1517400"
  },
  {
    "text": "We start the\nproblem with A, A_h, the matrix on the fine grid.",
    "start": "1517400",
    "end": "1523029"
  },
  {
    "text": "Can I just mention\nthat this is probably,",
    "start": "1523030",
    "end": "1528450"
  },
  {
    "text": "this v-cycle-- that\nletter v is supposed",
    "start": "1528450",
    "end": "1533740"
  },
  {
    "text": "to suggest going down to\nthe coarse mesh and back up to the fine mesh.",
    "start": "1533740",
    "end": "1541360"
  },
  {
    "text": "And the standard\nnotation in all the",
    "start": "1541360",
    "end": "1547540"
  },
  {
    "text": "multigrid books is a capital\nV. And why do I use a small v?",
    "start": "1547540",
    "end": "1554400"
  },
  {
    "text": "This is my educational\ncontribution.",
    "start": "1554400",
    "end": "1560010"
  },
  {
    "text": "Capital V is appropriate\nwhen you have several meshes.",
    "start": "1560010",
    "end": "1566410"
  },
  {
    "text": "You go to 2h, you go to 4h,\nyou go to 8h, back to 4h, back",
    "start": "1566410",
    "end": "1571560"
  },
  {
    "text": "to 2h, back to h. So a deeper multigrid. So it would look\nmore complicated.",
    "start": "1571560",
    "end": "1579250"
  },
  {
    "text": "I would repeat this idea\ninstead of solve here.",
    "start": "1579250",
    "end": "1584370"
  },
  {
    "text": "Instead of solve at the 2h\nlevel, which of course, I'm not going to do exactly anyway.",
    "start": "1584370",
    "end": "1589560"
  },
  {
    "text": "But if I was in a\nbig V-cycle I would",
    "start": "1589560",
    "end": "1596530"
  },
  {
    "text": "iterate a few times to smooth\nhere, just as I did here.",
    "start": "1596530",
    "end": "1602000"
  },
  {
    "text": "I would iterate using\nweighted Jacobi or something",
    "start": "1602000",
    "end": "1607620"
  },
  {
    "text": "and then go down to the 4h mesh. So restrict to the 4h mesh.",
    "start": "1607620",
    "end": "1613540"
  },
  {
    "text": "So you can see that I would\nstay in this little loop to get to the bottom, 8h, and\nthen I would start back up.",
    "start": "1613540",
    "end": "1623570"
  },
  {
    "text": "So I think it's a good\nidea to use a small letter v to tell us-- rather than\nsaying two-grid capital",
    "start": "1623570",
    "end": "1634010"
  },
  {
    "text": "V-cycle, I'm just going\nto use a small v to signal right away that it's two grids.",
    "start": "1634010",
    "end": "1641870"
  },
  {
    "text": "Fine, coarse, fine. OK, so we have some solution,\nnot necessarily exact",
    "start": "1641870",
    "end": "1651330"
  },
  {
    "text": "and actually, there\nisn't that much point in getting it exact\nbecause what we want",
    "start": "1651330",
    "end": "1659450"
  },
  {
    "text": "is to move toward\nthe right answer. ",
    "start": "1659450",
    "end": "1664890"
  },
  {
    "text": "And notice that I'm\nlooking here at the error, rather than looking at A_(2h),\nu_(2h), the actual solution.",
    "start": "1664890",
    "end": "1674169"
  },
  {
    "text": "What I'm computing with\nis the correction term. So this is the correction\nterm that I find.",
    "start": "1674170",
    "end": "1683150"
  },
  {
    "text": "So this is the\nresidual over here. this is the A_(2h) that\nI still have to choose,",
    "start": "1683150",
    "end": "1691220"
  },
  {
    "text": "and then solving that\nwill give me a correction, but that correction\nis on coarse mesh.",
    "start": "1691220",
    "end": "1701370"
  },
  {
    "text": "I've only had that correction\nE_(2h) defined on the 2h mesh.",
    "start": "1701370",
    "end": "1709210"
  },
  {
    "text": "So now comes the other\npart of multigrid.",
    "start": "1709210",
    "end": "1715000"
  },
  {
    "text": "Get back to the fine\nmesh, climb back up.",
    "start": "1715000",
    "end": "1720210"
  },
  {
    "text": "I take that E_(2h) and\napply an interpolation. I need to create\nan interpolation.",
    "start": "1720210",
    "end": "1729210"
  },
  {
    "text": "This is going to\nbe coarse to fine. ",
    "start": "1729210",
    "end": "1736420"
  },
  {
    "text": "And I have to decide\nhow to do that. Once I've decided\nit that gives me",
    "start": "1736420",
    "end": "1745280"
  },
  {
    "text": "a correction at the\nfine mesh level, which is where I'm really working,\nso I make the correction",
    "start": "1745280",
    "end": "1753470"
  },
  {
    "text": "and I have a better answer. And probably, I\niterate a few times--",
    "start": "1753470",
    "end": "1761720"
  },
  {
    "text": "that would be called\na post-smoother-- on that correction. And maybe that's where I stop or\nmaybe I repeat little v-cycles,",
    "start": "1761720",
    "end": "1772790"
  },
  {
    "text": "but that's not brilliant. If you're going to do\nmultiple-- if you're",
    "start": "1772790",
    "end": "1780930"
  },
  {
    "text": "going to repeat multigrid,\nit's much more efficient to move to more and\nmore coarse meshes",
    "start": "1780930",
    "end": "1792429"
  },
  {
    "text": "because the\ncalculations on these are way faster than\non the fine mesh.",
    "start": "1792430",
    "end": "1802309"
  },
  {
    "text": "You see, rather\nthan-- I much prefer",
    "start": "1802310",
    "end": "1807370"
  },
  {
    "text": "to go way down and back\nup than a lot of v-cycles. I mean, that would\nbe a small w-cycle.",
    "start": "1807370",
    "end": "1816780"
  },
  {
    "text": "And not brilliant. Much better to use a big\nV-cycle or a big W-cycle.",
    "start": "1816780",
    "end": "1825610"
  },
  {
    "text": "There's a place for W-cycles,\nbut they're capital W-cycles, because you want\nto get down where",
    "start": "1825610",
    "end": "1831450"
  },
  {
    "text": "it is very fast, very\ninexpensive and in fact, so efficient that\nmultigrid achieves",
    "start": "1831450",
    "end": "1840060"
  },
  {
    "text": "this holy grail of giving you\nan answer with whatever accuracy",
    "start": "1840060",
    "end": "1848940"
  },
  {
    "text": "you want-- giving you an\nanswer in O of n operations.",
    "start": "1848940",
    "end": "1854559"
  },
  {
    "text": "n being the matrix size. Capital N squared\nin our example.",
    "start": "1854560",
    "end": "1860430"
  },
  {
    "text": "So that's the fantastic\nresult from multigrid.",
    "start": "1860430",
    "end": "1867340"
  },
  {
    "text": "So I'll come back to this,\nbut just say if the size of A",
    "start": "1867340",
    "end": "1877450"
  },
  {
    "text": "is n, which is capital N in 1D,\ncapital N squared, capital N",
    "start": "1877450",
    "end": "1882769"
  },
  {
    "text": "cubed, then the multigrid\nworks in O of n flops,",
    "start": "1882770",
    "end": "1895260"
  },
  {
    "text": "floating points operations.  Not even log n, which we\nthink of for the-- n log",
    "start": "1895260",
    "end": "1904985"
  },
  {
    "text": "n we think of for the FFT, for\nthe Fast Fourier Transform.",
    "start": "1904985",
    "end": "1912470"
  },
  {
    "text": "But here's it's\nactually order of n.",
    "start": "1912470",
    "end": "1918730"
  },
  {
    "text": "That really is a\ngoal worth achieving. ",
    "start": "1918730",
    "end": "1926680"
  },
  {
    "text": "So we know what the\nsmoothers might be. It's the I and the\nR that are new.",
    "start": "1926680",
    "end": "1934580"
  },
  {
    "text": "And then the analysis\nof convergence, why does it converge? But to use the method,\nand-- so by the way,",
    "start": "1934580",
    "end": "1942220"
  },
  {
    "text": "projects using multigrid\nare totally welcome also. ",
    "start": "1942220",
    "end": "1948860"
  },
  {
    "text": "So let me take the\ninterpolation I. So what's that? Coarse to fine.",
    "start": "1948860",
    "end": "1955110"
  },
  {
    "text": "Let me imagine I'm in 1D,\nso there's the x direction. Here's one end of the\ninterval, here's the other end",
    "start": "1955110",
    "end": "1962650"
  },
  {
    "text": "of the interval and suppose my\nboundary conditions are zero. ",
    "start": "1962650",
    "end": "1970370"
  },
  {
    "text": "So this is the coarse mesh\nand let me put in here,",
    "start": "1970370",
    "end": "1978630"
  },
  {
    "text": "make it the fine mesh. So at this point,\nI have an answer",
    "start": "1978630",
    "end": "1984400"
  },
  {
    "text": "on the coarse mesh, which\nsatisfies the boundary condition, and let's say\nit's there, there, and there.",
    "start": "1984400",
    "end": "1994890"
  },
  {
    "text": " OK, and I need values on the\nfine mesh at the other points.",
    "start": "1994890",
    "end": "2003169"
  },
  {
    "text": "Of course, I'm going\nto use these values when I interpolate them. That word interpolation\nmeans-- implies,",
    "start": "2003170",
    "end": "2011200"
  },
  {
    "text": "keep what you have\non the given points. And I'm just going to\ndo linear interpolation.",
    "start": "2011200",
    "end": "2018029"
  },
  {
    "text": "So halfway there, halfway\nthere, and halfway there.",
    "start": "2018030",
    "end": "2026270"
  },
  {
    "text": "So I'm inputting-- ignoring the\nboundary conditions, the zeros,",
    "start": "2026270",
    "end": "2031810"
  },
  {
    "text": "I'm-- it's going to\nbe 5 by 2 I think,",
    "start": "2031810",
    "end": "2039410"
  },
  {
    "text": "this matrix I in this example\nwill be 5 by 2 because it has 2",
    "start": "2039410",
    "end": "2047990"
  },
  {
    "text": "inputs, these, and\nit has 5 outputs. And what's the matrix? ",
    "start": "2047990",
    "end": "2056589"
  },
  {
    "text": "Well, for the second\nand fourth outputs it uses exactly--\nthis multiplies x,",
    "start": "2056590",
    "end": "2072300"
  },
  {
    "text": "or I should say u, u_1 and u_2.",
    "start": "2072300",
    "end": "2078750"
  },
  {
    "text": "Let me see if I'm-- if I'll\nfollow the notes in-- the notes",
    "start": "2078750",
    "end": "2085010"
  },
  {
    "text": "use v_1 and v_2 for the coarse\nmesh values to avoid h, 2h,",
    "start": "2085010",
    "end": "2095520"
  },
  {
    "text": "extra subscripts. So this height is v_1,\nthis height is v_2,",
    "start": "2095520",
    "end": "2100560"
  },
  {
    "text": "and I'm going to take-- this'll\nbe the new u_1, u_3, and u_5.",
    "start": "2100560",
    "end": "2107910"
  },
  {
    "text": "And u_2 I'm going to save. ",
    "start": "2107910",
    "end": "2114600"
  },
  {
    "text": "I better put I and make this\ninto a true equation, I*v.",
    "start": "2114600",
    "end": "2120260"
  },
  {
    "text": "This is going to give me the\nvalues u_1, u_2, u_3, u_4,",
    "start": "2120260",
    "end": "2126200"
  },
  {
    "text": "and u_5. So u_2 is just v_1.",
    "start": "2126200",
    "end": "2134720"
  },
  {
    "text": "u_4 is just v_2. No problem.",
    "start": "2134720",
    "end": "2141050"
  },
  {
    "text": "And what do I do\nwith the other ones? Let's see. I guess u_1 is halfway\nbetween v_1 and 0.",
    "start": "2141050",
    "end": "2153150"
  },
  {
    "text": "OK, so it's 1/2. ",
    "start": "2153150",
    "end": "2158280"
  },
  {
    "text": "u_1 is just 1/2 v_1,\nit doesn't involve v_2.",
    "start": "2158280",
    "end": "2164490"
  },
  {
    "text": "u_3, which is sitting\nhere is half of these, so it's half of this and half\nof that where this was nothing.",
    "start": "2164490",
    "end": "2174510"
  },
  {
    "text": "Then u_4 was the same\nas v_2, just take v_2.",
    "start": "2174510",
    "end": "2179630"
  },
  {
    "text": "And what's u_5? u_5 is half of v_2\nand half of zero. ",
    "start": "2179630",
    "end": "2189200"
  },
  {
    "text": "So it's a simple matrix,\nthe interpolation matrix.",
    "start": "2189200",
    "end": "2196109"
  },
  {
    "text": "It's just reasonable\nto use the letter I and we all recognize, here\nit's a rectangular matrix, not",
    "start": "2196110",
    "end": "2202670"
  },
  {
    "text": "the identity. I doesn't stand\nfor identity here, it stands for interpolation.",
    "start": "2202670",
    "end": "2208500"
  },
  {
    "text": "OK, so I hope you can\nfocus on the matrix. ",
    "start": "2208500",
    "end": "2217650"
  },
  {
    "text": "And if it was much, much\nbigger, but still in 1D, it wouldn't look very different.",
    "start": "2217650",
    "end": "2224210"
  },
  {
    "text": "Each column would\nhave a 1/2, 1, 1/2. That's a typical part of\nthe interpolation matrix.",
    "start": "2224210",
    "end": "2232010"
  },
  {
    "text": "It uses the value v_1, saves\nit at the center point,",
    "start": "2232010",
    "end": "2237760"
  },
  {
    "text": "uses half of it at the\nprevious point, and half of it at the right-hand point.",
    "start": "2237760",
    "end": "2243800"
  },
  {
    "text": "And similarly, you see it's sort\nof a typical rectangular matrix",
    "start": "2243800",
    "end": "2254120"
  },
  {
    "text": "in signal processing as well. ",
    "start": "2254120",
    "end": "2259720"
  },
  {
    "text": "I have to say something\nabout what happens in 2D because our problems are in 2D.",
    "start": "2259720",
    "end": "2267500"
  },
  {
    "text": "Maybe I just draw\na typical 2D mesh.",
    "start": "2267500",
    "end": "2272520"
  },
  {
    "text": " These are the coarse values,\nthis is the coarse mesh and now",
    "start": "2272520",
    "end": "2280160"
  },
  {
    "text": "I'll-- and of course,\nwe'll save those values. I will have a 1, so\nit'll save those values",
    "start": "2280160",
    "end": "2287040"
  },
  {
    "text": "when it goes to the fine mesh,\nthe fine mesh being half.",
    "start": "2287040",
    "end": "2293670"
  },
  {
    "text": "So I just have to\ndecide what to do there. So question mark. What value shall I\ntake-- oh, I suppose",
    "start": "2293670",
    "end": "2301349"
  },
  {
    "text": "I have to decide there, too. These are all new points\nand what shall I do.",
    "start": "2301350",
    "end": "2308890"
  },
  {
    "text": "I'm just going to stay with\nlinear interpolation, which is quite fast and satisfactory.",
    "start": "2308890",
    "end": "2314250"
  },
  {
    "text": "This value will be the\naverage of those two. This value will be\nthe average of those",
    "start": "2314250",
    "end": "2319754"
  },
  {
    "text": "and what will this\none be in the center? It's the average of\nthese four, of course.",
    "start": "2319754",
    "end": "2329059"
  },
  {
    "text": "And that's what we'll get. Actually, that Kronecker product\nbusiness, a Kronecker product",
    "start": "2329060",
    "end": "2336910"
  },
  {
    "text": "of a 1D matrix like\nthat with itself would be a 2D interpolation\nthat would do exactly this.",
    "start": "2336910",
    "end": "2345590"
  },
  {
    "text": "We can write it out\nmore fully, but it's not fun to write out really fully\nbecause if this is 5 by 2,",
    "start": "2345590",
    "end": "2353630"
  },
  {
    "text": "then I2D would be 25 by 4. ",
    "start": "2353630",
    "end": "2360970"
  },
  {
    "text": "So we're right away, even\non this tiny, tiny problem, we're right away up\nto 25 internal mesh",
    "start": "2360970",
    "end": "2368510"
  },
  {
    "text": "points on the fine mesh.  That's the matrix that\nI want you to see.",
    "start": "2368510",
    "end": "2374920"
  },
  {
    "text": "And, the natural choice\nfor R is the transpose.",
    "start": "2374920",
    "end": "2383760"
  },
  {
    "text": " So one possible choice-- and it\nwill, the answer will be yes,",
    "start": "2383760",
    "end": "2390890"
  },
  {
    "text": "we do use neighbors. So R will be the\ntranspose of I. Actually,",
    "start": "2390890",
    "end": "2400530"
  },
  {
    "text": "I'll need a factor here. I think it's 1/2.",
    "start": "2400530",
    "end": "2406740"
  },
  {
    "text": "Let me just see what it is. Let me see why we need a little\nmultiple there to make things",
    "start": "2406740",
    "end": "2418180"
  },
  {
    "text": "right. So there's my matrix\nI, so I'm just going to transpose it and\nlet me factor 1/2 out of that",
    "start": "2418180",
    "end": "2431309"
  },
  {
    "text": "so you see these matrices\nwithout fractions inside. That would be 1, 2, 1.",
    "start": "2431310",
    "end": "2437280"
  },
  {
    "text": "So I'm going to transpose that. 1, 2, 1, 0, 0. 0, 0, 1, 2, 1.",
    "start": "2437280",
    "end": "2443210"
  },
  {
    "text": " So I factored 1/2 out\nof I when I did that.",
    "start": "2443210",
    "end": "2449550"
  },
  {
    "text": "And then I believe that\nI need another 1/2 here. I think I need 1/4. And what do I mean\nby needing 1/4?",
    "start": "2449550",
    "end": "2456660"
  },
  {
    "start": "2456660",
    "end": "2462010"
  },
  {
    "text": "Of course, the main\npoint is that this is the transpose of this.",
    "start": "2462010",
    "end": "2467330"
  },
  {
    "text": "And you'll see that that\npreserves the symmetry. That's just sort of the\nnatural thing to pick.",
    "start": "2467330",
    "end": "2477910"
  },
  {
    "text": "Not the only possibility,\nbut it's very good to connect the restriction\nwith the interpolation.",
    "start": "2477910",
    "end": "2485190"
  },
  {
    "text": "Of course, you can't\ntake the restriction to be the inverse of\nthe interpolation.",
    "start": "2485190",
    "end": "2491140"
  },
  {
    "text": "Why not? I mean that sort of mental idea\nis that the restriction goes",
    "start": "2491140",
    "end": "2499990"
  },
  {
    "text": "in one direction and\nthe interpolation in the other direction. So why not just let one be\nthe inverse of the other?",
    "start": "2499990",
    "end": "2505800"
  },
  {
    "text": "Well of course, that matrix\ndoesn't have an inverse. ",
    "start": "2505800",
    "end": "2514680"
  },
  {
    "text": "I mean its rank is only 2. When we do a restriction we're\ngoing to lose information,",
    "start": "2514680",
    "end": "2521450"
  },
  {
    "text": "the interpolation\ncan't put it all back because we threw it away when we\nrestricted to the coarse mesh.",
    "start": "2521450",
    "end": "2530430"
  },
  {
    "text": "Now why 1/4? I think it's just if we had\nall constants, like all ones,",
    "start": "2530430",
    "end": "2537970"
  },
  {
    "text": "as our mesh values,\nwe would want to get all ones for\nthe restriction.",
    "start": "2537970",
    "end": "2546910"
  },
  {
    "text": "So if I multiply this matrix\nby the vector of all ones-- so assuming you remember\nwhere R comes in,",
    "start": "2546910",
    "end": "2557670"
  },
  {
    "text": "if I just copy\nthis equation, you",
    "start": "2557670",
    "end": "2563540"
  },
  {
    "text": "remember that I go from the\nh mesh, it's fine to coarse.",
    "start": "2563540",
    "end": "2571170"
  },
  {
    "text": " So R times ones on the fine\nmesh, all ones on the fine mesh",
    "start": "2571170",
    "end": "2589110"
  },
  {
    "text": "gives ones on the coarse mesh. That's why I wanted that-- you\nsee, if I multiply by all ones",
    "start": "2589110",
    "end": "2600980"
  },
  {
    "text": "then that multiplication gives\nme 1 plus 2 plus 1 equal 4 and I need to divide by\n4 to get back to the 1.",
    "start": "2600980",
    "end": "2610550"
  },
  {
    "text": "You quickly discover\nthat that just arises because of a change of scale.",
    "start": "2610550",
    "end": "2617760"
  },
  {
    "text": "It's just a factor of 1/2. In 2D that 1/2 there\nwould change to 1/4.",
    "start": "2617760",
    "end": "2625730"
  },
  {
    "text": "In 3D it'd be 1/8. It's just the scaling\nto preserve constants.",
    "start": "2625730",
    "end": "2634550"
  },
  {
    "text": " And now the remaining\nquestion is, what's A_(2h).",
    "start": "2634550",
    "end": "2641650"
  },
  {
    "text": "That's the other matrix\nhere that we're not given.",
    "start": "2641650",
    "end": "2648809"
  },
  {
    "text": "We're given the\nA_h, our problem. We choose an R and we choose\nan I and if we're smart,",
    "start": "2648810",
    "end": "2657240"
  },
  {
    "text": "one's the transpose\nof the other. And then the question\nis, what's A_(2h)? And there's a beautiful answer,\nso let me just say what it is.",
    "start": "2657240",
    "end": "2667680"
  },
  {
    "text": "A_(2h), the coarse mesh matrix,\nis the fine mesh matrix,",
    "start": "2667680",
    "end": "2686240"
  },
  {
    "text": "but I need to do first-- if this\nis going to apply to the coarse",
    "start": "2686240",
    "end": "2697330"
  },
  {
    "text": "mesh guys, the v's, I have\nto do an interpolation.",
    "start": "2697330",
    "end": "2703660"
  },
  {
    "text": " You'll see it here. This is 5 by 5 in my problem.",
    "start": "2703660",
    "end": "2712710"
  },
  {
    "text": "So I need to first\ndo the interpolation to get from a vector of length\n2 up to a vector of length 5.",
    "start": "2712710",
    "end": "2722670"
  },
  {
    "text": "Then this and then\nthe restriction. That's terrific. That's A_(2h). ",
    "start": "2722670",
    "end": "2732900"
  },
  {
    "text": "So this is A_(2h) and\nwe'd better do an example.",
    "start": "2732900",
    "end": "2740549"
  },
  {
    "text": "I guess it's going\nto be next time. So that'll be the first thing\nfor next time, would be to see,",
    "start": "2740550",
    "end": "2746160"
  },
  {
    "text": "okay, for the standard\nsecond difference A_h, for these piecewise linear\ninterpolation and restriction,",
    "start": "2746160",
    "end": "2755630"
  },
  {
    "text": "what comes out as A_(2h)? Do we get the standard\nsecond difference",
    "start": "2755630",
    "end": "2763759"
  },
  {
    "text": "on the coarse mesh, which you\nreally hope we do and we do.",
    "start": "2763760",
    "end": "2770640"
  },
  {
    "text": "This will be the second\ndifference, in our example, on the coarse mesh.",
    "start": "2770640",
    "end": "2776810"
  },
  {
    "text": " So that this middle step of\nmultigrid is exactly what",
    "start": "2776810",
    "end": "2786390"
  },
  {
    "text": "we would have expected. What we would've had if we\nset up the problem originally",
    "start": "2786390",
    "end": "2792329"
  },
  {
    "text": "on the coarse mesh. But now we're going to get\nan answer that we take back to the fine mesh.",
    "start": "2792330",
    "end": "2798560"
  },
  {
    "text": "OK, so I'll do that next time. Some homeworks here that I\nheld for an extra two days",
    "start": "2798560",
    "end": "2805990"
  },
  {
    "text": "and now I'm returning and\nsome thoughts to go up on to the website about\npossible projects,",
    "start": "2805990",
    "end": "2814340"
  },
  {
    "text": "but actually, I\nexpressed a lot of them at the beginning of the lecture. OK, thanks.",
    "start": "2814340",
    "end": "2820510"
  },
  {
    "text": "Good. ",
    "start": "2820510",
    "end": "2832465"
  }
]