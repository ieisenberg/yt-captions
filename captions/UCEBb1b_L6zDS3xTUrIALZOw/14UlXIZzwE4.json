[
  {
    "start": "0",
    "end": "7192"
  },
  {
    "text": "SRINI DEVADAS:\nMorning, everyone. Welcome to 6.S095.",
    "start": "7192",
    "end": "12830"
  },
  {
    "text": "Thanks for registering\nfor this class. I hope you like it. My name is Srini Devadas. I'm a professor of computer\nscience at MIT, obviously,",
    "start": "12830",
    "end": "22900"
  },
  {
    "text": "and I've been teaching\nat MIT for 30 years. So I've been at it for a while.",
    "start": "22900",
    "end": "28810"
  },
  {
    "text": "The reason I'm\nteaching this IAP class is because I want to try\nout this way of teaching",
    "start": "28810",
    "end": "36550"
  },
  {
    "text": "programming that starts\nwith the recreational world of mathematical puzzles,\nalgorithmic puzzles,",
    "start": "36550",
    "end": "44080"
  },
  {
    "text": "and I want to connect it\nup to writing programs. And I have taught this\nmaterial before in 6.009",
    "start": "44080",
    "end": "54089"
  },
  {
    "text": "that I think some of\nyou are registered for, but I wanted to teach it\nin a more interactive,",
    "start": "54090",
    "end": "61510"
  },
  {
    "text": "informal setting. And I should mention\nthat I wrote a book on this, which is a book\nthat's recommended, though not",
    "start": "61510",
    "end": "69970"
  },
  {
    "text": "required, for 6.009. And so you might see\nthis in the MIT Press",
    "start": "69970",
    "end": "75460"
  },
  {
    "text": "Bookstore and other places. And most of the material\nI'm going to cover here",
    "start": "75460",
    "end": "81120"
  },
  {
    "text": "is from the book. But I don't want\nyou to read the book because I want you to listen to\nmy explanations for the puzzles",
    "start": "81120",
    "end": "89710"
  },
  {
    "text": "and try and think\nof the solutions yourself and then obviously\ndo some amount of coding",
    "start": "89710",
    "end": "97810"
  },
  {
    "text": "not during lecture but offline. And I'll show you some\nsolutions to the puzzles,",
    "start": "97810",
    "end": "103119"
  },
  {
    "text": "and there will be\nsome exercises. So I don't want to spend a\nwhole lot of time on logistics.",
    "start": "103120",
    "end": "108970"
  },
  {
    "text": "This is an IAP class,\nas I mentioned. I'd like this to be\ninformal and relaxed.",
    "start": "108970",
    "end": "115810"
  },
  {
    "text": "So we meet every\nday for two weeks. We have the holiday\ncoming up on Monday,",
    "start": "115810",
    "end": "121630"
  },
  {
    "text": "so we'll have nine total\nlectures roughly for an hour.",
    "start": "121630",
    "end": "126930"
  },
  {
    "text": "It might spill over, but\nhopefully, you'll be OK with it because you don't have another\nclass to go to at noon.",
    "start": "126930",
    "end": "134110"
  },
  {
    "text": "And if you do,\nwell, let me know, and I'll give you that\nfive minutes of overflow",
    "start": "134110",
    "end": "140920"
  },
  {
    "text": "personally at a time\nof your choosing. But hopefully,\nI'll keep on time.",
    "start": "140920",
    "end": "149780"
  },
  {
    "text": "And in terms of work,\nthis is a pass/fail. It's a for-credit class.",
    "start": "149780",
    "end": "154900"
  },
  {
    "text": "I know some of you may be\nlisteners, but some of you are registered for it. So I'll have to\nassign you a grade,",
    "start": "154900",
    "end": "160660"
  },
  {
    "text": "so there will be some exercises. And I'm going to\nmake it very simple. ",
    "start": "160660",
    "end": "166230"
  },
  {
    "text": "There'll be exercises\nup on the website. They'll be due two days\nfrom when I put them up.",
    "start": "166230",
    "end": "171550"
  },
  {
    "text": "And you'll have options\nin terms of whether to do a really simple\nexercise that's probably",
    "start": "171550",
    "end": "176590"
  },
  {
    "text": "going to take about five\nminutes or do something harder. And for each of\nthe puzzles, there",
    "start": "176590",
    "end": "182050"
  },
  {
    "text": "are two or three exercises,\nand you get to do all of them if you want. You can choose to\ndo one or the other.",
    "start": "182050",
    "end": "191010"
  },
  {
    "text": "I'm going to have office hours\nevery day from 1:00 to 2:00. I don't plan on putting\nsolutions up to the exercises.",
    "start": "191010",
    "end": "198400"
  },
  {
    "text": "The solutions to the\npuzzles themselves, they'll be shown\nmostly in lecture and put up on the\nStellar website,",
    "start": "198400",
    "end": "206410"
  },
  {
    "text": "but the solutions\nto the exercises, I'm not going to put up. But if you ever get\nstuck, well, that's",
    "start": "206410",
    "end": "212290"
  },
  {
    "text": "what office hours are for. And if you can't\nsolve the exercises, I'll help to solve them.",
    "start": "212290",
    "end": "219410"
  },
  {
    "text": "So with that,\nwithout further ado, let's dive in and\ntalk about puzzles",
    "start": "219410",
    "end": "225280"
  },
  {
    "text": "and solving puzzles using\nalgorithms and then programs. I'd really like this\nto be interactive,",
    "start": "225280",
    "end": "232030"
  },
  {
    "text": "so please ask questions\nand suggest solutions",
    "start": "232030",
    "end": "238420"
  },
  {
    "text": "that I haven't thought of. That'd be great. In my second edition,\nwhenever that is, you'll get credit for that.",
    "start": "238420",
    "end": "244810"
  },
  {
    "text": "So the first puzzle, I\ntried to have, I don't know,",
    "start": "244810",
    "end": "254489"
  },
  {
    "text": "funny titles for all\nof these puzzles-- intriguing. And so the first puzzle is\ncalled \"You Will All Conform.\"",
    "start": "254490",
    "end": "262900"
  },
  {
    "text": "This is really a warm-up puzzle. As you'll see-- this\nis true for any class-- things are going to get more\ncomplicated as we go along.",
    "start": "262900",
    "end": "270200"
  },
  {
    "text": "So we'll probably do 10 or 12\npuzzles in the next two weeks. And by the end, you're going\nto see things like memoization",
    "start": "270200",
    "end": "279860"
  },
  {
    "text": "and dynamic\nprogramming and things like that towards\nthe end of next week. And if you don't know\nwhat those mean, well,",
    "start": "279860",
    "end": "286990"
  },
  {
    "text": "that's great because\nhopefully, you will know by the end\nof the two weeks.",
    "start": "286990",
    "end": "292630"
  },
  {
    "text": "And a lot of these things\nare algorithmic insights, are insights that will help you\nin Course 6 classes, for sure,",
    "start": "292630",
    "end": "302390"
  },
  {
    "text": "and perhaps even if you follow\na career outside of Course 6.",
    "start": "302390",
    "end": "310080"
  },
  {
    "text": "So this particular puzzle is, as\nI said, a fairly simple puzzle,",
    "start": "310080",
    "end": "316819"
  },
  {
    "text": "at least to describe. And the setting is as follows.",
    "start": "316820",
    "end": "322170"
  },
  {
    "text": "So you're a gatekeeper\nat a baseball game. We'll just call\nit a baseball game because baseball\nplayers wear caps,",
    "start": "322170",
    "end": "328100"
  },
  {
    "text": "and most people are\nwatching games with caps on. And so you're a gatekeeper,\nand there are a bunch",
    "start": "328100",
    "end": "335060"
  },
  {
    "text": "of people standing in line. Let's just say each of\nthem knows their number.",
    "start": "335060",
    "end": "341390"
  },
  {
    "text": "And this is Python,\nso the number starts at 0 as opposed to 1.",
    "start": "341390",
    "end": "346789"
  },
  {
    "text": "And there are a\nwhole bunch of people standing in line waiting to\nget in, and they all have caps.",
    "start": "346790",
    "end": "354050"
  },
  {
    "text": "And some of them are\nwearing their caps forward, so with the--",
    "start": "354050",
    "end": "360305"
  },
  {
    "text": "I guess, what do you call it? What's the front\nof the cap called? The shade-- the thing that\ngives you shade up front.",
    "start": "360305",
    "end": "369940"
  },
  {
    "text": "And so we just say-- let me try and draw this out. So this person is wearing\nhis cap like that,",
    "start": "369940",
    "end": "378919"
  },
  {
    "text": "and this lady here is\nwearing her cap like this. So that's forwards,\nand that's backwards.",
    "start": "378920",
    "end": "387200"
  },
  {
    "text": " So your job here\nis straightforward.",
    "start": "387200",
    "end": "397740"
  },
  {
    "text": "You can only let all of\nthese people into line-- sorry-- into the stadium who\nare in line if they all conform.",
    "start": "397740",
    "end": "409930"
  },
  {
    "text": "So they all have\nto wear their caps in a particular orientation,\nand you don't particularly",
    "start": "409930",
    "end": "415639"
  },
  {
    "text": "care which one. And so they all\nhave to be forwards, all, let's say, 13 of them.",
    "start": "415640",
    "end": "423920"
  },
  {
    "text": "Or they all have\nto be backwards. Now, all of them know\ntheir position on the line.",
    "start": "423920",
    "end": "431330"
  },
  {
    "text": "So this person knows\nthat his position is 0, this lady here knows\nthat her position",
    "start": "431330",
    "end": "436670"
  },
  {
    "text": "is 1, et cetera, et cetera. And so obviously, you'd like\nto minimize the amount of work",
    "start": "436670",
    "end": "444830"
  },
  {
    "text": "that you do, and you\ncould certainly choose--",
    "start": "444830",
    "end": "450560"
  },
  {
    "text": "let's say you want\neveryone to be forwards. You could say, hey, lady in\nposition 1, flip your cap.",
    "start": "450560",
    "end": "456740"
  },
  {
    "text": "Oh, I should mention\nsomething that is important. So people have a\ndifferent definition of forwards and backwards.",
    "start": "456740",
    "end": "462860"
  },
  {
    "text": "It's sort of what's natural\nand what's unnatural to them. So we think that this person\nhas his cap on forwards.",
    "start": "462860",
    "end": "473090"
  },
  {
    "text": "But for all you know, he\nthinks he's got his cap on backwards or vice versa. So you can't assume\nthat the definition",
    "start": "473090",
    "end": "480830"
  },
  {
    "text": "of \"forwards\" and \"backwards\" is\nidentical for all of the people in line and really is the\nsame as your definition.",
    "start": "480830",
    "end": "489170"
  },
  {
    "text": "It seems kind of unreasonable. Hey, this is a puzzle, so\nlet's not argue about that.",
    "start": "489170",
    "end": "497677"
  },
  {
    "text": "We can argue about other\nthings, like how to write Python programs properly.",
    "start": "497677",
    "end": "502790"
  },
  {
    "text": "So what you have\nto do now is you have to call out commands\nthat correspond to saying,",
    "start": "502790",
    "end": "510020"
  },
  {
    "text": "person in position\n0, flip your cap. That's all you can say.",
    "start": "510020",
    "end": "515900"
  },
  {
    "text": "You can just say, flip your cap. You can obviously see how\nthese caps are oriented,",
    "start": "515900",
    "end": "521780"
  },
  {
    "text": "and you can ask-- let's say that you had\nsomething like that. I'm just making this up as\nI go along, in terms of I'm",
    "start": "521780",
    "end": "529640"
  },
  {
    "text": "not going to draw\nall the caps here. But this is what it looks like.",
    "start": "529640",
    "end": "535949"
  },
  {
    "text": "And so according to you,\nyou see F, B, B, in terms",
    "start": "535950",
    "end": "541010"
  },
  {
    "text": "of Forwards and Backwards. And let's say you decide\nthat you want everyone",
    "start": "541010",
    "end": "546230"
  },
  {
    "text": "to have their cap on forwards. Then you could say, person\nin position 1, flip your cap.",
    "start": "546230",
    "end": "554870"
  },
  {
    "text": "Person in position\n2, flip your cap. And then person in\nposition 4, 7, et cetera.",
    "start": "554870",
    "end": "561230"
  },
  {
    "text": "And you want to make\nit easier on yourself because people do know their\nindices, their positions",
    "start": "561230",
    "end": "570260"
  },
  {
    "text": "in line. And so to save\nyourself some trouble, you could say, people in\npositions 1 through 2--",
    "start": "570260",
    "end": "577160"
  },
  {
    "text": "and the implication is that\nit's inclusive-- flip your caps. And so that takes\ncare of these two.",
    "start": "577160",
    "end": "584540"
  },
  {
    "text": "And perhaps 8 here and 9\nhad their caps on backwards,",
    "start": "584540",
    "end": "593930"
  },
  {
    "text": "and you could say, people\nin positions 7 through 9, flip your caps.",
    "start": "593930",
    "end": "599540"
  },
  {
    "text": "So in this particular\nexample, assuming that things ended with 10\npeople in line, 0 through 9,",
    "start": "599540",
    "end": "605629"
  },
  {
    "text": "you could get away\nwith three commands. You could say, 1 through 2--",
    "start": "605630",
    "end": "614180"
  },
  {
    "text": "and the implication, as I\nsaid, is this is inclusive-- flip.",
    "start": "614180",
    "end": "619910"
  },
  {
    "text": "And then you could say, 4, flip.",
    "start": "619910",
    "end": "625040"
  },
  {
    "text": "And then you could\nsay, 7 through 9, flip.",
    "start": "625040",
    "end": "632870"
  },
  {
    "text": "And if you did it\nthe other way, you could also say,\nperson at 0, flip,",
    "start": "632870",
    "end": "639290"
  },
  {
    "text": "and so this would go backwards. Person at 3, flip. Obviously, you can't\nsay, 0 through 3",
    "start": "639290",
    "end": "645020"
  },
  {
    "text": "because that would be wrong. And then you could\nsay 5 through 6 here.",
    "start": "645020",
    "end": "651540"
  },
  {
    "text": "So you would get three\ncommands in that case, as well.",
    "start": "651540",
    "end": "657980"
  },
  {
    "text": "But if in fact, for\nargument's sake, let's",
    "start": "657980",
    "end": "663170"
  },
  {
    "text": "just say that I'm going\nto just turn this into 10",
    "start": "663170",
    "end": "668950"
  },
  {
    "text": "and put an F down here. Then these three\ncommands would still",
    "start": "668950",
    "end": "677190"
  },
  {
    "text": "work if you wanted to focus\non the B's, on the Backwards",
    "start": "677190",
    "end": "684300"
  },
  {
    "text": "people, and make them\nmake them go forwards. But if you wanted to make\nall of the forward people",
    "start": "684300",
    "end": "689580"
  },
  {
    "text": "go backwards, you would need\n1, 2, 3, 4, four commands.",
    "start": "689580",
    "end": "698300"
  },
  {
    "text": "So in this particular\ncase, you're better off doing that as\nopposed to doing four commands.",
    "start": "698300",
    "end": "703950"
  },
  {
    "text": "So first straightforward\nquestion is--",
    "start": "703950",
    "end": "711000"
  },
  {
    "text": "and I'm not talking\nabout code yet-- algorithmically, just\nin terms of pseudocode--",
    "start": "711000",
    "end": "716610"
  },
  {
    "text": "and I'm happy with English-- how would you determine the\nminimum set of commands given",
    "start": "716610",
    "end": "725340"
  },
  {
    "text": "a particular set of people? There's an arbitrary\nset of people. You want to make sure that you\nhave the absolute minimum set",
    "start": "725340",
    "end": "734010"
  },
  {
    "text": "of commands, and you're going\nto have to use these intervals. So you definitely\nwant to look for all",
    "start": "734010",
    "end": "739590"
  },
  {
    "text": "the contiguous intervals\nbecause obviously, if you say 1 followed and then\nthat's a separate command, then you say 2 and that's\na separate command,",
    "start": "739590",
    "end": "748170"
  },
  {
    "text": "you end up having more\ncommands than necessary. So anyone want to tell\nme I guess roughly,",
    "start": "748170",
    "end": "755829"
  },
  {
    "text": "in terms of pseudocode,\nhow this would work?",
    "start": "755830",
    "end": "761280"
  },
  {
    "text": "Yeah, go ahead. AUDIENCE: Well, you\ncould go down the line and look at the groups.",
    "start": "761280",
    "end": "768205"
  },
  {
    "text": "So start with the 0. You've got to write 0. Group them. And then whatever\nthe second one is--",
    "start": "768205",
    "end": "775570"
  },
  {
    "text": "so whatever the second\ngroup is, if it's F or B,",
    "start": "775570",
    "end": "780990"
  },
  {
    "text": "those are the ones\nthat need to be flipped because that's going to be the\nminimum number of commands.",
    "start": "780990",
    "end": "786209"
  },
  {
    "text": "And then so from what\nyou pass through, whenever you get to those,\nyou just tell them to flip.",
    "start": "786210",
    "end": "793765"
  },
  {
    "text": "SRINI DEVADAS: Sounds good. Do you have anything\nto add to that? AUDIENCE: No. I was going to say, you\nfind the backwards interval",
    "start": "793765",
    "end": "799391"
  },
  {
    "text": "or forward interval. And whichever is\nthe lower, then-- SRINI DEVADAS: Lower.",
    "start": "799391",
    "end": "804490"
  },
  {
    "text": "That's good. Good. Excellent. And so both of you had it right. So let me explain what these two\ngentlemen-- what was your name?",
    "start": "804490",
    "end": "811140"
  },
  {
    "text": "AUDIENCE: Ganatra. SRINI DEVADAS: Ganatra? Yours? AUDIENCE: Fadi. SRINI DEVADAS: Fadi? AUDIENCE: Yeah.",
    "start": "811140",
    "end": "816490"
  },
  {
    "text": "SRINI DEVADAS: So\nGanatra and Fadi said-- so basically, this\nis, as I said,",
    "start": "816490",
    "end": "823390"
  },
  {
    "text": "the natural algorithm\nthat you would use. The natural algorithm\nwould be that you",
    "start": "823390",
    "end": "829600"
  },
  {
    "text": "walk through this\nlist, and you start computing what I would\ncall-- you called it",
    "start": "829600",
    "end": "835420"
  },
  {
    "text": "\"groups,\" Ganatra. But I'd call them\n\"intervals,\" and an interval is something that is unbroken.",
    "start": "835420",
    "end": "841750"
  },
  {
    "text": "It's contiguous. It's a contiguous\nset of people who all have their caps in\nthe same orientation,",
    "start": "841750",
    "end": "848650"
  },
  {
    "text": "be it forward or backwards. And what you would do in this\ncase is you would compute the--",
    "start": "848650",
    "end": "856720"
  },
  {
    "text": "you would say, I want to look\nat the forward intervals. And the forward\nintervals would be 0, 0 because that's essentially\nwhat you have in here.",
    "start": "856720",
    "end": "864340"
  },
  {
    "text": "And going through that\nlist, you would also say, I'm going to be computing\nthe backward intervals.",
    "start": "864340",
    "end": "870010"
  },
  {
    "text": "And in this case, you discover\n1, 2 as the backwards interval.",
    "start": "870010",
    "end": "875110"
  },
  {
    "text": "So I'm going to write\nthem out like that. And in general, in the\nmathematical notation, when you put square brackets,\nthese are closed intervals.",
    "start": "875110",
    "end": "884639"
  },
  {
    "text": "So 0 is included. And we're going to\nsee a puzzle where you might see something\na little bit different,",
    "start": "884640",
    "end": "890210"
  },
  {
    "text": "so I wanted to point that out. So 1, 2 are both\ninside this interval. And these two you\nwould generate as you",
    "start": "890210",
    "end": "897730"
  },
  {
    "text": "would go through the\nlist, and then you would generate 3, 3 over here.",
    "start": "897730",
    "end": "903010"
  },
  {
    "text": "And then you would generate 4-- yeah, that's right, just 4-- I'm sorry, 4, 4\nover here, if you",
    "start": "903010",
    "end": "908890"
  },
  {
    "text": "want to call it an interval. You could represent\nthis differently. There's nothing that\nstopping you in Python",
    "start": "908890",
    "end": "914950"
  },
  {
    "text": "to have these slightly more\ncomplicated representations",
    "start": "914950",
    "end": "920590"
  },
  {
    "text": "where you just have\n0 here as a number. And if it's just\na number, then it represents an\ninterval of length 1,",
    "start": "920590",
    "end": "928360"
  },
  {
    "text": "but let's just be\nuniform about this. Usually, when you\nhave special cases and if you do things\nheterogeneously,",
    "start": "928360",
    "end": "935699"
  },
  {
    "text": "then you have more\ncode to write. It might get more efficient,\nbut there's usually more code to write.",
    "start": "935700",
    "end": "941200"
  },
  {
    "text": "So you do 4, 4 here. And then you'd go up, and\nthen you'd have 5 comma 6.",
    "start": "941200",
    "end": "947680"
  },
  {
    "text": "And then you would do 7 comma-- I'm sorry, 7 comma 9.",
    "start": "947680",
    "end": "952890"
  },
  {
    "text": "So this is the first\ntime you actually have something interesting, in\nthe sense that the interval has",
    "start": "952890",
    "end": "959590"
  },
  {
    "text": "a representation that only\nhas two numbers in it, whereas you actually have\nthree people in that interval.",
    "start": "959590",
    "end": "965620"
  },
  {
    "text": "And obviously, this\ncould be arbitrarily large in the context of people\ngetting into a baseball game--",
    "start": "965620",
    "end": "973470"
  },
  {
    "text": "and so 7 through 9 and then\nfinally here 10 through 10.",
    "start": "973470",
    "end": "978639"
  },
  {
    "text": "And so now you go\nahead, and you count and you realize that there's\nfour intervals here and three",
    "start": "978640",
    "end": "984160"
  },
  {
    "text": "intervals here. And then you say, I'm\ngoing to go ahead and go with the backwards and asking\nthe people who are-- well,",
    "start": "984160",
    "end": "993640"
  },
  {
    "text": "according to you-- backwards\nto flip their caps so we're all good. ",
    "start": "993640",
    "end": "999310"
  },
  {
    "text": "So I'm going to show\nyou code that implements",
    "start": "999310",
    "end": "1004710"
  },
  {
    "text": "exactly this algorithm. And while you see\nthe code, I want",
    "start": "1004710",
    "end": "1010050"
  },
  {
    "text": "you to think about\nthis harder question. This code is going to do\nexactly what we describe.",
    "start": "1010050",
    "end": "1015690"
  },
  {
    "text": "It's going to go compute\nall of these things,",
    "start": "1015690",
    "end": "1021490"
  },
  {
    "text": "and as you can\nimagine, he's going to make a pass through\nthis entire Python",
    "start": "1021490",
    "end": "1027199"
  },
  {
    "text": "list, this group of people,\nthis queue of people,",
    "start": "1027200",
    "end": "1033230"
  },
  {
    "text": "and is going to do\nthis computation. Then it's going to say,\n4 is greater than 3.",
    "start": "1033230",
    "end": "1039380"
  },
  {
    "text": "And then it's going to go\nthrough and start calling out commands for each of\nthe backward intervals.",
    "start": "1039380",
    "end": "1046400"
  },
  {
    "text": "So in some sense, it's going to\nmake two passes over the list.",
    "start": "1046400",
    "end": "1052160"
  },
  {
    "text": "So the first pass is to get\nall of the intervals together. Then there's a check. And then the second\npass is to take",
    "start": "1052160",
    "end": "1058040"
  },
  {
    "text": "those backward\nintervals, in this case, and call out those commands.",
    "start": "1058040",
    "end": "1063650"
  },
  {
    "text": "So that's what I\nmean by two passes. Yeah, please. AUDIENCE: You don't\nnecessarily need to count them,",
    "start": "1063650",
    "end": "1069504"
  },
  {
    "text": "the 4 and 3 because whichever\norientation interval comes",
    "start": "1069504",
    "end": "1076240"
  },
  {
    "text": "second is always going-- SRINI DEVADAS: Brilliant. Brilliant. So I was going to say--",
    "start": "1076240",
    "end": "1083250"
  },
  {
    "text": "if you didn't\nunderstand what Ganatra said, wonderful because then\nyou can think about the question",
    "start": "1083250",
    "end": "1090930"
  },
  {
    "text": "I'm going to ask and\nignore what he said. And then we'll get to, I\nguess, the more efficient code.",
    "start": "1090930",
    "end": "1100360"
  },
  {
    "text": "But what I was going to ask was,\nis there a way that I'm looking at this, and I'm just going--\nand I'm going to just start",
    "start": "1100360",
    "end": "1107580"
  },
  {
    "text": "calling out by-- the moment I see that there's\nan interval, the moment I see--",
    "start": "1107580",
    "end": "1114730"
  },
  {
    "text": "this is an interval. And I'm going to make\na call with respect",
    "start": "1114730",
    "end": "1120000"
  },
  {
    "text": "to whether I'm going to\ncall out a command or not.",
    "start": "1120000",
    "end": "1125040"
  },
  {
    "text": "And I'm going to do this in\none pass through this array.",
    "start": "1125040",
    "end": "1130830"
  },
  {
    "text": "I want to do this in one\npass through the array. I want to look at this, and I\nsay, I see the interval 0, 0.",
    "start": "1130830",
    "end": "1138750"
  },
  {
    "text": "Is that going to\nbe something that I need to worry about in\nterms of that person",
    "start": "1138750",
    "end": "1144360"
  },
  {
    "text": "having to flip his cap? And then I see B, B. And I say,\noh, the interval is 1 comma 2.",
    "start": "1144360",
    "end": "1153189"
  },
  {
    "text": "Is that something I'm\ngoing to have to deal with in terms of a command? And so someone else\nother than Ganatra,",
    "start": "1153189",
    "end": "1161580"
  },
  {
    "text": "tell me if there's a\none-pass algorithm. And explain to me why you\ncan do this in one pass",
    "start": "1161580",
    "end": "1170040"
  },
  {
    "text": "through the array. And just in terms of\ncode, I'll preview this. The first algorithm needs--",
    "start": "1170040",
    "end": "1177540"
  },
  {
    "text": "according to my coding,\nwhich, isn't great-- 26 lines of code. The second one needs\neight lines of code.",
    "start": "1177540",
    "end": "1183809"
  },
  {
    "text": "So yeah, go ahead. AUDIENCE: So after you\nsee the first interval, you know that the second\ninterval at the very least",
    "start": "1183810",
    "end": "1190890"
  },
  {
    "text": "is going to have the same number\nof commands as the first one. So you might as well always\ngo with the second one.",
    "start": "1190890",
    "end": "1196750"
  },
  {
    "text": "So once you've\nidentified what type the first interval is, you\niterate through the list",
    "start": "1196750",
    "end": "1201900"
  },
  {
    "text": "seeing-- and once you identify the\nfirst and second intervals, you iterate through every\ntype of the second interval",
    "start": "1201900",
    "end": "1208750"
  },
  {
    "text": "and do a command for that. SRINI DEVADAS: That's\nabsolutely right. What was your name? AUDIENCE: Kevin. SRINI DEVADAS: Kevin? So you had it right.",
    "start": "1208750",
    "end": "1215130"
  },
  {
    "text": "And Kevin has it right, as well. So the observation\nhere is actually--",
    "start": "1215130",
    "end": "1221220"
  },
  {
    "text": "it was said a little bit\ndifferently by Kevin, but I'm going to say it\na little bit differently.",
    "start": "1221220",
    "end": "1226290"
  },
  {
    "text": "The observation is\nsimply that if you look at the very\nfirst orientation,",
    "start": "1226290",
    "end": "1236860"
  },
  {
    "text": "the very first orientation\nis something which, at best, is going to be a tie.",
    "start": "1236860",
    "end": "1247390"
  },
  {
    "text": "So if you had it ending\nwith 10 people, 0 through 9,",
    "start": "1247390",
    "end": "1253450"
  },
  {
    "text": "then the number of\nforward intervals is the same as the number\nof backwards intervals.",
    "start": "1253450",
    "end": "1260350"
  },
  {
    "text": "And if you went here, obviously,\nthe number of forward intervals is greater than the number\nof backwards intervals.",
    "start": "1260350",
    "end": "1265570"
  },
  {
    "text": "So you really only have to look\nat the first person in line not",
    "start": "1265570",
    "end": "1270955"
  },
  {
    "text": "to determine the\nintervals because when you see the first\nperson in line, you have no idea what\nthe intervals are",
    "start": "1270956",
    "end": "1276115"
  },
  {
    "text": "that are coming after. You have to generate\nthose intervals, so you have to make your\npass through the array.",
    "start": "1276115",
    "end": "1282160"
  },
  {
    "text": "But the first person\nin line gives it away in terms of what\nthe final result is",
    "start": "1282160",
    "end": "1288490"
  },
  {
    "text": "going to be with respect\nto your decision as to what set of commands you're\ngoing to call up.",
    "start": "1288490",
    "end": "1297070"
  },
  {
    "text": "And so because this is an F, you\nbasically say, I'm going to go,",
    "start": "1297070",
    "end": "1302889"
  },
  {
    "text": "and I'm going to make the people\nwith the B's flip their caps.",
    "start": "1302890",
    "end": "1309400"
  },
  {
    "text": "And that's a small observation\nin terms of its insight.",
    "start": "1309400",
    "end": "1319090"
  },
  {
    "text": "But obviously, it's\npotent, in the sense that it's going to give\nyou a one-pass algorithm",
    "start": "1319090",
    "end": "1325330"
  },
  {
    "text": "versus a two-pass algorithm. And as I mentioned,\nit's going to give you a substantial reduction in the\namount of code that you write.",
    "start": "1325330",
    "end": "1333789"
  },
  {
    "text": "So I'm going to show\nyou a bunch of code now. So this is usually how\nthis is going to go,",
    "start": "1333790",
    "end": "1339010"
  },
  {
    "text": "by the way, this entire class. And this is kind of\nmy way of teaching,",
    "start": "1339010",
    "end": "1345850"
  },
  {
    "text": "at least this type of material\nthat's algorithmic and has data structures and so on. I like explaining to\npeople what they're",
    "start": "1345850",
    "end": "1353080"
  },
  {
    "text": "going to see in the code without\nhaving to deal with Python syntax and worrying about\nwhether it's while loops",
    "start": "1353080",
    "end": "1359770"
  },
  {
    "text": "or for loops and things like\nthat and tuples or arrays and things like that. So let's get into that.",
    "start": "1359770",
    "end": "1367330"
  },
  {
    "text": " I don't need this.",
    "start": "1367330",
    "end": "1373530"
  },
  {
    "text": "Ah, good. So the naive algorithm first--",
    "start": "1373530",
    "end": "1380270"
  },
  {
    "text": "so what you see\nhere is an input. So \"caps\" is simply an\ninput Python list that has,",
    "start": "1380270",
    "end": "1389310"
  },
  {
    "text": "as you can see from our\nexamples, the F's and the B's. And so F is Forwards,\nand B is Backwards.",
    "start": "1389310",
    "end": "1394640"
  },
  {
    "text": "And there are a couple\nof different Python lists so you can run them\nwith different things. And all of this hopefully is\nnot at all surprising to you",
    "start": "1394640",
    "end": "1402200"
  },
  {
    "text": "because we went\nthrough all of this in terms of the pseudocode. So the first initialization--",
    "start": "1402200",
    "end": "1408960"
  },
  {
    "text": "and I can just highlight\nthat to make it easy. So that's initialization.",
    "start": "1408960",
    "end": "1414049"
  },
  {
    "text": "And this part here-- the comment sort\nof gives it away-- is you're making a\npass through the array,",
    "start": "1414050",
    "end": "1421610"
  },
  {
    "text": "computing the intervals. And so how do you actually\nget the intervals?",
    "start": "1421610",
    "end": "1427620"
  },
  {
    "text": "And there's one line\nof code that does that. And oh, by the way, if there\nare any questions about Python",
    "start": "1427620",
    "end": "1434750"
  },
  {
    "text": "syntax, just don't feel shy. Just tell me.",
    "start": "1434750",
    "end": "1440179"
  },
  {
    "text": "Ask me a question, and\nI'm happy to explain it. I don't want to explain things\nthat you all know, obviously.",
    "start": "1440180",
    "end": "1446210"
  },
  {
    "text": "But if any one of you doesn't\nknow any particular thing, please don't feel shy.",
    "start": "1446210",
    "end": "1452810"
  },
  {
    "text": "Syntax is something that\nsometimes you even forget. I tend to forget things. So this thing here\nis essentially",
    "start": "1452810",
    "end": "1461210"
  },
  {
    "text": "something that decides on\nwhat the intervals are.",
    "start": "1461210",
    "end": "1466399"
  },
  {
    "text": "And the insight here is simple. You know that this interval\nended when you see something",
    "start": "1466400",
    "end": "1472370"
  },
  {
    "text": "here that is different from\nwhat the previous one is. So that's when you know.",
    "start": "1472370",
    "end": "1477440"
  },
  {
    "text": "So you generate the interval\nwhen you go and find",
    "start": "1477440",
    "end": "1485240"
  },
  {
    "text": "something that is different\nfrom the current location that you're pointing to.",
    "start": "1485240",
    "end": "1490850"
  },
  {
    "text": "So that's really what's\ngoing on out here. In this line, you say, you're\nsetting a \"start\" here.",
    "start": "1490850",
    "end": "1499950"
  },
  {
    "text": "\"Start\" is your counter,\nand remember, \"start\" is getting set again here. Initially, it was set to 0.",
    "start": "1499950",
    "end": "1506519"
  },
  {
    "text": "And if you ever get to the point\nwhere you're looking at \"i,\" it's the next thing\nyou're looking at, and if \"caps start,\" which\nis the start of the interval,",
    "start": "1506519",
    "end": "1513139"
  },
  {
    "text": "is different from \"i,\" it\nmeant that the interval that began with \"start\" ended.",
    "start": "1513140",
    "end": "1518389"
  },
  {
    "text": "And so you\nessentially say, well, that needs to end at i minus 1\nbecause obviously, \"caps start\"",
    "start": "1518390",
    "end": "1523751"
  },
  {
    "text": "is different from \"caps size.\" So this is the end of\nthe interval right here. And this particular\nthing, our interval,",
    "start": "1523751",
    "end": "1531080"
  },
  {
    "text": "is something that includes\nboth these two numbers, so it's not exactly that.",
    "start": "1531080",
    "end": "1536510"
  },
  {
    "text": "But it also includes-- where did my chalk go?",
    "start": "1536510",
    "end": "1543300"
  },
  {
    "text": "It also includes whether\nthis is an F or not. So each of these things has--",
    "start": "1543300",
    "end": "1549909"
  },
  {
    "text": "I'm not going to write it\nout for all of those things-- but has the orientation\ninside of it.",
    "start": "1549909",
    "end": "1557269"
  },
  {
    "text": "So that's what\nyou have out here. That's why we have three\nof these in this tuple. This is a tuple because it's\ngot round brackets around it.",
    "start": "1557270",
    "end": "1566090"
  },
  {
    "text": "I could have made it\na list if I wanted. And so that's essentially\nwhat we have here.",
    "start": "1566090",
    "end": "1572299"
  },
  {
    "text": "And now, here's what happens. In this particular piece of\ncode, when you get to the end",
    "start": "1572300",
    "end": "1579020"
  },
  {
    "text": "and you fall off the end-- so if you just end, then\nthis code essentially",
    "start": "1579020",
    "end": "1588500"
  },
  {
    "text": "skips over and doesn't actually\nput in the last interval because you don't see something.",
    "start": "1588500",
    "end": "1594799"
  },
  {
    "text": "When you come up here and\nyou're off the end of the array, you fall off the\nedge of the array,",
    "start": "1594800",
    "end": "1600320"
  },
  {
    "text": "you don't see a B that\nis different from F. So if you just wrote that code--",
    "start": "1600320",
    "end": "1607100"
  },
  {
    "text": "so it's something that\nI'd say many people would",
    "start": "1607100",
    "end": "1614809"
  },
  {
    "text": "have a quote, \"bug,\"\nwhere they wouldn't add this part of the code here\nbecause they didn't realize",
    "start": "1614810",
    "end": "1621500"
  },
  {
    "text": "this particular\npoint that I made. And so that last interval\ndoesn't get added in.",
    "start": "1621500",
    "end": "1627830"
  },
  {
    "text": "And so you have a\nbit more code here that decides on\nthe last interval.",
    "start": "1627830",
    "end": "1633470"
  },
  {
    "text": "And then you count, and then you\ngo ahead and call the commands.",
    "start": "1633470",
    "end": "1639330"
  },
  {
    "text": "So this all looks good? Yeah, we're good with this? Is there a way that\nI could somehow",
    "start": "1639330",
    "end": "1647580"
  },
  {
    "text": "eliminate these four\nlines of code which are a little bit annoying and\njust do things in the array?",
    "start": "1647580",
    "end": "1654660"
  },
  {
    "text": "How could I, with\na little trick, eliminate those\nfour lines of code?",
    "start": "1654660",
    "end": "1661500"
  },
  {
    "text": "I might need a little bit more\nin, quote, \"pre-processing,\" but how would I eliminate that?",
    "start": "1661500",
    "end": "1666920"
  },
  {
    "text": " Someone else?",
    "start": "1666920",
    "end": "1672364"
  },
  {
    "text": "I'll get to you. Yeah. Go ahead. AUDIENCE: One way is\nyou can check thoroughly you've reached the end of the--",
    "start": "1672364",
    "end": "1679260"
  },
  {
    "text": "the forward is equal\nto the backwards. SRINI DEVADAS: You could\nhave an extra check. What's your name? AUDIENCE: Kanishka. SRINI DEVADAS: Kanishka? So Kanishka says that before\nyou reach the end of the array",
    "start": "1679260",
    "end": "1690306"
  },
  {
    "text": "or when you reach\nthe end of the array, you go ahead and do a check\nthat you've reached the end",
    "start": "1690306",
    "end": "1695591"
  },
  {
    "text": "and generate the interval\ninside of it, which is kind of like moving\nthis code inside of it.",
    "start": "1695591",
    "end": "1701830"
  },
  {
    "text": "So that's reasonable. I'm not sure that's going to be\nas good as the way that I want and which I coded.",
    "start": "1701830",
    "end": "1709000"
  },
  {
    "text": "Think about pre-processing. Think about taking\nthe array-- yeah? AUDIENCE: I guess you could add\na wrong interval at the end.",
    "start": "1709000",
    "end": "1717010"
  },
  {
    "text": "SRINI DEVADAS: You could\nadd on a wrong interval. What was your name? AUDIENCE: Kevin. SRINI DEVADAS: Kevin, too? Just how many Kevins\ndo we have here?",
    "start": "1717010",
    "end": "1724090"
  },
  {
    "text": "So you could do this. So let me show you something\nthat's a little bit more--",
    "start": "1724090",
    "end": "1731960"
  },
  {
    "text": "so that was 26 lines of code. And so this says--",
    "start": "1731960",
    "end": "1737330"
  },
  {
    "text": "this is the line\nthat's interesting. So I had F and B, and so I\ndon't want to add F or B there.",
    "start": "1737330",
    "end": "1743780"
  },
  {
    "text": "But what is convenient\nto do, as it turns out, is to just have something\nthat essentially says,",
    "start": "1743780",
    "end": "1748880"
  },
  {
    "text": "there's an ending point. So you have an explicit end\nto the array that is actually",
    "start": "1748880",
    "end": "1754160"
  },
  {
    "text": "not something that would crash\nif you tried to access it. You had n people in line,\nand now you have effectively",
    "start": "1754160",
    "end": "1760340"
  },
  {
    "text": "n plus 1 people in line. But that n plus one\nperson is a dummy, or you can call them \"end.\"",
    "start": "1760340",
    "end": "1767660"
  },
  {
    "text": "And then if you do\nthat, then that's it. The previous code works.",
    "start": "1767660",
    "end": "1773150"
  },
  {
    "text": "You can just remove\nthose four lines, and it'll all just work\nbecause your F or your B",
    "start": "1773150",
    "end": "1779509"
  },
  {
    "text": "is not equal to \"end.\" So whatever you had at the end--",
    "start": "1779510",
    "end": "1785240"
  },
  {
    "text": "I'm sorry. I'm overloading terms here. Whatever you had at\nthe last element--",
    "start": "1785240",
    "end": "1793400"
  },
  {
    "text": "whether it was a B because\nit ended here or F-- when you equate that\nto \"end,\" you're",
    "start": "1793400",
    "end": "1800150"
  },
  {
    "text": "going to get an inequality. And so that last\ninterval gets generated--",
    "start": "1800150",
    "end": "1805340"
  },
  {
    "text": "so small optimization. Tony Hoare was a very\nfamous computer scientist--",
    "start": "1805340",
    "end": "1810380"
  },
  {
    "text": "said that \"inside\nevery program, there's a smaller program\nwaiting to get out.\"",
    "start": "1810380",
    "end": "1815860"
  },
  {
    "text": "So this is kind of\none of the themes that I'd like to harp on in\nthis class, which is it's",
    "start": "1815860",
    "end": "1823669"
  },
  {
    "text": "nice to write compact code. Usually, if you can\nwrite compact code, there are fewer bugs in it.",
    "start": "1823670",
    "end": "1829502"
  },
  {
    "text": "And you don't want\nto go overboard. You don't want too\nmany subtleties, but it's nice to\nwrite compact code.",
    "start": "1829502",
    "end": "1836280"
  },
  {
    "text": "And so this is a little\nbit more compact. And then finally, here's\nthe one-pass algorithm.",
    "start": "1836280",
    "end": "1845000"
  },
  {
    "text": "So the whole thing, the\n\"pleaseConformonepass,\" is the smarter algorithm\nthat essentially says,",
    "start": "1845000",
    "end": "1855559"
  },
  {
    "text": "look, if I just look at\nthe very first thing, I'm going to be able to\nskip that and then move on.",
    "start": "1855560",
    "end": "1863540"
  },
  {
    "text": "So this is fairly complicated. You know the algorithm.",
    "start": "1863540",
    "end": "1869030"
  },
  {
    "text": "Trying to map that to\nthis code is non-trivial, so we'll spend a\nminute or two on it.",
    "start": "1869030",
    "end": "1874640"
  },
  {
    "text": "But here's how this works.",
    "start": "1874640",
    "end": "1881570"
  },
  {
    "text": "And by the way,\njust to make sure-- ",
    "start": "1881570",
    "end": "1888480"
  },
  {
    "text": "so I've repeated things here. So the optimized algorithm\nfor that particular example",
    "start": "1888480",
    "end": "1894950"
  },
  {
    "text": "produced these first\nthree commands. And then the one-pass\nalgorithm produced",
    "start": "1894950",
    "end": "1900320"
  },
  {
    "text": "exactly the same commands. So this is good to do. It's always nice\nto have a couple",
    "start": "1900320",
    "end": "1906140"
  },
  {
    "text": "of different ways\nof solving a problem because then you\ncan verify things.",
    "start": "1906140",
    "end": "1911990"
  },
  {
    "text": "Anyway, so this piece\nof code is essentially something that does a similar\ntrick to what we had before,",
    "start": "1911990",
    "end": "1921020"
  },
  {
    "text": "in terms of adding\nto the original list,",
    "start": "1921020",
    "end": "1927800"
  },
  {
    "text": "adding an element. But we're not using \"end\" here. We're actually\nsaying, what we want",
    "start": "1927800",
    "end": "1934719"
  },
  {
    "text": "to do because we're going to go\nahead and skip this, anyway-- we know we're going\nto skip the F. So whatever that is, we could\njust sort of add up here.",
    "start": "1934719",
    "end": "1945020"
  },
  {
    "text": "And so that makes it easy. You don't have to worry about\nwhat the actual characters are",
    "start": "1945020",
    "end": "1953810"
  },
  {
    "text": "and cooking up this\n\"end,\" which is different from the F or the\nB because hey, it's",
    "start": "1953810",
    "end": "1958910"
  },
  {
    "text": "possible that people\nmight use whatever they want to represent a\nforward cap or a backward cap.",
    "start": "1958910",
    "end": "1965150"
  },
  {
    "text": "So this is very clean. You go ahead and put\nexactly that over here. You know you're going to skip\nthat interval because you're",
    "start": "1965150",
    "end": "1971809"
  },
  {
    "text": "going to skip the first\ninterval, effectively,",
    "start": "1971810",
    "end": "1976880"
  },
  {
    "text": "because that is what the\nalgorithm allows you to do. And then this part here is\ndoing what we had before.",
    "start": "1976880",
    "end": "1986690"
  },
  {
    "text": "We're not even\ngenerating the intervals. We're just directly\nmaking the commands. So there are no tuples\nin terms of the tuples",
    "start": "1986690",
    "end": "1995390"
  },
  {
    "text": "and the appending of the\nintervals data structure that we had. It's all gone. I'm just going to go ahead\nand fire off these commands.",
    "start": "1995390",
    "end": "2003760"
  },
  {
    "text": "And those commands are\nwritten in kind of a funny way",
    "start": "2003760",
    "end": "2010540"
  },
  {
    "text": "because I'm going\nto go ahead and if I wanted to print\nthese things out,",
    "start": "2010540",
    "end": "2016450"
  },
  {
    "text": "you'd have to do this\nin this funny way. If you're willing to wait\nand collect up the intervals, you can certainly do that.",
    "start": "2016450",
    "end": "2022390"
  },
  {
    "text": "But this is absolutely\nthe most compact code that I could think of,\nand I'm printing a command",
    "start": "2022390",
    "end": "2029350"
  },
  {
    "text": "in two different parts. I'm printing the first part\nof the command that says, people in positions.",
    "start": "2029350",
    "end": "2036970"
  },
  {
    "text": "And that's the start\nof the interval \"i,\" and I'm just using\na Python construct.",
    "start": "2036970",
    "end": "2042710"
  },
  {
    "text": "This \"end\" here is something\nthat the print command can recognize.",
    "start": "2042710",
    "end": "2048429"
  },
  {
    "text": "And this simply says,\ndon't give me a new line. I want to print it exactly. As you saw from\nwhen I ran the code,",
    "start": "2048429",
    "end": "2054129"
  },
  {
    "text": "the printing was exactly the\nsame as the original algorithm. And so this \"end\" simply\nsays, don't print a new line",
    "start": "2054130",
    "end": "2061780"
  },
  {
    "text": "at the end of\npeople in positions, whatever this number is. Call it 7.",
    "start": "2061780",
    "end": "2066969"
  },
  {
    "text": "And you don't\nprint the new line. And then you have a space\nhere because you didn't",
    "start": "2066969",
    "end": "2072520"
  },
  {
    "text": "print a new line or a space. And you go through i minus\n1, which is exactly the same",
    "start": "2072520",
    "end": "2077770"
  },
  {
    "text": "as we had before. You only discover that the\nend of an interval after you see the person that\ncomes after the interval.",
    "start": "2077770",
    "end": "2086888"
  },
  {
    "text": "So you have to go\nback to i minus 1. So this makes sense? Any questions about this code?",
    "start": "2086889",
    "end": "2093250"
  },
  {
    "text": "Yeah, go ahead. AUDIENCE: So the\nfirst line, like you said, if we're going\nto move the first-- SRINI DEVADAS: Not\nmove, duplicate--",
    "start": "2093250",
    "end": "2100249"
  },
  {
    "text": "AUDIENCE: Duplicate the first-- SRINI DEVADAS: Yeah. So the plus there\nis a concatenation, and you have two lists.",
    "start": "2100249",
    "end": "2105990"
  },
  {
    "text": "\"Caps\" is a list. And when you use a plus\noperator in Python,",
    "start": "2105990",
    "end": "2111170"
  },
  {
    "text": "you can only add things\nthat are of the same type. And so \"caps\" is a\nlist, and \"cap 0\"",
    "start": "2111170",
    "end": "2117990"
  },
  {
    "text": "is an element of the list. And so you need to\nmake it a list in order to use the plus operator.",
    "start": "2117990",
    "end": "2123342"
  },
  {
    "text": "There are also other things\nyou could do using a pen, for example. So you could take that line,\nand you could do \"caps start\"",
    "start": "2123342",
    "end": "2128990"
  },
  {
    "text": "at \"pen\" \"cap 0.\" And you wouldn't need all\nof the square brackets, but that's just\nneither here nor there.",
    "start": "2128990",
    "end": "2134330"
  },
  {
    "text": "But I'm obviously not answering\nyour question, so go ahead. Yeah. AUDIENCE: So I was\ngoing to say that we skip the first interval.",
    "start": "2134330",
    "end": "2140435"
  },
  {
    "text": "And then we flip all the\nsecond-type orientation. SRINI DEVADAS: That's right. AUDIENCE: But here, we're\nfocusing on the first element.",
    "start": "2140435",
    "end": "2146210"
  },
  {
    "text": "Why--  SRINI DEVADAS: Ah, but\nthat's OK because remember,",
    "start": "2146210",
    "end": "2152640"
  },
  {
    "text": "the if statement is going\nto skip this one, too.",
    "start": "2152640",
    "end": "2157829"
  },
  {
    "text": "So if I had two F's\nin the beginning-- I think your question\nis, what would happen if I had two F's or\nthree F's in the beginning?",
    "start": "2157830",
    "end": "2164905"
  },
  {
    "text": "So I'm going to go ahead, and\nfirst thing I'm going to do is I'm going to put\nan F at the end here, and then maybe there's\na bunch of stuff.",
    "start": "2164905",
    "end": "2171310"
  },
  {
    "text": "But then the nice thing is\nthat I'll skip this F, too, because the not equal\nto is not going to fire.",
    "start": "2171310",
    "end": "2180780"
  },
  {
    "text": "The next line, the \"caps\ni not equal to i minus 1,\" this is going to be equal to.",
    "start": "2180780",
    "end": "2187512"
  },
  {
    "text": "So I'm going to go ahead\nand go to the next iteration of the loop. That makes sense? Did people understand\nFadi's question?",
    "start": "2187512",
    "end": "2194770"
  },
  {
    "text": "It was a good question. So the question was, you\nskipped the first one.",
    "start": "2194770",
    "end": "2201630"
  },
  {
    "text": "But what is making you skip\nthis one because you want to skip the first interval? And so that if statement\nis making you do that.",
    "start": "2201630",
    "end": "2210580"
  },
  {
    "text": "Good. So as you can see, even a\nfairly straightforward puzzle-- this is the simplest puzzle\nwe're going to do here",
    "start": "2210580",
    "end": "2215670"
  },
  {
    "text": "is the first one. And there are nuances\nassociated with how you solve it",
    "start": "2215670",
    "end": "2221830"
  },
  {
    "text": "but also how you code it. And this is kind of-- like I said, this was my\neureka moment a few years ago,",
    "start": "2221830",
    "end": "2232960"
  },
  {
    "text": "where I said, I\nthink the way you want to teach\nprogramming, at least some aspects of programming,\nis in this fashion.",
    "start": "2232960",
    "end": "2241560"
  },
  {
    "text": "Anyway, good. So we're done with this. Any questions about this puzzle?",
    "start": "2241560",
    "end": "2247540"
  },
  {
    "text": "All right. Good. ",
    "start": "2247540",
    "end": "2256049"
  }
]