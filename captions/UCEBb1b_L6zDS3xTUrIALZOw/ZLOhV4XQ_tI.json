[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high-quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13339"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13340",
    "end": "21419"
  },
  {
    "start": "21000",
    "end": "484000"
  },
  {
    "text": "PROFESSOR: So finally,\nit's our last recitation. And finally, it's my favorite\ntopic-- cryptography--",
    "start": "21420",
    "end": "29350"
  },
  {
    "text": "because I work in this area. So I have probably\na little bit more",
    "start": "29350",
    "end": "35630"
  },
  {
    "text": "than what's required\nto tell you. So this recitation is\naccess more primitives,",
    "start": "35630",
    "end": "51930"
  },
  {
    "text": "so we'll introduce several\nmore primitives that may be useful to your\nfuture work or study.",
    "start": "51930",
    "end": "59710"
  },
  {
    "text": "And so the first one\nis digital signature. ",
    "start": "59710",
    "end": "71280"
  },
  {
    "text": "So we have briefly\nmentioned digital signatures in the lecture, but mainly\nas an application of Hatch,",
    "start": "71280",
    "end": "79710"
  },
  {
    "text": "so now I'm going to introduce\nit as a standalone primitive. ",
    "start": "79710",
    "end": "86500"
  },
  {
    "text": "So as you may have\nalready known, digital signature is used for\nverifying message authenticity.",
    "start": "86500",
    "end": "95330"
  },
  {
    "text": "And it's a pair of\nfunction sign and verify.",
    "start": "95330",
    "end": "107840"
  },
  {
    "text": "So sign takes a secret\nkey and the message.",
    "start": "107840",
    "end": "114090"
  },
  {
    "text": "It outputs a signature,\nwhich we refer to as sigma.",
    "start": "114090",
    "end": "123319"
  },
  {
    "text": "And verify takes a public key,\na message, and a signature,",
    "start": "123320",
    "end": "129570"
  },
  {
    "text": "and outputs on\neither true or false. It either accepts the\nsignature or reject.",
    "start": "129570",
    "end": "138000"
  },
  {
    "text": "So we use secret key to sign\nand public key to verify. That means so if I want\nto send the message,",
    "start": "138000",
    "end": "145469"
  },
  {
    "text": "I should be the only one\nwho was able to sign it. And everyone can verify\nthat this message indeed",
    "start": "145470",
    "end": "153510"
  },
  {
    "text": "comes from me. So what properties do we\nwant from digital signatures?",
    "start": "153510",
    "end": "161590"
  },
  {
    "start": "161590",
    "end": "168849"
  },
  {
    "text": "Any thoughts on that? ",
    "start": "168850",
    "end": "175298"
  },
  {
    "text": "Go ahead. AUDIENCE: [INAUDIBLE]\ngiven the signature",
    "start": "175298",
    "end": "180632"
  },
  {
    "text": "in a message [INAUDIBLE]\nto get the secret key. PROFESSOR: OK, that's\ndefinitely one.",
    "start": "180632",
    "end": "185860"
  },
  {
    "text": "I'll put a more\ngeneral description of what you just said.",
    "start": "185860",
    "end": "191400"
  },
  {
    "text": " Any other answers?",
    "start": "191400",
    "end": "196930"
  },
  {
    "text": " AUDIENCE: And only one\nsignature [INAUDIBLE],",
    "start": "196930",
    "end": "205277"
  },
  {
    "text": "like on any message coming out,\ncan you have one signature? PROFESSOR: OK, so\nwhat's your name?",
    "start": "205277",
    "end": "211690"
  },
  {
    "text": "AUDIENCE: Hugo. PROFESSOR: Hugo says a message\nshould only have one signature.",
    "start": "211690",
    "end": "218099"
  },
  {
    "text": "Let's think about\nwhether that's necessary. So if my algorithm\nis a randomized one",
    "start": "218100",
    "end": "224750"
  },
  {
    "text": "that for the same\nmessage I output many possible signatures.",
    "start": "224750",
    "end": "230430"
  },
  {
    "text": "So why is that bad?  So for any of\nthem, they will all",
    "start": "230430",
    "end": "236350"
  },
  {
    "text": "verify if that's how\nmy algorithm works. I think that's fine.",
    "start": "236350",
    "end": "242040"
  },
  {
    "text": "That's OK. It's not a bad thing. Actually, randomized signature\nis considered more secure.",
    "start": "242040",
    "end": "248416"
  },
  {
    "text": "They are less efficient. ",
    "start": "248416",
    "end": "259288"
  },
  {
    "text": "Any other thoughts? ",
    "start": "259288",
    "end": "265189"
  },
  {
    "text": "AUDIENCE: Do you care\nabout speed at all, like how long it takes\nto sign and verify? PROFESSOR: That's\ndefinitely one,",
    "start": "265189",
    "end": "271270"
  },
  {
    "text": "but we haven't got\nany scheme yet, so we care about\nfunctionality first.",
    "start": "271270",
    "end": "278280"
  },
  {
    "text": "There are faster\nsignatures and slower ones. So the first one is\nactually very trivial.",
    "start": "278280",
    "end": "287280"
  },
  {
    "text": "We first want correctness. What does that mean? ",
    "start": "287280",
    "end": "294330"
  },
  {
    "text": "That means if this\nsigma is indeed generated by the\nsign function that",
    "start": "294330",
    "end": "300870"
  },
  {
    "text": "verified that the output 1. Otherwise, they\nshould put output 0. That's actually the first\nand the most basic property",
    "start": "300870",
    "end": "308900"
  },
  {
    "text": "we want.  I don't want to write it\nbecause it's-- so the other one.",
    "start": "308901",
    "end": "317590"
  },
  {
    "text": " So your answer is very\nclose that you don't",
    "start": "317590",
    "end": "322990"
  },
  {
    "text": "want to extract the secret key. But to make it more\ngeneral, what we really want",
    "start": "322990",
    "end": "329010"
  },
  {
    "text": "is unforgeability. ",
    "start": "329010",
    "end": "336910"
  },
  {
    "text": "That means if I have the\nsecret key and someone else-- an adversary, who does\nnot have the secret key--",
    "start": "336910",
    "end": "343430"
  },
  {
    "text": "should not be able to sign the\nmessage to pretend to be me. ",
    "start": "343430",
    "end": "351760"
  },
  {
    "text": "So they should not be able to\nproduce m star sigma star, such",
    "start": "351760",
    "end": "360720"
  },
  {
    "text": "that it verifies. ",
    "start": "360720",
    "end": "368841"
  },
  {
    "text": "Make sense?  So what you said is a\nspecial case of this.",
    "start": "368841",
    "end": "374650"
  },
  {
    "text": "So if they can extract, somehow\nextract the secret key, then, of course they can\nforge my signature",
    "start": "374650",
    "end": "381889"
  },
  {
    "text": "on any other messages. But we do want to also prevent\nattack where they cannot",
    "start": "381890",
    "end": "389320"
  },
  {
    "text": "extract the secret key, but\nthey somehow can forge another signature.",
    "start": "389320",
    "end": "394380"
  },
  {
    "text": "But usually we want to\nmake the adversary more",
    "start": "394380",
    "end": "399420"
  },
  {
    "text": "powerful because then we\nhave higher confidence that we won't be attacked.",
    "start": "399420",
    "end": "406960"
  },
  {
    "text": "So adversary is totally\nreasonable for it to see a bunch of\nmessages from me.",
    "start": "406960",
    "end": "413860"
  },
  {
    "start": "413860",
    "end": "420240"
  },
  {
    "text": "Because I am signing messages\nand output it to the world. So an adversary may have seen\nsome of the message, signature",
    "start": "420240",
    "end": "428300"
  },
  {
    "text": "pairs, I generated. But still we do not want\nto create a forgery.",
    "start": "428300",
    "end": "435050"
  },
  {
    "text": "Now how is that defined? Because see you can definitely\nsend one of these back.",
    "start": "435050",
    "end": "440440"
  },
  {
    "text": "That's a valid message\nsignature pair. So our unforgeability\nrequirement",
    "start": "440440",
    "end": "446110"
  },
  {
    "text": "is defined to be--\nhe should not be able to send such a\npair where m star is",
    "start": "446110",
    "end": "454250"
  },
  {
    "text": "different from any message\nhe has already seen. ",
    "start": "454250",
    "end": "461730"
  },
  {
    "text": "There is no way to\nprevent the adversary from sending one of\nthe message signature",
    "start": "461730",
    "end": "467259"
  },
  {
    "text": "pairs he has seen before. ",
    "start": "467260",
    "end": "477350"
  },
  {
    "text": "So far, pretty straightforward. ",
    "start": "477350",
    "end": "484080"
  },
  {
    "start": "484000",
    "end": "934000"
  },
  {
    "text": "Now, how can we get\ndigital signatures? So in the early days,\nresearchers-- and it's",
    "start": "484080",
    "end": "493590"
  },
  {
    "text": "actually great\ncomputer scientists-- they proposed a\ndigital signature can",
    "start": "493590",
    "end": "501720"
  },
  {
    "text": "be implemented as the inverse\nof public key encryption.",
    "start": "501720",
    "end": "512880"
  },
  {
    "start": "512880",
    "end": "519460"
  },
  {
    "text": "What does that mean? So I'll use RSA as the example. ",
    "start": "519460",
    "end": "527279"
  },
  {
    "text": "So RSA encryption\nis m to the e mod n.",
    "start": "527280",
    "end": "537720"
  },
  {
    "text": "The encryption is\nc to the d mod n.",
    "start": "537720",
    "end": "542810"
  },
  {
    "start": "542810",
    "end": "551380"
  },
  {
    "text": "So the first attempt\nis we will just use this as our sign\nfunction and use",
    "start": "551380",
    "end": "562140"
  },
  {
    "text": "this as our verify function.",
    "start": "562140",
    "end": "567150"
  },
  {
    "text": "So now the symbol is a\nlittle bit confusing. So now I'm signing a\nmessage [INAUDIBLE] c.",
    "start": "567150",
    "end": "573740"
  },
  {
    "text": " Let me actually change it. This is RSA encryption.",
    "start": "573740",
    "end": "579519"
  },
  {
    "text": "I'm going to transform\nit into signature scheme where sign signs a message,\nand verify, raise the signature",
    "start": "579520",
    "end": "587990"
  },
  {
    "text": "sigma to the power of e,\nand checks whether or not",
    "start": "587990",
    "end": "597190"
  },
  {
    "text": "I get back my message. ",
    "start": "597190",
    "end": "603589"
  },
  {
    "text": "So this actually\nmakes a lot of sense. Why? Because think of\nm as a ciphertext.",
    "start": "603590",
    "end": "612889"
  },
  {
    "text": "Then if I decrypt it,\nand then re-encrypt it,",
    "start": "612890",
    "end": "618500"
  },
  {
    "text": "I should get back my ciphertext. So correctness-- we\nhave correctness.",
    "start": "618500",
    "end": "623550"
  },
  {
    "text": " And why is it unforgeable?",
    "start": "623550",
    "end": "629630"
  },
  {
    "text": "Because an attacker does\nnot have the secret key, so he should not be able\nto decrypt this m here.",
    "start": "629630",
    "end": "637370"
  },
  {
    "text": " He cannot run this algorithm. ",
    "start": "637370",
    "end": "646040"
  },
  {
    "text": "That's the reasoning behind it. So far so good? ",
    "start": "646040",
    "end": "653630"
  },
  {
    "text": "But, unfortunately,\nit is broken.",
    "start": "653630",
    "end": "658850"
  },
  {
    "text": "And so I'll give you, say,\nseven minutes to think about it.",
    "start": "658850",
    "end": "665350"
  },
  {
    "text": "Can you come up with\nan attack, a forgery? You can see a bunch of messages\nand then output a forgery",
    "start": "665350",
    "end": "674080"
  },
  {
    "text": "for a message you\nhaven't seen before. ",
    "start": "674080",
    "end": "703649"
  },
  {
    "text": "So is the algorithm clear? ",
    "start": "703650",
    "end": "754186"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: Can you speak louder? AUDIENCE: Is it just the\nproduct of any messages?",
    "start": "754186",
    "end": "760790"
  },
  {
    "text": "PROFESSOR: Exactly. So if an adversary had\nseen a bunch of messages--",
    "start": "760790",
    "end": "765990"
  },
  {
    "text": "because RSA has this sometimes\ngood, sometimes nice, sometimes bad property, that is\nmultiplicative, homomorphic,",
    "start": "765990",
    "end": "776680"
  },
  {
    "text": "or to use a less fancy\nword-- malleable. So if they, an adversary,\nsees this message,",
    "start": "776680",
    "end": "784529"
  },
  {
    "text": "it can set m star\nto be m1 times m2",
    "start": "784530",
    "end": "789640"
  },
  {
    "text": "and sigma star to\nsigma 1 times sigma 2.",
    "start": "789640",
    "end": "795700"
  },
  {
    "text": "You can check. This is a valid signature,\nmessage signature pair. ",
    "start": "795700",
    "end": "804380"
  },
  {
    "text": "You take this entire\nthing raised to d. They are raised to d\nindividually and then",
    "start": "804380",
    "end": "809820"
  },
  {
    "text": "multiply together, and that's\nexactly this message here. ",
    "start": "809820",
    "end": "817319"
  },
  {
    "text": "Attack one. OK. There's actually another attack. ",
    "start": "817320",
    "end": "823800"
  },
  {
    "text": "That's even simpler and\ntells you this scheme is even more broken.",
    "start": "823800",
    "end": "829879"
  },
  {
    "start": "829880",
    "end": "837020"
  },
  {
    "text": "So all I want to do is\nto come up with a sigma when it's raised to\ne, that's equal to m.",
    "start": "837020",
    "end": "843689"
  },
  {
    "text": "So I'm going to\nselect the sigma, compute, m sigma\nraised to e, because e",
    "start": "843690",
    "end": "855850"
  },
  {
    "text": "is my public key, mod m. I can do that. And then output sigma\nm-- oh sorry, m sigma.",
    "start": "855850",
    "end": "862915"
  },
  {
    "text": " I select the signature\nfirst, and I raise it",
    "start": "862915",
    "end": "868990"
  },
  {
    "text": "to the power of e. I get a very strange message,\nbut it doesn't matter. That's my forgery.",
    "start": "868990",
    "end": "874740"
  },
  {
    "start": "874740",
    "end": "882140"
  },
  {
    "text": "OK, so now you can see\nthis scheme is basically totally broken.",
    "start": "882140",
    "end": "887340"
  },
  {
    "text": "But they actually\ncome from our, well, several renown scientists. But why is that a case?",
    "start": "887340",
    "end": "892730"
  },
  {
    "text": "Because actually that\ndefinition didn't exist when they were\ntrying to when they",
    "start": "892730",
    "end": "897932"
  },
  {
    "text": "were working on this problem.  And so that definition\nlooks obvious today,",
    "start": "897932",
    "end": "904670"
  },
  {
    "text": "but it's actually\nnot obvious at all. And I think this algorithm\ncame in the 70s, '78.",
    "start": "904670",
    "end": "913740"
  },
  {
    "text": "And in '82,\nGoldwasser and Micali, two professors from MIT,\nproposed the definition",
    "start": "913740",
    "end": "919250"
  },
  {
    "text": "for signature encryption\nand basically everything in cryptography. And they won another\nTuring Award for that.",
    "start": "919250",
    "end": "924590"
  },
  {
    "text": " OK, so let's try to fix it. ",
    "start": "924590",
    "end": "937570"
  },
  {
    "text": "Any ideas? ",
    "start": "937570",
    "end": "942760"
  },
  {
    "text": "We do not want to\nchange the framework. Let's still use RSA and combine\nit with some other primitive",
    "start": "942760",
    "end": "953670"
  },
  {
    "text": "you have seen to try to fix it. ",
    "start": "953670",
    "end": "988563"
  },
  {
    "text": "What do we want to do? We want to break this\nmultiplicative property. ",
    "start": "988564",
    "end": "997190"
  },
  {
    "text": "And we want to break this, this\nstep, whatever it's called.",
    "start": "997190",
    "end": "1002340"
  },
  {
    "text": " Go ahead. AUDIENCE: Can we\nchange the n, maybe?",
    "start": "1002340",
    "end": "1010600"
  },
  {
    "text": "PROFESSOR: Change this n? AUDIENCE: Yeah. PROFESSOR: Right now,\njust to remind you, it's a product of\ntwo primes, OK, pq.",
    "start": "1010600",
    "end": "1017642"
  },
  {
    "text": "It's a product of two primes. It's how RSA works. What's your idea? Go ahead.",
    "start": "1017642",
    "end": "1022669"
  },
  {
    "text": "AUDIENCE: Before it\nraised to the power, we can get the hash\nfunction of it.",
    "start": "1022669",
    "end": "1028119"
  },
  {
    "text": "PROFESSOR: Exactly.  Let's just make a small change.",
    "start": "1028119",
    "end": "1035220"
  },
  {
    "text": "So sign will be hash\nof m, raised to d.",
    "start": "1035220",
    "end": "1041619"
  },
  {
    "text": "And verify will be-- just\ncheck whether hash of m",
    "start": "1041619",
    "end": "1050130"
  },
  {
    "text": "equals signature is to e. ",
    "start": "1050130",
    "end": "1060710"
  },
  {
    "text": "This indeed fixes these attacks. Why? Because now you need-- well,\nif you do this-- hash of m",
    "start": "1060710",
    "end": "1068700"
  },
  {
    "text": "and 1 times hash of m2 is not\ngoing to be hash of m star because hash is supposed\nto be [INAUDIBLE] random.",
    "start": "1068700",
    "end": "1076450"
  },
  {
    "text": "That's not going to work. And here, what\nthe attacker needs",
    "start": "1076450",
    "end": "1081920"
  },
  {
    "text": "to do is to find hash of m, such\nthat it's sigma raised to e.",
    "start": "1081920",
    "end": "1091360"
  },
  {
    "text": "It can still do\nthis, but it does not know what this message is\nbecause of the one-wayness",
    "start": "1091360",
    "end": "1098299"
  },
  {
    "text": "of hash function. If we use a good\nhash function there, then it indeed fixes\nboth the attacks.",
    "start": "1098300",
    "end": "1105490"
  },
  {
    "text": "But we have seen the lecture\nthat this hash function also needs to be collision resistant.",
    "start": "1105490",
    "end": "1110750"
  },
  {
    "text": "Remember that? A question? AUDIENCE: Isn't\nthe message public? PROFESSOR: Yeah, the\nmessage-- oh, OK.",
    "start": "1110750",
    "end": "1120639"
  },
  {
    "text": "Good point. ",
    "start": "1120640",
    "end": "1127670"
  },
  {
    "text": "Oh, no, but, OK, you are talking\nabout this attack, right? So the attacker needs to\nfind the public message,",
    "start": "1127671",
    "end": "1133570"
  },
  {
    "text": "but all he can do is select\nthe sigma, and raise it to e. That's going to\nbe its hash of m.",
    "start": "1133570",
    "end": "1139640"
  },
  {
    "text": "And then he cannot figure\nout where this m is. ",
    "start": "1139640",
    "end": "1146389"
  },
  {
    "text": "But what about the other way? AUDIENCE: I mean, if\nhe has two messages, he can still get m star,\nand then get hash of m star.",
    "start": "1146389",
    "end": "1154370"
  },
  {
    "text": "PROFESSOR: OK, so he\nthen he gets, has of m1. He gets hash of m2. But you need to find the\nm star, such that its hash",
    "start": "1154370",
    "end": "1161020"
  },
  {
    "text": "is the multiplication\nof these two. And, yeah, he does not know\nhow to find that message. ",
    "start": "1161020",
    "end": "1173530"
  },
  {
    "text": "So if the hash is not\nmultiplicative, one-way, and collision\nresistant, then it seems",
    "start": "1173530",
    "end": "1180410"
  },
  {
    "text": "that we have fixed all\nthe attacks we know. However, how do we know\nthere are no other attacks?",
    "start": "1180410",
    "end": "1188680"
  },
  {
    "text": "So actually, indeed,\nthis is a good idea. We have several\nnational standards",
    "start": "1188680",
    "end": "1195730"
  },
  {
    "text": "that just use this but\nslightly differently. I can-- this is just\nfor your information.",
    "start": "1195730",
    "end": "1201915"
  },
  {
    "start": "1201915",
    "end": "1208870"
  },
  {
    "text": "So there's a standard called\n[? NC, ?] whatever-- X93.1.",
    "start": "1208870",
    "end": "1219570"
  },
  {
    "text": "It uses RSA, this\nword padding, so it",
    "start": "1219570",
    "end": "1234179"
  },
  {
    "text": "takes the hash of the message\nand pad with this hex stream,",
    "start": "1234180",
    "end": "1239770"
  },
  {
    "text": "and prepended and append\nanother hex stream. Why do they do that?",
    "start": "1239770",
    "end": "1245748"
  },
  {
    "text": "They don't know\neither, but they just think it's probably more\nsecure than only using a hash.",
    "start": "1245749",
    "end": "1251686"
  },
  {
    "text": "There's another\nstandard that has a different steam and a\ndifference stream here, and it doesn't matter. ",
    "start": "1251686",
    "end": "1260140"
  },
  {
    "text": "So that's indeed a weakness\nof these types of approaches. So their security is\nwhat we call ad hoc.",
    "start": "1260140",
    "end": "1269240"
  },
  {
    "text": "We do not know\nhow to break them. But we do not know how to\nprove they are secure either. ",
    "start": "1269240",
    "end": "1276000"
  },
  {
    "text": "Yet, that's what\npeople do in practice.  So, unfortunately, that's\nall I can tell you today,",
    "start": "1276000",
    "end": "1284255"
  },
  {
    "text": "so how not to construct\nthe digital signature. I cannot tell you how to\nconstruct the secure digital",
    "start": "1284255",
    "end": "1290210"
  },
  {
    "text": "signature because that's out\nof the scope of this class. And it's a major\ntopic in cryptography.",
    "start": "1290210",
    "end": "1296315"
  },
  {
    "start": "1296315",
    "end": "1304690"
  },
  {
    "text": "Any questions so far? ",
    "start": "1304691",
    "end": "1312821"
  },
  {
    "text": "Go ahead. AUDIENCE: The hash function\nhere is the one way, yeah? PROFESSOR: Yes, it's one-way,\ncollision resistance, and--",
    "start": "1312822",
    "end": "1321091"
  },
  {
    "text": "AUDIENCE: So what is the\nuse of using the RSA? Couldn't we just use the\nonly hash function then? ",
    "start": "1321092",
    "end": "1329100"
  },
  {
    "text": "PROFESSOR: OK, good question. So, OK, let's be clear\nwhat you're saying.",
    "start": "1329100",
    "end": "1334725"
  },
  {
    "text": "AUDIENCE: OK, never mind. PROFESSOR: Can you\nanswer your own question? AUDIENCE: So my\nquestion was, well, why do we have to use the RSA?",
    "start": "1334725",
    "end": "1340351"
  },
  {
    "text": "Why, when we have\nthe hatch function? You want me-- so [INAUDIBLE]\ncouldn't create the forgery.",
    "start": "1340352",
    "end": "1350684"
  },
  {
    "text": "[INAUDIBLE] PROFESSOR: How does\nit create a forgery? Just answer your own question. Let everyone else know.",
    "start": "1350684",
    "end": "1356540"
  },
  {
    "text": "Maybe they have\nthe same question. So answer your own question.",
    "start": "1356540",
    "end": "1362208"
  },
  {
    "text": "AUDIENCE: So my answer is\nso adversary can't just choose random message and\nhash it and [INAUDIBLE].",
    "start": "1362208",
    "end": "1368700"
  },
  {
    "text": "PROFESSOR: Yeah. What's the problem? Problem is that a hash\nfunction is a public function that everybody can compute.",
    "start": "1368700",
    "end": "1374240"
  },
  {
    "text": "So the attacker just chooses\na message, compute as hash, so using a hash is\nnot a signature.",
    "start": "1374240",
    "end": "1379260"
  },
  {
    "text": "But good point. I'm actually coming to that. So far we have seen three\nmajor primitives-- private key",
    "start": "1379260",
    "end": "1389980"
  },
  {
    "text": "encryption, public\nkey encryption,",
    "start": "1389980",
    "end": "1398030"
  },
  {
    "text": "and digital signature. ",
    "start": "1398030",
    "end": "1404870"
  },
  {
    "text": "So if we categorize\nthem a little bit-- so these two are asymmetric key.",
    "start": "1404870",
    "end": "1413940"
  },
  {
    "text": "They are public\nkey and secret key. This one is symmetric key. ",
    "start": "1413940",
    "end": "1420149"
  },
  {
    "text": "And these two are for secrecy. ",
    "start": "1420150",
    "end": "1429580"
  },
  {
    "text": "They are trying to\nhide the message. And this one is for integrity.",
    "start": "1429580",
    "end": "1435910"
  },
  {
    "text": " Meaning, the message is\nwhat the sender sends.",
    "start": "1435910",
    "end": "1444179"
  },
  {
    "text": "So you can see we are\nmissing one primitive here. What if the two\nparties, they do share",
    "start": "1444180",
    "end": "1450530"
  },
  {
    "text": "a secret key, and\none party wants to verify the other party?",
    "start": "1450530",
    "end": "1455820"
  },
  {
    "text": "The other message indeed does\ncome from the other party. So indeed we do have\na primitive for that.",
    "start": "1455820",
    "end": "1462120"
  },
  {
    "text": "It's called message\nauthentication code.",
    "start": "1462120",
    "end": "1469640"
  },
  {
    "text": "So its definition is\nbasically exactly the same as digital signature.",
    "start": "1469640",
    "end": "1475370"
  },
  {
    "text": "I'm just going to\nchange it here. Except that it has only one key.",
    "start": "1475370",
    "end": "1482145"
  },
  {
    "text": " So the sign function\nis replaced by a MAC.",
    "start": "1482145",
    "end": "1490440"
  },
  {
    "text": "And there's no notion of\nsecret key and public key. We have only one key. And how do we verify?",
    "start": "1490440",
    "end": "1497710"
  },
  {
    "text": "OK, so verify function\nbasically just becomes the other\nguy also recomputes",
    "start": "1497710",
    "end": "1505110"
  },
  {
    "text": "the MAC of the\nmessage and checks whether that's the signature. ",
    "start": "1505110",
    "end": "1512810"
  },
  {
    "text": "So verifier just to recompute\nand compare correctness--",
    "start": "1512810",
    "end": "1528700"
  },
  {
    "text": "we also want correctness. We also want unforgeability\nAnd it's defined in exactly the same way. ",
    "start": "1528700",
    "end": "1538410"
  },
  {
    "text": "Now, actually, I would have\nasked this question here--",
    "start": "1538410",
    "end": "1543810"
  },
  {
    "text": "is hash a valid MAC? ",
    "start": "1543810",
    "end": "1551350"
  },
  {
    "text": "The answer is still no because\nMAC is a public function that everyone can\ncompute, and it's trivial come up with a forgery.",
    "start": "1551350",
    "end": "1559047"
  },
  {
    "text": "So thank you for\nasking that question. ",
    "start": "1559047",
    "end": "1564260"
  },
  {
    "text": "But the hash is\nactually very close. ",
    "start": "1564260",
    "end": "1579640"
  },
  {
    "text": "How can we get a message\nauthentication code? ",
    "start": "1579640",
    "end": "1584970"
  },
  {
    "text": "So several ideas. Can we just hash the key\nconcatenated with the message?",
    "start": "1584970",
    "end": "1594750"
  },
  {
    "text": "Then some other random attacker\nwho doesn't have the key does not know how to\ncompute this thing.",
    "start": "1594750",
    "end": "1602700"
  },
  {
    "text": "That's a reasonable idea. But, well, if we can do it\nthis way, how about we do",
    "start": "1602700",
    "end": "1607740"
  },
  {
    "text": "the message concatenated\nwith the key. Or if you want, you can do\nkey concatenated with message",
    "start": "1607740",
    "end": "1613510"
  },
  {
    "text": "and then concatenated\nwith the key. ",
    "start": "1613510",
    "end": "1620460"
  },
  {
    "text": "So it turns out\nthis doesn't work for some very advanced reasons.",
    "start": "1620460",
    "end": "1628590"
  },
  {
    "text": "And this one may or may not. For SHA1, it doesn't\nwork, unfortunately.",
    "start": "1628590",
    "end": "1636510"
  },
  {
    "text": "And for SHA3-- that's the\nreplacement for SHA1 and SHA2--",
    "start": "1636510",
    "end": "1641950"
  },
  {
    "text": "it actually works. So the simplest\nMAC we can imagine is just to choose SHA3\nas the hash function,",
    "start": "1641950",
    "end": "1649190"
  },
  {
    "text": "and input is the key\nand then the message.",
    "start": "1649190",
    "end": "1655370"
  },
  {
    "text": "Not the other way. It's also, just FYI, purpose.",
    "start": "1655370",
    "end": "1661160"
  },
  {
    "text": "By the way, there's\nanother reasonable thought. That is, how about\nwe encrypt the hash?",
    "start": "1661160",
    "end": "1669010"
  },
  {
    "text": " Now, everyone can\ncompute the hash, but they don't know\nhow to encrypt.",
    "start": "1669010",
    "end": "1675529"
  },
  {
    "text": "If I use, say, a\nsecret key encryption, this turns out to\nbe wrong as well.",
    "start": "1675530",
    "end": "1682140"
  },
  {
    "start": "1682140",
    "end": "1691230"
  },
  {
    "start": "1684000",
    "end": "1764000"
  },
  {
    "text": "That's digital signature in MAC. ",
    "start": "1691230",
    "end": "1697000"
  },
  {
    "text": "But one caveat here,\nour unforgeability is defined this way. A little bit strange,\nbut it makes sense.",
    "start": "1697000",
    "end": "1703890"
  },
  {
    "text": "But it indeed has some\nweakness in some applications.",
    "start": "1703890",
    "end": "1710240"
  },
  {
    "text": "So imagine, say, I send you a\nmessage-- today's recitation is canceled.",
    "start": "1710240",
    "end": "1716340"
  },
  {
    "text": "And it has my signature on it. So you can verify it\nindeed comes from me.",
    "start": "1716340",
    "end": "1722040"
  },
  {
    "text": "But once I send that message,\nevery of you has that message. So next week, one of you\ncan send that message again,",
    "start": "1722040",
    "end": "1728250"
  },
  {
    "text": "saying, today's\nrecitation is canceled. Then you have no idea\nwhether it's indeed me",
    "start": "1728250",
    "end": "1733840"
  },
  {
    "text": "sending the message\nagain or someone doing an April Fool's Day joke. ",
    "start": "1733840",
    "end": "1740840"
  },
  {
    "text": "So how do we prevent that? Well, of course,\none thing I can do is if I'm smart I'll say,\ntoday, like in parenthesis, May",
    "start": "1740840",
    "end": "1748860"
  },
  {
    "text": "the 8th, recitation is canceled. Then you cannot\nrepeat that message. But we want to protect\nhuman stability.",
    "start": "1748860",
    "end": "1755980"
  },
  {
    "text": "That's the whole\npoint of cryptography. So one thing we\ncould do, let's see.",
    "start": "1755980",
    "end": "1764030"
  },
  {
    "start": "1764000",
    "end": "2194000"
  },
  {
    "start": "1764030",
    "end": "1782000"
  },
  {
    "text": "Very simple modification.  When I sign the\nmessage, I'll sign 1,",
    "start": "1782000",
    "end": "1795039"
  },
  {
    "text": "concatenated with my message. Next time I sign 2,\nconcatenated with my message.",
    "start": "1795040",
    "end": "1800910"
  },
  {
    "text": "And then 3, 4, and just\nhave this counter that keeps incrementing.",
    "start": "1800910",
    "end": "1807570"
  },
  {
    "text": "It naturally fixes.  So you can verify if you\nreceive the same message",
    "start": "1807570",
    "end": "1814971"
  },
  {
    "text": "with the same\ncounter, then you know it's someone else\nwho is resending it. ",
    "start": "1814971",
    "end": "1821050"
  },
  {
    "text": "So that's one\nthing we need to do for signature in practical use.",
    "start": "1821050",
    "end": "1828840"
  },
  {
    "text": "Now, consider another totally\ndifferent application.",
    "start": "1828840",
    "end": "1836909"
  },
  {
    "text": "So say I think everyone\nuses Google Drive, Dropbox, something like that.",
    "start": "1836910",
    "end": "1844180"
  },
  {
    "text": "You store a bunch of files\non this cloud server.",
    "start": "1844180",
    "end": "1852540"
  },
  {
    "text": " Now you are here.",
    "start": "1852540",
    "end": "1859230"
  },
  {
    "text": "You'll have a, say, cell phone,\nand you can access your files. But how do you know\nwhen you read a file,",
    "start": "1859230",
    "end": "1868640"
  },
  {
    "text": "it is indeed your\nfile unmodified? How do, maybe Google\nmesses with you,",
    "start": "1868640",
    "end": "1876320"
  },
  {
    "text": "or there's someone in the\nmiddle who changes your file? ",
    "start": "1876320",
    "end": "1882190"
  },
  {
    "text": "Usually, most people\ndo not care about that, while in cryptography,\nwe do care about that. ",
    "start": "1882190",
    "end": "1889610"
  },
  {
    "text": "So in that case, MAC and\nsignatures do not help us. Why?",
    "start": "1889610",
    "end": "1895060"
  },
  {
    "text": "Because if you just store\na MAC alongside each file,",
    "start": "1895060",
    "end": "1903280"
  },
  {
    "text": "what went wrong? ",
    "start": "1903280",
    "end": "1908520"
  },
  {
    "text": "Go ahead. AUDIENCE: You need to\nmodify the MAC too.  PROFESSOR: But if\nthey modify the file,",
    "start": "1908520",
    "end": "1914280"
  },
  {
    "text": "they do not know how\nto generate a MAC for their version of the file.",
    "start": "1914280",
    "end": "1921320"
  },
  {
    "text": "But what they can do\nis you have this file and then you come and write\nit, and you generate a new MAC.",
    "start": "1921320",
    "end": "1928309"
  },
  {
    "text": "When you read it, they\ngive you the old version. That has the valid\nsignature or MAC on it",
    "start": "1928310",
    "end": "1935643"
  },
  {
    "text": "because you generated\nthat for it. ",
    "start": "1935644",
    "end": "1941980"
  },
  {
    "text": "You all see the problem? You haven't seen the problem?  AUDIENCE: What do you mean\nthey give you the old version?",
    "start": "1941980",
    "end": "1947760"
  },
  {
    "text": "PROFESSOR: OK, so\nyou have this file. You generate a MAC, but\nyou-- at some point,",
    "start": "1947760",
    "end": "1953160"
  },
  {
    "text": "you want to update the file. You want to update this\nfile to this file prime,",
    "start": "1953160",
    "end": "1958429"
  },
  {
    "text": "and generate a new MAC. Maybe then file double\nprime, MAC double prime.",
    "start": "1958430",
    "end": "1964590"
  },
  {
    "text": "In this application,\nwe want freshness. When you read this file,\nyou want the latest version of the file.",
    "start": "1964590",
    "end": "1969740"
  },
  {
    "text": "So it should be what you\nwrote there last time. But when you are trying\nto read the file,",
    "start": "1969740",
    "end": "1975870"
  },
  {
    "text": "an attacker can\ngive you this pair. If you check the MAC,\nit's going to match.",
    "start": "1975870",
    "end": "1983390"
  },
  {
    "text": "This is also a valid\nmessage MAC pair. ",
    "start": "1983390",
    "end": "1988969"
  },
  {
    "text": "Now, everyone sees the problem.  OK, so what can we do?",
    "start": "1988969",
    "end": "1997090"
  },
  {
    "text": "Well, one thing we could do\nis store all these MACs here",
    "start": "1997090",
    "end": "2004870"
  },
  {
    "text": "on your phone. MAC1, MAC2-- a MAC\nfor every single file.",
    "start": "2004870",
    "end": "2011960"
  },
  {
    "text": "But if you do that, in fact,\nwe do not need MAC anymore. We can just use hash. ",
    "start": "2011960",
    "end": "2021970"
  },
  {
    "text": "So I'll say sigma-- I'll use\nsigmas, but they mean hashes.",
    "start": "2021970",
    "end": "2029370"
  },
  {
    "text": " This is probably good\nenough in practice.",
    "start": "2029370",
    "end": "2038710"
  },
  {
    "text": "I'll say these files\nare x1, x2, x3, x4.",
    "start": "2038710",
    "end": "2045190"
  },
  {
    "text": "Now you just create a\nhash for each of them and store them locally. And the model here is that an\nattacker cannot modify files",
    "start": "2045190",
    "end": "2054399"
  },
  {
    "text": "on your own computer\nor on your own phone. And then you can\ndownload the file. Match-- compares it with the\nlatest version of the hash,",
    "start": "2054400",
    "end": "2061860"
  },
  {
    "text": "and then you're convinced\nthat it's the latest version. This is probably a\ngood enough solution.",
    "start": "2061860",
    "end": "2068049"
  },
  {
    "text": "The only downside is that we do\nhave to store a lot of hashes",
    "start": "2068050",
    "end": "2074399"
  },
  {
    "text": "if you have a lot of files. Or in our algorithmic\nterminology,",
    "start": "2074400",
    "end": "2083589"
  },
  {
    "text": "we say your space\ncomplexity is o of n.",
    "start": "2083590",
    "end": "2090012"
  },
  {
    "text": " Here, I mean your local space. ",
    "start": "2090012",
    "end": "2099930"
  },
  {
    "text": "So can we somehow reduce\nthe local space complexity? ",
    "start": "2099930",
    "end": "2107690"
  },
  {
    "text": "Well, one thing we could do is\nto concatenate all the files together, generate a single\nhash, and store that one hash.",
    "start": "2107690",
    "end": "2115275"
  },
  {
    "start": "2115275",
    "end": "2125900"
  },
  {
    "text": "So hash everything in one try. Then we do have o of 1 space,\nbut there's a bigger problem.",
    "start": "2125900",
    "end": "2136020"
  },
  {
    "text": " Can anyone tell me? ",
    "start": "2136020",
    "end": "2143580"
  },
  {
    "text": "AUDIENCE: You don't know\nwhich file to modify? ",
    "start": "2143581",
    "end": "2149500"
  },
  {
    "text": "PROFESSOR: Oh, OK,\nI think you are thinking in the right thing.",
    "start": "2149500",
    "end": "2155320"
  },
  {
    "text": "So how do I verify? I cannot verify a single file. I have to download all the files\nand recompute a hash to verify.",
    "start": "2155320",
    "end": "2164990"
  },
  {
    "text": "So the time\ncomplexity is o of n. ",
    "start": "2164990",
    "end": "2171670"
  },
  {
    "text": "And, also, if I want\nto update this file, I have to recompute the hash. That involves, again,\ndownloading all the files",
    "start": "2171670",
    "end": "2179180"
  },
  {
    "text": "and feed them into that hash. ",
    "start": "2179180",
    "end": "2186150"
  },
  {
    "text": "And we do have a better solution\nthan both of them, which is called a hash tree\nor a Merkle tree,",
    "start": "2186150",
    "end": "2194332"
  },
  {
    "start": "2194000",
    "end": "2554000"
  },
  {
    "text": "which was invented by Merkle.  What we will do is so\nfirst for every file,",
    "start": "2194332",
    "end": "2203650"
  },
  {
    "text": "we're going to create a hash. ",
    "start": "2203650",
    "end": "2211019"
  },
  {
    "text": "Let me, again, use sigma\nbecause h is unclear whether it's a hash\nvalue or a hash function.",
    "start": "2211020",
    "end": "2217290"
  },
  {
    "text": "Sigma 2, sigma 3, sigma 4. ",
    "start": "2217290",
    "end": "2224070"
  },
  {
    "text": "So I said a hash tree. And guess what's\nthe next step to do?",
    "start": "2224070",
    "end": "2229613"
  },
  {
    "text": "AUDIENCE: Cross the hashes. PROFESSOR: Yeah. Exactly. We're going to create a sigma\n5, which is the hash of sigma 1,",
    "start": "2229613",
    "end": "2241820"
  },
  {
    "text": "concatenated with sigma 2. So we do the same thing here. ",
    "start": "2241820",
    "end": "2251351"
  },
  {
    "text": "And so you all know\nwhat it is, right? I don't need to write it. And keep going until\nwe got a root hash.",
    "start": "2251351",
    "end": "2259915"
  },
  {
    "start": "2259915",
    "end": "2265280"
  },
  {
    "text": "And now we're going to store\nthis thing locally on the side. ",
    "start": "2265280",
    "end": "2278725"
  },
  {
    "text": "So what's the local\nstorage complexity?  o of 1-- we're only\nstoring one hash locally.",
    "start": "2278725",
    "end": "2286172"
  },
  {
    "text": "Now, what's the time complexity? ",
    "start": "2286172",
    "end": "2292970"
  },
  {
    "text": "OK, so how do I verify? Yeah. Log in-- how do I verify?",
    "start": "2292970",
    "end": "2300060"
  },
  {
    "text": "I need to, so, first verify\nif this hash matches, and then read this\nhash, and verify",
    "start": "2300060",
    "end": "2306540"
  },
  {
    "text": "whether this link matches,\nand verify whether this one matches, and then I'm done.",
    "start": "2306540",
    "end": "2312600"
  },
  {
    "text": "If I want to update, I also\nneed to update this hash, then it causes\nthis hash to change",
    "start": "2312600",
    "end": "2317640"
  },
  {
    "text": "and then that hash to change. But it's always some\npath in that tree.",
    "start": "2317640",
    "end": "2323579"
  },
  {
    "text": "It doesn't affect\nanything globally. Question. AUDIENCE: But you're not\nstoring like sigma 5?",
    "start": "2323580",
    "end": "2328705"
  },
  {
    "text": "PROFESSOR: Say again. AUDIENCE: You're\nnot storing sigma 5. PROFESSOR: I am not. I have to go ahead and read it.",
    "start": "2328705",
    "end": "2335124"
  },
  {
    "text": "AUDIENCE: From where? PROFESSOR: From Google\nDrive or Dropbox.",
    "start": "2335124",
    "end": "2340558"
  },
  {
    "text": "AUDIENCE: So are we sure\nthat that is secure? PROFESSOR: OK, yeah, so\nthat's the next thing we're going to do.",
    "start": "2340558",
    "end": "2346280"
  },
  {
    "text": "Is this secure? Or in other words,\ncan the adversary change one of the\nfiles, and somehow",
    "start": "2346280",
    "end": "2353090"
  },
  {
    "text": "maintain the same root hash? That's your question then.",
    "start": "2353090",
    "end": "2359174"
  },
  {
    "start": "2359174",
    "end": "2368560"
  },
  {
    "text": "Of course, we assume the\nhash is collision resistant. Or I should say if the hash\nis collision resistant,",
    "start": "2368560",
    "end": "2374930"
  },
  {
    "text": "then this hash tree is\ncollision resistant. ",
    "start": "2374930",
    "end": "2381590"
  },
  {
    "text": "Any intuition? ",
    "start": "2381590",
    "end": "2398014"
  },
  {
    "text": "Or anyone wants to prove it? ",
    "start": "2398014",
    "end": "2404547"
  },
  {
    "text": "Go ahead. AUDIENCE: So like if the root\neventually one of the leaves will be different\nbecause it changes.",
    "start": "2404548",
    "end": "2411405"
  },
  {
    "text": "PROFESSOR: Yep. AUDIENCE: Now, you want\nthe root to be the same than the other hash\nhas to be different,",
    "start": "2411405",
    "end": "2417273"
  },
  {
    "text": "but there's no collisions. I mean, it's hard to\nfind the other hash. PROFESSOR: Correct, so I'll\njust repeat what you said,",
    "start": "2417273",
    "end": "2425670"
  },
  {
    "text": "but I'll start with the leaf\nbecause that's easier for me to think about. So say I change this\none, this block.",
    "start": "2425670",
    "end": "2432160"
  },
  {
    "text": "Now, I claim this\nhash here will change. If it doesn't, then I\nhave found the collision.",
    "start": "2432160",
    "end": "2439090"
  },
  {
    "text": "Because this x4 prime has the\nsame hash as the original x4.",
    "start": "2439090",
    "end": "2444700"
  },
  {
    "text": "So if this sigma 4 changes,\nthen sigma 6 will change. Otherwise, I have\nfound the collision.",
    "start": "2444700",
    "end": "2451960"
  },
  {
    "text": "Because this sigma 3\nconcatenate with the new sigma 4 is my collision. So same argument-- either\nthis one changes, or I",
    "start": "2451960",
    "end": "2459570"
  },
  {
    "text": "have found the collision. I repeat the argument\nall the way to the root. ",
    "start": "2459570",
    "end": "2471500"
  },
  {
    "text": "Any question about that? AUDIENCE: What if like the\nadversary changes like two hash",
    "start": "2471500",
    "end": "2477734"
  },
  {
    "text": "options--for\nexample, x1 and x2-- but sigma 1 and sigma 2 changes,\nbut sigma 5 stays the same?",
    "start": "2477735",
    "end": "2487640"
  },
  {
    "text": "PROFESSOR: OK, so\nthen we have found the collision that is sigma\n1 concatenated with sigma 2.",
    "start": "2487640",
    "end": "2493910"
  },
  {
    "text": "That's a collision with the\nnew sigma 1 concatenated with the new sigma 2. ",
    "start": "2493910",
    "end": "2501910"
  },
  {
    "text": "Make sense? ",
    "start": "2501910",
    "end": "2508793"
  },
  {
    "text": "AUDIENCE: If the concatenation\nstayed the same, like sigma 1 and sigma 2 concatenation.",
    "start": "2508793",
    "end": "2515015"
  },
  {
    "text": "PROFESSOR: So if the\nconcatenation stayed the same, that means both of\nthem are the same. AUDIENCE: They had to make\nsure they are changed?",
    "start": "2515015",
    "end": "2523431"
  },
  {
    "text": "PROFESSOR: So I'm not sure\nI understand your question. So concatenation is\nbasically just a bunch of bits then followed by\nanother bunch of bits.",
    "start": "2523431",
    "end": "2530660"
  },
  {
    "text": "If this entire\nthing is the same, that means this part is the\nsame and this part is the same. And if your sigma 1, new sigma\n1 is the same as your old sigma",
    "start": "2530660",
    "end": "2539200"
  },
  {
    "text": "1, that means I have\nfound a collision here. Because we changed it, but\nyour sigma doesn't change. ",
    "start": "2539200",
    "end": "2566500"
  },
  {
    "start": "2554000",
    "end": "2739000"
  },
  {
    "text": "So lastly, I'm going to do a\nquick review of the knapsack problem because I think in the\nlecture, we may run out of time",
    "start": "2566500",
    "end": "2575447"
  },
  {
    "text": "and I didn't mention everything. ",
    "start": "2575447",
    "end": "2590660"
  },
  {
    "text": "So if you recall, the\nknapsack cryptosystem, it says you have a\nknapsack problem.",
    "start": "2590660",
    "end": "2598170"
  },
  {
    "text": " I'll call u1 to un.",
    "start": "2598170",
    "end": "2603950"
  },
  {
    "text": "And then we're going\nto transform it. OK, this is a super\nincreasing sequence.",
    "start": "2603950",
    "end": "2610860"
  },
  {
    "text": "I'm going to transform into a\ngeneral one by multiplying n",
    "start": "2610860",
    "end": "2619190"
  },
  {
    "text": "and then mod m. So this is an easy problem,\nand that is a hard problem.",
    "start": "2619190",
    "end": "2626860"
  },
  {
    "text": "So how do I encrypt? I'm going to take a subset\nsum, which is mi, Wi, where mi",
    "start": "2626860",
    "end": "2637350"
  },
  {
    "text": "is the i-th bit in the message.  So how do I decrypt?",
    "start": "2637350",
    "end": "2644880"
  },
  {
    "text": "I'll take this, transform this\ns back to the super increasing",
    "start": "2644880",
    "end": "2652880"
  },
  {
    "text": "domain by multiplying\ninverse of n.",
    "start": "2652880",
    "end": "2658660"
  },
  {
    "text": "So that's going to be inverse\nof n multiplied by this mi Wi.",
    "start": "2658660",
    "end": "2668630"
  },
  {
    "text": "That's how I encrypt it. And then each Wi is n times ui.",
    "start": "2668630",
    "end": "2678000"
  },
  {
    "text": " So far so good.",
    "start": "2678000",
    "end": "2684200"
  },
  {
    "text": "So that gives me\nmi times ui sigma.",
    "start": "2684200",
    "end": "2690140"
  },
  {
    "text": " Of course, every\nstep is modulo m.",
    "start": "2690140",
    "end": "2696315"
  },
  {
    "text": " So the first thing\nI'm going to claim",
    "start": "2696315",
    "end": "2702260"
  },
  {
    "text": "is that m has to be\nlarger than sigma ui.",
    "start": "2702260",
    "end": "2708040"
  },
  {
    "text": "If that's the case, then the t--\nmy t is just this subset sum.",
    "start": "2708040",
    "end": "2713950"
  },
  {
    "text": "So if I solve this\nknapsack problem, I get the same answer\nas solving the original,",
    "start": "2713950",
    "end": "2720309"
  },
  {
    "text": "the general knapsack problem. If my m is not that large,\nif the m is too small,",
    "start": "2720310",
    "end": "2726099"
  },
  {
    "text": "then I have a problem. Because then my t\nwill be the subset sum minus sum multiple of m.",
    "start": "2726100",
    "end": "2733160"
  },
  {
    "text": "Then it's a different problem. I do not get the\nsame message back. ",
    "start": "2733160",
    "end": "2742080"
  },
  {
    "start": "2739000",
    "end": "2969000"
  },
  {
    "text": "OK, then we have a problem. So because we defined density\nto be n over the log of max ui.",
    "start": "2742080",
    "end": "2758775"
  },
  {
    "text": "Does everyone\nremember this part?  So each ui is in the range\nof 1 to m, or maybe 0 to m.",
    "start": "2758775",
    "end": "2770560"
  },
  {
    "text": "If I have a bunch of them, then\nthis is not super rigorous. If I have a bunch of them,\nchances are that some of them",
    "start": "2770560",
    "end": "2777710"
  },
  {
    "text": "are very close to m. Because it's unlikely that\nall of them are small.",
    "start": "2777710",
    "end": "2785700"
  },
  {
    "text": "So this thing is\nroughly n over log of m.",
    "start": "2785700",
    "end": "2792260"
  },
  {
    "start": "2792260",
    "end": "2798450"
  },
  {
    "text": "So then we have a dilemma. If we set m to be\na small number,",
    "start": "2798450",
    "end": "2806420"
  },
  {
    "text": "then my density\nis fine, but that means all of my ui's\nneeds to be small because m needs to be\ngreater than the sum of them.",
    "start": "2806420",
    "end": "2814730"
  },
  {
    "text": "If all the ui's\nare small, then I have a very limited\nchoices of them, then actually an\nattacker can just",
    "start": "2814730",
    "end": "2821582"
  },
  {
    "text": "guess what ui I chose by a brute\nforce algorithm or something like that.",
    "start": "2821582",
    "end": "2827210"
  },
  {
    "text": "And if I choose m\nto be large, or if I choose all the ui's to\nbe large, to choose them",
    "start": "2827210",
    "end": "2832550"
  },
  {
    "text": "from large range, then my m\nis going to be very large. And this density is low.",
    "start": "2832550",
    "end": "2839740"
  },
  {
    "text": "And that's vulnerable to\nthe low density attacks. And so how low a density\nis considered low?",
    "start": "2839740",
    "end": "2845740"
  },
  {
    "text": "So several people proposed\nthat based on heuristics,",
    "start": "2845740",
    "end": "2852430"
  },
  {
    "text": "that if this density\nis less than 0.45, then it's considered\nlow density,",
    "start": "2852430",
    "end": "2859440"
  },
  {
    "text": "and it can be attacked. And this threshold\nhad been improved.",
    "start": "2859440",
    "end": "2864520"
  },
  {
    "text": " So but while most of the\nknapsack cryptosystems",
    "start": "2864520",
    "end": "2872380"
  },
  {
    "text": "are broken, there\nare few that have so far stood the test of time. So they are still interesting\nbecause knapsack problems,",
    "start": "2872380",
    "end": "2879940"
  },
  {
    "text": "knapsack cryptosystems will\nbe much faster than RSA or any number theory\nbased, because we are just",
    "start": "2879940",
    "end": "2886940"
  },
  {
    "text": "adding numbers here. An RSA have this operation\nwhere m is a 1,000 bit number,",
    "start": "2886940",
    "end": "2892500"
  },
  {
    "text": "and e is also 1,000 bit number. And take this exponentiation\nis actually very slow.",
    "start": "2892500",
    "end": "2899400"
  },
  {
    "text": "So knapsack cryptosystem\nare still interesting. However, the original motivation\nturned out to be unsuccessful.",
    "start": "2899400",
    "end": "2907440"
  },
  {
    "text": "The original motivation\nis to base cryptography",
    "start": "2907440",
    "end": "2912890"
  },
  {
    "text": "on the NP complete problem. That's not going to work because\nNP problems are hard, only",
    "start": "2912890",
    "end": "2919369"
  },
  {
    "text": "in the worst case. And we need cryptography to\nbe hard in the average case.",
    "start": "2919370",
    "end": "2925540"
  },
  {
    "text": "Because if they are only\nhard in the worst case, that means there are\nseveral instances of this problem that are hard.",
    "start": "2925540",
    "end": "2931160"
  },
  {
    "text": "So either you pick\na secret key that doesn't correspond\nto a hard problem,",
    "start": "2931160",
    "end": "2937260"
  },
  {
    "text": "or you pick a secret key that's\ncorresponds to a hard problem. But everyone else picks\nthe same secret key",
    "start": "2937260",
    "end": "2944289"
  },
  {
    "text": "because everyone\nwants to be secure. That's the reason why it's\nunlikely to get cryptography",
    "start": "2944290",
    "end": "2953520"
  },
  {
    "text": "from NP hard problems.  That's all for\ntoday's recitation.",
    "start": "2953520",
    "end": "2959860"
  },
  {
    "text": "And thanks everyone for\nthe entire semester. Thank you for participation. ",
    "start": "2959860",
    "end": "2969529"
  }
]