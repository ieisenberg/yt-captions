[
  {
    "start": "0",
    "end": "125000"
  },
  {
    "start": "0",
    "end": "6230"
  },
  {
    "text": "SRINI DEVADAS: So\ntoday, we're going to look at that classic puzzle.",
    "start": "6230",
    "end": "11299"
  },
  {
    "text": "It's called the\neight queens puzzle, and it's very easy to describe.",
    "start": "11300",
    "end": "16309"
  },
  {
    "text": "I'll write down the rules, if\nyou happen not to know chess and how a queen moves on a\nchess board, in a moment.",
    "start": "16309",
    "end": "23430"
  },
  {
    "text": "But before I get\ninto that, I just wanted to mention that\nthe programming paradigms",
    "start": "23430",
    "end": "29779"
  },
  {
    "text": "that we're going to be\nlooking at today are-- is, I should say the\nprogramming paradigm--",
    "start": "29780",
    "end": "35600"
  },
  {
    "text": "is one of exhaustive\nenumeration. And what we want to\ndo algorithmically",
    "start": "35600",
    "end": "45080"
  },
  {
    "text": "is to look at all\npossible cases, all possible combinations,\npossibilities,",
    "start": "45080",
    "end": "51019"
  },
  {
    "text": "because we want to\nexhaust the space to determine if\nthere's a solution",
    "start": "51020",
    "end": "56570"
  },
  {
    "text": "to this particular instance\nof the problem or not. And one of the problems,\nas I mentioned,",
    "start": "56570",
    "end": "64018"
  },
  {
    "text": "is the eight queen's problem. But you could say, I'd\nlike to solve a smaller problem, the five queens problem\nor the three queens problem.",
    "start": "64019",
    "end": "72350"
  },
  {
    "text": "And you'd like, obviously,\nto be able to write code that solves this generalized\nproblem, where",
    "start": "72350",
    "end": "80600"
  },
  {
    "text": "you can vary the number of\nrows and columns on a board. It's no longer a chessboard if\nit's not eight rows and eight",
    "start": "80600",
    "end": "86870"
  },
  {
    "text": "columns, but you can\nstill obviously concoct a puzzle associated with\nan arbitrary-sized board.",
    "start": "86870",
    "end": "93800"
  },
  {
    "text": "And then the other\nthing that we'll do today is look at\ndata structures,",
    "start": "93800",
    "end": "99260"
  },
  {
    "text": "and so this obviously is going\nto be a data structure that's",
    "start": "99260",
    "end": "105800"
  },
  {
    "text": "immediately clear\nfrom what I have up there on the board,\na matrix data structure to solve the problem.",
    "start": "105800",
    "end": "111440"
  },
  {
    "text": "But can you do things\nmore efficiently with a different selection\nof a data structure?",
    "start": "111440",
    "end": "116729"
  },
  {
    "text": "All right? So the eight queens\nproblem simply",
    "start": "116730",
    "end": "122540"
  },
  {
    "text": "says, place eight\nqueens on a chessboard--",
    "start": "122540",
    "end": "133610"
  },
  {
    "text": "and that implies immediately\nthat it's eight by eight, as I've drawn over there--",
    "start": "133610",
    "end": "141050"
  },
  {
    "text": "such that no queen\nattacks any other queen.",
    "start": "141050",
    "end": "153470"
  },
  {
    "text": " Now, if you had no background\nin solving this problem,",
    "start": "153470",
    "end": "161030"
  },
  {
    "text": "perhaps you knew chess, and you\nmight think there's a solution.",
    "start": "161030",
    "end": "166164"
  },
  {
    "text": "You might think there's not. I mean, a queen is\npretty powerful. ",
    "start": "166164",
    "end": "172430"
  },
  {
    "text": "This implies, because a\nqueen can move horizontally. It can move vertically. It can move diagonally, back\nand forth, in both directions,",
    "start": "172430",
    "end": "182060"
  },
  {
    "text": "up and down, left and right, and\nI guess up and down diagonally.",
    "start": "182060",
    "end": "187700"
  },
  {
    "text": "It's a powerful piece. It's the most powerful\npiece in chess. And first time I heard\nabout this problem,",
    "start": "187700",
    "end": "196618"
  },
  {
    "text": "my guess was that there wasn't\na solution to the eight queens problem. And you know, how many\nof you think there's",
    "start": "196619",
    "end": "202940"
  },
  {
    "text": "a solution to this problem? Do you know there's\na solution, or do you think there's a solution?",
    "start": "202940",
    "end": "208130"
  },
  {
    "text": "AUDIENCE: For sure,\nbecause knights, because they can't\nmove like in the way",
    "start": "208130",
    "end": "213297"
  },
  {
    "text": "a knight can, so\nit's got to be-- SRINI DEVADAS: So Ganatra\nsays there's a solution. How many of you,\nbefore you heard him,",
    "start": "213298",
    "end": "221480"
  },
  {
    "text": "thought there wasn't a solution? Well, you know, years\nago, I was convinced",
    "start": "221480",
    "end": "226631"
  },
  {
    "text": "that there was no solution,\nbecause I tried very hard and I couldn't find one. I tried very hard\nfor a half hour, OK?",
    "start": "226632",
    "end": "232560"
  },
  {
    "text": "And then I decided\nthere wasn't one. But then, you know, now at\nthis point, it got to the point",
    "start": "232560",
    "end": "241440"
  },
  {
    "text": "where I could write a computer\nprogram in about a half hour or an hour to\nsolve this problem,",
    "start": "241440",
    "end": "246930"
  },
  {
    "text": "and I did discover a solution. So I'm giving it away. It turns out there's\nmany solutions,",
    "start": "246930",
    "end": "252670"
  },
  {
    "text": "and there's certainly a\nslightly different code",
    "start": "252670",
    "end": "258720"
  },
  {
    "text": "for finding one solution\nversus finding all of them, and we'll do both.",
    "start": "258720",
    "end": "265080"
  },
  {
    "start": "263000",
    "end": "459000"
  },
  {
    "text": "So without further ado,\nyou want to translate the movement of the\nqueens into a set of rules",
    "start": "265080",
    "end": "276650"
  },
  {
    "text": "that tell you if you have\nfound a solution or not.",
    "start": "276650",
    "end": "281729"
  },
  {
    "text": "And there's essentially\nthree rules, because a queen can move\nin three different ways.",
    "start": "281730",
    "end": "290375"
  },
  {
    "start": "290375",
    "end": "295470"
  },
  {
    "text": "No two queens can be\non the same column. No two queens can\nbe in the same row.",
    "start": "295470",
    "end": "300960"
  },
  {
    "text": "No two queens can be\nin the same diagonal. And remember, there's two\ndiagonals, one of which",
    "start": "300960",
    "end": "306445"
  },
  {
    "text": "that goes this way, and the\nother one that goes that way. ",
    "start": "306446",
    "end": "318050"
  },
  {
    "text": "Right, so there's a lot\nof combinations here.",
    "start": "318050",
    "end": "323389"
  },
  {
    "text": "If you think about this and you\nlook at this board over here, I have eight different rows\nand eight different columns.",
    "start": "323390",
    "end": "334420"
  },
  {
    "text": "And the way that someone might\ntry to solve this problem",
    "start": "334420",
    "end": "342620"
  },
  {
    "text": "is go either left or\nright or top down.",
    "start": "342620",
    "end": "349070"
  },
  {
    "text": "And I've written the\nconstraint no two queens can be in the same column first.",
    "start": "349070",
    "end": "355310"
  },
  {
    "text": "So you can imagine, then, this\nis what we're going to do. You could certainly modify the\ncode and modify our strategy,",
    "start": "355310",
    "end": "361380"
  },
  {
    "text": "but we're going to\ngo left to right. So what we're going to do is, we\nknow if we put a queen up here, we can't put a queen in any\nother row on that first column,",
    "start": "361380",
    "end": "371000"
  },
  {
    "text": "obviously, because of\nthe first constraint. So maybe I'll put\na queen up here. And then at that point, I\ncan move to the second column",
    "start": "371000",
    "end": "378680"
  },
  {
    "text": "in my manual strategy. And I couldn't put\na queen up here",
    "start": "378680",
    "end": "386060"
  },
  {
    "text": "because of the\nsecond constraint, no two queens can\nbe on the same row. And if I had a queen up here--\nlet me just write that out.",
    "start": "386060",
    "end": "392490"
  },
  {
    "text": "So I can't put one here,\nI can't put one here. I could put one\nhere, and this goes back to what Ganatra\nsaid, about this",
    "start": "392490",
    "end": "398190"
  },
  {
    "text": "is how a knight moves in chess. And so that gets me two queens.",
    "start": "398191",
    "end": "404540"
  },
  {
    "text": "And obviously, not a solution\nto the problem of the eight queens, but maybe I'm a quarter\nof the way there, right?",
    "start": "404540",
    "end": "411570"
  },
  {
    "text": "And it turns out\nthat you have to do what is called backtracking.",
    "start": "411570",
    "end": "417500"
  },
  {
    "text": "And backtracking\nsimply means you may have to undo a\ndecision you made",
    "start": "417500",
    "end": "423650"
  },
  {
    "text": "with respect to the placement\nof a particular queen in this exhaustive\nsearch strategy, right?",
    "start": "423650",
    "end": "430310"
  },
  {
    "text": "And the important\nthing when you do a search, as I\nmentioned early on,",
    "start": "430310",
    "end": "435919"
  },
  {
    "text": "you have to convince yourself\nthat the code you've written is going to exhaust all\nof the possibilities,",
    "start": "435920",
    "end": "441919"
  },
  {
    "text": "and that it won't\nmiss solutions. And if you don't exhaust\nall the possibilities, your code will\nterminate, and you",
    "start": "441920",
    "end": "448910"
  },
  {
    "text": "may throw up your hands,\nbecause you had buggy code, or because you had a\nbuggy search strategy,",
    "start": "448910",
    "end": "454820"
  },
  {
    "text": "and say, there's no\nsolution to the problem, whereas there is a\nsolution to the problem. All right?",
    "start": "454820",
    "end": "461080"
  },
  {
    "start": "459000",
    "end": "688000"
  },
  {
    "text": "And the way you do this search,\nthis exhaustive search-- because it's quite intense,\nthere's a lot of combinations,",
    "start": "461080",
    "end": "470300"
  },
  {
    "text": "and they grow exponentially with\nthe number of rows and columns on our board--",
    "start": "470300",
    "end": "476810"
  },
  {
    "text": "is important. And so you want to\nbe careful that you don't do redundant work,\nthat you don't do things",
    "start": "476810",
    "end": "484190"
  },
  {
    "text": "that you don't really have to,\nbecause the combinations blow up. So there's hundreds of millions\nof combinations with respect",
    "start": "484190",
    "end": "492349"
  },
  {
    "text": "to putting queens up here, so\nif you really think about it, there's like eight\ndifferent places",
    "start": "492350",
    "end": "499100"
  },
  {
    "text": "you can put a queen here,\neight, eight, eight et cetera. So you know, that's\n8 raised to 8 right?",
    "start": "499100",
    "end": "506949"
  },
  {
    "text": "If you think about that. And that's a large\nnumber, right? And if you translate that, I\ndon't even know what that is.",
    "start": "506950",
    "end": "514610"
  },
  {
    "text": "But you could do-- you know, this is 2\nraised to 3, raised to 8, so that's 2 raised to 24,\nwhich is in the millions.",
    "start": "514610",
    "end": "525260"
  },
  {
    "text": "And if you had larger board-- it isn't a chessboard-- then\nit would be much, much larger",
    "start": "525260",
    "end": "532700"
  },
  {
    "text": "as you grew the\nsize of the board. But that 2 raised to 24\ndoesn't scare us these days,",
    "start": "532700",
    "end": "538279"
  },
  {
    "text": "because computers are so fast. But back when I was your age,\nthat was a large number, OK?",
    "start": "538280",
    "end": "544190"
  },
  {
    "text": "And you didn't\nwant to write code that took 2 raised to 24\nsteps to solve problems.",
    "start": "544190",
    "end": "550430"
  },
  {
    "text": "Now it takes a matter\nof fractions of seconds to run through those\nkinds of combinations, because you're running at\na gigahertz on computers.",
    "start": "550430",
    "end": "558530"
  },
  {
    "text": "But before we dive\ninto the specifics of a particular strategy,\nlet's look at smaller problems.",
    "start": "558530",
    "end": "565370"
  },
  {
    "text": "You always get\nintuition about problems by shrinking them and\nmaking them simpler.",
    "start": "565370",
    "end": "571650"
  },
  {
    "text": "So let's look at the case\nof a two-by-two board. Can I solve the two queens\nproblem on a two-by-two board?",
    "start": "571650",
    "end": "578900"
  },
  {
    "text": "No. So if I put a queen here,\nwell, immediately I cannot put",
    "start": "578900",
    "end": "583910"
  },
  {
    "text": "a queen-- it attacks all of\nthese other positions. So the two-by-two does\nnot have a solution.",
    "start": "583910",
    "end": "590210"
  },
  {
    "text": "Let's look at a three-by-three. ",
    "start": "590210",
    "end": "595761"
  },
  {
    "text": "Right. So let's say I put\na queen up here. So the way I'm doing this, by\nthe way, is column by column,",
    "start": "595761",
    "end": "601720"
  },
  {
    "text": "and that's kind of going\nto be our strategy. As I said, you could\nflip it to row by row, but no reason to do both.",
    "start": "601720",
    "end": "608510"
  },
  {
    "text": "Just pick one. And so I put a queen up here. I can't put one here,\nI can't put one here, I can't put one here, right?",
    "start": "608510",
    "end": "614300"
  },
  {
    "text": "So I go ahead and\nput that over here. Can I put a queen here? No, because that attacks it. Can I put a queen here?",
    "start": "614300",
    "end": "620360"
  },
  {
    "text": "No, because this attacks it. And clearly, I can't\ndo it over here. So am I done?",
    "start": "620360",
    "end": "626270"
  },
  {
    "text": "Can I just give up now?  What should I do?",
    "start": "626270",
    "end": "633000"
  },
  {
    "text": "I don't want to give up now. I don't want to say that a\nthree-by-three-- at this point, I don't know what the\nanswer is in terms",
    "start": "633000",
    "end": "639360"
  },
  {
    "text": "of whether a solution exists\nfor a three-by-three or not. But at this point, given\nthat I put a queen up here,",
    "start": "639360",
    "end": "647790"
  },
  {
    "text": "and I went through this process,\nI cannot give up, right?",
    "start": "647790",
    "end": "653759"
  },
  {
    "text": "And why cannot I give up? What should I do next,\nonce I've failed here? I put a queen here and a queen\nhere, and I said, um, you know,",
    "start": "653760",
    "end": "660640"
  },
  {
    "text": "I can't put a queen\nanywhere here. What do I do? Right? Yeah, go ahead, Fadi.",
    "start": "660640",
    "end": "666589"
  },
  {
    "text": "AUDIENCE: You can change the\nposition of the first queen. SRINI DEVADAS: You can\nchange the position of the first queen. That's exactly right.",
    "start": "666590",
    "end": "673070"
  },
  {
    "text": "So I need to backtrack, and so\nI tried a few different things here. And it was exactly\nthe same thing,",
    "start": "673070",
    "end": "679040"
  },
  {
    "text": "where I had a queen here. And let's say I have a very\nstraightforward strategy that",
    "start": "679040",
    "end": "684830"
  },
  {
    "text": "is going to put queens down\nand run a piece of code that is going to check for conflicts.",
    "start": "684830",
    "end": "690260"
  },
  {
    "start": "688000",
    "end": "733000"
  },
  {
    "text": "This is going to be our most\nimportant subroutine that we're",
    "start": "690260",
    "end": "695930"
  },
  {
    "text": "going to write, and it's going\nto be dependent on the data structure that we picked, but\nthat is our fundamental check,",
    "start": "695930",
    "end": "702889"
  },
  {
    "text": "you know, the conflict checker. So I could put a queen here. And obviously, with\none queen, there's no reason to run the\nconflict checker.",
    "start": "702890",
    "end": "709560"
  },
  {
    "text": "When I put a queen here, I\nrun the conflict checker, and it says, conflict. Here, conflict.",
    "start": "709560",
    "end": "714750"
  },
  {
    "text": "Here, no conflict. Right? And then I move on to the\nnext, and I get conflict for all three of them, right?",
    "start": "714750",
    "end": "721310"
  },
  {
    "text": "So at this point, I have\nto have a way in my code-- this is exactly the enumeration\nthat I need in my code,",
    "start": "721310",
    "end": "727130"
  },
  {
    "text": "to go back and say, just like\nI tried different combinations for the second column\nbefore I converged",
    "start": "727130",
    "end": "733190"
  },
  {
    "text": "on putting a queen\ndown here, I need to go back and change\nthis to do this.",
    "start": "733190",
    "end": "741380"
  },
  {
    "text": "So I put a queen here, then\ncan I put a queen here? Here?",
    "start": "741380",
    "end": "746879"
  },
  {
    "text": "Here? No, right? So that doesn't work either. So then I go up and\nput a queen here,",
    "start": "746880",
    "end": "755350"
  },
  {
    "text": "and now you know where this is\nheaded, because of symmetry. The only place I can put\na queen is over here.",
    "start": "755350",
    "end": "761840"
  },
  {
    "text": "And once I put the\nqueen over there, I can't put a queen\nin any of these spots. So it turns out a three-by-three\ndoes not have a solution.",
    "start": "761840",
    "end": "769060"
  },
  {
    "text": "At this point, because I've gone\nthrough all of the combinations with respect to the starting\npoints on the first column,",
    "start": "769060",
    "end": "778509"
  },
  {
    "text": "and then with each of\nthose starting points, I've gone through all\nof the combinations",
    "start": "778510",
    "end": "783700"
  },
  {
    "text": "in the second column\nand the third column, I've effectively\ndone the 3 raised",
    "start": "783700",
    "end": "789790"
  },
  {
    "text": "to 3, which was basically what\nI described to you previously with respect to these\ndifferent combinations.",
    "start": "789790",
    "end": "795950"
  },
  {
    "text": "Now I don't know if the 8-- we kind of think at\nthis point that there",
    "start": "795950",
    "end": "802210"
  },
  {
    "text": "is a solution in those 8 raised\nto 8 combinations for the eight queens problem. But there was no\nsolution in the 2 raised",
    "start": "802210",
    "end": "809352"
  },
  {
    "text": "to 2 combinations for\nthe two queens problem. And there were no\nsolutions in the 3 raised",
    "start": "809352",
    "end": "816565"
  },
  {
    "text": "to 3 combinations or placements\nfor the three queens problem. OK?",
    "start": "816565",
    "end": "821920"
  },
  {
    "start": "821000",
    "end": "888000"
  },
  {
    "text": "So let's do four queens. ",
    "start": "821920",
    "end": "828060"
  },
  {
    "text": "And the reason I'm\ndoing this is I want to point out one thing,\nwhich is an efficiency",
    "start": "828060",
    "end": "836590"
  },
  {
    "text": "trick that is going to\nbe important to make sure that our code runs in a\nreasonable amount of time.",
    "start": "836590",
    "end": "842560"
  },
  {
    "text": "Right? And which is kind of implicit\nin what we've done here, but I want to point it out. So in the case of four\nqueens, I'm going to go off",
    "start": "842560",
    "end": "849970"
  },
  {
    "text": "and I'm going to\nput a queen up here. And I'm going to run\nthrough this fairly quickly. No, no, yes.",
    "start": "849970",
    "end": "856750"
  },
  {
    "text": "And so I move on. No, no, no, no, no.",
    "start": "856750",
    "end": "864401"
  },
  {
    "text": "Right? So oops-- but now, I\ndon't need to go back all the way to the first.",
    "start": "864401",
    "end": "870750"
  },
  {
    "text": "I can put a queen here, right? So now, no, yes, so I\nget a little further.",
    "start": "870750",
    "end": "878880"
  },
  {
    "text": "And then I could move\nto the fourth column. No, no, no, no.",
    "start": "878880",
    "end": "885402"
  },
  {
    "text": "I mean, they attacked from\nhere or attack from there. Oops, all right. Let's just go-- can\nI put it over here?",
    "start": "885402",
    "end": "892310"
  },
  {
    "start": "888000",
    "end": "1038000"
  },
  {
    "text": "No, no. I went back to the most\nrecently placed queen, OK?",
    "start": "892310",
    "end": "897509"
  },
  {
    "text": "So one thing that is important,\nwhich you kind of get a sense for when you increase\nthe size of the board,",
    "start": "897510",
    "end": "903140"
  },
  {
    "text": "is when you fail, when check\nconflicts returns false, when you fail, you go back to\nthe most recent decision, most",
    "start": "903140",
    "end": "910730"
  },
  {
    "text": "recent column that\nyou've placed your queen, and you change that, and you\nenumerate those possibilities.",
    "start": "910730",
    "end": "917240"
  },
  {
    "text": "OK? And when you do that-- the other thing that\nwe've done, by the way, is for the first queen, we put\na queen down with impunity.",
    "start": "917240",
    "end": "927920"
  },
  {
    "text": "For the second queen, we check\nthat lone, existing queen on the board for\na conflict, right?",
    "start": "927920",
    "end": "935510"
  },
  {
    "text": "For the third queen, what am I\ndoing here for the third queen?",
    "start": "935510",
    "end": "940910"
  },
  {
    "text": "What conflicts am\nI checking when I place the third queen\non one of the rows of the third column,\nspecifically?",
    "start": "940910",
    "end": "948370"
  },
  {
    "text": "What conflicts am I checking? I mean, who am I checking with?",
    "start": "948370",
    "end": "954290"
  },
  {
    "text": "Yeah, go ahead back there. AUDIENCE: The two\nqueens that you-- SRINI DEVADAS: Yeah,\nthe two queens. And what am I doing\nfor the existing queens",
    "start": "954290",
    "end": "959701"
  },
  {
    "text": "that are already on the board? Do I do anything for them? No. So I guess it doesn't\nseem like much,",
    "start": "959701",
    "end": "966470"
  },
  {
    "text": "but it's an important notion. OK? The notion here is I'm\ndoing a certain amount of incremental checking\nwhen I place a new queen,",
    "start": "966470",
    "end": "975880"
  },
  {
    "text": "and it's only the new\nrelationships that the new queen-- or the conflicts that the\nnew queen would have that",
    "start": "975880",
    "end": "982930"
  },
  {
    "text": "need to be checked. And in general, you know,\nif I had seven queens up on the board, and\nI've set it up nicely",
    "start": "982930",
    "end": "990370"
  },
  {
    "text": "with these seven queens--\nthey're all happy, right? They're non-conflicting. No reason to go look at each\nof those pairs of seven queens",
    "start": "990370",
    "end": "1000210"
  },
  {
    "text": "when I put an eighth queen\ndown, as I change the position of the eighth queen. All I care about is that the\neighth queen doesn't conflict",
    "start": "1000210",
    "end": "1007740"
  },
  {
    "text": "with the first seven queens. So I have to check, in general,\nif I'm putting the k-th queen",
    "start": "1007740",
    "end": "1013050"
  },
  {
    "text": "down, and I'm\neffectively checking for k minus 1 pairs of\nconflicts, or k minus 1 queens",
    "start": "1013050",
    "end": "1023354"
  },
  {
    "text": "were already put down. The k-th queen is\nbeing put down, and I need to check for the\nones that already existed.",
    "start": "1023354",
    "end": "1029529"
  },
  {
    "text": "I don't have to do k\nminus 1 squared, right? You know, because the k\nminus 1 were in there.",
    "start": "1029530",
    "end": "1034798"
  },
  {
    "text": "There's different\npairs over there. I'm all done with\nthat, all right? I'm all done with that.",
    "start": "1034799",
    "end": "1039930"
  },
  {
    "start": "1038000",
    "end": "1228000"
  },
  {
    "text": "All right, so let's\nkeep going here. So where was I? I forget exactly\nwhere I was at, but we",
    "start": "1039930",
    "end": "1046470"
  },
  {
    "text": "decided that this\ndidn't work, because I failed on column four. But I can put it over here, and\nI can put it over here, right?",
    "start": "1046470",
    "end": "1054540"
  },
  {
    "text": "So now, at this point, I've\ngone through and I've said,",
    "start": "1054540",
    "end": "1061260"
  },
  {
    "text": "look, what it means now is\nthat for these two positions for the first two\ncolumns, there's",
    "start": "1061260",
    "end": "1068340"
  },
  {
    "text": "no solution to the\nfour queens problem. OK? And so I exhausted the\npositions, for this position.",
    "start": "1068340",
    "end": "1082870"
  },
  {
    "text": "I've also exhausted-- so I can\nsay something even stronger than that, because\nfor this position,",
    "start": "1082870",
    "end": "1088110"
  },
  {
    "text": "I looked at the two\npossibilities, which were this and that, and neither\nof them work as well, right?",
    "start": "1088110",
    "end": "1094110"
  },
  {
    "text": "So the stronger statement\nnow is that there's no solution to the\nfour queens problem",
    "start": "1094110",
    "end": "1100650"
  },
  {
    "text": "if you put a queen on the\ntop-left corner, right? But it doesn't mean that there's\nno solution to the four queens problem.",
    "start": "1100650",
    "end": "1106330"
  },
  {
    "text": "Ganatra you had a question. AUDIENCE: Can't you\nalso say there's no solution when you put\nthe queen on the bottom one? SRINI DEVADAS: Symmetry,\nyes, wonderful.",
    "start": "1106330",
    "end": "1113220"
  },
  {
    "text": "So it turns out that you can\ndo rotations and reflections, and if you are willing\nto take your code.",
    "start": "1113220",
    "end": "1120900"
  },
  {
    "text": "Remember that\ncomputers are dumb. You have to explain to\nthem what a rotation is and what a reflection is.",
    "start": "1120900",
    "end": "1127050"
  },
  {
    "text": "But if you do that,\nthen it turns out you can get significant\nreductions in 8 raised to 8,",
    "start": "1127050",
    "end": "1132480"
  },
  {
    "text": "or what have you. Right? And I'll go back\nand I'll tell you about the number of solutions\nto the eight queens problem,",
    "start": "1132480",
    "end": "1139169"
  },
  {
    "text": "if you just looked\nat it this way, without rotating\nyourself or reflecting,",
    "start": "1139170",
    "end": "1144420"
  },
  {
    "text": "and then tell you how many\nunique solutions there actually are, if you took into account\nthe symmetries associated",
    "start": "1144420",
    "end": "1150450"
  },
  {
    "text": "with rotation and reflection. And the last part is important,\nbecause it can cut down",
    "start": "1150450",
    "end": "1156510"
  },
  {
    "text": "your combinatorial search, if\nyou do take that into account, right? But as I said, you know, for\nour purposes, 2 raised to 24",
    "start": "1156510",
    "end": "1164399"
  },
  {
    "text": "is not a large number\nanymore, so we can just blast through and\nnot have to do that. All right?",
    "start": "1164400",
    "end": "1170370"
  },
  {
    "text": "But now what I need to do\nis I've erased everything. You know, I tried that\nfirst queen in the corner.",
    "start": "1170370",
    "end": "1176240"
  },
  {
    "text": "It's probably not going\nto work here, right? And so because of-- well, no probably.",
    "start": "1176240",
    "end": "1181400"
  },
  {
    "text": "It will not work here. Sorry about that. But you know, this\nis different, right? I mean, that clearly we\nhave to check, right?",
    "start": "1181400",
    "end": "1188400"
  },
  {
    "text": "So here, no. Here, no. Here, no. Yes. Right?",
    "start": "1188400",
    "end": "1194190"
  },
  {
    "text": "And then here, yes, right? So I could put that over here. And then I move on.",
    "start": "1194190",
    "end": "1201270"
  },
  {
    "text": "Here, no. Here, no. Here, yes. That's right.",
    "start": "1201270",
    "end": "1207350"
  },
  {
    "text": "So we don't know if there's\nnot another solution. And in fact, there is.",
    "start": "1207350",
    "end": "1213490"
  },
  {
    "text": "There's two solutions. We won't go there, but 4 by 4--",
    "start": "1213490",
    "end": "1220090"
  },
  {
    "text": "I'm sorry, four\nqueens has a solution. OK?",
    "start": "1220090",
    "end": "1225194"
  },
  {
    "text": " So now we're ready to code, OK?",
    "start": "1225194",
    "end": "1231100"
  },
  {
    "start": "1228000",
    "end": "1843000"
  },
  {
    "text": "Now we're ready to code. The one thing we need to do\nis decide on a data structure.",
    "start": "1231100",
    "end": "1236290"
  },
  {
    "text": "But before I show you\nthe code, or even talk about the data\nstructure, I do want",
    "start": "1236290",
    "end": "1241299"
  },
  {
    "text": "you to keep in mind this search\nstrategy that we employed, right?",
    "start": "1241300",
    "end": "1246490"
  },
  {
    "text": "And the search strategy was\na column-by-column search strategy, and it requires\nenumeration and changing",
    "start": "1246490",
    "end": "1254860"
  },
  {
    "text": "positions of queens. And deciding when\nto do that is going",
    "start": "1254860",
    "end": "1259870"
  },
  {
    "text": "to be based on whether check\nconflicts gives you back true or false. And we can set up\ncheck conflicts,",
    "start": "1259870",
    "end": "1267640"
  },
  {
    "text": "so it's not checking-- there's two ways\nyou could do this. You could say, here's a board.",
    "start": "1267640",
    "end": "1273010"
  },
  {
    "text": "I'm going to check all pairs\nof conflicts associated with all the queens\non the board,",
    "start": "1273010",
    "end": "1278650"
  },
  {
    "text": "and I'm going to just use\nthat procedure over and over. That's not what we did\nin our search strategy.",
    "start": "1278650",
    "end": "1285360"
  },
  {
    "text": "What we did was we have a check\nconflict strategy that really takes a new queen as an\nargument and the existing board",
    "start": "1285360",
    "end": "1300210"
  },
  {
    "text": "as the second argument, right? And it's really checking for\nthe new queen's conflicts",
    "start": "1300210",
    "end": "1306840"
  },
  {
    "text": "with the existing queens,\nand that cuts down on the amount of computation\nthat you want to do.",
    "start": "1306840",
    "end": "1311880"
  },
  {
    "text": "All right? So given that, what is the most\nnatural data structure that you",
    "start": "1311880",
    "end": "1317490"
  },
  {
    "text": "can think of that would be\napplicable to the eight queens",
    "start": "1317490",
    "end": "1324630"
  },
  {
    "text": "problem or the four\nqueens problem? What's the most\nnatural data structure that you can think of?",
    "start": "1324630",
    "end": "1329986"
  },
  {
    "text": " Someone? Yeah, go ahead, Ryan. AUDIENCE: Two-dimensional array.",
    "start": "1329986",
    "end": "1335520"
  },
  {
    "text": "SRINI DEVADAS:\nTwo-dimensional array. Two-dimensional list,\nand that's exactly right. So let's say that I decided to\ndo exactly what Ryan suggested,",
    "start": "1335520",
    "end": "1348840"
  },
  {
    "text": "and what I'm going\nto do is, I'm going to have a two-dimensional\narray, or two-dimensional list.",
    "start": "1348840",
    "end": "1354260"
  },
  {
    "text": "In Python, you know,\nwe call them lists, which looks like this.",
    "start": "1354260",
    "end": "1359430"
  },
  {
    "text": "And this is going to look\nexactly like the board that you have there. ",
    "start": "1359430",
    "end": "1379280"
  },
  {
    "text": "Two-dimensional. This is the list of lists,\nand you have lists in here.",
    "start": "1379280",
    "end": "1387890"
  },
  {
    "text": "And so the important\nthing, people-- all of you, if you\nhaven't already,",
    "start": "1387890",
    "end": "1394730"
  },
  {
    "text": "will spend some debugging time\nin your programming careers,",
    "start": "1394730",
    "end": "1400130"
  },
  {
    "text": "figuring out why\nthings don't work, to try and figure out\nwhy things don't work.",
    "start": "1400130",
    "end": "1405230"
  },
  {
    "text": "And it'll be because\nyou flipped the I and J indices of a two-dimensional\narray, or a list, OK?",
    "start": "1405230",
    "end": "1410510"
  },
  {
    "text": "Because you'll think that some\nthings are rows and some things are columns, and you'll\nflip them around.",
    "start": "1410510",
    "end": "1415896"
  },
  {
    "text": "So I don't want to do that. I already did that\nenough times in my life, so I don't want to do that. And so right here, I think\nof B0 as the first row.",
    "start": "1415896",
    "end": "1426990"
  },
  {
    "text": "Right? So this thing here is B0. So when I say\nsomething like B 2, 3,",
    "start": "1426990",
    "end": "1438760"
  },
  {
    "text": "what is the value of\nB 2, 3 in my list B?",
    "start": "1438760",
    "end": "1444990"
  },
  {
    "text": "1. All right? And B 3, 2 is 0,",
    "start": "1444990",
    "end": "1455290"
  },
  {
    "text": "OK? So that's-- I mean, I could\nobviously have confused myself. There'd be a bug\nin the code if I'd",
    "start": "1455290",
    "end": "1461870"
  },
  {
    "text": "switched the identities of\nrows and columns, right? That's exactly the point.",
    "start": "1461870",
    "end": "1467110"
  },
  {
    "text": "So I can now imagine that\ncheck conflicts, given what we said about\nincremental checking--",
    "start": "1467110",
    "end": "1474360"
  },
  {
    "text": "but it still has\nto do, obviously, computation on the B array,\nor look at the B array,",
    "start": "1474360",
    "end": "1480690"
  },
  {
    "text": "and decide what's going on. I'm going to be putting in 1s\nand 0s inside of the B array.",
    "start": "1480690",
    "end": "1486570"
  },
  {
    "text": "And the first two-- I mean, they're all\nstraightforward. I mean, it's not\ncomplicated code here.",
    "start": "1486570",
    "end": "1493330"
  },
  {
    "text": "But the first two checks\nare slightly easier than the third check.",
    "start": "1493330",
    "end": "1498600"
  },
  {
    "text": "No two Queens on the\nsame column implies that I need to actually look\nat the first index changing,",
    "start": "1498600",
    "end": "1509150"
  },
  {
    "text": "you know, from 0 to 3. And for some particular--",
    "start": "1509150",
    "end": "1514890"
  },
  {
    "text": "I could just write\nthis out here. So no two Queens\non the same coin them would mean that I\nwant to go 0 through--",
    "start": "1514890",
    "end": "1523649"
  },
  {
    "text": "let's just call it-- 7, because I have\nthe 8 Queens problem.",
    "start": "1523650",
    "end": "1529140"
  },
  {
    "text": "And then I need to look\nat i where i varies-- actually, let me\njust call that j.",
    "start": "1529140",
    "end": "1536639"
  },
  {
    "text": "I like i for rows\nand j for columns. And j varies-- j would be 0. And then you check that B 0,\n7, 0 only has one 1, all right?",
    "start": "1536640",
    "end": "1551890"
  },
  {
    "text": "That's essentially what\nI need to check for. And then I need to\ncheck it for j equals 0. I need to check\nit for j equals 1.",
    "start": "1551890",
    "end": "1557890"
  },
  {
    "text": "I need to check it for j\nequals 2, et cetera, right? That make sense? And then, no two\nQueens on the same row,",
    "start": "1557890",
    "end": "1563830"
  },
  {
    "text": "I need to check that B i\nand i can go from 0 to 7.",
    "start": "1563830",
    "end": "1569940"
  },
  {
    "start": "1569940",
    "end": "1577080"
  },
  {
    "text": "I'm sorry, no two Queens\ncan be on the same row. Yeah, that's right. So this goes from 0 to 7.",
    "start": "1577080",
    "end": "1583260"
  },
  {
    "text": "And then I fix the\nvalue of the column. ",
    "start": "1583260",
    "end": "1593540"
  },
  {
    "text": "This is fixed. So right now, let's just say\nthat I look at the first row.",
    "start": "1593540",
    "end": "1598620"
  },
  {
    "text": "I'd go 0 here. And then I go 0 through 7 here. And then I make sure that, on\nB 0, there's exactly one 1,",
    "start": "1598620",
    "end": "1607210"
  },
  {
    "text": "right? All right. So we're good here?",
    "start": "1607210",
    "end": "1612240"
  },
  {
    "text": "Yeah? OK. The diagonal is the i and\nj both change, all right?",
    "start": "1612240",
    "end": "1617419"
  },
  {
    "text": "And the thing with\nthe diagonal is-- and I'll show you\nthe code for this. I think it's much easier to\nexplain the code as opposed",
    "start": "1617420",
    "end": "1624620"
  },
  {
    "text": "to drawing things now. Because it's about the\nspecifics of things.",
    "start": "1624620",
    "end": "1632059"
  },
  {
    "text": "And so here it is. So what I have here is-- I call it noConflicts().",
    "start": "1632060",
    "end": "1638420"
  },
  {
    "text": "noConflicts() has the board,\nwhich is our B array here,",
    "start": "1638420",
    "end": "1643810"
  },
  {
    "text": "or B list. In general, we're going to\nbe working incrementally on the current column.",
    "start": "1643810",
    "end": "1650252"
  },
  {
    "text": "So that's what that is. So you move from 0\nto all the way down. And then you have\nsomething that we're",
    "start": "1650252",
    "end": "1658670"
  },
  {
    "text": "going to call qindex,\nwhich is where you are.",
    "start": "1658670",
    "end": "1664250"
  },
  {
    "text": "So you have two things that\nyou need to worry about. You're working on a\ncolumn that's current.",
    "start": "1664250",
    "end": "1669620"
  },
  {
    "text": "And then you also\nhave the position that corresponds\nto the row where",
    "start": "1669620",
    "end": "1675000"
  },
  {
    "text": "you're putting the Queen down. So you obviously need\ntwo of these values for--",
    "start": "1675000",
    "end": "1681590"
  },
  {
    "text": "to point into the\n2-dimensional list. So that's your qindex over here. And this simply is\nsetting n to be 4.",
    "start": "1681590",
    "end": "1688420"
  },
  {
    "text": "I mean, I could-- this is a general procedure. But because I'm calling this\nin a 4-Queens procedure,",
    "start": "1688420",
    "end": "1694870"
  },
  {
    "text": "we're going to do\niteratively now. So I need to know exactly how\nmany rows and columns they",
    "start": "1694870",
    "end": "1700460"
  },
  {
    "text": "are on my board. So I've just set that\nup to be n equals 4. But that's essentially\nthat dimension.",
    "start": "1700460",
    "end": "1706259"
  },
  {
    "text": "So as you can,\nI'm going to check that there's a single 1\nin the current column. This is what I was trying\nto go over over there.",
    "start": "1706260",
    "end": "1713910"
  },
  {
    "text": "But I think this code is\nprobably more evocative. I'm simply checking to\nsee that the number of 1s",
    "start": "1713910",
    "end": "1720440"
  },
  {
    "text": "in the current column\nis not greater than 1. If it is greater than 1, then,\nimmediately, I'd return False.",
    "start": "1720440",
    "end": "1727025"
  },
  {
    "text": " And then here, this is\na little bit easier.",
    "start": "1727025",
    "end": "1732860"
  },
  {
    "text": "I check that the current Queen-- this is-- the row on which\nthe current Queen is on only",
    "start": "1732860",
    "end": "1740419"
  },
  {
    "text": "has one Queen on it. And for the--\nremember, as I'm going,",
    "start": "1740420",
    "end": "1750860"
  },
  {
    "text": "there's a single 1 in\nthe current column. And this thing here\nsays I need to check",
    "start": "1750860",
    "end": "1759720"
  },
  {
    "text": "that, when I put a Queen\ndown here, that this is the-- I need to check this entire row\nto make sure that this Queen is",
    "start": "1759720",
    "end": "1767830"
  },
  {
    "text": "the only one on it, all right? And then I also need to\ncheck this and that, OK?",
    "start": "1767830",
    "end": "1776080"
  },
  {
    "text": "And so those two checks are\nover here, this and that.",
    "start": "1776080",
    "end": "1782460"
  },
  {
    "text": "So the diagonal,\nthe left diagonal, is the first one,\nthe first check.",
    "start": "1782460",
    "end": "1787740"
  },
  {
    "text": "And then the one that\ngoes over to the right is the second check, all right? And again-- yeah,\ngo ahead, Fadi.",
    "start": "1787740",
    "end": "1793807"
  },
  {
    "text": "AUDIENCE: In the\nfirst procedure, like, when we were checking\nfor that only one Queen was in one column-- so\nI see in my mind that",
    "start": "1793807",
    "end": "1802387"
  },
  {
    "text": "is qindex equal to i. Why is that line added? Like here, we're\nchecking that if we",
    "start": "1802387",
    "end": "1807965"
  },
  {
    "text": "add the Queen in that position,\nthat there's no conflict. SRINI DEVADAS: Are you\ntalking about this line here? AUDIENCE: Yes, exactly.",
    "start": "1807965",
    "end": "1813320"
  },
  {
    "text": "And also, because our algorithm\nmakes sure that as we progress,",
    "start": "1813320",
    "end": "1818580"
  },
  {
    "text": "we add, at each stack,\none Queen per column, why do we have, in\nthe first place, to check for column conflict?",
    "start": "1818580",
    "end": "1824626"
  },
  {
    "text": "SRINI DEVADAS: Beautiful. That's a great question. So I'm going to answer that\nin a minute or so, all right?",
    "start": "1824626",
    "end": "1833549"
  },
  {
    "text": "So Fadi was asking about\nwhether the checks are redundant or not. And he was pointing to a\nparticular piece of code.",
    "start": "1833550",
    "end": "1842160"
  },
  {
    "text": "Let me explain this code. And then I'll answer\nFadi's question, OK? So what I have here is our--",
    "start": "1842160",
    "end": "1849960"
  },
  {
    "start": "1843000",
    "end": "3078000"
  },
  {
    "text": "this is actually the search\nalgorithm, all right? And this is exactly\nwhat we've talked about up until this point.",
    "start": "1849960",
    "end": "1857160"
  },
  {
    "text": "You're going to go over-- you're going to go\ncolumn by column, right?",
    "start": "1857160",
    "end": "1862620"
  },
  {
    "text": "And then you're going\nto go row by row. And so that's essentially\nwhat the two loops are.",
    "start": "1862620",
    "end": "1868585"
  },
  {
    "text": "There's lots of loops\nhere, obviously, right? You know, this is\nhorrible code, right? I mean, I'm not saying\nthis is pretty code, right?",
    "start": "1868585",
    "end": "1875520"
  },
  {
    "text": "But this is horrible code. And what happens here\nis, over here, I'm",
    "start": "1875520",
    "end": "1881820"
  },
  {
    "text": "going to go ahead\nand say, this is-- I'm starting with--",
    "start": "1881820",
    "end": "1887820"
  },
  {
    "text": "I'm going to vary-- I'm starting with\nthe first column. So the column is fixed here, OK?",
    "start": "1887820",
    "end": "1894013"
  },
  {
    "text": "Remember, I'm going\nto column by column. So that's why this is a 0. And then I'm going to vary\nthe position of the Queen",
    "start": "1894014",
    "end": "1899490"
  },
  {
    "text": "on the row, OK? And that i varies, all right? And then the next\nthing I'm going to do is I'm going to go\nto the second column.",
    "start": "1899490",
    "end": "1906870"
  },
  {
    "text": "And I'm going to-- so that's why this is a 1. And then I'm going to vary\nthe position of the Queen",
    "start": "1906870",
    "end": "1912840"
  },
  {
    "text": "on each of the\nrows corresponding to the second column, and so\non and so forth, all right?",
    "start": "1912840",
    "end": "1918270"
  },
  {
    "text": "That's it, all right? It's brutal code, OK? And I'll show you, I wrote\ncode for eight Queens.",
    "start": "1918270",
    "end": "1926070"
  },
  {
    "text": "It goes all the way\nto there, right? So that's it. I mean, you know, you\ncan see it's simple code.",
    "start": "1926070",
    "end": "1932640"
  },
  {
    "text": "I'm not-- you know, sometimes\nbrutish means simple-- not always.",
    "start": "1932640",
    "end": "1938130"
  },
  {
    "text": "And so this no conflicts thing\nis essentially something that is calling this noConflicts()\nprocedure that is doing all",
    "start": "1938130",
    "end": "1948880"
  },
  {
    "text": "of the things that I just\ndescribed to you, right? And so if I go\nahead and run this,",
    "start": "1948880",
    "end": "1954360"
  },
  {
    "text": "and run this with four Queens--  oh yikes, this always happens.",
    "start": "1954360",
    "end": "1962299"
  },
  {
    "text": "After a while, it's\ngoing to come back. But when I run this\nwith four Queens--",
    "start": "1962300",
    "end": "1969390"
  },
  {
    "text": "let me-- let's see if\nthis is what we want. One more time.",
    "start": "1969390",
    "end": "1975232"
  },
  {
    "start": "1975233",
    "end": "1982628"
  },
  {
    "text": "Ah, sorry. I've been fighting this system\nbug ever since I installed",
    "start": "1982628",
    "end": "1989929"
  },
  {
    "text": "macOS Sierra on my laptop.  There you go.",
    "start": "1989930",
    "end": "1996900"
  },
  {
    "text": "So this gave me my two\nsolutions, one of which is up there on the board. And this is the second solution\nfor the four Queens problem,",
    "start": "1996900",
    "end": "2003990"
  },
  {
    "text": "all right? So let me go back to answer\nFadi's question, right?",
    "start": "2003990",
    "end": "2009090"
  },
  {
    "text": "So the idea here-- and the way I described\nthis was, look,",
    "start": "2009090",
    "end": "2014900"
  },
  {
    "text": "as I go column by column,\nI only put one Queen down",
    "start": "2014900",
    "end": "2021180"
  },
  {
    "text": "on this particular\ncolumn, the current column that I'm working on. And the way I have\nthis code set up,",
    "start": "2021180",
    "end": "2027059"
  },
  {
    "text": "notice that I'm\nsetting this to be 1, and then I'm resetting it\ndown below here, the j, i, 0,",
    "start": "2027060",
    "end": "2034830"
  },
  {
    "text": "whether it's i-- whether it's this line of\ncode and this line of code, they're paired together--\nor this line of code",
    "start": "2034830",
    "end": "2041620"
  },
  {
    "text": "and this line of code. These two things are\nensuring that there's exactly one Queen on any given column.",
    "start": "2041620",
    "end": "2049230"
  },
  {
    "text": "Because I'm only\nputting that Queen down. And then I'm taking it out and\nputting it in another spot, right?",
    "start": "2049230",
    "end": "2054600"
  },
  {
    "text": "And that's how I described\nthis entire procedure to you manually, right? That's how we worked through it.",
    "start": "2054600",
    "end": "2060779"
  },
  {
    "text": "So your contention, Fadi, is\nthat this check is redundant,",
    "start": "2060780",
    "end": "2065920"
  },
  {
    "text": "right? And you're right, right? You're absolutely right. And so if I comment\nout that check,",
    "start": "2065921",
    "end": "2072449"
  },
  {
    "text": "everything works exactly-- it's a little bit faster. But everything works\nexactly the same, all right?",
    "start": "2072449",
    "end": "2078149"
  },
  {
    "text": "So there was a reason I\nput the check in there. You asked the question. I was going to ask\nyou the question.",
    "start": "2078150",
    "end": "2083638"
  },
  {
    "text": " But that is a good\nquestion, all right?",
    "start": "2083639",
    "end": "2088989"
  },
  {
    "text": "So that's kind of the\nsummary of four Queens. You can clearly imagine\ngeneralizing this",
    "start": "2088989",
    "end": "2096750"
  },
  {
    "text": "to eight Queens. It looks even more ugly.",
    "start": "2096750",
    "end": "2102110"
  },
  {
    "text": "This is what that\nlooks like, OK? And in fact, it\nwould look worse,",
    "start": "2102110",
    "end": "2107260"
  },
  {
    "text": "except I decided that I'd employ\nthe continue statement, right?",
    "start": "2107260",
    "end": "2113266"
  },
  {
    "text": "So I don't know how many of you\nknow of the continue statement. But the continue\nstatement essentially",
    "start": "2113266",
    "end": "2118720"
  },
  {
    "text": "says, if there's an F\npredicate followed by continue, and the predicate is\ntrue, then you immediately",
    "start": "2118720",
    "end": "2125830"
  },
  {
    "text": "start the next iteration\nof the loop, OK? So there's two\nways that you could",
    "start": "2125830",
    "end": "2131320"
  },
  {
    "text": "say, I don't want to do anything\nfor the rest of the loop, right? There's two ways\nyou could do this.",
    "start": "2131320",
    "end": "2139120"
  },
  {
    "text": "One is you could say-- so I have a for loop\nhere, dot, dot, dot.",
    "start": "2139120",
    "end": "2146950"
  },
  {
    "text": "And if I say if condition,\nthen you do stuff, right?",
    "start": "2146950",
    "end": "2160430"
  },
  {
    "text": "And so this do is\nindented inside of the if. Compare that with, for if\nnot condition, continue.",
    "start": "2160430",
    "end": "2176210"
  },
  {
    "text": "And here you would\nhave do stuff, the same do stuff, all right?",
    "start": "2176210",
    "end": "2181770"
  },
  {
    "text": "Now, if this do stuff\nhas indentations in it, then you're better off-- I mean, just because I have\nso many indentations-- you're",
    "start": "2181770",
    "end": "2188910"
  },
  {
    "text": "better off doing\nthis strategy, right? Because if do stuff goes on\nand has a bunch of ifs in it,",
    "start": "2188910",
    "end": "2194580"
  },
  {
    "text": "then you at least started\nat this level as opposed to starting at this level,\nwhich is 2D, all right?",
    "start": "2194580",
    "end": "2200490"
  },
  {
    "text": "So that's absolutely\nthe only reason why I used continue over here. Because it would look even\nmore ugly if I hadn't use",
    "start": "2200490",
    "end": "2207480"
  },
  {
    "text": "continue, all right? So if we run this-- and the only other thing--",
    "start": "2207480",
    "end": "2213810"
  },
  {
    "text": "I'm going to get back to\nno conflicts in a second. But we'll go ahead and run this.",
    "start": "2213810",
    "end": "2219720"
  },
  {
    "text": "And you see that there's\n92 different solutions to the eight Queens problem\nif you don't take into account",
    "start": "2219720",
    "end": "2227400"
  },
  {
    "text": "rotations and reflections, OK? And all of those solutions\nare being printed out. And so then, the question is,\nwhat does that mean, right?",
    "start": "2227400",
    "end": "2235530"
  },
  {
    "text": "What does that mean? And that comes to our selection\nof the data structure,",
    "start": "2235530",
    "end": "2241770"
  },
  {
    "text": "all right? So we did this. This was the data\nstructure that you picked,",
    "start": "2241770",
    "end": "2250410"
  },
  {
    "text": "which is a natural\ndata structure. You can imagine\nthat you could do something that is more\ncompact, much more compact.",
    "start": "2250410",
    "end": "2262250"
  },
  {
    "text": "And I want to show you how\nyou could optimize this code,",
    "start": "2262250",
    "end": "2267890"
  },
  {
    "text": "both for succinctness as\nwell as memory efficiency,",
    "start": "2267890",
    "end": "2275269"
  },
  {
    "text": "by picking a different\ndata structure, all right? So let's exploit the fact that\neach column has only one Queen",
    "start": "2275270",
    "end": "2301170"
  },
  {
    "text": "allowed, all right? So we want to exploit the\nfact that each column only",
    "start": "2301170",
    "end": "2306970"
  },
  {
    "text": "has one Queen allowed, right? So if you think about\nit, and you say, well, I have this big thing\nhere, but each of the columns",
    "start": "2306970",
    "end": "2318270"
  },
  {
    "text": "has exactly one Queen, then\nsure, I could use a bit, like I did before, of\n0 and 1 to specify it.",
    "start": "2318270",
    "end": "2326410"
  },
  {
    "text": "But I do know that this thing\nis going to be all 0s and a 1, followed by all 0s, or 1\nfollowed by all 0s, et cetera,",
    "start": "2326410",
    "end": "2333910"
  },
  {
    "text": "et cetera, all right? So it's very constrained, if\nI look at that first column, as to what the value of\nthat column is, right?",
    "start": "2333910",
    "end": "2341370"
  },
  {
    "text": "And so I kind of gave\nit away by running this. But what could I\ndo now with respect",
    "start": "2341370",
    "end": "2350150"
  },
  {
    "text": "to representing the\nconfiguration of the board by doing some amount of\ncompaction, all right?",
    "start": "2350150",
    "end": "2357263"
  },
  {
    "text": " What can I do?",
    "start": "2357263",
    "end": "2362920"
  },
  {
    "text": "Those of you, look\nat the screen and-- yeah, go ahead.",
    "start": "2362920",
    "end": "2367960"
  },
  {
    "text": "AUDIENCE: variable for a row  SRINI DEVADAS: I could just\nhave a single variable that",
    "start": "2367960",
    "end": "2373780"
  },
  {
    "text": "corresponds to the row number\nthat this particular Queen is",
    "start": "2373780",
    "end": "2379750"
  },
  {
    "text": "on, right, in that\ncolumn, right? And that's exactly what's\ngoing on out there, all right? So if I just take\nthat, and I take--",
    "start": "2379750",
    "end": "2389050"
  },
  {
    "text": "I'll do the bottom\none, because that's the easiest for me to see. But the rows go 0 through 7.",
    "start": "2389050",
    "end": "2396200"
  },
  {
    "text": " So what that says is\nthat, on the first column,",
    "start": "2396200",
    "end": "2403340"
  },
  {
    "text": "I have a Queen up here, OK? And then the third\none, I have a Queen.",
    "start": "2403340",
    "end": "2409380"
  },
  {
    "text": "So I have a Queen here. And 0-- uh-oh, I messed up.",
    "start": "2409380",
    "end": "2415810"
  },
  {
    "text": "Thank you. Whew, that would have been bad. So 3, and then over here--",
    "start": "2415810",
    "end": "2422459"
  },
  {
    "text": "and then, what do I have? 2, right? So 2 is over here. I'm going to have a panic attack\nif I end up getting a conflict.",
    "start": "2422459",
    "end": "2431690"
  },
  {
    "text": "Because I drew these-- I put these Queens up here. My name will be Mud, OK?",
    "start": "2431690",
    "end": "2437869"
  },
  {
    "text": "So 5 is over here. And then 1 is this one\nover here, all right?",
    "start": "2437870",
    "end": "2449980"
  },
  {
    "text": "And 6 is out here. And then finally,\n4 is out here, OK?",
    "start": "2449980",
    "end": "2459250"
  },
  {
    "text": "All right, don't tell\nme there's a conflict. Even if there's\none, I refuse to-- I will refuse to\nadmit that, all right?",
    "start": "2459250",
    "end": "2467110"
  },
  {
    "text": "So that's one of the solutions\nto the eight Queens problem. And as I mentioned, there's\nreally 12 distinct ones.",
    "start": "2467110",
    "end": "2473980"
  },
  {
    "text": "And so it turns\nout you don't need to muck with a 2-dimensional\nlist, which is confusing.",
    "start": "2473980",
    "end": "2482170"
  },
  {
    "text": "And you start flipping\nI's and J's, and your life is miserable, right? So let's just go with a\nsingle-dimensional list, right?",
    "start": "2482170",
    "end": "2490150"
  },
  {
    "text": "Let's just say that\nif I had something like this-- and in fact,\nI'm not putting a Queen down",
    "start": "2490150",
    "end": "2496720"
  },
  {
    "text": "on this second column. This is not something we\nwould do in this algorithm, but I just want to show\nyou a generality, right?",
    "start": "2496720",
    "end": "2502520"
  },
  {
    "text": "I'm going to take that, and\nI'm going to represent this, as you can imagine, as a\nsingle-dimensional Python list.",
    "start": "2502520",
    "end": "2511300"
  },
  {
    "text": "And I'm just going to put-- what am I going to put down\nhere according to what I just",
    "start": "2511300",
    "end": "2516540"
  },
  {
    "text": "described to you? I'm going to put 1. And what do you think\nI should put down here?",
    "start": "2516540",
    "end": "2521730"
  },
  {
    "text": "Should I put 0? No, no, no, a 0\nwould be bad, right? Because that would imply\nthat there's a Queen here.",
    "start": "2521730",
    "end": "2528070"
  },
  {
    "text": "I could put minus 1, right? Minus 1 could imply that\nthere's no Queen on that column.",
    "start": "2528070",
    "end": "2535400"
  },
  {
    "text": "And I could start with\na board that is empty, which is all minus 1s, right? And then this one would be--",
    "start": "2535400",
    "end": "2544300"
  },
  {
    "text": "this is minus 1, yep. Sorry, I wrote 1s. Let me write this\nlike that, minus 1.",
    "start": "2544300",
    "end": "2551289"
  },
  {
    "text": "That's 1. And then I would have 2\nhere, and then 0 there, OK?",
    "start": "2551290",
    "end": "2557300"
  },
  {
    "text": "So what's cool about this is\nthe overall procedure in terms",
    "start": "2557300",
    "end": "2565130"
  },
  {
    "text": "of the column by column\nincremental checking, that control flow of the\nalgorithm can stay the same.",
    "start": "2565130",
    "end": "2573780"
  },
  {
    "text": "I mean, if it were\nfour Queens, the code would look slightly different. Because obviously, our\nboard data structure",
    "start": "2573780",
    "end": "2578960"
  },
  {
    "text": "is a little bit different. I'm going to show you the\neight Queens code in a minute. But it's effectively the\nsame algorithm, right?",
    "start": "2578960",
    "end": "2585999"
  },
  {
    "text": "There's eight loops\nfor eight Queens. There's four loops\nfor four Queens. And a little bit of\nbookkeeping with respect",
    "start": "2585999",
    "end": "2591560"
  },
  {
    "text": "to putting the Queen\non a column would imply that I'm changing minus\n1 to 0, or I'm changing 2 to 3,",
    "start": "2591560",
    "end": "2600434"
  },
  {
    "text": "or something like\nthat, as opposed to doing what I did previously,\nwhich was putting in a 1 for a particular element\nin the 2-dimensional list,",
    "start": "2600434",
    "end": "2609890"
  },
  {
    "text": "and then making it a\n0, and then putting a 1 in a different spot, right? So even that gets\na little simpler,",
    "start": "2609890",
    "end": "2615260"
  },
  {
    "text": "because I'm just overwriting. When I go 2 the 3, it means that\nI'm moving this Queen from here",
    "start": "2615260",
    "end": "2621320"
  },
  {
    "text": "to there, OK? So there's that,\nwhich is fairly minor. What is much more interesting is\nour checkConflicts() procedure",
    "start": "2621320",
    "end": "2629099"
  },
  {
    "text": "or our noConflicts() procedure\nand what that would look like, right? And we had a bunch of code-- some of it was redundant--",
    "start": "2629100",
    "end": "2636590"
  },
  {
    "text": "for noConflicts(). But let's look at the code for\nnoConflicts() in this case.",
    "start": "2636590",
    "end": "2642650"
  },
  {
    "text": "And that's it. It's four lines of code, OK? And this is not\nredundant, right?",
    "start": "2642650",
    "end": "2649310"
  },
  {
    "text": "So if you guys can\nmake this code smaller, A plus right off the bat, OK?",
    "start": "2649310",
    "end": "2654810"
  },
  {
    "text": "Well, it is a pass-fail class,\nbut I'll write you a letter, OK?",
    "start": "2654810",
    "end": "2661320"
  },
  {
    "text": "So this is essentially\nthe code that would take this\nnew data structure",
    "start": "2661320",
    "end": "2667849"
  },
  {
    "text": "and check conflicts\nin an incremental way, OK-- same thing. You know, I'm going to add\na new Queen to the mix.",
    "start": "2667850",
    "end": "2674201"
  },
  {
    "text": "And I'm going to be\nchecking the conflicts of this new Queen versus the\nexisting Queens, all right?",
    "start": "2674201",
    "end": "2679602"
  },
  {
    "text": "And so let's go through this. Because I have some time,\nand that's the last thing I want to do.",
    "start": "2679602",
    "end": "2686420"
  },
  {
    "text": "So what I have here is, I'm not\ngoing to be checking anything",
    "start": "2686420",
    "end": "2694490"
  },
  {
    "text": "about the columns, all right? Because I know that the\nnumber is going to--",
    "start": "2694490",
    "end": "2699710"
  },
  {
    "text": "basically, the invariant\nhere is there's going to be some number here. It it's a negative number,\nthere's nothing on that column.",
    "start": "2699710",
    "end": "2706940"
  },
  {
    "text": "And if there's a\npositive number, it better be between 0 and\nthe number of rows minus 1.",
    "start": "2706940",
    "end": "2711950"
  },
  {
    "text": "And that is going\nto tell me where the one Queen is, all right? So I'm done with that. But I do have to check\nthat there's a row--",
    "start": "2711950",
    "end": "2724490"
  },
  {
    "text": "if there's a row problem. There could be a row\nproblem, all right? So I could put a Queen up here.",
    "start": "2724490",
    "end": "2733740"
  },
  {
    "text": "And obviously, I have\nto detect that, correct? So the way I detect that is\nby the highlighted code, where",
    "start": "2733740",
    "end": "2741364"
  },
  {
    "text": "I'm just going to check\nto see whether there's two numbers that are\nrepeated corresponding to--",
    "start": "2741364",
    "end": "2748332"
  },
  {
    "text": "well, the current-- so I know\nwhat the value of current is. It's not going to be\nminus 1, because current",
    "start": "2748332",
    "end": "2753570"
  },
  {
    "text": "is going to be a real Queen\nput into a particular position. I mean, the last\nthing you want is to check two minus\n1s for equality",
    "start": "2753570",
    "end": "2761040"
  },
  {
    "text": "and throw up a conflict. Because I mean, that's\njust empty versus empty. You know, there's no conflict.",
    "start": "2761040",
    "end": "2766099"
  },
  {
    "text": "But board current is guaranteed,\nby the invocation procedure, to be a positive number--",
    "start": "2766100",
    "end": "2771779"
  },
  {
    "text": "I should say a\nnon-negative number, either is 0 up until 7 in\nour case of our eight Queens problem.",
    "start": "2771780",
    "end": "2777570"
  },
  {
    "text": "And I just need to check\nto see that that value-- let's call it 4-- doesn't exist in any of\nthe other columns, correct?",
    "start": "2777570",
    "end": "2784829"
  },
  {
    "text": "So that's it. It's a little loop, but\nit's three lines of code.",
    "start": "2784830",
    "end": "2790049"
  },
  {
    "text": "And in that same\nloop, we're going to be actually checking\nfor, it turns out,",
    "start": "2790050",
    "end": "2796020"
  },
  {
    "text": "both classes of\ndiagonal conflicts, OK? ",
    "start": "2796020",
    "end": "2802569"
  },
  {
    "text": "In this line of code here,\ncan someone explain me--",
    "start": "2802570",
    "end": "2808020"
  },
  {
    "text": "explain to me what this line\nof code is doing, all right? ",
    "start": "2808020",
    "end": "2813360"
  },
  {
    "text": "What am I doing here? I mean, even pictorially\nwould be fine. Or you know, use your\narms and wave, right?",
    "start": "2813360",
    "end": "2821090"
  },
  {
    "text": "What is that line of code doing? I mean, roughly, it's checking\nfor diagonal conflicts, but I want more, all right?",
    "start": "2821090",
    "end": "2828260"
  },
  {
    "text": "How is it checking for\ndiagonal conflicts? ",
    "start": "2828260",
    "end": "2834280"
  },
  {
    "text": "Yeah, go ahead. AUDIENCE: I think the\ndifference between the index numbers of that one we had\nis that the values have",
    "start": "2834280",
    "end": "2841959"
  },
  {
    "text": "the same difference. SRINI DEVADAS:\nThat's exactly right. So if you think about\nwhat's going on, remember, we're talking squares here.",
    "start": "2841959",
    "end": "2847830"
  },
  {
    "text": "You know, no rectangles, right? Maybe we could have a\nhomework assignment where we have rectangular\nchessboards, and do things,",
    "start": "2847830",
    "end": "2854420"
  },
  {
    "text": "and confuse everybody, right? But the good news here is\nthat it's a square, right? I like squares, OK?",
    "start": "2854420",
    "end": "2861200"
  },
  {
    "text": "And squares are\neasy to deal with, because you end\nup in a situation",
    "start": "2861200",
    "end": "2866720"
  },
  {
    "text": "where you know that how much\nyou move in this direction",
    "start": "2866720",
    "end": "2872780"
  },
  {
    "text": "should be exactly\nthe same that you move in the other\ndirection, all right?",
    "start": "2872780",
    "end": "2878000"
  },
  {
    "text": "That's what a diagonal\nin a chessboard is, right-- you know,\non a square board is. You need to move in the same\namount of movement, all right?",
    "start": "2878000",
    "end": "2886340"
  },
  {
    "text": "So you're not talking\nabout diagonals that look like that, right? That's not what\nyou're talking about.",
    "start": "2886340",
    "end": "2891869"
  },
  {
    "text": "So what this means is-- if you\ngo look at this line of code, what it says is--",
    "start": "2891870",
    "end": "2897680"
  },
  {
    "text": "my current is telling me-- ",
    "start": "2897680",
    "end": "2903660"
  },
  {
    "text": "for this particular column, it's\ntelling me what row I'm on, OK?",
    "start": "2903660",
    "end": "2909615"
  },
  {
    "text": "That's really what the value--  the value-- I'm sorry,\nthis is the column number.",
    "start": "2909615",
    "end": "2919040"
  },
  {
    "text": "Excuse me, I misspoke. Current is telling me what\nthe column number is, OK?",
    "start": "2919040",
    "end": "2925130"
  },
  {
    "text": "And this board\ncurrent is telling me",
    "start": "2925130",
    "end": "2934970"
  },
  {
    "text": "what row number there is. So board current gives\nme the row number",
    "start": "2934970",
    "end": "2948210"
  },
  {
    "text": "for the current\ncolumn, all right? And i is whatever column\nthat I'm comparing against.",
    "start": "2948210",
    "end": "2960210"
  },
  {
    "text": "I need to enumerate the\ndifferent columns that I'm comparing against, all right?",
    "start": "2960210",
    "end": "2965280"
  },
  {
    "text": "So if I look at this\nand that, you'll find that the\ndifference between--",
    "start": "2965280",
    "end": "2974540"
  },
  {
    "text": "this is 1, 1-- 2, 1, right? So this column is 2,\nand the row is 1, right?",
    "start": "2974540",
    "end": "2984270"
  },
  {
    "text": "So I'll just say\n2 equals column, and row equals 1 for this\nthing over here, all right?",
    "start": "2984270",
    "end": "2990869"
  },
  {
    "text": "And then I'll use a\ndifferent color for this one. Here I have, the column 3--",
    "start": "2990870",
    "end": "2998060"
  },
  {
    "text": "the column is equal to 3. And the row equals 0, OK?",
    "start": "2998060",
    "end": "3008230"
  },
  {
    "text": "Right? Clearly, that's a\nconflict, correct? And the reason there's a\nconflict, mathematically",
    "start": "3008230",
    "end": "3014350"
  },
  {
    "text": "speaking, is because the\ndifference in the columns",
    "start": "3014350",
    "end": "3019360"
  },
  {
    "text": "is the same as the\ndifference in the rows, OK? 3 minus 2-- well 2 minus 3--",
    "start": "3019360",
    "end": "3026250"
  },
  {
    "text": "2 happens to be greater than-- sorry, 2 happens\nto be less than 3. 3 happens to be greater than 2. But the absolute value\nof the difference",
    "start": "3026250",
    "end": "3033630"
  },
  {
    "text": "is something that you\nneed to take into account. Because you could have diagonals\nin both directions, right?",
    "start": "3033630",
    "end": "3041940"
  },
  {
    "text": "So that ABS-- the\nabsolute value over there is key, because it\ntells you that it's",
    "start": "3041940",
    "end": "3048030"
  },
  {
    "text": "checking for both this diagonal\nas well as this diagonal, right? And so that's it. So if you think about\nthis being a square,",
    "start": "3048030",
    "end": "3055950"
  },
  {
    "text": "and you go look at the\ncomparisons between the values on the rows, and if that\nvalue, the difference,",
    "start": "3055950",
    "end": "3062070"
  },
  {
    "text": "is the same, in absolute\nterms, as the difference in the columns, you\nhave a conflict.",
    "start": "3062070",
    "end": "3067680"
  },
  {
    "text": "Otherwise, you don't\nhave a conflict, right? Because then you're going off. The diagonal is going\naway, through the board, but a Queen is not\non it, all right?",
    "start": "3067680",
    "end": "3074970"
  },
  {
    "text": "So I guess I did run it,\nso I won't run it again. But I'll leave you\nwith the thought--",
    "start": "3074970",
    "end": "3082560"
  },
  {
    "text": "and we'll talk about\nthis next time-- is how in heck can we make this\ncode look prettier, all right?",
    "start": "3082560",
    "end": "3088799"
  },
  {
    "text": "And we will go and at a-- from here on out, we'll be\nlooking at a programming",
    "start": "3088800",
    "end": "3094799"
  },
  {
    "text": "paradigm that's very powerful. I won't give it away. You probably know what it is. But we'll talk about it\nfirst thing tomorrow.",
    "start": "3094800",
    "end": "3103416"
  },
  {
    "text": "And one of the\nthings we will do, we'll do a different\npuzzle tomorrow as well. But we'll take a look at\nthe eight Queens code,",
    "start": "3103416",
    "end": "3110730"
  },
  {
    "text": "make it prettier,\nand also get it to the point where it solves\nthe n Queen's problem where n is",
    "start": "3110730",
    "end": "3117750"
  },
  {
    "text": "an input to do the procedure. The problem with this code is\nit only solves eight Queens.",
    "start": "3117750",
    "end": "3124650"
  },
  {
    "text": "I showed you code\nfor four Queens that only solved four Queens. If I told you that I needed\nyou to write code that",
    "start": "3124650",
    "end": "3132180"
  },
  {
    "text": "solves n Queens where n is\nan argument to the procedure,",
    "start": "3132180",
    "end": "3138720"
  },
  {
    "text": "you wouldn't be able to do that\nwith this iterative strategy unless you bounded and wrote\nn different pieces of code,",
    "start": "3138720",
    "end": "3146880"
  },
  {
    "text": "right, one of which\nhas four loops, and the other one\nhas five loops, and the other one has six loops.",
    "start": "3146880",
    "end": "3152143"
  },
  {
    "text": "And you would still need\nto know what n is, OK? All right, so see you next time.",
    "start": "3152143",
    "end": "3157670"
  },
  {
    "start": "3157670",
    "end": "3163857"
  }
]