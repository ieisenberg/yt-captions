[
  {
    "start": "4490",
    "end": "4490"
  },
  {
    "text": "In this video, we'll see how to\nbuild a CART model in R. Let's",
    "start": "4490",
    "end": "8969"
  },
  {
    "text": "start by reading in the\ndata file \"stevens.csv\".",
    "start": "8970",
    "end": "13190"
  },
  {
    "text": "We'll call our\ndata frame stevens",
    "start": "13190",
    "end": "16720"
  },
  {
    "text": "and use the read.csv function\nto read in the data file",
    "start": "16720",
    "end": "21919"
  },
  {
    "text": "\"stevens.csv\".",
    "start": "21920",
    "end": "22500"
  },
  {
    "text": "Remember to navigate\nto the directory",
    "start": "26350",
    "end": "28250"
  },
  {
    "text": "on your computer containing\nthe file \"stevens.csv\" first.",
    "start": "28250",
    "end": "33520"
  },
  {
    "text": "Now, let's take a look at our\ndata using the str function.",
    "start": "33520",
    "end": "37140"
  },
  {
    "text": "We have 566 observations,\nor Supreme Court cases,",
    "start": "40290",
    "end": "45930"
  },
  {
    "text": "and nine different variables.",
    "start": "45930",
    "end": "48530"
  },
  {
    "text": "Docket is just a unique\nidentifier for each case,",
    "start": "48530",
    "end": "52020"
  },
  {
    "text": "and Term is the\nyear of the case.",
    "start": "52020",
    "end": "54990"
  },
  {
    "text": "Then we have our six independent\nvariables: the circuit",
    "start": "54990",
    "end": "58720"
  },
  {
    "text": "court of origin, the\nissue area of the case,",
    "start": "58720",
    "end": "62590"
  },
  {
    "text": "the type of petitioner, the type\nof respondent, the lower court",
    "start": "62590",
    "end": "67670"
  },
  {
    "text": "direction, and whether or\nnot the petitioner argued",
    "start": "67670",
    "end": "71539"
  },
  {
    "text": "that a law or practice\nwas unconstitutional.",
    "start": "71539",
    "end": "75280"
  },
  {
    "text": "The last variable is\nour dependent variable,",
    "start": "75280",
    "end": "78560"
  },
  {
    "text": "whether or not\nJustice Stevens voted",
    "start": "78560",
    "end": "80770"
  },
  {
    "text": "to reverse the case: 1 for\nreverse, and 0 for affirm.",
    "start": "80770",
    "end": "86560"
  },
  {
    "text": "Now before building\nmodels, we need",
    "start": "86560",
    "end": "88430"
  },
  {
    "text": "to split our data into a\ntraining set and a testing set.",
    "start": "88430",
    "end": "92900"
  },
  {
    "text": "We'll do this using the\nsample.split function,",
    "start": "92900",
    "end": "96050"
  },
  {
    "text": "like we did last week\nfor logistic regression.",
    "start": "96050",
    "end": "99490"
  },
  {
    "text": "First, we need to load\nthe package caTools",
    "start": "99490",
    "end": "102789"
  },
  {
    "text": "with library(caTools).",
    "start": "102789",
    "end": "103710"
  },
  {
    "text": "Now, so that we all get the same\nsplit, we need to set the seed.",
    "start": "109990",
    "end": "114369"
  },
  {
    "text": "Remember that this can be\nany number, as long as we all",
    "start": "114370",
    "end": "117500"
  },
  {
    "text": "use the same number.",
    "start": "117500",
    "end": "119539"
  },
  {
    "text": "Let's set the seed to 3000.",
    "start": "119539",
    "end": "126440"
  },
  {
    "text": "Now, let's create our split.",
    "start": "126440",
    "end": "128410"
  },
  {
    "text": "We'll call it spl, and we'll\nuse the sample.split function,",
    "start": "128410",
    "end": "135560"
  },
  {
    "text": "where the first argument needs\nto be our outcome variable,",
    "start": "135560",
    "end": "139260"
  },
  {
    "text": "stevens$Reverse, and then\nthe second argument is",
    "start": "139260",
    "end": "146349"
  },
  {
    "text": "the SplitRatio, or the\npercentage of data that we want",
    "start": "146350",
    "end": "149829"
  },
  {
    "text": "to put in the training set.",
    "start": "149829",
    "end": "151989"
  },
  {
    "text": "In this case, we'll put 70% of\nthe data in the training set.",
    "start": "151990",
    "end": "157880"
  },
  {
    "text": "Now, let's create our\ntraining and testing",
    "start": "157880",
    "end": "160220"
  },
  {
    "text": "sets using the subset function.",
    "start": "160220",
    "end": "163410"
  },
  {
    "text": "We'll call our\ntraining set Train,",
    "start": "163410",
    "end": "166910"
  },
  {
    "text": "and we'll take a\nsubset of stevens,",
    "start": "166910",
    "end": "172400"
  },
  {
    "text": "only taking the observations\nfor which spl is equal to TRUE.",
    "start": "172400",
    "end": "178060"
  },
  {
    "text": "We'll call our testing\nset Test, and here",
    "start": "178060",
    "end": "181720"
  },
  {
    "text": "take a subset of\nstevens, but this time,",
    "start": "181720",
    "end": "185380"
  },
  {
    "text": "taking the observations for\nwhich spl is equal to FALSE.",
    "start": "185380",
    "end": "189570"
  },
  {
    "text": "Now, we're ready to\nbuild our CART model.",
    "start": "192360",
    "end": "194890"
  },
  {
    "text": "First we need to\ninstall and load",
    "start": "194890",
    "end": "197140"
  },
  {
    "text": "the rpart package and the\nrpart plotting package.",
    "start": "197140",
    "end": "201960"
  },
  {
    "text": "Remember that to\ninstall a new package,",
    "start": "201960",
    "end": "204750"
  },
  {
    "text": "we use the\ninstall.packages function,",
    "start": "204750",
    "end": "209200"
  },
  {
    "text": "and then in\nparentheses and quotes,",
    "start": "209200",
    "end": "211319"
  },
  {
    "text": "give the name of the\npackage we want to install.",
    "start": "211320",
    "end": "213960"
  },
  {
    "text": "In this case, rpart.",
    "start": "213960",
    "end": "216820"
  },
  {
    "text": "After you hit\nEnter, a CRAN mirror",
    "start": "216820",
    "end": "219040"
  },
  {
    "text": "should pop up asking you to\npick a location near you.",
    "start": "219040",
    "end": "223469"
  },
  {
    "text": "Go ahead and pick the\nappropriate location.",
    "start": "223470",
    "end": "226550"
  },
  {
    "text": "In my case, I'll\npick Pennsylvania",
    "start": "226550",
    "end": "228829"
  },
  {
    "text": "in the United\nStates, and hit OK.",
    "start": "228829",
    "end": "232579"
  },
  {
    "text": "You should see some\nlines run your R Console,",
    "start": "232579",
    "end": "235540"
  },
  {
    "text": "and then, when you're back\nto the blinking cursor,",
    "start": "235540",
    "end": "238250"
  },
  {
    "text": "load the package\nwith library(rpart).",
    "start": "238250",
    "end": "240480"
  },
  {
    "text": "Now, let's install the\npackage rpart.plot.",
    "start": "245030",
    "end": "252490"
  },
  {
    "text": "Again, some lines should\nrun in your R Console,",
    "start": "259110",
    "end": "261939"
  },
  {
    "text": "and when you're back\nto the blinking cursor,",
    "start": "261940",
    "end": "263970"
  },
  {
    "text": "load the package with\nlibrary(rpart.plot).",
    "start": "263970",
    "end": "266310"
  },
  {
    "text": "Now we can create our CART\nmodel using the rpart function.",
    "start": "271340",
    "end": "275659"
  },
  {
    "text": "We'll call our\nmodel StevensTree,",
    "start": "275659",
    "end": "279540"
  },
  {
    "text": "and we'll use the\nrpart function, where",
    "start": "279540",
    "end": "281680"
  },
  {
    "text": "the first argument is the\nsame as if we were building",
    "start": "281680",
    "end": "284750"
  },
  {
    "text": "a linear or logistic\nregression model.",
    "start": "284750",
    "end": "287430"
  },
  {
    "text": "We give our dependent\nvariable-- in our case,",
    "start": "287430",
    "end": "289810"
  },
  {
    "text": "Reverse-- followed\nby a tilde sign,",
    "start": "289810",
    "end": "293040"
  },
  {
    "text": "and then the\nindependent variables",
    "start": "293040",
    "end": "294780"
  },
  {
    "text": "separated by plus signs.",
    "start": "294780",
    "end": "296940"
  },
  {
    "text": "So Circuit + Issue +\nPetitioner + Respondent",
    "start": "296940",
    "end": "306890"
  },
  {
    "text": "+ LowerCourt + Unconst.",
    "start": "306890",
    "end": "313760"
  },
  {
    "text": "We also need to\ngive our data set",
    "start": "313760",
    "end": "315460"
  },
  {
    "text": "that should be used to build\nour model, which in our case",
    "start": "315460",
    "end": "318280"
  },
  {
    "text": "is Train.",
    "start": "318280",
    "end": "320150"
  },
  {
    "text": "Now we'll give two\nadditional arguments here.",
    "start": "320150",
    "end": "322850"
  },
  {
    "text": "The first one is\nmethod = \"class\".",
    "start": "322850",
    "end": "327560"
  },
  {
    "text": "This tells rpart to build a\nclassification tree, instead of",
    "start": "327560",
    "end": "331020"
  },
  {
    "text": "a regression tree.",
    "start": "331020",
    "end": "332830"
  },
  {
    "text": "You'll see how we can create\nregression trees in recitation.",
    "start": "332830",
    "end": "337050"
  },
  {
    "text": "The last argument we'll\ngive is minbucket = 25.",
    "start": "337050",
    "end": "342919"
  },
  {
    "text": "This limits the tree\nso that it doesn't",
    "start": "342920",
    "end": "345050"
  },
  {
    "text": "overfit to our training set.",
    "start": "345050",
    "end": "347389"
  },
  {
    "text": "We selected a\nvalue of 25, but we",
    "start": "347390",
    "end": "349690"
  },
  {
    "text": "could pick a smaller\nor larger value.",
    "start": "349690",
    "end": "352320"
  },
  {
    "text": "We'll see another way to limit\nthe tree later in this lecture.",
    "start": "352320",
    "end": "357350"
  },
  {
    "text": "Now let's plot our tree\nusing the prp function,",
    "start": "357350",
    "end": "360890"
  },
  {
    "text": "where the only argument is the\nname of our model, StevensTree.",
    "start": "360890",
    "end": "364240"
  },
  {
    "text": "You should see the tree pop\nup in the graphics window.",
    "start": "367990",
    "end": "371680"
  },
  {
    "text": "The first split of our\ntree is whether or not",
    "start": "371680",
    "end": "374160"
  },
  {
    "text": "the lower court\ndecision is liberal.",
    "start": "374160",
    "end": "377410"
  },
  {
    "text": "If it is, then we move\nto the left in the tree.",
    "start": "377410",
    "end": "380270"
  },
  {
    "text": "And we check the respondent.",
    "start": "380270",
    "end": "382509"
  },
  {
    "text": "If the respondent is a criminal\ndefendant, injured person,",
    "start": "382510",
    "end": "386790"
  },
  {
    "text": "politician, state,\nor the United States,",
    "start": "386790",
    "end": "390480"
  },
  {
    "text": "we predict 0, or affirm.",
    "start": "390480",
    "end": "393490"
  },
  {
    "text": "You can see here that the\nprp function abbreviates",
    "start": "393490",
    "end": "396889"
  },
  {
    "text": "the values of the\nindependent variables.",
    "start": "396890",
    "end": "399770"
  },
  {
    "text": "If you're not sure what\nthe abbreviations are,",
    "start": "399770",
    "end": "402710"
  },
  {
    "text": "you could create a\ntable of the variable",
    "start": "402710",
    "end": "405120"
  },
  {
    "text": "to see all of the\npossible values.",
    "start": "405120",
    "end": "407970"
  },
  {
    "text": "prp will select\nthe abbreviation so",
    "start": "407970",
    "end": "410380"
  },
  {
    "text": "that they're uniquely\nidentifiable.",
    "start": "410380",
    "end": "413010"
  },
  {
    "text": "So if you made a\ntable, you could",
    "start": "413010",
    "end": "415070"
  },
  {
    "text": "see that CRI stands\nfor criminal defendant,",
    "start": "415070",
    "end": "418659"
  },
  {
    "text": "INJ stands for\ninjured person, etc.",
    "start": "418659",
    "end": "423030"
  },
  {
    "text": "So now moving on in our tree,\nif the respondent is not",
    "start": "423030",
    "end": "426680"
  },
  {
    "text": "one of these types, we\nmove on to the next split,",
    "start": "426680",
    "end": "429919"
  },
  {
    "text": "and we check the petitioner.",
    "start": "429920",
    "end": "432020"
  },
  {
    "text": "If the petitioner is a\ncity, employee, employer,",
    "start": "432020",
    "end": "436620"
  },
  {
    "text": "government official,\nor politician,",
    "start": "436620",
    "end": "439300"
  },
  {
    "text": "then we predict 0, or affirm.",
    "start": "439300",
    "end": "442150"
  },
  {
    "text": "If not, then we check the\ncircuit court of origin.",
    "start": "442150",
    "end": "445650"
  },
  {
    "text": "If it's the 10th, 1st, 3rd,\n4th, DC or Federal Court,",
    "start": "445650",
    "end": "452460"
  },
  {
    "text": "then we predict 0.",
    "start": "452460",
    "end": "454280"
  },
  {
    "text": "Otherwise, we predict\n1, or reverse.",
    "start": "454280",
    "end": "458210"
  },
  {
    "text": "We can repeat this same process\non the other side of the tree",
    "start": "458210",
    "end": "462159"
  },
  {
    "text": "if the lower court\ndecision is not liberal.",
    "start": "462159",
    "end": "465850"
  },
  {
    "text": "Comparing this to a\nlogistic regression model,",
    "start": "465850",
    "end": "468659"
  },
  {
    "text": "we can see that it's\nvery interpretable.",
    "start": "468659",
    "end": "471449"
  },
  {
    "text": "A CART tree is a series\nof decision rules",
    "start": "471450",
    "end": "474450"
  },
  {
    "text": "which can easily be explained.",
    "start": "474450",
    "end": "477320"
  },
  {
    "text": "Now let's see how\nwell our CART model",
    "start": "477320",
    "end": "479350"
  },
  {
    "text": "does at making predictions\nfor the test set.",
    "start": "479350",
    "end": "482950"
  },
  {
    "text": "So back in our R Console,\nwe'll call our predictions",
    "start": "482950",
    "end": "486590"
  },
  {
    "text": "PredictCART, and we'll use\nthe predict function, where",
    "start": "486590",
    "end": "492630"
  },
  {
    "text": "the first argument is the name\nof our model, StevensTree.",
    "start": "492630",
    "end": "495720"
  },
  {
    "text": "The second argument\nis the new data",
    "start": "500210",
    "end": "502509"
  },
  {
    "text": "we want to make\npredictions for, Test.",
    "start": "502510",
    "end": "507120"
  },
  {
    "text": "And we'll add a third argument\nhere, which is type = \"class\".",
    "start": "507120",
    "end": "512860"
  },
  {
    "text": "We need to give this argument\nwhen making predictions",
    "start": "512860",
    "end": "515539"
  },
  {
    "text": "for our CART model if we want\nthe majority class predictions.",
    "start": "515539",
    "end": "520070"
  },
  {
    "text": "This is like using\na threshold of 0.5.",
    "start": "520070",
    "end": "523080"
  },
  {
    "text": "We'll see in a few minutes how\nwe can leave this argument out",
    "start": "523080",
    "end": "526090"
  },
  {
    "text": "and still get probabilities\nfrom our CART model.",
    "start": "526090",
    "end": "529940"
  },
  {
    "text": "Now let's compute the\naccuracy of our model",
    "start": "529940",
    "end": "532360"
  },
  {
    "text": "by building a confusion matrix.",
    "start": "532360",
    "end": "534740"
  },
  {
    "text": "So we'll use the table function,\nand first give the true outcome",
    "start": "534740",
    "end": "539000"
  },
  {
    "text": "values-- Test$Reverse, and then\nour predictions, PredictCART.",
    "start": "539000",
    "end": "545390"
  },
  {
    "text": "To compute the accuracy,\nwe need to add up",
    "start": "549120",
    "end": "551380"
  },
  {
    "text": "the observations we got\ncorrect, 41 plus 71, divided",
    "start": "551380",
    "end": "556390"
  },
  {
    "text": "by the total number of\nobservations in the table,",
    "start": "556390",
    "end": "559200"
  },
  {
    "text": "or the total number of\nobservations in our test set.",
    "start": "559200",
    "end": "563230"
  },
  {
    "text": "So the accuracy of our\nCART model is 0.659.",
    "start": "563230",
    "end": "567800"
  },
  {
    "text": "If you were to build a\nlogistic regression model,",
    "start": "567800",
    "end": "570250"
  },
  {
    "text": "you would get an\naccuracy of 0.665",
    "start": "570250",
    "end": "573550"
  },
  {
    "text": "and a baseline model\nthat always predicts",
    "start": "573550",
    "end": "575640"
  },
  {
    "text": "Reverse, the most\ncommon outcome,",
    "start": "575640",
    "end": "578130"
  },
  {
    "text": "has an accuracy of 0.547.",
    "start": "578130",
    "end": "581480"
  },
  {
    "text": "So our CART model significantly\nbeats the baseline",
    "start": "581480",
    "end": "584829"
  },
  {
    "text": "and is competitive with\nlogistic regression.",
    "start": "584830",
    "end": "587930"
  },
  {
    "text": "It's also much\nmore interpretable",
    "start": "587930",
    "end": "589980"
  },
  {
    "text": "than a logistic\nregression model would be.",
    "start": "589980",
    "end": "593519"
  },
  {
    "text": "Lastly, to evaluate our model,\nlet's generate an ROC curve",
    "start": "593520",
    "end": "597340"
  },
  {
    "text": "for our CART model\nusing the ROCR package.",
    "start": "597340",
    "end": "601060"
  },
  {
    "text": "First, we need to load the\npackage with the library",
    "start": "601060",
    "end": "604160"
  },
  {
    "text": "function, and then we need to\ngenerate our predictions again,",
    "start": "604160",
    "end": "609639"
  },
  {
    "text": "this time without the\ntype = \"class\" argument.",
    "start": "609640",
    "end": "613020"
  },
  {
    "text": "We'll call them\nPredictROC, and we'll",
    "start": "613020",
    "end": "616940"
  },
  {
    "text": "use the predict\nfunction, giving just",
    "start": "616940",
    "end": "619350"
  },
  {
    "text": "as the two arguments\nStevensTree and newdata = Test.",
    "start": "619350",
    "end": "625920"
  },
  {
    "text": "Let's take a look\nat what this looks",
    "start": "625920",
    "end": "627560"
  },
  {
    "text": "like by just typing\nPredictROC and hitting Enter.",
    "start": "627560",
    "end": "633320"
  },
  {
    "text": "For each observation\nin the test set,",
    "start": "633320",
    "end": "635880"
  },
  {
    "text": "it gives two numbers\nwhich can be thought",
    "start": "635880",
    "end": "638010"
  },
  {
    "text": "of as the probability\nof outcome 0",
    "start": "638010",
    "end": "640930"
  },
  {
    "text": "and the probability\nof outcome 1.",
    "start": "640930",
    "end": "643580"
  },
  {
    "text": "More concretely, each\ntest set observation",
    "start": "643580",
    "end": "646280"
  },
  {
    "text": "is classified into a subset,\nor bucket, of our CART tree.",
    "start": "646280",
    "end": "650600"
  },
  {
    "text": "These numbers give the\npercentage of training",
    "start": "650600",
    "end": "652880"
  },
  {
    "text": "set data in that\nsubset with outcome 0",
    "start": "652880",
    "end": "656710"
  },
  {
    "text": "and the percentage of\ndata in the training set",
    "start": "656710",
    "end": "659250"
  },
  {
    "text": "in that subset with outcome 1.",
    "start": "659250",
    "end": "661950"
  },
  {
    "text": "We'll use the second\ncolumn as our probabilities",
    "start": "661950",
    "end": "664920"
  },
  {
    "text": "to generate an ROC curve.",
    "start": "664920",
    "end": "667690"
  },
  {
    "text": "So just like we did last\nweek for logistic regression,",
    "start": "667690",
    "end": "670880"
  },
  {
    "text": "we'll start by using\nthe prediction function.",
    "start": "670880",
    "end": "673710"
  },
  {
    "text": "We'll call the output pred,\nand then use prediction,",
    "start": "673710",
    "end": "678020"
  },
  {
    "text": "where the first argument is the\nsecond column of PredictROC,",
    "start": "678020",
    "end": "682540"
  },
  {
    "text": "which we can access\nwith square brackets,",
    "start": "682540",
    "end": "685320"
  },
  {
    "text": "and the second argument is\nthe true outcome values,",
    "start": "685320",
    "end": "688520"
  },
  {
    "text": "Test$Reverse.",
    "start": "688520",
    "end": "690780"
  },
  {
    "text": "Now we need to use the\nperformance function, where",
    "start": "690780",
    "end": "696200"
  },
  {
    "text": "the first argument is the\noutcome of the prediction",
    "start": "696200",
    "end": "698790"
  },
  {
    "text": "function, and then\nthe next two arguments",
    "start": "698790",
    "end": "701779"
  },
  {
    "text": "are true positive rate and\nfalse positive rate, what",
    "start": "701780",
    "end": "705520"
  },
  {
    "text": "we want on the x and\ny-axes of our ROC curve.",
    "start": "705520",
    "end": "709750"
  },
  {
    "text": "Now we can just plot our ROC\ncurve by typing plot(perf).",
    "start": "709750",
    "end": "712810"
  },
  {
    "text": "If you switch back to\nyour graphics window,",
    "start": "716070",
    "end": "718700"
  },
  {
    "text": "you should see the ROC\ncurve for our model.",
    "start": "718700",
    "end": "721880"
  },
  {
    "text": "In the next quick\nquestion, we'll",
    "start": "721880",
    "end": "723940"
  },
  {
    "text": "ask you to compute the\ntest set AUC of this model.",
    "start": "723940",
    "end": "728480"
  }
]