[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "6910"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation or view\nadditional materials from",
    "start": "6910",
    "end": "13460"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at",
    "start": "13460",
    "end": "19290"
  },
  {
    "text": "ocw.mit.edu. PROFESSOR: I apologize to\nthose of you watching on",
    "start": "19290",
    "end": "24570"
  },
  {
    "text": "OpenCourseWare. I forgot to turn on\nmy microphone. And you missed some incredibly\nbrilliant things.",
    "start": "24570",
    "end": "31690"
  },
  {
    "text": "But such is life.  Let me go back to where I was,\nwhich was we we're looking at",
    "start": "31690",
    "end": "39930"
  },
  {
    "text": "this code to find the cube\nroot of a perfect cube. We saw this last week, and\nindeed, you also saw it in",
    "start": "39930",
    "end": "47880"
  },
  {
    "text": "recitation. I'm not going to belabor it. I do want to ask you the\nquestion, for what values will",
    "start": "47880",
    "end": "57399"
  },
  {
    "text": "this program terminate?  That is to say the only\ninput is to x.",
    "start": "57400",
    "end": "64239"
  },
  {
    "text": "For what values of\nx is this program guaranteed to always stop?",
    "start": "64239",
    "end": "69452"
  },
  {
    "start": "69453",
    "end": "75930"
  },
  {
    "text": "Anybody want to volunteer\nan answer to that? ",
    "start": "75930",
    "end": "81380"
  },
  {
    "text": "Ask a simpler question. Let's assume that\nx is a number. In fact, let's assume\nit's an integer.",
    "start": "81380",
    "end": "87020"
  },
  {
    "text": " Will it terminate for all\npositive integers, all",
    "start": "87020",
    "end": "93400"
  },
  {
    "text": "positive values of x? Yeah. All negative values?",
    "start": "93400",
    "end": "99890"
  },
  {
    "text": "As far as I can tell. How about 0? Yeah. So in fact, it terminates\nfor all values of x.",
    "start": "99890",
    "end": "108640"
  },
  {
    "text": "How do I know that? And that's a key question. I know that because I've used,\nand I mean by used as a mental",
    "start": "108640",
    "end": "118119"
  },
  {
    "text": "tool, something in my head,\nthe notion of a decrementing function. ",
    "start": "118120",
    "end": "131360"
  },
  {
    "text": "And every time I write a loop,\nI think about one of these, because that explains to\nme why the loop is",
    "start": "131360",
    "end": "139540"
  },
  {
    "text": "guaranteed to terminate. We'll go over here where we have\na bigger board and look",
    "start": "139540",
    "end": "146920"
  },
  {
    "text": "at the properties that\na decrementing function needs to have. ",
    "start": "146920",
    "end": "155850"
  },
  {
    "text": "One, it will map some\nset of program",
    "start": "155850",
    "end": "162720"
  },
  {
    "text": "variables to an integer.",
    "start": "162720",
    "end": "174665"
  },
  {
    "start": "174665",
    "end": "184879"
  },
  {
    "text": "Two, when the loop is entered\nfor the first time or when I",
    "start": "184880",
    "end": "190490"
  },
  {
    "text": "encountered the test of the loop\nfor the first time, its value is non-negative.",
    "start": "190490",
    "end": "195710"
  },
  {
    "start": "195710",
    "end": "210770"
  },
  {
    "text": "Three, when its value gets to\nbe less than or equal to 0,",
    "start": "210770",
    "end": "221930"
  },
  {
    "text": "the loop terminates. ",
    "start": "221930",
    "end": "229530"
  },
  {
    "text": "And finally four, it's\ndecreased each",
    "start": "229530",
    "end": "236600"
  },
  {
    "text": "time through the loop. ",
    "start": "236600",
    "end": "248430"
  },
  {
    "text": "So what we see is if it starts\nto be a positive value or non-negative, and it's decreased\nevery time I execute",
    "start": "248430",
    "end": "257838"
  },
  {
    "text": "the body of a loop, that\neventually, it's got to reach 0 or something less than 0.",
    "start": "257839",
    "end": "265289"
  },
  {
    "text": "And when it does,\nthe loop stops.  If such a function exists, then\nthe loop is guaranteed to",
    "start": "265290",
    "end": "273840"
  },
  {
    "text": "always terminate.  Now, of course, one can count up\nto a value instead of down.",
    "start": "273840",
    "end": "282190"
  },
  {
    "start": "277000",
    "end": "501000"
  },
  {
    "text": "But there's always a trick we\ncan use of subtracting to make it the same. So what's the decrementing\nfunction for this loop?",
    "start": "282190",
    "end": "290960"
  },
  {
    "text": "How did I know it will\nalways terminate? ",
    "start": "290960",
    "end": "298030"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE]. PROFESSOR: Answer equals\nanswer plus 1.",
    "start": "298030",
    "end": "304760"
  },
  {
    "text": "I don't think so. Does that satisfy all\nof these properties? ",
    "start": "304760",
    "end": "313870"
  },
  {
    "text": "Remember, a function is going\nto map some set of program variables to an integer.",
    "start": "313870",
    "end": "323680"
  },
  {
    "text": "So what are the interesting\nprogram variables here? Well, there are only\ntwo, ans and x.",
    "start": "323680",
    "end": "330530"
  },
  {
    "text": "Right?  At least, that's\nall I can see. ",
    "start": "330530",
    "end": "339270"
  },
  {
    "text": "So what would be an interesting\nfunction? ",
    "start": "339270",
    "end": "345900"
  },
  {
    "text": "Somebody?  Surely, there's someone who\ncan figure this out.",
    "start": "345900",
    "end": "351300"
  },
  {
    "text": " Yes?",
    "start": "351300",
    "end": "357039"
  },
  {
    "text": "Or no, you're just scratching\nyour head. You fooled me. I can't see because of the\nlight, but I'm sure there must",
    "start": "357040",
    "end": "362629"
  },
  {
    "text": "be dozens of hands up if\nI could only see them. ",
    "start": "362630",
    "end": "367889"
  },
  {
    "text": "Actually, I don't see\nany hands up. ",
    "start": "367890",
    "end": "373009"
  },
  {
    "text": "This is not so hard, guys. ",
    "start": "373010",
    "end": "379430"
  },
  {
    "text": "It's the absolute value of\nx minus answer cubed.",
    "start": "379430",
    "end": "386155"
  },
  {
    "start": "386155",
    "end": "396810"
  },
  {
    "text": "So what does this\nvalue start at? Let's pick a value.",
    "start": "396810",
    "end": "401920"
  },
  {
    "text": "Suppose that x is equal to 8.",
    "start": "401920",
    "end": "407080"
  },
  {
    "start": "407080",
    "end": "412240"
  },
  {
    "text": "What is the initial value of\nthe decrementing function? ",
    "start": "412240",
    "end": "417250"
  },
  {
    "text": "Wow. Come on. Let's be a little cooperative,\nplease.",
    "start": "417250",
    "end": "422450"
  },
  {
    "text": "Yes? AUDIENCE: So it's 8, answer\nis 0 and absolute value of x is 8.",
    "start": "422450",
    "end": "427521"
  },
  {
    "text": "PROFESSOR: So it's 8 minus\n0, which is equal to 8.",
    "start": "427521",
    "end": "433139"
  },
  {
    "text": "So it satisfies conditions\none and conditions two. ",
    "start": "433140",
    "end": "441000"
  },
  {
    "text": "What happens to this value every\ntime through the loop? ",
    "start": "441000",
    "end": "449400"
  },
  {
    "text": "Does x change? Does answer change?",
    "start": "449400",
    "end": "455060"
  },
  {
    "text": "And how does it change? It's increasing.",
    "start": "455060",
    "end": "460490"
  },
  {
    "text": "What does answer start at? It starts at 0, and\nit increases. So I know that answer cubed\nwill always be positive.",
    "start": "460490",
    "end": "468700"
  },
  {
    "text": "Right? So I know that every\ntime through the loop, it will be 8.",
    "start": "468700",
    "end": "474840"
  },
  {
    "text": "The first time through,\nit'll be 8 minus 1 cubed, which is 7. ",
    "start": "474840",
    "end": "482150"
  },
  {
    "text": "And then the next time through,\nit'll be 8 minus 2 cubed, which is 0.",
    "start": "482150",
    "end": "489670"
  },
  {
    "text": "And then, I exit the loop.  And it's that kind of reasoning\nthat I used to",
    "start": "489670",
    "end": "496820"
  },
  {
    "text": "convince myself that this\nloop terminates. And every time I write a loop,\nand I hope every time you",
    "start": "496820",
    "end": "504590"
  },
  {
    "start": "501000",
    "end": "796000"
  },
  {
    "text": "write a loop, you will think\nabout what's the reason the",
    "start": "504590",
    "end": "509680"
  },
  {
    "text": "loop is going to terminate. And you will do it by thinking\nabout what the decrementing function is.",
    "start": "509680",
    "end": "515719"
  },
  {
    "text": " People get me on that? And whoever finally answered\na question surely",
    "start": "515720",
    "end": "523520"
  },
  {
    "text": "deserves to be fed. ",
    "start": "523520",
    "end": "529060"
  },
  {
    "text": "I obviously have to bring better\ncandy to encourage better responses.",
    "start": "529060",
    "end": "535070"
  },
  {
    "text": "Now, let's go back and look\nat the program itself. Now that we know it stops, and\nyou can take my word for it",
    "start": "535070",
    "end": "545230"
  },
  {
    "text": "that it actually computes the\ncorrect answer, let's think about what kind of algorithm\nthis is.",
    "start": "545230",
    "end": "551199"
  },
  {
    "text": "What's the method? This is an example of\nguess and check.",
    "start": "551200",
    "end": "557040"
  },
  {
    "text": "And it's a particular kind\ncalled exhaustive enumeration. ",
    "start": "557040",
    "end": "577680"
  },
  {
    "text": "Each time through the loop, I'm\ntaking a guess at to what the value is, and I'm checking\nwhether it's true.",
    "start": "577680",
    "end": "585730"
  },
  {
    "text": "But I'm enumerating\nthe guesses in a very systematic way. They're not just\nrandom guesses.",
    "start": "585730",
    "end": "592050"
  },
  {
    "text": "I'm enumerating all the\npossible answers. ",
    "start": "592050",
    "end": "598670"
  },
  {
    "text": "If I get through the entire\nspace of answers, or possible answers, and I don't find a\nsolution, then I know that it",
    "start": "598670",
    "end": "606180"
  },
  {
    "text": "doesn't exist, and it's\nnot a perfect cube. So that's why it's called\nexhaustive enumeration because",
    "start": "606180",
    "end": "613180"
  },
  {
    "text": "I'm exhausting the space\nof possible answers. ",
    "start": "613180",
    "end": "620880"
  },
  {
    "text": "Does that makes sense\nto everyone? So let's try it. Let's try it with say a very\nlarge value of x, because",
    "start": "620880",
    "end": "631810"
  },
  {
    "text": "that's always an issue, of\ncourse, when we do exhaustive enumeration. ",
    "start": "631810",
    "end": "638210"
  },
  {
    "text": "So I'm going to enter\nthis value. ",
    "start": "638210",
    "end": "649360"
  },
  {
    "text": "Is that a perfect cube? Who thinks it is? ",
    "start": "649360",
    "end": "654750"
  },
  {
    "text": "Who can tell me what it is? What's the cube root of that? Well, this is a question I did\nnot expect you to answer.",
    "start": "654750",
    "end": "662270"
  },
  {
    "text": "But it's 1,251.",
    "start": "662270",
    "end": "667930"
  },
  {
    "text": "That'll be in the first quiz,\nso make a note of it. ",
    "start": "667930",
    "end": "673320"
  },
  {
    "text": "Notice how quickly the\ncomputer did this. It found the cube\nroot of quite a large number very quickly.",
    "start": "673320",
    "end": "681690"
  },
  {
    "text": "And so while one might\ninitially think that exhaustive enumeration is a\nsilly technique because takes",
    "start": "681690",
    "end": "689890"
  },
  {
    "text": "a lot of guesses, for an awful\nlot of problems, we can actually just write a pretty\nstupid program that's solves",
    "start": "689890",
    "end": "698230"
  },
  {
    "text": "it by exhaustive enumeration. We typically refer to such\nprograms as brute force.",
    "start": "698230",
    "end": "703330"
  },
  {
    "text": " And brute force is often\nexactly the right",
    "start": "703330",
    "end": "708930"
  },
  {
    "text": "way to solve a problem. Why does it work? Because computers\nare really fast.",
    "start": "708930",
    "end": "714735"
  },
  {
    "text": " How fast are computers? Well, today, a good computer\ncan execute in a single",
    "start": "714735",
    "end": "722519"
  },
  {
    "text": "processor in the order of 100\nmillion instructions a second. How fast is that?",
    "start": "722520",
    "end": "728870"
  },
  {
    "text": "And now, we're going to see if\nMitchell has answered the question I asked in the\nway in the class. How many instructions can a\ncomputer execute between the",
    "start": "728870",
    "end": "737710"
  },
  {
    "text": "time I say something and the\ntime the people in the back row hear it?",
    "start": "737710",
    "end": "743779"
  },
  {
    "text": "Mitch thinks it's 400 million\ninstructions. I think that's about right.",
    "start": "743780",
    "end": "749370"
  },
  {
    "text": "It's hundreds of millions\nat any rate. It's kind of amazing between the\ntime I say something and",
    "start": "749370",
    "end": "754750"
  },
  {
    "text": "the time you hear it, hundreds\nof millions of instructions. It's mind boggling\nhow fast that is.",
    "start": "754750",
    "end": "762900"
  },
  {
    "text": "And that's why we can often use\nthese kind of solutions.",
    "start": "762900",
    "end": "768030"
  },
  {
    "text": "Next lecture, actually, even\na little bit later in this lecture, I hope to get to an\nexample of why that doesn't",
    "start": "768030",
    "end": "774320"
  },
  {
    "text": "really get the job done,\nat least not always. Before I do that, I want\nto look at one",
    "start": "774320",
    "end": "782360"
  },
  {
    "text": "more programming construct. And that's a variant\non the while loop.",
    "start": "782360",
    "end": "789069"
  },
  {
    "text": "So if we think about what the\nwhile loop we were just looking at did or does, as the\ndecrementing function told us,",
    "start": "789070",
    "end": "799720"
  },
  {
    "start": "796000",
    "end": "833000"
  },
  {
    "text": "it's looking at all the possible\nvalues of answer ranging from 0 to the\nabsolute value of x.",
    "start": "799720",
    "end": "808160"
  },
  {
    "text": "And at each step testing and\ndoing something, we can abstract this process using\nsomething called a for loop.",
    "start": "808160",
    "end": "816575"
  },
  {
    "start": "816575",
    "end": "834200"
  },
  {
    "text": "So let's look at this code. It's essentially exactly\nthe same algorithm.",
    "start": "834200",
    "end": "841610"
  },
  {
    "text": "I got bored of typing ans\ntimes ans times ans. So I used a Python notation\nfor exponentiation, which",
    "start": "841610",
    "end": "850990"
  },
  {
    "text": "you'll see is star, star. ",
    "start": "850990",
    "end": "856589"
  },
  {
    "text": "Now, be easier to read\nif I get rid of that.",
    "start": "856590",
    "end": "861930"
  },
  {
    "text": "But other than that, the\ninteresting thing I did was replace the while\nloop by a for.",
    "start": "861930",
    "end": "868890"
  },
  {
    "text": "So you'll see this line of code\nthere, for ans in range 0",
    "start": "868890",
    "end": "874170"
  },
  {
    "text": "to abs of x plus 1. What that says is range is a\nbuilt-in function of Python",
    "start": "874170",
    "end": "886350"
  },
  {
    "text": "that generates, in this case,\na sequence of integers,",
    "start": "886350",
    "end": "892130"
  },
  {
    "text": "something called a tuple, which\nwe'll be looking at in a lecture or so.",
    "start": "892130",
    "end": "897360"
  },
  {
    "text": "But for now, it's pretty simple\nto think about what you get is if you look at the\nexpression range of x to y,",
    "start": "897360",
    "end": "912230"
  },
  {
    "text": "that gives me a sequence\nof values, x, x plus 1",
    "start": "912230",
    "end": "919605"
  },
  {
    "text": "up to y minus 1. Notice not up to y, but\nup to y minus 1.",
    "start": "919605",
    "end": "928330"
  },
  {
    "text": "So it gives me a sequence\nof length y-- ",
    "start": "928330",
    "end": "934080"
  },
  {
    "text": "well, assuming that's 0. Right? It doesn't have to be 0.",
    "start": "934080",
    "end": "940880"
  },
  {
    "text": "It can be anything. It can be another\nvalue as well.",
    "start": "940880",
    "end": "946209"
  },
  {
    "text": "0 in my example. And then, the for loop executes\nit on this value and",
    "start": "946210",
    "end": "954450"
  },
  {
    "text": "the next iteration on this\nvalue, and finally, at the very end on that value.",
    "start": "954450",
    "end": "961399"
  },
  {
    "text": "So it executes it one iteration\nof the loop on each value in this sequence\nof values generated",
    "start": "961400",
    "end": "970290"
  },
  {
    "text": "by the range statement.  And normally, it does\nall of them.",
    "start": "970290",
    "end": "976459"
  },
  {
    "text": "However, you'll see I've added\nsomething called a break here,",
    "start": "976460",
    "end": "982290"
  },
  {
    "text": "a command in Python. And what break says\nis exit the loop.",
    "start": "982290",
    "end": "987905"
  },
  {
    "text": " So it exits it prematurely\nwithout executing all of the",
    "start": "987905",
    "end": "995670"
  },
  {
    "text": "values generated by range. ",
    "start": "995670",
    "end": "1002670"
  },
  {
    "text": "You can nest loops just like\nyou nest if statements. And if you do that break,\nalways executes--",
    "start": "1002670",
    "end": "1009880"
  },
  {
    "text": "always exits rather the\ninnermost loop. ",
    "start": "1009880",
    "end": "1014940"
  },
  {
    "text": "So what this does is it's\ngenerates a set of values to test.",
    "start": "1014940",
    "end": "1020390"
  },
  {
    "text": "It checks whether or not\nit's got the answer. If it does, it terminates\nthe loop.",
    "start": "1020390",
    "end": "1026290"
  },
  {
    "text": " And eventually, you\nexit the loop.",
    "start": "1026290",
    "end": "1032020"
  },
  {
    "text": "And then, it just checks as\nbefore whether or not it found a correct answer and does\nthe right thing.",
    "start": "1032020",
    "end": "1039589"
  },
  {
    "text": "So you'll find, particularly\nwhen you're iterating over integers, but later we'll see\nwhen you're iterating over a",
    "start": "1039589",
    "end": "1046470"
  },
  {
    "text": "lot of other kinds of things,\nfor loops are a very convenient shorthand.",
    "start": "1046470",
    "end": "1054350"
  },
  {
    "text": "There's nothing you can't\ndo with a while loop. You don't need for loops. But they do make life easy.",
    "start": "1054350",
    "end": "1060530"
  },
  {
    "text": "And over the semester, I think\nyou'll end up writing a lot more for loops than you\nwill while loops.",
    "start": "1060530",
    "end": "1067650"
  },
  {
    "text": " Any questions about this? ",
    "start": "1067650",
    "end": "1075560"
  },
  {
    "text": "If not, I'm going to\nmove right along. So this is the moment.",
    "start": "1075560",
    "end": "1081280"
  },
  {
    "text": "I'm going to move right along. So we've now got a program that\ndoes something really",
    "start": "1081280",
    "end": "1086840"
  },
  {
    "text": "silly, really. It finds cube roots\nof perfect cubes.",
    "start": "1086840",
    "end": "1095160"
  },
  {
    "text": "Well, that's not typically\nuseful. Right? You've even got these $0.50 four\nfunction calculators that",
    "start": "1095160",
    "end": "1101960"
  },
  {
    "text": "find square roots. And they don't insist that you\nonly give it perfect squares.",
    "start": "1101960",
    "end": "1108570"
  },
  {
    "text": "So now, let's think about how\nwe would take this kind of program, and indeed, this kind\nof method of writing programs",
    "start": "1108570",
    "end": "1116440"
  },
  {
    "text": "and use it to find-- for now, we'll look at the\nsquare root of any number, of",
    "start": "1116440",
    "end": "1123610"
  },
  {
    "text": "any floating point number. ",
    "start": "1123610",
    "end": "1128820"
  },
  {
    "text": "Well, the first question we need\nto ask is what do I mean? ",
    "start": "1128820",
    "end": "1135049"
  },
  {
    "text": "That's kind of a subtle\nquestion. What does it mean to find the\nsquare root of a number? ",
    "start": "1135050",
    "end": "1141480"
  },
  {
    "text": "What does it mean, for\nexample, to find the square root of 2? ",
    "start": "1141480",
    "end": "1147130"
  },
  {
    "text": "Well, we know that that was an\nendless series of digits",
    "start": "1147130",
    "end": "1154340"
  },
  {
    "text": "before we can find the\nsquare root of 2. Right? It does not have\na nice answer.",
    "start": "1154340",
    "end": "1159740"
  },
  {
    "text": "So we can't just say we have to\nfind something that if we multiply it by itself,\nit will equal 2.",
    "start": "1159740",
    "end": "1166370"
  },
  {
    "text": "Because we can't find\nsuch a thing.  So we've got to think\nabout a different",
    "start": "1166370",
    "end": "1173170"
  },
  {
    "text": "notion of what we mean. Furthermore, even for some\nnumbers which there is a square root, it might be a\nmillion decimal places long,",
    "start": "1173170",
    "end": "1182860"
  },
  {
    "text": "and consequently, really\nhard to find. So we need to think\nabout a different",
    "start": "1182860",
    "end": "1190270"
  },
  {
    "text": "kind of concept here. And it's the concept of an\napproximation, finding an",
    "start": "1190270",
    "end": "1211070"
  },
  {
    "text": "answer that is good enough. So what should we do here?",
    "start": "1211070",
    "end": "1217559"
  },
  {
    "text": "How do we think about this? Typically, what we do when we\nthink about an approximation",
    "start": "1217560",
    "end": "1225690"
  },
  {
    "text": "is we define how good\nan approximation we're willing to accept.",
    "start": "1225690",
    "end": "1231360"
  },
  {
    "text": " So for example, we might want\nto say, I want to find a",
    "start": "1231360",
    "end": "1240960"
  },
  {
    "text": "square root that lies\nwithin epsilon of the true square root.",
    "start": "1240960",
    "end": "1248120"
  },
  {
    "text": "So find a y such that y times\ny is equal to what?",
    "start": "1248120",
    "end": "1271410"
  },
  {
    "text": "What does it mean? How would I express it within\nepsilon of the perfect answer? ",
    "start": "1271410",
    "end": "1278240"
  },
  {
    "text": "I don't want to say it's equal\nto x, because that may be impossible or too time\nconsuming to find.",
    "start": "1278240",
    "end": "1286820"
  },
  {
    "text": "So really, what I mean is\nx plus or minus epsilon. ",
    "start": "1286820",
    "end": "1297200"
  },
  {
    "text": "So that's what I'm asking. Find one that's close enough. ",
    "start": "1297200",
    "end": "1303290"
  },
  {
    "text": "And that's what the next\npiece of code I want to show you does. ",
    "start": "1303290",
    "end": "1332620"
  },
  {
    "text": "Excuse me. So I'm starting, just giving it\na value for x, so I don't",
    "start": "1332620",
    "end": "1339510"
  },
  {
    "text": "have to keep typing one in. Let's say it's 25.  I'm going to take epsilon\nto be 0.01.",
    "start": "1339510",
    "end": "1348630"
  },
  {
    "text": "So I want it within that\ndistance of the true answer. ",
    "start": "1348630",
    "end": "1354330"
  },
  {
    "text": "I'm going to keep track of the\nnumber of guesses here, not because we need it to actually\ncompute the answer, but",
    "start": "1354330",
    "end": "1360540"
  },
  {
    "text": "because I want to then discuss\nhow many iterations of the loop we're doing.",
    "start": "1360540",
    "end": "1366080"
  },
  {
    "text": "We're going to start by setting\nmy first guess at 0.0.",
    "start": "1366080",
    "end": "1371269"
  },
  {
    "text": "Again, this is going to be\nexhaustive enumeration. Then, I'm going to essentially\nencode this as a test of my",
    "start": "1371270",
    "end": "1380250"
  },
  {
    "text": "while loop while the absolute\nvalue of answer squared minus",
    "start": "1380250",
    "end": "1385280"
  },
  {
    "text": "x is greater than or equal to\nepsilon, and answer is less",
    "start": "1385280",
    "end": "1391630"
  },
  {
    "text": "than equal to x. So it's now a more\ncomplicated test. I've got a Boolean value.",
    "start": "1391630",
    "end": "1397179"
  },
  {
    "text": "Two things have to be true to\nexecute the body of the loop. I'm going to increment answer\nby a tiny amount, increment",
    "start": "1397180",
    "end": "1408430"
  },
  {
    "text": "the number of guesses just so\nI can keep track of it. ",
    "start": "1408430",
    "end": "1414610"
  },
  {
    "text": "Maybe I'm going to comment\nthis out for the first go around just so we don't see too\nmany print statements and",
    "start": "1414610",
    "end": "1421850"
  },
  {
    "text": "keep doing it.  And then when I'm done I'm going\nto see whether or not",
    "start": "1421850",
    "end": "1428370"
  },
  {
    "text": "what I found is indeed a square\nroot or close enough.",
    "start": "1428370",
    "end": "1434630"
  },
  {
    "text": "So if we think about why this\nloop terminates, why am I guaranteed that this loop\nwill terminate?",
    "start": "1434630",
    "end": "1441600"
  },
  {
    "text": "What's my decrementing\nfunction here? ",
    "start": "1441600",
    "end": "1448440"
  },
  {
    "text": "Somebody?  What's the decrementing\nfunction? What am I guaranteed to reduce\neach time through, and when I",
    "start": "1448440",
    "end": "1457180"
  },
  {
    "text": "get through, I'm done? ",
    "start": "1457180",
    "end": "1462960"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE] answer squared minus\nx1 times 1.",
    "start": "1462960",
    "end": "1471458"
  },
  {
    "text": "PROFESSOR: No. Close, sort of. But I appreciate\nyou're trying.",
    "start": "1471458",
    "end": "1477640"
  },
  {
    "text": "That's worth something\njust for the effort. Somebody else.",
    "start": "1477640",
    "end": "1483450"
  },
  {
    "text": "Remember, if we look at the\nproperties it has to have, it's going to guarantee me that\nwhen it gets to the right",
    "start": "1483450",
    "end": "1490940"
  },
  {
    "text": "value, I exit the loop, which\nsuggests it's going to certainly be part of the\ntest of the while.",
    "start": "1490940",
    "end": "1496420"
  },
  {
    "text": " Just look at this piece\nover here at the end.",
    "start": "1496420",
    "end": "1502790"
  },
  {
    "text": " Answer starts at 0.",
    "start": "1502790",
    "end": "1509450"
  },
  {
    "text": "I keep incrementing it. Eventually, answer minus x\nwill hit a value, right?",
    "start": "1509450",
    "end": "1520909"
  },
  {
    "text": "Eventually, I'll get to\nthe point that this condition must be true--",
    "start": "1520910",
    "end": "1525920"
  },
  {
    "text": "must be false rather. And then, I exit the loop. ",
    "start": "1525920",
    "end": "1531590"
  },
  {
    "text": "So this piece is not\nreally the key. It's this piece that guarantees\nme I'm going to get",
    "start": "1531590",
    "end": "1537940"
  },
  {
    "text": "out eventually.  This piece can get\nme out sooner.",
    "start": "1537940",
    "end": "1544090"
  },
  {
    "text": "It's kind of an optimization,\nif you will. ",
    "start": "1544090",
    "end": "1549980"
  },
  {
    "start": "1548000",
    "end": "1628000"
  },
  {
    "text": "So I'm just going to go until\nI find the answer. Let's see what happens\nwhen I run it. ",
    "start": "1549980",
    "end": "1560860"
  },
  {
    "text": "It tells me that 4.99, et cetera\nis close to the square",
    "start": "1560860",
    "end": "1566190"
  },
  {
    "text": "root of 25. So there are some things\nto note about this.",
    "start": "1566190",
    "end": "1573210"
  },
  {
    "text": "First, it didn't find 5, 25\nhappens to be a perfect",
    "start": "1573210",
    "end": "1579000"
  },
  {
    "text": "square, yet I didn't find it. Is that OK?",
    "start": "1579000",
    "end": "1584210"
  },
  {
    "text": "Yeah. Because that wasn't\nwhat I said. What I said is find\na y that has these",
    "start": "1584210",
    "end": "1590049"
  },
  {
    "text": "properties over here. And I did. I didn't say find the y that\ngets closest to the",
    "start": "1590050",
    "end": "1597160"
  },
  {
    "text": "square root of x. I said find one that has\nthese properties.",
    "start": "1597160",
    "end": "1603340"
  },
  {
    "text": "Effectively, what this is is a\nspecification of the problem.",
    "start": "1603340",
    "end": "1611029"
  },
  {
    "start": "1611030",
    "end": "1616410"
  },
  {
    "text": "And I've now written a piece\nof code that meets the specification. It does what I set out to do,\nand that's good enough.",
    "start": "1616410",
    "end": "1623980"
  },
  {
    "start": "1623980",
    "end": "1629059"
  },
  {
    "text": "Now, let's turn this print\nstatement back on.",
    "start": "1629060",
    "end": "1635410"
  },
  {
    "text": " It took almost 1/2 million\nguesses to get there.",
    "start": "1635410",
    "end": "1644040"
  },
  {
    "text": " But it was still blindingly\nfast.",
    "start": "1644040",
    "end": "1651279"
  },
  {
    "text": "So once again, exhaustive\nenumeration seems to be OK. Suppose, however, I choose\na bigger number.",
    "start": "1651280",
    "end": "1662769"
  },
  {
    "text": "Now, first, let's choose\nsomething that doesn't have a",
    "start": "1662770",
    "end": "1669296"
  },
  {
    "text": "good answer. Let's see what it\ndoes for that.  All right.",
    "start": "1669296",
    "end": "1675110"
  },
  {
    "text": "Pretty good. Also pretty fast. Not too many guesses.",
    "start": "1675110",
    "end": "1680540"
  },
  {
    "text": "But now, let's try this one. ",
    "start": "1680540",
    "end": "1692669"
  },
  {
    "start": "1691000",
    "end": "1759000"
  },
  {
    "text": "Well, it's going to wait. It's going to get done, but it's\ngoing to take a little bit longer than maybe\nwe want it to take.",
    "start": "1692670",
    "end": "1701059"
  },
  {
    "text": "Why is it taking so long? There it is. It found an answer, which\nI think is good.",
    "start": "1701060",
    "end": "1708320"
  },
  {
    "text": "But as you can see, it\ntook quite a few guesses to get there.",
    "start": "1708320",
    "end": "1713770"
  },
  {
    "text": "So why? Well, let me first ask\nthis question. Can we look at the code and\nanticipate how many guesses",
    "start": "1713770",
    "end": "1725710"
  },
  {
    "text": "it's going to have to take? We're going back to this issue\nof computational complexity,",
    "start": "1725710",
    "end": "1732650"
  },
  {
    "text": "but here, not of the problem\nbut of the solution. So this is algorithmic\nanalysis.",
    "start": "1732650",
    "end": "1739160"
  },
  {
    "text": "We're analyzing the algorithm,\nthis exhaustive enumeration algorithm, and trying to figure\nout how long it's",
    "start": "1739160",
    "end": "1747429"
  },
  {
    "text": "likely to take to run. Well, what does the running\ntime of this algorithm depend upon?",
    "start": "1747430",
    "end": "1753220"
  },
  {
    "text": " Yeah?",
    "start": "1753220",
    "end": "1758236"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: It depends on\nthe actual square root.",
    "start": "1758236",
    "end": "1764180"
  },
  {
    "start": "1759000",
    "end": "1903000"
  },
  {
    "text": "Yes. But in particular, the distance\nof the actual square root from the starting point.",
    "start": "1764180",
    "end": "1770970"
  },
  {
    "text": "So that's one factor\nit depends on. But that's not the\nonly factor. What else does it depend on?",
    "start": "1770970",
    "end": "1776790"
  },
  {
    "text": " Oh, do we have an injury?",
    "start": "1776790",
    "end": "1785290"
  },
  {
    "text": "We had a dropped pass and\na deflection there. All right.",
    "start": "1785290",
    "end": "1790300"
  },
  {
    "text": "Yes? AUDIENCE: It depends on the\nlevel of accuracy, so how you define epsilon.",
    "start": "1790300",
    "end": "1795559"
  },
  {
    "text": "PROFESSOR: It depends upon\nthe value of epsilon. Absolutely. ",
    "start": "1795560",
    "end": "1801670"
  },
  {
    "text": "How long it takes to run. AUDIENCE: [INAUDIBLE]. ",
    "start": "1801670",
    "end": "1808513"
  },
  {
    "text": "PROFESSOR: Someone with\na concern for safety. ",
    "start": "1808514",
    "end": "1813680"
  },
  {
    "text": "it depends upon the actual value\nof epsilon, because if epsilon is small, we may have\nto take more steps to get a",
    "start": "1813680",
    "end": "1822510"
  },
  {
    "text": "precise enough answer. And it depends upon\none more thing.",
    "start": "1822510",
    "end": "1827970"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE] the\nincrement that [INAUDIBLE]? PROFESSOR: The increment. Exactly.",
    "start": "1827970",
    "end": "1833150"
  },
  {
    "text": "Because the number of times we\ngo through the loop is going to be related to how\nbig a step we",
    "start": "1833150",
    "end": "1839660"
  },
  {
    "text": "take each time through. ",
    "start": "1839660",
    "end": "1845900"
  },
  {
    "text": "No applause? Thank you. So it depends upon all\nof these things.",
    "start": "1845900",
    "end": "1854080"
  },
  {
    "text": "And here, since we're trying\nto find a pretty [? big ?]",
    "start": "1854080",
    "end": "1859169"
  },
  {
    "text": "square root and a sort of\nprecise answer, but we're",
    "start": "1859170",
    "end": "1865130"
  },
  {
    "text": "taking tiny steps, it's\ngoing to take a long time to execute. So we could make it faster.",
    "start": "1865130",
    "end": "1872220"
  },
  {
    "text": "For example, suppose I change\nthe step size to this.",
    "start": "1872220",
    "end": "1880240"
  },
  {
    "text": " Plus equal by says increment\nthe value by whatever the",
    "start": "1880240",
    "end": "1888580"
  },
  {
    "text": "right side is. So I'm going to increment\nit by 1. ",
    "start": "1888580",
    "end": "1904429"
  },
  {
    "start": "1903000",
    "end": "1968000"
  },
  {
    "text": "Wow, it was really fast. But it didn't work. It failed.",
    "start": "1904430",
    "end": "1911429"
  },
  {
    "text": "That's not so good. So I can't just do that. And of course, it's not\nsurprising, because I ended up",
    "start": "1911430",
    "end": "1918820"
  },
  {
    "text": "jumping all over the answer. I could make epsilon smaller,\nbut that seems like cheating.",
    "start": "1918820",
    "end": "1928730"
  },
  {
    "text": "So really, what I need to do is\nfind a better algorithm, a",
    "start": "1928730",
    "end": "1935030"
  },
  {
    "text": "better way to attack\nthe problem.  Fortunately, I don't\nhave to invent it.",
    "start": "1935030",
    "end": "1942420"
  },
  {
    "text": "Some people a lot smarter than\nI am figured out a long time ago a good method for solving\nthis kind of problem.",
    "start": "1942420",
    "end": "1952340"
  },
  {
    "text": "And they're doing it\nusing something called bisection search. ",
    "start": "1952340",
    "end": "1969370"
  },
  {
    "start": "1968000",
    "end": "2403000"
  },
  {
    "text": "As we look at this particular\nimplementation of it, we're going to use two algorithmic\ntechniques that you'll use",
    "start": "1969370",
    "end": "1978060"
  },
  {
    "text": "over and over again because\nthey're generally useful. So the first one related to\nbisection search is we'll cut",
    "start": "1978060",
    "end": "1987810"
  },
  {
    "text": "the search space in half\neach iteration.",
    "start": "1987810",
    "end": "1998415"
  },
  {
    "start": "1998415",
    "end": "2003720"
  },
  {
    "text": "So with my brute force\nalgorithm, we're trimming the search base only a little\nbit each step.",
    "start": "2003720",
    "end": "2011610"
  },
  {
    "text": "So if we think about it, what it\nlooks like, we had a space",
    "start": "2011610",
    "end": "2018040"
  },
  {
    "text": "of values to search\nfor the answer.  And I started here.",
    "start": "2018040",
    "end": "2025779"
  },
  {
    "text": "And each step, I just trimmed\noff a tiny, tiny little bit, 0.001, leaving me a lot\nof space to search.",
    "start": "2025780",
    "end": "2035280"
  },
  {
    "text": "And that's why it\ntook so long. When I do bisection search, the\nbasic idea is each step I",
    "start": "2035280",
    "end": "2045170"
  },
  {
    "text": "want to cut the search\nspace in half. Get rid of half of the search\nspace each time.",
    "start": "2045170",
    "end": "2053599"
  },
  {
    "text": "So one way I could do\nit is I start with a guess say in the middle.",
    "start": "2053600",
    "end": "2062870"
  },
  {
    "text": "Just pick some guess that's in\nthe middle of my search space.",
    "start": "2062870",
    "end": "2068060"
  },
  {
    "text": "And now I say is it too\nhigh or too low? ",
    "start": "2068060",
    "end": "2074000"
  },
  {
    "text": "I can easily answer\nthat question. I square it. See is my result bigger than\nthe actual square root or",
    "start": "2074000",
    "end": "2080419"
  },
  {
    "text": "smaller than the actual\nsquare root? That tells me whether my guess\nis too big or too small.",
    "start": "2080420",
    "end": "2087369"
  },
  {
    "text": "Once I know that, I know which\nside of the guess the right answer is on.",
    "start": "2087370",
    "end": "2093239"
  },
  {
    "text": " So if I knew that my guess was\ntoo big, then I know there's",
    "start": "2093239",
    "end": "2100970"
  },
  {
    "text": "no point in looking over\nhere for my next guess. So I can get rid of this\nwhole half in one step.",
    "start": "2100970",
    "end": "2107559"
  },
  {
    "text": " Now, what should my\nnext guess be?",
    "start": "2107560",
    "end": "2113690"
  },
  {
    "text": " Yeah? AUDIENCE: [INAUDIBLE].",
    "start": "2113690",
    "end": "2119248"
  },
  {
    "text": "PROFESSOR: My next\nguess should be half way through there. Exactly.",
    "start": "2119248",
    "end": "2125210"
  },
  {
    "start": "2125210",
    "end": "2130230"
  },
  {
    "text": "And now, let's say this time\nmy answer is too small.",
    "start": "2130230",
    "end": "2137530"
  },
  {
    "text": "Then I know I can\nget rid of this. ",
    "start": "2137530",
    "end": "2142820"
  },
  {
    "text": "So now, I'm very quickly pruning\nmy search space. ",
    "start": "2142820",
    "end": "2152550"
  },
  {
    "text": "If I think about that, how many\ntimes am I likely to have to prune it?",
    "start": "2152550",
    "end": "2158400"
  },
  {
    "start": "2158400",
    "end": "2165299"
  },
  {
    "text": "It's much faster, right? As we'll see later, it's\nbasically log base 2.",
    "start": "2165300",
    "end": "2174680"
  },
  {
    "text": "If I have some number of\nvalues to look at--",
    "start": "2174680",
    "end": "2179880"
  },
  {
    "text": "and by the way, how many values\ndo I have in my search space to start with?",
    "start": "2179880",
    "end": "2186130"
  },
  {
    "text": "What determines it? Clearly, the first value and the\nlast value, but also, how",
    "start": "2186130",
    "end": "2196250"
  },
  {
    "text": "small I'm dividing it up. ",
    "start": "2196250",
    "end": "2202200"
  },
  {
    "text": "Right? So I have to think\nabout that too. What is the precision with\nwhich I do this.",
    "start": "2202200",
    "end": "2210060"
  },
  {
    "text": "Am I looking at every\none millionth of a number or every 0.01?",
    "start": "2210060",
    "end": "2215579"
  },
  {
    "text": "That will tell me\nhow big it is. Once I know how big my search\nspace is, I know that if I",
    "start": "2215580",
    "end": "2225740"
  },
  {
    "text": "search it linearly looking at\nevery value, my worst cases, I look at everything until\nI get to the end.",
    "start": "2225740",
    "end": "2231860"
  },
  {
    "text": " Well, my best case is\nI get lucky, and my",
    "start": "2231860",
    "end": "2237370"
  },
  {
    "text": "first guess is right. But if I use bisection search,\nmy worst case is going to be",
    "start": "2237370",
    "end": "2243700"
  },
  {
    "text": "log number of values\nin that space. Because each time, I throw\nhalf of them away.",
    "start": "2243700",
    "end": "2252010"
  },
  {
    "text": "We'll see that in more\ndetail later on. Let's go back and look\nat the code now.",
    "start": "2252010",
    "end": "2257800"
  },
  {
    "start": "2257800",
    "end": "2277980"
  },
  {
    "text": "So it starts as before with\na value for epsilon. But now, I'm going to take a\nlower bound, here, and an",
    "start": "2277980",
    "end": "2286970"
  },
  {
    "text": "upper bound on my\nsearch space. ",
    "start": "2286970",
    "end": "2292430"
  },
  {
    "text": "I'm going to say my initial\nguess will be the upper bound plus the lower bound\nover 2 halfway",
    "start": "2292430",
    "end": "2299100"
  },
  {
    "text": "through my search space. ",
    "start": "2299100",
    "end": "2305510"
  },
  {
    "text": "And then, I'm just going to work\nmy way through it until I get to the answer or\ndon't find it.",
    "start": "2305510",
    "end": "2313779"
  },
  {
    "text": " So should we look at what's\ngoing on here?",
    "start": "2313780",
    "end": "2320049"
  },
  {
    "text": "Let's try this.  Well, let's first make sure it\nworks for a small value.",
    "start": "2320050",
    "end": "2334270"
  },
  {
    "text": "Never test your program first\non something big. Always try your program in\nsomething small first.",
    "start": "2334270",
    "end": "2340040"
  },
  {
    "text": " Let's try it on that. ",
    "start": "2340040",
    "end": "2348099"
  },
  {
    "text": "Got an answer.  Notice that it's different from\nthe answer we got last",
    "start": "2348100",
    "end": "2354930"
  },
  {
    "text": "time we looked for the\nsquare root of 25.  But that's OK, because it's\nstill meets the specification.",
    "start": "2354930",
    "end": "2364830"
  },
  {
    "text": "It's still within epsilon of\nthe actual square root. And I didn't have to say that\nI wanted it below or the",
    "start": "2364830",
    "end": "2371970"
  },
  {
    "text": "square root or above, just\nsaid within epsilon. Sure enough, different\nalgorithm, different answer,",
    "start": "2371970",
    "end": "2378960"
  },
  {
    "text": "but equally good, but\na lot faster.",
    "start": "2378960",
    "end": "2384990"
  },
  {
    "text": "Now let's try it for\nthe big value. ",
    "start": "2384990",
    "end": "2404130"
  },
  {
    "start": "2403000",
    "end": "2513000"
  },
  {
    "text": "Wow, that was a lot\nfaster, wasn't it? ",
    "start": "2404130",
    "end": "2411369"
  },
  {
    "text": "It got me an answer. Probably, not exactly\nthe same answer as before but pretty close.",
    "start": "2411370",
    "end": "2419310"
  },
  {
    "text": "But it did it in only\n26 guesses. Pretty cool.",
    "start": "2419310",
    "end": "2425610"
  },
  {
    "text": "And in fact, we'll see over and\nover again that bisection search is a really good\ntechnique for",
    "start": "2425610",
    "end": "2434250"
  },
  {
    "text": "finding quick answers. ",
    "start": "2434250",
    "end": "2440900"
  },
  {
    "text": "And again, why is it 26? Well, we had some number of\nguesses to start with.",
    "start": "2440900",
    "end": "2448350"
  },
  {
    "text": "After 1, it was half as big,\nthen a quarter is big, and eventually, log 2 of the size.",
    "start": "2448350",
    "end": "2456430"
  },
  {
    "text": "But what was the size? Was it the number 12345?",
    "start": "2456430",
    "end": "2465780"
  },
  {
    "text": "No. We already sort of talked\nabout that. What was it?",
    "start": "2465780",
    "end": "2471860"
  },
  {
    "text": "Let's look at the code, and\nlet's think about what was the size of our initial\nsearch space.",
    "start": "2471860",
    "end": "2478465"
  },
  {
    "text": " It's a little bit tricky to\nthink about this, right?",
    "start": "2478465",
    "end": "2484680"
  },
  {
    "start": "2484680",
    "end": "2491349"
  },
  {
    "text": "Now, we have to think a little\nbit harder about when we exit the loop, because in\nfundamentally, that's telling",
    "start": "2491350",
    "end": "2498940"
  },
  {
    "text": "me the size of the\nsearch space.  So what determined the size\nof the search space?",
    "start": "2498940",
    "end": "2505410"
  },
  {
    "start": "2505410",
    "end": "2514386"
  },
  {
    "text": "Well, we talked about the upper\nand the lower bound. But what's telling me\nroughly speaking how",
    "start": "2514386",
    "end": "2520950"
  },
  {
    "text": "many divisions I have? It's epsilon.",
    "start": "2520950",
    "end": "2526700"
  },
  {
    "text": " It's not 0.01 because when\nI square it, it has to be",
    "start": "2526700",
    "end": "2533760"
  },
  {
    "text": "smaller than 0.01. But that tells me roughly\nhow many I have. ",
    "start": "2533760",
    "end": "2541740"
  },
  {
    "text": "And so it's going to be roughly\n12345 divided by 0.01",
    "start": "2541740",
    "end": "2547970"
  },
  {
    "text": "squared, which turns out to\nbe 26.897 more or less.",
    "start": "2547970",
    "end": "2555170"
  },
  {
    "text": "So we could predict it. And son of a gun, when we ran\nit, we actually matched the",
    "start": "2555170",
    "end": "2561359"
  },
  {
    "text": "prediction. That's the great thing about\nalgorithmic analysis.",
    "start": "2561360",
    "end": "2566930"
  },
  {
    "text": "We can actually get accurate\nguesses as to how long a program is likely\nto take to run.",
    "start": "2566930",
    "end": "2573560"
  },
  {
    "text": "This is an important thing\nbecause sometimes we do that and we say, oh, it's going\nto take a year. I better not even try.",
    "start": "2573560",
    "end": "2579990"
  },
  {
    "text": "I better find a smarter\nalgorithm. Or we do it and say, well, it's\ngoing to take almost no",
    "start": "2579990",
    "end": "2585140"
  },
  {
    "text": "time at all. I'm not going to waste\nmy time looking for a smarter algorithm. I'm going to live with\nthe one I've got.",
    "start": "2585140",
    "end": "2592950"
  },
  {
    "text": "It's important, and again, as\nI said, it's a topic we're going to get back to. Of course, whether it's\n26, 27, or even 50",
    "start": "2592950",
    "end": "2601260"
  },
  {
    "text": "doesn't really matter. What matters is it's\nnot a billion. Right?",
    "start": "2601260",
    "end": "2606710"
  },
  {
    "text": "Because we don't really care\nsmall differences. Whether it takes 25 or it\ntakes 50 will be an",
    "start": "2606710",
    "end": "2612730"
  },
  {
    "text": "imperceptible difference. It's whether it's a huge\ndifference that matters.",
    "start": "2612730",
    "end": "2618109"
  },
  {
    "text": "And that's really the kind of\nthings we're going after is orders of magnitude.",
    "start": "2618110",
    "end": "2625530"
  },
  {
    "text": "Now, I have a question\nabout this program. I've been obsessing about\nwhether it's fast enough.",
    "start": "2625530",
    "end": "2632330"
  },
  {
    "text": "And we've shown it is. But does it work? Kind of more important.",
    "start": "2632330",
    "end": "2637550"
  },
  {
    "text": "It's always possible to write\na really fast program that gives you the wrong answer.",
    "start": "2637550",
    "end": "2642770"
  },
  {
    "text": "The problem is to write a fast\nprogram that give you the right answer. Does this program always work?",
    "start": "2642770",
    "end": "2650140"
  },
  {
    "text": "Well, it worked for 25. It worked for 12345. Is that good enough?",
    "start": "2650140",
    "end": "2656750"
  },
  {
    "text": "Probably not. We might want to try it\nin some other values. I'll ask a simpler question.",
    "start": "2656750",
    "end": "2663040"
  },
  {
    "text": "Does it always work on\npositive values? ",
    "start": "2663040",
    "end": "2674110"
  },
  {
    "text": "All right. I'll give you a hint. No. It does not. ",
    "start": "2674110",
    "end": "2680820"
  },
  {
    "text": "I'm not going to, however,\ntell you why it doesn't, because I want you to\nthink about it.",
    "start": "2680820",
    "end": "2686040"
  },
  {
    "text": "And I want you to\ntell me why it doesn't in the next lecture. But because I'm not a complete\nsadist, I'll give you a hint.",
    "start": "2686040",
    "end": "2695810"
  },
  {
    "text": "When we use bisection search, or\nfor that matter, any search",
    "start": "2695810",
    "end": "2701190"
  },
  {
    "text": "method, we are depending upon\nthe fact that the answer lies",
    "start": "2701190",
    "end": "2708630"
  },
  {
    "text": "somewhere in the region\nwe're searching. ",
    "start": "2708630",
    "end": "2713840"
  },
  {
    "text": "If indeed the answer is out\nhere or out here, then it",
    "start": "2713840",
    "end": "2720190"
  },
  {
    "text": "doesn't matter how carefully\nI search this region. I'm not going to find\nthe answer.",
    "start": "2720190",
    "end": "2726130"
  },
  {
    "text": " And so this program doesn't work\non some potential values",
    "start": "2726130",
    "end": "2735260"
  },
  {
    "text": "of x because the actual square\nroot of x will not lie in the region that the program\nis searching.",
    "start": "2735260",
    "end": "2744000"
  },
  {
    "text": "I leave it to you to think about\nwhat such values are. And we can talk about that\non the next lecture.",
    "start": "2744000",
    "end": "2752540"
  },
  {
    "text": " Suppose I want to use this\nprogram to find the cube root.",
    "start": "2752540",
    "end": "2759420"
  },
  {
    "text": "Suppose it worked, and\nI want it to use it to find a cube root. What would I have to change? How would I change it, so it\nfound cube roots instead of",
    "start": "2759420",
    "end": "2766890"
  },
  {
    "text": "square roots?  Well, I can take it up.",
    "start": "2766890",
    "end": "2772740"
  },
  {
    "text": "I could use cut and paste, and\npaste it into my editor and get a new program.",
    "start": "2772740",
    "end": "2778670"
  },
  {
    "text": "And how would I change\nthat new program to make it do cube roots? ",
    "start": "2778670",
    "end": "2784480"
  },
  {
    "text": "Not very hard. Think only two places\nhave to get changed. ",
    "start": "2784480",
    "end": "2793150"
  },
  {
    "text": "That's for the simplicity,\nsay cube roots of positive numbers. ",
    "start": "2793150",
    "end": "2803220"
  },
  {
    "text": "I think you said the\nright thing. All I have to do is change that\ntwo to a three and that",
    "start": "2803220",
    "end": "2812270"
  },
  {
    "text": "two to a three, and I'm done. And I should probably change the\nmessage to say cube root.",
    "start": "2812270",
    "end": "2819450"
  },
  {
    "text": " Pretty easy. ",
    "start": "2819450",
    "end": "2826550"
  },
  {
    "text": "On the other hand, suppose I\nalso want it to find the",
    "start": "2826550",
    "end": "2831690"
  },
  {
    "text": "fourth root, and the fifth\nroot, and the sixth root, however many roots.",
    "start": "2831690",
    "end": "2837180"
  },
  {
    "text": "Well, I'm going to get pretty\ntired of cutting, and pasting, and building a whole\nbunch of things.",
    "start": "2837180",
    "end": "2843789"
  },
  {
    "text": "So really, what I want to do\nis find a way to write the code that will find the nth root\nof a number for any n.",
    "start": "2843790",
    "end": "2855100"
  },
  {
    "text": " To do that, I'm going\nto introduce a",
    "start": "2855100",
    "end": "2862270"
  },
  {
    "text": "new programming concept. And that concept is\nthe function.",
    "start": "2862270",
    "end": "2867670"
  },
  {
    "text": "And that will be the main topic\nof Thursday's lecture. ",
    "start": "2867670",
    "end": "2875647"
  }
]