[
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "5324"
  },
  {
    "start": "5324",
    "end": "13080"
  },
  {
    "text": "JASON KU: Welcome, everybody,\nto the second-to-last lecture of 6.006.",
    "start": "13080",
    "end": "18990"
  },
  {
    "text": "In this lecture,\nwe've mostly covered all of the testable\nmaterial that we're",
    "start": "18990",
    "end": "24570"
  },
  {
    "text": "going to have on the\nfinal, or on quiz 3.",
    "start": "24570",
    "end": "30779"
  },
  {
    "text": "Today, really what\nwe're talking about is putting into context\nall the material that we've learned over\nthe course of the term",
    "start": "30780",
    "end": "39920"
  },
  {
    "text": "at a high level and talk about\nwhere we can go from here in terms of other theory\nclasses and other classes",
    "start": "39920",
    "end": "47060"
  },
  {
    "text": "in the department that are\nrelated to this material. Now, most things\nin the department are in some way related\nto this material.",
    "start": "47060",
    "end": "54240"
  },
  {
    "text": "And so that's why there's\na foundational course. But we're going to try to talk\nabout it from a high level",
    "start": "54240",
    "end": "59420"
  },
  {
    "text": "and talk about how some\nfuture things that you",
    "start": "59420",
    "end": "65268"
  },
  {
    "text": "might be interested relate. OK, so we started out\nthe term, in lecture one,",
    "start": "65269",
    "end": "71420"
  },
  {
    "text": "talking about 6.006, and\nwe had four main goals that we had for our course--\nreally three main goals",
    "start": "71420",
    "end": "81110"
  },
  {
    "text": "Does anyone remember\nwhat those goals were? ",
    "start": "81110",
    "end": "89160"
  },
  {
    "text": "So you got to the\nlast one first. The first one was to solve\nhard computational problems,",
    "start": "89160",
    "end": "96000"
  },
  {
    "text": "to be able to solve problems. So this is kind of like the\n\"let's make an algorithm\"",
    "start": "96000",
    "end": "103710"
  },
  {
    "text": "part of the course. 1, solve hard\ncomputational problems.",
    "start": "103710",
    "end": "111135"
  },
  {
    "start": "111135",
    "end": "116620"
  },
  {
    "text": "I guess \"hard\" here maybe\nshould be in quotes because we saw in the last\nlecture what hard",
    "start": "116620",
    "end": "123010"
  },
  {
    "text": "means in a technical sense. Hard could mean that there's\nno efficient algorithm that we",
    "start": "123010",
    "end": "131350"
  },
  {
    "text": "know how to solve a problem on. That's getting a little\nbit of ahead of ourselves. Computational problems\nwith algorithms",
    "start": "131350",
    "end": "137650"
  },
  {
    "text": "is really the key\npart about this goal. It's kind of the\nsame goal that you have in a class like\n6.0001 or 6.009.",
    "start": "137650",
    "end": "146230"
  },
  {
    "text": "You're trying to\nconvince a computer that you solved a problem\non a finite set of inputs.",
    "start": "146230",
    "end": "154930"
  },
  {
    "text": "But really what\nthis class is about is two other things, which\nis more about communication",
    "start": "154930",
    "end": "161680"
  },
  {
    "text": "to people rather than computers. Your algorithm might be\ncorrect or efficient,",
    "start": "161680",
    "end": "168010"
  },
  {
    "text": "but you need to be able to\ncommunicate that to humans. And that's what the\nother two goals are. So second one is\nargue correctness.",
    "start": "168010",
    "end": "181150"
  },
  {
    "text": "Basically, the thing that\nI'm doing to my inputs is always going to lead\nme to a correct output.",
    "start": "181150",
    "end": "187855"
  },
  {
    "text": " No matter what input I\ngive it, any valid input--",
    "start": "187855",
    "end": "193140"
  },
  {
    "text": "there could be an infinite\nspace of possible inputs, and in this class,\nthat's the case,",
    "start": "193140",
    "end": "198330"
  },
  {
    "text": "because we want our input size\nto grow arbitrarily large-- we need to be able\nto argue correctness",
    "start": "198330",
    "end": "204660"
  },
  {
    "text": "that it's going to return\nme the correct thing no matter what my inputs are. And in order to do that, that's\nessentially-- that's 6.042.",
    "start": "204660",
    "end": "214140"
  },
  {
    "text": "This whole class has\nbasically been applied 6.042. I've given you some\nprocedures, and you",
    "start": "214140",
    "end": "222360"
  },
  {
    "text": "have to prove things\nabout these procedures. Or most of the time,\nwe proved it for you, and then you've used\nthem as black boxes.",
    "start": "222360",
    "end": "229410"
  },
  {
    "text": "But that's a lot of what\nthis class is about. And the third one\nis efficiency--",
    "start": "229410",
    "end": "236030"
  },
  {
    "text": " argue that it's \"good,\"\nfor lack of a better thing.",
    "start": "236030",
    "end": "242700"
  },
  {
    "text": "This is efficiency. What does \"good\" mean? Well, that was hard to know\nat the beginning of our class.",
    "start": "242700",
    "end": "250500"
  },
  {
    "text": "And so we set up this model\nof computation, a framework, through which we could\ndetermine how good or bad",
    "start": "250500",
    "end": "258139"
  },
  {
    "text": "our algorithms were by saying-- by defining a model of\ncomputation, saying what things",
    "start": "258140",
    "end": "263509"
  },
  {
    "text": "we can do in constant time, and\nthen just building off of that. So this is basically our\nmodel plus some asymptotics",
    "start": "263510",
    "end": "275362"
  },
  {
    "text": "or something like that.  Ran out of space.",
    "start": "275362",
    "end": "281350"
  },
  {
    "text": "What? AUDIENCE: It's\nabout scalability. JASON KU: Yeah, this\nis about scalability. A model of computation tells\nus how much time we can spend,",
    "start": "281350",
    "end": "290310"
  },
  {
    "text": "but it's compared\nto our input size. This is always about,\nhow does our algorithm",
    "start": "290310",
    "end": "296850"
  },
  {
    "text": "perform relative to the rate\nthat our problem size grows? And so that's what\nwe mean by \"good.\"",
    "start": "296850",
    "end": "303780"
  },
  {
    "text": "And in this class, we don't\ntend to talk about constant size problems. It's about how algorithms\ncan scale as you",
    "start": "303780",
    "end": "312629"
  },
  {
    "text": "have arbitrarily large inputs. That's why we need\nrecursion and induction to be able to prove things\nabout our algorithms,",
    "start": "312630",
    "end": "319230"
  },
  {
    "text": "because they're for arbitrary n. And that's why we need this\nrelative-to-input size,",
    "start": "319230",
    "end": "327449"
  },
  {
    "text": "the growth factor of our\nalgorithm's performance, relative to the input.",
    "start": "327450",
    "end": "333460"
  },
  {
    "text": "OK, and then the\nlast thing is, to me,",
    "start": "333460",
    "end": "339370"
  },
  {
    "text": "one of the most\nimportant things, is communicating these\nthings to another human.",
    "start": "339370",
    "end": "345030"
  },
  {
    "text": "So communication is key here.",
    "start": "345030",
    "end": "351450"
  },
  {
    "text": "If you can always\nwrite good code that's always\nright, good for you.",
    "start": "351450",
    "end": "356490"
  },
  {
    "text": "I can't do that all the time. But that might mean\nthat you can be very--",
    "start": "356490",
    "end": "364310"
  },
  {
    "text": "a competent, independent\ncomputer programmer. But you are going to be limited\nin what you can do if you're",
    "start": "364310",
    "end": "374510"
  },
  {
    "text": "only able to rely on yourself. A lot about computer science\nis working with others",
    "start": "374510",
    "end": "382010"
  },
  {
    "text": "to solve computational problems. And when you're\nworking with others to solve computational\nproblems, you",
    "start": "382010",
    "end": "387292"
  },
  {
    "text": "need to be able to\ncommunicate with them, and you need to be able\nto communicate them both what it is you're doing and\nwhy it is you're doing it--",
    "start": "387292",
    "end": "396590"
  },
  {
    "text": "that you're doing the correct\nthing and that it's efficient. And so that's a big part\nabout what this course is.",
    "start": "396590",
    "end": "404030"
  },
  {
    "text": "At the end of the\nday, on your quiz, if you write down Python\nscript for a correct algorithm,",
    "start": "404030",
    "end": "412730"
  },
  {
    "text": "but we don't know\nwhat it's doing, but it's correct,\nwe're not going to give you full points on that,\nbecause you're not satisfying",
    "start": "412730",
    "end": "421130"
  },
  {
    "text": "the conditions of this class. It's really about the\ncommunication here.",
    "start": "421130",
    "end": "426610"
  },
  {
    "text": "OK, so just to review,\nsince we've not",
    "start": "426610",
    "end": "431840"
  },
  {
    "text": "discussed how the most recent\nlecture fits into your problem",
    "start": "431840",
    "end": "437960"
  },
  {
    "text": "sets. We didn't have any problem\nsets that covered complexity,",
    "start": "437960",
    "end": "444070"
  },
  {
    "text": "so how does that fit in? Well, argue that the ways that\nwe're solving our problems are good.",
    "start": "444070",
    "end": "449910"
  },
  {
    "text": "What we proved in the last\nlecture was that most problems cannot be solved good.",
    "start": "449910",
    "end": "455960"
  },
  {
    "text": "They can't be solved\nin polynomial time with respect to the\nsize of your input.",
    "start": "455960",
    "end": "461340"
  },
  {
    "text": "However, most of the\nproblems that we think about, in a sense, I can prove to\nyou that it's a yes solution.",
    "start": "461340",
    "end": "471830"
  },
  {
    "text": "I can show you a simple\npath in this graph that has a certain length.",
    "start": "471830",
    "end": "477920"
  },
  {
    "text": "Or I can show you a subset\nthat sums to a certain value in a particular problem.",
    "start": "477920",
    "end": "483320"
  },
  {
    "text": "I can give you a\ncertificate that I can prove to you in a\nreasonable amount of time that, yes, I can\nprove to you that this",
    "start": "483320",
    "end": "490220"
  },
  {
    "text": "is-- the answer to\nthis thing is correct. And that's what we talked\nabout in the last lecture.",
    "start": "490220",
    "end": "496880"
  },
  {
    "text": "So not always \"good\"\nalgorithms to solve problems,",
    "start": "496880",
    "end": "520210"
  },
  {
    "text": "but many problems we think\nabout can be either checked",
    "start": "520210",
    "end": "542270"
  },
  {
    "text": "in polynomial time-- ",
    "start": "542270",
    "end": "548480"
  },
  {
    "text": "this is the concept of having\na certificate that I could give you of polynomial\nsize that could",
    "start": "548480",
    "end": "553610"
  },
  {
    "text": "be checked in polynomial time-- in a sense, that's a way--",
    "start": "553610",
    "end": "558660"
  },
  {
    "text": "check-- checked in\npolynomial time. This leads to our class\nof decision problems, NP.",
    "start": "558660",
    "end": "566570"
  },
  {
    "text": "Or it can be solved by brute\nforce in exponential time.",
    "start": "566570",
    "end": "580190"
  },
  {
    "text": "Most of the things that we've\ntalked about in this class fall into one of\nthese two categories. We can just brute force\nover the combinatorial space",
    "start": "580190",
    "end": "587540"
  },
  {
    "text": "of possible outputs and check\nto see if they're correct. Or I can give you a certificate\nbasically saying, look,",
    "start": "587540",
    "end": "598550"
  },
  {
    "text": "I can solve-- actually, anything\nthat's of this form can be checked in this\nform, because there's only a polynomial number of\nthings to check-- or, sorry,",
    "start": "598550",
    "end": "605570"
  },
  {
    "text": "an exponential possible\nnumber of certificates of polynomial length to check. But basically, this is\nsaying that the problems",
    "start": "605570",
    "end": "613450"
  },
  {
    "text": "that we think of mostly fall\ninto these two categories. And so there usually\nare algorithms to solve",
    "start": "613450",
    "end": "620260"
  },
  {
    "text": "the problems that\nwe care about, even if most random problems\nin terms of bit strings",
    "start": "620260",
    "end": "629510"
  },
  {
    "text": "that we gave an analysis\nin the last lecture actually prove that most random\nproblems are not solvable.",
    "start": "629510",
    "end": "636050"
  },
  {
    "text": " In a sense, the problems we\nthink about are not random.",
    "start": "636050",
    "end": "642180"
  },
  {
    "text": "They kind of have this\nstructure that they can be checked pretty quickly. OK, so that's what\nwe mean when we",
    "start": "642180",
    "end": "649730"
  },
  {
    "text": "are talking about complexity. For the purposes of\nthe final, you'll be able to see on your\nfinal exam practice problems",
    "start": "649730",
    "end": "659149"
  },
  {
    "text": "that we're going to give you,\nmost of what we cover in terms",
    "start": "659150",
    "end": "665450"
  },
  {
    "text": "of material on the final\nthat will be testing the lecture 19 material will\nbe in terms of the definitions.",
    "start": "665450",
    "end": "674450"
  },
  {
    "text": "Do you understand what the\ndecision problem class NP is? EXP is?",
    "start": "674450",
    "end": "680630"
  },
  {
    "text": "Do you know how these\nrelate to each other? EXP is definitely a\nsuperset of NP here.",
    "start": "680630",
    "end": "687620"
  },
  {
    "text": "NP nestles inside here. They could be\nequal-- probably not. Those are the types of\nthings that we would address.",
    "start": "687620",
    "end": "695480"
  },
  {
    "text": "Knowing a directionality\nof a reduction. If you have a problem\nA and a problem",
    "start": "695480",
    "end": "704330"
  },
  {
    "text": "B, and I know that this one\nis difficult by some measure--",
    "start": "704330",
    "end": "713290"
  },
  {
    "text": "I already happened to\nknow that it's very hard, like NP-hard or\nsomething like that.",
    "start": "713290",
    "end": "719500"
  },
  {
    "text": "If this is a problem that\nI'm interested in knowing the complexity about,\nand I can prove",
    "start": "719500",
    "end": "725560"
  },
  {
    "text": "that I can solve it if I\nhad a black box to solve B--",
    "start": "725560",
    "end": "731710"
  },
  {
    "text": "any black box to\nsolve B, and I could make this reduction\nin polynomial time,",
    "start": "731710",
    "end": "737250"
  },
  {
    "text": "and if this is hard, that\nmeans this can't be-- ",
    "start": "737250",
    "end": "743769"
  },
  {
    "text": "that means that if\nthis is hard, then I better not be able to solve\nthis in polynomial time,",
    "start": "743770",
    "end": "749860"
  },
  {
    "text": "because then I would be able to\nsolve this in polynomial time. So that's basically\nthe type of argument",
    "start": "749860",
    "end": "755830"
  },
  {
    "text": "usually in a\ntrue/false question we might have on the\nfinal exam for you to kind of understand the basic\nhigh-level definitions involved",
    "start": "755830",
    "end": "765130"
  },
  {
    "text": "in what was talked\nabout in lecture 19. Hardness-- the very most\ndifficult problems of these",
    "start": "765130",
    "end": "772870"
  },
  {
    "text": "classes-- and completeness--\nsorry, anything harder than things in these classes.",
    "start": "772870",
    "end": "779290"
  },
  {
    "text": "Whereas completeness is\nthe ones that are in this set, but at least as hard as\nanything in those classes.",
    "start": "779290",
    "end": "785890"
  },
  {
    "text": "So that's just to give\nyou a brief overview of the only material\nthat hasn't been tested",
    "start": "785890",
    "end": "792700"
  },
  {
    "text": "but might be tested\non the final. So when we don't have\na good algorithm,",
    "start": "792700",
    "end": "800079"
  },
  {
    "text": "we can actually prove\nthat it probably doesn't have a good algorithm.",
    "start": "800080",
    "end": "807190"
  },
  {
    "text": "And that's a problem\nthat you'll be able to solve in\nfuture classes, if you",
    "start": "807190",
    "end": "812590"
  },
  {
    "text": "continue along this track. OK, so what's the actual\ncontent that we talked about?",
    "start": "812590",
    "end": "818710"
  },
  {
    "text": "This is a very\nhigh-level overview of why we're taking this class,\nwhy you're taking this class. But what is the content\nwe actually covered?",
    "start": "818710",
    "end": "826569"
  },
  {
    "text": "I like to break it up into\nthree units and, in a sense,",
    "start": "826570",
    "end": "832340"
  },
  {
    "text": "two subunits. So quiz 1 material and quiz 2\nmaterial was about showing you",
    "start": "832340",
    "end": "844310"
  },
  {
    "text": "some nice black boxes. Basically, if I'm going to have\ninputs of non-constant size,",
    "start": "844310",
    "end": "850220"
  },
  {
    "text": "it's going to be useful for\nme to be able to find things among those elements.",
    "start": "850220",
    "end": "856240"
  },
  {
    "text": "So that's really what\nquiz 1 is all about-- data structures\nfor finding things",
    "start": "856240",
    "end": "870319"
  },
  {
    "text": "in non-constant size database.",
    "start": "870320",
    "end": "888240"
  },
  {
    "text": "Sure. And when we were\nstoring these things, we want to support maybe two\ndifferent types of queries--",
    "start": "888240",
    "end": "894295"
  },
  {
    "start": "894295",
    "end": "899519"
  },
  {
    "text": "ones that were intrinsic to\nthe items, what the items were, and ones based on what--\nan extrinsic order",
    "start": "899520",
    "end": "907140"
  },
  {
    "text": "was placed on these items. And that was a way in\nwhich we broke down,",
    "start": "907140",
    "end": "913383"
  },
  {
    "text": "how should I approach\nlooking at this problem? I want to be able to\nsupport queries and maintain an extrinsic order\non these things.",
    "start": "913383",
    "end": "919920"
  },
  {
    "text": "I might want a sequence. This is a sequence\nextrinsic order.",
    "start": "919920",
    "end": "930090"
  },
  {
    "text": " Or I want to be able to look\nup, is this thing in my set,",
    "start": "930090",
    "end": "939160"
  },
  {
    "text": "by a key that we identify,\nwith a unique key. So this is some intrinsic\nqueries, and often order.",
    "start": "939160",
    "end": "950930"
  },
  {
    "text": " A hash table doesn't maintain\nany order on my keys.",
    "start": "950930",
    "end": "959040"
  },
  {
    "text": "But it does support\nintrinsic queries-- is this thing in my set or not? But we did show you\nother set data structures",
    "start": "959040",
    "end": "965399"
  },
  {
    "text": "that do support an\nintrinsic order that allows me to see what the next\nlarger and the next previous--",
    "start": "965400",
    "end": "972329"
  },
  {
    "text": "the next larger and the next\nsmaller item is in my set.",
    "start": "972330",
    "end": "980140"
  },
  {
    "text": "So here's a summary of those\ndata structures that we had. I'm not going to go into\nhow to use these things",
    "start": "980140",
    "end": "988100"
  },
  {
    "text": "or how to choose\nfrom among them here. That's what your quiz 1\nreview lecture was all about.",
    "start": "988100",
    "end": "996709"
  },
  {
    "text": "But basically, the idea here\nis, if we have a sequence, most of the time when\nyou're programming,",
    "start": "996710",
    "end": "1004080"
  },
  {
    "text": "being able to push and\npop at the end of a list is pretty good. Which is why Python, the\nmost fundamental data",
    "start": "1004080",
    "end": "1011340"
  },
  {
    "text": "structure that you have,\nis a list, because it's a super useful thing. I just want to store\na bunch of things,",
    "start": "1011340",
    "end": "1017700"
  },
  {
    "text": "have random access to the,\nsay, 10th element to my thing,",
    "start": "1017700",
    "end": "1024510"
  },
  {
    "text": "but I'm not necessarily\nhaving to dynamically update the order of these\nthings dynamically.",
    "start": "1024510",
    "end": "1033180"
  },
  {
    "text": "I don't necessarily\nhave to insert something in the middle of the list. But most of the\ntime, what I can do",
    "start": "1033180",
    "end": "1038339"
  },
  {
    "text": "is put it at the end of the\nlist and maybe swap it down into place if I need to.",
    "start": "1038339",
    "end": "1044369"
  },
  {
    "text": "So that's why a list\nis super useful. A sequence AVL tree,\nuseful, but not",
    "start": "1044369",
    "end": "1051630"
  },
  {
    "text": "as ubiquitous as a linked list-- I mean, as a dynamic\narray, sorry. I said linked list,\nI meant Python list,",
    "start": "1051630",
    "end": "1058830"
  },
  {
    "text": "which is a dynamic array. So the dynamic\narray tended to be, in your coding practice, your\nmost common sequence data",
    "start": "1058830",
    "end": "1067920"
  },
  {
    "text": "structure here. Though, we can get pretty\ngood for this insert in the middle operation\nwith the sequence AVL.",
    "start": "1067920",
    "end": "1075330"
  },
  {
    "text": "OK, then on the set\ndata structure side, I categorize these things into\na couple different categories",
    "start": "1075330",
    "end": "1083225"
  },
  {
    "text": "here in terms of the operations\nwe can support on these things. These are all intrinsic\noperations-- finding things,",
    "start": "1083225",
    "end": "1088650"
  },
  {
    "text": "inserting, deleting things. I think of the first three as\nbeing dictionary operations.",
    "start": "1088650",
    "end": "1094590"
  },
  {
    "text": "I want to just look up\nwhether something's there. Whereas the last two are\norder-preserving operations,",
    "start": "1094590",
    "end": "1103919"
  },
  {
    "text": "where it matters what the order\nof these things are stored in. And so as you can see from\nthe asymptotic complexity",
    "start": "1103920",
    "end": "1114600"
  },
  {
    "text": "of the various operations\nhere, the hash table is actually super good if you\nwant the dictionary oper--",
    "start": "1114600",
    "end": "1120690"
  },
  {
    "text": "if you just want to support\ndictionary operations. But in the cases where you need\nto maintain order dynamically,",
    "start": "1120690",
    "end": "1128160"
  },
  {
    "text": "a set AVL is the way to go. But if you don't\nneed it dynamic, but you still need\nthose order operations,",
    "start": "1128160",
    "end": "1134980"
  },
  {
    "text": "a sorted array is\njust good enough if you don't need to\nchange what they are. So that's a quick overview of\nquiz 1-type data structures",
    "start": "1134980",
    "end": "1147070"
  },
  {
    "text": "material. But then we used most\nof these data structures to get faster sorting algorithms\nin different contexts.",
    "start": "1147070",
    "end": "1155085"
  },
  {
    "text": " Basically, everything\non this list",
    "start": "1155085",
    "end": "1161010"
  },
  {
    "text": "involved making a data structure\nand exploiting that data structure to get a\nbetter running time,",
    "start": "1161010",
    "end": "1167460"
  },
  {
    "text": "all except for\nmerge sort, really. The first two we presented\nin terms of a priority queue,",
    "start": "1167460",
    "end": "1175730"
  },
  {
    "text": "whether we used a sorted\narray or an array. We represented it at\nthe end of lecture eight",
    "start": "1175730",
    "end": "1184799"
  },
  {
    "text": "to get n-squared running time. We generalized that down\nto n log n by using a heap.",
    "start": "1184800",
    "end": "1190380"
  },
  {
    "text": "That was a nice optimization. But we also got interesting\ndata structures using an--",
    "start": "1190380",
    "end": "1196860"
  },
  {
    "text": "I mean, interesting sorting\nalgorithms using an AVL tree because of the\npower of maintaining",
    "start": "1196860",
    "end": "1202710"
  },
  {
    "text": "a dynamic order over time. But then exploiting a direct\naccess array to be able to sort",
    "start": "1202710",
    "end": "1211080"
  },
  {
    "text": "in linear time for\nsmall-bounded-- bounded in terms of\nthe input, polynomially",
    "start": "1211080",
    "end": "1217530"
  },
  {
    "text": "bounded in terms of the\ninput-- ranges of numbers. So we leverage that direct axis\narray to get counting sort.",
    "start": "1217530",
    "end": "1225750"
  },
  {
    "text": "And then we kind of\namplified that effect by sorting on a bunch\nof digits multiple times",
    "start": "1225750",
    "end": "1234390"
  },
  {
    "text": "to get basically polynomial\nblow-up in terms of the numbers that we could sort\nin linear time.",
    "start": "1234390",
    "end": "1241570"
  },
  {
    "text": "So that's an overview of\nthe content of quiz 1. In quiz 2, we were kind\nof like, OK, now you",
    "start": "1241570",
    "end": "1251480"
  },
  {
    "text": "know how to find things\nwithin a set of just",
    "start": "1251480",
    "end": "1257210"
  },
  {
    "text": "a flat list of things, you can\nput it in a data structure. But in a sense, a graph is a\nspecial kind of data structure",
    "start": "1257210",
    "end": "1264710"
  },
  {
    "text": "that relates the different\nthings in your input. So if you've got a\nbunch of vertices,",
    "start": "1264710",
    "end": "1274070"
  },
  {
    "text": "there's a relation now\nbetween those vertices that are your edges. And this is a super\nuseful framework",
    "start": "1274070",
    "end": "1280640"
  },
  {
    "text": "in talking about\ndiscrete systems, because you can\nthink of a vertex as a state of your system, and\nthen connect these transitions",
    "start": "1280640",
    "end": "1289160"
  },
  {
    "text": "as a graph. That's the reason why-- I mean, graphs are\nawesome, but they're",
    "start": "1289160",
    "end": "1295970"
  },
  {
    "text": "awesome because they\ncan be used to model so many different\nthings within our world. It's not just about\nroad networks.",
    "start": "1295970",
    "end": "1304490"
  },
  {
    "text": "It can also be about playing\nyour favorite turn-based game,",
    "start": "1304490",
    "end": "1309870"
  },
  {
    "text": "like Tilt. OK, so we talked about a lot\nof different types of problems",
    "start": "1309870",
    "end": "1315530"
  },
  {
    "text": "that you could solve,\nvarious algorithms, with a focus on a bunch of\ndifferent ways of solving",
    "start": "1315530",
    "end": "1321289"
  },
  {
    "text": "single-source shortest paths. And again, just like\nthe sorting algorithms and just like the\ndata structures,",
    "start": "1321290",
    "end": "1326990"
  },
  {
    "text": "we presented multiple\nof them, because we had this trade-off of\ngenerality of the graph",
    "start": "1326990",
    "end": "1334310"
  },
  {
    "text": "that they apply to contrasted\nwith the running time. So I guess, in\nparticular, the top line",
    "start": "1334310",
    "end": "1346790"
  },
  {
    "text": "there is, in some sense,\nthe most restrictive. We don't have any\ncycles in our graph. That's a very special\ntype of graph,",
    "start": "1346790",
    "end": "1353000"
  },
  {
    "text": "and we're able to\nget linear time. But then even if we do\nhave cycles in our graph,",
    "start": "1353000",
    "end": "1358179"
  },
  {
    "text": "we can do better if we\nhave a bound on the weights in our thing, whether they be--",
    "start": "1358180",
    "end": "1365260"
  },
  {
    "text": "there's an easy conversion\nto a linear time algorithm via an unweighted process,\nor whether these things are",
    "start": "1365260",
    "end": "1371170"
  },
  {
    "text": "non-negative, so there can't\nbe negative weight cycles, and we don't have\nto deal with that. OK, so that's quiz 2 material.",
    "start": "1371170",
    "end": "1378970"
  },
  {
    "text": "And then quiz 3\nmaterial was kind of applying this graph material\nto a recursive framework.",
    "start": "1378970",
    "end": "1387910"
  },
  {
    "text": "What was our\nrecursive framework? Everyone say it with me. AUDIENCE: Dynamic programming. JASON KU: Dynamic\nprogramming, and the framework",
    "start": "1387910",
    "end": "1393680"
  },
  {
    "text": "was SRT BOT, right? Missing a letter,\nbut SORT BOT, right?",
    "start": "1393680",
    "end": "1398710"
  },
  {
    "text": "You can actually\nthink of the quiz 3 material as really an\napplication of the graph",
    "start": "1398710",
    "end": "1406600"
  },
  {
    "text": "material. What are we doing in SORT BOT? We're defining a\nset of subproblems.",
    "start": "1406600",
    "end": "1414350"
  },
  {
    "text": "These are a set of\nvertices in a graph. What is the relationship doing? It's saying, what\nare the relation",
    "start": "1414350",
    "end": "1423170"
  },
  {
    "text": "between the\nsubproblems, essentially defining the edges of a graph?",
    "start": "1423170",
    "end": "1428770"
  },
  {
    "text": "And then this topological\norder and the base cases, all of these things\nare just saying,",
    "start": "1428770",
    "end": "1434470"
  },
  {
    "text": "what is the problem that I\nwant to solve on this graph? And how do I compute\nthat for things that",
    "start": "1434470",
    "end": "1441580"
  },
  {
    "text": "don't have any outgoing edges? I need to start writing\non the board again.",
    "start": "1441580",
    "end": "1446950"
  },
  {
    "text": "This is graphs. There was sorting in here, too.",
    "start": "1446950",
    "end": "1454929"
  },
  {
    "text": "This is basically\nan application. ",
    "start": "1454930",
    "end": "1461070"
  },
  {
    "text": "OK, graphs was\nbasically a relationship on these non-constant things.",
    "start": "1461070",
    "end": "1466330"
  },
  {
    "text": " So this was kind of\nlike useful black boxes",
    "start": "1466330",
    "end": "1475700"
  },
  {
    "text": "that you can just bundle up\nand stick in some inputs, stick out some outputs,\nand you're golden.",
    "start": "1475700",
    "end": "1483200"
  },
  {
    "text": "Whereas quiz 3 was\nvery different, the material in quiz\n3 is very different. Dynamic programming, while\nit was, in some sense,",
    "start": "1483200",
    "end": "1499490"
  },
  {
    "text": "related to this graph material-- I'm constructing a graph-- I have to construct that graph.",
    "start": "1499490",
    "end": "1504610"
  },
  {
    "text": "There's a creative process in\ntrying to construct that graph. I don't give you\na set of vertices.",
    "start": "1504610",
    "end": "1510190"
  },
  {
    "text": "Usually what I give\nyou are a set of-- a sequence or\nsomething like that.",
    "start": "1510190",
    "end": "1515770"
  },
  {
    "text": "And you have to construct\nvertices, subproblems, that will be able to be\nrelated in a recursive way",
    "start": "1515770",
    "end": "1522870"
  },
  {
    "text": "so you can solve the problem. This is a very much\nmore difficult thing than these other\nthings, I think,",
    "start": "1522870",
    "end": "1529200"
  },
  {
    "text": "because there's a lot\nmore creativity in this. In the same way\nthat just applying--",
    "start": "1529200",
    "end": "1535530"
  },
  {
    "text": "reducing to the graph algorithms\nwe have is fairly easy. But actually doing some\ngraph transformations",
    "start": "1535530",
    "end": "1542909"
  },
  {
    "text": "to change the shape\nof the graph so that you can apply\nthese algorithms, that's a harder thing to do.",
    "start": "1542910",
    "end": "1550320"
  },
  {
    "text": "The difficulty with these\ntwo sets of materials is very similar. Figuring out what\nthe graph should be,",
    "start": "1550320",
    "end": "1556958"
  },
  {
    "text": "figuring out what the\nsubproblems should be and how they relate, is really\nthe entire part of the--",
    "start": "1556958",
    "end": "1562596"
  },
  {
    "text": "the entire difficulty with\nsolving problems recursively. And we've only given you a\ntaste of solving problems",
    "start": "1562596",
    "end": "1570210"
  },
  {
    "text": "recursively. In future classes,\nlike 6.046, which",
    "start": "1570210",
    "end": "1577299"
  },
  {
    "text": "is the follow-on to this one in\nthe undergraduate curriculum, this is all about\nintroduction to algorithms.",
    "start": "1577300",
    "end": "1583640"
  },
  {
    "text": "The next one's about design\nand analysis of algorithms. It's quite a bit more\ndifficult, because we've mostly",
    "start": "1583640",
    "end": "1594130"
  },
  {
    "text": "left it to you to use the\nthings that we gave you",
    "start": "1594130",
    "end": "1599710"
  },
  {
    "text": "or make your own\nalgorithms based on this very nice\ncookbook-like framework",
    "start": "1599710",
    "end": "1606910"
  },
  {
    "text": "that you can plug in a\nrecursive algorithm to. Now actually, that\ncookbook is super nice for any way of looking\nat a problem recursively,",
    "start": "1606910",
    "end": "1616210"
  },
  {
    "text": "but while in\ndynamic programming,",
    "start": "1616210",
    "end": "1623299"
  },
  {
    "text": "the inductive hypothesis of\ncombining your subproblems",
    "start": "1623300",
    "end": "1628730"
  },
  {
    "text": "is almost trivial,\nin other types of recursive algorithms, that's\nnot necessarily the case.",
    "start": "1628730",
    "end": "1637120"
  },
  {
    "text": "Especially when\ninstead of looking at all possible\nchoices, for example,",
    "start": "1637120",
    "end": "1642559"
  },
  {
    "text": "in a greedy algorithm\nwhere you're just looking at one of the choices,\nthe locally best thing,",
    "start": "1642560",
    "end": "1647620"
  },
  {
    "text": "and recursing forward, you're\nnot doing all the work. You're not locally\nbrute-forcing.",
    "start": "1647620",
    "end": "1653050"
  },
  {
    "text": "Your locally picking an optimal\nthing locally and hoping that will lead you to good thing.",
    "start": "1653050",
    "end": "1658630"
  },
  {
    "text": "That's a much harder algorithmic\nparadigm to operate under.",
    "start": "1658630",
    "end": "1664510"
  },
  {
    "text": "And so that's more\nlike the material that you'll be talking\nabout in 6.046.",
    "start": "1664510",
    "end": "1670180"
  },
  {
    "text": "So that's 006, a very quick\noverview of the content of this",
    "start": "1670180",
    "end": "1679560"
  },
  {
    "text": "class. And we really like the structure\nof how this class is laid out,",
    "start": "1679560",
    "end": "1685230"
  },
  {
    "text": "because it gives you a\nfundamental idea of the things people use to store information\non a computer and a sense",
    "start": "1685230",
    "end": "1693990"
  },
  {
    "text": "of how you solve\nproblems computationally and how to argue that they're\ncorrect and efficient.",
    "start": "1693990",
    "end": "1699779"
  },
  {
    "text": "That's really what\nthis problem-- this course is about.",
    "start": "1699780",
    "end": "1705650"
  },
  {
    "text": "And if you feel like you\nenjoy this kind of stuff, that's where you\ngo to take 6.046.",
    "start": "1705650",
    "end": "1715060"
  },
  {
    "text": "And 6.046 was actually\nthe first algorithms class I ever took here at MIT,\nas a grad student actually.",
    "start": "1715060",
    "end": "1723745"
  },
  {
    "text": " This was hard for me.",
    "start": "1723745",
    "end": "1729309"
  },
  {
    "text": "It's actually hard to look at\nthese problems, these types, and think in a\ncomputational way,",
    "start": "1729310",
    "end": "1735400"
  },
  {
    "text": "especially having not\ntaken this class, 6.006. So hopefully you guys are\nall in a better position",
    "start": "1735400",
    "end": "1742419"
  },
  {
    "text": "than I was when I took it. There's two ways I like to\nthink of the content in 6.046.",
    "start": "1742420",
    "end": "1749280"
  },
  {
    "text": "One is kind of just as\nan extension of 006. It's the natural\nfollow-on to the things",
    "start": "1749280",
    "end": "1754800"
  },
  {
    "text": "that we do in this class. They still talk about\ndata structures. ",
    "start": "1754800",
    "end": "1763149"
  },
  {
    "text": "This isn't the core part of\n046, but they do touch on data structures for\nmore complicated--",
    "start": "1763150",
    "end": "1771180"
  },
  {
    "text": "that have more complicated\nanalyses involved in them. It's really about--\nusually in 046,",
    "start": "1771180",
    "end": "1777990"
  },
  {
    "text": "stating what the algorithm\nis doing is not so hard. Basically, giving\nyou the algorithm,",
    "start": "1777990",
    "end": "1785980"
  },
  {
    "text": "number one here, is\nnot so difficult, to state what's happening\nin the algorithm.",
    "start": "1785980",
    "end": "1792429"
  },
  {
    "text": "But the number two\nand number three here, arguing that that thing is\ncorrect and arguing that thing",
    "start": "1792430",
    "end": "1799059"
  },
  {
    "text": "is efficient, that's where the\ncomplexity comes in in 046.",
    "start": "1799060",
    "end": "1804430"
  },
  {
    "text": "The analysis part is quite a\nbit more complicated in 046 than in 006.",
    "start": "1804430",
    "end": "1809920"
  },
  {
    "text": "So they solve a problem called\nunion-find and give a much--",
    "start": "1809920",
    "end": "1817240"
  },
  {
    "text": "we talked a little bit\nabout amortization. This goes into a much better-- a\nmuch more formal way of proving",
    "start": "1817240",
    "end": "1824289"
  },
  {
    "text": "things run in amortized time.",
    "start": "1824290",
    "end": "1829840"
  },
  {
    "text": "So this is basically\namortization via what",
    "start": "1829840",
    "end": "1838690"
  },
  {
    "text": "we call a potential analysis. ",
    "start": "1838690",
    "end": "1846030"
  },
  {
    "text": "It's basically\nmaking that notion",
    "start": "1846030",
    "end": "1851052"
  },
  {
    "text": "that we talked about\nwhen we were talking about dynamic arrays of, we're\nnot doing this expensive thing",
    "start": "1851052",
    "end": "1857140"
  },
  {
    "text": "too often. Basically what we\ndo is we keep track of the cost of all\nsequence of operations",
    "start": "1857140",
    "end": "1863140"
  },
  {
    "text": "and prove that the\naverage cost is small. That's kind of what this\npotential analysis is doing.",
    "start": "1863140",
    "end": "1870238"
  },
  {
    "text": "It's a little bit\nmore formal process for making that argument\na little more formal.",
    "start": "1870238",
    "end": "1875770"
  },
  {
    "text": "Right. OK. So then on the\ngraph side, this is kind of an extension of\nquiz 1-type material.",
    "start": "1875770",
    "end": "1882610"
  },
  {
    "text": "This is, what is this\nunion-find data structure? It's basically-- it's\na set type thing, where",
    "start": "1882610",
    "end": "1891400"
  },
  {
    "text": "I can make a set of\njust a single element,",
    "start": "1891400",
    "end": "1897300"
  },
  {
    "text": "I can take two sets, merge\nthem together, make them their union, and then\ngiven an object, I say,",
    "start": "1897300",
    "end": "1907440"
  },
  {
    "text": "which set am I part of,\nessentially by electing a leader within\na set and saying,",
    "start": "1907440",
    "end": "1913919"
  },
  {
    "text": "return me a pointer to that one. And so this can be useful\nin dynamically maintaining,",
    "start": "1913920",
    "end": "1920730"
  },
  {
    "text": "say, the connected components\nin a dynamically changing graph",
    "start": "1920730",
    "end": "1925770"
  },
  {
    "text": "supporting the query of,\nam I in the same component as this other guy?",
    "start": "1925770",
    "end": "1931350"
  },
  {
    "text": "That could be a very useful\nthing to know about a graph as it's changing. So that's an application\nof this problem.",
    "start": "1931350",
    "end": "1937140"
  },
  {
    "text": "And they get\nnear-constant performance for a lot of these queries. It's not quite,\nbut pretty close.",
    "start": "1937140",
    "end": "1945360"
  },
  {
    "text": "OK, on the graph\nside, they solve a number of very useful\nproblems on graphs.",
    "start": "1945360",
    "end": "1952350"
  },
  {
    "text": "Minimum Spanning\nTree-- so I'm trying to find a tree connecting\nall of the vertices",
    "start": "1952350",
    "end": "1959730"
  },
  {
    "text": "in a connected\ncomponent of my graph. And I'm trying to find--\nin a weighted graph, I'm trying to find\nthe spanning tree that",
    "start": "1959730",
    "end": "1966960"
  },
  {
    "text": "has minimum total weight. So that's a problem-- a fundamental problem in\nweighted-graph algorithms.",
    "start": "1966960",
    "end": "1975630"
  },
  {
    "text": "They've solved this\nvia a greedy algorithm. And network flows\nand I guess cuts.",
    "start": "1975630",
    "end": "1990360"
  },
  {
    "text": "So this is-- what is this? This is, I'm given\na weighted graph.",
    "start": "1990360",
    "end": "1995840"
  },
  {
    "text": "Basically, each of the weights\ncorrespond to a capacity.",
    "start": "1995840",
    "end": "2001120"
  },
  {
    "text": "I could push water\nthrough along this edge. And I may be given a source\nvertex and a sink vertex.",
    "start": "2001120",
    "end": "2008830"
  },
  {
    "text": "And I want to say, I\nwant to shove water through the source\nvertex along the edges",
    "start": "2008830",
    "end": "2015820"
  },
  {
    "text": "with their various capacities. And I'll get some\namount of water on the other end in the source.",
    "start": "2015820",
    "end": "2023140"
  },
  {
    "text": "So the question is, what's\nthe most amount of water that I can push through this? Well, I could build\nthat pipe network",
    "start": "2023140",
    "end": "2030643"
  },
  {
    "text": "with the different things and\njust do this experimentally. I just stick a bunch of-- maybe-- I'm a\nmechanical engineer,",
    "start": "2030643",
    "end": "2036820"
  },
  {
    "text": "so that maybe makes sense to me. But you want to be able to\njust look at those numbers and be able to tell me how\nmuch water can I push through.",
    "start": "2036820",
    "end": "2044260"
  },
  {
    "text": "That's what the max flow in\na network is talking about. And we give you some polynomial\ntime algorithms in this class,",
    "start": "2044260",
    "end": "2052060"
  },
  {
    "text": "basically incremental algorithms\nthat, kind of like Dijkstra, or kind of like Bellman-Ford,\nwill incrementally update",
    "start": "2052060",
    "end": "2062080"
  },
  {
    "text": "estimates to-- of a max flow and\nimprove them over time.",
    "start": "2062080",
    "end": "2068949"
  },
  {
    "text": " Then on the, basically,\ndesign paradigms,",
    "start": "2068949",
    "end": "2082480"
  },
  {
    "text": "you've got more involved making\nyour own divide-and-conquer algorithms, dynamic programming\nalgorithms, greedy algorithms.",
    "start": "2082480",
    "end": "2097930"
  },
  {
    "text": "Basically, they go\na lot more in depth in terms of how to design these\nalgorithms and these paradigms",
    "start": "2097930",
    "end": "2104289"
  },
  {
    "text": "than we do in this class. And then the last thing is--",
    "start": "2104290",
    "end": "2110170"
  },
  {
    "text": "we only touched on complexity. And in a sense, 046 is only\ngoing to touch on complexity.",
    "start": "2110170",
    "end": "2118400"
  },
  {
    "text": "It's a very big field. But it will give\nyou the tools to be",
    "start": "2118400",
    "end": "2124110"
  },
  {
    "text": "able to prove that something is\nNP-hard, whereas we just kind of say that, oh, there's this\nthing called a reduction.",
    "start": "2124110",
    "end": "2132089"
  },
  {
    "text": "We didn't give you any\nproblems in which you actually had to reduce one\nproblem to another.",
    "start": "2132090",
    "end": "2138610"
  },
  {
    "text": "And you'll do a lot\nmore of that here. So, reductions.",
    "start": "2138610",
    "end": "2144360"
  },
  {
    "text": "So in a big sense, 046 is\nreally just a natural extension",
    "start": "2144360",
    "end": "2152420"
  },
  {
    "text": "to the 006 material, plus\nsome additional stuff, which I'm going to\nget to in a second. Yeah, question?",
    "start": "2152420",
    "end": "2157940"
  },
  {
    "text": "AUDIENCE: Do you want\nto add randomization for time paradigms? JASON KU: I'm going\nto talk about that",
    "start": "2157940",
    "end": "2163250"
  },
  {
    "text": "slightly in a separate-- I'll get to your question\nin just a second. I like to think of it as\na separate topic, which",
    "start": "2163250",
    "end": "2171410"
  },
  {
    "text": "I will go into right now. The separate topic I like\nto think of it as, instead",
    "start": "2171410",
    "end": "2176900"
  },
  {
    "text": "of being the natural extension\nto the things in the 006 units,",
    "start": "2176900",
    "end": "2183039"
  },
  {
    "text": "what I'm going to do is kind\nof relax either what it means",
    "start": "2183040",
    "end": "2188840"
  },
  {
    "text": "to have a correct algorithm\nor relax what it means to-- ",
    "start": "2188840",
    "end": "2195780"
  },
  {
    "text": "what my model of computation is. So 006, this is kind of\nas an extension of 006.",
    "start": "2195780",
    "end": "2211300"
  },
  {
    "text": "And this is kind of\nlike 6.046 as change",
    "start": "2211300",
    "end": "2222970"
  },
  {
    "text": "my definition of what it means\nto be correct or efficient. ",
    "start": "2222970",
    "end": "2230590"
  },
  {
    "text": "So we've already kind of done\nthis a little bit in 006.",
    "start": "2230590",
    "end": "2241490"
  },
  {
    "text": "Basically, one of the\nthings that we can do, which is what the question\nthat a student asked a question",
    "start": "2241490",
    "end": "2247010"
  },
  {
    "text": "about, was about\nrandomized algorithms, which is a big part\nof 046 actually--",
    "start": "2247010",
    "end": "2252800"
  },
  {
    "text": "randomized analysis\nof algorithms that are not deterministic.",
    "start": "2252800",
    "end": "2258410"
  },
  {
    "text": "It's not guaranteed that\nit'll give you the same output every time or not\nguaranteed that it",
    "start": "2258410",
    "end": "2263930"
  },
  {
    "text": "will do the same\ncomputations over the course of the algorithm every time. But it exploits\nsome randomization.",
    "start": "2263930",
    "end": "2270680"
  },
  {
    "start": "2270680",
    "end": "2281650"
  },
  {
    "text": "And in 006, this is-- we've mostly not touched on\nthis, except in one area.",
    "start": "2281650",
    "end": "2287530"
  },
  {
    "text": "Where did we use randomization? In hashing, right? When we used hashing,\nwhat were we doing?",
    "start": "2287530",
    "end": "2296080"
  },
  {
    "text": "We changed the definition\nof correct versus efficient. We didn't really change the\ndefinition, what we did was",
    "start": "2296080",
    "end": "2302200"
  },
  {
    "text": "we said that it was OK that\nsometimes our algorithm was slower than we--",
    "start": "2302200",
    "end": "2309260"
  },
  {
    "text": "than on-- in expectation. That's what we meant there. We're relaxing the\nidea of efficient,",
    "start": "2309260",
    "end": "2316849"
  },
  {
    "text": "but we're still saying\nit's good, because most of the time it is good. So there's two types of\nrandomized algorithms.",
    "start": "2316850",
    "end": "2324860"
  },
  {
    "text": "They have these\nweird names based on betting regions of\nthe world, shall we say?",
    "start": "2324860",
    "end": "2332060"
  },
  {
    "text": "There are-- this is L-O?",
    "start": "2332060",
    "end": "2338058"
  },
  {
    "text": "Los Vegas? It is Las, OK, Vegas algorithms.",
    "start": "2338058",
    "end": "2344670"
  },
  {
    "text": "These are always correct,\nbut probably efficient.",
    "start": "2344670",
    "end": "2353978"
  },
  {
    "text": " In a sense, that's\nwhat hashing is.",
    "start": "2353978",
    "end": "2361980"
  },
  {
    "text": "I'm always going to give\nyou the right thing, whether this thing\nis in my set or not.",
    "start": "2361980",
    "end": "2367140"
  },
  {
    "text": "But some of the time,\nit's inefficient. I have to look through\na chain of length",
    "start": "2367140",
    "end": "2372869"
  },
  {
    "text": "of-- that's linear in the size\nof the things that I'm storing. And this is in contrast to\na Monte Carlo algorithm,",
    "start": "2372870",
    "end": "2383890"
  },
  {
    "text": "which is always efficient for\nsome definition of efficient,",
    "start": "2383890",
    "end": "2392099"
  },
  {
    "text": "but only probably correct. ",
    "start": "2392100",
    "end": "2398640"
  },
  {
    "text": "And I mean, I could define you a\nhash table that has Monte Carlo semantics instead.",
    "start": "2398640",
    "end": "2404910"
  },
  {
    "text": "Say, for example, I\nsay that I'm going-- it's going to be exactly\nthe same as a hash table,",
    "start": "2404910",
    "end": "2411760"
  },
  {
    "text": "except instead of storing\nall the things that collide in a place, I just\nstore the first two, say.",
    "start": "2411760",
    "end": "2418450"
  },
  {
    "text": " Well, actually, that's actually\ngoing to be always efficient.",
    "start": "2418450",
    "end": "2424900"
  },
  {
    "text": "I'm going to look\nthrough the things and see if it's in there. And the chains that I'm storing\nthere only have two things.",
    "start": "2424900",
    "end": "2432513"
  },
  {
    "text": "It's going to be\nalways efficient. It's always going to\ngive me constant time. But some of the time, it's\ngoing to be the wrong thing,",
    "start": "2432513",
    "end": "2438660"
  },
  {
    "text": "because I'm not storing\neverything in that chain. So there's some probability that\nthat's not going to be correct.",
    "start": "2438660",
    "end": "2445200"
  },
  {
    "text": "And so that's a\ndifferent kind of-- maybe I want my hash\ntables to always be fast,",
    "start": "2445200",
    "end": "2450330"
  },
  {
    "text": "but I can afford to be\nwrong some of the time. I don't know. In practice, this is actually\nsometimes a good trade-off",
    "start": "2450330",
    "end": "2457890"
  },
  {
    "text": "in real systems. Sometimes it's OK to be\nwrong some of the times, if we get good performance.",
    "start": "2457890",
    "end": "2465230"
  },
  {
    "text": "OK, but generally can do better\nif you allow randomization.",
    "start": "2465230",
    "end": "2483770"
  },
  {
    "text": "And by better I mean, usually\nwe can get faster bounds on a lot of problems if we allow\nrandomization and things aren't",
    "start": "2483770",
    "end": "2492770"
  },
  {
    "text": "necessarily always correct\nor always efficient. So this is a big area in\n046 that requires a lot more",
    "start": "2492770",
    "end": "2502130"
  },
  {
    "text": "analysis using randomness\nand probability.",
    "start": "2502130",
    "end": "2507619"
  },
  {
    "text": "So if you need some\nprimers on that--",
    "start": "2507620",
    "end": "2512910"
  },
  {
    "text": "we didn't have a lot of this in\n006, but if you go on to 046, that's going to be a really\nimportant thing for you",
    "start": "2512910",
    "end": "2519770"
  },
  {
    "text": "to brush up on. The next part on 006 is kind\nof changing what our definition",
    "start": "2519770",
    "end": "2528109"
  },
  {
    "text": "of correct or efficient means. I mean, we've\nrestricted ourselves in this class to a class\nof problems where we only",
    "start": "2528110",
    "end": "2536120"
  },
  {
    "text": "talk about integers. But there's tons of\nproblems in this world, especially in\nscientific computing,",
    "start": "2536120",
    "end": "2542900"
  },
  {
    "text": "where I want to be able to find\nout what this real number is.",
    "start": "2542900",
    "end": "2548510"
  },
  {
    "text": "And I can't even store a\nreal number on my computer. So what the hell, Jason? What are you talking about?",
    "start": "2548510",
    "end": "2555710"
  },
  {
    "text": "I can't do that on a computer. But what I can do is\nbasically compute things",
    "start": "2555710",
    "end": "2561680"
  },
  {
    "text": "in a numerical sense--\nnumerical algorithms. ",
    "start": "2561680",
    "end": "2569020"
  },
  {
    "text": "And in 046, a lot of times\nwe put this in the context of continuous optimization,\ncontinuous being the opportune",
    "start": "2569020",
    "end": "2581890"
  },
  {
    "text": "word here, not discrete systems. You have a continuum of\npossible solutions, real numbers",
    "start": "2581890",
    "end": "2588220"
  },
  {
    "text": "essentially. How do we do this on a computer\nthat's a discrete system? ",
    "start": "2588220",
    "end": "2596349"
  },
  {
    "text": "Basically, in 046\nwhat you can do, and in other numerical methods\nclasses, what you can say is,",
    "start": "2596350",
    "end": "2604420"
  },
  {
    "text": "well, I know that you can't\nreturn me a real number. I got that. Or you can maybe have\na model of computation",
    "start": "2604420",
    "end": "2611890"
  },
  {
    "text": "that allows integers\nto represent other kinds of real numbers,\nlike radicals or rationals",
    "start": "2611890",
    "end": "2618402"
  },
  {
    "text": "or something like that. And I can do\nmanipulations on those. But really what these\nalgorithms are usually about",
    "start": "2618402",
    "end": "2624040"
  },
  {
    "text": "is computing real\nnumbers not completely, but to some bounded precision.",
    "start": "2624040",
    "end": "2631569"
  },
  {
    "text": "And I pay for that precision. The more bits of precision\nI want on my number,",
    "start": "2631570",
    "end": "2637450"
  },
  {
    "text": "I have to pay for them. So this is basic-- I think of these as\nan approximation--",
    "start": "2637450",
    "end": "2642910"
  },
  {
    "text": " approximation of real\nnumber to some precision,",
    "start": "2642910",
    "end": "2661600"
  },
  {
    "text": "and I pay for\nprecision with time.",
    "start": "2661600",
    "end": "2673490"
  },
  {
    "text": "So let's say I wanted to compute\nthe square root of a number. I could have an algorithm\njust like the algorithms--",
    "start": "2673490",
    "end": "2680650"
  },
  {
    "text": "or I guess division,\nright, long division. You all know the algorithm\nof long division.",
    "start": "2680650",
    "end": "2687400"
  },
  {
    "text": "You put the quotient under\nhere with these-- an AB and you get the C\non top or whatever.",
    "start": "2687400",
    "end": "2695117"
  },
  {
    "text": "That's an algorithm. That's a procedure using\nessentially small numbers. I'm only talking about\nthe digits zero to nine",
    "start": "2695117",
    "end": "2702550"
  },
  {
    "text": "here when I'm doing\nthat algorithm. So it's a procedure\nthat only uses small integers to\ncompute arbitrary",
    "start": "2702550",
    "end": "2710109"
  },
  {
    "text": "precision of a division. So that's an\nalgorithm, and I have to pay time to get more digits.",
    "start": "2710110",
    "end": "2718690"
  },
  {
    "text": "So that's an\nexample of this kind of-- how we live in the\nworld of real numbers",
    "start": "2718690",
    "end": "2725890"
  },
  {
    "text": "when all we have is\na discrete system. And then the last category\nI'd like to talk about here",
    "start": "2725890",
    "end": "2733810"
  },
  {
    "text": "is really approximation\nalgorithms. ",
    "start": "2733810",
    "end": "2740830"
  },
  {
    "text": "Whereas this is kind of an\napproximation algorithm, I'm approximating\nmy outputs, this",
    "start": "2740830",
    "end": "2745870"
  },
  {
    "text": "is an approximation algorithm\nfrom the standpoint of, well, there's a lot of problems\nthat I can't solve efficiently.",
    "start": "2745870",
    "end": "2753790"
  },
  {
    "text": "They're NP-hard. They're in EXP or\neven harder problems.",
    "start": "2753790",
    "end": "2760690"
  },
  {
    "text": "But maybe I'm OK with not\ngetting the optimal solution.",
    "start": "2760690",
    "end": "2766180"
  },
  {
    "text": "So this is in the domain\nof optimization problems. ",
    "start": "2766180",
    "end": "2775090"
  },
  {
    "text": "So most of the\ndynamic programming problems that we gave you\nwere optimization problems.",
    "start": "2775090",
    "end": "2780480"
  },
  {
    "text": "They're the shortest\npaths problems. Those are optimization problems. Basically, the possible outputs\nare ranked in some way--",
    "start": "2780480",
    "end": "2786869"
  },
  {
    "text": "the distance of a path that you\nreturn or something like that.",
    "start": "2786870",
    "end": "2792210"
  },
  {
    "text": "They're ranked in some way. There is an optimal one-- the one with the smallest\nmetric or something like that.",
    "start": "2792210",
    "end": "2798510"
  },
  {
    "text": " Well, in an approximation\nalgorithm what I do is, OK,",
    "start": "2798510",
    "end": "2803600"
  },
  {
    "text": "I get that it's computationally\ndifficult for you to give me the longest\nsimple path in this graph,",
    "start": "2803600",
    "end": "2809990"
  },
  {
    "text": "or the shortest possible route\nfor my traveling salesman, but maybe that's OK.",
    "start": "2809990",
    "end": "2817730"
  },
  {
    "text": "I mean, my engineering\nSpidey-sense tells me that\nwithin 10% is fine.",
    "start": "2817730",
    "end": "2824480"
  },
  {
    "text": "So maybe instead of giving\nme the most optimal thing, can I give you an\nalgorithm that's",
    "start": "2824480",
    "end": "2829910"
  },
  {
    "text": "guaranteed to be within\na certain distance from the optimal thing?",
    "start": "2829910",
    "end": "2835010"
  },
  {
    "text": "Usually, we're looking for\nconstant factor approximations which have low\nconstant, or maybe",
    "start": "2835010",
    "end": "2842630"
  },
  {
    "text": "even have to do for worse\nif such things don't exist. OK, so that's\napproximation algorithms.",
    "start": "2842630",
    "end": "2848570"
  },
  {
    "text": "Can we get close to an optimal\nsolution in polynomial time? OK.",
    "start": "2848570",
    "end": "2855080"
  },
  {
    "text": "And then the last way we could\nchange things in, especially future classes, though sometimes\nthey talk about this in 046",
    "start": "2855080",
    "end": "2862970"
  },
  {
    "text": "as well, is we could change\nthe model of computation. We could basically change\nsomething about our computer",
    "start": "2862970",
    "end": "2870140"
  },
  {
    "text": "to be put in some other weird\nparadigm of solving problems with more power\nessentially, or you're",
    "start": "2870140",
    "end": "2877543"
  },
  {
    "text": "in a situation where\nthere's less power. OK, so change in the\nmodel of computation. ",
    "start": "2877543",
    "end": "2892590"
  },
  {
    "text": "So what we've been talking\nto you in terms of model of computation is our word-RAM--",
    "start": "2892590",
    "end": "2898420"
  },
  {
    "text": "word-RAM.  And that essentially says I\ncan do arithmetic operations,",
    "start": "2898420",
    "end": "2905520"
  },
  {
    "text": "and I can look up stuff in\nmy memory in constant time. And but if I allocate\na certain amount,",
    "start": "2905520",
    "end": "2910928"
  },
  {
    "text": "I have to pay that amount\nand that kind of thing. So that's this word-RAM model.",
    "start": "2910928",
    "end": "2916320"
  },
  {
    "text": "But in actuality, all\nof your computers, it's a lot easier\nfor me to figure--",
    "start": "2916320",
    "end": "2923340"
  },
  {
    "text": "to find and read memory\nthat's on my CPU in a register",
    "start": "2923340",
    "end": "2928770"
  },
  {
    "text": "than it is for me to go out\nto the hard disk, ask this-- well, in my day, it used to be\nthis movable mechanical head",
    "start": "2928770",
    "end": "2936090"
  },
  {
    "text": "that had to go and scan\nover a bit on a CD-ROM drive and actually read\nwhat that thing was.",
    "start": "2936090",
    "end": "2945930"
  },
  {
    "text": "So we can add\ncomplexity to our model to better account for the costs\nof operations on my machine.",
    "start": "2945930",
    "end": "2954600"
  },
  {
    "text": "One of those models is\ncalled the cache model-- ",
    "start": "2954600",
    "end": "2961830"
  },
  {
    "text": "cache model. It's basically a\nhierarchy of memory.",
    "start": "2961830",
    "end": "2968820"
  },
  {
    "text": "I have my registers\non board my CPU. I have maybe an L1 cache\nthat's close to my CPU.",
    "start": "2968820",
    "end": "2976110"
  },
  {
    "text": "Then I have another\nset of caches and another set of\ncaches maybe out to RAM. And reading from a hard disk, a\nsolid state drive of some kind,",
    "start": "2976110",
    "end": "2983520"
  },
  {
    "text": "that's the slowest\nthing to access. And I can put a cost associated\nwith each of those things.",
    "start": "2983520",
    "end": "2989820"
  },
  {
    "text": "And instead of having to-- having all of our operations\nbe said to be constant,",
    "start": "2989820",
    "end": "2997760"
  },
  {
    "text": "the constants are\nactually different, and I have to pay\nfor that difference. And so that's\nextending our model",
    "start": "2997760",
    "end": "3004210"
  },
  {
    "text": "to be a little bit more\nrealistic to our machine. Another one is we have\ncomputers right now that",
    "start": "3004210",
    "end": "3011619"
  },
  {
    "text": "operate in classical\nphysics, that exploit things in classical physics.",
    "start": "3011620",
    "end": "3016690"
  },
  {
    "text": "But in actuality,\nour world allows for even more complicated\ntypes of operations,",
    "start": "3016690",
    "end": "3027310"
  },
  {
    "text": "like quantum operations, where\nyou're exploiting entanglement and superposition\nof different atoms",
    "start": "3027310",
    "end": "3033980"
  },
  {
    "text": "to potentially get operations\nthat I can act on my data that",
    "start": "3033980",
    "end": "3039290"
  },
  {
    "text": "are actually provably stronger\nthan the classical models in some sense.",
    "start": "3039290",
    "end": "3044660"
  },
  {
    "text": "So this is a huge\nreason why there's a lot of work\nbeing done in, say,",
    "start": "3044660",
    "end": "3051140"
  },
  {
    "text": "lots of industry research\nfacilities in figuring out",
    "start": "3051140",
    "end": "3056960"
  },
  {
    "text": "these models. Because maybe if you can make\na big enough quantum computer, you can break encryption and\nstuff in polynomial time.",
    "start": "3056960",
    "end": "3063800"
  },
  {
    "text": "And that's something that\nmaybe the NSA is interested in. And I'm not going\nto go into that. But, you know.",
    "start": "3063800",
    "end": "3071390"
  },
  {
    "text": "I mean, some people-- you look at artificial\nintelligence and things like discussions around\nartificial intelligence,",
    "start": "3071390",
    "end": "3077630"
  },
  {
    "text": "my brain might be doing things\nthat a classical computer",
    "start": "3077630",
    "end": "3084430"
  },
  {
    "text": "cannot. It could be using quantum\nsuperposition in some way.",
    "start": "3084430",
    "end": "3089890"
  },
  {
    "text": "And our computers that are\nin your phone and your laptop and things like that aren't\nexploiting those operations,",
    "start": "3089890",
    "end": "3096480"
  },
  {
    "text": "so how could we ever\nget intelligence, because in some sense, our\nbrains are more powerful.",
    "start": "3096480",
    "end": "3101619"
  },
  {
    "text": "And so a lot of what AI\nshould be looking into is, what is the actual model\nof computation of our brains",
    "start": "3101620",
    "end": "3110050"
  },
  {
    "text": "that can give us the\npower to have sentience? OK, so that's kind\nof quantum computing.",
    "start": "3110050",
    "end": "3116440"
  },
  {
    "text": "I don't know much\nabout it actually. And then there's things like,\nmaybe I have more than one CPU.",
    "start": "3116440",
    "end": "3124950"
  },
  {
    "text": "I mean, most computers--\nall the computers you have, even the ones in your phone,\nprobably have multiple cores.",
    "start": "3124950",
    "end": "3131079"
  },
  {
    "text": "In a sense, you have lots\nof CPUs running in parallel. So this is like par--",
    "start": "3131080",
    "end": "3137120"
  },
  {
    "text": "there's one R in parallel? ",
    "start": "3137120",
    "end": "3148079"
  },
  {
    "text": "Parallel computing basically\nsays, it's cheap for me to make another\ncomputer potentially.",
    "start": "3148080",
    "end": "3154650"
  },
  {
    "text": "If I have two computers\nrunning on the same problem, maybe I can get a\ntwo-fold speed-up on my--",
    "start": "3154650",
    "end": "3161772"
  },
  {
    "text": "on the time in which it\ntakes to solve my problem. Now, suppose I had then 100\nCPUs running on a machine.",
    "start": "3161772",
    "end": "3171950"
  },
  {
    "text": "Maybe I can get\n100-fold speed-up. And actually, in real\nlife, 100-fold speed-up",
    "start": "3171950",
    "end": "3178140"
  },
  {
    "text": "makes a difference. It's, am I waiting for\nthis for 10 minutes? Or am I waiting for\nthis for 1,000 minutes?",
    "start": "3178140",
    "end": "3187110"
  },
  {
    "text": "That's, like, all day. I don't want to do that. Maybe it's on weeks. I don't even remember.",
    "start": "3187110",
    "end": "3193050"
  },
  {
    "text": "But parallel computing, if I\ncan get a 100-fold speed-up, that might be a huge win.",
    "start": "3193050",
    "end": "3198870"
  },
  {
    "text": "But for some problems,\nit's not possible-- if I have k CPUs, can I\nget a k-factor speed-up?",
    "start": "3198870",
    "end": "3209200"
  },
  {
    "text": "It's not always possible to do. And so parallel computing\nis another paradigm",
    "start": "3209200",
    "end": "3215329"
  },
  {
    "text": "in which there's a lot of\ninteresting theory going on.",
    "start": "3215330",
    "end": "3220920"
  },
  {
    "text": "There's a lot of\ncomplications there, because there are a\ncouple different models. You can have multicore\nset-up, where",
    "start": "3220920",
    "end": "3226790"
  },
  {
    "text": "you have a lot of computers\nthat are accessing the same bank of memory. And then you don't want them\nall to be reading and writing",
    "start": "3226790",
    "end": "3233690"
  },
  {
    "text": "from them at different times,\nbecause you don't necessarily know what their state is,\nand you get these collisions,",
    "start": "3233690",
    "end": "3239373"
  },
  {
    "text": "which are something\nthat you really have to think about in this world. Or you have situations\nwhere maybe I",
    "start": "3239373",
    "end": "3245960"
  },
  {
    "text": "have a bunch of\nnano-flies or something that are going around, and\nthey have very small computer",
    "start": "3245960",
    "end": "3252050"
  },
  {
    "text": "brains themselves. But they can talk to each\nother and pass information",
    "start": "3252050",
    "end": "3257662"
  },
  {
    "text": "to each other, but\nthey don't have access to one central network\nrepository of information. That's what we call a\ndistributed parallel system,",
    "start": "3257662",
    "end": "3265460"
  },
  {
    "text": "where all of the\nCPUs that you have can interact with each\nother maybe locally,",
    "start": "3265460",
    "end": "3271730"
  },
  {
    "text": "but don't have access to\nthe same memory system. So they have to work\ntogether to learn information",
    "start": "3271730",
    "end": "3280759"
  },
  {
    "text": "about the system. OK, so that's a brief overview\nof the different directions",
    "start": "3280760",
    "end": "3288260"
  },
  {
    "text": "this class, 6.006,\nand theory in general, could lead you-- into a huge\narray of different branches",
    "start": "3288260",
    "end": "3295820"
  },
  {
    "text": "theory and different\nproblems that you could address with different\ntypes of computers.",
    "start": "3295820",
    "end": "3301790"
  },
  {
    "text": "So I know this is a very\nhigh-level lecture and maybe",
    "start": "3301790",
    "end": "3307220"
  },
  {
    "text": "less-applied than some\nof you might like. But I hope this gives you a good\nunderstanding of the directions",
    "start": "3307220",
    "end": "3315530"
  },
  {
    "text": "you can go after this\nclass that I think are really excited in terms\nof how to solve problems",
    "start": "3315530",
    "end": "3323119"
  },
  {
    "text": "computationally. So with that, I'd\nlike to end there.",
    "start": "3323120",
    "end": "3329410"
  },
  {
    "start": "3329410",
    "end": "3334000"
  }
]