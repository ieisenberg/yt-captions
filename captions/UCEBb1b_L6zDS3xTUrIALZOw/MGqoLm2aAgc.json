[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "5423"
  },
  {
    "start": "5423",
    "end": "25180"
  },
  {
    "text": "MICHAEL SIPSER: Hi, everybody. Can you hear me? Yes.",
    "start": "25180",
    "end": "30280"
  },
  {
    "text": "Good. Welcome back to the course.",
    "start": "30280",
    "end": "37630"
  },
  {
    "text": "And so we are now at\nlecture 10, and let's see.",
    "start": "37630",
    "end": "47470"
  },
  {
    "text": "What have we been doing? We've been talking\nabout undecidability.",
    "start": "47470",
    "end": "53950"
  },
  {
    "text": "So we introduced, last time,\nreducibilities and mapping",
    "start": "53950",
    "end": "59170"
  },
  {
    "text": "reducibilities for\nproving various problems are undecidable.",
    "start": "59170",
    "end": "66190"
  },
  {
    "text": "And this time, we're going\nto-- and today, we're going to introduce a\nmore sophisticated method",
    "start": "66190",
    "end": "74890"
  },
  {
    "text": "for proving undesirability\nusing reducibilities.",
    "start": "74890",
    "end": "79930"
  },
  {
    "text": "And that's called the\ncomputation history method. And that's pretty\nmuch what's used",
    "start": "79930",
    "end": "85810"
  },
  {
    "text": "in all of the more serious\ncases where people have",
    "start": "85810",
    "end": "91119"
  },
  {
    "text": "proved problems undecidable. It's pretty much a\nwidespread method.",
    "start": "91120",
    "end": "97360"
  },
  {
    "text": "Especially it's not an active\narea of research these days, but at times when people were\nproving problems undecidable,",
    "start": "97360",
    "end": "104380"
  },
  {
    "text": "this was frequently a\nmethod that was used. So we'll go over\nthat today, and we'll",
    "start": "104380",
    "end": "109850"
  },
  {
    "text": "prove a few examples of problems\nundecidable using that method.",
    "start": "109850",
    "end": "116850"
  },
  {
    "text": "All right. So why don't we get started. So first of all,\nmost importantly,",
    "start": "116850",
    "end": "124200"
  },
  {
    "start": "120000",
    "end": "165000"
  },
  {
    "text": "you should remember how\nwe prove problems are undecidable in the first place.",
    "start": "124200",
    "end": "130590"
  },
  {
    "text": "And that is by showing some\nother undecidable problem that we already know\nis undecidable is",
    "start": "130590",
    "end": "138040"
  },
  {
    "text": "reducible to the\nproblem of interest. So typically, you\nmight be reducing",
    "start": "138040",
    "end": "143409"
  },
  {
    "text": "ATM, which is a problem that\nwe started with and showed to be undecidable by the\ndiagonalization method.",
    "start": "143410",
    "end": "150850"
  },
  {
    "text": "Or it might be some other\nproblem that we've subsequently shown to be undecidable,\nand you take that problem,",
    "start": "150850",
    "end": "155920"
  },
  {
    "text": "and you reduce it to\nthe problem you're trying to show undecidable. OK?",
    "start": "155920",
    "end": "161230"
  },
  {
    "text": "Whoops. Let me fix that. OK. ",
    "start": "161230",
    "end": "170540"
  },
  {
    "text": "So this is the thing\nto keep in mind. To prove a language\nis undecidable, show that ATM or some other\nknown undecidable language",
    "start": "170540",
    "end": "176540"
  },
  {
    "text": "is reducible to the\nproblem B that you have at hand that you're\ntrying to show undecidable.",
    "start": "176540",
    "end": "183200"
  },
  {
    "text": "All right. So we are now going to-- ",
    "start": "183200",
    "end": "191370"
  },
  {
    "start": "189000",
    "end": "887000"
  },
  {
    "text": "first, I'm going to\nstart off by remembering Hilbert's tenth problem,\nwhich we discussed briefly",
    "start": "191370",
    "end": "198120"
  },
  {
    "text": "a few lectures back,\nas you may remember. So that's a problem\nwhere you were",
    "start": "198120",
    "end": "204209"
  },
  {
    "text": "given, say, some polynomial\nover several variables,",
    "start": "204210",
    "end": "209490"
  },
  {
    "text": "like 3x squared y minus\n15z plus 2xz equals 5.",
    "start": "209490",
    "end": "222430"
  },
  {
    "text": "And you want to\nsolve that problem. You want to find a solution\nthat solves that equation,",
    "start": "222430",
    "end": "229720"
  },
  {
    "text": "but you require\nthat the solution involves only integers.",
    "start": "229720",
    "end": "235690"
  },
  {
    "text": "So those are so-called\ndiophantine problems because the requirement is that\nthe solution be in integers.",
    "start": "235690",
    "end": "242520"
  },
  {
    "text": "And Hilbert's problem was\nto ask for an algorithm.",
    "start": "242520",
    "end": "252520"
  },
  {
    "text": "Not the language that he\nused, but doesn't matter. Essentially, he asked\nfor an algorithm to test whether a polynomial\nhas a solution in integers,",
    "start": "252520",
    "end": "260828"
  },
  {
    "text": "whether the polynomial equation\nhas a solution in integers. And as we now know, that\nproblem was posed back in 1900,",
    "start": "260829",
    "end": "275330"
  },
  {
    "text": "it took 71 years to find the\nsolution, but the answer is no. There is no-- there\nis no such algorithm.",
    "start": "275330",
    "end": "282380"
  },
  {
    "text": "We talked about this\nwhen we were discussing the Church-Turing thesis. And the method showing\nthat there is no algorithm",
    "start": "282380",
    "end": "293900"
  },
  {
    "text": "is by a reduction from\nATM to that problem. So one can use\nexactly the method",
    "start": "293900",
    "end": "300060"
  },
  {
    "text": "that we're using today\nto prove that problem is undecidable about polynomials.",
    "start": "300060",
    "end": "306599"
  },
  {
    "text": "The only thing is is\nthat the reduction, that single reduction, would\ntake the entire semester.",
    "start": "306600",
    "end": "313060"
  },
  {
    "text": "And I know that's\nin fact correct because when I was\na graduate student,",
    "start": "313060",
    "end": "318593"
  },
  {
    "text": "there was a woman in\nthe math department at Berkeley, where I\nstudied, and the whole course",
    "start": "318593",
    "end": "325480"
  },
  {
    "text": "was to go through the proof\nof Hilbert's tenth problem, of the solution to Hilbert's\ntenth problem, the proof",
    "start": "325480",
    "end": "331690"
  },
  {
    "text": "of the undecidability\nof the solution, of the undecidability of\ntesting whether a polynomial has",
    "start": "331690",
    "end": "338320"
  },
  {
    "text": "an integral solution. So the thing is is that involves\nsome fairly hairy number theory",
    "start": "338320",
    "end": "346690"
  },
  {
    "text": "in order to come up with\nthe right polynomials to basically simulate\nthe Turing machine.",
    "start": "346690",
    "end": "353755"
  },
  {
    "text": "So that's kind of getting\nahead of ourselves. That's what we're going\nto be doing today. But we're going to-- instead\nof looking at that problem",
    "start": "353755",
    "end": "360220"
  },
  {
    "text": "because we don't have a whole\nsemester to spend on it, we're going to look\nat a toy problem instead where there's\nno number theory,",
    "start": "360220",
    "end": "366760"
  },
  {
    "text": "but it still has the same\nbasic underlying idea that was employed\nin the solution",
    "start": "366760",
    "end": "374169"
  },
  {
    "text": "to Hilbert's tenth problem. So that toy problem is called\nthe post correspondence problem.",
    "start": "374170",
    "end": "379690"
  },
  {
    "text": "And it's going to have\nsome other utility for us. Well, the main reason\nwe're studying it",
    "start": "379690",
    "end": "385780"
  },
  {
    "text": "is just to illustrate\nthe method. ",
    "start": "385780",
    "end": "390860"
  },
  {
    "text": "So and the method is going\nto be, as I have been saying, is this computation\nhistory method.",
    "start": "390860",
    "end": "398020"
  },
  {
    "text": "OK, so why don't\nwe-- we'll first talk about this post\ncorrespondence problem",
    "start": "398020",
    "end": "403060"
  },
  {
    "text": "because that's very\neasy to understand, and then we'll spend a little\ntime introducing that method.",
    "start": "403060",
    "end": "410210"
  },
  {
    "text": "All right. So the post correspondence\nproblem is as follows.",
    "start": "410210",
    "end": "421030"
  },
  {
    "text": "You're given a bunch\nof pairs of strings.",
    "start": "421030",
    "end": "427780"
  },
  {
    "text": "So here is one pair, t1 and b1. And I'm writing\nthem as dominoes.",
    "start": "427780",
    "end": "434220"
  },
  {
    "text": "I'm calling them\ndominoes because I'm writing one of the strings\non top of the other string.",
    "start": "434220",
    "end": "441440"
  },
  {
    "text": "In fact, I'm using t and\nb for top and bottom here. So this is t1 is\nthe top string, b1",
    "start": "441440",
    "end": "448390"
  },
  {
    "text": "is the bottom string\nin the first domino. And then in the second domino,\nwe have two other strings,",
    "start": "448390",
    "end": "455280"
  },
  {
    "text": "a top and a bottom and so on.  So we have these here, this\ncollection of dominoes,",
    "start": "455280",
    "end": "465789"
  },
  {
    "text": "as sort of the legal dominoes. And what the goal is, to find\na sequence of those dominoes.",
    "start": "465790",
    "end": "472630"
  },
  {
    "text": " So you want to pick from\nthese dominoes here. You're allowed to\nrepeat dominoes.",
    "start": "472630",
    "end": "479469"
  },
  {
    "text": "So you want to pick a\nsequence of those dominoes, line them up next to\neach other, and so",
    "start": "479470",
    "end": "485139"
  },
  {
    "text": "that the string that you get\nby reading along the top, all of the ts together,\nis going to be",
    "start": "485140",
    "end": "491188"
  },
  {
    "text": "exactly the same as the string\nyou get by reading along all the bottoms. I'll give you an example.",
    "start": "491188",
    "end": "498080"
  },
  {
    "text": "So here, to write it\ndown a little bit more formally, so what\nI'm calling a match",
    "start": "498080",
    "end": "503680"
  },
  {
    "text": "is a sequence of these\ndominoes, so it's ti1, ti2.",
    "start": "503680",
    "end": "509770"
  },
  {
    "text": "Well, it's i1 is\nthe first domino, i2 is the second\ndomino and so on.",
    "start": "509770",
    "end": "515020"
  },
  {
    "text": "And then what\nyou're going to have is all the top strings\nconcatenated together",
    "start": "515020",
    "end": "521530"
  },
  {
    "text": "is exactly the same as what you\nget by concatenating together all the bottom strings. ",
    "start": "521530",
    "end": "528260"
  },
  {
    "text": "So here's an\nexample, and I think it'll become clear if you\ndidn't understand it so far, but it'll be completely clear\nfrom the example, I hope.",
    "start": "528260",
    "end": "537560"
  },
  {
    "text": "So here is a bunch\nof dominoes, four.",
    "start": "537560",
    "end": "542590"
  },
  {
    "text": "And what I want to\nknow is, is there some selection of\nthese dominoes-- again,",
    "start": "542590",
    "end": "550150"
  },
  {
    "text": "you can repeat dominoes. Otherwise, it would be not\nan interesting problem. So you can repeat these\nas many times as you like.",
    "start": "550150",
    "end": "556570"
  },
  {
    "text": "And I want to pick\nthese dominoes and line them up so that\nwhat you get by reading along",
    "start": "556570",
    "end": "561712"
  },
  {
    "text": "the top is the same\nas what you get by reading along the bottom. So first of all, if\nyou just stare at this",
    "start": "561712",
    "end": "568670"
  },
  {
    "text": "and you're trying\nto make a match, you'll see that there's only\none possible way to start this.",
    "start": "568670",
    "end": "575150"
  },
  {
    "text": " For example, if you started\nwith the third domino here,",
    "start": "575150",
    "end": "581290"
  },
  {
    "text": "ba over aa, it would\nfail immediately because the b and\nthe a are different.",
    "start": "581290",
    "end": "590215"
  },
  {
    "text": "And if you use the second\ndomino as your starting point, that would fail to match as well\nbecause aa would have to be--",
    "start": "590215",
    "end": "600235"
  },
  {
    "text": "the top string\nwould start with aa, the bottom string\nwould start with ab, and they could never be equal.",
    "start": "600235",
    "end": "607800"
  },
  {
    "text": "So by looking at\nthis, you can see that the only possible\nchoice that you have is to start with\nthe first domino.",
    "start": "607800",
    "end": "614980"
  },
  {
    "text": "So I'm going to start to\nbuild a domino for you just so you can see it. So here's the match so\nyou can see the process.",
    "start": "614980",
    "end": "624009"
  },
  {
    "text": "So the match starts with\nthe very first domino. And the way I'm\ngoing to write it",
    "start": "624010",
    "end": "629080"
  },
  {
    "text": "is I'm going to take the\ndominoes and kind of skew them so that you can see how the\ntop and bottom strings are",
    "start": "629080",
    "end": "636130"
  },
  {
    "text": "lining up. But they're the same\ndominoes, they've just been--",
    "start": "636130",
    "end": "643120"
  },
  {
    "text": "I changed the shape. So this is the first\ndomino, ab over aba.",
    "start": "643120",
    "end": "648880"
  },
  {
    "text": "Now, the second\ndomino in my match, it's got to start with an\na as the leftmost symbol",
    "start": "648880",
    "end": "656710"
  },
  {
    "text": "on the top string. So that would rule out\nthis one, for example. But there might be\nseveral choices,",
    "start": "656710",
    "end": "662200"
  },
  {
    "text": "and so it's not exactly obvious\nwhich one you should take. What I'm going to suggest\nis we take this one here.",
    "start": "662200",
    "end": "668360"
  },
  {
    "text": "So we take aa over aba. You see it. aa over aba. It's just written--\nI'm just skewing it",
    "start": "668360",
    "end": "676360"
  },
  {
    "text": "so that I can line up the a\nover a, the b over b, the a over a and so on.",
    "start": "676360",
    "end": "682639"
  },
  {
    "text": "So I'm starting to build\nthis concatenation of the top being equal to the\nconcatenation of the bottom.",
    "start": "682640",
    "end": "689320"
  },
  {
    "text": " Following me so far, I hope? So now, what's next?",
    "start": "689320",
    "end": "696959"
  },
  {
    "text": "So I need to have something\nwhere the top string is going to start with a ba.",
    "start": "696960",
    "end": "702561"
  },
  {
    "text": "Fact, there's only\none choice for that, so it's clearly going to\nhave to be this domino is going to be next.",
    "start": "702562",
    "end": "707880"
  },
  {
    "text": "So it's going to\nput a ba up here, but then it's going to force\nan aa down below because that's",
    "start": "707880",
    "end": "713510"
  },
  {
    "text": "what this domino does. So this ba matches with that.",
    "start": "713510",
    "end": "718770"
  },
  {
    "text": "Now we have the aa to deal with. So we're going to\nreuse this domino",
    "start": "718770",
    "end": "726250"
  },
  {
    "text": "because that's the only\none that starts with an aa. So we're going to\nreuse that one.",
    "start": "726250",
    "end": "732280"
  },
  {
    "text": "Now we have aa and aba. Now we need something\nthat starts with aba. I see two choices.",
    "start": "732280",
    "end": "738580"
  },
  {
    "text": "Could be this one because\nthis is consistent with-- at least it captures the ab.",
    "start": "738580",
    "end": "744310"
  },
  {
    "text": "We could try putting\nthis one over here, but a better choice would be to\nuse this one because if we use",
    "start": "744310",
    "end": "749830"
  },
  {
    "text": "this one, we finish the match. And therefore, we have found\nwhat we're looking for.",
    "start": "749830",
    "end": "756175"
  },
  {
    "text": " And this collection of\ndominoes here has a match.",
    "start": "756175",
    "end": "765410"
  },
  {
    "text": "Now, it's not always obvious. Some collections of dominoes\nmay not have a match.",
    "start": "765410",
    "end": "770680"
  },
  {
    "text": "And so the computational\nproblem is, is there a match? ",
    "start": "770680",
    "end": "776440"
  },
  {
    "text": "And the theorem that\nwe're going to prove today is that this problem\nis undecidable.",
    "start": "776440",
    "end": "782260"
  },
  {
    "text": "Simple as it is, simple little\ncombinatorial problem of trying",
    "start": "782260",
    "end": "787510"
  },
  {
    "text": "to put together different tiles\nlike that to form a match,",
    "start": "787510",
    "end": "793910"
  },
  {
    "text": "there is no algorithm\nfor solving that problem. And I think this is kind\nof interesting because it's",
    "start": "793910",
    "end": "800350"
  },
  {
    "text": "the first example of\na problem that we have where the underlying\nquestion does not really",
    "start": "800350",
    "end": "808240"
  },
  {
    "text": "seem to have anything\nto do with computation. You might argue that\nATM being undecidable",
    "start": "808240",
    "end": "814730"
  },
  {
    "text": "is perhaps a little\nunsurprising after the fact because it's a problem\nabout Turing machines,",
    "start": "814730",
    "end": "820246"
  },
  {
    "text": "so you can imagine\nTuring machines are going to have a tough time answering. But here's a problem\njust about strings.",
    "start": "820247",
    "end": "828080"
  },
  {
    "text": "And we're going to\nshow it's undecidable. So just to formulate\nthis as a language,",
    "start": "828080",
    "end": "833990"
  },
  {
    "text": "I'm going to call\nthe PCP language, is the collection of these PCP\nproblems, PCP instances, which",
    "start": "833990",
    "end": "847280"
  },
  {
    "text": "are just themselves, each one\nis a collection of dominoes. So it's the language of all\ncollections of these dominoes",
    "start": "847280",
    "end": "856070"
  },
  {
    "text": "where there is a match. So it's all of the\nPCP problems where you can solve them with a match.",
    "start": "856070",
    "end": "861649"
  },
  {
    "text": "And we're going\nto prove that it's undecidable by showing that\nATM is reducible to that PCP",
    "start": "861650",
    "end": "868020"
  },
  {
    "text": "language.  Now, before we do that,\nI'm going to have to--",
    "start": "868020",
    "end": "874717"
  },
  {
    "text": "I'm going to explain to you\nwhat the computation history method is in the first pla--\nthat we're going to be using.",
    "start": "874717",
    "end": "880769"
  },
  {
    "text": "So before we do that, here's\nour first check-in for the day. ",
    "start": "880770",
    "end": "888510"
  },
  {
    "start": "887000",
    "end": "1052000"
  },
  {
    "text": "Just to make sure\nyou're following me about what this PCP problem\nis, I am going to give you",
    "start": "888510",
    "end": "901529"
  },
  {
    "text": "a question to test,\nis there a match",
    "start": "901530",
    "end": "907630"
  },
  {
    "text": "with these three dominoes? So I want you to\nthink about that. ",
    "start": "907630",
    "end": "914710"
  },
  {
    "text": "I mean, the main thing I want\nto make sure you understand is what a match is\nin the first place. This is not a super hard\nproblem to tell whether or not",
    "start": "914710",
    "end": "922300"
  },
  {
    "text": "there's a match.  OK.",
    "start": "922300",
    "end": "927760"
  },
  {
    "text": " Five seconds.",
    "start": "927760",
    "end": "933430"
  },
  {
    "text": "All ready? OK. Closing it out. ",
    "start": "933430",
    "end": "939110"
  },
  {
    "text": "OK. So for those of you who\nsaid there is a match,",
    "start": "939110",
    "end": "947190"
  },
  {
    "text": "I want you to exhibit the\nmatch because in fact, there is no such-- there is no match.",
    "start": "947190",
    "end": "954750"
  },
  {
    "text": "And I mean, you could get--\nby fiddling around with it, I think if you try\nto find a match,",
    "start": "954750",
    "end": "961050"
  },
  {
    "text": "you'll pretty quickly see\nthat you're going to get-- I think what happens is\nyou kind of get into--",
    "start": "961050",
    "end": "967650"
  },
  {
    "text": "if you try to build a match\nwith this particular setup, you're just going to get stuck\nsort of repeating yourself.",
    "start": "967650",
    "end": "975510"
  },
  {
    "text": "And one point here that\nyou may have missed",
    "start": "975510",
    "end": "981480"
  },
  {
    "text": "is that a match has to\nbe a finite sequence. So if you were thinking about--",
    "start": "981480",
    "end": "987750"
  },
  {
    "text": "there is a kind of\nan infinite match that you can build with\nthis set of dominoes,",
    "start": "987750",
    "end": "994200"
  },
  {
    "text": "but that's not allowed. We're only allowing\nfinite matches. And so that means that you might\nchange your answer as a result,",
    "start": "994200",
    "end": "1000899"
  },
  {
    "text": "but too late. So and one way to\nsee that you can't",
    "start": "1000900",
    "end": "1007810"
  },
  {
    "text": "have a match in this\nproblem is that you're",
    "start": "1007810",
    "end": "1013060"
  },
  {
    "text": "going to have to start-- neither of these two are\npossible starting points,",
    "start": "1013060",
    "end": "1018800"
  },
  {
    "text": "so this one is going to\nbe clearly the only chance that you're going to have as a\nmatch, the first domino here.",
    "start": "1018800",
    "end": "1024369"
  },
  {
    "text": "But then once you put this\none down, the bottom one, the bottom string, the bottom\nbs that you're going to get,",
    "start": "1024369",
    "end": "1031660"
  },
  {
    "text": "the bottom string is going to\nbe longer than the top string. And then the other two are\ngoing to have the same length.",
    "start": "1031660",
    "end": "1038449"
  },
  {
    "text": "So you're never going\nto have the top be the same length as the bottom. The bottom is always going to be\nlonger no matter how many more",
    "start": "1038450",
    "end": "1047170"
  },
  {
    "text": "dominoes you lay out. So there's no chance of\nthere being a match here.",
    "start": "1047170",
    "end": "1053110"
  },
  {
    "start": "1052000",
    "end": "1362000"
  },
  {
    "text": "OK. So now we're going\nto work our way",
    "start": "1053110",
    "end": "1060010"
  },
  {
    "text": "up to introducing this\ncomputation history method. ",
    "start": "1060010",
    "end": "1065880"
  },
  {
    "text": "And first, let me define\nsomething for a Turing machine",
    "start": "1065880",
    "end": "1074030"
  },
  {
    "text": "that I'm going to\ncall a configuration. Configuration is just a\nsnapshot of the Turing machine",
    "start": "1074030",
    "end": "1080540"
  },
  {
    "text": "in the middle of\nits computation. So if you're running\nthe Turing machine",
    "start": "1080540",
    "end": "1085850"
  },
  {
    "text": "and you just stop\nit at some moment, it's going to be\nin a certain state,",
    "start": "1085850",
    "end": "1091280"
  },
  {
    "text": "the head is going to be\non a certain position, and the tape is going to\nhave a certain contents.",
    "start": "1091280",
    "end": "1096760"
  },
  {
    "text": "And with that\ninformation, you can then continue the computation\nof the Turing machine.",
    "start": "1096760",
    "end": "1103360"
  },
  {
    "text": "That's a full set\nof the information that you need about\nthe Turing machine that tells you everything\nabout its computation",
    "start": "1103360",
    "end": "1110950"
  },
  {
    "text": "at that moment in time. The state, head position,\nand tape contents. And so that, we're calling\nthat information together,",
    "start": "1110950",
    "end": "1118929"
  },
  {
    "text": "state, head position,\ntape contents, we're calling that a configuration. Fairly basic notion.",
    "start": "1118930",
    "end": "1127030"
  },
  {
    "text": "I mean, if your program-- if you have something-- if\nyou have the states of all the variables and where\nthe current execution",
    "start": "1127030",
    "end": "1133990"
  },
  {
    "text": "of the program is at a\nmoment in time, same idea. ",
    "start": "1133990",
    "end": "1139940"
  },
  {
    "text": "OK. So in terms of a picture here,\nhere is the Turing machine. Imagine it's in state q3.",
    "start": "1139940",
    "end": "1147160"
  },
  {
    "text": "The head position is in the\nsixth position on the tape, so p would be 6 because\nit's in the sixth position,",
    "start": "1147160",
    "end": "1154900"
  },
  {
    "text": "and the tape contents is going\nto be this bunch of as followed by this bunch of bs. So I would write\nit down like this.",
    "start": "1154900",
    "end": "1161440"
  },
  {
    "text": "State's in q3, head\nposition number 6, this is the contents\nof the tape.",
    "start": "1161440",
    "end": "1167590"
  },
  {
    "text": "Now, what we're going to often\ndo for convenience in using this notion in proofs is\nthat we're going to want",
    "start": "1167590",
    "end": "1174580"
  },
  {
    "text": "to represent a configuration\nas a string in a particular way",
    "start": "1174580",
    "end": "1183919"
  },
  {
    "text": "that's going to be--\nthat's going to-- this concept is going\nto come up kind of again",
    "start": "1183920",
    "end": "1190010"
  },
  {
    "text": "and again during the course. And so it's going\nto be handy to have",
    "start": "1190010",
    "end": "1195410"
  },
  {
    "text": "a particular way of writing down\nconfigurations for doing proofs",
    "start": "1195410",
    "end": "1201620"
  },
  {
    "text": "about them. And so the way we're going\nto write them down is-- I think it's just maybe--",
    "start": "1201620",
    "end": "1206750"
  },
  {
    "text": "I can just put it right\nup here like this. We're going to write down\nthe symbols of the tape.",
    "start": "1206750",
    "end": "1215140"
  },
  {
    "text": "But what we're\ngoing to do is stick in the middle of those\nsymbols the state",
    "start": "1215140",
    "end": "1221230"
  },
  {
    "text": "of the machine\nimmediately to the left of the position that the\nmachine is currently reading.",
    "start": "1221230",
    "end": "1229420"
  },
  {
    "text": "So you can imagine the\nhead here, which is coming. Imagine the state is kind\nof where the head is.",
    "start": "1229420",
    "end": "1237250"
  },
  {
    "text": "It's pointing at the symbol\nimmediately to its right.",
    "start": "1237250",
    "end": "1242290"
  },
  {
    "text": "So this is just another way of\nwriting down a configuration. Here's the tape\ncontents, which I'm",
    "start": "1242290",
    "end": "1247570"
  },
  {
    "text": "sort of writing formally here. I'm breaking the tape\ncontents into two parts,",
    "start": "1247570",
    "end": "1252940"
  },
  {
    "text": "which I'm calling t1 and t2. This is the t1\npart, the t2 part.",
    "start": "1252940",
    "end": "1258730"
  },
  {
    "text": "And I'm putting the state\nin between t1 and t2",
    "start": "1258730",
    "end": "1267690"
  },
  {
    "text": "where I have in mind that the\nmachine's head position is",
    "start": "1267690",
    "end": "1273029"
  },
  {
    "text": "right at the beginning of t2. But maybe this picture just says\nit all and it's clear enough.",
    "start": "1273030",
    "end": "1280440"
  },
  {
    "text": "So just keep in\nmind that when we're going to be writing down\nconfigurations of machines, we're typically going to\nwrite it down this way.",
    "start": "1280440",
    "end": "1287010"
  },
  {
    "text": " OK, so I think this\nis a good moment",
    "start": "1287010",
    "end": "1293310"
  },
  {
    "text": "to take a-- to take a\nmoment for questions. Oh. I see there's a lot\nof questions already.",
    "start": "1293310",
    "end": "1298909"
  },
  {
    "text": " So one question is,\nhow does the encoding",
    "start": "1298910",
    "end": "1304730"
  },
  {
    "text": "differentiate between\nthe string and the state? If I'm understanding\nyou correctly,",
    "start": "1304730",
    "end": "1311149"
  },
  {
    "text": "I'm going to be assuming that\nthe symbols that represent",
    "start": "1311150",
    "end": "1317380"
  },
  {
    "text": "states and the symbols\nthat appear on the tape are distinct from one another.",
    "start": "1317380",
    "end": "1323029"
  },
  {
    "text": "So you can always tell just like\nusually the way we write things down when you have\na state symbol",
    "start": "1323030",
    "end": "1328450"
  },
  {
    "text": "or whether you\nhave a tape symbol. And so in a\nconfiguration, you're going to have a\nbunch of tape symbols",
    "start": "1328450",
    "end": "1336130"
  },
  {
    "text": "and a single state symbol\nrepresent in the position where the head is. ",
    "start": "1336130",
    "end": "1342940"
  },
  {
    "text": "Somebody says-- 6 here is\njust this is 1, 2, 3, 4, 5, 6.",
    "start": "1342940",
    "end": "1348700"
  },
  {
    "text": "We're in head p-- the head is in position six. That's all I had in\nmind for 6, and that's why that 6 is\nappearing over there",
    "start": "1348700",
    "end": "1354580"
  },
  {
    "text": "because that's the\nposition of the head.  Good.",
    "start": "1354580",
    "end": "1359760"
  },
  {
    "text": "All right. So why don't we continue. ",
    "start": "1359760",
    "end": "1365610"
  },
  {
    "start": "1362000",
    "end": "1701000"
  },
  {
    "text": "Now, we're all ready to\nstart defining computation histories, which themselves\nare not very difficult concept.",
    "start": "1365610",
    "end": "1374500"
  },
  {
    "text": "Computation history for a\nTuring machine M on an input w",
    "start": "1374500",
    "end": "1379660"
  },
  {
    "text": "is just the sequence of\nconfigurations you go through. When you start the machine\nat the beginning with M",
    "start": "1379660",
    "end": "1390148"
  },
  {
    "text": "on the tape-- with w on the tape,\nI'm sorry, and the head",
    "start": "1390148",
    "end": "1396309"
  },
  {
    "text": "at the beginning in position\none and the state in 20 or whatever the start\nstate is of the machine.",
    "start": "1396310",
    "end": "1404110"
  },
  {
    "text": "So that's going to be the\nstarting configuration here. And these are the\nsequence of configuration",
    "start": "1404110",
    "end": "1409870"
  },
  {
    "text": "that machines go through--\nthat the machine goes through step by step. Every step of the machine\nis getting represented here",
    "start": "1409870",
    "end": "1417760"
  },
  {
    "text": "until it ends up at an accept. That's what we mean by\na computation history, or sometimes we're\ngoing to emphasize that",
    "start": "1417760",
    "end": "1424460"
  },
  {
    "text": "by calling it an accepting\ncomputation history. Represent meaning that the\nmachine has accepted its input,",
    "start": "1424460",
    "end": "1431890"
  },
  {
    "text": "and these are the\nsequence of configurations that the machine goes through. That's what I mean by\na computation history.",
    "start": "1431890",
    "end": "1439150"
  },
  {
    "text": "You know, I'm sure in-- I mean, I think the terminology\nchanges over the years, but there's a notion similar\nto that for any kind of--",
    "start": "1439150",
    "end": "1447790"
  },
  {
    "text": "if you're running a\nprogram and you just want to keep track of how\nthe variables are changing",
    "start": "1447790",
    "end": "1453580"
  },
  {
    "text": "as you're in this particular\nrun of the machine, and you're writing\nthem all down,",
    "start": "1453580",
    "end": "1458809"
  },
  {
    "text": "it's like a log of the\nhistory of the settings of the internal states of\nthe machine and variables",
    "start": "1458810",
    "end": "1465880"
  },
  {
    "text": "and so on.  So this is just all\nof the configurations",
    "start": "1465880",
    "end": "1471150"
  },
  {
    "text": "the machine goes through on\nthe way to accepting its input. If the machine does\nnot accept its input,",
    "start": "1471150",
    "end": "1477120"
  },
  {
    "text": "there is no computation history.  OK? So there is no accepting\ncomputation history, at least,",
    "start": "1477120",
    "end": "1484160"
  },
  {
    "text": "to emphasize that point. Because that can only occur\nobviously if the machine",
    "start": "1484160",
    "end": "1489350"
  },
  {
    "text": "has accepted its input.  OK. So just as we had\nwith configurations,",
    "start": "1489350",
    "end": "1497020"
  },
  {
    "text": "we're going to want to be\nable to write down computation histories as strings.",
    "start": "1497020",
    "end": "1502188"
  },
  {
    "text": "And it'll be convenient to have\na particular format for doing that as well. And it's kind of\nthe obvious thing.",
    "start": "1502188",
    "end": "1507460"
  },
  {
    "text": "We're just going to take the\nsequence of configurations",
    "start": "1507460",
    "end": "1513669"
  },
  {
    "text": "in the computation history and\nwrite them down as a string where each\nconfiguration is going",
    "start": "1513670",
    "end": "1520630"
  },
  {
    "text": "to be the string for\nthat configuration. I'll show you kind of a\nlittle example in a second.",
    "start": "1520630",
    "end": "1526020"
  },
  {
    "text": "But just to focus\non the concept here, we're just going to\nwrite down the string for this configuration, the\nstarting configuration and then",
    "start": "1526020",
    "end": "1533960"
  },
  {
    "text": "the next configuration\nand so on until you get to the accepting\nconfiguration and separate each\nof those strings by some pound signed letter.",
    "start": "1533960",
    "end": "1541990"
  },
  {
    "text": "OK? So here is a computation\nhistory for M on w",
    "start": "1541990",
    "end": "1549460"
  },
  {
    "text": "where w is the string\nw1, w2, dot, dot, wn. So here is the--",
    "start": "1549460",
    "end": "1554635"
  },
  {
    "text": " here is the first configuration.",
    "start": "1554635",
    "end": "1562780"
  },
  {
    "text": "So this part here is\nthe computation history encoded as a string.",
    "start": "1562780",
    "end": "1569200"
  },
  {
    "text": "I'm giving you this extra\nside information just to make it clearer\nwhat's going on there.",
    "start": "1569200",
    "end": "1575690"
  },
  {
    "text": "So this is the\nfirst configuration, this is the second\nconfiguration, and so on. And I'm trying to even give you\na little bit more detail of how",
    "start": "1575690",
    "end": "1586179"
  },
  {
    "text": "it might look by kind of making\nthe example a little bit more concrete.",
    "start": "1586180",
    "end": "1592040"
  },
  {
    "text": "So let's say that the\nTuring machine, when it's in the starting\nstate q0, looking",
    "start": "1592040",
    "end": "1598870"
  },
  {
    "text": "at the very first\nsymbol of the input tape in this particular input,\nsay w1, it goes from q0 to q7",
    "start": "1598870",
    "end": "1607720"
  },
  {
    "text": "and writes an a on the tape and\nmoves its head to the right. So that's why the second\nconfiguration reflects that.",
    "start": "1607720",
    "end": "1614150"
  },
  {
    "text": "See here, it went from q0 to q7. Now the head is in\nthe second position,",
    "start": "1614150",
    "end": "1619520"
  },
  {
    "text": "so that's why that state\nsymbol is moved over one. And the very first position\nnow has become an a",
    "start": "1619520",
    "end": "1627820"
  },
  {
    "text": "because the machine has changed\nwhatever was on that input tape there in the first\nposition to an a.",
    "start": "1627820",
    "end": "1634780"
  },
  {
    "text": "And then the next step,\nit goes from q7 reading a w2, which is where the head\nis now, looking at the w2,",
    "start": "1634780",
    "end": "1643330"
  },
  {
    "text": "and goes to q8, writing a\nc, and again moves right. OK? So that's why I drew\nthese in the way I did.",
    "start": "1643330",
    "end": "1651759"
  },
  {
    "text": "And so you go through a sequence\nof those, you get to q accept, and that's the encoded form\nof the computation history.",
    "start": "1651760",
    "end": "1660730"
  },
  {
    "text": "All right? I think that's-- is that\nall I wanted to say?",
    "start": "1660730",
    "end": "1666070"
  },
  {
    "text": "Yeah. So you can feel free to ask\nanother question if you want.",
    "start": "1666070",
    "end": "1673279"
  },
  {
    "text": "I'm just going to relaunch this. ",
    "start": "1673280",
    "end": "1680200"
  },
  {
    "text": "Yeah. Good.  So if we're all together\non configurations,",
    "start": "1680200",
    "end": "1690310"
  },
  {
    "text": "computation histories,\nand how we're going to be writing\nthem down as strings, that's what we've done so far.",
    "start": "1690310",
    "end": "1696630"
  },
  {
    "text": " No questions, so I'm\ngoing to move on.",
    "start": "1696630",
    "end": "1702200"
  },
  {
    "start": "1701000",
    "end": "2090000"
  },
  {
    "text": "All right. So let me define a new\nautomaton that we're",
    "start": "1702200",
    "end": "1708230"
  },
  {
    "text": "going to mainly use as just\nto provide an example for us",
    "start": "1708230",
    "end": "1719590"
  },
  {
    "text": "today. I'm going to call this a\nlinearly bounded automaton.",
    "start": "1719590",
    "end": "1726320"
  },
  {
    "text": "And all it is is\na Turing machine",
    "start": "1726320",
    "end": "1732289"
  },
  {
    "text": "where the Turing\nmachine is going to be restricted in where it can--",
    "start": "1732290",
    "end": "1738440"
  },
  {
    "text": "the tape is not going\nto be infinite anymore. The tape is just going to be\nbig enough to hold the input. ",
    "start": "1738440",
    "end": "1746060"
  },
  {
    "text": "So the machine no\nlonger has the ability to move into the portion of the\ntape to the right of the input",
    "start": "1746060",
    "end": "1752330"
  },
  {
    "text": "because there is\nno tape out there. It just has the\ntape sitting here that contains the input,\nwhich the tape itself",
    "start": "1752330",
    "end": "1759980"
  },
  {
    "text": "can vary in size. However big the input is,\nthat's how big the tape is.",
    "start": "1759980",
    "end": "1765360"
  },
  {
    "text": "So the tape adjusts to\nthe length of the input. But once you've\nstarted the machine with some particular input,\nthat's as big as the tape is.",
    "start": "1765360",
    "end": "1772860"
  },
  {
    "text": "There's no more. The reason why it's\ncalled linearly bounded is because the amount of\nmemory is a linear function",
    "start": "1772860",
    "end": "1780845"
  },
  {
    "text": "of the size of the input\nbecause you can effectively get somewhat more memory by\nenlarging the tape alphabet,",
    "start": "1780845",
    "end": "1788245"
  },
  {
    "text": "but that's going to be\nfixed for any given machine, so that's where the linearly\ncomes from, if that's helpful.",
    "start": "1788245",
    "end": "1793620"
  },
  {
    "text": "But if you don't get that,\nit's sort of a side remark. ",
    "start": "1793620",
    "end": "1801580"
  },
  {
    "text": "But what's important\nto me is that you understand what I mean\nby a Linearly Bounded",
    "start": "1801580",
    "end": "1809230"
  },
  {
    "text": "Automaton, or an LBA. It's just like a Turing\nmachine, but that portion",
    "start": "1809230",
    "end": "1815080"
  },
  {
    "text": "of the tape that originally\nhad blanks is just not there. As the machine tries\nto move its head",
    "start": "1815080",
    "end": "1821140"
  },
  {
    "text": "off the right end of\nthe input, it just sticks there just as if\nit tried to move its head off the left end of the input.",
    "start": "1821140",
    "end": "1827470"
  },
  {
    "text": "Doesn't go anywhere. So now, we're going to ask\nthe same kinds of questions",
    "start": "1827470",
    "end": "1833150"
  },
  {
    "text": "about LBAs that we\nask for other automa. So the acceptance problem. If I give you an input\nand some particular LBA",
    "start": "1833150",
    "end": "1843860"
  },
  {
    "text": "and I want to know, does\nthe LBA accept that input?",
    "start": "1843860",
    "end": "1849850"
  },
  {
    "text": "Well, and now the question is,\nis that the decidable or not?",
    "start": "1849850",
    "end": "1855910"
  },
  {
    "text": "So at first glance,\nyou might think,",
    "start": "1855910",
    "end": "1862280"
  },
  {
    "text": "well, an LBA is like\na Turing machine, and the ATM problem\nis undecidable,",
    "start": "1862280",
    "end": "1869650"
  },
  {
    "text": "so that might be a\ngood first guess.",
    "start": "1869650",
    "end": "1877090"
  },
  {
    "text": "And also, if you try\nto simulate them,",
    "start": "1877090",
    "end": "1882490"
  },
  {
    "text": "if you try to figure out how\nyou would go about simulating the machine, if given b and\nw, if you actually tried",
    "start": "1882490",
    "end": "1890659"
  },
  {
    "text": "to simulate the machine\nto get the answer, so you run b on w,\nwell, of course, if you run it for a while,\nand it eventually halts,",
    "start": "1890660",
    "end": "1897410"
  },
  {
    "text": "either accepting or rejecting,\nthen you know the answer and you're finished. But this machine\nmight get into a loop.",
    "start": "1897410",
    "end": "1905492"
  },
  {
    "text": "You know, nothing to\nprevent the machine from looping on\nthat finite amount of-- on that limited\namount of tape that it has.",
    "start": "1905493",
    "end": "1912350"
  },
  {
    "text": "And then you might\nbe in trouble. But in fact, that's not the\ncase because when you start out",
    "start": "1912350",
    "end": "1921870"
  },
  {
    "text": "with a limited amount\nof tape, if you run the machine for a long\ntime and it's not halting,",
    "start": "1921870",
    "end": "1928020"
  },
  {
    "text": "it's going and going and\ngoing, inevitably, it's going to have to\nrepeat, get into exactly",
    "start": "1928020",
    "end": "1937799"
  },
  {
    "text": "the same configuration that it\ndid before because there's only a limited number\nof configurations",
    "start": "1937800",
    "end": "1943170"
  },
  {
    "text": "that the machine has. And once it repeats\na configuration, it's going to be repeating\nthat configuration forever,",
    "start": "1943170",
    "end": "1949260"
  },
  {
    "text": "and it's going to be in a loop. So this problem, in\nfact, is decidable",
    "start": "1949260",
    "end": "1958210"
  },
  {
    "text": "because the idea\nis if b on w runs for a very long time and an\namount that you can calculate,",
    "start": "1958210",
    "end": "1965320"
  },
  {
    "text": "then you know it's\ngot to be cycling. More than just looping. It's got to be repeating itself.",
    "start": "1965320",
    "end": "1973220"
  },
  {
    "text": "And so therefore, once it\nstarts repeating itself, it's going to be going forever.",
    "start": "1973220",
    "end": "1978940"
  },
  {
    "text": "So and here is the\nactual calculation, which is something I'm sure\nyou could do on your own,",
    "start": "1978940",
    "end": "1984340"
  },
  {
    "text": "but just to spell it out. So if you have an\ninput of length n",
    "start": "1984340",
    "end": "1989549"
  },
  {
    "text": "that you're providing to\nb, so if w is of length n,",
    "start": "1989550",
    "end": "1995790"
  },
  {
    "text": "the LBA can only go for\nthis number of different--",
    "start": "1995790",
    "end": "2002820"
  },
  {
    "text": "it can only have this number\nof different configurations. The number of states times the\nnumber of head positions, which",
    "start": "2002820",
    "end": "2009139"
  },
  {
    "text": "is n, the number of head\npositions on the tape, times the number of\ndifferent tape contents.",
    "start": "2009140",
    "end": "2016145"
  },
  {
    "text": "If the tape was\nonly one long, this is the-- this is the size\nof the tape alphabet.",
    "start": "2016145",
    "end": "2021780"
  },
  {
    "text": "So if the tape were two long,\nthe tape had two cells on it,",
    "start": "2021780",
    "end": "2029630"
  },
  {
    "text": "the number of\npossible tape contents would be the square\nof the alphabet.",
    "start": "2029630",
    "end": "2035120"
  },
  {
    "text": "And if the tape is going\nto be n symbols long, it's going to be the tape\nalphabet size to the nth power.",
    "start": "2035120",
    "end": "2044447"
  },
  {
    "text": "So therefore, if a Turing\nmachine runs for longer, it's got to repeat\nsome configuration, and it'll never hold.",
    "start": "2044447",
    "end": "2049908"
  },
  {
    "text": "So the decider is going to be\nhopefully clear at this point.",
    "start": "2049909",
    "end": "2055129"
  },
  {
    "text": "You're given b and w, so this\nis the decider for a LBA.",
    "start": "2055130",
    "end": "2060679"
  },
  {
    "text": "It's going to run b on w\nfor this number of steps. If it's accepted by\nthen, then you accept,",
    "start": "2060679",
    "end": "2065780"
  },
  {
    "text": "and if it hasn't, if it's\nrejected or it's still running, then you can reject. And you know, if it's still\nrunning at this point,",
    "start": "2065780",
    "end": "2072679"
  },
  {
    "text": "it's never going to accept.  All right.",
    "start": "2072679",
    "end": "2078629"
  },
  {
    "text": "Any questions on this? ",
    "start": "2078630",
    "end": "2087658"
  },
  {
    "text": "OK, let's move on.  All right. So now, but what's\ndifferent now,",
    "start": "2087659",
    "end": "2097770"
  },
  {
    "start": "2090000",
    "end": "2917000"
  },
  {
    "text": "or what's perhaps\ninteresting now is that even though the\nacceptance problem for LBAs",
    "start": "2097770",
    "end": "2105510"
  },
  {
    "text": "is decidable, the emptiness\nproblem is undecidable. ",
    "start": "2105510",
    "end": "2111840"
  },
  {
    "text": "And that's where the\ncomputation history method is going to come in. So this is where\nwe're going to be starting to do something new\nin terms of a proof technique.",
    "start": "2111840",
    "end": "2118920"
  },
  {
    "start": "2118920",
    "end": "2125420"
  },
  {
    "text": "So we're going to\nreduce ATM to ELBA, the emptiness problem for LBAs.",
    "start": "2125420",
    "end": "2132140"
  },
  {
    "text": "So given an LBA, does it\naccept anything or not? And this is going to use the\ncomputation history method.",
    "start": "2132140",
    "end": "2139260"
  },
  {
    "text": "So this will be a\nchance to illustrate that method for the first time. So the setup initially\nis just like before.",
    "start": "2139260",
    "end": "2146940"
  },
  {
    "text": "We're going to assume\nwe have a Turing machine that decides this\nELBA problem that of interest.",
    "start": "2146940",
    "end": "2153150"
  },
  {
    "text": "And we're going to\nuse that to construct Turing machine-deciding\nATM for our contradiction.",
    "start": "2153150",
    "end": "2159280"
  },
  {
    "text": "OK, so here is S,\nsupposedly deciding ATM, and what is it going\nto do-- and this",
    "start": "2159280",
    "end": "2165690"
  },
  {
    "text": "is going to be the tricky part. S is going to use M\nand w to design an LBA.",
    "start": "2165690",
    "end": "2174310"
  },
  {
    "start": "2174310",
    "end": "2179550"
  },
  {
    "text": "That LBA is going to be built\nwith the knowledge of M and w.",
    "start": "2179550",
    "end": "2185270"
  },
  {
    "text": "In fact, it's going to\nhave M and w built into it. So that's why I'm\ncalling that LBA B of Mw",
    "start": "2185270",
    "end": "2196470"
  },
  {
    "text": "because it depends on\nMw, as I'll describe.",
    "start": "2196470",
    "end": "2201630"
  },
  {
    "text": "And what that LBA does,\nit takes its input,",
    "start": "2201630",
    "end": "2208220"
  },
  {
    "text": "let's call it the x,\nthe input to the LBA, and examines that input\nto see if that input is",
    "start": "2208220",
    "end": "2217430"
  },
  {
    "text": "an accepting computation\nhistory for M on w. ",
    "start": "2217430",
    "end": "2222840"
  },
  {
    "text": "That'll be just looking\nfor computation histories for M on w. ",
    "start": "2222840",
    "end": "2228613"
  },
  {
    "text": "And that's the only thing\nit's going to ever accept. ",
    "start": "2228613",
    "end": "2237760"
  },
  {
    "text": "If you feed it something\nwhich is not a computation history, that sequence\nof configurations",
    "start": "2237760",
    "end": "2245079"
  },
  {
    "text": "for M on w leading to an accept,\nif you feed it something else, the LBA is just\ngoing to reject it.",
    "start": "2245080",
    "end": "2251260"
  },
  {
    "text": "It only accepts the accepting\ncomputation history for M on w.",
    "start": "2251260",
    "end": "2257800"
  },
  {
    "text": "And now, if you can\nbuild such a thing,",
    "start": "2257800",
    "end": "2262810"
  },
  {
    "text": "then you can use that\nmachine in your emptiness",
    "start": "2262810",
    "end": "2269040"
  },
  {
    "text": "tester to see if it\naccepts any strings at all. Because the only thing\nit could possibly",
    "start": "2269040",
    "end": "2274140"
  },
  {
    "text": "be accepting is an accepting\ncomputation history. You don't even know if\nthere exists one because you",
    "start": "2274140",
    "end": "2279839"
  },
  {
    "text": "don't know if M accepts w. So you're going to\nbuild this LBA, which",
    "start": "2279840",
    "end": "2288610"
  },
  {
    "text": "is looking for accepting\ncomputation histories, and then see if its\nlanguage is empty or not.",
    "start": "2288610",
    "end": "2295720"
  },
  {
    "text": "If its language is not\nempty, the only thing it could be accepting is\nthis computation history,",
    "start": "2295720",
    "end": "2301480"
  },
  {
    "text": "so you know M accepts w. Whereas if the\nlanguage is empty, you know that there is no\ncomputation history for M on w,",
    "start": "2301480",
    "end": "2309010"
  },
  {
    "text": "and so M does not accept w. So that's the whole idea. The trick is, how do\nyou build this LBA?",
    "start": "2309010",
    "end": "2317760"
  },
  {
    "text": "So first, you're going to make\nthis LBA which tests its input to see if it's an accepting\ncomputation history for M on w.",
    "start": "2317760",
    "end": "2324240"
  },
  {
    "text": " And you have to build\nthis LBA without even",
    "start": "2324240",
    "end": "2332859"
  },
  {
    "text": "knowing whether there is\na computation history. It's not like you\ncan take that string",
    "start": "2332860",
    "end": "2339170"
  },
  {
    "text": "and just build a\nstring into the LBA because you don't even\nknow if that string exists. But what you can do is you\ncan make the LBA follow",
    "start": "2339170",
    "end": "2350210"
  },
  {
    "text": "the rules of M. It\nknows w, and it knows M, so it can take its input, and\nusing w and the rules of M,",
    "start": "2350210",
    "end": "2359779"
  },
  {
    "text": "see if that input is a\ncomputation history for M on w.",
    "start": "2359780",
    "end": "2365320"
  },
  {
    "text": "And that's what\nit's going to do. So here is this machine\nI'm going to construct.",
    "start": "2365320",
    "end": "2371965"
  },
  {
    "text": "I'll give it to you written\ndown and with a little bit more details of its procedure.",
    "start": "2371965",
    "end": "2377830"
  },
  {
    "text": "But just to kind\nof illustrate it, so here is a proposed\ninput to B of Mw.",
    "start": "2377830",
    "end": "2383140"
  },
  {
    "text": "This would be the x here. This would be an x\nthat would be accepted.",
    "start": "2383140",
    "end": "2388220"
  },
  {
    "text": "But anything else that would be\nprovided would not be accepted. So this is the sequence of\nconfigurations written down",
    "start": "2388220",
    "end": "2394430"
  },
  {
    "text": "as a string. That would be the x that I'm\nproviding to the B of Mw.",
    "start": "2394430",
    "end": "2400040"
  },
  {
    "text": "And it's supposed to be checking\nthis to make sure it's legit. ",
    "start": "2400040",
    "end": "2406360"
  },
  {
    "text": "So on input x, the\nway it's going to-- the way it's going\nto proceed, it's going to first check\nto see whether x begins",
    "start": "2406360",
    "end": "2413260"
  },
  {
    "text": "in the right way because this\nLBA, it knows M and it knows w.",
    "start": "2413260",
    "end": "2422470"
  },
  {
    "text": "So the very first thing\nis it takes a look at the first part of the\nstring up to the pound sign. If there's no pound\nsign, if you're",
    "start": "2422470",
    "end": "2428570"
  },
  {
    "text": "going to just feed\njunk in, it's going to be easily\nidentifiable as junk. ",
    "start": "2428570",
    "end": "2435710"
  },
  {
    "text": "So if you're going\nto feed something-- so it's going to-- the LBA is\ngoing to take everything up to the first pound sign and\njust confirm that that thing is",
    "start": "2435710",
    "end": "2444920"
  },
  {
    "text": "the first configuration,\nthe starting configuration of M on w, which means it has\nto start with the start state,",
    "start": "2444920",
    "end": "2451860"
  },
  {
    "text": "then here is w. So just kind of check that. Then it's going to check\nthat each one of these guys",
    "start": "2451860",
    "end": "2460610"
  },
  {
    "text": "follows legally from\nthe previous one according to the rules of\nM. It's going to first check that this one is correct,\nand then this one leads",
    "start": "2460610",
    "end": "2467180"
  },
  {
    "text": "to that one, according\nto the rules of M, then this one leads\nto that one, according to the rules of M. All of\nthat-- the knowledge of M and w",
    "start": "2467180",
    "end": "2475490"
  },
  {
    "text": "is built in so it can do that. And then it just follows along,\nchecking this computation.",
    "start": "2475490",
    "end": "2484100"
  },
  {
    "text": "It's easy to check that\na computation is correct. That's all that's\nreally going on here. It's going to check that\nthe computation is correct",
    "start": "2484100",
    "end": "2491210"
  },
  {
    "text": "until it gets to the\nend and then makes sure that the last configuration\nthat it's been given as input",
    "start": "2491210",
    "end": "2496910"
  },
  {
    "text": "is an accepting\nconfiguration, that there's an accept state in it.",
    "start": "2496910",
    "end": "2502640"
  },
  {
    "text": "And if everything that passes it\naccepts, otherwise, it rejects.",
    "start": "2502640",
    "end": "2507769"
  },
  {
    "text": "OK? And the point is\nthat this is an LBA. You don't-- oh, wait.",
    "start": "2507770",
    "end": "2512940"
  },
  {
    "text": "Just kind of jumped\nahead of myself. You don't need any\nadditional information. So how does it actually do this?",
    "start": "2512940",
    "end": "2518190"
  },
  {
    "text": "So how do you actually\ndo this on the tape? So I claimed that the LBA\ndoesn't need any extra space",
    "start": "2518190",
    "end": "2524850"
  },
  {
    "text": "to do this-- to do this check. It's just going to be\nzigzagging back and forth here",
    "start": "2524850",
    "end": "2531944"
  },
  {
    "text": "on the input, checking that the\ncorresponding symbols match up",
    "start": "2531945",
    "end": "2538550"
  },
  {
    "text": "except around the\nhead position where it gets updated correctly.",
    "start": "2538550",
    "end": "2543920"
  },
  {
    "text": "And it may need to mark-- it\nwill need to mark on the tape, it's allowed to\nwrite on the tape,",
    "start": "2543920",
    "end": "2549080"
  },
  {
    "text": "just to make sure it keeps\ntrack of where it is. But this is a very simple--",
    "start": "2549080",
    "end": "2554940"
  },
  {
    "text": "I mean, I'm not trying to-- if you're not following it,\nI'm not trying to alarm you,",
    "start": "2554940",
    "end": "2559990"
  },
  {
    "text": "but I'm just trying to help\nyou understand that this is not a complicated\nprocedure here to do",
    "start": "2559990",
    "end": "2565890"
  },
  {
    "text": "this check that the actual\ncomputation that's written down",
    "start": "2565890",
    "end": "2570990"
  },
  {
    "text": "of the Turing machine is valid. But we can deal with\nthe question here.",
    "start": "2570990",
    "end": "2576790"
  },
  {
    "text": " Oh, good.",
    "start": "2576790",
    "end": "2582570"
  },
  {
    "text": "Now we got some questions. Oops. You can be thinking about--\nwhile I'm thinking about this,",
    "start": "2582570",
    "end": "2588910"
  },
  {
    "text": "you can think about that\ncheck-in over there. ",
    "start": "2588910",
    "end": "2594140"
  },
  {
    "text": "So here's a good question. Going from each configuration\nto the next configuration,",
    "start": "2594140",
    "end": "2599380"
  },
  {
    "text": "is it a unique next step?",
    "start": "2599380",
    "end": "2604880"
  },
  {
    "text": "Well, I'm assuming that\nthe Turing machine we're starting with is\ndeterministic, so there should be only one way to go.",
    "start": "2604880",
    "end": "2610850"
  },
  {
    "text": "So the answer to\nthat question is yes. This is going to be\na unique string here.",
    "start": "2610850",
    "end": "2616990"
  },
  {
    "text": "There's really going to be\nonly one computation history. Not that it really\nmatters in a sense,",
    "start": "2616990",
    "end": "2624280"
  },
  {
    "text": "the answer to that\nquestion, as long as that accepting\ncomputation history",
    "start": "2624280",
    "end": "2629380"
  },
  {
    "text": "corresponds to the machine\nactually accepting. Oh boy, we're all over--\nwe're all over the place here.",
    "start": "2629380",
    "end": "2637900"
  },
  {
    "text": "OK, are you ready\nto end this poll?",
    "start": "2637900",
    "end": "2646329"
  },
  {
    "start": "2646330",
    "end": "2651380"
  },
  {
    "text": "All right. Well, this is where we are. ",
    "start": "2651380",
    "end": "2656980"
  },
  {
    "text": "Everybody who said they'd\nrather be in 6.046, I know who you are. You're all going to be expelled.",
    "start": "2656980",
    "end": "2664810"
  },
  {
    "text": "No, I'm joking. I don't know who you are. So yeah.",
    "start": "2664810",
    "end": "2672280"
  },
  {
    "text": "Good. ",
    "start": "2672280",
    "end": "2678260"
  },
  {
    "text": "So we are here at the break,\nand I made this poll on purpose",
    "start": "2678260",
    "end": "2684590"
  },
  {
    "text": "at this moment so we\ncan spend a little time. Let me just start\nour clock going, and I can try to help you,\nthose of you who answered C,",
    "start": "2684590",
    "end": "2692809"
  },
  {
    "text": "that you're baffled. I can try to help you\nunderstand what's going on.",
    "start": "2692810",
    "end": "2699220"
  },
  {
    "text": "Ah. So this is a good-- this\nis a good question here. ",
    "start": "2699220",
    "end": "2706170"
  },
  {
    "text": "OK, well, OK. Several good questions here. So somebody asks, why\ndon't we just test",
    "start": "2706170",
    "end": "2713550"
  },
  {
    "text": "all possible strings for B? Remember, if we're\ntrying to test emptiness",
    "start": "2713550",
    "end": "2719860"
  },
  {
    "text": "for B's language,\nthat's the ELBA problem.",
    "start": "2719860",
    "end": "2725360"
  },
  {
    "text": "Now, why don't we just\ntry all possible strings? And that would work\nif we had enough time,",
    "start": "2725360",
    "end": "2731480"
  },
  {
    "text": "but there's infinitely\nmany strings, and so that's not going\nto be good if we're trying to be a decider. ",
    "start": "2731480",
    "end": "2740589"
  },
  {
    "text": "So that's why we don't\njust try all strings.",
    "start": "2740590",
    "end": "2746380"
  },
  {
    "text": "But here's this\nother question here. This is a-- OK.",
    "start": "2746380",
    "end": "2751650"
  },
  {
    "text": "So the question is, how\ndo we find the input x?",
    "start": "2751650",
    "end": "2761690"
  },
  {
    "text": "So this is an important\nquestion because we",
    "start": "2761690",
    "end": "2766880"
  },
  {
    "text": "don't find the input x. There's no-- the input x, at\nleast the accepted input x,",
    "start": "2766880",
    "end": "2774859"
  },
  {
    "text": "would be the accepting\ncomputation history for M on w.",
    "start": "2774860",
    "end": "2780930"
  },
  {
    "text": "We're never going to find an-- we're never going to find an x. We're building this LBA.",
    "start": "2780930",
    "end": "2789390"
  },
  {
    "text": "We're never going\nto run that LBA. We're designing that LBA not\nfor the purposes of running it.",
    "start": "2789390",
    "end": "2796010"
  },
  {
    "text": "We're building that LBA only\nfor the purpose of using the LBA",
    "start": "2796010",
    "end": "2802670"
  },
  {
    "text": "language emptiness tester. We're going to build\nthat LBA and feed it into the Turing machine R,\nwhich is going to tell us",
    "start": "2802670",
    "end": "2810500"
  },
  {
    "text": "whether that LBA's\nlanguage is empty. We, ourselves, is never\ngoing to run that machine. We're never going to\ncome up with an x.",
    "start": "2810500",
    "end": "2817430"
  },
  {
    "text": "We're just having-- we are\ndesigning a computation checker.",
    "start": "2817430",
    "end": "2824650"
  },
  {
    "text": "And then the emptiness\ntester for that",
    "start": "2824650",
    "end": "2829770"
  },
  {
    "text": "that we assume to exist\nfor ELBA is going to say,",
    "start": "2829770",
    "end": "2836710"
  },
  {
    "text": "yes, there is some computation\nwhich this machine accepts, or no, there is no computation\nwhich this machine accepts,",
    "start": "2836710",
    "end": "2843609"
  },
  {
    "text": "and that's going to be a\ncomputation for M on w. And so that's going to tell\nus whether or not M accepts w.",
    "start": "2843610",
    "end": "2850900"
  },
  {
    "text": "So we're never going to\nactually be finding an x. We're never going to\nbe running that LBA.",
    "start": "2850900",
    "end": "2856010"
  },
  {
    "text": "We're just feeding, using\nthat LBA as an input to R.",
    "start": "2856010",
    "end": "2866940"
  },
  {
    "text": "Does the computation history\nmethod always use LBAs? No, as you will see\nright after the break.",
    "start": "2866940",
    "end": "2873940"
  },
  {
    "text": "Because the LBAs is just\nkind of an easy place to get started, but we're going to use\nthe computation history method",
    "start": "2873940",
    "end": "2880870"
  },
  {
    "text": "and computation histories next\non the post correspondence problem. ",
    "start": "2880870",
    "end": "2887060"
  },
  {
    "text": "Yes. The computation\nhistories and the input x are always going to be finite.",
    "start": "2887060",
    "end": "2892770"
  },
  {
    "text": "So that was an\nanswer to a question about whether these\nhistories or the inputs are going to be finite or not.",
    "start": "2892770",
    "end": "2898230"
  },
  {
    "text": "So those strings are\nalways going to be finite, and the computation history\nis going to be finite.",
    "start": "2898230",
    "end": "2905640"
  },
  {
    "text": "So we are at the end\nof our five minutes. Let me just see if there\nwas another question I",
    "start": "2905640",
    "end": "2910760"
  },
  {
    "text": "wanted to answer. ",
    "start": "2910760",
    "end": "2917320"
  },
  {
    "text": "Let's move on. OK, now coming back to the\nundecidability of this post",
    "start": "2917320",
    "end": "2922900"
  },
  {
    "text": "correspondence problem. So remember the post\ncorrespon-- this problem, you're given those dominoes.",
    "start": "2922900",
    "end": "2928570"
  },
  {
    "text": "You want to know\nif there's a match. Here is a little mini\nversion of the diagram, if that helps you remember it.",
    "start": "2928570",
    "end": "2935619"
  },
  {
    "text": "And we're going to prove that\nthis language is undecidable.",
    "start": "2935620",
    "end": "2940940"
  },
  {
    "text": "And so it's undecidable to test\nwhether you have a match, given",
    "start": "2940940",
    "end": "2951060"
  },
  {
    "text": "a set of dominoes, whether\na match is possible. And we're going to\nuse-- we're going",
    "start": "2951060",
    "end": "2956190"
  },
  {
    "text": "to reduce ATM to this language\nusing the computation history method. So how in the world are\nwe going to do that?",
    "start": "2956190",
    "end": "2963940"
  },
  {
    "text": "First of all, there's a little\ndetail here I want to mention. Just don't focus\non this, but I'm",
    "start": "2963940",
    "end": "2973790"
  },
  {
    "text": "going to assume the\nmatches always start with the very first domino\non the list, the very",
    "start": "2973790",
    "end": "2980480"
  },
  {
    "text": "first domino in the collection. So there's going to be,\nlike, a starting domino. Just going to make my\nproof a little simpler",
    "start": "2980480",
    "end": "2987230"
  },
  {
    "text": "to do it that way, and then you\ncan fix that assumption later. And if we have time\nat the end, I'll",
    "start": "2987230",
    "end": "2992360"
  },
  {
    "text": "do that or maybe after\nthe lecture is over. If there are questions,\nI can show you how to fix that assumption.",
    "start": "2992360",
    "end": "2997740"
  },
  {
    "text": "But for now, to\nsimplify the proof, we're going to assume that\nthere was a starting domino,",
    "start": "2997740",
    "end": "3003988"
  },
  {
    "text": "that the matches\nalways have to start with that particular domino. ",
    "start": "3003988",
    "end": "3009365"
  },
  {
    "text": "If you didn't follow\nthat point, don't worry. You can just ignore it. You'll see where\nit comes up later.",
    "start": "3009365",
    "end": "3014390"
  },
  {
    "text": "So now we're going to\nreduce ATM to the PCP. So assuming we have a\nmachine that decides the PCP,",
    "start": "3014390",
    "end": "3021463"
  },
  {
    "text": "we're going to use that\nto make a machine that decides the ATM as before. So here is the Turing machine\nS, which is going to decide ATM.",
    "start": "3021463",
    "end": "3031600"
  },
  {
    "text": "And the way we're going\nto do it is like this. We're given M and w.",
    "start": "3031600",
    "end": "3037730"
  },
  {
    "text": "We want to know, as\nalways, does M accept w?",
    "start": "3037730",
    "end": "3043800"
  },
  {
    "text": "What we're going to do\nis we're going to build an instance of the PCP problem.",
    "start": "3043800",
    "end": "3050120"
  },
  {
    "text": "So we're going to build\na collection of dominoes",
    "start": "3050120",
    "end": "3056210"
  },
  {
    "text": "which are going to-- and that collection is going\nto be built knowing M and w.",
    "start": "3056210",
    "end": "3062150"
  },
  {
    "text": "So that's going to affect the\ndominoes we're going to create. So this collection of dominoes\nis going to be called P of Mw.",
    "start": "3062150",
    "end": "3069350"
  },
  {
    "text": "Depends on an M and w. And finding a match\nfor this set of ws",
    "start": "3069350",
    "end": "3076700"
  },
  {
    "text": "is going to force you\nto simulate M on w because the match is going to\ncorrespond to a computation",
    "start": "3076700",
    "end": "3083150"
  },
  {
    "text": "history for M on w. So we're going to use--",
    "start": "3083150",
    "end": "3089329"
  },
  {
    "text": "once we do that, once we build\nthe set of dominoes where",
    "start": "3089330",
    "end": "3095990"
  },
  {
    "text": "a match corresponds to\na computation history, we're going to use R to\ndetermine whether or not",
    "start": "3095990",
    "end": "3103099"
  },
  {
    "text": "there is a match. Or in other words,\nwhether or not there is a computation\nhistory, which",
    "start": "3103100",
    "end": "3108589"
  },
  {
    "text": "is whether or not M accepts w. So if there is a\nmatch, we're going",
    "start": "3108590",
    "end": "3114400"
  },
  {
    "text": "to accept because\nwe know M accepts w. And if there is no\nmatch, we're going",
    "start": "3114400",
    "end": "3119920"
  },
  {
    "text": "to reject because we\nknow M does not accept w.",
    "start": "3119920",
    "end": "3124980"
  },
  {
    "text": "OK. This is the plan. I haven't told you\nhow to do this yet. ",
    "start": "3124980",
    "end": "3132670"
  },
  {
    "text": "I mean, I'm worried about\nthe significant number of you who are feeling\nconfused by the method.",
    "start": "3132670",
    "end": "3140319"
  },
  {
    "text": "I mean, you guys should\nbe texting me and the TAs to try to at least get a\nsense of how this is working.",
    "start": "3140320",
    "end": "3147730"
  },
  {
    "text": "I mean, we're\ngoing to be going-- we're going to be\ndoing the method again.",
    "start": "3147730",
    "end": "3153002"
  },
  {
    "text": "It's just going to be a\nlittle more complicated because we have to also deal\nwith these dominoes and all",
    "start": "3153002",
    "end": "3158349"
  },
  {
    "text": "that stuff, and that's\nwhy I presented it to you the first time in\nthe setting of the LBAs,",
    "start": "3158350",
    "end": "3164050"
  },
  {
    "text": "which were, in a sense, the\nmethod comes out perhaps more simply. ",
    "start": "3164050",
    "end": "3175740"
  },
  {
    "text": "So a match is\ngoing to correspond to an accepting\ncomputation history.",
    "start": "3175740",
    "end": "3181550"
  },
  {
    "text": "Sometimes if I don't\nuse the word accepting,",
    "start": "3181550",
    "end": "3186730"
  },
  {
    "text": "I'm just being a little sloppy. Computation history\nand accepting computation history, for us\nright now, they're the same.",
    "start": "3186730",
    "end": "3194570"
  },
  {
    "text": "I mean, later on,\nwe may actually talk about rejecting\ncomputation histories, but let's not get\nourselves confused.",
    "start": "3194570",
    "end": "3202790"
  },
  {
    "text": "Computation\nhistories always have to end with the\nmachine accepting.",
    "start": "3202790",
    "end": "3209670"
  },
  {
    "text": "OK. Somebody's asking, what\ndoes it mean for match to correspond to a\ncomputation history?",
    "start": "3209670",
    "end": "3215190"
  },
  {
    "text": "You'll see. That's going to be\non my next slide. ",
    "start": "3215190",
    "end": "3222260"
  },
  {
    "text": "Oh. So this is a good question. Is my step two trying\nto use R to determine",
    "start": "3222260",
    "end": "3228970"
  },
  {
    "text": "whether M accepts w? Well, yes, but I'm doing that by\ntesting whether these dominoes",
    "start": "3228970",
    "end": "3235809"
  },
  {
    "text": "have a match. Because R decides PCP.",
    "start": "3235810",
    "end": "3240880"
  },
  {
    "text": "I can only use R to test\nwhether things have a match. Someone asks, should\nstep two be to use R",
    "start": "3240880",
    "end": "3248910"
  },
  {
    "text": "to determine\nwhether M accepts w? Well, in effect,\nthat's what it's doing, but it's doing indirectly\nthrough testing",
    "start": "3248910",
    "end": "3256799"
  },
  {
    "text": "whether this PCP-- whether these\ndominoes have a match. Because those dominoes\nare going to force you",
    "start": "3256800",
    "end": "3263665"
  },
  {
    "text": "to simulate M on w. OK, I think I'm\nrepeating myself here, so let's avoid getting\ninto a loop on the lecture",
    "start": "3263665",
    "end": "3270190"
  },
  {
    "text": "and see how we\nactually build P of Mw. So now you understand\nwhat-- you have",
    "start": "3270190",
    "end": "3276700"
  },
  {
    "text": "to have the plan in your mind. ",
    "start": "3276700",
    "end": "3281910"
  },
  {
    "text": "We are given M and w. We're trying to make\na set of dominoes",
    "start": "3281910",
    "end": "3287940"
  },
  {
    "text": "where a match is going to be a\ncomputation history for M on w.",
    "start": "3287940",
    "end": "3293160"
  },
  {
    "text": "So the string\nyou're going to get in that match, the top\nstring and the bottom string, which are going to be--",
    "start": "3293160",
    "end": "3299130"
  },
  {
    "text": "have to match, they're going\nto be computation histories-- they're going to be a\ncomputation history of M on w.",
    "start": "3299130",
    "end": "3306869"
  },
  {
    "text": "So I want to figure out how to\nmake my dominoes force that. ",
    "start": "3306870",
    "end": "3313089"
  },
  {
    "text": "OK. So my starting\ndomino, as I told you, there's going to be a\nspecial starting domino in my collection, which is\ngoing to require the match",
    "start": "3313090",
    "end": "3320290"
  },
  {
    "text": "to start with that domino. It's going to be this one here. It's going to have\nthese two strings in it.",
    "start": "3320290",
    "end": "3326707"
  },
  {
    "text": "And you can see\nalready, it's starting to look like a\ncomputation history. The dominoes are going\nto have that feature.",
    "start": "3326707",
    "end": "3334720"
  },
  {
    "text": "So it's the pair of\nstrings, and I've written it kind of to help you\nsee what's kind of going on.",
    "start": "3334720",
    "end": "3342300"
  },
  {
    "text": "It's a pound sign on the top\nand the starting configuration",
    "start": "3342300",
    "end": "3347850"
  },
  {
    "text": "for M on w on the bottom. ",
    "start": "3347850",
    "end": "3353020"
  },
  {
    "text": "And what I'm going\nto do for you here is at the bottom\nof the slide, I'm",
    "start": "3353020",
    "end": "3358830"
  },
  {
    "text": "going to take the dominoes\nI've written down so far and try to be building\na match, and you'll",
    "start": "3358830",
    "end": "3364380"
  },
  {
    "text": "see how that match is forcing\na simulation of the machine. So let's take this\nas an illustration.",
    "start": "3364380",
    "end": "3371119"
  },
  {
    "text": "Let's assume the input to M,\nso I'm running M on w now. I'm trying to see,\ndoes M accept w?",
    "start": "3371120",
    "end": "3378260"
  },
  {
    "text": "w is a string 223. So the start\nconfiguration for M on w",
    "start": "3378260",
    "end": "3386700"
  },
  {
    "text": "is q0, that's the\nstarting state for M, and then w following it is 223.",
    "start": "3386700",
    "end": "3393510"
  },
  {
    "text": "That's what is going to appear\non the tape of the Turing machine to start off. So this is the start\nconfiguration for M on w,",
    "start": "3393510",
    "end": "3404690"
  },
  {
    "text": "assuming that I had this\nparticular input string to w. And so given the\ndominoes that I've",
    "start": "3404690",
    "end": "3413640"
  },
  {
    "text": "given you so far,\njust one, this is how the match is going to start.",
    "start": "3413640",
    "end": "3420950"
  },
  {
    "text": "Now, there's going to\nbe more dominoes coming. So for every possible\ntape symbol and state,",
    "start": "3420950",
    "end": "3427640"
  },
  {
    "text": "don't get confused\nby the language here, this is the\nimportant thing. If in the Turing machine--",
    "start": "3427640",
    "end": "3435730"
  },
  {
    "text": "and I'll just read\nthis in English to you. If the Turing machine, when\nit's in state q, and the head",
    "start": "3435730",
    "end": "3442180"
  },
  {
    "text": "is reading an a, it\nmoves to state R,",
    "start": "3442180",
    "end": "3447740"
  },
  {
    "text": "writes a b at that point, and\nits head moves to the right.",
    "start": "3447740",
    "end": "3454310"
  },
  {
    "text": "I'm focusing on rightward moving\nTuring machine steps right now.",
    "start": "3454310",
    "end": "3461990"
  },
  {
    "text": "But for every possible\nstate and tape symbol",
    "start": "3461990",
    "end": "3469220"
  },
  {
    "text": "and looking at what\nhappens, I'm going to have a domino that's going\nto capture this information,",
    "start": "3469220",
    "end": "3477110"
  },
  {
    "text": "and it's going to\nbe this domino here. q a on top, b r on the bottom.",
    "start": "3477110",
    "end": "3484400"
  },
  {
    "text": "So just a string. q a on\nthe top, b r on the bottom. So let's see why?",
    "start": "3484400",
    "end": "3489485"
  },
  {
    "text": "Well, that's sort\nof arcane-looking. Why is that a good\nthing to-- why is that a useful\ndomino to put in here?",
    "start": "3489485",
    "end": "3496140"
  },
  {
    "text": "Well, if you take a look,\nlet's assume my Turing machine,",
    "start": "3496140",
    "end": "3503609"
  },
  {
    "text": "when it's in state q0,\nwhich is the starting state, and the head is\nreading a 2, which",
    "start": "3503610",
    "end": "3509039"
  },
  {
    "text": "it will happen to be reading\nbecause the string w starts",
    "start": "3509040",
    "end": "3514050"
  },
  {
    "text": "with a 2, if it\ngoes into state q7 and writes a 4 and then moves\nright, I'm going to have--",
    "start": "3514050",
    "end": "3523089"
  },
  {
    "text": "in this domino, I'm\ngoing to have q02 on top and 4q7 on the\nbottom because 4 is what I--",
    "start": "3523090",
    "end": "3535730"
  },
  {
    "text": "right here, that's the\nb, and the new state that I'm going into is q7.",
    "start": "3535730",
    "end": "3541830"
  },
  {
    "text": "So that's going to be the\ndomino that I'm going to get. And here it is.",
    "start": "3541830",
    "end": "3546930"
  },
  {
    "text": "Here's that domino\nappearing in the match. ",
    "start": "3546930",
    "end": "3552160"
  },
  {
    "text": "So it's going to\nmatch up with q02,",
    "start": "3552160",
    "end": "3560770"
  },
  {
    "text": "which don't get the--\nthe top string has to equal the bottom string.",
    "start": "3560770",
    "end": "3565990"
  },
  {
    "text": "So and this is going to\nbe the only choice that I have for extending the match.",
    "start": "3565990",
    "end": "3571900"
  },
  {
    "text": "So q02 is going to be on the\ntop when I put that there,",
    "start": "3571900",
    "end": "3577150"
  },
  {
    "text": "but that's going to force\n4Q7 to appear at the bottom because that's what's going\nto be the bottom string",
    "start": "3577150",
    "end": "3584560"
  },
  {
    "text": "corresponding to\nthe q02 on the top. OK? So if you're looking\ndown here, this",
    "start": "3584560",
    "end": "3592619"
  },
  {
    "text": "is the beginning of the second\nconfiguration of the machine. That's what I want\nto be happening.",
    "start": "3592620",
    "end": "3599390"
  },
  {
    "text": "I want to be-- that match should look\nlike a computation history. ",
    "start": "3599390",
    "end": "3608030"
  },
  {
    "text": "So this is going to be-- all\npossible right moves are going to be handled in this way,\nand it's going to be a similar process for the left\nmoves, but let me not--",
    "start": "3608030",
    "end": "3615410"
  },
  {
    "text": "I'll leave that to\nyour imagination. Now, how do I continue\non from there?",
    "start": "3615410",
    "end": "3624089"
  },
  {
    "text": "What does the rest of this\nconfiguration look like? Well, that should just be a\ncopying over of the remaining",
    "start": "3624090",
    "end": "3631039"
  },
  {
    "text": "symbols that were on the tape\nbecause they don't change. Things only change\naround the head.",
    "start": "3631040",
    "end": "3636740"
  },
  {
    "text": "The rest of those symbols,\nwhich is the 2 and the 3, those should just get\ncopied over here. So I'm going to have\ntwo additional--",
    "start": "3636740",
    "end": "3643760"
  },
  {
    "text": "I'm going to have\nadditional symbols in my-- dominoes in my collection.",
    "start": "3643760",
    "end": "3649829"
  },
  {
    "text": "So for every tape symbol, I'm\ngoing to have aa be a domino.",
    "start": "3649830",
    "end": "3659480"
  },
  {
    "text": "So for every tape\nsymbol a, I'm going to have aa be a domino\nin my collection.",
    "start": "3659480",
    "end": "3665050"
  },
  {
    "text": "And so that says I can have-- so there's going\nto be a 2 2 domino.",
    "start": "3665050",
    "end": "3671640"
  },
  {
    "text": "So I can match up\nthis 2 over here, but that forces me to\nput a 2 down over there. There's also going to\nbe a 3 3 domino, which",
    "start": "3671640",
    "end": "3678990"
  },
  {
    "text": "is going to match\nup with that 3, but it's going to force me\nto put a 3 down over there. That's the only way I can extend\nthis match that I built so far.",
    "start": "3678990",
    "end": "3689600"
  },
  {
    "text": "I have no choice. Those are the only dominoes\nthat I'm going to be given.",
    "start": "3689600",
    "end": "3696680"
  },
  {
    "text": "And so doing, I'm forcing you to\nbasically simulate the machine. Now, what I want\nto have happen next",
    "start": "3696680",
    "end": "3703130"
  },
  {
    "text": "is a pound sign to appear\nhere, and that will conclude my second configuration.",
    "start": "3703130",
    "end": "3708540"
  },
  {
    "text": "So there's going to be a pound\nsign pound sign domino as well because there's a\npound sign here.",
    "start": "3708540",
    "end": "3714170"
  },
  {
    "text": "It's going to get matched\nwith the pound sign up top. Forces a pound sign to\ncome down on the bottom.",
    "start": "3714170",
    "end": "3720677"
  },
  {
    "text": "And if you look at the\nway we are right now, we're exactly like where\nwe were at the beginning when we had just this\nfirst domino appearing.",
    "start": "3720677",
    "end": "3727400"
  },
  {
    "text": "But now we're one\nconfiguration later. So if you understood that,\nand I admit that it's--",
    "start": "3727400",
    "end": "3737910"
  },
  {
    "text": "there's just one idea here.  And once you get the\nidea, it's all trivial.",
    "start": "3737910",
    "end": "3745630"
  },
  {
    "text": "It's all very simple. But there's just you\nhave to get that idea. I'm trying to figure out how to\nget that idea into your head.",
    "start": "3745630",
    "end": "3751560"
  },
  {
    "text": "Once you get the idea, you can\nwrite all this stuff yourself. ",
    "start": "3751560",
    "end": "3758960"
  },
  {
    "text": "So following this description\nof how the transition",
    "start": "3758960",
    "end": "3765950"
  },
  {
    "text": "function of the machine\nworks and copying over the symbols from the tape\nto the next configuration,",
    "start": "3765950",
    "end": "3773360"
  },
  {
    "text": "I'm going to be able\nto get configuration after configuration going\nuntil I get to a point",
    "start": "3773360",
    "end": "3779592"
  },
  {
    "text": "when there's an accept.  And now, from the machine's\nperspective, we're done.",
    "start": "3779592",
    "end": "3787300"
  },
  {
    "text": "The machine has\naccepted its input. This is our computation history. But is it a match? ",
    "start": "3787300",
    "end": "3797900"
  },
  {
    "text": "Well, up until--\nthis bottom thing is the computation history,\nbut it's not a match",
    "start": "3797900",
    "end": "3804440"
  },
  {
    "text": "because the top doesn't\nequal the bottom. There's still extra stuff at\nthe bottom, which the top,",
    "start": "3804440",
    "end": "3812000"
  },
  {
    "text": "it doesn't have. So what I'm going\nto need to do now is add some additional kind\nof pseudo steps of the machine",
    "start": "3812000",
    "end": "3822480"
  },
  {
    "text": "where I'm going to allow the\ntop to catch up to the bottom. And the way I'm going to\nbe thinking about that,",
    "start": "3822480",
    "end": "3829510"
  },
  {
    "text": "and this is not real\nfor a Turing machine as much as the Turing\nmachine is real anyway, but you're going to imagine I'm\ngoing to add a new kind of move",
    "start": "3829510",
    "end": "3838270"
  },
  {
    "text": "to the machine which is\ngoing to allow the head to eat the symbols off\nthe tape like Pac-Man.",
    "start": "3838270",
    "end": "3845910"
  },
  {
    "text": "OK? And the way I'm going to\nget that effect, on the top,",
    "start": "3845910",
    "end": "3851930"
  },
  {
    "text": "if I have any tape\nsymbol next to a qaccept on either side on the top, what\nI'm going to get you to write",
    "start": "3851930",
    "end": "3859780"
  },
  {
    "text": "on the bottom is just\nqaccept with that tas-- with that tape symbol gone.",
    "start": "3859780",
    "end": "3865320"
  },
  {
    "text": "And by repeating\nthat move after move, the actual tape is\ngoing to be shrinking.",
    "start": "3865320",
    "end": "3872255"
  },
  {
    "text": "The symbols on\nthe tape are going to be going down one\nby one, move by move, until there's nothing left\nexcept just the qaccept",
    "start": "3872255",
    "end": "3880769"
  },
  {
    "text": "all by itself. OK? So I have this sort\nof Pac-Man idea. I'll be eating the\nsymbols on the tape.",
    "start": "3880770",
    "end": "3888050"
  },
  {
    "text": "And then finally,\nI get to a point when there's just the\nqaccept alone on the tape.",
    "start": "3888050",
    "end": "3895220"
  },
  {
    "text": "There's no symbols\nleft to consume. And then I'm going to\nadd one last domino here,",
    "start": "3895220",
    "end": "3900250"
  },
  {
    "text": "which is qaccept\npound pound matching with just pound, which just\nconveniently finishes off",
    "start": "3900250",
    "end": "3912344"
  },
  {
    "text": "the match. And so the match is completed. This is actually a\nlittle detailed here.",
    "start": "3912344",
    "end": "3918340"
  },
  {
    "text": "I hesitate even to\nbring it up because I think it's the\nkind of thing where if you understand\neverything up to this point,",
    "start": "3918340",
    "end": "3925000"
  },
  {
    "text": "you could fill it in yourself. But just for\ncompleteness' sake, you have to deal with the situation\nwhen the head of the Turing",
    "start": "3925000",
    "end": "3935950"
  },
  {
    "text": "machine might move\ninto the blank portion of the tape, which is not\ntaken into account here.",
    "start": "3935950",
    "end": "3942080"
  },
  {
    "text": "And the way we get that effect\nis by having another domino here, which allows me to add\nblank symbols at the bottom as",
    "start": "3942080",
    "end": "3949630"
  },
  {
    "text": "needed. That's just a detail. I'm more worried\nthat you understand",
    "start": "3949630",
    "end": "3955760"
  },
  {
    "text": "the underlying concept. So here is going\nto be a check-in.",
    "start": "3955760",
    "end": "3964730"
  },
  {
    "text": "I'm trying to remember-- ",
    "start": "3964730",
    "end": "3969850"
  },
  {
    "text": "OK. But so OK. So what else can we conclude\nfrom this information?",
    "start": "3969850",
    "end": "3978150"
  },
  {
    "text": "So we know-- at this point, we\nknow that PCP is undecidable. That's what we just\nfinished proving.",
    "start": "3978150",
    "end": "3984200"
  },
  {
    "text": "What else do we\nknow, if anything? Or do we even know that?",
    "start": "3984200",
    "end": "3989731"
  },
  {
    "text": "Let's see. My picture is a little\nbit covering the check-in, but it's still readable. ",
    "start": "3989731",
    "end": "4002800"
  },
  {
    "text": "So I mean, this is not an\neasy concept to get the idea. But once you get it, you'll\nsee it's not that bad.",
    "start": "4002800",
    "end": "4013350"
  },
  {
    "text": " OK. Another 15 seconds.",
    "start": "4013350",
    "end": "4018510"
  },
  {
    "start": "4018510",
    "end": "4025700"
  },
  {
    "text": "So this portion-- this\nquestion is not really relying so much on the\ncomputation history method.",
    "start": "4025700",
    "end": "4031540"
  },
  {
    "text": "It's just relying on the fact\nabout PCP being undecidable.",
    "start": "4031540",
    "end": "4037030"
  },
  {
    "text": " OK. Everybody almost done?",
    "start": "4037030",
    "end": "4044540"
  },
  {
    "text": "Five seconds. All right. ",
    "start": "4044540",
    "end": "4051940"
  },
  {
    "text": "So I can see that there is\nsome level of confusion. ",
    "start": "4051940",
    "end": "4059730"
  },
  {
    "text": "So the reason why\nB is correct is",
    "start": "4059730",
    "end": "4066330"
  },
  {
    "text": "that we know PCP is\nundecidable, but we also",
    "start": "4066330",
    "end": "4072360"
  },
  {
    "text": "know that it's recognizable\nbecause you could try all possible\nways of combining",
    "start": "4072360",
    "end": "4078569"
  },
  {
    "text": "dominoes and one after the\nnext, except if you ever",
    "start": "4078570",
    "end": "4084780"
  },
  {
    "text": "find a match. So that might go forever. But if there is a\nmatch of a possible,",
    "start": "4084780",
    "end": "4090800"
  },
  {
    "text": "you'll find it eventually. So PCP is a\nrecognizable language. Undecidable.",
    "start": "4090800",
    "end": "4096873"
  },
  {
    "text": "And so therefore, we\nknow its complement has to be unrecognizable\nbecause that's something we've shown before.",
    "start": "4096873",
    "end": "4103470"
  },
  {
    "text": "If a language and its complement\nare both recognizable, then it's decidable, but we\nknow PCP is not decidable, so both sides can't\nbe recognizable.",
    "start": "4103470",
    "end": "4111960"
  },
  {
    "text": "OK. So let me prove to\nyou one last theorem",
    "start": "4111960",
    "end": "4118870"
  },
  {
    "text": "that's going to be useful\nfor your homework involving the computation history method.",
    "start": "4118870",
    "end": "4124430"
  },
  {
    "text": "So you'll have one\nlast chance to get the way we're going to\nuse this, though this one",
    "start": "4124430",
    "end": "4130778"
  },
  {
    "text": "is going to be a little bit more\nsimilar in spirit to the LBA version than to the\nPCP version, which",
    "start": "4130779",
    "end": "4138250"
  },
  {
    "text": "has this extra kind\nof complication about coding the computations\nof the machine into dominoes.",
    "start": "4138250",
    "end": "4144670"
  },
  {
    "text": "Here, we're going to operate\nwith another automaton which",
    "start": "4144670",
    "end": "4149707"
  },
  {
    "text": "where it's going to be\nmore straightforward. But anyway, OK. Getting ahead of myself. So if you remember, for\ncontext-free grammars,",
    "start": "4149707",
    "end": "4158259"
  },
  {
    "text": "we had the ECFG problem,\nthe emptiness problem. We showed that was decidable.",
    "start": "4158260",
    "end": "4164979"
  },
  {
    "text": "So testing whether a\ncontext-free grammar's language is empty is decidable.",
    "start": "4164979",
    "end": "4170309"
  },
  {
    "text": "However, testing whether a\ncontext-free grammar's language is everything, whether\nit's equal to sigma star,",
    "start": "4170310",
    "end": "4178170"
  },
  {
    "text": "that turns out to be--  that turns out to\nbe undecidable.",
    "start": "4178170",
    "end": "4185589"
  },
  {
    "text": "OK? So emptiness testing for\ncontext-free grammars, decidable. Sigma star testing, undecidable.",
    "start": "4185590",
    "end": "4193526"
  },
  {
    "text": " OK. So we'll show that ATM\nis reducible to old PDA",
    "start": "4193527",
    "end": "4200980"
  },
  {
    "text": "via the computation\nhistory method. And so assume we\nhave same patterns.",
    "start": "4200980",
    "end": "4210770"
  },
  {
    "text": "Assume we have a\ndecider for all PDA and make a decider for old t-- decider for ATM.",
    "start": "4210770",
    "end": "4217990"
  },
  {
    "text": "Here's the ATM decider. And now, similar to what\nwe did for the LBA case,",
    "start": "4217990",
    "end": "4226510"
  },
  {
    "text": "but with a twist. We're going to make a\npushdown automaton that's",
    "start": "4226510",
    "end": "4233000"
  },
  {
    "text": "going to check its input\nto see whether it's an accepting computation\nhistory of M on w.",
    "start": "4233000",
    "end": "4238220"
  },
  {
    "text": "Just like the LBA did, if you\nthink back to how that worked. Remember, the LBA\ntested its input",
    "start": "4238220",
    "end": "4246469"
  },
  {
    "text": "to see whether it's an\naccepted computation history. Accepted if it did,\nand then we test",
    "start": "4246470",
    "end": "4252320"
  },
  {
    "text": "the LBA's language for\nemptiness to see if there are any computation histories. So we're doing the\nsame kind of thing,",
    "start": "4252320",
    "end": "4258680"
  },
  {
    "text": "except now, the PDA is\ngoing to test its input to see whether it's an\naccepting computation history,",
    "start": "4258680",
    "end": "4266380"
  },
  {
    "text": "and if it is, it's\ngoing to reject. It's going to do the\nreverse of what the LBA did.",
    "start": "4266380",
    "end": "4275600"
  },
  {
    "text": "And that's going to turn\nout to be necessary. But for the moment,\nlet's just go with it, and maybe we'll see it in the\nproof, why the proof needs",
    "start": "4275600",
    "end": "4283670"
  },
  {
    "text": "it to be this way. So this pushdown\nautomaton is going to accept its input if\nit's not in accepting",
    "start": "4283670",
    "end": "4292040"
  },
  {
    "text": "computation history for M on w. Otherwise, it will accept. So you can think of this\nPDA as accepting all junk.",
    "start": "4292040",
    "end": "4299989"
  },
  {
    "text": "It just doesn't\naccept the good stuff,",
    "start": "4299990",
    "end": "4305110"
  },
  {
    "text": "the accepting\ncomputation history. OK? It's accepting all\nthe things which",
    "start": "4305110",
    "end": "4312050"
  },
  {
    "text": "fail to be an accepting\ncomputation history. OK? And then once we have that,\nwe test whether R's language",
    "start": "4312050",
    "end": "4320630"
  },
  {
    "text": "is everything, whether BMw's\nlanguage is everything using R.",
    "start": "4320630",
    "end": "4326290"
  },
  {
    "text": "Because if that PDA's\nlanguage is everything,",
    "start": "4326290",
    "end": "4332080"
  },
  {
    "text": "then we know there could not\nbe an accepting computation",
    "start": "4332080",
    "end": "4337810"
  },
  {
    "text": "history because that's the one\nthing that gets not accepted.",
    "start": "4337810",
    "end": "4347560"
  },
  {
    "text": "That's the one thing\nthat gets rejected. So if it's accepting\neverything, there is not going to be an\naccepting computation history.",
    "start": "4347560",
    "end": "4354940"
  },
  {
    "text": "So if there is no-- if this is equal to\nsigma star, then there couldn't be an accepting\ncomputation history,",
    "start": "4354940",
    "end": "4361790"
  },
  {
    "text": "and so we're going to accept. OK. So how is this going to work? So what's different now about\nthis case from the LBA case",
    "start": "4361790",
    "end": "4372390"
  },
  {
    "text": "is remember, the LBA got\nthe computation history",
    "start": "4372390",
    "end": "4379170"
  },
  {
    "text": "on its input, and\nit used its ability to write on the tape to\ncheck that each configuration",
    "start": "4379170",
    "end": "4386370"
  },
  {
    "text": "followed the next one. We don't have the ability to\nwrite on the tape in a pushdown",
    "start": "4386370",
    "end": "4391420"
  },
  {
    "text": "automaton. And by the way,\nI hope you're all comfortable with my using\nPDAs instead of grammars",
    "start": "4391420",
    "end": "4396570"
  },
  {
    "text": "because we can interchange\none to the other. Should have mentioned\nthat when I did it. But so the PDA is going\nto be using its stack",
    "start": "4396570",
    "end": "4406980"
  },
  {
    "text": "to compare each configuration\nwith the next one, OK? So the way that's going\nto happen is it's going",
    "start": "4406980",
    "end": "4413820"
  },
  {
    "text": "to non-deterministically\ntake one of these-- so the very first thing\nit does is, as before, it",
    "start": "4413820",
    "end": "4420810"
  },
  {
    "text": "checks to make sure that\nthe beginning of the input is the start configuration.",
    "start": "4420810",
    "end": "4426150"
  },
  {
    "text": "But then once that's--\nthat's the easy part. But once we get going with that,\nwe push each configuration--",
    "start": "4426150",
    "end": "4433350"
  },
  {
    "text": "well, first of all, we\nnon-deterministically choose which\nconfiguration might be",
    "start": "4433350",
    "end": "4439199"
  },
  {
    "text": "the one that fails where one\nfails to go to the next one.",
    "start": "4439200",
    "end": "4445377"
  },
  {
    "text": "Because those are the ones\nwe're trying to accept, when there's a failure. ",
    "start": "4445377",
    "end": "4450673"
  },
  {
    "text": "So we're now determined to\nsimply look for the place that there's a failure. We push that onto the stack,\nand then we pop it off the stack",
    "start": "4450673",
    "end": "4459020"
  },
  {
    "text": "and compare it with\nthe next configuration. So that's how we're using\nthe stack instead of being",
    "start": "4459020",
    "end": "4465190"
  },
  {
    "text": "able to mark on the input. Now there's a-- so I'm kind of\ngoing to illustrate that here.",
    "start": "4465190",
    "end": "4470659"
  },
  {
    "text": "So as we're going to\nread this thing here, I'm going to put\nit onto the stack.",
    "start": "4470660",
    "end": "4475850"
  },
  {
    "text": "So this thing\nmoves over to here, and this input here\ngot put onto the stack.",
    "start": "4475850",
    "end": "4483290"
  },
  {
    "text": "q0, w1, w1, it's q0, w1, w2. You see that. That first configuration is\nnow sitting on the stack.",
    "start": "4483290",
    "end": "4489760"
  },
  {
    "text": "Now, as we're going\nto pop it off, we're going to match it with\nthe second configuration.",
    "start": "4489760",
    "end": "4495860"
  },
  {
    "text": "Now, if you're\nfollowing me, you'll realize that there's\na difficulty here because it's coming\nout in reverse.",
    "start": "4495860",
    "end": "4502940"
  },
  {
    "text": "It comes out in the reverse\norder that we put it in, and that's not what\nwe needed to do.",
    "start": "4502940",
    "end": "4508480"
  },
  {
    "text": "So what we're going\nto do here, and here's a little sort of a\ntwist, we're going to change the way we're\nwriting down computation",
    "start": "4508480",
    "end": "4515300"
  },
  {
    "text": "histories by making them-- by writing them-- reversing\nthe even-numbered ones.",
    "start": "4515300",
    "end": "4520512"
  },
  {
    "text": "So this one here is going to\nbe written down in reverse. ",
    "start": "4520512",
    "end": "4527910"
  },
  {
    "text": "And that's perfectly OK. We can write down\ncomputation histories in any way we want\nto meet our needs.",
    "start": "4527910",
    "end": "4535659"
  },
  {
    "text": "So we're going to reverse-- we're going to reverse\nthe alternate ones. And now, when we\npush one, it's going",
    "start": "4535660",
    "end": "4541230"
  },
  {
    "text": "to come off in the right order\nto compare with the next one. And so that's how\nthe procedure works.",
    "start": "4541230",
    "end": "4547080"
  },
  {
    "text": "OK? We're running a\nlittle short on time.",
    "start": "4547080",
    "end": "4552475"
  },
  {
    "text": "You need to be able-- let's see. So let me just go\nto a quick recap.",
    "start": "4552475",
    "end": "4560680"
  },
  {
    "text": "The computation\nhistory method is useful for showing the\nundecidability of problems when you're testing for\nthe existence of an object.",
    "start": "4560680",
    "end": "4568860"
  },
  {
    "text": "Each of those four cases\nthat we showed today involved in testing\nwhether something exists. So is there an integer\nsolution to the polynomial?",
    "start": "4568860",
    "end": "4577460"
  },
  {
    "text": "Is there some string\nin the language? Is there string that's\nnot in the language?",
    "start": "4577460",
    "end": "4582829"
  },
  {
    "text": "Or is there a match? So that's a typical case\nwhen this computation history",
    "start": "4582830",
    "end": "4590300"
  },
  {
    "text": "method comes up. And so as a quick review, these\nare the things we showed today.",
    "start": "4590300",
    "end": "4599890"
  },
  {
    "text": "OK, so why don't we-- we're just out of time. And so I'm going to\nlet you go, but I",
    "start": "4599890",
    "end": "4607929"
  },
  {
    "text": "will stick around for another\n5 minutes or 10 minutes. Happy to answer any\nquestions if you have them,",
    "start": "4607930",
    "end": "4615070"
  },
  {
    "text": "but that's officially\nthe end of the lecture. OK. So let me try to\nget to-- there's",
    "start": "4615070",
    "end": "4621849"
  },
  {
    "text": "a lot of questions in the chat. Don't forget, write\nto the TAs too. ",
    "start": "4621850",
    "end": "4635610"
  },
  {
    "text": "So if M does not accept w, what\nwill happen to the computation",
    "start": "4635610",
    "end": "4641010"
  },
  {
    "text": "history? So if M does not\naccept w, then there is no computation-- there is no\naccepting computation history.",
    "start": "4641010",
    "end": "4649725"
  },
  {
    "text": "That's the only kind of\ncompetition histories we're considering. So if M does not accept w, there\nis no accepting computation",
    "start": "4649725",
    "end": "4656300"
  },
  {
    "text": "history. There's no computation history. So I don't know what it\nmeans, what will happen to it. It just doesn't exist.",
    "start": "4656300",
    "end": "4664520"
  },
  {
    "text": "So I hope that's helpful. ",
    "start": "4664520",
    "end": "4672990"
  },
  {
    "text": "Don't we need to be able to add\nstates to the end of the tape? Hm. I don't know what that means.",
    "start": "4672990",
    "end": "4679650"
  },
  {
    "text": "Add states to the\nend of the tape. I don't under-- you'll have\nto repeat that one, sorry,",
    "start": "4679650",
    "end": "4685850"
  },
  {
    "text": "or explain that better. ",
    "start": "4685850",
    "end": "4691282"
  },
  {
    "text": "Ah. So this is a go-- this is\na very good question here. Where does the previous\nproof fail when",
    "start": "4691283",
    "end": "4698140"
  },
  {
    "text": "trying to reduce ATM to ECFG? It's got to fail because\nECFG is decidable.",
    "start": "4698140",
    "end": "4706930"
  },
  {
    "text": "So that's a very good question. Maybe we can just go back\nto that last slide here.",
    "start": "4706930",
    "end": "4712210"
  },
  {
    "text": " Because I was running\na little short on time, I didn't really\nfocus on why we have",
    "start": "4712210",
    "end": "4720080"
  },
  {
    "text": "to accept the non-computation\nhistory strings.",
    "start": "4720080",
    "end": "4727000"
  },
  {
    "text": "Why are we accepting\nall the junk strings and only rejecting\nthe strings which",
    "start": "4727000",
    "end": "4734900"
  },
  {
    "text": "are the computation histories? So we're looking for\nstrings that fail.",
    "start": "4734900",
    "end": "4741560"
  },
  {
    "text": "A string could fail\nbecause it starts wrong. It doesn't have the\nstart configuration.",
    "start": "4741560",
    "end": "4748150"
  },
  {
    "text": "Or it maybe doesn't end with\nthe accepting configuration. Or maybe one configuration\ndoesn't lead properly",
    "start": "4748150",
    "end": "4753699"
  },
  {
    "text": "to the next one. Any of those cases\nare a failure, and are going to be\na reason to accept.",
    "start": "4753700",
    "end": "4759175"
  },
  {
    "text": " The reason why we can\ndo that is because we're",
    "start": "4759175",
    "end": "4767720"
  },
  {
    "text": "taking advantage of the\npushdowns non-determinism. We don't know where the\nfailure might occur,",
    "start": "4767720",
    "end": "4777150"
  },
  {
    "text": "so we're going to\nnon-deterministically guess where that failure occurs. If we were going\nto flip this around",
    "start": "4777150",
    "end": "4783170"
  },
  {
    "text": "and say let's accept\nonly the good ones and reject everything\nelse, we would",
    "start": "4783170",
    "end": "4790450"
  },
  {
    "text": "have to test that\neach configuration led to the next one.",
    "start": "4790450",
    "end": "4795650"
  },
  {
    "text": "So we'd have to check them all. So if something fails, it\nonly has to fail in one place,",
    "start": "4795650",
    "end": "4801800"
  },
  {
    "text": "and then we can accept. If it's a good computation\nhistory, we have to--",
    "start": "4801800",
    "end": "4809780"
  },
  {
    "text": "it has to be good everywhere. And so the pushdown\nautomaton, really, if you're going to get\ndown to the nitty gritty,",
    "start": "4809780",
    "end": "4815880"
  },
  {
    "text": "the pushdown automaton can check\nthat this configuration leads to that configuration pushing on\nthe stack and then popping it.",
    "start": "4815880",
    "end": "4823540"
  },
  {
    "text": "But now, by the time\nyou get to here, you want to check that this\nsecond configuration leads to the third one.",
    "start": "4823540",
    "end": "4829869"
  },
  {
    "text": "You would need to push the\nsecond configuration onto the stack, but at this point,\nyou're already after the second",
    "start": "4829870",
    "end": "4836020"
  },
  {
    "text": "configuration, so we cannot\nback up and push the second one on the stack.",
    "start": "4836020",
    "end": "4841570"
  },
  {
    "text": "So the pushdown automaton\nis not able to check",
    "start": "4841570",
    "end": "4846630"
  },
  {
    "text": "in the positive sense that you\nhave a computation history. It's only able to--\nand accept them.",
    "start": "4846630",
    "end": "4851983"
  },
  {
    "text": "It's only to check\nin the negative sense that you don't have\na computation history",
    "start": "4851983",
    "end": "4857850"
  },
  {
    "text": "and accept all the\nones that fail. And that's just because it\nonly has to fail in one place.",
    "start": "4857850",
    "end": "4866510"
  },
  {
    "text": "I hope that helps. So that's why we couldn't flip\nthis around and make this proof",
    "start": "4866510",
    "end": "4872870"
  },
  {
    "text": "work for the emptiness\nproblem and only have to work for the everything\nproblem, the all problem.",
    "start": "4872870",
    "end": "4878000"
  },
  {
    "text": " All right. ",
    "start": "4878000",
    "end": "4884490"
  },
  {
    "text": "OK, so bye-bye everybody, and\nI will see you on Tuesday. ",
    "start": "4884490",
    "end": "4901000"
  }
]