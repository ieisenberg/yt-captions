[
  {
    "start": "0",
    "end": "830"
  },
  {
    "text": "PROFESSOR: We've mentioned\nthe P equals NP question",
    "start": "830",
    "end": "3830"
  },
  {
    "text": "a number of times now as\nthe most important question",
    "start": "3830",
    "end": "6865"
  },
  {
    "text": "in theoretical computer\nscience, and we've",
    "start": "6865",
    "end": "9160"
  },
  {
    "text": "said that one way to\nformulate it is exactly",
    "start": "9160",
    "end": "12134"
  },
  {
    "text": "to ask whether there's\nan efficient that",
    "start": "12134",
    "end": "13800"
  },
  {
    "text": "is polynomial-time procedure\nto test whether or not",
    "start": "13800",
    "end": "17640"
  },
  {
    "text": "a formula in propositional\nlogic is satisfiable.",
    "start": "17640",
    "end": "23529"
  },
  {
    "text": "Now, why is that such\nan important problem?",
    "start": "23530",
    "end": "25425"
  },
  {
    "start": "25425",
    "end": "27911"
  },
  {
    "text": "We're not just logicians and\nwe want to know whether or not",
    "start": "27912",
    "end": "30370"
  },
  {
    "text": "some formula is satisfiable.",
    "start": "30370",
    "end": "31770"
  },
  {
    "text": "How did it take on this\nenormous importance",
    "start": "31770",
    "end": "34990"
  },
  {
    "text": "and apply to so many fields?",
    "start": "34990",
    "end": "36520"
  },
  {
    "text": "And illustrating how you could\nuse a satisfiability tester",
    "start": "36520",
    "end": "40460"
  },
  {
    "text": "to factor efficiently\nis a good hint",
    "start": "40460",
    "end": "43920"
  },
  {
    "text": "about why it is that all\nsorts of things reduce to SAT",
    "start": "43920",
    "end": "47109"
  },
  {
    "text": "and why it, in fact, is such\na centrally important problem.",
    "start": "47110",
    "end": "50540"
  },
  {
    "text": "So let's suppose that we\nhave a satisfiability tester",
    "start": "50540",
    "end": "54010"
  },
  {
    "text": "and use it to find how\nto factor a number n.",
    "start": "54010",
    "end": "59670"
  },
  {
    "text": "Now, the observation\nbegins with how",
    "start": "59670",
    "end": "61850"
  },
  {
    "text": "you use a SAT solver\nis that you can begin",
    "start": "61850",
    "end": "65459"
  },
  {
    "text": "by writing or observing\nthat it's easy enough",
    "start": "65459",
    "end": "68430"
  },
  {
    "text": "to design a digital\ncircuit that multiplies,",
    "start": "68430",
    "end": "71740"
  },
  {
    "text": "that does arithmetic\nmultiplications.",
    "start": "71740",
    "end": "73430"
  },
  {
    "text": "In other words,\nit's got some number",
    "start": "73430",
    "end": "75130"
  },
  {
    "text": "of bits reserved for\nan input x, a k bits,",
    "start": "75130",
    "end": "78360"
  },
  {
    "text": "and another k bits\nfor an input y,",
    "start": "78360",
    "end": "80540"
  },
  {
    "text": "and it's got 2k output\nlines that produce",
    "start": "80540",
    "end": "85230"
  },
  {
    "text": "the digits of x times y.",
    "start": "85230",
    "end": "88440"
  },
  {
    "text": "You might need one extra\ndigit, but never mind that.",
    "start": "88440",
    "end": "91780"
  },
  {
    "text": "So this is a multiplier circuit\ntakes an x, a k bit x in",
    "start": "91780",
    "end": "94840"
  },
  {
    "text": "and a k bit y in and it\nspits out the product, which",
    "start": "94840",
    "end": "100140"
  },
  {
    "text": "is another 2k bit\nnumber, and this is not",
    "start": "100140",
    "end": "102820"
  },
  {
    "text": "a terribly big circuit.",
    "start": "102820",
    "end": "104000"
  },
  {
    "text": "The naive way to design it\nwould use a number of gates",
    "start": "104000",
    "end": "108440"
  },
  {
    "text": "and a number of wires that was\nabout quadratic in the number",
    "start": "108440",
    "end": "111820"
  },
  {
    "text": "k.",
    "start": "111820",
    "end": "113180"
  },
  {
    "text": "It's easy enough to\ndesign one of these things",
    "start": "113180",
    "end": "115140"
  },
  {
    "text": "where the size is literally\nbounded by 5 times k squared,",
    "start": "115140",
    "end": "119690"
  },
  {
    "text": "maybe plus a constant.",
    "start": "119690",
    "end": "121360"
  },
  {
    "text": "And so this definitely\na small polynomial.",
    "start": "121360",
    "end": "127180"
  },
  {
    "text": "Given the number of bits\nthat I'm working with,",
    "start": "127180",
    "end": "130149"
  },
  {
    "text": "it's easy enough to build\nthis multiplier circuit.",
    "start": "130150",
    "end": "134510"
  },
  {
    "text": "Now, suppose that I have a\nway to test satisfiability",
    "start": "134510",
    "end": "138040"
  },
  {
    "text": "of circuits.",
    "start": "138040",
    "end": "139400"
  },
  {
    "text": "How am I going use this\nmultiplier circuit to factor?",
    "start": "139400",
    "end": "142409"
  },
  {
    "text": "Well, the first\nthing I'm going to do",
    "start": "142409",
    "end": "143950"
  },
  {
    "text": "is let's suppose the number\nthat I'm factoring is n",
    "start": "143950",
    "end": "147045"
  },
  {
    "text": "and is the product of\ntwo primes, p and q.",
    "start": "147045",
    "end": "149349"
  },
  {
    "text": "Those are the kinds of n's\nthat we've been using in RSA,",
    "start": "149350",
    "end": "152326"
  },
  {
    "text": "and let me also observe that\nit's very easy to design",
    "start": "152326",
    "end": "155780"
  },
  {
    "text": "an n tester-- that is, a\nlittle digital circuit that",
    "start": "155780",
    "end": "160050"
  },
  {
    "text": "has 2k input lines and\nproduces on its one output line",
    "start": "160050",
    "end": "166770"
  },
  {
    "text": "precisely when the input is\nthe binary representation of n.",
    "start": "166770",
    "end": "171710"
  },
  {
    "text": "So let's attach this equality\ntester that does nothing",
    "start": "171710",
    "end": "174980"
  },
  {
    "text": "but ask whether it's being\nfed the digits of n as input",
    "start": "174980",
    "end": "178540"
  },
  {
    "text": "and it produces an\noutput, 1 for n and 0",
    "start": "178540",
    "end": "183319"
  },
  {
    "text": "if the input pattern is and\nthe digital representation,",
    "start": "183320",
    "end": "186880"
  },
  {
    "text": "the binary representation\nof anything other than n.",
    "start": "186880",
    "end": "189240"
  },
  {
    "text": "That's another trivial\ncircuit to build.",
    "start": "189240",
    "end": "192110"
  },
  {
    "text": "So we put those two together,\nand now watch what happens.",
    "start": "192110",
    "end": "197610"
  },
  {
    "text": "I'm going to take the circuit\nand set the first of the input",
    "start": "197610",
    "end": "202840"
  },
  {
    "text": "bits to 0, and then I'm\ngoing to ask the SAT",
    "start": "202840",
    "end": "206750"
  },
  {
    "text": "solver the following\nquestion-- is there",
    "start": "206750",
    "end": "209350"
  },
  {
    "text": "a way to set the remaining\ninput bits other than 0?",
    "start": "209350",
    "end": "214400"
  },
  {
    "text": "So I've set the first one to 0.",
    "start": "214400",
    "end": "215760"
  },
  {
    "text": "What about these other bits?",
    "start": "215760",
    "end": "216959"
  },
  {
    "text": "The SAT solver can\ntell me whether or not",
    "start": "216960",
    "end": "219380"
  },
  {
    "text": "it's possible to get a\n1 out of this circuit",
    "start": "219380",
    "end": "222430"
  },
  {
    "text": "with the 0 there fixed.",
    "start": "222430",
    "end": "224900"
  },
  {
    "text": "So let's ask the SAT\nsolver what happens,",
    "start": "224900",
    "end": "227459"
  },
  {
    "text": "and the SAT solver\nsays, hey, yes, there",
    "start": "227460",
    "end": "229580"
  },
  {
    "text": "is a way to fill in\nthe remaining digits",
    "start": "229580",
    "end": "232300"
  },
  {
    "text": "and get an output 1.",
    "start": "232300",
    "end": "233962"
  },
  {
    "text": "Well, what does that tell me?",
    "start": "233962",
    "end": "235170"
  },
  {
    "text": "Well, it tells me that there\nis a factor that starts with 0,",
    "start": "235170",
    "end": "239590"
  },
  {
    "text": "so let's fix the 0 based on the\nfact that it's possible for me",
    "start": "239590",
    "end": "243920"
  },
  {
    "text": "to fill in the remaining digits\nwith the bits of factors x",
    "start": "243920",
    "end": "249690"
  },
  {
    "text": "and y that equal n.",
    "start": "249690",
    "end": "252080"
  },
  {
    "text": "Let's try to set the\nsecond input bit to 0",
    "start": "252080",
    "end": "257405"
  },
  {
    "text": "and see what happens.",
    "start": "257405",
    "end": "258278"
  },
  {
    "text": "Well, we'll ask the SAT\ntester, is it possible",
    "start": "258279",
    "end": "260690"
  },
  {
    "text": "now to fill in the\nremaining digits",
    "start": "260690",
    "end": "262700"
  },
  {
    "text": "to get the two numbers x and\ny that multiply and produce",
    "start": "262700",
    "end": "267500"
  },
  {
    "text": "n and therefore output 1?",
    "start": "267500",
    "end": "269180"
  },
  {
    "text": "And the SAT tester\nsays, no, this",
    "start": "269180",
    "end": "271440"
  },
  {
    "text": "is an unsatisfiable circuit.",
    "start": "271440",
    "end": "273350"
  },
  {
    "text": "You can't get a 1\nout of it any more.",
    "start": "273350",
    "end": "275520"
  },
  {
    "text": "That tells me that I have to\nset the second bit to 1 in order",
    "start": "275520",
    "end": "279419"
  },
  {
    "text": "to have a factor of n where the\nx and y will multiply together",
    "start": "279420",
    "end": "286400"
  },
  {
    "text": "to be n.",
    "start": "286400",
    "end": "287509"
  },
  {
    "text": "All right, fine.",
    "start": "287510",
    "end": "288580"
  },
  {
    "text": "Go to the third bit, ask\nwhether or not 0 works.",
    "start": "288580",
    "end": "291669"
  },
  {
    "text": "The SAT tester says,\nlet's say, yes.",
    "start": "291670",
    "end": "294220"
  },
  {
    "text": "So then I could fix 0.",
    "start": "294220",
    "end": "295420"
  },
  {
    "text": "I now know the first\nall three bits of x.",
    "start": "295420",
    "end": "299700"
  },
  {
    "text": "And of course, I go on\nand in 2k SAT tests,",
    "start": "299700",
    "end": "303780"
  },
  {
    "text": "I know exactly what p and q\nare, and I have, in fact, found",
    "start": "303780",
    "end": "308040"
  },
  {
    "text": "the factors p and q.",
    "start": "308040",
    "end": "311150"
  },
  {
    "text": "So that wraps that one up.",
    "start": "311150",
    "end": "312650"
  },
  {
    "text": "That's how you use a SAT tester.",
    "start": "312650",
    "end": "314040"
  },
  {
    "text": "You just do the\nSAT test 2k times",
    "start": "314040",
    "end": "316130"
  },
  {
    "text": "and you factored\nthis 2k bit number.",
    "start": "316130",
    "end": "320050"
  },
  {
    "text": "And of course, if the SAT\ntest is polynomial in k,",
    "start": "320050",
    "end": "322310"
  },
  {
    "text": "then doing it 2k times just\nis also polynomial in k",
    "start": "322310",
    "end": "325360"
  },
  {
    "text": "with one degree higher.",
    "start": "325360",
    "end": "328389"
  },
  {
    "text": "Now, the satisfiability\nproblem, as we formulated,",
    "start": "328390",
    "end": "332850"
  },
  {
    "text": "was a problem about formulas\nthat as you wrote out",
    "start": "332850",
    "end": "335980"
  },
  {
    "text": "a propositional formula\nand asked whether or not",
    "start": "335980",
    "end": "338230"
  },
  {
    "text": "it was satisfiable,\nand I'm instead",
    "start": "338230",
    "end": "340190"
  },
  {
    "text": "asking about satisfiability\nof binary circuits.",
    "start": "340190",
    "end": "343200"
  },
  {
    "text": "But in fact, as we did\nin some early exercises,",
    "start": "343200",
    "end": "346400"
  },
  {
    "text": "you can describe\na binary circuit",
    "start": "346400",
    "end": "350000"
  },
  {
    "text": "by assigning a fresh variable\nto every wire in the circuit",
    "start": "350000",
    "end": "353520"
  },
  {
    "text": "and then writing a little\nformula around each gate which",
    "start": "353520",
    "end": "356879"
  },
  {
    "text": "explains how the input\nwires to that gate",
    "start": "356880",
    "end": "360100"
  },
  {
    "text": "are related to the\noutput wire of that gate.",
    "start": "360100",
    "end": "363020"
  },
  {
    "text": "And that little formula explains\nthat wiring of that gate,",
    "start": "363020",
    "end": "366615"
  },
  {
    "text": "and you take the \"and\"\nof all those formulas",
    "start": "366615",
    "end": "369400"
  },
  {
    "text": "and you have a formula\nthat is describing",
    "start": "369400",
    "end": "373699"
  },
  {
    "text": "the structure of the circuitry,\nand in fact the formula",
    "start": "373700",
    "end": "378640"
  },
  {
    "text": "is satisfiable if and\nonly if the circuit",
    "start": "378640",
    "end": "381290"
  },
  {
    "text": "can produce an output 1.",
    "start": "381290",
    "end": "383280"
  },
  {
    "text": "So we really have\nby assuming that I",
    "start": "383280",
    "end": "386460"
  },
  {
    "text": "could test satisfiability\nof formulas,",
    "start": "386460",
    "end": "389550"
  },
  {
    "text": "I can therefore test\nsatisfiability of circuits,",
    "start": "389550",
    "end": "393550"
  },
  {
    "text": "and therefore I can factor.",
    "start": "393550",
    "end": "395560"
  },
  {
    "text": "So that's the simple trick to\nfind a propositional formula",
    "start": "395560",
    "end": "400180"
  },
  {
    "text": "that's equisatisfiable\nto the circuit--",
    "start": "400180",
    "end": "402710"
  },
  {
    "text": "if the circuit\nproduces output 1 if",
    "start": "402710",
    "end": "405139"
  },
  {
    "text": "and only if this formula\nof about the same size",
    "start": "405140",
    "end": "408030"
  },
  {
    "text": "as the circuit is satisfiable.",
    "start": "408030",
    "end": "410600"
  },
  {
    "text": "And that's the last piece\nthat I needed in order",
    "start": "410600",
    "end": "413310"
  },
  {
    "text": "to completely\nreduce the factoring",
    "start": "413310",
    "end": "417080"
  },
  {
    "text": "to the satisfiability\nproblem, and you",
    "start": "417080",
    "end": "418692"
  },
  {
    "text": "could see that this is\nactually a general method that",
    "start": "418692",
    "end": "420900"
  },
  {
    "text": "will enable you to reduce most\nany kind of one-way function",
    "start": "420900",
    "end": "425970"
  },
  {
    "text": "to a few SAT tests.",
    "start": "425970",
    "end": "428870"
  },
  {
    "start": "428870",
    "end": "429660"
  }
]