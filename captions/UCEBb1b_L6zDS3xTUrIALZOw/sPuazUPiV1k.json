[
  {
    "text": " The following\ncontent is provided under a Creative\nCommons license. Your support will help MIT\nOpenCourseWare continue",
    "start": "0",
    "end": "6880"
  },
  {
    "text": "to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6880",
    "end": "13360"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13360",
    "end": "20793"
  },
  {
    "text": "PROFESSOR: So you\nguys might have heard, we have a quiz tomorrow. So we're going to do\na review for that.",
    "start": "20794",
    "end": "26880"
  },
  {
    "text": "Did everyone turn in P set six? Yes? Good. All right, so\nwhat's on this quiz?",
    "start": "26880",
    "end": "34060"
  },
  {
    "text": "Numerics and graph stuff. So are there any\nspecific pain points?",
    "start": "34060",
    "end": "39920"
  },
  {
    "text": "I have problems prepared. Now, and then at\n8:00 PM is going to be a review\nsession for concepts. So now problems, 8:00 PM\nconcepts, tomorrow [? Yakim ?]",
    "start": "39920",
    "end": "47660"
  },
  {
    "text": "has office hours at\n5:00 PM, conveniently placed before the quiz. Poor guy. So take advantage of that.",
    "start": "47660",
    "end": "55230"
  },
  {
    "text": "So yeah. AUDIENCE: Numerics, on\nP set we were mostly asked-- you said five,\nfour, whichever came before.",
    "start": "55230",
    "end": "62140"
  },
  {
    "text": "You mostly asked for the running\ntimes and things like that. But the numeric lecture\nnotes are kind of detailed",
    "start": "62140",
    "end": "68570"
  },
  {
    "text": "and go into Newtonian\nmethod and all that. How much detail do\nwe need to know?",
    "start": "68570",
    "end": "75750"
  },
  {
    "text": "PROFESSOR: So on the P set\nwe make your life easier by giving you the\npseudocode of the code",
    "start": "75750",
    "end": "80799"
  },
  {
    "text": "that you needed to implement. And we ask you one\nalgorithm design question,",
    "start": "80800",
    "end": "86380"
  },
  {
    "text": "the problem of\nfinding the k-th root. And that required\nyou to understand almost everything\nthat was going on.",
    "start": "86380",
    "end": "92760"
  },
  {
    "text": "We'll want you to understand\nthings that are going on to come up with something fairly\nsimilar to what you've seen.",
    "start": "92760",
    "end": "99951"
  },
  {
    "text": "So yeah, I know\nthat I told you guys before that ignore numerics. Just close your eyes and\npretend it didn't happen. Actually it turns out there's a\nsignificant amount of numerics",
    "start": "99951",
    "end": "107950"
  },
  {
    "text": "on the quiz. So we're going to start\nwith a numerics problem, and go through it. I'm really sorry about that.",
    "start": "107950",
    "end": "113500"
  },
  {
    "text": "Clearly I didn't have\nmy way for this, right? OK so we started two\nbig things in numerics.",
    "start": "113500",
    "end": "120090"
  },
  {
    "text": "Karatsuba, which is\nreally easy compared to Newton which requires\na lot of understanding.",
    "start": "120090",
    "end": "127230"
  },
  {
    "text": "So we're going to spend\nour time on Newton today. OK, so anything aside from that?",
    "start": "127230",
    "end": "132989"
  },
  {
    "text": "Yes. AUDIENCE: The thing we\nwere just talking about before you were here\nwas what kind of edges are produced by depth\nfirst search versus breadth",
    "start": "132990",
    "end": "141160"
  },
  {
    "text": "first search? AUDIENCE: And why\ndo they matter? PROFESSOR: And why\ndo they matter. OK. AUDIENCE: Because it's probably\ngoing to be a question on the-- PROFESSOR: So I'm going to\ngo on this very quickly now,",
    "start": "141160",
    "end": "148830"
  },
  {
    "text": "because I want to\ncover problems, but tonight-- this is on\nthe outline for the review.",
    "start": "148830",
    "end": "153941"
  },
  {
    "text": "So if you guys can\nmake it tonight-- AUDIENCE: It's late,\nso I can't make it. PROFESSOR: Sorry. Well, they are also\nin the lecture notes.",
    "start": "153941",
    "end": "159920"
  },
  {
    "text": "But I'll go through\nthem very quickly now. OK, anything else? ",
    "start": "159920",
    "end": "167780"
  },
  {
    "text": "AUDIENCE: Making trees\nwith DFS and BFS, this might be tonight also. PROFESSOR: Making trees-- AUDIENCE: Or your search trees.",
    "start": "167780",
    "end": "174050"
  },
  {
    "text": "So instead of-- do you\nknow what I mean by that? PROFESSOR: Do you mean\ngraph transformation?",
    "start": "174050",
    "end": "181254"
  },
  {
    "text": "AUDIENCE: So you've got a tree\nand you search through it. So then when you're\nsearching through it, the result of searching\nit, you can put that",
    "start": "181255",
    "end": "187459"
  },
  {
    "text": "into almost a binary tree. PROFESSOR: OK so\nhow BFS and DFS work",
    "start": "187460",
    "end": "192980"
  },
  {
    "text": "and how they produce\ntrees, I'm assuming, right? Because if you start\nout with a tree, everything's going to be\nreally nice and simple.",
    "start": "192980",
    "end": "199980"
  },
  {
    "text": "AUDIENCE: Right. PROFESSOR: Yes? AUDIENCE: Bidirectional search. PROFESSOR: OK. AUDIENCE: Is that\ngoing to be included?",
    "start": "199980",
    "end": "205960"
  },
  {
    "text": "PROFESSOR: At a very\nconceptual level because we didn't give\nyou a P set on it.",
    "start": "205960",
    "end": "211460"
  },
  {
    "text": "AUDIENCE: Was that\nwhat rubrics was? AUDIENCE: Yeah. AUDIENCE: It was bidirectional? AUDIENCE: Well it's not going\nto be on it so, we're happy. PROFESSOR: Well I mean\nwe didn't give you--",
    "start": "211460",
    "end": "218041"
  },
  {
    "text": "you kind of had to solve a\nproblem just by-- we have to tell you this\nis bidirectional BFS, go code it up.",
    "start": "218041",
    "end": "224849"
  },
  {
    "text": "This is bi-directional\nDijkstra, go code it up. So we're not going to ask you\nanything too fancy on them.",
    "start": "224850",
    "end": "231110"
  },
  {
    "text": "So nothing past the P set. AUDIENCE: Will you\nhave a question like when you were\nstudying BFS, saying",
    "start": "231110",
    "end": "237049"
  },
  {
    "text": "how there will be\nlevels of graphs? PROFESSOR: Yep. AUDIENCE: Could there\nbe anything about that?",
    "start": "237050",
    "end": "242890"
  },
  {
    "text": "PROFESSOR: So levels of graphs\nas in the levels in BFS? Or the levels that we're using\nwhen we're building graphs?",
    "start": "242890",
    "end": "248227"
  },
  {
    "text": "AUDIENCE: Copies of\ngraphs and then-- AUDIENCE: Transformations. PROFESSOR: Yep. OK, transformations and layers. Yeah, I think this is important.",
    "start": "248227",
    "end": "253446"
  },
  {
    "text": "AUDIENCE: Any particular tips\non what kind of transformations we might encounter? PROFESSOR: Sure. Problem one has this\ntransformation, problem two--",
    "start": "253447",
    "end": "259881"
  },
  {
    "text": "[AUDIENCE LAUGHTER] AUDIENCE: Basically,\nwhen do we use these? Is it when we are given more\nthan one parameter for a cause.",
    "start": "259882",
    "end": "269440"
  },
  {
    "text": "PROFESSOR: So I have\nsome problems on this but we have to have a deal. You guys have to help me\ngo through the problems",
    "start": "269440",
    "end": "274560"
  },
  {
    "text": "fast enough so that we get here. OK? So if you know the\nanswer, say the answer.",
    "start": "274560",
    "end": "279830"
  },
  {
    "text": "Don't let me wait. OK. AUDIENCE: Also, when you run\nDijkstra and Bellman-Ford",
    "start": "279830",
    "end": "286660"
  },
  {
    "text": "on a graph, with\npositive edges, they produce the same\nshortest path weight",
    "start": "286660",
    "end": "292970"
  },
  {
    "text": "but might have different trees? PROFESSOR: Yes,\nthat's conceivable. Because they--",
    "start": "292970",
    "end": "298420"
  },
  {
    "text": "AUDIENCE: It's one of the\nquestions on spring 2011. PROFESSOR: OK. So first off, they both\nhave positive edges, so",
    "start": "298420",
    "end": "304420"
  },
  {
    "text": "they both work, right? If you had to choose,\nwhich one would you choose? If you had to choose\nwhich are going to run,",
    "start": "304420",
    "end": "311080"
  },
  {
    "text": "which one would you run? AUDIENCE: Dijkstra. PROFESSOR: OK, why Dijkstra? AUDIENCE: It's faster. PROFESSOR: Faster. OK so positive edges,\nDijkstra is faster.",
    "start": "311080",
    "end": "327464"
  },
  {
    "text": "Now if you're going\nto run both of them, they relax edges in\ndifferent orders. Right? So let's say we have this.",
    "start": "327464",
    "end": "334310"
  },
  {
    "text": " I know you guys remember the\nsequence of diamonds, right?",
    "start": "334310",
    "end": "340560"
  },
  {
    "text": "My nice example that shows that\nthe number of paths in a graph is exponential in the\nnumber of vertices.",
    "start": "340560",
    "end": "346080"
  },
  {
    "text": "So let's have one diamond. 1, 1, 1, 1. S, A, B, T. So say we're\nlooking for shortest path",
    "start": "346080",
    "end": "357490"
  },
  {
    "text": "from S. Right? So the distance\nfrom S to S is zero,",
    "start": "357490",
    "end": "362659"
  },
  {
    "text": "and everything else\nstarts out as infinity. SA is infinity. SB is infinity.",
    "start": "362660",
    "end": "370150"
  },
  {
    "text": "ST is infinity. Suppose I relax\nedges in this order. One, two, three, four.",
    "start": "370150",
    "end": "378150"
  },
  {
    "text": "What am I going to get? If I relax SA, then the\ndistance from S to A is going to become 1, right?",
    "start": "378150",
    "end": "383730"
  },
  {
    "text": "Because it's 0 plus 1 1. And then the parent\nof A is going to be S.",
    "start": "383730",
    "end": "390610"
  },
  {
    "text": "Now say I relax AT. The distance from S\nto T is going to be 2.",
    "start": "390610",
    "end": "398440"
  },
  {
    "text": "Sorry. Parent of T is going\nto be A. Right?",
    "start": "398440",
    "end": "406020"
  },
  {
    "text": "OK now I'm relaxing this one. This is going to become\none and the parent of B",
    "start": "406020",
    "end": "413400"
  },
  {
    "text": "is going to become S. And\nas I'm relaxing this one, nothing happens because I\nalready had a distance of 2.",
    "start": "413400",
    "end": "420460"
  },
  {
    "text": "Now if I relax them\nin this order instead, so the bottom one first and\nthe top one is afterwards,",
    "start": "420460",
    "end": "427210"
  },
  {
    "text": "I'm going to get\nthe different path. Right? OK so what path do I\nhave now from S to T? ",
    "start": "427210",
    "end": "435440"
  },
  {
    "text": "AUDIENCE: Right\nnow you have SAT. PROFESSOR: OK, why SAT? How do you compute the path?",
    "start": "435440",
    "end": "440520"
  },
  {
    "text": "Parent pointers, right? Start at T, look at\nthe parent pointer.",
    "start": "440520",
    "end": "445820"
  },
  {
    "text": "Look at the parent pointer.  So because I relax\nthem in this order,",
    "start": "445820",
    "end": "452550"
  },
  {
    "text": "this path was considered\nbefore this path. So the parent pointer of\nT is A but if I relax them",
    "start": "452550",
    "end": "457820"
  },
  {
    "text": "in the other order, the\nparent pointer could be B. So by the way, this\ncould happen if you're running Dijkstra\nor Bellman-Ford.",
    "start": "457820",
    "end": "464102"
  },
  {
    "text": "Or if you're running\nDijkstra, it's just about how you're going\nto have the ties separated. So your priority\nqueue implementation",
    "start": "464102",
    "end": "470319"
  },
  {
    "text": "might give you different paths. Does it make sense now? So if the order in\nwhich edges are relaxed.",
    "start": "470320",
    "end": "475730"
  },
  {
    "text": "That's what defines with path\nyou're going to end up with. AUDIENCE: OK. PROFESSOR: OK. Hopefully useful.",
    "start": "475730",
    "end": "482479"
  },
  {
    "text": "All right. I saw four hands before. AUDIENCE: Oh, just\noverall, how similar",
    "start": "482480",
    "end": "488719"
  },
  {
    "text": "is this test compared\nto previous tests? PROFESSOR: Less algorithm\ndesign, more concepts.",
    "start": "488720",
    "end": "495070"
  },
  {
    "text": "AUDIENCE: Nice. AUDIENCE: Yes. PROFESSOR: Well OK,\nnot less algorithm-- so it's not going to be as\nmuch out-of-the-box thinking,",
    "start": "495070",
    "end": "502090"
  },
  {
    "text": "it's going to be a lot more\nof what we drilled already. So as a hint, what\nkind of problem",
    "start": "502090",
    "end": "507120"
  },
  {
    "text": "did we practice over,\nand over, and over? AUDIENCE: States PROFESSOR: OK. Graph transformation, right?",
    "start": "507120",
    "end": "513360"
  },
  {
    "text": "So chances are you'll see that. AUDIENCE: Wait, what's\ngraph transformation? [LAUGHTER]",
    "start": "513360",
    "end": "522659"
  },
  {
    "text": "PROFESSOR: So we start\nwith a complicated problem and reduce it to a shortest path\nproblem or to a shortest length",
    "start": "522659",
    "end": "528420"
  },
  {
    "text": "path problem.  OK. Cool.",
    "start": "528420",
    "end": "534660"
  },
  {
    "text": "So that being said, let's go. Numerics, everyone's\nfavorite topic.",
    "start": "534660",
    "end": "540480"
  },
  {
    "text": "So suppose we're\ntrying to compute this. Cube root of 6,006.",
    "start": "540480",
    "end": "548200"
  },
  {
    "text": "And the problem\nstatement says this, you start out with an\ninitial approximation of one,",
    "start": "548200",
    "end": "557080"
  },
  {
    "text": "and it wants two\napproximations after that.",
    "start": "557080",
    "end": "565810"
  },
  {
    "text": "The problem also tells you which\nfunction we're going to use. But why don't we\nmake this fun and try to guess what the\nfunction will be?",
    "start": "565810",
    "end": "574415"
  },
  {
    "text": "AUDIENCE: x cubed minus 6,006?",
    "start": "574415",
    "end": "585329"
  },
  {
    "text": "PROFESSOR: OK. x\ncubed minus 6,006 why did I choose this function? Well, not me. Why did you choose\nthis function?",
    "start": "585330",
    "end": "591378"
  },
  {
    "text": "AUDIENCE: It's the root.  PROFESSOR: OK so reason\nnumber one-- right?",
    "start": "591378",
    "end": "602940"
  },
  {
    "text": "Important. Has to be zero at the\nanswer, because that's what Newton's method gives us. And what else?",
    "start": "602940",
    "end": "608990"
  },
  {
    "text": "AUDIENCE:\nMultiplication is easy. ",
    "start": "608990",
    "end": "614390"
  },
  {
    "text": "PROFESSOR: OK. So it's easy to compute\nwhatever Newton's method wants us to compute.",
    "start": "614390",
    "end": "620620"
  },
  {
    "text": "What does Newton's method\nwant us to compute? So given an approximation,\nxi, how do we",
    "start": "620620",
    "end": "628230"
  },
  {
    "text": "get to the next\napproximation, xi plus 1. Formula. By the way, this formula\nshould be on your cheat sheets.",
    "start": "628230",
    "end": "634520"
  },
  {
    "text": "If it's not, no\nsympathy for you. AUDIENCE: I don't remember. xi plus f over f prime.",
    "start": "634520",
    "end": "644884"
  },
  {
    "start": "644884",
    "end": "651250"
  },
  {
    "text": "AUDIENCE: Where's the prime? AUDIENCE: Prime's on the bottom. PROFESSOR: So yeah,\nwhere's the prime?",
    "start": "651250",
    "end": "656320"
  },
  {
    "text": "And is this right? ",
    "start": "656320",
    "end": "661976"
  },
  {
    "text": "AUDIENCE: Isn't\nthere a constant? AUDIENCE: Isn't it minus? PROFESSOR: Isn't it minus?",
    "start": "661976",
    "end": "668341"
  },
  {
    "text": "AUDIENCE: Maybe. AUDIENCE: There you go. PROFESSOR: So yeah,\nif you guys start out",
    "start": "668341",
    "end": "673390"
  },
  {
    "text": "with the wrong formula\nyou'd get the wrong answer. Again, no sympathy. So get that on your sheets.",
    "start": "673390",
    "end": "680500"
  },
  {
    "text": "OK so this is what we\nneed to compute, right? You start with an approximation\nand you have to subtract this.",
    "start": "680500",
    "end": "686330"
  },
  {
    "text": "So this has to be\neasy to compute. What if I chose instead\na very nice function.",
    "start": "686330",
    "end": "695450"
  },
  {
    "text": "x-- sorry, x minus. ",
    "start": "695450",
    "end": "700750"
  },
  {
    "text": "This is clearly zero where\nI want it to be, right? AUDIENCE: But we\ndon't know what six--",
    "start": "700750",
    "end": "706056"
  },
  {
    "text": "PROFESSOR: But if\nI'm trying to compute the successive approximations,\nvery good, I'm getting what?",
    "start": "706056",
    "end": "711120"
  },
  {
    "text": "f of x over f prime of x is\nx minus square root 3 6,006",
    "start": "711120",
    "end": "719670"
  },
  {
    "text": "over-- what's the\nderivative of this? AUDIENCE: One. PROFESSOR: One.",
    "start": "719670",
    "end": "724880"
  },
  {
    "text": "So I haven't done\nanything, right? In order to compute the\nsuccessive approximation, I have to know this number.",
    "start": "724880",
    "end": "731450"
  },
  {
    "text": "So this doesn't get me anywhere,\nthat's why it's a bad function. By the way, it's not enough\nthat this is easy to compute.",
    "start": "731450",
    "end": "738290"
  },
  {
    "text": "What you want is this guy\nhas to be easy to compute. In the case of division,\nwe had a function",
    "start": "738290",
    "end": "744769"
  },
  {
    "text": "that looked pretty wacky. But then when we divided\nthat by the derivative, we got something\nreasonably nice.",
    "start": "744770",
    "end": "751690"
  },
  {
    "text": "So this has to be\neasy to compute. AUDIENCE: So we changed it\nfrom that one to this one just",
    "start": "751690",
    "end": "756990"
  },
  {
    "text": "because this one is easier or-- PROFESSOR: So we're\nusing this one because this one-- let's see\nhow easy this one is to compute.",
    "start": "756990",
    "end": "764475"
  },
  {
    "text": "Computing this one requires\nthat you know the answer to your original problem,\nwhich is not cool. Right.",
    "start": "764476",
    "end": "770535"
  },
  {
    "text": "So you're trying to\ncompute this number. But if you use this,\nNewton's approximation requires that you compute this.",
    "start": "770536",
    "end": "777860"
  },
  {
    "text": "So you have to know this here. Which is what you're trying\nto do in the first place. AUDIENCE: Wait, I'm confused.",
    "start": "777860",
    "end": "783678"
  },
  {
    "text": "We went from x\ncubed minus 6 over 6 to x minus cube\nroot of 6 over 6. So what's your-- PROFESSOR: So this\nis a good function.",
    "start": "783678",
    "end": "790240"
  },
  {
    "text": "We can use this. This is a bad function\nand I was asking why is this a bad function. AUDIENCE: Oh, OK.",
    "start": "790240",
    "end": "795912"
  },
  {
    "text": "PROFESSOR: OK. So lets see, if we try\nto compute it using this, what do we get?",
    "start": "795912",
    "end": "801215"
  },
  {
    "text": "xi minus AUDIENCE: x cubed minus 6,006. PROFESSOR: X cubed minus 6,006.",
    "start": "801215",
    "end": "807488"
  },
  {
    "text": "Divided by-- AUDIENCE: 3x cubed.  PROFESSOR: OK.",
    "start": "807488",
    "end": "814510"
  },
  {
    "text": "So someone simplify this for me. AUDIENCE: 6i minus x over 3\nplus 6,006 over 3 squared.",
    "start": "814510",
    "end": "827432"
  },
  {
    "text": "Oh, well. It's 2,002. PROFESSOR: I'll\nchoose the easy step. ",
    "start": "827432",
    "end": "833998"
  },
  {
    "text": "OK. ",
    "start": "833998",
    "end": "841970"
  },
  {
    "text": "So what's x1? ",
    "start": "841970",
    "end": "850029"
  },
  {
    "text": "AUDIENCE: You plug in x0. PROFESSOR: OK. I heard a 2,002.",
    "start": "850030",
    "end": "856785"
  },
  {
    "text": "I don't think it's--\nit's very close. AUDIENCE: 2,002 and two thirds. 0.67.",
    "start": "856785",
    "end": "862490"
  },
  {
    "text": "PROFESSOR: OK, cool. So 0.67, let's\nget to that later.",
    "start": "862490",
    "end": "868230"
  },
  {
    "text": "I don't like fractional numbers. I mean this is the\nright answer math-wise, but we'll get to that because\nif we want to code this up,",
    "start": "868230",
    "end": "875430"
  },
  {
    "text": "we probably don't want\nfractional numbers. So very good point there. What if I want to compute x2?",
    "start": "875430",
    "end": "880940"
  },
  {
    "text": "I take this guy and\nI plug it into where? ",
    "start": "880940",
    "end": "887019"
  },
  {
    "text": "This thing over here, right? So this way I can\ncompute approximations that get closer and closer\nto my original value.",
    "start": "887020",
    "end": "896240"
  },
  {
    "text": "OK. Does this ring a bell? ",
    "start": "896240",
    "end": "901430"
  },
  {
    "text": "Yes, everyone is\nhappy with this? Cool.  So how about the initial guess?",
    "start": "901430",
    "end": "907390"
  },
  {
    "text": "Here we started with\na known initial guess. Is this a good guess? AUDIENCE: It's a\nreally bad guess.",
    "start": "907390",
    "end": "914326"
  },
  {
    "text": "2,002? PROFESSOR: No, I mean 1. AUDIENCE: 1? That's also a really bad guess.",
    "start": "914326",
    "end": "919900"
  },
  {
    "text": "AUDIENCE: Why\nwould you even ask? AUDIENCE: 11 and a half. PROFESSOR: All right.",
    "start": "919900",
    "end": "925020"
  },
  {
    "text": "So you're saying 11 and a\nhalf would be a nice guess. So, first off, let's\nsee, what do we",
    "start": "925020",
    "end": "930920"
  },
  {
    "text": "need to-- what does Newton's\nalgorithm guarantee? What-- if the guess\nis really, really bad,",
    "start": "930920",
    "end": "938120"
  },
  {
    "text": "would we get an\nanswer all the time? Maybe takes forever but\nwe'll get an answer. True or false?",
    "start": "938120",
    "end": "943375"
  },
  {
    "text": "AUDIENCE: True.  PROFESSOR: Not true. Sorry.",
    "start": "943375",
    "end": "948587"
  },
  {
    "text": "AUDIENCE: But it has to be\nright for your answer to be-- PROFESSOR: OK, so what does\nNewton's method guarantee? [INTERPOSING VOICES]",
    "start": "948587",
    "end": "954887"
  },
  {
    "text": "PROFESSOR: Yep, yep. So what is the fancy\nmath name for that? AUDIENCE: Quadratic\nconvergence or something. PROFESSOR: Quadratic\nconvergence, all right.",
    "start": "954887",
    "end": "961540"
  },
  {
    "text": "So this is what\nNewton guarantees.  Quadratic-- so what\ndoes this mean?",
    "start": "961540",
    "end": "971970"
  },
  {
    "text": "For all your approximations,\nthey're all going to be xi. If we write them as true\nanswer times 1 plus error, i.",
    "start": "971970",
    "end": "981180"
  },
  {
    "text": "So this error is the relative\nerror of the approximation. Newtons method guarantees\nthat the error at each step",
    "start": "981180",
    "end": "992170"
  },
  {
    "text": "is squared. So if this guy-- if\nE0 is greater than 1,",
    "start": "992170",
    "end": "1001120"
  },
  {
    "text": "would we get an answer? AUDIENCE: No. ",
    "start": "1001120",
    "end": "1007820"
  },
  {
    "text": "PROFESSOR: OK so what we need? What's the minimum that we need?",
    "start": "1007820",
    "end": "1014080"
  },
  {
    "text": "E0 has to be between\nwhat and what? AUDIENCE: Negative 1?",
    "start": "1014080",
    "end": "1020540"
  },
  {
    "text": "AUDIENCE: Is it negative\n1, 1 or 0 and 1? AUDIENCE: It would\nbe 0 and 1, right? Because won't it\nbe less than one?",
    "start": "1020540",
    "end": "1025819"
  },
  {
    "text": "AUDIENCE: Negative 1. AUDIENCE: Oh, absolute value. PROFESSOR: I think if you\nscore something smaller",
    "start": "1025820",
    "end": "1031253"
  },
  {
    "text": "than negative 1\nyou get a positive and then-- so, let's\nsay this works. So then x0 has to be\nbetween what and what",
    "start": "1031254",
    "end": "1041000"
  },
  {
    "text": "in relation to the real answer? ",
    "start": "1041000",
    "end": "1049910"
  },
  {
    "text": "AUDIENCE: The real answer\nminus x0 over [INAUDIBLE].",
    "start": "1049910",
    "end": "1055355"
  },
  {
    "text": " AUDIENCE: 2 times the\nactual answer is 0. ",
    "start": "1055355",
    "end": "1062770"
  },
  {
    "text": "PROFESSOR: OK so this\nis a sucky guess. We can do a lot\nbetter, but at least it will make the thing converge.",
    "start": "1062770",
    "end": "1068528"
  },
  {
    "text": " Fair enough? ",
    "start": "1068528",
    "end": "1075710"
  },
  {
    "text": "OK now what if I\nwant a good guess? First off, let's backtrack\nto a more general problem",
    "start": "1075710",
    "end": "1083520"
  },
  {
    "text": "because this is easy, right? To plug it into our calculator\nand you have the answer. So what if I'm trying to\ncompute cube root of r.",
    "start": "1083520",
    "end": "1093973"
  },
  {
    "text": "Can everyone see, by the way? AUDIENCE: Yes. AUDIENCE: Mhmm. PROFESSOR: OK. So I'm trying to\ncompute cube root of r.",
    "start": "1093973",
    "end": "1100345"
  },
  {
    "text": "r is a number. Suppose I'm trying to compute,\nfor example, cube root of 2.",
    "start": "1100345",
    "end": "1106046"
  },
  {
    "text": " What's the first\nthing I need to do?",
    "start": "1106046",
    "end": "1113130"
  },
  {
    "text": "I'm going to code\nthis up, by the way. Well, not me but suppose\nwe want to code this up. What's the first\nthing we want to do?",
    "start": "1113130",
    "end": "1119156"
  },
  {
    "text": "AUDIENCE: I think we want an\ninitial guess at a function. PROFESSOR: OK so we're going\nto need an initial guess.",
    "start": "1119156",
    "end": "1124250"
  },
  {
    "text": "That's good. ",
    "start": "1124250",
    "end": "1129770"
  },
  {
    "text": "And what else do we want? AUDIENCE: We need to decide\nhow much precision we want. PROFESSOR: Yep.",
    "start": "1129770",
    "end": "1135175"
  },
  {
    "text": "And why is that? AUDIENCE: Because this\ncube root of 2 is 1. If you round down.",
    "start": "1135175",
    "end": "1141670"
  },
  {
    "text": "That doesn't tell us very much. I don't know, we don't\nlike the fractions.",
    "start": "1141670",
    "end": "1147022"
  },
  {
    "text": "PROFESSOR: We don't\nlike fractions. OK, why don't we like fractions? It's a lot easier to code. AUDIENCE: Decimal point there.",
    "start": "1147022",
    "end": "1152990"
  },
  {
    "text": "PROFESSOR: Yep, you have to\ndeal with the decimal point and we don't like that. So we want to take\nthis problem, and we want to move it\ninto integer land.",
    "start": "1152990",
    "end": "1160000"
  },
  {
    "text": "So what we did\nhere has fractions. We don't like that because\nthat's a pain to code. We didn't make you code\nfractions on the P set, right?",
    "start": "1160000",
    "end": "1166780"
  },
  {
    "text": "So then we better know\nhow to avoid fractions if you want to solve\nreal life problems.",
    "start": "1166780",
    "end": "1172669"
  },
  {
    "text": "So we're going to say that\nwe're happy with some amount of precision in the answer.",
    "start": "1172670",
    "end": "1178110"
  },
  {
    "text": "And then we're going\nto do something that lets us do all our\ncomputations in integer land. ",
    "start": "1178110",
    "end": "1189340"
  },
  {
    "text": "Because that's a happy place. So how do I-- suppose\nI'm working in base B",
    "start": "1189340",
    "end": "1200020"
  },
  {
    "text": "and I want d digits\nof precision. What do I want to compute?",
    "start": "1200020",
    "end": "1206299"
  },
  {
    "text": "How do I transform the\nproblem in that way? Yes? AUDIENCE: You multiply 2\nroot 3 times B to the d.",
    "start": "1206300",
    "end": "1215262"
  },
  {
    "text": "PROFESSOR: OK so\nwe want the answer to be 2 times B to the d.",
    "start": "1215262",
    "end": "1222146"
  },
  {
    "text": "And if we're integer land, what\nare we actually going to get? ",
    "start": "1222146",
    "end": "1230830"
  },
  {
    "text": "So suppose B is 10-- let's work\nwith familiar numbers-- d is 2.",
    "start": "1230830",
    "end": "1237210"
  },
  {
    "text": "So we're going to\nwant to compute square root of 3 2 times 100.",
    "start": "1237210",
    "end": "1245005"
  },
  {
    "text": "Does anyone have a\ncalculator and can tell me what square root of 3 is? First two digits?",
    "start": "1245005",
    "end": "1250279"
  },
  {
    "text": "AUDIENCE: Cube root of 2. PROFESSOR: Sorry,\ncube root of 2. ",
    "start": "1250279",
    "end": "1257720"
  },
  {
    "text": "AUDIENCE: 1.2. PROFESSOR: So let's say that\nsquare root of 3 is 1.2345.",
    "start": "1257720",
    "end": "1266770"
  },
  {
    "text": "Hopefully someone will\nfix this up for us. But let's say it's this. If I multiply it by\n100 what do I get?",
    "start": "1266770",
    "end": "1273310"
  },
  {
    "text": "123 times 45. ",
    "start": "1273310",
    "end": "1278780"
  },
  {
    "text": "So multiply by 100 means\nyou move the decimal point to the right. Right? So it's still not an integer.",
    "start": "1278780",
    "end": "1284820"
  },
  {
    "text": "If we work in integer\nland, our algorithm will return an integer. What's the integer\nthat we're hoping",
    "start": "1284820",
    "end": "1290950"
  },
  {
    "text": "our algorithm will return? AUDIENCE: 1.23, right? PROFESSOR: We're\nhoping so, right?",
    "start": "1290950",
    "end": "1297090"
  },
  {
    "text": "Why? What can you do with 123?  Shift right.",
    "start": "1297090",
    "end": "1302519"
  },
  {
    "text": "So if you divide this\nby 100, you get 1.23. And this is our answer with\ntwo digits of precision.",
    "start": "1302520",
    "end": "1309895"
  },
  {
    "text": "AUDIENCE: Do you want\nthe actual-- it's 1.2599.",
    "start": "1309895",
    "end": "1316582"
  },
  {
    "text": "PROFESSOR: You guys are good. ",
    "start": "1316582",
    "end": "1324800"
  },
  {
    "text": "OK. So our algorithm will\ngive us this, right?",
    "start": "1324800",
    "end": "1331320"
  },
  {
    "text": "So it's not going to\ngive us exactly cube",
    "start": "1331320",
    "end": "1336529"
  },
  {
    "text": "root of 2 times 100. It's not going to give\nus exactly this value. What's it going to give us?",
    "start": "1336530",
    "end": "1343424"
  },
  {
    "text": "AUDIENCE: Two digits--\nclose to that. ",
    "start": "1343424",
    "end": "1349720"
  },
  {
    "text": "PROFESSOR: So it's going to\ngive us an integer, right? So what kind of integer?",
    "start": "1349720",
    "end": "1354870"
  },
  {
    "text": "Math. AUDIENCE: Truncated? PROFESSOR: OK, what's\nthe math for that? Truncated. Floor.",
    "start": "1354870",
    "end": "1360530"
  },
  {
    "text": "Very good. So this is what we're\nactually going to compute. Actually, because\nwe're in integer land,",
    "start": "1360530",
    "end": "1367010"
  },
  {
    "text": "we're going to have\nfloors at every step when we're doing\nthat approximation. And there's a fancy\nproof for Newton",
    "start": "1367010",
    "end": "1372310"
  },
  {
    "text": "that says that even though\nyou're taking floors all the time, it will still\nconverge to the right thing.",
    "start": "1372310",
    "end": "1378429"
  },
  {
    "text": "So in order to compute\nthis, how are we going to transform the problem? ",
    "start": "1378430",
    "end": "1386060"
  },
  {
    "text": "AUDIENCE: Slide\nthe Bd into that. PROFESSOR: OK. AUDIENCE: You're going to\nhave to put a 3 in there.",
    "start": "1386060",
    "end": "1392190"
  },
  {
    "text": "B to the 3d. PROFESSOR: So we're\nactually going to compute cube root\nof 2 times B to the 3d.",
    "start": "1392190",
    "end": "1398466"
  },
  {
    "start": "1398466",
    "end": "1405580"
  },
  {
    "text": "Fair enough? And if we slide this\nright by the digits afterwards we're going to get\nour two digits of precision.",
    "start": "1405580",
    "end": "1410795"
  },
  {
    "text": " OK. So now I figured\nout my precision.",
    "start": "1410795",
    "end": "1418910"
  },
  {
    "text": "I want an initial guess--\nand actually I lied, there's one more problem.",
    "start": "1418910",
    "end": "1424250"
  },
  {
    "text": "Running time.  Do you guys want to start\nwith the running time",
    "start": "1424250",
    "end": "1430505"
  },
  {
    "text": "or initial guess? AUDIENCE: Initial guess.",
    "start": "1430505",
    "end": "1436570"
  },
  {
    "text": "PROFESSOR: OK so what I\nwant a good initial guess? AUDIENCE: Between 0 and 2x.",
    "start": "1436570",
    "end": "1446117"
  },
  {
    "text": "PROFESSOR: OK so if I don't\nhave that the algorithm will crash and burn. When we did Newton\nin recitation, I said that I would\nlike two things.",
    "start": "1446117",
    "end": "1453600"
  },
  {
    "text": "And I backed up, I coded\nthat into P set five when I did the guess. So what are the\ntwo things that I",
    "start": "1453600",
    "end": "1459970"
  },
  {
    "text": "want from a good initial guess? AUDIENCE: Order of magnitude? PROFESSOR: OK. Perfect.",
    "start": "1459970",
    "end": "1466280"
  },
  {
    "text": "AUDIENCE: Oh, god. [LAUGHS]",
    "start": "1466280",
    "end": "1476000"
  },
  {
    "text": "PROFESSOR: OK, so\norder of magnitude is a fancy CSE way to say,\nright number of digits.",
    "start": "1476000",
    "end": "1483389"
  },
  {
    "text": "Suppose we're computing this. Or suppose we're\ncomputing the cube",
    "start": "1483390",
    "end": "1489190"
  },
  {
    "text": "root of some number\nin base B. So",
    "start": "1489190",
    "end": "1497879"
  },
  {
    "text": "supposed r is somewhere\nbetween 0 and B.",
    "start": "1497880",
    "end": "1503850"
  },
  {
    "text": "It's one digit in base\nB. How many digits is this result is going to have? ",
    "start": "1503850",
    "end": "1511590"
  },
  {
    "text": "AUDIENCE: The amount\nof digits divided by 3. The amount of digits\nin 2 times B to the 3d. Which is whatever\nB to the 3d is.",
    "start": "1511590",
    "end": "1519810"
  },
  {
    "text": "AUDIENCE: D plus 1? PROFESSOR: OK so roughly\neither d or d plus 1.",
    "start": "1519810",
    "end": "1525150"
  },
  {
    "text": "See, d plus 1. So a decent approximation would\nbe a 1 followed by these zeros.",
    "start": "1525150",
    "end": "1533500"
  },
  {
    "text": "An even better\napproximation is what if we can get the first\ndigit right or almost right?",
    "start": "1533500",
    "end": "1539050"
  },
  {
    "text": "How would we do that?  AUDIENCE: Pick up the\nfirst digit of our r",
    "start": "1539050",
    "end": "1548299"
  },
  {
    "text": "PROFESSOR: OK and I promise\nthat r is one digit. Just So let's say we pick up r. And?",
    "start": "1548300",
    "end": "1554260"
  },
  {
    "text": "AUDIENCE: We do\nNewtons method on that. And we just guess one? Is that a thing?",
    "start": "1554260",
    "end": "1559912"
  },
  {
    "text": "PROFESSOR: Uhh-- AUDIENCE: Take the\ncube root of it. AUDIENCE: It should be\nsome kind of inefficient-- PROFESSOR: Yeah what's some\nkind of inefficient way",
    "start": "1559912",
    "end": "1567800"
  },
  {
    "text": "that we can think of quickly? AUDIENCE: Can you-- AUDIENCE: Binary? PROFESSOR: Did you\nsay divide and-- AUDIENCE: --divide it by 2r?",
    "start": "1567800",
    "end": "1574435"
  },
  {
    "text": "PROFESSOR: Oh, sorry. I thought You were>you\nwere going to say divide and conquer. So I heard binary search,\nso binary search wins.",
    "start": "1574435",
    "end": "1580450"
  },
  {
    "text": "So we're going to\nthe binary search. Binary search from 0 to r.",
    "start": "1580450",
    "end": "1586630"
  },
  {
    "text": "Right? In order to the binary search,\nsuppose I have my guess, g, I want to see how g\ncompares to cube root of r.",
    "start": "1586630",
    "end": "1597522"
  },
  {
    "text": "How do I do this?  So this is equivalent to\ng cubed compared to r.",
    "start": "1597522",
    "end": "1609440"
  },
  {
    "text": "g cubed is to multiplication,\nso I know how to do that. OK?",
    "start": "1609440",
    "end": "1614529"
  },
  {
    "start": "1614529",
    "end": "1620120"
  },
  {
    "text": "Make sense for everyone?  Sorry, r.",
    "start": "1620120",
    "end": "1627059"
  },
  {
    "text": "My bad.  So this is going to be one\ndigit in base, B, so hopefully",
    "start": "1627060",
    "end": "1634799"
  },
  {
    "text": "not too much work. OK. But remember this, you can;t\ndo the comparison directly",
    "start": "1634800",
    "end": "1641234"
  },
  {
    "text": "because you can't\ncompute this directly. So you need to do it this way.",
    "start": "1641234",
    "end": "1646730"
  },
  {
    "text": "AUDIENCE: So r is just the\nfirst digit of the number? PROFESSOR: Yep. ",
    "start": "1646730",
    "end": "1655260"
  },
  {
    "text": "So we're going for a\nslightly easier problem. We're trying to compute the cube\nroot of a single digit number",
    "start": "1655260",
    "end": "1660570"
  },
  {
    "text": "to an arbitrary precision. You can make it harder, but\nthere's no point right now.",
    "start": "1660570",
    "end": "1666809"
  },
  {
    "text": "So we'll stick to this. So how much time will this take? How many approximations\nwill I need to do?",
    "start": "1666810",
    "end": "1674070"
  },
  {
    "text": "By the way, so suppose I\ncompute my approximations. Right? So I compute x0, x1, x2,\nx3, so on and so forth.",
    "start": "1674070",
    "end": "1682300"
  },
  {
    "text": "When do I stop? AUDIENCE: When both\ndigits are the same? PROFESSOR: All the\ndigits are the same.",
    "start": "1682300",
    "end": "1688890"
  },
  {
    "text": "So when one approximation is\nthe same with the next one.",
    "start": "1688890",
    "end": "1695120"
  },
  {
    "text": "That's what you're? Right.  So these are all integers.",
    "start": "1695120",
    "end": "1700640"
  },
  {
    "text": "The moment I get two\nidentical integers, I know there's no point\nto continue because I'm going to get the\nsame value forever.",
    "start": "1700640",
    "end": "1707300"
  },
  {
    "text": "Also this means\nthat Newton's method has converged on this integer. So hopefully I will\nget the answer,",
    "start": "1707300",
    "end": "1712530"
  },
  {
    "text": "which I can convert\ninto the right answer. OK so how fast does this work?",
    "start": "1712530",
    "end": "1719050"
  },
  {
    "text": "What is n? When am I going to stop? AUDIENCE: Log base 2 of d?",
    "start": "1719050",
    "end": "1726215"
  },
  {
    "text": "PROFESSOR: OK. So n is-- so the number of\ndigits in my approximation--",
    "start": "1726215",
    "end": "1739100"
  },
  {
    "text": "the number of correct\ndigits-- doubles every time. So after log these steps,\nI have the right answer.",
    "start": "1739100",
    "end": "1745600"
  },
  {
    "text": "Now what if instead of doing\nthis I did binary search? So instead of doing Newton's\nmethod I do binary search on 0",
    "start": "1745600",
    "end": "1754640"
  },
  {
    "text": "to r? I can do that, right? Because I can get\na guess and then I can use this to see if\nmy guess is right or wrong.",
    "start": "1754640",
    "end": "1764117"
  },
  {
    "text": "So in theory I could\ndo it in binary search. How fast would that be? AUDIENCE: And what\nis the difference between big r and little r?",
    "start": "1764117",
    "end": "1769724"
  },
  {
    "text": " PROFESSOR: Big R is-- oh,\nI didn't write the big r.",
    "start": "1769724",
    "end": "1774895"
  },
  {
    "text": "Big r is this guy, here. AUDIENCE: Oh, OK, gotcha. OK. PROFESSOR: And this is little r. Sorry. Good question, I\napologize for that.",
    "start": "1774895",
    "end": "1782550"
  },
  {
    "text": "So R is little r\ntimes B to the 3d.",
    "start": "1782550",
    "end": "1787960"
  },
  {
    "text": "AUDIENCE: D times log 2 of B-- AUDIENCE: To the d. Log r to the d.",
    "start": "1787960",
    "end": "1793164"
  },
  {
    "text": "AUDIENCE: Oh, it's\nthe same thing. Right. AUDIENCE: Yeah.",
    "start": "1793164",
    "end": "1798400"
  },
  {
    "text": "On the y.  PROFESSOR: OK so the\nnumber of guesses is",
    "start": "1798400",
    "end": "1809110"
  },
  {
    "text": "AUDIENCE: Log big r. PROFESSOR: Log big r. And someone was one step ahead\nand said it's order of B times",
    "start": "1809110",
    "end": "1819169"
  },
  {
    "text": "log little r. Or I think it's d plus little r.",
    "start": "1819170",
    "end": "1825299"
  },
  {
    "text": "So this is order of d.",
    "start": "1825300",
    "end": "1830590"
  },
  {
    "text": "Does this make\nsense for everyone? AUDIENCE: I didn't quite\nfollow what happened there.",
    "start": "1830590",
    "end": "1836704"
  },
  {
    "text": "PROFESSOR: So I'm doing a\nbinary search on the range from 0 to r. How many steps? How many guesses?",
    "start": "1836704",
    "end": "1843018"
  },
  {
    "text": "Log r. Right? This is binary search. R is little r times b to the 3d.",
    "start": "1843018",
    "end": "1853620"
  },
  {
    "text": "So if we log this,\nlog R is log little r",
    "start": "1853620",
    "end": "1860420"
  },
  {
    "text": "plus 3d log B. B is order\none, so we get order of log B.",
    "start": "1860420",
    "end": "1870760"
  },
  {
    "text": "OK so Newton's method\nis exponentially faster in terms of the number of digits\ncompared to binary search.",
    "start": "1870760",
    "end": "1877920"
  },
  {
    "text": "So if you can pull it\noff with Newton's method and you have big\nnumbers, you probably want to use Newton's method.",
    "start": "1877920",
    "end": "1884299"
  },
  {
    "text": "Because binary search will\ngive you a slower algorithm. ",
    "start": "1884299",
    "end": "1890237"
  },
  {
    "text": "OK, how are we doing\nwith these concepts? ",
    "start": "1890238",
    "end": "1897480"
  },
  {
    "text": "I see everyone's unhappy. Is it because of Newton\nor something I said? AUDIENCE: Can you\nsummarize the difference",
    "start": "1897480",
    "end": "1903770"
  },
  {
    "text": "between binary search\nand Newton's, again? So you said binary\nsearch takes kind of long versus Newton's method.",
    "start": "1903770",
    "end": "1910060"
  },
  {
    "text": "PROFESSOR: OK. So how do you do binary search? AUDIENCE: Divide and\nconquer, which is--",
    "start": "1910060",
    "end": "1915140"
  },
  {
    "text": "PROFESSOR: Divide\nand conquer, right? You start out with an interval,\nyou guess somewhere in half, and then you see which half of\nthe interval you recurse onto.",
    "start": "1915140",
    "end": "1922000"
  },
  {
    "text": "And your interval halves\nin size every time. So given the initial size of the\ninterval, the number of guesses",
    "start": "1922000",
    "end": "1928700"
  },
  {
    "text": "you have is log of\nthat interval size. In this case we're guessing\na number between 0 and r.",
    "start": "1928700",
    "end": "1936410"
  },
  {
    "text": "So the big goal is to\ncompute cube root of R. And we're guessing that\nhey, it has to be somewhere between 0 and R. So we're going\nto do binary search on this.",
    "start": "1936410",
    "end": "1945250"
  },
  {
    "text": "And in order to see\nhow our guess compares, we're going to use\nthis trick, here.",
    "start": "1945250",
    "end": "1951031"
  },
  {
    "text": " So the number of guesses\nwe make is log R. Now",
    "start": "1951031",
    "end": "1957640"
  },
  {
    "text": "R is that number, over there. It's little r times B to the 3d.",
    "start": "1957640",
    "end": "1963070"
  },
  {
    "text": "So how many digits does it have? Roughly d digits. So log of R is\ngoing to be order d.",
    "start": "1963070",
    "end": "1970390"
  },
  {
    "text": " OK so if you do binary search\nto guess a d digit number,",
    "start": "1970390",
    "end": "1977600"
  },
  {
    "text": "the running time will\nbe roughly order d. Order of the number of digits. If you use Newton's\nmethod and your function",
    "start": "1977600",
    "end": "1985149"
  },
  {
    "text": "is good and\neverything converges, then you have\nquadratic convergence. Which guarantees that you'll\nhave log of d guesses.",
    "start": "1985150",
    "end": "1991840"
  },
  {
    "text": "Log of d approximations. So Newton's method is a\nlot faster for big numbers, because you have a log\nthere instead of d.",
    "start": "1991840",
    "end": "2000450"
  },
  {
    "text": "So this is the big\ndifference between them. But for Newton, you\nneed a lot of things. Right? You need that function,\nyou need an initial guess,",
    "start": "2000450",
    "end": "2006953"
  },
  {
    "text": "you need a lot of\nthings to make it work. Yes? AUDIENCE: So is that just like\nthe number of times it runs?",
    "start": "2006953",
    "end": "2012858"
  },
  {
    "text": "Because don't you have a\nmultiplication and a division? PROFESSOR: Yep. So this is the\nnumber of guesses.",
    "start": "2012858",
    "end": "2018830"
  },
  {
    "text": "The total running time\nis quite different. You need to jump through a few\nmore hoops to analyze that. But this is the number of\nguesses or approximations",
    "start": "2018830",
    "end": "2028280"
  },
  {
    "text": "that each method makes. So if your math\nwould be order one, this would be the running time.",
    "start": "2028280",
    "end": "2034111"
  },
  {
    "text": "If the math isn't order one,\nthen it gets more complicated.",
    "start": "2034111",
    "end": "2039149"
  },
  {
    "text": "AUDIENCE: So what's the\nrunning time of a division? PROFESSOR: What is running\ntime of the division using",
    "start": "2039150",
    "end": "2044640"
  },
  {
    "text": "Newton's method? It's the same as the running\ntime of the multiplication",
    "start": "2044640",
    "end": "2050309"
  },
  {
    "text": "that you're using to\ncompute your approximations.  And it's like two pages\nof notes to prove that.",
    "start": "2050309",
    "end": "2057888"
  },
  {
    "text": "So let's not go over that now. But the idea is that every\ntime you're multiplying, you start multiplying\nsmall numbers",
    "start": "2057889",
    "end": "2064408"
  },
  {
    "text": "and the numbers double in size\nwhen you're multiplying them. So only the last\nmultiplication counts. All the others are\ntiny compared to that.",
    "start": "2064409",
    "end": "2070419"
  },
  {
    "text": " OK. Anything else about Newton?",
    "start": "2070420",
    "end": "2076429"
  },
  {
    "start": "2076429",
    "end": "2083109"
  },
  {
    "text": "Sorry guys, we have\nNewton on the exam so we have to go through this. Let's go through some\nfun graph problems.",
    "start": "2083110",
    "end": "2089899"
  },
  {
    "text": "OK so we kicked off these two. Graphs the BFS edges and\ngraph transformations.",
    "start": "2089900",
    "end": "2096465"
  },
  {
    "start": "2096465",
    "end": "2107532"
  },
  {
    "text": "OK I'm going to do a\ngraph transformation first because I think that's\nmore useful than BFS edges, but hopefully I'm\ngoing to get to both.",
    "start": "2107532",
    "end": "2113790"
  },
  {
    "start": "2113790",
    "end": "2125650"
  },
  {
    "text": "So suppose I have a graph. Each path is either red or blue.",
    "start": "2125650",
    "end": "2131220"
  },
  {
    "text": " By the way, no political\nconnection whatsoever.",
    "start": "2131220",
    "end": "2138440"
  },
  {
    "text": "And you have weights\non each path. ",
    "start": "2138440",
    "end": "2147280"
  },
  {
    "text": "So we want a path from S to T\nwith the following constraint.",
    "start": "2147280",
    "end": "2152430"
  },
  {
    "text": "So these weights are\nthe costs of, maybe, how much gas you're\nspending to go on that road.",
    "start": "2152430",
    "end": "2159250"
  },
  {
    "text": "So in order to switch from\na red edge to a blue edge, you also have to pay some money. You have to pay a cost of 5.",
    "start": "2159250",
    "end": "2166620"
  },
  {
    "text": "So if you're going\nto go-- if you're going to go from S\nto A-- let's call",
    "start": "2166620",
    "end": "2172520"
  },
  {
    "text": "this guy A-- if you're\ngoing to go this way, then your total cost is 3, 1, 4.",
    "start": "2172520",
    "end": "2183220"
  },
  {
    "text": "If you're going to go from S\nto B, then if you go this way,",
    "start": "2183220",
    "end": "2188599"
  },
  {
    "text": "your total cost is\ngoing to be 3 plus 1 plus 5 for switching from\na red to a blue edge.",
    "start": "2188600",
    "end": "2195380"
  },
  {
    "text": "So the cost for switching\nfrom red to blue is 5. The cost for switching\nfrom blue to red is 5.",
    "start": "2195380",
    "end": "2202601"
  },
  {
    "text": "And I'll let you guys\nthink of it for a bit while I erase the board. ",
    "start": "2202602",
    "end": "2229030"
  },
  {
    "text": "AUDIENCE: What's your goal in\nplaying the best path from-- PROFESSOR: Best path from S\nto T. Smallest total cost.",
    "start": "2229030",
    "end": "2236025"
  },
  {
    "text": "AUDIENCE: OK. ",
    "start": "2236025",
    "end": "2246030"
  },
  {
    "text": "PROFESSOR: So any thoughts? Yes.",
    "start": "2246030",
    "end": "2251289"
  },
  {
    "text": "AUDIENCE: It's\nkind of on the run, but create a supernode\nconnect all the red paths.",
    "start": "2251289",
    "end": "2258135"
  },
  {
    "text": "And create another one\nconnecting all the blue paths. And then try to find the\nshortest length to T just using",
    "start": "2258135",
    "end": "2265470"
  },
  {
    "text": "those two graphs, I guess. PROFESSOR: So you're\ngoing to create",
    "start": "2265470",
    "end": "2270640"
  },
  {
    "text": "a supernode\nconnecting the paths. So how does this work? AUDIENCE: You create\nthe path from S",
    "start": "2270640",
    "end": "2282476"
  },
  {
    "text": "to T just using the reds. PROFESSOR: OK so I'm going\nto copy everything and use the reds.",
    "start": "2282476",
    "end": "2288970"
  },
  {
    "text": "So S, C, D, T, and I'm\nonly going to use the reds.",
    "start": "2288970",
    "end": "2298170"
  },
  {
    "text": "All right, red, red, red.",
    "start": "2298170",
    "end": "2303806"
  },
  {
    "text": " OK.",
    "start": "2303806",
    "end": "2309470"
  },
  {
    "text": "AUDIENCE: And then-- wait,\nis that all the right paths? PROFESSOR: I hope so.",
    "start": "2309470",
    "end": "2315858"
  },
  {
    "text": "AUDIENCE: All right,\nand then you're going to try doing that\nwith the blue paths as well.",
    "start": "2315858",
    "end": "2321380"
  },
  {
    "text": "PROFESSOR: So am I creating\nanother copy of this? AUDIENCE: Yeah. PROFESSOR: OK.",
    "start": "2321380",
    "end": "2326663"
  },
  {
    "start": "2326663",
    "end": "2339571"
  },
  {
    "text": "Let's see, what else, what else? ",
    "start": "2339571",
    "end": "2348940"
  },
  {
    "text": "OK AUDIENCE: From S to T, right?",
    "start": "2348940",
    "end": "2354978"
  },
  {
    "text": "PROFESSOR: A path from S to T? AUDIENCE: Yeah, so you\njust compare the path of S",
    "start": "2354978",
    "end": "2361564"
  },
  {
    "text": "to the path of T.\nSo you completely take that out, the\nadditional cost [INAUDIBLE]",
    "start": "2361564",
    "end": "2367539"
  },
  {
    "text": "just by comparing\nthose two and seeing which ones are\nthe shortest path. AUDIENCE: It's correct\nfor this graph, but it's not correct in general.",
    "start": "2367540",
    "end": "2375010"
  },
  {
    "text": "[INTERPOSING VOICES] AUDIENCE: And the last\noption would be combining--",
    "start": "2375010",
    "end": "2382510"
  },
  {
    "text": "PROFESSOR: OK so if\nI do this so far. So I've taken the original graph\nand I've created two copies. One that has all\nof the red paths,",
    "start": "2382510",
    "end": "2388520"
  },
  {
    "text": "one that has all the blue paths. AUDIENCE: Right. PROFESSOR: By the\nway, let's label this. The nodes are--",
    "start": "2388520",
    "end": "2394760"
  },
  {
    "text": "AUDIENCE: So it would\nwork in this specific case because you [INAUDIBLE].",
    "start": "2394760",
    "end": "2400700"
  },
  {
    "text": "PROFESSOR: So if you compute\nthe two shortest paths here, you'll get the path using only\nreds, path using only blues.",
    "start": "2400700",
    "end": "2406819"
  },
  {
    "text": "But you're not\nexpressing the fact that you're allowed to alternate\nbetween reds and blues.",
    "start": "2406820",
    "end": "2412580"
  },
  {
    "text": "How do you express that? AUDIENCE: Make a\nlot of corrections. AUDIENCE: Put two layers in--",
    "start": "2412580",
    "end": "2417920"
  },
  {
    "text": "PROFESSOR: Two layers. OK so these are two layers. This is the red layer, and\nthis is the blue layer.",
    "start": "2417920",
    "end": "2424240"
  },
  {
    "text": " And how do I connect them?",
    "start": "2424240",
    "end": "2429380"
  },
  {
    "text": "AUDIENCE: If there's\nan edge connecting them on the upper graph, we're\njust connecting them.",
    "start": "2429380",
    "end": "2435750"
  },
  {
    "text": "AUDIENCE: Or connect\nthe respective nodes and make it a 5. PROFESSOR: Both\nanswers work, they",
    "start": "2435750",
    "end": "2441695"
  },
  {
    "text": "have the same number of edges. The last answer is\neasier to visualize, so I'm going to go with that.",
    "start": "2441695",
    "end": "2447000"
  },
  {
    "text": "So I can go from the red\nworld to the blue world, and back, if I'm\nwilling to pay 5. ",
    "start": "2447000",
    "end": "2455690"
  },
  {
    "text": "So this is what-- ",
    "start": "2455690",
    "end": "2462842"
  },
  {
    "text": "AUDIENCE: And you just use\nthose with the new edges. Or not DFS, but Dijkstra's.",
    "start": "2462842",
    "end": "2469426"
  },
  {
    "text": "PROFESSOR: All right so all the\nedges here are positive, right? So I'm going to use Dijkstra. ",
    "start": "2469426",
    "end": "2478359"
  },
  {
    "text": "AUDIENCE: Is there any\ncase in a positive graph that Dijkstra's slower\nthan Bellman-Ford?",
    "start": "2478360",
    "end": "2484859"
  },
  {
    "text": "Because one is like b log b,\nand the other one is like b e. Right? So if you have a lot of-- PROFESSOR: OK so\nwhat is Dijkstra?",
    "start": "2484860",
    "end": "2491502"
  },
  {
    "text": "AUDIENCE: B log b- PROFESSOR: Almost. AUDIENCE: T log\nb, I think, right? That's the theoretical\nbest case ever,",
    "start": "2491502",
    "end": "2499170"
  },
  {
    "text": "PROFESSOR: So actually,\nthe theoretical is E plus-- AUDIENCE: Yeah,\nthat's what I meant. AUDIENCE: Oh.",
    "start": "2499170",
    "end": "2505042"
  },
  {
    "text": "Oh-- PROFESSOR: This is what\nyou get with heaps, so this is what we\ngot in the P set.",
    "start": "2505042",
    "end": "2510722"
  },
  {
    "text": "AUDIENCE: What\nwas the first one? AUDIENCE: The first one\nis like Fibonacci heaps. It's got a really\nhigh constant factor,",
    "start": "2510722",
    "end": "2517000"
  },
  {
    "text": "so you never actually use it. PROFESSOR: So this is a\nnice theoretical thing, and this is what\nyou get in practice.",
    "start": "2517000",
    "end": "2523680"
  },
  {
    "text": "If you use the\nregular binary heaps. And so you compare\nthis to Bellman-Ford which is-- whoops--\nV times E. I'm",
    "start": "2523680",
    "end": "2536340"
  },
  {
    "text": "going to guess that this\nis faster no matter what. AUDIENCE: Yes, OK. So the theoretical one could\nbe slower, then, possible.",
    "start": "2536340",
    "end": "2545660"
  },
  {
    "text": "The Fibonacci one? Because if you have a ton of\nvertices without many edges.",
    "start": "2545660",
    "end": "2552499"
  },
  {
    "text": "PROFESSOR: OK If you\nhave a ton of vertices but not too many edges. AUDIENCE: Yeah. PROFESSOR: Then you're\nsaying that this",
    "start": "2552499",
    "end": "2558500"
  },
  {
    "text": "is going to be bigger than--\nso what do you do in that case? AUDIENCE: I mean you could just\nignore the vertices, I guess.",
    "start": "2558500",
    "end": "2565129"
  },
  {
    "text": "PROFESSOR: OK so if\nyou have a ton of vertices and not\nthat many edges. So if you have edges\nsmaller-- sorry-- yeah,",
    "start": "2565129",
    "end": "2571790"
  },
  {
    "text": "it's just smaller\nthan vertices, then some vertices have\nto be unconnected. So what to do?",
    "start": "2571790",
    "end": "2577091"
  },
  {
    "text": "AUDIENCE: You just ignore them. AUDIENCE: You're not going\nto reach them anyway. PROFESSOR: How do\nyou ignore them? How do you ignore them in-- AUDIENCE: Oh, I see your point.",
    "start": "2577091",
    "end": "2582750"
  },
  {
    "text": "So you're never going\nto get to them anyways. So-- AUDIENCE: Well no, but\nonce you've started at one, you're going to have\nto touch them all.",
    "start": "2582750",
    "end": "2588888"
  },
  {
    "text": "They're all going\nto be in the heap. Yeah. AUDIENCE: No, don't\nput them in the heap",
    "start": "2588888",
    "end": "2593906"
  },
  {
    "text": "until you look at them. AUDIENCE: Well, there's\na starting point, right?",
    "start": "2593906",
    "end": "2599210"
  },
  {
    "text": "If you can't go anywhere in the\nstarting point, you're done. PROFESSOR: OK so you take the\nstarting point and you do--",
    "start": "2599210",
    "end": "2606703"
  },
  {
    "text": "[INTERPOSING VOICES] PROFESSOR: Ok so I would take\nthe starting point and do a BFS",
    "start": "2606704",
    "end": "2611740"
  },
  {
    "text": "and ignore everything else. And that is clearly order of\nhow many vertices and edges that",
    "start": "2611740",
    "end": "2617355"
  },
  {
    "text": "are reachable from that. So that will give\nyou a nice graph. Either that, or if you\ninitialization your Dijkstra",
    "start": "2617355",
    "end": "2623570"
  },
  {
    "text": "carefully enough, this\nactually only reflects the reachable\nedges and vertices.",
    "start": "2623570",
    "end": "2628630"
  },
  {
    "text": "So you never have this. So either one works. In theory mode, it might be\nbetter to say I'll do a BFS",
    "start": "2628630",
    "end": "2635234"
  },
  {
    "text": "and reduce the graph. Because that's easier to argue. Yes. AUDIENCE: So, for\nthis, when you make all",
    "start": "2635235",
    "end": "2643829"
  },
  {
    "text": "that-- I guess my\nquestion is are we going to be asked to\ntalk about running times",
    "start": "2643830",
    "end": "2649410"
  },
  {
    "text": "for different transformation? Or the algorithms? PROFESSOR: Well so at\nthe very least, last time",
    "start": "2649410",
    "end": "2654730"
  },
  {
    "text": "we said, this is the problem. Give us an algorithm\nwith this running time. AUDIENCE: Right.",
    "start": "2654730",
    "end": "2659840"
  },
  {
    "text": "PROFESSOR: So you have\nto be able to know your transformations. So not the running for\ncomputing the transformation, but you have to be able to know\nhow much bigger the graph gets",
    "start": "2659840",
    "end": "2667650"
  },
  {
    "text": "and what that implies\nfor the running time. Turns out that usually\nfor these transformations you can compute\nthem in linear time.",
    "start": "2667650",
    "end": "2673310"
  },
  {
    "text": "So the time for computing\na transformation is much smaller than\nthe time for running Dijkstra or Bellman-Ford.",
    "start": "2673310",
    "end": "2678450"
  },
  {
    "text": "So that's why we don't\nreally go into that. This one is definitely\nlinear time.",
    "start": "2678450",
    "end": "2685440"
  },
  {
    "text": "So what happens to the\ngraph in this case? Number of edges and\nnumber of vertices.",
    "start": "2685440",
    "end": "2692503"
  },
  {
    "text": "AUDIENCE: Number of\nedges increases by V and number of vertices. So increase by V.",
    "start": "2692503",
    "end": "2699130"
  },
  {
    "text": "PROFESSOR: That's\nV, and times is 2. So you plug this into\nBellman-Ford or Dijkstra,",
    "start": "2699130",
    "end": "2704650"
  },
  {
    "text": "you find out the\nnew running time. So every time you see what is\nthe size of your new graph, and you plug that\ninto the algorithm.",
    "start": "2704650",
    "end": "2710531"
  },
  {
    "text": " OK so what is the\nintuition behind this?",
    "start": "2710531",
    "end": "2716020"
  },
  {
    "text": "Did everyone get this problem?  So it's the old problem\nthat we're going through",
    "start": "2716020",
    "end": "2722530"
  },
  {
    "text": "again and again, where you\nhave a graph that's 2D, and we want to compute\nsomething that Dijkstra",
    "start": "2722530",
    "end": "2728977"
  },
  {
    "text": "can't compute on it's own. Or that Bellman-Ford\ncan't compute on it's own. So in order to be able\nto compute those things,",
    "start": "2728977",
    "end": "2734800"
  },
  {
    "text": "we need to add additional\nstates to the graph. And the way we do that is\nwe make copies of the graph that we call layers.",
    "start": "2734800",
    "end": "2740590"
  },
  {
    "text": "Because we're thinking that if\nyou take that 2D map, and you create copies of\nit, you basically",
    "start": "2740590",
    "end": "2746330"
  },
  {
    "text": "have a 3D graph where there\nis the original graph. ",
    "start": "2746330",
    "end": "2752560"
  },
  {
    "text": "That's the science part\nof the problem, the art part of solving the\nproblem is figuring out what those layers are\nand how you connect them.",
    "start": "2752560",
    "end": "2759549"
  },
  {
    "text": "Because by doing that you\ncan solve a ton of problems, as we have seen in this class.",
    "start": "2759550",
    "end": "2765309"
  },
  {
    "text": "AUDIENCE: Is there a\npossibility that you have a very large\nnumber of layers needed to be permutations\nof-- different choice",
    "start": "2765310",
    "end": "2774598"
  },
  {
    "text": "to make instead of\njust a red or a blue? PROFESSOR: Yep. So is there a problem where\nwe had a ton of layers?",
    "start": "2774598",
    "end": "2781536"
  },
  {
    "text": "AUDIENCE: Mhmm. PROFESSOR: Yep. OK so two problems, right? AUDIENCE: One for every second.",
    "start": "2781536",
    "end": "2786942"
  },
  {
    "text": "[LAUGHS] PROFESSOR: And so these\nare the layers, presumably. We had two problems that\nhad a ton of layers.",
    "start": "2786942",
    "end": "2793750"
  },
  {
    "text": "One of them was\nthe highway problem where you had timetables. And there, the number\nof layers was the number",
    "start": "2793750",
    "end": "2799172"
  },
  {
    "text": "of minutes in the day\nyou're considering. So roughly, 1440. And the other one was StarCraft\nwhere the number of layers",
    "start": "2799172",
    "end": "2807410"
  },
  {
    "text": "was something ginormous, right? So as long as that fits\nthe theory, that's fine.",
    "start": "2807410",
    "end": "2813106"
  },
  {
    "text": "As long as the number of layers\nfits whatever the problem wants you to compute, its OK. AUDIENCE: So transforming\nanother layer,",
    "start": "2813106",
    "end": "2821303"
  },
  {
    "text": "is that like in V time because\ncopying the number of vertices?",
    "start": "2821303",
    "end": "2827150"
  },
  {
    "text": "PROFESSOR: Yeah,\nso you should be able to implement this in\norder of V plus E, which",
    "start": "2827150",
    "end": "2832640"
  },
  {
    "text": "is what you need to output\nthe new graph description. I claim that for this you can.",
    "start": "2832640",
    "end": "2839405"
  },
  {
    "text": "AUDIENCE: So for E prime, I\nguess, how'd you get that? PROFESSOR: So for\neach vertex you",
    "start": "2839405",
    "end": "2846375"
  },
  {
    "text": "are going to create a\nred copy and a blue copy. 2V, this is easy. Now, the red edges stay in here,\nthe blue edges stay in here.",
    "start": "2846375",
    "end": "2854770"
  },
  {
    "text": "So nothing changed so far. But each red vertex needs to\nbe connected to the blue vertex by an edge of weight 5.",
    "start": "2854770",
    "end": "2862320"
  },
  {
    "text": "So that means that we're going\nto copy over the original edges and we're going to add the\nedges that connect the vertices.",
    "start": "2862320",
    "end": "2869656"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: So we're not going\nto ask about the running time of the\ntransformations in general.",
    "start": "2869656",
    "end": "2875450"
  },
  {
    "text": "Because we assume that they\ncan be done in linear time. But you need to at least have a\nsense of whether your graph is",
    "start": "2875450",
    "end": "2881150"
  },
  {
    "text": "going to double,\nwhether it's going to increase exponentially, or\nwhat's going to happen to it. So let's make a small\ntweak to this problem.",
    "start": "2881150",
    "end": "2888100"
  },
  {
    "text": "Suppose that the\ninstead of having this, I can go from red to\nblue, but once I've",
    "start": "2888100",
    "end": "2893460"
  },
  {
    "text": "gone from red to\nblue, I can't go back. So I can start out either red\nor blue, I can go red to blue,",
    "start": "2893460",
    "end": "2900850"
  },
  {
    "text": "but once I'm in blue I\ncan't go back to red. AUDIENCE: Make those\ndirected edges. PROFESSOR: From where to where?",
    "start": "2900850",
    "end": "2907390"
  },
  {
    "text": "AUDIENCE: Red to blue. ",
    "start": "2907390",
    "end": "2912510"
  },
  {
    "text": "PROFESSOR: OK so this is\nhow I express constraints, in constraints among layers.",
    "start": "2912510",
    "end": "2919570"
  },
  {
    "text": "Before, we had two\nlayers, red and blue. And we connected them by\nan edge of weight 5, which",
    "start": "2919570",
    "end": "2925216"
  },
  {
    "text": "says you can go from\nred world to blue world, and back, all you\nhave to do is pay 5.",
    "start": "2925216",
    "end": "2930460"
  },
  {
    "text": "If we have directed edges,\nthen this is a constraint. If the constraint\nsaid there's no cost,",
    "start": "2930460",
    "end": "2936690"
  },
  {
    "text": "but you can only go\nfrom red to blue, you still have to do two layers. And keep track of\nwhich layer you're in.",
    "start": "2936690",
    "end": "2942790"
  },
  {
    "text": "But then your edge\nof the weight 0. Since we have to pay,\nthe edge is weight 5. ",
    "start": "2942790",
    "end": "2950589"
  },
  {
    "text": "So we can use layers to\nexpress additional costs, or just to express constraints. ",
    "start": "2950590",
    "end": "2957150"
  },
  {
    "text": "Does this make sense? AUDIENCE: Does this include\nback edges, or forward edges, as well? PROFESSOR: Let's get to that.",
    "start": "2957150",
    "end": "2962910"
  },
  {
    "text": "OK, so does this\nmake sense so far? One more question, what shortest\npath do I want to compute here?",
    "start": "2962910",
    "end": "2968330"
  },
  {
    "text": " To make sure that\nyou guys got it.",
    "start": "2968330",
    "end": "2974640"
  },
  {
    "text": "AUDIENCE: Oh, you have to\ndo two of them maybe, four-- PROFESSOR: OK, I\nlike four of them. So I have to do SR, TR,\nSR, TB, SB, TR, SB, TB.",
    "start": "2974640",
    "end": "2986290"
  },
  {
    "text": "Fortunately, our\nalgorithms give us the shortest path\nfrom one source to all of the other vertices. So I'd only have to run\nDijkstra or Bellman-Ford twice.",
    "start": "2986290",
    "end": "2994079"
  },
  {
    "text": "What if I want to run\nthe algorithm once? What do I do? AUDIENCE: You put\nvertices on the edges.",
    "start": "2994080",
    "end": "3000020"
  },
  {
    "text": "PROFESSOR: OK so supernode\nas a source, supernode as a destination.",
    "start": "3000020",
    "end": "3005550"
  },
  {
    "text": "And I connect them to what? AUDIENCE: Zero weight. PROFESSOR: To? AUDIENCE: The two.",
    "start": "3005550",
    "end": "3010880"
  },
  {
    "text": "AUDIENCE: Final V. PROFESSOR: OK, very good. And? AUDIENCE: Same.",
    "start": "3010880",
    "end": "3016410"
  },
  {
    "text": " PROFESSOR: So what\nhappened here?",
    "start": "3016410",
    "end": "3021490"
  },
  {
    "text": "This says you can go anywhere. And this says you can\ncome back from anywhere.",
    "start": "3021490",
    "end": "3026494"
  },
  {
    "text": "AUDIENCE: Bridge\nbetween the worlds. PROFESSOR: Yep. [AUDIENCE LAUGHING]",
    "start": "3026494",
    "end": "3032190"
  },
  {
    "text": "PROFESSOR: So do we want this\nto be directed or undirected, by the way, does it matter?",
    "start": "3032190",
    "end": "3037384"
  },
  {
    "text": "AUDIENCE: Directed. You can only go one way-- AUDIENCE: Oh, depends on which\nproblem you're talking about. ",
    "start": "3037384",
    "end": "3045592"
  },
  {
    "text": "PROFESSOR: I think if\nthey're undirected, it shouldn't matter too\nmuch, because there shouldn't be a path where you go back to\nthe source and then you switch.",
    "start": "3045592",
    "end": "3054630"
  },
  {
    "text": "But this would be\nif you're on a quiz and you don't want\nto think about that, I'd make them directed\njust to be on the safe side.",
    "start": "3054630",
    "end": "3060488"
  },
  {
    "text": "AUDIENCE: What were\nthe four shortest paths you said we\nneeded to calculate for the original problem,\nbefore you added the supernodes? PROFESSOR: So we don't\nknow whether we start out",
    "start": "3060488",
    "end": "3067760"
  },
  {
    "text": "with a red edge-- AUDIENCE: Right. PROFESSOR: --with a blue edge. We don't know whether we end up\nwith a red edge or a blue edge.",
    "start": "3067760",
    "end": "3073911"
  },
  {
    "text": "AUDIENCE: Stay in red\nworld, stay in blue world, red to blue and blue to red. PROFESSOR: Yeah OK, cool.",
    "start": "3073911",
    "end": "3081060"
  },
  {
    "text": "So let's talk about BFS and\nDFS very briefly, I guess. ",
    "start": "3081060",
    "end": "3087110"
  },
  {
    "text": "So BFS and DFS.  What does BFS give us?",
    "start": "3087110",
    "end": "3092450"
  },
  {
    "text": "Why is it useful? AUDIENCE: Shortest paths.",
    "start": "3092450",
    "end": "3097700"
  },
  {
    "text": "PROFESSOR: Shortest\npaths in terms of number of edges, right? No weight on the engines.",
    "start": "3097700",
    "end": "3102710"
  },
  {
    "text": "So shortest paths using\nthe number of edges.",
    "start": "3102710",
    "end": "3112369"
  },
  {
    "text": "What does DFS give us? AUDIENCE: Topological start.",
    "start": "3112370",
    "end": "3117802"
  },
  {
    "text": "PROFESSOR: Hey, man, you\nhad this on the P set, I wouldn't call it nothing. ",
    "start": "3117802",
    "end": "3125090"
  },
  {
    "text": "OK, how does BFS\nlook at the graph? How does it partition the graph?",
    "start": "3125090",
    "end": "3130810"
  },
  {
    "text": "Nodes are grouped into-- AUDIENCE: Levels. PROFESSOR: Levels. AUDIENCE: The light\ndistance and the source. ",
    "start": "3130810",
    "end": "3137267"
  },
  {
    "text": "PROFESSOR: So you\nstart with a source, and then all the nodes\nthat are one edge away are at level one,\nall the nodes that",
    "start": "3137267",
    "end": "3143910"
  },
  {
    "text": "are two edges away are level\ntwo, so on and so forth.",
    "start": "3143910",
    "end": "3148960"
  },
  {
    "text": "What does DFS give us? ",
    "start": "3148960",
    "end": "3154470"
  },
  {
    "text": "A mess? A mess, right? So it gives us edge types.",
    "start": "3154470",
    "end": "3159890"
  },
  {
    "text": " And it gives us exit times.",
    "start": "3159890",
    "end": "3166775"
  },
  {
    "text": " Exit times are useful for\ntopological sort, right?",
    "start": "3166775",
    "end": "3173415"
  },
  {
    "text": "Yes. AUDIENCE: It also\ngives us a tree. PROFESSOR: OK, does\nBFS give us a tree?",
    "start": "3173415",
    "end": "3180360"
  },
  {
    "text": "AUDIENCE: Yes. AUDIENCE: Yes, they\nboth give us trees. PROFESSOR: So both of\nthem will give us trees. ",
    "start": "3180360",
    "end": "3190380"
  },
  {
    "text": "So what are those trees? For each node, BFS or\nDFS discovered that node",
    "start": "3190380",
    "end": "3196450"
  },
  {
    "text": "by going from some parent\nnode across an edge. So that edge belongs to\nthe BFS or to the DFS tree.",
    "start": "3196450",
    "end": "3203609"
  },
  {
    "text": "How do we compute those trees?  AUDIENCE: Just do it?",
    "start": "3203610",
    "end": "3209502"
  },
  {
    "text": "PROFESSOR: So how do\nyou, in BFS and DFS, what do you compute to-- AUDIENCE: Parent pointers? PROFESSOR: Parent pointers.",
    "start": "3209502",
    "end": "3215160"
  },
  {
    "text": "So that's what you use\nto keep track of them. Sorry the question\nis bad but that's what I want you\nto get out of it.",
    "start": "3215160",
    "end": "3222080"
  },
  {
    "text": "Parent pointers. So DFS and BFS will both\ncompute trees of the graph.",
    "start": "3222080",
    "end": "3227620"
  },
  {
    "text": "Are they the same trees\nor different trees? AUDIENCE: Probably different.",
    "start": "3227620",
    "end": "3233060"
  },
  {
    "text": "PROFESSOR: Different\ntrees, right? Let's take this. ",
    "start": "3233060",
    "end": "3238160"
  },
  {
    "text": "S, A, B, right? BFS will give us this,\nDFS will give us this.",
    "start": "3238160",
    "end": "3247072"
  },
  {
    "text": " OK, what edge types\ndo we have in DFS?",
    "start": "3247072",
    "end": "3255010"
  },
  {
    "text": "AUDIENCE: Forward edges. PROFESSOR: OK, forward. Cool. What are they? AUDIENCE: Those are\njust from parent",
    "start": "3255010",
    "end": "3261675"
  },
  {
    "text": "to children that\nare being presented. PROFESSOR: OK.",
    "start": "3261675",
    "end": "3267430"
  },
  {
    "text": "AUDIENCE: So, I don't\nknow how else to put it. PROFESSOR: OK so you should\nhave this on your cheat sheet,",
    "start": "3267430",
    "end": "3272460"
  },
  {
    "text": "right? If nobody knows the\nanswer, you should have it on your cheat sheet.",
    "start": "3272460",
    "end": "3277620"
  },
  {
    "text": "So tree edges, the ones that\nshow up in the DFS tree.",
    "start": "3277620",
    "end": "3283000"
  },
  {
    "text": "Backwards edges, AUDIENCE: Cross edges. PROFESSOR: Cross edges. AUDIENCE: Forward edges.",
    "start": "3283000",
    "end": "3290329"
  },
  {
    "text": "PROFESSOR: And forward edges. If your graph is undirected,\nwhat types of edges",
    "start": "3290330",
    "end": "3296790"
  },
  {
    "text": "do you not have? AUDIENCE: Forward edges.",
    "start": "3296790",
    "end": "3301825"
  },
  {
    "text": "Forward edges and\nbackward edges. Or no, forward edges. ",
    "start": "3301825",
    "end": "3310712"
  },
  {
    "text": "PROFESSOR: OK. So this is a lecture\nnotes, and we're going to go over them tonight.",
    "start": "3310712",
    "end": "3317680"
  },
  {
    "text": "But if you can't make it,\nthey're in lecture notes. So you should have this\non your cheat sheet if you don't know them.",
    "start": "3317680",
    "end": "3324040"
  },
  {
    "text": "Right? Nobody answered today, so\nif you guys don't have them on your cheat sheet\nI will be upset.",
    "start": "3324040",
    "end": "3329700"
  },
  {
    "text": "OK. Cool. More questions?",
    "start": "3329700",
    "end": "3336591"
  },
  {
    "text": "AUDIENCE: Edges do not\nexist in BFS, edge types?  PROFESSOR: DFS uses-- so\nout of BFS we get levels,",
    "start": "3336591",
    "end": "3344160"
  },
  {
    "text": "and out DFS we get\nthose edge types. AUDIENCE: Is there--\nabout the edge types?",
    "start": "3344160",
    "end": "3354359"
  },
  {
    "text": "PROFESSOR: Some algorithms\nuse them in their proofs. So the proof for\ntopological sort",
    "start": "3354360",
    "end": "3359609"
  },
  {
    "text": "uses the fact that in\ndirected acyclic graphs, you won't have some\ntypes of edges. For the other types\nof edges it argues",
    "start": "3359610",
    "end": "3366120"
  },
  {
    "text": "that the order that you\nget from topological sort is the right order. So it's mostly theoretical\nbut since we taught you",
    "start": "3366120",
    "end": "3372320"
  },
  {
    "text": "about edge types, we\nmight ask you about them. Yes. AUDIENCE: So does\nDFS actually-- is",
    "start": "3372320",
    "end": "3378280"
  },
  {
    "text": "it able to distinguish\nbetween back-crossing over, or is it only-- does it only\nsee that the node has already",
    "start": "3378280",
    "end": "3384590"
  },
  {
    "text": "been visited by something? PROFESSOR: So how would you make\nit distinguish between them?",
    "start": "3384590",
    "end": "3392558"
  },
  {
    "text": "You have to, right? Because otherwise, why\nare we studying them? There has to be a way to\ndistinguish between them.",
    "start": "3392559",
    "end": "3397780"
  },
  {
    "text": "AUDIENCE: Because the\nDFS does recursive calls and you know where the back is.",
    "start": "3397780",
    "end": "3403300"
  },
  {
    "text": "PROFESSOR: So let's\ndo a DFS tree quickly. ",
    "start": "3403300",
    "end": "3411369"
  },
  {
    "text": "So suppose we went like this. And then like this,\nthis, and then this.",
    "start": "3411370",
    "end": "3422140"
  },
  {
    "text": "Sorry, I'm trying really hard to\nmake up an example on the spot such that I won't\ndiscount myself.",
    "start": "3422140",
    "end": "3429028"
  },
  {
    "start": "3429028",
    "end": "3437400"
  },
  {
    "text": "How do I get that, do you know? AUDIENCE: Maybe an edge\nfrom the second one to the last one on the right.",
    "start": "3437400",
    "end": "3445870"
  },
  {
    "text": "PROFESSOR: Here? AUDIENCE: Yeah and this\nwill be the arrowhead, and you can start\nfrom the second one.",
    "start": "3445870",
    "end": "3453467"
  },
  {
    "text": "PROFESSOR: This one? AUDIENCE: Yeah. Wouldn't that be a forward edge?",
    "start": "3453467",
    "end": "3458818"
  },
  {
    "text": "PROFESSOR: OK AUDIENCE: Because\nit's downward-- PROFESSOR: Yeah, I like that. OK, I like that.",
    "start": "3458819",
    "end": "3465010"
  },
  {
    "text": "OK so S, A, B, C,\nD, E. So assume",
    "start": "3465010",
    "end": "3471770"
  },
  {
    "text": "this is the order that they\nlisted in adjacency list. So let's label all of the edges.",
    "start": "3471770",
    "end": "3476940"
  },
  {
    "text": "SA and SB are what? AUDIENCE: Forward edges.",
    "start": "3476940",
    "end": "3482230"
  },
  {
    "text": "PROFESSOR: OK AC? AUDIENCE: Forward.",
    "start": "3482230",
    "end": "3488060"
  },
  {
    "text": "PROFESSOR: CD? AUDIENCE: Forward. PROFESSOR: CE? AUDIENCE: Forward.",
    "start": "3488060",
    "end": "3493400"
  },
  {
    "text": "PROFESSOR: OK, AE?  AUDIENCE: Aren't\nthose tree edges?",
    "start": "3493400",
    "end": "3498484"
  },
  {
    "text": "AUDIENCE: That's a forward edge. PROFESSOR: That\ntook a while, guys. That took a while.",
    "start": "3498484",
    "end": "3504601"
  },
  {
    "text": "AUDIENCE: It goes forward. AUDIENCE: Well no,\nforward means like you're skipping a generation.",
    "start": "3504602",
    "end": "3509951"
  },
  {
    "text": "PROFESSOR: OK so\nthe three edges.  AUDIENCE: [INAUDIBLE]",
    "start": "3509951",
    "end": "3515760"
  },
  {
    "text": "PROFESSOR: So the three\nedges are the ones that DFS uses to go forward. So they're the ones\nthat map the DFS calls.",
    "start": "3515760",
    "end": "3521190"
  },
  {
    "text": " So how do we express that? So suppose you're at some node\nu, and you have an edge, uv.",
    "start": "3521190",
    "end": "3532264"
  },
  {
    "text": "AUDIENCE: The parent of v is u. PROFESSOR: So you're\nat here, right now. ",
    "start": "3532264",
    "end": "3539640"
  },
  {
    "text": "OK, so v.parent has to be u. And?",
    "start": "3539640",
    "end": "3545940"
  },
  {
    "text": "v is? Is it visited or not? AUDIENCE: It's a new vertex.",
    "start": "3545940",
    "end": "3551130"
  },
  {
    "text": "AUDIENCE: It's not. PROFESSOR: So v is\nnot visited yet. ",
    "start": "3551130",
    "end": "3561160"
  },
  {
    "text": "So this is a tree edge. Now let's compare this\nto a forward edge. ",
    "start": "3561160",
    "end": "3572180"
  },
  {
    "text": "So what happens\nto a forward edge? AUDIENCE: Parents of children-- AUDIENCE: Parent ancestors--",
    "start": "3572180",
    "end": "3579345"
  },
  {
    "text": "PROFESSOR: So you're\nat here right now. ",
    "start": "3579345",
    "end": "3584690"
  },
  {
    "text": "And you're looking\nat the edge uv. Right? so we're\nlooking at the edge uv. uv would point\ndownward in the tree.",
    "start": "3584690",
    "end": "3591470"
  },
  {
    "text": "What's true about-- AUDIENCE: v.parent is u.",
    "start": "3591470",
    "end": "3596557"
  },
  {
    "text": "AUDIENCE: No-- AUDIENCE: Not necessarily. PROFESSOR: OK. So v.parent is u.",
    "start": "3596557",
    "end": "3604560"
  },
  {
    "text": "So it can be the parent,\nor the grandparent, or-- so u has to be\nsomewhere up the tree.",
    "start": "3604560",
    "end": "3610349"
  },
  {
    "text": "Right? So I can have a ton\nof dot parents here. AUDIENCE: There has to be more\nthan one dot parent, right?",
    "start": "3610350",
    "end": "3617070"
  },
  {
    "text": "Because otherwise\nwe get tree edge. It can't just be one parent. PROFESSOR: OK.",
    "start": "3617070",
    "end": "3622644"
  },
  {
    "text": "AUDIENCE: So you'd have to\nrecurse up more than once. PROFESSOR: Yep. So for a node you go up until\nyou find u, and if you found u,",
    "start": "3622644",
    "end": "3629559"
  },
  {
    "text": "then it's a forward\nedge, otherwise, if you find the root of\nthe tree then you give up.",
    "start": "3629560",
    "end": "3635967"
  },
  {
    "text": "AUDIENCE: Well then\nit's a cross edge.  If you go up and you get\nto the root but-- oh--",
    "start": "3635967",
    "end": "3644230"
  },
  {
    "text": "PROFESSOR: Yeah, so if\nyou got to the root, it is not the forward edge. Right now we're looking\nat what does it mean.",
    "start": "3644230",
    "end": "3649880"
  },
  {
    "text": "So you have to be somewhere\naround the ancestor chain of u, so if you keep following v's\nparents, you have to see u.",
    "start": "3649880",
    "end": "3656070"
  },
  {
    "text": "If not, it's not\nthe forward edge. OK. And when you see\nit, did you visit it",
    "start": "3656070",
    "end": "3662070"
  },
  {
    "text": "or did you not visit it? AUDIENCE: Already visited. ",
    "start": "3662070",
    "end": "3670650"
  },
  {
    "text": "PROFESSOR: OK. So now we have two more edge\ntypes, we have back edges,",
    "start": "3670650",
    "end": "3675680"
  },
  {
    "text": "and we have cross edges. Right? Show me a back edge here.",
    "start": "3675680",
    "end": "3681608"
  },
  {
    "text": "AUDIENCE: DA. PROFESSOR: DA is a back edge. OK back edges are\nalso reasonably easy. So let's do those.",
    "start": "3681608",
    "end": "3687320"
  },
  {
    "text": " What's a back edge. So I am at u now.",
    "start": "3687320",
    "end": "3694525"
  },
  {
    "text": "I'm looking at the edge uv. AUDIENCE: It's a cycle. AUDIENCE: Node to ancestor.",
    "start": "3694525",
    "end": "3700710"
  },
  {
    "text": "PROFESSOR: Sorry? AUDIENCE: It's a\nnode to an ancestor. PROFESSOR: OK so who\nis who's ancestor?",
    "start": "3700710",
    "end": "3706295"
  },
  {
    "text": "AUDIENCE: A is D's ancestor. AUDIENCE: V is u's ancestor. PROFESSOR: OK.",
    "start": "3706295",
    "end": "3711680"
  },
  {
    "text": "So if I keep going,\nu.parent many times over,",
    "start": "3711680",
    "end": "3720000"
  },
  {
    "text": "I should eventually\nsee v. Uhh-- yeah.",
    "start": "3720000",
    "end": "3725540"
  },
  {
    "text": "So the difference\nbetween this and this is who is who's parent?",
    "start": "3725540",
    "end": "3731324"
  },
  {
    "text": "AUDIENCE: Wait, wouldn't\nu be a parent of v? Because we didn't go from\nA to C to D and then at D",
    "start": "3731324",
    "end": "3740000"
  },
  {
    "text": "I realize that I\ncan go to A, but I won't go because\nit's already visited?",
    "start": "3740000",
    "end": "3747090"
  },
  {
    "text": "PROFESSOR: Wait. AUDIENCE: But assuming that-- AUDIENCE: A is an ancestor of D. PROFESSOR: So A is\nan ancestor of D",
    "start": "3747090",
    "end": "3753290"
  },
  {
    "text": "because by the time\nI got to D, I've already set the parent\npointers for C and D.",
    "start": "3753290",
    "end": "3762419"
  },
  {
    "text": "AUDIENCE: Yes. But-- wait. u.parent is v. Then u is\nA here and v is D here--",
    "start": "3762419",
    "end": "3770114"
  },
  {
    "text": "AUDIENCE: No u is D here. PROFESSOR: I'm at u\nright now, so I'm at D. And I'm looking at the edge uv.",
    "start": "3770114",
    "end": "3777540"
  },
  {
    "text": "AUDIENCE: Do we have\na cross edge in here? PROFESSOR: Do we have\na cross edge in here. Good question. What is the cross edge?",
    "start": "3777540",
    "end": "3783838"
  },
  {
    "text": "AUDIENCE: C? PROFESSOR: OK so this\nguy is a cross edge. So what is the difference\nbetween a cross edge",
    "start": "3783838",
    "end": "3790346"
  },
  {
    "text": "and a forward edge? [CLASS MURMURS]",
    "start": "3790346",
    "end": "3796015"
  },
  {
    "text": "AUDIENCE: It's not an ancestor. AUDIENCE: Ancester goes up to S.",
    "start": "3796015",
    "end": "3802150"
  },
  {
    "text": "PROFESSOR: So a cross edge is\nvery close to a forward edge except u is not an ancestor\nof v. v in the DFS tree.",
    "start": "3802150",
    "end": "3818670"
  },
  {
    "text": " OK?",
    "start": "3818670",
    "end": "3824434"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: Yep.",
    "start": "3824434",
    "end": "3829846"
  },
  {
    "text": "Yep. So the only common ancestor\nbetween B and C is the source.",
    "start": "3829846",
    "end": "3835998"
  },
  {
    "start": "3835998",
    "end": "3844720"
  },
  {
    "text": "OK so please get these\nconditions in the notes. So as a summary, if it's\nan edge that DFS uses,",
    "start": "3844720",
    "end": "3851145"
  },
  {
    "text": "it's a tree edge. If it's going against the way\nof the DFS, it's a back edge.",
    "start": "3851145",
    "end": "3856960"
  },
  {
    "text": "If it fast forwards\nin DFS, so instead of going one level down, it\ndoes multiple levels down,",
    "start": "3856960",
    "end": "3864320"
  },
  {
    "text": "then it's a forward edge. And otherwise, it's weird\nedge so it's a cross edge.",
    "start": "3864320",
    "end": "3870520"
  },
  {
    "text": "One way to look at it. Yeah. AUDIENCE: Is this\nonly true because we were going alphabetically?",
    "start": "3870520",
    "end": "3875880"
  },
  {
    "text": "PROFESSOR: Yeah, this\ndepends on the order in which the nodes are\nlisted in the adjacency list. AUDIENCE: So it could've\nbeen pretty different",
    "start": "3875880",
    "end": "3883309"
  },
  {
    "text": "if we went from A to E? PROFESSOR: Oh Yeah, yeah. Yep.",
    "start": "3883310",
    "end": "3888724"
  },
  {
    "text": "AUDIENCE: I'm trying to\nsolve this another way. The graph information--",
    "start": "3888724",
    "end": "3894180"
  },
  {
    "text": "PROFESSOR: Yeah AUDIENCE: --would you say that's\nmoderate or an easy example? The transformation.",
    "start": "3894180",
    "end": "3900530"
  },
  {
    "text": "PROFESSOR: This is\non the easy side. So look at the problems\nthat we had so far.",
    "start": "3900530",
    "end": "3905950"
  },
  {
    "text": "There are more problems\nin this review packet. There are like six,\nseven, eight problems.",
    "start": "3905950",
    "end": "3911640"
  },
  {
    "text": "It's going to be online. It's the notes for\nthis recitation. Sorry, bad name.",
    "start": "3911640",
    "end": "3917100"
  },
  {
    "text": "So the notes for\nthis recitation. This is on the easy side. The StarCraft problem, last time\nis on the insanely difficult",
    "start": "3917100",
    "end": "3924010"
  },
  {
    "text": "side, so that's not\ngoing to happen. AUDIENCE: I so\ndon't even get that. PROFESSOR: That's\non the hard side.",
    "start": "3924010",
    "end": "3930059"
  }
]