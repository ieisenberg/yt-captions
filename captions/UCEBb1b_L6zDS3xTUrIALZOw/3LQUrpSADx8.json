[
  {
    "start": "0",
    "end": "500"
  },
  {
    "text": "In 6.004, we have a specific\nplan on how we’ll use registers",
    "start": "500",
    "end": "4840"
  },
  {
    "text": "in our designs, which we call\nthe single-clock synchronous",
    "start": "4840",
    "end": "8380"
  },
  {
    "text": "discipline.",
    "start": "8380",
    "end": "10360"
  },
  {
    "text": "Looking at the sketch of\na circuit on the left,",
    "start": "10360",
    "end": "12709"
  },
  {
    "text": "we see that it\nconsists of registers",
    "start": "12710",
    "end": "14840"
  },
  {
    "text": "— the rectangular icons with\nthe edge-triggered symbol —",
    "start": "14840",
    "end": "18310"
  },
  {
    "text": "and combinational\nlogic circuits,",
    "start": "18310",
    "end": "20160"
  },
  {
    "text": "shown here as little clouds\nwith inputs and outputs.",
    "start": "20160",
    "end": "24830"
  },
  {
    "text": "Remembering that there is no\ncombinational path between",
    "start": "24830",
    "end": "27970"
  },
  {
    "text": "a register’s input and output,\nthe overall circuit has no",
    "start": "27970",
    "end": "31939"
  },
  {
    "text": "combinational cycles.",
    "start": "31940",
    "end": "33960"
  },
  {
    "text": "In other words, paths from\nsystem inputs and register",
    "start": "33960",
    "end": "37230"
  },
  {
    "text": "outputs to the\ninputs of registers",
    "start": "37230",
    "end": "40030"
  },
  {
    "text": "never visit the same\ncombinational block twice.",
    "start": "40030",
    "end": "44430"
  },
  {
    "text": "A single periodic\nclock signal is shared",
    "start": "44430",
    "end": "46590"
  },
  {
    "text": "among all the clocked devices.",
    "start": "46590",
    "end": "49310"
  },
  {
    "text": "Using multiple clock\nsignals is possible,",
    "start": "49310",
    "end": "51810"
  },
  {
    "text": "but analyzing the\ntiming for signals",
    "start": "51810",
    "end": "54020"
  },
  {
    "text": "that cross between clock\ndomains is quite tricky,",
    "start": "54020",
    "end": "56560"
  },
  {
    "text": "so life is much simpler when all\nregisters use the same clock.",
    "start": "56560",
    "end": "61080"
  },
  {
    "text": "The details of\nwhich data signals",
    "start": "61080",
    "end": "62800"
  },
  {
    "text": "change when are\nlargely unimportant.",
    "start": "62800",
    "end": "65280"
  },
  {
    "text": "All that matters is that signals\nhooked to register inputs are",
    "start": "65280",
    "end": "68729"
  },
  {
    "text": "stable and valid for long enough\nto meet the registers’ setup",
    "start": "68730",
    "end": "72080"
  },
  {
    "text": "time.",
    "start": "72080",
    "end": "73270"
  },
  {
    "text": "And, of course, stay stable long\nenough to meet the registers’",
    "start": "73270",
    "end": "76509"
  },
  {
    "text": "hold time.",
    "start": "76510",
    "end": "78700"
  },
  {
    "text": "We can guarantee that the\ndynamic discipline is obeyed",
    "start": "78700",
    "end": "81570"
  },
  {
    "text": "by choosing the clock\nperiod to be greater",
    "start": "81570",
    "end": "83720"
  },
  {
    "text": "then the t_PD of every\npath from register outputs",
    "start": "83720",
    "end": "87090"
  },
  {
    "text": "to register inputs,",
    "start": "87090",
    "end": "88929"
  },
  {
    "text": "plus, of course, the\nregisters’ setup time.",
    "start": "88930",
    "end": "92980"
  },
  {
    "text": "A happy consequence of choosing\nthe clock period in this way",
    "start": "92980",
    "end": "96280"
  },
  {
    "text": "is that at the moment of\nthe rising clock edge,",
    "start": "96280",
    "end": "98930"
  },
  {
    "text": "there are no other\nnoise-inducing logic",
    "start": "98930",
    "end": "101260"
  },
  {
    "text": "transitions happening\nanywhere in the circuit.",
    "start": "101260",
    "end": "104120"
  },
  {
    "text": "Which means there\nshould be no noise",
    "start": "104120",
    "end": "105620"
  },
  {
    "text": "problems when we update the\nstored state of each register.",
    "start": "105620",
    "end": "110010"
  },
  {
    "text": "Our next task is to\nlearn how to analyze",
    "start": "110010",
    "end": "112370"
  },
  {
    "text": "the timing of a single-clock\nsynchronous system.",
    "start": "112370",
    "end": "115650"
  },
  {
    "text": "Here’s a model of a particular\npath in our synchronous system.",
    "start": "115650",
    "end": "119340"
  },
  {
    "text": "A large digital system\nwill have many such paths",
    "start": "119340",
    "end": "122049"
  },
  {
    "text": "and we have to do the analysis\nbelow for each one in order",
    "start": "122050",
    "end": "125510"
  },
  {
    "text": "to find the path that will\ndetermine the smallest",
    "start": "125510",
    "end": "128030"
  },
  {
    "text": "workable clock period.",
    "start": "128030",
    "end": "129638"
  },
  {
    "text": "As you might suspect, there are\ncomputed-aided design programs",
    "start": "129639",
    "end": "132560"
  },
  {
    "text": "that will do these\ncalculations for us.",
    "start": "132560",
    "end": "135739"
  },
  {
    "text": "There’s an upstream register,\nwhose output is connected",
    "start": "135740",
    "end": "138740"
  },
  {
    "text": "to a combinational logic circuit\nwhich generates the input",
    "start": "138740",
    "end": "142290"
  },
  {
    "text": "signal, labeled STAR, to\nthe downstream register.",
    "start": "142290",
    "end": "145790"
  },
  {
    "text": "Let’s build a carefully-drawn\ntiming diagram showing when",
    "start": "145790",
    "end": "148680"
  },
  {
    "text": "each signal in the system\nchanges and when it is stable.",
    "start": "148680",
    "end": "153250"
  },
  {
    "text": "The rising edge of the clock\ntriggers the upstream register,",
    "start": "153250",
    "end": "156050"
  },
  {
    "text": "whose output (labeled\nQ_R1) changes",
    "start": "156050",
    "end": "159060"
  },
  {
    "text": "as specified by the\ncontamination and propagation",
    "start": "159060",
    "end": "161700"
  },
  {
    "text": "delays of the register.",
    "start": "161700",
    "end": "163760"
  },
  {
    "text": "Q_R1 maintains its old value\nfor at least the contamination",
    "start": "163760",
    "end": "167500"
  },
  {
    "text": "delay of REG1, and then\nreaches its final stable value",
    "start": "167500",
    "end": "170790"
  },
  {
    "text": "by the propagation\ndelay of REG1.",
    "start": "170790",
    "end": "173159"
  },
  {
    "text": "At this point Q_R1\nwill remain stable",
    "start": "173160",
    "end": "175630"
  },
  {
    "text": "until the next\nrising clock edge.",
    "start": "175630",
    "end": "178110"
  },
  {
    "text": "Now let’s figure out the\nwaveforms for the output",
    "start": "178110",
    "end": "180490"
  },
  {
    "text": "of the combinational\nlogic circuit,",
    "start": "180490",
    "end": "182250"
  },
  {
    "text": "marked with a red\nstar in the diagram.",
    "start": "182250",
    "end": "185220"
  },
  {
    "text": "The contamination\ndelay of the logic",
    "start": "185220",
    "end": "187110"
  },
  {
    "text": "determines the earliest time\nSTAR will go invalid measured",
    "start": "187110",
    "end": "190730"
  },
  {
    "text": "from when Q_R1 went invalid.",
    "start": "190730",
    "end": "194200"
  },
  {
    "text": "The propagation\ndelay of the logic",
    "start": "194200",
    "end": "196050"
  },
  {
    "text": "determines the\nlatest time STAR will",
    "start": "196050",
    "end": "197830"
  },
  {
    "text": "be stable measured from\nwhen Q_R1 became stable.",
    "start": "197830",
    "end": "202640"
  },
  {
    "text": "Now that we know\nthe timing for STAR,",
    "start": "202640",
    "end": "204380"
  },
  {
    "text": "we can determine whether\nSTAR will meet the setup",
    "start": "204380",
    "end": "206820"
  },
  {
    "text": "and hold times for the\ndownstream register REG2.",
    "start": "206820",
    "end": "210420"
  },
  {
    "text": "Time t1 measures how\nlong STAR will stay valid",
    "start": "210420",
    "end": "213590"
  },
  {
    "text": "after the rising clock edge.",
    "start": "213590",
    "end": "215940"
  },
  {
    "text": "t1 is the sum of REG1’s\ncontamination delay",
    "start": "215940",
    "end": "219070"
  },
  {
    "text": "and the logic’s\ncontamination delay.",
    "start": "219070",
    "end": "221750"
  },
  {
    "text": "The HOLD time for\nREG2 measures how long",
    "start": "221750",
    "end": "224370"
  },
  {
    "text": "STAR has to stay valid after\nthe rising clock edge in order",
    "start": "224370",
    "end": "227340"
  },
  {
    "text": "to ensure correct operation.",
    "start": "227340",
    "end": "229420"
  },
  {
    "text": "So t1 has to be greater than\nor equal to the HOLD time",
    "start": "229420",
    "end": "232599"
  },
  {
    "text": "for REG2.",
    "start": "232600",
    "end": "234220"
  },
  {
    "text": "Time t2 is the sum\nof the propagation",
    "start": "234220",
    "end": "236890"
  },
  {
    "text": "delays for REG1 and the logic,\nplus the SETUP time for REG2.",
    "start": "236890",
    "end": "241700"
  },
  {
    "text": "This tells us the earliest time\nat which the next rising clock",
    "start": "241700",
    "end": "245160"
  },
  {
    "text": "edge can happen and still ensure\nthat the SETUP time for REG2",
    "start": "245160",
    "end": "248890"
  },
  {
    "text": "is met.",
    "start": "248890",
    "end": "250380"
  },
  {
    "text": "So t2 has to be less\nthan or equal to the time",
    "start": "250380",
    "end": "253090"
  },
  {
    "text": "between rising clock edges,\ncalled the clock period",
    "start": "253090",
    "end": "256470"
  },
  {
    "text": "or tCLK.",
    "start": "256470",
    "end": "258230"
  },
  {
    "text": "If the next rising\nclock happens before t2,",
    "start": "258230",
    "end": "260810"
  },
  {
    "text": "we’ll be violating the\ndynamic discipline for REG2.",
    "start": "260810",
    "end": "265750"
  },
  {
    "text": "So we have two\ninequalities that must",
    "start": "265750",
    "end": "268070"
  },
  {
    "text": "be satisfied for every\nregister-to-register path",
    "start": "268070",
    "end": "270870"
  },
  {
    "text": "in our digital system.",
    "start": "270870",
    "end": "272810"
  },
  {
    "text": "If either inequality\nis violated,",
    "start": "272810",
    "end": "274919"
  },
  {
    "text": "we won’t be obeying the\ndynamic discipline for REG2",
    "start": "274920",
    "end": "277610"
  },
  {
    "text": "and our circuit will not be\nguaranteed to work correctly.",
    "start": "277610",
    "end": "282919"
  },
  {
    "text": "Looking at the inequality\ninvolving tCLK,",
    "start": "282920",
    "end": "285380"
  },
  {
    "text": "we see that the propagation\ndelay of the upstream register",
    "start": "285380",
    "end": "288820"
  },
  {
    "text": "and setup time for the\ndownstream register",
    "start": "288820",
    "end": "291050"
  },
  {
    "text": "take away from the time\navailable useful work performed",
    "start": "291050",
    "end": "294569"
  },
  {
    "text": "by the combinational logic.",
    "start": "294570",
    "end": "297010"
  },
  {
    "text": "Not surprisingly, designers\ntry to use registers",
    "start": "297010",
    "end": "299410"
  },
  {
    "text": "that minimize these two times.",
    "start": "299410",
    "end": "302840"
  },
  {
    "text": "What happens if there’s no\ncombinational logic between",
    "start": "302840",
    "end": "305590"
  },
  {
    "text": "the upstream and\ndownstream registers?",
    "start": "305590",
    "end": "308639"
  },
  {
    "text": "This happens when designing\nshift registers, digital delay",
    "start": "308640",
    "end": "311670"
  },
  {
    "text": "lines, etc.",
    "start": "311670",
    "end": "313540"
  },
  {
    "text": "Well, then the first\ninequality tells us",
    "start": "313540",
    "end": "316400"
  },
  {
    "text": "that the contamination delay\nof the upstream register",
    "start": "316400",
    "end": "319139"
  },
  {
    "text": "had better be greater than\nor equal to the hold time",
    "start": "319140",
    "end": "322570"
  },
  {
    "text": "of the downstream register.",
    "start": "322570",
    "end": "325090"
  },
  {
    "text": "In practice, contamination\ndelays are smaller than hold",
    "start": "325090",
    "end": "327710"
  },
  {
    "text": "times, so in general this\nwouldn’t be the case.",
    "start": "327710",
    "end": "331410"
  },
  {
    "text": "So designers are often required\nto insert dummy logic, e.g.,",
    "start": "331410",
    "end": "335170"
  },
  {
    "text": "two inverters in\nseries, in order",
    "start": "335170",
    "end": "337270"
  },
  {
    "text": "to create the necessary\ncontamination delay.",
    "start": "337270",
    "end": "341900"
  },
  {
    "text": "Finally we have to worry\nabout the phenomenon called",
    "start": "341900",
    "end": "344320"
  },
  {
    "text": "clock skew, where the clock\nsignal arrives at one register",
    "start": "344320",
    "end": "348210"
  },
  {
    "text": "before it arrives at the other.",
    "start": "348210",
    "end": "350970"
  },
  {
    "text": "We won’t go into\nthe analysis here,",
    "start": "350970",
    "end": "353040"
  },
  {
    "text": "but the net effect is to\nincrease the apparent setup",
    "start": "353040",
    "end": "355850"
  },
  {
    "text": "and hold times of the\ndownstream register,",
    "start": "355850",
    "end": "358160"
  },
  {
    "text": "assuming we can’t predict\nthe sign of the skew.",
    "start": "358160",
    "end": "363080"
  },
  {
    "text": "The clock period, tCLK,\ncharacterizes the performance",
    "start": "363080",
    "end": "366129"
  },
  {
    "text": "of our system.",
    "start": "366130",
    "end": "367660"
  },
  {
    "text": "You may have noticed that\nIntel is willing to sell you",
    "start": "367660",
    "end": "370110"
  },
  {
    "text": "processor chips that run at\ndifferent clock frequencies,",
    "start": "370110",
    "end": "373250"
  },
  {
    "text": "e.g., a 1.7 GHz processor\nvs. a 2 GHz processor.",
    "start": "373250",
    "end": "379640"
  },
  {
    "text": "Did you ever wonder how\nthose chips are different?",
    "start": "379640",
    "end": "383010"
  },
  {
    "text": "As is turns out they’re not!",
    "start": "383010",
    "end": "385310"
  },
  {
    "text": "What’s going on is that\nvariations in the manufacturing",
    "start": "385310",
    "end": "388270"
  },
  {
    "text": "process mean that some chips\nhave better tPDs than others.",
    "start": "388270",
    "end": "392289"
  },
  {
    "text": "On fast chips, a smaller\ntPD for the logic",
    "start": "392290",
    "end": "395070"
  },
  {
    "text": "means that they can have a\nsmaller tCLK and hence a higher",
    "start": "395070",
    "end": "398400"
  },
  {
    "text": "clock frequency.",
    "start": "398400",
    "end": "399810"
  },
  {
    "text": "So Intel manufactures many\ncopies of the same chip,",
    "start": "399810",
    "end": "402850"
  },
  {
    "text": "measures their tPDs and\nselects the fast ones to sell",
    "start": "402850",
    "end": "406500"
  },
  {
    "text": "as higher-performance parts.",
    "start": "406500",
    "end": "408720"
  },
  {
    "text": "That’s what it takes to\nmake money in the chip biz!",
    "start": "408720",
    "end": "412090"
  }
]