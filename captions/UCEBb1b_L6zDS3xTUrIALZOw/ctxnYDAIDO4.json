[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6060"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or to\nview additional materials",
    "start": "6060",
    "end": "12690"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "12690",
    "end": "26510"
  },
  {
    "text": "PROFESSOR: Today\nwe start a-- we're going to take a little break\nfrom parametrized complexity",
    "start": "26510",
    "end": "31910"
  },
  {
    "text": "and talk about something called\nexponential time hypothesis, which I've mentioned a few\ntimes but we haven't really",
    "start": "31910",
    "end": "37840"
  },
  {
    "text": "talked about its many\ncool consequences. ",
    "start": "37840",
    "end": "51280"
  },
  {
    "text": "I'll abbreviate it ETH.  And the idea is\nthink about 3SAT.",
    "start": "51280",
    "end": "60270"
  },
  {
    "text": " and the claim is it has no 2\nthe little of n time algorithm.",
    "start": "60270",
    "end": "72545"
  },
  {
    "start": "72545",
    "end": "78030"
  },
  {
    "text": "So of course you could\nmake analogous assumptions about KSAT set for various K.\nBut in general, the hypothesis",
    "start": "78030",
    "end": "86080"
  },
  {
    "text": "is that for any fixed K, there\nis no 2 to the little l of n time algorithm. So 3SAT is the smallest\none where that should hold.",
    "start": "86080",
    "end": "93530"
  },
  {
    "text": "2SAT, of course, is easy. This is not the\nmaximization version.",
    "start": "93530",
    "end": "100080"
  },
  {
    "text": "And our evidence\nfor this is merely that we haven't been able\nto find such an algorithm.",
    "start": "100080",
    "end": "105570"
  },
  {
    "text": "There are better than\n2 to the n algorithms. The obvious algorithm\nis 2 to the n,",
    "start": "105570",
    "end": "110590"
  },
  {
    "text": "try all possible\nassignments times n. But we won't worry about\nthe non-exponential part.",
    "start": "110590",
    "end": "118090"
  },
  {
    "text": "The best algorithm to\ndate is 1.31 to the n.",
    "start": "118090",
    "end": "123759"
  },
  {
    "text": "That's just from\nthree years ago. So it's an active\narea of research. Many people have tried to\nfind better SAT algorithms.",
    "start": "123760",
    "end": "129250"
  },
  {
    "text": "But conjecture is\nyou cannot get, like, 2 the square root of n, the sum,\nand be complete problems have 2",
    "start": "129250",
    "end": "134890"
  },
  {
    "text": "to the square root of\nn time algorithms-- we'll see some today. I'll mention some.",
    "start": "134890",
    "end": "139970"
  },
  {
    "text": "But seems like 2 to\nsome constant times n or some constant to\nthe n power equivalently",
    "start": "139970",
    "end": "146190"
  },
  {
    "text": "is the right answer for 3SAT. Now one issue to talk\nabout very briefly--",
    "start": "146190",
    "end": "154250"
  },
  {
    "text": "it won't actually\nmatter-- is what is n? Normally n is the\nentire problem size, which would be the\nnumber of clauses,",
    "start": "154250",
    "end": "162080"
  },
  {
    "text": "essentially, because each\nclause has three variables. But the usual\nassumption is to say",
    "start": "162080",
    "end": "167490"
  },
  {
    "text": "this is the number of variables\nand m is the number of clauses.",
    "start": "167490",
    "end": "176150"
  },
  {
    "text": "But these turn out\nto be the same thing. ",
    "start": "176150",
    "end": "184930"
  },
  {
    "text": "So one assumption is equivalent\nto the other assumption, so henceforth we don't\nneed to worry about this.",
    "start": "184930",
    "end": "190040"
  },
  {
    "start": "190040",
    "end": "195219"
  },
  {
    "text": "In general, m is\nat most n cubed, because each clause can have\nthree different variables,",
    "start": "195220",
    "end": "200630"
  },
  {
    "text": "so there's only n\ncubed possible clauses. But when we're worried\nabout this little o thing,",
    "start": "200630",
    "end": "205970"
  },
  {
    "text": "we actually care\nabout polynomials, because we're in the exponent. So it turns out you can\nsort of think of m and n",
    "start": "205970",
    "end": "212930"
  },
  {
    "text": "as being linearly related--\nthat's OK-- by something called sparsification lemma.",
    "start": "212930",
    "end": "218019"
  },
  {
    "text": "It says that if you have a\nformula with a superlinear number of clauses,\nyou can convert it into some vaguely reasonable\nnumber of formulas",
    "start": "218020",
    "end": "227670"
  },
  {
    "text": "with a linear number of clauses. It's, like, 2 to the epsilon\nn different formulas,",
    "start": "227670",
    "end": "233899"
  },
  {
    "text": "each with a linear\nnumber of clauses. And so the end effect\nwe need to know is that these two\nare equivalent.",
    "start": "233899",
    "end": "241250"
  },
  {
    "text": "We can think of situations\nwhere clauses and variables are linearly related. So that's the hypothesis.",
    "start": "241250",
    "end": "247472"
  },
  {
    "text": "Of course, we don't\nknow how to prove it. If we proved it, it would\nimply p does not equal np. This is sort of a\nstrong form of p",
    "start": "247472",
    "end": "253439"
  },
  {
    "text": "does not equal np from\nthe SAT perspective. Because we have so many\nreductions from SAT,",
    "start": "253440",
    "end": "258519"
  },
  {
    "text": "you can turn this lower bound. If you assume this\nlower bound about SAT, you can prove\ncorresponding lower bounds",
    "start": "258519",
    "end": "264960"
  },
  {
    "text": "about other problems we've seen. While I'm here, let\nme just tell you",
    "start": "264960",
    "end": "270730"
  },
  {
    "text": "another version of ETH\ncalled strong ETH, which is that CNF SAT has no 2 minus\nepsilon to the n algorithm.",
    "start": "270730",
    "end": "289240"
  },
  {
    "text": " So the idea is\nthere's some ideal",
    "start": "289240",
    "end": "294539"
  },
  {
    "text": "constant to the n for each KSAT. But as K goes to infinity,\nthat constant goes to 2.",
    "start": "294540",
    "end": "300600"
  },
  {
    "text": "So if you have\nreally large clauses, you can't be 2 to\nthe n, roughly.",
    "start": "300600",
    "end": "305650"
  },
  {
    "text": "This is for all\nepsilon greater than 0.  So I won't talk about anything\nthat needs this assumption,",
    "start": "305650",
    "end": "312669"
  },
  {
    "text": "but there is some work on-- you\ncan get very specific bounds on what the constant should\nbe if you assume strong ETH.",
    "start": "312670",
    "end": "318820"
  },
  {
    "start": "318820",
    "end": "325000"
  },
  {
    "text": "Let's take a review\nof past reductions. And I'm going to start with\n3-coloring a graph for here.",
    "start": "325000",
    "end": "338450"
  },
  {
    "text": "So this was our proof\nthat 3-coloring was hard. There was a clause\ngadget, variable gadget,",
    "start": "338450",
    "end": "345140"
  },
  {
    "text": "this thing of constant size. And the point is, if I\nstart with some 3SAT--",
    "start": "345140",
    "end": "352690"
  },
  {
    "text": "this is a reduction from\n3SAT-- if I start with a 3SAT instance that has n\nvariables and m causes,",
    "start": "352690",
    "end": "358460"
  },
  {
    "text": "the number of vertices\nand edges over here will be some constant\ntimes n plus m.",
    "start": "358460",
    "end": "366940"
  },
  {
    "text": "So 3-coloring, we get order\nn plus m vertices and edges.",
    "start": "366940",
    "end": "374595"
  },
  {
    "start": "374595",
    "end": "381000"
  },
  {
    "text": "So what does that give me\nin terms of a lower bound? Well, if I assume ETH that\nthere's no 2 to the little of n",
    "start": "381000",
    "end": "387580"
  },
  {
    "text": "and no 2 to the little of\nm time algorithm for 3SAT,",
    "start": "387580",
    "end": "393490"
  },
  {
    "text": "then I get a corresponding\nthing that there's no 2 to the little of n\ntime algorithm for graphs",
    "start": "393490",
    "end": "411470"
  },
  {
    "text": "with number of vertices and\nnumber of edges linear in n.",
    "start": "411470",
    "end": "418570"
  },
  {
    "text": "So I state it this way\nbecause for graphs again, there's the issue of\nsparse versus dense graphs. I could just say\nfor sparse graphs",
    "start": "418570",
    "end": "425117"
  },
  {
    "text": "here, which each have a\nlinear number of edges.  So this is, I should\nsay, ETH implies this.",
    "start": "425117",
    "end": "438819"
  },
  {
    "text": "So while I thoroughly\nbelieve p does not equal np,",
    "start": "438820",
    "end": "443980"
  },
  {
    "text": "p does not equal np, ETH is\na little bit more unknown. So I'm going to\nexplicitly mention",
    "start": "443980",
    "end": "450210"
  },
  {
    "text": "ETH teach every time I use it. And more generally if we look\nat various past reductions,",
    "start": "450210",
    "end": "459790"
  },
  {
    "text": "all we need to measure is\nsomething called size blowup.",
    "start": "459790",
    "end": "466580"
  },
  {
    "text": "Remember an np\nreduction Karp style, you start with some instance x,\nyou make an instance x prime.",
    "start": "466580",
    "end": "471850"
  },
  {
    "text": "And the size of x prime--\nthis was our reduction",
    "start": "471850",
    "end": "477090"
  },
  {
    "text": "f-- the size of x prime should\nbe polynomial in the size of x. What's that polynomial?",
    "start": "477090",
    "end": "483530"
  },
  {
    "text": "That's your blowup. So if we have n, which is\nthe size of x over here",
    "start": "483530",
    "end": "491040"
  },
  {
    "text": "and n prime, which is\nthe size of x prime, this was polynomial in n\nand that is the size blowup.",
    "start": "491040",
    "end": "503354"
  },
  {
    "start": "503354",
    "end": "509290"
  },
  {
    "text": "And so in particular, if\nwe have linear blowup,",
    "start": "509290",
    "end": "516539"
  },
  {
    "text": "like in this example\nof 3-coloring, then we preserve\nthe ETH statement.",
    "start": "516539",
    "end": "524510"
  },
  {
    "text": " No 2 to the little o\nof n time algorithm,",
    "start": "524510",
    "end": "534750"
  },
  {
    "text": "meaning if there was no 2 to\nthe little o of n algorithm for problem A, then\nthere'll be no 2",
    "start": "534750",
    "end": "540213"
  },
  {
    "text": "to the little o of n\nalgorithm for problem B, because you could just convert\nto only get a linear size",
    "start": "540213",
    "end": "548050"
  },
  {
    "text": "blowup, run that\nalgorithm if there was a 2 to the little o of n algorithm. And then that solves A in 2\nto the little o of n time.",
    "start": "548050",
    "end": "555730"
  },
  {
    "text": "So the usual argument,\nbut now we're giving explicit bounds\non the running time.",
    "start": "555730",
    "end": "561690"
  },
  {
    "text": "More generally, if you\ndon't have linear blowup, let's call this function b of n.",
    "start": "561690",
    "end": "569720"
  },
  {
    "text": "Let's say size of x prime is\nalways at most some function b of n, b for blowup.",
    "start": "569720",
    "end": "575990"
  },
  {
    "text": "Then if there's no 2 to the\nlittle o of n algorithm for A,",
    "start": "575990",
    "end": "585740"
  },
  {
    "text": "then there will be no\n2 to the little o of b",
    "start": "585740",
    "end": "591190"
  },
  {
    "text": "inverse of n algorithm for B.",
    "start": "591190",
    "end": "599220"
  },
  {
    "text": "So for example, if you have\nquadratic blowup, b of n is n squared, then you\nwill say that there's no 2",
    "start": "599220",
    "end": "604860"
  },
  {
    "text": "to the square root of\nn, no 2 to the little o of square root of n algorithm. ",
    "start": "604860",
    "end": "611779"
  },
  {
    "text": "You can imagine how that goes. So here are some nice examples\nof reductions we've seen.",
    "start": "611780",
    "end": "618290"
  },
  {
    "text": "This one was from lecture seven. Then from lecture 10, we had\ndominating set-- oh, sorry.",
    "start": "618290",
    "end": "629316"
  },
  {
    "text": "I have one more\nbefore dominating set. This was in the\ncontext of proving planar vertex cover was hard.",
    "start": "629316",
    "end": "635170"
  },
  {
    "text": "First, planar 3SAT was hard\nand then a reduction from 3SAT. But ignore the planar\nissue, because things are going to be a little\ndifferent for planar graphs.",
    "start": "635170",
    "end": "643320"
  },
  {
    "text": "But for general graphs, this\nwas a reduction from 3SAT. And there was a constant\nnumber of vertices and edges",
    "start": "643320",
    "end": "653130"
  },
  {
    "text": "for each clause. And then also here, we had\nto make a copy of variable for each occurrence,\nbut the total number",
    "start": "653130",
    "end": "660000"
  },
  {
    "text": "of recurrences of all\nvariables is linear, because there's only three\noccurrences per clause.",
    "start": "660000",
    "end": "665310"
  },
  {
    "text": "So the total number of vertices\nin these variable gadgets is also linear, so the\nwhole thing is linear.",
    "start": "665310",
    "end": "671620"
  },
  {
    "text": "Size blowup is linear. And so vertex cover is another\nexample of this type of result.",
    "start": "671620",
    "end": "686120"
  },
  {
    "text": "Assuming ETH, there is\nno 2 to the little o of an algorithm for graphs whose\nnumber vertices and edges is",
    "start": "686120",
    "end": "693041"
  },
  {
    "text": "order m. AUDIENCE: Is there a\nname for that class? PROFESSOR: That\nshould have a class,",
    "start": "693041",
    "end": "698530"
  },
  {
    "text": "but-- I can make\none up, if you want.",
    "start": "698530",
    "end": "703810"
  },
  {
    "text": "We could call it an\nETH-style graph problem, say sparse graphs no 2 to the\nlittle o of n assuming ETH.",
    "start": "703810",
    "end": "713350"
  },
  {
    "text": "So it's sort of saying it's\nlinearly related to SAT, but as far as I know it\ndoesn't have a proper name.",
    "start": "713350",
    "end": "719870"
  },
  {
    "text": "It should, because\nI had to write it many times in my notes. Another one was dominating set.",
    "start": "719870",
    "end": "726327"
  },
  {
    "text": "I don't have a slide for\nthis, because there never was one, because the\nreduction was so simple.",
    "start": "726327",
    "end": "732420"
  },
  {
    "text": "It was if you have an edge\nin the vertex cover instance, you convert it into a subdivided\nedge and the original edge",
    "start": "732420",
    "end": "741160"
  },
  {
    "text": "for dominating set. And then you have\nthe same problem.",
    "start": "741160",
    "end": "747430"
  },
  {
    "text": "It's the domination. So it's the same\nthing as vertex cover. You never want to put this\nthing in the dominating set. You might as well move\nto one of the neighbors.",
    "start": "747430",
    "end": "754300"
  },
  {
    "text": "So that's again, a\nlinear size blowup. And so dominating set\nis also in this class,",
    "start": "754300",
    "end": "761510"
  },
  {
    "text": "who shall remain nameless. And another one\nis Hamiltonicity.",
    "start": "761510",
    "end": "766930"
  },
  {
    "text": "We saw a couple of\ndifferent proofs. This one is from lecture seven. This was ostensibly\nfor directed,",
    "start": "766930",
    "end": "773300"
  },
  {
    "text": "thought it also claims to\nwork for undirected graphs.",
    "start": "773300",
    "end": "778350"
  },
  {
    "text": "Linear? Maybe I'll jump to the\nnext one, because it's a bit of a stronger result.",
    "start": "778350",
    "end": "784759"
  },
  {
    "text": "This was maximum degree\n3, Hamiltonicity directed. This was lecture eight.",
    "start": "784760",
    "end": "791240"
  },
  {
    "text": "It's also linear. I mean, the main\ndiagram is this.",
    "start": "791240",
    "end": "796280"
  },
  {
    "text": "It's linear if you're not\naiming for planar graphs. And then there's no\ncrossover gadget here.",
    "start": "796280",
    "end": "802280"
  },
  {
    "text": "And so the total complexity\nof all these things is linear. So that's cool. So Hamiltonicity\nis another example",
    "start": "802280",
    "end": "813535"
  },
  {
    "text": "of a graph problem with no 2\nto the little o of n algorithm, assuming ETH. ",
    "start": "813535",
    "end": "820360"
  },
  {
    "text": "And from this proof-- this was\nfor directed max degree 3--",
    "start": "820360",
    "end": "825769"
  },
  {
    "text": "and it was also bipartite. And then we reduced that\nto undirected-- sorry.",
    "start": "825770",
    "end": "832380"
  },
  {
    "text": "We reduced from planar\ndirected max degree 3 to planar bipartite\nundirected max degree 3.",
    "start": "832380",
    "end": "840140"
  },
  {
    "text": "And that's of\ncourse also linear. So all these things\nwe get for free.",
    "start": "840140",
    "end": "845300"
  },
  {
    "text": "We did them in\ndifferent contexts. That was for planar graphs. This one was for APX\nhardness for independent set.",
    "start": "845300",
    "end": "851500"
  },
  {
    "text": "But we use the same proof. And we have this biclique\nfor the variable. Now here you start to worry\nthis could be quadratic blowup.",
    "start": "851500",
    "end": "858930"
  },
  {
    "text": " But this was actually a\nreduction from 3SAT-3.",
    "start": "858930",
    "end": "865710"
  },
  {
    "text": "So that we didn't have a\nvery large clique there. It was actually only\nthree nodes in it, so it's more like two edges.",
    "start": "865710",
    "end": "873670"
  },
  {
    "text": "But in general,\n3SAT, any constant would suffice for that proof. You also have to check that this\nreduction from 3SAT to 3SAT-3",
    "start": "873670",
    "end": "881440"
  },
  {
    "text": "is OK. But it's, again, linear blowup\nbecause the total number of occurrences of all\nvariables is linear.",
    "start": "881440",
    "end": "887010"
  },
  {
    "text": "So that was a whole bunch of\nfree results-- independent set,",
    "start": "887010",
    "end": "898770"
  },
  {
    "text": "3SAT-3. That's not a graph problem, so\nI won't write it in this list.",
    "start": "898770",
    "end": "904060"
  },
  {
    "text": "Now, normally independent set\nis the same thing as clique. In this universe,\nthat's not quite right",
    "start": "904060",
    "end": "909420"
  },
  {
    "text": "because we're talking\nabout sparse graphs. For clique, it's still\nthe case that there's no 2 to the little o of\nnumber of vertices algorithm.",
    "start": "909420",
    "end": "918360"
  },
  {
    "text": "But the number of edges used to\nbe linear for independent set and becomes\nquadratic for clique.",
    "start": "918360",
    "end": "924010"
  },
  {
    "text": "So you have to be a little\ncareful with clique. ",
    "start": "924010",
    "end": "932830"
  },
  {
    "text": "So all is good as\nlong as we're talking about non-planar graphs. What about planar graphs?",
    "start": "932830",
    "end": "941490"
  },
  {
    "text": "Well, this is not true\nfor planar graphs. In general, you tend to get\n2 to the square root of n",
    "start": "941490",
    "end": "948110"
  },
  {
    "text": "algorithms, and that's\ntight, assuming ETH. So for example, planar 3SAT\nwe had a crossover gadget.",
    "start": "948110",
    "end": "956585"
  },
  {
    "text": "And in the worst case,\nthere are a quadratic number of crossings. And so the blowup\nin our problem size,",
    "start": "956585",
    "end": "963420"
  },
  {
    "text": "because we spend\nsome constant number of vertices per crossover,\nthe blowup is quadratic.",
    "start": "963420",
    "end": "970329"
  },
  {
    "text": "And so for, say,\nplanar 3SAT, ETH",
    "start": "970330",
    "end": "986400"
  },
  {
    "text": "implies no 2 to the little o\nof n or 2 to the little o of m",
    "start": "986400",
    "end": "994590"
  },
  {
    "text": "algorithm-- sorry,\nwith square root. ",
    "start": "994590",
    "end": "1004280"
  },
  {
    "text": "So with 3SAT, it's\na little annoying because we have to think\nabout variables and clauses separately. So the size blowup is not\nquite as uniquely defined.",
    "start": "1004280",
    "end": "1011980"
  },
  {
    "text": "But just analyzing number of\nvariables, number of clauses separately, the blowup\nis quadratic in both.",
    "start": "1011980",
    "end": "1018060"
  },
  {
    "text": "So that's the\nlower bound we get. And then I have planar\n3-coloring, vertex cover,",
    "start": "1018060",
    "end": "1031329"
  },
  {
    "text": "dominating set, Hamiltonicity,\nindependent set. ",
    "start": "1031329",
    "end": "1038380"
  },
  {
    "text": "All of them have the\nproperty that ETH implies.",
    "start": "1038380",
    "end": "1043806"
  },
  {
    "text": "No 2 to the little o of\nsquare root of n algorithm",
    "start": "1043806",
    "end": "1049010"
  },
  {
    "text": "for planar graphs. ",
    "start": "1049010",
    "end": "1054250"
  },
  {
    "text": "Now planar graphs\nare always sparse, so I don't need to worry about\nhow many edges versus vertices.",
    "start": "1054250",
    "end": "1060520"
  },
  {
    "text": "n is within a constant of both. How you prove that?",
    "start": "1060520",
    "end": "1066120"
  },
  {
    "text": "Exactly the same proofs\nthat we just looked at. They were all actually proofs\nfor the planar problem,",
    "start": "1066120",
    "end": "1071994"
  },
  {
    "text": "but they all had some\nkind of crossover. Either they started from\nplanar 3SAT, in which case they were already quadratic.",
    "start": "1071994",
    "end": "1077450"
  },
  {
    "text": "Like this one was\nfrom planar 3SAT and it was a linear\nblowup from that.",
    "start": "1077450",
    "end": "1084240"
  },
  {
    "text": "So it's only quadratic overall. This one was again, from planar\n3SAT and linear after that.",
    "start": "1084240",
    "end": "1092390"
  },
  {
    "text": "This one was from 3SAT. And then there was a\ncustom crossover gadget, which I don't have\nthe slide for here.",
    "start": "1092390",
    "end": "1098720"
  },
  {
    "text": "But for each of\nthese crossovers, we paid something, so we\nget quadratic from 3SAT.",
    "start": "1098720",
    "end": "1103940"
  },
  {
    "text": "And that's linear, of course. And this is not a planar\nindependent set reduction,",
    "start": "1103940",
    "end": "1111620"
  },
  {
    "text": "so I don't have one here. You have to fill in your own. ",
    "start": "1111620",
    "end": "1117250"
  },
  {
    "text": "And one other one was coloring. We did the planar\n3-coloring gadget. Again, you pay constant\nfor each crossing.",
    "start": "1117250",
    "end": "1124010"
  },
  {
    "text": "So quadratic reduction\nfrom 3SAT-- all of them end up being quadratic overall. Independent set's the only\none I haven't shown you.",
    "start": "1124010",
    "end": "1131130"
  },
  {
    "text": "And-- cool. So this is a sense in which\neven though the planar problems",
    "start": "1131130",
    "end": "1136620"
  },
  {
    "text": "are np hard, they a\nlittle bit easier. Question? AUDIENCE: So you mentioned\nthat was [INAUDIBLE].",
    "start": "1136620",
    "end": "1143102"
  },
  {
    "text": "PROFESSOR: Yeah. So I think-- I\nshould double check. I'm pretty sure all\nof these problems have 2 to the square root\nof n time algorithms.",
    "start": "1143102",
    "end": "1153990"
  },
  {
    "text": "I'm confident enough that\nI will write it down. I think the general approach\nis Lipton Tarjan separator.",
    "start": "1153990",
    "end": "1160380"
  },
  {
    "text": "But that's about the level\nof detail I remember. Oh, yeah-- also,\nall planar graphs",
    "start": "1160380",
    "end": "1167400"
  },
  {
    "text": "have tree width order\nsquare root of n. And generally, that will\ngive you such an algorithm.",
    "start": "1167400",
    "end": "1174010"
  },
  {
    "start": "1174010",
    "end": "1180710"
  },
  {
    "text": "So that was-- question? AUDIENCE: Are there\nany of these problems that you can, in a sense,\npreserve the difficulty",
    "start": "1180710",
    "end": "1188050"
  },
  {
    "text": "in a planar graph? ",
    "start": "1188050",
    "end": "1193634"
  },
  {
    "text": "PROFESSOR: Yeah,\nthat's a good question.  We might get to some.",
    "start": "1193634",
    "end": "1199240"
  },
  {
    "text": " I'm about to shift gears\ninto parametrized complexity.",
    "start": "1199240",
    "end": "1204660"
  },
  {
    "text": "And in that setting-- I\nwould say generally no.",
    "start": "1204660",
    "end": "1210810"
  },
  {
    "text": "But there are certainly\nsome exceptions where you can encode\na non-planar problem into a planar structure.",
    "start": "1210810",
    "end": "1217440"
  },
  {
    "text": "But most natural problems\ntend to be like this.  But there definitely\nare examples.",
    "start": "1217440",
    "end": "1223350"
  },
  {
    "text": "We might even see one. This is sort of-- this could\nhave been in lecture two,",
    "start": "1223350",
    "end": "1230110"
  },
  {
    "text": "and maybe it should have been. But ETH is nice\nbecause it gives you",
    "start": "1230110",
    "end": "1235150"
  },
  {
    "text": "a bit more of a\nquantitative sense of how much running time\nyou should expect out of your algorithms. It gives you\nmotivation for going",
    "start": "1235150",
    "end": "1242240"
  },
  {
    "text": "for linear blowup when\npossible, or at least minimizing your blowup and lets\nyou distinguish between planar",
    "start": "1242240",
    "end": "1247633"
  },
  {
    "text": "and non-planar problems. But we're in the middle of\nparametrized complexity. And I mentioned all\nthis in particular",
    "start": "1247633",
    "end": "1254550"
  },
  {
    "text": "because it has an\neven bigger impact on parametrized complexity. ",
    "start": "1254550",
    "end": "1259910"
  },
  {
    "text": "So let's shift\nover to that world. ",
    "start": "1259910",
    "end": "1277809"
  },
  {
    "text": "Now first of all, we get two\nsort of trivial consequences just from these statements.",
    "start": "1277810",
    "end": "1283450"
  },
  {
    "start": "1283450",
    "end": "1291470"
  },
  {
    "text": "They're trivial,\nbut in some cases they're actually interesting. So they're easy to prove, but\nactually give tight answers",
    "start": "1291470",
    "end": "1298734"
  },
  {
    "text": "for a few problems. ",
    "start": "1298734",
    "end": "1321730"
  },
  {
    "text": "So for the natural\nparametrizations, a vertex cover is a vertex\ncover size at most k.",
    "start": "1321730",
    "end": "1327750"
  },
  {
    "text": "Longest path, which\nis the optimization version of Hamiltonicity,\nis their path-- in the parametrized\nversion, is their path",
    "start": "1327750",
    "end": "1334200"
  },
  {
    "text": "of length at least k? Dominating set of size k,\nindependent set of size k",
    "start": "1334200",
    "end": "1340539"
  },
  {
    "text": "upper bound and lower bound. In particular, there can't be\na 2 to the little of k times",
    "start": "1340540",
    "end": "1346730"
  },
  {
    "text": "polynomial in n algorithm,\nbecause there's no 2 to the little o of n algorithm. This is assuming ETH.",
    "start": "1346730",
    "end": "1352700"
  },
  {
    "start": "1352700",
    "end": "1358450"
  },
  {
    "text": "Because in particular,\nkb could be n. Now this is not exactly\nwhat we care about. What we care about is whether\nthere's an f of k times",
    "start": "1358450",
    "end": "1366580"
  },
  {
    "text": "polynomial in n algorithm. But this at least gives\nyou a lower bound on the f.",
    "start": "1366580",
    "end": "1371786"
  },
  {
    "text": "So in particular, for dominating\nset and independent set, this is not a very\ninteresting result,",
    "start": "1371786",
    "end": "1377380"
  },
  {
    "text": "because in fact we will\nshow, assuming ETH, these do not have FPT\nalgorithms at all.",
    "start": "1377380",
    "end": "1382779"
  },
  {
    "text": "There's nothing of that form. But for vertex cover,\nit's interesting because that is FPT.",
    "start": "1382780",
    "end": "1387810"
  },
  {
    "text": "And there is a constant to\nthe k times polynomial n in n algorithm. We saw a 2 to the n\ntimes n algorithm.",
    "start": "1387810",
    "end": "1394860"
  },
  {
    "text": "And this shows\nthat that's tight. So there's no better-- it\ngives you a bound on f.",
    "start": "1394860",
    "end": "1400140"
  },
  {
    "text": "For vertex cover, c to\nthe k is the right answer for some constant c. And if you assume\nstrong ETH, you",
    "start": "1400140",
    "end": "1405800"
  },
  {
    "text": "can actually figure out what\nthe-- well, you could try to prove with the constant is. We don't know the right\nanswer for vertex cover.",
    "start": "1405800",
    "end": "1411639"
  },
  {
    "text": "Some of these problems, we do. Longest path, same deal. It's FPT, so it's easy\nto find short paths.",
    "start": "1411640",
    "end": "1421409"
  },
  {
    "text": "And the algorithm is\nlike 2 to the order k times polynomial in n.",
    "start": "1421410",
    "end": "1428730"
  },
  {
    "text": "And similarly for planar\nproblems, if we have ETH,",
    "start": "1428730",
    "end": "1433740"
  },
  {
    "text": "there's no 2 to the little\no of square root of k times polynomial n for those same\nproblems on planar graphs.",
    "start": "1433740",
    "end": "1442990"
  },
  {
    "start": "1442990",
    "end": "1450110"
  },
  {
    "text": "For clique, actually\nthis should also work. ",
    "start": "1450110",
    "end": "1460230"
  },
  {
    "text": "Clique is OK because\nk is the number of vertices in the clique. And so even though the\nnumber of edges is quadratic,",
    "start": "1460230",
    "end": "1465656"
  },
  {
    "text": "this would still hold. For a planar clique, of\ncourse it's polynomial. So I can't put clique down here.",
    "start": "1465656",
    "end": "1472700"
  },
  {
    "start": "1472700",
    "end": "1479070"
  },
  {
    "text": "The maximum clique\nsize is 4, so there's an n to the 4 algorithm. ",
    "start": "1479070",
    "end": "1493049"
  },
  {
    "text": "Again, this is interesting\nbecause for dominating set, independent set, vertex\ncover and longest path,",
    "start": "1493050",
    "end": "1502120"
  },
  {
    "text": "there are 2 to the square root\nof k times polynomial in n algorithms. So this is actually\na tightness result.",
    "start": "1502120",
    "end": "1507740"
  },
  {
    "text": " There exists 2 to the order\nsquare root of k n to the order",
    "start": "1507740",
    "end": "1518140"
  },
  {
    "text": "1 algorithms for planar\ngraphs for those problems. This is called subexponential\nfixed parameter tractability.",
    "start": "1518140",
    "end": "1525909"
  },
  {
    "text": "And there were a bunch of those\nresults in the early 2000s. And then a theory called\nbidimensionality kind",
    "start": "1525910",
    "end": "1531650"
  },
  {
    "text": "of characterizes when it's\npossible, or gives you a big set of examples\nwhere it is possible.",
    "start": "1531650",
    "end": "1538602"
  },
  {
    "text": "But that's algorithm, so\nwe're not covering it. ",
    "start": "1538602",
    "end": "1544130"
  },
  {
    "text": "So all well and good. So for planar or dominating\nset, that's interesting.",
    "start": "1544130",
    "end": "1549410"
  },
  {
    "text": "But for general\ndominating set, we know dominating\nset is w2 complete, we think that means\nthere's FPT algorithm.",
    "start": "1549410",
    "end": "1557300"
  },
  {
    "text": "Independent set in\nclique, our w1 complete, we also think that\nmeans no FPT algorithm.",
    "start": "1557300",
    "end": "1563560"
  },
  {
    "text": "Assuming ETH, we can\nactually prove that. So let's say there's\nno FPT algorithm",
    "start": "1563560",
    "end": "1578559"
  },
  {
    "text": "for clique/independent\nset assuming ETH.",
    "start": "1578560",
    "end": "1589020"
  },
  {
    "start": "1589020",
    "end": "1595980"
  },
  {
    "text": "So that's a theorem\nwe will prove. If you believe in ETH,\nthen w1-- these problems",
    "start": "1595980",
    "end": "1602100"
  },
  {
    "text": "are complete for w1--\nw1 does not equal FPT. These are the FPT problems. And in fact, we can prove\na much stronger bound.",
    "start": "1602100",
    "end": "1609140"
  },
  {
    "start": "1609140",
    "end": "1615810"
  },
  {
    "text": "Very non-FPT-- these\nalgorithms generally have an n to the order k\nalgorithm, or if they're in xp,",
    "start": "1615810",
    "end": "1623340"
  },
  {
    "text": "then they have some n to the\nk to some constant algorithm. But we can't even\nreduce that exponent",
    "start": "1623340",
    "end": "1630510"
  },
  {
    "text": "below k for any-- for clique\nand independent set, let's say.",
    "start": "1630510",
    "end": "1636947"
  },
  {
    "text": "And if you reduce clique\nand independent set to some other problem,\nyou can, just like we've",
    "start": "1636947",
    "end": "1642314"
  },
  {
    "text": "been doing over\nhere, you can keep track of the parameter blowup. And if it's a quadratic\nblowup, then you'd",
    "start": "1642314",
    "end": "1647480"
  },
  {
    "text": "get that there's no n to the\nsquare root of k algorithm. We'll actually do that in\na moment for planar graph problems.",
    "start": "1647480",
    "end": "1653080"
  },
  {
    "text": "But for general graphs,\nclique and independent set, no f of k for any\ncomputable function f times",
    "start": "1653080",
    "end": "1658980"
  },
  {
    "text": "n to the little of k algorithm. So this is much stronger\nthan FPT does not equal w1.",
    "start": "1658980",
    "end": "1666040"
  },
  {
    "text": " And this is a result from 2006,\nso fairly recent by Chen et al.",
    "start": "1666040",
    "end": "1678669"
  },
  {
    "text": "So let's prove it. It is essentially a\nreduction from 3-coloring.",
    "start": "1678670",
    "end": "1683970"
  },
  {
    "text": " But it's unlike\nmost reductions we think about,\nbecause-- well, it's",
    "start": "1683970",
    "end": "1693860"
  },
  {
    "text": "unlike parametrized reductions. Question? AUDIENCE: Sorry, so is this\n[INAUDIBLE] from claiming",
    "start": "1693860",
    "end": "1700169"
  },
  {
    "text": "that the xp hard these problems? PROFESSOR: Yeah. xp hard\nis really way up there. None of the problems\nwe've talked about",
    "start": "1700170",
    "end": "1706430"
  },
  {
    "text": "are xp hard, unless something\nhappens with p versus np.",
    "start": "1706430",
    "end": "1711498"
  },
  {
    "text": "AUDIENCE: But xp [INAUDIBLE]\nproblems that you have-- PROFESSOR: These are\nin xp, but they're also",
    "start": "1711498",
    "end": "1718270"
  },
  {
    "text": "in-- these problems\nare actually in w1, which is much smaller than xp. ",
    "start": "1718270",
    "end": "1725060"
  },
  {
    "text": "Yeah, I mentioned xp because of\nthe n to the k to some constant",
    "start": "1725060",
    "end": "1730200"
  },
  {
    "text": "is related in the same vicinity. But it's not directly about xp.",
    "start": "1730200",
    "end": "1736159"
  },
  {
    "text": "So normally when we do\nparametrized reductions, we start from a\nparametrized problem and we reduce to a\nparametrized problem.",
    "start": "1736160",
    "end": "1742140"
  },
  {
    "text": "Here, we are reducing from\nan unparametrized problem. 3-coloring has no parameter. And we are going to\nreduce to clique,",
    "start": "1742140",
    "end": "1749309"
  },
  {
    "text": "which has a parameter, namely\nthe size of the clique. So it's a little\nweird, but you've got to get started somehow.",
    "start": "1749310",
    "end": "1756770"
  },
  {
    "text": "So we're going to\nintroduce a quantity k",
    "start": "1756770",
    "end": "1761840"
  },
  {
    "text": "and set it how we want to.",
    "start": "1761840",
    "end": "1766890"
  },
  {
    "text": "So here's the idea. We are given an\ninstance of 3-coloring.",
    "start": "1766890",
    "end": "1772030"
  },
  {
    "text": "We're given a graph. We're going to split the\nvertices into k groups, each",
    "start": "1772030",
    "end": "1786340"
  },
  {
    "text": "of n over k vertices. ",
    "start": "1786340",
    "end": "1804540"
  },
  {
    "text": "And remember, we know\nthat 3-coloring has no 2 to the little of\nn time algorithm. That's what I just\nerased, assuming ETH.",
    "start": "1804540",
    "end": "1810575"
  },
  {
    "text": " So I'm going to choose\nk in a little bit.",
    "start": "1810575",
    "end": "1816530"
  },
  {
    "text": "But let me first tell\nyou the reduction. So we're going to\ncreate a new graph.",
    "start": "1816530",
    "end": "1822175"
  },
  {
    "text": " Let's call it g prime, with\nk groups of not n over k,",
    "start": "1822175",
    "end": "1835870"
  },
  {
    "text": "but 3 to the n over k vertices. ",
    "start": "1835870",
    "end": "1843500"
  },
  {
    "text": "Why 3? Because we are going to think\nabout all possible 3-colorings of those n over k vertices.",
    "start": "1843500",
    "end": "1850194"
  },
  {
    "text": "So it's corresponding. For every group up here,\nwe're going to just write down every possible 3-coloring.",
    "start": "1850194",
    "end": "1855559"
  },
  {
    "text": "So obviously, n over k\nhas to be quite small, every possible 3-coloring of\nthose and n over k vertices.",
    "start": "1855560",
    "end": "1862539"
  },
  {
    "text": " So the intent is that\nin our clique problem,",
    "start": "1862540",
    "end": "1882740"
  },
  {
    "text": "that we want to choose\nexactly one vertex from each of these groups. So k is supposed to be\nthe size of our clique.",
    "start": "1882740",
    "end": "1891799"
  },
  {
    "text": "That's why I wrote it this way. ",
    "start": "1891799",
    "end": "1899140"
  },
  {
    "text": "So at the moment, I have\nvertices but I have no edges. Each of the groups is going\nto be an independent set,",
    "start": "1899140",
    "end": "1904890"
  },
  {
    "text": "so that means you can\nonly choose at most one vertex from each group,\nto make a clique.",
    "start": "1904890",
    "end": "1910400"
  },
  {
    "text": "And we are going to\nconnect to colorings if they're compatible. ",
    "start": "1910400",
    "end": "1919812"
  },
  {
    "text": "by an edge nG prime\nif compatible.",
    "start": "1919812",
    "end": "1926960"
  },
  {
    "text": " So the idea is, here is\none group, size n over k.",
    "start": "1926960",
    "end": "1935440"
  },
  {
    "text": "Here is another group\nof size n over k. And if you color these\nvertices some colors--",
    "start": "1935440",
    "end": "1944380"
  },
  {
    "text": "I'm only using one color--\nand you color some colors over here, now it's coloring\nwithin the group,",
    "start": "1944380",
    "end": "1952550"
  },
  {
    "text": "but there are some\ncross edges between here which may be incorrect.",
    "start": "1952550",
    "end": "1958000"
  },
  {
    "text": "They may be monochromatic. And so we check\nwhether the coloring of this and the\ncoloring of this is",
    "start": "1958000",
    "end": "1963030"
  },
  {
    "text": "consistent with all the cross\nedges between those two groups. If it is compatible, if it's a\nvalid coloring of both groups,",
    "start": "1963030",
    "end": "1969480"
  },
  {
    "text": "we connect them by an edge. This coloring corresponds\nto single vertex in G prime and this coloring corresponds\nto a single vertex in G prime.",
    "start": "1969480",
    "end": "1976760"
  },
  {
    "text": "And we add an edge if it's OK. We don't add the\nedge it's not OK. And if we're looking\nfor a clique,",
    "start": "1976760",
    "end": "1981960"
  },
  {
    "text": "that means we need to choose a\ncoloring for each of the groups where everything is\npairwise compatible.",
    "start": "1981960",
    "end": "1987750"
  },
  {
    "text": "And that represents\nall the edges. Every edge is either within\na group, in which case it was taken care\nof at this stage.",
    "start": "1987750",
    "end": "1994540"
  },
  {
    "text": "I guess I should say is at\nmost, 3 to the n over k. I only want valid 3-colorings.",
    "start": "1994540",
    "end": "2000565"
  },
  {
    "text": " Or the edge crosses\nbetween two groups",
    "start": "2000565",
    "end": "2007167"
  },
  {
    "text": "and then it will be\nconsidered when we think about whether there's an edge. In a clique, there\nare pairwise edges",
    "start": "2007167",
    "end": "2012280"
  },
  {
    "text": "and so everything is\npairwise compatible. So never mind the claim.",
    "start": "2012280",
    "end": "2018640"
  },
  {
    "text": "You should be convinced this\nis a valid reduction, in terms of a correctness standpoint,\nfrom 3-coloring to k",
    "start": "2018640",
    "end": "2025410"
  },
  {
    "text": "clique for any k. The construction depends on k. ",
    "start": "2025410",
    "end": "2041210"
  },
  {
    "text": "So what do we set k to? ",
    "start": "2041210",
    "end": "2052310"
  },
  {
    "text": "Here is a setting\nfor k that will work. I don't have a ton of\nintuition for this, other than the algebra works.",
    "start": "2052310",
    "end": "2059879"
  },
  {
    "text": "Essentially, we need\nto set it just-- we want to set k to, like, a\ntiny, super-constant thing.",
    "start": "2059880",
    "end": "2065870"
  },
  {
    "text": "So just a little bit,\nlittle omega of one.",
    "start": "2065870",
    "end": "2071330"
  },
  {
    "text": "And I need to give that\nlittle of k a name.",
    "start": "2071330",
    "end": "2078730"
  },
  {
    "text": "So I'm going to say, let's\nsay k clique could be solved",
    "start": "2078730",
    "end": "2091638"
  },
  {
    "text": "in f of k times n to the k\nover s of k time, where s of k",
    "start": "2091639",
    "end": "2108349"
  },
  {
    "text": "is some monotone, increasing,\nand unbounded function.",
    "start": "2108350",
    "end": "2119145"
  },
  {
    "text": " I need that s goes to infinity.",
    "start": "2119145",
    "end": "2124809"
  },
  {
    "text": "That's the meaning\nof little of k is that you can\ndivide by something. And you can assume\nwithout loss of generality",
    "start": "2124810",
    "end": "2130510"
  },
  {
    "text": "that the something is\nmonotone increasing, but in particular it\nshould go to infinity as k goes to infinity. It might go there very slowly.",
    "start": "2130510",
    "end": "2136250"
  },
  {
    "text": "It could be, like, 1 over\n2 to the k or something. But something little--\ns is little omega of 1.",
    "start": "2136250",
    "end": "2146530"
  },
  {
    "text": " But now I have this quantity s.",
    "start": "2146530",
    "end": "2151910"
  },
  {
    "text": "And I'm going to set k as large\nas possible so that f of k",
    "start": "2151910",
    "end": "2172530"
  },
  {
    "text": "is at most n and k to the\nk over s of k is at most n.",
    "start": "2172530",
    "end": "2182630"
  },
  {
    "text": "My goal here is to\nmake k a function of n. ",
    "start": "2182630",
    "end": "2191020"
  },
  {
    "text": "And so one choice of k is\nbasically f inverse of n. So f, remember, was the\ndependence on k, so here.",
    "start": "2191020",
    "end": "2200430"
  },
  {
    "text": "This will turn out to work. So you can think of k\njust being f inverse of n.",
    "start": "2200430",
    "end": "2206204"
  },
  {
    "text": "But there's actually\nanother constraint. It's another inverse thing. I want k to be at most, the\ninverse of this relation.",
    "start": "2206204",
    "end": "2215440"
  },
  {
    "text": "So I'm basically taking the\nmin of these two functions of n that will be a function\nof n, which is growing.",
    "start": "2215440",
    "end": "2222864"
  },
  {
    "text": "I mean, you can check. If you set k to be a constant,\nof course this is true. If you set k to be a constant,\nof course this is true.",
    "start": "2222864",
    "end": "2228660"
  },
  {
    "text": "So you can set it a\nlittle bit superconstant by inverting this relation. That gives you some value of\nk that would satisfy this,",
    "start": "2228660",
    "end": "2237070"
  },
  {
    "text": "some function k equals k of\nn that would satisfy this. And I want to take\nthe min of those two.",
    "start": "2237070",
    "end": "2243190"
  },
  {
    "text": "Still a growing function of n. We'll need that in a moment.",
    "start": "2243190",
    "end": "2249079"
  },
  {
    "text": "And I get these\ntwo inequalities. Now it is just a computation of\nhow much running time I have.",
    "start": "2249080",
    "end": "2259930"
  },
  {
    "text": "So I want to plug\nthis algorithm-- this was an algorithm for k clique. I have this instance\nof k clique, which",
    "start": "2259930",
    "end": "2266860"
  },
  {
    "text": "looks a little weird\nbecause it's got potentially a lot of vertices. I'm just going to plug that in. This is my n prime, the new--\nwell, the number of vertices",
    "start": "2266860",
    "end": "2276450"
  },
  {
    "text": "is this times k, because\nthey're k groups. So a number of vertices\nin G prime is k times 3",
    "start": "2276450",
    "end": "2286710"
  },
  {
    "text": "to n over k at most. So we just plug that\ninto this running time.",
    "start": "2286710",
    "end": "2293590"
  },
  {
    "text": "And we get f of k times that\nnumber of vertices, k times 3",
    "start": "2293590",
    "end": "2301590"
  },
  {
    "text": "n over k at most. So less than or equal to\nthe power k over s of k.",
    "start": "2301590",
    "end": "2311650"
  },
  {
    "text": "And now we do some manipulation. We know that f of\nk is at most n. That will be enough\nfor this term.",
    "start": "2311650",
    "end": "2317180"
  },
  {
    "text": "This is at most n times-- I'm\ngoing to split this apart. So we have k to the\nk over s of k power.",
    "start": "2317180",
    "end": "2326010"
  },
  {
    "text": "And then separately, we\nhave 3 to the n over k to the k over s of k.",
    "start": "2326010",
    "end": "2335190"
  },
  {
    "text": "Again, k to the k\nover s of k, that's something I get to assume\nis less than or equal to n. So this is less than\nor equal to n squared.",
    "start": "2335190",
    "end": "2342680"
  },
  {
    "text": "And then the k's cancel.",
    "start": "2342680",
    "end": "2349109"
  },
  {
    "text": "And we're left with 3\nto the n over s of k.",
    "start": "2349110",
    "end": "2356440"
  },
  {
    "text": "I'm going to remind you\nk is a function of n that is unbounded and\nmonotone increasing.",
    "start": "2356440",
    "end": "2362940"
  },
  {
    "text": "So this is 3 to the little\no of n, also known as 2",
    "start": "2362940",
    "end": "2369162"
  },
  {
    "text": "to the little o of n. ",
    "start": "2369163",
    "end": "2377370"
  },
  {
    "text": "So I just needed to choose k\nto be slightly superconstant. And I wanted to get rid of these\nterms, so I made them at most n",
    "start": "2377370",
    "end": "2383380"
  },
  {
    "text": "and took those\ninverses, took them in. And boom, we get\na contradiction. This contradicts ETH.",
    "start": "2383380",
    "end": "2390780"
  },
  {
    "text": "This implies ETH is false. So if you assume ETH, running\nbackwards you get that k clique",
    "start": "2390780",
    "end": "2398470"
  },
  {
    "text": "cannot be solved in\nsuch a running time. And so we get this very\nstrong lower bound. There's no f of k\ntimes n to the little o",
    "start": "2398470",
    "end": "2404900"
  },
  {
    "text": "of k algorithm for k clique. So in particular, k clique is\nnot fixed parameter tractable.",
    "start": "2404900",
    "end": "2410172"
  },
  {
    "text": "I think that's pretty neat. And henceforth, you care\nabout parameter blowup.",
    "start": "2410172",
    "end": "2417960"
  },
  {
    "text": "I mentioned it\nbriefly last class. But in general, you map some\nproblem x with parameter k",
    "start": "2417960",
    "end": "2426350"
  },
  {
    "text": "into a new instance x prime\nwith parameter k prime. And k prime just has to be\nbounded by any function,",
    "start": "2426350",
    "end": "2433030"
  },
  {
    "text": "any computable function of k. But if it's a linear function,\nyou preserve this strong bound.",
    "start": "2433030",
    "end": "2440250"
  },
  {
    "text": "If it's quadratic function, then\nyou get there's no f of k times n to the little o\nof square root of k.",
    "start": "2440250",
    "end": "2446420"
  },
  {
    "text": "If it's an exponential function,\nwhich is fair game here, you get a weaker bound. You still get that\nthere's no FPT algorithm.",
    "start": "2446420",
    "end": "2454170"
  },
  {
    "text": "But you don't get a nice--\nnot a very impressive bound in terms of n on the right.",
    "start": "2454170",
    "end": "2461210"
  },
  {
    "text": "AUDIENCE: Is there a name\nfor this type of reduction? PROFESSOR: I don't have one.",
    "start": "2461210",
    "end": "2466680"
  },
  {
    "text": " There's only one\nthat I know of, so I don't think I will try\nto come up with a name.",
    "start": "2466680",
    "end": "2475010"
  },
  {
    "text": "Once you have this,\nyou can-- last class we reduced k clique\nto all sorts of things.",
    "start": "2475010",
    "end": "2482490"
  },
  {
    "text": "And so we get a\nlot of-- for now, you just reduce from\nclique or variations.",
    "start": "2482490",
    "end": "2488780"
  },
  {
    "text": "And so you get\nlots of good stuff. ",
    "start": "2488780",
    "end": "2494690"
  },
  {
    "text": "What do you get? ",
    "start": "2494690",
    "end": "2503490"
  },
  {
    "text": "Last time we covered a\nreduction from clique to multicolored clique\nand independent set.",
    "start": "2503490",
    "end": "2513000"
  },
  {
    "text": "And if you look at that\nproof, k prime equals k.",
    "start": "2513000",
    "end": "2518600"
  },
  {
    "text": "We had a quadratic blowup\nin the problem size, but the parameter\ndidn't change at all.",
    "start": "2518600",
    "end": "2526650"
  },
  {
    "text": "So this is good news. That means this problem,\nor these two problems,",
    "start": "2526650",
    "end": "2532070"
  },
  {
    "text": "has no-- assuming ETH,\nthere's no f of k times",
    "start": "2532070",
    "end": "2540890"
  },
  {
    "text": "n to the little\no of k algorithm.",
    "start": "2540890",
    "end": "2546309"
  },
  {
    "text": "And also, we covered a\nreduction to dominating set. Even though dominating\nset was w2 hard,",
    "start": "2546310",
    "end": "2554542"
  },
  {
    "text": "we still reduced from\nmulticolored clique to dominating set. And then from dominates set,\nwe could reduce to set cover.",
    "start": "2554542",
    "end": "2560640"
  },
  {
    "text": "All of these reductions\npreserve k exactly. All we need is that they\npreserve it linearly. But then we get\nthis kind of result",
    "start": "2560640",
    "end": "2567080"
  },
  {
    "text": "for all of those problems.  We covered a reduction\nfor partial vertex cover.",
    "start": "2567080",
    "end": "2575100"
  },
  {
    "text": " But I think the reduction\nwe covered was not linear.",
    "start": "2575100",
    "end": "2581680"
  },
  {
    "text": "But there is one. So I'll just state\nthis as a result, but this is another one\nwhere we covered a reduction,",
    "start": "2581680",
    "end": "2586990"
  },
  {
    "text": "but it wasn't the\nmost efficient one. I think we lost a\nquadratic amount. ",
    "start": "2586990",
    "end": "2598966"
  },
  {
    "text": "Any questions? Yeah? AUDIENCE: Do we happen\nto know if FPT and w1 are separated assuming\nonly [INAUDIBLE]",
    "start": "2598967",
    "end": "2605702"
  },
  {
    "text": "and not assuming ETH? PROFESSOR: We do not know that.  The best classical\nassumption is ETH",
    "start": "2605702",
    "end": "2613750"
  },
  {
    "text": "implies w1 does not equal FPT. ",
    "start": "2613750",
    "end": "2619350"
  },
  {
    "text": "I also don't know offhand\nwhether FPT does not equal w1 implies p does not equal NP. I think there's this\nresult along those lines,",
    "start": "2619350",
    "end": "2626170"
  },
  {
    "text": "but I'm not sure if\nthat's literally true. So intuitively it's stronger,\nbut-- other questions?",
    "start": "2626170",
    "end": "2634714"
  },
  {
    "text": " AUDIENCE: So this is\nstrictly better lower bound",
    "start": "2634715",
    "end": "2642315"
  },
  {
    "text": "than those over there?  PROFESSOR: Right.",
    "start": "2642315",
    "end": "2647350"
  },
  {
    "text": "Good question. So before we switched\nto parametrized land, we said-- like over here,\nwe had there was no 2",
    "start": "2647350",
    "end": "2654079"
  },
  {
    "text": "to the little of n algorithm. Here we're getting that\nthere's no f of k times",
    "start": "2654080",
    "end": "2659400"
  },
  {
    "text": "n to the little of k algorithm. I think that is stronger\nthan the old bound.",
    "start": "2659400",
    "end": "2666279"
  },
  {
    "text": "Though I guess you have to think\nabout it problem by problem. It depends on how k could\nrelate to n in general.",
    "start": "2666280",
    "end": "2672039"
  },
  {
    "text": "I think for these\nproblems though, it is a stronger result. ",
    "start": "2672039",
    "end": "2682460"
  },
  {
    "text": "Because k is at most n. And k can be close to n.",
    "start": "2682460",
    "end": "2687480"
  },
  {
    "start": "2687480",
    "end": "2696550"
  },
  {
    "text": "So the next topic-- just\ntaking a little breather. This is all good for\nnon-planar graphs.",
    "start": "2696550",
    "end": "2704990"
  },
  {
    "text": "For planar graphs, we actually\nhaven't seen any w1 hardness results yet.",
    "start": "2704990",
    "end": "2710470"
  },
  {
    "text": "And that's because a lot\nof planar problems are FPT. There are, in fact, 2 to\nthe square root of k times",
    "start": "2710470",
    "end": "2716530"
  },
  {
    "text": "polynomial in n algorithms for\na ton of planar graph problems. But there are some that are\nhard, some that are w1 hard.",
    "start": "2716530",
    "end": "2722700"
  },
  {
    "text": "And as you might expect, this\nk becomes the square root of k because we get a quadratic\nblowup, for some problems--",
    "start": "2722700",
    "end": "2730390"
  },
  {
    "text": "not quite all of them. So this comes back\nto Jason's question. And maybe I'll go up here.",
    "start": "2730390",
    "end": "2736470"
  },
  {
    "text": " Let me briefly\nmention in general",
    "start": "2736470",
    "end": "2745540"
  },
  {
    "text": "if k prime of x prime is at\nmost some g of k of x, this",
    "start": "2745540",
    "end": "2751510"
  },
  {
    "text": "was part of our--\nin the definition of parametrized reduction,\nthen if there's no f of k n",
    "start": "2751510",
    "end": "2762160"
  },
  {
    "text": "to the little of k\nalgorithm for problem A,",
    "start": "2762160",
    "end": "2769690"
  },
  {
    "text": "then there is no f\nprime of k prime times n",
    "start": "2769690",
    "end": "2776099"
  },
  {
    "text": "to the little o of g inverse\nof k prime algorithm for B.",
    "start": "2776100",
    "end": "2786330"
  },
  {
    "text": "So I think the\nanalogous statement was up here for size blowup\nand regular np reductions.",
    "start": "2786330",
    "end": "2791870"
  },
  {
    "text": "But for parametrized reductions,\nI mean, the dependence on k is just an arbitrary\ncomputable function.",
    "start": "2791870",
    "end": "2796942"
  },
  {
    "text": "So that doesn't change. But the exponent\nchanges correspondingly. So if you square k, we get the\nsquare root in the exponent.",
    "start": "2796942",
    "end": "2803430"
  },
  {
    "start": "2803430",
    "end": "2813940"
  },
  {
    "text": "So let's do some\nplanar problems. ",
    "start": "2813940",
    "end": "2820140"
  },
  {
    "text": "I'm pretty sure all\nof the w1 hardness results for planar problems\nare within the last five years.",
    "start": "2820140",
    "end": "2826820"
  },
  {
    "text": "So it's a pretty\nrecent direction. And the key insight is a\nproblem called grid tiling,",
    "start": "2826820",
    "end": "2839240"
  },
  {
    "text": "which I have a slide for. So this is a problem invented\nby Daniel Marx in 2007.",
    "start": "2839240",
    "end": "2850090"
  },
  {
    "text": "And so the input looks like this\nand the output looks like that.",
    "start": "2850090",
    "end": "2855120"
  },
  {
    "text": "So in general, you're given\na k by k matrix of sets.",
    "start": "2855120",
    "end": "2860790"
  },
  {
    "text": "Each set has some number\nof 2D coordinates. These coordinates\nrange between 1 and n.",
    "start": "2860790",
    "end": "2869069"
  },
  {
    "text": "So it's k by k, small\nmatrix, but each cell has a ton of stuff in it,\nup to n squared pairs.",
    "start": "2869070",
    "end": "2877359"
  },
  {
    "text": " And your goal is\nto-- in this example,",
    "start": "2877360",
    "end": "2883890"
  },
  {
    "text": "all the numbers are\nbetween 1 and 5. So n equals 5. And it's 3 by 3, so k equals 3.",
    "start": "2883890",
    "end": "2889819"
  },
  {
    "text": "Your goal is to choose\nexactly one element",
    "start": "2889820",
    "end": "2895430"
  },
  {
    "text": "from these sets, such that\nif you look in any column the first coordinates\nare all the same.",
    "start": "2895430",
    "end": "2902940"
  },
  {
    "text": "Here, the first\ncoordinate are all 1. Here, first\ncoordinates are all 2. And in any row, the second\ncoordinate is the same.",
    "start": "2902940",
    "end": "2909920"
  },
  {
    "text": "Here they're all 4. Here they're all 2. Here they're all 3. So that's a valid solution.",
    "start": "2909920",
    "end": "2916790"
  },
  {
    "text": "As you might expect,\nthis is np complete. But furthermore, it's w1 heart.",
    "start": "2916790",
    "end": "2922995"
  },
  {
    "start": "2922995",
    "end": "2934760"
  },
  {
    "text": "I should say sij--\njust gives you some notation-- is a subset\nof 1 up to n squared for all i",
    "start": "2934760",
    "end": "2947360"
  },
  {
    "text": "and j in 1 up to k. That's what the\ninput looks like.",
    "start": "2947360",
    "end": "2954450"
  },
  {
    "text": "The squared means you\nhave ordered pairs. And then your goal is to\nchoose an xij out of each sij",
    "start": "2954450",
    "end": "2961730"
  },
  {
    "text": "so that in any row, the first\ncoordinates match any column. Sorry. In any row, the second\ncoordinates match",
    "start": "2961730",
    "end": "2968446"
  },
  {
    "text": "and in any column, the\nfirst coordinates match. ",
    "start": "2968446",
    "end": "2973860"
  },
  {
    "text": "So claim is this is w1 hard. And also now, we know w1\nhardness is not the most we could hope for.",
    "start": "2973860",
    "end": "2979660"
  },
  {
    "text": "We also want to know what\nthe parameter blowup is and how we can relate\nit back to ETH.",
    "start": "2979660",
    "end": "2984680"
  },
  {
    "text": "So here we will\nget the same bound. There's no f of k times n to\nthe little o of k algorithm,",
    "start": "2984680",
    "end": "2993870"
  },
  {
    "text": "assuming ETH. So here we will not\nlose a quadratic thing. But notice that this\nthing is k by k.",
    "start": "2993870",
    "end": "2999359"
  },
  {
    "text": "So, while we've defined\nthe parameter to be k,",
    "start": "2999360",
    "end": "3004800"
  },
  {
    "text": "there's kind of a quadratic\namount of stuff going on. You're selecting k\nsquared different things in the solution.",
    "start": "3004800",
    "end": "3010943"
  },
  {
    "text": "That's still OK. I mean, k is still the number of\nrows or columns of the matrix.",
    "start": "3010944",
    "end": "3017360"
  },
  {
    "text": "But typically, the\nreason this problem is interesting-- this is, like,\na starting point for planar graph problems,\nbecause you can replace",
    "start": "3017360",
    "end": "3023690"
  },
  {
    "text": "each of these\ncells of the matrix with the gadget that\nsomehow represents",
    "start": "3023690",
    "end": "3029630"
  },
  {
    "text": "all the things in that set,\nbut that now these constraints",
    "start": "3029630",
    "end": "3035349"
  },
  {
    "text": "that all the things\nin the column agree in the first\ncoordinate, you can think of as a local constraint. Because really, you just need\nthat the guy you select here",
    "start": "3035350",
    "end": "3042270"
  },
  {
    "text": "has the same first coordinate\nas the guy you select here. You only need to\nconstrain adjacent cells.",
    "start": "3042270",
    "end": "3047414"
  },
  {
    "text": "Because if his adjacent\ncells are equal, then the whole\ncolumn will be equal. And if adjacent rows have\nequal second coordinates,",
    "start": "3047414",
    "end": "3053350"
  },
  {
    "text": "then the whole column will\nhave equal second coordinates. So as long as you\ncan build gadgets",
    "start": "3053350",
    "end": "3058510"
  },
  {
    "text": "that just check with\ntheir neighbors, that will give you a kind of\nplanar graph structure, or a 2D",
    "start": "3058510",
    "end": "3063900"
  },
  {
    "text": "geometry structure if you're\ndoing a geometric problem and it lets you work with\nthings kind of locally.",
    "start": "3063900",
    "end": "3071650"
  },
  {
    "text": "But when you do that, of course,\ntypically k becomes k squared. And that's where you get the\nsquare root of k up here.",
    "start": "3071650",
    "end": "3077220"
  },
  {
    "text": "But it won't disappear yet.  So how do we prove this?",
    "start": "3077220",
    "end": "3083330"
  },
  {
    "text": "We're going to reduce from\nclique because that is",
    "start": "3083330",
    "end": "3088390"
  },
  {
    "text": "our favorite w1 hard problem. ",
    "start": "3088390",
    "end": "3093920"
  },
  {
    "text": "And it has this kind of bound. And so it's going to\nbe a linear reduction. In fact, k prime will equal\nk and n prime will equal n.",
    "start": "3093920",
    "end": "3103780"
  },
  {
    "text": "n here is the maximum coordinate\nvalues in the original problem.",
    "start": "3103780",
    "end": "3109200"
  },
  {
    "text": "n prime is the number of\nvertices in the clique. And I'm going to write\ndown the reduction",
    "start": "3109200",
    "end": "3117820"
  },
  {
    "text": "and then show you a picture. It's hard to actually\ndraw the full reduction.",
    "start": "3117820",
    "end": "3123470"
  },
  {
    "text": "It's easier to write it\ndown generically and then",
    "start": "3123470",
    "end": "3129790"
  },
  {
    "text": "show you kind of a little\nslice of a real example. ",
    "start": "3129790",
    "end": "3152920"
  },
  {
    "text": "It's a little bit\nconfusing, because there are four parameters lying around.",
    "start": "3152920",
    "end": "3158090"
  },
  {
    "text": "There's which cell are you\nin, which I'm denoting by ij. i is which row you're in. j\nis which column you're in.",
    "start": "3158090",
    "end": "3166730"
  },
  {
    "text": "So this is the set of\nthings at row i column j. But then separately,\nthere the coordinates",
    "start": "3166730",
    "end": "3173950"
  },
  {
    "text": "that are inside the cell. And here I'm denoting\nthat by vertices, because",
    "start": "3173950",
    "end": "3179640"
  },
  {
    "text": "for us, what this says is\nthat the vertices map 1 to 1",
    "start": "3179640",
    "end": "3185680"
  },
  {
    "text": "with coordinate values.",
    "start": "3185680",
    "end": "3191131"
  },
  {
    "text": "But these coordinate values\nare different from the ij coordinate values. The ij's are always\nbetween 1 and k. These coordinate values\nare between 1 and m.",
    "start": "3191132",
    "end": "3198597"
  },
  {
    "text": "Probably should have a term\nfor those, that distinction. But such as it is, ij\nis between 1 and k. v",
    "start": "3198597",
    "end": "3204290"
  },
  {
    "text": "and w are between 1 and n. So there's two types of cells. There's cells on the\ndiagonal of the matrix",
    "start": "3204290",
    "end": "3209940"
  },
  {
    "text": "and cells off the diagonal. This is for i not equal to j. On the diagonal, you just\nhave pairs of the form vv.",
    "start": "3209940",
    "end": "3218400"
  },
  {
    "text": "So that's supposed to\nrepresent the vertex. And so basically what you\nchoose on the diagonal is going to correspond to\nthe clique that you want.",
    "start": "3218400",
    "end": "3226950"
  },
  {
    "text": "Because the diagonal has size\nk, and so each diagonal item is going to have\nto choose a vertex.",
    "start": "3226950",
    "end": "3233390"
  },
  {
    "text": "It's going to turn out that\nvertex will be in a clique. Why will it be in a clique? Because the off\ndiagonal entries are",
    "start": "3233390",
    "end": "3240130"
  },
  {
    "text": "going to force that\nthere are edges between corresponding vertices. So the off diagonal\nentries will have,",
    "start": "3240130",
    "end": "3246090"
  },
  {
    "text": "for every edge-- and we're\nassuming no loops here-- for every edge, we put vw\nan item in the set of pairs.",
    "start": "3246090",
    "end": "3259654"
  },
  {
    "text": "And if this is an undirected\ngraph, we'll put vwnwv. ",
    "start": "3259654",
    "end": "3265910"
  },
  {
    "text": "And so in fact, all of the off\ndiagonal entries look the same,",
    "start": "3265910",
    "end": "3271460"
  },
  {
    "text": "I guess. And all of the diagonal\nentries look the same in terms of the s sets.",
    "start": "3271460",
    "end": "3277120"
  },
  {
    "text": "So let's look at an example. Suppose you choose this 2-2\ndiagonal entry to be vertex i.",
    "start": "3277120",
    "end": "3286450"
  },
  {
    "text": "Didn't assume very much. But from the constraints\nof the grid tiling problem,",
    "start": "3286450",
    "end": "3291560"
  },
  {
    "text": "we know that the whole row here\nhas the same second coordinate.",
    "start": "3291560",
    "end": "3297300"
  },
  {
    "text": "And the whole column here has\nthe same first coordinate. So if you choose\nthe vertex i here, that forces i to appear\nthroughout there.",
    "start": "3297300",
    "end": "3306850"
  },
  {
    "text": "And if you look at some other\nvertex, vj on the diagonal,",
    "start": "3306850",
    "end": "3312280"
  },
  {
    "text": "then same thing happens. You have j second\ncoordinate here and j first coordinate there.",
    "start": "3312280",
    "end": "3321780"
  },
  {
    "text": "I see there's a slight\ntypo on these slides. This should be a j. That should be an i.",
    "start": "3321780",
    "end": "3327400"
  },
  {
    "text": "The colors are right, though. So just look at the colors. ",
    "start": "3327400",
    "end": "3335490"
  },
  {
    "text": "Now, for this to be\nin the set, there must be an edge\nbetween vi and vj.",
    "start": "3335490",
    "end": "3341200"
  },
  {
    "text": "And this is true for all i and\nj; therefore you have a clique. Now one thing that's important\nis that vi is distinct from vj.",
    "start": "3341200",
    "end": "3347899"
  },
  {
    "text": "Otherwise, you could just put\nvi in all the diagonal entries, and everything is vi vi. But because we said\nv does not equal w",
    "start": "3347899",
    "end": "3356730"
  },
  {
    "text": "for these sets, the fact that\nthere is a valid choice here, the fact that vi vj is a\nvalid thing in this item",
    "start": "3356730",
    "end": "3365600"
  },
  {
    "text": "means that vi does not equal vj.",
    "start": "3365600",
    "end": "3370870"
  },
  {
    "text": "So these are all\ndistinct vertices. There's exactly k of them. And so this problem has\na solution if and only",
    "start": "3370870",
    "end": "3377540"
  },
  {
    "text": "if there was a k clique\nin the original graph. Clear?",
    "start": "3377540",
    "end": "3383320"
  },
  {
    "text": "I guess these entries are\ntechnically correct if you view these as unordered pairs. Because we're in an undirected\ngraph, everything is flippable.",
    "start": "3383320",
    "end": "3390105"
  },
  {
    "text": " So that proves that grid\ntiling is as hard as clique.",
    "start": "3390105",
    "end": "3399510"
  },
  {
    "text": "And it was a linear reduction. We started with value k. We ended up with a thing\nwhose parameter was k.",
    "start": "3399510",
    "end": "3407683"
  },
  {
    "text": "AUDIENCE: Say\nsomething again like, it just seems like\nyou've just redefined",
    "start": "3407684",
    "end": "3414180"
  },
  {
    "text": "your n and k to be square root\nof what you might normally.",
    "start": "3414180",
    "end": "3419234"
  },
  {
    "text": "PROFESSOR: Yeah,\nso if you prefer, you could define k to be the\nnumber of cells in the matrix.",
    "start": "3419235",
    "end": "3424540"
  },
  {
    "text": "And then what you would get\nhere is there's no f of k n to the little o of square root\nof k algorithm, assuming ETH.",
    "start": "3424540",
    "end": "3433270"
  },
  {
    "text": "It's just a matter of\nwhat you define k to be. You're going to either lose\na square here or later.",
    "start": "3433270",
    "end": "3439600"
  },
  {
    "text": "And I think-- so I'll\nshow you why in a moment, why you might\ndefine it this way.",
    "start": "3439600",
    "end": "3445750"
  },
  {
    "text": "Because here's going to be a\nplanar graph problem, kind of, that does not blow up k at all.",
    "start": "3445750",
    "end": "3453970"
  },
  {
    "text": "Turns out, sometimes\nyou don't have to blow up-- this k turns\nout to be the correct k.",
    "start": "3453970",
    "end": "3459760"
  },
  {
    "text": "So let's do that example. It's called k outer\nplanar list coloring.",
    "start": "3459760",
    "end": "3466789"
  },
  {
    "text": "There's two things\nI need to define-- list coloring and outer planar. ",
    "start": "3466789",
    "end": "3497949"
  },
  {
    "text": "Let's start with list coloring. ",
    "start": "3497949",
    "end": "3512810"
  },
  {
    "text": "So in list coloring, given a\ngraph and for every vertex, you're given a list\nof valid colors.",
    "start": "3512810",
    "end": "3519410"
  },
  {
    "start": "3519410",
    "end": "3527319"
  },
  {
    "text": "And your goal is\nto color the graph. Again, no edge should\nbe monochromatic.",
    "start": "3527320",
    "end": "3532380"
  },
  {
    "text": "And the color you\nchoose for vertex v must be on the list Lv. ",
    "start": "3532380",
    "end": "3539220"
  },
  {
    "text": "So this is a generalization\nof k coloring. k coloring is the\ncase where Lv equals 1 through k for all vertices.",
    "start": "3539220",
    "end": "3546430"
  },
  {
    "text": "This is, of course,\na harder problem. And turns out, it's quite hard.",
    "start": "3546430",
    "end": "3554870"
  },
  {
    "text": "For example, it's NP\nhard for planar graphs. That's not surprising,\nbecause 3-coloring is NP",
    "start": "3554870",
    "end": "3561869"
  },
  {
    "text": "hard for planar graphs.  And size of Lv is less\nthan or equal to 3",
    "start": "3561870",
    "end": "3569140"
  },
  {
    "text": "for all v. The hardness\nof planar 3-coloring gives you that.",
    "start": "3569140",
    "end": "3575380"
  },
  {
    "text": "So there's also no\nnatural parameter here, because you can't parametrize\nby number of colors you have,",
    "start": "3575380",
    "end": "3580980"
  },
  {
    "text": "because even when it's\nthree, this problem is hard. So we're going to parametrize\nby something else, namely",
    "start": "3580980",
    "end": "3588570"
  },
  {
    "text": "a quantity called\nouter planarity. ",
    "start": "3588570",
    "end": "3594430"
  },
  {
    "text": "If you know what tree width\nis, you can think tree width.",
    "start": "3594430",
    "end": "3600809"
  },
  {
    "text": "But tree width is a\nbit messy to define, so I'll stick to\nouter planarity, which for planar graphs is\nwithin a constant factor.",
    "start": "3600810",
    "end": "3608280"
  },
  {
    "text": "So outer planarity-- if\nyou have a planar graph,",
    "start": "3608280",
    "end": "3618210"
  },
  {
    "text": "this would be an example of\na graph of outer planarity 2. Let me draw you an example of\na graph of outer planarity 1.",
    "start": "3618210",
    "end": "3624316"
  },
  {
    "text": " Suppose all of the vertices\nare on the outside face",
    "start": "3624316",
    "end": "3631950"
  },
  {
    "text": "of your planar graph, or all\nthe vertices are on one face.",
    "start": "3631950",
    "end": "3637500"
  },
  {
    "text": "Then that's an outer planar\ngraph, or 1 outer planar graph. If you have a graph\nwhere there are",
    "start": "3637500",
    "end": "3644410"
  },
  {
    "text": "vertices on the outside\nface, and if you remove all of those vertices\nfrom the outside face, the remaining vertices are\nall on the outside face,",
    "start": "3644410",
    "end": "3652020"
  },
  {
    "text": "this is 2 outer planar. ",
    "start": "3652020",
    "end": "3659140"
  },
  {
    "text": "In general, if you have\nto remove the vertices on the outside face\nk times before you're",
    "start": "3659140",
    "end": "3665140"
  },
  {
    "text": "left with no vertices, then\nyour graph is k outer planar. And that k is your\nouter planarity.",
    "start": "3665140",
    "end": "3672099"
  },
  {
    "text": "So this is an example of a\nproblem that's-- there's no natural parametrization because\nit's not an optimization",
    "start": "3672100",
    "end": "3678120"
  },
  {
    "text": "problem. So we're going to throw\nin a parametrization that often works out quite well. Usually if you take\nplanar graphs parametrized",
    "start": "3678120",
    "end": "3683706"
  },
  {
    "text": "by outer planarity, they are\nfixed parameter retractable. For example, k\ncoloring, parametrized",
    "start": "3683706",
    "end": "3690720"
  },
  {
    "text": "by outer planarity, is FPT. But list coloring is not.",
    "start": "3690720",
    "end": "3695791"
  },
  {
    "text": "Question? AUDIENCE: Doesn't\nthe outer planarity depend on the embedding? PROFESSOR: It depends only\nslightly on the embedding.",
    "start": "3695791",
    "end": "3704980"
  },
  {
    "text": "I think only by an\nadditive of 1 or something. So it won't matter from a\nparametrization perspective.",
    "start": "3704980",
    "end": "3711270"
  },
  {
    "text": "Definitely within\na constant factor. Good question. ",
    "start": "3711270",
    "end": "3716910"
  },
  {
    "text": "So what we're going to\nshow is that this problem parametrized by\nouter planarity--",
    "start": "3716910",
    "end": "3722320"
  },
  {
    "text": "so one note is it is in XP. There is an n to\nthe outer planarity",
    "start": "3722320",
    "end": "3730160"
  },
  {
    "text": "and to the k algorithm using the\nbounded tree width algorithms, which I won't go into.",
    "start": "3730160",
    "end": "3736270"
  },
  {
    "text": "But we will show that is\nw1 hard, and assuming ETH,",
    "start": "3736270",
    "end": "3743090"
  },
  {
    "text": "there's no f of k n to\nthe little of k algorithm.",
    "start": "3743090",
    "end": "3748690"
  },
  {
    "text": "So here's an example of\na planar graph problem where we do not get square root\nof k, which I think would also answer your earlier question.",
    "start": "3748690",
    "end": "3754740"
  },
  {
    "text": " And this is the reduction. It's a reduction\nfrom grid tiling.",
    "start": "3754740",
    "end": "3761690"
  },
  {
    "text": "So the idea is if you\nhave a k by k grid, we're going to make something\nlike a k by k grid graph.",
    "start": "3761690",
    "end": "3768230"
  },
  {
    "text": "Now we have to represent\nthe choice here.",
    "start": "3768230",
    "end": "3773580"
  },
  {
    "text": "We're given a set of pairs\nfor each of these grid cells, which we're now\nrepresenting as a vertex.",
    "start": "3773580",
    "end": "3781280"
  },
  {
    "text": "But conveniently, we have\na choice aspect here. So this is not-- this a thin\n[? veal ?] for grid tiling.",
    "start": "3781280",
    "end": "3788960"
  },
  {
    "text": "We have this list, Lv, for\neach vertex of valid choices you could make for that vertex. So we're going to\nlet L uij-- so this",
    "start": "3788960",
    "end": "3799430"
  },
  {
    "text": "is reduction from grid tiling.",
    "start": "3799430",
    "end": "3805285"
  },
  {
    "start": "3805285",
    "end": "3810599"
  },
  {
    "text": "L sub uij equals sij.",
    "start": "3810600",
    "end": "3816910"
  },
  {
    "text": "So that's the\nchoice that happens. For every vertex, we\nhave to choose one color.",
    "start": "3816910",
    "end": "3822260"
  },
  {
    "text": "That mimics the fact that\nevery grid cell in the matrix, we have to choose\none item from sij.",
    "start": "3822260",
    "end": "3829410"
  },
  {
    "text": "So most of our work\nis already done. Now we have to constrain. If you look at two\nadjacent vertices,",
    "start": "3829410",
    "end": "3836859"
  },
  {
    "text": "if they're adjacent\nin a row, then they must have the same\nfirst coordinate--",
    "start": "3836860",
    "end": "3842480"
  },
  {
    "text": "I can never remember. They should have the same\nsecond coordinate, sorry,",
    "start": "3842480",
    "end": "3847563"
  },
  {
    "text": "if they're in the same row. And if they're in\nthe same column, they should have the\nsame first coordinate.",
    "start": "3847563",
    "end": "3853290"
  },
  {
    "text": "So these vertices,\nwhich are called v for the vertical\nconnections and h",
    "start": "3853290",
    "end": "3858500"
  },
  {
    "text": "for the horizontal connections,\nare going to achieve that.",
    "start": "3858500",
    "end": "3863600"
  },
  {
    "text": "And it's a little bit\ntedious to write down. ",
    "start": "3863600",
    "end": "3870180"
  },
  {
    "text": "Basically, let's say\nbetween uij and ui plus 1j,",
    "start": "3870180",
    "end": "3885690"
  },
  {
    "text": "so those two vertically\nadjacent vertices, we're going to add a vertex\nvijcd for two colors c and d,",
    "start": "3885690",
    "end": "3901310"
  },
  {
    "text": "with list of size 2 c,d for all\ncolors not agreeing on first",
    "start": "3901310",
    "end": "3923910"
  },
  {
    "text": "coordinate. ",
    "start": "3923910",
    "end": "3931710"
  },
  {
    "text": "Again, this is hard\nto draw in the figure, but easier to write down. So there's a lot of these\nvertices in between two",
    "start": "3931710",
    "end": "3942609"
  },
  {
    "text": "adjacent ui vertices. There's going to be a bunch. They're parametrized\nby two colors,cd.",
    "start": "3942610",
    "end": "3949230"
  },
  {
    "text": "Remember, colors\nare pairs of things, but colors correspond to the\nitems that are in the sijs.",
    "start": "3949230",
    "end": "3955550"
  },
  {
    "text": "But don't worry about\nthat so much here, except there are colors that\nare compatible, that they",
    "start": "3955550",
    "end": "3961849"
  },
  {
    "text": "have the same first coordinate. And there are colors\nthat are incompatible. For any two incompatible\ncolors, which is most of them,",
    "start": "3961850",
    "end": "3967800"
  },
  {
    "text": "the ones that don't agree\non the first coordinate, we are going to add one of these\nvertices whose list is exactly",
    "start": "3967800",
    "end": "3973240"
  },
  {
    "text": "cd, the two incompatible colors. What that means is, suppose\nthis vertex chooses c.",
    "start": "3973240",
    "end": "3980560"
  },
  {
    "text": "Well, then there's a\nvertex here with list cd. It cannot choose c, because\nthen that edge would be",
    "start": "3980560",
    "end": "3987010"
  },
  {
    "text": "monochromatic. So it must choose d, which means\nthis vertex cannot choose d.",
    "start": "3987010",
    "end": "3992240"
  },
  {
    "text": "So overall, what this means\nis that these two vertices must choose a compatible\ncolor, because we rule out",
    "start": "3992240",
    "end": "3998650"
  },
  {
    "text": "all the incompatible pairs. So list coloring\nyou can do a lot, but in particular\nwe can simulate grid",
    "start": "3998650",
    "end": "4003740"
  },
  {
    "text": "coloring-- sorry, grid tiling. We're not exploiting a ton of\nthe structure of grid tiling, but we get a nice result\nhere and it's tight.",
    "start": "4003740",
    "end": "4011846"
  },
  {
    "text": "I didn't write down what\nyou do for the horizontal, but it's symmetric. So that's nice.",
    "start": "4011846",
    "end": "4019342"
  },
  {
    "text": "This is one of the few\nplanar problems where you don't get a square root. ",
    "start": "4019342",
    "end": "4025520"
  },
  {
    "text": "The next two, you will\nget a square root. But before I get to\nthe actual problem,",
    "start": "4025520",
    "end": "4030790"
  },
  {
    "text": "here's a variation\nof grid tiling, which is a little tricky\nto prove hard, but is just as hard\nas grid tiling.",
    "start": "4030790",
    "end": "4037830"
  },
  {
    "text": "Here we need that in every\nrow-- here's the input, here's the output.",
    "start": "4037830",
    "end": "4043000"
  },
  {
    "text": "Easier to look at the output. In any row-- sorry,\nthat's a column.",
    "start": "4043000",
    "end": "4048100"
  },
  {
    "text": "In any column, the\nfirst coordinate is monotonically increasing. Doesn't have to\nstrictly increase,",
    "start": "4048100",
    "end": "4053349"
  },
  {
    "text": "but you have a less than\nor equal to constraint. This is less than\nor equal to this. This is less than\nor equal to this. 4,4,4.",
    "start": "4053350",
    "end": "4058562"
  },
  {
    "text": "Here they happen to be equal. 2,3,3. Here they increase a little\nbit, similarly in every row.",
    "start": "4058562",
    "end": "4063940"
  },
  {
    "text": "2,3,5-- they're\nmonotonically increasing. 1,2,2, 2,2,3.",
    "start": "4063940",
    "end": "4069780"
  },
  {
    "text": "So this is a valid solution\nto grid tiling with less than or equal to. That's how it's called.",
    "start": "4069780",
    "end": "4074900"
  },
  {
    "text": " I will not prove\nthat this is w1 hard.",
    "start": "4074900",
    "end": "4080849"
  },
  {
    "text": "I do have a figure for it. It turns out to be\na linear expansion.",
    "start": "4080850",
    "end": "4087900"
  },
  {
    "text": "If you have a k by k grid,\nwe're going to end up with a 4k by 4k grid. That part is important.",
    "start": "4087900",
    "end": "4093010"
  },
  {
    "text": "So we get the same kind of\nhardness result, no f of k and a little o of k, because we\nonly expand k by a factor of 4.",
    "start": "4093010",
    "end": "4101020"
  },
  {
    "text": "And this is a description\nof what the sets are. It's kind of messy,\nbut it effectively",
    "start": "4101020",
    "end": "4106520"
  },
  {
    "text": "forces that the\nchoice on the left is actually equal to\nthe choice on the right, even though it only has the\nability to specify less than",
    "start": "4106520",
    "end": "4114240"
  },
  {
    "text": "or equal to. But you-- equal is something\nlike modulo capital n, where n is some really large number,\nlike 10 times little n--",
    "start": "4114240",
    "end": "4122410"
  },
  {
    "text": "something like that. The details are kind of messy,\nso I will instead-- I mean,",
    "start": "4122410",
    "end": "4127899"
  },
  {
    "text": "we could just take\nthis as given. This is, like, a core\nproblem to start with. And you can use it to represent\nlots of nice planar graph",
    "start": "4127899",
    "end": "4135229"
  },
  {
    "text": "problems and 2D problems. So I have one example of each.",
    "start": "4135229",
    "end": "4140250"
  },
  {
    "text": "These are all from this\nupcoming book on fixed parameter tractability. So you saw it here first.",
    "start": "4140250",
    "end": "4148160"
  },
  {
    "text": "This book will come\nout early next year. So here's a problem. It's called scattered set.",
    "start": "4148160",
    "end": "4155120"
  },
  {
    "text": "This is a generalization, in\nsome sense, of independent set.",
    "start": "4155120",
    "end": "4161180"
  },
  {
    "text": "So let me define it over here. ",
    "start": "4161180",
    "end": "4179719"
  },
  {
    "text": "I would also naturally\ncall it d independent set. It might even be called\nthat in the literature.",
    "start": "4179720",
    "end": "4185365"
  },
  {
    "text": " So in this problem,\nyou're given a graph.",
    "start": "4185365",
    "end": "4191488"
  },
  {
    "text": " And you're given two numbers,\ntwo natural numbers, k and d.",
    "start": "4191489",
    "end": "4200130"
  },
  {
    "text": " And you want to find k vertices\nwith pairwise distances",
    "start": "4200130",
    "end": "4218790"
  },
  {
    "text": "greater than or equal to k. Sorry, greater\nthan or equal to d.",
    "start": "4218790",
    "end": "4224420"
  },
  {
    "text": "So if d equals 2, this\nis independent set. Independent set\nsays the distance",
    "start": "4224420",
    "end": "4230515"
  },
  {
    "text": "between any pair of chosen\nvertices should be at least 2. There's no adjacent\nones of distance 1. d equals 1 is not interesting.",
    "start": "4230516",
    "end": "4237170"
  },
  {
    "text": "d equals 2 is when this\nproblem becomes hard. Now interestingly, there are\nFPT algorithms with respect",
    "start": "4237170",
    "end": "4246590"
  },
  {
    "text": "to k and d. So if k and d are small,\nthis problem is easy.",
    "start": "4246590",
    "end": "4253840"
  },
  {
    "text": "And for planar graphs, there's\na subexponential FPT algorithm as well. ",
    "start": "4253840",
    "end": "4260410"
  },
  {
    "text": "But when d is unbounded,\nif it's not a parameter, only k is, then this problem\nis hard even for planar graphs.",
    "start": "4260410",
    "end": "4271110"
  },
  {
    "text": "So planar is w1\nhard with respect",
    "start": "4271110",
    "end": "4280270"
  },
  {
    "text": "to k, only when d can be\npart of the input arbitrarily large function of n.",
    "start": "4280270",
    "end": "4286590"
  },
  {
    "text": "And also ETH implies there's\nno planar algorithm with time",
    "start": "4286590",
    "end": "4300989"
  },
  {
    "text": "2-- sorry, f of k n to the\nlittle o of square root of k.",
    "start": "4300990",
    "end": "4310730"
  },
  {
    "text": " And in fact, for\nscattered set, there",
    "start": "4310730",
    "end": "4316860"
  },
  {
    "text": "is an n to the big O of\nsquare root of k algorithm. I don't think it's\nbeen published,",
    "start": "4316860",
    "end": "4321950"
  },
  {
    "text": "but it's mentioned in the book. And there is-- this is tight.",
    "start": "4321950",
    "end": "4327670"
  },
  {
    "text": "This says there is no n to the\nlittle o of square root of k algorithm, even when you get an\narbitrary computable function f",
    "start": "4327670",
    "end": "4333290"
  },
  {
    "text": "of k in front. So this is nice. We're planar, so we\nlose the square aspect,",
    "start": "4333290",
    "end": "4339600"
  },
  {
    "text": "but it's actually a pretty\neasy reduction from grid tiling",
    "start": "4339600",
    "end": "4345420"
  },
  {
    "text": "with less than or equal to. So you can see the grid here,\nk equals 3 in this example.",
    "start": "4345420",
    "end": "4353469"
  },
  {
    "text": "And here, n equals 5, just like\nour earlier example in fact. All the information is here, as\nrepresented by these little red",
    "start": "4353470",
    "end": "4361610"
  },
  {
    "text": "sticks. So we have a 3 by 3 matrix. In each matrix cell,\nwe have a set of items.",
    "start": "4361610",
    "end": "4367944"
  },
  {
    "text": "In this case, there\nare two items. In this case there\nare three items. The items are encoded by\nwhere the red sticks are",
    "start": "4367944",
    "end": "4374490"
  },
  {
    "text": "in this subgrid. This is an n by n subgrid\nwithin a k by k matrix.",
    "start": "4374490",
    "end": "4381400"
  },
  {
    "text": "So for every present\npair in this set sij, we just add a stick.",
    "start": "4381400",
    "end": "4387290"
  },
  {
    "text": "Now, the stick is\na really long path. It's 100 times n.",
    "start": "4387290",
    "end": "4394944"
  },
  {
    "text": "So we have this n by\nn grid, and then we have these hundred n paths. Now this is still planar. You can put that path in there.",
    "start": "4394944",
    "end": "4403200"
  },
  {
    "text": "And also, this red path is\n100, and these are length 1. Black edges are length 1.",
    "start": "4403200",
    "end": "4409690"
  },
  {
    "text": "So what's shown here is actually\nsatisfying assignment where I choose one of these vertices.",
    "start": "4409690",
    "end": "4416396"
  },
  {
    "text": "In scattered set,\nour goal is to choose vertices that are very\nfar away from each other. How far?",
    "start": "4416396",
    "end": "4422130"
  },
  {
    "text": "How far is 301 times n plus 1.",
    "start": "4422130",
    "end": "4429800"
  },
  {
    "text": "Roughly, three red\nsticks plus one traversal",
    "start": "4429800",
    "end": "4437059"
  },
  {
    "text": "of a subgrid plus 1. Roughly three red sticks.",
    "start": "4437060",
    "end": "4442389"
  },
  {
    "text": "So if I choose this vertex and\nI want to choose one in here,",
    "start": "4442390",
    "end": "4449380"
  },
  {
    "text": "it's got to be at least\nthree red sticks away. So I'm going to get one red\nstick here, one red stick here,",
    "start": "4449380",
    "end": "4454520"
  },
  {
    "text": "and one red stick there. So that's good. But that just says\nI choose exactly",
    "start": "4454520",
    "end": "4461100"
  },
  {
    "text": "one out of each of these things. Once I choose one\nof these endpoints, I certainly can't\nchoose another one because it's only\ntwo red sticks away.",
    "start": "4461100",
    "end": "4468050"
  },
  {
    "text": "I can only choose\none per subgrid. But then also, I want the\nlesser and equal to constraint.",
    "start": "4468050",
    "end": "4474120"
  },
  {
    "text": "And that's the plus n over here. So I have three\nred sticks plus n.",
    "start": "4474120",
    "end": "4481243"
  },
  {
    "text": "That's the 1. Because I have plus n, n is the\nwidth, let's say, these guys.",
    "start": "4481244",
    "end": "4488500"
  },
  {
    "text": "So once I choose\nthis guy, I have to be three red sticks--\n1, 2, 3 red sticks away.",
    "start": "4488500",
    "end": "4493800"
  },
  {
    "text": "But I also need to be\nan additional n away. And here, I am that because\nI have 1, 2, 3, 4, 5, 6 away.",
    "start": "4493800",
    "end": "4505310"
  },
  {
    "text": "I'm actually one\nmore than n away. And there's a plus 1 over\nthere, so that's good.",
    "start": "4505310",
    "end": "4511620"
  },
  {
    "text": "I'm 6 away. I need to be 6 away. And that corresponds\nto this being in the fourth column and this\nbeing in the fourth column.",
    "start": "4511620",
    "end": "4519350"
  },
  {
    "text": "In other words, it corresponds\nto the second coordinate",
    "start": "4519350",
    "end": "4525960"
  },
  {
    "text": "of this guy being less than or\nequal to the second coordinate of this guy. So it's exactly the grid\ntiling with less than",
    "start": "4525960",
    "end": "4533180"
  },
  {
    "text": "or equal to constraint\nhorizontally and symmetrically, vertically. Because the distance between\na point here to point",
    "start": "4533180",
    "end": "4539540"
  },
  {
    "text": "here is going to be go straight\ndown, jump, use the red stick, and then go teleport\nleft right and then",
    "start": "4539540",
    "end": "4546140"
  },
  {
    "text": "go straight down from there. So that distance\ncorresponds to exactly when",
    "start": "4546140",
    "end": "4551920"
  },
  {
    "text": "all the less than or equal\nto constraints are satisfied. If and only if, so this\na reduction from grid tiling with less than or\nequal to to scattered set.",
    "start": "4551920",
    "end": "4559000"
  },
  {
    "text": "[INAUDIBLE] is w1 hard. Now here, notice k\nprime is k squared, because we are choosing\none vertex per matrix cell.",
    "start": "4559000",
    "end": "4569430"
  },
  {
    "text": "And they're k squared cells. So here we are losing\nthe quadratic blowup.",
    "start": "4569430",
    "end": "4574510"
  },
  {
    "text": " Questions? ",
    "start": "4574510",
    "end": "4580409"
  },
  {
    "text": "One more similar example. There aren't a ton\nof hardness results",
    "start": "4580410",
    "end": "4585430"
  },
  {
    "text": "here, so not a lot\nto choose from. There are some multi-way\n[? Kant and ?] other things. But among simple\nexamples, here's",
    "start": "4585430",
    "end": "4591240"
  },
  {
    "text": "another simple example--\nvery similar looking. This is a graph in 2D\nplane, so to speak.",
    "start": "4591240",
    "end": "4598440"
  },
  {
    "text": "You can also think of it as\na unit disk graph problem. So a unit disk graph is I take\nsome points in the plane, 2D",
    "start": "4598440",
    "end": "4611150"
  },
  {
    "text": "coordinates, let's say\ngiven by rational values. x and y-coordinates\nare given by rationals.",
    "start": "4611150",
    "end": "4616970"
  },
  {
    "text": "And if I look at\nany two vertices, if they live-- if the\ndistance between them",
    "start": "4616970",
    "end": "4623660"
  },
  {
    "text": "is less than or equal to\n1, then I add an edge. So here, I might\nhave a graph-- this",
    "start": "4623660",
    "end": "4630844"
  },
  {
    "text": "is going to be a lot of\nedges with that notion of 1. ",
    "start": "4630844",
    "end": "4637820"
  },
  {
    "text": "You can have big cliques\nin a unit disk graph, but it's kind of planar-ish. ",
    "start": "4637820",
    "end": "4643393"
  },
  {
    "text": "Especially if you\nhave distant vertices, they're not going\nto be connected. So you have these local cliques,\nbut they're kind of connected",
    "start": "4643394",
    "end": "4648993"
  },
  {
    "text": "in a planar-like way. Definition clear? Edge if and only if\ndistance at most 1.",
    "start": "4648993",
    "end": "4654680"
  },
  {
    "text": "So what about independent\nset in unit disk graphs? We know independent\nset in general's hard.",
    "start": "4654680",
    "end": "4661550"
  },
  {
    "text": "Independent set in unit disk\ngraphs is almost as hard. Again, there's a quadratic\nloss in the parameter.",
    "start": "4661550",
    "end": "4668290"
  },
  {
    "text": "But problem is, w1 hard\nand has the same kind of hardness as scattered set.",
    "start": "4668290",
    "end": "4673460"
  },
  {
    "text": "By similar kind of\nstructure, here I'm actually giving\nyou the grid tiling with less than or equal to.",
    "start": "4673460",
    "end": "4679374"
  },
  {
    "text": "Probably also corresponds\nto the last example, but here it is in the\nindependent set unit disk",
    "start": "4679374",
    "end": "4684660"
  },
  {
    "text": "problem. Independent set in a unit\ndisk is the same thing as choosing some\nvertices, like this one,",
    "start": "4684660",
    "end": "4691030"
  },
  {
    "text": "as the center of\na radius one half disk and then those\nradius one half disks",
    "start": "4691030",
    "end": "4696750"
  },
  {
    "text": "should not intersect each other. Because these two things\nwill have distance at least 1 if and only if radius one\nhalf disk and a radius",
    "start": "4696750",
    "end": "4703599"
  },
  {
    "text": "one half disk here\ndo not intersect. So it's really about\nchoosing centers for these disks that don't hit.",
    "start": "4703600",
    "end": "4710489"
  },
  {
    "text": "And so again, what\nwe're going to do is imagine an n by n subgrid\nwithin each cell of the matrix.",
    "start": "4710490",
    "end": "4718760"
  },
  {
    "text": "But not all of those points\nare actually in the set, only the ones that\nare in-- in this case,",
    "start": "4718760",
    "end": "4724910"
  },
  {
    "text": "s1,1 these pairs of guys\nas written here, so 1, 1 is in there.",
    "start": "4724910",
    "end": "4730600"
  },
  {
    "text": "I guess that's that guy. 2,5 is this guy. 3,3 is that guy. Those points we'll actually\nput in the problem.",
    "start": "4730600",
    "end": "4738090"
  },
  {
    "text": "These tiny dots are\njust place markers. There's no actual point there.",
    "start": "4738090",
    "end": "4744010"
  },
  {
    "text": "Then we construct the unit\ndisk graph on the structure. And again, if we\nset the unit right,",
    "start": "4744010",
    "end": "4750110"
  },
  {
    "text": "and these are super tiny,\nin the same way that we",
    "start": "4750110",
    "end": "4755300"
  },
  {
    "text": "had the red edges,\nwhich were, like, 100 times longer than the\nsmall things over here,",
    "start": "4755300",
    "end": "4761079"
  },
  {
    "text": "we're going to have, let's say\nthis thing is 100 times smaller than that distance, enough\nso that these circles act",
    "start": "4761080",
    "end": "4771969"
  },
  {
    "text": "kind of like squares.  If you look very close to\nhere, this looks straight.",
    "start": "4771970",
    "end": "4779350"
  },
  {
    "text": "So these are very\ncompressed, so it's probably going to be more like\na factor of n smaller.",
    "start": "4779350",
    "end": "4787100"
  },
  {
    "text": "These effectively\nact like squares. It's just a matter of\nwhether the horizontal extent of this disk hits the\nhorizontal extent of this disk.",
    "start": "4787100",
    "end": "4794640"
  },
  {
    "text": "And that is a less than\nor equal to constraint. Once you choose something\nin column 2 here,",
    "start": "4794640",
    "end": "4801020"
  },
  {
    "text": "the next one has to\nbe column at least 2. Here, there there's a gap\nbecause we chose column 3.",
    "start": "4801020",
    "end": "4806230"
  },
  {
    "text": "Here, there's a gap\nbecause we chose column 5. But for example here, we\nchose column 2, column 2 and these guys are\nalmost touching.",
    "start": "4806230",
    "end": "4813680"
  },
  {
    "text": "But barely not touching. And as long as you have\nthe less than or equal to constraint on the columns,\nthen you'll be OK.",
    "start": "4813680",
    "end": "4821054"
  },
  {
    "text": "The disk won't intersect\nand it's an if and only if. So again, we\nrepresent grid tiling with less than or equal\nto and independent",
    "start": "4821054",
    "end": "4827250"
  },
  {
    "text": "set or disk packing\nproblem in the plane. It's kind of cool.",
    "start": "4827250",
    "end": "4832500"
  },
  {
    "text": "Questions?  All right. Well-- oh, more fun facts.",
    "start": "4832500",
    "end": "4840720"
  },
  {
    "text": "So we have for independent\nset in unit disk graphs,",
    "start": "4840720",
    "end": "4854590"
  },
  {
    "text": "we have that there\nis no f of k n to the little o of square\nroot of k algorithm.",
    "start": "4854590",
    "end": "4863730"
  },
  {
    "text": "There actually is\nan n to the big O of square root of k algorithm. ",
    "start": "4863730",
    "end": "4872349"
  },
  {
    "text": "We also get-- and I\nwon't go through this. I think it's pretty\ntrivial, based on what I said last class.",
    "start": "4872350",
    "end": "4879340"
  },
  {
    "text": "But we get that\nthere's no efficient p test for this problem\nunless-- sorry.",
    "start": "4879340",
    "end": "4886470"
  },
  {
    "text": "This we definitely\nget from last lecture. I said if you're w1 hard\nor FPT-- if you're w1 hard",
    "start": "4886470",
    "end": "4893890"
  },
  {
    "text": "and FPT does not equal\nw1, then you are not FPT. If you're not FPT, there's\nno efficient p test,",
    "start": "4893890",
    "end": "4899190"
  },
  {
    "text": "no f of 1 over epsilon\ntimes n to some constant. In fact, if you assume ETH,\nyou get an even stronger form",
    "start": "4899190",
    "end": "4906980"
  },
  {
    "text": "of that. And in this example, we\nget there is no 2 to the 1",
    "start": "4906980",
    "end": "4914590"
  },
  {
    "text": "over epsilon to the 1\nminus delta power times",
    "start": "4914590",
    "end": "4921139"
  },
  {
    "text": "n to the order 1 1 plus\nepsilon approximation. ",
    "start": "4921140",
    "end": "4928150"
  },
  {
    "text": "This is the original result\nfrom the Daniel Marx paper that introduced-- this was\nhis motivation for introducing",
    "start": "4928150",
    "end": "4936080"
  },
  {
    "text": "grid tiling. So again, you get-- out\nof all these lower bounds, you also get results about\ninapproximability, which",
    "start": "4936080",
    "end": "4942590"
  },
  {
    "text": "is another reason to care. Even if you don't care about\nparametrized complexity, these are the only ways known\nto prove lower bounds on how",
    "start": "4942590",
    "end": "4949570"
  },
  {
    "text": "slow your p test has to be. Because there are p\ntests for these problems, but only so efficient.",
    "start": "4949570",
    "end": "4957580"
  },
  {
    "text": "That's it for fixed\nparameter tractability. Next class, we'll do something\ncompletely different.",
    "start": "4957580",
    "end": "4963180"
  },
  {
    "start": "4963180",
    "end": "4968513"
  }
]