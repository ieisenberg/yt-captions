[
  {
    "start": "0",
    "end": "790"
  },
  {
    "text": "The following content is\nprovided under a Creative",
    "start": "790",
    "end": "3190"
  },
  {
    "text": "Commons license.",
    "start": "3190",
    "end": "4730"
  },
  {
    "text": "Your support will help\nMIT OpenCourseWare",
    "start": "4730",
    "end": "7029"
  },
  {
    "text": "continue to offer high quality\neducational resources for free.",
    "start": "7030",
    "end": "11390"
  },
  {
    "text": "To make a donation or\nview additional materials",
    "start": "11390",
    "end": "13990"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare",
    "start": "13990",
    "end": "17880"
  },
  {
    "text": "at ocw.mit.edu.",
    "start": "17880",
    "end": "18839"
  },
  {
    "start": "18840",
    "end": "22630"
  },
  {
    "text": "PROFESSOR: All right, we've\ngot some good competition here.",
    "start": "22630",
    "end": "25570"
  },
  {
    "text": "So let's actually\nwork through it.",
    "start": "25570",
    "end": "27560"
  },
  {
    "start": "27560",
    "end": "34220"
  },
  {
    "text": "So I have a function\ncalled always sunny",
    "start": "34220",
    "end": "37070"
  },
  {
    "text": "and it's going to take in two\nvariables right, t1 and t2.",
    "start": "37070",
    "end": "42050"
  },
  {
    "text": "And I'm calling it\nwith cloudy and cold.",
    "start": "42050",
    "end": "47809"
  },
  {
    "text": "So when I do my\nfunction call, t1",
    "start": "47810",
    "end": "51770"
  },
  {
    "text": "is going to be equal to cloudy.",
    "start": "51770",
    "end": "56465"
  },
  {
    "start": "56465",
    "end": "59140"
  },
  {
    "text": "These are strings\nbut I'm not going",
    "start": "59140",
    "end": "61809"
  },
  {
    "text": "to bother putting the quotes.",
    "start": "61810",
    "end": "63910"
  },
  {
    "text": "And t2 is equal to cold comma.",
    "start": "63910",
    "end": "70840"
  },
  {
    "text": "So remember what I said,\nwith a comma it's a tuple,",
    "start": "70840",
    "end": "75179"
  },
  {
    "text": "without a comma it's a string.",
    "start": "75180",
    "end": "77280"
  },
  {
    "text": "So t1 is actually\ngoing to be a string.",
    "start": "77280",
    "end": "80930"
  },
  {
    "text": "And t2 is actually a tuple.",
    "start": "80930",
    "end": "83090"
  },
  {
    "text": "OK.",
    "start": "83090",
    "end": "83835"
  },
  {
    "text": "So that's the first sort\nof trick to this question.",
    "start": "83835",
    "end": "85960"
  },
  {
    "start": "85960",
    "end": "89229"
  },
  {
    "text": "So I've made my function call\nand I've assigned t1 and t2",
    "start": "89230",
    "end": "92040"
  },
  {
    "text": "to be those two values.",
    "start": "92040",
    "end": "95970"
  },
  {
    "text": "So the next line is sun is\nequal to sunny comma sun.",
    "start": "95970",
    "end": "99910"
  },
  {
    "text": "So sun is going to be\nthis tuple of two strings.",
    "start": "99910",
    "end": "102175"
  },
  {
    "start": "102175",
    "end": "104820"
  },
  {
    "text": "The next line is figuring\nout what first is.",
    "start": "104820",
    "end": "110250"
  },
  {
    "text": "So first is going to be-- so\nI'm looking at my t1 here,",
    "start": "110250",
    "end": "117350"
  },
  {
    "text": "it's a string.",
    "start": "117350",
    "end": "118938"
  },
  {
    "text": "The fact that I have\nparentheses doesn't actually",
    "start": "118939",
    "end": "120980"
  },
  {
    "text": "make a difference when\nI'm talking about strings.",
    "start": "120980",
    "end": "125801"
  },
  {
    "text": "Like that.",
    "start": "125801",
    "end": "126300"
  },
  {
    "start": "126300",
    "end": "129229"
  },
  {
    "text": "So when I'm indexing into\na string, t1 at position 0",
    "start": "129229",
    "end": "133550"
  },
  {
    "text": "actually just gives\nme a C because it's",
    "start": "133550",
    "end": "137070"
  },
  {
    "text": "a string not a tuple.",
    "start": "137070",
    "end": "138050"
  },
  {
    "start": "138050",
    "end": "142240"
  },
  {
    "text": "And t2 up position zero\nsays, OK well, this",
    "start": "142240",
    "end": "146200"
  },
  {
    "text": "is a tuple that contains\nonly one element.",
    "start": "146200",
    "end": "148900"
  },
  {
    "text": "That element being\nat position 0,",
    "start": "148900",
    "end": "151870"
  },
  {
    "text": "and that element is\nthe string, cold.",
    "start": "151870",
    "end": "154150"
  },
  {
    "start": "154150",
    "end": "157670"
  },
  {
    "text": "So this is a tuple.",
    "start": "157670",
    "end": "159090"
  },
  {
    "text": "So I'm taking everything\nright before the first comma.",
    "start": "159090",
    "end": "162861"
  },
  {
    "text": "And that happens to be just the\none element that's in there.",
    "start": "162861",
    "end": "165359"
  },
  {
    "start": "165360",
    "end": "168150"
  },
  {
    "text": "So this is just\nthe string C cold.",
    "start": "168150",
    "end": "170159"
  },
  {
    "start": "170160",
    "end": "173780"
  },
  {
    "text": "And then I'm returning\nhere a tuple.",
    "start": "173780",
    "end": "177730"
  },
  {
    "text": "And the tuple I'm returning\nis sun at position 0,",
    "start": "177730",
    "end": "181290"
  },
  {
    "text": "so that's just sunny comma.",
    "start": "181290",
    "end": "187519"
  },
  {
    "text": "Just doing what's in here.",
    "start": "187520",
    "end": "189590"
  },
  {
    "text": "And then first, and first\nwas this string, C cold.",
    "start": "189590",
    "end": "193573"
  },
  {
    "start": "193574",
    "end": "196960"
  },
  {
    "text": "So really the important\nthing about this example",
    "start": "196960",
    "end": "200291"
  },
  {
    "text": "was to make sure\nthat you understand",
    "start": "200291",
    "end": "201790"
  },
  {
    "text": "the difference between what a\nstring is and what a tuple is.",
    "start": "201790",
    "end": "206610"
  },
  {
    "start": "206610",
    "end": "208537"
  }
]