[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": " The following\ncontent is provided under a Creative\nCommons license. Your support will help MIT\nOpenCourseWare continue",
    "start": "0",
    "end": "6860"
  },
  {
    "text": "to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6860",
    "end": "13340"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13340",
    "end": "21155"
  },
  {
    "start": "21000",
    "end": "110000"
  },
  {
    "text": "PROFESSOR: All right. So I brought a few problems. They're obviously not the quiz\nproblems, though some of them",
    "start": "21155",
    "end": "26949"
  },
  {
    "text": "are supposed to be similar. What I have here\nmight not be what you have on the quiz because\nwe might drop quiz problems",
    "start": "26950",
    "end": "33260"
  },
  {
    "text": "or because some of them\nare just meant to make you think and not to give away\nthe solutions to the quiz.",
    "start": "33260",
    "end": "39309"
  },
  {
    "text": "Now, before we get\nstarted on this, do you guys have any burning\nquestions or any concepts that you want covered?",
    "start": "39310",
    "end": "44730"
  },
  {
    "text": "Based on that, I'll select\nwhich problems we do. Yes? AUDIENCE: This actually relates\nnot too much to the Pset.",
    "start": "44730",
    "end": "50288"
  },
  {
    "text": " If you're looking at\nthe time complexity",
    "start": "50288",
    "end": "55725"
  },
  {
    "text": "to maybe transfer something\nfrom one table to another,",
    "start": "55725",
    "end": "62360"
  },
  {
    "text": "it takes a lot\nmore time, I would assume, to move the actual\nitem to the new table than it does just to look\nat your point and be like,",
    "start": "62360",
    "end": "69250"
  },
  {
    "text": "oh, there's nothing there. So if you were\njust going to look through an empty\ntable of size m,",
    "start": "69250",
    "end": "74329"
  },
  {
    "text": "the time to look through that\nempty table, I'm assuming, is much less than the time\nto actually move an item.",
    "start": "74330",
    "end": "81210"
  },
  {
    "text": "PROFESSOR: So you're saying\nwe have m things here.",
    "start": "81210",
    "end": "88650"
  },
  {
    "text": "AUDIENCE: Yes. PROFESSOR: Some might\nbe nil, and some might have stuff\nin them, and you're",
    "start": "88650",
    "end": "96260"
  },
  {
    "text": "going to resize that to\npresumably 2 times m, and the way you\ndo that is you're",
    "start": "96260",
    "end": "102540"
  },
  {
    "text": "going to move the elements,\npresumably by rehashing them, right? AUDIENCE: Yes. ",
    "start": "102540",
    "end": "110170"
  },
  {
    "text": "PROFESSOR: So these elements,\nat least when we use Python, we don't really store\nbig elements anywhere.",
    "start": "110170",
    "end": "117060"
  },
  {
    "text": "If you have a big\nobject, we always work with references\nto that object. So you remember\nthe address where",
    "start": "117060",
    "end": "123280"
  },
  {
    "text": "that object lies in memory,\nand since the memory is finite and small, addresses are\nall from 0 to a small number,",
    "start": "123280",
    "end": "130110"
  },
  {
    "text": "so they're constant. So what you have here\nis not a big object.",
    "start": "130110",
    "end": "135989"
  },
  {
    "text": "It's the address\nof the big object, so moving is always\nconstant time.",
    "start": "135990",
    "end": "141470"
  },
  {
    "text": "AUDIENCE: What I'm\nsaying is let's say that the table\nis completely full versus completely empty table.",
    "start": "141470",
    "end": "148280"
  },
  {
    "text": "It would take more time\nto move everything out of the full table\nthan it does just",
    "start": "148280",
    "end": "154510"
  },
  {
    "text": "to look the empty table, right? PROFESSOR: Let's see. So writing something here\nis order 1 time, right?",
    "start": "154510",
    "end": "162300"
  },
  {
    "text": "So moving is order 1 time. Moving one element\nis order 1 time. What's accessing an element\nin a table in a list?",
    "start": "162300",
    "end": "170242"
  },
  {
    "text": "You have a Python list. What's the cost of\ndoing an index access? AUDIENCE: It's also\norder 1, right? PROFESSOR: OK.",
    "start": "170242",
    "end": "175790"
  },
  {
    "text": "So order 1, index. Order 1, move.",
    "start": "175790",
    "end": "182727"
  },
  {
    "text": "Suppose you have an empty table. How many indices do you do? How many times the index?",
    "start": "182727",
    "end": "187915"
  },
  {
    "text": "AUDIENCE: You look\nat each one, so it's order 1 times the\nlength of the table. PROFESSOR: m.",
    "start": "187915",
    "end": "194890"
  },
  {
    "text": "So if the table is empty,\nyou have order m indices and 0 moves. Total running time, order m.",
    "start": "194890",
    "end": "202970"
  },
  {
    "text": "If you have a full\ntable, how many times do you index in the table? AUDIENCE: Still order m.",
    "start": "202970",
    "end": "208437"
  },
  {
    "text": "PROFESSOR: OK. How many times do\nyou move stuff? AUDIENCE: Order m.",
    "start": "208437",
    "end": "214365"
  },
  {
    "text": "PROFESSOR: Total running time? AUDIENCE: It's order\n2m, which is order m. PROFESSOR: So it doesn't\nmatter whether the table's",
    "start": "214365",
    "end": "220960"
  },
  {
    "text": "full or empty. AUDIENCE: OK. Just wanted to confirm that. PROFESSOR: And this\nis how you do that. ",
    "start": "220960",
    "end": "227940"
  },
  {
    "text": "Cool. Thanks. Any other questions? ",
    "start": "227940",
    "end": "240410"
  },
  {
    "text": "Then we will go over problems in\nthe order in which I like them, which is easiest to\nhardest so that I",
    "start": "240410",
    "end": "246110"
  },
  {
    "text": "don't have to explain\nthe hard ones. ",
    "start": "246110",
    "end": "254710"
  },
  {
    "text": "Warm up problem one. ",
    "start": "254710",
    "end": "264800"
  },
  {
    "text": "So you have this recursion\nand you have to solve it, and you get a hint that n\nto the power of 1 over log n",
    "start": "264800",
    "end": "280350"
  },
  {
    "text": "is 2, which is theta 1.",
    "start": "280350",
    "end": "285540"
  },
  {
    "text": "So based on the\nhint, you can see that it's going to\ninvolve some math.",
    "start": "285540",
    "end": "290826"
  },
  {
    "text": "It's going to get a bit ugly. So how do we solve recursions? Two methods.",
    "start": "290826",
    "end": "296110"
  },
  {
    "text": "What are they? AUDIENCE: Expand. PROFESSOR: OK. Substitution formally,\nbut basically, we",
    "start": "296110",
    "end": "302951"
  },
  {
    "text": "expand this guy\nover and over again. And? AUDIENCE: Trees. PROFESSOR: Recursion trees.",
    "start": "302951",
    "end": "309970"
  },
  {
    "text": "Which one do guys\nwant to do first? ",
    "start": "309970",
    "end": "315080"
  },
  {
    "text": "If you only have\none t here, anything works because you can keep\nexpanding it and that works,",
    "start": "315080",
    "end": "322340"
  },
  {
    "text": "so we can do either method. Which one do you\nguys want to go over? ",
    "start": "322340",
    "end": "328580"
  },
  {
    "text": "Trees. OK. So we start with the first node.",
    "start": "328580",
    "end": "336020"
  },
  {
    "text": "The size of the problem is n. What's the cost inside here?",
    "start": "336020",
    "end": "341732"
  },
  {
    "text": " AUDIENCE: 1. PROFESSOR: OK.",
    "start": "341732",
    "end": "347550"
  },
  {
    "text": "So this creates one sub-problem. What's the size? ",
    "start": "347550",
    "end": "354198"
  },
  {
    "text": "AUDIENCE: n to the 1/2. PROFESSOR: OK. Square root of n\nequals n to the 1/2.",
    "start": "354198",
    "end": "360530"
  },
  {
    "text": "You solved it already. What's the cost?  AUDIENCE: 1.",
    "start": "360530",
    "end": "365779"
  },
  {
    "text": " PROFESSOR: Do people\nremember this? Is anyone confused about\nwhat's going on here?",
    "start": "365779",
    "end": "374980"
  },
  {
    "text": "OK. So two terms, something\ninvolving t and something not involving t.",
    "start": "374980",
    "end": "381250"
  },
  {
    "text": "The thing involving t is\nwhat we want to get rid of. When we do our recursion\ntree, whatever is in here",
    "start": "381250",
    "end": "389870"
  },
  {
    "text": "goes inside here,\nand this tells me how this number\nrelates to this number.",
    "start": "389870",
    "end": "397920"
  },
  {
    "text": "So when I go from one\nlevel to the next level, this is the transformation. n and becomes square root of\nn, so the transformation here",
    "start": "397920",
    "end": "408405"
  },
  {
    "text": "is the same as the\ntransformation here. ",
    "start": "408406",
    "end": "417880"
  },
  {
    "text": "What's next? AUDIENCE: n to the 1/4. PROFESSOR: OK. ",
    "start": "417880",
    "end": "425500"
  },
  {
    "text": "Cost? AUDIENCE: 1. PROFESSOR: OK. Do we need to do one more or\ndo people see the pattern?",
    "start": "425500",
    "end": "432350"
  },
  {
    "text": " Silence means one more. If you guys don't speak,\nwe're going to go slow.",
    "start": "432350",
    "end": "441240"
  },
  {
    "text": "What's here?  AUDIENCE: n to the 1/8.",
    "start": "441240",
    "end": "449125"
  },
  {
    "text": "PROFESSOR: What's here? AUDIENCE: 1. ",
    "start": "449125",
    "end": "455199"
  },
  {
    "text": "PROFESSOR: Let's hope\neveryone saw the pattern, and suppose we've done\nthis for l levels,",
    "start": "455200",
    "end": "460590"
  },
  {
    "text": "so we're at the bottom. What should the cost\nbe at the bottom? ",
    "start": "460590",
    "end": "467436"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE].  PROFESSOR: Sorry. We don't start with the cost.",
    "start": "467436",
    "end": "473229"
  },
  {
    "text": "What should the size of the\nproblem be at the bottom? ",
    "start": "473230",
    "end": "480978"
  },
  {
    "text": "AUDIENCE: n to the\n1 over 2 to the i. ",
    "start": "480978",
    "end": "491014"
  },
  {
    "text": "PROFESSOR: Let's\nsay that this is level h, where h is\nthe height of the tree. ",
    "start": "491015",
    "end": "497870"
  },
  {
    "text": "AUDIENCE: Don't you want to\ndo something like n to the 1 over n? ",
    "start": "497871",
    "end": "505120"
  },
  {
    "text": "PROFESSOR: Yeah. OK, so we want something\nthat looks like that?",
    "start": "505120",
    "end": "510876"
  },
  {
    "text": "AUDIENCE: If the recursion\ntree is height i, it is n to the 1 over 2\nto the i, but 2 to the i should equal n, or\napproximately n.",
    "start": "510876",
    "end": "517267"
  },
  {
    "text": " PROFESSOR: Why? ",
    "start": "517267",
    "end": "526959"
  },
  {
    "text": "I like that, but why? AUDIENCE: Because\nyou need to go down",
    "start": "526960",
    "end": "534550"
  },
  {
    "text": "until you're only\nlooking at one element, and that would be one\nnth of the problem.",
    "start": "534550",
    "end": "542067"
  },
  {
    "text": "PROFESSOR: OK. So we want this guy\nto look like what? ",
    "start": "542067",
    "end": "555450"
  },
  {
    "text": "In fact, it doesn't exactly\nhave to look like 1, but what's the advantage if we manage to\nget this guy to look like 1?",
    "start": "555450",
    "end": "562417"
  },
  {
    "text": "We have a recursion. We don't have a base\ncase here, right? A reasonable base case\nis T of 1 is theta 1.",
    "start": "562417",
    "end": "574780"
  },
  {
    "text": "Whatever function that is,\nif you evaluate it at 1, you're going to get a\nconstant, so you can say that.",
    "start": "574780",
    "end": "581640"
  },
  {
    "text": "Now, at the same time I can\nsay that for any constant, c, T of c is theta 1.",
    "start": "581640",
    "end": "590660"
  },
  {
    "text": " So if I take this constant\nhere, which happens to be 2,",
    "start": "590660",
    "end": "599410"
  },
  {
    "text": "but that's not to\nworry about that. If I take this guy here,\nI can put it in here. ",
    "start": "599410",
    "end": "608350"
  },
  {
    "text": "And I know that this guy\nhere equals this guy here. So if I can make this guy\nhere look like this guy here,",
    "start": "608350",
    "end": "617210"
  },
  {
    "text": "then I'm done. Make sense? ",
    "start": "617210",
    "end": "623780"
  },
  {
    "text": "If it makes sense,\neveryone should nod so that I know and I can go\nforward, or smile or something.",
    "start": "623780",
    "end": "630720"
  },
  {
    "text": "So this should look like 1. This is order 1 if not 1. Let's make it order 1,\nbecause it's 2 in this case.",
    "start": "630720",
    "end": "639250"
  },
  {
    "text": "What's the cost here? AUDIENCE: 1. PROFESSOR: 1. Everything inside the\nbubbles is order of already,",
    "start": "639250",
    "end": "647130"
  },
  {
    "text": "so I don't need to\nwrite an order of. ",
    "start": "647130",
    "end": "652380"
  },
  {
    "text": "What do we do next? AUDIENCE: Solve the\n[INAUDIBLE] equation.",
    "start": "652380",
    "end": "658029"
  },
  {
    "text": "2 to the [INAUDIBLE]. ",
    "start": "658030",
    "end": "664329"
  },
  {
    "text": "PROFESSOR: You're\nskipping one step. That's exactly what you do\nwhen you have the substitution method.",
    "start": "664330",
    "end": "669580"
  },
  {
    "text": "You're going to get\nto something and you need to solve the equation. But for the tree,\nthere are two steps. So we need to add up\nall the costs here",
    "start": "669580",
    "end": "675990"
  },
  {
    "text": "and that's the total cost here. In order to do that, first,\nwe sum up over each level.",
    "start": "675990",
    "end": "684681"
  },
  {
    "text": "And in this case,\nit's really simple because there's only\none node per level, but if you have multiple\nnodes per level,",
    "start": "684681",
    "end": "689690"
  },
  {
    "text": "you have to sum\nup for each level, and then you have\nto do a big sum. What's the sum for this level?",
    "start": "689690",
    "end": "697441"
  },
  {
    "text": "1.  Come on, guys. You're scaring me.",
    "start": "697441",
    "end": "703834"
  },
  {
    "text": "AUDIENCE: 1. AUDIENCE: 1. AUDIENCE: It's all 1. PROFESSOR: Excellent. So the only thing\nthat I'm missing",
    "start": "703834",
    "end": "709980"
  },
  {
    "text": "is to know how many levels I\nhave, because the sum is going to be order h, whatever h is.",
    "start": "709980",
    "end": "718050"
  },
  {
    "text": "How do we do that? n to the 1 over 2\nto the power of h has to equal this guy, right?",
    "start": "718050",
    "end": "727029"
  },
  {
    "text": "AUDIENCE: Why would\nit equal that guy? We know it's less\nthan that guy, but we don't know it's\nequal to that guy.",
    "start": "727030",
    "end": "733150"
  },
  {
    "text": "PROFESSOR: We have to make\nit equal because we can only stop when we get\nto the base case.",
    "start": "733150",
    "end": "738300"
  },
  {
    "text": "So we have to expand\nthe recursion tree until we get to a base\ncase, and then we stop, and this is our base\ncase because this",
    "start": "738300",
    "end": "745270"
  },
  {
    "text": "is what the problem says\nshould be our base case. AUDIENCE: Right, but n\nto the 1 over 2 to the h is not equal to n\nto the 1 over log n.",
    "start": "745270",
    "end": "759172"
  },
  {
    "text": "PROFESSOR: Well, we can set\nh to be whatever we want. h is the height of the tree,\nso we don't know what it is.",
    "start": "759172",
    "end": "764540"
  },
  {
    "text": "We have to find out what it is. AUDIENCE: So let's\nsay 2 to the h is equal to log n if you want\nto make it look like that.",
    "start": "764540",
    "end": "772992"
  },
  {
    "text": "PROFESSOR: Let me\nwrite down the equation to make sure you're right. You're probably right because\nyou're thinking faster than me,",
    "start": "772992",
    "end": "780010"
  },
  {
    "text": "but let me not embarrass myself\nand do this the right way. ",
    "start": "780010",
    "end": "789970"
  },
  {
    "text": "So you said 2 to the\nh is log n, right? Looks about right.",
    "start": "789970",
    "end": "795640"
  },
  {
    "text": "So what's h? AUDIENCE: Log base 2.",
    "start": "795640",
    "end": "801500"
  },
  {
    "text": "PROFESSOR: All right. Log log n. ",
    "start": "801500",
    "end": "808110"
  },
  {
    "text": "So T of n is order h. We got this from here.",
    "start": "808110",
    "end": "813949"
  },
  {
    "text": "T of n is order h is\norder of log log n.",
    "start": "813950",
    "end": "823510"
  },
  {
    "text": "Math people drowning, right?  Any questions about this?",
    "start": "823510",
    "end": "829205"
  },
  {
    "text": " Yes? AUDIENCE: The first\nline on the right--",
    "start": "829205",
    "end": "835709"
  },
  {
    "text": "PROFESSOR: This? AUDIENCE: Yeah. Is that your base case? What is that? PROFESSOR: We got a hint\nwith the problem that said,",
    "start": "835710",
    "end": "841380"
  },
  {
    "text": "n to the power of 1 over log\nn is 2, which is order 1.",
    "start": "841380",
    "end": "846660"
  },
  {
    "text": " So for the base case, we always\nwant them to look like this.",
    "start": "846660",
    "end": "852507"
  },
  {
    "text": "If we don't get a base case,\nwe write our own base case, which is if you\nplug in a constant, you're going to get a constant.",
    "start": "852507",
    "end": "858950"
  },
  {
    "text": "And since we're told that\nthis guy is a constant, that's a pretty good hint\nthat we want to get to it.",
    "start": "858950",
    "end": "864405"
  },
  {
    "start": "864405",
    "end": "869994"
  },
  {
    "text": "Let's see how we're\ndoing on time. Good. Ready to move on to\nthe next problem?",
    "start": "869994",
    "end": "877740"
  },
  {
    "start": "877000",
    "end": "1188000"
  },
  {
    "text": "Let's do a fun one. Some people might remember\nit from elementary school, but this time, we're going to\nlook at it with our 6.006 eyes.",
    "start": "877740",
    "end": "884449"
  },
  {
    "text": "So suppose you have\nm coins, gold coins.",
    "start": "884450",
    "end": "890850"
  },
  {
    "text": "One of them is face. The fake one is super light\nbecause it's not real gold. It's something that\nlooks like gold.",
    "start": "890850",
    "end": "897380"
  },
  {
    "text": "And we have a scale, and\nthe scale is super accurate.",
    "start": "897380",
    "end": "903210"
  },
  {
    "text": "It can weigh any\ncoins on either side and tell us which\nside is heavier.",
    "start": "903210",
    "end": "908640"
  },
  {
    "text": "Perfect accuracy, no need\nto worry about errors. ",
    "start": "908640",
    "end": "913690"
  },
  {
    "text": "I want to find out which\ncoin is the bad coin. What is the minimum number\nof experiments I have to do?",
    "start": "913690",
    "end": "919410"
  },
  {
    "text": " So there is a strategy, and\nwe can worry about that later,",
    "start": "919410",
    "end": "924880"
  },
  {
    "text": "but using 6.006, what is the\nminimum number of experiments I have to do?",
    "start": "924880",
    "end": "930284"
  },
  {
    "text": "AUDIENCE: Log N times. ",
    "start": "930284",
    "end": "935770"
  },
  {
    "text": "PROFESSOR: Not quite. So this is what you\nthink is, and you can do log n with\nbinary search, right?",
    "start": "935770",
    "end": "941620"
  },
  {
    "text": "The problem with binary search\nis if I put half of my coins on the left, half of\nmy coins on the right,",
    "start": "941620",
    "end": "947550"
  },
  {
    "text": "one side is going to\nbe heavier, right? So the answers are going\nto be this or this,",
    "start": "947550",
    "end": "953430"
  },
  {
    "text": "but I never get this. I only get one\nbit of information",
    "start": "953430",
    "end": "958750"
  },
  {
    "text": "instead of getting one trit. A trit is a base three digit. How many bits of\ninformation in a trit?",
    "start": "958750",
    "end": "967952"
  },
  {
    "text": "AUDIENCE: One and a half. PROFESSOR: Roughly. AUDIENCE: Log 3.",
    "start": "967952",
    "end": "973712"
  },
  {
    "text": "PROFESSOR: Log 3. And we know that it's\nbase 2 because that's what we use in CS. So we're discarding a\nfractional bit of information",
    "start": "973712",
    "end": "981790"
  },
  {
    "text": "if we're not allowing\nfor this to happen. ",
    "start": "981790",
    "end": "991550"
  },
  {
    "text": "Anyone want to try\nsomething else? We have to prove\nthis, by the way. We have to prove the minimum\nthat we come up with.",
    "start": "991550",
    "end": "996753"
  },
  {
    "text": " AUDIENCE: You could\njust do it coin by coin,",
    "start": "996753",
    "end": "1002064"
  },
  {
    "text": "but that would take forever. PROFESSOR: That's\nN. That's worse. AUDIENCE: How about log base\n4 N or something like that?",
    "start": "1002064",
    "end": "1010620"
  },
  {
    "text": "AUDIENCE: Can you explain\nto me why we can't just do binary search? PROFESSOR: We can. It's definitely going to\ngive us the correct answer,",
    "start": "1010620",
    "end": "1018030"
  },
  {
    "text": "but it's not the minimum\nnumber of weighings because we're discarding\na possible answer.",
    "start": "1018030",
    "end": "1023570"
  },
  {
    "text": "So if you do binary\nsearch, you will never get that the two\nsides are equal. AUDIENCE: Log base 3.",
    "start": "1023570",
    "end": "1028699"
  },
  {
    "text": "PROFESSOR: Log base\n3 would be better because we have three\nchoices all the time. Let's prove that.",
    "start": "1028700",
    "end": "1033980"
  },
  {
    "text": "So the right answer happens to\nbe log base 3 of N. Let's see how we would get it\naside from guessing.",
    "start": "1033980",
    "end": "1039879"
  },
  {
    "text": "AUDIENCE: So you\ndivide it into thirds and compare one third and one\nthird, and if they're equal,",
    "start": "1039880",
    "end": "1046809"
  },
  {
    "text": "then the light one is\nin the other third. And if they're not,\n[INAUDIBLE] light one. Then you just keep\ndividing by 3.",
    "start": "1046810",
    "end": "1054937"
  },
  {
    "text": "PROFESSOR: OK. So that's the strategy. What if I don't\nknow the strategy? How do I do this without\nknowing the strategy?",
    "start": "1054937",
    "end": "1060166"
  },
  {
    "text": " AUDIENCE: What if the number\nof coins isn't divisible by 3?",
    "start": "1060166",
    "end": "1066013"
  },
  {
    "text": " PROFESSOR: Math people.",
    "start": "1066014",
    "end": "1072186"
  },
  {
    "text": "AUDIENCE: Yeah, but then\nhow do you-- OK, never mind. AUDIENCE: Just take the two\nextra coins and toss them out.",
    "start": "1072186",
    "end": "1079134"
  },
  {
    "text": " PROFESSOR: If it's\nnot divisible by 3, you add fake coins\nthat are good.",
    "start": "1079134",
    "end": "1087540"
  },
  {
    "text": "I mean, you use good coins. But we're not worried\nabout the strategy.",
    "start": "1087540",
    "end": "1093500"
  },
  {
    "text": "I want us to think\nof a lower bound. This is a lower bound\nfor an algorithm, right? You cannot do better\nthan log 3 N experiments.",
    "start": "1093500",
    "end": "1103280"
  },
  {
    "text": "Does the word \"lower\nbound\" ring any bells? Is there any lecture where\nwe talked about lower bounds?",
    "start": "1103280",
    "end": "1109580"
  },
  {
    "start": "1109580",
    "end": "1117070"
  },
  {
    "text": "So if you sort and you're\nusing a comparison model, what's the best you can do? ",
    "start": "1117070",
    "end": "1124260"
  },
  {
    "text": "AUDIENCE: N log N. PROFESSOR: N log N. Good. So sorting using CMP, the\ncomparison model, is N log N.",
    "start": "1124260",
    "end": "1138010"
  },
  {
    "text": "How did we prove that? ",
    "start": "1138010",
    "end": "1146360"
  },
  {
    "text": "One word. Well, two words. ",
    "start": "1146360",
    "end": "1152159"
  },
  {
    "text": "Decision trees. Does anyone remember\nwhat decision trees are? One person. AUDIENCE: It's just a\ncomparison thing, right?",
    "start": "1152160",
    "end": "1159107"
  },
  {
    "text": "You're like, is it\ngreater, is it less than, or is there some\nsort of question you're asking about each key.",
    "start": "1159107",
    "end": "1164383"
  },
  {
    "text": "PROFESSOR: Cool. Let's go over that a little bit. No matter what\nyour algorithm is,",
    "start": "1164384",
    "end": "1171789"
  },
  {
    "text": "it's going to weigh\nsome coins and it's going to get an\nanswer from the scale. And then based on that, it's\ngoing to weigh some other coins",
    "start": "1171790",
    "end": "1179350"
  },
  {
    "text": "and get some answer\nfrom the scale. And it will do some\nexperiments and then",
    "start": "1179350",
    "end": "1184510"
  },
  {
    "text": "it will give you an answer. So if you draw a decision\ntree, it would look like this.",
    "start": "1184510",
    "end": "1190300"
  },
  {
    "start": "1188000",
    "end": "1424000"
  },
  {
    "text": "First, we start\nwith 0 information. We weigh some coins. Based on that, we have\nthree possible answers--",
    "start": "1190300",
    "end": "1199419"
  },
  {
    "text": "smaller, equal, greater. Now, if we're here, we're\ngoing to do another experiment.",
    "start": "1199420",
    "end": "1207260"
  },
  {
    "text": "Three possible answers. If we're here, another\nexperiment, three possible",
    "start": "1207260",
    "end": "1213350"
  },
  {
    "text": "answers. If we're here, another\nexperiment, three possible answers.",
    "start": "1213350",
    "end": "1219420"
  },
  {
    "text": "Say we do a third experiment. One, two, three, one, two,\nthree, one, two, three, one,",
    "start": "1219420",
    "end": "1224641"
  },
  {
    "text": "two, three, one, two, three,\none, two, three, one, two, three, one, two,\nthree, one, two, three.",
    "start": "1224641",
    "end": "1230760"
  },
  {
    "text": "And then suppose we stop. If we stop, we have\nto give an answer. So this is an answer,\nthis is an answer,",
    "start": "1230760",
    "end": "1237530"
  },
  {
    "text": "this is an answer, answer,\nanswer, answer, answer, answer.",
    "start": "1237530",
    "end": "1244880"
  },
  {
    "text": "So how many answers do\nI have at the bottom if I have three levels?",
    "start": "1244880",
    "end": "1250684"
  },
  {
    "text": "Here I have three\nexperiments, so three levels in the decision tree. How many answers?",
    "start": "1250684",
    "end": "1256160"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: 3 to the third\nbecause I start three at the first level, nine at\nthe second, 27 at the third.",
    "start": "1256160",
    "end": "1263580"
  },
  {
    "text": "Each time, I multiply by 3.  So if I do three weighings, I\ncan give at most 27 answers.",
    "start": "1263580",
    "end": "1275030"
  },
  {
    "text": "If I have more than 27\ncoins, I can't possibly decide which one is bad\nbecause say if I have 30 coins,",
    "start": "1275030",
    "end": "1284410"
  },
  {
    "text": "then I need to be able\nto give out 30 answers. My algorithm has to\nhave a place where",
    "start": "1284410",
    "end": "1289810"
  },
  {
    "text": "it says the bad coin is coin\none, coin two, coin three, all the way to coin 30. Here I only have 27\npossible answers,",
    "start": "1289810",
    "end": "1296960"
  },
  {
    "text": "so this isn't going to\ncut it for 30 coins. I need to do one more comparison\nso that I have a deeper tree. ",
    "start": "1296960",
    "end": "1304560"
  },
  {
    "text": "So suppose I have h\ncomparisons instead. How many leaves?",
    "start": "1304560",
    "end": "1311500"
  },
  {
    "text": "How many possible answers? AUDIENCE: h to the third. PROFESSOR: Almost.",
    "start": "1311500",
    "end": "1316663"
  },
  {
    "text": "AUDIENCE: 3 to the h. PROFESSOR: 3 to the h. So 3 multiplied by 3 multiplied\nby 3 multiplied by 3 h times,",
    "start": "1316663",
    "end": "1327370"
  },
  {
    "text": "so 3 to the h. It's no longer equal to 27. 3 to the h is the number\nof possible answers.",
    "start": "1327370",
    "end": "1334424"
  },
  {
    "text": "This has to be bigger or\nequal to N. Otherwise, the algorithm is incorrect. ",
    "start": "1334425",
    "end": "1341830"
  },
  {
    "text": "So what can we say about h? ",
    "start": "1341830",
    "end": "1348261"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. ",
    "start": "1348261",
    "end": "1363370"
  },
  {
    "text": "PROFESSOR: We did all\nthis without even thinking of what an algorithm\nwould look like. This works for any algorithm.",
    "start": "1363370",
    "end": "1369330"
  },
  {
    "text": "No matter how smart you are, no\nmatter how much math you know, your algorithm is going\nto be bound by this.",
    "start": "1369330",
    "end": "1375940"
  },
  {
    "text": "So the fact that the\nanswer looks like this gives you some intuition for\nhow to solve the problem.",
    "start": "1375940",
    "end": "1381320"
  },
  {
    "text": "If you want to solve the\nproblem now and figure out the strategy, you know\nthat you have a 3 here.",
    "start": "1381320",
    "end": "1386600"
  },
  {
    "text": "So if you divide\ninto 2 every time, you're not going to\nget to the right limit.",
    "start": "1386600",
    "end": "1391820"
  },
  {
    "text": "So first you do this,\nyou get a lower bound, and then you use your\nintuition to figure out",
    "start": "1391820",
    "end": "1398190"
  },
  {
    "text": "what the lower bound means. In this case, it would mean the\nstrategy that we heard earlier.",
    "start": "1398190",
    "end": "1404170"
  },
  {
    "text": "You have to divide\ninto 3 every time and then figure out what you\ndo based on the comparison. So your answer works\nperfectly once we have this.",
    "start": "1404170",
    "end": "1412790"
  },
  {
    "text": "And also, once we\nhave this, you know that your answer is correct\nbecause it's optimal. You can't do better than that. ",
    "start": "1412790",
    "end": "1420007"
  },
  {
    "text": "Any questions on decision trees?  So lower bounds are a\nboring topic in general.",
    "start": "1420007",
    "end": "1427419"
  },
  {
    "start": "1424000",
    "end": "1464000"
  },
  {
    "text": "They tell you what you can't do. They don't tell you anything\nuseful about what you can do. In some cases, being able to\nreason about a lower bound",
    "start": "1427420",
    "end": "1433900"
  },
  {
    "text": "gives you a hint\nof the solution. ",
    "start": "1433900",
    "end": "1441730"
  },
  {
    "text": "New problem. ",
    "start": "1441730",
    "end": "1463340"
  },
  {
    "text": "Suppose we have a 2D map. There's a hill, and you take\na satellite picture of it",
    "start": "1463340",
    "end": "1469080"
  },
  {
    "start": "1464000",
    "end": "1664000"
  },
  {
    "text": "at night, and you get a picture\nwith bright pixels and not bright pixels.",
    "start": "1469080",
    "end": "1475070"
  },
  {
    "text": "There are numbers showing\nhow bright your pixels are. 1, 2, 1, 2, 3, 0, 0.",
    "start": "1475070",
    "end": "1486530"
  },
  {
    "text": "I'm going to draw out an example\nso we can use our intuition.",
    "start": "1486530",
    "end": "1491645"
  },
  {
    "text": "0, 0, 1. ",
    "start": "1491645",
    "end": "1513090"
  },
  {
    "text": "So suppose this is our map. It's W times H-- W\nof what these are,",
    "start": "1513090",
    "end": "1521660"
  },
  {
    "text": "I think they're columns,\nand H of the other ones. And you want to find a\ncertain picture inside it.",
    "start": "1521660",
    "end": "1528080"
  },
  {
    "text": "You want to see how many times\ndoes a certain pattern show up. Say the pattern is\nsmall w times small h,",
    "start": "1528080",
    "end": "1535470"
  },
  {
    "text": "and it looks like this. ",
    "start": "1535470",
    "end": "1540980"
  },
  {
    "text": "But this will be the\ninput to your problem, so the pattern\nmight be different. You can't hard code this in.",
    "start": "1540980",
    "end": "1546660"
  },
  {
    "text": "And this is useful. This problem is called\na bunker hill problem. This is a hill, and\nthis is a bunker.",
    "start": "1546660",
    "end": "1553429"
  },
  {
    "text": "You take a picture of the hill. You want to know\nwhere the bunkers are so you can bomb them at night so\nthen you can attack the place.",
    "start": "1553429",
    "end": "1558669"
  },
  {
    "text": "AUDIENCE: That's awful. PROFESSOR: Thank you. I'll take that as a compliment\nSo a nice way of solving this?",
    "start": "1558670",
    "end": "1565670"
  },
  {
    "text": " AUDIENCE: You could just\ngo through each row,",
    "start": "1565670",
    "end": "1573090"
  },
  {
    "text": "and then look for a match\nfor the first row, and then-- PROFESSOR: Yep. Is this a match?",
    "start": "1573090",
    "end": "1578559"
  },
  {
    "text": "That's what you're saying. AUDIENCE: Yeah. We can see that's a match. PROFESSOR: Is this a match? Is this a match? By the way, this is a match.",
    "start": "1578559",
    "end": "1584920"
  },
  {
    "text": "This is not a match, this is not\na match, this is not a match,",
    "start": "1584920",
    "end": "1589960"
  },
  {
    "text": "this is not a match. Now we go down here. This is not a match,\nthis is not a match, this is not a match,\nso on and so forth.",
    "start": "1589960",
    "end": "1597242"
  },
  {
    "text": "AUDIENCE: That wasn't\nwhat I was suggesting, but that's a good idea. PROFESSOR: Maybe you're\nsuggesting something smarter,",
    "start": "1597242",
    "end": "1603630"
  },
  {
    "text": "and I don't want to\nlet you do something smarter so that we look at the\nbrute force approach first. AUDIENCE: I mean,\nI was just saying",
    "start": "1603630",
    "end": "1609390"
  },
  {
    "text": "take the first row\nof your bunker, and then compare\nit to other rows, and once you hit that, then\ncheck and see if the rest of--",
    "start": "1609390",
    "end": "1616787"
  },
  {
    "text": "PROFESSOR: Yeah,\nthat's a bit smarter, so that's harder\nto reason about. Let's take this one and figure\nout the running time of it.",
    "start": "1616787",
    "end": "1624623"
  },
  {
    "text": "AUDIENCE: Does that mean even\nif you know it's not a match, you keep checking\nall nine of them?",
    "start": "1624623",
    "end": "1630114"
  },
  {
    "text": "PROFESSOR: Yeah. Say at the worst case,\nyou only find out it's not a match all\nthe way at the end. ",
    "start": "1630114",
    "end": "1636895"
  },
  {
    "text": "AUDIENCE: Are you trying to look\nfor all matches or just one? PROFESSOR: All matches.",
    "start": "1636895",
    "end": "1642560"
  },
  {
    "text": "AUDIENCE: You're limited to n\nsquared time almost no matter what, right? If you have a small\nbunker in a large field,",
    "start": "1642560",
    "end": "1649270"
  },
  {
    "text": "you have to hit the\nsmall bunker every time. PROFESSOR: Are you going to\nsolve the problem for me?",
    "start": "1649270",
    "end": "1654720"
  },
  {
    "text": "AUDIENCE: Are we trying\nto find the [INAUDIBLE]? PROFESSOR: No. We're trying to\nfind out the running time for the dumb\nalgorithm first.",
    "start": "1654720",
    "end": "1662420"
  },
  {
    "text": "Humor me and let's\nsolve this first, and then let's get to the\nefficient algorithm, OK? AUDIENCE: Big W minus\nsmall w plus 1 times big H",
    "start": "1662420",
    "end": "1670580"
  },
  {
    "text": "minus small h plus 1.  AUDIENCE: Where'd\nyou get plus 1 from?",
    "start": "1670580",
    "end": "1677080"
  },
  {
    "text": " AUDIENCE: So it's WH? AUDIENCE: Yeah.",
    "start": "1677080",
    "end": "1682101"
  },
  {
    "text": "PROFESSOR: Well, there's\nsomething missing here. This is how many positions I\nhave that I have to look at.",
    "start": "1682101",
    "end": "1688250"
  },
  {
    "text": "How much time does it take\nto compare the small images? AUDIENCE: [INAUDIBLE]. ",
    "start": "1688250",
    "end": "1695860"
  },
  {
    "text": "PROFESSOR: This is smaller than\nwh, which is the input size, so it's scary if you have an\nalgorithm that runs faster",
    "start": "1695860",
    "end": "1701120"
  },
  {
    "text": "than the input size\nbecause it means you're not looking\nat all the input. ",
    "start": "1701120",
    "end": "1714641"
  },
  {
    "text": "So this is definitely\nbigger than the input size once we add the w times h here. Don't forget this guy. ",
    "start": "1714641",
    "end": "1722590"
  },
  {
    "text": "This is the naive algorithm, and\nif we discard the small order",
    "start": "1722590",
    "end": "1728700"
  },
  {
    "text": "factors, we get that\nthis is order of WHwh. ",
    "start": "1728700",
    "end": "1733950"
  },
  {
    "text": "How can you do better? You have the answer, right?",
    "start": "1733950",
    "end": "1739240"
  },
  {
    "text": "Let's let everyone else\nthink for a minute, and then you can give me\nthe answer if you want,",
    "start": "1739240",
    "end": "1744299"
  },
  {
    "text": "or someone else can\ngive me the answer.  I guess you should because\nyou thought of it first.",
    "start": "1744300",
    "end": "1751079"
  },
  {
    "start": "1751079",
    "end": "1757070"
  },
  {
    "text": "Any ideas? ",
    "start": "1757070",
    "end": "1763620"
  },
  {
    "text": "So you're thinking about\nthe input size, right? Someone was thinking\nabout the input size.",
    "start": "1763620",
    "end": "1772160"
  },
  {
    "start": "1764000",
    "end": "1804000"
  },
  {
    "text": "So the input size\nis W times H, right? So if I have an algorithm\nthat's W times H, that's optimal because it\nhas to look at all the input.",
    "start": "1772160",
    "end": "1778810"
  },
  {
    "text": " Well, we're going to\nhave an algorithm that's",
    "start": "1778810",
    "end": "1783890"
  },
  {
    "text": "W times H, so with\nthat out of the way, does that inspire anyone\nas to what the solution is?",
    "start": "1783890",
    "end": "1791000"
  },
  {
    "start": "1791000",
    "end": "1798485"
  },
  {
    "text": "AUDIENCE: Do that thing\nthat I was saying, just take the first row, but\nthen you still have a W term.",
    "start": "1798485",
    "end": "1803704"
  },
  {
    "text": "PROFESSOR: Yeah. So let's make it better. It is the correct intuition.",
    "start": "1803704",
    "end": "1809250"
  },
  {
    "start": "1804000",
    "end": "1864000"
  },
  {
    "text": "Now try to use a trick we\nlearned in lecture to make that faster. ",
    "start": "1809250",
    "end": "1817233"
  },
  {
    "text": "AUDIENCE: Just use\nthe top left corner instead of the whole row. PROFESSOR: OK. So we could use the\ntop left corner,",
    "start": "1817233",
    "end": "1824110"
  },
  {
    "text": "and if the top left\ncorner doesn't match, then we don't have\nto check for matches.",
    "start": "1824110",
    "end": "1830630"
  },
  {
    "text": "So this works for\nreasonably random data. As long as we don't have\na lot of false positives, we're going to run fast.",
    "start": "1830630",
    "end": "1838040"
  },
  {
    "text": "Now, the top corner of\nthis one, if the map",
    "start": "1838040",
    "end": "1843450"
  },
  {
    "text": "has a lot of 1's and then some\n2's sprinkled all over it, most of the time, we'll have\nto go through the whole image",
    "start": "1843450",
    "end": "1851370"
  },
  {
    "text": "so we're going to have a\nlot of false positives. How do we make our false\npositive rate go down?",
    "start": "1851370",
    "end": "1859179"
  },
  {
    "text": "AUDIENCE: Looks kind of\nlike a rolling hash problem. PROFESSOR: Looks like a\nrolling hash problem, exactly.",
    "start": "1859180",
    "end": "1864580"
  },
  {
    "start": "1864000",
    "end": "1979000"
  },
  {
    "text": "Let's see if we can\nuse rolling hashes. AUDIENCE: But then you\nstill have that lowercase w term, though.",
    "start": "1864580",
    "end": "1871022"
  },
  {
    "text": "PROFESSOR: How do\nwe get rid of it?  AUDIENCE: [INAUDIBLE].",
    "start": "1871022",
    "end": "1876182"
  },
  {
    "text": "PROFESSOR: Sorry? ",
    "start": "1876182",
    "end": "1881633"
  },
  {
    "text": "AUDIENCE: Wouldn't it be w? I mean the running time if we\nwere just going through one row would be big W minus\nlittle w, times--",
    "start": "1881633",
    "end": "1889115"
  },
  {
    "text": " PROFESSOR: So where's\nyour rolling hash? ",
    "start": "1889115",
    "end": "1897768"
  },
  {
    "text": "AUDIENCE: I guess you can use\nthe entire thing as a hash, too. That would kind of work.",
    "start": "1897768",
    "end": "1902970"
  },
  {
    "text": "PROFESSOR: So we want a\nhash for the whole thing. Instead of using this as the\nhash, we want a smarter hash.",
    "start": "1902970",
    "end": "1910928"
  },
  {
    "text": "AUDIENCE: It's the\nentire thing, and then as you move to the right, you\ncan add those and subtract,",
    "start": "1910928",
    "end": "1918308"
  },
  {
    "text": "and compare that with the hash. PROFESSOR: OK. So we'd have a rolling hash\nthat has everything in here,",
    "start": "1918308",
    "end": "1925509"
  },
  {
    "text": "and then as I move to the\nright, I add these guys and I remove these guys. ",
    "start": "1925510",
    "end": "1932730"
  },
  {
    "text": "This is big W times big\nH, roughly, times small h",
    "start": "1932730",
    "end": "1939400"
  },
  {
    "text": "because every time\nI move to the right, I have to do order h work.",
    "start": "1939400",
    "end": "1945090"
  },
  {
    "text": "So I'm down from this\nthing to order of WHh,",
    "start": "1945090",
    "end": "1952260"
  },
  {
    "text": "So it's better. It's one step forward. Now, let's make\nthis even faster. ",
    "start": "1952260",
    "end": "1967420"
  },
  {
    "text": "What if I could do this in\norder 1 instead of order h?",
    "start": "1967420",
    "end": "1973810"
  },
  {
    "text": " How would I do this in order 1?",
    "start": "1973810",
    "end": "1980114"
  },
  {
    "start": "1979000",
    "end": "2109000"
  },
  {
    "text": "AUDIENCE: You'd have to\ncompress all the rows, and then take the\nhash of each column.",
    "start": "1980114",
    "end": "1985690"
  },
  {
    "text": "PROFESSOR: How would\nwe compress them? AUDIENCE: Take the\nhash of the column.",
    "start": "1985690",
    "end": "1992049"
  },
  {
    "text": "PROFESSOR: You want\nto compress the rows? AUDIENCE: Yes. You divide it-- PROFESSOR: Let's not\ncompress the rows.",
    "start": "1992050",
    "end": "1998330"
  },
  {
    "start": "1998330",
    "end": "2003970"
  },
  {
    "text": "AUDIENCE: You could\ntake just your bunker, and then figure out the\nhashes of the three columns,",
    "start": "2003970",
    "end": "2009980"
  },
  {
    "text": "and just run through like that. You'd still have to access\neach of those items.",
    "start": "2009980",
    "end": "2016146"
  },
  {
    "text": "I don't really see\nhow it's faster. I guess it's less, though.",
    "start": "2016146",
    "end": "2021380"
  },
  {
    "text": "It's less. Maybe it's only 1. ",
    "start": "2021380",
    "end": "2027630"
  },
  {
    "text": "AUDIENCE: So do you want to hash\neach little column [INAUDIBLE]?",
    "start": "2027630",
    "end": "2033970"
  },
  {
    "start": "2033970",
    "end": "2041200"
  },
  {
    "text": "PROFESSOR: So we're going\nto hash all these guys, and then we're going to\nhave hashes for them,",
    "start": "2041200",
    "end": "2046340"
  },
  {
    "text": "and we're going to do\nthe regular Rabin-Karp for the hashes.",
    "start": "2046340",
    "end": "2053419"
  },
  {
    "text": "Now, what happens\nwhen I go down? PROFESSOR: You have to\nrecompute everything.",
    "start": "2053420",
    "end": "2058840"
  },
  {
    "text": "PROFESSOR: Let's do better\nthan recompute everything. AUDIENCE: Do you want\nto [INAUDIBLE] downward on each column? PROFESSOR: Yep. Rolling hash. I want to make this faster,\nso I have big W hashes.",
    "start": "2058840",
    "end": "2068199"
  },
  {
    "text": "They're all little h inside. Here, I have to compute\nthem brute force. I can't do anything better.",
    "start": "2068199",
    "end": "2073485"
  },
  {
    "text": "But when I go from\nhere to here, there's only one element going out\nand one element going in.",
    "start": "2073485",
    "end": "2079394"
  },
  {
    "text": " Same for all these guys. Let's not make the picture\nuglier than it needs to be.",
    "start": "2079394",
    "end": "2086080"
  },
  {
    "text": "So I have big W rolling hashes. They're vertical rolling hashes.",
    "start": "2086080",
    "end": "2091339"
  },
  {
    "text": "And then the rolling hashes\nhash columns, so my the sliding",
    "start": "2091340",
    "end": "2099310"
  },
  {
    "text": "window that I have is\nlittle w rolling hashes. Each rolling hash is little h in\nsize, so it's a hash of hashes.",
    "start": "2099310",
    "end": "2110320"
  },
  {
    "start": "2109000",
    "end": "2174000"
  },
  {
    "text": "It's nested hashes. And then when I go\ndown, I only have to roll down each of\nthe rolling hashes by 1,",
    "start": "2110320",
    "end": "2117950"
  },
  {
    "text": "so that's constant time. So to go from here to here, to\nthe slide the window one down,",
    "start": "2117950",
    "end": "2124630"
  },
  {
    "text": "I have to roll this hash\ndown, roll this one, this one, this one, this one,\nthis one, and all of them",
    "start": "2124630",
    "end": "2129640"
  },
  {
    "text": "roll down in constant time. So when I'm adding a column\nto the hash, say I'm here",
    "start": "2129640",
    "end": "2136640"
  },
  {
    "text": "and I want to go here,\nI roll down this hash and I have the answer.",
    "start": "2136640",
    "end": "2142559"
  },
  {
    "text": "It's order 1. I'm adding it in order 1. ",
    "start": "2142560",
    "end": "2147726"
  },
  {
    "text": "Does this make sense? ",
    "start": "2147726",
    "end": "2155087"
  },
  {
    "text": "AUDIENCE: It's tricky. PROFESSOR: But it's\nnot too bad, right?",
    "start": "2155087",
    "end": "2160196"
  },
  {
    "text": "AUDIENCE: You just need to do\nthe vertical roll first, right? PROFESSOR: Yep. ",
    "start": "2160196",
    "end": "2165880"
  },
  {
    "text": "To have the simplest\npossible code, you start with big W rolling\nhashes, do 1D Rabin-Karp,",
    "start": "2165880",
    "end": "2172519"
  },
  {
    "text": "you roll everything\ndown, 1D Rabin-Karp, and keep doing that.",
    "start": "2172520",
    "end": "2178100"
  },
  {
    "start": "2174000",
    "end": "2354000"
  },
  {
    "text": " OK What's the running\ntime for this?",
    "start": "2178100",
    "end": "2183372"
  },
  {
    "text": "AUDIENCE: WH. PROFESSOR: WH. AUDIENCE: Does this one have a\nspace complexity about W, then, because [INAUDIBLE]?",
    "start": "2183372",
    "end": "2188780"
  },
  {
    "text": "PROFESSOR: Yeah. So my memory requirement\nwent up to 4W. ",
    "start": "2188780",
    "end": "2199850"
  },
  {
    "text": "Is everyone happy with this? It's one of the few cases where\nan approach for solving a 1D",
    "start": "2199850",
    "end": "2206339"
  },
  {
    "text": "problem generalizes to 2D. In most problems, you have to\nrethink the whole situation.",
    "start": "2206340",
    "end": "2211630"
  },
  {
    "start": "2211630",
    "end": "2222980"
  },
  {
    "text": "Let's do a hard problem. Enough with the easy ones. ",
    "start": "2222980",
    "end": "2230580"
  },
  {
    "text": "Two lists, roughly size N,\nand they're both sorted.",
    "start": "2230580",
    "end": "2239240"
  },
  {
    "text": "Let me fill them out\nwith random numbers. ",
    "start": "2239240",
    "end": "2245010"
  },
  {
    "text": "5, 13, 22, 43, 56, 62, 81,\n86, 87, 2, 3, 7, 9, 15, 19,",
    "start": "2245010",
    "end": "2270710"
  },
  {
    "text": "24, 28, 32. ",
    "start": "2270710",
    "end": "2276780"
  },
  {
    "text": "So I have these lists. Let's be generous and say that\nall the numbers are different.",
    "start": "2276780",
    "end": "2281810"
  },
  {
    "text": "They're sorted. I want to find the nth number,\nso the number with rank n,",
    "start": "2281810",
    "end": "2289110"
  },
  {
    "text": "out of both lists\nas fast as possible.",
    "start": "2289110",
    "end": "2299274"
  },
  {
    "text": "AUDIENCE: Wouldn't\nit just be index? PROFESSOR: So the thing is\nif, for example, n is 1,",
    "start": "2299274",
    "end": "2306470"
  },
  {
    "text": "then it's this. This is the second number. This is the third.",
    "start": "2306470",
    "end": "2311883"
  },
  {
    "text": "So if you take the lists\nand you combine them, then I want the\nresult out of that. AUDIENCE: Let's do merge\nsort and the combined",
    "start": "2311884",
    "end": "2319119"
  },
  {
    "text": "[INAUDIBLE] index, right? PROFESSOR: Full\nmerge sort, N log N?",
    "start": "2319120",
    "end": "2324980"
  },
  {
    "text": "No. AUDIENCE: It's already\nsorted, though. PROFESSOR: OK. So what do we do? AUDIENCE: We just do merge. That's just order N. PROFESSOR: So merge.",
    "start": "2324980",
    "end": "2331182"
  },
  {
    "text": "AUDIENCE: Merge [INAUDIBLE]. PROFESSOR: OK. So merge and then index\nis the first approach,",
    "start": "2331182",
    "end": "2338230"
  },
  {
    "text": "which is order N. Then you\nsaid run the merge algorithm, but stop when you get to\nthe little nth element,",
    "start": "2338230",
    "end": "2347052"
  },
  {
    "text": "so that's a little bit\nbetter and we don't have to produce an array so the space\ncomplexity is down to order 1,",
    "start": "2347052",
    "end": "2352490"
  },
  {
    "text": "right? Now let's do-- AUDIENCE: Logarighmic times n. PROFESSOR: Yeah, exactly.",
    "start": "2352490",
    "end": "2358575"
  },
  {
    "start": "2354000",
    "end": "3288000"
  },
  {
    "text": "This is linear. We have to get to logarithms. How do we get to logarithms? AUDIENCE: Do a\nmodified binary search.",
    "start": "2358575",
    "end": "2364860"
  },
  {
    "start": "2364860",
    "end": "2372070"
  },
  {
    "text": "AUDIENCE: What if you\nfirst looked at-- actually,",
    "start": "2372070",
    "end": "2378190"
  },
  {
    "text": "I don't know what\nI'm going to say.  PROFESSOR: Anyone else? ",
    "start": "2378190",
    "end": "2386037"
  },
  {
    "text": "So modified binary search. Do you know the full\nanswer, or do you want to start looking\nat the solution?",
    "start": "2386037",
    "end": "2391349"
  },
  {
    "text": "AUDIENCE: I have an\nidea [INAUDIBLE]. PROFESSOR: Let's see\nhow it would work. ",
    "start": "2391350",
    "end": "2398530"
  },
  {
    "text": "AUDIENCE: So if we take\nthe n over second element",
    "start": "2398530",
    "end": "2411530"
  },
  {
    "text": "on each row, the\none that is lower,",
    "start": "2411530",
    "end": "2419628"
  },
  {
    "text": "that's at least the n\nover second element, and the one that's higher-- ",
    "start": "2419628",
    "end": "2435230"
  },
  {
    "text": "PROFESSOR: So let's say\nthis is our N1 and N2, and they're both\norder N initially.",
    "start": "2435230",
    "end": "2441330"
  },
  {
    "text": "So this is N2 over 2\nif this is smaller. ",
    "start": "2441330",
    "end": "2448328"
  },
  {
    "text": "AUDIENCE: The lower\none is at least the N over second\nelement since everything before it is less than\nN. Does that make sense?",
    "start": "2448328",
    "end": "2463844"
  },
  {
    "text": "PROFESSOR: Yeah. So this is N over 2\nare greater, right? This guy. ",
    "start": "2463844",
    "end": "2476030"
  },
  {
    "text": "AUDIENCE: We also know\nthat the element above it",
    "start": "2476030",
    "end": "2488859"
  },
  {
    "text": "is at most the nth element\nbecause it's greater than--",
    "start": "2488859",
    "end": "2495316"
  },
  {
    "text": "PROFESSOR: So it's\nat most N1 plus N2 because that's how\nmany you have in total, and the one on the top, you\nknow that these ones are",
    "start": "2495316",
    "end": "2504150"
  },
  {
    "text": "bigger than h, right? But you don't know\nanything about these ones, so it's minus N1 over 2.",
    "start": "2504150",
    "end": "2512360"
  },
  {
    "text": "So it's at most N1 over 2\nplus N2, the top element. ",
    "start": "2512360",
    "end": "2519589"
  },
  {
    "text": "AUDIENCE: So then we can take\nthe element three quarters",
    "start": "2519590",
    "end": "2526860"
  },
  {
    "text": "of the way through N2 and\none quarter of the way through N1 to do\nmore [INAUDIBLE].",
    "start": "2526860",
    "end": "2533933"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]?  AUDIENCE: Yes. ",
    "start": "2533934",
    "end": "2542962"
  },
  {
    "text": "PROFESSOR: Let's see what\nhappens in each case. So if little n is\nhere, then you divide.",
    "start": "2542962",
    "end": "2554270"
  },
  {
    "text": "So if n is smaller than this,\nthen you chop them up here",
    "start": "2554270",
    "end": "2561490"
  },
  {
    "text": "and you've divided\nthe problem into half. You're good. If it's bigger than\nthis other number here,",
    "start": "2561490",
    "end": "2569680"
  },
  {
    "text": "you've chopped the problem\nup and you're here. You're good. Now, the hard case seems\nto be when it's in between.",
    "start": "2569680",
    "end": "2576100"
  },
  {
    "text": "So what do we do then? AUDIENCE: Aren't those\ntwo numbers the same? AUDIENCE: If it's between,\ntake the upper half",
    "start": "2576100",
    "end": "2581770"
  },
  {
    "text": "of the bottom one and the lower\nhalf of the upper one, right?",
    "start": "2581770",
    "end": "2587220"
  },
  {
    "text": "If it's between 15 and 43,\nthen you take everything in the upper half of N2 and\nyou take the lower half of N1.",
    "start": "2587220",
    "end": "2595375"
  },
  {
    "text": "AUDIENCE: Yeah,\nyou should always be taking the upper half\nof one and the lower half of the other in this case.",
    "start": "2595375",
    "end": "2601240"
  },
  {
    "text": "PROFESSOR: Really? ",
    "start": "2601240",
    "end": "2606270"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]\nN2, 15 is at least",
    "start": "2606270",
    "end": "2615230"
  },
  {
    "text": "the nth over 2 element. I think we're using three\nn's at the same time. AUDIENCE: Are you using\nthe little n or the big N?",
    "start": "2615230",
    "end": "2622110"
  },
  {
    "text": "AUDIENCE: Sorry.  [INAUDIBLE] is element\nand the lists are called N",
    "start": "2622110",
    "end": "2627224"
  },
  {
    "text": "and this is confusing. Can we rename the nth\nelement to something like m or some\nother useful number?",
    "start": "2627224",
    "end": "2633130"
  },
  {
    "text": "The kth element, OK. So the 15 at least the\nkth over 2 element, so it can't be anything\non the left half of the--",
    "start": "2633130",
    "end": "2640227"
  },
  {
    "text": "PROFESSOR: k over 2? Why k over 2? This list is size N. AUDIENCE: Sorry. I didn't pick the\nelements at N over 2.",
    "start": "2640227",
    "end": "2647470"
  },
  {
    "text": "I picked the\nelements at k over 2. PROFESSOR: Why would I do that?",
    "start": "2647470",
    "end": "2652660"
  },
  {
    "start": "2652660",
    "end": "2658789"
  },
  {
    "text": "If N1 is greater than k, then\nI chop off the end of the list,",
    "start": "2658790",
    "end": "2664030"
  },
  {
    "text": "right? If N2 is bigger than k, then\nI chop off the end of the list",
    "start": "2664030",
    "end": "2669325"
  },
  {
    "text": "completely.  If this list is sorted and\nI want the third element,",
    "start": "2669325",
    "end": "2677100"
  },
  {
    "text": "I know that these\nare not the answer. No matter what's down here,\nthese are not the answer.",
    "start": "2677100",
    "end": "2682140"
  },
  {
    "text": "So I know for sure that k is\ngoing to be bigger than N1, N2.",
    "start": "2682140",
    "end": "2689349"
  },
  {
    "text": "So instead of going there,\nlet's go at k over 2.",
    "start": "2689350",
    "end": "2695640"
  },
  {
    "text": "And here, let's go for k over 2.",
    "start": "2695640",
    "end": "2701289"
  },
  {
    "text": "Now this one looks\na bit nastier. N1 plus N2 stays\nwhat it was before.",
    "start": "2701290",
    "end": "2707720"
  },
  {
    "start": "2707720",
    "end": "2714970"
  },
  {
    "text": "AUDIENCE: On the list where you\ngot the element that was lower, you know that everything to\nthe left of it is less than k",
    "start": "2714970",
    "end": "2724690"
  },
  {
    "text": "over 2. ",
    "start": "2724690",
    "end": "2731470"
  },
  {
    "text": "The element number is\nlower than k over 2, so we're not using anything\nto the left of the 15.",
    "start": "2731470",
    "end": "2736650"
  },
  {
    "text": "You can kill that\nsection for us. PROFESSOR: OK, so we can kill\nit, but then what's the rank?",
    "start": "2736650",
    "end": "2742007"
  },
  {
    "text": "When I recurse, how\nam I going to know the rank that I'm looking for? ",
    "start": "2742007",
    "end": "2748817"
  },
  {
    "text": "AUDIENCE: k minus\nwhat you killed. ",
    "start": "2748817",
    "end": "2755700"
  },
  {
    "text": "AUDIENCE: You can\nsave the branches. PROFESSOR: So you want\nto kill this guy, right? So you want to\nkill these numbers.",
    "start": "2755700",
    "end": "2761970"
  },
  {
    "text": "But here I have\nk over 2 numbers, and here I have\nk over 2 numbers. How do I know that it's\nnot somewhere here?",
    "start": "2761970",
    "end": "2769401"
  },
  {
    "text": "AUDIENCE: How do you know that\nwhat's not somewhere there? AUDIENCE: You compare\n15 and 43, right?",
    "start": "2769401",
    "end": "2776220"
  },
  {
    "text": "And then you see\nthat 43 is bigger, and you see 15 is smaller, so\nthen you would go to, I guess,",
    "start": "2776220",
    "end": "2786299"
  },
  {
    "text": "k over 4 index in N1,\nand 3k over 4 in N2.",
    "start": "2786300",
    "end": "2796195"
  },
  {
    "text": "AUDIENCE: When you\nrecurse, you said that you've killed\nk over 2 elements.",
    "start": "2796195",
    "end": "2801430"
  },
  {
    "text": "AUDIENCE: But you can also kill\neverything to the right of 43.",
    "start": "2801430",
    "end": "2806947"
  },
  {
    "text": "AUDIENCE: Yes. You can kill everything\nto the right of 43 since it can't be any\nof those elements, and you can kill everything\nto the left of 15.",
    "start": "2806947",
    "end": "2813670"
  },
  {
    "text": "And then you repeat the\nalgorithm again with the lists you didn't kill, except you\nalso put in a term of we've",
    "start": "2813670",
    "end": "2820210"
  },
  {
    "text": "already covered k\nover 2 elements. PROFESSOR: So we want the\nelement with the rank k over 4",
    "start": "2820210",
    "end": "2827570"
  },
  {
    "text": "over these lists. ",
    "start": "2827570",
    "end": "2833646"
  },
  {
    "text": "So I know for sure that what\nI have is either k over 2 or less than k over 2, right?",
    "start": "2833646",
    "end": "2841240"
  },
  {
    "text": "So this is less than\nk over 2, and then I'm looking for a rank of k over 4. ",
    "start": "2841240",
    "end": "2848184"
  },
  {
    "text": "That seems to work. How does the running time look?",
    "start": "2848184",
    "end": "2853540"
  },
  {
    "text": "AUDIENCE: It should\nbe O of log k. AUDIENCE: I think\nit's log [INAUDIBLE].",
    "start": "2853540",
    "end": "2860530"
  },
  {
    "text": " PROFESSOR: So log\nk, log N1 plus N2.",
    "start": "2860530",
    "end": "2872609"
  },
  {
    "text": " Are these different?",
    "start": "2872609",
    "end": "2878619"
  },
  {
    "text": "AUDIENCE: Yes. AUDIENCE: If k is\n1, the algorithm",
    "start": "2878620",
    "end": "2886406"
  },
  {
    "text": "should only recurse once,\neven if N is 20 million. ",
    "start": "2886406",
    "end": "2896220"
  },
  {
    "text": "PROFESSOR: OK. AUDIENCE: But if k is 20\nmillion and the list lengths are",
    "start": "2896220",
    "end": "2901902"
  },
  {
    "text": "two million long, it'll take\napproximately those lengths to run. PROFESSOR: OK.",
    "start": "2901902",
    "end": "2908690"
  },
  {
    "text": "So what gets reduced, aside from\nthe list size, k gets reduced.",
    "start": "2908690",
    "end": "2916420"
  },
  {
    "text": "k seems to define the input\nsize for the next iteration because I'll have at least\nk over 2 elements in one",
    "start": "2916420",
    "end": "2922700"
  },
  {
    "text": "of these buckets. So it sounds like\nit should be log k.",
    "start": "2922700",
    "end": "2928250"
  },
  {
    "start": "2928250",
    "end": "2936120"
  },
  {
    "text": "k is bigger than N1, N2, but\nit should hopefully be smaller than the sum because otherwise,\nwhy am I doing the problem?",
    "start": "2936120",
    "end": "2943740"
  },
  {
    "text": "So this is definitely\norder of N1 plus N2. So this is a bound.",
    "start": "2943740",
    "end": "2949390"
  },
  {
    "text": "This is a slightly\ntighter bound. We have a different\nsolution to the problem. ",
    "start": "2949390",
    "end": "2956945"
  },
  {
    "text": "All the possible solutions\nare hard to argue. They all come down to\nsomething like this. The one that we have\nrequires you to use-- you",
    "start": "2956945",
    "end": "2966070"
  },
  {
    "text": "have two indices, and you know\nthat the sum of the indices is k, and you do binary\nsearch on the top",
    "start": "2966070",
    "end": "2973580"
  },
  {
    "text": "and adjust the\nindex on the bottom to keep the constraint that the\nsum of the two indices in N.",
    "start": "2973580",
    "end": "2980040"
  },
  {
    "text": "And you can look at that in the\nnotes that we're going to post. Are you guys tired?",
    "start": "2980040",
    "end": "2985780"
  },
  {
    "text": "Do you want to look at one\nmore thing, or are we done? AUDIENCE: [INAUDIBLE]. ",
    "start": "2985780",
    "end": "2997370"
  },
  {
    "text": "PROFESSOR: Let's look at\nsomething reasonably easy. You guys can read\nthis on your own.",
    "start": "2997370",
    "end": "3003350"
  },
  {
    "text": "I'm not going to\nbore you with that. ",
    "start": "3003350",
    "end": "3008650"
  },
  {
    "text": "So suppose we have\nsome functions, and we want to\norder them according",
    "start": "3008650",
    "end": "3013990"
  },
  {
    "text": "to their asymptotic growth rate. Do people remember how\nto do this from Pset one?",
    "start": "3013990",
    "end": "3019480"
  },
  {
    "text": "So the idea is that you take\neach function, you simplify it, and then you sort them. So let's have a couple of simple\nones and then some hard ones,",
    "start": "3019480",
    "end": "3028234"
  },
  {
    "text": "and we're going to\nstop in five minutes. ",
    "start": "3028234",
    "end": "3039109"
  },
  {
    "text": "What's this?  AUDIENCE: n to the fourth.",
    "start": "3039110",
    "end": "3044152"
  },
  {
    "text": " PROFESSOR: OK. ",
    "start": "3044153",
    "end": "3049810"
  },
  {
    "text": "Let's see. n choose 3. What is this? AUDIENCE: [INAUDIBLE].",
    "start": "3049810",
    "end": "3055539"
  },
  {
    "text": "PROFESSOR: OK, very good. Why? AUDIENCE: Something about choose\nis n times n minus 1 times",
    "start": "3055539",
    "end": "3061177"
  },
  {
    "text": "n minus 2. AUDIENCE: It's n factorial\nover n minus 2 factorial.",
    "start": "3061177",
    "end": "3067456"
  },
  {
    "text": " PROFESSOR: This comes out\nto be roughly n cubed.",
    "start": "3067456",
    "end": "3073325"
  },
  {
    "text": " Cool. ",
    "start": "3073325",
    "end": "3079569"
  },
  {
    "text": "How about n plus log\nto the fourth of n? ",
    "start": "3079570",
    "end": "3085616"
  },
  {
    "text": "AUDIENCE: N. PROFESSOR: Yep. So even if I have a\npolynomial in a logarithm,",
    "start": "3085616",
    "end": "3092290"
  },
  {
    "text": "it's still dominated by pure n. Now, suppose we want to\norder these guys together",
    "start": "3092290",
    "end": "3099000"
  },
  {
    "text": "with-- which one doesn't\nlook boring at all? n to the log n and 2 to the n.",
    "start": "3099000",
    "end": "3106940"
  },
  {
    "text": " Let's sort them. Which one's the smallest? Which one's the biggest?",
    "start": "3106940",
    "end": "3113394"
  },
  {
    "start": "3113394",
    "end": "3119250"
  },
  {
    "text": "AUDIENCE: 2 to the n is bigger. PROFESSOR: Let's start\nwith the smallest ones,",
    "start": "3119250",
    "end": "3124420"
  },
  {
    "text": "because I think\nthat will be easy. So which one's the absolute\nsmallest out of all these guys?",
    "start": "3124420",
    "end": "3130480"
  },
  {
    "text": "AUDIENCE: n. PROFESSOR: OK. Then? AUDIENCE: n to the third.",
    "start": "3130480",
    "end": "3135960"
  },
  {
    "text": "PROFESSOR: Cubed and fourth. So we have to\ncompare these guys. How do we compare them? ",
    "start": "3135960",
    "end": "3143010"
  },
  {
    "text": "n to the power of log n\nand 2 to the n something. ",
    "start": "3143010",
    "end": "3149984"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE].  PROFESSOR: Take the logs.",
    "start": "3149984",
    "end": "3155860"
  },
  {
    "text": "So when we have something\nconfusing with exponentials, take the logs and\nsee what we get. Logs are monotonic, so\nif you take the logs,",
    "start": "3155860",
    "end": "3162640"
  },
  {
    "text": "you'll have the same\nrelationship afterwards. So log of this is log of\nn to the power of log n,",
    "start": "3162640",
    "end": "3173089"
  },
  {
    "text": "so it's log n times\nlog n, so it's log 2 n.",
    "start": "3173090",
    "end": "3185020"
  },
  {
    "text": "Log of 2 to the n is n. Which one's bigger?",
    "start": "3185020",
    "end": "3191404"
  },
  {
    "text": "AUDIENCE: n. PROFESSOR: All right. ",
    "start": "3191404",
    "end": "3201040"
  },
  {
    "text": "And we're not going\nto solve this, but how would you go\nabout solving this guy? ",
    "start": "3201040",
    "end": "3208839"
  },
  {
    "text": "What do you do to it? AUDIENCE: Sterling. PROFESSOR: Sterling, yep. You do Sterling, you\ngo through the numbers,",
    "start": "3208840",
    "end": "3215270"
  },
  {
    "text": "and you figure out the answer. And then if you have\nto do logarithms, you use logarithms\nto figure out where",
    "start": "3215270",
    "end": "3221390"
  },
  {
    "text": "it belongs among these guys. AUDIENCE: What's Sterling? AUDIENCE: Sterling's formula. It's that gross thing\nthat was on the board",
    "start": "3221390",
    "end": "3227506"
  },
  {
    "text": "before we came in here. PROFESSOR: So Sterling says\nthat n factorial is ugly.",
    "start": "3227506",
    "end": "3234390"
  },
  {
    "start": "3234390",
    "end": "3243029"
  },
  {
    "text": "2 pi n here times n over\ne to the power of n.",
    "start": "3243030",
    "end": "3249440"
  },
  {
    "text": " So what's this binomial?",
    "start": "3249440",
    "end": "3254827"
  },
  {
    "text": "What's the formula for it? ",
    "start": "3254827",
    "end": "3261670"
  },
  {
    "text": "OK, formula for n choose k. Anyone? AUDIENCE: It's n times 1\nover 2 factorial times n",
    "start": "3261670",
    "end": "3268363"
  },
  {
    "text": "minus k factorial.  PROFESSOR: In this\ncase, it's n factorial",
    "start": "3268363",
    "end": "3275410"
  },
  {
    "text": "over n over 2 factorial raised\nto the power of 2, right?",
    "start": "3275410",
    "end": "3280576"
  },
  {
    "text": "And then we chug through the\nmath and get to some answer. ",
    "start": "3280576",
    "end": "3286390"
  },
  {
    "text": "All right? ",
    "start": "3286390",
    "end": "3288455"
  }
]