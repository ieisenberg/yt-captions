[
  {
    "text": " The following content is\nprovided under a Creative Commons license.",
    "start": "0",
    "end": "5310"
  },
  {
    "text": "Your support will help\nMIT OpenCourseWare continue to offer high quality\neducational resources for free.",
    "start": "5310",
    "end": "11610"
  },
  {
    "text": "To make a donation or to\nview additional materials from hundreds of MIT courses,\nvisit MIT OpenCourseWare",
    "start": "11610",
    "end": "18140"
  },
  {
    "text": "at ocw.mit.edu.  INSTRUCTOR: So today, we\nstart on project 4, which is,",
    "start": "18140",
    "end": "27390"
  },
  {
    "text": "as you know, the big project. And Helen is going to do a\nwalkthrough of the project,",
    "start": "27390",
    "end": "35430"
  },
  {
    "text": "and the code, and\nthe organization, because this is a pretty\nbig sized project.",
    "start": "35430",
    "end": "41399"
  },
  {
    "text": "It's got about\n4,500 lines of code. And it's not code that is\nkind of like simple code.",
    "start": "41400",
    "end": "50460"
  },
  {
    "text": "It's all content-bearing code. So I think having a bit\nof an orientation to it,",
    "start": "50460",
    "end": "57630"
  },
  {
    "text": "more than we give for the\nother codes that you work, on which are pretty\nsmall, this will be great.",
    "start": "57630",
    "end": "63670"
  },
  {
    "text": "So, Helen, take it away. HELEN XU: Hi, everyone. Can you hear me?",
    "start": "63670",
    "end": "69445"
  },
  {
    "text": "Awesome, so today we're going\nto be doing the walkthrough for the final project. You can look at the code\nand clone it publicly here.",
    "start": "69445",
    "end": "76050"
  },
  {
    "text": "And please remember to fill up\nyour team's by 7:00 PM today, so we can populate the\nlist and get your repos.",
    "start": "76050",
    "end": "83380"
  },
  {
    "text": "Yeah, and if there are\nany issues accessing this, just let me know. Or put it on Piazza\nand then we can fix it.",
    "start": "83380",
    "end": "90570"
  },
  {
    "text": "So we just had a\ngame of Lesierchess. But in case you\nmissed it, we'll go into more details about\nwhat the game actually does.",
    "start": "90570",
    "end": "97630"
  },
  {
    "text": "So first, we're going to\ngo through the game rules. So you saw that there\nare these pieces.",
    "start": "97630",
    "end": "102960"
  },
  {
    "text": "There's these triangles. And there's kings. So the triangles are pawns. And the kings, they\nlook like crowns.",
    "start": "102960",
    "end": "108320"
  },
  {
    "text": "And there are two teams. There's orange and lavender,\nor tangerine and lavender. And each side starts out with\nseven pawns and one king.",
    "start": "108320",
    "end": "115830"
  },
  {
    "text": "And this is the\nstarting position. So you can see like the\nkings are in the corner. And they're just lined\nup like in the middle.",
    "start": "115830",
    "end": "122040"
  },
  {
    "text": "And each piece has\nfour orientations. So you can see that the pawn\nis up, down, left, right.",
    "start": "122040",
    "end": "129880"
  },
  {
    "text": "And then the king\nis also like that. And in general, the game starts\nwith tangerine moving first.",
    "start": "129880",
    "end": "138599"
  },
  {
    "text": "And then the play alternates\nbetween the two players. Each piece moves the same,\nwhether it's king or pawn.",
    "start": "138600",
    "end": "143612"
  },
  {
    "text": "And each turn has two parts. So you saw the demo. But you move first. When you pick one of your\npieces, and you move first.",
    "start": "143613",
    "end": "149790"
  },
  {
    "text": "And then at the end, your\nKing has to fire the laser. And the laser reflects off\nthe long edge of the pawn.",
    "start": "149790",
    "end": "155280"
  },
  {
    "text": "And they'll kill the pawn if\nit shoots the short edges. And one side wins when\nthe king gets shot,",
    "start": "155280",
    "end": "160470"
  },
  {
    "text": "or when the opposing king gets\nshot, whether by themselves or by your own king.",
    "start": "160470",
    "end": "167107"
  },
  {
    "text": "And so I talked a\nlittle about moving. And at the beginning of each\nturn, the player to move chooses a piece to move.",
    "start": "167107",
    "end": "173340"
  },
  {
    "text": "And you can move your\nKing or any of your pawns. And there are two\ntypes of moves. There's basic moves,\nand swat moves.",
    "start": "173340",
    "end": "180210"
  },
  {
    "text": "And basic moves are just,\nbasically, shifts or rotations. So in the example, you can\nrotate 90, 180, or 270 degrees.",
    "start": "180210",
    "end": "187990"
  },
  {
    "text": "So in the top, row\nyou just rotate. This is the example\nof moving a pawn. So you rotate your pawn.",
    "start": "187990",
    "end": "193290"
  },
  {
    "text": "Or you can move to an\nempty adjacent square. So those are the\nbottom two rows. And there are eight adjacent\nsquares in this example.",
    "start": "193290",
    "end": "199300"
  },
  {
    "text": "So there are eight shifts. But there would\nbe less than eight if you were, for example,\nlike at the edge of the board.",
    "start": "199300",
    "end": "206129"
  },
  {
    "text": "And on a move, you can\neither shift or rotate. But you can't do both. ",
    "start": "206130",
    "end": "212840"
  },
  {
    "text": "There are also these swap loops. So if you're adjacent\nto an opposing piece,",
    "start": "212840",
    "end": "218668"
  },
  {
    "text": "you can switch with them. And then you have to\nmake another basic move after that, that is not a swap. So, basically, you can either--",
    "start": "218668",
    "end": "225518"
  },
  {
    "text": "and it has to be\nwith that same piece that you just swapped with. So you just either\nshift or rotate.",
    "start": "225518",
    "end": "231379"
  },
  {
    "text": "Is everyone good on the rules? ",
    "start": "231380",
    "end": "236570"
  },
  {
    "text": "Just a couple more things. So there's this\nKo rule, which is from Go, which ensures that\nthe game makes progress.",
    "start": "236570",
    "end": "242240"
  },
  {
    "text": "So it makes a move illegal if\nit undoes the opponent's most recent move by just moving\nback to where you just were.",
    "start": "242240",
    "end": "248550"
  },
  {
    "text": " So this is an example. Let's say you're tangerine.",
    "start": "248550",
    "end": "253819"
  },
  {
    "text": "And you swapped with the\npurple one right next to you. And then you shifted\nleft and bottom.",
    "start": "253820",
    "end": "261739"
  },
  {
    "text": "And so lavender can\nreturn by swapping back with your orange piece,\nand shifting again.",
    "start": "261740",
    "end": "269930"
  },
  {
    "text": "But this is actually,\nillegal because now you just got to your\noriginal position. So you're not allowed to just\nkeep cycling back and forth.",
    "start": "269930",
    "end": "277520"
  },
  {
    "text": " And so a draw occurs if there\nhave been 50 moves by each side",
    "start": "277520",
    "end": "284849"
  },
  {
    "text": "without a pawn being\nzapped, the same position repeats itself by\nthe side on move, or the two players\nagree to a draw.",
    "start": "284850",
    "end": "291090"
  },
  {
    "start": "291090",
    "end": "296139"
  },
  {
    "text": "So just kind of like\nin chess, a chess clock limits the amount of time the\nplayers have to make a move. So you can't just keep\ncompeting indefinitely.",
    "start": "296140",
    "end": "302500"
  },
  {
    "text": "When it's your moves,\nyour clock counts down. When it's your opponent's\nmoves, your clock stops.",
    "start": "302500",
    "end": "307780"
  },
  {
    "text": "So it's not counting your time. And we used Fisher time control. There's a picture\nof Bobby Fisher, who made it, up which used an\ninitial time budget and a time",
    "start": "307780",
    "end": "315970"
  },
  {
    "text": "increment. So in this example,\nthere's fis60 and 0.5, which means that,\nin the beginning,",
    "start": "315970",
    "end": "321670"
  },
  {
    "text": "each player has 60 seconds. And you get to use the 60\nseconds however you want. And when you end your move,\nyou get 0.5 extra seconds.",
    "start": "321670",
    "end": "330520"
  },
  {
    "text": "But the 60 and 0.5\ncould be anything. That's just an example. ",
    "start": "330520",
    "end": "338572"
  },
  {
    "text": "So we'll go into an\nexample of how you actually play this game. For a king to zap\nthe enemy king, it risks opening itself\nto counter-attack.",
    "start": "338572",
    "end": "346020"
  },
  {
    "text": "So look at this example. And how can tangerine zap\nthe lavender pawn in F5,",
    "start": "346020",
    "end": "351370"
  },
  {
    "text": "by moving one of its pieces? ",
    "start": "351370",
    "end": "363430"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]  HELEN XU: Move C4. ",
    "start": "363430",
    "end": "371409"
  },
  {
    "text": "AUDIENCE: Tangerine,\nthat's lavender. HELEN XU: You're\ntangerine in this example.",
    "start": "371410",
    "end": "376440"
  },
  {
    "text": "And you're trying to\nzap the one on F5. ",
    "start": "376440",
    "end": "386060"
  },
  {
    "text": "Yep? AUDIENCE: You move the\ntangerine piece at E22 to F1.",
    "start": "386060",
    "end": "393289"
  },
  {
    "text": "HELEN XU: E2 to F1. ",
    "start": "393290",
    "end": "401120"
  },
  {
    "text": "Oh, sorry, by zap, it\nmeans shoot the backside. ",
    "start": "401120",
    "end": "406290"
  },
  {
    "text": "That would shoot the long side. Good point.",
    "start": "406290",
    "end": "412449"
  },
  {
    "text": "Yeah, so you're trying\nto kill the piece on F5. AUDIENCE: [INAUDIBLE]",
    "start": "412450",
    "end": "419330"
  },
  {
    "text": "HELEN XU: Yeah, exactly. So in this, you can move\nC2 to B1, as you just said.",
    "start": "419330",
    "end": "427090"
  },
  {
    "text": "And then you draw the path. And you can see that\nyou've just killed--",
    "start": "427090",
    "end": "434190"
  },
  {
    "text": "or if you're tangerine, you've\njust killed the piece at F5. Now, how can lavender counter? By counter, we mean\nlavender can win",
    "start": "434190",
    "end": "441660"
  },
  {
    "text": "the game from this position. ",
    "start": "441660",
    "end": "449210"
  },
  {
    "text": "AUDIENCE: Is it A4 to A3? ",
    "start": "449210",
    "end": "455460"
  },
  {
    "text": "HELEN XU: A4 to A3. ",
    "start": "455460",
    "end": "460680"
  },
  {
    "text": "No, I don't think so. Yep? AUDIENCE: [INAUDIBLE]",
    "start": "460680",
    "end": "466580"
  },
  {
    "text": "HELEN XU: Sorry, what? King, like the orange one?",
    "start": "466580",
    "end": "472135"
  },
  {
    "text": "Oh, the lavender one.  You're trying to\nshoot the orange king.",
    "start": "472135",
    "end": "479030"
  },
  {
    "text": " Oh, yes, you're right.",
    "start": "479030",
    "end": "485190"
  },
  {
    "text": "You can, actually. Yes, good, that's not\nthe one that we had,",
    "start": "485190",
    "end": "490490"
  },
  {
    "text": "but apparently\nthere are two ways. Good. So if you notice\nyou could also--",
    "start": "490490",
    "end": "496060"
  },
  {
    "text": "that's another way\nto get that path. But you can also move\none of the pawns. ",
    "start": "496060",
    "end": "501569"
  },
  {
    "text": "Cool, so this is\njust pointing out",
    "start": "501570",
    "end": "506830"
  },
  {
    "text": "one of the subtleties of\nthe game, which is you should watch out for\njust naively killing",
    "start": "506830",
    "end": "513309"
  },
  {
    "text": "all the pieces you can,\nbecause that might open you up to the opponent.",
    "start": "513309",
    "end": "519520"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE] HELEN XU: Yes, it can\nbe from any direction.",
    "start": "519520",
    "end": "525233"
  },
  {
    "text": "But the pawns only\ndie if you shoot them from not on the long edge. Yep? AUDIENCE: What if you\nshoot your own block?",
    "start": "525233",
    "end": "532750"
  },
  {
    "text": "HELEN XU: By block,\nyou mean your own pawn? AUDIENCE: Yeah. HELEN XU: You'll die. AUDIENCE: Oh. HELEN XU: Yeah?",
    "start": "532750",
    "end": "538060"
  },
  {
    "text": " AUDIENCE: [INAUDIBLE] ",
    "start": "538060",
    "end": "547000"
  },
  {
    "text": "HELEN XU: Yes, but only one\npiece can be on each square. But you can have\nas many near you.",
    "start": "547000",
    "end": "553450"
  },
  {
    "text": "But do you have a question? AUDIENCE: Can you make it\nimpossible to kill your person?",
    "start": "553450",
    "end": "560120"
  },
  {
    "text": "HELEN XU: Like your King? Like if you barricaded\nit by pawns. But then the opponent can\ncome in and swap with them,",
    "start": "560120",
    "end": "567080"
  },
  {
    "text": "so it will open your barricade. AUDIENCE: Can the purple\nking shoot upward?",
    "start": "567080",
    "end": "573610"
  },
  {
    "text": "HELEN XU: If it wanted to. But then in this example, it\nwould shoot up off the board, and nothing would happen. Yeah?",
    "start": "573610",
    "end": "579703"
  },
  {
    "text": "AUDIENCE: When you kill\na pawn, does the laser stop at the place where\nthe pawn is or does it go through the pawn?",
    "start": "579703",
    "end": "585260"
  },
  {
    "text": "HELEN XU: No, it\njust shoots one. Good questions.",
    "start": "585260",
    "end": "592445"
  },
  {
    "text": "Everyone good so far?  OK, great.",
    "start": "592445",
    "end": "597690"
  },
  {
    "text": "PROFESSOR: This year,\nit shoots only one. Last year, it kept shooting.",
    "start": "597690",
    "end": "603854"
  },
  {
    "text": "AUDIENCE: Can the\nking shoot itself? HELEN XU: Yes. ",
    "start": "603854",
    "end": "609330"
  },
  {
    "text": "It should try not\nto, but it can. So you should be careful. ",
    "start": "609330",
    "end": "621890"
  },
  {
    "text": "So moving on-- we use force\nFosythe-Edwards Notation, which is a representation of a\nchess position using a string.",
    "start": "621890",
    "end": "630290"
  },
  {
    "text": "So you can see an example\nof the starting position. And the bottom\nincludes the string",
    "start": "630290",
    "end": "635888"
  },
  {
    "text": "that describes the\nstarting position.  If you look at the\nrepresentation,",
    "start": "635888",
    "end": "642670"
  },
  {
    "text": "the arrow corresponds\nto one of the rows. And that points to the substring\nthat has a bubble over it.",
    "start": "642670",
    "end": "650860"
  },
  {
    "text": "So in this row, there is\none purple pawn at B3, and two orange\nones at F3 and G3.",
    "start": "650860",
    "end": "659470"
  },
  {
    "text": "So this is row three. And the slashes separate\nthe rows in the string. And the one represents\nthere's an empty space.",
    "start": "659470",
    "end": "666190"
  },
  {
    "text": "And then there's a\npawn facing southeast. And then there's three\nempty spaces, and one facing northwest, and then one\nfacing southeast, and then",
    "start": "666190",
    "end": "673090"
  },
  {
    "text": "an empty space. AUDIENCE: [INAUDIBLE] HELEN XU: Oh, yeah,\nit's animated.",
    "start": "673090",
    "end": "679382"
  },
  {
    "start": "679382",
    "end": "685990"
  },
  {
    "text": "What do you mean?  Yeah, so at the end of the\nstring, there's also a--",
    "start": "685990",
    "end": "694560"
  },
  {
    "text": "it just tells you which\nside's move it is. So this is the opening position. But you can use any\nposition in this notation.",
    "start": "694560",
    "end": "702550"
  },
  {
    "text": "And this is useful\nfor debugging, because if you, for example,\nyou're running a bot, and it crashes at some position. And you can get back\nto that position.",
    "start": "702550",
    "end": "709110"
  },
  {
    "text": "You can start up\nthe game and just go there without having to make\nall the moves to get there. ",
    "start": "709110",
    "end": "719783"
  },
  {
    "text": "And this is how you\nrepresent the games. So each of these is one move. And the left column\nis tangerine.",
    "start": "719783",
    "end": "727330"
  },
  {
    "text": "And the right\ncolumn is lavender. And an example,\nyou can see E6, E7,",
    "start": "727330",
    "end": "733090"
  },
  {
    "text": "means they moved a\npiece from E6 to E7. B3L, so you rotated\nthe piece on B3 left.",
    "start": "733090",
    "end": "742390"
  },
  {
    "text": "There's D5, E4, F5, which\nmeans that you swapped. So your original\npiece was on D5.",
    "start": "742390",
    "end": "748180"
  },
  {
    "text": "You swapped with the one at E4. And now you moved\nthat piece to F5. So the one that was\nE4 is now on F5.",
    "start": "748180",
    "end": "756240"
  },
  {
    "text": "And the opposing piece is now\non D5, because you swapped. ",
    "start": "756240",
    "end": "761900"
  },
  {
    "text": "You can swap and then rotate. So instead of just\nhaving a third square, you would just have a rotation.",
    "start": "761900",
    "end": "768620"
  },
  {
    "text": "And at the end, you\ncould see who won. So in this one, lavender\none because it's 0-1. But 1-0 would mean\ntangerine wins.",
    "start": "768620",
    "end": "775393"
  },
  {
    "text": "And half and half\nwould be a draw.  So you can look at the\nlogs for your games.",
    "start": "775393",
    "end": "782449"
  },
  {
    "text": "Yes? AUDIENCE: [INAUDIBLE] ",
    "start": "782450",
    "end": "787983"
  },
  {
    "text": "HELEN XU: There's a\nrotate up and rotate down.  AUDIENCE: [INAUDIBLE]\ndo a U-turn?",
    "start": "787983",
    "end": "795300"
  },
  {
    "text": "HELEN XU: Oh, is that what U is? AUDIENCE: Yeah, U-turn. HELEN XU: Oh I, see because\nthere's only three rotations.",
    "start": "795300",
    "end": "801780"
  },
  {
    "text": "Yes, sorry, so left is 90. Then right is 270. And U is 180,\nbecause you flip it.",
    "start": "801780",
    "end": "807680"
  },
  {
    "start": "807680",
    "end": "814420"
  },
  {
    "text": "Is everyone good\non the notation? This is just how you\ndescribe the games, if you wanted to\nlook at your logs, and if there are some issues.",
    "start": "814420",
    "end": "820620"
  },
  {
    "text": " So you can test your bot with\nother teams in the class,",
    "start": "820620",
    "end": "826050"
  },
  {
    "text": "as well as with staff bots\non the scrimmage server. And we have a reference,\nwhich is here, which",
    "start": "826050",
    "end": "831899"
  },
  {
    "text": "is just the additional release. But we will be optimizing\nour bots while we're optimizing your bots.",
    "start": "831900",
    "end": "837470"
  },
  {
    "text": "And we'll release a reference\nplus, and maybe an even better one later, which you can play\nwith on the scrimmage sever.",
    "start": "837470",
    "end": "842680"
  },
  {
    "text": "So I'll just do a\nreally quick demo. So right now, since we haven't\ndone the team formation yet,",
    "start": "842680",
    "end": "849029"
  },
  {
    "text": "you are not able\nto log into this. But once you do your\nteam formation, probably by tomorrow, you'll\nbe able to log in.",
    "start": "849030",
    "end": "855000"
  },
  {
    "text": "And, basically, you can see\nthe general functionality. So this updates your\nplayer, pulls your player from your repo, whatever's\non the master branch.",
    "start": "855000",
    "end": "863380"
  },
  {
    "text": "And then right now,\nthere's only reference, and reference plus,\nand reference TAs. And here's a team\nwith me and Jess.",
    "start": "863380",
    "end": "870480"
  },
  {
    "text": "But later on, we'll\npopulate this list with everyone in the class. And then you can\nchallenge anybody else in the class to see how you do.",
    "start": "870480",
    "end": "876910"
  },
  {
    "text": "You can also challenge us. So you would just\npick, for example, let's say I wanted to\nchallenge reference.",
    "start": "876910",
    "end": "883020"
  },
  {
    "text": "And then a hit send challenge. Now, you can see that there's\nsome new matches spawned.",
    "start": "883020",
    "end": "888220"
  },
  {
    "text": "And this is how I look at all\nthe matches that I've played. So each time you\nhit send challenge, it spawns off two games,\none where you're tangerine,",
    "start": "888220",
    "end": "894960"
  },
  {
    "text": "and one you're lavender.  So that's how you can watch\nthe matches on the scrimmage",
    "start": "894960",
    "end": "900660"
  },
  {
    "text": "server.  Everyone good? ",
    "start": "900660",
    "end": "911683"
  },
  {
    "text": "I'm going to move on so\ndon't run out of town.  You can watch them later.",
    "start": "911683",
    "end": "918500"
  },
  {
    "text": "And you can even play your own. ",
    "start": "918500",
    "end": "930270"
  },
  {
    "text": "OK.  And, in addition to\nthe scrimmage server--",
    "start": "930270",
    "end": "935870"
  },
  {
    "text": "so the scrimmage\nserver, you can only spawn off one game at a time. But you can do more. And you don't have\nto necessarily do it",
    "start": "935870",
    "end": "942290"
  },
  {
    "text": "on your master branch,\nor against opposing teams in the class. So there's something called the\nCloud autotester, which you can",
    "start": "942290",
    "end": "948860"
  },
  {
    "text": "run by going to your Athena. And then you type\nin this command. You do autotest run. And then you do\nthe time control.",
    "start": "948860",
    "end": "955388"
  },
  {
    "text": "And you give it a number of\ngames that you want to run. And then you give it\na list of binaries. So I'll go into each of\nthese in more detail.",
    "start": "955388",
    "end": "961590"
  },
  {
    "text": "So the time control is just what\nI talked about earlier, which is if you use Fisher time\ncontrol, these are some set,",
    "start": "961590",
    "end": "967550"
  },
  {
    "text": "preset things. So you would type in one\nof the preset things. So you would talk in blitz to\ndo 60 and 0.5, for example.",
    "start": "967550",
    "end": "974630"
  },
  {
    "text": "And the number of games is\njust whatever you want to do. And the list of\nbinaries-- so let's say you had a\nreference invalidation,",
    "start": "974630",
    "end": "981800"
  },
  {
    "text": "and then you made some change. So I called it\nLesierchess with changes. And then you would\njust put those",
    "start": "981800",
    "end": "987800"
  },
  {
    "text": "after the number of games,\nseparated by spaces. And then it would\nupload your binaries, and play them in the\ncloud auto tester.",
    "start": "987800",
    "end": "994130"
  },
  {
    "text": "And once you submit your\njob, you get a link. And you follow the\nlink in your browser.",
    "start": "994130",
    "end": "999200"
  },
  {
    "text": "And you can view\nthe game running. And then after the\ngames are done, you will get some output saying\nlike, which bot, one more?",
    "start": "999200",
    "end": "1005949"
  },
  {
    "text": "And how many times have\nwon, and some rankings. Yep?",
    "start": "1005950",
    "end": "1012181"
  },
  {
    "text": "AUDIENCE: How fast do they run? HELEN XU: How fast do they run?",
    "start": "1012181",
    "end": "1017200"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] ",
    "start": "1017200",
    "end": "1024550"
  },
  {
    "text": "HELEN XU: So it depends on\nhow many other games are queued at the same time. So if a lot of people\nare running tests,",
    "start": "1024550",
    "end": "1029579"
  },
  {
    "text": "it might take some time. But blitz is just how long\nthe game itself will take. And it might take\nlonger than 60 seconds,",
    "start": "1029579",
    "end": "1035439"
  },
  {
    "text": "because if you use less than\n0.5 seconds in your move, and then you add 0.5 seconds\nat the end of the move,",
    "start": "1035440",
    "end": "1042189"
  },
  {
    "text": "then you would\nincrease your time. But 60 is just the time control.",
    "start": "1042190",
    "end": "1049630"
  },
  {
    "text": "Each side starts\nwith 60 seconds. And depending on how they use\nit, they have more or less. Good question.",
    "start": "1049630",
    "end": "1054820"
  },
  {
    "start": "1054820",
    "end": "1060220"
  },
  {
    "text": "Well, I'll keep going. And if there's time at the end,\nI'll do a demo of this one too. But it basically looks the\nsame as the scrimmage server.",
    "start": "1060220",
    "end": "1066190"
  },
  {
    "text": "Like, you just watch the\ngames in the same way.  So now, I'm going to go into\nthe project organization, which",
    "start": "1066190",
    "end": "1073030"
  },
  {
    "text": "is the organization\nof the directories that we handed out in this repo. So there are some directories.",
    "start": "1073030",
    "end": "1078100"
  },
  {
    "text": "The first one is doc,\nwhich just includes the rules and documentation\nfor the interface. There's the auto tester, which\nis the Java local auto tester.",
    "start": "1078100",
    "end": "1085840"
  },
  {
    "text": "So if the cloud-- we recommend that you run tests\nusing the cloud auto tester. But if there's some small\nchange, or if you think that--",
    "start": "1085840",
    "end": "1095730"
  },
  {
    "text": "if the cue is too long,\nthen you can do local tests. And you can also\nrun these overnight.",
    "start": "1095730",
    "end": "1101530"
  },
  {
    "text": "There's pgnstates, which\njust parses your statistics from the auto test results,\nlike how many times you won, stuff like that.",
    "start": "1101530",
    "end": "1107860"
  },
  {
    "text": "There's tests, which is\nhow you specify tests. And I'll go into more detail\nabout how you define this.",
    "start": "1107860",
    "end": "1114627"
  },
  {
    "text": "There's the player, which\nis where you're actually going to be optimizing. So player is the\ncode that actually",
    "start": "1114627",
    "end": "1119860"
  },
  {
    "text": "runs the bot to play the game. And the webgui is a local webgui\nwhere you can watch the game",
    "start": "1119860",
    "end": "1124960"
  },
  {
    "text": "and play it. So in the webgui, you can even\nplay it yourself as a human so you can get a better\nsense of how the game works.",
    "start": "1124960",
    "end": "1131270"
  },
  {
    "text": " To go into more detail,\nthe Java local auto tester is an auto tester.",
    "start": "1131270",
    "end": "1137080"
  },
  {
    "text": " You can make your changes, and\nthen you can test your changes.",
    "start": "1137080",
    "end": "1142690"
  },
  {
    "text": "And the test directory, which is\nparallel, holds configurations. So you can specify the\nnumber of games and the bots",
    "start": "1142690",
    "end": "1149260"
  },
  {
    "text": "that you want to use,\nand the time control, and other things too. So this an example\nof the configuration",
    "start": "1149260",
    "end": "1154600"
  },
  {
    "text": "file that you would use\nto run your auto tester. So this is saying that\nyou run it on 12 CPUs. And book means that\nyou're pointing",
    "start": "1154600",
    "end": "1160750"
  },
  {
    "text": "to open a book, which\nI'll talk about later. Game rounds is how many games\nyou're going to spawn off.",
    "start": "1160750",
    "end": "1166140"
  },
  {
    "text": "Title is just the title of\nthe test that you're running. And after that, you have\nthe player definitions. So player reference\nis just the binary.",
    "start": "1166140",
    "end": "1173860"
  },
  {
    "text": "And invoke is the\npath to the binary. And then fis is\nthe time control.",
    "start": "1173860",
    "end": "1179770"
  },
  {
    "text": "And the next one is\njust a second binary, if you made a change and\nyou want to test them. ",
    "start": "1179770",
    "end": "1187470"
  },
  {
    "text": "Yeah, that's the binary. ",
    "start": "1187470",
    "end": "1192600"
  },
  {
    "text": "To interface with auto\ntester, Lesierchess uses the universal\nchest interface, or UCI,",
    "start": "1192600",
    "end": "1197730"
  },
  {
    "text": "which is a communication\nprotocol for automatic games. And you pass information between\nthe auto tester and your bot.",
    "start": "1197730",
    "end": "1203100"
  },
  {
    "text": "And it allows the programmer\nor the auto tester to enter moves to\nthe game engine. So you could use UCI\nto start up your bot.",
    "start": "1203100",
    "end": "1210059"
  },
  {
    "text": "And then you type in\nthe moves that you want to make to see the\nchanges in the state. And you could use this to\ndebug to get to a state",
    "start": "1210060",
    "end": "1216420"
  },
  {
    "text": "that you want to look at. ",
    "start": "1216420",
    "end": "1221570"
  },
  {
    "text": "We'll measure the bots\nusing Elo ratings. So Elo is a rating system\nthat measures relative skill",
    "start": "1221570",
    "end": "1226880"
  },
  {
    "text": "level in zero sum games. The Elo rating depends on the\nElo rating of your opponents.",
    "start": "1226880",
    "end": "1232550"
  },
  {
    "text": "And on the bottom, you\ncan see an example output. So I had three binaries.",
    "start": "1232550",
    "end": "1238040"
  },
  {
    "text": "And I ran about 100 games. And you can see that\nthe Elo of the top one",
    "start": "1238040",
    "end": "1243710"
  },
  {
    "text": "is much higher than\nthe other ones. And so higher Elo is good. And we'll be comparing\nthe performance.",
    "start": "1243710",
    "end": "1250490"
  },
  {
    "text": "We'll be comparing the Elo of\nyour bot against our reference, and improved reference\nimplementations.",
    "start": "1250490",
    "end": "1256520"
  },
  {
    "text": "So notice that this\nis not, as before, just a straight measure of time.",
    "start": "1256520",
    "end": "1261679"
  },
  {
    "text": "So like before, in\nprevious projects, if you used less time,\nthan you would get a higher",
    "start": "1261680",
    "end": "1267170"
  },
  {
    "text": "grade or better performance. In general, I'll show\nyou a graph later that actually shows if\nyou searched the higher",
    "start": "1267170",
    "end": "1272477"
  },
  {
    "text": "depth, which means that you\nare faster, you do improve. But it's not an\nexact correlation. And you can look at\nthe nodes per second",
    "start": "1272477",
    "end": "1279290"
  },
  {
    "text": "that you search using the UCI. ",
    "start": "1279290",
    "end": "1285730"
  },
  {
    "text": "And just above here, to local\nwebgui lets you watch a game, or play one, without sending\nit to the scrimmage server.",
    "start": "1285730",
    "end": "1291100"
  },
  {
    "text": "So if you wanted to\nplay one as a human, you would use the local webgui. And you can run it using\nthe commands in the readme.",
    "start": "1291100",
    "end": "1298610"
  },
  {
    "text": "OK, so is everyone good so far? Now, I'm going to go into more\ndetails about how you actually",
    "start": "1298610",
    "end": "1303670"
  },
  {
    "text": "play the game. ",
    "start": "1303670",
    "end": "1309580"
  },
  {
    "text": "So first, every\nplayer, or every bot, needs to generate\nthe moves, which means that once you\nhave a position,",
    "start": "1309580",
    "end": "1315970"
  },
  {
    "text": "you need to look at the\nmoves that you can do. And to do that, you need a\nboard representation, which",
    "start": "1315970",
    "end": "1321070"
  },
  {
    "text": "is to represent what\npieces are on the board, and how big the board is,\nand where the pieces are.",
    "start": "1321070",
    "end": "1326290"
  },
  {
    "text": "And the reference implantation\nuses a 16 by 16 board to store an 8 by 8 board.",
    "start": "1326290",
    "end": "1331300"
  },
  {
    "text": "So you can see that the inner\nsquares is actually the board. And the outer dark\nsquare is sentinels.",
    "start": "1331300",
    "end": "1336940"
  },
  {
    "text": "So you use sentinels\nto keep track of when you go off the board. And then the inner square\nis just the actual board.",
    "start": "1336940",
    "end": "1341980"
  },
  {
    "text": " We store the position\nusing this struct. So you can see the fields in the\nposition, which are the board.",
    "start": "1341980",
    "end": "1351010"
  },
  {
    "text": "And the array size\nis just representing the board, plus the sentinels. And there's the history\nof the position,",
    "start": "1351010",
    "end": "1356450"
  },
  {
    "text": "which is, how did we get here? And there's a key, which is\na hash key for this position. There is ply, which tells\nyou what side it is.",
    "start": "1356450",
    "end": "1363549"
  },
  {
    "text": "So even means white. And odd means black. There is, what was\nthe last move that was made to get to this position?",
    "start": "1363550",
    "end": "1369929"
  },
  {
    "text": "There's a victim struct,\nwhich is the pieces destroyed by when you shot the laser.",
    "start": "1369930",
    "end": "1375030"
  },
  {
    "text": "And there is the\nlocation of the kings. The position struct\nand Lesierchess struct",
    "start": "1375030",
    "end": "1380102"
  },
  {
    "text": "stores the border\npresentation and other things that I just went through. ",
    "start": "1380102",
    "end": "1387870"
  },
  {
    "text": "So I talked about this move,\nwhich means just like a move",
    "start": "1387870",
    "end": "1393030"
  },
  {
    "text": "that you make for\none of your pieces. And I'll go into how\nit's represented. So right now, we already\ndo the packing for you.",
    "start": "1393030",
    "end": "1399390"
  },
  {
    "text": "So we use 28 bits. And the first two\nare the piece type.",
    "start": "1399390",
    "end": "1405419"
  },
  {
    "text": "So there's a number of\nmoves that you can make. And the first two bits\nrepresents the piece type,",
    "start": "1405420",
    "end": "1411300"
  },
  {
    "text": "which is empty, pawn,\nking, or invalid. The orientation of\nthe piece, which",
    "start": "1411300",
    "end": "1416670"
  },
  {
    "text": "is just how you rotated it. The from square, which is where\nyour piece already started.",
    "start": "1416670",
    "end": "1424177"
  },
  {
    "text": "There's the intermediate\nsquare, which is used when you do a swap. And there's a two square,\nwhich is the final position",
    "start": "1424177",
    "end": "1430770"
  },
  {
    "text": "that your piece will end up in. So if you're not doing a swap,\nthen the intermediate and from",
    "start": "1430770",
    "end": "1435780"
  },
  {
    "text": "should be the same. But if you are doing\na swap, then there's some skipping that happens. ",
    "start": "1435780",
    "end": "1443049"
  },
  {
    "text": "At each turn, you\nneed to see what moves you could possibly make. And in move gen, which is one\nof the files in the handout,",
    "start": "1443050",
    "end": "1450520"
  },
  {
    "text": "we generate all the\nmoves, given a position, depending on whose turn it is. So depending on\nwhose turn it is, you can make different moves.",
    "start": "1450520",
    "end": "1456332"
  },
  {
    "text": "And in the reference\nimplantation, we iterate through\nthe entire board. And once we find a piece,\nwe generate all the moves",
    "start": "1456333",
    "end": "1462430"
  },
  {
    "text": "from that piece.  You can also debug\nusing move generation.",
    "start": "1462430",
    "end": "1468560"
  },
  {
    "text": "So there's something\ncalled perft, which is a debugging\nfunction that enumerates",
    "start": "1468560",
    "end": "1473600"
  },
  {
    "text": "all moves at a certain depth. So use perft to make sure that\nif you make changes to the move generation that\nyou're generating",
    "start": "1473600",
    "end": "1479205"
  },
  {
    "text": "the same number of moves. And if you modify\nthe move generated, just make sure that\nit returns the same,",
    "start": "1479205",
    "end": "1484429"
  },
  {
    "text": "because regardless\nof what optimizations you do, you still should see the\nsame moves from each position that you can possibly make.",
    "start": "1484430",
    "end": "1489860"
  },
  {
    "start": "1489860",
    "end": "1498500"
  },
  {
    "text": "OK, so now that we talked\nabout move generation, I'll talk about how you\ntell that a move is good.",
    "start": "1498500",
    "end": "1503960"
  },
  {
    "text": "And for that, we use something\ncalled static evaluation. So we use static\nevaluation to determine",
    "start": "1503960",
    "end": "1509505"
  },
  {
    "text": "which positions are\nbetter than others, and which moves\nthat we should make. And the function eval,\nwhich is in eval.c,",
    "start": "1509505",
    "end": "1516590"
  },
  {
    "text": "generate a score\nbased on a position, using some heuristics. And at first, we suggest,\ninstead of making up",
    "start": "1516590",
    "end": "1523203"
  },
  {
    "text": "your own heuristics,\nwe suggest focusing on optimizing the existing\nstructs and evaluation",
    "start": "1523203",
    "end": "1528290"
  },
  {
    "text": "heuristics before\ncoming up with new ones, because it's kind of hard\nto come up with new ones. And there's a lot\nof optimizations",
    "start": "1528290",
    "end": "1533420"
  },
  {
    "text": "that you can make to\nthe existing ones. ",
    "start": "1533420",
    "end": "1539460"
  },
  {
    "text": "So I've just grouped\nthese into categories. So there's a few\nregarding the king. So there's one\ncalled KFACE, which",
    "start": "1539460",
    "end": "1544610"
  },
  {
    "text": "is a bonus for your king\nfacing the enemy king. There's KAGGRESSIVE,\nwhich gives you a bonus for if\nyour King is closer",
    "start": "1544610",
    "end": "1550549"
  },
  {
    "text": "to the center of the board. And there's MOBILITY,\nwhich counts up, basically, how many squares around\nyour king are free.",
    "start": "1550550",
    "end": "1557840"
  },
  {
    "text": "You want to be able to\nmove your king freely. And there's some\nregarding pawns.",
    "start": "1557840",
    "end": "1563570"
  },
  {
    "text": "So there's PCENTRAL, which gives\nyou a bonus if your pawns are in the center of the board. And there's PBETWEEN, which\nbasically draw a bounding box",
    "start": "1563570",
    "end": "1571550"
  },
  {
    "text": "with both kings at the corner. And then you count\nhow many pawns are in the center of those. ",
    "start": "1571550",
    "end": "1579400"
  },
  {
    "text": "And then there's points\nbased on distance. So there's LCOVERAGE, which\nmeans laser coverage, which",
    "start": "1579400",
    "end": "1585460"
  },
  {
    "text": "is basically you make all\nthe possible moves that you can make from your position. And then you draw\nthe laser path.",
    "start": "1585460",
    "end": "1591880"
  },
  {
    "text": "And then you do some\nscaling to determine how well you can\npossibly cover the board,",
    "start": "1591880",
    "end": "1597608"
  },
  {
    "text": "based on your current position.  So that's basically how you tell\nif a position is good or not,",
    "start": "1597608",
    "end": "1604799"
  },
  {
    "text": "with these heuristics. ",
    "start": "1604800",
    "end": "1610020"
  },
  {
    "text": "So I'll just go through the\nhigh level of how you actually play the game using search. ",
    "start": "1610020",
    "end": "1617640"
  },
  {
    "text": "So at the very\nhighest level, there's something called game\nsearch trees, which is we've invented in search.c.",
    "start": "1617640",
    "end": "1622873"
  },
  {
    "text": "But, basically, this\nis a representation of how you play the game. At the top, there's\nan orange square,",
    "start": "1622873",
    "end": "1628050"
  },
  {
    "text": "which is the orange side,\nwhich is the opening position, and then the arrows.",
    "start": "1628050",
    "end": "1633900"
  },
  {
    "text": "So the top square-- actually, all the nodes\nare positions in the tree.",
    "start": "1633900",
    "end": "1639180"
  },
  {
    "text": "And you use move generation\nthat I just talked about, to enumerate all the possible\nmoves from a single position.",
    "start": "1639180",
    "end": "1645690"
  },
  {
    "text": "And each edge is a move. So to get from position\nto position, you do moves.",
    "start": "1645690",
    "end": "1650790"
  },
  {
    "text": "And you can see that\ncircle is the position after you've made the move.",
    "start": "1650790",
    "end": "1657450"
  },
  {
    "text": "And you do this tree\nto some depth d. And then you do static\nevaluation of the leaves.",
    "start": "1657450",
    "end": "1665000"
  },
  {
    "text": "So this is at a really high\nlevel how game playing programs actually play the game. They enumerate all\nthe possible moves.",
    "start": "1665000",
    "end": "1670750"
  },
  {
    "text": "And then they have a position. And then they pick which one\nis best, based on evaluation. But you can see that\nthere's a lot of nodes.",
    "start": "1670750",
    "end": "1676357"
  },
  {
    "text": "Like, if you do this\nnaively, there'd be number of moves raised to\nd, which is a huge number,",
    "start": "1676358",
    "end": "1683060"
  },
  {
    "text": "and too many to generate. So we're going to talk about\nhow you reduce those later. ",
    "start": "1683060",
    "end": "1689720"
  },
  {
    "text": "There's something that you have\nto do on search series, which is called Quiescence\nsearch, which is if you fix your depth--",
    "start": "1689720",
    "end": "1697399"
  },
  {
    "text": "let's say you fix depth, and\nthen you go down to the leaves,",
    "start": "1697400",
    "end": "1702430"
  },
  {
    "text": "and you just captured a piece. But it's dangerous to just\nstop there at fixed depth, because maybe if you\nsearched one level deeper,",
    "start": "1702430",
    "end": "1709510"
  },
  {
    "text": "you would see that the opponent\nwould capture your piece. And so if you do\nyour search, and you",
    "start": "1709510",
    "end": "1714590"
  },
  {
    "text": "see that you capture\na piece at the leaves, or your opponent captures the\npiece at the leaves, we say, that's not quiet.",
    "start": "1714590",
    "end": "1719618"
  },
  {
    "text": "And you keep searching\nthe tree until there are no more captures. So that's called\nQuiescence search, because you quiet the position.",
    "start": "1719618",
    "end": "1726037"
  },
  {
    "text": "And that's implemented\nin the search column. ",
    "start": "1726037",
    "end": "1731190"
  },
  {
    "text": "So this is a graph\nthat I generated by doing the reference\nspot to different depths.",
    "start": "1731190",
    "end": "1736860"
  },
  {
    "text": "And you can see that\nthe Elo increases as you increase the search depth. So you just search\nthe search tree.",
    "start": "1736860",
    "end": "1743420"
  },
  {
    "text": "And so if you optimize\nyour bot to make it faster, you can search deeper, which\nmeans that you'll do better.",
    "start": "1743420",
    "end": "1749330"
  },
  {
    "start": "1749330",
    "end": "1756320"
  },
  {
    "text": "So next, I'll talk about\nmin-max search, which is a more complex\nversion of searching",
    "start": "1756320",
    "end": "1766380"
  },
  {
    "text": "that can improve the amount\nof nodes you have to evaluate. So at a high level, there's\ntwo players, max and min.",
    "start": "1766380",
    "end": "1774063"
  },
  {
    "text": "And in our example,\nthere's orange and purple. And orange is a square. And purple is a circle. And the game trees\nrepresents all moves",
    "start": "1774063",
    "end": "1780690"
  },
  {
    "text": "from the current position from\na given ply, which means depth. And if the leaves,\nlike I said, you",
    "start": "1780690",
    "end": "1786330"
  },
  {
    "text": "play a static\nevaluation function. And max chooses the maximum\nscore among its children. And min chooses\nthe minimum score.",
    "start": "1786330",
    "end": "1792277"
  },
  {
    "text": "So one side is\ntrying to maximize, and one side is\ntrying to minimize. ",
    "start": "1792277",
    "end": "1798460"
  },
  {
    "text": "To evaluate the\nsearch try, I'll first talk about an algorithm\ncalled alpha beta, which is that each search from a\nnode has a window alpha beta.",
    "start": "1798460",
    "end": "1806440"
  },
  {
    "text": "And if the value of the\nsearch falls below alpha, the move is not good enough,\nand you keep searching. And if the value falls\nwithin alpha and beta,",
    "start": "1806440",
    "end": "1813878"
  },
  {
    "text": "then you increase your alpha,\nwhich is the lower bound, and you keep searching,\nbecause you know you can do at least that well.",
    "start": "1813878",
    "end": "1818890"
  },
  {
    "text": "And if the value of the\nsearch falls above beta, than you generate a\nbeta cut off in return.",
    "start": "1818890",
    "end": "1824440"
  },
  {
    "text": "Beta basically means one\nside is trying to maximize, and one side is\ntrying to minimize. So beta is basically\nsaying, the opponent",
    "start": "1824440",
    "end": "1830950"
  },
  {
    "text": "would never let you do that\nmove, because it'd be too good. So you don't need to keep\nsearching there, because you're",
    "start": "1830950",
    "end": "1835995"
  },
  {
    "text": "not going to get there anyway. So I'll do an example. Let's say you have this tree.",
    "start": "1835995",
    "end": "1841840"
  },
  {
    "text": "And if max discovered a\nmove that min wouldn't let you do, because\nit's too good,",
    "start": "1841840",
    "end": "1847670"
  },
  {
    "text": "then max's other\nchildren don't need to be searched, which is\nwhat a beta cut off is. So you'd start at the root.",
    "start": "1847670",
    "end": "1853780"
  },
  {
    "text": "And then you go down to\nthe lowest left leaf. And you see that it's three.",
    "start": "1853780",
    "end": "1860060"
  },
  {
    "text": "So you propagate three up. And then you can see\nthat in this sub-tree, you can do at least three.",
    "start": "1860060",
    "end": "1866200"
  },
  {
    "text": "And then you keep\nsearching your children. And then you see six. And then you say, OK, now\nyou update your alpha value",
    "start": "1866200",
    "end": "1872440"
  },
  {
    "text": "to be six. Now, you search four. But four is worse than six.",
    "start": "1872440",
    "end": "1878554"
  },
  {
    "text": "So you don't have\nto do anything. So you first search\nthe leftmost subtree. And then you see the best\nmove that you could possibly",
    "start": "1878555",
    "end": "1885210"
  },
  {
    "text": "make there. So you propagate\nsix up to the root.",
    "start": "1885210",
    "end": "1891810"
  },
  {
    "text": "And then you search\nyour other subtrees. But now, you have\nthis value of six that you basically use\nin the other subtrees.",
    "start": "1891810",
    "end": "1898779"
  },
  {
    "text": "So you look at two. And you see that two\nis less than six. So you propagate it up.",
    "start": "1898780",
    "end": "1904190"
  },
  {
    "text": "But now, you look at nine. And you see that nine\nis greater than six. So you say that this subtree\nwould let purple do nine,",
    "start": "1904190",
    "end": "1912780"
  },
  {
    "text": "which is greater than six. And so that would be too good,\nbecause orange would never",
    "start": "1912780",
    "end": "1920100"
  },
  {
    "text": "let purple do that well. So you don't have to\nevaluate five anymore. So you cut off five.",
    "start": "1920100",
    "end": "1926235"
  },
  {
    "text": "Does that make sense?  OK, so, basically, now\nyou apply the same thing",
    "start": "1926235",
    "end": "1933580"
  },
  {
    "text": "to the regular subtree. And you look at seven. And you see that seven\nis greater than six. So you propagate that up.",
    "start": "1933580",
    "end": "1939208"
  },
  {
    "text": "And now you're done, because\nseven is greater than six. So you don't have to search\nthe rest of the subtree.",
    "start": "1939208",
    "end": "1944810"
  },
  {
    "text": "So that's how you evaluate fewer\nmoves than the entire tree. ",
    "start": "1944810",
    "end": "1955289"
  },
  {
    "text": "And there's a theorem\nthat says for a game tree with branching factor b and\ndepth d, and alpha beta search",
    "start": "1955290",
    "end": "1961220"
  },
  {
    "text": "with moves searched\nin best-first order examines exactly b\nraised to the d over 2,",
    "start": "1961220",
    "end": "1966470"
  },
  {
    "text": "plus b raised to the d over\n2 minus 1 nodes apply d. So best first order means that\nyou sorted the moves in terms",
    "start": "1966470",
    "end": "1973760"
  },
  {
    "text": "of your static evaluation.  The naive algorithm\nexamines b to the d nodes.",
    "start": "1973760",
    "end": "1980679"
  },
  {
    "text": "And in the example I did,\nyou can see how you prune. And for the same work, the\nsearch stuff is doubled.",
    "start": "1980680",
    "end": "1986427"
  },
  {
    "text": "And for the same depth,\nthe work is square rooted. So this is a huge benefit\nover the naive evaluation.",
    "start": "1986427",
    "end": "1993846"
  },
  {
    "text": "Is everyone good on alpha beta? ",
    "start": "1993846",
    "end": "1999890"
  },
  {
    "text": "Great, so the code\nis pretty short. So I'll just go through\nsome pseudocode for it.",
    "start": "1999890",
    "end": "2005610"
  },
  {
    "text": "Basically, the main\npoint is that at line 11, one side is trying to\nminimize and one side is trying to maximize.",
    "start": "2005610",
    "end": "2011152"
  },
  {
    "text": "But if you negate, then\nthat's just the same as minimizing and maximizing. And you get all\nthe possible moves",
    "start": "2011152",
    "end": "2018360"
  },
  {
    "text": "that you could possibly\nmake using gen moves. And you go through\nthe entire move list. And then you make\neach of the children.",
    "start": "2018360",
    "end": "2024720"
  },
  {
    "text": "And you search for the score. And then you see whether\nyou had a beta cut off.",
    "start": "2024720",
    "end": "2029820"
  },
  {
    "text": "And then you don't need to\nsearch the subtree If you did. ",
    "start": "2029820",
    "end": "2040159"
  },
  {
    "text": "So that was basic alpha beta. And we actually implement a\nvariation of alpha beta called principle variation search.",
    "start": "2040160",
    "end": "2046072"
  },
  {
    "text": "And the main idea is that you\nassume that the first move is the best one. And you run scout search, which\nis also called zero window",
    "start": "2046072",
    "end": "2053739"
  },
  {
    "text": "search, on the remaining moves\nto verify that they're worse. So in this example, you,\nagain, search the most leftmost",
    "start": "2053739",
    "end": "2059879"
  },
  {
    "text": "subtree. And you see that the best you\ncan do in the left-most subtree is three. And you evaluate the\nones to the right",
    "start": "2059880",
    "end": "2067030"
  },
  {
    "text": "of it using scout search,\nwhich is not a full search. You're basically\nassuming that you",
    "start": "2067030",
    "end": "2073340"
  },
  {
    "text": "can do no better than three. And then now you're kind of\ndoing an initial search to see whether or not that's true.",
    "start": "2073340",
    "end": "2080489"
  },
  {
    "text": "And see you see that\nsome of them are-- the one after that is seven.",
    "start": "2080489",
    "end": "2086532"
  },
  {
    "text": "The first one after\nthat is seven. And the one after that in\nthe other subtree is six. ",
    "start": "2086532",
    "end": "2094600"
  },
  {
    "text": "So then you can prune them,\nbecause those are better-- because you know\nalready in those",
    "start": "2094600",
    "end": "2100630"
  },
  {
    "text": "subtrees that you can\ndo better than three. So you don't have to\nkeep evaluating them.",
    "start": "2100630",
    "end": "2106119"
  },
  {
    "text": "And you don't have to-- yeah? AUDIENCE: How do we know\nthe score of the subtree before we evaluate?",
    "start": "2106120",
    "end": "2114430"
  },
  {
    "text": "How can we prune something? ",
    "start": "2114430",
    "end": "2120020"
  },
  {
    "text": "HELEN XU: So you actually\nhad to find seven. Like, zero and eight are there. But you haven't found them yet.",
    "start": "2120020",
    "end": "2125990"
  },
  {
    "text": "So, basically, if you thought\nabout doing it serially, you do the leftmost subtree,\nwhich has 2, 3, and 0.",
    "start": "2125990",
    "end": "2132790"
  },
  {
    "text": "And then you would find seven. And that would be a\ncut off, because seven is bigger than three. ",
    "start": "2132790",
    "end": "2139569"
  },
  {
    "text": "So you're not actually\nfinding zero and eight. ",
    "start": "2139570",
    "end": "2148260"
  },
  {
    "text": "The point is that you\nwouldn't get to that subtree, because the opponent\nwouldn't let you get there,",
    "start": "2148260",
    "end": "2154323"
  },
  {
    "text": "because you can do too well. So they would just not\nlet you go down that path.",
    "start": "2154323",
    "end": "2160590"
  },
  {
    "text": "Like, let's say you were purple,\nand the opponent is orange. And you want to get 7 and 8.",
    "start": "2160590",
    "end": "2166500"
  },
  {
    "text": "But the opponent can\nalso search that, and see that you would get 7 and 8. So they would prefer you to do\nsomething like two or three.",
    "start": "2166500",
    "end": "2172320"
  },
  {
    "start": "2172320",
    "end": "2179700"
  },
  {
    "text": "AUDIENCE: So what\ndo you do instead? ",
    "start": "2179700",
    "end": "2186620"
  },
  {
    "text": "HELEN XU: You're not always\nmaking the best move that you could possibly do, because--",
    "start": "2186620",
    "end": "2192690"
  },
  {
    "text": "like, if you just searched\nwithout this pruning, and you just picked-- let's say you wanted\nto make the best move.",
    "start": "2192690",
    "end": "2200420"
  },
  {
    "text": "Like, if you don't take\ninto account the opponent, then you're never\ngoing to get to there. So you're basically\ntrying to find a move",
    "start": "2200420",
    "end": "2205940"
  },
  {
    "text": "that the opponent\nwould let you get to that's also good for\nyou, because you switch off.",
    "start": "2205940",
    "end": "2213079"
  },
  {
    "start": "2213080",
    "end": "2219056"
  },
  {
    "text": "Yes? AUDIENCE: [INAUDIBLE] ",
    "start": "2219056",
    "end": "2226050"
  },
  {
    "text": "HELEN XU: I guess in this\nexample, you're purple. No, sorry, you're orange,\nbecause you're cutting off--",
    "start": "2226050",
    "end": "2233760"
  },
  {
    "text": "no, you're purple,\nbecause you're trying to maximize what\nyou get at the leaves. AUDIENCE: [INAUDIBLE]",
    "start": "2233760",
    "end": "2240395"
  },
  {
    "text": "HELEN XU: Yes. ",
    "start": "2240395",
    "end": "2253310"
  },
  {
    "text": "The main point of-- sorry. AUDIENCE: Oh. ",
    "start": "2253310",
    "end": "2261502"
  },
  {
    "text": "We're trying to\nminimize the score.  HELEN XU: Yes.",
    "start": "2261502",
    "end": "2267470"
  },
  {
    "text": "So orange is trying\nto minimize the score. And purple is trying\nto maximize the score. ",
    "start": "2267470",
    "end": "2273950"
  },
  {
    "text": "AUDIENCE: So we're\ncutting that off, you're saying you don't need to\nsearch this because we already know they're the same here.",
    "start": "2273950",
    "end": "2281680"
  },
  {
    "text": "So we shouldn't go\ndown this path anyway. ",
    "start": "2281680",
    "end": "2291789"
  },
  {
    "text": "HELEN XU: Does anyone\nhave questions? Does that make sense? Yeah, it's basically\nexactly as you said. So there's kind of this balance\nbetween one side trying--",
    "start": "2291790",
    "end": "2302710"
  },
  {
    "text": "both sides are just\ntrying to make-- you're trying to\nmake good moves. But you're also trying\nto make the opponent make",
    "start": "2302710",
    "end": "2307960"
  },
  {
    "text": "not good moves, if\nthat makes sense. So you're not only\nsearching for your maximum.",
    "start": "2307960",
    "end": "2313530"
  },
  {
    "text": "But you're also searching\nto minimize the opponent. Good question.",
    "start": "2313530",
    "end": "2318534"
  },
  {
    "start": "2318534",
    "end": "2324974"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] ",
    "start": "2324974",
    "end": "2338180"
  },
  {
    "text": "HELEN XU: Sorry? AUDIENCE: So we\ndon't want to choose either of those orange ones.",
    "start": "2338180",
    "end": "2344220"
  },
  {
    "text": "We don't want to let-- I think it's OK. I think you can move on. HELEN XU: Oh, OK.",
    "start": "2344220",
    "end": "2350859"
  },
  {
    "text": "Yes? AUDIENCE: What if\nyou and your opponent have different reward criteria?",
    "start": "2350860",
    "end": "2355869"
  },
  {
    "text": "Like, you guys evaluate-- HELEN XU: That's OK.",
    "start": "2355870",
    "end": "2361140"
  },
  {
    "text": "It's fine. The actual evaluation,\nlike what number you assign to each position,\nis not exposed to the opponent.",
    "start": "2361140",
    "end": "2368070"
  },
  {
    "text": "The main point is that, at the\nend of each move, you pick one. And they can do with\nit what they want.",
    "start": "2368070",
    "end": "2374398"
  },
  {
    "text": "Like, that may not have\nbeen the one they picked. But it's OK. ",
    "start": "2374398",
    "end": "2391420"
  },
  {
    "text": "Sorry, I think you're\norange in this one, because the root is orange.",
    "start": "2391420",
    "end": "2397370"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] ",
    "start": "2397370",
    "end": "2421100"
  },
  {
    "text": "HELEN XU: So let's start over. So I think that we are orange. So remember that\neach edge is a move.",
    "start": "2421100",
    "end": "2428290"
  },
  {
    "text": "And each node is a position. And so you're orange. And you start at the root. And now you, for example,\nmake the move left.",
    "start": "2428290",
    "end": "2435370"
  },
  {
    "text": "And purple now can make moves\nwhatever three after that. And now, you're orange again.",
    "start": "2435370",
    "end": "2440590"
  },
  {
    "text": "And then you can make\nmoves after that. And now, you evaluate the\nposition after that as a leaf. ",
    "start": "2440590",
    "end": "2448700"
  },
  {
    "text": "And so, basically,\nyou're searching past like the second\nlevel of orange. And you are cutting off if you\nsee that you would do better,",
    "start": "2448700",
    "end": "2457732"
  },
  {
    "text": "because you think that\npurple would never let you get to that\norange node right above. Yes?",
    "start": "2457732",
    "end": "2463417"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] ",
    "start": "2463417",
    "end": "2468867"
  },
  {
    "text": "HELEN XU: Yeah, I guess\nthat's the score that you, as orange would receive. Yes?",
    "start": "2468867",
    "end": "2474594"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] ",
    "start": "2474594",
    "end": "2484520"
  },
  {
    "text": "HELEN XU: You're\nnot trying to give-- it's not so much like you're\ntrying to give purple zero,",
    "start": "2484520",
    "end": "2489650"
  },
  {
    "text": "as you think that purple would\nnot give you seven and eight, because purple would have\nto go down the left subtree",
    "start": "2489650",
    "end": "2495332"
  },
  {
    "text": "to give you that. ",
    "start": "2495332",
    "end": "2506798"
  },
  {
    "text": "Any other questions? ",
    "start": "2506798",
    "end": "2512660"
  },
  {
    "text": "I'm going to move\non with the search then, if there are no questions.",
    "start": "2512660",
    "end": "2518192"
  },
  {
    "text": "[INTERPOSING VOICES] ",
    "start": "2518192",
    "end": "2531510"
  },
  {
    "text": "HELEN XU: Is everyone good? Can I keep going?",
    "start": "2531510",
    "end": "2536619"
  },
  {
    "text": "OK, so just going back to\nprincipal variations pruning,",
    "start": "2536620",
    "end": "2542600"
  },
  {
    "text": "the main idea is\nthat you go down the first path on the\nleft side, thinking",
    "start": "2542600",
    "end": "2548300"
  },
  {
    "text": "that that's the best path. And then you're basically\ndoing initial passes through the trees to make\nsure that your assumption is",
    "start": "2548300",
    "end": "2555497"
  },
  {
    "text": "correct. And if they're not\ncorrect, then you have to search the\nentire subtree. But if they are correct,\nthen you kind of fail, you early exit.",
    "start": "2555497",
    "end": "2564350"
  },
  {
    "text": "So you search down\nthe left subtree. And you find three in\nthe leftmost subtree.",
    "start": "2564350",
    "end": "2570007"
  },
  {
    "text": "And now, you search the\nones to the right of that. And those are seven and eight. So those produce a cutoff,\nbecause seven and eight",
    "start": "2570007",
    "end": "2576500"
  },
  {
    "text": "is higher than three. So you think that\npurple would not let you get to that subtree. ",
    "start": "2576500",
    "end": "2583040"
  },
  {
    "text": "And now, you do a scout search\nagain on the middle subtree.",
    "start": "2583040",
    "end": "2588640"
  },
  {
    "text": "And then you see that-- you find this first node of\neach one of those subtrees",
    "start": "2588640",
    "end": "2594279"
  },
  {
    "text": "underneath the middle subtree. And you see that they're\nall higher than three. So it turns out that you\nfailed to prove that you",
    "start": "2594280",
    "end": "2604990"
  },
  {
    "text": "can do no better than three. The main point of\nthe scout search is that you assume that your\nfirst move that you search is the best you can do.",
    "start": "2604990",
    "end": "2611170"
  },
  {
    "text": "And then you do initial passes\nto verify that assumption. And if you search later\nsubtrees, and you find that--",
    "start": "2611170",
    "end": "2617375"
  },
  {
    "text": "for example, in this\none in the middle, they're all higher than threes. So your assumption is not true. So now you have to\ndo a full search",
    "start": "2617375",
    "end": "2623319"
  },
  {
    "text": "of that entire middle subtree. Is that OK?",
    "start": "2623320",
    "end": "2628744"
  },
  {
    "text": "Are there questions? ",
    "start": "2628745",
    "end": "2636170"
  },
  {
    "text": "So once you find that you\nhave to actually search the middle subtree, you can\nrecursively apply scout search.",
    "start": "2636170",
    "end": "2642950"
  },
  {
    "text": "So you have to search the\nleft subtree in the middle. But now, you apply scout\nsearch to the lower middle",
    "start": "2642950",
    "end": "2649610"
  },
  {
    "text": "and the lower right. And you do a zero\nwindow search there. And, again, you assume that\nyou can do no better than six.",
    "start": "2649610",
    "end": "2656210"
  },
  {
    "text": "And now, you're trying\nto verify that you can do better than six. But you actually can. So you have to search them.",
    "start": "2656210",
    "end": "2663780"
  },
  {
    "text": "And then you apply the same\nthing again to the subtree. And you see that you\ncan do better than six",
    "start": "2663780",
    "end": "2669450"
  },
  {
    "text": "on the left one. But you do worse than\nsix on the right one.",
    "start": "2669450",
    "end": "2674660"
  },
  {
    "text": "And you cut off two, because the\nmiddle subtree already gave you two.",
    "start": "2674660",
    "end": "2680660"
  },
  {
    "text": "And so you don't have\nto search that one. So in this example, there\nwere 13 leaves pruned.",
    "start": "2680660",
    "end": "2686822"
  },
  {
    "text": "And the point of scout\nsearch is that you can improve pruning a\nlittle bit over alpha beta, and that you process\nmost of the game tree",
    "start": "2686822",
    "end": "2693090"
  },
  {
    "text": "with zero window searches. The main point is that it\nreduces your work, because you have to process less. ",
    "start": "2693090",
    "end": "2702234"
  },
  {
    "text": "Questions? ",
    "start": "2702234",
    "end": "2708700"
  },
  {
    "text": "So now we're going to talk\nabout-- so I kind of glossed over how you order the moves. So the ordering\ndetermines which order",
    "start": "2708700",
    "end": "2715660"
  },
  {
    "text": "you explore the subtrees in. Alpha-beta search and\nprincipal variation search depend on putting the\nbest moves in the front",
    "start": "2715660",
    "end": "2722320"
  },
  {
    "text": "to trigger an early cut off. And the main question\nis, how do we determine moves,\nwhich moves are good,",
    "start": "2722320",
    "end": "2727630"
  },
  {
    "text": "without doing static\nevaluation at every level? Like, for example, we\nonly did static evaluation with the leaves.",
    "start": "2727630",
    "end": "2732789"
  },
  {
    "text": "And we can't get\nsortable move list, which is a function in search. And sortable move\nlists, kind of talk",
    "start": "2732790",
    "end": "2740043"
  },
  {
    "text": "about how you\npopulate that later. ",
    "start": "2740043",
    "end": "2745060"
  },
  {
    "text": "As I said before, moves are\nrepresented in 128 bits. So you can use it in 32. And to make them sortable,\nyou store a sort key",
    "start": "2745060",
    "end": "2751760"
  },
  {
    "text": "in the upper 32 bits in 64. And then you sort,\nbased on that key.",
    "start": "2751760",
    "end": "2758060"
  },
  {
    "text": "That make sense? ",
    "start": "2758060",
    "end": "2765940"
  },
  {
    "text": "So I'll just go over some search\noptimizations that you can do. We actually implement\nthese already. So I'm just going\nto go through them",
    "start": "2765940",
    "end": "2771940"
  },
  {
    "text": "so it's not super confusing\nwhen you look at the code. The most important one is\ncalled the transposition table.",
    "start": "2771940",
    "end": "2777940"
  },
  {
    "text": "The main idea in the\ntransposition table is that chess programs often\nencounter the same positions repeatedly during a search.",
    "start": "2777940",
    "end": "2784450"
  },
  {
    "text": "And you can store those results\nin a transposition table to avoid unnecessary\nfeature searches.",
    "start": "2784450",
    "end": "2789641"
  },
  {
    "text": "And I've listed where\nyou can find those. ",
    "start": "2789642",
    "end": "2795590"
  },
  {
    "text": "There's something\ncalled Zobrist hashing, which is a technique for\nhashing a board position which you use to index the\ntransmission table.",
    "start": "2795590",
    "end": "2802142"
  },
  {
    "text": "And it's a table of random\nnumbers, indexed by piece, orientation, and square. So each position\nhas a unique hash.",
    "start": "2802142",
    "end": "2809948"
  },
  {
    "text": "And it produces the\nhash by exporting all of these random\nnumbers together. And the advantage\nof Zobrist hashing",
    "start": "2809948",
    "end": "2815660"
  },
  {
    "text": "is that the hash function can\nbe updated incrementally, which is like if you move a\nposition-- if you move a piece,",
    "start": "2815660",
    "end": "2820670"
  },
  {
    "text": "you just xor it out. And then you xor\nthe new one, so you don't have to recompute\nthe hash each time.",
    "start": "2820670",
    "end": "2826244"
  },
  {
    "start": "2826244",
    "end": "2831329"
  },
  {
    "text": "So the transposition table\nsaves you a lot of work by preventing you from\nresearching things.",
    "start": "2831330",
    "end": "2837697"
  },
  {
    "text": "And there's also something\ncalled the killer move table. So the transposition\ntable is like how you determine how to\ndo sorting at things",
    "start": "2837697",
    "end": "2845430"
  },
  {
    "text": "that are not the leaves, and\nalso the killing moves table. So the killer\nmoves people stores moves that are really good so\nthat the opponent wouldn't let",
    "start": "2845430",
    "end": "2852270"
  },
  {
    "text": "you go down that path,\nso you have to keep recomputing the same values. And the table is indexed\nby ply, because you",
    "start": "2852270",
    "end": "2858480"
  },
  {
    "text": "tend to see the same\nmoves at the same depth. So the killer move table,\nbasically, just stores",
    "start": "2858480",
    "end": "2864180"
  },
  {
    "text": "move that trigger the beta\ncut off before in your search. ",
    "start": "2864180",
    "end": "2873270"
  },
  {
    "text": "There's a best move\ntable, which is stored at the root of the search. And it is the move that\ngot the maximum score",
    "start": "2873270",
    "end": "2880230"
  },
  {
    "text": "in your evaluation. And the best move table\nis indexed by color, piece, square, and orientation.",
    "start": "2880230",
    "end": "2886560"
  },
  {
    "text": "And there's a history\ntable in the code. So these are all,\nbasically, just things to help you\noptimize your search,",
    "start": "2886560",
    "end": "2892757"
  },
  {
    "text": "and produce early cut offs. ",
    "start": "2892757",
    "end": "2897861"
  },
  {
    "text": "And there's something called\nnull-move pruning, which tries to reduce your\nsearch space by first not moving, and then doing\na shallower search to see",
    "start": "2897862",
    "end": "2904630"
  },
  {
    "text": "if this subtree is\nworth further exploring.  Basically, it says,\ndon't move, and then do",
    "start": "2904630",
    "end": "2911110"
  },
  {
    "text": "a little bit of evaluation. And if you're still\ndoing really well, even if you didn't\nmove in the subtree,",
    "start": "2911110",
    "end": "2917350"
  },
  {
    "text": "then it's not worth exploring,\nbecause the opponent would never let you go there,\nbecause the position is too good. ",
    "start": "2917350",
    "end": "2925890"
  },
  {
    "text": "There's futility\npruning, which explores moves that only have the\npotential to increase alpha.",
    "start": "2925890",
    "end": "2931050"
  },
  {
    "text": "And it calculates\nthat possibility by adding a futility\nmargin, which is the most you could possibly\ngain from going there, and then",
    "start": "2931050",
    "end": "2937770"
  },
  {
    "text": "evaluating a little bit. And if the result does\nnot go higher than alpha, then you skip it,\nbecause there's",
    "start": "2937770",
    "end": "2943297"
  },
  {
    "text": "no point in even going\nthat way, because it wouldn't increase your alpha. ",
    "start": "2943298",
    "end": "2951410"
  },
  {
    "text": "There's late move\nreduction, which is after you order the\nmoves at a position, you explore the-- the-- ones in\nfront are likely to be better.",
    "start": "2951410",
    "end": "2959089"
  },
  {
    "text": "So you explore those\nin higher depth. And then you explore the ones\nlater with shallower depth,",
    "start": "2959090",
    "end": "2964101"
  },
  {
    "text": "because those are less\nlikely to be good. ",
    "start": "2964102",
    "end": "2969770"
  },
  {
    "text": "And some things that\nyou can optimize are implementing a\nbetter opening book.",
    "start": "2969770",
    "end": "2977480"
  },
  {
    "text": "I think we have produced\na very basic opening book in the handout. But this is something\nthat you can definitely",
    "start": "2977480",
    "end": "2983240"
  },
  {
    "text": "work on, and make better,\nbecause it doesn't have many positions in it right now. And the main point\nof an opening book is that you store the positions\nat the beginning of the game",
    "start": "2983240",
    "end": "2989540"
  },
  {
    "text": "that you've already\npre-computed. And that saves time and\nsearch, and can store results to a higher depth.",
    "start": "2989540",
    "end": "2994670"
  },
  {
    "text": "And the KM75 theorem\nimplies it's better to keep separate opening books\nthan to keep the same opening",
    "start": "2994670",
    "end": "3000220"
  },
  {
    "text": "book for both sides. So opening books\nare really helpful, because in the beginning,\nthere's a huge number of moves",
    "start": "3000220",
    "end": "3005650"
  },
  {
    "text": "that you could possibly make. And searching those\ntakes a lot of time. But if you pre-compute them,\nyou can save them for later.",
    "start": "3005650",
    "end": "3011710"
  },
  {
    "text": " And another useful\ntable you can keep is an end game\ndatabase, which is",
    "start": "3011710",
    "end": "3018080"
  },
  {
    "text": "a table for guiding your chess\nprogram through the end game. For end game positions,\nthe distance from the end",
    "start": "3018080",
    "end": "3024050"
  },
  {
    "text": "might be too far\nto search entirely. So you can pre-compute them. And then you store who\nwill win, and how far you",
    "start": "3024050",
    "end": "3029570"
  },
  {
    "text": "are from the end of the game. And we've given you a c file\nthat you can implement it in.",
    "start": "3029570",
    "end": "3034960"
  },
  {
    "start": "3034960",
    "end": "3044270"
  },
  {
    "text": "OK, so I'll just go\nthrough some guidelines, some tips for the project. I was giving links\nat most of the bottom",
    "start": "3044270",
    "end": "3050960"
  },
  {
    "text": "of the slides for where you can\nread up more on these topics. But there's a chess\nprogramming wiki.",
    "start": "3050960",
    "end": "3056550"
  },
  {
    "text": "The link is there, which has\nmany more pages about reading about chess playing programs.",
    "start": "3056550",
    "end": "3063932"
  },
  {
    "text": "Just in general, it's\na really good idea to test your code\noften, because it's easy to make a mistake\nwith your optimizations.",
    "start": "3063933",
    "end": "3069290"
  },
  {
    "text": "And it doesn't appear when\nyou search to fixed depth. So if you start up your\nbot, you can say, like,",
    "start": "3069290",
    "end": "3075470"
  },
  {
    "text": "search to depth 5, for example. And then it will tell you like\nhow many nodes per seconds",
    "start": "3075470",
    "end": "3080628"
  },
  {
    "text": "you searched. And then I'll tell you the best\nmove at the end of that search. But you should test\nfull games using",
    "start": "3080628",
    "end": "3087298"
  },
  {
    "text": "the auto tester, and\nthe cloud auto tester, and the script server,\njust to watch your bot to make sure that it\ndoesn't do anything weird.",
    "start": "3087298",
    "end": "3094280"
  },
  {
    "text": "And the testing methodology,\nI went through some of it. There's a webgui. There's a Java autotester. There's a cloud autotester.",
    "start": "3094280",
    "end": "3100343"
  },
  {
    "text": "And you can do node\ncounts, which is basically just counting the number\nof nodes in the tree that you searched.",
    "start": "3100343",
    "end": "3105740"
  },
  {
    "text": "And there's function\ncomparison testing, which is, if you\noptimize a function, you should save the\nold version, and then",
    "start": "3105740",
    "end": "3111289"
  },
  {
    "text": "just compare the results.  PROFESSOR: Let me make\na comment about testing.",
    "start": "3111290",
    "end": "3121710"
  },
  {
    "text": "I can't tell you how\noften in this class we've had student groups\nwho discover that they've",
    "start": "3121710",
    "end": "3129090"
  },
  {
    "text": "made a whole bunch of changes. And then there's something\nwrong with their bot.",
    "start": "3129090",
    "end": "3134700"
  },
  {
    "text": "And they can't get\nback to a stable place when things were correct. They discover the problem.",
    "start": "3134700",
    "end": "3140099"
  },
  {
    "text": "But they've made 30 changes. And now, which of those 30 is\nresponsible for the problem?",
    "start": "3140100",
    "end": "3147130"
  },
  {
    "text": "So it's really\nimportant to test, and have a good\ntest infrastructure",
    "start": "3147130",
    "end": "3153780"
  },
  {
    "text": "for this project. If you have a really\ngood test infrastructure, it's really easy to be\ninnovative in the kinds",
    "start": "3153780",
    "end": "3160290"
  },
  {
    "text": "of optimizations that\nyou do, because then you know that what you're\ndoing is right. And then you can make\nforward progress.",
    "start": "3160290",
    "end": "3166680"
  },
  {
    "text": "Otherwise, you'll find yourself\nself debugging like crazy, and not being able\nto find the bugs.",
    "start": "3166680",
    "end": "3173130"
  },
  {
    "text": "Some other tips\nare, especially when we get to the\nparallel part, it's",
    "start": "3173130",
    "end": "3178650"
  },
  {
    "text": "non-deterministic programming. And the reason is\nbecause as you're",
    "start": "3178650",
    "end": "3183690"
  },
  {
    "text": "executing you're going\nto be looking up things in transposition table that\nyou're going to want to share,",
    "start": "3183690",
    "end": "3190620"
  },
  {
    "text": "so that if one branch\ndiscovers a value then another branch can use that.",
    "start": "3190620",
    "end": "3198450"
  },
  {
    "text": "So it's really important\nto be able to turn that off so that you're, for\nexample, able to search",
    "start": "3198450",
    "end": "3203880"
  },
  {
    "text": "without a transposition\ntable to get all the searching stuff right,\nand be able to turn that",
    "start": "3203880",
    "end": "3209040"
  },
  {
    "text": "on independently. So that's another really\nimportant place to do it.",
    "start": "3209040",
    "end": "3214359"
  },
  {
    "text": "Another thing is that when\nyou do timed searches, the time it takes to do\nthe search will vary.",
    "start": "3214360",
    "end": "3222119"
  },
  {
    "text": "And what you'll end\nup exploring varies. So as much as possible, you\nwanted to fix depth searches.",
    "start": "3222120",
    "end": "3229020"
  },
  {
    "text": "Search to five ply\nto test something, rather than searching\nfor a minute,",
    "start": "3229020",
    "end": "3236670"
  },
  {
    "text": "or whatever the\namount of time is, because when you start\nsearching for time,",
    "start": "3236670",
    "end": "3241800"
  },
  {
    "text": "that's, in fact, what you're\ngoing to end up doing. But you can't repeat what\njust happened if you end up",
    "start": "3241800",
    "end": "3248580"
  },
  {
    "text": "searching for that\namount of time again, because the machines\nare not deterministic.",
    "start": "3248580",
    "end": "3254220"
  },
  {
    "text": "And there may be\nsomething else going on that causes the amount\nof time to be different.",
    "start": "3254220",
    "end": "3261000"
  },
  {
    "text": "And so, for example, if\nyou're making a change that",
    "start": "3261000",
    "end": "3266130"
  },
  {
    "text": "doesn't affect the\nlogic of the program, it's just strictly\nan optimization,",
    "start": "3266130",
    "end": "3271710"
  },
  {
    "text": "you should get exactly\nthe same result if you do a five ply\nsearch, for example.",
    "start": "3271710",
    "end": "3276930"
  },
  {
    "text": "Shouldn't have changed\nthe five ply search. Just a five ply search\nshould be faster.",
    "start": "3276930",
    "end": "3282512"
  },
  {
    "text": "And so that's a good\nway-- as much as possible, you want to check things that\nare deterministic and so forth.",
    "start": "3282512",
    "end": "3288300"
  },
  {
    "text": "And, really, as I say, I\ncan't emphasize this enough, how having a good\ntest infrastructure,",
    "start": "3288300",
    "end": "3294750"
  },
  {
    "text": "the ability to control\nturn off non-determinism, the ability to test various\nparts of this program,",
    "start": "3294750",
    "end": "3303160"
  },
  {
    "text": "this is a pretty\nbig piece of code for a project of this nature.",
    "start": "3303160",
    "end": "3309300"
  },
  {
    "text": "And you'll feel pretty\noverwhelmed by it to begin with. Once you settle,\nyou'll discover,",
    "start": "3309300",
    "end": "3314580"
  },
  {
    "text": "it's this wonderful thing,\nwhere by the end of the project everybody feels really confident\nabout their ability to handle",
    "start": "3314580",
    "end": "3321420"
  },
  {
    "text": "a decent sized piece of code. But when you first get into\nit, it's like, oh my goodness. There's move ordering.",
    "start": "3321420",
    "end": "3326577"
  },
  {
    "text": "And there's static evaluation. And there's the search. And what's going on with\nthat transposition table?",
    "start": "3326577",
    "end": "3331770"
  },
  {
    "text": "Because every one of\nthese things has got cleverness in it. OK, so it's really\nhard code to deal with.",
    "start": "3331770",
    "end": "3339240"
  },
  {
    "text": "But you guys are\ngoing to just fine. HELEN XU: So this is the\neval.c file in the handout.",
    "start": "3339240",
    "end": "3348240"
  },
  {
    "text": "So this in 32 here is\nthe evaluation score. And the main function\nis called eval.",
    "start": "3348240",
    "end": "3354510"
  },
  {
    "text": "And it takes in a position. And it outputs two scores, one\nfor white and one for black.",
    "start": "3354510",
    "end": "3361020"
  },
  {
    "text": " And right now, it does-- ",
    "start": "3361020",
    "end": "3368720"
  },
  {
    "text": "I guess it does counts\nof the number of pawns. OK, so I was talking before\nabout, p between and p central,",
    "start": "3368720",
    "end": "3375220"
  },
  {
    "text": "which are you pawn heuristics. And so basically,\nright now, it iterates through the entire board.",
    "start": "3375220",
    "end": "3380440"
  },
  {
    "text": "You can see for rank and\nfile are just row and column. And it looks at each\nsquare in the iteration.",
    "start": "3380440",
    "end": "3386890"
  },
  {
    "text": "And then it looks at the piece\nand the color of the piece. And based on the type of the\npiece, it does some evaluation.",
    "start": "3386890",
    "end": "3393151"
  },
  {
    "text": "So if it's a pawn, it\ndoes the pawn heuristics. If it's a fits king, it\ndoes these king heuristics.",
    "start": "3393152",
    "end": "3398380"
  },
  {
    "text": "And otherwise, or both-- or not otherwise, I guess--",
    "start": "3398380",
    "end": "3403900"
  },
  {
    "text": "yeah, in both cases it'll do-- this is an old version. So it's not there anymore.",
    "start": "3403900",
    "end": "3409163"
  },
  {
    "text": "But this is laser\ncoverage, which we talked about\nearlier, which doesn't",
    "start": "3409163",
    "end": "3415030"
  },
  {
    "text": "depend on what piece it is. This is after you iterate\nthrough the entire board.",
    "start": "3415030",
    "end": "3421569"
  },
  {
    "text": "And then this isn't\nhere anymore either. But we can look at\neach of these in depth. So right now, for\nexample, there's",
    "start": "3421570",
    "end": "3427517"
  },
  {
    "text": "p between, which goes\nthrough every single pawn",
    "start": "3427517",
    "end": "3438500"
  },
  {
    "text": "in your iteration. And then it will\ndetermine whether or not it's between both kings,\nand the return slide.",
    "start": "3438500",
    "end": "3446300"
  },
  {
    "text": "So it will add it to the score,\nif you find that it's true. And there's p central, which\ntakes in a rank and a file.",
    "start": "3446300",
    "end": "3458920"
  },
  {
    "text": "And, basically, it\nincrements something, or it gives you a\nbonus, depending on how close you are to\nthe center of the board.",
    "start": "3458920",
    "end": "3466863"
  },
  {
    "text": "So look at this. There's a board with-- and F as your file. And R is your rank.",
    "start": "3466863",
    "end": "3472600"
  },
  {
    "text": " PROFESSOR: I think you have\na slightly older version.",
    "start": "3472600",
    "end": "3479380"
  },
  {
    "text": "HELEN XU: Potentially. PROFESSOR: It's\ncorrect on the screen.",
    "start": "3479380",
    "end": "3484530"
  },
  {
    "text": "HELEN XU: Is\ncorrect in this one? AUDIENCE: Yeah. ",
    "start": "3484530",
    "end": "3505930"
  },
  {
    "text": "HELEN XU: OK, so\nthis is just the-- I guess is the most\nupdated version. The first one is p central.",
    "start": "3505930",
    "end": "3511070"
  },
  {
    "text": "So this just count\nthe difference between where you are and\nthe center of the board. And it gives you some\nbonus, depending on how far",
    "start": "3511070",
    "end": "3518750"
  },
  {
    "text": "you are from the center. And this one is between. Yeah, so this is between, which\nis a helper for p between.",
    "start": "3518750",
    "end": "3525472"
  },
  {
    "text": "And it tells you\nwhether or not your pawn is in the bounding box\ndetermined by the kings.",
    "start": "3525472",
    "end": "3531200"
  },
  {
    "text": "And this one is k face,\nwhich is given a king,",
    "start": "3531200",
    "end": "3537579"
  },
  {
    "text": "you look at its orientation. And then you give it\na bonus, depending on which way you're\nfacing, and how far you",
    "start": "3537580",
    "end": "3545840"
  },
  {
    "text": "are from the center, I think-- no, how far you are\nfrom the opponent. So f and r where you are.",
    "start": "3545840",
    "end": "3552140"
  },
  {
    "text": "And now it does the delta\nbetween you and the opposing",
    "start": "3552140",
    "end": "3558140"
  },
  {
    "text": "king. And then you do some scaling,\ndepending on which direction",
    "start": "3558140",
    "end": "3563300"
  },
  {
    "text": "you're facing. So this is just\nyour orientation. ",
    "start": "3563300",
    "end": "3568359"
  },
  {
    "text": "And then this is k\naggressive, which gives you a bonus\nfor how far you are from the edge of the board.",
    "start": "3568360",
    "end": "3575380"
  },
  {
    "text": "So you can see here op square is\nwhere do the opposing king is.",
    "start": "3575380",
    "end": "3581740"
  },
  {
    "text": "And delta file and\ndelta rank are how far",
    "start": "3581740",
    "end": "3587020"
  },
  {
    "text": "you are from the opposing king. And then you add the bonus,\ndepending on which case",
    "start": "3587020",
    "end": "3594130"
  },
  {
    "text": "the deltas fall into. ",
    "start": "3594130",
    "end": "3599700"
  },
  {
    "text": "And this gives you a\nbonus if you're farther from the edge of the board.",
    "start": "3599700",
    "end": "3607180"
  },
  {
    "text": "Yeah, and there's\nl coverage, which",
    "start": "3607180",
    "end": "3612520"
  },
  {
    "text": "is the most complicated\none, probably. And, basically, what laser\ncoverage does is that,",
    "start": "3612520",
    "end": "3619090"
  },
  {
    "text": "basically, it takes a position. And depending on\nwhat side you are, it generates all the moves\nthat you could possibly",
    "start": "3619090",
    "end": "3624203"
  },
  {
    "text": "make from that position. So you generate all\nwith color, which",
    "start": "3624203",
    "end": "3630310"
  },
  {
    "text": "means that, given\nyour color, you generate all the possible\nmoves that you can make. And you get a list of moves. And you iterate through it.",
    "start": "3630310",
    "end": "3637060"
  },
  {
    "text": "And then you make each of them. And you draw a laser path. And what the laser path\ndoes is, basically, it",
    "start": "3637060",
    "end": "3643990"
  },
  {
    "text": "bounces off some pause. And for each square, you\nincrement the distance,",
    "start": "3643990",
    "end": "3649240"
  },
  {
    "text": "basically, along the path. And if it takes the\nminimum distance over all these possible\npaths for each square.",
    "start": "3649240",
    "end": "3656080"
  },
  {
    "text": "And if it doesn't touch a\nsquare, then it's just 0. And it divides it. I can go into this.",
    "start": "3656080",
    "end": "3661869"
  },
  {
    "text": " So it draws the path\nthrough this while true.",
    "start": "3661870",
    "end": "3668390"
  },
  {
    "text": " Or this is just\nchanging the orientation",
    "start": "3668390",
    "end": "3674099"
  },
  {
    "text": "if you need to\nbounce off a pawn. But this one is setting the--",
    "start": "3674100",
    "end": "3679990"
  },
  {
    "text": "you keep a laser map. And you keep the\nminimum path of a laser that would possibly touch that.",
    "start": "3679990",
    "end": "3686250"
  },
  {
    "text": "And, no, this is just\nchanging the orientation.",
    "start": "3686250",
    "end": "3691290"
  },
  {
    "text": " So then you generate this map\nfor all the possible moves",
    "start": "3691290",
    "end": "3696450"
  },
  {
    "text": "that you could do. And then you do some scaling. So, depending on the distance\nfrom the opposing king,",
    "start": "3696450",
    "end": "3704349"
  },
  {
    "text": "you iterate through\nthe entire board. And you divide the\nminimum distance",
    "start": "3704350",
    "end": "3712110"
  },
  {
    "text": "by the actual distance\nfrom the laser. So the maximum that\nthis ratio can be is 1.",
    "start": "3712110",
    "end": "3718710"
  },
  {
    "text": "And then you multiply it\nby 1 over the distance.",
    "start": "3718710",
    "end": "3726000"
  },
  {
    "text": " So this one is\nreally complicated. And there's a lot\nto optimize here.",
    "start": "3726000",
    "end": "3731790"
  },
  {
    "text": "For example, you\nprobably don't have to iterate through\nthe entire board each time, because even\nin eval, like here, you",
    "start": "3731790",
    "end": "3743280"
  },
  {
    "text": "have to iterate through\nthe entire board to find each piece. And if you start a\nbetter representation,",
    "start": "3743280",
    "end": "3748800"
  },
  {
    "text": "you might not have to do\nthat, like if you just kept track of where\nthe pawns were, because you already keep\ntrack of the king separately.",
    "start": "3748800",
    "end": "3754538"
  },
  {
    "text": "So that's one thing you can do. ",
    "start": "3754538",
    "end": "3760080"
  },
  {
    "text": "PROFESSOR: There are\ntwo basic strategies for changing the\nrepresentation of the board. And maybe there are more.",
    "start": "3760080",
    "end": "3766740"
  },
  {
    "text": "But the two basic\nones are, instead of keeping the whole board\nwith a piece on each square,",
    "start": "3766740",
    "end": "3775590"
  },
  {
    "text": "and then having to go and\nsearch for where the pieces are, you can keep just a list\nof where the pawns are,",
    "start": "3775590",
    "end": "3782400"
  },
  {
    "text": "and what the locations\nof the kings are, so that when you\nwant to make a move, you can just go\nthrough where they are,",
    "start": "3782400",
    "end": "3789690"
  },
  {
    "text": "rather than having to search\nthrough all 64 squares on the board. Then the other strategy\nthat you can do",
    "start": "3789690",
    "end": "3795570"
  },
  {
    "text": "is use what's called\nbit boards, where you have a 64-bit word\nfor which, if there's",
    "start": "3795570",
    "end": "3807480"
  },
  {
    "text": "a pawn in a given\nposition, you set that bit. And so there are different\nways of representing",
    "start": "3807480",
    "end": "3815970"
  },
  {
    "text": "things that could possibly be,\ndefinitely be, more efficient.",
    "start": "3815970",
    "end": "3821859"
  },
  {
    "text": "But you have some choices there. And also, one of the\ncomplexities of this is that to change\nthe representation,",
    "start": "3821860",
    "end": "3828630"
  },
  {
    "text": "there's going to be\nplaces in the code you need to find out where they're\nassuming that things are.",
    "start": "3828630",
    "end": "3836700"
  },
  {
    "text": "So you say, oh, I'll change\nthe board representation. Oh, I didn't realize\nthat over here, there's another place that it's using\nthe board representation,",
    "start": "3836700",
    "end": "3844410"
  },
  {
    "text": "and so forth. A good strategy for changing\nboard representation is to actually keep both\nrepresentations around",
    "start": "3844410",
    "end": "3855720"
  },
  {
    "text": "while you migrate\nfunctionality from the old one to the new one.",
    "start": "3855720",
    "end": "3860940"
  },
  {
    "text": "And then the advantage of\nthat is that you can actually then use assertions\nto say, you know,",
    "start": "3860940",
    "end": "3868560"
  },
  {
    "text": "the old one and the\nnew one are the same. So implementing conversion\nfunctions is really good.",
    "start": "3868560",
    "end": "3878385"
  },
  {
    "text": "For example, if\nyou decide you're going to use a bit\nboard representation, have a function that\nconverts the bit board",
    "start": "3878385",
    "end": "3885700"
  },
  {
    "text": "to the standard board\nso that then you can compare whether\nyou've got the same thing.",
    "start": "3885700",
    "end": "3895660"
  },
  {
    "text": "And, eventually, you'll\nwant to get rid of that.",
    "start": "3895660",
    "end": "3900678"
  },
  {
    "text": "And, of course, that'll\nslow down you down, because you're\ndoing more things. But it will allow\nyou to get it correct",
    "start": "3900678",
    "end": "3906640"
  },
  {
    "text": "with a new representation. And once you've got it correct\nwith a new representation with the old one gone,\nthat's when you have a chance",
    "start": "3906640",
    "end": "3914710"
  },
  {
    "text": "to make things go fast. But it kind of is taking\ntwo steps backwards",
    "start": "3914710",
    "end": "3921430"
  },
  {
    "text": "to take five steps forward. I say not one step and two\nsteps, because really, often,",
    "start": "3921430",
    "end": "3927640"
  },
  {
    "text": "you really are slowing things\ndown considerably in order to convert from one\nrepresentation to another.",
    "start": "3927640",
    "end": "3935350"
  },
  {
    "text": "The most important thing is\nyou maintain the invariant of correctness in your code.",
    "start": "3935350",
    "end": "3941235"
  },
  {
    "text": "You do not want\nto make something that goes faster, but\nis wrong, and have to debug the correctness.",
    "start": "3941235",
    "end": "3947620"
  },
  {
    "text": "You'd much rather ensure\nthat things are correct, are moving to the place\nthat you want to do it.",
    "start": "3947620",
    "end": "3954220"
  },
  {
    "text": "And then you can\noptimize for performance. So the most important\nthing is keep",
    "start": "3954220",
    "end": "3960250"
  },
  {
    "text": "that invariant of correctness. And that's where\nthe testing and so forth comes in, having\ngood test infrastructure,",
    "start": "3960250",
    "end": "3966700"
  },
  {
    "text": "and having assertions\nlittered throughout your code. HELEN XU: And then we can\ngo through the [INAUDIBLE]..",
    "start": "3966700",
    "end": "3972819"
  },
  {
    "text": " Actually, OK, so,\njust as an example",
    "start": "3972820",
    "end": "3980760"
  },
  {
    "text": "of how you would\npossibly, one way of determining whether or\nnot you state correct--",
    "start": "3980760",
    "end": "3987000"
  },
  {
    "text": "so this is an example of a\nplace where I compiled the code. See the binary code\nis called Lesierchess.",
    "start": "3987000",
    "end": "3993857"
  },
  {
    "text": "And if you look at help,\nit gives you some options for what you can do. ",
    "start": "3993857",
    "end": "4000490"
  },
  {
    "text": "For example, there's display. And that's the opening position. And let's say I want to search. So I do a fixed depth,\nand go depth three.",
    "start": "4000490",
    "end": "4009460"
  },
  {
    "text": "And it tells me\nthe number of nodes that I searched at each depth.",
    "start": "4009460",
    "end": "4015789"
  },
  {
    "text": "And so if you make changes,\nif they are deterministic, these node counts\nshould stay the same.",
    "start": "4015790",
    "end": "4021752"
  },
  {
    "text": "So that's one way of telling. So you should keep\ntrack of this, and make sure that\nthey're the same. And also, you can\ndo perft, which",
    "start": "4021752",
    "end": "4029020"
  },
  {
    "text": "gives you the number of\npossible moves you can make. And that should be the\nsame, no matter what you do.",
    "start": "4029020",
    "end": "4036270"
  },
  {
    "text": " So that's one way of testing. There's other ways.",
    "start": "4036270",
    "end": "4043150"
  },
  {
    "text": "So if you go to higher depth,\nyou'll get more node counts. ",
    "start": "4043150",
    "end": "4050599"
  },
  {
    "text": "And here, this is nodes that\nyou searched at this depth. And this is nodes per second.",
    "start": "4050600",
    "end": "4057150"
  },
  {
    "text": "So you want to make\nthis one faster. ",
    "start": "4057150",
    "end": "4067638"
  },
  {
    "text": "So that's how you run the code.  And I was supposed to do a\ndemo for the auto tester.",
    "start": "4067638",
    "end": "4075099"
  },
  {
    "text": " So let's say I wanted to do-- ",
    "start": "4075100",
    "end": "4082010"
  },
  {
    "text": "so when I made it, it's in\na binary called Lesierchess. ",
    "start": "4082010",
    "end": "4088619"
  },
  {
    "text": "And then here, you\ncan type in commands. So you're basically just\ntyping commands from this.",
    "start": "4088620",
    "end": "4093710"
  },
  {
    "text": "Like, you run your binary. PROFESSOR: This is the UCI\ninterface that we talked about.",
    "start": "4093710",
    "end": "4100310"
  },
  {
    "text": "And in Lesierchess.c is\nthe implementation of that. And so if you want to add your\ncommands to it to help debug,",
    "start": "4100310",
    "end": "4109670"
  },
  {
    "text": "you can enter-- if we\ngo into Lesierchess.c, you can see the table. ",
    "start": "4109670",
    "end": "4119941"
  },
  {
    "text": "What I want to do\nis show the table of all the options, which is--",
    "start": "4119941",
    "end": "4125270"
  },
  {
    "text": "there we go, OK. HELEN XU: This is\njust the heuristics. PROFESSOR: So these are\ntables of heuristics",
    "start": "4125270",
    "end": "4131149"
  },
  {
    "text": "and so forth, which\nallow you to set",
    "start": "4131149",
    "end": "4136460"
  },
  {
    "text": "the values of the\nvarious things,",
    "start": "4136460",
    "end": "4142939"
  },
  {
    "text": "and to say, how much\nis this heuristic worth to the static evaluation?",
    "start": "4142939",
    "end": "4148068"
  },
  {
    "text": " And through these,\nall these can be set, so you don't\nhave to recompile",
    "start": "4148069",
    "end": "4155568"
  },
  {
    "text": "the binary if you want to try\nout things with different-- if you want to\nauto test with, let",
    "start": "4155569",
    "end": "4162830"
  },
  {
    "text": "me count this as worth\na third of a pawn. Let me count this as worth\nhalf a pawn, or whatever.",
    "start": "4162830",
    "end": "4169580"
  },
  {
    "text": "You can just enter it\nthrough the UCI interface. And in the auto tester,\nyou can specify that.",
    "start": "4169580",
    "end": "4175382"
  },
  {
    "text": "So it will just test those\nwithout you having to recompile binaries for every one of them.",
    "start": "4175383",
    "end": "4180710"
  },
  {
    "text": "And so there's a table\nhere which basically says, what's the name\nof the heuristic? What's the variable\nthat is going to be",
    "start": "4180710",
    "end": "4188330"
  },
  {
    "text": "set what the default value is? And pawn ev value is\nthe value of a pawn.",
    "start": "4188330",
    "end": "4195770"
  },
  {
    "text": "And if there's any restrictions\non the range of those values, what's the smallest it can be?",
    "start": "4195770",
    "end": "4201440"
  },
  {
    "text": "What's the largest it can be? So you can edit this\ntable, and so forth.",
    "start": "4201440",
    "end": "4207470"
  },
  {
    "text": "And as I say, you can set it\nthrough the UCI interface. So it's really a\nvery flexible way",
    "start": "4207470",
    "end": "4214730"
  },
  {
    "text": "of getting access to\nanything that you want to do. You can put your own\ncommands in there,",
    "start": "4214730",
    "end": "4221360"
  },
  {
    "text": "including new\nheuristics, or whatever. ",
    "start": "4221360",
    "end": "4227869"
  },
  {
    "text": "And there's some\nthings in there. For example, if we\ngo to the other part where they actually are\npassing the UCI stuff,",
    "start": "4227870",
    "end": "4241500"
  },
  {
    "text": "so it basically takes it. It parses it, figures out\nwhat the command is, and then implements the command.",
    "start": "4241500",
    "end": "4247079"
  },
  {
    "text": "So all that kind of stuff,\nyou have control over. So that that will help you in\nchoosing to do other things.",
    "start": "4247080",
    "end": "4255970"
  },
  {
    "text": "So, for example, if you\nsearch for perft or something in there-- ",
    "start": "4255970",
    "end": "4262500"
  },
  {
    "text": "so if you have\nperft, here's what the correct outputs should be. And now, here's the\ncode that it executes.",
    "start": "4262500",
    "end": "4269910"
  },
  {
    "text": "And perft is in\na different file. I think it's in the\nmove generation file. ",
    "start": "4269910",
    "end": "4281262"
  },
  {
    "text": "HELEN XU: Do I have\nthe wrong output? PROFESSOR: That may be\nfor the older game, yeah. I actually noticed a couple\nof other bugs in there",
    "start": "4281262",
    "end": "4288420"
  },
  {
    "text": "that hadn't been fixed. So we will make sure\nthat those are--",
    "start": "4288420",
    "end": "4294450"
  },
  {
    "text": "basically, it's just dead\ncode, is what's in there. We need to clean up\nsome of the dead code. Some of the code\nis from last year.",
    "start": "4294450",
    "end": "4300030"
  },
  {
    "text": "And we changed the game. And not all the dead\ncode got eliminated. HELEN XU: That'll be fixed\nfor when I make the repost.",
    "start": "4300030",
    "end": "4306150"
  },
  {
    "text": "PROFESSOR: Yeah.  So we're just\nfinishing up some--",
    "start": "4306150",
    "end": "4313530"
  },
  {
    "text": "right now, I think\nit's all cleanliness. But if you find any bugs\nlike that, let us know.",
    "start": "4313530",
    "end": "4319080"
  },
  {
    "text": "We'll fix them, and so forth. Appreciate if you do see\nother inconsistencies,",
    "start": "4319080",
    "end": "4328260"
  },
  {
    "text": "or what have you.  Good, so great project,\nthis is like lots of fun.",
    "start": "4328260",
    "end": "4338360"
  },
  {
    "text": "Next month is going to be\nlots of fun for all of you. You may not think it's fun\nevery minute of the day. But you'll have a good time.",
    "start": "4338360",
    "end": "4346310"
  },
  {
    "text": "It is fun. ",
    "start": "4346310",
    "end": "4362494"
  }
]