[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "5770"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or to\nview additional materials",
    "start": "5770",
    "end": "12530"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu.",
    "start": "12530",
    "end": "20835"
  },
  {
    "text": "PROFESSOR STRANG: OK. So this is Lecture 14,\nit's also the lecture",
    "start": "20835",
    "end": "25840"
  },
  {
    "text": "before the exam on\nTuesday evening. I thought I would just go ahead\nand tell you what questions",
    "start": "25840",
    "end": "35149"
  },
  {
    "text": "there are, so you could see. I haven't filled\nin all the numbers, but this will tell\nyou, it's a way",
    "start": "35150",
    "end": "44630"
  },
  {
    "text": "of reviewing of\ncourse, to sort of see the things that we've done.",
    "start": "44630",
    "end": "50010"
  },
  {
    "text": "Which is quite a bit, really. And also of course topics\nthat will not be in the exam.",
    "start": "50010",
    "end": "58380"
  },
  {
    "text": "You can see that they're not\nin the exam, for example. Topics from 1.7 on\ncondition number, or 2.3",
    "start": "58380",
    "end": "66240"
  },
  {
    "text": "on Gram-Schmidt, that I can\nspeak about a little bit. So those are the,\nonly thing I didn't",
    "start": "66240",
    "end": "72740"
  },
  {
    "text": "fill in is the end time there. So I don't usually\nask four questions,",
    "start": "72740",
    "end": "79360"
  },
  {
    "text": "three is more typical. So it's a little bit longer\nbut it's not a difficult exam.",
    "start": "79360",
    "end": "85060"
  },
  {
    "text": "And I never want time to be\nthe essential ingredient.",
    "start": "85060",
    "end": "93619"
  },
  {
    "text": "So 7:30 to 9 is\nthe nominal time, but it would not be a\nsurprise if you're still",
    "start": "93620",
    "end": "102110"
  },
  {
    "text": "going on after 9\no'clock a little bit. And I'll try not to, like,\ntear a paper away from you.",
    "start": "102110",
    "end": "110890"
  },
  {
    "text": "So, just figure that if you move\nalong at a reasonable speed,",
    "start": "110890",
    "end": "117090"
  },
  {
    "text": "and so you can bring papers,\nthe book, anything with you.",
    "start": "117090",
    "end": "124469"
  },
  {
    "text": "And I'm open for questions\nnow about the exam. You know where 54-100 is, it's\na classroom unfortunately.",
    "start": "124470",
    "end": "133060"
  },
  {
    "text": "Not a, sometimes we'll have the\ntop of Walker where you have a whole table to work\non, that's-- This 54-100,",
    "start": "133060",
    "end": "141030"
  },
  {
    "text": "in the tallest building of MIT\nout in the middle of the middle",
    "start": "141030",
    "end": "146600"
  },
  {
    "text": "space out there, is\na large classroom.",
    "start": "146600",
    "end": "151690"
  },
  {
    "text": "So if you kind of spread\nout your papers we'll be OK.",
    "start": "151690",
    "end": "158380"
  },
  {
    "text": "It's a pretty big room. Questions. And, of course, don't forget\nthis afternoon in 1-190",
    "start": "158380",
    "end": "167090"
  },
  {
    "text": "rather than here. So, review is in\n1-190, 4 to 5 today.",
    "start": "167090",
    "end": "178620"
  },
  {
    "text": "But if you're not\nfree at that time",
    "start": "178620",
    "end": "184470"
  },
  {
    "text": "don't feel that you've\nmissed anything essential. I thought this would\nbe the right way",
    "start": "184470",
    "end": "191810"
  },
  {
    "text": "to tell you what the exam is and\nguide your preparation for it.",
    "start": "191810",
    "end": "198069"
  },
  {
    "text": "Questions. Yes, thanks. AUDIENCE: [INAUDIBLE].",
    "start": "198070",
    "end": "206870"
  },
  {
    "text": "PROFESSOR STRANG: So these\nare four different questions. So this would be a question\nabout getting to this matrix",
    "start": "206870",
    "end": "216080"
  },
  {
    "text": "and what it's about,\nA transpose C A. AUDIENCE: [INAUDIBLE]",
    "start": "216080",
    "end": "229430"
  },
  {
    "text": "PROFESSOR STRANG: OK, I don't\nuse beam bending for that. I'm thinking of elastic bar. Yeah, stretching equation, yeah.",
    "start": "229430",
    "end": "237090"
  },
  {
    "text": "So the stretching equation,\nso the first one we ever saw,",
    "start": "237090",
    "end": "242720"
  },
  {
    "text": "the stretching equation, was\njust u'', or -u'', equal 1.",
    "start": "242720",
    "end": "248740"
  },
  {
    "text": "And now that allows\na C to sneak in and that allows a matrix\nC to sneak in there,",
    "start": "248740",
    "end": "255980"
  },
  {
    "text": "but I think you'll see what\nthey should look like, but yeah.",
    "start": "255980",
    "end": "261880"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR STRANG: Yeah, yeah. So this is Section 2.2,\ndirectly out of the book.",
    "start": "261880",
    "end": "270500"
  },
  {
    "text": "M will be the mass matrix, K\nwill be the stiffness matrix, yep. AUDIENCE: [INAUDIBLE]",
    "start": "270500",
    "end": "278825"
  },
  {
    "text": "PROFESSOR STRANG: OK. So, good point to say. In the very first\nsection, 1.1, we",
    "start": "278825",
    "end": "286630"
  },
  {
    "text": "gave the name K to a very\nspecial matrix, a specific one. But then later, now, I'm\nusing the same letter K",
    "start": "286630",
    "end": "297120"
  },
  {
    "text": "for matrices of that type. That was the most special,\nsimplest, completely understood",
    "start": "297120",
    "end": "303750"
  },
  {
    "text": "case, but now I'll use\nK for stiffness matrices and when we're doing finite\nelements in a few weeks",
    "start": "303750",
    "end": "311560"
  },
  {
    "text": "again it'll be K.\nYeah, same name, right. So here you'll want\nto create K and M",
    "start": "311560",
    "end": "318110"
  },
  {
    "text": "and know how to deal\nwith, this was our only",
    "start": "318110",
    "end": "324650"
  },
  {
    "text": "time-dependent thing. So I guess what\nyou're seeing here is not only what time-dependent\nequation will be there",
    "start": "324650",
    "end": "331539"
  },
  {
    "text": "but also that I'm\nnot going in detail into those trapezoidal\ndifference methods.",
    "start": "331540",
    "end": "342450"
  },
  {
    "text": "Important as they are, we\ncan't do everything on the quiz so I'm really focusing on things\nthat are central to our course.",
    "start": "342450",
    "end": "355360"
  },
  {
    "text": "Good. Other questions. I'm very open for more\nquestions this afternoon.",
    "start": "355360",
    "end": "361271"
  },
  {
    "text": "Yep. AUDIENCE: [INAUDIBLE] PROFESSOR STRANG: Others. OK. So, let me, I don't want to\ngo on and do new material,",
    "start": "361271",
    "end": "372280"
  },
  {
    "text": "because we're focused\non these things. And this course, the\nname of this course",
    "start": "372280",
    "end": "377940"
  },
  {
    "text": "is computational\nscience and engineering. And by the way I just\nhad an email last week",
    "start": "377940",
    "end": "383680"
  },
  {
    "text": "from the Dean of\nEngineering, or a bunch of us did, to say that the\nSchool of Engineering",
    "start": "383680",
    "end": "390030"
  },
  {
    "text": "is establishing Center for\nComputational Engineering, CCE.",
    "start": "390030",
    "end": "396800"
  },
  {
    "text": "Several faculty members\nthere and, like myself in the School of Science\nand the Sloan School",
    "start": "396800",
    "end": "403820"
  },
  {
    "text": "are involved with computation,\nand this new center is going to organize that.",
    "start": "403820",
    "end": "410330"
  },
  {
    "text": "So, it's a good development. And it's headed by people\nin Course 2 and Course 16.",
    "start": "410330",
    "end": "418620"
  },
  {
    "text": "So. If we're talking about\ncomputations, and I do have to say something about\nhow you would actually",
    "start": "418620",
    "end": "426260"
  },
  {
    "text": "do the computations. And what are the\nissues about accuracy.",
    "start": "426260",
    "end": "432410"
  },
  {
    "text": "Speed and accuracy\nis what you're aiming for in the computations.",
    "start": "432410",
    "end": "439510"
  },
  {
    "text": "Of course, the first step\nis to know what problem is it you want to compute. What do you want to solve,\nwhat's the equation?",
    "start": "439510",
    "end": "446229"
  },
  {
    "text": "That's what we've\nbeen doing all along. Now, I just take a\nlittle time-out to say,",
    "start": "446230",
    "end": "453060"
  },
  {
    "text": "suppose I have the equation. When I write K, I'm thinking of\na symmetric, positive definite",
    "start": "453060",
    "end": "459920"
  },
  {
    "text": "or at least\nsemi-definite matrix. When I write A I'm thinking\nof any general, usually",
    "start": "459920",
    "end": "466800"
  },
  {
    "text": "tall, thin, matrix. Rectangular. So that I would need least\nsquares for this guy, where",
    "start": "466800",
    "end": "474720"
  },
  {
    "text": "straightforward elimination\nwould work for that one. And so my first question\nis-- Let's take this,",
    "start": "474720",
    "end": "482050"
  },
  {
    "text": "so these are two\ntopics for today. This one would come out of 1.7,\nthat discussion with condition",
    "start": "482050",
    "end": "490340"
  },
  {
    "text": "number. This one would come out of\n2.3, the least squares section.",
    "start": "490340",
    "end": "496180"
  },
  {
    "text": "OK, so if I give\nyou, and I'm thinking",
    "start": "496180",
    "end": "501440"
  },
  {
    "text": "that the computational\nquestions emerge when the systems are large. So I'm thinking thousands\nof unknowns here.",
    "start": "501440",
    "end": "508969"
  },
  {
    "text": "Thousands of equations,\nat the least. OK. So, and the question is, I\ndo Gaussian elimination here,",
    "start": "508970",
    "end": "520500"
  },
  {
    "text": "ordinary elimination. Backslash. And how accurate is the answer?",
    "start": "520500",
    "end": "528060"
  },
  {
    "text": "And how do you understand? I mean, the accuracy\nof the answer is going to kind of\ndepend on two things.",
    "start": "528060",
    "end": "533850"
  },
  {
    "text": "And it's good to separate them. One is the method you\nuse, like elimination.",
    "start": "533850",
    "end": "541050"
  },
  {
    "text": "Whatever adjustments\nyou might make. Pivoting. Exchanging rows to\nget larger pivots.",
    "start": "541050",
    "end": "547330"
  },
  {
    "text": "All that is in the\nalgorithm, in the code. And then the second,\nvery important aspect,",
    "start": "547330",
    "end": "553290"
  },
  {
    "text": "is the matrix K itself. Is this a tough problem to solve\nwhatever method you're using,",
    "start": "553290",
    "end": "559950"
  },
  {
    "text": "or is it a simple problem? Is the problem ill\nconditioned, meeting K would be like nearly\nsingular, and then we",
    "start": "559950",
    "end": "568640"
  },
  {
    "text": "would know we had\na tougher problem to solve, whatever method. Or is K quite well\nconditioned, I",
    "start": "568640",
    "end": "575410"
  },
  {
    "text": "mean the best\ncondition would be when all the columns are unit\nvectors and all orthogonal",
    "start": "575410",
    "end": "582480"
  },
  {
    "text": "to each other. Yeah, I mean that would be\nthe best conditioning of all. That condition\nnumber would be one",
    "start": "582480",
    "end": "589079"
  },
  {
    "text": "if this K, which, not too likely\nis a matrix that I would call",
    "start": "589080",
    "end": "595580"
  },
  {
    "text": "Q. Q, which is going\nto show up over here, in the second problem is,\nQ stands for a matrix which",
    "start": "595580",
    "end": "605670"
  },
  {
    "text": "has orthonormal columns. So, you remember what\northonormal means.",
    "start": "605670",
    "end": "617610"
  },
  {
    "text": "Ortho is telling\nus perpendicular, that's the key point. Normal is telling\nus that they're",
    "start": "617610",
    "end": "623220"
  },
  {
    "text": "unit vectors, lengths one. So that's the Q, and then\nyou might ask what's the R.",
    "start": "623220",
    "end": "628990"
  },
  {
    "text": "And the R is upper triangular.",
    "start": "628990",
    "end": "635790"
  },
  {
    "text": "OK. OK. So what I said\nabout this problem,",
    "start": "635790",
    "end": "642220"
  },
  {
    "text": "that there's the method you\nuse, and also the sensitivity, the difficulty of the\nproblem in the first place,",
    "start": "642220",
    "end": "649230"
  },
  {
    "text": "applies just the same here. There's the method\nyou use, do you use A transpose A to\nfind u hat, this is, now",
    "start": "649230",
    "end": "659630"
  },
  {
    "text": "we're looking for u hat, of\ncourse, the best solution. Do I use A transpose A?",
    "start": "659630",
    "end": "665560"
  },
  {
    "text": "Well, you would say\nof course, what else. That equation, that\nleast squares equation",
    "start": "665560",
    "end": "671720"
  },
  {
    "text": "has A transpose A u hat equal A\ntranspose b, what's the choice? But, if you're interested\nin high accuracy,",
    "start": "671720",
    "end": "684350"
  },
  {
    "text": "and stability,\nnumerical stability, maybe you don't go\nto A transpose A.",
    "start": "684350",
    "end": "689740"
  },
  {
    "text": "Going to A transpose A kind of\nsquares the condition number. You get to an A transpose\nA, that'll be our K,",
    "start": "689740",
    "end": "697420"
  },
  {
    "text": "but its condition number\nwill somehow be squared and if the problem is\nnice, you're OK with that.",
    "start": "697420",
    "end": "706680"
  },
  {
    "text": "But if the problem is delicate? Now, what does\ndelicate mean for Au=b? I'm kind of giving you a\noverview of the two problems",
    "start": "706680",
    "end": "715910"
  },
  {
    "text": "before I start on this one. And then that one. So with this one\nthe problem was,",
    "start": "715910",
    "end": "721610"
  },
  {
    "text": "is the matrix nearly singular. What does that mean? Does MATLAB tell you,\nwhat does MATLAB tell you",
    "start": "721610",
    "end": "727970"
  },
  {
    "text": "about the matrix? And that is measured by\nthe condition number. What's the issue here is, when\nwould this be a numerically",
    "start": "727970",
    "end": "740810"
  },
  {
    "text": "difficult, sensitive problem? Well, the columns of\nA are not orthonormal.",
    "start": "740810",
    "end": "747690"
  },
  {
    "text": "If they are, then you're golden. If the columns of\nA are orthonormal,",
    "start": "747690",
    "end": "753100"
  },
  {
    "text": "then you're all set. So what's the opposite?",
    "start": "753100",
    "end": "759149"
  },
  {
    "text": "Well, the extreme opposite\nwould be when the columns of A are dependent. If the columns of A\nare linearly dependent",
    "start": "759150",
    "end": "766440"
  },
  {
    "text": "and some column is a\ncombination of other columns, you're in trouble right away.",
    "start": "766440",
    "end": "772550"
  },
  {
    "text": "So that's like big trouble,\nthat's like K being singular. Those are the cases.",
    "start": "772550",
    "end": "777640"
  },
  {
    "text": "K singular here,\ndependent columns here.",
    "start": "777640",
    "end": "783160"
  },
  {
    "text": "Not full rank. So, again we're supposing\nwe're not facing disaster.",
    "start": "783160",
    "end": "791160"
  },
  {
    "text": "Just near disaster. So we want to know,\nis K near the singular and how to measure\nthat, and we want",
    "start": "791160",
    "end": "797490"
  },
  {
    "text": "to know what to do\nwhen the columns of A are independent\nbut maybe not very.",
    "start": "797490",
    "end": "808780"
  },
  {
    "text": "And that would show up\nin a large condition number for A transpose A. And\nthis happens all the time;",
    "start": "808780",
    "end": "815420"
  },
  {
    "text": "if you don't set up\nyour problem well, your experimental\nproblem, you can easily",
    "start": "815420",
    "end": "823920"
  },
  {
    "text": "get matrices A, whose columns\nare not very independent.",
    "start": "823920",
    "end": "829389"
  },
  {
    "text": "Measured by A transpose A\nbeing close to singular. Right, everybody\nhere's got that idea.",
    "start": "829390",
    "end": "836040"
  },
  {
    "text": "If the columns of\nA are independent, A transpose A is non-singular.",
    "start": "836040",
    "end": "841170"
  },
  {
    "text": "In fact, positive definite. Then, now we're talking about\nwhen we have that property,",
    "start": "841170",
    "end": "849980"
  },
  {
    "text": "but the columns of A\nare not very independent",
    "start": "849980",
    "end": "856760"
  },
  {
    "text": "and the matrix A transpose\nA is not very invertible. OK, so that's what\nthe things are.",
    "start": "856760",
    "end": "863350"
  },
  {
    "text": "And then just to,\nbecause-- Say, on this one, what's the good thing to do?",
    "start": "863350",
    "end": "870350"
  },
  {
    "text": "The good thing to do is\nto call the qr code which",
    "start": "870350",
    "end": "876370"
  },
  {
    "text": "gets its name because it takes\nthe matrix A and it factors it.",
    "start": "876370",
    "end": "883750"
  },
  {
    "text": "Of course, we all know\nthat lu is the code here.",
    "start": "883750",
    "end": "889150"
  },
  {
    "text": "It factors K. And qr is\nthe code that factors",
    "start": "889150",
    "end": "896490"
  },
  {
    "text": "A into a very good guy, an\noptimal Q. It couldn't be beat.",
    "start": "896490",
    "end": "904810"
  },
  {
    "text": "And an R, that's upper\ntriangular, and therefore in the simplest form you\nsee exactly what you're",
    "start": "904810",
    "end": "912050"
  },
  {
    "text": "dealing with. Let me continue this\nleast squares idea.",
    "start": "912050",
    "end": "924600"
  },
  {
    "text": "Because Q and R are\nprobably not so familiar. Maybe the name\nGram-Schmidt is familiar?",
    "start": "924600",
    "end": "930730"
  },
  {
    "text": "How many have seen Gram-Schmidt? The Gram-Schmidt idea\nI'll describe quickly,",
    "start": "930730",
    "end": "937500"
  },
  {
    "text": "but just do those words, do\nthose guys' names mean anything to? Yes, if they do. Quite a few.",
    "start": "937500",
    "end": "943089"
  },
  {
    "text": "But not all. OK. OK. And can I just say,\nalso Gram-Schmidt",
    "start": "943090",
    "end": "953189"
  },
  {
    "text": "is kind of our name for\ngetting these two factors. And you'll see why,\nit's very cool to have,",
    "start": "953190",
    "end": "960810"
  },
  {
    "text": "why this is a good first step.",
    "start": "960810",
    "end": "966029"
  },
  {
    "text": "It costs a little\nto take that step, but if you're interested\nin safety, take it.",
    "start": "966030",
    "end": "972550"
  },
  {
    "text": "It might cost twice as much\nas solving the A transpose A equation, so you double the\ncost by going this safer route.",
    "start": "972550",
    "end": "981329"
  },
  {
    "text": "And double is not a\nbig deal, usually. OK.",
    "start": "981330",
    "end": "986750"
  },
  {
    "text": "So, I was going to\nsay that Gram-Schmidt, that's the name everybody uses. But actually their method\nis no longer the winner.",
    "start": "986750",
    "end": "997090"
  },
  {
    "text": "And in Section 2.3 and\nI'll try to describe a slightly better method\nthan the Gram-Schmidt idea",
    "start": "997090",
    "end": "1006540"
  },
  {
    "text": "to arrive at Q and R. But let's\nsuppose you got to Q and R. Then, what would be the\nleast squares equation?",
    "start": "1006540",
    "end": "1013600"
  },
  {
    "text": "A transpose A u hat is\nA transpose b, right?",
    "start": "1013600",
    "end": "1019240"
  },
  {
    "text": "That's the equation\neverybody knows. But now if we have A\nfactored into Q times R,",
    "start": "1019240",
    "end": "1027209"
  },
  {
    "text": "let me see how that simplifies. So now A is QR, and A\ntranspose, of course,",
    "start": "1027210",
    "end": "1034709"
  },
  {
    "text": "is R transpose Q\ntranspose, u hat, and this is R transpose Q transpose b.",
    "start": "1034710",
    "end": "1043199"
  },
  {
    "text": "Same equation,\nI'm just supposing that I've got A into\nthis nice form where",
    "start": "1043200",
    "end": "1049350"
  },
  {
    "text": "Q has-- where I've taken these\ncolumns that possibly lined up",
    "start": "1049350",
    "end": "1055580"
  },
  {
    "text": "too close to each other like,\nyou know, angles of one degree. And I've got better angles.",
    "start": "1055580",
    "end": "1062800"
  },
  {
    "text": "I've got-- These columns\nof A are too close, so I spread them out, to columns\nof Q that are at 90 degrees.",
    "start": "1062800",
    "end": "1072690"
  },
  {
    "text": "Orthogonal columns. Now, what's the deal\nwith orthogonal columns? Let me just remember\nthe main point",
    "start": "1072690",
    "end": "1079990"
  },
  {
    "text": "about Q. It has\northogonal columns, right,",
    "start": "1079990",
    "end": "1086309"
  },
  {
    "text": "and I'll call those\nq's. q_1 to q_n.",
    "start": "1086310",
    "end": "1091360"
  },
  {
    "text": "OK. And the good deal\nis, what happens when I do Q transpose Q?",
    "start": "1091360",
    "end": "1096820"
  },
  {
    "text": "So I do q_1 transpose, these\nare now rows, to q_n transpose.",
    "start": "1096820",
    "end": "1103610"
  },
  {
    "text": "q_1 columns to q_n. And what do I get when I\nmultiply those matrices?",
    "start": "1103610",
    "end": "1111880"
  },
  {
    "text": "Q transpose times Q. I get\nI. q_1 transpose q_1, that's",
    "start": "1111880",
    "end": "1117960"
  },
  {
    "text": "the length of q_1\nsquared is one, and q_1 is orthogonal\nto all the others.",
    "start": "1117960",
    "end": "1124090"
  },
  {
    "text": "And then q_2, you\nsee I get the I. q_3, get an n by n-- I get\nthe identity matrix.",
    "start": "1124090",
    "end": "1132300"
  },
  {
    "text": "Q transpose Q is I.\nThat's the beautiful,",
    "start": "1132300",
    "end": "1138280"
  },
  {
    "text": "just remember that fact. And use it right away. You see where it's\nused, Q transpose Q",
    "start": "1138280",
    "end": "1145360"
  },
  {
    "text": "is I in the middle of that. So I can just delete that,\nI just have R transpose R",
    "start": "1145360",
    "end": "1152350"
  },
  {
    "text": "and I can even\nsimplify this further. What can I do now? So that's the identity,\nso I have R transpose R,",
    "start": "1152350",
    "end": "1160350"
  },
  {
    "text": "but now I have an R transpose\nover here so am I left with?",
    "start": "1160350",
    "end": "1165640"
  },
  {
    "text": "I'll multiply both sides\nby R transpose inverse and that will lead me to, R\nu hat equals, knocking out",
    "start": "1165640",
    "end": "1175360"
  },
  {
    "text": "our transpose inverse on\nboth sides, Q transpose b.",
    "start": "1175360",
    "end": "1180690"
  },
  {
    "text": "Well, that's, our least\nsquares equation has become completely easy to solve.",
    "start": "1180690",
    "end": "1187390"
  },
  {
    "text": "We've got a triangular\nmatrix here, I mean it's just\nback substitution. It's just back substitution now,\nand a Q transpose b over there.",
    "start": "1187390",
    "end": "1197800"
  },
  {
    "text": "So a very simple solution for\nour equation after the initial",
    "start": "1197800",
    "end": "1206150"
  },
  {
    "text": "work of A=QR. OK. But very safe, Q is a\ngreat matrix to work with.",
    "start": "1206150",
    "end": "1218340"
  },
  {
    "text": "In fact people-- codes\nare written so as to use orthogonal matrices\nQ as often as they can.",
    "start": "1218340",
    "end": "1227919"
  },
  {
    "text": "Alright, so you had a look\nahead of the computational side",
    "start": "1227920",
    "end": "1234240"
  },
  {
    "text": "of 2.3, let me come back to\nthe most basic equations, just",
    "start": "1234240",
    "end": "1239980"
  },
  {
    "text": "symmetric, positive\ndefinite equations. Ku=f, and consider OK, how do\nwe measure whether K is nearly",
    "start": "1239980",
    "end": "1253050"
  },
  {
    "text": "singular? OK, let me just\nask that question. That's the central question.",
    "start": "1253050",
    "end": "1260190"
  },
  {
    "text": "How to measure,\nwhen is K, which is,",
    "start": "1260190",
    "end": "1267059"
  },
  {
    "text": "which we're assuming be\nsymmetric positive definite,",
    "start": "1267060",
    "end": "1272150"
  },
  {
    "text": "nearly singular? How to measure that?",
    "start": "1272150",
    "end": "1280820"
  },
  {
    "text": "How to know whether we're\nin any danger or not? OK. Well, first you\nmight think OK, if it",
    "start": "1280820",
    "end": "1289570"
  },
  {
    "text": "is singular its\ndeterminant is zero. So why not take its determinant?",
    "start": "1289570",
    "end": "1296309"
  },
  {
    "text": "Well determinants,\nas we've said, are not a good idea numerically.",
    "start": "1296310",
    "end": "1305420"
  },
  {
    "text": "First, they're not\nfun to compute. Second, they depend on the\nnumber of unknowns, right?",
    "start": "1305420",
    "end": "1313460"
  },
  {
    "text": "If I just have\ntwice the identity, suppose K is twice\nthe identity matrix.",
    "start": "1313460",
    "end": "1321139"
  },
  {
    "text": "You could not get a better\nproblem than that, right? If K was twice the\nidentity matrix the whole thing's simple.",
    "start": "1321140",
    "end": "1328269"
  },
  {
    "text": "Or if K is, suppose\nK is one millionth of the identity matrix.",
    "start": "1328270",
    "end": "1335190"
  },
  {
    "text": "OK, again, that's a\nperfect problem, right? If K is one millionth\nof the identity matrix,",
    "start": "1335190",
    "end": "1342210"
  },
  {
    "text": "well to solve the problem you\njust multiply by a million, you've got the answer.",
    "start": "1342210",
    "end": "1347330"
  },
  {
    "text": "So those are good. And we have to have some\nmeasure of bad or good",
    "start": "1347330",
    "end": "1354490"
  },
  {
    "text": "that tells us those are good. OK.",
    "start": "1354490",
    "end": "1360030"
  },
  {
    "text": "So the determinant won't do. Because the determinant\nof 2 I would be two to the nth, the\nsize of the matrix.",
    "start": "1360030",
    "end": "1368610"
  },
  {
    "text": "Or the determinant of\none millionth identity would be one millionth to the n.",
    "start": "1368610",
    "end": "1373840"
  },
  {
    "text": "Those are not numbers we want. What's a better number? Maybe you could\nsuggest a better number",
    "start": "1373840",
    "end": "1379950"
  },
  {
    "text": "to measure how close is the\nmatrix to being singular.",
    "start": "1379950",
    "end": "1385070"
  },
  {
    "text": "What would you say? I think if you think\nabout it a little,",
    "start": "1385070",
    "end": "1390370"
  },
  {
    "text": "so what numbers do we know? Well eigenvalues jumps to mind.",
    "start": "1390370",
    "end": "1397330"
  },
  {
    "text": "Eigenvalues jumps to mind. Because this matrix K, being\nsymmetric positive definite,",
    "start": "1397330",
    "end": "1402940"
  },
  {
    "text": "has eigenvalues say lambda_1\nless than lambda_2, so on.",
    "start": "1402940",
    "end": "1411519"
  },
  {
    "text": "So on. Up to, so this is lambda_max\nand that's lambda_min,",
    "start": "1411520",
    "end": "1420020"
  },
  {
    "text": "and they're all positive. And so what's your idea of\nwhether the thing's nearly",
    "start": "1420020",
    "end": "1430640"
  },
  {
    "text": "singular now? Look at lambda_1, right? If lambda_1 is near\nzero, that somehow",
    "start": "1430640",
    "end": "1436920"
  },
  {
    "text": "indicates near singular. So lambda_1 is sort\nof a natural test.",
    "start": "1436920",
    "end": "1442600"
  },
  {
    "text": "Not that I intend\nto compute lambda_1, that would take longer\nthan solving the system.",
    "start": "1442600",
    "end": "1448070"
  },
  {
    "text": "But an estimate of\nlambda_1 would be enough. OK. But my answer is\nnot just lambda_1.",
    "start": "1448070",
    "end": "1457270"
  },
  {
    "text": " And why is that?",
    "start": "1457270",
    "end": "1462510"
  },
  {
    "text": "Because the examples I gave you,\nwhen I had twice the identity,",
    "start": "1462510",
    "end": "1468850"
  },
  {
    "text": "what would lambda_1\nbe there in that case? If my matrix K was beautiful,\ntwice the identity matrix,",
    "start": "1468850",
    "end": "1475930"
  },
  {
    "text": "lambda_1 would be two. All the eigenvalues are two\nfor the identity matrix.",
    "start": "1475930",
    "end": "1484630"
  },
  {
    "text": "Now if my matrix was one\nmillionth of the identity, again I have a\nbeautiful problem.",
    "start": "1484630",
    "end": "1490450"
  },
  {
    "text": "Just as good, just\nas beautiful problem. What's lambda_1 for that one? One millionth.",
    "start": "1490450",
    "end": "1496399"
  },
  {
    "text": "It looks not as good, it\nlooks much more singular, but that's not really there.",
    "start": "1496400",
    "end": "1505220"
  },
  {
    "text": "So you could say, we'll\nscale your matrix.",
    "start": "1505220",
    "end": "1511320"
  },
  {
    "text": "And scaling the matrices, in\nfact scaling individual rows and columns to get it,\nyou might have used,",
    "start": "1511320",
    "end": "1519350"
  },
  {
    "text": "your unknowns might be\nsomehow in the wrong units.",
    "start": "1519350",
    "end": "1525890"
  },
  {
    "text": "So one of the answers is way\nbig and the second component is way small.",
    "start": "1525890",
    "end": "1530960"
  },
  {
    "text": "That's not good. So scaling is important.",
    "start": "1530960",
    "end": "1536630"
  },
  {
    "text": "But even then you still\nend up with a matrix K,",
    "start": "1536630",
    "end": "1542670"
  },
  {
    "text": "some eigenvalues and I'll\ntell you the condition number.",
    "start": "1542670",
    "end": "1547990"
  },
  {
    "text": "The condition number of K is the\nratio of this guy to this one.",
    "start": "1547990",
    "end": "1555670"
  },
  {
    "text": "In other words, two K, or a\nmillion K, or one millionth K, all have the same\ncondition number.",
    "start": "1555670",
    "end": "1562320"
  },
  {
    "text": "Because those problems\nare identical problems. Multiplying by two,\nmultiplying by a million,",
    "start": "1562320",
    "end": "1568690"
  },
  {
    "text": "dividing by a million\ndidn't change reality there. So if we're in floating\npoints, it just didn't change.",
    "start": "1568690",
    "end": "1577130"
  },
  {
    "text": "So the condition\nnumber is going to be lambda_max over lambda_min. ",
    "start": "1577130",
    "end": "1584710"
  },
  {
    "text": "And this is for symmetric\npositive definite matrices.",
    "start": "1584710",
    "end": "1591309"
  },
  {
    "text": "And MATLAB will print\nout that number. Or print an estimate\nfor that number;",
    "start": "1591310",
    "end": "1597230"
  },
  {
    "text": "as I said we don't want\nto compute it exactly. Lambda_max over lambda_min. That measures how sensitive,\nhow tough your problem is.",
    "start": "1597230",
    "end": "1608220"
  },
  {
    "text": "OK. And then I have to think,\nhow does that come in, why",
    "start": "1608220",
    "end": "1615450"
  },
  {
    "text": "is that an appropriate number? I guess I've tried to\ngive an instinct for why it's appropriate, but we can\nbe pretty specific about it.",
    "start": "1615450",
    "end": "1625410"
  },
  {
    "text": "In fact, let's do that now. So what would be the condition\nnumber of twice the identity?",
    "start": "1625410",
    "end": "1633510"
  },
  {
    "text": "It would be one. Perfectly conditioned problem. What would be the\ncondition, yeah, OK.",
    "start": "1633510",
    "end": "1640440"
  },
  {
    "text": "What would be the condition\nof a diagonal matrix? Suppose K was the diagonal\nmatrix two, three, four?",
    "start": "1640440",
    "end": "1652900"
  },
  {
    "text": "The condition number of\nthat matrix is two, right? Lambda_max is sitting there,\nlambda_min is sitting there,",
    "start": "1652900",
    "end": "1659990"
  },
  {
    "text": "the ratio is two. Of course, any condition\nnumber under 100 or 1000 is no problem.",
    "start": "1659990",
    "end": "1667500"
  },
  {
    "text": "Roughly the rule of\nthumb is that the--",
    "start": "1667500",
    "end": "1672509"
  },
  {
    "text": "What's the rule of thumb? I think that maybe\nthe number of digits in the condition number,\nthe number of digits-- Maybe",
    "start": "1672509",
    "end": "1683019"
  },
  {
    "text": "if the condition number was\n1000 you would be taking a chance that your last three\ndigits, single precision that",
    "start": "1683020",
    "end": "1691920"
  },
  {
    "text": "would be three out of\nsix, three bits-- Somehow",
    "start": "1691920",
    "end": "1698160"
  },
  {
    "text": "the log of the condition number,\nthe number of digits in it, is some measure of the\nnumber of digits you'd lose.",
    "start": "1698160",
    "end": "1706340"
  },
  {
    "text": "Because you're doing floating\npoint, of course, here. That's it, totally well\nconditioned matrix.",
    "start": "1706340",
    "end": "1713669"
  },
  {
    "text": "I wouldn't touch that one. I mean that's just fine. But we can figure out-- Here's\nthe point that I should make.",
    "start": "1713670",
    "end": "1725260"
  },
  {
    "text": "Because here's the\ncomputational science point. When this is our special\nK, our -1, 2, -1 matrix.",
    "start": "1725260",
    "end": "1737540"
  },
  {
    "text": "-1, 2, -1 matrix of size\nn, the condition number",
    "start": "1737540",
    "end": "1743730"
  },
  {
    "text": "goes like n squared.",
    "start": "1743730",
    "end": "1749429"
  },
  {
    "text": "Because we know the\neigenvalues of that matrix, we could see it. The largest eigenvalue, when\nn is big, say n is 1000.",
    "start": "1749430",
    "end": "1758340"
  },
  {
    "text": "And we're dealing with our\nstandard second difference matrix, the most important\nexample I could possibly",
    "start": "1758340",
    "end": "1764830"
  },
  {
    "text": "present. Then the largest eigenvalues\nwe actually are there",
    "start": "1764830",
    "end": "1770429"
  },
  {
    "text": "in Section 1.5, we\ndidn't do them in detail,",
    "start": "1770430",
    "end": "1776430"
  },
  {
    "text": "we'll probably come back\nto them when we need them. But the largest\none is about four.",
    "start": "1776430",
    "end": "1782370"
  },
  {
    "text": "And the smallest\none is pretty small. The smallest one is\nsort of like a sine",
    "start": "1782370",
    "end": "1790120"
  },
  {
    "text": "squared of a small number. And so the smallest eigenvalue\nis of order 1/n squared.",
    "start": "1790120",
    "end": "1799970"
  },
  {
    "text": "And then when I do that\nratio of four, lambda_max is just like four, this\nlambda_min is like 1/n squared,",
    "start": "1799970",
    "end": "1809620"
  },
  {
    "text": "quite small. That ratio gives\nme the n squared. So there's an indication.",
    "start": "1809620",
    "end": "1816890"
  },
  {
    "text": "Basically, that's not bad. That's not bad if n is 1000 in\nmost engineering problems, that",
    "start": "1816890",
    "end": "1826330"
  },
  {
    "text": "gives you extremely,\nextremely good accuracy. Condition number of a\nmillion, you could live with.",
    "start": "1826330",
    "end": "1833060"
  },
  {
    "text": "If n is 100, more typical,\ncondition number of 10,000 is basically, I think OK.",
    "start": "1833060",
    "end": "1844330"
  },
  {
    "text": "And I would go with it. But if the condition number is\nway up, then I'd think again,",
    "start": "1844330",
    "end": "1853820"
  },
  {
    "text": "did I model the problem well. OK. Alright. So that's-- Now I have to tell\nyou, why is this inappropriate?",
    "start": "1853820",
    "end": "1861650"
  },
  {
    "text": "How do you look at the error? So can I write down a way\nof approaching this Ku=f?",
    "start": "1861650",
    "end": "1875500"
  },
  {
    "start": "1875500",
    "end": "1881680"
  },
  {
    "text": "So this is the first time I've\nused the word round-off error. So in all the calculations,\nin all the calculations",
    "start": "1881680",
    "end": "1888970"
  },
  {
    "text": "that you have to do, to get\nto u, those row operations,",
    "start": "1888970",
    "end": "1896710"
  },
  {
    "text": "and you're doing them\nto the right side too, so all those are floating\npoint operations in which",
    "start": "1896710",
    "end": "1902960"
  },
  {
    "text": "small errors are sneaking in. And it was very unclear,\nin the early years,",
    "start": "1902960",
    "end": "1910520"
  },
  {
    "text": "whether the millions and\nmillions of operations that you do, additions, subtractions,\nmultiplications,",
    "start": "1910520",
    "end": "1919150"
  },
  {
    "text": "in elimination, do those,\ncould those add up?",
    "start": "1919150",
    "end": "1926480"
  },
  {
    "text": "If they don't cancel,\nyou've got problems, right? But in general you\nwould expect somehow",
    "start": "1926480",
    "end": "1934929"
  },
  {
    "text": "that these are just\nround off errors, you're making them millions\nand millions of times, it would be pretty bad luck,\nI mean like Red Sox twelfth",
    "start": "1934930",
    "end": "1943870"
  },
  {
    "text": "inning bad luck to have\nthem pile up on you.",
    "start": "1943870",
    "end": "1949790"
  },
  {
    "text": "So you don't expect that. Now, what you do solve, so\nwhat you actually compute,",
    "start": "1949790",
    "end": "1957120"
  },
  {
    "text": "so this is the exact. This would be the computed.",
    "start": "1957120",
    "end": "1964630"
  },
  {
    "text": "Let me suppose that the\ncomputed one is sort of a, there's an error.",
    "start": "1964630",
    "end": "1969900"
  },
  {
    "text": "I'll call it delta u. That's our error. And it's equal to\nan f plus delta f.",
    "start": "1969900",
    "end": "1978179"
  },
  {
    "text": "And this is our round off\nerror, this is error we make,",
    "start": "1978180",
    "end": "1988740"
  },
  {
    "text": "and this is error in the answer.",
    "start": "1988740",
    "end": "1993920"
  },
  {
    "text": "In the final answer. OK, now I would like to\nhave an error equation.",
    "start": "1993920",
    "end": "2001570"
  },
  {
    "text": "An equation for\nthat error, delta u, because that's what I'm\ntrying to get an idea of.",
    "start": "2001570",
    "end": "2006700"
  },
  {
    "text": "No problem. If I subtract the exact\nequation from this equation,",
    "start": "2006700",
    "end": "2012140"
  },
  {
    "text": "I have a simple error equation. So this is my error equation.",
    "start": "2012140",
    "end": "2023030"
  },
  {
    "text": "OK. So I want to estimate\nthe size of that error,",
    "start": "2023030",
    "end": "2030740"
  },
  {
    "text": "compared to the exact. You might say, and you\nwould be right, in saying,",
    "start": "2030740",
    "end": "2038010"
  },
  {
    "text": "well wait a minute as you do\nall these operations you're also",
    "start": "2038010",
    "end": "2043130"
  },
  {
    "text": "creating errors in K. So I could\nhave a K plus delta K here,",
    "start": "2043130",
    "end": "2049050"
  },
  {
    "text": "too. And actually it wouldn't\nbe difficult to deal with. And would certainly be there\nin a proper error analysis.",
    "start": "2049050",
    "end": "2058960"
  },
  {
    "text": "And it wouldn't make\na big difference, the condition number would\nstill be the right measure. So let me concentrate\nhere on the error",
    "start": "2058960",
    "end": "2068020"
  },
  {
    "text": "in f, when subtracting\none from the other gives me this simple\nerror equation.",
    "start": "2068020",
    "end": "2077780"
  },
  {
    "text": "So my question is, when is\nthat error, delta u, big?",
    "start": "2077780",
    "end": "2086990"
  },
  {
    "text": "When do I get a large error? And delta f, I'm\nnot controlling. I might control the size, but\nthe details of it I can't know.",
    "start": "2086990",
    "end": "2095919"
  },
  {
    "text": "So what delta f, now I'll\ntake worst possible here.",
    "start": "2095920",
    "end": "2103730"
  },
  {
    "text": "Suppose this is of\nsome small size, ten to the minus something,\ntimes some vector of errors,",
    "start": "2103730",
    "end": "2113150"
  },
  {
    "text": "but I don't know anything\nabout that vector and therefore I'd better\ntake the worst possibility. What would be the\nworst possibility?",
    "start": "2113150",
    "end": "2119800"
  },
  {
    "text": "What right hand side would\ngive me the biggest delta u? Yeah.",
    "start": "2119800",
    "end": "2124990"
  },
  {
    "text": "Maybe that's the\nright question to ask. So now we're being a\nlittle pessimistic.",
    "start": "2124990",
    "end": "2131930"
  },
  {
    "text": "We're saying what\nright hand side, what set of errors in\nthe measurements",
    "start": "2131930",
    "end": "2137650"
  },
  {
    "text": "or from the calculations would\ngive me the largest delta u? Well, so let's see.",
    "start": "2137650",
    "end": "2149380"
  },
  {
    "text": "I'm thinking the\nworst case would be if delta f was an eigenvector\nwith the smallest eigenvalue,",
    "start": "2149380",
    "end": "2158890"
  },
  {
    "text": "right? If delta f is an eigenvector,\nis x_1, the eigenvector that",
    "start": "2158890",
    "end": "2165910"
  },
  {
    "text": "goes with lambda_1,\nthe worst case",
    "start": "2165910",
    "end": "2171339"
  },
  {
    "text": "would be for that to be\nthe first eigenvector.",
    "start": "2171340",
    "end": "2177330"
  },
  {
    "text": "That would be the\nworst direction. Of course, it\nwould be multiplied by some little number.",
    "start": "2177330",
    "end": "2182710"
  },
  {
    "text": "Epsilon is every mathematician's\nidea of a little number. OK. So epsilon x_1, then\nwhat is delta u?",
    "start": "2182710",
    "end": "2192330"
  },
  {
    "text": "Then the worst delta u is what?",
    "start": "2192330",
    "end": "2199610"
  },
  {
    "text": "What would be the\nsolution to that equation? If the right-hand side was\nepsilon and an eigenvector?",
    "start": "2199610",
    "end": "2209640"
  },
  {
    "text": "This is the whole\npoint of eigenvectors. You can tell me what\nthe solution is. Is it a multiple of\nthat eigenvector?",
    "start": "2209640",
    "end": "2217880"
  },
  {
    "text": "You bet. If this is an\neigenvector, then I can put in the same\neigenvector there,",
    "start": "2217880",
    "end": "2223540"
  },
  {
    "text": "I just have to\nscale it properly. So it'll be just this\nside and what do I need?",
    "start": "2223540",
    "end": "2234380"
  },
  {
    "text": "I think I just need lambda_1. ",
    "start": "2234380",
    "end": "2239640"
  },
  {
    "text": "The worst K inverse can\nbe is like 1/lambda_1.",
    "start": "2239640",
    "end": "2244829"
  },
  {
    "text": "Right, if I claim that that's\nthe answer, if the right hand",
    "start": "2244830",
    "end": "2250600"
  },
  {
    "text": "side is sort of in\nthe worst direction, then the answer is\nthat same right hand",
    "start": "2250600",
    "end": "2256380"
  },
  {
    "text": "side divided by lambda_1. Let me just check. If I multiply both sides by\nK, I have K delta u equals K,",
    "start": "2256380",
    "end": "2265849"
  },
  {
    "text": "what's K*x_1? Everybody with me? What's K*x_1?",
    "start": "2265850",
    "end": "2271470"
  },
  {
    "text": "Lambda_1*x_1, so the\nlambda_1's cancel, then I got the\nepsilon x_1 I want.",
    "start": "2271470",
    "end": "2276750"
  },
  {
    "text": "So, no surprise. That's just telling us that\nthe worst error is an error",
    "start": "2276750",
    "end": "2283380"
  },
  {
    "text": "in the direction of\nthe low eigenvector, and that error gets\namplified by 1/lambda_1.",
    "start": "2283380",
    "end": "2290530"
  },
  {
    "text": "OK. So that's brought lambda_1,\nlambda_min into it, in the denominator.",
    "start": "2290530",
    "end": "2296540"
  },
  {
    "text": "Now, here's another point. Second point now.",
    "start": "2296540",
    "end": "2302349"
  },
  {
    "text": "So that would be\nthe absolute error. But we saw for those\nfactors of two and one",
    "start": "2302350",
    "end": "2309290"
  },
  {
    "text": "millionth and so on, that\nreally it's the relative error. So I want to estimate not\nthe absolute error, delta u,",
    "start": "2309290",
    "end": "2320060"
  },
  {
    "text": "but the error delta u\nrelative to u itself. So that if I scale\nthe whole problem,",
    "start": "2320060",
    "end": "2327460"
  },
  {
    "text": "my relative error\nwouldn't change. So, in other words,\nwhat I want to do",
    "start": "2327460",
    "end": "2332630"
  },
  {
    "text": "is ask in this case,\nwhat's the right hand side?",
    "start": "2332630",
    "end": "2340960"
  },
  {
    "text": "How big, yeah, I know, I want\nto know how small u could be,",
    "start": "2340960",
    "end": "2347540"
  },
  {
    "text": "right? I'm shooting for the worst. The relative error\nis the size of u,",
    "start": "2347540",
    "end": "2360369"
  },
  {
    "text": "maybe I should put it this way. The relative error is\nthe size of the error",
    "start": "2360370",
    "end": "2366320"
  },
  {
    "text": "relative to the size of u. And I want to know\nhow big that could be.",
    "start": "2366320",
    "end": "2372620"
  },
  {
    "text": "OK. So now I know how big delta u\ncould be, it could be that big. But u itself, how\nbig could u be?",
    "start": "2372620",
    "end": "2380710"
  },
  {
    "text": "How small could u be, right?\nu's in the denominator. So if I'm trying\nto make this big,",
    "start": "2380710",
    "end": "2385940"
  },
  {
    "text": "I'll try to make that small. So when is u the smallest?",
    "start": "2385940",
    "end": "2390990"
  },
  {
    "text": "Over there I said when is delta\nu the biggest, now I'm going to say when is u the smallest?",
    "start": "2390990",
    "end": "2396730"
  },
  {
    "text": "What f would point\nme in the direction",
    "start": "2396730",
    "end": "2403260"
  },
  {
    "text": "in which u was the smallest? Got to be the other eigenvector.",
    "start": "2403260",
    "end": "2410529"
  },
  {
    "text": "This end. The worst case\nwould be when this",
    "start": "2410530",
    "end": "2417619"
  },
  {
    "text": "is in the direction of x_n. The top eigenvector. In that case, what is u?",
    "start": "2417620",
    "end": "2427799"
  },
  {
    "text": "So I'm saying the worst f is\nthe one that makes u smallest,",
    "start": "2427800",
    "end": "2434300"
  },
  {
    "text": "and the worst delta f is the\none that makes delta u biggest.",
    "start": "2434300",
    "end": "2439460"
  },
  {
    "text": "I'm going for the\nworst case here, so if the right side is x_n,\nwhat is u? x_n over lambda_n.",
    "start": "2439460",
    "end": "2452040"
  },
  {
    "text": "Because when I multiply by K, K\ntimes x_n brings me a lambda_n, cancel that lambda_n\nI get it right.",
    "start": "2452040",
    "end": "2458660"
  },
  {
    "text": "So there is the smallest u, and\nhere is the largest delta u.",
    "start": "2458660",
    "end": "2464980"
  },
  {
    "text": "And the epsilon is coming\nfrom the method we use, so that's not involved\nwith the matrix K. So",
    "start": "2464980",
    "end": "2473930"
  },
  {
    "text": "do you see on there, if\nI'm trying to estimate delta u over u, that's big.",
    "start": "2473930",
    "end": "2483360"
  },
  {
    "text": "The size of delta u over\nthis, the size of delta u over the size of u is what?",
    "start": "2483360",
    "end": "2491400"
  },
  {
    "text": "Delta u has some epsilon\nthat measures the machine number of digits we're keeping,\nthe machine length, word length",
    "start": "2491400",
    "end": "2501849"
  },
  {
    "text": "and so on. This is a unit\nvector over lambda_1. ",
    "start": "2501850",
    "end": "2508610"
  },
  {
    "text": "That's delta u over\nlambda_1, this u is in the denominator.\nlambda_n-- u is down here,",
    "start": "2508610",
    "end": "2514550"
  },
  {
    "text": "so the lambda_n flips up. Do you see it?",
    "start": "2514550",
    "end": "2520940"
  },
  {
    "text": "By taking the worst case, I've\ngot the worst relative error.",
    "start": "2520940",
    "end": "2527550"
  },
  {
    "text": "So that for other methods,\nother f's and delta f's, they",
    "start": "2527550",
    "end": "2535430"
  },
  {
    "text": "won't be the very worst ones. But here I've written\ndown what's the worst.",
    "start": "2535430",
    "end": "2542960"
  },
  {
    "text": "And that's the reason that\nthis is the condition number. So I'm speaking about topics\nthat are there in 1.7, trying",
    "start": "2542960",
    "end": "2555640"
  },
  {
    "text": "to give you the main point. The main point is,\nlook at relative error",
    "start": "2555640",
    "end": "2560950"
  },
  {
    "text": "because that's the\nright thing to look at. Look at the worst\ncases, which are",
    "start": "2560950",
    "end": "2566000"
  },
  {
    "text": "in the directions of the\ntop and bottom eigenvectors. In that case, that relative\nerror has this condition",
    "start": "2566000",
    "end": "2572670"
  },
  {
    "text": "number, lambda_n/lambda_1, and\nthat's the good measure for how",
    "start": "2572670",
    "end": "2578960"
  },
  {
    "text": "singular the matrix is. So one millionth of the identity\nis not a nearly singular",
    "start": "2578960",
    "end": "2585869"
  },
  {
    "text": "matrix, because lambda_max\nand lambda_min are equal, that's a perfectly\nconditioned matrix.",
    "start": "2585870",
    "end": "2591040"
  },
  {
    "text": "This matrix has condition\nnumber two, 4/2. It's quite good.",
    "start": "2591040",
    "end": "2596360"
  },
  {
    "text": "This matrix is getting worse,\nwith an n squared in there,",
    "start": "2596360",
    "end": "2601670"
  },
  {
    "text": "if n is big, and other matrices\ncould be worse than that.",
    "start": "2601670",
    "end": "2609230"
  },
  {
    "text": "OK. So that's my discussion\nof condition numbers.",
    "start": "2609230",
    "end": "2617560"
  },
  {
    "text": "I'll add one more thing. These eigenvalues\nwere a good measure",
    "start": "2617560",
    "end": "2623750"
  },
  {
    "text": "when my matrix was\nsymmetric positive definite. If I have a matrix\nthat I would never",
    "start": "2623750",
    "end": "2630300"
  },
  {
    "text": "call K, a matrix like one, one,\nzero and a million, OK, that,",
    "start": "2630300",
    "end": "2640310"
  },
  {
    "text": "I would never write K for that. I would shoot myself\nfirst before writing K. So what are the\neigenvalues lambda_min",
    "start": "2640310",
    "end": "2647109"
  },
  {
    "text": "and lambda_max for that matrix? Are you up now on eigenvalues?",
    "start": "2647110",
    "end": "2653970"
  },
  {
    "text": "We haven't done a\nlot of eigenvalues but triangular matrices\nare really easy.",
    "start": "2653970",
    "end": "2659190"
  },
  {
    "text": "The eigenvalues of\nthat matrix are? One and one. The condition number should\nnot be 1/1, that would be bad.",
    "start": "2659190",
    "end": "2668369"
  },
  {
    "text": "So instead, if\nthis was my matrix and I wanted to know\nits condition number,",
    "start": "2668370",
    "end": "2674800"
  },
  {
    "text": "what would I do? How would I define the\ncondition number of A?",
    "start": "2674800",
    "end": "2680520"
  },
  {
    "text": "You know what I\ndo whenever I have a matrix that is not symmetric.",
    "start": "2680520",
    "end": "2686770"
  },
  {
    "text": "I get to a symmetric matrix\nby forming A transpose A, I get a K, I take\nits condition number",
    "start": "2686770",
    "end": "2696550"
  },
  {
    "text": "by my formula, which I\nlike in a symmetric case, and then I would\ntake the square root.",
    "start": "2696550",
    "end": "2705950"
  },
  {
    "text": "So that would be a\npretty big number. For this, for that matrix A, the\ncondition number of that matrix",
    "start": "2705950",
    "end": "2713770"
  },
  {
    "text": "A is up around 10^6. The condition number of that\nmatrix is up around 10^6 even",
    "start": "2713770",
    "end": "2719849"
  },
  {
    "text": "though its eigenvalues are one\nand one because when I form A transpose A, those eigenvalues\nwill jump all over.",
    "start": "2719850",
    "end": "2729880"
  },
  {
    "text": "And then probably this thing\nwill have eigenvalues way up",
    "start": "2729880",
    "end": "2737670"
  },
  {
    "text": "and the condition\nnumber will be high. OK. So that's a little, you'll\nmeet condition number.",
    "start": "2737670",
    "end": "2745069"
  },
  {
    "text": "MATLAB shows it, and you\nnaturally wonder what is this? Well, if it's a positive\ndefinite matrix,",
    "start": "2745070",
    "end": "2752049"
  },
  {
    "text": "it's just the ratio\nlambda_max to lambda_min and it tells you\nas it gets bigger that means the matrix\nis tougher to work with.",
    "start": "2752050",
    "end": "2760320"
  },
  {
    "text": "OK. We have just five minutes left\nto say a few words about QR.",
    "start": "2760320",
    "end": "2767020"
  },
  {
    "text": "OK, can I do that in\njust a few minutes? And much more is in the codes.",
    "start": "2767020",
    "end": "2776140"
  },
  {
    "text": "OK, what's the deal with QR? I'm starting with a\nmatrix A. Let's make",
    "start": "2776140",
    "end": "2788910"
  },
  {
    "text": "it two by two, a two by two. OK, it's got a\ncouple of columns.",
    "start": "2788910",
    "end": "2794750"
  },
  {
    "text": "Can I draw them? So it's got a column there,\nthat's its first column and it's got another\ncolumn there,",
    "start": "2794750",
    "end": "2800790"
  },
  {
    "text": "maybe that's not a very\nwell conditioned matrix. Those are the columns of\nA. Plotted in the plane,",
    "start": "2800790",
    "end": "2807840"
  },
  {
    "text": "two-space. OK, so now the Gram-Schmidt\nidea is: out of those columns,",
    "start": "2807840",
    "end": "2815530"
  },
  {
    "text": "get orthonormal columns. Get from A to Q. So the\nGram-Schmidt idea is, out",
    "start": "2815530",
    "end": "2822559"
  },
  {
    "text": "of these two vectors, two axes\nthat are not at 90 degrees,",
    "start": "2822560",
    "end": "2829650"
  },
  {
    "text": "produce vectors that\nare at 90 degrees. Actually, you can guess\nhow you're going to do it.",
    "start": "2829650",
    "end": "2836330"
  },
  {
    "text": "Let me say, OK I'll settle\nfor that direction, that can be my first direction, q_1.",
    "start": "2836330",
    "end": "2842400"
  },
  {
    "text": "What should be q_2? If that direction is\nthe right one for q_1",
    "start": "2842400",
    "end": "2850080"
  },
  {
    "text": "I say OK I'll settle for\nthat, what's the q_2 guy?",
    "start": "2850080",
    "end": "2856270"
  },
  {
    "text": "Well, what am I going to do? I mean, Gram thought of it\nand Schmidt thought of it.",
    "start": "2856270",
    "end": "2863500"
  },
  {
    "text": "Schmidt was a little\nlater, but it wasn't, like that hard to think of it.",
    "start": "2863500",
    "end": "2869830"
  },
  {
    "text": "What do you do here? Well, we know how\nto do projections from this least squares.",
    "start": "2869830",
    "end": "2879010"
  },
  {
    "text": "What am I looking for? Subtract off the\nprojection, right. Take the projection\nand subtract it off",
    "start": "2879010",
    "end": "2887509"
  },
  {
    "text": "and be left with the component\nthat's perpendicular. So this will be the q_1\ndirection and this will be,",
    "start": "2887510",
    "end": "2897500"
  },
  {
    "text": "this guy e, what we\ncalled e, would tell me the q_2 direction.",
    "start": "2897500",
    "end": "2902750"
  },
  {
    "text": "And then we could make\nthose into unit vectors and we'd be golden.",
    "start": "2902750",
    "end": "2909750"
  },
  {
    "text": "And if we did that we would\ndiscover that the original a_1, a_2 and a_1, so this is\nthe original first column,",
    "start": "2909750",
    "end": "2920160"
  },
  {
    "text": "and the original second\ncolumn, would be the good q_1 and the good q_2 times some\nmatrix R. So here's our A=QR.",
    "start": "2920160",
    "end": "2933000"
  },
  {
    "text": "It's your chance to see this\nsecond major factorization of linear algebra.",
    "start": "2933000",
    "end": "2939470"
  },
  {
    "text": "LU being the first,\nQR being the second. So what's up?",
    "start": "2939470",
    "end": "2945240"
  },
  {
    "text": "Well, compare first columns. First columns, I didn't\nchange direction.",
    "start": "2945240",
    "end": "2952240"
  },
  {
    "text": "So all I have is here is\nsome scaling r_(1,1), zero.",
    "start": "2952240",
    "end": "2957580"
  },
  {
    "text": "Some number times q_1 is a_1. That direction was fine.",
    "start": "2957580",
    "end": "2963880"
  },
  {
    "text": "The second direction, q_2 and\na_2, those involve also a_1.",
    "start": "2963880",
    "end": "2971319"
  },
  {
    "text": "So there's an r_(1,2)\nand an r_(2,2) there.",
    "start": "2971320",
    "end": "2977550"
  },
  {
    "text": "The point was, this\ncame out triangular. And that's what\nmakes things good.",
    "start": "2977550",
    "end": "2982990"
  },
  {
    "text": "It came out triangular\nbecause of the order that Gram and Schmidt worked.",
    "start": "2982990",
    "end": "2988299"
  },
  {
    "text": "Gram and Schmidt\nsettled the first one in the first direction. Then they settled the first two\nin the first two directions.",
    "start": "2988300",
    "end": "2998180"
  },
  {
    "text": "If we were in three\ndimensions, there'd be an a_3 somewhere here,\ncoming out of the board.",
    "start": "2998180",
    "end": "3004350"
  },
  {
    "text": "And then the q_3 would come\nstraight out of the board.",
    "start": "3004350",
    "end": "3009580"
  },
  {
    "text": "Right? If you just see that you've got\nGram-Schmidt completely. a_1",
    "start": "3009580",
    "end": "3015910"
  },
  {
    "text": "is there. So is q_1. a_2 is there. I'm in the board still, in\nthe plane of a_1 and a_2,",
    "start": "3015910",
    "end": "3025720"
  },
  {
    "text": "is the plane of q_1 and q_2, I'm\njust getting right angles in.",
    "start": "3025720",
    "end": "3031300"
  },
  {
    "text": "a_3, the third column in\na three by three case, is coming out at some angle.",
    "start": "3031300",
    "end": "3037760"
  },
  {
    "text": "I want q_3 to come out\nat a 90 degree angle. So that q_3 will involve some\ncombination of all the a's.",
    "start": "3037760",
    "end": "3050140"
  },
  {
    "text": "So if it was three\nby three, this would grow to q_1, q_2, q_3,\nand this would then have",
    "start": "3050140",
    "end": "3057450"
  },
  {
    "text": "three guys in its third column. But maybe you see that picture.",
    "start": "3057450",
    "end": "3062970"
  },
  {
    "text": "So that's what\nGram-Schmidt achieves. And I just can't\nlet time run out",
    "start": "3062970",
    "end": "3069940"
  },
  {
    "text": "without saying that this\nis a pretty good way. Actually, nobody thought there\nwas a better one for centuries.",
    "start": "3069940",
    "end": "3079330"
  },
  {
    "text": "But then a guy named\nHouseholder came up with a different way, and a\nnumerically little better way.",
    "start": "3079330",
    "end": "3089480"
  },
  {
    "text": "Numerically a little better way. So this is the Gram-Schmidt way. Can I just put\nthose words up here?",
    "start": "3089480",
    "end": "3095619"
  },
  {
    "text": "So there's the Gram-Schmidt,\nthe classical Gram-Schmidt idea,",
    "start": "3095620",
    "end": "3101760"
  },
  {
    "text": "which was what I described, was\nthe easy one, easy to describe.",
    "start": "3101760",
    "end": "3107150"
  },
  {
    "text": "And then there's a method\ncalled Householder, just named",
    "start": "3107150",
    "end": "3113089"
  },
  {
    "text": "after him, that\nMATLAB would follow. That every good qr code now\nuses Householder matrices.",
    "start": "3113090",
    "end": "3121310"
  },
  {
    "text": "It achieves the same results. And if I had a\nlittle bit more time I could draw a picture\nof what it does.",
    "start": "3121310",
    "end": "3128400"
  },
  {
    "text": "But there you go. So that's my lecture\non, my quick lecture",
    "start": "3128400",
    "end": "3135560"
  },
  {
    "text": "on numerical linear algebra. These two essential points and\nI'll see you this afternoon.",
    "start": "3135560",
    "end": "3143010"
  },
  {
    "text": "Let me bring those quiz\nquestions down again, for any discussion\nabout the quiz.",
    "start": "3143010",
    "end": "3149480"
  }
]