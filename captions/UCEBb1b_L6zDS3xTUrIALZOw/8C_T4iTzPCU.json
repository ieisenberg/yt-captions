[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13330"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13330",
    "end": "21460"
  },
  {
    "text": "PROFESSOR: Good morning\neveryone, let's get started. So part two of our two lecture\nsequence on network flow.",
    "start": "21460",
    "end": "29650"
  },
  {
    "text": "So all the pain\ninvolved in the concepts and notation from Tuesday turns\ninto algorithmic fun today.",
    "start": "29650",
    "end": "41390"
  },
  {
    "text": "But we will do a little\nbit of a review just to make sure we're\nall on the same page",
    "start": "41390",
    "end": "46620"
  },
  {
    "text": "with respect to all\nof these notions that we talked about\non flow networks.",
    "start": "46620",
    "end": "54020"
  },
  {
    "text": "So we call that a\nflow network is simply a directed graph,\nGVE, and each edge",
    "start": "54020",
    "end": "63489"
  },
  {
    "text": "is going to have two\nnumbers associated with it.",
    "start": "63490",
    "end": "69570"
  },
  {
    "text": "If you see something\nlike 1:3, this means that this is the flow,\nand that's the capacity.",
    "start": "69570",
    "end": "75755"
  },
  {
    "text": " We have a basic\nconstraint dissociated",
    "start": "75755",
    "end": "82100"
  },
  {
    "text": "with the flow not exceeding\nthe capacity on any given edge. And we also have the\nlaws of conservation",
    "start": "82100",
    "end": "88850"
  },
  {
    "text": "that say that other than the\nsink in the source, which are the two distinguished\nvertices in G V E,",
    "start": "88850",
    "end": "95970"
  },
  {
    "text": "you're going to have\na situation where for any intermediate vertex, all\nof the flow entering the vertex",
    "start": "95970",
    "end": "103070"
  },
  {
    "text": "has to leave the vertex. And with those two\nconstraints you",
    "start": "103070",
    "end": "108909"
  },
  {
    "text": "need to find the max flow\nin your flow network.",
    "start": "108910",
    "end": "113960"
  },
  {
    "text": "The flow value corresponding\nto this potential max",
    "start": "113960",
    "end": "121970"
  },
  {
    "text": "flow, or some flow, is\nF equaling f of s of V.",
    "start": "121970",
    "end": "130470"
  },
  {
    "text": "And so s is the source. V corresponds to\nall of the vertices.",
    "start": "130470",
    "end": "137390"
  },
  {
    "text": "And you're looking at pushing\nflow from the source vertex to any of the vertices, and\nthus the V includes t, as well.",
    "start": "137390",
    "end": "150280"
  },
  {
    "text": "And that this is\nessentially a flow value, and we showed-- this is\nimplicit summation notation,",
    "start": "150280",
    "end": "157780"
  },
  {
    "text": "we showed, using a\nlittle bit of algebra, that this equals f of V t.",
    "start": "157780",
    "end": "168239"
  },
  {
    "text": " And that's going to hold because\nof flow conservation primarily.",
    "start": "168240",
    "end": "176665"
  },
  {
    "text": " So that was not\nparticularly surprising.",
    "start": "176665",
    "end": "184860"
  },
  {
    "text": "Something that was a\nlittle more surprising, or is a little\nmore surprising, is that you can have an arbitrary\ncut in the flow network,",
    "start": "184860",
    "end": "195069"
  },
  {
    "text": "and a cut corresponds\nto any partition. ",
    "start": "195070",
    "end": "202860"
  },
  {
    "text": "S, T, such that s belongs to\nS, the source belongs to S,",
    "start": "202860",
    "end": "212130"
  },
  {
    "text": "and the sink belongs to T,\nand that's essentially a cut.",
    "start": "212130",
    "end": "218920"
  },
  {
    "text": "And so obviously there could\nbe exponentially many cuts in a given flow network.",
    "start": "218920",
    "end": "224950"
  },
  {
    "text": "But the amazing\nthing is that you can show a lemma that\nsays that, regardless",
    "start": "224950",
    "end": "230870"
  },
  {
    "text": "of what the actual flow values\nare in any of these edges--",
    "start": "230870",
    "end": "237269"
  },
  {
    "text": "across any cut you're\ngoing to see this flow. And this is true for any cut S,\nT. The corollary to this lemma",
    "start": "237270",
    "end": "257510"
  },
  {
    "text": "is that the flow is\ngoing to be less than",
    "start": "257510",
    "end": "262890"
  },
  {
    "text": "or equal to the\ncapacity of any cut.",
    "start": "262890",
    "end": "269120"
  },
  {
    "start": "269120",
    "end": "274720"
  },
  {
    "text": "And that simply comes\nfrom the edge constraints. You know that the flow\nvalue corresponding",
    "start": "274720",
    "end": "279870"
  },
  {
    "text": "to any particular\nedge has to be less than the capacity of that edge. So you obey that\nconstraint and you just",
    "start": "279870",
    "end": "287090"
  },
  {
    "text": "look at the edges that go from\nS to T, sum up those capacities, and your maximum flow or any\nflow is bounded, [INAUDIBLE],",
    "start": "287090",
    "end": "300670"
  },
  {
    "text": "by that quantity. And that's our c S T.",
    "start": "300670",
    "end": "305840"
  },
  {
    "text": "So you now have a relationship\nbetween the minimum capacity",
    "start": "305840",
    "end": "312280"
  },
  {
    "text": "cut and the max flow. We didn't actually\nexploit that in the sense",
    "start": "312280",
    "end": "320570"
  },
  {
    "text": "of the algorithm itself, the\noperation of the algorithm.",
    "start": "320570",
    "end": "327630"
  },
  {
    "text": "But we're going to\nactually exploit the notion of a cut when we\nprove this algorithm that I got",
    "start": "327630",
    "end": "333569"
  },
  {
    "text": "to late on Tuesday's\nlecture that corresponds",
    "start": "333570",
    "end": "338900"
  },
  {
    "text": "to the Ford-Fulkerson algorithm. I showed you the\nexecution of it. In order to prove\nthat it's correct we're going to need\nthis notion of that",
    "start": "338900",
    "end": "347450"
  },
  {
    "text": "bound on the flow value\ngiven any cut in the network. So the max flow\nrelated to min-cut.",
    "start": "347450",
    "end": "355070"
  },
  {
    "text": "But before we get to that. Just to catch you\nup on the algorithm",
    "start": "355070",
    "end": "360780"
  },
  {
    "text": "that we actually got to, the\nFord-Fulkerson algorithm, that was based on the notion\nof a residual graph.",
    "start": "360780",
    "end": "366870"
  },
  {
    "text": "This is now a new graph,\nG f, which is V, E f, so it depends on the flow.",
    "start": "366870",
    "end": "373520"
  },
  {
    "text": "You computed based on G,\nbased on the given flow f. And this graph has edges that\nhave strictly positive residual",
    "start": "373520",
    "end": "388850"
  },
  {
    "text": "capacities which are\ndefined as the C f u,",
    "start": "388850",
    "end": "397050"
  },
  {
    "text": "v equals C u,v minus f u, v.\nAnd this needs to be strictly",
    "start": "397050",
    "end": "404810"
  },
  {
    "text": "greater than 0 in order for\nthe edge to exist in G of f.",
    "start": "404810",
    "end": "410400"
  },
  {
    "text": "So if this is zero then you\ndon't have an edge between u and v in G of f.",
    "start": "410400",
    "end": "415680"
  },
  {
    "text": "If it's one or greater assuming\nintegral flow values, you will.",
    "start": "415680",
    "end": "421300"
  },
  {
    "text": "And in the residual graph--\ntwo more quick definitions.",
    "start": "421300",
    "end": "426985"
  },
  {
    "text": " One of which you saw\nlast time, and another",
    "start": "426985",
    "end": "433370"
  },
  {
    "text": "that I just verbalized, is the\nnotion of an augmenting path.",
    "start": "433370",
    "end": "439229"
  },
  {
    "text": "And this is any path\nfrom s to t in G f.",
    "start": "439230",
    "end": "444530"
  },
  {
    "text": "So if there's a path\nfrom S to T in G f you do not have a maximum flow.",
    "start": "444530",
    "end": "450340"
  },
  {
    "text": "There is an augmenting path. You're going to be able to\nincrease the flow corresponding to the f value, that gave\nyou your residual network, G",
    "start": "450340",
    "end": "457740"
  },
  {
    "text": "S of f. And how much can you\nincrease this flow by? How much can you increase f by?",
    "start": "457740",
    "end": "463950"
  },
  {
    "text": "That is termed the\nresidual capacity.",
    "start": "463950",
    "end": "472590"
  },
  {
    "text": "And the residual capacity\nof an augmenting path",
    "start": "472590",
    "end": "479040"
  },
  {
    "text": "is simply C f of P,\nthat's what we're going to call it,\nC f of P, equals",
    "start": "479040",
    "end": "487310"
  },
  {
    "text": "the minimum value of\nthe residual capacities",
    "start": "487310",
    "end": "494380"
  },
  {
    "text": "along the path. So this would be C f u,v,\nand that's pretty much it.",
    "start": "494380",
    "end": "505750"
  },
  {
    "text": "And some examples should\nmake this clearer. If we look at what the\nactual algorithm is, and go",
    "start": "505750",
    "end": "515280"
  },
  {
    "text": "through a simpler example\nthan we did last time, but it'll give you a\nsense of how augmentations",
    "start": "515280",
    "end": "522479"
  },
  {
    "text": "are going to change the flow. How augmenting paths appear\nand eventually disappear",
    "start": "522480",
    "end": "528230"
  },
  {
    "text": "as the flow increases and\nreaches the maximum flow.",
    "start": "528230",
    "end": "533589"
  },
  {
    "text": "So this simply\ncorresponds to, as I said, walking through\nthe augmenting path,",
    "start": "533590",
    "end": "539380"
  },
  {
    "text": "looking at each of the\nresidual capacities, and picking the Min value. So the Ford-Fulkerson\nalgorithm, which",
    "start": "539380",
    "end": "550330"
  },
  {
    "text": "is the first algorithm for\nmax flow continues to be used,",
    "start": "550330",
    "end": "557390"
  },
  {
    "text": "sets the flow on each\nof the edges to be zero.",
    "start": "557390",
    "end": "573100"
  },
  {
    "text": "So you just set\neverything to zero. Clearly satisfies\nflow conservation,",
    "start": "573100",
    "end": "578810"
  },
  {
    "text": "satisfies all the\nedge capacities. And you have literally\nthree lines of code",
    "start": "578810",
    "end": "585089"
  },
  {
    "text": "here, while an augmenting\npath in G f exists.",
    "start": "585090",
    "end": "599200"
  },
  {
    "text": "So there's a lot going on here,\nyou have to compute G of f, I mean it's three lines\nof code, but the sub",
    "start": "599200",
    "end": "606960"
  },
  {
    "text": "routines calls, which\nare fairly complicated, you have to compute\ng of f, given f,",
    "start": "606960",
    "end": "612690"
  },
  {
    "text": "and initially it's all zeros. And then eventually\nit's going to change, or immediately after you\ndiscover an augmenting path.",
    "start": "612690",
    "end": "620610"
  },
  {
    "text": "And now you have discovered\nan augmenting path. So you have to now do\neither breadth-first search",
    "start": "620610",
    "end": "626940"
  },
  {
    "text": "or depth-first search, in\norder to discover whether this is a path from s\nto t because that's the definition of\nan augmenting path.",
    "start": "626940",
    "end": "633500"
  },
  {
    "text": "And then the last line of code\nsays, augment f by C f of p.",
    "start": "633500",
    "end": "645510"
  },
  {
    "text": "And again this is\nfairly involved. You have to take\nthe path in G of f.",
    "start": "645510",
    "end": "652210"
  },
  {
    "text": "You're going to increase\nthe values of the edges that",
    "start": "652210",
    "end": "660680"
  },
  {
    "text": "correspond to G of f translating\nthose edges back to G.",
    "start": "660680",
    "end": "668100"
  },
  {
    "text": "And there's possibly an\ninversion in direction that is associated\nwith that translation.",
    "start": "668100",
    "end": "675070"
  },
  {
    "text": "And so if you take a really\nstraightforward example. Let's say if you have G is s,\nand this one vertex here, a,",
    "start": "675070",
    "end": "685511"
  },
  {
    "text": "and then you have t. And right now I\nhave 1:2 and 1:4.",
    "start": "685511",
    "end": "691210"
  },
  {
    "text": " I now am going to\ncompute G of f.",
    "start": "691210",
    "end": "696940"
  },
  {
    "text": "So G of f is going to be-- I'm\njust going to write down s, a, and t because the\nvertices are all the same.",
    "start": "696940",
    "end": "704599"
  },
  {
    "text": "The edges are\nobviously different.  Am I going to have\nan edge from s to a?",
    "start": "704599",
    "end": "712110"
  },
  {
    "text": "Yes. And what number should\nI put on that edge? 1, and that's because\nit's 2 minus 1,",
    "start": "712110",
    "end": "720399"
  },
  {
    "text": "not because it's just plain 1.  And this edge here is going to\nhave a residual capacity of 1,",
    "start": "720400",
    "end": "730750"
  },
  {
    "text": "and that just comes\ndirectly from that 1. And what that means is,\nand this is important,",
    "start": "730750",
    "end": "737530"
  },
  {
    "text": "what that means is that, in\neffect, this residual capacity says in this direction you\nstill have a capacity of 1.",
    "start": "737530",
    "end": "746900"
  },
  {
    "text": "Which means that\nin this direction you could reduce by one. OK, that's the important\nthing to remember.",
    "start": "746900",
    "end": "752790"
  },
  {
    "text": "And over here I'm\ngoing to have-- this way I'm going to\nhave 3 and coming back",
    "start": "752790",
    "end": "760100"
  },
  {
    "text": "I'm going to have 1. All right, so\nstraightforward example but I",
    "start": "760100",
    "end": "766259"
  },
  {
    "text": "think evocative in the sense\nthat it applies the concepts that we've seen so\nfar other than cuts.",
    "start": "766260",
    "end": "775110"
  },
  {
    "text": "And we'll get to that. And what happens here, is\nthere a path from s to t?",
    "start": "775110",
    "end": "780230"
  },
  {
    "text": "Absolutely. And what is the\nresidual capacity of the path from s to t?",
    "start": "780230",
    "end": "786755"
  },
  {
    "text": " It's one because you've got a\n1 here, and you got a 3 here,",
    "start": "786755",
    "end": "792130"
  },
  {
    "text": "you got to take the\nMin, and it's 1. Right, I guess that's the\nnumber of choice today, one.",
    "start": "792130",
    "end": "797860"
  },
  {
    "text": "But once you do that and\nyou find that, you say, OK, what I'm going to\ndo is-- and this",
    "start": "797860",
    "end": "802915"
  },
  {
    "text": "is going to be pretty\nstraightforward-- I'm going to look\nat these edges, and I know that I have\nc of t being a one",
    "start": "802915",
    "end": "811110"
  },
  {
    "text": "corresponding to this value. And I'm going to go add one\nto those corresponding edges because these are the edges\nthat actually shows in terms",
    "start": "811110",
    "end": "820641"
  },
  {
    "text": "of the augmenting path. So the augmenting path is that. And so this turns into s to\na to t, and that becomes 2:2.",
    "start": "820642",
    "end": "835660"
  },
  {
    "text": "This becomes 2:4 and that's it. ",
    "start": "835660",
    "end": "842850"
  },
  {
    "text": "So I now have G with the new f. So I can now think about what\nis G of f1 correspond to.",
    "start": "842850",
    "end": "850880"
  },
  {
    "text": "The G is separate from\nf, so in some sense the G stayed the same, but the\nf changed, as you saw here.",
    "start": "850880",
    "end": "860320"
  },
  {
    "text": "And now G f1 looks like s, a, t. ",
    "start": "860320",
    "end": "867980"
  },
  {
    "text": "What do I do between s and a?  Well, I only have\nsomething from a to s.",
    "start": "867980",
    "end": "874311"
  },
  {
    "text": "I don't have\nanything from s to a because the residual capacity\nin this direction, thanks to the fact that the flow has\nsaturated the edge capacity,",
    "start": "874312",
    "end": "882880"
  },
  {
    "text": "is actually zero. But I do have an edge this way. And what is the\nvalue for that edge?",
    "start": "882880",
    "end": "889220"
  },
  {
    "text": "It's 2. And over here, what\nare the numbers for the top and the bottom?",
    "start": "889220",
    "end": "895529"
  },
  {
    "text": "2 and 2. And now I look at\nG f1, and I've gone",
    "start": "895530",
    "end": "900769"
  },
  {
    "text": "through one iteration\nof this pseudo code, and I now try to find an\naugmenting path in G f1.",
    "start": "900770",
    "end": "907290"
  },
  {
    "text": "And is there a path from s to t? No, which means I'm done.",
    "start": "907290",
    "end": "912590"
  },
  {
    "text": "This is the max flow. You believe me? ",
    "start": "912590",
    "end": "919270"
  },
  {
    "text": "For this example,\nyou believe me. You believe me, like,\nfor every example?",
    "start": "919270",
    "end": "926230"
  },
  {
    "text": "No, absolutely not because\nyou haven't done a proof! We haven't done a proof!",
    "start": "926230",
    "end": "933191"
  },
  {
    "text": "That's why you\nshouldn't believe me.  So we got to do a proof.",
    "start": "933191",
    "end": "939410"
  },
  {
    "text": "So how is it that we\nknow, given all of this, it's not because I told you\nso, that when we've converged.",
    "start": "939410",
    "end": "949320"
  },
  {
    "text": "When we get out of this while\nloop, that we have a max flow.",
    "start": "949320",
    "end": "955380"
  },
  {
    "text": "Looks pretty good. Worked for that\nexample and it's going to work for every example,\nbut that's not a proof.",
    "start": "955380",
    "end": "963010"
  },
  {
    "text": "So now we have to sort of\ntake in all of the notions that we've talked about here,\nincluding primarily the notion",
    "start": "963010",
    "end": "969650"
  },
  {
    "text": "of cuts. And the proof, the max\nflow, min-cut theorem, which is going to show this\nkey result that we require,",
    "start": "969650",
    "end": "978790"
  },
  {
    "text": "which is that when we\nterminate in the Ford-Fulkerson algorithm, we're going\nto have a max flow.",
    "start": "978790",
    "end": "986420"
  },
  {
    "text": "And that's the reason why\nit's a maximum flow algorithm. If you don't have\nthat proof, you don't have a max flow algorithm.",
    "start": "986420",
    "end": "991953"
  },
  {
    "text": " So hopefully all\nof that is clear.",
    "start": "991953",
    "end": "997560"
  },
  {
    "text": "Pipe up if you have questions. And let's write out the\nmax flow min-cut theorem,",
    "start": "997560",
    "end": "1004360"
  },
  {
    "text": "which I mentioned\nof it last time",
    "start": "1004360",
    "end": "1011550"
  },
  {
    "text": "but never really\ngot to even stating, but today we're going to\nstate it and prove it.",
    "start": "1011550",
    "end": "1019840"
  },
  {
    "start": "1019840",
    "end": "1029540"
  },
  {
    "text": "So this is an\ninteresting theorem. I mean it's a legendary theorem.",
    "start": "1029540",
    "end": "1034569"
  },
  {
    "text": "And it's not your usual\ntheorem in the sense",
    "start": "1034569",
    "end": "1041750"
  },
  {
    "text": "that it makes a\nsimple statement. It actually makes\nthree statements.",
    "start": "1041750",
    "end": "1049430"
  },
  {
    "text": "It says the following\nare equivalent, and it's got three things\nwhich are the following.",
    "start": "1049430",
    "end": "1056470"
  },
  {
    "text": " F equals c S T\nfor some cut, S,T.",
    "start": "1056470",
    "end": "1072080"
  },
  {
    "text": "This says that some\ncut is saturated.",
    "start": "1072080",
    "end": "1077809"
  },
  {
    "text": "Right, so that's\njust the statement. The second statement, which is\nequivalent to the first one,",
    "start": "1077810",
    "end": "1087650"
  },
  {
    "text": "says that f is a maximum flow. ",
    "start": "1087650",
    "end": "1094990"
  },
  {
    "text": "So f being a maximum\nflow means there's some cut that's saturated. If there's some cut that's\nsaturated for a given flow,",
    "start": "1094990",
    "end": "1102520"
  },
  {
    "text": "you have a max flow. And then the last one,\nwhich is important for our Ford-Fulkerson\nalgorithm,",
    "start": "1102520",
    "end": "1111020"
  },
  {
    "text": "is that f admits no\naugmenting paths.",
    "start": "1111020",
    "end": "1120525"
  },
  {
    "text": " And so if I want to show that\nthe Ford-Fulkerson algorithm",
    "start": "1120525",
    "end": "1130780"
  },
  {
    "text": "terminates with a\nmax flow, tell me, based on implications--\nlike i implies j,",
    "start": "1130780",
    "end": "1139990"
  },
  {
    "text": "for numbers i and j, what\nit is that I need to prove. We're going to prove a bunch\nof other things along the way",
    "start": "1139990",
    "end": "1146960"
  },
  {
    "text": "but crucially what is the\ni implies j that I want",
    "start": "1146960",
    "end": "1152020"
  },
  {
    "text": "if I want to claim that the\nFord-Fulkerson algorithm terminates with the max flow.",
    "start": "1152020",
    "end": "1157650"
  },
  {
    "text": " Yeah, you over there.",
    "start": "1157650",
    "end": "1163315"
  },
  {
    "text": "AUDIENCE: 3 implies 2. PROFESSOR: 3 implies 2.",
    "start": "1163315",
    "end": "1169009"
  },
  {
    "text": "That's right, 3 implies\n2, exactly right. 3 implies 2. ",
    "start": "1169010",
    "end": "1175990"
  },
  {
    "text": "So we need to do 3 implies 2.",
    "start": "1175990",
    "end": "1181110"
  },
  {
    "text": "Now of course, the theorem\nsays that, 1 implies 2, 2 implies 3, 3\nimplies 1, et cetera.",
    "start": "1181110",
    "end": "1189950"
  },
  {
    "text": "There's a lot of\nimplications here. What we are going to do is we're\ngoing to show that 1 implies 2,",
    "start": "1189950",
    "end": "1199710"
  },
  {
    "text": "2 implies 3, and 3 implies 1. And that pretty much\ntakes care of everything.",
    "start": "1199710",
    "end": "1206746"
  },
  {
    "text": "And it turns out\nthe reason we do this is simply because it\nmakes for the simplest proofs.",
    "start": "1206746",
    "end": "1213400"
  },
  {
    "text": "1 implies 2 and 2 implies 3 are\none- liners, and that 3 implies 1 is a little more\ninteresting and involved,",
    "start": "1213400",
    "end": "1220410"
  },
  {
    "text": "but it's a little bit\neasier than directly doing 3 implies 2.",
    "start": "1220410",
    "end": "1226532"
  },
  {
    "text": "So that's the way\nwe're going to do this. You could certainly play\naround and do other things. So any questions so far?",
    "start": "1226532",
    "end": "1232690"
  },
  {
    "text": " OK, so let's go\nahead and do this.",
    "start": "1232690",
    "end": "1238040"
  },
  {
    "start": "1238040",
    "end": "1256780"
  },
  {
    "text": "All right, we should be\nable to knock these two, 1 implies 2 and 2 implies 3,\nin just about a minute each.",
    "start": "1256780",
    "end": "1263930"
  },
  {
    "text": " So I want to show 1\nimplies 2, and essentially",
    "start": "1263930",
    "end": "1271370"
  },
  {
    "text": "what I want to say\nhere is, if I've",
    "start": "1271370",
    "end": "1276510"
  },
  {
    "text": "saturated a particular\ncuts capacity then I have a max flow.",
    "start": "1276510",
    "end": "1282460"
  },
  {
    "text": "And really, I mean this\ncomes from the definitions, since I'm going to have f less\nthan or equal to the c S, T,",
    "start": "1282460",
    "end": "1291860"
  },
  {
    "text": "and this is simply because\nof edge capacity constraints. This is just edge capacities\nfor any cut S T, the assumption",
    "start": "1291860",
    "end": "1314510"
  },
  {
    "text": "that f equals c of S T implies\nf is a maximum flow because f",
    "start": "1314510",
    "end": "1327187"
  },
  {
    "text": "can be increased. ",
    "start": "1327187",
    "end": "1334460"
  },
  {
    "text": "And that's basically it. Right, so this is pretty easy.",
    "start": "1334460",
    "end": "1339769"
  },
  {
    "text": "Next one is easy as well. 2 implies 3.",
    "start": "1339770",
    "end": "1346659"
  },
  {
    "text": "If the rare and\naugmenting path--",
    "start": "1346660",
    "end": "1353080"
  },
  {
    "text": "so I'm going to do\nthis by contradiction-- if the rare and augmenting\npath, the flow value",
    "start": "1353080",
    "end": "1367890"
  },
  {
    "text": "can be increased. Because remember\nthe augmenting path corresponds to a path\nwith strictly positive",
    "start": "1367890",
    "end": "1375070"
  },
  {
    "text": "residual capacities. The only reason there's\nan edge in there is because you have a greater\nthan zero residual capacity.",
    "start": "1375070",
    "end": "1384560"
  },
  {
    "text": "So that means that\nthe flow value could be increased by some\nsmall amount corresponding",
    "start": "1384560",
    "end": "1392580"
  },
  {
    "text": "to C f u v, and each of\nthese quantities that",
    "start": "1392580",
    "end": "1397649"
  },
  {
    "text": "are in here-- I'm sorry,\ncorresponding to min C f u v, that's the residual capacity.",
    "start": "1397650",
    "end": "1404510"
  },
  {
    "text": "But you know that each of\nthese capacities, C F u v, are strictly greater than zero.",
    "start": "1404510",
    "end": "1410140"
  },
  {
    "text": "So the min clearly is\nstrictly greater than zero. It might be some tiny quantity\nbut it's greater than zero.",
    "start": "1410140",
    "end": "1416309"
  },
  {
    "text": "Which means that\nthe flow value could be increased contradicting\nthe maximality of f.",
    "start": "1416310",
    "end": "1426440"
  },
  {
    "start": "1426440",
    "end": "1433509"
  },
  {
    "text": "So a little proof\nby contradiction gives you 2 implies 3.",
    "start": "1433510",
    "end": "1438520"
  },
  {
    "text": "So, so far, so good. This is primarily based\non the definitions of augmenting paths, residual\ncapacities, et cetera.",
    "start": "1438520",
    "end": "1446819"
  },
  {
    "text": "Now the fun starts.  Now we want to\nshow really, I mean",
    "start": "1446819",
    "end": "1452850"
  },
  {
    "text": "this is truly what the max flow\nmin cut is because I really didn't have cuts up there.",
    "start": "1452850",
    "end": "1458419"
  },
  {
    "text": "So what's min-cut\nabout that, right? ",
    "start": "1458420",
    "end": "1464539"
  },
  {
    "text": "So I had a question at the\nend of Tuesday's lecture on how come the algorithm\ndidn't use cuts.",
    "start": "1464540",
    "end": "1473510"
  },
  {
    "text": "And, well, the algorithm\ndoesn't use cuts, but showing that the algorithm\nconverges to the max flow",
    "start": "1473510",
    "end": "1481770"
  },
  {
    "text": "uses the notion of cuts.  So what we want to\ndo is do 3 implies 1,",
    "start": "1481770",
    "end": "1490220"
  },
  {
    "text": "and that's going to take\ncare of what we want. And we're going to\nsay, well, suppose",
    "start": "1490220",
    "end": "1499330"
  },
  {
    "text": "f admits no augmenting paths.",
    "start": "1499330",
    "end": "1504345"
  },
  {
    "text": " So what does that mean?",
    "start": "1504345",
    "end": "1510220"
  },
  {
    "text": "Well, that means that\nyou can't reach t from s. If you reach t from s,\nthere's an augmenting path,",
    "start": "1510220",
    "end": "1518720"
  },
  {
    "text": "so you can't make that\nmove or make that path.",
    "start": "1518720",
    "end": "1524100"
  },
  {
    "text": "So let's go ahead and, sort\nof, look at this a little more carefully and figure\nout what's causing",
    "start": "1524100",
    "end": "1532020"
  },
  {
    "text": "this lack of connectivity. There's a lack of\nconnectivity between s and t.",
    "start": "1532020",
    "end": "1538610"
  },
  {
    "text": "You can't actually get there. So there's like a\nchasm, there's a gap. And so what's causing that?",
    "start": "1538610",
    "end": "1545320"
  },
  {
    "text": "And what we're going\nto do is figure",
    "start": "1545320",
    "end": "1550679"
  },
  {
    "text": "out what the cut\nof the partition is that could be\nthe reason why you",
    "start": "1550680",
    "end": "1560740"
  },
  {
    "text": "have this lack of connectivity. So we're going to define\nS which is exactly",
    "start": "1560740",
    "end": "1567010"
  },
  {
    "text": "going to be our S from our\nfavorite s t cut definition,",
    "start": "1567010",
    "end": "1573610"
  },
  {
    "text": "but bear with me\nfor just a second. Because I will\ntell you what S is.",
    "start": "1573610",
    "end": "1579590"
  },
  {
    "text": "There exists a path\nin G f from s to u.",
    "start": "1579590",
    "end": "1595020"
  },
  {
    "text": "So what I'm doing\nis I'm collecting the reachable vertices from\nS. And I know that I'm not",
    "start": "1595020",
    "end": "1606080"
  },
  {
    "text": "going to have t,\nsmall t, in this set because f admits no augmenting\npaths so I can't possibly",
    "start": "1606080",
    "end": "1615399"
  },
  {
    "text": "reach t from s. But I can collect\nall of the vertices",
    "start": "1615400",
    "end": "1622509"
  },
  {
    "text": "that that can be reached\nfrom s in this given G of f",
    "start": "1622510",
    "end": "1628530"
  },
  {
    "text": "and put them all into S.",
    "start": "1628530",
    "end": "1634050"
  },
  {
    "text": "And then my T\ndefinition is simply V minus S. And the key\nobservation which I already",
    "start": "1634050",
    "end": "1643779"
  },
  {
    "text": "have made but\nimportant to emphasize is that small t belongs to T,\nand obviously s belongs to S,",
    "start": "1643780",
    "end": "1656680"
  },
  {
    "text": "therefore S T is a cut.",
    "start": "1656680",
    "end": "1663030"
  },
  {
    "text": "It satisfies the\ndefinition of a cut. So we've set ourselves up.",
    "start": "1663030",
    "end": "1669350"
  },
  {
    "text": "And then we have\na key observation",
    "start": "1669350",
    "end": "1675429"
  },
  {
    "text": "to make that I'm going to\ntry and extract out or you. Let me move over here. ",
    "start": "1675430",
    "end": "1697370"
  },
  {
    "text": "All right, so what I want to\ndo is I want to draw this out,",
    "start": "1697370",
    "end": "1708160"
  },
  {
    "text": "and I want to look\nat this as this is S, that is T. I know\nthat S is over here,",
    "start": "1708160",
    "end": "1716700"
  },
  {
    "text": "are s is over here,\nt is over here. ",
    "start": "1716700",
    "end": "1723660"
  },
  {
    "text": "I'm going to pick some\nvertex v that's over here,",
    "start": "1723660",
    "end": "1731520"
  },
  {
    "text": "some vertex u that's over here. I know that there's\na path, and I'm",
    "start": "1731520",
    "end": "1740850"
  },
  {
    "text": "writing this is a\ndotted path because this is a path in G of f.",
    "start": "1740850",
    "end": "1746470"
  },
  {
    "text": "We're going to actually\nmove between a G of f and G in this proof.",
    "start": "1746470",
    "end": "1751669"
  },
  {
    "text": "So that's the only hard\npart of this proof. The movement between\ng and G of f.",
    "start": "1751670",
    "end": "1756780"
  },
  {
    "text": "The edges are different\nbetween g and G of f. Got to keep that in your head. Because we're going to\nmake arguments about that.",
    "start": "1756780",
    "end": "1763740"
  },
  {
    "text": "I know that all of the vertices\nthat are on the left hand side are reachable from s, so I just\npicked an arbitrary vertex u,",
    "start": "1763740",
    "end": "1771929"
  },
  {
    "text": "and I know that\nthere's a path in G of f because that's the way\nI defined it from s to u.",
    "start": "1771930",
    "end": "1778360"
  },
  {
    "text": "I also know that there is\nno path in G of f from u",
    "start": "1778360",
    "end": "1786485"
  },
  {
    "text": "to v because if there was a path\nv would have been on this side,",
    "start": "1786485",
    "end": "1795610"
  },
  {
    "text": "correct? So there's clearly no\npath in g of f from u",
    "start": "1795610",
    "end": "1801590"
  },
  {
    "text": "to v. That's why v is over here. But let's say that\nI'm picking something",
    "start": "1801590",
    "end": "1811510"
  },
  {
    "text": "where there's an edge in G, the\noriginal flow network from u",
    "start": "1811510",
    "end": "1820000"
  },
  {
    "text": "to v. So the edge that I've\ndrawn here, the dark edge, is an edge between u and\nv in G. And that edge",
    "start": "1820000",
    "end": "1833062"
  },
  {
    "text": "had a certain capacity. It existed. The reason it existed\nis because it had a nonzero capacity, correct?",
    "start": "1833062",
    "end": "1840670"
  },
  {
    "text": "Because we originally\ndefined our flow network to be something where--\nif you only put edges",
    "start": "1840670",
    "end": "1846120"
  },
  {
    "text": "in there, in the\noriginal flow network if the capacities were\ngreater than zero.",
    "start": "1846120",
    "end": "1851380"
  },
  {
    "text": "So that edge in there, in\nG had some capacity c u",
    "start": "1851380",
    "end": "1856577"
  },
  {
    "text": "v which was greater than zero.  But this edge does not\nexist in G of f, correct?",
    "start": "1856577",
    "end": "1869460"
  },
  {
    "text": "So what can I say? Go ahead. AUDIENCE: [INAUDIBLE]",
    "start": "1869460",
    "end": "1875130"
  },
  {
    "text": " PROFESSOR: Exactly. In the original graph, we have\nsaturated this edge-- that",
    "start": "1875130",
    "end": "1886090"
  },
  {
    "text": "was my best throw of the term. I like that. And you guys didn't notice,\nbut maybe it'll be on video.",
    "start": "1886090",
    "end": "1896090"
  },
  {
    "text": "Actually, it won't be\non video unfortunately. But so I got this edge\nhere in the original graph",
    "start": "1896090",
    "end": "1904580"
  },
  {
    "text": "and I didn't get\nthis dotted edge here because the residual\ncapacity was zero.",
    "start": "1904580",
    "end": "1911539"
  },
  {
    "text": "The original\ncapacity was nonzero. The residual capacity is zero. The only reason that happens is\nbecause C f u v is zero since",
    "start": "1911540",
    "end": "1928600"
  },
  {
    "text": "if C f u v greater than zero\nthen v would belong to S,",
    "start": "1928600",
    "end": "1939900"
  },
  {
    "text": "not v belonging to T as assumed. ",
    "start": "1939900",
    "end": "1946720"
  },
  {
    "text": "So that's essentially what\nwe've determined here. So this means that f\nof u v equals c of u v",
    "start": "1946720",
    "end": "1964100"
  },
  {
    "text": "simply because c f u v equals\nc u v minus f u v which is 0.",
    "start": "1964100",
    "end": "1978720"
  },
  {
    "text": "All right, so that's the\nstatement I can make.",
    "start": "1978720",
    "end": "1983820"
  },
  {
    "text": "Now, I did not have\nany constraint on u",
    "start": "1983820",
    "end": "1989620"
  },
  {
    "text": "and v. I just said u belongs\nto s and v belongs to t.",
    "start": "1989620",
    "end": "1995090"
  },
  {
    "text": "And for each of\nthose things, I know that I can't have edges in\nthe residual network between u",
    "start": "1995090",
    "end": "2003050"
  },
  {
    "text": "and v which means that any edge\nthat exists-- maybe there's no edge in the original\nnetwork, but if there",
    "start": "2003050",
    "end": "2008380"
  },
  {
    "text": "was an edge in that original\nnetwork it's saturated according to this argument.",
    "start": "2008380",
    "end": "2013730"
  },
  {
    "text": "So every edge from S to T in the\noriginal network is saturated,",
    "start": "2013730",
    "end": "2022640"
  },
  {
    "text": "and that essentially\nmeans that I've gotten to the capacity of my cut.",
    "start": "2022640",
    "end": "2027902"
  },
  {
    "text": "That's essentially\nwhat that means. If I've saturated every edge,\nI've reached that capacity.",
    "start": "2027902",
    "end": "2033230"
  },
  {
    "text": "OK, so that's it. All you do once you recognize\nthat you had an arbitrary",
    "start": "2033230",
    "end": "2039480"
  },
  {
    "text": "choice of u and v, you just say\nsumming over all u belonging",
    "start": "2039480",
    "end": "2049260"
  },
  {
    "text": "to s and v belong to t yields\nf of S T equals c of S T.",
    "start": "2049260",
    "end": "2071280"
  },
  {
    "text": "All right, I'm on a roll\nnot just with Frisbees. I finished the proof\nwith a finger to spare.",
    "start": "2071280",
    "end": "2078050"
  },
  {
    "text": "So f of S T equals\nc of S T. All right, so that's exactly what we want.",
    "start": "2078050",
    "end": "2084070"
  },
  {
    "text": "We are saying f of S T is\nobviously a cardinality of f",
    "start": "2084070",
    "end": "2089810"
  },
  {
    "text": "so I've shown this\nthing over here.  So that's why the\nFord-Fulkerson algorithm works.",
    "start": "2089810",
    "end": "2098660"
  },
  {
    "text": "It's because of\nthis analysis that the Ford-Fulkerson\nalgorithm works. So are we done?",
    "start": "2098660",
    "end": "2105490"
  },
  {
    "text": "What are we missing in algorithm\ndesign, our algorithm analysis?",
    "start": "2105490",
    "end": "2113020"
  },
  {
    "text": "Not you, yet. AUDIENCE: [INAUDIBLE] PROFESSOR: Sorry? AUDIENCE: A runtime? PROFESSOR: Runtime,\ngood runtime.",
    "start": "2113020",
    "end": "2119400"
  },
  {
    "text": "I know you have\ntoo many Frisbees. You probably do, too. But so we haven't done--\nwe've done correctness,",
    "start": "2119400",
    "end": "2128690"
  },
  {
    "text": "we've done conversions. We haven't done a\ncomplexity analysis. And so there's\nsome bad news here.",
    "start": "2128690",
    "end": "2137730"
  },
  {
    "text": "And erasing a pivotal\nmoment in 6 over 6.",
    "start": "2137730",
    "end": "2151070"
  },
  {
    "start": "2151070",
    "end": "2187920"
  },
  {
    "text": "Why is this a pivotal\nmoment in 6 over 6? It's on the Frisbee, exactly.",
    "start": "2187920",
    "end": "2194680"
  },
  {
    "text": "This picture-- maybe not\nexactly that picture. It's not quite that picture\nbut it's the same graph.",
    "start": "2194680",
    "end": "2200275"
  },
  {
    "text": " It's a pivotal moment because\nthis picture was famous",
    "start": "2200275",
    "end": "2205750"
  },
  {
    "text": "because it was in\na textbook but now it's iconic because\nit's on a Frisbee.",
    "start": "2205750",
    "end": "2212206"
  },
  {
    "text": "We immortalized this picture. So this is an example\nof really a failure",
    "start": "2212206",
    "end": "2221920"
  },
  {
    "text": "of the Ford-Fulkerson algorithm. So it's kind of a bad\nexample on this Frisbee but it's going to lead\nus to better algorithms.",
    "start": "2221920",
    "end": "2230100"
  },
  {
    "text": "So what I have here is a\nweird flow network that has these strange capacities.",
    "start": "2230100",
    "end": "2237040"
  },
  {
    "text": "I mean it's a fairly\nstraightforward flow network. But at the as of the moment\nit obviously satisfies",
    "start": "2237040",
    "end": "2242974"
  },
  {
    "text": "a flow conservation\nbecause all of the flows are 0 and therefore\nedge capacities.",
    "start": "2242975",
    "end": "2248780"
  },
  {
    "text": "But we're going to now take\na pathological execution",
    "start": "2248780",
    "end": "2254860"
  },
  {
    "text": "of the Ford-Fulkerson algorithm. Which, by the way,\ndid not specify",
    "start": "2254860",
    "end": "2260390"
  },
  {
    "text": "how you are going to\nselect the augmenting path. It just said, find\nan augmenting path.",
    "start": "2260390",
    "end": "2267470"
  },
  {
    "text": "And in passing, I said,\noveruse depth-first search, we'll use breadth-first search,\nand kind of hand wave my way",
    "start": "2267470",
    "end": "2274230"
  },
  {
    "text": "through that. Now it turns out you\ncan't hand wave when you want to run algorithms, right.",
    "start": "2274230",
    "end": "2279859"
  },
  {
    "text": "You eventually have to code them\nup, you got to pick something. So people did. People picked different\nways of selecting",
    "start": "2279860",
    "end": "2287980"
  },
  {
    "text": "augmenting paths in the\nFord-Fulkerson framework. And they discovered that some\nof them would work beautifully",
    "start": "2287980",
    "end": "2295790"
  },
  {
    "text": "and some of them\nwould fail miserably on networks that were\nas small as this,",
    "start": "2295790",
    "end": "2301110"
  },
  {
    "text": "and they'd just take forever. And this is before complexity\nanalysis, kind of maybe",
    "start": "2301110",
    "end": "2306680"
  },
  {
    "text": "before asymptotic complexity\nreally came into vogue. So they just had\nempirical analysis",
    "start": "2306680",
    "end": "2313640"
  },
  {
    "text": "to tell them that some\ntechniques for discovering augmenting paths work\nbetter than other techniques",
    "start": "2313640",
    "end": "2320150"
  },
  {
    "text": "on an empirical basis. So what could go wrong with\nFord-Fulkerson on this example?",
    "start": "2320150",
    "end": "2330980"
  },
  {
    "text": "What selection\nstrategy corresponding to the augmenting path could\ncause Ford-Fulkerson to have",
    "start": "2330980",
    "end": "2340220"
  },
  {
    "text": "a huge number of iterations? Go ahead. AUDIENCE: So each time you\npick an augmenting path",
    "start": "2340220",
    "end": "2345475"
  },
  {
    "text": "you pick one that\ngoes to the center. PROFESSOR: Exactly, and so let's\nwalk through a couple here.",
    "start": "2345475",
    "end": "2351990"
  },
  {
    "text": "So the first one, let's\njust say this was a and b, to make it easy. So what is the first\npath that we picked?",
    "start": "2351990",
    "end": "2359830"
  },
  {
    "text": "What is it--? Go for it. You're not off the hook yet. AUDIENCE: You pick\ns to a to b to t. PROFESSOR: Yeah, and then when\nyou pick s to a to b to t,",
    "start": "2359830",
    "end": "2367230"
  },
  {
    "text": "I'm not going to\ndraw G of f for this, it's pretty clear that G of f\nis going to have-- I'm sorry,",
    "start": "2367230",
    "end": "2376680"
  },
  {
    "text": "you end up picking s to\na to b to t corresponding to the G of f that\nyou've created.",
    "start": "2376680",
    "end": "2382680"
  },
  {
    "text": "Right, so the G of f might\nhave something like s",
    "start": "2382680",
    "end": "2387859"
  },
  {
    "text": "to a-- there's only going\nto be an edge this way that's going to\nhave 10 raised to 9. And then this way it's going to\nhave 1, and that's going to b,",
    "start": "2387860",
    "end": "2395740"
  },
  {
    "text": "and over here to t it's\ngoing to have 10 raised to 9.",
    "start": "2395740",
    "end": "2404330"
  },
  {
    "text": "It's also going to have\n10 raised to 9 this way, and it's going to have\n10 raised to 9 this way.",
    "start": "2404330",
    "end": "2412700"
  },
  {
    "text": "And the reason the\ngentleman was laughing is because we ended\nup picking this path.",
    "start": "2412700",
    "end": "2419730"
  },
  {
    "text": "S in G of f-- this is G of f\njust to be clear-- you pick s a b t.",
    "start": "2419730",
    "end": "2427930"
  },
  {
    "text": "And so what you end up doing\nis you end up making this 1,",
    "start": "2427930",
    "end": "2433980"
  },
  {
    "text": "making this 1, and coming\nover here making this 1.",
    "start": "2433980",
    "end": "2441720"
  },
  {
    "text": "Wow! OK, you did increase the flow. Very good, made progress. Now what happens?",
    "start": "2441720",
    "end": "2448400"
  },
  {
    "text": "When you do this, certainly\nyou'll get a different G of f.",
    "start": "2448400",
    "end": "2454329"
  },
  {
    "text": "And the G of f is going\nto turn into-- well, this gets a little\nmore interesting here. This is 10 raised to 9 minus 1.",
    "start": "2454330",
    "end": "2461050"
  },
  {
    "text": "This is 10 raised to 9--\nno, that doesn't change. This is still 10 raised to 9.",
    "start": "2461050",
    "end": "2466890"
  },
  {
    "text": "This is 10 raised to 9 minus 1. And that this edge\nhere also changes because basically\nwhat ends up happening",
    "start": "2466890",
    "end": "2476580"
  },
  {
    "text": "is you end up going\nthis way with 1.",
    "start": "2476580",
    "end": "2482580"
  },
  {
    "text": "Did I get that right? Yeah? OK, good. So now what's the bad path?",
    "start": "2482580",
    "end": "2490990"
  },
  {
    "text": "s b a t. So s b a t would now say,\noh, what I'm going to do is,",
    "start": "2490990",
    "end": "2501790"
  },
  {
    "text": "I'm going to go ahead\nand make this 1. What do I do with that? AUDIENCE: Make it 0.",
    "start": "2501790",
    "end": "2506830"
  },
  {
    "text": "PROFESSOR: Make it 0, exactly. Make it 0, and then\nthis 1 becomes a 1.",
    "start": "2506830",
    "end": "2514440"
  },
  {
    "text": "Shall we keep going? No. So 2 billion iterations for\na graph with four vertices.",
    "start": "2514440",
    "end": "2523190"
  },
  {
    "text": "Now that's performance for you. So this particular, potentially\na depth-first Ford-Fulkerson",
    "start": "2523190",
    "end": "2532100"
  },
  {
    "text": "on this example, depending\non the ordering of vertices it's certainly quite\npossible that you",
    "start": "2532100",
    "end": "2539127"
  },
  {
    "text": "would get to this particular\norder in the depth-first search",
    "start": "2539127",
    "end": "2544640"
  },
  {
    "text": "on G of f. The computers is dumb, it\ndoes what you tell it to do,",
    "start": "2544640",
    "end": "2551190"
  },
  {
    "text": "it's doing depth-first search. It's producing these\npaths, and you end up with 2 billion\niterations for this.",
    "start": "2551190",
    "end": "2559850"
  },
  {
    "text": "And how many iterations\ndo you really need if you did it right?",
    "start": "2559850",
    "end": "2568480"
  },
  {
    "text": "Two. So that's a billion\nfactor slowdown. So this is a\npathological example,",
    "start": "2568480",
    "end": "2574340"
  },
  {
    "text": "a simple pathological\nexample, to just show you what the problem is. But you can imagine that if\nyou use depth-first search",
    "start": "2574340",
    "end": "2581319"
  },
  {
    "text": "you might be a factor of\nfive slower on average than if you use some\nof the technique.",
    "start": "2581320",
    "end": "2586400"
  },
  {
    "text": "And a factor of 5 is\nnothing to be scoffed at, especially if you're\nrunning for minutes. And, you know, back in the day\ncomputers were horribly slow.",
    "start": "2586400",
    "end": "2595270"
  },
  {
    "text": "So how is this problem fixed? Well, any number of ways.",
    "start": "2595270",
    "end": "2603310"
  },
  {
    "text": "But the first real way\nthat took into account asymptotitc complexity, did\nanalysis, and did all of that",
    "start": "2603310",
    "end": "2612650"
  },
  {
    "text": "was due to Edmonds\nand Karp, which is a few years after\nFord-Fulkerson. In fact, several years\nafter Ford-Fulkerson.",
    "start": "2612650",
    "end": "2619079"
  },
  {
    "text": "And their contribution was\nnot as much a new algorithm,",
    "start": "2619080",
    "end": "2625380"
  },
  {
    "text": "though it is called\nEdmonds-Karp algorithm. It's really a small\nchange to Ford-Fulkerson.",
    "start": "2625380",
    "end": "2631484"
  },
  {
    "text": "You might want to think\nabout it as the Edmonds-Karp analysis, which was\nkind of important,",
    "start": "2631484",
    "end": "2636549"
  },
  {
    "text": "and we're not going\nto do that here. But you'll see it in\nsection on Friday. But the Edmonds-Karp\nalgorithm slash",
    "start": "2636550",
    "end": "2643670"
  },
  {
    "text": "analysis is that, if you use a\nbreadth-first augmenting path,",
    "start": "2643670",
    "end": "2661150"
  },
  {
    "text": "it's obviously just as easy\nto discover complexity-wise",
    "start": "2661150",
    "end": "2666220"
  },
  {
    "text": "as the depth-first path. Then you could get a\npolynomial bound that did not",
    "start": "2666220",
    "end": "2672020"
  },
  {
    "text": "depend on the capacities\nfor the complexity and therefore iteration\ncount of Ford-Fulkerson.",
    "start": "2672020",
    "end": "2680690"
  },
  {
    "text": "So that was their contribution. And so the breadth-first path is\nthe shortest path in G f from s",
    "start": "2680690",
    "end": "2694590"
  },
  {
    "text": "to t if you count where\neach edge has weight 1.",
    "start": "2694590",
    "end": "2707550"
  },
  {
    "text": "So in that case you would\nget your two iterations. You'd get the shortest\npath of weight 2.",
    "start": "2707550",
    "end": "2712579"
  },
  {
    "text": "Whenever I say weight,\nI mean just counting the number of edges. And these algorithms\nthey actually",
    "start": "2712579",
    "end": "2718510"
  },
  {
    "text": "recognized that\nbreadth-first implementations of Ford-Fulkerson were\nthe ones that ran faster",
    "start": "2718510",
    "end": "2726160"
  },
  {
    "text": "than all the other ones. And then they said, wait,\nwhat's going on here? This looks pretty good.",
    "start": "2726160",
    "end": "2731590"
  },
  {
    "text": "And so they went off and did a\nfairly sophisticated analysis that showed that\nyou had, and as I",
    "start": "2731590",
    "end": "2742700"
  },
  {
    "text": "said you'll see that in\nsection, that you only",
    "start": "2742700",
    "end": "2747810"
  },
  {
    "text": "need order VE augmentations\nin the worst case.",
    "start": "2747810",
    "end": "2753230"
  },
  {
    "text": " So this is what we know\nand love with respect to algorithmic complexity.",
    "start": "2753230",
    "end": "2760450"
  },
  {
    "text": "Order VE augmentations,\nin the worst case, provided you used\nbreadth-first augmentation.",
    "start": "2760450",
    "end": "2766309"
  },
  {
    "text": "And so what is the overall\ncomplexity of the algorithm, let's call it the\nEdmonds-Karp algorithm,",
    "start": "2766310",
    "end": "2771720"
  },
  {
    "text": "with this breadth-first\nsearch it would be-- order?",
    "start": "2771720",
    "end": "2783849"
  },
  {
    "text": "VE square, you could\nthink about it as, let's assume that e\nis greater than V,",
    "start": "2783850",
    "end": "2790980"
  },
  {
    "text": "and so we just say\norder V squared. ",
    "start": "2790980",
    "end": "2797520"
  },
  {
    "text": "So that was the Edmonds\nand Karp's contribution.  This mean that an amazing amount\nof work over the past 30, 40",
    "start": "2797520",
    "end": "2805660"
  },
  {
    "text": "years on improving that bound. [? Denic ?]\nindependently arrived",
    "start": "2805660",
    "end": "2812470"
  },
  {
    "text": "at a similar analysis in bound,\nalong with Emonds and Karp.",
    "start": "2812470",
    "end": "2818700"
  },
  {
    "text": "They were the first to give\npolynomial bounds on max flow. And there was an algorithm\nthat came out of MIT partly,",
    "start": "2818700",
    "end": "2832650"
  },
  {
    "text": "or at least MIT alums,\nwhere you improve that.",
    "start": "2832650",
    "end": "2839220"
  },
  {
    "text": "And so until about\n2011-- and there's a lot of different\nalgorithms depending on whether you're taking\ninto account the value",
    "start": "2839220",
    "end": "2847290"
  },
  {
    "text": "of the capacity, and you want to\nthink about this is as some max value, and if you want to\ninclude that in the complexity",
    "start": "2847290",
    "end": "2854520"
  },
  {
    "text": "then things change a bit. If you can limit that. But assuming that those\ncapacities are essentially",
    "start": "2854520",
    "end": "2861010"
  },
  {
    "text": "unbounded, then the\nfastest algorithm in 2011 was King, Raul, and Tarjan.",
    "start": "2861010",
    "end": "2870285"
  },
  {
    "text": " And that runs in order VE log\nof E divided by V log V V.",
    "start": "2870285",
    "end": "2885364"
  },
  {
    "text": "Obviously, we need\nsomething for the log here. ",
    "start": "2885364",
    "end": "2890500"
  },
  {
    "text": "So that's kind of,\npretty good here, right, because this is pretty small. If you really think about it,\nif E's large for dense graphs",
    "start": "2890500",
    "end": "2897880"
  },
  {
    "text": "this is going to be\na small constant. So that's pretty good. So that was the\nfastest until 2011.",
    "start": "2897880",
    "end": "2903620"
  },
  {
    "text": "Very recently,\nOrlin, who's at MIT, came up with an\norder v e algorithm",
    "start": "2903620",
    "end": "2910010"
  },
  {
    "text": "and there are many variants here\nthat use fast matrix multiply.",
    "start": "2910010",
    "end": "2916200"
  },
  {
    "text": "And then just this\npast September, Aleksander Madry\njoined our department,",
    "start": "2916200",
    "end": "2922349"
  },
  {
    "text": "and he has a variant algorithm\nthat is better in some sense,",
    "start": "2922350",
    "end": "2930680"
  },
  {
    "text": "not in the pure sense\nof V and E but there's",
    "start": "2930680",
    "end": "2936254"
  },
  {
    "text": "a couple of\nconstraints associated with it that are very mild.",
    "start": "2936254",
    "end": "2941410"
  },
  {
    "text": "But it's in that sense\nbetter than order VE and I won't get to that. In the context of 6\nover 6 we are obviously",
    "start": "2941410",
    "end": "2950590"
  },
  {
    "text": "going to stick with\nEdmonds-Karp and Ford-Fulkerson in terms of what\nyou're responsible for,",
    "start": "2950590",
    "end": "2956040"
  },
  {
    "text": "but this as been a rich area\nof research for decades. All right, yeah. [INAUDIBLE]",
    "start": "2956040",
    "end": "2961530"
  },
  {
    "text": " Oh, simply because the\nbreadth-first augmentation",
    "start": "2961530",
    "end": "2972810"
  },
  {
    "text": "takes order e. I'm just saying it\ntakes order E time. So this was the order VE\naugmentations, in the worst",
    "start": "2972810",
    "end": "2980730"
  },
  {
    "text": "case, each augmentation\ntakes order E time, because breadth-first search\ntakes order E time assuming",
    "start": "2980730",
    "end": "2987490"
  },
  {
    "text": "that E is greater than V and I\njust added the E square factor. Thanks for asking. I'm sure a lot of other\npeople had the same question.",
    "start": "2987490",
    "end": "2995130"
  },
  {
    "text": "Yes, I just sort of skipped\nover that a little too quickly. That's why you get\nthe order VE square.",
    "start": "2995130",
    "end": "3001990"
  },
  {
    "text": "And so that's a\nsignificant reduction if you assume that constant\nfactors don't explode",
    "start": "3001990",
    "end": "3007610"
  },
  {
    "text": "going from Edmonds-Karp\nto King, Raul, and Tarjan, and certainly Orlin, So\nnow we got algorithms,",
    "start": "3007610",
    "end": "3016610"
  },
  {
    "text": "we've proven them correct,\nwe've done some analysis. At tomorrow, in section,\nyou're going to see,",
    "start": "3016610",
    "end": "3024610"
  },
  {
    "text": "at the analysis that\ngives you the order VE. Which is a half hours worth\nof pain, should I say.",
    "start": "3024610",
    "end": "3032720"
  },
  {
    "text": "Uh, no, a half hours\nworth of excitement! That corresponds to the order\nVE, that bound that we have.",
    "start": "3032720",
    "end": "3040410"
  },
  {
    "text": "All right, so it's not\nthat difficult. It's about the level of\nthis thing over here,",
    "start": "3040410",
    "end": "3045600"
  },
  {
    "text": "and maybe a little\nbit more involved. So, yeah? AUDIENCE: [INAUDIBLE]",
    "start": "3045600",
    "end": "3053460"
  },
  {
    "text": " PROFESSOR: Breadth-first search\ntakes order v plus e time.",
    "start": "3053460",
    "end": "3060580"
  },
  {
    "text": "On a graph, breadth-first\nsearch is order v plus e. And I'm getting a\nlittle lazy here,",
    "start": "3060580",
    "end": "3066430"
  },
  {
    "text": "and I'm paying for it, by\nputting in the v e square. But I should really\nhave been-- if I",
    "start": "3066430",
    "end": "3072560"
  },
  {
    "text": "wanted to be a stickler, I\nwould have put in v plus e, thank you. ",
    "start": "3072560",
    "end": "3078250"
  },
  {
    "text": "So where was I? So we got an algorithm now. You know, we've got a\nbunch of algorithms.",
    "start": "3078250",
    "end": "3084800"
  },
  {
    "text": "Network flow is\nthis amazing hammer that is being used in a\nwide variety of things. And it's been used for\nmatching, bipartite matching,",
    "start": "3084800",
    "end": "3091880"
  },
  {
    "text": "all sorts of things. My favorite example\nis something that",
    "start": "3091880",
    "end": "3099599"
  },
  {
    "text": "is related to\nsports, I should say, which is a baseball elimination.",
    "start": "3099600",
    "end": "3105900"
  },
  {
    "text": "So what is this\napplication about? You see charts that correspond\nto how your team is doing.",
    "start": "3105900",
    "end": "3114260"
  },
  {
    "text": "Standings, right? Go to ESPN and click on\nstandings for baseball,",
    "start": "3114260",
    "end": "3120530"
  },
  {
    "text": "for example. It doesn't-- now you\nsee pre season standings but let's assume it's\nAugust or something--",
    "start": "3120530",
    "end": "3127690"
  },
  {
    "text": "and you click on standings. And you see a chart that\ncorresponds to games played,",
    "start": "3127690",
    "end": "3137510"
  },
  {
    "text": "games won, games\nlost, games remaining, and so on and so forth.",
    "start": "3137510",
    "end": "3143540"
  },
  {
    "text": "And back in the day\nwhen they were just",
    "start": "3143540",
    "end": "3157640"
  },
  {
    "text": "winners corresponding\nto each division",
    "start": "3157640",
    "end": "3165049"
  },
  {
    "text": "you had to win your division\nto make the playoffs. So you had to be the best.",
    "start": "3165050",
    "end": "3171520"
  },
  {
    "text": "Now if you ended\nup being tied, you ended up having to play\nan elimination game.",
    "start": "3171520",
    "end": "3178440"
  },
  {
    "text": "But the whole purpose\nof this analysis is deciding whether\nyou still have a chance",
    "start": "3178440",
    "end": "3187360"
  },
  {
    "text": "to make the playoffs or not. So the goal here is you\nwant an algorithm that",
    "start": "3187360",
    "end": "3192950"
  },
  {
    "text": "is going to look\nat the standings and decide if your\nteam is alive or not.",
    "start": "3192950",
    "end": "3199700"
  },
  {
    "text": "Is there a chance\nof God is great, whatever, everything goes your\nway, angels in the outfield,",
    "start": "3199700",
    "end": "3206970"
  },
  {
    "text": "right? Are you going to\nmake the playoffs? And so you can be\nvery optimistic.",
    "start": "3206970",
    "end": "3213609"
  },
  {
    "text": "And you might think that\nthis is a straightforward, I'm going to add up a couple\nnumbers and figure this out.",
    "start": "3213610",
    "end": "3218970"
  },
  {
    "text": "It turns out it's not quite\nthat simple though sportswriters would love to think that.",
    "start": "3218970",
    "end": "3224710"
  },
  {
    "text": "That it's as simple as\nadding up a bunch of numbers. And obviously, there's network\nflow lurking in here somewhere.",
    "start": "3224710",
    "end": "3232840"
  },
  {
    "text": "Otherwise, I wouldn't be\ntalking about it here. So this is not quite historical\nin terms of the standings.",
    "start": "3232840",
    "end": "3242434"
  },
  {
    "text": "I tweaked the\nnumbers a little bit in order to make this example\na little more interesting. But roughly speaking,\nAugust 30th, 1996, this",
    "start": "3242434",
    "end": "3250950"
  },
  {
    "text": "was the standings corresponding\nto the American League East. And now this is\n1996 so the teams",
    "start": "3250950",
    "end": "3256890"
  },
  {
    "text": "are a little bit different\nfrom what you have. So New York, unfortunately, was\nleading the division even back",
    "start": "3256890",
    "end": "3264500"
  },
  {
    "text": "then. Still had Baltimore. Then there was Boston.",
    "start": "3264500",
    "end": "3270980"
  },
  {
    "text": "And then was Toronto. And then this is back in\n1996, and Detroit was part",
    "start": "3270980",
    "end": "3277006"
  },
  {
    "text": "of the [INAUDIBLE] back then. This was before realignment. So I just called these one,\ntwo, three, four, and five.",
    "start": "3277007",
    "end": "3286720"
  },
  {
    "text": "Those are the positions. All right, so Boston\nwas in third place. And so, I'm going\nto say these are",
    "start": "3286720",
    "end": "3292480"
  },
  {
    "text": "w i, which are the wins, so\nfar. l i, which are the losses. ",
    "start": "3292480",
    "end": "3299510"
  },
  {
    "text": "And r i, which are\nremaining games to play. ",
    "start": "3299510",
    "end": "3307710"
  },
  {
    "text": "And This is usually\nwhat you see. I mean this is the simple\nversion of the standings",
    "start": "3307710",
    "end": "3319010"
  },
  {
    "text": "and I'm just going to give you\nmost of these, I should say.",
    "start": "3319010",
    "end": "3325090"
  },
  {
    "text": "And I'm not going to write\ndown what Detroit is, simply because I'm going\nto vary that number.",
    "start": "3325090",
    "end": "3330260"
  },
  {
    "text": "Because it gets interesting\nas that number varies. And each of these teams\nhad 28 games to play. ",
    "start": "3330260",
    "end": "3339380"
  },
  {
    "text": "OK so that's usually what you\nsee when you see a snapshot. OK now I'm going\nto also add rij,",
    "start": "3339380",
    "end": "3354150"
  },
  {
    "text": "which are the games that these\nteams play against each other.",
    "start": "3354150",
    "end": "3361920"
  },
  {
    "text": "And the reason is simple. This linear correlation\nbetween win loss column,",
    "start": "3361920",
    "end": "3367350"
  },
  {
    "text": "specifically\ncorresponding to games that Boston plays with New York. No ties in baseball,\nso Boston wins,",
    "start": "3367350",
    "end": "3374820"
  },
  {
    "text": "New York loses and vice versa. So I want those numbers\nas well and these",
    "start": "3374820",
    "end": "3380490"
  },
  {
    "text": "are things that you\ntypically don't see but they're going\nto be important,",
    "start": "3380490",
    "end": "3385620"
  },
  {
    "text": "because they do determine\nwhether your team is alive or eliminated.",
    "start": "3385620",
    "end": "3391620"
  },
  {
    "text": "So 5 The reason I\nhave dashes here",
    "start": "3391620",
    "end": "3400670"
  },
  {
    "text": "is because the team doesn't\nplay itself in the diagonal. ",
    "start": "3400670",
    "end": "3409726"
  },
  {
    "text": "AUDIENCE: Is that\nthe number of games? PROFESSOR: Yes that is\nabsolutely the number of games that they're going to\nplay against each other.",
    "start": "3409727",
    "end": "3416070"
  },
  {
    "text": "All right so I've\ngot small number. I mean 5 plus 7, 12.",
    "start": "3416070",
    "end": "3423119"
  },
  {
    "text": "Plus 4. What is that? 16. 16 plus 3 is 19. There's 28 games\nleft to play, there's",
    "start": "3423120",
    "end": "3430416"
  },
  {
    "text": "obviously games that are being\nplayed against other teams outside the division. And so this is just rij, OK?",
    "start": "3430416",
    "end": "3437109"
  },
  {
    "text": "So that's the story here. And I should say that when\nI talk about this, what",
    "start": "3437110",
    "end": "3449640"
  },
  {
    "text": "are these corresponding to? Well this corresponds to NY. This column corresponds to\nBaltimore this corresponds",
    "start": "3449640",
    "end": "3457880"
  },
  {
    "text": "to Boston, same order, this\ncorresponds to Toronto. This column\ncorresponds to Detroit.",
    "start": "3457880",
    "end": "3465830"
  },
  {
    "text": "So otherwise it's\nunder specified. Any questions about\nthe table here?",
    "start": "3465830",
    "end": "3471880"
  },
  {
    "start": "3471880",
    "end": "3479556"
  },
  {
    "text": "If you want to know,\nthe Bo Sox did not make the playoffs that year. ",
    "start": "3479556",
    "end": "3487150"
  },
  {
    "text": "So all that most sportswriters\ndo, most people do,",
    "start": "3487150",
    "end": "3492549"
  },
  {
    "text": "is say Team i is eliminated.",
    "start": "3492550",
    "end": "3498685"
  },
  {
    "text": " If wi plus ri is strictly\nless than wj for sum j.",
    "start": "3498685",
    "end": "3517304"
  },
  {
    "text": "So you're just going to\nsay, OK you know what? If I've won all my\ngames, I'm still not going to make it\nto this team that's",
    "start": "3517304",
    "end": "3523440"
  },
  {
    "text": "already won 75 games, right? And so clearly I'm done.",
    "start": "3523440",
    "end": "3530360"
  },
  {
    "text": "That team has already\nwon more games than I could possibly win. So that's an easy one. ",
    "start": "3530360",
    "end": "3536970"
  },
  {
    "text": "And so this is strictly\nless, because we're just talking about elimination,\ntotal elimination.",
    "start": "3536970",
    "end": "3543650"
  },
  {
    "text": "You get your summer vacation,\nor your fall vacation. So let's just say\nthat you had Detroit,",
    "start": "3543650",
    "end": "3553240"
  },
  {
    "text": "and you're talking\nabout w 5 years. You're talking about\nthis number here, is 46.",
    "start": "3553240",
    "end": "3560380"
  },
  {
    "text": "l5 is 88. So they're having\na bad season here.",
    "start": "3560380",
    "end": "3568180"
  },
  {
    "text": "And you're going to\nsay 46 plus 28 equals",
    "start": "3568180",
    "end": "3574700"
  },
  {
    "text": "74, which is less than 75. Therefore in this scenario,\nDetroit is eliminated.",
    "start": "3574700",
    "end": "3582734"
  },
  {
    "text": "All makes sense?  So this is sufficient, but\nI claim it's not necessary.",
    "start": "3582734",
    "end": "3593610"
  },
  {
    "text": "So you might actually\nhave false hope if you are a Mirror\nsportswriter, who",
    "start": "3593610",
    "end": "3602130"
  },
  {
    "text": "only knows to add\nup these numbers and compare it with others. But if you were a\n6046 student, and you",
    "start": "3602130",
    "end": "3609369"
  },
  {
    "text": "went through these wonderful\nlectures on network flow, you know much more.",
    "start": "3609370",
    "end": "3615080"
  },
  {
    "text": "And we're not quite there\nyet in terms of requiring",
    "start": "3615080",
    "end": "3621530"
  },
  {
    "text": "the power of network flow. But I ask, what if w5 were 47?",
    "start": "3621530",
    "end": "3632359"
  },
  {
    "text": " Can you make an argument which\nclearly doesn't work here,",
    "start": "3632360",
    "end": "3642120"
  },
  {
    "text": "with this naive argument,\nyou have 75 equals 75. So you still have hope.",
    "start": "3642120",
    "end": "3647595"
  },
  {
    "text": "But can you make an\nargument that if w5 were 47, given the whole table-- that's\nthe hint, the whole table,",
    "start": "3647595",
    "end": "3655750"
  },
  {
    "text": "that Detroit was\nactually eliminated. Worth the Frisbee\nfor sure, right?",
    "start": "3655750",
    "end": "3661630"
  },
  {
    "text": "Over there. I saw you first. AUDIENCE: It looks\nlike the only way that Detroit can get more\nwins than New York is",
    "start": "3661630",
    "end": "3669400"
  },
  {
    "text": "if they win all their games and\nNew York loses all their games? PROFESSOR: Yes. AUDIENCE: and if New York\nloses all their games, they're going to lose\n7 games to Boston",
    "start": "3669400",
    "end": "3675698"
  },
  {
    "text": "And Boston will have 76 wins. PROFESSOR: Exactly right.",
    "start": "3675698",
    "end": "3681190"
  },
  {
    "text": "So that's a great argument. All right, could you stand up? All right.",
    "start": "3681190",
    "end": "3686350"
  },
  {
    "text": " You catch well too.",
    "start": "3686350",
    "end": "3692980"
  },
  {
    "text": "So that's basically the\nessence of the issue. There's stuff going\non which corresponds",
    "start": "3692980",
    "end": "3700210"
  },
  {
    "text": "to teams playing each other\nthat can affect the outcome.",
    "start": "3700210",
    "end": "3705609"
  },
  {
    "text": "OK so let me write out what\nthe gentleman just said. ",
    "start": "3705610",
    "end": "3712320"
  },
  {
    "text": "Still eliminated, boohoo,\nbecause w5 plus r5",
    "start": "3712320",
    "end": "3725220"
  },
  {
    "text": "equals 75 now. 47 plus 28 is 75.",
    "start": "3725220",
    "end": "3730710"
  },
  {
    "text": "But either New York\nor Baltimore-- I",
    "start": "3730710",
    "end": "3739420"
  },
  {
    "text": "mean there's many ways\nyou could show this. But we'll just\ntake-- this is not",
    "start": "3739420",
    "end": "3745760"
  },
  {
    "text": "exactly what the gentleman said. But this is what I had here,\nso let me just write that out.",
    "start": "3745760",
    "end": "3751130"
  },
  {
    "text": "Either New York or\nBaltimore will win 76 games. ",
    "start": "3751130",
    "end": "3756700"
  },
  {
    "text": "Since they play\neach other 5 times. ",
    "start": "3756700",
    "end": "3766780"
  },
  {
    "text": "OK? ",
    "start": "3766780",
    "end": "3771840"
  },
  {
    "text": "So now I'm going to do some\nmore sophisticated analysis",
    "start": "3771840",
    "end": "3778630"
  },
  {
    "text": "and I got what I wanted. But let's say that w5 was 48.",
    "start": "3778630",
    "end": "3790780"
  },
  {
    "text": "So this was 76 and\nit kind of worked out for both of the examples.",
    "start": "3790780",
    "end": "3796060"
  },
  {
    "text": "The one with Boston and the 7\ngames, that I got as an answer.",
    "start": "3796060",
    "end": "3802000"
  },
  {
    "text": "And this one that\nI just wrote down. But what if w5 equals 48?",
    "start": "3802000",
    "end": "3813265"
  },
  {
    "text": " Is Detroit eliminated?",
    "start": "3813265",
    "end": "3821339"
  },
  {
    "text": "How many people think\nDetroit is eliminated? All right, a bunch of you. ",
    "start": "3821340",
    "end": "3829400"
  },
  {
    "text": "You want to explain why? AUDIENCE: So New York,\nBaltimore, and Boston are guaranteed to get a total\nof at least 14 more wins.",
    "start": "3829400",
    "end": "3837690"
  },
  {
    "text": "Because of their\ntotal number of wins that they're allowed to have\nwithout any of them getting to 77 is only going to be 13.",
    "start": "3837690",
    "end": "3844202"
  },
  {
    "text": "So it will be 1 plus\n5 so that's too many. But they're not\nactually eliminated, because this is from the\nWild Card round anyway.",
    "start": "3844202",
    "end": "3850903"
  },
  {
    "text": " PROFESSOR: I didn't like the\nlast part of your answer.",
    "start": "3850903",
    "end": "3856839"
  },
  {
    "text": "Did, but the other question\nis, did people understand the first part of his answer?",
    "start": "3856840",
    "end": "3862760"
  },
  {
    "text": "That was complicated. I mean it was the\nright analysis. Great job. So, we want a\nsystematic way so we",
    "start": "3862760",
    "end": "3870300"
  },
  {
    "text": "can run an algorithm\nso we need to bother with this type of analysis.",
    "start": "3870300",
    "end": "3877040"
  },
  {
    "text": "And you're exactly right. It turns out that I\nskipped this little detail,",
    "start": "3877040",
    "end": "3882940"
  },
  {
    "text": "because it was\ninconvenient, which is that in '95, a wild\ncard was introduced.",
    "start": "3882940",
    "end": "3888869"
  },
  {
    "text": "So we could think about\nthis as elimination from being the division winner.",
    "start": "3888870",
    "end": "3894550"
  },
  {
    "text": "So that's an aside. Thanks for pointing out,\nit's important to know sports history.",
    "start": "3894550",
    "end": "3901589"
  },
  {
    "text": "Really important. Almost as important as 046. But basically it gets\nmore and more complicated",
    "start": "3901590",
    "end": "3911060"
  },
  {
    "text": "as you get closer and\ncloser to these edge cases.",
    "start": "3911060",
    "end": "3916230"
  },
  {
    "text": "And so you can do an analysis,\nand I'll actually describe roughly what your analysis was.",
    "start": "3916230",
    "end": "3922620"
  },
  {
    "text": "What's your name? AUDIENCE: Alexander. PROFESSOR: Alexander's\nanalysis was. But I don't want to do that yet.",
    "start": "3922620",
    "end": "3928309"
  },
  {
    "text": "I'll do that at the\nend if you have time. I want to give you a general\npurpose technique that obviously is going to use max\nflow to solve this problem.",
    "start": "3928310",
    "end": "3936140"
  },
  {
    "text": "All right? So we're going to set this up. And so that's actually\none of the nice things about maximum flow.",
    "start": "3936140",
    "end": "3942430"
  },
  {
    "text": "How you can translate. You can sort of create\nthese networks from tables or what have you, and\nadd capacities to edges,",
    "start": "3942430",
    "end": "3951320"
  },
  {
    "text": "find max flows, and\nsolve these problems. So this is a good\nexample of that.",
    "start": "3951320",
    "end": "3957570"
  },
  {
    "text": "So let's go ahead and do that\nI am going to draw a flow network based on this table.",
    "start": "3957570",
    "end": "3966970"
  },
  {
    "text": "It's going to have a source\nand a sync that are basically these dummy nodes that\nare essentially going",
    "start": "3966970",
    "end": "3973880"
  },
  {
    "text": "to source about infinite flow. But the capacities\nof the edges are going to come from that table.",
    "start": "3973880",
    "end": "3979849"
  },
  {
    "text": "And the edges themselves are\nstraightforward in the sense that the graph is going\nto look the same based",
    "start": "3979850",
    "end": "3988410"
  },
  {
    "text": "on the number of teams,\nand the particular team that you're analyzing. So this graph is\ntrying to determine--",
    "start": "3988410",
    "end": "3994880"
  },
  {
    "text": "this is a flow network\nto determine if team",
    "start": "3994880",
    "end": "4006178"
  },
  {
    "text": "5, Detroit, is eliminated. ",
    "start": "4006178",
    "end": "4013800"
  },
  {
    "text": "This is just the flow network. I'm going to have\na bunch of edges.",
    "start": "4013800",
    "end": "4020490"
  },
  {
    "text": "I'm going to just draw this\nonce and we'll be moving things",
    "start": "4020490",
    "end": "4026869"
  },
  {
    "text": "around on this. 2 to 3, 1 to 4, 2 to\n4, and lastly 3 to 4.",
    "start": "4026870",
    "end": "4038680"
  },
  {
    "text": "And the reason you\ndon't see 5 here is because this is an\nanalysis for team 5.",
    "start": "4038680",
    "end": "4044915"
  },
  {
    "start": "4044915",
    "end": "4053950"
  },
  {
    "text": "So the other 4\nteams show up here. They have edges going to t. s is over here, and it's\ngot a bunch of edges",
    "start": "4053950",
    "end": "4062710"
  },
  {
    "text": "going to all of these nodes. What are these pairs? As you can imagine, these\npairs correspond to the games",
    "start": "4062710",
    "end": "4070940"
  },
  {
    "text": "that each of these teams\nthat are inside the circle play against each other.",
    "start": "4070940",
    "end": "4076710"
  },
  {
    "text": "So 3 plays 4 a certain\nnumber of times. According to that\ntable it's 4 times.",
    "start": "4076710",
    "end": "4081930"
  },
  {
    "text": "So I'm going to put a 4 in here. This is 4 as well. 4, 5, 7, 2.",
    "start": "4081930",
    "end": "4091940"
  },
  {
    "text": "OK? And the edges in\nbetween here are going to have\ncapacities of infinity",
    "start": "4091940",
    "end": "4098278"
  },
  {
    "text": "and how are these\nedges structured? So far I've just explained\nhow the left-hand side works.",
    "start": "4098279",
    "end": "4105310"
  },
  {
    "text": "These edges have a\ncapacity of infinity. 1 2 goes to 1, 1 2 goes to 2.",
    "start": "4105310",
    "end": "4110589"
  },
  {
    "text": "1 3 goes to 1, 1 3 goes to 3. And that's pretty much it.",
    "start": "4110590",
    "end": "4116449"
  },
  {
    "text": "So that's where these edges are. That's how these\nedges are introduced.",
    "start": "4116450",
    "end": "4123540"
  },
  {
    "text": "And all of these edges have\na capacity of infinity.",
    "start": "4123540",
    "end": "4130439"
  },
  {
    "text": "2 to 4, 3 to 4, and that.",
    "start": "4130439",
    "end": "4140528"
  },
  {
    "text": "So far, it's pretty\nstraightforward. There's one last thing\nthat we need to do,",
    "start": "4140529",
    "end": "4145970"
  },
  {
    "text": "which is add capacities\nto these edges. This is actually crucial.",
    "start": "4145970",
    "end": "4151670"
  },
  {
    "text": "It turns out that we have\nto add capacities such that this max flow is going\nto represent elimination.",
    "start": "4151670",
    "end": "4157490"
  },
  {
    "text": "So these capacities\nhave to be chosen. And in particular\nthe equation for this",
    "start": "4157490",
    "end": "4162910"
  },
  {
    "text": "is simply w5 plus r5 minus w1.",
    "start": "4162910",
    "end": "4168700"
  },
  {
    "text": " In this case if it's 48, I'm\nasking the question for 48",
    "start": "4168700",
    "end": "4175310"
  },
  {
    "text": "for w5 plus 28 minus 75.",
    "start": "4175310",
    "end": "4180939"
  },
  {
    "text": "So that's 1. And then this thing\nhere would be w5.",
    "start": "4180939",
    "end": "4188920"
  },
  {
    "text": "I'll just write that out. w5\nplus r5 minus w2, hopefully",
    "start": "4188920",
    "end": "4194089"
  },
  {
    "text": "you can read that, and that's\na 5 and then similarly this is a 7, and that's 13.",
    "start": "4194090",
    "end": "4200520"
  },
  {
    "text": "And you might ask, what\ndoes this represent? Well it kind of\nrepresents what you think it represents if you\njust look at that equation.",
    "start": "4200520",
    "end": "4207510"
  },
  {
    "text": "It says how much can\nI push through here",
    "start": "4207510",
    "end": "4214429"
  },
  {
    "text": "before I get greater than w1. So what is the capacity?",
    "start": "4214430",
    "end": "4219780"
  },
  {
    "text": "What's the difference here?  if I have a 1 here, that means\nthat I still see w5 plus r5,",
    "start": "4219780",
    "end": "4230980"
  },
  {
    "text": "I'm 1 greater than w1. So in particular, if I\nwant to write this out,",
    "start": "4230980",
    "end": "4236190"
  },
  {
    "text": "the capacities are the\nnumber of games team",
    "start": "4236190",
    "end": "4247430"
  },
  {
    "text": "i can win, and not have\nmore wins than team 5.",
    "start": "4247430",
    "end": "4265730"
  },
  {
    "start": "4265730",
    "end": "4270970"
  },
  {
    "text": "So this is a\nstatement about team 1 when I see that over there.",
    "start": "4270970",
    "end": "4278090"
  },
  {
    "text": "Our team 2 for the other edge. And I'm just trying\nto figure out",
    "start": "4278090",
    "end": "4283320"
  },
  {
    "text": "how much can I allow, with\nrespect to this other team,",
    "start": "4283320",
    "end": "4289540"
  },
  {
    "text": "to determine elimination\nfor the particular team that I'm looking\nat, team 5 or not. So in particular,\nlet's say that team i",
    "start": "4289540",
    "end": "4301740"
  },
  {
    "text": "wins one particular game. So it goes up to\nit goes up to 76.",
    "start": "4301740",
    "end": "4306850"
  },
  {
    "text": "And if it goes up to 76,\nit does not necessarily",
    "start": "4306850",
    "end": "4313850"
  },
  {
    "text": "have more wins then\nteam 5, because team 5 can go up to 76 as well.",
    "start": "4313850",
    "end": "4319000"
  },
  {
    "text": "That's pretty much\nit, and the same thing for team 2, team 3, and team 4. ",
    "start": "4319000",
    "end": "4327410"
  },
  {
    "text": "So the intuition here\nis the following.",
    "start": "4327410",
    "end": "4335040"
  },
  {
    "text": "So what we're going to do\nis compute the max flow and look for a certain\nproperty on that network.",
    "start": "4335040",
    "end": "4342280"
  },
  {
    "text": "And that's going to tell\nus if team 5 is eliminated or not for the particular\nchoice of wi of 48,",
    "start": "4342280",
    "end": "4349180"
  },
  {
    "text": "because that's how I constructed\nthis particular example. So the intuition is, assume\nteam 5 wins all remaining games.",
    "start": "4349180",
    "end": "4365530"
  },
  {
    "text": "That makes perfect sense. This is the best case scenario. You're trying to figure out,\nin the best case scenario,",
    "start": "4365530",
    "end": "4371830"
  },
  {
    "text": "are you eliminated or not? Is team 5 eliminated or not? And what you want to do is\ndivvy up the remaining games.",
    "start": "4371830",
    "end": "4380620"
  },
  {
    "text": " And that corresponds to sending\nflow through these edges.",
    "start": "4380620",
    "end": "4387830"
  },
  {
    "text": "So flow through these edges\ncorresponds to assigning wins to teams 1, 2, 3, and 4.",
    "start": "4387830",
    "end": "4396440"
  },
  {
    "text": "That's the key. Divvy up the remaining games,\nso all teams have less than",
    "start": "4396440",
    "end": "4408330"
  },
  {
    "text": "or equal to w5 plus r5 wins. So what does it mean if\nall teams have less than",
    "start": "4408330",
    "end": "4415030"
  },
  {
    "text": "or equal to w5 plus r5 wins? If you can divvied up\nsuch that that's the case, what does that mean for team 5?",
    "start": "4415030",
    "end": "4424080"
  },
  {
    "text": "Team five is still in the game. Team 5 is not eliminated. So if you can do this, then\nteam 5 is not eliminated",
    "start": "4424080",
    "end": "4441850"
  },
  {
    "text": "If you can't team\n5 is eliminated. Because some team is\ngoing to get 77 wins.",
    "start": "4441850",
    "end": "4451760"
  },
  {
    "text": "And so that analysis that\nAlexander carried out wasn't a flow analysis. But somehow, that's\ngot to be in here.",
    "start": "4451760",
    "end": "4458732"
  },
  {
    "text": "That type of analysis\nhas got to be in here to show that some team\nis going to get to 77 wins.",
    "start": "4458732",
    "end": "4464210"
  },
  {
    "text": "Because you know, well\nthanks to Alexander, that Detroit is going\nto be eliminated here.",
    "start": "4464210",
    "end": "4471870"
  },
  {
    "text": "But we want to show that\nin terms of the max flow on this network.",
    "start": "4471870",
    "end": "4477010"
  },
  {
    "text": " So there is an associated\ntheorem that I'll write.",
    "start": "4477010",
    "end": "4490586"
  },
  {
    "text": "We've got enough time here. We just have to find\nthe max flow for this.",
    "start": "4490586",
    "end": "4495710"
  },
  {
    "text": "And that should\ntake just a minute. But I want to set it up so\nthat's pretty much the end.",
    "start": "4495710",
    "end": "4505040"
  },
  {
    "text": "Finding the max flow,\nwhat that means. But the theorem is,\nwhich is essentially",
    "start": "4505040",
    "end": "4510489"
  },
  {
    "text": "a more precise restatement\nof this observation, is that team 5-- obviously\nyou can do this for any team--",
    "start": "4510490",
    "end": "4521170"
  },
  {
    "text": "is eliminated.  If and only if the max\nflow does not saturate",
    "start": "4521170",
    "end": "4537760"
  },
  {
    "text": "all edges leaving the source. ",
    "start": "4537760",
    "end": "4546394"
  },
  {
    "text": "I.e. in this case, the max\nflow is strictly less than 26,",
    "start": "4546394",
    "end": "4556090"
  },
  {
    "text": "which corresponds to\nthe sum of those things. 5 plus 7 plus,\nyadda yadda yadda.",
    "start": "4556090",
    "end": "4561310"
  },
  {
    "text": "And so what does it mean to\nsaturate all of the edges? It means that all the\ngames have been played.",
    "start": "4561310",
    "end": "4567970"
  },
  {
    "text": "All the relevant games here that\naffect team 5 have been played. So you want to\nplay all the games,",
    "start": "4567970",
    "end": "4574350"
  },
  {
    "text": "because that's the\nend game, if you will. But basically what\nthat intuition here",
    "start": "4574350",
    "end": "4581980"
  },
  {
    "text": "is that saturation\nof those edges corresponds to playing\nall remaining games.",
    "start": "4581980",
    "end": "4594005"
  },
  {
    "start": "4594005",
    "end": "4599929"
  },
  {
    "text": "And the argument is\nnot a proof if you",
    "start": "4599930",
    "end": "4608380"
  },
  {
    "text": "can't play all the\nremaining games,",
    "start": "4608380",
    "end": "4621690"
  },
  {
    "text": "without exceeding the\ncapacity of i to t edges,",
    "start": "4621690",
    "end": "4635660"
  },
  {
    "text": "team 5 is eliminated. ",
    "start": "4635660",
    "end": "4645040"
  },
  {
    "text": "So you have to saturate, because\nyou have to play all the games. And when you do that saturation,\nobviously your flow network",
    "start": "4645040",
    "end": "4653140"
  },
  {
    "text": "has to satisfy its laws\ncorresponding to the capacity that we have in there.",
    "start": "4653140",
    "end": "4658750"
  },
  {
    "text": "And it's quite\npossible that this is going to cause a restriction\nover here that corresponds",
    "start": "4658750",
    "end": "4666420"
  },
  {
    "text": "to requiring that\nnot all the games we play in order for\nDetroit to survive.",
    "start": "4666420",
    "end": "4674850"
  },
  {
    "text": "and that's basically the game. So saturating the network\nmeans playing all the games.",
    "start": "4674850",
    "end": "4679880"
  },
  {
    "text": "And if you get a max\nflow, to be more concrete,",
    "start": "4679880",
    "end": "4685000"
  },
  {
    "text": "if you can get a max flow\nhere that's less than 26,",
    "start": "4685000",
    "end": "4692380"
  },
  {
    "text": "then you've saturated\nall the edges and this means that you\nplayed all the games.",
    "start": "4692380",
    "end": "4701260"
  },
  {
    "text": "And you found this\nteam that beats you.",
    "start": "4701260",
    "end": "4706550"
  },
  {
    "text": "That beats team 5. So what happens over here?",
    "start": "4706550",
    "end": "4713950"
  },
  {
    "text": "Let's take a look at this\nand all you have to do here, is to find the max\nflow and then we",
    "start": "4713950",
    "end": "4721179"
  },
  {
    "text": "can go back to the\nstatement of the theorem. So I want to find the\nmin cut corresponding",
    "start": "4721180",
    "end": "4728679"
  },
  {
    "text": "to this, which is going to\ntell me what the max flow is. I could go around for focus\nin on this, and start with 0",
    "start": "4728680",
    "end": "4734450"
  },
  {
    "text": "and augment, and\nso on and so forth. But there's another way which\nis not necessarily algorithmic,",
    "start": "4734450",
    "end": "4739849"
  },
  {
    "text": "but eyeballs. Use your eyeballs and\nfind me the min cut here.",
    "start": "4739850",
    "end": "4748140"
  },
  {
    "text": "Which has the minimum capacity. The min cut, the\nminimum capacity",
    "start": "4748140",
    "end": "4753700"
  },
  {
    "text": "is going to tell me\nwhat my max flow is. We know that from the\nmax-flow min-cut theorem.",
    "start": "4753700",
    "end": "4759880"
  },
  {
    "text": "So I want to cut this network\ninto capital S and capital T",
    "start": "4759880",
    "end": "4765679"
  },
  {
    "text": "and find the max flow. So any ideas?",
    "start": "4765680",
    "end": "4773210"
  },
  {
    "text": "It's a little hard. So I see some people\nwaving their hands.",
    "start": "4773210",
    "end": "4778909"
  },
  {
    "text": "All right, let me just\ndo that since we're running out of time. It's kind of cool. So I'm going to use\na different color.",
    "start": "4778910",
    "end": "4785150"
  },
  {
    "text": "We're going to go\nlike that, yeah. and then veer over this way,\nand then jump up like that,",
    "start": "4785150",
    "end": "4797060"
  },
  {
    "text": "and then come over like that. And this is S. And\non this side is T.",
    "start": "4797060",
    "end": "4809449"
  },
  {
    "text": "So I got small s and capital\nS, small t and cap T. But I got this 4 in cap T.\nNotice that I got 3 to 4,",
    "start": "4809450",
    "end": "4818250"
  },
  {
    "text": "2 to 4, 1 to 4 in cap T and I\ngot these other ones in cap S.",
    "start": "4818250",
    "end": "4824500"
  },
  {
    "text": "So all I've done here,\nforget baseball elimination, is find a min-cut. And if you look at what the\nvalue of this min-cut is,",
    "start": "4824500",
    "end": "4833740"
  },
  {
    "text": "the value of the\nmin-cut is simply the capacities of the\nedges that go from S to T.",
    "start": "4833740",
    "end": "4842330"
  },
  {
    "text": "So it's simply the S\nto T edges and summing",
    "start": "4842330",
    "end": "4847650"
  },
  {
    "text": "over the capacities. And if you take a\nlook, obviously S to T, you've got 4 plus 4 plus 4.",
    "start": "4847650",
    "end": "4852810"
  },
  {
    "text": "So you've got 4 plus 4\nplus 4, corresponding to this one, this\none, and that one.",
    "start": "4852810",
    "end": "4859860"
  },
  {
    "text": "Do I need to add\nthis edge in here? Over here? ",
    "start": "4859860",
    "end": "4867050"
  },
  {
    "text": "Where does this edge go? From this to over there? That goes from T to\nS. So that's good",
    "start": "4867050",
    "end": "4872824"
  },
  {
    "text": "because that has a\ncapacity of infinity. That would cause trouble. And so the other edges\nare I got 1, 5, and 7.",
    "start": "4872824",
    "end": "4881580"
  },
  {
    "text": "So I need this one,\nthat one, and that one. So 4 plus 4 plus 4, plus\n1 plus 5 plus 7 equals 25.",
    "start": "4881580",
    "end": "4893400"
  },
  {
    "text": "And so this implies elimination,\nbecause what I've done",
    "start": "4893400",
    "end": "4901350"
  },
  {
    "text": "is found the max flow, which\nis strictly less than 26. Which means that I have not\nsaturated all of the edges that",
    "start": "4901350",
    "end": "4909280"
  },
  {
    "text": "come out of s. I have not been able\nto play all the games. And so if I'd played\nall the games,",
    "start": "4909280",
    "end": "4915860"
  },
  {
    "text": "I'd be exceeding some\ncapacity constraint. And if I push more\nflow in there, I'd be exceeding some capacity\nconstraint on this side.",
    "start": "4915860",
    "end": "4923829"
  },
  {
    "text": "And that would\nimply that Detroit is eliminated, because some\nteam would have 77 wins.",
    "start": "4923830",
    "end": "4931190"
  },
  {
    "text": "All right, so hopefully\nyou've got the gist of it. I'll put this in the notes.",
    "start": "4931190",
    "end": "4937510"
  },
  {
    "text": "Take a long, hard look at it. That particular values\naren't important. The framework of\ntranslation is important.",
    "start": "4937510",
    "end": "4945099"
  },
  {
    "text": "And you can certainly\nask questions of your TAs on Friday. And I'll stick around\nhere for questions.",
    "start": "4945100",
    "end": "4952220"
  }
]