[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13339"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13340",
    "end": "21130"
  },
  {
    "text": "PROFESSOR: This week's\nproblem is from the 2008 quiz one on search. It is motivated by the search of\nevil overlord, Mark Vader, who",
    "start": "21130",
    "end": "30060"
  },
  {
    "text": "is shopping for a\nnew evil stronghold. He starts from his\ncurrent stronghold, which is S, the\nDepth-First Search Star.",
    "start": "30060",
    "end": "37450"
  },
  {
    "text": "Now the Depth-First Search Star\nhas the following qualities. It has a small, thermal\nExhaust Pipe Weakness.",
    "start": "37450",
    "end": "44530"
  },
  {
    "text": "It has the quality\nof That's No Moon, but it does not have a\nRace of Enslaved Minions,",
    "start": "44530",
    "end": "49870"
  },
  {
    "text": "or a Secret Escape Route,\nor Sharks with Laser Beams. Now when I originally\nwrote this problem in 2008,",
    "start": "49870",
    "end": "56360"
  },
  {
    "text": "there was another quality\nthat very important. It was a giant Laser, and it\ndid have that property, as did",
    "start": "56360",
    "end": "63060"
  },
  {
    "text": "Dr. Evil's Moon Base,\nbut that was removed to make it easier to solve. So we're going to solve it\nwithout the giant laser,",
    "start": "63060",
    "end": "70110"
  },
  {
    "text": "that we can just have the\nSharks with Laser Beams. So Mark Vader has gone to\nAckbar's Emporium of New Evil",
    "start": "70110",
    "end": "81030"
  },
  {
    "text": "Strongholds, which are\nlisted on the left, and he's trying to\nfigure out the best",
    "start": "81030",
    "end": "87420"
  },
  {
    "text": "way to get from his\ncurrent stronghold to his goal stronghold,\nthe 603 Fortress, which",
    "start": "87420",
    "end": "94290"
  },
  {
    "text": "has the admirable qualities of\nno small thermal Exhaust Pipe Weakness, and it still\nhas That's No Moon.",
    "start": "94290",
    "end": "100979"
  },
  {
    "text": "It has a Race of\nEnslaved Minions, and a Secret Escape Route,\nand Sharks with Laser Beams. So it's got everything you\nwould want and no weakness.",
    "start": "100980",
    "end": "108640"
  },
  {
    "text": "However, he can only move\nbetween fortresses that have exactly one difference.",
    "start": "108640",
    "end": "116430"
  },
  {
    "text": "Fortunately, Mark remembers\nhow to perform the search techniques he learned in\n6.034 from his mentor, Emperor",
    "start": "116430",
    "end": "121810"
  },
  {
    "text": "Palpatine. So we've got several\nfortresses here. We've got the\nDepth-First Search Star.",
    "start": "121810",
    "end": "127980"
  },
  {
    "text": "We've also got\nShaoul Ghoul, which has the qualities,\nbasically, of That's",
    "start": "127980",
    "end": "135510"
  },
  {
    "text": "No Moon, and none of\nthe other qualities. Dol Guldur here, has got the\nExhaust Pipe Weakness somehow,",
    "start": "135510",
    "end": "142739"
  },
  {
    "text": "despite being\nSauron's stronghold. It's not a moon, and it\nhas those enslaved minions.",
    "start": "142740",
    "end": "148629"
  },
  {
    "text": "I guess the Orcs are enslaved. Moonraker, here, only has\nthe Exhaust Pipe Weakness, so it's not very good.",
    "start": "148630",
    "end": "155230"
  },
  {
    "text": "But James Bond didn't\nneed to deal with stuff. Zeal Underwater\nPalace has That's",
    "start": "155230",
    "end": "162340"
  },
  {
    "text": "No Moon and a\nSecret Escape Route. Zeromus' Lunar Core has\nan Exhaust Pipe Weakness",
    "start": "162340",
    "end": "168750"
  },
  {
    "text": "and a Race of Enslaved Minions. Whalers of the Moon Ride has\nthe Exhaust Pipe Weakness,",
    "start": "168750",
    "end": "174950"
  },
  {
    "text": "Race of Enslaved Minions,\nand Sharks with Laser Beams. 6.03 Fortress we've\nalready been over. Atlantis has all qualities\nexcept for a Secret Escape",
    "start": "174950",
    "end": "182640"
  },
  {
    "text": "Route. Willy Wonka's Factory\nhas some of everything. It is, after all,\nWilly Wonka's Factory.",
    "start": "182640",
    "end": "189239"
  },
  {
    "text": "Highlight, the Race of Enslaved\nMinions, the Oompa Loompas. And Dr. Evil's Moon\nBase is only missing",
    "start": "189240",
    "end": "194620"
  },
  {
    "text": "That's No Moon, because it is a\nmoon, because it's a moon base.",
    "start": "194620",
    "end": "199860"
  },
  {
    "text": "So if you got all\nthe references that were used in making those\nfortresses, I'm sorry.",
    "start": "199860",
    "end": "207114"
  },
  {
    "text": "There's nothing\nI can do for you. ",
    "start": "207114",
    "end": "217110"
  },
  {
    "text": "Now, Mark, being a\nclever evil overlord, realizes that he can produce\na graph of the exploration",
    "start": "217110",
    "end": "225540"
  },
  {
    "text": "choices with edges\njoining strongholds that differ by just one feature. So although this\nis a graph here,",
    "start": "225540",
    "end": "232150"
  },
  {
    "text": "as Patrick often says-- and you\nget to hear again right now-- search is about choice,\nnot just about maps.",
    "start": "232150",
    "end": "238720"
  },
  {
    "text": "So we're not moving around\nanywhere in the real world, but we certainly are\ngoing to move around",
    "start": "238720",
    "end": "244080"
  },
  {
    "text": "this graph to pick between\nthese many stronghold choices. How can we decide\nwhere to travel? Well, we're about to find out.",
    "start": "244080",
    "end": "250659"
  },
  {
    "text": "So we've got this\nlovely graph right here, and now we're going to get\nto do depth-first search",
    "start": "250660",
    "end": "256979"
  },
  {
    "text": "on the graph. Now there's a lot of\nways to do search, and you've seen\nPatrick do it, you",
    "start": "256980",
    "end": "263409"
  },
  {
    "text": "may have seen some people\ndo it in recitation. And I'm going to offer you guys\na unique opportunity to see me",
    "start": "263410",
    "end": "269650"
  },
  {
    "text": "do search in one of several\nways, or possibly more. I have the tried\nand true method.",
    "start": "269650",
    "end": "275919"
  },
  {
    "text": "You have the queue,\nor agenda, or whatever you want to call it. You keep track of\nit at every level.",
    "start": "275920",
    "end": "280970"
  },
  {
    "text": "You make damn sure that\neverything you're doing is right. It takes a long time, and\nyou get the answer right.",
    "start": "280970",
    "end": "287340"
  },
  {
    "text": "Or there's one where you\nonly work with the goal tree, and you draw it really fast,\nand you might make a mistake,",
    "start": "287340",
    "end": "293920"
  },
  {
    "text": "but it's going to\nsolve it more quickly. So who would rather see the\nreliable, but slower, approach?",
    "start": "293920",
    "end": "299310"
  },
  {
    "text": " Who would rather see the faster,\nbut less reliable, approach?",
    "start": "299310",
    "end": "306271"
  },
  {
    "text": "All right. Monte Carlo people here,\nrather than Las Vegas. If you don't know\nwhat that is, you'll learn it in algorithms class.",
    "start": "306271",
    "end": "312200"
  },
  {
    "text": "All right. Then there's a third\napproach that I probably won't show you unless there's\noverwhelming favor for it. That is the approach\nthat is manically fast",
    "start": "312200",
    "end": "319389"
  },
  {
    "text": "and will solve depth-first\nsearch in no time at all, but it is very likely\nto make mistakes.",
    "start": "319390",
    "end": "324560"
  },
  {
    "text": "That is the approach\nthat I use when solving depth-first search. I've used it enough times that I\ndon't make mistakes that often,",
    "start": "324560",
    "end": "330465"
  },
  {
    "text": "but even I still do. So does anyone want\nto see that one? ",
    "start": "330466",
    "end": "335741"
  },
  {
    "text": "OK. Not that many people. Well, it doesn't take\nmuch time, but I'm just afraid that if I show it\nyou, that you'll be like, ooh, that's the only way to do it.",
    "start": "335741",
    "end": "341930"
  },
  {
    "text": "So we'll save that for\nlater if we have more time. It essentially, for people\nthat are interested,",
    "start": "341930",
    "end": "347690"
  },
  {
    "text": "involves just using\nyour chalk or finger to trace through\nthe tree really fast and figure out what it's doing\nby drawing little tiny lines.",
    "start": "347690",
    "end": "356440"
  },
  {
    "text": "It is very fast, but\nit's not very accurate. And you have shown, basically,\nno work if you get it wrong,",
    "start": "356440",
    "end": "362230"
  },
  {
    "text": "so shame on you. OK. Well, let's do the\nsomewhat faster way",
    "start": "362230",
    "end": "367820"
  },
  {
    "text": "where we don't draw\nout the entire agenda, and then people who were\nthe almost nobody who",
    "start": "367820",
    "end": "372979"
  },
  {
    "text": "raised their hand for\nthat way can check it out in tutorial the way that\nyou do it using the agenda.",
    "start": "372980",
    "end": "378342"
  },
  {
    "text": "So let's do it\nusing the goal tree. So it's a bit faster that way. So we're going to start,\nstarting at S, the start node,",
    "start": "378342",
    "end": "384922"
  },
  {
    "text": "and going to G, the goal node. That's a standard\nnotation, but make sure that when you're\ntaking the test,",
    "start": "384922",
    "end": "390750"
  },
  {
    "text": "you check to make sure\nwhere the start node is, where the goal node is.",
    "start": "390750",
    "end": "395900"
  },
  {
    "text": "It's pretty much an\nasshole move to have a G node that isn't\nthe goal node,",
    "start": "395900",
    "end": "401416"
  },
  {
    "text": "but sometimes there\nwon't be an S node. That's a pretty good\nclue that something else is the start node. Now there's a few little\nwhite star ideas that we have,",
    "start": "401416",
    "end": "409650"
  },
  {
    "text": "or silver star\nideas, for search. One is lexicography. What it lexicography?",
    "start": "409650",
    "end": "414940"
  },
  {
    "text": "Who cares? Well, the most famous\nlexicographer I know of is Samuel Johnson, who wrote\na really famous dictionary.",
    "start": "414940",
    "end": "422220"
  },
  {
    "text": "And the only reason we\ncare about it in this class is because you'll always\nsee the instructions \"break ties in lexicographic order.\"",
    "start": "422220",
    "end": "429560"
  },
  {
    "text": "And then you might\nbe like, wow, that's really rather a wordy word,\nor a sesquipedalion word,",
    "start": "429560",
    "end": "435680"
  },
  {
    "text": "or whatever really long word\nyou want to use to describe the word \"lexicographic.\" What the heck does it mean?",
    "start": "435680",
    "end": "440860"
  },
  {
    "text": "Basically, it means\nalphabetical order, like you would do\nin a dictionary.",
    "start": "440860",
    "end": "447670"
  },
  {
    "text": "So for instance, in alphabetical\norder, A comes before B.",
    "start": "447670",
    "end": "452730"
  },
  {
    "text": "So you would go to A before\nB. No, even beyond that point, there's several ways to do\na lexicographic tiebreak.",
    "start": "452730",
    "end": "460450"
  },
  {
    "text": "And it's not always\nconsistent between algorithms how you would do a\nlexicographic tiebreaker.",
    "start": "460450",
    "end": "465830"
  },
  {
    "text": "In the most recent\ntime that Patrick was kind of randomly\ntalking to the staff, he made it clear that the way\nhe would like us to do it,",
    "start": "465830",
    "end": "472600"
  },
  {
    "text": "and therefore, the way\nwe'd like you to do it, is to tiebreak based on the\nvery latest nodes at the end.",
    "start": "472600",
    "end": "479347"
  },
  {
    "text": "So you might say, that's\nnot really lexicographic. Wouldn't SAB come before\nSGA in the dictionary?",
    "start": "479347",
    "end": "486104"
  },
  {
    "text": " And my answer to you\nis, yes, it would.",
    "start": "486105",
    "end": "492980"
  },
  {
    "text": " Yes, yes, it definitely would.",
    "start": "492980",
    "end": "499180"
  },
  {
    "text": "However, that is\napparently what we're",
    "start": "499180",
    "end": "504682"
  },
  {
    "text": "doing, according to the last\nthing that Patrick said, and we will keep you\nupdated if he decides to go back to dictionary order.",
    "start": "504682",
    "end": "511960"
  },
  {
    "text": "So that's lexicography. You might be wondering\nwhat the picture here is.",
    "start": "511960",
    "end": "517260"
  },
  {
    "text": "Well, this is our\nfriend, the ouroboros. Long has it been a\nsymbol in alchemy of infinity, eternity, or\nmaybe a sort of infinite energy",
    "start": "517260",
    "end": "529350"
  },
  {
    "text": "engine, turning iron into gold. But today, unfortunately,\nthe ouroboros",
    "start": "529350",
    "end": "534899"
  },
  {
    "text": "is an endangered species\nbecause no biting your own tail",
    "start": "534900",
    "end": "542100"
  },
  {
    "text": "in 6.034. A lot of people\nmess up from this. It's an honest mistake.",
    "start": "542100",
    "end": "547550"
  },
  {
    "text": "I mean, we've gotten some\nemails from staff members who couldn't solve one\nof the problems because they forgot about this.",
    "start": "547550",
    "end": "553741"
  },
  {
    "text": "So it's OK if you forget, but\ntry your best to remember. No biting your own tail\nis the only smart thing",
    "start": "553741",
    "end": "559520"
  },
  {
    "text": "our system does. You'll remember last week when\nwe were talking about rules, and we were saying that the rule\nsystem is not a smart creature.",
    "start": "559520",
    "end": "567089"
  },
  {
    "text": " It doesn't know that\n\"not Polly is dead\"",
    "start": "567090",
    "end": "573631"
  },
  {
    "text": "should be the same as\n\"Polly is not dead\", or something like that. It's too dumb to\nfigure that out.",
    "start": "573631",
    "end": "578990"
  },
  {
    "text": "Well, this system is also\ndumb, but one thing it knows is that Patrick really hates\nif the same node appears twice",
    "start": "578990",
    "end": "586800"
  },
  {
    "text": "within the same path. And it will destroy\nthat immediately, before even adding\nit to the queue.",
    "start": "586800",
    "end": "593330"
  },
  {
    "text": "It's gone. It's not considered. It's out of there. So very important,\nsad ouroboros,",
    "start": "593330",
    "end": "600320"
  },
  {
    "text": "no biting your own tail. All right. So now that I've\ngotten through that, let's actually solve the problem\nwith some depth-first search.",
    "start": "600320",
    "end": "608130"
  },
  {
    "text": "How will we do that? Well, we're not going to use\nthe queue, as popular demand, we're going to use a goal tree. So we'll start at node S. What\nare our choices at node S?",
    "start": "608130",
    "end": "619560"
  },
  {
    "text": "Well, I'm going to\nforce you guys to help. So it won't be quite as\nfast, but it'll be fun.",
    "start": "619560",
    "end": "626019"
  },
  {
    "text": "So what are our\nchoices at node S? You.  AUDIENCE: Me? PROFESSOR: Yes.",
    "start": "626020",
    "end": "631685"
  },
  {
    "text": "AUDIENCE: A or B? PROFESSOR: Not quite,\nand this is something I like about this problem. You got most of them.",
    "start": "631685",
    "end": "637680"
  },
  {
    "text": "Do you see that there\nmight be another choice? Everyone? Yeah, C. This is\na big problem that",
    "start": "637680",
    "end": "643730"
  },
  {
    "text": "has happened on a few different\nquiz problems where there's",
    "start": "643730",
    "end": "648870"
  },
  {
    "text": "a sort of a grid that\nlooks like a tree, or a graph that looks\nlike a tree, where people aren't as willing to\ngo up as they are to go down.",
    "start": "648870",
    "end": "656210"
  },
  {
    "text": "You can see it on some of the\nother past quiz problems too. Make sure that you\ncheck the connectivity,",
    "start": "656210",
    "end": "661780"
  },
  {
    "text": "and also note that unless\notherwise specified-- and I don't think we've really\ndone this much-- the little",
    "start": "661780",
    "end": "670250"
  },
  {
    "text": "connecting edges in our\ngraphs are bidirectional. You'll see a big\narrow, and probably",
    "start": "670250",
    "end": "675320"
  },
  {
    "text": "instructions written at\nleast eight font sizes higher than all the rest\nof them, and bold, if we're going to do something\ndifferent for this quiz.",
    "start": "675320",
    "end": "682610"
  },
  {
    "text": "It happens that they\ndo it sometimes, where I'll just say in\nrecitation, we never do this. And then on the\nquiz, they do it. But it will be in giant bold\nletters, which also leads me",
    "start": "682610",
    "end": "691050"
  },
  {
    "text": "to another silver star\nidea that I forgot to tell you guys last week. So I hope people\ndidn't ditch out on me, like, oh, Mark's boring.",
    "start": "691050",
    "end": "696670"
  },
  {
    "text": "We won't come next week. And then miss this one because\nit just came to my mind. That is, read the instructions.",
    "start": "696670",
    "end": "702975"
  },
  {
    "text": "It is a very important\nthing for the quizzes, and Patrick will,\nin a later lecture,",
    "start": "702975",
    "end": "708139"
  },
  {
    "text": "tell you guys, ask\nwhy five times, and he'll explain why\nthat's a gold star idea. My parallel to this is read\nthe instructions five times.",
    "start": "708140",
    "end": "715880"
  },
  {
    "text": "Maybe not five, maybe three\nor four, but at least three. Read the instructions.",
    "start": "715880",
    "end": "721020"
  },
  {
    "text": "Read them again. Then read them a third\ntime only paying attention to whatever is bold\nand eight sizes larger",
    "start": "721020",
    "end": "726690"
  },
  {
    "text": "than all the other ones, cause\nthere's going to be something there that's that size. And it going to be the\nthing that everyone misses.",
    "start": "726690",
    "end": "733800"
  },
  {
    "text": "So make sure you're\nnot everyone, and you read the\ninstructions a lot of times.",
    "start": "733800",
    "end": "739140"
  },
  {
    "text": "But anyway, so yeah,\nwe've got it right. S goes to A, B, and C. OK.",
    "start": "739140",
    "end": "746140"
  },
  {
    "text": "We're looking at A, B,\nand C as possibilities. Everyone, help me make the\nlexicographic tiebreak. Where do we go?",
    "start": "746140",
    "end": "752140"
  },
  {
    "text": "AUDIENCE: A. PROFESSOR: A. That's right. ",
    "start": "752140",
    "end": "757240"
  },
  {
    "text": "Actually, I'll call on\nyou guys for other ones, but that first step\nis pretty simple. We could have everyone\ndo it together.",
    "start": "757240",
    "end": "763389"
  },
  {
    "text": "Everyone, A only leads to? AUDIENCE: D. PROFESSOR: That's right. Why doesn't it\nlead to S as well?",
    "start": "763390",
    "end": "769232"
  },
  {
    "text": "AUDIENCE: [CHATTER] PROFESSOR: No biting\nyour own tail. Everyone's right. Good job, everyone. All right.",
    "start": "769232",
    "end": "774480"
  },
  {
    "text": "S leads to these three. You go to A, go to D. Dead end.",
    "start": "774480",
    "end": "781060"
  },
  {
    "text": "Backtrack. OK. When we backtrack,\nwe backtrack up to A. There's no other children.",
    "start": "781060",
    "end": "786450"
  },
  {
    "text": "We backtrack up to S.\nWhere will we go now? AUDIENCE: B. PROFESSOR: B. It's the\nnext one alphabetically. All right.",
    "start": "786450",
    "end": "791800"
  },
  {
    "text": "B can't go to S,\nso it only goes to? AUDIENCE: H. PROFESSOR: Yes. When we're at H, we can go to?",
    "start": "791800",
    "end": "798300"
  },
  {
    "text": "AUDIENCE: [CHATTER] PROFESSOR: F or I. That's right. You guys get this. Depth-first search is easy.",
    "start": "798300",
    "end": "804140"
  },
  {
    "text": "All right. But we choose? F. That's right. When we're at F, we can go to?",
    "start": "804140",
    "end": "810750"
  },
  {
    "text": "E and J. That's right. We'll choose? E. When we're at\nE, we can go to?",
    "start": "810750",
    "end": "816650"
  },
  {
    "text": " We can go to C. It's not\non this particular path.",
    "start": "816650",
    "end": "822610"
  },
  {
    "text": "People are correct when\nthey say C. When we go to C, we can go to nowhere.",
    "start": "822610",
    "end": "828680"
  },
  {
    "text": "We're dead. Backtrack. We backtrack. We can't do anything\nat E. We go to F.",
    "start": "828680",
    "end": "833800"
  },
  {
    "text": "Now I forgot to tell you guys,\nbut this is an important note. Someone's going\nto get this wrong.",
    "start": "833800",
    "end": "838920"
  },
  {
    "text": "It's going to be one of you. Look around you, all\nthrough the room. At least one of you\nis going to do this.",
    "start": "838920",
    "end": "845730"
  },
  {
    "text": "So, now I'm going to\ntell you not to do this, and then hopefully,\nthat will still be true, but for fewer people.",
    "start": "845730",
    "end": "852350"
  },
  {
    "text": "When I went to D, and then I\nbacktracked, and I went to S, how many times did I backtrack?",
    "start": "852350",
    "end": "858870"
  },
  {
    "text": "Once. I backtracked once. This would have\nbeen more obvious if we were doing the\nreally slow boring agenda",
    "start": "858870",
    "end": "865490"
  },
  {
    "text": "way, or queue way, because\nwhen we got to SAD,",
    "start": "865490",
    "end": "871990"
  },
  {
    "text": "and we expanded it, and\nthere was nothing left, we throw it off the\ntop of the queue, and go to the next\nthing on the queue.",
    "start": "871990",
    "end": "877963"
  },
  {
    "text": "And it turns out the next\nthing on the queue is SB. That step was only taken once. Since we're using the goal\ntree, which is faster,",
    "start": "877963",
    "end": "884490"
  },
  {
    "text": "it looked like we did\ntwo, but we didn't. And if you use the queue, you'll\nsee that because it'll go S,",
    "start": "884490",
    "end": "891177"
  },
  {
    "text": "and then we expand that, SASBSC. SBIC OK. We expand SA. SADSBSC. We expand SAD.",
    "start": "891177",
    "end": "896740"
  },
  {
    "text": "It's dead. SBSC. One backtrack. We're back at SB. So, so far we've\ndone two, not four.",
    "start": "896740",
    "end": "904649"
  },
  {
    "text": "It's pretty intuitive to\nsay that you did two there. It turns out you didn't\nbecause of the algorithm that's",
    "start": "904650",
    "end": "911160"
  },
  {
    "text": "backing what lets us do\nthis goal tree search. So try to make sure you're\nnot the one who says two.",
    "start": "911160",
    "end": "919824"
  },
  {
    "text": "And I, on the other\nhand, will try to make sure that we don't take\noff too many points if you do.",
    "start": "919824",
    "end": "924870"
  },
  {
    "text": "Question? AUDIENCE: So any time\nyou backtrack, regardless of how much it chains,\nany backtracking",
    "start": "924870",
    "end": "931759"
  },
  {
    "text": "is just considered once. PROFESSOR: It is always going\nto be considered one step. It's possible to backtrack\ntwo times in a row.",
    "start": "931760",
    "end": "938740"
  },
  {
    "text": "Like, if B didn't go\nto anything, instead of going to H, then we\nmight backtrack twice before we got to SC.",
    "start": "938740",
    "end": "945370"
  },
  {
    "text": "Generally, anytime you draw\na swizzle, if you're like me, and you draw a swizzle--\nI suggest the swizzles. They're very nice little things.",
    "start": "945370",
    "end": "951570"
  },
  {
    "text": "But any time you draw a\nswizzle on your graph, you have backtracked once. You could even write\nBT next to the swizzle,",
    "start": "951570",
    "end": "958750"
  },
  {
    "text": "and go back and count those,\nor even just count the swizzles at the end. You've got it. You got the answer. Because they often ask, how\nmany times have you backtracked?",
    "start": "958750",
    "end": "966009"
  },
  {
    "text": " All right. So good questions, everyone.",
    "start": "966009",
    "end": "971590"
  },
  {
    "text": "So anyway, we backtracked from\nC. Nothing at E. We go back. We were at F. So\nwe were at SBHF.",
    "start": "971590",
    "end": "978459"
  },
  {
    "text": "We go to J. It's\nthe only choice. At J, we can only go to? AUDIENCE: I.",
    "start": "978460",
    "end": "983680"
  },
  {
    "text": "PROFESSOR: And at I,\nwe can only go to? And we win. It's not an optimal search,\nso as soon as we see anything",
    "start": "983680",
    "end": "990950"
  },
  {
    "text": "with a G on the queue, boom. Winner. All right.",
    "start": "990950",
    "end": "996020"
  },
  {
    "text": "And we're done. We did it. That wasn't too bad. For those of you who are\nvaguely interested in seeing",
    "start": "996020",
    "end": "1002550"
  },
  {
    "text": "how I would do it the\nreally super fast way, it goes something like this. All right. ABC. A comes first.",
    "start": "1002550",
    "end": "1008520"
  },
  {
    "text": "Only D. Backtrack. All right. B comes first. H. F comes first.",
    "start": "1008520",
    "end": "1015630"
  },
  {
    "text": "E. C. Nothing. Backtrack.  We came that way.",
    "start": "1015630",
    "end": "1021222"
  },
  {
    "text": "JIG.  So that's the really fast\nway to do depth-first search.",
    "start": "1021222",
    "end": "1026939"
  },
  {
    "text": "Don't do that, kids. We don't like--\nwell, maybe you can. If you get it right,\nwe're not going",
    "start": "1026940",
    "end": "1033380"
  },
  {
    "text": "to take off points usually. Generally, when we say\ndraw the goal tree below,",
    "start": "1033380",
    "end": "1038720"
  },
  {
    "text": "it's just assigned\npartial credit. However, we are pretty\nstrict about that. If anything is wrong,\nexcept for maybe, like, OK,",
    "start": "1038720",
    "end": "1046660"
  },
  {
    "text": "you write everything exactly\nright, and forget G at the end. If anything that's not\ncompletely understandable",
    "start": "1046660",
    "end": "1051760"
  },
  {
    "text": "is wrong, you will probably\nlose all of the points, and it'll be a lot of points if\nyou don't draw the goal tree.",
    "start": "1051760",
    "end": "1057450"
  },
  {
    "text": "I will emphasize drawing the\ngoal tree is a good idea. All right. So now let's do a\nbreadth-first search.",
    "start": "1057450",
    "end": "1066130"
  },
  {
    "text": "Before we do the breadth-first\nsearch on this tree, I will tell you guys that\nthere is also a fast way",
    "start": "1066130",
    "end": "1072800"
  },
  {
    "text": "to do the breadth-first\nsearch which is less risky, and it really depends\non how nice they",
    "start": "1072800",
    "end": "1078280"
  },
  {
    "text": "are about what they ask for. In this case, the\nbreadth-first search question asks, what path does Mark find\nusing breadth-first search?",
    "start": "1078280",
    "end": "1086100"
  },
  {
    "text": "Rather than saying,\nwhat nodes does he expand in order,\nor anything like that. That is important.",
    "start": "1086100",
    "end": "1091350"
  },
  {
    "text": "If that question\nis asked you, there is a trick that will let you\nsolve it very, very quickly.",
    "start": "1091350",
    "end": "1097354"
  },
  {
    "text": "In fact, faster than\ndepth-first search. You can solve it by inspection\nin about 30 seconds. Does anyone know\nwhat the answer is?",
    "start": "1097354",
    "end": "1103890"
  },
  {
    "text": "What path did he find? AUDIENCE: [CHATTER] PROFESSOR: That's correct. So the answer is?",
    "start": "1103890",
    "end": "1109390"
  },
  {
    "text": "On this graph, the answer is? AUDIENCE: SBHIG. PROFESSOR: SBHIG. That's the answer.",
    "start": "1109390",
    "end": "1114690"
  },
  {
    "text": "You would have your five points. Did people see that? It doesn't always work, so we're\ngoing to actually solve it.",
    "start": "1114690",
    "end": "1121305"
  },
  {
    "text": "But did everyone see\nthat sometimes you can get away with not doing it? Because breadth-first\nsearch is guaranteed",
    "start": "1121305",
    "end": "1126320"
  },
  {
    "text": "to give you the path, as we\nheard correctly, with the least number of jumps, and if there\nare more than one that tie",
    "start": "1126320",
    "end": "1133377"
  },
  {
    "text": "with the least number of jumps,\nyou can just lexicographically figure it out, in this case\nwith actual dictionary order.",
    "start": "1133377",
    "end": "1139470"
  },
  {
    "text": "But SBHIG is the only one. Let's do an actual\nbreadth-first search though,",
    "start": "1139470",
    "end": "1144500"
  },
  {
    "text": "so we can feel better\nabout ourselves. OK. So you've got S, and S goes\nto, as we saw before, ABC.",
    "start": "1144500",
    "end": "1155430"
  },
  {
    "text": "Maybe that doesn't have\nto go quite so high. All right.",
    "start": "1155430",
    "end": "1160590"
  },
  {
    "text": "As we saw before, S goes to ABC. And you already told\nme that A goes to D,",
    "start": "1160590",
    "end": "1165909"
  },
  {
    "text": "and you told me that B goes\nto H. But what does C go to? E. That's right.",
    "start": "1165910",
    "end": "1172830"
  },
  {
    "text": "As you can see,\nwe're expanding it level by level, left to right. All right.",
    "start": "1172830",
    "end": "1178080"
  },
  {
    "text": "So SAD, were does SAD go to?",
    "start": "1178080",
    "end": "1185260"
  },
  {
    "text": "SAD goes to nowhere. It's dead. SBH. Now, wait. You might say, wait a minute.",
    "start": "1185260",
    "end": "1191298"
  },
  {
    "text": "Patrick said that we're\nusing this weird dictionary order where E is at the end\nthat comes before H. That's",
    "start": "1191298",
    "end": "1196559"
  },
  {
    "text": "our tiebreak order,\nbut it turns out that breadth-first search\nand depth-first search don't sort in any way.",
    "start": "1196560",
    "end": "1203677"
  },
  {
    "text": "It's very important. They don't sort the paths that\nare currently on the queue. So you're going to just go\nleft to right, left to right,",
    "start": "1203677",
    "end": "1212490"
  },
  {
    "text": "left to right. And only at each node are\nyou going to break ties in lexicographic order. All right?",
    "start": "1212490",
    "end": "1217820"
  },
  {
    "text": "So SBH. H goes to, as we already\nknow, F and I. E, we",
    "start": "1217820",
    "end": "1226112"
  },
  {
    "text": "think we already\nknow, but we don't quite because this is E coming\nfrom the other direction. E, this time goes\nto F. That's right.",
    "start": "1226112",
    "end": "1232027"
  },
  {
    "text": "Well, actually, you\nguys do already know it. All right. Great. Now we come over here. HF goes to, as we\nalready know, E and J.",
    "start": "1232027",
    "end": "1242610"
  },
  {
    "text": "I goes to, as we don't already\nknow, HI goes to G and J.",
    "start": "1242610",
    "end": "1250865"
  },
  {
    "text": "That's right. ",
    "start": "1250865",
    "end": "1256100"
  },
  {
    "text": "And as it turns out, by\nan implementation detail, we're done. ",
    "start": "1256100",
    "end": "1262980"
  },
  {
    "text": "Questions? Does it not expand depth at all? Now this is an\nimplementation detail. It's perfectly\nsane and reasonable",
    "start": "1262980",
    "end": "1269620"
  },
  {
    "text": "to make a breadth-first\nsearch that likes to finish its entire\nlevel that it's working on.",
    "start": "1269620",
    "end": "1274937"
  },
  {
    "text": "However, in our\nimplementation, and we would have seen this if we\nhad been pedantic and drawn out the entire queue--\nthat's another reason why",
    "start": "1274937",
    "end": "1280790"
  },
  {
    "text": "drawing out the entire queue\nis, as I said, more reliable. In our implementation, since\nit's not an optimal search,",
    "start": "1280790",
    "end": "1287480"
  },
  {
    "text": "the moment anywhere\non the queue, you add something with a\nG at the end, you finish.",
    "start": "1287480",
    "end": "1293187"
  },
  {
    "text": "And because of the fact that the\nway breadth-first search does its mojo, is that\nit adds everything to the end of the queue.",
    "start": "1293187",
    "end": "1300060"
  },
  {
    "text": "That's how it does it\nlevel by level, right? It adds it to the end of the\nqueue, instead of the front. Well, then you'll add it\nto the end of the queue,",
    "start": "1300060",
    "end": "1307426"
  },
  {
    "text": "and then you will have\nit on the queue with a G. So you won't have to do SCEF. ",
    "start": "1307426",
    "end": "1313887"
  },
  {
    "text": "Another question? AUDIENCE: I'm just wondering,\nso the breadth-first search, there was no backtracking\n[INAUDIBLE] had no other--",
    "start": "1313887",
    "end": "1320685"
  },
  {
    "text": "PROFESSOR: Ah. That's a good question. So the question was, so for\nthe breadth-first search,",
    "start": "1320686",
    "end": "1327799"
  },
  {
    "text": "there was no backtracking. D died. Why didn't we\nbacktrack or something? The answer to that one is,\nfor breadth-first search,",
    "start": "1327800",
    "end": "1335640"
  },
  {
    "text": "backtracking doesn't really,\nit isn't really a thing, like it is for\ndepth-first search.",
    "start": "1335640",
    "end": "1340980"
  },
  {
    "text": "Why? Well, because\nbreadth-first search, we're sending our infinite\nmonkeys down every path.",
    "start": "1340980",
    "end": "1347040"
  },
  {
    "text": "In depth-first search,\nwe're really focused in now. We're like, we\nwant to get there. We want to get there. Ooh, this way, this\nway, this way, this way.",
    "start": "1347040",
    "end": "1352909"
  },
  {
    "text": "And might have\ngone the wrong way, and then we hit a dead\nend, we're like, oh, crap. And we go backwards. But for breadth-first\nsearch, we really",
    "start": "1352910",
    "end": "1359950"
  },
  {
    "text": "are like an evil overlord. And we're like Mark Vader\nsaying, storm troopers, go every direction.",
    "start": "1359950",
    "end": "1365600"
  },
  {
    "text": "And then from there, go\nevery other direction. And so, even though, yes, when\nwe got to D, some of the storm",
    "start": "1365600",
    "end": "1370919"
  },
  {
    "text": "troopers hit a dead end, and\nprobably it was reflective, and they shot it, and hit\nthemselves or something like that.",
    "start": "1370920",
    "end": "1376530"
  },
  {
    "text": "Meanwhile, the storm\ntroopers we sent to B and C are still fine, so\nwe don't need to backtrack. AUDIENCE: Cause there are,\nlike, other troops going down",
    "start": "1376530",
    "end": "1381630"
  },
  {
    "text": "the tree. PROFESSOR: Yeah, there are\nother troops going down the tree in every direction. Whereas in the\ndepth-first search, we only sent-- we were\nlike, there are definitely",
    "start": "1381630",
    "end": "1388250"
  },
  {
    "text": "no droids on this escape pod. Send everyone this\nstraight direction, and we only sent\nthem to A and D.",
    "start": "1388250",
    "end": "1393510"
  },
  {
    "text": "And then, so we had to backtrack\nbecause we hit a dead end. Does that make sense? Another question?",
    "start": "1393510",
    "end": "1398864"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]  PROFESSOR: So the question is,\nin this breadth-first search,",
    "start": "1398864",
    "end": "1405540"
  },
  {
    "text": "did lexicographic order\never come into play? The answer is yes, in a\nvery subtle and sneaky way.",
    "start": "1405540",
    "end": "1411360"
  },
  {
    "text": "Which is, I wrote E before\nJ, F before I, and G before J. If I was not\nusing lexicographic order,",
    "start": "1411360",
    "end": "1419290"
  },
  {
    "text": "it might have been\nreasonable to write, for instance, when\nI was expanding I, to write J before G because\nJ was higher up on the tree",
    "start": "1419290",
    "end": "1425570"
  },
  {
    "text": "or something like that. But the only way\nit came into play is that I wrote them left to\nright in alphabetical order",
    "start": "1425570",
    "end": "1431280"
  },
  {
    "text": "every time, and I wrote ABC. Another question? AUDIENCE: We see\nthe F node twice.",
    "start": "1431280",
    "end": "1437471"
  },
  {
    "text": "Suppose that the goal node\nwasn't reached [INAUDIBLE], then you would have\nvisited F again. PROFESSOR: And we would\nhave visited F again.",
    "start": "1437472",
    "end": "1443230"
  },
  {
    "text": "That's correct. The question is,\nF is listed twice. So if we hadn't\nreached the goal node,",
    "start": "1443230",
    "end": "1448500"
  },
  {
    "text": "let's say that down\nthere, after I is Z, and after Z is the\ngoal node, then",
    "start": "1448500",
    "end": "1453740"
  },
  {
    "text": "would we have visited F again? The answer is yes. As I said, this is the\napproach that throws your troops every possible way.",
    "start": "1453740",
    "end": "1459490"
  },
  {
    "text": "So there's storm troopers\ngoing from E to F, and there's storm troopers\ngoing from H to F, and they're going everywhere. Now there is a way\nto cut down on this.",
    "start": "1459490",
    "end": "1466100"
  },
  {
    "text": "You could do breadth-first\nsearch with an extended list. If you did do\nbreadth-first search with an extended\nlist, that would",
    "start": "1466100",
    "end": "1472980"
  },
  {
    "text": "be sort of equivalent to as\nsoon as you expand one node, as soon you send storm troopers\nout of I to look at G and J,",
    "start": "1472980",
    "end": "1480020"
  },
  {
    "text": "one of them stays at I, and if\nany other storm troopers come to I, and they're like, we\nwant to see what's past I, he's like, no, no, no.",
    "start": "1480020",
    "end": "1485790"
  },
  {
    "text": "We've already sent troops\npast I. We've got this. Go back home. It's OK.",
    "start": "1485790",
    "end": "1490900"
  },
  {
    "text": "There are no rebels\nhere, but it might be Han Solo dressed\nup as a storm trooper, as we'll see in\nthe next problem.",
    "start": "1490900",
    "end": "1496570"
  },
  {
    "text": "Where our extended\nlist screws us over. But for this problem,\ndo you see what I mean?",
    "start": "1496570",
    "end": "1502440"
  },
  {
    "text": "With an extended list,\nwe could avoid this because the extended\nlist basically says, once I've expanded\nand searched past here,",
    "start": "1502440",
    "end": "1508260"
  },
  {
    "text": "don't do it again. But if you don't have one,\nyeah, you'll do F twice. In fact, didn't we do\nsomething twice here?",
    "start": "1508260",
    "end": "1515572"
  },
  {
    "text": "Oh, it turns out we didn't. But we easily could have. We almost did E twice. We almost did F twice.",
    "start": "1515572",
    "end": "1522710"
  },
  {
    "text": "It turns out we didn't,\nbut we could have. Another question? AUDIENCE: [INAUDIBLE] for the\nimplementation of the queue",
    "start": "1522710",
    "end": "1529159"
  },
  {
    "text": "that when you expand\nI, that both G and J were added simultaneously\nand in lexicographic order?",
    "start": "1529159",
    "end": "1539596"
  },
  {
    "text": "Or is there a piece where it\nwould be [INAUDIBLE] order, G got added before J, so\nhence, it stopped [INAUDIBLE]?",
    "start": "1539596",
    "end": "1546965"
  },
  {
    "text": "PROFESSOR: Ha. That is a very good question\nthat provokes a minor change. The question is,\nwhen you expand SBHI,",
    "start": "1546965",
    "end": "1555620"
  },
  {
    "text": "is SBHIG added\nbefore SBHIJ because of lexicographic\nordering, or are they both added at the same time?",
    "start": "1555620",
    "end": "1561650"
  },
  {
    "text": "The answer is, simultaneous. When you do the\nexpansion, you instantly receive say, a list maybe, or\nwhatever data structure you",
    "start": "1561650",
    "end": "1569110"
  },
  {
    "text": "like, containing\nall of the children, and they get appended to\nthe queue at once in order.",
    "start": "1569110",
    "end": "1576440"
  },
  {
    "text": "So you will receive all of them. I suppose you could create\nsome kind of search problem where you have, like, an\nadversary node, like a wumpus,",
    "start": "1576440",
    "end": "1584065"
  },
  {
    "text": "or you're hunting a wumpus. And if you don't want to add\nthe exact wumpus to your search tree, or you lose. You only want to add the\none next to the wumpus.",
    "start": "1584065",
    "end": "1591999"
  },
  {
    "text": "I don't know. I'm making this up. And unfortunately,\nyou would have to add all the children at once.",
    "start": "1591999",
    "end": "1597630"
  },
  {
    "text": "Our current algorithm does\nnot add one at a time. All right.",
    "start": "1597630",
    "end": "1602700"
  },
  {
    "text": "So we've done a\nbreadth-first search. Great. Now we're going to do\nsome optimal search. That is going to\nrequire me to draw",
    "start": "1602700",
    "end": "1609790"
  },
  {
    "text": "a slightly different graph. I will draw it on what is\nleft of the bottom here.",
    "start": "1609790",
    "end": "1617050"
  },
  {
    "text": "And then we'll solve it on what\nis left of the bottom here. All right.",
    "start": "1617050",
    "end": "1622120"
  },
  {
    "text": "Mark has his new\nstronghold, and he wants to invade parallel universes. Now he's programmed\nhis evil supercomputer",
    "start": "1622120",
    "end": "1630450"
  },
  {
    "text": "to find the shortest\npath of jumps from his starting universe\nto the goal universe, G. It takes a certain\namount of energy",
    "start": "1630450",
    "end": "1638919"
  },
  {
    "text": "to move from\nuniverse to universe based on the differing factors\nbetween those universes. Like maybe in one\nuniverse, a butterfly",
    "start": "1638920",
    "end": "1646290"
  },
  {
    "text": "didn't flap its wings in China,\nwhereas in the other universe,",
    "start": "1646290",
    "end": "1651370"
  },
  {
    "text": "sentient reptiles\nrule the earth. And so, Mark's\nsupercomputer has tried",
    "start": "1651370",
    "end": "1657169"
  },
  {
    "text": "to create a heuristic\nvalue that determines how different the universes\nare to guess, sort of, how",
    "start": "1657170",
    "end": "1662970"
  },
  {
    "text": "much energy it's going to\ntake to get from his start universe, S, to his\ngoal universe, G,",
    "start": "1662970",
    "end": "1668550"
  },
  {
    "text": "given that currently his armies\nare at a particular universe. In other words, OK, it's\nnot A you put in search,",
    "start": "1668550",
    "end": "1676870"
  },
  {
    "text": "but dammit, we're going\nto have a heuristic distance to the goal. And we're going to have\na graph with distances.",
    "start": "1676870",
    "end": "1682710"
  },
  {
    "text": "So let's see what it looks like. All right. ",
    "start": "1682710",
    "end": "1713320"
  },
  {
    "text": "And down here is G. So this\notherwise unassuming heart shape hides an evil\ninvasion force.",
    "start": "1713320",
    "end": "1720799"
  },
  {
    "text": "So let's see. The distance here is 100. The distance here is 3, 4.",
    "start": "1720800",
    "end": "1728275"
  },
  {
    "text": "The distance here is 4. The distance here is\n50, 50, 14, 4, 16, 16.",
    "start": "1728275",
    "end": "1740890"
  },
  {
    "text": "Oh sorry, these are connected. 30 and 10.",
    "start": "1740890",
    "end": "1747410"
  },
  {
    "text": "The heuristic values are 0\nat the start node, 50 at B,",
    "start": "1747410",
    "end": "1755680"
  },
  {
    "text": "60 at A, 55 at C, 50\nat D, 56 at E, 50 at F,",
    "start": "1755680",
    "end": "1778290"
  },
  {
    "text": "0 at G because it's\nthe goal node, 39 at H.",
    "start": "1778290",
    "end": "1783760"
  },
  {
    "text": "I'll draw the little H smaller. ",
    "start": "1783760",
    "end": "1789500"
  },
  {
    "text": "And 0 at I. Well, after all, I\ngoes right to G. It can be 0.",
    "start": "1789500",
    "end": "1795030"
  },
  {
    "text": "It'll be great. OK.  Now, this time Mark is\ntrying to conserve the energy",
    "start": "1795030",
    "end": "1802019"
  },
  {
    "text": "of his parallel universe jump. That, understandably,\ntakes a lot of energy. So he needs to program\nin the shortest",
    "start": "1802020",
    "end": "1809180"
  },
  {
    "text": "number of universe jumps that\nwill get him to the goal. He doesn't mean the\nleast number of jumps.",
    "start": "1809180",
    "end": "1815180"
  },
  {
    "text": "He means the least amount\nof energy on these edges. He's not interested in\ngetting to this new world, and not having\nenough energy left",
    "start": "1815180",
    "end": "1821300"
  },
  {
    "text": "to blast the crap out of it. So we need to find\nthe shortest path. So first Mark programs a\nsimple branch and bound search.",
    "start": "1821300",
    "end": "1829680"
  },
  {
    "text": "He adds in an extended\nlist to his branch and bound just to make\nit a little bit faster. As usual, he breaks\nties of equal length",
    "start": "1829680",
    "end": "1836600"
  },
  {
    "text": "in lexicographic order. So let's list the nodes\nthat Mark's computer adds",
    "start": "1836600",
    "end": "1842450"
  },
  {
    "text": "to the extended list in order. Distances are shown\nnext to the edges. Ignore the number in\nparentheses for now.",
    "start": "1842450",
    "end": "1849530"
  },
  {
    "text": "They are heuristics, and\nwe're not using them. So that brings me\nto another point that I'd like to\ndrive home before we",
    "start": "1849530",
    "end": "1855720"
  },
  {
    "text": "go for the home stretch\nand solve these problems. What the heck is the difference\nbetween branch and bound",
    "start": "1855720",
    "end": "1861740"
  },
  {
    "text": "and A*? OK. I like to liken it\nto the following. I probably should have, I'll\nmake this a silver star idea.",
    "start": "1861740",
    "end": "1868880"
  },
  {
    "start": "1868880",
    "end": "1875580"
  },
  {
    "text": "OK. The silver star idea is pizza. It doesn't really\nlook like pizza, but that's the silver star idea.",
    "start": "1875580",
    "end": "1880943"
  },
  {
    "text": "Branch and bound\nis a cheese pizza. It's simple. If you order it\nfor a large group event of college students,\nthey will eat it,",
    "start": "1880943",
    "end": "1887433"
  },
  {
    "text": "and things will be OK. Now A* search is some kind of\nmeat lover's or supreme pizza.",
    "start": "1887433",
    "end": "1894330"
  },
  {
    "text": "Maybe a meat lover's pizza. It's got all these\nextra toppings. A lot of people are\nreally going to like it. It might be better.",
    "start": "1894330",
    "end": "1899650"
  },
  {
    "text": "But then you've\ngot a vegetarian, and everything's screwed up. So basically, A* is just branch\nand bound with some extra",
    "start": "1899650",
    "end": "1909130"
  },
  {
    "text": "toppings added on. In this case, one of the\ntoppings is an extended list,",
    "start": "1909130",
    "end": "1914970"
  },
  {
    "text": "an extended list\nwhich we'll see keeps track of where we've passed\nthrough and already expanded",
    "start": "1914970",
    "end": "1920919"
  },
  {
    "text": "out, and it never goes back. The other topping that we're\ngoing to add is a heuristic.",
    "start": "1920920",
    "end": "1926980"
  },
  {
    "text": "A heuristic tells\nus about how far we think we have left\nuntil we're at the end, so we don't go through really\nshort paths that go completely",
    "start": "1926980",
    "end": "1933830"
  },
  {
    "text": "in the wrong direction. All right? Between the two of those,\nwe get our supreme pizza,",
    "start": "1933830",
    "end": "1939700"
  },
  {
    "text": "but sometimes, as\nwe'll see, they sort of mess each other up. So one of the toppings\njust doesn't go well",
    "start": "1939700",
    "end": "1946270"
  },
  {
    "text": "with the other one. Maybe someone doesn't Hawaiian. They think that the ham doesn't\ngo well with the pineapple.",
    "start": "1946270",
    "end": "1951865"
  },
  {
    "text": " So let's do a branch and bound\nthat just has an extended list.",
    "start": "1951865",
    "end": "1960290"
  },
  {
    "text": "Maybe we've got some green\npeppers on this pizza. This is going to be safe. ",
    "start": "1960290",
    "end": "1966220"
  },
  {
    "text": "All right. So we're going to list the\nnodes as to the extended list, and the way we're going\nto do that is, well,",
    "start": "1966220",
    "end": "1971580"
  },
  {
    "text": "you guys said you like\ngoal tree more than queue, so let's do it with a goal tree. So we've got S, and\nas we already know,",
    "start": "1971580",
    "end": "1983620"
  },
  {
    "text": "S is the only path. Our current length at S is 0. That's the lowest of all of\nour lengths on the tree cause",
    "start": "1983620",
    "end": "1991020"
  },
  {
    "text": "it's the only length. So we go to A, B, and C.\nIt may be hard to see,",
    "start": "1991020",
    "end": "2001110"
  },
  {
    "text": "so the length of SA is 100.",
    "start": "2001110",
    "end": "2006260"
  },
  {
    "text": "The length of SB is-- AUDIENCE: You mean ABEF? AUDIENCE: Yeah.",
    "start": "2006260",
    "end": "2012300"
  },
  {
    "text": "[CHATTER] PROFESSOR: Oh. You're right. It's a different tree. I was doing A, B, and\nC from the other tree. Thank you, friends, for\ncorrecting my foolishness.",
    "start": "2012300",
    "end": "2019870"
  },
  {
    "text": " The length of SB is 3.",
    "start": "2019870",
    "end": "2025330"
  },
  {
    "text": "It is a different tree. I was trying to save\nwork that wound up creating more because someone's\ngoing to be confused by this.",
    "start": "2025330",
    "end": "2032919"
  },
  {
    "text": "So the length of A, B, E,\nand F are 100, 3, 14, and 14. Which one do we choose?",
    "start": "2032920",
    "end": "2038820"
  },
  {
    "text": "Lexicographically, it's A.\nWe choose that one, right? AUDIENCE: [CHATTER] PROFESSOR: F is going to be 14.",
    "start": "2038820",
    "end": "2044530"
  },
  {
    "text": "That' a 1. Sorry. AUDIENCE: 4. 4. PROFESSOR: Oh, it's 4? ",
    "start": "2044530",
    "end": "2050985"
  },
  {
    "text": "I wrote this problem. I should know it. You're right. F is 4. My apologies once more. That's what I get.",
    "start": "2050985",
    "end": "2056560"
  },
  {
    "text": "All right. I'm going to stand\nover here from now on when I write over there.",
    "start": "2056561",
    "end": "2062050"
  },
  {
    "text": "OK. So which one of these\nare we going to choose? Even with the 4, we're going\nto choose B. That's right.",
    "start": "2062050",
    "end": "2068730"
  },
  {
    "text": "Lexicographic be damned. It's only for tiebreaks. We want the shortest path. Our special thing\nwith branch and bound",
    "start": "2068730",
    "end": "2074540"
  },
  {
    "text": "is we take the currently\nshortest path, whatever it is. Great. So we expand B.\nFortunately, and I'm",
    "start": "2074540",
    "end": "2080739"
  },
  {
    "text": "pretty sure I've got this\ncorrect this time-- oh wait, I've got an even better idea. I'll just take this\nlittle hand sheet with me,",
    "start": "2080739",
    "end": "2087480"
  },
  {
    "text": "and then I don't have\nto look at that at all. OK. So once we expand B, B goes to\nD. Our path length from B to D",
    "start": "2087480",
    "end": "2095550"
  },
  {
    "text": "is 4, so what will we write\nnext to little G here? 7. That's right. We add them all together.",
    "start": "2095550",
    "end": "2100961"
  },
  {
    "text": " I'm going to ask you guys\nagain the next time we do this with the\nheuristics, which",
    "start": "2100961",
    "end": "2107112"
  },
  {
    "text": "is going to be the next\npart of the problem, and someone's going to give\nme the wrong answer next time. So stay tuned for that.",
    "start": "2107112",
    "end": "2112281"
  },
  {
    "text": "All right. So we've got SBD. We've got all of these. Where do we go next? F. That's right,\nbecause currently 4",
    "start": "2112281",
    "end": "2118520"
  },
  {
    "text": "is the shortest because you\nguys corrected me correctly. So SF. 4 is the shortest.",
    "start": "2118520",
    "end": "2123940"
  },
  {
    "text": "F only goes to H. And what\ndo we write next to the H? 20.",
    "start": "2123940",
    "end": "2129030"
  },
  {
    "text": "That's right. 16 plus 4, 20. All right. Where's our current shortest?",
    "start": "2129030",
    "end": "2135130"
  },
  {
    "text": "It's the D, SBD. All right? So SBD. D only goes to I,\nand we've got a 57.",
    "start": "2135130",
    "end": "2141789"
  },
  {
    "start": "2141790",
    "end": "2149847"
  },
  {
    "text": "Wait a minute. I want to get this problem\nright, so we better actually write\nthe extended list, [INAUDIBLE] because that's the\nonly thing they're asking us",
    "start": "2149847",
    "end": "2156460"
  },
  {
    "text": "for. So first we extended S.\nThen we extended B. Then we",
    "start": "2156460",
    "end": "2161650"
  },
  {
    "text": "extended F. Then we\nextended D. All right.",
    "start": "2161650",
    "end": "2168049"
  },
  {
    "text": "So far, so good. And I have the answer key, so\nI know we're doing it right. OK. What are we doing next?",
    "start": "2168050",
    "end": "2174340"
  },
  {
    "text": "E. That's right. So we extend E. E goes to\nH. And when E goes to H,",
    "start": "2174340",
    "end": "2182069"
  },
  {
    "text": "we've got a length of 30. All right. Who's our winner now?",
    "start": "2182070",
    "end": "2187589"
  },
  {
    "text": "Which H? SFH. That's right. SFH is length 20. Oh yeah, of course I\nshould write an E in here.",
    "start": "2187590",
    "end": "2194350"
  },
  {
    "text": "I always forget to do that. SFH is length 20,\nso we will extend H, and I'm going to write\nit here preemptively.",
    "start": "2194350",
    "end": "2201680"
  },
  {
    "text": "When we extend H over here, H\nonly goes to I, with length 50.",
    "start": "2201680",
    "end": "2207050"
  },
  {
    "text": "Great. What's the next shortest? The next shortest is the other\nH. However, will we expand it?",
    "start": "2207050",
    "end": "2215242"
  },
  {
    "text": "You guessed that because I\nasked that question in that way. You knew the answer was no. Why don't we expand it?",
    "start": "2215242",
    "end": "2221510"
  },
  {
    "text": "It's already on\nthe extended list. That's right. So since it's already\non the extended list,",
    "start": "2221510",
    "end": "2226849"
  },
  {
    "text": "this one dies a horrible death. I like writing an X through it\ninstead of writing a swizzle",
    "start": "2226850",
    "end": "2231920"
  },
  {
    "text": "at the bottom. You can do whatever you want. All right, it's gone. It's not a choice.",
    "start": "2231920",
    "end": "2237120"
  },
  {
    "text": "What's the next best one? SFHI. That's right.",
    "start": "2237120",
    "end": "2242370"
  },
  {
    "text": "That goes to G, and\nthe length is 60. And we've extended I. All right.",
    "start": "2242370",
    "end": "2251100"
  },
  {
    "text": "Question is, are we done?  The people who say\nno, I like you.",
    "start": "2251100",
    "end": "2258210"
  },
  {
    "text": "You're smart. You realize that\njust because the G is on there, that we can't end. However, the people who\nsaid yes, you are either",
    "start": "2258210",
    "end": "2266320"
  },
  {
    "text": "oblivious or really,\nreally smart, and I'm going to\nchoose to assume you're all really, really smart because\nthe really, really smart people",
    "start": "2266320",
    "end": "2272520"
  },
  {
    "text": "said, OK. Yes, we're not quite\ndone just because we added a G. We\nstill have to check to make sure there are no\nlengths with shorter path,",
    "start": "2272520",
    "end": "2277840"
  },
  {
    "text": "but look. The only one with\na shorter path is I, which is already\non the extended list.",
    "start": "2277840",
    "end": "2284339"
  },
  {
    "text": "So actually, we are done. Double check. We've got it. So these are the paths\nwe extended in order,",
    "start": "2284340",
    "end": "2289970"
  },
  {
    "text": "and our final path is? Everyone. AUDIENCE: [CHATTER]",
    "start": "2289970",
    "end": "2295050"
  },
  {
    "text": "PROFESSOR: That's right. SFHIG. I claim that is\nthe correct path.",
    "start": "2295050",
    "end": "2301180"
  },
  {
    "text": "However, Mark is frustrated\nby branch and bound's speed. I don't know. I wasn't that frustrated. Seemed pretty good.",
    "start": "2301180",
    "end": "2306609"
  },
  {
    "text": "But Mark is frustrated by\nbranch and bound's speed, so he reprograms his\ncomputer to use A*.",
    "start": "2306610",
    "end": "2312980"
  },
  {
    "text": "Mark counts the number of\nsubspace anomalies between each universe and the goal, and uses\nthis count as the heuristic",
    "start": "2312980",
    "end": "2318110"
  },
  {
    "text": "for A*. These numbers are\nin parentheses. Hopefully, you can read them. Yes? Oh, we've got a question.",
    "start": "2318110",
    "end": "2324819"
  },
  {
    "text": "Right here? AUDIENCE: So, given\nthe implementation, you said that you expand\nall possible nodes. So why doesn't I go to C and\nD, as well as [INAUDIBLE]?",
    "start": "2324820",
    "end": "2332544"
  },
  {
    "text": "Like, why doesn't it\nexpand to [INAUDIBLE]? PROFESSOR: Ah. That is a very good question. And the answer is, a\nvery simple answer.",
    "start": "2332544",
    "end": "2341000"
  },
  {
    "text": "You guys tricked me. No, but I should have been\nable to figure it out. It does go to C and D. The\ncorrect tree, which we wouldn't",
    "start": "2341000",
    "end": "2348145"
  },
  {
    "text": "have lost points for having\nthe incorrect tree here cause we did get the\ncorrect answer, yes. The reason why it is, that same\nreason that very first time I",
    "start": "2348145",
    "end": "2355622"
  },
  {
    "text": "asked someone something,\nhe didn't remember the C. It's easy to forget\nto go up the tree.",
    "start": "2355622",
    "end": "2360860"
  },
  {
    "text": "It does actually have\na C and D. However, they are horrendous paths. They are 100 and 100\non their path length,",
    "start": "2360860",
    "end": "2369939"
  },
  {
    "text": "and so it doesn't matter. But you were correct. The official answer we\nhad up there is wrong. AUDIENCE: Would the D get added\nto this list of children that's",
    "start": "2369939",
    "end": "2377981"
  },
  {
    "text": "already in the extended list? PROFESSOR: Good question. The question is, would the\nD get added to the children?",
    "start": "2377981",
    "end": "2384040"
  },
  {
    "text": "After all, it's already\nin the extended list. The answer is, we search\nfor, and remove, and kill",
    "start": "2384040",
    "end": "2390400"
  },
  {
    "text": "all of the attempts to\nextend something that's already on the expanded list at\nthe time we try to expand it.",
    "start": "2390400",
    "end": "2396400"
  },
  {
    "text": "The time we try to\nexpand it is only when it's on the\nfront of the queue because it's the\ncurrently shortest path.",
    "start": "2396400",
    "end": "2401890"
  },
  {
    "text": "So that means they get added. It's just that when it\ncomes time to expand it, it will get crossed\noff no matter what.",
    "start": "2401890",
    "end": "2407744"
  },
  {
    "text": "Turns out, it escaped\nexecution because of the fact that we never expanded it. AUDIENCE: So H should\ngo to E as well?",
    "start": "2407745",
    "end": "2413920"
  },
  {
    "text": "PROFESSOR: So H should go to\nE as well, is the question. The answer is yes. H should go to E as well.",
    "start": "2413920",
    "end": "2420140"
  },
  {
    "text": "A lot slipped past me this time. H should go to E as well,\nwith a length of 36,",
    "start": "2420140",
    "end": "2425750"
  },
  {
    "text": "and it dies there.  This one will\nactually be checked,",
    "start": "2425750",
    "end": "2431817"
  },
  {
    "text": "so it actually does\nmake a difference. If we ask how many times was\na node executed due to already",
    "start": "2431817",
    "end": "2439069"
  },
  {
    "text": "being on the extended list? Very good. Very good notice. It should be on there.",
    "start": "2439070",
    "end": "2444210"
  },
  {
    "text": "We'll get it right next time. All right, everyone. So I'm working\ntogether with you.",
    "start": "2444210",
    "end": "2450670"
  },
  {
    "text": "I made the mistake too. Easy one to make. It can mess you up. It didn't this time. We're going to\nget it-- question?",
    "start": "2450670",
    "end": "2457252"
  },
  {
    "text": "AUDIENCE: If G's\nthe goal at the end, and you get G in your outcomes,\nand you know the number that's",
    "start": "2457252",
    "end": "2465551"
  },
  {
    "text": "shorter than\neverything else, do you have to actually extend at G? PROFESSOR: So, the question\nis, do you actually extend G?",
    "start": "2465551",
    "end": "2472610"
  },
  {
    "text": "Should we even put G\nin the extended list? The answer is, the\nanswer to that question",
    "start": "2472610",
    "end": "2477750"
  },
  {
    "text": "is, it is a matter of taste. And in the questions\nwhere we, in my opinion, rather foolishly, asked how\nmany nodes were extended,",
    "start": "2477750",
    "end": "2484890"
  },
  {
    "text": "rather than ask you\nto write them out, we generally accept the\nanswer where you didn't extend or where you did extend G.\nIt's an implementation detail.",
    "start": "2484890",
    "end": "2492310"
  },
  {
    "text": "You can either have a\nfail safe that, as soon as it sees G at the beginning\nof the list, says, we're out.",
    "start": "2492310",
    "end": "2497437"
  },
  {
    "text": "We're not going to extend. We're done. We win. Or a fail safe that, when you're\nabout to extend something, and you go into the\nextension process,",
    "start": "2497437",
    "end": "2504190"
  },
  {
    "text": "and it sees that it\nends in G, that it wins. So it is a matter of taste.",
    "start": "2504190",
    "end": "2509339"
  },
  {
    "text": "If you kind of like to\nwatch your little guy doing the search win,\nand have an S and a G, you can put it on.",
    "start": "2509340",
    "end": "2514835"
  },
  {
    "text": "If you don't, you\ncan not put it on. We won't take off points\nfor whether or not it has a G at the end\nbecause clearly, if you",
    "start": "2514835",
    "end": "2522180"
  },
  {
    "text": "did all the other crazy\nstuff correct, well, you could have written\nin a G if you wanted to.",
    "start": "2522180",
    "end": "2528240"
  },
  {
    "text": "I think, unless there's someone\nwho mis-solves the problem right at the end, is like,\noh, who cares about G?",
    "start": "2528240",
    "end": "2534020"
  },
  {
    "text": "Oh no, it's stuck. It's a dead end. We lose. But that would be\nprobably pretty rare.",
    "start": "2534020",
    "end": "2539650"
  },
  {
    "text": "So let's solve the A*. So I'm not going to make\nthe same mistake twice.",
    "start": "2539650",
    "end": "2545600"
  },
  {
    "text": "We go from S to ABEF.  And S, by the way,\nhad a value of 0.",
    "start": "2545600",
    "end": "2553910"
  },
  {
    "text": "All right. What is the value at A? Well, I think it's 160.",
    "start": "2553910",
    "end": "2560611"
  },
  {
    "text": "The question is, how\ndo we calculate this? Well, it's the path\nthat we've traveled so far plus the heuristic\nvalue at the final node.",
    "start": "2560611",
    "end": "2569070"
  },
  {
    "text": "This is why someone's going to\ngive me the wrong answer at BD, but let's see. So we have 160 here.",
    "start": "2569070",
    "end": "2576040"
  },
  {
    "text": "OK. So SB. What is the\nheuristic value here?",
    "start": "2576040",
    "end": "2581140"
  },
  {
    "text": "We've got 3 for the path, and 50\nfor the heuristic, so it's 53.",
    "start": "2581140",
    "end": "2587789"
  },
  {
    "text": "SE. What have we got here? We've got 14 for the path, 56\nfor the heuristic, so it's 70.",
    "start": "2587790",
    "end": "2595420"
  },
  {
    "text": "All right. SF. We've got 4 for the path,\n50 for the heuristic, 54.",
    "start": "2595420",
    "end": "2602290"
  },
  {
    "text": "OK. Who's our winner? It's B again. Barely, but it is the winner.",
    "start": "2602290",
    "end": "2608370"
  },
  {
    "text": "Extended list up here. SB. All right. B, as we saw, goes only to D.",
    "start": "2608370",
    "end": "2614759"
  },
  {
    "text": "What is the value that\nI should write here? AUDIENCE: [CHATTER] PROFESSOR: OK.",
    "start": "2614759",
    "end": "2619900"
  },
  {
    "text": "I am happy I heard all the\nthings that I expected to hear. I heard the correct\nanswer, which is 57.",
    "start": "2619900",
    "end": "2625580"
  },
  {
    "text": "I also heard someone say 107. So why is it 57, and not 107?",
    "start": "2625580",
    "end": "2632160"
  },
  {
    "text": "Someone does it\nthis way every time. Do not add up all the\nheuristics along the way. I will try to explain to\nyou why you would never",
    "start": "2632160",
    "end": "2637888"
  },
  {
    "text": "want to do that. The heuristic value\nat any given node says, given that I'm here,\nhow much work do I think",
    "start": "2637888",
    "end": "2645430"
  },
  {
    "text": "I have left to get to the end? All right? It's sort of like, let's guess\nthe last few nodes in the path",
    "start": "2645430",
    "end": "2652192"
  },
  {
    "text": "that we haven't done out yet. So you can see why it\nwould be bad to add that for every node in your list\nbecause then you're double",
    "start": "2652192",
    "end": "2659200"
  },
  {
    "text": "counting all of the last nodes. So add the path so far to\nthe very final heuristic.",
    "start": "2659200",
    "end": "2664730"
  },
  {
    "text": "That's 3 plus 4 plus the\n50 that's with D is 57. So our current winner, then,\nis 54, with F. Just the same",
    "start": "2664730",
    "end": "2675100"
  },
  {
    "text": "as last time. F goes to H. And what's\nour total value at H?",
    "start": "2675100",
    "end": "2680234"
  },
  {
    "text": " 20 plus, that's a 39, 59.",
    "start": "2680235",
    "end": "2685880"
  },
  {
    "text": "So who wins now? D, with 57.",
    "start": "2685880",
    "end": "2690960"
  },
  {
    "text": "But we extended F, yes. All right. So D was 57. All right.",
    "start": "2690960",
    "end": "2696400"
  },
  {
    "text": "So D was not one of the ones\nthat I tricked myself with. D only goes to I.\nWhat's our value at I?",
    "start": "2696400",
    "end": "2703740"
  },
  {
    "text": " I think our value is 57\nbecause I has a heuristic of 0.",
    "start": "2703740",
    "end": "2711310"
  },
  {
    "text": "Yes. I has a heuristic of 0. Our value at I is 57.",
    "start": "2711310",
    "end": "2716550"
  },
  {
    "text": "OK? And I extended D.\nWho's the winner now? I? OK.",
    "start": "2716550",
    "end": "2721950"
  },
  {
    "text": "So I is the winner. With I as the winner, we extend\nI. I goes to C, D. Ha ha.",
    "start": "2721950",
    "end": "2729210"
  },
  {
    "text": "Good call, whoever back there\nfigured out my secret error before. C, D, and G.",
    "start": "2729210",
    "end": "2735510"
  },
  {
    "text": "AUDIENCE: [CHATTER] PROFESSOR: C, H, and G? Oh, you're right.",
    "start": "2735510",
    "end": "2740680"
  },
  {
    "text": "We already went to D. Aha. C, H, and G. You're correct. Everyone see that?",
    "start": "2740680",
    "end": "2746230"
  },
  {
    "text": "C, H, and G. Absolutely right. I goes to C, H, and G. So\nthe path to C, H, and G",
    "start": "2746230",
    "end": "2753400"
  },
  {
    "text": "is a hard path. To C, we got, what did we have?",
    "start": "2753400",
    "end": "2758500"
  },
  {
    "text": "57 plus 50 is 127. Oh, and by the way,\nC, G, and H. We've",
    "start": "2758500",
    "end": "2764472"
  },
  {
    "text": "got to do it in\nlexicographic order. So 127 to C. To G, we have 67.",
    "start": "2764472",
    "end": "2770580"
  },
  {
    "text": " And to H, we have 87.",
    "start": "2770580",
    "end": "2777319"
  },
  {
    "text": " So who wins now? ",
    "start": "2777320",
    "end": "2784630"
  },
  {
    "text": "H. H, with 59. That's right. H, with 59.",
    "start": "2784630",
    "end": "2790460"
  },
  {
    "text": "And as we already\nknow, cause it was the winner last\ntime, H, with 59, goes to I, which\nhas, I believe, 50.",
    "start": "2790460",
    "end": "2801635"
  },
  {
    "text": " Well, it's still gets added. Remember?",
    "start": "2801635",
    "end": "2807170"
  },
  {
    "text": "We're only going to kill\nit when it gets extended. So who's the shortest? So you were a step ahead,\nwhoever asked me that question.",
    "start": "2807170",
    "end": "2813120"
  },
  {
    "text": "Who's the shortest? H also goes to E.\nAbsolutely right.",
    "start": "2813120",
    "end": "2818990"
  },
  {
    "text": "H also goes to E. I was\ngetting ahead of myself here. H also goes to E with\na length of extra 16.",
    "start": "2818990",
    "end": "2824900"
  },
  {
    "text": "So we've got 20 plus\n16 is 36 plus 56 is 92.",
    "start": "2824900",
    "end": "2831599"
  },
  {
    "text": "All right. That's good. So who's the shortest?",
    "start": "2831600",
    "end": "2837060"
  },
  {
    "text": "I is the shortest. Do we extend it? No. It's on the extended list.",
    "start": "2837060",
    "end": "2842910"
  },
  {
    "text": "All right. Who's the shortest now? It's hard to read, but the\nshortest is this 67 on the G.",
    "start": "2842910",
    "end": "2849036"
  },
  {
    "text": "So we're done. We win. Our path is SBDIG. Yeah, for A*.",
    "start": "2849036",
    "end": "2854550"
  },
  {
    "text": "It gets the right answer, right? No. Unfortunately not.",
    "start": "2854550",
    "end": "2859990"
  },
  {
    "text": "So what happened here? Why did we not get\nthe right answer? Be as specific as possible. ",
    "start": "2859990",
    "end": "2868184"
  },
  {
    "text": "What are people saying\nabout heuristics? AUDIENCE: [CHATTER] PROFESSOR: All right. People are saying the\nheuristic must be consistent.",
    "start": "2868184",
    "end": "2875320"
  },
  {
    "text": "That is both correct and\nspecific, so I applaud you. Too easy to say the\nheuristic was inadmissible. It actually was completely\nadmissible everywhere.",
    "start": "2875320",
    "end": "2883140"
  },
  {
    "text": "So that leads us into our\nvery last point for the day. What the hell are these\nheuristic consistency",
    "start": "2883140",
    "end": "2888645"
  },
  {
    "text": "and admissibility things,\nand why do I care? Well, the reason why you care\nis many fold, one of which",
    "start": "2888645",
    "end": "2893890"
  },
  {
    "text": "is that it's almost\nguaranteed to be on the quiz. But what are they? Admissibility is a check\nat every point to make sure",
    "start": "2893890",
    "end": "2901180"
  },
  {
    "text": "your heuristic at\nthat point, which is supposed to be an\nestimate of how much work you have left to do, is always\nan underestimate or an accurate",
    "start": "2901180",
    "end": "2908221"
  },
  {
    "text": "estimate. It can never be an overestimate. Why not? Well, as Patrick showed you\nwith his mostly correct example",
    "start": "2908221",
    "end": "2914410"
  },
  {
    "text": "in lecture, if it's\nan overestimate, it's never going\nto expand that node cause it's going to think, you\nknow, if you write one million",
    "start": "2914410",
    "end": "2919870"
  },
  {
    "text": "as a heuristic,\nit's going to think it needs to do one million\nafter it's done going that way. It's not going to\nwant to go that way.",
    "start": "2919870",
    "end": "2924970"
  },
  {
    "text": "All right? So it's always got to\nbe an underestimate or an equal estimate.",
    "start": "2924970",
    "end": "2930220"
  },
  {
    "text": "But let's say that\nyou, at the quiz, and you forget\nMark told me this. You didn't bring any notes.",
    "start": "2930220",
    "end": "2935360"
  },
  {
    "text": "You're just having\na brain freeze. You're like, oh no. Is it supposed to\nbe an overestimate or an underestimate? I can't remember which one.",
    "start": "2935360",
    "end": "2940378"
  },
  {
    "text": "How can I figure it out? How can I figure it out? I propose you the following\ncalm, soothing mantra slash",
    "start": "2940378",
    "end": "2946589"
  },
  {
    "text": "sutra that will\nhelp protect you. Think to yourself of\nthe following question.",
    "start": "2946590",
    "end": "2951659"
  },
  {
    "text": "We know that A* sometimes\nmesses up with the heuristic. Does branch and bound\nalways get it right?",
    "start": "2951659",
    "end": "2957170"
  },
  {
    "text": "Yes. What heuristic values\ndoes branch and bound add everywhere? 0.",
    "start": "2957170",
    "end": "2962190"
  },
  {
    "text": "Right? It has no heuristic. It essentially adds 0. Is 0 an overestimate\nor an underestimate?",
    "start": "2962190",
    "end": "2968279"
  },
  {
    "text": "An underestimate. Therefore, since branch\nand bound always works, the one you're looking\nfor is an underestimate.",
    "start": "2968280",
    "end": "2973825"
  },
  {
    "text": "And I know from when I\nwas taking the class, I always had a moment\nwhere I had to spend, like, two minutes convincing\nmyself, OK, I'm",
    "start": "2973825",
    "end": "2979450"
  },
  {
    "text": "going for underestimate,\nnot overestimate. This will help. It will take fewer than\ntwo minutes to do that. So what is consistency?",
    "start": "2979450",
    "end": "2985720"
  },
  {
    "text": "Consistency is a little\nbit stronger of a claim. When you claim that a\ngraph is consistent, what you're saying is,\nbetween any two nodes,",
    "start": "2985720",
    "end": "2993640"
  },
  {
    "text": "or to do it more simply,\nbetween any two adjacent nodes, the distance between\nthe heuristics",
    "start": "2993640",
    "end": "3000230"
  },
  {
    "text": "is less than the distance\nbetween the nodes. In other words,\nadmissibility is a sort",
    "start": "3000230",
    "end": "3007400"
  },
  {
    "text": "of, like, consistency\nbetween every node in G. Whereas consistency is\nconsistency between every node",
    "start": "3007400",
    "end": "3012780"
  },
  {
    "text": "and every other node. All right? Consistency is a stronger claim. Any graph that's consistent\nis always admissible.",
    "start": "3012780",
    "end": "3020740"
  },
  {
    "text": "Any graph that is inadmissible\nis always inconsistent. That's the contrapositive.",
    "start": "3020740",
    "end": "3026610"
  },
  {
    "text": "Question? AUDIENCE: Less than or\nless than or equal to? PROFESSOR: Equal to is still OK. Equal to is always OK.",
    "start": "3026610",
    "end": "3032350"
  },
  {
    "text": "That's great. It's a perfect estimate. But never greater. Now, if a graph is\ninconsistent, will you lose?",
    "start": "3032350",
    "end": "3038927"
  },
  {
    "text": "Will you lose? Why is it called admissible,\nthen, if it's sometimes not admissible?",
    "start": "3038927",
    "end": "3045245"
  },
  {
    "text": "Why do we lose? The answer is the extended\nlist, and you see that here. If a graph is admissible,\nyou will always",
    "start": "3045245",
    "end": "3051089"
  },
  {
    "text": "get the right answer\nunless you use an extended list because you're\nchecking from every node",
    "start": "3051090",
    "end": "3057250"
  },
  {
    "text": "to the goal node. And you're sure that\nyour estimates are right. But if estimates within\nnodes aren't correct, you might go through\nthem out of order,",
    "start": "3057250",
    "end": "3063700"
  },
  {
    "text": "and that violates\nyour assumption that you made when\nyou decided to use the extended list\nthat you would always go through the\nsub-graphs in order.",
    "start": "3063700",
    "end": "3070980"
  },
  {
    "text": "This graph is very expertly\ncrafted to do that to you cause I might\nas well be sort of a bottleneck, goal node,\nand I has an inconsistency.",
    "start": "3070980",
    "end": "3078327"
  },
  {
    "text": "There's a few other\ninconsistencies in this graph, but they don't do\nanything to you. In fact, even inadmissibilities\nsometimes don't mess you up.",
    "start": "3078327",
    "end": "3085200"
  },
  {
    "text": "So you can't just say,\nblindly, it's inadmissible, so it will never work. It might work. It turns out the\nonly inconsistency",
    "start": "3085200",
    "end": "3090600"
  },
  {
    "text": "that matters here is not the\ninconsistency between, say, S and F. That doesn't\nturn out to matter. It's the inconsistency\nbetween some of these nodes,",
    "start": "3090600",
    "end": "3098560"
  },
  {
    "text": "including I and H, specifically. So have a good weekend.",
    "start": "3098560",
    "end": "3105340"
  },
  {
    "text": "Come in on Monday and\nTuesday to tutorial. Ask about the queue\nmethod, or other methods. Ask about anything that's\nniggling in your brain.",
    "start": "3105340",
    "end": "3111780"
  },
  {
    "text": "But hopefully, you\nguys have got this. You're going to do fine.",
    "start": "3111780",
    "end": "3115780"
  }
]