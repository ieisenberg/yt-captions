[
  {
    "start": "0",
    "end": "0"
  },
  {
    "start": "0",
    "end": "500"
  },
  {
    "text": "The goal of this problem is\nto design a reliable latch.",
    "start": "500",
    "end": "4670"
  },
  {
    "text": "A latch can be designed using\na multiplexor where the G",
    "start": "4670",
    "end": "8540"
  },
  {
    "text": "input is used to\ndetermine whether or not",
    "start": "8540",
    "end": "11150"
  },
  {
    "text": "a new data value should\nbe loaded into the latch.",
    "start": "11150",
    "end": "14700"
  },
  {
    "text": "The way the latch works is that\nwhen G = 0, the old value of Q",
    "start": "14700",
    "end": "19990"
  },
  {
    "text": "is fed back through\nthe multiplexor",
    "start": "19990",
    "end": "21990"
  },
  {
    "text": "so it retains its old value.",
    "start": "21990",
    "end": "24610"
  },
  {
    "text": "When G = 1, the multiplexor\nselects D as the input",
    "start": "24610",
    "end": "28920"
  },
  {
    "text": "so Q gets updated to\nbe the value of D.",
    "start": "28920",
    "end": "33100"
  },
  {
    "text": "The logic function\nthat describes",
    "start": "33100",
    "end": "34850"
  },
  {
    "text": "the operation of the latch is Q\n= (NOT(G) AND Q) OR (G AND D).",
    "start": "34850",
    "end": "43050"
  },
  {
    "start": "43050",
    "end": "46210"
  },
  {
    "start": "44000",
    "end": "44000"
  },
  {
    "text": "We want to build this\nlatch using only AND, OR,",
    "start": "46210",
    "end": "49320"
  },
  {
    "text": "and inverter gates.",
    "start": "49320",
    "end": "51130"
  },
  {
    "text": "We are given three proposed\ndesigns for the latch.",
    "start": "51130",
    "end": "54390"
  },
  {
    "text": "For each proposed\ndesign, we want",
    "start": "54390",
    "end": "56260"
  },
  {
    "text": "to specify whether the design\nis BAD, GOOD, or OBESE.",
    "start": "56260",
    "end": "60719"
  },
  {
    "text": "BAD means that the latch\ndoes not work reliably.",
    "start": "60720",
    "end": "63900"
  },
  {
    "text": "GOOD means that the\nlatch works reliably.",
    "start": "63900",
    "end": "66670"
  },
  {
    "text": "OBESE means that the latch\nworks, but uses more gates",
    "start": "66670",
    "end": "70000"
  },
  {
    "text": "than necessary.",
    "start": "70000",
    "end": "72260"
  },
  {
    "text": "Latch proposal A is shown here.",
    "start": "72260",
    "end": "75000"
  },
  {
    "text": "Taking a closer look\nat this circuit,",
    "start": "75000",
    "end": "77080"
  },
  {
    "text": "we see that the logic\nfunction that it implements",
    "start": "77080",
    "end": "80310"
  },
  {
    "text": "is Q = (G AND Q) OR D.",
    "start": "80310",
    "end": "84990"
  },
  {
    "text": "This is not the correct\nlogic equation for a latch,",
    "start": "84990",
    "end": "88159"
  },
  {
    "text": "so this design is BAD.",
    "start": "88160",
    "end": "89820"
  },
  {
    "start": "89820",
    "end": "94410"
  },
  {
    "start": "92000",
    "end": "92000"
  },
  {
    "text": "Next, we take a look\nat proposals B and C.",
    "start": "94410",
    "end": "98180"
  },
  {
    "text": "The logic equation for proposal\nB is Q = (NOT(G) AND Q)",
    "start": "98180",
    "end": "103780"
  },
  {
    "text": "OR (G AND D)).",
    "start": "103780",
    "end": "106030"
  },
  {
    "text": "This is exactly the\nsame logic equation",
    "start": "106030",
    "end": "108290"
  },
  {
    "text": "that we specified for our latch.",
    "start": "108290",
    "end": "110570"
  },
  {
    "text": "However, this implementation\nis not lenient",
    "start": "110570",
    "end": "113470"
  },
  {
    "text": "because it does not\nguarantee that you will not",
    "start": "113470",
    "end": "115700"
  },
  {
    "text": "see glitches on your output\nsignal when G changes value.",
    "start": "115700",
    "end": "120149"
  },
  {
    "text": "Proposal C, however, includes\nthe same logic function",
    "start": "120150",
    "end": "124190"
  },
  {
    "text": "Q = (NOT(G) AND Q) OR (G\nAND D)) plus one more term",
    "start": "124190",
    "end": "130160"
  },
  {
    "text": "which is OR (Q AND D).",
    "start": "130160",
    "end": "133690"
  },
  {
    "text": "If you create a karnaugh map for\nboth of these logic functions,",
    "start": "133690",
    "end": "137250"
  },
  {
    "text": "you see that the QD\nterm is redundant",
    "start": "137250",
    "end": "140120"
  },
  {
    "text": "because it doesn't\nadd any additional 1's",
    "start": "140120",
    "end": "142420"
  },
  {
    "text": "to the karnaugh map.",
    "start": "142420",
    "end": "144010"
  },
  {
    "text": "This means that logically the\ntwo functions are equivalent,",
    "start": "144010",
    "end": "147330"
  },
  {
    "text": "but the effect of the\nextra term is that it makes",
    "start": "147330",
    "end": "150000"
  },
  {
    "text": "the implementation lenient.",
    "start": "150000",
    "end": "152130"
  },
  {
    "text": "So Proposal C is the GOOD\nproposal and B is BAD.",
    "start": "152130",
    "end": "156876"
  },
  {
    "start": "156876",
    "end": "157376"
  }
]