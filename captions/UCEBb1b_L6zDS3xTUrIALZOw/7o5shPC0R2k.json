[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6820"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or to\nview additional materials",
    "start": "6820",
    "end": "13480"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13480",
    "end": "24012"
  },
  {
    "text": "PROFESSOR: Sorry. I have a bit of a sore\nthroat, hoarse voice. I was talking a\nlot this weekend.",
    "start": "24012",
    "end": "30090"
  },
  {
    "text": "OK. Also, today we're going to\ndo transaction malleability, segregated witness,\nand I'm endorsing",
    "start": "30090",
    "end": "35390"
  },
  {
    "text": "an ICO for the first\ntime ever publicly, and it's Anne's intermittent\ncookie offering. So if you guys want cookies.",
    "start": "35390",
    "end": "41447"
  },
  {
    "text": " It's an airdrop and\nyou just get them.",
    "start": "41447",
    "end": "46809"
  },
  {
    "start": "46810",
    "end": "54740"
  },
  {
    "text": "so it's my first\nICO I'm endorsing.",
    "start": "54740",
    "end": "60780"
  },
  {
    "text": "OK. So malleability. So malleability is\nthe ability to deform",
    "start": "60780",
    "end": "66950"
  },
  {
    "start": "63000",
    "end": "221000"
  },
  {
    "text": "under pressure formateer. And so bitcoin is modeled\noff of gold, which is the most malleable metal.",
    "start": "66950",
    "end": "72350"
  },
  {
    "text": "You can make gold\nleaf and stuff. So clearly we need to design\nbitcoin to be malleable.",
    "start": "72350",
    "end": "79290"
  },
  {
    "text": "No, I'm joking. OK. Actually in the context\nof cryptography,",
    "start": "79290",
    "end": "86869"
  },
  {
    "text": "it's not super hard\ndefinition, but it started with Cipher text, where\nif you can modify a Cipher text and that modification will\ncarry over into the plain text",
    "start": "86870",
    "end": "96770"
  },
  {
    "text": "when it's encrypted. It also applies to sort of\nmessages and signatures. In our case, signatures\ncan be malleable,",
    "start": "96770",
    "end": "103710"
  },
  {
    "text": "which means you can\nchange the signature and it's still a\nvalid signature. So given a signature\nS1 on message M1,",
    "start": "103710",
    "end": "113660"
  },
  {
    "text": "you modify the signature\nto S2 or S prime and it still signs\nthe same message.",
    "start": "113660",
    "end": "119960"
  },
  {
    "text": "It still validates as true. So when we were\ndefining signatures this wasn't really an\nattack we'd considered.",
    "start": "119960",
    "end": "128509"
  },
  {
    "text": "There's still a signature and\nyou can't forge a signature, but you can dot\nan I or something",
    "start": "128509",
    "end": "134960"
  },
  {
    "text": "and the signature is\nslightly different. You can't create one yourself,\nbut given a valid signature you can make a slightly\ndifferent valid signature.",
    "start": "134960",
    "end": "143700"
  },
  {
    "text": "And that's how it works in\nthe bitcoin signing algorithm. But there's all sorts\nof different contexts",
    "start": "143700",
    "end": "150200"
  },
  {
    "text": "where malleability\nexists in cryptography. And then part of\nit is things still",
    "start": "150200",
    "end": "155900"
  },
  {
    "text": "have to work for\nwhatever definition. So if you malleates a signature\nand it no longer validates,",
    "start": "155900",
    "end": "162327"
  },
  {
    "text": "well, that's sort\nof a trivial, like-- yeah, sure, you can do\nthat to any bunch of bytes. You can just flip some of\nthem and the whole thing",
    "start": "162327",
    "end": "168645"
  },
  {
    "text": "doesn't work anymore. That's easy. But properties where\nit still works.",
    "start": "168645",
    "end": "173717"
  },
  {
    "text": "So this leads to some\nweird stuff in bitcoin where you can\nchange a transaction",
    "start": "173717",
    "end": "179060"
  },
  {
    "text": "and it's still valid. And that's generally\nnot what you want.",
    "start": "179060",
    "end": "184400"
  },
  {
    "text": "If you've got some\nkind of contract or some kind of payment\nand you write a check,",
    "start": "184400",
    "end": "189542"
  },
  {
    "text": "you don't want someone to\nbe able to modify the check and still be able to cash it. And I don't really use checks\nmuch, but they draw the line.",
    "start": "189542",
    "end": "198080"
  },
  {
    "text": "Like $100 and then\nthey draw a line so someone doesn't write and\n$0.99 or something after.",
    "start": "198080",
    "end": "203959"
  },
  {
    "text": "Not that that's like the\ngreatest attack ever. Or $100 and then someone\nputs like $1,000.",
    "start": "203960",
    "end": "210319"
  },
  {
    "text": "I don't know. But it's sort of like\nthat where someone can change the\nthing you sign, can change the thing you are\nagreeing to after the fact,",
    "start": "210320",
    "end": "218120"
  },
  {
    "text": "and it's still valid and it\ndoes something you don't expect. OK.",
    "start": "218120",
    "end": "223150"
  },
  {
    "start": "221000",
    "end": "445000"
  },
  {
    "text": "So a review of the\ntransaction format, which should be probably\nin people's minds",
    "start": "223150",
    "end": "230160"
  },
  {
    "text": "if you were looking at the\nhomework, the problem set. And one thing to focus\non is that the outputs",
    "start": "230160",
    "end": "236310"
  },
  {
    "text": "don't look like the inputs. These are fundamentally\ndifferent things.",
    "start": "236310",
    "end": "242190"
  },
  {
    "text": "The outputs specify a\ntransaction ID and the inputs,",
    "start": "242190",
    "end": "248640"
  },
  {
    "text": "and then the outputs specify\na script and an amount. There's another 4 byte field\nhere that doesn't matter.",
    "start": "248640",
    "end": "256100"
  },
  {
    "text": "So basically you're spending\nfrom a transaction and a sort of row and you're spending too\njust this arbitrary pub key,",
    "start": "256100",
    "end": "264510"
  },
  {
    "text": "but you're not\nspending from a pub key and you're not spending\nto a transaction.",
    "start": "264510",
    "end": "269780"
  },
  {
    "text": "You don't identify your\ntransaction itself here. ",
    "start": "269780",
    "end": "278410"
  },
  {
    "text": "Almost every website that\nshows blockchains is it gets this wrong.",
    "start": "278410",
    "end": "283970"
  },
  {
    "text": "So if you look at\nlike, I don't know, blockchain.info is\nprobably the most popular",
    "start": "283970",
    "end": "291390"
  },
  {
    "text": "and you just look\nat a transaction. They don't have it anymore. OK. So you look at a block and\nthen you look at a transaction",
    "start": "291390",
    "end": "298600"
  },
  {
    "text": "in the block. We're going. No. No. No, not yet. There we go OK.",
    "start": "298600",
    "end": "303822"
  },
  {
    "text": "So you look at a transaction. Yeah, it shows. This address is sending\nto these two addresses.",
    "start": "303822",
    "end": "310069"
  },
  {
    "text": "And blockchain.info is\nparticularly egregious and that there may actually\nbe more than one input and two",
    "start": "310070",
    "end": "315650"
  },
  {
    "text": "outputs in this transaction. They hide change transactions.",
    "start": "315650",
    "end": "321860"
  },
  {
    "text": "So it looks like, hey, this\naddress had some money in it and it sent it to\nthese two addresses.",
    "start": "321860",
    "end": "328233"
  },
  {
    "text": "And if I click, oh, where\ndid this money come? It come from\n18eecz, and it shows",
    "start": "328233",
    "end": "333990"
  },
  {
    "text": "here's the bitcoin\naddress, and, oh, it's got multiple transactions this\naddresses has been involved in.",
    "start": "333990",
    "end": "342180"
  },
  {
    "text": "This is not how bitcoin works. They are running their\nown database and sort",
    "start": "342180",
    "end": "348120"
  },
  {
    "text": "of making up this view of the\nnetwork, which is incorrect.",
    "start": "348120",
    "end": "353729"
  },
  {
    "text": "Transactions don't\nsend from an address, they send from another\ntransactions previous output.",
    "start": "353730",
    "end": "360960"
  },
  {
    "text": "And this is very confusing\nbecause in the case, let's say in this\ntransaction, there is a-- what is it?",
    "start": "360960",
    "end": "366810"
  },
  {
    "text": " 767 something. ",
    "start": "366810",
    "end": "374880"
  },
  {
    "text": "So it says, yeah, it's\ncoming from 18ee whatever, and if I click on it I get\nthree different transactions.",
    "start": "374880",
    "end": "382110"
  },
  {
    "text": "There is a specific\ntransaction that 18ee was involved in that is being\nspent from in this transaction.",
    "start": "382110",
    "end": "388250"
  },
  {
    "text": "I can look it up because I\nhave an actual full node. So if I say get raw transaction\nand I put it in here",
    "start": "388250",
    "end": "397729"
  },
  {
    "text": "and I can see, OK, it\nwas spending from c838.",
    "start": "397730",
    "end": "403410"
  },
  {
    "text": "It was spending from this\ntransaction, not just an address. So I mean if you're coming at\nthis sort of new it's like, OK,",
    "start": "403410",
    "end": "412210"
  },
  {
    "text": "fine, why do you keep\ntalking about this? But if you've been working on\nthese things, a lot of people,",
    "start": "412210",
    "end": "418010"
  },
  {
    "text": "myself included, for\nlike six months a year I looked at these\nwebsites and I'm like,",
    "start": "418010",
    "end": "423039"
  },
  {
    "text": "oh, this is how it works and\nthen six months in or something looking for code, and\nI'm like, wait, huh?",
    "start": "423040",
    "end": "429099"
  },
  {
    "text": "This code is wrong, but no,\nthis is the bitcoin code that actually is running. And so it's a weird thing\nto sort of get used to.",
    "start": "429100",
    "end": "436060"
  },
  {
    "text": "Like no, you're not\nspending from an address. You don't show the address at\nall when you spend from it, you spend from a\nspecific output.",
    "start": "436060",
    "end": "442170"
  },
  {
    "text": "OK. So that leads to\nsome weird issues. ",
    "start": "442170",
    "end": "447810"
  },
  {
    "start": "445000",
    "end": "489000"
  },
  {
    "text": "Specifically, what gets signed? So to some extent you're\nsigning the whole transaction.",
    "start": "447810",
    "end": "453160"
  },
  {
    "text": "You sign. You want to sign everything. When you're saying I'm\nsending money from here,",
    "start": "453160",
    "end": "458200"
  },
  {
    "text": "I'm sending it to here,\nyou want to make sure that your signature covers\nthe entire transaction so",
    "start": "458200",
    "end": "463870"
  },
  {
    "text": "that people can't add stuff\nafter or remove stuff. So you want to sign\nthe inputs and outputs.",
    "start": "463870",
    "end": "469330"
  },
  {
    "text": "But the inputs\ncontain signatures and you can't sign\nthe signature. That doesn't make any sense.",
    "start": "469330",
    "end": "475630"
  },
  {
    "text": "The signature is the thing\nyou're putting on at the end. So it's sort of weird. You've got this document\nand you have a little line",
    "start": "475630",
    "end": "480790"
  },
  {
    "text": "at the bottom for the signature. But should the signatures be\nmaybe a separate page that refers to the previous page?",
    "start": "480790",
    "end": "487419"
  },
  {
    "text": "It's actually kind of a\nweird confusing problem. So in practice, in bitcoin,\nwhat Satoshi did in 2009,",
    "start": "487420",
    "end": "496390"
  },
  {
    "text": "you take the whole\ntransaction, but you remove the signature fields. You basically zero them out. Just put a zero\nthere and then you",
    "start": "496390",
    "end": "502750"
  },
  {
    "text": "sign that sort of\nsignatureless transaction. And then you put that\nsignature in after the fact.",
    "start": "502750",
    "end": "513000"
  },
  {
    "text": "And so that means if you change\nany bit of the stuff that gets signed other than the signature,\nthe signature will break.",
    "start": "513000",
    "end": "522250"
  },
  {
    "text": "So does that make sense?  You have these\nempty lines kind of,",
    "start": "522250",
    "end": "528080"
  },
  {
    "text": "and the idea is you empty them\nout, you make them blank lines, and then you take that whole\nmessage, hash it, including",
    "start": "528080",
    "end": "534530"
  },
  {
    "text": "the empty parts, and then\npaste in those signatures after you've signed. ",
    "start": "534530",
    "end": "544490"
  },
  {
    "text": "You don't empty out every\nline, the line that you're specifically putting\nthe signature in, you actually put a\ndifferent few bytes",
    "start": "544490",
    "end": "550820"
  },
  {
    "text": "in there, which leads\nto other problems that I can maybe\nmention if I've done.",
    "start": "550820",
    "end": "556699"
  },
  {
    "text": "So this seems OK. It's like well, look, I can't\nsign the signatures, sure, but if you change any bit\nof the stuff I'm signing,",
    "start": "556700",
    "end": "564500"
  },
  {
    "text": "the signatures now break. So this seems perfectly safe. No one can change the\namounts I'm sending.",
    "start": "564500",
    "end": "570649"
  },
  {
    "text": "No one can change where\nI'm sending it to. No one can change\nwhere I'm sending from.",
    "start": "570650",
    "end": "575780"
  },
  {
    "text": "All these things get covered\nin my signature, so I'm good. Problem. The transaction ID, the way\nyou refer to transactions",
    "start": "575780",
    "end": "583800"
  },
  {
    "start": "578000",
    "end": "607000"
  },
  {
    "text": "is the hash of the whole thing. The txid does not zero\nout the signature fields.",
    "start": "583800",
    "end": "590070"
  },
  {
    "text": "So the identity of the\ntransaction itself, the way to point to and indicate\nwhere you're spending from,",
    "start": "590070",
    "end": "597180"
  },
  {
    "text": "that includes the signatures. So that also seems\nlike, well, that's OK.",
    "start": "597180",
    "end": "602850"
  },
  {
    "text": "When I point to\nsomething I'm indicating the whole transaction, the\nwhole signed transaction.",
    "start": "602850",
    "end": "609620"
  },
  {
    "start": "607000",
    "end": "617000"
  },
  {
    "text": "But the problem is\nthat can change. The signature itself\nmay be malleable,",
    "start": "609620",
    "end": "615590"
  },
  {
    "text": "and in bitcoin it is. There's third party\nmalleability problems. So the simplest one\nwas leading zeros",
    "start": "615590",
    "end": "622480"
  },
  {
    "start": "617000",
    "end": "893000"
  },
  {
    "text": "where all these\nthings are numbers. You could say, OK,\nsomeone's got a signature. It's this big, long\nstring of bytes.",
    "start": "622480",
    "end": "630180"
  },
  {
    "text": "I'm just going to put\nzeros in the front. I'm going to put a zero\nbyte in the front of it, and that doesn't\nchange the meaning.",
    "start": "630180",
    "end": "636290"
  },
  {
    "text": "If someone says, I'm\nsending you $1,000 and I put a 0 front\nof the one and 1,000.",
    "start": "636290",
    "end": "642255"
  },
  {
    "text": "Well, it's still 1,000. However, for the purpose\nof a hash function, if you have a zero\nbyte in front,",
    "start": "642255",
    "end": "648590"
  },
  {
    "text": "that changes the whole hash. And so they got rid\nof this pretty early.",
    "start": "648590",
    "end": "654140"
  },
  {
    "text": "They sort of made\nit so that you had to have the exact right number. You can't have\nany leading zeros.",
    "start": "654140",
    "end": "659660"
  },
  {
    "text": "But the first one was just,\noh, I put a 0 in the front. The harder one is\ncalled low s, where part",
    "start": "659660",
    "end": "666260"
  },
  {
    "text": "of the ecdsa signature scheme. I showed before that\nit's this curve that's",
    "start": "666260",
    "end": "671930"
  },
  {
    "text": "symmetric about the x-axis. Whether the thing\nyou're indicating is on top of the curve or\nit's sort of reflection",
    "start": "671930",
    "end": "679840"
  },
  {
    "text": "on the bottom, it's\nvalid either way. So for any given\nsignature, there's another signature\nthat will be valid.",
    "start": "679840",
    "end": "686079"
  },
  {
    "text": "You just sort of flip it,\nmake it negative or positive. So now there's a standard,\nOK, you need to have high s.",
    "start": "686080",
    "end": "692440"
  },
  {
    "text": "Low s signatures\nshould be invalid. Both of these are really\ntricky because they're",
    "start": "692440",
    "end": "698540"
  },
  {
    "text": "third party malleability. Anyone can just listen on the\nnetwork, see a transaction, change the signature.",
    "start": "698540",
    "end": "704540"
  },
  {
    "text": "And in doing so they\nwill change the txid, which is how all the software\nrefers to transactions. So it looks like\na new transaction",
    "start": "704540",
    "end": "712470"
  },
  {
    "text": "to most of the software. And the transactions\nare still valid. The signatures are still\nvalid and you're not sure which one will get in.",
    "start": "712470",
    "end": "719509"
  },
  {
    "text": "There's also first party\nmalleability, or in some cases second party if you're\ndoing transactions with multiple people signing.",
    "start": "719510",
    "end": "726890"
  },
  {
    "text": "So I'm not going to go back into\nthe elliptic curve signature algorithms, but\nthere is a nonce.",
    "start": "726890",
    "end": "732259"
  },
  {
    "text": "There's randomness\nthat you inject into the signing process. It's not deterministic.",
    "start": "732260",
    "end": "738080"
  },
  {
    "text": "It's not that given a\nmessage and my private key. I always compute\nthe same signature. No, that's not how it works.",
    "start": "738080",
    "end": "744457"
  },
  {
    "text": "There are signature\nschemes like that, but in the case of the elliptic\ncurve stuff that bitcoin uses,",
    "start": "744457",
    "end": "749509"
  },
  {
    "text": "you have to make up a random\nnumber to make each signature, and no one knows what\nthat random number is.",
    "start": "749510",
    "end": "755360"
  },
  {
    "text": "So you could make up\ndifferent random numbers. You can make as many\nsignatures as you want. So given a message\nand your private key,",
    "start": "755360",
    "end": "764600"
  },
  {
    "text": "you can make arbitrary\nnumber of signatures that are all\ndifferent signatures, but they're all\nvalid signatures.",
    "start": "764600",
    "end": "772040"
  },
  {
    "text": "There is a sort of standard\nfor how to make them the right way not randomly.",
    "start": "772040",
    "end": "778339"
  },
  {
    "text": "It's basically take the\nhash of your private key and the message being signed.",
    "start": "778340",
    "end": "784280"
  },
  {
    "text": "Put them together,\nhash that, and use that as your random number because\nthen the idea is well,",
    "start": "784280",
    "end": "790154"
  },
  {
    "text": "it's got secret\ninformation in it as well as the message\nspecific information in it. So no one's going to be\nable to guess what it is so,",
    "start": "790155",
    "end": "797000"
  },
  {
    "text": "and it's still kind\nof message dependent so it'll change each time. So there is that, but\nthat's something you can do.",
    "start": "797000",
    "end": "804870"
  },
  {
    "text": "It's a really good\nidea because if you use a non-random k,\nif someone can guess k",
    "start": "804870",
    "end": "810649"
  },
  {
    "text": "or if your random number\ngenerator's broken, they can steal all your money. They can figure out\nyour private key.",
    "start": "810650",
    "end": "818550"
  },
  {
    "text": "So you don't want to be\ndependent on generating randomness. A nice way to model it is, OK,\nhave some initial event where",
    "start": "818550",
    "end": "825270"
  },
  {
    "text": "you're putting in random\nnumbers and you're storing them and then from then on you want\neverything to be deterministic,",
    "start": "825270",
    "end": "831040"
  },
  {
    "text": "then you don't have to rely\non random number generators. So it's really a good\nidea to use this. And I use it in my software.",
    "start": "831040",
    "end": "837355"
  },
  {
    "text": "Most things use this\nkind of standard. However, you can't verify that\nanyone's actually using it.",
    "start": "837355",
    "end": "842410"
  },
  {
    "text": "It's purely internal. It's a internal way for you\nto make your own signatures, but no one can actually--",
    "start": "842410",
    "end": "848890"
  },
  {
    "text": "can you prove? No. I'm not going to say you\ncan't prove you're using it, but not in any\nreasonable fashion.",
    "start": "848890",
    "end": "856590"
  },
  {
    "text": "Yeah. So no one knows if\nyou're doing it. So this is an attack\nwhere you can say, OK, I'm going to make a whole\nbunch of different signatures.",
    "start": "856590",
    "end": "863590"
  },
  {
    "text": "They're all going to\nbe valid, but that will mean I've got a whole\nbunch of different transactions that are doing the same thing.",
    "start": "863590",
    "end": "871899"
  },
  {
    "text": "So maybe the question is,\nwhat does this really do? Does this really hurt? If someone dots an eye on your\ncheck, it's the same amount.",
    "start": "871900",
    "end": "879460"
  },
  {
    "text": "It's going to the same place. Who cares. Outputs are the same.",
    "start": "879460",
    "end": "886160"
  },
  {
    "text": "Inputs it's pointing\nto are the same. It's just this sort\nof annoying thing. OK, I tweaked it and\nI changed the txid.",
    "start": "886160",
    "end": "892320"
  },
  {
    "text": "No big deal. Well, in some ways,\nyeah, it's no big deal,",
    "start": "892320",
    "end": "898100"
  },
  {
    "start": "893000",
    "end": "1054000"
  },
  {
    "text": "but a lot of wallets\ndidn't deal with this well. So let's say you're running a\nwallet, you make a transaction",
    "start": "898100",
    "end": "904510"
  },
  {
    "text": "and you sign and you\nbroadcast transaction 2d5cac",
    "start": "904510",
    "end": "909850"
  },
  {
    "text": "and it never gets confirmed, and\ninstead someone out there flips a bit, changes your\ntransaction to 9cba3e",
    "start": "909850",
    "end": "919450"
  },
  {
    "text": "and that gets confirmed,\nand your wallet just says, yeah, this transaction\nyou sent never got confirmed.",
    "start": "919450",
    "end": "925825"
  },
  {
    "text": "There's wallets that did that. Most of them have\nfixed it by now. But if you're thinking\nof transaction IDs",
    "start": "925825",
    "end": "931120"
  },
  {
    "text": "as the identity txid, this is\nthe name of the transaction.",
    "start": "931120",
    "end": "936360"
  },
  {
    "text": "I create it, I'm watching it\nto see when it gets confirmed, and I'm not looking for\nsome malleated version.",
    "start": "936360",
    "end": "942850"
  },
  {
    "text": "I'm just watching this\nthing that I created, never gets in a block. Weird, and it's just\nstuck in the wallet.",
    "start": "942850",
    "end": "948670"
  },
  {
    "text": "So there are definitely\nwallets, and I think everyone's fixed it by now. But a couple years\nago, definitely wallets",
    "start": "948670",
    "end": "954310"
  },
  {
    "text": "that would have these problems. It's a wallet problem. Your money got to\nthe right place.",
    "start": "954310",
    "end": "961209"
  },
  {
    "text": "You just need to sort of either\ndelete stuff in your wallet or upgrade the software or\ntell it to somehow forget",
    "start": "961210",
    "end": "967210"
  },
  {
    "text": "about this transaction\nand actually look on the blockchain\nfor everything similar to your transaction. But it did do some damage.",
    "start": "967210",
    "end": "976279"
  },
  {
    "text": "So, I don't know, 2014 the Mt. Gox thing where Mt. Gox got hacked supposedly\nand lost all the money,",
    "start": "976280",
    "end": "984190"
  },
  {
    "text": "they blamed transaction\nmalleability, which was kind of interesting. There may have been an attack\non Mt Gox that used transaction",
    "start": "984190",
    "end": "993070"
  },
  {
    "text": "malleability. The attack probably was\nthis, which was log into Mt.",
    "start": "993070",
    "end": "1001540"
  },
  {
    "text": "Gox, withdraw some coins,\nmodify the txid to this,",
    "start": "1001540",
    "end": "1007899"
  },
  {
    "text": "and then it gets confirmed,\nyou get your coins, and then log into Mt. Gox and say, hey,\nthis never happened.",
    "start": "1007900",
    "end": "1013660"
  },
  {
    "text": "My withdrawal\ndidn't work and then their system would automatically\nissue a new withdrawal transaction.",
    "start": "1013660",
    "end": "1018820"
  },
  {
    "text": "And so you could just start\ntaking all the money out and your balance on\nthe system's like, well, we keep trying\nto send you money",
    "start": "1018820",
    "end": "1025299"
  },
  {
    "text": "and it keeps never\ngetting confirmed. And so we keep making new ones. I don't know to what extent\nthat that actually happened.",
    "start": "1025300",
    "end": "1031869"
  },
  {
    "text": " It couldn't have been\nthe whole thing for Mt. Gox definitely.",
    "start": "1031869",
    "end": "1037182"
  },
  {
    "text": "There's still a lot of\nuncertainty about that. But it's indicative. If you write your own\nsoftware and it's not",
    "start": "1037182",
    "end": "1043059"
  },
  {
    "text": "accounting for these things,\nyou may be losing money once people say, hey, this\ndidn't work, make a new one,",
    "start": "1043060",
    "end": "1049030"
  },
  {
    "text": "and then you keep doing that\nand losing a ton of money. But that's pretty\nsloppy practice.",
    "start": "1049030",
    "end": "1056080"
  },
  {
    "text": "Another issue. If you're spending from\na unconfirmed change",
    "start": "1056080",
    "end": "1062440"
  },
  {
    "text": "output or an\nunconfirmed output-- so you make a transaction, you\nsend the two different outputs,",
    "start": "1062440",
    "end": "1067690"
  },
  {
    "text": "you've got a txid. And you're sending five\ncoins to this person and three coins\nback to yourself.",
    "start": "1067690",
    "end": "1073649"
  },
  {
    "text": "That three coins back\nto yourself output, you might want to use\nit again pretty quickly. Sometimes this happens.",
    "start": "1073650",
    "end": "1080559"
  },
  {
    "text": "And so you've got a\nchange output that's from transaction 1, 7feec1.",
    "start": "1080560",
    "end": "1087610"
  },
  {
    "text": "So you're going to now spend\nthat change output, however the txid of transaction\none changes.",
    "start": "1087610",
    "end": "1094870"
  },
  {
    "text": "So you're saying\nwhere you're spending from is no longer valid. And this is a big problem\nbecause now you've",
    "start": "1094870",
    "end": "1101680"
  },
  {
    "text": "signed a transaction that you\nthink is going to be valid, but the money you thought\nyou were spending sort of",
    "start": "1101680",
    "end": "1106900"
  },
  {
    "text": "moves out from under you. And so that transaction's\nno longer valid. tx2 is now invalid.",
    "start": "1106900",
    "end": "1112779"
  },
  {
    "text": "It refers to something\nwhich can never be confirmed because there's\na different transaction that's",
    "start": "1112780",
    "end": "1118390"
  },
  {
    "text": "almost the same, but they're\nmutually exclusive that did get confirmed. OK. So this is bad.",
    "start": "1118390",
    "end": "1125690"
  },
  {
    "text": " It doesn't seem that bad. And so for years in\nbitcoin this was a problem",
    "start": "1125690",
    "end": "1133100"
  },
  {
    "text": "that while it dealt\nwith, software and people would be like, oh yeah, you\nhave to backup your keys,",
    "start": "1133100",
    "end": "1138890"
  },
  {
    "text": "delete your whole database,\nand rethink the blockchain and then it'll find\nthe right transactions.",
    "start": "1138890",
    "end": "1144045"
  },
  {
    "text": "Kind of hacky work\narounds like that where it didn't happen too much.",
    "start": "1144045",
    "end": "1149782"
  },
  {
    "text": "It wasn't a great attack. You can annoy people. You don't get any money. So wasn't a huge deal,\nbut it was annoying.",
    "start": "1149782",
    "end": "1158054"
  },
  {
    "text": "But the idea is you\ncan always re-sign. You've got your private keys. If the money you are receiving\nsort of shifts around",
    "start": "1158055",
    "end": "1165029"
  },
  {
    "text": "and changes its location,\nwell it's still yours. You just need to re-sign. But what if you can't re-sign?",
    "start": "1165030",
    "end": "1171320"
  },
  {
    "start": "1170000",
    "end": "1293000"
  },
  {
    "text": "So the case of multisig where\nin most cases when you're",
    "start": "1171320",
    "end": "1176909"
  },
  {
    "text": "doing transactions if you just\nhave one key, it's just you, that's fine. In the case of\nmultisig usually you're",
    "start": "1176910",
    "end": "1183570"
  },
  {
    "text": "all friends to some\nextent and you're all in the same organization or\nmultiple devices that you own.",
    "start": "1183570",
    "end": "1191159"
  },
  {
    "text": "But you can have sort\nof adversarial multisig where you're\nassigning transactions with people who are you're\nsort of cooperating with them,",
    "start": "1191160",
    "end": "1198390"
  },
  {
    "text": "but you may not\nreally trust them, or they might be potentially\nattackers, things like that.",
    "start": "1198390",
    "end": "1203712"
  },
  {
    "text": "You can definitely sort of\nextend your multisig model into that. And there could be multisig\npre-signed transactions",
    "start": "1203712",
    "end": "1209910"
  },
  {
    "text": "where, OK, we've got\nthis two of three output address, this\noutput that exists,",
    "start": "1209910",
    "end": "1215820"
  },
  {
    "text": "and one of the two or three\nhas pre-signed a transaction and hands it over to me\nand then they disappear. And they say, oh OK, well I'm\ngoing to now sign my side.",
    "start": "1215820",
    "end": "1224400"
  },
  {
    "text": "But if malleability occurs and\nthe transaction ID changes, that signature is no longer\nvalid, signing something",
    "start": "1224400",
    "end": "1233430"
  },
  {
    "text": "that's not there anymore. So this is very important in\npayment channels lightning network stuff that I'll\nget to in a few days.",
    "start": "1233430",
    "end": "1241780"
  },
  {
    "text": "And so it wasn't so\nmuch that malleability was like a showstopper bug\nand everyone was losing tons",
    "start": "1241780",
    "end": "1247650"
  },
  {
    "text": "of money, it was that\nit was preventing kind of new, cool\nthings from happening because there were a\nlot of problems with,",
    "start": "1247650",
    "end": "1255419"
  },
  {
    "text": "OK, let's make this\nconstruction where we put money into a multisig account and\nthen I sign like a refund",
    "start": "1255420",
    "end": "1261419"
  },
  {
    "text": "transaction that's got a lock\ntime before I actually fund it and things like that where\nyou couldn't reliably do it",
    "start": "1261420",
    "end": "1268090"
  },
  {
    "text": "because if either party\nmodified their signature, they could break the whole thing\nand they could have a tax where",
    "start": "1268090",
    "end": "1273539"
  },
  {
    "text": "it's like, OK, we're\ndoing something together. Oh look, it's got stuck. Well both of our coins\ngot stuck in this place.",
    "start": "1273540",
    "end": "1279220"
  },
  {
    "text": "Hmm. Now it's sort of a hostage\nsituation and you can say, well, I think I should get 1\nand 1/2 and you should get 1.5.",
    "start": "1279220",
    "end": "1285660"
  },
  {
    "text": "It's like wait,\nwe both wanted 1. So there is a tax\nthat could happen. And so this malleability\nwas a problem",
    "start": "1285660",
    "end": "1291572"
  },
  {
    "text": "for people trying to\ndo new, cool things.  So how do you fix this?",
    "start": "1291572",
    "end": "1297240"
  },
  {
    "text": "Any ideas?  Non-malleable signatures? So the one we did for\nthe first homework.",
    "start": "1297240",
    "end": "1305970"
  },
  {
    "text": "Does anyone have an idea about\nwhy the lamport signatures were non-malleable, like\nfrom problems at one?",
    "start": "1305970",
    "end": "1312929"
  },
  {
    "text": " Yes, it was right.",
    "start": "1312930",
    "end": "1320330"
  },
  {
    "text": "But yeah, they weren't.  There's no randomness for one.",
    "start": "1320330",
    "end": "1326610"
  },
  {
    "text": "I'm pretty sure if you flip\nany of the bits it's not going to work. So lamport signatures are\nan example where, yeah, it's",
    "start": "1326610",
    "end": "1332210"
  },
  {
    "text": "non-malleable. You can't produce multiple\ndifferent signatures",
    "start": "1332210",
    "end": "1338390"
  },
  {
    "text": "on the same message. So that's good. The thing is many\nuseful signature schemes",
    "start": "1338390",
    "end": "1344540"
  },
  {
    "text": "are malleable. So to just say no, you have to\nuse a non-malleable signature scheme, it's not a great\nanswer to the question.",
    "start": "1344540",
    "end": "1350000"
  },
  {
    "text": " I'm pretty sure there's\nsome weird malleability",
    "start": "1350000",
    "end": "1355260"
  },
  {
    "text": "stuff in RSA. A lot of the systems\nhave randomness in there",
    "start": "1355260",
    "end": "1360840"
  },
  {
    "text": "and they're malleable. So an idea that I\nhad like 2014 and I",
    "start": "1360840",
    "end": "1366270"
  },
  {
    "start": "1361000",
    "end": "1550000"
  },
  {
    "text": "was sort of going for was just\ndon't sign your inputs at all,",
    "start": "1366270",
    "end": "1371640"
  },
  {
    "text": "only sign your outputs. So you don't actually specify\nwhere you're sending money from in your signature.",
    "start": "1371640",
    "end": "1376830"
  },
  {
    "text": "You do have to still\nspecify in your transaction because people need\nto know, but you say I'm only going to\nsign off on the outputs.",
    "start": "1376830",
    "end": "1384280"
  },
  {
    "text": "The endorsement of\nmy inputs is implicit because the keys match.",
    "start": "1384280",
    "end": "1390150"
  },
  {
    "text": "So I don't actually\nsign off on which key I'm sending from to\nsomething that's redundant.",
    "start": "1390150",
    "end": "1396737"
  },
  {
    "text": "You know I'm sending\nfrom these inputs because the keys match\nup and the signature's valid for this key.",
    "start": "1396737",
    "end": "1402210"
  },
  {
    "text": "I really like this idea still. I think it's really fun. You can do a lot of\ncool stuff with it. It's also dangerous.",
    "start": "1402210",
    "end": "1408779"
  },
  {
    "text": "It allows signatures\nto be replayed, which is sort of one of\nthe big points of having",
    "start": "1408780",
    "end": "1413880"
  },
  {
    "text": "utxo's because if you\nsend two outputs-- ",
    "start": "1413880",
    "end": "1421590"
  },
  {
    "text": "I have address one. I send two outputs.",
    "start": "1421590",
    "end": "1426620"
  },
  {
    "text": "So I've got output one,\noutput two, and this one",
    "start": "1426620",
    "end": "1432780"
  },
  {
    "text": "has five coins, this\none has three coins, and they're both\nthe same address,",
    "start": "1432780",
    "end": "1438630"
  },
  {
    "text": "both the same public key, and\nthen I want to spend them. And if I use this sort\nof signature scheme where I don't actually sign\nwhich input I'm spending from,",
    "start": "1438630",
    "end": "1446429"
  },
  {
    "text": "it can be used on either. So maybe I'm not\naware of this 5-1 yet, or it just hasn't happened\nyet, or I haven't seen it,",
    "start": "1446430",
    "end": "1453330"
  },
  {
    "text": "and I say, yeah, I'm going\nto make a signature sending three coins over\nhere and then someone",
    "start": "1453330",
    "end": "1458730"
  },
  {
    "text": "can malleate the transaction\nwithout touching the signature, and pointing over\nhere, and the signature",
    "start": "1458730",
    "end": "1465050"
  },
  {
    "text": "wouldn't apply to either. And then this is a really\ngood deal for the miners because now I'm spending five\ncoins and only outputting three",
    "start": "1465050",
    "end": "1472430"
  },
  {
    "text": "and the miners get the\ntwo coins difference. And so that's pretty dangerous. And also, even if they're\nthe same I just say, hey,",
    "start": "1472430",
    "end": "1480750"
  },
  {
    "text": "I'm sending three coins\nto you and then as soon as the receiver\nsees this output,",
    "start": "1480750",
    "end": "1486090"
  },
  {
    "text": "oh, it'll also work here. I'm going to take\nanother three coins. So this is mitigated by\nnot reusing addresses,",
    "start": "1486090",
    "end": "1494970"
  },
  {
    "text": "but people reuse addresses. So it is dangerous.",
    "start": "1494970",
    "end": "1500909"
  },
  {
    "text": "I think in the context of\nmultisig you can reliably say like, OK, we're\nnot reusing addresses because these addresses are the\ncombination of multiple people",
    "start": "1500910",
    "end": "1507963"
  },
  {
    "text": "working together. But it would allow\nreally cool things where you could sort of work\nbackwards, compute a public key",
    "start": "1507963",
    "end": "1514013"
  },
  {
    "text": "that you could prove no one\nknew the private key to, but you could\nstill sign with it. Like really weird crazy stuff.",
    "start": "1514013",
    "end": "1519540"
  },
  {
    "text": "Anyway, people were\nstill talking about it a week or two ago.",
    "start": "1519540",
    "end": "1524690"
  },
  {
    "text": "Like, oh, we could do\nthese cool things with it. But it's dangerous and so\nit's like we're not sure if it's worth it.",
    "start": "1524690",
    "end": "1531519"
  },
  {
    "text": "OK. Any questions about this\ntransaction malleability so far? OK.",
    "start": "1531520",
    "end": "1536900"
  },
  {
    "text": "So any ideas of\nwhat you actually do to fix malleability?",
    "start": "1536900",
    "end": "1542127"
  },
  {
    "text": " Nobody? OK.",
    "start": "1542127",
    "end": "1548800"
  },
  {
    "text": "we'll find out in one minute. Segregated Witness. I don't think it's a good name.",
    "start": "1548800",
    "end": "1556730"
  },
  {
    "start": "1550000",
    "end": "1793000"
  },
  {
    "text": "Separate signatures would be a\nmuch easier to understand name.",
    "start": "1556730",
    "end": "1562850"
  },
  {
    "text": "So Peter Wuille who is\nreally good at bitcoin and makes all these\ncool things, he's not the best at naming things.",
    "start": "1562850",
    "end": "1568919"
  },
  {
    "text": "Makes lots of cool\nstuff, but just makes whatever weird technical name. ",
    "start": "1568920",
    "end": "1574909"
  },
  {
    "text": "So it's a pretty\nstraightforward idea. The idea is when you're\nsigning a transaction you hash",
    "start": "1574910",
    "end": "1582460"
  },
  {
    "text": "a bunch of data design, but you\ndon't include the signatures in the data you're\nhashing to sign them",
    "start": "1582460",
    "end": "1588039"
  },
  {
    "text": "because that wouldn't\nmake any sense. You can't.  Do the same thing when you're\nreferring to transactions",
    "start": "1588040",
    "end": "1594080"
  },
  {
    "text": "themselves as txids. So in the exact same way\nthat when you're signing, you hash the data\nwithout the signatures.",
    "start": "1594080",
    "end": "1600560"
  },
  {
    "text": "When you're pointing\nto a transaction to say I'm spending\nfrom there, also don't include the\nsignature data.",
    "start": "1600560",
    "end": "1606679"
  },
  {
    "text": "Just take the hash of the\ndata without the signatures. ",
    "start": "1606680",
    "end": "1615530"
  },
  {
    "text": "Yeah. You just sort of\nhave this pointer. You've got a pointer\nof previous input",
    "start": "1615530",
    "end": "1620860"
  },
  {
    "text": "and you've got the outputs, but\nthe signatures aren't in there. So the idea is the signature can\nchange and the transaction ID",
    "start": "1620860",
    "end": "1626750"
  },
  {
    "text": "doesn't.  But what about\nbackwards compatibility?",
    "start": "1626750",
    "end": "1632860"
  },
  {
    "text": "So this is a great idea. Why not go for it? But how do you make it backwards\ncompatible so that old software",
    "start": "1632860",
    "end": "1640380"
  },
  {
    "text": "can still work with it? This seems like a\nsoft fork is I'm",
    "start": "1640380",
    "end": "1646880"
  },
  {
    "text": "adding new rules to\nthe system I'm putting further restrictions on.",
    "start": "1646880",
    "end": "1653070"
  },
  {
    "text": "This seems like just a change. It seems like, look,\nI'm now defining",
    "start": "1653070",
    "end": "1658372"
  },
  {
    "text": "something in a different way. I'm removing the\nsignatures from the txid. How do we make this not\nappear to be a hard fork?",
    "start": "1658372",
    "end": "1665220"
  },
  {
    "text": "Hard fork's easy. You just say, look, we're\nchanging the entire system. From now on txids\ndon't have signatures.",
    "start": "1665220",
    "end": "1672350"
  },
  {
    "text": "So any ideas how you do this\nin a backwards compatible way",
    "start": "1672350",
    "end": "1678520"
  },
  {
    "text": "or just give up hard fork? ",
    "start": "1678520",
    "end": "1683834"
  },
  {
    "text": "AUDIENCE: Adding restrictions\nthat screw with [INAUDIBLE]..",
    "start": "1683834",
    "end": "1689520"
  },
  {
    "text": "PROFESSOR: So you can't\nchange old transactions, but having both at the\nsame time is tricky.",
    "start": "1689520",
    "end": "1695899"
  },
  {
    "text": " So the idea is it\nwould have been easier to start off this way.",
    "start": "1695900",
    "end": "1701470"
  },
  {
    "text": "If Satoshi had just started this\nway, it would have went great. He didn't think of it. It wasn't a super\nobvious thing that--",
    "start": "1701470",
    "end": "1707606"
  },
  {
    "text": "so you can do it as a soft fork. The way you do it is\nyou make new outputs which don't require\nany signatures at all",
    "start": "1707607",
    "end": "1714580"
  },
  {
    "text": "and then you just don't\nhave any signatures. This seems kind of silly. Signatures are pretty important,\notherwise any arbitrary person",
    "start": "1714580",
    "end": "1721629"
  },
  {
    "text": "could just take all the money. But you redefine things in a\nway that new people know about and old people don't.",
    "start": "1721630",
    "end": "1728380"
  },
  {
    "text": "So this is actually what a\nsegwit output looks like. The output script is just a\nzero and then a pubkey hash,",
    "start": "1728380",
    "end": "1735300"
  },
  {
    "text": "and then the sig script,\nthe field for a signature is just nothing. You just don't put\na signature there.",
    "start": "1735300",
    "end": "1743030"
  },
  {
    "text": "And then when you're\nrunning the stack you end up with a pubkey hash\non the top of the stack, which",
    "start": "1743030",
    "end": "1748430"
  },
  {
    "text": "is some number and\nthe interpreter looks at a number\nthat's non-zero as true.",
    "start": "1748430",
    "end": "1755480"
  },
  {
    "text": "Like in C or things like that. And the bitcoins move. It's great. Someone was joking that you\ncould potentially make this",
    "start": "1755480",
    "end": "1761990"
  },
  {
    "text": "into a hard fork, because what\nif the pubkey hash was zero,",
    "start": "1761990",
    "end": "1767160"
  },
  {
    "text": "and you found a pubkey that\nhashed to zero and then you signed signed with it and then\nsegwit would accept it but old",
    "start": "1767160",
    "end": "1773410"
  },
  {
    "text": "nodes wouldn't. Actually, that doesn't\nwork, but it's sort of-- Anyway, if you're running\nthe regular bitcoin software,",
    "start": "1773410",
    "end": "1782420"
  },
  {
    "text": "you see this and no signature,\nand you're like yeah, this doesn't need a signature. It's just a hash.",
    "start": "1782420",
    "end": "1788720"
  },
  {
    "text": "I don't know what this is. Fine, the coins move. It evaluates to true.",
    "start": "1788720",
    "end": "1794600"
  },
  {
    "start": "1793000",
    "end": "1858000"
  },
  {
    "text": "But the new version\nof the software sort of adds a restriction\nto this kind of output.",
    "start": "1794600",
    "end": "1799777"
  },
  {
    "text": "It says, look. If you see this,\nthis is a template. This doesn't actually mean\nput a zero on the stack",
    "start": "1799777",
    "end": "1805850"
  },
  {
    "text": "and put a pubkey\nhash on the stack. It means something else. Now, it means this is a pubkey\nhash and look for a signature.",
    "start": "1805850",
    "end": "1813919"
  },
  {
    "text": "But look for a signature\nin a different place. Don't actually put\nit in the place you're supposed\nto put signatures,",
    "start": "1813920",
    "end": "1819500"
  },
  {
    "text": "put it in a new place. And don't tell the old\nsoftware about this place.",
    "start": "1819500",
    "end": "1824940"
  },
  {
    "text": "We add a new field to\nthe transaction inputs.",
    "start": "1824940",
    "end": "1830000"
  },
  {
    "text": "It's sort of in the inputs,\nbut they put it at the end. It's kind of weird.",
    "start": "1830000",
    "end": "1835110"
  },
  {
    "text": "Logically, it's in the input. It's the same, but physically\nit's not, which is silly.",
    "start": "1835110",
    "end": "1842120"
  },
  {
    "text": "I don't like that aspect of it. But the idea is there's this\nnew field in the inputs called the witness field,\nand in cryptography,",
    "start": "1842120",
    "end": "1849270"
  },
  {
    "text": "witness sort of means\nsignature in this case anyway. It's a little bit more general.",
    "start": "1849270",
    "end": "1856299"
  },
  {
    "text": "But the old software\nnever sees it. So the idea for here's the\nold transaction format. You've got your tx id and\nindex, 36 bytes sort of pointer",
    "start": "1856300",
    "end": "1864790"
  },
  {
    "start": "1858000",
    "end": "1909000"
  },
  {
    "text": "to what you're\nspending, and then a signature which is 100 bytes,\nand then this stays the same.",
    "start": "1864790",
    "end": "1871059"
  },
  {
    "text": "And the new tx format. The idea is, yeah,\nthe signatures field is still there. You just leave it empty.",
    "start": "1871060",
    "end": "1876370"
  },
  {
    "text": "So you're not putting\nany signature. It doesn't look like you\nneed to put a signature to the old software.",
    "start": "1876370",
    "end": "1881680"
  },
  {
    "text": "And then you have\nthis third thing, which is witness, which is the\nsame as signature basically.",
    "start": "1881680",
    "end": "1888130"
  },
  {
    "text": "Slightly different format. And technically, they\nput them all together and put it at the end,\nwhich is kind of annoying.",
    "start": "1888130",
    "end": "1893802"
  },
  {
    "text": "But anyway, logically\nthis is how they do it. They make a new version\nof the transaction format.",
    "start": "1893802",
    "end": "1899350"
  },
  {
    "text": "So the old version looks\nlike empty signatures. The new version\nlooks like here's",
    "start": "1899350",
    "end": "1905050"
  },
  {
    "text": "this useless empty\nsignature field, and here's where the\nreal signatures are. ",
    "start": "1905050",
    "end": "1911310"
  },
  {
    "start": "1909000",
    "end": "2051000"
  },
  {
    "text": "And you omit this\nto the old nodes. So when people ask for\nwitness transactions,",
    "start": "1911310",
    "end": "1918710"
  },
  {
    "text": "when people know\nabout this new system, yeah, you give it to them. So they say hey, yeah, I'm\nhip to this new segwit thing.",
    "start": "1918710",
    "end": "1926450"
  },
  {
    "text": "Give me a segwit transaction. And you're like, OK, here's\nthe witnesses at the end. But when they don't\nseem to know about this",
    "start": "1926450",
    "end": "1932833"
  },
  {
    "text": "and they're running\nolder software and they say, hey, just\ngive me the transaction, you give it to them\nwithout the witness at all.",
    "start": "1932833",
    "end": "1938400"
  },
  {
    "text": "It still looks valid to-- either one looks valid. However, the new people, they\nknow that if you see this,",
    "start": "1938400",
    "end": "1948380"
  },
  {
    "text": "it does not mean push a\nzero, push up pubkey has. There is a new rule that\nno, this is a template. This is segwit.",
    "start": "1948380",
    "end": "1954110"
  },
  {
    "text": "I need a signature, and I need\nit to be in the witness field. So if a new node gets a\ntransaction without a witness",
    "start": "1954110",
    "end": "1964250"
  },
  {
    "text": "that they know needs a witness,\nthey will declare it invalid. But the old nodes won't\nbe able to distinguish.",
    "start": "1964250",
    "end": "1969710"
  },
  {
    "text": "They'll say, well, it looks like\nno signature is needed here. OK. So you're sort of\ntricking the old software",
    "start": "1969710",
    "end": "1976447"
  },
  {
    "text": "into accepting things that\nthey shouldn't actually accept in some cases. There may not be a\nvalid signature that",
    "start": "1976447",
    "end": "1982250"
  },
  {
    "text": "goes into the\nsegwit transaction, but old software will\nstill think it's OK.",
    "start": "1982250",
    "end": "1987490"
  },
  {
    "text": "So this is how you make\nit into a softfork. It's kind of ugly. But, yeah. Do you have a question?",
    "start": "1987490",
    "end": "1992920"
  },
  {
    "text": "AUDIENCE: Yeah. Is this still implicitly? So when the signature\nis zero, [INAUDIBLE].. ",
    "start": "1992920",
    "end": "2000650"
  },
  {
    "text": "PROFESSOR: No, because it's\nbased on the output script.",
    "start": "2000650",
    "end": "2008150"
  },
  {
    "text": "You could make you a\ndifferent output script that would have a signature that\nno signature requirement,",
    "start": "2008150",
    "end": "2014570"
  },
  {
    "text": "and it would still work\neven with this new system. So it's just based on-- we changed the definition\nof an output script.",
    "start": "2014570",
    "end": "2022750"
  },
  {
    "text": "So have this sort of template. You can still do weird-- like you could put\nwithout a zero in front.",
    "start": "2022750",
    "end": "2029750"
  },
  {
    "text": "You could put just\na pubkey hash, and that's not\ndefined in segwit. That's not defined anywhere. It would just be, OK,\nyeah, it evaluates",
    "start": "2029750",
    "end": "2037250"
  },
  {
    "text": "to true without a signature. Anyone can spend it. And you could do that--",
    "start": "2037250",
    "end": "2043460"
  },
  {
    "text": "that would have to be a\nnon-segwit transaction. The only way to use\na segwit transaction is to have the special\nformat for the output script.",
    "start": "2043460",
    "end": "2052500"
  },
  {
    "start": "2051000",
    "end": "2267000"
  },
  {
    "text": "Any other questions\nabout network stuff? Yeah, and this\nsolves malleability",
    "start": "2052500",
    "end": "2060480"
  },
  {
    "text": "in a pretty good way. For the old software,\nthe old nodes, well, they can't\nchange the signature",
    "start": "2060480",
    "end": "2065699"
  },
  {
    "text": "because there isn't one. There's nothing to malleate. And from the new\nnode's perspective,",
    "start": "2065699",
    "end": "2071070"
  },
  {
    "text": "yes, the signature can\nchange, but that doesn't affect the transaction ID. Both old and new\nnodes still agree",
    "start": "2071070",
    "end": "2078090"
  },
  {
    "text": "on the exact same\ntransaction ID. The transaction ID does not\ninclude the witness field.",
    "start": "2078090",
    "end": "2086320"
  },
  {
    "text": "So when you're\ncalculating a transaction, you include all\nthis for backwards. And if there's this\nactual signature there,",
    "start": "2086320",
    "end": "2092052"
  },
  {
    "text": "that gets into that the txid. But if you're using\nempty signature and only using witness, then\nit doesn't get into the txid",
    "start": "2092052",
    "end": "2098820"
  },
  {
    "text": "at all. So both old and\nnew software agree, and that's important, because\nif they didn't the merkle routes",
    "start": "2098820",
    "end": "2106530"
  },
  {
    "text": "would look wrong. You take all the txids, put\nthem into a merkle route, put that in the header. And that's really important\nthat everyone agrees on that.",
    "start": "2106530",
    "end": "2113790"
  },
  {
    "text": "So they do work\ntogether, So that's cool. ",
    "start": "2113790",
    "end": "2119620"
  },
  {
    "text": "So this is kind of interesting. You've got two\ndifferent old version,",
    "start": "2119620",
    "end": "2124750"
  },
  {
    "text": "new version operating at the\nsame time on the network. And they agree on\na lot of stuff,",
    "start": "2124750",
    "end": "2130180"
  },
  {
    "text": "but they also sort of\ndisagree on some things. So they agree on outputs\nof the transactions,",
    "start": "2130180",
    "end": "2135970"
  },
  {
    "text": "and they agree on\nwhich inputs there are. But they have a\nslightly different view of what these inputs are.",
    "start": "2135970",
    "end": "2141152"
  },
  {
    "text": "Some of them think,\nno signatures here. Some of them think, yeah,\nthere's a signature here. That's weird.",
    "start": "2141152",
    "end": "2146170"
  },
  {
    "text": "They don't agree on\nhow things got spent. What are some other things that\nthese two different classes of nodes would not agree on?",
    "start": "2146170",
    "end": "2152724"
  },
  {
    "text": " Any ideas? So you understand how they\nsee different transactions.",
    "start": "2152724",
    "end": "2160310"
  },
  {
    "text": "What are some other\naspects that may be sort of interesting\nfor this consensus system",
    "start": "2160310",
    "end": "2165470"
  },
  {
    "text": "that we have different views on? I forget what I put. I put two things.",
    "start": "2165470",
    "end": "2171660"
  },
  {
    "text": "Any? Hint. Biggest argument\nsince 2010 in bitcoin.",
    "start": "2171660",
    "end": "2180360"
  },
  {
    "text": "What do these two different\nclasses of nodes not agree on? ",
    "start": "2180360",
    "end": "2186603"
  },
  {
    "text": "Yeah. AUDIENCE: Size? PROFESSOR: Well, the\ntransaction size. Yeah. So they both see two\ndifferent transactions.",
    "start": "2186603",
    "end": "2194640"
  },
  {
    "text": "One of them sees it with\nthese signatures, one of them sees it without. They don't agree on how\nbig the transaction is.",
    "start": "2194640",
    "end": "2200160"
  },
  {
    "text": "They agree on the txid. They agree on where the money is\ngoing, where it's coming from, but they have completely\ndifferent views",
    "start": "2200160",
    "end": "2206250"
  },
  {
    "text": "of how big this transaction is\nin terms of number of bytes. So this is really interesting,\nFor many, many years",
    "start": "2206250",
    "end": "2215780"
  },
  {
    "text": "since 2010, everyone's\nbeen arguing. And one of the big\naspects of, oh, if we want to increase the block\nsize, that's a hard fork.",
    "start": "2215780",
    "end": "2222980"
  },
  {
    "text": "Everyone up to now,\nwe're enforcing. The block size must be\none million bytes or less.",
    "start": "2222980",
    "end": "2229692"
  },
  {
    "text": "There's no way\naround that, right? You can't just increase it. We've got this rule. You're breaking that rule.",
    "start": "2229693",
    "end": "2235050"
  },
  {
    "text": "This is a sneaky way to break\nthe rule but still not tell people you're breaking the rule.",
    "start": "2235050",
    "end": "2241170"
  },
  {
    "text": "Say, OK, I'm enforcing a rule\nthat there's one million bytes. As far as I'm concerned, there\nare less than one million bytes",
    "start": "2241170",
    "end": "2247670"
  },
  {
    "text": "in this set of transactions. The new nodes know, yeah,\nthere's more than one million. There's like two\nmillion bytes in here.",
    "start": "2247670",
    "end": "2254270"
  },
  {
    "text": "We just didn't tell\nthe old software about all these extra bytes.",
    "start": "2254270",
    "end": "2259619"
  },
  {
    "text": "So this is kind of an\ninteresting thing you can do. So you can increase\nthe transaction size",
    "start": "2259620",
    "end": "2266030"
  },
  {
    "text": "without telling the old nodes. So yeah, the old nodes don't\nsee the hundred something bytes",
    "start": "2266030",
    "end": "2272349"
  },
  {
    "text": "with the pubkey signature. So they see transactions\nthat are much smaller. Around half the size--",
    "start": "2272350",
    "end": "2278380"
  },
  {
    "text": "depends, but half the size ish. So those bytes, they\nwon't count those bites",
    "start": "2278380",
    "end": "2284260"
  },
  {
    "text": "towards the one million\nbyte block size limit. So this ends up being\na soft fork that allows",
    "start": "2284260",
    "end": "2291309"
  },
  {
    "text": "you to increase the block size. In a kind of sneaky way, right? The old nodes don't think\nthe block size is increased.",
    "start": "2291310",
    "end": "2297190"
  },
  {
    "text": "They think it's less than a\nmegabyte, and they also think, this is weird. I haven't seen any\nsignatures for a while.",
    "start": "2297190",
    "end": "2304210"
  },
  {
    "text": "| seems to be using these\ntransactions that don't require signatures, and\nsomehow everyone's getting along and not\nstealing each other's money",
    "start": "2304210",
    "end": "2311529"
  },
  {
    "text": "despite the lack of a\nneed for signatures. But these are not\nintelligent people.",
    "start": "2311530",
    "end": "2318430"
  },
  {
    "text": "These are software programs,\nand it'll just run. And it'll, OK, yup, yup, yup.",
    "start": "2318430",
    "end": "2323830"
  },
  {
    "text": "This evaluates to true. So it's kind of cool. Block size entry softfork.",
    "start": "2323830",
    "end": "2329750"
  },
  {
    "text": "However, you Institute\na new rule with segwit. You don't want to just\nsay for the new rules,",
    "start": "2329750",
    "end": "2338470"
  },
  {
    "text": "we don't count signatures\ntowards the one megabyte limit, right? You could do that, but then\npeople might spam signatures.",
    "start": "2338470",
    "end": "2345310"
  },
  {
    "text": "Let me make a giant signature\nor some kind of like 50 out of a million pubkeys\nthing and spam the network,",
    "start": "2345310",
    "end": "2352870"
  },
  {
    "text": "and then it will still be under\na megabyte of non witness data. So yes, so now I've got\ntwo classes of data.",
    "start": "2352870",
    "end": "2359020"
  },
  {
    "text": "You've got all the data\nthat everyone sees, and all the witness data\nthat only the new nodes see.",
    "start": "2359020",
    "end": "2365050"
  },
  {
    "text": "So what they did is they said,\nOK, the witness data still counts towards that limit.",
    "start": "2365050",
    "end": "2370460"
  },
  {
    "text": "But each witness byte counts\nas a 1/4 of a regular byte. OK, kind of weird, but yeah.",
    "start": "2370460",
    "end": "2377290"
  },
  {
    "text": "So in practice in the software,\nwhat they do is they say, OK. We multiply the non\nwitness bytes by four.",
    "start": "2377290",
    "end": "2385240"
  },
  {
    "text": "So every byte in the outputs\nand every byte in the txid input things counts as\nlike four bytes.",
    "start": "2385240",
    "end": "2391090"
  },
  {
    "text": "And then, the witnesses just\ncount as one regular byte. And then we now say,\nOK, the new block size is four million bytes.",
    "start": "2391090",
    "end": "2398000"
  },
  {
    "text": "But four million weight units,\nbecause they're sort of, OK, we've got different\nweights for things.",
    "start": "2398000",
    "end": "2404780"
  },
  {
    "text": "This actually makes sense,\nbecause the utxo set",
    "start": "2404780",
    "end": "2409920"
  },
  {
    "text": "is what you really\nwant to minimize, that database we keep\nupdating every block. And the signatures don't\ngo into the utxo set.",
    "start": "2409920",
    "end": "2418100"
  },
  {
    "text": "So the signatures\nyou don't actually have to store on a fast,\nlow latency storage.",
    "start": "2418100",
    "end": "2423600"
  },
  {
    "text": "So in a very real\nsense, the signatures are sort of OK to make bigger. They don't really cost as\nmuch to the network to store.",
    "start": "2423600",
    "end": "2431690"
  },
  {
    "text": "So having this\ndiscount where you say, OK, the signatures, you can\nhave a bunch of them that",
    "start": "2431690",
    "end": "2436752"
  },
  {
    "text": "doesn't really count as much. But the outputs we\nreally need to minimize. So this one fourth is\nsomewhat arbitrary,",
    "start": "2436752",
    "end": "2444440"
  },
  {
    "text": "but there are some calculations\nand a little handwaving. But it's like yeah, this\nis about what it should be to try to balance things.",
    "start": "2444440",
    "end": "2452520"
  },
  {
    "text": "So the end result. If\nyou have this discount, you can put about 80% more\ntransactions in a block.",
    "start": "2452520",
    "end": "2458510"
  },
  {
    "text": "You get about 1.8 megs. It depends, right? It depends how big\nyour signatures are. ",
    "start": "2458510",
    "end": "2465750"
  },
  {
    "text": "So the maximum would be\nyou have a block that has one transaction with\njust a giant signature that's",
    "start": "2465750",
    "end": "2473490"
  },
  {
    "text": "like almost four megabytes. And the old software\nwould see this block as being really tiny,\nlike 100 something bytes.",
    "start": "2473490",
    "end": "2479592"
  },
  {
    "text": "And the new software\nwould see, oh yeah, this block is almost\nfour megabytes. But that's sort of\nthe extreme case.",
    "start": "2479593",
    "end": "2485730"
  },
  {
    "text": "I remember generating some\nlike 3.7 meg transaction blocks and testing that awhile\nago just to test it out.",
    "start": "2485730",
    "end": "2492809"
  },
  {
    "text": "It works, but in practice\nyou're seeing about this. In practice today, as segwit\nhas been seeing more adoption,",
    "start": "2492810",
    "end": "2499859"
  },
  {
    "text": "you see like 1.3\nmegabyte blocks. Not everyone's using it. The idea is it's\nbackwards compatible,",
    "start": "2499860",
    "end": "2505740"
  },
  {
    "text": "but you can still use\nyour old software. But it seems like more and\nmore software is using this.",
    "start": "2505740",
    "end": "2511020"
  },
  {
    "text": "You get a discount on your\nfees because your transaction seems to be smaller. You can fit more\nof them in a block.",
    "start": "2511020",
    "end": "2517253"
  },
  {
    "text": "So that's kind of\ncool, and that's sort of an incentive to use it. ",
    "start": "2517253",
    "end": "2522410"
  },
  {
    "start": "2520000",
    "end": "2617000"
  },
  {
    "text": "OK, other thing you can do. You can commit to signatures. This is a little tricky.",
    "start": "2522410",
    "end": "2529570"
  },
  {
    "text": "If the signatures aren't\nin the transaction ID, then they aren't in the\nmerkle route, right?",
    "start": "2529570",
    "end": "2535329"
  },
  {
    "text": "So there's nothing really\ncommitting the signatures into the block chain. And this would actually work.",
    "start": "2535330",
    "end": "2541486"
  },
  {
    "text": "You could say, no,\nI have a signature. I'll give it to you,\nbut it could change. It could be maleated, so\nit could be weird, though.",
    "start": "2541487",
    "end": "2549099"
  },
  {
    "text": "You could agree on a utxo\nset, but you could disagree on how exactly you got there. So one example\nwould be multisig,",
    "start": "2549100",
    "end": "2557230"
  },
  {
    "text": "where there's two of three\nmultisig, Alice, Bob and Carol. Two of them need to sign. And then on my computer, it\nsays that Alice and Bob signed,",
    "start": "2557230",
    "end": "2564390"
  },
  {
    "text": "and on your computer, it says\nthat Alison and Carol signed. That's weird, right?",
    "start": "2564390",
    "end": "2569740"
  },
  {
    "text": "For accountability. If we want to know who\nexactly endorsed these things, we might disagree on it.",
    "start": "2569740",
    "end": "2575550"
  },
  {
    "text": "There would be no canonical\nhere's the blockchain, here's who signed. The transactions\nthemselves would all still",
    "start": "2575550",
    "end": "2581080"
  },
  {
    "text": "be the same but\nnot the signatures. So that's kind of weird,\nbut it also seems like well,",
    "start": "2581080",
    "end": "2586480"
  },
  {
    "text": "maybe that's part of the price\nyou pay for fixing malleability in this way. If we're not putting the\nsignatures into the thing that",
    "start": "2586480",
    "end": "2594940"
  },
  {
    "text": "gets committed to in the\nblock chain, then yeah, signatures can change.",
    "start": "2594940",
    "end": "2600170"
  },
  {
    "text": "So anyway around this? It sort of seems like\nyeah, that's the trade off.",
    "start": "2600170",
    "end": "2608060"
  },
  {
    "text": "Sneaky way around it? Sneaky fun? No? You know.",
    "start": "2608060",
    "end": "2613420"
  },
  {
    "text": "OK, so what you do actually,\nyou commit the signatures",
    "start": "2613420",
    "end": "2621178"
  },
  {
    "start": "2617000",
    "end": "2927000"
  },
  {
    "text": "but in a weird way. OK, so here's the regular\nold merkle tree, right? This is the merkle route\nthat you put in the header.",
    "start": "2621178",
    "end": "2627570"
  },
  {
    "text": "Here's all the transaction\nIDs, and so you make these intermediate hashes.",
    "start": "2627570",
    "end": "2633112"
  },
  {
    "text": "This is the hash of these two\nthings concatenated together, this is the hash of these two\nthings concatenated together.",
    "start": "2633112",
    "end": "2640010"
  },
  {
    "text": "Now, if the txids\ndon't have signatures, there's no commitment to the\nsignatures in the top hash.",
    "start": "2640010",
    "end": "2646000"
  },
  {
    "text": "What you do is this. You say, OK. I'm going to make\nthese new witness txids, hashes of transactions\nthat do include the signatures.",
    "start": "2646000",
    "end": "2656195"
  },
  {
    "text": "In practice, you could just make\na hash of just the signatures. That would also work. They just take the whole thing.",
    "start": "2656195",
    "end": "2662960"
  },
  {
    "text": "And now I've got\nthis other reflected merkle tree kind of\nthing, where OK, I",
    "start": "2662960",
    "end": "2669170"
  },
  {
    "text": "take the hash of these two\nwitness transaction IDs, put it here, and this\none just drops down.",
    "start": "2669170",
    "end": "2675770"
  },
  {
    "text": "It's another merkle\ntree, and then you get a root for all those\nthings called the witness root.",
    "start": "2675770",
    "end": "2681500"
  },
  {
    "text": "And then what you do is\nyou put the witness root in the coinbase transaction. Put in an opp return.",
    "start": "2681500",
    "end": "2687710"
  },
  {
    "text": "And the idea is the\ncoinbase transaction doesn't have any\nsignatures anyway, right? So you can put it in there.",
    "start": "2687710",
    "end": "2695720"
  },
  {
    "text": "You don't need to\ninclude the transaction zero in this witness tree.",
    "start": "2695720",
    "end": "2701415"
  },
  {
    "text": "Wait, they do though, right? But maybe this is slightly\ninaccurate in that I think",
    "start": "2701415",
    "end": "2709220"
  },
  {
    "text": "they actually do\nmake a witness txid for the coinbase transaction,\nbut they define it",
    "start": "2709220",
    "end": "2714470"
  },
  {
    "text": "as being zero or something. I think-- I don't remember.",
    "start": "2714470",
    "end": "2720035"
  },
  {
    "text": "So it's weird, right? But you could do that. They define a zero, or they\nlet you pick anything you want.",
    "start": "2720035",
    "end": "2726500"
  },
  {
    "text": "I would have to\nlook at the code. But anyway, the basic\nidea is for these anyway,",
    "start": "2726500",
    "end": "2732099"
  },
  {
    "text": "you take the hash of the whole\nthing including the signatures, put it in the witness\nroot, put the witness root",
    "start": "2732100",
    "end": "2737260"
  },
  {
    "text": "in the coinbase transaction, and\nthe coinbase this transaction gets in to the merkle root.",
    "start": "2737260",
    "end": "2742420"
  },
  {
    "text": "So you are committing\nto all the signatures but on the block level,\nnot the transaction level.",
    "start": "2742420",
    "end": "2749380"
  },
  {
    "text": "So in the case where I\nthink Alice and Bob signed. Oh, I think Alice\nand Carol signed.",
    "start": "2749380",
    "end": "2756010"
  },
  {
    "text": "You can have those two\ntransactions floating around on the network, and\nthey have the same txid.",
    "start": "2756010",
    "end": "2762385"
  },
  {
    "text": "And so who knows which\none's getting into a block? They look almost the same. Some of the software won't\nbe able to pick between them.",
    "start": "2762385",
    "end": "2769490"
  },
  {
    "text": "However, once it gets\ninto a block, one of them will be committed to. It's like, oh, ended up\nbeing Alice and Carol.",
    "start": "2769490",
    "end": "2777710"
  },
  {
    "text": "Those two signatures actually\ngot into the blockchain. However, you could\nprove, hey, no I",
    "start": "2777710",
    "end": "2786470"
  },
  {
    "text": "had this Alice Bob\nsignature, but then it never got into the\nblockchain, and maybe you made it after the fact.",
    "start": "2786470",
    "end": "2792030"
  },
  {
    "text": "It never gets committed to. Yeah. AUDIENCE: Also, a\nbunch of pool software just doesn't always do this.  PROFESSOR: A bunch of pool\nsoftware doesn't do this?",
    "start": "2792030",
    "end": "2798597"
  },
  {
    "text": "What you mean? AUDIENCE: It's\nthe responsibility of the pool software to\nmake this construction,",
    "start": "2798597",
    "end": "2803738"
  },
  {
    "text": "but [INAUDIBLE] PROFESSOR: Have it\nimplemented as in they just don't support segwit?",
    "start": "2803738",
    "end": "2809465"
  },
  {
    "text": "AUDIENCE: No, so they\ndo the first part, but [INAUDIBLE] segwit support.",
    "start": "2809465",
    "end": "2817510"
  },
  {
    "text": "PROFESSOR: OK, but wouldn't\nthat just not work? How-- AUDIENCE: It works, because-- [INAUDIBLE]",
    "start": "2817510",
    "end": "2822888"
  },
  {
    "text": "PROFESSOR: But to the new\nsoftware, if you don't have-- ",
    "start": "2822888",
    "end": "2837829"
  },
  {
    "text": "so segwit is the\nsoftware, right? You say, OK, we define\nthese new transaction types. We define this template where\nif you have a zero and then",
    "start": "2837830",
    "end": "2845970"
  },
  {
    "text": "this pubkey hash. It also says, I require\nthe coinbase transaction",
    "start": "2845970",
    "end": "2854859"
  },
  {
    "text": "to have this output that\nsays, op return aa9c whatever this little\nfour random bytes,",
    "start": "2854860",
    "end": "2862900"
  },
  {
    "text": "and then I'd require it to\nhave the witness root in here. AUDIENCE: I'm guessing\nthey just don't include segwit transactions?",
    "start": "2862900",
    "end": "2869161"
  },
  {
    "text": "PROFESSOR: So I've\nseen that a lot. Yeah, so a lot of-- AUDIENCE: [INAUDIBLE] PROFESSOR: Yeah, a\nlot of the software says, I'm not going to do this.",
    "start": "2869162",
    "end": "2876807"
  },
  {
    "text": "So the other thing that's nice-- segwit transactions to old\nsoftware look non-standard. So I mentioned before that\nthere's standardness rules",
    "start": "2876807",
    "end": "2883990"
  },
  {
    "text": "where, this looks weird. I'm not going to mine it. I'm not going to relay it to my\npeers, but if I it in a block,",
    "start": "2883990",
    "end": "2889900"
  },
  {
    "text": "well, OK, fine. So segwit transactions\nlook very non-standard. It looks like\nthere's no signature.",
    "start": "2889900",
    "end": "2896200"
  },
  {
    "text": "That's weird. There's this zero. What's going on? So yeah, you can you\ncan still run a miner",
    "start": "2896200",
    "end": "2903670"
  },
  {
    "text": "and just not even\nknow about segwit. It's a little\ndangerous, because you might see a block that\nis segwit invalid,",
    "start": "2903670",
    "end": "2912360"
  },
  {
    "text": "but you wouldn't\nknow it and so you might try to mine on top of it. So there are some\nrisks, but in general if most people are\ndoing the right thing,",
    "start": "2912360",
    "end": "2918990"
  },
  {
    "text": "you could still mine without\nknowing about this stuff. So any questions about\ncommitting to the signatures?",
    "start": "2918990",
    "end": "2927089"
  },
  {
    "start": "2927000",
    "end": "3145000"
  },
  {
    "text": "What else? Oh yeah, so you've\ngot this upgrade path. That's kind of cool.",
    "start": "2927090",
    "end": "2932470"
  },
  {
    "text": "So it defined zero\npubkey hash as hey, this is now pay to\npubkey hash, right?",
    "start": "2932470",
    "end": "2941220"
  },
  {
    "text": "Interpret this weird\ntemplate as the regular hey, verify this signature.",
    "start": "2941220",
    "end": "2946650"
  },
  {
    "text": "It also, when segwit\nsoftfork happened, redefined a whole bunch of\nother templates like this.",
    "start": "2946650",
    "end": "2953640"
  },
  {
    "text": "So one and then some data,\nor two and then some data. Just put a number, and\nthen put a bunch of data.",
    "start": "2953640",
    "end": "2959370"
  },
  {
    "text": "All of these are defined\nas future upgrades. So if you see a three block of\ndata, you now say, yeah, OK.",
    "start": "2959370",
    "end": "2969400"
  },
  {
    "text": "I know that's segwit\nversion three. My software will maybe pop\nup something saying hey, people are using\nsegwit version three.",
    "start": "2969400",
    "end": "2975220"
  },
  {
    "text": "You're only aware of\nsegwit version zero. But you'll consider\nit non-standard. You won't relay it.",
    "start": "2975220",
    "end": "2981220"
  },
  {
    "text": "But if it's in a\nblock, yeah, sure. And you don't require\nanything about the signature. You'll just say, yeah,\nwhatever weird witness data",
    "start": "2981220",
    "end": "2988180"
  },
  {
    "text": "you provide for these\noutputs, I don't know how to interpret them. I'm just going to let\nit all go through.",
    "start": "2988180",
    "end": "2994269"
  },
  {
    "text": "What that means is-- there's no witness needed. If a witness is\nprovided, you just ignore it and you think\neverything's fine.",
    "start": "2994270",
    "end": "3001758"
  },
  {
    "text": "This allows easier upgrades.  You have 16 new\nversions to upgrade to.",
    "start": "3001758",
    "end": "3007670"
  },
  {
    "text": " Yeah, you don't require any\nspecific things about this,",
    "start": "3007670",
    "end": "3013223"
  },
  {
    "text": "so you can make new scripts, you\ncan make a completely different script interpreter. You could say, OK,\nwe're going to port EVM",
    "start": "3013223",
    "end": "3018470"
  },
  {
    "text": "to bitcoin and disable\nsome of the op codes that don't apply, and\nhave that kind of thing.",
    "start": "3018470",
    "end": "3024410"
  },
  {
    "text": "Have new smart contracts. So it's kind of a fun,\nlike yeah, we will-- and it's a nice,\neasy upgrade path.",
    "start": "3024410",
    "end": "3030502"
  },
  {
    "text": "You could have multiple\ndifferent things, things like that. The code will be easier.",
    "start": "3030502",
    "end": "3036500"
  },
  {
    "text": "Don't do it today. You could construct\nan output that's a two byte and then your\npubkey and send it out there.",
    "start": "3036500",
    "end": "3044060"
  },
  {
    "text": "It will be probably stealing by\nminers, because everyone else's node will say, yeah, I don't\nknow how to interpret this yet.",
    "start": "3044060",
    "end": "3051110"
  },
  {
    "text": "There's no rules about this yet. OK, let me show you some\nsegwit stuff I looked for.",
    "start": "3051110",
    "end": "3061990"
  },
  {
    "text": " OK, so there's\nactually nested segwit.",
    "start": "3061990",
    "end": "3072657"
  },
  {
    "text": "There's an an ugly-- ",
    "start": "3072657",
    "end": "3079369"
  },
  {
    "text": "I didn't like it, but-- this is like somewhat designed\nby committee E. There's also--",
    "start": "3079370",
    "end": "3085982"
  },
  {
    "text": "this is 2016, right? AUDIENCE: People lose so much\nmoney on segwit two years ago.",
    "start": "3085982",
    "end": "3091330"
  },
  {
    "text": "PROFESSOR: So the other\nthing I would say with this, I was like, OK. You've got this witness txid.",
    "start": "3091330",
    "end": "3096550"
  },
  {
    "text": "And I remember people\nworking on segwit and I said, hey, why don't\nyou make the transaction IDs",
    "start": "3096550",
    "end": "3102460"
  },
  {
    "text": "a merkle tree of the\ninputs and outputs instead of just the hash of\neverything all together?",
    "start": "3102460",
    "end": "3109040"
  },
  {
    "text": "Then, if you had a\nreally big transaction, you could prove that an input\nhad been spent without sending the whole transaction over.",
    "start": "3109040",
    "end": "3115112"
  },
  {
    "text": "And I thought that\nwas a cool idea. And then when I talked to\npeople, they're like yeah, Peter Todd already said\nthat like three weeks ago.",
    "start": "3115112",
    "end": "3121280"
  },
  {
    "text": "And whatever, we're\nnot going to do it. It's too late. We already coded stuff. Oh well.",
    "start": "3121280",
    "end": "3128420"
  },
  {
    "text": "And that's the fundamental\naspect of segwit. You can't really upgrade that\nin the new script versions,",
    "start": "3128420",
    "end": "3133850"
  },
  {
    "text": "so whatever. There's also still a hard rule\non transactions themselves",
    "start": "3133850",
    "end": "3140520"
  },
  {
    "text": "being less than a\nmegabyte, I think. So it's not a huge deal,\nbut it would have been cool. Another thing is\nthere's actually a way--",
    "start": "3140520",
    "end": "3149220"
  },
  {
    "start": "3145000",
    "end": "3599000"
  },
  {
    "text": "so there's no address\ndefined for this, right? Address is mapped to output\nscripts in all the software.",
    "start": "3149220",
    "end": "3156089"
  },
  {
    "text": "And so when you\nsay, OK, I'm sending into 1aeecc or\nwhatever, it knows how to interpret that address,\nbuild the 20 byte pubkey hash",
    "start": "3156090",
    "end": "3163680"
  },
  {
    "text": "script, and send to it. And vise versa, right? So from the address, you\ncan get this output script,",
    "start": "3163680",
    "end": "3168697"
  },
  {
    "text": "and from the output script\nyou can get an address. So when an old\nsoftware sees this, it's just like,\nthere's no address.",
    "start": "3168697",
    "end": "3174780"
  },
  {
    "text": "I don't even know what that is. I've never seen that. And so people worried that\noh, it's going to be weird.",
    "start": "3174780",
    "end": "3181510"
  },
  {
    "text": "People are going to have to\nupgrade to even send to people using segwit. So it's backwards compatible,\nbut if you want to say, hey,",
    "start": "3181510",
    "end": "3187890"
  },
  {
    "text": "send me some money at the segwit\naddress and then they can't. And so you say, OK, fine.",
    "start": "3187890",
    "end": "3192930"
  },
  {
    "text": "Send me the money with\na regular address, and then we still have\nthis malleability problem. And then I have a wallet\nthat supports both,",
    "start": "3192930",
    "end": "3198870"
  },
  {
    "text": "and I can move money\nto my own addresses, and it's kind of ugly. So they made this nested address\nthing, which I don't like,",
    "start": "3198870",
    "end": "3205560"
  },
  {
    "text": "because then it\nactually has both. So you've got a\nsignature and a witness.",
    "start": "3205560",
    "end": "3211610"
  },
  {
    "text": " And the signature is\nnot a real signature. It's just pointing\nto the witness.",
    "start": "3211610",
    "end": "3217507"
  },
  {
    "text": "It's really ugly. There's a bunch of weird\nstuff in the segwit code that I'm not super into. I don't have to use\nit though, right?",
    "start": "3217507",
    "end": "3223290"
  },
  {
    "text": "That's the beauty of these\npermission-less innovation kind of systems. Like ew, I don't like that code. OK, I'm not supporting it.",
    "start": "3223290",
    "end": "3229401"
  },
  {
    "text": " OK, so here's one that's nested.",
    "start": "3229402",
    "end": "3241365"
  },
  {
    "text": " So I was just randomly\nlooking through a block.",
    "start": "3241365",
    "end": "3252280"
  },
  {
    "text": "Here's one, and you\ncan see it's like, OK. The outputs are probably\nalso nested segwit,",
    "start": "3252280",
    "end": "3258480"
  },
  {
    "text": "and the input has got both a\nscript sig and a tx witness,",
    "start": "3258480",
    "end": "3264070"
  },
  {
    "text": "right? A tx input witness. A pure one is this one f7.",
    "start": "3264070",
    "end": "3271650"
  },
  {
    "start": "3271650",
    "end": "3277109"
  },
  {
    "text": "OK, so you can see-- oh wait, am I not running--\nwhat version am I running?",
    "start": "3277110",
    "end": "3282840"
  },
  {
    "text": "I think I'm running\nto 15-1 still. So I'm not seeing the address. There's a new address format\ncalled beck 32, bech 32,",
    "start": "3282840",
    "end": "3291550"
  },
  {
    "text": "which will turn-- so it's zero and\nthen a script hash.",
    "start": "3291550",
    "end": "3300369"
  },
  {
    "text": "Zero and then a pubkey hash. It says, witness,\nversion zero, key hash.",
    "start": "3300370",
    "end": "3306010"
  },
  {
    "text": "There's also an address\nassociated with these. I think this version of\nbitcoin CLI does not show it,",
    "start": "3306010",
    "end": "3312849"
  },
  {
    "text": "but the new version does. So I think if you guys have\nversion 0.16.0, it will show,",
    "start": "3312850",
    "end": "3318170"
  },
  {
    "text": "here's the address. And then you can see\nin the single input",
    "start": "3318170",
    "end": "3323990"
  },
  {
    "text": "for this transaction,\nthere is a tx in witness. And there's no scripts. There's a script sig\nfield, and it's just empty.",
    "start": "3323990",
    "end": "3331490"
  },
  {
    "text": "There's no actual\nsignature traditionally. There's instead this big thing. Here's the signature, and here's\nthe pubkey being revealed.",
    "start": "3331490",
    "end": "3339350"
  },
  {
    "text": "And then it also says,\nOK, here's the txid without the signature, and\nthen here's the hash or witness",
    "start": "3339350",
    "end": "3346160"
  },
  {
    "text": "transaction ID. The hash of the whole thing\nincluding the signature, and they're different, right? Also you've got size so this\nis actually 235 bytes, right?",
    "start": "3346160",
    "end": "3356210"
  },
  {
    "text": "Because you're\nincluding the witnesses. And then, v size,\nwhich is virtual size.",
    "start": "3356210",
    "end": "3363079"
  },
  {
    "text": "This is how big it looks\nto old software that doesn't know about segwit.",
    "start": "3363080",
    "end": "3368450"
  },
  {
    "text": "So the new software,\nthis knows about both. The actual size or witness\nsize is 235, v size is 153.",
    "start": "3368450",
    "end": "3375740"
  },
  {
    "text": "So yeah, it's not quite\n50%, because this one has two outputs, and the outputs\ndon't get any smaller,",
    "start": "3375740",
    "end": "3381590"
  },
  {
    "text": "and the input just gets smaller. And then, size, v\nsize, and then you",
    "start": "3381590",
    "end": "3386860"
  },
  {
    "text": "can see what block\nit's in when we get the coinbase transaction. ",
    "start": "3386860",
    "end": "3403300"
  },
  {
    "text": "OK, so the first\ntransaction in the list is going to be the\ncoinbase transaction.",
    "start": "3403300",
    "end": "3408630"
  },
  {
    "text": "And I can get that one. And yeah, the\ncoinbase transaction",
    "start": "3408630",
    "end": "3415980"
  },
  {
    "text": "has a different txid and hash. Its size is 259, its v size 232.",
    "start": "3415980",
    "end": "3421019"
  },
  {
    "text": "Coinbase has whatever\nrandom data they want, and there's the\nactual output, which",
    "start": "3421020",
    "end": "3428110"
  },
  {
    "text": "is sending to this address,\nand it's sending 12.79 coins. And then, there's this\nzero value output.",
    "start": "3428110",
    "end": "3434080"
  },
  {
    "text": "So you can have an\noutput that's got an amount of coins set to zero. It's still OK, and it's\ngot this op return.",
    "start": "3434080",
    "end": "3439720"
  },
  {
    "text": "And the op return\nstarts with aa21a9ed, and those four bytes mean\nhere's the segwit commitment.",
    "start": "3439720",
    "end": "3447910"
  },
  {
    "text": "Here's the witness commitment\nto the segwit transaction hashes, the root of all those.",
    "start": "3447910",
    "end": "3455490"
  },
  {
    "text": "And you have to\nhave that in order to have a valid segwit block. And so then we can--",
    "start": "3455490",
    "end": "3462119"
  },
  {
    "text": "this is segwit in action. I think most blocks\nnow will have that. ",
    "start": "3462120",
    "end": "3468049"
  },
  {
    "text": "So there is size\nand v size, right? And that makes sense. But then you have strip--",
    "start": "3468050",
    "end": "3474270"
  },
  {
    "text": "no, v size is not size. It's really confusing. And size, weight,\nheight, like what?",
    "start": "3474270",
    "end": "3482599"
  },
  {
    "text": "So size is-- I don't actually know. I think size is\ninterpreted the same.",
    "start": "3482600",
    "end": "3489210"
  },
  {
    "text": "This is the actual number\nof bytes for this block. Weight is you multiply all\nnon witness bytes by four,",
    "start": "3489210",
    "end": "3498150"
  },
  {
    "text": "and you leave all witness\nbytes as weight one, and that has to be\nless than four million. And you can see here, it's\njust under four million.",
    "start": "3498150",
    "end": "3505110"
  },
  {
    "text": "And then stripped size is\nthe size that old nodes see.",
    "start": "3505110",
    "end": "3510830"
  },
  {
    "text": "Yeah. Pretty sure. Anyway, so it's\nkind of confusing. One of the biggest\nproblems in bitcoin",
    "start": "3510830",
    "end": "3516800"
  },
  {
    "text": "is names, where it's like, wait. Script pubkey, and\nscript sig script? Like, what?",
    "start": "3516800",
    "end": "3522020"
  },
  {
    "text": "All these terms and names\nare really confusing, and it's sort of getting worse. So yeah.",
    "start": "3522020",
    "end": "3528190"
  },
  {
    "text": "Also, there's no v size here. I think this is actually v size.",
    "start": "3528190",
    "end": "3533880"
  },
  {
    "text": "Anyway, so that's how segwit\nworks in the actual thing.",
    "start": "3533880",
    "end": "3539009"
  },
  {
    "text": "But it's nice, because now you\ncan reliably spend from things before they're confirmed.",
    "start": "3539010",
    "end": "3544950"
  },
  {
    "text": "So segwit is cool. Fixes malleability. Increases the block size.",
    "start": "3544950",
    "end": "3550600"
  },
  {
    "text": "Oh, it does a whole bunch\nof other stuff, too. ",
    "start": "3550600",
    "end": "3555790"
  },
  {
    "text": "OK, so one of the\naspects that it fixes. When you're signing\na transaction,",
    "start": "3555790",
    "end": "3562220"
  },
  {
    "text": "let's say you have five inputs. ",
    "start": "3562220",
    "end": "3567360"
  },
  {
    "text": "Each time you sign, you need\nto hash the whole transaction, because it's slightly\ndifferent, right? You zero out all the\nsignature fields,",
    "start": "3567360",
    "end": "3573297"
  },
  {
    "text": "but in the signature\nfield for the one you're actually signing,\nyou don't zero it out. You put the previous\nscript there.",
    "start": "3573297",
    "end": "3580480"
  },
  {
    "text": "So it's slightly different. It's totally redundant. There's no reason\nto put it there because it's\nalready in the txid,",
    "start": "3580480",
    "end": "3586395"
  },
  {
    "text": "but you change things\naround a little bit. So the idea is, I'm going\nto put a signature here,",
    "start": "3586395",
    "end": "3592392"
  },
  {
    "text": "I'm going to put\na signature here, put a signature--\nall five of them. Each time I put\na signature here,",
    "start": "3592393",
    "end": "3597440"
  },
  {
    "text": "I hash the transaction to get\na slightly different thing to sign for each one.",
    "start": "3597440",
    "end": "3603530"
  },
  {
    "text": "It might not jump out at\nyou, but this is actually o and squared, which is bad.",
    "start": "3603530",
    "end": "3611690"
  },
  {
    "text": "Because the idea is, as I\nextend the number of signatures required in a transaction,\nthe number of inputs",
    "start": "3611690",
    "end": "3617060"
  },
  {
    "text": "in a transaction, the amount of\ndata that needs to be processed goes up with the square\nof the number of inputs.",
    "start": "3617060",
    "end": "3624580"
  },
  {
    "text": "Because I had an input. Now, the total size of the\ntransaction gets bigger, so each time I sign, I need to\ntake a bigger amount of data",
    "start": "3624580",
    "end": "3632980"
  },
  {
    "text": "through my hash function. Also, the number of\nsignatures gets bigger. Or the number of inputs. So this is in squared.",
    "start": "3632980",
    "end": "3638770"
  },
  {
    "text": "It seems fine, right? You never notice,\nexcept when you do. So there's pathological block.",
    "start": "3638770",
    "end": "3644830"
  },
  {
    "text": "There was one like 2015 early\nin the year where some miner was like, I'm going to\nmake this block that's one giant transaction\nwith thousands",
    "start": "3644830",
    "end": "3652150"
  },
  {
    "text": "and thousands of inputs. And a lot of software choked\non it, and it took gigs of RAM",
    "start": "3652150",
    "end": "3657339"
  },
  {
    "text": "to process the transaction,\nand things like that. So that was bad. Just in general, if you have\na lot of little dust outputs,",
    "start": "3657340",
    "end": "3664720"
  },
  {
    "text": "if you're trying to\naggregate them into one big-- I'm going to have 100\ninputs and one output,",
    "start": "3664720",
    "end": "3669849"
  },
  {
    "text": "it takes forever to sign. And it also takes\nforever to verify. So it's pretty bad.",
    "start": "3669850",
    "end": "3675220"
  },
  {
    "text": "I remember sort\nof a silly story. Tim Draper's coins.",
    "start": "3675220",
    "end": "3681220"
  },
  {
    "text": "He had all this dust. And it was nerve wracking,\nbecause it was way more money than I'm going to\nmake in my life.",
    "start": "3681220",
    "end": "3686237"
  },
  {
    "text": "And moving Tim Draper's\ncoins to somewhere else. And the software by default\njust swept all the inputs",
    "start": "3686237",
    "end": "3692730"
  },
  {
    "text": "with that wallet controlled. And they were looking at me\nlike, why doesn't this work? Is it frozen?",
    "start": "3692730",
    "end": "3697810"
  },
  {
    "text": "I'm like, no, I'm not trying\nto steal the money, guys. Because everyone was sending\nall these little outputs to Tim",
    "start": "3697810",
    "end": "3704050"
  },
  {
    "text": "Draper's 30,000 coins or\nwhatever, because he's-- and then when he\ntried to spend it, it took five minutes to sign.",
    "start": "3704050",
    "end": "3710213"
  },
  {
    "text": "AUDIENCE: When\npeople use P2 pool, the software really\nstruggles with this. PROFESSOR: Yeah, so it's bad.",
    "start": "3710213",
    "end": "3716520"
  },
  {
    "text": "Any o event squared,\nthis is sort of a bug. Segwit actually fixed this. The way they do it\nis they say, OK,",
    "start": "3716520",
    "end": "3724560"
  },
  {
    "text": "we sort of pre compute these\nthree intermediate hashes.",
    "start": "3724560",
    "end": "3730830"
  },
  {
    "text": "Take the whole transaction. This is sort of the\nglobal transaction data,",
    "start": "3730830",
    "end": "3736350"
  },
  {
    "text": "and pre compute\nthese three things. And then for each of the\ninputs, add another thing.",
    "start": "3736350",
    "end": "3741860"
  },
  {
    "text": "Here's this input specific. So this is global. It's the hash of all the\ntx ends, the hash of all",
    "start": "3741860",
    "end": "3748170"
  },
  {
    "text": "the outputs, the hash of this. And then here is that\nthe input specific. ",
    "start": "3748170",
    "end": "3757190"
  },
  {
    "text": "Input specific. And then hash all these\nthings into one thing and then sign that.",
    "start": "3757190",
    "end": "3762530"
  },
  {
    "text": "So the idea is it's o of n in\nthat you compute these three and then you sort\nof go down and keep changing this for each one.",
    "start": "3762530",
    "end": "3768530"
  },
  {
    "text": "So that saves a lot of time. It's a much nicer-- oh, you also put in the amount\nbeing spent in your signature",
    "start": "3768530",
    "end": "3777490"
  },
  {
    "text": "hash, which is also\nredundant, because that's committed to in the txid\nthat you're sending. But it's really nice\nfor hardware wallets,",
    "start": "3777490",
    "end": "3784208"
  },
  {
    "text": "because a lot of times hardware\nwallets are essentially presented with here's a hash. Sign it.",
    "start": "3784208",
    "end": "3790160"
  },
  {
    "text": "And it's a very small system. It's a little chip somewhere,\nand it doesn't really know too much about bitcoin.",
    "start": "3790160",
    "end": "3795870"
  },
  {
    "text": "It's just, here's a hash. Sign it. OK, and they don't know\nhow much they're spending, so there could be attacks\non hardware wallets,",
    "start": "3795870",
    "end": "3802310"
  },
  {
    "text": "where they get a hardware wallet\nto sign something where it's actually moving too much money. So it's nice to be able\nto have the actual amount.",
    "start": "3802310",
    "end": "3809100"
  },
  {
    "text": "So there's a bunch\nof stuff like that. It was a giant grab bag of all\nthese different little fixes, things like that.",
    "start": "3809100",
    "end": "3815420"
  },
  {
    "text": "Fixes malleability. It increases the block size. Does all these\nother cool things.",
    "start": "3815420",
    "end": "3820430"
  },
  {
    "text": "People didn't like it. I never really understood why.",
    "start": "3820430",
    "end": "3826908"
  },
  {
    "text": "AUDIENCE: For the reasons you've\nbeen telling everyone about? PROFESSOR: All these reasons? Wait, these seem like\ngood things, right? ",
    "start": "3826908",
    "end": "3832330"
  },
  {
    "text": "AUDIENCE: Well,\nyeah, but [INAUDIBLE] PROFESSOR: Oh. No, that wasn't what--",
    "start": "3832330",
    "end": "3837860"
  },
  {
    "text": "it wasn't like\npeople were like, oh, here's some little things\nI don't like about it. Because that was what I said.",
    "start": "3837860",
    "end": "3842897"
  },
  {
    "text": "That was like what everyone\nworking on Bitcoin was like. No one thinks it's perfect. Everyone was like, oh,\nbut this thing is weird.",
    "start": "3842897",
    "end": "3848930"
  },
  {
    "text": "Why did you do that? Or why didn't you put\nthis in kind of things. But no, the people who didn't\nlike it really didn't like it.",
    "start": "3848930",
    "end": "3856210"
  },
  {
    "text": "There's still a bounty on\n[INAUDIBLE] head, right? There's death threats.",
    "start": "3856210",
    "end": "3861400"
  },
  {
    "text": "Someone's like, I'll pay\nsomeone to kill this guy. ",
    "start": "3861400",
    "end": "3866780"
  },
  {
    "text": "It's all, this is going\nto destroy Bitcoin, that segwit isn't\nbitcoin anymore, because there aren't\nany signatures.",
    "start": "3866780",
    "end": "3873362"
  },
  {
    "text": "It's like no, signatures\nare still committed to, just in a different way. You have to build\nthis other tree. ",
    "start": "3873362",
    "end": "3879349"
  },
  {
    "text": "So lots of weird conspiracies. I don't know. It became this really\nsticking point,",
    "start": "3879350",
    "end": "3884900"
  },
  {
    "text": "and so that sort of\nled to Bitcoin Cash. The whole idea is segwit is bad.",
    "start": "3884900",
    "end": "3891109"
  },
  {
    "text": "We're making Bitcoin Cash. And Bitcoin Cash forked\noff before segwit activated in the main network.",
    "start": "3891110",
    "end": "3897680"
  },
  {
    "text": "Interestingly, Bitcoin\nCash uses this. So they took a bunch of\nthe code from segwit, because this is a\nreally good improvement",
    "start": "3897680",
    "end": "3905010"
  },
  {
    "text": "to signing that\nBitcoin Cash used, but they didn't like segwit. Yeah, I'm still not like--",
    "start": "3905010",
    "end": "3912218"
  },
  {
    "text": "I don't know. There's problems I have with\nit, too, but it's an upgrade, and it's cool. I think a lot of it was\npeople wanted a hard fork,",
    "start": "3912218",
    "end": "3919526"
  },
  {
    "text": "and this was a softfork. And so there's\nbackwards compatibility, and they wanted to\nshow that people",
    "start": "3919526",
    "end": "3925480"
  },
  {
    "text": "have more control over\nbitcoin than they maybe do. It might never be possible\nto have a hard fork",
    "start": "3925480",
    "end": "3931180"
  },
  {
    "text": "to get everyone on\nboard to really switch. So who knows. So yeah, it was interesting.",
    "start": "3931180",
    "end": "3936430"
  },
  {
    "text": "It took forever, and\nthat was the last change to the bitcoin code in\nterms of consensus code.",
    "start": "3936430",
    "end": "3944170"
  },
  {
    "text": "And it was initially\nannounced late 2015",
    "start": "3944170",
    "end": "3949240"
  },
  {
    "text": "in Hong Kong, and\nthen all of 2016 it never-- so it activated\nin August of last year.",
    "start": "3949240",
    "end": "3956050"
  },
  {
    "text": "And now you can use it. AUDIENCE: People had big\ninterest in stopping it, though. At one point they were\nspending hundreds of thousands",
    "start": "3956050",
    "end": "3962950"
  },
  {
    "text": "of dollars a day to\nstop it from activating. PROFESSOR: Yeah, so on your\nvert coin, you're like,",
    "start": "3962950",
    "end": "3968797"
  },
  {
    "text": "I'll just take the segwit code\nand activate it, and like cool. And then people tried to stop\nit and spend a lot of money to stop it.",
    "start": "3968797",
    "end": "3974070"
  },
  {
    "text": " OK, I want to say unclear\nwhy, because I don't know.",
    "start": "3974070",
    "end": "3979420"
  },
  {
    "text": "It's sort of weird. There's a whole lot of opinions. One theory is that\nthis breaks some mining",
    "start": "3979420",
    "end": "3988590"
  },
  {
    "text": "chips optimizations. One of the optimizations--",
    "start": "3988590",
    "end": "3993810"
  },
  {
    "text": "it doesn't work with\na tree of height two. But if you have a really tall\ntree, you can swap txids,",
    "start": "3993810",
    "end": "4000710"
  },
  {
    "text": "or you can swap intermediate\nnodes of the tree and you'll get a\ndifferent merkle route.",
    "start": "4000710",
    "end": "4006140"
  },
  {
    "text": "So you can see-- so it doesn't work here, because\nthis has to stay in place.",
    "start": "4006140",
    "end": "4011270"
  },
  {
    "text": "But in many cases, the order of\nthe transactions is arbitrary. So I could flip these two.",
    "start": "4011270",
    "end": "4017450"
  },
  {
    "text": "It's still valid. So what I might do is say, OK. I have this merkle\nroute I'm mining,",
    "start": "4017450",
    "end": "4025130"
  },
  {
    "text": "and then I want to flip\nthese two, calculate a different merkle\nroute, and mine.",
    "start": "4025130",
    "end": "4030290"
  },
  {
    "text": "And there were some chips\nthat maybe did this and had these kinds of optimizations. There was also a patent on\nit and all this weird stuff",
    "start": "4030290",
    "end": "4037130"
  },
  {
    "text": "going on. It doesn't break,\nbut it essentially loses the optimization\nif you have this.",
    "start": "4037130",
    "end": "4043940"
  },
  {
    "text": "Because you're saying, OK, I'm\ngoing to have this big tree. I'm going to swap\nsomething near the top,",
    "start": "4043940",
    "end": "4050570"
  },
  {
    "text": "and it only has to\nrecompute two hashes to get a new merkle route. However, if I now have this\nmirror image witness merkle",
    "start": "4050570",
    "end": "4060260"
  },
  {
    "text": "tree underneath, if I say,\nOK, I'm going to swap this, I'm also swapping all these. And I have to recompute this.",
    "start": "4060260",
    "end": "4069050"
  },
  {
    "text": "Maybe I can swap some of it, but\nI have to recompute what this. This is going to\nchange just as well. And then I have to\nput that in here,",
    "start": "4069050",
    "end": "4074660"
  },
  {
    "text": "and this is going\nto be at the bottom. And then, I'm going to have\nto recompute everything all the way up to\nthe merkle route.",
    "start": "4074660",
    "end": "4079830"
  },
  {
    "text": "So this was called AsicBoost,\nand then there was a post-- Greg Maxwell posted\nthis sort of like,",
    "start": "4079830",
    "end": "4087125"
  },
  {
    "text": "you guys, like accusatory mail\non the mailing list last spring",
    "start": "4087125",
    "end": "4092390"
  },
  {
    "text": "saying, look. We were trying to figure out\na way to break AsicBoost,",
    "start": "4092390",
    "end": "4097490"
  },
  {
    "text": "because we think miners have\nthis patented algorithm that optimizes and it gives\na 20%, 30% speed up.",
    "start": "4097490",
    "end": "4103818"
  },
  {
    "text": "And we're worried that the\npatents will make one miner, have a monopoly, and everyone\nelse won't be competitive.",
    "start": "4103819",
    "end": "4108929"
  },
  {
    "text": "So we're trying\nto think, is there a way we make software\nto prevent this from this optimization?",
    "start": "4108930",
    "end": "4115149"
  },
  {
    "text": "And then once they\ntried to look at it, they were like, oh, wait. Segwit does that. We want to make it costly\nto swap things in the tree,",
    "start": "4115149",
    "end": "4123310"
  },
  {
    "text": "and segwit does that. Oh, so basically, we're good. And then he was like, oh, wait. Maybe that's why all\nthese people hate segwit.",
    "start": "4123310",
    "end": "4130210"
  },
  {
    "text": "Maybe this is these miners\nwho have billions of dollars worth of equipment with\nthese optimizations in it,",
    "start": "4130210",
    "end": "4137170"
  },
  {
    "text": "which would be rendered unusable\nby this new software change, maybe they're trying to\nprevent it from activating.",
    "start": "4137170",
    "end": "4144580"
  },
  {
    "text": "It's a theory, and the\nmining companies said, oh, no that's a\nbunch of nonsense. Although, the way they said\nit was sort of suspicious.",
    "start": "4144580",
    "end": "4151574"
  },
  {
    "text": "They were like, yeah, we\nput circuitry in our chips to do this, but\nwe never used it. That's strange.",
    "start": "4151575",
    "end": "4157210"
  },
  {
    "text": "So who knows. But that's one theory. I'm not sure how much I\nbelieve that's the real reason,",
    "start": "4157210",
    "end": "4163910"
  },
  {
    "text": "but yeah. AUDIENCE: but if they want\nto calculate Merkle roots in bitcoin, don't just-- order all of the transaction\nfees by transaction ID?",
    "start": "4163910",
    "end": "4171939"
  },
  {
    "text": "PROFESSOR: You can't,\nbecause the order matters. Because when you\nvalidate, this transaction",
    "start": "4171939",
    "end": "4178778"
  },
  {
    "text": "might create an output that\nthis transaction spends. And so if you swap them, so\nif you didn't have intra block",
    "start": "4178779",
    "end": "4186909"
  },
  {
    "text": "dependencies, then it\nwould all be arbitrary and you could put in ordering. But there are intra\nblock dependencies,",
    "start": "4186910",
    "end": "4192729"
  },
  {
    "text": "and so the order does matter. In many cases, it doesn't. In many cases, these are\ntwo separate transactions.",
    "start": "4192729",
    "end": "4197830"
  },
  {
    "text": "You can swap them. But the software does\nuse the ordering. And there's all sorts of other\nthings that would be better.",
    "start": "4197830",
    "end": "4205100"
  },
  {
    "text": "What I would want is\nprepend or append the height",
    "start": "4205100",
    "end": "4211150"
  },
  {
    "text": "at each stage of\nthe merkle tree. That would have helped\nme out for some things.",
    "start": "4211150",
    "end": "4216345"
  },
  {
    "text": "Because then, it's\nlike you know, since you're at\nthe bottom just put a zero at the end of each hash. And then when you get\nup here, put a one",
    "start": "4216345",
    "end": "4222580"
  },
  {
    "text": "at the end of each hash. Doesn't really change anything. But one problem is\nwhat if I request--",
    "start": "4222580",
    "end": "4231790"
  },
  {
    "text": "so what I want to\ndo in my software. I want to request all the\ntransaction IDs in a block. I don't actually care\nabout the transactions.",
    "start": "4231790",
    "end": "4237320"
  },
  {
    "text": "I just want to\nsee all the txids.  Like this. If I get rid of the head 20,\nI get a giant list of txids.",
    "start": "4237320",
    "end": "4246830"
  },
  {
    "text": "The thing is, what this let me\ndo is to look for transactions. If I have a txid I know\nI'm looking, I can say,",
    "start": "4246830",
    "end": "4252380"
  },
  {
    "text": "oh, I can look for it in here. The problem is, what if\nthe person I'm asking is giving me this\ninstead of this?",
    "start": "4252380",
    "end": "4261080"
  },
  {
    "text": "I won't know. They all look like\nrandom numbers. If I do the merkle tree algo,\nI'll get to the merkle route.",
    "start": "4261080",
    "end": "4269890"
  },
  {
    "text": "That's good. But I don't really know\nthat I'm at the bottom. It's OK if I'm\nrunning a full node",
    "start": "4269890",
    "end": "4275430"
  },
  {
    "text": "and I actually download all\nthe transactions and look, and OK, it works. But to have a way to say, hey,\ngive me a list of all the txids",
    "start": "4275430",
    "end": "4283031"
  },
  {
    "text": "and I can verify\nthat it's correct, I can't do that right now. There's ways around it. But it would have\nbeen nice if then they",
    "start": "4283032",
    "end": "4288587"
  },
  {
    "text": "appended a zero or something. Or even, all you\nhave to do is just append something\nat the bottom row",
    "start": "4288587",
    "end": "4293969"
  },
  {
    "text": "or just append\nhigher or something. Then, it would've\nbeen kind of cool. It would've been easier for me. But oh well.",
    "start": "4293970",
    "end": "4299305"
  },
  {
    "text": "And there's people who've\nwritten about this. Yeah. AUDIENCE: Did James say that's\npool operators are leaving off",
    "start": "4299305",
    "end": "4304650"
  },
  {
    "text": "the [? whipper? ?]\nAnd if so, does it weaken the whole system? PROFESSOR: I think\nwhat they really do is they just\ndon't support segwit.",
    "start": "4304650",
    "end": "4311400"
  },
  {
    "text": "So I've seen, especially-- AUDIENCE: [INAUDIBLE] it's\nexpensive but then they-- PROFESSOR: Yeah, they say\nthey're going to support it,",
    "start": "4311400",
    "end": "4317380"
  },
  {
    "text": "and then they don't. So they sort of flag their\ntransactions, yeah, segwit, and then they haven't actually\nupgraded their software,",
    "start": "4317380",
    "end": "4323409"
  },
  {
    "text": "so they can't use it. They can't mine it. So you see this a lot\non TestNet as well. If you're making TestNet\nsegwit transactions,",
    "start": "4323410",
    "end": "4329635"
  },
  {
    "text": "sometimes they just\ndon't get confirmed for a few hours, because\nall the blocks that come out don't support it, and\nso they won't use it.",
    "start": "4329635",
    "end": "4336330"
  },
  {
    "text": "AUDIENCE: The badly\nwritten pool software, if they use segwit\nsupporting full load with it, it will give them\nsegwit transactions,",
    "start": "4336330",
    "end": "4344640"
  },
  {
    "text": "and they'll try to include\nit but it won't do this, so-- PROFESSOR: So it's invalid. Yes, so it's invalid.",
    "start": "4344640",
    "end": "4349660"
  },
  {
    "text": "AUDIENCE: I guess my\nquestion is does it weaken the security in the\nsystem if for six months",
    "start": "4349660",
    "end": "4355300"
  },
  {
    "text": "they're not supporting this? PROFESSOR: No, no. It hurts the usability. If I want to use a\nsegwit transact--",
    "start": "4355300",
    "end": "4361349"
  },
  {
    "text": "but as me running a\nsegwit compatible node, I require signatures.",
    "start": "4361350",
    "end": "4366810"
  },
  {
    "text": "I require all this\nwhole construction. If you make something\nthat looks like it spends the segwit transaction\nwithout this, I just reject it.",
    "start": "4366810",
    "end": "4374820"
  },
  {
    "text": "So security wise, it's fine. Yes. AUDIENCE: I think it\nmight be important to note that the way that these things\nare designed, and in particular",
    "start": "4374820",
    "end": "4380789"
  },
  {
    "text": "that softforks are designed, is\nthat anyone who doesn't update the new functionality\ncan't hurt the security",
    "start": "4380790",
    "end": "4388740"
  },
  {
    "text": "of the new functionality. That's sort of part\nof the design process. PROFESSOR: Although, their\nsecurity might get hurt.",
    "start": "4388740",
    "end": "4396315"
  },
  {
    "text": "Not a ton, but yeah. If you haven't\nupgraded, you might see these segwit\ntransactions, and--",
    "start": "4396315",
    "end": "4402415"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: Yeah,\nthey look weird, but you're like, OK, fine. But you can't actually\nverify the whole thing.",
    "start": "4402415",
    "end": "4408810"
  },
  {
    "text": "Given an invalid and a\nvalid segwit transaction, the old software\ncan't distinguish but the new software can.",
    "start": "4408810",
    "end": "4415503"
  },
  {
    "text": "AUDIENCE: That's even though the\npool operators, whether there's six or eight key pool\noperators, might not",
    "start": "4415503",
    "end": "4420600"
  },
  {
    "text": "be supporting the witrootsub PROFESSOR: If they\ndon't support it, you have to wait until\nsomeone that does",
    "start": "4420600",
    "end": "4425910"
  },
  {
    "text": "support it mines the block. So if they try to support\nit and support it wrong,",
    "start": "4425910",
    "end": "4432630"
  },
  {
    "text": "you ignore them. You don't use their data. You don't use their block. AUDIENCE: you just want\nsegwit transactions stay",
    "start": "4432630",
    "end": "4438278"
  },
  {
    "text": "in the node pool a bit longer. PROFESSOR: Yeah. So I think in\nbitcoin now, it's OK. TestNet is kind of weird,\nbut there's segwit.party,",
    "start": "4438278",
    "end": "4446980"
  },
  {
    "text": "and you can see what people\nare doing with segwit. ",
    "start": "4446980",
    "end": "4452710"
  },
  {
    "text": "So yeah, it's about 30. This is by transaction, it's\nsomewhere around 30 something percent of the transactions\nare using segwit,",
    "start": "4452710",
    "end": "4459910"
  },
  {
    "text": "and then you can see witness\nsize percentage, block size. OK, so sometimes you got-- oh wow, I had no idea.",
    "start": "4459910",
    "end": "4466719"
  },
  {
    "text": "Blocks are way under\na megabyte now. Oh, OK, well free\ntransactions for everyone.",
    "start": "4466720",
    "end": "4472059"
  },
  {
    "text": "If you want to use\nbitcoin, now's the time. You don't have to pay anything. That looks very different\na month ago where",
    "start": "4472060",
    "end": "4479949"
  },
  {
    "text": "you had a solid red line. You had to sort of-- nothing went below a\nmillion, and then you",
    "start": "4479950",
    "end": "4485710"
  },
  {
    "text": "had a little bit of segwit\nstuff going on here. But now you've got most\nthings are below a million. So interesting.",
    "start": "4485710",
    "end": "4492020"
  },
  {
    "text": "OK, so yeah. So that's the basic\nidea of segwit. And if people have\nany questions,",
    "start": "4492020",
    "end": "4498790"
  },
  {
    "text": "stick around and ask. There's office hours tomorrow\nat 4:00 to 6:00 over there. Look at the homework,\nand next time",
    "start": "4498790",
    "end": "4505450"
  },
  {
    "text": "I'll talk about lightning\nnetwork payment-- I'll try to get into\npayment channels and see how far we get into\nlightning network stuff.",
    "start": "4505450",
    "end": "4512760"
  }
]