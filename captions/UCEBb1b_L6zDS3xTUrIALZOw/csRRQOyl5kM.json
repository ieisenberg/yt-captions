[
  {
    "text": "[SQUEAKING]\n[RUSTLING] [CLICKING]",
    "start": "0",
    "end": "5808"
  },
  {
    "start": "5808",
    "end": "12590"
  },
  {
    "text": "PROFESSOR: Yes, of\ncourse, if we argue-- if we want to prove to him\nthat x is in the language, it's essentially\nwe're telling him,",
    "start": "12590",
    "end": "19340"
  },
  {
    "text": "if you evaluate x on\ncircuit C, you will get 1. Or maybe if there\nexists a witness",
    "start": "19340",
    "end": "25160"
  },
  {
    "text": "that C of the witness C and x\nand the witness gives you 1. Of course, we assume the\nverifier knows the description",
    "start": "25160",
    "end": "30590"
  },
  {
    "text": "of this circuit C. And usually, and\nfor our purposes, you think of C as being a\nuniform, like a Turing machine.",
    "start": "30590",
    "end": "38760"
  },
  {
    "text": "So it can be\ngenerated efficiently from a Turing machine. But yes, the verifier\ncan generate--",
    "start": "38760",
    "end": "45320"
  },
  {
    "text": "both the prover and verifier\ncan generate the circuit. So if you think of\nthree SAT, the circuit",
    "start": "45320",
    "end": "53342"
  },
  {
    "text": "takes as input all\nthe assignments, and it checks that all\nthe clauses are satisfied.",
    "start": "53342",
    "end": "60488"
  },
  {
    "text": "That's an example of a circuit. Yeah, AUDIENCE: But also\nchecking [INAUDIBLE], isn't that quite similar to\njust running that circuit?",
    "start": "60488",
    "end": "69265"
  },
  {
    "text": "PROFESSOR: Yeah, it's\nlike just-- yeah. So the prover\nessentially computes the circuit, all the\ngates in the circuit,",
    "start": "69265",
    "end": "74580"
  },
  {
    "text": "hashes it, and then\ngives a BARG that each and every gate of the\ncircuit is satisfied,",
    "start": "74580",
    "end": "81480"
  },
  {
    "text": "that the value he\nhashed satisfy each--",
    "start": "81480",
    "end": "86550"
  },
  {
    "text": "respect each gate. AUDIENCE: It seems like\nbecause the verifier is going to also check\nif each of those bits,",
    "start": "86550",
    "end": "95790"
  },
  {
    "text": "corresponding in B0 B1. Because want to be out. Seems like that among\nthose running the gate.",
    "start": "95790",
    "end": "103409"
  },
  {
    "text": "PROFESSOR: So the verifier\ndoesn't know all these values, all these bits.",
    "start": "103410",
    "end": "108660"
  },
  {
    "text": "The verifier only\nknows the hash. He gets only v. He doesn't know\nall these things, and he can't.",
    "start": "108660",
    "end": "114830"
  },
  {
    "text": "There are too many of them.  He knows what the\ncircuit is, but he",
    "start": "114830",
    "end": "120000"
  },
  {
    "text": "doesn't run in time that\ndepends on the circuit. The circuit is too big. He just knows in his\nhead how to generate",
    "start": "120000",
    "end": "125640"
  },
  {
    "text": "each gate in the circuit. So he doesn't know these bits. All he knows is the hash value\nand the BARG, which is succinct.",
    "start": "125640",
    "end": "134555"
  },
  {
    "text": " Yeah? AUDIENCE: Security\nis going to give us",
    "start": "134555",
    "end": "140982"
  },
  {
    "text": "some lower bound on L, right? It just happens? PROFESSOR: A lower\nbound on what? AUDIENCE: On L. PROFESSOR: On L, yes.",
    "start": "140983",
    "end": "146220"
  },
  {
    "text": "AUDIENCE: Yeah, OK. PROFESSOR: Yeah, we're\ngoing to-- yeah, yeah, yeah. Now we're going to talk\nabout security soundness, so we'll see.",
    "start": "146220",
    "end": "151800"
  },
  {
    "text": "One thing I want to say before\nwe jump to soundness-- just note, because I said\nthe CRS of the BARG,",
    "start": "151800",
    "end": "160260"
  },
  {
    "text": "we generated with security\nparameter lambda, k, which is the number of gates,\nand then I said n prime.",
    "start": "160260",
    "end": "166360"
  },
  {
    "text": "We'll see. We'll see what n prime is. I forgot to-- this is n prime. It's just security parameter.",
    "start": "166360",
    "end": "174269"
  },
  {
    "text": "N prime will be the\nlength of the hash key, the length of v,\nwhich grows with L, and J. That's the n prime.",
    "start": "174270",
    "end": "182450"
  },
  {
    "text": "I'm just mentioning it because\nI forgot to circle back to it. OK, are you ready to talk\nabout analyzing this?",
    "start": "182450",
    "end": "190460"
  },
  {
    "text": "Because that's actually\nthe very interesting part. So let's analyze. ",
    "start": "190460",
    "end": "200140"
  },
  {
    "text": "OK, we need to argue\ncompleteness and soundness. Completeness-- I don't\nwant to waste our time",
    "start": "200140",
    "end": "206170"
  },
  {
    "text": "because it's just trivial. Completeness just follows from\nthe completeness of the BARG and completeness of\nsome extractable hash.",
    "start": "206170",
    "end": "215120"
  },
  {
    "text": "So essentially, if you're\nhonest, if x is in the language, you compute all the\nwires correctly,",
    "start": "215120",
    "end": "222610"
  },
  {
    "text": "you hashed all the wires. And if you hashed all\nthe wires correctly,",
    "start": "222610",
    "end": "227810"
  },
  {
    "text": "then you have a valid\nwitness for all the wires. So your BARG will be accepted. If you did everything\ncorrectly, everything",
    "start": "227810",
    "end": "234880"
  },
  {
    "text": "is going to be accepted\nbecause the completeness of the underlying primitive. There's nothing\ninteresting going on.",
    "start": "234880",
    "end": "240500"
  },
  {
    "text": "The interesting\npart is soundness. So how do we know\nyou cannot cheat?",
    "start": "240500",
    "end": "246610"
  },
  {
    "text": "And let me even\njump and tell you,",
    "start": "246610",
    "end": "252970"
  },
  {
    "text": "this thing is not really sound. But-- [LAUGHTER]",
    "start": "252970",
    "end": "259010"
  },
  {
    "text": " But we'll make it sound. So what do we know?",
    "start": "259010",
    "end": "264280"
  },
  {
    "text": "So soundness-- so what\ndo we want to prove? ",
    "start": "264280",
    "end": "273880"
  },
  {
    "text": "Let's try to hope\nfor-- so again, there's nonadaptive\nand adaptive. You can think of both. But let's talk about, what\ndoes it mean to be, let's say,",
    "start": "273880",
    "end": "280855"
  },
  {
    "text": "adaptively sound? So we need to prove that for any\npolynomial-size cheating prover,",
    "start": "280855",
    "end": "289960"
  },
  {
    "text": "we want to say the probability\nthat P star takes a CRS",
    "start": "289960",
    "end": "296780"
  },
  {
    "text": "of the BARG-- of the SNARG--\nso a hash key and a CRS for the BARG-- it takes the CRS, and it\noutputs some x and pi such",
    "start": "296780",
    "end": "308750"
  },
  {
    "text": "that x is not in the language. And pi, the SNARG is satisfied\nv and CRS x pi outputs 1.",
    "start": "308750",
    "end": "323810"
  },
  {
    "text": "You want to say that\nthis is negligible. ",
    "start": "323810",
    "end": "329300"
  },
  {
    "text": "That's what we need to prove. The probability that a\ncheating prover gets a CRS",
    "start": "329300",
    "end": "335690"
  },
  {
    "text": "and generates any x\nthat's not in the language and a proof that's accepted--",
    "start": "335690",
    "end": "343220"
  },
  {
    "text": "you can't do that. You can do that only with\nthe Sanger probability. Let me just mention another\nmore weaker definition is",
    "start": "343220",
    "end": "353449"
  },
  {
    "text": "the nonadaptive, which says,\nfor any P star and for every x-- so he gives x ahead of time.",
    "start": "353450",
    "end": "358820"
  },
  {
    "text": "For any P star and for\nany x not in the language, when he gets a random\nCRS, the probability",
    "start": "358820",
    "end": "365270"
  },
  {
    "text": "that he managed to generate\na fake proof that's accepted is negligible.",
    "start": "365270",
    "end": "370543"
  },
  {
    "text": "So there's two\nvariants-- one when he needs to choose a\ngiven x for all the CRSes,",
    "start": "370543",
    "end": "376830"
  },
  {
    "text": "or he can choose an x\ndepending on the CRS. Let's talk about the adaptive\nbecause it's just stronger,",
    "start": "376830",
    "end": "382820"
  },
  {
    "text": "and we can get it, at\nleast in some cases. So today, the SNARGs is\nin the literature-- so",
    "start": "382820",
    "end": "390050"
  },
  {
    "text": "achieve adaptive, some\nachieve nonadaptive. And in general, the ones for\ndeterministic computations",
    "start": "390050",
    "end": "397610"
  },
  {
    "text": "are adaptive. The one for nondeterministic\ncomputations are more on the\nnonadaptive side. And we don't have\nSNARGs for all of NP.",
    "start": "397610",
    "end": "404570"
  },
  {
    "text": "So at the end of the talk,\nat the end of the class, I'll leave 10 minutes\nto talk about where",
    "start": "404570",
    "end": "411510"
  },
  {
    "text": "we're standing as a community. But both definitions\nare relevant,",
    "start": "411510",
    "end": "417300"
  },
  {
    "text": "and we have results in both\nsettings-- the adaptive and the nonadaptive. But let's talk today on\nthe adaptive setting.",
    "start": "417300",
    "end": "425770"
  },
  {
    "text": "So that's what we want. But the question,\ndo we get this? So let's try to see what this\nconstruction actually gives us.",
    "start": "425770",
    "end": "436000"
  },
  {
    "text": "So what I'm going to argue\nis actually this construction does not give a soundness.",
    "start": "436000",
    "end": "444150"
  },
  {
    "text": "What it gives us is a\nform of local soundness.",
    "start": "444150",
    "end": "450460"
  },
  {
    "text": "So I'll explain what this means. So what I'm going to argue\nis that-- so claim the SNARG",
    "start": "450460",
    "end": "459630"
  },
  {
    "text": "that I just constructed\nis, let me call it, locally sound or\nlocally consistent.",
    "start": "459630",
    "end": "469990"
  },
  {
    "text": "It's also people call\nlocally consistent. And I'll explain what it is.",
    "start": "469990",
    "end": "475610"
  },
  {
    "text": " We want to prove soundness. So what do we want to prove?",
    "start": "475610",
    "end": "481270"
  },
  {
    "text": "We want to prove that\nthis SNARG, if you manage",
    "start": "481270",
    "end": "486569"
  },
  {
    "text": "to say that the\noutput is 1, there's actually an assignment to all\nthe wires that give you 1. That means it's sound.",
    "start": "486570",
    "end": "494040"
  },
  {
    "text": "We can't prove that. What can we prove?",
    "start": "494040",
    "end": "499110"
  },
  {
    "text": "We can prove that if you\nargue that the value is 1,",
    "start": "499110",
    "end": "504389"
  },
  {
    "text": "I can use you to\nextract the value of any small set of wires--",
    "start": "504390",
    "end": "511150"
  },
  {
    "text": "how many L. So\nremember, our SNARG, we're binding on allocations.",
    "start": "511150",
    "end": "517479"
  },
  {
    "text": "These allocations,\nI can extract. You gave me a V that's\nbinding allocation.",
    "start": "517480",
    "end": "522659"
  },
  {
    "text": "I can extract. I can get from you\nthe L wire values.",
    "start": "522659",
    "end": "528340"
  },
  {
    "text": "So I get L wires\nvalues from you. What I can argue\nabout these L wire",
    "start": "528340",
    "end": "533620"
  },
  {
    "text": "values is that locally\nthey're consistent. So if there's a gate,\nif the L wire values--",
    "start": "533620",
    "end": "541630"
  },
  {
    "text": "let's say three of them\nare connected with a gate-- I can argue that this\ngate is satisfied.",
    "start": "541630",
    "end": "547300"
  },
  {
    "text": "So I can argue this form\nof local consistency.",
    "start": "547300",
    "end": "552940"
  },
  {
    "text": "So I'm going to define\nwhat local consistency is. But just high level,\nwhat I can argue",
    "start": "552940",
    "end": "559150"
  },
  {
    "text": "is not that I have a\nassignment of all the wires that are consistent\ninside, and the output",
    "start": "559150",
    "end": "565900"
  },
  {
    "text": "is 1, which is what\nI want to argue. I can argue that I\nhave an assignment that I can have a small window\nto the wires, a window of size",
    "start": "565900",
    "end": "576230"
  },
  {
    "text": "L. So I can look at these L wires,\nand they look consistent. And I can look at these L\nwires, and they look consistent.",
    "start": "576230",
    "end": "583010"
  },
  {
    "text": "And the output is 1. So it seems like, OK,\nlocal now, we only",
    "start": "583010",
    "end": "588272"
  },
  {
    "text": "need to stitch all\nof them together and to get a final\nassignment, and we're done. So the goal is we're going to\nsay, locally we're consistent.",
    "start": "588272",
    "end": "595610"
  },
  {
    "text": "And local consistency\nimplies global consistency. And so we get soundness.",
    "start": "595610",
    "end": "602399"
  },
  {
    "text": "So the plan-- we are going\nto prove local consistency. So that's check. And we're going to\ndefine it and prove it.",
    "start": "602400",
    "end": "610190"
  },
  {
    "text": "The local consistency\nimplies global. That turns out to be much more\ndifficult than we thought.",
    "start": "610190",
    "end": "617069"
  },
  {
    "text": "So when we started working\non this, we were like, oh, local consistency. But we shouldn't apply global.",
    "start": "617070",
    "end": "622100"
  },
  {
    "text": "That should be good. So we worked really\nhard local, local. And then turns out,\nlocal to global was another 10 years of work.",
    "start": "622100",
    "end": "628139"
  },
  {
    "text": "And we're in\nprogress, in progress. ",
    "start": "628140",
    "end": "633150"
  },
  {
    "text": "So what we're going to see today\nis how to get local consistency. We're going to talk a little bit\nabout why local implies global",
    "start": "633150",
    "end": "640069"
  },
  {
    "text": "and why not. Why doesn't it\nalways imply global? And hopefully, it will give\nyou some food for thought.",
    "start": "640070",
    "end": "647260"
  },
  {
    "text": " So I'm going to argue\nthat it's locally sound.",
    "start": "647260",
    "end": "652454"
  },
  {
    "text": "And let me tell you what\nlocally sound means. Let me first define it. So the definition-- so\nhere's what it means.",
    "start": "652455",
    "end": "666860"
  },
  {
    "text": "It means that there exists-- so I'm now defining\nwhat this means. It means that there\nexists an extractor--",
    "start": "666860",
    "end": "674510"
  },
  {
    "text": "what we call sometimes\na local assignment-- so some extractor,\na local assignment--",
    "start": "674510",
    "end": "683244"
  },
  {
    "text": " generator, that's\nanother name we use--",
    "start": "683244",
    "end": "690770"
  },
  {
    "text": "E-- so we have an extractor that\ngenerates assignments for us.",
    "start": "690770",
    "end": "696810"
  },
  {
    "text": "This assignment takes only L\nwire values on the circuit. So we have a circuit C. This\nextractor or local assignment",
    "start": "696810",
    "end": "708930"
  },
  {
    "text": "generator, it gets L wires-- i1 up to il.",
    "start": "708930",
    "end": "714570"
  },
  {
    "text": "They're all in the wires,\nwhich we denoted by n.",
    "start": "714570",
    "end": "719790"
  },
  {
    "text": "So it takes l wires,\nand it outputs some x star in an\ninstance and wire values--",
    "start": "719790",
    "end": "729630"
  },
  {
    "text": "and values wi1 up to wil. This is what our local\nassignment generator outputs.",
    "start": "729630",
    "end": "737850"
  },
  {
    "text": "For any i1 up to il, it outputs\nsome instance and y values",
    "start": "737850",
    "end": "743639"
  },
  {
    "text": "that satisfy the following such\nthat 1 is local consistency,",
    "start": "743640",
    "end": "758100"
  },
  {
    "text": "which means any two wires-- any wires that are connected\nby a gate satisfy the gate.",
    "start": "758100",
    "end": "766079"
  },
  {
    "text": "And the output wire is a 1. And if one of them are\nconnected to input wires,",
    "start": "766080",
    "end": "772030"
  },
  {
    "text": "then it's consistent\nwith the input wire. So local consistency\njust means it",
    "start": "772030",
    "end": "777060"
  },
  {
    "text": "respects all gates\nconsistent with x1 up",
    "start": "777060",
    "end": "788430"
  },
  {
    "text": "to xn and out and output one.",
    "start": "788430",
    "end": "794510"
  },
  {
    "text": " So of course, if you just\nread wires here and here,",
    "start": "794510",
    "end": "802260"
  },
  {
    "text": "like very spread, they are\nnot connected with any gates, then the local consistency\ndoesn't say anything",
    "start": "802260",
    "end": "809279"
  },
  {
    "text": "because you can't determine\nthe value of any gate. But any gate for\nwhich you have-- any gate for which\nthe input and output",
    "start": "809280",
    "end": "816300"
  },
  {
    "text": "wires are these\nor the output wire or the input wires, the\ngate should be satisfied.",
    "start": "816300",
    "end": "824500"
  },
  {
    "text": "That's number 1. And number 2 is what\nwe call nonsignaling.",
    "start": "824500",
    "end": "830941"
  },
  {
    "text": "I'll explain. ",
    "start": "830941",
    "end": "837610"
  },
  {
    "text": "The number 2 says\nthe wire values that he gives here, that the\nextractor, the local assignment",
    "start": "837610",
    "end": "845320"
  },
  {
    "text": "generator gives, the\ndistribution-- so this is a randomized algorithm.",
    "start": "845320",
    "end": "850970"
  },
  {
    "text": "This extractor is a\nrandomized algorithm. Given these wire, he\ngives a distribution",
    "start": "850970",
    "end": "858100"
  },
  {
    "text": "over x star and wire values. The claim is the distribution\nof x star, for example,",
    "start": "858100",
    "end": "865640"
  },
  {
    "text": "doesn't depend on i1 up to il. So the distribution of x\nstar in this computationally",
    "start": "865640",
    "end": "872890"
  },
  {
    "text": "looks the same, no matter\nwhich wires you give. Moreover, the\ndistribution of wi1",
    "start": "872890",
    "end": "881950"
  },
  {
    "text": "doesn't depend on i2 up to il. So let me say this formally.",
    "start": "881950",
    "end": "887350"
  },
  {
    "text": "Formally, for every\nset I and J of size l--",
    "start": "887350",
    "end": "898029"
  },
  {
    "text": "let me-- sorry. For any I and J subset of n-- so\nfor any set of wires of size l--",
    "start": "898030",
    "end": "907460"
  },
  {
    "text": "so take any set of\nwires, like i1 to il. Let me call the first\nset I, the second set J.",
    "start": "907460",
    "end": "915940"
  },
  {
    "text": "And what we know is if you\nlook at the intersection of--",
    "start": "915940",
    "end": "921140"
  },
  {
    "text": "so if you look at-- ",
    "start": "921140",
    "end": "927190"
  },
  {
    "text": "how will I-- one second. Let me just think of notation. If you look at extractor\nan I but only restricted",
    "start": "927190",
    "end": "937390"
  },
  {
    "text": "to the coordinate in I\nintersect J. So the w's--",
    "start": "937390",
    "end": "942710"
  },
  {
    "text": "there's many. There's w for i1, i2. Let's look only at the\nw's in the locations",
    "start": "942710",
    "end": "948350"
  },
  {
    "text": "that are both in I and in J. The distribution of them looks\nlike-- it looks at in distinct",
    "start": "948350",
    "end": "962149"
  },
  {
    "text": "from the distribution. If you looked at these\ncoordinates with set",
    "start": "962150",
    "end": "968420"
  },
  {
    "text": "J. In other words, let's say\nthe intersection of I and J are,",
    "start": "968420",
    "end": "973740"
  },
  {
    "text": "I don't know, some set of wires. Put the set of wires\nin the beginning. ",
    "start": "973740",
    "end": "981110"
  },
  {
    "text": "So if you look at\na set of wires, look at their distribution. Their distribution\ndoes not depend",
    "start": "981110",
    "end": "988700"
  },
  {
    "text": "on what the other wires are. If you look at the\ndistribution of these,",
    "start": "988700",
    "end": "993959"
  },
  {
    "text": "they will look the same whether\nthe rest of the i's were of one form or another form.",
    "start": "993960",
    "end": "999800"
  },
  {
    "text": "At least computationally,\nthey look the same. They need not be\nexactly the same. But nobody can distinguish\nbetween the two.",
    "start": "999800",
    "end": "1007360"
  },
  {
    "text": "And this is\nincluding the x star.",
    "start": "1007360",
    "end": "1012500"
  },
  {
    "text": "So E is like when the\nextractor here, it",
    "start": "1012500",
    "end": "1018100"
  },
  {
    "text": "means x star and the\nwij for I, J in i.",
    "start": "1018100",
    "end": "1029410"
  },
  {
    "text": "So I include the x star. So even with x star,\nthe x star here and the x star here\nare indistinguishable.",
    "start": "1029410",
    "end": "1035949"
  },
  {
    "text": "X star, I always include. Even if it's empty,\nI include x star.",
    "start": "1035950",
    "end": "1041480"
  },
  {
    "text": "So that's a nonsignaling. The distributions are\nindistinguishable. And now I want to\nargue that we get--",
    "start": "1041480",
    "end": "1049600"
  },
  {
    "text": "I have this extractor. I'm going to show you. I'm going to construct\nthis extractor. It's actually very easy to\nconstruct this extractor.",
    "start": "1049600",
    "end": "1055070"
  },
  {
    "text": "So if you give me\na cheating prover, if you give me any prover. Forgot about cheating.",
    "start": "1055070",
    "end": "1060297"
  },
  {
    "text": "You give me a prover, I can\nconstruct this local assignment generator from him. And then all I need to do is\nargue that a local assignment",
    "start": "1060297",
    "end": "1068150"
  },
  {
    "text": "generate implies that I\nhave an assignment for all,",
    "start": "1068150",
    "end": "1073410"
  },
  {
    "text": "like, not just\nlocally consistent, but a fully consistent\nassignment to all the wires that give output 1.",
    "start": "1073410",
    "end": "1079710"
  },
  {
    "text": "And therefore, x needs\nto be in the language. That's the proof strategy. ",
    "start": "1079710",
    "end": "1086240"
  },
  {
    "text": "So what I'm going to do first\nis show you how we get-- so we're going to show\nhow, given any p star,",
    "start": "1086240",
    "end": "1093350"
  },
  {
    "text": "we can generate a local\nassignment generate. We can give local\nassignment to all the wires",
    "start": "1093350",
    "end": "1099740"
  },
  {
    "text": "that are consistent\nand satisfy this kind of nonsignaling property.",
    "start": "1099740",
    "end": "1105299"
  },
  {
    "text": "And then I'm going to show how\nto use this local assignment generator to get soundness.",
    "start": "1105300",
    "end": "1111650"
  },
  {
    "text": "Questions? Yeah? AUDIENCE: Is another issue with\nobtaining this soundness comes",
    "start": "1111650",
    "end": "1119610"
  },
  {
    "text": "from the left side of BARG? PROFESSOR: Actually, the\nsemi-adaptive soundness of BARG",
    "start": "1119610",
    "end": "1126810"
  },
  {
    "text": "is enough for me. It's enough. I don't need to use-- you'll see, actually.",
    "start": "1126810",
    "end": "1132160"
  },
  {
    "text": "I don't need full\nadaptive BARGs. I never use it. It's enough for me that the\nBARG only has semi even though--",
    "start": "1132160",
    "end": "1140320"
  },
  {
    "text": "OK, that's a good point. Note, I'm going to prove\nadaptive soundness. And you're saying,\nwait, but the BARG only",
    "start": "1140320",
    "end": "1145620"
  },
  {
    "text": "has semi-adaptive soundness. Is that enough? Is it enough to use\nonly semi-adaptive BARG and get fully adaptive SNARG?",
    "start": "1145620",
    "end": "1152170"
  },
  {
    "text": "Yes. I will not need the full\nadaptivity of the BARG. We'll see it next.",
    "start": "1152170",
    "end": "1157950"
  },
  {
    "text": "I'll use it. You'll see it doesn't come up. So it's enough. The problem is, to get this,\nthe local assignment, I can get.",
    "start": "1157950",
    "end": "1166620"
  },
  {
    "text": "The problem why,\nthis implies global. So we'll see that. But the semi-- it\nseems counterintuitive.",
    "start": "1166620",
    "end": "1173320"
  },
  {
    "text": "But actually, it's enough. Was there another question? Do you have a question? Yeah? AUDIENCE: Can you remind\nme what the x star is?",
    "start": "1173320",
    "end": "1180120"
  },
  {
    "text": "Is that the same-- PROFESSOR: Oh, good, good, good. This is any-- OK, so good. What is x star? No, sorry.",
    "start": "1180120",
    "end": "1186220"
  },
  {
    "text": "OK. OK, yeah. Let me call it x tilde.",
    "start": "1186220",
    "end": "1193559"
  },
  {
    "text": "Sorry. Let me-- you're right. The extract-- OK.",
    "start": "1193560",
    "end": "1198840"
  },
  {
    "text": "Yeah. So in p star outputs x tilde. It's crooked, kind\nof a cheating x.",
    "start": "1198840",
    "end": "1206050"
  },
  {
    "text": "So let's use\ncrooked, like tilde, to denote a crooked\ncheating thing. And he's also going to output\nsome tilde because his is also",
    "start": "1206050",
    "end": "1216210"
  },
  {
    "text": "crooked. And we want to argue\nthat this crooked x is indistinguishable from the\ncrooked x given by the cheating",
    "start": "1216210",
    "end": "1226500"
  },
  {
    "text": "prover. We're going to-- yeah. Oh, yeah, so I need to\nsay that x was-- sorry. So good.",
    "start": "1226500",
    "end": "1231659"
  },
  {
    "text": "So let's say, again, the local\nassignment generator, it outputs a crooked x with Partial.",
    "start": "1231660",
    "end": "1240020"
  },
  {
    "text": "Assignments to\nsome of the wires, to the L wires such that it's\nconsistent, nonsignaling,",
    "start": "1240020",
    "end": "1249600"
  },
  {
    "text": "and it's also non-- and-- sorry, and x tilde\nis indistinguishable",
    "start": "1249600",
    "end": "1257450"
  },
  {
    "text": "from the x tilde of p star. So p star also outputs x tilde. They look the same.",
    "start": "1257450",
    "end": "1264890"
  },
  {
    "text": "Note, if it was nonadaptive,\nit would be fixed. So then x tilde is\nfixed ahead of time.",
    "start": "1264890",
    "end": "1272090"
  },
  {
    "text": "Nobody will need to\ngenerate them anymore. It's fixed. And the extractor, the\nlocal assignment generator,",
    "start": "1272090",
    "end": "1278149"
  },
  {
    "text": "will only give\nvalues to the wires. But in the adaptive setting,\nthe p star, you give him CRS,",
    "start": "1278150",
    "end": "1287850"
  },
  {
    "text": "he gives you a different x star. The x tilde. Sorry. He gives you a\ndifferent x tilde.",
    "start": "1287850",
    "end": "1294230"
  },
  {
    "text": "So every time he gives\nyou a local window, it will be with respect to a\ndifferent x tilde, possibly,",
    "start": "1294230",
    "end": "1304120"
  },
  {
    "text": "in the adaptive setting. In the nonadaptive\nsetting, it's always going to be with\nthe same x tilde.",
    "start": "1304120",
    "end": "1310720"
  },
  {
    "text": "OK. Any questions? ",
    "start": "1310720",
    "end": "1316630"
  },
  {
    "text": "Let's try to see\nwhy we get local-- how we construct this\nlocal assignment generator.",
    "start": "1316630",
    "end": "1321680"
  },
  {
    "text": "So I have a cheating prover. So fix, so proof.",
    "start": "1321680",
    "end": "1326710"
  },
  {
    "text": "So fix p star fix\na poly size p star.",
    "start": "1326710",
    "end": "1336820"
  },
  {
    "text": "I want to get a window to\nthe-- there's the circuit.",
    "start": "1336820",
    "end": "1342139"
  },
  {
    "text": "We have the circuit C that\nhas x, maybe a witness.",
    "start": "1342140",
    "end": "1347830"
  },
  {
    "text": "I want to use the C, the\np, the cheating prover.",
    "start": "1347830",
    "end": "1352909"
  },
  {
    "text": "So he's going to give me-- OK, so fixed p star. For any CRS, he's\ngoing to give me x.",
    "start": "1352910",
    "end": "1358830"
  },
  {
    "text": "I'm going to get from\nhim in x and a window to some of the wires\nof the circuit. So let's see how.",
    "start": "1358830",
    "end": "1365280"
  },
  {
    "text": "So here's my extractor. The extractor or\nthe local assignment generator-- it's going to\nuse p star as an oracle.",
    "start": "1365280",
    "end": "1372169"
  },
  {
    "text": "He's going to make\nuse of p star. He's going to get i1 up to il.",
    "start": "1372170",
    "end": "1377210"
  },
  {
    "text": "What does he do? He wants to get the\nvalues of these wires. What does he do?",
    "start": "1377210",
    "end": "1383070"
  },
  {
    "text": "He's going to run p star. He's going to run p star\non a CRS that he chooses.",
    "start": "1383070",
    "end": "1388350"
  },
  {
    "text": "So he's going to generate CRS.",
    "start": "1388350",
    "end": "1394130"
  },
  {
    "text": "We'll see how in a second. And then he's going to\nrun p star on the CRS",
    "start": "1394130",
    "end": "1399470"
  },
  {
    "text": "to get a value and a SNARG. And then he's going to extract\nthe wires from this hash value.",
    "start": "1399470",
    "end": "1408710"
  },
  {
    "text": "So let's see. So how does he generate the CRS? CRS is going to be a pi for\nCRS BARG and a hash key.",
    "start": "1408710",
    "end": "1419540"
  },
  {
    "text": "So he's going to\ngenerate hash key",
    "start": "1419540",
    "end": "1426470"
  },
  {
    "text": "by running gen and these\nlocation, i1 up to il.",
    "start": "1426470",
    "end": "1431490"
  },
  {
    "text": "So let me actually-- he's\ngoing to first generate hash key, and trapdoor, and gen\nsome extractable hash with 1",
    "start": "1431490",
    "end": "1445010"
  },
  {
    "text": "to the lambda number of wires\nin the circuit and i1 up to il.",
    "start": "1445010",
    "end": "1450900"
  },
  {
    "text": "These are the wires\nhe wants to extract because he has i1 up to il.",
    "start": "1450900",
    "end": "1456420"
  },
  {
    "text": "He wants to extract the\nvalues of these wires. So he's going to give\nyou a hash key that's extractable on these locations.",
    "start": "1456420",
    "end": "1464210"
  },
  {
    "text": "And then he's also\ngoing to generate gen for the BARG to get CRA BARG.",
    "start": "1464210",
    "end": "1475529"
  },
  {
    "text": "He's just going to\ndo this honestly. Here, he has 1 to\nthe lambda k and n.",
    "start": "1475530",
    "end": "1480585"
  },
  {
    "text": " This is n prime. The n prime, he's going\nto generate exactly as",
    "start": "1480585",
    "end": "1489090"
  },
  {
    "text": "in the construction. And then he runs. Now, run p star with\nhash key and CRS BARG.",
    "start": "1489090",
    "end": "1502140"
  },
  {
    "text": "That's the CRS he gives p star.  And get v and pi BARG.",
    "start": "1502140",
    "end": "1511299"
  },
  {
    "text": "That's what the\np star gives you.",
    "start": "1511300",
    "end": "1516330"
  },
  {
    "text": "Now, if this is\nrejected, start again. So if pi BARG--",
    "start": "1516330",
    "end": "1526200"
  },
  {
    "text": "or if v and pi BARG--",
    "start": "1526200",
    "end": "1531539"
  },
  {
    "text": "so if the verifier with input-- oh, wait. Sorry.",
    "start": "1531540",
    "end": "1536850"
  },
  {
    "text": "X star also, x tilde. Sorry. So the p star gives what?",
    "start": "1536850",
    "end": "1542440"
  },
  {
    "text": "Some x tilde because\nit's adaptive. He gives him some x and a proof. The proof is a hash\nvalue and the BARG.",
    "start": "1542440",
    "end": "1550480"
  },
  {
    "text": "That's what the proof is. Now he checks. If v-- if the verifier\nrejects this proof--",
    "start": "1550480",
    "end": "1555809"
  },
  {
    "text": "if it's not a good proof-- so if v, given CRS--",
    "start": "1555810",
    "end": "1560880"
  },
  {
    "text": "which is these two. This is the CRS-- given CRS, given x\ntilde, and given pi--",
    "start": "1560880",
    "end": "1567600"
  },
  {
    "text": "this is pi-- outputs ,\nif it rejects, try again.",
    "start": "1567600",
    "end": "1574235"
  },
  {
    "text": " What do I mean by try again?",
    "start": "1574235",
    "end": "1580960"
  },
  {
    "text": "Again, generate a hash\nkey, generate a BARG, run. If this is accepted--\nif it's rejected,",
    "start": "1580960",
    "end": "1587850"
  },
  {
    "text": "try again until you\nget something good.",
    "start": "1587850",
    "end": "1594150"
  },
  {
    "text": "Now, OK-- until we\nget something good.",
    "start": "1594150",
    "end": "1599670"
  },
  {
    "text": "Once you get something\ngood, you're happy. But then, what do you do? You output.",
    "start": "1599670",
    "end": "1605940"
  },
  {
    "text": "So try again. If success, then\noutput the x tilde.",
    "start": "1605940",
    "end": "1620510"
  },
  {
    "text": "And what wire values? Extract from the v. So remember, this V. Is hash of\nall the wires of the circuit.",
    "start": "1620510",
    "end": "1627680"
  },
  {
    "text": "Extract. You'll get the wires\ncorresponding to i1 up to il. So output this, and output\nextract with trapdoor the value",
    "start": "1627680",
    "end": "1641529"
  },
  {
    "text": "v to get wi1 up to wil. That's it.",
    "start": "1641530",
    "end": "1647830"
  },
  {
    "text": "That's what the extractor-- the\nlocal assignment generator does. AUDIENCE: Why can you do this? The slide was adaptive.",
    "start": "1647830",
    "end": "1654470"
  },
  {
    "text": "So if you change the CRS,\nwhy can you fix the x? PROFESSOR: No, it's not fixed. You're right.",
    "start": "1654470",
    "end": "1659602"
  },
  {
    "text": "So what do I do? I generate hash key and a BARG. I run him.",
    "start": "1659602",
    "end": "1665030"
  },
  {
    "text": "He gives me x tilde. If I'm happy with this\nproof, I output x tilde.",
    "start": "1665030",
    "end": "1670790"
  },
  {
    "text": "The x tilde depends on the CRS. So given i1 to il, I'm going to\nget a different x tilde for i1",
    "start": "1670790",
    "end": "1678035"
  },
  {
    "text": "up to il. So every time I get i1 to il,\nI generate a CRS for my SNARG.",
    "start": "1678035",
    "end": "1685809"
  },
  {
    "text": "I run the prover. I get x tilde and a proof. If I'm happy with the\nproof, I output x tilde",
    "start": "1685810",
    "end": "1692830"
  },
  {
    "text": "and extracted wires. AUDIENCE: So these\nare just wire values. They're not witnesses. PROFESSOR: Yeah. No, they're wire value.",
    "start": "1692830",
    "end": "1697890"
  },
  {
    "text": "Sorry. These are not witnesses. Yeah, I use W for what\nwires, but it's also witness.",
    "start": "1697890",
    "end": "1704740"
  },
  {
    "text": " Sorry. ",
    "start": "1704740",
    "end": "1711362"
  },
  {
    "text": "A bit of abuse of notation. Sorry. These are wire values. Forget about witness. There's no witnesses\nnow, just wires.",
    "start": "1711362",
    "end": "1717990"
  },
  {
    "text": "Yeah. Yeah? AUDIENCE: If you like\nrejection sampling until you get the\nverifier to accept, then how would the distribution\nof x going to be",
    "start": "1717990",
    "end": "1725090"
  },
  {
    "text": "the distribution of p star? PROFESSOR: OK. OK. That's good. So I'm going to answer.",
    "start": "1725090",
    "end": "1731564"
  },
  {
    "text": "Did you-- AUDIENCE: It's a\ndifferent question. PROFESSOR: A different question. OK. Let me first answer\nthis question. ",
    "start": "1731564",
    "end": "1738680"
  },
  {
    "text": "The question was-- first,\nthere's a couple of issues. First of all, how many times\nam I going to do this rejection",
    "start": "1738680",
    "end": "1744260"
  },
  {
    "text": "sampling/ Am I going to run\nforever What's going on here? And the answer is no.",
    "start": "1744260",
    "end": "1749485"
  },
  {
    "text": "Actually, I'm not\ngoing to run forever. So fix a p star\nthat, let's say, is accepted with non-negligible\nprobability epsilon.",
    "start": "1749485",
    "end": "1765809"
  },
  {
    "text": "Epsilon is non-negligible. I'm going to try again. At most, I know poly in lambda\nand 1 over epsilon times.",
    "start": "1765810",
    "end": "1778520"
  },
  {
    "text": " So I'm going to do this only\npolynomially many times.",
    "start": "1778520",
    "end": "1786390"
  },
  {
    "text": "Think of epsilon as\n1 over poly lambda. So I'm going to run in\ntime poly in lambda.",
    "start": "1786390",
    "end": "1792450"
  },
  {
    "text": "OK. Now, given that-- and OK. So the first thing\nI want to argue",
    "start": "1792450",
    "end": "1798419"
  },
  {
    "text": "is the probability that I will-- and so I'm going to run\nthe most poly lambda in 1",
    "start": "1798420",
    "end": "1803490"
  },
  {
    "text": "over epsilon time. That's it. And you say, what if\nall of them are reject? Then I'm going to say,\nOK, I was defeated.",
    "start": "1803490",
    "end": "1811230"
  },
  {
    "text": "What is the probability\nthat I'll be defeated? Negligible because each\ntime I'm starting fresh",
    "start": "1811230",
    "end": "1817410"
  },
  {
    "text": "and the probability\nof defeat is only-- is 1 over--",
    "start": "1817410",
    "end": "1824050"
  },
  {
    "text": "OK, I'm accepted. OK, I'm accepted with\nprobability epsilon.",
    "start": "1824050",
    "end": "1832649"
  },
  {
    "text": "If I repeat it lambda\nover epsilon times, by just concentration\nbound, by Chernoff bound,",
    "start": "1832650",
    "end": "1839620"
  },
  {
    "text": "I'm going to be\naccepted in one of them with very, very\nhigh probability-- exponential, like,\nexponential in 2",
    "start": "1839620",
    "end": "1846390"
  },
  {
    "text": "to the minus lambda or\nsomething like that. So if I repeat it enough\ntimes, one of them,",
    "start": "1846390",
    "end": "1852720"
  },
  {
    "text": "I'm going to the\nprobability of BARG of me being defeated is negligible.",
    "start": "1852720",
    "end": "1859716"
  },
  {
    "text": "So but now, going\nback to your question, the question is,\nhow do I know that x",
    "start": "1859716",
    "end": "1865500"
  },
  {
    "text": "tilde here has the same\ndistribution as the x tilde of p star? Yeah, that's the question.",
    "start": "1865500",
    "end": "1871690"
  },
  {
    "text": "So good. So actually, I was a bit sloppy.",
    "start": "1871690",
    "end": "1879140"
  },
  {
    "text": "When I say x tilde is\nin the signal from this, I mean, in this thing for x\ntilde condition on accept.",
    "start": "1879140",
    "end": "1885500"
  },
  {
    "text": "Sorry, yeah. This is condition\non p star accepting.",
    "start": "1885500",
    "end": "1893710"
  },
  {
    "text": "So I can assume\nwithout loss of-- yeah. So let's think of p star\neither as outputting",
    "start": "1893710",
    "end": "1899720"
  },
  {
    "text": "but there's no point in\nhim giving a bad proof. He's going to be rejected. Either he's defeat or\ngiving x with a good proof.",
    "start": "1899720",
    "end": "1907315"
  },
  {
    "text": " So I always output x tilde with\nprobability 1 minus negligible.",
    "start": "1907315",
    "end": "1914898"
  },
  {
    "text": "And this x tilde is\ngoing to be distributed like x tilde conditioned on\nthe p star not a boarding.",
    "start": "1914898",
    "end": "1921470"
  },
  {
    "text": "Yeah? AUDIENCE: So then\nthose two distributions are actually identical right\nup to the slight probability that you give up at the end?",
    "start": "1921470",
    "end": "1927730"
  },
  {
    "text": "PROFESSOR: No. OK, so the question was,\nis the x tilde of p star actually identical to the\nx tilde of the extractor?",
    "start": "1927730",
    "end": "1935720"
  },
  {
    "text": "And the answer is not\nquite because the x tilde of the extractor runs gen\nwith these specific i's.",
    "start": "1935720",
    "end": "1942580"
  },
  {
    "text": "And x tilde is run with p\nstar with, let's say, 1, 2, 3, up to l, I don't\nknow, like, fixed.",
    "start": "1942580",
    "end": "1949150"
  },
  {
    "text": "And the I's change. That's the only difference. And that's why it's\nindistinguishable because the p star doesn't know.",
    "start": "1949150",
    "end": "1954860"
  },
  {
    "text": "Because of the\nindex hiding, p star has no idea what the\nindex-- which indices",
    "start": "1954860",
    "end": "1962620"
  },
  {
    "text": "are sitting behind the hash key. So the x tilde he\ngives is the same.",
    "start": "1962620",
    "end": "1968480"
  },
  {
    "text": "It's indistinguishable. Nikon, did you-- are you-- AUDIENCE: I just to make\nsure from the last point.",
    "start": "1968480",
    "end": "1975267"
  },
  {
    "text": "Each trial here will work\nwith probability epsilon minus negligible because\nof the index hiding, right? PROFESSOR: Exactly.",
    "start": "1975267",
    "end": "1980780"
  },
  {
    "text": "You're right. Yeah, you're right. Exactly. Epsilon minus--\nthat's why the epsilon has to be non-negligible,\nbecause you lose negligible.",
    "start": "1980780",
    "end": "1988580"
  },
  {
    "text": "And it needs to be negligible\ncompared to the epsilon.",
    "start": "1988580",
    "end": "1993919"
  },
  {
    "text": "AUDIENCE: So my question\nwas, the extract algorithm for the SEH is only\nrequired to extract when V is an eval of x, right?",
    "start": "1993920",
    "end": "2002679"
  },
  {
    "text": "Is that true, or\nis that not true? PROFESSOR: OK. One second. ",
    "start": "2002680",
    "end": "2012010"
  },
  {
    "text": "Good point. No. OK. No.",
    "start": "2012010",
    "end": "2017500"
  },
  {
    "text": "The completeness was assuming-- holds. But I didn't write\nit actually down.",
    "start": "2017500",
    "end": "2027490"
  },
  {
    "text": "Good point, Nikon. Thank you. ",
    "start": "2027490",
    "end": "2037059"
  },
  {
    "text": "The sum of extractable hash-- I didn't say soundness of the-- I didn't write the\nsoundness of this extract.",
    "start": "2037060",
    "end": "2043815"
  },
  {
    "text": " The extract has the\nfollowing property.",
    "start": "2043815",
    "end": "2050368"
  },
  {
    "start": "2050369",
    "end": "2058690"
  },
  {
    "text": "If the cheating\nprover gives any--",
    "start": "2058690",
    "end": "2063960"
  },
  {
    "text": "hold on. Let me think for a second. ",
    "start": "2063960",
    "end": "2070119"
  },
  {
    "text": "If the cheating prover\ngives an opening-- if you're extract-- If the hash key--",
    "start": "2070120",
    "end": "2076960"
  },
  {
    "text": "OK. Thank you. If the hash key is\ngenerated with gen of i",
    "start": "2076960",
    "end": "2081969"
  },
  {
    "text": "and if an adversary generated an\nopening of i, a valid opening--",
    "start": "2081969",
    "end": "2088790"
  },
  {
    "text": "so he successfully opened the\ni-th bit somehow with a b-- then",
    "start": "2088790",
    "end": "2095110"
  },
  {
    "text": "the extract will work\nand give you that same b. So let me write it down because\nactually we need it here.",
    "start": "2095110",
    "end": "2102900"
  },
  {
    "start": "2102900",
    "end": "2119150"
  },
  {
    "text": "For any A adversary and for\nevery i, the probability",
    "start": "2119150",
    "end": "2128779"
  },
  {
    "text": "that A and hash key, where the\nhash key is generated with i-- so hash key, trapdoor, they're\ngenerated with gen with 1",
    "start": "2128780",
    "end": "2140930"
  },
  {
    "text": "to the lambda n and i. If he managed to give me\na value adversarial value,",
    "start": "2140930",
    "end": "2149390"
  },
  {
    "text": "but he manages to open\nwith a b and rho--",
    "start": "2149390",
    "end": "2157339"
  },
  {
    "text": "let me call it bi and row i-- such that the verifier\naccepted such that there--",
    "start": "2157340",
    "end": "2165690"
  },
  {
    "text": "so the probability\nthat he gives me a tuple that verifies-- so\nhash key vib rho is one.",
    "start": "2165690",
    "end": "2179840"
  },
  {
    "text": "And but extraction\nfails is negligible. So the probability that\nthis accepts but extract",
    "start": "2179840",
    "end": "2190010"
  },
  {
    "text": "is not b, bi is negligible.",
    "start": "2190010",
    "end": "2198076"
  },
  {
    "text": " So if you open,\nthere must be valid.",
    "start": "2198076",
    "end": "2203760"
  },
  {
    "text": "And if you think about\nthe construction, if you open it, like, everything\nis in the correct encryption, encryption, encryption, the\nencryption must be correct,",
    "start": "2203760",
    "end": "2210912"
  },
  {
    "text": "and the extractor\nwill decrypt it. ",
    "start": "2210912",
    "end": "2218425"
  },
  {
    "text": "So if it doesn't\nopen anything, v can be whatever, you may\nnot be able to extract. But as long as he gave you\nthe correct path, then OK.",
    "start": "2218425",
    "end": "2229062"
  },
  {
    "text": "So we'll use it here. Thank you. OK. ",
    "start": "2229062",
    "end": "2235030"
  },
  {
    "text": "So now let's see why is-- but this is the\nextraction procedure.",
    "start": "2235030",
    "end": "2240630"
  },
  {
    "text": "We'll analyze it in a second. We'll see why this is used. But again, let's just recall.",
    "start": "2240630",
    "end": "2247620"
  },
  {
    "text": "So what is the local\nassignment generator? It takes l wires.",
    "start": "2247620",
    "end": "2252810"
  },
  {
    "text": "He will generate a CRS and\ngive it to the cheating prover. The CRS he generates consists\nof a hash key and a BARG",
    "start": "2252810",
    "end": "2260790"
  },
  {
    "text": "and a CRS for the BARG. The CRS for the BARG,\nhe just generates. And the CRS for the\nhash key, he generates",
    "start": "2260790",
    "end": "2266760"
  },
  {
    "text": "with a trapdoor with\nrespect to the wires that he needs to extract.",
    "start": "2266760",
    "end": "2273599"
  },
  {
    "text": "He gives this to the prover. And the prover gives\nhim a hash value",
    "start": "2273600",
    "end": "2279210"
  },
  {
    "text": "that's extracted on these\nwires and a BARG proof. If the BARG proof is\nrejected, he starts all over.",
    "start": "2279210",
    "end": "2285880"
  },
  {
    "text": "So we're going to do it until\nwe have something accepted. Once it's accepted, we're going\nto just extract these wires",
    "start": "2285880",
    "end": "2293480"
  },
  {
    "text": "because we have the trapdoor. The extractor has the trapdoor. We're going to-- or\nthe e here, we're",
    "start": "2293480",
    "end": "2299420"
  },
  {
    "text": "going to extract the wires. And that's what we're\ngoing to output-- the x tilde and the wires.",
    "start": "2299420",
    "end": "2307349"
  },
  {
    "text": "So now we need to\nargue nonsignaling, and we need to argue\nlocal consistency.",
    "start": "2307350",
    "end": "2312740"
  },
  {
    "text": "Any questions before\nI go ahead and do it? ",
    "start": "2312740",
    "end": "2318200"
  },
  {
    "text": "So let's see. Let's start with\nlocal consistency. Why are things\nlocally consistent?",
    "start": "2318200",
    "end": "2326210"
  },
  {
    "text": "So I claim that local\nconsistency follows from the soundness of the BARG.",
    "start": "2326210",
    "end": "2332220"
  },
  {
    "text": "So let's see why this is. ",
    "start": "2332220",
    "end": "2349329"
  },
  {
    "text": "What do we have here? ",
    "start": "2349330",
    "end": "2357370"
  },
  {
    "text": "OK. Oh, well. I'm just going to-- we're going to need\nit, but it's OK.",
    "start": "2357370",
    "end": "2364630"
  },
  {
    "text": "OK, OK. ",
    "start": "2364630",
    "end": "2370380"
  },
  {
    "text": "So local consistency,\nI want to argue, follows from the\ncorrectness of the BARG--",
    "start": "2370380",
    "end": "2376150"
  },
  {
    "text": "from the soundness of the BARG. Why? Suppose, for\ncontradiction-- so suppose",
    "start": "2376150",
    "end": "2391660"
  },
  {
    "text": "that the extractor output\nx tilde and L wire are",
    "start": "2391660",
    "end": "2396760"
  },
  {
    "text": "values that are not consistent. So the L wire values\nare not consistent.",
    "start": "2396760",
    "end": "2402280"
  },
  {
    "text": "Then what does it mean\nthey're not consistent? There's one gate that\nthey don't respect.",
    "start": "2402280",
    "end": "2410300"
  },
  {
    "text": "Now, remember-- so OK. So there's one gate\nthat they don't respect.",
    "start": "2410300",
    "end": "2416760"
  },
  {
    "text": "So suppose E and input i1\nup to il output w1 up to wi1",
    "start": "2416760",
    "end": "2430850"
  },
  {
    "text": "up to wil that do not respect\nsome gate-- let's fix the gate--",
    "start": "2430850",
    "end": "2444840"
  },
  {
    "text": "some gate J with\nnon-negligible probability. If there's one gate doesn't\nrespect, choose one at random.",
    "start": "2444840",
    "end": "2451530"
  },
  {
    "text": "So it won't respect this\nrandom one with probability. I mean, there exists one gate\nthat's not respect probability 1 over poly.",
    "start": "2451530",
    "end": "2458312"
  },
  {
    "text": "So suppose there\nexists some gate J that this does not with\nprobability 1 over poly.",
    "start": "2458312",
    "end": "2467390"
  },
  {
    "text": "Now let's look at the BARG. What does the BARG say? The BARG tells me that all\nthe gates are respected.",
    "start": "2467390",
    "end": "2477859"
  },
  {
    "text": "So what I'm going to do in\nthe BARG, I'm going to-- so remember, in the BARG,\nI have this somewhere.",
    "start": "2477860",
    "end": "2486690"
  },
  {
    "text": "Now I'm going to the\nadaptive versus the why-- some are adaptive. Soundness of BARG is enough.",
    "start": "2486690",
    "end": "2492390"
  },
  {
    "text": "Why? If there some gate J that's not\nrespect probability 1 over poly,",
    "start": "2492390",
    "end": "2497960"
  },
  {
    "text": "in the BARG construction in the\nCRS, I'm going to hardwire--",
    "start": "2497960",
    "end": "2505130"
  },
  {
    "text": "sorry. OK, let me construct a\ncheating prover for the BARG. So we're going to\nconstruct a cheating",
    "start": "2505130",
    "end": "2514340"
  },
  {
    "text": "prover for BARG that cheats.",
    "start": "2514340",
    "end": "2523295"
  },
  {
    "text": " He's going to be somewhere\nadaptive soundness,",
    "start": "2523295",
    "end": "2529180"
  },
  {
    "text": "and he's going to cheat\non J and this specific J.",
    "start": "2529180",
    "end": "2535359"
  },
  {
    "text": "I don't care about\nwhat the CRS is yet. I'm going to be semi-adaptive. So I'm going to tell you, my\ncheating prover, he may choose",
    "start": "2535360",
    "end": "2543060"
  },
  {
    "text": "the x1 star up to xk star. The actual instance is later.",
    "start": "2543060",
    "end": "2548339"
  },
  {
    "text": "But which one he's going to\nchoose, he's going to cheat on, I'm going to tell you now. It's J. So it's going to\nbe going to be nonadaptive",
    "start": "2548340",
    "end": "2555570"
  },
  {
    "text": "and where he's cheating. That's the semi-adaptive. Yeah? AUDIENCE: But for that\nlocal consistency,",
    "start": "2555570",
    "end": "2562290"
  },
  {
    "text": "is the statement that\nthe instructor output-- is that the same as the\nprover is trying to cheat on?",
    "start": "2562290",
    "end": "2568750"
  },
  {
    "text": " PROFESSOR: So you're\nasking, is there a match? How do we match these two?",
    "start": "2568750",
    "end": "2575190"
  },
  {
    "text": "OK, so wait. Let me tell you the\ncheating prover. So I'm going to construct\na cheating prover-- let's say p double star for the BARG.",
    "start": "2575190",
    "end": "2582569"
  },
  {
    "text": "Here's what my p\ndouble star does. My p double star,\nhe gets CRS of BARG.",
    "start": "2582570",
    "end": "2588710"
  },
  {
    "text": " What he's going\nto do, he's going to run piece-- he's going to\ngenerate hash key on his own.",
    "start": "2588710",
    "end": "2601900"
  },
  {
    "text": "And he's going to run p\nstar, and the CRS BARG,",
    "start": "2601900",
    "end": "2611279"
  },
  {
    "text": "and the hash key\nthat he gives him. He's going to get v and pi BARG.",
    "start": "2611280",
    "end": "2617540"
  },
  {
    "text": " And now he's going to cheat.",
    "start": "2617540",
    "end": "2624000"
  },
  {
    "text": "P double star will cheat. And here's the\ninstances that he gives.",
    "start": "2624000",
    "end": "2629109"
  },
  {
    "text": "So he's going to give\nthe instances adaptively. The instances are going to\nbe hash key V and J for J",
    "start": "2629110",
    "end": "2637839"
  },
  {
    "text": "goes from 1 to k,\nthe number of gates.",
    "start": "2637840",
    "end": "2643262"
  },
  {
    "text": "These are going to\nbe the instance. So this is going to\nbe xj star or xi.",
    "start": "2643262",
    "end": "2649880"
  },
  {
    "text": "Sorry. That's a certain go I.",
    "start": "2649880",
    "end": "2657130"
  },
  {
    "text": "So that's the xi star. And the BARG is\ngoing to be this. ",
    "start": "2657130",
    "end": "2665560"
  },
  {
    "text": "So that's how I'm cheating. I have k instances that\nI chose adaptively.",
    "start": "2665560",
    "end": "2674690"
  },
  {
    "text": "But I'm arguing\nthat the j-th one, which corresponds to\ngate j, is actually--",
    "start": "2674690",
    "end": "2682420"
  },
  {
    "text": "it's false. This xj star is\nnot in the language because I'm binding\non this j, and what's",
    "start": "2682420",
    "end": "2690520"
  },
  {
    "text": "sitting there is false. So even if you're\napart from this just does not exist of an opening.",
    "start": "2690520",
    "end": "2696700"
  },
  {
    "text": "Because I'm binding on\nthese locations, what I know from the binding\ncondition, which is here,",
    "start": "2696700",
    "end": "2704480"
  },
  {
    "text": "what I know from the\nbinding condition-- there is no opening\nfor the wrong value. It just doesn't exist.",
    "start": "2704480",
    "end": "2710540"
  },
  {
    "text": "So there is no\nwitness for xj star.",
    "start": "2710540",
    "end": "2716560"
  },
  {
    "text": "But look, I have p double star\nmanaged to come up with a proof even though before, in\nthe semi-adaptive way,",
    "start": "2716560",
    "end": "2724360"
  },
  {
    "text": "he gave me a j, a gate. Before I got even the\nCRS, he gave me a gate",
    "start": "2724360",
    "end": "2729430"
  },
  {
    "text": "and nevertheless\nmanaged to produce a BARG that all my x star--\nand a bunch of x stars.",
    "start": "2729430",
    "end": "2739750"
  },
  {
    "text": "And the BARG is satisfied. But the j-th instance\ndoes not have a witness--",
    "start": "2739750",
    "end": "2748390"
  },
  {
    "text": "contradiction. ",
    "start": "2748390",
    "end": "2754520"
  },
  {
    "text": "So the local consistency\nreally follows from the soundness of the BARG.",
    "start": "2754520",
    "end": "2760230"
  },
  {
    "text": "And all we need is a\nsemi-adaptive soundness of the BARG because if you're\nsomewhere in that local",
    "start": "2760230",
    "end": "2768710"
  },
  {
    "text": "consistency-- not\nlocal consistent, even if you don't need to be--",
    "start": "2768710",
    "end": "2774290"
  },
  {
    "text": "even if there's one\ngate on which you're not local consistency only\nwith probability epsilon, epsilon could be 1 over k.",
    "start": "2774290",
    "end": "2780350"
  },
  {
    "text": "It can be very small.  The claim is on\neach and every gate.",
    "start": "2780350",
    "end": "2787230"
  },
  {
    "text": "Local consistency holds\nprobability 1 minus negligible because otherwise, take\nthat gate, and on that gate,",
    "start": "2787230",
    "end": "2794960"
  },
  {
    "text": "we're going to\ncheat in the BARG. That's the instance,\nin which we're going to cheat on the BARG. ",
    "start": "2794960",
    "end": "2801980"
  },
  {
    "text": "So that's local consistency. And now you can ask, what\nabout the nonsignaling?",
    "start": "2801980",
    "end": "2809100"
  },
  {
    "text": "And the nonsignaling really\nfollows from the fact from the index hiding.",
    "start": "2809100",
    "end": "2815045"
  },
  {
    "text": " Are we OK with\nlocal consistency?",
    "start": "2815045",
    "end": "2823320"
  },
  {
    "text": "OK. Any questions before I run-- actually, yeah? AUDIENCE: Is the i\n[? changed ?] [INAUDIBLE]?",
    "start": "2823320",
    "end": "2830177"
  },
  {
    "text": "PROFESSOR: OK. Oh, sorry. I changed-- yeah, sorry. This is J. Thanks. Sorry about that.",
    "start": "2830177",
    "end": "2835420"
  },
  {
    "text": "This is-- yeah. So I give you all-- this\nis an index language. So I give the instances\nare-- oh, ah, sorry.",
    "start": "2835420",
    "end": "2844000"
  },
  {
    "text": "No. These are all for all i. Just J is a specific\nJ, so I don't want to--",
    "start": "2844000",
    "end": "2851550"
  },
  {
    "text": "J is the one that\nI'm binding on. But I give you the\ninstances are--",
    "start": "2851550",
    "end": "2858430"
  },
  {
    "text": "yeah. All of them are i. Sorry. J is the specific one on\nwhich I'm going to be--",
    "start": "2858430",
    "end": "2864630"
  },
  {
    "text": "I'm going to cheat on. All of them are i. Sorry about the-- yeah. ",
    "start": "2864630",
    "end": "2873720"
  },
  {
    "text": "Any other questions? ",
    "start": "2873720",
    "end": "2879560"
  },
  {
    "text": "So now the question is, now,\nwhat about nonsignaling? And nonsignaling-- I don't\nwant to go into a lot of depth.",
    "start": "2879560",
    "end": "2887800"
  },
  {
    "text": "But let me be hand-wavy here. The idea of why we're non--",
    "start": "2887800",
    "end": "2894480"
  },
  {
    "text": "so we want to argue that the\nlocal assignment generator--",
    "start": "2894480",
    "end": "2899609"
  },
  {
    "text": "the assignment values that he\ngives for any subset of wires",
    "start": "2899610",
    "end": "2905520"
  },
  {
    "text": "do not depend on the other\nwires that is given to him. So if we look, if the extractor\nis given a bunch of wires",
    "start": "2905520",
    "end": "2914880"
  },
  {
    "text": "and you look at the\nassignment and a subset, the distribution of the\nassignment that you get,",
    "start": "2914880",
    "end": "2922570"
  },
  {
    "text": "it looks the same no\nmatter what the other-- the rest of the wires are.",
    "start": "2922570",
    "end": "2928680"
  },
  {
    "text": "And why is that? It just follows\nfrom the fact that--",
    "start": "2928680",
    "end": "2935859"
  },
  {
    "text": "I just erased it here. So it follows from the fact that\nwhen we do a sum or extractable",
    "start": "2935860",
    "end": "2944560"
  },
  {
    "text": "hash with many--\nwhen we construct a somewhat extractable\nhash with many indices that",
    "start": "2944560",
    "end": "2950890"
  },
  {
    "text": "were extractable\non many indices, we want to have the property\nthat even if we extract it",
    "start": "2950890",
    "end": "2957670"
  },
  {
    "text": "on some indices, the\nindex hiding still",
    "start": "2957670",
    "end": "2964690"
  },
  {
    "text": "holds for the other. So in other words,\nthink of the way we're going to construct the\nsomewhat extractable hash",
    "start": "2964690",
    "end": "2970150"
  },
  {
    "text": "is by repetition. We're going to repeat\nit many, many times. So even if you saw if I\nextracted wire i1, wire i2, wire",
    "start": "2970150",
    "end": "2980680"
  },
  {
    "text": "i3, the indices behind the other\nwires are completely hidden.",
    "start": "2980680",
    "end": "2988339"
  },
  {
    "text": "So here, when you\nlook at extract",
    "start": "2988340",
    "end": "2993730"
  },
  {
    "text": "and a subset of witnesses,\nhow do you find extract these? How does the local assignment\ngenerator generate these wires?",
    "start": "2993730",
    "end": "3003309"
  },
  {
    "text": "He generates these wires using\nthe corresponding trapdoors without the other trapdoors.",
    "start": "3003310",
    "end": "3008740"
  },
  {
    "text": "So he actually has no idea. ",
    "start": "3008740",
    "end": "3013890"
  },
  {
    "text": "This should not signal\nanything about the value of the other wires.",
    "start": "3013890",
    "end": "3019680"
  },
  {
    "text": "So again, let me say it again. Maybe I didn't say\nit quite right.",
    "start": "3019680",
    "end": "3024700"
  },
  {
    "text": "But the local\nassignment generator, when he runs the cheating\nprover and the cheating prover,",
    "start": "3024700",
    "end": "3034299"
  },
  {
    "text": "when you extract\nfrom the cheating prover the value of\nsome of the wires,",
    "start": "3034300",
    "end": "3040299"
  },
  {
    "text": "you need only to do that using\nthe trapdoors for these wires. The cheating prover\nhas no idea what",
    "start": "3040300",
    "end": "3047220"
  },
  {
    "text": "the other wires-- what the trap\ndoor of the other wires are. So these values should\nnot depend at all",
    "start": "3047220",
    "end": "3053890"
  },
  {
    "text": "about the other indices used\nin the other repetitions.",
    "start": "3053890",
    "end": "3059900"
  },
  {
    "text": "Otherwise, you've broken the\ntiming for these repetitions.",
    "start": "3059900",
    "end": "3065039"
  },
  {
    "text": "So the point is the nonsignaling\nreally follows in a sense",
    "start": "3065040",
    "end": "3072640"
  },
  {
    "text": "from the nonsignaling in the\nsomewhat extractable hash. The somewhat\nextractable hash, when",
    "start": "3072640",
    "end": "3078340"
  },
  {
    "text": "we repeat, when we do\nrepetition, what we can argue is any cheating prover\nwho, given a hash key,",
    "start": "3078340",
    "end": "3088660"
  },
  {
    "text": "generates a value. If you extract some of the\nwires, the value you get",
    "start": "3088660",
    "end": "3097570"
  },
  {
    "text": "do not depend on\nthe other indices. This is a property of the\nsomewhat extractable hash.",
    "start": "3097570",
    "end": "3104300"
  },
  {
    "text": "So nonsignaling here\nfollows directly from the nonsignaling of the\nsomewhat extractable hash.",
    "start": "3104300",
    "end": "3110920"
  },
  {
    "text": "So I'm running out of time. I don't want to go too\nmuch in depth because I",
    "start": "3110920",
    "end": "3116079"
  },
  {
    "text": "think it's not as interesting. I want to actually go and talk\nabout why is this not sufficient",
    "start": "3116080",
    "end": "3122860"
  },
  {
    "text": "and when is it sufficient.  So let's call-- let's say--",
    "start": "3122860",
    "end": "3129050"
  },
  {
    "text": "OK, so we have-- suppose we have a\ncheating prover. We manage to construct from him\nthis local assignment generator.",
    "start": "3129050",
    "end": "3137680"
  },
  {
    "text": "So we have the circuit. We have a cheating prover. He gave me an x.",
    "start": "3137680",
    "end": "3144280"
  },
  {
    "text": "We want to argue. It's in the language. If he convinced me, it\nmust be in the language. That's what soundness means.",
    "start": "3144280",
    "end": "3150250"
  },
  {
    "text": "What do we know? We know when we look at any\nwindow, everything looks good. And when you look at the window\nthat contains the output,",
    "start": "3150250",
    "end": "3157130"
  },
  {
    "text": "it's 1. Does that mean we can\nhave an entire assignment",
    "start": "3157130",
    "end": "3164337"
  },
  {
    "text": "to all the wires that everything\nis consistent, in which case, we can then sound?",
    "start": "3164337",
    "end": "3170180"
  },
  {
    "text": "So can we piece these\nthings together? ",
    "start": "3170180",
    "end": "3182450"
  },
  {
    "text": "So the answer is yes and no. OK. So in general for\nnp, the answer is no.",
    "start": "3182450",
    "end": "3189925"
  },
  {
    "text": "We don't know how to\npiece it together. Moreover, we believe that\nyou can't piece it together for any np language.",
    "start": "3189925",
    "end": "3196460"
  },
  {
    "text": "We believe that there exists\nvery hard NP languages",
    "start": "3196460",
    "end": "3204470"
  },
  {
    "text": "that there's no way you\ncan piece it together. But let me tell you why.",
    "start": "3204470",
    "end": "3209480"
  },
  {
    "text": "Why is it hard to\npiece things together? And the reason is, even--",
    "start": "3209480",
    "end": "3214820"
  },
  {
    "text": "let's even think,\nnow, for simplicity, I think, it would\nbe easier to think, let's say, even in the\nnonadaptive version, x is fixed.",
    "start": "3214820",
    "end": "3223890"
  },
  {
    "text": "Can we argue that\nfor this fixed x,",
    "start": "3223890",
    "end": "3229500"
  },
  {
    "text": "we can piece\neverything together? And the reason why it's hard\nto piece everything together",
    "start": "3229500",
    "end": "3235980"
  },
  {
    "text": "is because this local\nassignment generator, every time you give them a\nbunch of wires, think",
    "start": "3235980",
    "end": "3243630"
  },
  {
    "text": "of even a valid kind of prover. Think of a valid prover.",
    "start": "3243630",
    "end": "3248680"
  },
  {
    "text": "Every time you run him, he\nuses a different witnesses. Maybe he has many, many\nwitnesses in his disposal.",
    "start": "3248680",
    "end": "3254350"
  },
  {
    "text": "Every time you run\nhim, he's honest, but with a different witness. So it's actually\nin the language.",
    "start": "3254350",
    "end": "3259540"
  },
  {
    "text": "But the question is, are we\nable to construct a satisfying assignment? And the reason why this\nis hard is-- or seems",
    "start": "3259540",
    "end": "3266760"
  },
  {
    "text": "hard is because, OK, we have\nour local assignment generator.",
    "start": "3266760",
    "end": "3271870"
  },
  {
    "text": "We give him a bunch of wires. He chooses one of his\nwitnesses at random-- because that's what the cheating\nprover does-- and gives him",
    "start": "3271870",
    "end": "3277890"
  },
  {
    "text": "an assignment with\nthis, the witness. OK, local consistent. We're fine. We're happy. Now we run him again.",
    "start": "3277890",
    "end": "3283600"
  },
  {
    "text": "He uses a different witness. It doesn't match. ",
    "start": "3283600",
    "end": "3289349"
  },
  {
    "text": "How do we match things together? So that's why in the\nnondeterministic case things are really difficult.\nAnd we do have some results,",
    "start": "3289350",
    "end": "3297400"
  },
  {
    "text": "but for very specific languages. Let me not go into that. Let's talk about\ndeterministic languages.",
    "start": "3297400",
    "end": "3302890"
  },
  {
    "text": "That seems to be much easier. So let me first convince\nyou that we can do it.",
    "start": "3302890",
    "end": "3308530"
  },
  {
    "text": "And then I'll show\nyou where I cheated. So let's first take a circuit.",
    "start": "3308530",
    "end": "3316440"
  },
  {
    "text": "We have a local\nassignment generator. So let me convince you\nthat the output must be 1.",
    "start": "3316440",
    "end": "3321970"
  },
  {
    "text": "So we have an\ninput-- x1 up to xn. ",
    "start": "3321970",
    "end": "3328500"
  },
  {
    "text": "I'm going to call my local\nassignment generator. I'm going to tell him,\ngive me the values here.",
    "start": "3328500",
    "end": "3334260"
  },
  {
    "text": "Or here, let me-- I have l, right? So let me use my l\nhere, here, and here. I don't know. He gives me values.",
    "start": "3334260",
    "end": "3340000"
  },
  {
    "text": "Now, this must be\nconsistent because I know local consistency holds\nprobability 1 minus negligible.",
    "start": "3340000",
    "end": "3346039"
  },
  {
    "text": "And all of them are\nconsistent, which means these are the correct values.",
    "start": "3346040",
    "end": "3351230"
  },
  {
    "text": "Now we're deterministic. We're talking about a\ndeterministic circuit.",
    "start": "3351230",
    "end": "3356260"
  },
  {
    "text": "So if this is\nlocally consistent, it means this is\nthe correct value. I don't know. If it's an AND, it's\nan AND, whatever it is.",
    "start": "3356260",
    "end": "3361883"
  },
  {
    "text": "So all of these are correct. I can argue, when I run the\ncheating-- the assignment-- so",
    "start": "3361883",
    "end": "3368200"
  },
  {
    "text": "I want to argue essentially\nany local assignment generator, every wire he gives\nme must be the correct one.",
    "start": "3368200",
    "end": "3376422"
  },
  {
    "text": "And then I'm done because\nthe output is the correct. And if he gives me\noutput 1, voila. It's correct. I'm done.",
    "start": "3376423",
    "end": "3382750"
  },
  {
    "text": "So I'm going to argue,\nkind of by induction, that every wire he gives\nme must be the correct one.",
    "start": "3382750",
    "end": "3388750"
  },
  {
    "text": "Why? OK. Let's try-- so I'm going\nto argue layer by layer.",
    "start": "3388750",
    "end": "3394130"
  },
  {
    "text": "The induction is going to be\nby the-- think of the circuit as layered. And I'm going to argue this\nby induction on the layers.",
    "start": "3394130",
    "end": "3401589"
  },
  {
    "text": "Layer 1-- what does the\ncheating prover gives me? He gives me an assignment. Now, I know I proved\nit locally satisfiable,",
    "start": "3401590",
    "end": "3409040"
  },
  {
    "text": "which means it\nsatisfies the gate. So it's correct. So layer 1, correct.",
    "start": "3409040",
    "end": "3414910"
  },
  {
    "text": "Let's go to layer 2. Layer 2, now I'm\ngoing to ask him this. Let's say I'm going\nto ask him these.",
    "start": "3414910",
    "end": "3422200"
  },
  {
    "text": "I want to argue that\nthis is correct. All I know is that it's\nlocally consistent.",
    "start": "3422200",
    "end": "3427810"
  },
  {
    "text": "But I know that\nthese are correct. Why are these correct?",
    "start": "3427810",
    "end": "3433760"
  },
  {
    "text": "Because of the\nnonsignaling, I know. If I asked, give me these\nwires, give me these wires",
    "start": "3433760",
    "end": "3442450"
  },
  {
    "text": "with the input, it was correct. I got the correct answer.",
    "start": "3442450",
    "end": "3447520"
  },
  {
    "text": "So now when I ask the extract\nthe local assignment generator, give me these wires\nwith these, we",
    "start": "3447520",
    "end": "3454960"
  },
  {
    "text": "said the distribution is the\nsame up to-- or computationally indistinguishable. So when I asked him, give\nme the value of this wire,",
    "start": "3454960",
    "end": "3465920"
  },
  {
    "text": "when I asked with\nthe inputs or asked, give me these wires with this,\nit's the same distribution.",
    "start": "3465920",
    "end": "3473245"
  },
  {
    "text": "If it was correct\nbefore, it's correct now. So these are correct, and\nthis is locally consistent.",
    "start": "3473245",
    "end": "3478770"
  },
  {
    "text": "So this is also correct. So these layers are correct. And again, now\nlet's look at these.",
    "start": "3478770",
    "end": "3486180"
  },
  {
    "text": "Is this correct? Yeah, because these\nstill need to be correct because we argued it correct.",
    "start": "3486180",
    "end": "3491630"
  },
  {
    "text": "And it doesn't depend\non the distribution. It doesn't depend on the--\nevery time I ask him this, I get probability 1 minus\nnegligible-- so correct.",
    "start": "3491630",
    "end": "3498360"
  },
  {
    "text": "So this is correct. By induction, the\noutput is correct. I know it's 1.",
    "start": "3498360",
    "end": "3503640"
  },
  {
    "text": "That's what the local assignment\ngenerator promised me. So it's 1 and correct.",
    "start": "3503640",
    "end": "3509480"
  },
  {
    "text": "I'm done. ",
    "start": "3509480",
    "end": "3516545"
  },
  {
    "text": "That's the proof. Moreover, let me\ntell you something. When we wrote this\nproof, we wrote it.",
    "start": "3516545",
    "end": "3522599"
  },
  {
    "text": "We were happy with it. We literally almost\nsubmitted this thing. A couple of days\nbefore the deadline,",
    "start": "3522600",
    "end": "3528360"
  },
  {
    "text": "we noticed there's a bug. This is wrong. This does not work. ",
    "start": "3528360",
    "end": "3534403"
  },
  {
    "text": "I'll tell you why it doesn't\nwork as opposed to asking you because I think it's so subtle. But does anybody see\nwhy it doesn't work?",
    "start": "3534403",
    "end": "3539970"
  },
  {
    "text": "It's very, very hard\nto see, in my opinion. But I mean, clearly,\nI didn't see it. But anybody see\nwhy I cheated here?",
    "start": "3539970",
    "end": "3548600"
  },
  {
    "text": "Yeah? AUDIENCE: Is it\nbecause we restricted to deterministic witness? ",
    "start": "3548600",
    "end": "3556303"
  },
  {
    "text": "PROFESSOR: Yeah. So what? Why? Yeah, there's only the input. Actually, the fact that\nthere's deterministic,",
    "start": "3556303",
    "end": "3561660"
  },
  {
    "text": "it's helpful for us because now\nthere's a notion of correctness. Once there's a witness, there's\nno-- what do you mean correct?",
    "start": "3561660",
    "end": "3567660"
  },
  {
    "text": "Depends on the witness. Every wire has, like,\nif you use this witness, it can be this value. Here, because it's\ndeterministic,",
    "start": "3567660",
    "end": "3574500"
  },
  {
    "text": "there's only one\nvalue for each wire. And so there's the\nnotion of correct value.",
    "start": "3574500",
    "end": "3579613"
  },
  {
    "text": " And I can argue by induction\nthat everything is correct.",
    "start": "3579613",
    "end": "3584795"
  },
  {
    "start": "3584795",
    "end": "3595829"
  },
  {
    "text": "So I'll tell you why. I suffered through this.",
    "start": "3595830",
    "end": "3601960"
  },
  {
    "text": "I have the desire to have you-- to torture you a\nlittle bit to see why.",
    "start": "3601960",
    "end": "3607540"
  },
  {
    "text": "And so like I-- like the experience I had. But given that you only have\n10 minutes left, I'll tell you.",
    "start": "3607540",
    "end": "3614560"
  },
  {
    "text": "So here's why.  So local consistency holds--",
    "start": "3614560",
    "end": "3625140"
  },
  {
    "text": "or yeah, local consistency\nholds with probability--",
    "start": "3625140",
    "end": "3631920"
  },
  {
    "text": "or the nonsignaling, everything\nholds with probability 1 minus negligible, not\nwith probability 1.",
    "start": "3631920",
    "end": "3637990"
  },
  {
    "text": "If everything with\nprobability 1-- 1, local consistency--\nthen this consists only 1.",
    "start": "3637990",
    "end": "3644980"
  },
  {
    "text": "Then, everything would work out. If I promised you local\nconsistency with probability 1",
    "start": "3644980",
    "end": "3651000"
  },
  {
    "text": "and nonsignaling\nwith probability 1, like it's exactly\nthe same, we're good. Then I can prove.",
    "start": "3651000",
    "end": "3657269"
  },
  {
    "text": "Now, it's used in cryptography,\noh, come on, negligible. It's 0. Here, It's not zero.",
    "start": "3657270",
    "end": "3663160"
  },
  {
    "text": "It turns out,\nnegligible is a pain. This is the entire\nproblem, the negligible. And I'll tell you why.",
    "start": "3663160",
    "end": "3668710"
  },
  {
    "text": "It seems weird, but here's why. The reason is this\nis correct with",
    "start": "3668710",
    "end": "3674880"
  },
  {
    "text": "all-but-negligible probability. So this is correct,\nexcept probability mu.",
    "start": "3674880",
    "end": "3680820"
  },
  {
    "text": "This is correct, except\nwith probability mu. But now this is correct if\nthis needs to be correct,",
    "start": "3680820",
    "end": "3689800"
  },
  {
    "text": "and this needs to be correct. If one of them is incorrect,\nyou're not correct. So this is correct.",
    "start": "3689800",
    "end": "3695839"
  },
  {
    "text": "Is probably correct,\nexcept probability 2 mu.",
    "start": "3695840",
    "end": "3701080"
  },
  {
    "text": "So here, you have 2 mu. Now, 2 mu is also negligible.",
    "start": "3701080",
    "end": "3707410"
  },
  {
    "text": "This is also acceptable 2 mu. But this-- for this to\nbe correct, both of them",
    "start": "3707410",
    "end": "3713500"
  },
  {
    "text": "need to be correct. So here, you have\n4 mu and then 8 mu.",
    "start": "3713500",
    "end": "3718720"
  },
  {
    "text": "You can get 2 to\nthe depth times mu. Now, if the depth\nis more than log,",
    "start": "3718720",
    "end": "3727480"
  },
  {
    "text": "it's not negligible anymore. ",
    "start": "3727480",
    "end": "3733120"
  },
  {
    "text": "So the problem is 2 to the\ndepth may be much bigger than 1 over mu.",
    "start": "3733120",
    "end": "3739090"
  },
  {
    "text": "So there's this\nexponential curse of--",
    "start": "3739090",
    "end": "3744820"
  },
  {
    "text": "we carry-- the error grows\nby a factor of 2 each time and eventually it can kill us.",
    "start": "3744820",
    "end": "3752590"
  },
  {
    "text": "That's the bug. So this works if\nit's bound to depth. Log depth, yes.",
    "start": "3752590",
    "end": "3757970"
  },
  {
    "text": "More than that, not clear.",
    "start": "3757970",
    "end": "3763420"
  },
  {
    "text": "OK. So what do we do? So to fix this, there\nis two ways to fix this.",
    "start": "3763420",
    "end": "3773200"
  },
  {
    "text": "Option number 1, which\nis what we did originally because we didn't have a better\nidea, is we said, you know what?",
    "start": "3773200",
    "end": "3778760"
  },
  {
    "text": "Let's assume that this\ncircuit is very narrow. Think of bounded depth\ndeterministic computations--",
    "start": "3778760",
    "end": "3786730"
  },
  {
    "text": "sorry, bounded space. So think of a\ndistributed computation where each configuration\nis very small--",
    "start": "3786730",
    "end": "3792500"
  },
  {
    "text": "so like a Turing\nmachine that has very-- the tableau is\nvery thin and long.",
    "start": "3792500",
    "end": "3800050"
  },
  {
    "text": "And then we said, you know what? Let's make L, like where you're\nstatistically bounded on--",
    "start": "3800050",
    "end": "3806960"
  },
  {
    "text": "let's make it an\nentire configuration. So yeah, you pay\nwith an entire-- with a space.",
    "start": "3806960",
    "end": "3812880"
  },
  {
    "text": "The SNARG, the proof\nwill grow with the space. But now we say, you can\nread the entire thing.",
    "start": "3812880",
    "end": "3818430"
  },
  {
    "text": "You can read-- so\nhere's the tableau. You can read the\nentire computation.",
    "start": "3818430",
    "end": "3823829"
  },
  {
    "text": "You can read the\nentire configuration. And now we say, the first\nconfiguration is correct, so the probability mu.",
    "start": "3823830",
    "end": "3829640"
  },
  {
    "text": "The second configuration,\nif this was correct, this is 2 mu, 3 mu, 4 mu.",
    "start": "3829640",
    "end": "3835740"
  },
  {
    "text": "It doesn't grow\nexponential anymore because you read\nthe entire thing. So I'm going to read these\ntwo configurations together.",
    "start": "3835740",
    "end": "3843450"
  },
  {
    "text": "If this was consistent,\nthis is consistent. There's always a probability\nof error that I'm incurring. Fine.",
    "start": "3843450",
    "end": "3849380"
  },
  {
    "text": "But it doesn't double because\nI'm reading the entire thing. I said, if this was a\ncorrect configuration,",
    "start": "3849380",
    "end": "3855950"
  },
  {
    "text": "then when I read\nthis with this, this is going to be\ncorrect configuration. But I read the entire thing,\nso I don't double up things.",
    "start": "3855950",
    "end": "3863960"
  },
  {
    "text": "So we get SNARG for\nany computation that's",
    "start": "3863960",
    "end": "3869660"
  },
  {
    "text": "bounded space where the\nSNARG grows with the space. OK.",
    "start": "3869660",
    "end": "3874987"
  },
  {
    "text": "But let me tell you,\nwe can do better. We can actually-- we don't\nneed to grow with the space. So I'll just say a word because\nI'm running out of time,",
    "start": "3874987",
    "end": "3881809"
  },
  {
    "text": "and I want to do\na quick summary. But the idea of not running\ninto this exponential curse idea",
    "start": "3881810",
    "end": "3889910"
  },
  {
    "text": "is to say the following. Let's do this hash in the BARG.",
    "start": "3889910",
    "end": "3895850"
  },
  {
    "text": "So what did we do? This SNARG is like, hash\nall the wires and then BARG. The idea is don't do hash and\nBARG in the original circuit.",
    "start": "3895850",
    "end": "3903950"
  },
  {
    "text": "Don't just do hash and BARG\nin the verification circuit. Do hash and BARG and\nan extended circuit.",
    "start": "3903950",
    "end": "3910710"
  },
  {
    "text": "Change the circuit. Do hash and BARG on a slightly\nmore elaborate circuit.",
    "start": "3910710",
    "end": "3916130"
  },
  {
    "text": "So what is the more\nelaborate circuit? Let me give you an example. One example you can do--",
    "start": "3916130",
    "end": "3921619"
  },
  {
    "text": "take each kind of layer and add\na Merkle hash in the circuit.",
    "start": "3921620",
    "end": "3930000"
  },
  {
    "text": "So now before you add\na verification circuit, change it a little bit. How do you change it?",
    "start": "3930000",
    "end": "3935380"
  },
  {
    "text": "You compute each one, and then\nyou compute a Merkle hash. Compute the next layer,\nand compute a Merkle hash.",
    "start": "3935380",
    "end": "3942010"
  },
  {
    "text": "Compute the next layer,\ncompute a Merkle hash. It's weird. Why would you do that? Do that.",
    "start": "3942010",
    "end": "3947020"
  },
  {
    "text": "Moreover, also compute for\nevery wire like the opening of the Merkle hash.",
    "start": "3947020",
    "end": "3952500"
  },
  {
    "text": "And add all these Merkle hashes,\nand I add all these openings to the circuit. Now, that seems a\nridiculous thing to do.",
    "start": "3952500",
    "end": "3958089"
  },
  {
    "text": "Why would you add to\nthe circuit that you're trying to verify that it's\ncorrect for each wire,",
    "start": "3958090",
    "end": "3963540"
  },
  {
    "text": "Merkle hash all the wires, and\nadd wires that check opening?",
    "start": "3963540",
    "end": "3969400"
  },
  {
    "text": "Like, what? This sounds really weird and not\na very-- a weird thing to do.",
    "start": "3969400",
    "end": "3975940"
  },
  {
    "text": "Sorry, you don't need\nto check opening. You just add Merkle hashes. And for each wire, add\nMerkle hash to the wire.",
    "start": "3975940",
    "end": "3981130"
  },
  {
    "text": "For each layer, add a Merkle\nhash, so on, and so forth. Why is adding Merkle\nhashes helpful at all?",
    "start": "3981130",
    "end": "3989080"
  },
  {
    "text": "So I'll tell you why it's\nhelpful, because now we have the local assignment generator.",
    "start": "3989080",
    "end": "3996220"
  },
  {
    "text": "And now in the local\nassignment generator, what we can do-- we said,\nthe first layer, each one",
    "start": "3996220",
    "end": "4001440"
  },
  {
    "text": "is correct. Now we're going to\nargue, this implies that the Merkle root is correct,\nthat this must be correct.",
    "start": "4001440",
    "end": "4012400"
  },
  {
    "text": "Now, when we argue it, we do\npay exponential with the depth. So this is a computation.",
    "start": "4012400",
    "end": "4018059"
  },
  {
    "text": "And the error does grow,\nbut the depth is long. Merkle hash is a very low-depth\ncomputation, so it grows.",
    "start": "4018060",
    "end": "4025440"
  },
  {
    "text": "But polynomially, it's OK. Now, when we read\nthings here, we're",
    "start": "4025440",
    "end": "4031620"
  },
  {
    "text": "going to read them\ntogether with a root. We're not going to\njust-- we're going to say that when we ask the\nlocal assignment generator, what",
    "start": "4031620",
    "end": "4040200"
  },
  {
    "text": "is the value? Give me the value\nhere, here, here, we're going to also say,\nand give me the value",
    "start": "4040200",
    "end": "4046890"
  },
  {
    "text": "of the root and the paths\ncorresponding to this and this.",
    "start": "4046890",
    "end": "4052049"
  },
  {
    "text": "And now the thing\nis the following. If the root was\ncorrect, both of them",
    "start": "4052050",
    "end": "4057690"
  },
  {
    "text": "have to be correct unless\nyou broke the hash function. So you don't need to\nget this independence.",
    "start": "4057690",
    "end": "4063910"
  },
  {
    "text": "Before, we were like, oh,\nwe needed this to be correct and this to be correct,\nand things doubled.",
    "start": "4063910",
    "end": "4070140"
  },
  {
    "text": "Here, we can say, if\nthe root is correct, we know that both of\nthem have to be correct.",
    "start": "4070140",
    "end": "4076830"
  },
  {
    "text": "So it's enough to argue\nthat the root is correct. So it's a little bit\nsimulates the case of reading",
    "start": "4076830",
    "end": "4084790"
  },
  {
    "text": "the entire configuration\nor an entire layer, which is what we did\nin the bounded space.",
    "start": "4084790",
    "end": "4090869"
  },
  {
    "text": "So I don't want to go-- I think that's\nall I want to say. But essentially, what\nI want to mention",
    "start": "4090870",
    "end": "4096960"
  },
  {
    "text": "is this local satisfiability,\nor local soundness,",
    "start": "4096960",
    "end": "4102120"
  },
  {
    "text": "or local consistency\ndoes not necessarily",
    "start": "4102120",
    "end": "4108250"
  },
  {
    "text": "imply global correctness. Actually, , to use it to get\nglobal correctness, often, we need to change the circuit\nand do circuit gymnastics",
    "start": "4108250",
    "end": "4118389"
  },
  {
    "text": "in weird ways to get it to work. And this is still\nwork in progress.",
    "start": "4118390",
    "end": "4124239"
  },
  {
    "text": "Us as a community are\nstill combating with this. I see smiles because my\nstudents have been suffering",
    "start": "4124240",
    "end": "4129790"
  },
  {
    "text": "with me through this a lot. It's like half\nsmiling, half crying. ",
    "start": "4129790",
    "end": "4138229"
  },
  {
    "text": "So that's where we are today. So let me use the\nlast three minutes",
    "start": "4138229",
    "end": "4143470"
  },
  {
    "text": "or so to do a quick summary. So first of all,\nbefore I summarize,",
    "start": "4143470",
    "end": "4151509"
  },
  {
    "text": "if you have any feedback,\nthere's feedback forms. Please submit, so I'll improve.",
    "start": "4151510",
    "end": "4158109"
  },
  {
    "text": "Or I'll keep on\ndoing things that worked to try not to do\nthings that didn't work. So it will be great,\ngreat, great. if you",
    "start": "4158109",
    "end": "4166299"
  },
  {
    "text": "can submit the feedback form. That'll be really,\nreally helpful. So with that, let me just--",
    "start": "4166300",
    "end": "4172210"
  },
  {
    "text": "I want to reflect a couple\nminutes on this journey",
    "start": "4172210",
    "end": "4178270"
  },
  {
    "text": "and where we are and how. So if you remember, we\nstarted by saying, look,",
    "start": "4178270",
    "end": "4185140"
  },
  {
    "text": "proofs has been something\nthat mathematicians have been working\nwith and thinking",
    "start": "4185140",
    "end": "4191589"
  },
  {
    "text": "about for thousands of years. And proofs have always\nbeen very specific form",
    "start": "4191590",
    "end": "4197680"
  },
  {
    "text": "of logical deductions. And cryptography changed this.",
    "start": "4197680",
    "end": "4203530"
  },
  {
    "text": "With the introduction,\nwith the thinking about zero-knowledge\nproofs, they",
    "start": "4203530",
    "end": "4208600"
  },
  {
    "text": "defined this notion of\ninteractive proof, a new proof model. And this new way of\nthinking about proofs",
    "start": "4208600",
    "end": "4215920"
  },
  {
    "text": "was a huge, huge success\nstory for cryptography, for complexity.",
    "start": "4215920",
    "end": "4223100"
  },
  {
    "text": "And we noticed that these\ninteractive proof systems turned",
    "start": "4223100",
    "end": "4229490"
  },
  {
    "text": "out to be very, very powerful. And the main work\nthat demonstrated that",
    "start": "4229490",
    "end": "4235040"
  },
  {
    "text": "was the subject protocol. That was the first\nprotocol that, wow, you",
    "start": "4235040",
    "end": "4240739"
  },
  {
    "text": "can do something that we have\nno idea how to do classically. And that gave birth to the\nIP equals p space theorem.",
    "start": "4240740",
    "end": "4248550"
  },
  {
    "text": "Once you had the sum-check from\nthat with a little more work,",
    "start": "4248550",
    "end": "4254809"
  },
  {
    "text": "you can do the IP\nequals p space theorem. And what we showed\nin this class is,",
    "start": "4254810",
    "end": "4260810"
  },
  {
    "text": "actually, we went through GKR. So we showed that if\nyou have sum-check,",
    "start": "4260810",
    "end": "4268050"
  },
  {
    "text": "you can get actually-- just\nby a very simple idea of doing",
    "start": "4268050",
    "end": "4273349"
  },
  {
    "text": "SNARG with a sum-check\nlayer by layer, you can get a succinct,\ninteractive proof",
    "start": "4273350",
    "end": "4281570"
  },
  {
    "text": "for any bounded\ndepth computation that's doubly efficient. So the prover is\nefficient, and the verifier",
    "start": "4281570",
    "end": "4286760"
  },
  {
    "text": "is succinct or very efficient. And then we shoe the IP\nequals p space as a corollary.",
    "start": "4286760",
    "end": "4294170"
  },
  {
    "text": "We showed that you\ncan get PCP from it. And then we move to arguments,\nsaid, well, OK, that's",
    "start": "4294170",
    "end": "4299780"
  },
  {
    "text": "where we are with proofs\nwith statistical soundness. And then we said, well,\nif you're willing to rely,",
    "start": "4299780",
    "end": "4305900"
  },
  {
    "text": "to reduce soundness to\ncomputational soundness, then we show that Kilian-Micali,\nyou can get everything,",
    "start": "4305900",
    "end": "4312380"
  },
  {
    "text": "like, really efficient\ninteractive arguments by taking",
    "start": "4312380",
    "end": "4317719"
  },
  {
    "text": "PCP and hashing them down. And then there was\na question, OK,",
    "start": "4317720",
    "end": "4322733"
  },
  {
    "text": "we can have\ninteractive arguments. Can we have SNARGs? Can we eliminate interaction?",
    "start": "4322733",
    "end": "4327900"
  },
  {
    "text": "And then we talked\nabout Fiat-Shamir, went through\nzero-knowledge a little bit because that's the first\ntime where Fiat-Shamir",
    "start": "4327900",
    "end": "4334438"
  },
  {
    "text": "proved security of it, was in\nthe context of zero-knowledge.",
    "start": "4334438",
    "end": "4339660"
  },
  {
    "text": "But then we showed-- or Zhengzhong showed that\nactually you can do Fiat-Shamir",
    "start": "4339660",
    "end": "4344970"
  },
  {
    "text": "also in the context of BARGs. So we have an interactive\nbatch argument and you can--",
    "start": "4344970",
    "end": "4352142"
  },
  {
    "text": "or he constructed interactive\nbatch argument showed you can use-- I don't know. He didn't get into detail. But it turns out, you can use\nsimilar techniques to show",
    "start": "4352142",
    "end": "4361410"
  },
  {
    "text": "Fiat-Shamir is secure-- or these techniques,\nplus, plus show that Fiat-Shamir secure when\napplied to the interactive batch",
    "start": "4361410",
    "end": "4369000"
  },
  {
    "text": "argument. And then you get this\nnoninteractive BARG. And today, to close\nthis entire journey,",
    "start": "4369000",
    "end": "4376810"
  },
  {
    "text": "we showed how to get\nSNARGs from these BARGs. And as I said, we have it for\ndeterministic computation.",
    "start": "4376810",
    "end": "4383710"
  },
  {
    "text": "We have it for some\nnondeterministic computation. Constructing it for all of NP\nis still a major open question.",
    "start": "4383710",
    "end": "4391679"
  },
  {
    "text": "So I invite you all\nto work on it with me. But I want to say one more\nthing about this area, which",
    "start": "4391680",
    "end": "4398610"
  },
  {
    "text": "is, it's really nice because\nthis is one example where this area has a beautiful,\nbeautiful math, in my opinion.",
    "start": "4398610",
    "end": "4404800"
  },
  {
    "text": "So it's very theoretical with\nbeautiful mathematical ideas and applied.",
    "start": "4404800",
    "end": "4411099"
  },
  {
    "text": "So this area has been\na really nice bonding between theoreticians\nand practitioners.",
    "start": "4411100",
    "end": "4418780"
  },
  {
    "text": "These things are used in\nparticular by a lot of bankers. And people start using\nblockchains, and now",
    "start": "4418780",
    "end": "4425490"
  },
  {
    "text": "bank systems and so on\nare interested in it. So it's been a\nreally nice example",
    "start": "4425490",
    "end": "4432240"
  },
  {
    "text": "where really beautiful theory\nis used, like, the theory itself",
    "start": "4432240",
    "end": "4437700"
  },
  {
    "text": "is really deployed and used. So I think this is an\nexample of success story",
    "start": "4437700",
    "end": "4444270"
  },
  {
    "text": "for theoretical cryptography. OK. Thank you, guys. It was really, really\nfun teaching you.",
    "start": "4444270",
    "end": "4449595"
  },
  {
    "text": "Thank you. [APPLAUSE] ",
    "start": "4449595",
    "end": "4455000"
  }
]