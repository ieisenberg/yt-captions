[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": " PROFESSOR: So today's class we\ntalked about vertex unfolding,",
    "start": "0",
    "end": "8389"
  },
  {
    "text": "unfolding orthogonal\npolyhedra, and something else which there weren't\nany questions",
    "start": "8390",
    "end": "13810"
  },
  {
    "text": "about-- got them already--\nCauchey's rigidity theorem.",
    "start": "13810",
    "end": "19160"
  },
  {
    "text": "So we will go through\nthose in turn. A bunch of small\nquestions and two",
    "start": "19160",
    "end": "24250"
  },
  {
    "text": "cool new things, new updates. So first question is\nabout vertex unfolding.",
    "start": "24250",
    "end": "30840"
  },
  {
    "start": "25000",
    "end": "693000"
  },
  {
    "text": "Why do we fold things\nin a chain and kind of a line, linear style?",
    "start": "30840",
    "end": "36140"
  },
  {
    "text": "Would you get any\nbenefit out of a tree? The answer is chains are\neasy to avoid intersection.",
    "start": "36140",
    "end": "43220"
  },
  {
    "text": "That's the reason we use them\non these kinds of unfoldings. We could dedicate a different\nslab for every piece",
    "start": "43220",
    "end": "49170"
  },
  {
    "text": "and this is great. And incidentally-- I didn't\nmention this in lecture, but it's obvious once you think\nabout it for five minutes.",
    "start": "49170",
    "end": "55550"
  },
  {
    "text": "If you want general cuts-- if\nyou're allowed to cut anywhere on the surface and you want\na vertex unfolding-- then",
    "start": "55550",
    "end": "60990"
  },
  {
    "text": "anything is possible because\nyou could take any surface and chainify it in the same\nway we do with the [INAUDIBLE]",
    "start": "60990",
    "end": "67080"
  },
  {
    "text": "sections. You subdivide. First, you triangulate. You subdivide each triangle\ninto three triangles.",
    "start": "67080",
    "end": "73100"
  },
  {
    "text": "Then you can hinge it\ntogether in a chain. And then you can just\nlay it out like this. So general vertex unfolding\nis trivial for this reason.",
    "start": "73100",
    "end": "82926"
  },
  {
    "text": "When you're only allowed\nto cut along edges, things get much harder. The only technique we have right\nnow is facet path unfolding.",
    "start": "82927",
    "end": "90230"
  },
  {
    "text": "But of course, vertex\nunfolding convex polyhedra is an easier version of edge\nunfolding context polyhedra,",
    "start": "90230",
    "end": "97030"
  },
  {
    "text": "but we have no idea\nhow to do that. So maybe it's possible.",
    "start": "97030",
    "end": "103190"
  },
  {
    "text": "We already know it's not\npossible with chains. So if it's possible, it's\nsomehow possible with trees, I guess.",
    "start": "103190",
    "end": "108939"
  },
  {
    "text": "We know tree style\nunfoldings can be helpful with\ngeneral cuttings, but this is not directly\nrelevant to vertex unfolding.",
    "start": "108940",
    "end": "115719"
  },
  {
    "text": "But this is the source unfolding\nand the star unfolding again. So yeah, who knows?",
    "start": "115720",
    "end": "120740"
  },
  {
    "text": "But so far, chains are just\na useful proof technique. All right, next question.",
    "start": "120740",
    "end": "127020"
  },
  {
    "text": "This is vertex\nunfolding summarized in the lecture notes\non the right side.",
    "start": "127020",
    "end": "132830"
  },
  {
    "text": "So we end up with a\nnice Eulerian graph. In this case, every vertex\nhappens to have even degree. In general, two of them\nmight have odd degree",
    "start": "132830",
    "end": "139120"
  },
  {
    "text": "and we just get a path. But the observation in\nthis question-- maybe I'll go to the other side\nso you can read both--",
    "start": "139120",
    "end": "146510"
  },
  {
    "text": "is that we visit the same\nvertex multiple times, like we attach these two\ntriangles at this vertex.",
    "start": "146510",
    "end": "152459"
  },
  {
    "text": "We also attach these two\ntriangles at that vertex. Is that OK?",
    "start": "152460",
    "end": "157720"
  },
  {
    "text": "Yes, we define it to be OK. I think I briefly mentioned\nit's defined to be OK. Why?",
    "start": "157720",
    "end": "164569"
  },
  {
    "text": "I don't know. It's hard to imagine\nlittle dots of paper there, but somehow you imagine that\nthey can stay connected.",
    "start": "164570",
    "end": "170750"
  },
  {
    "text": "In particular, it's\nthe natural definition of a hinge dissection. You could add hinges\nat those two places.",
    "start": "170750",
    "end": "177069"
  },
  {
    "text": "But also it's\nimpossible otherwise. This was a fun little\npuzzle to think about.",
    "start": "177070",
    "end": "183120"
  },
  {
    "text": "But if you take-- I actually\nhave a slide for it. I don't have to draw. It's hard to draw\nan icosahedron.",
    "start": "183120",
    "end": "189000"
  },
  {
    "text": "If you take an icosahedron,\nit has 20 faces.",
    "start": "189000",
    "end": "194180"
  },
  {
    "text": "And the dual is a dodecahedron\nso it has 12 vertices.",
    "start": "194180",
    "end": "200200"
  },
  {
    "text": "So there aren't\nenough to go around, at least if you wanted\na chain unfolding. Well, actually any\ntree unfolding,",
    "start": "200200",
    "end": "207400"
  },
  {
    "text": "if you have 20\ntriangles, you're going to need 19 vertices to\nconnect them together.",
    "start": "207400",
    "end": "213190"
  },
  {
    "text": "And there's only 12\nvertices so you can't do it. ",
    "start": "213190",
    "end": "220409"
  },
  {
    "text": "Is that literally true? I guess you could imagine,\nin a general tree unfolding, you could use one point\nto connect together",
    "start": "220410",
    "end": "228970"
  },
  {
    "text": "many triangles. But I'm pretty sure\nit's not possible if you're allowed\nto reuse vertices.",
    "start": "228970",
    "end": "234280"
  },
  {
    "text": "So that's why we allow it. We get a more\ninteresting result when we allow revisiting vertices.",
    "start": "234280",
    "end": "243040"
  },
  {
    "text": "Could be still an\ninteresting question like, which polyhedron have\nvertex unfolding if we only",
    "start": "243040",
    "end": "248660"
  },
  {
    "text": "get to use the vertex once? But I don't know\nany results on it.",
    "start": "248660",
    "end": "253930"
  },
  {
    "text": "Next question is, any\nprogress on vertex unfolding? And there's one new result.",
    "start": "253930",
    "end": "259269"
  },
  {
    "text": "Before I showed you, I think,\none example of a vertex ununfoldable polyhedron--\nthis guy, box on a box.",
    "start": "259269",
    "end": "271480"
  },
  {
    "text": "Initially, we said oh,\nthis is edge ununfoldable, but it's also vertex\nununfoldable because this face here is a donut and the\nfive sides of that cube",
    "start": "271480",
    "end": "282520"
  },
  {
    "text": "have to fit in here, and there's\nnot enough area for them. And that's true also if\nyou're vertex unfolding.",
    "start": "282520",
    "end": "289129"
  },
  {
    "text": "No matter how this stays\nattached to the donut face, it's got a line here,\nthat's not possible.",
    "start": "289130",
    "end": "296370"
  },
  {
    "text": "But this is an\nunsatisfying example because you have a face\nthat is not a disk. And in general, you're\nnot topologically convex.",
    "start": "296370",
    "end": "302345"
  },
  {
    "text": " you can't just move the vertices\naround and make this a convex",
    "start": "302345",
    "end": "307610"
  },
  {
    "text": "polyhedron, not\nstrictly convex anyway. So here is a new\nexample with Zach Abel.",
    "start": "307610",
    "end": "316145"
  },
  {
    "text": " He took this class\ntwo years ago,",
    "start": "316145",
    "end": "322120"
  },
  {
    "text": "or five years ago, I guess. This is a topologically\nconvex polyhedron,",
    "start": "322120",
    "end": "327490"
  },
  {
    "text": "so you could move the\nvertices to make this convex. That's not so obvious.",
    "start": "327490",
    "end": "332990"
  },
  {
    "text": "And it is vertex ununfoldable,\nwhich we will prove. This is one of the\ntwo results for today.",
    "start": "332990",
    "end": "341200"
  },
  {
    "text": "The example is a dark prism\nhere, a triangular prism,",
    "start": "341200",
    "end": "346760"
  },
  {
    "text": "and a light triangular\nprism just at right angles",
    "start": "346760",
    "end": "351790"
  },
  {
    "text": "to each other. Then you take the\nunion of that solid, and then you take the boundary.",
    "start": "351790",
    "end": "357320"
  },
  {
    "text": "So first, you can check\nall the faces are disks. And for topological\nconvexity, you",
    "start": "357320",
    "end": "364330"
  },
  {
    "text": "want to check that if\nyou look at any two faces like this light S1\nand this dark one,",
    "start": "364330",
    "end": "370260"
  },
  {
    "text": "they should only share\none edge at most. They should share nothing,\na vertex, or an edge. That's topological\nconvexity because that's",
    "start": "370260",
    "end": "377289"
  },
  {
    "text": "how things work in convex\nif the polygons were convex.",
    "start": "377290",
    "end": "382520"
  },
  {
    "text": "So like here, they\nshare just that edge. So it is topologically convex.",
    "start": "382520",
    "end": "387569"
  },
  {
    "text": "Let's prove that it is\nvertex ununfoldable. So in some sense, this is a\nstrengthening of the witch's",
    "start": "387570",
    "end": "392890"
  },
  {
    "text": "hats and stuff because this\nis also edge ununfoldable. But it's even cooler.",
    "start": "392890",
    "end": "398520"
  },
  {
    "text": "It's vertex ununfoldable.  Let's just look\nat the connections between the dark and the light.",
    "start": "398520",
    "end": "404530"
  },
  {
    "text": " There are one, two, three,\nfour vertices on this side",
    "start": "404530",
    "end": "412000"
  },
  {
    "text": "and four vertices\non the backside that connect dark to light.",
    "start": "412000",
    "end": "417280"
  },
  {
    "text": "I should make some Star\nWars reference I suppose. All those vertices\nare symmetric,",
    "start": "417280",
    "end": "423230"
  },
  {
    "text": "so we can just look\nat any of them. Somewhere, the light side has\nto be attached to the dark side.",
    "start": "423230",
    "end": "428540"
  },
  {
    "text": "Where could that be? Let's say vertex A because\nit's got to be somewhere, and it's symmetric.",
    "start": "428540",
    "end": "433980"
  },
  {
    "text": "So vertex A has three\nangles incident to it. There's alpha-- that's\nthis angle-- which is big.",
    "start": "433980",
    "end": "440820"
  },
  {
    "text": "It reflects. There's this beta and\nthere's this gamma. Beta is 90 degrees\nhere because this",
    "start": "440820",
    "end": "449910"
  },
  {
    "text": "is supposed to be a rectangle. ",
    "start": "449910",
    "end": "454950"
  },
  {
    "text": "Gamma is well, let me state\nwhat I want from these angles.",
    "start": "454950",
    "end": "461509"
  },
  {
    "text": "There's some parameters\nin the construction I haven't yet told you. So we want alpha to\nbe bigger than 270.",
    "start": "461509",
    "end": "471159"
  },
  {
    "text": "Theta equals 92. And we want alpha plus\ngamma equal to 360.",
    "start": "471160",
    "end": "483610"
  },
  {
    "text": "So this is possible if you\nangle these guys correctly,",
    "start": "483610",
    "end": "489110"
  },
  {
    "text": "is the short version. I guess the most\ninteresting is this alpha plus gamma equals 360.",
    "start": "489110",
    "end": "500849"
  },
  {
    "text": "Is that obvious?  Not especially, but I'm claiming\nit's true in this picture.",
    "start": "500850",
    "end": "508025"
  },
  {
    "text": "We'll see it in an\nunfolding, actually, on the very next slide. Yeah, let's go there.",
    "start": "508025",
    "end": "514360"
  },
  {
    "text": "Still have the same picture. But when unfolded, it's\nsupposed to look like this.",
    "start": "514360",
    "end": "522190"
  },
  {
    "text": "So what happens at A? If you want to connect the\nlight side which is alpha that's forced, you can\nattach by a vertex unfolding",
    "start": "522190",
    "end": "528920"
  },
  {
    "text": "to beta or gamma. Well, beta is impossible\nbecause 90 plus greater than 270",
    "start": "528920",
    "end": "535320"
  },
  {
    "text": "is greater than 360. So you would get overlap\nlocally at this vertex if you attach these even\nif you're vertex unfolding.",
    "start": "535320",
    "end": "542680"
  },
  {
    "text": "So you've got to\nattach the gamma. Alpha plus gamma is\nsupposed to be exactly 360.",
    "start": "542680",
    "end": "548110"
  },
  {
    "text": "And so vertex unfolding\ndoesn't buy you anything. In order to not\nlocally overlap here,",
    "start": "548110",
    "end": "553240"
  },
  {
    "text": "they must fit right like that. Then the only other\ncondition we need",
    "start": "553240",
    "end": "558410"
  },
  {
    "text": "is that these prisms\nare long enough so that you get\noverlap over here. So it's not a purely\nlocal overlap,",
    "start": "558410",
    "end": "564649"
  },
  {
    "text": "but it's very close by. It's the same two faces overlap. Here, they happen to\noverlap here and here.",
    "start": "564650",
    "end": "570720"
  },
  {
    "text": "If this were shorter, if\nthis were like this short-- this is the length\nof the prism here--",
    "start": "570720",
    "end": "575760"
  },
  {
    "text": "then you'd avoid overlap. And that's this picture. So this is an unfolding of\none of the two prism halves.",
    "start": "575760",
    "end": "582659"
  },
  {
    "text": "This is unfolding of the other. If you attach them, these\nvertices as is necessary, you get overlap.",
    "start": "582659",
    "end": "589149"
  },
  {
    "text": "Unless the prism\nwere short, then you would get this\nkind of unfolding.",
    "start": "589150",
    "end": "594170"
  },
  {
    "text": "So that's the proof. You can actually make the proof\neven simpler, kind of nifty.",
    "start": "594170",
    "end": "599430"
  },
  {
    "text": "Although it's less obvious\nthat this example exists. You can give the coordinates\nand you can check it exactly",
    "start": "599430",
    "end": "605080"
  },
  {
    "text": "and it has all the\nproperties you want. Each prism has been\nbent a little bit.",
    "start": "605080",
    "end": "610439"
  },
  {
    "text": "More or less the\nsame example, but now it has the feature that\nalpha plus beta prime is greater than 360, and\nalpha plus gamma prime",
    "start": "610440",
    "end": "617730"
  },
  {
    "text": "is greater than 360. So you just can't\nattach anything. Even locally, you\nget pure overlap.",
    "start": "617730",
    "end": "625870"
  },
  {
    "text": "So easy to check if\nyou're a computer. Easier to check and proof and\nverify if you're a computer.",
    "start": "625870",
    "end": "632770"
  },
  {
    "text": "Less easy visually. So that's what's known. Open problem-- which I\nshould probably write down--",
    "start": "632770",
    "end": "639910"
  },
  {
    "text": "is if your faces\nare convex polygons, is there a vertex\nununfoldable polyhedron?",
    "start": "639910",
    "end": "646247"
  },
  {
    "text": "That, we still don't know. So the witch's hat, all\nthe faces are triangles. There's no edge unfolding,\nbut it has a vertex unfolding.",
    "start": "646247",
    "end": "654367"
  },
  {
    "text": "These guys are nice. They're topologically\nconvex, but the faces are still very nonconvex. And we use that because we want\na giant angle, a reflex angle",
    "start": "654367",
    "end": "662890"
  },
  {
    "text": "together with something to\nadd up to more than 360. If you're always adding\nup two convex angles, you don't get that.",
    "start": "662890",
    "end": "668600"
  },
  {
    "text": "But maybe you could combine\nit with a polyhedron that's not Hamiltonian, so you have\nto have three things joining it",
    "start": "668600",
    "end": "675400"
  },
  {
    "text": "together and then you\ncould get more than 360? I don't know. It could be an interesting\nproblem to work on.",
    "start": "675400",
    "end": "682660"
  },
  {
    "text": "But so far, it is open. So that is vertex unfolding. ",
    "start": "682660",
    "end": "689910"
  },
  {
    "text": "Next question is about\ngeneral unfolding",
    "start": "689910",
    "end": "695509"
  },
  {
    "start": "693000",
    "end": "1005000"
  },
  {
    "text": "of nonconvex polyhedra. Still it's open whether\nevery polyhedron, say without boundary, has\na general unfolding.",
    "start": "695510",
    "end": "702269"
  },
  {
    "text": "Still we know that all\northogonal polyhedra of genus zero have an unfolding. That remains the\nstate of the art.",
    "start": "702270",
    "end": "708760"
  },
  {
    "text": "But we have a\nbetter way to unfold orthogonal polyhedra\nof genus zero.",
    "start": "708760",
    "end": "713910"
  },
  {
    "text": "And this is a new paper. It's not yet online\nbut it will be shortly. The final version just\nwent to the journal.",
    "start": "713910",
    "end": "721140"
  },
  {
    "text": "\"Unfolding Orthogonal Polyhedra\nwith Quadratic Refinement.\" So two of the same authors--\nMirela Damian and Robin",
    "start": "721140",
    "end": "729040"
  },
  {
    "text": "Flatland from the\nexponential unfolding. ",
    "start": "729040",
    "end": "734750"
  },
  {
    "text": "You may recall, we saw\na solution in lecture that has exponential refinement. The number of cuts in particular\ncan be exponential in n",
    "start": "734750",
    "end": "742120"
  },
  {
    "text": "in the worst case. This requires you take the grid. You refine it, at most,\nquadratic number of times",
    "start": "742120",
    "end": "748260"
  },
  {
    "text": "in each dimension. So the number of\ncuts is polynomial,",
    "start": "748260",
    "end": "753520"
  },
  {
    "text": "I guess at most, and to\nthe seventh if you've got n squared by n squared\nby n squared by n.",
    "start": "753520",
    "end": "760459"
  },
  {
    "text": "I think it's actually\nmuch less than that. Probably more like n squared,\nbut I need to be careful.",
    "start": "760460",
    "end": "766120"
  },
  {
    "text": "So I want to cover\nthis solution. It's a simple variation\nactually on the previous one,",
    "start": "766120",
    "end": "772262"
  },
  {
    "text": "but also there's some\nquestions about how the exponential one works. I want to go through\nthat one more time. We have new figures\nfor it from this paper.",
    "start": "772262",
    "end": "778950"
  },
  {
    "text": "So it looks a little different,\nmaybe a little bit clearer. That was our girl.",
    "start": "778950",
    "end": "784130"
  },
  {
    "text": "I need my hands. ",
    "start": "784130",
    "end": "790660"
  },
  {
    "text": "Remember, the general idea\nwas to slice your polyhedron in one direction so you end\nup with these bands, strips.",
    "start": "790660",
    "end": "797280"
  },
  {
    "text": "And then you visit the\nstrips in a treelike fashion. And in particular,\nat the leaves,",
    "start": "797280",
    "end": "803380"
  },
  {
    "text": "like the closest to\nyou, you've got a band and then you've\ngot a front face.",
    "start": "803380",
    "end": "808949"
  },
  {
    "text": "And so that would look\nsomething like this little box. So you've got a band that\ngoes around-- which way is it?",
    "start": "808950",
    "end": "819570"
  },
  {
    "text": "Band is this way it. Should be an x and z.",
    "start": "819570",
    "end": "825180"
  },
  {
    "text": "And then there's\nthe front face which here is drawn on the back. Those are the five out\nof six faces of the box",
    "start": "825180",
    "end": "833350"
  },
  {
    "text": "that are actually present. This face that's closest\nto us is actually attached to another band.",
    "start": "833350",
    "end": "839790"
  },
  {
    "text": "You could have leaves on\nthis side or that side. So what do we do?",
    "start": "839790",
    "end": "844990"
  },
  {
    "text": "We enter at S and\nwe exit at T. And we are told that the first\nturn you make from S",
    "start": "844990",
    "end": "852680"
  },
  {
    "text": "should be a right turn. And the last turn before\nT should be a left turn.",
    "start": "852680",
    "end": "858210"
  },
  {
    "text": "And you start in\nthe unfolding, you will start going\nvertical on S, that's why you should turn\nright because we never",
    "start": "858210",
    "end": "864316"
  },
  {
    "text": "want to turn left. We never want to go left in\nthe unfolding, which is here.",
    "start": "864316",
    "end": "869580"
  },
  {
    "text": "And we also want to end in\nthe vertical state for T so that we can chain\nthese together.",
    "start": "869580",
    "end": "875020"
  },
  {
    "text": "So we started S. We're told to\nturn right, which we do here.",
    "start": "875020",
    "end": "880270"
  },
  {
    "text": "Then we're basically\ngoing to zigzag. And if you check along this\nsurface, we turn right.",
    "start": "880270",
    "end": "885470"
  },
  {
    "text": "We go here, up there. And then we turn\nleft, and then right.",
    "start": "885470",
    "end": "891820"
  },
  {
    "text": "And then this is a\nleft because we're supposed to be\ndoing it from below.",
    "start": "891820",
    "end": "897040"
  },
  {
    "text": "And then a right with that\nred thing, then a left, right,",
    "start": "897040",
    "end": "902079"
  },
  {
    "text": "down here, and a\nleft, and we're done. And the number balances\nout, so we start vertical,",
    "start": "902080",
    "end": "909235"
  },
  {
    "text": "we end vertical. And then when we're done with\nall these things, we thicken.",
    "start": "909235",
    "end": "916053"
  },
  {
    "text": "It's not drawn here, but\nthese strips get thickened. And you end up attaching\nthese fatter versions, but basically you're\nfollowing the same path.",
    "start": "916054",
    "end": "922680"
  },
  {
    "text": "We don't thicken\nit at the beginning because we're\nactually going to do this many times\non the same cell.",
    "start": "922680",
    "end": "927730"
  },
  {
    "text": "And then we abstract\nthat picture to this iconography which says--\nthis I didn't talk about much",
    "start": "927730",
    "end": "934240"
  },
  {
    "text": "in lecture, which\nsays, you should start by turning right\nin S, and then you should end by turning\nleft and then visiting T.",
    "start": "934240",
    "end": "942170"
  },
  {
    "text": "So that's one picture. But it depends\nwhere you're going.",
    "start": "942170",
    "end": "949100"
  },
  {
    "text": "There are actually eight\ndifferent versions. I showed you this one. But all those combinations\nhave to happen.",
    "start": "949100",
    "end": "955930"
  },
  {
    "text": "And the top ones are when\nyou're all the way forward. The bottom ones are where\nyou're all the way back",
    "start": "955930",
    "end": "962949"
  },
  {
    "text": "in these slabs, so that's\nslightly different. And then there's whether S is on\nthe left or S is on the right,",
    "start": "962950",
    "end": "971389"
  },
  {
    "text": "relative to T. And then\nthere's whether you start by turning to\nthe right from S or end",
    "start": "971390",
    "end": "977790"
  },
  {
    "text": "by turning to the left. T is always the opposite. But those are the\neight possibilities",
    "start": "977790",
    "end": "984010"
  },
  {
    "text": "from three different choices. Are you far forward? Are you far back? Do you turn right from\nS or do you turn left?",
    "start": "984010",
    "end": "991550"
  },
  {
    "text": "And is S to the left\nor is S to the right? That's why you have\neight combinations. They all look\nbasically the same,",
    "start": "991550",
    "end": "998280"
  },
  {
    "text": "but those are your base cases.  So this is still all\nreview of the old version.",
    "start": "998280",
    "end": "1006670"
  },
  {
    "start": "1005000",
    "end": "1165000"
  },
  {
    "text": "And then the last part of\nthe old method is non-leaves. So in general, you\nhave a band which",
    "start": "1006670",
    "end": "1013959"
  },
  {
    "text": "is here drawn as\ntwo separate pieces, but really this is one band. The bands are easy to unfold.",
    "start": "1013960",
    "end": "1019370"
  },
  {
    "text": "They go straight. But then you have\nall these children. So you have your parent\nwhich is the S and T part.",
    "start": "1019370",
    "end": "1025500"
  },
  {
    "text": "You have to start\nhere and end here. Recursively, you want to\nvisit this whole subtree. So you might have children that\nare on the front side, children",
    "start": "1025500",
    "end": "1034114"
  },
  {
    "text": "that are on the backside. ",
    "start": "1034114",
    "end": "1039119"
  },
  {
    "text": "And again, we're told we\nshould initially turn right. So if we turn right, we\nvisit the first thing.",
    "start": "1039119",
    "end": "1045309"
  },
  {
    "text": "We tell this leaf or\nthis child, actually-- this is not necessarily a leaf. We tell this child that the\nnext thing we want to do",
    "start": "1045310",
    "end": "1052049"
  },
  {
    "text": "is turn to the left because\nwe just turned right. Actually, we just\nturned right twice,",
    "start": "1052050",
    "end": "1057290"
  },
  {
    "text": "so we've just gone right, right. We'll actually be\nunfolding initially up, so we turn right twice.",
    "start": "1057290",
    "end": "1063510"
  },
  {
    "text": "Now, we better\nturn left and then we will end up pointing\nI believe down,",
    "start": "1063510",
    "end": "1071730"
  },
  {
    "text": "because initially this\nwas pointing down. After you do this construction,\nyou'll be pointing down again. And that's why you\nwant to turn left here.",
    "start": "1071730",
    "end": "1078210"
  },
  {
    "text": "So you unroll this thing. You can verify you are\nactually just zigzagging.",
    "start": "1078210",
    "end": "1083670"
  },
  {
    "text": "And so you go back and\nforth through these. Verify this always\nproceeds to the right. But we're using different\niconography here.",
    "start": "1083670",
    "end": "1091059"
  },
  {
    "text": "This is an S on the left\nthat initially turns left. This is an S on the right\nthat initially turns right.",
    "start": "1091060",
    "end": "1097420"
  },
  {
    "text": "That's why we need the different\nforms of the recursive call. This is a picture where\ninitially we turn right on S",
    "start": "1097420",
    "end": "1104430"
  },
  {
    "text": "and S is to the right, but\nthere are different versions of this picture just\nlike in the base cases where S is to the left\nand where you initially",
    "start": "1104430",
    "end": "1111240"
  },
  {
    "text": "have to turn left. But they look the same. You just visit them back\nand forth like this.",
    "start": "1111240",
    "end": "1116450"
  },
  {
    "text": "At some point, you finish\nthe front children. Then you go up. And here, it's a\nlittle bit shifted",
    "start": "1116450",
    "end": "1121970"
  },
  {
    "text": "but these would\nnormally be aligned. Then you have to visit\nthe top children. You do that by visiting\nand going back and forth.",
    "start": "1121970",
    "end": "1130909"
  },
  {
    "text": "Then, of course, when\nyou're done here, you have to unwind\neverything you did.",
    "start": "1130910",
    "end": "1137370"
  },
  {
    "text": "Then we go over here. We visit that guy,\nback and forth. Eventually, we will end\nup on the inside here,",
    "start": "1137370",
    "end": "1143389"
  },
  {
    "text": "and having doubled everything,\nwe come back out to T. And all the time, we're\nunfolding to the right.",
    "start": "1143390",
    "end": "1150940"
  },
  {
    "text": "Now, what can we say about this? Well, what sucks is all of these\nchildren get visited twice.",
    "start": "1150940",
    "end": "1159410"
  },
  {
    "text": "And that's why you're doubling\nat every recursive level. And so if your recursion tree\nlooks like a long binary tree,",
    "start": "1159410",
    "end": "1173114"
  },
  {
    "start": "1165000",
    "end": "1220000"
  },
  {
    "text": "then you get exponential. ",
    "start": "1173114",
    "end": "1180380"
  },
  {
    "text": "Not quite. We'll come back to that. Here's an example of\nit being exponential with this kind of tree.",
    "start": "1180380",
    "end": "1186210"
  },
  {
    "text": "It's a little hard to\ndraw too many levels deep. So we have one level deep\nand then another level deep.",
    "start": "1186210",
    "end": "1193440"
  },
  {
    "text": "But you'll notice\nthat it's not uniform. This leaf gets visited\nexponentially many times,",
    "start": "1193440",
    "end": "1200029"
  },
  {
    "text": "but this one still\nonly got visited once. Of course, it's shallower. But even these two leaves\nare at the same level",
    "start": "1200030",
    "end": "1206510"
  },
  {
    "text": "and they did not get visited\nthe same number of times. So there's some hope\nof improving things as you might imagine. ",
    "start": "1206510",
    "end": "1214269"
  },
  {
    "text": "So this is where we go. There's two observations\nhere, two ideas.",
    "start": "1214270",
    "end": "1222049"
  },
  {
    "start": "1220000",
    "end": "1286000"
  },
  {
    "text": "Maybe I'll tell you\nwhere we started. I was I think-- I can\nnever remember years.",
    "start": "1222050",
    "end": "1230750"
  },
  {
    "text": "I was teaching this class\neither two or five years ago and I had idea number one.",
    "start": "1230750",
    "end": "1238269"
  },
  {
    "text": "And we worked on it in\nthe open problems session, but it was not enough. Idea number one is\njust part of the story.",
    "start": "1238269",
    "end": "1244210"
  },
  {
    "text": "And it's an idea that comes\nfrom the other graduate class I teach which is\nheavy-light decomposition",
    "start": "1244210",
    "end": "1249660"
  },
  {
    "text": "and advanced data structures. So this is a very\ncommon technique in advanced data structures.",
    "start": "1249660",
    "end": "1254960"
  },
  {
    "text": "It goes back to\nSleator and Tarjan, if you've ever heard of splay\ntrees or link-cut trees.",
    "start": "1254960",
    "end": "1261570"
  },
  {
    "text": "It's that era which was\nthe '80s, I believe, '83.",
    "start": "1261570",
    "end": "1266830"
  },
  {
    "text": "It's a very useful tool. Whenever you have\ngeneral tree structure and you want to\nmake it balanced,",
    "start": "1266830",
    "end": "1272439"
  },
  {
    "text": "you should think\nheavy-light decomposition. There are actually a few\nways to balance a tree, but heavy-light decomposition\nis usually the most powerful.",
    "start": "1272439",
    "end": "1279960"
  },
  {
    "text": "So essentially\nwhat it does is say",
    "start": "1279960",
    "end": "1287390"
  },
  {
    "start": "1286000",
    "end": "1320000"
  },
  {
    "text": "if I could just treat\nthis thing, this path as a single node, and then treat\nthese guys as separate nodes,",
    "start": "1287390",
    "end": "1295320"
  },
  {
    "text": "then I'd kind of be balanced. It would be like one super node\nand then a bunch of children hanging off of it.",
    "start": "1295320",
    "end": "1301549"
  },
  {
    "text": "One, two, three, four. So that's the picture\nI'd like to make.",
    "start": "1301550",
    "end": "1307140"
  },
  {
    "text": "I'm going to contract paths,\nonly paths of my tree. And it turns out\nthere's always a way",
    "start": "1307140",
    "end": "1312300"
  },
  {
    "text": "to take paths, contract\nthem into single nodes, so that the resulting thing\nhas height at most log n,",
    "start": "1312300",
    "end": "1321330"
  },
  {
    "start": "1320000",
    "end": "1464000"
  },
  {
    "text": "no matter what tree\nyou start with. And heavy-light decomposition\nis a way to do this. It's very simple to define.",
    "start": "1321330",
    "end": "1327810"
  },
  {
    "text": "For every node, you define\nthe idea of a heavy child.",
    "start": "1327810",
    "end": "1335435"
  },
  {
    "text": " This is a child with more\nthan half the weight.",
    "start": "1335435",
    "end": "1351150"
  },
  {
    "text": "The weight of a subtree is the\nnumber of descendant nodes,",
    "start": "1351150",
    "end": "1359706"
  },
  {
    "text": "so the number of\nnodes in that subtree.  So if we look at this\npicture, you've got this node.",
    "start": "1359706",
    "end": "1367700"
  },
  {
    "text": "It has one, two, three, four,\nfive, six, seven, eight, nine nodes below it.",
    "start": "1367700",
    "end": "1373490"
  },
  {
    "text": "This subtree only has one,\nso this subtree has seven. Seven is bigger\nthan half of nine.",
    "start": "1373490",
    "end": "1380400"
  },
  {
    "text": "Most of the weight\nis to the left. So we call this edge heavy.",
    "start": "1380400",
    "end": "1386120"
  },
  {
    "text": "Similarly, this edge is\nheavy because this is five. Five is more than half of seven.",
    "start": "1386120",
    "end": "1392770"
  },
  {
    "text": "This one's only\nthree nodes below it. That is still more than half\nbecause half of this is 2.5.",
    "start": "1392770",
    "end": "1401230"
  },
  {
    "text": "So this edge is heavy. This one is not heavy. So actually, in\nthe real picture,",
    "start": "1401230",
    "end": "1410110"
  },
  {
    "text": "it would look like this. This is a heavy path and\nthis guy's all by itself,",
    "start": "1410110",
    "end": "1415258"
  },
  {
    "text": "so there's one more node. But it has the same effect\nof balancing the tree.",
    "start": "1415259",
    "end": "1420660"
  },
  {
    "text": "So what's the point? In general, I have some tree. In general, I might\nhave many children.",
    "start": "1420660",
    "end": "1426930"
  },
  {
    "text": "No idea how many\nchildren are out there. So every node can\nhave many children",
    "start": "1426930",
    "end": "1432580"
  },
  {
    "text": "and these correspond to\nthe various bands that are attached to my parent band.",
    "start": "1432580",
    "end": "1438554"
  },
  {
    "text": " So that's heavy child.",
    "start": "1438555",
    "end": "1444080"
  },
  {
    "text": "In general though, every node\nhas at most one heavy child",
    "start": "1444080",
    "end": "1452630"
  },
  {
    "text": "because you can't have\nmore than two halves. If I have more than half\nof the weight in one child,",
    "start": "1452630",
    "end": "1458520"
  },
  {
    "text": "I can't have more than half of\nthe weight in another child. So every node has at\nmost one heavy child.",
    "start": "1458520",
    "end": "1464929"
  },
  {
    "start": "1464000",
    "end": "1512000"
  },
  {
    "text": "These edges connecting nodes\nand their heavy children we call heavy edges.",
    "start": "1464930",
    "end": "1470039"
  },
  {
    "text": " And whenever we\nhave a node, there's",
    "start": "1470040",
    "end": "1475950"
  },
  {
    "text": "at most one heavy edge\ngoing down from it, so heavy edges form heavy paths.",
    "start": "1475950",
    "end": "1481420"
  },
  {
    "text": "That's the point. So this red thing is\ncalled a heavy path. ",
    "start": "1481420",
    "end": "1490470"
  },
  {
    "text": "Cool. So what do we know\nabout heavy paths? The other edges, I\nshould say, these guys,",
    "start": "1490470",
    "end": "1499200"
  },
  {
    "text": "we call light edges. This is the heavy-light\ndecomposition, so every edge is\neither heavy or light.",
    "start": "1499200",
    "end": "1505370"
  },
  {
    "text": "It could be a node\nonly has light children because it's well-distributed. In the worst case, it\nhas one heavy child,",
    "start": "1505370",
    "end": "1511120"
  },
  {
    "text": "one heavy edge coming out of it. So we get heavy paths.",
    "start": "1511120",
    "end": "1516880"
  },
  {
    "text": "I guess I'll say heavy\nedges form paths. ",
    "start": "1516880",
    "end": "1525350"
  },
  {
    "text": "And if we look at\nwhat I normally call the light depth\nof a node, this",
    "start": "1525350",
    "end": "1535730"
  },
  {
    "text": "is if I look at a\nnode in this tree and I measure how\nmany light edges do",
    "start": "1535730",
    "end": "1540770"
  },
  {
    "text": "I have to traverse in order to\nget from the root of the tree to that node, here it's\nonly one light edge.",
    "start": "1540770",
    "end": "1546455"
  },
  {
    "text": "The number of light edges follow\non any path is at most log n,",
    "start": "1546455",
    "end": "1552990"
  },
  {
    "text": "log base 2 of n, because every\ntime I follow a light edge,",
    "start": "1552990",
    "end": "1558120"
  },
  {
    "text": "I know that I started\nwith say end nodes. I follow a light edge. I know that I have at most half\nn nodes because my weight goes",
    "start": "1558120",
    "end": "1566110"
  },
  {
    "text": "down by half. If I start with n, I can only\nreduce by a factor of 2 log n",
    "start": "1566110",
    "end": "1571159"
  },
  {
    "text": "times before I run out of nodes. Then I'm in a leaf when I get\ndown to the weight of one.",
    "start": "1571160",
    "end": "1576340"
  },
  {
    "start": "1576000",
    "end": "1603000"
  },
  {
    "text": "So light depth of any\nnode is at most log n because weight halves every\nstep, every light step.",
    "start": "1576340",
    "end": "1590020"
  },
  {
    "text": " So this is why, if you\ncontract the heavy paths",
    "start": "1590020",
    "end": "1597230"
  },
  {
    "text": "to single nodes, the depth\nof the remaining tree is only log n.",
    "start": "1597230",
    "end": "1603559"
  },
  {
    "start": "1603000",
    "end": "1752000"
  },
  {
    "text": "So what does this tell us? If I could somehow\ndeal with paths efficiently and not\nfeel the recursive pain",
    "start": "1603560",
    "end": "1612350"
  },
  {
    "text": "that we're getting here\nfrom doubling everything along a path, then I\ncan chain them together",
    "start": "1612350",
    "end": "1619210"
  },
  {
    "text": "in the usual bad recursive way. I can afford to double\non a balance tree. So if I could somehow treat\nthese paths as single things,",
    "start": "1619210",
    "end": "1626890"
  },
  {
    "text": "we'd be all set. That was idea number one\nand that sat for years. I knew this should be possible.",
    "start": "1626890",
    "end": "1633080"
  },
  {
    "text": "But what we were missing\nwas idea number two.",
    "start": "1633080",
    "end": "1638110"
  },
  {
    "text": "It's funny. If you stare at this\npicture long enough, it's actually kind of obvious. It requires more\nwork after the idea.",
    "start": "1638110",
    "end": "1646840"
  },
  {
    "text": "So here, the same\npicture as before. I spread it out a little bit.",
    "start": "1646840",
    "end": "1652880"
  },
  {
    "text": "So we end up visiting\nthis guy last. And then we end up\nrecursively visiting this one",
    "start": "1652880",
    "end": "1658210"
  },
  {
    "text": "a second time, then\nthis one a second time, then this one a second time. We go down here.",
    "start": "1658210",
    "end": "1663920"
  },
  {
    "text": "We go around here. Visit this one a second time. Unwind.",
    "start": "1663920",
    "end": "1669929"
  },
  {
    "text": "Visit this one a second\ntime, this one a second time, this one a second\ntime, and we're up.",
    "start": "1669930",
    "end": "1675372"
  },
  {
    "text": "Did I visit them\nall a second time? ",
    "start": "1675372",
    "end": "1683679"
  },
  {
    "text": "No. There's one that I didn't\nvisit a second time, which",
    "start": "1683680",
    "end": "1688820"
  },
  {
    "text": "is the last child. I only visited that one once.",
    "start": "1688820",
    "end": "1694480"
  },
  {
    "text": "And that's all we need is\none child because I only need to do a path efficiently.",
    "start": "1694480",
    "end": "1701550"
  },
  {
    "text": "So I'm recursively visiting\nmost of the children here. Those are going to\nbe my light children.",
    "start": "1701550",
    "end": "1706830"
  },
  {
    "text": "The one heavy\nchild, I want to aim to visit that one last because\nthat one's only visited once",
    "start": "1706830",
    "end": "1712480"
  },
  {
    "text": "so it doesn't get recursively\ndoubled at this level. Of course, the higher up the\nlevel, it will get doubled.",
    "start": "1712480",
    "end": "1717930"
  },
  {
    "text": "But there's only log n levels\nwe're going to get doubled, so we'll only add a factor of n.",
    "start": "1717930",
    "end": "1723590"
  },
  {
    "text": "Idea number two is that the\nlast child gets visited only one",
    "start": "1723590",
    "end": "1735080"
  },
  {
    "text": "at this recursive level. ",
    "start": "1735080",
    "end": "1743564"
  },
  {
    "text": "And if you've taken\nan algorithms class, you know recursively\nvisiting things once versus twice\nmakes a big difference.",
    "start": "1743564",
    "end": "1749390"
  },
  {
    "text": "Here it's a matter of doubling\nor just staying the same. If we can rearrange to visit\nthese children first, then do",
    "start": "1749390",
    "end": "1757360"
  },
  {
    "text": "this one last, then visit\nthis child first, then do this one last, then visit\nthis child first, then do this one last, and then do all\nthe children in whatever order,",
    "start": "1757360",
    "end": "1766300"
  },
  {
    "text": "then we'll guarantee that this\npath doesn't get recursively refined at this\nlevel so it's really",
    "start": "1766300",
    "end": "1771870"
  },
  {
    "text": "being treated as a\nsingle node basically. And that lets you tie\ntogether these unfoldings in an efficient way.",
    "start": "1771870",
    "end": "1778090"
  },
  {
    "text": "The only issue is I need to be\nable-- this construction isn't enough because this construction\nbasically forced this one",
    "start": "1778090",
    "end": "1786220"
  },
  {
    "text": "to be the last child\nto get visited. I need to be able to\ncontrol which child is last",
    "start": "1786220",
    "end": "1792210"
  },
  {
    "text": "visited because the\nheavy property is a property of the tree. One of these guys,\nmaybe this one is heavy.",
    "start": "1792210",
    "end": "1797830"
  },
  {
    "text": "Maybe that one's heavy. We've got to be\nable to end on that. So there are two cases.",
    "start": "1797830",
    "end": "1804180"
  },
  {
    "text": "First case is that we always\nstart from the bottom here. And first case is\nthat on the top side",
    "start": "1804180",
    "end": "1813770"
  },
  {
    "text": "is where the heavy child is. So this is the easy case because\nthe bottom, we don't care.",
    "start": "1813770",
    "end": "1821190"
  },
  {
    "text": "We just visit the children\nin whatever order's natural. Then we come up. And basically, we have the\nfreedom to spin around here.",
    "start": "1821190",
    "end": "1828464"
  },
  {
    "text": "We have to turn\nleft, but we could either choose to immediately\ngo up here or keep going",
    "start": "1828464",
    "end": "1833680"
  },
  {
    "text": "and go up here, or keep\ngoing and go up here. That would visit\nthat one too early. Or go here. Turns out this is\nthe right choice.",
    "start": "1833680",
    "end": "1841000"
  },
  {
    "text": "But we had freedom to just\nspin around and choose when to go up. Just try them all. One of them will\nend up being last.",
    "start": "1841000",
    "end": "1848544"
  },
  {
    "text": "Basically, you\nwant this guy to be in the middle between\nwhere you start and the one just to the\nleft here because you're",
    "start": "1848544",
    "end": "1855620"
  },
  {
    "text": "kind of rainbowing\nback and forth, zeroing in on the last guy.",
    "start": "1855620",
    "end": "1860900"
  },
  {
    "text": "And just by pigeonholing, I\nsuppose, one of these choices will work because there's\nk choices you could make",
    "start": "1860900",
    "end": "1870530"
  },
  {
    "text": "on when to turn up that each\nresult in a different guy being last. And so one of them corresponds\nto the correct one.",
    "start": "1870530",
    "end": "1875990"
  },
  {
    "text": "That's easy to figure\nout which one it is. So if it's on the top\nside, it's really easy. You just pick it.",
    "start": "1875990",
    "end": "1882817"
  },
  {
    "text": "This would be great. This would actually give\nus linear refinement if we only had this case. The other case is when the\nguy we want to make last,",
    "start": "1882817",
    "end": "1894920"
  },
  {
    "text": "the heavy child, is\non the bottom side. In this case, we\nneed to do more work.",
    "start": "1894920",
    "end": "1900660"
  },
  {
    "text": "So this is basically\nthe old construction. Here we don't really\nhave freedom from S. We can't just bypass this\nguy because it will actually",
    "start": "1900661",
    "end": "1907890"
  },
  {
    "text": "be hard to get him later. So we've got to visit\nhim and back and forth.",
    "start": "1907890",
    "end": "1913070"
  },
  {
    "text": "But the one thing we could\ndo is just omit a child, just forget about\nit for a while.",
    "start": "1913070",
    "end": "1918269"
  },
  {
    "text": "Don't visit it. Visit everything else\nin whatever order feels natural to you. ",
    "start": "1918270",
    "end": "1924500"
  },
  {
    "text": "And then we're going\nto splice this guy in. So we'll see where\ndoes the path go.",
    "start": "1924500",
    "end": "1930770"
  },
  {
    "text": "At some point, it will go\nabove this proposed last guy.",
    "start": "1930770",
    "end": "1935850"
  },
  {
    "text": "And what we're going to do,\nwhich is on the next slide, is on the return trip-- so\nremember we have this picture.",
    "start": "1935850",
    "end": "1946139"
  },
  {
    "start": "1940000",
    "end": "2024000"
  },
  {
    "text": "We come out here. Then we recursively\ndouble everything. So at some point, we are\ncoming here, doubling.",
    "start": "1946140",
    "end": "1954290"
  },
  {
    "text": "And at that point, we turn in. ",
    "start": "1954290",
    "end": "1959570"
  },
  {
    "text": "But if S and T are\naligned like this, we are pointing the wrong way.",
    "start": "1959570",
    "end": "1965640"
  },
  {
    "text": "We want it to get here,\nbut it doesn't even look like we're\nin the same side. But we are.",
    "start": "1965640",
    "end": "1971290"
  },
  {
    "text": "We just have to recursively\ndouble everything again. In the end, when you recursively\ndouble everything again,",
    "start": "1971290",
    "end": "1979040"
  },
  {
    "text": "you will be here. And we haven't\nfinished doubling here. But in the end, you will\ncome out here and exit at T.",
    "start": "1979040",
    "end": "1987600"
  },
  {
    "text": "So overall, these guys which\nhaven't been visited yet, they'll end up being\ndoubled from this procedure.",
    "start": "1987600",
    "end": "1993000"
  },
  {
    "text": "These guys will end\nup being quadrupled. So we're doing four recursive\ncalls for most of the children.",
    "start": "1993000",
    "end": "2000156"
  },
  {
    "text": "Some of them might get\nlucky and only double. But all we care about is if\nthis guy only gets visited once.",
    "start": "2000156",
    "end": "2007290"
  },
  {
    "text": "That's the key. Because this will\nbe recursively here.",
    "start": "2007290",
    "end": "2012440"
  },
  {
    "text": "It's hard to unwind. But then you'll end up on\nthe inside of this channel. Then you'll end up\nvisiting this guy.",
    "start": "2012440",
    "end": "2017730"
  },
  {
    "text": "Then you'll end up\nvisiting this guy. And then you get out at T. So you won't come back to here. That's the key.",
    "start": "2017730",
    "end": "2024590"
  },
  {
    "start": "2024000",
    "end": "2283000"
  },
  {
    "text": "That's all we need. You can write down a\nrecurrence at this point. ",
    "start": "2024590",
    "end": "2035280"
  },
  {
    "text": "If you look at the\nlevel of refinement for an n vertex polyhedron\nor an n slab polyhedron,",
    "start": "2035280",
    "end": "2041380"
  },
  {
    "text": "it would be-- n, we'll\nsay is the number of nodes in the tree of\nslabs, this picture.",
    "start": "2041380",
    "end": "2047720"
  },
  {
    "text": "In general, that is\nproportional to the number of vertices in the polyhedron.",
    "start": "2047720",
    "end": "2052960"
  },
  {
    "text": "In the worst case, it's going\nto be the max of two things-- R",
    "start": "2052960",
    "end": "2060000"
  },
  {
    "text": "n minus 1, and 4\ntimes R of n over 2.",
    "start": "2060000",
    "end": "2065199"
  },
  {
    "text": " Well, I should say\nn sub i, max over i.",
    "start": "2065199",
    "end": "2073919"
  },
  {
    "text": "So what I mean to say here--\nthis is also technically an sub",
    "start": "2073920",
    "end": "2081250"
  },
  {
    "text": "i. This is an upper\nbound certainly.",
    "start": "2081250",
    "end": "2086469"
  },
  {
    "text": "So if we look at the recursion,\nhow much refinement we need,",
    "start": "2086469",
    "end": "2091860"
  },
  {
    "text": "the worst refinement\nover the whole tree is the max of all\nof its subtrees. So there's a [INAUDIBLE] here, a\n[INAUDIBLE] here, and then also",
    "start": "2091860",
    "end": "2099390"
  },
  {
    "text": "of course, what we need\nto do within the node. And on the one hand,\nthere's the heavy situation,",
    "start": "2099390",
    "end": "2105770"
  },
  {
    "text": "the heavy edge. That only decreases the\nsize of the tree by 1. But it only gets\nrecursively visited",
    "start": "2105770",
    "end": "2112320"
  },
  {
    "text": "one time, 1 times\nR of n minus 1. There's the other\nlight children.",
    "start": "2112320",
    "end": "2117470"
  },
  {
    "text": "These are all light children. n sub i represents the number\nof nodes in that child.",
    "start": "2117470",
    "end": "2123369"
  },
  {
    "text": "We know that this\nis at most n over 2 because we know that at\nmost half of the weight",
    "start": "2123370",
    "end": "2129710"
  },
  {
    "text": "lives in the light child. Now these get recursively\nvisited at most four times,",
    "start": "2129710",
    "end": "2134940"
  },
  {
    "text": "up to four times. Worst case, it\nwill be four times. ",
    "start": "2134940",
    "end": "2140580"
  },
  {
    "text": "In this recurrence, this\nfirst term doesn't matter. R of n is at most\nR of n minus 1.",
    "start": "2140580",
    "end": "2145589"
  },
  {
    "text": "Yeah, big deal. That's just saying R\nof n increases with n. So really, this is going to be--\nand then the max disappears.",
    "start": "2145590",
    "end": "2154330"
  },
  {
    "text": "All we need is this is at\nmost 4 times R of n over 2.",
    "start": "2154330",
    "end": "2159720"
  },
  {
    "text": "And this is a recurrence. If you read CLRS, this\nfollows the master theorem",
    "start": "2159720",
    "end": "2166560"
  },
  {
    "text": "and you know immediately\nthis is order n squared. It'd be theta n squared,\nbut this is an upper bound.",
    "start": "2166560",
    "end": "2173590"
  },
  {
    "text": "In the worst case, it will\nactually be theta n squared. So the amount of refinement\nis at most n squared.",
    "start": "2173590",
    "end": "2180060"
  },
  {
    "text": "If this is not obvious\nto you, an easy way to imagine it is you start\nwith something of size n,",
    "start": "2180060",
    "end": "2188630"
  },
  {
    "text": "you're visiting four times\nsomething of size n over 2.",
    "start": "2188630",
    "end": "2194589"
  },
  {
    "text": "This is called a recurrence\ntree, recursion tree. Each of these visits four\ntimes something of size",
    "start": "2194590",
    "end": "2199890"
  },
  {
    "text": "n over 4 and so on.",
    "start": "2199890",
    "end": "2205480"
  },
  {
    "text": "Obviously, log n levels here. And at the bottom, you're\ngoing to have a bunch of ones.",
    "start": "2205480",
    "end": "2212770"
  },
  {
    "text": "That's when you stop recursing. And if you add up\neverything level by level, how much\nwork am I doing here",
    "start": "2212770",
    "end": "2223120"
  },
  {
    "text": "and how much work\nam I doing here? 2n. How much work am I doing here?",
    "start": "2223120",
    "end": "2229600"
  },
  {
    "text": "It gets harder to add,\nbut there are 4 squared, 16 things, each n over 4.",
    "start": "2229600",
    "end": "2236069"
  },
  {
    "text": "So it's 4n. In general, it goes up by\na factor of 2 every time which means you're\ndominated by the last layer.",
    "start": "2236070",
    "end": "2245270"
  },
  {
    "text": "And if you count, it's\ngoing to be n squared because this is 2 to the\n0, 2 to the 1, 2 to the 2.",
    "start": "2245270",
    "end": "2255590"
  },
  {
    "text": "After you get to log n,\nit's 2 to the log n times n,",
    "start": "2255590",
    "end": "2261610"
  },
  {
    "text": "so that is n squared. And this is a\ngeometric series if you want to add all\nthese numbers up.",
    "start": "2261610",
    "end": "2266710"
  },
  {
    "text": "And so it's 2 times n squared. So that's the\nproof of this bound",
    "start": "2266710",
    "end": "2273650"
  },
  {
    "text": "and that's how you get\nquadratic refinement. So either idea is kind\nof easy, but the two",
    "start": "2273650",
    "end": "2280470"
  },
  {
    "text": "together, pretty powerful. Questions about unfolding? I think this algorithm\nshould be pretty clear.",
    "start": "2280470",
    "end": "2287560"
  },
  {
    "text": "One of the questions\nwas, are they practical? I think the answer is no. It has the same issue of\nstrip folding from origami.",
    "start": "2287560",
    "end": "2294484"
  },
  {
    "text": "But I think they would\nmake great animations. This is still a cool\nproject to see virtually. But to do it physically\nis probably crazy.",
    "start": "2294485",
    "end": "2303059"
  },
  {
    "start": "2302000",
    "end": "2360000"
  },
  {
    "text": "No one has tried\nas far as I know. Another idea. This is an open problem.",
    "start": "2303060",
    "end": "2309040"
  },
  {
    "text": "So orthogonal was great. It has all these\nnice properties. Can you generalize it, not\nto arbitrary polyhedra,",
    "start": "2309040",
    "end": "2314670"
  },
  {
    "text": "but to some other\nkind of orthogonal, such as this is a\nhexagonal lattice in 3D?",
    "start": "2314670",
    "end": "2321240"
  },
  {
    "text": "I mean, it's just\nextruded in one dimension, but then you have hex\ngrid in another dimension. You could try to do that.",
    "start": "2321240",
    "end": "2327260"
  },
  {
    "text": "And my guess is if\nyou set up the bands to be in hex dimensions, it\njust works, but I haven't tried.",
    "start": "2327260",
    "end": "2334410"
  },
  {
    "text": "There's potentially some\nlow-hanging fruit here. There should be other 3D\nstructures that might work.",
    "start": "2334410",
    "end": "2340030"
  },
  {
    "text": "A typical one in\ncomputational geometry is called c-oriented\npolyhedra where here we have three oriented polyhedra.",
    "start": "2340030",
    "end": "2346269"
  },
  {
    "text": "There's three\ndifferent directions that the faces can\nbe perpendicular to.",
    "start": "2346270",
    "end": "2351280"
  },
  {
    "text": "Take 10 of them, can you\napply the same technique? That gets dicier. But something like this I\nfeel like may be possible.",
    "start": "2351280",
    "end": "2358640"
  },
  {
    "text": "You should try it out. But as far as I know,\nthis is all open.",
    "start": "2358640",
    "end": "2364710"
  },
  {
    "start": "2360000",
    "end": "2489000"
  },
  {
    "text": "Last question is\nCauchy's rigidity theorem seems intuitively obvious.",
    "start": "2364710",
    "end": "2370620"
  },
  {
    "text": "Or as I wrote it in the notes,\nis Cauchey's rigidity theorem obvious? And my answer is no,\nnot obvious to me.",
    "start": "2370620",
    "end": "2377970"
  },
  {
    "text": "I have two reasons\nwhy it's not obvious. One is it's not true\nin two dimensions.",
    "start": "2377970",
    "end": "2384819"
  },
  {
    "text": "That's kind of a weak statement. But if I take a convex\npolyhedron in 2D--",
    "start": "2384820",
    "end": "2392230"
  },
  {
    "text": "so these are rigid faces. This is the equivalent\nof a triangle. This is not rigid, of course.",
    "start": "2392230",
    "end": "2398030"
  },
  {
    "text": " So that's one statement. And then the other thing\nis convexity is necessary.",
    "start": "2398030",
    "end": "2405180"
  },
  {
    "text": "There's this thing,\nSteffen's polyhedron. Actually, originally, there\nwas a Connelly polyhedron.",
    "start": "2405180",
    "end": "2410619"
  },
  {
    "text": "We've seen some\nresults by Connelly. He's a rigidity expert. And then this was\nsimplified by this guy Klaus",
    "start": "2410620",
    "end": "2417470"
  },
  {
    "text": "Steffen in the '70s. This is a drawing\nof it flexing in 3D.",
    "start": "2417470",
    "end": "2424970"
  },
  {
    "text": "Nonconvex polyhedra\ncan be flexible. They happen to preserve\ntheir volume as they flex. ",
    "start": "2424970",
    "end": "2435060"
  },
  {
    "text": "It's hard to say why a\ntheorem is not obvious. To me, it's not obvious. Of course, if you play\nwith convex polyhedra,",
    "start": "2435060",
    "end": "2440174"
  },
  {
    "text": "they are rigid, so maybe\nit's obvious from that. But you've got to prove\nexperimental evidence",
    "start": "2440174",
    "end": "2447090"
  },
  {
    "text": "mathematically. Other questions? ",
    "start": "2447090",
    "end": "2455280"
  },
  {
    "text": "Then I have some fun\nvideos to show you. The first one is the making\nof this origami piece which",
    "start": "2455280",
    "end": "2461173"
  },
  {
    "text": "I've probably shown\na picture of before. It's by Brian Chan. It's one square paper, no cuts.",
    "start": "2461174",
    "end": "2466650"
  },
  {
    "text": "Mens et Manus with a little\ncrane instead of-- what's it normally?",
    "start": "2466650",
    "end": "2473460"
  },
  {
    "text": "Who knows? And then he also\nmade this nice box. And then the glass is\netched by Peter Houk who runs the glass lab at MIT.",
    "start": "2473460",
    "end": "2481260"
  },
  {
    "start": "2481260",
    "end": "2489410"
  }
]