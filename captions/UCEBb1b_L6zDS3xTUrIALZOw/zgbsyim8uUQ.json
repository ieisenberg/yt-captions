[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "6859"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation or view\nadditional materials from",
    "start": "6860",
    "end": "13410"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at ocw.mit.edu.",
    "start": "13410",
    "end": "18860"
  },
  {
    "text": " PROFESSOR: So we have Arvind\ntoday going to talk about how",
    "start": "18860",
    "end": "26106"
  },
  {
    "text": "actually do parallelism much\ncloser to hardware and all the work we have been doing.",
    "start": "26106",
    "end": "32470"
  },
  {
    "text": "ARVIND: So first, just\na clarification. This talk is not really\nabout any techniques.",
    "start": "32470",
    "end": "37600"
  },
  {
    "text": "This is some very primary ideas\nthat I have some new ideas on parallel programming.",
    "start": "37600",
    "end": "44470"
  },
  {
    "text": "The second thing is 5, 6 years\nago I was going around the country giving a talk, why\nhardware design can't be left",
    "start": "44470",
    "end": "51640"
  },
  {
    "text": "to hardware designers. Because I think the way they\nexpressed their ideas is very,",
    "start": "51640",
    "end": "59770"
  },
  {
    "text": "very low level from software\npoint of view. So I have worked pretty hard\non injecting some fairly",
    "start": "59770",
    "end": "65750"
  },
  {
    "text": "sophisticated ideas from\nsoftware into hardware design. But it often happens when you\ndeal with powerful people, you",
    "start": "65750",
    "end": "73780"
  },
  {
    "text": "get effected by it. So I have sort of come\nthe full cirlce. Now I'm going to show you how\nhardware design can influence",
    "start": "73780",
    "end": "80670"
  },
  {
    "text": "software design and\nthat's really the idea behind this talk. So that's borrowing some ideas\nfrom hardware design.",
    "start": "80670",
    "end": "87760"
  },
  {
    "text": " Cell processor is a very good\nexample of a system on a chip",
    "start": "87760",
    "end": "96360"
  },
  {
    "text": "and this is what everybody\nbelieves the future will look like. That you'll have fairly\nsymmetric things in some sense",
    "start": "96360",
    "end": "106430"
  },
  {
    "text": "and that is needed by hardware\nbecause hardware gets out of hand if you have wires running\nall over the place.",
    "start": "106430",
    "end": "112409"
  },
  {
    "text": "So people would like these\nthings to be fairly regular in",
    "start": "112410",
    "end": "117600"
  },
  {
    "text": "some sense, but that doesn't\nmean that all these styles",
    "start": "117600",
    "end": "123290"
  },
  {
    "text": "have to be the same. So for example, you may have\nvery application specific",
    "start": "123290",
    "end": "129000"
  },
  {
    "text": "blocks on your chip. So for example, in your cell\nphone you have many, many",
    "start": "129000",
    "end": "136610"
  },
  {
    "text": "blocks which are specialized,\nespecially all the radio communication. Because if you did that stuff\nin software you may not be",
    "start": "136610",
    "end": "144210"
  },
  {
    "text": "able to meet the performance and\neven if you can meet the performance your battery will\ndrain instantaneously.",
    "start": "144210",
    "end": "150850"
  },
  {
    "text": "I mean, it just takes too much\npower to do that kind of computation in software.",
    "start": "150850",
    "end": "156569"
  },
  {
    "text": "So for various reasons we need\napplication specific processing units and I'm\nsure cell processor has",
    "start": "156570",
    "end": "163329"
  },
  {
    "text": "quite a few of these. By the way, these application\nspecific units, they're often",
    "start": "163330",
    "end": "168489"
  },
  {
    "text": "called ASICs. And you can think of them as\na separate chip, but in due course of time they become\nblocks of a bigger thing.",
    "start": "168490",
    "end": "176780"
  },
  {
    "text": "You may have general\npurpose processors. Already, systems have more\nthan one such thing.",
    "start": "176780",
    "end": "183019"
  },
  {
    "text": "Cell processor has how many? Like 8. PROFESSOR: Depends. Some have 8, but they\ndon't [OBSCURED]",
    "start": "183020",
    "end": "189900"
  },
  {
    "text": "So the current Playstations\nalready list supposedly 7, but we've had only 6. So, the [OBSCURED].",
    "start": "189900",
    "end": "198379"
  },
  {
    "text": "PROFESSOR: And high-end cell\nphones have 2 general purpose processors and 2 DSPs on it,\nso you certainly have --",
    "start": "198380",
    "end": "211960"
  },
  {
    "text": "multiple processors you will\nhave memory banks, et cetera. And you will have structured\non-chip",
    "start": "211960",
    "end": "218080"
  },
  {
    "text": "interconnection networks. ARVIND: So I think this\nis not controllers.",
    "start": "218080",
    "end": "224080"
  },
  {
    "text": "That this is what the trajectory\nwill look like in the future. That doesn't mean that all the\nchips will look the same.",
    "start": "224080",
    "end": "230760"
  },
  {
    "text": "You may have different mixes of\nthings depending upon the application and one of the\ninteresting things is can you",
    "start": "230760",
    "end": "237470"
  },
  {
    "text": "put together one of these things\nfast enough because it's very, very expensive\nto design and",
    "start": "237470",
    "end": "242660"
  },
  {
    "text": "implement these things. So really one issue that comes\nup all the time is can we",
    "start": "242660",
    "end": "247690"
  },
  {
    "text": "rapidly produce high quality\nchips and surrounding systems and software for such thing?",
    "start": "247690",
    "end": "253310"
  },
  {
    "text": " So this talk, as I said, it's\nabout ideas and what I'm going",
    "start": "253310",
    "end": "260630"
  },
  {
    "text": "to do is I'm first going to tell\nyou how I used to think about parallel programming.",
    "start": "260630",
    "end": "265670"
  },
  {
    "text": " And this way is all\nabout threads.",
    "start": "265670",
    "end": "271750"
  },
  {
    "text": "You know, where are\nmy threads? And I worked on this problem\nfor a very, very long time. Like 20 years and this is not\nnecessarily wrong, You know",
    "start": "271750",
    "end": "280449"
  },
  {
    "text": "I'm sure in this course itself\nyou have seen quite a bit about this and I think\ntomorrow's lecture is on Cilk",
    "start": "280450",
    "end": "287090"
  },
  {
    "text": "so you will see even\nmore about threads. ",
    "start": "287090",
    "end": "292259"
  },
  {
    "text": "And lately, I've been thinking\nabout it differently.",
    "start": "292260",
    "end": "297500"
  },
  {
    "text": "And really the main point I\nwould like to get across somehow to you is now I think of\nparallel little programming",
    "start": "297500",
    "end": "305250"
  },
  {
    "text": "module as a resource. What do you mean\nas a resource? I'll try to make it more\nconcrete, this idea.",
    "start": "305250",
    "end": "313470"
  },
  {
    "text": "And the whole issue here is\nI think this viewpoint is",
    "start": "313470",
    "end": "318770"
  },
  {
    "text": "valuable, but it's\nnot proven yet. You know, so it may\nnot be right.",
    "start": "318770",
    "end": "324120"
  },
  {
    "text": "So just a warning. I've been working with this on\nstudents, in particular.",
    "start": "324120",
    "end": "332690"
  },
  {
    "text": "Now those of you who have\nheard of transactional programming, lots of things I\nwill say you'll say oh, you",
    "start": "332690",
    "end": "338580"
  },
  {
    "text": "mean a transaction? Yes, I mean there are very, very\nstrong connections for transactional stuff, but that's\nnot the language I'm",
    "start": "338580",
    "end": "345960"
  },
  {
    "text": "going to be using here. These slides are color-coded. So when I was talking about old\nworld thinking it's yellow",
    "start": "345960",
    "end": "354130"
  },
  {
    "text": "and when it's new thinking\nthen it's white. So well, I think you probably\nhave already heard this.",
    "start": "354130",
    "end": "361389"
  },
  {
    "text": "That the only reason for\nparallel programming used to be performance. This made programming\nextremely difficult.",
    "start": "361390",
    "end": "368980"
  },
  {
    "text": "You had to know a lot\nabout the machine. You were programming in code\nwere not portable.",
    "start": "368980",
    "end": "374300"
  },
  {
    "text": "Endless performance tuning,\nall this still goes on. I mean, very few of these\nthings have changed.",
    "start": "374300",
    "end": "379630"
  },
  {
    "text": "Parallel libraries were\nnot composable. And this is one of the main\nthings I worry about a lot and",
    "start": "379630",
    "end": "385229"
  },
  {
    "text": "I think Allen was alluding\nto it too. Somebody has code, he just wants\nto run the damn thing. You know, even at factor\nof 2 speed that",
    "start": "385230",
    "end": "391880"
  },
  {
    "text": "would be what fantastic. You know, often it\nruns slower. Very, very fun, machines.",
    "start": "391880",
    "end": "398200"
  },
  {
    "text": "Very different to deal with\nheap structures and memory hierarchies. And then there is always the\nsynchronization cost issue.",
    "start": "398200",
    "end": "408060"
  },
  {
    "text": "In some sense parallel\nprogramming doesn't make sense if there is no synchronization\ngoing on and that's like this",
    "start": "408060",
    "end": "413480"
  },
  {
    "text": "embarrsingly parallel\ncomputation you just start off and things never talk\nto each other.",
    "start": "413480",
    "end": "418770"
  },
  {
    "text": "In even moderately interesting\nparallel programs there's always some communication\nbetween various tasks and when",
    "start": "418770",
    "end": "426740"
  },
  {
    "text": "that happens synchronization\ncost becomes an issue and it is such a major issue right\nnow that you have to think",
    "start": "426740",
    "end": "433570"
  },
  {
    "text": "about it out front. Oh, if I synchronize too much\nthen I know for a fact that my",
    "start": "433570",
    "end": "438620"
  },
  {
    "text": "program's going to\nrun like a dog. So you try to avoid\nsynchronization and make",
    "start": "438620",
    "end": "443750"
  },
  {
    "text": "things coarser and so on. Really the whole issue used to\nbe how to exploit hundreds of",
    "start": "443750",
    "end": "450240"
  },
  {
    "text": "threads from software because\nnew hardware will support many, many threads.",
    "start": "450240",
    "end": "455730"
  },
  {
    "text": " But at the same time, it's\nimportant to understand that",
    "start": "455730",
    "end": "460760"
  },
  {
    "text": "in this world there's always\nvirtualization. So number of threads in your\nmachine is never going to",
    "start": "460760",
    "end": "466590"
  },
  {
    "text": "match exactly what you have\nin your application. So any programming model you\nhave, virtualization is a very",
    "start": "466590",
    "end": "473720"
  },
  {
    "text": "important aspect of it. That I have n threads and n may\nbe dynamic, maybe varying",
    "start": "473720",
    "end": "479320"
  },
  {
    "text": "with time in my application,\nbut in hardware I have some fixed number of threads.",
    "start": "479320",
    "end": "485000"
  },
  {
    "text": "Which is significantly smaller\nin general than what you have in your application.",
    "start": "485000",
    "end": "490680"
  },
  {
    "text": "So the thing I was most\ninterested in all those days was what I call implicit\nparallelism.",
    "start": "490680",
    "end": "497409"
  },
  {
    "text": "And from the questions I was\nhearing about analysis you're doing of your programs, all\nthose issues come up there.",
    "start": "497410",
    "end": "504550"
  },
  {
    "text": "You know, given some code can I\nfigure out what can be done in parallel and just\nrun it like that?",
    "start": "504550",
    "end": "511470"
  },
  {
    "text": "So expect parallelism from\nprograms written in sequential languages and people like some\nof the champions in this and I",
    "start": "511470",
    "end": "520200"
  },
  {
    "text": "have also spent lots\nand lots of time on this research problem.",
    "start": "520200",
    "end": "525480"
  },
  {
    "text": "So this is one of those areas\nwhich certainly has not suffered because of\nlack of research.",
    "start": "525480",
    "end": "531490"
  },
  {
    "text": "There's tons and tons\nof research in this. You know, you can go to IBM and\nthere will be 50 Ph.D.'s",
    "start": "531490",
    "end": "538110"
  },
  {
    "text": "working on Fortran compiler. Trying to extract parallelism. ",
    "start": "538110",
    "end": "544060"
  },
  {
    "text": "But the success is limited. In fact, the main takeaway from\nthis research is people",
    "start": "544060",
    "end": "549220"
  },
  {
    "text": "have learned now how they should\nwrite their programs so that compiler has a chance of\nextracting parallelism.",
    "start": "549220",
    "end": "555930"
  },
  {
    "text": "Because now people look at your\ncode, they say, well, this is a bad code. Why? Because compiler can't\nanalyze it.",
    "start": "555930",
    "end": "562889"
  },
  {
    "text": "You become part of the\nequation in this. Now the methodology I was\npushing for a long time was",
    "start": "562890",
    "end": "571470"
  },
  {
    "text": "functional languages. Programs in functional languages\nwhich may not obscure parallelism in\nthe first place.",
    "start": "571470",
    "end": "578350"
  },
  {
    "text": "I'm not going to talk about\nfunctional languages. It's immaterial, you know,\nwhether this is a good idea or",
    "start": "578350",
    "end": "585110"
  },
  {
    "text": "a bad idea, the fact of matter\nis in real life people's reaction is functional\nlanguages--",
    "start": "585110",
    "end": "591520"
  },
  {
    "text": "are you kidding me?  So it doesn't get off ground.",
    "start": "591520",
    "end": "597970"
  },
  {
    "text": "It's one of those things I can\ncome and preach to you is good for your soul. And they leave me alone.",
    "start": "597970",
    "end": "603710"
  },
  {
    "text": "I don't do movies\nwith subtitles. AUDIENCE: Sorry to temporarily\nderail you--",
    "start": "603710",
    "end": "611790"
  },
  {
    "text": "ARVIND: Sorry? AUDIENCE: Sorry to temporarily\nderail you, so what kind of",
    "start": "611790",
    "end": "617379"
  },
  {
    "text": "parallelism is easier\nto extract from a functional language?",
    "start": "617380",
    "end": "623520"
  },
  {
    "text": "I can clearly see some task\nparallelism, can you also",
    "start": "623520",
    "end": "629330"
  },
  {
    "text": "extract data parallelism\nor pipeline parallelism or what not?",
    "start": "629330",
    "end": "634400"
  },
  {
    "text": "ARVIND: It turns out that's\nactually not that right question to ask in the\nfunctional language because",
    "start": "634400",
    "end": "639430"
  },
  {
    "text": "functional language doesn't\nobscure the parallelism that was there in the first place.",
    "start": "639430",
    "end": "644439"
  },
  {
    "text": "So you already have a partial\norder on operations as opposed to a sequential order.",
    "start": "644440",
    "end": "649470"
  },
  {
    "text": "You see when you write in\nFortran even a simple thing",
    "start": "649470",
    "end": "660579"
  },
  {
    "text": "like f of g of x, h of y.",
    "start": "660580",
    "end": "668790"
  },
  {
    "text": "It may be obvious to a\nfunctional programmer that these things can be\ndone in parallel. Perhaps, the execution of these\ncan overlap with the",
    "start": "668790",
    "end": "675510"
  },
  {
    "text": "evaluation of f, but that's not\nthe semantics of Fortran or any other sequential\nlanguage.",
    "start": "675510",
    "end": "680900"
  },
  {
    "text": "The semantics is you're supposed\nto execute the program left to right,\ntop to bottom. So you will go and execute g\nfirst and you'll go inside g",
    "start": "680900",
    "end": "689390"
  },
  {
    "text": "and execute it and then you will\ngo and execute h and then you will go and execute f.",
    "start": "689390",
    "end": "696190"
  },
  {
    "text": "Why is that important? Because there are side effects,\nso it's conceivable that you do something in this\nwhich affects this and so on.",
    "start": "696190",
    "end": "705920"
  },
  {
    "text": "So you're given a sequential\norder and then compiler does deep analysis, the kind you're\ndoing right now it terms of",
    "start": "705920",
    "end": "712660"
  },
  {
    "text": "dependence and anti-dependence\nand so on. Which says it's OK to do\ng and h in parallel.",
    "start": "712660",
    "end": "719759"
  },
  {
    "text": "Well, if it was a functional\nprogram then you know by the semantics of the language g and\nh can be done in parallel.",
    "start": "719760",
    "end": "726829"
  },
  {
    "text": "That doesn't mean it's a good\nidea to do it in parallel. So when we get to the second\npoint of mapping this",
    "start": "726830",
    "end": "731930"
  },
  {
    "text": "computation onto a given\nsubstrate off 2 processors or 10 processors then problems\nbecome similar.",
    "start": "731930",
    "end": "739320"
  },
  {
    "text": "But the problem of detecting\nparallelism is very different. Because you don't talk of\ndetecting parallelism in",
    "start": "739320",
    "end": "745940"
  },
  {
    "text": "functional languages,\nit's already there. You don't obscure it. Does that make sense?",
    "start": "745940",
    "end": "752090"
  },
  {
    "text": "AUDIENCE: Yeah, maybe. ARVIND: And it goes without\nsaying that if your algorithm",
    "start": "752090",
    "end": "758970"
  },
  {
    "text": "has low parallelism then\nfunctional languages or any other language and there's\nno magic-- you can't suck blood\nout of stone.",
    "start": "758970",
    "end": "766440"
  },
  {
    "text": "You have to know\nyour algorithm. You have to know\nwhat operations can be done in parallel.",
    "start": "766440",
    "end": "772080"
  },
  {
    "text": "So language only is an aid. In some sense that if it was\nparallel I could express it",
    "start": "772080",
    "end": "777380"
  },
  {
    "text": "more easily as a parallel\nprogram. And if it's a bad language, you\nobscure it and then you",
    "start": "777380",
    "end": "783070"
  },
  {
    "text": "try to undo the damage.  Now as I said, there has been\na lot of success in this in",
    "start": "783070",
    "end": "790410"
  },
  {
    "text": "terms of dense matrix kind of\nstuff, but more irregular the computation harder it gets to\ndo these things statically.",
    "start": "790410",
    "end": "799500"
  },
  {
    "text": "So when you can't do it then\npeople of course, designed explicitly parallel programming\nmodels and some of",
    "start": "799500",
    "end": "807089"
  },
  {
    "text": "the most successful ones in\nthis are data parallel and you'll hear about",
    "start": "807090",
    "end": "812820"
  },
  {
    "text": "multithreading tomorrow in Cilk. And then there are very low\nlevel models where you are",
    "start": "812820",
    "end": "818060"
  },
  {
    "text": "doing actual message passing\nbetween various modules that are sitting over there and I\ncan expose you threads and",
    "start": "818060",
    "end": "826700"
  },
  {
    "text": "synchronizations that are\nvery low-level fork and joint, et cetera. So of course, high-level models\nare preferable because",
    "start": "826700",
    "end": "835220"
  },
  {
    "text": "you're likely to make fewer\nerrors in them. The question is, can\nwe compile them?",
    "start": "835220",
    "end": "840510"
  },
  {
    "text": "And in some cases what turns out\nis this is a good model, but it is not general enough.",
    "start": "840510",
    "end": "847010"
  },
  {
    "text": "So if you have a data parallel\nalgorithm, fine. I mean, you should\nuse these things.",
    "start": "847010",
    "end": "852800"
  },
  {
    "text": "But not all applications fit\nthe data parallel model, multithreading in some sense\nis more general.",
    "start": "852800",
    "end": "861500"
  },
  {
    "text": "This is what I mean by a\nmultithreaded model that you",
    "start": "861500",
    "end": "868280"
  },
  {
    "text": "may have a main which\nspawn off things. So not only these things can\nbe done in parallel, but",
    "start": "868280",
    "end": "875790"
  },
  {
    "text": "execution of these can overlap\nthe execution of f. So parents and children may be\nexecuting simultaneously.",
    "start": "875790",
    "end": "882870"
  },
  {
    "text": "So if you look at this as an\nactivation tree, this invokes a loop which has many, many\niterations in it.",
    "start": "882870",
    "end": "890450"
  },
  {
    "text": "When we talk of sequential\ncomputing you're always sitting on one branch of this.",
    "start": "890450",
    "end": "897780"
  },
  {
    "text": "So that's the stack. This stack, this stack,\nstack frames. When you talk of parallel\ncomputing then part of this",
    "start": "897780",
    "end": "906130"
  },
  {
    "text": "activation tree is concurrently\nactive. So all problems get harder.",
    "start": "906130",
    "end": "911350"
  },
  {
    "text": "Storage management\ngets harder. And what gets especially harder\nis that there is this",
    "start": "911350",
    "end": "916410"
  },
  {
    "text": "global heap. You always have heap in\ninteresting programs, global data structures.",
    "start": "916410",
    "end": "922320"
  },
  {
    "text": "Now the problem is if this and\nthis are active at the same time or this and this are active\nat the same time and",
    "start": "922320",
    "end": "927900"
  },
  {
    "text": "they are both reading and\nwriting into the data structure then naturally\nthere's a race condition in this.",
    "start": "927900",
    "end": "934280"
  },
  {
    "text": "Even if only 1 guy's writing and\n5 people are reading it. It's a question of the guy\nshould not read it too soon.",
    "start": "934280",
    "end": "941490"
  },
  {
    "text": "So the moment you do any kind\nof parallel programming, synchronization issues\narise immediately.",
    "start": "941490",
    "end": "948220"
  },
  {
    "text": "You know, you always have to\nworry about, how do I indicate that it's OK to read this?",
    "start": "948220",
    "end": "954300"
  },
  {
    "text": "Well, you can follow\nsome control ideas. You say, this guy was writing. He has finished execution, so\nit must be OK to write.",
    "start": "954300",
    "end": "960870"
  },
  {
    "text": "Or you can go to very\nfine-grained synchronization, you can have some bit here which\nsays, oh this data has",
    "start": "960870",
    "end": "966550"
  },
  {
    "text": "been updated, now it's\nOK to unlock it and read it and so on.",
    "start": "966550",
    "end": "971730"
  },
  {
    "text": "So all these ideas have been\nexplored and they're still being explored in\nthis context.",
    "start": "971730",
    "end": "977580"
  },
  {
    "text": "The main takeaway is instead\nof a stack you will have a tree which is active\nat the same time.",
    "start": "977580",
    "end": "985380"
  },
  {
    "text": "Many, many things\nare going on. And the second thing is that\nthere is a competition. There is a race in reading the\nheap data structures and",
    "start": "985380",
    "end": "992750"
  },
  {
    "text": "therefore you have to worry\nabout that you don't read it too soon or you don't write it\ntoo soon because if you write",
    "start": "992750",
    "end": "998200"
  },
  {
    "text": "it too soon you may clobber\nbefore somebody else gets a chance to read it. So these issues are\nquite serious.",
    "start": "998200",
    "end": "1004830"
  },
  {
    "text": " Now it's really possible--",
    "start": "1004830",
    "end": "1010870"
  },
  {
    "text": "I mean, I claim you know, I\nhave languages which can express computation very\nefficiently this way.",
    "start": "1010870",
    "end": "1018290"
  },
  {
    "text": "Efficiently is not\nthe right word. Very easily you can express\ncomputation in this way. But at the end of the day the\ngoal is to take that stuff and",
    "start": "1018290",
    "end": "1027699"
  },
  {
    "text": "run it somewhere on some\nparallel machine. Whether it was cell processor in\nthe old days if would have",
    "start": "1027700",
    "end": "1033600"
  },
  {
    "text": "been parallel machines\nof various ergs. And that has proven to be quite\ndifficult, efficient",
    "start": "1033600",
    "end": "1040230"
  },
  {
    "text": "mapping of these things because\nit turns out that you say, oh, you didn't tell me\nbefore you have only 2",
    "start": "1040230",
    "end": "1045990"
  },
  {
    "text": "processors. Then I would have expressed the\ncomputation differently.",
    "start": "1045990",
    "end": "1051970"
  },
  {
    "text": "Or you didn't tell me that\nyou have 1000 processors. So there is this kind of yes,\nthere is virtualization.",
    "start": "1051970",
    "end": "1058740"
  },
  {
    "text": "But it's not virtualization\nenough. Qualitatively matters a lot. You know, what is the target?",
    "start": "1058740",
    "end": "1064070"
  },
  {
    "text": "And that effects how you would\nhave expressed the computation.",
    "start": "1064070",
    "end": "1069360"
  },
  {
    "text": "So I used to go around saying\nthis all the time that parallel programming\nis so important.",
    "start": "1069360",
    "end": "1077370"
  },
  {
    "text": "That really sequential\nprogramming will be taught as a special case of parallel\nprogramming because it will be",
    "start": "1077370",
    "end": "1083310"
  },
  {
    "text": "all parallel. If you have only one processor\nthen we can teach you some special tricks how to run it\nefficiently on one processor.",
    "start": "1083310",
    "end": "1091539"
  },
  {
    "text": "So this as you can see, is\nlargely an unrealized dream. AUDIENCE: That's an old idea,\nbut not one to be dismissed.",
    "start": "1091540",
    "end": "1099360"
  },
  {
    "text": "ARVIND: Not one to\nbe dismissed. Absolutely. So the question is, has\nthe situation changed?",
    "start": "1099360",
    "end": "1105960"
  },
  {
    "text": "And the situation has\ncertainly changed. So multicores have arrived.",
    "start": "1105960",
    "end": "1110980"
  },
  {
    "text": " This is a big deal. I mean, Microsoft wants to\nexploit parallelism.",
    "start": "1110980",
    "end": "1118410"
  },
  {
    "text": "There can be no bigger\nindication than this. And there is explosion\nof cell phones.",
    "start": "1118410",
    "end": "1126700"
  },
  {
    "text": "And if you don't understand what\nthat means economically, you know there are 100 million\nPCs that will be sold this year and 950 million\ncell phones that'll",
    "start": "1126700",
    "end": "1136890"
  },
  {
    "text": "be sold this year. This is the same kind of\ntransition that is taking place that happened in the early\n80s when we went from",
    "start": "1136890",
    "end": "1143180"
  },
  {
    "text": "mainframes and mini- computers\nto micros. So what happens there determines\nwhat happens",
    "start": "1143180",
    "end": "1148930"
  },
  {
    "text": "everywhere else. So it's quite possible then what\nhappens on these small devices, hand-held devices\nwill determine the",
    "start": "1148930",
    "end": "1157050"
  },
  {
    "text": "architecture of everything\nelse just because of the numbers. People are willing to invest\na lot more money into this",
    "start": "1157050",
    "end": "1163750"
  },
  {
    "text": "explosion of game boxes. AUDIENCE: [OBSCURED] ARVIND: I'm sorry?",
    "start": "1163750",
    "end": "1169170"
  },
  {
    "text": "AUDIENCE: The explosion of\nlaptops is also happening. ARVIND: Yeah, but still that\nnumber is 100 million.",
    "start": "1169170",
    "end": "1175610"
  },
  {
    "text": "While cell phone is 950 million,\nat least in 2000. AUDIENCE: These are\ncell processors. ARVIND: Right.",
    "start": "1175610",
    "end": "1181630"
  },
  {
    "text": "Absolutely. So look, if I'm talking to you\nas a teacher I mean, my",
    "start": "1181630",
    "end": "1188760"
  },
  {
    "text": "message to my colleagues in\nthe department is it's no longer good enough to say well\nwe'll teach you parallelism",
    "start": "1188760",
    "end": "1194780"
  },
  {
    "text": "when you're a sophomore. I mean, it is the thing that\npeople want to deal with.",
    "start": "1194780",
    "end": "1199940"
  },
  {
    "text": "You say, what do you\nmean telling me how to program one processor. I have 10 of them\nin my pocket.",
    "start": "1199940",
    "end": "1206040"
  },
  {
    "text": "So I think we have to\ndeal with this. You know, how do we introduce\nparallelism? What method we should have for\nteaching parallel programming",
    "start": "1206040",
    "end": "1214740"
  },
  {
    "text": "so that is the default\nprogramming model in your head?",
    "start": "1214740",
    "end": "1220630"
  },
  {
    "text": "So it's all about\nparallelism now. No longer an advanced topic. It has to be the first topic.",
    "start": "1220630",
    "end": "1227590"
  },
  {
    "text": "Just another word of\ncaution in this. So let's look at cell phones. ",
    "start": "1227590",
    "end": "1234810"
  },
  {
    "text": "So mine has some bugs in it so\nsometimes it misses a call",
    "start": "1234810",
    "end": "1240630"
  },
  {
    "text": "when I'm surfing the web. It doesn't rate. ",
    "start": "1240630",
    "end": "1247896"
  },
  {
    "text": "So this is the deep question\nnow, so whose fault is it? ",
    "start": "1247896",
    "end": "1254000"
  },
  {
    "text": "So for example, to what extent\nthe phone call software should be aware of web surfing software\nor vice versa.",
    "start": "1254000",
    "end": "1260570"
  },
  {
    "text": "So now you have to understand\nhow these things are done. Of course, how the phone calls\nare made, that software has",
    "start": "1260570",
    "end": "1265973"
  },
  {
    "text": "been evolving, right? You can look at it all in the\nlast 15 years and you'll be",
    "start": "1265973",
    "end": "1271825"
  },
  {
    "text": "able to trace a continuum. You know how phone calls are\nmade and that's not trivial among the software on\nyour cell phone.",
    "start": "1271825",
    "end": "1280870"
  },
  {
    "text": "Well, when it comes to web\nsurfing software I can guarantee you it was not\nwritten from scratch.",
    "start": "1280870",
    "end": "1287770"
  },
  {
    "text": "People went to your PC,\nthey say, what do you do on your web? They take all that software\nsay, let's port",
    "start": "1287770",
    "end": "1292840"
  },
  {
    "text": "it on the cell phone. Now the guy who wrote the web\nsoftware never thought that",
    "start": "1292840",
    "end": "1298330"
  },
  {
    "text": "you would be talking on\ntelephone while you're surfing the web or at least not\non the same device.",
    "start": "1298330",
    "end": "1304670"
  },
  {
    "text": "And vice versa, the guy who\nwrote the phone software never thought you would be surfing the\nweb while you're talking",
    "start": "1304670",
    "end": "1311210"
  },
  {
    "text": "on the phone. I mean even 1995 or 1998 if\nsomebody had said, you'll be",
    "start": "1311210",
    "end": "1317740"
  },
  {
    "text": "surfing the web at\nthe same time. It would have sounded\npretty bizarre. ",
    "start": "1317740",
    "end": "1327890"
  },
  {
    "text": "Is it merely a scheduling\nissue? So this is the answer saying\nah, they didn't process the interrupt properly.",
    "start": "1327890",
    "end": "1333830"
  },
  {
    "text": "I'm sorry, this is not just\na scheduling issue. I don't even know the\nsemantics of this.",
    "start": "1333830",
    "end": "1339160"
  },
  {
    "text": "So for example, if you're\nsurfing the web and the phone rings do you really want to stop\nsurfing the web and pick",
    "start": "1339160",
    "end": "1345390"
  },
  {
    "text": "up the phone? I mean, what's so special\nabout phone? There is nothing being indicated\nfrom the language",
    "start": "1345390",
    "end": "1351179"
  },
  {
    "text": "point of view. It may be application\nrequirement that you want to stop it or not stop\nit and so on.",
    "start": "1351180",
    "end": "1358120"
  },
  {
    "text": " Is it a performance issue? That oh, it's because you have\nonly 2 processors in this.",
    "start": "1358120",
    "end": "1364820"
  },
  {
    "text": "If you had 4 this problem\nwill go away. Or if you could just run it\nfaster it will go away.",
    "start": "1364820",
    "end": "1370510"
  },
  {
    "text": "I don't think any of these\nanswers are right. I mean, the bottom line in this\nis sequential modules are",
    "start": "1370510",
    "end": "1377550"
  },
  {
    "text": "often used in concurrent\nenvironments with unforeseen consequences.",
    "start": "1377550",
    "end": "1383510"
  },
  {
    "text": "So your mindset has to be that\nI'm going to put together a parallel program with lots\nof existing things.",
    "start": "1383510",
    "end": "1391620"
  },
  {
    "text": "Because you can't keep giving\nthe answer oh, let's just rewrite it again from scratch.",
    "start": "1391620",
    "end": "1396650"
  },
  {
    "text": "Because amount of software\nis so enormous in this. What we should worry about\nnow is how we should",
    "start": "1396650",
    "end": "1402580"
  },
  {
    "text": "design these modules. How we should write pieces of\nsoftware or design hardware so",
    "start": "1402580",
    "end": "1408080"
  },
  {
    "text": "that we can put together an\nensemble of them, a collection of such modules so that they\ndo something useful.",
    "start": "1408080",
    "end": "1416800"
  },
  {
    "text": "And it's all about\nparallelism. And how to do all this in\na parallel setting.",
    "start": "1416800",
    "end": "1421990"
  },
  {
    "text": "OK, so new goals as opposed\nto old goals. So I don't want to think in\nterms of decomposition.",
    "start": "1421990",
    "end": "1427740"
  },
  {
    "text": "I don't want to think in terms\nof here is my clever algorithm, how do I decompose it\nso that this runs here and",
    "start": "1427740",
    "end": "1434590"
  },
  {
    "text": "this runs here and so on. Instead I want to think\nin terms of synthesis. That you've already given me\nlots of modules, which are",
    "start": "1434590",
    "end": "1443630"
  },
  {
    "text": "very useful. Which perhaps are written\nby domain experts. They know something\nabout that stuff.",
    "start": "1443630",
    "end": "1449169"
  },
  {
    "text": "And can I put together a\nbigger application very quickly from it? And you know, another favorite\nexample of mine in this regard",
    "start": "1449170",
    "end": "1456519"
  },
  {
    "text": "is FFTW and linear\nalgebra packages. Both have been optimized\nto the hilt, right?",
    "start": "1456520",
    "end": "1461830"
  },
  {
    "text": "And if somebody gives you an\napplication which calls FFT",
    "start": "1461830",
    "end": "1466909"
  },
  {
    "text": "and uses enough linear algebra\nI guarantee you that program will not be easy to write in\nspite of the existence of both",
    "start": "1466910",
    "end": "1473870"
  },
  {
    "text": "these packages, which are\nextremely well optimized. So there is something we're not\npaying attention to is,",
    "start": "1473870",
    "end": "1481240"
  },
  {
    "text": "how do we bring parallel modules\ntogether in such a way so that the functionality, the\nperformance, et cetera are",
    "start": "1481240",
    "end": "1487460"
  },
  {
    "text": "unpredictable in some sense? AUDIENCE: I'm sorry. What's your point?",
    "start": "1487460",
    "end": "1492730"
  },
  {
    "text": "I think I agree with your point,\nI just want to make sure I understand your point. That FFTW linear algorithm\nis not enough and",
    "start": "1492730",
    "end": "1500029"
  },
  {
    "text": "so there will be-- ARVIND: No, no. I think it's very\nwell done, FFTW. Linear algebra is\nvery well done.",
    "start": "1500030",
    "end": "1507040"
  },
  {
    "text": "But we still haven't provided\nany good way of thinking in terms of two parallel things.",
    "start": "1507040",
    "end": "1512700"
  },
  {
    "text": "You know, what happens\nwhen they interact? So if my program is calling\nFFTW often and then it's",
    "start": "1512700",
    "end": "1518500"
  },
  {
    "text": "calling linear algebra often. AUDIENCE: You weren't here when\nI mentioned that but I",
    "start": "1518500",
    "end": "1524804"
  },
  {
    "text": "was actually bringing up the\npoint of linear algebra and FFTW working together. Just working. ARVIND: Exactly.",
    "start": "1524805",
    "end": "1531940"
  },
  {
    "text": " Absolutely.",
    "start": "1531940",
    "end": "1537400"
  },
  {
    "text": "I'm saying in that sense, you\nsee, this is a difference way of thinking because the old way\nof thinking well, give me",
    "start": "1537400",
    "end": "1543600"
  },
  {
    "text": "your application. Now let's decompose it. The point is I don't have\nexperts who can write FFTW as",
    "start": "1543600",
    "end": "1551090"
  },
  {
    "text": "well as Matel wrote it. Or who's linear algebra packages\nare being written. I want to use those things.",
    "start": "1551090",
    "end": "1557770"
  },
  {
    "text": "I want to synthesize large\nparallel programs quickly. Yes? AUDIENCE: How does the Apple\niPhone work with--",
    "start": "1557770",
    "end": "1564210"
  },
  {
    "text": "ARVIND: I'm sorry, how does? AUDIENCE: The iPhone. AUDIENCE: Apple iPhone. ARVIND: Apple iPhone? AUDIENCE: Yes, they have the\noperating system on there--",
    "start": "1564210",
    "end": "1572090"
  },
  {
    "text": "ARVIND: I think from our point\nof view that's the same thing. Is just that the user interface\nis guaranteed to be",
    "start": "1572090",
    "end": "1577490"
  },
  {
    "text": "far superior because in my phone\nwhen I see the icons I'm a techie and I still can't\nunderstand half of them.",
    "start": "1577490",
    "end": "1584490"
  },
  {
    "text": "So I like Apples idea. You know, phone, pictures. [OBSCURED]",
    "start": "1584490",
    "end": "1590650"
  },
  {
    "text": "PROFESSOR: The way Apple might\nbe with that is going to not let anybody program it. It's going to have a very\nrestrictive development",
    "start": "1590650",
    "end": "1597400"
  },
  {
    "text": "program internally so they can\nbasically say, I'm going to take this person from this\nperson and put it together.",
    "start": "1597400",
    "end": "1602830"
  },
  {
    "text": "They will try to do everything\nin one unified way. So to some extent it might work,\nbut then you suddenly",
    "start": "1602830",
    "end": "1610150"
  },
  {
    "text": "realize Apple hired programmers\nto keep up with all the needs.",
    "start": "1610150",
    "end": "1615289"
  },
  {
    "text": "So it may even start to have\nother people running things. ARVIND: Internally their\nsoftware is--",
    "start": "1615290",
    "end": "1621750"
  },
  {
    "text": "AUDIENCE: So is there something parallel going on in there? ARVIND: Guaranteed there\nwill be parallel",
    "start": "1621750",
    "end": "1627289"
  },
  {
    "text": "stuff going on there. Guaranteed because all the\ncommunication stuff has to go on in parallel with the\ncomputation stuff.",
    "start": "1627290",
    "end": "1635419"
  },
  {
    "text": "So I mean, phones have to lots\nof things in parallel if for",
    "start": "1635420",
    "end": "1641320"
  },
  {
    "text": "no other reason just\nbecause of power. It takes less power when you\ndo things in parallel as opposed to when you do\nsequentially because then you",
    "start": "1641320",
    "end": "1648735"
  },
  {
    "text": "have to run much\nfaster in that.",
    "start": "1648735",
    "end": "1654500"
  },
  {
    "text": "OK, so a method of designing\nand connecting modules has that functionality and\nperformance are predictable.",
    "start": "1654500",
    "end": "1661470"
  },
  {
    "text": "And must facilitate natural\ndescription of concurrent systems. A method of refining\nindividual modules into",
    "start": "1661470",
    "end": "1670710"
  },
  {
    "text": "hardware or software for\nsystems on a chip. So refinement is a highly\ntechnical word.",
    "start": "1670710",
    "end": "1677880"
  },
  {
    "text": "What that means is that you have\nwritten a program and you move on to rewrite it, but\nnobody can tell from outside",
    "start": "1677880",
    "end": "1685340"
  },
  {
    "text": "that you rewrote it. All right, so you refine\nit and you can to refine it into hardware. I mean, you may implement it in\nhardware in this as opposed",
    "start": "1685340",
    "end": "1693720"
  },
  {
    "text": "to transformation. Transformation is automatic. We're doing something, it's\nguaranteed it's correct.",
    "start": "1693720",
    "end": "1699169"
  },
  {
    "text": "Refinement you may have to work\na little bit more to show that it is correct\nin some sense. It's a correct refinement of\nwhatever you were doing.",
    "start": "1699170",
    "end": "1707460"
  },
  {
    "text": "So basically, just to get the\napplication going, which as",
    "start": "1707460",
    "end": "1712470"
  },
  {
    "text": "Allen is pointing out is the\nmajor task and this is true regardless of what people say.",
    "start": "1712470",
    "end": "1718450"
  },
  {
    "text": "When you get to complex system,\nif people start talking about performance\nyou're 90% there.",
    "start": "1718450",
    "end": "1724779"
  },
  {
    "text": "That means the damn\nthing works. So even the people may say, oh,\nperformance will be lousy.",
    "start": "1724780",
    "end": "1730110"
  },
  {
    "text": "Most of the energy is\njust consumed in getting it to work. So never forget that.",
    "start": "1730110",
    "end": "1735220"
  },
  {
    "text": "So a refinement idea becomes\nvery important because you want to take as many things as\npossible, which are available.",
    "start": "1735220",
    "end": "1743330"
  },
  {
    "text": "Make it work and then\nindividually refine; modular refinement of things.",
    "start": "1743330",
    "end": "1748910"
  },
  {
    "text": "AUDIENCE: Maybe just also\nunderscore, just to emphasis what you're saying Arvind, our\nsalesmen will go and say",
    "start": "1748910",
    "end": "1755130"
  },
  {
    "text": "explicitly that they can\nsell a factor of 2. Just like you were saying. Just a factor of 2 on 100\nprocessors or whatever, they",
    "start": "1755130",
    "end": "1764963"
  },
  {
    "text": "can sell that if it works. If it gives the right answer. AUDIENCE: It's the ease. ARVIND: The ease and confidence\nthat it's really",
    "start": "1764963",
    "end": "1770080"
  },
  {
    "text": "doing what you expect\nit to do. AUDIENCE: So it's really\nperformance second, ease of",
    "start": "1770080",
    "end": "1775350"
  },
  {
    "text": "use first. We've got it\nbackwards in academia.",
    "start": "1775350",
    "end": "1780549"
  },
  {
    "text": "ARVIND: But everybody set\ndesigns on 2 multicores. ",
    "start": "1780550",
    "end": "1786150"
  },
  {
    "text": "So why multicore problems\nbecomes hard and this where hardware and software starts\ndiverging a little bit.",
    "start": "1786150",
    "end": "1792940"
  },
  {
    "text": "So what happens in\nhardware design? Everything is in parallel. It's sitting right there,\nthis blog does this,",
    "start": "1792940",
    "end": "1800670"
  },
  {
    "text": "this blog does that. So there's no confusion\nin your mind what's going on in parallel.",
    "start": "1800670",
    "end": "1806640"
  },
  {
    "text": "If you have to multiplex some\nthing in hardware, that first we'll do this then we'll do\nthat, that's also expressed",
    "start": "1806640",
    "end": "1813389"
  },
  {
    "text": "explicitly in the design. Software is not like that. You know, software have n\nthreads, but I have only 10 in",
    "start": "1813390",
    "end": "1821850"
  },
  {
    "text": "my hardware. So there is another layer of\nsoftware or operating system",
    "start": "1821850",
    "end": "1828020"
  },
  {
    "text": "or whatever you want to call\nit, runtime system. Whose sole job is to virtualize\nor to do time",
    "start": "1828020",
    "end": "1833400"
  },
  {
    "text": "multiplexing of underlying\nresources and that makes the problem harder. You know, that makes the problem\nharder whether you're",
    "start": "1833400",
    "end": "1840220"
  },
  {
    "text": "doing it in a way\nthat preserves some performance goals. Whether you're doing it so that\nyou want cause deadlocks,",
    "start": "1840220",
    "end": "1846410"
  },
  {
    "text": "so there are many, many issues\nthat come up in this. And basically, when I said this\nis an ideas kind of a",
    "start": "1846410",
    "end": "1852970"
  },
  {
    "text": "talk, I do know how to do this\nand I still haven't worked enough on this problem of\nhow to take this kind of",
    "start": "1852970",
    "end": "1860850"
  },
  {
    "text": "methodology where I can write\nthese parallel modules, compose them. How to map it onto multicores. ",
    "start": "1860850",
    "end": "1868900"
  },
  {
    "text": "OK, so now let me tell\nyou something technical about this stuff.",
    "start": "1868900",
    "end": "1874460"
  },
  {
    "text": "So this hardware inspired\nmethodology for synthesizing parallel programs. Now I'm going\nto use some fancy words.",
    "start": "1874460",
    "end": "1881000"
  },
  {
    "text": "So this is a rule-based\nspecifications or what I call guarded atomic actions.",
    "start": "1881000",
    "end": "1886730"
  },
  {
    "text": "I will explain in a second\nwhat that means. It will let you think about\nparallel systems in a very",
    "start": "1886730",
    "end": "1892520"
  },
  {
    "text": "different way. So it's like saying look, if\nthis register is 2 and this",
    "start": "1892520",
    "end": "1899380"
  },
  {
    "text": "register is 3, you can add them\nand put them here, 5.",
    "start": "1899380",
    "end": "1904860"
  },
  {
    "text": "And you can do this\nany time you want. So this is like a rule. Invariant.",
    "start": "1904860",
    "end": "1910090"
  },
  {
    "text": "You're saying, I don't\ncare what's happening in the machine. This is always safe to do. Now what I'm going to ask\nyou to do is take a huge",
    "start": "1910090",
    "end": "1917870"
  },
  {
    "text": "intellectual jump from this. That if you give me enough\nsuch rules you would have",
    "start": "1917870",
    "end": "1923640"
  },
  {
    "text": "completely described the\nhardware, what it does. Now why am I thinking\nlike this?",
    "start": "1923640",
    "end": "1929600"
  },
  {
    "text": "Because these invariants\nare stated properly. It's always possible to\nunderstand the behavior of the",
    "start": "1929600",
    "end": "1936850"
  },
  {
    "text": "system as if one things at\na time is happening. When 2 plus 3 is becoming 5, if\nyou want you can have this",
    "start": "1936850",
    "end": "1945429"
  },
  {
    "text": "mental picture-- the rest\nof the world is frozen. Nothing is changing\nthere, only that",
    "start": "1945430",
    "end": "1951020"
  },
  {
    "text": "change is taking place. And you can think it terms of\nthese small, small changes and all legal behaviors will be\nexplainable as some sequence",
    "start": "1951020",
    "end": "1959730"
  },
  {
    "text": "of these changes. It's possible to describe\nall kinds of hardware",
    "start": "1959730",
    "end": "1964840"
  },
  {
    "text": "using things like that. Composition of modules with\nguarded interfaces.",
    "start": "1964840",
    "end": "1971730"
  },
  {
    "text": "So this is the language called\nBluespec and it has a very strong echoes of a language that\nwas designed in the 80s",
    "start": "1971730",
    "end": "1980270"
  },
  {
    "text": "by two guys, Chandry\nand Misra, the language called Unity. But they never used it\nfor hardware design.",
    "start": "1980270",
    "end": "1986620"
  },
  {
    "text": "Their goals were different and\nthey didn't really have a concept of a module\nin that language.",
    "start": "1986620",
    "end": "1993040"
  },
  {
    "text": "So let me show you\n3 examples here. Greatest common divisor, just\nto get off ground and then I",
    "start": "1993040",
    "end": "1999310"
  },
  {
    "text": "will show you 2 very different\nproblems: airlines reservation query problem and the\nvideo codec H.264.",
    "start": "1999310",
    "end": "2008909"
  },
  {
    "text": "We won't have time to get into\nordered list, but if somebody wants to discuss that I've\nbe happy to show you.",
    "start": "2008910",
    "end": "2015559"
  },
  {
    "text": "OK, so now let's look at how do\nI think of my design of my",
    "start": "2015560",
    "end": "2021510"
  },
  {
    "text": "program in Bluespec? I always think in terms\nof a bunch of modules. ",
    "start": "2021510",
    "end": "2027890"
  },
  {
    "text": "And what's a module. A module is going to have some\nstate elements in it. If you're thinking software just\nthink each module guards",
    "start": "2027890",
    "end": "2037020"
  },
  {
    "text": "some variables, which nobody\nelse can touch. You're the only one.",
    "start": "2037020",
    "end": "2042340"
  },
  {
    "text": "So you have a variable xyz, he\nhas some abcd, et cetera. So each module has some.",
    "start": "2042340",
    "end": "2048750"
  },
  {
    "text": "That's what I'm showing\nin red. If you were thinking hardware,\nthink of thse things as stateful elements like\nregisters or",
    "start": "2048750",
    "end": "2055819"
  },
  {
    "text": "flip flops of memories. But the main point is if it is\nhere then it's not here.",
    "start": "2055820",
    "end": "2062960"
  },
  {
    "text": "You own something, this module\nowns something, this module owns something. One.",
    "start": "2062960",
    "end": "2068030"
  },
  {
    "text": "Second thing is every module\nhas internal rules for manipulating the state and the\nrules are always going to be",
    "start": "2068030",
    "end": "2076260"
  },
  {
    "text": "of the form that if some\ncondition is true on this you're allowed to make the\nfollowing changes to that.",
    "start": "2076260",
    "end": "2084129"
  },
  {
    "text": "So that's what the\nrule looks like. Some condition, if it holds\nthat by action I",
    "start": "2084130",
    "end": "2089600"
  },
  {
    "text": "mean, change the state. Change the state of\nthose variables. And it's all or nothing.",
    "start": "2089600",
    "end": "2094690"
  },
  {
    "text": "So if you have 2 variables and\nif you want to change both of them in a rule then the\nexecution of a rule means",
    "start": "2094690",
    "end": "2101030"
  },
  {
    "text": "either both of them will change\nor neither will change. There's nothing in between\nyou can see.",
    "start": "2101030",
    "end": "2106320"
  },
  {
    "text": "That's disallowed\nby this model. ",
    "start": "2106320",
    "end": "2113250"
  },
  {
    "text": "I mean, the reason\nI have modules is they're not totally disjoined. You can actually access\nthe state.",
    "start": "2113250",
    "end": "2118940"
  },
  {
    "text": "Both read it and write it, but\nyou can't just arbitrarily reach it and do something.",
    "start": "2118940",
    "end": "2124540"
  },
  {
    "text": "You have to go through some\ninterface methods the moment you talk to some\nother modules. So this is the standard\ninformation hiding principle.",
    "start": "2124540",
    "end": "2132610"
  },
  {
    "text": "You know, abstract data types,\nwhatever you want to call it. You know, so there's an\ninterface through which you",
    "start": "2132610",
    "end": "2138359"
  },
  {
    "text": "will enter and if you're just\nreading the values I think we call them read methods or value\nmethods and if you're",
    "start": "2138360",
    "end": "2145550"
  },
  {
    "text": "going to effect the state of one\nof the modules we'll call those action methods. Because you're actually\ngoing to change the",
    "start": "2145550",
    "end": "2151849"
  },
  {
    "text": "state in some module.  So now, very strange execution\nmodel here.",
    "start": "2151850",
    "end": "2159280"
  },
  {
    "text": "Very, very different from\nsequential execution model. So repeatedly you do\nthe following.",
    "start": "2159280",
    "end": "2164770"
  },
  {
    "text": "You pick a rule to execute. Any rule, I don't care.",
    "start": "2164770",
    "end": "2170350"
  },
  {
    "text": "And select a rule to execute,\ncompute the state, what updates should be made,\nmake the state update.",
    "start": "2170350",
    "end": "2178480"
  },
  {
    "text": "And then go and do it again,\nso repeatedly you do this. So this is a highly\nnondeterministic thing,",
    "start": "2178480",
    "end": "2184530"
  },
  {
    "text": "selective rule. There may be a gazillion\nrules in your system. So system privileges are\nprovided to control the",
    "start": "2184530",
    "end": "2192360"
  },
  {
    "text": "selection if you want. But it's a detail that\nwe won't get into to. So does everybody get the\nmodel right here?",
    "start": "2192360",
    "end": "2200370"
  },
  {
    "text": "That you have a lot of\nstate elements and you have lot of rules. Many rules may be applicable,\npick one of them to execute.",
    "start": "2200370",
    "end": "2211170"
  },
  {
    "text": "Execute and that will\nchange the state. Ask the same question again,\nwhich rules are enabled? No, pick any rule amongst\nthem and keep doing it.",
    "start": "2211170",
    "end": "2218950"
  },
  {
    "text": "Now semantics say one\nrule at a time. In any implementation we're\ngoing to do many,",
    "start": "2218950",
    "end": "2225560"
  },
  {
    "text": "many rule in parallel. But you don't have to\nworry about that. That will be done all\nautomatically.",
    "start": "2225560",
    "end": "2230859"
  },
  {
    "text": "That we can do many\nrules in parallel. OK, so now let's look at GCD.",
    "start": "2230860",
    "end": "2238300"
  },
  {
    "text": "So this is an ordinary\nGCD program. You can write it in any language\nyou want if y is zero",
    "start": "2238300",
    "end": "2243880"
  },
  {
    "text": "then x otherwise if this is\ngreater than GCD of y, x. Otherwise you subtract.",
    "start": "2243880",
    "end": "2251410"
  },
  {
    "text": "So no problem and I'm sure\nyou know how it executes. So if I was to take GCD of 6,15\nyou will see there is a",
    "start": "2251410",
    "end": "2259720"
  },
  {
    "text": "recursive call that'll go on\nbecause 6 is less than 15 so it will be this.",
    "start": "2259720",
    "end": "2265570"
  },
  {
    "text": "You get this and you get\nthis, et cetera. Ultimately you get\n3 as an answer.",
    "start": "2265570",
    "end": "2271070"
  },
  {
    "text": "Everybody is with me? You know you all know GCD? You can all write it in your\nfavorite language. Now the question is, what does\nit mean to execute this",
    "start": "2271070",
    "end": "2282230"
  },
  {
    "text": "program in a concurrent\nsetting? ",
    "start": "2282230",
    "end": "2287530"
  },
  {
    "text": "We were not thinking parallel\nor sequential, right? This is GCD.",
    "start": "2287530",
    "end": "2294430"
  },
  {
    "text": "Someone who's teaching this\nclass says run it in parallel. You say, what do you mean,\nrun it in parallel?",
    "start": "2294430",
    "end": "2299450"
  },
  {
    "text": "Oh, you mean that maybe I should\ntry to do several GCD calls, recursive calls\nin parallel?",
    "start": "2299450",
    "end": "2306160"
  },
  {
    "text": "That also doesn't make too\nmuch sense in this. Perhaps, this is what\nsomeone meant. You know that if he has some\nprogram where there are 2",
    "start": "2306160",
    "end": "2313099"
  },
  {
    "text": "calls to GCD, he would like you\nto do those 2 in parallel. ",
    "start": "2313100",
    "end": "2323160"
  },
  {
    "text": "I mean, what does it mean\nto do GCD in parallel? ",
    "start": "2323160",
    "end": "2329140"
  },
  {
    "text": "Now let me contrast this with\nhow you would think about this problem as a hardware person.",
    "start": "2329140",
    "end": "2335990"
  },
  {
    "text": "So your job is to build\na GCD machine. You're going to make\nmillions of dollars, GCD is very popular.",
    "start": "2335990",
    "end": "2343030"
  },
  {
    "text": "So you build this GCD machine. You know, it has 2 inputs,\nit has an output. And this will be my module\nI'm going to sell this",
    "start": "2343030",
    "end": "2350580"
  },
  {
    "text": "intellectual property\nto everyone. OK, so now let me talk of\nparallel invocations of this.",
    "start": "2350580",
    "end": "2360330"
  },
  {
    "text": "You see in hardware there can\nbe no confusion, either you have 2 GCD boxes or you\nhave 1 GCD box.",
    "start": "2360330",
    "end": "2368300"
  },
  {
    "text": "I mean, you can have as many\nboxes as you want, but there is no confusion about that. You know how many GCDs you have.\nSo in some sense, if you",
    "start": "2368300",
    "end": "2376329"
  },
  {
    "text": "have many of them, you're\ntalking of independent calls. Who knows what about\nrecursive calls?",
    "start": "2376330",
    "end": "2382400"
  },
  {
    "text": "I mean, that's internal story. You know, that's a different\nlevel of questions. So this question will\nautomatically get asked.",
    "start": "2382400",
    "end": "2390109"
  },
  {
    "text": "In hardware you will ask the\nquestion, does the answer come out immediately?",
    "start": "2390110",
    "end": "2395820"
  },
  {
    "text": "Does it come out in\nparticular time? Why's this question important? Because if it's going to take\nsome time then while it's",
    "start": "2395820",
    "end": "2401790"
  },
  {
    "text": "computing the question I'm going\nto ask is can I give another set of inputs? ",
    "start": "2401790",
    "end": "2407540"
  },
  {
    "text": "Are you with me? I mean, that's a legitimate\nquestion to ask. If it's going to take half an\nhour to compute the GCD can I",
    "start": "2407540",
    "end": "2415160"
  },
  {
    "text": "give it another input\nwhile it's thinking? Can the machine be shared\nby 2 different users?",
    "start": "2415160",
    "end": "2422160"
  },
  {
    "text": " Can it be pipelined?",
    "start": "2422160",
    "end": "2427700"
  },
  {
    "text": "So you agree that all these\nquestions are meaningful in hardware setting? And I claim all these questions\nare also meaningful",
    "start": "2427700",
    "end": "2434870"
  },
  {
    "text": "in software setting. We just don't think like that. ",
    "start": "2434870",
    "end": "2441110"
  },
  {
    "text": "This is exactly the problem we\nare having right now when we say that we have optimized\nsomething",
    "start": "2441110",
    "end": "2446260"
  },
  {
    "text": "and we call it again. We think off it as starting\na fresh, maybe not.",
    "start": "2446260",
    "end": "2453380"
  },
  {
    "text": "Maybe not. You know, maybe we\nshould think of it in terms of resources. ",
    "start": "2453380",
    "end": "2460369"
  },
  {
    "text": "And the point I want to make\nis I want to think of GCD module as a resource.",
    "start": "2460370",
    "end": "2467950"
  },
  {
    "text": "Even in software I want to think\nof it as a resource. So that there is no ambiguity in\nyour mind whether you have",
    "start": "2467950",
    "end": "2474140"
  },
  {
    "text": "1 GCD or you have 2 GCDs.  If you're going to multiplex it\nwe'll write it differently.",
    "start": "2474140",
    "end": "2481870"
  },
  {
    "text": "If you're going to have 2\nindependent ones, which can go on in parallel we'll write\nit differently.",
    "start": "2481870",
    "end": "2488050"
  },
  {
    "text": "OK, so that's the idea I want\nto borrow from the hardware side of this.",
    "start": "2488050",
    "end": "2493819"
  },
  {
    "text": "So how would you do-- yes? AUDIENCE: But how would you\ndecide how many GCDs to",
    "start": "2493820",
    "end": "2500119"
  },
  {
    "text": "instantiate? Would that be is this model\nleft up to the programmer? ARVIND: Well, you see that's\nthe big difference between",
    "start": "2500120",
    "end": "2505339"
  },
  {
    "text": "hardware and software. That in hardware you have no\ndesign until you have taken that decision.",
    "start": "2505340",
    "end": "2511920"
  },
  {
    "text": "AUDIENCE: Right. I mean, hardware designs once\nit's built, it's built.",
    "start": "2511920",
    "end": "2517440"
  },
  {
    "text": "Software designs you want the\nsame module of software to seamlessly run on different\nkinds of hardware.",
    "start": "2517440",
    "end": "2523359"
  },
  {
    "text": "ARVIND: That doesn't mean that\nI can't recompile it or can't resynthesize it or something. So it may be same source\ndescription in software.",
    "start": "2523360",
    "end": "2530700"
  },
  {
    "text": "AUDIENCE: Right, if your source\nsubscription specifies 2 GCD modules and you have 8\ncores, you're not necessarily",
    "start": "2530700",
    "end": "2537160"
  },
  {
    "text": "going to take very\ngood advantage of this, so how do you-- ARVIND: No, no. The way I would like to think\nabout that is that it'll be",
    "start": "2537160",
    "end": "2543900"
  },
  {
    "text": "highly parameterized code and\nyou will plug in some information like that\nand resynthesize",
    "start": "2543900",
    "end": "2549310"
  },
  {
    "text": "the parallel program. AUDIENCE: So the software or\nsome sort of macro meta software has to determine the\nextent to which the problem",
    "start": "2549310",
    "end": "2558869"
  },
  {
    "text": "should be distributed. ARVIND: Well, you can think\nlike that, but really this",
    "start": "2558870",
    "end": "2564950"
  },
  {
    "text": "integration will be much\ntighter than you think. So for example, let me just\ngive you some more insight",
    "start": "2564950",
    "end": "2571930"
  },
  {
    "text": "from the hardware side. So in the hardware side it's\nstandard practice that will have some RTL code, I'll\nhave some code.",
    "start": "2571930",
    "end": "2579700"
  },
  {
    "text": "And I plug in the library. What kind of gates have I got? Have I got 2 input gates,\n4 input gates, whatever.",
    "start": "2579700",
    "end": "2585830"
  },
  {
    "text": "There will be a huge library. The same code can be compiled\nusing different libraries.",
    "start": "2585830",
    "end": "2592670"
  },
  {
    "text": "So you choose something\nat synthesis time. Another thing that'll happen in\nhardware is what is called",
    "start": "2592670",
    "end": "2599140"
  },
  {
    "text": "generic statements. So you may have a loop\nwhich assigns a",
    "start": "2599140",
    "end": "2605940"
  },
  {
    "text": "register file with n registers. Which will conceptually makes\nsense, it will make sense in",
    "start": "2605940",
    "end": "2611100"
  },
  {
    "text": "simulation, but when it comes\nto synthesizing it you have to specify n. So I'm going towards that\nkind of methodology.",
    "start": "2611100",
    "end": "2619240"
  },
  {
    "text": "That you will have highly\nparameterized code, but many parameters you have to specify\nbefore you will say, now my",
    "start": "2619240",
    "end": "2625150"
  },
  {
    "text": "program is ready to run on\nthis parallel machine. And this is totally\nunexplored.",
    "start": "2625150",
    "end": "2631170"
  },
  {
    "text": "As I said, this is an idea\nlevel them being. AUDIENCE: So this adds a\nproblem that is not in",
    "start": "2631170",
    "end": "2636869"
  },
  {
    "text": "traditional hardware\nsynthesis, mainly picking all the n's. Ideally you wouldn't want to\nhave to have the programmer to",
    "start": "2636870",
    "end": "2643109"
  },
  {
    "text": "come up with creative algorithms\nbecause they're going to have lots\nand lots of . ARVIND: Absolutely. We may have lots of defaults.",
    "start": "2643110",
    "end": "2648770"
  },
  {
    "text": "We may other level of smart\nprograms, which look at this and they instantly go and\nset many parameters.",
    "start": "2648770",
    "end": "2654589"
  },
  {
    "text": "You know, so there will\nbe a practical side, many issues like that. But main point I'm trying to\nmake is that I really want to",
    "start": "2654590",
    "end": "2661690"
  },
  {
    "text": "synthesize. I want to instantiate a program,\nsynthesize a program",
    "start": "2661690",
    "end": "2667470"
  },
  {
    "text": "for a given configuration\nof hardware.",
    "start": "2667470",
    "end": "2672710"
  },
  {
    "text": "Let's look at the\nGCD in Bluespec. If I'm going to find the GCD\nof 2 numbers I need 2",
    "start": "2672710",
    "end": "2680700"
  },
  {
    "text": "registers, x and y; so\nthat's what this is. Make me a register.",
    "start": "2680700",
    "end": "2685950"
  },
  {
    "text": "If you want, make\nme 2 variables. You know, make me variable\nx and y, initial values are zero.",
    "start": "2685950",
    "end": "2692330"
  },
  {
    "text": "So this is what is called\nthe state of the module. It knows about and x\nand y, nobody else",
    "start": "2692330",
    "end": "2697930"
  },
  {
    "text": "knows about x and y. What are the dynamics of it? How do I compute this?",
    "start": "2697930",
    "end": "2705090"
  },
  {
    "text": "So internal behavior is being\ndescribed and this is exactly what you saw earlier in saying\nthat there is a swap rule.",
    "start": "2705090",
    "end": "2712240"
  },
  {
    "text": "If x is greater than y and y is\nnot equal to zero then you swap x and y, so this is a\nparallel composition. x gets",
    "start": "2712240",
    "end": "2718556"
  },
  {
    "text": "y, y gets x.  In this system all the reads\ntake place instantaneously and",
    "start": "2718556",
    "end": "2727480"
  },
  {
    "text": "then you do all the writes\nat the end of it. Don't read this sequentially,\nyou read x and y in parallel",
    "start": "2727480",
    "end": "2734720"
  },
  {
    "text": "and then you go and\nupdate x and y. Does this rule make sense? I mean, if you know\nanything GCD--",
    "start": "2734720",
    "end": "2741110"
  },
  {
    "text": "if x is greater than y than\nyou're going to swap it and subtraction, if x is less than\nor equal to y than y",
    "start": "2741110",
    "end": "2747830"
  },
  {
    "text": "gets y minus x. So this is very interesting.",
    "start": "2747830",
    "end": "2753210"
  },
  {
    "text": "Now you have 2 registers x and\ny and I've given 2 rules and I'm saying you can apply these\nrules anytime you want.",
    "start": "2753210",
    "end": "2760650"
  },
  {
    "text": "Just repeatedly keep\ndoing these rules. Now what does the outside\nworld know about this? ",
    "start": "2760650",
    "end": "2768400"
  },
  {
    "text": "What do you want to advertise\nabout GCD to the outside world? You don't want to give\naway your secret.",
    "start": "2768400",
    "end": "2773670"
  },
  {
    "text": "This is your intellectual\nproperty of how you're computing the GCD. You just want to be use GCD.",
    "start": "2773670",
    "end": "2781090"
  },
  {
    "text": "So the outside world can say,\noh find me start it. With a and b. x gets\na, y gets b.",
    "start": "2781090",
    "end": "2789750"
  },
  {
    "text": "It's going to give you 2\nparameters, but we may be busy computing so we have a guard\nhere which says, if y is",
    "start": "2789750",
    "end": "2797730"
  },
  {
    "text": "zero-- this is internal,\noutside world doesn't see this. If y is zero then only then can\nyou start it, otherwise",
    "start": "2797730",
    "end": "2805890"
  },
  {
    "text": "you can't start it. Otherwise it means it's\nbusy computing. OK, similarly when is the\nresult available?",
    "start": "2805890",
    "end": "2812930"
  },
  {
    "text": "When the y is zero then you\nhave the result and you will return x. AUDIENCE: [OBSCURED]",
    "start": "2812930",
    "end": "2818720"
  },
  {
    "text": "ARVIND: That's right. So that'll be more\nsophisticated. And that's exactly the kind\nof decision I do want the",
    "start": "2818720",
    "end": "2825000"
  },
  {
    "text": "designers to take because you\nmay want to put a five hole. You may just keep spitting\nout results.",
    "start": "2825000",
    "end": "2831150"
  },
  {
    "text": "You can make it as sophisticated\nas you want. Tag it if you want. No predetermined thing.",
    "start": "2831150",
    "end": "2836790"
  },
  {
    "start": "2836790",
    "end": "2842540"
  },
  {
    "text": "So first question I ask you,\nwhat happened to those recursive calls? ",
    "start": "2842540",
    "end": "2850849"
  },
  {
    "text": "You know, if you go back to the\nprevious slide there was a recursively called GCD, which\nyou were all comfortable with.",
    "start": "2850850",
    "end": "2857940"
  },
  {
    "text": "There is no GCD call here. AUDIENCE: [OBSCURED]",
    "start": "2857940",
    "end": "2864280"
  },
  {
    "text": "ARVIND: Right, so there's\na notion of a cycle event or something. Look at it now, update\nit, look at it again.",
    "start": "2864280",
    "end": "2871040"
  },
  {
    "text": "You know, so there's like an\ninfinite loop here, which is always going. Which is exactly how\nhardware works.",
    "start": "2871040",
    "end": "2877280"
  },
  {
    "text": " It doesn't have to be\nsynchronous, but if you want",
    "start": "2877280",
    "end": "2882569"
  },
  {
    "text": "to have a simple model\nin your head just think, there's the clock. You know, look at this state,\npick one route to execute,",
    "start": "2882570",
    "end": "2889730"
  },
  {
    "text": "update it, then it's the\nnext clock cycle. Keep doing this repeatedly.",
    "start": "2889730",
    "end": "2896220"
  },
  {
    "text": "It's details here, but I can\ntake such a description and actually produce that machine\nfor you, which does the GCD.",
    "start": "2896220",
    "end": "2903810"
  },
  {
    "text": "What I'm much more interested\nin is, this is how I want to think about my GCD now.",
    "start": "2903810",
    "end": "2909759"
  },
  {
    "text": "So I've hidden everything\ninside it. And it has 2 methods: start and\nresult and there is a very",
    "start": "2909760",
    "end": "2917190"
  },
  {
    "text": "strong notion of when\na method is ready-- because it may be busy\ncomputing, it doesn't want to",
    "start": "2917190",
    "end": "2923320"
  },
  {
    "text": "listen to you. So there is this notion of\nsomething being ready and if",
    "start": "2923320",
    "end": "2928930"
  },
  {
    "text": "it's an action method then\nyou're only allowed to enable it when it's ready.",
    "start": "2928930",
    "end": "2935560"
  },
  {
    "text": "So this is a high-level\nprotocol that compiler will enforce. It'll never ever set this,\nit'll never execute this",
    "start": "2935560",
    "end": "2943950"
  },
  {
    "text": "unless it is ready\nto be executed. And of course, when you're going\nto enable it then you have to give me 2 arguments\nthat go with it.",
    "start": "2943950",
    "end": "2953010"
  },
  {
    "text": "And what does this\nreally mean?  The result is valid.",
    "start": "2953010",
    "end": "2959930"
  },
  {
    "text": "So if are to do types et cetera,\nthis would easily be baby type or something. Tag union type that validates\nis being coded here.",
    "start": "2959930",
    "end": "2968490"
  },
  {
    "text": " So really to the world\nyou are just",
    "start": "2968490",
    "end": "2975080"
  },
  {
    "text": "advertising this interface. There is a GCD interface\nand it has 2 methods.",
    "start": "2975080",
    "end": "2980520"
  },
  {
    "text": "An action method, which is\ncalled start and a result method, which is just a\nvalue kind of a thing.",
    "start": "2980520",
    "end": "2986650"
  },
  {
    "text": "And in order to do this\nyou have to give me an int a into b in this. An end of interface.",
    "start": "2986650",
    "end": "2992650"
  },
  {
    "text": "Now this is borrowing a lot\nfrom modern programming languages so for example,\nI can easily make it",
    "start": "2992650",
    "end": "3002020"
  },
  {
    "text": "polymorphic. It doesn't have to\nbe ints here. You know, what is the\nmeaning of int?",
    "start": "3002020",
    "end": "3007270"
  },
  {
    "text": " You can specify the\ntype in this.",
    "start": "3007270",
    "end": "3015390"
  },
  {
    "text": "So it'll be a's of type t,\nb's of type t et cetera.",
    "start": "3015390",
    "end": "3020490"
  },
  {
    "text": "What are the examples\nof type t here? It could be a 32 bit integer, it\ncould be 16 bit integer, it",
    "start": "3020490",
    "end": "3026990"
  },
  {
    "text": "could be 17 bit integer,\nwhatever you want and whatever makes sense. So this is the kind of thing\nthat you always take care of",
    "start": "3026990",
    "end": "3034210"
  },
  {
    "text": "when you synthesize things. It won't synthesize until you\nspecify the type, but the",
    "start": "3034210",
    "end": "3039990"
  },
  {
    "text": "description remains the same. And you will instantiate\nit for a given type.",
    "start": "3039990",
    "end": "3045430"
  },
  {
    "text": "This I'm showing you\nfor one reason. If you are coming from the\nhardware side really these",
    "start": "3045430",
    "end": "3050880"
  },
  {
    "text": "ideas and types and sensations\nare very sophisticated. I mean, this is getting\nas advanced as",
    "start": "3050880",
    "end": "3057240"
  },
  {
    "text": "you can have in software. The other very interesting\nthing is, and this is the",
    "start": "3057240",
    "end": "3063490"
  },
  {
    "text": "abstract data type kind of\nthinking, you can go and completely change the\nimplementation of this.",
    "start": "3063490",
    "end": "3071279"
  },
  {
    "text": "If you have a clever algorithm\nfor doing GCD, fine, go ahead and do it. You know, it doesn't effect\nthe users of this.",
    "start": "3071280",
    "end": "3079280"
  },
  {
    "text": "So this is a very important\nproperty for composition. All I insist on is that every\nmethod has this ready thing",
    "start": "3079280",
    "end": "3085770"
  },
  {
    "text": "coming on so that I don't make\nmistakes in wiring it. I will involve this method\nonly when it's ready.",
    "start": "3085770",
    "end": "3092240"
  },
  {
    "text": "So in some sense if you forget\nabout the ready thing, I'm just borrowing ideas from object\noriented languages.",
    "start": "3092240",
    "end": "3099480"
  },
  {
    "text": "You know, you have a class, you\nhave methods on it, and all I'm saying is oh, you should\nmanipulate this state",
    "start": "3099480",
    "end": "3104940"
  },
  {
    "text": "in a very systematic manner\nusing these methods. But then I'm injecting some\nhardware idea here, which",
    "start": "3104940",
    "end": "3111790"
  },
  {
    "text": "doesn't exist in\nsoftware today. That is, oh, a method\nmay not be ready.",
    "start": "3111790",
    "end": "3118030"
  },
  {
    "text": "And even that can be captured\nvery abstractly and done properly in this.",
    "start": "3118030",
    "end": "3123270"
  },
  {
    "text": "Yep? AUDIENCE: So then in the case\nof making models I was thinking of spy nature.",
    "start": "3123270",
    "end": "3128609"
  },
  {
    "text": "So if you want to basically\nsynthesize the hardware you may also better efficiency by\nhaving set of synchronized",
    "start": "3128610",
    "end": "3135880"
  },
  {
    "text": "protocol by taking the\noutput [OBSCURED] number of cycles.",
    "start": "3135880",
    "end": "3142150"
  },
  {
    "text": "ARVIND: I think, yes. That'll be a low-level detail\nthat if it is synchronized then you will actually try to\nmanipulate it like that.",
    "start": "3142150",
    "end": "3151030"
  },
  {
    "text": "AUDIENCE: [OBSCURED] ARVIND: OK, right. So let me just quickly say\nwhat the languages is.",
    "start": "3151030",
    "end": "3158474"
  },
  {
    "text": "So you have modules, then you\nhave state variables, and you have rules and you have action\nmethods and read methods.",
    "start": "3158475",
    "end": "3163690"
  },
  {
    "text": "What I wanted to show\nyou is what is the language of actions. So when I write an action here\nor an action here, what is it?",
    "start": "3163690",
    "end": "3172630"
  },
  {
    "text": "So simplest action is assignment\nto a variable, assigment to a register.",
    "start": "3172630",
    "end": "3179390"
  },
  {
    "text": "This is a conditional action,\nso if predicate is true then do this action, otherwise no\naction, no change in state.",
    "start": "3179390",
    "end": "3188059"
  },
  {
    "text": "This is a parallel\ncomposition. Do a1 and a2 in parallel.",
    "start": "3188060",
    "end": "3193520"
  },
  {
    "text": "Sequential composition, the\neffects of this are visible to this, et cetera. This is a call to a method\nof one of the module.",
    "start": "3193520",
    "end": "3201820"
  },
  {
    "text": "And then there is a guard. ",
    "start": "3201820",
    "end": "3207550"
  },
  {
    "text": "And you have an expression\nlanguage, which is there's nothing special here.",
    "start": "3207550",
    "end": "3213140"
  },
  {
    "text": "So this is just simply you\ncan read a variable, you can have constants.",
    "start": "3213140",
    "end": "3218570"
  },
  {
    "text": "These are just names\nand there's nothing special going on here. Let me explain you guards.",
    "start": "3218570",
    "end": "3224060"
  },
  {
    "text": "So people find guards versus\nif's confusing.",
    "start": "3224060",
    "end": "3229150"
  },
  {
    "text": "And this is one way\nto understand it. So guards affect the\nsurroundings. If I wrote here a1 when p1 in\nparallel with a2 think of",
    "start": "3229150",
    "end": "3240500"
  },
  {
    "text": "guard as something to\ndo with resources. I really don't want you to\ndo a1 unless p1 is true.",
    "start": "3240500",
    "end": "3250170"
  },
  {
    "text": "p1 made a fact that the\nmodule was busy. Some predicate here.",
    "start": "3250170",
    "end": "3255880"
  },
  {
    "text": "But I want the effect of this\nwhole thing to be atomic. So if any part of it can't be\ndone then the whole thing",
    "start": "3255880",
    "end": "3263100"
  },
  {
    "text": "can't be done. And therefore the affect of\nguard is as if you wrote a1 in",
    "start": "3263100",
    "end": "3269370"
  },
  {
    "text": "parallel with a2 when p1. In other words, guard on\nanything becomes guard on",
    "start": "3269370",
    "end": "3274420"
  },
  {
    "text": "everything in that parallel\ncomposition.  Do you understand what\nI just said?",
    "start": "3274420",
    "end": "3280390"
  },
  {
    "text": " This is very important for\ncomposition of guards.",
    "start": "3280390",
    "end": "3286350"
  },
  {
    "text": "Because I want the\natomicity of the whole thing to be preserved. So if anything can't be done\nthat means the whole thing",
    "start": "3286350",
    "end": "3291470"
  },
  {
    "text": "can't be done. On the other hand, conditional\naction is",
    "start": "3291470",
    "end": "3296480"
  },
  {
    "text": "just conditional action. So if I have if p1 than a1 in\nparallel with a2, well that's",
    "start": "3296480",
    "end": "3302000"
  },
  {
    "text": "like saying if p1 was true then\nI want to do a1 and a2 in parallel, otherwise I\njust want to do a2.",
    "start": "3302000",
    "end": "3310570"
  },
  {
    "text": "So there is a very big\ndifference between conditional actions and guards. Guards are something\nabout resources.",
    "start": "3310570",
    "end": "3317530"
  },
  {
    "text": "I need it for proper composition\nof atomic actions. ",
    "start": "3317530",
    "end": "3324300"
  },
  {
    "text": "AUDIENCE: I have question.  So are they entirely\nequal into. Because this is maybe a\nlow-level question, but in the",
    "start": "3324300",
    "end": "3333490"
  },
  {
    "text": "first case-- so the first\ncase in the left. Can't you start doing a2\nand then roll it back",
    "start": "3333490",
    "end": "3339002"
  },
  {
    "text": "or something [OBSCURED] ARVIND: Oh, I think there may be\nmany tricks you can play in implentation. You can be optimistic,\nyou can--",
    "start": "3339002",
    "end": "3344890"
  },
  {
    "text": "[INTERPOSING VOICES] ARVIND: No. No. No. Semantically this is this\ndefining the semantics.",
    "start": "3344890",
    "end": "3350740"
  },
  {
    "text": "I mean, this is the algebra. This has to be true because\nI'm saying this is what a guard is.",
    "start": "3350740",
    "end": "3356310"
  },
  {
    "text": "AUDIENCE: Right, so the\nsemantically equal but not [OBSCURED].",
    "start": "3356310",
    "end": "3362860"
  },
  {
    "text": "ARVIND: Well I mean, that's\nprobably not the right way to say it. I mean, semantics are\nbeing defined. You have choice in\nimplementations.",
    "start": "3362860",
    "end": "3368520"
  },
  {
    "text": " I mean I'm not telling you\nhow to implement this.",
    "start": "3368520",
    "end": "3373760"
  },
  {
    "text": "Let me go on with this. So here is a problem that was\nposed to me by Jayadev Misra.",
    "start": "3373760",
    "end": "3380520"
  },
  {
    "text": "This is quasi realistic\nproblem. Ask for codes from 2 airlines.",
    "start": "3380520",
    "end": "3385980"
  },
  {
    "text": "If one code is below $300,\nbuy immediately. $300 is sort of the cheapest\nticket you get these dates.",
    "start": "3385980",
    "end": "3394520"
  },
  {
    "text": "Buy the lower quote\nif over $300. But as some-- say your patience\nruns out, say I can't",
    "start": "3394520",
    "end": "3401360"
  },
  {
    "text": "wait anymore. So after one minute buy from\nwhosoever has quoted otherwise",
    "start": "3401360",
    "end": "3408369"
  },
  {
    "text": "flag error. Is this a realistic scenario? ",
    "start": "3408370",
    "end": "3416170"
  },
  {
    "text": "You can express it\nusing threads. And you can write a scheduler\nto do this, et cetera.",
    "start": "3416170",
    "end": "3423480"
  },
  {
    "text": " Those things are not as succint\nas you would like.",
    "start": "3423480",
    "end": "3429780"
  },
  {
    "text": "I mean, you'd be surprised, in\nthis simple a problem how complicated and how many\nquestions will arise if you",
    "start": "3429780",
    "end": "3435549"
  },
  {
    "text": "express this as a threaded\ncomputation. Now let me show you\nwhat you will do--",
    "start": "3435550",
    "end": "3441890"
  },
  {
    "text": " in Bluuspec.",
    "start": "3441890",
    "end": "3449109"
  },
  {
    "text": "OK, so we are going to make\na module, which does what? Make get quotes.",
    "start": "3449110",
    "end": "3455590"
  },
  {
    "text": "This module's job is\nto get quotes. So what kind of state elements\ndo you expect it to have?",
    "start": "3455590",
    "end": "3463000"
  },
  {
    "text": "Well airline a may be quoting\nsome value, airline b may be quoting some value. Whether we are done or not\nthere's a timer, which we're",
    "start": "3463000",
    "end": "3470289"
  },
  {
    "text": "going to be bumping,\net cetera. And they'll be rules you know,\nget a quote from a, which will",
    "start": "3470290",
    "end": "3478120"
  },
  {
    "text": "be when not done do something. Executes when a responds.",
    "start": "3478120",
    "end": "3484360"
  },
  {
    "text": "Get b, timeout, et cetera. There are there ruls\nof this sort.",
    "start": "3484360",
    "end": "3490090"
  },
  {
    "text": "Let me just show you\none methodd. So method, this is how\nyou will start it--",
    "start": "3490090",
    "end": "3497599"
  },
  {
    "text": "you have this module get quotes\nand you're saying book me a ticket and this\nis your request r.",
    "start": "3497600",
    "end": "3503660"
  },
  {
    "text": "Now obviously this can\nonly be done when the module is not busy. If module is busy the\nyou can't do it.",
    "start": "3503660",
    "end": "3510300"
  },
  {
    "text": "So what will you do when\nyou get such a request? Tell me this makes sense.",
    "start": "3510300",
    "end": "3515660"
  },
  {
    "text": "So what is this saying?  Try to get a request\nfrom a in parallel.",
    "start": "3515660",
    "end": "3526190"
  },
  {
    "text": "Try to get a request from b. ",
    "start": "3526190",
    "end": "3531630"
  },
  {
    "text": "Now you are busy. The module is busy so done\nequals false here.",
    "start": "3531630",
    "end": "3538619"
  },
  {
    "text": "And I'm initializing this. I'm just saying that a quote\nright now is infinity and b",
    "start": "3538620",
    "end": "3544120"
  },
  {
    "text": "quote is infinity and\ntimer is zero.",
    "start": "3544120",
    "end": "3549190"
  },
  {
    "text": "Fair? And when will I get ticket?",
    "start": "3549190",
    "end": "3554349"
  },
  {
    "text": "Well, when done then you'll\nreturn the ticket from this. Now let's look at example\nof a rule.",
    "start": "3554350",
    "end": "3560950"
  },
  {
    "text": " So you may have a rule like\nthis, pick cheapest. You see",
    "start": "3560950",
    "end": "3571020"
  },
  {
    "text": "the interesting thing in this is\nyou'll be able to read this independently of what else is\ngoing on in this system.",
    "start": "3571020",
    "end": "3576980"
  },
  {
    "text": "And let's see, what does\nthis rule say? Is it succint? Rules says when you are not done\nand if the quote from a",
    "start": "3576980",
    "end": "3588200"
  },
  {
    "text": "is not infinite that\nmeans a has quoted.",
    "start": "3588200",
    "end": "3594839"
  },
  {
    "text": "And b has also quoted, then\nwhat should happen?",
    "start": "3594840",
    "end": "3604760"
  },
  {
    "text": "If a is less than b then\nbuy the ticket from a. Otherwise you'll buy the ticket\nfrom b and you're done.",
    "start": "3604760",
    "end": "3614270"
  },
  {
    "start": "3614270",
    "end": "3619370"
  },
  {
    "text": "I'm not going to write all these\nrules, but I think you should be able to--",
    "start": "3619370",
    "end": "3625080"
  },
  {
    "text": "I'm certain you can\nwrite these rules. What's happening here that is\njust separation of concerns.",
    "start": "3625080",
    "end": "3634180"
  },
  {
    "text": "It's all concurrenct stuff. Yes? AUDIENCE: [OBSCURED]",
    "start": "3634180",
    "end": "3643369"
  },
  {
    "text": "ARVIND: Parallel? AUDIENCE: Or like, for\nlack of better words the type in the name.",
    "start": "3643370",
    "end": "3650980"
  },
  {
    "text": "ARVIND: Sorry, say it again. AUDIENCE: So as the ampersand,\nhow does that",
    "start": "3650980",
    "end": "3656417"
  },
  {
    "text": "interact with the-- PROFESSOR: Can you hold that\nquestion first because we will run out of space. ",
    "start": "3656417",
    "end": "3661990"
  },
  {
    "text": "AUDIENCE: So the ampersand after\nnot done that is, what",
    "start": "3661990",
    "end": "3670634"
  },
  {
    "text": "sort of ordering is that? ARVIND: It's just, I mean,\nassociative, commutative.",
    "start": "3670634",
    "end": "3676760"
  },
  {
    "text": "Kind of thing. It's all happening\nin parallel. AUDIENCE: [OBSCURED].",
    "start": "3676760",
    "end": "3682890"
  },
  {
    "text": "ARVIND: This thing, right? I mean, think of it like this,\nthese are variables and you're",
    "start": "3682890",
    "end": "3689800"
  },
  {
    "text": "checking their values\nright now. So it's just a combination\nkind of a query",
    "start": "3689800",
    "end": "3695310"
  },
  {
    "text": "that you have here. AUDIENCE: So I guess you're\nchecking there's new activity happening. ARVIND: That's right. AUDIENCE: Doesn't matter\nwhich order you check.",
    "start": "3695310",
    "end": "3704481"
  },
  {
    "text": "AUDIENCE: So I guess what I'm\ntrying to get is that the whole block at the top is\nexecuted in parallel with the block at the bottom?",
    "start": "3704481",
    "end": "3711780"
  },
  {
    "text": "ARVIND: No. Those things are not\nin parallel. AUDIENCE:\n[UNINTELLIGIBLE PHRASE] ",
    "start": "3711780",
    "end": "3729660"
  },
  {
    "text": "ARVIND: Now I just want to show\nyou this because it's completely different from\nairline reservations.",
    "start": "3729660",
    "end": "3735510"
  },
  {
    "text": "You know, H.264 this is a\ncodec that is being used everywhere and we'll\nbe used even more.",
    "start": "3735510",
    "end": "3743740"
  },
  {
    "text": "And this is a typical data flow\ndiagram you will find for this kind of thing. You don't have to understand\nanything about this except",
    "start": "3743740",
    "end": "3751940"
  },
  {
    "text": "that conceptually you just\nhave five flows for communicating between them and\nin all such things the goal is",
    "start": "3751940",
    "end": "3761120"
  },
  {
    "text": "that it has to be able to\nsustain a certain amount of rate at which dat is to be\nprocessed and it's usually",
    "start": "3761120",
    "end": "3766589"
  },
  {
    "text": "forgiving in terms\nof latencies. So if latency increases a little\nbit here and there it's",
    "start": "3766590",
    "end": "3772500"
  },
  {
    "text": "usually OK-- when things\ngo in and come out. A data flow like network.",
    "start": "3772500",
    "end": "3780319"
  },
  {
    "text": "And another reason why this\nexample is fascinating is because it's done regularly both\nin hardware and software",
    "start": "3780320",
    "end": "3786350"
  },
  {
    "text": "and any mixture of the two. So for example, when it runs\non your PC it's being done 100% in software and I think\non iPods there are special",
    "start": "3786350",
    "end": "3797420"
  },
  {
    "text": "purpose hardware for doing it\nand therefore the battery can last much longer.",
    "start": "3797420",
    "end": "3803530"
  },
  {
    "text": "And on cell phones it's kind of\nin between in this and it's a question of what frame rate\nyou want to process?",
    "start": "3803530",
    "end": "3810420"
  },
  {
    "text": "If you're procssing very high\nframe rate then it'll have to be done in hardware.",
    "start": "3810420",
    "end": "3816800"
  },
  {
    "text": "So when we got into this thing\nwe said, OK, we wanted to build hardware for doing this.",
    "start": "3816800",
    "end": "3824030"
  },
  {
    "text": "And reference codes that are\navailable, it's 80,000 lines and it sort of gives\nyou a heart attack.",
    "start": "3824030",
    "end": "3830010"
  },
  {
    "text": "You know, you read this\nand you say, whoa! And it doesn't need\nthe performance. I mean, that reference code, if\nit ran on your laptop you",
    "start": "3830010",
    "end": "3837230"
  },
  {
    "text": "won't be able to watch\na movie with this. And there is the Linux version\nof it, which gives you even a",
    "start": "3837230",
    "end": "3845210"
  },
  {
    "text": "bigger heart attack because\nit's 200,000 lies and many different codecs are\nmixed in this.",
    "start": "3845210",
    "end": "3852430"
  },
  {
    "text": " The biggest problem here it is\nnone of these codes reflect",
    "start": "3852430",
    "end": "3860180"
  },
  {
    "text": "that picture I showed you\nof the previous diagram. Because the way people approach\nit in software is",
    "start": "3860180",
    "end": "3868059"
  },
  {
    "text": "they take some input from\nhere and they push it as far as they can.",
    "start": "3868060",
    "end": "3874020"
  },
  {
    "text": " And that's it. Then they will take the next\ninput and push it.",
    "start": "3874020",
    "end": "3880540"
  },
  {
    "text": "So different boxes keep\nmodifying it as they see fit and as a reader you can't tell,\noh, this is this part",
    "start": "3880540",
    "end": "3888735"
  },
  {
    "text": "and this is this part. I mean, there are no 54Q's. Why? Because 54Q's are expensive\nin software.",
    "start": "3888735",
    "end": "3894869"
  },
  {
    "text": "You know, it will\ninvolve copying. You know, you'll write it here\nthen you'll read it again, which is a bad idea\nin software.",
    "start": "3894870",
    "end": "3901710"
  },
  {
    "text": "So in some sense, the software\nwill thinking already entered. ",
    "start": "3901710",
    "end": "3909690"
  },
  {
    "text": "In this style of coding there\nis no model of concurrency. So it's not clear to me when\nyou give me that quote what",
    "start": "3909690",
    "end": "3916720"
  },
  {
    "text": "all I can do in parallel in\norder to preserve the semantics of this. I mean the problem is much,\nmuch harder here.",
    "start": "3916720",
    "end": "3923790"
  },
  {
    "text": "So you will just do some\nhigh-level analysis of the code, but you have lost a lot\nof information that was all",
    "start": "3923790",
    "end": "3930100"
  },
  {
    "text": "present in the source-- could've been present\nin the source. And my claim is it can\nbe done differently.",
    "start": "3930100",
    "end": "3935990"
  },
  {
    "text": "So this has been done by\nChun-Chieh and this I'm",
    "start": "3935990",
    "end": "3941619"
  },
  {
    "text": "showing you a month old slide,\nbut he has done a lot more work since then and the total\ncode in Bluespec is 9000 lines",
    "start": "3941620",
    "end": "3949970"
  },
  {
    "text": "for this contrasting it with\n80,000 versus 200,000 kind of stuff and this is telling you\nthe amount of code in various",
    "start": "3949970",
    "end": "3959089"
  },
  {
    "text": "blocks in this. And since it's done in Bluespec\nyou can take it and",
    "start": "3959090",
    "end": "3964940"
  },
  {
    "text": "you can go and implement it all\nin hardware, so you can synthesize it.",
    "start": "3964940",
    "end": "3970980"
  },
  {
    "text": "It actually does now 45 frames\nper second, actually 90 frames even per second today.",
    "start": "3970980",
    "end": "3977509"
  },
  {
    "text": "You know, so this\nis a month old. This is the main point.",
    "start": "3977510",
    "end": "3983180"
  },
  {
    "text": "Once you have done this\nnow you can refine it. You have a different\npreference. You say, oh, I want to\ndo this differently.",
    "start": "3983180",
    "end": "3990830"
  },
  {
    "text": "So you can go and rewrite\nany module again. It will be very, very easy\nto do this in the system.",
    "start": "3990830",
    "end": "3998109"
  },
  {
    "text": "It is very difficult to do this\nin the reference code, so that's one point to be made.",
    "start": "3998110",
    "end": "4003940"
  },
  {
    "text": "The second thing is you\ndon't have to do everything in hardware. If you wanted you could have\nimplemented any part of it in",
    "start": "4003940",
    "end": "4009520"
  },
  {
    "text": "software, so you can take the\nsame kind of a description and generate software\nfrom it as well.",
    "start": "4009520",
    "end": "4015680"
  },
  {
    "text": "So each module can be\nrefined separately. Behaviors of modules\nare composable. You know, you can take these\nthings and it's predictable",
    "start": "4015680",
    "end": "4025190"
  },
  {
    "text": "what will happen when you\ncompose these things in terms of performance and in terms of\nresources also, it's very",
    "start": "4025190",
    "end": "4031480"
  },
  {
    "text": "clear what's happening. In hardware the resources\nwill be area and time and so on in this.",
    "start": "4031480",
    "end": "4037099"
  },
  {
    "text": "So takeaway. Parallel programming should be\nbased on well-defined modules and parallel composition\nof such modules.",
    "start": "4037100",
    "end": "4044579"
  },
  {
    "text": "Modules must embody a notion of\nresources and consequently, sharing in time multiplex use.",
    "start": "4044580",
    "end": "4051019"
  },
  {
    "text": "This is a controversial point. And guard atomic actions and\nmodules with guarded interfaces provide a solid\nfoundation for doing so.",
    "start": "4051020",
    "end": "4059800"
  },
  {
    "text": "PROFESSOR: Thank you. ",
    "start": "4059800",
    "end": "4064996"
  },
  {
    "text": "Now we ran a little bit late,\nso if you have questions you can ask about programs.",
    "start": "4064996",
    "end": "4070049"
  },
  {
    "start": "4070050",
    "end": "4071004"
  }
]