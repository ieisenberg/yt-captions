[
  {
    "start": "0",
    "end": "870"
  },
  {
    "text": "One of the multiple definitions\nof trees that we saw",
    "start": "870",
    "end": "3489"
  },
  {
    "text": "is that it's a minimum edge\nsimple graph that connects up",
    "start": "3490",
    "end": "8570"
  },
  {
    "text": "a bunch of vertices.",
    "start": "8570",
    "end": "9950"
  },
  {
    "text": "And that leads to the idea\nof finding a spanning tree",
    "start": "9950",
    "end": "14510"
  },
  {
    "text": "within a simple graph that\nmaintains the same connections.",
    "start": "14510",
    "end": "17520"
  },
  {
    "text": "So let's begin with a\nprecise technical definition.",
    "start": "17520",
    "end": "19920"
  },
  {
    "text": "A spanning subgraph\nof a graph, G,",
    "start": "19920",
    "end": "22530"
  },
  {
    "text": "is simply a subgraph that\nhas all the vertices of G.",
    "start": "22530",
    "end": "25740"
  },
  {
    "text": "So, again, a subgraph\nof a graph means",
    "start": "25740",
    "end": "28039"
  },
  {
    "text": "it's got a subset\nof the vertices,",
    "start": "28040",
    "end": "30050"
  },
  {
    "text": "and a subset of the edges.",
    "start": "30050",
    "end": "31869"
  },
  {
    "text": "Spanning subgraph is that\nhas all of the vertices,",
    "start": "31870",
    "end": "35590"
  },
  {
    "text": "but a subset of the edges.",
    "start": "35590",
    "end": "37560"
  },
  {
    "text": "And the definition\nof a spanning tree",
    "start": "37560",
    "end": "39940"
  },
  {
    "text": "is a spanning subgraph\nthat is a tree.",
    "start": "39940",
    "end": "43289"
  },
  {
    "text": "Now, not all graphs are going\nto have a spanning tree,",
    "start": "43290",
    "end": "47750"
  },
  {
    "text": "because the tree\nhas to be connected.",
    "start": "47750",
    "end": "49670"
  },
  {
    "text": "If the original graph\nis not connected,",
    "start": "49670",
    "end": "51350"
  },
  {
    "text": "there's no way you can\nfind a spanning tree using",
    "start": "51350",
    "end": "54120"
  },
  {
    "text": "only the edges that\nare there already.",
    "start": "54120",
    "end": "56010"
  },
  {
    "text": "But it's going to turn out\nthat if the graph is connected,",
    "start": "56010",
    "end": "58469"
  },
  {
    "text": "it's guaranteed to\nhave a spanning tree.",
    "start": "58470",
    "end": "60450"
  },
  {
    "text": "Let's look at an example.",
    "start": "60450",
    "end": "61930"
  },
  {
    "text": "Here's a simple graph.",
    "start": "61930",
    "end": "63480"
  },
  {
    "text": "And what I want, then, is a\nspanning tree, a selection",
    "start": "63480",
    "end": "66380"
  },
  {
    "text": "of edges, that connect up all\nthe vertices such that we're",
    "start": "66380",
    "end": "70119"
  },
  {
    "text": "only using edges in the original\ngraph, and they form a tree.",
    "start": "70120",
    "end": "74810"
  },
  {
    "text": "There it is.",
    "start": "74810",
    "end": "76340"
  },
  {
    "text": "So if you check on these magenta\nedges that I've highlighted,",
    "start": "76340",
    "end": "79759"
  },
  {
    "text": "they define a tree.",
    "start": "79760",
    "end": "80990"
  },
  {
    "text": "I haven't used three of the\nedges in the original graph.",
    "start": "80990",
    "end": "84680"
  },
  {
    "text": "Now this particular\nchoice of spanning tree",
    "start": "84680",
    "end": "86675"
  },
  {
    "text": "is kind of arbitrary.",
    "start": "86675",
    "end": "87550"
  },
  {
    "text": "In general, there's\nlots of spanning trees.",
    "start": "87550",
    "end": "89341"
  },
  {
    "text": "Here's another one, this\ntime with green edges.",
    "start": "89341",
    "end": "91670"
  },
  {
    "text": "Again, I'm using only edges\nfrom the original graph--",
    "start": "91670",
    "end": "94360"
  },
  {
    "text": "I've left out three\ndifferent ones,",
    "start": "94360",
    "end": "96210"
  },
  {
    "text": "and used a different set\nof edges to form the tree.",
    "start": "96210",
    "end": "99510"
  },
  {
    "text": "But there it is.",
    "start": "99510",
    "end": "100710"
  },
  {
    "text": "It's got no cycles,\nand it spans the graph",
    "start": "100710",
    "end": "104630"
  },
  {
    "text": "because every vertex in\nthe graph is part of it.",
    "start": "104630",
    "end": "107479"
  },
  {
    "text": "And of course, it's\nconnected since it's a tree.",
    "start": "107480",
    "end": "111337"
  },
  {
    "text": "There's actually some\nlovely combinatorial theory,",
    "start": "111337",
    "end": "113420"
  },
  {
    "text": "which enables you to calculate\nthe number of spanning trees",
    "start": "113420",
    "end": "116930"
  },
  {
    "text": "in a simple graph without\ntoo much difficulty,",
    "start": "116930",
    "end": "119600"
  },
  {
    "text": "just given its adjacency matrix.",
    "start": "119600",
    "end": "121530"
  },
  {
    "text": "But we're not going to\ngo into that for now.",
    "start": "121530",
    "end": "123600"
  },
  {
    "start": "123600",
    "end": "126130"
  },
  {
    "text": "First remark is that\nevery connected graph",
    "start": "126130",
    "end": "128729"
  },
  {
    "text": "is going to have\na spanning tree,",
    "start": "128729",
    "end": "130250"
  },
  {
    "text": "and the reason is, you just\npick a minimal edge tree--",
    "start": "130250",
    "end": "133820"
  },
  {
    "text": "a minimal edge connected\nspanning subgraph, rather.",
    "start": "133820",
    "end": "138145"
  },
  {
    "text": "So G, itself, if\nit's connected, is",
    "start": "138145",
    "end": "140700"
  },
  {
    "text": "by definition, a\nspanning graph of itself,",
    "start": "140700",
    "end": "143330"
  },
  {
    "text": "because it's got all\nits own vertices.",
    "start": "143330",
    "end": "145160"
  },
  {
    "text": "That means by the\nwell-ordering principle,",
    "start": "145160",
    "end": "146920"
  },
  {
    "text": "there's going to be a\nconnected spanning subgraph",
    "start": "146920",
    "end": "150120"
  },
  {
    "text": "with a minimum number of edges.",
    "start": "150120",
    "end": "152230"
  },
  {
    "text": "And that one, given that it\nhas a minimum number of edges,",
    "start": "152230",
    "end": "155290"
  },
  {
    "text": "it's guaranteed to\nbe a spanning tree.",
    "start": "155290",
    "end": "160930"
  },
  {
    "text": "Now the problem gets\nmore interesting",
    "start": "160930",
    "end": "163389"
  },
  {
    "text": "when it has a little\nmore structure--",
    "start": "163389",
    "end": "164930"
  },
  {
    "text": "instead of just trying to\nfind a spanning tree that",
    "start": "164930",
    "end": "169530"
  },
  {
    "text": "has a minimum number\nof edges, it's",
    "start": "169530",
    "end": "172280"
  },
  {
    "text": "quite typical in applications\nthat the edges have weights,",
    "start": "172280",
    "end": "175260"
  },
  {
    "text": "and we want to find a\nminimum weight spanning tree.",
    "start": "175260",
    "end": "177900"
  },
  {
    "text": "So here's an example\nwhere we have",
    "start": "177900",
    "end": "179409"
  },
  {
    "text": "a simple graph with a bunch of\nedges, and a bunch of vertices.",
    "start": "179410",
    "end": "183610"
  },
  {
    "text": "And the edges all are assigned,\nin this case, an integer",
    "start": "183610",
    "end": "185960"
  },
  {
    "text": "weight.",
    "start": "185960",
    "end": "186750"
  },
  {
    "text": "Now the motivation for\nthis kind of graph,",
    "start": "186750",
    "end": "188720"
  },
  {
    "text": "as you could think of,\nthese weights on the graph",
    "start": "188720",
    "end": "192010"
  },
  {
    "text": "as indicating the cost of\ntransporting some quantity",
    "start": "192010",
    "end": "196209"
  },
  {
    "text": "commodity from this\nvertex to that vertex,",
    "start": "196210",
    "end": "198410"
  },
  {
    "text": "directly by a road.",
    "start": "198410",
    "end": "199580"
  },
  {
    "text": "Or the time it takes to transmit\na signal over this channel.",
    "start": "199580",
    "end": "205760"
  },
  {
    "text": "Lots of ways that\nsimple graphs are",
    "start": "205760",
    "end": "208080"
  },
  {
    "text": "used to model issues\nof communication",
    "start": "208080",
    "end": "212500"
  },
  {
    "text": "among various locations.",
    "start": "212500",
    "end": "215470"
  },
  {
    "text": "And it's quite typical that\nthe channels and connections",
    "start": "215470",
    "end": "219480"
  },
  {
    "text": "between them have\ndifferent costs.",
    "start": "219480",
    "end": "221650"
  },
  {
    "text": "And it's a natural\nquestion to say, OK,",
    "start": "221650",
    "end": "223500"
  },
  {
    "text": "what's the minimum cost overall\ntree structure that will enable",
    "start": "223500",
    "end": "228526"
  },
  {
    "text": "me to have everything\nconnected to everything",
    "start": "228526",
    "end": "230400"
  },
  {
    "text": "else in the same way,\nbut that I can tolerate",
    "start": "230400",
    "end": "234269"
  },
  {
    "text": "some of my edges going down?",
    "start": "234270",
    "end": "236379"
  },
  {
    "text": "And I still would like to have\nthe cheapest kind of tree that",
    "start": "236379",
    "end": "238920"
  },
  {
    "text": "spans them all.",
    "start": "238920",
    "end": "240830"
  },
  {
    "text": "Well, there's a\nfairly simple way",
    "start": "240830",
    "end": "243340"
  },
  {
    "text": "to construct such a minimum\nweight spanning tree,",
    "start": "243340",
    "end": "246019"
  },
  {
    "text": "and that's what we're\ngoing to talk about now.",
    "start": "246020",
    "end": "248390"
  },
  {
    "text": "How do you find it?",
    "start": "248390",
    "end": "250360"
  },
  {
    "text": "Well, the idea is to\nbuild it using grey edges.",
    "start": "250360",
    "end": "254530"
  },
  {
    "text": "So what that means is that\nstarting off with the vertices,",
    "start": "254530",
    "end": "260190"
  },
  {
    "text": "we're going to start\nbuilding a tree.",
    "start": "260190",
    "end": "262730"
  },
  {
    "text": "And at any point,\nwe will have a bunch",
    "start": "262730",
    "end": "265630"
  },
  {
    "text": "of edges that are going to be\npart of our spanning tree--",
    "start": "265630",
    "end": "269030"
  },
  {
    "text": "that means that the edges don't\nhave any cycles among them,",
    "start": "269030",
    "end": "271930"
  },
  {
    "text": "they're a so-called forest,\nbut they're not yet connected.",
    "start": "271930",
    "end": "275000"
  },
  {
    "text": "And at each stage\nin this procedure,",
    "start": "275000",
    "end": "277120"
  },
  {
    "text": "we're going to look at\nthe connected components",
    "start": "277120",
    "end": "280030"
  },
  {
    "text": "of the graph that we\nhave at this moment,",
    "start": "280030",
    "end": "282430"
  },
  {
    "text": "and color them black or white.",
    "start": "282430",
    "end": "287030"
  },
  {
    "text": "And then look at the gray edges.",
    "start": "287030",
    "end": "289910"
  },
  {
    "text": "So a grey edge is defined to be\nan edge where one end point is",
    "start": "289910",
    "end": "293880"
  },
  {
    "text": "black, and the other\nend point is white.",
    "start": "293880",
    "end": "298200"
  },
  {
    "text": "And what I'm going to do, at\nany stage in the procedure",
    "start": "298200",
    "end": "302600"
  },
  {
    "text": "as I'm growing my minimum\nweight spanning tree,",
    "start": "302600",
    "end": "305220"
  },
  {
    "text": "is I'm going to look\nat all the gray edges",
    "start": "305220",
    "end": "307620"
  },
  {
    "text": "and pick a minimum\nweight gray edge.",
    "start": "307620",
    "end": "310410"
  },
  {
    "text": "Well, let's do an example\nto get this clear.",
    "start": "310410",
    "end": "313330"
  },
  {
    "text": "So to begin with, I\ndon't have any edges.",
    "start": "313330",
    "end": "315710"
  },
  {
    "text": "All I have are the\nisolated vertices.",
    "start": "315710",
    "end": "318370"
  },
  {
    "text": "So it means that I have\nsix connected components,",
    "start": "318370",
    "end": "321930"
  },
  {
    "text": "each of which is a single\nvertex with no edges.",
    "start": "321930",
    "end": "325990"
  },
  {
    "text": "That says that I'm allowed\nto color them black and white",
    "start": "325990",
    "end": "328710"
  },
  {
    "text": "in any way I choose,\nand I will do that.",
    "start": "328710",
    "end": "331762"
  },
  {
    "text": "The only constraint\non the coloring",
    "start": "331762",
    "end": "333220"
  },
  {
    "text": "is there has to be at least\none black component, and one",
    "start": "333220",
    "end": "336080"
  },
  {
    "text": "white component.",
    "start": "336080",
    "end": "337580"
  },
  {
    "text": "So there's an\narbitrary coloring--",
    "start": "337580",
    "end": "339229"
  },
  {
    "text": "I've colored two of the vertices\nwhite, and the other four",
    "start": "339230",
    "end": "341950"
  },
  {
    "text": "black.",
    "start": "341950",
    "end": "342840"
  },
  {
    "text": "Now, in this\nparticular coloring--",
    "start": "342840",
    "end": "344350"
  },
  {
    "text": "I could've chosen any one,\nbut I chose this one--",
    "start": "344350",
    "end": "346939"
  },
  {
    "text": "where are the gray edges?",
    "start": "346939",
    "end": "347979"
  },
  {
    "text": "Well, I've highlighted\nthem by thickening them.",
    "start": "347980",
    "end": "351310"
  },
  {
    "text": "So this is a gray edge,\nbecause it's black and white.",
    "start": "351310",
    "end": "354230"
  },
  {
    "text": "This is a gray edge because\nit's black and white--",
    "start": "354230",
    "end": "357030"
  },
  {
    "text": "black and white,\nblack and white.",
    "start": "357030",
    "end": "358990"
  },
  {
    "text": "This is not a gray edge,\nbecause it's white and white.",
    "start": "358990",
    "end": "361330"
  },
  {
    "text": "This is not a gray edge,\nbecause it's black and black.",
    "start": "361330",
    "end": "363580"
  },
  {
    "text": "So that's a simple enough idea.",
    "start": "363580",
    "end": "365530"
  },
  {
    "text": "Now what I'm supposed to\ndo is among my gray edges,",
    "start": "365530",
    "end": "368240"
  },
  {
    "text": "pick the one with\nthe minimum weight.",
    "start": "368240",
    "end": "369884"
  },
  {
    "text": "Well, if you look at the\nweights of the gray edges,",
    "start": "369885",
    "end": "372010"
  },
  {
    "text": "I got a four, a four, a\nnine, a seven, and a two.",
    "start": "372010",
    "end": "375512"
  },
  {
    "text": "The two is the minimum\nweight gray edge.",
    "start": "375512",
    "end": "379100"
  },
  {
    "text": "I'm going to choose that\nto start building my tree.",
    "start": "379100",
    "end": "382920"
  },
  {
    "text": "So at this moment, once I've\ncommitted to that magenta",
    "start": "382920",
    "end": "386020"
  },
  {
    "text": "edge, what I now have is a\ngraph with five components--",
    "start": "386020",
    "end": "390620"
  },
  {
    "text": "namely the component defined by\nthis edge, with two vertices.",
    "start": "390620",
    "end": "394310"
  },
  {
    "text": "And the other four\nisolated vertices,",
    "start": "394310",
    "end": "397000"
  },
  {
    "text": "which still don't have\nany edges connecting them",
    "start": "397000",
    "end": "400170"
  },
  {
    "text": "in the structure\nof magenta edges",
    "start": "400170",
    "end": "402960"
  },
  {
    "text": "that I'm building to be\nmy minimum spanning tree.",
    "start": "402960",
    "end": "405690"
  },
  {
    "text": "So according to the rules now,\nwith these five components,",
    "start": "405690",
    "end": "408110"
  },
  {
    "text": "I can recolor them.",
    "start": "408110",
    "end": "409240"
  },
  {
    "text": "And as long as I\nrecolor them in a way",
    "start": "409240",
    "end": "411300"
  },
  {
    "text": "that this component\ngets the same color--",
    "start": "411300",
    "end": "413669"
  },
  {
    "text": "there's a recoloring.",
    "start": "413670",
    "end": "414880"
  },
  {
    "text": "I've made both of those vertices\nin this component black,",
    "start": "414880",
    "end": "418450"
  },
  {
    "text": "and the other four vertices--\nwhich are isolated components--",
    "start": "418450",
    "end": "422120"
  },
  {
    "text": "I can color arbitrarily.",
    "start": "422120",
    "end": "423600"
  },
  {
    "text": "So here's my new coloring.",
    "start": "423600",
    "end": "425720"
  },
  {
    "text": "Now, again, once I\nhave this coloring,",
    "start": "425720",
    "end": "427440"
  },
  {
    "text": "I can proceed to\nidentify the gray edges.",
    "start": "427440",
    "end": "430910"
  },
  {
    "text": "There they are.",
    "start": "430910",
    "end": "431780"
  },
  {
    "text": "And this time there are\nonly two gray edges,",
    "start": "431780",
    "end": "433880"
  },
  {
    "text": "because I chose to have\nonly one white vertex.",
    "start": "433880",
    "end": "436347"
  },
  {
    "text": "There's a gray edge and\nthere's a gray edge.",
    "start": "436347",
    "end": "438180"
  },
  {
    "text": "And of course, the minimum\nweight among the two gray edges",
    "start": "438180",
    "end": "440789"
  },
  {
    "text": "is three.",
    "start": "440790",
    "end": "441750"
  },
  {
    "text": "So that's going to be my next\nedge in my minimum weight",
    "start": "441750",
    "end": "447000"
  },
  {
    "text": "spanning tree that I'm growing.",
    "start": "447000",
    "end": "448330"
  },
  {
    "text": "What's next?",
    "start": "448330",
    "end": "449379"
  },
  {
    "text": "Well now, I have\nfour components left.",
    "start": "449380",
    "end": "453060"
  },
  {
    "text": "Here's one component\ndefined by that edge, here's",
    "start": "453060",
    "end": "455680"
  },
  {
    "text": "another connected component\ndefined by that edge.",
    "start": "455680",
    "end": "458150"
  },
  {
    "text": "And these two vertices\nare isolated, still,",
    "start": "458150",
    "end": "460820"
  },
  {
    "text": "so they're components\nall by themselves.",
    "start": "460820",
    "end": "462830"
  },
  {
    "text": "And the rule is,\nrecolor in such a way",
    "start": "462830",
    "end": "465860"
  },
  {
    "text": "that both of these\nvertices in that component",
    "start": "465860",
    "end": "468289"
  },
  {
    "text": "have the same color.",
    "start": "468290",
    "end": "469630"
  },
  {
    "text": "All the vertices\nin this component",
    "start": "469630",
    "end": "471210"
  },
  {
    "text": "have the same color--\nI could switch them",
    "start": "471210",
    "end": "473060"
  },
  {
    "text": "from black to white,\nin fact I will--",
    "start": "473060",
    "end": "474630"
  },
  {
    "text": "and those can be\ncolored arbitrarily.",
    "start": "474630",
    "end": "476800"
  },
  {
    "text": "Let's do that.",
    "start": "476800",
    "end": "478190"
  },
  {
    "text": "There's a recoloring.",
    "start": "478190",
    "end": "480200"
  },
  {
    "text": "Now this component is all white,\nthat component is all white.",
    "start": "480200",
    "end": "484150"
  },
  {
    "text": "These two separate components\nhappen both to be black.",
    "start": "484150",
    "end": "487065"
  },
  {
    "start": "487065",
    "end": "489327"
  },
  {
    "text": "I could have colored one of them\nwhite, and one of them black.",
    "start": "489327",
    "end": "491910"
  },
  {
    "text": "I need to have one black, given\nthe other commitment to colors.",
    "start": "491910",
    "end": "498050"
  },
  {
    "text": "So now, again, we could\nfind a minimum weight edge,",
    "start": "498050",
    "end": "501632"
  },
  {
    "text": "a grey edge I guess it would be.",
    "start": "501632",
    "end": "504520"
  },
  {
    "text": "There are two ties for\nminimum, both of those ones.",
    "start": "504520",
    "end": "507780"
  },
  {
    "text": "And I proceed in this\nway, and I wind up",
    "start": "507780",
    "end": "510540"
  },
  {
    "text": "with this minimum\nweight spanning tree.",
    "start": "510540",
    "end": "513090"
  },
  {
    "text": "That's the procedure.",
    "start": "513090",
    "end": "514309"
  },
  {
    "text": "Now I haven't discussed\nwhy it works yet,",
    "start": "514309",
    "end": "516289"
  },
  {
    "text": "and that is explained\nin the notes.",
    "start": "516289",
    "end": "518659"
  },
  {
    "text": "But we're going to\nhold off on that",
    "start": "518659",
    "end": "520250"
  },
  {
    "text": "and just examine\napplying this algorithm.",
    "start": "520250",
    "end": "525580"
  },
  {
    "text": "So there are a\nbunch of ways, now,",
    "start": "525580",
    "end": "527380"
  },
  {
    "text": "to grow a minimum\nweight spanning tree.",
    "start": "527380",
    "end": "530430"
  },
  {
    "text": "One way is to start\nat any vertex,",
    "start": "530430",
    "end": "534190"
  },
  {
    "text": "and then keep building\naround that vertex.",
    "start": "534190",
    "end": "537840"
  },
  {
    "text": "So you start with that\nvertex and color it black,",
    "start": "537840",
    "end": "540840"
  },
  {
    "text": "and everything else white.",
    "start": "540840",
    "end": "543080"
  },
  {
    "text": "That means that all the\ngray edges are going",
    "start": "543080",
    "end": "544930"
  },
  {
    "text": "to be connected to that vertex.",
    "start": "544930",
    "end": "546800"
  },
  {
    "text": "So pick a minimum weight.",
    "start": "546800",
    "end": "548750"
  },
  {
    "text": "Now you have a component\nwith two vertices.",
    "start": "548750",
    "end": "553060"
  },
  {
    "text": "Color it black and everything\nelse white, and in that way,",
    "start": "553060",
    "end": "555790"
  },
  {
    "text": "you keep working\non one component",
    "start": "555790",
    "end": "558441"
  },
  {
    "text": "that you're going\nto grow by always",
    "start": "558442",
    "end": "559900"
  },
  {
    "text": "coloring it one\ncolor, and everything",
    "start": "559900",
    "end": "561540"
  },
  {
    "text": "else the other color.",
    "start": "561540",
    "end": "562639"
  },
  {
    "text": "This is a method known\nas Prim's algorithm",
    "start": "562640",
    "end": "564910"
  },
  {
    "text": "for growing a minimum\nweight spanning tree.",
    "start": "564910",
    "end": "567230"
  },
  {
    "text": "Another one is to\nglobally, among all",
    "start": "567230",
    "end": "571779"
  },
  {
    "text": "the different\nconnected components,",
    "start": "571780",
    "end": "574780"
  },
  {
    "text": "find a minimum weight\nedge among them.",
    "start": "574780",
    "end": "577300"
  },
  {
    "text": "So what that means is that\nyou find the minimum weight",
    "start": "577300",
    "end": "580070"
  },
  {
    "text": "edge among all the\nconnected components,",
    "start": "580070",
    "end": "583769"
  },
  {
    "text": "and then having identified where\nthat minimum weight edge is,",
    "start": "583769",
    "end": "586310"
  },
  {
    "text": "you can color one of\nits components black,",
    "start": "586310",
    "end": "588090"
  },
  {
    "text": "and the other one\nwhite, and that",
    "start": "588090",
    "end": "589730"
  },
  {
    "text": "will have to conform\nto our procedure",
    "start": "589730",
    "end": "591850"
  },
  {
    "text": "for picking a minimum weight\nedge between different colored",
    "start": "591850",
    "end": "594720"
  },
  {
    "text": "components.",
    "start": "594720",
    "end": "595250"
  },
  {
    "text": "That's Kruskal's algorithm.",
    "start": "595250",
    "end": "597270"
  },
  {
    "text": "And finally, you can grow\nthe trees in parallel.",
    "start": "597270",
    "end": "602170"
  },
  {
    "text": "You can just start\nchoosing the minimum weight",
    "start": "602170",
    "end": "604839"
  },
  {
    "text": "edge around each\nconnected component,",
    "start": "604840",
    "end": "606850"
  },
  {
    "text": "because you can always\ntake a connected component,",
    "start": "606850",
    "end": "609209"
  },
  {
    "text": "color it one color, and\ncolor all the other edges",
    "start": "609210",
    "end": "612630"
  },
  {
    "text": "another color.",
    "start": "612630",
    "end": "614490"
  },
  {
    "text": "And so all of the edges\ntouching a given component",
    "start": "614490",
    "end": "617337"
  },
  {
    "text": "will be gray in that color, and\nyou can choose the minimum one",
    "start": "617337",
    "end": "619920"
  },
  {
    "text": "and grow that component.",
    "start": "619920",
    "end": "621272"
  },
  {
    "text": "And if they're not too\nclose to each other-- so",
    "start": "621272",
    "end": "623230"
  },
  {
    "text": "that your choice of\nedges doesn't conflict--",
    "start": "623230",
    "end": "625449"
  },
  {
    "text": "you can grow these\ntrees in parallel.",
    "start": "625450",
    "end": "627370"
  },
  {
    "text": "So I call that, jokingly,\nMyer's procedure.",
    "start": "627370",
    "end": "630830"
  },
  {
    "text": "And that is the application\nof this coloring approach",
    "start": "630830",
    "end": "634150"
  },
  {
    "text": "to finding minimum\nweight spanning trees.",
    "start": "634150",
    "end": "637440"
  },
  {
    "start": "637440",
    "end": "638176"
  }
]