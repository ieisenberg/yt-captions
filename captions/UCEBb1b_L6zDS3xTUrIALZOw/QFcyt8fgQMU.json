[
  {
    "text": " The following\ncontent is provided under a Creative\nCommons license. Your support will help MIT\nOpenCourseWare continue",
    "start": "0",
    "end": "6860"
  },
  {
    "text": "to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6860",
    "end": "13340"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13340",
    "end": "20749"
  },
  {
    "text": "VICTOR COSTAN: So I'm excited\nabout today's recitation, because if I do this\nright and you guys get it, then I can mess up every\nother recitation after it.",
    "start": "20749",
    "end": "28750"
  },
  {
    "text": "And you'll still get\nthe gist of 6.006. So all I have to do\nis get this working.",
    "start": "28750",
    "end": "34700"
  },
  {
    "text": "So most of the time\nin the real world you're probably not going to be\ncoming up with new algorithms to do something, but rather\nyou'll have some code",
    "start": "34700",
    "end": "42080"
  },
  {
    "text": "and you want to make it faster. And the first step\nin making it faster is you realize, how\ndoes it do right now?",
    "start": "42080",
    "end": "48510"
  },
  {
    "text": "How does it run, which lines\nare slow, which lines are fast, and where you can\nmake improvements. So in lecture we talked\nabout the Python Cost Model",
    "start": "48510",
    "end": "56190"
  },
  {
    "text": "which is what you use\nto look at the code and figure out how much\ntime it takes to run.",
    "start": "56190",
    "end": "61590"
  },
  {
    "text": "And we talked about\ndocument distance, which is a problem\nthat we'll use to practice our analysis skills.",
    "start": "61590",
    "end": "68180"
  },
  {
    "text": "And this entire\nrecitation is all about looking at versions\nof document distance and analyzing them.",
    "start": "68180",
    "end": "74810"
  },
  {
    "text": "So that's what we'll\ndo, look at Python code, look at Python code,\nlook at Python code. So you better have handouts,\nbecause I can't project.",
    "start": "74810",
    "end": "81320"
  },
  {
    "text": "OK, how many people remember\nthe document distance problem? You guys said you went\nto lecture, right?",
    "start": "81320",
    "end": "87345"
  },
  {
    "text": " OK, so very, very fast,\ndocument distance.",
    "start": "87345",
    "end": "93470"
  },
  {
    "text": "I have two documents.  The fox is in the hat.",
    "start": "93470",
    "end": "101780"
  },
  {
    "text": " And the fox is outside.",
    "start": "101780",
    "end": "109930"
  },
  {
    "text": " Document 1, document 2.",
    "start": "109930",
    "end": "116820"
  },
  {
    "text": "What's the first\nthing I want to do? So there are three operations\nthat Eric mentioned in lecture.",
    "start": "116820",
    "end": "121940"
  },
  {
    "text": "Operation one,\ntake each document,",
    "start": "121940",
    "end": "127410"
  },
  {
    "text": "break it up into words. Right? This is a string.",
    "start": "127410",
    "end": "132610"
  },
  {
    "text": "When I read it, then it becomes\nword one, word two, word three, word four, so on and so forth.",
    "start": "132610",
    "end": "138060"
  },
  {
    "text": "Operation two, build\ndocument vectors out of the two documents. So the documents are D1 and D2.",
    "start": "138060",
    "end": "145790"
  },
  {
    "text": " A document vector\nis basically a list",
    "start": "145790",
    "end": "150950"
  },
  {
    "text": "of the words in the documents\nwith a count of how many times each word appears\nin the document.",
    "start": "150950",
    "end": "157870"
  },
  {
    "text": "So let's build a document\nvector for document one.",
    "start": "157870",
    "end": "163112"
  },
  {
    "text": "I'm not going to\nwrite it formally, so can anyone tell me\nwhat it should look like, and I'll sort of write\nit down as a list.",
    "start": "163112",
    "end": "169110"
  },
  {
    "text": " So for all the words here,\nI want to list the words",
    "start": "169110",
    "end": "175440"
  },
  {
    "text": "and how many times they show up. Somebody, please.",
    "start": "175440",
    "end": "181376"
  },
  {
    "text": "AUDIENCE: The is in there twice? VICTOR COSTAN: OK. The, twice.",
    "start": "181376",
    "end": "187735"
  },
  {
    "text": "AUDIENCE: Fox, once. VICTOR COSTAN: One. AUDIENCE: Is, once.",
    "start": "187735",
    "end": "193340"
  },
  {
    "text": "VICTOR COSTAN: Is, one. AUDIENCE: [INAUDIBLE] in once. VICTOR COSTAN: In, one. AUDIENCE: Hat once.",
    "start": "193340",
    "end": "198991"
  },
  {
    "text": " VICTOR COSTAN: Awesome. Thank you very much.",
    "start": "198991",
    "end": "204760"
  },
  {
    "text": "Second one. Another volunteer. Yes, go for it. AUDIENCE: The, once.",
    "start": "204760",
    "end": "210231"
  },
  {
    "text": "VICTOR COSTAN: The, one. AUDIENCE: Fox, once. VICTOR COSTAN: Fox, one AUDIENCE: Is, one. VICTOR COSTAN: Is, one.",
    "start": "210231",
    "end": "216708"
  },
  {
    "text": "AUDIENCE: Outside, one. VICTOR COSTAN: Outside, one.",
    "start": "216708",
    "end": "221890"
  },
  {
    "text": "OK, so this is a\ndocument vector. Notice two small details.",
    "start": "221890",
    "end": "227190"
  },
  {
    "text": "Here, they is capitalized,\nhere it's not, and yet I bundle them together.",
    "start": "227190",
    "end": "232570"
  },
  {
    "text": "I know my grammar,\nso I put periods at the end of the\nsentences, and yet they don't show up anywhere here. So we got rid of\nthe punctuation,",
    "start": "232570",
    "end": "238800"
  },
  {
    "text": "and we made all words lowercase.  These are details,\nbut they are details",
    "start": "238800",
    "end": "244099"
  },
  {
    "text": "that you'll see in\nthe code, so if you're wondering why, this is why. So step one, read the document,\nmake it a list of words.",
    "start": "244100",
    "end": "251180"
  },
  {
    "text": "Step two, compute\nthe document vector. Step three, take the\ntwo document vectors, and compute the angle.",
    "start": "251180",
    "end": "257609"
  },
  {
    "text": "What is the angle of\ntwo document vectors? Big ugly math formula. The only thing that's relevant\nis that it takes these vectors",
    "start": "257610",
    "end": "265570"
  },
  {
    "text": "and computes an inner product. So if we look at the code for\nangle vector, or vector angle,",
    "start": "265570",
    "end": "273580"
  },
  {
    "text": "you'll see that because\nnumerator denominator lines two and three, it calls\ninner product three times",
    "start": "273580",
    "end": "280449"
  },
  {
    "text": "and then it does\nsome math with it. We don't care about the math. We assume the math is order one. We only care about\ninner product.",
    "start": "280450",
    "end": "288514"
  },
  {
    "text": "How does inner product work? Can anyone help me compute the\ninner product for these guys? ",
    "start": "288514",
    "end": "296960"
  },
  {
    "text": "Yes? AUDIENCE: It's like\nthe dot product? VICTOR COSTAN: OK. AUDIENCE: So, if we take the\nvectors and you multiply them,",
    "start": "296960",
    "end": "303445"
  },
  {
    "text": "like, you're adding to\nthe components, right? Because they're so thick-- VICTOR COSTAN: OK, this\nis too complicated, then.",
    "start": "303445",
    "end": "310482"
  },
  {
    "text": "I'm seriously\ndepressed, so give me some clear instructions\nstep by step.",
    "start": "310482",
    "end": "315600"
  },
  {
    "text": "AUDIENCE: Like,\nI know you divide by the length of\neach of the vectors-- VICTOR COSTAN: Let's\nnot worry about that. I have these vectors, and\nI want an inner product.",
    "start": "315600",
    "end": "322420"
  },
  {
    "text": "I don't care about the angle,\njust the inner product. AUDIENCE: OK, well do 2\ntimes 1 for the right.",
    "start": "322420",
    "end": "327750"
  },
  {
    "text": "VICTOR COSTAN: OK. So I take the here,\nshows up twice. I take the here, shows up once. 2 times 1, right?",
    "start": "327750",
    "end": "333970"
  },
  {
    "text": "AUDIENCE: Mhm. VICTOR COSTAN: OK. And then? AUDIENCE: I would\ndo the same for fox. VICTOR COSTAN: OK, fox shows up\nhere once, shows up here once,",
    "start": "333970",
    "end": "341510"
  },
  {
    "text": "so what I do? AUDIENCE: 1 times 1. VICTOR COSTAN: OK.",
    "start": "341510",
    "end": "347380"
  },
  {
    "text": "AUDIENCE: And do\nthe same for is. VICTOR COSTAN: OK. AUDIENCE: And in should be 0.",
    "start": "347380",
    "end": "353400"
  },
  {
    "text": "VICTOR COSTAN: OK. AUDIENCE: [INAUDIBLE] in. VICTOR COSTAN: OK. AUDIENCE: And then\noutside would also be 0,",
    "start": "353400",
    "end": "358820"
  },
  {
    "text": "and hat would also be 0. VICTOR COSTAN: OK. So it turns out you don't\nhave to go through both lists.",
    "start": "358820",
    "end": "364020"
  },
  {
    "text": "It's sufficient to go\nthrough one of the vectors and look up the words\nin the other vector. Because if the words don't\nshow up in any of the vectors,",
    "start": "364020",
    "end": "370710"
  },
  {
    "text": "their contribution\nis going to be 0. So my algorithm is go\nthrough each of the elements",
    "start": "370710",
    "end": "376670"
  },
  {
    "text": "here, look up each of the words\nthere, look up at the word here. And if there's a\nword here and here,",
    "start": "376670",
    "end": "383500"
  },
  {
    "text": "take out the number of times\nit shows up in each document, multiply them, and\nthen add everything up.",
    "start": "383500",
    "end": "391470"
  },
  {
    "text": "So this is inner product. Everything else is good if\nyou're writing a search engine or if you're using the\nscenario application,",
    "start": "391470",
    "end": "398020"
  },
  {
    "text": "but we're not really\nconcerned with it. OK, so now we have\nthe three steps, read the document,\nbreak it up into words,",
    "start": "398020",
    "end": "405630"
  },
  {
    "text": "compute document vectors,\ncompute our inner product. So this is what we want to do. And document distance 1 does\nit in a painfully slow way,",
    "start": "405630",
    "end": "413650"
  },
  {
    "text": "and we're probably not going to\ncover everything in recitation. But if you go all the way\nup to document distance 1,",
    "start": "413650",
    "end": "419460"
  },
  {
    "text": "that's really, really fast. It's 1,000 times faster. So this is our job for the day.",
    "start": "419460",
    "end": "426892"
  },
  {
    "text": "Let's look at the code. Did anyone look at\nthe code beforehand? Nope.",
    "start": "426892",
    "end": "432400"
  },
  {
    "text": "OK, so when I look at\na big piece of code, I like to look at\nit from top down.",
    "start": "432400",
    "end": "439820"
  },
  {
    "text": "So that means I start\nto the main function, I see who is it calling,\nI see what everything is trying to do, and then\nI go into the sub functions",
    "start": "439820",
    "end": "447720"
  },
  {
    "text": "and recurves and basically\ndo the same thing. So I build a tree of\nwho's calling what, and that helps me figure\nout what's going on.",
    "start": "447720",
    "end": "454720"
  },
  {
    "text": " So let's start with main. ",
    "start": "454720",
    "end": "464230"
  },
  {
    "text": "And let's look at main. Lines 1 through 6\nlook at the arguments. We don't really care.",
    "start": "464230",
    "end": "471040"
  },
  {
    "text": "Line 7 and 8 call word\nfrequencies for file. ",
    "start": "471040",
    "end": "481520"
  },
  {
    "text": "I am abbreviating liberally. And then line 9\ncalls vector angle.",
    "start": "481520",
    "end": "491949"
  },
  {
    "text": "So line 7 and 8 read\nthe two documents,",
    "start": "491950",
    "end": "497210"
  },
  {
    "text": "do steps one and two, and\nthen 9 does step three. ",
    "start": "497210",
    "end": "511009"
  },
  {
    "text": "OK. Word frequencies for files. So the point of this\nis to read a file and to produce a word\ndocument vector out of it.",
    "start": "511010",
    "end": "521099"
  },
  {
    "text": "And it does it in three steps. Reads the file, line two.",
    "start": "521100",
    "end": "528839"
  },
  {
    "text": "Breaks up the file into\nwords, so operation one, this is line 3, and then line\n4, it takes up the list of words",
    "start": "528840",
    "end": "536170"
  },
  {
    "text": "and computes a document\nvector out of it. I don't care about\nreading files because I'll assume this is\nsomehow done for me.",
    "start": "536170",
    "end": "543420"
  },
  {
    "text": "We care about the algorithms. So as far as I'm\nconcerned, this function is calling get words\nfrom line list.",
    "start": "543420",
    "end": "548700"
  },
  {
    "text": " Get words from line list,\nand count frequency.",
    "start": "548700",
    "end": "556695"
  },
  {
    "start": "556695",
    "end": "566100"
  },
  {
    "text": "And if we skip all the\nway to vector angle-- we already talked a little\nbit about how all it does",
    "start": "566100",
    "end": "572440"
  },
  {
    "text": "is it calls inner\nproduct three times and then in does some\nfancy math of it. ",
    "start": "572440",
    "end": "584510"
  },
  {
    "text": "So this is how the code\nlooks like big picture. ",
    "start": "584510",
    "end": "596370"
  },
  {
    "text": "OK, so to figure out the\nrunning time for main, we need to figure out the\nrunning time for these two functions and add\nthem up, right?",
    "start": "596370",
    "end": "603314"
  },
  {
    "text": "To figure out the\nrunning time for this, we need to figure\nout the running time for these functions and\nadd them up, so on and so forth.",
    "start": "603314",
    "end": "609710"
  },
  {
    "text": "So as you go through each of\nthe document distance versions, you want keep a scorecard of the\nimplementation that shows you",
    "start": "609710",
    "end": "617214"
  },
  {
    "text": "what the running\ntime is, and this helps you follow\nwhat was improved in each implementation. ",
    "start": "617214",
    "end": "625829"
  },
  {
    "text": "So let's look at to get\nwords from line lists. What does it seem\nlike its doing?",
    "start": "625830",
    "end": "631940"
  },
  {
    "text": "Without reading the\nget words from string, can anyone tell me what\nit seems like it's doing?",
    "start": "631940",
    "end": "638540"
  },
  {
    "text": "If you just read\nlines 1 through 6. ",
    "start": "638540",
    "end": "643896"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]\nthrough the list. VICTOR COSTAN: OK. So it's getting an input list.",
    "start": "643896",
    "end": "649940"
  },
  {
    "text": "And if you look at word\nfrequencies for files at line 2, it names\na variable line list.",
    "start": "649940",
    "end": "656430"
  },
  {
    "text": "So it seems like\nwhat's happening is, reads a file into\na list of lines.",
    "start": "656430",
    "end": "662589"
  },
  {
    "text": "And then that list of lines goes\nto get words from line lists. So this is L in get\nwords from line lists.",
    "start": "662590",
    "end": "672590"
  },
  {
    "text": "So it takes a list of lines\nwhich is the entire document, and then? ",
    "start": "672590",
    "end": "680900"
  },
  {
    "text": "AUDIENCE: Basically it\nremoves the new lines. It sticks it into one giant list\nrather than a list of lines,",
    "start": "680900",
    "end": "690178"
  },
  {
    "text": "is that right? VICTOR COSTAN: Almost, so you\nseem to get words from string. Maybe we need to go\nthrough the function,",
    "start": "690178",
    "end": "695798"
  },
  {
    "text": "but do see the get words\nfrom string function name? So I will assume that\nit does something",
    "start": "695798",
    "end": "702330"
  },
  {
    "text": "with each of the words. And if the overall goal\nis to get a list of words,",
    "start": "702330",
    "end": "709090"
  },
  {
    "text": "then I would assume that what\nthat does is it takes a line and it breaks it up into words.",
    "start": "709090",
    "end": "714200"
  },
  {
    "text": "Because this way, if\nyou take up each line and break it up into\nwords, then when we put all the words\ntogether we get the words",
    "start": "714200",
    "end": "719970"
  },
  {
    "text": "that make up the document.  Do people follow? Any questions? I like that people are nodding,\nby the way, keep doing that.",
    "start": "719970",
    "end": "727369"
  },
  {
    "text": "That helps me go\nat the right speed. If you're not nodding, I'll\nkeep explaining the same thing over and over again.",
    "start": "727369",
    "end": "732710"
  },
  {
    "start": "732710",
    "end": "738870"
  },
  {
    "text": "OK, so get words from string. Get words from string takes up\na single line, that's a string,",
    "start": "738870",
    "end": "744590"
  },
  {
    "text": "and produces a list of words. And we saw in the\nexample there that it",
    "start": "744590",
    "end": "749920"
  },
  {
    "text": "has to take care of a few\ndetails such as making all the letters\nlowercase and ignoring",
    "start": "749920",
    "end": "755519"
  },
  {
    "text": "punctuation and skipping spaces. So let's look at this code and\nfigure out its running time.",
    "start": "755520",
    "end": "762210"
  },
  {
    "text": "And the way we're going\nto do that is we're going to look at\neach line, and we're going to see what's\nthe cost for that line",
    "start": "762210",
    "end": "769960"
  },
  {
    "text": "and how many times does it run. And once we have\nthose two numbers, we multiply them together\nand we see how much time",
    "start": "769960",
    "end": "776700"
  },
  {
    "text": "does the program spend\non that line in total. So I'm going to write\ndown line numbers here.",
    "start": "776700",
    "end": "784030"
  },
  {
    "text": "9, 10, 11, 12, 13, 14, 15.",
    "start": "784030",
    "end": "789110"
  },
  {
    "text": "All the way to 23. ",
    "start": "789110",
    "end": "798180"
  },
  {
    "text": "Too low. ",
    "start": "798180",
    "end": "806930"
  },
  {
    "text": "20, 21, 22, 23. ",
    "start": "806930",
    "end": "813910"
  },
  {
    "text": "OK, so let's start\nwith something easy, lines 9 and 10 How many\ntimes are they run?",
    "start": "813910",
    "end": "820649"
  },
  {
    "text": "AUDIENCE: Once. VICTOR COSTAN: OK. AUDIENCE: [INAUDIBLE]\nOnce in this method?",
    "start": "820650",
    "end": "827739"
  },
  {
    "text": "VICTOR COSTAN: Yep. So I'm only looking\nat this method. So assuming that the method\ngets one line, and the line has,",
    "start": "827739",
    "end": "837500"
  },
  {
    "text": "I don't know, say, one\nline in characters,",
    "start": "837500",
    "end": "847380"
  },
  {
    "text": "and we need another\nvariable which we're going to figure out later. But for now, one\nline in characters.",
    "start": "847380",
    "end": "854040"
  },
  {
    "text": "So how many times\ndoes line 9 run? AUDIENCE: [INAUDIBLE]",
    "start": "854040",
    "end": "859950"
  },
  {
    "text": "VICTOR COSTAN: OK. Runs once. How about line 10?",
    "start": "859950",
    "end": "865527"
  },
  {
    "text": "AUDIENCE: Once. AUDIENCE: Once. VICTOR COSTAN: OK. What do they do? Create new lists and\nassign them to variables.",
    "start": "865528",
    "end": "872360"
  },
  {
    "text": "What's the cause for that? AUDIENCE: Constant [INAUDIBLE] VICTOR COSTAN:\nConstant, excellent.",
    "start": "872360",
    "end": "878420"
  },
  {
    "text": "So I'll be skipping\nthe order of so that I don't have to\nwrite it 23 times. So 1, 1.",
    "start": "878420",
    "end": "885290"
  },
  {
    "text": "OK, line 11. It's iterates over all\nthe characters in a line.",
    "start": "885290",
    "end": "891600"
  },
  {
    "text": "So how many times\nis it going to run? AUDIENCE: Like, the line? VICTOR COSTAN: OK, which is?",
    "start": "891600",
    "end": "897526"
  },
  {
    "text": "AUDIENCE: Line end characters. VICTOR COSTAN: Awesome. And just the fact of\niterating takes constant time.",
    "start": "897526",
    "end": "907290"
  },
  {
    "text": "I'm not sure we covered that. So for each character, test if\nit's an alphanumeric character.",
    "start": "907290",
    "end": "914519"
  },
  {
    "text": "Does anyone know what\nalphanumeric means? AUDIENCE: It's a\nletter and a number. VICTOR COSTAN: OK, so fancy\nword for letter or number,",
    "start": "914520",
    "end": "921300"
  },
  {
    "text": "A through Z, 0 through 9. So how much time\ndoes it take to test if a character is alphanumeric?",
    "start": "921300",
    "end": "929200"
  },
  {
    "text": "Guesses? AUDIENCE: Constant. VICTOR COSTAN: OK,\nso constant time.",
    "start": "929200",
    "end": "934300"
  },
  {
    "text": "You compare it to the\nrange A, Z and 0, 9. How many times am I doing it? AUDIENCE: [INAUDIBLE]",
    "start": "934300",
    "end": "939984"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] VICTOR COSTAN:\nThank you guys, this is going much faster\nthan the last recitation.",
    "start": "939984",
    "end": "945649"
  },
  {
    "text": "You guys are active, I like it. So, now for line 13. That only gets executed\nwhen the character",
    "start": "945650",
    "end": "952550"
  },
  {
    "text": "is an alphanumeric character. So we're going to have\nto make some assumptions about the document. And to make my\nlife easier, we're",
    "start": "952550",
    "end": "960400"
  },
  {
    "text": "going to make the\nfollowing assumption. If this is a natural\nlanguage like, say, English,",
    "start": "960400",
    "end": "965576"
  },
  {
    "text": "words are going to be\na constant size, right? How many 500-character\nwords do you see in English?",
    "start": "965576",
    "end": "970680"
  },
  {
    "text": "So let's say 5 to 10\ncharacters per word. And since the\ndifference is so small,",
    "start": "970680",
    "end": "977170"
  },
  {
    "text": "I'm going to say all the\nwords have the same size W. And if you want\nto be more formal, you can replace word\nlength with average length,",
    "start": "977170",
    "end": "984800"
  },
  {
    "text": "and the math works out. So each line has\na number of words,",
    "start": "984800",
    "end": "991330"
  },
  {
    "text": "and the words are separated\nby exactly one space, and the word has W characters.",
    "start": "991330",
    "end": "997130"
  },
  {
    "text": "So how many words do\nI have, by the way? AUDIENCE: N divided by W.",
    "start": "997130",
    "end": "1004330"
  },
  {
    "text": "VICTOR COSTAN: OK, good. Someone's paying\nclose attention. N divided by W plus 1.",
    "start": "1004330",
    "end": "1010959"
  },
  {
    "text": "And the reason\nthat is, is a line would look like this, word,\nspace, word, space, word,",
    "start": "1010960",
    "end": "1016340"
  },
  {
    "text": "space. So W, characters, one space,\nW, characters, one space, W, characters, one space. That's why you have\nW plus 1 there.",
    "start": "1016340",
    "end": "1024293"
  },
  {
    "text": "When we look at\nasymptotics it turns out that it doesn't really matter\nbecause W's a constant, W plus 1 is a constant,\nso order and words.",
    "start": "1024294",
    "end": "1033800"
  },
  {
    "text": "But for now, let's keep track of\nW's to seem a bit more formal. So line 13.",
    "start": "1033800",
    "end": "1039680"
  },
  {
    "text": "How many times is\nit going to run? ",
    "start": "1039680",
    "end": "1049374"
  },
  {
    "text": "AUDIENCE: W times\n10 over W plus one. VICTOR COSTAN: Excellent. ",
    "start": "1049374",
    "end": "1058345"
  },
  {
    "text": "Let me pull them out. ",
    "start": "1058345",
    "end": "1063880"
  },
  {
    "text": "How much time does it\ntake to run [INAUDIBLE]. ",
    "start": "1063880",
    "end": "1069872"
  },
  {
    "text": "AUDIENCE: Constant? VICTOR COSTAN:\nConstant time, append, covered in lecture,\nconstant time. So this is a bit tricky\nbecause if you have an array",
    "start": "1069872",
    "end": "1077679"
  },
  {
    "text": "implementation that's naive,\nit's not constant time. But Python does some magic\ncalled table doubling, which",
    "start": "1077680",
    "end": "1083320"
  },
  {
    "text": "we'll cover later in the course. And this is why you can say\nthat append takes constant time.",
    "start": "1083320",
    "end": "1091470"
  },
  {
    "text": "OK. Else, so if the character\nis not alphanumeric,",
    "start": "1091470",
    "end": "1096559"
  },
  {
    "text": "than what's going on here? Can anyone see what's\nhappening there?",
    "start": "1096560",
    "end": "1103428"
  },
  {
    "text": "AUDIENCE: If its\nlike, [INAUDIBLE]. VICTOR COSTAN: OK, so\nlet's say if it's a space.",
    "start": "1103428",
    "end": "1109278"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]  VICTOR COSTAN: Yeah,\nthis the harder part.",
    "start": "1109278",
    "end": "1115620"
  },
  {
    "text": "I think you need to\nrun this on an example to figure out what's going on. I have to run it on\nan example in my head.",
    "start": "1115620",
    "end": "1122309"
  },
  {
    "text": "So let's take this small example\nhere, the fox is outside. And this is a\nsingle line, right?",
    "start": "1122310",
    "end": "1128610"
  },
  {
    "text": "Nice and handy. So this can be the input\nfor get words from string. And let's see what happens.",
    "start": "1128610",
    "end": "1134090"
  },
  {
    "text": "So first I start with word list\nwhich is empty list, character,",
    "start": "1134090",
    "end": "1141600"
  },
  {
    "text": "lists, empty list.",
    "start": "1141600",
    "end": "1148710"
  },
  {
    "text": "Take the first character,\nit's alphanumeric, gets appended here, the second\ncharacter, alphanumeric,",
    "start": "1148710",
    "end": "1154769"
  },
  {
    "text": "appended here, third\ncharacter, alphanumeric, gets appended here. Fourth character,\nnot alphanumeric,",
    "start": "1154770",
    "end": "1160980"
  },
  {
    "text": "so I get to run\nlines 15 through 18. OK, I did the easy part.",
    "start": "1160980",
    "end": "1166920"
  },
  {
    "text": "Someone walk me\nthrough the hard part. What happens in\nlines 15 through 18?",
    "start": "1166920",
    "end": "1173600"
  },
  {
    "text": "Yes. AUDIENCE: First, it takes\nthat list and joins it into a string. [INAUDIBLE]",
    "start": "1173600",
    "end": "1180790"
  },
  {
    "text": "VICTOR COSTAN: OK, so this\nis a list of characters. And join takes the list and\nmakes a string out of it.",
    "start": "1180790",
    "end": "1187840"
  },
  {
    "text": "So I'll have the string the. OK, excellent.",
    "start": "1187840",
    "end": "1193390"
  },
  {
    "text": "AUDIENCE: And it converts\nit all to lower case. VICTOR COSTAN: OK. ",
    "start": "1193390",
    "end": "1200207"
  },
  {
    "text": "AUDIENCE: End up [INAUDIBLE]\nthat to the word list. VICTOR COSTAN: The world\nlist is up here, right?",
    "start": "1200208",
    "end": "1205620"
  },
  {
    "text": "So this is going to have the. AUDIENCE: And then it clears\nthe character list, [INAUDIBLE].",
    "start": "1205620",
    "end": "1213836"
  },
  {
    "start": "1213836",
    "end": "1218855"
  },
  {
    "text": "VICTOR COSTAN: OK.  So now as I go through the\nnext word, I have F-O-X.",
    "start": "1218855",
    "end": "1231680"
  },
  {
    "text": "Then this becomes the word,\nand it gets added here. ",
    "start": "1231680",
    "end": "1240680"
  },
  {
    "text": "So on and so forth\nfor everything. Do people see how\nthis method works now?",
    "start": "1240680",
    "end": "1246840"
  },
  {
    "text": "I'm not getting that\nmany nods, so questions. If I don't get nods,\nI'll stop and you guys",
    "start": "1246840",
    "end": "1252440"
  },
  {
    "text": "have to ask what\nyou're confused about. AUDIENCE: I think it's a\nlittle tricky because instead of saying if it's not an\nalphanumeric character,",
    "start": "1252440",
    "end": "1260052"
  },
  {
    "text": "it's just like well, if\nthe length of the list is greater than 0, which\nthrew me off initially, but then I realized it\nwas just, like, omission.",
    "start": "1260052",
    "end": "1267610"
  },
  {
    "text": "VICTOR COSTAN: OK, so\nwhy does it do this? What is the point of the\nlength of the character list? AUDIENCE: So that\nthere are two spaces.",
    "start": "1267610",
    "end": "1275600"
  },
  {
    "text": "VICTOR COSTAN: Excellent. So here I was nice and I had\none space, one space, one space.",
    "start": "1275600",
    "end": "1283269"
  },
  {
    "text": "But if I'm sloppy when I'm\ntyping and I have two spaces here, then suppose this is\nspace, space-- kind a small,",
    "start": "1283270",
    "end": "1291950"
  },
  {
    "text": "but pretend. Go with me here. So we got here.",
    "start": "1291950",
    "end": "1297020"
  },
  {
    "text": "We got the fox is.  And then this list is\nempty because line 18 just",
    "start": "1297020",
    "end": "1305620"
  },
  {
    "text": "made it empty. If I run the code the\nlines 15 through 18, it's going to add an\nempty word up here.",
    "start": "1305620",
    "end": "1313930"
  },
  {
    "text": "And empty words\naren't very useful. You'll see how many\ntimes the documents have",
    "start": "1313930",
    "end": "1319360"
  },
  {
    "text": "too many spaces in them, so\nthat doesn't really help. AUDIENCE: I mean, isn't\nthat not an issue, because you call if C is\nL1 before you actually",
    "start": "1319360",
    "end": "1327470"
  },
  {
    "text": "get to that. So you'd run through it\nagain, but you would still just skip over that.",
    "start": "1327470",
    "end": "1334950"
  },
  {
    "text": "That would fail, I\nmean it would not do anything for that equation. VICTOR COSTAN: So first space.",
    "start": "1334950",
    "end": "1341350"
  },
  {
    "text": "C as L now fails. I run lines 15 through 18. AUDIENCE: Yep. VICTOR COSTAN: Right? I have is here.",
    "start": "1341350",
    "end": "1347170"
  },
  {
    "text": "This becomes empty. AUDIENCE: Yep. AUDIENCE: Second space,\nC as L now fails again.",
    "start": "1347170",
    "end": "1353557"
  },
  {
    "text": "AUDIENCE: Yep. VICTOR COSTAN: And if I\nwouldn't have the length check, it would run lines\n15 through 18 again.",
    "start": "1353557",
    "end": "1360080"
  },
  {
    "text": "AUDIENCE: Oh, OK. [INAUDIBLE] VICTOR COSTAN: OK, so this is\nwhat it's trying to prevent.",
    "start": "1360080",
    "end": "1366950"
  },
  {
    "text": "So you can see that this code\nlooks complicated, right? It's trying to do a lot of\nthings, it's complicated, it's hard to analyze.",
    "start": "1366950",
    "end": "1373809"
  },
  {
    "text": "Oh, well, let's go with it. Let's try to finish\nit up quickly.",
    "start": "1373810",
    "end": "1379590"
  },
  {
    "text": "So now that we know\nwhat it does, let's try to figure out how\nmany times each line runs",
    "start": "1379590",
    "end": "1384960"
  },
  {
    "text": "and what's the cost? Yes. AUDIENCE: So I think the\ntotal cost is N times 1",
    "start": "1384960",
    "end": "1392830"
  },
  {
    "text": "minus W over W plus 1. VICTOR COSTAN: Wait, so here?",
    "start": "1392830",
    "end": "1398243"
  },
  {
    "text": "AUDIENCE: Yeah. VICTOR COSTAN: OK, so you're\nsaying N times 1 minus.",
    "start": "1398243",
    "end": "1405031"
  },
  {
    "text": "OK.  Why do you say that?",
    "start": "1405031",
    "end": "1411790"
  },
  {
    "text": "I like it, but why? OK, it's because it's everything\nthat is in the character, and the line above\nit was characters--",
    "start": "1411790",
    "end": "1418471"
  },
  {
    "text": "VICTOR COSTAN: OK. AUDIENCE: --all\nalphanumeric, [INAUDIBLE] VICTOR COSTAN: So\nbasically spaces, right? If we have word, space,\nword, space, word, space,",
    "start": "1418471",
    "end": "1424159"
  },
  {
    "text": "this happens for all the spaces. Cool. So this is good. I'm going to make\nit a bit simpler.",
    "start": "1424160",
    "end": "1430425"
  },
  {
    "text": " Same thing, it's just that it's\nslightly less intimidating.",
    "start": "1430425",
    "end": "1436975"
  },
  {
    "text": "AUDIENCE: Oh, yeah. VICTOR COSTAN: Cool, thank you. Very brave, come up first.",
    "start": "1436975",
    "end": "1443000"
  },
  {
    "text": "What's the running\ntime for line 14? So, cost for running it once. ",
    "start": "1443000",
    "end": "1450320"
  },
  {
    "text": "AUDIENCE: Constant. Excellent. VICTOR COSTAN: I like you guys. Nice.",
    "start": "1450320",
    "end": "1455780"
  },
  {
    "text": "Line 15, how much\ntime does it to take to take characters and\nput them into a list?",
    "start": "1455780",
    "end": "1461880"
  },
  {
    "text": "AUDIENCE: N? VICTOR COSTAN: N-- AUDIENCE: [INAUDIBLE] VICTOR COSTAN: --where N is\nthe size of the list, right?",
    "start": "1461880",
    "end": "1467340"
  },
  {
    "text": "AUDIENCE: Yeah. VICTOR COSTAN: OK. So what's the size\nof the list now? AUDIENCE: [INAUDIBLE]",
    "start": "1467340",
    "end": "1473153"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] VICTOR COSTAN: Yep. OK, so when you're using\nmore than one letter,",
    "start": "1473154",
    "end": "1479342"
  },
  {
    "text": "the problem is you have to\npay attention to which one you're using. Because when we\nteach algorithms, we say oh, this is N, this is\nN squared, so on and so forth.",
    "start": "1479342",
    "end": "1486909"
  },
  {
    "text": "You have to replace it\nto the right letter. And I get confused about\nthis all the time, so-- AUDIENCE: [INAUDIBLE] VICTOR COSTAN: --a\nserious problem.",
    "start": "1486910",
    "end": "1492630"
  },
  {
    "text": "AUDIENCE: --columns? What are the two columns? VICTOR COSTAN: So this is the\ncost of running a line once,",
    "start": "1492630",
    "end": "1499269"
  },
  {
    "text": "and this is how\nmany times it's run. AUDIENCE: Oh, OK. VICTOR COSTAN: Thanks\nfor the question. I should have said\nthat in the beginning. Thank you.",
    "start": "1499270",
    "end": "1504760"
  },
  {
    "text": " OK, let's make this\na little bit faster and notice that\nlines 15 through 18",
    "start": "1504760",
    "end": "1512490"
  },
  {
    "text": "all run the same\nnumber of times, right? They're in the if, and\nthere's nothing else that's changes the\ncontrol flow there.",
    "start": "1512490",
    "end": "1519669"
  },
  {
    "text": "So lines 15 through 18 are\nO and divided by W plus 1.",
    "start": "1519670",
    "end": "1528320"
  },
  {
    "text": "All right, line 16. Take a word. So take a string and\nmake another string",
    "start": "1528320",
    "end": "1533600"
  },
  {
    "text": "where each character is\nthe lowercase version. AUDIENCE: [INAUDIBLE] VICTOR COSTAN: OK, cool.",
    "start": "1533600",
    "end": "1539610"
  },
  {
    "text": "Why W, intuitively? AUDIENCE: Because [INAUDIBLE]\nhas to check to make sure",
    "start": "1539610",
    "end": "1544883"
  },
  {
    "text": "[INAUDIBLE] VICTOR COSTAN: Yep. AUDIENCE: [INAUDIBLE] VICTOR COSTAN: Yeah, so if\nyou have a 10,000 character",
    "start": "1544884",
    "end": "1550999"
  },
  {
    "text": "string you, have to go\nthrough 10,000 characters. Very good. Append 917.",
    "start": "1550999",
    "end": "1558032"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] VICTOR COSTAN: Sweet. And line 18, we said the\ncharacter list of length list.",
    "start": "1558032",
    "end": "1566565"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] VICTOR COSTAN: [INAUDIBLE]\nOK, how many times",
    "start": "1566565",
    "end": "1573170"
  },
  {
    "text": "do lines 19 through 23 run?",
    "start": "1573170",
    "end": "1578505"
  },
  {
    "text": "AUDIENCE: Once. VICTOR COSTAN: At most, once. ",
    "start": "1578505",
    "end": "1584540"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] VICTOR COSTAN: Can anyone figure\nout what's the point of them? ",
    "start": "1584540",
    "end": "1593099"
  },
  {
    "text": "AUDIENCE: Catch any\ntrailing [INAUDIBLE] VICTOR COSTAN: Good. If you ended on the\nlast letter of a word,",
    "start": "1593099",
    "end": "1600404"
  },
  {
    "text": "you want to make sure\nyou catch that word. VICTOR COSTAN: All right. AUDIENCE: [INAUDIBLE] VICTOR COSTAN: Very good. So I find it here.",
    "start": "1600404",
    "end": "1606029"
  },
  {
    "text": "Then after I'm done\nwith the loop at line 19 what the word list\nwould have, the fox is.",
    "start": "1606030",
    "end": "1612895"
  },
  {
    "text": "And then the\ncharacter list would have the characters for outside. If I return the word list,\nwoops, I just missed a word.",
    "start": "1612895",
    "end": "1618970"
  },
  {
    "text": "So lines 20 through 22 are a\ncopy of lines 15 through 17,",
    "start": "1618970",
    "end": "1627429"
  },
  {
    "text": "and they take care\nof the last word. So line 19 is an if, and it\ntakes the length of a list",
    "start": "1627430",
    "end": "1634720"
  },
  {
    "text": "and compares it to the number. What's the cost of that? AUDIENCE: Constant.",
    "start": "1634720",
    "end": "1640200"
  },
  {
    "text": "VICTOR COSTAN: OK, very good. Checking list length in\nPython is constant time. We did that in lecture.",
    "start": "1640200",
    "end": "1647340"
  },
  {
    "text": "How about lines 20 through 22?  I just gave it\naway, guys, come on.",
    "start": "1647340",
    "end": "1653720"
  },
  {
    "text": "Someone-- AUDIENCE: The same\nas 15 through 17. VICTOR COSTAN: OK,\nsame as 15 through 17.",
    "start": "1653720",
    "end": "1658890"
  },
  {
    "text": "W, W, 1. Line 23, return constant time.",
    "start": "1658890",
    "end": "1666480"
  },
  {
    "text": "OK, so now we know how much\nit takes to run a line once, how many times each line runs.",
    "start": "1666480",
    "end": "1672640"
  },
  {
    "text": "So we're going to do a\ndot product of these guys. See, dot products are useful.",
    "start": "1672640",
    "end": "1677920"
  },
  {
    "text": "And if we do a dot\nproduct of these guys, we're going to get the total\nrunning time for the function.",
    "start": "1677920",
    "end": "1683180"
  },
  {
    "text": "So let's compute\nthe partial terms. AUDIENCE: [INAUDIBLE] VICTOR COSTAN: I'm not\ngoing to write them down. Let's just go through them\nand figure out what they are.",
    "start": "1683180",
    "end": "1689730"
  },
  {
    "text": "So you guys say them. AUDIENCE: 1, 1, N,\nN, weird equation--",
    "start": "1689730",
    "end": "1697964"
  },
  {
    "text": "VICTOR COSTAN: OK,\nweird equation, what was the important part? [INTERPOSING VOICES] VICTOR COSTAN: Yeah,\nthe important part.",
    "start": "1697964",
    "end": "1703550"
  },
  {
    "text": "The important part is N, right? This is some constant\ntimes N, so N. AUDIENCE: N, N,\nN, N, N, N, 1, 1.",
    "start": "1703550",
    "end": "1715670"
  },
  {
    "text": "VICTOR COSTAN: Pay attention. AUDIENCE: 1, N. VICTOR COSTAN: Pay attention.",
    "start": "1715670",
    "end": "1721100"
  },
  {
    "text": "It's not N, it's not 1. AUDIENCE: [INAUDIBLE] VICTOR COSTAN: OK,\nactually is 1 I guess, if you think that\nW is a constant.",
    "start": "1721100",
    "end": "1726740"
  },
  {
    "text": "Sorry. AUDIENCE: You're testing us. VICTOR COSTAN: OK. 1, 1.",
    "start": "1726740",
    "end": "1732331"
  },
  {
    "text": "VICTOR COSTAN: So I heard\ntwo numbers, N and 1, right? So this is 0 of N plus\n1, which is order N,",
    "start": "1732331",
    "end": "1739769"
  },
  {
    "text": "because as N goes to infinity,\n1 becomes really tiny. OK, so this is how you\nanalyze a function.",
    "start": "1739770",
    "end": "1747660"
  },
  {
    "text": "Big functions are horribly\npainful to analyze because you have to look at each line and\ndo this kind of reasoning.",
    "start": "1747660",
    "end": "1754760"
  },
  {
    "text": "And it's not even a top\nlevel function here, so I don't even get to\nwrite anything here yet. So get words from string\ntakes order and time",
    "start": "1754760",
    "end": "1762490"
  },
  {
    "text": "where N is the length of a line. Let's look at get\nwords from line list.",
    "start": "1762490",
    "end": "1768100"
  },
  {
    "text": "AUDIENCE: I have a question. VICTOR COSTAN: Yes. AUDIENCE: So [INAUDIBLE]\nis W characters long?",
    "start": "1768100",
    "end": "1773544"
  },
  {
    "text": "Like, does it matter\nif the [INAUDIBLE] VICTOR COSTAN: Does it matter--",
    "start": "1773545",
    "end": "1778990"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] make\nthat assumption of that? VICTOR COSTAN: So that I can\nreason for lines 15 and 16.",
    "start": "1778990",
    "end": "1785760"
  },
  {
    "text": "I can reason through them easily\nif I have a content length. It turns out that if you\nhave an average length,",
    "start": "1785760",
    "end": "1792410"
  },
  {
    "text": "the results are\ngoing to be the same. Like overall, if you look at the\nrunning time as a sum of what's",
    "start": "1792410",
    "end": "1803110"
  },
  {
    "text": "the running time for converting\nall the words to lowercase and then appending\nthem to the list. The sum of those is\nstill going to be n N,",
    "start": "1803110",
    "end": "1810140"
  },
  {
    "text": "but that takes a bit more\ntime to reason through so I took a shortcut. ",
    "start": "1810140",
    "end": "1817201"
  },
  {
    "text": "Are you a math\nmajor, by the way? You're very rigorous. OK.",
    "start": "1817202",
    "end": "1822450"
  },
  {
    "text": "So this is good, it's\nalways good to try to keep this in the\nback of your head to make sure you\ndon't fall for a trap.",
    "start": "1822450",
    "end": "1831260"
  },
  {
    "text": "So get words from\nstring order N, and we're trying to figure\nout get words from line list. Any more questions\nbefore I do that?",
    "start": "1831260",
    "end": "1839090"
  },
  {
    "text": "Or does anyone want\nto tell me I'm wrong? OK, good.",
    "start": "1839090",
    "end": "1844610"
  },
  {
    "text": "So get words from line list. Lines 2 through 6.",
    "start": "1844610",
    "end": "1850889"
  },
  {
    "text": "2 3, 4, 5, 6.  Line 2.",
    "start": "1850890",
    "end": "1858033"
  },
  {
    "text": "AUDIENCE: 1. VICTOR COSTAN: OK, cost 1,\nhow many times does it run? AUDIENCE: Once.",
    "start": "1858034",
    "end": "1863476"
  },
  {
    "text": "VICTOR COSTAN: Cool. Line 3. We need a new number, right?",
    "start": "1863476",
    "end": "1869170"
  },
  {
    "text": "We need the number of\nlines in a document. Let's say we have Z lines. ",
    "start": "1869170",
    "end": "1879010"
  },
  {
    "text": "So line 3 runs Z times,\nand 4 and 5 are in a loop",
    "start": "1879010",
    "end": "1885710"
  },
  {
    "text": "so they also run Z times\nWhat's the cost for line 4? ",
    "start": "1885710",
    "end": "1893524"
  },
  {
    "text": "AUDIENCE: 1. VICTOR COSTAN: Excellent. ",
    "start": "1893524",
    "end": "1898870"
  },
  {
    "text": "What's the cost for line 3? AUDIENCE: 1. VICTOR COSTAN: 1.",
    "start": "1898870",
    "end": "1904950"
  },
  {
    "text": "And what is the cost for line 5? ",
    "start": "1904950",
    "end": "1914398"
  },
  {
    "text": "AUDIENCE: Looks constant. VICTOR COSTAN:\nLooks constant, OK. AUDIENCE: [INAUDIBLE] VICTOR COSTAN: Does anyone\nelse think it looks constant?",
    "start": "1914398",
    "end": "1923030"
  },
  {
    "text": "Yeah. AUDIENCE: It's a trap. VICTOR COSTAN: It's a trap. It's a trap.",
    "start": "1923030",
    "end": "1928948"
  },
  {
    "text": "[INTERPOSING VOICES] AUDIENCE: --length\nof the two lists. VICTOR COSTAN: OK. Good.",
    "start": "1928948",
    "end": "1934880"
  },
  {
    "text": "You paid attention\nin lecture, right? AUDIENCE: I try. VICTOR COSTAN: Nice. OK, so we have plus\nas an operator,",
    "start": "1934880",
    "end": "1945830"
  },
  {
    "text": "and suppose we work\nwith two lists. The first list is 1, 2, 3,\nall the way through 1,000.",
    "start": "1945830",
    "end": "1954410"
  },
  {
    "text": "And the second list is 1, 2, 3. So when you code\nplus to combine them,",
    "start": "1954410",
    "end": "1962010"
  },
  {
    "text": "if you say something\nlike C equals A plus B, you would expect that--\nif this is A, by the way",
    "start": "1962010",
    "end": "1969160"
  },
  {
    "text": "and this is B-- you would expect\nthat after you call this A is still this, B is\nstill this, and C",
    "start": "1969160",
    "end": "1976120"
  },
  {
    "text": "is a list that\ncontains everything. So because of that, what plus\nhas to do is make a new list,",
    "start": "1976120",
    "end": "1984070"
  },
  {
    "text": "append all the elements here,\nappend all the elements here. So the cost of this if this\nlist is 1,000 and this list is 3",
    "start": "1984070",
    "end": "1990630"
  },
  {
    "text": "is 1,003. Or if you have two lists\nof length, L1 and L2",
    "start": "1990630",
    "end": "1997340"
  },
  {
    "text": "the cost is order of L1 plus L2.",
    "start": "1997340",
    "end": "2002580"
  },
  {
    "text": "Now there's another Python\nmethod called extend, which does what I think\nyou would expect plus",
    "start": "2002580",
    "end": "2008432"
  },
  {
    "text": "to do in terms of efficiency.  So what extend does is you\ncall it a 1 or A on one list,",
    "start": "2008432",
    "end": "2016670"
  },
  {
    "text": "give it the other\nlist, and it's going to take each element\nin the second list and append it to the first list.",
    "start": "2016670",
    "end": "2023020"
  },
  {
    "text": "So for each element here, it\ncalls append on this list. So what's the running\ntime for extend?",
    "start": "2023020",
    "end": "2028746"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]  VICTOR COSTAN: OK, there are\ntoo many directions and--",
    "start": "2028746",
    "end": "2035226"
  },
  {
    "text": "AUDIENCE: Length\nof the second list. VICTOR COSTAN: Length of\nthe second list, excellent. So two lists, L1,\nL2, order of L2.",
    "start": "2035226",
    "end": "2043210"
  },
  {
    "text": "So it doesn't matter\nthis is 1,000 elements are a million elements,\nappending three elements is going to take time\nproportional to three.",
    "start": "2043210",
    "end": "2051738"
  },
  {
    "text": "OK now, let's see\nwhat's going on here. So we have Z lines and\ncharacters in a line.",
    "start": "2051739",
    "end": "2059100"
  },
  {
    "text": " I think I want a nicer constant.",
    "start": "2059100",
    "end": "2064730"
  },
  {
    "text": " No, let's go with this for now. ",
    "start": "2064730",
    "end": "2072240"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] lines. VICTOR COSTAN: So this\nis the length of a word.",
    "start": "2072240",
    "end": "2078020"
  },
  {
    "text": "Let's see, how many words\nwill I have in a line? Let's say I have K words in a\nline, which is N divided by W.",
    "start": "2078020",
    "end": "2087530"
  },
  {
    "text": "So I know that to\nget words from string returns a list of size K.\nSo if that is the case, then",
    "start": "2087530",
    "end": "2095219"
  },
  {
    "text": "the first time line 5\nruns, word list is empty. And it's going to\nget K elements.",
    "start": "2095219",
    "end": "2101580"
  },
  {
    "text": "The second time it runs,\nword list has K elements and gets K more. Third time, it has 2K\nelements, it gets K more.",
    "start": "2101580",
    "end": "2109590"
  },
  {
    "text": "So the running time for\nthis looks like this. K plus 2K plus 3K\nplus 4K all the way",
    "start": "2109590",
    "end": "2119150"
  },
  {
    "text": "until when I'm at the last\nline, if I have Z lines. I had Z minus 1 times\nK elements in the list,",
    "start": "2119150",
    "end": "2127720"
  },
  {
    "text": "because I have Z minus 1\nlines and I put all the words in the list, and I'm\nadding K more words.",
    "start": "2127720",
    "end": "2135080"
  },
  {
    "text": "So total, Z times\nK running time.",
    "start": "2135080",
    "end": "2143760"
  },
  {
    "text": "So this is the total\nrunning time for this guy. And this is not constant,\nso it's complicated.",
    "start": "2143760",
    "end": "2150510"
  },
  {
    "text": "What is the sum come\ndown to, asymptotically? ",
    "start": "2150510",
    "end": "2160210"
  },
  {
    "text": "AUDIENCE: Z plus\n1K times Z over 2. VICTOR COSTAN: Ok.",
    "start": "2160210",
    "end": "2165740"
  },
  {
    "text": "Z plus 1K, ZK over 2.",
    "start": "2165740",
    "end": "2177000"
  },
  {
    "text": "Slow because I care\nabout asymptotics, this is order of Z\nsquared times K, right?",
    "start": "2177000",
    "end": "2191180"
  },
  {
    "text": "So now any one more\nnatural number to work with would be the number of\nwords in a document.",
    "start": "2191180",
    "end": "2196500"
  },
  {
    "text": "And the number of\nwords in a document is W, which is Z times K.\nSo Z is W divided by K.",
    "start": "2196500",
    "end": "2210150"
  },
  {
    "text": "And if I substitute\nthis, I get that this is equal to 0 of W squared over\nK. Now in a reasonable document",
    "start": "2210150",
    "end": "2225170"
  },
  {
    "text": "that I see, there tends to\nbe a limited number of words per line because the document\nhas to fit on a page.",
    "start": "2225170",
    "end": "2232860"
  },
  {
    "text": "So K's pretty much a constant. So this comes down to\norder of W squared.",
    "start": "2232860",
    "end": "2238820"
  },
  {
    "text": " So if I go down here and look\nat get word from line list,",
    "start": "2238820",
    "end": "2247830"
  },
  {
    "text": "this is W squared, where\nW is how many words I have in a document. ",
    "start": "2247830",
    "end": "2255130"
  },
  {
    "text": "How many of you guys\nare still with me? Half. OK.",
    "start": "2255130",
    "end": "2261400"
  },
  {
    "text": "Does anyone else want\nto ask questions, so that you can\nget back on track? Yes, no?",
    "start": "2261400",
    "end": "2268424"
  },
  {
    "text": "AUDIENCE: It makes sense so far. VICTOR COSTAN: Thank you. AUDIENCE: I think\nI didn't understand the part of [INAUDIBLE]",
    "start": "2268424",
    "end": "2275201"
  },
  {
    "text": "VICTOR COSTAN: OK. Thank you. So let's see what's going\non lines 2 through 5.",
    "start": "2275201",
    "end": "2282280"
  },
  {
    "text": "So I have a word list, which\nat the beginning is empty.",
    "start": "2282280",
    "end": "2289360"
  },
  {
    "text": "Then in line 4, words\nin line gets K words. ",
    "start": "2289360",
    "end": "2295299"
  },
  {
    "text": "And those K words in line\nfive are added to word list.",
    "start": "2295300",
    "end": "2301840"
  },
  {
    "text": "So after that, word\nlist has K words. Then I run through\nthe loop again.",
    "start": "2301840",
    "end": "2306880"
  },
  {
    "text": "Get the words from string\ngives me K new words. They get added to the list,\nwhich now has 2K words.",
    "start": "2306880",
    "end": "2313769"
  },
  {
    "text": "Next time I get K\nmore words, they get that added to the\nlist, which has 3K.",
    "start": "2313770",
    "end": "2319890"
  },
  {
    "text": "So on and so forth\nuntil the end. I have ugly numbers. Z minus 1 times K words\nand I add the last K words.",
    "start": "2319890",
    "end": "2330819"
  },
  {
    "text": " I'm getting confused here.",
    "start": "2330820",
    "end": "2336480"
  },
  {
    "text": "And I get Z times K words. So the word list is eventually\ngoing to have Z times K words,",
    "start": "2336480",
    "end": "2342839"
  },
  {
    "text": "and it gets them K at a time. The thing that does this\naddition is the plus operator.",
    "start": "2342840",
    "end": "2348450"
  },
  {
    "text": "And the running time\nfor the plus operator is the size of the two lists,\nso it's this plus this.",
    "start": "2348450",
    "end": "2354100"
  },
  {
    "text": "So that's why the running time\nis first K, then 2K, then 3K, then-- make sense now?",
    "start": "2354100",
    "end": "2363387"
  },
  {
    "text": "AUDIENCE: Yes. VICTOR COSTAN: OK. So this is a subtle bug because\nif you change plus to extend,",
    "start": "2363387",
    "end": "2370620"
  },
  {
    "text": "you get [? bug ?] disk two,\nwhich runs a lot faster. ",
    "start": "2370620",
    "end": "2377265"
  },
  {
    "text": "OK. ",
    "start": "2377265",
    "end": "2382269"
  },
  {
    "text": "So for everything\nelse, we want to be able to do this\nsort of analysis,",
    "start": "2382270",
    "end": "2387330"
  },
  {
    "text": "but we want to do it faster. So you guys should look\nthrough [? bug list ?] one through eight and do the same\nanalysis for all the functions.",
    "start": "2387330",
    "end": "2395110"
  },
  {
    "text": "And we're going to post\nrecitation notes where we tell you this is the\nfunction that changed,",
    "start": "2395110",
    "end": "2401130"
  },
  {
    "text": "and this is the\ntotal running time. And you should go\nthrough the lines and convince yourself that\nthis is the right running time.",
    "start": "2401130",
    "end": "2407610"
  },
  {
    "text": "And you should do that until\nit becomes second nature, because when you're\nwriting Python code, you want to have\nthis in your head.",
    "start": "2407610",
    "end": "2413460"
  },
  {
    "text": "You don't want to\nhave to write it down, because if you have to write it\ndown, you're going to be lazy and you're not going\nto do it, and you're",
    "start": "2413460",
    "end": "2419158"
  },
  {
    "text": "going to use plus\ninstead of extend, and your code is going\nto be horribly slow. So practice until this\ngets in your head,",
    "start": "2419158",
    "end": "2425114"
  },
  {
    "text": "and then you'll be able to see\nthe running time for things really quickly. ",
    "start": "2425114",
    "end": "2431070"
  },
  {
    "text": "OK, do we have time for\nonce more let me see. OK.",
    "start": "2431070",
    "end": "2437120"
  },
  {
    "text": "Let's look at the running\ntime for inner products, because this is nice and easy. ",
    "start": "2437120",
    "end": "2444700"
  },
  {
    "text": "2, 3, 4, 5, 6, 7.",
    "start": "2444700",
    "end": "2453030"
  },
  {
    "text": "2 is 1, 1, very nice and easy. 3 looks at the first document\nlist and iterates through it.",
    "start": "2453030",
    "end": "2465200"
  },
  {
    "text": "Iteration is constant time, but\nif the first document vector has L1 elements, it's\ngoing to run L1 times.",
    "start": "2465200",
    "end": "2475099"
  },
  {
    "text": "How about line 4,\nwords 2 count 2 in L2. This is iteration again, so it's\nconstant time to run it once,",
    "start": "2475100",
    "end": "2486330"
  },
  {
    "text": "but how many times will it run? AUDIENCE: L2 times L1 times. VICTOR COSTAN: L2\ntimes the 1, excellent.",
    "start": "2486330",
    "end": "2493420"
  },
  {
    "text": "So these two loops are\nnested inside each other so that means that\nlines 4 through 6",
    "start": "2493420",
    "end": "2499170"
  },
  {
    "text": "are going to run once\nevery time line 3 iterates. So sorry, actually\nline 4 is going",
    "start": "2499170",
    "end": "2505590"
  },
  {
    "text": "to run once every\ntime line 3 iterates. And then everything\ninside the second 4",
    "start": "2505590",
    "end": "2513130"
  },
  {
    "text": "is going to run\nL1 times L2 times. So lines 5 and 6 are also\ngoing to run L1, L2 times.",
    "start": "2513130",
    "end": "2522705"
  },
  {
    "text": "L1, L2, L1, L2. How much time does it take\nto do that if check there?",
    "start": "2522705",
    "end": "2531715"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] VICTOR COSTAN: Why does\nit take a constant time? ",
    "start": "2531716",
    "end": "2539304"
  },
  {
    "text": "AUDIENCE: I was going to\nsay, it wasn't constant, so you don't have to pair\neach character with no word.",
    "start": "2539304",
    "end": "2545680"
  },
  {
    "text": "VICTOR COSTAN: OK, good. So we have two words,\nand equal, equal tells me are the words\nequal or not, right?",
    "start": "2545680",
    "end": "2551430"
  },
  {
    "text": "So the way you do that, is you\nhave words like the and fox. You go through each\ncharacter, and you",
    "start": "2551430",
    "end": "2557270"
  },
  {
    "text": "stop whenever you see\ndifferent characters. But if you have something\nlike, if you have a fake word",
    "start": "2557270",
    "end": "2566440"
  },
  {
    "text": "F-O-I and fox, then go\nthrough the first character, they're equal, second character,\nthey're equal, third character,",
    "start": "2566440",
    "end": "2573370"
  },
  {
    "text": "they're different. So if you have\nlength W words that are different only in\nthe last character,",
    "start": "2573370",
    "end": "2579220"
  },
  {
    "text": "this is going to\nbe order W, right? So the real-- AUDIENCE: [INAUDIBLE]",
    "start": "2579220",
    "end": "2585619"
  },
  {
    "text": "VICTOR COSTAN: --yep, equals,\nequals 4 strings not constant. It takes W time where W\nis the length of a word.",
    "start": "2585620",
    "end": "2593470"
  },
  {
    "text": "Now here we said that\nthe length of a word is constant because we're\ndealing with English. So you could tell me it is\nconstant because of that.",
    "start": "2593470",
    "end": "2599890"
  },
  {
    "text": "But I would like to hear the\nargument before I take it.  How about line 6?",
    "start": "2599890",
    "end": "2606049"
  },
  {
    "start": "2606050",
    "end": "2611330"
  },
  {
    "text": "AUDIENCE: Well,\nif the plus equals is going to be the same\nthing before when we were, every new time your\nplus equals, so it's",
    "start": "2611330",
    "end": "2619269"
  },
  {
    "text": "going to be like how the word\nlist before we were adding it, where we have to\ncreate that object, and then add it to the length.",
    "start": "2619270",
    "end": "2625524"
  },
  {
    "text": "I mean, its going\nto be length of sum. Sorry. And then you add in the new one. So every time its going\nto be increasing, correct?",
    "start": "2625524",
    "end": "2630572"
  },
  {
    "text": "VICTOR COSTAN: Almost. It's a trap again. [INTERPOSING VOICES] VICTOR COSTAN: Yep. Yeah, so this time\nthey're not lists.",
    "start": "2630572",
    "end": "2636770"
  },
  {
    "text": "So if you look at what's\ngoing on inside there, you have count one\nand count two are",
    "start": "2636770",
    "end": "2643839"
  },
  {
    "text": "these numbers in the document\nvector, so they're numbers. And then some starts\nout at 0, and then it",
    "start": "2643840",
    "end": "2651124"
  },
  {
    "text": "keeps getting numbers. So sum is going to be a number. And multiplying numbers\nis constant time,",
    "start": "2651124",
    "end": "2656240"
  },
  {
    "text": "adding numbers is constant\ntime, so plus for numbers is order 1 indeed. AUDIENCE: You're\nreassigning sum every time?",
    "start": "2656240",
    "end": "2662420"
  },
  {
    "text": "VICTOR COSTAN: Which\nis also constant. AUDIENCE: OK. VICTOR COSTAN: Because\nyou're copying a number over. So as long as you're\ncopying one element over,",
    "start": "2662420",
    "end": "2668660"
  },
  {
    "text": "that's constant time. If you're adding two elements\ntogether-- two elements, not two lists--\nthat's constant time.",
    "start": "2668660",
    "end": "2676070"
  },
  {
    "text": "So this is constant. And the last line is returned.",
    "start": "2676070",
    "end": "2682010"
  },
  {
    "text": "So what's the running\ntime for this?  AUDIENCE: L2 times L1.",
    "start": "2682010",
    "end": "2689039"
  },
  {
    "text": "VICTOR COSTAN: Excellent. So I assume this is a constant. So this lets me say\nthis is 1, and then",
    "start": "2689040",
    "end": "2695859"
  },
  {
    "text": "if we do the partial products\nwe get 1L, 1L, 1, and L2. L1, L2, L1, L2.",
    "start": "2695860",
    "end": "2701510"
  },
  {
    "text": "And if you add them\nup, you get L1 and L2.  So this is going to be L1, L2.",
    "start": "2701510",
    "end": "2711289"
  },
  {
    "text": "Vector angle calls inner\nproduct three times, right? So what's it's running time?",
    "start": "2711290",
    "end": "2718895"
  },
  {
    "text": "AUDIENCE: L1, L2.  VICTOR COSTAN: Excellent.",
    "start": "2718895",
    "end": "2724740"
  },
  {
    "text": " Count frequency. You're going to have\nto take my word for it",
    "start": "2724740",
    "end": "2731130"
  },
  {
    "text": "that this is order of W squared.",
    "start": "2731130",
    "end": "2736869"
  },
  {
    "text": "And if that's the case,\nwhat's the running time for a word\nfrequency for file? ",
    "start": "2736870",
    "end": "2744983"
  },
  {
    "text": "AUDIENCE: W squared?  VICTOR COSTAN: Cool.",
    "start": "2744983",
    "end": "2750980"
  },
  {
    "text": "So. What's the running\ntime for main now?  Last trick.",
    "start": "2750980",
    "end": "2756335"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] VICTOR COSTAN: Yep, If\nyou just add them up, except there is one\nlast trick there. AUDIENCE: If W is\nconstant, [INAUDIBLE]",
    "start": "2756335",
    "end": "2764298"
  },
  {
    "text": "VICTOR COSTAN: No. AUDIENCE: [INAUDIBLE]\nW's constant, right? VICTOR COSTAN: No.",
    "start": "2764299",
    "end": "2769390"
  },
  {
    "text": "So W is the number of\nwords in a document. AUDIENCE: Oh. VICTOR COSTAN: So it's huge.",
    "start": "2769390",
    "end": "2774440"
  },
  {
    "text": "If that's constant,\nthen the whole problem should run in order one\ntime, and we're done. We're going home.",
    "start": "2774440",
    "end": "2779790"
  },
  {
    "text": "AUDIENCE: W squared because\nit beats out L1 and L2. VICTOR COSTAN: OK, so--",
    "start": "2779790",
    "end": "2785460"
  },
  {
    "text": "AUDIENCE: L1-- VICTOR COSTAN: --you're\ngoing faster than me. You're going too fast,\nbut you're right.",
    "start": "2785460",
    "end": "2791190"
  },
  {
    "text": "So word frequency for\nfile is called twice. The first document is\ngoing to have W1 words.",
    "start": "2791190",
    "end": "2798220"
  },
  {
    "text": "The second document is\ngoing to have W2 words. So you can just copy W\nbecause this is called twice",
    "start": "2798220",
    "end": "2804470"
  },
  {
    "text": "for different files. So this is order of\nW1 squared plus W2",
    "start": "2804470",
    "end": "2811410"
  },
  {
    "text": "squared, different documents. ",
    "start": "2811410",
    "end": "2819870"
  },
  {
    "text": "And then I have plus L1, L2. ",
    "start": "2819870",
    "end": "2827550"
  },
  {
    "text": "And you said that W1 and W2\ndominate L1 and L2, right?",
    "start": "2827550",
    "end": "2832960"
  },
  {
    "text": "Because W's the total number\nof words in a document, whereas L the is the\nnumber of unique words,",
    "start": "2832960",
    "end": "2839640"
  },
  {
    "text": "because it the\nlength of the vector. So that is true,\nbut I'm not sure how to reduce this here\nto make use of that.",
    "start": "2839640",
    "end": "2848000"
  },
  {
    "text": "However, I made use of what you\nsaid already when I wrote this. ",
    "start": "2848000",
    "end": "2855740"
  },
  {
    "text": "You see why? Can anyone else see why? ",
    "start": "2855740",
    "end": "2862600"
  },
  {
    "text": "So let's look at the vector\nangle again, lines 2 and 3.",
    "start": "2862600",
    "end": "2872460"
  },
  {
    "text": "So line 2, it calls inner\nproduct with L1 and L2.",
    "start": "2872460",
    "end": "2878330"
  },
  {
    "text": "But if you look at line\n3, it calls inner product with L1, L1 and then L2, L2\nSo the total running time",
    "start": "2878330",
    "end": "2885670"
  },
  {
    "text": "for vector angle is\nactually L1, L2 plus L1",
    "start": "2885670",
    "end": "2890880"
  },
  {
    "text": "squared plus L2 squared. ",
    "start": "2890880",
    "end": "2897880"
  },
  {
    "text": "So if the first\ndocument has 1,000 words and the second\ndocument as one word, computing the inner\nproduct between L1 and L1",
    "start": "2897880",
    "end": "2905680"
  },
  {
    "text": "is going to take a lot\nmore time than computing the inner product\nbetween L1 and L2. So I can't leave\nout these terms.",
    "start": "2905680",
    "end": "2912910"
  },
  {
    "text": "They have to be here. However, when I\nadd them up here-- if I would write W1 squared\nplus W2 squared plus L1 squared",
    "start": "2912910",
    "end": "2921269"
  },
  {
    "text": "plus L2 squared plus\nthis-- in that case, I can use the fact that\nW1 is bigger than L1,",
    "start": "2921270",
    "end": "2927339"
  },
  {
    "text": "and it cancels it out. Does this make sense? Did I lose people?",
    "start": "2927340",
    "end": "2932420"
  },
  {
    "text": " Ask questions, please.",
    "start": "2932420",
    "end": "2938188"
  },
  {
    "text": " AUDIENCE: But you can't\nget rid of L1 and L2",
    "start": "2938188",
    "end": "2944584"
  },
  {
    "text": "and not an [INAUDIBLE]. VICTOR COSTAN: You can't-- AUDIENCE: [INAUDIBLE]",
    "start": "2944584",
    "end": "2949710"
  },
  {
    "text": "VICTOR COSTAN: Oh, so I\ncan't get rid of this term-- AUDIENCE: --those, right? So this should be the sum\nof this and this, right?",
    "start": "2949710",
    "end": "2957335"
  },
  {
    "text": "AUDIENCE: Right. VICTOR COSTAN: So it should\nbe W1 squared plus W2 squared plus L1 squared plus\nL2 squared plus L1, L2.",
    "start": "2957335",
    "end": "2966382"
  },
  {
    "text": "AUDIENCE: Right. L1 is strictly smaller than W1. AUDIENCE: Yeah.",
    "start": "2966382",
    "end": "2971619"
  },
  {
    "text": "Goes away, L2 smaller than\nW2 goes away, and I get this. Correct. So L1L2 isn't smaller than\nW [INAUDIBLE] squared?",
    "start": "2971620",
    "end": "2980796"
  },
  {
    "text": "VICTOR COSTAN: Is it? If you know more\nmath than me, you might be able to\nprove that it is, but I don't, so I'm just\nleaving it in there.",
    "start": "2980796",
    "end": "2987422"
  },
  {
    "text": "AUDIENCE: Ok. VICTOR COSTAN: Yeah. I think there is some\nrelation, but I really don't remember what\nit this, so let's",
    "start": "2987422",
    "end": "2993940"
  },
  {
    "text": "leave it like that for now. ",
    "start": "2993940",
    "end": "3000854"
  },
  {
    "text": "Yeah, I think it should\nbe the case that these are bigger than this,\nbut I'm not sure.",
    "start": "3000854",
    "end": "3006250"
  },
  {
    "text": "OK, yes. AUDIENCE: How do you get\nthe line for vector angle?",
    "start": "3006250",
    "end": "3012200"
  },
  {
    "text": "VICTOR COSTAN: How do I get\nthe running time for it? So vector angle gets\ntwo vectors, right?",
    "start": "3012200",
    "end": "3019390"
  },
  {
    "text": "The vector for document one and\nthe vector for document two. The length of the\nfirst vector is L1. The length of the\nsecond vector is L2.",
    "start": "3019390",
    "end": "3026589"
  },
  {
    "text": "Now, line, where is it? ",
    "start": "3026590",
    "end": "3032550"
  },
  {
    "text": "Line 2, for numerator calls\ninner product with L1 and L2.",
    "start": "3032550",
    "end": "3038050"
  },
  {
    "text": "So we know that the running\ntime is L1, L2 up here.",
    "start": "3038050",
    "end": "3043350"
  },
  {
    "text": "Now the next line,\nline 3 in vector angle, calls inner product\nwith L1 and L1.",
    "start": "3043350",
    "end": "3049990"
  },
  {
    "text": "So the running time is L1\ntimes L1 which is L1 squared. OK. AUDIENCE: Can we say\nthat because there's",
    "start": "3049990",
    "end": "3056600"
  },
  {
    "text": "a bounded number of words in the\nEnglish language, L1's bounded?",
    "start": "3056600",
    "end": "3062814"
  },
  {
    "text": "And as the length\nof the document gets really, really big,\nthat [INAUDIBLE] constant?",
    "start": "3062814",
    "end": "3068215"
  },
  {
    "text": " VICTOR COSTAN: Yeah, you\nmight be able to do that.",
    "start": "3068215",
    "end": "3075300"
  },
  {
    "text": "Yes, I think for the cases\nthat we give you, that is true. Yeah, I never thought\nof that, that's cool.",
    "start": "3075300",
    "end": "3081036"
  },
  {
    "text": "AUDIENCE: It doesn't work if\nit's not a language, right? If you just have gibberish? VICTOR COSTAN: Yes, also, to\nsay that its constant is useful",
    "start": "3081036",
    "end": "3092760"
  },
  {
    "text": "when the number of\nwords in English is much smaller than\nyour input size. So if, say, English\nhas 50,000 words",
    "start": "3092760",
    "end": "3100180"
  },
  {
    "text": "and your input is 3,000 words,\nthen the input is much smaller. But if you're input is\na million words, which",
    "start": "3100180",
    "end": "3105910"
  },
  {
    "text": "I think is what\nwe use, then yeah, it comes down to constant. So yeah, that's a good insight.",
    "start": "3105910",
    "end": "3111000"
  },
  {
    "text": "That's really nice.  Anything else? ",
    "start": "3111000",
    "end": "3122779"
  },
  {
    "text": "OK, so you get to go through\ndocument distance 3 to 8. We'll tell you what's\nchanged, and we'll",
    "start": "3122780",
    "end": "3128690"
  },
  {
    "text": "give you a chance to\nhelp you analyze it. But you have to analyze it,\nthen update the scorecard",
    "start": "3128690",
    "end": "3133850"
  },
  {
    "text": "for each algorithm to\nsee how things improve.",
    "start": "3133850",
    "end": "3139000"
  },
  {
    "text": "Thanks. ",
    "start": "3139000",
    "end": "3140567"
  }
]