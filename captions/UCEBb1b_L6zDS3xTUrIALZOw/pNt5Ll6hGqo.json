[
  {
    "start": "0",
    "end": "95000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6680"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6680",
    "end": "13670"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13670",
    "end": "22800"
  },
  {
    "text": "PROFESSOR: So this week we are\ngoing to talk about counting. Tonight is a problem\nset eight due.",
    "start": "22800",
    "end": "32008"
  },
  {
    "text": "For this week, we will post\na new problem set tonight as well. Counting is very important.",
    "start": "32009",
    "end": "39190"
  },
  {
    "text": "The rest of the semester\nafter this week, we will actually explain\nprobability theory.",
    "start": "39190",
    "end": "44499"
  },
  {
    "text": "And it's all based on counting.  So I'm going to\nteach you this week",
    "start": "44499",
    "end": "51710"
  },
  {
    "text": "a whole toolkit of all\nkinds of ways how to count. And as you can see,\nwe're going to talk",
    "start": "51710",
    "end": "56960"
  },
  {
    "text": "about a lot of different\nkinds of rules. A mapping rule we'll\ntalk about, the pigeon",
    "start": "56960",
    "end": "63100"
  },
  {
    "text": "hole principle, another\nrule, the product rule and the sum rule. And these are all ways\nto count one thing",
    "start": "63100",
    "end": "70100"
  },
  {
    "text": "by counting another thing. Actually, what we are\ngoing to talk about is how to count a\ndifficult set the objects.",
    "start": "70100",
    "end": "79080"
  },
  {
    "text": "And we will map those\nobjects to something that we can count in\na much easier way.",
    "start": "79080",
    "end": "84930"
  },
  {
    "text": "OK. So let's start with a lot\nof definitions actually. So we have to talk about sets,\nsequences, and permutations",
    "start": "84930",
    "end": "93979"
  },
  {
    "text": "to start off with. So the definition of\na set is as follows.",
    "start": "93980",
    "end": "102640"
  },
  {
    "start": "95000",
    "end": "310000"
  },
  {
    "text": "A set is actually an\nunordered collection",
    "start": "102640",
    "end": "111450"
  },
  {
    "text": "of distinct elements. ",
    "start": "111450",
    "end": "121180"
  },
  {
    "text": "So as an example,\nwe may have, say, a set that contains the\nelements a, b, and c.",
    "start": "121180",
    "end": "131120"
  },
  {
    "text": "Well, if you reorder\nthese elements, it doesn't really matter. It's still the same set. We can also write it\nas the set c, a, b.",
    "start": "131120",
    "end": "139640"
  },
  {
    "text": "On the other hand if you\nhave a collection in which say the elements\na appears twice,",
    "start": "139640",
    "end": "146650"
  },
  {
    "text": "well, these two\nare not distinct. So this is not a set. So this is not a set.",
    "start": "146650",
    "end": "152500"
  },
  {
    "text": "But it is a collection. And you may call\nthis a multiset. But we'll not go into that.",
    "start": "152500",
    "end": "158350"
  },
  {
    "text": "So we will be\ntalking about sets. And your interested usually\nin the cardinality of a set.",
    "start": "158350",
    "end": "163930"
  },
  {
    "text": "So what's that? The cardinality or size\nis defined as follows.",
    "start": "163930",
    "end": "172410"
  },
  {
    "text": " Cardinality is just\na number of elements",
    "start": "172410",
    "end": "184470"
  },
  {
    "text": "that the set S really has. So it's a number\nof elements in S.",
    "start": "184470",
    "end": "196019"
  },
  {
    "text": "And how do we denote this/ This\nis denoted by two vertical bars",
    "start": "196020",
    "end": "202550"
  },
  {
    "text": "around the letter that\nrepresents the set.",
    "start": "202550",
    "end": "207740"
  },
  {
    "text": "So we denote this as follows. Now, when we talk\nabout sets, we may also",
    "start": "207740",
    "end": "213260"
  },
  {
    "text": "be interested in ordered\ncollection of elements. And that's what we\ncall a sequence.",
    "start": "213260",
    "end": "220820"
  },
  {
    "text": "So a sequence is\ndefined as follows. A sequence is an ordered\ncollection of elements.",
    "start": "220820",
    "end": "240170"
  },
  {
    "text": "And we also call these\nelements components or terms. ",
    "start": "240170",
    "end": "252810"
  },
  {
    "text": "And these elements\ndo not necessarily have to be distinct-- so\nnot necessarily distinct.",
    "start": "252810",
    "end": "267360"
  },
  {
    "text": "Now as an example, so\nhow do we denote this? For sets, we use this type\nof notation like this symbol.",
    "start": "267360",
    "end": "276520"
  },
  {
    "text": "For sequences, we just have a\nvery simple type of bracket, just a round bracket.",
    "start": "276520",
    "end": "282629"
  },
  {
    "text": "So an example could be, well,\nthe elements a, b, and c.",
    "start": "282630",
    "end": "289240"
  },
  {
    "text": "The first entry\nor the first term of the sequence-- depending\non whether you look at it from the left or\nthe right, it may differ--",
    "start": "289240",
    "end": "297040"
  },
  {
    "text": "is here a, b, and then c. Another one could\nbe a, b, and a.",
    "start": "297040",
    "end": "303810"
  },
  {
    "text": "And as you can see, the element\na occurs twice in the sequence. ",
    "start": "303810",
    "end": "310699"
  },
  {
    "start": "310000",
    "end": "650000"
  },
  {
    "text": "So we're going to relate\nsets and sequences. And let's talk about\nthe permutation.",
    "start": "310700",
    "end": "318080"
  },
  {
    "text": "So a permutation of a set\nis defined as follows. ",
    "start": "318080",
    "end": "328500"
  },
  {
    "text": "A permutation of a\nset S is actually",
    "start": "328500",
    "end": "336080"
  },
  {
    "text": "a sequence that contains every\nelement in S exactly once.",
    "start": "336080",
    "end": "344150"
  },
  {
    "start": "344150",
    "end": "355250"
  },
  {
    "text": "So every element in S\noccurs exactly once. ",
    "start": "355250",
    "end": "363280"
  },
  {
    "text": "And as an example, we may\nlook at the set that we have described over here,\nthe set a,b, and c.",
    "start": "363280",
    "end": "371930"
  },
  {
    "text": "And how many\npermutations are there? So the first one I may just\norder the elements in a, b,",
    "start": "371930",
    "end": "382736"
  },
  {
    "text": "and c. So I have, say, the sequence\na and then b, and then c.",
    "start": "382736",
    "end": "388020"
  },
  {
    "text": "There are many more. I can, for example,\nstart with b, and then c,",
    "start": "388020",
    "end": "393990"
  },
  {
    "text": "and then may cycle through to a. That's another permutation\nof these three elements.",
    "start": "393990",
    "end": "400844"
  },
  {
    "text": "And I can do this once more. I can, for example, start with\nc, and then a, and then b.",
    "start": "400844",
    "end": "409760"
  },
  {
    "text": "And it turns out that\nwe can do a few more. You can also start to c,\nand then b, and then a.",
    "start": "409760",
    "end": "416139"
  },
  {
    "text": "We sort of reversed\nthe order that we had over here into its opposite,\nso first c, then b, then a.",
    "start": "416140",
    "end": "425070"
  },
  {
    "text": "And we can look at\nthis cycle there. There's shifts. And we start with b, a,\nand then we rotate through",
    "start": "425070",
    "end": "431260"
  },
  {
    "text": "to c, which is what\nwe did over here when you went from this\npermutation to this one.",
    "start": "431260",
    "end": "437050"
  },
  {
    "text": "So we have to b, a, and then c. And then we may start with\na, and we have a, c, and b.",
    "start": "437050",
    "end": "445410"
  },
  {
    "text": "It turns out that\nthis is actually all the possible\npermutations of this set.",
    "start": "445410",
    "end": "452100"
  },
  {
    "text": "So there's six of these. And in general, how\nmany permutations",
    "start": "452100",
    "end": "459949"
  },
  {
    "text": "are there of a\nset of n elements? So let's have a look\nhere what we did.",
    "start": "459950",
    "end": "466340"
  },
  {
    "text": "So if I want to create\na permutation of a set, I may start off by selecting for\nthe first term a, and b, or c.",
    "start": "466340",
    "end": "476110"
  },
  {
    "text": "So I have actually\nthree choices. So the first term\nhas three choices.",
    "start": "476110",
    "end": "486014"
  },
  {
    "text": " The second term over\nhere, well, for example,",
    "start": "486015",
    "end": "492010"
  },
  {
    "text": "suppose my first term was b. Then the second\nterm, well, must be",
    "start": "492010",
    "end": "497940"
  },
  {
    "text": "an element that is different\nfrom b, as yet part of S. So I have only two choices for\nthe second term, either c or a.",
    "start": "497940",
    "end": "507450"
  },
  {
    "text": "So the second term\nhas two choices. And once I have chosen\nthe second one, well,",
    "start": "507450",
    "end": "515309"
  },
  {
    "text": "if I've already chosen\nb and c, there's only one element left in\nthe set over here, only a.",
    "start": "515309",
    "end": "522150"
  },
  {
    "text": "So I have only one choice left. So in this way, we may count\nthe total number of permutations",
    "start": "522150",
    "end": "528740"
  },
  {
    "text": "of this set as the\nnumber of choices that I have for the first term\ntimes the number of choices",
    "start": "528740",
    "end": "534270"
  },
  {
    "text": "for the second term,\n3 times 2 times the number of choices for the\nthird term, which is only one.",
    "start": "534270",
    "end": "540519"
  },
  {
    "text": "So the third term\nhas only one choice.",
    "start": "540520",
    "end": "550540"
  },
  {
    "text": "Now in general, we can do\nthis for any permutation. And if you want to count\nthe number of permutations,",
    "start": "550540",
    "end": "561860"
  },
  {
    "text": "of a set with n\nelements, well, it",
    "start": "561860",
    "end": "571019"
  },
  {
    "text": "turns out that it's equal to n\ntimes n minus 1 just like here. We have three elements,\n3 times 3 minus 1",
    "start": "571020",
    "end": "578120"
  },
  {
    "text": "and so on, n times n\nminus 1 times n minus 2, et cetera all the way up to one.",
    "start": "578120",
    "end": "587620"
  },
  {
    "text": "And this is n factorial. And you've seen\nthis already when we talked about\nStirling's formula",
    "start": "587620",
    "end": "593180"
  },
  {
    "text": "and how to approximate this. Now, this type of\nreasoning we will generalize later on when we\ncome to the Generalized Product",
    "start": "593180",
    "end": "601600"
  },
  {
    "text": "rule. And But this is\nalready a first example of how we go about this.",
    "start": "601600",
    "end": "608350"
  },
  {
    "text": "So permutations relates\nsets and sequences.",
    "start": "608350",
    "end": "613470"
  },
  {
    "text": "So now we go on to define\nmore special functions. So permutations is\none kind of mapping.",
    "start": "613470",
    "end": "619639"
  },
  {
    "text": "So let's now define functions. And then we will talk about a\nfew different flavors of those.",
    "start": "619640",
    "end": "629440"
  },
  {
    "text": "We talk about surjective\nfunctions, injective functions, and bijective functions. And the whole idea is is that\nif I can use a mapping from one",
    "start": "629440",
    "end": "639360"
  },
  {
    "text": "set to another set\nthat satisfies some of those properties,\nit can say something",
    "start": "639360",
    "end": "645600"
  },
  {
    "text": "about how their\ncardinalities are related. And that's what we want. We want to count.",
    "start": "645600",
    "end": "651440"
  },
  {
    "start": "650000",
    "end": "840000"
  },
  {
    "text": "OK So the definition of\na function is as follows. ",
    "start": "651440",
    "end": "660220"
  },
  {
    "text": "So a function f from\nx to y is actually",
    "start": "660220",
    "end": "666050"
  },
  {
    "text": "a relation between\nthe sets X and Y.",
    "start": "666050",
    "end": "678730"
  },
  {
    "text": "And we say that--\noh-- with the property",
    "start": "678730",
    "end": "684190"
  },
  {
    "text": "that every single element,\nevery element, of X",
    "start": "684190",
    "end": "691890"
  },
  {
    "text": "is actually related to\nexactly one element of Y.",
    "start": "691890",
    "end": "710070"
  },
  {
    "text": "And we will call x to be the\ndomain of the function f.",
    "start": "710070",
    "end": "719920"
  },
  {
    "text": "And Y we will call the range\nor image of the function f.",
    "start": "719920",
    "end": "726860"
  },
  {
    "text": "So let's give an example. And to see a couple of\nexamples of, first of all,",
    "start": "726860",
    "end": "733399"
  },
  {
    "text": "a function and then\nrelations to that are actually not functions.",
    "start": "733400",
    "end": "738680"
  },
  {
    "text": "So suppose you have a mapping\nfrom x which just contains the elements a, b,\nand c, just in line",
    "start": "738680",
    "end": "745130"
  },
  {
    "text": "with this example over here. And we have a mapping f\nthat maps to the set y.",
    "start": "745130",
    "end": "754410"
  },
  {
    "text": "And the y is just the\nnumbers 1, 2, and 3. Well, i could map, for example,\na to 1, b to 3, and c to 3.",
    "start": "754410",
    "end": "766050"
  },
  {
    "text": "Now this is a function. Because every element of x\nis met to exactly one element",
    "start": "766050",
    "end": "772449"
  },
  {
    "text": "of y. a is just mapped to 1. b is also mapped to\nan element, only 3.",
    "start": "772450",
    "end": "778120"
  },
  {
    "text": "c is mapped to 3 as well. And they usually write this as\nf evaluated in a is equal to 1.",
    "start": "778120",
    "end": "787730"
  },
  {
    "text": "And f b is equal to 3. And f of c is\nequal to 3 as well.",
    "start": "787730",
    "end": "794960"
  },
  {
    "text": "Now what is not a\nfunction-- oh, I could, for example, add another\nedge over here if I wanted to.",
    "start": "794960",
    "end": "800205"
  },
  {
    "text": "But this is not a function. Because b is now mapped\nto two elements, 2 and 3.",
    "start": "800205",
    "end": "805440"
  },
  {
    "text": "And that's not what's\ncovered by this definition. So this is not a function. I can also remove, say, an edge.",
    "start": "805440",
    "end": "812670"
  },
  {
    "text": "Well, in this case, b is not\nmapped to anything at all. And that's not a\nfunction either. So we really have the\nproperty for functions",
    "start": "812670",
    "end": "820180"
  },
  {
    "text": "that there is six exactly\none outgoing arrow, if you want to think\nabout it as being a graph,",
    "start": "820180",
    "end": "827740"
  },
  {
    "text": "from each element in x to\nexactly one element in y.",
    "start": "827740",
    "end": "834680"
  },
  {
    "text": "So now we can talk\nabout a few definitions. ",
    "start": "834680",
    "end": "841580"
  },
  {
    "start": "840000",
    "end": "1085000"
  },
  {
    "text": "So we will talk about these\nfew properties, surjective, injective, and bijective.",
    "start": "841580",
    "end": "847280"
  },
  {
    "text": "And then we can start to do\na few interesting examples.",
    "start": "847280",
    "end": "852770"
  },
  {
    "text": "So a function f that goes from\nx to y is called surjective. ",
    "start": "852770",
    "end": "861640"
  },
  {
    "text": "if every single element of y\nis mapped to at least once.",
    "start": "861640",
    "end": "885190"
  },
  {
    "text": "So what does that mean? To at least once. ",
    "start": "885190",
    "end": "893170"
  },
  {
    "text": "So every element of y, so\nsay 1 for example here,",
    "start": "893170",
    "end": "899380"
  },
  {
    "text": "is mapped to at least once. Well, to the element\n1 we have mapped a.",
    "start": "899380",
    "end": "905790"
  },
  {
    "text": "So that's great. But for example element 2\nis not mapped to at all. So this particular\nexample is not surjective.",
    "start": "905790",
    "end": "913070"
  },
  {
    "text": "But we will come to a\nfew examples that are. So here we have the distinction\nthat every element of y,",
    "start": "913070",
    "end": "918790"
  },
  {
    "text": "so every single element of y,\nis mapped to at least once.",
    "start": "918790",
    "end": "923920"
  },
  {
    "text": "The injective is defined\nin a similar fashion.",
    "start": "923920",
    "end": "930160"
  },
  {
    "text": "But now, every element\nof y is not mapped to at least once, but at most once.",
    "start": "930160",
    "end": "935850"
  },
  {
    "text": " So let's have look over here.",
    "start": "935850",
    "end": "941535"
  },
  {
    "text": "And that's also not true\nfor this example actually. Because three is\nmapped to two times.",
    "start": "941535",
    "end": "948120"
  },
  {
    "text": "So it's not mapped\nto at most once. So this example is\nalso not injective.",
    "start": "948120",
    "end": "953510"
  },
  {
    "text": "Because if the\nfunction is injective, every element of y of the range\nis mapped to at most once.",
    "start": "953510",
    "end": "960350"
  },
  {
    "text": "Bijective is if every element\nof y is mapped to exactly once.",
    "start": "960350",
    "end": "969545"
  },
  {
    "text": " And we can see that the\nfunction is bijective if",
    "start": "969545",
    "end": "978910"
  },
  {
    "text": "and only if it is both\nsurjective and injective. So bijective if and only if\nwe have both the properties",
    "start": "978910",
    "end": "988920"
  },
  {
    "text": "surjectvie as well as injective.",
    "start": "988920",
    "end": "994550"
  },
  {
    "text": "So let's give a\ncouple of examples. ",
    "start": "994550",
    "end": "1004510"
  },
  {
    "text": "So as the first example, we\nmay have the set x and y. We have 1, 2, and 3, and set it\nto elements a and b over here.",
    "start": "1004510",
    "end": "1014780"
  },
  {
    "text": "1 is mapped to a, 2 is mapped\nto a, and 3 is mapped to b.",
    "start": "1014780",
    "end": "1020330"
  },
  {
    "text": "And now we can see\nthat every element in y is mapped to at least once. This one is mapped to two times.",
    "start": "1020330",
    "end": "1025799"
  },
  {
    "text": "This one is mapped to once. So this one is\nactually surjective. So that's great.",
    "start": "1025800",
    "end": "1032760"
  },
  {
    "text": "Another example of\nsomething this is injective is if you have, say, 1, 2,\nand 3, and a, b, c, and d.",
    "start": "1032760",
    "end": "1042147"
  },
  {
    "text": "1 is mapped, say, to a. 2 to b, 3 to d.",
    "start": "1042148",
    "end": "1047420"
  },
  {
    "text": "Well, in this case we\nhave that it's injective. Because every element of y\nis mapped to at most once,",
    "start": "1047420",
    "end": "1054613"
  },
  {
    "text": "once, once, zero\ntimes, and once. So this one is injective. And this one is not\ninjective, right?",
    "start": "1054614",
    "end": "1061299"
  },
  {
    "text": "Because this one is\nmapped to 2 times. This one is not surjective. Because this one is\nnot covered at all.",
    "start": "1061300",
    "end": "1066550"
  },
  {
    "text": "It's only mapped to once. OK. So let us talk again\nabout permutations.",
    "start": "1066550",
    "end": "1074980"
  },
  {
    "text": "So let me talk\nabout permutations. We can define a mapping\nusing a permutation that",
    "start": "1074980",
    "end": "1081040"
  },
  {
    "text": "is an example of a bijection. So let's do that.",
    "start": "1081040",
    "end": "1086290"
  },
  {
    "text": "And then we can come\nto the mapping rule. And we can start to\ndo some counting. ",
    "start": "1086290",
    "end": "1094240"
  },
  {
    "text": "So for example if we have a\npermutation, a 1 up to a n, so",
    "start": "1094240",
    "end": "1104900"
  },
  {
    "text": "let this be a\npermutation of the set",
    "start": "1104900",
    "end": "1111270"
  },
  {
    "text": "S that contains all the\nelements a 1, up to a n.",
    "start": "1111270",
    "end": "1117130"
  },
  {
    "text": "So this is just one\nexample of a permutation. And now we may define\nthe following function.",
    "start": "1117130",
    "end": "1122860"
  },
  {
    "text": "We say that pi evaluated\nin a i give us output i.",
    "start": "1122860",
    "end": "1132630"
  },
  {
    "text": "Actually, what I mean\nhere is that if you take an element in\nS, then this one",
    "start": "1132630",
    "end": "1140340"
  },
  {
    "text": "is mapped to under this\nfunction to i if and only",
    "start": "1140340",
    "end": "1147610"
  },
  {
    "text": "if a is in the i-th position\nin this permutation. So if and only if today is in\ni-th term in the permutation.",
    "start": "1147610",
    "end": "1164450"
  },
  {
    "start": "1164450",
    "end": "1170529"
  },
  {
    "text": "So in this case, we know\nthat pi is bijective.",
    "start": "1170530",
    "end": "1175600"
  },
  {
    "text": "And why is this? Well, we know from the\ndefinition of a permutation",
    "start": "1175600",
    "end": "1182300"
  },
  {
    "text": "that any permutation is a\nsequence in which every element of S occurs exactly once.",
    "start": "1182300",
    "end": "1188430"
  },
  {
    "text": "So that means that every\nposition is covered exactly",
    "start": "1188430",
    "end": "1193540"
  },
  {
    "text": "once by an element of\nS. And that is exactly the definition over\nhere which says",
    "start": "1193540",
    "end": "1199190"
  },
  {
    "text": "that every element in the\nrange is mapped to exactly",
    "start": "1199190",
    "end": "1205190"
  },
  {
    "text": "once by an element in a domain. So this is an example\nof a bijection.",
    "start": "1205190",
    "end": "1210195"
  },
  {
    "text": " OK. So now that we have\ndefined functions",
    "start": "1210195",
    "end": "1216570"
  },
  {
    "start": "1212000",
    "end": "1671000"
  },
  {
    "text": "and the special\nproperties, let's talk about the mapping rule,\nwhich we'll do over here.",
    "start": "1216570",
    "end": "1224830"
  },
  {
    "text": " And now for the\nfirst time we start",
    "start": "1224830",
    "end": "1233340"
  },
  {
    "text": "to talk about the\ncardinalities of sets and how they're\nrelated to one another. ",
    "start": "1233340",
    "end": "1240440"
  },
  {
    "text": "So the mapping\nrule is that first of all, if f is a\nfunction from x to y",
    "start": "1240440",
    "end": "1248610"
  },
  {
    "text": "and if f is actually surjective,\nwell, what do we know?",
    "start": "1248610",
    "end": "1253900"
  },
  {
    "text": "We actually know\nthat the cardinality of the number of\nelements in the domain",
    "start": "1253900",
    "end": "1259140"
  },
  {
    "text": "is at least the number\nof elements in the range. And why is that? If you look at a\ndefinition of surjectivity,",
    "start": "1259140",
    "end": "1265950"
  },
  {
    "text": "we know that every\nelement of y is covered by some element\nin x at least once.",
    "start": "1265950",
    "end": "1271820"
  },
  {
    "text": "And all the elements in x\nand mapped to exactly one",
    "start": "1271820",
    "end": "1279350"
  },
  {
    "text": "element in y. So we know that the\ncardinality of x is at least y.",
    "start": "1279350",
    "end": "1284780"
  },
  {
    "text": "Because every element\nin y is mapped by some unique\ndistinct element in x.",
    "start": "1284780",
    "end": "1290810"
  },
  {
    "text": "And if a function f is\ninjective, well, in that case",
    "start": "1290810",
    "end": "1298910"
  },
  {
    "text": "we know that the\nreverse relation holds,",
    "start": "1298910",
    "end": "1303990"
  },
  {
    "text": "so inequality holds. The cardinality of x is at\nmost the cardinality of y.",
    "start": "1303990",
    "end": "1311659"
  },
  {
    "text": "So why is that? Well, every element in an\ninjective function, right?",
    "start": "1311660",
    "end": "1316799"
  },
  {
    "text": "Every element is mapped\nto at most one element. ",
    "start": "1316800",
    "end": "1323700"
  },
  {
    "text": "So every element in y is mapped\nby at most one element in x. So we know that all\nthe elements in x",
    "start": "1323700",
    "end": "1331047"
  },
  {
    "text": "are mapped to some element in y. But every element in y cannot\nmap to by more than two times",
    "start": "1331047",
    "end": "1340320"
  },
  {
    "text": "by something in the domain. So we know that this\ninequality holds.",
    "start": "1340320",
    "end": "1345380"
  },
  {
    "text": "OK. For a bijective function, we\nhave that both these properties hold.",
    "start": "1345380",
    "end": "1350500"
  },
  {
    "text": "And we will have an\nequality over here. So if this one is bijective,\nwe have that the cardinalities",
    "start": "1350500",
    "end": "1364070"
  },
  {
    "text": "are equal to one another. And this is also called\nthe bijection rule. ",
    "start": "1364070",
    "end": "1373640"
  },
  {
    "text": "So let's give an\nexample where we want to find out how many\nways there are to select",
    "start": "1373640",
    "end": "1383789"
  },
  {
    "text": "12 doughnuts from 5 varieties. So let's see how\nthat would work.",
    "start": "1383790",
    "end": "1388817"
  },
  {
    "text": "And the whole idea\nis that we're going to define the set that\nwe want to count, which",
    "start": "1388817",
    "end": "1394320"
  },
  {
    "text": "is all these possible\nconfigurations of doughnuts over five varieties of flavors.",
    "start": "1394320",
    "end": "1399455"
  },
  {
    "text": " And then we're going to map\nthese to another structure",
    "start": "1399455",
    "end": "1407390"
  },
  {
    "text": "that we can understand\na little be better. So let's do this. ",
    "start": "1407390",
    "end": "1414279"
  },
  {
    "text": "So as an example, let x be all\nthe ways to select, say, 12",
    "start": "1414280",
    "end": "1429660"
  },
  {
    "text": "doughnuts from 5 varieties.",
    "start": "1429660",
    "end": "1435719"
  },
  {
    "text": "So let's give an example. ",
    "start": "1435719",
    "end": "1440780"
  },
  {
    "text": "For example, we may\nhave 2 doughnuts. And they are in the\nchocolate flavored basket.",
    "start": "1440780",
    "end": "1448195"
  },
  {
    "text": "So we have chocolate.  And suppose we have no doughnuts\nin the lemon filled version",
    "start": "1448195",
    "end": "1459537"
  },
  {
    "text": "of a doughnut.  Suppose he have a whole\nbunch of doughnuts,",
    "start": "1459537",
    "end": "1467000"
  },
  {
    "text": "say 6 of those,\nthat are with sugar.",
    "start": "1467000",
    "end": "1472590"
  },
  {
    "text": "We have some that\nare glazed, say 2. ",
    "start": "1472590",
    "end": "1478050"
  },
  {
    "text": "And finally, we have just a\ncouple of plain doughnuts.",
    "start": "1478050",
    "end": "1484120"
  },
  {
    "text": "So this would be a\nconfiguration that is in x. Because we have 1, 2,\n3, 4, 5, varieties.",
    "start": "1484120",
    "end": "1490490"
  },
  {
    "text": "And we have 12 doughnuts, 2 over\nhere, 6 here, 2, and another 2,",
    "start": "1490490",
    "end": "1497100"
  },
  {
    "text": "12 doughnuts, that are selected\nfrom these 5 varieties.",
    "start": "1497100",
    "end": "1502179"
  },
  {
    "text": "Now, if you are going to try to\nrepresent such a configuration,",
    "start": "1502180",
    "end": "1508320"
  },
  {
    "text": "that's usually how we\nthink about counting, then we may map this\nto a 01 sequence.",
    "start": "1508320",
    "end": "1514460"
  },
  {
    "text": "So how do we do this? We can just map the\ndoughnuts two 0s, the divider",
    "start": "1514460",
    "end": "1519700"
  },
  {
    "text": "between the two baskets as a 1. So this is a 1. Then we have no 0\nbetween these two ones,",
    "start": "1519700",
    "end": "1529030"
  },
  {
    "text": "because there are no doughnuts\nin the lemon filled basket. So we have one that is the\nmapping from this divider",
    "start": "1529030",
    "end": "1536510"
  },
  {
    "text": "field over here. We've got 6 0s. ",
    "start": "1536510",
    "end": "1541872"
  },
  {
    "text": "We have another one that\nis this divider, two 0s, two doughnuts in the\nglazed version, and so on.",
    "start": "1541872",
    "end": "1550250"
  },
  {
    "text": "So what do we see here? We have a 01 sequence where we\nhave 12 zeros and we have 1, 2,",
    "start": "1550250",
    "end": "1559790"
  },
  {
    "text": "3, 4 1s. And we can see that this\nmapping is actually bijective.",
    "start": "1559790",
    "end": "1567190"
  },
  {
    "text": "Because if I have two 0s, I\ncan map them back to doughnuts.",
    "start": "1567190",
    "end": "1573320"
  },
  {
    "text": "The 1 I can map back to the\ndivider between two baskets. So let y be the set of all\nkinds of configurations of 12,",
    "start": "1573320",
    "end": "1587390"
  },
  {
    "text": "all kinds of sequences. Oops, maybe I will\nnot take this one out.",
    "start": "1587390",
    "end": "1592815"
  },
  {
    "text": "Let's do this one.  So if you are going\nto define y as the set",
    "start": "1592815",
    "end": "1607529"
  },
  {
    "text": "of all 16-bit sequences\nwith exactly four 1s,",
    "start": "1607530",
    "end": "1622280"
  },
  {
    "text": "then we know that by\nthe bijection rule, we have created this\nbijection over here,",
    "start": "1622280",
    "end": "1628279"
  },
  {
    "text": "that the cardinalities of\nx and y are exactly equal. So now we know that\nby the bijection rule,",
    "start": "1628280",
    "end": "1635530"
  },
  {
    "text": "we have been able to count\nthe number of elements in x by counting something else,\nwhich is really how we proceed",
    "start": "1635530",
    "end": "1642600"
  },
  {
    "text": "in these types of proofs. So we are now able to just\ncount these types of objects.",
    "start": "1642600",
    "end": "1650150"
  },
  {
    "text": "And later on next lecture,\nwe'll actually figure out a formula for this one.",
    "start": "1650150",
    "end": "1657110"
  },
  {
    "text": "So this is an example of how\nwe can use the bijection rule. ",
    "start": "1657110",
    "end": "1662460"
  },
  {
    "text": "Another example is one in which\nwe are going to count subsets. ",
    "start": "1662460",
    "end": "1672510"
  },
  {
    "start": "1671000",
    "end": "1923000"
  },
  {
    "text": "So we'll give a lot of examples\nthrough these two lectures. And also the problem\nset, as you will see,",
    "start": "1672510",
    "end": "1678040"
  },
  {
    "text": "will have a lot of small\nlittle parts with all kinds of countings that you will need\nto do applying different rules.",
    "start": "1678040",
    "end": "1685740"
  },
  {
    "text": " So let's talk about how to\ncount subsets of a set x.",
    "start": "1685740",
    "end": "1695860"
  },
  {
    "text": "So what we want is a\nbijection from subsets",
    "start": "1695860",
    "end": "1705630"
  },
  {
    "text": "of a set x containing\nof, say, 1 up to n, so the integers 1 up\nto n, to n-bit sequences.",
    "start": "1705630",
    "end": "1717130"
  },
  {
    "text": "We know that we\ncan do this if you define a bijection as follows. ",
    "start": "1717130",
    "end": "1723800"
  },
  {
    "text": "So we map a subset\nS under a mapping",
    "start": "1723800",
    "end": "1730880"
  },
  {
    "text": "f to a bit sequence, b1,\nb1, all the way to bn.",
    "start": "1730880",
    "end": "1738960"
  },
  {
    "text": "If I add the\nfollowing relation, bi is computed as either a 1\nor a 0, it's computed as a 1",
    "start": "1738960",
    "end": "1747770"
  },
  {
    "text": "if i is in S. And it's\na 0 if i is not in S.",
    "start": "1747770",
    "end": "1756320"
  },
  {
    "text": "Now, we know that\nthis is a bijection. So if we have a bit\nsequence, then we",
    "start": "1756320",
    "end": "1761330"
  },
  {
    "text": "can construct from this mapping\nthe corresponding subset. If you have a subset,\nwe can use this mapping",
    "start": "1761330",
    "end": "1768620"
  },
  {
    "text": "to construct the\ncorresponding bit sequence. ",
    "start": "1768620",
    "end": "1778840"
  },
  {
    "text": "So how many n-bit\nsequences are there?",
    "start": "1778840",
    "end": "1783890"
  },
  {
    "text": " Well, there are 2 to the\npower n n-bit sequences.",
    "start": "1783890",
    "end": "1792789"
  },
  {
    "text": "Why is that? Well, we have two choices\nfor b1, a 0 or a 1, two choices for b2,\n0 or a 1, and so on.",
    "start": "1792790",
    "end": "1800299"
  },
  {
    "text": "So we have 2 times 2\ntimes 2 choices over here.",
    "start": "1800300",
    "end": "1807050"
  },
  {
    "text": "So we have 2 to the power n\nchoices for a bit sequence.",
    "start": "1807050",
    "end": "1812710"
  },
  {
    "text": "So there are 2 to the power\nof n number of bit sequences. And this is actually equal.",
    "start": "1812710",
    "end": "1818370"
  },
  {
    "text": "Because of this bijection rule\nthat we have described over here, this is equal to the\ntotal number of possible ways",
    "start": "1818370",
    "end": "1826160"
  },
  {
    "text": "to select subsets of x. So this is the number of\nsubsets of an n element set.",
    "start": "1826160",
    "end": "1842790"
  },
  {
    "text": "So this is a very nice\nway to demonstrate how we can use a bijection\nrule to count something",
    "start": "1842790",
    "end": "1850880"
  },
  {
    "text": "that appears to be\nmuch more harder to think about, to grasp. At least for me it's\nharder to grasp.",
    "start": "1850880",
    "end": "1856320"
  },
  {
    "text": "So I have a subset\nthat can be any size in a set of n elements.",
    "start": "1856320",
    "end": "1862750"
  },
  {
    "text": "And now I can find\nthis really easy going mapping that I\ncan show to be bijective and all of a sudden, I\nknow how to count it.",
    "start": "1862750",
    "end": "1869930"
  },
  {
    "text": "Because I can just\nlook at the image and count those types of\nobjects, in this case n-bit",
    "start": "1869930",
    "end": "1876930"
  },
  {
    "text": "sequences. I get a really\neasygoing number that I can compute fairly easily. And now I have counted\nsomething much more complex.",
    "start": "1876930",
    "end": "1885799"
  },
  {
    "text": "So this is how we generally\nwill think about these things. OK.",
    "start": "1885800",
    "end": "1890840"
  },
  {
    "text": "So let's talk now about\nthe generalized pigeon hole",
    "start": "1890840",
    "end": "1895909"
  },
  {
    "text": "principal. So we have covered quite a\nlot of definitions right now.",
    "start": "1895910",
    "end": "1902100"
  },
  {
    "text": "So we explained the\nfunctions mapping rule. So now we come to generalized\npigeon hole principle",
    "start": "1902100",
    "end": "1907750"
  },
  {
    "text": "and a few other rules. OK. ",
    "start": "1907750",
    "end": "1924597"
  },
  {
    "start": "1923000",
    "end": "2208000"
  },
  {
    "text": "So what about a generalized\npigeon hole principal? ",
    "start": "1924597",
    "end": "1937940"
  },
  {
    "text": "This is actually the\nfollowing counting argument.",
    "start": "1937940",
    "end": "1944210"
  },
  {
    "text": "If I know that the\ncardinality of a set x is more than k times the\ncardinality of a set y,",
    "start": "1944210",
    "end": "1954550"
  },
  {
    "text": "what do I know? Well, I know that\nfor all functions f that have domain\nx and range y, I",
    "start": "1954550",
    "end": "1963880"
  },
  {
    "text": "know that there must exist k\nplus 1 different elements of x",
    "start": "1963880",
    "end": "1981610"
  },
  {
    "text": "that are mapped to\nthe same element in y. ",
    "start": "1981610",
    "end": "1995850"
  },
  {
    "text": "And if we take a\nspecific case k=1,",
    "start": "1995850",
    "end": "2001642"
  },
  {
    "text": "we will actually call this\nthe pigeon hole principle. ",
    "start": "2001642",
    "end": "2007929"
  },
  {
    "text": "And let me just demonstrate\nit by the famous example of pigeons. ",
    "start": "2007930",
    "end": "2015270"
  },
  {
    "text": "Well, if I have more pigeons\nthat the number of holes than they can fly into, I know\nfor sure there exists a hole",
    "start": "2015270",
    "end": "2025120"
  },
  {
    "text": "that two pigeons will fit in. So that's where the\nname comes from.",
    "start": "2025120",
    "end": "2033050"
  },
  {
    "text": "So let me write it out. So an example is if I\nhave more than n pigeons,",
    "start": "2033050",
    "end": "2044230"
  },
  {
    "text": "so the pigeons from the set x,\nand say they fly into n holes,",
    "start": "2044230",
    "end": "2054158"
  },
  {
    "text": "and the holes is my\nset y, well, then I know the cardinality of x is\nmore than the cardinality of y.",
    "start": "2054159",
    "end": "2061520"
  },
  {
    "text": "I have more pigeons\nthan there are holes. So I know that at\nleast two pigeons",
    "start": "2061520",
    "end": "2073138"
  },
  {
    "text": "will fly into the same hole. ",
    "start": "2073139",
    "end": "2081239"
  },
  {
    "text": "So for a generalized\ncase, how can we prove something like that? Well, we could use, for example,\nsomething like a contradiction.",
    "start": "2081239",
    "end": "2089350"
  },
  {
    "text": "For example, suppose\nthat for all k plus 1--",
    "start": "2089350",
    "end": "2100250"
  },
  {
    "text": "as opposed to the\nnegation is true. So how do we prove this usually? So assume we have this.",
    "start": "2100250",
    "end": "2106349"
  },
  {
    "text": "We want to prove this. Well, suppose that's not true. So suppose there's a mapping f. So a set for all k plus 1\ndifferent elements of x,",
    "start": "2106350",
    "end": "2114400"
  },
  {
    "text": "well, they are not mapped\nto the same elements in y. But what I really know then\nis that every element in y",
    "start": "2114400",
    "end": "2122710"
  },
  {
    "text": "is mapped to at most by\nk distinct elements of x.",
    "start": "2122710",
    "end": "2127810"
  },
  {
    "text": "So that means that the total\nnumber of elements of x",
    "start": "2127810",
    "end": "2133170"
  },
  {
    "text": "must be at most k times y. And that's not true. It's larger by assumption. So it's a contradiction.",
    "start": "2133170",
    "end": "2139690"
  },
  {
    "text": "So this is a very\ngeneral principle though. And it's worth\nwriting it all out. Because this is a famous rule\nthat we will use in counting.",
    "start": "2139690",
    "end": "2150350"
  },
  {
    "text": "And it leads to\ninterestingly results. OK. So let's give another example.",
    "start": "2150350",
    "end": "2158839"
  },
  {
    "text": "Let's think about Boston. In Boston, we have say a half\na million non-bald people.",
    "start": "2158840",
    "end": "2165349"
  },
  {
    "text": "It turns out that there\nare at least 3 people that",
    "start": "2165350",
    "end": "2172450"
  },
  {
    "text": "have the exact same number\nor hairs on the head. So that's kind of weird. How do we know that?",
    "start": "2172450",
    "end": "2177960"
  },
  {
    "text": "I cannot point out any three\nin Boston that have the same number of hairs.",
    "start": "2177960",
    "end": "2183520"
  },
  {
    "text": "I have no idea. But somehow I can count\nand use this principle and tell you that\nit must be true",
    "start": "2183520",
    "end": "2190060"
  },
  {
    "text": "that in Boston with\n500,000 people, there are 3 of them\nthat are not bald.",
    "start": "2190060",
    "end": "2196990"
  },
  {
    "text": "So we exclude the bald people. Because that would be easy. They all have 0 hairs. But say non-bald\npeople that actually",
    "start": "2196990",
    "end": "2204970"
  },
  {
    "text": "have the same number of hairs. So how do we do that? How can we make such\ntypes of conclusions?",
    "start": "2204970",
    "end": "2212180"
  },
  {
    "start": "2208000",
    "end": "2817000"
  },
  {
    "text": "So say Boston has about\n500,000 and non-bald people.",
    "start": "2212180",
    "end": "2221859"
  },
  {
    "text": "And let's call this set x. Because we're going to use\nthe pigeon hole principle.",
    "start": "2221860",
    "end": "2229550"
  },
  {
    "text": "So our claim is that there\nexists 3 people in Boston such",
    "start": "2229550",
    "end": "2241210"
  },
  {
    "text": "that they have the same\nnumber of hairs on their head.",
    "start": "2241210",
    "end": "2250420"
  },
  {
    "start": "2250420",
    "end": "2256030"
  },
  {
    "text": "So how do we do this? Well, we know that\nwe may generally",
    "start": "2256030",
    "end": "2264829"
  },
  {
    "text": "assume that any\nperson has at most 200,000 hairs on their head.",
    "start": "2264830",
    "end": "2270750"
  },
  {
    "text": "So the number of hairs on\na head is at most 200,000.",
    "start": "2270750",
    "end": "2286630"
  },
  {
    "text": "So how should I define\nmy set y in order to apply this pigeon\nhole principle?",
    "start": "2286630",
    "end": "2292080"
  },
  {
    "text": "So what do we do? So I want to have\nmapping, right,",
    "start": "2292080",
    "end": "2298670"
  },
  {
    "text": "from all the people the set\nx to the number of hairs.",
    "start": "2298670",
    "end": "2309030"
  },
  {
    "text": "So the number of hairs on one's\nhead is going to be the set y.",
    "start": "2309030",
    "end": "2316440"
  },
  {
    "text": "And what do we know? We know that the cardinality\nof y is at most 200,000.",
    "start": "2316440",
    "end": "2323270"
  },
  {
    "text": "Actually, the way we defined\nit it's exactly 200,000.",
    "start": "2323270",
    "end": "2328350"
  },
  {
    "text": "And the set x has a\ncardinality of about 500,000.",
    "start": "2328350",
    "end": "2334950"
  },
  {
    "text": "So what do we know? We can apply our generalized\npigeon hole principle.",
    "start": "2334950",
    "end": "2340060"
  },
  {
    "text": "It's very surprising, because we\nnotice that x is more than two",
    "start": "2340060",
    "end": "2345880"
  },
  {
    "text": "times the cardinality of y. 2 times 200,000 is\nless than 500,000.",
    "start": "2345880",
    "end": "2353080"
  },
  {
    "text": "So I know that by this\nparticular principle,",
    "start": "2353080",
    "end": "2358470"
  },
  {
    "text": "this particular mapping must\nhave the property, because this holds for all mappings, that\nthere are at least k plus 1, 2",
    "start": "2358470",
    "end": "2366020"
  },
  {
    "text": "plus 1, 3 different people\nin Boston out of the set",
    "start": "2366020",
    "end": "2372450"
  },
  {
    "text": "x that are mapped to\nthe same element in y. That means that they\nhave the same number",
    "start": "2372450",
    "end": "2377970"
  },
  {
    "text": "of hairs on their head. So this is kind of\nreally surprising. We can make a statement\nwithout really inspecting",
    "start": "2377970",
    "end": "2385080"
  },
  {
    "text": "every single person's head. But we can still make a\nstatement about the fact",
    "start": "2385080",
    "end": "2392170"
  },
  {
    "text": "that there are 3 different\npeople in Boston that have the exact same number of hairs.",
    "start": "2392170",
    "end": "2398020"
  },
  {
    "text": "So this is an example of\na non-constructive proof. And I will give another one.",
    "start": "2398020",
    "end": "2403450"
  },
  {
    "text": "And it's a very\nimportant principle. There's actually a new technique\nthat you haven't seen before.",
    "start": "2403450",
    "end": "2410400"
  },
  {
    "text": "So far we have been\nconstructively proofing all kinds of properties\nusing induction mainly.",
    "start": "2410400",
    "end": "2416860"
  },
  {
    "text": " And this is what is called\na non-constructive proof.",
    "start": "2416860",
    "end": "2422460"
  },
  {
    "text": "Because I cannot give a specific\nexample that demonstrates that this claim is true.",
    "start": "2422460",
    "end": "2429230"
  },
  {
    "text": "But yet, I've shown\nthat it is true, but in a non-constructive\nway without an example.",
    "start": "2429230",
    "end": "2436210"
  },
  {
    "text": "OK. So what about another one? ",
    "start": "2436210",
    "end": "2444590"
  },
  {
    "text": "For example, we may pick 10\narbitrary two-digit numbers.",
    "start": "2444590",
    "end": "2450200"
  },
  {
    "text": "So pick 10 arbitrary\ndouble-digit numbers.",
    "start": "2450200",
    "end": "2458695"
  },
  {
    "text": " And we can pick any\nsequence of numbers.",
    "start": "2458695",
    "end": "2467805"
  },
  {
    "text": "I'm just picking a few. You may add a few, too. i don't know, 2, 7, 14, I don't\nknow, 31, 25, 60, 92, and so",
    "start": "2467805",
    "end": "2483470"
  },
  {
    "text": "on. So I have 1, 2,\n3, 4, 5, 6, 7, 8,",
    "start": "2483470",
    "end": "2490510"
  },
  {
    "text": "I don't know 9, and another one,\nsay, 91 or something like that.",
    "start": "2490510",
    "end": "2497720"
  },
  {
    "text": "And so I have 10\ndouble-digit numbers. It turns out that I can\nshow to you that there",
    "start": "2497720",
    "end": "2503920"
  },
  {
    "text": "are two subsets that if I look\nat the sum of their elements,",
    "start": "2503920",
    "end": "2510559"
  },
  {
    "text": "so I look at sum of the\nelements of the first subset and I look at the sum of the\nelements of the second subset,",
    "start": "2510560",
    "end": "2517810"
  },
  {
    "text": "that I can find two subsets\nthat have an equal sum. Now if you just look\nat those numbers,",
    "start": "2517810",
    "end": "2523930"
  },
  {
    "text": "and I've now picked 10\narbitrary double-digit numbers, well, usually it's pretty hard\nto figure out whether that's",
    "start": "2523930",
    "end": "2530100"
  },
  {
    "text": "really true or not. Maybe I have been selecting\nthe numbers in such a way that it's easy to see.",
    "start": "2530100",
    "end": "2536460"
  },
  {
    "text": "I mean, we can still try\nto wrap our minds around it and try to really solve\nthis constructively",
    "start": "2536460",
    "end": "2541810"
  },
  {
    "text": "by giving an example. It turns out that we can\nprove this statement. And we will use the\npigeon hole principle.",
    "start": "2541810",
    "end": "2549880"
  },
  {
    "text": "And we do not even have\nto actually-- oh, you have a question? AUDIENCE: [INAUDIBLE].",
    "start": "2549880",
    "end": "2556320"
  },
  {
    "text": "PROFESSOR: Oh, sure. We can make it double-digits. So I could put this here. It'll be 4, 2 of I want to.",
    "start": "2556320",
    "end": "2564020"
  },
  {
    "text": "But yeah, just select\nsomething else. It doesn't really matter. ",
    "start": "2564020",
    "end": "2571931"
  },
  {
    "text": "Yeah. So what we are going to show now\nis that through the pigeon hole principle, we can prove that\nthere are two subsets that",
    "start": "2571931",
    "end": "2579240"
  },
  {
    "text": "have the same sum. And just by inspection it's\na very hard problem to solve.",
    "start": "2579240",
    "end": "2585420"
  },
  {
    "text": "So I did not even\ngive you an example. But we can still show this.",
    "start": "2585420",
    "end": "2590599"
  },
  {
    "text": "So how can we go\nahead with this? So let's think together\nabout this problem.",
    "start": "2590600",
    "end": "2596740"
  },
  {
    "text": "So I want to choose\ntwo sets x and y.",
    "start": "2596740",
    "end": "2602060"
  },
  {
    "text": "And somehow, I want to\nhave a mapping, right, from any double-digit\nset of numbers.",
    "start": "2602060",
    "end": "2614840"
  },
  {
    "text": "Somehow I want to\nmap that to sums. Because that's what\nI'm interested in. I'm interested in sums.",
    "start": "2614840",
    "end": "2620819"
  },
  {
    "text": "And I want to show\nsomething about subsets",
    "start": "2620820",
    "end": "2630990"
  },
  {
    "text": "of these double-digit numbers. So what do I do? I take x as the collection\nof subsets of these numbers.",
    "start": "2630990",
    "end": "2646830"
  },
  {
    "text": " And I want to that there are\nat least two subsets that",
    "start": "2646830",
    "end": "2654040"
  },
  {
    "text": "map to the same sum. So let's first count\nhow many we have here. We already did this.",
    "start": "2654040",
    "end": "2659789"
  },
  {
    "text": "We made a mapping from subsets\nto two binary sequences,",
    "start": "2659790",
    "end": "2666240"
  },
  {
    "text": "bit sequences. In this case, we\nhave 10 numbers. So we have 2 to the power\n10 possible subsets.",
    "start": "2666240",
    "end": "2677660"
  },
  {
    "text": "So this is equal to 1,024. Now y is going to be\nthe sum of a subset.",
    "start": "2677660",
    "end": "2686890"
  },
  {
    "text": "So what do I know? I know that the\npossible sums range",
    "start": "2686890",
    "end": "2695570"
  },
  {
    "text": "from 0 all the way to,\nwell, what's the maximum? sum that I can have\nout of a subset of 10",
    "start": "2695570",
    "end": "2705990"
  },
  {
    "text": "double-digit numbers? So I can select all the\n10 elements in this set.",
    "start": "2705990",
    "end": "2713110"
  },
  {
    "text": "And they are double digit. So at most, they are 99.",
    "start": "2713110",
    "end": "2718410"
  },
  {
    "text": "So I know that\nthis set is really",
    "start": "2718410",
    "end": "2723650"
  },
  {
    "text": "the set of all possible sums. ",
    "start": "2723650",
    "end": "2731630"
  },
  {
    "text": "Now we know that 1,024\nis more than 990. So the cardinality of x is\nmore than the cardinality of y.",
    "start": "2731630",
    "end": "2740980"
  },
  {
    "text": "So by the pigeon\nhole principle, we know that there exists at least\ntwo different elements of x.",
    "start": "2740980",
    "end": "2746960"
  },
  {
    "text": "In our case, there exists\ntwo different subsets that map to the same\nelements in y, the same sum.",
    "start": "2746960",
    "end": "2756599"
  },
  {
    "text": "So now we have shown that\neven though we have not",
    "start": "2756600",
    "end": "2763050"
  },
  {
    "text": "shown any particular\nexample that demonstrates this claim that there are\ntwo different subsets that",
    "start": "2763050",
    "end": "2768620"
  },
  {
    "text": "have the same sum, we\nstill got a proof using counting that this is true.",
    "start": "2768620",
    "end": "2774460"
  },
  {
    "text": "So this is called a\nnon-constructive proof. Let me write it down. ",
    "start": "2774460",
    "end": "2785980"
  },
  {
    "text": "And this is a great way\nof proofing properties.",
    "start": "2785980",
    "end": "2792540"
  },
  {
    "text": " So now we can continue\nwith another definition",
    "start": "2792540",
    "end": "2805280"
  },
  {
    "text": "where we look at\nanother property. Over here, we talks about\nsurjectivity, injectivity,",
    "start": "2805280",
    "end": "2811490"
  },
  {
    "text": "and bijectivity. And now we will talk about\nthe following property.",
    "start": "2811490",
    "end": "2822630"
  },
  {
    "start": "2817000",
    "end": "3008000"
  },
  {
    "text": "We say that a k\nto 1 function is f",
    "start": "2822630",
    "end": "2835559"
  },
  {
    "text": "from x to y actually maps\nactually k elements of x",
    "start": "2835560",
    "end": "2853795"
  },
  {
    "text": "to every element of y.",
    "start": "2853795",
    "end": "2862190"
  },
  {
    "text": "So what do we know? Well, we can have the\nfollowing counting rule",
    "start": "2862190",
    "end": "2869769"
  },
  {
    "text": "that we call the division rule. And it says that if f\nsuch a type of function,",
    "start": "2869770",
    "end": "2877020"
  },
  {
    "text": "so if f is k to 1,\nwell then we know",
    "start": "2877020",
    "end": "2885940"
  },
  {
    "text": "that the cardinality\nof the domain is equal to k times\nthe cardinality y.",
    "start": "2885940",
    "end": "2896170"
  },
  {
    "text": "And why is that? Well, exactly k elements of\nx map to each element of y. So the first element\nof y, we have",
    "start": "2896170",
    "end": "2903240"
  },
  {
    "text": "k elements of x mapped to it. The second element of y, k\nelements mapped to that one.",
    "start": "2903240",
    "end": "2908680"
  },
  {
    "text": "So we know that the\ndomain is exactly k times the range, k times\nthe size of the range.",
    "start": "2908680",
    "end": "2915930"
  },
  {
    "text": "Now this division rule\nactually generalizes",
    "start": "2915930",
    "end": "2921829"
  },
  {
    "text": "the bijection rule,\nwhich I've put over there, the bijection rule.",
    "start": "2921830",
    "end": "2928010"
  },
  {
    "text": " And why is that?",
    "start": "2928010",
    "end": "2933030"
  },
  {
    "text": "Well, that's because a function\nis a bijection if and only",
    "start": "2933030",
    "end": "2939520"
  },
  {
    "text": "if it is actually 1 to 1.",
    "start": "2939520",
    "end": "2945720"
  },
  {
    "text": "So if you replace k by 1, we\nhave that exactly one element",
    "start": "2945720",
    "end": "2951340"
  },
  {
    "text": "of x is mapped to\nevery element in y. And that's the definition\nof a bijection.",
    "start": "2951340",
    "end": "2957080"
  },
  {
    "text": "And the bijection rule says\nthat if you have a bijection, then the cardinality\nof the domain",
    "start": "2957080",
    "end": "2963000"
  },
  {
    "text": "is equal to the cardinality\nof the range, so for k equals 1 here.",
    "start": "2963000",
    "end": "2969349"
  },
  {
    "text": "So let's give an example\non how this works. I think we can take\nthis out actually.",
    "start": "2969350",
    "end": "2978993"
  },
  {
    "text": " So let's give an example\nusing a chessboard,",
    "start": "2978993",
    "end": "2986430"
  },
  {
    "text": "where we have 2 identical rooks\nand we want to count the number",
    "start": "2986430",
    "end": "2991859"
  },
  {
    "text": "of ways we can put them on the\nchessboard in such a way that",
    "start": "2991860",
    "end": "2997060"
  },
  {
    "text": "the 2 rooks cannot\nsee one another, meaning that the rooks are on\ndifferent rows and on different",
    "start": "2997060",
    "end": "3006039"
  },
  {
    "text": "columns. So let's give an example. So the example is like this.",
    "start": "3006040",
    "end": "3011700"
  },
  {
    "start": "3008000",
    "end": "3599000"
  },
  {
    "text": "So how many ways do we have\nto place 2 identical rooks",
    "start": "3011700",
    "end": "3032160"
  },
  {
    "text": "on a chessboard in such a\nway that no row or column",
    "start": "3032160",
    "end": "3045734"
  },
  {
    "text": "is shared? ",
    "start": "3045735",
    "end": "3050820"
  },
  {
    "text": "So how can we do this? Well, for example, let's\nlook at a chessboard.",
    "start": "3050820",
    "end": "3059750"
  },
  {
    "text": " And suppose we have a rook\nover here and a rook over here.",
    "start": "3059750",
    "end": "3069980"
  },
  {
    "text": "And say the first rook is\non row 1 and on column 1.",
    "start": "3069980",
    "end": "3078250"
  },
  {
    "text": "And the second rook is\non row 2, R2, on row R2,",
    "start": "3078250",
    "end": "3085050"
  },
  {
    "text": "and on the column\nthat is indexed by C2.",
    "start": "3085050",
    "end": "3091280"
  },
  {
    "text": "So how can we describe\nsuch configurations? Well, I could describe this\nby using a sequence in which I",
    "start": "3091280",
    "end": "3100230"
  },
  {
    "text": "look at the placement\nof the first rook, and then describe the\nplacement of the second rook. So I may have r1, c1,\nand then r2 and c2.",
    "start": "3100230",
    "end": "3111400"
  },
  {
    "text": "So this could be\na way to describe the positioning of these rooks.",
    "start": "3111400",
    "end": "3117829"
  },
  {
    "text": "And I could create a mapping\nf that is doing this for me.",
    "start": "3117830",
    "end": "3123470"
  },
  {
    "text": "And so if I call this\nan example of a valid.",
    "start": "3123470",
    "end": "3131210"
  },
  {
    "text": " So let y be the set of\nvalid rook configuration.",
    "start": "3131210",
    "end": "3137200"
  },
  {
    "text": "And this is one example of it. So this is part of this set. ",
    "start": "3137200",
    "end": "3150380"
  },
  {
    "text": "And if I define x\nas all the sequences",
    "start": "3150380",
    "end": "3164509"
  },
  {
    "text": "r1, c1, r2, and c2 such that,\nwell, the rook over here",
    "start": "3164510",
    "end": "3173160"
  },
  {
    "text": "does not share a row\nwith the rook that is described by this position. So r1 is not equal to r2.",
    "start": "3173160",
    "end": "3180800"
  },
  {
    "text": "And they also do\nnot share a column. So the first rook has column c1.",
    "start": "3180800",
    "end": "3187790"
  },
  {
    "text": "The second one is on column c2. So also c1 and c2\nshould be different.",
    "start": "3187790",
    "end": "3193555"
  },
  {
    "text": " So these sequences are\nreally placements, right?",
    "start": "3193555",
    "end": "3199080"
  },
  {
    "text": "So this describes rook 1. This describes the rook 2.",
    "start": "3199080",
    "end": "3206680"
  },
  {
    "text": "And the whole combination\nis really a placement. ",
    "start": "3206680",
    "end": "3216950"
  },
  {
    "text": "So now I have\ndescribed the function f that maps a sequence\nthat describes the position of the first\nand the second rook,",
    "start": "3216950",
    "end": "3225710"
  },
  {
    "text": "maps such a sequence\nto an element in y, which is a valid\nrook configuration.",
    "start": "3225710",
    "end": "3232829"
  },
  {
    "text": "So now let's have a look at how\nwe can apply the division rule. So is this function bijective?",
    "start": "3232830",
    "end": "3242380"
  },
  {
    "text": "Is that true?  So is it true that every--\nso I have a mapping that",
    "start": "3242380",
    "end": "3251300"
  },
  {
    "text": "goes from here to here. But is it true that every\nvalid rook configuration",
    "start": "3251300",
    "end": "3258510"
  },
  {
    "text": "is mapped to exactly once? Is that true?",
    "start": "3258510",
    "end": "3263870"
  },
  {
    "text": "Is this the only sequence that\nwill map using this function f",
    "start": "3263870",
    "end": "3273960"
  },
  {
    "text": "into a valid configuration?  Yup. It's true.",
    "start": "3273960",
    "end": "3280089"
  },
  {
    "text": "So you can switch\nrook 1 and rook 2.",
    "start": "3280090",
    "end": "3285140"
  },
  {
    "text": "And it will still look the same. The 2 rooks are identical. They look exactly the same. So we have, again, the\nexact same configuration.",
    "start": "3285140",
    "end": "3293520"
  },
  {
    "text": "And we can see that this\nparticular sequence also",
    "start": "3293520",
    "end": "3302150"
  },
  {
    "text": "maps to the same. It just swap the positions. So we have r2, c2,\nr1, and c1 also maps",
    "start": "3302150",
    "end": "3311550"
  },
  {
    "text": "under f to the\nsame configuration. And those are the\nexact 2 possibilities",
    "start": "3311550",
    "end": "3318960"
  },
  {
    "text": "that can happen that map\nto this configuration.",
    "start": "3318960",
    "end": "3324230"
  },
  {
    "text": "Every valid configuration is\nmapped to exactly 2 times. So now we can use\nthe division rule.",
    "start": "3324230",
    "end": "3330780"
  },
  {
    "text": "Because f is 2 to 1. So f is 2 to 1.",
    "start": "3330780",
    "end": "3339240"
  },
  {
    "text": "What does that mean if you\napply the division rule? It means that the cardinality\nof all those sequences",
    "start": "3339240",
    "end": "3347220"
  },
  {
    "text": "is equal to 2 times\nthe cardinality of valid configurations.",
    "start": "3347220",
    "end": "3352420"
  },
  {
    "text": "Or in other words,\nthe cardinality for all the valid configurations\nis the cardinality",
    "start": "3352420",
    "end": "3359140"
  },
  {
    "text": "of all those possible\nsequences divided by 2. So now we can start\ncounting x over here.",
    "start": "3359140",
    "end": "3367720"
  },
  {
    "text": "So how do we do that? Well, I'm going to use something\nsimilar as what we did when we were counting permutations.",
    "start": "3367720",
    "end": "3373640"
  },
  {
    "text": "And we'll generalize\nit in a moment. So how do we go about this?",
    "start": "3373640",
    "end": "3378880"
  },
  {
    "text": "Well, let's have a look. If I have r1, c1, and r2, and\nc2, so this is a sequence.",
    "start": "3378880",
    "end": "3392410"
  },
  {
    "text": "So how many choices do I have? Well, a chessboard has 8 rows.",
    "start": "3392410",
    "end": "3398130"
  },
  {
    "text": "So I can choose 8 possible\nrows for the first rook.",
    "start": "3398130",
    "end": "3406619"
  },
  {
    "text": "It also has 8 columns. So I have 8 possible\nchoices for the column.",
    "start": "3406620",
    "end": "3412190"
  },
  {
    "text": "But what about the second rook? Well, the second rook can\nbe on any row except the one",
    "start": "3412190",
    "end": "3418690"
  },
  {
    "text": "that I've already\nselected for the first. So this 8 minus 1, we have\n7 possible choices to select",
    "start": "3418690",
    "end": "3427790"
  },
  {
    "text": "the row for the second rook. It must be different from the\none that was already selected. And I have 7 possible choices.",
    "start": "3427790",
    "end": "3434620"
  },
  {
    "text": "And similarly for\nthis particular column as well, the column\nhas to be different.",
    "start": "3434620",
    "end": "3439990"
  },
  {
    "text": "So how many choices do I have? Well, it's not 8. It's one less, because\nI've already selected",
    "start": "3439990",
    "end": "3445440"
  },
  {
    "text": "the one for the first rook. So I have 7 choices.",
    "start": "3445440",
    "end": "3451100"
  },
  {
    "text": "So the cardinality of x is\nactually equal to 8 times",
    "start": "3451100",
    "end": "3456200"
  },
  {
    "text": "8 times 7 times 7. So it's 8 times 7\nsquared divided by 2.",
    "start": "3456200",
    "end": "3463520"
  },
  {
    "text": "So now we have to counted,\nby using the division rule, we have to the divide this by 2.",
    "start": "3463520",
    "end": "3469065"
  },
  {
    "text": "We have counted the total\nnumber of valid configurations. ",
    "start": "3469065",
    "end": "3475460"
  },
  {
    "text": "So now we are going to\ngeneralize this principle that we have talked about here.",
    "start": "3475460",
    "end": "3480580"
  },
  {
    "text": "And we will do that\nover here I think.",
    "start": "3480580",
    "end": "3485980"
  },
  {
    "text": "Yup. And that's the\ngeneralized product rule.",
    "start": "3485980",
    "end": "3491494"
  },
  {
    "text": " So the generalized product\nrule is as follows.",
    "start": "3491494",
    "end": "3501460"
  },
  {
    "text": "It's essentially\nsaying that if we have a set of sequences\nof length k, then",
    "start": "3501460",
    "end": "3510950"
  },
  {
    "text": "how can we count those? Well, if we know the\nfollowing properties-- well,",
    "start": "3510950",
    "end": "3516055"
  },
  {
    "text": "let me first write out\nthe generalized product",
    "start": "3516055",
    "end": "3525485"
  },
  {
    "text": "rule is as follows.",
    "start": "3525486",
    "end": "3533050"
  },
  {
    "text": "Let S be a set of\nlength k sequences.",
    "start": "3533050",
    "end": "3543380"
  },
  {
    "text": " Then I know that if there\nare n1 possible first entries",
    "start": "3543380",
    "end": "3566940"
  },
  {
    "text": "and if I know that once I've\nselected my first entry, there are n2 possible second\nentries for each first entry.",
    "start": "3566940",
    "end": "3583567"
  },
  {
    "start": "3583567",
    "end": "3595019"
  },
  {
    "text": "And if I continue\nlike this, my choice for the third term\nin the sequence",
    "start": "3595020",
    "end": "3600710"
  },
  {
    "text": "is I've always n3\npossible choices",
    "start": "3600710",
    "end": "3607930"
  },
  {
    "text": "given my selection for\nthe first 2 entries. So if I have that property\nthat continues in that way,",
    "start": "3607930",
    "end": "3614950"
  },
  {
    "text": "so let me write it out. So we have n3\npossible third entries",
    "start": "3614950",
    "end": "3626458"
  },
  {
    "text": "for each combination\nin this case of first",
    "start": "3626458",
    "end": "3639210"
  },
  {
    "text": "together with second entries.",
    "start": "3639210",
    "end": "3645369"
  },
  {
    "text": "And if I continue this\nall the way to nk, so nk possible kth entries\nfor each combination of all",
    "start": "3645370",
    "end": "3654809"
  },
  {
    "text": "the previous\nentries, then I know",
    "start": "3654810",
    "end": "3662070"
  },
  {
    "text": "that the set S\ncan be counted as, well, I've n1 possible\nchoices for the first entry.",
    "start": "3662070",
    "end": "3669559"
  },
  {
    "text": "Once I've chosen\nto fix that one, I have n2 possible choices\nfor the second, then",
    "start": "3669560",
    "end": "3675010"
  },
  {
    "text": "n3 possible choice\nfor the third. And I go all the way to nk.",
    "start": "3675010",
    "end": "3681520"
  },
  {
    "text": "Well, let's first talk about\nit from the perspective of the chess problem here. I got 8 possible choices for r1.",
    "start": "3681520",
    "end": "3689960"
  },
  {
    "text": "Given r1, I don't care. I still have 8 possible\nchoices for the column here.",
    "start": "3689960",
    "end": "3695289"
  },
  {
    "text": "So I have 8 choices here. But for the third one, once\nI have selected r1 and c1,",
    "start": "3695290",
    "end": "3702220"
  },
  {
    "text": "I only have 7 choices left for\nr2 and 7 choices left for c2.",
    "start": "3702220",
    "end": "3708160"
  },
  {
    "text": "So that's an\nexample where we use this particular\ngeneralized product rule.",
    "start": "3708160",
    "end": "3714160"
  },
  {
    "text": "Also when we were counting\nthe number of permutations,",
    "start": "3714160",
    "end": "3719210"
  },
  {
    "text": "we were saying we can\nfix the first entry of a permutation\nin n ways if I have",
    "start": "3719210",
    "end": "3724740"
  },
  {
    "text": "a permutation for n elements. And then I have the second\nentry, the second term,",
    "start": "3724740",
    "end": "3733640"
  },
  {
    "text": "of a permutation has\nonly n minus 1 choices. Because I've already chosen one.",
    "start": "3733640",
    "end": "3738770"
  },
  {
    "text": "And the next one has\nn minus 3 choices. Because I've already\nselected 2 of them. So I have only n\nminus 2 choices left.",
    "start": "3738770",
    "end": "3745350"
  },
  {
    "text": "Then I have n minus 3 choices. Because I've already\nselected 3 and so on. And I get n factorial.",
    "start": "3745350",
    "end": "3751869"
  },
  {
    "text": "So that's the same kind of\nprinciple that we have here. So let me give an example where\nwe can see how this works.",
    "start": "3751870",
    "end": "3762170"
  },
  {
    "start": "3762170",
    "end": "3777549"
  },
  {
    "text": "So what do we do? In this example, we want to\ncount the number of committees.",
    "start": "3777550",
    "end": "3783920"
  },
  {
    "text": "So it's the exact\nsame kind of principle that we are going to talk about. So we are going to count the\nnumber of communities described",
    "start": "3783920",
    "end": "3793390"
  },
  {
    "text": "by sequence x, y, z, where\nx the first one is, say, the leader of the committee.",
    "start": "3793390",
    "end": "3801560"
  },
  {
    "text": "The second one\nindicates the secretary. The third one is\nsome consultant.",
    "start": "3801560",
    "end": "3809200"
  },
  {
    "text": "So they're all different. They have all different roles. And such a committee is\nelected from n members.",
    "start": "3809200",
    "end": "3821335"
  },
  {
    "text": " And in how many\nways can I do this?",
    "start": "3821335",
    "end": "3826690"
  },
  {
    "text": "Well, I have n ways to choose\nmy first term in the sequence.",
    "start": "3826690",
    "end": "3833290"
  },
  {
    "text": "I have n ways to\nchoose the leader. So there's n ways to choose x.",
    "start": "3833290",
    "end": "3839235"
  },
  {
    "text": " How many ways do I\nhave to choose y?",
    "start": "3839235",
    "end": "3844680"
  },
  {
    "text": "Well, if I've chosen\nalready a leader, I need to choose someone else. So I have n minus 1 members\nleft, n minus 1 ways",
    "start": "3844680",
    "end": "3853140"
  },
  {
    "text": "to choose y.  I'm just not\nallowed to choose x.",
    "start": "3853140",
    "end": "3860550"
  },
  {
    "text": " And then I will\nhave n minus 2 ways",
    "start": "3860550",
    "end": "3867000"
  },
  {
    "text": "to choose a z except x and y.",
    "start": "3867000",
    "end": "3874100"
  },
  {
    "text": "And so for each x, I have only\nn minus 1 ways to choose y.",
    "start": "3874100",
    "end": "3879270"
  },
  {
    "text": "For each x and y, I have only\nn minus 2 ways to choose z. So if I multiply\nall this together,",
    "start": "3879270",
    "end": "3886640"
  },
  {
    "text": "I get n times n minus\n1 times n minus 2 to choose all these\ncommittee-- this",
    "start": "3886640",
    "end": "3894609"
  },
  {
    "text": "is the total number\nof possible committees that I can select from an\nn member set of people.",
    "start": "3894610",
    "end": "3901960"
  },
  {
    "text": "So let's go to a little bit\nof a different example that uses the same principle.",
    "start": "3901960",
    "end": "3907510"
  },
  {
    "text": " OK. Let's make some space.",
    "start": "3907510",
    "end": "3914030"
  },
  {
    "text": " In the second problem,\nI will define to you",
    "start": "3914030",
    "end": "3922790"
  },
  {
    "text": "a defective dollar bill. It's not really defective. But it's a property that we\nwill assign to dollar bill.",
    "start": "3922790",
    "end": "3930420"
  },
  {
    "text": "And you can check for\nyourself whether you have one in your wallet. So let's define a\ndefective dollar bill",
    "start": "3930420",
    "end": "3938230"
  },
  {
    "text": "to have the property\nthat if you look at the 8-bit serial\nnumber, some of the digits",
    "start": "3938230",
    "end": "3953540"
  },
  {
    "text": "appear more than once. So some digit appears\nmore than once",
    "start": "3953540",
    "end": "3971560"
  },
  {
    "text": "in the 8-bit serial number. ",
    "start": "3971560",
    "end": "3979430"
  },
  {
    "text": "So you can check our own wallet\nand check for your $1 bills and check whether you\nhave a defective dollar.",
    "start": "3979430",
    "end": "3984490"
  },
  {
    "text": "This seems to be a pretty\nspecific and rare property, right? Well, check you dollar bills.",
    "start": "3984490",
    "end": "3993560"
  },
  {
    "text": "You'll figure out that you have\nprobably a defective dollar bill in your wallet. So that's kind of weird.",
    "start": "3993560",
    "end": "3998579"
  },
  {
    "text": "But it seems this property. If you look at\nthat, it seems to be something that is\nmaybe a little bit more",
    "start": "3998580",
    "end": "4004620"
  },
  {
    "text": "common than we thought it is. It seems to be so special. So let's do a counting\nargument and find out",
    "start": "4004620",
    "end": "4010850"
  },
  {
    "text": "what's happening here. So let's look at a fraction\nof the non-defective.",
    "start": "4010850",
    "end": "4019510"
  },
  {
    "text": "So we are counting the opposite,\nthe non-defective bills.",
    "start": "4019510",
    "end": "4027540"
  },
  {
    "text": "Well, that's the number of\nnon-defective serial numbers",
    "start": "4027540",
    "end": "4041090"
  },
  {
    "text": "divided by the total\nnumber of serial numbers.",
    "start": "4041090",
    "end": "4047380"
  },
  {
    "text": " And let's call these small\nx and y and count these.",
    "start": "4047380",
    "end": "4060030"
  },
  {
    "text": "So let's see.  So first of all, let's count y.",
    "start": "4060030",
    "end": "4066250"
  },
  {
    "text": "Well, that's easy, I have 8\ndigits in my serial number. So I have 10 choices\nfor the first digit,",
    "start": "4066250",
    "end": "4072290"
  },
  {
    "text": "10 choices for the\nsecond one, and so on. In total, I have\n10 times 10 times 10 to the power 8 choices.",
    "start": "4072290",
    "end": "4079580"
  },
  {
    "text": "What about x? Well, I'm using, again,\nour generalized product",
    "start": "4079580",
    "end": "4088040"
  },
  {
    "text": "rule over here. Well, if I'm going to have\na non-defective dollar bill,",
    "start": "4088040",
    "end": "4094070"
  },
  {
    "text": "then all the digits in\nthe 8 digit serial number have to be different.",
    "start": "4094070",
    "end": "4100099"
  },
  {
    "text": "So for the first digit,\nI have 10 choices. Now that I've selected\nmy first digit,",
    "start": "4100100",
    "end": "4105649"
  },
  {
    "text": "I have 9 digits for my second\nchoice for my second digit",
    "start": "4105649",
    "end": "4112290"
  },
  {
    "text": "in the serial number. Then I have 8\npossible choices, 7, because I've already selected 3.",
    "start": "4112290",
    "end": "4117950"
  },
  {
    "text": "And I cannot choose\nthose anymore-- times 6 times 5 times 4 times 3.",
    "start": "4117950",
    "end": "4123759"
  },
  {
    "text": "And now I have chosen an 8\ndigit serial number in which all the digits are different.",
    "start": "4123760",
    "end": "4131759"
  },
  {
    "text": "OK So how many are these? Well, this is actually\nequal to 10 factorial",
    "start": "4131760",
    "end": "4138500"
  },
  {
    "text": "divided by 2 factorial. And it turns out to be\nsomething like 1,814,400.",
    "start": "4138500",
    "end": "4148100"
  },
  {
    "text": "possible choices. So now let's look\nat the fraction. It turns out if you\ndivide this by this,",
    "start": "4148100",
    "end": "4155489"
  },
  {
    "text": "you get a really\nvery small fraction. This is actually\nequal to 1.8144%",
    "start": "4155490",
    "end": "4165799"
  },
  {
    "text": "So a very small fraction\nis non-defective. So almost all the dollars\nare sort of defective.",
    "start": "4165800",
    "end": "4172370"
  },
  {
    "text": "It simply means that they\nhave this special property that some digit\noccurs more than once.",
    "start": "4172370",
    "end": "4180434"
  },
  {
    "text": "So it's kind of interesting. So we can already\nsee that by counting,",
    "start": "4180434",
    "end": "4185694"
  },
  {
    "text": "it's sometimes a little\nbit counterintuitive. Because if I would see\nthis particular property,",
    "start": "4185695",
    "end": "4191170"
  },
  {
    "text": "I would in first\ninstance think that it's a very special property. But that's not true. It's very common it turns out.",
    "start": "4191170",
    "end": "4200070"
  },
  {
    "text": "Now a special case of the\ngeneralized product rule is the product rule.",
    "start": "4200070",
    "end": "4206119"
  },
  {
    "text": "And this is defined as follows. We are going to first of all\ndefine a product over sets.",
    "start": "4206120",
    "end": "4213285"
  },
  {
    "text": " The definition is\nthat the product",
    "start": "4213285",
    "end": "4218760"
  },
  {
    "text": "of a set A1 with A2\nup to An is actually",
    "start": "4218760",
    "end": "4226119"
  },
  {
    "text": "equal to the set of sequences. ",
    "start": "4226120",
    "end": "4233170"
  },
  {
    "text": "So the first entry is\nselected from the first set,",
    "start": "4233170",
    "end": "4240929"
  },
  {
    "text": "the second entry is selected\nfrom the second set, and so on. ",
    "start": "4240930",
    "end": "4248630"
  },
  {
    "text": "And now the product\nrule tells us by just applying that\nreasoning over here",
    "start": "4248630",
    "end": "4258469"
  },
  {
    "text": "that the cardinality of the\nproduct of all those sets",
    "start": "4258470",
    "end": "4267190"
  },
  {
    "text": "is actually equal to the\ncardinality of the first set",
    "start": "4267190",
    "end": "4273739"
  },
  {
    "text": "multiplied by the\ncardinality of the second set and so on up to the\ncardinality of the last set.",
    "start": "4273740",
    "end": "4280210"
  },
  {
    "text": "Because we have this\nnumber of choices for the very first\nelement over here,",
    "start": "4280210",
    "end": "4285960"
  },
  {
    "text": "this number of choices for\nthe second one, and so on. And we apply that rule, and we\nsee that this is the result.",
    "start": "4285960",
    "end": "4293860"
  },
  {
    "text": "Now when we use this, in\nspecific to count all the n-bit sequences, we have exactly\n2 choices for the first bit.",
    "start": "4293860",
    "end": "4303969"
  },
  {
    "text": "We have to set 0,1 in our\nexample times the set 0, 1 over",
    "start": "4303970",
    "end": "4310010"
  },
  {
    "text": "here and so on. And that's how we derived that\nwe have 2 times 2, 2 the power",
    "start": "4310010",
    "end": "4320270"
  },
  {
    "text": "n choices for an n-bit sequence. So now we come to the sum rule.",
    "start": "4320270",
    "end": "4327310"
  },
  {
    "text": "And we will give an\nexample for that. So the sum rule states\nthat if you look at sets,",
    "start": "4327310",
    "end": "4335770"
  },
  {
    "text": "then we may be able\nto count their union. And we will consider\na very specific case. In the next lecture, we will\ntalk about the general case.",
    "start": "4335770",
    "end": "4345710"
  },
  {
    "text": "So the sum rule is the\nfollowing counting mechanism.",
    "start": "4345710",
    "end": "4353500"
  },
  {
    "text": "If the sets A1 up to\nAn are all disjoint,",
    "start": "4353500",
    "end": "4361020"
  },
  {
    "text": "so they are disjoint\nsets, then we",
    "start": "4361020",
    "end": "4368010"
  },
  {
    "text": "know that if I try to count\nthe union of all those set,",
    "start": "4368010",
    "end": "4374579"
  },
  {
    "text": "it's going to be the sum of\nthe separate cardinalities. So let me just write\nit out actually.",
    "start": "4374580",
    "end": "4382830"
  },
  {
    "text": "So it's the cardinality of\nA1 plus A2 all the way to An.",
    "start": "4382830",
    "end": "4392250"
  },
  {
    "text": "Why is this? Well, all the sets are disjoint. So there are no\nintersections between sets",
    "start": "4392250",
    "end": "4401270"
  },
  {
    "text": "that contain elements. All the intersections are empty. So counting the union is really\ncounting each separate set.",
    "start": "4401270",
    "end": "4410310"
  },
  {
    "text": "And that's why we have the sum. And in the next lecture, we\nwill talk about inclusion, exclusion rule.",
    "start": "4410310",
    "end": "4416484"
  },
  {
    "text": "And then we will\ntake into account that we have intersections\nthat are not empty. But let's give now\nan example where",
    "start": "4416484",
    "end": "4424110"
  },
  {
    "text": "we count the number of passwords\nwith certain properties.",
    "start": "4424110",
    "end": "4432900"
  },
  {
    "text": "And we will apply all these\ndifferent rules together. And that's the type\nof problems that you",
    "start": "4432900",
    "end": "4438450"
  },
  {
    "text": "would like to be able to solve. So in our last example\nhere, we have that passwords",
    "start": "4438450",
    "end": "4448380"
  },
  {
    "text": "have the following property. ",
    "start": "4448380",
    "end": "4454850"
  },
  {
    "text": "They are 6 to 8 symbols. ",
    "start": "4454850",
    "end": "4462110"
  },
  {
    "text": "So that's property 1. We have that the\nvery first symbol",
    "start": "4462110",
    "end": "4467920"
  },
  {
    "text": "must be special in the\nsense that it is a letter. ",
    "start": "4467920",
    "end": "4477180"
  },
  {
    "text": "And this can an\nupper or lowercase.",
    "start": "4477180",
    "end": "4482320"
  },
  {
    "text": " And say that the other symbols\nare actually letters or digits.",
    "start": "4482320",
    "end": "4499180"
  },
  {
    "text": "So let's count the total\nnumber of possible passwords. We're going to use the sum rule.",
    "start": "4499180",
    "end": "4506150"
  },
  {
    "text": "So let's define\nwhat kinds of sets we are taking the symbols from.",
    "start": "4506150",
    "end": "4513480"
  },
  {
    "text": "So the first set is\nfor the first symbol, which we call f or first.",
    "start": "4513480",
    "end": "4521030"
  },
  {
    "text": "We have all the letters\na, b, c in lowercase, and then all of\nthem in uppercase.",
    "start": "4521030",
    "end": "4527270"
  },
  {
    "text": " And in total, we have\n52 elements in this set.",
    "start": "4527270",
    "end": "4537900"
  },
  {
    "text": "For the second symbol,\nor the other symbols, we have all these\nletters, but also",
    "start": "4537900",
    "end": "4545760"
  },
  {
    "text": "all the digits, 0, 1, up to 9. And this set actually\nhas cardinality 62.",
    "start": "4545760",
    "end": "4555260"
  },
  {
    "text": "We added 10 digits. So let's talk\nabout-- actually, we",
    "start": "4555260",
    "end": "4565260"
  },
  {
    "text": "like to use this in\nthe sum rule as well. ",
    "start": "4565260",
    "end": "4578600"
  },
  {
    "text": "So how do we count? What kind of possibilities\ndo we really have? So let's describe\nthe set of passwords",
    "start": "4578600",
    "end": "4585170"
  },
  {
    "text": "explicitly in a formula. So let p be the set\nof possible passwords.",
    "start": "4585170",
    "end": "4592331"
  },
  {
    "start": "4592331",
    "end": "4598110"
  },
  {
    "text": "And this one is actually\nequal to-- well, I need to choose a first symbol.",
    "start": "4598110",
    "end": "4605050"
  },
  {
    "text": "And then I need to choose a\nsecond symbol, and a third,",
    "start": "4605050",
    "end": "4611070"
  },
  {
    "text": "and a fourth, and a\nfifth, and a sixth. That's one possibility.",
    "start": "4611070",
    "end": "4616690"
  },
  {
    "text": "I use 6 symbols. I can also use 7 or 8 symbols. But this is one of them.",
    "start": "4616690",
    "end": "4621840"
  },
  {
    "text": " We also denote this\nas S to the power 5.",
    "start": "4621840",
    "end": "4630120"
  },
  {
    "text": "That's an equivalent notation.  The other possibilities\nfor passwords",
    "start": "4630120",
    "end": "4637840"
  },
  {
    "text": "are that we first choose\nan entry from f, a letter.",
    "start": "4637840",
    "end": "4644510"
  },
  {
    "text": "And then we will need to\nchoose another 6 symbols. In total, we have 7.",
    "start": "4644510",
    "end": "4651940"
  },
  {
    "text": "And we have another possibility\nwhere we choose a first symbol, and then we choose\n7 other symbols.",
    "start": "4651940",
    "end": "4659290"
  },
  {
    "text": "So has 8 symbols. This has in total 7. This one has in total 6 symbols. So this covers all the\npossible passwords.",
    "start": "4659290",
    "end": "4667730"
  },
  {
    "text": "So let's count them. We know that these sets\nare all the different. They are distinct.",
    "start": "4667730",
    "end": "4674590"
  },
  {
    "text": "These are sequences that have\n6 entries, 7, and 8 entries. So if you look at\nthe cardinality of P,",
    "start": "4674590",
    "end": "4684340"
  },
  {
    "text": "it's actually equal to\nthe sum by the sum rule that we just\ndescribed over there,",
    "start": "4684340",
    "end": "4692130"
  },
  {
    "text": "is equal to the very first\none, f times S to the power",
    "start": "4692130",
    "end": "4697900"
  },
  {
    "text": "5 plus the cardinality\nof the product",
    "start": "4697900",
    "end": "4703320"
  },
  {
    "text": "of f with S to the power 6. And we have f times\nS to the power 7.",
    "start": "4703320",
    "end": "4717179"
  },
  {
    "text": "So this is simply by\napplication of the sum rule. And now we can apply\nthe product rule",
    "start": "4717180",
    "end": "4723390"
  },
  {
    "text": "very simply, which is this one. So that's equal\nto the cardinality",
    "start": "4723390",
    "end": "4729120"
  },
  {
    "text": "of f times the cardinality\nof S to the power 5.",
    "start": "4729120",
    "end": "4736100"
  },
  {
    "text": "And then we have the same\nrule applied to this one. It's the commonality of\nf times the cardinality",
    "start": "4736100",
    "end": "4741980"
  },
  {
    "text": "of S to the power 6. And then we have the cardinality\nof f times the cardinality of S",
    "start": "4741980",
    "end": "4748590"
  },
  {
    "text": "to the power 7.  Now, we simply\nplug-in these numbers.",
    "start": "4748590",
    "end": "4754820"
  },
  {
    "text": "And then you will have the\ntotal number of passwords that you can select from.",
    "start": "4754820",
    "end": "4760020"
  },
  {
    "text": "It turns out to be about 1.8\ntimes 10 to the power 14.",
    "start": "4760020",
    "end": "4767640"
  },
  {
    "text": "So here we have applied both to\nsum rule and the product rule. So in general, you\nwill see that you have to apply multiple\nrules together",
    "start": "4767640",
    "end": "4773620"
  },
  {
    "text": "in order to find an answer\nto your counting problem. And you'll see that\non a problem set.",
    "start": "4773620",
    "end": "4779600"
  },
  {
    "text": "And we will give a few more\nexamples in next lecture. And we will start talking about\nthe generalization of the sum",
    "start": "4779600",
    "end": "4786000"
  },
  {
    "text": "room called inclusion exclusion. And we will give you another\ntype of proof technique called",
    "start": "4786000",
    "end": "4792219"
  },
  {
    "text": "combinatorial proofs. All right. Good luck with the problems. ",
    "start": "4792220",
    "end": "4802001"
  }
]