[
  {
    "start": "0",
    "end": "300000"
  },
  {
    "text": "Hashing.",
    "start": "9000",
    "end": "10000"
  },
  {
    "text": "Today we're going to do some\namazing stuff with hashing. And, really,\nthis is such neat stuff,",
    "start": "15000",
    "end": "21646"
  },
  {
    "text": "it's amazing.\nWe're going to start by addressing a fundamental\nweakness of hashing.",
    "start": "21646",
    "end": "28000"
  },
  {
    "text": "And that is that for any choice\nof hash function",
    "start": "34000",
    "end": "37000"
  },
  {
    "text": "There exists a bad set of keys\nthat all hash to the same slot.",
    "start": "49000",
    "end": "64000"
  },
  {
    "text": "OK.\nSo you pick a hash function. We looked at some that seem to\nwork well in practice,",
    "start": "69000",
    "end": "75916"
  },
  {
    "text": "that are easy to put into your\ncode. But whichever one you pick,\nthere's always some bad set of",
    "start": "75916",
    "end": "83583"
  },
  {
    "text": "keys.\nSo you can imagine, just to drive this point home a\nlittle bit.",
    "start": "83583",
    "end": "90000"
  },
  {
    "text": "Imagine that you're building a\ncompiler for a customer and you",
    "start": "90000",
    "end": "95531"
  },
  {
    "text": "have a symbol table in your\ncompiler and one of the things",
    "start": "95531",
    "end": "100699"
  },
  {
    "text": "that the customer is demanding\nis that compilations go fast.",
    "start": "100699",
    "end": "106048"
  },
  {
    "text": "They don't want to sit around\nwaiting for compilations. And you have a competitor who's\nalso building a compiler and",
    "start": "106049",
    "end": "116295"
  },
  {
    "text": "they're going to test the\ncompiler, both of your compilers",
    "start": "116295",
    "end": "121463"
  },
  {
    "text": "and sort of have a run-off.\nAnd one of the things in the",
    "start": "121463",
    "end": "127201"
  },
  {
    "text": "test that they're going to allow\nyou to do is not only will the customer run his own benchmarks,\nbut he'll let you make up",
    "start": "127201",
    "end": "136556"
  },
  {
    "text": "benchmarks for the other\nprogram, for your competitor. And your competitor gets to\nmake up benchmarks for you.",
    "start": "136556",
    "end": "144968"
  },
  {
    "text": "So and not only that,\nbut you're actually sharing code.\nSo you get to look at what the",
    "start": "144968",
    "end": "152432"
  },
  {
    "text": "competitor is actually doing and\nwhat hash function they're actually using.\nSo it's pretty clear that in",
    "start": "152432",
    "end": "160621"
  },
  {
    "text": "this circumstance,\nyou have an adversary who is going to look at whatever hash\nfunction you have and figure out",
    "start": "160621",
    "end": "169377"
  },
  {
    "text": "OK, what's a set of variable\nnames and so forth that are going to all hash to the same\nslot so that essentially you're",
    "start": "169378",
    "end": "178702"
  },
  {
    "text": "just chasing through a linked\nlist whenever it comes to looking something up.\nSlowing down your program",
    "start": "178702",
    "end": "187797"
  },
  {
    "text": "enormously compared to if in\nfact they got distributed nicely across the hash table which is,\nwhat after all,",
    "start": "187798",
    "end": "195424"
  },
  {
    "text": "you have a hash table in there\nto do in the first place. And so the question is,\nhow do you defeat this",
    "start": "195424",
    "end": "202618"
  },
  {
    "text": "adversary?\nAnd the answer is one word.",
    "start": "202618",
    "end": "206000"
  },
  {
    "text": "One word.\nHow do you achieve? How do you defeat any adversary\nin this class?",
    "start": "211000",
    "end": "217220"
  },
  {
    "text": "Randomness.\nOK. Randomness.\nOK. You make it so that he can't\nguess.",
    "start": "217220",
    "end": "222503"
  },
  {
    "text": "And the idea is that you choose\na hash function at random. Independent.\nSo he can look at the code,",
    "start": "222503",
    "end": "230684"
  },
  {
    "text": "but when it actually runs,\nit's going to use a random hash function that he has no way of\npredicting what the hash",
    "start": "230684",
    "end": "240142"
  },
  {
    "text": "function is that will actually\nbe used. OK.\nSo that's the game and that way",
    "start": "240142",
    "end": "247734"
  },
  {
    "text": "he can provide an input,\nbut he can't provide an input that's guaranteed to force you\nto run slowly.",
    "start": "247734",
    "end": "255534"
  },
  {
    "text": "You might get unlucky in your\nchoice of hash function, but it's not going to be\nbecause of the adversary.",
    "start": "255534",
    "end": "263737"
  },
  {
    "text": "So the idea is to choose a hash\nfunction --",
    "start": "263737",
    "end": "268000"
  },
  {
    "text": "-- at random,\nindependently from the keys that you're, that are going to\nbe fed to it.",
    "start": "274000",
    "end": "282938"
  },
  {
    "text": "So even if your adversary can\nsee your code, he can't tell which hash\nfunction is going to be actually",
    "start": "282938",
    "end": "293600"
  },
  {
    "text": "used at run time.\nDoesn't get to see the output of the random numbers.\nAnd so it turns out you can",
    "start": "293600",
    "end": "304872"
  },
  {
    "start": "300000",
    "end": "1581000"
  },
  {
    "text": "make this scheme work and the\nname of the scheme is universal",
    "start": "304872",
    "end": "311255"
  },
  {
    "text": "hashing, OK, is one way of\nmaking this scheme work.",
    "start": "311255",
    "end": "317000"
  },
  {
    "text": "So let's do some math.\nSo let U be a universe of keys.",
    "start": "322000",
    "end": "334000"
  },
  {
    "text": "And let H be a finite\ncollection --",
    "start": "334000",
    "end": "341000"
  },
  {
    "text": "-- of hash functions --",
    "start": "348000",
    "end": "349000"
  },
  {
    "text": "-- mapping U to what are going\nto be the slots in our hash",
    "start": "356000",
    "end": "364769"
  },
  {
    "text": "table.\nOK. So we just have H as some\nfinite collection.",
    "start": "364769",
    "end": "371307"
  },
  {
    "text": "We say that H is universal --",
    "start": "371307",
    "end": "375000"
  },
  {
    "text": "-- if for all pairs of the\nkeys, distinct keys --",
    "start": "382000",
    "end": "390000"
  },
  {
    "text": "-- so the keys are distinct,\nthe following is true.",
    "start": "396000",
    "end": "401000"
  },
  {
    "text": "So if the set of keys,\nif for any pair of keys I pick,",
    "start": "423000",
    "end": "428955"
  },
  {
    "text": "the number of hash functions\nthat hash those two keys to the",
    "start": "428955",
    "end": "435584"
  },
  {
    "text": "same place is a one over m\nfraction of the total set of",
    "start": "435584",
    "end": "441651"
  },
  {
    "text": "keys.\nSo let m just, so to view that,\nanother way of viewing that is",
    "start": "441651",
    "end": "448955"
  },
  {
    "text": "if H is chosen randomly --",
    "start": "448955",
    "end": "453000"
  },
  {
    "text": "-- from the set of keys H,\nthe probability of collision",
    "start": "459000",
    "end": "471824"
  },
  {
    "text": "between x and y is what?",
    "start": "471824",
    "end": "478000"
  },
  {
    "text": "What's the probability if the\nfraction of hash functions,",
    "start": "492000",
    "end": "497656"
  },
  {
    "text": "OK, if the number of hash\nfunctions is H over m, what's the probability of a\ncollision between x and y?",
    "start": "497656",
    "end": "507757"
  },
  {
    "text": "If I pick a hash function at\nrandom. So I pick a hash function at\nrandom, what's the odds they",
    "start": "507757",
    "end": "519502"
  },
  {
    "text": "collide?\nOne over m. Now let's draw a picture for\nthat, help people see that",
    "start": "519502",
    "end": "529282"
  },
  {
    "text": "that's in fact the case.\nSo imagine this is our set of",
    "start": "529282",
    "end": "536381"
  },
  {
    "text": "all hash functions.\nOK. And then if I pick a particular\nx and y, let's say that this is",
    "start": "536382",
    "end": "548368"
  },
  {
    "text": "the set of hash functions such\nthat H of x is equal to H of y.",
    "start": "548369",
    "end": "556223"
  },
  {
    "text": "And so what we're saying is\nthat the cardinality of that set",
    "start": "556223",
    "end": "563819"
  },
  {
    "text": "is one over m times the\ncardinality of H.",
    "start": "563819",
    "end": "570000"
  },
  {
    "text": "So if I throw a dart and pick\none hash function at random, the odds are one in m that the\nhash function falls into this",
    "start": "570000",
    "end": "577665"
  },
  {
    "text": "particular set.\nAnd of course, this has to be true of every x\nand y that I can pick.",
    "start": "577665",
    "end": "583016"
  },
  {
    "text": "Of course, it will be a\ndifferent set, a different x and y will\nsomehow map the hash functions",
    "start": "583017",
    "end": "589029"
  },
  {
    "text": "differently, but the odds that\nfor any x and y that I pick, the odds that if I have a\nrandom hash function,",
    "start": "589030",
    "end": "595902"
  },
  {
    "text": "it hashes it to the same place,\nis one over m. Now this is a little bit hard\nsometimes for people to get",
    "start": "595903",
    "end": "603647"
  },
  {
    "text": "their head around because we're\nused to thinking of perhaps picking keys at random or\nsomething.",
    "start": "603647",
    "end": "609704"
  },
  {
    "text": "OK, that's not what's going on\nhere. We're picking hash functions at\nrandom. So our probability space is\ndefined over the hash functions,",
    "start": "609704",
    "end": "618302"
  },
  {
    "text": "not over the keys.\nAnd this has to be true now for any particular two keys that I\npick that are distinct.",
    "start": "618302",
    "end": "624946"
  },
  {
    "text": "That the places that they hash,\nthis set of hash functions, I mean this is like a marvelous\nproperty if you think about it.",
    "start": "624946",
    "end": "634000"
  },
  {
    "text": "OK, that you can actually find\nones where no matter what two",
    "start": "634000",
    "end": "639217"
  },
  {
    "text": "elements I pick,\nthe odds are exactly one in m that a random hash function from\nthis set is going to hash them",
    "start": "639217",
    "end": "648680"
  },
  {
    "text": "to the same place.\nSo very neat. Very, very neat property and\nwe'll see the mathematics",
    "start": "648680",
    "end": "656108"
  },
  {
    "text": "associated with this is very\ncool. So our theorem is that if we\nchoose h randomly from the set",
    "start": "656108",
    "end": "674500"
  },
  {
    "text": "of hash functions H,\nand then we suppose we're",
    "start": "674500",
    "end": "685750"
  },
  {
    "text": "hashing n keys into m slots in\nTable T --",
    "start": "685750",
    "end": "697000"
  },
  {
    "text": "-- then for given key x --",
    "start": "704000",
    "end": "706000"
  },
  {
    "text": "-- the expected number of\ncollisions with x --",
    "start": "712000",
    "end": "716000"
  },
  {
    "text": "-- is less than n over m.\nAnd who remembers what we call",
    "start": "723000",
    "end": "732000"
  },
  {
    "text": "n over m?\nAlpha, which is the, what's the term that we use\nthere?",
    "start": "732000",
    "end": "742145"
  },
  {
    "text": "Load factor.\nThe load factor of the table.",
    "start": "742145",
    "end": "750000"
  },
  {
    "text": "OK, load factor alpha.\nSo the average number of keys",
    "start": "750000",
    "end": "756921"
  },
  {
    "text": "per slot is the load factor of\nthe table.",
    "start": "756921",
    "end": "762350"
  },
  {
    "text": "So we're saying,\nso what is this theorem saying?",
    "start": "762350",
    "end": "768727"
  },
  {
    "text": "It's saying that in fact,\nif we have one of these",
    "start": "768728",
    "end": "775242"
  },
  {
    "text": "universal sets of hash\nfunctions, then things perform",
    "start": "775242",
    "end": "782299"
  },
  {
    "text": "exactly the way we want them to.\nThings get distributed evenly.",
    "start": "782299",
    "end": "790500"
  },
  {
    "text": "The number of things that are\ngoing to collide with any particular key that I pick is\ngoing to be n over m.",
    "start": "790500",
    "end": "799166"
  },
  {
    "text": "So that's a really good\nproperty to have. Now I haven't shown you,\nthe construction of U is going,",
    "start": "799166",
    "end": "807083"
  },
  {
    "text": "sorry, of the set of hash\nfunctions H, that that construction will take us a\nlittle bit of effort.",
    "start": "807083",
    "end": "816000"
  },
  {
    "text": "But first I want to show you\nwhy this is such a great property.\nBasically it's this theorem.",
    "start": "816000",
    "end": "822492"
  },
  {
    "text": "So let's prove this theorem.\nSo any questions about what the statement of the theorem is?\nSo we're going to go actually",
    "start": "822492",
    "end": "830954"
  },
  {
    "text": "kind of fast today.\nWe've got a lot of good stuff today.\nSo I want to make sure people",
    "start": "830954",
    "end": "837009"
  },
  {
    "text": "are onboard as we go through.\nSo if there are any questions,",
    "start": "837009",
    "end": "843202"
  },
  {
    "text": "make sure, you know,\nstatement of theorem of whatever, best to get them out\nearly so that you're not",
    "start": "843203",
    "end": "853563"
  },
  {
    "text": "confused later on when the going\ngets a little more exciting.",
    "start": "853563",
    "end": "859970"
  },
  {
    "text": "OK?\nOK, good. So to prove this,\nlet's let C sub x be the random",
    "start": "859970",
    "end": "866378"
  },
  {
    "text": "variable denoting the total\nnumber of collisions --",
    "start": "866378",
    "end": "873000"
  },
  {
    "text": "-- of keys in T with x.\nSo this is a total number and",
    "start": "878000",
    "end": "884381"
  },
  {
    "text": "one of the techniques that you\nuse a lot in probabilistic",
    "start": "884381",
    "end": "891253"
  },
  {
    "text": "analysis of randomized\nalgorithms is recognizing that C",
    "start": "891254",
    "end": "897881"
  },
  {
    "text": "of x is in fact a sum of\nindicator random variables.",
    "start": "897881",
    "end": "905000"
  },
  {
    "text": "If you can decompose things\ninto indicator random variables,",
    "start": "905000",
    "end": "911254"
  },
  {
    "text": "the analysis goes much more\neasily than if you're left with",
    "start": "911254",
    "end": "917402"
  },
  {
    "text": "aggregate variables.\nSo here we're going to let our",
    "start": "917402",
    "end": "922703"
  },
  {
    "text": "indicator random variable be\nlittle c of x., which is going to be one if h\nof x equals h of y and 0",
    "start": "922703",
    "end": "932878"
  },
  {
    "text": "otherwise.",
    "start": "932879",
    "end": "935000"
  },
  {
    "text": "And so we can note two things.\nFirst, what is the expectation",
    "start": "940000",
    "end": "949863"
  },
  {
    "text": "of C of x..",
    "start": "949863",
    "end": "952000"
  },
  {
    "text": "OK, if I have a process which\nis picking a hash function at random, what's the expectation\nof C of x.?",
    "start": "957000",
    "end": "964000"
  },
  {
    "text": "One over m.\nBecause that's basically this definition here.\nNow in other words I pick a",
    "start": "964000",
    "end": "971749"
  },
  {
    "text": "hash function at random,\nwhat's the odds that the hash is the same?\nIt's one over m.",
    "start": "971749",
    "end": "979312"
  },
  {
    "text": "And then the other thing is,\nand the reason we pick this",
    "start": "979312",
    "end": "984447"
  },
  {
    "text": "thing is that I can express\ncapital C sub x, the random variable denoting\nthe total number of collisions",
    "start": "984447",
    "end": "993877"
  },
  {
    "text": "as being just the sum over all\nthe keys in the table except x",
    "start": "993877",
    "end": "999479"
  },
  {
    "text": "of C of x..\nSo for each one that would",
    "start": "999479",
    "end": "1006034"
  },
  {
    "text": "cause me a collision,\nwith x, I add one and if it",
    "start": "1006034",
    "end": "1013482"
  },
  {
    "text": "wouldn't cause me a collision,\nI add 0.",
    "start": "1013482",
    "end": "1020000"
  },
  {
    "text": "And that adds up all of the\ncollisions that I would have in",
    "start": "1020000",
    "end": "1026779"
  },
  {
    "text": "the table with x.",
    "start": "1026779",
    "end": "1029000"
  },
  {
    "text": "Is there any questions so far?\nBecause this is the set-up. The set-up in most of these\nthings, the set-up is where most",
    "start": "1037000",
    "end": "1044046"
  },
  {
    "text": "students make mistakes and most\npracticing researchers make mistakes as well,\nlet me tell you.",
    "start": "1044046",
    "end": "1050000"
  },
  {
    "text": "And then once you get the\nset-up right, then working out the math is\nfine, but it's often that set-up",
    "start": "1050000",
    "end": "1056496"
  },
  {
    "text": "of how do you actually translate\nthe situation into the math. That's the hard part.\nOnce you get that right,",
    "start": "1056496",
    "end": "1063456"
  },
  {
    "text": "well, then, algebra,\nwe can all do algebra. Of course, we can also all make\nmistakes doing algebra,",
    "start": "1063456",
    "end": "1069820"
  },
  {
    "text": "but at least those mistakes are\nmuch more easy to check than the one that does the translation.\nSo I want to make sure people",
    "start": "1069820",
    "end": "1077907"
  },
  {
    "text": "are sort of understanding of how\nthat's set up. So now we just have to use our\nmath skills.",
    "start": "1077907",
    "end": "1085000"
  },
  {
    "text": "So the expectation then of the\nnumber of collisions is the",
    "start": "1085000",
    "end": "1092021"
  },
  {
    "text": "expectation of C sub x and\nthat's just the expectation of",
    "start": "1092021",
    "end": "1098920"
  },
  {
    "text": "just plugging the sum of y and T\nminus the element x of c_xy.",
    "start": "1098920",
    "end": "1106311"
  },
  {
    "text": "So that's just definition.\nAnd that's equal to the sum of",
    "start": "1106311",
    "end": "1113210"
  },
  {
    "text": "y and T minus x of expectation\nof c_xy.",
    "start": "1113210",
    "end": "1119000"
  },
  {
    "text": "So why is that?\nYeah, that's linearity.",
    "start": "1119000",
    "end": "1124000"
  },
  {
    "text": "Linearity of expectation,\ndoesn't require independence. It's true of all random\nvariables.",
    "start": "1132000",
    "end": "1140000"
  },
  {
    "text": "And that's equal to,\nand now the math gets easier.",
    "start": "1140000",
    "end": "1147000"
  },
  {
    "text": "So what is that?\nOne over m. That makes the summation easy\nto evaluate.",
    "start": "1147000",
    "end": "1156714"
  },
  {
    "text": "That's just n minus one over m.",
    "start": "1156714",
    "end": "1162000"
  },
  {
    "text": "So fairly simple analysis and\nshows you why we would love to",
    "start": "1170000",
    "end": "1175673"
  },
  {
    "text": "have one of these sets of\nuniversal hash functions because",
    "start": "1175673",
    "end": "1181153"
  },
  {
    "text": "if you have them,\nthen they behave exactly the way you would want it to behave.\nAnd you defeat your adversary",
    "start": "1181153",
    "end": "1191346"
  },
  {
    "text": "by just picking up the hash\nfunction at random. There's nothing he can do.\nOr she.",
    "start": "1191346",
    "end": "1200000"
  },
  {
    "text": "OK, any questions about that\nproof? OK, now we get into the fun\nmath. Constructing one of these\nbabies.",
    "start": "1200000",
    "end": "1207326"
  },
  {
    "text": "OK.",
    "start": "1207327",
    "end": "1208000"
  },
  {
    "text": "This is not the only\nconstruction. This is a construction of a\nclassic universal hash function.",
    "start": "1220000",
    "end": "1231000"
  },
  {
    "text": "And there are other\nconstructions in the literature",
    "start": "1231000",
    "end": "1237196"
  },
  {
    "text": "and I think there's one on the\npractice quiz.",
    "start": "1237196",
    "end": "1242649"
  },
  {
    "text": "So let's see.\nSo this one works when m is prime.\nSo it works when the set of",
    "start": "1242649",
    "end": "1251695"
  },
  {
    "text": "slots is a prime number.\nNumber of slots is a prime",
    "start": "1251696",
    "end": "1257893"
  },
  {
    "text": "number.\nSo the idea here is we're going",
    "start": "1257893",
    "end": "1265574"
  },
  {
    "text": "to decompose any key k in our\nuniverse into r plus 1 digits.",
    "start": "1265574",
    "end": "1276184"
  },
  {
    "text": "So k, we're going to look at as\nbeing a k 0, k one,",
    "start": "1276184",
    "end": "1285174"
  },
  {
    "text": "k_r where 0 is less than or\nequal to k sub I,",
    "start": "1285175",
    "end": "1293087"
  },
  {
    "text": "is less than or equal to m\nminus one.",
    "start": "1293087",
    "end": "1301000"
  },
  {
    "text": "So the idea is in some sense\nwe're looking at what the",
    "start": "1301000",
    "end": "1307668"
  },
  {
    "text": "representation would be of k\nbase m. So if it were base two,\nit would be just one bit at a",
    "start": "1307668",
    "end": "1318615"
  },
  {
    "text": "time.\nThese would just be the bits. I'm not going to do base two.\nWe're going to do base min",
    "start": "1318615",
    "end": "1325516"
  },
  {
    "text": "general and so each of these\nrepresents one of the digits. And the way I've done it is\nI've done low order digit first.",
    "start": "1325516",
    "end": "1333135"
  },
  {
    "text": "It actually doesn't matter.\nWe're not actually going to care really about what the order\nis, but basically we're just",
    "start": "1333135",
    "end": "1340622"
  },
  {
    "text": "looking at busting it into a\ntwofold represented by each of those digits.\nSo one algorithm for computing",
    "start": "1340622",
    "end": "1347256"
  },
  {
    "text": "this out of k is take the\nremainder mod m. That's the low order one.\nOK, take what's left.",
    "start": "1347256",
    "end": "1354665"
  },
  {
    "text": "Take the remainder of that mod\nm. Take whatever's left,\netc. So you're familiar with the\nconversion to a base",
    "start": "1354665",
    "end": "1362953"
  },
  {
    "text": "representation.\nThat's exactly how we're getting this representation.\nSo we treat,",
    "start": "1362953",
    "end": "1369249"
  },
  {
    "text": "this is just a question of\ntaking the data that we've got and treating it as an r plus one\nbase m number.",
    "start": "1369249",
    "end": "1377377"
  },
  {
    "text": "And now we invoke our\nrandomized strategy. The randomized strategy is\ngoing to be able to have a class",
    "start": "1377377",
    "end": "1385607"
  },
  {
    "text": "of hash functions that's\ndependent essentially on random numbers.\nAnd the random numbers we're",
    "start": "1385607",
    "end": "1391267"
  },
  {
    "text": "going to pick is we're going to\npick an a at random --",
    "start": "1391267",
    "end": "1395000"
  },
  {
    "text": "-- which we're also going to\nlook at as a base mnumber. For each a_i is chosen randomly\n--",
    "start": "1408000",
    "end": "1418000"
  },
  {
    "text": "-- from --",
    "start": "1429000",
    "end": "1430000"
  },
  {
    "text": "-- 0 to m minus one.\nSo one of our, it's a random if you will,\nit's a random base mdigit.",
    "start": "1435000",
    "end": "1443000"
  },
  {
    "text": "Random base m digit.\nSo each one of these is picked at random.\nAnd for each one we,",
    "start": "1443000",
    "end": "1449289"
  },
  {
    "text": "possible value of A,\nwe're going to get a different hash function.\nSo we're going to index our",
    "start": "1449289",
    "end": "1456443"
  },
  {
    "text": "hash functions by this random\nnumber. So this is where the randomness\nis going to come in.",
    "start": "1456443",
    "end": "1463283"
  },
  {
    "text": "Everybody with me?\nAnd here's the hash function.",
    "start": "1463283",
    "end": "1468000"
  },
  {
    "text": "So what we do is we dot product\nthis vector with this vector and",
    "start": "1496000",
    "end": "1506738"
  },
  {
    "text": "take the result,\nmod m. So each digit of k of our key\ngets multiplied by a random",
    "start": "1506738",
    "end": "1518945"
  },
  {
    "text": "other digit.\nWe add all those up and we take",
    "start": "1518945",
    "end": "1525047"
  },
  {
    "text": "that mod m.\nSo that's a dot product operator.\nAnd this is what we're going to",
    "start": "1525047",
    "end": "1534247"
  },
  {
    "text": "show is universal,\nthat this set of h sub a, where I look over that whole\nset.",
    "start": "1534248",
    "end": "1539689"
  },
  {
    "text": "So one of the things we need to\nknow is how big is the set of hash functions here.",
    "start": "1539689",
    "end": "1546000"
  },
  {
    "text": "So how big is this set of hash\nfunctions? How many different hash\nfunctions do I have in this set?",
    "start": "1559000",
    "end": "1567000"
  },
  {
    "start": "1581000",
    "end": "1676000"
  },
  {
    "text": "It's basic 6.042 material.\nIt's basically how many vectors",
    "start": "1584000",
    "end": "1591082"
  },
  {
    "text": "of length r plus one where each\nelement of the vector is a",
    "start": "1591082",
    "end": "1598165"
  },
  {
    "text": "number of 0 to m minus one,\nhas m different values.",
    "start": "1598165",
    "end": "1605000"
  },
  {
    "text": "So how many?\nm minus one to the r.",
    "start": "1605000",
    "end": "1610279"
  },
  {
    "text": "No.\nClose. It's up there.\nIt's a big number.",
    "start": "1610279",
    "end": "1616839"
  },
  {
    "text": "m to the r plus one.\nGood. It's m, so the size of H is\nequal to m to the r plus one.",
    "start": "1616839",
    "end": "1626638"
  },
  {
    "text": "So we're going to want to\nremember that. OK, so let's just understand\nwhy that is.",
    "start": "1626638",
    "end": "1633941"
  },
  {
    "text": "I have m choices for the first\nvalue of A. m for the second,\netc.",
    "start": "1633941",
    "end": "1639672"
  },
  {
    "text": "m for the r th.\nAnd since there are plus one things here, for each choice\nhere, I have this many same",
    "start": "1639672",
    "end": "1648731"
  },
  {
    "text": "number of choices here,\nso it's a product.",
    "start": "1648731",
    "end": "1654000"
  },
  {
    "text": "OK, so this is the product rule\nin counting.",
    "start": "1654000",
    "end": "1659142"
  },
  {
    "text": "So if you haven't reviewed your\n6.042 notes for counting,",
    "start": "1659142",
    "end": "1665840"
  },
  {
    "text": "this is going to be a good idea\nto go back and review that",
    "start": "1665840",
    "end": "1672657"
  },
  {
    "text": "because we're doing stuff of\nthat nature. This is just the product rule.\nGood.",
    "start": "1672657",
    "end": "1681627"
  },
  {
    "start": "1676000",
    "end": "2146000"
  },
  {
    "text": "So then the theorem we want to\nprove is that H is universal.",
    "start": "1681627",
    "end": "1690000"
  },
  {
    "text": "And this is going to involve a\nlittle bit of number theory, so it gets kind of interesting.\nAnd it's a non-trivial proof,",
    "start": "1690000",
    "end": "1699177"
  },
  {
    "text": "so this is where if there's any\nquestions as I'm going along, please ask because the argument\nis not as simple as other",
    "start": "1699177",
    "end": "1708200"
  },
  {
    "text": "arguments we've seen so far.\nOK, not the ones we've seen so",
    "start": "1708200",
    "end": "1713825"
  },
  {
    "text": "far have been simple,\nbut this is definitely a more involved mathematical argument.\nSo here's a proof.",
    "start": "1713825",
    "end": "1723149"
  },
  {
    "text": "So let's let,\nso we have two keys. What are we trying to show if\nit's universal,",
    "start": "1723149",
    "end": "1730401"
  },
  {
    "text": "that if I pick any two keys,\nthe number of hash functions",
    "start": "1730401",
    "end": "1735675"
  },
  {
    "text": "for which they hash to the same\nthing is the size of set of hash",
    "start": "1735675",
    "end": "1741609"
  },
  {
    "text": "functions divided by m.\nOK, so I'm going to look at two",
    "start": "1741609",
    "end": "1748671"
  },
  {
    "text": "keys.\nSo let's pick two keys arbitrarily.\nSo x, and we'll decompose it",
    "start": "1748671",
    "end": "1756605"
  },
  {
    "text": "into our base r representation\nand y, y_0, y_1 --",
    "start": "1756605",
    "end": "1763000"
  },
  {
    "text": "So these are two distinct keys.\nSo if these are two distinct",
    "start": "1773000",
    "end": "1779196"
  },
  {
    "text": "keys, so they're different,\nthen this base representation",
    "start": "1779196",
    "end": "1785077"
  },
  {
    "text": "has the property that they've\ngot to differ somewhere.",
    "start": "1785077",
    "end": "1790643"
  },
  {
    "text": "Right?\nOK, they differ in at least one digit.",
    "start": "1790643",
    "end": "1796000"
  },
  {
    "text": "OK, and this is where most\npeople get lost because I'm going to make a simplification.\nThey could differ in any one of",
    "start": "1808000",
    "end": "1816908"
  },
  {
    "text": "these digits.\nI'm going to say they differ in position 0 because it doesn't\nmatter which one I do,",
    "start": "1816908",
    "end": "1824267"
  },
  {
    "text": "the math is the same,\nbut it'll make it so that if I pick some said they differ in\nsome position i,",
    "start": "1824267",
    "end": "1831704"
  },
  {
    "text": "I would have to be taking\nsummations as you'll see over the elements that are not i,\nand that's complicated.",
    "start": "1831704",
    "end": "1841000"
  },
  {
    "text": "If I do it in position 0,\nthen I can just sum for the rest of them.\nSo the math is going to be",
    "start": "1841000",
    "end": "1846741"
  },
  {
    "text": "identical if I were to do it for\nany position because it's symmetric.\nAll the digits are symmetric.",
    "start": "1846741",
    "end": "1852798"
  },
  {
    "text": "So let's say they differ in\nposition 0, but the same argument is going to be true if\nthey differed in some other",
    "start": "1852798",
    "end": "1859675"
  },
  {
    "text": "position.\nSo let's say, so we're saying without loss of\ngenerality.",
    "start": "1859675",
    "end": "1865736"
  },
  {
    "text": "So that's without loss of\ngenerality. Position 0.\nBecause all the positions are",
    "start": "1865736",
    "end": "1872282"
  },
  {
    "text": "symmetric here.\nAnd so, now we need to ask the question for how many --",
    "start": "1872282",
    "end": "1879000"
  },
  {
    "text": "-- hash functions in our\nuniversal, purportedly universal",
    "start": "1884000",
    "end": "1890913"
  },
  {
    "text": "set do x and y collide?",
    "start": "1890913",
    "end": "1894000"
  },
  {
    "text": "OK, we've got to count them up.\nSo how often do they collide? This is where we're going to\npull out some heavy duty number",
    "start": "1899000",
    "end": "1906885"
  },
  {
    "text": "theory.\nSo we must have, if they collide --",
    "start": "1906885",
    "end": "1910000"
  },
  {
    "text": "-- that h sub a of x is equal\nto h sub a of y.",
    "start": "1916000",
    "end": "1923000"
  },
  {
    "text": "That's what it means for them\nto collide.",
    "start": "1923000",
    "end": "1929976"
  },
  {
    "text": "So that implies that the sum of\ni equal 0 to r of a sub i x sub",
    "start": "1929976",
    "end": "1940789"
  },
  {
    "text": "i is equal to the sum of i\nequals 0 to r of a sub i y sub i",
    "start": "1940790",
    "end": "1950906"
  },
  {
    "text": "mod m.\nActually this is congruent mod m.\nSo congruence for those people",
    "start": "1950906",
    "end": "1958166"
  },
  {
    "text": "who haven't seen much number\ntheory, is basically the way of essentially, rather than having\nto say mod everywhere in here",
    "start": "1958166",
    "end": "1968083"
  },
  {
    "text": "and mod everywhere in here,\nwe just at the end say OK, do a mod at the end.\nEverything is being done mod,",
    "start": "1968083",
    "end": "1976583"
  },
  {
    "text": "module m.\nAnd then typically we use a congruence sign.\nOK, there's a more mathematical",
    "start": "1976583",
    "end": "1986625"
  },
  {
    "text": "definition but this will work\nfor us engineers.",
    "start": "1986625",
    "end": "1993487"
  },
  {
    "text": "OK, so everybody with me so\nfar? This is just applying the\ndefinition.",
    "start": "1993487",
    "end": "2003483"
  },
  {
    "text": "So that implies that the sum of\ni equals 0 to r of a i x i minus",
    "start": "2003483",
    "end": "2012883"
  },
  {
    "text": "y i is congruent to zeros mod m.\nOK, just threw it on the other",
    "start": "2012883",
    "end": "2021738"
  },
  {
    "text": "side and applied the\ndistributive law. Now what I'm going to do is\npull out the 0-th position",
    "start": "2021738",
    "end": "2029952"
  },
  {
    "text": "because that's the one that I\ncare about. And this is where it saves me\non the math, compared to if I",
    "start": "2029952",
    "end": "2038896"
  },
  {
    "text": "didn't say that it was 0.\nI'd have to pull out x_i. It wouldn't matter,\nbut it just would make the math",
    "start": "2038896",
    "end": "2045030"
  },
  {
    "text": "a little bit cruftier",
    "start": "2045030",
    "end": "2046000"
  },
  {
    "text": "OK, so now we've just pulled\nout one term.",
    "start": "2063000",
    "end": "2070165"
  },
  {
    "text": "That implies that a_0 x_0 minus\ny_0 is congruent to minus --",
    "start": "2070165",
    "end": "2081000"
  },
  {
    "text": "-- mod m.\nNow remember that when I have a minus number mod m,\nI just map it into whatever,",
    "start": "2094000",
    "end": "2102767"
  },
  {
    "text": "into that range from 0 to m\nminus one. So for example,\nminus five mod seven is two.",
    "start": "2102767",
    "end": "2112402"
  },
  {
    "text": "So if any of these things are\nnegative, we simply translate",
    "start": "2112402",
    "end": "2119688"
  },
  {
    "text": "them into by adding multiples of\nmbecause adding multiples of m",
    "start": "2119688",
    "end": "2127477"
  },
  {
    "text": "doesn't affect the congruence.",
    "start": "2127477",
    "end": "2132000"
  },
  {
    "text": "OK.\nAnd now for the next step, we need to use a number theory\nfact.",
    "start": "2139000",
    "end": "2144432"
  },
  {
    "text": "So let's pull out our number\ntheory --",
    "start": "2144433",
    "end": "2148000"
  },
  {
    "start": "2146000",
    "end": "2541000"
  },
  {
    "text": "-- textbook and take a little\ndigression",
    "start": "2157000",
    "end": "2165000"
  },
  {
    "text": "So this comes from the theory\nof finite fields. So for people who are\nknowledgeable,",
    "start": "2170000",
    "end": "2177168"
  },
  {
    "text": "that's where you're plugging\nyour knowledge in. If you're not knowledgeable,\nthis is a great area of math to",
    "start": "2177168",
    "end": "2186460"
  },
  {
    "text": "learn about.\nSo here's the fact. So let m be prime.\nThen for any z,",
    "start": "2186460",
    "end": "2194282"
  },
  {
    "text": "little z element of z sub m,\nand z sub m is the integers mod",
    "start": "2194282",
    "end": "2201938"
  },
  {
    "text": "m.\nSo this is essentially numbers from 0 to m minus one with all\nthe operations,",
    "start": "2201938",
    "end": "2211931"
  },
  {
    "text": "times, minus,\nplus, etc., defined on that",
    "start": "2211931",
    "end": "2217121"
  },
  {
    "text": "such that if you end up outside\nof the range of 0 to m minus",
    "start": "2217122",
    "end": "2224778"
  },
  {
    "text": "one, you re-normalize by\nsubtracting or adding multiples",
    "start": "2224778",
    "end": "2231916"
  },
  {
    "text": "of m to get back within the\nrange from 0 to m minus one.",
    "start": "2231916",
    "end": "2241000"
  },
  {
    "text": "So it's the standard thing of\njust doing things module m.",
    "start": "2241000",
    "end": "2250333"
  },
  {
    "text": "So for any z such that z is not\ncongruent to 0,",
    "start": "2250333",
    "end": "2258000"
  },
  {
    "text": "there exists a unique z inverse\nin z sub m, such that if I",
    "start": "2258000",
    "end": "2267500"
  },
  {
    "text": "multiply z times the inverse,\nit produces something congruent",
    "start": "2267500",
    "end": "2277500"
  },
  {
    "text": "to one mod m.\nSo for any number it says,",
    "start": "2277500",
    "end": "2284058"
  },
  {
    "text": "I can find another number that\nwhen multiplied by it gives me",
    "start": "2284058",
    "end": "2291117"
  },
  {
    "text": "one.\nSo let's just do an example for m equals seven.\nSo here we have,",
    "start": "2291117",
    "end": "2298882"
  },
  {
    "text": "we'll make a little table.\nSo z is not equal to 0,",
    "start": "2298882",
    "end": "2304647"
  },
  {
    "text": "so I just write down the other\nnumbers. And let's figure out what z\ninverse is.",
    "start": "2304647",
    "end": "2315000"
  },
  {
    "text": "So what's the inverse of one?\nWhat number when multiplied by",
    "start": "2315000",
    "end": "2321527"
  },
  {
    "text": "one gives me one?\nOne. Good.\nHow about two? What number when I multiply it\nby two gives me one?",
    "start": "2321527",
    "end": "2331484"
  },
  {
    "text": "Four.\nBecause two times four is eight and eight is congruent to one\nmod seven.",
    "start": "2331485",
    "end": "2341000"
  },
  {
    "text": "So I've re-normalized it.\nWhat about three?",
    "start": "2341000",
    "end": "2344000"
  },
  {
    "text": "Five.\nGood. Five.\nThree times five is 15. That's congruent to one mod\nseven because 15 divided by",
    "start": "2352000",
    "end": "2362514"
  },
  {
    "text": "seven is two remainder of one.\nSo that's the key thing.",
    "start": "2362514",
    "end": "2368684"
  },
  {
    "text": "What about four?\nTwo. Five? Three. And six.",
    "start": "2368685",
    "end": "2376000"
  },
  {
    "text": "Yeah.\nSix. Yeah, six it turns out.\nOK, six times six is 36.",
    "start": "2383000",
    "end": "2388577"
  },
  {
    "text": "OK, mod seven.\nBasically subtract off the 35, gives m one.\nSo people have observed some",
    "start": "2388577",
    "end": "2396943"
  },
  {
    "text": "interesting facts that if one\nnumber's an inverse of another,",
    "start": "2396944",
    "end": "2402920"
  },
  {
    "text": "then that other is an inverse\nof the one.",
    "start": "2402920",
    "end": "2408000"
  },
  {
    "text": "So that's actually one of these\nthings that you prove when you do group theory and field theory\nand so forth.",
    "start": "2408000",
    "end": "2416307"
  },
  {
    "text": "There are all sorts of other\ngreat properties of this kind of math.\nBut the main thing is,",
    "start": "2416307",
    "end": "2423125"
  },
  {
    "text": "and this turns out not to be\ntrue if m is not a prime. So can somebody think of,\nimagine we're doing something",
    "start": "2423125",
    "end": "2431510"
  },
  {
    "text": "mod 10.\nCan somebody think of a number that doesn't have an inverse mod\n10?",
    "start": "2431510",
    "end": "2439761"
  },
  {
    "text": "Yeah.\nTwo. Another one is five.\nOK, it turns out the divisors",
    "start": "2439761",
    "end": "2445795"
  },
  {
    "text": "in fact actually,\nmore generally, something that is not\nrelatively prime,",
    "start": "2445795",
    "end": "2453077"
  },
  {
    "text": "meaning that it has no common\nfactors, the GCD is not one",
    "start": "2453077",
    "end": "2458901"
  },
  {
    "text": "between that number and the\nmodulus.",
    "start": "2458902",
    "end": "2464000"
  },
  {
    "text": "OK, those numbers do not have\nan inverse mod m. OK, but if it's prime,\nevery number is relatively",
    "start": "2464000",
    "end": "2473085"
  },
  {
    "text": "prime to the modulus.\nAnd that's the property that we're taking advantage of.\nSo this is our fact and so,",
    "start": "2473085",
    "end": "2482944"
  },
  {
    "text": "in this case what I'm after is\nI want to divide by x_0 minus",
    "start": "2482944",
    "end": "2488646"
  },
  {
    "text": "y_0.\nThat's what I want to do at this point.\nBut I can't do that if x_0,",
    "start": "2488646",
    "end": "2494687"
  },
  {
    "text": "first of all,\nif m isn't prime, I can't necessarily do that.\nI might be able to,",
    "start": "2494687",
    "end": "2500240"
  },
  {
    "text": "but I can't necessarily.\nBut if m is prime, I can definitely divide by x_0\nminus y_0.",
    "start": "2500240",
    "end": "2506153"
  },
  {
    "text": "I can find that inverse.\nAnd the other thing I have to do is make sure x_0 minus y_0 is\nnot 0.",
    "start": "2506153",
    "end": "2512716"
  },
  {
    "text": "OK, it would be 0 if these two\nwere equal, but our supposition was they weren't equal.\nAnd once again,",
    "start": "2512716",
    "end": "2521144"
  },
  {
    "text": "just bringing it back to the\nwithout loss of generality, if it were some other position\nthat we were off,",
    "start": "2521144",
    "end": "2528927"
  },
  {
    "text": "I would be doing exactly the\nsame thing with that position. So now we're going to be able\nto divide.",
    "start": "2528927",
    "end": "2536329"
  },
  {
    "text": "So we continue with our --",
    "start": "2536329",
    "end": "2539000"
  },
  {
    "text": "-- continue with our proof.\nSo since x_0 is not equal to",
    "start": "2544000",
    "end": "2553519"
  },
  {
    "text": "y_0, there exists an inverse for\nx_0 minus y_0.",
    "start": "2553519",
    "end": "2562000"
  },
  {
    "text": "And that implies,\njust continue on from over",
    "start": "2562000",
    "end": "2568286"
  },
  {
    "text": "there, that a_0 is congruent\ntherefore to minus the sum of i",
    "start": "2568286",
    "end": "2576911"
  },
  {
    "text": "equal one to r of a_i,\nx_i minus y_i times x_0 minus",
    "start": "2576912",
    "end": "2584368"
  },
  {
    "text": "y_0 inverse.\nSo let's just go back to the",
    "start": "2584368",
    "end": "2590033"
  },
  {
    "text": "beginning of our proof and see\nwhat we've derived.",
    "start": "2590033",
    "end": "2595341"
  },
  {
    "text": "If we're saying we have two\ndistinct keys, and we've picked all of these\na_i randomly,",
    "start": "2595341",
    "end": "2604333"
  },
  {
    "text": "and we're saying that these two\ndistinct keys hash to the same",
    "start": "2604333",
    "end": "2610941"
  },
  {
    "text": "place.\nIf they hash to the same place, it says that a_0 essentially\nhad to have a particular value",
    "start": "2610941",
    "end": "2621233"
  },
  {
    "text": "as a function of the other a_i.\nBecause in other words,",
    "start": "2621233",
    "end": "2627680"
  },
  {
    "text": "once I've picked each of these\na_i from one to r, if I did them in that order,\nfor example,",
    "start": "2627680",
    "end": "2634111"
  },
  {
    "text": "then I don't have a choice for\nhow I pick a_0 to make it collide.\nExactly one value allows it to",
    "start": "2634111",
    "end": "2640907"
  },
  {
    "text": "collide, namely the value of a_0\ngiven by this. If I picked a different value\nof a_0, they wouldn't collide.",
    "start": "2640907",
    "end": "2650547"
  },
  {
    "text": "So let m write that down.\nThus, while you think about it",
    "start": "2650547",
    "end": "2656000"
  },
  {
    "text": "So for any choice of these a_i,\nthere's exactly one of the",
    "start": "2712000",
    "end": "2718650"
  },
  {
    "text": "impossible choices of a_0 that\ncause a collision.",
    "start": "2718650",
    "end": "2724250"
  },
  {
    "text": "And for all the other choices I\nmight make of a_0,",
    "start": "2724250",
    "end": "2729966"
  },
  {
    "text": "there's n collision.\nSo essentially I don't have,",
    "start": "2729966",
    "end": "2736132"
  },
  {
    "text": "if they're going to collide,\nI've reduced essentially the",
    "start": "2736132",
    "end": "2742396"
  },
  {
    "text": "number of degrees of freedom of\nmy randomness by a factor of m.",
    "start": "2742396",
    "end": "2749332"
  },
  {
    "text": "So if I count up the number of\nh_a's that cause x and y to",
    "start": "2749332",
    "end": "2755708"
  },
  {
    "text": "collide, that's equal to,\nwell, there's m choices,",
    "start": "2755708",
    "end": "2761189"
  },
  {
    "text": "just using the product rule\nagain. There's m choices for a_1 times\nm choices for a_2,",
    "start": "2761189",
    "end": "2773034"
  },
  {
    "text": "up to m choices for a_r and\nthen only one choice for a_0.",
    "start": "2773034",
    "end": "2781074"
  },
  {
    "text": "So this is choices for a_1,\na_2, a_r and only one choice",
    "start": "2781074",
    "end": "2788970"
  },
  {
    "text": "for a_0 if they're going to\ncollide.",
    "start": "2788970",
    "end": "2795000"
  },
  {
    "text": "If they're not going to\ncollide, I've got more choices",
    "start": "2795000",
    "end": "2800161"
  },
  {
    "text": "for a_0.\nBut if I want them to collide, there's only one value I can\npick, namely this value.",
    "start": "2800161",
    "end": "2808925"
  },
  {
    "text": "That's the only value for which\nI will pick. And that's equal to m to the r,\nwhich is just the size of H",
    "start": "2808925",
    "end": "2818760"
  },
  {
    "text": "divided by m.\nAnd that completes the proof.",
    "start": "2818760",
    "end": "2823000"
  },
  {
    "text": "So there are other universal\nconstructions, but this is a particularly\nelegant one.",
    "start": "2831000",
    "end": "2838342"
  },
  {
    "text": "So the point is that I have m\nplus one, sorry, r plus one degrees of freedom\nwhere each degree of freedom I",
    "start": "2838342",
    "end": "2847888"
  },
  {
    "text": "have m choices.\nBut if I want them to collide,",
    "start": "2847888",
    "end": "2853529"
  },
  {
    "text": "once I've picked any of the,\nonce I've picked r of those",
    "start": "2853529",
    "end": "2860000"
  },
  {
    "text": "possible choices,\nthe last one is forced if I",
    "start": "2860000",
    "end": "2865176"
  },
  {
    "text": "want it to collide.\nSo therefore, the set of functions for which\nit collides is only one in m.",
    "start": "2865176",
    "end": "2875881"
  },
  {
    "text": "A very slick construction.\nVery slick.",
    "start": "2875882",
    "end": "2881011"
  },
  {
    "text": "OK.\nEverybody with me here? Didn't lose too many people?\nYeah, question.",
    "start": "2881011",
    "end": "2887356"
  },
  {
    "text": "Well, part of it is,\nactually this is a quite common type of thing to be doing\nactually.",
    "start": "2887356",
    "end": "2895172"
  },
  {
    "text": "If you take a class,\nso we have follow on classes in cryptography and so forth,\nand this kind of thing of",
    "start": "2895172",
    "end": "2904551"
  },
  {
    "text": "taking dot products,\nmodulo m and also Galois fields which are particularly simple\nfinite fields and things like",
    "start": "2904551",
    "end": "2914574"
  },
  {
    "text": "that, people play with these all\nthe time.",
    "start": "2914574",
    "end": "2920000"
  },
  {
    "text": "So Galois fields are like using\nexor's as your, same sort of thing as this\nexcept base two.",
    "start": "2920000",
    "end": "2926285"
  },
  {
    "text": "And so there's a lot of study\nof this sort of thing. So people understand these kind\nof properties.",
    "start": "2926285",
    "end": "2933142"
  },
  {
    "text": "But yeah, it's like what's the\nalgorithm for having a brilliant insight into algorithms?\nIt's like OK.",
    "start": "2933142",
    "end": "2941000"
  },
  {
    "text": "Wish I knew.\nThen I'd just turn the crank. [LAUGHTER] But if it were that\neasy, I wouldn't be standing up",
    "start": "2941000",
    "end": "2951108"
  },
  {
    "text": "here today.\n[LAUGHTER] Good. OK, so now I want to take on\nanother topic which is also I",
    "start": "2951108",
    "end": "2959432"
  },
  {
    "start": "2952000",
    "end": "3600000"
  },
  {
    "text": "find, I think this is\nastounding. It's just beautiful,\nbeautiful mathematics and a big",
    "start": "2959432",
    "end": "2967657"
  },
  {
    "text": "impact on your ability to build\ngood hash functions.",
    "start": "2967657",
    "end": "2974000"
  },
  {
    "text": "Now I want to talk about\nanother one topic, which is related,\nwhich is the topic of perfect",
    "start": "2974000",
    "end": "2981039"
  },
  {
    "text": "hashing.",
    "start": "2981039",
    "end": "2982000"
  },
  {
    "text": "So everything we've done so far\ndoes expected time performance.",
    "start": "2994000",
    "end": "2999470"
  },
  {
    "text": "Hashing is good in the expected\nsense. A perfect hashing addresses the\nfollowing questions.",
    "start": "2999470",
    "end": "3008198"
  },
  {
    "text": "Suppose that I gave you a set\nof keys, and I said just build",
    "start": "3008198",
    "end": "3014212"
  },
  {
    "text": "me a static table so I can look\nup whether the key is in the",
    "start": "3014212",
    "end": "3020224"
  },
  {
    "text": "table with worst case time.\nGood worst case time. So I have a fixed set of keys.\nThey might be something like",
    "start": "3020225",
    "end": "3031030"
  },
  {
    "text": "for example, the hundred most\ncommon or thousand most common",
    "start": "3031030",
    "end": "3037044"
  },
  {
    "text": "words in English.\nAnd when I get a word I want to",
    "start": "3037044",
    "end": "3042510"
  },
  {
    "text": "check quickly in this table,\nis the word that I've got one of the most common words in\nEnglish.",
    "start": "3042510",
    "end": "3049961"
  },
  {
    "text": "I would like to do that not\nwith expected performance, but guaranteed worst case\nperformance.",
    "start": "3049961",
    "end": "3057250"
  },
  {
    "text": "Is there a way of building it\nso that I can find this quickly?",
    "start": "3057250",
    "end": "3063000"
  },
  {
    "text": "So the problem is given n keys\n--",
    "start": "3063000",
    "end": "3066000"
  },
  {
    "text": "-- construct a static hash\ntable. In other words,\nno insertion and deletion.",
    "start": "3072000",
    "end": "3077488"
  },
  {
    "text": "We're just going to put the\nelements in there. A size --",
    "start": "3077488",
    "end": "3082000"
  },
  {
    "text": "-- m equal Order n.\nSo I don't want it to be a huge",
    "start": "3090000",
    "end": "3097435"
  },
  {
    "text": "table.\nI want it to be a table that is",
    "start": "3097435",
    "end": "3102938"
  },
  {
    "text": "the size of my keys.\nTable of size m equals Order n,",
    "start": "3102938",
    "end": "3110523"
  },
  {
    "text": "such that search takes O(1)\ntime in the worst case.",
    "start": "3110523",
    "end": "3119000"
  },
  {
    "text": "So there's no place in the\ntable where I'm going to have, I know in the average case,\nthat's not hard to do.",
    "start": "3126000",
    "end": "3134348"
  },
  {
    "text": "But in the worst case,\nI want to make sure that there's no particular spot where\nthe number of keys piles up to",
    "start": "3134348",
    "end": "3142935"
  },
  {
    "text": "be a large number.\nOK, in no spot should that happen.\nEvery single search I do should",
    "start": "3142935",
    "end": "3149455"
  },
  {
    "text": "take Order one time.\nThere shouldn't be any statistical variation in terms\nof how long it takes me to get",
    "start": "3149455",
    "end": "3157347"
  },
  {
    "text": "something.\nDoes everybody understand what the puzzle is?\nSo this is a great, because this actually ends up\nhaving a lot of uses.",
    "start": "3157347",
    "end": "3165369"
  },
  {
    "text": "You know, you want to build a\ntable for something and you know what the values are that you're\ngoing look up in it.",
    "start": "3165369",
    "end": "3172672"
  },
  {
    "text": "But you don't want to spend a\nlot of space on it and so forth. So the idea here is actually\ngoing to be to use a two-level",
    "start": "3172673",
    "end": "3180434"
  },
  {
    "text": "scheme.",
    "start": "3180434",
    "end": "3182000"
  },
  {
    "text": "So the idea is we're going to\nuse a two-level scheme with",
    "start": "3189000",
    "end": "3202538"
  },
  {
    "text": "universal hashing at both\nlevels.",
    "start": "3202538",
    "end": "3211000"
  },
  {
    "text": "So the idea is we're going to\nhash, we're going to have a hash",
    "start": "3211000",
    "end": "3216446"
  },
  {
    "text": "table, we're going to hash into\nslots, but rather than using",
    "start": "3216446",
    "end": "3221714"
  },
  {
    "text": "chaining, we're going to have\nanother hash table there. We're going to do a second hash\ninto the second hash table.",
    "start": "3221714",
    "end": "3231713"
  },
  {
    "text": "And the idea is that we're\ngoing to do it in such a way that we have no collisions at\nlevel two.",
    "start": "3231714",
    "end": "3241000"
  },
  {
    "text": "So we may have collisions at\nlevel one. We'll take anything that\ncollides at level one and put",
    "start": "3241000",
    "end": "3248000"
  },
  {
    "text": "them into a hash table and then\nour second level hash table, but that hash table,\nno collisions.",
    "start": "3248000",
    "end": "3255153"
  },
  {
    "text": "Boom.\nWe're just going to hash right in there.\nAnd it'll just go boom to its",
    "start": "3255153",
    "end": "3260769"
  },
  {
    "text": "thing.\nSo let's draw a picture of this to illustrate the scheme.\nOK, so we have --",
    "start": "3260769",
    "end": "3268000"
  },
  {
    "text": "-- 0 one, let's say six,\nm minus one. So here's our hash table.\nAnd what we're going to do is",
    "start": "3274000",
    "end": "3282083"
  },
  {
    "text": "we're going to use universal\nhashing at the first level, OK.\nSo we find a universal hash",
    "start": "3282083",
    "end": "3289718"
  },
  {
    "text": "function.\nWe pick a hash function at random.\nAnd what we'll do is we'll hash",
    "start": "3289718",
    "end": "3296275"
  },
  {
    "text": "into that level.\nAnd then what we'll do is we'll keep track of two things.\nOne is what the size of the",
    "start": "3296275",
    "end": "3305867"
  },
  {
    "text": "hash table is at the next level.\nSo in this case, the size of the hash table will\nonly use the number of slots.",
    "start": "3305867",
    "end": "3313335"
  },
  {
    "text": "There's going to be four.\nAnd we're also going to keep a separate hash key for the second\nlevel.",
    "start": "3313335",
    "end": "3319765"
  },
  {
    "text": "So each slot will have its own\nhash function for the second level.\nSo for example,",
    "start": "3319765",
    "end": "3325227"
  },
  {
    "text": "this one might have a key of 31\nthat is a random number. The a's here.\na's up there.",
    "start": "3325228",
    "end": "3332391"
  },
  {
    "text": "There we go,\na's up there. So that's going to be the basis\nof my hash function,",
    "start": "3332391",
    "end": "3339381"
  },
  {
    "text": "the key with which I'm going to\nhash. This one say has 86.\nAnd let's say that this,",
    "start": "3339382",
    "end": "3346741"
  },
  {
    "text": "and then we have a pointer to\nthe hash table. This is say S_1.\nAnd it's got four slots and we",
    "start": "3346741",
    "end": "3355020"
  },
  {
    "text": "stored up 14 and 27.\nAnd these two slots are empty.",
    "start": "3355020",
    "end": "3361000"
  },
  {
    "text": "And this one for example,\nhad what?",
    "start": "3361000",
    "end": "3369130"
  },
  {
    "text": "Two nines.",
    "start": "3369130",
    "end": "3372000"
  },
  {
    "text": "So the idea here is that in\nthis case if we look over all",
    "start": "3388000",
    "end": "3394487"
  },
  {
    "text": "our top level hash function,\nwhich I'll just call H,",
    "start": "3394487",
    "end": "3400396"
  },
  {
    "text": "has that H of 14 is equal to H\nof 27 is equal to one.",
    "start": "3400396",
    "end": "3407000"
  },
  {
    "text": "Because we're in slot one.\nOK, so these two both hash to",
    "start": "3407000",
    "end": "3413192"
  },
  {
    "text": "the same slot in the level one\nhash table. This is level one.\nAnd this is level two over",
    "start": "3413192",
    "end": "3422761"
  },
  {
    "text": "here.\nSo level one hashing, 14 and 27 collided.\nThey went into the same slot",
    "start": "3422761",
    "end": "3431366"
  },
  {
    "text": "here.\nBut at level two, they got hashed to different\nplaces and the hash function I",
    "start": "3431366",
    "end": "3440033"
  },
  {
    "text": "use is going to be indexed by\nwhatever the random numbers are",
    "start": "3440033",
    "end": "3446533"
  },
  {
    "text": "that I chose and found for those\nand I'll show you how we find",
    "start": "3446533",
    "end": "3453140"
  },
  {
    "text": "those.\nWe have then h of 31 of 14 is equal to one h of 31 of 27 is\nequal to two.",
    "start": "3453141",
    "end": "3463000"
  },
  {
    "text": "For level two.\nSo I go, hash in here, find the, use this as the basis\nof my hash function to hash into",
    "start": "3463000",
    "end": "3471277"
  },
  {
    "text": "whatever table I've got here.\nAnd so, if there are no, if I can guarantee that there\nare no collisions at level two,",
    "start": "3471277",
    "end": "3480725"
  },
  {
    "text": "this is going to cost me Order\none time in the worst case to look something up.\nHow do I look it up?",
    "start": "3480725",
    "end": "3489604"
  },
  {
    "text": "Take the value.\nI apply h to it. That takes me to some slot.\nThen I look to see what the key",
    "start": "3489604",
    "end": "3496744"
  },
  {
    "text": "is for this hash function.\nI apply that hash function and that takes me to another slot.\nThen I go there.",
    "start": "3496744",
    "end": "3504928"
  },
  {
    "text": "And that took me basically two\napplications of hash functions plus some look-up,\nplus who knows what minor",
    "start": "3504928",
    "end": "3513191"
  },
  {
    "text": "amount of bookkeeping.\nSo the reason we're going to",
    "start": "3513191",
    "end": "3521271"
  },
  {
    "text": "have no collisions at this level\nis the following.",
    "start": "3521271",
    "end": "3530497"
  },
  {
    "text": "If they're n sub i items that\nhash to a level one slot i,",
    "start": "3530497",
    "end": "3541041"
  },
  {
    "text": "then we're going to use m sub\ni, which is equal to n sub i",
    "start": "3541041",
    "end": "3551774"
  },
  {
    "text": "squared slots in the level two\nhash table.",
    "start": "3551774",
    "end": "3561000"
  },
  {
    "text": "OK, so I should have mentioned\nhere this is going to be m sub i, the size of the hash table\nand this is going to be my a sub",
    "start": "3569000",
    "end": "3577704"
  },
  {
    "text": "i essentially.",
    "start": "3577705",
    "end": "3579000"
  },
  {
    "text": "So I'm going to use,\nso basically I'm going to hash",
    "start": "3585000",
    "end": "3590172"
  },
  {
    "text": "n sub i things into n sub i\nsquared locations here.",
    "start": "3590172",
    "end": "3595344"
  },
  {
    "text": "So this is going to be\nincredibly sparse. OK, it's going to be quadratic\nin size.",
    "start": "3595344",
    "end": "3602480"
  },
  {
    "text": "And so what I'm going to show\nis that under those circumstances,\nit's easy for me to find hash",
    "start": "3602480",
    "end": "3608418"
  },
  {
    "text": "functions such that there are n\ncollisions. That's the name of the game.\nFigure out how can I make these",
    "start": "3608418",
    "end": "3615010"
  },
  {
    "text": "hash functions so that there are\nno collisions. So that's why I draw this with\nso few elements here.",
    "start": "3615010",
    "end": "3621341"
  },
  {
    "text": "So here for example,\nI have two elements and I have a hash table size four here.\nI have three elements.",
    "start": "3621341",
    "end": "3627867"
  },
  {
    "text": "I need a hash table size nine.\nOK, if there are a hundred elements, I need a hash table\nsize 10,000.",
    "start": "3627867",
    "end": "3634918"
  },
  {
    "text": "I'm not going to pick something\nso there's likely that there's anything of that size.\nAnd then the fact that this",
    "start": "3634918",
    "end": "3641350"
  },
  {
    "text": "actually works and gives us all\nthe properties that we want, that's part of the analysis.\nSo does everybody see that this",
    "start": "3641350",
    "end": "3648251"
  },
  {
    "text": "takes Order one worst case time\nand what the basic structure of it is?\nThese things, by the way, are not in this\ncase prime.",
    "start": "3648251",
    "end": "3655210"
  },
  {
    "text": "I could always pick primes that\nwere close to this. I didn't do that in this case.\nOr I could use a universal hash",
    "start": "3655210",
    "end": "3663730"
  },
  {
    "text": "function that in fact would work\nfor things other than primes.",
    "start": "3663730",
    "end": "3669103"
  },
  {
    "text": "But I didn't do that for this\nexample. We all ready for analysis?\nOK, let's do some analysis",
    "start": "3669103",
    "end": "3676943"
  },
  {
    "text": "then.",
    "start": "3676943",
    "end": "3678000"
  },
  {
    "text": "And this is really pretty\nanalysis. Partly as you'll see because\nwe've already done some of this analysis.",
    "start": "3689000",
    "end": "3694000"
  },
  {
    "text": "So the trick is analyzing level\ntwo. That's the main thing that I\nwant to analyze,",
    "start": "3710000",
    "end": "3717309"
  },
  {
    "text": "to show that I can find hash\nfunctions here that are going",
    "start": "3717309",
    "end": "3722583"
  },
  {
    "text": "to, when I map them into,\nvery sparsely, into these arrays here,\nthat in fact,",
    "start": "3722583",
    "end": "3729523"
  },
  {
    "text": "such hash functions exist and I\ncan compute them in advance.",
    "start": "3729523",
    "end": "3736000"
  },
  {
    "text": "So that I have a good way of\nstoring those.",
    "start": "3736000",
    "end": "3743344"
  },
  {
    "text": "So here's the theorem we're\ngoing to use.",
    "start": "3743344",
    "end": "3750338"
  },
  {
    "text": "My hash and keys into m equals\nn squared slots using a random",
    "start": "3750338",
    "end": "3760829"
  },
  {
    "text": "hash function in a universal set\nH.",
    "start": "3760830",
    "end": "3768000"
  },
  {
    "text": "Then the expected number of\ncollisions is less than one",
    "start": "3768000",
    "end": "3780393"
  },
  {
    "text": "half.\nOK. The expected number of\ncollisions I don't expect there",
    "start": "3780393",
    "end": "3791372"
  },
  {
    "text": "to be even one collision.\nI expect there to be less than",
    "start": "3791372",
    "end": "3800577"
  },
  {
    "text": "half a collision on average.\nAnd so, let's prove this,",
    "start": "3800577",
    "end": "3809447"
  },
  {
    "text": "so that the probability that\ntwo given keys collide under h",
    "start": "3809447",
    "end": "3819154"
  },
  {
    "text": "is what?\nWhat's the probability that two",
    "start": "3819154",
    "end": "3825216"
  },
  {
    "text": "given keys collide under h when\nh is chosen randomly from the",
    "start": "3825216",
    "end": "3831443"
  },
  {
    "text": "universal set?\nOne over m. Right?\nThat's the definition,",
    "start": "3831443",
    "end": "3836943"
  },
  {
    "text": "right, of, which is in this\ncase equal to one over n",
    "start": "3836943",
    "end": "3842235"
  },
  {
    "text": "squared.\nSo now how many keys, how many pairs of keys do I\nhave in this table?",
    "start": "3842235",
    "end": "3851052"
  },
  {
    "text": "How many keys could possibly\ncollide with each other?",
    "start": "3851052",
    "end": "3856526"
  },
  {
    "text": "OK.\nSo that's basically just looking at how many different\npairs of keys do I have to",
    "start": "3856526",
    "end": "3865157"
  },
  {
    "text": "evaluate this for.\nSo that's n choose two pairs of",
    "start": "3865157",
    "end": "3870315"
  },
  {
    "text": "keys.\nn choose two pairs of keys.",
    "start": "3870315",
    "end": "3876655"
  },
  {
    "text": "So therefore,\nthe expected number of",
    "start": "3876655",
    "end": "3882689"
  },
  {
    "text": "collisions is while for each of\nthese n, not n over two.",
    "start": "3882689",
    "end": "3892172"
  },
  {
    "text": "n choose two pairs of keys.\nThe probability that it",
    "start": "3892172",
    "end": "3900793"
  },
  {
    "text": "collides is one in n squared.\nSo that's equal to n times n",
    "start": "3900793",
    "end": "3908922"
  },
  {
    "text": "minus one over two,\nif you remember your formula, times one in n squared.\nAnd that's less than a half.",
    "start": "3908923",
    "end": "3916000"
  },
  {
    "text": "So for every pair of keys,\nso those of you who remember from 6.042 the birthday paradox,\nthis is related to the birthday",
    "start": "3924000",
    "end": "3933063"
  },
  {
    "text": "paradox a little bit.\nBut here I basically have a large set, and I'm looking at\nall pairs, but my set is",
    "start": "3933063",
    "end": "3940333"
  },
  {
    "text": "sufficiently big that the odds\nthat I get a collision is relatively small.\nIf I start increasing it beyond",
    "start": "3940333",
    "end": "3947199"
  },
  {
    "text": "the square root of m,\nOK, the number of elements, it starts getting bigger in the\nsquare root of m then the odds",
    "start": "3947199",
    "end": "3954465"
  },
  {
    "text": "of a collision go up\ndramatically as you know from the birthday paradox.\nBut if I'm less than,",
    "start": "3954466",
    "end": "3961532"
  },
  {
    "text": "if I'm really sparse in there,\nI don't get collisions. Or at least I get a relatively\nsmall number expected.",
    "start": "3961532",
    "end": "3969196"
  },
  {
    "text": "Now I want to remind you of\nsomething which actually in the past I have just assumed,\nbut I want to actually go",
    "start": "3969197",
    "end": "3977079"
  },
  {
    "text": "through it briefly.\nIt's Markov's inequality. So who remembers Markov's\ninequality?",
    "start": "3977080",
    "end": "3982919"
  },
  {
    "text": "Don't everybody raise their\nhand at once. So Markov's inequality says the\nfollowing.",
    "start": "3982919",
    "end": "3990000"
  },
  {
    "text": "This is one of these great\nprobability facts. For random variable x which is\nbounded below by 0,",
    "start": "3990000",
    "end": "3998762"
  },
  {
    "text": "says the probability that x is\nbigger than, greater than or",
    "start": "3998762",
    "end": "4004227"
  },
  {
    "text": "equal to any given value T is\nless than or equal to the",
    "start": "4004227",
    "end": "4009316"
  },
  {
    "text": "expectation of x divided by T.\nIt's a great fact. Doesn't happen if x isn't bound\nbelow by 0.",
    "start": "4009316",
    "end": "4017796"
  },
  {
    "text": "But it's a great fact.\nIt allows me to relate the",
    "start": "4017796",
    "end": "4023230"
  },
  {
    "text": "probability of an event to its\nexpectation. And the idea is in general that\nif the expectation is going to",
    "start": "4023230",
    "end": "4032066"
  },
  {
    "text": "be small, then I can't have a\nhigh probability that the value",
    "start": "4032066",
    "end": "4037213"
  },
  {
    "text": "of the random variable is large.\nIt doesn't make sense. How could you have a high\nprobability that it's a million",
    "start": "4037213",
    "end": "4046649"
  },
  {
    "text": "when my expectation is one or in\nthis case we're going to apply",
    "start": "4046649",
    "end": "4051968"
  },
  {
    "text": "it when the expectation is a\nhalf? Couldn't happen.\nAnd the proof follows just",
    "start": "4051968",
    "end": "4059676"
  },
  {
    "text": "directly on the definition of\nexpectation, and so I'mdoing this for a discrete random\nvariable.",
    "start": "4059676",
    "end": "4067730"
  },
  {
    "text": "So the expectation by\ndefinition is just the sum from little x goes to 0 to infinity\nof x times the probability that",
    "start": "4067730",
    "end": "4077622"
  },
  {
    "text": "my random variable takes on the\nvalue x. That's the definition.\nAnd now it's just a question of",
    "start": "4077622",
    "end": "4086560"
  },
  {
    "text": "doing like the coarsest\napproximation you can imagine. First of all,\nlet me just simply throw away",
    "start": "4086560",
    "end": "4094734"
  },
  {
    "text": "all small terms that can be\ngreater to or equal to x equals T to infinity of x times the\nprobability that x is equal to",
    "start": "4094734",
    "end": "4104715"
  },
  {
    "text": "little x.\nSo just throw away all the low order terms.\nNow what I'm going to do is",
    "start": "4104716",
    "end": "4111426"
  },
  {
    "text": "replace every one of these terms\nis lower bounded by the value x",
    "start": "4111427",
    "end": "4116847"
  },
  {
    "text": "equals T.\nSo that's just the summation of",
    "start": "4116848",
    "end": "4122875"
  },
  {
    "text": "x equals T to infinity of T\ntimes the probability that x",
    "start": "4122875",
    "end": "4129750"
  },
  {
    "text": "equals x.\nOK. Over x going from T larger.\nBecause these are only bigger",
    "start": "4129750",
    "end": "4138250"
  },
  {
    "text": "values.\nAnd that's just equal then to T, because I can pull that out,\nand the summation of x equals T",
    "start": "4138250",
    "end": "4146305"
  },
  {
    "text": "to infinity of the probability\nthat x equals x is just the probability that x is greater\nthan or equal to T.",
    "start": "4146306",
    "end": "4154000"
  },
  {
    "text": "And that's done because I just\ndivide by T.",
    "start": "4160000",
    "end": "4166000"
  },
  {
    "text": "So that's Markov's inequality.\nReally dumb. Really simple.\nThere are much stronger things",
    "start": "4171000",
    "end": "4177919"
  },
  {
    "text": "like Chebyshev bounds and\nChernoff bounds and things of that nature.\nBut Markov's is like",
    "start": "4177919",
    "end": "4184838"
  },
  {
    "text": "unbelievably simple and useful.\nSo we're going to just apply that as a corollary.",
    "start": "4184839",
    "end": "4192000"
  },
  {
    "text": "So the probability now of no\ncollisions, when I hash n keys",
    "start": "4206000",
    "end": "4213060"
  },
  {
    "text": "into n squared slots using a\nuniversal hash function,",
    "start": "4213060",
    "end": "4219391"
  },
  {
    "text": "I claim is the probability of\nno collisions is greater than or",
    "start": "4219391",
    "end": "4226817"
  },
  {
    "text": "equal to a half.\nSo I pick a hash function at",
    "start": "4226817",
    "end": "4232173"
  },
  {
    "text": "random.\nWhat are the odds that I got no collisions when I hashed those n\nkeys into n squared slots?",
    "start": "4232173",
    "end": "4240917"
  },
  {
    "text": "Answer.\nProbability is I have no collisions is at least a half.\nHalf the time I'm guaranteed",
    "start": "4240917",
    "end": "4247834"
  },
  {
    "text": "that there won't be a collision.\nAnd the proof, pretty simple.\nThe probability of no",
    "start": "4247834",
    "end": "4254129"
  },
  {
    "text": "collisions is the same as the\nprobability as, sorry, is one minus the\nprobability that I have at most",
    "start": "4254129",
    "end": "4261745"
  },
  {
    "text": "one collision.\nSo the odds that I have at least one collision,\nthe odds that I have at least",
    "start": "4261746",
    "end": "4269337"
  },
  {
    "text": "one collision,\nprobability greater than or equal to one collision is less\nthan or equal to,",
    "start": "4269337",
    "end": "4275599"
  },
  {
    "text": "now I just apply Markov's\ninequality with this. So it's just the expected\nnumber of collisions --",
    "start": "4275599",
    "end": "4283000"
  },
  {
    "text": "-- divided by one.\nAnd that is by Markov's inequality less than,\nby definition,",
    "start": "4289000",
    "end": "4296272"
  },
  {
    "text": "excuse me, of expected number\nof collisions, which we've already shown,\nis less than a half.",
    "start": "4296272",
    "end": "4304363"
  },
  {
    "text": "So the probability of at least\none collision is less than a",
    "start": "4304363",
    "end": "4309635"
  },
  {
    "text": "half.\nThe probability of 0 collisions is at least a half.\nSo we're done here.",
    "start": "4309636",
    "end": "4316363"
  },
  {
    "text": "So to find a good level to hash\nfunction is easy.",
    "start": "4316363",
    "end": "4322000"
  },
  {
    "text": "I just test a few at random.\nMost of them out there, OK, half of them,\nat least half of them are going",
    "start": "4322000",
    "end": "4330856"
  },
  {
    "text": "to work.\nSo this is in some sense, if you think about it,\na randomized construction,",
    "start": "4330856",
    "end": "4338102"
  },
  {
    "text": "because I can't tell you which\none it's going to be. It's non-constructive in that\nsense, but it's a randomized",
    "start": "4338102",
    "end": "4347763"
  },
  {
    "text": "construction.\nBut they have to exist because most of them out there have this\ngood property.",
    "start": "4347763",
    "end": "4356297"
  },
  {
    "text": "So I'mgoing to be able to find\nfor each one of these, I just test a few at random,\nand I find one.",
    "start": "4356297",
    "end": "4364168"
  },
  {
    "text": "Test a few at random,\nfind one, etc. Fill in my table there.\nBecause all that is",
    "start": "4364168",
    "end": "4370548"
  },
  {
    "text": "pre-computation.\nAnd I'mgoing to find them because the odds are good that\none exists.",
    "start": "4370548",
    "end": "4377342"
  },
  {
    "text": "So --",
    "start": "4377342",
    "end": "4379000"
  },
  {
    "text": "-- we just test a few at random.",
    "start": "4393000",
    "end": "4394000"
  },
  {
    "text": "And we'll find one quickly --",
    "start": "4404000",
    "end": "4405000"
  },
  {
    "text": "-- since at least half will\nwork. I just want to show that there\nexists good ones.",
    "start": "4412000",
    "end": "4417678"
  },
  {
    "text": "All I have to prove is that at\nleast one works for each of these cases.\nIn fact, I've shown that",
    "start": "4417679",
    "end": "4424365"
  },
  {
    "text": "there's a huge number that will\nwork. Half of them will work.\nBut to show it exists,",
    "start": "4424366",
    "end": "4430189"
  },
  {
    "text": "I would just have to show that\nthe probability was greater than 0.\nSo to finish up,",
    "start": "4430189",
    "end": "4435941"
  },
  {
    "text": "we need to still analyze the\nstorage because I promised in my theorem that the table would be\nof size order n.",
    "start": "4435941",
    "end": "4445000"
  },
  {
    "text": "And yet now I've said there's\nall of these quadratic-sized",
    "start": "4445000",
    "end": "4452702"
  },
  {
    "text": "slots here.\nSo I'mgoing to show that that's",
    "start": "4452702",
    "end": "4458378"
  },
  {
    "text": "order n.",
    "start": "4458378",
    "end": "4460000"
  },
  {
    "text": "So for level one,\nthat's easy. We'll just choose the number of\nslots to be equal to the number",
    "start": "4471000",
    "end": "4485450"
  },
  {
    "text": "of keys.\nAnd that way the storage at",
    "start": "4485450",
    "end": "4491008"
  },
  {
    "text": "level one is just order n.\nAnd now let's let n sub i be",
    "start": "4491008",
    "end": "4499583"
  },
  {
    "text": "the random variable for the\nnumber of keys --",
    "start": "4499583",
    "end": "4508000"
  },
  {
    "text": "-- that hash to slot i in T.\nOK, so n sub i is just what",
    "start": "4513000",
    "end": "4521712"
  },
  {
    "text": "we've called it.\nNumber of elements that slot",
    "start": "4521712",
    "end": "4528683"
  },
  {
    "text": "there.\nAnd we're going to use m sub i",
    "start": "4528683",
    "end": "4534386"
  },
  {
    "text": "equals n sub i squared slots in\neach level two table S sub i.",
    "start": "4534386",
    "end": "4545000"
  },
  {
    "text": "So the expected total storage --",
    "start": "4545000",
    "end": "4547000"
  },
  {
    "text": "-- is just n for level one,\norder n if you want,",
    "start": "4554000",
    "end": "4561085"
  },
  {
    "text": "but basically n slots for level\none plus the expected value,",
    "start": "4561085",
    "end": "4569979"
  },
  {
    "text": "whatever I expect the sum of i\nequals 0 to m minus one of theta",
    "start": "4569979",
    "end": "4579326"
  },
  {
    "text": "of n sub i squared to be.",
    "start": "4579326",
    "end": "4584000"
  },
  {
    "text": "Because I basically have to add\nup the square for every element",
    "start": "4590000",
    "end": "4596048"
  },
  {
    "text": "that applies here,\nthe square of what's in there. Who recognizes this summation?\nWhere have we seen that before?",
    "start": "4596048",
    "end": "4606682"
  },
  {
    "text": "Who attends recitation?\nWhere have we seen this before?",
    "start": "4606682",
    "end": "4611951"
  },
  {
    "text": "What's the --",
    "start": "4611951",
    "end": "4614000"
  },
  {
    "text": "We're summing the expected\nvalue of a bunch of --",
    "start": "4623000",
    "end": "4626000"
  },
  {
    "text": "Yeah, what was that algorithm?\nWe did the sorting algorithm, right?\nWhat was the sorting algorithm",
    "start": "4631000",
    "end": "4637375"
  },
  {
    "text": "for which this was an important\nthing to evaluate?",
    "start": "4637375",
    "end": "4641000"
  },
  {
    "text": "Don't everybody shout it out at\nonce. What was that sorting algorithm\ncalled?",
    "start": "4646000",
    "end": "4653000"
  },
  {
    "text": "Bucket sort.\nGood. Bucket sort.\nYeah. We showed that the sum of the\nsquares of random variables when",
    "start": "4653000",
    "end": "4666397"
  },
  {
    "text": "they're falling randomly into n\nbins is order n.",
    "start": "4666397",
    "end": "4673025"
  },
  {
    "text": "Right?",
    "start": "4673025",
    "end": "4675000"
  },
  {
    "text": "And you can also out of this\nget a, as we did before, get a probability bound.\nWhat's the probability that",
    "start": "4696000",
    "end": "4704131"
  },
  {
    "text": "it's more than a certain amount\ntimes n using Markov's inequality.\nBut this is the key thing is",
    "start": "4704131",
    "end": "4711394"
  },
  {
    "text": "we've seen this analysis.\nOK, we used it there in time, so there's a little bit,\nbut that's one of the reasons",
    "start": "4711394",
    "end": "4719963"
  },
  {
    "text": "we study sorting at the\nbeginning of the term is because the techniques of sorting,\nthey just propagate into all",
    "start": "4719963",
    "end": "4727889"
  },
  {
    "text": "these other areas of analysis.\nYou see a lot of the same kinds of things.\nAnd so now that you know bucket",
    "start": "4727890",
    "end": "4735309"
  },
  {
    "text": "sort clearly so well,\nnow you know that this without having to do any extra work.\nSo you might want to go back",
    "start": "4735309",
    "end": "4744610"
  },
  {
    "text": "and review your bucket sort\nanalysis, because it's applied",
    "start": "4744610",
    "end": "4749926"
  },
  {
    "text": "now.\nSame analysis. Two places.\nOK. Good recitation this Friday,\nwhich will be a quiz review and",
    "start": "4749926",
    "end": "4758411"
  },
  {
    "text": "we have a quiz next,\nthere's no class on Monday, but we have a quiz on next\nWednesday.",
    "start": "4758411",
    "end": "4766151"
  },
  {
    "text": "OK, so good luck everybody on\nthe quiz. Make sure you get plenty of\nsleep.",
    "start": "4766151",
    "end": "4773200"
  }
]