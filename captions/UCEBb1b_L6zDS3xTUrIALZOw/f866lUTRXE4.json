[
  {
    "start": "0",
    "end": "500"
  },
  {
    "text": "Given a set of symbols\nand their probabilities,",
    "start": "500",
    "end": "3370"
  },
  {
    "text": "Huffman’s Algorithm tells us\nhow to construct an optimal",
    "start": "3370",
    "end": "6960"
  },
  {
    "text": "variable-length encoding.",
    "start": "6960",
    "end": "8750"
  },
  {
    "text": "By “optimal” we mean that,\nassuming we’re encoding each",
    "start": "8750",
    "end": "11570"
  },
  {
    "text": "symbol one-at-a-time, no other\nvariable-length code will have",
    "start": "11570",
    "end": "15000"
  },
  {
    "text": "a shorter expected length.",
    "start": "15000",
    "end": "17369"
  },
  {
    "text": "The algorithm builds the\nbinary tree for the encoding",
    "start": "17370",
    "end": "20000"
  },
  {
    "text": "from the bottom up.",
    "start": "20000",
    "end": "21340"
  },
  {
    "text": "Start by choosing the two\nsymbols with the smallest",
    "start": "21340",
    "end": "23830"
  },
  {
    "text": "probability (which\nmeans they have",
    "start": "23830",
    "end": "25550"
  },
  {
    "text": "highest information content\nand should have the longest",
    "start": "25550",
    "end": "28009"
  },
  {
    "text": "encoding).",
    "start": "28010",
    "end": "29750"
  },
  {
    "text": "If anywhere along\nthe way, two symbols",
    "start": "29750",
    "end": "31440"
  },
  {
    "text": "have the same probability,\nsimply choose one arbitrarily.",
    "start": "31440",
    "end": "35010"
  },
  {
    "text": "In our running example, the\ntwo symbols with the lowest",
    "start": "35010",
    "end": "37339"
  },
  {
    "text": "probability are C and D.",
    "start": "37340",
    "end": "40310"
  },
  {
    "text": "Combine the symbols\nas a binary subtree,",
    "start": "40310",
    "end": "42580"
  },
  {
    "text": "with one branch labeled\n“0” and the other “1”.",
    "start": "42580",
    "end": "44770"
  },
  {
    "text": "It doesn’t matter which\nlabels go with which branch.",
    "start": "44770",
    "end": "48530"
  },
  {
    "text": "Remove C and D from\nour list of symbols,",
    "start": "48530",
    "end": "51050"
  },
  {
    "text": "and replace them with the newly\nconstructed subtree, whose root",
    "start": "51050",
    "end": "54840"
  },
  {
    "text": "has the associated\nprobability 1/6,",
    "start": "54840",
    "end": "57660"
  },
  {
    "text": "the sum of the probabilities\nof its two branches.",
    "start": "57660",
    "end": "61640"
  },
  {
    "text": "Now continue, at each step\nchoosing the two symbols",
    "start": "61640",
    "end": "64620"
  },
  {
    "text": "and/or subtrees with the\nlowest probabilities,",
    "start": "64620",
    "end": "67050"
  },
  {
    "text": "combining the choices\ninto a new subtree.",
    "start": "67050",
    "end": "70620"
  },
  {
    "text": "At this point in our\nexample, the symbol A",
    "start": "70620",
    "end": "72650"
  },
  {
    "text": "has the probability 1/3, the\nsymbol B the probability 1/2",
    "start": "72650",
    "end": "76880"
  },
  {
    "text": "and the C/D subtree\nprobability 1/6.",
    "start": "76880",
    "end": "79610"
  },
  {
    "text": "So we’ll combine A\nwith the C/D subtree.",
    "start": "79610",
    "end": "84290"
  },
  {
    "text": "On the final step we only\nhave two choices left:",
    "start": "84290",
    "end": "86880"
  },
  {
    "text": "B and the A/C/D\nsubtree, which we",
    "start": "86880",
    "end": "89810"
  },
  {
    "text": "combine in a new subtree,\nwhose root then becomes",
    "start": "89810",
    "end": "92350"
  },
  {
    "text": "the root of the\ntree representing",
    "start": "92350",
    "end": "93909"
  },
  {
    "text": "the optimal\nvariable-length code.",
    "start": "93910",
    "end": "96440"
  },
  {
    "text": "Happily, this is the code\nwe’ve been using all along!",
    "start": "96440",
    "end": "100060"
  },
  {
    "text": "As mentioned above, we can\nproduce a number of different",
    "start": "100060",
    "end": "102729"
  },
  {
    "text": "variable-length codes by\nswapping the “0” and “1” labels",
    "start": "102730",
    "end": "105890"
  },
  {
    "text": "on any of the subtree branches.",
    "start": "105890",
    "end": "108290"
  },
  {
    "text": "But all those encodings would\nhave the same expected length,",
    "start": "108290",
    "end": "111120"
  },
  {
    "text": "which is determined by the\ndistance of each symbol",
    "start": "111120",
    "end": "113770"
  },
  {
    "text": "from the root of the tree,\nnot the labels along the path",
    "start": "113770",
    "end": "116640"
  },
  {
    "text": "from root to leaf.",
    "start": "116640",
    "end": "118560"
  },
  {
    "text": "So all these different\nencodings are",
    "start": "118560",
    "end": "120250"
  },
  {
    "text": "equivalent in terms\nof their efficiency.",
    "start": "120250",
    "end": "123110"
  },
  {
    "text": "Now try your hand at\nusing Huffman’s Algorithm",
    "start": "123110",
    "end": "125450"
  },
  {
    "text": "to construct optimal\nvariable-length encodings.",
    "start": "125450",
    "end": "128959"
  }
]