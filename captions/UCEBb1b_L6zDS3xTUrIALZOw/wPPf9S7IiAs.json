[
  {
    "start": "0",
    "end": "36370"
  },
  {
    "text": "PROFESSOR: All right,\nlet's get started. So today we're continuing\nthe theme of locked linkages.",
    "start": "36370",
    "end": "43120"
  },
  {
    "text": "Last time we talked about the\nCarpenter's Rule Theorem, which brought together all of the\nrigidity theory and tensegrity",
    "start": "43120",
    "end": "48420"
  },
  {
    "text": "theory we had\nbuilt, essentially, and showed that there\nwere no locked 2D",
    "start": "48420",
    "end": "55090"
  },
  {
    "text": "chains, paths or\ncycles, as graphs. And in general you can think\nin 2D, you can think in 3D,",
    "start": "55090",
    "end": "67130"
  },
  {
    "text": "and you can think\nin 4D and higher. I drew this table way at\nthe beginning of class.",
    "start": "67130",
    "end": "74560"
  },
  {
    "text": "And you can think\nabout chains, which are-- these are so-called open\nchains, like robotic arms.",
    "start": "74560",
    "end": "84470"
  },
  {
    "text": "Paths is a graph. And polygons are closed chains.",
    "start": "84470",
    "end": "92630"
  },
  {
    "text": "And then another case it's\ninteresting to think about, and there's been a lot of\nwork on, are trees where",
    "start": "92630",
    "end": "97820"
  },
  {
    "text": "you don't have any\ncycles in your graph, but you could have branching\npoints with degree more than 2.",
    "start": "97820",
    "end": "104890"
  },
  {
    "text": "You may recall Carpenter's\nRule Theorem worked whenever you had a graph of\nmaximum degree 2.",
    "start": "104890",
    "end": "111049"
  },
  {
    "text": "So it allowed even\nmultiple chains in one graph that\ncould be disconnected.",
    "start": "111050",
    "end": "116980"
  },
  {
    "text": "But it forbade any kind\nof tree branching stuff.",
    "start": "116980",
    "end": "122020"
  },
  {
    "text": "So Carpenter's Rule\nTheorem is that there's no locked chains in 2D.",
    "start": "122020",
    "end": "127990"
  },
  {
    "text": "So we did that. But trees, there are\nlocked trees in 2D.",
    "start": "127990",
    "end": "136020"
  },
  {
    "text": "3D there are locked chains. And these are two\nresults that we",
    "start": "136020",
    "end": "141720"
  },
  {
    "text": "will talk about in\ntoday's lecture. And that implies that there are\nlocked trees, sort of obvious.",
    "start": "141720",
    "end": "151190"
  },
  {
    "text": "Trees are more general\nthan open chains. And because there's a\nlocked open chain in 3D,",
    "start": "151190",
    "end": "156700"
  },
  {
    "text": "there's also a locked tree. In 4D, though, it switches.",
    "start": "156700",
    "end": "162450"
  },
  {
    "text": "So none of these\nthings are locked. Of course, there are\nlocked graphs in general.",
    "start": "162450",
    "end": "168000"
  },
  {
    "text": "But if you look at trees, or\npaths, or cycles, none of them can lock. We won't have time to talk\nabout that today, maybe",
    "start": "168000",
    "end": "174056"
  },
  {
    "text": "another class.  Essentially we're\nalways thinking about an intrinsically\none dimensional structure.",
    "start": "174057",
    "end": "180890"
  },
  {
    "text": "These edges, bars, are\nalways one dimensional. In 2D, where the\nspace are living in,",
    "start": "180890",
    "end": "187980"
  },
  {
    "text": "the ambient dimension is just\none more than the dimension of your edges, it's\nreally interesting. And that's what\nwe saw for chains",
    "start": "187980",
    "end": "195069"
  },
  {
    "text": "and what we'll see for trees. In 3D it gets tricky. This mismatch of\ntwo in dimension",
    "start": "195070",
    "end": "202480"
  },
  {
    "text": "allows you to lock things,\nkind of like knots. And in 4D there's such--\nthere's so much freedom",
    "start": "202480",
    "end": "208480"
  },
  {
    "text": "in the way you move,\nsomehow, nothing can lock, in the same way\nthat there are no knots in 4D. ",
    "start": "208480",
    "end": "215840"
  },
  {
    "text": "Cool. So that's the reminder\nsummary about locked linkages, what they are, and\nwhat's known about them.",
    "start": "215840",
    "end": "223920"
  },
  {
    "text": "Now we've seen that\nchains aren't locked. But before I get trees I\nwant to talk about algorithms",
    "start": "223920",
    "end": "229360"
  },
  {
    "text": "for actually doing this. This is, after all,\ngeometric folding algorithms. We've seen a proof\nthat they exist,",
    "start": "229360",
    "end": "235866"
  },
  {
    "text": "that in fact if we\nhad a chain, there's an expansive motion\nincreases all the distances and therefore doesn't\ncollide with itself,",
    "start": "235866",
    "end": "244300"
  },
  {
    "text": "and eventually straightens\nall the outermost open chains and convexifies all the closed\nchains that are outermost,",
    "start": "244300",
    "end": "252260"
  },
  {
    "text": "not containing anything. But how do we actually\nfind such a motion?",
    "start": "252260",
    "end": "259570"
  },
  {
    "text": "And this has been the\nsubject of some study. There are three\nalgorithms for doing it. ",
    "start": "259570",
    "end": "268590"
  },
  {
    "text": "So we'll call this\nunfolding 2D chains,",
    "start": "268590",
    "end": "275940"
  },
  {
    "text": "unfolding being the goal of\nstraightening or convexifying.",
    "start": "275940",
    "end": "282040"
  },
  {
    "text": "And the first algorithm is just\nto mimic the proof that we saw. ",
    "start": "282040",
    "end": "299699"
  },
  {
    "text": "I call that proof CDR, because\nit's Connelly-Demain-Rote. And if you think\nabout what we proved,",
    "start": "299700",
    "end": "307100"
  },
  {
    "text": "we just looked at the sort\nof infinitesimal case. We said, if we're at some\nposition then at least,",
    "start": "307100",
    "end": "312889"
  },
  {
    "text": "for an infinitesimal\namount of time, we can increase\nall the distances. All the struts can\nincrease in length,",
    "start": "312890",
    "end": "318319"
  },
  {
    "text": "and the bars stay\nthe same length. That's really only specifying\nthe first derivative",
    "start": "318320",
    "end": "323550"
  },
  {
    "text": "of a motion. So if you think of motion\nas being, I don't know, some configuration C\nthat's a function of time,",
    "start": "323550",
    "end": "330430"
  },
  {
    "text": "and you take the derivative\nwith respect to t, then we computed what\nthat derivative should be.",
    "start": "330430",
    "end": "336107"
  },
  {
    "text": "That was the first order motion. I think we called it d,\nwhich is a little confusing.",
    "start": "336107",
    "end": "342270"
  },
  {
    "text": "This is the d that we computed. And we said, well that's\nan infinitesimal motion",
    "start": "342270",
    "end": "349710"
  },
  {
    "text": "of some tensegrity. We can find it with\nlinear programming. So at any moment in\ntime we can figure out",
    "start": "349710",
    "end": "355050"
  },
  {
    "text": "what our derivative should be. This is what's called an\nordinary differential equation,",
    "start": "355050",
    "end": "360720"
  },
  {
    "text": "for those who have\ntaking 1803 or whatever. You just solve it. And a very easy\nway to solve it is",
    "start": "360720",
    "end": "366889"
  },
  {
    "text": "if you imagine configuration\nspace, you start somewhere, you compute which\nway to go, you move",
    "start": "366890",
    "end": "372349"
  },
  {
    "text": "a little bit in that direction. You're only supposed to go\nfor an infinitesimal amount. But it goes some\npositive epsilon.",
    "start": "372349",
    "end": "378070"
  },
  {
    "text": "Then recompute\nyour new direction, follow that, recompute\nyour new direction, follow that for a little\nbit, and keep going.",
    "start": "378070",
    "end": "384500"
  },
  {
    "text": "And you're almost tracking\nthe intended curve. It's not quite perfect. But as your step\nsize, this epsilon,",
    "start": "384500",
    "end": "391440"
  },
  {
    "text": "goes to 0 you approximate\nthe intended path. And that's, I mean how\nclose you approximate",
    "start": "391440",
    "end": "398514"
  },
  {
    "text": "is computed in the textbook. You can see that for details. This is a method\ncalled forward Euler. It's like the simplest way to\nsolve an ordinary differential",
    "start": "398514",
    "end": "406810"
  },
  {
    "text": "equation. There are much better ways. But it's easiest to think\nabout, and reason about. And so it gives you some\napproximate solution.",
    "start": "406810",
    "end": "414835"
  },
  {
    "text": " Let me show it to you. ",
    "start": "414835",
    "end": "423130"
  },
  {
    "text": "I'm going to show\nyou three methods. The top one is the\none I'm talking about. So we're starting\nwith the same polygon",
    "start": "423130",
    "end": "428425"
  },
  {
    "text": "on the left, simple\nlittle v shape. A second method is called\npseudo-triangulation.",
    "start": "428425",
    "end": "433595"
  },
  {
    "text": "We'll talk about that next. The third method's\ncalled energy. That one's one you've seen. Let's start with\nthe first method,",
    "start": "433595",
    "end": "439810"
  },
  {
    "text": "where we take some example\nlike this teeth example,",
    "start": "439810",
    "end": "445080"
  },
  {
    "text": "and we, at each\nstep, compute what is the, in some\nsense, the biggest",
    "start": "445080",
    "end": "451960"
  },
  {
    "text": "expanse of motion you could do. We go a little bit\nin that direction. So in these animations,\nthe edge links are changing a little bit.",
    "start": "451960",
    "end": "457957"
  },
  {
    "text": "And I've chosen the step size\nso the edge lengths change by, at most, 10%,\nsomething like that. And here, this one,\nleft side we're",
    "start": "457957",
    "end": "464389"
  },
  {
    "text": "zooming, right side\nwe're not zooming. These are somewhat\nolder animations. So apologies for the frame rate.",
    "start": "464390",
    "end": "471580"
  },
  {
    "text": "What else do I want to say? This is an example--\nwell, notice it's pulling the teeth\noff sort of from the end.",
    "start": "471580",
    "end": "477650"
  },
  {
    "text": "If you want to be expensive you\ncannot pull the teeth apart. We're going to see other ways\nto do the teeth in a moment.",
    "start": "477650",
    "end": "482702"
  },
  {
    "text": "Here's another example. Both of these\nexamples at some point we're conjectured to be locked.",
    "start": "482702",
    "end": "488430"
  },
  {
    "text": "Before the Carpenter's\nRule Theorem was proved, a lot of people were trying\nto find counter examples.",
    "start": "488430",
    "end": "493862"
  },
  {
    "text": "There aren't any.  So this is nice. It preserve five-fold\nrotational symmetry.",
    "start": "493862",
    "end": "502560"
  },
  {
    "text": "And you can do it for\nmultiple shapes as well. So here we have one polygon\nin the center, four arcs,",
    "start": "502560",
    "end": "509890"
  },
  {
    "text": "four paths on the outside. In this case, the simulation\nstopped when one of them",
    "start": "509890",
    "end": "516380"
  },
  {
    "text": "convexified because I didn't\nimplement all of the algorithm. At that point you just have\nto rigidify that polygon",
    "start": "516380",
    "end": "523229"
  },
  {
    "text": "and expand the rest. So that gives you an\nidea sort of visually",
    "start": "523230",
    "end": "529139"
  },
  {
    "text": "what this looks like. Qualitatively, we can say\na bunch of cool things about this method.",
    "start": "529140",
    "end": "535070"
  },
  {
    "text": "One is that's it's the\nonly method that's strictly expansive, strictly meaning not\nonly do the struts not decrease",
    "start": "535070",
    "end": "546100"
  },
  {
    "text": "in length, but they\nalso don't stay the same whenever that's possible. They strictly increase.",
    "start": "546100",
    "end": "551150"
  },
  {
    "text": "Now, there are some exceptions. If I have a bar, obviously,\nif I add a strut here",
    "start": "551150",
    "end": "556750"
  },
  {
    "text": "it's not going to strictly\nincrease in length. Also, if I have a bunch\nof bars that are collinear",
    "start": "556750",
    "end": "562020"
  },
  {
    "text": "and I add a strut\nfrom here to here, that's not going to\nincrease in length. It's not possible.",
    "start": "562020",
    "end": "567090"
  },
  {
    "text": "But all other struts will\nstrictly increase in length. You can check. That's what we proved here.",
    "start": "567090",
    "end": "575150"
  },
  {
    "text": "So that's nice. Another fun fact, I\ndidn't write it here,",
    "start": "575150",
    "end": "582860"
  },
  {
    "text": "but it preserves symmetry\nif you do it right. ",
    "start": "582860",
    "end": "591350"
  },
  {
    "text": "You may notice in\nthis example actually, it was originally four-fold\nrotationally symmetric. It does rotate a little bit.",
    "start": "591350",
    "end": "598360"
  },
  {
    "text": "That's from computational error. And you could correct for that. I didn't correct for it.",
    "start": "598360",
    "end": "605050"
  },
  {
    "text": "It should, in theory, preserve\nthe four-fold symmetry there.",
    "start": "605050",
    "end": "611700"
  },
  {
    "text": "Good. We can compute one step. So how fast can you\ncompute this thing?",
    "start": "611700",
    "end": "618310"
  },
  {
    "text": "We can compute one step\nin polynomial time. That's finding an infinitesimal\nmotion of a tensegrity. That's linear programming.",
    "start": "618310",
    "end": "624345"
  },
  {
    "text": " But how many steps does it make?",
    "start": "624345",
    "end": "631819"
  },
  {
    "text": "We don't really know. There is a bound\nin the textbook. It's not very small.",
    "start": "631820",
    "end": "638390"
  },
  {
    "text": "It's also-- with forward Euler\nyou lose a bit of accuracy.",
    "start": "638390",
    "end": "644960"
  },
  {
    "text": "Now you could\ncorrect for accuracy, force all the edge\nlengths to be the same, then you won't\npreserve the symmetry.",
    "start": "644960",
    "end": "650079"
  },
  {
    "text": "There's a bit of trade off here. I don't want to spend\ntoo much time on it. This is the first algorithm. Although it's the only one\nthat's strictly expensive,",
    "start": "650080",
    "end": "658280"
  },
  {
    "text": "to me it's not the nicest. So I'm going to move on\nto the next method which",
    "start": "658280",
    "end": "666976"
  },
  {
    "text": "is pointed\npseudo-triangulations. ",
    "start": "666976",
    "end": "673970"
  },
  {
    "text": "This is a method\nby Ileana Streinu, basically at the same\ntime as the original",
    "start": "673970",
    "end": "680350"
  },
  {
    "text": "Carpenter's Rule Theorem. And these are\nexamples of what are called pointed\npseudo-triangulations",
    "start": "680350",
    "end": "686970"
  },
  {
    "text": "for a given set of points. So in general, a\npseudo-triangle is a polygon",
    "start": "686970",
    "end": "694040"
  },
  {
    "text": "that has three convex vertices. So a triangle has three\nconvex vertices and that's it.",
    "start": "694040",
    "end": "700019"
  },
  {
    "text": "A pseudo-triangle, I allow\na bunch of reflex vertices in between those guys.",
    "start": "700020",
    "end": "707260"
  },
  {
    "text": "So this should be a polygon. I've drawn it curved. And if you check in this\nfigure, all of the faces",
    "start": "707260",
    "end": "715430"
  },
  {
    "text": "are pseudo-triangles. Most of them here are\nactually quadrilaterals. But in particular,\nthat's a pseudo-triangle.",
    "start": "715430",
    "end": "721089"
  },
  {
    "text": "Sometimes there's\nactual triangles. Here they're all\nquads or triangles.",
    "start": "721090",
    "end": "727130"
  },
  {
    "text": "And a pointed\npseudo-triangulation has the property\nthat at every vertex",
    "start": "727130",
    "end": "734630"
  },
  {
    "text": "all of the edges incident\nto it lie in a half plane. They all lie on that side.",
    "start": "734630",
    "end": "741339"
  },
  {
    "text": "In other words, there's an angle\nthat's bigger than 180 degrees. So this was a pseudo-triangle,\nand this is pointed.",
    "start": "741340",
    "end": "752150"
  },
  {
    "text": " And if you check this\nexample, every vertex",
    "start": "752150",
    "end": "758330"
  },
  {
    "text": "has an angle that's\nbigger than 180 degrees. ",
    "start": "758330",
    "end": "764510"
  },
  {
    "text": "Obviously the ones on\nthe outside have to. They're always convex. And pointed\npseudo-triangulations",
    "start": "764510",
    "end": "771240"
  },
  {
    "text": "are-- they're not only supposed\nto have these two properties, but you're also supposed to\nhave as many edges as possible,",
    "start": "771240",
    "end": "778345"
  },
  {
    "text": "subject to having\nthese two properties. If you tried to add any edge\nto either of these examples,",
    "start": "778346",
    "end": "783899"
  },
  {
    "text": "you would violate\nthe pointed property. If I added this edge, then I'd\ndestroy this 180 degree angle.",
    "start": "783900",
    "end": "791630"
  },
  {
    "text": "Any edge you\nconsider, either you get a crossing--\nwhich is not allowed-- or one of the vertices\nloses a 180 degree angle.",
    "start": "791630",
    "end": "801250"
  },
  {
    "text": "So this is actually a\nreally powerful concept. And it was introduced by this\npaper by Streinu in 2000.",
    "start": "801250",
    "end": "807470"
  },
  {
    "text": "It has lots of theory\nbuilt around it by now. I'm not going to talk\nabout that theory. I want to talk about how it\napplies to Carpenter's Rule",
    "start": "807470",
    "end": "814466"
  },
  {
    "text": "problem. ",
    "start": "814466",
    "end": "819546"
  },
  {
    "text": "I guess the first\nthing to say is that if you have,\nsay, a polygon-- maybe",
    "start": "819546",
    "end": "828589"
  },
  {
    "text": "I should do a real example,\nso I'll make it not so giant. ",
    "start": "828590",
    "end": "836230"
  },
  {
    "text": "OK, you take a polygon. So far it's pointed, right? Every vertex-- one\nof the two sides",
    "start": "836230",
    "end": "841980"
  },
  {
    "text": "has an angle bigger than 180. So just add as many edges as you\ncan while still being pointed.",
    "start": "841980",
    "end": "850485"
  },
  {
    "text": "Do, do, do. This one, that looks OK.",
    "start": "850485",
    "end": "855570"
  },
  {
    "text": " I think that's it.",
    "start": "855570",
    "end": "860589"
  },
  {
    "text": "I think this is a\npseudo-triangulation. I've added as many edges as I\ncan while still being point. It turns out if you start\nwith something that's pointed,",
    "start": "860590",
    "end": "867060"
  },
  {
    "text": "you'll be able to keep adding\nedges, keep it pointed. And in the end all of the\nfaces will be pseudo-triangles.",
    "start": "867060",
    "end": "872930"
  },
  {
    "text": "So mission accomplished. This is a pointed\npseudo-triangulation that contains, as a subgraph,\nmy original polygon.",
    "start": "872930",
    "end": "880160"
  },
  {
    "text": " So these are the edge\nlengths I want to preserve.",
    "start": "880160",
    "end": "886120"
  },
  {
    "text": "Those should stay rigid. I'm going to be kind of\ncrazy and also preserve the lengths of all\nof these edges.",
    "start": "886120",
    "end": "893070"
  },
  {
    "text": "Now if you did that, this\nthing would be rigid, which is not so exciting. All you need to do to fix that\nis remove one of these added",
    "start": "893070",
    "end": "901300"
  },
  {
    "text": "edges that's on the convex hull\non the outer boundary here. Then it will have one\ndegree of freedom.",
    "start": "901300",
    "end": "908069"
  },
  {
    "text": "So there will be\ntwo ways to move it. One is to expand this distance,\nthe other is to contract it. And the one that\nexpands that distance",
    "start": "908069",
    "end": "915250"
  },
  {
    "text": "will expand all distances. So if you look at some\nother pair, like this guy,",
    "start": "915250",
    "end": "922730"
  },
  {
    "text": "every other pair of distances\nwill expand or stay the same.",
    "start": "922730",
    "end": "927790"
  },
  {
    "text": "So this thing is expansive. ",
    "start": "927790",
    "end": "933930"
  },
  {
    "text": "But not strictly\nexpensive, because we're preserving these lengths. These ones will stay the same.",
    "start": "933930",
    "end": "939720"
  },
  {
    "text": "So let me show you some of\nthe things that can happen. So this is sort of at the\nheart of the algorithm.",
    "start": "939720",
    "end": "946742"
  },
  {
    "text": "I'm not going to go\ninto all the details. This can happen like n\ncubed times, where you say,",
    "start": "946742",
    "end": "952230"
  },
  {
    "text": "OK I've added in\nall these edges. Here's a nice\npseudo-triangle here. It happens to be a triangle with\nsome stuff on the bottom, stuff",
    "start": "952230",
    "end": "957470"
  },
  {
    "text": "on the top. As I flex this to\nexpand the distances this is going to move like that. At some point,\nthose three points",
    "start": "957470",
    "end": "963240"
  },
  {
    "text": "will become collinear,\ngot to deal with that. And the way you deal with it\nis as you continue moving,",
    "start": "963240",
    "end": "970230"
  },
  {
    "text": "it's no longer the case\nthat those two blue edges are the edges in the\npseudo-triangulation.",
    "start": "970230",
    "end": "975529"
  },
  {
    "text": "Now it's this one red edge. This is called a flip. And you see, we used\nto have a quadrilateral up here an a triangle down here.",
    "start": "975530",
    "end": "982180"
  },
  {
    "text": "Now we have a triangle up here\nand a quadrilateral over here. That's pretty intuitive.",
    "start": "982180",
    "end": "987655"
  },
  {
    "text": "You preserve that it's\na pseudo-triangulation as you move this. If you tried to go\ntoo far here you",
    "start": "987655",
    "end": "995660"
  },
  {
    "text": "would actually get a\nconvex quadrilateral. If this kept going\nthen this would",
    "start": "995660",
    "end": "1000897"
  },
  {
    "text": "be a convex quadrilateral. That's not a\npseudo-triangulation, that's bad. But you can always\ndo these flips to fix it as you go along.",
    "start": "1000897",
    "end": "1006724"
  },
  {
    "text": "And it turns out\nthis will only happen a polynomial number of times. AUDIENCE: [INAUDIBLE].",
    "start": "1006724",
    "end": "1011830"
  },
  {
    "text": "PROFESSOR: Like shown,\nis how I flipped it. AUDIENCE: Is it\n[INAUDIBLE] to a red? PROFESSOR: Yeah, the red edge\nnow goes from here to there.",
    "start": "1011830",
    "end": "1022310"
  },
  {
    "text": "Whereas before there\nwere two segments that went from here to\nthere, now I'm going to go straight from\nthere to there.",
    "start": "1022310",
    "end": "1028060"
  },
  {
    "text": "That's the difference. This is the general picture,\nyou have to believe me,",
    "start": "1028060",
    "end": "1034480"
  },
  {
    "text": "because I want to talk\nabout other things. And, cool. So here's an example\nof it actually running.",
    "start": "1034480",
    "end": "1041890"
  },
  {
    "text": "So we have some polygon\nin the top left. We've deleted the\nedge that's cyan.",
    "start": "1041890",
    "end": "1048750"
  },
  {
    "text": "So that one's going to expand. And we move a little bit.",
    "start": "1048750",
    "end": "1054940"
  },
  {
    "text": "This is moving a little bit. This is moving a\nlittle bit more. At this point, these three\npoints are collinear.",
    "start": "1054940",
    "end": "1060770"
  },
  {
    "text": "Actually, the way it's drawn\nit looks like a little bit too far. But they should be collinear. That would be a\nviolation, because this",
    "start": "1060770",
    "end": "1066950"
  },
  {
    "text": "would be-- if we go\nany farther-- that would be a violation because\nthis would be a convex quadrilateral. So we do a flip here, and we\nend up with that edge instead.",
    "start": "1066950",
    "end": "1075357"
  },
  {
    "text": "So now everything's\na pseudo-triangle, everything's pointed,\neverything's happy. You keep going, then these\nthree points become collinear.",
    "start": "1075357",
    "end": "1082970"
  },
  {
    "text": "So you end up getting that edge. And you keep going. And all throughout this\nmotion all pairwise distances",
    "start": "1082970",
    "end": "1091040"
  },
  {
    "text": "are not decreasing. Everything's expanding\nor staying the same. And then the wrap\nup looks like this.",
    "start": "1091040",
    "end": "1097530"
  },
  {
    "text": "In the end, you get\na convex polygon. Then you're stuck,\nbecause there's no edge to remove\non the outside.",
    "start": "1097530",
    "end": "1103817"
  },
  {
    "text": "You've got to keep\nall of those edges.  So that is the\npseudo-triangulation method",
    "start": "1103817",
    "end": "1110750"
  },
  {
    "text": "in a nutshell. And it's expansive. It has a polynomial\nin n number of moves.",
    "start": "1110750",
    "end": "1121150"
  },
  {
    "start": "1121150",
    "end": "1128640"
  },
  {
    "text": "It's not clear how quickly\nyou can compute the moves. ",
    "start": "1128640",
    "end": "1137750"
  },
  {
    "text": "I know an exponential\ntime algorithm. There might be faster one. I don't think this\nhas been resolved. Let me just check my notes here.",
    "start": "1137750",
    "end": "1145930"
  },
  {
    "text": "It says best algorithm\nis exponential to compute one move. In these examples,\nwhere they're all quadrilaterals or\ntriangles, it's",
    "start": "1145930",
    "end": "1152590"
  },
  {
    "text": "really easy to compute them. In general, if you get\ncomplicated things, it's unclear. Pseudo-triangulations though\nhave a lot of nice structure.",
    "start": "1152590",
    "end": "1159910"
  },
  {
    "text": "So maybe it's easier than\ngeneral linkage folding. This, I have here,\nimplementing this algorithm",
    "start": "1159910",
    "end": "1167050"
  },
  {
    "text": "would be a cool project. Oh, another open problem\nis how many steps",
    "start": "1167050",
    "end": "1173210"
  },
  {
    "text": "does this algorithm really need? Can you prove a\npseudo-polynomial bound? I'm not sure.",
    "start": "1173210",
    "end": "1178880"
  },
  {
    "text": "But let me tell you about my\npersonal favorite algorithm, the energy method.",
    "start": "1178880",
    "end": "1186340"
  },
  {
    "text": "This is also the\nmost recent, in 2004.",
    "start": "1186340",
    "end": "1192980"
  },
  {
    "text": "The weird thing\nabout this algorithm is that it is not expansive. ",
    "start": "1192980",
    "end": "1201586"
  },
  {
    "text": "It's really easy to compute\none step of the algorithm.  I can do it in quadratic\ntime, even exactly.",
    "start": "1201586",
    "end": "1210700"
  },
  {
    "text": " This one you have to specify\nsome error tolerance epsilon.",
    "start": "1210700",
    "end": "1217690"
  },
  {
    "text": "This one you have to specify\nsome error tolerance epsilon. Here you can do it perfectly\nif you have exact square roots.",
    "start": "1217690",
    "end": "1224480"
  },
  {
    "text": "And the number of\nsteps is also small. ",
    "start": "1224480",
    "end": "1238570"
  },
  {
    "text": "It has a pseudo-polynomial\nnumber of steps. Have I talked about\npseudo-polynomial yet?",
    "start": "1238570",
    "end": "1244070"
  },
  {
    "text": "Maybe, briefly at some point. Let me tell you what I mean.",
    "start": "1244070",
    "end": "1249890"
  },
  {
    "text": "I want to be polynomial\nin the number vertices n and another parameter r.",
    "start": "1249890",
    "end": "1255672"
  },
  {
    "text": "r is going to be, basically,\nthe maximum distance in your initial\nconfiguration divided",
    "start": "1255672",
    "end": "1261780"
  },
  {
    "text": "by the minimum distance. Exactly how you define\ndistance, don't worry about it.",
    "start": "1261780",
    "end": "1267040"
  },
  {
    "text": "Not a big deal. So this is a geometric\nfeature of the input. It has nothing to do with n.",
    "start": "1267040",
    "end": "1272116"
  },
  {
    "text": "n could stay fixed\nand you could change this to whatever\nyou want by making nastier and nastier examples.",
    "start": "1272116",
    "end": "1277620"
  },
  {
    "text": "Nastiness is measured here by\nhow big your linkages versus how tight things get.",
    "start": "1277620",
    "end": "1284130"
  },
  {
    "text": "So as long as that's\nreasonable, this is going to be a\npolynomial number of moves. So this is a good bound. It's better than all the others\nthat's been proved anyway.",
    "start": "1284130",
    "end": "1292940"
  },
  {
    "text": "It might hold for some\nof the other methods. Here, of course, we have a\nbetter bound on the number",
    "start": "1292940",
    "end": "1298370"
  },
  {
    "text": "moves. But each move is\nkind of complicated. It's pseudo-triangulation. So there is a trade\noff between complexity",
    "start": "1298370",
    "end": "1304840"
  },
  {
    "text": "of move and number of moves. But this gets a decent\nbound for everything. ",
    "start": "1304840",
    "end": "1312200"
  },
  {
    "text": "You've seen this method. I showed it in lecture one. But it's interesting to contrast\nit with the CDR method, which",
    "start": "1312201",
    "end": "1321450"
  },
  {
    "text": "sort of unrolled the\nteeth from the end. Here, this method basically\npulls the teeth right apart.",
    "start": "1321450",
    "end": "1328490"
  },
  {
    "text": "And that's possible because it's\nnot required to be expansive. And we have the double tree.",
    "start": "1328490",
    "end": "1336850"
  },
  {
    "text": " This one looks more\nor less the same. It's a little smoother, I would\nsay, than the other method.",
    "start": "1336850",
    "end": "1343571"
  },
  {
    "text": "I don't have it side by side. So it's a little hard to guess. And what's really exciting\nabout this method, to me,",
    "start": "1343572",
    "end": "1349840"
  },
  {
    "text": "is that you can run it\nfor really large examples in like a minute or so.",
    "start": "1349840",
    "end": "1354910"
  },
  {
    "text": "500 vertices, no big deal. Whereas, because each\nstep is pretty easy to compute in quadratic\ntime, with this method",
    "start": "1354910",
    "end": "1362419"
  },
  {
    "text": "you need it to solve\na convex program. And that's a little\ncostly for large examples.",
    "start": "1362420",
    "end": "1369655"
  },
  {
    "text": " Cool. So that's the energy method.",
    "start": "1369655",
    "end": "1375930"
  },
  {
    "text": "Now I'm going to actually\ntell you how it works. ",
    "start": "1375930",
    "end": "1381934"
  },
  {
    "text": "Big difference is\nit's not expansive. ",
    "start": "1381934",
    "end": "1389510"
  },
  {
    "text": "And the idea is,\nwell, being expansive on every edge,\nthat's kind of hard.",
    "start": "1389510",
    "end": "1394710"
  },
  {
    "text": "How do I figure that out? Oh, it makes my brain hurt. I've got to solve\nthis tensegrity. But if I was just\nexpansive on average,",
    "start": "1394710",
    "end": "1402800"
  },
  {
    "text": "maybe that would be good enough. That's the crazy idea. So we define this energy\nfunction that does just that.",
    "start": "1402800",
    "end": "1418610"
  },
  {
    "text": "It's a function\non configurations. ",
    "start": "1418610",
    "end": "1427290"
  },
  {
    "text": "So I'm going to write E of\nC. No M in this equation.",
    "start": "1427290",
    "end": "1434230"
  },
  {
    "text": "We're going to sum over all\nedges Ew, and then sum over all",
    "start": "1434230",
    "end": "1440390"
  },
  {
    "text": "vertices U different\nfrom V and W.",
    "start": "1440390",
    "end": "1446300"
  },
  {
    "text": "And we're going to take 1\nover the distance from U",
    "start": "1446300",
    "end": "1451600"
  },
  {
    "text": "to the edge. This is just saying sum over\nall non-incident vertices",
    "start": "1451600",
    "end": "1457610"
  },
  {
    "text": "and edges, take their\ndistance-- there's many ways you could define\nthat, like the minimum distance",
    "start": "1457610",
    "end": "1463200"
  },
  {
    "text": "between them would be\nfine-- take the reciprocal, add them all up. This is my energy function.",
    "start": "1463200",
    "end": "1469899"
  },
  {
    "text": "Kind of weird. But it's averaging\nnot of distances, but 1 over distances.",
    "start": "1469900",
    "end": "1476640"
  },
  {
    "text": "So why is that so interesting? Because distances\nare always positive. So I only have to go over here.",
    "start": "1476640",
    "end": "1482790"
  },
  {
    "text": "If I write distance\nin the x-axis, and 1 over the\ndistance in the y-axis,",
    "start": "1482790",
    "end": "1489940"
  },
  {
    "text": "the plot of that\nfunction looks like this. It has this vertical\nasymptote at 0.",
    "start": "1489940",
    "end": "1496190"
  },
  {
    "text": "So if the distance were to\ngo to 0, which is bad for me because that's one thing start\ncrossing-- they will start",
    "start": "1496190",
    "end": "1502620"
  },
  {
    "text": "touching at d equals 0, and\nafter that they might cross-- the energy shoots to\npositive infinity.",
    "start": "1502620",
    "end": "1509360"
  },
  {
    "text": "So if I take the sum over all\nthese, if any of the distances decrease to 0 then the energy\nwill shoot to infinity.",
    "start": "1509360",
    "end": "1517890"
  },
  {
    "text": "What if my distances increase? Because I know\nexpansive motions exist.",
    "start": "1517890",
    "end": "1524716"
  },
  {
    "text": "That's what we proved last time.  I'm not going to compute them.",
    "start": "1524717",
    "end": "1530390"
  },
  {
    "text": "But I know they're\nout there somewhere. If I had an expansive motion,\nall of these distances",
    "start": "1530390",
    "end": "1536080"
  },
  {
    "text": "increase. So that means this\nreciprocal decreases.",
    "start": "1536080",
    "end": "1541809"
  },
  {
    "text": "So I have-- it's\nhard to imagine-- I have this giant dimensional\nconfiguration space. It has d times n\ndimensions, whatever.",
    "start": "1541810",
    "end": "1548295"
  },
  {
    "text": "A lot of stuff.  I'm somewhere.",
    "start": "1548295",
    "end": "1553910"
  },
  {
    "text": "But if I now plotted--\nimagine that's in two dimensions,\nin the plane here,",
    "start": "1553910",
    "end": "1560190"
  },
  {
    "text": "so that's there-- and then\nin the third dimension I plot what is this\nenergy landscape. For each of these configurations\nI compute some height.",
    "start": "1560190",
    "end": "1566840"
  },
  {
    "text": "What is my energy? I get some 3D surface here. In general, it's going to be\nd times n plus 1 dimensions.",
    "start": "1566840",
    "end": "1575049"
  },
  {
    "text": "Here's the configuration space. We plot over that. What I'm saying is, because\nexpansive motions exist,",
    "start": "1575050",
    "end": "1581880"
  },
  {
    "text": "there has to be a motion\nfor every point that decreases energy. Because if you decrease\nevery distance,",
    "start": "1581880",
    "end": "1587590"
  },
  {
    "text": "you also decrease them\non average in this sense. If every term decreases,\nthen of course, the sum will.",
    "start": "1587590",
    "end": "1594740"
  },
  {
    "text": "So this means energy\ndecreasing motions exist.",
    "start": "1594740",
    "end": "1605230"
  },
  {
    "text": " Now energy decreasing\nfeels like a good thing.",
    "start": "1605230",
    "end": "1611950"
  },
  {
    "text": "Because I start somewhere, it\nhas some energy, not infinity.",
    "start": "1611950",
    "end": "1617480"
  },
  {
    "text": "If I decrease the energy,\nit's really hard for my energy to go to plus infinity. It can't happen.",
    "start": "1617480",
    "end": "1623880"
  },
  {
    "text": "So all I need to do is follow\nany energy decreasing motion.",
    "start": "1623880",
    "end": "1632890"
  },
  {
    "start": "1632890",
    "end": "1638830"
  },
  {
    "text": "It might be an expansive\none, but probably not. We know that there are\nenergy decreasing motions because there are\nexpansive motions.",
    "start": "1638830",
    "end": "1645732"
  },
  {
    "text": "But let's just take\nany energy decreasing motion, sort of\nexpansive on average.",
    "start": "1645732",
    "end": "1650960"
  },
  {
    "text": "Then it won't self-intersect\nbecause if energy decreases",
    "start": "1650960",
    "end": "1658262"
  },
  {
    "text": "it will never get\nto plus infinity. And therefore none of the\ndistances will go to 0. ",
    "start": "1658262",
    "end": "1664500"
  },
  {
    "text": "So what this algorithm does\nis follow the gradient. ",
    "start": "1664500",
    "end": "1677500"
  },
  {
    "text": "So I should say something\nabout what this notation is. This is whatever,\nhigher order calculus.",
    "start": "1677500",
    "end": "1682860"
  },
  {
    "text": " You live in some space.",
    "start": "1682860",
    "end": "1689120"
  },
  {
    "text": "You're on like some\nhill, or whatever. You're on some surface. And you say well I'd really\nlike to go downhill from here.",
    "start": "1689120",
    "end": "1696322"
  },
  {
    "text": "And there might be\nmany downhill options. There might be many\nuphill options. This is some crazy high\ndimensional choice.",
    "start": "1696322",
    "end": "1701960"
  },
  {
    "text": "Just take the option\nthat decreases energy the fastest, the most downhill.",
    "start": "1701960",
    "end": "1707210"
  },
  {
    "text": "That is negative gradient of\nE. Believe me that it exists.",
    "start": "1707210",
    "end": "1712260"
  },
  {
    "text": "It exists because this\nenergy function is smooth, in some sense. ",
    "start": "1712260",
    "end": "1718180"
  },
  {
    "text": "You're basically taking\nfirst derivatives. That gives you the\nhighest chain-- or you take the place that has\nthe highest change and boom.",
    "start": "1718180",
    "end": "1724390"
  },
  {
    "text": "That gives it to you. It's very easy to compute\nbecause this function has quadratically many terms. It takes about n\nsquared time to find it.",
    "start": "1724390",
    "end": "1731929"
  },
  {
    "text": "And that gives you some\nenergy decrease in motion. It's just an easy one to find.",
    "start": "1731930",
    "end": "1737990"
  },
  {
    "text": "And that's what we're\nanimating all the time. So we just find energy\ndecreasing motion, move a little bit\nin that direction.",
    "start": "1737990",
    "end": "1744230"
  },
  {
    "text": "Not too much,\nbecause if you go-- it's again a first derivative. This is only an\ninfinitesimal motion.",
    "start": "1744230",
    "end": "1749710"
  },
  {
    "text": "But we're actually going\nto move in that direction for a positive amount of time. As long as we don't go too\nfar, and we can find how",
    "start": "1749710",
    "end": "1756010"
  },
  {
    "text": "far by binary search,\nwe won't self-intersect. Because we know locally\nit's decreasing energy.",
    "start": "1756010",
    "end": "1761350"
  },
  {
    "text": "If we go small enough step it\nreally will decrease energy, and then life is good.",
    "start": "1761350",
    "end": "1766660"
  },
  {
    "text": "So it's really easy to do this. Super simple algorithm.",
    "start": "1766660",
    "end": "1773169"
  },
  {
    "text": "Good. It's non-expansive\nbecause we're only decreasing the average,\nnot each of the terms.",
    "start": "1773170",
    "end": "1781932"
  },
  {
    "text": "Do, do, do, do, do. You can prove the\nnumber of steps--",
    "start": "1781932",
    "end": "1787470"
  },
  {
    "text": "this is the part I'm most proud\nof here-- is pseudo-polynomial,",
    "start": "1787470",
    "end": "1793130"
  },
  {
    "text": "polynomial in n and r.",
    "start": "1793130",
    "end": "1798220"
  },
  {
    "text": "What is the polynomial? n to the 123 times r to the 81.",
    "start": "1798220",
    "end": "1806010"
  },
  {
    "text": "This is the largest\npolynomial bound I know of that's not\ndependent on dimension.",
    "start": "1806010",
    "end": "1811960"
  },
  {
    "text": "So I'm very proud. In practice, the number of\nsteps is much, much smaller than this. This is what we could\nprove in an easy way.",
    "start": "1811960",
    "end": "1817870"
  },
  {
    "text": "If you want a project,\nit's a little tedious, but it would be easy,\nI'm pretty sure. You could decrease\nthis to, I don't know,",
    "start": "1817870",
    "end": "1824070"
  },
  {
    "text": "at least n to the\n20 or something by being a little more\ncareful on the analysis. But once we got something\nthat was pseudo-polynomial",
    "start": "1824070",
    "end": "1830886"
  },
  {
    "text": "we were happy. So we could leave others to\nfigure out the right bound. It's a little tricky with these\ngradient descent algorithms",
    "start": "1830886",
    "end": "1837280"
  },
  {
    "text": "to get good bounds. In practice they\nwork really well, because the gradient\nis not as nasty as you might imagine it\nto be in the worst case.",
    "start": "1837280",
    "end": "1844640"
  },
  {
    "text": "But the worst case bound,\nhey, it's pseudo-polynomial. It's a nice\ntheoretical guarantee. And in practice it\nalso happens to work.",
    "start": "1844640",
    "end": "1851350"
  },
  {
    "text": "Like these examples\nonly take, I don't know, a few hundred steps,\n1,000 steps, whatever. AUDIENCE: Where do\nthose numbers come from?",
    "start": "1851350",
    "end": "1858510"
  },
  {
    "text": "PROFESSOR: Where\ndoes 123 come from? We really wanted\nit to be 1, 2, 3. 81 is my birth year.",
    "start": "1858510",
    "end": "1863796"
  },
  {
    "text": "[LAUGHTER] PROFESSOR: That's why I\nlike this number so much. Oh, actually here\nI have 41 written.",
    "start": "1863796",
    "end": "1869759"
  },
  {
    "text": "I'm pretty sure it's 81 though. I should correct the notes,\ndouble check, something.",
    "start": "1869760",
    "end": "1875362"
  },
  {
    "text": "It's really you're just adding\nup twos and threes a lot, and fours, and things like\nthat a whole bunch of times.",
    "start": "1875362",
    "end": "1881309"
  },
  {
    "text": "And then just luckily it\ncame out to a nice number. As far as I know,\nnot intentional.",
    "start": "1881310",
    "end": "1886893"
  },
  {
    "text": "There are few authors\nthough, so I don't know. Maybe one of them increased\na bound to make it a little cooler number in the end.",
    "start": "1886894",
    "end": "1895480"
  },
  {
    "text": "Good. So that's pseudo-polynomial\nnumber of steps. It's interesting,\neach of the steps",
    "start": "1895480",
    "end": "1901000"
  },
  {
    "text": "is actually a very nice motion. It just moves along\na straight line in the configuration space. I would be nice to know\nwhether you can actually",
    "start": "1901000",
    "end": "1907580"
  },
  {
    "text": "achieve a polynomial number\nof steps independent of r. I think the answer\nis no, it's not possible for some linkages\nthat are really tight.",
    "start": "1907580",
    "end": "1915629"
  },
  {
    "text": "I think you need a dependence,\na polynomial dependence, on r-- at least a\nlinear dependence on r. But I don't know\nhow to prove that.",
    "start": "1915629",
    "end": "1921549"
  },
  {
    "text": "It's a nice open problem. Another fun problem, these\nexamples with polygons",
    "start": "1921550",
    "end": "1927210"
  },
  {
    "text": "end up with a particular\nconvex shape in the end. Is that shape unique?",
    "start": "1927210",
    "end": "1933649"
  },
  {
    "text": "If I gave you the sequence\nof edge lengths here, they're all 1, or\nthey're almost 1. Not quite the same.",
    "start": "1933650",
    "end": "1939195"
  },
  {
    "text": "No, sorry, they get tinier\nas you go to the center. But for that sequence\nof edge lengths, is there a unique minimum\nenergy configuration?",
    "start": "1939196",
    "end": "1945390"
  },
  {
    "text": "I think so. But I don't know. We know that this method\nwill get to convex,",
    "start": "1945390",
    "end": "1951640"
  },
  {
    "text": "because only at the\nconvex configuration do you no longer have\nan expansive motion and no longer have a decreasing\nenergy motion, maybe.",
    "start": "1951640",
    "end": "1960320"
  },
  {
    "text": "Cool. Those are the three algorithms. Any questions about them? ",
    "start": "1960320",
    "end": "1969230"
  },
  {
    "text": "Before we go to trees, again,\ntell you a cool application to origami, which\nis to rigid origami.",
    "start": "1969230",
    "end": "1982904"
  },
  {
    "text": " Remember, rigid origami, we're\nnot allowed to add any creases.",
    "start": "1982905",
    "end": "1990900"
  },
  {
    "text": "And all of the faces between\ncreases have to stay flat. They're like made\nof-- imagine you",
    "start": "1990900",
    "end": "1997130"
  },
  {
    "text": "have pieces of metal\nrepresenting the faces. You have piano hinges\nmaking the edges.",
    "start": "1997130",
    "end": "2002730"
  },
  {
    "text": "That's rigid origami. That's kind of like a linkage. In particular, when you\nhave a single vertex origami-- say that's five\nfoldable, I don't know.",
    "start": "2002730",
    "end": "2015059"
  },
  {
    "text": "And if you say each\nof these wedges is a rigid piece of\nmetal, well we already",
    "start": "2015060",
    "end": "2021560"
  },
  {
    "text": "know this kind of set up can\nbe modeled by its boundary. Ignore the interior.",
    "start": "2021560",
    "end": "2027980"
  },
  {
    "text": "Just think of there\nbeing hinges of this one dimensional structure like that.",
    "start": "2027980",
    "end": "2036040"
  },
  {
    "text": "So that looks a\nlot like a linkage. These have to stay rigid.",
    "start": "2036040",
    "end": "2041170"
  },
  {
    "text": "They're not straight lines. It's a little different. It's almost the same. If you think about how you're\nallowed to fold these things--",
    "start": "2041170",
    "end": "2048227"
  },
  {
    "text": "really you should\nthink about it here, I guess-- what happens, by\na continuous motion what",
    "start": "2048227",
    "end": "2054310"
  },
  {
    "text": "happens is that you're\nliving on a sphere. So you start out on the\nequator of the sphere.",
    "start": "2054310",
    "end": "2062290"
  },
  {
    "text": "This thing, just plop\nit down the equator. The boundary lies on the\nboundary of the sphere. The interior of the paper\nis inside the sphere,",
    "start": "2062290",
    "end": "2068658"
  },
  {
    "text": "right along the flat part there. As you fold, these points\nwill stay on the sphere.",
    "start": "2068659",
    "end": "2075908"
  },
  {
    "text": "And these edge links\nwill be preserved, their arcs on the spheres. There will be great\ncircular arcs at all times.",
    "start": "2075909",
    "end": "2082579"
  },
  {
    "text": "So folding this\nthing in three space is really equivalent to folding\nthis linkage on the sphere.",
    "start": "2082580",
    "end": "2090149"
  },
  {
    "text": "And that looks an awful lot\nlike a polygon on a sphere. What we really want is a\nspherical Carpenter's Rule",
    "start": "2090150",
    "end": "2095658"
  },
  {
    "text": "Theorem. ",
    "start": "2095659",
    "end": "2102980"
  },
  {
    "text": "And there is. This is by Streinu and Whiteley. ",
    "start": "2102980",
    "end": "2110940"
  },
  {
    "text": "So if you have a closed chain,\na polygon, of total length",
    "start": "2110940",
    "end": "2122369"
  },
  {
    "text": "at most 2 pi on a\nunit sphere then you",
    "start": "2122370",
    "end": "2132290"
  },
  {
    "text": "have a connected\nconfiguration space. ",
    "start": "2132290",
    "end": "2141320"
  },
  {
    "text": "So in the plane,\nclosed chain always had a connected\nconfiguration space. On the sphere you need that\nthe chain is not too long,",
    "start": "2141320",
    "end": "2150002"
  },
  {
    "text": "because there's only sort\nof a bounded amount of room on the sphere. The equator has total length 2\npi, perimeter of the equator.",
    "start": "2150002",
    "end": "2163720"
  },
  {
    "text": "For unit sphere it's 2 pi. So we're just canonically\nmaking it a unit sphere. And 2 pi really corresponds\nto this situation,",
    "start": "2163720",
    "end": "2170940"
  },
  {
    "text": "which is 360 degrees. That's how much\ntotal length we have. So it just fits in the\nequator, life is good.",
    "start": "2170940",
    "end": "2176629"
  },
  {
    "text": "The reason you want\nit to have length at most 2 pi is because\nthen you actually do have a convex configuration.",
    "start": "2176629",
    "end": "2182880"
  },
  {
    "text": "In the case of 2 pi, it\nlies along the equator. If it's smaller than 2 pi it'll\nbe like some smaller portion.",
    "start": "2182880",
    "end": "2188980"
  },
  {
    "text": "This would be less than\n2 pi on the sphere. ",
    "start": "2188980",
    "end": "2195600"
  },
  {
    "text": "If it's greater than 2 pi,\nyou can't draw it convexly on the sphere. You can draw something. Like I could draw\nsomething like this,",
    "start": "2195600",
    "end": "2202410"
  },
  {
    "text": "that'll have really long\nlength on the sphere. But there will be no\nway to convexify it.",
    "start": "2202410",
    "end": "2208160"
  },
  {
    "text": "You get stuck at some point. And as long as you don't\nhave that situation, you can take this--\nwhat this actually",
    "start": "2208160",
    "end": "2215210"
  },
  {
    "text": "implies is that your\npolygon at all times will lie in a hemisphere. You take that hemisphere\nand you sort of unroll it,",
    "start": "2215210",
    "end": "2221400"
  },
  {
    "text": "you splay it out, you\nproject it to the plane. You apply the planar\nCarpenter's Rule Theorem.",
    "start": "2221400",
    "end": "2226630"
  },
  {
    "text": "You apply the fact that\nunrolling operation, or that projection\nif you will-- I",
    "start": "2226630",
    "end": "2231970"
  },
  {
    "text": "think it's like\nprojection from some point",
    "start": "2231970",
    "end": "2237200"
  },
  {
    "text": "here out to the plane--\nthat projection preserves infinitesimal flexibility\nof tensegrities.",
    "start": "2237200",
    "end": "2246520"
  },
  {
    "text": "So it'll still have the\nexpensive motion in the plane. And then you could turn in to an\nexpansive motion on the sphere.",
    "start": "2246520",
    "end": "2253589"
  },
  {
    "text": "And eventually you'll\nget a convex polygon. So that's sort of\nhow this is proved.",
    "start": "2253590",
    "end": "2258850"
  },
  {
    "text": "Then you can apply\nit to rigid origami, and say for single\nvertex origami, it's always rigidly foldable.",
    "start": "2258850",
    "end": "2264920"
  },
  {
    "text": "Any state you want\nto reach can be reached by continuous\nmotion, without bending",
    "start": "2264920",
    "end": "2270332"
  },
  {
    "text": "any of the faces.  So a fun little application. ",
    "start": "2270332",
    "end": "2281319"
  },
  {
    "text": "And one of the few things\nwe know about rigid origami, for multiple vertices\nit gets a lot harder.",
    "start": "2281320",
    "end": "2288170"
  },
  {
    "text": "Not always possible,\nand we don't have a nice characterization. ",
    "start": "2288170",
    "end": "2304480"
  },
  {
    "text": "So finally, let's move onto\nlocked trees in the plane.",
    "start": "2304480",
    "end": "2309900"
  },
  {
    "start": "2309900",
    "end": "2314910"
  },
  {
    "text": "So these are sort of\nthe classic examples. The top two were\nin a 1998 paper.",
    "start": "2314910",
    "end": "2321520"
  },
  {
    "text": "This was when I started\nworking on folding stuff, very beginning.",
    "start": "2321520",
    "end": "2327366"
  },
  {
    "text": "A whole bunch of people\nfrom a big workshop. First example is this one.",
    "start": "2327366",
    "end": "2333970"
  },
  {
    "text": "And it's a bunch of sort of\narms tucked into their armpits,",
    "start": "2333970",
    "end": "2340080"
  },
  {
    "text": "and in a cyclic way. And the dotted circles\nmean objects in this mirror",
    "start": "2340080",
    "end": "2346680"
  },
  {
    "text": "are closer than they appear. So imagine that\nall of these points",
    "start": "2346680",
    "end": "2353270"
  },
  {
    "text": "are actually really, really\nclose and tight in here. And this guy's actually\nreally close and tight",
    "start": "2353270",
    "end": "2359140"
  },
  {
    "text": "against this edge. So I've drawn it\nwith lots of slack so you can see the\ncombinatorial structure.",
    "start": "2359140",
    "end": "2364461"
  },
  {
    "text": "But geometrically\nit's much tighter. Then the intuition is that you\ncan't get any of these arms",
    "start": "2364461",
    "end": "2369730"
  },
  {
    "text": "open unless you could somehow\nexpand one of these wedges.",
    "start": "2369730",
    "end": "2375430"
  },
  {
    "text": "It's like, if you could\nexpand this angle then this guy would have\nroom to come out. But how do I expand that angle?",
    "start": "2375430",
    "end": "2381450"
  },
  {
    "text": "Well I'd have to compress\nthe other angles because of the cyclic picture. And I can't, if I look at some\nother angle like this one,",
    "start": "2381450",
    "end": "2387450"
  },
  {
    "text": "I can't compress it because\nthe arm is in the way. So I can't open an arm until\nI've closed some other arm.",
    "start": "2387450",
    "end": "2394962"
  },
  {
    "text": "And I can't close an arm\nbefore I've opened it. And so nothing can happen. That's the intuition\nbehind the proof.",
    "start": "2394962",
    "end": "2400390"
  },
  {
    "text": "The details are very\nmessy, because you have to define open\nand closed, and what things must happen\nbefore what things.",
    "start": "2400390",
    "end": "2408140"
  },
  {
    "text": "This example should\nlook familiar because if you double it, if\nyou replace every edge with two edges, we get one\nof the examples that",
    "start": "2408140",
    "end": "2414299"
  },
  {
    "text": "was expanding with the\nfive-fold symmetry. So people have sort\nof known for a while,",
    "start": "2414300",
    "end": "2422770"
  },
  {
    "text": "and then we finally proved,\nthat this is locked. If you double it, people thought\nwell maybe it's still locked.",
    "start": "2422770",
    "end": "2429250"
  },
  {
    "text": "Turns out no, because the center\nvertex can expand in a polygon,",
    "start": "2429250",
    "end": "2434730"
  },
  {
    "text": "but with a tree it can't. OK, big deal. These examples, this is just\nyet another way to do that.",
    "start": "2434730",
    "end": "2442910"
  },
  {
    "text": "But what's interesting is if\nyou double some of the edges you get this tree.",
    "start": "2442910",
    "end": "2448700"
  },
  {
    "text": "So you have 1 degree 3\nvertex in the center. And you go around,\nyou visit this arm.",
    "start": "2448700",
    "end": "2454160"
  },
  {
    "text": "You go back, you visit this arm. Turns out this really\ndoes simulate this tree, because we haven't touched\nthe central degree 3 vertex.",
    "start": "2454160",
    "end": "2461720"
  },
  {
    "text": "And this is nice because\nit has one degree 3 vertex. Everything else\nis degree 2 or 1.",
    "start": "2461720",
    "end": "2467890"
  },
  {
    "text": "So in the Carpenter's\nRule theorem where we said maximum\ndegree 2, it's really tight. And as soon as you add\none vertex of degree 3",
    "start": "2467890",
    "end": "2474810"
  },
  {
    "text": "you can be locked. That was the point\nof this example.",
    "start": "2474810",
    "end": "2480000"
  },
  {
    "text": "What other fun things\ncan you do with trees? Well, three years\nago in this class we started thinking\nabout other locked trees.",
    "start": "2480000",
    "end": "2487360"
  },
  {
    "text": "How low could you go? How many edges do\nneed to get locked? This example-- no I guess\nthis example would be minimum.",
    "start": "2487360",
    "end": "2496579"
  },
  {
    "text": "Here I've drawn it\nwith eight petals. You can get away\nwith five petals, or are five arms,\neach of length 3.",
    "start": "2496579",
    "end": "2503200"
  },
  {
    "text": "So that's 15 edges. That was the state of the art. And then we had this crazy\nidea in a problem session",
    "start": "2503200",
    "end": "2510650"
  },
  {
    "text": "of this locked\nchain, locked tree. It has two degree 3 vertices.",
    "start": "2510650",
    "end": "2517530"
  },
  {
    "text": "And it kind of just\nwinds in there. We're going to see why\nthese things are locked. But OK, that's kind of neat. 11, that's much better than 15.",
    "start": "2517530",
    "end": "2523740"
  },
  {
    "text": "Can we do better? And every week we improved\nit, for a few weeks.",
    "start": "2523740",
    "end": "2528890"
  },
  {
    "text": "This one looks messier,\nbut it has one fewer edge. And then this one came\nalong, and we're like whoa.",
    "start": "2528890",
    "end": "2536930"
  },
  {
    "text": "So symmetric, so beautiful. What's interesting is it doesn't\nhave the cyclic structure.",
    "start": "2536930",
    "end": "2545580"
  },
  {
    "text": "It's almost flat, in fact. You could think of all these\nguys being in one point. All these guys\nbeing in one point.",
    "start": "2545580",
    "end": "2551029"
  },
  {
    "text": "All those guys\nbeing in one point. It's like they're,\nall three, collinear. So it's a very different\nkind of example.",
    "start": "2551030",
    "end": "2556359"
  },
  {
    "text": "Before we thought\nlocked trees required this kind of cyclic condition. ",
    "start": "2556360",
    "end": "2563170"
  },
  {
    "text": "And so, for example,\nwe conjectured-- or I guess Poon,\none of the authors",
    "start": "2563170",
    "end": "2568810"
  },
  {
    "text": "here-- conjectured that\nthere would be no way to lock something if\nall the edges were horizontal and vertical.",
    "start": "2568810",
    "end": "2574750"
  },
  {
    "text": "Because if you have\nthat you couldn't have five things in a circle.",
    "start": "2574750",
    "end": "2579770"
  },
  {
    "text": "Now suddenly we think,\noh, this is interesting. Because it has two\ndegree 3 vertices.",
    "start": "2579770",
    "end": "2585970"
  },
  {
    "text": "It's so symmetric. Surely this is the\nfewest possible edges we could get away with.",
    "start": "2585970",
    "end": "2591840"
  },
  {
    "text": "But no, then we found\nthe eight edge example. And this is kind of funny.",
    "start": "2591840",
    "end": "2598580"
  },
  {
    "text": "It's like instead of\nbeing nice and symmetric, essentially, what we're\ndoing is removing this edge.",
    "start": "2598580",
    "end": "2605109"
  },
  {
    "text": "And we want to instead\nattach it in here. But then we have to futz\naround with the vertices to make it work\nout and be a tree.",
    "start": "2605110",
    "end": "2611070"
  },
  {
    "text": "And now has only\none degree 3 vertex. So it also has\nthat nice property.",
    "start": "2611070",
    "end": "2616751"
  },
  {
    "text": "It only has eight edges. And this, we\nbelieve, is optimal. ",
    "start": "2616751",
    "end": "2623140"
  },
  {
    "text": "And we can actually prove\nsomething along those lines. So a linear tree is one where\nall the vertices lie nearly",
    "start": "2623140",
    "end": "2639870"
  },
  {
    "text": "on the line. ",
    "start": "2639870",
    "end": "2644930"
  },
  {
    "text": "So this is a linear locked tree. And we can prove that among\nall linear locked trees, they must have at\nleast eight edges.",
    "start": "2644930",
    "end": "2651819"
  },
  {
    "text": " Locked linear tree has\nat least eight edges.",
    "start": "2651820",
    "end": "2664130"
  },
  {
    "text": "So at least among linear locked\ntrees that example is optimal. But maybe you could use\nthe second dimension",
    "start": "2664130",
    "end": "2672490"
  },
  {
    "text": "to do something better\nthan eight edges. But I don't think so. That's an open problem.",
    "start": "2672490",
    "end": "2679230"
  },
  {
    "text": "What other good\nthings can we do? You can make it orthogonal. You can mimic exactly\nthis structure",
    "start": "2679230",
    "end": "2685570"
  },
  {
    "text": "with an orthogonal\nstructure, all the edges horizontal and vertical. Just expand each of these\nvertices into very tiny,",
    "start": "2685570",
    "end": "2692170"
  },
  {
    "text": "and if this is drawn\nreally squished, these are super short edges. So they really don't change\nthe motion space hardly at all.",
    "start": "2692170",
    "end": "2698550"
  },
  {
    "text": "You can actually prove that. And this is also locked. That's one of the nice things\nyou do once you get out of the cyclic kind of structure.",
    "start": "2698550",
    "end": "2704809"
  },
  {
    "text": " I think I have\nsomething else, no.",
    "start": "2704810",
    "end": "2710110"
  },
  {
    "text": "OK, stay there. ",
    "start": "2710110",
    "end": "2715180"
  },
  {
    "text": "Yeah, actually maybe\nI do want to go there. ",
    "start": "2715180",
    "end": "2721869"
  },
  {
    "text": "This is an example, it has\na cyclic structure again. Same paper, last year.",
    "start": "2721870",
    "end": "2730020"
  },
  {
    "text": "This is a newer example. And it has the property\nthat all of the edge lengths are the same, and\nnothing touches.",
    "start": "2730020",
    "end": "2738960"
  },
  {
    "text": "Now you'll appreciate this in\na little while, how crazy this is. Because all of the\nprevious examples",
    "start": "2738960",
    "end": "2747190"
  },
  {
    "text": "required things to be\nvery close and tight. And we crucially use\nvery tight proximity",
    "start": "2747190",
    "end": "2754230"
  },
  {
    "text": "in order to prove\nthings are locked. And if you take the example\nthat looks like this, with six",
    "start": "2754230",
    "end": "2765369"
  },
  {
    "text": "arms-- I didn't\ndraw it very well.",
    "start": "2765370",
    "end": "2774250"
  },
  {
    "text": "But if you draw\nit with six arms, these are like\nequilateral triangles, the edge lengths will\nbe almost all the same.",
    "start": "2774250",
    "end": "2779902"
  },
  {
    "text": "In fact, if you\nallow them to touch they will be exactly the same. So there was this\nopen question, well, if I want them to be exactly\nthe same but not touch,",
    "start": "2779902",
    "end": "2787740"
  },
  {
    "text": "can you still lock? We thought no, but in\nfact you can do it. And this is very\ntricky to prove locked",
    "start": "2787740",
    "end": "2793710"
  },
  {
    "text": "because we can't make\nthese arbitrarily tight. It really has to look like\nthis, because the edge lengths",
    "start": "2793710",
    "end": "2799020"
  },
  {
    "text": "are all the same. Now this has\nseven-fold symmetry. ",
    "start": "2799020",
    "end": "2806029"
  },
  {
    "text": "Because sixfold they\nwould all touch. It's tricky. ",
    "start": "2806030",
    "end": "2812170"
  },
  {
    "text": "Cool.  A big open question\nhere, of course,",
    "start": "2812170",
    "end": "2817370"
  },
  {
    "text": "is to characterize locked trees. I think that's quite hard,\nbecause in particular, if you're given a tree\nand you want to know",
    "start": "2817370",
    "end": "2823940"
  },
  {
    "text": "does that go from\nthis configuration to this configuration,\nthat's known to be p space complete, which is\nreally, really hard.",
    "start": "2823940",
    "end": "2830400"
  },
  {
    "text": "But all of those\nexamples are locked. So maybe unlocked trees\nhave some special structure",
    "start": "2830400",
    "end": "2835520"
  },
  {
    "text": "that's easy to find. I guess not. But who knows? What I do think has\na nice structure",
    "start": "2835520",
    "end": "2841700"
  },
  {
    "text": "are these linear locked trees. They're pretty simple. They're basically\none dimensional. And I think we could\ncharacterize linear lock trees",
    "start": "2841700",
    "end": "2848790"
  },
  {
    "text": "in polynomial time. Maybe we'll work on\nthat this afternoon. But that is open.",
    "start": "2848790",
    "end": "2856589"
  },
  {
    "text": "All right, next thing\nI want to talk about is how the heck do you prove\nthat these things are locked? Now historically there have\nbeen lots of different proofs.",
    "start": "2856590",
    "end": "2863780"
  },
  {
    "text": "And this tree still does\nnot have a nice proof that it's locked. But all the other trees I\ncan give you very succinct",
    "start": "2863780",
    "end": "2870420"
  },
  {
    "text": "proofs that they're locked. And so I want to tell\nyou how we do that. ",
    "start": "2870420",
    "end": "2883230"
  },
  {
    "text": "Because it uses tensegrity\ntheory, our good friend. ",
    "start": "2883230",
    "end": "2894119"
  },
  {
    "text": "This is the idea of\ninfinitesimally locked linkages. ",
    "start": "2894120",
    "end": "2918199"
  },
  {
    "text": "So ignore this part of\nthe picture for now. If we take some tree,\nmost of the examples",
    "start": "2918199",
    "end": "2923240"
  },
  {
    "text": "I drew these little\nscion circles to say, well, these guys\nare really tight. And the intuition\nis the tighter you",
    "start": "2923240",
    "end": "2929349"
  },
  {
    "text": "make it, the less that\nconfiguration can move. If you look, we're\nclaiming the configuration",
    "start": "2929350",
    "end": "2934380"
  },
  {
    "text": "space is disconnected. But not only that, we\nhave this configuration and we say there's a\nsmall ball of motions",
    "start": "2934380",
    "end": "2940265"
  },
  {
    "text": "that you could possibly do. It does wiggle a little bit. And then there's\nother stuff over here that you can never reach because\nthis can't move very much.",
    "start": "2940265",
    "end": "2947790"
  },
  {
    "text": " Well in fact, if you make these\ncircles tighter and tighter,",
    "start": "2947790",
    "end": "2958060"
  },
  {
    "text": "the claim is that this,\nin the space of motions, you get less and less freedom.",
    "start": "2958060",
    "end": "2964750"
  },
  {
    "text": "How could we formalize that? As you draw the thing tighter\nyou get less and less motion.",
    "start": "2964750",
    "end": "2970040"
  },
  {
    "text": " Well, let's go to the limit.",
    "start": "2970040",
    "end": "2975540"
  },
  {
    "text": "Suppose we went all\nthe way to the point that these things are touching.",
    "start": "2975540",
    "end": "2980890"
  },
  {
    "text": "Now this is going to be a\nlittle tricky mathematically, because we have to remember that\nthis vertex is in this wedge,",
    "start": "2980890",
    "end": "2986770"
  },
  {
    "text": "even though it's actually\nright on top of this point. So we have to remember, sort\nof, how things look locally.",
    "start": "2986770",
    "end": "2993190"
  },
  {
    "text": "But geometrically the picture\nis going to look like that.",
    "start": "2993190",
    "end": "3004390"
  },
  {
    "text": "If you look from\nafar, you won't be able to tell that there's\nthree edges along here, because they're right\non top of each other.",
    "start": "3004390",
    "end": "3011630"
  },
  {
    "text": "But if you, sort of, imagine\nzooming in infinitesimally in each of these\nvertices, it's going to be whatever the heck it is.",
    "start": "3011630",
    "end": "3018720"
  },
  {
    "start": "3018720",
    "end": "3024504"
  },
  {
    "text": "So you remember the fact\nthat right here there are four vertices. And this is how they're\nconnected to incident edges.",
    "start": "3024504",
    "end": "3029606"
  },
  {
    "text": "There's actually three edges\nhere, and two edges here, and so on. ",
    "start": "3029606",
    "end": "3036080"
  },
  {
    "text": "So that's how you\ndescribe one of these, we call them,\nself-touching linkages.",
    "start": "3036080",
    "end": "3044890"
  },
  {
    "text": "Because the edges are\ntouching each other. They're right on\ntop of each other.",
    "start": "3044890",
    "end": "3051170"
  },
  {
    "text": "Now normally, if you wanted to\ncapture this notion of wiggling",
    "start": "3051170",
    "end": "3056329"
  },
  {
    "text": "a little bit, we\ncould define the idea of being locked within epsilon.",
    "start": "3056330",
    "end": "3061640"
  },
  {
    "text": " So a configuration is\nlocked within epsilon",
    "start": "3061640",
    "end": "3070519"
  },
  {
    "text": "if it's impossible\nto get farther",
    "start": "3070520",
    "end": "3083440"
  },
  {
    "text": "than epsilon in\nconfiguration space. ",
    "start": "3083440",
    "end": "3093290"
  },
  {
    "text": "So that's this little ball,\nthinking about radius epsilon here. And if you can't get\noutside that ball,",
    "start": "3093290",
    "end": "3099700"
  },
  {
    "text": "you have some weird\nspace you can get to. But if it's bounded by\na ball of radius epsilon then I say you're\nlocked within epsilon.",
    "start": "3099700",
    "end": "3107432"
  },
  {
    "text": "And if epsilon is\nsmall that really means there are other\nthings you can't get to. Well as soon as I\nget to self-touching",
    "start": "3107432",
    "end": "3113710"
  },
  {
    "text": "I can actually think about\nbeing locked within epsilon for epsilon equals 0,\nalso known as being rigid.",
    "start": "3113710",
    "end": "3125250"
  },
  {
    "text": " We've already talked about\nbeing locked within 0. If you can't move it\nall, that's rigid.",
    "start": "3125250",
    "end": "3132559"
  },
  {
    "text": "So this thing could\nactually be rigid. Whereas all the\nlocked trees, they can never be rigid\nbecause I don't",
    "start": "3132560",
    "end": "3137730"
  },
  {
    "text": "want them to really touch. This is an analysis tool. I don't like trees\nthat are self-touching. It's kind of ugly and cheating.",
    "start": "3137730",
    "end": "3143760"
  },
  {
    "text": " And so real trees,\nnon-self-touching touching",
    "start": "3143760",
    "end": "3149370"
  },
  {
    "text": "trees could only be locked\nwithin some positive epsilon. But if we consider\nfor the moment the extreme when\nthey're touching then",
    "start": "3149370",
    "end": "3156850"
  },
  {
    "text": "we could hope for rigidity. Rigidity is good because we know\nhow to prove things are rigid. We know how to test things\nare rigid in two dimensions.",
    "start": "3156850",
    "end": "3163069"
  },
  {
    "text": "It's pretty easy. We could test is it\ninfinitesimally rigid? If it's infinitesimally\nrigid we know it's rigid.",
    "start": "3163070",
    "end": "3170770"
  },
  {
    "text": "It's a little bit\ntrickier because we have to represent the\nnon-crossing constraints.",
    "start": "3170770",
    "end": "3178100"
  },
  {
    "text": "And that's what these\npurple edges do. So the idea is,\nwell I definitely",
    "start": "3178100",
    "end": "3184829"
  },
  {
    "text": "want to preserve the\nlengths of these edges. I'm not interested\nin expansive motions, because that's a subset\nof possible motions.",
    "start": "3184830",
    "end": "3190770"
  },
  {
    "text": "But I do know that this\nvertex should move away from this edge, or\nstay on the edge.",
    "start": "3190770",
    "end": "3196530"
  },
  {
    "text": "It's not allowed to go to\nthe other side of the edge. So I imagine there's a\nlittle tiny strut here.",
    "start": "3196530",
    "end": "3201850"
  },
  {
    "text": "It's of infinitesimal\nlength right now. It can get longer, but it has\nto get longer in that direction.",
    "start": "3201850",
    "end": "3206890"
  },
  {
    "text": "You have to move\naway-- you have to stay on the right side of this edge. And you have to stay on\nthe left side of this edge.",
    "start": "3206890",
    "end": "3212550"
  },
  {
    "text": "It turns out you really can\nrepresent that by a strut. It's now a strut between\na vertex and an edge,",
    "start": "3212550",
    "end": "3218150"
  },
  {
    "text": "because this guy can slide along\nthe edge, or move away from it. But it's a strut.",
    "start": "3218150",
    "end": "3223680"
  },
  {
    "text": "And you can think of\nthis as a tensegrity, all the usual tensegrity\ntheory applies. You can define equilibrium\nstresses, polyhedral liftings,",
    "start": "3223680",
    "end": "3232690"
  },
  {
    "text": "infinitesimal rigidity. And so what's\nactually drawn here--",
    "start": "3232690",
    "end": "3238926"
  },
  {
    "text": "you should look at the\nbook for more details. I don't want to go\ninto details on this. But originally the state of\nthe art for proving something",
    "start": "3238926",
    "end": "3245470"
  },
  {
    "text": "like this is locked\nis you basically give-- you show an\nequilibrium stress that",
    "start": "3245470",
    "end": "3251130"
  },
  {
    "text": "is positive on all the struts. We know that if you\nfind a stress that's positive on all struts\nthan all the struts in fact",
    "start": "3251130",
    "end": "3257640"
  },
  {
    "text": "must act as bars. What that means is that this\nlength, which is currently 0,",
    "start": "3257640",
    "end": "3264349"
  },
  {
    "text": "must stay 0. Therefore this\nvertex is actually pinned because it has\nto both be on this edge",
    "start": "3264350",
    "end": "3271059"
  },
  {
    "text": "and be on this edge. That's what a 0 length bar\nhere and here would mean. It really has to be right here.",
    "start": "3271060",
    "end": "3276250"
  },
  {
    "text": "It can't move it all. And therefore this whole thing\nis rigid, and nothing moves. ",
    "start": "3276250",
    "end": "3287480"
  },
  {
    "text": "Clear? So we can use all\nthe tensegrity stuff to prove that when this thing\nis actually self-touching,",
    "start": "3287480",
    "end": "3293420"
  },
  {
    "text": "and all these distances\nare 0, it is rigid. But so what?",
    "start": "3293420",
    "end": "3298510"
  },
  {
    "text": "Who cares about the\nself-touching thing being rigid? It's nice, but what\nI really care about",
    "start": "3298510",
    "end": "3303789"
  },
  {
    "text": "is the non-self-touching\nconfigurations are locked within epsilon,\nfor some tiny epsilon.",
    "start": "3303790",
    "end": "3309539"
  },
  {
    "text": "Well good news. ",
    "start": "3309540",
    "end": "3315799"
  },
  {
    "text": "Rigidity of the\nself-touching configuration",
    "start": "3315800",
    "end": "3321120"
  },
  {
    "text": "implies what's called\nstrongly locked,",
    "start": "3321120",
    "end": "3328620"
  },
  {
    "text": "yet another term which\nI need to define. Strongly locked means\nthat sufficiently small,",
    "start": "3328620",
    "end": "3345240"
  },
  {
    "text": "sufficiently small\nperturbations of the linkage,",
    "start": "3345240",
    "end": "3361755"
  },
  {
    "text": "or I should say of the\nlinkage configuration,",
    "start": "3361755",
    "end": "3375140"
  },
  {
    "text": "are locked within\nepsilon for any epsilon.",
    "start": "3375140",
    "end": "3381980"
  },
  {
    "text": " This is exactly the property\nI wanted to formalize,",
    "start": "3381980",
    "end": "3390420"
  },
  {
    "text": "saying that if you draw\nthe example tighter it can move less.",
    "start": "3390420",
    "end": "3396660"
  },
  {
    "text": "For any epsilon, we\nwant to say you can only move within epsilon,\nthere's some notion",
    "start": "3396660",
    "end": "3403150"
  },
  {
    "text": "of sufficiently small such\nthat if I take this example and imagine currently\nall the vertices are",
    "start": "3403150",
    "end": "3409569"
  },
  {
    "text": "on top of each other. But now I perturb\nit a little bit, which involves changing not\nonly the vertex coordinates,",
    "start": "3409570",
    "end": "3414720"
  },
  {
    "text": "but also the edge lengths--\nbut a tiny amount, some delta that's a function of epsilon.",
    "start": "3414720",
    "end": "3421740"
  },
  {
    "text": "Whatever epsilon\nyou choose, there's a very small disk I\ncan draw like this, such that as long as all the\nvertices stay within that disk",
    "start": "3421740",
    "end": "3429600"
  },
  {
    "text": "your example will be\nlocked within epsilon. This is great because it lets\nus analyze rigidity, which",
    "start": "3429600",
    "end": "3435869"
  },
  {
    "text": "is easy for self-touching\nconfigurations, which are not interesting in some sense.",
    "start": "3435870",
    "end": "3440940"
  },
  {
    "text": "But we get to conclude something\nabout the perturbations which are not self-touching\nand therefore nice.",
    "start": "3440940",
    "end": "3446607"
  },
  {
    "text": "And we get the property\nwe want, that you're locked within epsilon\nfor any epsilon you want. You just draw it\ntighter you'll be",
    "start": "3446607",
    "end": "3452747"
  },
  {
    "text": "locked within a smaller epsilon.  So this is pretty cool.",
    "start": "3452747",
    "end": "3459400"
  },
  {
    "text": "And I didn't defined\nperturbation. But I just mean every vertex\nstays within a radius delta",
    "start": "3459400",
    "end": "3474691"
  },
  {
    "text": "disk.  And sufficiently\nsmall here is delta,",
    "start": "3474691",
    "end": "3483369"
  },
  {
    "text": "which is a function of epsilon. ",
    "start": "3483369",
    "end": "3489890"
  },
  {
    "text": "So this is pretty cool. And it turns out also--\nthis is proved much later--",
    "start": "3489890",
    "end": "3494970"
  },
  {
    "text": "these results are like 2002. And then 2006 proved\nthat if you take",
    "start": "3494970",
    "end": "3501320"
  },
  {
    "text": "any self-touching configuration,\nwhich is like this, you specify the geometry\nwhere things are all",
    "start": "3501320",
    "end": "3506410"
  },
  {
    "text": "on top of each other. And then you'd say what you\nwant every vertex to look like. It turns out there really\nis a valid perturbation that",
    "start": "3506410",
    "end": "3515980"
  },
  {
    "text": "preserves that\ncombinatorial structure and is arbitrarily small. So here, of course, I've\ndrawn it so it's clear.",
    "start": "3515980",
    "end": "3521820"
  },
  {
    "text": "You can perturb things. And I changed the edge\nlengths a little bit. But I can actually realize\nthis combinatorial structure.",
    "start": "3521820",
    "end": "3529570"
  },
  {
    "text": "It turns out that's\nalways possible. So you can take any\nself-touching linkage, you can perturb it so\nit's not self-touching,",
    "start": "3529570",
    "end": "3536040"
  },
  {
    "text": "and it is arbitrarily\nlocked within epsilon. ",
    "start": "3536040",
    "end": "3542680"
  },
  {
    "text": "And the way you\nprove it, or one way to prove that\nsomething is rigid,",
    "start": "3542680",
    "end": "3548240"
  },
  {
    "text": "is to say well this\nproof is infinitesimally rigid by constructing an\nequilibrium stress that's positive on all these\n0 length struts.",
    "start": "3548240",
    "end": "3555345"
  },
  {
    "text": "As long as it's positive\nall those 0 length struts you know that\nthey're effectively bars.",
    "start": "3555345",
    "end": "3561860"
  },
  {
    "text": "Usually once they're\nbars it's really obvious that the thing is rigid because\nit pins vertices into corners.",
    "start": "3561860",
    "end": "3568140"
  },
  {
    "text": "Then you know that the whole\nthing is infinitesimally rigid, therefore it's rigid,\ntherefore it's strongly locked.",
    "start": "3568140",
    "end": "3573849"
  },
  {
    "text": "And you could see some examples\nof doing that in the book. But this is no longer\nthe state of the art. There are now\neasier ways to prove",
    "start": "3573850",
    "end": "3579546"
  },
  {
    "text": "that trees are\nlocked-- some trees. It doesn't always work. Of course, it might be\ninfinitesimally flexible. Lots of things could fail.",
    "start": "3579546",
    "end": "3586360"
  },
  {
    "text": "But if it succeeds in\nproving something is rigid, then you know it's strongly\nlocked and you're happy. ",
    "start": "3586360",
    "end": "3594349"
  },
  {
    "text": "So it's a conservative\ntest, you might say. It would be a cool\nthing to implement. This is not hard, it's\njust linear programming.",
    "start": "3594350",
    "end": "3599668"
  },
  {
    "text": " But there's a cooler way\nthat's even more-- like one",
    "start": "3599668",
    "end": "3607109"
  },
  {
    "text": "where I can really\ndraw the pictures here, you know we had to\ndraw all these diagrams and figure out that stress\npositive numbers worked on all",
    "start": "3607110",
    "end": "3613530"
  },
  {
    "text": "these edges, and\neh, it's tedious. ",
    "start": "3613530",
    "end": "3621079"
  },
  {
    "text": "There's a much slicker way. ",
    "start": "3621080",
    "end": "3633270"
  },
  {
    "text": "And for whatever reason, they\nhave become known as the rules.",
    "start": "3633270",
    "end": "3638780"
  },
  {
    "text": "There are two of them. Although we've tried to come\nup with various rule threes,",
    "start": "3638780",
    "end": "3644480"
  },
  {
    "text": "the ones that have been\ntried and tested and used all over the place are\nrule one and rule two. ",
    "start": "3644480",
    "end": "3653420"
  },
  {
    "text": "So rule one. You'll see why this is\ninteresting in a moment.",
    "start": "3653420",
    "end": "3658670"
  },
  {
    "text": " I have some linkage,\nself-touching linkage.",
    "start": "3658670",
    "end": "3664809"
  },
  {
    "text": "We're in the same framework. Suppose these two edges\nhave the same length.",
    "start": "3664810",
    "end": "3670690"
  },
  {
    "text": "I'm drawing this\none slightly smaller just so I can show you,\nwhich is on which side.",
    "start": "3670690",
    "end": "3676207"
  },
  {
    "text": "But suppose they\nhave the same length. And suppose that\nboth of these angles",
    "start": "3676207",
    "end": "3681570"
  },
  {
    "text": "are acute, strictly,\nless than 90. ",
    "start": "3681570",
    "end": "3688180"
  },
  {
    "text": "What do you think\nhappens in this picture? I have this bar floating around. And I have these three bars.",
    "start": "3688180",
    "end": "3693700"
  },
  {
    "text": "What happens to this bar? AUDIENCE: It's confined to\nbe against the other bar. PROFESSOR: It's confined to\nbe right against this edge.",
    "start": "3693700",
    "end": "3700861"
  },
  {
    "text": "It can't move at all until\nthis angle-- both of these,",
    "start": "3700861",
    "end": "3706220"
  },
  {
    "text": "and I guess at least one of\nthem would have to get to 90, then you could try\nto slide it out. Like if this one goes beyond\n90 then you can slide out.",
    "start": "3706220",
    "end": "3714720"
  },
  {
    "text": "As long as they're both less\nthan 90 it's pinned there.",
    "start": "3714720",
    "end": "3721670"
  },
  {
    "text": "So what I'm going to do\nis redraw this diagram as",
    "start": "3721670",
    "end": "3728460"
  },
  {
    "text": "with two edges there, which\nI mean, you can just ignore. The point is if there's\nsomething attached here",
    "start": "3728460",
    "end": "3735250"
  },
  {
    "text": "and here-- maybe many things,\nit's a tree, who knows?-- you can just attach\nthem right there.",
    "start": "3735250",
    "end": "3742769"
  },
  {
    "text": "This is a simplification\nto the linkage. It does not behave the same. But it has the same rigidity.",
    "start": "3742770",
    "end": "3749260"
  },
  {
    "text": "Because if all I care\nabout is rigidity, I care about can I move at all?",
    "start": "3749260",
    "end": "3754289"
  },
  {
    "text": "So in order for this\nguy to move and all, these guys would\nfirst have to move for quite a while, a\npositive amount of time.",
    "start": "3754290",
    "end": "3761710"
  },
  {
    "text": "I just want to know can\nI move 0 or more than 0? If I can move more than 0 I\ncould move this guy more than 0",
    "start": "3761710",
    "end": "3767829"
  },
  {
    "text": "without this guy moving at all. So really I don't care\nabout how this guy moves. He's effectively pinned for at\nleast a small amount of time.",
    "start": "3767830",
    "end": "3775240"
  },
  {
    "text": "I really care about can\nthe rest move it all? So you can simplify\nyour linkage like this, and the rigidity\nwill be preserved.",
    "start": "3775240",
    "end": "3782180"
  },
  {
    "text": "This is awesome because it's\neasy to see when this applies. And you just\nsimplify your linkage",
    "start": "3782180",
    "end": "3787200"
  },
  {
    "text": "until you can just tell\nwhether it's rigid. All right rule two is\nsort of a special case.",
    "start": "3787200",
    "end": "3794310"
  },
  {
    "text": "It looks like this. So here, this bar and this bar\nactually share an endpoint.",
    "start": "3794310",
    "end": "3801280"
  },
  {
    "text": "And again, I need that\nthis angle is acute. And I need that these\ntwo have the same length.",
    "start": "3801280",
    "end": "3806990"
  },
  {
    "text": " And I can simplify\nto that, where",
    "start": "3806990",
    "end": "3818040"
  },
  {
    "text": "if anything was attached here\nit just gets attached there. ",
    "start": "3818040",
    "end": "3823590"
  },
  {
    "text": "Let's try it out. ",
    "start": "3823590",
    "end": "3830144"
  },
  {
    "text": "Actually, I could\nuse some more boards. ",
    "start": "3830145",
    "end": "3852950"
  },
  {
    "text": "So I'm just going to copy the\nexample we had from before.",
    "start": "3852950",
    "end": "3859380"
  },
  {
    "text": "And this will work on\nbasically all the examples I've shown you except\nthe equilateral one. ",
    "start": "3859380",
    "end": "3879000"
  },
  {
    "text": "This is the one, two, three,\nfour, five, six, seven, eight bar example.",
    "start": "3879000",
    "end": "3884700"
  },
  {
    "text": "This is conjectured minimum. Let's prove that it's locked. ",
    "start": "3884700",
    "end": "3892160"
  },
  {
    "text": "See any rule one's\nwe could apply? ",
    "start": "3892160",
    "end": "3897299"
  },
  {
    "text": "Do you see any edges\nthat are effectively wedged against another edge? Remember, all of these\nvertices are actually",
    "start": "3897300",
    "end": "3905250"
  },
  {
    "text": "on top of each\nother, we're thinking about the self-touching version. These guys are\nactually touching,",
    "start": "3905250",
    "end": "3911280"
  },
  {
    "text": "and these guys are\nactually touching. AUDIENCE: This rule\none [INAUDIBLE].",
    "start": "3911280",
    "end": "3916510"
  },
  {
    "text": "PROFESSOR: There's a rule one-- AUDIENCE: That one, there. PROFESSOR: --here? Yeah, good.",
    "start": "3916510",
    "end": "3922599"
  },
  {
    "text": "This edge is pinned\nagainst this edge. Because look, we have acute\nangles here, namely 0.",
    "start": "3922600",
    "end": "3930099"
  },
  {
    "text": "There's an acute\nangle here, that's 0. And this edge, if these guys\nare on top of each other, and these guys aer\non top of each other,",
    "start": "3930100",
    "end": "3935910"
  },
  {
    "text": "these two edges have\nthe same length. Therefore these are\npinned together.",
    "start": "3935910",
    "end": "3941760"
  },
  {
    "text": "So let me redraw it when\nthey're pinned together. ",
    "start": "3941760",
    "end": "3958472"
  },
  {
    "text": "I'm drawing things with curves\njust so it's easier to draw, but you understand this\nis also basically flat.",
    "start": "3958472",
    "end": "3964619"
  },
  {
    "text": "Again these guys are all\non top of each other, these are on top of each other,\nthese are on top of each other.",
    "start": "3964620",
    "end": "3972730"
  },
  {
    "text": "Did I do that right? I think so, yep. Anymore? AUDIENCE: [INAUDIBLE].",
    "start": "3972730",
    "end": "3977910"
  },
  {
    "text": "PROFESSOR: Yes,\non the right side. It's another rule one. Here it's actually\npretty symmetric.",
    "start": "3977910",
    "end": "3985289"
  },
  {
    "text": "Is this locked? Is this rigid? It's kind of hard to say. But now it's going\nto be pretty obvious.",
    "start": "3985290",
    "end": "3990410"
  },
  {
    "text": "Because when these\nguys join together that means these\ntwo vertices really are on top of each\nother for positive time.",
    "start": "3990410",
    "end": "3995731"
  },
  {
    "text": "Same for these. So a new example looks\nlike two triangles",
    "start": "3995731",
    "end": "4001230"
  },
  {
    "text": "with an edge floating there. Now it's pretty\nobvious this is rigid. But if you really want\nto make it obvious",
    "start": "4001230",
    "end": "4007579"
  },
  {
    "text": "you can apply rule\ntwo to this guy.",
    "start": "4007580",
    "end": "4013080"
  },
  {
    "text": "And then these guys\nare pinned together. And then you have two triangles.",
    "start": "4013080",
    "end": "4022560"
  },
  {
    "text": "Two triangles are rigid. I think that's pretty obvious. You could check it, whether\nthey're infinitesimally rigid,",
    "start": "4022560",
    "end": "4029370"
  },
  {
    "text": "whatever you feel like. But because that's rigid,\nthis is rigid, this is rigid, this is ridged.",
    "start": "4029370",
    "end": "4034470"
  },
  {
    "text": "Because these operations\npreserve rigidity. They don't preserve\nlocked or whatever, but they preserve rigidity. Once you know that\nthis is rigid you",
    "start": "4034470",
    "end": "4040600"
  },
  {
    "text": "know that it's strongly locked. So when you perturb it\nso these guys are not on top of each other, but\nthey're slightly spread out,",
    "start": "4040600",
    "end": "4046285"
  },
  {
    "text": "it will be locked\nwithin epsilon, for any epsilon you want. Now this is super easy. And this is how we\nwere able to iterate",
    "start": "4046285",
    "end": "4052840"
  },
  {
    "text": "through all those locked\ntrees, and say, oh yeah, this is still rigid, so\nit's still strongly locked.",
    "start": "4052840",
    "end": "4058950"
  },
  {
    "text": "Now this doesn't always work. But it seems pretty good. And one of the\nconjectures on the tables",
    "start": "4058950",
    "end": "4064270"
  },
  {
    "text": "is that for linear\ntrees rules one and two are kind of almost enough.",
    "start": "4064270",
    "end": "4069530"
  },
  {
    "text": "It's not literally true. But it's hopefully mostly true. AUDIENCE: It seems that\nthat argument would",
    "start": "4069530",
    "end": "4075190"
  },
  {
    "text": "mean you wouldn't need\none of the n's on--",
    "start": "4075190",
    "end": "4080720"
  },
  {
    "text": "PROFESSOR: Right, so we could\nthink about this example. And you're asking do you need--\ndoes this need to be that long",
    "start": "4080720",
    "end": "4086790"
  },
  {
    "text": "or could we throw\naway the last bar? Right, it looks\nlike that's good. If you throw away this\nbar it's still the case",
    "start": "4086790",
    "end": "4094020"
  },
  {
    "text": "that this edge you\ncan apply rule one, and say that it's pinned\nagainst this edge.",
    "start": "4094020",
    "end": "4101580"
  },
  {
    "text": "And once those are there,\nthis thing basically acts as a single triangle,\nand life is good.",
    "start": "4101580",
    "end": "4106979"
  },
  {
    "text": "Yeah, so you can\nremove this one edge. You could not remove both of\nthe edges, at least for rule one",
    "start": "4106979",
    "end": "4114089"
  },
  {
    "text": "to apply, because then this\nguy's not wedged into anything. He's wedged on this side but\nhe's not wedged on that side.",
    "start": "4114090",
    "end": "4120020"
  },
  {
    "text": "But you can remove this edge. And that's a super\neasy way to prove that this thing is locked. We didn't know this when\nwe wrote the textbook,",
    "start": "4120020",
    "end": "4125918"
  },
  {
    "text": "otherwise we would\nhave given that proof. There's one based on\nstresses in the textbook. But here, yeah, you can make\nvery easy judgments like that.",
    "start": "4125918",
    "end": "4133700"
  },
  {
    "text": "Now it doesn't\nmean that it's not locked when you remove\ntwo of the edges. ",
    "start": "4133700",
    "end": "4140609"
  },
  {
    "text": "I'm not sure, no I\nthink it's not locked. But just because the\nrules don't apply doesn't tell you\nthat's not locked.",
    "start": "4140609",
    "end": "4146729"
  },
  {
    "text": "But it at least makes\nit hard to prove. And it's a good\nsort of guideline. ",
    "start": "4146729",
    "end": "4154970"
  },
  {
    "text": "Questions? Yeah. AUDIENCE: Did the perturbations\nthat are positive and finite",
    "start": "4154970",
    "end": "4160533"
  },
  {
    "text": "have numbers? Like, what's-- it's sort of\ndisturbing that they get very, very small-- what are they?",
    "start": "4160533",
    "end": "4166818"
  },
  {
    "text": "PROFESSOR: So you want\nto know how big is delta? How big is epsilon? Well it depends, of course, how\nmuch motion you want to allow,",
    "start": "4166819",
    "end": "4177009"
  },
  {
    "text": "how small the\nperturbations have to be. And I don't have a great answer. I do recall that we computed\na bound, probably in terms",
    "start": "4177010",
    "end": "4184710"
  },
  {
    "text": "of something like r, the\nmaximum distance divided by the smallest non 0 distance.",
    "start": "4184710",
    "end": "4191600"
  },
  {
    "text": "So it depends how close to\ntight you are in other places. And it depends on your epsilon.",
    "start": "4191600",
    "end": "4197250"
  },
  {
    "text": "There is an explicit bound. I think it's polynomial\non those two things. But I don't quite remember.",
    "start": "4197250",
    "end": "4202970"
  },
  {
    "text": "So you can actually compute\nhow much perturbation will give you locked\nwithin epsilon.",
    "start": "4202970",
    "end": "4208060"
  },
  {
    "text": "But it's certainly not clean. It's actually not too hard\nto prove this statement",
    "start": "4208060",
    "end": "4213850"
  },
  {
    "text": "just using topology. ",
    "start": "4213850",
    "end": "4221140"
  },
  {
    "text": "Should I try to remember\nhow to prove it? ",
    "start": "4221140",
    "end": "4227730"
  },
  {
    "text": "Basically, yeah, so\nthere's this fun fact.",
    "start": "4227730",
    "end": "4234610"
  },
  {
    "text": "Suppose you have\nsome tensegrity. So tensegrities\nare kind of hard. They say, look, a bar has\nthis length, ain't changing.",
    "start": "4234610",
    "end": "4244057"
  },
  {
    "text": "Let's be a little more flexible. What if you said, oh, this\nbar can change within epsilon? Because in reality you could\nprobably pull the metal",
    "start": "4244057",
    "end": "4250610"
  },
  {
    "text": "a little bit, just\nnot very much. Struts, it's not\nsupposed to get smaller.",
    "start": "4250610",
    "end": "4256330"
  },
  {
    "text": "Let's say it can get epsilon\nsmaller than it's supposed to. It turns out if you take\nsome tensegrity that's rigid,",
    "start": "4256330",
    "end": "4262900"
  },
  {
    "text": "and then you add this\nlittle bit of flexibility so the edges can change\nin length a tiny amount,",
    "start": "4262900",
    "end": "4268210"
  },
  {
    "text": "then before you made this change\nyour configuration was a point,",
    "start": "4268210",
    "end": "4273386"
  },
  {
    "text": "and there might have\nbeen other stuff. But locally you\ncouldn't move at all. If you add this\nflexibility, the new picture",
    "start": "4273387",
    "end": "4281090"
  },
  {
    "text": "is a point with a\ntiny ball around it. And whatever, I mean this\nmight change a little bit also.",
    "start": "4281090",
    "end": "4288067"
  },
  {
    "text": "But the point is this point\ndoesn't get much bigger when you add just a little\nbit of flexibility. This is a fact that was\nknown in rigidity theory.",
    "start": "4288067",
    "end": "4294780"
  },
  {
    "text": "It's called sloppy rigidity. And it's essentially what's\ngoing on here-- that we're adding a little bit\nof perturbation.",
    "start": "4294780",
    "end": "4300670"
  },
  {
    "text": "Before you couldn't move at all. Now you can move a little bit. We just had to generalize\nfrom regular tensegrity so these weird tensegrities\nwith sliding struts.",
    "start": "4300670",
    "end": "4309620"
  },
  {
    "text": "And this is kind of intuitive. To really check it\nyou just need to check that the constraints on edges\nand struts are closed sets,",
    "start": "4309620",
    "end": "4317650"
  },
  {
    "text": "and then the have\nto behave this way. But you can actually compute\nhow quickly they change.",
    "start": "4317650",
    "end": "4323000"
  },
  {
    "text": "It's just messy. So I'll leave it at that. Hey, there's a little\nproof addition,",
    "start": "4323000",
    "end": "4329795"
  },
  {
    "text": "glad I still remember it. Other questions? This is the end of 2D trees.",
    "start": "4329795",
    "end": "4334970"
  },
  {
    "text": "And now I want to talk\nbriefly about 3D chains. So we did this one, now\nI want to do this one.",
    "start": "4334970",
    "end": "4343438"
  },
  {
    "start": "4343438",
    "end": "4360230"
  },
  {
    "text": "Actually this is one of the\noldest results, from 1998. So right around the same\ntime as the locked trees.",
    "start": "4360230",
    "end": "4366110"
  },
  {
    "start": "4366110",
    "end": "4384190"
  },
  {
    "text": "I may have shown this example\nlast time, or in lecture one. But here it is again. Three bars in the\ncenter, and two",
    "start": "4384190",
    "end": "4391770"
  },
  {
    "text": "really long bars in the ends. We call this knitting needles,\nbecause it's like two knitting",
    "start": "4391770",
    "end": "4406430"
  },
  {
    "text": "needles with a short\nstring connecting them, tied in a knot, sort of. Topologically this\nis not knotted.",
    "start": "4406430",
    "end": "4411980"
  },
  {
    "text": "If you could add\nextra creases here you could pull that\nthrough, no problem. But if this is rigid,\nlike a linkage,",
    "start": "4411980",
    "end": "4420090"
  },
  {
    "text": "then this thing\nis locked provided",
    "start": "4420090",
    "end": "4431060"
  },
  {
    "text": "each end bar has\nlength strictly greater",
    "start": "4431060",
    "end": "4442550"
  },
  {
    "text": "than the sum of the middle bars. ",
    "start": "4442550",
    "end": "4451730"
  },
  {
    "text": "So there's three middle bars\nhere, add up their lengths, it should be shorter\nthan this one and it should be\nshorter than this one.",
    "start": "4451730",
    "end": "4459050"
  },
  {
    "text": "That's the cutoff. And I believe once it's\nthe other way around, this is not locked.",
    "start": "4459050",
    "end": "4464290"
  },
  {
    "start": "4464290",
    "end": "4476370"
  },
  {
    "text": "Sadly, rules one and do not\nprove this thing is locked. They only work in\ntwo dimensions.",
    "start": "4476370",
    "end": "4481920"
  },
  {
    "text": "But for this one example--\nand to tell you the truth, this is pretty much the only\nexample of a locked open chain",
    "start": "4481920",
    "end": "4488540"
  },
  {
    "text": "that we have-- there's a\nreally simple, nice proof.",
    "start": "4488540",
    "end": "4494180"
  },
  {
    "text": "Let me draw the picture again. AUDIENCE: Do you\nneed the bottom one?",
    "start": "4494180",
    "end": "4499191"
  },
  {
    "text": "PROFESSOR: You're asking do I\nneed three bars in the center, or could I get away with two? In fact, to draw this in\n3D you need three bars.",
    "start": "4499191",
    "end": "4507780"
  },
  {
    "text": "That's maybe not obvious. ",
    "start": "4507780",
    "end": "4513370"
  },
  {
    "text": "But if you tried to draw\nit would just four bars, like this, it's\nnot really possible",
    "start": "4513370",
    "end": "4522780"
  },
  {
    "text": "because these three\npoints are coplanar, as all three points\nare, and then yeah.",
    "start": "4522780",
    "end": "4529672"
  },
  {
    "text": "You can't get this\nweaving pattern. This guy's going to be either\nabove or below the plane. And this guy's going to be\nabove or below the plane.",
    "start": "4529672",
    "end": "4535656"
  },
  {
    "text": "And in all cases, you\ndon't get this weaving. So you really need the five.",
    "start": "4535656",
    "end": "4541406"
  },
  {
    "text": "This is the minimum. You can prove all four\nbar 3D chains to not lock. But with five you can do it.",
    "start": "4541407",
    "end": "4547760"
  },
  {
    "text": " Good question. So here's how we're\ngoing to prove",
    "start": "4547760",
    "end": "4553680"
  },
  {
    "text": "that this thing is locked.  So there are these three edges,\nthey have various lengths,",
    "start": "4553680",
    "end": "4561050"
  },
  {
    "text": "who knows? But add up the lengths, divide\nby 2, and measure out that far.",
    "start": "4561050",
    "end": "4566130"
  },
  {
    "text": "So I'm going to call that\nthe midpoint of those three segments. ",
    "start": "4566130",
    "end": "4572390"
  },
  {
    "text": "I want to center a ball here. It's going to look\nsomething like that.",
    "start": "4572390",
    "end": "4582780"
  },
  {
    "text": "It's a 3D ball centered there. So it's a ball, diameter equal\nto the sum of the middle bars.",
    "start": "4582780",
    "end": "4598010"
  },
  {
    "text": " So radius is half that.",
    "start": "4598010",
    "end": "4603640"
  },
  {
    "text": "And the center is the midpoint\nof the sum of the middle bars,",
    "start": "4603640",
    "end": "4615215"
  },
  {
    "text": "whatever.  So the radius is half the\nsum of the middle bars.",
    "start": "4615215",
    "end": "4622420"
  },
  {
    "text": "And this is at half the\nsum of the middle bars. Therefore these middle\nbars stay inside the ball.",
    "start": "4622420",
    "end": "4631290"
  },
  {
    "text": "Maybe they touch the boundary. But they're inside or on\nthe boundary of the ball.",
    "start": "4631290",
    "end": "4636570"
  },
  {
    "text": "So that means the middle\nbars are in the ball.",
    "start": "4636570",
    "end": "4642554"
  },
  {
    "text": " Maybe just barely, but no\nmatter how you move this thing--",
    "start": "4642555",
    "end": "4650340"
  },
  {
    "text": "I mean if you move this point\nthen the ball moves with it. So no matter how\nthis thing folds,",
    "start": "4650340",
    "end": "4655640"
  },
  {
    "text": "those three bar stay\ninside the ball. What about these bars? Or what about the endpoints?",
    "start": "4655640",
    "end": "4660937"
  },
  {
    "text": "Well if this point is\ninside the ball, which it is, and this point is\ninside the ball, which it is, then this thing is longer\nthan the diameter of the ball.",
    "start": "4660937",
    "end": "4670530"
  },
  {
    "text": "This thing is greater than\nthe sum of the middle bars. The diameter of the ball is\nthe sum of the middle bars. So if I take any\npoint inside the ball",
    "start": "4670530",
    "end": "4676820"
  },
  {
    "text": "and move straight from there\nby the radius of the-- more",
    "start": "4676820",
    "end": "4682170"
  },
  {
    "text": "than the diameter of the ball,\nI must go outside the ball. So the endpoints are\noutside the ball.",
    "start": "4682170",
    "end": "4693115"
  },
  {
    "text": " How the heck are you\ngoing untie that not when",
    "start": "4693115",
    "end": "4698410"
  },
  {
    "text": "all of the interior vertices\nstay inside of the ball, and these guys stay\noutside the ball? To formalize how the\nheck, you can say well",
    "start": "4698410",
    "end": "4708324"
  },
  {
    "text": "if you ignore what's inside the\nball-- something's happening there, who knows? But outside it's\nlike there's a ball",
    "start": "4708325",
    "end": "4713600"
  },
  {
    "text": "and there's two sticks\ncoming out of it. So you can just\nimagine, for example,",
    "start": "4713600",
    "end": "4719310"
  },
  {
    "text": "tying a string\nbetween the two ends. And something happens\nin the inside.",
    "start": "4719310",
    "end": "4726160"
  },
  {
    "text": "But if you think of just\nfrom the outside perspective, these sticks just move around. It's really easy to\nnot tangle this cord",
    "start": "4726160",
    "end": "4733580"
  },
  {
    "text": "when these sticks move around. So now, in order for\nthis thing to become",
    "start": "4733580",
    "end": "4739260"
  },
  {
    "text": "unlocked, to straighten\nout for example, somehow inside you\nhave to do some magic",
    "start": "4739260",
    "end": "4746050"
  },
  {
    "text": "to get rid of this topology. Well what do I mean? Well if you could do it inside,\nyou could do that motion even",
    "start": "4746050",
    "end": "4754120"
  },
  {
    "text": "when there's a\nstring tied out here. But when I tie the string\nout here, it is a knot. It's a trefoil know.",
    "start": "4754120",
    "end": "4759830"
  },
  {
    "text": "There's no way to untie a\ntrefoil know without crossing. So either there's\ncrossing in here--",
    "start": "4759830",
    "end": "4764931"
  },
  {
    "text": "which better be-- or\nthere's crossing out here. There can't be\ncrossing out here. It's just two\nsticks and a string.",
    "start": "4764932",
    "end": "4770052"
  },
  {
    "text": "You can easily arrange\nthe motion of the string to not cross the two sticks.",
    "start": "4770052",
    "end": "4775130"
  },
  {
    "text": "Therefore this thing\nin fact cannot untie. Therefore this thing is\nlocked, cannot straighten out.",
    "start": "4775130",
    "end": "4783880"
  },
  {
    "text": "So that's locked 3D chains. Let me tell you a bunch\nof cool open problems.",
    "start": "4783880",
    "end": "4789490"
  },
  {
    "text": "This is really the only good\nexample of a locked 3D chain we have. And it has length ratios,\nthe best you could do",
    "start": "4789490",
    "end": "4796040"
  },
  {
    "text": "is like 1 to 3 plus epsilon. If each of these\nis length 1, these have to be 3 plus epsilon.",
    "start": "4796040",
    "end": "4802579"
  },
  {
    "text": "Is that the best? Or could it be, for\nexample, that all the edges or between length 1 and 2,\nand the chain is locked?",
    "start": "4802580",
    "end": "4810590"
  },
  {
    "text": "We don't know. In the extreme case, what if all\nthe edge lengths of the same, all length 1?",
    "start": "4810590",
    "end": "4816550"
  },
  {
    "text": "Is there a locked 3D chain? We now know there's\na locked 2D tree, but for chains it's tricky.",
    "start": "4816550",
    "end": "4823599"
  },
  {
    "text": "It's even open if\nyou add thickness. You say, hey, let's\nthink about a 3D chain,",
    "start": "4823600",
    "end": "4830969"
  },
  {
    "text": "all the edge lengths\nare the same, and you get to specify\nsome radius of the bars.",
    "start": "4830970",
    "end": "4836187"
  },
  {
    "text": "For a while I thought\nmaybe this was locked. I don't think it is. We can unfold.",
    "start": "4836187",
    "end": "4842920"
  },
  {
    "text": "All of these questions are\nopen, and pretty fascinating. Especially because proteins\nare a lot like equilateral--",
    "start": "4842920",
    "end": "4850300"
  },
  {
    "text": "like all the edge lengths\nthe same-- 3D chains. It's even open for\nequilateral 3D trees.",
    "start": "4850300",
    "end": "4857580"
  },
  {
    "text": "So we know 2D equilateral\ntrees can lock. But 3D, it's open.",
    "start": "4857580",
    "end": "4863139"
  },
  {
    "text": "I think that's\nenough open problems. Lots of cool questions here. All right, I have one more. It's just fun.",
    "start": "4863140",
    "end": "4868800"
  },
  {
    "text": "Even if you have a 3D chain\nwhere all the edges are",
    "start": "4868800",
    "end": "4875889"
  },
  {
    "text": "on top of each other\non a line segment-- it's like a linear\ntree but now it's a linear 3D chain-- it's\nlike a bundle of segments.",
    "start": "4875890",
    "end": "4884880"
  },
  {
    "text": "Is that locked? I don't think so. But even that is tricky\nto come up with algorithm.",
    "start": "4884880",
    "end": "4890080"
  },
  {
    "text": "Maybe we'll work on some of\nthese in the problem session. That's it. ",
    "start": "4890080",
    "end": "4901127"
  }
]