[
  {
    "start": "0",
    "end": "5445"
  },
  {
    "text": "KENDRA PUGH: Hi.",
    "start": "5445",
    "end": "6790"
  },
  {
    "text": "I'd like to talk to you today\nabout inheritance as a",
    "start": "6790",
    "end": "10930"
  },
  {
    "text": "fundamental concept in object\noriented programming, its use",
    "start": "10930",
    "end": "14500"
  },
  {
    "text": "in Python, and also tips and\ntricks for using inheritance",
    "start": "14500",
    "end": "19490"
  },
  {
    "text": "in Python and in the\nobject oriented",
    "start": "19490",
    "end": "22320"
  },
  {
    "text": "programming paradigm in 6.01.",
    "start": "22320",
    "end": "24689"
  },
  {
    "text": "First thing I'm going to do is\ngive a really quick crash",
    "start": "24690",
    "end": "27210"
  },
  {
    "text": "course on inheritance to catch\nyou up to speed, and also so",
    "start": "27210",
    "end": "30919"
  },
  {
    "text": "that you're clear on what I mean\nwhen I say something like",
    "start": "30920",
    "end": "34940"
  },
  {
    "text": "parent class.",
    "start": "34940",
    "end": "36129"
  },
  {
    "text": "And also, I'm going to address\nthe sort of nuances of using",
    "start": "36130",
    "end": "42240"
  },
  {
    "text": "inheritance while programming\nin an object",
    "start": "42240",
    "end": "46270"
  },
  {
    "text": "oriented fashion in Python.",
    "start": "46270",
    "end": "48550"
  },
  {
    "text": "A lot of the code in 6.01\nuses the object oriented",
    "start": "48550",
    "end": "52720"
  },
  {
    "text": "programming paradigm.",
    "start": "52720",
    "end": "53430"
  },
  {
    "text": "And a lot of the code\nin 6.01 will",
    "start": "53430",
    "end": "56810"
  },
  {
    "text": "inherit from parent classes.",
    "start": "56810",
    "end": "58680"
  },
  {
    "text": "So this is part of the\nmotivation for going through a",
    "start": "58680",
    "end": "63030"
  },
  {
    "text": "quick review, and then also\nindicating the most common",
    "start": "63030",
    "end": "66450"
  },
  {
    "text": "slip ups, and also the most\nsignificant things that you",
    "start": "66450",
    "end": "68759"
  },
  {
    "text": "may or may not have seen\nfrom other languages.",
    "start": "68760",
    "end": "71200"
  },
  {
    "text": "All right, first, a crash\ncourse on inheritance.",
    "start": "71200",
    "end": "75079"
  },
  {
    "text": "Let's look at the board.",
    "start": "75080",
    "end": "76330"
  },
  {
    "start": "76330",
    "end": "78420"
  },
  {
    "text": "Inheritance is the idea that you\ncan arrange objects in a",
    "start": "78420",
    "end": "84040"
  },
  {
    "text": "hierarchical fashion such that\nvery, very generalized or",
    "start": "84040",
    "end": "89595"
  },
  {
    "text": "basic things that are true of\na whole group of objects can",
    "start": "89595",
    "end": "95050"
  },
  {
    "text": "be specified at a\nhigher level.",
    "start": "95050",
    "end": "96900"
  },
  {
    "text": "And then, you can work your way\ndown to progressively more",
    "start": "96900",
    "end": "100170"
  },
  {
    "text": "specific levels.",
    "start": "100170",
    "end": "101420"
  },
  {
    "start": "101420",
    "end": "106720"
  },
  {
    "text": "The most formal encounter you've\nprobably had with this",
    "start": "106720",
    "end": "109550"
  },
  {
    "text": "thing, that approach, is the\nbiological taxonomy, right?",
    "start": "109550",
    "end": "113960"
  },
  {
    "text": "Kingdom, phylum, class, order,\nfamily, genus, species.",
    "start": "113960",
    "end": "116840"
  },
  {
    "text": "Every species has all\nthe properties of",
    "start": "116840",
    "end": "118990"
  },
  {
    "text": "that particular genus.",
    "start": "118990",
    "end": "120340"
  },
  {
    "text": "All the genuses of a particular\nfamily have the",
    "start": "120340",
    "end": "124960"
  },
  {
    "text": "properties of that family,\nand so on, and so forth.",
    "start": "124960",
    "end": "127729"
  },
  {
    "start": "127730",
    "end": "130810"
  },
  {
    "text": "That's a very concrete\nexample.",
    "start": "130810",
    "end": "131870"
  },
  {
    "text": "But I find it a little boring.",
    "start": "131870",
    "end": "133180"
  },
  {
    "text": "So I'm going to talk about\ndog breeds instead.",
    "start": "133180",
    "end": "136540"
  },
  {
    "text": "You're probably familiar with\nthe fact that golden",
    "start": "136540",
    "end": "139049"
  },
  {
    "text": "retrievers are a type of\nretrievers and that retrievers",
    "start": "139050",
    "end": "142850"
  },
  {
    "text": "are a particular kind of dog.",
    "start": "142850",
    "end": "145820"
  },
  {
    "start": "145820",
    "end": "149480"
  },
  {
    "text": "You can make generalizations\nabout goldens based on what",
    "start": "149480",
    "end": "152200"
  },
  {
    "text": "you know about dogs, right?",
    "start": "152200",
    "end": "153520"
  },
  {
    "text": "All dogs bark.",
    "start": "153520",
    "end": "154350"
  },
  {
    "text": "All dogs have four legs if they\naren't injured or have",
    "start": "154350",
    "end": "158290"
  },
  {
    "text": "some sort of congenital defect,\nthat kind of thing.",
    "start": "158290",
    "end": "161189"
  },
  {
    "text": "And goldens also have\nall the properties",
    "start": "161190",
    "end": "164620"
  },
  {
    "text": "of retrievers, right?",
    "start": "164620",
    "end": "165569"
  },
  {
    "text": "They are capable of going and\ncatching game that you've",
    "start": "165570",
    "end": "170140"
  },
  {
    "text": "either shot, or possibly\nchase it down and",
    "start": "170140",
    "end": "172110"
  },
  {
    "text": "bring it back to you.",
    "start": "172110",
    "end": "173660"
  },
  {
    "text": "So they're bred to have very\nparticular properties.",
    "start": "173660",
    "end": "176370"
  },
  {
    "text": "Goldens are also bred to have\nvery particular properties.",
    "start": "176370",
    "end": "179040"
  },
  {
    "text": "And those that are very specific\nto goldens define the",
    "start": "179040",
    "end": "182599"
  },
  {
    "text": "difference between a golden\nversus a retriever in the",
    "start": "182600",
    "end": "185330"
  },
  {
    "text": "general sense.",
    "start": "185330",
    "end": "186490"
  },
  {
    "text": "Likewise, when we want to make\nobjects that have very",
    "start": "186490",
    "end": "189430"
  },
  {
    "text": "particular properties but also\nshare general properties with",
    "start": "189430",
    "end": "193739"
  },
  {
    "text": "other objects, we're going to\ncreate a new category of",
    "start": "193740",
    "end": "197240"
  },
  {
    "text": "object and put the specifics in\nthat very specific category",
    "start": "197240",
    "end": "203740"
  },
  {
    "text": "and then take the things that we\ncan generalize and put them",
    "start": "203740",
    "end": "206210"
  },
  {
    "text": "in more general categories so\nwe don't end up rewriting a",
    "start": "206210",
    "end": "209510"
  },
  {
    "text": "lot of code.",
    "start": "209510",
    "end": "210150"
  },
  {
    "text": "Or we end up reusing code, but\nnot copying and pasting it",
    "start": "210150",
    "end": "212829"
  },
  {
    "text": "everywhere because\nthat's annoying.",
    "start": "212830",
    "end": "214730"
  },
  {
    "text": "The other major advantage of\nusing inheritance is that code",
    "start": "214730",
    "end": "220870"
  },
  {
    "text": "is more intuitive.",
    "start": "220870",
    "end": "222220"
  },
  {
    "text": "You can make references to\nthe same piece of code",
    "start": "222220",
    "end": "224500"
  },
  {
    "text": "all over the place.",
    "start": "224500",
    "end": "225860"
  },
  {
    "text": "But it's not as intuitively\naccessible to do that over,",
    "start": "225860",
    "end": "232400"
  },
  {
    "text": "and over, and over\nagain, right?",
    "start": "232400",
    "end": "233510"
  },
  {
    "text": "It's really convenient to think\nof the fact that golden",
    "start": "233510",
    "end": "238250"
  },
  {
    "text": "could be a subclass or subtype\nof retriever, and that",
    "start": "238250",
    "end": "242100"
  },
  {
    "text": "retriever could be a subclass\nor subtype of dog.",
    "start": "242100",
    "end": "245430"
  },
  {
    "text": "When I talk about this\nrelationship in terms of",
    "start": "245430",
    "end": "250109"
  },
  {
    "text": "object oriented programming--",
    "start": "250110",
    "end": "251360"
  },
  {
    "start": "251360",
    "end": "256620"
  },
  {
    "text": "when I talk about these\ncategories in terms of object",
    "start": "256620",
    "end": "259500"
  },
  {
    "text": "oriented programming and when\nyou're actually looking at",
    "start": "259500",
    "end": "261519"
  },
  {
    "text": "code, goldens are a subclass, or\nchild class, of retrievers.",
    "start": "261520",
    "end": "268240"
  },
  {
    "text": "And retrievers are\na parent class or",
    "start": "268240",
    "end": "270580"
  },
  {
    "text": "super class of goldens.",
    "start": "270580",
    "end": "273349"
  },
  {
    "text": "Likewise, dogs are a parent\nclass of retrievers.",
    "start": "273350",
    "end": "278520"
  },
  {
    "text": "So now, I've defined my\nterminology and also hopefully",
    "start": "278520",
    "end": "281400"
  },
  {
    "text": "given you a very, very, very\nquick review of inheritance.",
    "start": "281400",
    "end": "284530"
  },
  {
    "text": "Now, I'm going to talk about\nthe specifics in Python.",
    "start": "284530",
    "end": "287330"
  },
  {
    "text": "If I turn over here, I've\nwritten up a very short class",
    "start": "287330",
    "end": "290889"
  },
  {
    "text": "definition for dog, right?",
    "start": "290890",
    "end": "293230"
  },
  {
    "text": "Every dog has the class\nattribute, cry.",
    "start": "293230",
    "end": "296450"
  },
  {
    "text": "Every dog has an initialization\nmethod that",
    "start": "296450",
    "end": "300100"
  },
  {
    "text": "gives every dog a very specific\nname that is passed",
    "start": "300100",
    "end": "302850"
  },
  {
    "text": "in when you initialize\nthe dog.",
    "start": "302850",
    "end": "305690"
  },
  {
    "text": "And every dog has access to the\nclass method, greeting,",
    "start": "305690",
    "end": "310880"
  },
  {
    "text": "which returns a string that\nsays, \"I'm,\" whatever the name",
    "start": "310880",
    "end": "315360"
  },
  {
    "text": "of the dog is, and also the\nspecific cry, which in this",
    "start": "315360",
    "end": "321409"
  },
  {
    "text": "case, is actually\nthe class cry.",
    "start": "321410",
    "end": "322680"
  },
  {
    "start": "322680",
    "end": "325850"
  },
  {
    "text": "If you're unfamiliar with using\nthe plus in terms of",
    "start": "325850",
    "end": "328630"
  },
  {
    "text": "strings, it's just\na concatenator.",
    "start": "328630",
    "end": "331450"
  },
  {
    "text": "So play around with that in\nIDLE if you're confused.",
    "start": "331450",
    "end": "334680"
  },
  {
    "text": "I would recommend copying all\nof this into IDLE, and then",
    "start": "334680",
    "end": "338910"
  },
  {
    "text": "playing around with a particular\ninstantiation of",
    "start": "338910",
    "end": "341655"
  },
  {
    "text": "dogs, in this case, Lassie.",
    "start": "341655",
    "end": "343930"
  },
  {
    "text": "If you look at Lassie.name,\nyou'll end up going after",
    "start": "343930",
    "end": "349080"
  },
  {
    "text": "self.name, which is specified\nwhen your",
    "start": "349080",
    "end": "351590"
  },
  {
    "text": "initialize the object.",
    "start": "351590",
    "end": "353040"
  },
  {
    "text": "So Lassie's name is Lassie.",
    "start": "353040",
    "end": "355390"
  },
  {
    "text": "Likewise, if you were to type\nin Lassie.greeting, open",
    "start": "355390",
    "end": "359465"
  },
  {
    "text": "paren, close paren, and hit\nEnter, you should get a string",
    "start": "359465",
    "end": "363590"
  },
  {
    "text": "return that says, \"I'm Lassie,\"\ncomma, \"bark.\" Mostly",
    "start": "363590",
    "end": "369669"
  },
  {
    "text": "this is to familiarize you with\nobject oriented in Python",
    "start": "369670",
    "end": "372640"
  },
  {
    "text": "in the general sense.",
    "start": "372640",
    "end": "373860"
  },
  {
    "text": "Now, we're going to look at what\nhappens when you want to",
    "start": "373860",
    "end": "375729"
  },
  {
    "text": "set up a subclass.",
    "start": "375730",
    "end": "376980"
  },
  {
    "start": "376980",
    "end": "381460"
  },
  {
    "text": "If I set up class Retriever and\nI want to inherit from the",
    "start": "381460",
    "end": "385270"
  },
  {
    "text": "super-class, Dog, I'm going\nto pass in Dog.",
    "start": "385270",
    "end": "388250"
  },
  {
    "start": "388250",
    "end": "390840"
  },
  {
    "text": "This is in the same syntax that\nI would use if it were a",
    "start": "390840",
    "end": "393430"
  },
  {
    "text": "function and I wanted to\npass in a parameter.",
    "start": "393430",
    "end": "395750"
  },
  {
    "text": "If I wanted to inherit from\nmultiple things or multiple",
    "start": "395750",
    "end": "398650"
  },
  {
    "text": "classes, I would put multiple\nclasses here.",
    "start": "398650",
    "end": "401699"
  },
  {
    "text": "Right now, we're just going\nto inherit from Dog.",
    "start": "401700",
    "end": "405840"
  },
  {
    "text": "Note that I have no code here.",
    "start": "405840",
    "end": "408660"
  },
  {
    "text": "This is pretty much meant to\nexplicitly specify the fact",
    "start": "408660",
    "end": "410800"
  },
  {
    "text": "that Retriever is not actually\ngoing to introduce any new",
    "start": "410800",
    "end": "413020"
  },
  {
    "text": "properties to dogs.",
    "start": "413020",
    "end": "416210"
  },
  {
    "text": "Their types are going\nto be different.",
    "start": "416210",
    "end": "418259"
  },
  {
    "text": "So if I create something that's\na Retriever, it will be",
    "start": "418260",
    "end": "421330"
  },
  {
    "text": "of object type Retriever, versus\nif I create something",
    "start": "421330",
    "end": "424220"
  },
  {
    "text": "and say, \"Dog,\" open paren,\nclose paren, it's going to be",
    "start": "424220",
    "end": "426800"
  },
  {
    "text": "of type Dog.",
    "start": "426800",
    "end": "427639"
  },
  {
    "text": "But what happens when I\ncreate a Retriever--",
    "start": "427640",
    "end": "430240"
  },
  {
    "text": "and as an aside, if you know who\nBenji is, I know he's not",
    "start": "430240",
    "end": "433419"
  },
  {
    "text": "a retriever.",
    "start": "433420",
    "end": "434110"
  },
  {
    "text": "But bear with me here.",
    "start": "434110",
    "end": "436389"
  },
  {
    "text": "If I create a Retriever, it's\nfirst going to look for an",
    "start": "436390",
    "end": "439780"
  },
  {
    "text": "initialization in any other\nmethods or attributes in the",
    "start": "439780",
    "end": "443990"
  },
  {
    "text": "Retriever class definition, run\nany code that's here, and",
    "start": "443990",
    "end": "449340"
  },
  {
    "text": "then go to the parent class,\nand run all the code here.",
    "start": "449340",
    "end": "456090"
  },
  {
    "start": "456090",
    "end": "460150"
  },
  {
    "text": "So even though Retriever did\nnot have any explicit code",
    "start": "460150",
    "end": "463990"
  },
  {
    "text": "underneath it, I can still\ninteract with the object,",
    "start": "463990",
    "end": "467020"
  },
  {
    "text": "Benji, the same way\nthat I interacted",
    "start": "467020",
    "end": "469060"
  },
  {
    "text": "with the object Lassie.",
    "start": "469060",
    "end": "470100"
  },
  {
    "text": "It has all the same methods and\nall the same attributes.",
    "start": "470100",
    "end": "472040"
  },
  {
    "start": "472040",
    "end": "477230"
  },
  {
    "text": "Phew.",
    "start": "477230",
    "end": "478210"
  },
  {
    "text": "So there's basic inheritance.",
    "start": "478210",
    "end": "479710"
  },
  {
    "text": "And I will make another aside\nthat if you're doing this, you",
    "start": "479710",
    "end": "485280"
  },
  {
    "text": "probably don't need to create a\nsubclass in the first place.",
    "start": "485280",
    "end": "488000"
  },
  {
    "start": "488000",
    "end": "492620"
  },
  {
    "text": "If you're designing your own\ncode, and you're trying to",
    "start": "492620",
    "end": "495000"
  },
  {
    "text": "think about what the best way to\norganize things is, if you",
    "start": "495000",
    "end": "498040"
  },
  {
    "text": "have to create a subtype or a\nsubclass and there are no new",
    "start": "498040",
    "end": "502470"
  },
  {
    "text": "methods or attributes or no\ndifferent ways of addressing",
    "start": "502470",
    "end": "504970"
  },
  {
    "text": "those methods or attributes,\nthen this category is probably",
    "start": "504970",
    "end": "509940"
  },
  {
    "text": "actually just this category.",
    "start": "509940",
    "end": "512240"
  },
  {
    "start": "512240",
    "end": "514940"
  },
  {
    "text": "You may want to make a\ndifference so that you can do",
    "start": "514940",
    "end": "516760"
  },
  {
    "text": "interesting things with\ntype checking.",
    "start": "516760",
    "end": "518159"
  },
  {
    "text": "I think that's the only thing\nI can think of that would",
    "start": "518159",
    "end": "520320"
  },
  {
    "text": "justify it.",
    "start": "520320",
    "end": "520510"
  },
  {
    "text": "And I might be wrong.",
    "start": "520510",
    "end": "522549"
  },
  {
    "text": "Python gurus out there\nshould correct me.",
    "start": "522549",
    "end": "524030"
  },
  {
    "text": "But a thing to keep in mind.",
    "start": "524030",
    "end": "530300"
  },
  {
    "text": "So we've done the first half\nof our inheritance.",
    "start": "530300",
    "end": "532279"
  },
  {
    "text": "We're going to inherit one more\ntime and create a class",
    "start": "532280",
    "end": "534385"
  },
  {
    "text": "of golden retrievers.",
    "start": "534385",
    "end": "535635"
  },
  {
    "start": "535635",
    "end": "538340"
  },
  {
    "text": "Once again, I've got my class\ndefinition and my indication",
    "start": "538340",
    "end": "542110"
  },
  {
    "text": "that I'm going to inherit\nfrom Retriever.",
    "start": "542110",
    "end": "543480"
  },
  {
    "start": "543480",
    "end": "547269"
  },
  {
    "text": "I don't have any initialization\nor attribute",
    "start": "547270",
    "end": "550710"
  },
  {
    "text": "assignments.",
    "start": "550710",
    "end": "551610"
  },
  {
    "text": "I only have a definition\nfor greeting.",
    "start": "551610",
    "end": "555300"
  },
  {
    "text": "So what happens here?",
    "start": "555300",
    "end": "557260"
  },
  {
    "text": "Well, the first thing we always\ndo is look for an",
    "start": "557260",
    "end": "561430"
  },
  {
    "text": "initialization method.",
    "start": "561430",
    "end": "564300"
  },
  {
    "text": "Golden doesn't have one, so\nit's going to check the",
    "start": "564300",
    "end": "566220"
  },
  {
    "text": "Retriever class.",
    "start": "566220",
    "end": "567470"
  },
  {
    "start": "567470",
    "end": "570689"
  },
  {
    "text": "Retriever doesn't have\none, so it's going to",
    "start": "570690",
    "end": "572640"
  },
  {
    "text": "check the Dog class.",
    "start": "572640",
    "end": "573890"
  },
  {
    "start": "573890",
    "end": "577480"
  },
  {
    "text": "The initialization\nmethod is here.",
    "start": "577480",
    "end": "579089"
  },
  {
    "text": "So when it runs the\ninitialization method, it's",
    "start": "579090",
    "end": "581700"
  },
  {
    "text": "going to run this code.",
    "start": "581700",
    "end": "582950"
  },
  {
    "start": "582950",
    "end": "590640"
  },
  {
    "text": "The first thing that's going to\nhappen is any code, or any",
    "start": "590640",
    "end": "594880"
  },
  {
    "text": "attribute assignments, or method\ndefinitions here are",
    "start": "594880",
    "end": "599840"
  },
  {
    "text": "going to be considered the\ncanon, or the first thing that",
    "start": "599840",
    "end": "603690"
  },
  {
    "text": "any Golden is going\nto reference.",
    "start": "603690",
    "end": "606030"
  },
  {
    "text": "So greeting is going to be\nexecuted before greeting used",
    "start": "606030",
    "end": "610380"
  },
  {
    "text": "in any other place.",
    "start": "610380",
    "end": "611630"
  },
  {
    "start": "611630",
    "end": "614222"
  },
  {
    "text": "You notice the only difference\nbetween this greeting and the",
    "start": "614222",
    "end": "616100"
  },
  {
    "text": "Dog greeting is that\n\"OHAI!\" has been",
    "start": "616100",
    "end": "619509"
  },
  {
    "text": "prepended to the phrase.",
    "start": "619510",
    "end": "621560"
  },
  {
    "text": "And the way that we end up doing\nthat is we refer to-- we",
    "start": "621560",
    "end": "624960"
  },
  {
    "text": "concatenate, and then refer\nto the superclass.",
    "start": "624960",
    "end": "628230"
  },
  {
    "text": "And once again, we have to pass\nin the explicit argument,",
    "start": "628230",
    "end": "631449"
  },
  {
    "text": "self, when we're talking about\na class definition.",
    "start": "631450",
    "end": "634390"
  },
  {
    "text": "Later, when you actually\ninstantiate an object and use",
    "start": "634390",
    "end": "638785"
  },
  {
    "text": "your parens, you're not\ngoing to have to",
    "start": "638785",
    "end": "640850"
  },
  {
    "text": "put self as an argument.",
    "start": "640850",
    "end": "642060"
  },
  {
    "text": "It'll get confused.",
    "start": "642060",
    "end": "643960"
  },
  {
    "text": "We'll go over that\nin a second.",
    "start": "643960",
    "end": "645210"
  },
  {
    "start": "645210",
    "end": "647670"
  },
  {
    "text": "So let's say I create a golden\nretriever, Sidney.",
    "start": "647670",
    "end": "650385"
  },
  {
    "start": "650385",
    "end": "653240"
  },
  {
    "text": "I'm going to pass in one\nargument, which is the name.",
    "start": "653240",
    "end": "654930"
  },
  {
    "start": "654930",
    "end": "658350"
  },
  {
    "text": "We're going to consider all the\ndefinitions here first,",
    "start": "658350",
    "end": "661500"
  },
  {
    "text": "which means that goldens are\ngoing to have a method for",
    "start": "661500",
    "end": "663220"
  },
  {
    "text": "greeting that is\nspecified here.",
    "start": "663220",
    "end": "665670"
  },
  {
    "text": "It's going to use the method for\ngreeting from Retriever.",
    "start": "665670",
    "end": "670899"
  },
  {
    "text": "And we could put in anything\nhere, right?",
    "start": "670900",
    "end": "672260"
  },
  {
    "text": "We could put Dog.greeting.",
    "start": "672260",
    "end": "673310"
  },
  {
    "text": "We could put in some other\nfunction that is in the same",
    "start": "673310",
    "end": "678110"
  },
  {
    "text": "environment as class Golden.",
    "start": "678110",
    "end": "680800"
  },
  {
    "text": "But here, we can explicitly\naccess the superclass that we",
    "start": "680800",
    "end": "685640"
  },
  {
    "text": "defined here.",
    "start": "685640",
    "end": "686890"
  },
  {
    "start": "686890",
    "end": "690450"
  },
  {
    "text": "We're going to head over to\nRetriever to see if there any",
    "start": "690450",
    "end": "693360"
  },
  {
    "text": "additional methods or attributes\nthat are a",
    "start": "693360",
    "end": "696300"
  },
  {
    "text": "consequence of being a subclass\nof Retriever that we",
    "start": "696300",
    "end": "699330"
  },
  {
    "text": "need to add to our definition.",
    "start": "699330",
    "end": "702110"
  },
  {
    "text": "Now, we just hit the pass.",
    "start": "702110",
    "end": "703529"
  },
  {
    "text": "On the other hand, Retriever\ninherits from Dog.",
    "start": "703530",
    "end": "707000"
  },
  {
    "text": "So once again, we have to jump\nover to a super-class and grab",
    "start": "707000",
    "end": "715410"
  },
  {
    "text": "any attributes or methods that\nare defined there as well.",
    "start": "715410",
    "end": "717879"
  },
  {
    "start": "717880",
    "end": "721170"
  },
  {
    "text": "So all the way back\nover to Sidney.",
    "start": "721170",
    "end": "722730"
  },
  {
    "start": "722730",
    "end": "725529"
  },
  {
    "text": "When I call Sidney.greeting(),\nthe first thing that happens",
    "start": "725530",
    "end": "730670"
  },
  {
    "text": "is that I look in the most\nspecific subclass, or whatever",
    "start": "730670",
    "end": "734200"
  },
  {
    "text": "my object type is and\nsee if there's a",
    "start": "734200",
    "end": "737350"
  },
  {
    "text": "definition for the method.",
    "start": "737350",
    "end": "738899"
  },
  {
    "text": "Because there is, I'm not going\nto use Dog.greeting().",
    "start": "738900",
    "end": "743110"
  },
  {
    "text": "I'm going to use\nGolden.greeting().",
    "start": "743110",
    "end": "746560"
  },
  {
    "text": "Golden.greeting() says return\na string that says, \"OHAI!\"",
    "start": "746560",
    "end": "752200"
  },
  {
    "text": "And also append it to whatever\nRetriever.greeting() returns.",
    "start": "752200",
    "end": "756595"
  },
  {
    "start": "756595",
    "end": "759850"
  },
  {
    "text": "I go over to Retriever.",
    "start": "759850",
    "end": "762829"
  },
  {
    "text": "It's not here, but I still\nhave a reference to Dog.",
    "start": "762830",
    "end": "766266"
  },
  {
    "text": "I go over to Dog.",
    "start": "766266",
    "end": "767516"
  },
  {
    "start": "767516",
    "end": "769760"
  },
  {
    "text": "It has a method for greeting.",
    "start": "769760",
    "end": "772140"
  },
  {
    "text": "And it says, \"I'm Sidney.",
    "start": "772140",
    "end": "774240"
  },
  {
    "text": "Bark.\" So the final return\ntype should be, \"OHAI.",
    "start": "774240",
    "end": "777970"
  },
  {
    "text": "I'm Sidney.",
    "start": "777970",
    "end": "778529"
  },
  {
    "text": "Bark.\"",
    "start": "778530",
    "end": "780250"
  },
  {
    "text": "This concludes my basic overview\nof inheritance of",
    "start": "780250",
    "end": "786470"
  },
  {
    "text": "object-oriented programming\nin Python for 6.01.",
    "start": "786470",
    "end": "789529"
  },
  {
    "text": "Next time, I'll review some\ninteresting features in Python",
    "start": "789530",
    "end": "792770"
  },
  {
    "text": "that actually originated in\nearlier languages and also",
    "start": "792770",
    "end": "798160"
  },
  {
    "text": "particularly things in aliasing\nthat people that are",
    "start": "798160",
    "end": "800110"
  },
  {
    "text": "new to Python or people that\nare new to programming find",
    "start": "800110",
    "end": "802760"
  },
  {
    "text": "especially confusing.",
    "start": "802760",
    "end": "804010"
  },
  {
    "start": "804010",
    "end": "805247"
  }
]