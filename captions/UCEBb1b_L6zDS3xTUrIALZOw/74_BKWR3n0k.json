[
  {
    "text": " The following content is provided under a\nCreative Commons license. Your support will help MIT OpenCourseWare\ncontinue to offer high quality educational",
    "start": "0",
    "end": "9299"
  },
  {
    "text": "resources for free. To make a donation or to view additional materials\nfrom hundreds of MIT courses, visit MIT OpenCourseWare",
    "start": "9300",
    "end": "19400"
  },
  {
    "text": "at ocw.mit.edu. TADGE DRYJA: So today will be some sort of\nfuture technologies, future developments that",
    "start": "19400",
    "end": "27540"
  },
  {
    "text": "might not be around yet, but are interesting\nthings to look for. And if you're interested in researching these\nkinds of things, you want to make a EmenG",
    "start": "27540",
    "end": "34600"
  },
  {
    "text": "out of this or want to make a-- who knows? PhD probably is a little overkill for a lot\nof these things.",
    "start": "34600",
    "end": "42170"
  },
  {
    "text": "But if you're interested in this kind of research,\nhere's some things we'll talk about today--",
    "start": "42170",
    "end": "47530"
  },
  {
    "text": "block slash block filters or committed bloom\nfilters, sharding, accumulators, and UTXO",
    "start": "47530",
    "end": "53890"
  },
  {
    "text": "commitments. OK, so, first one I'll talk about is block\nfilters.",
    "start": "53890",
    "end": "62510"
  },
  {
    "text": "So I don't think I ever really talked about\nwhat a Bloom filter is. I'm still not really going to explain how\nthey work, but the basic idea, the sort of",
    "start": "62510",
    "end": "71530"
  },
  {
    "text": "high level-- here's the prototype. Here's the function prototype. Here's the interface that Bloom filters have.",
    "start": "71530",
    "end": "77890"
  },
  {
    "text": "So you make a filter from a bunch of objects. And in this case, objects are just bytes,\nright?",
    "start": "77890",
    "end": "84408"
  },
  {
    "text": "Or some string of bytes. And Bloom filters usually use hash functions\nunder the hood.",
    "start": "84408",
    "end": "89960"
  },
  {
    "text": "A lot of times, they don't use cryptographic\nhash functions. They can use sort of faster functions, where\nthere may be collisions.",
    "start": "89960",
    "end": "96310"
  },
  {
    "text": "But in this case, it's not like a security\nproblem. So you've got a bunch of objects.",
    "start": "96310",
    "end": "101438"
  },
  {
    "text": "They might be addresses, which are 20 byte\npubkey hashes, or your UTXOs, which you can",
    "start": "101439",
    "end": "107060"
  },
  {
    "text": "represent as a 36 byte TIXD and out point,\nor TIXD and index.",
    "start": "107060",
    "end": "113688"
  },
  {
    "text": "So they're small, right? So either 20 bytes, 36 bytes, sometimes 32\nbytes.",
    "start": "113689",
    "end": "119229"
  },
  {
    "text": "You put these list of data objects and make\na filter, and you get a filter out.",
    "start": "119229",
    "end": "124420"
  },
  {
    "text": "And the filters are usually a kilobyte sometimes.",
    "start": "124420",
    "end": "129840"
  },
  {
    "text": "But the idea is it's sort of a mix of hash\nfunctions. And then you say, OK, I want to match filters. Usually, a different person does this and\nsays, OK, I've got a filter that someone generated.",
    "start": "129840",
    "end": "138980"
  },
  {
    "text": "And I compare it against this object and see\nif there's a hit, all right? So I see, OK, that matched.",
    "start": "138980",
    "end": "145310"
  },
  {
    "text": "This object matched the filter, or this object\ndid not match the filter. And this returns a true or false.",
    "start": "145310",
    "end": "153260"
  },
  {
    "text": "And so what's interesting about these is you\ncan have false positives. So it may be that this object was not in here.",
    "start": "153260",
    "end": "159989"
  },
  {
    "text": "It was not used when creating the filter,\nbut it still returns true.",
    "start": "159989",
    "end": "165569"
  },
  {
    "text": "So it's sort of matching against multiple\ndifferent hash functions, seeing, hey, do any of these bits match? And it says, oh, yeah, this object may have\nbeen in this filter.",
    "start": "165569",
    "end": "175110"
  },
  {
    "text": "However, there's no false negatives. So if you did put, say, address A into this\nfilter and then matched this filter against",
    "start": "175110",
    "end": "184629"
  },
  {
    "text": "address A, it would always return true. There's no way you can put something into\nthe filter, and then it doesn't show up when",
    "start": "184629",
    "end": "194140"
  },
  {
    "text": "you try to match against it. So this is useful for lots of things.",
    "start": "194140",
    "end": "199349"
  },
  {
    "text": "Bloom filters are definitely not restricted\nto cryptocurrency, Bitcoin, or anything like",
    "start": "199349",
    "end": "204599"
  },
  {
    "text": "that. They're used all the time in various databases,\nall the time in things like that.",
    "start": "204599",
    "end": "210140"
  },
  {
    "text": "The current way they're used in Bitcoin is\nfor SPV filtering.",
    "start": "210140",
    "end": "216260"
  },
  {
    "text": "So we defined SPV, like, months ago. The basic idea is I'm a client. I don't want to download and verify the whole\nblockchain.",
    "start": "216260",
    "end": "223900"
  },
  {
    "text": "I want someone else to do that. I assume the miners are doing the right thing. I assume the rest of the network is doing\nthe right thing.",
    "start": "223900",
    "end": "231410"
  },
  {
    "text": "And I just want to know about my data. So I'm not going to download the whole block. I'm not going to verify all the signatures\nor keep a UTXO set on my own.",
    "start": "231410",
    "end": "239980"
  },
  {
    "text": "I'm just concerned with my UTXOs in my wallet. So what I do-- and this exists today.",
    "start": "239980",
    "end": "247120"
  },
  {
    "text": "You can do this. You make a Bloom filter of all your UTXOs\nand addresses.",
    "start": "247120",
    "end": "252420"
  },
  {
    "text": "So you say, OK, here's all my addresses that\nI'm hoping to receive money on. I've got 20 of them, 30 of them, 100 of them--\nhowever many-- although Bloom filters don't",
    "start": "252420",
    "end": "262210"
  },
  {
    "text": "really work once you have too many. But so the idea is if you have five addresses,\nlet's say, you start a wallet.",
    "start": "262210",
    "end": "268210"
  },
  {
    "text": "You don't have any money. You're pretty sure you don't know of any money\nyet existing.",
    "start": "268210",
    "end": "273379"
  },
  {
    "text": "But you say, OK, I made five addresses. I told these addresses to people. They might have sent me money.",
    "start": "273379",
    "end": "278569"
  },
  {
    "text": "That'd be nice. So you make a Bloom filter of all these addresses,\nright? So let's say you've got, OK, address A-- dot\ndot dot-- A through E. And you make a filter.",
    "start": "278569",
    "end": "291057"
  },
  {
    "text": "OK, so you say I've got my filter F. I then\nsend that filter F to a remote server.",
    "start": "291058",
    "end": "298729"
  },
  {
    "text": "So there's the cloud. There's some Bitcoin full node out here.",
    "start": "298729",
    "end": "304300"
  },
  {
    "text": "It receives filter F. OK, so this got filter\nF. And it knows that this filter F is specific",
    "start": "304300",
    "end": "310659"
  },
  {
    "text": "to me, right? So it sees that, hey, I'm a client.",
    "start": "310659",
    "end": "317589"
  },
  {
    "text": "I'm an SPV client. I connect to a full node, and I say, hey,\nI sent a message that's called load filter.",
    "start": "317589",
    "end": "323069"
  },
  {
    "text": "And I say, hey, load filter, here's my filter\nF. Only send stuff to me that matches this",
    "start": "323069",
    "end": "328639"
  },
  {
    "text": "filter. 99% of all the whole thing-- everything going\non in Bitcoin, I don't care about.",
    "start": "328639",
    "end": "335057"
  },
  {
    "text": "Here's a filter, and only send me messages\nthat match this filter. And so when it sends a transact-- well, they\nsend INV messages, right?",
    "start": "335058",
    "end": "345800"
  },
  {
    "text": "When it sends an INV message with inventory,\nsaying, hey, I found this thing that you might be interested in, normally, a full node to\nanother full node-- so let's say there's communication",
    "start": "345800",
    "end": "355210"
  },
  {
    "text": "between two full nodes, Full2.",
    "start": "355210",
    "end": "360779"
  },
  {
    "text": "These guys will talk to each other about every\ntransaction they see, right? So if they see a transaction, it's valid.",
    "start": "360779",
    "end": "367089"
  },
  {
    "text": "There's nothing wrong with it. They'll just send it to each other to propagate\ntransaction throughout the network, so they can get mined later.",
    "start": "367089",
    "end": "373339"
  },
  {
    "text": "However, if a filter has been loaded, it says,\noh, OK, I will only send you INV messages",
    "start": "373339",
    "end": "379219"
  },
  {
    "text": "that match this filter. So if there's a transaction that doesn't have\nany of these five addresses as an output,",
    "start": "379219",
    "end": "385300"
  },
  {
    "text": "they're just not going to send it to you. Similarly, when a block comes out-- this is\nthe big one.",
    "start": "385300",
    "end": "393289"
  },
  {
    "text": "Normally, blocks get propagated the same. They just send you the block. Here, we do something called a Merkle block.",
    "start": "393289",
    "end": "401649"
  },
  {
    "text": "I don't send you a regular block. I filter everything within the block and send\nyou only the things that match to that filter.",
    "start": "401649",
    "end": "411129"
  },
  {
    "text": "So generally, it gets very small. So the Merkle block might just have one transaction\nin it.",
    "start": "411129",
    "end": "417779"
  },
  {
    "text": "And it has the sort of Merkle proof up to\nthe root. So the server sends only the matching transactions\nin the block, which can drop from a megabyte",
    "start": "417779",
    "end": "426289"
  },
  {
    "text": "to less than a kilobyte. And then the client says, oh, cool. There's a transaction where I received money.",
    "start": "426289",
    "end": "432779"
  },
  {
    "text": "Great. Also, let me update my filter to include this\nnew transaction that I received.",
    "start": "432779",
    "end": "440089"
  },
  {
    "text": "So if that gets spent later, I want to know\nabout it, even if it doesn't send to one of these five addresses, right?",
    "start": "440089",
    "end": "445150"
  },
  {
    "text": "So if you're only matching on addresses, you\ncan only sort of get money. But if you're matching on these UTXOs, you\ncan lose the money as well.",
    "start": "445150",
    "end": "454538"
  },
  {
    "text": "And you don't want to lose money, but you\nsort of want to know when everyone else thinks you lost money.",
    "start": "454539",
    "end": "461319"
  },
  {
    "text": "So this works today. This was implemented 2012-ish. The history behind it was the first Android\nBitcoin wallet.",
    "start": "461319",
    "end": "471169"
  },
  {
    "text": "Andreas Schildbach wrote it, and it didn't\ndo this, right? It just downloaded the whole block and then\nthrew away most of the data and only kept--",
    "start": "471169",
    "end": "480800"
  },
  {
    "text": "it wasn't a full node, and then it didn't\nkeep a UTXO set. But it did download everything.",
    "start": "480800",
    "end": "487789"
  },
  {
    "text": "And then they were saying, OK, this is really\nslow. We want a decentralized way to do this kind\nof thing, where instead of just connecting",
    "start": "487789",
    "end": "494839"
  },
  {
    "text": "to a server-- so the other model I explained,\nagain, weeks ago was, you just have some server.",
    "start": "494839",
    "end": "501888"
  },
  {
    "text": "And you tell it the address and say, hey,\nhere's my address. How much money do I have? And it sends you transactions, and you maintain\nyour wallet that way.",
    "start": "501889",
    "end": "509759"
  },
  {
    "text": "This is nicer because it's decentralized,\nright? Every full node can do this. And by default, if you download Bitcoin 0.16\nor whatever recent versions-- not even recent--",
    "start": "509759",
    "end": "519209"
  },
  {
    "text": "since like 0.7? I don't know. Most of the versions will have this capability,\nwhere if a client says, hey, here's a Bloom",
    "start": "519209",
    "end": "529399"
  },
  {
    "text": "filter. Load it. Your full node will load that filter. And then every block that comes in or every\nblock that's requested, they will match against",
    "start": "529399",
    "end": "537509"
  },
  {
    "text": "the filter. The filter match function call's not too heavy. It involves a bunch of hash functions. It's not too slow, but it's slower than doing\nnothing, right?",
    "start": "537509",
    "end": "545690"
  },
  {
    "text": "It's slower than just sending it directly. OK, so this is nice, right? You can sync the entire chain in way less\ndata and having SPV security.",
    "start": "545690",
    "end": "557490"
  },
  {
    "text": "Problems-- it's really bad for privacy. You're sending a Bloom filter, right? So it's this thing that's created from your\nlist of addresses.",
    "start": "557490",
    "end": "566810"
  },
  {
    "text": "But in practice, it's got about the same security\nas just telling them all your addresses, right?",
    "start": "566810",
    "end": "573310"
  },
  {
    "text": "So it's sort of like, oh, I'm sending a hash\nof my address, instead of my address. Well, yeah, but I know all the addresses in\nexistence on the Bitcoin network.",
    "start": "573310",
    "end": "581100"
  },
  {
    "text": "I can just try to match it, try to hash and\nstuff like that. When you do Bloom filters, there's this sort\nof false positive rate that's sort of a knob",
    "start": "581100",
    "end": "589440"
  },
  {
    "text": "you can twist. And you can say, oh, I'm going to make a Bloom\nfilter where 10% of the time, when you perform",
    "start": "589440",
    "end": "596000"
  },
  {
    "text": "this match filter for any given object, I'm\ngoing to create a filter where 10% of the",
    "start": "596000",
    "end": "602680"
  },
  {
    "text": "time, it'll just return true. So I can dial in a false positive rate. So I can say, OK, I'll make it 1%.",
    "start": "602680",
    "end": "608810"
  },
  {
    "text": "And then when I get these matching transactions\nfrom the full node, yeah, I'll get an extra",
    "start": "608810",
    "end": "617029"
  },
  {
    "text": "few transactions that don't match my filter. Or they match my filter, but they don't actually\nmatch anything I'm looking at.",
    "start": "617029",
    "end": "624160"
  },
  {
    "text": "And that will improve my privacy, right? Because then the full node doesn't see what's--\nhe doesn't know what's truly mine.",
    "start": "624160",
    "end": "632100"
  },
  {
    "text": "In fact, you don't even know what the false\npositive rate is. When you receive a filter, you don't know\nwhat the false positive rate is.",
    "start": "632100",
    "end": "639660"
  },
  {
    "text": "You just see, OK, these things match, and\nyou send them. Another strategy is OK, I'm a SPV client.",
    "start": "639660",
    "end": "648459"
  },
  {
    "text": "I connect to a bunch of full nodes, and I\ncan give different filters to each one.",
    "start": "648459",
    "end": "655540"
  },
  {
    "text": "I think the initial software did this. And because you can sort of put some randomness\ninto your different filters to hope-- why",
    "start": "655540",
    "end": "663089"
  },
  {
    "text": "did they do this? It actually makes it worse. It actually makes it worse because if these\nfull nodes collude-- collaborate-- whatever.",
    "start": "663089",
    "end": "672339"
  },
  {
    "text": "If these full nodes share the information\nof the filters, it makes it easier to determine, to sort of filter out the false positives.",
    "start": "672339",
    "end": "679069"
  },
  {
    "text": "Because they'll have different false positives\nbecause they had a different filter. And so if they collaborate, if they work together,\nthey can say, oh, well, I got some false positive",
    "start": "679069",
    "end": "688570"
  },
  {
    "text": "transactions. I did, too. We can filter out the ones that one of us\nhad as a false positive and not the other,",
    "start": "688570",
    "end": "694990"
  },
  {
    "text": "right? So we can detect the false positives we're\nsending to the client. So privacy is really bad.",
    "start": "694990",
    "end": "701029"
  },
  {
    "text": "There's a paper written I think 2013 or 2014,\nwhere they basically broke the whole privacy",
    "start": "701029",
    "end": "706190"
  },
  {
    "text": "argument for this Bloom filter based SPV. And they said in practice, you can get like\n90 something percent of the addresses and",
    "start": "706190",
    "end": "713759"
  },
  {
    "text": "UTXOs that people are sending for the software. And their recommendations were like, yeah,\nI don't see how you make this work privately.",
    "start": "713759",
    "end": "722540"
  },
  {
    "text": "There's just no privacy here. It's slow for the servers, so when you're\nrunning-- I don't know if you can see.",
    "start": "722540",
    "end": "730470"
  },
  {
    "text": "When you're running a full node-- OK, I should\nclose that. Don't even know what that is.",
    "start": "730470",
    "end": "737579"
  },
  {
    "text": "When you're running a full node, you can see\nhere's all the nodes that are connected to",
    "start": "737579",
    "end": "749269"
  },
  {
    "text": "my full node and running downstairs. Most of them are other full nodes.",
    "start": "749269",
    "end": "755240"
  },
  {
    "text": "Oh, OK, these are not. I don't know what those are. Those are not true. All these 0.9, 0.99s, they're not actually\nnodes at all.",
    "start": "755240",
    "end": "762139"
  },
  {
    "text": "They don't seem to ask for anything. And then some people put their version message. They put an address.",
    "start": "762139",
    "end": "767990"
  },
  {
    "text": "Hopefully, someone will send them lots of\nmoney. It's not going to happen. That's weird.",
    "start": "767990",
    "end": "773800"
  },
  {
    "text": "There's like no SPV-- well, OK, bitcoinj. So that's a Java implementation, which does\nfilter load.",
    "start": "773800",
    "end": "783060"
  },
  {
    "text": "And so we can look-- hm. A fee filter, but no filter load.",
    "start": "783060",
    "end": "794829"
  },
  {
    "text": "Well, that's weird. Someone's sending me lots of different fee\nfilter messages. There's lots of weird stuff going on in the\nBitcoin network.",
    "start": "794829",
    "end": "801699"
  },
  {
    "text": "But I weirdly don't have any SPV filter load\nthings going on right now, which is unusual.",
    "start": "801699",
    "end": "808529"
  },
  {
    "text": "I don't know. It changes a lot, too, based on-- so also,\nyou can sort of track your hourly data usage.",
    "start": "808529",
    "end": "820320"
  },
  {
    "text": "And this server basically is only for-- all\nthis traffic is the clients connected.",
    "start": "820320",
    "end": "825829"
  },
  {
    "text": "You know, Bitcoin. And so I'm doing, like, a gigabyte every hour,\nwhich is a lot for a home connection, but",
    "start": "825829",
    "end": "834389"
  },
  {
    "text": "not too bad for here. But in December, everyone was interested in\nBitcoin. And so you had lots of people downloading\nit, running it.",
    "start": "834389",
    "end": "841329"
  },
  {
    "text": "And it would be something like 10 times this,\nwhere just tons of people were installing it, downloading it, getting a whole blockchain,\nand then probably after losing interest, deleting",
    "start": "841329",
    "end": "850819"
  },
  {
    "text": "it, but whatever. And a lot of SPV clients doing filter loads\ncan slow down your server.",
    "start": "850819",
    "end": "857550"
  },
  {
    "text": "It can take CPU time. Right now, yeah, OK, so 6%, 2%.",
    "start": "857550",
    "end": "864499"
  },
  {
    "text": "It's pretty low CPU usage generally for Bitcoin,\neven with that many-- however many that was--",
    "start": "864499",
    "end": "871100"
  },
  {
    "text": "30 or 40 different other nodes connecting\nand downloading stuff. Basically, this is like receiving transactions,\nverifying the signatures, and sending them",
    "start": "871100",
    "end": "879579"
  },
  {
    "text": "out. And granted-- but this is per core, right? So if I have 2%, that's 2% of a single core.",
    "start": "879580",
    "end": "885790"
  },
  {
    "text": "It's really not much. And then I guess Cryptokernel's only using\n1%, so even less.",
    "start": "885790",
    "end": "892610"
  },
  {
    "text": "So yeah, it's not much, but when you have\na lot of SPV clients, it can start using a",
    "start": "892610",
    "end": "900279"
  },
  {
    "text": "lot of CPU. OK, so how do we improve this?",
    "start": "900279",
    "end": "905569"
  },
  {
    "text": "This is a new-ish idea. It's actually about two years old. And it was kind of interesting. It was just a random anonymous internet person\nposted on the mailing list.",
    "start": "905569",
    "end": "916709"
  },
  {
    "text": "I think his email address was some inappropriate\nswear word or something. Anyway.",
    "start": "916709",
    "end": "922570"
  },
  {
    "text": "But whoever this person was just said, hey,\nwhy don't we do it the other way?",
    "start": "922570",
    "end": "928410"
  },
  {
    "text": "Why don't we do it backwards? And instead of having the client create a\nBloom filter and send it to the full node,",
    "start": "928410",
    "end": "936019"
  },
  {
    "text": "have the full nodes make Bloom filters from\nall the transactions within a block.",
    "start": "936019",
    "end": "942139"
  },
  {
    "text": "And then the client will just ask for that\nfilter. The client can then perform the filter match\nfunction on their own UTXO set.",
    "start": "942139",
    "end": "951540"
  },
  {
    "text": "And then if they do find a match, they request\nthe entire block. Right? So this is a different model.",
    "start": "951540",
    "end": "958370"
  },
  {
    "text": "I don't know. Does it get the idea where, OK, so you're\na client.",
    "start": "958370",
    "end": "964730"
  },
  {
    "text": "All you do is request filters. So you say, filter please. So you have some kind of filter request.",
    "start": "964730",
    "end": "973089"
  },
  {
    "text": "And then the full node just says, OK, for\nevery block in the blockchain, I'm going to",
    "start": "973089",
    "end": "978170"
  },
  {
    "text": "create a filter, right? I take all the objects in the block, which\nare basically all the addresses used in every",
    "start": "978170",
    "end": "986750"
  },
  {
    "text": "transaction, all the UTXOs spent in every\ntransaction. I concatenate that, so there's going to be\n5,000, 10,000-- a lot of these objects.",
    "start": "986750",
    "end": "995190"
  },
  {
    "text": "Put it into a really big Bloom filter, generally\nbigger than the ones used in this method. Because usually, a wallet won't have thousands\nof addresses or thousands of UTXOs.",
    "start": "995190",
    "end": "1005819"
  },
  {
    "text": "It's possible, but in this model, usually,\nyou've got 20, 30, maybe 100.",
    "start": "1005819",
    "end": "1010910"
  },
  {
    "text": "But in this case, you're going to have thousands. Make a larger filter, create the filter, and\nstore it for each block.",
    "start": "1010910",
    "end": "1018459"
  },
  {
    "text": "So maybe it's 20 kilobytes or something. And maybe in this case, they're only like\n1 kilobyte. So you have a filter.",
    "start": "1018459",
    "end": "1024500"
  },
  {
    "text": "And then the node will request these filters\nfor every block. So it's OK, this block, get the filter. Get the filter.",
    "start": "1024500",
    "end": "1030359"
  },
  {
    "text": "And then perform the matching on their own,\nright? So they've got the filter.",
    "start": "1030359",
    "end": "1035520"
  },
  {
    "text": "They see, hey, does this filter match any\nof my addresses? So is there anything in this block that may\nhave paid me or anything in this block where",
    "start": "1035520",
    "end": "1043688"
  },
  {
    "text": "my transactions may have been spent? And if they get a true, they just request\nthe whole block.",
    "start": "1043689",
    "end": "1049559"
  },
  {
    "text": "They just download the whole 1 megabyte block\nor whatever it is. And there may be false positives, right?",
    "start": "1049560",
    "end": "1055070"
  },
  {
    "text": "So they might be downloading the block for\nno reason. They download the whole block, see there's\nnothing of their address.",
    "start": "1055070",
    "end": "1060890"
  },
  {
    "text": "Yeah. AUDIENCE: How does that work if we increase\nthe block size to a ridiculous amount?",
    "start": "1060890",
    "end": "1068492"
  },
  {
    "text": "[INAUDIBLE] TADGE DRYJA: Wait, ridiculous amount block\nsize? Yeah, I guess. AUDIENCE: [INAUDIBLE] TADGE DRYJA: Well, I mean, they're not going\nto actually-- I don't think any of these have",
    "start": "1068492",
    "end": "1078639"
  },
  {
    "text": "actually 32 megabyte blocks and that no one's\nusing them. Even Bitcoin now, right, where the actual\nblock usage has gone down substantially.",
    "start": "1078640",
    "end": "1088309"
  },
  {
    "text": "You've got like-- I don't know-- 500k or something\naverage now? It's low.",
    "start": "1088309",
    "end": "1093649"
  },
  {
    "text": "Occasionally, you have lots of little transactions\nsaturating the mempool and then full blocks",
    "start": "1093649",
    "end": "1098930"
  },
  {
    "text": "for a few hours. But it's gone down, and it's not even at full\nusage. So and Bitcoin cash, yeah, you've got 8 megabyte\nmax size, but--",
    "start": "1098930",
    "end": "1107220"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] TADGE DRYJA: Right, right. And they're going to do 32 megs full sized.",
    "start": "1107220",
    "end": "1112500"
  },
  {
    "text": "But still, the actual blocks are like 10k,\n20k, whatever.",
    "start": "1112500",
    "end": "1117610"
  },
  {
    "text": "I mean, yeah, but if you did have actually\n32 megabyte blocks, a false positive would",
    "start": "1117610",
    "end": "1125480"
  },
  {
    "text": "be a big problem for a light node. Because now you have to download this 32 megabyte\nblock, look through the whole thing.",
    "start": "1125480",
    "end": "1131950"
  },
  {
    "text": "Actually, there was nothing of interest. It was a false positive. OK, try again.",
    "start": "1131950",
    "end": "1139380"
  },
  {
    "text": "But yeah, you can download 32 megs. It's not the end of the world. And if you're only downloading one out of\nevery 100 maybe, if you have a 1% false positive",
    "start": "1139380",
    "end": "1148309"
  },
  {
    "text": "rate, it's not too bad. That's like 32 megs a day or so.",
    "start": "1148310",
    "end": "1153769"
  },
  {
    "text": "But anyway this model is-- and not only that,\nyou can request all the filters, match them,",
    "start": "1153770",
    "end": "1160059"
  },
  {
    "text": "and then download from someone else, the full\nblock, right? You can request a block, download it from\nsomeone else.",
    "start": "1160059",
    "end": "1167260"
  },
  {
    "text": "So this full node, they know you requested\nall the filters. They don't see anything else other than that.",
    "start": "1167260",
    "end": "1173399"
  },
  {
    "text": "And then another full node just sees you requesting\nblocks and thinks nothing of it. Because that's totally normal.",
    "start": "1173399",
    "end": "1179600"
  },
  {
    "text": "This is a lot nicer model for privacy because\nthe full nodes don't learn anything other. At most, they learn you downloaded this block\nand not this other block.",
    "start": "1179600",
    "end": "1188600"
  },
  {
    "text": "So maybe you have transactions in this block,\nbut not this one. But that's a much bigger sort of needle in\na haystack problem, where OK, here are the",
    "start": "1188600",
    "end": "1197580"
  },
  {
    "text": "blocks they used. What are the commonalities between these sets\nof blocks they were downloading?",
    "start": "1197580",
    "end": "1203260"
  },
  {
    "text": "Possible to maybe weed things out, right? If the blocks are small, and there's only\na few transactions, and they download the",
    "start": "1203260",
    "end": "1209390"
  },
  {
    "text": "entire blockchain from a single node, and\nthat node can track, OK, which blocks are being downloaded?",
    "start": "1209390",
    "end": "1214799"
  },
  {
    "text": "What are the common transactions or addresses\nin these? It's possible. But it's a lot better for privacy than the\ncurrent model and a lot better for CPU, right?",
    "start": "1214799",
    "end": "1224899"
  },
  {
    "text": "So privacy-- great. Great improvement. The server has much lower CPU, because it\ncan pre-compute all the filters for every",
    "start": "1224899",
    "end": "1234960"
  },
  {
    "text": "block, right? So as soon as it downloads a block-- or a\nfew seconds later-- there's no rush. Compute a Bloom filter for it, store it on\ndisk-- because it doesn't change-- and then",
    "start": "1234960",
    "end": "1244010"
  },
  {
    "text": "when anyone requests it, you've already got\nit on disk. So you just read it off the disk, send it\nover the network, you're done.",
    "start": "1244010",
    "end": "1250580"
  },
  {
    "text": "The current model where you don't write these\nto disk because they're sort of client specific, so client connects in, sends you a Bloom filter,\nyou have to keep that in RAM, and then match",
    "start": "1250580",
    "end": "1260190"
  },
  {
    "text": "all the things against this specific filter\nfor this specific user. Whereas in this model, you make a filter for\nthe block, save it, you're good.",
    "start": "1260190",
    "end": "1269510"
  },
  {
    "text": "Yes. AUDIENCE: Is the filter for the block [INAUDIBLE]\ngiven you're just sending the addresses and",
    "start": "1269510",
    "end": "1280060"
  },
  {
    "text": "not [INAUDIBLE]? Or is it just less data? It's just not the full block, right?",
    "start": "1280060",
    "end": "1285340"
  },
  {
    "text": "It's just the-- TADGE DRYJA: Yeah. So if it were the addresses and the UTXOs,\nthen it would be really big. It would be-- oh, maybe like 40% of the whole\nblock size.",
    "start": "1285340",
    "end": "1294730"
  },
  {
    "text": "So the idea of the Bloom filter is you squish\nit down. So the Boom filter itself might only be like\n20k.",
    "start": "1294730",
    "end": "1303750"
  },
  {
    "text": "And so yeah, the basic way a Bloom filter\nwill work is you take sort of a bunch of hashes",
    "start": "1303750",
    "end": "1311809"
  },
  {
    "text": "and populate a bit field with them. So the thing is, if you keep adding objects\nto the filter, the filter will eventually",
    "start": "1311809",
    "end": "1320210"
  },
  {
    "text": "just be like FFFF. And everything will match it. So you need to sort of decide how big the\nfilter should be when you start creating and",
    "start": "1320210",
    "end": "1330179"
  },
  {
    "text": "adding objects to it. So with this, you can get it down to about\n20k, and then it'll have a pretty low false",
    "start": "1330179",
    "end": "1337730"
  },
  {
    "text": "positive rate, but not tell you exactly what\nthe addresses and UTXOs were.",
    "start": "1337730",
    "end": "1344450"
  },
  {
    "text": "So it's a nice trade-off to have. Yeah, so I mean, the perfect sort of easiest\nBloom filter would be, here's a list of all",
    "start": "1344450",
    "end": "1353490"
  },
  {
    "text": "the addresses and all the UTXOs-- basically\na block minus the signatures, which is sort",
    "start": "1353490",
    "end": "1359059"
  },
  {
    "text": "of what you can get with segwit, where you\nsay, hey. In segwit, you can say, hey, give me the block\nwithout all the segwit data.",
    "start": "1359059",
    "end": "1366539"
  },
  {
    "text": "Because I'm just looking for things. I don't want to actually validate the signatures.",
    "start": "1366539",
    "end": "1371940"
  },
  {
    "text": "So if you did that with regular-- yeah, it\ndrops it by about 50%.",
    "start": "1371940",
    "end": "1377009"
  },
  {
    "text": "But the Bloom filter drops it substantially\nmore.",
    "start": "1377010",
    "end": "1382080"
  },
  {
    "text": "So if you did this, it'd be better-- lower\nCPU for the server.",
    "start": "1382080",
    "end": "1387299"
  },
  {
    "text": "It's also harder to lie and omit things. So in the current SPV model, if someone is\nrunning a client-- it says, hey, here's my",
    "start": "1387299",
    "end": "1395470"
  },
  {
    "text": "Bloom filter. And the full node responds. The full node can easily just omit things.",
    "start": "1395470",
    "end": "1402710"
  },
  {
    "text": "So there was a transaction that did hit the\nBloom filter and did match. And address A was present in a transaction,\nand the full node just doesn't send it.",
    "start": "1402710",
    "end": "1413740"
  },
  {
    "text": "There's really nothing the client can do to\ndetect that kind of thing, which in general,",
    "start": "1413740",
    "end": "1419940"
  },
  {
    "text": "it's not the end of the world. In normal Bitcoin usage, if you don't hear\nabout a transaction, maybe you'll hear about",
    "start": "1419940",
    "end": "1427440"
  },
  {
    "text": "it eventually. The worst they can do is sort of lie about\nyou-- they say you didn't get paid, but you",
    "start": "1427440",
    "end": "1433018"
  },
  {
    "text": "actually did. Not the worst thing in the world, although\nin Lightning Network, that can change a little",
    "start": "1433019",
    "end": "1438630"
  },
  {
    "text": "bit in that you want to know about the transactions\nthat potentially close the channel and immediately",
    "start": "1438630",
    "end": "1443840"
  },
  {
    "text": "respond to them. So that's more of a security problem with\nLightning.",
    "start": "1443840",
    "end": "1448920"
  },
  {
    "text": "So with this, it could be harder to omit things,\nespecially if you commit the Bloom filter",
    "start": "1448920",
    "end": "1455850"
  },
  {
    "text": "into the Coinbase transaction. So if this committed filter becomes like a\nconsensus rule, and you say, OK, everyone",
    "start": "1455850",
    "end": "1463141"
  },
  {
    "text": "makes a 20 kilobyte Bloom filter. Everyone takes the hash of that and puts it\ninto an op return in the Coinbase transaction",
    "start": "1463141",
    "end": "1470620"
  },
  {
    "text": "the way they do a segwit. Then it's a consensus rule. Then it becomes essentially impossible for\nthe full nodes to lie or omit anything.",
    "start": "1470620",
    "end": "1480289"
  },
  {
    "text": "Because you can say, hey, I've got the headers. Give me the Coinbase transaction and a Merkle\nproof for it.",
    "start": "1480289",
    "end": "1487760"
  },
  {
    "text": "And now I've got the Coinbase transaction. And now, hey, give me that filter that matches\nthis committed hash in the Coinbase transaction.",
    "start": "1487760",
    "end": "1496840"
  },
  {
    "text": "So they would have to do valid proof of work\nto lie or omit. Whereas now, they can just easily omit anything\nthey want.",
    "start": "1496840",
    "end": "1504840"
  },
  {
    "text": "Oh, lying also. So it becomes harder to lie because it's in\na block, right?",
    "start": "1504840",
    "end": "1511549"
  },
  {
    "text": "So this is operating on the block level. The current SPV does not operate on the block\nlevel. So you can get unconfirmed transactions over\nthe wire that match your filter.",
    "start": "1511549",
    "end": "1521360"
  },
  {
    "text": "I think this is a really bad idea. I'm not 100% sure why they put it in.",
    "start": "1521360",
    "end": "1526679"
  },
  {
    "text": "But there's still people who like it. But the whole idea of SPV is that you're verifying\nthe proof of work, right?",
    "start": "1526679",
    "end": "1534450"
  },
  {
    "text": "You're verifying that the miners validated\nthis. And you think, well, the incentives are such\nthat miners don't want to mine invalid things.",
    "start": "1534450",
    "end": "1541049"
  },
  {
    "text": "They won't get paid. So if it's in a block, I'll accept it as OK.",
    "start": "1541049",
    "end": "1547139"
  },
  {
    "text": "For mempool transactions, if it's just an\ninv message for a transaction that's not in a block yet, there's no SPV security at all.",
    "start": "1547139",
    "end": "1554710"
  },
  {
    "text": "And it's trivial to send an invalid transaction\nto an SPV client, this currently.",
    "start": "1554710",
    "end": "1561230"
  },
  {
    "text": "So if you say, hey, here's-- and it's not\nonly is it trivial, but you can also try to figure out what their addresses are, and lie\nto them, and say that, hey, you just got thousands",
    "start": "1561230",
    "end": "1570019"
  },
  {
    "text": "of coins. So that's the current problem with SPV usage.",
    "start": "1570020",
    "end": "1576919"
  },
  {
    "text": "You're basically telling the full load your\naddresses, and you're accepting transactions without proof of work.",
    "start": "1576919",
    "end": "1582149"
  },
  {
    "text": "So the full load can say, hey, here's a transaction\nthat sends you 5,000 coins to an address that",
    "start": "1582150",
    "end": "1588020"
  },
  {
    "text": "I think you have. Because I tried to figure out your address\nfrom your filter. And it's got an input that doesn't actually\nexist, right?",
    "start": "1588020",
    "end": "1594889"
  },
  {
    "text": "So I'm just saying I'm spending 5,000 coins\nfrom here. And the from part isn't actually a thing.",
    "start": "1594889",
    "end": "1600890"
  },
  {
    "text": "But since you're an SPV node, you don't know\nthat. So there's like a-- let's see. Lie to SPV is like a branch on Bitcoin [INAUDIBLE].",
    "start": "1600890",
    "end": "1614410"
  },
  {
    "text": "OK, yeah.",
    "start": "1614410",
    "end": "1619510"
  },
  {
    "text": "So there's a branch that Peter Todd made called\nLie to SPV.",
    "start": "1619510",
    "end": "1624760"
  },
  {
    "text": "I don't know.",
    "start": "1624760",
    "end": "1630590"
  },
  {
    "text": "Quick and dirty hack to lie to SPV wallets. They can't verify amounts, so yeah.",
    "start": "1630590",
    "end": "1638279"
  },
  {
    "text": "So you can just sort of detect-- well, if\nyou want to look at it. You can detect their addresses.",
    "start": "1638280",
    "end": "1644460"
  },
  {
    "text": "And then I think that one just sort of opportunistically,\nif it finds a match, just multiplies the amount",
    "start": "1644460",
    "end": "1649779"
  },
  {
    "text": "that they're receiving by, like, 100. And there's no way that they can validate\nthat since it's in mempool.",
    "start": "1649780",
    "end": "1655980"
  },
  {
    "text": "So this also makes it on the block level,\nwhich is what SPV really should be. So that's nice.",
    "start": "1655980",
    "end": "1662700"
  },
  {
    "text": "Downsides-- mainly that it's going to be higher\nnetwork traffic for the client, right? So even at low false positive rates, the entire\nrest of the block is essentially a false positive,",
    "start": "1662700",
    "end": "1673240"
  },
  {
    "text": "right? So they're like, hey, there's one transaction\nin this block I want to get. I have to download the whole block to get\nit.",
    "start": "1673240",
    "end": "1679049"
  },
  {
    "text": "So yeah, more network traffic for the client,\nwhich is a downside, but it helps with privacy. So there is current development.",
    "start": "1679049",
    "end": "1686190"
  },
  {
    "text": "Lighting Labs-- basically [INAUDIBLE] working\non-- it's called neutrino. It's a variant of this.",
    "start": "1686190",
    "end": "1692350"
  },
  {
    "text": "So, and then hopefully, something like this\nwill eventually get into Bitcoin Core itself",
    "start": "1692350",
    "end": "1698888"
  },
  {
    "text": "and replace the current server side Bloom\nfilter code.",
    "start": "1698889",
    "end": "1703890"
  },
  {
    "text": "Hopefully, but something to work on. Any questions about the Bloom filter stuff?",
    "start": "1703890",
    "end": "1711380"
  },
  {
    "text": "Cool, OK. OK, other issue, sharding.",
    "start": "1711380",
    "end": "1718049"
  },
  {
    "text": "So this is mainly being worked on in the context\nof Ethereum. And it's sort of their sort of holy grail\nof scalability.",
    "start": "1718049",
    "end": "1725960"
  },
  {
    "text": "It's common in the database world, where you've\ngot d data objects, n servers.",
    "start": "1725960",
    "end": "1731610"
  },
  {
    "text": "So in the case of Bitcoin or these blockchains,\nyou just store d times n, right? Every node stores all data.",
    "start": "1731610",
    "end": "1738360"
  },
  {
    "text": "Instead, store something closer to d itself\nand shard the data over all the servers, so that each server holds like d divided by n,\nright?",
    "start": "1738360",
    "end": "1746460"
  },
  {
    "text": "So if you have 10 servers and a gigabyte,\nhave them each store 100 megs. And then you still got all the data.",
    "start": "1746460",
    "end": "1752870"
  },
  {
    "text": "Of course, if they actually store exactly\nd over n-- and you need to coordinate it so",
    "start": "1752870",
    "end": "1758080"
  },
  {
    "text": "they all store their own little shard-- and\nthen if any single node goes down, well, you're",
    "start": "1758080",
    "end": "1764440"
  },
  {
    "text": "stuck. So this is sort of the limit. And there's no redundancy there.",
    "start": "1764440",
    "end": "1773299"
  },
  {
    "text": "But you can have different redundancy ratings. So you could say, OK, well, any-- you could\nhave [INAUDIBLE] you're coding.",
    "start": "1773299",
    "end": "1778740"
  },
  {
    "text": "So if any five nodes or any 20% of the nodes\ndisappear, we're still OK. So in the database world, this is a well studied\nproblem.",
    "start": "1778740",
    "end": "1788408"
  },
  {
    "text": "But in the context of Bitcoin, Ethereum, and\nblockchains, it's more difficult.",
    "start": "1788409",
    "end": "1793700"
  },
  {
    "text": "It's difficult here because you're in this\nadversarial environment, where people are trying to break your system at all times.",
    "start": "1793700",
    "end": "1801590"
  },
  {
    "text": "People want to create transactions that are\ninvalid. Because that can be worth a lot of money.",
    "start": "1801590",
    "end": "1808648"
  },
  {
    "text": "I can say, hey, you don't know about this\nshard, but I'm telling you that on this shard,",
    "start": "1808649",
    "end": "1815880"
  },
  {
    "text": "I have a lot of money. And I'm sending it to you, so give me your\nhouse or whatever.",
    "start": "1815880",
    "end": "1821169"
  },
  {
    "text": "So the idea is to split a single UTXO set\ninto multiple smaller sets, and that part",
    "start": "1821169",
    "end": "1828679"
  },
  {
    "text": "is OK. But you need communication between the shards,\nright? So you could say, OK, well, making sort of\na bunch of different UTXO sets, each node",
    "start": "1828679",
    "end": "1838100"
  },
  {
    "text": "can choose their own UTXO set that they're\nkeeping track of. And then you have some kind of merge mining\nbetween the UTXO sets, but you need swaps",
    "start": "1838100",
    "end": "1845759"
  },
  {
    "text": "between the shards. It's kind of an interesting thing to think\nof.",
    "start": "1845759",
    "end": "1851649"
  },
  {
    "text": "We already have multiple UTXO sets, right? So as of this morning, coinmarketcap.com tracks\n1,614 different currencies, 10,000 markets.",
    "start": "1851650",
    "end": "1862360"
  },
  {
    "text": "There's supposedly $434 billion going around. Is this sharding, right?",
    "start": "1862360",
    "end": "1870200"
  },
  {
    "text": "And it's sort of a joke, but in a real sense,\nit has taken scalability pressure off of Bitcoin",
    "start": "1870200",
    "end": "1877789"
  },
  {
    "text": "and off of any individual currency because\nthere's so many of them.",
    "start": "1877790",
    "end": "1883009"
  },
  {
    "text": "So if you didn't have Dogecoin, maybe there\nwill be more Bitcoin transactions. AUDIENCE: And how does this play into Bitcoins\nthat are just running on Ether?",
    "start": "1883009",
    "end": "1890880"
  },
  {
    "text": "TADGE DRYJA: Right, so in the case of ERC-20\nor ERC-721, it actually is worse.",
    "start": "1890880",
    "end": "1897570"
  },
  {
    "text": "Because now you've got sort of multiple UTXO\nsets all being managed by a single UTXO set.",
    "start": "1897570",
    "end": "1906950"
  },
  {
    "text": "So if you want to keep track of how many--\nI don't know. What's an ECR-20 token?",
    "start": "1906950",
    "end": "1913158"
  },
  {
    "text": "If you want to keep track of how many Pied\nPiper coins there are, you need to download",
    "start": "1913159",
    "end": "1918379"
  },
  {
    "text": "the entire Ethereum blockchain. So that's sort of the opposite of sharding\nin that now any single UTXO set you want to",
    "start": "1918379",
    "end": "1925490"
  },
  {
    "text": "keep track of, you need to keep track of all\nof them. However, in this case, if I want to keep track\nof my Bitcoin UTXO set, I don't need to download",
    "start": "1925490",
    "end": "1932649"
  },
  {
    "text": "Dogecoin. So that's great. And if people want to swap between Dogecoin\nand Bitcoin, they can do so-- well, Dogecoin",
    "start": "1932649",
    "end": "1939500"
  },
  {
    "text": "doesn't have segwit support, right? So it's a little harder. But Vertcoin, Litecoin-- a lot of different\ncoins have fairly easy swaps.",
    "start": "1939500",
    "end": "1948620"
  },
  {
    "text": "But it's more than just swaps. We need actual fungibility between the shards.",
    "start": "1948620",
    "end": "1955559"
  },
  {
    "text": "Because if I can say, oh, I'm going to use\nLitecoin, and I can just swap to Bitcoin whenever",
    "start": "1955559",
    "end": "1962049"
  },
  {
    "text": "I need to pay someone who accepts Bitcoin,\nright, maybe. But maybe Litecoin drops in value 20% with\nrespect to Bitcoin.",
    "start": "1962049",
    "end": "1970250"
  },
  {
    "text": "And then I tried to pay. And this is sort of getting ahead of the real\nuse cases of these things.",
    "start": "1970250",
    "end": "1977289"
  },
  {
    "text": "Because well, Bitcoin also drops 20% randomly\nagainst whatever asset you're trying to buy.",
    "start": "1977289",
    "end": "1984879"
  },
  {
    "text": "And so but Bitcoin does tend to be a bit more\nstable than most of the smaller market cap coins.",
    "start": "1984880",
    "end": "1990720"
  },
  {
    "text": "I mean, you can sort of think that generally,\nif you have a bigger market capitalization,",
    "start": "1990720",
    "end": "1995789"
  },
  {
    "text": "you're going to tend to be less volatile. And we've seen that in Bitcoin, where it still\nseems ridiculously volatile, right?",
    "start": "1995789",
    "end": "2004799"
  },
  {
    "text": "It's gone down 50% since January. And most currencies in the developed world\ndon't do that.",
    "start": "2004799",
    "end": "2012419"
  },
  {
    "text": "But if you actually compare it to in 2011,\nit dropped, like, 95% in a month or two. Yeah.",
    "start": "2012419",
    "end": "2018200"
  },
  {
    "text": "AUDIENCE: It's more likely to be liquid supply\n[INAUDIBLE] TADGE DRYJA: Yeah, so sometimes, there is\na currency that has these really inflated",
    "start": "2018200",
    "end": "2030278"
  },
  {
    "text": "market caps. So you'll see one where someone makes a coin\nand says, OK, I'm making a million coins.",
    "start": "2030279",
    "end": "2037990"
  },
  {
    "text": "And I'll sell you one for $100. And really, I still have all of the coins,\nand one other person has one of them.",
    "start": "2037990",
    "end": "2045580"
  },
  {
    "text": "But we can sort of do the math and get a market\ncap of $100 million that way. So a lot of the coins do that to sort of inflate.",
    "start": "2045580",
    "end": "2052360"
  },
  {
    "text": "Because a coin market cap is literally a ranking. And it even says rank.",
    "start": "2052360",
    "end": "2060369"
  },
  {
    "text": "So if you click EOS, it'll say rank. Where does it say there?",
    "start": "2060370",
    "end": "2065989"
  },
  {
    "text": "Yeah, rank five. So it's the fifth best, presumably. And yeah, to what extent-- how many actual\npeople hold these things?",
    "start": "2065989",
    "end": "2075379"
  },
  {
    "text": "They just sort of made them up.",
    "start": "2075380",
    "end": "2081388"
  },
  {
    "text": "But there's all sorts of problems with this. But the idea is, if you really want sharding,\nyou want the swaps between the shards to not",
    "start": "2081389",
    "end": "2087839"
  },
  {
    "text": "really have counter parties and to maintain\nthe same value. You want fungibility between the shards, so\nthat you can quickly and easily say, OK, well,",
    "start": "2087840",
    "end": "2096730"
  },
  {
    "text": "I've got something on shard A. I'm going to\npay someone who's using shard B. And I don't want any friction.",
    "start": "2096730",
    "end": "2102620"
  },
  {
    "text": "I don't want any exchange between there. So this is hard.",
    "start": "2102620",
    "end": "2108810"
  },
  {
    "text": "There's a lot of cool research going on here. And if it works, it's a real scalability improvement.",
    "start": "2108810",
    "end": "2114790"
  },
  {
    "text": "This is sort of the holy grail. I don't really see much in-- in Bitcoin, they're\nsort of like side chains.",
    "start": "2114790",
    "end": "2121330"
  },
  {
    "text": "But those weren't really talked about as a\nscalability improvement. And it's mostly the Ethereum crowd that are\nlike, this is our real sort of holy grail",
    "start": "2121330",
    "end": "2128950"
  },
  {
    "text": "for scalability. So it's interesting to look at. I haven't kept up. I've read a little bit about their most recent\nsharding ideas.",
    "start": "2128950",
    "end": "2136500"
  },
  {
    "text": "So it's cool if it works. But there's a lot of sort of different assumptions\nthat go in.",
    "start": "2136500",
    "end": "2141600"
  },
  {
    "text": "Yeah. AUDIENCE: What are some of the current plans\nto do sharding?",
    "start": "2141600",
    "end": "2147360"
  },
  {
    "text": "TADGE DRYJA: They sort of like-- a lot of\nthem hinge on fraud proofs. So the idea is, you've got, say, five different\nchains going along.",
    "start": "2147360",
    "end": "2154099"
  },
  {
    "text": "And you don't validate the other four. You say I'm going to only validate this one. There's four others going on.",
    "start": "2154100",
    "end": "2160380"
  },
  {
    "text": "And if, in my chain, something bad happens,\nlike a transaction with an invalid signature gets confirmed, or transaction has more coins\ncoming out than going in-- something like",
    "start": "2160380",
    "end": "2171370"
  },
  {
    "text": "that-- you provide a small fraud proof. You provide a proof that says, OK, you don't\nneed to know everything that's going on in",
    "start": "2171370",
    "end": "2178420"
  },
  {
    "text": "this chain. But I'll provide enough data to convince you\nthat this specific transaction is broken.",
    "start": "2178420",
    "end": "2185630"
  },
  {
    "text": "And then I try to broadcast to the other people\nin those other four subchains. And then they know, OK, something's going\non wrong here.",
    "start": "2185630",
    "end": "2193010"
  },
  {
    "text": "Let's freeze-- let's not accept any cross\nshard swaps from that one. And then the other-- this chain will have\nto reorg.",
    "start": "2193010",
    "end": "2202170"
  },
  {
    "text": "So the idea is as long as you have-- and it\nsort of makes sense. As long as you have some number of people\nchecking it that can then broadcast it between",
    "start": "2202170",
    "end": "2209660"
  },
  {
    "text": "the different shards, you can assume that\nthey're doing OK. Yeah. AUDIENCE: Problems temporarily arise from\n[INAUDIBLE]. So you'll have a situation where [INAUDIBLE].",
    "start": "2209660",
    "end": "2221430"
  },
  {
    "text": "And then you wait two days, and then the transaction\n[INAUDIBLE] which relies on data from two",
    "start": "2221430",
    "end": "2239481"
  },
  {
    "text": "years ago for that shard. All of those shards have disappeared. So you have a choice. Do you do it to your real or just accept that\nthat money is gone? TADGE DRYJA: Yeah. Or just accept that, oh, well, it's two years\nago.",
    "start": "2239481",
    "end": "2245481"
  },
  {
    "text": "So I'll assume it's OK. AUDIENCE: Yeah. TADGE DRYJA: Yeah. Which is probably more dangerous. Yeah, so sort of availability and liveness\nare other issues here, where if in Bitcoin or Ethereum-- well, it's more of an issue\nin Ethereum.",
    "start": "2245481",
    "end": "2253410"
  },
  {
    "text": "In Bitcoin, there's a lot of copies of the\nfull set. So if you're not sure about something, you\ncan pretty easily get the entire blockchain,",
    "start": "2253410",
    "end": "2261270"
  },
  {
    "text": "even though it's like 180 gigs, and go through\nit. There's so many copies of it out there. In Ethereum, a little bit less so.",
    "start": "2261270",
    "end": "2268270"
  },
  {
    "text": "Well, there's more full nodes. But full is sort of redefined. And so it may be harder to get the full thing.",
    "start": "2268270",
    "end": "2273870"
  },
  {
    "text": "And in the case of sharding, if you divide\nit too finally, it may be that you lose data,",
    "start": "2273870",
    "end": "2279780"
  },
  {
    "text": "and no one has it. And then you're in real trouble. OK, so that's sharding.",
    "start": "2279780",
    "end": "2287020"
  },
  {
    "text": "OK, accumulators-- this is something I'm actually\nlooking at. I'm not going to go into the details of what\nI'm working on, but accumulators in general.",
    "start": "2287020",
    "end": "2297519"
  },
  {
    "text": "This is a cool-- so accumulators, as I will\ndescribe, are nothing new.",
    "start": "2297520",
    "end": "2302950"
  },
  {
    "text": "But if you read the papers-- so one of the\nfirst papers was called One Way Accumulators in, like, '93.",
    "start": "2302950",
    "end": "2308400"
  },
  {
    "text": "And if you read the paper, a lot of the words\njump out. It's like, hey, this might be useful for Bitcoin.",
    "start": "2308400",
    "end": "2313530"
  },
  {
    "text": "It's like, set membership, and timestamping,\nand signature aggregate. It's got a lot of stuff in there that's like,\nhey, this could be useful.",
    "start": "2313530",
    "end": "2321390"
  },
  {
    "text": "So an accumulator is basically a cryptographic\nset.",
    "start": "2321390",
    "end": "2326900"
  },
  {
    "text": "And there's some set operations that you can\ndo and then provide proofs. So, the simplest-- well, not even the simplest.",
    "start": "2326900",
    "end": "2334930"
  },
  {
    "text": "The simplest would just be add and prove. But sometimes you can add. Sometimes you can remove.",
    "start": "2334930",
    "end": "2339940"
  },
  {
    "text": "Sometimes you can prove something's in there. Sometimes you can prove something's not in\nthere. And if you can do all four, that's even better.",
    "start": "2339940",
    "end": "2346490"
  },
  {
    "text": "So the idea is, you take an accumulator. And you add an object to it. And in general, objects are going to be strings\nof bytes or just numbers, right?",
    "start": "2346490",
    "end": "2355500"
  },
  {
    "text": "And then it spits out a new accumulator. Essentially, it modifies the accumulator in\nplace.",
    "start": "2355500",
    "end": "2360690"
  },
  {
    "text": "So if you delete-- you say OK, I've got an\naccumulator. And I want to delete this object. Well, it'll modify in place and return a different\naccumulator.",
    "start": "2360690",
    "end": "2369170"
  },
  {
    "text": "And then maybe I want to prove that this object\nis in this accumulator. And it will return a Boolean.",
    "start": "2369170",
    "end": "2374790"
  },
  {
    "text": "Like, yep, that worked, or no, it didn't. So the simplest example, which I think is\nkind of fun, composite numbers.",
    "start": "2374790",
    "end": "2383339"
  },
  {
    "text": "So accumulate prime numbers. So to add, multiply.",
    "start": "2383340",
    "end": "2388790"
  },
  {
    "text": "To delete, divide. So really, if you're going to do this, you\nstart with 1.",
    "start": "2388790",
    "end": "2395510"
  },
  {
    "text": "1 is not a prime, I guess, but whatever. So let's say you've got-- so yeah.",
    "start": "2395510",
    "end": "2402440"
  },
  {
    "text": "1 is not a prime, so that works. So you cannot prove any prime exists within\nthat accumulator.",
    "start": "2402440",
    "end": "2407650"
  },
  {
    "text": "Anyway, but let's say you start with 1, and\nthen you added 3 to the accumulator. So you multiplied by 3, and you get 3.",
    "start": "2407650",
    "end": "2412900"
  },
  {
    "text": "Now I want to add the number 5 to the accumulator. So I multiply by 5. I get 15.",
    "start": "2412900",
    "end": "2417940"
  },
  {
    "text": "And now I want to add 7 to this accumulator. So I've got my accumulator, which is 15.",
    "start": "2417940",
    "end": "2423860"
  },
  {
    "text": "I add the number 7 into it, and I get 105,\nright? I just multiply by 7.",
    "start": "2423860",
    "end": "2428910"
  },
  {
    "text": "I get 105. Wait, is it called fundamental theorem of\narithmetic?",
    "start": "2428910",
    "end": "2433940"
  },
  {
    "text": "I think that's what it's called, where everything's\na product of primes. It's got some cool name.",
    "start": "2433940",
    "end": "2440010"
  },
  {
    "text": "So everything's a product of primes. And everything has a unique factorization.",
    "start": "2440010",
    "end": "2445060"
  },
  {
    "text": "So 105 is 3 times 5 times 7, right? There's no other ways around it.",
    "start": "2445060",
    "end": "2454359"
  },
  {
    "text": "And if you want to delete, you can say, OK,\nwell, I'm going to delete the number 5 from this accumulator.",
    "start": "2454360",
    "end": "2460280"
  },
  {
    "text": "Just divide. Now I get 21. And then I want to prove 7 is in there. So I can say, hey, 7 is in this accumulator.",
    "start": "2460280",
    "end": "2467250"
  },
  {
    "text": "It was added, but not deleted. And I can do that, right? I tried to divide 21 by 7, and it worked.",
    "start": "2467250",
    "end": "2473299"
  },
  {
    "text": "I want to divide, and I want to make sure\nthere's no remainder. I want to see that it divides evenly. So I get a true.",
    "start": "2473300",
    "end": "2479410"
  },
  {
    "text": "Yep, if I divide 21 by 7, I get 3. 3 is a natural number.",
    "start": "2479410",
    "end": "2484550"
  },
  {
    "text": "It works. So this is kind of cool.",
    "start": "2484550",
    "end": "2489600"
  },
  {
    "text": "It is not really [INAUDIBLE]. Oh, but this works even if you do modulo.",
    "start": "2489600",
    "end": "2495290"
  },
  {
    "text": "So you could do modulo some big prime and\nhave just formality based accumulators.",
    "start": "2495290",
    "end": "2500970"
  },
  {
    "text": "So anyway, you get the idea, right? I think in this case, you can also prove things\nare not in there.",
    "start": "2500970",
    "end": "2508660"
  },
  {
    "text": "But this is limited to prime numbers. Anyway, but the idea is, keep adding things\nto it, removing things from it, and proving that things are in it.",
    "start": "2508660",
    "end": "2515690"
  },
  {
    "text": "So there's RSA accumulators, which are some\nof the most well-known. And that's you've got some RSA number, which\nis basically a product of two large primes.",
    "start": "2515690",
    "end": "2525260"
  },
  {
    "text": "And the accumulator itself is of constant\nsize. And the proofs are also of constant size.",
    "start": "2525260",
    "end": "2531440"
  },
  {
    "text": "So we call this a proof. You're just giving the number itself in this\ncase.",
    "start": "2531440",
    "end": "2537770"
  },
  {
    "text": "So it's efficient, but the RSA accumulators\nuse trusted setup.",
    "start": "2537770",
    "end": "2544170"
  },
  {
    "text": "So the idea is you need to find some composite\nnumber n, which is p times q, where p and",
    "start": "2544170",
    "end": "2549609"
  },
  {
    "text": "q are prime, where nobody knows p and q. Or nobody knows or you trust that the person\nwho does know p and q not to screw around",
    "start": "2549610",
    "end": "2557220"
  },
  {
    "text": "with the accumulator. Because the person who-- if knowledge of p--\nI think it's actually knowledge of p or q--",
    "start": "2557220",
    "end": "2563990"
  },
  {
    "text": "will let you create proofs that, hey, this\nobject is in the accumulator when really,",
    "start": "2563990",
    "end": "2570050"
  },
  {
    "text": "it isn't. So that's not so much fun for Bitcoin.",
    "start": "2570050",
    "end": "2575500"
  },
  {
    "text": "If you need trusted setup, people don't really\nlike that. There's all these other accumulator assay\nideas.",
    "start": "2575500",
    "end": "2581870"
  },
  {
    "text": "Some are one way where you can't delete. You can add things to the accumulator, but\nthere's no way to remove it.",
    "start": "2581870",
    "end": "2588380"
  },
  {
    "text": "Sometimes you can batch things, where, OK,\nif I want-- so you can see in the composite number accumulator, you could batch things.",
    "start": "2588380",
    "end": "2594830"
  },
  {
    "text": "Where if I add 105 to the accumulator, I'm\nperforming one operation that essentially",
    "start": "2594830",
    "end": "2600490"
  },
  {
    "text": "adds three objects, right? 3, 5, and 7. Some can be batched like that, some cannot.",
    "start": "2600490",
    "end": "2607420"
  },
  {
    "text": "Some have trusted setup, some don't. So there's different tradeoffs for all these\ndifferent use cases.",
    "start": "2607420",
    "end": "2613570"
  },
  {
    "text": "And in the case of Bitcoin, the idea of an\naccumulator would be put the UTXO set in it,",
    "start": "2613570",
    "end": "2618740"
  },
  {
    "text": "or put the STXO. Like, spent the transaction outputs into it.",
    "start": "2618740",
    "end": "2624280"
  },
  {
    "text": "And then prove, in the case of UTXOs, prove\nthat it's in the accumulator.",
    "start": "2624280",
    "end": "2629650"
  },
  {
    "text": "Or in the case of STXOs, prove that it's no\nlonger in the accumulator. Right? Provided proof of non-inclusion, that, hey,\nit's not in this STXO set.",
    "start": "2629650",
    "end": "2638750"
  },
  {
    "text": "So, well, with the STXO inclusion-- so let's\nsay you did it that way. You'd have headers, and then you've got this\nSTXO accumulator.",
    "start": "2638750",
    "end": "2650740"
  },
  {
    "text": "And what you can do there is say I've got\na transaction.",
    "start": "2650740",
    "end": "2657950"
  },
  {
    "text": "It's got some inputs. I prove that this input exists in the headers,\nright?",
    "start": "2657950",
    "end": "2663560"
  },
  {
    "text": "I provide you an SPV proof. So I say, OK, at some point, this was created,\nright?",
    "start": "2663560",
    "end": "2669279"
  },
  {
    "text": "This input. Maybe a year ago, I showed you, OK, there\nis this header. Here's a Merkle proof that this was in a block.",
    "start": "2669280",
    "end": "2675830"
  },
  {
    "text": "So this exists. Then I also prove somehow that it doesn't\nexist in here, right?",
    "start": "2675830",
    "end": "2681490"
  },
  {
    "text": "It exists, but it was never spent. So now you can accept that, oh, OK, he gave\nme an SPV proof.",
    "start": "2681490",
    "end": "2688069"
  },
  {
    "text": "He gave me a non-inclusion to the STXO set\nproof. So I know this transaction, this input still\nexists and can be spent.",
    "start": "2688070",
    "end": "2698190"
  },
  {
    "text": "So what this would do, if you get it working,\nyou don't need to store the UTXOs anymore.",
    "start": "2698190",
    "end": "2703599"
  },
  {
    "text": "You just store the accumulator, and then everyone\nprovides proofs that, hey, I've got these coins.",
    "start": "2703600",
    "end": "2709470"
  },
  {
    "text": "But so right now, if you store the UTXO set,\nit's a couple of gigabytes-- 3 or 4 gigs. And when someone sends a transaction, you\njust look in your UTXO set, right?",
    "start": "2709470",
    "end": "2722000"
  },
  {
    "text": "So you see this input. You say, hey, does that exist in my UTXO set? OK, it does.",
    "start": "2722000",
    "end": "2727080"
  },
  {
    "text": "Cool. We'll now verify the signature, verify everything\nelse about the transaction. If it doesn't exist in my UTXO set, I'm like,\nhey, you're trying to spend something that",
    "start": "2727080",
    "end": "2734390"
  },
  {
    "text": "isn't there. So what would be cool is if you got rid of\nthe UTXO set and only used an accumulator.",
    "start": "2734390",
    "end": "2742359"
  },
  {
    "text": "Because the accumulators are constant size. So even if the UTXO set is 20 gigabytes, well,\nI've got this 10 kilobyte accumulator thing",
    "start": "2742360",
    "end": "2751849"
  },
  {
    "text": "on my hard drive. And I just modify that in place. And now I don't need to store a bazillion\ngigabytes.",
    "start": "2751850",
    "end": "2759090"
  },
  {
    "text": "And I basically can have the same security\nas a full node.",
    "start": "2759090",
    "end": "2764120"
  },
  {
    "text": "I'm still a full node, but I just don't store\nthe UTXO set. I just require either SPV proofs or STXOs--\ndifferent proofs from the people trying to",
    "start": "2764120",
    "end": "2773950"
  },
  {
    "text": "spend the transactions. So this is really cool. Constant size, the proofs are small.",
    "start": "2773950",
    "end": "2779430"
  },
  {
    "text": "Sometimes the proofs are really small. And then the wallets track the proofs. So some questions.",
    "start": "2779430",
    "end": "2785359"
  },
  {
    "text": "Proofs can be like constant size, or sometimes\nthey're log n. If the proofs are o of n, then it's not useful,\nright?",
    "start": "2785360",
    "end": "2795470"
  },
  {
    "text": "Because you might as well store the UTXO set\nat that point. Also, what is n? Is it the number of transactions, blocks?",
    "start": "2795470",
    "end": "2801869"
  },
  {
    "text": "Can you aggregate these operations? So there's a bunch of questions there.",
    "start": "2801870",
    "end": "2806930"
  },
  {
    "text": "Another really big problem-- so I was talking\nto Peter Wool, who's sort of one of the premier",
    "start": "2806930",
    "end": "2812170"
  },
  {
    "text": "researchers on Bitcoin. He had been talking to people at Stanford\nabout a lattice based accumulator that did",
    "start": "2812170",
    "end": "2818390"
  },
  {
    "text": "not need trusted setup. And he was very excited about it because it\nwas like, hey, there's no trusted setup.",
    "start": "2818390",
    "end": "2823570"
  },
  {
    "text": "You have constant size proofs. The accumulator itself is pretty small. CPU wise, it seems doable.",
    "start": "2823570",
    "end": "2829900"
  },
  {
    "text": "The thing that sort of killed it was you couldn't\nbatch operations that accumulated.",
    "start": "2829900",
    "end": "2837299"
  },
  {
    "text": "And the other thing is we need some kind of\nbridge node. So the idea is, normal transactions, right?",
    "start": "2837300",
    "end": "2844040"
  },
  {
    "text": "They just say, here's my input. I've got a couple inputs. I've got a couple outputs.",
    "start": "2844040",
    "end": "2850369"
  },
  {
    "text": "I don't provide any proofs or anything. I just point to what I'm spending. And you look in your UTXO set and see if it's\nthere.",
    "start": "2850370",
    "end": "2858170"
  },
  {
    "text": "With this new idea with accumulators, you're\ngoing to have to stick proofs on. So really, it's an extra data structure, probably\nper input.",
    "start": "2858170",
    "end": "2867150"
  },
  {
    "text": "So you say, hey, I'm a node. I run an accumulator. I don't keep the whole set.",
    "start": "2867150",
    "end": "2873640"
  },
  {
    "text": "So for all your inputs, please provide proofs.",
    "start": "2873640",
    "end": "2878650"
  },
  {
    "text": "And wallets can maintain these proofs and\nattach them to their transactions.",
    "start": "2878650",
    "end": "2885609"
  },
  {
    "text": "And then the nodes will verify them. However, right now, most wallets don't have\nthese proofs-- have no idea that this is a",
    "start": "2885610",
    "end": "2891690"
  },
  {
    "text": "thing, right? So if you're the first node to do this and\nsay, hey, I'm getting rid of my UTXO set.",
    "start": "2891690",
    "end": "2897329"
  },
  {
    "text": "I'm only going to verify proofs that these\nUTXOs exist.",
    "start": "2897330",
    "end": "2902570"
  },
  {
    "text": "Most of the wallets won't provide those proofs. And so as a new node, say, hey, I got rid\nof my UTXO set, but no one's giving you proofs.",
    "start": "2902570",
    "end": "2908760"
  },
  {
    "text": "OK, I'm just stuck, right? I see a block come out. I can't validate it. So you're going to need some kind of transition,\nright?",
    "start": "2908760",
    "end": "2915710"
  },
  {
    "text": "If you started from scratch and say, OK, the\nresponsibility of every wallet is not just keep your private keys and keep track of what\nyour UTXO is, it's also to keep track of a",
    "start": "2915710",
    "end": "2925890"
  },
  {
    "text": "proof. So that when you want to spend it, you give\nit to someone else. If you started that way, great.",
    "start": "2925890",
    "end": "2932380"
  },
  {
    "text": "But if you want to transition, what you're\nkind of going to need is a bridge node. And the idea of a bridge node is you've got--\nso here's an accumulator node, where it requires",
    "start": "2932380",
    "end": "2945460"
  },
  {
    "text": "proofs. Here's a old node that just has regular UTXOs.",
    "start": "2945460",
    "end": "2950760"
  },
  {
    "text": "So when the old node sends a transaction,\nthis gives TX proof, right?",
    "start": "2950760",
    "end": "2957460"
  },
  {
    "text": "So this basically has proofs for everything,\nlike all proofs.",
    "start": "2957460",
    "end": "2963070"
  },
  {
    "text": "So the bridge node can provide proofs.",
    "start": "2963070",
    "end": "2968880"
  },
  {
    "text": "You'll need one bridge node, right? So if these accumulator nodes talk to each\nother, they can send the proofs along to each",
    "start": "2968880",
    "end": "2976560"
  },
  {
    "text": "other and stuff like that. The old nodes cannot send proofs because they're\nnot aware of it in their software.",
    "start": "2976560",
    "end": "2982330"
  },
  {
    "text": "But if you have the new nodes, you can say,\nOK, well, when I receive a transaction, I verify the proofs. I also keep the proofs and give them to other\npeers who want to verify them.",
    "start": "2982330",
    "end": "2992230"
  },
  {
    "text": "But you need some kind of bridge between these\ntwo networks. Yeah. AUDIENCE: You would just keep that running\nuntil everyone switches?",
    "start": "2992230",
    "end": "3000070"
  },
  {
    "text": "TADGE DRYJA: Probably forever. So yeah. So the issue with the bridge node is like,\nwell, if you're an old wallet, you don't to",
    "start": "3000070",
    "end": "3008270"
  },
  {
    "text": "keep track of these proofs. So, how much of a problem is this?",
    "start": "3008270",
    "end": "3014100"
  },
  {
    "text": "And the lattice based accumulator, that was\nsort of what killed it, was that you couldn't",
    "start": "3014100",
    "end": "3021510"
  },
  {
    "text": "batch operations. Sorry, and the proofs changed.",
    "start": "3021510",
    "end": "3027599"
  },
  {
    "text": "That's not the case with the sort of silly\nprime number accumulator that I showed.",
    "start": "3027600",
    "end": "3034830"
  },
  {
    "text": "But in the lattice space one, the proofs changed\nevery time an accumulator operation happened. So every time an ad happened, your proof had\nto change.",
    "start": "3034830",
    "end": "3043369"
  },
  {
    "text": "So you didn't just need to add something and\nmodify the accumulator in place. You had to modify your proofs in place as\nwell.",
    "start": "3043370",
    "end": "3050730"
  },
  {
    "text": "And so if you're a wallet, and you've got\nthree UTXOs, that meant that every block,",
    "start": "3050730",
    "end": "3056830"
  },
  {
    "text": "you'd have to do a couple thousand operations,\nright? Because every block, you're going to have\na few thousand adds and a few thousand deletes",
    "start": "3056830",
    "end": "3064690"
  },
  {
    "text": "to this accumulator. Every time one of those happened, you'd have\nto modify your proof for each of your three",
    "start": "3064690",
    "end": "3069740"
  },
  {
    "text": "UTXOs. So, a little ugly but doable, because you've\ngot three UTXOs.",
    "start": "3069740",
    "end": "3075010"
  },
  {
    "text": "You basically 3x the number of operations,\nset operations in the block. The bridge node, on the other hand, has to\nkeep track of something like 70 million UTXOs.",
    "start": "3075010",
    "end": "3086960"
  },
  {
    "text": "Right? That's about how many there are right now. And so since there's no way to batch it, that\nmeans you're going to have maybe 10k times",
    "start": "3086960",
    "end": "3096019"
  },
  {
    "text": "70 million every block. It's just not going to happen.",
    "start": "3096020",
    "end": "3103730"
  },
  {
    "text": "And then it's like, well, maybe you can sort\nof try to shard the bridge nodes. And this bridge node only keeps track of this\nportion of the set.",
    "start": "3103730",
    "end": "3110300"
  },
  {
    "text": "But it just looked really daunting. And that was why he was sort of like, yeah,\nI don't think this lattice-- I think it's",
    "start": "3110300",
    "end": "3116580"
  },
  {
    "text": "really key that either there's some kind of\nbatching operation, where we can consolidate",
    "start": "3116580",
    "end": "3122410"
  },
  {
    "text": "all the operations within a single block to\none set operation for the accumulator, or",
    "start": "3122410",
    "end": "3127839"
  },
  {
    "text": "try to make it so that the proofs don't have\nto be updated or something like that.",
    "start": "3127840",
    "end": "3133840"
  },
  {
    "text": "So this is still an unsolved problem, although\nI'm working on a fun way that I think might",
    "start": "3133840",
    "end": "3139510"
  },
  {
    "text": "work to do this. And I don't want to-- because this is videotaped. It's going on the internet and stuff.",
    "start": "3139510",
    "end": "3144970"
  },
  {
    "text": "I don't want to talk about it. But if you have questions, we can talk about\nit at office hours or something.",
    "start": "3144970",
    "end": "3152270"
  },
  {
    "text": "So if it works, it'll be cool, although in\nsome cases, it might-- so in the case of that",
    "start": "3152270",
    "end": "3157290"
  },
  {
    "text": "bridge node, it was the bridge node that really\nkilled it. Because it was just like, oh, you're going\nto have to do billions of operations per block.",
    "start": "3157290",
    "end": "3165240"
  },
  {
    "text": "But in other cases, it's like, well, you can\nhave accumulators that seem good, but aren't",
    "start": "3165240",
    "end": "3170260"
  },
  {
    "text": "actually faster. Because verifying the proofs takes a long\ntime or something like that. So it's sort of like with the range proofs\nor something like nimble-wear where the o",
    "start": "3170260",
    "end": "3181640"
  },
  {
    "text": "of n is great. But you've got these constant factors that,\nin practice, end up meaning you're not actually",
    "start": "3181640",
    "end": "3187770"
  },
  {
    "text": "faster, right? Because the Bitcoin UTXO set, well, it's 4\ngigs. Not even, right?",
    "start": "3187770",
    "end": "3192790"
  },
  {
    "text": "It's 3 and 1/2 gigs now. So in practice, there's probably a lot of\ncool cryptographic technologies.",
    "start": "3192790",
    "end": "3200050"
  },
  {
    "text": "And you can write a whole paper and have all\nthese cool things. And then if you actually implement it, it's\nlike, well, it actually goes twice as slow",
    "start": "3200050",
    "end": "3206470"
  },
  {
    "text": "as just using the regular. Also, this is super optimized. One of the biggest sort of code engineering\nthings that has happened in Bitcoin Core is",
    "start": "3206470",
    "end": "3216160"
  },
  {
    "text": "OK, how can we make database updates to this? How can we make different caching, different\nflushes to disk, and editing level DB itself.",
    "start": "3216160",
    "end": "3224670"
  },
  {
    "text": "So making this UTXO set database operation\nfaster is a big thing in Bitcoin.",
    "start": "3224670",
    "end": "3229890"
  },
  {
    "text": "So it's pretty optimized. And even if you've got something that seems\nlike in computer science terms, hey, this",
    "start": "3229890",
    "end": "3236300"
  },
  {
    "text": "is log n instead of n, like, yeah, but what\nabout the constant factors?",
    "start": "3236300",
    "end": "3243200"
  },
  {
    "text": "So that's another issue for these. OK. Other things-- I was going to talk-- well,\nyeah.",
    "start": "3243200",
    "end": "3251090"
  },
  {
    "text": "I'll do last one, and then we can maybe end\na little early and talk about projects if",
    "start": "3251090",
    "end": "3256920"
  },
  {
    "text": "you want. UTXO commitments, which is somewhat in the\nsame region as accumulators-- a little bit",
    "start": "3256920",
    "end": "3263160"
  },
  {
    "text": "different idea. And this exists in some coins. Like in Ethereum, Joe Bonneau was saying that\nyou basically have a tree of all the different",
    "start": "3263160",
    "end": "3273480"
  },
  {
    "text": "contracts that exist, all the different addresses\nin Ethereum. And the root of that tree appears in every\nblock header.",
    "start": "3273480",
    "end": "3280310"
  },
  {
    "text": "So you can make these proofs that coins exist\nbased on a block header. So it exists in Ethereum.",
    "start": "3280310",
    "end": "3286310"
  },
  {
    "text": "It doesn't exist in Bitcoin, but people have\nbeen talking about it for years. The simplest would say take a hash of the\nUTXO set and put it in every Coinbase transaction.",
    "start": "3286310",
    "end": "3296640"
  },
  {
    "text": "And make that a consensus rule, so that when\nyou mine a block, you have to take the hash",
    "start": "3296640",
    "end": "3302260"
  },
  {
    "text": "of the UTXO set that you're aware of. Put it in the block so that everyone can see\nit. And if everyone disagrees, they're going to\ninvalidate that block.",
    "start": "3302260",
    "end": "3310840"
  },
  {
    "text": "This is really simple. You probably want to do a little bit fancier\nthan this.",
    "start": "3310840",
    "end": "3316480"
  },
  {
    "text": "A bit more useful-- instead of just taking\na linear hash of the entire UTXO set, make",
    "start": "3316480",
    "end": "3322331"
  },
  {
    "text": "it a Merkle tree, right? And that way, yeah, sure, it's very little\nextra hashing.",
    "start": "3322331",
    "end": "3328760"
  },
  {
    "text": "Well, no, wait, twice as much hashing, right? But anyway. 2x the hashing, but now you've got the ability\nto make small proofs.",
    "start": "3328760",
    "end": "3338430"
  },
  {
    "text": "And then you can prove an output exists at\na given block height pretty easily at SPV",
    "start": "3338430",
    "end": "3345000"
  },
  {
    "text": "level security. So currently, you can prove that a transaction\nexists at a block height.",
    "start": "3345000",
    "end": "3350950"
  },
  {
    "text": "And you can also prove that a transaction\nwas consumed at a certain block height, right? So if you have all these different blocks,\n2, 3, 4, 5, you can say, hey, here's a Merkle",
    "start": "3350950",
    "end": "3364440"
  },
  {
    "text": "proof that transaction 1 was included in block\n2.",
    "start": "3364440",
    "end": "3369650"
  },
  {
    "text": "And then you can prove here, OK, here's transaction\n2 that consumes one of the outputs from transaction",
    "start": "3369650",
    "end": "3376760"
  },
  {
    "text": "1. But you can't prove just given-- but also,\nyou can omit this proof, right?",
    "start": "3376760",
    "end": "3385740"
  },
  {
    "text": "So if you want to prove that-- so at block\n6, how do I prove that the outputs from transaction",
    "start": "3385740",
    "end": "3393030"
  },
  {
    "text": "1 still exist at block 6? You're stuck, right? You basically have to go through blocks 3\nthrough 6 and look at the whole thing.",
    "start": "3393030",
    "end": "3404130"
  },
  {
    "text": "So with current SPV proofs, we can prove inclusion,\nright? You sort of think of this as an accumulator,\nwhere you've got-- a Merkle tree is kind of",
    "start": "3404130",
    "end": "3411440"
  },
  {
    "text": "an accumulator. I can prove inclusion, and then I can prove\ntransaction 1 is in block 2.",
    "start": "3411440",
    "end": "3416480"
  },
  {
    "text": "I can prove that transaction 2 consumes transaction\n1 in block 5.",
    "start": "3416480",
    "end": "3422680"
  },
  {
    "text": "But you have to rely on me to give you that\nproof honestly, right? If I'm trying to cheat you and say, oh yeah,\nI've totally still got money, I can't prove",
    "start": "3422680",
    "end": "3432930"
  },
  {
    "text": "that it hasn't been deleted. Whereas with a UTXO set commitment, if every\nblock, there was a total commitment to every",
    "start": "3432930",
    "end": "3441589"
  },
  {
    "text": "UTXO, I could just say, hey, at block 6, my\noutput from transaction 1, it's still in there.",
    "start": "3441590",
    "end": "3447170"
  },
  {
    "text": "Well, it wouldn't be in this case. But I could prove it at block 4, right? And say, hey, look, transaction 1, it's still\nin there at block 4.",
    "start": "3447170",
    "end": "3453650"
  },
  {
    "text": "No longer there at block 6. Depending on how you construct the UTXO commitment,\nyou may be able to provide non inclusion proofs,",
    "start": "3453650",
    "end": "3463460"
  },
  {
    "text": "which is also really cool. So for example, if you had it be a Merkle\ntree, if it was just in order insertion--",
    "start": "3463460",
    "end": "3473260"
  },
  {
    "text": "so this is TX1, this is TX2, this is TX3,\nand you make a Merkle tree that way, then",
    "start": "3473260",
    "end": "3481580"
  },
  {
    "text": "you cannot prove that something's not in it,\nright? So when TX3 gets deleted and now TX4 goes\nhere, and TX5 comes here, you can't prove",
    "start": "3481580",
    "end": "3494020"
  },
  {
    "text": "the TX3's not there anymore in any real way. However, if you sort them so that every time\nso now you sort them canonically, so like",
    "start": "3494020",
    "end": "3503180"
  },
  {
    "text": "by hash, just like greater than, less than,\nand then the order gets all weird, right?",
    "start": "3503180",
    "end": "3508740"
  },
  {
    "text": "So now TX5 is here and TX6 is here because\nTX5's hash is closer to 1 and stuff like that.",
    "start": "3508740",
    "end": "3517050"
  },
  {
    "text": "Then you can prove non-inclusion. So then you can say, hey, TX3 is not here\nbecause TX3 would be between 5 and 4, right?",
    "start": "3517050",
    "end": "3526310"
  },
  {
    "text": "Just based on what the hash looks like. And I can show you 5. I'm going to prove for it. I can show you 4 and approve for it.",
    "start": "3526310",
    "end": "3532290"
  },
  {
    "text": "I can show that these two things are adjacent,\nright, in the tree. And there's no 3 there, and it would be there.",
    "start": "3532290",
    "end": "3538750"
  },
  {
    "text": "If it existed, it would be right here. And I can show that it's not there. So then I have non-inclusion proofs in the\nUTXO set, which could be used for some kind",
    "start": "3538750",
    "end": "3546850"
  },
  {
    "text": "of fraud proof. So if someone makes a transaction spending\nsomething, you can say, no, look, here is",
    "start": "3546850",
    "end": "3553809"
  },
  {
    "text": "the last block. Here's the UTXO set hash. And here's a proof that this input doesn't\nexist.",
    "start": "3553810",
    "end": "3560160"
  },
  {
    "text": "So this must be an invalid transaction. That would be really cool, too. Because then you could propagate that on the\nnetwork and sort of prove fraud.",
    "start": "3560160",
    "end": "3569650"
  },
  {
    "text": "So this is an idea that's been around for\na long time. I think maybe the reason it hasn't yet been\nimplemented is, no one can really agree on",
    "start": "3569650",
    "end": "3579940"
  },
  {
    "text": "exactly how to do it. A lot of people are like, yeah, we should\ndo that. That would be cool. Yeah, you can prove [INAUDIBLE].",
    "start": "3579940",
    "end": "3588800"
  },
  {
    "text": "So, one thing you could do would be to skip\nyears of initial block download. So I don't really care what happened from\n2009 to 2015.",
    "start": "3588800",
    "end": "3596550"
  },
  {
    "text": "I assume it was fine, right? I'm going to start my synchronization in 2016\nand just synchronize the last two years.",
    "start": "3596550",
    "end": "3604519"
  },
  {
    "text": "So I'll go get this UTXO commitment from end\nof 2015.",
    "start": "3604520",
    "end": "3609640"
  },
  {
    "text": "I will then not just get the commitment, but\ndownload a UTXO snapshot from that time.",
    "start": "3609640",
    "end": "3615260"
  },
  {
    "text": "And then I'll check that it matches the committed\nUTXO set hash. And then I'll just start from there and then\nbecome a full node, where I didn't check the",
    "start": "3615260",
    "end": "3626120"
  },
  {
    "text": "first six years or something. And its interesting mix of SPV security and\nregular full node security, and I think personally",
    "start": "3626120",
    "end": "3635680"
  },
  {
    "text": "that's probably OK, right? If you only verify the last six months of\nsignatures, well, if everyone's been wrong",
    "start": "3635680",
    "end": "3643440"
  },
  {
    "text": "for six months, we have bigger problems, right? If there's some erroneous transaction in 2015\nand the entire network has been just extending",
    "start": "3643440",
    "end": "3653790"
  },
  {
    "text": "for three years without reorging, like, wait,\nwhat? So on the one hand, you don't want to do this\nfor today's blocks, right?",
    "start": "3653790",
    "end": "3663880"
  },
  {
    "text": "Because then the miners have full control. And the miners can just make up transactions. And if you really just say, oh, well, the\nminers are doing the right thing, then they",
    "start": "3663880",
    "end": "3672751"
  },
  {
    "text": "get a lot more power. But if you say, well, other people are validating\nit in real time.",
    "start": "3672751",
    "end": "3678310"
  },
  {
    "text": "And I assume that that's the case, and I'll\nvalidate six months' worth of transactions. So I'll pick up any errors in the last six\nmonths and be able to report them.",
    "start": "3678310",
    "end": "3686410"
  },
  {
    "text": "But I will assume that after a certain amount\nof time, I'm pretty sure it's been OK. Everyone else has been looking for this.",
    "start": "3686410",
    "end": "3692550"
  },
  {
    "text": "So that's a slightly different model than\nfull nodes. But in practice, not really.",
    "start": "3692550",
    "end": "3697780"
  },
  {
    "text": "Because if you look at the code for Bitcoin\ntoday, there's assume valid, which doesn't",
    "start": "3697780",
    "end": "3704280"
  },
  {
    "text": "check signatures. It sort of has a block hash and says, OK,\nanything before this, don't check signatures.",
    "start": "3704280",
    "end": "3709790"
  },
  {
    "text": "The developers themselves have said, yeah,\nevery signature before here is OK, so you have to check the signatures, which is a little\nnicer.",
    "start": "3709790",
    "end": "3718380"
  },
  {
    "text": "Before they had check points, where it would\njust not validate anything before a certain block hash.",
    "start": "3718380",
    "end": "3723531"
  },
  {
    "text": "So you sort of already have things like that\nto speed up the initial synchronization process.",
    "start": "3723531",
    "end": "3728540"
  },
  {
    "text": "But a UTXO commitment would make it a lot\nmore sort of decentralized. Because right now, it's just the programmers\nare like, well, this is last year.",
    "start": "3728540",
    "end": "3737590"
  },
  {
    "text": "Everyone's validated. Let's just hard code this into the code, into\nthe client.",
    "start": "3737590",
    "end": "3743610"
  },
  {
    "text": "Anyway. So this is an idea. The issues-- timing is probably one of the\nbiggest issues.",
    "start": "3743610",
    "end": "3751500"
  },
  {
    "text": "If it's consensus critical, then the miners\nneed to put this into their blocks.",
    "start": "3751500",
    "end": "3757680"
  },
  {
    "text": "And miners also need to verify it when they\nget a block. And adding even a second to creating and verifying\na block can centralize mining a bit.",
    "start": "3757680",
    "end": "3768060"
  },
  {
    "text": "Because the idea isl I want to be able to\nimmediately start mining as soon as I see a block.",
    "start": "3768060",
    "end": "3774650"
  },
  {
    "text": "Because a larger miner doesn't need to verify\nthe block that just came out, right?",
    "start": "3774650",
    "end": "3780099"
  },
  {
    "text": "Because they created it. If they created a block themselves, they know\nit's fine. They build on top of it immediately with zero\npropagation delays, zero verification delay.",
    "start": "3780100",
    "end": "3789400"
  },
  {
    "text": "Smaller miners or miners receiving that block\nhave to make sure it's correct before mining on top of it.",
    "start": "3789400",
    "end": "3795810"
  },
  {
    "text": "So adding even a one second creation verification\ndelay is something that a lot of the programmers",
    "start": "3795810",
    "end": "3801140"
  },
  {
    "text": "are like, mm, if you can get it down to half\na second, maybe we're OK. We want this functionality, but not at the\ncost of increasing that.",
    "start": "3801140",
    "end": "3809920"
  },
  {
    "text": "That's the worst time to add something. If you can defer it, if you can say, oh, well,\nyou need to verify this, but you can do it",
    "start": "3809920",
    "end": "3817430"
  },
  {
    "text": "after the fact or something, then it's fine. So this I ran up against this because I had\nthis fun idea, where you could half aggregate",
    "start": "3817430",
    "end": "3823450"
  },
  {
    "text": "Schnorr signatures within a block and do it\nnon-interactively. And it was really cool, and I'm pretty sure\nit works.",
    "start": "3823450",
    "end": "3830740"
  },
  {
    "text": "But it added, like, three seconds to block\nverification, so that killed that idea.",
    "start": "3830740",
    "end": "3838040"
  },
  {
    "text": "So one of the issues, yeah, timing. Another issue is it does encourage more SPV\nlevel verification, where you can sort of",
    "start": "3838040",
    "end": "3846740"
  },
  {
    "text": "see that a lot of people will now use this\nmethod to not run a full node. Because they're like, well, I can just get\nthese compact proofs for all the UTXOs, whether",
    "start": "3846740",
    "end": "3856630"
  },
  {
    "text": "inclusion or non-inclusion. So why run a full node? I don't need to verify it because other people\nare.",
    "start": "3856630",
    "end": "3863750"
  },
  {
    "text": "You don't really want to encourage that because\nthere's so much of that already. Also, the biggest is probably there's got\nto be a better way to do this.",
    "start": "3863750",
    "end": "3870619"
  },
  {
    "text": "So there's all these different ideas on how\nto do it. And they never seem to settle or converge\non a single way. So the three main ideas are sort of hash based\nUTXO sets, elliptic curve based commitments,",
    "start": "3870620",
    "end": "3883750"
  },
  {
    "text": "and RSA based commitments. And there's a lot of overlap with accumulators,\nin that you're sort of-- the UTXO commitment",
    "start": "3883750",
    "end": "3891640"
  },
  {
    "text": "could be the sort of route or the hash of\nthe accumulator itself. That you want to prove that something's in\nthere or prove that something's not in there.",
    "start": "3891640",
    "end": "3900480"
  },
  {
    "text": "And the EC one is the current one that Sip\nwas looking at was looking at, but it never made sense to me. Because it's trivially-- you can provide invalid\nproofs really easily.",
    "start": "3900480",
    "end": "3909960"
  },
  {
    "text": "So it's all trusted. But his idea was, well, let's say you have\na node that you synced up, and you want to",
    "start": "3909960",
    "end": "3917170"
  },
  {
    "text": "sort of port that to somewhere else. You can do that very compactly with an elliptic\ncurve based UTXO commitment, which is cool,",
    "start": "3917170",
    "end": "3927000"
  },
  {
    "text": "but you can't trust the inclusion or non-inclusion\nproofs. And there's RSA ones that also-- yeah, so\nthere's some overlap there.",
    "start": "3927000",
    "end": "3936340"
  },
  {
    "text": "Anyway it's a pretty cool idea. It does exist in Ethereum, which is just hash\nbased that Joe Bonneau sort of explained the",
    "start": "3936340",
    "end": "3943720"
  },
  {
    "text": "tree thing they used. But that doesn't provide for non-inclusion\nproofs, which would be fun.",
    "start": "3943720",
    "end": "3949470"
  },
  {
    "text": "So yeah, so this is another research area. Any questions about UTXO commitments?",
    "start": "3949470",
    "end": "3957710"
  },
  {
    "text": "There's a bunch of-- Bram Cohen's Bitfield\nthing. Have you seen that?",
    "start": "3957710",
    "end": "3963720"
  },
  {
    "text": "Yeah. So that was a really interesting case of--\nin computer science terms, it's o of n.",
    "start": "3963720",
    "end": "3969810"
  },
  {
    "text": "But he got it so that it's actually one bit\nper spent transaction output.",
    "start": "3969810",
    "end": "3975670"
  },
  {
    "text": "So the idea would be maintain a TXO set, right?",
    "start": "3975670",
    "end": "3982809"
  },
  {
    "text": "So for every transaction output ever created\nin order, you have just bits, right?",
    "start": "3982810",
    "end": "3988660"
  },
  {
    "text": "So if eight transaction outputs are created,\nthat's a byte. And you leave it all as zeros when they're\nunspent.",
    "start": "3988660",
    "end": "3994830"
  },
  {
    "text": "And when they have been spent, you just set\nit to 1. And the thing is, yeah, there's 70 million,\nbut if it's that-- well, there's more.",
    "start": "3994830",
    "end": "4003980"
  },
  {
    "text": "There's hundreds of millions. But if it's bits instead of bytes, that's\npretty small, right? It's maybe 100 megabytes if you have 800 million\noutputs ever.",
    "start": "4003980",
    "end": "4014099"
  },
  {
    "text": "And then you can quickly see on your hard\ndrive, OK, this output has been spent. And you can provide proofs and stuff.",
    "start": "4014100",
    "end": "4020060"
  },
  {
    "text": "So the Bitfield thing was a kind of an interesting\none. OK, it's o of n, but 1 bit per object.",
    "start": "4020060",
    "end": "4028500"
  },
  {
    "text": "And you can sort of quickly sort between them. So these are some of the things that-- I think\nthat's it for today, right?",
    "start": "4028500",
    "end": "4035180"
  },
  {
    "text": "I was going to talk about covenants, but that's\nanother story.",
    "start": "4035180",
    "end": "4042180"
  },
  {
    "text": "So these are some of the current research\nissues in Bitcoin, blockchain, cryptocurrency.",
    "start": "4042180",
    "end": "4050180"
  },
  {
    "text": "And there's lots of other topics. But these are some of the big ones that I'm\naware of and I know people working on. But yeah, there's lots of ways to improve\nprivacy, scalability, functionality.",
    "start": "4050180",
    "end": "4061020"
  },
  {
    "text": "It's certainly not like-- and sometimes people\nsay, oh, well, Bitcoin was made in 2009. And it's like blockchain version 1.0, and\nwe need to make blockchain 4.0 or whatever.",
    "start": "4061020",
    "end": "4073369"
  },
  {
    "text": "And to some extent, yeah, Bitcoin is annoying\nto change, right? It's difficult to change, and you've got the\nidea of a bridge node, and can't we just start",
    "start": "4073370",
    "end": "4081540"
  },
  {
    "text": "over? It'd be so much easier. In some cases, yes, it would be nicer to start\nover.",
    "start": "4081540",
    "end": "4086950"
  },
  {
    "text": "But that's sort of the challenge. It's like, wait, can we make this system better,\nbut maintain backwards compatibility?",
    "start": "4086950",
    "end": "4096040"
  },
  {
    "text": "And so, in a lot of cases, like the accumulators\nor the client side Bloom filter checking,",
    "start": "4096040",
    "end": "4103798"
  },
  {
    "text": "it's not a fork at all, right? The miners don't have to change anything.",
    "start": "4103799",
    "end": "4108899"
  },
  {
    "text": "If you don't know about this new change, you\ndon't have to change anything. And so there are totally optional ways to\nimprove some of these things.",
    "start": "4108899",
    "end": "4118149"
  },
  {
    "text": "And that's a fun challenge, right? You're given this system. It's sort of like trying to improve an airplane\nwhile it's in flight, where you're like, OK,",
    "start": "4118149",
    "end": "4126258"
  },
  {
    "text": "I'm going to make it faster, make it better\nwhile it's flying. We can't even land.",
    "start": "4126259",
    "end": "4132179"
  },
  {
    "text": "So yeah, that definitely makes it harder. But other things are-- but what's also interesting\nis that there's not that many things in it",
    "start": "4132179",
    "end": "4141697"
  },
  {
    "text": "that really require starting over from scratch. So I know at the New York City Bitcoin Core\nDeveloper Meetup in March, Bram Cohen, who",
    "start": "4141698",
    "end": "4152880"
  },
  {
    "text": "made BitTorrent-- he's making his own coin,\nI guess, now. And it's kind of interesting because usually,\nthe Bitcoin people don't like alt coins or",
    "start": "4152880",
    "end": "4161520"
  },
  {
    "text": "are sort of wary of them, and don't invite\nalt coin people to their events and stuff.",
    "start": "4161520",
    "end": "4166630"
  },
  {
    "text": "But Bram Cohen invented BitTorrent, so everyone\nsort of owes him in some spiritual way a couple",
    "start": "4166630",
    "end": "4171798"
  },
  {
    "text": "thousand bucks for all the music and movies\nthey've downloaded, right?",
    "start": "4171799",
    "end": "4177119"
  },
  {
    "text": "So it's like, oh, Bram, he helped us out. So he comes to these things. And he was asking at the thing in March, OK--\nasking a lot of people-- if you were going",
    "start": "4177120",
    "end": "4186758"
  },
  {
    "text": "to start Bitcoin over from scratch, what would\nyou change? All the people who were programming this for\nyears and dealing with all the annoying problems",
    "start": "4186759",
    "end": "4195698"
  },
  {
    "text": "in it gave, if you started from scratch, what\ncode do you change? Or what sort of basic infrastructure things\ndo you change in the system?",
    "start": "4195699",
    "end": "4204820"
  },
  {
    "text": "And there weren't that many, right? A lot of people were like, oh, there's the\nlittle things. Like, oh, get rid of the little silly op zero\nin multi sig.",
    "start": "4204820",
    "end": "4212300"
  },
  {
    "text": "Get rid of this, or change a couple of these\nthings. But not a lot of really fundamental changes\npeople would want to have made.",
    "start": "4212300",
    "end": "4221180"
  },
  {
    "text": "Some people were saying, hey, maybe instead\nof pointing based on TXID, be able to point height and index, so you can have a lot smaller\nthere.",
    "start": "4221180",
    "end": "4230860"
  },
  {
    "text": "Some different opcode things, but what was\ninteresting is that-- and also, it's a super",
    "start": "4230860",
    "end": "4236800"
  },
  {
    "text": "biased sample. And it's like, if you're asking all the people\nwho work on Bitcoin, well, yeah, they sort",
    "start": "4236800",
    "end": "4242098"
  },
  {
    "text": "of like how Bitcoin works, or at least, they've\ngrown accustomed to it. So you might want to ask other people if you\nwant to sort of think out of the box.",
    "start": "4242099",
    "end": "4249239"
  },
  {
    "text": "But there weren't a ton of major changes that\npeople wanted to have made. So it does seem that it's a fairly well thought\nout base of a system.",
    "start": "4249239",
    "end": "4260760"
  },
  {
    "text": "And then I'd say the Ethereum design is the\nother design that's very different, right? The account based versus UTXO base.",
    "start": "4260760",
    "end": "4267618"
  },
  {
    "text": "And a lot of the people who work on Bitcoin\nthink that account based is worse. A lot of people maybe in Ethereum case think\nUTXO base is worse.",
    "start": "4267619",
    "end": "4275519"
  },
  {
    "text": "They do have tradeoffs.",
    "start": "4275520",
    "end": "4277700"
  }
]