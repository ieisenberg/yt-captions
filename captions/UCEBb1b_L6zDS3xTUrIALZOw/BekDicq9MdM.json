[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "6920"
  },
  {
    "text": "offer high-quality educational\nresources for free. To make a donation, or view\nadditional materials from",
    "start": "6920",
    "end": "13469"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at ocw.mit.edu.",
    "start": "13470",
    "end": "19122"
  },
  {
    "text": " PROFESSOR: Ladies and gentlemen,\nwelcome to this lecture on nonlinear finite\nelement analysis of solids and",
    "start": "19122",
    "end": "25550"
  },
  {
    "text": "structures. In this lecture, I like to\ndiscuss with you solution methods that we use to solve the\nfinite element equations",
    "start": "25550",
    "end": "32579"
  },
  {
    "text": "in nonlinear static analysis. In the previous lectures, we\nderived this set of equations,",
    "start": "32580",
    "end": "38520"
  },
  {
    "text": "where tK is a tangent\nstiffness matrix. Delta Ui is a nodal point\nvector of incremental",
    "start": "38520",
    "end": "46360"
  },
  {
    "text": "displacements corresponding\nto iteration i. t plus delta t R is the\nexternally applied load vector",
    "start": "46360",
    "end": "54210"
  },
  {
    "text": "corresponding to time\nt plus delta t. And t plus delta t F i minus 1\nis equal to the nodal point",
    "start": "54210",
    "end": "62920"
  },
  {
    "text": "force vector corresponding to\nthe internal elements stresses at time t plus delta t,\nand at the end of",
    "start": "62920",
    "end": "69119"
  },
  {
    "text": "iteration i minus 1. The displacements are updated\nas shown here.",
    "start": "69120",
    "end": "75770"
  },
  {
    "text": "Delta Ui, of course,\nis calculated from this set of equations. We add delta Ui to the previous\ndisplacements that",
    "start": "75770",
    "end": "82850"
  },
  {
    "text": "corresponded to iteration\nt plus delta -- to time t plus delta t and\niteration i minus 1.",
    "start": "82850",
    "end": "88720"
  },
  {
    "text": "It's the end of iteration\ni minus 1. And this right-hand side gives\nus the new displacement vector",
    "start": "88720",
    "end": "97110"
  },
  {
    "text": "corresponding to iteration\ni, end of iteration i.",
    "start": "97110",
    "end": "102340"
  },
  {
    "text": "Now this is one scheme that it's\nused to solve the finite element equations.",
    "start": "102340",
    "end": "107770"
  },
  {
    "text": "We refer to this as\nthe mortified Newton-Raphson method. However, there are other\nschemes as well.",
    "start": "107770",
    "end": "113790"
  },
  {
    "text": "And schemes that are in certain problems much more effective. Since it is so important to use\nan effective method for",
    "start": "113790",
    "end": "121770"
  },
  {
    "text": "the solution of the finite\nelement equations because the costs can otherwise be very\nhigh, we should be familiar",
    "start": "121770",
    "end": "127470"
  },
  {
    "text": "with those other techniques. And I'd like to share\nthose now with you.",
    "start": "127470",
    "end": "133980"
  },
  {
    "start": "133000",
    "end": "160000"
  },
  {
    "text": "Therefore, we will look in\nthis lecture at other techniques to solve the finite\nelement equations. And we need, of course, to\ndiscuss convergence criteria.",
    "start": "133980",
    "end": "142239"
  },
  {
    "text": "It's very important to use appropriate convergence criteria. Otherwise, you iterate too long\nand/or on the other side,",
    "start": "142240",
    "end": "150850"
  },
  {
    "text": "you may actually stop iterating\nbefore you have achieved proper convergence.",
    "start": "150850",
    "end": "156250"
  },
  {
    "text": "So let me then go over to my\nview graphs and let us start",
    "start": "156250",
    "end": "161310"
  },
  {
    "start": "160000",
    "end": "264000"
  },
  {
    "text": "the discussion here. The basic set of equations that\nwe would like to solve",
    "start": "161310",
    "end": "167316"
  },
  {
    "text": "are given here. Notice R is the vector of\nexternally applied nodal point",
    "start": "167316",
    "end": "172510"
  },
  {
    "text": "forces at time t plus delta t. And F is the vector of nodal\npoint forces corresponding to",
    "start": "172510",
    "end": "180580"
  },
  {
    "text": "the internal element stresses\nat time t plus delta t. Of course, this vector is\nunknown, and we want to",
    "start": "180580",
    "end": "187870"
  },
  {
    "text": "iterate somehow to find it and\nmake sure, of course, that at",
    "start": "187870",
    "end": "193560"
  },
  {
    "text": "the end of that iteration, if we\nhave the proper vector F, R is equal to F, or R minus\nF is equal to 0.",
    "start": "193560",
    "end": "201670"
  },
  {
    "text": "We assume that the loading is\ndeformation-independent. If say, loading is\ndeformation-dependent, we can",
    "start": "201670",
    "end": "209820"
  },
  {
    "text": "also deal with that situation. But we will have to add\nadditional terms to our",
    "start": "209820",
    "end": "214890"
  },
  {
    "text": "iterative scheme. And I will get back to\nthat a little later. Notice that F in the total\nLagrangian formulation the way",
    "start": "214890",
    "end": "221939"
  },
  {
    "text": "we have discussed it earlier is\nevaluated by this product",
    "start": "221940",
    "end": "227030"
  },
  {
    "text": "here integrated over the\noriginal volume for a single element and for the UL\nformulation, F is calculated",
    "start": "227030",
    "end": "234269"
  },
  {
    "text": "as shown here. Here, of course, we integrate\nover the current volume, or the volume that we actually\nwant to calculate.",
    "start": "234270",
    "end": "242580"
  },
  {
    "text": "Notice in the iteration, of\ncourse, this volume here would be t plus delta t V i minus 1\nas we will discuss just now.",
    "start": "242580",
    "end": "252020"
  },
  {
    "text": "Because in the iteration, we\nalways update this integral and that integral with the\niteration counter that we are",
    "start": "252020",
    "end": "260088"
  },
  {
    "text": "having on the right-hand side\nof the system of equations. The methods that we use are\nbased on the Newton-Raphson",
    "start": "260089",
    "end": "271170"
  },
  {
    "start": "264000",
    "end": "418000"
  },
  {
    "text": "method, which is really used\nvery abundantly to find roots",
    "start": "271170",
    "end": "278020"
  },
  {
    "text": "of an equation. A small historical note: Newton gave a first version\nof the method in 1669.",
    "start": "278020",
    "end": "286360"
  },
  {
    "text": "Raphson then generalized and\nsimplified the method actually, in 1690.",
    "start": "286360",
    "end": "292860"
  },
  {
    "text": "Both mathematicians used\nthe same concept. And both algorithms gave really,\nthe same results.",
    "start": "292860",
    "end": "299290"
  },
  {
    "text": "But it is very appropriate to\nrefer to the methods that we're using as the\nNewton-Raphson method because",
    "start": "299290",
    "end": "306490"
  },
  {
    "text": "Raphson really contributed quite\na bit to that method. So let us now consider a single",
    "start": "306490",
    "end": "314110"
  },
  {
    "text": "Newton-Raphson iteration. The way you may have actually\nencountered it already earlier in your studies of solution\nmethods for the roots of an",
    "start": "314110",
    "end": "323220"
  },
  {
    "text": "algebraic equation. Basically, what you're\ndoing is this. You're saying if you have xi\nminus 1, you calculate",
    "start": "323220",
    "end": "332510"
  },
  {
    "text": "f at xi minus 1. You divide this value by the\nf prime at xi minus 1.",
    "start": "332510",
    "end": "339900"
  },
  {
    "text": "And then this right-hand side\ngives you better value, a better approximation to the\nroot of the equation.",
    "start": "339900",
    "end": "347340"
  },
  {
    "text": "Once you have xi, you repeat\nthe process and you get xi plus 1.",
    "start": "347340",
    "end": "353090"
  },
  {
    "text": "You keep on repeating the\nprocess until, basically f xi",
    "start": "353090",
    "end": "358630"
  },
  {
    "text": "here is close to 0. Because then you have a root.",
    "start": "358630",
    "end": "363980"
  },
  {
    "text": "Well, if we use that\nNewton-Raphson formula, it is",
    "start": "363980",
    "end": "377470"
  },
  {
    "text": "quite interesting to see how\nit has been derived. We can write for any point xi,\na neighboring point xi minus",
    "start": "377470",
    "end": "385130"
  },
  {
    "text": "1, directly this equation here\nby a Taylor series expansion. And if we neglect the higher\norder terms, we get that f of",
    "start": "385130",
    "end": "393450"
  },
  {
    "text": "xi is approximately equal to\nthis relationship on the right-hand side.",
    "start": "393450",
    "end": "399220"
  },
  {
    "text": "Well, since f of xi is supposed\nto be 0, because we",
    "start": "399220",
    "end": "404335"
  },
  {
    "text": "are looking for a 0 of\nthe equation, we set it equal to 0. And here you see directly\nthe formula that",
    "start": "404335",
    "end": "410860"
  },
  {
    "text": "I showed you earlier. So this is a very quick\nderivation of the Newton-Raphson procedure.",
    "start": "410860",
    "end": "419020"
  },
  {
    "start": "418000",
    "end": "1190000"
  },
  {
    "text": "Let us look at a mathematical\nexample to see how the method works, and to get some insight\ninto the technique.",
    "start": "419020",
    "end": "427370"
  },
  {
    "text": "Let us choose a very simple\nexample, not much to do with finite element analysis.",
    "start": "427370",
    "end": "432680"
  },
  {
    "text": "Let us say that f of x equals\nsine x and that our starting value is equal to 2\nfor the iteration.",
    "start": "432680",
    "end": "439080"
  },
  {
    "text": "You always have to choose, of\ncourse, a starting value for the iteration. Then, in this column you see the\nvalues that are calculated",
    "start": "439080",
    "end": "448750"
  },
  {
    "text": "in the successive iterations. And we also show\nhere the error.",
    "start": "448750",
    "end": "454020"
  },
  {
    "text": "It is interesting to observe\nthat when you are close to the root, you have quadratic\nconvergence.",
    "start": "454020",
    "end": "460210"
  },
  {
    "text": "Meaning that the error here,\nepsilon becomes an error.",
    "start": "460210",
    "end": "465410"
  },
  {
    "text": "Epsilon squared here. This is summarized on\nthis view graph.",
    "start": "465410",
    "end": "471880"
  },
  {
    "text": "Mathematically, if we have that\nthe error, Ei minus 1, is",
    "start": "471880",
    "end": "478790"
  },
  {
    "text": "given by this equation here. Of course, there's an\napproximate sign here. Then the error in the\nnext iteration",
    "start": "478790",
    "end": "484340"
  },
  {
    "text": "will be of this order. So the convergence is really\nvery rapid once we are close",
    "start": "484340",
    "end": "492590"
  },
  {
    "text": "to the root. Here we can see, however,\nthat if we are not",
    "start": "492590",
    "end": "499170"
  },
  {
    "text": "close to the root-- in other words, if we are too\nfar from the root, and we pick",
    "start": "499170",
    "end": "506690"
  },
  {
    "text": "a bad value, then we don't\nget to the desired root, which is pi.",
    "start": "506690",
    "end": "514080"
  },
  {
    "text": "But we get a value that\nis far away from pi. It is also root, but certainly\nnot the root that we are",
    "start": "514080",
    "end": "522159"
  },
  {
    "text": "interested in. So Newton-Raphson iteration\nis not always convergent",
    "start": "522159",
    "end": "527550"
  },
  {
    "text": "directly, converging directly\nto the result that we would like to obtain.",
    "start": "527550",
    "end": "532959"
  },
  {
    "text": "There has to be some care when\nwe use that iterative scheme. And in fact, we have to be close\nenough just to basically",
    "start": "532960",
    "end": "542720"
  },
  {
    "text": "say what has to happen. We have to be close enough to\nthe root in order to have convergence to the root that\nwe're looking for.",
    "start": "542720",
    "end": "549930"
  },
  {
    "text": "And ultimately, if we do\nconverge to that root, we will get quadratic convergence\nto the root.",
    "start": "549930",
    "end": "555060"
  },
  {
    "text": "And that is, of course,\nvery desirable. But the starting value is\ncritical, as you can see here",
    "start": "555060",
    "end": "561040"
  },
  {
    "text": "from this view graph. Let us look pictorially at\nthe solution process.",
    "start": "561040",
    "end": "567050"
  },
  {
    "text": "Here we have our\nsine function. And we are looking\nfor this root. ",
    "start": "567050",
    "end": "574280"
  },
  {
    "text": "In iteration 1, we basically set\nup a tangent to that sine",
    "start": "574280",
    "end": "581170"
  },
  {
    "text": "function at the starting\nvalue, x0. And we calculate x1 using this\ntangent as another estimate to",
    "start": "581170",
    "end": "592140"
  },
  {
    "text": "the value that we're\ninterested in. Now in the iteration 2, we lay\na tangent to the f function.",
    "start": "592140",
    "end": "603540"
  },
  {
    "text": "Which, of course, is sine\nx, at the new value corresponding to x1.",
    "start": "603540",
    "end": "609050"
  },
  {
    "text": "And with this tangent,\nwe get to this value. And you can see already\nthat we got closer",
    "start": "609050",
    "end": "615150"
  },
  {
    "text": "to the desired value. We were this far away\noriginally.",
    "start": "615150",
    "end": "621069"
  },
  {
    "text": "Then that far away. And now we are only\nthat far away.",
    "start": "621070",
    "end": "626910"
  },
  {
    "text": "Notice our sine function\nhas this value here. And certainly, it's not 0 yet.",
    "start": "626910",
    "end": "632680"
  },
  {
    "text": "So we lay another tangent\nat that point. And that's being done on\nthis view graph here.",
    "start": "632680",
    "end": "642120"
  },
  {
    "text": "Another tangent, and now\nwe get much closer to the desired value. Right here, x3 is already\nquite close.",
    "start": "642120",
    "end": "650000"
  },
  {
    "text": "But not close enough as\nshown by this value. It's not yet close enough\nto 0, this length here.",
    "start": "650000",
    "end": "659380"
  },
  {
    "text": "And we lay another tangent\nto that point now. And that's shown on this\nview graph now.",
    "start": "659380",
    "end": "668500"
  },
  {
    "text": "And we can see with the blue\nline being the tangent at this point, we get x4 very close\nto the 0 value that we are",
    "start": "668500",
    "end": "678470"
  },
  {
    "text": "actually interested in. Certainly on this view graph,\nyou can't see any difference",
    "start": "678470",
    "end": "683840"
  },
  {
    "text": "anymore between x4 and\nthe desired value. So this is basically the process\nthat we are following",
    "start": "683840",
    "end": "691220"
  },
  {
    "text": "through when we go from\niteration 1 to iteration 2 to iteration 3 and to\niteration 4.",
    "start": "691220",
    "end": "698540"
  },
  {
    "text": "Beautiful convergence in this\nparticular example. And the reason being that x0 is\nclose enough to the desired",
    "start": "698540",
    "end": "707290"
  },
  {
    "text": "value, the desired root. Which, itself, of course,\nis close to x4.",
    "start": "707290",
    "end": "712649"
  },
  {
    "text": "Four Well, if however, we were to\ntake a value that is not close",
    "start": "712650",
    "end": "721420"
  },
  {
    "text": "enough and then we, as I showed\nearlier, we do not",
    "start": "721420",
    "end": "727420"
  },
  {
    "text": "converge to the actual root. And this is shown here.",
    "start": "727420",
    "end": "733019"
  },
  {
    "text": "For example, if we take a\ntangent at a point where f of",
    "start": "733020",
    "end": "738500"
  },
  {
    "text": "prime is almost 0, then of\ncourse, this tangent throws us",
    "start": "738500",
    "end": "744920"
  },
  {
    "text": "far away from this root. And we will converge\nto some other root.",
    "start": "744920",
    "end": "751220"
  },
  {
    "text": "Of course, we don't want to use\nan exact 0 here because we have f of x divided\nby f prime of x.",
    "start": "751220",
    "end": "757310"
  },
  {
    "text": "So with an exact 0, we could\nnot [UNINTELLIGIBLE]. But a tangent that is close to\n0, an f prime value that is",
    "start": "757310",
    "end": "765330"
  },
  {
    "text": "close to 0, would throw us far\naway from the desired root. And that shows some of the\ndifficulties using--",
    "start": "765330",
    "end": "773180"
  },
  {
    "text": "in fact, almost all iterative\nschemes that we may not get",
    "start": "773180",
    "end": "779040"
  },
  {
    "text": "fast enough to our root. And in fact, we may never get\nto the root that we are looking for.",
    "start": "779040",
    "end": "785010"
  },
  {
    "text": "Well, let us then look at the\nNewton-Raphson iteration for multiple degrees of freedom.",
    "start": "785010",
    "end": "792130"
  },
  {
    "text": "Here we have our R minus\nF that we want to be setting to 0.",
    "start": "792130",
    "end": "797699"
  },
  {
    "text": "Or we want to rather, solve for\nthe displacements t plus delta t U, which are the\nsolution because this t plus",
    "start": "797700",
    "end": "807400"
  },
  {
    "text": "delta t u displacements would\ngive us this force vector. And this force vector\nequilibrates the R vector.",
    "start": "807400",
    "end": "816610"
  },
  {
    "text": "Meaning f of U, this little\nf of U, is equal to 0. And that, of course, is what\nwe want to achieve.",
    "start": "816610",
    "end": "824990"
  },
  {
    "text": "Notice that we have here,\nof course, now n degrees of freedom. Therefore, n equations\nto solve.",
    "start": "824990",
    "end": "831660"
  },
  {
    "text": "Previously, we only looked\nat one equation. If we apply the same principle\nas before to this little f,",
    "start": "831660",
    "end": "841070"
  },
  {
    "text": "namely we expand f as a Taylor\nseries about t plus delta t U",
    "start": "841070",
    "end": "846840"
  },
  {
    "text": "i minus 1, then we get\nthis equation on",
    "start": "846840",
    "end": "855000"
  },
  {
    "text": "the right-hand side. And of course, on the left-hand\nside, we have f of t",
    "start": "855000",
    "end": "860300"
  },
  {
    "text": "plus delta t Ui. Notice they are higher terms,\nwhich we will neglect just as",
    "start": "860300",
    "end": "866660"
  },
  {
    "text": "we have done earlier for\nthe single equation. Because we are looking for\nTaylor series expansion about t plus delta t U i minus 1.",
    "start": "866660",
    "end": "874790"
  },
  {
    "text": "If we neglect this part here,\nwe obtain directly this",
    "start": "874790",
    "end": "881560"
  },
  {
    "text": "equation here. 0 on the left-hand side, because\nonce again, we are",
    "start": "881560",
    "end": "887020"
  },
  {
    "text": "looking for the displacements\nvalues for which f is 0.",
    "start": "887020",
    "end": "894440"
  },
  {
    "text": "So therefore, we set this\ndeliberately equal to 0. And on the right-hand side, we\nhave f t plus delta t U i",
    "start": "894440",
    "end": "900750"
  },
  {
    "text": "minus 1 plus partial f with\nrespect to U times the delta U. This delta U is unknown,\nof course,",
    "start": "900750",
    "end": "907190"
  },
  {
    "text": "that we want to calculate. And this delta U is nothing\nelse then the difference",
    "start": "907190",
    "end": "912910"
  },
  {
    "text": "between the U value in iteration\ni and the U value in iteration i minus 1.",
    "start": "912910",
    "end": "919140"
  },
  {
    "text": "Notice that this f is\nevaluated at t plus delta t U i minus 1.",
    "start": "919140",
    "end": "924350"
  },
  {
    "text": " Let us look now at\nthis equation.",
    "start": "924350",
    "end": "929530"
  },
  {
    "text": "And if we write it a little bit\nmore out, we find that on",
    "start": "929530",
    "end": "936620"
  },
  {
    "text": "the left-hand side, we have,\nof course, a vector of 0's. On the right-hand side, we\nhave a vector of f i",
    "start": "936620",
    "end": "943990"
  },
  {
    "text": "components, f1 to fn. All of which are evaluated at\nt plus delta t U i minus 1.",
    "start": "943990",
    "end": "952600"
  },
  {
    "text": "And then we have here a matrix,\nwhich is a square matrix in which the individual\nelements are partials of f i",
    "start": "952600",
    "end": "962560"
  },
  {
    "text": "with respect to Uj. For example, f1, partial f1\nwith respect to U1 here.",
    "start": "962560",
    "end": "969020"
  },
  {
    "text": "Partial fn with respect to\nU n here, et cetera. This matrix here will give us\na tangent stiffness matrix.",
    "start": "969020",
    "end": "978130"
  },
  {
    "text": "Notice this matrix is multiplied\nby the vector of incremental nodal point\ndisplacements corresponding to",
    "start": "978130",
    "end": "984089"
  },
  {
    "text": "iteration i.  If we remember that f, the\nlittle f, at t plus delta t U",
    "start": "984090",
    "end": "997040"
  },
  {
    "text": "i minus 1 is equal to R minus\n2 plus delta t F i minus 1. Capital F here, little\nf there, remember?",
    "start": "997040",
    "end": "1004980"
  },
  {
    "text": "Then, the partial of little f\nwith respect to U at t plus",
    "start": "1004980",
    "end": "1010230"
  },
  {
    "text": "delta t U i minus 1 is given\nvia this equation. Now, please recognize that\npartial of R with respect to U",
    "start": "1010230",
    "end": "1018720"
  },
  {
    "text": "is equal to 0 if the loads are\ndeformation-independent.",
    "start": "1018720",
    "end": "1023870"
  },
  {
    "text": "Of course, if the loads depend\non the deformations, in other words, if the loads depend on\nthe U displacements, then this",
    "start": "1023870",
    "end": "1030670"
  },
  {
    "text": "would not be 0, and we would\nhave to actually put a term in here, carry that term along\nin the solution of",
    "start": "1030670",
    "end": "1037979"
  },
  {
    "text": "the nonlinear equations. But for the moment,\nwe neglect this.",
    "start": "1037979",
    "end": "1044049"
  },
  {
    "text": "We assume that the loads are\ndeformation-independent. And then, this term\nis equal to 0.",
    "start": "1044050",
    "end": "1050230"
  },
  {
    "text": "This here is now giving us the\ntangent stiffness matrix. And it is written down here.",
    "start": "1050230",
    "end": "1057430"
  },
  {
    "text": "The tangent stiffness matrix\nis nothing else than the partials of capital F with\nrespect to the U's, to the",
    "start": "1057430",
    "end": "1065440"
  },
  {
    "text": "displacements.  The final result then is given\non this view graph.",
    "start": "1065440",
    "end": "1071990"
  },
  {
    "text": "We substitute all the\ninformation that I shared with you into the Taylor series\nexpansion around t plus delta",
    "start": "1071990",
    "end": "1080790"
  },
  {
    "text": "t U i minus 1. We get directly this\nequation here. Notice tangent stiffness matrix\ncorresponding to time t",
    "start": "1080790",
    "end": "1090299"
  },
  {
    "text": "plus delta t and iteration\ni minus 1. Delta U i corresponding to\niteration i we have to be very",
    "start": "1090300",
    "end": "1100580"
  },
  {
    "text": "clear about this, that this is\nan increment in displacement from time t plus delta t\niteration i minus 1 to",
    "start": "1100580",
    "end": "1108460"
  },
  {
    "text": "iteration i. And of course, the nodal\npoint force vector. Externally applied nodal point\nforces go in here.",
    "start": "1108460",
    "end": "1116020"
  },
  {
    "text": "And this is the nodal point\nforce vector corresponding to the internal element stresses at\ntime t plus delta t and at",
    "start": "1116020",
    "end": "1123090"
  },
  {
    "text": "the end of iteration\ni minus 1. Evaluated differently in the\ntotal Lagrangian formulation",
    "start": "1123090",
    "end": "1129100"
  },
  {
    "text": "from the way we're evaluating\nit in the updated Lagrangian formulation. We talked about this vector\nabundantly in",
    "start": "1129100",
    "end": "1135690"
  },
  {
    "text": "the previous lectures. We talked about this vector,\nof course, also in the previous lectures.",
    "start": "1135690",
    "end": "1141630"
  },
  {
    "text": "We had in the previous lectures\nhere at tK, a constant tangent stiffness\nmatrix, which was set up at",
    "start": "1141630",
    "end": "1150260"
  },
  {
    "text": "the beginning of this whole\ninteractive process, and was never updated.",
    "start": "1150260",
    "end": "1156029"
  },
  {
    "text": "Well, here we now update\nthat stiffness matrix. And I think if you look through\nthe information that I",
    "start": "1156030",
    "end": "1163650"
  },
  {
    "text": "just discussed with you,\nyou recognize why we're updating it. We are doing so because we are\nalways starting with the new",
    "start": "1163650",
    "end": "1169840"
  },
  {
    "text": "Taylor series expansion about\nthe point i minus 1.",
    "start": "1169840",
    "end": "1177120"
  },
  {
    "text": "This set of equations if of\ncourse solved for delta Ui. We add delta Ui to what we\nhad already in terms of",
    "start": "1177120",
    "end": "1184070"
  },
  {
    "text": "displacements to get our new\nestimate for the nodal point displacements.",
    "start": "1184070",
    "end": "1190160"
  },
  {
    "start": "1190000",
    "end": "1257000"
  },
  {
    "text": "It is important to realize that\nthe K matrix, which we are using in the solution\nprocess, is symmetric.",
    "start": "1190160",
    "end": "1197440"
  },
  {
    "text": "Because first of all, we use\nsymmetric stress and strain measures in our governing\nequation.",
    "start": "1197440",
    "end": "1203899"
  },
  {
    "text": "Remember that when we apply the\nprinciple of virtual work, we use Cauchy stresses\nand infinitesimally",
    "start": "1203900",
    "end": "1210760"
  },
  {
    "text": "small virtual strains. Now notice that both of these\ntenses are symmetric tenses.",
    "start": "1210760",
    "end": "1216850"
  },
  {
    "text": "Of course, these are the tenses\nwe're using in the UL, in the updated Lagrangian\nformulation.",
    "start": "1216850",
    "end": "1222280"
  },
  {
    "text": "In the total Lagrangian\nformulation, we use the second Piola-Kirchhoff stress in\nGreen-Lagrange strain.",
    "start": "1222280",
    "end": "1228340"
  },
  {
    "text": "Both of these measures are\nagain, symmetric measures. Both tenses are symmetric\ntenses.",
    "start": "1228340",
    "end": "1234650"
  },
  {
    "text": "If we had introduced for a\nformulation non-symmetric tenses, for example a\nnon-symmetric stress tenser,",
    "start": "1234650",
    "end": "1242210"
  },
  {
    "text": "and of course, an energy\nconjugate non-symmetric strain tenser, we would have obtained\na non-symmetric K matrix,",
    "start": "1242210",
    "end": "1248779"
  },
  {
    "text": "which would be much more\ndifficult to deal with. Much less cost effective in\nthe solution process.",
    "start": "1248780",
    "end": "1257680"
  },
  {
    "start": "1257000",
    "end": "1305000"
  },
  {
    "text": "Also, please recognize that\nwe interpolated the real displacements and the virtual\ndisplacements with exactly the",
    "start": "1257680",
    "end": "1265809"
  },
  {
    "text": "same functions. Whereas this point here is a\ncontinuum mechanics point,",
    "start": "1265810",
    "end": "1271019"
  },
  {
    "text": "this is really a finite\nelement point. If we had used different\ninterpolation functions for",
    "start": "1271020",
    "end": "1277590"
  },
  {
    "text": "the real displacements, then for\nthe virtual displacements, or vice-versa, then we would\nhave not necessarily obtained",
    "start": "1277590",
    "end": "1286300"
  },
  {
    "text": "a symmetric K matrix. Of course, the most natural\nprocedure is to use the same",
    "start": "1286300",
    "end": "1292110"
  },
  {
    "text": "kind of interpolation functions\nfor the virtual displacements as we used for\nthe real displacements, and",
    "start": "1292110",
    "end": "1297940"
  },
  {
    "text": "that's what we did. Finally, we also assumed\nthat the loading was deformation-independent.",
    "start": "1297940",
    "end": "1303710"
  },
  {
    "text": " If we have deformation-dependent\nloading,",
    "start": "1303710",
    "end": "1309000"
  },
  {
    "text": "then if you go more back to the\nearlier view graph, then of course, this right-hand\nside vector R here would",
    "start": "1309000",
    "end": "1317020"
  },
  {
    "text": "depend on the displacements. And there are basically two\ndifferent approaches",
    "start": "1317020",
    "end": "1322630"
  },
  {
    "text": "that one can take. In the first approach, one\nsimply updates this vector",
    "start": "1322630",
    "end": "1328480"
  },
  {
    "text": "with the iteration, or with\ntaking into account the current or last calculated\nvolume and surface areas for",
    "start": "1328480",
    "end": "1335910"
  },
  {
    "text": "the elements. So we would simply put here\nan i minus 1 up there.",
    "start": "1335910",
    "end": "1341430"
  },
  {
    "text": "The left-hand side matrix,\nwe leave unchanged. And if that converges fast,\ncertainly it's a very",
    "start": "1341430",
    "end": "1347630"
  },
  {
    "text": "effective approach to use. We use that approach\nabundantly.",
    "start": "1347630",
    "end": "1352950"
  },
  {
    "text": "However, another approach\nis to actually take the differentiation of R with\nrespect to the U's, the way we",
    "start": "1352950",
    "end": "1359980"
  },
  {
    "text": "have been looking at it earlier\non an earlier view graph, and then you get some\ncomponents that you",
    "start": "1359980",
    "end": "1365260"
  },
  {
    "text": "add to the K matrix. And that K matrix may then\nout to be non-symmetric.",
    "start": "1365260",
    "end": "1371200"
  },
  {
    "text": "However, if the loading is\ndeformation-independent, then the differentiation of R with\nrespect to the displacements U",
    "start": "1371200",
    "end": "1377910"
  },
  {
    "text": "is equal to 0, and there's\nno component from that differentiation coming\ninto the K matrix.",
    "start": "1377910",
    "end": "1384250"
  },
  {
    "text": "And our K, of course, provided\nthese are also satisfied, is symmetric.",
    "start": "1384250",
    "end": "1390850"
  },
  {
    "start": "1390000",
    "end": "1476000"
  },
  {
    "text": "The iterative scheme that we\njust discussed is referred to as the full Newton-Raphson\nmethod.",
    "start": "1390850",
    "end": "1396779"
  },
  {
    "text": "Full because we are setting\nup a new K matrix at the beginning of each iteration.",
    "start": "1396780",
    "end": "1402340"
  },
  {
    "text": "The full Newton-Raphson method\nshows mathematically quadratic convergence the way we discussed\nit a bit earlier in",
    "start": "1402340",
    "end": "1408650"
  },
  {
    "text": "the lecture. And that, of course, is always\nthe case provided you are",
    "start": "1408650",
    "end": "1416400"
  },
  {
    "text": "close enough to the root. This quadratic convergence only\nholds provided you are",
    "start": "1416400",
    "end": "1421550"
  },
  {
    "text": "close enough to the root when\nyou solve your equations. In finite element analysis, it\nis also important to recognize",
    "start": "1421550",
    "end": "1429420"
  },
  {
    "text": "that a number of requirements\nmust be fulfilled. For example, in elasto-plastic\nanalysis, the stresses and",
    "start": "1429420",
    "end": "1437410"
  },
  {
    "text": "strains must be properly-- plastic strains must be\nproperly updated.",
    "start": "1437410",
    "end": "1443520"
  },
  {
    "text": "And similarly, the rotations\nin a shell analysis must be properly updated. So it is not necessarily the\ncase that you automatically",
    "start": "1443520",
    "end": "1451380"
  },
  {
    "text": "get quadratic convergence when\nyou do finite element announces with a full\nNewton-Raphson method.",
    "start": "1451380",
    "end": "1458250"
  },
  {
    "text": "It is very important to also,\non the level of updating the stresses and the rotations,\nreally do things properly in",
    "start": "1458250",
    "end": "1467800"
  },
  {
    "text": "quotes in order to obtain the\nfull quadratic convergence of",
    "start": "1467800",
    "end": "1473040"
  },
  {
    "text": "the Newton-Raphson method. We can depict the iteration\nprocess in",
    "start": "1473040",
    "end": "1479580"
  },
  {
    "text": "two equivalent ways. The first way is shown\nhere, the left.",
    "start": "1479580",
    "end": "1485299"
  },
  {
    "text": "And it's really the way we've\nbeen discussing just now the solution of f equals R minus\ncapital F. Where we want to",
    "start": "1485300",
    "end": "1494280"
  },
  {
    "text": "solve for the root, the\n0 of this equation. Notice here we have in red\nthe little f depicted.",
    "start": "1494280",
    "end": "1502980"
  },
  {
    "text": "Notice that at this point here,\nwe have t plus delta t capital F i minus 1.",
    "start": "1502980",
    "end": "1510650"
  },
  {
    "text": "And t plus delta t\nR is this value. Now, as we get closer to the\nroot, which is of course, the",
    "start": "1510650",
    "end": "1518130"
  },
  {
    "text": "point where the red curve\ncrosses this U-axis, as we get",
    "start": "1518130",
    "end": "1523800"
  },
  {
    "text": "closer to the root, this capital\nF will get closer and closer to the R. And that is,\nof course, when the little f",
    "start": "1523800",
    "end": "1533140"
  },
  {
    "text": "is equal to 0. That's all we are\nshowing here. Notice that we are setting up\na slope f prime at the point",
    "start": "1533140",
    "end": "1541830"
  },
  {
    "text": "corresponding to the i minus\nfirst iteration. And that slope brings us into\nthis point, which will be the",
    "start": "1541830",
    "end": "1549179"
  },
  {
    "text": "next point for-- or the next starting point\nfor the next iteration.",
    "start": "1549180",
    "end": "1555330"
  },
  {
    "text": "I should say, the point\nof starting with the next iteration. Now, this is one way\nof looking at",
    "start": "1555330",
    "end": "1562890"
  },
  {
    "text": "the iterative process. We can also look at\nit as shown here. Notice we have here the R\nplotted now horizontally.",
    "start": "1562890",
    "end": "1570830"
  },
  {
    "text": "The displacement vertically. Notice the R at a particular\ntime t plus delta t is shown",
    "start": "1570830",
    "end": "1579679"
  },
  {
    "text": "by this dashed line. And we really want to find this\nparticular point here and",
    "start": "1579680",
    "end": "1587110"
  },
  {
    "text": "the corresponding U displacement\nof course. At this point, the little f is\n0 and the corresponding U",
    "start": "1587110",
    "end": "1594380"
  },
  {
    "text": "displacement is down here. Notice that at the iteration\ni minus 1, it's the end of",
    "start": "1594380",
    "end": "1600240"
  },
  {
    "text": "iteration i minus 1, we have\nobtained this point here. The U displacement corresponding\nto that point is",
    "start": "1600240",
    "end": "1607850"
  },
  {
    "text": "obtained by projecting down\non the displacement axes. And this slope here, the blue\nline, gives us a tangent",
    "start": "1607850",
    "end": "1617800"
  },
  {
    "text": "stiffness matrix slope. These are two equivalent ways. This is here more like a force\ndeflection curve, and we will",
    "start": "1617800",
    "end": "1626070"
  },
  {
    "text": "use this representation\nnow abundantly. But keep in mind, it's really\nthe same thing if you look at",
    "start": "1626070",
    "end": "1633500"
  },
  {
    "text": "it closely. Well, modifications\nto the iterative scheme are the following.",
    "start": "1633500",
    "end": "1641410"
  },
  {
    "start": "1635000",
    "end": "1685000"
  },
  {
    "text": "If we leave the stiffness matrix\nconstant throughout a complete solution process--",
    "start": "1641410",
    "end": "1646669"
  },
  {
    "text": "in other words, tau is\nequal to 0 here. It's never updated. We talk about the initial\nstress method.",
    "start": "1646670",
    "end": "1654570"
  },
  {
    "text": "If tau is equal to t, where t,\nof course, corresponds to a",
    "start": "1654570",
    "end": "1659610"
  },
  {
    "text": "particular solution step and\nmeaning that the K matrix is",
    "start": "1659610",
    "end": "1664670"
  },
  {
    "text": "constant, but it is updated\nas the beginning of a solution step.",
    "start": "1664670",
    "end": "1670010"
  },
  {
    "text": "Then we talk about the modified\nNewton method. Modified Newton-Raphson\nmethod.",
    "start": "1670010",
    "end": "1675860"
  },
  {
    "text": "Or, we may also find it\neffective to update the K matrix only at particular\nsolution steps, at certain",
    "start": "1675860",
    "end": "1684040"
  },
  {
    "text": "times only. We note that the initial stress\nmethod and the modified",
    "start": "1684040",
    "end": "1689590"
  },
  {
    "start": "1685000",
    "end": "1726000"
  },
  {
    "text": "Newton methods are, of course,\nmuch less expensive than the full Newton method per\niteration, however.",
    "start": "1689590",
    "end": "1696646"
  },
  {
    "text": "We should add that many more\niterations are necessary to achieve the same accuracy if we\ndon't set up a new K matrix",
    "start": "1696646",
    "end": "1707149"
  },
  {
    "text": "in every iteration. The initial stress method and\nmodified Newton iteration technique do not exhibit\nquadratic convergence because",
    "start": "1707150",
    "end": "1716240"
  },
  {
    "text": "to obtain quadratic convergence,\nyou need to set up a new K matrix in\neach iteration.",
    "start": "1716240",
    "end": "1721750"
  },
  {
    "text": "And of course, you have to be\nclose enough to the root, to the solution that you're\nlooking for.",
    "start": "1721750",
    "end": "1726860"
  },
  {
    "start": "1726000",
    "end": "2253000"
  },
  {
    "text": "Let us now look at\na simple example. An example where we have just\none degree of freedom.",
    "start": "1726860",
    "end": "1735250"
  },
  {
    "text": "And where we deal with\ntwo load steps. Here we show the force\napplied to the",
    "start": "1735250",
    "end": "1741580"
  },
  {
    "text": "problem, or to the structure. In the first load step,\nwe apply 1R.",
    "start": "1741580",
    "end": "1747460"
  },
  {
    "text": "And then in the second\nload step, 2R. Notice horizontally here, I'm\nplotting displacements.",
    "start": "1747460",
    "end": "1754570"
  },
  {
    "text": "And the force displacement\ncurve is shown by the red line.",
    "start": "1754570",
    "end": "1760130"
  },
  {
    "text": "Now, to obtain the solution for\nthis displacement, U1, and",
    "start": "1760130",
    "end": "1766020"
  },
  {
    "text": "that displacement U2, we, as\nwe discussed, set up a K",
    "start": "1766020",
    "end": "1771340"
  },
  {
    "text": "matrix, which corresponds\nto the slope, a slope on the red curve.",
    "start": "1771340",
    "end": "1776940"
  },
  {
    "text": "And we iterate towards\nthe sought solutions. Here, we have the iterative\nprocess using the initial",
    "start": "1776940",
    "end": "1784679"
  },
  {
    "text": "stress method. In other words, where tau is\nequal to 0 in our governing finite element equations.",
    "start": "1784680",
    "end": "1792680"
  },
  {
    "text": "This means that we are setting\nup a K matrix initially, and",
    "start": "1792680",
    "end": "1798380"
  },
  {
    "text": "that K matrix is depicted here\nby the slope, the blue slope",
    "start": "1798380",
    "end": "1804960"
  },
  {
    "text": "that you're seeing. Now with this slope and this\nload applied, we get the",
    "start": "1804960",
    "end": "1812380"
  },
  {
    "text": "displacement shown down here. Notice the left superscript\nmeans load step 1.",
    "start": "1812380",
    "end": "1819125"
  },
  {
    "text": "The right superscript means\nsolution after iteration 1.",
    "start": "1819125",
    "end": "1824200"
  },
  {
    "text": "And this is the solution\nobtained from this triangle. Notice there's a blue line up\nthere, going up there, and",
    "start": "1824200",
    "end": "1833990"
  },
  {
    "text": "where that blue line crosses the\ndashed line, we pick up a",
    "start": "1833990",
    "end": "1839650"
  },
  {
    "text": "vertical fine, black line. And that vertical black line\ncuts through the displacement",
    "start": "1839650",
    "end": "1845890"
  },
  {
    "text": "axes at this particular value. So this is the solution of\nour first iteration.",
    "start": "1845890",
    "end": "1851600"
  },
  {
    "text": "Now, having calculated this\ndisplacement value, we go up vertically and get to the\nred line, the red curve.",
    "start": "1851600",
    "end": "1860145"
  },
  {
    "text": "And that red curve corresponds,\nof course, to the internal forces.",
    "start": "1860145",
    "end": "1866559"
  },
  {
    "text": "To the internal force I should\nsay, corresponding to this displacement. There's a red dot right\non that red curve.",
    "start": "1866560",
    "end": "1876200"
  },
  {
    "text": "And at that red dot now, we've\nset up a K matrix again. Now notice, in the initial\nstress method, we keep the K",
    "start": "1876200",
    "end": "1884440"
  },
  {
    "text": "matrix constant. This means that the slope here\nof this blue line that goes",
    "start": "1884440",
    "end": "1892410"
  },
  {
    "text": "through this red point is the\nsame as the slope that we had",
    "start": "1892410",
    "end": "1897830"
  },
  {
    "text": "earlier right here. With that slope and the out of\nbalance load-- and let's look",
    "start": "1897830",
    "end": "1904670"
  },
  {
    "text": "now very closely here-- that corresponds to the distance\nbetween this red",
    "start": "1904670",
    "end": "1910190"
  },
  {
    "text": "point and that dashed line with\nthis out of balance load",
    "start": "1910190",
    "end": "1916330"
  },
  {
    "text": "and this blue slope, we get an\nincrement in displacement shown right here.",
    "start": "1916330",
    "end": "1922730"
  },
  {
    "text": "And that increment in\ndisplacement added to the previous displacement gives\nus this value down here.",
    "start": "1922730",
    "end": "1931780"
  },
  {
    "text": "And in fact, this value is\nvery close to the correct solution, the exact solution,\nwhich is the solution",
    "start": "1931780",
    "end": "1940380"
  },
  {
    "text": "corresponding to the dashed\nvertical line here. Notice that the dashed vertical\nline is the exact",
    "start": "1940380",
    "end": "1947180"
  },
  {
    "text": "solution to that dashed\nhorizontal line. And our vertical black line,\nwhich we are calculating, is",
    "start": "1947180",
    "end": "1954920"
  },
  {
    "text": "virtually on that dashed\nblack line. So we can accept now,\nconvergence.",
    "start": "1954920",
    "end": "1960900"
  },
  {
    "text": "Let's now go into the\nnext load step. In the next load step,\nwe want to, again,",
    "start": "1960900",
    "end": "1966330"
  },
  {
    "text": "deal with a K matrix. And in the initial stress\nmethod, we use the same K matrix throughout\nthe solution.",
    "start": "1966330",
    "end": "1972970"
  },
  {
    "text": "Meaning that the slope now,\nwhich we are laying onto the red curve, that slope being this\nblue line, is the same",
    "start": "1972970",
    "end": "1982860"
  },
  {
    "text": "slope that we used before in\nthe first two iterations.",
    "start": "1982860",
    "end": "1988470"
  },
  {
    "text": "With this slope and the out of\nbalance load corresponding to",
    "start": "1988470",
    "end": "1993750"
  },
  {
    "text": "the distance between this\nhorizontal line, the dashed horizontal line, and that dashed\nhorizontal line because",
    "start": "1993750",
    "end": "2001780"
  },
  {
    "text": "we conversed in the\nfirst load step. With that out of balance load,\nwe get an incremental",
    "start": "2001780",
    "end": "2007450"
  },
  {
    "text": "displacement shown from\nhere to there.",
    "start": "2007450",
    "end": "2014610"
  },
  {
    "text": "And that incremental\ndisplacement then, added to the previous displacement,\ngives us this value in",
    "start": "2014610",
    "end": "2019990"
  },
  {
    "text": "displacement. Notice time t plus delta t or\nload step t plus delta t,",
    "start": "2019990",
    "end": "2026390"
  },
  {
    "text": "which is here. Load step 2 and iteration\n1, end of iteration 1.",
    "start": "2026390",
    "end": "2032620"
  },
  {
    "text": "This is now our current\ndisplacement. With this current displacement,\nonce again,",
    "start": "2032620",
    "end": "2038669"
  },
  {
    "text": "which comes from this triangle\nhere, with this current",
    "start": "2038670",
    "end": "2045760"
  },
  {
    "text": "displacement, we go vertically\nup and get to that red point, which lies on the force\ndisplacement curve--",
    "start": "2045760",
    "end": "2053940"
  },
  {
    "text": "internal force displacement\ncurve more accurately. And now we have this red point,\nand we set up, or we",
    "start": "2053940",
    "end": "2064510"
  },
  {
    "text": "use now, again, a K matrix. Of course, in the initial\nstress method we use the constant K matrix.",
    "start": "2064510",
    "end": "2070110"
  },
  {
    "text": "So this slope is the\nsame as that slope. And now watch closely.",
    "start": "2070110",
    "end": "2075320"
  },
  {
    "text": "From this triangle here, which\ncorresponds to this out of",
    "start": "2075320",
    "end": "2082960"
  },
  {
    "text": "balance load, which is\nthe same as that out of balance load. Out of balance load obtained\nby putting here",
    "start": "2082960",
    "end": "2090580"
  },
  {
    "text": "a horizontal line. Notice and the difference\nbetween the dashed line up",
    "start": "2090580",
    "end": "2097100"
  },
  {
    "text": "there and the horizontal line\ngiven by my pointer is the out of balance load.",
    "start": "2097100",
    "end": "2102270"
  },
  {
    "text": "Which of course, is the same as\nthe distance between this red point and that\ndashed line.",
    "start": "2102270",
    "end": "2108430"
  },
  {
    "text": "This out of balance load with\nthis slope gives us another increment in displacement,\nwhich brings us",
    "start": "2108430",
    "end": "2115190"
  },
  {
    "text": "to this value here. We repeat that process and\niteratively, we get closer and",
    "start": "2115190",
    "end": "2122660"
  },
  {
    "text": "closer to the correct solution,\nthe exact solution, which is the dashed vertical\nline here for the",
    "start": "2122660",
    "end": "2130050"
  },
  {
    "text": "displacement. Because at that dashed vertical\nline, we are getting",
    "start": "2130050",
    "end": "2136040"
  },
  {
    "text": "to that red curve. Now, this is the initial\nstress method.",
    "start": "2136040",
    "end": "2141069"
  },
  {
    "text": "And once again, the point here\nis that we kept the same K matrix throughout the\nsolution process.",
    "start": "2141070",
    "end": "2148900"
  },
  {
    "text": "Surely, if you now were to look\nat this iterative scheme",
    "start": "2148900",
    "end": "2155710"
  },
  {
    "text": "to obtain a faster solution,\nyou would want to set up a new K matrix.",
    "start": "2155710",
    "end": "2160770"
  },
  {
    "text": "In other words, once you have\nthis displacement value calculated, you want to update\nthe slope corresponding to the",
    "start": "2160770",
    "end": "2172670"
  },
  {
    "text": "slope of the red curve. And if you do so--",
    "start": "2172670",
    "end": "2178980"
  },
  {
    "text": "in other words, you update this\nblue slope corresponding to the red dots that you\nhave obtained in",
    "start": "2178980",
    "end": "2186980"
  },
  {
    "text": "your iterative scheme. These red dots, of course,\nbeing different from what you're seeing here now.",
    "start": "2186980",
    "end": "2192740"
  },
  {
    "text": "Then you would have the full\nNewton-Raphson method. If you only update the K matrix\nor the blue tangent",
    "start": "2192740",
    "end": "2202750"
  },
  {
    "text": "that we are seeing here whenever\nyou have converged to an equilibrium point.",
    "start": "2202750",
    "end": "2210680"
  },
  {
    "text": "Meaning when you have converged\ncorresponding for the first load step in\nthis particular case.",
    "start": "2210680",
    "end": "2218710"
  },
  {
    "text": "If you only update the stiffness\nmatrix once you have converged to this load-- for this load step, then you\nwould have the modified",
    "start": "2218710",
    "end": "2226690"
  },
  {
    "text": "Newton-Raphson method. I think if you look at this\npicture with these",
    "start": "2226690",
    "end": "2233420"
  },
  {
    "text": "possibilities, you will realize\nthat surely, the full Newton-Raphson method with\nupdating the slope after each",
    "start": "2233420",
    "end": "2241079"
  },
  {
    "text": "iteration will converge\nfastest. And the modified Newton-Raphson\nmethod will",
    "start": "2241080",
    "end": "2246690"
  },
  {
    "text": "converge a little slower than\nthe full Newton-Raphson method, but still faster than\nthe initial stress method.",
    "start": "2246690",
    "end": "2254260"
  },
  {
    "start": "2253000",
    "end": "2577000"
  },
  {
    "text": "Well, this then brings us to the\nend of the discussion of this example. I like to now introduce you to\nanother scheme that can be",
    "start": "2254260",
    "end": "2262800"
  },
  {
    "text": "very important when we solve\nnonlinear equations, finite element equations. And that scheme is the scheme\nof line searches.",
    "start": "2262800",
    "end": "2272290"
  },
  {
    "text": "The basic equations that we are\nlooking at that we want to solve are once more\ndepicted here.",
    "start": "2272290",
    "end": "2277380"
  },
  {
    "text": "Tangent stiffness matrix,\nincremental displacement vector, externally applied\nloads, nodal point forces",
    "start": "2277380",
    "end": "2283350"
  },
  {
    "text": "corresponding to the internal\nelement stresses at time t plus delta t, and at the end\nof iteration i minus 1,",
    "start": "2283350",
    "end": "2290140"
  },
  {
    "text": "beginning of iteration\ni, of course. Notice I don't have an i on\nhere, I just want to denote this for the moment as an\nincremental nodal point",
    "start": "2290140",
    "end": "2298220"
  },
  {
    "text": "displacement vector, which\ncarries, however, a bar. Let us consider forming Fi using\nthis equation where beta",
    "start": "2298220",
    "end": "2309560"
  },
  {
    "text": "is an unknown. We want to choose beta\nnow judiciously.",
    "start": "2309560",
    "end": "2315460"
  },
  {
    "text": "We want to choose beta such\nthat, in some sense, R minus Fi is small.",
    "start": "2315460",
    "end": "2324579"
  },
  {
    "text": "And we have to, of course, look\nat the mechanism that we use to make R minus F\nsmall in some sense.",
    "start": "2324580",
    "end": "2333559"
  },
  {
    "text": "Well, as a side note, we\nrecognize that when this",
    "start": "2333560",
    "end": "2339040"
  },
  {
    "text": "equation here is 0 for all\npossible U's, then clearly",
    "start": "2339040",
    "end": "2346180"
  },
  {
    "text": "this must be 0. In other words, if we were to\nsay to ourselves, let's make",
    "start": "2346180",
    "end": "2354380"
  },
  {
    "text": "this equation 0 for\nall possible U's. Then really, we would have\nsolved this equal to 0.",
    "start": "2354380",
    "end": "2362770"
  },
  {
    "text": "The reason, of course, for it\nis that we could choose here for U a vector, which carries\n0's everywhere except a 1 in",
    "start": "2362770",
    "end": "2371309"
  },
  {
    "text": "one location. And if that is a particular\nrow, then corresponding to",
    "start": "2371310",
    "end": "2376880"
  },
  {
    "text": "that row, surely this vector\nhere, this R minus F",
    "start": "2376880",
    "end": "2384170"
  },
  {
    "text": "corresponding to that row\nmust be equal to 0. So if we were simply to use here\nthe identity matrix, or",
    "start": "2384170",
    "end": "2390390"
  },
  {
    "text": "if we were to construct the\nidentity matrix by allowing n U's that are linearly\nindependent, of course,",
    "start": "2390390",
    "end": "2397730"
  },
  {
    "text": "because they all make up such\nvector but with a 1 in a",
    "start": "2397730",
    "end": "2403480"
  },
  {
    "text": "different location. As a matter of fact, we want to\nuse U1 with a 1 here, 0's",
    "start": "2403480",
    "end": "2408950"
  },
  {
    "text": "everywhere. U2, 1 here, 0 here, everywhere\nelse 0, and so on.",
    "start": "2408950",
    "end": "2414650"
  },
  {
    "text": "To construct an identity\nmatrix here. Then with that identity matrix,\nclearly R minus F",
    "start": "2414650",
    "end": "2420500"
  },
  {
    "text": "would be 0 everywhere. Of course, that is not a\nviable scheme really.",
    "start": "2420500",
    "end": "2427250"
  },
  {
    "text": "But what we want to do is to\nchoose a particular vector",
    "start": "2427250",
    "end": "2434170"
  },
  {
    "text": "here so as to make R minus\nF still 0 in some sense.",
    "start": "2434170",
    "end": "2440430"
  },
  {
    "text": "And the vector that is quite\neffectively chosen is the vector that we obtain from the\nsolution of K delta U bar",
    "start": "2440430",
    "end": "2449460"
  },
  {
    "text": "equals R minus F. If we use that vector here,\nbasically projecting the R,",
    "start": "2449460",
    "end": "2458069"
  },
  {
    "text": "capital R, minus F\nonto that vector. And we look for this to be 0.",
    "start": "2458070",
    "end": "2466770"
  },
  {
    "text": "Then we have so to say, searched\nin the direction of",
    "start": "2466770",
    "end": "2472350"
  },
  {
    "text": "delta U bar and made delta U\nbar transposed times this",
    "start": "2472350",
    "end": "2480210"
  },
  {
    "text": "vector here equal to 0. How does this scheme work? Well, we add beta times delta U\nbar to the value that we had",
    "start": "2480210",
    "end": "2489240"
  },
  {
    "text": "already from the previous\niteration. And we search along beta such\nthat this top here is much",
    "start": "2489240",
    "end": "2499340"
  },
  {
    "text": "smaller than the bottom. In other words, STOL shall be\na convergence tolerance.",
    "start": "2499340",
    "end": "2505650"
  },
  {
    "text": "Notice the way it works. We choose a value of beta. With beta known, we add this\nquantity to this one.",
    "start": "2505650",
    "end": "2513549"
  },
  {
    "text": "We get a value here. We take this value, calculate\nFi corresponding to that",
    "start": "2513550",
    "end": "2520470"
  },
  {
    "text": "value, see whether\nthe convergence tolerance is satisfied. If not, we have to choose\na new beta.",
    "start": "2520470",
    "end": "2526090"
  },
  {
    "text": "And like that, we choose new\nbetas until we have satisfied",
    "start": "2526090",
    "end": "2533590"
  },
  {
    "text": "this convergence tolerance. That's what we call\nline search. We are searching along the\nline given by delta U bar",
    "start": "2533590",
    "end": "2541700"
  },
  {
    "text": "until this is satisfied. It's a very important scheme,\nand this scheme can be",
    "start": "2541700",
    "end": "2549210"
  },
  {
    "text": "combined with modified Newton\niteration, with the initial stress method, and with\nfull Newton iteration.",
    "start": "2549210",
    "end": "2555590"
  },
  {
    "text": "And it adds a lot to the\nstability of the solution, of",
    "start": "2555590",
    "end": "2560680"
  },
  {
    "text": "the overall solution or the\nnonlinear equations. We will find, or discuss\napplications just now.",
    "start": "2560680",
    "end": "2567470"
  },
  {
    "text": "But at this point, we need to\nstop for a minute because we",
    "start": "2567470",
    "end": "2572890"
  },
  {
    "text": "need to go onto a new tape. ",
    "start": "2572890",
    "end": "2578160"
  },
  {
    "start": "2577000",
    "end": "3155000"
  },
  {
    "text": "Finally, I would like to discuss\nwith you a method that we also find to be very\neffective in nonlinear finite",
    "start": "2578160",
    "end": "2583540"
  },
  {
    "text": "element computations. Namely, the BFGS method. BFGS stands for Broyden-Fletcher",
    "start": "2583540",
    "end": "2588835"
  },
  {
    "text": "-Goldfarb-Shanno.  And in this method, we\nproceed as follows.",
    "start": "2588835",
    "end": "2595930"
  },
  {
    "text": "We calculate or define\na delta i as shown here in this equation.",
    "start": "2595930",
    "end": "2603070"
  },
  {
    "text": "And we define a gamma i as\nshown in this equation.",
    "start": "2603070",
    "end": "2608560"
  },
  {
    "text": "We want to calculate the\ncoefficient matrix such that this equation is\nhere satisfied.",
    "start": "2608560",
    "end": "2614109"
  },
  {
    "text": "In other words, given delta i\nand gamma i, we want to use the coefficient matrix that\nsatisfies this equation.",
    "start": "2614110",
    "end": "2621040"
  },
  {
    "text": "And that's basically what's\nbeing done in the BFGS scheme. Pictorially then, we can show\nfor a single degree of freedom",
    "start": "2621040",
    "end": "2630609"
  },
  {
    "text": "system, say the F plotted\nalong this axis. The U displacements plotted\nalong this axis.",
    "start": "2630610",
    "end": "2638730"
  },
  {
    "text": "Notice here in green\nwe show delta i. And we show here in\ngreen gamma i.",
    "start": "2638730",
    "end": "2644520"
  },
  {
    "text": "And notice that the matrix\nthat we want to use is indicated by this blue slope.",
    "start": "2644520",
    "end": "2651760"
  },
  {
    "text": "Which is, in other words, given\nby delta i and gamma i. Well, the BFGS method is an\niterative algorithm, which",
    "start": "2651760",
    "end": "2661300"
  },
  {
    "text": "produces successive\napproximations to efficient stiffness matrix.",
    "start": "2661300",
    "end": "2667980"
  },
  {
    "text": "Actually, we actually work\nwith the inverse of that stiffness matrix as I will\nelaborate upon just now.",
    "start": "2667980",
    "end": "2674450"
  },
  {
    "text": "It's really a compromise\nbetween the full Newton iteration method and\nthe modified Newton iteration method.",
    "start": "2674450",
    "end": "2680590"
  },
  {
    "text": "It shows very excellent\nconvergence characteristics in the solution of many\ntypes of problems.",
    "start": "2680590",
    "end": "2685950"
  },
  {
    "text": "Let's look at the individual\nsteps that we use when we apply the BFGS method. We, first of all, calculate\nthe direction of the",
    "start": "2685950",
    "end": "2694529"
  },
  {
    "text": "displacement increment. Here we have delta U bar i is\nequal to K inverse, the",
    "start": "2694530",
    "end": "2703089"
  },
  {
    "text": "inverse of the K matrix,\ncorresponding to iteration i minus 1. And here we have the out\nof balance load vector.",
    "start": "2703090",
    "end": "2712150"
  },
  {
    "text": "Notice once again we do not\ncalculate actually an inverse of a matrix. We calculate the LDL transpose\nfactorization of a matrix, and",
    "start": "2712150",
    "end": "2720730"
  },
  {
    "text": "then we, as I will just now\nshow, update that inverse in the BFGS iteration by specific\nmatrices of rank 2.",
    "start": "2720730",
    "end": "2731444"
  },
  {
    "text": "We get to that just now. Well, having calculated this\ndelta U bar i, we use that",
    "start": "2731445",
    "end": "2739360"
  },
  {
    "text": "delta U bar i in the line search\nto obtain a better",
    "start": "2739360",
    "end": "2744850"
  },
  {
    "text": "displacement vector, a\ndisplacement vector corresponding to iteration i.",
    "start": "2744850",
    "end": "2751549"
  },
  {
    "text": "A better value then just adding\nthe delta U bar i to it by adjusting beta.",
    "start": "2751550",
    "end": "2757910"
  },
  {
    "text": "In other words, we choose beta\nin such way as to satisfy this",
    "start": "2757910",
    "end": "2762960"
  },
  {
    "text": "equation here. This is, of course, the equation\nthat we are now familiar with as being equation\nthat shows that",
    "start": "2762960",
    "end": "2771680"
  },
  {
    "text": "convergence has been reached\nin a line search. Having now calculated the t\nplus delta t Ui and the",
    "start": "2771680",
    "end": "2782650"
  },
  {
    "text": "corresponding t plus delta t Fi,\nwe can calculate the delta",
    "start": "2782650",
    "end": "2788390"
  },
  {
    "text": "i and gamma i. And therefore, apply\nthe BFGS method.",
    "start": "2788390",
    "end": "2793930"
  },
  {
    "text": "And that's now step three,\ncalculation of the new secant matrix. K inverse of iteration i is\nequal to Ai transposed k",
    "start": "2793930",
    "end": "2806420"
  },
  {
    "text": "inverse of iteration\ni minus 1 times Ai. This A matrix is obtained\nas shown here.",
    "start": "2806420",
    "end": "2815393"
  },
  {
    "text": "v wi transposed. The vi and wi's are given as a\nfunction of the delta i, gamma",
    "start": "2815393",
    "end": "2824390"
  },
  {
    "text": "i, and K i minus 1 value.",
    "start": "2824390",
    "end": "2830450"
  },
  {
    "text": "You should look at the textbook\nto see the details of actually evaluating\nthe vi and wi.",
    "start": "2830450",
    "end": "2838590"
  },
  {
    "text": "But once you have vi, wi, you\ncan calculate A. And clearly, by this equation then, you get\na new stiffness matrix.",
    "start": "2838590",
    "end": "2849099"
  },
  {
    "text": "It is important to note that in\nthis iterative scheme, only vector products are needed\nto obtain vi and wi.",
    "start": "2849100",
    "end": "2858549"
  },
  {
    "text": "And it's also then important\nto note that only vector products are used to calculate\ndelta U bar i.",
    "start": "2858550",
    "end": "2865520"
  },
  {
    "text": "If this would not be the case,\nparticularly here. Then of course, the\niterative scheme",
    "start": "2865520",
    "end": "2871540"
  },
  {
    "text": "would be very expensive. Let me show you a bit of the\ndetails why we only need to",
    "start": "2871540",
    "end": "2879960"
  },
  {
    "text": "use vector products to\nget the solution. Here, we have one typical\nstep of the iteration.",
    "start": "2879960",
    "end": "2889230"
  },
  {
    "text": "Notice on the left-hand side,\nwe have delta U bar i. The value of displacement\nincrement",
    "start": "2889230",
    "end": "2895890"
  },
  {
    "text": "that we want to calculate. On the right-hand side, we\nhave i plus wi minus 1 vi",
    "start": "2895890",
    "end": "2902460"
  },
  {
    "text": "minus 1 transposed. In other words, the Ai\nminus 1 transposed.",
    "start": "2902460",
    "end": "2908890"
  },
  {
    "text": "And we would have such matrices\ngoing on here until we are coming to the A1\ntransposed matrix.",
    "start": "2908890",
    "end": "2917670"
  },
  {
    "text": "Then we have the inverse\nof a stiffness matrix. Here, corresponding\nto time tau.",
    "start": "2917670",
    "end": "2923860"
  },
  {
    "text": "And then we have the Ai matrices\nas shown here.",
    "start": "2923860",
    "end": "2930590"
  },
  {
    "text": "Now, notice that this total\namount then is multiplied by",
    "start": "2930590",
    "end": "2937590"
  },
  {
    "text": "the R minus F i minus 1, the\nout of balance load vector.",
    "start": "2937590",
    "end": "2942690"
  },
  {
    "text": "Let's now go through the\ncomputations that are required to get delta U bar i.",
    "start": "2942690",
    "end": "2950500"
  },
  {
    "text": "Here we have delta R. This delta\nR, the out of balance load vector, which I\njust call delta R,",
    "start": "2950500",
    "end": "2957030"
  },
  {
    "text": "multiplies this matrix. But if you look at this\nmultiplication, we find that this delta R times w i minus 1\ntransposed is simply a number.",
    "start": "2957030",
    "end": "2969430"
  },
  {
    "text": "So it's one vector\nmultiplication that gives us a number. This number multiplied by\nv i minus 1 is just the",
    "start": "2969430",
    "end": "2979110"
  },
  {
    "text": "multiplication of a number\ntimes a vector. It's very simple. And notice, of course, this\ndelta R i minus 1 is also",
    "start": "2979110",
    "end": "2988230"
  },
  {
    "text": "multiplying the identity\nmatrix. So in this step here, we have\nreally nothing else then a",
    "start": "2988230",
    "end": "2993910"
  },
  {
    "text": "vector multiplication. The only vector multiplication\nthat, in fact, is there, is this value, this vector here,\ntimes that vector there,",
    "start": "2993910",
    "end": "3002030"
  },
  {
    "text": "transposed. That gives us a number. This number times a vector\n[UNINTELLIGIBLE]",
    "start": "3002030",
    "end": "3007120"
  },
  {
    "text": "operation. And of course, this one here\ntimes the i matrix is just this vector by itself.",
    "start": "3007120",
    "end": "3013500"
  },
  {
    "text": "So in this step, what\nwe obtain is simply another vector.",
    "start": "3013500",
    "end": "3019950"
  },
  {
    "text": "We take this vector and\nrepeat the process. And since the repetition is\njust what we discussed",
    "start": "3019950",
    "end": "3028500"
  },
  {
    "text": "already, we find that we only\nneed vector multiplications to",
    "start": "3028500",
    "end": "3034470"
  },
  {
    "text": "roll up all of these\nmultiplications up to here. Then we have a vector multiplied\nby K inverse.",
    "start": "3034470",
    "end": "3043045"
  },
  {
    "text": "Well, that involves only vector\nmultiplications again, because we have already\nthe LDL transposed",
    "start": "3043045",
    "end": "3049809"
  },
  {
    "text": "factorization of tau k.  These vector multiplications\nresult again, in a vector.",
    "start": "3049810",
    "end": "3057079"
  },
  {
    "text": "And that vector multiplied by\nthese matrices here in the same way as we have proceeded\nhere, means again, only vector",
    "start": "3057080",
    "end": "3064329"
  },
  {
    "text": "multiplications. So this very important step\nhere only requires vector",
    "start": "3064330",
    "end": "3070440"
  },
  {
    "text": "multiplications. And that makes this whole\nprocess really efficient.",
    "start": "3070440",
    "end": "3076519"
  },
  {
    "text": "In summary then, we have the\nfollowing solution procedures that we feel are\nvery effective.",
    "start": "3076520",
    "end": "3083130"
  },
  {
    "text": "The mortified Newton-Raphson\niteration with line searches. Here we have the basic modified",
    "start": "3083130",
    "end": "3089540"
  },
  {
    "text": "Newton iteration equation. And here we have the line\nsearch equation. We, of course, after each such\nsolution, evaluate an",
    "start": "3089540",
    "end": "3098930"
  },
  {
    "text": "efficient beta. A beta that makes U-- t plus delta U i a good vector\nwhen measured on the line",
    "start": "3098930",
    "end": "3108660"
  },
  {
    "text": "search criteria the way\nI discussed it. And these two equations then,\nsummarize really the modified",
    "start": "3108660",
    "end": "3116210"
  },
  {
    "text": "Newton iteration with\nthe line search. The BFGS method is another\neffective scheme.",
    "start": "3116210",
    "end": "3121750"
  },
  {
    "text": "We use the BFGS method always\nwith line searches. And then, as a third option,\nthe full Newton-Raphson",
    "start": "3121750",
    "end": "3127950"
  },
  {
    "text": "iteration with or without\nline searches. The full Newton-Raphson\niteration with line searches",
    "start": "3127950",
    "end": "3133220"
  },
  {
    "text": "is, of course, most powerful. But it is also most expensive\nper iteration. We should point out that these\ntechniques that I discussed so",
    "start": "3133220",
    "end": "3141020"
  },
  {
    "text": "far cannot be applied for\npost-buckling analysis. We will consider the solution of\nthe response after buckling",
    "start": "3141020",
    "end": "3149160"
  },
  {
    "text": "has been occurring, after the\nitem load level has been reached in a forthcoming\nlecture.",
    "start": "3149160",
    "end": "3156020"
  },
  {
    "start": "3155000",
    "end": "3173000"
  },
  {
    "text": "The next view graphs summarize\nthese schemes: the modified",
    "start": "3156020",
    "end": "3161610"
  },
  {
    "text": "Newton-Raphson, the BFGS\nmethod, and the full Newton-Raphson method.",
    "start": "3161610",
    "end": "3166839"
  },
  {
    "text": "And I'd like to just very\nquickly go through the whole solution process for each\nof these methods.",
    "start": "3166840",
    "end": "3174070"
  },
  {
    "text": "In the modified Newton iteration\ntechnique, we initialize our displacements\ncorresponding to the beginning",
    "start": "3174070",
    "end": "3183579"
  },
  {
    "text": "of the first iteration, the end\nof the 0 iteration as tU.",
    "start": "3183580",
    "end": "3189610"
  },
  {
    "text": "And similarly, we initialize our\nforce vector corresponding to the internal element\nstresses. We set i is equal to 1, the\niteration counter equal to 1.",
    "start": "3189610",
    "end": "3199010"
  },
  {
    "text": "We calculate a K matrix at the\nbeginning of the load step, and we keep that K\nmatrix constant.",
    "start": "3199010",
    "end": "3205510"
  },
  {
    "text": "We then go into this step here\nwhere we calculate the out of balance loads.",
    "start": "3205510",
    "end": "3210700"
  },
  {
    "text": " Calculate a new displacement\nvector.",
    "start": "3210700",
    "end": "3216790"
  },
  {
    "text": "And in this box here, we\nmeasure whether we have converged already.",
    "start": "3216790",
    "end": "3222160"
  },
  {
    "text": "Of course, this convergence\nwould only be measured after we have gone say, at\nleast twice through",
    "start": "3222160",
    "end": "3229559"
  },
  {
    "text": "the iteration process. Or rather, we have calculated\nthis increment in displacement",
    "start": "3229560",
    "end": "3234650"
  },
  {
    "text": "vector twice. Because at the beginning\ncorresponding to i equal to 1, we have now this fairly large\nout of balance load.",
    "start": "3234650",
    "end": "3243400"
  },
  {
    "text": "We have just incremented\nthe load vector. Therefore, this right inside\nshould be non-zero.",
    "start": "3243400",
    "end": "3250880"
  },
  {
    "text": "And we would get an increment\nin displacements. And to measure how large that\nincrement in displacement is,",
    "start": "3250880",
    "end": "3257500"
  },
  {
    "text": "we really want to go through\nthis whole cycle at least one more time. We then, having calculated this\nincremental displacement",
    "start": "3257500",
    "end": "3265609"
  },
  {
    "text": "vector with the bar on there,\nwe perform a line search the",
    "start": "3265610",
    "end": "3270620"
  },
  {
    "text": "way we discussed it to update\nour displacements corresponding to the\niteration i.",
    "start": "3270620",
    "end": "3276720"
  },
  {
    "text": " Of course, we only have come so\nfar once through it, so i",
    "start": "3276720",
    "end": "3282300"
  },
  {
    "text": "is equal to 1 still. And this gives us the accepted\nvalue of displacements",
    "start": "3282300",
    "end": "3288360"
  },
  {
    "text": "corresponding to the\nfirst iteration. We now increment our iteration\ncounter, and go in to the",
    "start": "3288360",
    "end": "3295560"
  },
  {
    "text": "second iteration. Notice now in the second\niteration, we have R minus t",
    "start": "3295560",
    "end": "3301060"
  },
  {
    "text": "plus delta t F1 here. We calculate delta U bar 2.",
    "start": "3301060",
    "end": "3306250"
  },
  {
    "text": "And now we would certainly\nmeasure convergence. And I will just now talk about\nhow we measure convergence.",
    "start": "3306250",
    "end": "3313360"
  },
  {
    "text": "If we have not converged yet,\nwe keep on cycling through here until we do actually\nget convergence.",
    "start": "3313360",
    "end": "3322080"
  },
  {
    "text": "The distinguishing feature of\nthe modified Newton iteration is that we are having\na constant K matrix.",
    "start": "3322080",
    "end": "3329642"
  },
  {
    "text": "That we do not update\nthe K matrix is this iterative loop here. It remains constant.",
    "start": "3329642",
    "end": "3336280"
  },
  {
    "text": "Remember in the initial stress\ntechnique, initial stress method, we would not even update\nthe K matrix ever after",
    "start": "3336280",
    "end": "3346020"
  },
  {
    "text": "the first time it has\nbeen calculated. But in the modified Newton\niteration, we update it at the",
    "start": "3346020",
    "end": "3352990"
  },
  {
    "text": "beginning of each load step. In the BFGS method, we\nproceed as follows.",
    "start": "3352990",
    "end": "3360140"
  },
  {
    "text": "We initial, again, our\ndisplacements and our nodal point force vector corresponding\nto the internal",
    "start": "3360140",
    "end": "3365349"
  },
  {
    "text": "element stresses. We calculate tK. We calculate our incremental\ndisplacement vector with the",
    "start": "3365350",
    "end": "3371630"
  },
  {
    "text": "bar on top. We measure convergence if i\nis greater or equal to.",
    "start": "3371630",
    "end": "3378670"
  },
  {
    "text": "There's no point as I just\nmentioned, measuring convergence when you go first\ntime through here.",
    "start": "3378670",
    "end": "3384070"
  },
  {
    "text": "And we perform then the line\nsearch having calculated our actual incremental in nodal\npoint displacement that we",
    "start": "3384070",
    "end": "3392440"
  },
  {
    "text": "want to add to the previous\nnodal point displacements to get to this displacement\nvector.",
    "start": "3392440",
    "end": "3399150"
  },
  {
    "text": "We, of course, also have\nthis force vector. We now can update our inverse\nmatrix, our inverse secret",
    "start": "3399150",
    "end": "3406960"
  },
  {
    "text": "matrix the way we\ndiscussed it. And we increment our counter.",
    "start": "3406960",
    "end": "3413119"
  },
  {
    "text": "And we keep on cycling through\nhere until we find in this box that we have converged.",
    "start": "3413120",
    "end": "3421300"
  },
  {
    "text": "In the full Newton iteration\nwith line searches, we once",
    "start": "3421300",
    "end": "3426870"
  },
  {
    "text": "again, initialize our\ndisplacement vector, our force vector, our iteration counter.",
    "start": "3426870",
    "end": "3433490"
  },
  {
    "text": "We now calculate a new K matrix\ncorresponding to the last conditions on displacements\nand internal",
    "start": "3433490",
    "end": "3440720"
  },
  {
    "text": "forces, of course. We enter here to calculate our\nincremental displacement vector with the K matrix that\nwas just evaluated.",
    "start": "3440720",
    "end": "3449460"
  },
  {
    "text": " And we measure convergence\nonce again only when i is",
    "start": "3449460",
    "end": "3456740"
  },
  {
    "text": "greater equal to. We perform a line search to\ndetermine beta in here.",
    "start": "3456740",
    "end": "3465450"
  },
  {
    "text": "We therefore, update our\ndisplacement vector to the displacements that now\ncorrespond to the end of",
    "start": "3465450",
    "end": "3471570"
  },
  {
    "text": "iteration i. We update our iteration\ncounter. Or rather, increase our\niteration counter.",
    "start": "3471570",
    "end": "3477720"
  },
  {
    "text": "And we are calculating a new\nstiffness matrix corresponding to the last calculated\ndisplacement.",
    "start": "3477720",
    "end": "3485200"
  },
  {
    "text": "This is, of course, a\ndistinguishing feature of the full Newton-Raphson method that\nwe are calculating a new",
    "start": "3485200",
    "end": "3490660"
  },
  {
    "text": "K matrix at the beginning\nof each iteration. ",
    "start": "3490660",
    "end": "3496210"
  },
  {
    "text": "Well, these view graphs then,\nsummarize the full process of",
    "start": "3496210",
    "end": "3501359"
  },
  {
    "text": "iteration for the modified\nNewton, the BFGS, and the full Newton method. Notice that I have included the\nline search as the option.",
    "start": "3501360",
    "end": "3508660"
  },
  {
    "text": "If you don't have line\nsearching, of course, it would simply mean that you set beta\nequal to 1, and skip that",
    "start": "3508660",
    "end": "3517290"
  },
  {
    "text": "particular step of\nline searching. But in many cases, line\nsearching is quite important.",
    "start": "3517290",
    "end": "3523530"
  },
  {
    "text": "And certainly, can\nbe necessary in some types of problems.",
    "start": "3523530",
    "end": "3529790"
  },
  {
    "text": "Let us now look at what happens\nin this box here. How do we measure convergence?",
    "start": "3529790",
    "end": "3535260"
  },
  {
    "text": "In each of these iterative\nschemes, we had such a box. And I like to look now more\nclosely at how we measure",
    "start": "3535260",
    "end": "3542730"
  },
  {
    "text": "convergence. The measure of convergence\nshould, of course, tell us,",
    "start": "3542730",
    "end": "3549090"
  },
  {
    "text": "how well do we satisfy\nequilibrium? And there are basically three\nitems that can be used.",
    "start": "3549090",
    "end": "3556070"
  },
  {
    "text": "Namely energy, force, or moment,\ndisplacement, and rotation, of course,\ncorrespondingly as well.",
    "start": "3556070",
    "end": "3563110"
  },
  {
    "text": "But these are the items that one\ncan work with to measure convergence. If you use an energy convergence\ncriteria, and we",
    "start": "3563110",
    "end": "3571510"
  },
  {
    "text": "are very fond of this one. You might want to use this\nequation here delta U bar i",
    "start": "3571510",
    "end": "3580970"
  },
  {
    "text": "transposed times the out of\nbalance load divided by delta",
    "start": "3580970",
    "end": "3586800"
  },
  {
    "text": "U bar 1 transposed times t\nplus delta t R minus tF. Now notice, this is the\nincrement in nodal point",
    "start": "3586800",
    "end": "3594500"
  },
  {
    "text": "forces, or the out of\nbalance load, at the beginning of the load step.",
    "start": "3594500",
    "end": "3600990"
  },
  {
    "text": "So this here is an energy\ncorresponding to the beginning of the load step.",
    "start": "3600990",
    "end": "3607090"
  },
  {
    "text": "And we are comparing here\na similar quantity, but corresponding to the\ncurrent load.",
    "start": "3607090",
    "end": "3613760"
  },
  {
    "text": "Corresponding to the\ncurrent iteration. And if this quotient here is\nvery small measured on that",
    "start": "3613760",
    "end": "3621190"
  },
  {
    "text": "convergence tolerance, then\nwe say we have converged. An important point is that in\nthis convergence measure, we",
    "start": "3621190",
    "end": "3628910"
  },
  {
    "text": "enter with displacements and\nwith out of balance loads. Both enter in this convergence\nmeasure.",
    "start": "3628910",
    "end": "3636450"
  },
  {
    "text": "And please realize also that\nif the loads don't increase from time t to t plus delta t,\nmeaning that this here is",
    "start": "3636450",
    "end": "3646960"
  },
  {
    "text": "equal to 0-- 0 vector. Then, of course, we\nget 0 down here.",
    "start": "3646960",
    "end": "3652859"
  },
  {
    "text": "And we could not apply this\nconvergence criteria indirectly. Therefore, we would do is\ninstead of 0 here, a",
    "start": "3652860",
    "end": "3659900"
  },
  {
    "text": "reasonable small number in\nthe computer program. Also note that we apply\nthis test here",
    "start": "3659900",
    "end": "3666760"
  },
  {
    "text": "prior to line searching. In line searching, after line\nsearching of course, this top",
    "start": "3666760",
    "end": "3673590"
  },
  {
    "text": "part here is small. And we, therefore, do not want\nto apply this scheme here or",
    "start": "3673590",
    "end": "3680070"
  },
  {
    "text": "this convergence measure\nafter line searching. We should do it before\nline searching.",
    "start": "3680070",
    "end": "3685530"
  },
  {
    "text": "To measure convergence on\nforces, we can use this",
    "start": "3685530",
    "end": "3691040"
  },
  {
    "text": "equation here. Notice here we have the\nout of balance loads. We take the Euclidean norm on\nthe out of balance loads, and",
    "start": "3691040",
    "end": "3699640"
  },
  {
    "text": "we compare that with\nRNORM, input by the user, by the analyst.",
    "start": "3699640",
    "end": "3705970"
  },
  {
    "text": "It is interesting, important to\nnote that we introduce here only the components\ncorresponding to the",
    "start": "3705970",
    "end": "3713860"
  },
  {
    "text": "translational degrees\nof freedom. And here, of course, this\nRNORM is also a force",
    "start": "3713860",
    "end": "3721540"
  },
  {
    "text": "corresponding, so to say, to a translational degree of freedom. If we have also rotational\ndegrees of freedom, then we",
    "start": "3721540",
    "end": "3729430"
  },
  {
    "text": "would take instead\nof RNORM, RMNORM.",
    "start": "3729430",
    "end": "3734500"
  },
  {
    "text": "And we would extract from these\nvectors, the components corresponding to the rotational",
    "start": "3734500",
    "end": "3740130"
  },
  {
    "text": "degrees of freedom only. The point is that we want to\nhave the same units up here as down here.",
    "start": "3740130",
    "end": "3747450"
  },
  {
    "text": "Forces, forces, moments,\nmoments. And we don't want to mix\ncomponents from these",
    "start": "3747450",
    "end": "3756440"
  },
  {
    "text": "quantities. Of course, RMNORM and RNORM must\nbe chosen by the analyst.",
    "start": "3756440",
    "end": "3763160"
  },
  {
    "text": "The are input to the analysis as\ndefined in the input to the",
    "start": "3763160",
    "end": "3768190"
  },
  {
    "text": "computer program. Typically, RTOL is 0.01. RNORM is simply the maximum\nof the NORM of the",
    "start": "3768190",
    "end": "3778540"
  },
  {
    "text": "loads that are applied. Notice this Euclidean norm is\nevaluated as shown down here",
    "start": "3778540",
    "end": "3786780"
  },
  {
    "text": "for a vector a. The symbolism, two bars each\nside with a 2 means nothing",
    "start": "3786780",
    "end": "3792580"
  },
  {
    "text": "else then taking the squares of\nall the components of the vector, adding those\nsquares up.",
    "start": "3792580",
    "end": "3799630"
  },
  {
    "text": "And then, taking the square\nroot out of that addition.",
    "start": "3799630",
    "end": "3804970"
  },
  {
    "text": "On displacements, we can also\nmeasure convergence. And here is the equation\nthat can be used.",
    "start": "3804970",
    "end": "3812820"
  },
  {
    "text": "The Euclidean norm on\nthe incremental displacement vector. And that is compared\nwith DNORM.",
    "start": "3812820",
    "end": "3820970"
  },
  {
    "text": "Again, DNORM. Notice that this here is again,\ninput by the analyst to",
    "start": "3820970",
    "end": "3827869"
  },
  {
    "text": "the computer program. It is part of the input that is\nprovided for the analysis.",
    "start": "3827870",
    "end": "3833150"
  },
  {
    "text": "And it's a reference\ndisplacement. Notice then, of course, we\nshould only include here the",
    "start": "3833150",
    "end": "3838300"
  },
  {
    "text": "displacements, translational\ndisplacements in other words. If we have also, rotational\ndegrees of freedom.",
    "start": "3838300",
    "end": "3844369"
  },
  {
    "text": "Then we would here include only\nthe rotational degrees of freedom components and\nuse here DMNORM.",
    "start": "3844370",
    "end": "3853780"
  },
  {
    "text": "This way again, we compare one\nquantity with certain units with a quantity that\nhas the same units.",
    "start": "3853780",
    "end": "3861579"
  },
  {
    "text": "Once for translations and\nonce for rotations. And so when we have rotational\ndegrees of freedom in the",
    "start": "3861580",
    "end": "3868440"
  },
  {
    "text": "analysis, we this way make\nsure really, that the incremental displacements and\nincremental rotations are",
    "start": "3868440",
    "end": "3875710"
  },
  {
    "text": "small at convergence. This then completes what I\nwanted to share with you in",
    "start": "3875710",
    "end": "3881269"
  },
  {
    "text": "this lecture. Thank you very much for\nyour attention. ",
    "start": "3881270",
    "end": "3886016"
  }
]