[
  {
    "text": "[SQUEAKING]\n[RUSTLING] [CLICKING]",
    "start": "0",
    "end": "12584"
  },
  {
    "text": "JUSTIN SOLOMON: Right, so\ntoday is going to be our first, I believe, of two\nproblem sessions covering dynamic programming.",
    "start": "12584",
    "end": "18670"
  },
  {
    "text": " I've learned dynamic\nprogramming is one of these interesting\nparts of an algorithms class",
    "start": "18670",
    "end": "24698"
  },
  {
    "text": "where, somehow, the people\nthat are really good at it are completely disjoint\nwith the people that are good at all the other\nparts of the algorithms class.",
    "start": "24698",
    "end": "31063"
  },
  {
    "text": "So for some of you guys,\nthat might be promising, and for others, maybe\na little bit less so. So maybe we'll spend just\na minute or two reviewing",
    "start": "31063",
    "end": "38000"
  },
  {
    "text": "the basic ideas we're going\nto apply in these problems because they'll follow, more\nor less, the same template.",
    "start": "38000",
    "end": "43640"
  },
  {
    "text": "Although, of course,\nas usual in 6.006, we like to put some interesting\nwindow dressing around it",
    "start": "43640",
    "end": "49370"
  },
  {
    "text": "so that it's not totally\nobvious what you're doing. And then we'll do a\nbunch of sample problems.",
    "start": "49370",
    "end": "54960"
  },
  {
    "text": "Right. So let's talk a little bit\nabout dynamic programming and the basic idea here.",
    "start": "54960",
    "end": "61520"
  },
  {
    "text": "So, dynamic programming is kind\nof a funny outlier in 6.006 in that-- for example, in the data\nstructures part of the course,",
    "start": "61520",
    "end": "68430"
  },
  {
    "text": "we learned, like, what-- now I'm struggling to\nthink of a data structure--",
    "start": "68430",
    "end": "73740"
  },
  {
    "text": "like a useful-- like trees\nand arrays or whatever. And these are actually\nthings that you can code. if you look and\nsee if there are--",
    "start": "73740",
    "end": "82610"
  },
  {
    "text": "well, plausibly, it could\nbe an implementation of a tree in there somewhere. And so these are\nuseful algorithms",
    "start": "82610",
    "end": "88280"
  },
  {
    "text": "that you can maybe even\nread the pseudocode. And there's a universe\nwhere you really do translate that\npseudocode into something",
    "start": "88280",
    "end": "93740"
  },
  {
    "text": "inside of your laptop. Dynamic programming is\na little bit less so. This is more of a meta-- I don't know if you'd\ncall it a meta algorithm",
    "start": "93740",
    "end": "100337"
  },
  {
    "text": "or problem solving\napproach or what, but it's not like\nyou somehow say, I'm going to apply the\ndynamic programming",
    "start": "100337",
    "end": "106040"
  },
  {
    "text": "algorithm to this problem. But rather, it's sort of this\nbig class of things that all",
    "start": "106040",
    "end": "111409"
  },
  {
    "text": "follow a similar template or\nsort of approach to thinking about problem solving, which\nI think sort of explains why,",
    "start": "111410",
    "end": "118790"
  },
  {
    "text": "actually, in some sense, the\nlast couple of lectures that you've seen-- and, I guess, if\nI'm getting the time sequence",
    "start": "118790",
    "end": "124762"
  },
  {
    "text": "of our course right, the next\ncouple of years that you will see-- and the problem\nsessions actually",
    "start": "124762",
    "end": "130190"
  },
  {
    "text": "start to coincide in the sense\nthat when Erik was teaching you guys dynamic programming,\nhow did he do it?",
    "start": "130190",
    "end": "136080"
  },
  {
    "text": "Well, he didn't\nwrite down-- well, he sort of wrote\ndown some template for dynamic programming,\nbut then we just did a bunch of sample problems.",
    "start": "136080",
    "end": "141710"
  },
  {
    "text": "And that's exactly what\nwe're going to do today. So, somehow, all of\nthese things are just going to converge in\nthis part of our course",
    "start": "141710",
    "end": "148610"
  },
  {
    "text": "because dynamic\nprogramming, it's really more of a way of life\nthan any particular algorithm.",
    "start": "148610",
    "end": "155203"
  },
  {
    "text": "And this is a\npattern that I think you see a lot in\nadvanced algorithms. Like, for example,\nin my universe, in numerical analysis, when you\ntalk about the ADMM algorithm,",
    "start": "155203",
    "end": "163360"
  },
  {
    "text": "it's actually a totally\nuseless algorithm. What matters is applying\nit to a particular problem. And this is sort of, I think,\na more mature or grown up",
    "start": "163360",
    "end": "171500"
  },
  {
    "text": "way to think about\na lot of things in algorithms, that pretty soon,\nthis sort of general purpose",
    "start": "171500",
    "end": "176900"
  },
  {
    "text": "stuff that's useful\nall the time, I think, it starts to\ndisperse a little bit in favor",
    "start": "176900",
    "end": "182150"
  },
  {
    "text": "of different patterns\nand mechanisms that you're used\nto thinking about. So there's my\n10-second, sort of, philosophical introduction\nto what we're doing,",
    "start": "182150",
    "end": "189320"
  },
  {
    "text": "during which I've\nmanaged to chase this table across the room.",
    "start": "189320",
    "end": "194870"
  },
  {
    "text": "You know, I played-- I did college on the\nwest coast, and I thought I was going\nto be a music major. And there was a piano\nmaster class where",
    "start": "194870",
    "end": "201517"
  },
  {
    "text": "we forgot to put the\nlittle clips on the wheels and there was an\nearthquake, and I just thought I was really nervous\nbecause the piano was literally",
    "start": "201517",
    "end": "208580"
  },
  {
    "text": "slipping away from me. I can never think of that Chopin\nnocturne in quite the same way.",
    "start": "208580",
    "end": "215159"
  },
  {
    "text": "But in any event, in\ndynamic programming, Erik laid out for you guys\na particular, sort of,",
    "start": "215160",
    "end": "221240"
  },
  {
    "text": "set of steps that are a useful\nproblem-solving approach in the dynamic\nprogramming universe.",
    "start": "221240",
    "end": "227738"
  },
  {
    "text": "In today's problem\nsession, I'm going to try and help you guys\ntranslate a little bit from this template to what it\nmeans to actually write code",
    "start": "227738",
    "end": "235040"
  },
  {
    "text": "to implement a dynamic\nprogramming algorithm because I think it's a little\neasy to forget that here.",
    "start": "235040",
    "end": "241260"
  },
  {
    "text": "But, on the other\nhand, on your homework, when you're writing out\nanswers to algorithms problem,",
    "start": "241260",
    "end": "246480"
  },
  {
    "text": "it's perfectly fine to follow\nthis template even letter-- I guess-- literally letter\nfor letter and answer each",
    "start": "246480",
    "end": "253058"
  },
  {
    "text": "of these questions. And then the remaining glue\nthat you need to actually write the code is not\nterribly exciting",
    "start": "253058",
    "end": "259910"
  },
  {
    "text": "from an algorithms\ntheory perspective. So the basic idea\nhere is that there's",
    "start": "259910",
    "end": "265010"
  },
  {
    "text": "a lot of different problems\nthat can be written recursively, in some sense. Certainly, we've encountered\nmany of those in this course.",
    "start": "265010",
    "end": "272810"
  },
  {
    "text": "In fact, I think\nthe bias in the way that we've presented\nalgorithms that don't have to be recursive is to\nwrite them in a recursive way.",
    "start": "272810",
    "end": "279420"
  },
  {
    "text": "And the point here is that\nwhen you have a recursive call and you repeat something,\nyou give the function",
    "start": "279420",
    "end": "286790"
  },
  {
    "text": "the same input\nmore than one time, you might as well remember what\nyou got the last time you saw that input, and\nthen you don't have",
    "start": "286790",
    "end": "293000"
  },
  {
    "text": "to do that computation again. Really, in one sentence, I think\nthat's roughly the logic behind all these dynamic\nprogramming things.",
    "start": "293000",
    "end": "300319"
  },
  {
    "text": "So there's no reason to be\ntoo redundant with lecture. For just the\n10-second overview, I",
    "start": "300320",
    "end": "305690"
  },
  {
    "text": "think that there's an example\nwhich is simultaneously good and misleading, which\nis this Fibonacci sequence.",
    "start": "305690",
    "end": "312050"
  },
  {
    "text": "It's good in the sense that the\nlogic of dynamic programming is really easy. It's bad in that the runtime is\nkind of weird to think about.",
    "start": "312050",
    "end": "320075"
  },
  {
    "text": "But remember, though,\nyour Fibonacci sequence looks something like f of\nk equals f of k minus 1",
    "start": "320075",
    "end": "327380"
  },
  {
    "text": "plus f of k minus 2. And if you look at your, sort\nof, recursive call tree here--",
    "start": "327380",
    "end": "334740"
  },
  {
    "text": "like, let's say that\nI do k equals 4. Then it's going to call--",
    "start": "334740",
    "end": "339800"
  },
  {
    "text": "my function f is going to have\nto evaluate it at 3 and 2. And then the 3 is going to\nevaluate at 2 and 1, and so on.",
    "start": "339800",
    "end": "346880"
  },
  {
    "text": "And the thing to notice is\nthat when I call f of 4-- or, rather, f of 3 here, if\nthere were 3 somewhere else",
    "start": "346880",
    "end": "354740"
  },
  {
    "text": "in my tree, I get\nthe same number, so, in particular, f\nof 2 and f of 2. Both of these are going\nto take some amount",
    "start": "354740",
    "end": "361370"
  },
  {
    "text": "of algorithmic work, but\nif just the first time I see a 2 I have a little\npiece of scratch paper and I say, oh, any\ntime I see k equals",
    "start": "361370",
    "end": "368870"
  },
  {
    "text": "2, just return\nthis number rather than doing recursive\ncalls, then, in effect, if there's any subtree\nunderneath this thing,",
    "start": "368870",
    "end": "376220"
  },
  {
    "text": "I've just pruned\nit from my tree. And so that's the\nbasic logic here.",
    "start": "376220",
    "end": "382620"
  },
  {
    "text": "And that's basically\nthe paradigm that's going on in this\nSRTBOT acronym, which",
    "start": "382620",
    "end": "390790"
  },
  {
    "text": "is you first take your problem\nand divide it into subproblems. That is mysterious.",
    "start": "390790",
    "end": "396080"
  },
  {
    "text": "Why is this board moving?  Oh, there's a phone in my pocket\nand I bumped against the wall.",
    "start": "396080",
    "end": "402901"
  },
  {
    "start": "402901",
    "end": "408302"
  },
  {
    "text": "I'm not used to this classroom. Right. Yeah. So the first thing\nyou want to do",
    "start": "408302",
    "end": "414385"
  },
  {
    "text": "is to write my problem\nas this sort of form. Notice just that we've done\nthis a lot in this class,",
    "start": "414385",
    "end": "420480"
  },
  {
    "text": "we've written\nthings recursively. The difference here is\nthe sort of argument that goes into recursion\nis typically, maybe,",
    "start": "420480",
    "end": "426360"
  },
  {
    "text": "a little simpler than putting\nsome giant data structure inside of there or\nsomething like that.",
    "start": "426360",
    "end": "431840"
  },
  {
    "text": "So, for instance,\nmerge sort, you could write in this paradigm. I guess we covered\nthat, but it's probably not the most natural way\nto think about merge sort.",
    "start": "431840",
    "end": "439370"
  },
  {
    "text": "Then we need to relate our\nsubproblems to each other. So, for instance, in the\nFibonacci sequence problem,",
    "start": "439370",
    "end": "444920"
  },
  {
    "text": "I just gave you\nthe relation that-- what defines the problem. Incidentally, this is, what,\na model for the reproduction",
    "start": "444920",
    "end": "452840"
  },
  {
    "text": "of rabbits, I\nthink, if I remember reading the history of\nthe Fibonacci sequence. ",
    "start": "452840",
    "end": "459250"
  },
  {
    "text": "And then, I think,\nto me, the most-- not necessarily unnatural-- but\nI think the thing that maybe is hardest to translate to an\nalgorithm if you're thinking",
    "start": "459250",
    "end": "466422"
  },
  {
    "text": "about writing code is this-- oh, man, this is going\nto be a problem-- this idea of topological order.",
    "start": "466422",
    "end": "473430"
  },
  {
    "text": "The basic idea here is that\nif f of 1 depended on f of 2, and f of 2 depended on f of\n1, I'd be in a lot of trouble,",
    "start": "473430",
    "end": "481110"
  },
  {
    "text": "right, because somehow\nmy tree would never converge, for one thing, if\nI made these recursive calls",
    "start": "481110",
    "end": "486210"
  },
  {
    "text": "and I'd never be able\nto memoize or, kind of, remember a value when I move on. Right?",
    "start": "486210",
    "end": "491410"
  },
  {
    "text": "And so the idea\nhere is that there's some ordering of\nmy subproblem so that I can build up a solution.",
    "start": "491410",
    "end": "496630"
  },
  {
    "text": "And there's, sort\nof, two dual ways to think about\nwhy that's useful. So in the memoization\nuniverse, what do I do?",
    "start": "496630",
    "end": "504530"
  },
  {
    "text": "I just add an if statement\nsaying if I've already evaluated f of k, return it.",
    "start": "504530",
    "end": "509560"
  },
  {
    "text": "That's perfectly fine. The other thing I can do\nis if I write my problems in topological order,\nthen I can sort of",
    "start": "509560",
    "end": "517289"
  },
  {
    "text": "go in the reverse direction and\nbuild up my memoization table. So, for instance, for the\nFibonacci sequence problem,",
    "start": "517289",
    "end": "525120"
  },
  {
    "text": "I could do f of 1 and then f\nof 2 and then f of 3 and f of 4 all the way until I get to the\nk value that I actually wanted.",
    "start": "525120",
    "end": "531270"
  },
  {
    "text": "And those are just\nduals of the same coin. They're exactly\nthe same approach. Although the\nmemoization version,",
    "start": "531270",
    "end": "537090"
  },
  {
    "text": "sometimes you can\nprune out subproblems that you didn't\nactually need to solve. So, for instance, maybe\nthis was f of k minus 7,",
    "start": "537090",
    "end": "543430"
  },
  {
    "text": "and so I can skip a few\nindices in my array. I don't think, typically, that\nhas a big effect on runtime",
    "start": "543430",
    "end": "548835"
  },
  {
    "text": "for the problems\nthat we've seen, but it could, plausibly,\nin some universal. I'd have to think\nabout a problem",
    "start": "548835",
    "end": "555100"
  },
  {
    "text": "where that makes a difference. Right. And then I think the\nBOT part of SRTBOT",
    "start": "555100",
    "end": "560773"
  },
  {
    "text": "is a little easier\nto think about. You have to make sure that\nthis recursion has a base case,",
    "start": "560773",
    "end": "565810"
  },
  {
    "text": "like when is this\nthing going to stop. That's exactly the same. It's just any\nrecursive algorithm.",
    "start": "565810",
    "end": "572090"
  },
  {
    "text": "The O for original, I\nthink, is a little bit retrofit to make\nSRTBOT sound nice,",
    "start": "572090",
    "end": "578050"
  },
  {
    "text": "but I think the idea\nhere is that you need to go back to\nyour original problem and make sure that\nit corresponds to one of the function\ncalls that you've written",
    "start": "578050",
    "end": "584830"
  },
  {
    "text": "in all this complicated stuff. Hopefully that's a\nreasonable characterization. And then, finally,\nthe t is more--",
    "start": "584830",
    "end": "591279"
  },
  {
    "text": "these are for describing\nyour algorithm. The last one is\nfor analyzing it. And, again, the\nBOT part of SRTBOT",
    "start": "591280",
    "end": "597670"
  },
  {
    "text": "almost applies to anything we've\ndone in 6.006, like you should always analyze your run time.",
    "start": "597670",
    "end": "602779"
  },
  {
    "text": "OK. So, in any event, that's\nmy 10-minute version of the last couple lectures\nand, I think, more or less,",
    "start": "602780",
    "end": "610340"
  },
  {
    "text": "enough to get us started with\nsome sample problems here. Sorry, I couldn't help it. I like to teach things.",
    "start": "610340",
    "end": "616530"
  },
  {
    "text": "OK. So, right. So in our problem\nsession, we have a few of the homework problems\nfrom last year to go over.",
    "start": "616530",
    "end": "625220"
  },
  {
    "text": "If it makes you guys\nfeel any better, I got myself all balled\nup on one of them last night while I was\npreparing for today.",
    "start": "625220",
    "end": "630440"
  },
  {
    "text": "And I look forward to doing\nthat in front of all of you guys now. Right. So, I'm afraid of this, so I'm\ngoing to go to the next board.",
    "start": "630440",
    "end": "640079"
  },
  {
    "text": "OK. So in our first\nproblem, Sunny studies-- this was-- somehow,\nthe cute naming",
    "start": "640080",
    "end": "646640"
  },
  {
    "text": "conventions we have in 6.006\ngot really meta in this problem, because there's a problem\nabout Tim the Beaver.",
    "start": "646640",
    "end": "652340"
  },
  {
    "text": "But, as we all know,\nTim is MIT backwards, so he happens to fit\ninto this goofy game",
    "start": "652340",
    "end": "659839"
  },
  {
    "text": "that Jason likes to play in\nwriting homework problems. Anyway, but it's\nalso the MIT mascot.",
    "start": "659840",
    "end": "665450"
  },
  {
    "text": "Anyway, I got very excited. Right. So what's going on\nin this problem?",
    "start": "665450",
    "end": "671190"
  },
  {
    "text": "So Tim the Beaver has kind\nof an interesting-- you know, mathematics, I think you would\ncall this a martingale if you",
    "start": "671190",
    "end": "677660"
  },
  {
    "text": "flip the coin a little bit\nwhen he solve this problem. But luckily, Tim the Beaver is\na deterministic kind of a guy.",
    "start": "677660",
    "end": "684889"
  },
  {
    "text": "And he looks at the\nweather outside, and if it's a temperature\nt-- apparently, Tim the Beaver is\nOK with boiling.",
    "start": "684890",
    "end": "691940"
  },
  {
    "text": "The higher the temperature,\nthe happier Tim gets. So this is a first derivative\nkind of a phenomenon.",
    "start": "691940",
    "end": "698630"
  },
  {
    "text": "In particular, on a given day,\nif I have a temperature t,",
    "start": "698630",
    "end": "705200"
  },
  {
    "text": "Tim the Beaver has\ntwo things that he can do to change his mood. Apparently, Tim the Beaver's\nmood never stays fixed.",
    "start": "705200",
    "end": "711980"
  },
  {
    "text": "It always goes up and down. In particular, he can either\ngo outside, in which case",
    "start": "711980",
    "end": "725430"
  },
  {
    "text": "the happiness increases by\nt, OK, or he can stay inside,",
    "start": "725430",
    "end": "741450"
  },
  {
    "text": "in which case his\nhappiness decreases by t.",
    "start": "741450",
    "end": "749750"
  },
  {
    "text": "OK. So every day, Tim the\nBeaver, he wakes up he--",
    "start": "749750",
    "end": "755175"
  },
  {
    "text": "I really want to say that\nhe checks for his shadow, but that's a gopher, right? i any event, he wakes up in the\nmorning, he checks the weather,",
    "start": "755175",
    "end": "762910"
  },
  {
    "text": "and he makes the\ndetermination does he want to go outside or not. And if he goes outside,\nhe gets happier by an amount that's\nequal to the temperature.",
    "start": "762910",
    "end": "770320"
  },
  {
    "text": "If he stays inside, he gets\nless happy by an amount that's equal to the temperature. By the way, I think our\nsolution is perfectly fine",
    "start": "770320",
    "end": "776933"
  },
  {
    "text": "if temperatures are negative\nhere, in which case, I guess, everything\nwould flip intuitively.",
    "start": "776933",
    "end": "782620"
  },
  {
    "text": "But there's no reason to\nget too hung up on that. But, of course,\nthere's a twist here.",
    "start": "782620",
    "end": "789070"
  },
  {
    "text": "So Tim, as with many of you,\nhas n days until his final exam.",
    "start": "789070",
    "end": "799040"
  },
  {
    "text": " And he's worried about studying.",
    "start": "799040",
    "end": "804840"
  },
  {
    "text": "Yeah? So, in particular, he\nnever wants to go--",
    "start": "804840",
    "end": "810140"
  },
  {
    "text": "he's come up with\na personal resolve to never go outside more\nthan two days in a row. Yeah?",
    "start": "810140",
    "end": "817040"
  },
  {
    "text": "So, right. ",
    "start": "817040",
    "end": "827590"
  },
  {
    "text": "And so the question is--\nright, because that way he has to stay inside\nand study at least one",
    "start": "827590",
    "end": "833950"
  },
  {
    "text": "out of every three-ish days. OK. So the question is how can\nTim maximize his happiness.",
    "start": "833950",
    "end": "842490"
  },
  {
    "text": "Incidentally, in\nmachine learning, sometimes they call\nthat minimizing regret, which I always found\nto be a very sad way",
    "start": "842490",
    "end": "848070"
  },
  {
    "text": "to think about algorithms when\nthere's a totally dual version. But Tim's an optimistic guy. He wants to maximize his\nhappiness subject to this",
    "start": "848070",
    "end": "855180"
  },
  {
    "text": "constraint that he cannot go\noutside more than two days in a row. Right? So if I go out on\nMonday and Tuesday,",
    "start": "855180",
    "end": "861150"
  },
  {
    "text": "I have to stay\ninside on Wednesday. Yes? AUDIENCE: I think there's\nno effect to his happiness",
    "start": "861150",
    "end": "866547"
  },
  {
    "text": "when he stays in. JUSTIN SOLOMON: There's\nno effect to his happiness when he stays in.",
    "start": "866547",
    "end": "871750"
  },
  {
    "text": "AUDIENCE: At least,\nthat's [INAUDIBLE].. JUSTIN SOLOMON: No, it says\nwith a decrease in happiness when t-- oh, when t is negative.",
    "start": "871750",
    "end": "879998"
  },
  {
    "text": "That's not actually going to\naffect our problem at all. ",
    "start": "879998",
    "end": "885686"
  },
  {
    "text": "AUDIENCE: It's not\ngoing to affect it. JUSTIN SOLOMON: Sure,\nyeah, I can fix this live.",
    "start": "885687",
    "end": "890838"
  },
  {
    "text": "This is what happens when\nI do the problem myself before looking at the answer\nand then don't check it closely.",
    "start": "890838",
    "end": "896320"
  },
  {
    "text": "Fine. So let's change that. I like this problem better,\nsomehow, psychologically.",
    "start": "896320",
    "end": "902010"
  },
  {
    "text": "But that's OK. Right. So, Jason correctly points\nout that if you actually",
    "start": "902010",
    "end": "907110"
  },
  {
    "text": "read the problem, what's asked\nthere is slightly different, that when he goes outside,\nhis happiness increases by t.",
    "start": "907110",
    "end": "914610"
  },
  {
    "text": "If he stays inside, his\nhappiness does nothing. Right? So it stays the same.",
    "start": "914610",
    "end": "923529"
  },
  {
    "text": "My apologies, so Tim the Beaver\nis a particularly optimistic beaver. His happiness can\nonly increase in time,",
    "start": "923530",
    "end": "930130"
  },
  {
    "text": "assuming he lives in a climate\nwith positive temperatures. OK. I think I've got it right now.",
    "start": "930130",
    "end": "935620"
  },
  {
    "text": "Cool. We'll see if I\ncan still do this. Yeah, I think basically\nnothing changes.",
    "start": "935620",
    "end": "942519"
  },
  {
    "text": "OK, that's great. All right. We're going to do it. ",
    "start": "942520",
    "end": "951760"
  },
  {
    "text": "OK. Right, so the question is\nhow do we solve this problem. And thankfully, I think we\nput the easiest problem first.",
    "start": "951760",
    "end": "959230"
  },
  {
    "text": "And, in particular, if we're\nfollowing our SRTBOT paradigm here, somehow there's a\nset of subproblems that",
    "start": "959230",
    "end": "966480"
  },
  {
    "text": "are staring us in the face. That's the word I'm looking for. In particular,\nwell, there's sort",
    "start": "966480",
    "end": "975330"
  },
  {
    "text": "of only one index in\nour problem, which is what day it is. So the obvious thing\nto do would be to say,",
    "start": "975330",
    "end": "981149"
  },
  {
    "text": "can we figure out\nthe maximum amount of happiness for days,\nsay, i to the last day?",
    "start": "981150",
    "end": "987810"
  },
  {
    "text": "By the way, if I do that,\nI'm using the prefix version of my problem-- ah, suffix version\nof my problem.",
    "start": "987810",
    "end": "993699"
  },
  {
    "text": "I could also do it the opposite\nway and work from the end back in. Maybe if we have time\nall the way at end,",
    "start": "993700",
    "end": "998970"
  },
  {
    "text": "we'll do the second one. But it doesn't really matter. OK. So, in particular, just to\nadd a little bit of notation,",
    "start": "998970",
    "end": "1006840"
  },
  {
    "text": "let's say that t of i is equal\nto the temperature on day i.",
    "start": "1006840",
    "end": "1016370"
  },
  {
    "text": "OK. And now we're going to\nmake a new thing, which is going to be the actual\nvariable we want to compute.",
    "start": "1016370",
    "end": "1022850"
  },
  {
    "text": "This is going to be x to\ni, which, we'll write, is the maximum happiness that\nyou can achieve if you only",
    "start": "1022850",
    "end": "1035869"
  },
  {
    "text": "consider the calendar from day\ni to day n, I guess inclusive.",
    "start": "1035869",
    "end": "1042760"
  },
  {
    "text": "OK. Incidentally, just\nfor convenience, we'll assume that\nx i is equal to 0",
    "start": "1042760",
    "end": "1048250"
  },
  {
    "text": "if I go past the end of\nmy array, which I think is, kind of, a, typical thing to\ndo in these type DP algorithms.",
    "start": "1048250",
    "end": "1056730"
  },
  {
    "text": "OK. So the question is can\nwe actually come up with a recursive\nalgorithm that computes",
    "start": "1056730",
    "end": "1062650"
  },
  {
    "text": "x i using this nice, sort\nof, typologically acyclic way",
    "start": "1062650",
    "end": "1070080"
  },
  {
    "text": "of thinking about our problem. The answer is obviously yes,\nor I wouldn't be here today. And so in the absence\nof a smarter idea,",
    "start": "1070080",
    "end": "1078390"
  },
  {
    "text": "let's just do the Toucan\nSam approach here and follow our nose and see if we can\njust write our problem in terms",
    "start": "1078390",
    "end": "1086610"
  },
  {
    "text": "of other ones. So, in general, let's\nsay that Tim the Beaver wakes up on day i.",
    "start": "1086610",
    "end": "1092159"
  },
  {
    "text": "He has, basically, two decisions\nthat he can make, right? He can either stay inside\nor he can not stay inside.",
    "start": "1092160",
    "end": "1100410"
  },
  {
    "text": "He can go outside, right? So let's just basically\nhandle these three cases.",
    "start": "1100410",
    "end": "1107320"
  },
  {
    "text": "So in case, one he stays inside. ",
    "start": "1107320",
    "end": "1113429"
  },
  {
    "text": "Well, now what happens\nto his happiness? Well, according to\nmy revised version",
    "start": "1113430",
    "end": "1119430"
  },
  {
    "text": "of this problem, nothing, so,\nin particular, what do we know?",
    "start": "1119430",
    "end": "1124870"
  },
  {
    "text": "Well, if he stays\ninside, then he has-- any decision he can make\ntomorrow, it doesn't matter. He can go inside,\nhe can go outside,",
    "start": "1124870",
    "end": "1131190"
  },
  {
    "text": "whatever, because by\nhaving stayed inside, he's earned himself two\nfree days of going outside",
    "start": "1131190",
    "end": "1136890"
  },
  {
    "text": "if he wants. Right? So, in particular, in this\ncase, we can convince ourselves",
    "start": "1136890",
    "end": "1142500"
  },
  {
    "text": "that this is true, I think.",
    "start": "1142500",
    "end": "1148170"
  },
  {
    "text": "Yes, so, in other words, while\nhe gets no utility for today, he wakes up tomorrow and he\ncan make whatever decision",
    "start": "1148170",
    "end": "1154770"
  },
  {
    "text": "he wants. OK. The second thing he\ncan do is go out.",
    "start": "1154770",
    "end": "1160900"
  },
  {
    "text": " This is where things\nget a little tricky.",
    "start": "1160900",
    "end": "1168110"
  },
  {
    "text": "Right? Can I just do, like, take t\ni and add it to x i plus 1?",
    "start": "1168110",
    "end": "1174170"
  },
  {
    "text": "What goes wrong? AUDIENCE: You go\nout three days-- JUSTIN SOLOMON: Maybe you go\nout three days in a row, right?",
    "start": "1174170",
    "end": "1181440"
  },
  {
    "text": "Somehow, you have to\nremember that, right? And so that's where things are\na little bit of a headache,",
    "start": "1181440",
    "end": "1187295"
  },
  {
    "text": "that, in particular, if I\ngo out today and tomorrow, I can't go out the\nday after that.",
    "start": "1187295",
    "end": "1194080"
  },
  {
    "text": "And somehow, if we just\ndealt with this one case as t i plus x i plus 1,\nwe wouldn't remember that.",
    "start": "1194080",
    "end": "1199870"
  },
  {
    "text": "And that's a problem. So, instead, what we\ncan do is think of there being two subcases, right?",
    "start": "1199870",
    "end": "1206470"
  },
  {
    "text": "So what we're going to assume\nis that not only does he go out today, but that he's\nfree to go out tomorrow.",
    "start": "1206470",
    "end": "1212348"
  },
  {
    "text": "And we're going to make\nthat recursive assumption as we move down our array. So if we do that, well, now\nwe have case a and case b.",
    "start": "1212348",
    "end": "1221860"
  },
  {
    "text": "So in case a, he goes out\ntoday and he stays in tomorrow.",
    "start": "1221860",
    "end": "1227630"
  },
  {
    "text": "Yeah. ",
    "start": "1227630",
    "end": "1235160"
  },
  {
    "text": "OK. So what happens in\nthis case, well-- ",
    "start": "1235160",
    "end": "1240800"
  },
  {
    "text": "by the way, I'm using this\nkind of weird arrow notation. I don't know if\nthis is good or not, but, essentially,\nthe point is that I'm keeping track of cases,\nand then eventually I'm",
    "start": "1240800",
    "end": "1247490"
  },
  {
    "text": "going to want to\nhave to take the max overall of these things. So I don't like the equal\nsign because somehow that's",
    "start": "1247490",
    "end": "1252590"
  },
  {
    "text": "a little misleading. Right. So in that case, well,\nhe gets the utility",
    "start": "1252590",
    "end": "1258050"
  },
  {
    "text": "of having gone out today. Tomorrow he stays\nin, which means",
    "start": "1258050",
    "end": "1264778"
  },
  {
    "text": "that the day after tomorrow\nhe can do whatever the heck he wants. He has free reign. So I can write that using\nthis recursive call.",
    "start": "1264778",
    "end": "1275500"
  },
  {
    "text": "OK. Similarly-- right.",
    "start": "1275500",
    "end": "1282910"
  },
  {
    "text": " I'm getting the hang of this.",
    "start": "1282910",
    "end": "1289940"
  },
  {
    "text": "Sorry, this is way too\nentertaining for me. I can play with\nthis board all day. OK. So in case 2b, he goes out\ntoday and he goes out tomorrow.",
    "start": "1289940",
    "end": "1299665"
  },
  {
    "start": "1299665",
    "end": "1305500"
  },
  {
    "text": "OK? So-- AUDIENCE: He's a party animal. JUSTIN SOLOMON:\nHe's a party animal. He is an animal and\nhe's going out a lot.",
    "start": "1305500",
    "end": "1311500"
  },
  {
    "text": "Right, so in that\ncase, what happens? Well, he gets that. He gets today's utility.",
    "start": "1311500",
    "end": "1319090"
  },
  {
    "text": "He gets tomorrow's utility. ",
    "start": "1319090",
    "end": "1324410"
  },
  {
    "text": "The day after, he\nhas to stay in, so we might as well skip it. And then he can do whatever\nhe wants the day after that.",
    "start": "1324410",
    "end": "1334790"
  },
  {
    "text": "OK? So if we go back, I\nguess, technically, we",
    "start": "1334790",
    "end": "1340580"
  },
  {
    "text": "should revise our\ndefinition of x a tiny bit, that it's not the maximum\nof happiness-- well,",
    "start": "1340580",
    "end": "1345800"
  },
  {
    "text": "we can convince ourselves\nthat it's the same thing. But really, it's not the maximum\nhappiness for day i through n.",
    "start": "1345800",
    "end": "1350900"
  },
  {
    "text": "It's the maximum\nhappiness for day i through n under the\nassumption that he has permission to go out on day i.",
    "start": "1350900",
    "end": "1357040"
  },
  {
    "text": "Right? And that's really\nwhat's going on in our recursive\nset of calls here. OK.",
    "start": "1357040",
    "end": "1362510"
  },
  {
    "text": "So does our recursion\nmake sense here? Cool. All right.",
    "start": "1362510",
    "end": "1367940"
  },
  {
    "text": "So let's see here. So if we're following\nour SRTBOT-- I keep reviewing papers that\nuse the word paradigm a lot,",
    "start": "1367940",
    "end": "1374240"
  },
  {
    "text": "so I feel like I should do that. So what is t? It's the topological order.",
    "start": "1374240",
    "end": "1379710"
  },
  {
    "text": "Notice that x i only\ndepends on larger i's.",
    "start": "1379710",
    "end": "1388059"
  },
  {
    "text": " So in terms of our\ntopological order, the dependence graph\nis really simple.",
    "start": "1388060",
    "end": "1393770"
  },
  {
    "text": "It's just a line,\nso remember that you can think about\ntopological order or you can think about\nbeing acyclic graph.",
    "start": "1393770",
    "end": "1400475"
  },
  {
    "text": "Those are equivalent. We covered that in this course. I kind of like thinking\nabout acyclic graphs.",
    "start": "1400475",
    "end": "1405820"
  },
  {
    "text": "So x1 depends on x2 depends\non x3 depends on x4. That graph has no\ncycles, so we're good.",
    "start": "1405820",
    "end": "1413770"
  },
  {
    "text": "Right. So next we have to\ncome up with our base case for our recursion.",
    "start": "1413770",
    "end": "1420130"
  },
  {
    "text": "Notice that the way I have\nchosen to solve this problem is by calling future\nindices, which",
    "start": "1420130",
    "end": "1427360"
  },
  {
    "text": "means that my base case\nsits at the end of my array because that's sort of like the\nlowest down on the recursion",
    "start": "1427360",
    "end": "1433150"
  },
  {
    "text": "train. The recursion chain is\nwhat I was going for, but I kind of like the\nrecursion train better.",
    "start": "1433150",
    "end": "1439120"
  },
  {
    "text": "In particular, on day n-- well, if he has permission\nto go out on day n,",
    "start": "1439120",
    "end": "1446669"
  },
  {
    "text": "he can do one of two things. He can either go out or not. It doesn't matter, right? So, in particular, we can\nsay that that's the max of 0",
    "start": "1446670",
    "end": "1456220"
  },
  {
    "text": "or t of n. Remember, I didn't tell\nyou that temperatures have to be positive.",
    "start": "1456220",
    "end": "1461770"
  },
  {
    "text": "Maybe he's a Celsius\nkind of a beaver. OK. Right.",
    "start": "1461770",
    "end": "1467110"
  },
  {
    "text": "And then in addition to the-- for convenience,\nnotice that, like,",
    "start": "1467110",
    "end": "1473053"
  },
  {
    "text": "there's a universe where I\nlook beyond the end of my array in my recursive call here, so\nI should probably think about",
    "start": "1473053",
    "end": "1478919"
  },
  {
    "text": "a few extra x's. Obviously, the utility of going\nout on a day that doesn't exist is 0.",
    "start": "1478920",
    "end": "1484890"
  },
  {
    "text": "So we can say that x n plus\n1 equals x n plus 2 equals 0.",
    "start": "1484890",
    "end": "1492270"
  },
  {
    "text": "OK. I've managed to use way\ntoo much space for one simple algorithms problem. ",
    "start": "1492270",
    "end": "1500770"
  },
  {
    "text": "OK. ",
    "start": "1500770",
    "end": "1509120"
  },
  {
    "text": "Yeah? I get credit for that? OK. Right. So now we need to\ndo the o and the t.",
    "start": "1509120",
    "end": "1516429"
  },
  {
    "text": "So what's our original problem? Well, remember that he wants to\nmaximize his happiness starting",
    "start": "1516430",
    "end": "1522950"
  },
  {
    "text": "on day one, so our original\nproblem is just x of 1,",
    "start": "1522950",
    "end": "1532510"
  },
  {
    "text": "or is it? So, remember that\nTim the Beaver-- your instructor is\nvery sloppy when",
    "start": "1532510",
    "end": "1537640"
  },
  {
    "text": "it comes to actually\nreading the problems, as you saw at the beginning. A second mistake for which\nI would have personally",
    "start": "1537640",
    "end": "1543940"
  },
  {
    "text": "lost points were I to solve\nthis problem on my homework is that it didn't ask for just\nthe maximum amount of happiness",
    "start": "1543940",
    "end": "1550540"
  },
  {
    "text": "that Tim could achieve-- that's not very practical\nfor your everyday beaver-- but rather, he wants to\nknow the actual plan.",
    "start": "1550540",
    "end": "1557945"
  },
  {
    "text": "He wants to know what days he\ncan go out and what days he can't. Yeah? And I haven't actually told\nyou how to do that, right?",
    "start": "1557945",
    "end": "1563710"
  },
  {
    "text": "I've only told\nyou how to compute x, which is just the\nmaximum amount of happiness.",
    "start": "1563710",
    "end": "1569659"
  },
  {
    "text": "If I were you guys,\nI think this is a perfectly reasonable\nsimplification that's like a warm up problem to solve. In fact, I would argue it's\nless of a warm up and more",
    "start": "1569660",
    "end": "1577220"
  },
  {
    "text": "the crux of the problem-- and then going back\nand making sure you can convince yourself\nthat you could actually reconstruct the solution.",
    "start": "1577220",
    "end": "1584960"
  },
  {
    "text": "My way of solving this\nwas ever so slightly different from the\none in the problem, but they're equivalent,\nwhich is to say",
    "start": "1584960",
    "end": "1591740"
  },
  {
    "text": "I can make a second array-- I won't write it down,\nbecause I'm slow at writing-- that just says on every day,\nwhether I took option 1, option",
    "start": "1591740",
    "end": "1599110"
  },
  {
    "text": "2a, or option 2b. And now I can reconstruct\nmy plan very easily, right? So I look at x1, if I took\noption 1, then I stay in",
    "start": "1599110",
    "end": "1608330"
  },
  {
    "text": "and I look at day two. If I took option 2a, then I\ncan label today, tomorrow,",
    "start": "1608330",
    "end": "1615870"
  },
  {
    "text": "and the day after. Oh, wait-- yeah, that's right. I can label today's choice,\ntomorrow's choice, the day's",
    "start": "1615870",
    "end": "1622400"
  },
  {
    "text": "after choice, and then\nlook three days later and recurse that way.",
    "start": "1622400",
    "end": "1627500"
  },
  {
    "text": "Option b is kind of similar. So a reasonable way to\nreconstruct the actual set",
    "start": "1627500",
    "end": "1633432"
  },
  {
    "text": "of what days you go out\nand what days you go in is just to remember, as you do\nyour memoization or whatever,",
    "start": "1633432",
    "end": "1639950"
  },
  {
    "text": "whether you did\noption 1, 2a, or 2b. And then it's pretty easy\nto reconstruct from there. Maybe I'll let you guys\nconvince yourselves",
    "start": "1639950",
    "end": "1646212"
  },
  {
    "text": "of that at home or\nin the last 8 seconds if you happen to be the two\naudience members that I have.",
    "start": "1646212",
    "end": "1651530"
  },
  {
    "text": "And then, finally, we\nneed to do our time thing.",
    "start": "1651530",
    "end": "1656760"
  },
  {
    "text": "And most of the\ntime arguments here follow more or less\nthe same pattern, which is you count the\nnumber of subproblems and the time per subproblem,\nyou multiply those two things",
    "start": "1656760",
    "end": "1664027"
  },
  {
    "text": "together, and you\nget your runtime. We're going to\nsee in one problem on this problem set that's\nnot quite right because we",
    "start": "1664027",
    "end": "1669920"
  },
  {
    "text": "have to account for\nsome precomputation. But in this case, it is. ",
    "start": "1669920",
    "end": "1677220"
  },
  {
    "text": "Right, so let's see, what\nare our subproblems here? Well, essentially-- I guess\nI didn't actually say it, but you have to take the\nmax of these three values.",
    "start": "1677220",
    "end": "1686210"
  },
  {
    "text": "This is the max of\nthree expressions which have a constant number\nof plus signs and lookups and memory and all\nthat good stuff.",
    "start": "1686210",
    "end": "1692610"
  },
  {
    "text": "So each subproblem\ntakes order one time.",
    "start": "1692610",
    "end": "1701309"
  },
  {
    "text": "How many problems are there? Well, there's, I\nguess, n plus 2 max,",
    "start": "1701310",
    "end": "1706830"
  },
  {
    "text": "if you want to be\nconservative about it. So, in particular, there's\norder n subproblems, right?",
    "start": "1706830",
    "end": "1714750"
  },
  {
    "text": "So all I have to do is multiply\nthese two things together, and my algorithm\ntakes order n time.",
    "start": "1714750",
    "end": "1720880"
  },
  {
    "text": " And that's our solution\nto problem number one.",
    "start": "1720880",
    "end": "1727730"
  },
  {
    "text": "Any questions so far? Yes? Uh-oh. AUDIENCE: When I was thinking\nabout the problem beforehand,",
    "start": "1727730",
    "end": "1734010"
  },
  {
    "text": "I was wondering could\nyou use base cases-- right now, we have two\ndifferent kinds of base case,",
    "start": "1734010",
    "end": "1740590"
  },
  {
    "text": "a base case for x of n and a\nbase case for things after. Can I remove the first\none and add an x of n",
    "start": "1740590",
    "end": "1748280"
  },
  {
    "text": "plus 3 equals 0 as well? What would that do? JUSTIN SOLOMON: Could\nI remove the first one",
    "start": "1748280",
    "end": "1753830"
  },
  {
    "text": "and add an x of n plus 3? Yeah, I guess that's fine.",
    "start": "1753830",
    "end": "1759960"
  },
  {
    "text": "I'm sorry, that's not a\nparticularly helpful answer for the people\nwatching on video. My answer to this question\nyou can't hear is yes.",
    "start": "1759960",
    "end": "1768150"
  },
  {
    "text": "So the question, to repeat,\nwas this base case was somehow",
    "start": "1768150",
    "end": "1773550"
  },
  {
    "text": "kind of complicated-looking. To be fair, it's\nthe one that I was given in [INAUDIBLE]\nassignment, but that's OK.",
    "start": "1773550",
    "end": "1780419"
  },
  {
    "text": "But the question was is\nthis truly necessary. In particular, can I\nget rid of the x n case",
    "start": "1780420",
    "end": "1786270"
  },
  {
    "text": "and instead add a third\nday past the end of time, which also has value 0?",
    "start": "1786270",
    "end": "1792600"
  },
  {
    "text": "And if you, kind of, look at\nthat plus case b, I think--",
    "start": "1792600",
    "end": "1799640"
  },
  {
    "text": "or rather, case a-- think you can convince--\nwell, case a and b, for that matter-- you can\nconvince yourselves that these",
    "start": "1799640",
    "end": "1804973"
  },
  {
    "text": "are equivalent, right? That's absolutely right. So I could add a third day after\nthe end of this thing, which",
    "start": "1804973",
    "end": "1811100"
  },
  {
    "text": "also has value 0. Or, by the way, I could just\nsay in my code if n is--",
    "start": "1811100",
    "end": "1816259"
  },
  {
    "text": "if i is bigger than n, return 0. That's the same thing.",
    "start": "1816260",
    "end": "1821472"
  },
  {
    "text": "Yeah, and then I\nguess I don't have to worry about that x n case. Yeah, these are the same.",
    "start": "1821472",
    "end": "1826610"
  },
  {
    "text": "To each their own. Fabulous question. Any others that I can\nanswer while we're at it?",
    "start": "1826610",
    "end": "1834030"
  },
  {
    "text": "Cool. All right. So that's problem one.  Writing too big-- I don't\nlike this big chalk, you know.",
    "start": "1834030",
    "end": "1841980"
  },
  {
    "text": "OK. So problem two is the\none that got me all hot and bothered yesterday. So let's see if we do any\nbetter in front of people,",
    "start": "1841980",
    "end": "1847880"
  },
  {
    "text": "because that's usually\nthe best way to improve a problem solving skill. Right.",
    "start": "1847880",
    "end": "1853280"
  },
  {
    "text": "So in problem two,\nwhich, annoyingly, is also probably the\nmost practical problem",
    "start": "1853280",
    "end": "1858860"
  },
  {
    "text": "on this problem set. Essentially, you have a-- I suppose I should\nwrite some stuff down.",
    "start": "1858860",
    "end": "1863870"
  },
  {
    "text": " So in problem-- I used the wrong side--",
    "start": "1863870",
    "end": "1870410"
  },
  {
    "text": "two, you have an\noperating system Menix--",
    "start": "1870410",
    "end": "1876090"
  },
  {
    "text": "whatever-- which is-- apparently, it's very simple.",
    "start": "1876090",
    "end": "1881442"
  },
  {
    "text": "AUDIENCE: Menix, Unix. JUSTIN SOLOMON: Oh, I get it. [LAUGHS] It doesn't\nmean I have to like it.",
    "start": "1881442",
    "end": "1887950"
  },
  {
    "text": "Right. [LAUGHS] So, in\nMenix, apparently,",
    "start": "1887950",
    "end": "1895830"
  },
  {
    "text": "the only thing that my\noperating system can do is compute edit\ndistance between files.",
    "start": "1895830",
    "end": "1901590"
  },
  {
    "text": "And it wants to\ndo so efficiently. So we have that a file\nis a sequence of strings.",
    "start": "1901590",
    "end": "1910315"
  },
  {
    "text": " And I believe we\nsay their length is",
    "start": "1910315",
    "end": "1917840"
  },
  {
    "text": "less than or equal to k. That's going to come into\nplay a little bit later.",
    "start": "1917840",
    "end": "1922940"
  },
  {
    "text": "And the strings are\nbasically just lines of the different files.",
    "start": "1922940",
    "end": "1928020"
  },
  {
    "text": "So there's three different\nways that we can change a file.",
    "start": "1928020",
    "end": "1933103"
  },
  {
    "text": "So here are the\nchanges we can do.  Change number 1\nis to add a line.",
    "start": "1933103",
    "end": "1940760"
  },
  {
    "text": " Change number 2 is\nto remove a line.",
    "start": "1940760",
    "end": "1946780"
  },
  {
    "text": " And change number 3 is to swap.",
    "start": "1946780",
    "end": "1954590"
  },
  {
    "text": "But a caveat for this\ninteresting model",
    "start": "1954590",
    "end": "1960169"
  },
  {
    "text": "of what's cheap and what's\nnot is that, apparently,",
    "start": "1960170",
    "end": "1965390"
  },
  {
    "text": "swapping two lines is cheap\nbecause they exist in memory. Like, maybe I'm, I don't\nknow, using a linked",
    "start": "1965390",
    "end": "1970910"
  },
  {
    "text": "list or something\nto store files, and so swapping two\npointers isn't so bad.",
    "start": "1970910",
    "end": "1976520"
  },
  {
    "text": "But inserting and\nremoving a line is hard because, I don't know,\nmemory allocation is expensive, like Menix is actually\noperating on clay tablets.",
    "start": "1976520",
    "end": "1984740"
  },
  {
    "text": "And I can chop my clay\ntablets into different slices and just pick them up and\nswap them, and that's fine,",
    "start": "1984740",
    "end": "1991879"
  },
  {
    "text": "but if I want to add\na line in my file, I have to go to the Tigris and\nEuphrates and pull out the--",
    "start": "1991880",
    "end": "1997810"
  },
  {
    "text": "or whatever it was,\nthe Eugris and the Tiphrates-- and\npull out a stone.",
    "start": "1997810",
    "end": "2003660"
  },
  {
    "text": "It's a lot of work to make\na new line or to dispose. So these are expensive\nand this is cheap.",
    "start": "2003660",
    "end": "2015679"
  },
  {
    "text": "And so the question\nthat I'm trying to sa-- that I'm trying to say and that\nthe problem is trying to ask",
    "start": "2015680",
    "end": "2021890"
  },
  {
    "text": "is that you are given files\nA and B with n lines each.",
    "start": "2021890",
    "end": "2032800"
  },
  {
    "text": " We want to know what the minimum\nnumber of non-swap operations",
    "start": "2032800",
    "end": "2043710"
  },
  {
    "text": "it'll take, and\nso, in other words, the minimum number of time for\nyou to add and remove lines",
    "start": "2043710",
    "end": "2048780"
  },
  {
    "text": "to transform A into B,\nessentially, with low cost.",
    "start": "2048780",
    "end": "2060300"
  },
  {
    "text": " And, in fact, just to be nice--",
    "start": "2060300",
    "end": "2065919"
  },
  {
    "text": "I think it's actually kind of a\ncritical hint in this problem-- we give you the runtime.",
    "start": "2065920",
    "end": "2072190"
  },
  {
    "text": "And I'm going to, kind of,\nignore it in my answer, notice that I did something\nwrong, and then go back and fix it. This is different from the\nway the answer is written,",
    "start": "2072190",
    "end": "2078399"
  },
  {
    "text": "where god came in and said,\nlike, oh, we observe that we're probably going to\nneed this thing, so we're going to go\nahead and do it here.",
    "start": "2078400",
    "end": "2084519"
  },
  {
    "text": "I think that's, maybe, not\nrepresentative of the logic here. Right, so the runtime here\nis k n plus n squared.",
    "start": "2084520",
    "end": "2093250"
  },
  {
    "text": "The first thing to note\nis there is a k here. Yeah, and so someday we're going\nto have to compare strings,",
    "start": "2093250",
    "end": "2102480"
  },
  {
    "text": "because that's what k is. And I think that's\nthe hint that's implicit in this problem. It's easy to miss.",
    "start": "2102480",
    "end": "2107940"
  },
  {
    "text": "And so, indeed, what\nwe're going to notice is we're going to\nlook at our solution and say, well, wait a second, if\nwe didn't incur a factor of k,",
    "start": "2107940",
    "end": "2114720"
  },
  {
    "text": "we must have done\nsomething wrong. And, indeed, that's\ngoing to be the case, but it's only a minor\nfix to change it.",
    "start": "2114720",
    "end": "2123942"
  },
  {
    "text": "AUDIENCE: There's another\nimportant distinction on this [INAUDIBLE]. JUSTIN SOLOMON: Oh, I'm sorry. Yeah, right, when I swap things,\nthey have to be adjacent.",
    "start": "2123942",
    "end": "2135006"
  },
  {
    "text": "I can't write at the\nbottom of the board. That's supposed to be a, d,\nj, for those watching at home.",
    "start": "2135006",
    "end": "2141893"
  },
  {
    "text": "But they have to\nbe-- you can only swap lines that are\nadjacent, as they appear in their original file.",
    "start": "2141893",
    "end": "2147668"
  },
  {
    "text": "I'll say it out loud rather than\ntry and write it because you it's going to take the rest\nof the lecture to do that. OK, any other things\nI've forgotten?",
    "start": "2147668",
    "end": "2156237"
  },
  {
    "text": "There's a high likelihood. I'm bad at this. OK. So this one was annoying.",
    "start": "2156237",
    "end": "2162870"
  },
  {
    "text": "And it's not actually annoying. It's actually a relatively easy\ninstance of a very well-known dynamic program plus a tiny\nbit of additional stuff, which",
    "start": "2162870",
    "end": "2171780"
  },
  {
    "text": "is called edit distance. In fact, I think if you guys\nare looking for intuition on this problem,\nyou might google",
    "start": "2171780",
    "end": "2178380"
  },
  {
    "text": "that one first as, sort of, a-- what was that? AUDIENCE: [INAUDIBLE] JUSTIN SOLOMON: Oh, in fact\nyou're doing a recitation.",
    "start": "2178380",
    "end": "2184320"
  },
  {
    "text": "Oh, that's why it's not\ntotally unreasonable to come up with the answer\nhere, even better. But even if you\nhadn't, you know,",
    "start": "2184320",
    "end": "2190560"
  },
  {
    "text": "this is just another\ndynamic programming problem that's just a little\nbit more annoying than your average dynamic\nprogramming problem.",
    "start": "2190560",
    "end": "2198720"
  },
  {
    "text": "Now, the solution written\nout in the course notes works from, sort of, the\nlast line of the file",
    "start": "2198720",
    "end": "2204480"
  },
  {
    "text": "downward, in some sense-- upward, whatever.",
    "start": "2204480",
    "end": "2211230"
  },
  {
    "text": "I, like, literally lost\ntwo hours of my life trying to think about\nediting files from the end up",
    "start": "2211230",
    "end": "2216330"
  },
  {
    "text": "and just getting myself\nall upset and confused. So here, I'm going to attempt\nto do it in the other direction and probably introduce a bunch\nof mistakes in the process.",
    "start": "2216330",
    "end": "2224170"
  },
  {
    "text": "So what do we do in\ndynamic programming if we don't know\nwhat else to do? We do sort stuff, SRTBOT.",
    "start": "2224170",
    "end": "2232040"
  },
  {
    "text": "And so let's do that here. So, in particular, what\nare our subproblems?",
    "start": "2232040",
    "end": "2237109"
  },
  {
    "text": "This is a little bit funky. So actually, even before\nwe do the S of SRTBOT, let's think about our\nproblem a little bit.",
    "start": "2237110",
    "end": "2243652"
  },
  {
    "text": " Let's think about\nwhat it actually means to edit a\nfile because this",
    "start": "2243652",
    "end": "2250380"
  },
  {
    "text": "is what helped me think\nabout the right answer here, which is to\nsay, you know--",
    "start": "2250380",
    "end": "2255558"
  },
  {
    "text": "so what's going on? I have, like, two documents. This is document A. This is\ndocument B. Each one of them",
    "start": "2255558",
    "end": "2263370"
  },
  {
    "text": "is composed of a bunch of lines. And I'm basically\ntrying to turn A into B. And the only thing I can\ndo is scroll out of line,",
    "start": "2263370",
    "end": "2271260"
  },
  {
    "text": "insert, just hit the Enter\nkey, or do a third thing where I kind of like\nswap two things that",
    "start": "2271260",
    "end": "2276423"
  },
  {
    "text": "are adjacent to one another. That is the only thing I can do. And the way I like to\nthink about this problem--",
    "start": "2276423",
    "end": "2283553"
  },
  {
    "text": "there's kind of\nan annoyance here, which I think is a\ntypical annoyance in dynamic programming\nproblems, which is that the order of operations\nsuggests that this problem is",
    "start": "2283553",
    "end": "2292900"
  },
  {
    "text": "a lot, combinatorially, more\ndifficult than it is, because, like-- OK, let's think about how I\nactually edit documents-- like,",
    "start": "2292900",
    "end": "2299290"
  },
  {
    "text": "I spend 2/3 of my day editing\nbad grad student writing-- is like I'm jumping all over the\nplace between different lines.",
    "start": "2299290",
    "end": "2304900"
  },
  {
    "text": "Like, first I delete\nthis line, then maybe I go to the\nbottom of my document and delete some other one. That would be a big problem\nfrom a dynamic programming",
    "start": "2304900",
    "end": "2312430"
  },
  {
    "text": "perspective. I can't jump all\nover my document, because keeping track of\nthat whole edit history",
    "start": "2312430",
    "end": "2317950"
  },
  {
    "text": "is going to be somehow\ncombinatorially ginormous. Right? I'm not the Track Changes\nbutton in Microsoft Word.",
    "start": "2317950",
    "end": "2325120"
  },
  {
    "text": "I want the minimum\nnumber of changes. And if I have to recurse\nover all possible edits",
    "start": "2325120",
    "end": "2331030"
  },
  {
    "text": "to every single\nline in any order, that's an awful\nlot of factorials and 2 to the n's floating around\nthat I don't want to have.",
    "start": "2331030",
    "end": "2337240"
  },
  {
    "text": "Right? And so that's the sort of\ncrux of the challenge here, is to organize my approach\nto editing these files",
    "start": "2337240",
    "end": "2345670"
  },
  {
    "text": "in a way that doesn't\nrequire me to have to do this sort of combinatorial\njumping all over the place.",
    "start": "2345670",
    "end": "2351088"
  },
  {
    "text": "And I think it's also the\none where there's a sort of-- like I know Jerry\nCaine at Stanford talks a lot about the\nrecursive leap of faith.",
    "start": "2351088",
    "end": "2358480"
  },
  {
    "text": "Like, somehow\ndividing your problem into organized\nsubproblems, that's really where the\nchallenge lives here.",
    "start": "2358480",
    "end": "2365690"
  },
  {
    "text": "So if I were a more\norganized PhD advisor, the way that I would edit\na file, or a clay tablet,",
    "start": "2365690",
    "end": "2373990"
  },
  {
    "text": "I guess, in this case,\nwould be linearly, that I might as well\ndo whatever the heck",
    "start": "2373990",
    "end": "2379480"
  },
  {
    "text": "I'm going to do to line one\nbefore I move on the line two. And at the end of the\nday, even if I did stuff",
    "start": "2379480",
    "end": "2385202"
  },
  {
    "text": "in a different order,\nyou can convince yourself that I could always\norder it in such a way that all the edits that\nI do to the first line,",
    "start": "2385202",
    "end": "2390588"
  },
  {
    "text": "kind of, happen before\nlines later in the document, with the possible exception\nof this swap thing.",
    "start": "2390588",
    "end": "2397980"
  },
  {
    "text": "But we'll see that\nsomehow doesn't matter. And, moreover, if\nI do an edit, I",
    "start": "2397980",
    "end": "2403730"
  },
  {
    "text": "might as well do the edit to\nmake things better, right? There's no reason to start\nwilly-nilly inserting",
    "start": "2403730",
    "end": "2409640"
  },
  {
    "text": "and removing lines. I might as well always do an\noperation that improves stuff.",
    "start": "2409640",
    "end": "2415890"
  },
  {
    "text": "And so thinking about that\nsort of logic leads me-- ta-da-- to a particular\nway that I might write down",
    "start": "2415890",
    "end": "2423260"
  },
  {
    "text": "my S, my some\nproblems here, which is to say that I'm going to\nthink about editing my document",
    "start": "2423260",
    "end": "2428720"
  },
  {
    "text": "line by line. So, in other words, once\nI've dealt with line one,",
    "start": "2428720",
    "end": "2433810"
  },
  {
    "text": "meaning that I found\nsome way to mess with it and make it match line\none of the other guy,",
    "start": "2433810",
    "end": "2439170"
  },
  {
    "text": "I'm just going to\nthink about removing it and then think about the\nrest of the document.",
    "start": "2439170",
    "end": "2444190"
  },
  {
    "text": "You start saying, aha, that\nsentence sounds like recursion. And that's right. That's how we're going\nto solve this problem.",
    "start": "2444190",
    "end": "2449619"
  },
  {
    "text": "OK? So, in particular, here's\ngoing to be our thing. I'm going to do a slightly\ndifferent one in the solution--",
    "start": "2449620",
    "end": "2455450"
  },
  {
    "text": "so you guys should\nall be vigilant-- which is I'm going to write x ij\nto be the min work to convert.",
    "start": "2455450",
    "end": "2466470"
  },
  {
    "text": " I'm not a Python programmer,\nbut hopefully I got this right.",
    "start": "2466470",
    "end": "2475560"
  },
  {
    "text": "i colon is going to\nbe everything from i to the end of the file.",
    "start": "2475560",
    "end": "2480730"
  },
  {
    "text": "So in other words, this is the\nsuffix version of our problem--",
    "start": "2480730",
    "end": "2486310"
  },
  {
    "text": "and into B j colon, like that.",
    "start": "2486310",
    "end": "2496600"
  },
  {
    "text": "OK. So, in other words,\nI have a little-- it's kind of like a video--\nlike, think about Tetris.",
    "start": "2496600",
    "end": "2502570"
  },
  {
    "text": "Once you get that\nfull line of blocks, you can just throw that\nline of blocks away and the whole video\ngame moves down.",
    "start": "2502570",
    "end": "2507850"
  },
  {
    "text": "There's somehow\nsomething very similar going on here, which\nis the second I've managed to get a match\nfor line one of document into line one of\nthe next document,",
    "start": "2507850",
    "end": "2514810"
  },
  {
    "text": "I'm just going to throw\nit away and pretend like I have two documents\nwith one less line in them.",
    "start": "2514810",
    "end": "2521500"
  },
  {
    "text": "Now, the thing that got\nme all hung up last night, my original problem assumes\nthat both of my documents",
    "start": "2521500",
    "end": "2527360"
  },
  {
    "text": "have the same length. But here, I'm not making\nthat assumption, right?",
    "start": "2527360",
    "end": "2532840"
  },
  {
    "text": "And, essentially, what\nwe're going to figure out is that that actually\ndoesn't matter a whole lot, that if I end up with one\ndocument of length k--",
    "start": "2532840",
    "end": "2540340"
  },
  {
    "text": "well, I shouldn't use k-- one document of length l and\nanother document of length 0,",
    "start": "2540340",
    "end": "2545380"
  },
  {
    "text": "what's the amount of work\nthat I should do to convert? Well, l, because my only choice\nis to insert a bunch of lines",
    "start": "2545380",
    "end": "2553300"
  },
  {
    "text": "in one document, by the way,\nor delete a bunch of lines from the other. Those are dual to one another.",
    "start": "2553300",
    "end": "2558660"
  },
  {
    "text": "They're exactly the same. I'm philosophizing a lot because\nI'm also convincing myself that my answer is\nOK in the process.",
    "start": "2558660",
    "end": "2565420"
  },
  {
    "text": "OK. So this is going to be\nour set subproblems. And now we have to\ndo the r, right?",
    "start": "2565420",
    "end": "2573070"
  },
  {
    "text": "We have to relate, something\nwe struggle with in the math department sometimes.",
    "start": "2573070",
    "end": "2580020"
  },
  {
    "text": "And, essentially, the way\nthat I went about this is to just do a\nbillion different cases",
    "start": "2580020",
    "end": "2585720"
  },
  {
    "text": "of all the possible edits that\nI could do to line i and line j. And that's perfectly\nfine in this problem. I think the problem\nis a little slick.",
    "start": "2585720",
    "end": "2591870"
  },
  {
    "text": "And the way that they're\nwritten the solution, they've convinced themselves\nthat some things are equivalent to others\nand removed them. But you don't have to.",
    "start": "2591870",
    "end": "2597660"
  },
  {
    "text": "As long as there's\na constant number of cases, your golden Ponyboy. So, in particular, let's\nthink about some cases.",
    "start": "2597660",
    "end": "2605770"
  },
  {
    "text": "So first of all, if line i\nmatches line j of my document--",
    "start": "2605770",
    "end": "2612040"
  },
  {
    "text": "remember that it's\nnot really line j. It's like making a\ndocument that just happens to start at line j.",
    "start": "2612040",
    "end": "2617930"
  },
  {
    "text": "It's like taking scissors. Well, then I can match\nthem with zero-cost because the beginnings\nare in the same place.",
    "start": "2617930",
    "end": "2624599"
  },
  {
    "text": "And I can move my\nTetris came down one, and that's perfectly fine. So case one, I think,\nis the easiest one,",
    "start": "2624600",
    "end": "2630460"
  },
  {
    "text": "which is if A i equals\nB j, then I can just",
    "start": "2630460",
    "end": "2638680"
  },
  {
    "text": "remove that line\nfrom both documents and move forward,\nin which case-- I'll use my same\ngoofy notation--",
    "start": "2638680",
    "end": "2644635"
  },
  {
    "text": "I'm going to get that x ij.  Well, I'm going to\njust increment i and j",
    "start": "2644635",
    "end": "2650340"
  },
  {
    "text": "and keep going, like that.",
    "start": "2650340",
    "end": "2655560"
  },
  {
    "text": "Cool? So what's something\nelse I could do? I could delete a line.",
    "start": "2655560",
    "end": "2662040"
  },
  {
    "text": "Yeah, so what happens-- ",
    "start": "2662040",
    "end": "2667269"
  },
  {
    "text": "OK. So case two is\ndelete A i, right?",
    "start": "2667270",
    "end": "2676210"
  },
  {
    "text": "That's a different thing\nI can do the line i. Well, now what do I have to do? I have a document on\nthe left-hand side,",
    "start": "2676210",
    "end": "2681450"
  },
  {
    "text": "which is 1 line shorter. And on the right-hand\nside, nothing changed. But deleting a line\ncost me a dollar.",
    "start": "2681450",
    "end": "2687920"
  },
  {
    "text": "So, in particular,\nI have that x ij.",
    "start": "2687920",
    "end": "2693020"
  },
  {
    "text": "Well, what happens? Well, I got rid of one\nline, but I had to pay.",
    "start": "2693020",
    "end": "2702799"
  },
  {
    "text": "OK. Let's think about\nsome other things. You could delete B j. ",
    "start": "2702800",
    "end": "2710693"
  },
  {
    "text": "This case actually\nisn't in the solution because it turns out\nto be unnecessary. AUDIENCE: Well, we're\nonly allowed to edit A.",
    "start": "2710693",
    "end": "2716620"
  },
  {
    "text": "JUSTIN SOLOMON: Oh, I'm\nonly allowed to edit A? Oh, in that case, I\ndon't have to delete B j. I really didn't read these\nproblems very closely.",
    "start": "2716620",
    "end": "2722202"
  },
  {
    "text": "That's my bad. This would have\nmade it much easier. I really should\nread these things.",
    "start": "2722202",
    "end": "2727770"
  },
  {
    "text": "Cool, so that eliminates half\nof the cases on my notes. Fabulous. Incidentally, you could do these\nthings on the other direction",
    "start": "2727770",
    "end": "2735430"
  },
  {
    "text": "and it really wouldn't change\nthis problem a whole lot. Sorry, you know, I\nhave this bad habit",
    "start": "2735430",
    "end": "2740600"
  },
  {
    "text": "when I'm reading research papers\nof reading the research paper I wanted to be there\ninstead of the one that's actually on the paper.",
    "start": "2740600",
    "end": "2746210"
  },
  {
    "text": "And, somehow, it's very\nsimilar phenomenon here. OK. Right. So, great. So I can only edit\ndocument A, which",
    "start": "2746210",
    "end": "2752330"
  },
  {
    "text": "makes this probably easier\nthan what I was worried about. Fabulous. In that case-- ah, bananas.",
    "start": "2752330",
    "end": "2760400"
  },
  {
    "text": "With our third case\nhere, well, let's see,",
    "start": "2760400",
    "end": "2765670"
  },
  {
    "text": "I could also insert a line. Let's see. So what ends up happening there?",
    "start": "2765670",
    "end": "2772119"
  },
  {
    "text": "So I can only edit document A? So that makes my cases\ndifferent than the ones I wrote down on my notes.",
    "start": "2772120",
    "end": "2777742"
  },
  {
    "start": "2777742",
    "end": "2784505"
  },
  {
    "text": "Sorry. OK. ",
    "start": "2784506",
    "end": "2796270"
  },
  {
    "text": "OK. So if I insert-- let's do this live. Yeah, OK, so if I\ninsert a line at line i,",
    "start": "2796270",
    "end": "2802551"
  },
  {
    "text": "I might as well\nmake it match B j. There's no reason not to. Right? I might as well kill off one\nelement of B while I'm at it.",
    "start": "2802551",
    "end": "2809980"
  },
  {
    "text": "Yeah? So if I do that, what\nends up happening? Well, I still have\nto match line i.",
    "start": "2809980",
    "end": "2815520"
  },
  {
    "text": "I've just, kind of, moved\nit lower in my file. But I've, in essence,\nkilled one line in file B",
    "start": "2815520",
    "end": "2821730"
  },
  {
    "text": "by making it match this\nnew line that I inserted. In my notes, because I\nthought I could edit B, I said, OK, I can just\ndelete the line in B instead.",
    "start": "2821730",
    "end": "2828720"
  },
  {
    "text": "And somehow, logically, that's\na little easier to think about. But these are exactly\ndual to one another.",
    "start": "2828720",
    "end": "2833830"
  },
  {
    "text": "So, in that case, I have x ij. Well, I still have\nto deal with A i.",
    "start": "2833830",
    "end": "2839100"
  },
  {
    "text": "I haven't gotten rid of it. But I've matched line j. So I paid $1 for\ninserting a line.",
    "start": "2839100",
    "end": "2847740"
  },
  {
    "text": "And now I have that\nbecause I've gotten rid of a line in the other file.",
    "start": "2847740",
    "end": "2853977"
  },
  {
    "text": "If I stopped here, by the way,\nI would have it at a distance. But, unfortunately for me,\nI have one additional case,",
    "start": "2853978",
    "end": "2860000"
  },
  {
    "text": "which is mild irritant, as they\nsay, which is that I can swap.",
    "start": "2860000",
    "end": "2866420"
  },
  {
    "text": " First of all, can I always swap?",
    "start": "2866420",
    "end": "2872930"
  },
  {
    "text": "I mean, I can, but\nif I swap two lines and they still don't match the\nlines on the right-hand side, I'm kind of hosed, right,\nbecause you can convince",
    "start": "2872930",
    "end": "2879869"
  },
  {
    "text": "yourself that in\nthe next step, I'm going to have to delete\nsomething anyway. Swapping was free. If I swap and delete, that's\nthe same thing as just deleting,",
    "start": "2879870",
    "end": "2887060"
  },
  {
    "text": "so it doesn't really matter. So, in particular,\nwhat that means is I might as well only\ncheck the swap if it actually",
    "start": "2887060",
    "end": "2893269"
  },
  {
    "text": "helps me. Yeah? So, in other words,\nif I have A--",
    "start": "2893270",
    "end": "2900692"
  },
  {
    "text": "now you have to be a little bit\ncareful because I'm swapping. So if the next guy in A\nequals B, the current guy in B",
    "start": "2900692",
    "end": "2908030"
  },
  {
    "text": "and the current guy in A\nequals the next guy in B. Well,",
    "start": "2908030",
    "end": "2916260"
  },
  {
    "text": "now I can swap this guy and\nkill off two lines in my files while I'm at it, right? So, in this case,\nI get that X ij.",
    "start": "2916260",
    "end": "2926190"
  },
  {
    "text": "Well, swapping doesn't\ncost me anything, and I killed off two things. So that's the recursion.",
    "start": "2926190",
    "end": "2936663"
  },
  {
    "text": "So if I were to write\nthis out on my homework, what should I do? Well, I shouldn't-- I mean,\nprobably if you use this error notation, I don't think\nit would be a big deal.",
    "start": "2936663",
    "end": "2943260"
  },
  {
    "text": "But really, you\nshould add a line at the bottom saying\nthat I can choose to do any of these things. So really, my\nrecursive call is x",
    "start": "2943260",
    "end": "2949859"
  },
  {
    "text": "ij gets the min\nof all of these 1, 2, 3, 4 expressions\nthat I've written here.",
    "start": "2949860",
    "end": "2957140"
  },
  {
    "text": "OK. AUDIENCE: What if you have\nthe first condition but not the second one? JUSTIN SOLOMON: What if I have\nthe first condition but not",
    "start": "2957140",
    "end": "2964405"
  },
  {
    "text": "the second one? Ah, so that's a great question. Yeah, so the question\nwas like, OK, well,",
    "start": "2964405",
    "end": "2970460"
  },
  {
    "text": "what if I can match the next\nline but not the current one.",
    "start": "2970460",
    "end": "2975820"
  },
  {
    "text": "Well, there's two different\nthings you could do. You could either make\nanother case for that. That's perfectly fine. In fact, you could do that.",
    "start": "2975820",
    "end": "2981690"
  },
  {
    "text": "You could do that I matched\nthe second condition, not the first one, whatever. You can just enumerate\nas many things you want as long\nas they're all true",
    "start": "2981690",
    "end": "2987530"
  },
  {
    "text": "and there's a constant number. Alternatively, you\ncan convince yourself that actually is unnecessary\nhere because a different--",
    "start": "2987530",
    "end": "2993410"
  },
  {
    "text": "so that's like swapping. But then one of those two\nlines is still a mismatch, so you're going to have\nto delete something",
    "start": "2993410",
    "end": "2999922"
  },
  {
    "text": "in the next step. So you might as well just\ndelete first, rather than swap and then delete.",
    "start": "2999922",
    "end": "3005559"
  },
  {
    "text": "And so that's why that\ncase isn't necessary. Yeah? AUDIENCE: [INAUDIBLE]\nin the first case. JUSTIN SOLOMON: Exactly.",
    "start": "3005560",
    "end": "3011320"
  },
  {
    "text": "Exactly. So if you swapped and you\nkilled a line, then, in effect, I think it's a combination\nof case 1 and case 2 here, if you, kind of,\nexpand your recursion out.",
    "start": "3011320",
    "end": "3018710"
  },
  {
    "text": "But if you're having\ntrouble convincing yourself of that, that's fine,\njust add a case here. Yeah.",
    "start": "3018710",
    "end": "3025167"
  },
  {
    "text": "Any other questions? I'm going to ask quickly because\nthis problem makes me nervous. AUDIENCE: [INAUDIBLE]",
    "start": "3025167",
    "end": "3032675"
  },
  {
    "text": "JUSTIN SOLOMON: Sure. OK. In the worst case, if\nwe've done something wrong, you can certainly add\nanother case here.",
    "start": "3032675",
    "end": "3039010"
  },
  {
    "text": "I'll think about it at home. OK. So since I've managed\nto pontificate too long,",
    "start": "3039010",
    "end": "3044202"
  },
  {
    "text": "let's keep moving here. AUDIENCE: Can we swap them\nif they [INAUDIBLE] match? JUSTIN SOLOMON: Oh,\nyou know, the problem",
    "start": "3044202",
    "end": "3049590"
  },
  {
    "text": "is it might have been-- AUDIENCE: --used\nin the final file. So if you can make swap one\nmatch one of them and not",
    "start": "3049590",
    "end": "3055680"
  },
  {
    "text": "the other, then that's not OK. JUSTIN SOLOMON: Yeah, because\nat the end of the day,",
    "start": "3055680",
    "end": "3060970"
  },
  {
    "text": "the files have to agree. Like, you have to match B to A. AUDIENCE: Swap and\ndelete is cheaper than doing two deletes\nand two inserts.",
    "start": "3060970",
    "end": "3067573"
  },
  {
    "text": "AUDIENCE: No, no, no,\nbut the swap and delete is illegal because you\nhave to use both ones.",
    "start": "3067573",
    "end": "3072724"
  },
  {
    "text": "That's a condition\nin the pocket. JUSTIN SOLOMON: Oh, I'm sorry. That's a better answer. So Jason points out\nthat if I swap, then",
    "start": "3072725",
    "end": "3078037"
  },
  {
    "text": "I can't delete it because the\nway the problem is written. So that effectively\nremoves this case.",
    "start": "3078037",
    "end": "3083350"
  },
  {
    "text": "Otherwise, I think-- I guess Erik is-- AUDIENCE: Actually, there are\ntwo important conditions-- JUSTIN SOLOMON: Oh, sorry. I've managed to\ntotally botch this,",
    "start": "3083350",
    "end": "3088619"
  },
  {
    "text": "which is totally unsurprising. Yeah. So I think the problem also\nstates that if you swap,",
    "start": "3088620",
    "end": "3094590"
  },
  {
    "text": "the swap has to be useful. And that's why this\nadditional case that Erik is asking about\nwhere you swap and then you",
    "start": "3094590",
    "end": "3102150"
  },
  {
    "text": "match one line but not\nthe other is unnecessary. You might be able to relax that\nby just adding a case here,",
    "start": "3102150",
    "end": "3108058"
  },
  {
    "text": "but since the problem\ndoesn't ask it, I'm not going to think about. OK. Right. So, under all the\nassumptions of this problem",
    "start": "3108058",
    "end": "3114690"
  },
  {
    "text": "that I didn't read but are\nvery important to solving this problem\ncorrectly, I believe we really have written\ndown all of our cases here.",
    "start": "3114690",
    "end": "3123940"
  },
  {
    "text": "OK. So let's continue with\nour SRTBOT paradigm.",
    "start": "3123940",
    "end": "3129210"
  },
  {
    "text": "So now we have all\nof our recursion. The topological order here is a\nlittle bit trickier than normal",
    "start": "3129210",
    "end": "3137010"
  },
  {
    "text": "because now you've got\na two-dimensional array, but it follows a pattern\nthat's pretty typical here, which is that x ij only\ndepends on other x ij's",
    "start": "3137010",
    "end": "3151740"
  },
  {
    "text": "with higher i plus j.",
    "start": "3151740",
    "end": "3158150"
  },
  {
    "text": "So I think about my\ngraph of subproblems. If I wrote this in a 2D\nmatrix, it always, kind of,",
    "start": "3158150",
    "end": "3163370"
  },
  {
    "text": "points down and to\nthe right, maybe, which is what's\nmaking it acyclic. This is a very typical\npattern in these sort",
    "start": "3163370",
    "end": "3169790"
  },
  {
    "text": "of two-dimensional dynamic\nprogramming problem. All right. So let's see here, SRTBOT.",
    "start": "3169790",
    "end": "3175310"
  },
  {
    "text": "So we need our base case. This isn't too bad\nbecause, essentially, when you have boring\ndocuments, they're",
    "start": "3175310",
    "end": "3182599"
  },
  {
    "text": "very easy to match\nto one another. So, in particular, for any\ni, if I'm at line n plus 1--",
    "start": "3182600",
    "end": "3192735"
  },
  {
    "text": "in other words, I have a blank\ndocument that I'm matching to document i-- well, how much work\ndo I have to do?",
    "start": "3192735",
    "end": "3200140"
  },
  {
    "text": "You have to be a\nlittle bit careful. This is where the suffix version\nof this problem is a little bit more annoying than\nthe prefix one--",
    "start": "3200140",
    "end": "3205750"
  },
  {
    "text": "or have I managed to swap\nthose backward again-- that, in particular, the\nremaining number of lines",
    "start": "3205750",
    "end": "3212010"
  },
  {
    "text": "looks like n plus\n1 minus i, which is",
    "start": "3212010",
    "end": "3218140"
  },
  {
    "text": "different than in the problem. It's just i because\nthey're working in the other direction--\nin the solution, rather.",
    "start": "3218140",
    "end": "3223740"
  },
  {
    "text": "And similarly, you need a second\ncase for those two here, right? So you have x n plus 1 j is\ngoing to be n plus 1 minus j.",
    "start": "3223740",
    "end": "3238248"
  },
  {
    "text": "Cool. OK. So we're going to\ncontinue with SRTBOT here.",
    "start": "3238248",
    "end": "3243620"
  },
  {
    "text": " So what is our original case? Kind of by definition\nit's x 1, 1 or 0 0,",
    "start": "3243620",
    "end": "3253530"
  },
  {
    "text": "depending on how you index. And then, finally,\nwhat's our runtime?",
    "start": "3253530",
    "end": "3259450"
  },
  {
    "text": "Well, let's see, there's n\nplus 1 squared subproblems,",
    "start": "3259450",
    "end": "3267180"
  },
  {
    "text": "and, of course, that's\nequal to order n squared. The subproblems are just\na constant amount of work,",
    "start": "3267180",
    "end": "3274530"
  },
  {
    "text": "so they're each\nwith constant work. ",
    "start": "3274530",
    "end": "3281750"
  },
  {
    "text": "So our entire runtime\nis order n squared. And hopefully by watching me\nbe confused in front of you",
    "start": "3281750",
    "end": "3289900"
  },
  {
    "text": "and think through\nthis problem, you too will see how the problem\nsolving procedure",
    "start": "3289900",
    "end": "3295000"
  },
  {
    "text": "can happen in your own\ndisorganized brains. OK. So that concludes our\ntreatment of this problem here.",
    "start": "3295000",
    "end": "3303780"
  },
  {
    "text": "That, I think, is\nthe hardest one. So the other two, thankfully,\nare much easier to think about,",
    "start": "3303780",
    "end": "3308820"
  },
  {
    "text": "I thought. But I never liked edit distance. I remember seeing that and\nundergrad algorithms getting",
    "start": "3308820",
    "end": "3313961"
  },
  {
    "text": "confused. OK. So the next problem, problem 3\nhere, deals with Saggy Mimsin.",
    "start": "3313961",
    "end": "3322800"
  },
  {
    "text": "And she has a bunch\nof block, and she wants to stack them on top\nof each other, as one does.",
    "start": "3322800",
    "end": "3328420"
  },
  {
    "text": "And as a young\nstructural engineer, she has a few criteria\non her problem.",
    "start": "3328420",
    "end": "3334790"
  },
  {
    "text": " Let me go to the right\npage in my notes here.",
    "start": "3334790",
    "end": "3340110"
  },
  {
    "text": " Right.",
    "start": "3340110",
    "end": "3346140"
  },
  {
    "text": "So this is problem 3. So we have that block bi has\nsize that looks like width wi",
    "start": "3346140",
    "end": "3359040"
  },
  {
    "text": "by height hi by length li. I remember getting confused\nin elementary school",
    "start": "3359040",
    "end": "3366089"
  },
  {
    "text": "about the difference between\nwidth and length all the time. To me, those always\nsounded the same. But it doesn't really\nmatter, because she's",
    "start": "3366090",
    "end": "3372112"
  },
  {
    "text": "happy to rotate her cubes\nany way that she pleases. There's a key detail which I\ndid remember to actually read",
    "start": "3372112",
    "end": "3379680"
  },
  {
    "text": "in this problem, which is\nthat she has at least three of each type, where type\nhere means that I can permute",
    "start": "3379680",
    "end": "3391333"
  },
  {
    "text": "these three numbers\nany way that I want because that's the same\nas just rotating a block. But any time she has one\nblock that's like 1 by 2 by 3,",
    "start": "3391333",
    "end": "3398240"
  },
  {
    "text": "she has at least two more\nin her bag somewhere. OK. APPLE WATCH: It's 6.",
    "start": "3398240",
    "end": "3404240"
  },
  {
    "text": "JUSTIN SOLOMON: Oh, 1 times\n2 times 3 is equal to 6. Thank you, Apple Watch. OK.",
    "start": "3404240",
    "end": "3409559"
  },
  {
    "text": "So that's odd. So she can orient\nher block any way that she wants, meaning she\ncan rotate it in any fashion",
    "start": "3409560",
    "end": "3418010"
  },
  {
    "text": "that she'd like. And so what we're trying\nto do, what we want is the max height where\nshe's stacking her n blocks.",
    "start": "3418010",
    "end": "3430380"
  },
  {
    "text": "I suppose I should\nsay they're n blocks.",
    "start": "3430380",
    "end": "3435720"
  },
  {
    "text": "So she wants the max height\nthat she can achieve. But just to be kind of\nannoying, or because, again,",
    "start": "3435720",
    "end": "3442119"
  },
  {
    "text": "she's very concerned with\nstructural stability-- she lives in an\nearthquake zone-- she would like\nwith the condition",
    "start": "3442120",
    "end": "3449670"
  },
  {
    "text": "that each block is strictly\nsupported on the block beneath it. Right? ",
    "start": "3449670",
    "end": "3460350"
  },
  {
    "text": "So in other words, if this\nis the base of one block, then the next block that's\nstacked on top of it",
    "start": "3460350",
    "end": "3466980"
  },
  {
    "text": "has to be strictly contained\nwithin the block below it. Right?",
    "start": "3466980",
    "end": "3472980"
  },
  {
    "text": "So does the problem make sense? Have I omitted any\ncritical details? I don't think I have this time. This one's a little easier.",
    "start": "3472980",
    "end": "3479618"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] JUSTIN SOLOMON: Oh, yeah. And she can't do anything crazy. She can't do a weird,\nlike, balance it",
    "start": "3479618",
    "end": "3486660"
  },
  {
    "text": "on this edge kind\nof thing, which-- Erik is absolutely right--\ncould actually give her a taller",
    "start": "3486660",
    "end": "3492802"
  },
  {
    "text": "tower than you could get\nif you're only allowed to rotate blocks 90 degrees. I don't think the problem\nstates that explicitly, but this",
    "start": "3492802",
    "end": "3498900"
  },
  {
    "text": "isn't a trigonometry class, so\nI think we're in good shape. OK. Right.",
    "start": "3498900",
    "end": "3504210"
  },
  {
    "text": "So that's our\nbasic problem here. And this is one of\nthese problems that is going to be a dynamic\nprogramming problem,",
    "start": "3504210",
    "end": "3510795"
  },
  {
    "text": "but, again, similar to\nmany of the things that we saw in lecture, is not\ntotally obvious how,",
    "start": "3510795",
    "end": "3516000"
  },
  {
    "text": "because somehow she has\nthis big, disorganized bag of blocks. You could imagine\na universe where",
    "start": "3516000",
    "end": "3521880"
  },
  {
    "text": "there's 2 to the n different\nthings she could do, right? For every single\nblock, she could decide whether or not\nto put it in her stack,",
    "start": "3521880",
    "end": "3528747"
  },
  {
    "text": "and then she has to do\na bunch of other work to verify whether\nshe can stack them while supporting the strict\nsupport condition or not.",
    "start": "3528747",
    "end": "3536410"
  },
  {
    "text": "So, initially, that\nseems kind of annoying. So what we have to\ndo, which, again, is pretty common to a\nlot of these problems,",
    "start": "3536410",
    "end": "3542970"
  },
  {
    "text": "is place some order on it. I mean that both in\nthe entropy sense, and also, like, literally,\nwere going to order stuff.",
    "start": "3542970",
    "end": "3549930"
  },
  {
    "text": "And, in particular, we'll\nsee that this problem has a lot in common\nwith that longest common subsequence problem that\nwe saw in lecture-- increasing",
    "start": "3549930",
    "end": "3557880"
  },
  {
    "text": "subsequence, sorry. Right. So here's some observations\nabout our problem",
    "start": "3557880",
    "end": "3566860"
  },
  {
    "text": "which are going to help. First of all, when\nwe stack our blocks,",
    "start": "3566860",
    "end": "3573260"
  },
  {
    "text": "we might as well always align\nthe shorter side of the block on top to the shorter side\nof the block underneath it.",
    "start": "3573260",
    "end": "3580470"
  },
  {
    "text": "Right?  Let me draw a picture\nof what I mean. ",
    "start": "3580470",
    "end": "3590900"
  },
  {
    "text": "So let's say I have a really-- a block whose base\nkind of looks like that and then another block\nwhich is also rectangular",
    "start": "3590900",
    "end": "3598299"
  },
  {
    "text": "that I sit on top\nof it like that. Then notice I could-- so in this\ncase, the shorter edge of one",
    "start": "3598300",
    "end": "3604747"
  },
  {
    "text": "block is aligned to the\nlonger edge of the other. Notice I can rotate\nit 90 degrees and it still supports on one another.",
    "start": "3604748",
    "end": "3611779"
  },
  {
    "text": "So there's never a case-- you convince yourself with\njust a few inequalities-- where I don't, kind of, always\nput the long side parallel",
    "start": "3611780",
    "end": "3618640"
  },
  {
    "text": "to the long side of the guy\nunderneath and the short side parallel to the short\nguy underneath it. Does that makes sense?",
    "start": "3618640",
    "end": "3624570"
  },
  {
    "text": "Cool. So that's observation one. ",
    "start": "3624570",
    "end": "3629990"
  },
  {
    "text": "Observation two, can\nthey ever-- like, let's say that Maggie\nactually-- sorry,",
    "start": "3629990",
    "end": "3636650"
  },
  {
    "text": "Saggy actually had not just\nthree blocks of a type, but like 25.",
    "start": "3636650",
    "end": "3643020"
  },
  {
    "text": "So she's just has hella blocks. My question is does it matter.",
    "start": "3643020",
    "end": "3649109"
  },
  {
    "text": "The answer is no because this\nword here is really critical,",
    "start": "3649110",
    "end": "3654978"
  },
  {
    "text": "which is that there's\nstrict support. So your block only\nhas so many faces. And, in fact, by\nobservation one,",
    "start": "3654978",
    "end": "3663329"
  },
  {
    "text": "really all that matters is which\nof the three types of faces is sitting on top because we\ncan just always rotate it.",
    "start": "3663330",
    "end": "3671080"
  },
  {
    "text": "So there's three configurations\nof every block, so, at most,",
    "start": "3671080",
    "end": "3677400"
  },
  {
    "text": "can any one configuration\nappear more than one time? No, because of the\nstrict support condition.",
    "start": "3677400",
    "end": "3682529"
  },
  {
    "text": "Right? Otherwise, the rectangles\nwould match up, and that's against the rules.",
    "start": "3682530",
    "end": "3687570"
  },
  {
    "text": "So, in particular-- oops,\nthe number after two is-- the number after 1 is 2,\nwhich looks like that.",
    "start": "3687570",
    "end": "3697280"
  },
  {
    "text": "OK. Right. So, in particular, there\nare only three orientations.",
    "start": "3697280",
    "end": "3703430"
  },
  {
    "text": " This is just which of the\nthree edges of the block",
    "start": "3703430",
    "end": "3709630"
  },
  {
    "text": "is the one that's going away\nfrom the floor, the normal to the ground. And moreover, each can appear\nless than or equal to 1 time.",
    "start": "3709630",
    "end": "3721809"
  },
  {
    "text": "That's good because it limits\nthe size of our problem. And, finally-- oops, I collapsed\ntwo of the cases in my notes",
    "start": "3721810",
    "end": "3733839"
  },
  {
    "text": "into one case here. But that's OK. And, in fact, notice\nthat the problem tells us that she has at least\nthree of each type.",
    "start": "3733840",
    "end": "3740210"
  },
  {
    "text": "So, in a sense, if the problem-- if you observe one of a\nblock you might as well just",
    "start": "3740210",
    "end": "3746869"
  },
  {
    "text": "throw away the rest\nbecause you know that you can use it at most three times. And she has three of that block. We can't use it more than\nthree times, so in a sense,",
    "start": "3746870",
    "end": "3753860"
  },
  {
    "text": "that's just superfluous\ninformation. OK. Right. So this allows us to put\na little bit of order",
    "start": "3753860",
    "end": "3762619"
  },
  {
    "text": "here, because notice that when\nI look at the stack of blocks here, what do we know? If I look at the\nlength of the long side",
    "start": "3762620",
    "end": "3769940"
  },
  {
    "text": "and the length of the short\nside in the plane of the ground, those numbers have to decrease\non every level of my block.",
    "start": "3769940",
    "end": "3777780"
  },
  {
    "text": "They can never increase. That's what the strict\nsupport conditions says, combined with observation\none, actually, even",
    "start": "3777780",
    "end": "3783350"
  },
  {
    "text": "without observation one,\nwhich is good news, right? So this is what's going to\nallow us to impose order",
    "start": "3783350",
    "end": "3789470"
  },
  {
    "text": "on our problem, namely, that\nwe can sort by the edge lengths because we know that we\nhave this support condition.",
    "start": "3789470",
    "end": "3794670"
  },
  {
    "text": "OK. So let's fill in some\ndetails of our algorithm. ",
    "start": "3794670",
    "end": "3800549"
  },
  {
    "text": "OK. ",
    "start": "3800550",
    "end": "3806310"
  },
  {
    "text": "So originally-- already we can\nsee that our list of blocks is kind of useless\nbecause the width, length,",
    "start": "3806310",
    "end": "3812000"
  },
  {
    "text": "and values are sorted in\nways that don't matter. Moreover, if we have more\nthan three of a given block,",
    "start": "3812000",
    "end": "3819029"
  },
  {
    "text": "that's somehow not super useful. So, instead of that,\nwithout loss of generality,",
    "start": "3819030",
    "end": "3827500"
  },
  {
    "text": "let's assume-- so WLOG here-- we can always\ntake our block and assume--",
    "start": "3827500",
    "end": "3836238"
  },
  {
    "text": "I'm going to do this slightly\ndifferent from my notes-- that the width is less than\nor equal to the height is less",
    "start": "3836238",
    "end": "3846553"
  },
  {
    "text": "than or equal to the length. OK. So every block, if\nthis isn't the case, I could go down my array\nof blocks and sort.",
    "start": "3846553",
    "end": "3852460"
  },
  {
    "text": "And sorting a list of three\nnumbers is constant time. OK?",
    "start": "3852460",
    "end": "3857800"
  },
  {
    "text": "Right. So what does this\nallow me to do? Well, I'm going to say\nthat a block type actually",
    "start": "3857800",
    "end": "3864670"
  },
  {
    "text": "is an ordered set where\nthe third number is going to be the axis that points up.",
    "start": "3864670",
    "end": "3870710"
  },
  {
    "text": "And the reason to\ndo that is that we know that we can never\nuse that more than once for any type of a block. Yeah?",
    "start": "3870710",
    "end": "3876260"
  },
  {
    "text": "So now I'm going to make a new\nlist of blocks with a capital B",
    "start": "3876260",
    "end": "3887360"
  },
  {
    "text": "because I like blocks. And it's going to look\nlike the following.",
    "start": "3887360",
    "end": "3892589"
  },
  {
    "text": "So if width-- so if w is\nless than h is less than l,",
    "start": "3892590",
    "end": "3897673"
  },
  {
    "text": "then I'm going to\ntake every block and duplicate it three times. Notice that I might end up\nwith a list with, like, nine",
    "start": "3897673",
    "end": "3904780"
  },
  {
    "text": "times of every block,\nbut we'll fix that later. Right. And it's going to look\nlike the following, which",
    "start": "3904780",
    "end": "3912670"
  },
  {
    "text": "is that, OK, I'm going\nto have wi, hi, li.",
    "start": "3912670",
    "end": "3919270"
  },
  {
    "text": "This is like describing a way\nto stack my block because it's saying this is the short\nside, this is the long side,",
    "start": "3919270",
    "end": "3925240"
  },
  {
    "text": "this is the vertical side. And there are three cases\nwhere any one of these guys",
    "start": "3925240",
    "end": "3930730"
  },
  {
    "text": "can be the vertical side. So there's one. Let's say that the h\nis the vertical side,",
    "start": "3930730",
    "end": "3936370"
  },
  {
    "text": "then w has to go before l. So it would be wi, li,\nhi, and a third one",
    "start": "3936370",
    "end": "3945009"
  },
  {
    "text": "where the third guy is w. H is less than l, so\nit would be hi, li, wi.",
    "start": "3945010",
    "end": "3952420"
  },
  {
    "text": "And those are all\nthe different ways that I can, sort of, orient\nthese blocks in my stacking,",
    "start": "3952420",
    "end": "3957730"
  },
  {
    "text": "assuming that I impose condition\none for convenience here. OK.",
    "start": "3957730",
    "end": "3963737"
  },
  {
    "text": "I'm going to make a\nnew list of blocks where I take every\nblock in my original set and I just duplicate\nit three times this way",
    "start": "3963737",
    "end": "3969340"
  },
  {
    "text": "after I sort its coordinates. And now, well, what\ndo I need to do?",
    "start": "3969340",
    "end": "3974655"
  },
  {
    "text": "For one thing, this thing\nmay have too many blocks. I might have a block that's\nrepeated more than one time and I can't do that.",
    "start": "3974655",
    "end": "3980198"
  },
  {
    "text": "And moreover, it's going\nto be convenient to have this sorted because I've got\nto stack these guys eventually. Yeah?",
    "start": "3980198",
    "end": "3985810"
  },
  {
    "text": "So I'm going to sort that list. And I want to do it--",
    "start": "3985810",
    "end": "3991960"
  },
  {
    "text": "I can never say this\nword-- lexicographically, meaning that I'm going sort out\nthe first coordinate, and then",
    "start": "3991960",
    "end": "3997630"
  },
  {
    "text": "the second and the\nthird lexicographically.",
    "start": "3997630",
    "end": "4005410"
  },
  {
    "text": "Notice this length is 3 n if\nI had n blocks to start with. So this entire thing takes\norder n log n time, which",
    "start": "4005410",
    "end": "4014829"
  },
  {
    "text": "is important to account for. And then I can\nremove duplicates. ",
    "start": "4014830",
    "end": "4023072"
  },
  {
    "text": "I'll let you guys\nconvince yourself you can do this in order n time. An easier way would've been\nmaking second array and just",
    "start": "4023072",
    "end": "4028970"
  },
  {
    "text": "kind of move-- and only add stuff\nwhen you didn't see the same thing before. OK.",
    "start": "4028970",
    "end": "4034430"
  },
  {
    "text": "And, finally, now these are\nordered in a really nice way because I can stack\nmy blocks, but only",
    "start": "4034430",
    "end": "4040970"
  },
  {
    "text": "ever looking to the\nright in my sorted list, assuming that I'm stacking\nfrom the top of my tower down,",
    "start": "4040970",
    "end": "4048880"
  },
  {
    "text": "which is, I think, sort of\nwhat's going on in this thing. OK. So now, finally, we\ncan do our SRTBOT.",
    "start": "4048880",
    "end": "4057080"
  },
  {
    "text": "And I might do S and R\nand T and then allow you guys to think about the\nrest because, as usual, I'm talking too much.",
    "start": "4057080",
    "end": "4063680"
  },
  {
    "text": "OK. So now this is starting to\nlook like a subsequence problem",
    "start": "4063680",
    "end": "4069579"
  },
  {
    "text": "because, essentially, when\nI stuck my blocks, if I use this block here-- again, if I'm stacking from\nmy tower from the top down--",
    "start": "4069580",
    "end": "4077559"
  },
  {
    "text": "all the blocks that can\nsit underneath this one have to be further to the right\nin my array because of the way",
    "start": "4077560",
    "end": "4083680"
  },
  {
    "text": "that I sorted. Now, that doesn't mean\nthat I can put anything",
    "start": "4083680",
    "end": "4088740"
  },
  {
    "text": "on the right\nunderneath this guy, but it does mean that I\nknow nothing to the left can go underneath this guy.",
    "start": "4088740",
    "end": "4093779"
  },
  {
    "text": "That's the way to\nthink about it. OK. So it is going to be SRTBOT. So S, what I'm going\nto say is that x i here",
    "start": "4093780",
    "end": "4103439"
  },
  {
    "text": "is equal to the maximum height\nof my tower, and I'm going to-- taking a little\nbit of inspiration",
    "start": "4103439",
    "end": "4109140"
  },
  {
    "text": "from our subsequence problem\nthat we've already seen, I'm going to force\nmyself to use block i.",
    "start": "4109140",
    "end": "4114720"
  },
  {
    "text": "We'll see if that's convenient. ",
    "start": "4114720",
    "end": "4126310"
  },
  {
    "text": "i and possibly-- just\nfor fun, maybe we'll",
    "start": "4126310",
    "end": "4134729"
  },
  {
    "text": "do the prefix version of\nthis problem this time. So now I can use any\nof the previous blocks.",
    "start": "4134729",
    "end": "4144310"
  },
  {
    "text": "So I can use the first i\nblocks to make a tower, but I'm forced to use block i. By the way, from now\non, when I use indices,",
    "start": "4144310",
    "end": "4150380"
  },
  {
    "text": "it's into this sorted array. OK. So this is a problem.",
    "start": "4150380",
    "end": "4155739"
  },
  {
    "text": "Obviously, if I\ncould solve for x, I would be done, because I\ncould get the maximum height by just iterating over all the\nx's and choosing the biggest",
    "start": "4155740",
    "end": "4163330"
  },
  {
    "text": "possible value here. And the question is, how\ndo I do this recursively? ",
    "start": "4163330",
    "end": "4172950"
  },
  {
    "text": "OK. So here's our recursive step. So let's say that I\nuse block i, well,",
    "start": "4172950",
    "end": "4182028"
  },
  {
    "text": "because we know we have to. Right? So, in particular, we have--",
    "start": "4182029",
    "end": "4189139"
  },
  {
    "text": "now I'm seeing why they\ndidn't use this notation in their answer, but that's OK. ",
    "start": "4189140",
    "end": "4200370"
  },
  {
    "text": "Let's use another letter to\nrefer to the third coordinate. ",
    "start": "4200370",
    "end": "4206412"
  },
  {
    "text": "AUDIENCE: v i for\nvertical [INAUDIBLE].. JUSTIN SOLOMON: Yeah,\nlet's say v i is always the third coordinate. We've already used\nw, h, and l, and I'm",
    "start": "4206413",
    "end": "4211620"
  },
  {
    "text": "afraid if I reuse\nthem after sorting, it's going to confuse people. So v i is the third\ncoordinate of the i-th element",
    "start": "4211620",
    "end": "4222030"
  },
  {
    "text": "of my sorted array. That's fine, OK. Right, so what is my\nheight if I use x i here?",
    "start": "4222030",
    "end": "4231600"
  },
  {
    "text": "Well, I get some height from vi. And in addition to\nthat, I get whatever I stack underneath that guy.",
    "start": "4231600",
    "end": "4239219"
  },
  {
    "text": "So, in particular,\nI get that xi. Well, I get the\nheight of the block",
    "start": "4239220",
    "end": "4245110"
  },
  {
    "text": "that I just decided to use. And now, what are all my cases?",
    "start": "4245110",
    "end": "4250930"
  },
  {
    "text": "Well, I could decide\nto do nothing else, like, just not use\nany other blocks. That gives me a height of 0.",
    "start": "4250930",
    "end": "4257739"
  },
  {
    "text": "Or, well, let's see here.",
    "start": "4257740",
    "end": "4262940"
  },
  {
    "text": "I could use the x's,\nbut I have to be careful that I can actually stack them. So, in particular,\nwell, I need--",
    "start": "4262940",
    "end": "4272225"
  },
  {
    "text": " yeah, I can take an\nx j value, but I've",
    "start": "4272225",
    "end": "4280220"
  },
  {
    "text": "got to be careful that I\ncan stick it underneath. So, in particular,\nwhat do we know?",
    "start": "4280220",
    "end": "4286710"
  },
  {
    "text": "Well, I can do anything\nfrom 1 to i minus 1",
    "start": "4286710",
    "end": "4294410"
  },
  {
    "text": "because that's sort of\nthe definition of xi. But, in particular, I\ncan stack it on top.",
    "start": "4294410",
    "end": "4303090"
  },
  {
    "text": " So one easy way to do\nthis is I just array--",
    "start": "4303090",
    "end": "4308490"
  },
  {
    "text": "I iterate through the first i\nminus 1 elements of my array, and I just check my\nstacking condition",
    "start": "4308490",
    "end": "4313830"
  },
  {
    "text": "for every single\none of them relative to block j, so, in other words,\nthat the width and the height--",
    "start": "4313830",
    "end": "4319830"
  },
  {
    "text": "or rather, the first and\nthe second coordinate satisfy the strict\ninequalities that I need. I'm phrasing this\nsentence neutrally",
    "start": "4319830",
    "end": "4326910"
  },
  {
    "text": "because I forget whether this\nis increasing or decreasing. But in any event-- so what do I do?",
    "start": "4326910",
    "end": "4332289"
  },
  {
    "text": "I check all of the blocks\nthat I could possibly stack from the index of\nthe array perspective. I make sure that I could\nactually stack them,",
    "start": "4332290",
    "end": "4338910"
  },
  {
    "text": "thanks to the size\nof the current block that I just decided\nto add to my stack.",
    "start": "4338910",
    "end": "4344070"
  },
  {
    "text": "And I move recursively. OK. Right. So this is great\nbecause now we're",
    "start": "4344070",
    "end": "4350010"
  },
  {
    "text": "in exactly the recursive\nscenario we wanted to be in, because x i\nonly depends on x j, where",
    "start": "4350010",
    "end": "4356140"
  },
  {
    "text": "j is smaller than i. And that is exactly\nour topological ordering that we need.",
    "start": "4356140",
    "end": "4363449"
  },
  {
    "text": "If you do that on your homework,\nyou get a minus n for large n. OK.",
    "start": "4363450",
    "end": "4368730"
  },
  {
    "text": "Similarly, what's our base case? Well, obviously, if I\nonly have one block,",
    "start": "4368730",
    "end": "4376020"
  },
  {
    "text": "I might as well use it. So in that case, we have x1 is\nequal to v(1) our notation here",
    "start": "4376020",
    "end": "4383190"
  },
  {
    "text": "like that. Our original one, we have to\nbe a little bit careful because",
    "start": "4383190",
    "end": "4388510"
  },
  {
    "text": "of the way that I've defined\nx, because x assumes that I've used a particular\nblock, so I have to say,",
    "start": "4388510",
    "end": "4396760"
  },
  {
    "text": "well, I might not have actually\nchosen the very last block as the one I want to keep.",
    "start": "4396760",
    "end": "4401880"
  },
  {
    "text": "So I have to iterate. I can say that,\nreally, my original is the max over i of x i.",
    "start": "4401880",
    "end": "4407927"
  },
  {
    "text": "So one of these blocks has\nto be the block on top. I'm just going to iterate\nover all the possible ones and find it.",
    "start": "4407927",
    "end": "4413489"
  },
  {
    "text": "And then our final thing\nto do is the runtime t.",
    "start": "4413490",
    "end": "4418740"
  },
  {
    "text": "This one is mildly trickier\nthan the previous runtimes that we've done so far\nin our example problem.",
    "start": "4418740",
    "end": "4425370"
  },
  {
    "text": "In particular, how many\nsubproblems are there? Well, there's n subproblems--",
    "start": "4425370",
    "end": "4432360"
  },
  {
    "text": "or I'll say order n because\nI'm always off by 1-- ",
    "start": "4432360",
    "end": "4439630"
  },
  {
    "text": "corresponding to each\nblock in my stack here. But how much time\ndoes each subproblem",
    "start": "4439630",
    "end": "4445930"
  },
  {
    "text": "take, at least the way\nthat I've written it here? Well, what I have to do? I have to loop over all\nof the possible blocks",
    "start": "4445930",
    "end": "4452500"
  },
  {
    "text": "and find the one that\nI can stack on top of and then take the max. So there's a loop here from 1\nto i. i is upper bounded by n.",
    "start": "4452500",
    "end": "4462480"
  },
  {
    "text": "So this is order n\nsubproblems times order n work per subproblem.",
    "start": "4462480",
    "end": "4472510"
  },
  {
    "text": "So at the end of the\nday, my algorithm is going to be order\nn squared time.",
    "start": "4472510",
    "end": "4478699"
  },
  {
    "text": "And, of course, again-- I guess I promised it and\nthen I didn't actually do it-- to actually implement\nthis algorithm,",
    "start": "4478700",
    "end": "4484197"
  },
  {
    "text": "there's sort of two\ndifferent ways to do it. I could write a recursive\ncall plus a table.",
    "start": "4484197",
    "end": "4489639"
  },
  {
    "text": "The tables maybe initialized\nto a bunch of NaNs. And then I implement this\nfunction recursively. But before I do that, I say, if\nthe table does not equal NaN,",
    "start": "4489640",
    "end": "4498343"
  },
  {
    "text": "just return the\nvalue in the table and otherwise call\nthis recursion. Or I can just have a\nfour loop from 1 to n",
    "start": "4498343",
    "end": "4506300"
  },
  {
    "text": "and build up the table\none element at a time. And both of those\nare exactly the same from a runtime perspective.",
    "start": "4506300",
    "end": "4513550"
  },
  {
    "text": "OK. So I think I've managed\nto watch that much more than my notes or\nthe written solution, but the problem\nitself is actually",
    "start": "4513550",
    "end": "4519660"
  },
  {
    "text": "pretty straightforward. So if you guys read through\nthe answer plus some of-- I think, actually, the\nhard parts of this problem",
    "start": "4519660",
    "end": "4524762"
  },
  {
    "text": "were not the\ndynamic programming, it was all the observations\nyou need to get there. So that's why I spent a\nlittle more time there.",
    "start": "4524762",
    "end": "4531270"
  },
  {
    "text": "OK. So, as usual, I haven't\nleft myself enough time for the last problem. But we have a few\nminutes and that'll",
    "start": "4531270",
    "end": "4537810"
  },
  {
    "text": "be sufficient to\nset up the parts. I actually found\nthe last problem to be easier even though\nit technically is, sort of,",
    "start": "4537810",
    "end": "4544020"
  },
  {
    "text": "two dynamic programs in one. So I think the logic\nis a little easier. OK.",
    "start": "4544020",
    "end": "4549239"
  },
  {
    "text": "So AUDIENCE: Use the\nbackboard [INAUDIBLE]..",
    "start": "4549240",
    "end": "4555603"
  },
  {
    "text": "JUSTIN SOLOMON: I think\nthis is the backboard. Yeah, I was just realizing\nthat this room doesn't work the same way as the other one.",
    "start": "4555603",
    "end": "4562679"
  },
  {
    "text": "Yeah, this is embarrassing. You know, I spent all day\nthinking about topology, and this is like a classic kind\nof problem in that universe.",
    "start": "4562680",
    "end": "4570770"
  },
  {
    "text": " OK. Well, we'll just erase\none board at a time,",
    "start": "4570770",
    "end": "4577119"
  },
  {
    "text": "and I'll try not to write\nthree feet wide this time. Oh, this is probably the\none board I shouldn't use.",
    "start": "4577120",
    "end": "4582828"
  },
  {
    "text": " I don't think I\nlike this classroom.",
    "start": "4582828",
    "end": "4589060"
  },
  {
    "text": "OK. So, right, in our final problem,\nwe're given an n-by-n grid.",
    "start": "4589060",
    "end": "4596360"
  },
  {
    "text": "And on our n-by-n\ngrid, Princess Apple-- Banana--",
    "start": "4596360",
    "end": "4601855"
  },
  {
    "text": "AUDIENCE: Plum. JUSTIN SOLOMON: --Plum. Princess Plum.  Right, so here's\nour basic setup.",
    "start": "4601855",
    "end": "4608300"
  },
  {
    "text": "There's a big grid of\nstuff, or maybe a small grid",
    "start": "4608300",
    "end": "4613753"
  },
  {
    "text": "because I don't\nfeel like drawing. And every grid square can\nhave one of three things. We can have a mushroom.",
    "start": "4613753",
    "end": "4619920"
  },
  {
    "text": "We can have a tree. Or it can have nothing at all. And our princess starts\nhere, and she goes--",
    "start": "4619920",
    "end": "4629180"
  },
  {
    "text": "she wants to go there. And moreover, there's\na couple of things",
    "start": "4629180",
    "end": "4635330"
  },
  {
    "text": "that are worth noting here. So, first of all, her\npath is quick, meaning",
    "start": "4635330",
    "end": "4644330"
  },
  {
    "text": "that she can only traverse\n2n minus 1 grid squares",
    "start": "4644330",
    "end": "4655600"
  },
  {
    "text": "to get from one\ncorner to the other. And, apparently, she's\nvery into mushrooms,",
    "start": "4655600",
    "end": "4660850"
  },
  {
    "text": "and she'd like to accumulate\nas many as possible along her path. That's the basic setup here.",
    "start": "4660850",
    "end": "4666639"
  },
  {
    "text": "So she wants to get from the\nupper left to lower right. And, in order to do so, she\nwants to take a quick path.",
    "start": "4666640",
    "end": "4674670"
  },
  {
    "text": "Her main priority\nis to be efficient. But among the\ndifferent quick paths, she wants to pick up\na lot of mushrooms.",
    "start": "4674670",
    "end": "4681270"
  },
  {
    "text": "It's understandable. AUDIENCE: And not\nwalk through trees. JUSTIN SOLOMON: And not only\nthrough trees, thank you. So maybe there's\nsome grid squares",
    "start": "4681270",
    "end": "4687780"
  },
  {
    "text": "that are marked with a\ntree, meaning that you just can't go there. That's a tree.",
    "start": "4687780",
    "end": "4693230"
  },
  {
    "text": "OK. Right, so that's our\nbasic setup here. But the problem does--",
    "start": "4693230",
    "end": "4698480"
  },
  {
    "text": "it takes a bit of\na twist, right? It's not saying just could\nbe the shortest path, which would be very much like the\nlast kind of unit in 6.006.",
    "start": "4698480",
    "end": "4706400"
  },
  {
    "text": "But rather, the\nquestion is, sort of, what is the number of paths\nthat she can take from one side",
    "start": "4706400",
    "end": "4713240"
  },
  {
    "text": "to the other and what is the\nmaximum number of mushrooms, is roughly the question\nasking, or at least",
    "start": "4713240",
    "end": "4719810"
  },
  {
    "text": "what I remember from\nreading it last night. AUDIENCE: The number of paths\nthat maximizes the same number.",
    "start": "4719810",
    "end": "4724832"
  },
  {
    "text": "JUSTIN SOLOMON: That's right. So she has to take the\nmost number of mushrooms she can, but there may be\nmore than one path that",
    "start": "4724832",
    "end": "4731380"
  },
  {
    "text": "gets you there\nthat is quick, that satisfies this\ncondition, in which case, she wants the count of\nthe total number of ways",
    "start": "4731380",
    "end": "4736720"
  },
  {
    "text": "you could get from one\ncorner to the other. Why, you might ask-- why not?",
    "start": "4736720",
    "end": "4741739"
  },
  {
    "text": "OK. So, right. So, for instance, maybe\nthere's a mushroom here.",
    "start": "4741740",
    "end": "4750530"
  },
  {
    "text": "Now there's a quick\npath that gets her there and collects one mushroom. So there's exactly one.",
    "start": "4750530",
    "end": "4755740"
  },
  {
    "text": "But maybe if there's a mushroom\nthere, well, initially,",
    "start": "4755740",
    "end": "4761620"
  },
  {
    "text": "it feels like maybe she\ncould get two mushrooms. She could go there, go pick\nup the second mushroom,",
    "start": "4761620",
    "end": "4767050"
  },
  {
    "text": "and get back. But we're going to see that\nthis quick condition actually allows-- it doesn't\nallow you to do that.",
    "start": "4767050",
    "end": "4773620"
  },
  {
    "text": "OK? So, in fact, it'll turn out\nthat quick paths can only collect one mushroom\nin this 3-by-3 case,",
    "start": "4773620",
    "end": "4780100"
  },
  {
    "text": "so there's at least\ntwo different paths. Well, there's 1,\n2, 3 different ways",
    "start": "4780100",
    "end": "4789360"
  },
  {
    "text": "that she could collect one\nmushroom and have a quick path. OK.",
    "start": "4789360",
    "end": "4795060"
  },
  {
    "text": "So the first thing to\nnotice is the instructions are a little bit sneaky\nby defining quick paths,",
    "start": "4795060",
    "end": "4801449"
  },
  {
    "text": "basically, by giving\nher no slack at all. Right? And here's a basic observation.",
    "start": "4801450",
    "end": "4808280"
  },
  {
    "text": "Notice that in order to\ngive from the upper left to the bottom right,\nshe's going to have to go down and to the right.",
    "start": "4808280",
    "end": "4813389"
  },
  {
    "text": "Plausibly, she could also go up. She could try and go around\na tree, but only plausibly.",
    "start": "4813390",
    "end": "4819752"
  },
  {
    "text": "And, in particular, the question\nis how many times does she have to go down and\nhow many times did she have to go to the right.",
    "start": "4819752",
    "end": "4825489"
  },
  {
    "text": "Well, she has to get to\nthe bottom of the grid. So she's on grid\nsquare number 1. She has to go down, in this\ncase, at least two more",
    "start": "4825490",
    "end": "4832240"
  },
  {
    "text": "times, so, in general,\nn minus 1 times. She has to go to the\nright n minus 1 times.",
    "start": "4832240",
    "end": "4838592"
  },
  {
    "text": "So what does that mean? She has to make\n2n minus 2 moves. And that's a lower bound, right?",
    "start": "4838592",
    "end": "4844447"
  },
  {
    "text": "So if she goes up, she's going\nto have to go down again, so it's only going\nto make it bigger. Right? So at the very least, she\nhas to do 2n minus 2 moves",
    "start": "4844447",
    "end": "4855670"
  },
  {
    "text": "down and right to get from the\nupper left to the lower right.",
    "start": "4855670",
    "end": "4861310"
  },
  {
    "text": "How many squares does she\ntouch when she's doing that? This is a fence post problem. So she made 2n minus\n2 moves, and she",
    "start": "4861310",
    "end": "4866710"
  },
  {
    "text": "had a place where she started. That implies that just by\nmoving down and to the right,",
    "start": "4866710",
    "end": "4873070"
  },
  {
    "text": "she makes 2n minus 1 squares-- she touches, rather.",
    "start": "4873070",
    "end": "4880020"
  },
  {
    "text": "So can she ever move up? No. Can she ever move to the left? No.",
    "start": "4880020",
    "end": "4885947"
  },
  {
    "text": "And that, basically, is all\nyou need to solve this problem. The rest of it's\nactually pretty easy. So the basic observation here\nis she can only move down",
    "start": "4885947",
    "end": "4892937"
  },
  {
    "text": "and to the right because if\nshe moved up or to the left, her path would no\nlonger be called quick, and that would be a problem.",
    "start": "4892937",
    "end": "4898880"
  },
  {
    "text": "Moreover, every path that\nmoves down and to the right is a quick path, assuming\nshe reaches their target",
    "start": "4898880",
    "end": "4905330"
  },
  {
    "text": "and doesn't hit a tree. OK? So that's the basic observation.",
    "start": "4905330",
    "end": "4910460"
  },
  {
    "text": "And notice that that\nalready basically suggests-- it's, like, screaming\nout to you-- how to do dynamic programming\nbecause, literally, you have",
    "start": "4910460",
    "end": "4916670"
  },
  {
    "text": "a table looking at you on\nthe blackboard right now, and you have an ordering\ndown and to the right that",
    "start": "4916670",
    "end": "4925530"
  },
  {
    "text": "is acyclic. Yeah? OK. Have I slammed on the\nboard enough times? The first time I\ntaught at Stanford,",
    "start": "4925530",
    "end": "4931350"
  },
  {
    "text": "I got negative course feedback\nthat I had too much coffee and was slamming on the\nboard a lot, apparently.",
    "start": "4931350",
    "end": "4938070"
  },
  {
    "text": "I watched the video later, and,\nindeed, that was not wrong. OK. So, right.",
    "start": "4938070",
    "end": "4943830"
  },
  {
    "text": "So, we're going to call k-- this is going to be\nthe max mushrooms she",
    "start": "4943830",
    "end": "4954090"
  },
  {
    "text": "can get going on the entire\npath from the upper left of the lower right. So we want to know the\nnumber of quick paths",
    "start": "4954090",
    "end": "4959280"
  },
  {
    "text": "that can achieve this number k. OK. So let's do SRTBOT really fast\nbecause I've got four minutes--",
    "start": "4959280",
    "end": "4968496"
  },
  {
    "text": "actually, a tiny bit more than\nthat because we started late. OK. ",
    "start": "4968496",
    "end": "4975300"
  },
  {
    "text": "Now, the kind of\nannoyance here is that there's two different\nnumbers that we don't know.",
    "start": "4975300",
    "end": "4981180"
  },
  {
    "text": "One of them is k, and the\nother is the number of paths. The problem didn't tell you how\nmany mushrooms she can pick up.",
    "start": "4981180",
    "end": "4986790"
  },
  {
    "text": "It does tell you that\nthere's some path to get from the upper\nleft to the bottom right, that there's not just\nlike a row of trees",
    "start": "4986790",
    "end": "4992068"
  },
  {
    "text": "somewhere, which I feel\nin my commute sometimes.",
    "start": "4992068",
    "end": "4997659"
  },
  {
    "text": "But it doesn't\ntell you the number that she has to accomplish.",
    "start": "4997660",
    "end": "5003600"
  },
  {
    "text": "And, initially, that's\nkind of annoying. So maybe the first\nthing that we do is just compute k,\nlike, the maximum number",
    "start": "5003600",
    "end": "5010170"
  },
  {
    "text": "of mushrooms that she can\ncollect on any quick path. And then we go back and\ncompute that other count.",
    "start": "5010170",
    "end": "5017070"
  },
  {
    "text": "That would be one\nproblem-solving approach that we could think\nabout a little bit. So, in particular, let's define\nour k ij to be equal to--",
    "start": "5017070",
    "end": "5030065"
  },
  {
    "text": "well, we can generalize\nour problem slightly, and say what is the\nnumber of mushrooms that I can get on any kind\nof rectangle embedded inside",
    "start": "5030065",
    "end": "5037340"
  },
  {
    "text": "of my full problem, right? So, in other words, this is\nthe max number of mushrooms,",
    "start": "5037340",
    "end": "5044539"
  },
  {
    "text": "or m's for short, on\na quick path to ij.",
    "start": "5044540",
    "end": "5054987"
  },
  {
    "text": "So, in other words, she always\nstarts in the upper left, but now she stops at\nany other grid cell.",
    "start": "5054987",
    "end": "5060020"
  },
  {
    "text": "OK?  Because I'm running\nlow on time--",
    "start": "5060020",
    "end": "5065925"
  },
  {
    "text": "no, I'm going to do this\nthe way I want to do this. No, so we're just\ngoing to think about k. Yeah? So the question is\ncould we compute just",
    "start": "5065925",
    "end": "5074620"
  },
  {
    "text": "as value k, which\ncertainly seems convenient. Princess Plum, she might\nas well know her enemy.",
    "start": "5074620",
    "end": "5081343"
  },
  {
    "text": "She might as well know\nthe number of mushrooms she's targeting,\nif she can get it. ",
    "start": "5081343",
    "end": "5087639"
  },
  {
    "text": "So how could we do\nthis recursively?",
    "start": "5087640",
    "end": "5093830"
  },
  {
    "text": "Well, she has to\nget to position ij. And from our argument\nup there, she",
    "start": "5093830",
    "end": "5100430"
  },
  {
    "text": "has to get there by either\ncoming from up or to the left, the way we've chosen to\nwrite down this problem.",
    "start": "5100430",
    "end": "5107020"
  },
  {
    "text": "So what are our different cases? Well, first of all,\nif there's a tree,",
    "start": "5107020",
    "end": "5112080"
  },
  {
    "text": "you can't do a damn thing. She shouldn't even\nbe able to get there. And for convenience,\nwe're going to find you can argue that it's 0.",
    "start": "5112080",
    "end": "5118590"
  },
  {
    "text": "We're going to mark this\nwith a special number, and we'll see that\nthat makes our notation a little convenient. So one is if there\nexists a tree,",
    "start": "5118590",
    "end": "5128430"
  },
  {
    "text": "then we're going to say\nk ij is minus infinity. Again, there's a\nphilosophical question there.",
    "start": "5128430",
    "end": "5134640"
  },
  {
    "text": "Does she get minus\ninfinity mushrooms if she is standing\non top of a tree? I don't know,\nbecause she shouldn't stand on top of a tree.",
    "start": "5134640",
    "end": "5140220"
  },
  {
    "text": "But at least it's going to\nlet us know that something went wrong in this grid\nsquare in the other parts of our recursion.",
    "start": "5140220",
    "end": "5146130"
  },
  {
    "text": "OK? And otherwise, well, what\nare our different cases here?",
    "start": "5146130",
    "end": "5155719"
  },
  {
    "text": "Well, she always picks up\na mushroom if it's there. She might as well. She's maximizing. In fact, the problem even\nsays that she's really",
    "start": "5155720",
    "end": "5162385"
  },
  {
    "text": "into mushrooms. She collects them\nautomatically, right? So what do we get?",
    "start": "5162385",
    "end": "5167720"
  },
  {
    "text": " I use unnecessarily\nfancy notation.",
    "start": "5167720",
    "end": "5173110"
  },
  {
    "text": "This is an indicator of\nwhether there exists a mushroom",
    "start": "5173110",
    "end": "5179139"
  },
  {
    "text": "at position ij, meaning\nthis is a 1 if there is,",
    "start": "5179140",
    "end": "5187030"
  },
  {
    "text": "and there's a 0 if there's not. Sometimes this is indicated with\na 1 with a little subscript,",
    "start": "5187030",
    "end": "5192789"
  },
  {
    "text": "but whatever. In addition to that,\nshe might have picked up mushrooms along paths.",
    "start": "5192790",
    "end": "5198490"
  },
  {
    "text": "And we know that her path\nto position ij either came from up or to the left.",
    "start": "5198490",
    "end": "5204480"
  },
  {
    "text": "So, in other words,\nwe know that she",
    "start": "5204480",
    "end": "5211140"
  },
  {
    "text": "could have gotten the max\nfrom any path ending above her or any path to the left of her. So that's k i minus\n1j, which, I guess,",
    "start": "5211140",
    "end": "5220380"
  },
  {
    "text": "is to the left, and k\nij minus 1, like that.",
    "start": "5220380",
    "end": "5227210"
  },
  {
    "text": "And this can be used to fill\nin our whole table of k values. In fact, since I'm\nlow on time, I'll",
    "start": "5227210",
    "end": "5233120"
  },
  {
    "text": "let you do the TBOT for the\nremainder of this problem.",
    "start": "5233120",
    "end": "5238650"
  },
  {
    "text": "Essentially, I think the\nkey observation is this one. Obviously, when she\nstarts in the upper left, she gets 0 mushrooms\nbecause she's not",
    "start": "5238650",
    "end": "5244620"
  },
  {
    "text": "standing on top of one. The problem says that. And this allows us to\nfill in our whole table k.",
    "start": "5244620",
    "end": "5250360"
  },
  {
    "text": "So, in particular, this\ngives us our enemy now. We now know how many\nmushrooms she should have",
    "start": "5250360",
    "end": "5256951"
  },
  {
    "text": "at every step of her journey. In fact, it tells\nus a tiny bit more than that because it\nsays if I'm at this grid",
    "start": "5256952",
    "end": "5262240"
  },
  {
    "text": "sq-- at this particular\ngrid square during my path, I should have this\nmany mushrooms.",
    "start": "5262240",
    "end": "5267560"
  },
  {
    "text": "If I didn't, then\nsomething went wrong. Yeah? So the way that the\nsolution is written,",
    "start": "5267560",
    "end": "5273010"
  },
  {
    "text": "they do two pieces of\nthe recursion at once. You actually could have just\nsolved for this k matrix first and then gone back\nand done the second half",
    "start": "5273010",
    "end": "5279550"
  },
  {
    "text": "of this problem. And those are exactly the same. And when I was\nwriting my solution, this is the way I thought\nabout it, because, somehow, I",
    "start": "5279550",
    "end": "5286750"
  },
  {
    "text": "kind of felt like she\nmight as well know how many mushrooms she wants\nto collect before she starts counting paths. That's like a secondary\nquestion, you know.",
    "start": "5286750",
    "end": "5293620"
  },
  {
    "text": "And so this is one way to do it. So in our remaining\nnegative 2 minutes,",
    "start": "5293620",
    "end": "5298820"
  },
  {
    "text": "let's think about the\nrecursion for computing. Remember that we want to know\nthe number of paths needed",
    "start": "5298820",
    "end": "5304600"
  },
  {
    "text": "to collect that many\nmushrooms, the maximum number of mushrooms.",
    "start": "5304600",
    "end": "5311690"
  },
  {
    "text": "Please let there not be a whole\nlot of stuff on this board. Ah, there's not any\nstuff on this board. That's great.",
    "start": "5311690",
    "end": "5316860"
  },
  {
    "text": "OK. So, in particular, now I'm\ngoing to define a second thing",
    "start": "5316860",
    "end": "5322690"
  },
  {
    "text": "that I also I'm going to\ndo dynamic programming on. I'm going to say that x ij\nis equal to-- and I'm going",
    "start": "5322690",
    "end": "5331540"
  },
  {
    "text": "to make it kind of a\nsneaky definition here, which is the number of quick\npaths that end at ij with--",
    "start": "5331540",
    "end": "5352320"
  },
  {
    "text": "now, let's anticipate\nour problem a little bit. So at the end of the day, we're\ngoing to do x of n comma n",
    "start": "5352320",
    "end": "5358677"
  },
  {
    "text": "because she wants to end up all\nthe way down and to the right. And how many mushrooms\ndoes she want to have, now that we know k?",
    "start": "5358677",
    "end": "5364289"
  },
  {
    "text": "She wants to have k of\nn comma n mushrooms. Along the way, it would\nbe kind of ambitious",
    "start": "5364290",
    "end": "5371100"
  },
  {
    "text": "if she wanted to\nhave k of n comma n mushrooms the entire path. But it would be slightly\nless ambitious to have",
    "start": "5371100",
    "end": "5377970"
  },
  {
    "text": "k of ij mushrooms\nbecause, somehow, that's exactly what we just constructed\nin the previous thing",
    "start": "5377970",
    "end": "5385900"
  },
  {
    "text": "where it was paths. Well, the last guy\nlooks like a max. Now we're going to expect\nto see some plus signs here",
    "start": "5385900",
    "end": "5392310"
  },
  {
    "text": "because we're adding up\nhow many paths we have. OK? And now let's come up with a\nrecursive rule for the array x,",
    "start": "5392310",
    "end": "5399480"
  },
  {
    "text": "and then we'll call it a day. So, in particular, [INAUDIBLE]\none, if there's a tree,",
    "start": "5399480",
    "end": "5410980"
  },
  {
    "text": "how many paths are there? There are no paths,\nbecause I can't get there. So then ij equals 0.",
    "start": "5410980",
    "end": "5419730"
  },
  {
    "text": "OK? Otherwise, there ain't a tree. And now I have to be a\nlittle careful, right?",
    "start": "5419730",
    "end": "5427770"
  },
  {
    "text": "So I need to write this\nlike a little piece of code. You could have written this as\na giant max, instead, or a bunch",
    "start": "5427770",
    "end": "5434400"
  },
  {
    "text": "of cases and whatever. So let's think about it\nlike a piece of code.",
    "start": "5434400",
    "end": "5439770"
  },
  {
    "text": "So, initially, I think\nthere are no paths that get me k ij mushrooms. That's perfectly fine.",
    "start": "5439770",
    "end": "5445994"
  },
  {
    "text": "And remember,\nwe're going to keep applying the same\npiece of logic, which is that a path can only\ncome from to the left and up.",
    "start": "5445995",
    "end": "5451990"
  },
  {
    "text": "And let's think about\nthose two cases. And by the way, we're\ngoing to use chi",
    "start": "5451990",
    "end": "5458560"
  },
  {
    "text": "to equal this chi\nof stuff that we had in the previous expression.",
    "start": "5458560",
    "end": "5464500"
  },
  {
    "text": "So chi is 1 if there's a\nmushroom at this place, and 0 if there is not.",
    "start": "5464500",
    "end": "5469610"
  },
  {
    "text": "OK. So my path can come\nfrom the left or up.",
    "start": "5469610",
    "end": "5475650"
  },
  {
    "text": "I know that it can't come from\nup if the number of mushrooms that I got from up plus,\npotentially, the one that I got",
    "start": "5475650",
    "end": "5483150"
  },
  {
    "text": "here doesn't align with\nthe number of mushrooms that I should have\nby the k ij standard",
    "start": "5483150",
    "end": "5488670"
  },
  {
    "text": "that I have set for myself. So if I want to write that out\nin code, the way I do that is I",
    "start": "5488670",
    "end": "5494325"
  },
  {
    "text": "would say, if k of-- so let's say I look\nto the left first.",
    "start": "5494325",
    "end": "5500217"
  },
  {
    "text": "This is like, you know, look to\nyour left, look to your right, one of you will pass this\nexam kind of scenario.",
    "start": "5500217",
    "end": "5506159"
  },
  {
    "text": "And I potentially add a\nmushroom at my current position if there is one.",
    "start": "5506160",
    "end": "5512140"
  },
  {
    "text": "If that is equal to k ij,\nwell, what does that mean? That means that paths\nthat went to the left",
    "start": "5512140",
    "end": "5517360"
  },
  {
    "text": "were able to collect the number\nof mushrooms I need to get to the position I am now. So now I can add all\nof the different ways.",
    "start": "5517360",
    "end": "5528700"
  },
  {
    "text": "Maybe I'll do a plus\nequals x of i minus 1j",
    "start": "5528700",
    "end": "5534940"
  },
  {
    "text": "because any path that\ngot to the previous guy and collected the right\nnumber of mushrooms can now reach me and get the\nright number of mushrooms.",
    "start": "5534940",
    "end": "5541050"
  },
  {
    "text": "And similarly, I can look up\nand do exactly the same logic. So if k of ij minus 1 plus\nthis number is equal to k ij,",
    "start": "5541050",
    "end": "5553040"
  },
  {
    "text": "then x ij gets an additional\nnumber of paths, like that.",
    "start": "5553040",
    "end": "5563980"
  },
  {
    "text": "And now I do think it's worth\nspending 8 seconds thinking about our base cases\nhere because, initially,",
    "start": "5563980",
    "end": "5570040"
  },
  {
    "text": "when I first saw this,\nI panicked a little bit because it kind of looks\nlike this would just end up getting a bunch of 0's\nbecause I'm just adding",
    "start": "5570040",
    "end": "5576642"
  },
  {
    "text": "values of x's to themselves. I don't have, like,\na 1 plus anything anywhere, which is kind of\nweird if you think about it.",
    "start": "5576643",
    "end": "5582593"
  },
  {
    "text": "So all of the reason why\nthe positive numbers appear in this problem is from the base\ncase, which is kind of cool, I think.",
    "start": "5582593",
    "end": "5587810"
  },
  {
    "text": "This is like, I think,\none of these things where if you anticipated a\nproblem, then it's cool, and if you didn't anticipate\nthe problem to begin with",
    "start": "5587810",
    "end": "5593415"
  },
  {
    "text": "and you just wrote\ndown these formulas, you probably wouldn't even\nthink that it's interesting. But in any event,\nwhat is our base case?",
    "start": "5593415",
    "end": "5601420"
  },
  {
    "text": "So, we'll do the B in SRTBOT. So, first of all,\nwhat is k of 1, 1?",
    "start": "5601420",
    "end": "5610052"
  },
  {
    "text": "Remember, that's the\nnumber of mushrooms she can collect by\nstarting at the left square and going nowhere. And that's 0 because\nthe problem says there's",
    "start": "5610053",
    "end": "5617530"
  },
  {
    "text": "no mushrooms in the upper left. What's x of 1, 1?",
    "start": "5617530",
    "end": "5623012"
  },
  {
    "text": "Well, this is the\nnumber of paths from 1, 1 to itself that collects\n0 mushrooms, so that's 1.",
    "start": "5623012",
    "end": "5629570"
  },
  {
    "text": "OK. And I think that the\nrest of the SRTBOT table here isn't terribly\ndifficult to fill in.",
    "start": "5629570",
    "end": "5636360"
  },
  {
    "text": "So I noticed that in\nkind of a funny way, all of these recursive\nsteps are just adding 1 to itself a bunch of times.",
    "start": "5636360",
    "end": "5642745"
  },
  {
    "text": "But, of course, the way\nyou do that, the reason why you get a number\nthat is interesting, is because of all these\nif statements and the fact",
    "start": "5642745",
    "end": "5648123"
  },
  {
    "text": "that you can add two\ndifferent pluses coming from two different sources. OK. So I actually do\nencourage you guys",
    "start": "5648123",
    "end": "5653990"
  },
  {
    "text": "to look at the code in\nthe problem solution because I think it's a\nnice example of taking this recursive formula and\nthen unrolling it into,",
    "start": "5653990",
    "end": "5660920"
  },
  {
    "text": "like, iterating over a table. And that's a useful skill\nthat I intended to do today and then didn't actually\ndo very carefully.",
    "start": "5660920",
    "end": "5667644"
  },
  {
    "text": "But with that, as usual,\nwe've gone over time here. So we'll call it for the day. And I will see you guys\nwhen I see you guys.",
    "start": "5667645",
    "end": "5674720"
  },
  {
    "text": "All right. ",
    "start": "5674720",
    "end": "5681000"
  }
]