[
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING] ",
    "start": "0",
    "end": "13390"
  },
  {
    "text": "YAEL KALAI: OK, so let's start. So first of all, wow. Thank you all for coming back.",
    "start": "13390",
    "end": "19010"
  },
  {
    "text": "I'm happy I didn't\npush you away. So before we start with today's\nlectures, just a few logistics.",
    "start": "19010",
    "end": "27439"
  },
  {
    "text": "So for some reasons, you guys\nare taking a holiday next week, unfortunately, so\nwe won't have class.",
    "start": "27440",
    "end": "34090"
  },
  {
    "text": "The week after, on the\n29th, unfortunately, I'm away that week at Germany,\nbut we're going to have",
    "start": "34090",
    "end": "41079"
  },
  {
    "text": "our amazing Rachel in the\nback give a fantastic lecture.",
    "start": "41080",
    "end": "46750"
  },
  {
    "text": "So you'll enjoy that. And then the week after,\nwhich I believe is October 6,",
    "start": "46750",
    "end": "55358"
  },
  {
    "text": "I would have loved to give you\na great lecture, and I'm here. However, you're going\nto get something even better because there is\na really, really amazing work,",
    "start": "55358",
    "end": "64550"
  },
  {
    "text": "a new work by Oded\nRegev, who does a new construct, a new factoring\nalgorithm, quantum factoring",
    "start": "64550",
    "end": "73700"
  },
  {
    "text": "algorithm, so kind of improves\nShor's algorithm in some way.",
    "start": "73700",
    "end": "79100"
  },
  {
    "text": "It's a really, really\nexciting piece of work. Oded is in Paris,\nbut that's the one day he was able to come\nhere and present his work,",
    "start": "79100",
    "end": "87510"
  },
  {
    "text": "and it's exactly on this class. So I think what we should\ndo, we should all-- this class will\nmove on October 6,",
    "start": "87510",
    "end": "94670"
  },
  {
    "text": "and we'll all go to\nOded Regev's talk. It's going to be this class,\nit's going to be a colloquium,",
    "start": "94670",
    "end": "99708"
  },
  {
    "text": "and it's going to be a\ntheory reading group. It's going to be all in one. It's going to have a very nice\nformat where the first hour",
    "start": "99708",
    "end": "107270"
  },
  {
    "text": "or so is going to be kind of\na very general theory audience talk, and then we're going\nto have the next two or less",
    "start": "107270",
    "end": "114750"
  },
  {
    "text": "hours, depending on how\nmuch he'll have the energy to speak to us,\nwe're going to talk about more details about\nhis algorithm and his work.",
    "start": "114750",
    "end": "122400"
  },
  {
    "text": "So that's October 6. And then I'm going to be back. So you're going to\nhave a bit of a break from me now, which I'm kind of\nsad about, but you may be happy.",
    "start": "122400",
    "end": "130740"
  },
  {
    "text": "So let's first kind\nof recap where we were and continue from there.",
    "start": "130740",
    "end": "137970"
  },
  {
    "text": "So last time, we\ndefined this new class of proofs, kind of going away\nfrom the classical proofs",
    "start": "137970",
    "end": "145860"
  },
  {
    "text": "to the regime of\ninteractive proofs. We showed the power of\nthese interactive proofs",
    "start": "145860",
    "end": "152080"
  },
  {
    "text": "by showing one protocol in\nparticular, the Sumcheck protocol. I wrote the Sumcheck\nprotocol kind of very loosely",
    "start": "152080",
    "end": "158980"
  },
  {
    "text": "in that board because we're\ngoing to refer to it today again.",
    "start": "158980",
    "end": "164080"
  },
  {
    "text": "So the Sumcheck\nprotocol, just to recap, it's a way to prove that\nthe sum of a multivariate",
    "start": "164080",
    "end": "170159"
  },
  {
    "text": "polynomial over, let's\nsay, a small set h-- you can think of h\nas 0,1 as an example,",
    "start": "170160",
    "end": "175770"
  },
  {
    "text": "over a Boolean cube\nor just a bigger cube, the sum is some value\nover some finite field.",
    "start": "175770",
    "end": "182319"
  },
  {
    "text": "And of course, to compute the\nsum takes a very long time. It's, like, h to the m. You need to just\nsum everything up.",
    "start": "182320",
    "end": "188440"
  },
  {
    "text": "But it turns out\nthat you can verify it using an interactive\nproof very, very efficiently.",
    "start": "188440",
    "end": "193660"
  },
  {
    "text": "Assuming you have oracle\naccess to this function, you can compute it efficiently\non any random element in the field.",
    "start": "193660",
    "end": "199810"
  },
  {
    "text": "So this is what we covered last\ntime, the Sumcheck protocol. As I told you, this\nobject protocol",
    "start": "199810",
    "end": "204930"
  },
  {
    "text": "is really the bread and\nbutter of proof systems. Almost every proof system\nuses this protocol.",
    "start": "204930",
    "end": "211030"
  },
  {
    "text": "It's a beautiful\nprotocol, in my opinion, and we'll use it\nthroughout this course.",
    "start": "211030",
    "end": "216969"
  },
  {
    "text": "So if anyone has any questions\nabout the Sumcheck protocol, please ask.",
    "start": "216970",
    "end": "223720"
  },
  {
    "text": "And if it doesn't\nsit with you yet, I really encourage you\nto review the notes and--",
    "start": "223720",
    "end": "229360"
  },
  {
    "text": "in the website, there's also\nnotes to Justin Thaler's survey",
    "start": "229360",
    "end": "236140"
  },
  {
    "text": "which contains a\nvery nice exposition. And also we have\nnow Scribe for that, so you have various resources\nto look at the protocol.",
    "start": "236140",
    "end": "245720"
  },
  {
    "text": "And then we start to look at\napplications for the protocol. The first application we got\nis to show interactive proof",
    "start": "245720",
    "end": "253870"
  },
  {
    "text": "for Sharp-SAT, and we\nshowed this interactive. The idea was to it was via this\ntechnique of arithmetization",
    "start": "253870",
    "end": "261040"
  },
  {
    "text": "converting kind of\na Boolean circuit into an arithmetic circuit. We'll use this\ntechnique today as well.",
    "start": "261040",
    "end": "268090"
  },
  {
    "text": "And then we departed and\ntalked about this idea of a doubly efficient\ninteractive proof, where",
    "start": "268090",
    "end": "273472"
  },
  {
    "text": "in a doubly efficient\ninteractive proofs, we really care about the runtime\nof the prover in addition",
    "start": "273472",
    "end": "278650"
  },
  {
    "text": "to the runtime of the verifier. So in the classical\ninteractive proof setting, all the focus was on\nefficient verification.",
    "start": "278650",
    "end": "285570"
  },
  {
    "text": "Nobody cared about the\nruntime of the prover. For all practical\npurposes, we thought of him",
    "start": "285570",
    "end": "291020"
  },
  {
    "text": "as an all powerful. But doubly efficient,\ninteractive proof, now, yeah,",
    "start": "291020",
    "end": "296065"
  },
  {
    "text": "the proof, of course,\nis more powerful. Otherwise the verifier would\ndo the work on his own. But we don't have all-powerful\nthings in this world,",
    "start": "296065",
    "end": "304169"
  },
  {
    "text": "unfortunately, so we also\ncare about the efficiency of the prover. So he's just more\nefficient, but we don't want",
    "start": "304170",
    "end": "310820"
  },
  {
    "text": "his work to be crazy expensive. So that was the doubly\nefficient interactive proofs.",
    "start": "310820",
    "end": "318419"
  },
  {
    "text": "And we just started,\nand we'll continue today to show how we get a doubly\nefficient interactive proofs",
    "start": "318420",
    "end": "325190"
  },
  {
    "text": "for counting triangles, for\ncounting triangles in a graph,",
    "start": "325190",
    "end": "331130"
  },
  {
    "text": "and it was via technique called\nthe low-degree extension. So now the plan for\nthis class today",
    "start": "331130",
    "end": "338180"
  },
  {
    "text": "is to look at the\nlow-degree extension. Again, this low-degree\nextension, it's a theorem.",
    "start": "338180",
    "end": "343680"
  },
  {
    "text": "It's written here. I'll explain it. It's, again, the bread\nand butter that actually--",
    "start": "343680",
    "end": "348889"
  },
  {
    "text": "this low-degree extension\ntheorem in some sense is what makes the subject\nprotocol so popular, so",
    "start": "348890",
    "end": "356120"
  },
  {
    "text": "kind of important. This theorem is what gives\nthe Sumcheck protocol",
    "start": "356120",
    "end": "361430"
  },
  {
    "text": "its power in a sense. So really together, the\nlow-degree extension theorem",
    "start": "361430",
    "end": "367340"
  },
  {
    "text": "together with the Sumcheck is\nlike everything follows from it, via corollaries almost.",
    "start": "367340",
    "end": "373760"
  },
  {
    "text": "So that's what we'll see this\nlecture and the next lecture.",
    "start": "373760",
    "end": "380030"
  },
  {
    "text": "OK, so what is the\nlow-degree extension theorem? What it says is that take any\nfunction from H to the m to 0,1.",
    "start": "380030",
    "end": "391070"
  },
  {
    "text": "H is just any set. It can be 0,1 to the m,\ncan be Boolean hypercube, but it can be a\nbigger hypercube.",
    "start": "391070",
    "end": "397072"
  },
  {
    "text": "If you're more comfortable, if\nit's easier for you to think of H as 0,1, just\nthink of it as 0,1.",
    "start": "397072",
    "end": "402170"
  },
  {
    "text": "So take any function\nfrom H to the m to 0,1. So when I say any function,\nit's not a polynomial,",
    "start": "402170",
    "end": "408180"
  },
  {
    "text": "it's just a set of elements. So when I say any function\nfrom H of them to 0,1, you should think of it as just\nan arbitrary sequence of H",
    "start": "408180",
    "end": "416600"
  },
  {
    "text": "to the m bits, and\nthen just ordered them, like in a hypercube.",
    "start": "416600",
    "end": "423070"
  },
  {
    "text": "So I have this sequence\nof H to the m bits defined by this function. And the theorem says that if\nyou take any finite field that",
    "start": "423070",
    "end": "432380"
  },
  {
    "text": "contains this set H, so if\nH, let's say, is Boolean 0,1,",
    "start": "432380",
    "end": "437410"
  },
  {
    "text": "you can take any finite field. Every finite field contains\n0,1, but more generally, any finite field, there\nexists a unique polynomial.",
    "start": "437410",
    "end": "447389"
  },
  {
    "text": "So now we move from an\narbitrary set of bits to a polynomial f from f tilde.",
    "start": "447390",
    "end": "455129"
  },
  {
    "text": "This is the extension, so we\ncall it from f to f tilde. From f to the m, not H\nto the m, but f to the m,",
    "start": "455130",
    "end": "461729"
  },
  {
    "text": "so I extended it to f to the\nm, to f such that if you look",
    "start": "461730",
    "end": "467080"
  },
  {
    "text": "at the extended polynomial and\nthe small hypercube H to the m,",
    "start": "467080",
    "end": "472240"
  },
  {
    "text": "it really is exactly f. And this f tilde\nhas small degree,",
    "start": "472240",
    "end": "479770"
  },
  {
    "text": "so it's degree in each variable\nis the size of H minus 1.",
    "start": "479770",
    "end": "486090"
  },
  {
    "text": "So if you want to visualize it,\nhere's what you should think. I have a bunch of bits\nsitting on some hypercube.",
    "start": "486090",
    "end": "494380"
  },
  {
    "text": "It can be Boolean or it\ncan be more elements here. But I have arbitrary\nsequence of bits sitting here",
    "start": "494380",
    "end": "502050"
  },
  {
    "text": "in this hypercube. And the theorem says\nyou can extend this",
    "start": "502050",
    "end": "507435"
  },
  {
    "text": "to a function over a big field,\nover f to the m in a unique way.",
    "start": "507435",
    "end": "514279"
  },
  {
    "text": "I don't know if I specified,\nit's a unique way in a way that it extends. So the values are\nexactly as before.",
    "start": "514280",
    "end": "521260"
  },
  {
    "text": "And the degree of this\npolynomial in each variable is exactly H minus 1.",
    "start": "521260",
    "end": "527625"
  },
  {
    "text": " This is the theorem. By the way, in the\ncase where H is 0,1,",
    "start": "527625",
    "end": "536720"
  },
  {
    "text": "then the degree in each\nvariable is 1 because H is 0,1,",
    "start": "536720",
    "end": "542129"
  },
  {
    "text": "so the size of it\nis two degree 1. This is often called\nmultilinear extension because the resulting\nf tilde is of degree",
    "start": "542130",
    "end": "549560"
  },
  {
    "text": "1 in each variable, in which\ncase it's called multilinear.",
    "start": "549560",
    "end": "554640"
  },
  {
    "text": "Any questions about\nwhat this theorem says, the meaning of this theorem.",
    "start": "554640",
    "end": "561090"
  },
  {
    "text": "So we're going to prove\nthis theorem next. And then we're going to\ngo back to this counting triangles, which was just\nkind of a motivating example.",
    "start": "561090",
    "end": "568420"
  },
  {
    "text": "But the focus is\nreally this theorem. And before I go\ninto the proof, I",
    "start": "568420",
    "end": "574520"
  },
  {
    "text": "want to say why this thing is so\npowerful is that it allows you to go from an arbitrary\nsequence of bits",
    "start": "574520",
    "end": "581970"
  },
  {
    "text": "to a polynomial, which\nis of low degree. And a polynomial of low\ndegree has a lot of structure,",
    "start": "581970",
    "end": "588820"
  },
  {
    "text": "and that kind of\nreally helps us. For example, once you have\npolynomials of low degree",
    "start": "588820",
    "end": "593850"
  },
  {
    "text": "with structures of low degree,\nwe can apply Sumcheck protocols. So that's kind of the way we\noften use Sumcheck protocol.",
    "start": "593850",
    "end": "601246"
  },
  {
    "text": "We're first going to go to look. We have an arbitrary sequence. We're going to take the\nlow-degree extension, and now we can argue we can\nthen use the Sumcheck protocol.",
    "start": "601247",
    "end": "612540"
  },
  {
    "text": "Any questions before we-- yeah.",
    "start": "612540",
    "end": "618126"
  },
  {
    "text": "STUDENT: Is another way to get\nthese [INAUDIBLE] maybe not for arbitrary constants.",
    "start": "618126",
    "end": "624300"
  },
  {
    "text": "So you take the arithmetized-- YAEL KALAI: Arithmetize? STUDENT: f. YAEL KALAI: Yeah, right.",
    "start": "624300",
    "end": "630800"
  },
  {
    "text": "STUDENT: That should give you\na low-ish degree, lower degree, if the depth of f is small\non the Boolean hypercube",
    "start": "630800",
    "end": "640670"
  },
  {
    "text": "[INAUDIBLE]. YAEL KALAI: So what\nyou're saying is good. Let me just repeat\nwhat you're saying. What you're saying\nis if f has already--",
    "start": "640670",
    "end": "649010"
  },
  {
    "text": "is not arbitrary,\nbut actually is kind of a circuit, an\narithmetic circuit with and,",
    "start": "649010",
    "end": "655084"
  },
  {
    "text": "and or, with addition\nand multiplication, and it's very low\ndepth, like log depth,",
    "start": "655085",
    "end": "660420"
  },
  {
    "text": "let's say, or let me call it\ndepth D, then just kind of think",
    "start": "660420",
    "end": "666070"
  },
  {
    "text": "of it as over a big field. Especially if it's 0,1, you\ncan think of over a big field. And then the degree of this\nthing will be 2 to the depth.",
    "start": "666070",
    "end": "675370"
  },
  {
    "text": "You're right. But 2 to the depth, eh. So you're right.",
    "start": "675370",
    "end": "680750"
  },
  {
    "text": "And so actually for Sharp-SAT\nset, that's what we did. How did we use the Sumcheck? That's exactly what we did.",
    "start": "680750",
    "end": "686120"
  },
  {
    "text": "But then you need to\nassume a lot of things. You need to assume that-- so you're right. If you start with an\nf that has structure,",
    "start": "686120",
    "end": "692900"
  },
  {
    "text": "that it's very, very low depth,\nor the degree is very small, then you're done. You already have it. But what this is saying\nfor any sequence,",
    "start": "692900",
    "end": "700010"
  },
  {
    "text": "so any sequence of\nbits can be arbitrary. You can put it in this way.",
    "start": "700010",
    "end": "706810"
  },
  {
    "text": "STUDENT: So I was just dropping\nto the uniqueness claim. So for these kind of\nlow-depth f's, you might have",
    "start": "706810",
    "end": "714578"
  },
  {
    "text": "a different-- YAEL KALAI: Different. STUDENT: It's\nprobably-- but I guess the point is that degree\nwill prevent you, right?",
    "start": "714578",
    "end": "720220"
  },
  {
    "text": "YAEL KALAI: Exactly. So what you're saying\nfor the functions that are kind of natively\nsmall degree,",
    "start": "720220",
    "end": "727380"
  },
  {
    "text": "you can immediately\nget an extension, but the degree will not be\nthe minimal, minimal degree.",
    "start": "727380",
    "end": "733020"
  },
  {
    "text": "So to get the minimal\ndegree, that's how you do it. Yeah, good.",
    "start": "733020",
    "end": "738270"
  },
  {
    "text": "Thanks. Any other questions? OK, I just want to remind\nyou, questions are great.",
    "start": "738270",
    "end": "744100"
  },
  {
    "text": "I hope you just\nwitnessed it because it's good for all of you. So please ask questions.",
    "start": "744100",
    "end": "750149"
  },
  {
    "text": "OK. Should we dive in? OK. So the first thing to\nnotice is, actually, you",
    "start": "750150",
    "end": "758980"
  },
  {
    "text": "should be familiar with\nthis theorem for the case where m equals 1.",
    "start": "758980",
    "end": "764040"
  },
  {
    "text": "So first, just notice,\nfor m equals 1, this theorem is simply known\nas the Lagrange interpolation",
    "start": "764040",
    "end": "774130"
  },
  {
    "text": "theorem. This is really just Lagrange. ",
    "start": "774130",
    "end": "785890"
  },
  {
    "text": "What does Lagrange\ninterpolation theorem says? Just to recap, it says that\nif you have arbitrary--",
    "start": "785890",
    "end": "792800"
  },
  {
    "text": "if you have an f\nexactly the same, I'll just write\nit from H to 0,1,",
    "start": "792800",
    "end": "799870"
  },
  {
    "text": "then there is a unique way\nof extending it to f to be of degree H minus 1.",
    "start": "799870",
    "end": "806470"
  },
  {
    "text": "So there is a unique f tilde\nfrom f to f of degree H minus 1.",
    "start": "806470",
    "end": "819660"
  },
  {
    "text": "And Moreover, I'll\ntell you what it is. Let me just tell you\nwhat this f tilde is. The F tilde is simply sum\nover all the h's in h--",
    "start": "819660",
    "end": "834725"
  },
  {
    "text": " sorry, f of h--",
    "start": "834725",
    "end": "840960"
  },
  {
    "text": "times some polynomial\nchi h of x,",
    "start": "840960",
    "end": "847170"
  },
  {
    "text": "where this polynomial is\n0 on all the h elements,",
    "start": "847170",
    "end": "853470"
  },
  {
    "text": "except for on this specific one. So this polynomial where--",
    "start": "853470",
    "end": "860770"
  },
  {
    "text": "so this is the f where\nchi h of x is what?",
    "start": "860770",
    "end": "870650"
  },
  {
    "text": "Is 1, where if for\nevery h prime in H,",
    "start": "870650",
    "end": "883890"
  },
  {
    "text": "it's 1 if h prime is equal\nto h, and 0 otherwise.",
    "start": "883890",
    "end": "890030"
  },
  {
    "text": "Yes? STUDENT: Shouldn't that be\nthe inverse [INAUDIBLE]? YAEL KALAI: Shouldn't\nit be the inverse?",
    "start": "890030",
    "end": "895540"
  },
  {
    "text": "STUDENT: [INAUDIBLE] YAEL KALAI: I want the output\nto be-- so OK, let's see.",
    "start": "895540",
    "end": "902220"
  },
  {
    "text": "What I want that if\nI'm somewhere in H, so I want to say that if\nI'm somewhere in H prime,",
    "start": "902220",
    "end": "907780"
  },
  {
    "text": "I want to get f of H.\nI want f tilde of--",
    "start": "907780",
    "end": "914030"
  },
  {
    "text": "so for any H star, I\nwant f tilde of H star to be f of H star.",
    "start": "914030",
    "end": "922477"
  },
  {
    "text": "STUDENT: Either 0 or 1, right? YAEL KALAI: Which\nis either 0 or 1. Yeah?",
    "start": "922478",
    "end": "928240"
  },
  {
    "text": "Yeah. STUDENT: So that's\nwhat I'm saying. YAEL KALAI: Oh, sorry. STUDENT: Instead of this,\nit should be the inverse so that when you apply on\nthe H star, it cancels.",
    "start": "928240",
    "end": "940191"
  },
  {
    "text": "YAEL KALAI: What do you mean,\nf of H should be the inverse? I'm not sure-- you're saying\nhere, I should have inverse? STUDENT: Yeah.",
    "start": "940192",
    "end": "945670"
  },
  {
    "text": "YAEL KALAI: Why? STUDENT: So the next H will give\nyou something that's non-zero.",
    "start": "945670",
    "end": "952125"
  },
  {
    "text": "YAEL KALAI: OK, so\nlet me try to argue. Maybe let's try to\ndo this together. So if this is chi--",
    "start": "952125",
    "end": "958480"
  },
  {
    "text": "So I first define\nchi of H that I'm going to define it in a second.",
    "start": "958480",
    "end": "964579"
  },
  {
    "text": "Actually, I didn't\nfinish defining it, but what's important to me\nthat on every h prime in H,",
    "start": "964580",
    "end": "972680"
  },
  {
    "text": "it's 1 if h prime is equal\nto h and 0 otherwise. Suppose I defined it. Now, let's see what I get here.",
    "start": "972680",
    "end": "978810"
  },
  {
    "text": "I have f tilde of\nH star is sum fH. ",
    "start": "978810",
    "end": "986860"
  },
  {
    "text": "Chi h of H star, but\nthis is always 0. Except it's 1 when\nh equals H star.",
    "start": "986860",
    "end": "997149"
  },
  {
    "text": "So it's always 0, except\nfor when h equals H star and when h-- oh, you're\nsaying when h equals H star,",
    "start": "997150",
    "end": "1005880"
  },
  {
    "text": "then I have f of H star.",
    "start": "1005880",
    "end": "1013340"
  },
  {
    "text": " So this does extend.",
    "start": "1013340",
    "end": "1019949"
  },
  {
    "text": "Yeah? So we're good? OK, great. OK, but let me just\nmention what is--",
    "start": "1019950",
    "end": "1026760"
  },
  {
    "text": "I said, this is the chi. But let me actually be explicit. So let me erase this.",
    "start": "1026760",
    "end": "1032189"
  },
  {
    "text": "The chi in the Lagrange\ninterpolation theorem,",
    "start": "1032190",
    "end": "1037379"
  },
  {
    "text": "it satisfies this. But let me actually tell\nyou exactly what it is. It's pretty simple.",
    "start": "1037380",
    "end": "1042730"
  },
  {
    "text": "It's just sum over h\nprime in H, and then it's,",
    "start": "1042730",
    "end": "1050669"
  },
  {
    "text": "I think, H prime\nminus x divided by h.",
    "start": "1050670",
    "end": "1057270"
  },
  {
    "text": "Oh, sorry, multiplication. ",
    "start": "1057270",
    "end": "1064120"
  },
  {
    "text": "h prime in H minus except for\nh, and its h prime minus h.",
    "start": "1064120",
    "end": "1072110"
  },
  {
    "text": "So first, note, this\nis of degree h minus 1. And when you look at\nit for any element--",
    "start": "1072110",
    "end": "1079825"
  },
  {
    "text": " oh, yeah, for any element\nh prime, it's going to be--",
    "start": "1079825",
    "end": "1092650"
  },
  {
    "text": "this is going to cancel out\nunless you happen to be h.",
    "start": "1092650",
    "end": "1097870"
  },
  {
    "text": "Wait, did I do it wrong?  Unless you're h,\nand then you're 1.",
    "start": "1097870",
    "end": "1104430"
  },
  {
    "text": "Good. OK, so this is just a recap\nfor Lagrange interpolation.",
    "start": "1104430",
    "end": "1109600"
  },
  {
    "text": "Now, let me tell you here. So this theorem\nsays the same thing,",
    "start": "1109600",
    "end": "1115100"
  },
  {
    "text": "but for m bits, for m variables. And it turns out, you\nknow how this was f tilde?",
    "start": "1115100",
    "end": "1122110"
  },
  {
    "text": "Here f tilde, of Z--",
    "start": "1122110",
    "end": "1127600"
  },
  {
    "text": "Z now is in f to the m-- is very similar. It's also sum f of h1 up\nto hm, so for every point",
    "start": "1127600",
    "end": "1140850"
  },
  {
    "text": "times this chi h1hm of z.",
    "start": "1140850",
    "end": "1151270"
  },
  {
    "text": "And what is this? This is 1 if z-- and the\nsmall hypercube, this",
    "start": "1151270",
    "end": "1159529"
  },
  {
    "text": "is 1 if the Z is h1\nup to hm and is 0. Otherwise, and it extends.",
    "start": "1159530",
    "end": "1164990"
  },
  {
    "text": "So but actually, let\nme be more specific. It's really where\nchi h1 up to hm",
    "start": "1164990",
    "end": "1174660"
  },
  {
    "text": "of-- let me call it x1 up to\nxm is just the multiplication",
    "start": "1174660",
    "end": "1184140"
  },
  {
    "text": "of chi hi xi. i goes from 1 to m.",
    "start": "1184140",
    "end": "1191549"
  },
  {
    "text": "OK, so let me move this board. ",
    "start": "1191550",
    "end": "1197890"
  },
  {
    "text": "Don't let me erase this board. OK? We'll need it. So again, what is the\nlow-degree extension f tilde?",
    "start": "1197890",
    "end": "1204980"
  },
  {
    "text": "It's similar to the\nunivariate case. You sum over the\nentire hypercube,",
    "start": "1204980",
    "end": "1212350"
  },
  {
    "text": "and you multiply by the degree\nh minus 1 in each variable.",
    "start": "1212350",
    "end": "1218559"
  },
  {
    "text": "It's just the multiplication,\nall of these chi i's that were defined here. ",
    "start": "1218560",
    "end": "1227010"
  },
  {
    "text": "OK. So let's see if-- let me try to prove that this\nworks and that it's unique.",
    "start": "1227010",
    "end": "1232770"
  },
  {
    "start": "1232770",
    "end": "1238750"
  },
  {
    "text": "So first, what do\nwe need to argue? So we have this f tilde. Now I need to argue\nthat it extends.",
    "start": "1238750",
    "end": "1245980"
  },
  {
    "text": "So the fact-- OK, so proof. So let's first see that for\nevery h1 star up to hm star in H",
    "start": "1245980",
    "end": "1258010"
  },
  {
    "text": "to the m, let's look\nat f tilde of h, hm.",
    "start": "1258010",
    "end": "1266420"
  },
  {
    "text": "What is it? It's just sum f of h1\nup to hm times chi of--",
    "start": "1266420",
    "end": "1279615"
  },
  {
    "start": "1279615",
    "end": "1284740"
  },
  {
    "text": "so let's look at f tilde. f tilde, on any point\nin the hypercube, I defined it by star because\nit's a specific point.",
    "start": "1284740",
    "end": "1292180"
  },
  {
    "text": "And I just substituted. I defined this f tilde. I just substituted Z\nbecause this is my Z point.",
    "start": "1292180",
    "end": "1299049"
  },
  {
    "text": "And now what do I have? I know that this is\nequal to 1, if and only",
    "start": "1299050",
    "end": "1305140"
  },
  {
    "text": "if hi star is equal\nto hi for every i,",
    "start": "1305140",
    "end": "1311080"
  },
  {
    "text": "because this is how\nthe chi is defined. This is just the\nmultiplication of these kinds.",
    "start": "1311080",
    "end": "1317610"
  },
  {
    "text": "So therefore, that's it. This is just f of h1\nstar up to hm star,",
    "start": "1317610",
    "end": "1323990"
  },
  {
    "text": "because the rest of\nthe terms cancel. Done. Yeah? So it extends.",
    "start": "1323990",
    "end": "1330950"
  },
  {
    "text": "How about the degree? ",
    "start": "1330950",
    "end": "1336330"
  },
  {
    "text": "What's the degree of f tilde? It's just the degree\nof these chis.",
    "start": "1336330",
    "end": "1343090"
  },
  {
    "text": "So let's look at\ndegree i of variable i. It's the degree\ni of chi of h1hm.",
    "start": "1343090",
    "end": "1351122"
  },
  {
    "start": "1351122",
    "end": "1357870"
  },
  {
    "text": "Which is what? It's just the degree of\na single chi hi on xi,",
    "start": "1357870",
    "end": "1364200"
  },
  {
    "text": "because this just factors to\nthe multiplication chi i and xi.",
    "start": "1364200",
    "end": "1375820"
  },
  {
    "text": "So that's just the\ndegree of this, which is, by what we saw there,\nsimply h minus 1.",
    "start": "1375820",
    "end": "1383100"
  },
  {
    "text": "Done. So it is indeed. It extends f.",
    "start": "1383100",
    "end": "1388429"
  },
  {
    "text": "The degree is correct, h\nminus 1 in each variable. The only thing that I need\nto argue is that it's unique. ",
    "start": "1388430",
    "end": "1396500"
  },
  {
    "text": "Questions? ",
    "start": "1396500",
    "end": "1402060"
  },
  {
    "text": "OK. So the uniqueness will\nfollow from the uniqueness in the univariate case.",
    "start": "1402060",
    "end": "1408060"
  },
  {
    "text": "So we already know from\nLagrange interpolation theorem that in the univariate\ncase, f tilde is unique.",
    "start": "1408060",
    "end": "1417040"
  },
  {
    "text": "Now we're going to\nrely on that to argue that in the multivariate\ncase, f tilde is unique.",
    "start": "1417040",
    "end": "1423549"
  },
  {
    "text": "OK? Questions? OK, so let's do it.",
    "start": "1423550",
    "end": "1430430"
  },
  {
    "text": "So uniqueness. ",
    "start": "1430430",
    "end": "1436690"
  },
  {
    "text": "So suppose for contradiction\nthat it's not unique. So suppose for contradiction\nthat it's not unique.",
    "start": "1436690",
    "end": "1449540"
  },
  {
    "text": "So there exists\ntwo ways to extend that agree on the hypercube.",
    "start": "1449540",
    "end": "1456290"
  },
  {
    "text": "This means that if you\nsubtract these two, you'll get a degree\nh minus 1 polynomial",
    "start": "1456290",
    "end": "1463370"
  },
  {
    "text": "in each variable that\nin the hypercube is 0. But it's not 0 because there\nare two different polynomials.",
    "start": "1463370",
    "end": "1471630"
  },
  {
    "text": "So suppose for contradiction--\nlet me just erase this because it's in my way.",
    "start": "1471630",
    "end": "1477190"
  },
  {
    "text": "Suppose for contradiction that\nthere exists a g from f to the m",
    "start": "1477190",
    "end": "1484399"
  },
  {
    "text": "to f, non-zero, but g in\nthe hypercube is 0-- that's",
    "start": "1484400",
    "end": "1497040"
  },
  {
    "text": "the contradiction--\nand of degree h minus 1",
    "start": "1497040",
    "end": "1505150"
  },
  {
    "text": "in each variable. Yes, that's a contradiction. Say, suppose there\nexist two polynomials that agree on the\nhypercube of this degree.",
    "start": "1505150",
    "end": "1513200"
  },
  {
    "text": "We're going to subtract them. We're going to get\na single polynomial that just 0 on the hypercube\nbecause the two agreed.",
    "start": "1513200",
    "end": "1519520"
  },
  {
    "text": "But it's not 0 because they\nwere not the same polynomial. What does it mean, non-zero?",
    "start": "1519520",
    "end": "1526530"
  },
  {
    "text": "What does this mean, of degree\nm minus 1 in each variable? ",
    "start": "1526530",
    "end": "1532880"
  },
  {
    "text": "The fact that it's\nnon-zero means that there exists some t1 up\nto tm in f to the m such that g",
    "start": "1532880",
    "end": "1545810"
  },
  {
    "text": "and t1 up to tm is not 0. Yeah?",
    "start": "1545810",
    "end": "1551310"
  },
  {
    "text": "So we're starting to\nthink, suppose we have g. It's not 0, but it's\n0 on the hypercube.",
    "start": "1551310",
    "end": "1558040"
  },
  {
    "text": "I'm going to argue,\nno, it can't be. I'm going to find an element in\nthe hypercube for which it's not 0. ",
    "start": "1558040",
    "end": "1567140"
  },
  {
    "text": "OK, how do I do that? What I'm going to do, I'm\ngoing to go into the hypercube",
    "start": "1567140",
    "end": "1572210"
  },
  {
    "text": "coordinate by coordinate,\nkind of by induction. And here's what I'm going to do. I'm going to say, OK, let's\nlook at g mt t2 up to tm.",
    "start": "1572210",
    "end": "1584260"
  },
  {
    "text": " This is non-zero because\non t1 it's not 0.",
    "start": "1584260",
    "end": "1591760"
  },
  {
    "text": "So this is non-zero\nof degree H minus 1.",
    "start": "1591760",
    "end": "1601690"
  },
  {
    "text": "But from the Lagrange\ninterpolation theorem,",
    "start": "1601690",
    "end": "1607809"
  },
  {
    "text": "it says that if\nit's not 0, there must exist small h in\nH, for which it's not 0,",
    "start": "1607810",
    "end": "1617410"
  },
  {
    "text": "because if it was 0 in all\nh, there's a unique way to extend the 0 polynomial. So because the uniqueness of\nthe Lagrange, it means that--",
    "start": "1617410",
    "end": "1625840"
  },
  {
    "text": "so from Lagrange's theorem,\nthis is just univariate.",
    "start": "1625840",
    "end": "1632850"
  },
  {
    "text": "It means that there must exist\nh1 such that g of h1t2 up to tm",
    "start": "1632850",
    "end": "1642600"
  },
  {
    "text": "is non-zero. Again, why? So, the t's are fixed.",
    "start": "1642600",
    "end": "1648289"
  },
  {
    "text": "This is a univariate polynomial. If it was 0 on H, then you could\nextend it to the all zeros.",
    "start": "1648290",
    "end": "1658309"
  },
  {
    "text": "But there's another\nway to extend, because the g's not all zeros.",
    "start": "1658310",
    "end": "1664100"
  },
  {
    "text": "That would be a contradiction. So therefore, there must\nexist H1 such that this is 0.",
    "start": "1664100",
    "end": "1670920"
  },
  {
    "text": "And now we're going to slowly\ncontinue in this manner. OK, now let's look\nat gh1t3 up to tm.",
    "start": "1670920",
    "end": "1681940"
  },
  {
    "text": " So h1 is fixed in\nthe small cube.",
    "start": "1681940",
    "end": "1688230"
  },
  {
    "text": "These are fixed in f. It's non-zero because\non t2, it's not 0.",
    "start": "1688230",
    "end": "1694500"
  },
  {
    "text": "That's what we established. So this is non-zero\nof degree h minus 1,",
    "start": "1694500",
    "end": "1702900"
  },
  {
    "text": "and therefore somewhere\nin this small hypercube-- somewhere on h, sorry, it\nshould be non-zero from Lagrange",
    "start": "1702900",
    "end": "1711390"
  },
  {
    "text": "interpolation theorem. So therefore from Lagrange\ninterpolation theorem, there exists h2 such that\ngh1h2 t3 up to tm is non-zero.",
    "start": "1711390",
    "end": "1731060"
  },
  {
    "text": "And you just continue\none by one until you get that there exists gh1h2\nup to hm that's non-zero,",
    "start": "1731060",
    "end": "1740110"
  },
  {
    "text": "and that's a\ncontradiction because we assumed it is 0 everywhere\non the small hypercube.",
    "start": "1740110",
    "end": "1748450"
  },
  {
    "text": "Yeah? OK. So in the notes, I\nhave the reduction. There's a proof that, kind\nof by induction, very formal,",
    "start": "1748450",
    "end": "1755330"
  },
  {
    "text": "but I think this is\ngood enough for class. Otherwise, it's going\nto be a bit boring. Questions. Yes?",
    "start": "1755330",
    "end": "1760370"
  },
  {
    "text": "STUDENT: Can you also just\nuse a counting argument? Like, you can just\ncount how many polynomials of degree\n[INAUDIBLE] when there are?",
    "start": "1760370",
    "end": "1767420"
  },
  {
    "text": "You break it up\ninto all the terms, and that's just equal to\nthe number of functions? YAEL KALAI: OK, good.",
    "start": "1767420",
    "end": "1773090"
  },
  {
    "text": "So you're saying\nmaybe you can also prove it using just\na counting algorithm and say, if there is\ntoo many, then you'll have too many polynomials,\nand that's a contradiction",
    "start": "1773090",
    "end": "1779030"
  },
  {
    "text": "because the number\nof polynomials, like the number of coefficients,\nprobably you can do something like that as well. ",
    "start": "1779030",
    "end": "1789550"
  },
  {
    "text": "Yeah. Yeah? STUDENT: Can I try to make the\ncase for the arithmetized-- YAEL KALAI: Yes, please. Good, good.",
    "start": "1789550",
    "end": "1796510"
  },
  {
    "text": "STUDENT: So the arithmetization,\nwe can compute it on any element\n[INAUDIBLE] easily,",
    "start": "1796510",
    "end": "1802838"
  },
  {
    "text": "I guess, without\nlooking at the truth table of the original function. YAEL KALAI: Good. STUDENT: If I can\njust repeat it. YAEL KALAI: Yeah.",
    "start": "1802838",
    "end": "1808358"
  },
  {
    "text": "STUDENT: If you have to\ncompute f on any point, you need to look at\nthe entire [INAUDIBLE]. YAEL KALAI: Good. Very good. OK, so what you're\nsaying is you're saying,",
    "start": "1808358",
    "end": "1815130"
  },
  {
    "text": "look, once you force me-- look at me.",
    "start": "1815130",
    "end": "1820560"
  },
  {
    "text": "I don't assume anything about f. You assume all degree. Look at me. I assume nothing,\nand look what I get.",
    "start": "1820560",
    "end": "1826299"
  },
  {
    "text": "Now you're saying, well,\nyou assume nothing, but you don't get\nthat much either, because this f tilde\nis so inefficient.",
    "start": "1826300",
    "end": "1833490"
  },
  {
    "text": "Note, to compute this f tilde-- where is it-- it\ntakes time h to the m.",
    "start": "1833490",
    "end": "1839410"
  },
  {
    "text": "You need to sum over\nall the hypercube. So computing f tilde\nis really inefficient,",
    "start": "1839410",
    "end": "1845050"
  },
  {
    "text": "whereas your f tilde is\nso efficient and nice. 100%, yes, you're right. ",
    "start": "1845050",
    "end": "1852240"
  },
  {
    "text": "I'll give it to you Vinod, yeah? No, but this will be\nuseful in settings that the arithmetized\nversion will not be.",
    "start": "1852240",
    "end": "1858240"
  },
  {
    "text": "But that's a good point. Thanks. STUDENT: Is there an easy way to\nbound the number of monomials?",
    "start": "1858240",
    "end": "1864300"
  },
  {
    "text": "Is there some unique f that\nhas at most so many monomials?",
    "start": "1864300",
    "end": "1872280"
  },
  {
    "text": "YAEL KALAI: OK, so the\nquestion is, can we bound, essentially asking, well,\ncan we make this f tilde a little more efficient\nmaybe, kind of?",
    "start": "1872280",
    "end": "1878690"
  },
  {
    "text": "So in general, we cannot\nbecause in general-- it depends what you want\nto assume about the f.",
    "start": "1878690",
    "end": "1884780"
  },
  {
    "text": "So I'm saying, I don't want\nto make any assumptions about the f. And as you will\nsee, it's not just because I want to just\nbe as generous as general",
    "start": "1884780",
    "end": "1893370"
  },
  {
    "text": "as possible for the\nsake of generality. Actually, in the way we use\nit, it really has no structure.",
    "start": "1893370",
    "end": "1898870"
  },
  {
    "text": "The f we use is very\narbitrary, so we can't assume that it comes from\na low degree, whatever, nothing.",
    "start": "1898870",
    "end": "1906150"
  },
  {
    "text": "And in that case, if\nyou want to allow any f, then you have to have all\nthe monomials because just",
    "start": "1906150",
    "end": "1913780"
  },
  {
    "text": "by a counting argument, if the\nnumber of f's is, like, all",
    "start": "1913780",
    "end": "1919090"
  },
  {
    "text": "the possible h to the m bits. So you have to have that\nmany monomials, otherwise where would you store\nthat information?",
    "start": "1919090",
    "end": "1924100"
  },
  {
    "text": "So in general, you can't\ndo with less monomials. However, in many\ncases, you can do.",
    "start": "1924100",
    "end": "1931420"
  },
  {
    "text": "And actually, even, we'll use\nit, the fact that in some cases, you can do with less monomials.",
    "start": "1931420",
    "end": "1937480"
  },
  {
    "text": "So we'll see that. But that's a great, great point.",
    "start": "1937480",
    "end": "1942600"
  },
  {
    "text": "Any other questions? So let me just tell you,\nthis is a very good theorem",
    "start": "1942600",
    "end": "1948210"
  },
  {
    "text": "to stop and ask questions\nbecause it really will get back to this so much. And even if not in this\nclass, you'll see it in--",
    "start": "1948210",
    "end": "1954840"
  },
  {
    "text": "it will come at you. It's a really, really important\nand fundamental theorem.",
    "start": "1954840",
    "end": "1960365"
  },
  {
    "text": " So I guess, next,\nI'm going to try",
    "start": "1960365",
    "end": "1967450"
  },
  {
    "text": "to convince you why it is such\nan important and fundamental theorem. And I'm going to start\nwith just looking back",
    "start": "1967450",
    "end": "1976929"
  },
  {
    "text": "at the example of doubly\nefficient interactive proofs for counting triangles, just\nas a motivating example.",
    "start": "1976930",
    "end": "1984880"
  },
  {
    "text": "We'll do it quick. And then we'll go into I think\nthe more interesting and general",
    "start": "1984880",
    "end": "1990910"
  },
  {
    "text": "way of using this low-degree\nextension together with the Sumcheck to get\ndoubly efficient proofs",
    "start": "1990910",
    "end": "1996549"
  },
  {
    "text": "for any low-depth\ncomputation, so kind of arbitrary computation. So we'll see that next.",
    "start": "1996550",
    "end": "2002460"
  },
  {
    "text": "But let's first,\nkind of as a warm-up, look at the example\nfor counting triangles.",
    "start": "2002460",
    "end": "2008160"
  },
  {
    "text": "Why this low-degree\nextension with Sumcheck, how can we use these together\nto count triangles in a graph?",
    "start": "2008160",
    "end": "2015140"
  },
  {
    "text": "So now, note, what's the goal? We have a graph. I want to know how\nmany triangles there are in the graph.",
    "start": "2015140",
    "end": "2020880"
  },
  {
    "text": "Now, it's not that hard. It takes time, n to the third. I go over every three\npairs of vertices and check",
    "start": "2020880",
    "end": "2026000"
  },
  {
    "text": "if there's a triangle. So I have an n to the\nn cubed algorithm. But let's say the verifier\ncan't run in time n cubed.",
    "start": "2026000",
    "end": "2032310"
  },
  {
    "text": "The poor guy, he gets the\ngraph, so size n squared. All he can do is run time\nn squared, essentially,",
    "start": "2032310",
    "end": "2039470"
  },
  {
    "text": "with some polylog overhead,\nbut only n squared. So he can't count. So now what does he do?",
    "start": "2039470",
    "end": "2046820"
  },
  {
    "text": "He needs help. Now I'll show you how the\nprover can help him in a way that now, yes, he only needs\nto run in time n squared",
    "start": "2046820",
    "end": "2055340"
  },
  {
    "text": "or tilde of n squared. OK, so let's look\nat that example.",
    "start": "2055340",
    "end": "2061510"
  },
  {
    "text": "So let me erase this. ",
    "start": "2061510",
    "end": "2072510"
  },
  {
    "text": "So here is an example\nwhere this is useful. ",
    "start": "2072510",
    "end": "2078620"
  },
  {
    "text": "We're given a graph. ",
    "start": "2078620",
    "end": "2084638"
  },
  {
    "text": "And the goal, we want a\nprotocol, a proof where the prover will\nconvince to the verifier that the number of\ntriangles in g is,",
    "start": "2084639",
    "end": "2099770"
  },
  {
    "text": "let's say, some number beta. I want to prove for this fact.",
    "start": "2099770",
    "end": "2106480"
  },
  {
    "text": "How will I-- so I'm\ngoing to prove to you. You guys are time of n squared. You can only read the graph.",
    "start": "2106480",
    "end": "2112780"
  },
  {
    "text": "I'm going to help you, prove to\nyou that the number of triangles is exactly beta while you\njust run time n squared.",
    "start": "2112780",
    "end": "2122640"
  },
  {
    "text": "How do I do that? Let's look at the\nfunction f from--",
    "start": "2122640",
    "end": "2128500"
  },
  {
    "text": "so suppose v is n. So I look at the function\nfrom 0,1 to log n to 0,1,",
    "start": "2128500",
    "end": "2140010"
  },
  {
    "text": "and this just tells me whether-- so it's like 0,1 to the log. It's you can think of this\nas being kind of n by n,",
    "start": "2140010",
    "end": "2149760"
  },
  {
    "text": "so it takes log n bits that\ndescribe one vertex log n bit to describe another\nvertex, and it outputs 1 if",
    "start": "2149760",
    "end": "2156600"
  },
  {
    "text": "and only if there's an edge. So you can think of each-- so f takes two vertices\ni and j, and outputs 1",
    "start": "2156600",
    "end": "2170280"
  },
  {
    "text": "if there is an edge\nand 0 otherwise.",
    "start": "2170280",
    "end": "2176220"
  },
  {
    "text": "So f is just the\nadjacency matrix. The adjacency matrix\nis n squared bits.",
    "start": "2176220",
    "end": "2181660"
  },
  {
    "text": "This is n squared, so I just\nput it in, define it this way. So again, f takes two vertices.",
    "start": "2181660",
    "end": "2188240"
  },
  {
    "text": "It outputs 1 if there is an\nedge between these vertices. ",
    "start": "2188240",
    "end": "2193558"
  },
  {
    "text": "Now, so what do we need?",
    "start": "2193558",
    "end": "2199410"
  },
  {
    "text": "So now, what do we know? We know that this f has\na low-degree extension.",
    "start": "2199410",
    "end": "2206460"
  },
  {
    "start": "2206460",
    "end": "2211810"
  },
  {
    "text": "So this is of degree.  Essentially this is multilinear\nbecause I started with 0,1.",
    "start": "2211810",
    "end": "2220760"
  },
  {
    "text": "So f tilde is multilinear,\nso degree 1 in each variable.",
    "start": "2220760",
    "end": "2227900"
  },
  {
    "text": "Now, why am I looking at\nthese adjacency matrix? What do I want?",
    "start": "2227900",
    "end": "2233880"
  },
  {
    "text": "What do I want to prove? How does this relate to\nthe number of triangles? So the number of triangles--\nwe started discussing this last",
    "start": "2233880",
    "end": "2240770"
  },
  {
    "text": "time-- is just the sum over\nall kind of triangles,",
    "start": "2240770",
    "end": "2247260"
  },
  {
    "text": "i, j, k, or sorry, all\nkind of three nodes, i, j, k, and v. And\nit's a triangle if what?",
    "start": "2247260",
    "end": "2254400"
  },
  {
    "text": "If f, i, j is one and f,\nj, k is and f, i, k is one.",
    "start": "2254400",
    "end": "2267480"
  },
  {
    "text": "So I want to know how many\ntriplets is this thing one? If an edge is missing\nin one of them,",
    "start": "2267480",
    "end": "2275110"
  },
  {
    "text": "then this is going to be\n0 because I multiplied. So I want to know how many\nof them do I have one?",
    "start": "2275110",
    "end": "2283180"
  },
  {
    "text": "And that's almost the\nnumber of triangles, except that I need to\ndivide by 6 because I",
    "start": "2283180",
    "end": "2288660"
  },
  {
    "text": "counted each triangle,\neach three vertices, all the permutations. So that's what the prover\nwants to prove to the verifier.",
    "start": "2288660",
    "end": "2294950"
  },
  {
    "text": " So let me-- I said v, but let\nme call it 0,1 to the log n,",
    "start": "2294950",
    "end": "2303600"
  },
  {
    "text": "which is the same. Now I'm done. Why am I done?",
    "start": "2303600",
    "end": "2308953"
  },
  {
    "text": "Because I'm saying,\nyou know what? So how do I prove this? I'm going to use the Sumcheck. But you're saying, wait, but\nthis is not a polynomial.",
    "start": "2308953",
    "end": "2316560"
  },
  {
    "text": "No worries. Here you go. Now it's a polynomial.",
    "start": "2316560",
    "end": "2321930"
  },
  {
    "text": "Now, I didn't change\nanything because it's only over the small cube. So the fact that I extended\ndoesn't change the sum",
    "start": "2321930",
    "end": "2332230"
  },
  {
    "text": "because of the extension. So the prover needs to\nprove that the sum of this",
    "start": "2332230",
    "end": "2339120"
  },
  {
    "text": "polynomial-- so before,\nit was multilinear. Now it's degree 2\nbecause each variable,",
    "start": "2339120",
    "end": "2344800"
  },
  {
    "text": "we multiply 3 polynomials,\neach one appears in two. Fine, degree 2 in each variable.",
    "start": "2344800",
    "end": "2350510"
  },
  {
    "text": "And we need to prove\nthat the sum is beta.",
    "start": "2350510",
    "end": "2356340"
  },
  {
    "text": "This is exactly what\nSumcheck is for, precisely. Note, what does the prover--",
    "start": "2356340",
    "end": "2362455"
  },
  {
    "text": "so what are we going to do? We're going to do\nSumcheck protocol. What is the runtime of the\nverifier in the Sumcheck",
    "start": "2362455",
    "end": "2367670"
  },
  {
    "text": "protocol? So they interact. We do, every time you get rid of\none variable, one by one by one.",
    "start": "2367670",
    "end": "2373220"
  },
  {
    "text": "At the end, the verifier\nneeds to compute",
    "start": "2373220",
    "end": "2378380"
  },
  {
    "text": "the final polynomial,\nwhich in our case is this entire polynomial, and\na single point in the extension.",
    "start": "2378380",
    "end": "2386930"
  },
  {
    "text": "Namely, he needs to compute f\ntilde on a random point in f in, I guess, f\nsquared three times.",
    "start": "2386930",
    "end": "2396570"
  },
  {
    "text": "But that he can do\nvery, very easily. Or what do you mean,\nin time n squared. Because what is f tilde?",
    "start": "2396570",
    "end": "2402630"
  },
  {
    "text": "f tilde, as Vinod said,\nyou need to enumerate over all the small cube.",
    "start": "2402630",
    "end": "2409530"
  },
  {
    "text": "It's a lot. But here are the small\ncube is n squared. So it really takes time n\nsquared, so order of n ,",
    "start": "2409530",
    "end": "2416178"
  },
  {
    "text": "I think it is, three times. He needs to compute this,\nbut this is polylog. So by the way, throughout this--",
    "start": "2416178",
    "end": "2422243"
  },
  {
    "text": "I mentioned it last time,\nbut I'll mention it again. Throughout this course, the\npolylog factors, I'm not even--",
    "start": "2422243",
    "end": "2429480"
  },
  {
    "text": "these are all you can\nput things in tildes. I don't want to pay attention\ntoo much to polylog factors.",
    "start": "2429480",
    "end": "2439050"
  },
  {
    "text": "So really what he worked,\nthe runtime of the verifier is just n squared. The communication\ncomplexity is nothing.",
    "start": "2439050",
    "end": "2445960"
  },
  {
    "text": "m number of variables\nis order log n. d, the degree is constant.",
    "start": "2445960",
    "end": "2452940"
  },
  {
    "text": "Log f, well, don't take f\nto be too long, too big. Take f so the log\nf is not small.",
    "start": "2452940",
    "end": "2460580"
  },
  {
    "text": "And note, even the prover\ndoesn't run in too long. What's the runtime of the\nprover in the Sumcheck protocol?",
    "start": "2460580",
    "end": "2468300"
  },
  {
    "text": "It's m, the number of variables,\nlog n, times h to the m. Now, h to the m seems\nbig, but again, it's",
    "start": "2468300",
    "end": "2475010"
  },
  {
    "text": "n squared, times the time\nit takes to compute f once, which is, again, n squared.",
    "start": "2475010",
    "end": "2482410"
  },
  {
    "text": "So it is polynomial. And now the verifier runs\nin time of n squared. ",
    "start": "2482410",
    "end": "2488589"
  },
  {
    "text": "So that's just to illustrate. ",
    "start": "2488590",
    "end": "2494130"
  },
  {
    "text": "Yeah. STUDENT: [INAUDIBLE] runtime\nhas to be [INAUDIBLE] cubed [INAUDIBLE]. YAEL KALAI: Yeah,\nright, and he is. He is actually n to the\nfourth in this example,",
    "start": "2494130",
    "end": "2502060"
  },
  {
    "text": "because he needs\nto compute this-- OK, let's see.",
    "start": "2502060",
    "end": "2507167"
  },
  {
    "text": "He's more, actually. He needs to compute this thing. So he needs to do it\nfor every i, j, k in--",
    "start": "2507167",
    "end": "2512743"
  },
  {
    "text": " not just the compute, to\ndo the entire Sumcheck.",
    "start": "2512743",
    "end": "2518840"
  },
  {
    "text": "So in the Sumcheck,\nhe needs to h to the m, which is m here is\ngoing to be 3 log n in this.",
    "start": "2518840",
    "end": "2528089"
  },
  {
    "text": "So it's already m\ncubed, and then he needs to compute t of f, the\npolynomial, which is n squared.",
    "start": "2528090",
    "end": "2535170"
  },
  {
    "text": "So he's n to the fifth. Because computing this once\nis n squared without the sum.",
    "start": "2535170",
    "end": "2541599"
  },
  {
    "text": "But he also needs to run over\nall the sum and then also log factors. Yeah, he's running more.",
    "start": "2541600",
    "end": "2548710"
  },
  {
    "text": "But it's considered\ndoubly efficient because he's still\npolynomial overhead.",
    "start": "2548710",
    "end": "2554450"
  },
  {
    "text": "Yeah? STUDENT: Is there a way\nto get into the omega or something [INAUDIBLE]\nruntime [INAUDIBLE] that's the actual runtime?",
    "start": "2554450",
    "end": "2561167"
  },
  {
    "text": "STUDENT: Even n cubed. YAEL KALAI: Yeah, even\nn cubed, you're saying. Yeah, currently.",
    "start": "2561167",
    "end": "2566589"
  },
  {
    "text": "So n cubed, you can get\nit using recent kind of really nice works, with\njust optimizing a little bit.",
    "start": "2566590",
    "end": "2576310"
  },
  {
    "text": "That's the work of Dan Sung and\nfriends, they get a linear time. So they can get an n cubed.",
    "start": "2576310",
    "end": "2582350"
  },
  {
    "text": "I don't know how-- but it may be that for this\nspecific protocol it's possible. Actually, I don't know.",
    "start": "2582350",
    "end": "2587658"
  },
  {
    "text": "It's a good question. But let me, actually, before\nyou get too excited about it--",
    "start": "2587658",
    "end": "2592900"
  },
  {
    "text": "so yeah. STUDENT: [INAUDIBLE] the number\nof rounds is log n, right?",
    "start": "2592900",
    "end": "2598260"
  },
  {
    "text": "YAEL KALAI: The number\nof rounds is log n. STUDENT: [INAUDIBLE]\nactually get a-- YAEL KALAI: Great. Great.",
    "start": "2598260",
    "end": "2603450"
  },
  {
    "text": "Question of two messages. So when I finished--\nwhere's Gabe?",
    "start": "2603450",
    "end": "2609150"
  },
  {
    "text": "So you came to me\nlast time, right? So when I started talking\nabout this last lecture,",
    "start": "2609150",
    "end": "2614230"
  },
  {
    "text": "Gabe came to me, rightly\nso, and said, well-- we just started talking about\nit, and he's like, well, OK,",
    "start": "2614230",
    "end": "2620680"
  },
  {
    "text": "but you can do it\nso much easier. And it's true. This was kind of as\nan example to show.",
    "start": "2620680",
    "end": "2628990"
  },
  {
    "text": "But actually, going since\nyou asked the question also, actually, there's very\nmuch simpler protocol",
    "start": "2628990",
    "end": "2634500"
  },
  {
    "text": "that Gabe noticed. So let me just write it here. The idea is that the prover will\nonly send two matrices over.",
    "start": "2634500",
    "end": "2644339"
  },
  {
    "text": "So it's a bit\ncommunication complexity. Here, the communication\ncomplexity is polylog. But if we just care\nabout verifier runtime",
    "start": "2644340",
    "end": "2651240"
  },
  {
    "text": "and we don't care about the\ncommunication complexity, then the prover can just\nsend the verifier the--",
    "start": "2651240",
    "end": "2657210"
  },
  {
    "text": "so let A be the\nadjacency matrix. Let me now instead of f write it\nin the more classical notation",
    "start": "2657210",
    "end": "2663390"
  },
  {
    "text": "of a matrix A, the adjacency\nmatrix, where there's a 1,",
    "start": "2663390",
    "end": "2669130"
  },
  {
    "text": "if and only if there's\nan edge, and 0 otherwise. The prover will send the matrix\nA 2, which is A squared--",
    "start": "2669130",
    "end": "2679440"
  },
  {
    "text": "he can also send A, but\nthe verifier knows A-- and A3, which is A cubed.",
    "start": "2679440",
    "end": "2685040"
  },
  {
    "text": " Now, the number of triangles\nis just the trace of A cubed.",
    "start": "2685040",
    "end": "2694560"
  },
  {
    "text": "So it's very easy to compute. You just compute. Now, how do you know\nthat this is A squared",
    "start": "2694560",
    "end": "2699970"
  },
  {
    "text": "and this is A cubed? Well, we saw last\ntime a protocol, a randomized protocol\nfor checking equality",
    "start": "2699970",
    "end": "2706650"
  },
  {
    "text": "between matrices via\nthis Reed-Solomon kind of decoding idea.",
    "start": "2706650",
    "end": "2712500"
  },
  {
    "text": "So you do that. So there you go. STUDENT: That's really, really\nnice, but I'm not happy.",
    "start": "2712500",
    "end": "2718250"
  },
  {
    "text": "YAEL KALAI: But then\nblame Gabe, of course. STUDENT: [INAUDIBLE] YAEL KALAI: Exactly.",
    "start": "2718250",
    "end": "2724457"
  },
  {
    "text": "You're right. STUDENT: [INAUDIBLE]",
    "start": "2724458",
    "end": "2734150"
  },
  {
    "text": "YAEL KALAI: You can get-- OK. ",
    "start": "2734150",
    "end": "2741140"
  },
  {
    "text": "So there's a really\nbeautiful work of R, R, R, and they get constant\nround complexity.",
    "start": "2741140",
    "end": "2748940"
  },
  {
    "text": "And so using their particle,\nprobably you can get very good. But I need to think\nabout the parameters.",
    "start": "2748940",
    "end": "2754170"
  },
  {
    "text": "I think you can get in\nconstant round probably really good parameters, but I need\nto think about the details.",
    "start": "2754170",
    "end": "2763410"
  },
  {
    "text": "Yeah. OK. So this was just a\nmotivating example",
    "start": "2763410",
    "end": "2769559"
  },
  {
    "text": "to show you that you can take\nsomething also with no structure whatsoever, like\nadjacency matrix.",
    "start": "2769560",
    "end": "2775097"
  },
  {
    "text": "It's a no structure. It's arbitrary. But using the technique\nof a low-degree extension,",
    "start": "2775097",
    "end": "2780849"
  },
  {
    "text": "you can add structure to it, and\nthen you can use the Sumcheck. ",
    "start": "2780850",
    "end": "2787450"
  },
  {
    "text": "So more generally,\nI want to say, I think what's really\nthe power of this",
    "start": "2787450",
    "end": "2794650"
  },
  {
    "text": "is in error correcting codes,\nwhat's nice about error correcting codes\nis if you cheat,",
    "start": "2794650",
    "end": "2801290"
  },
  {
    "text": "you need to cheat\neverywhere in the sense. Things kind of percolate. In proof system,\nthis kind of thing",
    "start": "2801290",
    "end": "2807910"
  },
  {
    "text": "is very, very useful\nbecause we want to-- proof systems about\ncatching cheaters.",
    "start": "2807910",
    "end": "2814900"
  },
  {
    "text": "When we construct a\nconstructive proof, our goal is to catch a\nprover, a cheating prover.",
    "start": "2814900",
    "end": "2820700"
  },
  {
    "text": "And so you want some encoding. You want to say, if\nyou cheat somewhere, he has to cheat everywhere.",
    "start": "2820700",
    "end": "2826970"
  },
  {
    "text": "So this idea of having-- in some sense,\nyou want kind of--",
    "start": "2826970",
    "end": "2832450"
  },
  {
    "text": "if you want the proof to--  it's very natural.",
    "start": "2832450",
    "end": "2837990"
  },
  {
    "text": "Some encoding comes\ninto proof systems, and we'll see that next when\nwe look at the GKR protocol",
    "start": "2837990",
    "end": "2844560"
  },
  {
    "text": "for low-depth computation. So that's coming next.",
    "start": "2844560",
    "end": "2849790"
  },
  {
    "text": "Now, before I start\nthis protocol, I have a question for you. So last time-- this\nis a long class.",
    "start": "2849790",
    "end": "2856320"
  },
  {
    "text": "It's a three hour class. It's tiring. And it's technical, which\nis even more tiring.",
    "start": "2856320",
    "end": "2862720"
  },
  {
    "text": "So now I want to\nask you two options. Option 1, we'll take two\nbreaks, one after one hour,",
    "start": "2862720",
    "end": "2869020"
  },
  {
    "text": "one after the second hour. It will give you-- or we take one in the middle,\nwhich is maybe a little longer.",
    "start": "2869020",
    "end": "2877109"
  },
  {
    "text": "How many people are for two kind\nof short breaks to decompose?",
    "start": "2877110",
    "end": "2882820"
  },
  {
    "text": "Let's take a break now for five\nminutes and then we'll do GKR. ",
    "start": "2882820",
    "end": "2888800"
  },
  {
    "text": "OK. So so far, the applications, we\nsaw for the Sumcheck and even",
    "start": "2888800",
    "end": "2898368"
  },
  {
    "text": "if you want the\nlow-degree extension, were both kind of counting. We said, let's\ncount the Sharp-SAT,",
    "start": "2898368",
    "end": "2906599"
  },
  {
    "text": "let's count the\nnumber of triangles. So you may think, OK, well,\nSumcheck is about counting,",
    "start": "2906600",
    "end": "2912780"
  },
  {
    "text": "so yeah, I can see how you can\ndo counting problems by either they're already\nkind of low degree",
    "start": "2912780",
    "end": "2917930"
  },
  {
    "text": "and you just apply\nSumcheck automatically, or they're not low\ndegree and then you do a low-degree extension,\nand now you have the Sumcheck.",
    "start": "2917930",
    "end": "2924860"
  },
  {
    "text": "So maybe you can do counting\nthings, but that's it. So now what I want\nto show you next",
    "start": "2924860",
    "end": "2930980"
  },
  {
    "text": "is that, no, actually you\ncan do a ton with that. So just the low-degree\nextension and Sumcheck together,",
    "start": "2930980",
    "end": "2937050"
  },
  {
    "text": "that's all you need. And what I'm going\nto show you now is how to do a doubly\nefficient interactive proof",
    "start": "2937050",
    "end": "2943009"
  },
  {
    "text": "for all low-depth circuits. So let me explain.",
    "start": "2943010",
    "end": "2948630"
  },
  {
    "text": "So suppose you have\nhere some circuit C. It's really, really\nbig, but it's shallow.",
    "start": "2948630",
    "end": "2957590"
  },
  {
    "text": "OK, so think of this circuit\nsize S, which is really big.",
    "start": "2957590",
    "end": "2963140"
  },
  {
    "text": "The depth is d,\nwhich is very small.",
    "start": "2963140",
    "end": "2970589"
  },
  {
    "text": "Now what I'm going\nto show you is a doubly efficient, interactive\nproof where the verifier runs",
    "start": "2970590",
    "end": "2978260"
  },
  {
    "text": "in time only d, or linear\nin d or d and poly log in S.",
    "start": "2978260",
    "end": "2985742"
  },
  {
    "text": "And the prover, of course, he\nneeds to compute the circuit. He runs in time S. He has\nto run the computation.",
    "start": "2985742",
    "end": "2991040"
  },
  {
    "text": "And only poly\noverhead, so poly of S. So I'm going to\nshow you a doubly efficient interactive proof\nfor any bounded depth.",
    "start": "2991040",
    "end": "2997530"
  },
  {
    "text": "Yes. STUDENT: Just to clarify\nhere, circuit size is just the number of gates? YAEL KALAI: Good. The circuit size is just\nnumber of gates, yeah. STUDENT: Thank you.",
    "start": "2997530",
    "end": "3003130"
  },
  {
    "text": "YAEL KALAI: Yeah. Now, note, this already\nseems weird because--",
    "start": "3003130",
    "end": "3009230"
  },
  {
    "text": "OK, so the prover,\nI said, the goal is the prover is going\nto convince the verifier that, let's say, so the goal is\nto convince the verifier that C",
    "start": "3009230",
    "end": "3020970"
  },
  {
    "text": "of x equals, let's say, 1. ",
    "start": "3020970",
    "end": "3027270"
  },
  {
    "text": "Think of C as any Boolean\ncircuit of small depth.",
    "start": "3027270",
    "end": "3032550"
  },
  {
    "text": "And the verifier should\nbe very efficient. But now you're saying, just\nreading C is not efficient.",
    "start": "3032550",
    "end": "3038115"
  },
  {
    "text": "If you have an\narbitrary circuit, just reading the circuit\nis not efficient. You're right. So for this to be\nmeaningful, C needs",
    "start": "3038115",
    "end": "3045359"
  },
  {
    "text": "to have a succinct\nrepresentation. So it needs to be kind\nof a uniform circuit that you can specify\nit succinctly.",
    "start": "3045360",
    "end": "3052060"
  },
  {
    "text": "And indeed we will\nassume that C is what's called logspace uniform,\nwhich essentially means",
    "start": "3052060",
    "end": "3065380"
  },
  {
    "text": "that there's a logspace\nmachine, a log S space machine, a uniform\nTuring machine that",
    "start": "3065380",
    "end": "3075039"
  },
  {
    "text": "generates the circuit. But actually, for now,\ndon't think about. Just suppose it's just kind of\nthere's some uniform condition.",
    "start": "3075040",
    "end": "3083099"
  },
  {
    "text": "So the verifier has succinct\nrepresentation of the C, because it will only\ncome much, much later when you'll see this--",
    "start": "3083100",
    "end": "3089860"
  },
  {
    "text": "you'll need to deal\nwith this issue. So the goal is for the prover\nto prove to the verifier",
    "start": "3089860",
    "end": "3097150"
  },
  {
    "text": "that C of x equals 1. And the idea, the way we're\ngoing to do this essentially is,",
    "start": "3097150",
    "end": "3103360"
  },
  {
    "text": "the high-level idea,\nis we're going to--",
    "start": "3103360",
    "end": "3108400"
  },
  {
    "text": "so I want to catch the prover. He's cheating. How am I going to catch him? I want to make\nsure he's correct.",
    "start": "3108400",
    "end": "3114495"
  },
  {
    "text": "So the prover comes to me and\nsays, look, C of x equal 1. The value here is 1.",
    "start": "3114495",
    "end": "3119830"
  },
  {
    "text": "I want to reduce the\nclaim on the output value to a claim about something\nin one layer below,",
    "start": "3119830",
    "end": "3127470"
  },
  {
    "text": "by the small cell protocol. And then I want to reduce\nthe claim about something",
    "start": "3127470",
    "end": "3133050"
  },
  {
    "text": "about layer below to layer\nbelow and layer below and layer below and layer below\nand so on, until I get a claim",
    "start": "3133050",
    "end": "3138090"
  },
  {
    "text": "about the input, which the\nverifier can compute on its own. That's kind of the idea. So for this, the\nfirst thing we assume,",
    "start": "3138090",
    "end": "3145030"
  },
  {
    "text": "and this is without loss of\ngenerality, that C is layered.",
    "start": "3145030",
    "end": "3150620"
  },
  {
    "text": " What do I mean by layered? There's an output gate.",
    "start": "3150620",
    "end": "3156060"
  },
  {
    "text": "There's kind of that\nlet's call it layer 0. And then you go to\ngate, and then there's",
    "start": "3156060",
    "end": "3161420"
  },
  {
    "text": "kind of wires to\none layer below. We'll call it layer 1. And then there are gates\nto one layer below.",
    "start": "3161420",
    "end": "3167060"
  },
  {
    "text": "We'll call the layer 2. So there's no kind of long\ngate that goes from the input straight to-- it's\nreally layer by layer.",
    "start": "3167060",
    "end": "3174440"
  },
  {
    "text": "So that's the first assumption. So we can talk about layers. So what it means is\nthat gate in layer i",
    "start": "3174440",
    "end": "3186020"
  },
  {
    "text": "is connected only to\ngates in layer i plus 1,",
    "start": "3186020",
    "end": "3203520"
  },
  {
    "text": "where we think of i\nequals 0 is output",
    "start": "3203520",
    "end": "3211040"
  },
  {
    "text": "and i equal d is input layer. ",
    "start": "3211040",
    "end": "3219713"
  },
  {
    "text": "So this is just for\nthe sake of simplicity. You can always add\ndummy gates to make",
    "start": "3219713",
    "end": "3225180"
  },
  {
    "text": "sure that each gate is only\nconnected to one layer below. If before it was connected to\nsomeone closer to the input,",
    "start": "3225180",
    "end": "3233440"
  },
  {
    "text": "you just add dummy\ngates to go up, up, up.",
    "start": "3233440",
    "end": "3238569"
  },
  {
    "text": "So again, let me just make\nsure everyone's on board. When I say a gate is in layer\ni, essentially what I mean,",
    "start": "3238570",
    "end": "3245900"
  },
  {
    "text": "the depth from there to the\ninput, the number, the path, the length of the path is i.",
    "start": "3245900",
    "end": "3251170"
  },
  {
    "text": "So any gate that is kind of\ni away from the input, it's connected to gates that are only\ni minus 1 away from the input.",
    "start": "3251170",
    "end": "3260079"
  },
  {
    "text": "So that's an assumption\nI'm going to make. And the way I can realize it is\nby just if the original circuit",
    "start": "3260080",
    "end": "3266650"
  },
  {
    "text": "was not in this way,\nI'm just going to add dummy gates in the middle. So if a circuit at layer 3\nwas connected immediately",
    "start": "3266650",
    "end": "3273070"
  },
  {
    "text": "to the input, I'm going to\njust copy the input in 1, 2, and then I'm going\nto connect it.",
    "start": "3273070",
    "end": "3279260"
  },
  {
    "text": "So things are going\nto be layered. Questions about this assumption?",
    "start": "3279260",
    "end": "3285270"
  },
  {
    "text": "OK. So now the circuit is layered,\nand now what I want to do,",
    "start": "3285270",
    "end": "3290830"
  },
  {
    "text": "I want to reduce. So now I'm going to have\nan interactive protocol. So the idea in GKR is to have\nan interactive protocol that",
    "start": "3290830",
    "end": "3307810"
  },
  {
    "text": "consists of d sub protocol, and\neach sub protocol essentially",
    "start": "3307810",
    "end": "3325570"
  },
  {
    "text": "reduces a claim\nabout some layer i",
    "start": "3325570",
    "end": "3330700"
  },
  {
    "text": "to a claim about layer i plus\n1, so a claim about the layer that's one closer to the input.",
    "start": "3330700",
    "end": "3337800"
  },
  {
    "text": "So these are how these\nsub protocols will go. I'm going to explain the\nGKR protocol formally,",
    "start": "3337800",
    "end": "3345040"
  },
  {
    "text": "but this is just intuition. ",
    "start": "3345040",
    "end": "3351610"
  },
  {
    "text": "So let me take this, actually. ",
    "start": "3351610",
    "end": "3364790"
  },
  {
    "text": "So the first thing is-- ",
    "start": "3364790",
    "end": "3371930"
  },
  {
    "text": "here is here is\nkind of the idea. So, again, this is\nnot the protocol.",
    "start": "3371930",
    "end": "3378210"
  },
  {
    "text": "I'm giving you an intuition\nof, helping you understand",
    "start": "3378210",
    "end": "3383700"
  },
  {
    "text": "where I'm going to go. So we want to prove\na cheating prover. Suppose he's cheating.",
    "start": "3383700",
    "end": "3388930"
  },
  {
    "text": "He's trying to argue\nthat C of x equals 1. But think of it, it's not. We want to catch him.",
    "start": "3388930",
    "end": "3394780"
  },
  {
    "text": "How do we catch him? If he's cheating,\nhow do we catch him? So one idea is to say,\nwell, if he's cheating here,",
    "start": "3394780",
    "end": "3402240"
  },
  {
    "text": "he must-- so let's say\nthis is an AND gate. Suppose it's 0, but\nhe's claiming it's 1.",
    "start": "3402240",
    "end": "3407670"
  },
  {
    "text": "So it means that I'm going\nto ask him, you know what? It can't be, if I tell\nhim, give me both of these.",
    "start": "3407670",
    "end": "3414310"
  },
  {
    "text": "He also must be cheating. So I'm going to tell him,\nyou know what, 1 is 1. So in that case, you claim\nthat both of these are 1.",
    "start": "3414310",
    "end": "3421110"
  },
  {
    "text": "He's like, yeah. Or if it was an OR,\nI'm saying, this is 1, so you claim that one\nof them is [INAUDIBLE].",
    "start": "3421110",
    "end": "3426330"
  },
  {
    "text": "He's like, yeah. But in reality, they're both 0. So now, what I can\nsay, you know what?",
    "start": "3426330",
    "end": "3432670"
  },
  {
    "text": "OK, fine. I'm going to choose\none of them at random. Really? OK. Tell me that this is a 1. ",
    "start": "3432670",
    "end": "3443550"
  },
  {
    "text": "One of these has to be a cheat. So I'm going to\npress him-- really? So show me. Show me this.",
    "start": "3443550",
    "end": "3450532"
  },
  {
    "text": "And then I'll go down-- show me, show me,\nshow me, show me. And then he's stuck\nbecause it's an input. So this is very easy approach.",
    "start": "3450532",
    "end": "3456770"
  },
  {
    "text": "The problem with this approach,\nI lose probability 1/2 in each layer because suppose if it's\nan AND, let's say it's a 0,",
    "start": "3456770",
    "end": "3465380"
  },
  {
    "text": "then he tells me one\nof them is zeroes. But in reality, I\nknow they're both 1.",
    "start": "3465380",
    "end": "3473360"
  },
  {
    "text": "So I'm going to\ntell them, really? Both of them are 0? Fine, I'll choose one of them.",
    "start": "3473360",
    "end": "3478430"
  },
  {
    "text": "Show me this is 0. But maybe this really was the\n0,1, and then he'll, of course, cheat.",
    "start": "3478430",
    "end": "3483670"
  },
  {
    "text": "So I'm like, finger crossed,\nthis was actually a 1, but only with probability 1/2.",
    "start": "3483670",
    "end": "3490350"
  },
  {
    "text": "So that idea works very well. It's just the sum is\n1 over 2 to the d. So that's not good\nbecause 1 over 2 to the d",
    "start": "3490350",
    "end": "3496340"
  },
  {
    "text": "is the size of the circuit. I need to-- that sucks. OK, no good.",
    "start": "3496340",
    "end": "3502670"
  },
  {
    "text": "So what do we do? So here is the basic idea. The idea is, you know what? Don't ask per gate, per gate.",
    "start": "3502670",
    "end": "3510200"
  },
  {
    "text": "That's not a good idea. Let's ask something about an\nencoding of the entire layer.",
    "start": "3510200",
    "end": "3516220"
  },
  {
    "text": "So instead, I'm going\nto have to give me something kind of about\nthe low-degree extension of this layer.",
    "start": "3516220",
    "end": "3523000"
  },
  {
    "text": "So I'm not going\nto ask, reduce it. Tell me this. Tell me this. No, tell me\nsomething about this.",
    "start": "3523000",
    "end": "3530079"
  },
  {
    "text": "And then I'm going to\nargue, if he cheated here, he must also cheat here\nwith very high probability.",
    "start": "3530080",
    "end": "3539010"
  },
  {
    "text": "And again, if you\ncheat here, I'm going to argue that\nyou must cheat here with very high probability,\nand so on and so forth.",
    "start": "3539010",
    "end": "3547042"
  },
  {
    "text": "That's kind of the\nhigh-level idea. But now you can say, well,\nthis is a bit confusing. Before, when I said,\nif you cheated here,",
    "start": "3547042",
    "end": "3554200"
  },
  {
    "text": "I'm going to ask him open\ncheat on one of these, it's very easy for me to check.",
    "start": "3554200",
    "end": "3559410"
  },
  {
    "text": "If you say, this is\n0, and it's an AND, you're claiming that\none of these is 0.",
    "start": "3559410",
    "end": "3565170"
  },
  {
    "text": "But I know one of these is 1. So it's very easy to argue. How do I go--",
    "start": "3565170",
    "end": "3571240"
  },
  {
    "text": "So I can just say, OK, prove\nto me that this is a 0. That's easy.",
    "start": "3571240",
    "end": "3576610"
  },
  {
    "text": "How do I go from arguing\nabout the low-degree extension",
    "start": "3576610",
    "end": "3582180"
  },
  {
    "text": "of a layer to a low-degree\nextension of another layer? What do I ask you even?",
    "start": "3582180",
    "end": "3587570"
  },
  {
    "text": " And it turns out\nthat what I do here is really low-degree\nextension and Sumcheck.",
    "start": "3587570",
    "end": "3596539"
  },
  {
    "text": "So I go from here to here. It's just a Sumcheck. So that's what\nwe're going to see.",
    "start": "3596540",
    "end": "3602790"
  },
  {
    "text": "That's kind of the\nhigh-level idea. Any questions?",
    "start": "3602790",
    "end": "3610100"
  },
  {
    "text": "Let me just make sure I didn't\nforget to say something. ",
    "start": "3610100",
    "end": "3615150"
  },
  {
    "text": "OK, good. STUDENT: What's the goal\nfor the verifier runtime? YAEL KALAI: Good, OK.",
    "start": "3615150",
    "end": "3620839"
  },
  {
    "text": "What we're going to get-- OK, goal, as\nefficient as possible. What we get is the\nverifier's runtime",
    "start": "3620840",
    "end": "3628230"
  },
  {
    "text": "and the communication\ncomplexity will be d, the depth, times polylog the circuit size.",
    "start": "3628230",
    "end": "3634210"
  },
  {
    "text": "And the reason we\npaid this depth is because in the\nprotocol, we're",
    "start": "3634210",
    "end": "3639619"
  },
  {
    "text": "going to run d sub protocols. We're going to go from\na claim on layer i",
    "start": "3639620",
    "end": "3646190"
  },
  {
    "text": "to another claim of layer i. And each kind of\nreduction in the layers",
    "start": "3646190",
    "end": "3653599"
  },
  {
    "text": "is going to be kind of a\nSumcheck protocol, which will consist of log\nS rounds or log S--",
    "start": "3653600",
    "end": "3661100"
  },
  {
    "text": "the variable's\ngoing to be log S. So eventually, the\nruntime of the verifier",
    "start": "3661100",
    "end": "3667220"
  },
  {
    "text": "will be something like the depth\ntimes log the circuit size. And the prover is going to run\ntime poly in the circuit size.",
    "start": "3667220",
    "end": "3674660"
  },
  {
    "text": "But we'll go over\nall these parameters once we see the protocol. But that's kind of\nthe theorem that we'll",
    "start": "3674660",
    "end": "3681060"
  },
  {
    "text": "write when we get there. Great. Thanks. Any other questions?",
    "start": "3681060",
    "end": "3686180"
  },
  {
    "text": "Yes. STUDENT: So the verifier isn't\nable to see the whole circuit. YAEL KALAI: Right. STUDENT: How does\nthe verifier get--",
    "start": "3686180",
    "end": "3692230"
  },
  {
    "text": "YAEL KALAI: Good, good,\ngood, good, good, good. So the verifier, as\nI said, he can't even see the entire circuit.",
    "start": "3692230",
    "end": "3698010"
  },
  {
    "text": "All he has is some\nuniform Turing machine that generates the circuit. So that's a very good question.",
    "start": "3698010",
    "end": "3704540"
  },
  {
    "text": "How does he-- we'll see. The answer is, it's\ncomplicated, but we'll see.",
    "start": "3704540",
    "end": "3712529"
  },
  {
    "text": "We'll see as we go along. He'll use his kind of uniform\naccess to help him out.",
    "start": "3712530",
    "end": "3719430"
  },
  {
    "text": "It's really unclear\nhow at this point. Great. OK, so what do we do?",
    "start": "3719430",
    "end": "3725260"
  },
  {
    "text": "So first thing, so step 1, this\nis just, again, for simplicity,",
    "start": "3725260",
    "end": "3731000"
  },
  {
    "text": "arithmetize the circuit. Remember last time we\nhad arithmetization?",
    "start": "3731000",
    "end": "3739030"
  },
  {
    "text": "So arithmetize, all I mean\nhere is convert an OR to-- convert an AND to\nmultiplication,",
    "start": "3739030",
    "end": "3745570"
  },
  {
    "text": "convert an OR into the\nsum minus multiplication. Just convert the AND/OR gates\ninto addition and multiplication",
    "start": "3745570",
    "end": "3755350"
  },
  {
    "text": "gate. So step 1, arithmetize C so\nthat it consists of only and--",
    "start": "3755350",
    "end": "3775490"
  },
  {
    "text": "sorry, add, and multi gates. ",
    "start": "3775490",
    "end": "3783730"
  },
  {
    "text": "Now, you're right. At this point, the verifier\ndoesn't even know-- so we'll talk about\nhow the verifier has",
    "start": "3783730",
    "end": "3790630"
  },
  {
    "text": "access to these things later. But the prover, what\nhe does at least, the prover first\narithmetizes the circuit.",
    "start": "3790630",
    "end": "3797900"
  },
  {
    "text": "So it's add, and now everything\nall the gates are multiplication gates and addition gates.",
    "start": "3797900",
    "end": "3804520"
  },
  {
    "text": "Good. Now, what he does, so I want\nto convince you that C of x we",
    "start": "3804520",
    "end": "3809700"
  },
  {
    "text": "said 1, so I'll make it 1. What do I do? I'm the prover.",
    "start": "3809700",
    "end": "3814800"
  },
  {
    "text": "I take my input x. I compute the values of all\nthe gates in the circuit.",
    "start": "3814800",
    "end": "3821990"
  },
  {
    "text": "So what does the prover do?  First, compute the value of\nall the gates of C. So now",
    "start": "3821990",
    "end": "3842110"
  },
  {
    "text": "the prover computed\nall these bits, which are the values of the gates.",
    "start": "3842110",
    "end": "3848290"
  },
  {
    "text": "Note, this is still over-- it's Boolean. It's over g of 2.",
    "start": "3848290",
    "end": "3853810"
  },
  {
    "text": "Everything is 0,1. OK. Next thing I do is--",
    "start": "3853810",
    "end": "3861640"
  },
  {
    "text": "the prover does, he computes\nthe low-degree extension of each layer.",
    "start": "3861640",
    "end": "3867730"
  },
  {
    "text": "So what are the parameters? How do we do it? There's many ways to do it.",
    "start": "3867730",
    "end": "3872880"
  },
  {
    "text": " Let me add, actually, another\nassumption just for simplicity.",
    "start": "3872880",
    "end": "3880580"
  },
  {
    "text": "Let's assume that the number\nof gates in each layer is exactly S, like the\nsize of the circuit.",
    "start": "3880580",
    "end": "3887880"
  },
  {
    "text": "I'm just assuming that so I\ndon't need to now have different S's. It's just going to be annoying. Why can I assume that the\nnumber of gates in each layer",
    "start": "3887880",
    "end": "3895300"
  },
  {
    "text": "is exactly S? Just add dummy gates or just 0. Nobody's going to look at them. I'm just going to--",
    "start": "3895300",
    "end": "3900700"
  },
  {
    "text": "it'll just make\nmy notations easy. So now, if there's less,\njust add zeroes, 0, 0, 0, 0.",
    "start": "3900700",
    "end": "3907549"
  },
  {
    "text": "So now it's like\nthis kind of circuit by just adding\nzeroes everywhere.",
    "start": "3907550",
    "end": "3912610"
  },
  {
    "text": "OK, good. Now, what does the prover do? He thinks-- so now, each\nlayer consists of S values.",
    "start": "3912610",
    "end": "3930520"
  },
  {
    "text": "That's an assumption,\nthat we added demi gates. So now we have S\nvalues per layer.",
    "start": "3930520",
    "end": "3936280"
  },
  {
    "text": "Many of them can be 0,\nif the layer was short, but there's S values.",
    "start": "3936280",
    "end": "3941480"
  },
  {
    "text": " So let's write these values. This is for layer i, let's write\nthese values in a hypercube.",
    "start": "3941480",
    "end": "3951980"
  },
  {
    "text": "So let's write these values\nas kind of a function from H to the n to 0,1, where\nH to the m is exactly S.",
    "start": "3951980",
    "end": "3966450"
  },
  {
    "text": "So we said each\nlayer has S elements. Write them in some hypercube\nwhere the size of the hypercube",
    "start": "3966450",
    "end": "3972238"
  },
  {
    "text": "is exactly S, so you can\nwrite all these elements in the hypercube in some\norder that makes sense to you.",
    "start": "3972238",
    "end": "3977500"
  },
  {
    "text": "So if you want to\ntake H to be 0,1, just take the binary\nrepresentation of each gate.",
    "start": "3977500",
    "end": "3983960"
  },
  {
    "text": "The gates are numbered,\nand Vi of this number is the value of this\ngate in layer i.",
    "start": "3983960",
    "end": "3992849"
  },
  {
    "text": "So each gate in layer i\nhas kind of a number, which is a number in H to the m, and\nthis is the value of the gate.",
    "start": "3992850",
    "end": "4002779"
  },
  {
    "text": "Now, what is H and what is m? I said it needs to be\nof size H to the m.",
    "start": "4002780",
    "end": "4008650"
  },
  {
    "text": "H to the m needs to be S\nso I have place to write all the values of the layers.",
    "start": "4008650",
    "end": "4015080"
  },
  {
    "text": "But which H and\nwhich m do I choose? And now, actually,\nthere's freedom. So many times, it's\neasier to think",
    "start": "4015080",
    "end": "4023410"
  },
  {
    "text": "like we're used to binary\nbecause we're kind of computers. So it's comfortable to think of\nH as being 0,1 and m to be log",
    "start": "4023410",
    "end": "4031299"
  },
  {
    "text": "S. You can think of it this way. That's fine. However, later, like probably\nRachel will tell you about it,",
    "start": "4031300",
    "end": "4044310"
  },
  {
    "text": "it'll be convenient, actually-- Rachel is like, oh no,\nwhat did I sign up for. It's like, I'm not\ngoing to tell you.",
    "start": "4044310",
    "end": "4050510"
  },
  {
    "text": "It'll be convenient,\nactually, to take the parameters, which are H\nbeing log S and m being log S--",
    "start": "4050510",
    "end": "4064690"
  },
  {
    "text": "fine. I tried to put in\nthe same, didn't work-- m being log\nS over log log S.",
    "start": "4064690",
    "end": "4074920"
  },
  {
    "text": "So it'll be convenient to\nthink of these parameters. So first, just note that\nlog S to the power of m,",
    "start": "4074920",
    "end": "4085070"
  },
  {
    "text": "which is log S over\nlog log S, is just--",
    "start": "4085070",
    "end": "4091240"
  },
  {
    "text": "this is just 2 to the log\nlog S times this thing.",
    "start": "4091240",
    "end": "4097374"
  },
  {
    "text": " These two cancels, and\ntherefore you get indeed S.",
    "start": "4097374",
    "end": "4104700"
  },
  {
    "text": "So I'm just saying,\nthese parameters, indeed, if you take\nH to the power of m,",
    "start": "4104700",
    "end": "4110210"
  },
  {
    "text": "you get S back because H\nlog S to the power of m",
    "start": "4110210",
    "end": "4116729"
  },
  {
    "text": "log S over log log S, log S\nis like 2 to the log log S, and then the two log log S\ncanceled, and you get two",
    "start": "4116729",
    "end": "4123259"
  },
  {
    "text": "to the log S, which\nis S. So this is good. You get what you want.",
    "start": "4123260",
    "end": "4130080"
  },
  {
    "text": "So you can be like,\nwhy am I taking this setting of parameters? And you also may\nbe kind of annoyed, like, why are we talking\nso much about parameters?",
    "start": "4130080",
    "end": "4136870"
  },
  {
    "text": "This is kind of boring. And I agree. However, this is important\nbecause these parameters are used a lot and\nfor a good reason.",
    "start": "4136870",
    "end": "4144278"
  },
  {
    "text": "So let me tell you why\nthese parameters, why am I spending your time\non these parameters, this specific choice.",
    "start": "4144279",
    "end": "4151100"
  },
  {
    "text": "And the reason is\nthat later, when we'll take extension--\nremember, we",
    "start": "4151100",
    "end": "4156859"
  },
  {
    "text": "take an extension over a field. We'll take a big field. Now, the field, if you\nremember the Sumcheck protocol,",
    "start": "4156859",
    "end": "4164490"
  },
  {
    "text": "the soundness you\nget is like m times d, the number of variables\ntimes the degree over f.",
    "start": "4164490",
    "end": "4172939"
  },
  {
    "text": "So f needs to be of\nsize at least m times d.",
    "start": "4172939",
    "end": "4178399"
  },
  {
    "text": "So it will need to be at\nleast like this m, which is, if you take binary, like 0,1,\nit'll need to be at least log S,",
    "start": "4178399",
    "end": "4187920"
  },
  {
    "text": "which is the m. Or here, the number of variables\nis not constant usually, and it'll need to be bigger\nthan the number of variables.",
    "start": "4187920",
    "end": "4195590"
  },
  {
    "text": "And now the problem\nis if you take--",
    "start": "4195590",
    "end": "4201710"
  },
  {
    "text": "so what's very desirable\nin later applications, in particular for\nPCP applications,",
    "start": "4201710",
    "end": "4207573"
  },
  {
    "text": "which we'll talk about,\nit's really beautiful. For those who haven't\nheard of what PCPs are, we'll learn about it.",
    "start": "4207573",
    "end": "4212590"
  },
  {
    "text": "It's really, really nice. But for these applications,\nwhat you want is that f the size",
    "start": "4212590",
    "end": "4219090"
  },
  {
    "text": "of the extension you\ntake is poly in H.",
    "start": "4219090",
    "end": "4227060"
  },
  {
    "text": "And now if you take H to\nbe 0,1, which is binary, which is what we all like, then\nthe field becomes constant size",
    "start": "4227060",
    "end": "4235130"
  },
  {
    "text": "because it needs to\nbe for applications. Like, to get the\nPCP, you need f. If f is bigger, you'll get\na super polynomial object.",
    "start": "4235130",
    "end": "4243150"
  },
  {
    "text": "So for later applications, it's\nimportant that the field is not",
    "start": "4243150",
    "end": "4248810"
  },
  {
    "text": "too much bigger than H, that\nit's polynomially related to H. And then if you take H to be\nsmall, like constant, like 0,1,",
    "start": "4248810",
    "end": "4258090"
  },
  {
    "text": "then f is a constant, and then\nyou don't get sums because m is not a constant. So you get sums bigger than 1.",
    "start": "4258090",
    "end": "4263100"
  },
  {
    "text": "You got nothing. So if you didn't follow,\nit doesn't matter. You will see it when\nwe talk about PCP.",
    "start": "4263100",
    "end": "4269360"
  },
  {
    "text": "But this is just to tell you\nwhy I'm choosing these weird parameters as opposed to 0,1.",
    "start": "4269360",
    "end": "4274675"
  },
  {
    "text": "The point is that later\nwe'll need these parameters when we'll talk about PCP. And so that's why\nwe're using them now.",
    "start": "4274675",
    "end": "4280610"
  },
  {
    "text": "STUDENT: [INAUDIBLE] GKR itself? YAEL KALAI: GKR\nitself you don't need. STUDENT: Of course, you're\nnever writing down the entire--",
    "start": "4280610",
    "end": "4287017"
  },
  {
    "text": "YAEL KALAI: Exactly. Exactly. Because in GKR,\nit's interactive. You're never writing\ndown the entire thing.",
    "start": "4287017",
    "end": "4292560"
  },
  {
    "text": "For GKR itself, you can take\nH to be 0,1 and you can take f to be big and the kind\nof parameters you want.",
    "start": "4292560",
    "end": "4300470"
  },
  {
    "text": "I was actually debating\nif to teach it with 0,1, and then to change\nall the parameters. In many-- if you look at\nJustin Thaler's notes that are",
    "start": "4300470",
    "end": "4308250"
  },
  {
    "text": "in the website, I gave\nthe exact chapter, then he uses 0,1\nbecause it's easier.",
    "start": "4308250",
    "end": "4314579"
  },
  {
    "text": "But since I'm going to\nchange the parameters anyway, I thought I'll\njust start with m. And I think it's good to\nget accustomed to these type",
    "start": "4314580",
    "end": "4320760"
  },
  {
    "text": "of parameters because\nthey show up a lot. So this is just kind of-- if\nyou didn't follow exact choice,",
    "start": "4320760",
    "end": "4326840"
  },
  {
    "text": "don't worry about it. It turns out this is\nthe choice I want. And why, you'll learn about\nit when we talk about PCPs.",
    "start": "4326840",
    "end": "4335000"
  },
  {
    "text": "But if you want to think\nabout H as 0,1 and m as log S,",
    "start": "4335000",
    "end": "4340280"
  },
  {
    "text": "you can do so. All the lecture,\neverything I say makes sense in that parameters,\nand you'll understand everything",
    "start": "4340280",
    "end": "4346010"
  },
  {
    "text": "with these parameters\nas well for today. ",
    "start": "4346010",
    "end": "4351590"
  },
  {
    "text": "So good. So now what will the prover do?",
    "start": "4351590",
    "end": "4357270"
  },
  {
    "text": "The prover will-- he\nhas for every layer,",
    "start": "4357270",
    "end": "4366120"
  },
  {
    "text": "he has the values of the gates. He computes the values of the\ngates of that layer, which",
    "start": "4366120",
    "end": "4374929"
  },
  {
    "text": "you can think about it\nas for each layer i,",
    "start": "4374930",
    "end": "4382350"
  },
  {
    "text": "the prover computes Vi,\nwhich is the value of all",
    "start": "4382350",
    "end": "4387360"
  },
  {
    "text": "the gates in layer i. So we can think of the gates as\ngoing from H to the m to 0,1.",
    "start": "4387360",
    "end": "4395679"
  },
  {
    "text": "Each gate has a\nlabel in H to the m because it's kind of the\nsame as it is amorphous to S. So each gate has a label here.",
    "start": "4395680",
    "end": "4403540"
  },
  {
    "text": "And this is just the value\nof the gate on input x.",
    "start": "4403540",
    "end": "4409170"
  },
  {
    "text": "So this is the proof. There's no protocol yet. I'm just telling you\nwhat the prover computes before the protocol begins. ",
    "start": "4409170",
    "end": "4416599"
  },
  {
    "text": "And now the prover can compute\nthe low-degree extension.",
    "start": "4416600",
    "end": "4423860"
  },
  {
    "text": "So this-- let me actually\nbe careful with room. So I'll write it here. ",
    "start": "4423860",
    "end": "4433070"
  },
  {
    "text": "This is nothing but the\nlow-degree extension of Vi. ",
    "start": "4433070",
    "end": "4441270"
  },
  {
    "text": "OK, now we're in business. Once the prover computed this,\nthen we're in good shape.",
    "start": "4441270",
    "end": "4447650"
  },
  {
    "text": "So now what? Now let's go back\nto the protocol. What do they do? So as we said, the\ngoal is to reduce.",
    "start": "4447650",
    "end": "4456260"
  },
  {
    "text": "So remember, the first thing the\nprover gave the verifier-- you can think of the\nprotocol started with V0, which is the output\nlayer, and one element.",
    "start": "4456260",
    "end": "4466679"
  },
  {
    "text": "Let me call it Z0,\nbecause we're going to call them Z, and Z0 in H\nto the m in this time, which",
    "start": "4466680",
    "end": "4473699"
  },
  {
    "text": "is kind of-- actually, the output\nlayer has just one gate. It's 0,1. We added a bunch of zeros to\nit because dummy gates assume",
    "start": "4473700",
    "end": "4481847"
  },
  {
    "text": "that it's kind of size S. But there's one gate. Let's call this gate Z0.",
    "start": "4481848",
    "end": "4486940"
  },
  {
    "text": "And he's arguing on Z0\nthere's a certain value V0. In our case, we said it's 1. So he comes with an argument.",
    "start": "4486940",
    "end": "4494160"
  },
  {
    "text": "He tells it, look, if you\nlook at the output layer-- this is the output layer. ",
    "start": "4494160",
    "end": "4502389"
  },
  {
    "text": "If you look at the output\nlayer and the relevant gate and the actual single, not dummy\ngate, I claim the output is V0,",
    "start": "4502390",
    "end": "4511150"
  },
  {
    "text": "namely, let's say 1. Now, I say, why\nwould I trust you? And he said, OK,\nlet me help you.",
    "start": "4511150",
    "end": "4518034"
  },
  {
    "text": "Here.  I can always add tilde.",
    "start": "4518035",
    "end": "4524340"
  },
  {
    "text": "So now let's see. What is V0 tilde\nand any element Z?",
    "start": "4524340",
    "end": "4531320"
  },
  {
    "text": "What is this value? Remember, this is the output. Yeah? So it is what?",
    "start": "4531320",
    "end": "4538860"
  },
  {
    "text": "And what I'm saying here\nis actually general. Even let's think of i, layer i. You can think of layer 0 if\nyou want, but in any layer.",
    "start": "4538860",
    "end": "4546310"
  },
  {
    "text": "Take any layer, and take any\nZi, even in the extension, in f to the n.",
    "start": "4546310",
    "end": "4551440"
  },
  {
    "text": "Here, it happened to be\nthat the Z0 was actually kind of not in the\nextension even because we started with a certain gate.",
    "start": "4551440",
    "end": "4557800"
  },
  {
    "text": "But let's think of it more\nbroadly because later we'll go to will be in the extension. So the prover claims\nthat this is Vi.",
    "start": "4557800",
    "end": "4568989"
  },
  {
    "text": "We start with i equals 0. I don't know if that's true.",
    "start": "4568990",
    "end": "4574030"
  },
  {
    "text": "I want to reduce it to a\nclaim about layer i plus 1, one layer down. How do I do that?",
    "start": "4574030",
    "end": "4580020"
  },
  {
    "text": "What is Vi tilde and Zi? Zi in general is\nin the extension. In this case, it's not, but in\ngeneral it's in the extension.",
    "start": "4580020",
    "end": "4587590"
  },
  {
    "text": "So first thing, let me move\nZi not in the extension. So let's remember,\nwhat is Vi tilde?",
    "start": "4587590",
    "end": "4593760"
  },
  {
    "text": "Vi tilde is sum.  Vi, that's kind of the\noriginal Vi, and H--",
    "start": "4593760",
    "end": "4603370"
  },
  {
    "text": "let me make sure I'm\nconsistent with my notation so I won't confuse myself-- ",
    "start": "4603370",
    "end": "4611590"
  },
  {
    "text": "and point P in H to the\nm times this chi P of Zi.",
    "start": "4611590",
    "end": "4625900"
  },
  {
    "text": "I just kind of-- so what is the low-degree\nextension of V? It's the Vi on every point, not\nin the extension, in the cube,",
    "start": "4625900",
    "end": "4634199"
  },
  {
    "text": "in H to the m, times this\nkind of chi function, which was this--\noh, I erased it.",
    "start": "4634200",
    "end": "4640550"
  },
  {
    "text": "But it's the-- yeah,\nthis multiplication. Each one of them was this\ndegree H minus 1 function.",
    "start": "4640550",
    "end": "4648210"
  },
  {
    "text": "But what is Vi?",
    "start": "4648210",
    "end": "4653310"
  },
  {
    "text": "Vi, we can easily relate\nit to the layer one below.",
    "start": "4653310",
    "end": "4659370"
  },
  {
    "text": "Vi is either an add gate\nor a multiplication gate. If it's an add gate, it's an\nadd of two elements below.",
    "start": "4659370",
    "end": "4665743"
  },
  {
    "text": "And if it's a\nmultiplication, it's a multiplication of\ntwo elements below. So now, to connect it\nto the layer below,",
    "start": "4665743",
    "end": "4673110"
  },
  {
    "text": "and this goes to the question\nof what is the verifier know or doesn't know. What I'm going to use\nis the circuit has--",
    "start": "4673110",
    "end": "4680810"
  },
  {
    "text": "so the circuit is\nassociated for every i with an add function and\nthe multiplication function.",
    "start": "4680810",
    "end": "4688850"
  },
  {
    "text": "And this function goes from 0,1\nto the, I guess, 3 log S to 0,1.",
    "start": "4688850",
    "end": "4699310"
  },
  {
    "text": "And it just says whether\nyou take a gate in layer i",
    "start": "4699310",
    "end": "4704680"
  },
  {
    "text": "and two gates in layer\ni plus 1, and it checks whether there's an ad there.",
    "start": "4704680",
    "end": "4710449"
  },
  {
    "text": "So it takes kind of\ni, j, and k, and it says 1 if and only if gate i--",
    "start": "4710450",
    "end": "4720495"
  },
  {
    "text": " sorry, i is taken.",
    "start": "4720495",
    "end": "4726800"
  },
  {
    "text": "What notation did I use? OK.",
    "start": "4726800",
    "end": "4731820"
  },
  {
    "text": "Sorry. It takes a gate P, w1, and\nw2 in S, one of the gates,",
    "start": "4731820",
    "end": "4742360"
  },
  {
    "text": "and it outputs 1 if and\nonly if gate P in layer",
    "start": "4742360",
    "end": "4748869"
  },
  {
    "text": "i is a add of gates w1 and w2 in\nlayer i plus 1, and 0 otherwise.",
    "start": "4748870",
    "end": "4769460"
  },
  {
    "start": "4769460",
    "end": "4774500"
  },
  {
    "text": "I start 0 and I go down to d. Yeah, and 0 otherwise.",
    "start": "4774500",
    "end": "4780400"
  },
  {
    "text": " So just check if there's an and\nthere, if there's an add there.",
    "start": "4780400",
    "end": "4787659"
  },
  {
    "text": "And mult is exactly the same. Mult checks if there's\na multiplication gate. So mult also takes P,\na point P in layer i,",
    "start": "4787660",
    "end": "4796240"
  },
  {
    "text": "two points in layer i plus 1,\nand it outputs 1 if and only if this gate P in\nlayer i is actually",
    "start": "4796240",
    "end": "4802360"
  },
  {
    "text": "a mult gate, a\nmultiplication gate, and it connects to gates\nw1w2 in layer ii plus 1.",
    "start": "4802360",
    "end": "4808770"
  },
  {
    "text": " So what is this? Now we can say this is\nnothing but sum of P.",
    "start": "4808770",
    "end": "4819679"
  },
  {
    "text": "Let sum over all the\npossible w1 and w2, all the gates in the\nlayer below, and see.",
    "start": "4819680",
    "end": "4827940"
  },
  {
    "text": "Maybe it adds. So if there's add, if\nadd ipw1w2, if that's 1,",
    "start": "4827940",
    "end": "4837560"
  },
  {
    "text": "then you have Vi. Then VP is just Viw1 plus Viw2.",
    "start": "4837560",
    "end": "4844774"
  },
  {
    "start": "4844774",
    "end": "4850110"
  },
  {
    "text": "Again, if P is an add gate. If it's not, an add\ngate, you'll get a 0.",
    "start": "4850110",
    "end": "4856050"
  },
  {
    "text": "So you're not adding anything. If it happens to be an add gate,\nthen the value of this gate",
    "start": "4856050",
    "end": "4861810"
  },
  {
    "text": "is just the sum of the\nvalues of the gates below.  If P is not an add\ngate, all this is 0.",
    "start": "4861810",
    "end": "4869679"
  },
  {
    "text": "I didn't do anything, because I\nmultiplied by add, which is 0. OK. ",
    "start": "4869680",
    "end": "4878650"
  },
  {
    "text": "plus-- let me just open--\nplus mult Ipw1w2 if it's",
    "start": "4878650",
    "end": "4890580"
  },
  {
    "text": "a multiplication gate, and let's\nsay it's connected to w1, w2,",
    "start": "4890580",
    "end": "4897450"
  },
  {
    "text": "I'm still the sum. Then what do I do then? What's the value of VIP--",
    "start": "4897450",
    "end": "4902890"
  },
  {
    "text": "I mean, Vi in point P? STUDENT: Vi and point\nw1 times [INAUDIBLE].",
    "start": "4902890",
    "end": "4909240"
  },
  {
    "text": "YAEL KALAI: Exactly,\nVi and point w1 times, because it's a multiplication\ngate, Vi in w2.",
    "start": "4909240",
    "end": "4917670"
  },
  {
    "text": "Sorry, plus 1. Thank you. Thank you. Yes, great.",
    "start": "4917670",
    "end": "4922960"
  },
  {
    "text": "Good.  And all of these times this\npolynomial Chi P of Zi.",
    "start": "4922960",
    "end": "4935610"
  },
  {
    "start": "4935610",
    "end": "4943735"
  },
  {
    "text": "Good.  So now where are we?",
    "start": "4943735",
    "end": "4950370"
  },
  {
    "text": "We want to prove\nsomething about layer i, but we managed to\nwrite it as sum",
    "start": "4950370",
    "end": "4958610"
  },
  {
    "text": "of elements in layer i plus 1. That's great. That's really what we wanted.",
    "start": "4958610",
    "end": "4963840"
  },
  {
    "text": "We want one layer down.  And note, this is really\nsimilar to a Sumcheck.",
    "start": "4963840",
    "end": "4977000"
  },
  {
    "text": "What do we have here? We want to prove that Vi-- so I want to tell the\nprover, prove to me",
    "start": "4977000",
    "end": "4982940"
  },
  {
    "text": "that instead of-- he\nclaims Vi is this value. I'm like, I don't know\nwhat this value is.",
    "start": "4982940",
    "end": "4988040"
  },
  {
    "text": "Prove to me that Vi\nis equal to the sum.  So prove to me that Vi is equal\nto something about the layer",
    "start": "4988040",
    "end": "4995750"
  },
  {
    "text": "below. How does he prove that\nsomething is equal to the sum?",
    "start": "4995750",
    "end": "5002424"
  },
  {
    "text": "Sumcheck, right? So do the Sumcheck protocol. And now we're saying, wait,\nbut where is the polynomials?",
    "start": "5002424",
    "end": "5009920"
  },
  {
    "text": "No problem. Everything's over h of the m. Look at the extensions. ",
    "start": "5009920",
    "end": "5016040"
  },
  {
    "text": "This is already polynomial. We don't care about it. That's good. ",
    "start": "5016040",
    "end": "5021410"
  },
  {
    "text": "Look at the extensions. We have a low-degree\nextension up here.",
    "start": "5021410",
    "end": "5029440"
  },
  {
    "text": "Any polynomial can be extended. Look at the extension.",
    "start": "5029440",
    "end": "5034640"
  },
  {
    "text": "So now we want to argue\nthat Vi equals the sum.",
    "start": "5034640",
    "end": "5040930"
  },
  {
    "text": "This entire thing-- this\nentire thing, I argue,",
    "start": "5040930",
    "end": "5046570"
  },
  {
    "text": "is a low-degree polynomial. Why is this a\nlow-degree polynomial?",
    "start": "5046570",
    "end": "5051650"
  },
  {
    "text": "Let's see. First of all, it's a polynomial\nover H to the 3m because m here",
    "start": "5051650",
    "end": "5056850"
  },
  {
    "text": "and two w's here, so we're\ntalking about 3m variables. But Mm is small.",
    "start": "5056850",
    "end": "5062460"
  },
  {
    "text": "This is good. m is log S over\nlog log S, so that's good.",
    "start": "5062460",
    "end": "5069790"
  },
  {
    "text": "What about here? So let's first\nlook at the degree. The degree of these things,\nit's the low-degree extension.",
    "start": "5069790",
    "end": "5076130"
  },
  {
    "text": "It's H minus 1 of each one,\nbecause I'm really taking each one is H. Each add,\neverything is kind of-- oh,",
    "start": "5076130",
    "end": "5082690"
  },
  {
    "text": "add is even better because we\ndid 0,1, so add is even better.",
    "start": "5082690",
    "end": "5088090"
  },
  {
    "text": "You could do-- oh, sorry.",
    "start": "5088090",
    "end": "5094032"
  },
  {
    "text": " Can I take it back? ",
    "start": "5094033",
    "end": "5102190"
  },
  {
    "text": "I also wanted to add an\nH. Everything is in--",
    "start": "5102190",
    "end": "5108520"
  },
  {
    "text": "I made a mistake of putting 0,1,\nbut I need to be consistent. If I'm in, I'm in H. So everything is in\nH. So everything here",
    "start": "5108520",
    "end": "5118369"
  },
  {
    "text": "is degree H minus 1, so good. So it's more than H1\nis 1 because I have",
    "start": "5118370",
    "end": "5123440"
  },
  {
    "text": "your multiplication. w1\nappears here, w1 appears here, so it's going to be\ndegree 2H minus 1.",
    "start": "5123440",
    "end": "5129179"
  },
  {
    "text": "Fine. But H minus 1 is small. It's like log, so two logs. So the degree is small, the\nnumber of variables small.",
    "start": "5129180",
    "end": "5134610"
  },
  {
    "text": "Perfect. Just do Sumcheck. So now you're asking,\nwhat is the GKR protocol?",
    "start": "5134610",
    "end": "5140450"
  },
  {
    "text": "Sumcheck. That's it. You start with V0.",
    "start": "5140450",
    "end": "5146720"
  },
  {
    "text": "You tell him, do Sumcheck.  Convert this claim\nabout the output,",
    "start": "5146720",
    "end": "5154290"
  },
  {
    "text": "which the verifier has no idea. It's so far away from him. He doesn't know what-- let's do the Sumcheck protocol\nto reduce this claim to a claim",
    "start": "5154290",
    "end": "5164110"
  },
  {
    "text": "about-- about this thing, essentially.",
    "start": "5164110",
    "end": "5169239"
  },
  {
    "text": "But now this is very confusing\nbecause what happens when we do the Sumcheck protocol? When we do the\nSumcheck protocol,",
    "start": "5169240",
    "end": "5175300"
  },
  {
    "text": "we reduce, if you remember--\nlet's look for a second at the Sumcheck here. We want to prove that the\nsum of something there,",
    "start": "5175300",
    "end": "5185719"
  },
  {
    "text": "it's a huge thing. Add V plus mult, multiplication,\nall this craziness, whatever.",
    "start": "5185720",
    "end": "5192640"
  },
  {
    "text": "Low degree is equal to\nbeta, is equal to something, in that case, V0. We run the Sumcheck protocol.",
    "start": "5192640",
    "end": "5199070"
  },
  {
    "text": "At the end, the verifier\nneeds to compute to check. In the Sumcheck\nprotocol, we assume",
    "start": "5199070",
    "end": "5205090"
  },
  {
    "text": "that the verifier has oracle\naccess to the polynomial.",
    "start": "5205090",
    "end": "5210300"
  },
  {
    "text": "But essentially, he needs\nto compute this function, the polynomial, at some point.",
    "start": "5210300",
    "end": "5216239"
  },
  {
    "text": "Now, maybe he has oracle\naccess at that point. Great but maybe. But there's no oracles\nin this, in GKR.",
    "start": "5216240",
    "end": "5224409"
  },
  {
    "text": "So what do we do now? But here's an important\nobservation that we'll use. Note, yes, the prover needs--",
    "start": "5224410",
    "end": "5231929"
  },
  {
    "text": "sorry, the verifier. When he verifies\nthe Sumcheck, he needs to compute the\npolynomial on a single point.",
    "start": "5231930",
    "end": "5239969"
  },
  {
    "text": "But this point t, t1 of\nthe tm, is a random point",
    "start": "5239970",
    "end": "5245700"
  },
  {
    "text": "that's chosen by the verifier. What is the Sumcheck protocol? The verifier\nchooses a random t1.",
    "start": "5245700",
    "end": "5253120"
  },
  {
    "text": "He gets a polynomial,\nthen chooses a random t2, and so on and so forth. At the end, he needs to\nevaluate f and t1 of the tm",
    "start": "5253120",
    "end": "5260370"
  },
  {
    "text": "that he chose. We will use this.",
    "start": "5260370",
    "end": "5265480"
  },
  {
    "text": "So now let's see. What happened here? After we did the Sumcheck, the\npoor verifier needs to compute--",
    "start": "5265480",
    "end": "5275560"
  },
  {
    "text": "let me again, make sure I'm\nconsistent with my notation. Good.",
    "start": "5275560",
    "end": "5280610"
  },
  {
    "text": "The verifier now, so\nhe does the Sumcheck. Let's denote kind\nof the randomness",
    "start": "5280610",
    "end": "5287690"
  },
  {
    "text": "that he used in Sumcheck by a--",
    "start": "5287690",
    "end": "5293239"
  },
  {
    "text": "so we started with i. Let's say that when we\nreached here, let's say,",
    "start": "5293240",
    "end": "5298640"
  },
  {
    "text": "he needs to compute a add tilde\non Zi plus 1, because we moved",
    "start": "5298640",
    "end": "5309140"
  },
  {
    "text": "to layer i plus 1, 0 Zi plus 1,\n1, Zi plus 1, 2 times Vi plus 1,",
    "start": "5309140",
    "end": "5324760"
  },
  {
    "text": "and another-- and so that was one. So Z-- don't like this notation.",
    "start": "5324760",
    "end": "5330110"
  },
  {
    "text": "Sorry. Let me change it.  It's more cumbersome on\nthe board than in the--",
    "start": "5330110",
    "end": "5336830"
  },
  {
    "text": "OK. Let me call Z0, Z1, Z2. So suppose they do\na Sumcheck protocol.",
    "start": "5336830",
    "end": "5341960"
  },
  {
    "text": "In the Sumcheck, it's\non three n variables. So let's denote\nthe randomness used",
    "start": "5341960",
    "end": "5347320"
  },
  {
    "text": "by the verifier and the\nprotocol by Z0, Z1, Z2. Each of them is in f to the n.",
    "start": "5347320",
    "end": "5353093"
  },
  {
    "text": " So now the verifier needs\nto compute this function",
    "start": "5353093",
    "end": "5359900"
  },
  {
    "text": "and the points Z0, Z1, Z2. What is this function\nat this point? It's add times Vi plus\n1 tilde on Z1 plus Vi",
    "start": "5359900",
    "end": "5372000"
  },
  {
    "text": "plus 1 tilde on Z2 plus\nmult Z0, Z1, Z2 times Vi",
    "start": "5372000",
    "end": "5386230"
  },
  {
    "text": "plus 1 Z1 tilde times\nVi plus 1 Z2 tilde,",
    "start": "5386230",
    "end": "5393010"
  },
  {
    "text": "and then all this\ntimes this chi.",
    "start": "5393010",
    "end": "5402210"
  },
  {
    "text": "I'll put it here, chi\np of Z of-- oh, oops.",
    "start": "5402210",
    "end": "5408440"
  },
  {
    "text": " Sorry, I messed this notation.",
    "start": "5408440",
    "end": "5415120"
  },
  {
    "text": "This is the Zi. OK, sorry.",
    "start": "5415120",
    "end": "5423520"
  },
  {
    "text": "Zi is the original point\nthat we started with. We started a claim about\nVi equals Vi tilde of Zi.",
    "start": "5423520",
    "end": "5430610"
  },
  {
    "text": "Zi is a fixed point\nthat we started with. The randomness of the\nverifier in the subject",
    "start": "5430610",
    "end": "5437140"
  },
  {
    "text": "protocol I denote by Z0 Z1, Z2. These are chosen\nby the verifier. Yes, Vinod?",
    "start": "5437140",
    "end": "5442320"
  },
  {
    "text": "STUDENT: The V\nshould be Z0, right? [INAUDIBLE] YAEL KALAI: B? STUDENT: [INAUDIBLE]",
    "start": "5442320",
    "end": "5448707"
  },
  {
    "text": "YAEL KALAI: Yeah, exactly. But I'm in layer i. You're right. In layer 0, it's just Z0. STUDENT: No, no, no, no.",
    "start": "5448707",
    "end": "5454070"
  },
  {
    "text": "The V, the V, you replace\nit with Z0 in this notation. [INAUDIBLE] YAEL KALAI: Oh, I replaced--",
    "start": "5454070",
    "end": "5460039"
  },
  {
    "text": "STUDENT: [INAUDIBLE]\nso P is Z0, w1 is Z1. Right? YAEL KALAI: Yes.",
    "start": "5460039",
    "end": "5467105"
  },
  {
    "text": "Yes. ",
    "start": "5467105",
    "end": "5472736"
  },
  {
    "text": "STUDENT: [INAUDIBLE] YAEL KALAI: Yes. Yes, yes, yes. Through the name you're right. Yes. Yes.",
    "start": "5472736",
    "end": "5479330"
  },
  {
    "text": "Z0, yes. Yes, you're right. You're right. You're right, and this is still\na low-degree polynomial in Z0.",
    "start": "5479330",
    "end": "5485500"
  },
  {
    "text": "Good point. It's sitting-- yeah, maybe\nI erased it, but this. No, but I didn't write this.",
    "start": "5485500",
    "end": "5492220"
  },
  {
    "text": "STUDENT: We need it\nthough below the-- YAEL KALAI: Below here? ",
    "start": "5492220",
    "end": "5497730"
  },
  {
    "text": "No, but I need to write-- it's like this is xi minus--",
    "start": "5497730",
    "end": "5508173"
  },
  {
    "start": "5508173",
    "end": "5520130"
  },
  {
    "text": "I think. Yes. So it's-- oh, maybe I need\nto take extension of this.",
    "start": "5520130",
    "end": "5526700"
  },
  {
    "text": "Sorry, one second. This is-- hold on. Sorry.",
    "start": "5526700",
    "end": "5532340"
  },
  {
    "text": "Maybe I missed this. Let me think because\nI missed in the notes. So hold on. So here the point is H. I think\nI need to take extension of this",
    "start": "5532340",
    "end": "5551360"
  },
  {
    "text": "too, because the point here,\nthis is not a polynomial in H.",
    "start": "5551360",
    "end": "5559719"
  },
  {
    "text": "OK, so let's do that carefully. Sorry, I missed that. So chi is a\nlow-degree polynomial,",
    "start": "5559720",
    "end": "5566590"
  },
  {
    "text": "but it's a low-degree\npolynomial in x. It's not a low-degree\npolynomial in this H. H here",
    "start": "5566590",
    "end": "5572849"
  },
  {
    "text": "is in the denominator, so it's\nnot a low-degree polynomial in H, sadly.",
    "start": "5572850",
    "end": "5580585"
  },
  {
    "text": " But you can extend, so it's OK.",
    "start": "5580585",
    "end": "5585840"
  },
  {
    "text": "Don't worry. So it's not a\nlow-degree polynomial. However, it is in-- all we care about is, if we\nthink of it as a function of Z0",
    "start": "5585840",
    "end": "5604270"
  },
  {
    "text": "of p, then we just extend. We can-- I just\nwant to make sure",
    "start": "5604270",
    "end": "5616410"
  },
  {
    "text": "that I'm not missing something,\nso hold on one second. ",
    "start": "5616410",
    "end": "5626390"
  },
  {
    "text": "Yeah. OK. Yeah. So the way to think about\nthis-- sorry about that.",
    "start": "5626390",
    "end": "5632770"
  },
  {
    "text": "The way to think\nabout it is to think of this as chi of P and Zi.",
    "start": "5632770",
    "end": "5640460"
  },
  {
    "text": "It's low degree in this. It's not low degree in this.",
    "start": "5640460",
    "end": "5645480"
  },
  {
    "text": "But you can think\nabout it-- it's in 0,1. You can think of Chi as 0--",
    "start": "5645480",
    "end": "5651070"
  },
  {
    "text": "sorry. You can think of chi as\nbeing in H to the m times",
    "start": "5651070",
    "end": "5657000"
  },
  {
    "text": "f to the m to whatever to-- ",
    "start": "5657000",
    "end": "5670570"
  },
  {
    "text": "STUDENT: [INAUDIBLE]",
    "start": "5670570",
    "end": "5681349"
  },
  {
    "text": "YAEL KALAI: I'm not\nsure how to, because-- maybe, but I'm not sure. But there is, actually.",
    "start": "5681350",
    "end": "5687650"
  },
  {
    "text": "The low-degree polynomial\nis one of them. So the answer is yes, there is.",
    "start": "5687650",
    "end": "5692809"
  },
  {
    "text": "It's the low-degree-- yeah. So it's defined\nonly on H. You can",
    "start": "5692810",
    "end": "5698929"
  },
  {
    "text": "think of it as defined only-- this chi is an extension. This chi on its\nown is extension.",
    "start": "5698930",
    "end": "5706310"
  },
  {
    "text": "What is this chi? This chi is a function. You can think-- OK, sorry.",
    "start": "5706310",
    "end": "5712760"
  },
  {
    "text": "Let me write it differently. OK, let me fix this. Sorry about that.",
    "start": "5712760",
    "end": "5719270"
  },
  {
    "text": "Instead of this, think of chi-- I'm just changing the notation--",
    "start": "5719270",
    "end": "5725250"
  },
  {
    "text": "H1 up to Hm Z, which\nis Z1 up to Zm.",
    "start": "5725250",
    "end": "5730573"
  },
  {
    "text": "I don't want to\nput it down there. They're both here. And now-- actually, I don't.",
    "start": "5730573",
    "end": "5739383"
  },
  {
    "text": "So what are we saying? We're saying, so this\nis the extension. So you're saying, what is chi?",
    "start": "5739383",
    "end": "5745750"
  },
  {
    "text": "I'll tell you what Chi is. Chi is the extension-- ",
    "start": "5745750",
    "end": "5751789"
  },
  {
    "text": "OK, let me rewrite this. ",
    "start": "5751790",
    "end": "5757520"
  },
  {
    "text": "Chi H1 up to Hm,\nZ1 up to Zm is just",
    "start": "5757520",
    "end": "5770680"
  },
  {
    "text": "multiplication of chi Hi, Zi. So it's exactly the same thing.",
    "start": "5770680",
    "end": "5776420"
  },
  {
    "text": "I just don't want to put Hi on\nthe bottom, like I did before. So let me put it as a variable. I didn't change anything.",
    "start": "5776420",
    "end": "5782449"
  },
  {
    "text": "And now this original--\nwhat is this? This is the low-degree\nextension of the function.",
    "start": "5782450",
    "end": "5788870"
  },
  {
    "text": "Let me first define\nchi and H to the 2m. So chi is such that\nan H to the 2m,",
    "start": "5788870",
    "end": "5795219"
  },
  {
    "text": "so for every Hi or for\nevery H and Z in H to the m,",
    "start": "5795220",
    "end": "5803530"
  },
  {
    "text": "chi HZ is equal to 1 if and\nonly if H is equal to Z.",
    "start": "5803530",
    "end": "5810460"
  },
  {
    "text": "I only define an H to\nthe m, now extended. That's how we define chi, the\nunique low-degree extension.",
    "start": "5810460",
    "end": "5817340"
  },
  {
    "text": "What is exactly the extension? Yeah, it's this multiplication,\nblah, blah, blah. I don't want to go into it.",
    "start": "5817340",
    "end": "5823790"
  },
  {
    "text": "But it's just a\nunique extension. ",
    "start": "5823790",
    "end": "5829210"
  },
  {
    "text": "So now with that-- ",
    "start": "5829210",
    "end": "5834320"
  },
  {
    "text": "and the reason\nthere is a unique-- actually, I should say,\nthis is kind of chi 1.",
    "start": "5834320",
    "end": "5842710"
  },
  {
    "text": " And the reason there\nis a unique extension-- this is kind of H1, Hi, Zi.",
    "start": "5842710",
    "end": "5849541"
  },
  {
    "text": " And the reason there\nis a unique exception is from the Lagrange\ninterpolation theorem.",
    "start": "5849541",
    "end": "5857440"
  },
  {
    "text": "So it's just a multiplication\nof the unique kind of Lagrange interpolation extensions.",
    "start": "5857440",
    "end": "5862590"
  },
  {
    "text": "So all I did here--\nso sorry about this, but all I did here is I\nchanged the notation from the H",
    "start": "5862590",
    "end": "5868239"
  },
  {
    "text": "kind of as a subscript\nto H as input. And now I'm treating\nthem both symmetrically,",
    "start": "5868240",
    "end": "5873830"
  },
  {
    "text": "which was important\nbecause otherwise. So thank you. Wow, you guys are great. ",
    "start": "5873830",
    "end": "5880940"
  },
  {
    "text": "So now let's fix\nthe mistake here. So this is chi of P and Zi.",
    "start": "5880940",
    "end": "5891510"
  },
  {
    "text": " We're summing over P,\nbut Zi is an input.",
    "start": "5891510",
    "end": "5897080"
  },
  {
    "text": "That's the input\nwe started with. That's the claim. Good. But for me, chi is a\nlow-degree polynomial already.",
    "start": "5897080",
    "end": "5905990"
  },
  {
    "text": "So this is just\nchi of Z0 and Xi.",
    "start": "5905990",
    "end": "5912430"
  },
  {
    "text": "Thank you. Yeah. STUDENT: I guess what I\nstill don't understand is isn't chi not a polynomial\nin the first variable since--",
    "start": "5912430",
    "end": "5921580"
  },
  {
    "text": "YAEL KALAI: Why? STUDENT: So the\ndefinition for chi, doesn't it only appear\nin the denominator?",
    "start": "5921580",
    "end": "5926907"
  },
  {
    "text": "YAEL KALAI: OK, so let's look\nat the definition of chi. The definition of\nchi and m variables",
    "start": "5926908",
    "end": "5931960"
  },
  {
    "text": "is just-- so chi\ntakes two variables. The definition of 2m variables,\njust the multiplication,",
    "start": "5931960",
    "end": "5938360"
  },
  {
    "text": "i goes from 1 to m of\na chi 1 on Hi and Zi. So now I need to\ndefine what is chi 1.",
    "start": "5938360",
    "end": "5946710"
  },
  {
    "text": "Oh, you're saying\nit's two variables. You're saying it's\nnot one variable. STUDENT: Or rather\nmore like in chi 1,",
    "start": "5946710",
    "end": "5954830"
  },
  {
    "text": "isn't it not a polynomial in Hi? YAEL KALAI: It's a polynomial? No, I only think of it as\na polynomial in Hi and Zi.",
    "start": "5954830",
    "end": "5964530"
  },
  {
    "text": "Chi-- sorry. OK, maybe I didn't\nunderstand your question. Chi 1 is a two-variate\npolynomial.",
    "start": "5964530",
    "end": "5970850"
  },
  {
    "text": "It has two variables. So you're right. It's two variables,\nnot one, because I",
    "start": "5970850",
    "end": "5976280"
  },
  {
    "text": "said it reduces to Lagrange. You're saying, no,\nLagrange is one. I'm thinking it is 2. That's what you said, right?",
    "start": "5976280",
    "end": "5982290"
  },
  {
    "text": "Or maybe I didn't-- STUDENT: I guess\nmy question is more emphasizing, when you write\nout the definition for chi 1,",
    "start": "5982290",
    "end": "5988080"
  },
  {
    "text": "are we going to get that\nit's not a polynomial in Hi? YAEL KALAI: No, it is. It is.",
    "start": "5988080",
    "end": "5993590"
  },
  {
    "text": "So I want to-- STUDENT: Is it going to\nbe a ratio of polynomials? YAEL KALAI: No, no, no, no. No, no, no, no.",
    "start": "5993590",
    "end": "5998870"
  },
  {
    "text": "So what is exactly chi 1? How did it-- chi\nis well-defined.",
    "start": "5998870",
    "end": "6006440"
  },
  {
    "text": "It's just a product of chi 1s. Now you can ask, what is chi 1?",
    "start": "6006440",
    "end": "6012200"
  },
  {
    "text": "If you understand what\nchi 1 is, then you understand what chi is, because\nchi is just multiplication. What is chi 1?",
    "start": "6012200",
    "end": "6017390"
  },
  {
    "text": "Chi 1 is a bivariate polynomial. It's defined over f 2m to f.",
    "start": "6017390",
    "end": "6023950"
  },
  {
    "text": "And so now you're asking,\nhow is it defined? Let me tell you how\nit's defined an H first. So if both of them--",
    "start": "6023950",
    "end": "6030280"
  },
  {
    "text": "first of all, it's a polynomial. It's a two-variate polynomial. So it's a polynomial\nand two variables, and both its degree H minus 1.",
    "start": "6030280",
    "end": "6038239"
  },
  {
    "text": "Now you can say, how\nis it defined on H? On H, I'll tell you.",
    "start": "6038240",
    "end": "6044060"
  },
  {
    "text": "It's 1 if and only\nif they're equal. That's how it's\ndefined, 0 otherwise. So I defined it on H.",
    "start": "6044060",
    "end": "6050480"
  },
  {
    "text": "Now you can ask, how\ndo I define on f? So on f, I'm going to define\nit in the unique way that",
    "start": "6050480",
    "end": "6058280"
  },
  {
    "text": "extends it on H. That's how\nit's going to be defined. ",
    "start": "6058280",
    "end": "6065980"
  },
  {
    "text": "So chi is a\nlow-degree polynomial in each and every variable.",
    "start": "6065980",
    "end": "6071440"
  },
  {
    "text": "Before, I wrote it\nonly on Z. But that wasn't good because I need it\nalso to be low degree on H. So--",
    "start": "6071440",
    "end": "6079450"
  },
  {
    "text": "yes, Vinod? STUDENT: Just the\npoint, the point is that the way it was\nwritten down previously",
    "start": "6079450",
    "end": "6084770"
  },
  {
    "text": "had H in the denominator. It's not a polynomial. YAEL KALAI: Exactly. STUDENT: [INAUDIBLE]\nit's not a polynomial.",
    "start": "6084770",
    "end": "6089962"
  },
  {
    "text": "YAEL KALAI: Exactly. STUDENT: And this one is.  YAEL KALAI: OK. So I write it--",
    "start": "6089962",
    "end": "6096040"
  },
  {
    "text": "what's important to me is\nthat chi 1 is a polynomial. It's a two-variate polynomial. Both of them are\ndegree H minus 1.",
    "start": "6096040",
    "end": "6103820"
  },
  {
    "text": "So with that, if we believe-- yeah. STUDENT: If they're\nnot equal, is it 0?",
    "start": "6103820",
    "end": "6109782"
  },
  {
    "text": "YAEL KALAI: Yeah. Yeah, yeah, yeah, yeah. So if H and Z are equal, it's 1. If they're not equal, it's 0.",
    "start": "6109782",
    "end": "6115090"
  },
  {
    "text": "Yes, great. Thank you. Thank you, guys. You're great.",
    "start": "6115090",
    "end": "6121680"
  },
  {
    "text": "Fantastic. So now we reduce\nthis big sum to this.",
    "start": "6121680",
    "end": "6128430"
  },
  {
    "text": "Because we sum over the P,\nso the P becomes Z0, this. ",
    "start": "6128430",
    "end": "6136119"
  },
  {
    "text": "Wow, what's going on here? What is the verifier\nsupposed to do? So before, he need to verify\none little point in Vi tilde,",
    "start": "6136120",
    "end": "6147210"
  },
  {
    "text": "and now he needs to\nverify this mess. ",
    "start": "6147210",
    "end": "6155930"
  },
  {
    "text": "But let's deconstruct. Yes. STUDENT: Sorry. Is the argument [INAUDIBLE]\nchi [INAUDIBLE] Z1 or Zi?",
    "start": "6155930",
    "end": "6165100"
  },
  {
    "text": "YAEL KALAI: This is good. Sorry, this is Zi. This is the claim\nwe started with.",
    "start": "6165100",
    "end": "6171870"
  },
  {
    "text": "We started with a\nclaim on layer i.",
    "start": "6171870",
    "end": "6179110"
  },
  {
    "text": "You can think of i as\n0 in the beginning. But we start with\nthe claim that Vi is equal the\nlow-degree extension",
    "start": "6179110",
    "end": "6186700"
  },
  {
    "text": "of layer i in point Zi. This is the Zi here because--",
    "start": "6186700",
    "end": "6191960"
  },
  {
    "text": "why is it the Zi? Let's see. What did we say? We said that Vi, we need\nto argue that it's this.",
    "start": "6191960",
    "end": "6198820"
  },
  {
    "text": "But this is just sum--\nthat's the definition of a low-degree extension,\nsum of the points times this.",
    "start": "6198820",
    "end": "6204670"
  },
  {
    "text": "Let me change this to P Zi. The Zi I is fixed.",
    "start": "6204670",
    "end": "6209737"
  },
  {
    "text": "This is fixed. This is from the claim. Good. Now we say let's sum over the\nP, so we sum over the P. The P",
    "start": "6209737",
    "end": "6218560"
  },
  {
    "text": "is not fixed. It's summed over. And now we say, let's\ninstead of this, let's sum over the two w's, which\nare the possible kids.",
    "start": "6218560",
    "end": "6226340"
  },
  {
    "text": "All the possible pair of kids-- oh, I think I didn't say. I assume that C is fan in\ntwo, that each gate has",
    "start": "6226340",
    "end": "6233980"
  },
  {
    "text": "only two children. And that's, again, with\nall this generality, you just increase the\ndepth by log factor.",
    "start": "6233980",
    "end": "6241000"
  },
  {
    "text": "So I'm assuming fan in\ntwo, so it's only two.",
    "start": "6241000",
    "end": "6247180"
  },
  {
    "text": "Each gate has either an addition\nof two or multiplication of two.",
    "start": "6247180",
    "end": "6253510"
  },
  {
    "text": "OK, so this is what we get. And now when we do the Sumcheck\nprotocol, the P and the--",
    "start": "6253510",
    "end": "6261080"
  },
  {
    "text": "so we sum over P, w1 and w2. At the end of the day, we need\nto compute this polynomial.",
    "start": "6261080",
    "end": "6267567"
  },
  {
    "text": "The verifier will need to\ncompute this polynomial. Instead of over some fixed\nP w1, w2, it's over some--",
    "start": "6267567",
    "end": "6275199"
  },
  {
    "text": "I called it Z0, Z1, Z2\nchosen by the verifier.",
    "start": "6275200",
    "end": "6280583"
  },
  {
    "text": "That's kind of the\nrandomness of the verifier. So P becomes Z0. w1 becomes Z1, and this is Z2.",
    "start": "6280583",
    "end": "6288150"
  },
  {
    "text": "That's kind of the after. Yeah. STUDENT: I'm very\nconfused because then, if i is equal to 1 [INAUDIBLE]?",
    "start": "6288150",
    "end": "6295270"
  },
  {
    "text": "YAEL KALAI: I know, I know. STUDENT: So that's\nthe different Z. YAEL KALAI: Yeah, I know. I'm so sorry. These are stars.",
    "start": "6295270",
    "end": "6301782"
  },
  {
    "text": "STUDENT: OK, now, that\nmakes a lot more sense. STUDENT: It's a constant. YAEL KALAI: It's a constant. Yeah, I know that.",
    "start": "6301783",
    "end": "6307679"
  },
  {
    "text": "Sorry, that's a bad\nnotation on my end. Yeah. ",
    "start": "6307680",
    "end": "6315190"
  },
  {
    "text": "This is a very,\nvery different Z. It's like a totally\ndifferent animal.",
    "start": "6315190",
    "end": "6320410"
  },
  {
    "text": "These are random Z's chosen\nby the honest verifier. This is kind of, I\ndon't know, a Z star",
    "start": "6320410",
    "end": "6327247"
  },
  {
    "text": "that was fixed ahead of time.  So now, the verifier\nneeds to verify this.",
    "start": "6327247",
    "end": "6335700"
  },
  {
    "text": "Yeah. STUDENT: [INAUDIBLE] is fixed. Can you just use the\nsame chi [INAUDIBLE]",
    "start": "6335700",
    "end": "6342480"
  },
  {
    "text": "before and put it in the\nsubscript of the chi? So then you don't need\nthe extension or whatever. You can just write\nit out [INAUDIBLE].",
    "start": "6342480",
    "end": "6350500"
  },
  {
    "text": "YAEL KALAI: The thing is that\nbefore, I assumed that the chi, when I fixed the H,\nit was an H to the m.",
    "start": "6350500",
    "end": "6357280"
  },
  {
    "text": "This isn't the extension. It's not going to\nbe an H to the m. So I think we should\nkeep the two, yeah.",
    "start": "6357280",
    "end": "6365320"
  },
  {
    "text": "But that's a good idea.",
    "start": "6365320",
    "end": "6370719"
  },
  {
    "text": "OK, so what is this? So it seems like we had\nsomething that looked really kind of reasonable, and\nwe ended up with something",
    "start": "6370720",
    "end": "6376840"
  },
  {
    "text": "that's horrifying. So what does the\nverifier do now? Now the verifier is\nlike, I just need",
    "start": "6376840",
    "end": "6383500"
  },
  {
    "text": "to verify that this equals\nsome value that we got out of the Sumcheck protocol. So we did the Sumcheck protocol,\nwe got some value, whatever.",
    "start": "6383500",
    "end": "6391913"
  },
  {
    "text": "I don't know what to denote. I'm now scared to\ndenote anything. So this equals something. Now, what is he supposed to do?",
    "start": "6391913",
    "end": "6397192"
  },
  {
    "text": "He's supposed to verify that. What do you do? So here is the idea, and\nthen we'll take a break.",
    "start": "6397192",
    "end": "6404780"
  },
  {
    "text": "So he needs to verify\na lot of things. First, he needs to compute\nthis add tilde and mult tilde.",
    "start": "6404780",
    "end": "6410760"
  },
  {
    "text": "This goes back to\nyour question now. Add tilde, these are a\nfunction of the circuit. He doesn't have the circuit.",
    "start": "6410760",
    "end": "6416610"
  },
  {
    "text": "How does he compute these\nadd tilde and mult tilde? Turns out, actually,\nthis is sad news.",
    "start": "6416610",
    "end": "6424610"
  },
  {
    "text": "He actually can't compute. We don't know how to compute. He doesn't know how to compute\nadd tilde and mult tilde.",
    "start": "6424610",
    "end": "6430580"
  },
  {
    "text": " Even if he gets this kind\nof uniform description",
    "start": "6430580",
    "end": "6437200"
  },
  {
    "text": "of the Turing machine that\ngenerates the circuit, he can't compute them.",
    "start": "6437200",
    "end": "6443390"
  },
  {
    "text": "Let's deal with that later. Suppose he has oracle access. Suppose someone--\nthere's a trusted oracle",
    "start": "6443390",
    "end": "6449630"
  },
  {
    "text": "that lets him compute\nthese values for now. In the paper, it's called\nthe bare bones protocol.",
    "start": "6449630",
    "end": "6456540"
  },
  {
    "text": "So suppose somehow,\nmagically he has a trusted oracle,\nbut only to compute add tilde and mult tilde.",
    "start": "6456540",
    "end": "6461659"
  },
  {
    "text": "Note, these are only\nfunctions of the circuit. They have nothing to do with\nthe claim of the prover.",
    "start": "6461660",
    "end": "6467780"
  },
  {
    "text": "It's just information\nabout the circuit. It's whether kind of-- ",
    "start": "6467780",
    "end": "6474619"
  },
  {
    "text": "not in the extension,\nit's whether this gate is connected by an AND to\nthese two gates, yes or no,",
    "start": "6474620",
    "end": "6480500"
  },
  {
    "text": "or by a multiplication to\nthese two gates, yes or no. So it's not enough for\nhim to compute that.",
    "start": "6480500",
    "end": "6485910"
  },
  {
    "text": "He needs to compute the\nlow-degree extension of that. But this has nothing\nto do with the prover. This is just a function\nof the circuit.",
    "start": "6485910",
    "end": "6492660"
  },
  {
    "text": "So suppose first--\nso first, we're going to assume this is not\nwithout loss of generality.",
    "start": "6492660",
    "end": "6498220"
  },
  {
    "text": "But just for\nsimplicity, we're going to assume that we can compute.",
    "start": "6498220",
    "end": "6504935"
  },
  {
    "text": " add tilde and mult tilde.",
    "start": "6504935",
    "end": "6510767"
  },
  {
    "start": "6510767",
    "end": "6516611"
  },
  {
    "text": "Suppose he can. Actually, what we're\ngoing to do today is we're going to show\nthe entire GKR protocol,",
    "start": "6516611",
    "end": "6523199"
  },
  {
    "text": "assuming you can compute this. And then only next\ntime, we're going to show how to\ncompute this thing.",
    "start": "6523200",
    "end": "6529120"
  },
  {
    "text": "And actually, there's-- we're\ngoing to show that next time. How can we help them\ncompute it or how can we",
    "start": "6529120",
    "end": "6535599"
  },
  {
    "text": "compute in a different-- how\ncan we deal with this issue? But for now, let's say\nhe can compute this.",
    "start": "6535600",
    "end": "6541200"
  },
  {
    "text": " So the verifier is\nlike, OK, let's see.",
    "start": "6541200",
    "end": "6546350"
  },
  {
    "text": "This I can definitely compute. That's easy. So the verifier\ncan compute this. He can compute this.",
    "start": "6546350",
    "end": "6553570"
  },
  {
    "text": "He can compute this. And what does he's left? He's left with two\nthings he can't compute,",
    "start": "6553570",
    "end": "6561400"
  },
  {
    "text": "V tilde and i plus 1-- V tilde and i plus 1,\nand point Z1 and Z2.",
    "start": "6561400",
    "end": "6567810"
  },
  {
    "text": "So now, how do we continue? What we're going to\nsay is the following. Suppose in this sum he was\ncheated, namely the Vi value,",
    "start": "6567810",
    "end": "6578200"
  },
  {
    "text": "Vi star is not correct. By the Sumcheck\nprotocol, it means",
    "start": "6578200",
    "end": "6583660"
  },
  {
    "text": "that this entire\nvalue is also not correct with very\nhigh probability. I mean, the probability\ndepends on f.",
    "start": "6583660",
    "end": "6589940"
  },
  {
    "text": "You'll take f large\nenough that it can be with very high probability. So you're left\nwith a false claim.",
    "start": "6589940",
    "end": "6596967"
  },
  {
    "text": "Now, what the verifier\nis going to do, the verifier is going to tell\nthe prover, you know what? Tell me what these two--",
    "start": "6596967",
    "end": "6605409"
  },
  {
    "text": "you gave me something I don't\nknow what to do with it. Tell me the values. You tell me the values of Vi\nplus 1 tilde and Z1 and Z2.",
    "start": "6605410",
    "end": "6615050"
  },
  {
    "text": "So the verifier, the\nprover comes in, OK, sure. V tilde and i plus 1 and\nZ1 is Vi plus 1 star 1,",
    "start": "6615050",
    "end": "6628346"
  },
  {
    "text": "and V tilde and Z2-- sorry, i plus 1, is\nV star i plus 1, 2.",
    "start": "6628346",
    "end": "6638030"
  },
  {
    "text": "Here are the values. Now I'm the verifier. I'm the verifier.",
    "start": "6638030",
    "end": "6643480"
  },
  {
    "text": "What do I do? I check. I check that add times the\nsum of these two values",
    "start": "6643480",
    "end": "6649810"
  },
  {
    "text": "you gave me plus mult times\nthe multiplication of these two values you gave me\nis equal what we got.",
    "start": "6649810",
    "end": "6656270"
  },
  {
    "text": "Now, by the soundness of\nthe Sumcheck protocol, we know what we got is false.",
    "start": "6656270",
    "end": "6662070"
  },
  {
    "text": "It's not true. So the only way--",
    "start": "6662070",
    "end": "6667500"
  },
  {
    "text": "if the prover gives the correct\nthing, then he will fail.",
    "start": "6667500",
    "end": "6674903"
  },
  {
    "text": "If you give the correct\nthing, I'll catch him. Because if he gives\nme the correct thing, I get the true value.",
    "start": "6674903",
    "end": "6681239"
  },
  {
    "text": "But I'm going to check him\nagainst the false value. Again, what do we know?",
    "start": "6681240",
    "end": "6686820"
  },
  {
    "text": "He started with a false Vi star. We did sum of such Sumcheck,\nwe're left with a false--",
    "start": "6686820",
    "end": "6693220"
  },
  {
    "text": "we said that this\nis something false because the sum of\nthe Sumcheck protocol says if you started\nwith a sum that's false,",
    "start": "6693220",
    "end": "6699520"
  },
  {
    "text": "you'll get a false\nclaim about the f. So now I get that this\nthing is equal to some beta,",
    "start": "6699520",
    "end": "6704739"
  },
  {
    "text": "but this beta is not true. So now I tell him, OK, I don't\nknow how to compute this thing.",
    "start": "6704740",
    "end": "6710920"
  },
  {
    "text": "Tell me what the two values in\nthe low-degree extensions are.",
    "start": "6710920",
    "end": "6716160"
  },
  {
    "text": "If you tell me this,\nassuming I compute this add tilde and\nmult tilde for now, then I compute this thing.",
    "start": "6716160",
    "end": "6722780"
  },
  {
    "text": "Now, the important\nthing to note, that if this value\nwas false, he must--",
    "start": "6722780",
    "end": "6730150"
  },
  {
    "text": "if he gives me the\ntrue values, I'm going to reject them because\nI'm going to compute this thing and check if it's what he\nclaimed it is after the Sumcheck",
    "start": "6730150",
    "end": "6738130"
  },
  {
    "text": "protocol. And because he claimed\nthe false value, if he give me the true things,\nI'm going to reject him.",
    "start": "6738130",
    "end": "6744442"
  },
  {
    "text": "So the only thing he\ncan do if he doesn't want to be rejected\noff the bat is to give me one of them\nfalse, or both false.",
    "start": "6744442",
    "end": "6752636"
  },
  {
    "text": "STUDENT: So he has\nto give two values. YAEL KALAI: Right. Exactly.",
    "start": "6752637",
    "end": "6759320"
  },
  {
    "text": "So where are we? What did we do? After a lot of sweat, we\nstarted with a claim on layer i.",
    "start": "6759320",
    "end": "6767010"
  },
  {
    "text": "We did manage to get\ndown to layer i plus 1, as I promised you guys. Here's the price.",
    "start": "6767010",
    "end": "6772610"
  },
  {
    "text": "First, miraculously,\nwe assume he can compute add tilde and mult\ntilde on its own, Assumed Why?",
    "start": "6772610",
    "end": "6779690"
  },
  {
    "text": "Whatever. Second, we went from\none claim about layer i",
    "start": "6779690",
    "end": "6785720"
  },
  {
    "text": "to two claims about\nlayer i plus 1. That doesn't sound\nvery reassuring.",
    "start": "6785720",
    "end": "6790828"
  },
  {
    "text": "STUDENT: Isn't that\nwhere we started? STUDENT: Yeah. YAEL KALAI: Exactly.",
    "start": "6790828",
    "end": "6796290"
  },
  {
    "text": "It's where we started.  This is a great\ntime for a break.",
    "start": "6796290",
    "end": "6803220"
  }
]