[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "There are many other models of computation,\neach of which describes a class of integer",
    "start": "429",
    "end": "5259"
  },
  {
    "text": "functions where a computation is performed\non an integer input to produce an integer",
    "start": "5259",
    "end": "10210"
  },
  {
    "text": "answer.",
    "start": "10210",
    "end": "11210"
  },
  {
    "text": "Kleene, Post and Turing were all students\nof Alonzo Church at Princeton University in",
    "start": "11210",
    "end": "16650"
  },
  {
    "text": "the mid-1930's.",
    "start": "16650",
    "end": "18990"
  },
  {
    "text": "They explored many other formulations for\nmodeling computation:",
    "start": "18990",
    "end": "22860"
  },
  {
    "text": "recursive functions, rule-based systems for\nstring rewriting, and the lambda calculus.",
    "start": "22860",
    "end": "28820"
  },
  {
    "text": "They were all particularly intrigued with\nproving the existence of problems unsolvable",
    "start": "28820",
    "end": "34120"
  },
  {
    "text": "by realizable machines.",
    "start": "34120",
    "end": "36219"
  },
  {
    "text": "Which, of course, meant characterizing the\nproblems that could be solved by realizable",
    "start": "36220",
    "end": "41700"
  },
  {
    "text": "machines.",
    "start": "41700",
    "end": "43900"
  },
  {
    "start": "43000",
    "end": "43000"
  },
  {
    "text": "It turned out that each model was capable\nof computing *exactly* the same set of integer",
    "start": "43900",
    "end": "48850"
  },
  {
    "text": "functions!",
    "start": "48850",
    "end": "50350"
  },
  {
    "text": "This was proved by coming up with constructions\nthat translated the steps in a computation",
    "start": "50350",
    "end": "54870"
  },
  {
    "text": "between the various models.",
    "start": "54870",
    "end": "57420"
  },
  {
    "text": "It was possible to show that if a computation\ncould be described by one model, an equivalent",
    "start": "57420",
    "end": "62460"
  },
  {
    "text": "description exists in the other model.",
    "start": "62460",
    "end": "66530"
  },
  {
    "text": "This lead to a notion of computability that\nwas independent of the computation scheme",
    "start": "66530",
    "end": "71390"
  },
  {
    "text": "chosen.",
    "start": "71390",
    "end": "73590"
  },
  {
    "text": "This notion is formalized by Church's Thesis,\nwhich says that every discrete function computable",
    "start": "73590",
    "end": "79649"
  },
  {
    "text": "by any realizable machine is computable by\nsome Turing Machine.",
    "start": "79650",
    "end": "84790"
  },
  {
    "text": "So if we say the function f(x) is computable,\nthat's equivalent to saying that there's a",
    "start": "84790",
    "end": "90610"
  },
  {
    "text": "TM that given x as an input on its tape will\nwrite f(x) as an output on the tape and halt.",
    "start": "90610",
    "end": "100200"
  },
  {
    "text": "As yet there's no proof of Church's Thesis,\nbut it's universally accepted that it's true.",
    "start": "100200",
    "end": "105890"
  },
  {
    "text": "In general \"computable\" is taken to mean \"computable\nby some TM\".",
    "start": "105890",
    "end": "111440"
  },
  {
    "text": "If you're curious about the existence of uncomputable\nfunctions, please see the optional video at",
    "start": "111440",
    "end": "116590"
  },
  {
    "text": "the end of this lecture.",
    "start": "116590",
    "end": "118960"
  },
  {
    "text": "Okay, we've decided that Turing Machines can\nmodel any realizable computation.",
    "start": "118960",
    "end": "125580"
  },
  {
    "start": "119000",
    "end": "119000"
  },
  {
    "text": "In other words for every computation we want\nto perform, there's a (different) Turing Machine",
    "start": "125580",
    "end": "130229"
  },
  {
    "text": "that will do the job.",
    "start": "130230",
    "end": "132168"
  },
  {
    "text": "But how does this help us design a general-purpose\ncomputer?",
    "start": "132169",
    "end": "136170"
  },
  {
    "text": "Or are there some computations that will require\na special-purpose machine no matter what?",
    "start": "136170",
    "end": "142200"
  },
  {
    "start": "142000",
    "end": "142000"
  },
  {
    "text": "What we'd like to find is a universal function\nU:",
    "start": "142200",
    "end": "145900"
  },
  {
    "text": "it would take two arguments, k and j, and\nthen compute the result of running T_k on",
    "start": "145900",
    "end": "152930"
  },
  {
    "text": "input j.",
    "start": "152930",
    "end": "154290"
  },
  {
    "text": "Is U computable, i.e., is there a universal\nTuring Machine T_U?",
    "start": "154290",
    "end": "160319"
  },
  {
    "text": "If so, then instead of many ad-hoc TMs, we\ncould just use T_U to compute the results",
    "start": "160319",
    "end": "167780"
  },
  {
    "text": "for any computable function.",
    "start": "167780",
    "end": "170409"
  },
  {
    "text": ".249 Surprise!",
    "start": "170409",
    "end": "172349"
  },
  {
    "text": "U is computable and T_U exists.",
    "start": "172349",
    "end": "175389"
  },
  {
    "text": "If fact there are infinitely many universal\nTMs, some quite simple.",
    "start": "175389",
    "end": "181110"
  },
  {
    "text": "The smallest known universal TM has 4 states\nand uses 6 tape symbols.",
    "start": "181110",
    "end": "187129"
  },
  {
    "text": "A universal machine is capable of performing\nany computation that can be performed by any",
    "start": "187129",
    "end": "192269"
  },
  {
    "text": "TM!",
    "start": "192269",
    "end": "195480"
  },
  {
    "text": "What's going on here?",
    "start": "195480",
    "end": "197099"
  },
  {
    "text": "k encodes a \"program\" - a description of some\narbitrary TM that performs a particular computation.",
    "start": "197099",
    "end": "205500"
  },
  {
    "text": "j encodes the input data on which to perform\nthat computation.",
    "start": "205500",
    "end": "209859"
  },
  {
    "text": "T_U \"interprets\" the program, emulating the\nsteps T_k will take to process the input and",
    "start": "209859",
    "end": "217799"
  },
  {
    "text": "write out the answer.",
    "start": "217799",
    "end": "220329"
  },
  {
    "text": "The notion of interpreting a coded representation\nof a computation is a key idea and forms the",
    "start": "220329",
    "end": "226819"
  },
  {
    "text": "basis for our stored program computer.",
    "start": "226819",
    "end": "231879"
  },
  {
    "start": "231000",
    "end": "231000"
  },
  {
    "text": "The Universal Turing Machine is the paradigm\nfor modern general-purpose computers.",
    "start": "231879",
    "end": "237439"
  },
  {
    "text": "Given an ISA we want to know if it's equivalent\nto a universal Turing Machine.",
    "start": "237439",
    "end": "242790"
  },
  {
    "text": "If so, it can emulate every other TM and hence\ncompute any computable function.",
    "start": "242790",
    "end": "250439"
  },
  {
    "text": "How do we show our computer is Turing Universal?",
    "start": "250439",
    "end": "253849"
  },
  {
    "text": "Simply demonstrate that it can emulate some\nknown Universal Turing Machine.",
    "start": "253849",
    "end": "258870"
  },
  {
    "text": "The finite memory on actual computers will\nmean we can only emulate UTM operations on",
    "start": "258870",
    "end": "264780"
  },
  {
    "text": "inputs up to a certain size\nbut within this limitation we can show our",
    "start": "264780",
    "end": "269840"
  },
  {
    "text": "computer can perform any computation that\nfits into memory.",
    "start": "269840",
    "end": "275020"
  },
  {
    "text": "As it turns out this is not a high bar:\nso long as the ISA has conditional branches",
    "start": "275020",
    "end": "280960"
  },
  {
    "text": "and some simple arithmetic, it will be Turing\nUniversal.",
    "start": "280960",
    "end": "285020"
  },
  {
    "start": "285000",
    "end": "285000"
  },
  {
    "text": "This notion of encoding a program in a way\nthat allows it to be data to some other program",
    "start": "285020",
    "end": "289789"
  },
  {
    "text": "is a key idea in computer science.",
    "start": "289789",
    "end": "292110"
  },
  {
    "text": "We often translate a program Px written to\nrun on some abstract high-level machine (eg,",
    "start": "292110",
    "end": "298340"
  },
  {
    "text": "a program in C or Java) into, say, an assembly\nlanguage program Py that can be interpreted",
    "start": "298340",
    "end": "305060"
  },
  {
    "text": "by our CPU.",
    "start": "305060",
    "end": "306740"
  },
  {
    "text": "This translation is called compilation.",
    "start": "306740",
    "end": "310388"
  },
  {
    "text": "Much of software engineering is based on the\nidea of taking a program and using it as as",
    "start": "310389",
    "end": "314800"
  },
  {
    "text": "component in some larger program.",
    "start": "314800",
    "end": "319110"
  },
  {
    "text": "Given a strategy for compiling programs, that\nopens the door to designing new programming",
    "start": "319110",
    "end": "324159"
  },
  {
    "text": "languages that let us express our desired\ncomputation using data structures and operations",
    "start": "324159",
    "end": "329720"
  },
  {
    "text": "particularly suited to the task at hand.",
    "start": "329720",
    "end": "334139"
  },
  {
    "text": "So what have learned from the mathematicians'\nwork on models of computation?",
    "start": "334139",
    "end": "339229"
  },
  {
    "text": "Well, it's nice to know that the computing\nengine we're planning to build will be able",
    "start": "339229",
    "end": "344280"
  },
  {
    "text": "to perform any computation that can be performed\non any realizable machine.",
    "start": "344280",
    "end": "349030"
  },
  {
    "text": "And the development of the universal Turing\nMachine model paved the way for modern stored-program",
    "start": "349030",
    "end": "355419"
  },
  {
    "text": "computers.",
    "start": "355419",
    "end": "356729"
  },
  {
    "text": "The bottom line: we're good to go with the\nBeta ISA!",
    "start": "356729",
    "end": "360589"
  }
]