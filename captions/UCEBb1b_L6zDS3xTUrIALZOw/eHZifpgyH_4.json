[
  {
    "text": "The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6340"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6340",
    "end": "13320"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13320",
    "end": "26349"
  },
  {
    "text": "ERIC DEMAINE: All right,\ntoday we do NP completeness,",
    "start": "26350",
    "end": "32340"
  },
  {
    "text": "an entire field in one lecture. Should be fun. I actually taught an entire\nclass about this topic",
    "start": "32340",
    "end": "38589"
  },
  {
    "text": "last semester, but now we're\ngoing to do it in 80 minutes. And we're going to look at\nlots of different problems,",
    "start": "38590",
    "end": "45610"
  },
  {
    "text": "from Super Mario Brothers\nto jigsaw puzzles, and show that\nthey're NP -complete.",
    "start": "45610",
    "end": "51000"
  },
  {
    "text": "This is a fun area. As Srini mentioned last class,\nit's all about reductions. It's all about\nconverting one problem",
    "start": "51000",
    "end": "56040"
  },
  {
    "text": "into another, which is a fun\nkind of puzzle in itself. It's an algorithmic challenge.",
    "start": "56040",
    "end": "61170"
  },
  {
    "text": "And we're going to do it a lot. But first I'm going to remind\nyou of some of the things you",
    "start": "61170",
    "end": "66600"
  },
  {
    "text": "learned from 006, and tell you\nwhat we need to do in order to prove all of these relations,\nwhat exactly we need to show",
    "start": "66600",
    "end": "74830"
  },
  {
    "text": "for each of those arrows,\nand why it's interesting. So this is generally around\nthe P versus NP problem.",
    "start": "74830",
    "end": "83490"
  },
  {
    "text": "So remember, P is all\nthe problems we know how to solve in polynomial time. Well not just the ones\nwe know how to solve,",
    "start": "83490",
    "end": "89790"
  },
  {
    "text": "but also the ones that can be\nsolved, which is pretty much--",
    "start": "89790",
    "end": "97110"
  },
  {
    "text": " which is the topic of 6.006,\nand 6.046 up till now.",
    "start": "97110",
    "end": "105250"
  },
  {
    "text": "But for now, in the\nnext few lectures, we'll be talking about\nproblems that are probably not polynomially solvable,\nand what to do about them.",
    "start": "105250",
    "end": "112940"
  },
  {
    "text": "Polynomial, as you now, is\nlike n to the some constant. Polynomial good exponential bad.",
    "start": "112940",
    "end": "119350"
  },
  {
    "text": " What is n? I guess n is the size\nof the problem, which",
    "start": "119350",
    "end": "128630"
  },
  {
    "text": "we'll have to be a little\nbit careful about today. And then NP is not\nproblem solvable",
    "start": "128630",
    "end": "137239"
  },
  {
    "text": "not in polynomial time,\nbut it's problem solvable in nondeterministic\npolynomial time. ",
    "start": "137240",
    "end": "144720"
  },
  {
    "text": "And in this case\nwe need to focus on a particular type of problem,\nwhich is decision problems.",
    "start": "144720",
    "end": "152010"
  },
  {
    "text": "Decision just means that the\nanswer is either yes or no. So it's a single bit answer.",
    "start": "152010",
    "end": "157450"
  },
  {
    "start": "157450",
    "end": "163129"
  },
  {
    "text": "We will see why we\nneed to restrict to that kind of\nproblem in a moment. ",
    "start": "163130",
    "end": "191030"
  },
  {
    "text": "So this is problems you can\nsolve in polynomial time. Same notion of polynomials,\nsame notion of n,",
    "start": "191030",
    "end": "196959"
  },
  {
    "text": "but in a totally unrealistic\nmodel of computation. Which is a\nnondeterministic model.",
    "start": "196960",
    "end": "202080"
  },
  {
    "text": "In a nondeterministic\nmodel, what you can do is say\ninstead of computing",
    "start": "202080",
    "end": "209150"
  },
  {
    "text": "something from something you\nknow, you could make a guess. So you can guess one out of\npolynomially many options",
    "start": "209150",
    "end": "238840"
  },
  {
    "text": "in constant time. So normally a constant time\noperation, in regular models,",
    "start": "238840",
    "end": "244680"
  },
  {
    "text": "like you add two numbers, or you\ndo an if, that sort of thing. Here we can make a guess.",
    "start": "244680",
    "end": "250870"
  },
  {
    "text": "I give the computer polynomially\nmany options I'm interested in. Computer's going to\ngive me one of them.",
    "start": "250870",
    "end": "257049"
  },
  {
    "text": "It's going to give\nme a good guess. Guess is guaranteed to be good. And good means here\nthat I want to get",
    "start": "257050",
    "end": "264290"
  },
  {
    "text": "to a yes answer if I can. So the formal statement\nis, if any guess",
    "start": "264290",
    "end": "275629"
  },
  {
    "text": "would lead to a yes answer,\nthen we get such a guess.",
    "start": "275630",
    "end": "286960"
  },
  {
    "text": " OK, this is weird.",
    "start": "286960",
    "end": "292580"
  },
  {
    "text": "And it's asymmetric. It's biased towards yes. And this is why we can only\nthink about decision problems,",
    "start": "292580",
    "end": "298010"
  },
  {
    "text": "yes or no. You could bias towards no. You get something\nelse called coNP. But we'll focus here just on NP.",
    "start": "298010",
    "end": "304560"
  },
  {
    "text": "So the idea is I'd really\nlike to find a guess that leads to a yes answer.",
    "start": "304560",
    "end": "309980"
  },
  {
    "text": "And the machine magically\ngives me one if there is one. Which means if I end\nup saying no, that",
    "start": "309980",
    "end": "315170"
  },
  {
    "text": "means there was absolutely no\npath that would lead to a yes. So when you get a no, you\nget a lot of information.",
    "start": "315170",
    "end": "321300"
  },
  {
    "text": "When you get a yes, you\nget some information. But hey, you were lucky. Hard to complain. So in 006, I often call this\nthe lucky model of computation.",
    "start": "321300",
    "end": "330340"
  },
  {
    "text": "That's the informal version. But nondeterminism is\nwhat's really going on here.",
    "start": "330340",
    "end": "335740"
  },
  {
    "text": "So maybe it's useful\nto get an example.",
    "start": "335740",
    "end": "341819"
  },
  {
    "text": "So here's a problem we'll-- this is sort of the granddaddy\nof all NP-complete problems.",
    "start": "341820",
    "end": "349080"
  },
  {
    "text": "We'll get to\ncompleteness in a moment. 3SAT-- SAT stands\nfor satisfiability.",
    "start": "349080",
    "end": "361855"
  },
  {
    "start": "361855",
    "end": "370030"
  },
  {
    "text": "So in 3SAT, the\ninput to the problem looks something like this. I'm just going to\ngive an example.",
    "start": "370030",
    "end": "376016"
  },
  {
    "start": "376016",
    "end": "386930"
  },
  {
    "text": "And in case you've forgotten\nyour weird logic notation, this is an and.",
    "start": "386930",
    "end": "393520"
  },
  {
    "text": "These are ORs. And I'm using this\nfor negation, not.",
    "start": "393520",
    "end": "402680"
  },
  {
    "text": "So in other words, I'm given\na formula which is and of ORs.",
    "start": "402680",
    "end": "408050"
  },
  {
    "text": "And each or clause only\nhas three things in it. These things are\ncalled literals.",
    "start": "408050",
    "end": "413715"
  },
  {
    "start": "413715",
    "end": "420300"
  },
  {
    "text": "And a literal is either\na variable x sub i, or it's the negation of\na variable, not x sub i.",
    "start": "420300",
    "end": "428020"
  },
  {
    "text": "So this is a typical example. You could have no negations. You could here have one\nnegation, two negations,",
    "start": "428020",
    "end": "433510"
  },
  {
    "text": "any number of\nnegations per clause. These groups of three--",
    "start": "433510",
    "end": "438520"
  },
  {
    "text": "these or of three things, three\nliterals, are called clauses.",
    "start": "438520",
    "end": "443900"
  },
  {
    "text": "And they're all ANDed together. And my goal is, this should\nbe a decision question,",
    "start": "443900",
    "end": "450100"
  },
  {
    "text": "so I have a yes or no question. And that question is, can\nyou set the variables--",
    "start": "450100",
    "end": "455210"
  },
  {
    "start": "455210",
    "end": "464030"
  },
  {
    "text": "So they're x1 to true or false?",
    "start": "464030",
    "end": "472010"
  },
  {
    "text": "So each variable I get to choose\na true or false designation such that the formula\ncomes out true.",
    "start": "472010",
    "end": "477860"
  },
  {
    "start": "477860",
    "end": "484870"
  },
  {
    "text": "I use T and F for\ntrue and false. So I want to set\nthese variables such that every clause comes\nout true, because they're",
    "start": "484870",
    "end": "492229"
  },
  {
    "text": "ANDed together. So I have to satisfy this\nclause in one of three ways. Maybe I satisfy\nit all three ways.",
    "start": "492230",
    "end": "497700"
  },
  {
    "text": "Doesn't matter, as long\nas at least one of these should be true, and at least\none of these should be true, and at least one of each\nclause should be true.",
    "start": "497700",
    "end": "505940"
  },
  {
    "text": "So that's the 3SAT problem. This is a hard problem. We don't know a\npolynomial time algorithm.",
    "start": "505940",
    "end": "511170"
  },
  {
    "text": "There probably isn't one. But there is a polynomial time\nnondeterministic algorithm.",
    "start": "511170",
    "end": "517669"
  },
  {
    "text": "So this problem is in NP\nbecause if I have lucky guesses,",
    "start": "517669",
    "end": "534140"
  },
  {
    "text": "it's kind of designed to\nsolve this kind of problem. What I'm going to do is guess\nwhether x1 is true or false.",
    "start": "534140",
    "end": "543730"
  },
  {
    "text": "So I have two choices. And I'm going to ask my machine\nto make the right choice, whether it should\nbe true or false.",
    "start": "543730",
    "end": "550120"
  },
  {
    "text": "Then I'll guess x2. Each of these guess operations\ntakes constant time.",
    "start": "550120",
    "end": "557480"
  },
  {
    "text": "So I do it for every variable. And then I'm going\nto check whether I happen to satisfy the formula.",
    "start": "557480",
    "end": "562670"
  },
  {
    "start": "562670",
    "end": "568959"
  },
  {
    "text": "And if it comes out true,\nthen I'll return yes. And if it comes out\nfalse, I'll return no.",
    "start": "568960",
    "end": "575267"
  },
  {
    "start": "575267",
    "end": "583720"
  },
  {
    "text": "And because NP is biased\ntowards yes answers, it always finds a yes\nanswer if you can.",
    "start": "583720",
    "end": "590824"
  },
  {
    "text": "If there's some way to\nsatisfy the formula, then I will get it. If there's some way to make\nthe formula come out true,",
    "start": "590824",
    "end": "597550"
  },
  {
    "text": "then this algorithm\nwill return yes. If there's no way\nto satisfy it, then",
    "start": "597550",
    "end": "603930"
  },
  {
    "text": "this nondeterministic\nalgorithm will return no. That's just the\ndefinition of how nondeterministic machines work.",
    "start": "603930",
    "end": "609339"
  },
  {
    "text": "It's a little weird. But you can see from\nthis kind of prototype of a nondeterministic algorithm,\nyou can actually always",
    "start": "609340",
    "end": "617800"
  },
  {
    "text": "arrange for your guessing\nto be at the beginning. And then you do some regular\npolynomial time checking",
    "start": "617800",
    "end": "625829"
  },
  {
    "text": "or deterministic checking. So when you rewrite\nyour algorithm like this with guesses up\nfront and then checking,",
    "start": "625830",
    "end": "632820"
  },
  {
    "text": "you can also think of it as\na verification algorithm. So you can say, your friend\nclaims that this 3SAT formula",
    "start": "632820",
    "end": "641050"
  },
  {
    "text": "is satisfiable,\nmeaning there's a way to set the variable so\nthat it comes out true.",
    "start": "641050",
    "end": "646139"
  },
  {
    "text": "So this is called a\nsatisfying assignment.  Satisfying just means make true.",
    "start": "646140",
    "end": "652627"
  },
  {
    "text": " And you're like, no,\nI don't believe you.",
    "start": "652627",
    "end": "659355"
  },
  {
    "text": "And your friend says no,\nno, no, really, it's true. And here's how I can prove it. You set x1 to false.",
    "start": "659355",
    "end": "664720"
  },
  {
    "text": "You set x2 to true. You set x3-- basically\nthey give you the guesses. And then you don't\nhave to be convinced",
    "start": "664720",
    "end": "671605"
  },
  {
    "text": "that those are\nthe right guesses, you can check that\nit's the right guess. You can compute this\nformula in linear time,",
    "start": "671605",
    "end": "677089"
  },
  {
    "text": "see what the outcome is. If someone tells you\nwhat the xi's are, you can very quickly\nsee whether that was a satisfying assignment.",
    "start": "677090",
    "end": "684310"
  },
  {
    "text": "So you could call\nthis a solution, and then there's a\npolynomial time verification algorithm that checks\nthat solutions are valid.",
    "start": "684310",
    "end": "692700"
  },
  {
    "text": "But, you can only do\nthat for yes answers. Your friend says no,\nthis is not satisfiable,",
    "start": "692700",
    "end": "699510"
  },
  {
    "text": "they have no way of\nproving it to you. I mean, other than checking\nall the assignments separately,",
    "start": "699510",
    "end": "706450"
  },
  {
    "text": "which would take\nexponential time, there's no easy way to confirm\nthat the answer to this problem is no.",
    "start": "706450",
    "end": "711670"
  },
  {
    "text": "But there is an\neasy way to check that the answer is yes, namely\nI give you the satisfying assignment.",
    "start": "711670",
    "end": "717600"
  },
  {
    "text": "So this definition of NP\nis what I'll stick to. It's this sort of--",
    "start": "717600",
    "end": "723360"
  },
  {
    "text": "I like guessing because it's\nlike dynamic programming. With dynamic programming\nwe also guess,",
    "start": "723360",
    "end": "729328"
  },
  {
    "text": "and guessing actually originally\ncomes from this world, nondeterminism. In dynamic programming, we\ndon't allow this kind of model.",
    "start": "729328",
    "end": "736790"
  },
  {
    "text": "And so we have to check\nthe guesses separately. And so we spend lots of time. Here, magically, you\nalways get the right",
    "start": "736790",
    "end": "742680"
  },
  {
    "text": "guess in only constant time. So this is a much\nmore powerful model. Of course there's no computers\nthat work like this, sadly,",
    "start": "742680",
    "end": "750251"
  },
  {
    "text": "or I guess more interestingly. So this is more about confirming\nthat your problem is not",
    "start": "750251",
    "end": "756870"
  },
  {
    "text": "totally impossible. At least you can check the\nanswers in polynomial time.",
    "start": "756870",
    "end": "762560"
  },
  {
    "text": "So that's one thing. ",
    "start": "762560",
    "end": "811110"
  },
  {
    "text": "So this is an equivalent\ndefinition of NP because you can take a\nnondeterministic algorithm and put the guessing up top.",
    "start": "811110",
    "end": "817300"
  },
  {
    "text": "You can call the\nresults of those guesses a certificate that\nan answer is yes. And then you have a regular old\ndeterministic polynomial time",
    "start": "817300",
    "end": "825940"
  },
  {
    "text": "algorithm that, given\nthat certificate, will verify that it actually\nproves that the answer is yes.",
    "start": "825940",
    "end": "834516"
  },
  {
    "text": " It's just that certificate\nhas to be polynomial size.",
    "start": "834516",
    "end": "840730"
  },
  {
    "text": "You can't guess something\nof exponential size. You can only guess something of\npolynomial size in this model.",
    "start": "840730",
    "end": "847010"
  },
  {
    "text": "So seems a little weird. But we'll see why this is\nuseful in a little bit.",
    "start": "847010",
    "end": "856610"
  },
  {
    "text": "So let me go to NP completeness. ",
    "start": "856610",
    "end": "864740"
  },
  {
    "text": "So if I have a problem X,\nit's NP-complete if X is in NP",
    "start": "864740",
    "end": "877320"
  },
  {
    "text": "and X is NP-hard.  But I haven't told\nyou what NP-hard is.",
    "start": "877320",
    "end": "884130"
  },
  {
    "text": "Maybe you remember from\n006, but let me remind you.",
    "start": "884130",
    "end": "924860"
  },
  {
    "text": "So, I need to define reduce. So maybe I'll do\nthat as well, then",
    "start": "924860",
    "end": "930683"
  },
  {
    "text": "we can talk about all these. ",
    "start": "930683",
    "end": "986130"
  },
  {
    "text": "OK, a lot of definitions. But the idea of NP\nhardness is very simple.",
    "start": "986130",
    "end": "992970"
  },
  {
    "text": "If problem X is NP-hard,\nit means that it's at least as hard as--",
    "start": "992970",
    "end": "999540"
  },
  {
    "text": "sorry, that is a Y-- it's at least as hard\nas all problems in NP.",
    "start": "999540",
    "end": "1006279"
  },
  {
    "text": "Intuitively, X means\nit's at least as hard as everything in NP. Whereas being in NP is\na positive statement.",
    "start": "1006280",
    "end": "1013310"
  },
  {
    "text": "That says it's not\ntoo hard, at least there's a polynomial time\nverification algorithm. So being in NP is good news.",
    "start": "1013310",
    "end": "1020060"
  },
  {
    "text": "It says you're no\nharder than NP. NP-hard says you're at least\nas hard as everything in NP.",
    "start": "1020060",
    "end": "1025920"
  },
  {
    "text": "And so NP-complete is a nice\nanswer because this says you're exactly as hard\nas everything in NP--",
    "start": "1025920",
    "end": "1031579"
  },
  {
    "text": "no harder, no easier. If you draw, in\nthis vague sense,",
    "start": "1031579",
    "end": "1037099"
  },
  {
    "text": "computational\ndifficulty on one axis--",
    "start": "1037099",
    "end": "1042740"
  },
  {
    "text": "which is not really accurate,\nbut I like to do it anyway-- and you have P is all of\nthese easy problems down here.",
    "start": "1042740",
    "end": "1051320"
  },
  {
    "text": "And NP is some\nlarger set like this. NP-hard is from here over.",
    "start": "1051320",
    "end": "1058138"
  },
  {
    "text": " And this point right\nhere is NP-complete.",
    "start": "1058139",
    "end": "1065040"
  },
  {
    "text": " Being in NP means you're left\nof this line, or on the line.",
    "start": "1065040",
    "end": "1073350"
  },
  {
    "text": "And being NP-hard means\nyou're right of this line, or on the line. NP-complete means\nyou're right there.",
    "start": "1073350",
    "end": "1078610"
  },
  {
    "text": "So that's a very definitive\nsense of hardness. Now there is this\nslight catch, which",
    "start": "1078610",
    "end": "1084690"
  },
  {
    "text": "is we don't know\nwhether P equals NP. So maybe this is the same\nas this, but probably not.",
    "start": "1084690",
    "end": "1091450"
  },
  {
    "text": "Unless you believe\nin luck, basically, unless you imagine\nthat a computer could engineer luck and always\nguess the right things",
    "start": "1091450",
    "end": "1099830"
  },
  {
    "text": "without spending a lot of\ntime, then P does not equal NP. And in that world, what\nwe get is that if you have",
    "start": "1099830",
    "end": "1106680"
  },
  {
    "text": "an NP-complete problem, or\nactually any NP-hard problem, you know it cannot be NP.",
    "start": "1106680",
    "end": "1113590"
  },
  {
    "text": "So if you have\nthat X is NP-hard, then you know that X is\nnot in P unless all of NP",
    "start": "1113590",
    "end": "1124405"
  },
  {
    "text": "is in P. So unless P equals NP. And most reasonable people\ndo not believe this.",
    "start": "1124405",
    "end": "1131039"
  },
  {
    "text": "And so instead they\nhave to believe this, that your problem is not\npolynomially solvable.",
    "start": "1131040",
    "end": "1137580"
  },
  {
    "text": "So why is this true? Because if your\nproblem is NP-hard, it is at least as hard\nas every problem in NP.",
    "start": "1137580",
    "end": "1145880"
  },
  {
    "text": "And if you believe that\nthere is some problem in NP-- we don't necessarily\nknow which one-- but if there is any problem out\nthere in NP that is not in P,",
    "start": "1145880",
    "end": "1154280"
  },
  {
    "text": "then X has to be at\nleast as hard as it. So it also requires\nnonpolynomial time, something",
    "start": "1154280",
    "end": "1162730"
  },
  {
    "text": "larger than polynomial time. What does at least\nas hard mean though? We're going to define it\nin terms of reductions.",
    "start": "1162730",
    "end": "1169690"
  },
  {
    "text": "Reduction from one\nproblem to another is just a polynomial\ntime algorithm, regular deterministic\npolynomial time,",
    "start": "1169690",
    "end": "1176130"
  },
  {
    "text": "that converts an\ninput to the problem A into an equivalent\ninput to problem B. Equivalent means that it\nhas the same yes or no answer.",
    "start": "1176130",
    "end": "1185554"
  },
  {
    "text": " And we'll just be thinking\nabout decision problems today. ",
    "start": "1185554",
    "end": "1195410"
  },
  {
    "text": "So why would I care\nabout a reduction? Because what it tells me is that\nif I know how to solve problem",
    "start": "1195410",
    "end": "1203960"
  },
  {
    "text": "B, then I also know how\nto solve problem A. If I have a, say, a polynomial\ntime algorithm for solving B",
    "start": "1203960",
    "end": "1211179"
  },
  {
    "text": "and I want one for A,\nI just take my A input. I convert it into the\nequivalent B input.",
    "start": "1211180",
    "end": "1216440"
  },
  {
    "text": "Then I run my algorithm\nfor B, and then it gives me the answer\nto the A problem because the answers\nare the same.",
    "start": "1216440",
    "end": "1222920"
  },
  {
    "text": "So if you have a reduction\nlike this and if say, B, has a polynomial\ntime algorithm,",
    "start": "1222920",
    "end": "1229940"
  },
  {
    "text": "then so does A, because you\ncan just convert A into B,",
    "start": "1229940",
    "end": "1235409"
  },
  {
    "text": "and then solve B.\nAlso this works for nondeterministic algorithms.",
    "start": "1235410",
    "end": "1242990"
  },
  {
    "start": "1242990",
    "end": "1248540"
  },
  {
    "text": "Not too important.  So what this tells us is\nthat in a certain sense--",
    "start": "1248540",
    "end": "1256710"
  },
  {
    "text": "get this right--\nwell this is saying, if I can solve B,\nthat I can solve A.",
    "start": "1256710",
    "end": "1266320"
  },
  {
    "text": "So this is saying\nthat B is at least as",
    "start": "1266320",
    "end": "1272019"
  },
  {
    "text": "hard as A. I think I got\nthat right, a little tricky.",
    "start": "1272020",
    "end": "1278020"
  },
  {
    "text": "So if we want to prove\nthe problem is NP hard, what we do is show that\nevery problem in NP",
    "start": "1278020",
    "end": "1284559"
  },
  {
    "text": "can be reduced to the problem\nof X. So now we can go back and say well, if we believe\nthat there is some problem Y,",
    "start": "1284560",
    "end": "1291390"
  },
  {
    "text": "that is in NP minus P, if\nthere's something out here that is not in P, then we\ncan take that problem Y,",
    "start": "1291390",
    "end": "1298780"
  },
  {
    "text": "and by this definition,\nwe can reduce it to X, because everything\nin NP reduces to X. And so then I can\nsolve my problem",
    "start": "1298780",
    "end": "1309250"
  },
  {
    "text": "Y, which is in NP minus P, by converting it\nto X and solving X. So that means X better\nnot have a polynomial time",
    "start": "1309250",
    "end": "1315770"
  },
  {
    "text": "algorithm, because if\nit did, Y would also have a polynomial\ntime algorithm. And then in general,\nP would equal",
    "start": "1315770",
    "end": "1322740"
  },
  {
    "text": "NP, because every problem\nin NP can be converted to X. So if X has a polynomial\ntime algorithm,",
    "start": "1322740",
    "end": "1327780"
  },
  {
    "text": "then every problem Y does. Question? AUDIENCE: For the\nsecond if statement,",
    "start": "1327780",
    "end": "1333250"
  },
  {
    "text": "why can't you say that if\nA is in NP, B is in NP? ERIC DEMAINE: So you're asked\nus about the reverse question.",
    "start": "1333250",
    "end": "1340190"
  },
  {
    "text": "If is A in NP, can we\nconclude that B is in NP? And the answer is no.",
    "start": "1340190",
    "end": "1345314"
  },
  {
    "start": "1345314",
    "end": "1350890"
  },
  {
    "text": "Because this reduction only\nlets us convert from A to B. It doesn't let us do anything\nfor converting from B to A.",
    "start": "1350890",
    "end": "1357100"
  },
  {
    "text": "So if we know how to\nsolve A and we also know how to convert A into B,\nit doesn't tell us anything.",
    "start": "1357100",
    "end": "1363179"
  },
  {
    "text": "It could be B is a much\nharder problem than A, in that situation.",
    "start": "1363180",
    "end": "1368450"
  },
  {
    "text": " That's, I think, as good\nas I can do for that.",
    "start": "1368450",
    "end": "1375309"
  },
  {
    "text": "Other questions?  All right. It is really tricky to get\nthese directions right.",
    "start": "1375310",
    "end": "1381860"
  },
  {
    "text": "So let me give you a handy guide\non how to not make a mistake.",
    "start": "1381860",
    "end": "1389410"
  },
  {
    "text": "So maybe over here. ",
    "start": "1389410",
    "end": "1400409"
  },
  {
    "text": "What we care about, from\nan algorithmic perspective, is proving the problems\nare NP-complete.",
    "start": "1400410",
    "end": "1407780"
  },
  {
    "start": "1407780",
    "end": "1417740"
  },
  {
    "text": "Because if we prove\nNP-completeness-- I mean, really we care\nabout NP-hardness, but we might as well\ndo NP-completeness. Most of the problems that\nwe'll see that are NP-hard",
    "start": "1417740",
    "end": "1425250"
  },
  {
    "text": "are also NP-complete. So when we prove this, we\nprove that there is basically",
    "start": "1425250",
    "end": "1431450"
  },
  {
    "text": "no polynomial time\nalgorithm for that problem. So that's good to\nknow, because then we can just give up searching for\na polynomial time algorithm.",
    "start": "1431450",
    "end": "1439840"
  },
  {
    "text": "So all the problems\nwe've seen so far have polynomial time algorithms,\nexcept a couple in your problem",
    "start": "1439840",
    "end": "1445050"
  },
  {
    "text": "sets, which were\nactually NP-complete. And the best you could\nhave done was exponential, unless P equals NP.",
    "start": "1445050",
    "end": "1451420"
  },
  {
    "text": "So here's how you can prove\nthis kind of lower bound to say look, I don't need\nto look for algorithms",
    "start": "1451420",
    "end": "1457550"
  },
  {
    "text": "any more because my\nproblem is just too hard. It's as hard as\neverything in NP.",
    "start": "1457550",
    "end": "1462580"
  },
  {
    "text": "So this is just a summary\nof those definitions. The first thing you do\nis prove that X is in NP.",
    "start": "1462580",
    "end": "1469820"
  },
  {
    "text": "The second thing you do is\nprove that X is NP-hard. And to do that, you reduce\nfrom some known NP-complete",
    "start": "1469820",
    "end": "1479460"
  },
  {
    "text": "problem-- or I guess NP-hard, but\nwe'll use NP-complete--",
    "start": "1479460",
    "end": "1484730"
  },
  {
    "start": "1484730",
    "end": "1493860"
  },
  {
    "text": "to your problem X. Maybe\nI'll give this a name Y.",
    "start": "1493860",
    "end": "1506030"
  },
  {
    "text": "OK, so to prove\nthat X is in NP, you do something like\nwhat we did over here, which is to give a\nnondeterministic algorithm.",
    "start": "1506030",
    "end": "1512390"
  },
  {
    "text": "Or you can think\nof it as defining what the certificate is and\nthen giving a polynomial time",
    "start": "1512390",
    "end": "1519289"
  },
  {
    "text": "verification algorithm. So sort of two approaches.",
    "start": "1519290",
    "end": "1524812"
  },
  {
    "text": "You can give a nondeterministic\npolynomial time algorithm, or you give a certificate\nand a verifier.",
    "start": "1524812",
    "end": "1533234"
  },
  {
    "start": "1533234",
    "end": "1539360"
  },
  {
    "text": "There's no right or\nwrong certificate. I mean, a certificate, you\ncan define however you want, as long as the verifier\ncan actually check it",
    "start": "1539360",
    "end": "1546190"
  },
  {
    "text": "and when it says yes, then the\nanswer to the problem was yes. So it's really the same thing.",
    "start": "1546190",
    "end": "1551900"
  },
  {
    "text": "Just want to say\nthere's some certificate that a verifier\ncould actually check.",
    "start": "1551900",
    "end": "1557235"
  },
  {
    "text": "So that's proving that\nyour problem is in NP. It's sort of an\nalgorithmic thing. The second part is\nall about reductions.",
    "start": "1557235",
    "end": "1563490"
  },
  {
    "text": "Now the definition\nsays that I should reduce every problem\nin NP to my problem X.",
    "start": "1563490",
    "end": "1568775"
  },
  {
    "text": "That's tedious,\nbecause there are a lot of problems in the world. So I don't want to do it\nfor every problem in NP.",
    "start": "1568775",
    "end": "1574530"
  },
  {
    "text": "I'd like to just do it for one. Now if I reduce\nsorting to my problem, that's not very interesting. It says my problem is at\nleast as hard as sorting.",
    "start": "1574530",
    "end": "1582980"
  },
  {
    "text": "But I already know\nhow to solve sorting. But if I start from an\nNP-complete problem,",
    "start": "1582980",
    "end": "1588960"
  },
  {
    "text": "then I know, by the definition,\nthat every problem in NP can be reduced to that problem.",
    "start": "1588960",
    "end": "1594549"
  },
  {
    "text": "And if I show how to reduce\nthe NP-complete problem to me, then I know that\nI'm NP-complete too.",
    "start": "1594550",
    "end": "1599830"
  },
  {
    "text": "Because if I have\nany problem Z in NP, by the definition of NP-complete\nof Y I can reduce that to Y.",
    "start": "1599830",
    "end": "1609510"
  },
  {
    "text": "And then if I can build\na reduction from Y to X, then I get this reduction.",
    "start": "1609510",
    "end": "1615519"
  },
  {
    "text": "And so that means I can\nconvert any problem in NP to my problem X, which\nmeans X is NP-hard.",
    "start": "1615520",
    "end": "1621310"
  },
  {
    "text": "That's the definition. So all this is to\nsay the first time",
    "start": "1621310",
    "end": "1626649"
  },
  {
    "text": "you prove a problem is\nNP-complete in the world-- this happened in the '70s by Cook.",
    "start": "1626650",
    "end": "1634700"
  },
  {
    "text": "Basically he proved that\n3SAT is NP-complete. ",
    "start": "1634700",
    "end": "1639725"
  },
  {
    "text": "That was annoying,\nbecause he had to start from any\nproblem in NP, and he had to show that you could\nreduce any problem in NP",
    "start": "1639725",
    "end": "1645230"
  },
  {
    "text": "to 3SAT. But now that that hard work is\ndone, our life is much easier. And in this class all\nyou need to think about",
    "start": "1645230",
    "end": "1651779"
  },
  {
    "text": "is picking your favorite\nNP-complete problem. 3SAT's a good choice\nfor almost anything,",
    "start": "1651780",
    "end": "1656900"
  },
  {
    "text": "but we'll see a bunch of other\nproblems today from here. And then reduce from that\nknown problem to your problem",
    "start": "1656900",
    "end": "1664519"
  },
  {
    "text": "that you're trying\nto prove is NP-hard. If you can do that, you know\nyour problem is NP-hard.",
    "start": "1664520",
    "end": "1670220"
  },
  {
    "text": "So we only need one reduction\nfor each hardness result, which is nice. And this picture is a\ncollection of reductions.",
    "start": "1670220",
    "end": "1676059"
  },
  {
    "text": "We're going to start from 3SAT. I'm not going to prove\nthat it's NP-complete, although I'll give you a\nhint as to why that's true.",
    "start": "1676060",
    "end": "1681150"
  },
  {
    "text": "We're going to reduce it\nto Super Mario Brothers. We're going to reduce it to\nthree dimensional matching. We're going to reduce\nthree dimensional matching",
    "start": "1681150",
    "end": "1686290"
  },
  {
    "text": "to subsets sum, to partition,\nto rectangle packing, to jig saw puzzles. And we're going to do all\nthose reductions, hopefully.",
    "start": "1686290",
    "end": "1693310"
  },
  {
    "text": "And that's proving NP-hardness\nof all those problems.",
    "start": "1693310",
    "end": "1698920"
  },
  {
    "text": "They're also all in NP. ",
    "start": "1698920",
    "end": "1704990"
  },
  {
    "text": "So 30 second intuition\nwhy 3SAT is NP-hard.",
    "start": "1704990",
    "end": "1711610"
  },
  {
    "text": "Well, if you have\nany problem in NP, that means there is one of these\nnondeterministic polynomial",
    "start": "1711610",
    "end": "1719580"
  },
  {
    "text": "time algorithms, or there\nis some verifier given",
    "start": "1719580",
    "end": "1724870"
  },
  {
    "text": "a polynomial size certificate. So that verifier is\njust some algorithm. And software and hardware\nare basically the same thing,",
    "start": "1724870",
    "end": "1732070"
  },
  {
    "text": "right? So you can convert\nthat algorithm into a circuit that\nimplements the algorithm.",
    "start": "1732070",
    "end": "1737149"
  },
  {
    "text": "And if I have a circuit with\nlike ANDs and ORs and NOTs, I can convert that\ninto a Boolean formula",
    "start": "1737150",
    "end": "1742468"
  },
  {
    "text": "with ANDs, ORs, and NOTs. Circuits and formulas\nare about the same. And if I have a formula--",
    "start": "1742468",
    "end": "1747957"
  },
  {
    "text": "fun fact, although this\nis a little less obvious-- you can convert it into this\nform, an AND of triple ORs.",
    "start": "1747957",
    "end": "1757120"
  },
  {
    "text": "And once you've done\nthat, that formula is equivalent to the\noriginal algorithm. And the inputs to that\nverification algorithm,",
    "start": "1757120",
    "end": "1765840"
  },
  {
    "text": "the certificate, are represented\nby these variables, the xi's. And so deciding whether\nthere's some way",
    "start": "1765840",
    "end": "1771039"
  },
  {
    "text": "to set the xi's to\nmake the formula true is the same thing as saying is\nthere some certificate where",
    "start": "1771040",
    "end": "1777040"
  },
  {
    "text": "the verifier says yes, which\nis the same thing as saying that the problem has answer yes.",
    "start": "1777040",
    "end": "1784120"
  },
  {
    "text": "So given an NP algorithm, one\nof these nondeterministic funny algorithms, we can convert it\ninto a formula satisfaction",
    "start": "1784120",
    "end": "1790700"
  },
  {
    "text": "problem. And that's how you prove\n3SAT is NP-complete. But to do that can\ntake many lectures, so I'm not going\nto do the details.",
    "start": "1790700",
    "end": "1798212"
  },
  {
    "text": " The main annoying part is\nbeing formal about what exactly",
    "start": "1798212",
    "end": "1803570"
  },
  {
    "text": "an algorithm is, which we\ndon't do in this class. If you're interested,\ntake 6.045,",
    "start": "1803570",
    "end": "1811820"
  },
  {
    "text": "which is some\npeople are actually in the overlap this semester. Cool. Let's do some reductions.",
    "start": "1811820",
    "end": "1817850"
  },
  {
    "text": "This is where things get fun. So we're going to start\nwith reducing 3SAT",
    "start": "1817850",
    "end": "1823230"
  },
  {
    "text": "to Super Mario Brothers.  So how many people have\nplayed Super Mario Brothers?",
    "start": "1823230",
    "end": "1831320"
  },
  {
    "text": "Easy one. I hope if you haven't\nplayed, you've seen it, because we're going to rely very\nmuch on Super Mario Brothers physics, which I hope\nis fairly intuitive.",
    "start": "1831320",
    "end": "1838720"
  },
  {
    "text": "But if you haven't played,\nyou should, obviously. ",
    "start": "1838720",
    "end": "1846180"
  },
  {
    "text": "And we're going to reduce\n3SAT to Super Mario Brothers. ",
    "start": "1846180",
    "end": "1864480"
  },
  {
    "text": "Now this is a theorem by a\nbunch of people, one MIT grad",
    "start": "1864480",
    "end": "1873440"
  },
  {
    "text": "student, myself, and a couple\nother collaborators not at MIT.",
    "start": "1873440",
    "end": "1879549"
  },
  {
    "text": "And of course this result holds\nfor all versions of Super Mario Brothers so far\nreleased, I think.",
    "start": "1879550",
    "end": "1886568"
  },
  {
    "text": "The proofs are a\nlittle bit different for each one, especially Mario\n2, which is its own universe. ",
    "start": "1886568",
    "end": "1893710"
  },
  {
    "text": "What I'm going to talk about the\noriginal Super Mario Brothers, NES classic which\nI grew up with.",
    "start": "1893710",
    "end": "1899380"
  },
  {
    "text": " Now the real Super Mario\nBrothers is on a 320",
    "start": "1899380",
    "end": "1905240"
  },
  {
    "text": "by 240 screen. It's a little bit small. Once you go right, you can't go\nback left, except in the maze",
    "start": "1905240",
    "end": "1911110"
  },
  {
    "text": "levels anyway. So I need to generalize\na little bit. Because if you assume that\nthe screen size of Super Mario",
    "start": "1911110",
    "end": "1918539"
  },
  {
    "text": "Brothers is\nconstant, in fact you can dynamic program\nyour way through and find the optimal\nsolution in polynomial time.",
    "start": "1918540",
    "end": "1924670"
  },
  {
    "text": "So I need to generalize a little\nbit to arbitrary board size,",
    "start": "1924670",
    "end": "1933080"
  },
  {
    "text": "arbitrary screen size. So in fact, my entire level will\nbe in one screen, no scrolling.",
    "start": "1933080",
    "end": "1942010"
  },
  {
    "text": "Never mind this is a\nside scrolling adventure. And so that's my\ngeneralized problem.",
    "start": "1942010",
    "end": "1947160"
  },
  {
    "text": "And I claim this is NP-hard. If I give you a\nlevel and I ask you, can you get to the\nend of this level?",
    "start": "1947160",
    "end": "1954070"
  },
  {
    "text": "That problem is NP-hard. Also no time limit. The time limit would be OK,\nbut you have to generalize it.",
    "start": "1954070",
    "end": "1960700"
  },
  {
    "text": "Instead of 300\nseconds or whatever, it has to be an arbitrary value.",
    "start": "1960700",
    "end": "1967118"
  },
  {
    "text": "So how are we going to do this? We're going to reduce from\n3SAT to Super Mario Brothers. So that means I'm given--",
    "start": "1967118",
    "end": "1973563"
  },
  {
    "text": "I don't get to choose. I'm given one of these formulas. And I have to convert it into an\nequivalent Super Mario Brother",
    "start": "1973563",
    "end": "1979799"
  },
  {
    "text": "instance. So I have to convert it into\na level, a hypothetical level of Super Mario Brothers.",
    "start": "1979800",
    "end": "1985310"
  },
  {
    "text": "Given a formula, I have\nto build a level that implements that formula.",
    "start": "1985310",
    "end": "1991150"
  },
  {
    "text": "So here's what it's\ngoing to look like. I'm going to start\nout somewhere. Here's my drawing of Mario.",
    "start": "1991150",
    "end": "1999180"
  },
  {
    "text": "Mario-- or you could play Luigi. It doesn't matter. First thing it's going to do\nis enter a little black box",
    "start": "1999180",
    "end": "2006190"
  },
  {
    "text": "called a variable. This is supposed to\nrepresent, let's call it x1.",
    "start": "2006190",
    "end": "2013799"
  },
  {
    "text": "And so it's some black box. I'm going to tell you\nwhat it is in a moment. And it has two outputs. There's the true output\nand the false output.",
    "start": "2013800",
    "end": "2021020"
  },
  {
    "text": "And the idea is that Mario has\nto choose whether to set x1 to true or false.",
    "start": "2021020",
    "end": "2026470"
  },
  {
    "text": "Let me show you that gadget. ",
    "start": "2026470",
    "end": "2032326"
  },
  {
    "text": "So here's the--\nwhoops, upside down-- here is the variable gadget.",
    "start": "2032326",
    "end": "2039330"
  },
  {
    "text": "So here's Mario. Could enter from\nthis way or that way. We'll need a couple of\nentrances in a moment.",
    "start": "2039330",
    "end": "2044610"
  },
  {
    "text": "And then falls down. Once Mario is down here, if\nyou check the jump height, you cannot get back up to here.",
    "start": "2044610",
    "end": "2050199"
  },
  {
    "text": "So this is like a one way. Once you're down here,\nyou have a choice. Should I fall to the left\nor fall to the right?",
    "start": "2050199",
    "end": "2055270"
  },
  {
    "text": "And if you make these falls\nlarge enough, once you fall, you can't unfall.",
    "start": "2055270",
    "end": "2061549"
  },
  {
    "text": "So once you make a\nchoice of whether I leave on the true exit\nor the false exit,",
    "start": "2061550",
    "end": "2066780"
  },
  {
    "text": "that's a permanent choice. So you can't undo it, unless\nyou can come back to here. But we'll set up so\nthat never happens.",
    "start": "2066780",
    "end": "2073487"
  },
  {
    "text": "I mean, if you're trying\nto solve the level, you don't know which way to go. You have to guess. Can I go fall to the left\nor fall to the right,",
    "start": "2073487",
    "end": "2080169"
  },
  {
    "text": "or do something. So the existence of a\nplay through, this level,",
    "start": "2080170",
    "end": "2087100"
  },
  {
    "text": "is the same as saying there is\na choice for the x1 variable. Now we have to do this\nfor lots of variables.",
    "start": "2087100",
    "end": "2093573"
  },
  {
    "text": "So there's x2 variable,\nx3 variable, and so on.",
    "start": "2093573",
    "end": "2098760"
  },
  {
    "text": "Each one has a true\nexit and a false exit.",
    "start": "2098760",
    "end": "2103950"
  },
  {
    "text": "So the actual level will\nhave n instances of this if we have n variables. Now, what do I do\nonce Mario decides",
    "start": "2103950",
    "end": "2111750"
  },
  {
    "text": "that this is a true thing? What I'm going to\ndo is have-- this is called a gadget by the way.",
    "start": "2111750",
    "end": "2117150"
  },
  {
    "text": "In general, most\nNP-hardness proofs use these things called\ngadgets, which is just saying, we take various\nfeatures of the input,",
    "start": "2117150",
    "end": "2124790"
  },
  {
    "text": "and we convert them into\ncorresponding features on the output. So here I'm taking each\nvariable, x1, x2, x3,",
    "start": "2124790",
    "end": "2130769"
  },
  {
    "text": "and so on, and building\nthis little gadget for each of those variables. Now the other main thing you\nhave in 3SAT are the clauses.",
    "start": "2130770",
    "end": "2139260"
  },
  {
    "text": "We have triples of variables\nor their negations. They have to come\ntogether and be satisfied.",
    "start": "2139260",
    "end": "2145640"
  },
  {
    "text": "One of them has to be true. So down here I'm going to have\nsome clause gadgets, which",
    "start": "2145640",
    "end": "2156220"
  },
  {
    "text": "I will show you in a moment. ",
    "start": "2156220",
    "end": "2165630"
  },
  {
    "text": "OK, and I think\nI'll switch colors. This is about to get messy. So the idea is that some of\nthe clauses have x1 in them.",
    "start": "2165630",
    "end": "2176132"
  },
  {
    "text": "The true version\nof x1, not x1 bar. So for those clauses,\nI want to connect.",
    "start": "2176132",
    "end": "2182920"
  },
  {
    "text": "I'm going to dip into\nthe clause briefly. So from this wire going to\ndip into the clause here.",
    "start": "2182920",
    "end": "2187960"
  },
  {
    "text": "And then I'm going to go to\nthe next clause that has x1. Maybe it's this one, and\nthe next one, and so on.",
    "start": "2187960",
    "end": "2195020"
  },
  {
    "text": "All the clauses that have\nx1 in it, I dip into. The other ones I don't.",
    "start": "2195020",
    "end": "2200240"
  },
  {
    "text": "And then once I'm\ndone, I'm going to come back and feed into x2. ",
    "start": "2200240",
    "end": "2208620"
  },
  {
    "text": "Next, I look at this\nfalse wire for x1. So all the clauses that\nhave x1 bar in them,",
    "start": "2208620",
    "end": "2215260"
  },
  {
    "text": "I'm going to connect. So I don't know\nwhich ones they are. Maybe this one, or\nthis one, something.",
    "start": "2215260",
    "end": "2225420"
  },
  {
    "text": "And then I come here. And so the idea is that\nMario makes a choice",
    "start": "2225420",
    "end": "2231150"
  },
  {
    "text": "whether x1 is true or false. If x1 is true, Mario is going\nto visit all of the clauses that",
    "start": "2231150",
    "end": "2237640"
  },
  {
    "text": "have x1 true in them. And then it's going to\ngo to the x2 choice. Then it's going to choose\nwhether x2 is true or false,",
    "start": "2237640",
    "end": "2243510"
  },
  {
    "text": "and repeat. Or Mario decides\nx1 should be false. That will satisfy\nall the clauses",
    "start": "2243510",
    "end": "2250420"
  },
  {
    "text": "that have x1 bar in them. And then again, we\nfeed back into x2.",
    "start": "2250420",
    "end": "2257220"
  },
  {
    "text": "So this is why we have two\ninputs into the x2 gadget. One of them is when the\nprevious variable was true.",
    "start": "2257220",
    "end": "2262400"
  },
  {
    "text": "The other is when the\nprevious variable was false. The choice of x2 doesn't\ndepend on the choice of x1.",
    "start": "2262400",
    "end": "2267780"
  },
  {
    "text": "So they feed into\nthe same thing. And you have to\nmake your choice. ",
    "start": "2267780",
    "end": "2273960"
  },
  {
    "text": "So far, so good. Now the question is, what's\nhappening in these clauses.",
    "start": "2273960",
    "end": "2278970"
  },
  {
    "text": "And then there's\none other aspect, which is after you've set all of\nthe variables, at the very end,",
    "start": "2278970",
    "end": "2287740"
  },
  {
    "text": "after this last variable\nxn, at the very end,",
    "start": "2287740",
    "end": "2293350"
  },
  {
    "text": "what we're going to do is come\nand go through all the clauses.",
    "start": "2293350",
    "end": "2299650"
  },
  {
    "text": "And then this is the flag. This is where you win the level. Sorry, I drew it backwards. But the goal is for Martin to\nstart here and get to here.",
    "start": "2299650",
    "end": "2309600"
  },
  {
    "text": "In order to do\nthat, you have to be able to traverse\nthrough these clauses. So what do the\nclauses look like?",
    "start": "2309600",
    "end": "2314750"
  },
  {
    "text": "This is a little\nbit more elaborate. So here we are. ",
    "start": "2314750",
    "end": "2323095"
  },
  {
    "text": "This is a clause gadget. So there are three ways\nto dip into the clause. It's actually upside down\nrelative to that picture,",
    "start": "2323095",
    "end": "2330030"
  },
  {
    "text": "but that's not a problem.  So if Mario comes here, then\nhe can hit the question mark",
    "start": "2330030",
    "end": "2338829"
  },
  {
    "text": "from below. And inside this question mark\nis an invincibility star. And the invincibility star\nwill come up here and just",
    "start": "2338830",
    "end": "2344950"
  },
  {
    "text": "bounce around forever. We checked. The star will just stay there\nfor as long as you let it sit.",
    "start": "2344950",
    "end": "2352350"
  },
  {
    "text": "Unfortunately, all of\nthese are solid blocks, so Mario can't actually get\nup to here to get the star.",
    "start": "2352350",
    "end": "2358420"
  },
  {
    "text": "But as long as Mario\ncan visit this question mark or this question mark\nor this question mark, then there will be at\nleast one star up here.",
    "start": "2358420",
    "end": "2365275"
  },
  {
    "text": "So the idea is\nthat each of these represents one of the\nliterals that's in the clause. And if we choose--",
    "start": "2365275",
    "end": "2372019"
  },
  {
    "text": "so let's look at this first\nclause, x1 or x3 or x6 bar. So if we choose x1 to be true,\nthen we'll follow the path",
    "start": "2372020",
    "end": "2380150"
  },
  {
    "text": "and we'll be able\nto hit the star. Or if we choose x3 to be\ntrue, then we'll come in here",
    "start": "2380150",
    "end": "2386150"
  },
  {
    "text": "and hit this star. Or if we choose x6 to\nbe false, then that path",
    "start": "2386150",
    "end": "2392198"
  },
  {
    "text": "will lead to here and we'll be\nable to hit this question mark and get the star up here. So as long as we\nsatisfy the clause,",
    "start": "2392198",
    "end": "2398570"
  },
  {
    "text": "there will be at least one star. Won't help if you\nhave multiple stars. Then the final traversal part--\nso that was this first clause.",
    "start": "2398570",
    "end": "2407220"
  },
  {
    "text": "And now we're\ntraversing through. Actually in this picture,\nit's left to right. Just turn your head.",
    "start": "2407220",
    "end": "2413420"
  },
  {
    "text": "And so now Mario\nis going to have to traverse this gadget from\nleft to right on this top part.",
    "start": "2413420",
    "end": "2419450"
  },
  {
    "text": "And if Mario comes in here and\nyou can barely jump over that. If there's a star, you\ncan collect the star",
    "start": "2419450",
    "end": "2425120"
  },
  {
    "text": "and then run through all of\nthese flaming bars of death. If there's no star, you can't.",
    "start": "2425120",
    "end": "2432030"
  },
  {
    "text": "You'll die if you\ntry to traverse. So in order to be able to\ntraverse all these clauses,",
    "start": "2432030",
    "end": "2438530"
  },
  {
    "text": "they must all be true. And them all being true is the\nsame is their AND being true.",
    "start": "2438530",
    "end": "2444180"
  },
  {
    "text": "So you will be able to survive\nthrough all these clauses if and only if this formula\nhas a satisfying assignment.",
    "start": "2444180",
    "end": "2451403"
  },
  {
    "text": "The satisfying\nassignment would be given to you by the level play.",
    "start": "2451403",
    "end": "2457990"
  },
  {
    "text": "The choices that Mario\nmakes in this gadget will tell you\nwhether each variable should be true or false.",
    "start": "2457990",
    "end": "2465310"
  },
  {
    "text": "So to elaborate just\na little bit more in general, when you have\na reduction like this,",
    "start": "2465310",
    "end": "2470600"
  },
  {
    "text": "to prove that it actually works,\nyou need to check two things. You need to check\nthat if there is a way",
    "start": "2470600",
    "end": "2475690"
  },
  {
    "text": "to satisfy this\nformula, then there is a way to play this level. And then conversely you need\nto show that if there's a way",
    "start": "2475690",
    "end": "2481717"
  },
  {
    "text": "to play this level,\nthen the formula has a satisfying assignment. So for that latter\npart, in order",
    "start": "2481717",
    "end": "2488980"
  },
  {
    "text": "to convert a level play into\na satisfying assignment, you just check which way Mario\nfalls in each of these gadgets,",
    "start": "2488980",
    "end": "2494020"
  },
  {
    "text": "left or right. That tells you the\nvariable assignment. And because of the\nway the clauses work, you'll only be able to\nfinish the level if there",
    "start": "2494020",
    "end": "2501200"
  },
  {
    "text": "was at least one star here. And stars run out\nafter some time. So you can barely make it\nthrough all the flaming bars",
    "start": "2501200",
    "end": "2508530"
  },
  {
    "text": "of death. Then you get to the next clause. You need another\nstar for each one. Conversely, if there is\na satisfying assignment,",
    "start": "2508530",
    "end": "2516300"
  },
  {
    "text": "you can actually play\nthrough the level, you just make these\nchoices according to what the satisfying assignment is. So either way it's equivalent.",
    "start": "2516300",
    "end": "2523329"
  },
  {
    "text": "We always get a yes or\nno answer here whenever we get a corresponding yes or\nno answer to the 3SAT process.",
    "start": "2523330",
    "end": "2531460"
  },
  {
    "text": "You also need to check that this\nreduction is polynomial size. It can be computed\nin polynomial time.",
    "start": "2531460",
    "end": "2537690"
  },
  {
    "text": "So there's an issue. Given this thing, you have\nto lay this out in a grid and draw all these wires.",
    "start": "2537690",
    "end": "2543780"
  },
  {
    "text": "And there's one\nproblem here, which is, these wires cross each other.",
    "start": "2543780",
    "end": "2551010"
  },
  {
    "text": "And that's a little\nawkward, because these wires are basically just long tunnels\nfor Mario to walk through.",
    "start": "2551010",
    "end": "2556660"
  },
  {
    "text": "But what does it mean\nto have a crossing wire? Really, if Mario's\ncoming this way, I don't want them to\nbe able to go up here.",
    "start": "2556660",
    "end": "2564630"
  },
  {
    "text": "He has to go straight. Otherwise this\nreduction won't work. So I need what's called\na crossover gadget.",
    "start": "2564630",
    "end": "2570799"
  },
  {
    "text": "And everywhere here I have a\ncrossing, I have a crossover.",
    "start": "2570800",
    "end": "2576940"
  },
  {
    "text": "And this gadget has\nto guarantee that I can go through one\nway or the other way, but there's no leakage from\none path to the other path.",
    "start": "2576940",
    "end": "2584859"
  },
  {
    "text": "Actually, if I first\ntraverse through here, and then I traverse through\nhere, it's OK if I leak back.",
    "start": "2584860",
    "end": "2590950"
  },
  {
    "text": "Because once I visit a\nwire, it's kind of done. But I can't have leakage if\nonly one of them is traversed.",
    "start": "2590950",
    "end": "2597430"
  },
  {
    "text": "So this is the last gadget, the\nmost complicated of them all.",
    "start": "2597430",
    "end": "2603569"
  },
  {
    "text": "So this took a\nwhile to construct, as you might imagine. ",
    "start": "2603570",
    "end": "2608710"
  },
  {
    "text": "So this is what we call a\nunidirectional crossover. You can either go from left to\nright or from bottom to top,",
    "start": "2608710",
    "end": "2618690"
  },
  {
    "text": "but you cannot go from bottom to\nright or bottom to left or left to bottom, that kind of thing.",
    "start": "2618690",
    "end": "2624480"
  },
  {
    "text": "So I'm told that\nMario is only going to enter from here to here,\nbecause all of these wires, I can make one way wires.",
    "start": "2624480",
    "end": "2630010"
  },
  {
    "text": "I only have to think about\ngoing in a particular direction. I can have falls to\nforce Mario to only go",
    "start": "2630010",
    "end": "2635619"
  },
  {
    "text": "one way along these wires. And so let me show you\nthe valid traversals.",
    "start": "2635620",
    "end": "2641790"
  },
  {
    "text": "Maybe the simplest\none is from here. So let's say Mario\ncomes in here, falls. So I can't backtrack,\ncan jump up here.",
    "start": "2641790",
    "end": "2648480"
  },
  {
    "text": "And then if Mario's big,\nhe can break this block, break this block. But if he's big--",
    "start": "2648480",
    "end": "2655220"
  },
  {
    "text": "there should be a couple\nmore zig zags here. Let's try to run. You can crouch\nslide through here.",
    "start": "2655220",
    "end": "2661728"
  },
  {
    "text": "But then you'll sort\nof lose your momentum, and you won't be able\nto go through all these traversals as big Mario.",
    "start": "2661728",
    "end": "2667990"
  },
  {
    "text": "So you can break these blocks\nand then get up to the top and leave. Or, if big Mario comes\nfrom over this way,",
    "start": "2667990",
    "end": "2675520"
  },
  {
    "text": "you can first take a\ndamage, become small Mario. Then you can fit through\nthese wiggly blocks.",
    "start": "2675520",
    "end": "2682010"
  },
  {
    "text": "But you cannot break blocks\nanymore as small Mario. So once you've committed\nto going small,",
    "start": "2682010",
    "end": "2688230"
  },
  {
    "text": "you have to stay small,\nuntil you get to here. And then there's a\nmushroom in this block. So you can get big again, and\nthen you can break this block",
    "start": "2688230",
    "end": "2694860"
  },
  {
    "text": "and leave. But once you're big,\nyou can't backtrack because big Mario can't fit\nthrough these tiny tubes.",
    "start": "2694860",
    "end": "2700690"
  },
  {
    "text": "See it clear, right? So slight detail, which\nis at the beginning,",
    "start": "2700690",
    "end": "2707260"
  },
  {
    "text": "we need to make Mario big--\nso there's a little mushroom. I think they have three spots--",
    "start": "2707260",
    "end": "2713400"
  },
  {
    "text": "at the beginning. And also at the\nend, there has to be something like this that\nchecks that you actually",
    "start": "2713400",
    "end": "2718599"
  },
  {
    "text": "have a mushroom. So the only time you're\nallowed to take damage is briefly in this\ngadget you take damage.",
    "start": "2718600",
    "end": "2724232"
  },
  {
    "text": "If you tried to backtrack,\nyou would get stuck. There's a long fall here. And then you have\nto get the mushroom",
    "start": "2724232",
    "end": "2729820"
  },
  {
    "text": "so you can escape again. So at the end there's\nlike a mushroom check.",
    "start": "2729820",
    "end": "2739250"
  },
  {
    "text": "Make sure you have it. So most of the\ntime Mario is big. And just in these\nlittle crossovers",
    "start": "2739250",
    "end": "2744260"
  },
  {
    "text": "you have to make\nthese decisions. This would make a\ngiant level, but it is polynomial size, probably\nquadratic or something.",
    "start": "2744260",
    "end": "2754650"
  },
  {
    "text": "Therefore Super Mario\nBrothers is NP-hard.  So if you want more\nfun examples like this,",
    "start": "2754650",
    "end": "2761420"
  },
  {
    "text": "you should check out 6.890, the\nclass I taught last semester, which has online video lectures,\nsoon to be on OpenCourseWare.",
    "start": "2761420",
    "end": "2768099"
  },
  {
    "text": "So you can play with that. Any questions about Mario?",
    "start": "2768100",
    "end": "2774310"
  },
  {
    "text": " All right, I hope you all play. ",
    "start": "2774310",
    "end": "2787380"
  },
  {
    "text": "So the next topic is\na problem you probably haven't heard about, three\ndimensional matching.",
    "start": "2787380",
    "end": "2793410"
  },
  {
    "start": "2793410",
    "end": "2803880"
  },
  {
    "text": "This is a kind of a\ngraph theory problem. We're going to call\nit 3DM for short.",
    "start": "2803880",
    "end": "2810590"
  },
  {
    "text": "And you've seen matching\nproblems based on flow. Matching problems are usually\nabout pairs of things.",
    "start": "2810590",
    "end": "2816029"
  },
  {
    "text": "You're pairing them\nup, which you might call two dimensional matching. That can be solved\nin polynomial time.",
    "start": "2816030",
    "end": "2821700"
  },
  {
    "text": "But if you change two to three\nand you're tripling things up, then suddenly the problem\nbecomes NP-complete.",
    "start": "2821700",
    "end": "2828420"
  },
  {
    "text": "So it's a useful starting\npoint, similar to 3SAT. ",
    "start": "2828420",
    "end": "2840090"
  },
  {
    "text": "So you're given a\nset X of elements,",
    "start": "2840090",
    "end": "2848250"
  },
  {
    "text": "a set Y of elements,\na set Z of elements. None of them are shared. But more importantly, you\nare given a bunch of triples.",
    "start": "2848250",
    "end": "2857020"
  },
  {
    "text": "These are the allowable triples. So we'll call the set\nof allowable triples T.",
    "start": "2857020",
    "end": "2864790"
  },
  {
    "text": "And so we're looking\nat the cross product. This is the set of all triples\nX, Y, and Z, or X is in X,",
    "start": "2864790",
    "end": "2870890"
  },
  {
    "text": "Y is in Y, and Z is in Z. But\nnot all triples are allowed. Only some subset of\ntriples is allowed.",
    "start": "2870890",
    "end": "2878210"
  },
  {
    "text": "And your goal is to choose\namong those subsets--",
    "start": "2878210",
    "end": "2884520"
  },
  {
    "text": "sorry, among those triples\na subset of the triples. So we're trying to\nchoose a subset S",
    "start": "2884520",
    "end": "2891450"
  },
  {
    "text": "of T such that every element--",
    "start": "2891450",
    "end": "2899070"
  },
  {
    "start": "2899070",
    "end": "2905200"
  },
  {
    "text": "so the things in X, Y,\nand Z are called elements. So I'm just taking\nsomebody in the union XYZ.",
    "start": "2905200",
    "end": "2913240"
  },
  {
    "text": "It should be in exactly\none triple s in big S.",
    "start": "2913240",
    "end": "2928225"
  },
  {
    "text": "This is a little weird, but\nyou can think of this problem as you have an alien\nrace with three genders--",
    "start": "2928225",
    "end": "2936140"
  },
  {
    "text": "male, female, neuter I guess. Those are the X, Y, and Z's. There's an equal number of each.",
    "start": "2936140",
    "end": "2942420"
  },
  {
    "text": "And every triple reports\nto you whether that is a compatible matching.",
    "start": "2942420",
    "end": "2948270"
  },
  {
    "text": "Who knows what they're\ndoing, all three of them? So you're told up front--",
    "start": "2948270",
    "end": "2953359"
  },
  {
    "text": "you take a survey. There's only n cubed\ndifferent triples. For each of them they\nsay, yeah, I'd do that.",
    "start": "2953360",
    "end": "2959992"
  },
  {
    "text": "So you were given that subset. And now your goal is to\npermanently triple up",
    "start": "2959992",
    "end": "2966400"
  },
  {
    "text": "these guys. And everybody wants to\nbe in exactly one triple. So it's a monogamous\nrace, imagine.",
    "start": "2966400",
    "end": "2974859"
  },
  {
    "text": "So everybody wants to be put\nin one triple, but only one triple. And the question is,\nis this possible?",
    "start": "2974860",
    "end": "2980900"
  },
  {
    "text": "This is three\ndimensional matching. Certainly not always going to be\npossible, but sometimes it is. If it is, you want\nto answer yes.",
    "start": "2980900",
    "end": "2986810"
  },
  {
    "text": "If it's not possible,\nyou want to answer no. This problem is NP-complete.",
    "start": "2986810",
    "end": "2992180"
  },
  {
    "text": "Why is it in NP? Because I can basically guess\nwhich elements of T are in S.",
    "start": "2992180",
    "end": "2998140"
  },
  {
    "text": "There's only at most\nn cubed of them. So for each one, it\nis guess yes or no, is that element of T in S?",
    "start": "2998140",
    "end": "3004310"
  },
  {
    "text": "And then I check whether this\ncoverage constraint holds. So it's very easy to\nprove this is in NP.",
    "start": "3004310",
    "end": "3009617"
  },
  {
    "text": " The challenge is to\nprove that it's NP-hard.",
    "start": "3009617",
    "end": "3015940"
  },
  {
    "text": "And we're going to do that,\nagain, by reducing from 3SAT. ",
    "start": "3015940",
    "end": "3032510"
  },
  {
    "text": "So we're going to make\na reduction from 3SAT to three dimensional matching.",
    "start": "3032510",
    "end": "3038849"
  },
  {
    "text": "Direction is important. Always reduce from the\nthing you know is hard and reduce to the thing\nyou don't know is hard.",
    "start": "3038850",
    "end": "3045230"
  },
  {
    "text": "So again, we're given a formula. And we want to\nconvert that formula into an equivalent three\ndimensional matching input.",
    "start": "3045230",
    "end": "3053670"
  },
  {
    "text": "So the formula has\nvariables and clauses. For each variable,\nwe're going to build a gadget that looks like this.",
    "start": "3053670",
    "end": "3061777"
  },
  {
    "text": "And for each clause we're\ngoing to build a gadget. So here's what they look like. If we have a variable x1,\nwe're going to convert that",
    "start": "3061777",
    "end": "3073730"
  },
  {
    "text": "into this picture. ",
    "start": "3073730",
    "end": "3090490"
  },
  {
    "text": "Stay monochromatic for now. ",
    "start": "3090490",
    "end": "3096660"
  },
  {
    "text": "Looks pretty crazy at the\nmoment, but it's not so crazy. ",
    "start": "3096660",
    "end": "3116510"
  },
  {
    "text": "This is not supposed\nto be obvious. You have to think for a while. It's a puzzle to figure\nout this kind of thing.",
    "start": "3116510",
    "end": "3123310"
  },
  {
    "text": "But I call this thing a variable\ngadget because locally--",
    "start": "3123310",
    "end": "3128610"
  },
  {
    "text": "so there's basically a\nwheel in the center here. And then there's\nthese extra dots",
    "start": "3128610",
    "end": "3133740"
  },
  {
    "text": "for every pair of dots,\nconsecutive pairs of dots in a wheel. And what I've drawn is the set\nof triples that are allowed.",
    "start": "3133740",
    "end": "3139960"
  },
  {
    "text": "There's tons of other\ntriples which are forbidden. The triples that are\nin T are the ones that I draw as little triangles.",
    "start": "3139960",
    "end": "3147490"
  },
  {
    "text": "And two color them because\nthere are exactly two ways to solve this gadget locally. Now these dots are going to\nbe connected to other gadgets.",
    "start": "3147490",
    "end": "3155310"
  },
  {
    "text": "But these dots only exist\nin this gadget, which means they've got to be covered.",
    "start": "3155310",
    "end": "3160490"
  },
  {
    "text": "They've got to be\ncovered exactly once. So either you choose\nthe blue triangles, or you choose the red triangles.",
    "start": "3160490",
    "end": "3167050"
  },
  {
    "text": "Each of them will exactly\ncover each of these guys once. You cannot mix and\nmatch red and blue,",
    "start": "3167050",
    "end": "3173890"
  },
  {
    "text": "because you either get overlap\nif you choose two guys that share a point, or\nyou'd miss one.",
    "start": "3173890",
    "end": "3179250"
  },
  {
    "text": "If I choose like this\nblue and this red, then I can't cover this\npoint because both of these",
    "start": "3179250",
    "end": "3184550"
  },
  {
    "text": "would overlap those two. And over here you have to\nchoose disjoint triples. They can't overlap at all.",
    "start": "3184550",
    "end": "3190590"
  },
  {
    "text": "And everybody has\nto get covered. So just given those\nconstraints, locally you",
    "start": "3190590",
    "end": "3195640"
  },
  {
    "text": "can see you have to\nchoose red or blue. Guess what? One of them is true,\nthe other one is false.",
    "start": "3195640",
    "end": "3201799"
  },
  {
    "text": "Let's say that red is\ntrue and blue is false. In general, when you're trying\nto build a variable gadget,",
    "start": "3201800",
    "end": "3207830"
  },
  {
    "text": "you build something\nthat has exactly two solutions, one representing\ntrue, one representing false.",
    "start": "3207830",
    "end": "3213220"
  },
  {
    "text": "Now how big do I\nmake this wheel? Big enough.",
    "start": "3213220",
    "end": "3219800"
  },
  {
    "text": "You could make it as big\nas the number of clauses. I'm going to make\nit into two and x1.",
    "start": "3219800",
    "end": "3226890"
  },
  {
    "text": "So wheel-- and this number\nis the number of occurrences",
    "start": "3226890",
    "end": "3239109"
  },
  {
    "text": "of x1 in the formula. So this is the number of clauses\nthat contain either xi or xi",
    "start": "3239110",
    "end": "3246900"
  },
  {
    "text": "bar. That's in xi. I'm going to double that. Because what I get over\nhere is basically xi",
    "start": "3246900",
    "end": "3254960"
  },
  {
    "text": "being true for those guys.",
    "start": "3254960",
    "end": "3261540"
  },
  {
    "text": "Actually, yeah,\nthat's actually right. It looks backwards.",
    "start": "3261540",
    "end": "3267220"
  },
  {
    "text": "And false for these guys.  One way or the other,\nwe'll figure it out.",
    "start": "3267220",
    "end": "3275380"
  },
  {
    "text": "So in order for xi to appear\nin, say, five different clauses,",
    "start": "3275380",
    "end": "3280799"
  },
  {
    "text": "I want five of the true things\nand five of the false things. And so I need to double\nin order to get--",
    "start": "3280800",
    "end": "3289030"
  },
  {
    "text": "potentially I have twice\nas many as I actually need, but this way I'm guaranteed\nto have false or true, whichever I need.",
    "start": "3289030",
    "end": "3295830"
  },
  {
    "text": "In reality I have\nsome true occurrences. I have some false occurrences,\nsome x1's, some x1 bars.",
    "start": "3295830",
    "end": "3301210"
  },
  {
    "text": "This will guarantee that I have\nenough of these free points",
    "start": "3301210",
    "end": "3306599"
  },
  {
    "text": "to connect into\nmy clause gadgets. How do I do a clause gadget? It's actually really easy.",
    "start": "3306600",
    "end": "3312442"
  },
  {
    "text": " So these would be pretty\nboring by themselves.",
    "start": "3312442",
    "end": "3318770"
  },
  {
    "start": "3318770",
    "end": "3325590"
  },
  {
    "text": "So a clause always\nlooks like this. Maybe there's some negations. ",
    "start": "3325590",
    "end": "3330859"
  },
  {
    "text": "Yeah, let's do\nsomething like that. I'm going to convert it\ninto a very simple picture.",
    "start": "3330860",
    "end": "3336795"
  },
  {
    "start": "3336795",
    "end": "3343809"
  },
  {
    "text": "It's going to be xi dot,\nand xj bar dot, and xk dot.",
    "start": "3343810",
    "end": "3350700"
  },
  {
    "text": "And then-- well maybe I'll\nstick to these colors.",
    "start": "3350700",
    "end": "3356363"
  },
  {
    "start": "3356363",
    "end": "3362400"
  },
  {
    "text": "Again, these two points only\nappear in this clause gadget. These dots are\nactually these dots.",
    "start": "3362400",
    "end": "3370410"
  },
  {
    "text": "So there's one of\nthese pictures for x1. There's another one for x2, x3. And so xi has one\nof these wheels.",
    "start": "3370410",
    "end": "3376770"
  },
  {
    "text": "I want this dot to be one\nof these dots of the wheel. And then I want\nthis dot to be one",
    "start": "3376770",
    "end": "3382900"
  },
  {
    "text": "of the dots in the xj wheel\nwith the false setting, one of the red dots. I want this one to be xk\ntrue setting in the xk wheel.",
    "start": "3382900",
    "end": "3394980"
  },
  {
    "text": "So these things are\nall connected together in a complicated pattern. But the point is that\nwithin this gadget,",
    "start": "3394980",
    "end": "3400110"
  },
  {
    "text": "I only have three\nallowed triples. And these points only\nappear in this gadget, which means they have to\nbe covered in this gadget.",
    "start": "3400110",
    "end": "3407733"
  },
  {
    "text": "They can be covered\nby this triple or this triple or this triple. But once you choose one,\nyou can't choose the others.",
    "start": "3407733",
    "end": "3414480"
  },
  {
    "text": "What this means is if\nI set x1 to be true,",
    "start": "3414480",
    "end": "3419540"
  },
  {
    "text": "it leaves behind these\npoints marked true. If I choose the red\nthings, then it's",
    "start": "3419540",
    "end": "3425640"
  },
  {
    "text": "the blue points that\nare left behind. Leaving points\nbehind in this case is going to be good,\nbecause this clause,",
    "start": "3425640",
    "end": "3431772"
  },
  {
    "text": "in order to satisfy\nthis clause, in order to choose one of these three\ntriples, at least one of these",
    "start": "3431772",
    "end": "3437330"
  },
  {
    "text": "must be left behind\nby the wheel.",
    "start": "3437330",
    "end": "3442500"
  },
  {
    "text": "If all of these are\ncovered by their wheels, then there's no way. I can't choose\nany of these guys.",
    "start": "3442500",
    "end": "3447750"
  },
  {
    "text": "But if at least one of these\nis left behind by the wheel, then I can choose the\ncorresponding triple",
    "start": "3447750",
    "end": "3453780"
  },
  {
    "text": "and cover these points. So I'll be able to cover\nthese points if and only if at least one\nof these is true.",
    "start": "3453780",
    "end": "3459946"
  },
  {
    "text": "And that's a clause. That's what a clause is\nsupposed to do in 3SAT. If at least one\nof these is true,",
    "start": "3459947",
    "end": "3465200"
  },
  {
    "text": "then the clause is satisfied. I need all the clauses\nto be satisfied because I need to cover\nof these points for all",
    "start": "3465200",
    "end": "3470720"
  },
  {
    "text": "the instances of these clauses. And that's how it works. Now, slight catch.",
    "start": "3470720",
    "end": "3477540"
  },
  {
    "text": "If you do this,\nnot all the points will be covered, even so. ",
    "start": "3477540",
    "end": "3484650"
  },
  {
    "text": "Maybe all of these are true. And so they're all left behind. And I can only cover one\nof them with the clause.",
    "start": "3484650",
    "end": "3490579"
  },
  {
    "text": "It's a little messy. You need another gadget, which\nis called garbage collection.",
    "start": "3490580",
    "end": "3497710"
  },
  {
    "start": "3497710",
    "end": "3503910"
  },
  {
    "text": "I don't want to spend\ntoo much time on it. But you have two dots.",
    "start": "3503910",
    "end": "3510900"
  },
  {
    "text": "And then you have\nevery single xi--",
    "start": "3510900",
    "end": "3520500"
  },
  {
    "text": "these dots, all\ntrue and false dots.",
    "start": "3520500",
    "end": "3527490"
  },
  {
    "text": "And you're going to\nhave this triple, and this triple, and this\ntriple, and this triple,",
    "start": "3527490",
    "end": "3532690"
  },
  {
    "text": "and so on. It looks an awful\nlot like a clause. But this is like a clause\nthat's connected to everybody",
    "start": "3532690",
    "end": "3539190"
  },
  {
    "text": "in the entire universe. And you repeat this\nthe appropriate number of times, which is\nsomething like sum of nx",
    "start": "3539190",
    "end": "3549380"
  },
  {
    "text": "minus the number of clauses.  OK, why?",
    "start": "3549380",
    "end": "3554850"
  },
  {
    "text": "Because if you\nlook at a wheel, it has size 2 times nx\nfor a variable x.",
    "start": "3554850",
    "end": "3561779"
  },
  {
    "text": "And half of the points\nwill be left uncovered. So that means nx of\nthem will be uncovered.",
    "start": "3561780",
    "end": "3569630"
  },
  {
    "text": "Then the clause, if everything\nworks out correctly, the clause will cover\nexactly one of those points.",
    "start": "3569630",
    "end": "3577710"
  },
  {
    "text": "So for each clause we\ncover one of the points. That means this\ndifference is exactly how",
    "start": "3577710",
    "end": "3583270"
  },
  {
    "text": "many points are left uncovered. And so we make this gadget\nexactly that many times.",
    "start": "3583270",
    "end": "3588720"
  },
  {
    "text": "And it's free to cover anybody. So whatever is left over,\nthis garbage collector",
    "start": "3588720",
    "end": "3593860"
  },
  {
    "text": "will clean up. And if we use exactly\nthe right number of them, this garbage collector won't\nrun out of things to collect.",
    "start": "3593860",
    "end": "3601170"
  },
  {
    "text": "So this makes the proof messy. But I want to move on to\nsomewhat simpler proofs",
    "start": "3601170",
    "end": "3607712"
  },
  {
    "text": "and for other problems. Yeah? AUDIENCE: Real quick,\nwhat about the t or f points that we didn't cover\nbecause we didn't actually",
    "start": "3607712",
    "end": "3614692"
  },
  {
    "text": "need that many? ERIC DEMAINE: Right. So this also includes the points\nthat weren't even connected to clauses.",
    "start": "3614692",
    "end": "3620950"
  },
  {
    "text": "I think this is the right\nnumber no matter what, because this is counting the\ntotal number of uncovered guys,",
    "start": "3620950",
    "end": "3626180"
  },
  {
    "text": "whether they're connected\nto clauses or not. Each clause will, in\na satisfied situation, it will cover exactly\none of those points.",
    "start": "3626180",
    "end": "3633339"
  },
  {
    "text": "The ones that are\nconnected to the clauses won't be covered at\nall, but that will still be in this difference. So yeah, it's good\nto check that.",
    "start": "3633340",
    "end": "3639750"
  },
  {
    "text": "The first time I wrote this\ndown I forgot about those points and got it wrong. But I think this is\nright, hopefully.",
    "start": "3639750",
    "end": "3645930"
  },
  {
    "text": "I did not come up\nwith this proof. Garey and Johnson I think-- or no. This is-- I forgot.",
    "start": "3645930",
    "end": "3652906"
  },
  {
    "text": "Yeah, this is a Garey\nand Johnson proof. There's a cool book from the\nlate '70s by Garey and Johnson,",
    "start": "3652906",
    "end": "3658609"
  },
  {
    "text": "does a lot of NP-completeness,\nif you're curious.",
    "start": "3658610",
    "end": "3664320"
  },
  {
    "text": "All right, so\nhopefully you believe three dimensional\nmatching is hard. Now I'm going to use it to prove\nthat some very different types",
    "start": "3664320",
    "end": "3670520"
  },
  {
    "text": "of problems are hard. This is a kind of\ngraph theory problem. You'll see more graph theory\nproblems in recitation.",
    "start": "3670520",
    "end": "3678070"
  },
  {
    "text": "This one, I can\nerase 3SAT and Mario. So in the world, most\nNP-hardness proofs",
    "start": "3678070",
    "end": "3687660"
  },
  {
    "text": "are reductions from 3SAT,\nor some variation of 3SAT. In some sense, you can think\nof three dimensional matching",
    "start": "3687660",
    "end": "3694450"
  },
  {
    "text": "as kind of like a\nversion of 3SAT, but it's a little\nbit more stringent.",
    "start": "3694450",
    "end": "3699840"
  },
  {
    "text": "And that stringency helps\nus to do other reductions.",
    "start": "3699840",
    "end": "3704980"
  },
  {
    "text": "So here's another\nproblem where we'll reduce from three\ndimensional matching.",
    "start": "3704980",
    "end": "3711710"
  },
  {
    "text": "It's called subset sum. ",
    "start": "3711710",
    "end": "3720220"
  },
  {
    "text": "So you're given n\nintegers, a1 up to an.",
    "start": "3720220",
    "end": "3729830"
  },
  {
    "text": "And you're given a target\nsum, also an integer.",
    "start": "3729830",
    "end": "3735090"
  },
  {
    "text": "Call it t. What you'd like to know is, is\nthere a subset of the integers",
    "start": "3735090",
    "end": "3741160"
  },
  {
    "text": "that adds up to that target. ",
    "start": "3741160",
    "end": "3754380"
  },
  {
    "text": "Can you choose a sum of\nthe integers so that-- I'll write it the\nsum of S. But what",
    "start": "3754380",
    "end": "3760100"
  },
  {
    "text": "this means is the sum over the\nai's that are in S of the value",
    "start": "3760100",
    "end": "3766220"
  },
  {
    "text": "ai. I want that to equal t.",
    "start": "3766220",
    "end": "3771540"
  },
  {
    "text": "So this is the definition. This is the constraint. So I give you a\nbunch of numbers.",
    "start": "3771540",
    "end": "3776580"
  },
  {
    "text": "Do any subset of\nthem add up to t? That's all this is asking. This problem is NP-hard.",
    "start": "3776580",
    "end": "3782740"
  },
  {
    "text": "It's NP-complete, in fact, when\nyou can guess which integers should go in the subset,\nand then add them up",
    "start": "3782740",
    "end": "3788140"
  },
  {
    "text": "to see if you got it right.  It is NP-hard, but\nit's something special",
    "start": "3788140",
    "end": "3794320"
  },
  {
    "text": "we call weakly NP-hard. ",
    "start": "3794320",
    "end": "3802430"
  },
  {
    "text": "And why don't I come back to the\ndefinition of that in a moment?",
    "start": "3802430",
    "end": "3808687"
  },
  {
    "text": "Let me first show you the proof. It's actually really easy\nnow that we have this three dimensional matching problem.",
    "start": "3808687",
    "end": "3817120"
  },
  {
    "text": "It's pretty cool. So these numbers are\ngoing to be huge.",
    "start": "3817120",
    "end": "3822530"
  },
  {
    "text": "What we're going to\nsay is, let's view--",
    "start": "3822530",
    "end": "3828190"
  },
  {
    "text": "so again, we're given a three\ndimensional matching instance. Get the directions, right? We're given a set of triples.",
    "start": "3828190",
    "end": "3834520"
  },
  {
    "text": "We want to solve this problem\nby reducing it to a subset sum. So we get to construct integers\nthat represent triples.",
    "start": "3834520",
    "end": "3844688"
  },
  {
    "text": "That's what we're going to do. So here we go. We get to choose a number.",
    "start": "3844688",
    "end": "3850560"
  },
  {
    "text": "So I'm going to think of\nthem in a particular base, b,",
    "start": "3850560",
    "end": "3856440"
  },
  {
    "text": "which is going to be 1\nplus the max of the mxi's.",
    "start": "3856440",
    "end": "3863420"
  },
  {
    "text": "So again, this is the number\nof occurrences of variable xi in a true or false form.",
    "start": "3863420",
    "end": "3868610"
  },
  {
    "text": "So I take the maximum occurrence\nof any variable, add 1. That's my base. It just has to be large enough.",
    "start": "3868610",
    "end": "3874170"
  },
  {
    "text": " And this is basically the\nentire reduction, is one line.",
    "start": "3874170",
    "end": "3883420"
  },
  {
    "text": "If I have three triples-- if I have a triple\nxi, xj, xk, I'm",
    "start": "3883420",
    "end": "3889940"
  },
  {
    "text": "going to convert that into a\nnumber that looks like this",
    "start": "3889940",
    "end": "3899010"
  },
  {
    "text": "where the one positions are-- I don't really know the order,\nbut they are i, j, and k.",
    "start": "3899010",
    "end": "3906650"
  },
  {
    "text": "Everything else is zero. And this is in\nbase b, not base 2. It's a little weird.",
    "start": "3906650",
    "end": "3912460"
  },
  {
    "text": "All my digits are 0 or\n1, but I'm in base b. And three of the digits are 1.",
    "start": "3912460",
    "end": "3918500"
  },
  {
    "text": "And the rest are zero. Why? Because of my target sum. Target sum is going\nto be 1111111111.",
    "start": "3918500",
    "end": "3928470"
  },
  {
    "text": "So this number,\nin algebra, you're write this as b to the i plus\nb to the j plus b to the k.",
    "start": "3928470",
    "end": "3936280"
  },
  {
    "text": "This you would write as the\nsum of b to the i for all i.",
    "start": "3936280",
    "end": "3943437"
  },
  {
    "text": "Do you see why this works? It's actually really simple. ",
    "start": "3943437",
    "end": "3951890"
  },
  {
    "text": "For this instance,\nmy goal is to choose a subset of these numbers\nthat add up to this number.",
    "start": "3951890",
    "end": "3957890"
  },
  {
    "text": "How could that possibly happen? Well, I've got to choose-- every time I choose\none of the numbers,",
    "start": "3957890",
    "end": "3963319"
  },
  {
    "text": "those three digits get\nset to 1 in my sum. If I ever have a collision,\nif I add two 1s together,",
    "start": "3963320",
    "end": "3970790"
  },
  {
    "text": "I'm going to get a 2. That's not good,\nbecause once I get a 2, I'll never be able\nto get back to a 1,",
    "start": "3970790",
    "end": "3976390"
  },
  {
    "text": "because my base is really big. This base is designed\nso that the total-- this",
    "start": "3976390",
    "end": "3982140"
  },
  {
    "text": "is the total number\nof colliding 1s. So we set it one\nlarger than that,",
    "start": "3982140",
    "end": "3987503"
  },
  {
    "text": "which means you'll never get\na carry when you're adding up in this base. That's why I set the base to\nbe something large, not base 2.",
    "start": "3987503",
    "end": "3994420"
  },
  {
    "text": "Base 2 might work, but\nthis is much safer. So what that means is for each\nof these 1s in the target sum,",
    "start": "3994420",
    "end": "4004540"
  },
  {
    "text": "I've got to find a\ntriple that has those 1s. And those triples can't overlap. So that means choosing a set\nof numbers that add up to this",
    "start": "4004540",
    "end": "4011360"
  },
  {
    "text": "is exactly the same as\nchoosing a set of triples that covers all of the elements.",
    "start": "4011360",
    "end": "4016970"
  },
  {
    "text": "Done, super easy once you\nhave the right problem.",
    "start": "4016970",
    "end": "4023150"
  },
  {
    "text": "OK, good. Now why do I call\nthis weekly NP-hard?",
    "start": "4023150",
    "end": "4028750"
  },
  {
    "text": "Because these numbers are giant. If I have n elements\nin X, Y, Z over there--",
    "start": "4028750",
    "end": "4038240"
  },
  {
    "text": "I guess here they're\ncalled xi, yk, zk. Sorry, maybe I should've\ncalled them that here.",
    "start": "4038240",
    "end": "4044490"
  },
  {
    "text": "Doesn't matter. If I have n of those elements\nin X union Y union Z,",
    "start": "4044490",
    "end": "4054119"
  },
  {
    "text": "the number of digits here is n. So the number of\ndigits in order n.",
    "start": "4054120",
    "end": "4066030"
  },
  {
    "text": "This is fine from an\nNP-completeness standpoint. This is polynomial size. The number of digits in my\nnumbers is a polynomial.",
    "start": "4066030",
    "end": "4075170"
  },
  {
    "text": "And this base is\nalso pretty small. So if you wrote\nit out in binary, it would also be polynomial. So just lost a log factor.",
    "start": "4075170",
    "end": "4081600"
  },
  {
    "text": "But the size of the numbers, the\nactual values of the numbers,",
    "start": "4081600",
    "end": "4090460"
  },
  {
    "text": "is exponential. ",
    "start": "4090460",
    "end": "4097350"
  },
  {
    "text": "With weak NP-hardness,\nthat's allowed. With strong NP-hardness,\nthat's forbidden.",
    "start": "4097350",
    "end": "4103920"
  },
  {
    "text": "In strong NP-hardness, you\nwant the values of the numbers to be polynomial. So in this case, the\nnumber of bits is small,",
    "start": "4103920",
    "end": "4110950"
  },
  {
    "text": "but the actual values\nare giant, because you have to exponentiate.",
    "start": "4110950",
    "end": "4116271"
  },
  {
    "text": "It would be cool. And this problem is\nonly weakly NP-hard. Maybe you actually know\na pseudo-polynomial time",
    "start": "4116271",
    "end": "4121699"
  },
  {
    "text": "algorithm for this. It's basically a knapsack. If these numbers have polynomial\nvalue, then you can basically,",
    "start": "4121700",
    "end": "4131660"
  },
  {
    "text": "in your subproblems in\ndynamic programming, you can write down\nthe number t and just",
    "start": "4131660",
    "end": "4137609"
  },
  {
    "text": "solve it for all values of t. And it's easy to solve\nit in polynomial time, polynomial in the\ninteger values.",
    "start": "4137609",
    "end": "4145301"
  },
  {
    "text": "So we call that\npseudo-polynomial, because it's not really polynomial. It's not polynomial in\nthe number of digits that you have to\nwrite down the number.",
    "start": "4145302",
    "end": "4151689"
  },
  {
    "text": "It's Polynomial in the values. Weak NP-hardness goes together\nwith pseudo-polynomial.",
    "start": "4151689",
    "end": "4158179"
  },
  {
    "text": "That's kind of a matching\nresult. Say look, pseudo-polynomial is\nthe best you can do. You can't hope for a\npolynomial because if you",
    "start": "4158180",
    "end": "4165520"
  },
  {
    "text": "let the numbers get huge, then\nthe problem is NP-complete. But if you force the numbers to\nbe small, this problem is easy.",
    "start": "4165520",
    "end": "4174028"
  },
  {
    "text": "So subset sum is a little\nfunny in that sense. ",
    "start": "4174029",
    "end": "4180130"
  },
  {
    "text": "Cool. ",
    "start": "4180130",
    "end": "4211400"
  },
  {
    "text": "Let me tell you about\nanother problem, partition. ",
    "start": "4211400",
    "end": "4219360"
  },
  {
    "text": "So partition is pretty\nmuch the same set up. I'm given n integers. ",
    "start": "4219360",
    "end": "4231880"
  },
  {
    "text": "Let's say they're positive. And I want to know,\nis there a subset--",
    "start": "4231880",
    "end": "4238650"
  },
  {
    "text": "I'm not given a target sum t. Target sum is basically forced. ",
    "start": "4238650",
    "end": "4250239"
  },
  {
    "text": "What I would like is the\nsum of all the values in S to equal the sum\nof all the values",
    "start": "4250240",
    "end": "4255949"
  },
  {
    "text": "not in S. That's A minus\nS, which in other words is going to be the sum of\nall values in A divided by 2.",
    "start": "4255950",
    "end": "4264790"
  },
  {
    "text": "So this is called partition\nbecause you're taking a set, you're splitting it into\ntwo halves of equal sum.",
    "start": "4264790",
    "end": "4271989"
  },
  {
    "text": "Every element has to go\nin one of the two halves. And they're called S and A minus\nS, like cuts in the flow stuff.",
    "start": "4271990",
    "end": "4279510"
  },
  {
    "text": "And you want those\ntwo halves to have exactly the same\nsum, which means they will be the sum divided by 2.",
    "start": "4279510",
    "end": "4284620"
  },
  {
    "text": "So that better be\neven, otherwise it's not going to be possible. So again, you want to\ndecide whether this",
    "start": "4284620",
    "end": "4290190"
  },
  {
    "text": "is possible or\nimpossible, yes or no. I claim this problem is\nalso weakly NP-complete,",
    "start": "4290190",
    "end": "4298200"
  },
  {
    "text": "and we can reduce from\nsubset sum to partition. This is a little interesting\nbecause partition is actually",
    "start": "4298200",
    "end": "4305350"
  },
  {
    "text": "a special case of subset sum. It is the case\nwhere t equals this.",
    "start": "4305350",
    "end": "4313500"
  },
  {
    "text": "Subset sum, you're trying to\nsolve it no matter what t is. t is a given input. So there's more\ninstances over here.",
    "start": "4313500",
    "end": "4320750"
  },
  {
    "text": "Some of them, some\nof these instances are the case where t\nequals the sum over 2. Those are partition instances.",
    "start": "4320750",
    "end": "4327010"
  },
  {
    "text": "So this is like a subset\nof the possible inputs as over there, which\nmeans this problem is easier than this one--",
    "start": "4327010",
    "end": "4333610"
  },
  {
    "text": "no harder anyway. In other words, I can reduce\npartition to subset sum.",
    "start": "4333610",
    "end": "4341580"
  },
  {
    "text": "I just compute this\nvalue and set that to t, and then leave the a's alone. That will reduce\npartition to subset sum.",
    "start": "4341580",
    "end": "4348350"
  },
  {
    "text": "But that's not the\ndirection I want. I want to reduce from subset\nsum, a problem I can prove is NP-complete, to\npartition, because I",
    "start": "4348350",
    "end": "4355360"
  },
  {
    "text": "want to prove that\npartition is NP-complete. So in this case, there's an easy\nreduction in both directions.",
    "start": "4355360",
    "end": "4362090"
  },
  {
    "text": "This direction is\na little harder. So reduction from subset sum.",
    "start": "4362090",
    "end": "4371410"
  },
  {
    "text": " So I'm given a bunch of ai's.",
    "start": "4371410",
    "end": "4377699"
  },
  {
    "text": "I'm not going to touch them. And I'm given a target sum t. And I basically want to make\nthat target sum into this half.",
    "start": "4377700",
    "end": "4384820"
  },
  {
    "text": "To do that, I'm going to\nadd two numbers to my set. So I'm going to let sigma\nbe the sum of the given a's.",
    "start": "4384820",
    "end": "4397660"
  },
  {
    "text": "And then I'm going to add-- so I'm given a1 through an. I'm going to add an plus 1,\nis going to be sigma plus t.",
    "start": "4397660",
    "end": "4410719"
  },
  {
    "text": "And I'm going to add an plus\n2 to be 2 sigma minus t.",
    "start": "4410720",
    "end": "4420822"
  },
  {
    "text": " Why?",
    "start": "4420822",
    "end": "4425989"
  },
  {
    "text": "So these are two\nbasically huge numbers. ",
    "start": "4425990",
    "end": "4431100"
  },
  {
    "text": "Because sigma is bigger than-- I mean, it's the sum\nof all the numbers, so it's bigger than all of them.",
    "start": "4431100",
    "end": "4436139"
  },
  {
    "text": "And so imagine for\na moment that I put these two in the same\nside of the partition.",
    "start": "4436140",
    "end": "4442020"
  },
  {
    "text": "I put them both in S\nor I put them both out of S. Their sum by\nthemselves is 3 sigma.",
    "start": "4442020",
    "end": "4449060"
  },
  {
    "text": "The t's cancel. Whereas all the other\nitems, their sum is sigma. So I'm host.",
    "start": "4449060",
    "end": "4455622"
  },
  {
    "text": "If I have 3 sigma on one\nside and sigma on the other, I'm not going to\nmake them equal. So in fact, these two elements\nhave to be on opposite sides.",
    "start": "4455622",
    "end": "4463670"
  },
  {
    "text": "So there's a side\nthat has sigma plus t. There's a side has\n2 sigma minus t.",
    "start": "4463670",
    "end": "4468877"
  },
  {
    "text": "And then there's all the other\nn items, and some of them are going to go to\nthis side, some of them are going to go to this side.",
    "start": "4468877",
    "end": "4475660"
  },
  {
    "text": "Their total value is sigma. Right now this is\nclose to sigma. This is close to 2 sigma.",
    "start": "4475660",
    "end": "4481539"
  },
  {
    "text": "So they have to kind\nof meet in the middle. In fact, what you'll have to do\nis add sigma minus t over here",
    "start": "4481540",
    "end": "4494540"
  },
  {
    "text": "and add t over here.",
    "start": "4494540",
    "end": "4501193"
  },
  {
    "text": "Think about it for a second. If I add sigma minus t,\nthis comes out to 2 sigma. If I add t to this, this\ncomes out to 2 sigma.",
    "start": "4501193",
    "end": "4507622"
  },
  {
    "text": "That would be good\nbecause they're equal. And notice that this\nis sigma minus t. This is t. Their sum is sigma.",
    "start": "4507622",
    "end": "4513770"
  },
  {
    "text": "So in fact, it has\nto be like this. You add something over here, and\nsigma minus something over here",
    "start": "4513770",
    "end": "4520210"
  },
  {
    "text": "for all the other ai's. And the something has to be t\nin order for these two values to equalize.",
    "start": "4520210",
    "end": "4526390"
  },
  {
    "text": "So in order to solve this\nslightly larger partition problem, you have to actually\nsolve the subset sum problem",
    "start": "4526390",
    "end": "4533640"
  },
  {
    "text": "because you have to construct\na subset that adds up to t. t was an arbitrary given value.",
    "start": "4533640",
    "end": "4540260"
  },
  {
    "text": "So this is pretty nifty. We're adding some values so that\nthe new target sum is the 50/50",
    "start": "4540260",
    "end": "4547989"
  },
  {
    "text": "split when we're\ngiven some values that have an arbitrary target sum.",
    "start": "4547990",
    "end": "4555140"
  },
  {
    "text": "So partition is\nweakly NP-complete. Let me go to rectangle packing.",
    "start": "4555140",
    "end": "4563219"
  },
  {
    "start": "4563220",
    "end": "4587690"
  },
  {
    "text": "So rectangle packing-- I'm going to draw a picture. I give you a bunch of\nrectangles of varying sizes.",
    "start": "4587690",
    "end": "4594780"
  },
  {
    "text": "And I give you a\ntarget rectangle. Let's call it T.\nThese are the Ri's.",
    "start": "4594780",
    "end": "4602239"
  },
  {
    "text": "I want to put these\nrectangles into this picture",
    "start": "4602240",
    "end": "4608900"
  },
  {
    "text": "without any overlaps. Each of these rectangles\nhere corresponds to one",
    "start": "4608900",
    "end": "4614630"
  },
  {
    "text": "of the rectangles over here. So I'll tell you that the sum\nof the areas of these rectangles",
    "start": "4614630",
    "end": "4621179"
  },
  {
    "text": "is equal to the area of T.\nAnd the question is, can you pack those rectangles into\nT without any overlaps,",
    "start": "4621180",
    "end": "4628080"
  },
  {
    "text": "and therefore without any gaps,\nbecause the areas are exactly the same. I claim this problem\nis weakly NP-hard--",
    "start": "4628080",
    "end": "4636000"
  },
  {
    "text": "I guess NP-complete by\nreduction from partition.",
    "start": "4636000",
    "end": "4641065"
  },
  {
    "text": " This will be super easy\nif you followed what",
    "start": "4641065",
    "end": "4651800"
  },
  {
    "text": "the definition of partition is. We're given some integers ai. And we're going to take each of\nthem and convert them into a,",
    "start": "4651800",
    "end": "4661100"
  },
  {
    "text": "let's say, 1 by 3ai rectangle.",
    "start": "4661100",
    "end": "4666330"
  },
  {
    "text": "Three is to avoid some\nrotation we'll see. And then we're also\ngiven the targets. Oh no, target sum is given.",
    "start": "4666330",
    "end": "4673330"
  },
  {
    "text": "Target sum is the sum over 2. But anyway, we're going to build\nour target rectangle to be--",
    "start": "4673330",
    "end": "4680151"
  },
  {
    "text": " it's actually going\nto be really big.",
    "start": "4680151",
    "end": "4686970"
  },
  {
    "text": "It's going to be 2 by 3 times t.",
    "start": "4686970",
    "end": "4693820"
  },
  {
    "text": "So this is that thing. So this is 3/2 sum of the a's.",
    "start": "4693820",
    "end": "4701580"
  },
  {
    "text": "OK, that's about it. In order to pack these\nrectangles into here,",
    "start": "4701580",
    "end": "4706600"
  },
  {
    "text": "because each of them\nis at least three long, you cannot pack them vertically. They have to be horizontal.",
    "start": "4706600",
    "end": "4711790"
  },
  {
    "text": "So in fact what your\npacking will look like is they'll be the top half\nand the bottom half.",
    "start": "4711790",
    "end": "4718070"
  },
  {
    "text": "And the top half, the total\nlength of those rectangles has to add up to 3/2 sum of A.\nEverything was scaled up by 3,",
    "start": "4718070",
    "end": "4725940"
  },
  {
    "text": "so that's 1/2 of A on\nthe top and the bottom. That's a partition. In order to pack the\nrectangles into here,",
    "start": "4725940",
    "end": "4732620"
  },
  {
    "text": "you have to solve the partition\nproblem, and vice versa. Easy. OK, let me show you one\nmore thing, jigsaw puzzles.",
    "start": "4732620",
    "end": "4751815"
  },
  {
    "text": " This is not the jigsaw puzzles\nyou grew up on, somewhat more",
    "start": "4751815",
    "end": "4761360"
  },
  {
    "text": "generalized. So a piece is going to\nlook something like this.",
    "start": "4761360",
    "end": "4767286"
  },
  {
    "text": " I drew them\nintentionally different.",
    "start": "4767286",
    "end": "4773860"
  },
  {
    "text": "So on each, you\nhave a unit square. Some of the sides can be flat.",
    "start": "4773860",
    "end": "4779619"
  },
  {
    "text": "Some of them can be tabs. Some of them can be pockets. Each tab and pocket has a shape.",
    "start": "4779620",
    "end": "4785000"
  },
  {
    "text": "And they're not in a perfect\nmatching with each other. So there could be\nseven of these tabs",
    "start": "4785000",
    "end": "4790949"
  },
  {
    "text": "and seven of these pockets,\nall the same shape. This is what you might call\nambiguous jigsaw puzzles. Plus, there is no\nimage on the piece,",
    "start": "4790950",
    "end": "4798240"
  },
  {
    "text": "so this is like\nhardcore jigsaw puzzles. This is NP-complete.",
    "start": "4798240",
    "end": "4805100"
  },
  {
    "text": "And what I'd like to do\nis to simulate a rectangle",
    "start": "4805100",
    "end": "4810860"
  },
  {
    "text": "with a bunch of jigsaw pieces. So it would look\nsomething like this. ",
    "start": "4810860",
    "end": "4824080"
  },
  {
    "text": "If I have a 1 buy\nsomething rectangle, I'm going to simulate it\nwith that same something,",
    "start": "4824080",
    "end": "4831370"
  },
  {
    "text": "little jigsaw pieces. And I'm going to make these\nshapes only match each other.",
    "start": "4831370",
    "end": "4838290"
  },
  {
    "text": "And so for every\nrectangle, they're going to have a different shape.",
    "start": "4838290",
    "end": "4843920"
  },
  {
    "text": "This one will be squares. At that point I ran out of\nshapes I can easily draw, but you get the idea.",
    "start": "4843920",
    "end": "4848969"
  },
  {
    "text": "Each rectangle has\na different shape. And so these have to\nmatch to each other. You can't mix the\ntiles, which means you",
    "start": "4848970",
    "end": "4855000"
  },
  {
    "text": "have to build this rectangle. You have to build\nthis rectangle. And then if the jigsaw\nproblem is, can you",
    "start": "4855000",
    "end": "4860849"
  },
  {
    "text": "fit these into a\ngiven rectangle, then you get rectangle packing. But this is not a\nvalid reduction.",
    "start": "4860850",
    "end": "4867185"
  },
  {
    "text": " You can't reduce from partition.",
    "start": "4867185",
    "end": "4875050"
  },
  {
    "text": " Why?",
    "start": "4875050",
    "end": "4880150"
  },
  {
    "text": "Because these numbers are huge.",
    "start": "4880150",
    "end": "4886040"
  },
  {
    "text": "Remember, the values of\nthe numbers in my partition instance are exponential. So if I have a value ai and it's\nexponential in my problem size,",
    "start": "4886040",
    "end": "4894969"
  },
  {
    "text": "and I tried to make\nai have little tiles, that means a number\nof jigsaw pieces",
    "start": "4894970",
    "end": "4900039"
  },
  {
    "text": "will be exponential in n. That's not good. That's not allowed.",
    "start": "4900040",
    "end": "4905910"
  },
  {
    "text": "This is why weak\nNP-hardness is annoying. So instead, we need a\nstrong NP-hard problem.",
    "start": "4905910",
    "end": "4914550"
  },
  {
    "start": "4914550",
    "end": "4920020"
  },
  {
    "text": "This is a problem\nthat's NP-hard even when the numbers are polynomial\nin value, not just in size.",
    "start": "4920020",
    "end": "4926090"
  },
  {
    "text": "And it's called 4-partition. ",
    "start": "4926090",
    "end": "4931670"
  },
  {
    "text": "4-partition, you're given\nn integers, as usual.",
    "start": "4931670",
    "end": "4936969"
  },
  {
    "text": " Say set is A. And you want\nto split those integers",
    "start": "4936970",
    "end": "4948110"
  },
  {
    "text": "into n over 4 quadruples\nof the same sum.",
    "start": "4948110",
    "end": "4959989"
  },
  {
    "start": "4959990",
    "end": "4966860"
  },
  {
    "text": "So this would be the sum of\nA divided by n over four. That's your target sum.",
    "start": "4966860",
    "end": "4973239"
  },
  {
    "text": "So before we had to\nsplit into two parts that had the same sum. That was partition. Now we have to split\ninto n over 4 parts.",
    "start": "4973240",
    "end": "4980330"
  },
  {
    "text": "Each part will have exactly\nfour numbers, four integers. And they should all\nhave the same sum.",
    "start": "4980330",
    "end": "4986840"
  },
  {
    "text": "This problem is hard\neven when the integers have polynomial value.",
    "start": "4986840",
    "end": "4992345"
  },
  {
    "text": "So the values are at most\nsome polynomial in n.",
    "start": "4992345",
    "end": "5000765"
  },
  {
    "text": "I won't prove it here, but\nit's in my lecture notes if you're curious. It's like this\nproof, but harder.",
    "start": "5000765",
    "end": "5007290"
  },
  {
    "text": "You end up, instead of\nhaving n digit numbers, you have five digit numbers. Each digit only has a polynomial\nin n different values.",
    "start": "5007290",
    "end": "5016130"
  },
  {
    "text": "So the total value of the\nnumbers is only polynomial. It's like n to the\nfifth or something.",
    "start": "5016130",
    "end": "5023380"
  },
  {
    "text": "Good news is that\nthis reduction I just gave you is also a\nreduction from 4-partition",
    "start": "5023380",
    "end": "5036710"
  },
  {
    "text": "because it's the same set up. Again, I'm given integers. Each integer I'm going to\nrepresent by that many tiles.",
    "start": "5036710",
    "end": "5045340"
  },
  {
    "text": "Now the number of tiles\nis only polynomial, so this is a valid reduction. And again, if I have to\npack all of these tiles",
    "start": "5045340",
    "end": "5051650"
  },
  {
    "text": "into a rectangular board,\nthat's exactly the same as packing these integers.",
    "start": "5051650",
    "end": "5057530"
  },
  {
    "text": "Well, I guess I should do\nrectangle packing again. So this is a proof rectangle\npacking was weakly NP-hard.",
    "start": "5057530",
    "end": "5062590"
  },
  {
    "text": "But in fact it's\nstrongly NP-hard. You just change\nthese dimensions. You say well, I need whatever,\nn over 4 different parts, each",
    "start": "5062590",
    "end": "5073470"
  },
  {
    "text": "of size the sum over n over 4. You need some scale factor here. Three doesn't work.",
    "start": "5073470",
    "end": "5079360"
  },
  {
    "text": "Use n or something-- n and n. That will prove that\nrectangle packing is actually",
    "start": "5079360",
    "end": "5086330"
  },
  {
    "text": "strongly NP-hard because\nwe're reducing for 4-partition instead of partition. And then you can reduce\nrectangle packing",
    "start": "5086330",
    "end": "5092320"
  },
  {
    "text": "to jigsaw puzzles because you\nhave strong hardness over here. Over here we don't have numbers. We just have these pieces.",
    "start": "5092320",
    "end": "5099800"
  },
  {
    "text": "So whenever you convert\nfrom a number problem to a non-number problem, if\nyou're representing the numbers",
    "start": "5099800",
    "end": "5105110"
  },
  {
    "text": "in unary, which is\nwhat's going on here, you need strong\nNP-hardness for it to work. Weak NP-hardness isn't enough.",
    "start": "5105110",
    "end": "5111340"
  },
  {
    "text": "Then we get jigsaw puzzles,\nwhich we know and love, are NP-complete. That's it.",
    "start": "5111340",
    "end": "5117070"
  },
  {
    "start": "5117070",
    "end": "5124759"
  }
]