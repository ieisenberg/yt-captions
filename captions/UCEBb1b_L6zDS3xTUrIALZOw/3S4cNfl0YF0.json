[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "7410"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation or view\nadditional materials from",
    "start": "7410",
    "end": "13960"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at ocw.mit.edu.",
    "start": "13960",
    "end": "19140"
  },
  {
    "start": "19140",
    "end": "28480"
  },
  {
    "text": "PROFESSOR: Hello, and\nwelcome to 6.01. I'm Denny Freeman. I'm the lecturer.",
    "start": "28480",
    "end": "33930"
  },
  {
    "text": "One thing you should know about\ntoday is that there's a single hand-out. You should have picked\nit up on your way in. It's available at either\nof the two doors.",
    "start": "33930",
    "end": "40370"
  },
  {
    "text": " What I want to do today in this\nfirst lecture is mostly",
    "start": "40370",
    "end": "47650"
  },
  {
    "text": "focus on content. But before I do that, since\n6.01 is a little bit of an",
    "start": "47650",
    "end": "54030"
  },
  {
    "text": "unusual course, I want to give\nyou a little bit of an overview and tell you a little\nbit about the administration of the course.",
    "start": "54030",
    "end": "60260"
  },
  {
    "text": " 6.01 is mostly about\nmodes of reasoning.",
    "start": "60260",
    "end": "71490"
  },
  {
    "text": "What we would like you to get\nout of this course is ways to think about engineering.",
    "start": "71490",
    "end": "77800"
  },
  {
    "text": "We want to talk about how do you\ndesign, how do you build, how do you construct, how do you\ndebug complicated systems?",
    "start": "77800",
    "end": "86030"
  },
  {
    "text": "That's what engineers do, and\nwe're very good at it. And we want to make you\nvery good at it.",
    "start": "86030",
    "end": "93700"
  },
  {
    "text": "We're very good at it. And you know that from your\ncommon, everyday experience. Laptops are incredible.",
    "start": "93700",
    "end": "101009"
  },
  {
    "text": "As we go through the course,\nyou're going to see that laptops incorporate things\nfrom the tiniest, tiniest",
    "start": "101010",
    "end": "107210"
  },
  {
    "text": "level, things so small that\nyou can't see them. They're microscopic.",
    "start": "107210",
    "end": "112370"
  },
  {
    "text": "The individual transistors are\nnot things that you can see. We develop special tools for\nyou even to be able to",
    "start": "112370",
    "end": "118159"
  },
  {
    "text": "visualize them. And yet, we conglomerate\nbillions of them into a system",
    "start": "118160",
    "end": "124359"
  },
  {
    "text": "that works relatively\nreliably. Now, I realize I'm going out on\na limb because when you say",
    "start": "124360",
    "end": "129580"
  },
  {
    "text": "things like that, then\nthings always fail. But I'll go out on a limb and\nsay, for the most part, the",
    "start": "129580",
    "end": "135250"
  },
  {
    "text": "systems we construct\nare very reliable. We'd like you to know how you\nthink about making such a",
    "start": "135250",
    "end": "142790"
  },
  {
    "text": "complicated system and\nmaking it reliable. We want to tell you about how\nyou would model things.",
    "start": "142790",
    "end": "149760"
  },
  {
    "text": "How do you gain insight? How do you get predictability? How do you figure out how\nsomething will work before",
    "start": "149760",
    "end": "155890"
  },
  {
    "text": "you've built it? If you're limited to trying\nout how things work by",
    "start": "155890",
    "end": "162390"
  },
  {
    "text": "actually constructing it,\nyou spend a lot of time constructing things that\nnever make it.",
    "start": "162390",
    "end": "168430"
  },
  {
    "text": "We want to avoid that by\n-- where we can -- making a model, analyzing the\nmodel, making a prediction",
    "start": "168430",
    "end": "175400"
  },
  {
    "text": "from the model, and using that\nprediction to build a better system on the first try.",
    "start": "175400",
    "end": "181230"
  },
  {
    "text": " We want to tell you about how\nto augment the physical",
    "start": "181230",
    "end": "187750"
  },
  {
    "text": "behavior of a system by putting\ncomputation in it. That's a very powerful technique\nthat is increasingly",
    "start": "187750",
    "end": "195470"
  },
  {
    "text": "common in anything from a\nmicrowave to a refrigerator. We'd like you to know\nthe principles",
    "start": "195470",
    "end": "201750"
  },
  {
    "text": "by which to do that. And we'd like you to be able\nto build systems that are robust to failure.",
    "start": "201750",
    "end": "209500"
  },
  {
    "text": "That's a newer idea. It's something that people\nare very good at.",
    "start": "209500",
    "end": "215540"
  },
  {
    "text": "If we try to do something,\nand we make a mistake, we know how to fix it. And often, the fix works.",
    "start": "215540",
    "end": "222480"
  },
  {
    "text": "We're less good at doing that\nin constructing artificial systems, in engineering\nsystems.",
    "start": "222480",
    "end": "228080"
  },
  {
    "text": "And we'd like to talk\nabout principles by which we can do that. So the goal of 6.01 is, then,\nreally to convey a distinct",
    "start": "228080",
    "end": "236320"
  },
  {
    "text": "perspective about how\nwe engineer systems.",
    "start": "236320",
    "end": "242330"
  },
  {
    "text": "Now, having said that, this is\nnot a philosophy course. We are not going to make lists\nof things to do if you want it",
    "start": "242330",
    "end": "250770"
  },
  {
    "text": "to be robust. We're going to learn\nto do things by actually making systems.",
    "start": "250770",
    "end": "257329"
  },
  {
    "text": "This is an introductory\nengineering course. And so you're going\nto build things. The idea is going to be that in\nconstructing those things,",
    "start": "257329",
    "end": "265040"
  },
  {
    "text": "we've written the exercises so\nthat some of those important themes become transparent.",
    "start": "265040",
    "end": "271450"
  },
  {
    "text": "So the idea is -- this is\nintroductory engineering. You'll all make things.",
    "start": "271450",
    "end": "276900"
  },
  {
    "text": "You'll all get things to work,\nand in the process of doing that, learn something about the\nbigger view of how quality",
    "start": "276900",
    "end": "284710"
  },
  {
    "text": "engineering happens.  So despite the fact that we're\nreally about modes of",
    "start": "284710",
    "end": "291220"
  },
  {
    "text": "reasoning, that will be\ngrounded in content. We selected the content very\nbroadly from across EECS.",
    "start": "291220",
    "end": "300080"
  },
  {
    "text": "EECS is an enormous endeavor. We can't possibly introduce\neverything",
    "start": "300080",
    "end": "306180"
  },
  {
    "text": "about EECS in one subject. That's ridiculous.",
    "start": "306180",
    "end": "311460"
  },
  {
    "text": "However, we wanted to\ngive you a variety. We wanted to give you a sense\nof the variety of tasks that you can use, that you can apply\nthe same techniques to.",
    "start": "311460",
    "end": "321450"
  },
  {
    "text": "So we want to introduce modes\nof reasoning, and then show you explicitly how you can use\nthose modes of reasoning in a",
    "start": "321450",
    "end": "327750"
  },
  {
    "text": "variety of contexts. So we've chosen four, and we've\norganized the course around four modules.",
    "start": "327750",
    "end": "333689"
  },
  {
    "text": "First module is software\nengineering, then signals and systems, then circuits, then\nprobability and planning.",
    "start": "333690",
    "end": "339700"
  },
  {
    "text": "Even so, even having chosen\njust four out of the vast number of things we could have\nchosen, there's no way we can",
    "start": "339700",
    "end": "346240"
  },
  {
    "text": "tell you adequately-- we can't give you an adequate\nintroduction to any of those things either.",
    "start": "346240",
    "end": "352980"
  },
  {
    "text": "What we've chosen to do instead\nis focus on key concepts represented\nby the asterisks.",
    "start": "352980",
    "end": "361740"
  },
  {
    "text": "The idea is going to be we\nchoose one or two things and really focus on those deeply\nso you get a thorough",
    "start": "361740",
    "end": "369090"
  },
  {
    "text": "understanding not only of how\nthat fits within, for example, the context of software\nengineering, but also how that",
    "start": "369090",
    "end": "377440"
  },
  {
    "text": "concept ramifies into\nother areas. Notice that I tried to choose\nthe stars so they",
    "start": "377440",
    "end": "383500"
  },
  {
    "text": "hit multiple circles. That's what we're\ntrying to do. We're trying to not only\nintroduce an idea to you, but",
    "start": "383500",
    "end": "390050"
  },
  {
    "text": "also show you how it connects\nto other ideas. ",
    "start": "390050",
    "end": "396270"
  },
  {
    "text": "So the idea, then, is to focus\non a few, we hope, very well-chosen applications that\nwill demonstrate a variety of",
    "start": "396270",
    "end": "405220"
  },
  {
    "text": "powerful techniques.  Our mantra, the way we intend\nto go about teaching this",
    "start": "405220",
    "end": "412430"
  },
  {
    "text": "stuff, is practice,\ntheory, practice.",
    "start": "412430",
    "end": "418949"
  },
  {
    "text": "There's an enormous educational literature that says-- whether you like it or not--",
    "start": "418950",
    "end": "424630"
  },
  {
    "text": "people learn better when\nthey're doing things. You have a lot of experience\nwith that.",
    "start": "424630",
    "end": "430139"
  },
  {
    "text": "You have a lot of experience\non the other side, too. I'll try to forget the other\nside, or at least try to wipe",
    "start": "430140",
    "end": "435370"
  },
  {
    "text": "it from your brain momentarily\nto focus on your more fundamental modes of learning.",
    "start": "435370",
    "end": "443169"
  },
  {
    "text": "When you were a kid and you\nwere learning your first language, you didn't learn all\nthe rules of grammar first.",
    "start": "443170",
    "end": "450340"
  },
  {
    "text": "You didn't learn all the letters\nof the alphabet first. You didn't learn about\nconjugating verbs first.",
    "start": "450340",
    "end": "457060"
  },
  {
    "text": "You learned a little\nbit about language. You started to use it. You ran into problems. You learned a little more\nabout language.",
    "start": "457060",
    "end": "463840"
  },
  {
    "text": "You learned to go from words\nlike \"feed me\" to higher level",
    "start": "463840",
    "end": "470750"
  },
  {
    "text": "concepts, like \"Hey,\nwhat's for dinner?\" So the idea is that you learned\nit in an iterative",
    "start": "470750",
    "end": "478490"
  },
  {
    "text": "process where you learned some\nstuff, tried it out, learned some more stuff, tried it out.",
    "start": "478490",
    "end": "483810"
  },
  {
    "text": "And it built up. There's an enormous literature\nin education that says that's exactly how we always\nlearn everything.",
    "start": "483810",
    "end": "491140"
  },
  {
    "text": "And so that's the way this\ncourse is focused. What we will do is, for example,\nfor today, we'll",
    "start": "491140",
    "end": "496210"
  },
  {
    "text": "learn a little bit about\nsoftware engineering. Then, we'll do two lab sessions\nwhere you actually",
    "start": "496210",
    "end": "501370"
  },
  {
    "text": "try to use the things\nwe talk about. Then, we'll come back to lecture\nand we'll have some",
    "start": "501370",
    "end": "506590"
  },
  {
    "text": "more theory about how you\nwould do programming. And then, you go back to the\nlab and do some more stuff.",
    "start": "506590",
    "end": "513429"
  },
  {
    "text": "And the hope is that by this\ntangible context, you'll have",
    "start": "513429",
    "end": "519020"
  },
  {
    "text": "a deeper appreciation\nof the ideas that we're trying to convey. ",
    "start": "519020",
    "end": "525480"
  },
  {
    "text": "So let me tell you a little\nbit about the four modules that we've chosen. The course is going to be\norganized on four modules.",
    "start": "525480",
    "end": "533560"
  },
  {
    "text": "Each module will take about\none fourth of the course. First thing we'll look at\nis software engineering.",
    "start": "533560",
    "end": "539990"
  },
  {
    "text": "As I said, we don't have time\nto focus on, or even survey, all of the big ideas in\nsoftware engineering.",
    "start": "539990",
    "end": "546660"
  },
  {
    "text": "It's far too big. So we're going to focus narrowly\non one or two things.",
    "start": "546660",
    "end": "552760"
  },
  {
    "text": "We'd like you to know about\nabstraction and modularity because that's such an\nimportant idea in the",
    "start": "552760",
    "end": "560680"
  },
  {
    "text": "construction of big systems. So that's going to\nbe our focus.",
    "start": "560680",
    "end": "566550"
  },
  {
    "text": "In today's lecture, we'll begin\ntalking about modularity",
    "start": "566550",
    "end": "571580"
  },
  {
    "text": "and abstraction at\nthe small scale. How does it affect the\nthings you type as",
    "start": "571580",
    "end": "578240"
  },
  {
    "text": "instructions to a computer? But by next week, we're going\nto be talking about a whole",
    "start": "578240",
    "end": "583270"
  },
  {
    "text": "bigger scale. By next week, we're going to\ntalk about constructing",
    "start": "583270",
    "end": "588380"
  },
  {
    "text": "software modules at a\nmuch higher level. In particular, we'll talk about\nsomething that we'll",
    "start": "588380",
    "end": "594180"
  },
  {
    "text": "call a state machine. A state machine is a thing\nthat works in steps.",
    "start": "594180",
    "end": "602710"
  },
  {
    "text": "On every step, the state machine\ngets a new input.",
    "start": "602710",
    "end": "608580"
  },
  {
    "text": "Then, based on that input and\nits memory of what's come before, the state machine\ndecides to do something.",
    "start": "608580",
    "end": "614829"
  },
  {
    "text": "It generates an output. And then, the process repeats. ",
    "start": "614830",
    "end": "620209"
  },
  {
    "text": "We will see that that kind\nof an abstraction -- state machines --",
    "start": "620210",
    "end": "625550"
  },
  {
    "text": "there's a way to think about\nstate machines that is compositional that you can think\nof as a hierarchy, just",
    "start": "625550",
    "end": "633030"
  },
  {
    "text": "as you can think of low-level\nhierarchies within a language. I'll say a lot more\nabout that today.",
    "start": "633030",
    "end": "639260"
  },
  {
    "text": "So the idea will be that once\nyou've composed a state machine, you'll be able to join\ntwo state machines and",
    "start": "639260",
    "end": "646070"
  },
  {
    "text": "have its behavior look just\nlike one state machine. That's a way to get a more\ncomplicated behavior by",
    "start": "646070",
    "end": "652520"
  },
  {
    "text": "constructing two simpler\nbehaviors. That's what we want. We want to learn tools that\nlet us compose complex",
    "start": "652520",
    "end": "658830"
  },
  {
    "text": "behaviors out of simple\nbehaviors. And the tangible model of\nthat will be the robot.",
    "start": "658830",
    "end": "665610"
  },
  {
    "text": "We will see how to write a\nprogram that controls a robot",
    "start": "665610",
    "end": "671110"
  },
  {
    "text": "as a state machine. That's certainly not the only\nway you could control a robot.",
    "start": "671110",
    "end": "677270"
  },
  {
    "text": "And it's probably not the way\nyou would first think of it if you took one course in\nprogramming and somebody said",
    "start": "677270",
    "end": "683350"
  },
  {
    "text": "to you, go program the robot\nto do something. What we will see is that it's\na very powerful way to think",
    "start": "683350",
    "end": "690089"
  },
  {
    "text": "about it for exactly this\nreason of modularity.",
    "start": "690090",
    "end": "695460"
  },
  {
    "text": "The bigger point that we will\nmake in thinking about this first module is the idea\nof, how do you",
    "start": "695460",
    "end": "701460"
  },
  {
    "text": "make systems modular? How do you use abstraction to\nsimplify the design task? And in particular, we will\nfocus on something",
    "start": "701460",
    "end": "708930"
  },
  {
    "text": "that we'll call PCAP. When you think about a system,\nwe will always think about it",
    "start": "708930",
    "end": "714765"
  },
  {
    "text": "in terms of, what are\nthe primitives? How do you combine them?",
    "start": "714765",
    "end": "720300"
  },
  {
    "text": "How do you abstract a\nbigger behavior from",
    "start": "720300",
    "end": "725480"
  },
  {
    "text": "those smaller behaviors? And what are the patterns that\nare important to capture?",
    "start": "725480",
    "end": "731990"
  },
  {
    "text": "So the bigger point is this idea\nof PCAP, which we will then revisit in every\nsubsequent module.",
    "start": "731990",
    "end": "740970"
  },
  {
    "text": "OK, second module is on\nsignals and systems. That's also an enormous area.",
    "start": "740970",
    "end": "747579"
  },
  {
    "text": "So we only have time\nto do one thing. The thing that we will do is we\nwill think about discrete",
    "start": "747580",
    "end": "753530"
  },
  {
    "text": "time feedback. How do you make a system that's\ncognizant of what it's",
    "start": "753530",
    "end": "760350"
  },
  {
    "text": "done so that it, in the future,\ncan do things with awareness of how it got there?",
    "start": "760350",
    "end": "768570"
  },
  {
    "text": "A good example is robotic\nsteering. So the idea is going to be, OK,\nthink about what you do",
    "start": "768570",
    "end": "775269"
  },
  {
    "text": "when you're driving a car. And think about how you\nwould tell a robot to",
    "start": "775270",
    "end": "780399"
  },
  {
    "text": "do that same thing. Here's a naive driving\nalgorithm.",
    "start": "780400",
    "end": "786390"
  },
  {
    "text": "I don't recommend it, but it's\nwidely used in Boston, apparently. [LAUGHTER] I find myself to the right of\nwhere I would like to be.",
    "start": "786390",
    "end": "794080"
  },
  {
    "text": "So what should I do? Turn left. I'm still to the right of\nwhere I'd like to be.",
    "start": "794080",
    "end": "800330"
  },
  {
    "text": "What should I do? Turn left. Oh! I'm exactly where I should be.",
    "start": "800330",
    "end": "807390"
  },
  {
    "text": "What should I do? Go straight ahead.",
    "start": "807390",
    "end": "812470"
  },
  {
    "text": "Oh, that's a bad idea. And what we'll see is that\nperfectly innocent looking",
    "start": "812470",
    "end": "818399"
  },
  {
    "text": "algorithms can have horrendous\nperformance. What we'll do is try to make\nan abstraction of that.",
    "start": "818400",
    "end": "826490"
  },
  {
    "text": "We'll try to make a model. We'll try to capture that in\nmath so that we don't need to",
    "start": "826490",
    "end": "831510"
  },
  {
    "text": "build it to see the\nbad behavior. We'll make a model.",
    "start": "831510",
    "end": "837200"
  },
  {
    "text": "We'll use the model to predict\nthat that algorithm stinks. But more importantly, we'll use\nthe model to figure out an",
    "start": "837200",
    "end": "845490"
  },
  {
    "text": "algorithm that'll work better. In fact, we'll even be able to\ncome up with bounds on how",
    "start": "845490",
    "end": "851709"
  },
  {
    "text": "well such a controller\ncould possibly work. So the focus in this module is\ngoing to be, how do you make a",
    "start": "851710",
    "end": "859130"
  },
  {
    "text": "model to predict behavior? How do you analyze the model\nso that you can design a",
    "start": "859130",
    "end": "864300"
  },
  {
    "text": "better system? And then, how do you use the\nmodel and the analysis to make",
    "start": "864300",
    "end": "869970"
  },
  {
    "text": "a well-behaved system?  The third module\nis on circuits.",
    "start": "869970",
    "end": "877690"
  },
  {
    "text": "Again, circuits is huge. We don't have time to talk\nabout all of circuits. We'll do very simple things.",
    "start": "877690",
    "end": "883680"
  },
  {
    "text": "We'll focus our attention on\nhow you would add a sensory capability to an already\ncomplicated system.",
    "start": "883680",
    "end": "892770"
  },
  {
    "text": "The idea is going to be to\nstart with a robot-- I guess this is brighter-- start with our robots and design\na head for the robot.",
    "start": "892770",
    "end": "903720"
  },
  {
    "text": "The robot comes from the factory\nwith sonar sensors. The sonar sensors are\nthese things.",
    "start": "903720",
    "end": "909000"
  },
  {
    "text": "There's eight of them. They tell you how far away\nsomething that reflects the ultrasonic wave is.",
    "start": "909000",
    "end": "917560"
  },
  {
    "text": "As they come from the factory,\nthe robots can't sense light. What you'll do is add\nlight sensors.",
    "start": "917560",
    "end": "924940"
  },
  {
    "text": "The goal is to make a system\nto modify the robot so that the robot tracks light.",
    "start": "924940",
    "end": "931720"
  },
  {
    "text": "That's a very simple goal. And the way we'll that is to\naugment the robot with a",
    "start": "931720",
    "end": "937970"
  },
  {
    "text": "simple sensor here, showed a\nlittle more magnified here. The idea is that this\nis a LEGO motor.",
    "start": "937970",
    "end": "946030"
  },
  {
    "text": "The LEGO motor will turn this\nrelative to the attachment.",
    "start": "946030",
    "end": "951980"
  },
  {
    "text": "That's the robot head's neck. So the robot will be\nable to do this.",
    "start": "951980",
    "end": "960070"
  },
  {
    "text": "And the robot will have eyes. These are photosensors,\nphotoresistors, actually.",
    "start": "960070",
    "end": "966680"
  },
  {
    "text": "So the idea is going to be\nthat there's information available in those sensors for\nfiguring out where light is so",
    "start": "966680",
    "end": "972560"
  },
  {
    "text": "that you can track it. Your job will be to\nbuild a circuit--",
    "start": "972560",
    "end": "977940"
  },
  {
    "text": "that that's this thing-- that connects via cables-- these red cables and\nyellow cables--",
    "start": "977940",
    "end": "983800"
  },
  {
    "text": "connects via cables\nover to this head. We'll give you the head. Your job will be to make the\ncircuit that converts the",
    "start": "983800",
    "end": "993870"
  },
  {
    "text": "signal from the photoresistor-- which is in proportion\nto light-- and figures out how to turn the\nmotor to get the head to",
    "start": "993870",
    "end": "1003710"
  },
  {
    "text": "face the light and then ship\nthat information down to the robot to let the robot turn its\nwheels to get the body.",
    "start": "1003710",
    "end": "1011310"
  },
  {
    "text": "So it's kind of like the light\ncomes on bright over here. The robot looks at it and says,\noh, yeah, that's where I want to be.",
    "start": "1011310",
    "end": "1017260"
  },
  {
    "text": "So that's the idea in the third\nmodule is to incorporate new sensing capabilities\ninto the robot.",
    "start": "1017260",
    "end": "1024459"
  },
  {
    "text": "The final module is on\nprobability and planning. And the idea there is to learn\nabout how you make systems",
    "start": "1024460",
    "end": "1034809"
  },
  {
    "text": "that are robust to uncertainty\nand that can implement",
    "start": "1034810",
    "end": "1042599"
  },
  {
    "text": "complicated plans, that they,\ntoo, are robust to uncertainty.",
    "start": "1042599",
    "end": "1048870"
  },
  {
    "text": "So there's a number of things\nthat we will do, including creating maps of spaces that the\nrobot doesn't understand,",
    "start": "1048870",
    "end": "1056860"
  },
  {
    "text": "telling the robot how to\nlocalize itself, how if it woke up suddenly in an\nenvironment, it could figure",
    "start": "1056860",
    "end": "1063050"
  },
  {
    "text": "out where it is, how\nto make a plan. And as an example, I'll show you\nthe kind of system that we",
    "start": "1063050",
    "end": "1071790"
  },
  {
    "text": "will construct. Here, the idea is that\nwe have a robot. The robot knows where it is.",
    "start": "1071790",
    "end": "1078710"
  },
  {
    "text": "Imagine there's a GPS in it. There isn't, but imagine\nthere is. So the robot knows where it\nis, and it knows where it wants to go.",
    "start": "1078710",
    "end": "1084110"
  },
  {
    "text": "That's the star. But it has no idea what kind of\nobstacles are in the way.",
    "start": "1084110",
    "end": "1090630"
  },
  {
    "text": "So if you were a robotic driver\nin Boston, you know that you started out at home and\nyou want to end up in MIT.",
    "start": "1090630",
    "end": "1098410"
  },
  {
    "text": "But there's these annoying\nobstacles, they're called people, that you should, in\nprinciple at least, miss.",
    "start": "1098410",
    "end": "1106450"
  },
  {
    "text": "So that's kind of the idea. So I know where I am.",
    "start": "1106450",
    "end": "1112460"
  },
  {
    "text": "I'm the robot. I know where I am. I know where I want to be. And I'm going to summarize\nthat information here.",
    "start": "1112460",
    "end": "1117570"
  },
  {
    "text": "Where I am is purple. Where I want to be is gold. And I have a plan.",
    "start": "1117570",
    "end": "1123610"
  },
  {
    "text": "That's blue. My plan's very simple. I don't know anything about\nanything other than I'm in",
    "start": "1123610",
    "end": "1129490"
  },
  {
    "text": "Waltham and I want to\ngo to Cambridge. So blast east. ",
    "start": "1129490",
    "end": "1137130"
  },
  {
    "text": "So I imagine that the\nbest way to do there is a straight line.",
    "start": "1137130",
    "end": "1142390"
  },
  {
    "text": "OK, so now what I'm going to\ndo is turn on the robot. The robot has now\nmade one step.",
    "start": "1142390",
    "end": "1149680"
  },
  {
    "text": "And I told you before about\nthese sonar sensors. From the sonar sensors, the\nrobot has learned now that",
    "start": "1149680",
    "end": "1156370"
  },
  {
    "text": "there seems to be something\nreflecting at each of these black dots.",
    "start": "1156370",
    "end": "1162159"
  },
  {
    "text": "It got a reflection from\nthe black dots, from the sonar sensors. That means there's probably a\nwall there, or a person, or",
    "start": "1162160",
    "end": "1168670"
  },
  {
    "text": "something that, in principle,\nI should avoid.  And the red dots represent, OK,\nthe obstacle is so close I",
    "start": "1168670",
    "end": "1177200"
  },
  {
    "text": "really can't get there. So I'm excluded from the red\nspots because I'm too big.",
    "start": "1177200",
    "end": "1183620"
  },
  {
    "text": "The black spots seem\nto be an obstacle. The red spots seem to be\nwhere I can't fit.",
    "start": "1183620",
    "end": "1191040"
  },
  {
    "text": "I still want to go from the\nwhere I am, purple, to where I want to be, gold.",
    "start": "1191040",
    "end": "1196060"
  },
  {
    "text": "So what I do is I compute\nthe new plan. OK then, I start to take\na step along that plan.",
    "start": "1196060",
    "end": "1203580"
  },
  {
    "text": "And as I'm stepping along, OK,\nso now, I think that I can't go from where I started\nover to here.",
    "start": "1203580",
    "end": "1209840"
  },
  {
    "text": "I have to go around\nthis wall that I didn't know about initially. So now I just start driving.",
    "start": "1209840",
    "end": "1215355"
  },
  {
    "text": "And it looks fine, right? I'm getting there, right? Now, I know I can go\nstraight down here.",
    "start": "1215355",
    "end": "1221720"
  },
  {
    "text": "Oh, wait a minute. There's another wall. OK, what do I do now? So as the robot goes along, it\ndidn't know when it started",
    "start": "1221720",
    "end": "1231350"
  },
  {
    "text": "what kinds of obstacles\nit would encounter. But as it's driving,\nit learned. Oh, that didn't work.",
    "start": "1231350",
    "end": "1236870"
  },
  {
    "text": "Start over! So the idea is that this robot\nis executing a very",
    "start": "1236870",
    "end": "1246330"
  },
  {
    "text": "complicated plan. The plan has, in fact,\nmany sub-plans.",
    "start": "1246330",
    "end": "1253640"
  },
  {
    "text": "And the sub-plans all\ninvolve uncertainty. It didn't know where the walls\nwere when it started.",
    "start": "1253640",
    "end": "1260630"
  },
  {
    "text": "And when it's all done, it's\ngoing to have figured out where the walls were and-- provided there's a way--",
    "start": "1260630",
    "end": "1266900"
  },
  {
    "text": "presumably find the way to\nnegotiate the maze and get to the destination.",
    "start": "1266900",
    "end": "1273440"
  },
  {
    "text": "So the idea, then, is that if\nyou were asked to write a",
    "start": "1273440",
    "end": "1279120"
  },
  {
    "text": "conventional kind of program for\nsolving that, it might be kind of hard because\nof the number of",
    "start": "1279120",
    "end": "1285090"
  },
  {
    "text": "contingencies involved. What we will do is break down\nthe problem and figure out",
    "start": "1285090",
    "end": "1291240"
  },
  {
    "text": "simple and elegant ways\nto deal not only with uncertainty, but how do you\nmake complex plans.",
    "start": "1291240",
    "end": "1296755"
  },
  {
    "text": " So as I said, our primary\npedagogy is going to be",
    "start": "1296755",
    "end": "1305290"
  },
  {
    "text": "practice, theory, practice. And so that ramifies in how\nthe course is organized.",
    "start": "1305290",
    "end": "1314880"
  },
  {
    "text": "So this is a quick map of some\nof the aspects of the course. So we'll have weekly lectures.",
    "start": "1314880",
    "end": "1321670"
  },
  {
    "text": "It's lecture unintensive. In total, there's only\n13 lectures.",
    "start": "1321670",
    "end": "1326790"
  },
  {
    "text": "We'll meet once a week\nhere for lecture. There's readings. There's voluminous readings.",
    "start": "1326790",
    "end": "1333340"
  },
  {
    "text": "There's readings about every\ntopic that we will talk about. And the readings were\nspecifically",
    "start": "1333340",
    "end": "1338390"
  },
  {
    "text": "designed for this course. I highly recommend\nthat you become familiar with the readings. If you have a question after\nlecture, it's probably there.",
    "start": "1338390",
    "end": "1346510"
  },
  {
    "text": "It's probably explained.  We will do online\ntutor problems.",
    "start": "1346510",
    "end": "1353180"
  },
  {
    "text": "We sent you an email if you\npre-registered for the course. So you may already\nknow about this. The idea is going to be that\nthere's ways that you can",
    "start": "1353180",
    "end": "1361539"
  },
  {
    "text": "prepare for the course by doing\ncomputer exercises. And we will also use those same\nkinds of exercises in all",
    "start": "1361540",
    "end": "1368850"
  },
  {
    "text": "of the class sessions. We will have two kinds\nof lab experiences. Besides lecture, the other two\nevents that you have to attend",
    "start": "1368850",
    "end": "1378390"
  },
  {
    "text": "are a software lab\nand a design lab. That's the practice part.",
    "start": "1378390",
    "end": "1384340"
  },
  {
    "text": "So after you learned a little\nbit about the theory by going to lecture, by doing the\nreading, then you go to the",
    "start": "1384340",
    "end": "1389380"
  },
  {
    "text": "lab and try some things out. We call the first lab\na software lab.",
    "start": "1389380",
    "end": "1395170"
  },
  {
    "text": "It's a short lab. It's an hour and a half. You work individually. You try things out. You write little programs.",
    "start": "1395170",
    "end": "1400910"
  },
  {
    "text": "The courseware can check the\nprogram to see if it's OK.",
    "start": "1400910",
    "end": "1407390"
  },
  {
    "text": "And primarily, the exercises\nin the software lab are due",
    "start": "1407390",
    "end": "1412630"
  },
  {
    "text": "during the software lab. But on occasion, there will\nbe extra things due a day or two later.",
    "start": "1412630",
    "end": "1418780"
  },
  {
    "text": "The due dates are very\nclearly written in the tutor exercises. Once a week, there's\na design lab.",
    "start": "1418780",
    "end": "1424350"
  },
  {
    "text": "That's a three hour session in\nwhich you work with a partner. The reason for the partner\nis that the intent--",
    "start": "1424350",
    "end": "1431800"
  },
  {
    "text": "the difference between the\ndesign labs and the software labs is that the design labs ask\nyou to solve slightly more",
    "start": "1431800",
    "end": "1438720"
  },
  {
    "text": "open-ended questions, the kind\nof question that you might",
    "start": "1438720",
    "end": "1444130"
  },
  {
    "text": "have no clue what\nwe're asking. Open-ended, the kind of thing\nthat you will be asked to do",
    "start": "1444130",
    "end": "1449170"
  },
  {
    "text": "after you graduate. Design the system. What do you mean, design\nthe system? ",
    "start": "1449170",
    "end": "1455420"
  },
  {
    "text": "So the idea is that working with\na partner will give you a second, immediate source of\nhelp and a little more",
    "start": "1455420",
    "end": "1464030"
  },
  {
    "text": "confidence if neither of you\nknows the solution so that you raise your hand and say,\nI don't have a clue what's going on here.",
    "start": "1464030",
    "end": "1469710"
  },
  {
    "text": "So the idea is that once a\nweek we do a software lab individually. Once a week, we do a design lab,\na little more open-ended",
    "start": "1469710",
    "end": "1476260"
  },
  {
    "text": "with partners. There's a little bit of written\nhomework, four total. It's not much compared\nto other subjects.",
    "start": "1476260",
    "end": "1483010"
  },
  {
    "text": "It's mostly practice. There's a nano-quiz, just to\nhelp you keep pace to make",
    "start": "1483010",
    "end": "1490610"
  },
  {
    "text": "sure that you don't get\ntoo far behind. The first 15 minutes\nof every design lab",
    "start": "1490610",
    "end": "1496200"
  },
  {
    "text": "starts with a nano-quiz. The nano-quizzes are intended to\nbe simple if you've caught",
    "start": "1496200",
    "end": "1502500"
  },
  {
    "text": "up, if you're up to date. So the idea is that you go to\ndesign lab, the first thing",
    "start": "1502500",
    "end": "1508650"
  },
  {
    "text": "you do is a little, 15\nminute nano-quiz. The nano-quiz uses a tutor much\nlike the homework tutor,",
    "start": "1508650",
    "end": "1514560"
  },
  {
    "text": "much like the Python tutor. And it's intended\nto be simple.",
    "start": "1514560",
    "end": "1520450"
  },
  {
    "text": "But it does mean please get\nto the design lab on time.",
    "start": "1520450",
    "end": "1525730"
  },
  {
    "text": "The nano-quizzes are\nadministered by the software. It starts the hour when\nthe design lab starts.",
    "start": "1525730",
    "end": "1532520"
  },
  {
    "text": "It times out 15 minutes later. So if you come 10 minutes late,\nyou will have 5 minutes",
    "start": "1532520",
    "end": "1538250"
  },
  {
    "text": "to do something that\nwe planned to give you 15 minutes for. ",
    "start": "1538250",
    "end": "1544289"
  },
  {
    "text": "We will also have exams\nand interviews. The interviews are intended to\nbe a one-on-one conversation",
    "start": "1544290",
    "end": "1551600"
  },
  {
    "text": "about how the labs went.  And we will have two mid-terms\nand a final.",
    "start": "1551600",
    "end": "1559340"
  },
  {
    "text": "So that's kind of\nthe logistics. The idea behind the logistics is\npractice, theory, practice.",
    "start": "1559340",
    "end": "1565880"
  },
  {
    "text": "Come to the labs. Try things out. Make sure you understand. Develop a little code. Type it in. See if it works.",
    "start": "1565880",
    "end": "1572289"
  },
  {
    "text": "If it works, you're\non top of things. You're ready to get the next\nbatch of information from the",
    "start": "1572290",
    "end": "1578240"
  },
  {
    "text": "lecture and readings. OK, let's go on, and let's\ntalk about the technical",
    "start": "1578240",
    "end": "1583770"
  },
  {
    "text": "material in the first module\nof the course, in the software module. We kick the course off talking\nabout software engineering for",
    "start": "1583770",
    "end": "1591720"
  },
  {
    "text": "two reasons. We'd like you to know about\nsoftware engineering. It's an incredibly important\npart of our department.",
    "start": "1591720",
    "end": "1599059"
  },
  {
    "text": "It's an incredibly important\npart of the engineering of absolutely any system,\nany modern system.",
    "start": "1599060",
    "end": "1606490"
  },
  {
    "text": "But we'd also like you to know\nabout it because it provides a very convenient way to think\nabout-- it's a convenient",
    "start": "1606490",
    "end": "1612460"
  },
  {
    "text": "language to think about the\ndesign issues, the engineering",
    "start": "1612460",
    "end": "1619220"
  },
  {
    "text": "issues in all the other\nparts of the class. So it's a very good\nplace to start. ",
    "start": "1619220",
    "end": "1626840"
  },
  {
    "text": "So what I will do today is talk\nabout some of the very simplest ideas about abstraction\nand modularity in",
    "start": "1626840",
    "end": "1635530"
  },
  {
    "text": "what I think of as the lowest\nlevel of granularity. How do you think about\nabstraction and modularity at",
    "start": "1635530",
    "end": "1642240"
  },
  {
    "text": "the micro scale, at\nthe individual lines of code scale?",
    "start": "1642240",
    "end": "1648870"
  },
  {
    "text": "As I said earlier, we will,\nas we progress, look at modularity and abstraction\nat the higher scale.",
    "start": "1648870",
    "end": "1657530"
  },
  {
    "text": "But we have to start\nsomewhere. And we're going to start by\nthinking about, how do you think about abstraction and\nmodularity at the micro scale?",
    "start": "1657530",
    "end": "1666230"
  },
  {
    "text": "Special note about\nprogramming. So what we are trying to do is,\nin the first two weeks,",
    "start": "1666230",
    "end": "1674640"
  },
  {
    "text": "ramp everybody up to some level\nof software security,",
    "start": "1674640",
    "end": "1680000"
  },
  {
    "text": "where you feel comfortable. So the first two weeks of this\ncourse is intended to make you",
    "start": "1680000",
    "end": "1687570"
  },
  {
    "text": "comfortable with programming. We don't assume you've done\nextensive programming before. ",
    "start": "1687570",
    "end": "1694750"
  },
  {
    "text": "We want you to become\ncomfortable that you're not behind. And that's the focus of the\nfirst two weeks' exercises.",
    "start": "1694750",
    "end": "1704060"
  },
  {
    "text": "If you have little or no\nprevious background, if you are uncomfortable, please do\nthe Python tutor exercises.",
    "start": "1704060",
    "end": "1712990"
  },
  {
    "text": "If you have not -- if you do not have a lot of\nexperience programming, if",
    "start": "1712990",
    "end": "1718240"
  },
  {
    "text": "you're uncomfortable with the\nexpectation that you can do programming, do that first.",
    "start": "1718240",
    "end": "1726240"
  },
  {
    "text": "That takes priority over all the\nother assignments during the first two weeks.",
    "start": "1726240",
    "end": "1732350"
  },
  {
    "text": "In particular, if you're\nuncomfortable, we will run a special Python help\nsession on Sunday.",
    "start": "1732350",
    "end": "1740580"
  },
  {
    "text": "And if you attend that, you\ncan get a free extension. ",
    "start": "1740580",
    "end": "1748140"
  },
  {
    "text": "The idea is completing the tutor\nexercises is intended to make you feel comfortable that\nyou have the software",
    "start": "1748140",
    "end": "1754919"
  },
  {
    "text": "background to finish the\nrest of the course. Do that first.",
    "start": "1754920",
    "end": "1760639"
  },
  {
    "text": "We will forgive falling behind\nin other things so that you",
    "start": "1760640",
    "end": "1766000"
  },
  {
    "text": "feel comfortable with\nprogramming. If, at the end of two weeks, you\nstill feel uncomfortable,",
    "start": "1766000",
    "end": "1774649"
  },
  {
    "text": "we have a deal with 6.00, the\nPython programming class, that",
    "start": "1774650",
    "end": "1780780"
  },
  {
    "text": "they will allow you to switch\nyour registration from 6.01 to 6.00.",
    "start": "1780780",
    "end": "1786360"
  },
  {
    "text": "But that expires Valentine's\nDay. [LAUGHTER]",
    "start": "1786360",
    "end": "1791809"
  },
  {
    "text": "So you have to make up your mind\nbefore Valentine's Day if you'd like to use that option.",
    "start": "1791810",
    "end": "1797020"
  },
  {
    "text": "So the idea is we'd like you\nto be comfortable with programming. If you haven't programmed\nbefore, do the",
    "start": "1797020",
    "end": "1803750"
  },
  {
    "text": "Python tutor exercises. Go to software lab. Go to design lab, but work\non the tutor exercises.",
    "start": "1803750",
    "end": "1810350"
  },
  {
    "text": "The staff will help\nyou with them. You can go to office hours. There's office hours listed\non the home page.",
    "start": "1810350",
    "end": "1818409"
  },
  {
    "text": "You should try to become\ncomfortable, and you should try to set as your goal -- I'm going to be comfortable\nbefore Valentine's Day.",
    "start": "1818410",
    "end": "1825510"
  },
  {
    "text": "And if you're not, talk to a\nstaff member about that. ",
    "start": "1825510",
    "end": "1832320"
  },
  {
    "text": "OK, so what do I want you to\nknow about programming? Well, we're going\nto use Python.",
    "start": "1832320",
    "end": "1839300"
  },
  {
    "text": "We selected Python because it's\nvery simple and because",
    "start": "1839300",
    "end": "1846390"
  },
  {
    "text": "it lets us illustrate some\nvery important ideas in software engineering in\na very simple context.",
    "start": "1846390",
    "end": "1855120"
  },
  {
    "text": "That's the reason. One of the reasons that it's\nsimple is that it's an",
    "start": "1855120",
    "end": "1861320"
  },
  {
    "text": "interpreter.  After some initialization, the\nbehavior of Python is to fall",
    "start": "1861320",
    "end": "1870020"
  },
  {
    "text": "into an interpreter loop. The interpreter loop is, ask the\nuser what he would like me",
    "start": "1870020",
    "end": "1876450"
  },
  {
    "text": "to do, read what the user types,\nfigure out what they're",
    "start": "1876450",
    "end": "1884370"
  },
  {
    "text": "talking about, and print\nthe result, repeat-- very simple. What that means is that you\ncan learn by doing.",
    "start": "1884370",
    "end": "1892590"
  },
  {
    "text": " That's one of the points of\ntoday's software lab.",
    "start": "1892590",
    "end": "1898760"
  },
  {
    "text": "You can simply walk\nup to a computer, type the word python--",
    "start": "1898760",
    "end": "1903940"
  },
  {
    "text": "what you type is in red. Type the word \"python.\" It\nwill prompt you, so this",
    "start": "1903940",
    "end": "1911380"
  },
  {
    "text": "chevron, that says, I'd\nlike you to tell me something to do. I have nothing to do.",
    "start": "1911380",
    "end": "1917550"
  },
  {
    "text": "If you type \"2,\" Python tries\nto interpret that. In this particular case,\nPython says, oh, I see.",
    "start": "1917550",
    "end": "1925000"
  },
  {
    "text": "That's a primitive data item. That's an integer. This person wants me to\nunderstand an integer.",
    "start": "1925000",
    "end": "1930860"
  },
  {
    "text": "And so it will echo 2,\nindicating that it thinks you",
    "start": "1930860",
    "end": "1937040"
  },
  {
    "text": "want it to understand\na simple integer.  Similarly, if you type 5.7,\nit says, oh, I got that.",
    "start": "1937040",
    "end": "1945000"
  },
  {
    "text": "That's a float. The person wants me\nto remember a floating point number.",
    "start": "1945000",
    "end": "1951159"
  },
  {
    "text": "And it will similarly\necho the float. Now, of course, there's no\nexact representation for",
    "start": "1951160",
    "end": "1960550"
  },
  {
    "text": "floats, right? There's too many\nof them, right? There's a lot of them. There's even more floats than\nthere are ints, right?",
    "start": "1960550",
    "end": "1968149"
  },
  {
    "text": "So it has an approximation. So it will print its\napproximation to the float",
    "start": "1968150",
    "end": "1974809"
  },
  {
    "text": "that it thinks you are\ninterested in.  If you type a string, \"Hello,\"\nit'll say, oh, primitive data",
    "start": "1974810",
    "end": "1984520"
  },
  {
    "text": "structure, string. And it'll print out\nthat string.",
    "start": "1984520",
    "end": "1989760"
  },
  {
    "text": "So the idea is one of the\nfeatures of Python that makes it easy to learn is the fact\nthat it's interpreter based.",
    "start": "1989760",
    "end": "1996410"
  },
  {
    "text": "You can play around. You can learn by doing. Now, of course, if the only\nthing it did was simple data",
    "start": "1996410",
    "end": "2003070"
  },
  {
    "text": "structures, it would\nnot be very useful.  So the next more complex thing\nthat it can do is think about",
    "start": "2003070",
    "end": "2012010"
  },
  {
    "text": "combinations. If you type \"2 + 3,\" it\nsays, oh, I got it.",
    "start": "2012010",
    "end": "2018130"
  },
  {
    "text": "This person's interested\nin a combination. I should combine by the plus\noperator two ints, 2 and 3.",
    "start": "2018130",
    "end": "2026250"
  },
  {
    "text": "Oh, and if I do that, if I\ncombine by the plus operator two and three, I'll get 5. So it prints 5.",
    "start": "2026250",
    "end": "2032640"
  },
  {
    "text": "So that's a way you know that\nit interprets \"2 + 3\" as 5.",
    "start": "2032640",
    "end": "2039120"
  },
  {
    "text": "Similarly here, except\nI've mixed types. \"5.7 + 3,\" it says, oh, this\nuser wants me to apply the",
    "start": "2039120",
    "end": "2048710"
  },
  {
    "text": "plus operator on a\nfloat and an int. OK, well I'll upgrade\nthe int to a float.",
    "start": "2048710",
    "end": "2055840"
  },
  {
    "text": "I'll do the float version, and\nI'll get this, which is its representation of 8.7.",
    "start": "2055840",
    "end": "2066149"
  },
  {
    "text": "So the idea is that it will\nfirst try to interpret what you're saying as a\nsimple data type.",
    "start": "2066150",
    "end": "2071600"
  },
  {
    "text": "If that works, it prints the\nresult to tell you what it thinks is going on. It then will try to interpret\nit as an expression.",
    "start": "2071600",
    "end": "2079679"
  },
  {
    "text": "And sometimes, the expressions\nwon't makes sense. In particular, if you try to add\nan int to a string, it's",
    "start": "2079679",
    "end": "2086339"
  },
  {
    "text": "going to say, huh? And over the course of the first\ntwo weeks, we hope that you get familiar with\ninterpreting",
    "start": "2086340",
    "end": "2092888"
  },
  {
    "text": "this kind of mess. That's Python's attempt to tell\nyou what it was trying to",
    "start": "2092889",
    "end": "2099430"
  },
  {
    "text": "do on your behalf and can't\nfigure out what you're talking about. ",
    "start": "2099430",
    "end": "2107039"
  },
  {
    "text": "OK, so that was simple. But it already illustrates\nsomething that's very important, and that's the\nidea of a composition.",
    "start": "2107040",
    "end": "2116730"
  },
  {
    "text": "So the way Python works, the\nfact that when you added 3 to",
    "start": "2116730",
    "end": "2122306"
  },
  {
    "text": "2 it came out 5, what we were\ndoing was composing",
    "start": "2122306",
    "end": "2127950"
  },
  {
    "text": "complicated-- well, potentially complicated\n(that was pretty simple) -- potentially complicated\nexpressions and reducing them",
    "start": "2127950",
    "end": "2136470"
  },
  {
    "text": "to a single data structure.  And so that means that, in some\nsense, this operation, 3",
    "start": "2136470",
    "end": "2146190"
  },
  {
    "text": "times 8, can be thought of as\nexactly the same as if the",
    "start": "2146190",
    "end": "2153030"
  },
  {
    "text": "user had typed in 24. Whenever you can substitute\nfor a complex expression a",
    "start": "2153030",
    "end": "2162570"
  },
  {
    "text": "simpler thing, we say that the\nsystem is compositional. That's a very powerful idea.",
    "start": "2162570",
    "end": "2170290"
  },
  {
    "text": "Even though it's simple, it's\na very powerful idea. And it's an idea that\nyou all know.",
    "start": "2170290",
    "end": "2176119"
  },
  {
    "text": "You've seen it before in\nalgebra, in arithmetic. So in arithmetic expressions,\nyou can think about how the",
    "start": "2176120",
    "end": "2184680"
  },
  {
    "text": "sum of two integers is an int.  That's a closure.",
    "start": "2184680",
    "end": "2190410"
  },
  {
    "text": "That's a kind of a combination\nthat makes the system compositional and that\nprovides a layer of",
    "start": "2190410",
    "end": "2198220"
  },
  {
    "text": "hierarchical thinking so that,\nin your head, even though it says 3 times 8, you don't need\nto remember that anymore.",
    "start": "2198220",
    "end": "2204510"
  },
  {
    "text": "You can say, oh, for any\npurposes that follow, I might just as well think of\n3 times 8 as being a",
    "start": "2204510",
    "end": "2209880"
  },
  {
    "text": "single integer, 24. It's part of many other kinds\nof systems, for example,",
    "start": "2209880",
    "end": "2218450"
  },
  {
    "text": "natural language. The simplest example in natural\nlanguage is that you",
    "start": "2218450",
    "end": "2223810"
  },
  {
    "text": "can think about \"Apples\nare good as snacks\". \"Apples\" is a noun. It's a plural noun.",
    "start": "2223810",
    "end": "2231380"
  },
  {
    "text": "Or you could substitute \"Apples\nand oranges\", and it makes complete sense within\nthat same structure.",
    "start": "2231380",
    "end": "2238039"
  },
  {
    "text": "So \"Apples and oranges\nare good as snacks\". The combination of \"apples\" and\n\"oranges\" works in every",
    "start": "2238040",
    "end": "2247510"
  },
  {
    "text": "way from the point of view of\nthe grammar in the same way that a simple noun,\n\"apples,\" worked.",
    "start": "2247510",
    "end": "2256390"
  },
  {
    "text": "What we would like to do is use\nthat idea as the starting point for a more general\ncompositional system.",
    "start": "2256390",
    "end": "2263590"
  },
  {
    "text": " And a good way to think about\nthat is by way of names.",
    "start": "2263590",
    "end": "2272210"
  },
  {
    "text": "What if we had some sequence of\noperations that we think is particularly important so that\nwe would like to somehow",
    "start": "2272210",
    "end": "2280220"
  },
  {
    "text": "canonize that so that,\nsubsequently, we can use that sequence of operations easily?",
    "start": "2280220",
    "end": "2287960"
  },
  {
    "text": "Python provides a very\nsimple way to do it. Every programming\nlanguage does. It's not unique to Python.",
    "start": "2287960",
    "end": "2294550"
  },
  {
    "text": "But the idea is -- so here's an example. \"2 times 2\" --",
    "start": "2294550",
    "end": "2299640"
  },
  {
    "text": "I'm squaring 2 and get\n4. \"3 times 3\" -- I'm squaring 3, and\nI'm getting 9.",
    "start": "2299640",
    "end": "2304970"
  },
  {
    "text": "\"8 plus 4 times 8 plus 4\",\nI'm squaring \"8 plus 4\". \"8 plus 4\", well, I can\nthink of that as 12.",
    "start": "2304970",
    "end": "2311299"
  },
  {
    "text": "I'm squaring 12, I'm\ngetting 144. The thing I'm trying to\nillustrate there is the notion",
    "start": "2311300",
    "end": "2317280"
  },
  {
    "text": "of squaring. Squaring is a sequence of\noperations that I would like",
    "start": "2317280",
    "end": "2323970"
  },
  {
    "text": "to be able to canonize as a\nsingle entity so that, in",
    "start": "2323970",
    "end": "2329040"
  },
  {
    "text": "subsequent programs, I can\nthink of the squaring operation as a single\noperation just",
    "start": "2329040",
    "end": "2334880"
  },
  {
    "text": "like I think of times. The way we say that in Python\nis \"define square of x to be",
    "start": "2334880",
    "end": "2341460"
  },
  {
    "text": "return x squared\". ",
    "start": "2341460",
    "end": "2347190"
  },
  {
    "text": "Then, having made that\ndefinition, I can say \"square of 6\", and the answer is 36.",
    "start": "2347190",
    "end": "2354039"
  },
  {
    "text": "OK, this is a very small step. But it illustrates a very\nimportant point, the idea being that Python provides\na compositional facility.",
    "start": "2354040",
    "end": "2363579"
  },
  {
    "text": " And it's hierarchical.",
    "start": "2363580",
    "end": "2368880"
  },
  {
    "text": " Having defined square, I can use\nsquare just as though it",
    "start": "2368880",
    "end": "2375240"
  },
  {
    "text": "were a primitive operator. And I can use square to define\nhigher level operations.",
    "start": "2375240",
    "end": "2384840"
  },
  {
    "text": "So for example, what if I were\ninterested in doing lots of sums of squares? Say I'm Pythagoreas, right?",
    "start": "2384840",
    "end": "2391960"
  },
  {
    "text": "So I might want to add the\nsquare of 2 and the square of 4 to get 20, or the square\nof 3 with the",
    "start": "2391960",
    "end": "2398720"
  },
  {
    "text": "square of 4 to get 25. Using that simple idea of\ncomposition, we can write a",
    "start": "2398720",
    "end": "2406810"
  },
  {
    "text": "new program, sumOfSquares. sumOfSquares takes two\narguments, x and y.",
    "start": "2406810",
    "end": "2413540"
  },
  {
    "text": "And it returns the square of\nx and the square of y. SumOfSquares doesn't\ncare about how",
    "start": "2413540",
    "end": "2419530"
  },
  {
    "text": "you compute the square. It trusts that square knows\nhow to do that.",
    "start": "2419530",
    "end": "2425150"
  },
  {
    "text": "So the work is smaller. The idea is that square\ntakes care of",
    "start": "2425150",
    "end": "2432170"
  },
  {
    "text": "squaring single numbers. sumOfSquares doesn't have to\nknow how to square numbers.",
    "start": "2432170",
    "end": "2439190"
  },
  {
    "text": "It just needs to know how to\nmake a sum of squares.",
    "start": "2439190",
    "end": "2444390"
  },
  {
    "text": "So what we've done is we've\nbroken a task, which was not very complicated, but the whole\nidea is hierarchical.",
    "start": "2444390",
    "end": "2452560"
  },
  {
    "text": "We've taken a problem and broken\nit into two pieces. We factored the problem into\nhow do you do a square, and",
    "start": "2452560",
    "end": "2459440"
  },
  {
    "text": "how do you sum squares.  And the idea, then, is that this\nhierarchical structure is",
    "start": "2459440",
    "end": "2467200"
  },
  {
    "text": "a way of building complex\nsystems out of simpler parts.",
    "start": "2467200",
    "end": "2472920"
  },
  {
    "text": " So that's the idea of how you\nwould build programs that are",
    "start": "2472920",
    "end": "2483450"
  },
  {
    "text": "compositional.  Python also provides a utility\nfor making lists, for making",
    "start": "2483450",
    "end": "2492430"
  },
  {
    "text": "data structures that\nare compositional. ",
    "start": "2492430",
    "end": "2499950"
  },
  {
    "text": "The most primitive is a list. So in Python, you can\nspecify a list.",
    "start": "2499950",
    "end": "2508569"
  },
  {
    "text": "Here's a list of integers. So the list says, beginning\nlist, end of",
    "start": "2508570",
    "end": "2513860"
  },
  {
    "text": "list, elements of list. So there's five elements\nin the list, the integers 1, 2, 3, 4, 5. ",
    "start": "2513860",
    "end": "2520940"
  },
  {
    "text": "Python doesn't care what the\nelements of a list are.",
    "start": "2520940",
    "end": "2527310"
  },
  {
    "text": "We'll see in a minute that\nthat's really important. But for the time being, the\nsimplest thing that you can",
    "start": "2527310",
    "end": "2533520"
  },
  {
    "text": "imagine is a heterogeneous\nlist. It's not critical that the list\ncontain just integers.",
    "start": "2533520",
    "end": "2541030"
  },
  {
    "text": "Here's a list that contains\nan int, a string, an int, and a string. Python doesn't care.",
    "start": "2541030",
    "end": "2546810"
  },
  {
    "text": "It's a list that has\nfour elements. The first element's an int. The second element's a\nstring, et cetera.",
    "start": "2546810",
    "end": "2554119"
  },
  {
    "text": "Here's an even more\ncomplex example. Here's a list of lists. ",
    "start": "2554120",
    "end": "2561319"
  },
  {
    "text": "How many elements are\nin that list?",
    "start": "2561320",
    "end": "2566860"
  },
  {
    "text": "Three. How many elements are\nin that list?",
    "start": "2566860",
    "end": "2573030"
  },
  {
    "text": "So the idea is that you can\nbuild more complex data structures out of simple ones.",
    "start": "2573030",
    "end": "2579660"
  },
  {
    "text": "That's the idea of compositional\nfactoring applied to data. ",
    "start": "2579660",
    "end": "2587840"
  },
  {
    "text": "Just like it was important when\nwe were thinking about procedures, to associate\nnames with procedures--",
    "start": "2587840",
    "end": "2596350"
  },
  {
    "text": "that's what \"def\" did-- we can also think about\nassociating names with data",
    "start": "2596350",
    "end": "2602360"
  },
  {
    "text": "structures. And that's what we use something\nthat Python calls a variable for.",
    "start": "2602360",
    "end": "2609540"
  },
  {
    "text": "So I can say \"b is 3\". And that associates the data\nitem, 3, with the label, b.",
    "start": "2609540",
    "end": "2619990"
  },
  {
    "text": "I can say, \"x is 5 times 2.2\". Python will figure out\nwhat I mean by the",
    "start": "2619990",
    "end": "2626310"
  },
  {
    "text": "expression on the right. It'll figure out that I'm\ncomposing by using the star",
    "start": "2626310",
    "end": "2632480"
  },
  {
    "text": "operator, which is multiply, an\ninteger and a float, which will give me a float. The answer to that's going to\nbe a floating point number.",
    "start": "2632480",
    "end": "2640780"
  },
  {
    "text": "And it will assign a label, x,\nto that floating point number.",
    "start": "2640780",
    "end": "2646650"
  },
  {
    "text": "You can have a more complicated\nlist, a data structure, and associate\nthe name y with it.",
    "start": "2646650",
    "end": "2653250"
  },
  {
    "text": "Then, having associated the name\ny, you get many of the same benefits of associating a\nname with a data structure",
    "start": "2653250",
    "end": "2659590"
  },
  {
    "text": "that we got previously\nin associating a name with an operation.",
    "start": "2659590",
    "end": "2665480"
  },
  {
    "text": "So we can say, y(0). And what that means is, what's\nthe zero-th elements of the",
    "start": "2665480",
    "end": "2672680"
  },
  {
    "text": "data structure, y? So the zero-th element of\nthe data structure, y, is a list, [1, 2, 3].",
    "start": "2672680",
    "end": "2678760"
  },
  {
    "text": " Python has some funky\nnotations.",
    "start": "2678760",
    "end": "2685980"
  },
  {
    "text": "The -1 element is\nthe last one. So the -1th element\nof y is [7, 8, 9].",
    "start": "2685980",
    "end": "2691470"
  },
  {
    "text": " And it's completely\nhierarchical.",
    "start": "2691470",
    "end": "2697270"
  },
  {
    "text": "If I asked for the -1 element\nof y, I get [7, 8, 9]. But then, if I asked for the\nfirst element of that",
    "start": "2697270",
    "end": "2702770"
  },
  {
    "text": "result, I get 8. OK?",
    "start": "2702770",
    "end": "2708220"
  },
  {
    "text": "Everything is clear?  OK, just to make sure everything\nis clear, I want to",
    "start": "2708220",
    "end": "2715030"
  },
  {
    "text": "ask you a question. But to kick off the idea of\nworking together, I'd like you to think about this question\nwith your neighbor.",
    "start": "2715030",
    "end": "2721670"
  },
  {
    "text": "So before thinking about this\nquestion, everybody stand up.",
    "start": "2721670",
    "end": "2727650"
  },
  {
    "text": "Introduce yourself\nto your neighbor. [AUDIENCE TALKS]",
    "start": "2727650",
    "end": "2794430"
  },
  {
    "text": "So now, I'd like you to each\ndiscuss with your neighbor the",
    "start": "2794430",
    "end": "2803869"
  },
  {
    "text": "list that is best represented\nby which of the following figures, 1, 2, 3, 4, or 5,\nor none of the above.",
    "start": "2803870",
    "end": "2809840"
  },
  {
    "text": "And in 30 seconds, I'm going\nto ask everybody to raise a hand with a number of fingers\nindicating the right answer.",
    "start": "2809840",
    "end": "2818099"
  },
  {
    "text": "You're allowed to talk. That's the whole point\nof having a partner. [AUDIENCE TALKS]",
    "start": "2818100",
    "end": "2917950"
  },
  {
    "text": "OK.  I'd like everybody now\nto raise their hand.",
    "start": "2917950",
    "end": "2925460"
  },
  {
    "text": "Put up the number of fingers\nthat show the answer. And I want to tally. ",
    "start": "2925460",
    "end": "2932330"
  },
  {
    "text": "Fantastic! Everybody gets it. OK, so which one do you like?",
    "start": "2932330",
    "end": "2937530"
  },
  {
    "text": "AUDIENCE: 3. PROFESSOR: 3 -- why do you like three. Somebody explain this to me?",
    "start": "2937530",
    "end": "2944385"
  },
  {
    "text": "It just looks good? Its pattern recognition.",
    "start": "2944385",
    "end": "2949665"
  },
  {
    "text": "What's good about 3? AUDIENCE: It shows\nthe compositional element of the list.",
    "start": "2949665",
    "end": "2956120"
  },
  {
    "text": "PROFESSOR: Compositional? What is the compositional\nelement in the pictures? ",
    "start": "2956120",
    "end": "2962790"
  },
  {
    "text": "What represents what? OK, 'a' represents a.",
    "start": "2962790",
    "end": "2968369"
  },
  {
    "text": "That's pretty easy, right? So that takes care of the\nbulk of the figures. What's the blue lines\nrepresent?",
    "start": "2968370",
    "end": "2974230"
  },
  {
    "start": "2974230",
    "end": "2979708"
  },
  {
    "text": "Someone else? I didn't quite understand. AUDIENCE: The angles represent\nlike a list.",
    "start": "2979708",
    "end": "2985690"
  },
  {
    "text": "PROFESSOR: They represent\na list. Where is the list\non the figures?",
    "start": "2985690",
    "end": "2991690"
  },
  {
    "text": "AUDIENCE: The vertex? PROFESSOR: The vertex. The vertices are lists.",
    "start": "2991690",
    "end": "2997050"
  },
  {
    "text": "So in 3 -- at the highest level, we have a\nlist that's composed of how",
    "start": "2997050",
    "end": "3003960"
  },
  {
    "text": "many elements? 2. The first element\nof that list is? AUDIENCE: a.",
    "start": "3003960",
    "end": "3009420"
  },
  {
    "text": "PROFESSOR: And the second\nelement of that list is? AUDIENCE: Another list. PROFESSOR: Another list. That's the hierarchical\npart, right?",
    "start": "3009420",
    "end": "3015650"
  },
  {
    "text": "That second list has\nhow many elements? AUDIENCE: 2. PROFESSOR: Fine,\ngood, recurse.",
    "start": "3015650",
    "end": "3021066"
  },
  {
    "text": "You got it. What is the list represented\nby number 2? ",
    "start": "3021066",
    "end": "3029260"
  },
  {
    "text": "A single list with\nfive elements. Square bracket, a, comma, b,\ncomma, c, comma, d, comma, e,",
    "start": "3029260",
    "end": "3036710"
  },
  {
    "text": "square bracket, right? What is the list represented\nby that one?",
    "start": "3036710",
    "end": "3042383"
  },
  {
    "text": "AUDIENCE: Not a list. PROFESSOR: Agh! It's not a list!",
    "start": "3042383",
    "end": "3049660"
  },
  {
    "text": "What is it? Who knows? AUDIENCE: Looking\nat the variable names, it defines them.",
    "start": "3049660",
    "end": "3055286"
  },
  {
    "text": "You have variables. You have a variable a, that\ndefines a list that contains b, and the variable, c, that\ndefines another list that",
    "start": "3055286",
    "end": "3060369"
  },
  {
    "text": "contains d. PROFESSOR: So we could\nmake that a variable. If we said a is a variable that\ncomprises b and c, then",
    "start": "3060370",
    "end": "3069079"
  },
  {
    "text": "we have the problem of how\nwe're going to associate variables and elements into\nthis list, right?",
    "start": "3069080",
    "end": "3077020"
  },
  {
    "text": "So the weird thing about\nthis one and, let's see, that one's weird. This one's also kind of weird.",
    "start": "3077020",
    "end": "3082290"
  },
  {
    "text": "This one's weird because we're\ngiving names to lists in a",
    "start": "3082290",
    "end": "3087470"
  },
  {
    "text": "fashion that's not showed\nup here, right? That's not to say you couldn't\ninvent a meaning.",
    "start": "3087470",
    "end": "3094060"
  },
  {
    "text": "It's just that it doesn't\nmap very well to that representation. Similarly over here, we seem to\nbe giving the name b to the",
    "start": "3094060",
    "end": "3103359"
  },
  {
    "text": "element a, and then the name\nc to the element b. What on earth are you\ntalking about? It's not clear what we're\ndoing their either.",
    "start": "3103360",
    "end": "3110690"
  },
  {
    "text": "So the point is to get you\nthinking about the abstract representation of lists and how\nthat maps into a complex",
    "start": "3110690",
    "end": "3117200"
  },
  {
    "text": "data structure. That was the whole point. OK, so we've talked about,\nthen, four things so far.",
    "start": "3117200",
    "end": "3125920"
  },
  {
    "text": "How do you think about\noperations in a hierarchical fashion. And the idea was composition.",
    "start": "3125920",
    "end": "3133210"
  },
  {
    "text": "We think about composing simple\noperations to make",
    "start": "3133210",
    "end": "3138230"
  },
  {
    "text": "bigger, compound operations. That's a way of saying, there's\nthis set of operations",
    "start": "3138230",
    "end": "3144840"
  },
  {
    "text": "that I want to call foo. So every time I do this\ncomplicated thing that has three pages of code,\nthat's one foo.",
    "start": "3144840",
    "end": "3153830"
  },
  {
    "text": "And that's a way that we can\nthen combined foos in some other horribly complicated\nway to make big foos.",
    "start": "3153830",
    "end": "3162810"
  },
  {
    "text": "So the idea is composition. That's the first idea. The second is associating a name\nwith that composition.",
    "start": "3162810",
    "end": "3171030"
  },
  {
    "text": "That's what \"def\" does--\ndefine name, name of a sub-routine. So we thought about composing\noperations,",
    "start": "3171030",
    "end": "3178030"
  },
  {
    "text": "associating names with them. We composed data in terms of\nlists, and we associated names",
    "start": "3178030",
    "end": "3183710"
  },
  {
    "text": "with those lists in terms\nof variables. The next thing we want to think\nabout is a higher order",
    "start": "3183710",
    "end": "3189030"
  },
  {
    "text": "construct where we would like to\nconglomerate into one data structure both data\nand procedures.",
    "start": "3189030",
    "end": "3198549"
  },
  {
    "text": "Python has a concept called a\nclass that lets us do that. In Python, you make a new class\nby saying to the Python",
    "start": "3198550",
    "end": "3207020"
  },
  {
    "text": "prompt, I want a new class\ncalled Student. And then, under Student, there\nis this thing which we will",
    "start": "3207020",
    "end": "3215940"
  },
  {
    "text": "call an attribute. An attribute to a class is\nsimply a data item associated",
    "start": "3215940",
    "end": "3222599"
  },
  {
    "text": "with the class. And a method-- a method is just a\nprocedure that is",
    "start": "3222600",
    "end": "3230759"
  },
  {
    "text": "associated with the class. So there's this single item\nclass called Student that has",
    "start": "3230760",
    "end": "3238540"
  },
  {
    "text": "one piece of data, its\nattribute, school, and one",
    "start": "3238540",
    "end": "3244860"
  },
  {
    "text": "procedure, which is the method\ncalculateFinalGrade.",
    "start": "3244860",
    "end": "3250230"
  },
  {
    "text": "So then, this is the kind of\ndata structure you might imagine that a registrar\nwould have. It's a way to associate.",
    "start": "3250230",
    "end": "3258119"
  },
  {
    "text": "So the idea here is that\neverybody here is a student. They all have a school.",
    "start": "3258120",
    "end": "3264740"
  },
  {
    "text": "And they all have a way of\ncalculating their final grade. That's a very narrow view that\nmaybe a registrar would have.",
    "start": "3264740",
    "end": "3272809"
  },
  {
    "text": "So classes, having defined\nthem, we can then use the",
    "start": "3272810",
    "end": "3278610"
  },
  {
    "text": "class to define an instance. So an instance is a data\nstructure that inherits all of",
    "start": "3278610",
    "end": "3290430"
  },
  {
    "text": "the structure from the class but\nalso provides a mechanism for having specific data\nassociated with the instance.",
    "start": "3290430",
    "end": "3298950"
  },
  {
    "text": "So in Python, I say\nMary is a student. By mentioning the name of the\nclass and putting parenthesis",
    "start": "3298950",
    "end": "3305480"
  },
  {
    "text": "on it, I say, give me an\ninstance of the student.",
    "start": "3305480",
    "end": "3310510"
  },
  {
    "text": "So now, Mary is a name\nassociated with an instance of",
    "start": "3310510",
    "end": "3315860"
  },
  {
    "text": "the class, Student. John is similarly an instance\nof the class, Student.",
    "start": "3315860",
    "end": "3323760"
  },
  {
    "text": "So both Mary and John\nhave schools. In fact, they're\nboth the same.",
    "start": "3323760",
    "end": "3329430"
  },
  {
    "text": "The school of Mary and the\nschool of John are both MIT. But I can extend the instance\nof Mary to include a new",
    "start": "3329430",
    "end": "3342200"
  },
  {
    "text": "attribute, the section number,\nso that Mary's section number",
    "start": "3342200",
    "end": "3348494"
  },
  {
    "text": "is 3 and John's section\nnumber is 4. So this provides a way-- it's a higher-order concept.",
    "start": "3348495",
    "end": "3355079"
  },
  {
    "text": "We thought of a way to aggregate\noperations into complicated operation, data\ninto complicated data.",
    "start": "3355080",
    "end": "3361140"
  },
  {
    "text": "Classes aggregate data\nand operations.",
    "start": "3361140",
    "end": "3366230"
  },
  {
    "text": "Classes allow us to create\na structure and then generate instances. And then the instances have\naccess to those features that",
    "start": "3366230",
    "end": "3375780"
  },
  {
    "text": "were defined in the class, but\nalso have the ability to define their own unique\nattributes and methods.",
    "start": "3375780",
    "end": "3383800"
  },
  {
    "text": "You can also use a class\nto define a subclass. So here, I'm defining the\nsubclass, Student601.",
    "start": "3383800",
    "end": "3391950"
  },
  {
    "text": "All Student601s are members\nof the class, Student. The reverse is not true.",
    "start": "3391950",
    "end": "3398240"
  },
  {
    "text": "So all Student601 entities\ninherit everything that a Student has.",
    "start": "3398240",
    "end": "3404400"
  },
  {
    "text": "But all 601 students share\nsome other things. Besides having a school which\nall students have, 601",
    "start": "3404400",
    "end": "3412170"
  },
  {
    "text": "students also have a lecture\nday, a lecture time, and a method for calculating\ntutor scores. ",
    "start": "3412170",
    "end": "3419349"
  },
  {
    "text": "Not all students have a method\nfor calculating tutor scores. But members of the class\nStudent601 do.",
    "start": "3419350",
    "end": "3426590"
  },
  {
    "text": " So this, again, represents a\nway of organizing data and",
    "start": "3426590",
    "end": "3434470"
  },
  {
    "text": "operations in a way that makes\nit easier to compose higher,",
    "start": "3434470",
    "end": "3440010"
  },
  {
    "text": "bigger, more complex\nstructures.  The final thing that I want\nto talk about today is the",
    "start": "3440010",
    "end": "3447230"
  },
  {
    "text": "specific, gory details for how\nPython manages the association",
    "start": "3447230",
    "end": "3453900"
  },
  {
    "text": "between names and entities. We've already seen\ntwo of those.",
    "start": "3453900",
    "end": "3460840"
  },
  {
    "text": "Naming operations is via \"def.\"\nAnd it gives rise to the name of a procedure.",
    "start": "3460840",
    "end": "3468270"
  },
  {
    "text": "Variables are ways of naming\ndata structures. Now, we've seen a way\nof naming classes.",
    "start": "3468270",
    "end": "3479000"
  },
  {
    "text": "And in fact, it's helpful\nif you understand. So Python associates names and\nentities in a very simple,",
    "start": "3479000",
    "end": "3487680"
  },
  {
    "text": "straightforward fashion. And if you know the ground\nrules, it makes it very easy to deal with. And if you don't know the ground\nrules, it makes it very",
    "start": "3487680",
    "end": "3493310"
  },
  {
    "text": "hard to deal with. So what's the ground rules? Here's the gory details. So Python associates names with\nvalues in what Python",
    "start": "3493310",
    "end": "3502730"
  },
  {
    "text": "calls a binding environment. An environment is just a\nlist that associates",
    "start": "3502730",
    "end": "3510470"
  },
  {
    "text": "a name and an entity. So if you were to type b\nequals 3 what Python is",
    "start": "3510470",
    "end": "3515860"
  },
  {
    "text": "actually doing is it's building\nthis environment.",
    "start": "3515860",
    "end": "3521270"
  },
  {
    "text": "When you type b equals 3, it\nadds to the environment a",
    "start": "3521270",
    "end": "3526357"
  },
  {
    "text": "name, b, and associates that\nname with the integer, 3.",
    "start": "3526357",
    "end": "3534619"
  },
  {
    "text": "When you type x equals 2.2, it\nadds a name, x, and associates",
    "start": "3534620",
    "end": "3541840"
  },
  {
    "text": "it with the float, 2.2. When you say foo is minus 506\ntimes 2, it makes the name,",
    "start": "3541840",
    "end": "3549530"
  },
  {
    "text": "foo, and associates it with\nan int, minus 1012.",
    "start": "3549530",
    "end": "3556762"
  },
  {
    "text": "Then, if you ask Python about\nb, the rule is look it up in",
    "start": "3556762",
    "end": "3562940"
  },
  {
    "text": "the environment and type the\nthing that b refers to.",
    "start": "3562940",
    "end": "3569250"
  },
  {
    "text": "So when you type \"b,\" what\nPython really does is it goes to the environment. It says, do I have some entity\ncalled \"b?\" Well, yes I do.",
    "start": "3569250",
    "end": "3576569"
  },
  {
    "text": "It happens to be an int, 3. So it prints 3. ",
    "start": "3576570",
    "end": "3583170"
  },
  {
    "text": "If you ask, what is \"a?\"\nPython says, OK, in my environment, do I have some\nname, \"a?\" It doesn't find it.",
    "start": "3583170",
    "end": "3595290"
  },
  {
    "text": "So it prints out this cryptic\nmessage that basically says, sorry, guys, I can't find\nsomething called \"a\" in the",
    "start": "3595290",
    "end": "3603160"
  },
  {
    "text": "current environment. That's the key to the way Python\ndoes all name bindings.",
    "start": "3603160",
    "end": "3611300"
  },
  {
    "text": "So in general, there's\na global environment.",
    "start": "3611300",
    "end": "3616390"
  },
  {
    "text": "You start typing to Python. It just starts adding and\nmodifying the bindings in the",
    "start": "3616390",
    "end": "3623800"
  },
  {
    "text": "binding environment. So if you type a equals 3 and\nthen type \"a,\" it'll find 3.",
    "start": "3623800",
    "end": "3629970"
  },
  {
    "text": "If you then type \"b=a+2,\" it\nevaluates the right-hand side",
    "start": "3629970",
    "end": "3636250"
  },
  {
    "text": "relative to the current\nenvironment. So it first looks here.",
    "start": "3636250",
    "end": "3641890"
  },
  {
    "text": "And it says, do I have something\ncalled \"a?\" Ah, yes.",
    "start": "3641890",
    "end": "3647059"
  },
  {
    "text": "It's an integer, 3. Substitute that. Do I know what 2 is?",
    "start": "3647060",
    "end": "3652310"
  },
  {
    "text": "Oh yeah, that's just an int. Do I know what plus is? Oh yeah, that's the thing\nthat combines two ints. So it decides that a plus 2--",
    "start": "3652310",
    "end": "3659800"
  },
  {
    "text": "it evaluates a plus 2 in the\ncurrent environment. It gets 5. And it says, oh, I'm trying\nto do a new equals, a new",
    "start": "3659800",
    "end": "3666830"
  },
  {
    "text": "association, a new variable. Make the name, b, points to this\nevaluated in the current",
    "start": "3666830",
    "end": "3675210"
  },
  {
    "text": "environment. So b gets associated\nwith int 5. ",
    "start": "3675210",
    "end": "3680960"
  },
  {
    "text": "Then, if I do this line, it\nevaluates b plus 1 in the current environment.",
    "start": "3680960",
    "end": "3686920"
  },
  {
    "text": " b is 5 in the current\nenvironment. It adds 1.",
    "start": "3686920",
    "end": "3692390"
  },
  {
    "text": "It gets 6. And then, it says, associate\nthis thing, 6, with b.",
    "start": "3692390",
    "end": "3700210"
  },
  {
    "text": "So it overwrites the b, which\nhad been bound to 5, and b is",
    "start": "3700210",
    "end": "3705849"
  },
  {
    "text": "now bound to 6. OK? So the whole thing, the way it\ntreats variables, the way",
    "start": "3705850",
    "end": "3714210"
  },
  {
    "text": "Python associates a name with\na value in a variable, is evaluate the right-hand side\naccording to the current",
    "start": "3714210",
    "end": "3719930"
  },
  {
    "text": "environment. Then, change the current\nenvironment to reflect the new binding.",
    "start": "3719930",
    "end": "3727410"
  },
  {
    "text": "What it does in the case of\nsub-routines is very similar. ",
    "start": "3727410",
    "end": "3733140"
  },
  {
    "text": "So here's an illustration of the\nlocal environment that is generated by this\npiece of code.",
    "start": "3733140",
    "end": "3739810"
  },
  {
    "text": "When I say a equals 2, it\ngenerates a name in the local environment, a.",
    "start": "3739810",
    "end": "3745090"
  },
  {
    "text": "It evaluates the right-hand\nside and finds 2. So it makes a binding in the\nlocal environment where the",
    "start": "3745090",
    "end": "3752080"
  },
  {
    "text": "name, a, is associated\nwith the integer, 2. Then, I say define square of\nx to be return x squared.",
    "start": "3752080",
    "end": "3759769"
  },
  {
    "text": " That's more complicated.",
    "start": "3759770",
    "end": "3765180"
  },
  {
    "text": "Python says, oh, I'm defining\na new operation. ",
    "start": "3765180",
    "end": "3772840"
  },
  {
    "text": "It's a procedure. The procedure has a formal\nargument, x.",
    "start": "3772840",
    "end": "3780450"
  },
  {
    "text": "It has a body, return\nx times x. I'm going to have to remember\nall of that stuff.",
    "start": "3780450",
    "end": "3787059"
  },
  {
    "text": " So I'm trying to define a new\nprocedure called square.",
    "start": "3787060",
    "end": "3793950"
  },
  {
    "text": "It's going to make a\nbinding for square. So in the future, if somebody\nsays the word square, it'll",
    "start": "3793950",
    "end": "3800830"
  },
  {
    "text": "find out, oh, square I\nremember that one. square, it's a procedure.",
    "start": "3800830",
    "end": "3805859"
  },
  {
    "text": " Just like the binding for a\nvariable might be an int, the",
    "start": "3805860",
    "end": "3812930"
  },
  {
    "text": "binding for a procedure is the\nname of the procedure.",
    "start": "3812930",
    "end": "3819880"
  },
  {
    "text": "Then, in the procedure, which\nis some other data structure outside the environment, it's\ngot to remember the formal",
    "start": "3819880",
    "end": "3827140"
  },
  {
    "text": "parameters-- in this case, x-- and the body. ",
    "start": "3827140",
    "end": "3834000"
  },
  {
    "text": "And for the purpose of\nresolving what do the variables mean, it needs to\nremember what was the binding",
    "start": "3834000",
    "end": "3842100"
  },
  {
    "text": "environment in which this\nsub-routine was defined. So that's this arrow.",
    "start": "3842100",
    "end": "3849470"
  },
  {
    "text": "So this sequence says, make a\nnew binding square, points to a procedure.",
    "start": "3849470",
    "end": "3854789"
  },
  {
    "text": "The procedure has the\nformal argument, x. It has the body return\nx times x.",
    "start": "3854790",
    "end": "3863030"
  },
  {
    "text": "And it has the binding. It came from the environment,\nE1, the current environment.",
    "start": "3863030",
    "end": "3871430"
  },
  {
    "text": "OK, is everybody clear? So the idea is that the\nenvironment associates names with things.",
    "start": "3871430",
    "end": "3877220"
  },
  {
    "text": "The thing could be\na data item, or it could be a procedure. ",
    "start": "3877220",
    "end": "3883540"
  },
  {
    "text": "Then, when you call a procedure,\nit makes a new environment.",
    "start": "3883540",
    "end": "3890270"
  },
  {
    "text": "So what happens, then, when I\ntry to evaluate a form, square of a plus 2?",
    "start": "3890270",
    "end": "3898260"
  },
  {
    "text": "What Python does is it says,\nOK, I need to figure out what square is.",
    "start": "3898260",
    "end": "3904460"
  },
  {
    "text": "So it looks it up in the\nenvironment, and it finds out that square is a procedure. Fine, I know how to deal\nwith procedures.",
    "start": "3904460",
    "end": "3912640"
  },
  {
    "text": "So then, it figures out this\nprocedure has a formal argument, x.",
    "start": "3912640",
    "end": "3917910"
  },
  {
    "text": "Oh, OK, if I'm going to run this\nprocedure, I'm going to have to know what x means.",
    "start": "3917910",
    "end": "3923110"
  },
  {
    "text": "So Python makes a new\nenvironment-- here, it's labelled E2, separate\nfrom the global",
    "start": "3923110",
    "end": "3928760"
  },
  {
    "text": "environment, E1. It makes a new environment\nthat will associate x with something.",
    "start": "3928760",
    "end": "3935630"
  },
  {
    "text": "Doesn't know what it is yet, it\njust knows that this square is a procedure that takes\na formal argument, x.",
    "start": "3935630",
    "end": "3943539"
  },
  {
    "text": "So Python makes a new\nenvironment, E2, with x pointing to something. Then, Python evaluates the\nargument a plus 2 in the",
    "start": "3943540",
    "end": "3952240"
  },
  {
    "text": "environment E1.  You called square of a plus 2\nin the environment of E1.",
    "start": "3952240",
    "end": "3959660"
  },
  {
    "text": "So it figures out what did\nyou mean by a plus 3.",
    "start": "3959660",
    "end": "3965250"
  },
  {
    "text": "Well, you were in the\nenvironment E1. So it means whatever a plus 3\nwould have meant if he had",
    "start": "3965250",
    "end": "3972569"
  },
  {
    "text": "just typed a plus 3 in\nthat environment. So you evaluate a plus\n3 in the environment",
    "start": "3972570",
    "end": "3978940"
  },
  {
    "text": "E1, and you get 5.  So then, this new environment,\nE2, that is set up for this",
    "start": "3978940",
    "end": "3987109"
  },
  {
    "text": "procedure, square, associates\n5 with x. ",
    "start": "3987110",
    "end": "3993220"
  },
  {
    "text": "Now it's ready to\nrun the body. So now, it runs this procedure,\nreturn x times x.",
    "start": "3993220",
    "end": "4001440"
  },
  {
    "text": "But now, what it's trying to\nresolve its variables, it looks it up in E2.",
    "start": "4001440",
    "end": "4008710"
  },
  {
    "text": "So it says, I want to do\nthe procedure, the body, x times x.",
    "start": "4008710",
    "end": "4013790"
  },
  {
    "text": "I need to know what x is, and\nI need to know it twice. Look up what x means, but I\nwill look it up in my E2",
    "start": "4013790",
    "end": "4020570"
  },
  {
    "text": "environment that was built specifically for this procedure. And fortunately, there's\nan x there.",
    "start": "4020570",
    "end": "4026880"
  },
  {
    "text": "So it finds out that x is 5. It multiplies 5 times 5. It gets the answer is 25. It returns 25.",
    "start": "4026880",
    "end": "4033349"
  },
  {
    "text": "And then, it destroys this\nenvironment, E2, because it was only necessary for the time\nwhen it was running the",
    "start": "4033350",
    "end": "4040100"
  },
  {
    "text": "procedure body. Is that clear? ",
    "start": "4040100",
    "end": "4048520"
  },
  {
    "text": "OK, so a slightly more difficult\nexample illustrates",
    "start": "4048520",
    "end": "4053820"
  },
  {
    "text": "what happens whenever everything\nis not defined in the current local environment.",
    "start": "4053820",
    "end": "4059920"
  },
  {
    "text": "What if I type define\nbiz of a? Well, I create a new name in\nthe local environment that",
    "start": "4059920",
    "end": "4070070"
  },
  {
    "text": "points to a procedure. The procedure has a formal\nparameter, a, and a body that",
    "start": "4070070",
    "end": "4075720"
  },
  {
    "text": "returns a plus b. The procedure also was defined\nwithin the environment E1,",
    "start": "4075720",
    "end": "4082470"
  },
  {
    "text": "which I'll keep track of.  Then, if I say b equals 6, that\nmakes a new binding in",
    "start": "4082470",
    "end": "4091069"
  },
  {
    "text": "the global environment,\nb equals 6.",
    "start": "4091070",
    "end": "4096430"
  },
  {
    "text": "Then, if I try to run biz\nof 2, look up biz.",
    "start": "4096430",
    "end": "4103250"
  },
  {
    "text": "Oh, that's a procedure,\nformal parameter, a. Make an environment,\nhas an a in it. What should I put in a?",
    "start": "4103250",
    "end": "4108500"
  },
  {
    "text": "Evaluate the argument, 2. OK, a is 2. Put two here.",
    "start": "4108500",
    "end": "4114528"
  },
  {
    "text": "Now, I'm ready to\nrun the body. Run the body in the\nenvironment, E2.",
    "start": "4114529",
    "end": "4121100"
  },
  {
    "text": "When I run return a plus\nb in E2, I have to",
    "start": "4121100",
    "end": "4126318"
  },
  {
    "text": "first figure out a. Well, that's easy. a is 2.",
    "start": "4126319",
    "end": "4132000"
  },
  {
    "text": "Then, I have to figure out b. What's b? ",
    "start": "4132000",
    "end": "4138509"
  },
  {
    "text": "AUDIENCE: 6? PROFESSOR: 6. So how did you get 6? AUDIENCE: [INAUDIBLE]. PROFESSOR: So this local\nenvironment that was created",
    "start": "4138510",
    "end": "4146479"
  },
  {
    "text": "for the formal parameter has,\nas its parent, E1 because",
    "start": "4146479",
    "end": "4152330"
  },
  {
    "text": "that's where the procedure\nwas defined.  So it doesn't find b in this\nlocal environment.",
    "start": "4152330",
    "end": "4162339"
  },
  {
    "text": "So it goes to the parent. Do you have a \"b?\" And it could,\nin principal, propagate",
    "start": "4162340",
    "end": "4168140"
  },
  {
    "text": "up a chain of environments. So you could construct\nthis hierarchically. So it will resolve bindings in\nthe most recent environment",
    "start": "4168140",
    "end": "4177290"
  },
  {
    "text": "that has that binding. So the answer, then, is that\nwhen you run biz of 2, this b",
    "start": "4177290",
    "end": "4185490"
  },
  {
    "text": "gets associated with\nthat b, OK?",
    "start": "4185490",
    "end": "4191290"
  },
  {
    "text": "So that's how the environments\nwork for simple procedures and simple data structures.",
    "start": "4191290",
    "end": "4197869"
  },
  {
    "text": "It's very similar for the way\nit works with classes. So imagine that I had this\ndata, and I wanted to",
    "start": "4197870",
    "end": "4205179"
  },
  {
    "text": "represent that in Python. What I might do is look at\nthe common features.",
    "start": "4205180",
    "end": "4210330"
  },
  {
    "text": "The courses are all the same. The rooms are all the same. The buildings are\nall the same. The ages are highly variable.",
    "start": "4210330",
    "end": "4216690"
  },
  {
    "text": "So I might want to create\na class that has the common data.",
    "start": "4216690",
    "end": "4221860"
  },
  {
    "text": "So I might do this-- class Staff601. The course is 601.",
    "start": "4221860",
    "end": "4227480"
  },
  {
    "text": "The building's 34. The room is this. The way Python implements a\nclass is as an environment.",
    "start": "4227480",
    "end": "4238570"
  },
  {
    "text": "Executing this set of statements\nbuilds the class environment.",
    "start": "4238570",
    "end": "4244050"
  },
  {
    "text": "This is it. It's a list of bindings. Here, I'm binding the\nname, course, to the",
    "start": "4244050",
    "end": "4250429"
  },
  {
    "text": "string, 601, et cetera. If there were a method, I\nwould do the same thing, except it would look like\na procedure then.",
    "start": "4250430",
    "end": "4259070"
  },
  {
    "text": "So this creates the Staff601\nenvironment.",
    "start": "4259070",
    "end": "4266329"
  },
  {
    "text": "Staff601, because I executed\nthis class statement, that",
    "start": "4266330",
    "end": "4272300"
  },
  {
    "text": "creates a binding in the local\nenvironment, Staff601, which",
    "start": "4272300",
    "end": "4278710"
  },
  {
    "text": "points to the new environment. So now, in the future, when\nPython encounters the name",
    "start": "4278710",
    "end": "4286320"
  },
  {
    "text": "Staff601, it will discover that\nthat's an environment.",
    "start": "4286320",
    "end": "4293429"
  },
  {
    "text": "Python implements classes\nas environments.",
    "start": "4293430",
    "end": "4299330"
  },
  {
    "text": "So now, when I want to access\nelements within a class, I use",
    "start": "4299330",
    "end": "4306600"
  },
  {
    "text": "a special notation. It's a dot notation. Python regards dots as ways of\nnavigating an environment.",
    "start": "4306600",
    "end": "4316480"
  },
  {
    "text": "When Python parses staff.room,\nit looks up Staff601 in the",
    "start": "4316480",
    "end": "4322310"
  },
  {
    "text": "current environment. If it finds an environment, it\nthen says, oh, I know about",
    "start": "4322310",
    "end": "4328540"
  },
  {
    "text": "this .room thing. All I do is I look up\nthe room name in",
    "start": "4328540",
    "end": "4334470"
  },
  {
    "text": "the environment Staff601. And when it does that, it\ngets the answer 501.",
    "start": "4334470",
    "end": "4341100"
  },
  {
    "text": "And the same sort of\nthing happens here. It looks up Staff601. It finds an environment.",
    "start": "4341100",
    "end": "4346970"
  },
  {
    "text": "It looks up coolness. It finds out there\nis no such thing. Well, no, that's not true.",
    "start": "4346970",
    "end": "4352699"
  },
  {
    "text": "So it creates coolness within\n601 and assigns an",
    "start": "4352700",
    "end": "4360250"
  },
  {
    "text": "integer, 11, to it. So then, the way Python treats\nmethods is completely",
    "start": "4360250",
    "end": "4371660"
  },
  {
    "text": "analogous-- oh, excuse me, instances. I'm doing instances first.",
    "start": "4371660",
    "end": "4378059"
  },
  {
    "text": "If I make pat be an instance\nof Staff601, pat is an",
    "start": "4378060",
    "end": "4384490"
  },
  {
    "text": "instance of the class\nStaff601. pat is implemented as\nan environment.",
    "start": "4384490",
    "end": "4394590"
  },
  {
    "text": "So when I make pat, pat points\nto a new environment-- here, E3.",
    "start": "4394590",
    "end": "4400340"
  },
  {
    "text": "The parent of E3 is the class\nthat pat belongs to, which is, here, E2.",
    "start": "4400340",
    "end": "4405570"
  },
  {
    "text": " And when I make the instance,\nit's empty.",
    "start": "4405570",
    "end": "4411119"
  },
  {
    "text": "But now, if I ask what is\npat.course, well, pat points",
    "start": "4411120",
    "end": "4416150"
  },
  {
    "text": "to this environment. Does this environment have\nsomething called a course? No. Does the parent? Yes.",
    "start": "4416150",
    "end": "4422030"
  },
  {
    "text": " Course is bound to\nthe string 601. So pat.course is 601\njust the same as",
    "start": "4422030",
    "end": "4430220"
  },
  {
    "text": "Staff601.course had been 601. pat is an instance.",
    "start": "4430220",
    "end": "4436639"
  },
  {
    "text": "It's a new environment\nwith the class environment as its parent.",
    "start": "4436640",
    "end": "4442405"
  },
  {
    "text": " You can add attributes\nto instances.",
    "start": "4442405",
    "end": "4452980"
  },
  {
    "text": "And all that does is populate\nthe environment associated with the instance.",
    "start": "4452980",
    "end": "4461220"
  },
  {
    "text": "You can add methods\nto classes. And that does the same thing.",
    "start": "4461220",
    "end": "4468650"
  },
  {
    "text": "So here, I've got the class,\nStaff601, which has a method, salutation, instance\nvariables, course,",
    "start": "4468650",
    "end": "4475930"
  },
  {
    "text": "building, and room. So when I build that structure,\nStaff601 points to",
    "start": "4475930",
    "end": "4482300"
  },
  {
    "text": "an environment that contains\nsalutation, which is a procedure, in addition to a\nbunch of instance variables.",
    "start": "4482300",
    "end": "4490450"
  },
  {
    "text": " So now, all of the rules that\nwe've talked about with regard",
    "start": "4490450",
    "end": "4496480"
  },
  {
    "text": "to environments apply\nnow to this class. So in particular, I can say\nStaff601 salutation of pat.",
    "start": "4496480",
    "end": "4507580"
  },
  {
    "text": "When Python parses Staff601,\nit finds an environment. ",
    "start": "4507580",
    "end": "4515710"
  },
  {
    "text": "It says dot salutation. Oh, I know how to do that. Within the environment,\nStaff601, look for a binding",
    "start": "4515710",
    "end": "4525440"
  },
  {
    "text": "for the name salutation. Do I find one? Well, yeah, there it is.",
    "start": "4525440",
    "end": "4531110"
  },
  {
    "text": "It points to a procedure. So staff dot salutation\nis a procedure. Do just the same things that\nwe would have done with a",
    "start": "4531110",
    "end": "4538590"
  },
  {
    "text": "simple procedure. The only difference\nhere is that the procedure came from a class. ",
    "start": "4538590",
    "end": "4545200"
  },
  {
    "text": "In this particular case, the\nsub-routine that I define has",
    "start": "4545200",
    "end": "4554040"
  },
  {
    "text": "a formal parameter, self. So then, that's going to have\nto build when I try to",
    "start": "4554040",
    "end": "4561059"
  },
  {
    "text": "evaluate it. That has to build a binding for\nself, which is set to pat.",
    "start": "4561060",
    "end": "4570559"
  },
  {
    "text": "pat was an environment. So self gets pointed to pat.",
    "start": "4570560",
    "end": "4576130"
  },
  {
    "text": "So now, when I run\nStaff601.salutation on pat, it",
    "start": "4576130",
    "end": "4581250"
  },
  {
    "text": "behaves as though that generic\nmethod was applied to the instance pat.",
    "start": "4581250",
    "end": "4586600"
  },
  {
    "text": " We'll do that a lot. It's a little bit\nof redundancy.",
    "start": "4586600",
    "end": "4592410"
  },
  {
    "text": "We know that pat is a\nmember of Staff601.",
    "start": "4592410",
    "end": "4598110"
  },
  {
    "text": "So we will define a special\nform-- or I should say, Python defines a special form-- that\nmakes that easy to say.",
    "start": "4598110",
    "end": "4604610"
  },
  {
    "text": "This is the way we will usually\nsay, the instance pat should run the class method\nsalutation on itself.",
    "start": "4604610",
    "end": "4616790"
  },
  {
    "text": "This is simply a simplified\nnotation that means precisely that, OK?",
    "start": "4616790",
    "end": "4626520"
  },
  {
    "text": "So what we covered today, then,\nwas supposed to be the most elementary ideas in how\nyou construct modular",
    "start": "4626520",
    "end": "4635410"
  },
  {
    "text": "programs, Modularity\nat the small scale.",
    "start": "4635410",
    "end": "4640500"
  },
  {
    "text": "How do you make operations that\nare hierarchical, data structures, and classes?",
    "start": "4640500",
    "end": "4646270"
  },
  {
    "text": "What we will do for the rest of\nthe week is practice those activities. ",
    "start": "4646270",
    "end": "4654657"
  }
]