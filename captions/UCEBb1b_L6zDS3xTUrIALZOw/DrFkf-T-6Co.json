[
  {
    "start": "0",
    "end": "5892"
  },
  {
    "text": "[MUSIC PLAYING]",
    "start": "5892",
    "end": "21947"
  },
  {
    "text": "PROFESSOR: Well, so\nfar in this course we've been talking\nabout procedures, and then just to remind\nyou of this framework",
    "start": "21947",
    "end": "29132"
  },
  {
    "text": "that we introduced for\ntalking about languages, we talked about the\nprimitive things that are built into the system.",
    "start": "29132",
    "end": "36040"
  },
  {
    "text": "We mentioned some\nmeans of combination by which you take\nthe primitive things and you make more\ncomplicated things.",
    "start": "36040",
    "end": "42327"
  },
  {
    "text": "And then we talked about\nthe means of abstraction, how you can take those\ncomplicated things and name them so you can use\nthem as simple building blocks.",
    "start": "42327",
    "end": "49584"
  },
  {
    "text": "And then last time you saw\nwe went even beyond that. We saw that by using\nhigher order procedures,",
    "start": "49584",
    "end": "55570"
  },
  {
    "text": "you can actually express general\nmethods for computing things. Like the method\nof doing something by fixed points, or\nNewton's method, and so",
    "start": "55570",
    "end": "63700"
  },
  {
    "text": "the incredible\nexpressive power you can get just by combining\nthese means of abstraction.",
    "start": "63700",
    "end": "68729"
  },
  {
    "text": "And the crucial\nidea in all of this is the one that we\nbuild a layered system.",
    "start": "68730",
    "end": "75210"
  },
  {
    "text": "So for instance, if we're\nwriting the square root procedure, somewhere the\nsquare root procedure",
    "start": "75210",
    "end": "83080"
  },
  {
    "text": "uses a procedure\ncalled good-enough,",
    "start": "83080",
    "end": "91490"
  },
  {
    "text": "and between those there is some\nsort of abstraction boundary. ",
    "start": "91490",
    "end": "98060"
  },
  {
    "text": "It's almost as if we go out\nand in writing square root, we go and make a\ncontract with George,",
    "start": "98060",
    "end": "105119"
  },
  {
    "text": "and tell George that his\njob is to write good-enough, and so long as\ngood-enough works,",
    "start": "105120",
    "end": "110659"
  },
  {
    "text": "we don't care what it does. We don't care exactly\nhow it's implemented. There are levels of\ndetail here that are",
    "start": "110660",
    "end": "116770"
  },
  {
    "text": "George's concern and not ours. So for instance, George might\nuse an absolute value procedure",
    "start": "116770",
    "end": "124350"
  },
  {
    "text": "that's written by Harry, and\nwe don't much care about that or even know that,\nmaybe, Harry exists.",
    "start": "124350",
    "end": "130065"
  },
  {
    "text": " So the crucial idea is that\nwhen we're building things,",
    "start": "130065",
    "end": "136760"
  },
  {
    "text": "we divorce the task\nof building things from the task of\nimplementing the parts.",
    "start": "136760",
    "end": "143850"
  },
  {
    "text": " And in a large\nsystem, of course,",
    "start": "143850",
    "end": "149090"
  },
  {
    "text": "we have abstraction barriers\nlike this at lots, and lots, and lots of levels.",
    "start": "149090",
    "end": "154180"
  },
  {
    "text": "And that's the idea that we've\nbeen using so far over and over in implementing procedures. Well, now what we're\ngoing to do is look",
    "start": "154180",
    "end": "161079"
  },
  {
    "text": "at the same issues for data. We're going to see that the\nsystem has primitive data.",
    "start": "161080",
    "end": "166349"
  },
  {
    "text": "In fact, we've\nalready seen that. We've talked about\nnumbers as primitive data. And then we're going to see\ntheir means of combination",
    "start": "166350",
    "end": "172000"
  },
  {
    "text": "for data. There's glue that allows you\nto put primitive data together to make more complicated,\nkind of compound data.",
    "start": "172000",
    "end": "179500"
  },
  {
    "text": "And then we're going to see\na methodology for abstraction",
    "start": "179500",
    "end": "184840"
  },
  {
    "text": "that's a very good thing to use\nwhen you start building up data in terms of simpler data. And again, the key\nidea is that you're",
    "start": "184840",
    "end": "191260"
  },
  {
    "text": "going to build the\nsystem in layers and set up abstraction\nbarriers that isolate the details\nat the lower layers",
    "start": "191260",
    "end": "199506"
  },
  {
    "text": "from the thing that's going\non at the upper layers. The details at the lower layers,\nthe ideas, they won't matter.",
    "start": "199506",
    "end": "205260"
  },
  {
    "text": "They're going to\nbe George's concern because he signed this\ncontract with us for how the stuff that he\nimplements behaves,",
    "start": "205260",
    "end": "212030"
  },
  {
    "text": "and how he implements\nthe thing is his problem. All right, well let's\nlook at an example.",
    "start": "212030",
    "end": "217890"
  },
  {
    "text": "And the example I'm\ngoing to talk about is a system that does\narithmetic on rational numbers.",
    "start": "217890",
    "end": "223010"
  },
  {
    "text": "And what I have in mind is\nthat we should have something in the computer that\nallows us to ask it, like,",
    "start": "223010",
    "end": "231870"
  },
  {
    "text": "what's the sum of 1/2 and\n1/4, and somehow the system",
    "start": "231870",
    "end": "236879"
  },
  {
    "text": "should say, yeah, that's 3/4.",
    "start": "236880",
    "end": "242890"
  },
  {
    "text": "Or we should be able to\nsay what's 3/4 times 2/3,",
    "start": "242890",
    "end": "251070"
  },
  {
    "text": "and the system should be able\nto say, yeah, that's 1/2. ",
    "start": "251070",
    "end": "256229"
  },
  {
    "text": "Right? And you know what\nI have in mind. And you also know how to\ndo this from, I don't know, fifth grade or sixth grade.",
    "start": "256230",
    "end": "262410"
  },
  {
    "text": "There are these\nformulas that say if I have some fraction which is\na numerator over a denominator,",
    "start": "262410",
    "end": "268530"
  },
  {
    "text": "and I want to add that to\nsome other fraction which is another numerator\nover another denominator,",
    "start": "268530",
    "end": "275470"
  },
  {
    "text": "then the answer is the\nnumerator of the first times the denominator of the\nsecond, plus the numerator",
    "start": "275470",
    "end": "283710"
  },
  {
    "text": "of the second times the\ndenominator of the first. That's the numerator\nof the answer,",
    "start": "283710",
    "end": "289840"
  },
  {
    "text": "and the denominator\nis the product of the two denominators. Right? So there's something from\nfifth or sixth grade fraction",
    "start": "289840",
    "end": "296850"
  },
  {
    "text": "arithmetic. And then similarly, if I\nwant to multiply two things, n1 over d1 multiplied\nby n2 over d2",
    "start": "296850",
    "end": "305890"
  },
  {
    "text": "is the product of the\nnumerators over the product of the denominators. ",
    "start": "305890",
    "end": "314330"
  },
  {
    "text": "So it's no problem at all,\nbut it's absolutely no problem to think about what\ncomputation you",
    "start": "314330",
    "end": "320520"
  },
  {
    "text": "want to make in adding and\nmultiplying these fractions. But as soon as we\ngo to implement it,",
    "start": "320520",
    "end": "325880"
  },
  {
    "text": "we run up across something. We don't have what a\nrational number is.",
    "start": "325880",
    "end": "333320"
  },
  {
    "text": "So we said that the system\ngives us individual numbers, so we can have 5 and\n3, but somehow we",
    "start": "333320",
    "end": "342110"
  },
  {
    "text": "don't have a way\nof saying there's a thing that has both a 3 and\na 4 in it, or both a 2 and a 3.",
    "start": "342110",
    "end": "349850"
  },
  {
    "text": "It's almost as if we'd like\nto imagine that somehow there",
    "start": "349850",
    "end": "354980"
  },
  {
    "text": "are these clouds,\nand a cloud somehow has both a numerator\nand a denominator in it,",
    "start": "354980",
    "end": "362274"
  },
  {
    "text": "and that's what we'd\nlike to work in terms of.  Well, how are we going\nto solve that problem?",
    "start": "362274",
    "end": "368320"
  },
  {
    "text": "We're going to\nsolve that problem by using this incredibly\npowerful design strategy that you've already\nseen us use over and over.",
    "start": "368320",
    "end": "376496"
  },
  {
    "text": "And that's the strategy\nof wishful thinking. ",
    "start": "376497",
    "end": "385624"
  },
  {
    "text": "Just like before when we didn't\nhave a procedure, we said, well, let's imagine that that\nprocedure already exists.",
    "start": "385624",
    "end": "391420"
  },
  {
    "text": "We'll say, well, let's imagine\nthat we have these clouds. Now more precisely\nwhat I mean is",
    "start": "391420",
    "end": "399250"
  },
  {
    "text": "let's imagine that we\nhave three procedures,",
    "start": "399250",
    "end": "404287"
  },
  {
    "text": "one called make-RAT.  make-RAT is going to take\nas arguments two numbers,",
    "start": "404287",
    "end": "414530"
  },
  {
    "text": "so I'll call them\nnumerator and denominator, and it'll return for us a\ncloud-- one of these clouds.",
    "start": "414530",
    "end": "425300"
  },
  {
    "text": "I don't really know\nwhat a cloud is. It's whatever make-RAT\nreturns, that's its business.",
    "start": "425300",
    "end": "431160"
  },
  {
    "text": "And then we're going\nto say, suppose we've got one of these clouds,\nwe have a procedure called numer, which takes in a cloud\nthat has an n and a d in it,",
    "start": "431160",
    "end": "440260"
  },
  {
    "text": "whatever a cloud is, and I don't\nknow what it is, and returns for us the numerator part.",
    "start": "440260",
    "end": "446980"
  },
  {
    "text": "And then we'll assume we\nhave a procedure denom, which again takes\nin a cloud, whatever",
    "start": "446980",
    "end": "453025"
  },
  {
    "text": "a cloud is, and returns for us\nthe denominator [? required. ?] This is just like\nbefore, when if we're",
    "start": "453025",
    "end": "460710"
  },
  {
    "text": "building a square\nroot, we assume that we have good enough. Right? And what we'll say is,\nwe'll go find George,",
    "start": "460710",
    "end": "467649"
  },
  {
    "text": "and we'll say to George,\nwell, it's your business to make us these procedures. And how you choose to\nimplement these clouds,",
    "start": "467649",
    "end": "474010"
  },
  {
    "text": "that's your problem. We don't want to know.  Well, having pushed this\ntask off onto George,",
    "start": "474010",
    "end": "483340"
  },
  {
    "text": "then it's pretty easy\nto do the other part. Once we've got the\nclouds, it's pretty easy to write the thing that does say\naddition of rational numbers.",
    "start": "483340",
    "end": "491820"
  },
  {
    "text": "You can just say define,\nwell, let's say +RAT.",
    "start": "491820",
    "end": "497820"
  },
  {
    "text": " Define +RAT, which will take in\ntwo rational numbers, x and y.",
    "start": "497820",
    "end": "508110"
  },
  {
    "text": "x and y are each these clouds. And what does it do? Well, it's going to return\nfor us a rational number.",
    "start": "508110",
    "end": "515840"
  },
  {
    "text": " What rational number is it?",
    "start": "515840",
    "end": "521460"
  },
  {
    "text": "Well, we've got\nthe formulas there. The numerator of it is the sum\nof the product of the numerator",
    "start": "521460",
    "end": "532180"
  },
  {
    "text": "of x and the denominator of y. ",
    "start": "532180",
    "end": "542580"
  },
  {
    "text": "It's one thing in the sum. And the other thing\nin the numerator is the product of the numerator\nof y and the denominator of x.",
    "start": "542580",
    "end": "559060"
  },
  {
    "text": "The star, close the plus. Right, that's the first\nargument to make-RAT, which is the numerator of\nthe thing I'm constructing.",
    "start": "559060",
    "end": "566080"
  },
  {
    "text": "And then the rest\nof the thing goes into make-RAT is the\ndenominator of the answer, which is the product of\nthe denominator of x",
    "start": "566080",
    "end": "577210"
  },
  {
    "text": "and the denominator of y. Like that.",
    "start": "577210",
    "end": "582550"
  },
  {
    "text": " OK? So there is the analog of\ndoing rational number addition.",
    "start": "582550",
    "end": "591710"
  },
  {
    "text": "And it's no problem\nat all, assuming that we have these clouds. ",
    "start": "591710",
    "end": "599020"
  },
  {
    "text": "And of course, we can do\nmultiplication in the same way. ",
    "start": "599020",
    "end": "605570"
  },
  {
    "text": "Define how to get the product\nof two rational numbers,",
    "start": "605570",
    "end": "611160"
  },
  {
    "text": "call it *RAT. Takes in two of these\nclouds, x and y, it returns",
    "start": "611160",
    "end": "620420"
  },
  {
    "text": "a rational number,\nmake-RAT, whose numerator",
    "start": "620420",
    "end": "625450"
  },
  {
    "text": "is the product of the\nnumerators-- numerator of x",
    "start": "625450",
    "end": "632020"
  },
  {
    "text": "times the numerator of y.",
    "start": "632020",
    "end": "638170"
  },
  {
    "text": "And the denominator of the\nthing it's going to return is the product of\nthe denominators. ",
    "start": "638170",
    "end": "657930"
  },
  {
    "text": "Well, except that I haven't\ntold you what these clouds are, that's all there is to it.",
    "start": "657930",
    "end": "664489"
  },
  {
    "text": "See, what did I do? I assumed by wishful\nthinking that I had a new kind of data object.",
    "start": "664489",
    "end": "670490"
  },
  {
    "text": "And in particular,\nI assumed I had ways of creating these data objects.",
    "start": "670490",
    "end": "676360"
  },
  {
    "text": "Make-RAT creates\none of these things. This is called a constructor. ",
    "start": "676360",
    "end": "685720"
  },
  {
    "text": "All right, I have a thing that\nconstructs such data objects. And then I assume I have things\nthat, having made these things,",
    "start": "685720",
    "end": "694399"
  },
  {
    "text": "I have ways of\ngetting the parts out. Those are called selectors. ",
    "start": "694399",
    "end": "702850"
  },
  {
    "text": "And so formally, what\nI said is I assumed I had procedures\nthat are constructors and selectors for\nthese data objects,",
    "start": "702850",
    "end": "709160"
  },
  {
    "text": "and then I went\noff and used them. That's no different\nin kind from saying",
    "start": "709160",
    "end": "714180"
  },
  {
    "text": "I assume I have a\nprocedure good-enough, and I go use it to\nimplement square root. ",
    "start": "714180",
    "end": "720850"
  },
  {
    "text": "OK, well before we\ngo on, let's ask the question of why do we want\nto do this in the first place?",
    "start": "720850",
    "end": "728660"
  },
  {
    "text": "See, why do we want a procedure\nlike +RAT that takes in two",
    "start": "728660",
    "end": "736339"
  },
  {
    "text": "rational numbers and\nreturns a rational number? See, another way to think\nabout this is, well,",
    "start": "736340",
    "end": "741960"
  },
  {
    "text": "here's this formula.  And I've also got to\nimplement something",
    "start": "741960",
    "end": "747740"
  },
  {
    "text": "that adds rational numbers. One other way to think about\nis, well, there's this thing, and I type in four\nnumbers, an n1, and a d1,",
    "start": "747740",
    "end": "754750"
  },
  {
    "text": "and an n2, and a d2. And it sets some\nregisters in the machine to this numerator\nand this denominator.",
    "start": "754750",
    "end": "762255"
  },
  {
    "text": "So I might say,\nwell, why don't I just add rational\nnumbers by I type in four numbers, numerators\nand denominators, and get out two\nnumbers, which is",
    "start": "762255",
    "end": "768595"
  },
  {
    "text": "a numerator and a denominator. Why are we worrying\nabout building things",
    "start": "768595",
    "end": "774250"
  },
  {
    "text": "like this anyway?  Well, the answer\nis, suppose you want",
    "start": "774250",
    "end": "780820"
  },
  {
    "text": "to think about expressing\nsomething like this,",
    "start": "780820",
    "end": "786090"
  },
  {
    "text": "suppose I'd like to\nexpress the idea of taking two rational numbers,\nx plus y, say,",
    "start": "786090",
    "end": "795300"
  },
  {
    "text": "and multiplying that by the sum\nof two other rational numbers.",
    "start": "795300",
    "end": "803670"
  },
  {
    "text": "Well, the way I do it, having\nthings like +RAT and *RAT, is I'd say, oh yeah, what\nthat is is just the product.",
    "start": "803670",
    "end": "813930"
  },
  {
    "text": "That's *RAT of the sum of x\nand y and the sum of s and t.",
    "start": "813930",
    "end": "831570"
  },
  {
    "text": "So except for syntax,\nI get an expression that looks like the\nway I want to think",
    "start": "831570",
    "end": "838380"
  },
  {
    "text": "about it mathematically. I want to say there\nare two numbers. There's a thing which\nis the sum of them,",
    "start": "838380",
    "end": "845407"
  },
  {
    "text": "and there's a thing which\nis the sum of these two. That's this and this.",
    "start": "845407",
    "end": "850779"
  },
  {
    "text": "And then I multiply them. So I get an expression that\nmatches this expression. If I did the other\nthing, if I said,",
    "start": "850780",
    "end": "856600"
  },
  {
    "text": "well, the way I want\nto think about this is I type into my machine\nfour numbers, which are the numerators and the\ndenominators of x and y,",
    "start": "856600",
    "end": "864140"
  },
  {
    "text": "and then four more numbers,\nwhich are the numerators and denominators of s and t. And then what I'd be sitting\nwith is, well, what would I do?",
    "start": "864140",
    "end": "871340"
  },
  {
    "text": "I'd add these, and\nsomehow I'd have to have two temporary variables,\nwhich are the numerators",
    "start": "871340",
    "end": "876440"
  },
  {
    "text": "and denominators of\nthis sum, and I'd go off and store them someplace. ",
    "start": "876440",
    "end": "882235"
  },
  {
    "text": "And then I'd go over here,\nI'd type in four more numbers, I'd get two more\ntemporary variables, which are the numerators\nand denominators of s and t.",
    "start": "882235",
    "end": "890180"
  },
  {
    "text": "And then finally, I put those\ntogether by multiplying them. You see, what's\nstarting to happen,",
    "start": "890180",
    "end": "896420"
  },
  {
    "text": "there are all these\ntemporary variables, which are sort of the guts\nof the internals",
    "start": "896420",
    "end": "902060"
  },
  {
    "text": "of these rational numbers\nthat start hanging out all over the system. And of course, if I had more and\nmore complicated expressions,",
    "start": "902060",
    "end": "908580"
  },
  {
    "text": "there'd be more and\nmore guts hanging out that confuse my programming. And those of you who\nsort of programmed things",
    "start": "908580",
    "end": "915340"
  },
  {
    "text": "like that, where you're just\nadding numbers in assembly language, you sort\nof see you have to suddenly be concerned with\nthese temporary variables.",
    "start": "915340",
    "end": "923040"
  },
  {
    "text": "But more importantly than\nconfusing my programming,",
    "start": "923040",
    "end": "928350"
  },
  {
    "text": "they're going to\nconfuse my mind. Because the whole\nname of this game",
    "start": "928350",
    "end": "933440"
  },
  {
    "text": "is that we'd like the\nprogramming language to express the concepts that we\nhave in our heads,",
    "start": "933440",
    "end": "939670"
  },
  {
    "text": "like rational numbers are things\nthat you can add and then take that result and multiply them.",
    "start": "939670",
    "end": "944770"
  },
  {
    "text": " Let's break for questions. ",
    "start": "944770",
    "end": "959570"
  },
  {
    "text": "Yeah? AUDIENCE: I don't\nquite see the need- when we had make-RAT with the\nnumerator and denominator, we had to have the numerator\nand denominator to pass",
    "start": "959570",
    "end": "966626"
  },
  {
    "text": "as parameters to\ncreate the cloud, and then we extracted to\nget back what we had to have originally.",
    "start": "966626",
    "end": "971720"
  },
  {
    "text": "PROFESSOR: That's right. So the question\nis, I sort of have the numerator and\nthe denominator,",
    "start": "971720",
    "end": "977370"
  },
  {
    "text": "why am I worrying about\nhaving the cloud given that I have to get the pieces out?",
    "start": "977370",
    "end": "983500"
  },
  {
    "text": "That's sort of what I\ntried to say at the end, but let me try and say it\nagain, because that's really the crucial question.",
    "start": "983500",
    "end": "989390"
  },
  {
    "text": "The point is, I want to carry\nthis numerator and denominator around together all the time.",
    "start": "989390",
    "end": "996816"
  },
  {
    "text": "And it's almost as\nif I want to know, yeah, there's a numerator\nand denominator in there, but also, I would like to say,\nfine, but from another point",
    "start": "996816",
    "end": "1007420"
  },
  {
    "text": "of view, that's x. And I carry x around, and I\nname it as x, and I hold it.",
    "start": "1007420",
    "end": "1013040"
  },
  {
    "text": "And I can say things\nlike, the sum of x and y, rather than just have-- see,\nit's not so bad when I only",
    "start": "1013040",
    "end": "1018230"
  },
  {
    "text": "think about x, but if\nI have a system with 10 rational numbers, suddenly\nI have 20 numerators and denominators, which\nare not necessarily--",
    "start": "1018230",
    "end": "1025480"
  },
  {
    "text": "if I don't link\nthem, then it's just 20 arbitrary\nnumbers that are not linked in any particular way.",
    "start": "1025481",
    "end": "1030560"
  },
  {
    "text": "It's a lot like saying, well,\nI have these instructions that are the body\nof the procedures,",
    "start": "1030560",
    "end": "1035589"
  },
  {
    "text": "why do I want to package them\nand say it's the procedure? It's exactly the same idea. ",
    "start": "1035589",
    "end": "1051875"
  },
  {
    "text": "No? OK. Let's break, let's just stretch\nand get somebody-- [INAUDIBLE]",
    "start": "1051875",
    "end": "1058349"
  },
  {
    "text": "[MUSIC PLAYING]",
    "start": "1058349",
    "end": "1107080"
  },
  {
    "text": "OK, well, we've been working on\nthis rational number arithmetic system, and then what we\ndid, the important thing",
    "start": "1107080",
    "end": "1114730"
  },
  {
    "text": "about what we did, is we\nthought about the problem by breaking it into two pieces.",
    "start": "1114730",
    "end": "1120160"
  },
  {
    "text": "We said, assume there is\nthis contract with George, and George has\nfigured out the way",
    "start": "1120160",
    "end": "1125230"
  },
  {
    "text": "to how to construct\nthese clouds, provided us procedures\nmake-RAT, which",
    "start": "1125230",
    "end": "1130690"
  },
  {
    "text": "was a constructor,\nand selectors, which are numerator and denominator. And then in terms\nof that, we went off",
    "start": "1130690",
    "end": "1136623"
  },
  {
    "text": "and implemented addition\nand multiplication of rational numbers. Well, now let's go look\nat George's problem.",
    "start": "1136623",
    "end": "1143640"
  },
  {
    "text": "How can we go and\npackage together a numerator and a\ndenominator and actually make one of these clouds?",
    "start": "1143640",
    "end": "1149360"
  },
  {
    "text": "See, what we need is a kind of\nglue, a glue for data objects",
    "start": "1149360",
    "end": "1155760"
  },
  {
    "text": "that allows us to\nput things together. And Lisp provides such\na glue, and that glue",
    "start": "1155760",
    "end": "1163134"
  },
  {
    "text": "is called list structure. ",
    "start": "1163134",
    "end": "1170410"
  },
  {
    "text": "List structure is a\nway of gluing things together, and more\nprecisely, Lisp",
    "start": "1170410",
    "end": "1177690"
  },
  {
    "text": "provides a way of constructing\nthings called pairs. ",
    "start": "1177690",
    "end": "1184750"
  },
  {
    "text": "There's a primitive operator\nin Lisp called cons.",
    "start": "1184750",
    "end": "1192222"
  },
  {
    "text": "We can take a look at it. There's a thing called cons. ",
    "start": "1192222",
    "end": "1200620"
  },
  {
    "text": "Cons is an operator which\ntakes in two arguments called x and y, and it returns for\nus a thing called a pair.",
    "start": "1200620",
    "end": "1208800"
  },
  {
    "text": " All right, so a thing called\na pair that has a first part",
    "start": "1208800",
    "end": "1217300"
  },
  {
    "text": "a second part.  So cons takes two objects.",
    "start": "1217300",
    "end": "1225450"
  },
  {
    "text": "There's a thing called a pair. The first part of the cons is x,\nand the second part of the cons",
    "start": "1225450",
    "end": "1231100"
  },
  {
    "text": "is y. And that's what it builds. And then we also assume we have\nways of getting things out.",
    "start": "1231100",
    "end": "1236880"
  },
  {
    "text": "If you're given a pair,\nthere's a thing called car, and car of a pair,\np, gives you out",
    "start": "1236880",
    "end": "1244250"
  },
  {
    "text": "the first part of the pair, p. And there's a thing called\ncdr, and cdr of the pair, p,",
    "start": "1244250",
    "end": "1249650"
  },
  {
    "text": "gives you the second\npart of the pair, p. OK, so that's how\nwe construct things.",
    "start": "1249650",
    "end": "1256710"
  },
  {
    "text": "There's also a conventional\nway of drawing pictures of these things.",
    "start": "1256710",
    "end": "1262800"
  },
  {
    "text": "Just like we write down that as\nthe conventional way of writing",
    "start": "1262800",
    "end": "1270140"
  },
  {
    "text": "Plato's idea of two,\nthe way we could",
    "start": "1270140",
    "end": "1276890"
  },
  {
    "text": "draw a diagram to represent cons\nof two and three is like this. We draw a little box.",
    "start": "1276890",
    "end": "1283912"
  },
  {
    "text": "And so here's the box\nwe're talking about, and this box has two\narrows coming out of it.",
    "start": "1283912",
    "end": "1290070"
  },
  {
    "text": "And say the first part\nof this pair is 2,",
    "start": "1290070",
    "end": "1295179"
  },
  {
    "text": "and the second part\nof this pair is 3. And this notation\nhas a name, it's",
    "start": "1295180",
    "end": "1300950"
  },
  {
    "text": "called box and pointer notation. ",
    "start": "1300950",
    "end": "1315942"
  },
  {
    "text": "By the way, let me say right\nnow that a lot of people get confused that\nthere's some significance to the geometric way I drew\nthese pointers, the directions.",
    "start": "1315942",
    "end": "1323533"
  },
  {
    "text": "Like some people think\nit'd be different if I took this pointer\nand turned it up here, and put the 3 out here.",
    "start": "1323534",
    "end": "1328660"
  },
  {
    "text": "That has no significance. All right? It's merely you have\na bunch of arrows, these pointers, and the boxes.",
    "start": "1328660",
    "end": "1335090"
  },
  {
    "text": "The only issue is how\nthey're connected, not the geometric\narrangement of whether I write the pointer\nacross, or up, or down.",
    "start": "1335090",
    "end": "1343159"
  },
  {
    "text": "Now it's completely\nun-obvious, probably, why that's called\nlist structure.",
    "start": "1343160",
    "end": "1348337"
  },
  {
    "text": "We're not actually going\nto talk about that today. We'll see that next time. ",
    "start": "1348337",
    "end": "1357870"
  },
  {
    "text": "So those are pairs, there's\ncons that constructs them. And what I'm going to know\nabout cons, and car, and cdr,",
    "start": "1357870",
    "end": "1365640"
  },
  {
    "text": "is precisely that if I have\nany x and y, all right,",
    "start": "1365640",
    "end": "1371170"
  },
  {
    "text": "if I have any things x and y,\nand I use cons to construct a pair, then the\ncar of that pair",
    "start": "1371170",
    "end": "1381200"
  },
  {
    "text": "is going to be x,\nthe thing I put in, and the cdr of that\npair is going to be y.",
    "start": "1381200",
    "end": "1387790"
  },
  {
    "text": "That's the behavior of these\noperators, cons, car, and cdr. Given them, it's\npretty clear how",
    "start": "1387790",
    "end": "1393960"
  },
  {
    "text": "George can go off and\nconstruct his rational numbers. After all, all he\nhas to do-- remember",
    "start": "1393960",
    "end": "1399580"
  },
  {
    "text": "George's problem was to\nimplement make-RAT, numerator, and denom. So all George has\nto do is say define",
    "start": "1399580",
    "end": "1409409"
  },
  {
    "text": "make-RAT of some n and a d-- so\nall I have to do is cons them.",
    "start": "1409410",
    "end": "1420710"
  },
  {
    "text": "That's cons of n and d.  And then if I want\nto get the numerator",
    "start": "1420710",
    "end": "1426990"
  },
  {
    "text": "out, I would say define\nthe numerator, numer,",
    "start": "1426990",
    "end": "1437340"
  },
  {
    "text": "of some rational number, x. If the rational number's\nimplemented as a pair,",
    "start": "1437340",
    "end": "1442510"
  },
  {
    "text": "then all I have to do\nis get out the car of x. And then similarly, define the\ndenom is going to be the cdr,",
    "start": "1442510",
    "end": "1459350"
  },
  {
    "text": "the other thing I\nput into the pair. ",
    "start": "1459350",
    "end": "1467080"
  },
  {
    "text": "Well, now we're in business. That's a complete implementation\nof rational numbers.",
    "start": "1467080",
    "end": "1473809"
  },
  {
    "text": "Let's use it. Suppose I want to say,\nso I want to think about how to add 1/2 plus 1/4\nand watch the system work.",
    "start": "1473810",
    "end": "1483470"
  },
  {
    "text": "Well, the way I'd use that is\nI'd say, well, maybe define a.",
    "start": "1483470",
    "end": "1490780"
  },
  {
    "text": "I have to make a 1/2. Well, that's a rational\nnumber with numerator 1",
    "start": "1490780",
    "end": "1495830"
  },
  {
    "text": "and denominator 2, so a\nwill be make-RAT of 1 and 2.",
    "start": "1495830",
    "end": "1501090"
  },
  {
    "text": " And then I'll construct the 1/4.",
    "start": "1501090",
    "end": "1507770"
  },
  {
    "text": "I'll say define d to\nbe make-RAT of 1 and 4.",
    "start": "1507770",
    "end": "1520560"
  },
  {
    "text": " And if I'd like to look\nat the answer-- well,",
    "start": "1520560",
    "end": "1525630"
  },
  {
    "text": "assuming I don't have a special\nthing that prints rational numbers, or I could make one--\nI could say, for instance,",
    "start": "1525630",
    "end": "1531530"
  },
  {
    "text": "define the answer to be +RAT\nof a and b, and now I can say,",
    "start": "1531530",
    "end": "1546930"
  },
  {
    "text": "what's the answer? What are the numerators and\ndenominators of the answer? So if I'm adding\n1/2 and 1/4, I'll",
    "start": "1546930",
    "end": "1554470"
  },
  {
    "text": "say, what is the\nnumerator of the answer?",
    "start": "1554470",
    "end": "1560440"
  },
  {
    "text": " And the system is going\nto type out, well, 6.",
    "start": "1560440",
    "end": "1570880"
  },
  {
    "text": "Bad news. And if I say what's the\ndenominator of the answer,",
    "start": "1570880",
    "end": "1582340"
  },
  {
    "text": "the system's going\nto type out 8. So instead of what\nI would really like,",
    "start": "1582340",
    "end": "1589930"
  },
  {
    "text": "which is for it to say\nthat 1/2 and 1/4 is 3/4,",
    "start": "1589930",
    "end": "1595630"
  },
  {
    "text": "this foolish machine is\ngoing to say, no, it's 6/8. Well, that's sort of bad news.",
    "start": "1595630",
    "end": "1603399"
  },
  {
    "text": "Where's the bug?  Why does it do that, after all?",
    "start": "1603400",
    "end": "1608780"
  },
  {
    "text": "Well, it's the way\nthat we just had +RAT. +RAT just took the-- it said\nyou add the numerator times",
    "start": "1608780",
    "end": "1616210"
  },
  {
    "text": "the denominator, you add\nthat to the numerator times the denominator, and put that\nover the product of the two",
    "start": "1616210",
    "end": "1622210"
  },
  {
    "text": "denominators, and\nthat's why you get 6/8. So what was wrong with our\nimplementation of +RAT?",
    "start": "1622210",
    "end": "1630489"
  },
  {
    "text": "What's wrong with that rational\nnumber arithmetic stuff that we did before the break?",
    "start": "1630489",
    "end": "1635582"
  },
  {
    "text": "Well, the answer is\none way to look at it is absolutely nothing's wrong. That's perfectly\ngood implementation.",
    "start": "1635582",
    "end": "1641070"
  },
  {
    "text": "It follows the sixth grade,\nfifth grade mathematic for adding fractions.",
    "start": "1641070",
    "end": "1646775"
  },
  {
    "text": " One thing we can say is,\nwell, that's George's problem.",
    "start": "1646775",
    "end": "1653310"
  },
  {
    "text": "Like, boy, wasn't\nGeorge dumb to say that he can make a\nrational number simply",
    "start": "1653310",
    "end": "1658440"
  },
  {
    "text": "by sticking together the\nnumerator and the denominator? Wouldn't it be\nbetter for George,",
    "start": "1658440",
    "end": "1665360"
  },
  {
    "text": "when he made a rational\nnumber, to reduce the stuff to lowest terms?",
    "start": "1665360",
    "end": "1670970"
  },
  {
    "text": "And what I mean is, wouldn't\nit be better for George, instead of using this\nversion of make-RAT,",
    "start": "1670970",
    "end": "1680430"
  },
  {
    "text": "to use this one on the slide? Or instead of just saying cons\ntogether n and d, what you do",
    "start": "1680430",
    "end": "1689190"
  },
  {
    "text": "is compute the greatest\ncommon divisor of n and d, and gcd is the procedure\nwhich, well, for all we",
    "start": "1689190",
    "end": "1695471"
  },
  {
    "text": "care is a primitive, which\ncomputes the greatest common divisor of two numbers.",
    "start": "1695471",
    "end": "1700627"
  },
  {
    "text": "So the way I can construct\na rational number is get the greatest common\ndivisor of the two numbers,",
    "start": "1700628",
    "end": "1706890"
  },
  {
    "text": "and I'm going to\ncall that g, and then instead of consing\ntogether n and d,",
    "start": "1706890",
    "end": "1712959"
  },
  {
    "text": "I'll divide them through. I'll cons together\nthe quotient of n by the the gcd and the\nquotient of d by the gcd.",
    "start": "1712959",
    "end": "1720454"
  },
  {
    "text": "And that will reduce\nthe rational number to lowest terms. ",
    "start": "1720454",
    "end": "1727780"
  },
  {
    "text": "So when I do this addition,\nwhen +RAT calls make-RAT--",
    "start": "1727780",
    "end": "1734330"
  },
  {
    "text": "and for the definition of +RAT\nit had a make-RAT in there-- just by the fact that\nit's constructing that,",
    "start": "1734330",
    "end": "1739560"
  },
  {
    "text": "the thing will get reduced to\nlowest terms automatically. ",
    "start": "1739560",
    "end": "1749612"
  },
  {
    "text": "OK, that is a complete system.",
    "start": "1749612",
    "end": "1755180"
  },
  {
    "text": "For rational number arithmetic,\nlet's look at what we've done. All right, we said we want\nto build rational number",
    "start": "1755180",
    "end": "1762440"
  },
  {
    "text": "arithmetic, and we had\na thing called +RAT. We implemented that.",
    "start": "1762440",
    "end": "1769940"
  },
  {
    "text": "And I showed you multiplying\nrational numbers, and although I didn't\nput them up there,",
    "start": "1769940",
    "end": "1775317"
  },
  {
    "text": "presumably we'd like\nto have something that subtracts rational\nnumbers, and I don't know, all sorts of things.",
    "start": "1775317",
    "end": "1780770"
  },
  {
    "text": "Things that test equality in\ndivision, and maybe things that print rational numbers\nin some particular way.",
    "start": "1780770",
    "end": "1786190"
  },
  {
    "text": "And we implemented\nthose in terms of pairs.",
    "start": "1786190",
    "end": "1792330"
  },
  {
    "text": "These pairs, cons, car, and\ncdr that are built into Lisp. But the important thing is\nthat between these and these,",
    "start": "1792330",
    "end": "1805100"
  },
  {
    "text": "we set up an\nabstraction barrier. We set up a layer\nof abstraction. ",
    "start": "1805100",
    "end": "1817310"
  },
  {
    "text": "And what was that\nlayer of abstraction? That layer of abstraction\nwas precisely the constructor and the selectors.",
    "start": "1817310",
    "end": "1822545"
  },
  {
    "text": " This layer was make-RAT,\nand numer, and denom.",
    "start": "1822545",
    "end": "1834730"
  },
  {
    "text": " This methodology, another\nway to say what it's doing,",
    "start": "1834730",
    "end": "1843480"
  },
  {
    "text": "is that we are separating\nthe way something is used,",
    "start": "1843480",
    "end": "1853520"
  },
  {
    "text": "separating the use\nof data objects, from the representation\nof data objects.",
    "start": "1853520",
    "end": "1859350"
  },
  {
    "start": "1859350",
    "end": "1867650"
  },
  {
    "text": "So up here, we have the way\nthat rational numbers are used, do arithmetic on them. Down here, we have the way\nthat they're represented,",
    "start": "1867650",
    "end": "1875140"
  },
  {
    "text": "and they're separated\nby this boundary. The boundary is the\nconstructors and selectors. ",
    "start": "1875140",
    "end": "1883760"
  },
  {
    "text": "And this methodology has a name. This is called data abstraction. ",
    "start": "1883760",
    "end": "1895820"
  },
  {
    "text": "Data abstraction is sort of\nthe programming methodology of setting up data objects\nby postulating constructors",
    "start": "1895820",
    "end": "1901960"
  },
  {
    "text": "and selectors to isolate\nuse from representation. ",
    "start": "1901960",
    "end": "1907549"
  },
  {
    "text": "Well, so why? I mean, after all, we didn't\nhave to do it this way. It's perfectly possible to\ndo rational number addition",
    "start": "1907550",
    "end": "1915450"
  },
  {
    "text": "without having any compound data\nobjects, and here on the slide is one example. We certainly could\nhave defined +RAT,",
    "start": "1915450",
    "end": "1923220"
  },
  {
    "text": "which takes in things\nx and y, and we'll say, well what are these\nrational numbers really?",
    "start": "1923220",
    "end": "1930030"
  },
  {
    "text": "So really, they're just\npairs, and the numerator's the car and the denominator's\nthe cdr. So what we'll do",
    "start": "1930030",
    "end": "1935120"
  },
  {
    "text": "is we'll take the car of x times\nthe cdr of y, multiply them.",
    "start": "1935120",
    "end": "1943309"
  },
  {
    "text": "Take the car of y times the\ncdr of x, multiply them. Add them.",
    "start": "1943310",
    "end": "1948650"
  },
  {
    "text": "Take the cdr of x\nand the cdr of y, multiply them, and then\nconstitute together. ",
    "start": "1948650",
    "end": "1955265"
  },
  {
    "text": "Well, that sort of\ndoes the same thing. ",
    "start": "1955265",
    "end": "1961560"
  },
  {
    "text": "But this ignores the\nproblem of reducing things to lowest terms, but let's not\nworry about that for a minute.",
    "start": "1961560",
    "end": "1967680"
  },
  {
    "text": "But so what? Why don't we do it that way? Right? After all, there are sort of\nfewer procedures to define,",
    "start": "1967680",
    "end": "1973220"
  },
  {
    "text": "and it's a lot more\nstraightforward.  It saves all this\nself-righteous BS",
    "start": "1973220",
    "end": "1979240"
  },
  {
    "text": "about talking about\ndata abstraction. We just sort of do it. I mean, who knows, maybe it's\neven marginally more efficient",
    "start": "1979240",
    "end": "1984870"
  },
  {
    "text": "depending on whatever\ncompiler were using for this. What's the point of\nisolating the use",
    "start": "1984870",
    "end": "1991230"
  },
  {
    "text": "from the representation? Well, it goes back to\nthis notion of naming.",
    "start": "1991230",
    "end": "1997130"
  },
  {
    "text": "Remember, one of the\nmost important principles in programming is\nthe same as one",
    "start": "1997130",
    "end": "2003030"
  },
  {
    "text": "of the most important principles\nin sorcery, all right? That's if you have the\nname of the spirit, you get control over it.",
    "start": "2003030",
    "end": "2010330"
  },
  {
    "text": "And if you go back\nand look at the slide, you see what's in there is\nwe have this thing +RAT,",
    "start": "2010330",
    "end": "2016940"
  },
  {
    "text": "but nowhere in the system,\nif I have a +RAT and a -RAT and a *RAT, and things\nthat look like that,",
    "start": "2016940",
    "end": "2022580"
  },
  {
    "text": "nowhere in the system do I\nhave a thing that I can point at which is a rational number.",
    "start": "2022580",
    "end": "2030770"
  },
  {
    "text": " I don't have, in a\nsystem like that,",
    "start": "2030770",
    "end": "2037170"
  },
  {
    "text": "the idea of rational number\nas a conceptual entity. Well, what's the\nadvantage of that?",
    "start": "2037170",
    "end": "2044270"
  },
  {
    "text": "What's the advantage\nof isolating the idea of rational numbers\nas a conceptual entity, and really naming it\nwith make-RAT, numerator,",
    "start": "2044270",
    "end": "2050929"
  },
  {
    "text": "and denominator. Well, one advantage is\nyou might want to have",
    "start": "2050929",
    "end": "2058230"
  },
  {
    "text": "alternative representations. See, before I showed you\nthat one way George can solve",
    "start": "2058230",
    "end": "2063520"
  },
  {
    "text": "this things not reduced\nto lowest terms problem, is when you build\na rational number,",
    "start": "2063520",
    "end": "2069148"
  },
  {
    "text": "you divide up by the\ngreatest common denominator. Another way to do that\nis shown over here.",
    "start": "2069149",
    "end": "2076634"
  },
  {
    "text": "I can have an alternative\nrepresentation for rational numbers where when\nyou make a rational number, you just cons them.",
    "start": "2076634",
    "end": "2083408"
  },
  {
    "text": "However, when you\ngo to select out the numerator, at that point\nyou compute the gcd of the stuff",
    "start": "2083409",
    "end": "2090408"
  },
  {
    "text": "that's sitting in that pair,\nand divide out by the gcd. ",
    "start": "2090409",
    "end": "2097970"
  },
  {
    "text": "And similarly, when I\nget the denominator, at that point when I go\nto get the denominator,",
    "start": "2097970",
    "end": "2103600"
  },
  {
    "text": "I'll divide out by the gcd. So the difference would be in\nthe old representation, when",
    "start": "2103600",
    "end": "2109089"
  },
  {
    "text": "ans was constructed\nhere, say what's 6 and 8, in the first way,\nthe 6 and 8 would",
    "start": "2109090",
    "end": "2115054"
  },
  {
    "text": "have got reduced when they\ngot stuck into that pair, numerator would select out 3.",
    "start": "2115054",
    "end": "2120165"
  },
  {
    "text": "And in the way I\njust showed you, well, ans would\nget 6 and 8 put in, and then at the point\nwhere I said numerator,",
    "start": "2120165",
    "end": "2127650"
  },
  {
    "text": "some computation would get\ndone to put out 3 instead of 6. So those are two different\nways I might do it.",
    "start": "2127650",
    "end": "2134520"
  },
  {
    "text": "Which one's better? Well, it depends, right? If I'm making a system\nwhere I am mostly",
    "start": "2134520",
    "end": "2140641"
  },
  {
    "text": "constructing rational numbers\nand hardly ever looking at them, then it's\nprobably better not to do that gcd computation\nwhen I construct them.",
    "start": "2140642",
    "end": "2147776"
  },
  {
    "text": "If I'm doing a system where\nI look at things a lot more than I construct them,\nthen it's probably better",
    "start": "2147776",
    "end": "2153030"
  },
  {
    "text": "to do the work when\nI construct them. So there's a choice there.",
    "start": "2153030",
    "end": "2158170"
  },
  {
    "text": "But the real issue\nis that you might not be able to decide at the\nmoment you're worrying",
    "start": "2158170",
    "end": "2165640"
  },
  {
    "text": "about these rational numbers. See, in general, as\nsystems designers,",
    "start": "2165640",
    "end": "2173430"
  },
  {
    "text": "you're forced with the\nnecessity to make decisions about how you're\ngoing to do things, and in general, the way you'd\nlike to retain flexibility",
    "start": "2173430",
    "end": "2180880"
  },
  {
    "text": "is to never make up\nyour mind about anything until you're forced to do it.",
    "start": "2180880",
    "end": "2186890"
  },
  {
    "text": "The problem is, there's\na very, very narrow line between deferring decisions\nand outright procrastination.",
    "start": "2186890",
    "end": "2194765"
  },
  {
    "text": " So you'd like to make progress,\nbut also at the same time,",
    "start": "2194765",
    "end": "2204080"
  },
  {
    "text": "never be bound by the\nconsequences of your decisions. Data abstraction's\none way of doing this.",
    "start": "2204080",
    "end": "2210550"
  },
  {
    "text": "What we did is we\nused wishful thinking. See, we gave a name\nto the decision.",
    "start": "2210550",
    "end": "2217190"
  },
  {
    "text": "We said, make-RAT,\nnumerator, and denominator will stand for however\nit's going to be done,",
    "start": "2217190",
    "end": "2222380"
  },
  {
    "text": "and however it's going to\nbe done is George's problem. But really, what that was\ndoing is giving a name to the decision of how\nwe're going to do it,",
    "start": "2222380",
    "end": "2230380"
  },
  {
    "text": "and then continuing as\nif we made the decision. And then eventually, when\nwe really wanted it to work,",
    "start": "2230380",
    "end": "2237109"
  },
  {
    "text": "coming back and facing\nwhat we really had to do. And in fact, we'll see\na couple times from now",
    "start": "2237110",
    "end": "2242690"
  },
  {
    "text": "that you may never\nhave to choose any particular\nrepresentation, ever, ever.",
    "start": "2242690",
    "end": "2247800"
  },
  {
    "text": "Anyway, that's a very\npowerful design technique. It's the key to the reason\npeople use data abstraction. ",
    "start": "2247800",
    "end": "2254829"
  },
  {
    "text": "And we're going to see\nthat idea again and again. Let's stop for questions.",
    "start": "2254830",
    "end": "2260510"
  },
  {
    "text": "AUDIENCE: What does\nthis decision making through abstraction layers do to\nthe axiom of do all your design",
    "start": "2260510",
    "end": "2267500"
  },
  {
    "text": "before any of your code? PROFESSOR: Well,\nthat's someone's axiom, and I bet that's the\naxiom of someone who",
    "start": "2267500",
    "end": "2273990"
  },
  {
    "text": "hasn't implemented very large\ncomputer systems very much. ",
    "start": "2273990",
    "end": "2281220"
  },
  {
    "text": "I said that computer\nscience is a lot like magic, and it's sort of good\nthat it's like magic. There's a bad part\nof computer science",
    "start": "2281220",
    "end": "2286853"
  },
  {
    "text": "that's a lot like religion. And in general, I\nthink people who",
    "start": "2286853",
    "end": "2292637"
  },
  {
    "text": "really believe that you design\neverything before you implement it basically are people\nwho haven't designed",
    "start": "2292637",
    "end": "2297732"
  },
  {
    "text": "very many things.  The real power is\nthat you can pretend",
    "start": "2297732",
    "end": "2303869"
  },
  {
    "text": "that you've made the\ndecision and then later on figure out which one is\nright, which decision you ought",
    "start": "2303870",
    "end": "2309530"
  },
  {
    "text": "to have made. And when you can do that, you\nhave the best of both worlds. ",
    "start": "2309530",
    "end": "2315664"
  },
  {
    "text": "AUDIENCE: Can you\nexplain the difference between let and define? PROFESSOR: Oh, OK.",
    "start": "2315664",
    "end": "2323520"
  },
  {
    "text": "Let is a way to\nestablish local names.",
    "start": "2323520",
    "end": "2329040"
  },
  {
    "start": "2329040",
    "end": "2335150"
  },
  {
    "text": "Let me give you sort\nof the half answer. And I'll say, later on we\ncan talk about the whole very",
    "start": "2335150",
    "end": "2340970"
  },
  {
    "text": "complicated thing. But the big difference\nfor now is that, see, when you're typing\nat Lisp, you're",
    "start": "2340970",
    "end": "2348130"
  },
  {
    "text": "typing in this environment\nwhere you're making definitions. And when you say define a to be\n5, if I say define a to be 5,",
    "start": "2348130",
    "end": "2360446"
  },
  {
    "text": "then from then on the thing\nwill remember that a is 5.",
    "start": "2360446",
    "end": "2365640"
  },
  {
    "text": "Let is a way to set up\na local context where there's a definition.",
    "start": "2365640",
    "end": "2371089"
  },
  {
    "text": "So if I type something\nlike, saying let a-- no,",
    "start": "2371090",
    "end": "2377490"
  },
  {
    "text": "I shouldn't say\na-- if I said let z",
    "start": "2377490",
    "end": "2383360"
  },
  {
    "text": "be 10, and within that context,\ntell me what the sum of z and z",
    "start": "2383360",
    "end": "2393730"
  },
  {
    "text": "is. So if I typed in this expression\nto Lisp, and then this",
    "start": "2393730",
    "end": "2400240"
  },
  {
    "text": "would put out 20. However, then if\nI said what's z,",
    "start": "2400240",
    "end": "2405974"
  },
  {
    "text": "the computer would say\nthat's an unbound variable. So let is a way of\nsetting up a context where",
    "start": "2405975",
    "end": "2413260"
  },
  {
    "text": "you can make definitions. But those definitions are\nlocal to this context.",
    "start": "2413260",
    "end": "2419320"
  },
  {
    "text": "And of course, if I'd said\na in here, I'd still get 20.",
    "start": "2419320",
    "end": "2427990"
  },
  {
    "text": "But this a would not interfere\nat all with this one.",
    "start": "2427990",
    "end": "2433859"
  },
  {
    "text": "So if I type this, and then type\nthis, and then say what's a? a will still be 5.",
    "start": "2433859",
    "end": "2439160"
  },
  {
    "text": "So there's some other\nsubtle differences between let and define, but\nthat's the most important one.",
    "start": "2439160",
    "end": "2444543"
  },
  {
    "start": "2444543",
    "end": "2480090"
  },
  {
    "text": "All right, well, we've looked at\nimplementing this little system for doing arithmetic\non rational numbers",
    "start": "2480090",
    "end": "2486210"
  },
  {
    "text": "as an example of this\nmethodology of data abstraction. And that's a way of controlling\ncomplexity in large systems.",
    "start": "2486210",
    "end": "2496869"
  },
  {
    "text": "But, see, like\nprocedure definition, and like all the\nways we're going to talk about for\ncontrolling complexity,",
    "start": "2496870",
    "end": "2502370"
  },
  {
    "text": "the real power of these things\nshow up not when you sort of do these things in themselves,\nlike it's not such a great thing",
    "start": "2502370",
    "end": "2509880"
  },
  {
    "text": "that we've done rational\nnumber arithmetic, it's that you can use\nthese as building blocks",
    "start": "2509880",
    "end": "2516670"
  },
  {
    "text": "for making more\ncomplicated things. So it's no wonderful idea that\nyou can just put two numbers",
    "start": "2516670",
    "end": "2523266"
  },
  {
    "text": "together to form a pair. If that's all you\never wanted to do, there are tons of ways\nthat you can do that.",
    "start": "2523266",
    "end": "2528450"
  },
  {
    "text": "The real issue is can\nyou do that in such a way so that the things\nthat you build become building blocks for doing\nsomething even more complex?",
    "start": "2528450",
    "end": "2536945"
  },
  {
    "text": "So whenever someone\nshows you a method for controlling complexity, you\nshould say, yeah, that's great, but what can I build with it? ",
    "start": "2536945",
    "end": "2545290"
  },
  {
    "text": "So for example, let me just run\nthrough another thing that's",
    "start": "2545290",
    "end": "2550632"
  },
  {
    "text": "a lot like the\nrational number one. Suppose we would like to\nrepresent points in the plane.",
    "start": "2550632",
    "end": "2555760"
  },
  {
    "text": "You sort of say,\nwell, there's a point, and we're going to\ncall that point p.",
    "start": "2555760",
    "end": "2560810"
  },
  {
    "text": "And that point might\nhave coordinates,",
    "start": "2560810",
    "end": "2567360"
  },
  {
    "text": "like this might be\nthe point 1 comma 2. The x-coordinate might be 1, and\nit's y-coordinate might be 2.",
    "start": "2567360",
    "end": "2574370"
  },
  {
    "text": "And we'll make a little\nsystem for manipulating points in the plane.",
    "start": "2574370",
    "end": "2580450"
  },
  {
    "text": "And again, we can\ndo that-- here's a little example of that. ",
    "start": "2580450",
    "end": "2587070"
  },
  {
    "text": "It can represent vectors, the\nsame as points in the plane, and we'll say, yep, there's a\nconstructor called make-vector,",
    "start": "2587070",
    "end": "2598160"
  },
  {
    "text": "make-vector's going to\ntake two coordinates, and here we can implement\nthem if we like as pairs,",
    "start": "2598160",
    "end": "2604050"
  },
  {
    "text": "but the important thing is\nthat there's a constructor. And then given some vector, p,\nwe can find its x-coordinate,",
    "start": "2604050",
    "end": "2611890"
  },
  {
    "text": "or we can get its y-coordinate. So there's a constructor\nand selectors for points in the plane.",
    "start": "2611890",
    "end": "2619010"
  },
  {
    "text": "Well, given points\nin the plane, we might want to use them\nto build something. So for instance, we\nmight want to talk",
    "start": "2619010",
    "end": "2624020"
  },
  {
    "text": "about, we might have a\npoint, p, and a point, q, and p might be the point 1, 2,\nand q might be the point 2, 3.",
    "start": "2624020",
    "end": "2634790"
  },
  {
    "text": "And we might want to talk\nabout the line segment that starts at p and ends at q.",
    "start": "2634790",
    "end": "2641570"
  },
  {
    "text": "And that might be the segment s. So we might want to\nbuild points for vectors",
    "start": "2641570",
    "end": "2651920"
  },
  {
    "text": "in terms of numbers, and\nsegments in terms of vectors. So we can represent\nline segments",
    "start": "2651920",
    "end": "2658180"
  },
  {
    "text": "in exactly the same way. All right, so the line\nsegment from p to q, we'll say there's a\nconstructor, make-segment.",
    "start": "2658180",
    "end": "2663640"
  },
  {
    "text": " And make up names\nfor the selectors,",
    "start": "2663640",
    "end": "2669530"
  },
  {
    "text": "the starting point\nof the segment and the ending point\nof the segment. And again, we can implement\na segment using cons",
    "start": "2669530",
    "end": "2674755"
  },
  {
    "text": "as a pair of points, and car\nand cdr get out the two points that we put together\nto get the segment.",
    "start": "2674755",
    "end": "2680540"
  },
  {
    "text": " Well, now having\ndone that, we can",
    "start": "2680540",
    "end": "2688210"
  },
  {
    "text": "have some operations on them. Like we could say, what's the\nmidpoint of a line segment?",
    "start": "2688210",
    "end": "2697609"
  },
  {
    "text": "So here's the midpoint\nof a line segment, that's going to be the\npoints whose coordinates are",
    "start": "2697610",
    "end": "2705000"
  },
  {
    "text": "the averages of the\ncoordinates of the endpoints. OK, there's the midpoint.",
    "start": "2705000",
    "end": "2710170"
  },
  {
    "text": "So to get the midpoint\nof a line segment, s, we'll just say grab the\nstarting point to the segment,",
    "start": "2710170",
    "end": "2717630"
  },
  {
    "text": "grab the ending\npoint of the segment, and now make a vector-- make\na point whose coordinates are",
    "start": "2717630",
    "end": "2724500"
  },
  {
    "text": "the average of the\nx-coordinate of the first point and the x-coordinate\nof the second point,",
    "start": "2724500",
    "end": "2730220"
  },
  {
    "text": "and whose y-coordinate is the\naverage of the y-coordinates. So there's an\nimplementation of midpoint.",
    "start": "2730220",
    "end": "2737810"
  },
  {
    "text": "And then similarly,\nwe can build something like the length of the segment.",
    "start": "2737810",
    "end": "2744450"
  },
  {
    "text": "The length of the\nsegment is a thing whose-- use Pythagoras's rule,\nthe length of the segment",
    "start": "2744450",
    "end": "2752849"
  },
  {
    "text": "is the square root of the d\nx squared plus d y squared. We'll say to get the\nlength of a line segment,",
    "start": "2752850",
    "end": "2760600"
  },
  {
    "text": "we'll let dx be the difference\nof the x-coordinate of one",
    "start": "2760600",
    "end": "2766570"
  },
  {
    "text": "endpoint and the x-coordinate\nof the other endpoint, and we'll let dy\nbe the difference",
    "start": "2766570",
    "end": "2773910"
  },
  {
    "text": "of the y-coordinates. And then we'll take\nthe square root of the sum of the squares of dx\nand dy, that's what this says.",
    "start": "2773910",
    "end": "2782251"
  },
  {
    "text": "All right, so there's an\nimplementation of length. And again, what we built\nis a layered system.",
    "start": "2782251",
    "end": "2795760"
  },
  {
    "text": "We built a system which\nhas, well, say up here there's segments. ",
    "start": "2795760",
    "end": "2807430"
  },
  {
    "text": "And then there's an\nabstraction barrier. The abstraction barrier\nseparates the implementation",
    "start": "2807430",
    "end": "2816880"
  },
  {
    "text": "of segments from the\nimplementation of vectors and points, and what that\nabstraction barrier is",
    "start": "2816880",
    "end": "2822460"
  },
  {
    "text": "are the constructors\nand selectors. It's make-segment, and\nsegment-start, and segment-end.",
    "start": "2822460",
    "end": "2834750"
  },
  {
    "text": " And then there are vectors.",
    "start": "2834750",
    "end": "2840120"
  },
  {
    "text": "And vectors in turn are built\non top of pairs and numbers.",
    "start": "2840120",
    "end": "2845600"
  },
  {
    "text": "So I'll say pairs and numbers. And that has its own\nabstraction barrier,",
    "start": "2845600",
    "end": "2852930"
  },
  {
    "text": "which is make-vector, and\nx-coordinate, and y-coordinate.",
    "start": "2852930",
    "end": "2862349"
  },
  {
    "text": " So we have, again,\na layered system.",
    "start": "2862350",
    "end": "2868930"
  },
  {
    "text": "You're starting to see\nthat there are layers here. I ought to mention, there\nis a very important thing",
    "start": "2868930",
    "end": "2877470"
  },
  {
    "text": "that I kind of took for granted.  And it's sort of so natural,\nbut on the other hand",
    "start": "2877470",
    "end": "2884670"
  },
  {
    "text": "it's a very important thing. Notice that in order to\nrepresent this segment",
    "start": "2884670",
    "end": "2890230"
  },
  {
    "text": "s, I said this segment\nis a pair of points.",
    "start": "2890230",
    "end": "2896600"
  },
  {
    "text": "And a point is a\npair of numbers. And if I were going to\ndraw the box and pointers",
    "start": "2896600",
    "end": "2901750"
  },
  {
    "text": "structure for that, I\nwould say, oh, the segment is, given those particular\nrepresentations that I showed",
    "start": "2901750",
    "end": "2909560"
  },
  {
    "text": "you, I'd say this\nsegment s is a pair, and the first thing in\nthe pair is a vector,",
    "start": "2909560",
    "end": "2920600"
  },
  {
    "text": "and the vector is\na pair of numbers. And that's this, that's p.",
    "start": "2920600",
    "end": "2927000"
  },
  {
    "text": " And the other thing\nin the segment",
    "start": "2927000",
    "end": "2932060"
  },
  {
    "text": "is q, which is itself\na pair of numbers.",
    "start": "2932060",
    "end": "2940100"
  },
  {
    "text": "So I almost took\nit for granted when I said that cons allows\nyou to put things together.",
    "start": "2940100",
    "end": "2948960"
  },
  {
    "text": "But it's very easy\nto not appreciate that, because notice, some of\nthe things I can put together",
    "start": "2948960",
    "end": "2957490"
  },
  {
    "text": "can themselves be pairs. And let me introduce a word that\nI'll talk about more next time,",
    "start": "2957490",
    "end": "2964400"
  },
  {
    "text": "it's one of my favorite\nwords, called closure. ",
    "start": "2964400",
    "end": "2970640"
  },
  {
    "text": "And by closure I mean that\nthe means of combination in your system are such that\nwhen you put things together",
    "start": "2970640",
    "end": "2979040"
  },
  {
    "text": "using them, like we make a pair,\nyou can then put those together with the same means\nof combination.",
    "start": "2979040",
    "end": "2985079"
  },
  {
    "text": "So I can have not only\na pair of numbers, but I can have a pair of pairs. ",
    "start": "2985080",
    "end": "2991710"
  },
  {
    "text": "So for instance, making arrays\nin a language like Fortran",
    "start": "2991710",
    "end": "2997920"
  },
  {
    "text": "is not a closed\nmeans of combination, because I can make\nan array of numbers, but I can't make\nan array of arrays.",
    "start": "2997920",
    "end": "3003099"
  },
  {
    "text": " And one of the things that you\nshould ask, one of your tests",
    "start": "3003100",
    "end": "3009060"
  },
  {
    "text": "of quality for a\nmeans of combination that someone shows\nyou, is gee, are",
    "start": "3009060",
    "end": "3014940"
  },
  {
    "text": "the things you make closed\nunder that means of combination? So pairs would not be nearly so\ninteresting if all I could do",
    "start": "3014940",
    "end": "3021460"
  },
  {
    "text": "was make a pair of numbers. I couldn't build very\nmuch structure at all.",
    "start": "3021460",
    "end": "3026754"
  },
  {
    "text": "OK, well, we'll\ncome back to that. I just wanted to mention it now. You'll hear a lot\nabout closure later on.",
    "start": "3026754",
    "end": "3032170"
  },
  {
    "text": "You can also see the\npotential for losing control",
    "start": "3032170",
    "end": "3038420"
  },
  {
    "text": "of complexity as you have\na layered system if you don't use data abstraction.",
    "start": "3038420",
    "end": "3044030"
  },
  {
    "text": "Let's go back and look\nat this slide for length. Length works and is a simple\nthing because I can say,",
    "start": "3044030",
    "end": "3052826"
  },
  {
    "text": "when I want to get this\nvalue, I can say, oh, that is the x-coordinate of the\nfirst endpoint of the segment.",
    "start": "3052826",
    "end": "3060430"
  },
  {
    "text": " And each of these things,\neach of these selectors, x-coordinate and endpoint,\nstand for a decision choice",
    "start": "3060430",
    "end": "3069190"
  },
  {
    "text": "whose details I don't\nhave to look at. So I could perfectly\nwell, again, just",
    "start": "3069190",
    "end": "3074500"
  },
  {
    "text": "like rational numbers\nI did before, I could say, oh well,\ngee, a segment really is a pair of pairs.",
    "start": "3074500",
    "end": "3081180"
  },
  {
    "text": "And the x-coordinate of the\nfirst endpoint or the segment really is the--\nwell, what is it?",
    "start": "3081180",
    "end": "3087330"
  },
  {
    "text": "It's the car of the\ncar of the segment.",
    "start": "3087330",
    "end": "3093890"
  },
  {
    "text": "So I could perfectly well\ngo and redefine length. I could say, define the\nlength of some segment s.",
    "start": "3093890",
    "end": "3108614"
  },
  {
    "text": "And I could start\noff writing something like, well, we'll let dx be--\nwell, what's it have to be?",
    "start": "3108614",
    "end": "3116062"
  },
  {
    "text": "It's got to be the difference\nof the two coordinates, so that's the difference\nof, the first one is the car of the car\nof s, subtracted",
    "start": "3116062",
    "end": "3128910"
  },
  {
    "text": "from the first one, the car\nof the other half of it,",
    "start": "3128910",
    "end": "3134039"
  },
  {
    "text": "the cdr of s. ",
    "start": "3134040",
    "end": "3141529"
  },
  {
    "text": "All right, and then\ndy would be-- well, let's see, I'd get\nthe y-coordinate,",
    "start": "3141530",
    "end": "3147260"
  },
  {
    "text": "so it'd be the difference\nof the cdr of the car of s,",
    "start": "3147260",
    "end": "3153850"
  },
  {
    "text": "and the cdr of the cdr\nof s, sort of go on.",
    "start": "3153850",
    "end": "3161385"
  },
  {
    "text": " You can see that's\nmuch harder to read",
    "start": "3161385",
    "end": "3166800"
  },
  {
    "text": "than the program I had before. But worse than that, suppose\nyou'd gone and implemented",
    "start": "3166800",
    "end": "3172681"
  },
  {
    "text": "length?  And then the next day,\nGeorge comes to you and says,",
    "start": "3172681",
    "end": "3179020"
  },
  {
    "text": "I'm sorry, I changed my mind. I want to write points with\nthe x-coordinate first.",
    "start": "3179020",
    "end": "3184945"
  },
  {
    "text": "So you come back you\nstare at this code and say, oh gee, what was that? That was the car, so I\nhave to change this to cdr,",
    "start": "3184945",
    "end": "3193980"
  },
  {
    "text": "and this is cdr, and\nthis now has to be car.",
    "start": "3193980",
    "end": "3200770"
  },
  {
    "text": "And this has to be car. And you sort of\ndo that, and then the next day George\ncomes back and says,",
    "start": "3200770",
    "end": "3206726"
  },
  {
    "text": "sorry, the guys\ndesigning the display would like lines to be painted\nin the opposite direction,",
    "start": "3206726",
    "end": "3215490"
  },
  {
    "text": "so I have to write the\nendpoint first in the order. And then you come back and you\nstare at this code, and say, gee, what was it talking about?",
    "start": "3215490",
    "end": "3222400"
  },
  {
    "text": "Oh yeah, well I've got to\nchange this one to cdr, and this one becomes\ncar, this one comes car,",
    "start": "3222400",
    "end": "3229745"
  },
  {
    "text": "and this becomes cdr. And you go up and do that,\nand then the next day, George comes back and says,\nI'm sorry, what I really meant is that the\nsegments always",
    "start": "3229746",
    "end": "3236130"
  },
  {
    "text": "have to be painted from\nleft to right on the screen. And then you sort\nof, it's clear, you just go and punch George\nin the mouth at that point.",
    "start": "3236130",
    "end": "3243610"
  },
  {
    "text": "But you see, as soon as\nwe have a 10 layer system,",
    "start": "3243610",
    "end": "3249310"
  },
  {
    "text": "you see how that complexity\nimmediately builds up to the point where even\nsomething like this gets out of control.",
    "start": "3249310",
    "end": "3256250"
  },
  {
    "text": "So again, the way we've\ngotten out of that is we've named that spirit. We built a system where\nthere is a thing, which",
    "start": "3256250",
    "end": "3265770"
  },
  {
    "text": "is the representation\nchoice for how you're going to talk about vectors.",
    "start": "3265770",
    "end": "3271569"
  },
  {
    "text": "And choices about\nthat representation are localized right there. They don't have\ntheir guts spilling",
    "start": "3271570",
    "end": "3276930"
  },
  {
    "text": "over into things like how\nyou compute the length and how you compute\nthe midpoint. And that's the real\npower of this system.",
    "start": "3276930",
    "end": "3285660"
  },
  {
    "text": "OK, we're explicit\nabout them, so that we have control over them.",
    "start": "3285660",
    "end": "3290916"
  },
  {
    "text": "All right, questions? AUDIENCE: What happens\nin the case where you don't want to be treating\nobjects in terms of pairs?",
    "start": "3290916",
    "end": "3296660"
  },
  {
    "text": "For instance, in\nthree-dimensional space, you'd have three coordinates.",
    "start": "3296660",
    "end": "3301680"
  },
  {
    "text": "Or even in the case where you\nhave n-dimensional space, what happens? PROFESSOR: Right, OK. Well, this is a preview\nof what I'll say tomorrow.",
    "start": "3301680",
    "end": "3308373"
  },
  {
    "text": "But the point is, once\nyou have two things,",
    "start": "3308374",
    "end": "3314640"
  },
  {
    "text": "you have as many\nthings as you want. All right? Because if I want to\nmake three things, I could start making things\nlike a pair whose first thing is",
    "start": "3314640",
    "end": "3325880"
  },
  {
    "text": "1, and whose second thing\nis another pair that,",
    "start": "3325880",
    "end": "3331369"
  },
  {
    "text": "say, has 2 and 3 in it. And so on, a hundred things. I can nest them out of pairs.",
    "start": "3331370",
    "end": "3337550"
  },
  {
    "text": "I made a pretty arbitrary\ndecision about how to do it, and you can\nimmediately see there are lots of ways to do that.",
    "start": "3337550",
    "end": "3342724"
  },
  {
    "text": "What we'll start\ntalking about next time are conventions for how\nto do things like that. But notice that what this\nreally depends on is I",
    "start": "3342724",
    "end": "3349600"
  },
  {
    "text": "can make pairs of pairs. If all I could do was make\npairs of numbers, I'd be stuck. ",
    "start": "3349600",
    "end": "3367140"
  },
  {
    "text": "OK. Let's break. [MUSIC PLAYING]",
    "start": "3367140",
    "end": "3415580"
  },
  {
    "text": "All right, well,\nwe've just gone off and done a couple of simple\nexamples of data abstraction.",
    "start": "3415580",
    "end": "3423575"
  },
  {
    "text": "Now I want to do something\nmore complicated. We're going to talk\nabout what it means. And this will be harder,\nbecause it's always",
    "start": "3423575",
    "end": "3431390"
  },
  {
    "text": "much harder in\ncomputer programming to talk about what something\nmeans than to go off and do it.",
    "start": "3431390",
    "end": "3436450"
  },
  {
    "text": "But let's go back to\nalmost the very beginning.",
    "start": "3436450",
    "end": "3442070"
  },
  {
    "text": "Let's go back to the\npoint where I said, we just assumed that there\nwere procedures, make-RAT,",
    "start": "3442070",
    "end": "3452370"
  },
  {
    "text": "and numer, and denom.",
    "start": "3452370",
    "end": "3458480"
  },
  {
    "text": "Let's go back to where we had\nthis, at the very beginning, constructors and\nselectors, and went off",
    "start": "3458480",
    "end": "3464920"
  },
  {
    "text": "and defined the rational\nnumber arithmetic. And remember, I\nsaid at that point we were sort of done,\nexcept for George.",
    "start": "3464920",
    "end": "3471990"
  },
  {
    "text": "Well, what is it that we'd\nactually done at that point? What was it that was done?",
    "start": "3471990",
    "end": "3479420"
  },
  {
    "text": "Well, what I want\nto say is, what was done after we'd\nimplemented the operations",
    "start": "3479420",
    "end": "3484680"
  },
  {
    "text": "and terms of these, was that we\nhad defined a rational number representation in\nterms of abstract data.",
    "start": "3484680",
    "end": "3492390"
  },
  {
    "start": "3492390",
    "end": "3497945"
  },
  {
    "text": "What do I mean by abstract data? Well, the idea is\nthat at that point,",
    "start": "3497946",
    "end": "3505610"
  },
  {
    "text": "when we had our\n+RAT and our *RAT, that any implementation of\nmake-RAT, and numerator,",
    "start": "3505610",
    "end": "3513060"
  },
  {
    "text": "and denominator that\nGeorge supplied us with, could be the basis for a\nrational number representation.",
    "start": "3513060",
    "end": "3520990"
  },
  {
    "text": "Like, it wasn't our concern\nwhere you divided through to get the greatest common\ndenominator, or any of that.",
    "start": "3520990",
    "end": "3528980"
  },
  {
    "text": "So the idea is\nthat what we built is a rational arithmetic\nsystem that would sit",
    "start": "3528980",
    "end": "3534560"
  },
  {
    "text": "on top of any representation. What do I mean by\nany representation?",
    "start": "3534560",
    "end": "3539930"
  },
  {
    "text": "I mean, certainly it can't\nbe the case that all I mean is George can reach\nin a bag and pull out three arbitrary procedures\nand say, well, fine,",
    "start": "3539930",
    "end": "3549829"
  },
  {
    "text": "now that's the implementation. That can't be what I mean. What I've got to\nmean is that there's",
    "start": "3549830",
    "end": "3558070"
  },
  {
    "text": "some way of saying whether\nthree procedures are going to be suitable as a\nbasis for rational number",
    "start": "3558070",
    "end": "3565510"
  },
  {
    "text": "representation. If we think about\nit, what suitable might mean is if I have to\nassume something like this,",
    "start": "3565510",
    "end": "3572210"
  },
  {
    "text": "I have to say that if\nx is the result of say,",
    "start": "3572210",
    "end": "3579230"
  },
  {
    "text": "doing make-RAT of n and d,\nthen the numerator of x divided",
    "start": "3579230",
    "end": "3599730"
  },
  {
    "text": "by the denominator of\nx is equal to n over d.",
    "start": "3599730",
    "end": "3609680"
  },
  {
    "text": "See, what that is is\nthat's George's contract. What we mean by writing a\ncontract for rational numbers,",
    "start": "3609680",
    "end": "3616520"
  },
  {
    "text": "if you think about it,\nthis is the right thing. And the two ones we\nshowed do the right thing. See, if I'm taking out\ngreatest common divisors,",
    "start": "3616520",
    "end": "3625369"
  },
  {
    "text": "it doesn't matter whether\nI take them out or not, or the place where I take\nthem, because the idea is I'm going to divide through.",
    "start": "3625369",
    "end": "3632380"
  },
  {
    "text": "But see, this is\nGeorge's contract. So what we really\nsay to George is your business is to\ngo off and find us",
    "start": "3632380",
    "end": "3639410"
  },
  {
    "text": "three procedures,\nmake-RAT, and numerator, and denominator, that\nfulfill this contract",
    "start": "3639410",
    "end": "3645660"
  },
  {
    "text": "for any choice of n and d. And that's what we\nmean by we can use that as the basis for a rational\nnumber representation.",
    "start": "3645660",
    "end": "3654539"
  },
  {
    "text": "And other than that, it\nfulfills this contract. We don't care how he does it. It's not our business.",
    "start": "3654540",
    "end": "3660410"
  },
  {
    "text": "It's below the layer\nof abstraction. ",
    "start": "3660410",
    "end": "3667010"
  },
  {
    "text": "In fact, if we want to say, what\nis a rational number really?",
    "start": "3667010",
    "end": "3673539"
  },
  {
    "text": "See, what's it\nreally, without having to talk about going below the\nlayer of abstraction, what we're forced into saying\nis a rational number",
    "start": "3673539",
    "end": "3681150"
  },
  {
    "text": "really is sort of this\naxiom, is three procedures,",
    "start": "3681150",
    "end": "3687869"
  },
  {
    "text": "make-RAT, numerator,\nand denominator, that satisfy this axiom. In some sense,\nabstractly, that's",
    "start": "3687870",
    "end": "3694640"
  },
  {
    "text": "what a rational\nnumber is really. ",
    "start": "3694640",
    "end": "3701490"
  },
  {
    "text": "That's sort of easy\nwords to listen to, because what you have\nin your head, of course, is well, for all this\nthing about saying",
    "start": "3701490",
    "end": "3707880"
  },
  {
    "text": "that's what a rational\nnumber is really, you actually just saw that\nwe built rational numbers.",
    "start": "3707880",
    "end": "3712950"
  },
  {
    "start": "3712950",
    "end": "3718829"
  },
  {
    "text": "See, what we really did is\nwe built rational numbers on top of pairs.",
    "start": "3718830",
    "end": "3724230"
  },
  {
    "text": " So for all I'm\nsaying abstractly,",
    "start": "3724230",
    "end": "3730680"
  },
  {
    "text": "we can say a rational number\nreally is just this axiom. You can listen to\nthat comfortably,",
    "start": "3730680",
    "end": "3737030"
  },
  {
    "text": "because you're\nsaying, well, yeah, but really it's actually pairs,\nand I'm just annoying you by trying to be abstract.",
    "start": "3737030",
    "end": "3744820"
  },
  {
    "text": "Well, let me, as an\nantidote for that, let me do something that I think\nis really going to terrify you.",
    "start": "3744820",
    "end": "3752474"
  },
  {
    "text": "I mean, it's really\ngoing to bring you face to face with the\nsort of existential reality",
    "start": "3752474",
    "end": "3759319"
  },
  {
    "text": "of this abstraction that\nwe're talking about. And what I'm going to talk\nabout is, what are pairs really?",
    "start": "3759320",
    "end": "3765960"
  },
  {
    "text": "See, what did I tell\nyou about pairs? I tricked you, right? I said that Lisp has\nthis primitive called",
    "start": "3765960",
    "end": "3771520"
  },
  {
    "text": "cons that builds pairs. But what did I really\ntell you about? If you go back and said,\nlet's look on this slide,",
    "start": "3771520",
    "end": "3779510"
  },
  {
    "text": "all I really told\nyou about pairs is that there happens to be\nthis property, these properties",
    "start": "3779510",
    "end": "3785680"
  },
  {
    "text": "of cons, car, and\ncdr. And all I really said about pairs is that\nthere's a thing called cons, and a thing called car,\nand a thing called cdr.",
    "start": "3785680",
    "end": "3794870"
  },
  {
    "text": "And it is the case that\nif I build cons of x, y and take car of it, I get x.",
    "start": "3794870",
    "end": "3800710"
  },
  {
    "text": "And if I build cons of x, y\nand get cdr of it, I get y.",
    "start": "3800710",
    "end": "3805810"
  },
  {
    "text": "And even though I lulled you\ninto thinking that there's",
    "start": "3805810",
    "end": "3811602"
  },
  {
    "text": "something in Lisp that does\nthat, so you pretended you knew what it was, in fact, I\ndidn't tell you any more about pairs than this tells\nyou about rational numbers.",
    "start": "3811602",
    "end": "3819750"
  },
  {
    "text": "It's just some axiom for pairs.  Well, to drive that\nhome, let me really",
    "start": "3819750",
    "end": "3829060"
  },
  {
    "text": "scare you, and show you what we\nmight build pairs in terms of.",
    "start": "3829060",
    "end": "3836120"
  },
  {
    "text": "And what you're going\nto see is that we can build rational\nnumbers, and line segments,",
    "start": "3836120",
    "end": "3841890"
  },
  {
    "text": "and vectors, and all of this\nstuff in terms of pairs, and we're going to see\nbelow here that pairs can",
    "start": "3841890",
    "end": "3846930"
  },
  {
    "text": "be built out of nothing at all. Pure abstraction.",
    "start": "3846930",
    "end": "3852680"
  },
  {
    "text": "So let me show you on this\nslide an implementation of cons, car, and cdr. And we'll\nlook at it again in a second,",
    "start": "3852680",
    "end": "3863080"
  },
  {
    "text": "but notice that their procedure\ndefinitions of cons, car, and cdr, you don't see any\ndata in there, what you see",
    "start": "3863080",
    "end": "3870170"
  },
  {
    "text": "is a lambda. So cons here is\ngoing to return--",
    "start": "3870170",
    "end": "3878840"
  },
  {
    "text": "is a procedure that\nreturns a procedure, just like AVERAGE DAMP.",
    "start": "3878840",
    "end": "3884630"
  },
  {
    "text": "Cons of a and b returns a\nprocedure of an argument called pick, and it says,\nif pick is equal to 1,",
    "start": "3884630",
    "end": "3894825"
  },
  {
    "text": "I'm going to return a,\nand if pick is equal to 2, I'm going to return\nb, and that's",
    "start": "3894825",
    "end": "3900869"
  },
  {
    "text": "what cons is going to be.  Car of a thing x,\ncar of a pair x,",
    "start": "3900870",
    "end": "3910850"
  },
  {
    "text": "is going to be x applied to 1. And notice that makes sense. You might not understand why\nor how I'm doing such a thing,",
    "start": "3910850",
    "end": "3916690"
  },
  {
    "text": "but at least it makes sense,\nbecause the thing constructed by cons is a procedure,\nand car applies that to 1.",
    "start": "3916690",
    "end": "3924630"
  },
  {
    "text": "And similarly, cdr\napplies that thing to 2. OK, now I claimed that this is\na representation of cons, car,",
    "start": "3924630",
    "end": "3933290"
  },
  {
    "text": "and cdr, and notice\nthere's no data in it. All right, it's\nbuilt out of air. It's just procedures.",
    "start": "3933290",
    "end": "3939599"
  },
  {
    "text": "There's no data objects at\nall in that representation. Well, what could\nthat possibly mean?",
    "start": "3939600",
    "end": "3945140"
  },
  {
    "text": " Well, if you really\nbelieve this stuff,",
    "start": "3945140",
    "end": "3954319"
  },
  {
    "text": "then you have to\nbelieve that in order to show that that's a\nrepresentation for cons, car,",
    "start": "3954320",
    "end": "3959390"
  },
  {
    "text": "and cdr, all I\nhave to do is show that it satisfies the axiom. See, all I should have\nto convince you of",
    "start": "3959390",
    "end": "3965410"
  },
  {
    "text": "is, for example, that gee,\nthat car of cons of 37 and 49",
    "start": "3965410",
    "end": "3982309"
  },
  {
    "text": "is 37 for arbitrary\nvalues of 37 and 49.",
    "start": "3982310",
    "end": "3988060"
  },
  {
    "text": "And cdr the same way.  See, if I really can\ndemonstrate to you",
    "start": "3988060",
    "end": "3994430"
  },
  {
    "text": "that that weird procedure\ndefinition, in terms of [? air ?], has the property\nthat it satisfies this,",
    "start": "3994430",
    "end": "4001809"
  },
  {
    "text": "then you just have\nto grant me that that is a possible implementation of\ncons, car, and cdr, on which I",
    "start": "4001810",
    "end": "4007970"
  },
  {
    "text": "can build everything else. Well, let's look at that. And this will be practice\nin the substitution model.",
    "start": "4007970",
    "end": "4013820"
  },
  {
    "start": "4013820",
    "end": "4019320"
  },
  {
    "text": "How could we check this? We sort of know how to do that. It's just the same\nsubstitution model.",
    "start": "4019320",
    "end": "4025811"
  },
  {
    "text": "Let's look. We start out, and we say,\nwhat's car of cons of 37 and 49?",
    "start": "4025811",
    "end": "4031120"
  },
  {
    "text": "What do we do? Cons is some procedure.  Its value is cons was\na procedure of a and b.",
    "start": "4031120",
    "end": "4039530"
  },
  {
    "text": "The thing returned by\ncons is its procedure body with 37 and 49 substituted\nfor the parameters.",
    "start": "4039530",
    "end": "4047369"
  },
  {
    "text": "It'll be 37 substituted for\na and 49 substituted for b.",
    "start": "4047370",
    "end": "4052770"
  },
  {
    "text": "So this expression has the same\nmeaning as this expression. Its car of, and the body\nof cons was this thing",
    "start": "4052770",
    "end": "4060270"
  },
  {
    "text": "that started with lambda. And it says, so if\npick is equal to 1,",
    "start": "4060270",
    "end": "4066089"
  },
  {
    "text": "where pick is this\nother argument, if pick is equal to 1, it's\n37, that's where a was,",
    "start": "4066090",
    "end": "4071450"
  },
  {
    "text": "and if pick is\nequal to 2, it's 49. So that's the first step. I'm just going through\nmechanical substitution.",
    "start": "4071450",
    "end": "4079190"
  },
  {
    "text": "And remember, at this\npoint in the course, if you're confused\nabout what things mean, go mechanically through\nthe substitution model.",
    "start": "4079190",
    "end": "4085480"
  },
  {
    "text": "Well, what is this reduced to? Car said, take your argument,\nwhich in this case is this,",
    "start": "4085480",
    "end": "4095049"
  },
  {
    "text": "and apply it to 1. That was the definition of car. So if I look at car, if\nI do that, the answer is,",
    "start": "4095050",
    "end": "4102370"
  },
  {
    "text": "well, it's that argument,\nthis was the argument to car, applied to 1. ",
    "start": "4102370",
    "end": "4109580"
  },
  {
    "text": "Well, what does that mean? I take 1, and I\nsubstitute it in the body here for this value\nof pick, which",
    "start": "4109580",
    "end": "4116120"
  },
  {
    "text": "is the name of the\nargument, what do I get? Well, I get the thing that\nsays if 1 equals 1 it's 37,",
    "start": "4116120",
    "end": "4123389"
  },
  {
    "text": "and if 1 equals 2 it's\n49, so the answer's 37. And similarly, if I'd taken\ncdr, that would apply it to 2,",
    "start": "4123390",
    "end": "4129880"
  },
  {
    "text": "and I'd get 49. So you see, what\nI've demonstrated is that that completely weird\nimplementation of cons, car,",
    "start": "4129880",
    "end": "4137560"
  },
  {
    "text": "and cdr, satisfies the axioms. So it's a perfectly\nvalid way of building,",
    "start": "4137560",
    "end": "4142640"
  },
  {
    "text": "in fact, all of the data objects\nwe're going to see in Lisp. So they all, if you\nlike, can be built on sort of existential nothing.",
    "start": "4142640",
    "end": "4149670"
  },
  {
    "text": "And as far as you know,\nthat's how it works. You couldn't tell.",
    "start": "4149670",
    "end": "4155149"
  },
  {
    "text": "If all you're ever\ngoing to do with pairs is construct them with cons and\nlook at them with car and cdr,",
    "start": "4155149",
    "end": "4160439"
  },
  {
    "text": "you couldn't possibly\ntell how this thing works. Now, it might give you a sort\nof warm feeling inside if I say,",
    "start": "4160439",
    "end": "4166528"
  },
  {
    "text": "well, yeah, in fact, for\nvarious reasons there happens to be a primitive called\ncons, car, and cdr,",
    "start": "4166529",
    "end": "4171770"
  },
  {
    "text": "and if it's too scary, if this\nkind of stuff is too scary, you don't have to\nlook inside of it. So that might make\nyou feel better,",
    "start": "4171770",
    "end": "4179068"
  },
  {
    "text": "but the point is, it\nreally could work this way, and it wouldn't\nmake any difference to the system at all.",
    "start": "4179069",
    "end": "4186589"
  },
  {
    "text": "So in some sense, we\ndon't need data at all to build these\ndata abstractions.",
    "start": "4186590",
    "end": "4191759"
  },
  {
    "text": "We can do everything\nin terms of procedures. OK, well, why did I\nterrify you in this way?",
    "start": "4191760",
    "end": "4197500"
  },
  {
    "text": "First, I really\nwant to reinforce this idea of abstraction,\nthat you really",
    "start": "4197500",
    "end": "4202800"
  },
  {
    "text": "can do these things abstractly. Secondly, I want to\nintroduce an idea",
    "start": "4202800",
    "end": "4210200"
  },
  {
    "text": "we're going to see more and\nmore of in this course, which is we're going to blur the\nline between what's data",
    "start": "4210200",
    "end": "4217440"
  },
  {
    "text": "and what's a procedure. See, in this funny\nimplementation it turned out that\ncons of something",
    "start": "4217440",
    "end": "4225060"
  },
  {
    "text": "happened to be represented\nin terms of a procedure, even though we\nthink of it as data. ",
    "start": "4225060",
    "end": "4231940"
  },
  {
    "text": "While here that's sort\nof a mathematical trick, but one of the\nthings we'll see is that a lot of the very\nimportant programming",
    "start": "4231940",
    "end": "4238540"
  },
  {
    "text": "techniques that we're\ngoing to get to sort of depend very\ncrucially on blurring",
    "start": "4238540",
    "end": "4244400"
  },
  {
    "text": "this traditional line between\nwhat you consider a procedure and what you consider data. We're going to see more and more\nof that, especially next time.",
    "start": "4244400",
    "end": "4252495"
  },
  {
    "text": "OK, questions? AUDIENCE: If you\nasked the system to print a, what would happen?",
    "start": "4252495",
    "end": "4260720"
  },
  {
    "text": "PROFESSOR: The question\nis, what would happen if I asked the system to print a. Given this representation,\nyou already know the answer.",
    "start": "4260720",
    "end": "4270200"
  },
  {
    "text": "The answer is compound procedure\na, just like last time.",
    "start": "4270200",
    "end": "4278485"
  },
  {
    "text": " It'd say compound procedure. ",
    "start": "4278485",
    "end": "4285129"
  },
  {
    "text": "It might say a little bit more. It might say compound procedure\nlambda or something or other, depending on details\nof how I named it.",
    "start": "4285129",
    "end": "4291730"
  },
  {
    "text": "But it's a procedure. And the only reason\nfor that is I haven't told the\nsystem anything special",
    "start": "4291730",
    "end": "4297620"
  },
  {
    "text": "about how to print such things. Now, it's in fact true that\nwith the actual implementation",
    "start": "4297620",
    "end": "4303500"
  },
  {
    "text": "of cons that to be\nbuilt in the system, it would print something else. It would print,\nsay, this is a pair.",
    "start": "4303500",
    "end": "4308889"
  },
  {
    "text": " AUDIENCE: When you\ndefine cons, and then you",
    "start": "4308890",
    "end": "4318410"
  },
  {
    "text": "pass it into values,\nhow does it know where to look for the cons,\nbecause you can use cons",
    "start": "4318410",
    "end": "4325699"
  },
  {
    "text": "over and over again? How does it know where to\nlook to know which a and b",
    "start": "4325700",
    "end": "4331285"
  },
  {
    "text": "it's supposed to pull back out? I don't know if I'm\nexpressing that quite right.",
    "start": "4331285",
    "end": "4337140"
  },
  {
    "text": "Where is it stored? PROFESSOR: OK, the\nquestion is, I sort of have",
    "start": "4337140",
    "end": "4343660"
  },
  {
    "text": "a cons with a 37 and a 49,\nand I might make another cons with a 1 and a 2, and I\nmight have one called a,",
    "start": "4343660",
    "end": "4349766"
  },
  {
    "text": "and I might have one called b. And the question is,\nhow does it know? And why don't they get confused?",
    "start": "4349766",
    "end": "4355275"
  },
  {
    "text": "And that's a very good question. ",
    "start": "4355275",
    "end": "4360820"
  },
  {
    "text": "See, you have to really\nbelieve that the procedures are objects. It's sort of like saying-- let's\ntry another simpler example.",
    "start": "4360820",
    "end": "4369340"
  },
  {
    "text": "Suppose I ask for\nthe square root of 3. ",
    "start": "4369340",
    "end": "4375760"
  },
  {
    "text": "So I asked for the\nsquare root of 5, and then I ask for\nthe square of 20.",
    "start": "4375760",
    "end": "4380825"
  },
  {
    "start": "4380826",
    "end": "4386216"
  },
  {
    "text": "You're probably\nnot the least bit bothered that I can take\nsquare root and apply it to 5, and then I can take square\nroot and apply it to 20.",
    "start": "4386216",
    "end": "4394624"
  },
  {
    "text": "And there's sort\nof no issue, gee, doesn't it get confused\nabout whether it's working on 5 or 20?",
    "start": "4394624",
    "end": "4399630"
  },
  {
    "text": "There's no issue about\nthat because you're thinking of a procedure which\ngoes off and does something.",
    "start": "4399630",
    "end": "4406600"
  },
  {
    "text": "Now, in some sense you're\nasking me the same question. But it's really bothering\nyou, and it's bothering you",
    "start": "4406600",
    "end": "4412750"
  },
  {
    "text": "for a really good reason. Because when I write that,\nyou're saying gee, this is, I know, sort of a procedure.",
    "start": "4412750",
    "end": "4418300"
  },
  {
    "text": "But it's not a procedure\nthat's just running. It's just sort of a\nprocedure sitting there. And how can it be that sometimes\nthis procedure has 37 and 49,",
    "start": "4418300",
    "end": "4426960"
  },
  {
    "text": "and there might be another one\nwhich has 5 and 6 in there, and why don't they get confused?",
    "start": "4426960",
    "end": "4432630"
  },
  {
    "text": "So there's something very, very\nimportant that's bothering you.",
    "start": "4432630",
    "end": "4438989"
  },
  {
    "text": "And it's really crucial\nto what's going on. We're suddenly saying that\nprocedures are not just the act",
    "start": "4438990",
    "end": "4446280"
  },
  {
    "text": "of doing something. Procedures are conceptual\nentities, objects,",
    "start": "4446280",
    "end": "4451940"
  },
  {
    "text": "and if I built\ncons of 37 and 49, that's a particular\nprocedure that sits there.",
    "start": "4451940",
    "end": "4458070"
  },
  {
    "text": "And it's different\nfrom cons of 3 and 4. That's another procedure\nthat sits there. AUDIENCE: Both of them\nexist independently.",
    "start": "4458070",
    "end": "4464060"
  },
  {
    "text": "PROFESSOR: And\nexists independently. AUDIENCE: And they both can\nbe referenced by car and cdr. PROFESSOR: And they both would\nbe referenced by car and cdr.",
    "start": "4464060",
    "end": "4470870"
  },
  {
    "text": "Just like I could\nincrement this, and I could increment that.",
    "start": "4470870",
    "end": "4478270"
  },
  {
    "text": "They're objects. And that's sort of\nwhere we're going. See, the fact that you're\nasking the question",
    "start": "4478270",
    "end": "4483280"
  },
  {
    "text": "shows that you're\nreally starting to think about the implications\nof what's going on. It's the difference between\nsaying a procedure is just",
    "start": "4483280",
    "end": "4490700"
  },
  {
    "text": "the act of doing something. And a procedure is a real\nobject that has existence.",
    "start": "4490700",
    "end": "4496270"
  },
  {
    "text": "AUDIENCE: So when the\nprocedure gets built, the actual values are now\nsubstituted for a and b-- PROFESSOR: That's right.",
    "start": "4496270",
    "end": "4502050"
  },
  {
    "text": "AUDIENCE: And then that\nprocedure exists as lambda, and pick is what's\nactually passed in.",
    "start": "4502050",
    "end": "4507720"
  },
  {
    "text": "PROFESSOR: Yes, when cons gets\ncalled, and the result of cons is a new procedure\nthat's constructed,",
    "start": "4507720",
    "end": "4513530"
  },
  {
    "text": "that new procedure has an\nargument that's called pick. AUDIENCE: But it no\nlonger has an a and b.",
    "start": "4513530",
    "end": "4518830"
  },
  {
    "text": "The a and b are the actual\nvalues that are passed through. PROFESSOR: And it has-- right,\naccording to the substitution model, what it now has is not\nthose arbitrary names a and b,",
    "start": "4518830",
    "end": "4526340"
  },
  {
    "text": "it somehow has that\n37 and 49 in there. But you're right, that's a\nhard thing to think about it,",
    "start": "4526340",
    "end": "4533520"
  },
  {
    "text": "and it's different\nfrom the way you've been thinking about procedures. AUDIENCE: And if I have\nagain cons of 37 and 49,",
    "start": "4533520",
    "end": "4538975"
  },
  {
    "text": "it's a different object? PROFESSOR: And if you make\nanother cons of 37 and 49,",
    "start": "4538975",
    "end": "4551790"
  },
  {
    "text": "you're into a wonderful\nphilosophical problem, which is going to be what the\nlecture about halfway",
    "start": "4551790",
    "end": "4557730"
  },
  {
    "text": "through this course is about. Which is, if I cons 37\nand 49, and I do it again,",
    "start": "4557730",
    "end": "4563340"
  },
  {
    "text": "is that the same thing, or\nis it a different thing? And how could you tell? And when could it\npossibly matter?",
    "start": "4563340",
    "end": "4570240"
  },
  {
    "text": "And that's sort of like saying,\nis that the same thing as this?",
    "start": "4570240",
    "end": "4581140"
  },
  {
    "text": "Or is this the\nsame thing as that? It's the same kind of question. And that's a very,\nvery deep question.",
    "start": "4581140",
    "end": "4587929"
  },
  {
    "text": "And I can't answer\nin less than an hour. But we will. ",
    "start": "4587930",
    "end": "4605972"
  }
]