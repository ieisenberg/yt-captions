[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13330"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13330",
    "end": "21001"
  },
  {
    "text": "SRINIVAS DEVADAS: Good\nmorning, everyone. So we have a singleton lecture\ntoday on linear programming,",
    "start": "21002",
    "end": "27930"
  },
  {
    "text": "which is general purpose\noptimization technique that you can use to solve a\nwhole bunch of problems,",
    "start": "27930",
    "end": "34830"
  },
  {
    "text": "including ones that we've seen\nin 6.046 and previously in 006.",
    "start": "34830",
    "end": "41350"
  },
  {
    "text": "And most recently, we\nlooked at max flow. We wouldn't have had\nto go through all",
    "start": "41350",
    "end": "46520"
  },
  {
    "text": "of that pain we went through\nto derive a max flow algorithm",
    "start": "46520",
    "end": "51920"
  },
  {
    "text": "if you had a linear\nprogramming package handy and all you wanted to do was\nfind the optimum solution.",
    "start": "51920",
    "end": "59329"
  },
  {
    "text": "You could have just\nrun the linear program with an appropriate\ninput, of course, that is",
    "start": "59330",
    "end": "66270"
  },
  {
    "text": "derived from the flow network. And you'd get your\noptimal solution. And we'll spend a couple\nof minutes on that",
    "start": "66270",
    "end": "73840"
  },
  {
    "text": "as we look at the power of\nlinear programming in today's lecture. But it's not just max flow.",
    "start": "73840",
    "end": "79770"
  },
  {
    "text": "You could do shortest paths. You could do multi\ncommodity max flow, which is more complicated\nthan max flow and a variety",
    "start": "79770",
    "end": "86250"
  },
  {
    "text": "of other problems. So that's that good news. The bad news is\nthat the algorithms",
    "start": "86250",
    "end": "92110"
  },
  {
    "text": "for linear programming are a\nheck of a lot more complicated than max flow. And you can imagine that that\nwould be the case, because it's",
    "start": "92110",
    "end": "99250"
  },
  {
    "text": "a more general purpose and\nmore powerful technique. The history really is that\nit was an open problem.",
    "start": "99250",
    "end": "107630"
  },
  {
    "text": "Up until 1979, people did not\nknow if linear programming was",
    "start": "107630",
    "end": "112649"
  },
  {
    "text": "polynomial-time solvable\nuntil Khachiyan came up with this ellipsoid\nmethod, and then there's",
    "start": "112650",
    "end": "119799"
  },
  {
    "text": "been progress sense. But the algorithm we're going\nto describe today and execute",
    "start": "119800",
    "end": "126220"
  },
  {
    "text": "on a example input is\na simplex algorithm-- the simplex algorithm--\nthat runs in worst case",
    "start": "126220",
    "end": "133490"
  },
  {
    "text": "exponential time. But it's a very\nefficient in practice. And it's held its ground,\neven with the advent",
    "start": "133490",
    "end": "142220"
  },
  {
    "text": "of more efficient, from\na theoretical sense, polynomial-time algorithms,\nnamely the ellipsoid method,",
    "start": "142220",
    "end": "152520"
  },
  {
    "text": "which actually is not\nthat efficient in practice and new interior point methods.",
    "start": "152520",
    "end": "158129"
  },
  {
    "text": "So a little bit\nof context, let's just dive into an\nexample of optimization",
    "start": "158130",
    "end": "165950"
  },
  {
    "text": "in the context of\npolitics and see",
    "start": "165950",
    "end": "172620"
  },
  {
    "text": "how you could formulate\nthis particular problem as a linear program.",
    "start": "172620",
    "end": "178470"
  },
  {
    "text": "So how does politics work? You buy elections, right?",
    "start": "178470",
    "end": "183510"
  },
  {
    "text": "So you don't want to\nspend a lot of money, so you want to minimize\nthe amount of money that",
    "start": "183510",
    "end": "190049"
  },
  {
    "text": "is required to buy an election. And the way you buy an\nelection is, well, campaign,",
    "start": "190050",
    "end": "197920"
  },
  {
    "text": "but you advertise. And it doesn't matter\nfacts that are relevant. As long as you get to the right\ndemographic with the right",
    "start": "197920",
    "end": "206450"
  },
  {
    "text": "message, let's\nassume that you're going to win the election. So that's our mathematical\nabstraction pf campaigning",
    "start": "206450",
    "end": "213360"
  },
  {
    "text": "and politics all in 30 seconds. So how to campaign\nto win an election.",
    "start": "213360",
    "end": "227880"
  },
  {
    "text": "And as I said, we're\ngoing to advertise. But you do have a little\nbit of work to do here.",
    "start": "227880",
    "end": "234390"
  },
  {
    "text": "That's why you need\nyour campaign manager. And this manager is\ngoing to estimate votes",
    "start": "234390",
    "end": "248920"
  },
  {
    "text": "obtained per dollar spent. ",
    "start": "248920",
    "end": "259160"
  },
  {
    "text": "But that dollar is spent\nadvertising in support",
    "start": "259160",
    "end": "269120"
  },
  {
    "text": "of a particular case,\nor a particular issue.",
    "start": "269120",
    "end": "274410"
  },
  {
    "text": " And contradictions are allowed.",
    "start": "274410",
    "end": "280729"
  },
  {
    "text": "As long as you're sending\ndifferent messages to different demographics,\nyou're all good, right?",
    "start": "280730",
    "end": "287340"
  },
  {
    "text": " You're assuming\nthat people don't watch more than one channel.",
    "start": "287340",
    "end": "294180"
  },
  {
    "text": "So you're a Fox News guy\nor you're a MSNB guy. You don't do both. ",
    "start": "294180",
    "end": "302660"
  },
  {
    "text": "So now, we get at this estimate. And it turns into a table.",
    "start": "302660",
    "end": "308690"
  },
  {
    "text": "And so you have your policy,\nand you've got your demographic. ",
    "start": "308690",
    "end": "319639"
  },
  {
    "text": "So you got urban, now\nthink Detroit, suburban,",
    "start": "319640",
    "end": "330670"
  },
  {
    "text": "I guess, you could\nLexington where you live, and rural-- I really don't\nhave any idea what that means.",
    "start": "330670",
    "end": "339540"
  },
  {
    "text": "But presumably, there's places. And here's our policy.",
    "start": "339540",
    "end": "345370"
  },
  {
    "text": "You want to build\nroads-- kind of boring, but some people are interested\nin roads-- gun control,",
    "start": "345370",
    "end": "355750"
  },
  {
    "text": "of very sensitive,\nfarm subsidies--",
    "start": "355750",
    "end": "361730"
  },
  {
    "text": "you know who's interested\nin that-- and gasoline tax-- kind of more, this\nhits your pocket,",
    "start": "361730",
    "end": "368870"
  },
  {
    "text": "so more or less everybody's\ninterested in that. So you tell the urban guys\nyou want to build roads,",
    "start": "368870",
    "end": "376970"
  },
  {
    "text": "and they don't like you. So you get a minus 2 there. So this can go, you\nadvertise, and it hurts you.",
    "start": "376970",
    "end": "382720"
  },
  {
    "text": "You lose votes. Tell the suburban\npeople-- well, typically,",
    "start": "382720",
    "end": "389180"
  },
  {
    "text": "it's a situation where\nyou have these nice cars,",
    "start": "389180",
    "end": "394300"
  },
  {
    "text": "and you don't like\npotholes, so you like roads if you live in suburbia. Rural people have 4-by-4's.",
    "start": "394300",
    "end": "400720"
  },
  {
    "text": "They don't particularly care. They don't care as much. Gun control-- well, you can\nimagine that urban people",
    "start": "400720",
    "end": "407670"
  },
  {
    "text": "like that. Suburban people\nare, hm, OK, meh.",
    "start": "407670",
    "end": "415040"
  },
  {
    "text": "And the rural people\nhate it, right? You do not want to advertise on\ngun control in the rural areas.",
    "start": "415040",
    "end": "423630"
  },
  {
    "text": "Farm subsidies-- so like,\ndon't want to deal with that. What is a farm? ",
    "start": "423630",
    "end": "432290"
  },
  {
    "text": "And the rural people\nlove it, right? And then gasoline tax, well,\nurban people are commuting.",
    "start": "432290",
    "end": "439690"
  },
  {
    "start": "439690",
    "end": "444700"
  },
  {
    "text": "And, well, they typically\ndon't have a lot of money. So there you go.",
    "start": "444700",
    "end": "450270"
  },
  {
    "text": "And those are the numbers. I'm not going to justify\nevery number here.",
    "start": "450270",
    "end": "457420"
  },
  {
    "text": "But you could put whatever\nnumbers you what, I mean. So let's move on. This is just a table.",
    "start": "457420",
    "end": "462700"
  },
  {
    "text": "It could have positive numbers. It could have negative numbers. And you still want\nto win this election.",
    "start": "462700",
    "end": "468360"
  },
  {
    "text": "Regardless of how\ncrazy the demographics are, how crazy\nyour electorate is, you want to win the election.",
    "start": "468360",
    "end": "474250"
  },
  {
    "text": "So as long as you\nhave a great campaign manager, who can\nget you this table,",
    "start": "474250",
    "end": "480880"
  },
  {
    "text": "it's all mathematical\nhere on out. You've just got\nto figure out how",
    "start": "480880",
    "end": "486570"
  },
  {
    "text": "you're going to win a majority. ",
    "start": "486570",
    "end": "492700"
  },
  {
    "text": "And you could argue that all\nyou want is to win the election.",
    "start": "492700",
    "end": "499542"
  },
  {
    "text": "We're going to do something\nslightly different, which is something that's obviously\ngoing to guarantee victory.",
    "start": "499542",
    "end": "508470"
  },
  {
    "text": "But you want to win a\nmajority in every demographic. As the tables may be off by\nlittle, you want to be careful.",
    "start": "508470",
    "end": "519070"
  },
  {
    "text": "So the last thing,\nof course, in order to estimate how much money you\nneed is the population here.",
    "start": "519070",
    "end": "528030"
  },
  {
    "text": " So that's votes obtained\nper dollar spent.",
    "start": "528030",
    "end": "538640"
  },
  {
    "text": "So you're getting-- it's\n$10 a vote, it's $5 a vote, et cetera.",
    "start": "538640",
    "end": "544110"
  },
  {
    "text": "And so we need to\ntranslate that to votes, because that's the dollars.",
    "start": "544110",
    "end": "549170"
  },
  {
    "text": "And you got your population\nhere corresponding to each of these areas. ",
    "start": "549170",
    "end": "556920"
  },
  {
    "text": "And that's what you got here. Majority, we'll assume you\nwin in the case of ties,",
    "start": "556920",
    "end": "565959"
  },
  {
    "text": "just to keep these numbers easy,\nso that's just divided by 2. ",
    "start": "565960",
    "end": "574630"
  },
  {
    "text": "So that's what you got so far. And you want to win by spending\nthe minimum amount of money.",
    "start": "574630",
    "end": "584675"
  },
  {
    "start": "584675",
    "end": "592740"
  },
  {
    "text": "So that's our\noptimization problem. So we can take this,\nand we can convert it",
    "start": "592740",
    "end": "598700"
  },
  {
    "text": "to a set of linear equations. And that's going to create\nour linear program-- our first linear program. ",
    "start": "598700",
    "end": "607110"
  },
  {
    "text": "And this is our algebraic setup. ",
    "start": "607110",
    "end": "616061"
  },
  {
    "text": "And so let-- we need\nsome variables here, so let x1, x2, x3, x4 denote\nthe dollars spent per issue.",
    "start": "616062",
    "end": "629170"
  },
  {
    "text": " So you got those\nfour issues up there.",
    "start": "629170",
    "end": "634199"
  },
  {
    "text": "So let me write that out. It's important to\nmake sure you know",
    "start": "634199",
    "end": "639630"
  },
  {
    "text": "what I'm talking about with\nrespect to a particular issue. So those are our four issues.",
    "start": "639630",
    "end": "645089"
  },
  {
    "text": "And those are our\nfour variables. So this linear program\nhas four variables. You're trying to discover\nthe values of these variables",
    "start": "645090",
    "end": "652490"
  },
  {
    "text": "to optimize, minimize\nyour cost function. The second thing that\na linear program has--",
    "start": "652490",
    "end": "658980"
  },
  {
    "text": "and pretty much the only other\nthing a linear program has-- are constraints. And these constraints\nare also linear.",
    "start": "658980",
    "end": "666700"
  },
  {
    "text": "It gets much more complicated if\nyou have quadratic constraints, and we won't go there.",
    "start": "666700",
    "end": "673050"
  },
  {
    "text": "These constraints that I'm\ngoing to write correspond to this statement here that\nsays you want to majority",
    "start": "673050",
    "end": "680530"
  },
  {
    "text": "in each demographic. So you can imagine that because\nyou have three demographics,",
    "start": "680530",
    "end": "685620"
  },
  {
    "text": "you're going to have\nthree constraints. You could have written\nthis differently. There's just any number\nof variants here.",
    "start": "685620",
    "end": "693579"
  },
  {
    "text": "And you'll get the sense of\nthat as we go to other examples. But we'll just stick\nto one variant here.",
    "start": "693580",
    "end": "699700"
  },
  {
    "text": "So now, I want to\ntranslate everything that I've written in English\nover there into algebra.",
    "start": "699700",
    "end": "706860"
  },
  {
    "text": "And so I got my minimization\ncriterion-- minimize x1 plus x2",
    "start": "706860",
    "end": "715870"
  },
  {
    "text": "plus x3 plus x4-- subject to\nminus 2x1 plus 8x2 plus 0x3",
    "start": "715870",
    "end": "729690"
  },
  {
    "text": "plus 10x4 greater than\nor equal to 50,000.",
    "start": "729690",
    "end": "734890"
  },
  {
    "text": "And this represents\nthe requirement that I want a majority in\nthe first demographic, namely",
    "start": "734890",
    "end": "742960"
  },
  {
    "text": "the urban demographic. And so I want at least\n50,000 votes there. And I need to spend\nthe money corresponding",
    "start": "742960",
    "end": "748650"
  },
  {
    "text": "to the values of x1\nthrough x4 in such a way that I get those 50,000 votes.",
    "start": "748650",
    "end": "753946"
  },
  {
    "text": "And that represents\nthat, and it's just reading off the minus 2, 8, 0,\nand 10 from the urban column.",
    "start": "753946",
    "end": "762210"
  },
  {
    "text": "So those numbers that you see\nhere correspond to the column, because I'm talking about\nthe urban demographic.",
    "start": "762210",
    "end": "767350"
  },
  {
    "text": "And you can imagine\nthat the next constraint is going to correspond to the\nmiddle column, and the third",
    "start": "767350",
    "end": "772610"
  },
  {
    "text": "to the third. So I'll just write that out. I will call this constraint\nthe constraint number",
    "start": "772610",
    "end": "778120"
  },
  {
    "text": "1-- I might refer to it\nlater-- 5x1, plus 2x2 plus 0x3,",
    "start": "778120",
    "end": "788162"
  },
  {
    "text": "plus 0x4 greater than\nor equal to 100,000.",
    "start": "788162",
    "end": "793339"
  },
  {
    "text": "Call this number two. And then finally, 3x1\nminus 5x2 plus 10x3.",
    "start": "793340",
    "end": "802620"
  },
  {
    "start": "802620",
    "end": "811029"
  },
  {
    "text": "And that's our set\nof constraints, but there's one\nmore little issue",
    "start": "811030",
    "end": "818290"
  },
  {
    "text": "that we have to be careful\nabout, if you're being precise, and that is that there's no\nnotion of un-advertising.",
    "start": "818290",
    "end": "830890"
  },
  {
    "text": "And so you're going to\nspend positive dollars.",
    "start": "830890",
    "end": "836940"
  },
  {
    "text": "And so x1 through x4 is\ngreater than or equal to 0. So that's our first\nlinear program.",
    "start": "836940",
    "end": "843720"
  },
  {
    "text": "And it came from this\nparticular problem. It'd be wonderful--\nand that's exactly what we're going to do for\nthe rest of the lecture--",
    "start": "843720",
    "end": "850860"
  },
  {
    "text": "if we could solve\nthis linear program and any possible linear\nprogram in an efficient way.",
    "start": "850860",
    "end": "860010"
  },
  {
    "text": "And so the number of\nvariables is small n. ",
    "start": "860010",
    "end": "869269"
  },
  {
    "text": "And you can imagine that the\nnumber of constraints here, just talking about these\nconstraints, are m constraints.",
    "start": "869270",
    "end": "875586"
  },
  {
    "text": " And you certainly want at run\ntime that is polynomial in n.",
    "start": "875586",
    "end": "887440"
  },
  {
    "text": "That's our goal here. And as I mentioned\nearly on, it was unclear",
    "start": "887440",
    "end": "893170"
  },
  {
    "text": "for the longest time-- well,\nat least not until 1979, but people had been\nthinking about it for a long time before\nthat-- as to whether there",
    "start": "893170",
    "end": "900320"
  },
  {
    "text": "was a general algorithm that\nwould solve any linear program in time-polynomial in n.",
    "start": "900320",
    "end": "906266"
  },
  {
    "text": "And that was resolved\nin '79 by Khachiyan. We'll look at a algorithm as\nsimplex that in the worst case",
    "start": "906266",
    "end": "914760"
  },
  {
    "text": "runs exponentially in n\nbut is simpler to describe and is very efficient\nin practice.",
    "start": "914760",
    "end": "921470"
  },
  {
    "text": "So in our particular problem,\nthis one, it turns out you--",
    "start": "921470",
    "end": "929615"
  },
  {
    "text": "and I'm actually going to come\nback to this in a second-- but I will just tell\nyou that the optimum",
    "start": "929616",
    "end": "939420"
  },
  {
    "text": "for this particular\nlinear program with these particular numbers\ncorrespond to these numbers",
    "start": "939420",
    "end": "949170"
  },
  {
    "text": "here. So you want to spend something\nof the order of $20,000",
    "start": "949170",
    "end": "956602"
  },
  {
    "text": "for-- so there's 100\nhere, so take away the two",
    "start": "956602",
    "end": "961779"
  },
  {
    "text": "0's-- so spend something of the\norder of $20,000 for the first issue, building roads, spend\na bit of money for the second",
    "start": "961780",
    "end": "971040"
  },
  {
    "text": "issue, ignore the third\ncorresponding to farm subsidies, and spend a bit\nof money for the gasoline tax",
    "start": "971040",
    "end": "983500"
  },
  {
    "text": "issue. And these numbers aren't\nimportant, other than the fact that they happen to be optimum.",
    "start": "983500",
    "end": "990190"
  },
  {
    "text": "So if you add up these numbers,\nthen x1 plus x2 plus x3 plus x4",
    "start": "990190",
    "end": "1000070"
  },
  {
    "text": "is something of the\norder of $21,000--",
    "start": "1000070",
    "end": "1005110"
  },
  {
    "text": "$27,000, excuse me,\nthough I'm writing it out as this fraction.",
    "start": "1005110",
    "end": "1010890"
  },
  {
    "text": "So important consideration\nhere is that these values xi",
    "start": "1010890",
    "end": "1017580"
  },
  {
    "text": "are real numbers.  That's it.",
    "start": "1017580",
    "end": "1023639"
  },
  {
    "text": "It's not that they\nhave to be integral. Clearly, there\nwere fractions here for the optimum,\nsome of them anyway.",
    "start": "1023640",
    "end": "1030709"
  },
  {
    "text": "But in general,\nlinear programming says the variable\nvalues are real.",
    "start": "1030710",
    "end": "1037439"
  },
  {
    "text": "There's also integer\nlinear programming, which is NP complete, which\nadds the additional constraint",
    "start": "1037440",
    "end": "1043829"
  },
  {
    "text": "that the xi values are integral. So it turns into\na harder problem. You got polynomial-time\nsolvable if the xi are real.",
    "start": "1043829",
    "end": "1051700"
  },
  {
    "text": "You got NP complete,\nwhich Eric is going to talk about on\nThursday, if the values are",
    "start": "1051700",
    "end": "1060570"
  },
  {
    "text": "forced to be integral. So this extra constraint makes\nthings worse from a complexity standpoint.",
    "start": "1060570",
    "end": "1066700"
  },
  {
    "text": "We won't talk about ILP anymore\nfor the rest of this lecture. So I will come back to this.",
    "start": "1066700",
    "end": "1072429"
  },
  {
    "text": "And I'll talk about\nhow we can show that this is optimum\nwithout actually going",
    "start": "1072430",
    "end": "1078460"
  },
  {
    "text": "into a deep algorithmic dive. But what I want to\ndo just before that",
    "start": "1078460",
    "end": "1084090"
  },
  {
    "text": "is to give you the\ngeneral formulation of a linear program.",
    "start": "1084090",
    "end": "1090130"
  },
  {
    "text": "It's called the standard\nform in CLRS, also called",
    "start": "1090130",
    "end": "1096290"
  },
  {
    "text": "the general form. In some cases, we'll look\nat the standard form for LP.",
    "start": "1096290",
    "end": "1110380"
  },
  {
    "text": "And I want to pop up a\nlevel about this example",
    "start": "1110380",
    "end": "1115770"
  },
  {
    "text": "and give you the\ngeneral setting. And we'll focus in on the\ngeneral setting for the most",
    "start": "1115770",
    "end": "1121580"
  },
  {
    "text": "part. But what I have here is\nI can either minimize",
    "start": "1121580",
    "end": "1127160"
  },
  {
    "text": "or maximize-- we\nhad a minimization problem-- for the\npolitical problem,",
    "start": "1127160",
    "end": "1136480"
  },
  {
    "text": "minimize the linear\nobjective function subject to linear\ninequalities or equations.",
    "start": "1136480",
    "end": "1152395"
  },
  {
    "start": "1152395",
    "end": "1157790"
  },
  {
    "text": "And the variables,\nthink of x as a vector,",
    "start": "1157790",
    "end": "1164260"
  },
  {
    "text": "it's a column vector, or\nx1, x2, all the way to xn.",
    "start": "1164260",
    "end": "1170400"
  },
  {
    "start": "1170400",
    "end": "1179030"
  },
  {
    "text": "And the objective function is\nc times x, so that's c1x1 dot,",
    "start": "1179030",
    "end": "1195980"
  },
  {
    "text": "dot, dot, cnxn. And we just had all the\ncoefficients being a 1",
    "start": "1195980",
    "end": "1201860"
  },
  {
    "text": "over there. And the inequalities,\nthey're the fun part,",
    "start": "1201860",
    "end": "1212260"
  },
  {
    "text": "you can represent\nthem as a matrix A, so A times x less\nthan or equal to b.",
    "start": "1212260",
    "end": "1220090"
  },
  {
    "text": "And notice that this\nis the standard form that I'm talking about. And now, I have\ndiverged from what",
    "start": "1220090",
    "end": "1226805"
  },
  {
    "text": "I had here, because\nI had greater than or equal to over here. So it turns out, you'll\nsee linear programs",
    "start": "1226805",
    "end": "1233520"
  },
  {
    "text": "in different settings. Sometimes, you'll\nhave minimization. Sometimes, you'll\nhave maximization. Sometimes, you'll have\nless than constraints,",
    "start": "1233520",
    "end": "1240364"
  },
  {
    "text": "less than or equal\nto constraints. Sometimes, you'll have greater\nthan or equal to constraints. Sometimes, you'll have\nequality constraints.",
    "start": "1240364",
    "end": "1245940"
  },
  {
    "text": "We'll spend a little\nbit of time talking about how you can transform\nany given linear program",
    "start": "1245940",
    "end": "1252000"
  },
  {
    "text": "into a standard form. So our standard form is going\nto be something that maximizes",
    "start": "1252000",
    "end": "1261040"
  },
  {
    "text": "the objective function. So these are our\ninequalities, and they're represented as less\nthan or equal to.",
    "start": "1261040",
    "end": "1267900"
  },
  {
    "text": "That's the standard form. And you want to maximize\nc times x-- again,",
    "start": "1267900",
    "end": "1279330"
  },
  {
    "text": "max for standard-- such that\nthese set of inequalities",
    "start": "1279330",
    "end": "1285960"
  },
  {
    "text": "told Ax less than or equal\nto b and x greater than",
    "start": "1285960",
    "end": "1293159"
  },
  {
    "text": "or equal to 0. So for each of the values that\ncorrespond to the variables,",
    "start": "1293160",
    "end": "1300320"
  },
  {
    "text": "you want these variables\nto be non-negative in the standard form. And you want less than\nor equal to corresponding",
    "start": "1300320",
    "end": "1306410"
  },
  {
    "text": "to each of the\ninequalities-- not equal to, not greater than or equal to,\nbut less than or equal to.",
    "start": "1306410",
    "end": "1312700"
  },
  {
    "text": "And you have this\nlinear cost function, where you could have\narbitrary coefficients, but you're maximizing it.",
    "start": "1312700",
    "end": "1319950"
  },
  {
    "text": "So that's it. So it's all about polarities,\nnot much more than that. It's just about polarities.",
    "start": "1319950",
    "end": "1325260"
  },
  {
    "text": "And if you get a linear program,\na specific linear program that",
    "start": "1325260",
    "end": "1331030"
  },
  {
    "text": "doesn't conform to this-- we'll\nspend a few minutes talking about conversions--\nand it's going",
    "start": "1331030",
    "end": "1336730"
  },
  {
    "text": "to be fairly straightforward. May not be immediately\nobvious, but we'll get to that.",
    "start": "1336730",
    "end": "1343530"
  },
  {
    "text": "Any questions so far? ",
    "start": "1343530",
    "end": "1348810"
  },
  {
    "text": "So I want to go\nback to this claim",
    "start": "1348810",
    "end": "1354460"
  },
  {
    "text": "here, where I said\nthis is optimum. Now without actually\ndescribing an algorithm to you,",
    "start": "1354460",
    "end": "1364520"
  },
  {
    "text": "I'm going to be able\nto show you, convince you, that this value\nhere corresponding",
    "start": "1364520",
    "end": "1370690"
  },
  {
    "text": "to whatever it is, 3\nmillion, 3.1 million, is in fact optimum.",
    "start": "1370690",
    "end": "1376470"
  },
  {
    "text": "And this is\nsomething I could do, because linear programming\nhas this powerful notion",
    "start": "1376470",
    "end": "1386779"
  },
  {
    "text": "of duality. So what is that? Well, let's just first look\nat our specific example here.",
    "start": "1386780",
    "end": "1396010"
  },
  {
    "text": "And I'll give you a very\nspecific observation. I'm going to give\nyou what you can",
    "start": "1396010",
    "end": "1402170"
  },
  {
    "text": "think of as a certificate\nof optimality. ",
    "start": "1402170",
    "end": "1410429"
  },
  {
    "text": "I'm going to give you a\ncertificate of optimality for that set of numbers. And here's how I'm\ngoing to do it.",
    "start": "1410429",
    "end": "1417860"
  },
  {
    "text": "So is there a short certificate? ",
    "start": "1417860",
    "end": "1425550"
  },
  {
    "text": "I can imagine giving\nyou a long proof that a particular linear\nprogramming algorithm always",
    "start": "1425550",
    "end": "1431659"
  },
  {
    "text": "gives you the minimum\nanswer, the optimum answer, walk through that,\nexecutive that algorithm",
    "start": "1431660",
    "end": "1439020"
  },
  {
    "text": "on this particular\nexample, and then you're convinced, of course,\nthat the solution is",
    "start": "1439020",
    "end": "1447480"
  },
  {
    "text": "going to be optimum. But for this specific example, I\nwant to give you a certificate. This certificate isn't going\nto work for other examples.",
    "start": "1447480",
    "end": "1455450"
  },
  {
    "text": "It's going to short, because it\nonly works with this example. But it won't work\nfor other ones.",
    "start": "1455450",
    "end": "1461010"
  },
  {
    "text": "And so how do I do that?  So the answer is,\nin fact, there is",
    "start": "1461010",
    "end": "1467250"
  },
  {
    "text": "a certificate that shows that\nthe LP solution is optimal.",
    "start": "1467250",
    "end": "1473990"
  },
  {
    "text": "And consider that I compute this\nparticular algebraic quantity,",
    "start": "1473990",
    "end": "1489230"
  },
  {
    "text": "where all I've done is I've\ntaken these three equations",
    "start": "1489230",
    "end": "1499960"
  },
  {
    "text": "and I've multiplied them\nby these magical constants.",
    "start": "1499960",
    "end": "1506620"
  },
  {
    "text": "And so I'm not going\nto tell you how we get this certificate of optimality. But I'm going to give\nyou the certificate.",
    "start": "1506620",
    "end": "1512899"
  },
  {
    "text": "And it's going to\nbe clear that it's a certificate of optimality. And if I take these three\nequations here, 1, 2, and 3--",
    "start": "1512900",
    "end": "1520030"
  },
  {
    "text": "actually, I refer to 1, 2, and\n3, they refer to the equations.",
    "start": "1520030",
    "end": "1525880"
  },
  {
    "text": "These are equations\nor constraints. And so I take that.",
    "start": "1525880",
    "end": "1530890"
  },
  {
    "text": "And obviously, if I have\na bunch of equations and I multiply them out, I\ncan certainly add them up,",
    "start": "1530890",
    "end": "1536429"
  },
  {
    "text": "and I get another\nequation at the end of it. And it's all going to be linear. And if I do that,\nI get x1 plus x2",
    "start": "1536430",
    "end": "1546220"
  },
  {
    "text": "plus 140 divided by\n222 times x3 plus x4.",
    "start": "1546220",
    "end": "1553110"
  },
  {
    "text": "So that's what happens\nto the left hand side. And the right hand\nside is-- you'll",
    "start": "1553110",
    "end": "1559830"
  },
  {
    "text": "recognize this quantity--\nfive 0's divided by 111.",
    "start": "1559830",
    "end": "1567760"
  },
  {
    "text": "That's what you get. So now, can someone tell me\nwhy in the last step, why",
    "start": "1567760",
    "end": "1573590"
  },
  {
    "text": "this is a certificate\nof optimality-- the fact that obviously, this\nis all algebra, once I've",
    "start": "1573590",
    "end": "1579690"
  },
  {
    "text": "discovered the coefficients--\nso now that I've done this, why have I just shown you that\n3.1 million divided by 111",
    "start": "1579690",
    "end": "1589690"
  },
  {
    "text": "is, in fact, optimum? Can someone tell me this? ",
    "start": "1589690",
    "end": "1595007"
  },
  {
    "text": "Look at what you have\non the left hand side. ",
    "start": "1595007",
    "end": "1600110"
  },
  {
    "text": "No? Yeah. AUDIENCE: Any other\nsolution would cost more than the amount put in spent.",
    "start": "1600110",
    "end": "1607840"
  },
  {
    "text": "SRINIVAS DEVADAS:\nAny other solution, but I want you to relate\nthat to-- what am I spending?",
    "start": "1607840",
    "end": "1613500"
  },
  {
    "text": "AUDIENCE: You're\nspending 3,100,000-- like, it's the same thing.",
    "start": "1613500",
    "end": "1619270"
  },
  {
    "text": "SRINIVAS DEVADAS: Yeah, but\nI mean, this was a claim. This was a claim-- and at\nthis point, an unproven claim.",
    "start": "1619270",
    "end": "1626500"
  },
  {
    "text": " It was an unproven claim.",
    "start": "1626500",
    "end": "1632025"
  },
  {
    "text": "Yeah, go ahead. AUDIENCE: You know that the left\nhand side of that inequality is less than or equal to\nx1 plus x2 plus x3 plus x4.",
    "start": "1632025",
    "end": "1638227"
  },
  {
    "text": "SRINIVAS DEVADAS: Correct. And what is x1 plus x2 plus\nx3 plus x4, to be clear? AUDIENCE: The thing\nyou're trying to minimize?",
    "start": "1638227",
    "end": "1644770"
  },
  {
    "text": "SRINIVAS DEVADAS: Yeah,\nexactly, the thing you're trying to minimize. Exactly. You're almost there. but the key observation here is\nthat x1 plus x2 plus x3 plus x4",
    "start": "1644770",
    "end": "1657550"
  },
  {
    "text": "is greater than or equal to x1\nplus x2-- because all of these are positive quantities,\nremember-- 140 divided by 222,",
    "start": "1657550",
    "end": "1665140"
  },
  {
    "text": "that's less than 1,\nx3 plus x4, correct?",
    "start": "1665140",
    "end": "1670940"
  },
  {
    "text": "So given that, I can say that\nthis is greater than our equal",
    "start": "1670940",
    "end": "1676769"
  },
  {
    "text": "to 3,100,000 111.",
    "start": "1676770",
    "end": "1682550"
  },
  {
    "text": "It's because of this\nobservation that it's a certificate of optimality.",
    "start": "1682550",
    "end": "1688759"
  },
  {
    "text": " She has her head down, OK.",
    "start": "1688760",
    "end": "1694955"
  },
  {
    "text": "Great. So that's pretty cool.",
    "start": "1694955",
    "end": "1702419"
  },
  {
    "text": "Just cooked up these\ncoefficients from somewhere, pulled them out of\na hat, you're all",
    "start": "1702420",
    "end": "1708110"
  },
  {
    "text": "convinced now that the\nvalue we got was optimum. Did not run an algorithm. Maybe I ran an\nalgorithm-- of course,",
    "start": "1708110",
    "end": "1714799"
  },
  {
    "text": "you ran an algorithm to get\nthose coefficients, right? Well, how did those\ncoefficients appear? So we're not going to spend\na whole lot of time on this.",
    "start": "1714800",
    "end": "1723700"
  },
  {
    "text": "You'll see this\nlikely in a problem",
    "start": "1723700",
    "end": "1731340"
  },
  {
    "text": "set or perhaps in section. But in general, I won't\nworry too much about duality,",
    "start": "1731340",
    "end": "1739050"
  },
  {
    "text": "other than knowing the concept. And this notion of LP\nduality essentially",
    "start": "1739050",
    "end": "1744640"
  },
  {
    "text": "says that what just happened\nwasn't a coincidence. You can do this all the time.",
    "start": "1744640",
    "end": "1751130"
  },
  {
    "text": "There will always be,\nfor a linear program, a short certificate\nof optimality",
    "start": "1751130",
    "end": "1756500"
  },
  {
    "text": "that corresponds to\nsome set of coefficients that you can do this\nparticular math with by taking",
    "start": "1756500",
    "end": "1764160"
  },
  {
    "text": "these linear constraints,\nmultiplying them out, adding them up together, and showing\nthat you have a lower bound",
    "start": "1764160",
    "end": "1772030"
  },
  {
    "text": "on-- in the case of this\nproblem-- you can't get lower",
    "start": "1772030",
    "end": "1779410"
  },
  {
    "text": "than this. And therefore, for a\nminimization problem, when you reach that, you\nclearly found the optimum.",
    "start": "1779410",
    "end": "1786580"
  },
  {
    "text": "And that's the\nnotion of LP duality. And the basic theorem-- and\nthis is really more as an FYI,",
    "start": "1786580",
    "end": "1794800"
  },
  {
    "text": "we won't prove this\ntheorem-- is that if you had the standard form for the\nLP, which I'm just writing down",
    "start": "1794800",
    "end": "1801159"
  },
  {
    "text": "again here, where you had\nAx less than b, x vector",
    "start": "1801160",
    "end": "1809090"
  },
  {
    "text": "greater than or equal to 0. So that's identically what\nI had up here, or done here,",
    "start": "1809090",
    "end": "1814710"
  },
  {
    "text": "corresponding to the\nstandard LP form. Well, there's a dual-- this is\nwhat's called the primal form.",
    "start": "1814710",
    "end": "1822110"
  },
  {
    "text": "Usually, if you\ndon't say it, you",
    "start": "1822110",
    "end": "1828280"
  },
  {
    "text": "think of it as the primal form. And if it's dual,\nyou call it a dual. And this is primal form of LP.",
    "start": "1828280",
    "end": "1834210"
  },
  {
    "text": "This is a dual form\nof LP, or dual LP. And the dual LP\nflips everything.",
    "start": "1834210",
    "end": "1841920"
  },
  {
    "text": "And it's not just\nnegation, but transposed, and the actual variables\nalso swap functionalities.",
    "start": "1841920",
    "end": "1850230"
  },
  {
    "text": "So it's really pretty cool. So your max turns into a min. The c gets replaced by the\nb, which is on the right hand",
    "start": "1850230",
    "end": "1856650"
  },
  {
    "text": "side of the inequalities. And your constraints\nare A transpose,",
    "start": "1856650",
    "end": "1863870"
  },
  {
    "text": "y greater than or equal to c. So there's a flip there as well.",
    "start": "1863870",
    "end": "1869210"
  },
  {
    "text": "And y is greater\nthan or equal to 0. So there's a bunch of\nthings that's going on here.",
    "start": "1869210",
    "end": "1876790"
  },
  {
    "text": "And these two problems\nend up being equivalent--",
    "start": "1876790",
    "end": "1883700"
  },
  {
    "text": "the primal and the dual,\nyou can always do this. And essentially, what\nis happening here",
    "start": "1883700",
    "end": "1891910"
  },
  {
    "text": "is that you're solving these\ntwo problems simultaneously.",
    "start": "1891910",
    "end": "1899422"
  },
  {
    "text": "And there's lots\nof algorithms that keep flipping between these\ntwo forms for efficiency.",
    "start": "1899422",
    "end": "1904520"
  },
  {
    "text": "But ultimately, what\nends up happening is you see that the actual\nconstraints that you had here",
    "start": "1904520",
    "end": "1912190"
  },
  {
    "text": "corresponding to the b\nconstraints turn into-- the b ends up in the\ncost function here.",
    "start": "1912190",
    "end": "1919400"
  },
  {
    "text": "And that's essentially\nwhat's happening out here with respect to multiplying\nthese equations out",
    "start": "1919400",
    "end": "1924460"
  },
  {
    "text": "with particular coefficients. So as I said, this is\nreally more as an FYI.",
    "start": "1924460",
    "end": "1931830"
  },
  {
    "text": "This is an obviously interesting\nand an interesting proof of optimality, which is\na different kind of proof",
    "start": "1931830",
    "end": "1938950"
  },
  {
    "text": "from proving an\nalgorithm correct and applying that proof\nto a particular instance.",
    "start": "1938950",
    "end": "1945649"
  },
  {
    "text": "That's the kind of\nthing that happens in LP, especially when you flip\nfrom primal and dual forms.",
    "start": "1945649",
    "end": "1951879"
  },
  {
    "text": "So I'll leave it at that. What I'd like to do\nis give you a sense",
    "start": "1951880",
    "end": "1958230"
  },
  {
    "text": "of how we can convert\nto standard form,",
    "start": "1958230",
    "end": "1964470"
  },
  {
    "text": "so you can apply an algorithm\nthat-- for example, you",
    "start": "1964470",
    "end": "1970760"
  },
  {
    "text": "have a program and it only\nrequires standard form. It runs on standard form. Let's go over it really quickly.",
    "start": "1970760",
    "end": "1976100"
  },
  {
    "text": "This is not going to take\nvery long-- a translation from different kinds of LPs--\nand we had a slightly different",
    "start": "1976100",
    "end": "1984450"
  },
  {
    "text": "here for our political problem\nthat had a minimization-- and how would we convert\nthat to standard form.",
    "start": "1984450",
    "end": "1991659"
  },
  {
    "text": "So it's probably just one\nconversion here that's tricky.",
    "start": "1991660",
    "end": "2007090"
  },
  {
    "text": "So suppose I want to\nminimize minus 2x1 plus 3x2,",
    "start": "2007090",
    "end": "2016096"
  },
  {
    "text": "and I want to convert\nit to standard formal. All I have is a\nstandard LP solver. What do I do? ",
    "start": "2016097",
    "end": "2023846"
  },
  {
    "text": "It should be easy. What do I do if I had a\nsolver that was maximizing,",
    "start": "2023846",
    "end": "2030440"
  },
  {
    "text": "but I want to\nminimize a quantity? Just switch the signs, right?",
    "start": "2030440",
    "end": "2035840"
  },
  {
    "text": "So negate to 2x1 minus\n3x2 and maximize.",
    "start": "2035840",
    "end": "2044710"
  },
  {
    "text": " So that was easy.",
    "start": "2044710",
    "end": "2050110"
  },
  {
    "text": "This is a tricky one. Suppose xj does not have a\nnon-negativity constraint.",
    "start": "2050110",
    "end": "2069050"
  },
  {
    "text": "So it just happens to be the\ncase that it's not dollars but it's some other quantity\nthat can go negative.",
    "start": "2069050",
    "end": "2077620"
  },
  {
    "text": "It might be profit or loss. So that quantity\nrepresents profit and loss,",
    "start": "2077620",
    "end": "2082819"
  },
  {
    "text": "so it could go\nnegative if it's loss. So I don't have this constraint\nin my original problem",
    "start": "2082820",
    "end": "2089250"
  },
  {
    "text": "specification. But my standard form\nand my LP solver requires this entire\nvector to be non-negative.",
    "start": "2089250",
    "end": "2099560"
  },
  {
    "text": "So I got a problem here. I can't use my standard\nsolver, because of this non-negativity\nconstraint.",
    "start": "2099560",
    "end": "2106320"
  },
  {
    "text": "So how do I fix that? How do I turn it into a problem\nthat allows the standard solver",
    "start": "2106320",
    "end": "2114840"
  },
  {
    "text": "to be used? Yeah, go ahead. AUDIENCE: You can break\nit up into two variables, like xj1 and xj2, so\nxj1 minus xj2 equals xj,",
    "start": "2114840",
    "end": "2125542"
  },
  {
    "text": "and both could have [INAUDIBLE]. SRINIVAS DEVADAS: Perfect,\ngreat, that's good. Here you go. ",
    "start": "2125542",
    "end": "2132140"
  },
  {
    "text": "So what you do here is take\nxj and replace it with,",
    "start": "2132140",
    "end": "2139400"
  },
  {
    "text": "let's say, xj prime\nminus xj double prime.",
    "start": "2139400",
    "end": "2144520"
  },
  {
    "text": "And you have xj prime\ngreater than or equal to 0, xj double prime greater\nthan or equal to 0.",
    "start": "2144520",
    "end": "2151299"
  },
  {
    "text": "But depending on the\nparticular values in whatever solution\nyou're exploring",
    "start": "2151300",
    "end": "2157340"
  },
  {
    "text": "are the final solution, you\nmay have an actual xj value that's negative or positive.",
    "start": "2157340",
    "end": "2163290"
  },
  {
    "text": "So you added an extra variable\nhere to your linear program. ",
    "start": "2163290",
    "end": "2169770"
  },
  {
    "text": "And a couple more\nreal quick, suppose that I have an equality\nconstraint corresponding",
    "start": "2169770",
    "end": "2179560"
  },
  {
    "text": "to x1 plus x2 equals 7. What do I do with an\nequality constraint",
    "start": "2179560",
    "end": "2185980"
  },
  {
    "text": "where I have x1\nplus x2 equals 7? Yeah, go ahead. AUDIENCE: You can say x1 plus x2\nis greater than or equal to 7,",
    "start": "2185980",
    "end": "2195770"
  },
  {
    "text": "and x1 plus x2 is less\nthan or equal to 7. SRINIVAS DEVADAS: No, you\ncan't do less than or equal to. AUDIENCE: But then you\ncan flip the signs to--",
    "start": "2195770",
    "end": "2202427"
  },
  {
    "text": "SRINIVAS DEVADAS: Ah, then\nyou could flip the signs. So you have two\nsteps there, good. So your less than or equal\nto needs another multiplier.",
    "start": "2202427",
    "end": "2210710"
  },
  {
    "text": "So what you end up doing is\nsomething like x1 plus x2 greater than or equal to 7.",
    "start": "2210710",
    "end": "2217109"
  },
  {
    "text": "And then you need-- if you\ndo what the gentleman just said-- and flip the sign,\nyou get minus x1 minus x2",
    "start": "2217110",
    "end": "2230600"
  },
  {
    "text": "greater than or\nequal to minus 7. ",
    "start": "2230600",
    "end": "2237077"
  },
  {
    "text": "Is that right? No? I messed up? ",
    "start": "2237077",
    "end": "2242216"
  },
  {
    "text": "Oh, I want less\nthan or equal to. You're right, you're right. So I need less than or equal\nto-- that's right, of course,",
    "start": "2242216",
    "end": "2248380"
  },
  {
    "text": "thank you. So I need less than or\nequal to in both places. ",
    "start": "2248380",
    "end": "2258380"
  },
  {
    "text": "So that's the standard form. I needed less than or equal to. Good. ",
    "start": "2258380",
    "end": "2264629"
  },
  {
    "text": "What you've done is increased\nthe number of constraints by one. Did I get this right\nthe second time?",
    "start": "2264629",
    "end": "2271453"
  },
  {
    "text": "All right. So that's pretty much it. The last thing, which I\nwon't really write out, is, which we've done here\nalready, greater than",
    "start": "2271453",
    "end": "2279130"
  },
  {
    "text": "or equal to constraint\ntranslated-- I won't give you",
    "start": "2279130",
    "end": "2285150"
  },
  {
    "text": "an example of this;\nwe have this already-- translates to less than or\nequal to by minus 1 multiplied.",
    "start": "2285150",
    "end": "2292540"
  },
  {
    "text": " So we have to\ninvoke that in order to do the equality anyway.",
    "start": "2292540",
    "end": "2299670"
  },
  {
    "text": "So you're in business. If you have a\nstandard LP solver, you can take pretty much any\noptimization problem that",
    "start": "2299670",
    "end": "2308190"
  },
  {
    "text": "is linear in terms of\nits objective function and has linear constraints, and\nyou can transform it into LP.",
    "start": "2308190",
    "end": "2314339"
  },
  {
    "text": "If you had non-linear\nconstraints, there's lots of\nwork that goes on in linearizing those constraints\nand using LP solvers.",
    "start": "2314340",
    "end": "2323240"
  },
  {
    "text": "It's a very practical\nthing to do. It may be something you'll\nend up doing, invoking these powerful LP solvers--\ntypically, they're commercially",
    "start": "2323240",
    "end": "2331030"
  },
  {
    "text": "available; the best\nones are commercial-- and use it to solve\nyour particular problem.",
    "start": "2331030",
    "end": "2336600"
  },
  {
    "text": "It turns your algorithm design\nproblem into a reduction.",
    "start": "2336600",
    "end": "2341640"
  },
  {
    "text": "And so you'll spend really\nthe next couple of weeks",
    "start": "2341640",
    "end": "2347589"
  },
  {
    "text": "thinking about reductions. We'll start that\nup right now, where we'll take existing\ncombinatorial",
    "start": "2347590",
    "end": "2353070"
  },
  {
    "text": "problems, for which we\nalready know algorithms for, and you're going to\nreduce them to LP.",
    "start": "2353070",
    "end": "2358550"
  },
  {
    "text": "Just to give you a sense\nof what the power of LP is, but this notion of\nreduction is very powerful,",
    "start": "2358550",
    "end": "2364530"
  },
  {
    "text": "you can use it to do\ncomplexity proofs. Here, we're just using it as a\nconvenience in today's lecture",
    "start": "2364530",
    "end": "2369880"
  },
  {
    "text": "to use our LP hammer. So let's say that I have\nour favorite problem",
    "start": "2369880",
    "end": "2379359"
  },
  {
    "text": "of the week, namely max flow. And I want to\nconvert that to LP.",
    "start": "2379360",
    "end": "2385589"
  },
  {
    "text": "So go back a week ago, and right\nabout this time a week ago,",
    "start": "2385590",
    "end": "2391970"
  },
  {
    "text": "and we'd set up the\nmax flow problem. And let's assume that\nwe went back there. And we didn't talk\nabout augmenting paths,",
    "start": "2391970",
    "end": "2398640"
  },
  {
    "text": "and we didn't talk about\nresidual capacities or min-cut or anything like that,\nbut we knew LP already.",
    "start": "2398640",
    "end": "2406120"
  },
  {
    "text": "And we just want to\nsolve max flow using LP. So let's do that. ",
    "start": "2406120",
    "end": "2427250"
  },
  {
    "text": "So this is maximum flow. I'm not going to bother with\nconverting to standard form.",
    "start": "2427250",
    "end": "2435450"
  },
  {
    "text": "We know how to do that,\ngiven what we just did here, over there.",
    "start": "2435450",
    "end": "2441440"
  },
  {
    "text": "So I'll just do whatever I\nwant to keep things simple.",
    "start": "2441440",
    "end": "2446990"
  },
  {
    "text": "Max flow is obviously\na maximization problem. And using the same\nnotation we've used,",
    "start": "2446990",
    "end": "2455150"
  },
  {
    "text": "it's not going to\nlook like Ax and b, just because I want you to\nrecall what max flow is.",
    "start": "2455150",
    "end": "2462884"
  },
  {
    "text": "And we're going\nto translate that. And the values of\nthese variables-- or the names of these variables,\nwhether they're x or f,",
    "start": "2462884",
    "end": "2468560"
  },
  {
    "text": "it should really matter. We know how to do LP\nat this point-- we",
    "start": "2468560",
    "end": "2474020"
  },
  {
    "text": "know how to formulate LP, I\nshould say, at this point. And we're assuming that\nwe have an LP solver.",
    "start": "2474020",
    "end": "2481500"
  },
  {
    "text": "So what I want to do here\nwith the maximum flow problem is maximizing the flow value.",
    "start": "2481500",
    "end": "2486849"
  },
  {
    "text": "And it's simply,\nyou grab the source, you have a variable associated\nwith the flow from the source",
    "start": "2486850",
    "end": "2494480"
  },
  {
    "text": "to every other vertex of v.\nAnd you have to maximize that.",
    "start": "2494480",
    "end": "2500320"
  },
  {
    "text": "So that was the\nsetup for max flow. I'm not changing that. What do you think the three\nconstraints, or whatever",
    "start": "2500320",
    "end": "2506960"
  },
  {
    "text": "set of constraints\nthat we have here, are going to\ncorrespond to the LP? You spent a week\non max flow, looked",
    "start": "2506960",
    "end": "2513650"
  },
  {
    "text": "at the problem set,\nwhat constraints am I going to have to put up there? ",
    "start": "2513650",
    "end": "2519190"
  },
  {
    "text": "I'm going to have to put\nup capacity constraints. That's an obvious one. What is another one?",
    "start": "2519190",
    "end": "2526380"
  },
  {
    "text": "Conservation constraints. All flow entering a node that\nis not the source or the sink",
    "start": "2526380",
    "end": "2533360"
  },
  {
    "text": "has to leave it.  In the original\nnetwork, is there",
    "start": "2533360",
    "end": "2540140"
  },
  {
    "text": "a concept of negative flow?",
    "start": "2540140",
    "end": "2545920"
  },
  {
    "text": "No, you will define it going\nin the other direction. So we did talk about\nnegative numbers, et cetera,",
    "start": "2545920",
    "end": "2551880"
  },
  {
    "text": "but you're going to have\npositive quantities, especially if you look at net flow,\nthe version of the flow",
    "start": "2551880",
    "end": "2559000"
  },
  {
    "text": "that we zoomed in on in the\nTuesday lecture from last week.",
    "start": "2559000",
    "end": "2565340"
  },
  {
    "text": "And you also have-- in\nthe general setting, you're going to have these skew\nsymmetry constraints as well.",
    "start": "2565340",
    "end": "2571120"
  },
  {
    "text": "So the three things\nthat you need here are skew symmetry,\nconservation, and capacity.",
    "start": "2571120",
    "end": "2583125"
  },
  {
    "text": " So you have such that f u, v\nequals minus f v, u for all u,",
    "start": "2583125",
    "end": "2598332"
  },
  {
    "text": "v belonging to V. And depending on the kind\nof network that you have,",
    "start": "2598332",
    "end": "2604120"
  },
  {
    "text": "if you constrain\nit to a sudden type that you don't have\nthese two-way edges,",
    "start": "2604120",
    "end": "2609960"
  },
  {
    "text": "you could certainly\nremove some, if not all, of these skew\nsymmetry constraints.",
    "start": "2609960",
    "end": "2615370"
  },
  {
    "text": "Important ones are\nconservation and capacity. And this should seem\npretty familiar to you.",
    "start": "2615370",
    "end": "2622780"
  },
  {
    "text": "But the key-- the reason\nI'm writing these all out is primarily to ensure that you\nunderstand that these are all",
    "start": "2622780",
    "end": "2629020"
  },
  {
    "text": "linear constraints. So that's pretty\nmuch the only thing that you need to observe here.",
    "start": "2629020",
    "end": "2635131"
  },
  {
    "text": "Obviously, these\nconstraints you've seen many a time from the\ntwo lectures last week.",
    "start": "2635132",
    "end": "2641530"
  },
  {
    "text": "But notice that\nthey're all linear. And finally, this one is f u,\nv less than or equal to c of u,",
    "start": "2641530",
    "end": "2648900"
  },
  {
    "text": "v for all u, v\nbelonging to cap V.",
    "start": "2648900",
    "end": "2658299"
  },
  {
    "text": "So this is f. That's a variable that's\nless than another constant, clearly linear.",
    "start": "2658300",
    "end": "2664280"
  },
  {
    "text": "Doing a bunch of sums here. I could obviously have\nmultipliers, scalar multipliers.",
    "start": "2664280",
    "end": "2669966"
  },
  {
    "text": "In this case, for\nconservation, I don't have scalar multipliers,\nbut clearly linear.",
    "start": "2669966",
    "end": "2675240"
  },
  {
    "text": "Skew symmetry, got\ntwo variables in here. One of them is a negation of\nthe other, clearly linear,",
    "start": "2675240",
    "end": "2681140"
  },
  {
    "text": "so that's why this is an LP. And so you might say,\nwell, I know better,",
    "start": "2681140",
    "end": "2686480"
  },
  {
    "text": "max flow is much more\nefficient than any LP solver that's out there. And you would be right.",
    "start": "2686480",
    "end": "2692360"
  },
  {
    "text": "If you have a max flow\nproblem of this variety, it's difficult to\nimagine that you",
    "start": "2692360",
    "end": "2698560"
  },
  {
    "text": "would get performance, empirical\nperformance from running an LP solver. But this generalization\nof max flow",
    "start": "2698560",
    "end": "2710220"
  },
  {
    "text": "that's a multi-commodity max\nflow, where you just don't have one commodity flowing through.",
    "start": "2710220",
    "end": "2716190"
  },
  {
    "text": "You may be counting cars\nand trucks on a road, or there's two different\nkinds of liquid",
    "start": "2716190",
    "end": "2721740"
  },
  {
    "text": "flowing through the same\npipe, whatever, gas or liquid.",
    "start": "2721740",
    "end": "2728730"
  },
  {
    "text": "And so when you have\nmultiple commodities, you may have a linear but\nmore complicated cost function",
    "start": "2728730",
    "end": "2736210"
  },
  {
    "text": "that's a function of the flow\nof each of the commodities. And they may have a certain\nweight associated with them.",
    "start": "2736210",
    "end": "2742290"
  },
  {
    "text": "So there's a lot of\nthings that could be more general-- there could\nbe more general settings",
    "start": "2742290",
    "end": "2751170"
  },
  {
    "text": "corresponding to max flow. And I'll just leave\nyou with the thought",
    "start": "2751170",
    "end": "2757550"
  },
  {
    "text": "that you could simply\nhave two commodities. ",
    "start": "2757550",
    "end": "2766470"
  },
  {
    "text": "And we'll just\ncall them 1 and 2.  And so now, you have the f1's\nand the c1's and the f2's and",
    "start": "2766470",
    "end": "2773730"
  },
  {
    "text": "the c2's. Each commodity has\nto be conserved.",
    "start": "2773730",
    "end": "2779540"
  },
  {
    "text": "But what about the capacity? What do you think happens\nwith the capacity? Let's just assume these are\ntwo different kinds of cars.",
    "start": "2779540",
    "end": "2787170"
  },
  {
    "text": "So what would the capacity\nconstraint look like? ",
    "start": "2787170",
    "end": "2793701"
  },
  {
    "text": "Yeah. AUDIENCE: You can\nsay either c1 or f1 plus f2 is-- for each edge,\nyou can add them together",
    "start": "2793701",
    "end": "2803022"
  },
  {
    "text": "or you might take the\nlinear [INAUDIBLE]. SRINIVAS DEVADAS:\nExactly, that's right. So good point. It may be the case that I\nhave distinct capacities.",
    "start": "2803022",
    "end": "2811789"
  },
  {
    "text": "And in fact, if you have\ncompletely disjoint problems, you're right in that you\ncan solve them separately.",
    "start": "2811790",
    "end": "2819109"
  },
  {
    "text": "But actually, the\nmore interesting case would be that you have\na single capacity c,",
    "start": "2819110",
    "end": "2825560"
  },
  {
    "text": "so you'll have-- let me\njust write this out here. ",
    "start": "2825560",
    "end": "2836250"
  },
  {
    "text": "If in fact you had\ntwo distinct things, so if you had f1, c1,\nf1, c2, the question",
    "start": "2836250",
    "end": "2842869"
  },
  {
    "text": "is, do you have two distinct,\ndisjoint optimizations,",
    "start": "2842870",
    "end": "2847890"
  },
  {
    "text": "in which case you just\nuse max flow twice.",
    "start": "2847890",
    "end": "2852920"
  },
  {
    "text": "On other hand, what's\nmore interesting really-- and I should've used this\nexample for starters--",
    "start": "2852920",
    "end": "2858140"
  },
  {
    "text": "but here's a better one. You have two commodities\nand a single capacity. So the road is a good example.",
    "start": "2858140",
    "end": "2864869"
  },
  {
    "text": "Both the cars and the\ntrucks share the same road. It has a certain capacity.",
    "start": "2864870",
    "end": "2869990"
  },
  {
    "text": "And now, your\ncapacity constraint is looking like f1\nplus f2 over here.",
    "start": "2869990",
    "end": "2878390"
  },
  {
    "text": "And that's the flow through\nthe particular edge uv.",
    "start": "2878390",
    "end": "2884440"
  },
  {
    "text": "So you have something\nlike f1 u, v plus f2 u, v is less than or equal to c\nu, v for this total capacity.",
    "start": "2884440",
    "end": "2891365"
  },
  {
    "text": " And that's pretty much it.",
    "start": "2891365",
    "end": "2896560"
  },
  {
    "text": "So that is linear. The nice thing is\nthat it's linear. You could put weights on it.",
    "start": "2896560",
    "end": "2902349"
  },
  {
    "text": "If you wanted to claim\nthat a particular commodity",
    "start": "2902350",
    "end": "2908280"
  },
  {
    "text": "1 uses up-- because\nit's a truck, it uses up more\nspace on the road.",
    "start": "2908280",
    "end": "2913630"
  },
  {
    "text": "And you can accommodate\nfewer of them. You could put a\nmultiplier in there. Still say it's linear.",
    "start": "2913630",
    "end": "2919160"
  },
  {
    "text": "So that's the power of\nby having an LP engine. You could translate\nproblems that",
    "start": "2919160",
    "end": "2925480"
  },
  {
    "text": "are not exactly max flow,\nthat are multi-commodity flow. You may have additional linear\nconstraints that you could add,",
    "start": "2925480",
    "end": "2932119"
  },
  {
    "text": "and you could still\nuse your LP package. So that's the reason why this\nis interesting and powerful.",
    "start": "2932120",
    "end": "2939289"
  },
  {
    "text": "So that is kind of an obvious,\ncorresponding to max flow.",
    "start": "2939290",
    "end": "2944530"
  },
  {
    "text": "Let's look at something\nthat's a little less obvious. And it's going to be a little\ntricky to convert the shortest",
    "start": "2944530",
    "end": "2952690"
  },
  {
    "text": "path problem to LP,\nnot a lot of work",
    "start": "2952690",
    "end": "2962400"
  },
  {
    "text": "but one little\nobservation that's going to be important to make\nin order for the whole thing",
    "start": "2962400",
    "end": "2968040"
  },
  {
    "text": "to flow through or\nactually work out. So we all know the\nshortest path problem.",
    "start": "2968040",
    "end": "2974180"
  },
  {
    "text": " We want to find-- let's just\ncall it the single source",
    "start": "2974180",
    "end": "2981684"
  },
  {
    "text": "shortest path problem. You have a specific source. That's going to turn into\nthe point from which you're",
    "start": "2981684",
    "end": "2988510"
  },
  {
    "text": "going to start\ncomputing the distance. That's what Dijkstra does,\nand that's Bellman-Ford does.",
    "start": "2988510",
    "end": "2995900"
  },
  {
    "text": "And so this is from vertex\nx-- s, excuse me, s.",
    "start": "2995900",
    "end": "3002930"
  },
  {
    "text": "And what I want to do here\nis obviously set it up as a set of linear constraints.",
    "start": "3002930",
    "end": "3011440"
  },
  {
    "text": "If I have dv corresponding to\nthe distance from the source--",
    "start": "3011440",
    "end": "3023980"
  },
  {
    "text": "so dv represents the\ndistance from the source-- and eventually I want\ndv to be the shortest",
    "start": "3023980",
    "end": "3032030"
  },
  {
    "text": "distance from the source. That's our notation\nfor shortest paths.",
    "start": "3032030",
    "end": "3037260"
  },
  {
    "text": "dv represents an existing\npath-- it may not be the shortest path-- from\ns to v, the value of that.",
    "start": "3037260",
    "end": "3044580"
  },
  {
    "text": "But dv monotonically\ndecreases as you run through.",
    "start": "3044580",
    "end": "3051800"
  },
  {
    "text": "It's initially\ninfinity in Dijkstra going back to Dijkstra. And then we shrink it through\na process of relaxation.",
    "start": "3051800",
    "end": "3059740"
  },
  {
    "text": "Now I want to try and model\nthat-- I want to try and model all of this as an LP.",
    "start": "3059740",
    "end": "3065170"
  },
  {
    "text": "So it's not\nimmediately obvious-- the thing that the\nflow networks had, where we had these constraints.",
    "start": "3065170",
    "end": "3071620"
  },
  {
    "text": "We have capacity constraints\nand conservation constraints. And we could turn that\nconstraint into an inequality.",
    "start": "3071620",
    "end": "3078680"
  },
  {
    "text": "And it was pretty smooth. It's pretty easy. So what I need to do\nhere with shortest paths",
    "start": "3078680",
    "end": "3086100"
  },
  {
    "text": "is something that's\na little more subtle. So what basic constraint do\nI have in a shortest path",
    "start": "3086100",
    "end": "3096069"
  },
  {
    "text": "algorithm? What's an inequality--\nyou remember an inequality",
    "start": "3096070",
    "end": "3101970"
  },
  {
    "text": "from shortest paths that\nwe kept talking about? The triangle inequality.",
    "start": "3101970",
    "end": "3106980"
  },
  {
    "text": "So we're going to have to go\nwith the triangle inequality and take the triangle inequality\nand use that to create an LP",
    "start": "3106980",
    "end": "3113869"
  },
  {
    "text": "formulation of shortest paths. In particular, what\nwe have here is",
    "start": "3113870",
    "end": "3119500"
  },
  {
    "text": "that I could write\ndv minus du is",
    "start": "3119500",
    "end": "3125180"
  },
  {
    "text": "less than or equal to w u, v\nfor all u, v belonging to E.",
    "start": "3125180",
    "end": "3133660"
  },
  {
    "text": "And that's the\ntriangle inequality. ",
    "start": "3133660",
    "end": "3139500"
  },
  {
    "text": "And I'm going to\nhave d of s equals 0. That's the only thing\nthat I start with.",
    "start": "3139500",
    "end": "3144760"
  },
  {
    "text": " And so what's happening\nout here is simply",
    "start": "3144760",
    "end": "3150020"
  },
  {
    "text": "that there's different\nways of getting to v. And my shortest path\nis going to be the best",
    "start": "3150020",
    "end": "3157820"
  },
  {
    "text": "way of getting to\nv. So in particular, the way you want to think about\nthis is that if I have a v",
    "start": "3157820",
    "end": "3164252"
  },
  {
    "text": "and I can get to it from,\nlet's just say, u1 and u2.",
    "start": "3164252",
    "end": "3171380"
  },
  {
    "text": "And maybe the\nsource is over here. And these are the only two\nedges that can get to v. So I'm just looking at a\nfairly limited setting.",
    "start": "3171380",
    "end": "3179270"
  },
  {
    "text": "u1 and u2 are going to have\nto be the two vertices. One of these two is\ngoing to get me to v.",
    "start": "3179270",
    "end": "3186130"
  },
  {
    "text": "And I got w u1, v here.",
    "start": "3186130",
    "end": "3192529"
  },
  {
    "text": "And I got w u2, v over here.",
    "start": "3192530",
    "end": "3198290"
  },
  {
    "text": "And so what this\nis saying is, I'm going to have to write this\nout for each of these edges.",
    "start": "3198290",
    "end": "3203770"
  },
  {
    "text": "For each of these edges, I'm\ngoing to have this constraint.",
    "start": "3203770",
    "end": "3209230"
  },
  {
    "text": "And that's says that the dv\nvalue, if I want the shortest path, should obey both\nof these constraints.",
    "start": "3209230",
    "end": "3218310"
  },
  {
    "text": "And if I want to obey both of\nthese constraints, one of them is going to be my\nlimiting constraint. And I'm going to get\nthe min of those two.",
    "start": "3218310",
    "end": "3225790"
  },
  {
    "text": "Correct? So in effect what\nthis translates to is that it's an AND, right?",
    "start": "3225790",
    "end": "3230950"
  },
  {
    "text": "So dv have minus du1 is\nless than or equal to w u1,",
    "start": "3230950",
    "end": "3237550"
  },
  {
    "text": "v. dv minus du2 is less than\nor equal to w u2, v. That's",
    "start": "3237550",
    "end": "3246920"
  },
  {
    "text": "an AND, because I'm putting both\nof those constraints in here. And that essentially\nmeans that dv",
    "start": "3246920",
    "end": "3255140"
  },
  {
    "text": "is going to be the min\nof the two quantities--",
    "start": "3255140",
    "end": "3263190"
  },
  {
    "text": "the du1 quantity\nplus the w u1, v, and the du2 quantity plus\nthe w u2, v. That make sense?",
    "start": "3263190",
    "end": "3273460"
  },
  {
    "text": "Ask me questions\nif this is unclear. So that simply\ncorresponds to the fact",
    "start": "3273460",
    "end": "3279160"
  },
  {
    "text": "that I'm doing an AND over here. I'm adding all of these\nconstraints in there. So I'm applying the triangle\ninequality to every edge,",
    "start": "3279160",
    "end": "3287310"
  },
  {
    "text": "to every relationship\nbetween a vertex that",
    "start": "3287310",
    "end": "3293730"
  },
  {
    "text": "has a path ending at it. And you're pushing it\nforward to this vertex v,",
    "start": "3293730",
    "end": "3298779"
  },
  {
    "text": "all the different ways that\nyou can get to v. In this case, there is two sets of ways--\none from u1 and one from u2.",
    "start": "3298780",
    "end": "3305509"
  },
  {
    "text": "And the last step is\na minimization step.",
    "start": "3305510",
    "end": "3310820"
  },
  {
    "text": "So you think you're\ndone or we're done, but we're not quite\ndone, because what's",
    "start": "3310820",
    "end": "3316130"
  },
  {
    "text": "missing here in terms\nof my formulation of LP? What else do I have to do here?",
    "start": "3316130",
    "end": "3321458"
  },
  {
    "text": " Well, sure, non-negative--\nlet's do that.",
    "start": "3321458",
    "end": "3330154"
  },
  {
    "text": "Sorry? AUDIENCE: Objective. SRINIVAS DEVADAS: Objective,\nwho said objective?",
    "start": "3330154",
    "end": "3335390"
  },
  {
    "text": "You again?  So we are missing an\nobjective function.",
    "start": "3335390",
    "end": "3342210"
  },
  {
    "text": "Now shortest path is what\nkind of problem again? Short means minimum?",
    "start": "3342210",
    "end": "3350050"
  },
  {
    "text": "Minimum, height whatever. So do I put a-- what happens\nif I put a minimum in here?",
    "start": "3350050",
    "end": "3356240"
  },
  {
    "text": "And let's say that I\ndo something like sigma over V, cap V, dv, because\nI want to minimize--",
    "start": "3356240",
    "end": "3364470"
  },
  {
    "text": "or I could pick\na particular one. I could pick a particular single\nsource, single destination,",
    "start": "3364470",
    "end": "3370010"
  },
  {
    "text": "and I put a minimum there. What happens?",
    "start": "3370010",
    "end": "3375900"
  },
  {
    "text": "Does this work? What's the solution\nto this problem, if I minimize the distance?",
    "start": "3375900",
    "end": "3383510"
  },
  {
    "text": "0, because the zero\nvalue is going to work. So there's something-- I\nhaven't put in the constraint",
    "start": "3383510",
    "end": "3391990"
  },
  {
    "text": "that I do want a path. I do want a path from\ns to v for any v that",
    "start": "3391990",
    "end": "3400940"
  },
  {
    "text": "matches one of the\nquantities in the min,",
    "start": "3400940",
    "end": "3406700"
  },
  {
    "text": "because the min says\nI have equality. The big issue here is, this\nis a less than or equal to,",
    "start": "3406700",
    "end": "3413809"
  },
  {
    "text": "and that's why the min doesn't\nwork in the objective function. It's a less than or equal to.",
    "start": "3413810",
    "end": "3419060"
  },
  {
    "text": "But this min over here, which\nis the definition of a shortest path, is saying that it's\neither equal to this quantity",
    "start": "3419060",
    "end": "3426660"
  },
  {
    "text": "or equal to that quantity. There's an equality over here\nthat is missing from this side.",
    "start": "3426660",
    "end": "3432609"
  },
  {
    "text": "And that's the key observation. Once you observe that,\nthat need equality for one of these constituent\nquantities of the min,",
    "start": "3432610",
    "end": "3441850"
  },
  {
    "text": "then you'll see that\nwhat you have to do is simply change\nthis min to a max.",
    "start": "3441850",
    "end": "3448396"
  },
  {
    "text": " So you say, well,\nhow the heck did a min get changed into a max?",
    "start": "3448396",
    "end": "3454240"
  },
  {
    "text": "And I'm not sure I'm going\nto convince every on of you in the next minute or so. But the bottom line\nis, it comes down",
    "start": "3454240",
    "end": "3462360"
  },
  {
    "text": "to I do have a min already\nin my inequalities,",
    "start": "3462360",
    "end": "3467930"
  },
  {
    "text": "because I'm ANDing each\nof these inequalities, and I'm putting down each of\nthose inequalities in there.",
    "start": "3467930",
    "end": "3473220"
  },
  {
    "text": "So each of them is going to\nforce me to find the best solution, because they're\ngoing to constrain me to not",
    "start": "3473220",
    "end": "3480220"
  },
  {
    "text": "go via u2 if u1 is better,\nbecause the other constraint corresponding to u1 is\ngoing to force me down.",
    "start": "3480220",
    "end": "3486857"
  },
  {
    "text": "So there's an\nadditional min in there, because the ANDing of the\nless than or equal tos. And then in order to actually\nforce the equality for one",
    "start": "3486857",
    "end": "3496780"
  },
  {
    "text": "of those, I need to push\nup as hard as I can, or as high as I can.",
    "start": "3496780",
    "end": "3501830"
  },
  {
    "text": "So think about it. Play around with a\ncouple of examples. Choose a simple\nexample for starters.",
    "start": "3501830",
    "end": "3510130"
  },
  {
    "text": "And you'll see that this\nis the correct formulation. So you can see that it's not\ncompletely clear in some cases",
    "start": "3510130",
    "end": "3519470"
  },
  {
    "text": "how to transform problems to LP. But even in those cases,\nsometimes you can.",
    "start": "3519470",
    "end": "3525230"
  },
  {
    "text": "So there's just a ton\nof different problems, a good skill to have\nto be able to take",
    "start": "3525230",
    "end": "3533340"
  },
  {
    "text": "combinatorial\noptimization engines, like LP or even max flow, and\nbe able to translate problems",
    "start": "3533340",
    "end": "3538839"
  },
  {
    "text": "to them. It's something that\nyou'll probably do if you stick to\nalgorithms in your careers",
    "start": "3538840",
    "end": "3544970"
  },
  {
    "text": "or exploiting available\nalgorithm packages.",
    "start": "3544970",
    "end": "3551830"
  },
  {
    "text": " So the last thing I want to do\nhere for the rest of the time",
    "start": "3551830",
    "end": "3557650"
  },
  {
    "text": "is to give you some sense for\nhow an LP program is actually",
    "start": "3557650",
    "end": "3564920"
  },
  {
    "text": "optimized. How can you possibly take\nthe standard LP formulation,",
    "start": "3564920",
    "end": "3570370"
  },
  {
    "text": "which is a general setting. You know nothing\nabout shortest paths, let's assume, nothing\nabout max flow.",
    "start": "3570370",
    "end": "3576260"
  },
  {
    "text": "It's not about a\nspecific problem. It's about the general setting. How can we solve\nthe general setting, because that was the\ntheme here anyway.",
    "start": "3576260",
    "end": "3582840"
  },
  {
    "text": "You had this engine, and\nyou want to use this engine. But now, how do you\nbuild this engine?",
    "start": "3582840",
    "end": "3588779"
  },
  {
    "text": "So what we're going to do is\nlook at a fairly simple example",
    "start": "3588780",
    "end": "3594000"
  },
  {
    "text": "of the simplex algorithm. And this algorithm\nis in the textbook.",
    "start": "3594000",
    "end": "3601260"
  },
  {
    "text": "And it'll be in my notes. So I'll get as far as I can. It's not that complicated\nto describe, especially",
    "start": "3601260",
    "end": "3607839"
  },
  {
    "text": "from an example standpoint. But I may not get\nthrough all of the steps",
    "start": "3607840",
    "end": "3614660"
  },
  {
    "text": "to get you the optimum for\nthis particular example given how much time we have.",
    "start": "3614660",
    "end": "3620260"
  },
  {
    "text": "The most important\nconcept in simplex",
    "start": "3620260",
    "end": "3626420"
  },
  {
    "text": "is yet another form\nof representation for simplex, which says that\nyou can represent the LP, not",
    "start": "3626420",
    "end": "3636350"
  },
  {
    "text": "in standard form,\nbut in slack form. So I'm going to tell\nyou what slack form is.",
    "start": "3636350",
    "end": "3642292"
  },
  {
    "text": "And then what we're\ngoing to do is, the flow of simplex,\nalgorithmic flow,",
    "start": "3642292",
    "end": "3648110"
  },
  {
    "text": "is to convert one slack\nform into and equivalent.",
    "start": "3648110",
    "end": "3656360"
  },
  {
    "text": "Obviously, you don't want to\ndo something that's incorrect, but it has to be\nan equivalent slack",
    "start": "3656360",
    "end": "3662770"
  },
  {
    "text": "form, whose objective value has\nnot decreased and has likely",
    "start": "3662770",
    "end": "3682715"
  },
  {
    "text": "increased.  So you're guaranteed that\nthe objective value has not",
    "start": "3682715",
    "end": "3689890"
  },
  {
    "text": "decreased. You're not guaranteed\nthat it's increased. And then we're going to keep\ngoing till the optimal solution",
    "start": "3689890",
    "end": "3703510"
  },
  {
    "text": "becomes obvious. And you might say,\nhow is this obvious?",
    "start": "3703510",
    "end": "3709994"
  },
  {
    "text": "That's the reason why I talked\nabout the short certificate of optimality. It's definitely a relationship\nbetween the termination",
    "start": "3709994",
    "end": "3718750"
  },
  {
    "text": "of simplex and the fact\nthat you can now say, hey, I know I'm done\nhere, it's kind of obvious",
    "start": "3718750",
    "end": "3724930"
  },
  {
    "text": "that I can't do any better. And hopefully, you'll see that\nby the end of this lecture in this simple example.",
    "start": "3724930",
    "end": "3731790"
  },
  {
    "text": "So that's it. It's an iterative algorithm. It's exponential,\nunfortunately, because this",
    "start": "3731790",
    "end": "3737330"
  },
  {
    "text": "takes m plus n, choose n\niterations in the worst case,",
    "start": "3737330",
    "end": "3744460"
  },
  {
    "text": "where n is the\nnumber of variables and m is the number\nof constraints. Most of the time, it\ndoes a lot better,",
    "start": "3744460",
    "end": "3751160"
  },
  {
    "text": "but that's the only bound\nthat you can actually prove in the worst case.",
    "start": "3751160",
    "end": "3757290"
  },
  {
    "text": "And so you're stuck with\nan exponential algorithm if you're using\nsimplex worst case.",
    "start": "3757290",
    "end": "3763500"
  },
  {
    "text": "We won't actually do\nmuch analysis on simplex. It's really out of scope for\n046 in terms of the analysis.",
    "start": "3763500",
    "end": "3770290"
  },
  {
    "text": "The actual algorithm is\ncertainly within scope. So what I want to do is\ngive you some sense for what",
    "start": "3770290",
    "end": "3776549"
  },
  {
    "text": "the slack form looks like. And we'll do a couple of\niterations of simplex. And we'll get as far as we can\nbefore the end the lecture.",
    "start": "3776550",
    "end": "3784786"
  },
  {
    "text": "So we'll take a\ndifferent example from our political example.",
    "start": "3784786",
    "end": "3792339"
  },
  {
    "text": "It's similar in size. And I want to explain to\nyou what the slack form is",
    "start": "3792340",
    "end": "3800369"
  },
  {
    "text": "and why it's interesting. So what I want to do is maximize\n3x1 plus x2 plus x3 subject",
    "start": "3800370",
    "end": "3815510"
  },
  {
    "text": "to the constraints that\nx1 plus x2 plus 3x2",
    "start": "3815510",
    "end": "3820920"
  },
  {
    "text": "is less than or equal to\n30, 2x1 plus 2x2 plus 5x3 is",
    "start": "3820920",
    "end": "3827799"
  },
  {
    "text": "less than or equal to 24,\n4x1 plus x2 plus 2x3 less",
    "start": "3827800",
    "end": "3835250"
  },
  {
    "text": "than or equal to 36, and then\nnon-negativity constraints, x1, x2, x3 greater\nthan or equal to 0.",
    "start": "3835250",
    "end": "3843200"
  },
  {
    "text": "So that's our example problem. I'll leave it up there. ",
    "start": "3843200",
    "end": "3849410"
  },
  {
    "text": "You're going to convert\nthis to slack form. And so what is the slack form? We're going to introduce an\nadditional number of variables",
    "start": "3849410",
    "end": "3859130"
  },
  {
    "text": "that correspond to the number\nof equations that we have. So we're going to introduce,\nin this case, three new labels,",
    "start": "3859130",
    "end": "3865040"
  },
  {
    "text": "because I have three equations. And the slack for this\nproblem looks like this.",
    "start": "3865040",
    "end": "3873299"
  },
  {
    "text": "I'm going to have z\nequals 3x1 plus x2",
    "start": "3873300",
    "end": "3879480"
  },
  {
    "text": "plus x3, same as before. And then I'm going\nto have variables",
    "start": "3879480",
    "end": "3884920"
  },
  {
    "text": "that represent-- these are\ncalled basic variables. And the original variables are\ncalled non-basic variables.",
    "start": "3884920",
    "end": "3891520"
  },
  {
    "text": "So I'm going to add three\nbasic labels, x4, x5, and x6, corresponding to\nthese three constraints.",
    "start": "3891520",
    "end": "3898350"
  },
  {
    "text": "And they're going to\nrepresent slack in the sense that they're going to\ncorrespond to how much slack you",
    "start": "3898350",
    "end": "3904880"
  },
  {
    "text": "have in the\ninequalities that you have in the original problem.",
    "start": "3904880",
    "end": "3911400"
  },
  {
    "text": "So if x4 happens to be\n0, then you're jammed up.",
    "start": "3911400",
    "end": "3917220"
  },
  {
    "text": "You have no slack, because x1\nplus x2 plus 3x3 equals 30.",
    "start": "3917220",
    "end": "3922450"
  },
  {
    "text": "And increasing any one of them\nwill violate the constraint. So that's just simply\nthe notion of slack.",
    "start": "3922450",
    "end": "3929130"
  },
  {
    "text": "It's how much room do you have. x5 is 24 minus 2x1\nminus 2x2 minus 5x3.",
    "start": "3929130",
    "end": "3942220"
  },
  {
    "text": "And the last one\nis 36 minus 4x1.",
    "start": "3942220",
    "end": "3947460"
  },
  {
    "text": "This is very mechanical\nup to this point. And so I'll call this set\nof equations, equation I.",
    "start": "3947460",
    "end": "3953880"
  },
  {
    "text": "And what I'm going\nto do is I'm going to now work on a space that\ncorresponds to x1, x2, x3, x4,",
    "start": "3953880",
    "end": "3965980"
  },
  {
    "text": "x5, x6. So I'm going to have\nthese solutions that now have six values\nassociated with them,",
    "start": "3965980",
    "end": "3973516"
  },
  {
    "text": "as opposed to just three\nvalues, because I've added three variables, the basic\nvariables, to my non-basic set.",
    "start": "3973516",
    "end": "3980529"
  },
  {
    "text": "So the original\nvariables are non-basic,",
    "start": "3980530",
    "end": "3986390"
  },
  {
    "text": "just to differentiate. So so far it's just\nset up its definitions.",
    "start": "3986390",
    "end": "3992279"
  },
  {
    "text": "We can think about up running\nthrough iterations of simplex.",
    "start": "3992280",
    "end": "3999260"
  },
  {
    "text": "It takes about three\niterations here in order to get to the point\nwhere the optimum is obvious.",
    "start": "3999260",
    "end": "4007630"
  },
  {
    "text": "So you're going to convert\nthrough three slack forms. And then finally, when you\nget to this fourth slack form,",
    "start": "4007630",
    "end": "4013680"
  },
  {
    "text": "you see that you have\nan optimal solution. And how does that work?",
    "start": "4013680",
    "end": "4018740"
  },
  {
    "text": "You're going to have the notion\nof a basic solution, where",
    "start": "4018740",
    "end": "4024660"
  },
  {
    "text": "we set all non-basic\nvariables to 0.",
    "start": "4024660",
    "end": "4031984"
  },
  {
    "start": "4031985",
    "end": "4039200"
  },
  {
    "text": "So in this case, what\nwe're going to have-- and then we're going to compute\nvalues of the basic variables.",
    "start": "4039200",
    "end": "4046105"
  },
  {
    "start": "4046105",
    "end": "4051880"
  },
  {
    "text": "So our objective function\nhere is going to be 3 times",
    "start": "4051880",
    "end": "4056900"
  },
  {
    "text": "0 plus 1 times 0 plus 2 times\n0, which is obviously 0. ",
    "start": "4056900",
    "end": "4064900"
  },
  {
    "text": "And the values x4,\nof course, is going",
    "start": "4064900",
    "end": "4073430"
  },
  {
    "text": "to be-- because all of these\nare 0-- is going to be 30. x5 is going to be 24. And x6 is going to be 36.",
    "start": "4073430",
    "end": "4079920"
  },
  {
    "text": "So this is kind of a\ntrivial starting point. So you can think\nof this as 0, 0, 0,",
    "start": "4079920",
    "end": "4085660"
  },
  {
    "text": "the solution that you're\nlooking at, 30 24, and 36.",
    "start": "4085660",
    "end": "4093359"
  },
  {
    "text": "So that's our starting\npoint, which doesn't really tell you much.",
    "start": "4093360",
    "end": "4100290"
  },
  {
    "text": "But now comes the\nkey step, where we're going to do something\nthat's called pivoting.",
    "start": "4100290",
    "end": "4106009"
  },
  {
    "text": "And in pivoting,\nyou're going to swap a basic able with a\nnon-basic variable.",
    "start": "4106010",
    "end": "4113160"
  },
  {
    "text": "It is a step that requires\nsome intelligence. But the basic step is a swap.",
    "start": "4113160",
    "end": "4121609"
  },
  {
    "text": "So one of the basic\nvariables is going to become a non-basic\nvariable and vice versa.",
    "start": "4121609",
    "end": "4127470"
  },
  {
    "text": "And how do we select this? Initially, you can kind of\ndo this in an arbitrary way.",
    "start": "4127470",
    "end": "4134500"
  },
  {
    "text": "It gets a little more\nsubtle as you go along. You don't want to do\nthings in a random way.",
    "start": "4134500",
    "end": "4142839"
  },
  {
    "text": "But let's just start with\nwhat pivoting actually",
    "start": "4142840",
    "end": "4151199"
  },
  {
    "text": "does in a more generic setting.",
    "start": "4151200",
    "end": "4156259"
  },
  {
    "text": "The basic step is select a\nnon-basic variable-- let's",
    "start": "4156260",
    "end": "4164549"
  },
  {
    "text": "call it x sub e-- who's\ncoefficient in the objective",
    "start": "4164550",
    "end": "4173170"
  },
  {
    "text": "function is positive.",
    "start": "4173170",
    "end": "4178173"
  },
  {
    "text": " You can always redefine things\nif you can't find something",
    "start": "4178174",
    "end": "4185930"
  },
  {
    "text": "like that. But we won't go there. And then what we're\ngoing to do is we're going to increase the\nvalue of x as much as possible.",
    "start": "4185930",
    "end": "4197745"
  },
  {
    "text": " And we always have\nconstraints, of course.",
    "start": "4197745",
    "end": "4203330"
  },
  {
    "text": "So we can do that\nwithout violating any of the constraints. ",
    "start": "4203330",
    "end": "4215320"
  },
  {
    "text": "And then at this point,\nvariable xe becomes basic.",
    "start": "4215320",
    "end": "4224909"
  },
  {
    "text": "So it's going to turn\ninto the left hand side. It's going to move over. You're going to swap-- the x1\nmight be over here, over here,",
    "start": "4224910",
    "end": "4231890"
  },
  {
    "text": "and you got to rewrite these\nequations so the x1 becomes basic, for example, over\nto the left hand side,",
    "start": "4231890",
    "end": "4238280"
  },
  {
    "text": "and the variable\nthat it replaced goes over to the\nright hand side. So you can think of this\nas Gaussian elimination,",
    "start": "4238280",
    "end": "4245639"
  },
  {
    "text": "except with inequalities. There's definitely\nrelationships there, if you recall your\nGaussian elimination.",
    "start": "4245640",
    "end": "4252430"
  },
  {
    "text": "If you don't, don't\nworry about it. So xe becomes basic,\nand some other variable",
    "start": "4252430",
    "end": "4262159"
  },
  {
    "text": "becomes non-basic. ",
    "start": "4262160",
    "end": "4270420"
  },
  {
    "text": "The values of other\nbasic variables and the objective\nfunction may change.",
    "start": "4270420",
    "end": "4284023"
  },
  {
    "text": " So we'll do one\npivot step at least,",
    "start": "4284023",
    "end": "4293530"
  },
  {
    "text": "so you get a sense for\nthe algebra involved. And it becomes a\nlittle more concrete.",
    "start": "4293530",
    "end": "4300420"
  },
  {
    "text": "To motivate you\nfurther, you'll be doing this in problem set\n8 on a different example.",
    "start": "4300420",
    "end": "4307985"
  },
  {
    "text": " So what did I do\nhere is we're going",
    "start": "4307985",
    "end": "4314830"
  },
  {
    "text": "to select a non-basic variable. So let's just select\nx1, lexicographic order",
    "start": "4314830",
    "end": "4322970"
  },
  {
    "text": "or numeric order, let's\nselect x1 is selected.",
    "start": "4322970",
    "end": "4329600"
  },
  {
    "text": "That's the non-basic variable.  And what I want to do is\nincrease the value of x1.",
    "start": "4329600",
    "end": "4339679"
  },
  {
    "text": "So I want to increase it\nwithout violating constraints. ",
    "start": "4339680",
    "end": "4349450"
  },
  {
    "text": "Now, which of these\nconstraints do you think is going to cause trouble\nfirst with respect",
    "start": "4349450",
    "end": "4355710"
  },
  {
    "text": "to increasing the value of x1? x1 is now 0. We're at ground level, we have\nall 0, things are feasible.",
    "start": "4355710",
    "end": "4365440"
  },
  {
    "text": "Now, as I start\nincreasing x1, remember, you have non-negativity\nconstraints",
    "start": "4365440",
    "end": "4371860"
  },
  {
    "text": "associated with each of\nthe x4 values as well. That's what these basic\nvariables represent.",
    "start": "4371860",
    "end": "4377840"
  },
  {
    "text": "So don't forget the fact that\nthe constraints are violated. You need all the xi's to be\ngreater than or equal to 0.",
    "start": "4377840",
    "end": "4386860"
  },
  {
    "text": "That was true for the\nnon-basic variables. It's also true for\nthe basic variables.",
    "start": "4386860",
    "end": "4391869"
  },
  {
    "text": "So a violation of a\nconstraint implies that one of the currently\nbasic variables goes negative.",
    "start": "4391870",
    "end": "4399780"
  },
  {
    "text": "That's exactly equivalent\nto the original inequality not being satisfied.",
    "start": "4399780",
    "end": "4405400"
  },
  {
    "text": "So which of these\nconstraints, do you think, is going to cause trouble here? Just look at it, and should\nbe able to look at the three",
    "start": "4405400",
    "end": "4413440"
  },
  {
    "text": "equations and tell me, as\nI increase the value of x1, where am I going\nto hit my limit?",
    "start": "4413440",
    "end": "4420510"
  },
  {
    "text": "x6, yes, absolutely correct. So that's because\nof the minus 4 here. This is a big multiplier.",
    "start": "4420510",
    "end": "4425520"
  },
  {
    "text": "I got a minus 1 here, a minus\n2 here, and a minus 4 here. And if we just look at 4, the\nmagnitudes, 4 is bigger than 2",
    "start": "4425520",
    "end": "4433922"
  },
  {
    "text": "and is bigger than\n1, so it's going to be that third constraint. So third constraint--\nyou can obviously",
    "start": "4433922",
    "end": "4442310"
  },
  {
    "text": "compute this numerically\nor mechanically. It was just easier to do this in\nthis example by eyeballing it.",
    "start": "4442310",
    "end": "4450320"
  },
  {
    "text": "And so third constraint\nis the tightest one. And it limits how much\nwe can increase x1.",
    "start": "4450320",
    "end": "4456780"
  },
  {
    "text": "So I'm going to\ndo my second step up there, which\ncorresponds to rewriting",
    "start": "4456780",
    "end": "4462610"
  },
  {
    "text": "x1 as these other variables. And now, I got x1 on the\nleft hand side and x6",
    "start": "4462610",
    "end": "4471480"
  },
  {
    "text": "on the right hand side. And now, it's just merely\na matter of substitution. Once I've done this, I'm just\ngoing to jam through and go in",
    "start": "4471480",
    "end": "4480590"
  },
  {
    "text": "and I'm going to rewrite\nthe other equations with x6",
    "start": "4480590",
    "end": "4498130"
  },
  {
    "text": "on the right hand side.  And that is, I'm\ngoing to replace x1",
    "start": "4498130",
    "end": "4509530"
  },
  {
    "text": "with the eyeball equation. And that's really a\nsimple substitution.",
    "start": "4509530",
    "end": "4515665"
  },
  {
    "text": "So at this point,\nwhat's happened is, because the third\nconstraint representing x6",
    "start": "4515665",
    "end": "4521170"
  },
  {
    "text": "was the one that was\nchosen, what's happened is that x1 and x6 are\ngoing to interchange roles.",
    "start": "4521170",
    "end": "4528440"
  },
  {
    "text": "x1 was non-basic, it's\ngoing to become basic. x6 was basic and is going\nto become non-basic.",
    "start": "4528440",
    "end": "4534680"
  },
  {
    "text": "And that's basically the essence\nof the simplex algorithm. The iteration and then the\nconvergence and all of that",
    "start": "4534680",
    "end": "4541850"
  },
  {
    "text": "is, as I mentioned, going to\nrequire getting to a point",
    "start": "4541850",
    "end": "4548400"
  },
  {
    "text": "where the optimality\nis obvious, but we won't be doing any\nproofs corresponding",
    "start": "4548400",
    "end": "4553420"
  },
  {
    "text": "to conversions for simplex\nor any other specific LP techniques in this class.",
    "start": "4553420",
    "end": "4561130"
  },
  {
    "text": "Maybe some constraint\ntechniques, I take back what I said, but\ncertainly not for simplex. But I just want to give you\na sense for the flow here.",
    "start": "4561130",
    "end": "4570079"
  },
  {
    "text": "And so let's just go through\nthis last thing here in terms of finishing off the pivot xi's.",
    "start": "4570080",
    "end": "4578679"
  },
  {
    "text": "And I want to show you what\nthe equations look like.",
    "start": "4578680",
    "end": "4585240"
  },
  {
    "text": "And if you just keep doing that,\nat some point, you'll converge.",
    "start": "4585240",
    "end": "4590670"
  },
  {
    "text": " And so what happens\nhere is you have z equals 27 plus x2 divided\nby 4 plus x3 divided",
    "start": "4590670",
    "end": "4601150"
  },
  {
    "text": "by 2 minus 3x6 divided by 4. x1 equals-- so there's\na bunch of algebra",
    "start": "4601150",
    "end": "4609290"
  },
  {
    "text": "here that I'm obviously skipping\nover, but it's simple algebra.",
    "start": "4609290",
    "end": "4617470"
  },
  {
    "text": "And I have x4 over\nhere, 21 minus 3x2",
    "start": "4617470",
    "end": "4622950"
  },
  {
    "text": "divided by 4 minus 5x3 divided\nby 2 plus x6 divided by 4,",
    "start": "4622950",
    "end": "4629372"
  },
  {
    "text": "and then one last thing here. ",
    "start": "4629372",
    "end": "4643970"
  },
  {
    "text": "So that's my pivot step,\nthat I've flipped x1 and x6.",
    "start": "4643970",
    "end": "4649870"
  },
  {
    "text": "So now you ask,\nwhat was the point? What was the point of this? Well, the point of this was\nthat you actually increased",
    "start": "4649870",
    "end": "4659120"
  },
  {
    "text": "the objective function value\nand, in this particular case, quite significantly, while\nmaintaining correctness.",
    "start": "4659120",
    "end": "4666280"
  },
  {
    "text": "And so let me just make these\nobservations and conclude here,",
    "start": "4666280",
    "end": "4673139"
  },
  {
    "text": "because then that gets us to\nthe point where you've seen the details of one pivot step. And you can imagine applying it\nover and over to a convergence.",
    "start": "4673140",
    "end": "4682840"
  },
  {
    "text": "And let's just look at the\noriginal basic solution,",
    "start": "4682840",
    "end": "4689590"
  },
  {
    "text": "which as you recall was\n0, 0, 0, 30, 24, and 36.",
    "start": "4689590",
    "end": "4697380"
  },
  {
    "text": "And this is simply\nx1 through x6. This original basic\nsolution suddenly",
    "start": "4697380",
    "end": "4703100"
  },
  {
    "text": "satisfies these\nequations-- equations II,",
    "start": "4703100",
    "end": "4708140"
  },
  {
    "text": "if you just put them in there. And it makes sense that it will\nhave the objective value of 0,",
    "start": "4708140",
    "end": "4715800"
  },
  {
    "text": "given equivalents,\nbut you can verify that by saying\nthat you have 27--",
    "start": "4715800",
    "end": "4721409"
  },
  {
    "text": "the original had the\nobjective value of 0, because all the x\nsub 1, x2, x3 were 0,",
    "start": "4721410",
    "end": "4727230"
  },
  {
    "text": "so that was an easy check in the\nset of equations corresponding to the first set, which\nI've erased at this point.",
    "start": "4727230",
    "end": "4733360"
  },
  {
    "text": "But no matter. And if you look at what I\nhave here, I have 36 equals 0.",
    "start": "4733360",
    "end": "4743140"
  },
  {
    "text": "So the objective\nvalue here is 0. It matches what you had before. But the basic\nsolution for II, I'm",
    "start": "4743140",
    "end": "4756670"
  },
  {
    "text": "going to set the\nnon-basic values. So what is a solution here?",
    "start": "4756670",
    "end": "4762170"
  },
  {
    "text": "The non-basic values are 0.",
    "start": "4762170",
    "end": "4767350"
  },
  {
    "text": "So the solution is going to\nbe 9, because 9 is non-basic.",
    "start": "4767350",
    "end": "4775970"
  },
  {
    "text": "x1 is now non-basic. x2 and x3 are still basic. And then I have 21 and 6.",
    "start": "4775970",
    "end": "4782840"
  },
  {
    "text": "And x6 now has become basic. So the way I get this solution\nis simply by plugging in 0's",
    "start": "4782840",
    "end": "4790040"
  },
  {
    "text": "on this aside. And I get 9, 21, and 6,\nbecause I just plugged in 0's on the right hand side.",
    "start": "4790040",
    "end": "4796910"
  },
  {
    "text": "So that's how I\ngot a new solution. And if you look at the\nobjective value for this,",
    "start": "4796910",
    "end": "4803400"
  },
  {
    "text": "the objective value, you can\nlook at this objective value",
    "start": "4803400",
    "end": "4809670"
  },
  {
    "text": "simply by looking at\nthe original problem. And the original problem\nhad 3x1 plus x2 plus x3",
    "start": "4809670",
    "end": "4820670"
  },
  {
    "text": "as the objective value. And so if you go off and you\nsee, well, that you had 0's for the other ones,\nbut you have 3 times 9,",
    "start": "4820670",
    "end": "4829590"
  },
  {
    "text": "so we have an\nobjective value of 27. So this flip of\nour pivot basically",
    "start": "4829590",
    "end": "4837250"
  },
  {
    "text": "got you from an\nobjective value of 0, while maintaining correctness,\nto an objective value of 27.",
    "start": "4837250",
    "end": "4845190"
  },
  {
    "text": "And you can look at this\nin the notes or in CLRS, but you have to do two\nmore pivots corresponding",
    "start": "4845190",
    "end": "4852040"
  },
  {
    "text": "to two other variables--\nthe same grungy stuff that I went through here,\nsubstitution after selection.",
    "start": "4852040",
    "end": "4859099"
  },
  {
    "text": "And the objective value\nis going to increase. And you might ask, how\ndo I know that I'm done?",
    "start": "4859100",
    "end": "4865690"
  },
  {
    "text": "And so that was the\nlast thing here, which is increase the value\nuntil it becomes obvious-- no,",
    "start": "4865690",
    "end": "4873699"
  },
  {
    "text": "this was pivoting, I'm sorry--\nincrease the value pivot until it becomes obvious\nwhat the optimum is.",
    "start": "4873700",
    "end": "4883240"
  },
  {
    "text": "And what ends up\nhappening is you end up with an objective function.",
    "start": "4883240",
    "end": "4888320"
  },
  {
    "text": "In this case, the objective\nfunction mind you, this thing over here is\nthe objective function.",
    "start": "4888320",
    "end": "4894100"
  },
  {
    "text": "And notice that it has\na negative coefficient on the variable\nthat was actually",
    "start": "4894100",
    "end": "4903570"
  },
  {
    "text": "the part of the first pivot. So x1 and x6 were a\npart of the first pivot.",
    "start": "4903570",
    "end": "4908850"
  },
  {
    "text": "And this got a\nnegative coefficient. So what ends up happening here\nis you end up getting something",
    "start": "4908850",
    "end": "4913890"
  },
  {
    "text": "like 30 minus something\nminus something",
    "start": "4913890",
    "end": "4921810"
  },
  {
    "text": "minus something, where you\nhave xi values over here.",
    "start": "4921810",
    "end": "4926930"
  },
  {
    "text": "And when you set these to be\n0, that's the best you can do, because these are all\nnegative quantities.",
    "start": "4926930",
    "end": "4933870"
  },
  {
    "text": "So I'll just leave\nyou with that. Hopefully, you understood\nhow we do the pivoting--",
    "start": "4933870",
    "end": "4939270"
  },
  {
    "text": "sub through it three\ntimes, and then you get that objective function,\nand the optimum value is 30.",
    "start": "4939270",
    "end": "4944350"
  },
  {
    "text": "See you next time. ",
    "start": "4944350",
    "end": "4946615"
  }
]