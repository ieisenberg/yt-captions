[
  {
    "start": "0",
    "end": "8200"
  },
  {
    "text": "SRINI DEVADAS: All right\ngood morning, everyone. Welcome back. I hope you had a\ngood long weekend.",
    "start": "8200",
    "end": "15330"
  },
  {
    "text": "So today's puzzle is, I\nguess, a classic puzzle. It's Sudoku.",
    "start": "15330",
    "end": "21870"
  },
  {
    "text": "I've never actually\nsuccessfully managed to complete a Sudoku\npuzzle by myself,",
    "start": "21870",
    "end": "28529"
  },
  {
    "text": "because they've fallen\ninto two categories for me. Either they're easy, and\nI get bored and I stop.",
    "start": "28530",
    "end": "35610"
  },
  {
    "text": "Or they're too hard, and\nI get lazy and I stop. But what I have done is\nwrite a computer program",
    "start": "35610",
    "end": "42930"
  },
  {
    "text": "that essentially solves\nany Sudoku puzzle that is put in front of it in seconds.",
    "start": "42930",
    "end": "50730"
  },
  {
    "text": "Maybe there exist puzzles for\nwhich it would take minutes, but I haven't\ndiscovered such puzzles.",
    "start": "50730",
    "end": "57660"
  },
  {
    "text": "And what we're going to do\ntoday is talk about Sudoku, compare and contrast the human\nway of solving Sudoku puzzles",
    "start": "57660",
    "end": "67830"
  },
  {
    "text": "against a brute force way,\nand then try and integrate the two together.",
    "start": "67830",
    "end": "73049"
  },
  {
    "text": "You know perhaps\nthis is the closest we're going to get\nto AI in this class, where we're going to try and\nmarry an exhaustive search",
    "start": "73050",
    "end": "83280"
  },
  {
    "text": "method with some smarts. And back-- I think when we were\ndoing the N-queens puzzle--",
    "start": "83280",
    "end": "90020"
  },
  {
    "text": "one of you asked a\nquestion about what the number of\npossibilities were. For an eight queens puzzle,\nwas it eight raised to eight?",
    "start": "90020",
    "end": "97680"
  },
  {
    "text": "And I said, well no. You can prune the\nsearch by figuring out",
    "start": "97680",
    "end": "103260"
  },
  {
    "text": "that particular partial\nconfigurations that correspond to perhaps two queens\nbeing placed on the eight",
    "start": "103260",
    "end": "111180"
  },
  {
    "text": "by eight board already does\nnot correspond to a solution,",
    "start": "111180",
    "end": "117600"
  },
  {
    "text": "because the two queens\nconflict with each other. And you can then\nshrink this eight raised to eight substantially.",
    "start": "117600",
    "end": "124330"
  },
  {
    "text": "So that's exactly\nthe methodology that we're going to\nfollow here in trying",
    "start": "124330",
    "end": "129840"
  },
  {
    "text": "to take our brute\nforce solver, which will work, given enough time,\non arbitrary Sudoku puzzles.",
    "start": "129840",
    "end": "138660"
  },
  {
    "text": "But we may not want\nto wait that long. And we're going to take this\nstrategy of pruning the search to try and improve the solver.",
    "start": "138660",
    "end": "145170"
  },
  {
    "text": "And one last thing before I get\nstarted on the rules of Sudoku, we're going to have to have a\nway of measuring performance.",
    "start": "145170",
    "end": "152790"
  },
  {
    "text": "Just like we can measure eight\nraised to eight or four raised to four or what\nhave you, we want",
    "start": "152790",
    "end": "159000"
  },
  {
    "text": "to have a way of measuring-- outside of the\nparticular machine that's being used,\nwe can obviously",
    "start": "159000",
    "end": "164939"
  },
  {
    "text": "measure real time\nin terms of seconds, but that's not as precise--",
    "start": "164940",
    "end": "169980"
  },
  {
    "text": "you want to measure\nmore precisely what the number of combinations are.",
    "start": "169980",
    "end": "175680"
  },
  {
    "text": "And so we could certainly\ninstrument our code with appropriate\ncounters that will allow",
    "start": "175680",
    "end": "182040"
  },
  {
    "text": "us to measure this performance. And so then it won't matter if\nour code runs on a fast machine",
    "start": "182040",
    "end": "187500"
  },
  {
    "text": "or a slow machine. We can compare it with\nanother piece of code or another variant of the code\nand say, oh this new variant",
    "start": "187500",
    "end": "194000"
  },
  {
    "text": "is slower or the new\nvariant is faster according to this metric. All right? So without further ado,\nlet's dive into Sudoku.",
    "start": "194000",
    "end": "202300"
  },
  {
    "text": "How many of you have never seen\nSudoku, never played Sudoku?",
    "start": "202300",
    "end": "207420"
  },
  {
    "text": "All right, so that's fine. It's only going to take\nme about 30 seconds",
    "start": "207420",
    "end": "213240"
  },
  {
    "text": "to explain what the\nrules of Sudoku are. And then we can dive into trying\nto, at least partially, solve",
    "start": "213240",
    "end": "219900"
  },
  {
    "text": "this puzzle. I do not want to\ncompletely solve the puzzle because, as I said, it's either\ntoo simple or it's too hard.",
    "start": "219900",
    "end": "229260"
  },
  {
    "text": "And I'd rather write\ncomputer programs. And so the rules of\nSudoku are simple.",
    "start": "229260",
    "end": "236040"
  },
  {
    "text": "So this is classic Sudoku,\nand it's a nine by nine. There's many variants of Sudoku.",
    "start": "236040",
    "end": "243180"
  },
  {
    "text": "In fact, a couple\nof the exercises talk about two variants,\ndiagonal Sudoku and even",
    "start": "243180",
    "end": "250350"
  },
  {
    "text": "Sudoku, I think-- there's probably odd\nSudokus as well-- that add even more constraints\nto the basic constraints",
    "start": "250350",
    "end": "257820"
  },
  {
    "text": "of Sudoku that I'm\ngoing to write up here. And this is nine by nine Sudoku.",
    "start": "257820",
    "end": "266070"
  },
  {
    "text": "And the numbers are\none through nine. ",
    "start": "266070",
    "end": "276979"
  },
  {
    "text": "And the rules are simple. Each row has all\nthe numbers, which",
    "start": "276980",
    "end": "288270"
  },
  {
    "text": "means that no numbers could\nbe repeated, because there's nine columns and nine rows.",
    "start": "288270",
    "end": "294670"
  },
  {
    "text": "So there's nine\nnumbers on each row. Each column has\nall the numbers--",
    "start": "294670",
    "end": "306250"
  },
  {
    "text": "same thing.  So there's nine rows\nand nine columns.",
    "start": "306250",
    "end": "311610"
  },
  {
    "text": "And then each sector, which\nis a three by three grid--",
    "start": "311610",
    "end": "318539"
  },
  {
    "text": "and so that's why I have these\noverhangs here corresponding to pointing out what the\nnine sectors are in Sudoku.",
    "start": "318540",
    "end": "326700"
  },
  {
    "text": "So this is a sector. That's a sector. This middle one, which\nis completely blank right now is a\nsector, et cetera.",
    "start": "326700",
    "end": "333910"
  },
  {
    "text": "So each sector has\nall the numbers. ",
    "start": "333910",
    "end": "340670"
  },
  {
    "text": "You can grow the\nsize of the puzzle. It gets more difficult. You\ncould add more constraints.",
    "start": "340670",
    "end": "346850"
  },
  {
    "text": "As I mentioned, diagonal\nSudoku might say something like both of the diagonals, the\nlarge diagonals, the full size",
    "start": "346850",
    "end": "355340"
  },
  {
    "text": "diagonals, have all nine\nnumbers on them, et cetera. So that makes the\npuzzle different.",
    "start": "355340",
    "end": "361830"
  },
  {
    "text": "You may have a\nsolution to the nine by nine original Sudoku\npuzzle, but it may not",
    "start": "361830",
    "end": "367039"
  },
  {
    "text": "be a solution to\nthe diagonal puzzle. Obviously the other\nway around works",
    "start": "367040",
    "end": "372950"
  },
  {
    "text": "because the diagonal puzzle\nonly has more constraints. And so what we do here is\ntry and use implications.",
    "start": "372950",
    "end": "382699"
  },
  {
    "text": "Right, so we have these rules. And we'll first forget\nabout computer programs",
    "start": "382700",
    "end": "388100"
  },
  {
    "text": "and try and solve this the\nway people do when they just",
    "start": "388100",
    "end": "393860"
  },
  {
    "text": "have a paper and\npencil and they have the puzzle in front of them. And they try and use these rules\nto discover empty positions.",
    "start": "393860",
    "end": "404090"
  },
  {
    "text": "And it's kind of hard to do\nanything with this sector here.",
    "start": "404090",
    "end": "409406"
  },
  {
    "text": "You could use the row and\ncolumn constraints, obviously, even for this sector. Because you have constraints on\nthese three based on the fact",
    "start": "409407",
    "end": "418730"
  },
  {
    "text": "that you have nine and seven\nand one and six on this row, et cetera. But usually you go\nwith sectors that",
    "start": "418730",
    "end": "425900"
  },
  {
    "text": "have a few numbers in them. You go with rows that have\na few numbers in them. And you go with columns that\nhave a few numbers in them.",
    "start": "425900",
    "end": "432260"
  },
  {
    "text": "And then you can try and\nshrink the possibilities. All right? So just because I don't\nwant to go overboard",
    "start": "432260",
    "end": "439550"
  },
  {
    "text": "with respect to looking\nall over the puzzle, let's focus in on eight--",
    "start": "439550",
    "end": "445789"
  },
  {
    "text": "the number eight. And one of you tell me\nif I can imply something",
    "start": "445790",
    "end": "453800"
  },
  {
    "text": "based on the locations\nof eight on the top third",
    "start": "453800",
    "end": "459409"
  },
  {
    "text": "of this puzzle.  Yeah, go ahead.",
    "start": "459410",
    "end": "465274"
  },
  {
    "text": "AUDIENCE: Top middle square. SRINI DEVADAS: Top middle\nsquare, what's your name? Kye? So Kye says top middle square\nshould be an eight, right here.",
    "start": "465274",
    "end": "473569"
  },
  {
    "text": "Right, and-- oh, top OK. Yeah that clearly\ncan't be an eight, because this is an eight here.",
    "start": "473570",
    "end": "478960"
  },
  {
    "text": "But good, so the claim\nis this is an eight. And Kye, how did\nyou figure that out?",
    "start": "478960",
    "end": "485820"
  },
  {
    "text": "AUDIENCE: You can eliminate\nthe first two rows because. SRINI DEVADAS: Right\nyou can eliminate this, because eight can't be\nhere because of this eight.",
    "start": "485820",
    "end": "492390"
  },
  {
    "text": "Eight can't be here\nbecause of this eight. You need to have an 8 in\nhere somewhere, because eight",
    "start": "492390",
    "end": "498639"
  },
  {
    "text": "doesn't exist in the sector. So that would imply that I\nneed to put an eight up here. OK?",
    "start": "498640",
    "end": "503710"
  },
  {
    "text": "So this is what's called\na horizontal scan. The only thing that Kye did\nhere was scan horizontally.",
    "start": "503710",
    "end": "511630"
  },
  {
    "text": "And you can imagine that-- so Kye did not use, in\norder to imply the eight--",
    "start": "511630",
    "end": "518080"
  },
  {
    "text": "and so this word implication,\nimply, is something that we're going to use\nin a more technical sense",
    "start": "518080",
    "end": "523570"
  },
  {
    "text": "as well when we write our code,\nbut an implication essentially says these rules imply\nthe location of the eight.",
    "start": "523570",
    "end": "531640"
  },
  {
    "text": "Right? And we didn't do\na vertical scan. We did not use the fact that--",
    "start": "531640",
    "end": "538010"
  },
  {
    "text": "in this particular\nimplication, we did not use the fact that a column\nneeds to have all numbers on it,",
    "start": "538010",
    "end": "544390"
  },
  {
    "text": "and therefore all of the numbers\non a column have to be unique. Take a look at--",
    "start": "544390",
    "end": "550225"
  },
  {
    "text": " take a look at this part here. And let's look at one.",
    "start": "550225",
    "end": "560280"
  },
  {
    "text": "And try and use a more\nsophisticated form of implication corresponding\nto both horizontal",
    "start": "560280",
    "end": "567750"
  },
  {
    "text": "and vertical scans to imply\nthe position of a one somewhere",
    "start": "567750",
    "end": "574080"
  },
  {
    "text": "on the puzzle. Can someone do that? Yeah, back there.",
    "start": "574080",
    "end": "579527"
  },
  {
    "text": "AUDIENCE: In the top box--\nin the top right box, it's to the right of six. SRINI DEVADAS: OK, so\nthe one can't be here.",
    "start": "579527",
    "end": "585740"
  },
  {
    "text": "The one can't be here. Right? And the one can't be here. So it has to be over here.",
    "start": "585740",
    "end": "591071"
  },
  {
    "text": "What's your name? AUDIENCE: George. SRINI DEVADAS:\nGeorge-- so George says the one has to be here. And he used both vertical\nscanning as well as",
    "start": "591072",
    "end": "599070"
  },
  {
    "text": "horizontal scanning in\norder to imply the one. So it's a little\nmore sophisticated.",
    "start": "599070",
    "end": "604410"
  },
  {
    "text": "OK, on top of that,\nobviously, sectors are going to give you\nsome implications as well.",
    "start": "604410",
    "end": "612960"
  },
  {
    "text": "And there's no end\nto this, honestly. There's combinations, there's\nalso a little bit of look",
    "start": "612960",
    "end": "618290"
  },
  {
    "text": "ahead, where the hardest puzzles\nare the ones where you run out",
    "start": "618290",
    "end": "623639"
  },
  {
    "text": "of the eights and the ones\nin terms of the examples that we have here where\nwe've just sort of implied--",
    "start": "623640",
    "end": "630089"
  },
  {
    "text": "without guessing, we've implied\nthe location of a number. And then because of that, our\npuzzle got smaller in the sense",
    "start": "630090",
    "end": "637380"
  },
  {
    "text": "that there's fewer blank\nlocations, blank squares. And then that helps\nus move forward.",
    "start": "637380",
    "end": "644740"
  },
  {
    "text": "So the easy puzzles\nare the ones where fairly straightforward\nimplications like the ones we did here\nalways exist, are easy to find.",
    "start": "644740",
    "end": "655740"
  },
  {
    "text": "Sometimes you have to search\na little bit, look at the top, look at the bottom,\nlook at the middle.",
    "start": "655740",
    "end": "661300"
  },
  {
    "text": "And then you fill things in. And because you\nfilled things in, something else now\nis in play, right?",
    "start": "661300",
    "end": "667950"
  },
  {
    "text": "It becomes viable in\nterms of an implication. The fact that I put\nan eight in there implies that the\neight is now taken--",
    "start": "667950",
    "end": "674470"
  },
  {
    "text": "its location. And so now obviously\nthere's only four left here. And the fact that\nthere's an eight here",
    "start": "674470",
    "end": "680250"
  },
  {
    "text": "implies that all of these\ncan't have an eight in them. These seven locations\nunderneath can't",
    "start": "680250",
    "end": "687480"
  },
  {
    "text": "have an eight in them, right,\nbecause of the constraints. So this shrinking\nof possibilities",
    "start": "687480",
    "end": "693779"
  },
  {
    "text": "is something that a human does. And you can kind of go\nthrough this process.",
    "start": "693780",
    "end": "699550"
  },
  {
    "text": "It's an iterative process\nthat you go through.",
    "start": "699550",
    "end": "704580"
  },
  {
    "text": "And if you get stuck then\nyou can't do an implication",
    "start": "704580",
    "end": "710700"
  },
  {
    "text": "that gives you a number. And some of the harder\npuzzles you have to-- you",
    "start": "710700",
    "end": "716250"
  },
  {
    "text": "have a couple of choices,\nand only one of them is going to be a correct\none going forward,",
    "start": "716250",
    "end": "723510"
  },
  {
    "text": "but you don't know\nthat at that moment. So you now have to guess.",
    "start": "723510",
    "end": "728520"
  },
  {
    "text": "And perhaps you put\nan eight over here or an eight over there. And then you say I'm going to\ngo with an eight over here.",
    "start": "728520",
    "end": "733920"
  },
  {
    "text": "And then you go a\nlittle bit further, and then you realize,\nwait a minute, there's no way I can\nsolve this puzzle. Because I need to put two\nsevens into this sector.",
    "start": "733920",
    "end": "740842"
  },
  {
    "text": "And then you go back and\nthere's actually a bit of backtracking that happens-- a wrong guess, and you\nneed to go backwards.",
    "start": "740842",
    "end": "748080"
  },
  {
    "text": "And it's very hard to do for us. It's very hard to do for\nus with pencil and paper, keeping things in our head,\nor you know writing down notes",
    "start": "748080",
    "end": "757350"
  },
  {
    "text": "on the side of the paper. Whereas it's very easy to do\nthat for a computer program. And we kind of did that\nalready in the eight queens.",
    "start": "757350",
    "end": "764402"
  },
  {
    "text": "But we're going to do\nthat in a much more systematic way over here. So you kind of\nweigh these two ways",
    "start": "764402",
    "end": "769980"
  },
  {
    "text": "of approaching this problem. One of which is I'm\njust going to blast through the different\ncombinations,",
    "start": "769980",
    "end": "775500"
  },
  {
    "text": "having a giant tree\nstructure in my head of",
    "start": "775500",
    "end": "781660"
  },
  {
    "text": "where, you know this might imply\nthat particular grid location grid IJ equals eight.",
    "start": "781660",
    "end": "789000"
  },
  {
    "text": "This might imply that\ngrid IJ equals seven. And there's obviously\na huge number",
    "start": "789000",
    "end": "794850"
  },
  {
    "text": "of combinations corresponding\nto which of these squares that I pick and what value\nI assign to those squares.",
    "start": "794850",
    "end": "802710"
  },
  {
    "text": "And then once I do that\nthere's another set. And this explodes\non you very quickly. And so if you just did this\nin a completely brutish way,",
    "start": "802710",
    "end": "811529"
  },
  {
    "text": "there's no way your\nprogram would ever end, even on a simple puzzle. But thanks to these rules,\nit turns out a fairly",
    "start": "811530",
    "end": "820350"
  },
  {
    "text": "straightforward program that's\n20 lines of code is going to solve most problems-- at\nleast the ones that I've looked",
    "start": "820350",
    "end": "825660"
  },
  {
    "text": "at-- in a reasonable amount of time. And then it's just interesting\nfrom an algorithmic standpoint",
    "start": "825660",
    "end": "833500"
  },
  {
    "text": "and an efficiency\nstandpoint to look and see how we can take that\nfairly naive approach which",
    "start": "833500",
    "end": "841089"
  },
  {
    "text": "does have some pruning but it's\nexhaustive and improve that. All right, so that's kind\nof where we are headed.",
    "start": "841090",
    "end": "847740"
  },
  {
    "text": "Make sense? Any questions about\nwhat we have so far? All right.",
    "start": "847740",
    "end": "853480"
  },
  {
    "text": "So what we're going to\ndo is go ahead and look",
    "start": "853480",
    "end": "858779"
  },
  {
    "text": "at code for Sudoku that-- so all you need to think about\nnow for the next few minutes,",
    "start": "858780",
    "end": "867040"
  },
  {
    "text": "because we're going to move into\nexhaustive search mode and code things up in a computer,\nis just those rules.",
    "start": "867040",
    "end": "873165"
  },
  {
    "text": "So you don't have\nto really think about horizontal scans and\nimplications or vertical scans.",
    "start": "873166",
    "end": "878199"
  },
  {
    "text": "That's going to come\na little bit later. And we're going to\nvary that up as well.",
    "start": "878200",
    "end": "884530"
  },
  {
    "text": "But we're going to do kind of\nwhat we did for the N-queens problem, which is set up\na recursive search that",
    "start": "884530",
    "end": "892690"
  },
  {
    "text": "is going to explore all of\nthese different possibilities. And the equivalent of no\nconflicts for the eight queens",
    "start": "892690",
    "end": "901879"
  },
  {
    "text": "or the N-queens problem, which\nsaid there's no conflicts here",
    "start": "901880",
    "end": "907300"
  },
  {
    "text": "because none of the queens\nattack each other, we're going to have something that\nessentially says this is valid",
    "start": "907300",
    "end": "912880"
  },
  {
    "text": "so far, none of\nthe rules of Sudoku corresponding to\nthese three rules that I have up on the board\nare going to be violated.",
    "start": "912880",
    "end": "919630"
  },
  {
    "text": "All right so let's take a look. And so this structure hopefully,\ngiven that we've done N-queens,",
    "start": "919630",
    "end": "931329"
  },
  {
    "text": "should be a little bit\neasier to understand.",
    "start": "931330",
    "end": "936970"
  },
  {
    "text": "So when we did eight\nqueens or N-queens,",
    "start": "936970",
    "end": "942240"
  },
  {
    "text": "we decided to start\ncolumn by column. And we could have\ndone row by row, but we decided to\nstart column by column.",
    "start": "942240",
    "end": "948000"
  },
  {
    "text": "And it was a fairly\nstraightforward puzzle. There's obviously no real change\nin an eight queens puzzle.",
    "start": "948000",
    "end": "953490"
  },
  {
    "text": "I mean, you're solving\nthe same puzzle as I am. But if I give you\na Sudoku puzzle, there's more variety\nto it in the sense that",
    "start": "953490",
    "end": "960329"
  },
  {
    "text": "depending on what I fill up-- the hard puzzles\nare the ones that are kind of intermediate in the\nsense of they're not obviously",
    "start": "960330",
    "end": "971430"
  },
  {
    "text": "fully filled and\nthey're not empty. Right if it's\ncompletely empty then",
    "start": "971430",
    "end": "977310"
  },
  {
    "text": "it's trivial to solve\na Sudoku puzzle. You can take any solution\nto a Sudoku puzzle and present it as a solution\nto the empty puzzle.",
    "start": "977310",
    "end": "984630"
  },
  {
    "text": "And then if everything is\nfull except for two things, I mean it's kind of\nobvious what those two things are assuming that the\npuzzle had a valid solution.",
    "start": "984630",
    "end": "992700"
  },
  {
    "text": "So really it's puzzles\nlike this where maybe a third are full\nthat are more difficult.",
    "start": "992700",
    "end": "999820"
  },
  {
    "text": "And it's kind of a separate\nschool, a little community that designs puzzles and tries\nto create hard puzzles.",
    "start": "999820",
    "end": "1006529"
  },
  {
    "text": "And they try and make\nthe human's problem harder by making this\nrequirement of look ahead,",
    "start": "1006530",
    "end": "1014959"
  },
  {
    "text": "like I mentioned. So good. So let's take a look\nat the code here.",
    "start": "1014960",
    "end": "1021990"
  },
  {
    "text": "So what I want to do here--\nand the first part here is-- as I said, we went column by\ncolumn in the case of N-queens.",
    "start": "1021990",
    "end": "1030230"
  },
  {
    "text": "And the question is,\nwhere do I start. I want to do something\nin a fairly naive way. And what I'm going to do is I'm\ngoing to do some sort of scan.",
    "start": "1030230",
    "end": "1037640"
  },
  {
    "text": "I'm going to scan like that. And I'm going to find-- as I do the scan, I'm going\nto find the next empty grid",
    "start": "1037640",
    "end": "1044779"
  },
  {
    "text": "location. And I'm going to say that is\ngoing to be something that I'm going to try and fill in. OK so it's not going to be I\ndiscovered this eight in the--",
    "start": "1044780",
    "end": "1054820"
  },
  {
    "text": "it was, if you count in\nterms of the empty locations, if I went this way, it was\nthe fourth empty location",
    "start": "1054820",
    "end": "1061190"
  },
  {
    "text": "and decided to fill that up. But here I'm just--\nin this code I'm going to try one, two, three,\nfour, five, six, seven, eight,",
    "start": "1061190",
    "end": "1068936"
  },
  {
    "text": "nine here. And the first part\nof the code here that says what is the name\nof this procedure.",
    "start": "1068936",
    "end": "1075679"
  },
  {
    "text": "It says find next cell to fill. Which means what its name is-- find the next cell.",
    "start": "1075680",
    "end": "1081210"
  },
  {
    "text": "Find the next grid\nlocation to fill. And it simply goes\nfor X in range zero",
    "start": "1081210",
    "end": "1086420"
  },
  {
    "text": "through nine, for Y in\nrange zero through nine. I'm assuming that since zero\nis not a valid entry here,",
    "start": "1086420",
    "end": "1093380"
  },
  {
    "text": "I could use zero\nto signify empty. OK? It's only one through nine,\nso zero can signify empty.",
    "start": "1093380",
    "end": "1099410"
  },
  {
    "text": "And this just returns\nX and Y corresponding to the first empty location.",
    "start": "1099410",
    "end": "1106740"
  },
  {
    "text": "So in this case it\nwould just return (0,0). OK? And then if this were\nfull then it would go--",
    "start": "1106740",
    "end": "1113540"
  },
  {
    "text": "obviously the X changes. And when X changes, you're\ngoing over to the right.",
    "start": "1113540",
    "end": "1122059"
  },
  {
    "text": "And so you would\nget a (1,0) back. If this were filled,\nthe next time around I'd",
    "start": "1122060",
    "end": "1129230"
  },
  {
    "text": "get this grid\nlocation, et cetera. It doesn't matter. Just like I could go\ncolumn by column or row",
    "start": "1129230",
    "end": "1134900"
  },
  {
    "text": "by row, as long as I\nhave a deterministic way of discovering the\nempty location--",
    "start": "1134900",
    "end": "1143600"
  },
  {
    "text": "and usually you want to have\nthe same way of discovering the empty location. But even that is\nnot a requirement",
    "start": "1143600",
    "end": "1149840"
  },
  {
    "text": "as long as there's\nan empty location and your find next cell to\nfill finds that empty location",
    "start": "1149840",
    "end": "1155419"
  },
  {
    "text": "and returns it to you, you're\ngood, and the rest of our code is going to work. But no reason to\nget more complicated",
    "start": "1155420",
    "end": "1163190"
  },
  {
    "text": "than what I have up there. So find next cell\nto fill makes sense?",
    "start": "1163190",
    "end": "1168309"
  },
  {
    "text": "We good with that? All right. And generally with\nexhaustive search",
    "start": "1168310",
    "end": "1175130"
  },
  {
    "text": "the key procedure is always\ndo you have a valid solution",
    "start": "1175130",
    "end": "1182501"
  },
  {
    "text": "or not? And you may not have\na complete solution. Think of it as a\npartial configuration. So this is a partial\nconfiguration that is valid.",
    "start": "1182501",
    "end": "1192290"
  },
  {
    "text": "It's not a complete solution\nto the Sudoku puzzle. It's a partial configuration\nthat's valid in the sense that it satisfies all\nof the constraints.",
    "start": "1192290",
    "end": "1199520"
  },
  {
    "text": "You know, if I put\nanother eight in here it would not be a valid\npartial configuration. It would be partial,\nbut not valid.",
    "start": "1199520",
    "end": "1205970"
  },
  {
    "text": "Right? I need to grow this. I need to grow this\ninto a solution.",
    "start": "1205970",
    "end": "1211070"
  },
  {
    "text": "And when I say solution I\nmean all the constraints have to be satisfied. A configuration could\nbe invalid or valid.",
    "start": "1211070",
    "end": "1218800"
  },
  {
    "text": "A solution is always valid. All right? That's just terminology. And so I want to be\nable to look high up",
    "start": "1218800",
    "end": "1229190"
  },
  {
    "text": "and be able to truncate\nthe search and say, you know what, grid\nIJ equaling eight,",
    "start": "1229190",
    "end": "1235610"
  },
  {
    "text": "because I put an eight in\nthat sector which already had an eight in it, is something\nthat should not be explored.",
    "start": "1235610",
    "end": "1245220"
  },
  {
    "text": "And I don't have\nto worry about any of the branches that come here.",
    "start": "1245220",
    "end": "1250399"
  },
  {
    "text": "Because immediately I've\nviolated the constraint. So in general, I\ncan always check",
    "start": "1250400",
    "end": "1255920"
  },
  {
    "text": "whether partial configurations\nviolate the three constraints I have or not.",
    "start": "1255920",
    "end": "1261680"
  },
  {
    "text": "And that is what this\npiece of code does. And it's also straightforward.",
    "start": "1261680",
    "end": "1267030"
  },
  {
    "text": "It's perhaps even\nmore straightforward",
    "start": "1267030",
    "end": "1273110"
  },
  {
    "text": "than diagonal checking in\nthe case of eight queens. But all this does is\nuse the construct that",
    "start": "1273110",
    "end": "1280490"
  },
  {
    "text": "says I'm going to look at--  essentially this is\nsomething that is",
    "start": "1280490",
    "end": "1286685"
  },
  {
    "text": "list comprehensions in Python. The for comes after\nthis predicate here.",
    "start": "1286685",
    "end": "1292220"
  },
  {
    "text": "But effectively what you're\nsaying is for X in range nine, check that grid IX is\nnot equal to E. OK,",
    "start": "1292220",
    "end": "1299750"
  },
  {
    "text": "and you're just looking at E. So is valid, grid IJE takes the\ngrid which looks like this one,",
    "start": "1299750",
    "end": "1307610"
  },
  {
    "text": "let's say, and so it's got zeros\nin all of the empty places. And it's got a bunch of non-zero\nentries in all of the places",
    "start": "1307610",
    "end": "1315200"
  },
  {
    "text": "that you see here. And in addition, you\nhave perhaps zero, zero,",
    "start": "1315200",
    "end": "1320659"
  },
  {
    "text": "and let's call it one. And so this is I, and this\nis J, and that is E. OK.",
    "start": "1320660",
    "end": "1329070"
  },
  {
    "text": "And so let me write that\nout here, I, J, and E, where I is one--",
    "start": "1329070",
    "end": "1337620"
  },
  {
    "text": "zero, I'm sorry, I is zero,\nJ is zero, and E is 1. So that would mean\nputting a one up here",
    "start": "1337620",
    "end": "1345669"
  },
  {
    "text": "and that obviously is going to\nviolate one of our constraints. But that's fine. We're going to check that.",
    "start": "1345670",
    "end": "1351770"
  },
  {
    "text": "And it's essentially\ndoing incremental checking just like we did.",
    "start": "1351770",
    "end": "1357720"
  },
  {
    "text": "So it's not checking to see\nthat all of the existing grid",
    "start": "1357720",
    "end": "1364640"
  },
  {
    "text": "IJ values are\nconflicting or not. It's just saying I have an--",
    "start": "1364640",
    "end": "1372250"
  },
  {
    "text": "I'm going to be writing\nsomething into this grid, into an empty location. It happens to be zero,\nzero having the value one.",
    "start": "1372250",
    "end": "1379690"
  },
  {
    "text": "And I'm going to check\nwhether the introduction of a one into this square is\ngoing to cause problems or not.",
    "start": "1379690",
    "end": "1386650"
  },
  {
    "text": "That's all that it's doing-- incremental, just like\nwe had with eight queens.",
    "start": "1386650",
    "end": "1392380"
  },
  {
    "text": "And that check is\nrelatively easy to do, because I just need to go and\nI look at the row corresponding",
    "start": "1392380",
    "end": "1400900"
  },
  {
    "text": "to I, which in this\ncase is the top row. I look at the\ncolumn corresponding",
    "start": "1400900",
    "end": "1406690"
  },
  {
    "text": "to J, which is the\nleftmost column, and then I look at the\nsector corresponding",
    "start": "1406690",
    "end": "1411910"
  },
  {
    "text": "to zero, zero, which is\nthis top left sector. And I check to see for\neach of those three things,",
    "start": "1411910",
    "end": "1418210"
  },
  {
    "text": "whether there's\na problem or not. And the first two-- well actually, I have\na problem with the row.",
    "start": "1418210",
    "end": "1424180"
  },
  {
    "text": "And I would also have a\nproblem with the sector. I wouldn't have a\nproblem with the column.",
    "start": "1424180",
    "end": "1429620"
  },
  {
    "text": "But one of them is bad enough. And so I'm going to get a false. So row OK is going to be false.",
    "start": "1429620",
    "end": "1439280"
  },
  {
    "text": "And so I'm going to\nreturn false out here. All right, that make sense? So those are the three things.",
    "start": "1439280",
    "end": "1445520"
  },
  {
    "text": "And there's really\nnot that much here beyond taking those\nconstraints and codifying them.",
    "start": "1445520",
    "end": "1452800"
  },
  {
    "text": "Right. Any questions? Yeah. Fadi. AUDIENCE: What is\nthe all thing--",
    "start": "1452800",
    "end": "1458542"
  },
  {
    "text": "SRINI DEVADAS: Ah,\nthe all is essentially a Python built in\nfunction that is going to essentially say that--",
    "start": "1458542",
    "end": "1467120"
  },
  {
    "text": "it's going to-- it's\na conjunction that says I'm getting a bunch\nof Booleans that correspond",
    "start": "1467120",
    "end": "1475850"
  },
  {
    "text": "to the generation of\nthis list comprehension where E not equal to grid IX is\ngoing to give me true or false.",
    "start": "1475850",
    "end": "1485790"
  },
  {
    "text": "And I need all of those\nthings to be true. All right?",
    "start": "1485790",
    "end": "1491111"
  },
  {
    "text": "AUDIENCE: Okay, it's always\ngoing to be a Boolean there and that depends on\nwhether all of the elements",
    "start": "1491111",
    "end": "1497140"
  },
  {
    "text": "of the list itself are-- SRINI DEVADAS:\nIt's a conjunction. Yeah, that's right. So and, think of it as an and. Even if one of them is\nfalse, the and is false.",
    "start": "1497140",
    "end": "1503748"
  },
  {
    "text": "In order for the and to\nbe true, then all of them need to be true. All right? So it's just a convenient\nconstruct which",
    "start": "1503749",
    "end": "1510380"
  },
  {
    "text": "is applicable in sort of-- the perfect application\nis what you see here.",
    "start": "1510380",
    "end": "1517500"
  },
  {
    "text": "It's not the most\nsophisticated of applications, but it works very\nwell in this case.",
    "start": "1517500",
    "end": "1523520"
  },
  {
    "text": "Now for the sector, I\ncan't actually do that. And so there's a little bit\nmore work, because I can't--",
    "start": "1523520",
    "end": "1528914"
  },
  {
    "text": "this only works\nwhen-- and I could put a list comprehension\nin here like this",
    "start": "1528914",
    "end": "1534769"
  },
  {
    "text": "and generate all the Booleans. For the sector I end up having\nto do something a little bit different. I mean you could do things more\nconvoluted and use all in here",
    "start": "1534770",
    "end": "1542930"
  },
  {
    "text": "as well, but it's not worth it. OK, that make sense?",
    "start": "1542930",
    "end": "1547990"
  },
  {
    "text": "Good. So here's the core routine\nthat corresponds to the search.",
    "start": "1547990",
    "end": "1554289"
  },
  {
    "text": "And ignore this\nglobal variable here. I'll explain that in a minute. That's going to be our metric.",
    "start": "1554290",
    "end": "1560080"
  },
  {
    "text": "Backtracks is going to be\nour metric for computing performance. And it's going to be\nquite interesting. It's going to produce some\ninteresting results for us",
    "start": "1560080",
    "end": "1567840"
  },
  {
    "text": "when we run this on\nvarious different examples. But this core\nprocedure looks a lot",
    "start": "1567840",
    "end": "1575980"
  },
  {
    "text": "like the n-queens\nsearch in the sense that you have a for loop\nand a recursive call.",
    "start": "1575980",
    "end": "1582430"
  },
  {
    "text": "And in this case the\nfor loop is going",
    "start": "1582430",
    "end": "1589450"
  },
  {
    "text": "to be something that ranges\nthrough the different values, that you find a location that\nyou want to put something into,",
    "start": "1589450",
    "end": "1599230"
  },
  {
    "text": "which is the next empty location\nin your current configuration. And then you need to go put\nin one through nine in there.",
    "start": "1599230",
    "end": "1607270"
  },
  {
    "text": "And it's brutish. You're going to put\nin one and you're going to check conflicts. And then you'll put\nin two and you're",
    "start": "1607270",
    "end": "1613809"
  },
  {
    "text": "going to check conflicts. If you put in a one and\nyou don't get a conflict, then you get to recur. And you now move\ninto something that",
    "start": "1613810",
    "end": "1620679"
  },
  {
    "text": "is another partial\nconfiguration, potentially,",
    "start": "1620680",
    "end": "1625900"
  },
  {
    "text": "but obviously has\none location filled from the caller configuration.",
    "start": "1625900",
    "end": "1631990"
  },
  {
    "text": "And then you go and\nlook for the next cell. So it's certainly\npossible that I'd go--",
    "start": "1631990",
    "end": "1638140"
  },
  {
    "text": "when I put in a one here that\nfails, but if I put in a two here, it's not going to fail.",
    "start": "1638140",
    "end": "1644075"
  },
  {
    "text": "A two is not going to fail\nhere because, if I just look at those constraints, a two OK.",
    "start": "1644075",
    "end": "1649870"
  },
  {
    "text": "All right, so I'm going\nto put in a two here. And then I'm going to recur. And I'm going to go out here,\nand I'll try and put in a one",
    "start": "1649870",
    "end": "1656440"
  },
  {
    "text": "here. And a one is going to fail\nbecause of this and that. A two is going to\nfail because of that.",
    "start": "1656440",
    "end": "1661799"
  },
  {
    "text": "A three-- is a\nthree going to fail? No, not immediately.",
    "start": "1661800",
    "end": "1667190"
  },
  {
    "text": "So I could put in a three here. And then I recur and\ngo to the next one, and so on and so forth, right?",
    "start": "1667190",
    "end": "1672390"
  },
  {
    "text": "And for each of these\nthings obviously",
    "start": "1672390",
    "end": "1677790"
  },
  {
    "text": "I have to do a bunch\nof search underneath.",
    "start": "1677790",
    "end": "1682930"
  },
  {
    "text": "And you know thank goodness\nfor fast computers, right? Because otherwise,\nI mean God, I mean",
    "start": "1682930",
    "end": "1689672"
  },
  {
    "text": "can you imagine\nthe amount of paper we'd generate if you were doing\nthis and putting two and three and I want a new sheet\nof paper for the four,",
    "start": "1689672",
    "end": "1696830"
  },
  {
    "text": "et cetera, et cetera. I mean, we can count the\nnumber of backtracks. That's how many sheets\nof paper you'll need. OK.",
    "start": "1696830",
    "end": "1702020"
  },
  {
    "text": " So what you see here, again\nignore the backtracks,",
    "start": "1702020",
    "end": "1708785"
  },
  {
    "text": "I'll get to that in just\na second-- it's just a way of counting\nthe number of calls. And this thing here\nessentially says",
    "start": "1708785",
    "end": "1719570"
  },
  {
    "text": "I'm going to be returning-- as long as I get through\nand find a solution",
    "start": "1719570",
    "end": "1725550"
  },
  {
    "text": "I want to return true. So if solve Sudoku\ngrid IJ is true, then I'm going return through.",
    "start": "1725550",
    "end": "1731490"
  },
  {
    "text": "And then I'm going to pop\nup all the way to the top, assuming I got--",
    "start": "1731490",
    "end": "1736669"
  },
  {
    "text": "I go all the way down to the\nbottom and I get to the point where I have a solution\nthat returns true,",
    "start": "1736670",
    "end": "1742610"
  },
  {
    "text": "which is a completely\nfull configuration that returns true. Right? But if not, then I need to\ngo try the other combinations",
    "start": "1742610",
    "end": "1750590"
  },
  {
    "text": "and I'm only going to\nmake that recursive call if, obviously IJE,\ncorresponding to this,",
    "start": "1750590",
    "end": "1758830"
  },
  {
    "text": "is valid. And that checks the constraints. And the only other thing\nI have to worry about",
    "start": "1758830",
    "end": "1765320"
  },
  {
    "text": "is essentially something that\nsays reset your grid location",
    "start": "1765320",
    "end": "1772940"
  },
  {
    "text": "and make sure that\nyou're setting it back",
    "start": "1772940",
    "end": "1778970"
  },
  {
    "text": "to zero after you're done. Right, and so I've just\nmade a choice here, grid IJ equals E. If I look\nat this line of code here,",
    "start": "1778970",
    "end": "1788330"
  },
  {
    "text": "this is resetting the grid IJ\nequals E and saying it's empty. Because if I've\nfailed in all of these",
    "start": "1788330",
    "end": "1794960"
  },
  {
    "text": "and I haven't return true in\nall of these, then obviously I want to change this. And you could argue that\nthe next time around",
    "start": "1794960",
    "end": "1801320"
  },
  {
    "text": "if I and J are\nexactly the same-- because I and J\nare set up here--",
    "start": "1801320",
    "end": "1806760"
  },
  {
    "text": "then I'm going to overwrite\nthe E from a one to a two, et cetera, et cetera.",
    "start": "1806760",
    "end": "1812059"
  },
  {
    "text": "And so that is,\nin fact, correct. But I do need to reset\nthis outside of the loop,",
    "start": "1812060",
    "end": "1823149"
  },
  {
    "text": "if not inside of the loop. So it's not like I can get\naway with this line of code. In general, if you\never backtrack,",
    "start": "1823150",
    "end": "1830419"
  },
  {
    "text": "you have to go back\nand undo your decision. And you have to erase the tree. And that's essentially what that\ngrid IJ equaling zero is doing.",
    "start": "1830420",
    "end": "1838129"
  },
  {
    "text": "You just need to\nundo that decision. And you can do this\na few different ways.",
    "start": "1838130",
    "end": "1845690"
  },
  {
    "text": "But the biggest\nthing to remember when you do recursive\nsearch is to get your--",
    "start": "1845690",
    "end": "1851180"
  },
  {
    "text": "the undoing of your\ndecision, which is what we call\nbacktracking, to be correct. And if you ever leave a mess,\nthen you'd have a problem.",
    "start": "1851180",
    "end": "1860929"
  },
  {
    "text": " That's also true in the case\nof the N-queens problem.",
    "start": "1860930",
    "end": "1868190"
  },
  {
    "text": "So I'm going to go ahead and-- and this is just\na print routine. So this is not exactly the\nSudoku that I have up there,",
    "start": "1868190",
    "end": "1874926"
  },
  {
    "text": "the Sudoku puzzle\nthat I have up there, but it's kind of roughly\nsimilar in complexity.",
    "start": "1874926",
    "end": "1879950"
  },
  {
    "text": "And I could go ahead and\nrun the Sudoku program. And for each of those\ndifferent Sudoku problems,",
    "start": "1879950",
    "end": "1890600"
  },
  {
    "text": "it's producing solved puzzles. So this is a solved puzzle. You can check this\npuzzle just real quick",
    "start": "1890600",
    "end": "1897950"
  },
  {
    "text": "and you'll find that all of\nthe constraints are satisfied. And I'm going to explain\nbacktracks in a second.",
    "start": "1897950",
    "end": "1905070"
  },
  {
    "text": "So true says that\nthere's a solution. The number of\nbacktracks was 579. For the second puzzle, which\nwas a little bit harder,",
    "start": "1905070",
    "end": "1911780"
  },
  {
    "text": "the number of\nbacktracks was 6363. I'm sorry, this\nis just scrolling. And for the fourth\none, it was 335,000--",
    "start": "1911780",
    "end": "1920622"
  },
  {
    "text": "I'm sorry, for the third one. And for the fourth\none, was 9949.",
    "start": "1920622",
    "end": "1926470"
  },
  {
    "text": "These last two\npuzzles, hard and diff, there was a Finnish guy called--",
    "start": "1926470",
    "end": "1934820"
  },
  {
    "text": "there is a Finnish guy\ncalled Arto Inkala, who designs puzzles.",
    "start": "1934820",
    "end": "1940120"
  },
  {
    "text": "And he claimed that\nthis hard puzzle in 2006 was the hardest puzzle\never designed in Sudoku.",
    "start": "1940120",
    "end": "1947500"
  },
  {
    "text": "And then in 2010 he came up\nwith this more difficult puzzle, according to him, that\nrequired a lot of look",
    "start": "1947500",
    "end": "1952840"
  },
  {
    "text": "ahead from a standpoint\nof the human being. Like if we went back to\nwhat I said you can't quite",
    "start": "1952840",
    "end": "1959529"
  },
  {
    "text": "do this implication. You have to kind\nof make a guess. And then you have to go\nfurther and further down. And I think the claim was\nthat the hard puzzle required",
    "start": "1959530",
    "end": "1966820"
  },
  {
    "text": "like five levels of look ahead,\nand then the difficult puzzle required six levels\nof look ahead.",
    "start": "1966820",
    "end": "1972669"
  },
  {
    "text": "And obviously, given\nthat look ahead, this puzzle has to have an\ninitial configuration that's",
    "start": "1972670",
    "end": "1977770"
  },
  {
    "text": "solvable. So it's not a trivial\nthing to create puzzles.",
    "start": "1977770",
    "end": "1982990"
  },
  {
    "text": "But now people are\nusing computer programs and doing things\nlike we're doing here to find difficult puzzles.",
    "start": "1982990",
    "end": "1989620"
  },
  {
    "text": "And interestingly\nenough, the 2006 puzzle, at least for this\nnaive computer program,",
    "start": "1989620",
    "end": "1995120"
  },
  {
    "text": "takes 335,000 backtracks-- the one that was supposedly\nmade more difficult",
    "start": "1995120",
    "end": "2002400"
  },
  {
    "text": "in 2010, which now takes\nabout 10,000 backtracks.",
    "start": "2002400",
    "end": "2007620"
  },
  {
    "text": "So obviously there's a\ndifference between the way this program behaves and\nhow you or I would behave,",
    "start": "2007620",
    "end": "2014709"
  },
  {
    "text": "or rather you would behave if\nyou tried to solve this puzzle. ",
    "start": "2014709",
    "end": "2020300"
  },
  {
    "text": "So let me just\nexplain backtracks, and then I'll stop\nto see if there's any questions about the code.",
    "start": "2020300",
    "end": "2026600"
  },
  {
    "text": "So when you make\nrecursive calls and you want to count the number of\nrecursive procedure calls--",
    "start": "2026600",
    "end": "2033370"
  },
  {
    "text": "you want to do\nsomething inside each of the recursive\nprocedures and you want to sort of cumulatively\nor collectively keep",
    "start": "2033370",
    "end": "2040389"
  },
  {
    "text": "some information, one\nway of certainly doing it is to pass arguments. And then you have to\nreturn the argument,",
    "start": "2040390",
    "end": "2046966"
  },
  {
    "text": "because when you\npass an argument and you modify it\nit's not like that",
    "start": "2046966",
    "end": "2053658"
  },
  {
    "text": "is going to be--\nthat modification, if it's just an integer, if\nit's not a mutable variable,",
    "start": "2053659",
    "end": "2063100"
  },
  {
    "text": "it's not going to be seen\nby the caller procedure. And so when you do recursion and\nyou want to do some counting,",
    "start": "2063100",
    "end": "2070059"
  },
  {
    "text": "the notion of global variables\nis a convenient construct to have. And global variables\nessentially say",
    "start": "2070060",
    "end": "2075610"
  },
  {
    "text": "that there's exactly one\nmemory location associated with this variable. And we're going to\ngo ahead and, anytime",
    "start": "2075610",
    "end": "2082600"
  },
  {
    "text": "we are mutating this variable\nand you're modifying it, you're going to see the\neffect of that in that memory",
    "start": "2082600",
    "end": "2087819"
  },
  {
    "text": "location. So what you have up here is,\nI set backtracks to be zero.",
    "start": "2087820",
    "end": "2094580"
  },
  {
    "text": "OK and that's my\nglobal variable. The fact that I put\nbacktracks equals zero here doesn't make this a\nglobal variable just yet.",
    "start": "2094580",
    "end": "2101260"
  },
  {
    "text": "The fact that I have global\nbacktracks inside of solve Sudoku now says that there's\na single copy of backtracks,",
    "start": "2101260",
    "end": "2108220"
  },
  {
    "text": "and it doesn't\nmatter whether I'm at the top level of recursion or\nthe bottom level of recursion.",
    "start": "2108220",
    "end": "2113470"
  },
  {
    "text": "It's just that memory location\ncorresponding to backtracks-- the name backtracks, that\nis getting incremented.",
    "start": "2113470",
    "end": "2120100"
  },
  {
    "text": "And this could be\n10 levels deep. It could be 40 levels deep,\ngiven that I've called things",
    "start": "2120100",
    "end": "2126010"
  },
  {
    "text": "40 levels in. But it's just the\none backtracks. So as you can see,\nwhat backtracks does",
    "start": "2126010",
    "end": "2131110"
  },
  {
    "text": "is anytime you have\na valid location and you've gone ahead and--",
    "start": "2131110",
    "end": "2136300"
  },
  {
    "text": " essentially you've failed.",
    "start": "2136300",
    "end": "2143680"
  },
  {
    "text": "The reason it's\nout here is solve Sudoku did not return true. When solved Sudoku\nactually returns false,",
    "start": "2143680",
    "end": "2149670"
  },
  {
    "text": "that's when you come out and\nyou increment backtracks.",
    "start": "2149670",
    "end": "2156530"
  },
  {
    "text": "So it meant that you\nhad to do some undoing. When you set grid IJ to be\nzero, that's when you're",
    "start": "2156530",
    "end": "2162460"
  },
  {
    "text": "undoing your guess, right? So backtracks makes sense\nfrom a standpoint of I",
    "start": "2162460",
    "end": "2168670"
  },
  {
    "text": "need to backtrack and go in\na different fork in the road. And so that's why I have\nbacktracks plus equals one",
    "start": "2168670",
    "end": "2175900"
  },
  {
    "text": "when I'm undoing my\ndecision that I made. So this kind of\ngives you a sense for how many wrong guesses\nthat this program did.",
    "start": "2175900",
    "end": "2184339"
  },
  {
    "text": "And as you can imagine,\nthe more the number of wrong guesses, the more\nthe computation and the longer",
    "start": "2184339",
    "end": "2189339"
  },
  {
    "text": "it takes. So it is definitely a\nproxy for performance. But it's a platform\nindependent proxy",
    "start": "2189340",
    "end": "2195780"
  },
  {
    "text": "that's more algorithm\nrelated as opposed to the speed of the computer. Because if this computer\nwere twice as fast,",
    "start": "2195780",
    "end": "2201549"
  },
  {
    "text": "I mean I'd just see\nthings running faster even though the algorithm\nisn't any better.",
    "start": "2201550",
    "end": "2206859"
  },
  {
    "text": "Right? That make sense? So it's a very\nsimple use of global. You don't want to\nuse global variables",
    "start": "2206860",
    "end": "2213190"
  },
  {
    "text": "except in certain\nconstrained settings. This is a fine use\nof global variables.",
    "start": "2213190",
    "end": "2218660"
  },
  {
    "text": "Cool, good. So any questions\nabout this code? ",
    "start": "2218660",
    "end": "2224300"
  },
  {
    "text": "So what I've done here is\nI just have the naive code. And I happen to have different\nnumbers of backtracks because I have different inputs.",
    "start": "2224300",
    "end": "2230620"
  },
  {
    "text": "Unlike the N-queens\nproblem, which is kind of boring in some sense,\nbecause once you've solved it",
    "start": "2230620",
    "end": "2236579"
  },
  {
    "text": "there's nothing left,\nin the case of Sudoku, I could change my input,\nmy starting point,",
    "start": "2236580",
    "end": "2242090"
  },
  {
    "text": "and give you different problems. And so the reason we had many\ndifferent kinds of backtracks",
    "start": "2242090",
    "end": "2248930"
  },
  {
    "text": "was simply because-- numbers of backtracks\nwas because we had four different inputs\nto the Sudoku puzzle.",
    "start": "2248930",
    "end": "2254850"
  },
  {
    "text": "All right, so are we good here? People understand this code? You're going to have\nto modify it, right?",
    "start": "2254850",
    "end": "2261210"
  },
  {
    "text": "Not necessarily this code,\ndepending on the exercise you do, but this is\ncertainly something",
    "start": "2261210",
    "end": "2266460"
  },
  {
    "text": "that hopefully you feel\ncomfortable with potentially modifying.",
    "start": "2266460",
    "end": "2271530"
  },
  {
    "text": "All right so what I'm\ngoing to do now is first I'm going to go\nahead and show you",
    "start": "2271530",
    "end": "2280740"
  },
  {
    "text": "some code that corresponds\nto something that is the original\ncode, except that I'm",
    "start": "2280740",
    "end": "2287210"
  },
  {
    "text": "going to add some smarts to it. What I'm going to do is,\nat any given point of time,",
    "start": "2287210",
    "end": "2293050"
  },
  {
    "text": "I'm going to try to do some\nimplications without actually doing any guessing.",
    "start": "2293050",
    "end": "2299040"
  },
  {
    "text": "So the way I'm going to\nintegrate the human approach into this exhaustive search\napproach at top level,",
    "start": "2299040",
    "end": "2305819"
  },
  {
    "text": "is I'm going to take\nmy configuration, and before I do an\narbitrary guess, before I call find\nnext cell, or maybe I",
    "start": "2305820",
    "end": "2313079"
  },
  {
    "text": "have a particular location\nhere that I'm eventually going to guess. So I do know that.",
    "start": "2313080",
    "end": "2319420"
  },
  {
    "text": "But before that, I'm\ngoing to try and see whether the current grid values\nimply anything or not by using",
    "start": "2319420",
    "end": "2326640"
  },
  {
    "text": "the rules in exactly the same\nway or roughly, I should say, the same way that we did right\nwhen we began the lecture.",
    "start": "2326640",
    "end": "2333420"
  },
  {
    "text": "All right? So we're going to try\nand use some implications and maybe imply the eight\nor imply something different",
    "start": "2333420",
    "end": "2339060"
  },
  {
    "text": "associated with\nsome other location. So this is not a\nbacktrack, in the sense",
    "start": "2339060",
    "end": "2345660"
  },
  {
    "text": "that this is going to be-- I can take this to\nthe bank assuming I haven't done any guessing\nup until this point,",
    "start": "2345660",
    "end": "2352180"
  },
  {
    "text": "and assuming that the\ninitial configuration that was given to me corresponds\nto a valid solution.",
    "start": "2352180",
    "end": "2357839"
  },
  {
    "text": "But I'm actually\ngoing to do this at different points\nin the search.",
    "start": "2357840",
    "end": "2363220"
  },
  {
    "text": "So it might be that I'm just\ngoing to arbitrarily choose a two here. And so I go through and\nI'm going to take this,",
    "start": "2363220",
    "end": "2372330"
  },
  {
    "text": "for argument's sake, and\nI'm going to put a two down. And then I have not the initial\npuzzle that was given to me,",
    "start": "2372330",
    "end": "2378480"
  },
  {
    "text": "but something that I've\nkind of hacked in the sense that I've stuck a two in there. And that may not\ncorrespond to the solution,",
    "start": "2378480",
    "end": "2384660"
  },
  {
    "text": "because I just sort of\nput the two down there. But now given the two,\nI'm going to try and do some implications.",
    "start": "2384660",
    "end": "2391530"
  },
  {
    "text": "And I'm going to try\nand see whether there's things that are valid or not. The important thing is that,\nbecause I put a two down",
    "start": "2391530",
    "end": "2400170"
  },
  {
    "text": "in an arbitrary way\nwithout using implications, the two could have\nbeen incorrect. I mean that's exactly why we\nhave all of these backtracks,",
    "start": "2400170",
    "end": "2407220"
  },
  {
    "text": "correct? Because I've put down\nincorrect guesses and then I've had to backtrack. So once I put a\ntwo down and then",
    "start": "2407220",
    "end": "2414450"
  },
  {
    "text": "I fill in a bunch of\nthings with implications. You know, I may even\nput an eight up there.",
    "start": "2414450",
    "end": "2420940"
  },
  {
    "text": "I may put a six out here,\net cetera, et cetera. And I go deep in and\nthen I realize, ooh,",
    "start": "2420940",
    "end": "2427240"
  },
  {
    "text": "you know that two was a mistake. The two really shouldn't\nhave been in there.",
    "start": "2427240",
    "end": "2432780"
  },
  {
    "text": "Now I have to clean\nup everything. I have to clean up all of the\nguesses that came after two",
    "start": "2432780",
    "end": "2438599"
  },
  {
    "text": "and all of the implications\nthat came after two. All right? That's the biggest thing\nthat I want you to take away",
    "start": "2438600",
    "end": "2445289"
  },
  {
    "text": "from this integration\nof implications with exhaustive search. It's clean up your mess,\nclean up your bad guesses.",
    "start": "2445290",
    "end": "2454680"
  },
  {
    "text": "The fact that-- you say, oh but\nthe implication was something that was deterministic.",
    "start": "2454680",
    "end": "2459840"
  },
  {
    "text": "It was exactly\nfollowing these rules. No, no, no, no, no. It was deterministic.",
    "start": "2459840",
    "end": "2466110"
  },
  {
    "text": "All of that is true. But you made a wrong guess. And therefore everything\nthat you did from then on out",
    "start": "2466110",
    "end": "2471539"
  },
  {
    "text": "is in question. And if you, in fact,\nfind a contradiction, you've got to go all the way\nback and clean up everything.",
    "start": "2471540",
    "end": "2478589"
  },
  {
    "text": "And then go back and erase\neverything that you had. And then go take this two and\nmaybe turn it into a three",
    "start": "2478590",
    "end": "2484299"
  },
  {
    "text": "or what have you. All right? So before I show you the code\nthat does the implications--",
    "start": "2484300",
    "end": "2490574"
  },
  {
    "text": "and you can kind of\nimagine that there's many ways that we\ncould do implications, we did that manually. I want to show you this part\nlooks exactly the same as",
    "start": "2490574",
    "end": "2498450"
  },
  {
    "text": "before, no change. Find next cell to grid\nis exactly the same. Is valid is exactly\nthe same, right?",
    "start": "2498450",
    "end": "2506580"
  },
  {
    "text": "There's a large make\nimplications procedure and an undo implications\nthat I'll get to in a second. But this part here looks\nalmost exactly the same,",
    "start": "2506580",
    "end": "2515340"
  },
  {
    "text": "except that I've\nreplaced grid IJ equals E with make implications.",
    "start": "2515340",
    "end": "2521280"
  },
  {
    "text": " And this is something\nthat not only is--",
    "start": "2521280",
    "end": "2527510"
  },
  {
    "text": "what make implications is going\nto do is it's going to set-- whatever I had up here, it's\ngoing to set two up here.",
    "start": "2527510",
    "end": "2534140"
  },
  {
    "text": "And on top of that it's going\nto go use these things to go fill in a bunch of\ndifferent values in here.",
    "start": "2534140",
    "end": "2541340"
  },
  {
    "text": "So it's one extra step. This is the integration\nthat I talked about. So the idea is that--",
    "start": "2541340",
    "end": "2547550"
  },
  {
    "text": "now you can do this for\nthe original as well. But the point is, once\nyou've made a guess,",
    "start": "2547550",
    "end": "2554960"
  },
  {
    "text": "you always want to check to\nsee whether that guess does certain implications or not. Right?",
    "start": "2554960",
    "end": "2560060"
  },
  {
    "text": "I mean that's the whole\npurpose of this exercise. Even humans do this in the\nvery difficult puzzles. They make a guess and then\nthey see whether there's",
    "start": "2560060",
    "end": "2566310"
  },
  {
    "text": "some implication or not. And maybe there's\na contradiction and they have to go back and\nundo all of that damage they",
    "start": "2566310",
    "end": "2572120"
  },
  {
    "text": "caused and change the guess. But in general, when\nyou have a configuration",
    "start": "2572120",
    "end": "2577720"
  },
  {
    "text": "and you add to it,\nit's possible suddenly that there will be other things\nthat are implied by the one",
    "start": "2577720",
    "end": "2583340"
  },
  {
    "text": "change that you made to it. So grid IJ equals E\nin the original code",
    "start": "2583340",
    "end": "2588530"
  },
  {
    "text": "got replaced with this\nprocedure that we'll talk about, which I don't want to spend\na whole lot of time on,",
    "start": "2588530",
    "end": "2593660"
  },
  {
    "text": "but it's essentially\nsomething in terms of details. But it's essentially\nsomething that",
    "start": "2593660",
    "end": "2599060"
  },
  {
    "text": "puts in different values\nin the different locations. And grid IJ equal zero is\nreplaced by undo implications,",
    "start": "2599060",
    "end": "2606080"
  },
  {
    "text": "which is cleaning up all\nof the incorrect guesses and incorrect implications.",
    "start": "2606080",
    "end": "2612392"
  },
  {
    "text": "And the reason the\nimplications are incorrect-- because it came\nfrom an incorrect guess.",
    "start": "2612392",
    "end": "2618890"
  },
  {
    "text": "And so that's it. Undo implications is trivial. It just sets all of\nthe implications,",
    "start": "2618890",
    "end": "2625309"
  },
  {
    "text": "and I'll tell you what the\ndata structure is in a second, but think of it as making\neverything zero, going back",
    "start": "2625310",
    "end": "2631519"
  },
  {
    "text": "to a clean slate. I mean clean slate\nin the sense that all",
    "start": "2631520",
    "end": "2637940"
  },
  {
    "text": "of the incorrect implications\nand guesses are cleaned up. So that's all\nthere is over here.",
    "start": "2637940",
    "end": "2644070"
  },
  {
    "text": "Make implications is-- you\ncan do anything you want. You can do vertical scans.",
    "start": "2644070",
    "end": "2650060"
  },
  {
    "text": "You can do horizontal scans. You can-- if you go look\nat Sudoku literature and you look at ways\nof playing Sudoku,",
    "start": "2650060",
    "end": "2657859"
  },
  {
    "text": "there's books written on\nhow you can become a better Sudoku puzzle solver. And you could take that,\nand you could code that in.",
    "start": "2657860",
    "end": "2664910"
  },
  {
    "text": "And you could replace\nmake implications with those fancy techniques\nthat are up there, right? But we've established I'm lazy.",
    "start": "2664910",
    "end": "2671030"
  },
  {
    "text": "And so I only write a\ncertain amount of code, and then I get tired. And so I wrote about 20\nlines of code corresponding",
    "start": "2671030",
    "end": "2678350"
  },
  {
    "text": "to a fairly straightforward\nimplication just to give you a sense of\nhow this would work.",
    "start": "2678350",
    "end": "2684800"
  },
  {
    "text": "But the most important\nthing in here is not the details\nof make implications. And I'll give you some sense\nof that before we're done.",
    "start": "2684800",
    "end": "2691280"
  },
  {
    "text": "But it's really the structure\nthat is the most important. The fact that I've done make\nimplications here and undo",
    "start": "2691280",
    "end": "2698270"
  },
  {
    "text": "implications here is the\ncorrectness requirement that is important to\nexhaustive search.",
    "start": "2698270",
    "end": "2707230"
  },
  {
    "text": "So if I do this and I do\nkind of the implications that we had right at\nthe beginning of lecture",
    "start": "2707230",
    "end": "2713100"
  },
  {
    "text": "and I go ahead and run\nit, just take a look. I won't write this\nout, but remember",
    "start": "2713100",
    "end": "2719079"
  },
  {
    "text": "what the backtracks are for\nthese things, roughly speaking, for the original Sudoku. Oh, I'm sorry, I need\nto go to the shell.",
    "start": "2719080",
    "end": "2727750"
  },
  {
    "text": "And it was 335,000-- what is it-- 579, 6363,\n335,000, and 9949.",
    "start": "2727750",
    "end": "2737140"
  },
  {
    "text": "So if I go off and I\nrun Sudoku optimized, which is doing these\nimplications like I describe,",
    "start": "2737140",
    "end": "2745390"
  },
  {
    "text": "and I go ahead and run that. The first one goes from\n579 to 33 backtracks.",
    "start": "2745390",
    "end": "2751620"
  },
  {
    "text": "OK so that's pretty good. Because it's done a\nbunch of implications. It's still-- it's\nnot super smart.",
    "start": "2751620",
    "end": "2757720"
  },
  {
    "text": "I mean that is a simple enough\npuzzle that a human being would not backtrack. I mean a human being would not\nbacktrack in that first puzzle,",
    "start": "2757720",
    "end": "2764589"
  },
  {
    "text": "right? And you should check that. And-- oh, this thing\nfinished in the middle.",
    "start": "2764590",
    "end": "2770020"
  },
  {
    "text": "So it went to 33. ",
    "start": "2770020",
    "end": "2775394"
  },
  {
    "text": "Oh, only had three of them? What do I have\nhere in Sudoku Opt?",
    "start": "2775394",
    "end": "2781940"
  },
  {
    "start": "2781940",
    "end": "2787510"
  },
  {
    "text": "Oh I see. I only ran-- oh wow. OK so I ran inp2,\nhard, and difficult.",
    "start": "2787510",
    "end": "2795960"
  },
  {
    "text": "So it really went\nfrom 6363 to 33.",
    "start": "2795960",
    "end": "2802099"
  },
  {
    "text": "It went from 335,000 to 24,000. And then it went to--",
    "start": "2802100",
    "end": "2807880"
  },
  {
    "text": "7-- went from 9949 to 726. The details aren't-- the\nnumbers aren't super important.",
    "start": "2807880",
    "end": "2814310"
  },
  {
    "text": "Don't hang your hat on them. Obviously if I change the\ncode those numbers change. But you can see that there\nare substantial gains",
    "start": "2814310",
    "end": "2820280"
  },
  {
    "text": "to be had in terms\nof implications not making these dumb guesses\nthat clearly are incorrect.",
    "start": "2820280",
    "end": "2828090"
  },
  {
    "text": "And you can fill\nin-- if you take away some of these\nempty squares, then the depth of the recursion\nthat you have to go through",
    "start": "2828090",
    "end": "2835790"
  },
  {
    "text": "becomes substantially smaller. And that's why your\nbacktracking is simpler.",
    "start": "2835790",
    "end": "2841430"
  },
  {
    "text": "So I want to leave you\nwith a couple of things. I want to give you some sense\nfor what particular implication",
    "start": "2841430",
    "end": "2848750"
  },
  {
    "text": "that-- a strategy that we used. And so I'll just put up make\nimplications and give you",
    "start": "2848750",
    "end": "2855380"
  },
  {
    "text": "some sense for how this works. So the basic idea is\nthat what I'm doing here",
    "start": "2855380",
    "end": "2861500"
  },
  {
    "text": "is I'm looking at a\nparticular sector. And I've created a data\nstructure that says the missing",
    "start": "2861500",
    "end": "2870079"
  },
  {
    "text": "elements here-- if I\nput a two in here-- let's just say I go ahead\nand put a two in here. The missing elements here are--",
    "start": "2870080",
    "end": "2876520"
  },
  {
    "text": "the set is three, four,\nfive, six, seven, and nine.",
    "start": "2876520",
    "end": "2884610"
  },
  {
    "text": "So this could be three, four,\nfive, six, seven, eight, nine. This could be three, four,\nfive, six, seven, eight, nine.",
    "start": "2884610",
    "end": "2890480"
  },
  {
    "text": "This is quite dumb right now. But each of these\ndifferent squares could be three, four, five,\nsix, seven, eight, nine.",
    "start": "2890480",
    "end": "2896099"
  },
  {
    "text": "OK? Possibly, all right. And then I say-- so that's\nthe first part of the code.",
    "start": "2896100",
    "end": "2901430"
  },
  {
    "text": "And then I say I'm going\nto attach, essentially, a copy of the set to each\nof the missing squares.",
    "start": "2901430",
    "end": "2907490"
  },
  {
    "text": "And then I'm going to go through\nand find the missing elements.",
    "start": "2907490",
    "end": "2914060"
  },
  {
    "text": "So this thing here can't be a\nnine because I see a nine here. It can't be a three, right?",
    "start": "2914060",
    "end": "2920660"
  },
  {
    "text": "And so I can take\nthis thing here. And I take away the nine. And I take away the three.",
    "start": "2920660",
    "end": "2926730"
  },
  {
    "text": "And I can do the\nsame thing with that. Obviously I can\nalso take away the-- the eight isn't there, but\nI could take away the seven,",
    "start": "2926730",
    "end": "2933350"
  },
  {
    "text": "and I could away the three,\nthe six, and the one. So I go ahead and I\ntake away the six. And the three was\nalready taken out.",
    "start": "2933350",
    "end": "2940160"
  },
  {
    "text": "And I keep doing this. And I try and shrink the\npossibilities corresponding to this particular\nsquare that has the set",
    "start": "2940160",
    "end": "2946790"
  },
  {
    "text": "of different possibilities. And if I ever-- so when can I make\nan implication?",
    "start": "2946790",
    "end": "2952310"
  },
  {
    "text": "What is the condition\nthat is going to let me make an implication\nwhen I take this set of numbers",
    "start": "2952310",
    "end": "2959300"
  },
  {
    "text": "and I start shrinking them down\nusing these rules that I have over on the right\nhand side there?",
    "start": "2959300",
    "end": "2965670"
  },
  {
    "text": "What is an implication? What does that correspond\nto in relation to the size-- in relation to the set?",
    "start": "2965670",
    "end": "2971580"
  },
  {
    "text": "Right, yeah, behind you, Ryan. AUDIENCE: So if you\nonly have one element. SRINI DEVADAS:\nThat's exactly right.",
    "start": "2971580",
    "end": "2976650"
  },
  {
    "text": "If you have one\nelement in the set, then that's an implication. If I have two\nelements in the set,",
    "start": "2976650",
    "end": "2981680"
  },
  {
    "text": "it's not an implication,\nbecause I don't quite know what to do there. But if I had one element in\nthe set, that's an implication.",
    "start": "2981680",
    "end": "2986990"
  },
  {
    "text": "And that's it. That's-- you know this\ncode is not complicated. Check if the vset is\na singleton, which is a single element.",
    "start": "2986990",
    "end": "2992690"
  },
  {
    "text": "And I'm going to\ngo ahead and append to this implication, which is\na very straightforward data structure that says this\nis the grid location I,",
    "start": "2992690",
    "end": "3000160"
  },
  {
    "text": "grid location J, and this is the\nvalue that was implied by that. So not only do I have IJE,\nwhich is the original guess",
    "start": "3000160",
    "end": "3009940"
  },
  {
    "text": "that I have, I also have kind\nof a bunch of other tuples corresponding to\ndifferent coordinates,",
    "start": "3009940",
    "end": "3017000"
  },
  {
    "text": "you know, KL coordinates\nand the value, call it V, associated with that.",
    "start": "3017000",
    "end": "3022460"
  },
  {
    "text": "And these are all the\ndifferent implications that I can collect\ntogether in this list. And I can just add those\nthings into make implications.",
    "start": "3022460",
    "end": "3029349"
  },
  {
    "text": "And then I keep going. And then if I ever realize\nI've made a bad guess, I have to undo everything by\nzeroing them all out, which",
    "start": "3029350",
    "end": "3036730"
  },
  {
    "text": "is making them all empty. So one thing that\nthis code does,",
    "start": "3036730",
    "end": "3041890"
  },
  {
    "text": "and you can take a look at it. And I would encourage you to\ndo the first exercise, which",
    "start": "3041890",
    "end": "3048070"
  },
  {
    "text": "is taking these implications\nand making them a little more powerful by adding three or\nfour lines of code to this code.",
    "start": "3048070",
    "end": "3055960"
  },
  {
    "text": "And exactly what you have\nto do in this exercise, and I'll show you what\nthe results should be in just a minute.",
    "start": "3055960",
    "end": "3062810"
  },
  {
    "text": "But let me just spend 30\nseconds explaining to you how you could do a\nlittle bit better than what this code does.",
    "start": "3062810",
    "end": "3069829"
  },
  {
    "text": "So what I've described to\nyou really is get this set, imply, get a\nsingleton, et cetera.",
    "start": "3069830",
    "end": "3077200"
  },
  {
    "text": "And then you can\ndo this, obviously, for each of these sectors. And that's what this does. You had a for loop\nup there that does it",
    "start": "3077200",
    "end": "3083606"
  },
  {
    "text": "for each of the sectors. Grab a sector and\ngo ahead and do an implication for that sector.",
    "start": "3083606",
    "end": "3088990"
  },
  {
    "text": "Now this code just runs\nthrough the sectors, you know, One, two, three, four,\nfive, six, seven, eight, nine",
    "start": "3088990",
    "end": "3094869"
  },
  {
    "text": "and then discovers\nthe implications if they exist, adds\nthem to the imply list,",
    "start": "3094870",
    "end": "3099880"
  },
  {
    "text": "and then throws up its hands\nand says I'm tired, I'm done, I don't want to do any more. What could you do that's\nan improvement, given",
    "start": "3099880",
    "end": "3107170"
  },
  {
    "text": "what we have described and\nwhat I've told you so far. What is an incremental\nimprovement",
    "start": "3107170",
    "end": "3112750"
  },
  {
    "text": "over going over\nthese sectors once and doing these implications\nand storing them and moving on?",
    "start": "3112750",
    "end": "3119102"
  },
  {
    "text": "What is an incremental\nimprovement? Ganatra? AUDIENCE: Look, once we\nget all the singletons,",
    "start": "3119102",
    "end": "3126160"
  },
  {
    "text": "we can set those as-- since\nthose are determined, like, deterministic, I think\nthat we could set those",
    "start": "3126160",
    "end": "3131568"
  },
  {
    "text": "into the original grid and\nsay that's our new base grid and run through it again. SRINI DEVADAS: Run\nthrough it again, exactly.",
    "start": "3131568",
    "end": "3136958"
  },
  {
    "text": "You don't have to stop. There's no reason to\nstop if you're implying. Once you've put\nsomething in here",
    "start": "3136958",
    "end": "3142119"
  },
  {
    "text": "and you've gone through one,\ntwo, three, four, five, six, seven, eight, nine,\ngot the implications, you can put them into the grid\nand then start over again.",
    "start": "3142120",
    "end": "3148590"
  },
  {
    "text": "One, two, three, four,\nthat's what humans do. Right? When humans put something\nin, then they don't stop. They just keep going\nuntil they get to the end.",
    "start": "3148590",
    "end": "3156160"
  },
  {
    "text": "Now of course all of\nthese implications could be incorrect if that\nfirst guess was incorrect.",
    "start": "3156160",
    "end": "3161920"
  },
  {
    "text": "There's no change there. But there's nothing\nthat's stopping you from turning this little thing--\nthere's a loop here that simply",
    "start": "3161920",
    "end": "3170050"
  },
  {
    "text": "corresponds to making a\npass over the sectors, but you can put this\nwhole thing into a loop.",
    "start": "3170050",
    "end": "3175210"
  },
  {
    "text": "And you keep going\nthrough the loop until you basically\nhave no change that happens in your grid.",
    "start": "3175210",
    "end": "3182080"
  },
  {
    "text": "OK so that's four lines of code. And I'm not going to show you\nwhat those four lines of code look like, so close\nyour eyes in case you--",
    "start": "3182080",
    "end": "3187951"
  },
  {
    "text": " And this is the\nsolution to that code.",
    "start": "3187951",
    "end": "3194010"
  },
  {
    "text": "And I'm going to go\nahead and run it. And you saw what those\nnumbers were with respect",
    "start": "3194010",
    "end": "3199260"
  },
  {
    "text": "to the backtracks. But if you do those\nextra implications,",
    "start": "3199260",
    "end": "3205530"
  },
  {
    "text": "the 33 went down to\ntwo for that example. So this is not optimal,\nbecause I wanted one.",
    "start": "3205530",
    "end": "3211500"
  },
  {
    "text": "So if I wanted to be\na human being that took this easy puzzle\nand just sort of went all the way without making\nany incorrect guesses,",
    "start": "3211500",
    "end": "3218220"
  },
  {
    "text": "I would be doing implications. And that would go all the way. And I got close with two.",
    "start": "3218220",
    "end": "3224130"
  },
  {
    "text": "And I didn't print out\nthe intermediate ones, but the 24,000 went\ndown to 11,000.",
    "start": "3224130",
    "end": "3230082"
  },
  {
    "text": "And I forget what\nthe last one was. It went down. So with four lines of code\nand with the optimized code",
    "start": "3230082",
    "end": "3236970"
  },
  {
    "text": "that I'll put up you should\nbe able to get those numbers in your first exercise. Or you could solve diagonal\nSudoku or even Sudoku.",
    "start": "3236970",
    "end": "3244785"
  },
  {
    "text": "Or you could spend the\nrest of the day coding whatever you want, whatever. All right, see you next time.",
    "start": "3244785",
    "end": "3250920"
  },
  {
    "start": "3250920",
    "end": "3262099"
  }
]