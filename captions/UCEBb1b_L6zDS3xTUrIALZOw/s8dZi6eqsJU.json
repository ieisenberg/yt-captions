[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "start": "0",
    "end": "50"
  },
  {
    "text": "The following content is\nprovided under a Creative",
    "start": "50",
    "end": "2500"
  },
  {
    "text": "Commons license.",
    "start": "2500",
    "end": "4010"
  },
  {
    "text": "Your support will help\nMIT OpenCourseWare",
    "start": "4010",
    "end": "6350"
  },
  {
    "text": "continue to offer high quality\neducational resources for free.",
    "start": "6350",
    "end": "10719"
  },
  {
    "text": "To make a donation or\nview additional materials",
    "start": "10720",
    "end": "13330"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare",
    "start": "13330",
    "end": "17202"
  },
  {
    "text": "at ocw.mit.edu.",
    "start": "17202",
    "end": "17827"
  },
  {
    "start": "17827",
    "end": "21630"
  },
  {
    "start": "20000",
    "end": "60000"
  },
  {
    "text": "ARVIND THIAGARAJAN: So I'm\nArvind and this is Micah.",
    "start": "21630",
    "end": "25903"
  },
  {
    "text": "And we worked together on a\nframework for flexible stream",
    "start": "25903",
    "end": "29290"
  },
  {
    "text": "processing on the cell.",
    "start": "29290",
    "end": "31530"
  },
  {
    "text": "So we were also oriented\ntowards an application which is,",
    "start": "31530",
    "end": "33999"
  },
  {
    "text": "in this case, a software radio.",
    "start": "33999",
    "end": "35290"
  },
  {
    "text": "And we used this\napplication as a case study.",
    "start": "35290",
    "end": "37622"
  },
  {
    "text": "Where is the mic?",
    "start": "37622",
    "end": "38330"
  },
  {
    "start": "38330",
    "end": "41390"
  },
  {
    "text": "I'll try and speak\nas loud as I can.",
    "start": "41390",
    "end": "43230"
  },
  {
    "text": "So our project was about\nflexible stream processing",
    "start": "43230",
    "end": "46710"
  },
  {
    "text": "framework for the cell.",
    "start": "46710",
    "end": "48030"
  },
  {
    "text": "And we used the software\nradios as a case study,",
    "start": "48030",
    "end": "50870"
  },
  {
    "text": "essentially, of an\napplication you could",
    "start": "50870",
    "end": "52620"
  },
  {
    "text": "build using this framework.",
    "start": "52620",
    "end": "54480"
  },
  {
    "text": "The motivation for our\nproject is essentially",
    "start": "54480",
    "end": "57989"
  },
  {
    "text": "what we've been\ndiscussing in class.",
    "start": "57990",
    "end": "59490"
  },
  {
    "text": "It's been reiterated.",
    "start": "59490",
    "end": "60380"
  },
  {
    "start": "60000",
    "end": "100000"
  },
  {
    "text": "The cell isn't easy to program.",
    "start": "60380",
    "end": "61940"
  },
  {
    "text": "There's no shared memory.",
    "start": "61940",
    "end": "63530"
  },
  {
    "text": "There's just message passing,\nwhich is quite messy.",
    "start": "63530",
    "end": "66541"
  },
  {
    "text": "You have to explicitly\nparallelize your programs",
    "start": "66541",
    "end": "68540"
  },
  {
    "text": "if you want to write them\nas, say, custom C programs.",
    "start": "68540",
    "end": "71452"
  },
  {
    "text": "Some of the groups have\ndescribe the challenges",
    "start": "71452",
    "end": "73410"
  },
  {
    "text": "they faced when doing that.",
    "start": "73410",
    "end": "75660"
  },
  {
    "text": "Extracting parallelism\ncan be tricky.",
    "start": "75660",
    "end": "77470"
  },
  {
    "text": "For example, if you want to\ndo pipelining, then on DSPs",
    "start": "77470",
    "end": "80700"
  },
  {
    "text": "you have to predict\nwhat addresses",
    "start": "80700",
    "end": "82130"
  },
  {
    "text": "you're going to\nrequire, and set up",
    "start": "82130",
    "end": "84290"
  },
  {
    "text": "a DMA so that those addresses\nare fetched in advance.",
    "start": "84290",
    "end": "87210"
  },
  {
    "text": "And as Bill mentioned\nin his talk in class,",
    "start": "87210",
    "end": "90680"
  },
  {
    "text": "stream programming can help\nalleviate some of these issues",
    "start": "90680",
    "end": "93590"
  },
  {
    "text": "for some applications,\nlike software radio",
    "start": "93590",
    "end": "96090"
  },
  {
    "text": "where the applications\nfit naturally",
    "start": "96090",
    "end": "98015"
  },
  {
    "text": "into the streaming model.",
    "start": "98015",
    "end": "99790"
  },
  {
    "text": "So what we tried to\ndo for our project",
    "start": "99790",
    "end": "102110"
  },
  {
    "start": "100000",
    "end": "200000"
  },
  {
    "text": "was build a light\nweight-- as light weight",
    "start": "102110",
    "end": "105100"
  },
  {
    "text": "as possible because the\ncode has to fit on DSPs,",
    "start": "105100",
    "end": "107909"
  },
  {
    "text": "but as expressive as possible,\nas well, so as to simplify life",
    "start": "107910",
    "end": "112140"
  },
  {
    "text": "for developers.",
    "start": "112140",
    "end": "113274"
  },
  {
    "text": "The streaming framework which is\ntargeted specifically at signal",
    "start": "113274",
    "end": "115940"
  },
  {
    "text": "processing applications.",
    "start": "115940",
    "end": "118870"
  },
  {
    "text": "The data model, at least, is\nbased on a research project",
    "start": "118870",
    "end": "121960"
  },
  {
    "text": "that I have worked\non in the past, which",
    "start": "121960",
    "end": "123720"
  },
  {
    "text": "is a WaveScope streaming\ndatabase management system.",
    "start": "123720",
    "end": "126520"
  },
  {
    "text": "It is is a research project\nwith the database group.",
    "start": "126520",
    "end": "129479"
  },
  {
    "text": "The data model is essentially\nan extension of the streaming",
    "start": "129480",
    "end": "132239"
  },
  {
    "text": "model to handle\nlarger blocks of data",
    "start": "132240",
    "end": "134940"
  },
  {
    "text": "so as to process them better.",
    "start": "134940",
    "end": "136149"
  },
  {
    "text": "For example, several signal\nprocessing operators,",
    "start": "136149",
    "end": "138189"
  },
  {
    "text": "like the fast Fourier\ntransform, need",
    "start": "138189",
    "end": "139830"
  },
  {
    "text": "to do multiple\npasses over the data",
    "start": "139830",
    "end": "142270"
  },
  {
    "text": "and, therefore, trying to\ntreat streams on a sample",
    "start": "142270",
    "end": "145240"
  },
  {
    "text": "by sample basis\nleads to high cost,",
    "start": "145240",
    "end": "148300"
  },
  {
    "text": "scheduling overhead, as\nwell as inefficiency.",
    "start": "148300",
    "end": "151790"
  },
  {
    "text": "So that's what the\ndata model does.",
    "start": "151790",
    "end": "154379"
  },
  {
    "text": "And we tried to port\nthis data model over",
    "start": "154380",
    "end": "156170"
  },
  {
    "text": "to the cell processor\nand see how well we",
    "start": "156170",
    "end": "159099"
  },
  {
    "text": "could exploit the features\nof the cell processor.",
    "start": "159100",
    "end": "161150"
  },
  {
    "text": "In particular, the high on-chip\nbandwidth between the SPEs",
    "start": "161150",
    "end": "165730"
  },
  {
    "text": "to do with streaming.",
    "start": "165730",
    "end": "167860"
  },
  {
    "text": "So our case study was, as we\nmentioned, a simple software",
    "start": "167860",
    "end": "170865"
  },
  {
    "text": "radio application.",
    "start": "170865",
    "end": "171690"
  },
  {
    "text": "It's really simple.",
    "start": "171690",
    "end": "172481"
  },
  {
    "text": "It uses incoherent demodulation,\nas well as just simple",
    "start": "172481",
    "end": "177600"
  },
  {
    "text": "amplitude-shift key modulation.",
    "start": "177600",
    "end": "180150"
  },
  {
    "text": "As I said, the main\ngoals of our framework",
    "start": "180150",
    "end": "181900"
  },
  {
    "text": "were to simplify\nlife and modeling",
    "start": "181900",
    "end": "184034"
  },
  {
    "text": "as much parallelism\nas possible-- try",
    "start": "184034",
    "end": "185575"
  },
  {
    "text": "and extract pipeline\nparallelism, data parallelism.",
    "start": "185575",
    "end": "188170"
  },
  {
    "text": "Some of the kinds of\nparallelism, We'll mention.",
    "start": "188170",
    "end": "190650"
  },
  {
    "text": "The kind of parallelism we were\nable to finally implement--",
    "start": "190650",
    "end": "193849"
  },
  {
    "text": "so far, it's only\npipeline parallelism,",
    "start": "193850",
    "end": "195846"
  },
  {
    "text": "but as future work, we'd be\ninterested in the other kinds",
    "start": "195846",
    "end": "198219"
  },
  {
    "text": "of parallelism as well.",
    "start": "198220",
    "end": "199178"
  },
  {
    "text": "More about it as I go on.",
    "start": "199178",
    "end": "201540"
  },
  {
    "start": "200000",
    "end": "220000"
  },
  {
    "text": "So in the framework we\nat least implemented,",
    "start": "201540",
    "end": "203659"
  },
  {
    "text": "the programming model\nis quite simple.",
    "start": "203660",
    "end": "206010"
  },
  {
    "text": "The basic execution unit is\nwhat we call an operator.",
    "start": "206010",
    "end": "208776"
  },
  {
    "text": "It's analogous to what in\nStreamIt would be called a work",
    "start": "208776",
    "end": "211150"
  },
  {
    "text": "function, or what\nin GNURadio, which",
    "start": "211150",
    "end": "213819"
  },
  {
    "text": "is a framework for\nbuilding soft radios,",
    "start": "213820",
    "end": "215730"
  },
  {
    "text": "would be called a block.",
    "start": "215730",
    "end": "217209"
  },
  {
    "text": "So these operators can be any\narbitrary C++ classes with",
    "start": "217210",
    "end": "220530"
  },
  {
    "start": "220000",
    "end": "260000"
  },
  {
    "text": "state, and they implement\nan iterate method which",
    "start": "220530",
    "end": "224560"
  },
  {
    "text": "the developer has to overload\nin order to process a block",
    "start": "224560",
    "end": "227105"
  },
  {
    "text": "of data.",
    "start": "227105",
    "end": "228330"
  },
  {
    "text": "The WaveScope data model\nalso provides a library",
    "start": "228330",
    "end": "231060"
  },
  {
    "text": "for managing memory and\npassing blocks of signal",
    "start": "231060",
    "end": "233760"
  },
  {
    "text": "data between these operators.",
    "start": "233760",
    "end": "236269"
  },
  {
    "text": "Applications in\nthis model are built",
    "start": "236270",
    "end": "237770"
  },
  {
    "text": "by chaining operators together.",
    "start": "237770",
    "end": "239330"
  },
  {
    "text": "So this is a snippet\nof some of the code",
    "start": "239330",
    "end": "241460"
  },
  {
    "text": "we wrote for the\nsoftware radio, roughly.",
    "start": "241460",
    "end": "244800"
  },
  {
    "text": "So you create a box,\nlet's say a FIRFilter,",
    "start": "244800",
    "end": "247730"
  },
  {
    "text": "which processes\nelements of type float.",
    "start": "247730",
    "end": "250590"
  },
  {
    "text": "And then, it takes in\nsome arguments, initialize",
    "start": "250590",
    "end": "252690"
  },
  {
    "text": "the filters,\nparameters, and so on.",
    "start": "252690",
    "end": "254220"
  },
  {
    "text": "You want to create a\nwhite noise generator",
    "start": "254220",
    "end": "255970"
  },
  {
    "text": "and hook up the filter to\nthe white noise generator.",
    "start": "255970",
    "end": "258374"
  },
  {
    "text": "We use this to simulate a simple\nchannel, [INAUDIBLE] channel.",
    "start": "258374",
    "end": "263039"
  },
  {
    "start": "260000",
    "end": "310000"
  },
  {
    "text": "So I'll just describe the\ncomponents of our framework.",
    "start": "263040",
    "end": "268080"
  },
  {
    "text": "We have a lightweight scheduler\non both the PPE, as well as",
    "start": "268080",
    "end": "271340"
  },
  {
    "text": "the SPEs.",
    "start": "271340",
    "end": "273490"
  },
  {
    "text": "Right now, it uses a static\noperator mapping in the sense",
    "start": "273490",
    "end": "276090"
  },
  {
    "text": "that you have to specify a\nstatic configuration file,",
    "start": "276090",
    "end": "278570"
  },
  {
    "text": "where you say this operator\nname will run on this [? SPU ?]",
    "start": "278570",
    "end": "282550"
  },
  {
    "text": "number.",
    "start": "282550",
    "end": "283389"
  },
  {
    "text": "But we've not completely\nimplemented dynamically",
    "start": "283390",
    "end": "287435"
  },
  {
    "text": "reconfiguring at runtime.",
    "start": "287435",
    "end": "289290"
  },
  {
    "text": "And we haven't yet seen\nthe need for doing that.",
    "start": "289290",
    "end": "291680"
  },
  {
    "text": "So it wouldn't be too\nhard to add if needed.",
    "start": "291680",
    "end": "294197"
  },
  {
    "text": "But right now, you can\neasily shuffle around",
    "start": "294197",
    "end": "296030"
  },
  {
    "text": "the operator mapping by\ntweaking the configuration file.",
    "start": "296030",
    "end": "299310"
  },
  {
    "text": "Signal blocks, as I said,\nwere adapted from WaveScope.",
    "start": "299310",
    "end": "302810"
  },
  {
    "text": "They use reference counting\nand avoid in-memory copies,",
    "start": "302810",
    "end": "305190"
  },
  {
    "text": "which can be quite expensive,\nespecially on the cell.",
    "start": "305190",
    "end": "308650"
  },
  {
    "text": "They also provide a convenient\nAPI to manipulate signals.",
    "start": "308650",
    "end": "311220"
  },
  {
    "start": "310000",
    "end": "400000"
  },
  {
    "text": "So you don't have to do much\nof the memory management",
    "start": "311220",
    "end": "313428"
  },
  {
    "text": "yourself or debug any\nof the hard problems",
    "start": "313428",
    "end": "315670"
  },
  {
    "text": "to do with memory management.",
    "start": "315670",
    "end": "317389"
  },
  {
    "text": "We also ported this\nlibrary to ensure",
    "start": "317389",
    "end": "318930"
  },
  {
    "text": "that data is aligned for you\nautomatically and transported",
    "start": "318930",
    "end": "323410"
  },
  {
    "text": "via queues.",
    "start": "323410",
    "end": "324180"
  },
  {
    "text": "So one of the major\nthings we had to implement",
    "start": "324180",
    "end": "326710"
  },
  {
    "text": "was a queuing library and\nremote heap management--",
    "start": "326710",
    "end": "330360"
  },
  {
    "text": "what amounted essentially to a\nremote heap management library.",
    "start": "330360",
    "end": "333180"
  },
  {
    "text": "So in some sense, we\nfaced a choice here.",
    "start": "333180",
    "end": "335750"
  },
  {
    "text": "We could either\nhave the PPE control",
    "start": "335750",
    "end": "338710"
  },
  {
    "text": "and allocate memory statically\nand make all the decisions",
    "start": "338710",
    "end": "342030"
  },
  {
    "text": "about what memory\nis allocated where.",
    "start": "342030",
    "end": "344389"
  },
  {
    "text": "Or, we could have the\nSPEs manage it themselves.",
    "start": "344390",
    "end": "347390"
  },
  {
    "text": "We decided to go for the\nlatter, partly because it",
    "start": "347390",
    "end": "349895"
  },
  {
    "text": "was more dynamic and, also,\nbecause we weren't sure",
    "start": "349895",
    "end": "352020"
  },
  {
    "text": "what the implications of\nall the control flow passing",
    "start": "352020",
    "end": "354865"
  },
  {
    "text": "through the PPE were for this.",
    "start": "354865",
    "end": "356892"
  },
  {
    "text": "So we chose the second approach,\nwhich is autonomous memory",
    "start": "356892",
    "end": "359350"
  },
  {
    "text": "management.",
    "start": "359350",
    "end": "360350"
  },
  {
    "text": "So when an SPE sends a streaming\ndata element to another SPE,",
    "start": "360350",
    "end": "365774"
  },
  {
    "text": "it doesn't have to\nactually explicitly request",
    "start": "365774",
    "end": "367689"
  },
  {
    "text": "the other SPE for\nallocating memory.",
    "start": "367690",
    "end": "369480"
  },
  {
    "text": "It has a remote\nheap interface so",
    "start": "369480",
    "end": "371870"
  },
  {
    "text": "that it can directly allocate\ndata and write to the SPE.",
    "start": "371870",
    "end": "374449"
  },
  {
    "text": "This is currently of\nfixed size, but it",
    "start": "374450",
    "end": "379080"
  },
  {
    "text": "could be improved\nby using this heap",
    "start": "379080",
    "end": "381970"
  },
  {
    "text": "to share a bunch of queues.",
    "start": "381970",
    "end": "383110"
  },
  {
    "text": "Right now, we have\none remote heap",
    "start": "383110",
    "end": "384525"
  },
  {
    "text": "for each queue between\noperators on different SPEs.",
    "start": "384526",
    "end": "388450"
  },
  {
    "start": "388450",
    "end": "391520"
  },
  {
    "text": "So our system\nautomatically handles",
    "start": "391520",
    "end": "393169"
  },
  {
    "text": "pipelining streaming data from\nSPE to SPE using the DMA API.",
    "start": "393170",
    "end": "400740"
  },
  {
    "start": "400000",
    "end": "460000"
  },
  {
    "text": "So Micah will takeover from here\nand describe the software radio",
    "start": "400740",
    "end": "403417"
  },
  {
    "text": "implementation briefly.",
    "start": "403417",
    "end": "404452"
  },
  {
    "start": "404452",
    "end": "424445"
  },
  {
    "text": "MICAH BRODSKY: So our\nsoftware radio implementation",
    "start": "424445",
    "end": "426570"
  },
  {
    "text": "is relatively simple.",
    "start": "426570",
    "end": "429301"
  },
  {
    "text": "We weren't pushing\non that too hard,",
    "start": "429301",
    "end": "430800"
  },
  {
    "text": "especially because it took\nthe vast majority of our time",
    "start": "430800",
    "end": "432650"
  },
  {
    "text": "just to get the\nframework to work.",
    "start": "432650",
    "end": "434389"
  },
  {
    "text": "Saving the programmer\ntrouble meant",
    "start": "434390",
    "end": "435860"
  },
  {
    "text": "that we inherited a lot\nof trouble ourselves.",
    "start": "435860",
    "end": "437854"
  },
  {
    "start": "437855",
    "end": "442320"
  },
  {
    "text": "It breaks down to\nabout 25 boxes,",
    "start": "442320",
    "end": "446312"
  },
  {
    "text": "which we took in our\nconfig file which",
    "start": "446312",
    "end": "447895"
  },
  {
    "text": "is manually mapped to the SPEs.",
    "start": "447895",
    "end": "452690"
  },
  {
    "text": "About 3,000 lines of code,\nmost of which is framework.",
    "start": "452690",
    "end": "456025"
  },
  {
    "start": "456025",
    "end": "460250"
  },
  {
    "start": "460000",
    "end": "720000"
  },
  {
    "text": "So I guess, if we were\nmore put-together,",
    "start": "460250",
    "end": "463340"
  },
  {
    "text": "we'd have a nice\ndiagram to show you.",
    "start": "463340",
    "end": "465637"
  },
  {
    "text": "There's enough time.",
    "start": "465637",
    "end": "466470"
  },
  {
    "text": "I'll try to draw a quick\ndiagram on the chalkboard.",
    "start": "466470",
    "end": "468780"
  },
  {
    "start": "468780",
    "end": "472540"
  },
  {
    "text": "We're simulating both sender,\nreceiver and a channel.",
    "start": "472540",
    "end": "476278"
  },
  {
    "start": "476278",
    "end": "483373"
  },
  {
    "text": "So the computation in\nquestion looks something",
    "start": "483373",
    "end": "485939"
  },
  {
    "text": "like you have a bitstream.",
    "start": "485940",
    "end": "489270"
  },
  {
    "text": "You need to take\nthese and convert them",
    "start": "489270",
    "end": "490949"
  },
  {
    "text": "into some-- can\nyou read anything?",
    "start": "490950",
    "end": "494350"
  },
  {
    "start": "494350",
    "end": "507360"
  },
  {
    "text": "So you take stream of bits in.",
    "start": "507360",
    "end": "509909"
  },
  {
    "start": "509910",
    "end": "514270"
  },
  {
    "text": "Take bits.",
    "start": "514270",
    "end": "516849"
  },
  {
    "text": "Basically, use a\nlookup mechanism",
    "start": "516850",
    "end": "518949"
  },
  {
    "text": "to convert it to\nan analog waveform,",
    "start": "518950",
    "end": "522659"
  },
  {
    "text": "and filter that to\nproduce something",
    "start": "522659",
    "end": "524387"
  },
  {
    "text": "that has a narrower spectrum.",
    "start": "524387",
    "end": "525595"
  },
  {
    "start": "525595",
    "end": "528985"
  },
  {
    "text": "Running out of space here.",
    "start": "528986",
    "end": "530420"
  },
  {
    "text": "Means that.",
    "start": "530420",
    "end": "531376"
  },
  {
    "text": "Multiply that\nagainst a sine wave.",
    "start": "531376",
    "end": "534932"
  },
  {
    "text": "ARVIND THIAGARAJAN:\nThat's for modulation",
    "start": "534932",
    "end": "536640"
  },
  {
    "text": "MICAH BRODSKY: And so\nyou get-- you've probably",
    "start": "536640",
    "end": "541410"
  },
  {
    "text": "seen pictures of this.",
    "start": "541410",
    "end": "543899"
  },
  {
    "text": "It's very much like AM\nIt's basically binary",
    "start": "543900",
    "end": "545860"
  },
  {
    "text": "AM. [INAUDIBLE].",
    "start": "545860",
    "end": "547149"
  },
  {
    "text": "It's one of the simplest\nthings you can do.",
    "start": "547150",
    "end": "548990"
  },
  {
    "start": "548990",
    "end": "554830"
  },
  {
    "text": "Then, this is to\nsimulate a channel, which",
    "start": "554830",
    "end": "557780"
  },
  {
    "text": "is a random FIR filter,\nfinite impulse response.",
    "start": "557780",
    "end": "562170"
  },
  {
    "text": "What that means,\nit's basically taking",
    "start": "562170",
    "end": "564690"
  },
  {
    "text": "the copies of the input\nat different time offsets",
    "start": "564690",
    "end": "567060"
  },
  {
    "text": "with random coefficients\nand just summing them up.",
    "start": "567060",
    "end": "569190"
  },
  {
    "text": "It's a huge multiply\nadd computation.",
    "start": "569190",
    "end": "572010"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]",
    "start": "572010",
    "end": "573350"
  },
  {
    "text": "So this is 80 taps.",
    "start": "573350",
    "end": "575706"
  },
  {
    "start": "575706",
    "end": "578960"
  },
  {
    "text": "And add some Gaussian noise.",
    "start": "578960",
    "end": "580785"
  },
  {
    "start": "580785",
    "end": "586050"
  },
  {
    "text": "And then this, we take\nover, and then try",
    "start": "586050",
    "end": "588450"
  },
  {
    "text": "to figure out what we put\nin in the first place.",
    "start": "588450",
    "end": "590560"
  },
  {
    "start": "590560",
    "end": "593529"
  },
  {
    "text": "So a bunch of filtering.",
    "start": "593530",
    "end": "594745"
  },
  {
    "start": "594745",
    "end": "598310"
  },
  {
    "text": "Again, more finite impulse\nresponse filtering.",
    "start": "598310",
    "end": "600610"
  },
  {
    "start": "600610",
    "end": "603180"
  },
  {
    "text": "There's a little\nclosed loop that",
    "start": "603180",
    "end": "605950"
  },
  {
    "text": "tries to estimate the signal\namplitude and correct for it.",
    "start": "605950",
    "end": "609100"
  },
  {
    "text": "That's called\nautomatic gain control",
    "start": "609100",
    "end": "610600"
  },
  {
    "text": "to sort of keep it constant.",
    "start": "610600",
    "end": "611850"
  },
  {
    "start": "611850",
    "end": "614399"
  },
  {
    "text": "And I'm probably getting these\nthings a little out of order.",
    "start": "614400",
    "end": "616910"
  },
  {
    "start": "616910",
    "end": "620897"
  },
  {
    "text": "This is the incoherent\ndemodulation part.",
    "start": "620897",
    "end": "622605"
  },
  {
    "text": "We square the signal to\nget rid of the carrier.",
    "start": "622605",
    "end": "624563"
  },
  {
    "start": "624563",
    "end": "626872"
  },
  {
    "text": "Automatic gain control.",
    "start": "626872",
    "end": "627830"
  },
  {
    "text": "Filtering.",
    "start": "627830",
    "end": "629420"
  },
  {
    "text": "There's another loop.",
    "start": "629420",
    "end": "631800"
  },
  {
    "text": "This is called a\nphase lock loop.",
    "start": "631800",
    "end": "633370"
  },
  {
    "text": "The idea is try to match a\nsine wave to some input signal.",
    "start": "633370",
    "end": "638420"
  },
  {
    "start": "638420",
    "end": "641605"
  },
  {
    "text": "I don't know how to\nexplain it very well.",
    "start": "641605",
    "end": "644190"
  },
  {
    "text": "It's basically a locking\ntype of detector.",
    "start": "644190",
    "end": "645960"
  },
  {
    "text": "The idea is to lock into the\nphase of some periodic thing.",
    "start": "645960",
    "end": "649330"
  },
  {
    "text": "This is for recovering\nwhen do you sample.",
    "start": "649330",
    "end": "651805"
  },
  {
    "text": "Because you've got\nthis messy waveform,",
    "start": "651805",
    "end": "653430"
  },
  {
    "text": "you've got to know when to\nlook and, say, OK, is it high,",
    "start": "653430",
    "end": "656354"
  },
  {
    "text": "is it low to get a bit out.",
    "start": "656354",
    "end": "657478"
  },
  {
    "text": "ARVIND THIAGARAJAN: [INAUDIBLE].",
    "start": "657478",
    "end": "658822"
  },
  {
    "text": "MICAH BRODSKY: Yeah.",
    "start": "658822",
    "end": "660414"
  },
  {
    "text": "I think that gives the picture.",
    "start": "660414",
    "end": "661705"
  },
  {
    "text": "I'm probably boring everybody.",
    "start": "661705",
    "end": "664220"
  },
  {
    "text": "Here's a picture\ngenerated from the system.",
    "start": "664220",
    "end": "666980"
  },
  {
    "text": "So the green line\nis the data in.",
    "start": "666981",
    "end": "668355"
  },
  {
    "start": "668355",
    "end": "671224"
  },
  {
    "text": "Hi, low. [INAUDIBLE].",
    "start": "671224",
    "end": "673112"
  },
  {
    "text": "The red line is\nthe analog signal",
    "start": "673112",
    "end": "675711"
  },
  {
    "text": "out right before it's\nsupposed to decide",
    "start": "675711",
    "end": "677760"
  },
  {
    "text": "what the heck the input was.",
    "start": "677760",
    "end": "679044"
  },
  {
    "start": "679044",
    "end": "681667"
  },
  {
    "text": "This is after squaring,\nand filtering,",
    "start": "681667",
    "end": "683250"
  },
  {
    "text": "and automatic gain\ncontrol, and all that.",
    "start": "683250",
    "end": "685705"
  },
  {
    "text": "The little blips are\nactually because we",
    "start": "685705",
    "end": "688300"
  },
  {
    "text": "used a modulation called\nalternate-mark-inversion.",
    "start": "688300",
    "end": "690785"
  },
  {
    "text": "It basically flips every one.",
    "start": "690785",
    "end": "693232"
  },
  {
    "text": "That's why it's blipping\ninstead of being constant,",
    "start": "693232",
    "end": "695612"
  },
  {
    "text": "which is to be [INAUDIBLE].",
    "start": "695612",
    "end": "697516"
  },
  {
    "text": "And then the little blue\ndaggers are the results",
    "start": "697516",
    "end": "699729"
  },
  {
    "text": "of the phase lock loop to try\nand recover when to sample.",
    "start": "699729",
    "end": "702596"
  },
  {
    "text": "And they're kind of off,\nbut they're kind of right.",
    "start": "702596",
    "end": "704720"
  },
  {
    "text": "And so, if you take\nthe little blue blip,",
    "start": "704720",
    "end": "708300"
  },
  {
    "text": "if the red line is\nabove 0, it's a 1.",
    "start": "708300",
    "end": "711330"
  },
  {
    "text": "And if it's below 0, it's 0.",
    "start": "711330",
    "end": "715219"
  },
  {
    "text": "And that's how you\nget your bits out.",
    "start": "715219",
    "end": "716760"
  },
  {
    "start": "716760",
    "end": "724530"
  },
  {
    "start": "720000",
    "end": "815000"
  },
  {
    "text": "This was hard to get right,\nmostly because of the framework",
    "start": "724530",
    "end": "728041"
  },
  {
    "text": "issues.",
    "start": "728041",
    "end": "728541"
  },
  {
    "start": "728541",
    "end": "731960"
  },
  {
    "text": "Implementing distributed\nobjects on a system",
    "start": "731960",
    "end": "735280"
  },
  {
    "text": "without real shared\nmemory is hard",
    "start": "735280",
    "end": "738174"
  },
  {
    "text": "because you have to\nserialize everything",
    "start": "738174",
    "end": "739840"
  },
  {
    "text": "into a stream of\nbits and deserialize.",
    "start": "739840",
    "end": "741423"
  },
  {
    "start": "741423",
    "end": "744560"
  },
  {
    "text": "So it really makes pie out of\nany existing object oriented",
    "start": "744560",
    "end": "747880"
  },
  {
    "text": "code.",
    "start": "747880",
    "end": "749770"
  },
  {
    "text": "We did quite a bit of work to\nget decent lock-free almost",
    "start": "749770",
    "end": "755044"
  },
  {
    "text": "zero-copy.",
    "start": "755044",
    "end": "756010"
  },
  {
    "text": "Another day or so,\nwe probably would",
    "start": "756010",
    "end": "757510"
  },
  {
    "text": "have gotten zero-copy--\ntransfer-- streaming",
    "start": "757510",
    "end": "760860"
  },
  {
    "text": "of the data from place to place.",
    "start": "760860",
    "end": "763370"
  },
  {
    "text": "And we had to keep the\ncode footprint low.",
    "start": "763370",
    "end": "765120"
  },
  {
    "start": "765120",
    "end": "767680"
  },
  {
    "text": "C++ is bloated.",
    "start": "767680",
    "end": "769640"
  },
  {
    "text": "We don't have an\noverlay system yet to--",
    "start": "769640",
    "end": "772590"
  },
  {
    "text": "if SPE is not running\na particular box,",
    "start": "772590",
    "end": "775689"
  },
  {
    "text": "it still has to have\nthe code for it.",
    "start": "775689",
    "end": "777230"
  },
  {
    "text": "So we don't have any\ninfrastructure for--",
    "start": "777230",
    "end": "779355"
  },
  {
    "text": "ARVIND THIAGARAJAN:\nThere's some macros",
    "start": "779355",
    "end": "780980"
  },
  {
    "text": "to get around that, right?",
    "start": "780980",
    "end": "781959"
  },
  {
    "text": "MICAH BRODSKY: Yeah.",
    "start": "781960",
    "end": "782230"
  },
  {
    "text": "It's pretty messy.",
    "start": "782230",
    "end": "783190"
  },
  {
    "text": "So all the code is\non all the SPEs.",
    "start": "783190",
    "end": "786397"
  },
  {
    "text": "So code bloat is\nparticularly a issue.",
    "start": "786397",
    "end": "787980"
  },
  {
    "text": "And XLC has this\nparticular penchant",
    "start": "787980",
    "end": "790899"
  },
  {
    "text": "for runtime type information\nand exception handling.",
    "start": "790900",
    "end": "793240"
  },
  {
    "start": "793240",
    "end": "796240"
  },
  {
    "text": "Incredible amount of voodoo\nis necessary to get them",
    "start": "796240",
    "end": "799450"
  },
  {
    "text": "and that 70 K of useless\nbloat out of there.",
    "start": "799450",
    "end": "801792"
  },
  {
    "start": "801792",
    "end": "805595"
  },
  {
    "text": "ARVIND THIAGARAJAN: We\npretty much have the--",
    "start": "805595",
    "end": "807470"
  },
  {
    "text": "MICAH BRODSKY: It\nworks, but not always.",
    "start": "807470",
    "end": "812188"
  },
  {
    "text": "ARVIND THIAGARAJAN:\nWe did manage",
    "start": "812188",
    "end": "813562"
  },
  {
    "text": "to get it running long enough\nto get some measurements.",
    "start": "813562",
    "end": "815853"
  },
  {
    "start": "815000",
    "end": "850000"
  },
  {
    "text": "MICAH BRODSKY: Yeah, we did\nget some decent data out.",
    "start": "815853",
    "end": "819660"
  },
  {
    "text": "Running on the PPE only, we\ncan about 170,000 samples",
    "start": "819660",
    "end": "823508"
  },
  {
    "text": "per second through.",
    "start": "823508",
    "end": "825440"
  },
  {
    "text": "And with the scheduling file,\nthat's kind of rule of thumb--",
    "start": "825440",
    "end": "828474"
  },
  {
    "text": "we just roughly said, OK,\nthat looks about this big.",
    "start": "828474",
    "end": "830640"
  },
  {
    "text": "We'll throw it on\nthis SPE, SPE, SPE.",
    "start": "830640",
    "end": "833520"
  },
  {
    "text": "We got roughly four times\nthat using five SPEs.",
    "start": "833520",
    "end": "836060"
  },
  {
    "text": "ARVIND THIAGARAJAN:\nThe core foorprints",
    "start": "836060",
    "end": "837685"
  },
  {
    "text": "are really large, but--",
    "start": "837685",
    "end": "839057"
  },
  {
    "text": "[INTERPOSING VOICES]",
    "start": "839057",
    "end": "839890"
  },
  {
    "start": "839890",
    "end": "842946"
  },
  {
    "text": "MICAH BRODSKY: We\nreally had to push down",
    "start": "842946",
    "end": "845664"
  },
  {
    "text": "things like our queue.",
    "start": "845664",
    "end": "846580"
  },
  {
    "text": "We just didn't\nhave enough memory.",
    "start": "846580",
    "end": "848543"
  },
  {
    "text": "It sucked.",
    "start": "848543",
    "end": "849043"
  },
  {
    "start": "849043",
    "end": "854124"
  },
  {
    "start": "850000",
    "end": "905000"
  },
  {
    "text": "We basically just\nsaid that already.",
    "start": "854124",
    "end": "855624"
  },
  {
    "text": "ARVIND THIAGARAJAN: Some\nperformance bottlenecks, I",
    "start": "855624",
    "end": "856508"
  },
  {
    "text": "guess.",
    "start": "856508",
    "end": "856950"
  },
  {
    "text": "[INTERPOSING VOICES]",
    "start": "856950",
    "end": "857840"
  },
  {
    "text": "MICAH BRODSKY: Interesting\nperformance behavior.",
    "start": "857840",
    "end": "860050"
  },
  {
    "text": "We found that the SPEs are\nridiculously underutilized.",
    "start": "860050",
    "end": "863050"
  },
  {
    "start": "863050",
    "end": "865870"
  },
  {
    "text": "Most of the algorithms are\nquite a bit zippier on the SPEs.",
    "start": "865870",
    "end": "869970"
  },
  {
    "text": "And so, they may be running\nabout a third of the time,",
    "start": "869970",
    "end": "872879"
  },
  {
    "text": "and the rest of time\njust waiting for input.",
    "start": "872880",
    "end": "874860"
  },
  {
    "text": "And then the PPE, which is\ndoing only a tiny amount",
    "start": "874860",
    "end": "877639"
  },
  {
    "text": "of the computation-- basically\njust feeding it in and sucking",
    "start": "877639",
    "end": "880180"
  },
  {
    "text": "it out-- is spending\nhalf of its time all busy",
    "start": "880180",
    "end": "884540"
  },
  {
    "text": "and, the other half of the time,\nstuck in flow control waiting",
    "start": "884540",
    "end": "888350"
  },
  {
    "text": "for queue space, which is-- our\nflow control algorithm sucks.",
    "start": "888350",
    "end": "894790"
  },
  {
    "text": "Better with time.",
    "start": "894790",
    "end": "897290"
  },
  {
    "text": "So it seems like you\nshould be able to do",
    "start": "897290",
    "end": "899190"
  },
  {
    "text": "quite a bit better than we\ndid with a bit more work.",
    "start": "899190",
    "end": "902760"
  },
  {
    "start": "902760",
    "end": "909810"
  },
  {
    "start": "905000",
    "end": "1030000"
  },
  {
    "text": "We need to cut\ndown the footprint.",
    "start": "909810",
    "end": "912641"
  },
  {
    "text": "And once we have a little\nbit of breathing room",
    "start": "912642",
    "end": "914600"
  },
  {
    "text": "and get rid of the nasty\nrace bugs and such,",
    "start": "914600",
    "end": "917240"
  },
  {
    "text": "we can finally investigate\nwhat was our original, pie",
    "start": "917240",
    "end": "919649"
  },
  {
    "text": "in the sky goal of\nautomatically deciding",
    "start": "919650",
    "end": "922160"
  },
  {
    "text": "what goes where, taking\nmeasurements of the performance",
    "start": "922160",
    "end": "928069"
  },
  {
    "text": "and then feeding that\nback to producing a better",
    "start": "928070",
    "end": "930920"
  },
  {
    "text": "placement of operators,\nand applying data",
    "start": "930920",
    "end": "934870"
  },
  {
    "text": "parallelism by\ninstantiating operators",
    "start": "934870",
    "end": "936600"
  },
  {
    "text": "on multiple different SPEs\nand splitting the data stream.",
    "start": "936600",
    "end": "940589"
  },
  {
    "start": "940590",
    "end": "943240"
  },
  {
    "text": "And just doing more.",
    "start": "943240",
    "end": "944330"
  },
  {
    "start": "944330",
    "end": "949818"
  },
  {
    "text": "AUDIENCE: Since your PPE is\nat 40% to 50% utilization,",
    "start": "949818",
    "end": "952227"
  },
  {
    "text": "did you put actual\nwork on there?",
    "start": "952228",
    "end": "954225"
  },
  {
    "text": "MICAH BRODSKY: We did\nput some work on there.",
    "start": "954225",
    "end": "956100"
  },
  {
    "text": "Actually, we put work\non there because we",
    "start": "956100",
    "end": "957808"
  },
  {
    "text": "couldn't fit all the\nboxes-- the code for all",
    "start": "957808",
    "end": "959726"
  },
  {
    "text": "the boxes under the SPEs.",
    "start": "959726",
    "end": "961352"
  },
  {
    "text": "So we started strategically\nto put a few things",
    "start": "961352",
    "end": "963310"
  },
  {
    "text": "at the beginning\nand a few things",
    "start": "963310",
    "end": "964060"
  },
  {
    "text": "at the end which\nweren't supposed",
    "start": "964060",
    "end": "965434"
  },
  {
    "text": "to be very\ncomputationally intensive,",
    "start": "965434",
    "end": "967290"
  },
  {
    "text": "and yet they managed to\ntake up half the CPU.",
    "start": "967290",
    "end": "970014"
  },
  {
    "text": "The issue with the\nother half of the CPU",
    "start": "970014",
    "end": "971680"
  },
  {
    "text": "is that it's actually\ninside an inner loop",
    "start": "971680",
    "end": "974210"
  },
  {
    "text": "deep recursive in blocking\nbecause, basically,",
    "start": "974210",
    "end": "977580"
  },
  {
    "text": "our back pressure\nisn't online yet.",
    "start": "977580",
    "end": "979840"
  },
  {
    "text": "So if it tries to emit\nsomething to a queue,",
    "start": "979840",
    "end": "982690"
  },
  {
    "text": "and that queue is\nfull, it just stops.",
    "start": "982690",
    "end": "984530"
  },
  {
    "text": "And it really could be running\na whole bunch of other stuff,",
    "start": "984530",
    "end": "987030"
  },
  {
    "text": "but it's not smart\nenough to do that ahead.",
    "start": "987030",
    "end": "988452"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]",
    "start": "988452",
    "end": "989327"
  },
  {
    "start": "989327",
    "end": "996577"
  },
  {
    "text": "MICAH BRODSKY: Unlike\na model like StreamIt,",
    "start": "996577",
    "end": "998410"
  },
  {
    "text": "everything here is\nasynchronous and code driven.",
    "start": "998410",
    "end": "1001129"
  },
  {
    "text": "The SPUs they can decide on\nthe fly how much to emit.",
    "start": "1001130",
    "end": "1005641"
  },
  {
    "text": "The programmer doesn't\nhave to declare anything,",
    "start": "1005641",
    "end": "1007640"
  },
  {
    "text": "But it means everything's\nasynchronous.",
    "start": "1007640",
    "end": "1010980"
  },
  {
    "text": "And so you basically\n[? race the issues ?] galore.",
    "start": "1010980",
    "end": "1013509"
  },
  {
    "text": "AUDIENCE: But in this\na application, do you",
    "start": "1013509",
    "end": "1015300"
  },
  {
    "text": "find any dynamic rates?",
    "start": "1015300",
    "end": "1016570"
  },
  {
    "text": "MICAH BRODSKY: In this\napplication, there's not much.",
    "start": "1016570",
    "end": "1018061"
  },
  {
    "text": "It's a very simple application.",
    "start": "1018061",
    "end": "1019352"
  },
  {
    "text": "If we actually went\nto packetization,",
    "start": "1019352",
    "end": "1022037"
  },
  {
    "text": "error correction,\ncompression, things like that,",
    "start": "1022037",
    "end": "1024472"
  },
  {
    "text": "we'd probably see\na lot more of that.",
    "start": "1024472",
    "end": "1026012"
  },
  {
    "text": "This is definitely\nunderutilized in",
    "start": "1026013",
    "end": "1028001"
  },
  {
    "text": "the asynchronous\ncapabilities of the system.",
    "start": "1028001",
    "end": "1033333"
  },
  {
    "start": "1030000",
    "end": "1135000"
  },
  {
    "text": "AUDIENCE: In the case\nof radio, wouldn't it",
    "start": "1033333",
    "end": "1035124"
  },
  {
    "text": "be OK to draw [INAUDIBLE]\nframe into audio data",
    "start": "1035124",
    "end": "1038438"
  },
  {
    "text": "just because you're spending\nso much time waiting,",
    "start": "1038438",
    "end": "1042260"
  },
  {
    "text": "it'd be better just to\nrelieve pressure on the queues",
    "start": "1042260",
    "end": "1045030"
  },
  {
    "text": "by just dropping some\nframes that are unnecessary.",
    "start": "1045030",
    "end": "1047420"
  },
  {
    "text": "MICAH BRODSKY: It might well be.",
    "start": "1047420",
    "end": "1047897"
  },
  {
    "text": "AUDIENCE: And\ninterpolating it in the end",
    "start": "1047898",
    "end": "1049331"
  },
  {
    "text": "to try to fix it\nup a little bit.",
    "start": "1049332",
    "end": "1050766"
  },
  {
    "text": "MICAH BRODSKY: It might well be.",
    "start": "1050766",
    "end": "1051244"
  },
  {
    "text": "We decided not to\ndo that as a part",
    "start": "1051244",
    "end": "1052702"
  },
  {
    "text": "of the framework because\n[INAUDIBLE] policy decision,",
    "start": "1052702",
    "end": "1056210"
  },
  {
    "text": "and we didn't want to make that\nfor all possible applications.",
    "start": "1056210",
    "end": "1058994"
  },
  {
    "text": "But if we figure out a\ngood way to dispose that,",
    "start": "1058994",
    "end": "1061050"
  },
  {
    "text": "that definitely\nwould be an option.",
    "start": "1061050",
    "end": "1062960"
  },
  {
    "text": "Just drop a few packets.",
    "start": "1062960",
    "end": "1064140"
  },
  {
    "text": "Drop a few samples.",
    "start": "1064140",
    "end": "1067334"
  },
  {
    "text": "AUDIENCE: So what\nabout buffer sizes?",
    "start": "1067334",
    "end": "1068875"
  },
  {
    "text": "Do you declare the\nbuffer size as well?",
    "start": "1068875",
    "end": "1070937"
  },
  {
    "text": "MICAH BRODSKY: Yeah.",
    "start": "1070937",
    "end": "1071770"
  },
  {
    "text": "The way we have it\nnow-- there's actually",
    "start": "1071770",
    "end": "1073786"
  },
  {
    "text": "just a #define in the code that\nsays all buffers are this size.",
    "start": "1073786",
    "end": "1077030"
  },
  {
    "text": "AUDIENCE: Do you need any\ndouble buffering in there?",
    "start": "1077030",
    "end": "1079340"
  },
  {
    "text": "MICAH BRODSKY:\nYou don't need it.",
    "start": "1079340",
    "end": "1080715"
  },
  {
    "text": "Well, actually, the way\nit works is that there's",
    "start": "1080715",
    "end": "1083250"
  },
  {
    "text": "this remote heap input queue.",
    "start": "1083250",
    "end": "1085360"
  },
  {
    "text": "And an upstream SPE just DMAs\nthings in as it feels like.",
    "start": "1085360",
    "end": "1089640"
  },
  {
    "text": "And then the\ndownstream SPE looks.",
    "start": "1089640",
    "end": "1091950"
  },
  {
    "text": "Is there something here?",
    "start": "1091950",
    "end": "1093139"
  },
  {
    "text": "Grab it, use it.",
    "start": "1093140",
    "end": "1094330"
  },
  {
    "text": "So it just works, however\nmuch buffering there is.",
    "start": "1094330",
    "end": "1097138"
  },
  {
    "text": "ARVIND THIAGARAJAN: The ring\nbuffer and the [INAUDIBLE]",
    "start": "1097139",
    "end": "1099430"
  },
  {
    "text": "should get that\nblock [? free. ?]",
    "start": "1099430",
    "end": "1101620"
  },
  {
    "text": "MICAH BRODSKY: That's a benefit\nof the asynchronous approach.",
    "start": "1101620",
    "end": "1104610"
  },
  {
    "text": "It just works, if you have\nmemory, which we don't.",
    "start": "1104610",
    "end": "1107514"
  },
  {
    "start": "1107514",
    "end": "1110165"
  },
  {
    "text": "Queues are tiny.",
    "start": "1110165",
    "end": "1110940"
  },
  {
    "start": "1110940",
    "end": "1115995"
  },
  {
    "text": "SPEAKER: [INAUDIBLE]\nis angrily telling me",
    "start": "1115995",
    "end": "1117867"
  },
  {
    "text": "that his connection dropped but\nhe's not picking up the phone.",
    "start": "1117867",
    "end": "1120450"
  },
  {
    "start": "1120450",
    "end": "1129741"
  },
  {
    "text": "Yeah, I could see it in there.",
    "start": "1129741",
    "end": "1130990"
  },
  {
    "start": "1130990",
    "end": "1141427"
  },
  {
    "start": "1135000",
    "end": "1276000"
  },
  {
    "text": "AUDIENCE: Any other\nquestions for them?",
    "start": "1141427",
    "end": "1144906"
  },
  {
    "text": "Did you want to do the demo?",
    "start": "1144906",
    "end": "1147920"
  },
  {
    "text": "MICAH BRODSKY: Nah.",
    "start": "1147920",
    "end": "1150370"
  },
  {
    "text": "SPEAKER ON PHONE: What did\nyou do to get race conditions?",
    "start": "1150370",
    "end": "1153320"
  },
  {
    "text": "MICAH BRODSKY: How\ndid we manage to get",
    "start": "1153320",
    "end": "1154320"
  },
  {
    "text": "ourselves race conditions?",
    "start": "1154320",
    "end": "1155403"
  },
  {
    "start": "1155403",
    "end": "1158149"
  },
  {
    "text": "Well, it's a mix of the\nfact that all the SPUs",
    "start": "1158150",
    "end": "1162775"
  },
  {
    "text": "can essentially operate\nas independent threads",
    "start": "1162775",
    "end": "1165170"
  },
  {
    "text": "and are sort of\nasynchronously DMAing things",
    "start": "1165170",
    "end": "1167110"
  },
  {
    "text": "to each other and\nsomewhat poor--",
    "start": "1167110",
    "end": "1171350"
  },
  {
    "text": "legacy driven architectural\ndecisions on the way the PPU",
    "start": "1171350",
    "end": "1173880"
  },
  {
    "text": "code works.",
    "start": "1173880",
    "end": "1175462"
  },
  {
    "text": "Because we ported a lot of code\nfrom the WaveScope platform.",
    "start": "1175462",
    "end": "1178397"
  },
  {
    "text": "[?",
    "start": "1178397",
    "end": "1178897"
  },
  {
    "text": "ARVIND THIAGARAJAN: Which\nwasn't very ?] well documented.",
    "start": "1178897",
    "end": "1180085"
  },
  {
    "text": "MICAH BRODSKY: And\nthat was intended",
    "start": "1180085",
    "end": "1181585"
  },
  {
    "text": "to be multithreaded\nwith Pthreads, which",
    "start": "1181585",
    "end": "1183740"
  },
  {
    "text": "in our original, naive before\nwe actually started the class",
    "start": "1183740",
    "end": "1187344"
  },
  {
    "text": "impression, we\nthought we were just",
    "start": "1187344",
    "end": "1188802"
  },
  {
    "text": "going to port the whole\nthing and use Pthreads",
    "start": "1188802",
    "end": "1190718"
  },
  {
    "text": "on the sub, which of\ncourse is not possible.",
    "start": "1190718",
    "end": "1192800"
  },
  {
    "text": "So there were still some\nthreaded components in there.",
    "start": "1192800",
    "end": "1197490"
  },
  {
    "text": "And we introduced a lot of\nbugs trying to port the thing.",
    "start": "1197490",
    "end": "1201386"
  },
  {
    "start": "1201386",
    "end": "1203920"
  },
  {
    "text": "See if i can--",
    "start": "1203920",
    "end": "1205080"
  },
  {
    "text": "ARVIND THIAGARAJAN: The\nsurprising thing was the fact",
    "start": "1205080",
    "end": "1206440"
  },
  {
    "text": "that we had to replace\narray constructors in order",
    "start": "1206440",
    "end": "1208523"
  },
  {
    "text": "to eliminate [? RTTI. ?]\nAnd it was just a big deal",
    "start": "1208523",
    "end": "1210716"
  },
  {
    "text": "[INTERPOSING VOICES]",
    "start": "1210717",
    "end": "1211550"
  },
  {
    "text": "MICAH BRODSKY: We had\nto get rid of new,",
    "start": "1211550",
    "end": "1212335"
  },
  {
    "text": "we had to get rid of delete.",
    "start": "1212335",
    "end": "1213770"
  },
  {
    "text": "We had to get rid of\narray constructors.",
    "start": "1213770",
    "end": "1215689"
  },
  {
    "text": "We had to get rid of--",
    "start": "1215689",
    "end": "1217156"
  },
  {
    "text": "ARVIND THIAGARAJAN:\nVirtual destructors.",
    "start": "1217156",
    "end": "1218134"
  },
  {
    "text": "MICAH BRODSKY: --pure\nvirtual functions",
    "start": "1218134",
    "end": "1219112"
  },
  {
    "text": "and virtual destructors.",
    "start": "1219112",
    "end": "1220112"
  },
  {
    "text": "It was a mess.",
    "start": "1220112",
    "end": "1221490"
  },
  {
    "text": "I guess one more\npithy thing I could",
    "start": "1221490",
    "end": "1225193"
  },
  {
    "text": "say about race conditions\nis it's incredible",
    "start": "1225193",
    "end": "1227950"
  },
  {
    "text": "how many subtle race\nconditions and bugs we found in",
    "start": "1227950",
    "end": "1230620"
  },
  {
    "text": "the remote keeping\nqueueing library.",
    "start": "1230620",
    "end": "1235260"
  },
  {
    "text": "Because there's one-- it's a\nlock free asynchronous data",
    "start": "1235260",
    "end": "1238930"
  },
  {
    "text": "structure.",
    "start": "1238930",
    "end": "1241110"
  },
  {
    "text": "There are two threads-- two\nSPUs reading and writing from it",
    "start": "1241110",
    "end": "1245346"
  },
  {
    "text": "at the same time.",
    "start": "1245346",
    "end": "1246630"
  },
  {
    "text": "And there's all sorts\nof little subtleties",
    "start": "1246630",
    "end": "1248380"
  },
  {
    "text": "where if you get it\na little bit wrong,",
    "start": "1248380",
    "end": "1250042"
  },
  {
    "text": "you end up with one of the\nqueue pointers overrunning",
    "start": "1250042",
    "end": "1252250"
  },
  {
    "text": "the other guy, and\nyou have basically",
    "start": "1252250",
    "end": "1253850"
  },
  {
    "text": "dangling pointers\nand things like that.",
    "start": "1253850",
    "end": "1257130"
  },
  {
    "text": "At least three or four\ntimes, we spent a few hours",
    "start": "1257130",
    "end": "1259910"
  },
  {
    "text": "until we discovered that was the\ncause of mysterious behavior.",
    "start": "1259910",
    "end": "1263410"
  },
  {
    "start": "1263410",
    "end": "1270610"
  },
  {
    "text": "AUDIENCE: Anything else?",
    "start": "1270610",
    "end": "1272110"
  },
  {
    "text": "Thank you.",
    "start": "1272110",
    "end": "1272710"
  },
  {
    "text": "[APPLAUSE]",
    "start": "1272710",
    "end": "1274260"
  },
  {
    "start": "1274260",
    "end": "1276958"
  }
]