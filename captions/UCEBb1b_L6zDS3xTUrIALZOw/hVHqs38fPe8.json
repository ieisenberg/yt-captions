[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "ANNOUNCER: Open content is\nprovided under a creative commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "6850"
  },
  {
    "text": "offer high-quality educational\nresources for free. To make a donation, or view\nadditional materials from",
    "start": "6850",
    "end": "13389"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at ocw.mit.edu .",
    "start": "13390",
    "end": "19980"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG:\nAll right. That said, let's continue, and\nif you remember last time, we",
    "start": "19980",
    "end": "30720"
  },
  {
    "text": "ended up looking at this thing\nI called square roots bi. This was using something called\na bisection method,",
    "start": "30720",
    "end": "38810"
  },
  {
    "text": "which is related to something\ncalled binary search, which we'll see lots more of later,\nto find square roots.",
    "start": "38810",
    "end": "47270"
  },
  {
    "text": "And the basic idea was that we\nhad some sort of a line, and",
    "start": "47270",
    "end": "53260"
  },
  {
    "text": "we knew the answer was somewhere\nbetween this point and this point.",
    "start": "53260",
    "end": "60809"
  },
  {
    "text": "The line is totally ordered.",
    "start": "60810",
    "end": "70800"
  },
  {
    "text": "And what that means, is that\nanything here is smaller than",
    "start": "70800",
    "end": "76980"
  },
  {
    "text": "anything to its right. So the integers are totally\nordered, the reals are totally",
    "start": "76980",
    "end": "83000"
  },
  {
    "text": "ordered, lots of\nthings are, the rationals are totally ordered.",
    "start": "83000",
    "end": "88290"
  },
  {
    "text": "And that idea was, we make a\nguess in the middle, we test it so this is kind of a guess\nand check, and if the answer",
    "start": "88290",
    "end": "97360"
  },
  {
    "text": "was too big, then we knew\nthat we should be looking over here.",
    "start": "97360",
    "end": "103220"
  },
  {
    "text": "If it was too small, we knew\nwe should be looking over here, and then we\nwould repeat.",
    "start": "103220",
    "end": "110140"
  },
  {
    "text": "So this is very similar, this\nis a kind of recursive thinking we talked about\nearlier, where we take our",
    "start": "110140",
    "end": "116590"
  },
  {
    "text": "problem and we make it smaller,\nwe solve a smaller problem, et cetera.",
    "start": "116590",
    "end": "122900"
  },
  {
    "text": "All right. So now, we've got it, I've\ngot the code up for you.",
    "start": "122900",
    "end": "130160"
  },
  {
    "text": "I want you to notice the\nspecifications to start. We're assuming that x is greater\nthan or equal to 0,",
    "start": "130160",
    "end": "137840"
  },
  {
    "text": "and epsilon is strictly greater\nthan 0, and we're going to return some value y\nsuch that y squared is within",
    "start": "137840",
    "end": "146120"
  },
  {
    "text": "epsilon of x. I'd last time talked about the\ntwo assert statements.",
    "start": "146120",
    "end": "154110"
  },
  {
    "start": "148000",
    "end": "197000"
  },
  {
    "text": "In some sense, strictly speaking\nthey shouldn't be necessary, because the fact that\nmy specification starts",
    "start": "154110",
    "end": "162510"
  },
  {
    "text": "with an assumption, says, hey\nyou, who might call square root, make sure that the things\nyou call me with obey",
    "start": "162510",
    "end": "171590"
  },
  {
    "text": "the assumption. On the other hand, as I said,\nnever trust a programmer to do",
    "start": "171590",
    "end": "176670"
  },
  {
    "text": "the right thing, so we're\ngoing to check it. And just in case the assumptions\nare not true,",
    "start": "176670",
    "end": "182580"
  },
  {
    "text": "we're just going to stop\ndead in our tracks. All right.",
    "start": "182580",
    "end": "188190"
  },
  {
    "text": "Then we're going to set low to--\nlow and high, and we're going to perform exactly the\nprocess I talked about.",
    "start": "188190",
    "end": "198160"
  },
  {
    "start": "197000",
    "end": "263000"
  },
  {
    "text": "And along the way, I'm keeping\ntrack of how many iterations, at the end I'll print how many\niterations I took, before I",
    "start": "198160",
    "end": "206959"
  },
  {
    "text": "return the final guess. All right, let's test it.",
    "start": "206960",
    "end": "212410"
  },
  {
    "text": "So one of the things I want you\nto observe here, is that instead of sitting there and\ntyping away a bunch of test",
    "start": "212410",
    "end": "218550"
  },
  {
    "text": "cases, I took the trouble to\nwrite a function, called test bi in this case.",
    "start": "218550",
    "end": "224500"
  },
  {
    "text": "All right, so what that's doing,\nis it's taking the",
    "start": "224500",
    "end": "229680"
  },
  {
    "text": "things I would normally type,\nand putting them in a",
    "start": "229680",
    "end": "235000"
  },
  {
    "text": "function, which I\ncan then call. Why is that better\nthan typing them?",
    "start": "235000",
    "end": "245450"
  },
  {
    "text": "Why was it worth creating\na function to do this?",
    "start": "245450",
    "end": "250739"
  },
  {
    "text": "Pardon? STUDENT:: [INAUDIBLE] PROFESSOR JOHN GUTTAG: Then I\ncan I can use it again and",
    "start": "250740",
    "end": "257480"
  },
  {
    "text": "again and again. Exactly.",
    "start": "257480",
    "end": "264300"
  },
  {
    "start": "263000",
    "end": "493000"
  },
  {
    "text": "By putting it in a function, if\nI find a bug and I change my program, I can just run\nthe function again.",
    "start": "264300",
    "end": "273380"
  },
  {
    "text": "The beauty of this is, it keeps\nme from getting lazy,",
    "start": "273380",
    "end": "280010"
  },
  {
    "text": "and not only testing my program\nand the thing that found the bug, but in all the\nthings that used to work.",
    "start": "280010",
    "end": "287260"
  },
  {
    "text": "We'll talk more about this\nlater, but it often happens that when you change your\nprogram to solve one problem,",
    "start": "287260",
    "end": "294290"
  },
  {
    "text": "you break it, and things that\nused to work don't work. And so what you want to do, and\nagain we'll come back to",
    "start": "294290",
    "end": "300970"
  },
  {
    "text": "this later in the term,\nis something called regression testing.",
    "start": "300970",
    "end": "308169"
  },
  {
    "text": "This has nothing to do with\nlinear regression.",
    "start": "308170",
    "end": "313650"
  },
  {
    "text": "And that's basically trying to\nmake sure our program has not regressed, as to say,\ngone backwards",
    "start": "313650",
    "end": "319720"
  },
  {
    "text": "in how well it works. And so we always test\nit on everything.",
    "start": "319720",
    "end": "324900"
  },
  {
    "text": "All right? So I've created this function,\nlet's give it a shot and see what happens.",
    "start": "324900",
    "end": "337990"
  },
  {
    "text": "We'll run test bi. Whoops! All right, well let's\nlook at our answers.",
    "start": "337990",
    "end": "346230"
  },
  {
    "text": "I first tested it on the square\nroot of 4, and in one",
    "start": "346230",
    "end": "351790"
  },
  {
    "text": "iteration it found 2. I like that answer. I then tested it on the square\nroot of 9, and as I mentioned",
    "start": "351790",
    "end": "359680"
  },
  {
    "text": "last time, I didn't find 3. I was not crushed.",
    "start": "359680",
    "end": "365080"
  },
  {
    "text": "You know, I was not really\ndisappointed, it found something close enough\nto 3 that I'm happy.",
    "start": "365080",
    "end": "373039"
  },
  {
    "text": "All right. I tried it on 2, I surely didn't\nexpect a precise and",
    "start": "373040",
    "end": "378260"
  },
  {
    "text": "exact answer to that, but I\ngot something, and if you square this, you'll find\nthe answer kept pretty",
    "start": "378260",
    "end": "384710"
  },
  {
    "text": "darn close to 2. I then tried it on\n0.25 One quarter.",
    "start": "384710",
    "end": "394250"
  },
  {
    "text": "And what happened was\nnot what I wanted.",
    "start": "394250",
    "end": "399990"
  },
  {
    "text": "As you'll see, it crashed. It didn't really crash, it found\nan assert statement.",
    "start": "399990",
    "end": "410460"
  },
  {
    "text": "So if you look at the bottom\nof the function, you'll see that, in fact, I checked\nfor that.",
    "start": "410460",
    "end": "424280"
  },
  {
    "text": "I assert the counter is less\nthan or equal to 0. I'm checking that I didn't leave\nmy program because I",
    "start": "424280",
    "end": "431130"
  },
  {
    "text": "didn't find an answer. Well, this is a good thing, it's\nbetter than my program",
    "start": "431130",
    "end": "436569"
  },
  {
    "text": "running forever, but it's a bad\nthing because I don't have it the square root of 0.25.",
    "start": "436570",
    "end": "445500"
  },
  {
    "text": "What went wrong here?",
    "start": "445500",
    "end": "451640"
  },
  {
    "text": "Well, let's think about\nit for a second. You look like-- someone\nlooks like they're dying to give an answer. No, you just scratching\nyour head?",
    "start": "451640",
    "end": "457990"
  },
  {
    "text": "All right. Remember, I said when we do\na bisection method, we're",
    "start": "457990",
    "end": "464070"
  },
  {
    "text": "assuming the answer lies\nsomewhere between the lower bound and the upper bound.",
    "start": "464070",
    "end": "471180"
  },
  {
    "text": "Well, what is the square\nroot of a quarter?",
    "start": "471180",
    "end": "476560"
  },
  {
    "text": "It is a half. Well, what-- where did\nI tell my program",
    "start": "476560",
    "end": "486130"
  },
  {
    "text": "to look for an answer? Between 0 and x.",
    "start": "486130",
    "end": "494210"
  },
  {
    "start": "493000",
    "end": "580000"
  },
  {
    "text": "So the problem was, the answer\nwas over here somewhere, and",
    "start": "494210",
    "end": "502080"
  },
  {
    "text": "so I'm never going to find it\ncleverly searching in this region, right?",
    "start": "502080",
    "end": "508960"
  },
  {
    "text": "So the basic idea was fine, but\nI failed to satisfy the",
    "start": "508960",
    "end": "514120"
  },
  {
    "text": "initial condition that the\nanswer had to be between the lower bound and the\nupper bound.",
    "start": "514120",
    "end": "520979"
  },
  {
    "text": "Right? And why did I do that? Because I forgot what happens\nwhen you look at fractions.",
    "start": "520980",
    "end": "532900"
  },
  {
    "text": "So what should I do? Actually I lied, by the way,\nwhen I said the answer was",
    "start": "532900",
    "end": "538930"
  },
  {
    "text": "over there. Where was the answer? Somebody?",
    "start": "538930",
    "end": "545360"
  },
  {
    "text": "It was over here.",
    "start": "545360",
    "end": "550860"
  },
  {
    "text": "Because the square root of a\nquarter is not smaller than a",
    "start": "550860",
    "end": "555920"
  },
  {
    "text": "quarter, it's bigger\nthan a quarter. Right? A half is strictly greater\nthan a quarter.",
    "start": "555920",
    "end": "567930"
  },
  {
    "text": "So it wasn't on the region. So how-- what's the fix? Should be a pretty simple fix,\nin fact we should be able to",
    "start": "567930",
    "end": "573410"
  },
  {
    "text": "do it on the fly, here. What should I change?",
    "start": "573410",
    "end": "580550"
  },
  {
    "start": "580000",
    "end": "719000"
  },
  {
    "text": "Do I need to change\nthe lower bound? Is the square root ever going\nto be less than 0?",
    "start": "580550",
    "end": "585860"
  },
  {
    "text": "Doesn't need to be, so, what\nshould I do about the upper bound here?",
    "start": "585860",
    "end": "592580"
  },
  {
    "text": "Oh, I could cheat and make, OK,\nthe upper bound a half, but that wouldn't\nbe very honest.",
    "start": "592580",
    "end": "598970"
  },
  {
    "text": "What would be a good\nthing to do here?",
    "start": "598970",
    "end": "605490"
  },
  {
    "text": "Pardon? I could square x, but maybe\nI should just do something",
    "start": "605490",
    "end": "613029"
  },
  {
    "text": "pretty simple here. Suppose-- whoops.",
    "start": "613030",
    "end": "619000"
  },
  {
    "text": "Suppose I make it the\nmax of x and 1.",
    "start": "619000",
    "end": "635620"
  },
  {
    "text": "Then if I'm looking for the\nsquare root of something less than 1, I know it will be\nin my region, right?",
    "start": "635620",
    "end": "644660"
  },
  {
    "text": "All right, let's save\nthis, and run it and see what happens.",
    "start": "644660",
    "end": "664370"
  },
  {
    "text": "Sure enough, it worked and, did\nwe get-- we got the right answer, 0.5 All right?",
    "start": "664370",
    "end": "676220"
  },
  {
    "text": "And by the way, I checked\nall of my previous ones, and they work too.",
    "start": "676220",
    "end": "685160"
  },
  {
    "text": "All right. Any questions about\nbisection search?",
    "start": "685160",
    "end": "693240"
  },
  {
    "text": "One of the things I want you to\nnotice here is the number iterations is certainly\nnot constant.",
    "start": "693240",
    "end": "702350"
  },
  {
    "text": "Yeah, when I will looked at 4,\nit was a nice number like 1, 9 looked like it took me 18, 2\ntook me 14, if we try some big",
    "start": "702350",
    "end": "714250"
  },
  {
    "text": "numbers it might take\neven longer.",
    "start": "714250",
    "end": "720240"
  },
  {
    "start": "719000",
    "end": "867000"
  },
  {
    "text": "These numbers are small, but\nsometimes when we look at really harder problems, we got\nourselves in a position where",
    "start": "720240",
    "end": "728900"
  },
  {
    "text": "we do care about the number of\niterations, and we care about something called the speed\nof convergence.",
    "start": "728900",
    "end": "743450"
  },
  {
    "text": "Bisection methods were known to\nthe ancient Greeks, and it is believed by many, even\nto the Babylonians.",
    "start": "743450",
    "end": "752740"
  },
  {
    "text": "And as I mentioned last time,\nthis was the state of the art until the 17th century.",
    "start": "752740",
    "end": "761560"
  },
  {
    "text": "At which point, things\ngot better. So, let's think about it, and\nlet's think about what we're",
    "start": "761560",
    "end": "771680"
  },
  {
    "text": "actually doing when\nwe solve this. When we look for something like\nthe square root of x,",
    "start": "771680",
    "end": "779910"
  },
  {
    "text": "what we're really doing,\nis solving an equation.",
    "start": "779910",
    "end": "786690"
  },
  {
    "text": "We're looking at the equation\nf of guess equals the guess",
    "start": "786690",
    "end": "799480"
  },
  {
    "text": "squared minus x.",
    "start": "799480",
    "end": "806430"
  },
  {
    "text": "Right, that's what that is equal\nto, and we're trying to solve the equation that\nf of guess equals 0.",
    "start": "806430",
    "end": "819600"
  },
  {
    "text": "Looking for the root\nof this equation.",
    "start": "819600",
    "end": "825319"
  },
  {
    "text": "So if we looked at it\npictorially, what we've got",
    "start": "825320",
    "end": "834870"
  },
  {
    "text": "here is, we're looking at f of\nx, I've plotted it here, and",
    "start": "834870",
    "end": "842830"
  },
  {
    "text": "we're asking where it\ncrosses the x axis.",
    "start": "842830",
    "end": "848850"
  },
  {
    "text": "Sorry for the overloading\nof the word x. And I'm looking here at 16.",
    "start": "848850",
    "end": "855120"
  },
  {
    "text": "Square root of 16, and my plot\nbasically shows it crosses at",
    "start": "855120",
    "end": "860290"
  },
  {
    "text": "4 and-- well, I think\nthat's minus 4. The perspective is tricky--\nand so we're",
    "start": "860290",
    "end": "868650"
  },
  {
    "text": "trying to find the roots. Now Isaac Newton and/or Joseph\nRaphson figured out how to do",
    "start": "868650",
    "end": "877630"
  },
  {
    "text": "this kind of thing for all\ndifferentiable functions. Don't worry about\nwhat that means.",
    "start": "877630",
    "end": "883740"
  },
  {
    "text": "The basic idea is, you take a\nguess, and you -- whoops --",
    "start": "883740",
    "end": "890130"
  },
  {
    "text": "and you find the tangent\nof that guess.",
    "start": "890130",
    "end": "896540"
  },
  {
    "text": "So let's say I guessed 3. I look for the tangent\nof the curve at 3.",
    "start": "896540",
    "end": "904290"
  },
  {
    "text": "All right, so I've got the\ntangent, and then my next guess is going to be where the\ntangent crosses the x axis.",
    "start": "904290",
    "end": "914680"
  },
  {
    "text": "So instead of dividing it in\nhalf, I'm using a different method to find the next guess.",
    "start": "914680",
    "end": "924800"
  },
  {
    "text": "The utility of this relies upon\nthe observation that, most of the time-- and I want to\nemphasize this, most of the",
    "start": "924800",
    "end": "934050"
  },
  {
    "text": "time, that implies not all of\nthe time-- the tangent line is",
    "start": "934050",
    "end": "940830"
  },
  {
    "text": "a good approximation\nto the curve for values near the solution.",
    "start": "940830",
    "end": "951240"
  },
  {
    "text": "And therefore, the x intercept\nof the tangent will be closer",
    "start": "951240",
    "end": "956820"
  },
  {
    "text": "to the right answer than\nthe current guess. Is that always true,\nby the way?",
    "start": "956820",
    "end": "964520"
  },
  {
    "text": "Show me a place where that's\nnot true, where the tangent line will be really bad.",
    "start": "964520",
    "end": "972370"
  },
  {
    "text": "Yeah. Suppose I choose it right\ndown there, I guess 0. Well, the tangent there will not\neven have an x intercept.",
    "start": "972370",
    "end": "981550"
  },
  {
    "text": "So I'm really going to\nbe dead in the water. This is the sort of thing that\npeople who do numerical",
    "start": "981550",
    "end": "987440"
  },
  {
    "text": "programming worry about\nall the time. And there are a lot of a little\ntricks they use to deal",
    "start": "987440",
    "end": "992810"
  },
  {
    "text": "with that, they'll perturb\nit a little bit, things like that. You should not, at\nthis point, be",
    "start": "992810",
    "end": "997910"
  },
  {
    "text": "worrying about those things. This method, interestingly\nenough, is actually the method",
    "start": "997910",
    "end": "1005230"
  },
  {
    "text": "used in most hand calculators. So if you've got a calculator\nthat has a square root button,",
    "start": "1005230",
    "end": "1012110"
  },
  {
    "text": "it's actually in the calculator running Newton's method. Now I know you thought it was\ngoing to do that thing you",
    "start": "1012110",
    "end": "1018050"
  },
  {
    "text": "learned in high school for\nfinding square roots, which I never could quite understand,\nbut no.",
    "start": "1018050",
    "end": "1023860"
  },
  {
    "text": "It uses Newton's method\nto do it. So how do we find the intercept\nof the tangent, the",
    "start": "1023860",
    "end": "1031279"
  },
  {
    "text": "x intercept? Well this is where derivatives\ncome in.",
    "start": "1031280",
    "end": "1037939"
  },
  {
    "text": "What we know is that the slope\nof the tangent is given by the",
    "start": "1037940",
    "end": "1047439"
  },
  {
    "text": "first derivative of the\nfunction f at the point of the guess. So the slope of the guess\nis the first derivative.",
    "start": "1047440",
    "end": "1056090"
  },
  {
    "text": "Right. Which dy over dx.",
    "start": "1056090",
    "end": "1061779"
  },
  {
    "text": "Change in y divided\nby change in x. So we can use some algebra,\nwhich I won't go through here,",
    "start": "1061780",
    "end": "1070910"
  },
  {
    "text": "and what we would find is that\nfor square root, the derivative, written f prime of\nthe i'th guess is equal to two",
    "start": "1070910",
    "end": "1085630"
  },
  {
    "text": "times the i'th guess. Well, should have left myself\na little more room, sorry about that.",
    "start": "1085630",
    "end": "1095570"
  },
  {
    "text": "All right? You could work this out. Right?",
    "start": "1095570",
    "end": "1100950"
  },
  {
    "text": "The derivative of the\nsquare root is not a complicated thing.",
    "start": "1100950",
    "end": "1106570"
  },
  {
    "text": "Therefore, and here's the key\nthing we need to keep in mind,",
    "start": "1106570",
    "end": "1115090"
  },
  {
    "start": "1114000",
    "end": "1349000"
  },
  {
    "text": "we'll know that we can choose\nguess i plus 1 to be equal to",
    "start": "1115090",
    "end": "1126390"
  },
  {
    "text": "the old guess, guess i, minus\nwhatever the value is of the",
    "start": "1126390",
    "end": "1133900"
  },
  {
    "text": "new guess-- of the old rather,\nthe old guess-- divided by",
    "start": "1133900",
    "end": "1143060"
  },
  {
    "text": "twice the old guess.",
    "start": "1143060",
    "end": "1154800"
  },
  {
    "text": "All right, again this is\nstraightforward kind of algebraic manipulations\nto get here.",
    "start": "1154800",
    "end": "1160400"
  },
  {
    "text": "So let's look at an example. Suppose we start looking for\nthe square root of 16",
    "start": "1160400",
    "end": "1165809"
  },
  {
    "text": "with the guess 3. What's the value of the\nfunction f of 3?",
    "start": "1165810",
    "end": "1177660"
  },
  {
    "text": "Well, it's going to be, we\nlooked at our function there, guess squared, 3 times 3 is 9 I\nthink, minus 16, that's what",
    "start": "1177660",
    "end": "1194090"
  },
  {
    "text": "x is in this case, which\nequals minus 7.",
    "start": "1194090",
    "end": "1202309"
  },
  {
    "text": "That being the case, what's\nmy next guess?",
    "start": "1202310",
    "end": "1213310"
  },
  {
    "text": "Well I start with my old guess,\n3, minus f of my old",
    "start": "1213310",
    "end": "1222530"
  },
  {
    "text": "guess, which is minus 7, divided\nby twice my old guess,",
    "start": "1222530",
    "end": "1233770"
  },
  {
    "text": "which is 6, minus the minus,\nand I get as my new guess",
    "start": "1233770",
    "end": "1242550"
  },
  {
    "text": "4.1666 or thereabouts.",
    "start": "1242550",
    "end": "1251250"
  },
  {
    "text": "So you can see I've missed,\nbut I am closer.",
    "start": "1251250",
    "end": "1257590"
  },
  {
    "text": "And then I would reiterate this\nprocess using that as",
    "start": "1257590",
    "end": "1263700"
  },
  {
    "text": "guess i, and do it again. One way to think about this\nintuitively, if the derivative",
    "start": "1263700",
    "end": "1272960"
  },
  {
    "text": "is very large, the function\nis changing quickly, and",
    "start": "1272960",
    "end": "1279010"
  },
  {
    "text": "therefore we want to\ntake small steps. All right. If the derivative is small, it's\nnot changing, maybe want",
    "start": "1279010",
    "end": "1288960"
  },
  {
    "text": "to take a larger step,\nbut let's not worry about that, all right?",
    "start": "1288960",
    "end": "1294100"
  },
  {
    "text": "Does this method work\nall the time? Well, we already saw no, if my\ninitial guess is zero, I don't",
    "start": "1294100",
    "end": "1302880"
  },
  {
    "text": "get anywhere. In fact, my program crashes\nbecause I end up trying to divide by zero, a really\nbad thing.",
    "start": "1302880",
    "end": "1309730"
  },
  {
    "text": "Hint: if you implement Newton's\nmethod, do not make your first guess zero.",
    "start": "1309730",
    "end": "1317030"
  },
  {
    "text": "All right, so let's look\nat the code for that.",
    "start": "1317030",
    "end": "1328220"
  },
  {
    "text": "All right so-- yeah, how do I\nget to the code for that?",
    "start": "1328220",
    "end": "1333309"
  },
  {
    "text": "That's interesting.",
    "start": "1333310",
    "end": "1345400"
  },
  {
    "text": "All right. So we have that square\nroot NR.",
    "start": "1345400",
    "end": "1352110"
  },
  {
    "start": "1349000",
    "end": "1403000"
  },
  {
    "text": "NR for Newton Raphson. First thing I want you to\nobserve is its specification",
    "start": "1352110",
    "end": "1360840"
  },
  {
    "text": "is identical to the\nspecification of square root bi.",
    "start": "1360840",
    "end": "1368420"
  },
  {
    "text": "What that's telling me is that\nif you're a user of this, you",
    "start": "1368420",
    "end": "1374170"
  },
  {
    "text": "don't care how it's\nimplemented, you care what it does.",
    "start": "1374170",
    "end": "1380350"
  },
  {
    "text": "And therefore, it's fine that\nthe specifications are identical, in fact it's a good\nthing, so that means if",
    "start": "1380350",
    "end": "1386820"
  },
  {
    "text": "someday Professor Grimson\ninvents something that's better than Newton Raphson, we\ncan all re-implement our",
    "start": "1386820",
    "end": "1392610"
  },
  {
    "text": "square root functions and none\nof the programs that use it will have to change,\nas long as the",
    "start": "1392610",
    "end": "1398270"
  },
  {
    "text": "specification is the same.",
    "start": "1398270",
    "end": "1404000"
  },
  {
    "start": "1403000",
    "end": "1759000"
  },
  {
    "text": "All right, so, not much\nto see about this. As I said, the specifications is\nthe same, same assertions,",
    "start": "1404000",
    "end": "1413140"
  },
  {
    "text": "and the-- it's basically the\nsame program as the one we were just looking at, but I'm\nstarting with a different",
    "start": "1413140",
    "end": "1423559"
  },
  {
    "text": "guess, in this case x over 2,\nwell I'm going to, couple of different guesses we can start\nwith, we can experiment with",
    "start": "1423560",
    "end": "1432440"
  },
  {
    "text": "different guesses and see\nwhether we get the same answer, and in fact, if we did,\nwe would see we didn't",
    "start": "1432440",
    "end": "1437919"
  },
  {
    "text": "get this, we got different\nanswers, but correct answers. Actually now, we'll just\ncomment that out.",
    "start": "1437920",
    "end": "1449710"
  },
  {
    "text": "I'm going to compute the\ndifference, just as I did on the board, and off we'll go.",
    "start": "1449710",
    "end": "1457440"
  },
  {
    "text": "All right. Now, let's try and compare\nthese things.",
    "start": "1457440",
    "end": "1463200"
  },
  {
    "text": "And what we're going to look at\nis another procedure, you",
    "start": "1463200",
    "end": "1470889"
  },
  {
    "text": "have the code for these things\non your handout so we won't worry, don't need to show you\nthe code, but let's look at",
    "start": "1470890",
    "end": "1478190"
  },
  {
    "text": "how we're going to test it. I'm doing a little trick by the\nway, I'm using raw input",
    "start": "1478190",
    "end": "1485260"
  },
  {
    "text": "in my function here, as a just\na way to stop the display. This way I can torture\nyou between tests",
    "start": "1485260",
    "end": "1492790"
  },
  {
    "text": "by asking you questions. Making it stop. All right, so, we'll\ntry some things.",
    "start": "1492790",
    "end": "1499870"
  },
  {
    "text": "We'll see what it does.",
    "start": "1499870",
    "end": "1506240"
  },
  {
    "text": "Starting with that, well, let's\nlook at some of the things it will do.",
    "start": "1506240",
    "end": "1512590"
  },
  {
    "text": "Yeah, I'll save it..",
    "start": "1512590",
    "end": "1523049"
  },
  {
    "text": "It's a little bit annoying, but\nit makes the font bigger.",
    "start": "1523050",
    "end": "1534560"
  },
  {
    "text": "All right, so we've tested it,\nand we haven't tested it yet,",
    "start": "1534560",
    "end": "1539580"
  },
  {
    "text": "we have tested it but, we\nhaven't seen it, well, you",
    "start": "1539580",
    "end": "1546649"
  },
  {
    "text": "know what I'm going to do? I'm going to tort-- I'm going to make the font\nsmaller so we can see more. Sorry about this.",
    "start": "1546650",
    "end": "1552280"
  },
  {
    "text": "Those of you in the back, feel\nfree to move forward.",
    "start": "1552280",
    "end": "1564100"
  },
  {
    "text": "All right. So we've got it, now\nlet's test it.",
    "start": "1564100",
    "end": "1572410"
  },
  {
    "text": "So we're going to do\nhere, we're going to run compare methods.",
    "start": "1572410",
    "end": "1580960"
  },
  {
    "text": "Well we're seeing this famous\ncomputers are no damn good.",
    "start": "1580960",
    "end": "1592860"
  },
  {
    "text": "All right. So we're going to try it on 2,\nand at least we'll notice for 2, that the bisection method\ntook eight iterations, the",
    "start": "1592860",
    "end": "1603580"
  },
  {
    "text": "Newton Raphson only took three, so it was more efficient.",
    "start": "1603580",
    "end": "1609620"
  },
  {
    "text": "They came up with slightly\ndifferent answers, but both answers are within .01 which\nis what I gave it here for",
    "start": "1609620",
    "end": "1616809"
  },
  {
    "text": "epsilon, so we're OK. So even though they have\ndifferent answers, they both",
    "start": "1616810",
    "end": "1622740"
  },
  {
    "text": "satisfy the same specification, so we have no problem.",
    "start": "1622740",
    "end": "1629630"
  },
  {
    "text": "All right? Try it again, just for fun.",
    "start": "1629630",
    "end": "1637020"
  },
  {
    "text": "I gave it here a different\nepsilon, and you'll note, we get different answers.",
    "start": "1637020",
    "end": "1646940"
  },
  {
    "text": "Again, that's OK. Notice here, when I asked for\na more precise answer,",
    "start": "1646940",
    "end": "1655210"
  },
  {
    "text": "bisection took a lot more\niterations, but Newton Raphson",
    "start": "1655210",
    "end": "1663440"
  },
  {
    "text": "took only one extra iteration to\nget that extra precision in the answer.",
    "start": "1663440",
    "end": "1669860"
  },
  {
    "text": "So we're sort of getting the\nnotion that Newton Raphson maybe is considerably better on\nharder problems. Which, by",
    "start": "1669860",
    "end": "1679990"
  },
  {
    "text": "the way, it is. We'll make it an even harder\nproblem, by making it looking",
    "start": "1679990",
    "end": "1688630"
  },
  {
    "text": "an even smaller epsilon, and\nagain, what you'll see is, Newton Raphson just crept up by\none, didn't take it long,",
    "start": "1688630",
    "end": "1699290"
  },
  {
    "text": "and got the better answer,\nwhere bisection gets worse and worse. So as you can see, as we\nescalate the problem",
    "start": "1699290",
    "end": "1706860"
  },
  {
    "text": "difficulty, the difference\nbetween the good method and the not quite as good\nmethod gets bigger",
    "start": "1706860",
    "end": "1713289"
  },
  {
    "text": "and bigger and bigger. That's an important observation,\nand as we get to",
    "start": "1713290",
    "end": "1718470"
  },
  {
    "text": "the part of the course, we\ntalk about computational complexity, you'll see that what\nwe really care about is",
    "start": "1718470",
    "end": "1725930"
  },
  {
    "text": "not how efficient the program\nis on easy problems, but how efficient it is on hard",
    "start": "1725930",
    "end": "1731270"
  },
  {
    "text": "problems. All right.",
    "start": "1731270",
    "end": "1737960"
  },
  {
    "text": "Look at another example. All right, here I gave it\na big number, 123456789.",
    "start": "1737960",
    "end": "1747330"
  },
  {
    "text": "And again, I don't want to\nbore you, but you can see what's going on here\nwith this trend.",
    "start": "1747330",
    "end": "1759760"
  },
  {
    "start": "1759000",
    "end": "2003000"
  },
  {
    "text": "So here's an interesting\nquestion.",
    "start": "1759760",
    "end": "1767490"
  },
  {
    "text": "You may notice that it's always\nprinting out the same number of digits.",
    "start": "1767490",
    "end": "1776440"
  },
  {
    "text": "Why should this be? If you look at it here,\nwhat's going on?",
    "start": "1776440",
    "end": "1788480"
  },
  {
    "text": "Something very peculiar\nis happening here.",
    "start": "1788480",
    "end": "1795210"
  },
  {
    "text": "We're looking at it, and we're\ngetting some funny answers.",
    "start": "1795210",
    "end": "1804760"
  },
  {
    "text": "This gets back to what I talked\nabout before, about some of the precision of\nfloating point numbers.",
    "start": "1804760",
    "end": "1811970"
  },
  {
    "text": "And the thing I'm trying to\ndrive home to you here is",
    "start": "1811970",
    "end": "1820110"
  },
  {
    "text": "perhaps the most important\nlesson we'll talk about all semester.",
    "start": "1820110",
    "end": "1833360"
  },
  {
    "text": "Which is, answers\ncan be wrong.",
    "start": "1833360",
    "end": "1849130"
  },
  {
    "text": "People tend to think, because\nthe computer says it's so, it must be so. That the computer is--\nspeaks for God.",
    "start": "1849130",
    "end": "1858640"
  },
  {
    "text": "And therefore it's infallible. Maybe it speaks for the Pope. It speaks for something\nthat's infallible. But in fact, it is not.",
    "start": "1858640",
    "end": "1866520"
  },
  {
    "text": "And so, something I find myself\nrepeating over and over again to myself, to my graduate\nstudents, is, when",
    "start": "1866520",
    "end": "1875780"
  },
  {
    "text": "you get an answer from the\ncomputer, always ask yourself, why do I believe it?",
    "start": "1875780",
    "end": "1881659"
  },
  {
    "text": "Do I think it's the\nright answer? Because it isn't necessarily.",
    "start": "1881660",
    "end": "1891370"
  },
  {
    "text": "So if we look at what we've got\nhere, we've got something rather peculiar, right?",
    "start": "1891370",
    "end": "1896890"
  },
  {
    "text": "What's peculiar about what\nthis computer is now printing for us?",
    "start": "1896890",
    "end": "1907409"
  },
  {
    "text": "Why should I be really\nsuspicious about what I see in the screen here? STUDENT: [INAUDIBLE]",
    "start": "1907410",
    "end": "1916020"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG: Well, not\nonly is it different, it's really different, right? If it were just a little bit\ndifferent, I could say, all",
    "start": "1916020",
    "end": "1922710"
  },
  {
    "text": "right, I have a different\napproximation. But when it's this different,\nsomething is wrong.",
    "start": "1922710",
    "end": "1930880"
  },
  {
    "text": "Right? We'll, later in the term when\nwe get to more detailed",
    "start": "1930880",
    "end": "1937320"
  },
  {
    "text": "numerical things, look\nat what's wrong. You can run into issues of\nthings like overflow,",
    "start": "1937320",
    "end": "1943580"
  },
  {
    "text": "underflow, with floating point\nnumbers, and when you see a whole bunches of ones, it's\nparticularly a good time to be",
    "start": "1943580",
    "end": "1950539"
  },
  {
    "text": "suspicious. Anyway the only point I'm making\nhere is, paranoia is a",
    "start": "1950540",
    "end": "1959169"
  },
  {
    "text": "healthy human trait. All right.",
    "start": "1959170",
    "end": "1964919"
  },
  {
    "text": "We can look at some other things\nwhich will work better.",
    "start": "1964920",
    "end": "1970020"
  },
  {
    "text": "And we'll now move on. OK. So we've looked at how to\nsolve square root we've,",
    "start": "1970020",
    "end": "1976149"
  },
  {
    "text": "looked at two problems, I've\ntried to instill in you this sense of paranoia which is so\nvaluable, and now we're going",
    "start": "1976150",
    "end": "1983750"
  },
  {
    "text": "to pull back and return to\nsomething much simpler than numbers, and that's Python.",
    "start": "1983750",
    "end": "1991110"
  },
  {
    "text": "All right? Numbers are hard. That's why we teach whole\nsemesters worth of courses in",
    "start": "1991110",
    "end": "1996250"
  },
  {
    "text": "number theory. Python it's easy, which is why\nwe do it in about four weeks.",
    "start": "1996250",
    "end": "2004000"
  },
  {
    "start": "2003000",
    "end": "2118000"
  },
  {
    "text": "All right. I want to return to some\nnon-scalar types.",
    "start": "2004000",
    "end": "2014630"
  },
  {
    "text": "So we've been looking, the last\ncouple of lectures, at floating point numbers\nand integers.",
    "start": "2014630",
    "end": "2023070"
  },
  {
    "text": "We've looked so far really\nat two non-scalar types. And those were tuples written\nwith parentheses, and strings.",
    "start": "2023070",
    "end": "2042620"
  },
  {
    "text": "The key thing about\nboth of them is that they were immutable.",
    "start": "2042620",
    "end": "2051340"
  },
  {
    "text": "And I responded to at least one\nemail about this issue, someone quite correctly said\ntuple are immutable, how can I",
    "start": "2051340",
    "end": "2060030"
  },
  {
    "text": "change one? My answer is, you can't change\none, but you can create a new",
    "start": "2060030",
    "end": "2065070"
  },
  {
    "text": "one that is almost like the\nold one but different in a little bit.",
    "start": "2065070",
    "end": "2071339"
  },
  {
    "text": "Well now we're going to talk\nabout some mutable types.",
    "start": "2071340",
    "end": "2078620"
  },
  {
    "text": "Things you can change. And we're going to start with\none that you, many of you,",
    "start": "2078620",
    "end": "2086450"
  },
  {
    "text": "have already bumped\ninto, perhaps by accident, which are lists.",
    "start": "2086450",
    "end": "2093620"
  },
  {
    "text": "Lists differ from strings in two\nways; one way is that it's mutable, the other way is that\nthe values need not be",
    "start": "2093620",
    "end": "2103240"
  },
  {
    "text": "characters. They can be numbers, they can\nbe characters, they can be",
    "start": "2103240",
    "end": "2108750"
  },
  {
    "text": "strings, they can even\nbe other lists. So let's look at some\nexamples here.",
    "start": "2108750",
    "end": "2118930"
  },
  {
    "text": "What we'll do, is we'll work\non two boards at once.",
    "start": "2118930",
    "end": "2127230"
  },
  {
    "text": "So I could write a statement\nlike, techs, a variable, is",
    "start": "2127230",
    "end": "2136060"
  },
  {
    "text": "equal to the list, written with\nthe square brace, not a parenthesis, MIT, Cal\nTech, closed brace.",
    "start": "2136060",
    "end": "2155700"
  },
  {
    "text": "What that basically does, is it\ntakes the variable techs,",
    "start": "2155700",
    "end": "2163079"
  },
  {
    "text": "and it now makes it point to a\nlist with two items in it.",
    "start": "2163080",
    "end": "2175590"
  },
  {
    "text": "One is the string MIT and one\nis the string Cal Tech.",
    "start": "2175590",
    "end": "2185780"
  },
  {
    "text": "So let's look at it. And we'll now run another little\ntest program, show",
    "start": "2185780",
    "end": "2197750"
  },
  {
    "text": "lists, and I printed it,\nand it prints the list MIT, Cal Tech.",
    "start": "2197750",
    "end": "2209200"
  },
  {
    "text": "Now suppose I introduce a new\nvariable, we'll call it ivys,",
    "start": "2209200",
    "end": "2215310"
  },
  {
    "text": "and we say that is equal to the\nlist Harvard, Yale, Brown.",
    "start": "2215310",
    "end": "2227270"
  },
  {
    "text": "Three of the ivy league\ncolleges. What that does is, I have a new\nvariable, ivys, and it's",
    "start": "2227270",
    "end": "2236080"
  },
  {
    "text": "now pointing to another, what we\ncall object, in Python and",
    "start": "2236080",
    "end": "2244830"
  },
  {
    "text": "Java, and many other languages,\nthink of these things that are sitting\nthere in memory somewhere as objects.",
    "start": "2244830",
    "end": "2251970"
  },
  {
    "text": "And I won't write it all out,\nI'll just write it's got Harvard as one in it, and\nthen it's got Yale, and",
    "start": "2251970",
    "end": "2259930"
  },
  {
    "text": "then it's got Brown. And I can now print ivys.",
    "start": "2259930",
    "end": "2269520"
  },
  {
    "text": "And it sure enough prints what\nwe expected it to print.",
    "start": "2269520",
    "end": "2275570"
  },
  {
    "text": "Now, let's say I have univs, for\nuniversities, equals the",
    "start": "2275570",
    "end": "2283390"
  },
  {
    "text": "empty list. That would create\nsomething over here called",
    "start": "2283390",
    "end": "2291010"
  },
  {
    "text": "univs, another variable, and it\nwill point to the list, an",
    "start": "2291010",
    "end": "2296780"
  },
  {
    "text": "object that contains\nnothing in it. This is not the same as none.",
    "start": "2296780",
    "end": "2302950"
  },
  {
    "text": "It's it does have a value, it\njust happens to be the list that has nothing in it.",
    "start": "2302950",
    "end": "2309480"
  },
  {
    "text": "And the next thing I'm\ngoing to write is univs dot append tex.",
    "start": "2309480",
    "end": "2330119"
  },
  {
    "text": "What is this going to do? It's going to take this list and\nadd to it something else.",
    "start": "2330120",
    "end": "2343570"
  },
  {
    "text": "Let's look at the code.",
    "start": "2343570",
    "end": "2357690"
  },
  {
    "text": "I'm going to print it, and\nlet's see what it prints. It's kind of interesting.",
    "start": "2357690",
    "end": "2364710"
  },
  {
    "text": "Whoops. Why did it do that? That's not what I expected.",
    "start": "2364710",
    "end": "2376640"
  },
  {
    "text": "It's going to print that. The reason it printed that is\nI accidentally had my finger on the control key, which said\nprint the last thing you had.",
    "start": "2376640",
    "end": "2386680"
  },
  {
    "start": "2386000",
    "end": "3010000"
  },
  {
    "text": "Why does it start with square\nbraced square brace?",
    "start": "2386680",
    "end": "2396550"
  },
  {
    "text": "I take it-- yes, go ahead. STUDENT: So you're adding\na list to a list? PROFESSOR JOHN GUTTAG: So I'm\nadding a list to a list. What",
    "start": "2396550",
    "end": "2404040"
  },
  {
    "text": "have I-- what I've appended to\nthe empty list is not the",
    "start": "2404040",
    "end": "2410650"
  },
  {
    "text": "elements MIT and Cal Tech\nbut the list that",
    "start": "2410650",
    "end": "2415849"
  },
  {
    "text": "contains those elements.",
    "start": "2415850",
    "end": "2421230"
  },
  {
    "text": "So I've appended this\nwhole object. Since that object is itself\na list, what I get",
    "start": "2421230",
    "end": "2428920"
  },
  {
    "text": "is a list of lists.",
    "start": "2428920",
    "end": "2437190"
  },
  {
    "text": "Now I should mention this\nnotation here append is what",
    "start": "2437190",
    "end": "2449339"
  },
  {
    "text": "is in Python called a method. Now we'll hear lots more about\nmethods when we get to classes",
    "start": "2449340",
    "end": "2458530"
  },
  {
    "text": "and inheritance, but really, a\nmethod is just a fancy word",
    "start": "2458530",
    "end": "2463930"
  },
  {
    "text": "for a function with\ndifferent syntax. Think of this as a function that\ntakes two arguments, the",
    "start": "2463930",
    "end": "2473670"
  },
  {
    "text": "first of which is univs and the\nsecond of which is techs.",
    "start": "2473670",
    "end": "2481220"
  },
  {
    "text": "And this is just a different\nsyntax for writing that function call.",
    "start": "2481220",
    "end": "2487820"
  },
  {
    "text": "Later in the term, we'll see\nwhy we have this syntax and",
    "start": "2487820",
    "end": "2493400"
  },
  {
    "text": "why it wasn't just a totally\narbitrary brain-dead decision by the designers of Python,\nand many languages before",
    "start": "2493400",
    "end": "2501620"
  },
  {
    "text": "Python, but in fact is a\npretty sensible thing. But for now, think of this as\njust another way to write a",
    "start": "2501620",
    "end": "2508880"
  },
  {
    "text": "function call.",
    "start": "2508880",
    "end": "2514210"
  },
  {
    "text": "All right, people\nwith me so far?",
    "start": "2514210",
    "end": "2520000"
  },
  {
    "text": "Now let's say we wanted as the\nnext thing we'll do, is we're",
    "start": "2520000",
    "end": "2528390"
  },
  {
    "text": "going to append the ivys\nto univ. Stick",
    "start": "2528390",
    "end": "2535809"
  },
  {
    "text": "another list on it. All right. So we'll do that, and now we get\nMIT, Cal Tech, followed by",
    "start": "2535810",
    "end": "2549280"
  },
  {
    "text": "that list followed by the list\nHarvard, Yale, Brown. So now we have a list containing\ntwo lists.",
    "start": "2549280",
    "end": "2561760"
  },
  {
    "text": "What are we going to try next? Well just to see what we know\nwhat we're doing, let's look",
    "start": "2561760",
    "end": "2569280"
  },
  {
    "text": "at this code here.",
    "start": "2569280",
    "end": "2576550"
  },
  {
    "text": "I've written a little for\nloop, which is going to iterate over all of the elements\nin the list. So",
    "start": "2576550",
    "end": "2583970"
  },
  {
    "text": "remember, before we wrote things\nlike for i in range 10,",
    "start": "2583970",
    "end": "2590200"
  },
  {
    "text": "which iterated over a list or\ntuple of numbers, here you can",
    "start": "2590200",
    "end": "2597190"
  },
  {
    "text": "iterate over any list, and so\nwe're going to just going to take the list called univs\nand iterate over it.",
    "start": "2597190",
    "end": "2606250"
  },
  {
    "text": "So the first thing we'll do is,\nwe'll print the element, in this case it will\nbe a list, right?",
    "start": "2606250",
    "end": "2612370"
  },
  {
    "text": "Because it's a list with\ntwo lists in it. Then the next thing in the loop,\nwe're going to enter a",
    "start": "2612370",
    "end": "2618510"
  },
  {
    "text": "nested loop, and say for every\ncollege in the list e, we're",
    "start": "2618510",
    "end": "2626050"
  },
  {
    "text": "going to print the name\nof the college.",
    "start": "2626050",
    "end": "2631390"
  },
  {
    "text": "So now if we look what we get--\ndo you not want to try",
    "start": "2631390",
    "end": "2639789"
  },
  {
    "text": "and execute that?-- it'll\nfirst print the list",
    "start": "2639790",
    "end": "2647330"
  },
  {
    "text": "containing MIT and Cal Tech,\nand then separately the strings MIT and Cal Tech, and\nthen the list containing",
    "start": "2647330",
    "end": "2654990"
  },
  {
    "text": "Harvard, Yale, and Brown, and\nthen the strings Harvard, Yale, and Brown.",
    "start": "2654990",
    "end": "2661380"
  },
  {
    "text": "So we're beginning to see this\nis a pretty powerful notion, these lists, and that\nwe can do a lot of",
    "start": "2661380",
    "end": "2667640"
  },
  {
    "text": "interesting things with them. Suppose I don't want all of this\nstructure, and I want to",
    "start": "2667640",
    "end": "2677640"
  },
  {
    "text": "do what's called flattening the\nlist. Well I can do that",
    "start": "2677640",
    "end": "2691460"
  },
  {
    "text": "by, instead of using the\nmethod append, use the",
    "start": "2691460",
    "end": "2696560"
  },
  {
    "text": "concatenation operator. So I can concatenate techs\nplus ivys and assign that",
    "start": "2696560",
    "end": "2706299"
  },
  {
    "text": "result to univs, and then when\nI print it you'll notice I",
    "start": "2706300",
    "end": "2713510"
  },
  {
    "text": "just get a list of\nfive strings.",
    "start": "2713510",
    "end": "2719180"
  },
  {
    "text": "So plus and append do very\ndifferent things. Append sticks the list on the\nend of the list, append",
    "start": "2719180",
    "end": "2730440"
  },
  {
    "text": "flattens it, one level\nof course. If I had lists of lists of\nlists, then it would only take",
    "start": "2730440",
    "end": "2736559"
  },
  {
    "text": "out the first level of it.",
    "start": "2736560",
    "end": "2741880"
  },
  {
    "text": "OK, very quiet here. Any questions about\nany of this?",
    "start": "2741880",
    "end": "2749349"
  },
  {
    "text": "All right. Because we're about to get\nto the hard part Sigh. All right. Let's look at the-- well,\nsuppose I want to, quite",
    "start": "2749350",
    "end": "2758400"
  },
  {
    "text": "understandably, eliminate\nHarvard. All right, I then get\ndown here, where I'm",
    "start": "2758400",
    "end": "2765650"
  },
  {
    "text": "going to remove it. So this is again another method,\nthis is remove, takes",
    "start": "2765650",
    "end": "2773200"
  },
  {
    "text": "two arguments, the first\nis ivys, the second is the string Harvard.",
    "start": "2773200",
    "end": "2781210"
  },
  {
    "text": "It's going to search through the\nlist until the first time it finds Harvard and then it's\ngoing to yank it away.",
    "start": "2781210",
    "end": "2799030"
  },
  {
    "text": "So what happened here? Did I jump to the wrong place?",
    "start": "2799030",
    "end": "2805650"
  },
  {
    "text": "STUDENT: You hit two returns. PROFESSOR JOHN GUTTAG:\nI hit two returns. Pardon? STUDENT: You hit two returns. One was at STUDENT: Pardo",
    "start": "2805650",
    "end": "2813740"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG:\nThis one. STUDENT: No, up one. PROFESSOR JOHN GUTTAG: Up one. STUDENT: Right. PROFESSOR JOHN GUTTAG: But\nwhy is Harvard there? STUDENT: I'm sorry, I didn't\nwrite it down.",
    "start": "2813740",
    "end": "2820180"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG: Let's\nlook at it again. All right, it's time to\ninterrupt the world, and we'll just type into the shell.",
    "start": "2820180",
    "end": "2826600"
  },
  {
    "text": "Let's see what we get here.",
    "start": "2826600",
    "end": "2836040"
  },
  {
    "text": "All right, so let's just see\nwhat we got, we'll print univs. Nope, not defined.",
    "start": "2836040",
    "end": "2842070"
  },
  {
    "text": "All right, well let's do a list\nequals, and we'll put some interesting things in it,\nwe'll put a number in it,",
    "start": "2842070",
    "end": "2849080"
  },
  {
    "text": "because we can put a number,\nwe'll put MIT in it, because we can put strings, we'll put\nanother number in it, 3.3,",
    "start": "2849080",
    "end": "2858830"
  },
  {
    "text": "because we can put floating\npoints, we can put all sorts of things in this list. We can\nput a list in the list again,",
    "start": "2858830",
    "end": "2865540"
  },
  {
    "text": "as we've seen before. So let's put the list containing\nthe string a, and",
    "start": "2865540",
    "end": "2873369"
  },
  {
    "text": "I'll print out, so now we see\nsomething pretty interesting about a list, that we can mix up\nall sorts of things in it,",
    "start": "2873370",
    "end": "2883400"
  },
  {
    "text": "and that's OK. You'll notice I have the string\nwith the number 1, a",
    "start": "2883400",
    "end": "2888940"
  },
  {
    "text": "string with MIT, and then it\njust a plain old number, not a string, again it didn't quite\ngive me 3.3 for reasons we've",
    "start": "2888940",
    "end": "2896810"
  },
  {
    "text": "talked before, and now\nit in the list a. So, suppose I want to\nremove something.",
    "start": "2896810",
    "end": "2907020"
  },
  {
    "text": "What should we try and remove\nfrom this list?",
    "start": "2907020",
    "end": "2912530"
  },
  {
    "text": "Anybody want to vote? Pardon?",
    "start": "2912530",
    "end": "2918320"
  },
  {
    "text": "All right, someone wants\nto remove MIT. Sad but true.",
    "start": "2918320",
    "end": "2925450"
  },
  {
    "text": "Now what do we get\nif we print l? MIT is gone.",
    "start": "2925450",
    "end": "2931290"
  },
  {
    "text": "How do I talk about the\ndifferent pieces of l? Well I can do this. l sub 0--\nwhoops-- will give me the",
    "start": "2931290",
    "end": "2944210"
  },
  {
    "text": "first element of the list,\njust as we could do with",
    "start": "2944210",
    "end": "2949580"
  },
  {
    "text": "strings, and I can look at l\nsub minus 1 to get the last element of the list, so I can\ndo all the strings, all the",
    "start": "2949580",
    "end": "2957069"
  },
  {
    "text": "things that I could\ndo with strings. It's extremely powerful,\nbut what we",
    "start": "2957070",
    "end": "2963460"
  },
  {
    "text": "haven't seen yet is mutation.",
    "start": "2963460",
    "end": "2969760"
  },
  {
    "text": "Well, we have seen\nmutation, right? Because notice that what remove\ndid, it was it actually",
    "start": "2969760",
    "end": "2976960"
  },
  {
    "text": "changed the list. Didn't create\na new list. The old l",
    "start": "2976960",
    "end": "2982650"
  },
  {
    "text": "is still there, but it's\ndifferent than it used to be. So this is very different from\nwhat we did with slicing,",
    "start": "2982650",
    "end": "2991730"
  },
  {
    "text": "where we got a new copy\nof something. Here we took the old one\nand we just changed it.",
    "start": "2991730",
    "end": "2999350"
  },
  {
    "text": "On Thursday, we'll look at why\nthat allows you to do lots of",
    "start": "2999350",
    "end": "3005150"
  },
  {
    "text": "things more conveniently than\nyou can do without mutation.",
    "start": "3005150",
    "end": "3010170"
  },
  {
    "start": "3010170",
    "end": "3010743"
  }
]