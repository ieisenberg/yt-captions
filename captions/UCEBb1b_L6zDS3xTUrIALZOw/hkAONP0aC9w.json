[
  {
    "text": " The following\ncontent is provided under a Creative\nCommons license. Your support will help MIT\nOpenCourseWare continue",
    "start": "0",
    "end": "6880"
  },
  {
    "text": "to offer high quality\neducational resources for free. To make a donation, or\nview additional materials",
    "start": "6880",
    "end": "13360"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13360",
    "end": "21184"
  },
  {
    "text": "PROFESSOR: So you guys know\nthe quiz is cumulative, right? Everything all the way\nback from lecture one, so I would look at all the\nlectures and all the P sets,",
    "start": "21184",
    "end": "28620"
  },
  {
    "text": "and look at all the\nstuff that we taught you, so data structures,\nalgorithms, everything. And at least be able to\nknow, for every one of them,",
    "start": "28620",
    "end": "37420"
  },
  {
    "text": "what's the name, what it does,\nand wants the running time. Proofs and how it does\nit might be harder,",
    "start": "37420",
    "end": "43360"
  },
  {
    "text": "but these be able to\ncall it as a black box and argue about\nthe running times.",
    "start": "43360",
    "end": "49800"
  },
  {
    "text": "So I have a dp problem, and\nI have a non-dp problem. Which problem would you\nlike me to start with?",
    "start": "49800",
    "end": "58320"
  },
  {
    "text": "OK. ",
    "start": "58320",
    "end": "63910"
  },
  {
    "text": "Do you guys know the saying, if\na woodchucker would chuck wood, how much wood would\na woodchucker chuck?",
    "start": "63910",
    "end": "69619"
  },
  {
    "text": "Today we're going to chuck wood. So you have a piece of\nwood that is l meters long,",
    "start": "69620",
    "end": "79200"
  },
  {
    "text": "and they have n markings. ",
    "start": "79200",
    "end": "87360"
  },
  {
    "text": "So say the first\nmark is at 3 meters,",
    "start": "87360",
    "end": "92560"
  },
  {
    "text": "the second mark is at 5\nmeters, so on, so forth.",
    "start": "92560",
    "end": "97619"
  },
  {
    "text": "And 3, and 4, all\nthe way up to mn.",
    "start": "97620",
    "end": "104400"
  },
  {
    "text": "So we want to cut this piece\nof wood at all the markings.",
    "start": "104400",
    "end": "110870"
  },
  {
    "text": "The thing is the woodchucker\ndoesn't work for free. If you give it a piece\nof wood of length l,",
    "start": "110870",
    "end": "119140"
  },
  {
    "text": "and you ask it to cut\nit at some marking, you're going to get two pieces\nof wood, length l1 and l2.",
    "start": "119140",
    "end": "127930"
  },
  {
    "text": "The price for this\nis l1 times l2.",
    "start": "127930",
    "end": "135730"
  },
  {
    "text": "So we like woodchucker,\nbut woodchuckers would also like our wallets. So we want to cut\nthis up by paying",
    "start": "135730",
    "end": "142590"
  },
  {
    "text": "the minimum amount of money. ",
    "start": "142590",
    "end": "147820"
  },
  {
    "text": "Rings a bell? So I'll let you guys\nthink for a minute, then I'll give you the running\ntime, then we'll start talking.",
    "start": "147820",
    "end": "155150"
  },
  {
    "text": " So we usually give you\nrunning times on quizzes.",
    "start": "155150",
    "end": "160349"
  },
  {
    "text": "The running time is why you\nshould know all the problems in their matching running times,\nbecause the moment we give you",
    "start": "160350",
    "end": "165560"
  },
  {
    "text": "a running time you can\nautomatically eliminate all the things that don't match,\nand just focus on a few things.",
    "start": "165560",
    "end": "171450"
  },
  {
    "start": "171450",
    "end": "177870"
  },
  {
    "text": "So you're going to have to\ncut it at all the markings, eventually, but the order in\nwhich you cut is important.",
    "start": "177870",
    "end": "185120"
  },
  {
    "text": "So if I cut here first, then\nI'm going to pay three times l minus 3, whereas if I\ncut in the middle first,",
    "start": "185120",
    "end": "191310"
  },
  {
    "text": "I'm going to pay whatever this\nis, and 3 times l minus m3.",
    "start": "191310",
    "end": "199120"
  },
  {
    "text": " So we're trying to\ndecide the order.",
    "start": "199120",
    "end": "207400"
  },
  {
    "text": "Does this look like\nany familiar problem? ",
    "start": "207400",
    "end": "213300"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]\nusing dp, right? PROFESSOR: dp, that is good.",
    "start": "213300",
    "end": "218959"
  },
  {
    "text": "I did say that we're going\nto start with a dp problem, so this is dp.",
    "start": "218960",
    "end": "224371"
  },
  {
    "text": "It's a good start. ",
    "start": "224371",
    "end": "234467"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: What? Not exactly.",
    "start": "234468",
    "end": "239880"
  },
  {
    "text": "AUDIENCE: Yeah. PROFESSOR: So, it is\nnot like any problems",
    "start": "239880",
    "end": "245880"
  },
  {
    "text": "on the recitations. ",
    "start": "245880",
    "end": "251420"
  },
  {
    "text": "So far recitations did\nprefixes and suffixes. We're going to solve this\nusing a running time of n",
    "start": "251420",
    "end": "257208"
  },
  {
    "text": "cubed, which is like\nthe parenthesis problem. ",
    "start": "257209",
    "end": "263740"
  },
  {
    "text": "It should be what you said, but\nI don't know how to spell that, so we're going to\ngo for this instead. ",
    "start": "263740",
    "end": "271720"
  },
  {
    "text": "So running n\ncubed-- the moment I said this you guys\nshould know that this is the n cubed problem that\nwe have in lecture notes.",
    "start": "271720",
    "end": "277940"
  },
  {
    "text": " So make sure to have\nthose on the cheat sheets, and try to understand\nthem, right?",
    "start": "277940",
    "end": "286010"
  },
  {
    "text": "OK, so given that\nI've said this, you should know\nthe solution now.",
    "start": "286010",
    "end": "294020"
  },
  {
    "text": "To make sure\neveryone is with me, we're going to go through\nthe solution, whole. So what is a subproblem?",
    "start": "294020",
    "end": "299280"
  },
  {
    "text": " AUDIENCE:Smaller piece of wood.",
    "start": "299280",
    "end": "306300"
  },
  {
    "text": "PROFESSOR: OK. AUDIENCE: Like how to cut it up. PROFESSOR: OK. So this is how you\nthink of it informally.",
    "start": "306300",
    "end": "312699"
  },
  {
    "text": "When you write it up,\nI want to see this. I want to see dp of\nsomething means something.",
    "start": "312700",
    "end": "321650"
  },
  {
    "text": "So how you fill\nout your dp table.  It's really useful to\nwrite this up on your exam",
    "start": "321650",
    "end": "330040"
  },
  {
    "text": "before, because one, this will\nhelp you write the recursion correctly, and two, if\nthe grader sees this",
    "start": "330040",
    "end": "336240"
  },
  {
    "text": "they might skim over the\nrecursion completely. And then you might\nhave bugs there. We might not see them. Good for you.",
    "start": "336240",
    "end": "343250"
  },
  {
    "text": "So this says how you're\ngoing to fill out the table. Right? dp of something\nequals something.",
    "start": "343250",
    "end": "348810"
  },
  {
    "text": "What's in a dp table? Numbers. It's never how to do something. It's always the\nnumbers, so it's always",
    "start": "348810",
    "end": "355570"
  },
  {
    "text": "the maximum profit,\nor the minimum cost, or the shortest distance,\nor the longest something.",
    "start": "355570",
    "end": "361289"
  },
  {
    "text": "So it's always a number. So what we do here? AUDIENCE: Start and dp, start\nlocation to the end location is",
    "start": "361290",
    "end": "370037"
  },
  {
    "text": "PROFESSOR: OK, so we're going\nto get the mean distance, right? We usually do i j k and\nwhatever else it takes.",
    "start": "370037",
    "end": "376389"
  },
  {
    "text": "So start to end is? AUDIENCE: The minimum\ncost of cutting that up.",
    "start": "376390",
    "end": "382030"
  },
  {
    "text": "PROFESSOR: Minimum cost of\ncutting up the wood board",
    "start": "382030",
    "end": "395020"
  },
  {
    "text": "from marking i, all\nthe way to marking j.",
    "start": "395020",
    "end": "400460"
  },
  {
    "text": " There's a tiny problem here,\nthat the initial-- there's",
    "start": "400460",
    "end": "406560"
  },
  {
    "text": "no problem for this big\npiece of wood, right?",
    "start": "406560",
    "end": "412990"
  },
  {
    "text": "If I can only consider\nthe board from i to j, so if I can only consider\nthe board from marking 1",
    "start": "412990",
    "end": "420980"
  },
  {
    "text": "to marking n, then\nI get to this. So this part and this\npart get left out. ",
    "start": "420980",
    "end": "431110"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: Exactly. We add fake markings. Then 0 is 0, and\nmn plus 1 equals l.",
    "start": "431110",
    "end": "441170"
  },
  {
    "text": "Very good. AUDIENCE: [INAUDIBLE]\nequally spaced? PROFESSOR: No. So these are numbers.",
    "start": "441170",
    "end": "447100"
  },
  {
    "text": "If they were evenly spaced,\nI think there's an algorithm. You might come up with a\nmath and say, you always",
    "start": "447100",
    "end": "453180"
  },
  {
    "text": "cut it up like this. ",
    "start": "453180",
    "end": "460380"
  },
  {
    "text": "So while we solve this,\nyou guys have candy, right? You should eat the candy and\nbe energetic and everything.",
    "start": "460380",
    "end": "466390"
  },
  {
    "text": " So min cost of\ncutting up the board",
    "start": "466390",
    "end": "471979"
  },
  {
    "text": "from marking i to marking j. I like this. Have this on your\nexam if possible, because this will\nmake our life easier,",
    "start": "471980",
    "end": "477590"
  },
  {
    "text": "and it's going to\nmake your life easier when you get to the\nnext step, which is how do we compute dp of i j?",
    "start": "477590",
    "end": "483590"
  },
  {
    "text": " So suppose I'm looking at\nthe subboard from m1 to m4",
    "start": "483590",
    "end": "491930"
  },
  {
    "text": "so I'm looking at only this. How do I compute the best way\nto cut the board from m1 to m4?",
    "start": "491930",
    "end": "500820"
  },
  {
    "start": "500820",
    "end": "513146"
  },
  {
    "text": "What are my options?  AUDIENCE: The locations\nyou can cut it.",
    "start": "513147",
    "end": "518510"
  },
  {
    "text": "PROFESSOR: Exactly. So in order to cut\nthis up, I can either make a first cut at m2.",
    "start": "518510",
    "end": "525230"
  },
  {
    "text": "So say I make my first\ncut here, and then I recursively cut\nthis, and cut this.",
    "start": "525230",
    "end": "532879"
  },
  {
    "text": "Or the other alternative\nis take the same guy-- m1,",
    "start": "532880",
    "end": "539750"
  },
  {
    "text": "m2, m3, m4-- cut it at m3,\nand then recursively cut this,",
    "start": "539750",
    "end": "547110"
  },
  {
    "text": "and recursively cut this. So I'm iterating over all the\nmarkings inside the board.",
    "start": "547110",
    "end": "555790"
  },
  {
    "text": "Now suppose I'm\ncutting it-- yes? AUDIENCE: [INAUDIBLE] cutting\nboth, or actually, never mind.",
    "start": "555790",
    "end": "561176"
  },
  {
    "text": "PROFESSOR: Yeah,\nwhen I recursed, that takes care of it. So suppose I'm looking\nat m1 through m4,",
    "start": "561176",
    "end": "567899"
  },
  {
    "text": "and I'm cutting it at m2.",
    "start": "567900",
    "end": "575470"
  },
  {
    "text": "What's the total cost? So what's the best way\nto cut, given that then I",
    "start": "575470",
    "end": "581670"
  },
  {
    "text": "know I'm going to cut there? AUDIENCE: The sum of the dp's. PROFESSOR: OK, so it's the\nbest way to cut m1 through m2,",
    "start": "581670",
    "end": "596579"
  },
  {
    "text": "plus best way to\ncut m2 through m4,",
    "start": "596580",
    "end": "607050"
  },
  {
    "text": "plus the price I'm paying\nfor this cut, right? Not just the sum of the dp's. One more term.",
    "start": "607050",
    "end": "612889"
  },
  {
    "text": "What's this term? AUDIENCE: 4 minus 1? Or the location of 4\nminus the location of 1.",
    "start": "612890",
    "end": "620634"
  },
  {
    "text": " PROFESSOR: So,\nnot quite, almost.",
    "start": "620634",
    "end": "627300"
  },
  {
    "text": "So if I'm cutting a\nboard into two pieces, the cost is the product of\nthe length of the two pieces.",
    "start": "627300",
    "end": "633840"
  },
  {
    "text": " m2 minus m1, times yes.",
    "start": "633840",
    "end": "646050"
  },
  {
    "text": "OK, why did I bother doing this? Some people think better\nwith concrete numbers.",
    "start": "646050",
    "end": "651410"
  },
  {
    "text": "If that's the case, then\ngive yourself an example. Write some numbers on\nyour sheet of paper,",
    "start": "651410",
    "end": "659310"
  },
  {
    "text": "then see what\nletters match to what numbers, and copy\nit up using letters. And there you go, you've\nsolved the problem.",
    "start": "659310",
    "end": "667220"
  },
  {
    "text": "So where are i and j here? ",
    "start": "667220",
    "end": "672630"
  },
  {
    "text": "AUDIENCE: i would be 1. PROFESSOR: OK, so this is i. AUDIENCE: That's j.",
    "start": "672630",
    "end": "679130"
  },
  {
    "text": "PROFESSOR: Cool, so let's\ntry to write it up, now.",
    "start": "679130",
    "end": "684400"
  },
  {
    "text": "So in order to cut the board\nfrom i to j, what am I doing?",
    "start": "684400",
    "end": "691040"
  },
  {
    "text": "So what am I computing? Usually the first word in\nyour subproblem definition is the function that\nyou're going to use.",
    "start": "691040",
    "end": "698079"
  },
  {
    "text": "So it's minimum, and I'm\ngoing iterate over something. AUDIENCE: dp of i to--\nit has to be all of j.",
    "start": "698080",
    "end": "710770"
  },
  {
    "text": "dp of i, j, and\nyou're looking to-- PROFESSOR: So I'm\ncomputing dp of i j. AUDIENCE: I know, of\nj minus [INAUDIBLE].",
    "start": "710770",
    "end": "717380"
  },
  {
    "text": "AUDIENCE: j minus i, then\nk j minus [INAUDIBLE]. PROFESSOR: There's a k, right? I need a new variable for where\nI'm going to cut up, right?",
    "start": "717380",
    "end": "725980"
  },
  {
    "text": "So fortunately, we have a lot\nof letters in the alphabet, i, j, k, so on and\nso forth, l, m.",
    "start": "725980",
    "end": "731029"
  },
  {
    "text": " AUDIENCE: i plus k. ",
    "start": "731030",
    "end": "737209"
  },
  {
    "text": "PROFESSOR: So let's say\nthat k is the place where we cut, to make our life easy. So I'm going to have dp of",
    "start": "737209",
    "end": "746269"
  },
  {
    "text": "AUDIENCE: Well i is\nthe starting point. PROFESSOR: OK AUDIENCE: And then, the\nendpoint is i plus k, right?",
    "start": "746270",
    "end": "754279"
  },
  {
    "text": "PROFESSOR: So what's k here? AUDIENCE: k is an actual number. It's not the offset,\nit's the actual number,",
    "start": "754280",
    "end": "760350"
  },
  {
    "text": "so it should be i to k. It depends how you define k. PROFESSOR: So I'm going to\nmake my life easy, and define k",
    "start": "760350",
    "end": "765900"
  },
  {
    "text": "as exactly the marking\nat which I cut. ",
    "start": "765900",
    "end": "770940"
  },
  {
    "text": "k is this 2 here.  And this is easier, trust me.",
    "start": "770940",
    "end": "778380"
  },
  {
    "text": "OK, plus? AUDIENCE: k j? ",
    "start": "778380",
    "end": "785030"
  },
  {
    "text": "PROFESSOR: OK, and? AUDIENCE: Cost of m--",
    "start": "785030",
    "end": "796156"
  },
  {
    "text": "AUDIENCE: j minus i, m of\nk minus m of i times m of j",
    "start": "796156",
    "end": "803910"
  },
  {
    "text": "minus m of k. PROFESSOR: Cool. Yeah, other way\naround-- doesn't matter. ",
    "start": "803910",
    "end": "810750"
  },
  {
    "text": "So now where does k go? We have to come up with\nnumbers for the loop, right?",
    "start": "810750",
    "end": "818373"
  },
  {
    "text": " AUDIENCE: Between i and j. AUDIENCE: j minus i.",
    "start": "818374",
    "end": "824522"
  },
  {
    "text": "AUDIENCE: Just for k in i to j. PROFESSOR: So if I have\nthe board from 1 to 4,",
    "start": "824522",
    "end": "832623"
  },
  {
    "text": "do I cut at 1? I can, but that's kind of weird. Because I'm recursing\non the same subproblem.",
    "start": "832624",
    "end": "839580"
  },
  {
    "text": "By the way, if you recurse\nto the same subproblem, what are you going to\nget as your running time?",
    "start": "839580",
    "end": "845150"
  },
  {
    "text": "Infinite. So let's not do that. So we're going to go from?",
    "start": "845150",
    "end": "851470"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: So going\nfrom i would be bad. So i plus 1.",
    "start": "851470",
    "end": "856990"
  },
  {
    "text": "2? AUDIENCE: j minus 1. PROFESSOR: Very good. AUDIENCE: Would it be m over\ni plus 1, because [INAUDIBLE].",
    "start": "856991",
    "end": "866480"
  },
  {
    "text": "PROFESSOR: So k is which\nmarking I'm cutting at. I never want to cut\ninside a marking.",
    "start": "866480",
    "end": "872020"
  },
  {
    "text": "However, I don't even\nknow these are integers. AUDIENCE: They wouldn't\nbe called [INAUDIBLE].",
    "start": "872020",
    "end": "877890"
  },
  {
    "text": "PROFESSOR: So k is\nwhich marking, i, j, and k are which\nmarking I'm cutting at. ",
    "start": "877890",
    "end": "884579"
  },
  {
    "text": "These are the only\ndiscrete things I have. This board is all filled\nwith real numbers.",
    "start": "884580",
    "end": "891132"
  },
  {
    "text": "So if I want to\ncut somewhere here, that's a real number--\nI don't like that. I want to have integers. So my markings help\nme get integers.",
    "start": "891132",
    "end": "900040"
  },
  {
    "text": "I only want to cut\nat the marking, so I always look at my problem\nin terms of which marking I'm",
    "start": "900040",
    "end": "905370"
  },
  {
    "text": "cutting it.  So this always\niterates over markings.",
    "start": "905370",
    "end": "911649"
  },
  {
    "text": "So this looks very much like\nthe parentheses problem, right?",
    "start": "911650",
    "end": "916790"
  },
  {
    "text": "Same subproblems, roughly\nthe same recursion. Turns out that these\nproblems, where",
    "start": "916790",
    "end": "922500"
  },
  {
    "text": "you're not considering\nsuffixes or prefixes, but rather you're\nconsidering substrings, are reasonably hard to come by,\nand reasonably hard to solve.",
    "start": "922500",
    "end": "930600"
  },
  {
    "text": "So if we give these\nto you, chances are they're going to be exactly\nlike the parentheses problem,",
    "start": "930600",
    "end": "935890"
  },
  {
    "text": "except for the cost function. This isn't what we had in the\nparentheses problem, right?",
    "start": "935890",
    "end": "942050"
  },
  {
    "text": "So you should be prepared\nto solve problems that look exactly like\nthe paren problem, but might have a\ndifferent cost function.",
    "start": "942050",
    "end": "949780"
  },
  {
    "text": "And this is how we solve it. OK. AUDIENCE: When you say that\nthe complexity determines",
    "start": "949780",
    "end": "955668"
  },
  {
    "text": "which type of dp\nexample we use, does that mean that a\nproblem can be solved",
    "start": "955668",
    "end": "963260"
  },
  {
    "text": "using any of dp examples?",
    "start": "963260",
    "end": "968514"
  },
  {
    "text": "It's just that the only thing\nthat changes is the complexity.",
    "start": "968514",
    "end": "973759"
  },
  {
    "text": "PROFESSOR: I don't\nthink you can map every approach\nonto every problem. For example, if you tried\nto map prefixes onto this,",
    "start": "973760",
    "end": "980450"
  },
  {
    "text": "you'd come up with\na solution that doesn't look at all\nthe possible choices, so your answer would\nbe sub-optimal.",
    "start": "980450",
    "end": "987540"
  },
  {
    "text": "So you'd come up with a fast,\nbut incorrect algorithm. However, if you take the\nproblem of find the longest",
    "start": "987540",
    "end": "995750"
  },
  {
    "text": "increasing sub-sequence,\nyou can definitely apply this technique to it. It's more general than\nsuffixes or prefixes.",
    "start": "995750",
    "end": "1001290"
  },
  {
    "text": "So it's going to work, but\nit's going to be slower. So in theory, what\nyou should do is,",
    "start": "1001290",
    "end": "1006610"
  },
  {
    "text": "you have all these techniques. Given a problem, you\ntry all the techniques. You see which ones apply,\nand out of those, you",
    "start": "1006610",
    "end": "1013720"
  },
  {
    "text": "see which one gives you\nthe best running time. In practice, if we give\nyou the running time,",
    "start": "1013720",
    "end": "1019620"
  },
  {
    "text": "you match it to the techniques\nthat match the running time. You start backwards from\nthe stuff that you know.",
    "start": "1019620",
    "end": "1025699"
  },
  {
    "text": " OK.",
    "start": "1025700",
    "end": "1032869"
  },
  {
    "text": "Does this problem make sense? Sweet.",
    "start": "1032869",
    "end": "1038179"
  },
  {
    "text": "Now let's do a hard problem. Do people remember hashing?",
    "start": "1038180",
    "end": "1043819"
  },
  {
    "text": "You have one minute\nto remember hashing while I erase the board. [LAUGHING] So suppose we want\nto implement the set.",
    "start": "1043819",
    "end": "1051940"
  },
  {
    "text": "The way we're going to implement\nthe set is, we have n elements. ",
    "start": "1051940",
    "end": "1059809"
  },
  {
    "text": "We're going to put\nthem into the set, so for i goes from\n1 through n, we're",
    "start": "1059810",
    "end": "1070020"
  },
  {
    "text": "going to insert element\ni, so first we're going to insert all the\nelements into the set.",
    "start": "1070020",
    "end": "1077730"
  },
  {
    "text": "And then after that, given a\nrandom number, we want to see is it in the set, or not.",
    "start": "1077730",
    "end": "1083810"
  },
  {
    "text": "So for some other number--\nI used n before, so let's",
    "start": "1083810",
    "end": "1089190"
  },
  {
    "text": "use-- for some other number f,\nwe want to see is f in the set,",
    "start": "1089190",
    "end": "1095450"
  },
  {
    "text": "or is f not in the set? ",
    "start": "1095450",
    "end": "1102140"
  },
  {
    "text": "What data structure would\nyou use normally for this? ",
    "start": "1102140",
    "end": "1107490"
  },
  {
    "text": "A hash table, right? You stick everything\ninto a hash table, then you try to\nfind the elements.",
    "start": "1107490",
    "end": "1112820"
  },
  {
    "text": "If you find them,\nthen you say yes. If not, then you say no. Well, it turns out\nthat this would",
    "start": "1112820",
    "end": "1118710"
  },
  {
    "text": "take more memory\nthan what we have. So instead, we're\ngoing to do this.",
    "start": "1118710",
    "end": "1124720"
  },
  {
    "text": "We're going to have a\nhash table of m bits. ",
    "start": "1124720",
    "end": "1133660"
  },
  {
    "text": "So these are m bits. And say we have a\nhash function that",
    "start": "1133660",
    "end": "1138669"
  },
  {
    "text": "satisfies with uniform\nhashing, so given any element, the value is anywhere\nfrom 0 to m minus 1,",
    "start": "1138670",
    "end": "1147784"
  },
  {
    "text": "and they're all independent.  So the way we're going\nto insert an element",
    "start": "1147784",
    "end": "1154600"
  },
  {
    "text": "is-- this table is T-- we're\ngoing to say that T of h of ai",
    "start": "1154600",
    "end": "1163039"
  },
  {
    "text": "equals 1. So this is a table of bits. For every element\nwe hash the element,",
    "start": "1163040",
    "end": "1168570"
  },
  {
    "text": "and we set the\ncorresponding bit to 1. So we're going to have some 1s,\nand some zeros in the table.",
    "start": "1168570",
    "end": "1178230"
  },
  {
    "text": "Say if this is ai, it\nhashes somewhere here.",
    "start": "1178230",
    "end": "1183679"
  },
  {
    "text": "OK so the question\nis, we inserted n elements into a\ntable of size n.",
    "start": "1183680",
    "end": "1189560"
  },
  {
    "text": "Given a new element, f, where\nf stands for false positive-- f",
    "start": "1189560",
    "end": "1195110"
  },
  {
    "text": "is not one of the\nelements that we inserted. ",
    "start": "1195110",
    "end": "1202040"
  },
  {
    "text": "I want to know what's the\nprobability that the set will say that the element is\nin the set, so basically,",
    "start": "1202040",
    "end": "1208700"
  },
  {
    "text": "the probability of\na false positive. AUDIENCE: So what are we\ndoing about [INAUDIBLE]?",
    "start": "1208700",
    "end": "1214659"
  },
  {
    "text": "PROFESSOR: Nothing. AUDIENCE: Is it chaining,\nis it open addressing? Does it even matter?",
    "start": "1214660",
    "end": "1221604"
  },
  {
    "text": "PROFESSOR: So we're not\ninserting the elements into the table. This table only has bits.",
    "start": "1221604",
    "end": "1226889"
  },
  {
    "text": "The elements are lost\ncompletely after we insert them. So the tradeoff is\nuses a lot less memory.",
    "start": "1226890",
    "end": "1234200"
  },
  {
    "text": "Instead of having to\nstore entire elements, you just store bits. On the downside you're going\nto have false positives.",
    "start": "1234200",
    "end": "1240927"
  },
  {
    "text": "Because if I have a\ndifferent element, say f, if it hashes\nto the same location,",
    "start": "1240927",
    "end": "1247090"
  },
  {
    "text": "then the set is going to\nsay, yeah, it's in the set. So you get false positives.",
    "start": "1247090",
    "end": "1253041"
  },
  {
    "text": "Would you get false negatives? ",
    "start": "1253041",
    "end": "1259230"
  },
  {
    "text": "No, right?  Because you start out\nwith a table of 0's,",
    "start": "1259230",
    "end": "1265790"
  },
  {
    "text": "and you only set\nthe table to ones for the numbers\nthat match to hashes",
    "start": "1265790",
    "end": "1271570"
  },
  {
    "text": "of elements that are in the set. Did you have a question? OK. ",
    "start": "1271570",
    "end": "1279910"
  },
  {
    "text": "OK, do we understand\nthe problem, before we attempt to solve it? AUDIENCE: Is it probably 1/m?",
    "start": "1279910",
    "end": "1287250"
  },
  {
    "text": "PROFESSOR: You'd wish, but no. ",
    "start": "1287250",
    "end": "1292860"
  },
  {
    "text": "AUDIENCE: It's less than n/m.  PROFESSOR: OK, I like that.",
    "start": "1292860",
    "end": "1298559"
  },
  {
    "text": "So what are you thinking? AUDIENCE: If there are\nno collisions previously, then it would equal to n/m, but\nthere are collisions, probably",
    "start": "1298560",
    "end": "1308730"
  },
  {
    "text": "collisions. PROFESSOR: OK, I'm going to\nopen up a window in your head and tell everyone else the small\nsteps you took to get here.",
    "start": "1308730",
    "end": "1316769"
  },
  {
    "text": "So we have this new number f. How are we going to check\nif it's in the set or not? We're going to compute\nh of f, and we're",
    "start": "1316770",
    "end": "1324299"
  },
  {
    "text": "going to check if t\nof h of f is 0 or 1.",
    "start": "1324300",
    "end": "1329580"
  },
  {
    "text": " f is different from\nall the other elements.",
    "start": "1329580",
    "end": "1335870"
  },
  {
    "text": "So its hash value is independent\nfrom all the other hash values we had before. ",
    "start": "1335870",
    "end": "1344300"
  },
  {
    "text": "We don't really care\nabout this anymore, after we have the\nindependence assumption.",
    "start": "1344300",
    "end": "1349900"
  },
  {
    "text": "So h of f is just some\nrandom position in the table. So the question is, given some\nrandom position in the table,",
    "start": "1349900",
    "end": "1358080"
  },
  {
    "text": "will that be a 0 or a 1? How do you know? If I knew how many 1's\nI have in the table--",
    "start": "1358080",
    "end": "1364909"
  },
  {
    "text": "if I have k 1's in the table,\nand automatically this means n minus k 0's-- then what's the\nprobability that h of f will",
    "start": "1364910",
    "end": "1376190"
  },
  {
    "text": "point to a 1? ",
    "start": "1376190",
    "end": "1386332"
  },
  {
    "text": "AUDIENCE: k/m. PROFESSOR: Yes. So the hash takes\nm possible values.",
    "start": "1386332",
    "end": "1391580"
  },
  {
    "text": "k of them are 1's. So the probability that the hash\nis going to guess a 1 is k/m.",
    "start": "1391580",
    "end": "1398750"
  },
  {
    "text": "So if we knew how many 1's we\nhave, then this is the answer.",
    "start": "1398750",
    "end": "1403820"
  },
  {
    "text": "We know that we're going to\nhave at most n 1's-- that's what you're thinking, right? So k is definitely\nsmaller or equal to n,",
    "start": "1403820",
    "end": "1411950"
  },
  {
    "text": "so the answer definitely has to\nbe smaller or equal than n/m.",
    "start": "1411950",
    "end": "1419899"
  },
  {
    "text": "Now if you're in a\nrush, you might say, well, we inserted n\nelements, so we're definitely",
    "start": "1419900",
    "end": "1424960"
  },
  {
    "text": "going to have n 1's here. That is not true. The hashes of all the\nelements are independent.",
    "start": "1424960",
    "end": "1433059"
  },
  {
    "text": "So there is some probability\nthat two elements will hash to the same value, and as\nthe number of elements grows,",
    "start": "1433060",
    "end": "1439210"
  },
  {
    "text": "that probability also grows.  OK, so now by\nlooking at this, we",
    "start": "1439210",
    "end": "1446510"
  },
  {
    "text": "got rid of this\npart of the problem. We don't care that\nthere's a new element. We don't care that\nit's a false positive.",
    "start": "1446510",
    "end": "1452080"
  },
  {
    "text": "All that we care\nabout is how many 1's do we have in the table\nafter inserting n values.",
    "start": "1452080",
    "end": "1458080"
  },
  {
    "text": " Well, what's that?",
    "start": "1458080",
    "end": "1463760"
  },
  {
    "text": "That's m times the probability\nthat a slot in the table is 1.",
    "start": "1463760",
    "end": "1481810"
  },
  {
    "text": "Right, the probability that the\nslot in the table is 1 is k/m.",
    "start": "1481810",
    "end": "1486820"
  },
  {
    "text": "So if we know this probability,\nand we multiply it by m, then we get k. ",
    "start": "1486820",
    "end": "1497450"
  },
  {
    "text": "People still with me? AUDIENCE: And what does\nthat variable represent, h?",
    "start": "1497450",
    "end": "1503470"
  },
  {
    "text": "PROFESSOR: This is k. Represents that my\nhandwriting sucks, basically. AUDIENCE: I mean, why do we\ndo m times the probability.",
    "start": "1503470",
    "end": "1510530"
  },
  {
    "text": "That's the the expected\nnumber of 1's in the table? PROFESSOR: Yeah.",
    "start": "1510530",
    "end": "1515874"
  },
  {
    "text": " Yeah, this is E of k, I guess.",
    "start": "1515874",
    "end": "1524330"
  },
  {
    "text": "So then our final answer\nis this thing divided by m.",
    "start": "1524330",
    "end": "1530194"
  },
  {
    "text": " So the answer is the\nexpected value of k,",
    "start": "1530194",
    "end": "1540389"
  },
  {
    "text": "or you can just think of it as\nthe average value of k, divided by m. So this is m times this\nprobability, divided by m.",
    "start": "1540390",
    "end": "1553300"
  },
  {
    "text": "So it is exactly\nthis probability. So the thing that\nwe want to focus on",
    "start": "1553300",
    "end": "1559919"
  },
  {
    "text": "is, what's the probability\nthat a random slot in the table",
    "start": "1559920",
    "end": "1567710"
  },
  {
    "text": "is a 1? ",
    "start": "1567710",
    "end": "1576899"
  },
  {
    "text": "AUDIENCE: It's equal to\n1 minus the probability that it was never fixed. PROFESSOR: Exactly,\nthe first thing we do.",
    "start": "1576900",
    "end": "1586090"
  },
  {
    "text": "1 minus the probability\nthat a slot is 0. ",
    "start": "1586090",
    "end": "1593269"
  },
  {
    "text": "This is easy, right,\nlike it looks easy. But this makes a\nhuge difference, because once we're here,\nwell, a slot is zero",
    "start": "1593270",
    "end": "1602659"
  },
  {
    "text": "if none of the\ninsertions made it a one. And the insertions\nare all independent.",
    "start": "1602660",
    "end": "1607870"
  },
  {
    "text": " So this is like,\nyou're flipping a coin.",
    "start": "1607870",
    "end": "1614029"
  },
  {
    "text": "What's the probability that\nafter you flip it n times, you never get a head? ",
    "start": "1614030",
    "end": "1621450"
  },
  {
    "text": "So this is 1 minus AUDIENCE: 1 over m\nto the something.",
    "start": "1621450",
    "end": "1627950"
  },
  {
    "text": "PROFESSOR: That--\nSo a slot is 0 means that no number was\ninserted in it.",
    "start": "1627950",
    "end": "1634260"
  },
  {
    "text": "We're inserting n numbers,\nso it's the probability that a single number\nwas not necessarily",
    "start": "1634260",
    "end": "1647940"
  },
  {
    "text": "in the slot, raised\nto the power of n.",
    "start": "1647940",
    "end": "1656350"
  },
  {
    "text": "So we have n independent\nexperiments, right? Every time you insert a\nnumber into the hash function,",
    "start": "1656350",
    "end": "1663390"
  },
  {
    "text": "that's one experiment. The hash function gives\nyou independent values for all the elements.",
    "start": "1663390",
    "end": "1670560"
  },
  {
    "text": "So all the insertions are\nindependent of each other. If, in a single insertion,\nyou've hit that slot,",
    "start": "1670560",
    "end": "1678140"
  },
  {
    "text": "then you've made\nit a 1-- game over. So the slot is only a zero\nif none of the insertions",
    "start": "1678140",
    "end": "1683669"
  },
  {
    "text": "make it the 1. So you take the probability\nthat the insertion doesn't make it a one, and you\nraise it to the power n,",
    "start": "1683670",
    "end": "1689810"
  },
  {
    "text": "because that has to\nhappen n times in order for the whole thing\nto be successful. ",
    "start": "1689810",
    "end": "1704320"
  },
  {
    "text": "And the probability\nthat the number was not inserted in a slot is\n1 minus the probability",
    "start": "1704320",
    "end": "1709519"
  },
  {
    "text": "that it was inserted. Right, we're doing this again. 1 minus probability\nthat a number hit.",
    "start": "1709520",
    "end": "1719710"
  },
  {
    "text": " Well what this probability?",
    "start": "1719710",
    "end": "1725205"
  },
  {
    "text": " Uniform hashing. AUDIENCE: 1/m PROFESSOR: 1/m.",
    "start": "1725205",
    "end": "1730490"
  },
  {
    "text": " So this whole thing is 1 minus 1\nminus 1, over m to the power n.",
    "start": "1730490",
    "end": "1741690"
  },
  {
    "text": "1 minus m minus 1,\nover m to the power n.",
    "start": "1741690",
    "end": "1747470"
  },
  {
    "start": "1747470",
    "end": "1753398"
  },
  {
    "text": "AUDIENCE: Can we go\nthrough this again. From 1 minus probability\nof a slot is 0, to 1",
    "start": "1753398",
    "end": "1760067"
  },
  {
    "text": "minus probability of a number\nwas not inserted in a slot?",
    "start": "1760067",
    "end": "1765260"
  },
  {
    "text": "PROFESSOR: OK. So first off, the\npoint of the problem. It's our problem, right? Don't panic, don't be angry.",
    "start": "1765260",
    "end": "1771283"
  },
  {
    "text": "You're not going to have\nsome this hard on the exam. The point of this is, I want\nto go through probabilities a little bit, and I want\nto go through hashing",
    "start": "1771284",
    "end": "1777900"
  },
  {
    "text": "and the math behind hashing. Because remembering\nthat will be useful.",
    "start": "1777900",
    "end": "1783140"
  },
  {
    "text": "OK, so now you said you're\nhaving trouble with this step?",
    "start": "1783140",
    "end": "1788970"
  },
  {
    "text": " OK, so let's see.",
    "start": "1788970",
    "end": "1795470"
  },
  {
    "text": "Let's do this here. So we have this\ntable here, right?",
    "start": "1795470",
    "end": "1801539"
  },
  {
    "text": "And we have n elements-- e1,\ne2, e3, all the way through en.",
    "start": "1801540",
    "end": "1808550"
  },
  {
    "text": "How do we put them in the table? We hash each of them,\nand each of them maps",
    "start": "1808550",
    "end": "1813720"
  },
  {
    "text": "to a random slot in the table. If these are the slots,\nthen e1 might map here,",
    "start": "1813720",
    "end": "1822059"
  },
  {
    "text": "e2 might map here,\ne3 might map here, e4 might map here,\nso on and so forth.",
    "start": "1822060",
    "end": "1830220"
  },
  {
    "text": "So I have arrows, right? Every time I do a hash, that's\ngoing to set something to a 1.",
    "start": "1830220",
    "end": "1838162"
  },
  {
    "text": "The numbers don't necessarily\nmap to different slots, because each number, on its\nown, maps to a random slot.",
    "start": "1838162",
    "end": "1844820"
  },
  {
    "text": "So these are all\ngoing to be ones. And everything\nelse becomes zero.",
    "start": "1844820",
    "end": "1850480"
  },
  {
    "text": "If no number maps\nto a slot, it is 0. OK, let's look at\none slot, any slot.",
    "start": "1850480",
    "end": "1858490"
  },
  {
    "text": "So let's say I'm looking\nat this slot over here. Can you guys see, by the way?",
    "start": "1858490",
    "end": "1863870"
  },
  {
    "text": "OK, so let's look\nat this guy here. What's the probability\nthat it's a 0?",
    "start": "1863870",
    "end": "1869940"
  },
  {
    "text": "So the probability\nthat the slot is a 0 is the probability that\nthe first number didn't",
    "start": "1869940",
    "end": "1881180"
  },
  {
    "text": "map to it-- otherwise\nit would be a 1-- e1",
    "start": "1881180",
    "end": "1887560"
  },
  {
    "text": "didn't hash to that slot. ",
    "start": "1887560",
    "end": "1893410"
  },
  {
    "text": "e2 also couldn't match\nto that slot, right? So it's the probability that\ne1 didn't hash to the slot,",
    "start": "1893410",
    "end": "1903179"
  },
  {
    "text": "and e2 didn't hash\ninto slot, and e3",
    "start": "1903180",
    "end": "1914940"
  },
  {
    "text": "didn't hash into the slot,\nso on so forth, right? All the way up until en\ndidn't hash to the slot.",
    "start": "1914940",
    "end": "1924600"
  },
  {
    "text": "This makes sense? Now these are all\nindependent events, because all the hashes\nare independent,",
    "start": "1924600",
    "end": "1930440"
  },
  {
    "text": "by the uniform\nhashing assumption. So then I can turn\nands into products.",
    "start": "1930440",
    "end": "1936860"
  },
  {
    "text": "So I can say that this\nequals to the probability that e1 didn't hash into the\nslot, times the probability",
    "start": "1936860",
    "end": "1948500"
  },
  {
    "text": "that e2 didn't hash into the\nslot, times the probability",
    "start": "1948500",
    "end": "1954990"
  },
  {
    "text": "that e3 didn't hash into the\nslot, so on and so forth, all the way to the probability\nthat en didn't hash.",
    "start": "1954990",
    "end": "1963915"
  },
  {
    "start": "1963915",
    "end": "1971800"
  },
  {
    "text": "So since I'm dealing with\nthe same hash function, turns out that all the\nprobabilities are the same.",
    "start": "1971800",
    "end": "1976919"
  },
  {
    "text": "So there, the probability\nthat some fixed number didn't hash, to the power n.",
    "start": "1976920",
    "end": "1986700"
  },
  {
    "text": " So this is how I got\nfrom here to here.",
    "start": "1986700",
    "end": "1995299"
  },
  {
    "text": "Probabilities and the\nproperties of hashes and hashing assumptions. So you guys should have\nthose on your cheat sheet,",
    "start": "1995300",
    "end": "2002700"
  },
  {
    "text": "and maybe if you have time,\nreview probabilities a bit. AUDIENCE: What is\nthe probability that any given one\ndoesn't hash, 1/m?",
    "start": "2002700",
    "end": "2009540"
  },
  {
    "text": " So if e1 doesn't\nhash in that spot,",
    "start": "2009540",
    "end": "2014985"
  },
  {
    "text": "isn't that probability 1/m? PROFESSOR: Not quite. You're close, but not quite.",
    "start": "2014985",
    "end": "2021520"
  },
  {
    "text": "So you're saying that\nthe probability that e1 doesn't hash to\nthis slot is 1/m?",
    "start": "2021520",
    "end": "2027722"
  },
  {
    "text": "AUDIENCE: I guess\nit's 1 minus 1/m. PROFESSOR: Exactly. The probability that\nit would hash here is 1/m, because it has\nto pick that one slot out",
    "start": "2027722",
    "end": "2035480"
  },
  {
    "text": "of n possible slots. But if you're just\nsaying, all I want is that it doesn't\nhash here, well, it",
    "start": "2035480",
    "end": "2042919"
  },
  {
    "text": "means it can hash anywhere else. So it has m minus 1 options. It can go to any of\nthose m minus 1 places,",
    "start": "2042920",
    "end": "2049850"
  },
  {
    "text": "just not to that one place. So m minus 1 over m. ",
    "start": "2049850",
    "end": "2059845"
  },
  {
    "text": "AUDIENCE: It's interesting\nit went the other direction. Instead of saying, it's\n1, it's 1 minus it.",
    "start": "2059845",
    "end": "2065050"
  },
  {
    "text": " Wouldn't it have been\njust as easy to go the other direction, or no?",
    "start": "2065050",
    "end": "2070408"
  },
  {
    "text": "PROFESSOR: No. Not doing this makes\nthe problem hard, so that's why we're doing it.",
    "start": "2070409",
    "end": "2076489"
  },
  {
    "text": "This kind of flipping is\neasy to do conceptually, but it might make a hard problem\ninto a really easy problem,",
    "start": "2076489",
    "end": "2083152"
  },
  {
    "text": "or at least into\na do-able problem. ",
    "start": "2083152",
    "end": "2089923"
  },
  {
    "text": "AUDIENCE: Isn't it\nthis the same thing? I guess maybe not totally.",
    "start": "2089923",
    "end": "2095473"
  },
  {
    "text": "PROFESSOR: So it is exactly\nthe same in terms of the math, but computing this without\nturning it into this",
    "start": "2095474",
    "end": "2101875"
  },
  {
    "text": "is really hard. AUDIENCE: Any given\nslot is 1, isn't it",
    "start": "2101875",
    "end": "2107070"
  },
  {
    "text": "kind of like what we just\nsaid, except if the probability of any one mapping is 1/m,\nmapping to a 1, right?",
    "start": "2107070",
    "end": "2117020"
  },
  {
    "text": "And then you take\n1 over m raised to the n, that's the\nprobability of it being a 1",
    "start": "2117020",
    "end": "2123636"
  },
  {
    "text": "at that one place, right? PROFESSOR: No, not quite. ",
    "start": "2123636",
    "end": "2137304"
  },
  {
    "text": "Yeah. OK, so are we getting this?",
    "start": "2137304",
    "end": "2143610"
  },
  {
    "text": "Somewhat? Yes? AUDIENCE: So the probability\nof a false positive, you're saying that's what's\nthe probability that you",
    "start": "2143610",
    "end": "2150666"
  },
  {
    "text": "get the 1, if you actually\nshould [INAUDIBLE] the 0. It's because multiple things\nmapped to that one slot, right?",
    "start": "2150666",
    "end": "2157479"
  },
  {
    "text": "PROFESSOR: So the probability\nof a false positive is the probability that, given\na new element, when we hash it",
    "start": "2157479",
    "end": "2164420"
  },
  {
    "text": "we get the 1. The hash of that new element\nis independent of all",
    "start": "2164420",
    "end": "2169927"
  },
  {
    "text": "the other hashes.  AUDIENCE: Then why is\nit simple in probability that you get the 1?",
    "start": "2169927",
    "end": "2177877"
  },
  {
    "text": "PROFESSOR: So if I\nhave a new element, I'm going to compute\nits hash, and I'm going to look in the table.",
    "start": "2177877",
    "end": "2182970"
  },
  {
    "text": "If I see a 1, I'm\ngoing to say, oh. AUDIENCE: Oh, it's\na new element. OK. PROFESSOR: Yeah,\nso it's something that was not in the set.",
    "start": "2182970",
    "end": "2189230"
  },
  {
    "text": "AUDIENCE: OK. PROFESSOR: Okay, cool. ",
    "start": "2189230",
    "end": "2196940"
  },
  {
    "text": "OK, so let's see if we can\ndo a harder version of this. ",
    "start": "2196940",
    "end": "2203000"
  },
  {
    "text": "So this probability isn't\ngreat, but if we do one trick,",
    "start": "2203000",
    "end": "2208030"
  },
  {
    "text": "we can make this really nice. And this puts together a trick\ncalled bloom filters that is used in all\nsorts of situations.",
    "start": "2208030",
    "end": "2214490"
  },
  {
    "start": "2214490",
    "end": "2221510"
  },
  {
    "text": "So for Bloom filters, we\nstill have n elements,",
    "start": "2221510",
    "end": "2227220"
  },
  {
    "text": "and we still have\na table of m bits. ",
    "start": "2227220",
    "end": "2236310"
  },
  {
    "text": "What changes this time is\ninstead of having one function, we have k hash functions.",
    "start": "2236310",
    "end": "2241510"
  },
  {
    "start": "2241510",
    "end": "2247570"
  },
  {
    "text": "So when we take an\nelement and insert it, we're taking element i.",
    "start": "2247570",
    "end": "2252930"
  },
  {
    "text": "The way to insert\nit is we're going to compute its hash value\nusing all the hash functions,",
    "start": "2252930",
    "end": "2263980"
  },
  {
    "text": "and set all the\ncorresponding bits to 1. ",
    "start": "2263980",
    "end": "2274010"
  },
  {
    "text": "So insert ei becomes,\nfor j in 1 through k,",
    "start": "2274010",
    "end": "2286350"
  },
  {
    "text": "the table bit corresponding\nto the hash function, j, of the element is 1.",
    "start": "2286350",
    "end": "2293970"
  },
  {
    "text": "So each element\nsets k bits to 1. ",
    "start": "2293970",
    "end": "2299050"
  },
  {
    "text": "Now how do we check if an\nelement is in the table? ",
    "start": "2299050",
    "end": "2306395"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] ",
    "start": "2306395",
    "end": "2314680"
  },
  {
    "text": "PROFESSOR: Since,\nfor every element, we set all the corresponding\nk bits to 1, now when we have a new\nelement, we're going",
    "start": "2314680",
    "end": "2320850"
  },
  {
    "text": "to compute to the k positions,\nand if any of them is a 0, then we couldn't have possibly\nput that in the table.",
    "start": "2320850",
    "end": "2327539"
  },
  {
    "start": "2327540",
    "end": "2332610"
  },
  {
    "text": "So all T of h j\nof f have to be 1.",
    "start": "2332610",
    "end": "2343830"
  },
  {
    "text": " So for every element,\nwe hashed it k times,",
    "start": "2343830",
    "end": "2349070"
  },
  {
    "text": "and set the corresponding bits. If we have a new element, and\nby hashing we get here and here,",
    "start": "2349070",
    "end": "2357730"
  },
  {
    "text": "but we also get here,\nand this guy was a zero, we know we definitely\ndidn't put this in.",
    "start": "2357730",
    "end": "2363137"
  },
  {
    "text": " So now what's the probability\nof a false positive?",
    "start": "2363137",
    "end": "2368480"
  },
  {
    "text": " AUDIENCE: My first intuition is\njust raising that to a power.",
    "start": "2368480",
    "end": "2376384"
  },
  {
    "text": " AUDIENCE: The probability\nthat when you check--",
    "start": "2376384",
    "end": "2384222"
  },
  {
    "text": "PROFESSOR: Oh, I forgot to\nsay something, by the way. The k hash functions-- I think\nthey satisfy simple uniform",
    "start": "2384222",
    "end": "2390319"
  },
  {
    "text": "hashing. I'm not sure if that's\nthe right thing, but they all have independent\nvalues from each other.",
    "start": "2390320",
    "end": "2395345"
  },
  {
    "text": "So they're all independent. ",
    "start": "2395345",
    "end": "2402080"
  },
  {
    "text": "So for any number you\ngive, any hash function returns a value that's\nindependent of all the other hash functions,\nand they're all 0",
    "start": "2402080",
    "end": "2410551"
  },
  {
    "text": "through n minus 1. ",
    "start": "2410551",
    "end": "2418500"
  },
  {
    "text": "AUDIENCE: Why is not that\njust raised to something? Because we know the\nprobability-- OK, actually we need to\nrecalculate that.",
    "start": "2418500",
    "end": "2425290"
  },
  {
    "text": "AUDIENCE: Because it's the\nprobability that all of them are 1, even though you\nhaven't hashed yet.",
    "start": "2425290",
    "end": "2430606"
  },
  {
    "start": "2430606",
    "end": "2435930"
  },
  {
    "text": "PROFESSOR: So the false\npositive, the probability of false positives\nis the probability that all the k slots that\ncorrespond to f are 1's, right?",
    "start": "2435930",
    "end": "2446995"
  },
  {
    "start": "2446995",
    "end": "2454760"
  },
  {
    "text": "So, since the hash functions\nare all independent,",
    "start": "2454760",
    "end": "2461620"
  },
  {
    "text": "this is the probability\nthat one slot is the 1, raised to the power k. Right, because they're\nall independent slots.",
    "start": "2461620",
    "end": "2468940"
  },
  {
    "text": "So it's the probability\nthat one slot",
    "start": "2468940",
    "end": "2474160"
  },
  {
    "text": "is a 1, raised to the power k. OK, so now what's\nthe probability",
    "start": "2474160",
    "end": "2480510"
  },
  {
    "text": "that one slot is a 1? It looks a lot like\nthis problem, right?",
    "start": "2480510",
    "end": "2486170"
  },
  {
    "text": "Except there's a tweak. How many times did we\nput the 1 in the table? ",
    "start": "2486170",
    "end": "2493430"
  },
  {
    "text": "So here, we put a 1 in the\ntable for every element. So we have n sets, right?",
    "start": "2493430",
    "end": "2502920"
  },
  {
    "text": "So n times we're going to\nset t of something to 1.",
    "start": "2502920",
    "end": "2509220"
  },
  {
    "text": " Right? For every element,\nwe have one set.",
    "start": "2509220",
    "end": "2515690"
  },
  {
    "text": "We set one bit to 1. It might have been said\nbefore-- that's something else. Yes? AUDIENCE: So here it's\nraised to the m k?",
    "start": "2515690",
    "end": "2523570"
  },
  {
    "text": "PROFESSOR: Yeah, pretty much. So here, for every element\nwe hash it through all the k functions, and set the\ncorresponding bits to 1.",
    "start": "2523570",
    "end": "2532210"
  },
  {
    "text": "So one element generates\nk set operations,",
    "start": "2532210",
    "end": "2540369"
  },
  {
    "text": "and we have n elements,\nso we set n k bits to 1. ",
    "start": "2540370",
    "end": "2555060"
  },
  {
    "text": "Does this make sense? AUDIENCE: Can two hash functions\npoint to the same slot? PROFESSOR: Sure.",
    "start": "2555060",
    "end": "2560420"
  },
  {
    "text": " But they're all\nindependent, and that's the only thing that matters.",
    "start": "2560420",
    "end": "2566840"
  },
  {
    "text": "So every time we set the\nbit, which bit was set is independent of all\nthe other bits we set,",
    "start": "2566840",
    "end": "2574380"
  },
  {
    "text": "because all the hash\nfunctions are independent, and all the values are\nindependent of each other. ",
    "start": "2574380",
    "end": "2581830"
  },
  {
    "text": "So this time, the table size is\nstill m, so that didn't change. This time we set n bits to 1,\nthis time we set n k bits to 1.",
    "start": "2581830",
    "end": "2588750"
  },
  {
    "text": "So then the right thing\nto do is copy this answer, and replace n with n k.",
    "start": "2588750",
    "end": "2594790"
  },
  {
    "text": "And if you have to\nwrite the proof, you'd copy-paste the proof\nand replace n with n k.",
    "start": "2594790",
    "end": "2599969"
  },
  {
    "start": "2599969",
    "end": "2606460"
  },
  {
    "text": "So this is 1 minus m minus\n1, over m, times n k.",
    "start": "2606460",
    "end": "2612900"
  },
  {
    "text": " And of course you should\ngo through the whole thing",
    "start": "2612900",
    "end": "2617940"
  },
  {
    "text": "in your head and convince\nyourselves that this is true. AUDIENCE: Does that say one\nof the elements is what? k, something?",
    "start": "2617940",
    "end": "2624460"
  },
  {
    "text": "AUDIENCE: Sets. PROFESSOR: Bit sets. So one element sets k bits\nin the table, not necessarily",
    "start": "2624460",
    "end": "2631920"
  },
  {
    "text": "different bits, just\nindependent bits. So if you have n\nelements altogether, they set n times k bits.",
    "start": "2631920",
    "end": "2637913"
  },
  {
    "start": "2637913",
    "end": "2649120"
  },
  {
    "text": "This thing gets run n times\nk times, whereas here,",
    "start": "2649120",
    "end": "2654880"
  },
  {
    "text": "the set operation gets\nrun n times in total.",
    "start": "2654880",
    "end": "2661180"
  },
  {
    "text": "That's the difference\nin the two problems. ",
    "start": "2661180",
    "end": "2670359"
  },
  {
    "text": "Right here you have one\nfunction for each element, here you have k hash functions. ",
    "start": "2670360",
    "end": "2684240"
  },
  {
    "text": "This is hard, right? Well, it's the hardest\nhashing problem",
    "start": "2684240",
    "end": "2690060"
  },
  {
    "text": "that I could think\nabout and that makes us go through\nprobabilities and through all the hash stuff.",
    "start": "2690060",
    "end": "2695990"
  },
  {
    "text": "The problems on the exam will\nbe easier, so one, don't panic. Two, review hashing,\nreview probabilities.",
    "start": "2695990",
    "end": "2702720"
  },
  {
    "text": "When I said, from the\ntheory, this is what you get, if you didn't understand that\nthen please review the theory.",
    "start": "2702720",
    "end": "2709539"
  },
  {
    "text": "AUDIENCE: Why is\nit raised to the k? Because we did down there,\nif we replace n with n k,",
    "start": "2709540",
    "end": "2714590"
  },
  {
    "text": "then we'd just get\neverything except. PROFESSOR: So this thing\nin here is the answer",
    "start": "2714590",
    "end": "2722510"
  },
  {
    "text": "to the previous problem,\nexcept you take an n",
    "start": "2722510",
    "end": "2728500"
  },
  {
    "text": "and you replace it with an n k. So this is the probability\nthat one bit is set to 1.",
    "start": "2728500",
    "end": "2736559"
  },
  {
    "text": "But here, when you're\ngiven an element, you're going to hash it through\nthe k functions-- you take this guy-- you're going to hash\nit through the k functions,",
    "start": "2736560",
    "end": "2744550"
  },
  {
    "text": "and you're going to\ncheck all the bits. So you're going to check k bits.",
    "start": "2744550",
    "end": "2750450"
  },
  {
    "text": "So as long as any of the\nk bits is a zero, not a false positive. So we need all the\nk bits to be a 1.",
    "start": "2750450",
    "end": "2758812"
  },
  {
    "text": "AUDIENCE: Oh, I see.  AUDIENCE: What if the hash\nfunctions are dependent?",
    "start": "2758812",
    "end": "2764977"
  },
  {
    "text": "PROFESSOR: Then\nbecome intractable.  AUDIENCE: And what if they are?",
    "start": "2764977",
    "end": "2771529"
  },
  {
    "text": " I think the in this problem,\nthe way they are being hashed,",
    "start": "2771530",
    "end": "2779770"
  },
  {
    "text": "that becomes\ndependent, because I think there were some problems\nwhere, if something is being hashed somewhere,\nthen the probability--",
    "start": "2779770",
    "end": "2787693"
  },
  {
    "text": "there could be\nhash functions that would put the other\nthing in the next slot.",
    "start": "2787694",
    "end": "2793980"
  },
  {
    "text": "PROFESSOR: Yes, so you want\nto reduce these problems to independent hashing. If you look at the\nproofs, all the proofs",
    "start": "2793980",
    "end": "2800050"
  },
  {
    "text": "assume uniform hashing,\nsimple uniform, whatever it takes to get the\nmath down to independence.",
    "start": "2800050",
    "end": "2805722"
  },
  {
    "text": "Because this is the\nonly thing that we know how to solve\nwith probabilities. If everything is\nindependent, then things",
    "start": "2805722",
    "end": "2811090"
  },
  {
    "text": "multiply and add up in the right\nplaces, and everything is easy. If things are\ndependent, then proofs",
    "start": "2811090",
    "end": "2816720"
  },
  {
    "text": "become really, really hard. So whenever you have\ndependent things, you want to find a way to reduce\nthat to independent things.",
    "start": "2816720",
    "end": "2822397"
  },
  {
    "start": "2822397",
    "end": "2835560"
  },
  {
    "text": "Is everyone tired,\nor do you guys really not like this problem? By the way, really\ncool trick-- so this",
    "start": "2835560",
    "end": "2843180"
  },
  {
    "text": "turns out to be a\nlot better than that, and I think the\noptimal value of k is around square roots of log n.",
    "start": "2843180",
    "end": "2850150"
  },
  {
    "text": "And that gives you some\nfilters with a really low false positive rate.",
    "start": "2850150",
    "end": "2856244"
  },
  {
    "text": "AUDIENCE: What do\nyou mean by optimal? PROFESSOR: Minimize\nthe false positives. So given n and m, pick a case\nso that this thing is minimized.",
    "start": "2856244",
    "end": "2867840"
  },
  {
    "text": "AUDIENCE: What was\nthe answer again? Or actually, regardless\nof that, what's the percentage of\nfalse positives?",
    "start": "2867840",
    "end": "2875540"
  },
  {
    "text": "PROFESSOR: It depends on\nwhat your n and m are, right? The more bits you can afford AUDIENCE: But if\nmaximize your k,",
    "start": "2875540",
    "end": "2881510"
  },
  {
    "text": "you said you came up with\nsome k that's maximized PROFESSOR: I think k is",
    "start": "2881510",
    "end": "2887079"
  },
  {
    "text": "AUDIENCE: Square root of log n.  AUDIENCE: So then\nif you use that.",
    "start": "2887079",
    "end": "2892660"
  },
  {
    "text": "PROFESSOR: Let's\nnot do the math. [LAUGHTER] It's really, really good. So these are used for all sorts\nof practical problems, all",
    "start": "2892660",
    "end": "2901539"
  },
  {
    "text": "the way from branch predictors\nin processors, to databases. AUDIENCE: So is\nit better than 1%?",
    "start": "2901540",
    "end": "2906836"
  },
  {
    "text": "Do you know that, at least? PROFESSOR: Oh yeah, for\npractical uses, this gets you,",
    "start": "2906836",
    "end": "2913210"
  },
  {
    "text": "I think to 1% of 1% of 1%. ",
    "start": "2913210",
    "end": "2921680"
  },
  {
    "text": "So usually, put a Bloom filter\nbefore a really expensive check, and the Bloom\nfilter gets rid of most",
    "start": "2921680",
    "end": "2928300"
  },
  {
    "text": "of the false positives. And then you have\na few more where you do the more expensive check. ",
    "start": "2928300",
    "end": "2945620"
  },
  {
    "text": "Okay, does this make sense? ",
    "start": "2945620",
    "end": "2951240"
  },
  {
    "text": "Any questions?  AUDIENCE: Do you more optimal\nif you repeated this Bloom",
    "start": "2951240",
    "end": "2959812"
  },
  {
    "text": "filter independently\nof the other one, with more hash functions\nin that memory structure?",
    "start": "2959812",
    "end": "2965330"
  },
  {
    "text": "PROFESSOR: I think doubling\nthe memory size is better.",
    "start": "2965330",
    "end": "2971090"
  },
  {
    "text": "So two filters is the\nsame as having two n bits. I think doubling gives you\nbetter results, always.",
    "start": "2971090",
    "end": "2976150"
  },
  {
    "start": "2976150",
    "end": "2987500"
  },
  {
    "text": "OK, so general stuff. We're going to have a lot\nof conceptual questions, so please make sure, again,\nmake sure that for everything",
    "start": "2987500",
    "end": "2995300"
  },
  {
    "text": "that we did, go\nthrough the problem. Understand the problem, know\nthat there is a solution.",
    "start": "2995300",
    "end": "3000759"
  },
  {
    "text": "Know the running\ntime, maybe know how to implement the solution. Don't worry so much\nabout the proof.",
    "start": "3000760",
    "end": "3005904"
  },
  {
    "text": "We're going to have\nsome problems where you have to come up with\nnew things on your own, so get a good night's\nsleep before the exam.",
    "start": "3005905",
    "end": "3012950"
  },
  {
    "text": "Really, if you have\nfive hours left, then you have to choose\nbetween sleeping five hours or reading notes\nfor five hours--",
    "start": "3012950",
    "end": "3018985"
  },
  {
    "text": "AUDIENCE: Drink caffeine. PROFESSOR: It's\nnot going to help, so caffeine actually\nhelps you stay up,",
    "start": "3018985",
    "end": "3024300"
  },
  {
    "text": "but it decreases\nyour performance. And so if you're on caffeine,\nyou're not going to think.",
    "start": "3024300",
    "end": "3030030"
  },
  {
    "text": "You can regurgitate stuff,\nbut you can't think. So caffeinating yourself is a--",
    "start": "3030030",
    "end": "3036556"
  },
  {
    "text": "AUDIENCE: I thought it was like\nit gives you concentration. PROFESSOR: So there's an optimum\namount of sleep and caffeine",
    "start": "3036556",
    "end": "3042460"
  },
  {
    "text": "combination. If you don't sleep and\ncaffeinate yourself, I guarantee that\nyou will not solve any of the problems that\nrequire new algorithms.",
    "start": "3042460",
    "end": "3049245"
  },
  {
    "text": "AUDIENCE: Caffeine just squirts\nadrenaline in your brain. It doesn't do anything else.",
    "start": "3049246",
    "end": "3054870"
  },
  {
    "text": "PROFESSOR: So the thing is the\nmemory is going to be better. If all you're doing\nis memorization stuff, then it's going to be better.",
    "start": "3054870",
    "end": "3061230"
  },
  {
    "text": "So you're going to do well on\nthe pattern matching stuff. But when your\nbrain is panicking, you're not going to come up\nwith new solutions, right?",
    "start": "3061230",
    "end": "3067540"
  },
  {
    "text": "Usually, you have a\nproblem, a hard problem. You're thinking about it,\nand then at some point when you're relaxed, like\nwhen you're in the shower",
    "start": "3067540",
    "end": "3074495"
  },
  {
    "text": "or when you wake up you're\nlike, crap, I found a solution. So the brain finds\nsolutions when it's relaxed,",
    "start": "3074495",
    "end": "3080470"
  },
  {
    "text": "not when it's like, holy\nshit, holy shit, holy shit. And adrenaline gets\nit in that mood.",
    "start": "3080470",
    "end": "3086569"
  },
  {
    "text": "That's what it does. And that's what caffeine\ndoes in the end. So a little bit of caffeine\nmight help you get up",
    "start": "3086570",
    "end": "3092970"
  },
  {
    "text": "and get you running,\nbut don't caffeinate yourself to not sleep\nthe entire night.",
    "start": "3092970",
    "end": "3097990"
  },
  {
    "text": "That's probably going to make\nyou bomb the hard questions. Good luck on Friday. Eat candy.",
    "start": "3097990",
    "end": "3103140"
  },
  {
    "start": "3103140",
    "end": "3103833"
  }
]