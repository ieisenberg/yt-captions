[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high-quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13350"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13350",
    "end": "25305"
  },
  {
    "text": "PROFESSOR: All\nright, we're going to continue talking\nabout convolutional code. So I want to give you a quick\nreminder of how coding works",
    "start": "25305",
    "end": "32640"
  },
  {
    "start": "28000",
    "end": "28000"
  },
  {
    "text": "and then talk to\nyou about decoding. Can you hear me OK now? All right?",
    "start": "32640",
    "end": "37830"
  },
  {
    "text": "OK.  So we talked in terms\nof a state diagram,",
    "start": "37830",
    "end": "48000"
  },
  {
    "text": "but let me remind you of the\nshift register picture was. So we had a two-stage\nshift register.",
    "start": "48000",
    "end": "55970"
  },
  {
    "text": "For this particular\nexample, we had xn, a stream of data being fed in here.",
    "start": "55970",
    "end": "63210"
  },
  {
    "text": "So since this is\na shift register, what sits in here at time\nn is the previous input.",
    "start": "63210",
    "end": "69830"
  },
  {
    "text": "What sits here is the\ninput from 2 times ago.",
    "start": "69830",
    "end": "75680"
  },
  {
    "text": "And you can then feed these\noff and get your parity check. So take these in\nparticular combinations",
    "start": "75680",
    "end": "87940"
  },
  {
    "text": "and make your parity checks. So you can have one box\nspitting out a p0 of n.",
    "start": "87940",
    "end": "97725"
  },
  {
    "text": "And then you can\nhave another box that takes these same outputs\nfrom the shift register",
    "start": "97725",
    "end": "104350"
  },
  {
    "text": "and puts out-- let me just show them.",
    "start": "104350",
    "end": "110590"
  },
  {
    "text": "Actually, why don't\nI just put it here? You generate a bunch\nof party check bits.",
    "start": "110590",
    "end": "118509"
  },
  {
    "text": "And I've shown an\nexample on top where-- this is the same one\nI used last time.",
    "start": "118510",
    "end": "123630"
  },
  {
    "text": "p0 at time n-- I should have had an n there-- is xn plus xn minus\n1 plus xn minus 2.",
    "start": "123630",
    "end": "130419"
  },
  {
    "text": "And p1, xn, and at xn minus 2. And we skip the xn minus 1.",
    "start": "130419",
    "end": "136630"
  },
  {
    "text": "But you can choose different\ncoefficients there.",
    "start": "136630",
    "end": "141940"
  },
  {
    "text": "Different coefficients\nwill give you codes that have\ndifferent properties. So the choices in the code are\nhow many shift registers do",
    "start": "141940",
    "end": "150880"
  },
  {
    "text": "you have, so how much memory. The constraint length\nhere is equal to what?",
    "start": "150880",
    "end": "165400"
  },
  {
    "text": "Constraint length in\nthis particular example on the slide? AUDIENCE: 3.",
    "start": "165400",
    "end": "170483"
  },
  {
    "text": "PROFESSOR: k equals 3? Oh, you can see it. It's the number of\nmessage bits that",
    "start": "170483",
    "end": "176560"
  },
  {
    "text": "are involved in generating\na parity bit at the maximum. It's actually not the number.",
    "start": "176560",
    "end": "181900"
  },
  {
    "text": "It's the window\nover which you're taking message bits to combine\nto make the parity bits.",
    "start": "181900",
    "end": "188170"
  },
  {
    "text": " All right, so for instance,\nif you just had p1,",
    "start": "188170",
    "end": "195660"
  },
  {
    "text": "you would still say that\nyour constraint length is 3, because you're involving a\nwindow of three message bits.",
    "start": "195660",
    "end": "201610"
  },
  {
    "text": "It's the span over\nwhich you're extending. All right, now, in terms\nof interpreting this,",
    "start": "201610",
    "end": "207130"
  },
  {
    "text": "we've got the possible states of\nthe shift register combination. So 0, 0; 0, 1' 1, 0' 1, 1, these\nare the four possible states.",
    "start": "207130",
    "end": "217900"
  },
  {
    "text": "So in general, what you have\nis for a constraint length k,",
    "start": "217900",
    "end": "226060"
  },
  {
    "text": "you've got 2 to the k minus 1\nstates, because one of these",
    "start": "226060",
    "end": "233680"
  },
  {
    "text": "is the input. And then the other\nis stored in memory. So you've got k minus\n1 stored in memory. So that's the number of\nstates that you have.",
    "start": "233680",
    "end": "241030"
  },
  {
    "text": "And that's how these\ncircles are labeled here. And then on each of\nthe arcs, what you have",
    "start": "241030",
    "end": "246610"
  },
  {
    "text": "is the message bit that's coming\nin at that time and the parity",
    "start": "246610",
    "end": "252040"
  },
  {
    "text": "bits that are emitted. So for instance, from 0,\n0, if you've got 0 here",
    "start": "252040",
    "end": "259930"
  },
  {
    "text": "and 0 here, the only places\nyou can go to at the next step are 0, 0, and 0, 1,\nbecause you can either--",
    "start": "259930",
    "end": "267220"
  },
  {
    "text": "sorry, 0, 0 and 1, 0,\nbecause you can either feet in a 0 or a 1 from here.",
    "start": "267220",
    "end": "273660"
  },
  {
    "text": "If you feed in a 0, then at the\nnext state, you're still in 0. If you feed in a 1, then at\nthe next state, you're 1, 0.",
    "start": "273660",
    "end": "280659"
  },
  {
    "text": "So those are the only\npossibilities from 0, 0. And if you had a 1 in, you\nwould go from 0, 0 to 1, 0.",
    "start": "280660",
    "end": "288280"
  },
  {
    "text": "And what would be your\nparity check bits? So if you had 1 at\nthe input and you",
    "start": "288280",
    "end": "294040"
  },
  {
    "text": "have the parity\ncheck expressions that I have up here, you see\nthat what you would be emitting",
    "start": "294040",
    "end": "299950"
  },
  {
    "text": "would be a 1 and a 1. Is that right?",
    "start": "299950",
    "end": "305910"
  },
  {
    "text": "If you had a 1 in\nthe input, 0, 0, and you use these two parity\nbits, you generate a 1 and a 1.",
    "start": "305910",
    "end": "312648"
  },
  {
    "text": "So that's how these\narcs are labeled. ",
    "start": "312648",
    "end": "322560"
  },
  {
    "start": "319000",
    "end": "319000"
  },
  {
    "text": "Now we said, to\nactually understand the convolutional code\nwell, what you really",
    "start": "322560",
    "end": "327599"
  },
  {
    "text": "want to do is translate\nthe state transition diagram to a trellis diagram.",
    "start": "327600",
    "end": "332700"
  },
  {
    "text": "This is just showing two\nstages of the trellis. In general, the trellis\nwould be the state diagram",
    "start": "332700",
    "end": "337980"
  },
  {
    "text": "unfolded over the whole\ntime interval of interest. So it's the same thing.",
    "start": "337980",
    "end": "343720"
  },
  {
    "text": "It's just that we've-- let's see. We've chosen to write the\nstates in binary counting order,",
    "start": "343720",
    "end": "350910"
  },
  {
    "text": "so 0, 0; 0, 1; 1, 0; 1, 1. It was arranged slightly\ndifferently here.",
    "start": "350910",
    "end": "357040"
  },
  {
    "text": "Apart from that,\nit's the same thing. So we're drawing the\nstate diagram here. We're drawing the\nsame state diagram",
    "start": "357040",
    "end": "362759"
  },
  {
    "text": "here except this is representing\nthe state possibilities at time-- at one particular time.",
    "start": "362760",
    "end": "368772"
  },
  {
    "text": "And this is the\nstate possibilities of the next particular time. So the state transition\narrows are always going from one stage\nto the next, all right?",
    "start": "368772",
    "end": "376170"
  },
  {
    "text": "So the arrow that we\nsaw here, which takes us from 0, 0 to 1, 0\nis going to take us",
    "start": "376170",
    "end": "382710"
  },
  {
    "text": "from this box to this box. And what it emits on the\nway is the 1 and the--",
    "start": "382710",
    "end": "388669"
  },
  {
    "text": "sorry, the 1, 1. What it emits is the 1, 1. So each arc is labeled\nin the same way.",
    "start": "388670",
    "end": "394380"
  },
  {
    "text": "This is just a rearrangement. Now, the nice thing I mentioned\nlast time, the nice thing",
    "start": "394380",
    "end": "400629"
  },
  {
    "text": "about this is, when you have\nthis in binary counting order, then the upper arc of the two\nthat emanate from each box",
    "start": "400630",
    "end": "407379"
  },
  {
    "text": "corresponds to an input of 0. The lower arc corresponds\nto an input of 1. So you can actually\ndispense with the index",
    "start": "407380",
    "end": "414970"
  },
  {
    "text": "or with the bit that's in\nfront of the stroke there. So you can just make do with\nlabeling by the parity bits.",
    "start": "414970",
    "end": "422530"
  },
  {
    "text": "So you'll get used to that. 0 is the upward movement. And 1 is a downward movement.",
    "start": "422530",
    "end": "428629"
  },
  {
    "text": "So if you're thinking\nat the transmitter-- by the way, I hope I've\nmade these changes well.",
    "start": "428630",
    "end": "435070"
  },
  {
    "start": "430000",
    "end": "430000"
  },
  {
    "text": "I had an earlier\nversion of this slide, but I changed it to work for a\nnew set of parity bits, which",
    "start": "435070",
    "end": "440560"
  },
  {
    "text": "meant I had to go in and change\nevery one of these transitions. So you might see the\nodd bug here and there.",
    "start": "440560",
    "end": "446080"
  },
  {
    "text": "But hopefully this is\ncorrect and consistent with the state transition\ndiagram I showed you.",
    "start": "446080",
    "end": "451180"
  },
  {
    "text": "So what we're saying\nis now suppose you're starting off in the 0, 0 state. And you get the sequence\nof message bits.",
    "start": "451180",
    "end": "457990"
  },
  {
    "text": "So 0, 1, 1, 1 is your message. And then you bring it back to\nthe 0 state again by appending",
    "start": "457990",
    "end": "464260"
  },
  {
    "text": "two 0's. What's the path that you\ntraverse through the trellis?",
    "start": "464260",
    "end": "469720"
  },
  {
    "text": "Well, you're starting\noff in the 0 state. Every time you have\na 0 in the message,",
    "start": "469720",
    "end": "476140"
  },
  {
    "text": "you take the upper branch. Whenever you have a 1, you take\nthe lower branch of the two that are available to you.",
    "start": "476140",
    "end": "481733"
  },
  {
    "text": "So you can see very\nquickly how to steer through this trellis for any\nparticular message sequence.",
    "start": "481733",
    "end": "487479"
  },
  {
    "text": "So this is the upper\none of the two here, and then the lower one of the\ntwo here because it's a 1,",
    "start": "487480",
    "end": "493389"
  },
  {
    "text": "then the lower one of the\ntwo here because it's a 1, and the lower one of the two\nhere because it's a 1, and then",
    "start": "493390",
    "end": "499780"
  },
  {
    "text": "the upper one because it's\na 0, and the upper one because it's a 0. So that's your path\nthrough the trellis.",
    "start": "499780",
    "end": "506229"
  },
  {
    "text": "It's told to you by\nthe message bits. ",
    "start": "506230",
    "end": "511520"
  },
  {
    "text": "You should also remember,\nby the way, this diagram hides a little bit, because\nI have just a box here",
    "start": "511520",
    "end": "518539"
  },
  {
    "text": "for something that's\nactually a pair of registers.",
    "start": "518539",
    "end": "524450"
  },
  {
    "text": "So when I just show the box,\nlet's say, at this point,",
    "start": "524450",
    "end": "530210"
  },
  {
    "text": "this actually has the 1\nand the 0 sitting in it. ",
    "start": "530210",
    "end": "537330"
  },
  {
    "text": "So if you were just looking at\nthis box and what was in it, if I just gave you the\ncontents of that box,",
    "start": "537330",
    "end": "543209"
  },
  {
    "text": "could you tell me what the\ninput was of the previous time? If I just told you that\nthe contents of that box",
    "start": "543210",
    "end": "549449"
  },
  {
    "text": "are 1 and 0, can you\ntell me what the input was at the previous time?",
    "start": "549450",
    "end": "554840"
  },
  {
    "text": "Yes? It's just what\ngot fed in, right? It's just the one\nthat got fed in. So this diagram\nis fine, but we've",
    "start": "554840",
    "end": "561680"
  },
  {
    "text": "suppressed a little bit there. There are occasions, especially\non homework and quiz problems,",
    "start": "561680",
    "end": "566870"
  },
  {
    "text": "where you're given the contents\nof the shift registers.",
    "start": "566870",
    "end": "572089"
  },
  {
    "text": "And you're asked to figure out\nwhat happened at the last time step, what message bit came in.",
    "start": "572090",
    "end": "577123"
  },
  {
    "text": "So really, don't\nforget that there is a link between the two. OK, so the steering\nis straightforward.",
    "start": "577123",
    "end": "583829"
  },
  {
    "text": "Now, what's the code\nword that's emitted? Well, it's the parity bits\nthat you encounter on the arcs.",
    "start": "583830",
    "end": "590510"
  },
  {
    "text": "So on this upper\narc here, you've got a 0, 0 that's emitted. So that's what\nyou're going to emit.",
    "start": "590510",
    "end": "596180"
  },
  {
    "text": "That's the part of the code word\ngenerated by that message bit. And then on the lower\narc, you emit 1, 1.",
    "start": "596180",
    "end": "602960"
  },
  {
    "text": "On the lower arc, you\nemit 0, 1, lower arc, you emit 1, 0, and\n0, 1, and then 1, 1.",
    "start": "602960",
    "end": "611510"
  },
  {
    "text": "So that's the code word. So the set of all\npossible code words",
    "start": "611510",
    "end": "616630"
  },
  {
    "text": "that you can get with\nthis convolutional code corresponds to the\nset of all paths you can take through the trellis.",
    "start": "616630",
    "end": "623080"
  },
  {
    "text": "If you're starting\nat 0, 0, 0, then it's the set of all paths\nstarting at 0, 0, 0.",
    "start": "623080",
    "end": "631930"
  },
  {
    "text": "So let's see. Roughly speaking, can you tell\nme, if I've got l stages--",
    "start": "631930",
    "end": "639610"
  },
  {
    "text": "when I say stages,\nI mean time, if you want to think of these\nas happening on a clock.",
    "start": "639610",
    "end": "645100"
  },
  {
    "text": "If I've got l stages here and\nI'm starting off with the 0 state there, for a large l,\nroughly how many possible paths",
    "start": "645100",
    "end": "653649"
  },
  {
    "text": "do I have? ",
    "start": "653650",
    "end": "661560"
  },
  {
    "text": "Any thoughts?  2 to the l? Yeah.",
    "start": "661560",
    "end": "666870"
  },
  {
    "text": "Because you see here, coming\nout of a box here on each stage, you've got two choices.",
    "start": "666870",
    "end": "672300"
  },
  {
    "text": "And you've got those two\nchoices for l stages. So you've got approximately\n2 to the l possible paths.",
    "start": "672300",
    "end": "681320"
  },
  {
    "text": "Now, I say approximately,\nbecause well, in this case, it's fine. But now if you're a lot to start\nfrom other starting states,",
    "start": "681320",
    "end": "689520"
  },
  {
    "text": "then you will have to\ntake account of that. But it's of that order. It's exponential. The number of possible\npaths that you can have,",
    "start": "689520",
    "end": "695940"
  },
  {
    "text": "the number of code words is\nexponential in the length of the trellis, right?",
    "start": "695940",
    "end": "701648"
  },
  {
    "text": "OK, so that's a large\nnumber of code words. ",
    "start": "701648",
    "end": "707570"
  },
  {
    "text": "Our focus, though, is going\nto be on decoding today. What I did so far was just\nreview what we saw for coding.",
    "start": "707570",
    "end": "716420"
  },
  {
    "text": "We're interested\nin decoding now. So at the receiver, what you\nhave is a knowledge of what",
    "start": "716420",
    "end": "724610"
  },
  {
    "text": "the code is. So you have the trellis. You know what the labels are. You know that things are going\nto start in the zero state.",
    "start": "724610",
    "end": "731000"
  },
  {
    "text": "And then you get\nyour received signal. Now, what I've shown\nhere is that, actually,",
    "start": "731000",
    "end": "736470"
  },
  {
    "text": "your received signal is\nnot necessarily going to be 0's and 1's.",
    "start": "736470",
    "end": "742279"
  },
  {
    "text": "It's probably going to be\nsamples of some voltage, where you've got some waveform. You process it. And then you take a sample.",
    "start": "742280",
    "end": "748670"
  },
  {
    "text": "And what you've got is a\nsample of some voltage. So you're typically\nlooking at real numbers that you then have to decide\nwhether to call as a 0 or a 1.",
    "start": "748670",
    "end": "758530"
  },
  {
    "text": "OK, so yeah, maybe this is 0,\n0, maybe 0, 1; 0, 1, probably 1,",
    "start": "758530",
    "end": "766910"
  },
  {
    "text": "0; 0, 1; 1, 0, yeah?",
    "start": "766910",
    "end": "773389"
  },
  {
    "text": "So if you were forced to choose,\nif you had a threshold of 0.5, for instance, and this was\nthe range, if nominally",
    "start": "773390",
    "end": "779690"
  },
  {
    "text": "these were supposed\nto be at 0 and 1, then you might actually\nbe willing to call",
    "start": "779690",
    "end": "787880"
  },
  {
    "text": "this one way or another. So if I was to draw\nthis on the real axis thinking of a voltage, so\nwe've got 0 volts that we're",
    "start": "787880",
    "end": "796910"
  },
  {
    "text": "expecting, 1 volt or\nsomething proportional to 1 volt that we're expecting.",
    "start": "796910",
    "end": "802073"
  },
  {
    "text": "These are the two possible\nvalues depending on whether a 0 is sent\nor a 1 is sent. This is because\nwe've coded the bits",
    "start": "802073",
    "end": "808190"
  },
  {
    "text": "at the transmitter for\nphysical transmission on a continuous time channel.",
    "start": "808190",
    "end": "813393"
  },
  {
    "text": "And then at the receiving end,\nwe're doing some processing and extracting samples, right? But because of noise,\nwhat might happen",
    "start": "813393",
    "end": "820190"
  },
  {
    "text": "is that you get samples\nanywhere around the 0 or anywhere around\nthe 1, depending",
    "start": "820190",
    "end": "828170"
  },
  {
    "text": "on the particular\ntransmission instance. It'll vary from one\ninstant to the next. And if the noise is really\nbad, then of course,",
    "start": "828170",
    "end": "836160"
  },
  {
    "text": "what started off as a\n0 here with the noise added to it, by the\ntime you sample it, might fall in a region\nwhere you call it a 1.",
    "start": "836160",
    "end": "843740"
  },
  {
    "text": "So there is an\nintermediate step. And very often, you\nhave access to that. ",
    "start": "843740",
    "end": "850449"
  },
  {
    "start": "845000",
    "end": "845000"
  },
  {
    "text": "And then you've got to figure\nout how to do your decoding.",
    "start": "850450",
    "end": "856060"
  },
  {
    "text": "All right, is this\nthe same slide? Or does it say\nanything different?",
    "start": "856060",
    "end": "861700"
  },
  {
    "text": "OK. So what are we going to do now? We're going to, of all\nthe paths available to us,",
    "start": "861700",
    "end": "868880"
  },
  {
    "text": "we're going to try and\nfind the path along which the emitted parity bits\ncome closest, in some sense,",
    "start": "868880",
    "end": "876890"
  },
  {
    "text": "to the sequence of samples here. That's, if you were\ndoing minimum distance,",
    "start": "876890",
    "end": "883190"
  },
  {
    "text": "in some sense, that's\nwhat you'd want to do. If you believed that\nerrors further away from 0",
    "start": "883190",
    "end": "889910"
  },
  {
    "text": "are less likely than\nerrors close to 0, then you would want to have\na reconstructed set of parity",
    "start": "889910",
    "end": "897710"
  },
  {
    "text": "bits along whatever\npath you choose to come close to\nthe values there. ",
    "start": "897710",
    "end": "906379"
  },
  {
    "text": "Now, it turns out that\nit's actually simpler initially to think of\nfirst making a decision",
    "start": "906380",
    "end": "912709"
  },
  {
    "text": "to call these 0's or\n1's and then finding a path through this that\ncomes closest to the 0, 1",
    "start": "912710",
    "end": "918950"
  },
  {
    "text": "sequence that approximates\nthe voltage samples that you've actually got. So we make a distinction\nbetween what's",
    "start": "918950",
    "end": "925280"
  },
  {
    "text": "called hard decision decoding\nand soft decision decoding.",
    "start": "925280",
    "end": "938450"
  },
  {
    "text": " So in soft decision decoding,\nwhich we'll talk about later,",
    "start": "938450",
    "end": "945770"
  },
  {
    "text": "you preserve those\nvoltage samples. And you don't mess with them. But in hard decision\ndecoding, at each stage, you just make a\ndecision, on each sample,",
    "start": "945770",
    "end": "953149"
  },
  {
    "text": "decide to call it a 0 or a\n1 and proceed from there. OK, so which do you think\nis likely to get you",
    "start": "953150",
    "end": "960320"
  },
  {
    "text": "better performance\nif you're doing the optimal thing after that? AUDIENCE: Soft.",
    "start": "960320",
    "end": "966260"
  },
  {
    "text": "PROFESSOR: The soft? Yeah. Because when you make the\ndecision at one stage, you're throwing away\nsome information.",
    "start": "966260",
    "end": "971720"
  },
  {
    "text": "You're not taking account\nof how these samples might relate to each other. You're treating that\nsample in isolation.",
    "start": "971720",
    "end": "978648"
  },
  {
    "text": "If you know that what\nyou're going to end up with is a code word that corresponds\nto a path through here,",
    "start": "978648",
    "end": "984170"
  },
  {
    "text": "then there is\nadditional information that actually couples the\ndifferent numbers you're getting across there. And so you have a\nhope of doing better",
    "start": "984170",
    "end": "991430"
  },
  {
    "text": "with soft decision decoding. So postpone the\ndecision until later.",
    "start": "991430",
    "end": "996480"
  },
  {
    "text": "But you pay a cost. Or you could pay a cost\nfor that, because you've got to deal, for instance,\nwith the real numbers and all",
    "start": "996480",
    "end": "1001683"
  },
  {
    "text": "of that. So hard decision decoding\ncan simplify your processing.",
    "start": "1001683",
    "end": "1007399"
  },
  {
    "text": "So what you'll say is, I'll\njust make a choice here. So I'll call this 0, 0;\n0, 1; 0, 1, and so on,",
    "start": "1007400",
    "end": "1013810"
  },
  {
    "text": "and then look for a path\nthrough the Trellis along which",
    "start": "1013810",
    "end": "1018820"
  },
  {
    "text": "the emitted party\nbits come closest to what I've approximated\nthat sequence of samples by.",
    "start": "1018820",
    "end": "1027280"
  },
  {
    "text": "So we're talking about\nhaving distance again. And minimum timing distance\nis going to give us the most",
    "start": "1027280",
    "end": "1033609"
  },
  {
    "text": "likely path, given that\nyou've already committed to interpreting the received\nsamples as 0's or 1's.",
    "start": "1033609",
    "end": "1042020"
  },
  {
    "start": "1039000",
    "end": "1039000"
  },
  {
    "text": "So what you might\nimagine is, OK, you've got this received sequence. You've got a tabulation\nof all the possible paths",
    "start": "1042020",
    "end": "1051067"
  },
  {
    "text": "through the trellis and\nthe parity bits that are emitted along those paths. Each path corresponds\nto a different message.",
    "start": "1051067",
    "end": "1057940"
  },
  {
    "text": "What you actually\nhave here-- let's see. We've got 12 bits here, because\nin addition to the message,",
    "start": "1057940",
    "end": "1063640"
  },
  {
    "text": "I'm appending a 0, 0 to each\none, which forces the trellis back down to the 0 state.",
    "start": "1063640",
    "end": "1069429"
  },
  {
    "text": "So what I'm actually\ndoing here is, I actually have a message\nthat's this followed by two 0's.",
    "start": "1069430",
    "end": "1075517"
  },
  {
    "text": "And so if you're trying\nto connect these two columns with the trellis that\nI had on the previous page, that's how you should\nthink about it.",
    "start": "1075517",
    "end": "1081880"
  },
  {
    "text": "But with any particular message,\nyou navigate up and down on the trellis. This particular one, you\nnavigate up, up, down, up.",
    "start": "1081880",
    "end": "1089710"
  },
  {
    "text": "And that's the sequence\nthat's generated. That's the code\nword that you would expect if this was the message.",
    "start": "1089710",
    "end": "1096340"
  },
  {
    "text": "What you'll do is you'll\nsearch over all possibilities. At least that's one way\nto do this, in principle,",
    "start": "1096340",
    "end": "1101410"
  },
  {
    "text": "search over all possibilities\nfor the code word here that's closest\nto what you received. ",
    "start": "1101410",
    "end": "1108800"
  },
  {
    "text": "The trouble is, that's\na lot of code words. That's a lot of code words. So this can quickly\nget out of hand.",
    "start": "1108800",
    "end": "1114350"
  },
  {
    "text": "If you've got long\nsequences, which is exactly where you want\nto do convolutional coding,",
    "start": "1114350",
    "end": "1119480"
  },
  {
    "text": "you've got a very long table. So you really want to\nfind an efficient way",
    "start": "1119480",
    "end": "1125360"
  },
  {
    "text": "to do this matching.  I just wrote down\nthe Hamming distance",
    "start": "1125360",
    "end": "1130960"
  },
  {
    "text": "that happens to hold for what\nis the message that was actually",
    "start": "1130960",
    "end": "1138159"
  },
  {
    "text": "sent, which also will be the\nmessage that you will recover at the receiver if you\ndo the optimal thing",
    "start": "1138160",
    "end": "1144160"
  },
  {
    "text": "and you don't get\nfooled by the errors. So what I've got here as a\n2 is the Hamming distance between the code word here\nand the received message.",
    "start": "1144160",
    "end": "1154540"
  },
  {
    "start": "1154540",
    "end": "1163670"
  },
  {
    "text": "So if that 2 was the smallest\none in that whole stack-- I haven't filled them all out--",
    "start": "1163670",
    "end": "1169343"
  },
  {
    "text": "then that's the one\nthat you would call.  OK, so a much\ncleverer way of doing",
    "start": "1169343",
    "end": "1179049"
  },
  {
    "start": "1172000",
    "end": "1172000"
  },
  {
    "text": "this was invented\nby the Viterbi, who did his bachelor's\ndegree here,",
    "start": "1179050",
    "end": "1184090"
  },
  {
    "text": "then moved to the West Coast. He was very involved\nin the JPL program.",
    "start": "1184090",
    "end": "1189529"
  },
  {
    "text": "But he was also a\nfounder of, well, a succession of companies,\nbut most recently, Qualcomm.",
    "start": "1189530",
    "end": "1195443"
  },
  {
    "text": "And he's a big friend\nof the department. He's on our visiting committee. Or he has served time with\nthe visiting committee.",
    "start": "1195443",
    "end": "1202269"
  },
  {
    "text": "So this is an algorithm that\nhe developed in the early days. And we're going\nto talk about it.",
    "start": "1202270",
    "end": "1208440"
  },
  {
    "text": " I think I'll put it\nall up on the slide.",
    "start": "1208440",
    "end": "1214330"
  },
  {
    "text": "And then let's talk. All right, there is a lot there. I don't want you to\nstruggle through that.",
    "start": "1214330",
    "end": "1220690"
  },
  {
    "text": "Let's talk about it here. And when we're\ndone, I think what's up there will make sense.",
    "start": "1220690",
    "end": "1226592"
  },
  {
    "text": "That's for you to refer\nto from the slides later.",
    "start": "1226592",
    "end": "1232960"
  },
  {
    "text": "And it's my little\nchecklist to know that I've spoken\nabout everything, but don't try and\nnavigate that just yet.",
    "start": "1232960",
    "end": "1241059"
  },
  {
    "text": "So here is what Viterbi says. He says, we're starting off\nfrom some initial state.",
    "start": "1241060",
    "end": "1250010"
  },
  {
    "text": "This is the zero state. At an intermediate state,\nintermediate time--",
    "start": "1250010",
    "end": "1256062"
  },
  {
    "text": "sorry, I shouldn't say state. I meant stage or time. At an intermediate stage, we\nhave these four possibilities.",
    "start": "1256062",
    "end": "1263390"
  },
  {
    "text": " What I'm going to do for a\ngiven received sequence--",
    "start": "1263390",
    "end": "1270495"
  },
  {
    "text": "and let me actually put\nthe received sequence I'm going to use\nin this example. We've got a received sequence.",
    "start": "1270495",
    "end": "1275745"
  },
  {
    "start": "1275745",
    "end": "1285620"
  },
  {
    "text": "Let's say it's 0, 0 on\nthe first stage, and then 0, 1 on the second\nstage, and 0, 1; 1, 0--",
    "start": "1285620",
    "end": "1297650"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: Yeah? Did someone say something?",
    "start": "1297650",
    "end": "1304670"
  },
  {
    "text": "No? I thought I heard-- OK. We'll park the question for\nnow and check in again later.",
    "start": "1304670",
    "end": "1310790"
  },
  {
    "text": " OK, here is the\nreceived sequence.",
    "start": "1310790",
    "end": "1317690"
  },
  {
    "text": "What we're trying to do is\nfind a path through the trellis where the emitted\nbits come closest",
    "start": "1317690",
    "end": "1323420"
  },
  {
    "text": "to this in Hamming distance. ",
    "start": "1323420",
    "end": "1329240"
  },
  {
    "text": "Here is what Viterbi\nproposes to do. He says, from the\nstarting state, let's find the\noptimum path to each",
    "start": "1329240",
    "end": "1336919"
  },
  {
    "text": "of these states at\nany particular time, let's say a time i here. Here is time i.",
    "start": "1336920",
    "end": "1345050"
  },
  {
    "text": "Let's find the\noptimum path to these with the associated\nminimum cost. So let's assume\nthat I have that.",
    "start": "1345050",
    "end": "1352080"
  },
  {
    "text": "So what I'm going to do\nis, for each of these, I'm going to put in some number. This won't be\nexactly the notation",
    "start": "1352080",
    "end": "1357559"
  },
  {
    "text": "that we have on this slide,\nbut it's streamlined.",
    "start": "1357560",
    "end": "1362698"
  },
  {
    "text": " These p's correspond to\nwhat we call path metrics.",
    "start": "1362698",
    "end": "1370005"
  },
  {
    "start": "1370005",
    "end": "1378280"
  },
  {
    "text": "And I should actually\nhave an index i here to tell you that I'm\ndoing this at time i, but I'll just leave that off.",
    "start": "1378280",
    "end": "1385190"
  },
  {
    "text": "p sub 1 is cost along\noptimal path to state one.",
    "start": "1385190",
    "end": "1399799"
  },
  {
    "text": " OK, so assume that,\nmagically, you've",
    "start": "1399800",
    "end": "1405169"
  },
  {
    "text": "computed the\noptimal path to this starting from the initial time. So what that means is\nmaybe you've gone down",
    "start": "1405170",
    "end": "1411710"
  },
  {
    "text": "to a particular stage here. You've gone down further. And then maybe\nyou've come up here. Maybe that's the optimum path.",
    "start": "1411710",
    "end": "1418693"
  },
  {
    "text": "So what you're\ngoing to keep track of is, for each of\nthese times, for each",
    "start": "1418693",
    "end": "1424340"
  },
  {
    "text": "of these states, what's\nthe cost, the optimal cost? Or what's the cost along\nan optimal path there?",
    "start": "1424340",
    "end": "1432530"
  },
  {
    "text": "OK, now what do I mean by cost? I just mean Hamming\ndistance between what I received and the\nparity bits emitted along",
    "start": "1432530",
    "end": "1439568"
  },
  {
    "text": "the way up to that point. ",
    "start": "1439568",
    "end": "1445370"
  },
  {
    "text": "So Viterbi is going to keep\ntrack of this for every stage as you step along and for\nevery one of these states.",
    "start": "1445370",
    "end": "1452380"
  },
  {
    "text": " Now, let's take\nthis particular one.",
    "start": "1452380",
    "end": "1460170"
  },
  {
    "text": "If I'm transitioning to\nstate one here, let's see.",
    "start": "1460170",
    "end": "1465420"
  },
  {
    "text": "This emits a 0, 0 if I go from-- let's go back to our trellis.",
    "start": "1465420",
    "end": "1471525"
  },
  {
    "text": " I should draw this up, actually.",
    "start": "1471525",
    "end": "1476890"
  },
  {
    "text": "But if I go along the\ntop, I am at 0, 0.",
    "start": "1476890",
    "end": "1484490"
  },
  {
    "text": "What other state comes\ninto the top one? ",
    "start": "1484490",
    "end": "1490000"
  },
  {
    "text": "This comes in. And this emits 1, 1. ",
    "start": "1490000",
    "end": "1498820"
  },
  {
    "text": "So what's the cost I incurred\nif I take the upper path? ",
    "start": "1498820",
    "end": "1504360"
  },
  {
    "text": "The cost is just the Hamming\ndistance between the 1, 0 that I received and the\n0, 0 that I have here.",
    "start": "1504360",
    "end": "1510340"
  },
  {
    "text": "So there is a cost of 1. Let me, again, use\ncolors for costs here. ",
    "start": "1510340",
    "end": "1517260"
  },
  {
    "text": "What's the cost I\nincur if I instead come to this point from\np2, again cost of 1?",
    "start": "1517260",
    "end": "1524420"
  },
  {
    "start": "1524420",
    "end": "1531690"
  },
  {
    "text": "So this is the generic picture. What you're going to do\nis, you're having this-- you have this at any stage. You compute the branch\ncosts and continues.",
    "start": "1531690",
    "end": "1539830"
  },
  {
    "text": "And now suppose p1 was equal\nto 3 and p2 was equal to 4,",
    "start": "1539830",
    "end": "1552870"
  },
  {
    "text": "and you wanted to figure out\nwhat's the shortest way, what's the minimum-cost way to get\nfrom the origin to this point,",
    "start": "1552870",
    "end": "1559500"
  },
  {
    "text": "to p1 at the next time instant? ",
    "start": "1559500",
    "end": "1564510"
  },
  {
    "text": "What's the minimum cost? And what's the root? AUDIENCE: [INAUDIBLE]",
    "start": "1564510",
    "end": "1571470"
  },
  {
    "text": "PROFESSOR: If you\ncame from here, you've incurred a cost\nof 3 up to this point.",
    "start": "1571470",
    "end": "1577080"
  },
  {
    "text": "And you're adding an\nadditional cost of 1. You'll end up with a\ncost of 4 to get to here. If you get to hear\nfrom p2, well, you've",
    "start": "1577080",
    "end": "1585360"
  },
  {
    "text": "incurred a cost of, let's\nsay, 4 up to this point. And now you're going to\nincur an additional cost",
    "start": "1585360",
    "end": "1591180"
  },
  {
    "text": "to bring it to 5. So your best route\nto p1 at this time is to come from p1 at\nthis time using this arc.",
    "start": "1591180",
    "end": "1598680"
  },
  {
    "text": " So if you've built it up\nat a particular stage, then it's actually\nvery straightforward",
    "start": "1598680",
    "end": "1605665"
  },
  {
    "text": "to figure out what you\nshould do at the next stage. So let me now start putting\nsome time indices on this.",
    "start": "1605665",
    "end": "1612151"
  },
  {
    "text": "This would be p1 at\ntime i is equal to 3.",
    "start": "1612151",
    "end": "1621631"
  },
  {
    "text": "p1 at time i plus\n1 is equal to 4.",
    "start": "1621631",
    "end": "1628610"
  },
  {
    "text": "This is p2 at time i. ",
    "start": "1628610",
    "end": "1640020"
  },
  {
    "text": "So you can actually\nforget about this arrow, because there is no way you're\ngoing to use that arrow. Whenever you come to\nthis stage at this time,",
    "start": "1640020",
    "end": "1646440"
  },
  {
    "text": "you're going to come\nvia the upper branch. So at every stage,\nyou're going to do this.",
    "start": "1646440",
    "end": "1652350"
  },
  {
    "text": "And it's a very\nsimple calculation. So now we've got slightly\nmore elaborate notation up on the board, but I hope\nyou have the general idea.",
    "start": "1652350",
    "end": "1658795"
  },
  {
    "text": " This is an instance,\nby the way, and a way",
    "start": "1658795",
    "end": "1665890"
  },
  {
    "text": "of thinking about such\nproblems that's referred to as dynamic programming.",
    "start": "1665890",
    "end": "1671168"
  },
  {
    "start": "1671168",
    "end": "1679780"
  },
  {
    "text": "It works for these sorts\nof rooting problems. We're rooting ourselves\nalong a trellis where",
    "start": "1679780",
    "end": "1684850"
  },
  {
    "text": "the total cost of\ntaking a path is the sum of the costs at every stage.",
    "start": "1684850",
    "end": "1690010"
  },
  {
    "text": "So the total Hamming\ndistance between the bits you emit along the way and\nthe bits that you've received",
    "start": "1690010",
    "end": "1696310"
  },
  {
    "text": "is made up of the Hamming\ndistance between the branch here and the piece\nyou've received here",
    "start": "1696310",
    "end": "1701590"
  },
  {
    "text": "plus the Hamming distance on the\nbranch here plus the piece you between the branch\nhere and the branch--",
    "start": "1701590",
    "end": "1707110"
  },
  {
    "text": "sorry, the received segment\nover there, and so on. So the total Hamming\ndistance is made up of the sum of the Hamming\ndistances along the way.",
    "start": "1707110",
    "end": "1714190"
  },
  {
    "text": "In all such situations where\nyou've got a total cost that's additive over the\npath and you've",
    "start": "1714190",
    "end": "1721210"
  },
  {
    "text": "got to do an optimization,\ndynamic programming is something you can think of. And the idea we've used\nhere is actually one",
    "start": "1721210",
    "end": "1729100"
  },
  {
    "text": "that you might\ncome at naturally. If you found the best way from\nhere to the Student Center,",
    "start": "1729100",
    "end": "1735190"
  },
  {
    "text": "and it happens to\ngo through Lobby 7, what's your best way\nfrom here to Lobby 7?",
    "start": "1735190",
    "end": "1742443"
  },
  {
    "text": "Presumably, it's going to\nbe the section of the path that you would take to\nthe Student Center that passes through Lobby 7,\nbecause if you had a better way",
    "start": "1742443",
    "end": "1749590"
  },
  {
    "text": "to get to Lobby\n7, you would have used it to get to the\nStudent Center via Lobby 7.",
    "start": "1749590",
    "end": "1754919"
  },
  {
    "text": "It's just that idea. So on an optimum path where\nthe costs are additive,",
    "start": "1754920",
    "end": "1761140"
  },
  {
    "text": "it must be the case\nthat the optimum path to an intermediate\npoint is exactly",
    "start": "1761140",
    "end": "1766956"
  },
  {
    "text": "the section of the\noptimum path to the point that you're looking\nat, a simple idea.",
    "start": "1766957",
    "end": "1774560"
  },
  {
    "text": "OK, so let's go back\nto the more formal way it's written up\nhere on the slide.",
    "start": "1774560",
    "end": "1779995"
  },
  {
    "start": "1779995",
    "end": "1786150"
  },
  {
    "text": "So we talk about\nthe branch metric. That's just the Hamming\ndistance that we computed here",
    "start": "1786150",
    "end": "1791669"
  },
  {
    "text": "for the branch. It's the difference\nbetween what we received",
    "start": "1791670",
    "end": "1796860"
  },
  {
    "text": "and what would be transmitted\nif you moved along that arc.",
    "start": "1796860",
    "end": "1802740"
  },
  {
    "text": "So that's the branch metric. It's the piece\ncontributed by the branch. This is the notation we've used.",
    "start": "1802740",
    "end": "1809100"
  },
  {
    "text": "We've already talked about this,\nthat you could either do a hard decision kind of rule where\nyou've already set these",
    "start": "1809100",
    "end": "1815280"
  },
  {
    "text": "to 1's and 0's. Or you could stick with\nthe original samples. If you've already converted\nthem to 1's and 0's, there",
    "start": "1815280",
    "end": "1821520"
  },
  {
    "text": "is a natural notion of distance,\nwhich is the Hamming distance. And there is a\nprobabilistic reason",
    "start": "1821520",
    "end": "1826860"
  },
  {
    "text": "why you would want to do that. So we're sticking to\nthe Hamming distance setting right now, so\nhard decision decoding.",
    "start": "1826860",
    "end": "1834660"
  },
  {
    "text": "And the path metric, this\nis a more elaborate notation than what I have here.",
    "start": "1834660",
    "end": "1839769"
  },
  {
    "text": "So instead of a subscript\nto denote the state, this has got the state index\nhere, and the time index here,",
    "start": "1839770",
    "end": "1847690"
  },
  {
    "text": "and pm for path metric\ninstead of just p, but it's the same thing. So for each state\nand at each stage,",
    "start": "1847690",
    "end": "1855220"
  },
  {
    "text": "so for each of the four states\nand for each of the stages,",
    "start": "1855220",
    "end": "1861150"
  },
  {
    "text": "you're going to compute this. And you can the path\nmetric up to time",
    "start": "1861150",
    "end": "1866299"
  },
  {
    "text": "i is the smallest\nsum of the branch metrics over all\nthe sequences that will get you to that place.",
    "start": "1866300",
    "end": "1872220"
  },
  {
    "text": "And if you assume you\nhave that at any stage, then the computation that\ntakes you to the next stage",
    "start": "1872220",
    "end": "1877440"
  },
  {
    "text": "is an easy one. ",
    "start": "1877440",
    "end": "1882920"
  },
  {
    "text": "I think I've said all this. You can come back to it later. ",
    "start": "1882920",
    "end": "1891730"
  },
  {
    "start": "1891000",
    "end": "1891000"
  },
  {
    "text": "So let's actually just\nstep through this. ",
    "start": "1891730",
    "end": "1896789"
  },
  {
    "text": "So we're at some\nintermediate stage. We're just doing the same\nthing I had on the board. I'm doing it again\nin pictures here",
    "start": "1896790",
    "end": "1903140"
  },
  {
    "text": "so you get to think\nabout it one more time. Suppose we've received 0, 0.",
    "start": "1903140",
    "end": "1910250"
  },
  {
    "text": "We first label each of the arcs\nhere by the Hamming distance between the bits we'd emit\nalong the arc and the bits",
    "start": "1910250",
    "end": "1918080"
  },
  {
    "text": "we've actually received,\nso Hamming distant 0 here between what we would\nemit and what we received,",
    "start": "1918080",
    "end": "1924390"
  },
  {
    "text": "Hamming distance 2 here on\nthis arc, Hamming distance 2 on this arc, and so on.",
    "start": "1924390",
    "end": "1929520"
  },
  {
    "text": "So the red numbers here\nare below the top two just are the costs on the arcs.",
    "start": "1929520",
    "end": "1934730"
  },
  {
    "start": "1934730",
    "end": "1945169"
  },
  {
    "text": "Actually, I don't like the\nlast line of that slide. So you may want to strike that. We're not going to really\nbe talking about the most",
    "start": "1945170",
    "end": "1951950"
  },
  {
    "text": "likely branch metric. We're only going to make\ndecisions once we're done with the whole path. ",
    "start": "1951950",
    "end": "1961289"
  },
  {
    "text": "So we assume at some stage,\nthat we have the path metrics up to that point.",
    "start": "1961290",
    "end": "1968220"
  },
  {
    "text": "And then we do the computation\nthat I just talked about. ",
    "start": "1968220",
    "end": "1985538"
  },
  {
    "start": "1983000",
    "end": "1983000"
  },
  {
    "text": "So let's see. In this particular case, what\nwould be the path metric value in this position?",
    "start": "1985538",
    "end": "1990865"
  },
  {
    "text": " It's the same thing\nwe did already,",
    "start": "1990865",
    "end": "1996880"
  },
  {
    "text": "but just another\nchance to look at it. What would be the value\nof the path metric there?",
    "start": "1996880",
    "end": "2003840"
  },
  {
    "text": "3? Because you can either\ndo 3 plus 1 on that arc.",
    "start": "2003840",
    "end": "2009400"
  },
  {
    "text": "Or you can do 2 plus 1\non this-- sorry, 3 plus 1 on this arc for a\ncost of 4 or 2 plus 1",
    "start": "2009400",
    "end": "2016179"
  },
  {
    "text": "on this arc for a cost of 3. So it should be a 3 there. And this is the arc\nthat you would pick.",
    "start": "2016180",
    "end": "2021537"
  },
  {
    "text": " And similarly, you can\ndo it for all of them.",
    "start": "2021537",
    "end": "2029780"
  },
  {
    "text": "So once you have one stage,\nyou can fill out the next stage completely and then keep\ntrack of the arcs that",
    "start": "2029780",
    "end": "2036054"
  },
  {
    "text": "lead you there. ",
    "start": "2036055",
    "end": "2043833"
  },
  {
    "text": "And at some point, you'll--\nat each stage, actually, you can prune away things that\nyou're not going to be using.",
    "start": "2043833",
    "end": "2048949"
  },
  {
    "text": "So you're never going\nto use that edge. So you don't have to\nworry about it anymore. You're never going\nto use this edge.",
    "start": "2048949",
    "end": "2055060"
  },
  {
    "text": "There are also stages\nwhere you might have two different ways\nof getting to a box and incurring the same cost.",
    "start": "2055060",
    "end": "2060656"
  },
  {
    "text": "And then it doesn't matter\nwhich of them you pick. You can pick one or the other. In terms of the overall cost,\nit's not going to matter.",
    "start": "2060656",
    "end": "2066850"
  },
  {
    "text": " AUDIENCE: [INAUDIBLE]",
    "start": "2066850",
    "end": "2074545"
  },
  {
    "text": " PROFESSOR: Yeah, so\nwhat you're saying",
    "start": "2074546",
    "end": "2080070"
  },
  {
    "text": "is that, if there isn't\na unique way back, then you're not certain. Well, you're never certain\nhere in this business.",
    "start": "2080070",
    "end": "2086552"
  },
  {
    "text": "You're just doing\nyour best guess. So what you would do when you\ncommit to one particular choice when there are two equally\nlikely costs is you're saying,",
    "start": "2086552",
    "end": "2093484"
  },
  {
    "text": "the probability\nof error is going to be the same with\nthis choice as it will be with the other choice. And in the end, that's what\nwe have for the metric.",
    "start": "2093485",
    "end": "2101010"
  },
  {
    "text": "It is unsatisfying, perhaps. Now, there are\nschemes where you'd keep a list of the possibilities\nand try and do something",
    "start": "2101010",
    "end": "2106865"
  },
  {
    "text": "with that, because maybe there\nis some higher level thing that would help you disambiguate\nbetween possibilities,",
    "start": "2106865",
    "end": "2113370"
  },
  {
    "text": "but that would complicate\nthe processing. But as far as this\ngoes, you make a choice.",
    "start": "2113370",
    "end": "2119003"
  },
  {
    "text": "And you move on. ",
    "start": "2119003",
    "end": "2126839"
  },
  {
    "text": "So you can imagine\nactually working through this whole thing. ",
    "start": "2126840",
    "end": "2136026"
  },
  {
    "text": "If you knew you were\nstarting from the zero state, you'd start off with\na zero cost there. So you're at\ninfinity here, which",
    "start": "2136027",
    "end": "2142210"
  },
  {
    "text": "is going to force all the\noptimal paths to come from 0. And then you'll\ncontinue from there.",
    "start": "2142210",
    "end": "2149360"
  },
  {
    "text": "So I just wanted to show you a\nfew things that come with this.",
    "start": "2149360",
    "end": "2157840"
  },
  {
    "start": "2157840",
    "end": "2164150"
  },
  {
    "text": "Actually, I might have shown\nyou everything I want on that.",
    "start": "2164150",
    "end": "2173279"
  },
  {
    "text": "So let's just go back to\nthe soft decision decoding. So how might things\ndiffer if you go back",
    "start": "2173280",
    "end": "2180730"
  },
  {
    "text": "to soft decision decoding? So let me find that slide. ",
    "start": "2180730",
    "end": "2193140"
  },
  {
    "text": "The Viterbi algorithm\ndoesn't care how you come at these costs. The Viterbi algorithm is\njust dynamic programming",
    "start": "2193140",
    "end": "2199912"
  },
  {
    "text": "on this trellis. It finds you the\nminimum-cost path. It's up to you how\nyou decide what cost to attribute to an edge.",
    "start": "2199913",
    "end": "2207170"
  },
  {
    "text": "So the question is, are\nthere other costs that you might have come up with? Well, if the received sequence\nhas been translated already",
    "start": "2207170",
    "end": "2213650"
  },
  {
    "text": "to 0's and 1's, then Hamming\ndistance is the natural thing. But if you're keeping\nparticular numbers there,",
    "start": "2213650",
    "end": "2221240"
  },
  {
    "text": "then it turns out that you might\nwant to do things differently. So suppose at a particular\nstage, what you got was not--",
    "start": "2221240",
    "end": "2235320"
  },
  {
    "text": "let's see. Did I put numbers up there? Suppose it wasn't 0 and 1, but\nit was some particular numbers,",
    "start": "2235320",
    "end": "2247359"
  },
  {
    "text": "let's say, 0.3 and 0.7.",
    "start": "2247360",
    "end": "2253870"
  },
  {
    "text": "And you had actually\ntranslated them to a 0 and a 1 in your hard decision decoding.",
    "start": "2253870",
    "end": "2261700"
  },
  {
    "text": "If you decide not to\ndo that, but to stick with these numbers,\nthen what you have is the task for\nany particular edge",
    "start": "2261700",
    "end": "2268420"
  },
  {
    "text": "that you're traveling\non of finding the distance between\nthe parity bits",
    "start": "2268420",
    "end": "2274299"
  },
  {
    "text": "you would emit on that edge and\nthe samples that you have here. It turns out that a very widely\nused cost for soft decision",
    "start": "2274300",
    "end": "2282910"
  },
  {
    "text": "decoding is the sum of\nsquared differences. So what you would\nhave is 1 minus 0.3",
    "start": "2282910",
    "end": "2289900"
  },
  {
    "text": "squared plus 1\nminus 0.7 squared.",
    "start": "2289900",
    "end": "2295390"
  },
  {
    "text": " So it would be the\nfirst bit that you",
    "start": "2295390",
    "end": "2301060"
  },
  {
    "text": "emit on this arc\nminus the first sample that you got squared error\nplus the second sample,",
    "start": "2301060",
    "end": "2309423"
  },
  {
    "text": "the second bit\nthat you would emit on this arc minus the second\nsample, whole thing squared.",
    "start": "2309423",
    "end": "2314590"
  },
  {
    "text": "If there was another arc\nthat was a 1 and 0 arc, then what you would\ncomputers 1 minus 0.3",
    "start": "2314590",
    "end": "2323500"
  },
  {
    "text": "squared plus 0\nminus 0.7 squared.",
    "start": "2323500",
    "end": "2331630"
  },
  {
    "text": "So it's just a different way\nof coming up with the cost. The rest of the Viterbi\nalgorithm is exactly the same.",
    "start": "2331630",
    "end": "2336760"
  },
  {
    "text": "the navigating through the\ntrellis is exactly the same. It turns out that there\nis a logic and a reason",
    "start": "2336760",
    "end": "2345609"
  },
  {
    "text": "behind this particular\nmetric for situations where",
    "start": "2345610",
    "end": "2351670"
  },
  {
    "text": "your voltage samples\nare distributed",
    "start": "2351670",
    "end": "2356849"
  },
  {
    "text": "in the familiar\nbell-shaped fashion here,",
    "start": "2356850",
    "end": "2362930"
  },
  {
    "text": "what's called a\nGaussian distribution. We'll talk about\nit more next time. ",
    "start": "2362930",
    "end": "2373710"
  },
  {
    "text": "So what we're saying is\nthat if you send a 1,",
    "start": "2373710",
    "end": "2378830"
  },
  {
    "text": "you get a spread\nof possible values. The probability of\nyour values falling in some particular range here\ncan be computed by the area",
    "start": "2378830",
    "end": "2387230"
  },
  {
    "text": "under this particular curve. It's got an\nanalytical expression.",
    "start": "2387230",
    "end": "2393000"
  },
  {
    "text": "So this is the most likely spot. But there is certainly\nprobabilities of falling in any\nparticular interval here.",
    "start": "2393000",
    "end": "2398180"
  },
  {
    "text": "Well, what does the Gaussian\ndistribution look like? We'll talk more about it.",
    "start": "2398180",
    "end": "2403960"
  },
  {
    "text": "the essential part of\nit is e to the minus-- let's see. Let me put some labels here.",
    "start": "2403960",
    "end": "2410059"
  },
  {
    "text": "This is where it's centered. Let me call it mu. And let's say x is the\nvalue along the axis.",
    "start": "2410060",
    "end": "2417840"
  },
  {
    "text": "So we'll have e\nto the x minus mu all squared divided by\nsome normalizing parameter.",
    "start": "2417840",
    "end": "2427530"
  },
  {
    "text": "Well actually,\nlet's just call it capital N. Think of capital\nN as a noise variance.",
    "start": "2427530",
    "end": "2436780"
  },
  {
    "text": "Actually, let me\njust call it N sub 0 so you don't think\nit's a counting number.",
    "start": "2436780",
    "end": "2442340"
  },
  {
    "text": "Think of it as a noise variance. So the larger that\nN is, would you",
    "start": "2442340",
    "end": "2450000"
  },
  {
    "text": "spread out more or less here? ",
    "start": "2450000",
    "end": "2455165"
  },
  {
    "text": "Well, just from the fact\nthat I call it a variance, maybe you would guess\nthat, if N is larger, you're going to spread out more.",
    "start": "2455165",
    "end": "2460500"
  },
  {
    "text": " Well, in this kind of setting,\nwhen you take log likelihoods--",
    "start": "2460500",
    "end": "2466710"
  },
  {
    "text": "you've seen that computation\nin the chapters-- what ends up appearing\nin your cost criterion is x minus mu squared.",
    "start": "2466710",
    "end": "2473910"
  },
  {
    "text": "So it's the squared\ndifference from the mean that you want to be looking at. And that's exactly why,\nin that kind of setting,",
    "start": "2473910",
    "end": "2480942"
  },
  {
    "text": "this is what you end up\nchoosing as your cost metric. ",
    "start": "2480942",
    "end": "2487859"
  },
  {
    "text": "But once you're done\ncomputing those metrics,",
    "start": "2487860",
    "end": "2497013"
  },
  {
    "text": "the rest of the Viterbi\nalgorithm is the same. ",
    "start": "2497013",
    "end": "2502220"
  },
  {
    "start": "2500000",
    "end": "2500000"
  },
  {
    "text": "So once you have the\nconvolutional coding in hand,",
    "start": "2502220",
    "end": "2507990"
  },
  {
    "text": "you know how to\ndecode, you can start to do some comparisons of how\nthese different codes perform.",
    "start": "2507990",
    "end": "2514920"
  },
  {
    "text": "There is an extensive\ndiscussion in the chapter. Let me just give you\nsome highlights here.",
    "start": "2514920",
    "end": "2521240"
  },
  {
    "text": "OK, so what are\nwe plotting here?  What we're saying is we send\na whole bunch of message bits",
    "start": "2521240",
    "end": "2530430"
  },
  {
    "text": "through the channel. And then we decode\nat the other end. And what we're\ntalking about is--",
    "start": "2530430",
    "end": "2536680"
  },
  {
    "text": "let's see. Here is the binary\nsymmetric channel. Here is the error\nprobability on the channel. You can see to well what\nthis is, but it's the--",
    "start": "2536680",
    "end": "2544100"
  },
  {
    "text": "why is that chopped off? It's the probability of\nerror overall end to end,",
    "start": "2544100",
    "end": "2550850"
  },
  {
    "text": "not of the channel,\nbut after you've done your coding and decoding. Let's see.",
    "start": "2550850",
    "end": "2556070"
  },
  {
    "text": "Do we recognize\nany of these codes? Here is the uncoded case\nwhere basically you're",
    "start": "2556070",
    "end": "2562220"
  },
  {
    "text": "exposing the stream directly\nto the error on the binary symmetric channel.",
    "start": "2562220",
    "end": "2569330"
  },
  {
    "text": "We expect higher\nerrors when we have higher probabilities of\nflipping a bit on the channel.",
    "start": "2569330",
    "end": "2575120"
  },
  {
    "text": "So this is the uncoded case. What does the Hamming code do? That's a Hamming code\nprobability, 0.74.",
    "start": "2575120",
    "end": "2584269"
  },
  {
    "text": "So the Hamming code\nperformance, you can see here end to end what it looks like.",
    "start": "2584270",
    "end": "2590150"
  },
  {
    "text": "What's the rate\nthat goes with that? ",
    "start": "2590150",
    "end": "2595588"
  },
  {
    "text": "What's the rate of\nthat Hamming code?  4 over 7, right?",
    "start": "2595588",
    "end": "2602380"
  },
  {
    "text": "Because n is the number\nof bits in the message--",
    "start": "2602380",
    "end": "2608369"
  },
  {
    "text": "sorry, in the code word. And 4 is the number of bits\nin the message, so 4 over 7,",
    "start": "2608370",
    "end": "2613450"
  },
  {
    "text": "something over 1/2. Let's see. Do we know what\nthat code might be?",
    "start": "2613450",
    "end": "2620080"
  },
  {
    "text": " Any codes you know about\nthat take 4 message bits",
    "start": "2620080",
    "end": "2625260"
  },
  {
    "text": "and pad them to\n8 code word bits? ",
    "start": "2625260",
    "end": "2632089"
  },
  {
    "text": "You've seen at\nleast one such code. AUDIENCE: [INAUDIBLE] PROFESSOR: Sorry? AUDIENCE: Rectangular parity? PROFESSOR: Rectangular\nparity, right?",
    "start": "2632090",
    "end": "2638320"
  },
  {
    "text": "If you didn't have\nthat corner parity bit, but you just did the\nrows and columns, then you'd arrange 4\nbits in a 2 by 2 pattern",
    "start": "2638320",
    "end": "2645720"
  },
  {
    "text": "and then have 4 parity bits. So that's a rectangular parity. That's rate 1/2.",
    "start": "2645720",
    "end": "2651710"
  },
  {
    "text": "What this denotes is\na convolutional code. It's actually the\ncode we've been--",
    "start": "2651710",
    "end": "2657319"
  },
  {
    "text": "sorry, no, this one is the\ncode we've been looking at. So let me explain to you\nwhat that notation means when",
    "start": "2657320",
    "end": "2663980"
  },
  {
    "text": "you're reading the chapter. ",
    "start": "2663980",
    "end": "2671530"
  },
  {
    "text": "This code is represented as-- the one we've been talking\nabout as represented as this.",
    "start": "2671530",
    "end": "2678130"
  },
  {
    "text": "So what this is is\nthe constraint length. And what this is\nis just to tell me",
    "start": "2678130",
    "end": "2684220"
  },
  {
    "text": "that the generator bits I\nused for my party generation",
    "start": "2684220",
    "end": "2689500"
  },
  {
    "text": "correspond to the binary\nrepresentation of 7 and the binary\nrepresentation of 5.",
    "start": "2689500",
    "end": "2696250"
  },
  {
    "text": "So remember that for\nmy first parody bit, I chose xn plus xn\nminus 1 plus xn minus 2.",
    "start": "2696250",
    "end": "2703630"
  },
  {
    "text": "I picked all three of them. For my second parity bit,\nI took xn plus xn minus 2.",
    "start": "2703630",
    "end": "2709060"
  },
  {
    "text": "I skipped the middle one. So the notation that's used\nto denote a convolutional code with these two generators is,\njust for compactness, the 7,",
    "start": "2709060",
    "end": "2720480"
  },
  {
    "text": "5 there. Let's see. Is this redundant,\nthe k, the value of k?",
    "start": "2720480",
    "end": "2726040"
  },
  {
    "text": "Could you have figured out\nwhat the constraint length is? AUDIENCE: Yeah.",
    "start": "2726040",
    "end": "2731120"
  },
  {
    "text": "PROFESSOR: Yeah. It's already staring at you here\nwhat the constraints length. So this is a little redundant.",
    "start": "2731120",
    "end": "2736780"
  },
  {
    "text": "It's just that it's\na convenient way to distinguish a convolutional\ncode from a Hamming code.",
    "start": "2736780",
    "end": "2742150"
  },
  {
    "text": " Now, we have to be a little\ncareful comparing these codes,",
    "start": "2742150",
    "end": "2748750"
  },
  {
    "text": "because the rates are\nall a little different. Here the rate is 1/2. What's the rate for\nthis convolution",
    "start": "2748750",
    "end": "2755860"
  },
  {
    "text": "for the two convolution\ncodes here, the 3, 7, 6",
    "start": "2755860",
    "end": "2761763"
  },
  {
    "text": "and the 3, 7, 5? AUDIENCE: [INAUDIBLE] ",
    "start": "2761763",
    "end": "2767040"
  },
  {
    "text": "PROFESSOR: Sorry, what's-- AUDIENCE: 1/2 [INAUDIBLE]. PROFESSOR: 1/2, right? So the rate is 1 over\nthe number of parity bits",
    "start": "2767040",
    "end": "2777360"
  },
  {
    "text": "you're generating per message. ",
    "start": "2777360",
    "end": "2783300"
  },
  {
    "text": "One message bit, r parity bits,\ntherefore, a rate of 1 over r. So these are rate one-off codes,\njust like the rectangular case.",
    "start": "2783300",
    "end": "2790140"
  },
  {
    "text": " This is constraint length 4.",
    "start": "2790140",
    "end": "2797070"
  },
  {
    "text": "And you can actually write\nout what that would be there.",
    "start": "2797070",
    "end": "2802470"
  },
  {
    "text": "How big is the trellis for\nthe constraint length 4 case? ",
    "start": "2802470",
    "end": "2807940"
  },
  {
    "text": "How many stages? ",
    "start": "2807940",
    "end": "2813307"
  },
  {
    "text": "This last one down there?  8, right?",
    "start": "2813308",
    "end": "2818780"
  },
  {
    "text": "Constraint length 4, that means\nk equals 4, 2 to the k minus 1, so 2 cubed states.",
    "start": "2818780",
    "end": "2824079"
  },
  {
    "text": "So there is 8 states\nthat we're talking about. The Cassini convolution code\nthat I showed you last time",
    "start": "2824080",
    "end": "2831340"
  },
  {
    "text": "had a constraint length of 15. So how many states\nthere on the trellis?",
    "start": "2831340",
    "end": "2838170"
  },
  {
    "text": "2 to the 14, that's\na lot of states. So that's a lot of\ncomputation there happening.",
    "start": "2838170",
    "end": "2845119"
  },
  {
    "text": "And actually, there\nis no hope of that having been done if it wasn't\nfor the Viterbi algorithm. All right, we'll talk more about\ncomparison between these codes",
    "start": "2845120",
    "end": "2853340"
  },
  {
    "text": "next time. Sorry, I should do\none more thing here. I did talk last time about\nthis notion of free distance.",
    "start": "2853340",
    "end": "2860015"
  },
  {
    "text": " Let's just stare\nat this a second.",
    "start": "2860015",
    "end": "2868090"
  },
  {
    "start": "2865000",
    "end": "2865000"
  },
  {
    "text": "We said the free distance was\nthe weight of the smallest non-zero codeword.",
    "start": "2868090",
    "end": "2874510"
  },
  {
    "text": "And it gave you a handle on\nthe performance of the code. It was the Hamming distance\nfor the set of code words",
    "start": "2874510",
    "end": "2880810"
  },
  {
    "text": "you could generate between\n0, 0 here and 0, 0 there. Can you see by inspection\nhere what might be a candidate",
    "start": "2880810",
    "end": "2890940"
  },
  {
    "text": "free distance here? I think what we had\nlast time was 5, right? This is the 1, 1; 0, 1; 1, 1.",
    "start": "2890940",
    "end": "2898470"
  },
  {
    "text": "And we'll pick up 1, 2,\n3, 4, 5, a weight of 5. And it turns out there is no\nother path that's smaller.",
    "start": "2898470",
    "end": "2905430"
  },
  {
    "text": "So the performance of\nthis particular code is indicated by that number 5.",
    "start": "2905430",
    "end": "2911520"
  },
  {
    "text": "It tells you that you\ncan correct two bits. But actually, it\ntells you much more",
    "start": "2911520",
    "end": "2917400"
  },
  {
    "text": "than you would typically try\nand extract from a typical block",
    "start": "2917400",
    "end": "2922829"
  },
  {
    "text": "code where you would say, if\nthere is Hamming distance 5, you only can correct two codes. Here you've got\nmessage bits that",
    "start": "2922830",
    "end": "2929250"
  },
  {
    "text": "go on for a long time,\nthousands of bits. So what this is telling you\nis that in a duration that's",
    "start": "2929250",
    "end": "2936210"
  },
  {
    "text": "of the order of five\nor six message bits, you can, with this scheme,\ncorrect up to two bits.",
    "start": "2936210",
    "end": "2943079"
  },
  {
    "text": "You can have bursts of\nerrors that are very frequent and correct them with\nthis Viterbi decoding.",
    "start": "2943080",
    "end": "2948810"
  },
  {
    "text": "So the free distance\nis an important notion. So when you do the examples\nin recitation tomorrow, please look out for what the\nfree distance is for your codes",
    "start": "2948810",
    "end": "2957119"
  },
  {
    "text": "and compare with\nwhat we have here. ",
    "start": "2957120",
    "end": "2962000"
  }
]