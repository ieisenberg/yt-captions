[
  {
    "start": "0",
    "end": "30"
  },
  {
    "text": "The following content is\nprovided under a Creative",
    "start": "30",
    "end": "2430"
  },
  {
    "text": "Commons license.",
    "start": "2430",
    "end": "3990"
  },
  {
    "text": "Your support will help MIT\nOpenCourseWare continue to",
    "start": "3990",
    "end": "6859"
  },
  {
    "text": "offer high quality educational\nresources for free.",
    "start": "6860",
    "end": "10550"
  },
  {
    "text": "To make a donation or view\nadditional materials from",
    "start": "10550",
    "end": "13410"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at",
    "start": "13410",
    "end": "17510"
  },
  {
    "text": "ocw.mit.edu.",
    "start": "17510",
    "end": "19950"
  },
  {
    "text": "PROFESSOR: So, yesterday in\nthe recitation we talked a",
    "start": "19950",
    "end": "26100"
  },
  {
    "text": "little bit about how to debug\nprograms on Cell.",
    "start": "26100",
    "end": "29260"
  },
  {
    "text": "Today I'm going to talk a little\nmore about debugging",
    "start": "29260",
    "end": "32419"
  },
  {
    "text": "parallel programs in general and\ngive you some common tips",
    "start": "32420",
    "end": "36120"
  },
  {
    "text": "that might be helpful in\nhelping you track down",
    "start": "36120",
    "end": "39430"
  },
  {
    "text": "problems that you run into.",
    "start": "39430",
    "end": "41290"
  },
  {
    "start": "41290",
    "end": "45190"
  },
  {
    "text": "As you might have gotten a feel\nfor yesterday, debugging",
    "start": "45190",
    "end": "48170"
  },
  {
    "text": "parallel programs is harder\nthan normal sequential",
    "start": "48170",
    "end": "51649"
  },
  {
    "text": "programs. So in normal\nsequential programs, you have",
    "start": "51650",
    "end": "54090"
  },
  {
    "text": "your traditional set\nof bugs which",
    "start": "54090",
    "end": "55830"
  },
  {
    "text": "parallel programs inherit.",
    "start": "55830",
    "end": "57220"
  },
  {
    "text": "So that doesn't get much harder,\nbut then you add on",
    "start": "57220",
    "end": "60890"
  },
  {
    "text": "new things I can go wrong\nbecause of parallelization.",
    "start": "60890",
    "end": "63489"
  },
  {
    "text": "So things like synchronization,\nthings like",
    "start": "63490",
    "end": "65540"
  },
  {
    "text": "deadlocks, things\nlike data races.",
    "start": "65540",
    "end": "67790"
  },
  {
    "text": "So you have to get\nthose right.",
    "start": "67790",
    "end": "69220"
  },
  {
    "text": "Now you have to debug your\nprogram and figure",
    "start": "69220",
    "end": "71310"
  },
  {
    "text": "out how to do that.",
    "start": "71310",
    "end": "72680"
  },
  {
    "text": "One of the things you'll see\nhere is a lot of tools might",
    "start": "72680",
    "end": "75530"
  },
  {
    "text": "not be as good as you'd like\nthem to in terms of providing",
    "start": "75530",
    "end": "79440"
  },
  {
    "text": "you the functionality\nfor debugging.",
    "start": "79440",
    "end": "82840"
  },
  {
    "text": "Add to that that bugs in\nparallel programs often just",
    "start": "82840",
    "end": "86490"
  },
  {
    "text": "go away if you change one\nstatement in your code -- you",
    "start": "86490",
    "end": "92299"
  },
  {
    "text": "reorder things and all of a\nsudden the bug is gone.",
    "start": "92300",
    "end": "94640"
  },
  {
    "text": "It's kind of like those pointer\nproblems in C, where",
    "start": "94640",
    "end": "97360"
  },
  {
    "text": "you might add a word, add a\nnew variable somewhere and",
    "start": "97360",
    "end": "100940"
  },
  {
    "text": "problem's gone, or you\nadd a print-off and",
    "start": "100940",
    "end": "102505"
  },
  {
    "text": "the problem is gone.",
    "start": "102505",
    "end": "104130"
  },
  {
    "text": "So here it gets harder because\nthose things can get rid of",
    "start": "104130",
    "end": "107060"
  },
  {
    "text": "deadlocks, so it makes it\nreally hard to have an",
    "start": "107060",
    "end": "110530"
  },
  {
    "text": "experiment that you can repeat\nand come down to where the",
    "start": "110530",
    "end": "113210"
  },
  {
    "text": "problem is.",
    "start": "113210",
    "end": "115630"
  },
  {
    "text": "So what might you want\nin a debugger.",
    "start": "115630",
    "end": "117909"
  },
  {
    "text": "So this is a list that I've come\nup with, and if you have",
    "start": "117910",
    "end": "121190"
  },
  {
    "text": "some ideas we'll want\nto throw them out.",
    "start": "121190",
    "end": "123760"
  },
  {
    "text": "I'm thinking in terms of\ndebugging parallel program,",
    "start": "123760",
    "end": "125970"
  },
  {
    "text": "what I want is a visual\ndebugging system that really",
    "start": "125970",
    "end": "129190"
  },
  {
    "text": "let's me see all the processors\nthat I have in my",
    "start": "129190",
    "end": "131490"
  },
  {
    "text": "network in my multi-processor\nsystem.",
    "start": "131490",
    "end": "134790"
  },
  {
    "text": "That includes actual computing\nand the actual network that",
    "start": "134790",
    "end": "139060"
  },
  {
    "text": "they're interconnecting all the\nprocessors that are going",
    "start": "139060",
    "end": "141055"
  },
  {
    "text": "to be communicating\nwith each other.",
    "start": "141055",
    "end": "143219"
  },
  {
    "text": "So I'd like to be able\nto see what code is",
    "start": "143220",
    "end": "145160"
  },
  {
    "text": "running on each processor.",
    "start": "145160",
    "end": "146610"
  },
  {
    "text": "I'd like to see which edges\nare being used to send",
    "start": "146610",
    "end": "149110"
  },
  {
    "text": "messages around.",
    "start": "149110",
    "end": "150300"
  },
  {
    "text": "I might want to know which\nprocessors are blocked -- that",
    "start": "150300",
    "end": "153010"
  },
  {
    "text": "might help me identify\ndeadlock problems.",
    "start": "153010",
    "end": "157250"
  },
  {
    "text": "For these kinds of scenarios it\nmight be tricky to define",
    "start": "157250",
    "end": "160110"
  },
  {
    "text": "step, because there's no global\nclock, you can't force",
    "start": "160110",
    "end": "162940"
  },
  {
    "text": "everybody to proceed\nthrough one step.",
    "start": "162940",
    "end": "165150"
  },
  {
    "text": "What's one step on one processor\nmight be different",
    "start": "165150",
    "end": "167590"
  },
  {
    "text": "on another, especially\nif they're not all",
    "start": "167590",
    "end": "169269"
  },
  {
    "text": "running the same code.",
    "start": "169270",
    "end": "170460"
  },
  {
    "text": "So how do you actually do that\nwithout a global clock.",
    "start": "170460",
    "end": "175170"
  },
  {
    "text": "So that can get a little\nbit tricky.",
    "start": "175170",
    "end": "178150"
  },
  {
    "text": "It likely won't help with data\nraces, because I'm looking at",
    "start": "178150",
    "end": "181230"
  },
  {
    "text": "global communication problems,\nI'm looking at trying to",
    "start": "181230",
    "end": "183659"
  },
  {
    "text": "identify what's deadlocked\nand what's not.",
    "start": "183660",
    "end": "185680"
  },
  {
    "text": "So if there are data races, this\nkind of tool may or may",
    "start": "185680",
    "end": "188040"
  },
  {
    "text": "not help with that.",
    "start": "188040",
    "end": "189939"
  },
  {
    "text": "In general, this is\nthe tool that I",
    "start": "189940",
    "end": "191380"
  },
  {
    "text": "would build for debugging.",
    "start": "191380",
    "end": "194060"
  },
  {
    "text": "I looked around on the web to\nsee what's out there for",
    "start": "194060",
    "end": "196430"
  },
  {
    "text": "debugging parallel\nprograms, and I",
    "start": "196430",
    "end": "197640"
  },
  {
    "text": "found this called TotalView.",
    "start": "197640",
    "end": "199819"
  },
  {
    "text": "This is actually something you\nhave to buy, it's not free.",
    "start": "199820",
    "end": "202260"
  },
  {
    "text": "I don't know if they have\nevaluation licenses or",
    "start": "202260",
    "end": "204790"
  },
  {
    "text": "licences for academic\npurposes.",
    "start": "204790",
    "end": "208069"
  },
  {
    "text": "It kind of gets close to\nsome of the things",
    "start": "208070",
    "end": "209940"
  },
  {
    "text": "I was talking about.",
    "start": "209940",
    "end": "212330"
  },
  {
    "text": "You have processors that shows\nyour communication between",
    "start": "212330",
    "end": "214540"
  },
  {
    "text": "those processors, how much data\nis being sent through.",
    "start": "214540",
    "end": "219040"
  },
  {
    "text": "This particular version uses\nNPI, which we talked about in",
    "start": "219040",
    "end": "222730"
  },
  {
    "text": "previous lectures.",
    "start": "222730",
    "end": "223780"
  },
  {
    "text": "So it's sort of helpful in\nbeing able to see the",
    "start": "223780",
    "end": "226569"
  },
  {
    "text": "computation, looking at\nthe communication, and",
    "start": "226570",
    "end": "229180"
  },
  {
    "text": "tracking down bugs.",
    "start": "229180",
    "end": "231129"
  },
  {
    "text": "But it doesn't get much\nbetter from there.",
    "start": "231130",
    "end": "233930"
  },
  {
    "text": "You know, how many people have\nused printouts for debugging?",
    "start": "233930",
    "end": "238599"
  },
  {
    "text": "It's the most popular way of\ndebugging, and even I still",
    "start": "238600",
    "end": "241600"
  },
  {
    "text": "use it for debugging\nsome of the Cell",
    "start": "241600",
    "end": "243500"
  },
  {
    "text": "programs we've been writing.",
    "start": "243500",
    "end": "246680"
  },
  {
    "text": "I know the TAs actually\nuse this is well.",
    "start": "246680",
    "end": "249489"
  },
  {
    "text": "Yesterday you got a hands-on\nexperience with GDB, and GDB",
    "start": "249490",
    "end": "254100"
  },
  {
    "text": "is a nice debugger, but it lacks\na lot of things that you",
    "start": "254100",
    "end": "257440"
  },
  {
    "text": "might want, especially for\ndebugging parallel programs.",
    "start": "257440",
    "end": "260829"
  },
  {
    "text": "You saw, for example, that you\nhave multiple threads, you",
    "start": "260830",
    "end": "262860"
  },
  {
    "text": "need to be able switch between\nthe threads, getting the",
    "start": "262860",
    "end": "264979"
  },
  {
    "text": "context right, being able to\nname the variables is tricky.",
    "start": "264980",
    "end": "268190"
  },
  {
    "text": "So there's a lot of things\nthat could be improved.",
    "start": "268190",
    "end": "272820"
  },
  {
    "text": "There are some research\ndebuggers, like something",
    "start": "272820",
    "end": "275970"
  },
  {
    "text": "we've built as part\nof the streaming",
    "start": "275970",
    "end": "277720"
  },
  {
    "text": "projects, StreamIt debugger.",
    "start": "277720",
    "end": "279160"
  },
  {
    "text": "I'll show you some screenshots\nof this so you can",
    "start": "279160",
    "end": "280870"
  },
  {
    "text": "see what we can do.",
    "start": "280870",
    "end": "282290"
  },
  {
    "text": "So in the StreamIt debugger,\nremember we have -- so this is",
    "start": "282290",
    "end": "285930"
  },
  {
    "text": "actually built in Eclipse and\nyou can download this off the",
    "start": "285930",
    "end": "288720"
  },
  {
    "text": "web as well.",
    "start": "288720",
    "end": "289900"
  },
  {
    "text": "You can look at your\nstream graph.",
    "start": "289900",
    "end": "292229"
  },
  {
    "text": "Unfortunately, I couldn't get a\nsplit join in there, much to",
    "start": "292230",
    "end": "295410"
  },
  {
    "text": "Bill's dismay.",
    "start": "295410",
    "end": "296990"
  },
  {
    "text": "So you can't see, for example,\nthe split join in all the",
    "start": "296990",
    "end": "299180"
  },
  {
    "text": "communication.",
    "start": "299180",
    "end": "301740"
  },
  {
    "text": "Each one of these is a filter,\nand if you recall the filter",
    "start": "301740",
    "end": "304849"
  },
  {
    "text": "is the computational element\nin your stream graph and",
    "start": "304850",
    "end": "308710"
  },
  {
    "text": "interconnected by channels.",
    "start": "308710",
    "end": "310300"
  },
  {
    "text": "So channels communicate data.",
    "start": "310300",
    "end": "312210"
  },
  {
    "text": "So what you see here -- well,\nyou might not be able to quite",
    "start": "312210",
    "end": "314940"
  },
  {
    "text": "see it -- actually see the\ndata that's being passed",
    "start": "314940",
    "end": "317010"
  },
  {
    "text": "through from one filter\nto the other.",
    "start": "317010",
    "end": "318890"
  },
  {
    "text": "You can actually go in there\nand change the value if you",
    "start": "318890",
    "end": "320890"
  },
  {
    "text": "wanted to or highlight\nparticular value and see how",
    "start": "320890",
    "end": "323780"
  },
  {
    "text": "it flows down through\nthe graph.",
    "start": "323780",
    "end": "325870"
  },
  {
    "text": "If you had a split join, then\nyou might be able to -- in",
    "start": "325870",
    "end": "328520"
  },
  {
    "text": "fact, you can do this.",
    "start": "328520",
    "end": "329419"
  },
  {
    "text": "You can look at each path of the\nsplit join independently",
    "start": "329420",
    "end": "333400"
  },
  {
    "text": "and you can look at\nit in sequence.",
    "start": "333400",
    "end": "335490"
  },
  {
    "text": "Because the split join has nice\nsemantics, it's actually",
    "start": "335490",
    "end": "338300"
  },
  {
    "text": "you can replicate the behavior\nbecause of the static nature",
    "start": "338300",
    "end": "342474"
  },
  {
    "text": "is everything is\ndeterministic.",
    "start": "342475",
    "end": "344800"
  },
  {
    "text": "So this is very helpful.",
    "start": "344800",
    "end": "346050"
  },
  {
    "text": "We we did a user study two\nyears ago almost with",
    "start": "346050",
    "end": "350220"
  },
  {
    "text": "something like 30 MIT students\nwho use the C bugger and gave",
    "start": "350220",
    "end": "352770"
  },
  {
    "text": "us feedback on it.",
    "start": "352770",
    "end": "356120"
  },
  {
    "text": "So we gave them like 10\nproblems, 10 code snippets,",
    "start": "356120",
    "end": "361729"
  },
  {
    "text": "each of them had a bug in it,\nwe asked them to find it.",
    "start": "361730",
    "end": "364000"
  },
  {
    "text": "So a lot of them found to\ndebugger to be helpful in",
    "start": "364000",
    "end": "366090"
  },
  {
    "text": "being able to track the flow of\ndata and being able to see",
    "start": "366090",
    "end": "369010"
  },
  {
    "text": "what goes wrong.",
    "start": "369010",
    "end": "369810"
  },
  {
    "text": "So if you had, for example, a\ndivision that resulted in NaN",
    "start": "369810",
    "end": "373460"
  },
  {
    "text": "and not a number, floating\npoint division you can",
    "start": "373460",
    "end": "375750"
  },
  {
    "text": "immediately see on a screen, so\nyou know exactly where to",
    "start": "375750",
    "end": "377750"
  },
  {
    "text": "go look for it.",
    "start": "377750",
    "end": "378880"
  },
  {
    "text": "Doing that would print-offs\nmight not be as easy.",
    "start": "378880",
    "end": "382110"
  },
  {
    "text": "So sometimes visual debugging\ncan be very nice.",
    "start": "382110",
    "end": "384930"
  },
  {
    "text": "Unfortunately, visual debugging\nfor the Cell isn't",
    "start": "384930",
    "end": "387300"
  },
  {
    "text": "that great.",
    "start": "387300",
    "end": "388110"
  },
  {
    "text": "So this is the Cell plug-in\nin Eclipse.",
    "start": "388110",
    "end": "392240"
  },
  {
    "text": "I've mentioned just to some of\nyou if you want to run it you",
    "start": "392240",
    "end": "395180"
  },
  {
    "text": "can run it from a Playstation 3,\nbut if more than one of you",
    "start": "395180",
    "end": "399050"
  },
  {
    "text": "is running it then it\nbecomes unusable",
    "start": "399050",
    "end": "401919"
  },
  {
    "text": "because of memory issues.",
    "start": "401920",
    "end": "404360"
  },
  {
    "text": "You can install this on other\nLinux machines and remotely",
    "start": "404360",
    "end": "410050"
  },
  {
    "text": "debug on the Playstation\n3 hardware.",
    "start": "410050",
    "end": "411750"
  },
  {
    "text": "So the two remote machines can\ntalk through GDB ports.",
    "start": "411750",
    "end": "415410"
  },
  {
    "text": "I can talk to you about how to\nset that up if you want to,",
    "start": "415410",
    "end": "417770"
  },
  {
    "text": "but it doesn't really\nadd anything",
    "start": "417770",
    "end": "419259"
  },
  {
    "text": "over E-Max, for example.",
    "start": "419260",
    "end": "420830"
  },
  {
    "text": "It just might look fancier than\nan E-Max window or a GDB",
    "start": "420830",
    "end": "423949"
  },
  {
    "text": "on the command line prompt.",
    "start": "423950",
    "end": "425530"
  },
  {
    "text": "So this is the code\nfrom yesterday.",
    "start": "425530",
    "end": "427200"
  },
  {
    "text": "These are the exercises\nwe asked you to do.",
    "start": "427200",
    "end": "429610"
  },
  {
    "text": "You can look at the\ndifferent threads.",
    "start": "429610",
    "end": "431129"
  },
  {
    "text": "If you have debug Java programs\nin Eclipse this",
    "start": "431130",
    "end": "433190"
  },
  {
    "text": "should look very familiar.",
    "start": "433190",
    "end": "434860"
  },
  {
    "text": "You can look at the different\nvariables.",
    "start": "434860",
    "end": "438030"
  },
  {
    "text": "You still have the\nnaming problem.",
    "start": "438030",
    "end": "439760"
  },
  {
    "text": "So yesterday, remember you had\nto qualify which control box",
    "start": "439760",
    "end": "442800"
  },
  {
    "text": "you were looking at?",
    "start": "442800",
    "end": "443699"
  },
  {
    "text": "Still the same kind of issue --\nhave to do some trickery to",
    "start": "443700",
    "end": "445750"
  },
  {
    "text": "find it here.",
    "start": "445750",
    "end": "447010"
  },
  {
    "text": "It doesn't have the nice visual\naspect of showing you",
    "start": "447010",
    "end": "449840"
  },
  {
    "text": "which code is running on which\nSPE, and you might not be able",
    "start": "449840",
    "end": "452980"
  },
  {
    "text": "to find mailbox synchronization\nproblems.",
    "start": "452980",
    "end": "457510"
  },
  {
    "text": "Maybe those things will come in\nthe future, and the fact,",
    "start": "457510",
    "end": "459700"
  },
  {
    "text": "they likely will.",
    "start": "459700",
    "end": "461210"
  },
  {
    "text": "But a lot of that is sort\nof still lacking.",
    "start": "461210",
    "end": "462949"
  },
  {
    "text": "So what do you do in the\nmeantime, In the next two",
    "start": "462950",
    "end": "465530"
  },
  {
    "text": "weeks as you're writing\nyour programs?",
    "start": "465530",
    "end": "467650"
  },
  {
    "text": "So I've looked around for some\ntips or some talks and",
    "start": "467650",
    "end": "471560"
  },
  {
    "text": "lectures and what people have\ndone in terms of improving the",
    "start": "471560",
    "end": "476350"
  },
  {
    "text": "process for debugging\nparallel codes.",
    "start": "476350",
    "end": "479280"
  },
  {
    "text": "Probably the best thing I've\nfound is this talk that was",
    "start": "479280",
    "end": "481860"
  },
  {
    "text": "given at University of Maryland\non defect patterns.",
    "start": "481860",
    "end": "485189"
  },
  {
    "text": "So the rest of these\nslides are largely",
    "start": "485190",
    "end": "489260"
  },
  {
    "text": "drawn from that talk.",
    "start": "489260",
    "end": "491370"
  },
  {
    "text": "I'm going to identify just a few\nof them to give you some",
    "start": "491370",
    "end": "493680"
  },
  {
    "text": "examples so you can understand\nwhat to look for and what are",
    "start": "493680",
    "end": "496576"
  },
  {
    "text": "some common symptoms, what are\nsome common prevention",
    "start": "496576",
    "end": "499039"
  },
  {
    "text": "techniques.",
    "start": "499040",
    "end": "500770"
  },
  {
    "text": "So defect patterns, just like\nthe programming patterns we",
    "start": "500770",
    "end": "504660"
  },
  {
    "text": "talked about, are meant to help\nyou conjure up to write",
    "start": "504660",
    "end": "507520"
  },
  {
    "text": "contextual information.",
    "start": "507520",
    "end": "508599"
  },
  {
    "text": "You had what are things you\nshould look for if you're",
    "start": "508600",
    "end": "511240"
  },
  {
    "text": "communicating with\nsomebody else.",
    "start": "511240",
    "end": "513190"
  },
  {
    "text": "What kind of terminology do you\nuse so that you don't have",
    "start": "513190",
    "end": "515469"
  },
  {
    "text": "to explain things down\nto every last detail.",
    "start": "515470",
    "end": "520370"
  },
  {
    "text": "At the end of this course, one\nthing I'd like to do is maybe",
    "start": "520370",
    "end": "522930"
  },
  {
    "text": "get some feedback from each of\nyou as to what are some of the",
    "start": "522930",
    "end": "525220"
  },
  {
    "text": "problems that you ran into in\nwriting your programs, and how",
    "start": "525220",
    "end": "528920"
  },
  {
    "text": "you actually went about\ndebugging them, and maybe we",
    "start": "528920",
    "end": "531110"
  },
  {
    "text": "can come up with Cell defect\npatterns, and maybe Cell",
    "start": "531110",
    "end": "535050"
  },
  {
    "text": "defect recipes for resolving\nthose defect patterns.",
    "start": "535050",
    "end": "538430"
  },
  {
    "start": "538430",
    "end": "542050"
  },
  {
    "text": "So, probably the worst one of\nall, and the easiest one to",
    "start": "542050",
    "end": "545920"
  },
  {
    "text": "fix is that you have new\nlanguage features or new",
    "start": "545920",
    "end": "549130"
  },
  {
    "text": "language extensions that are\nnot well understood.",
    "start": "549130",
    "end": "552050"
  },
  {
    "text": "This is especially true when you\ntake a class of students",
    "start": "552050",
    "end": "555290"
  },
  {
    "text": "and they don't really know the\nlanguage, they don't know all",
    "start": "555290",
    "end": "558339"
  },
  {
    "text": "the tools, and you ask them to\ndo a project in four weeks and",
    "start": "558340",
    "end": "563150"
  },
  {
    "text": "you expect things to work.",
    "start": "563150",
    "end": "564120"
  },
  {
    "text": "So there's a lot for everybody\nto pick up and understand.",
    "start": "564120",
    "end": "568410"
  },
  {
    "text": "So you might have inconsistent\ntypes that you use in terms of",
    "start": "568410",
    "end": "571620"
  },
  {
    "text": "calling a function.",
    "start": "571620",
    "end": "573240"
  },
  {
    "text": "There might be alignment\nissues, which some of",
    "start": "573240",
    "end": "575430"
  },
  {
    "text": "you have run into.",
    "start": "575430",
    "end": "576899"
  },
  {
    "text": "You might use the\nwrong functions.",
    "start": "576900",
    "end": "578830"
  },
  {
    "text": "You know the functionality you\nwant but you just don't know",
    "start": "578830",
    "end": "581190"
  },
  {
    "text": "how to name it and so you might\nuse the wrong function.",
    "start": "581190",
    "end": "584510"
  },
  {
    "text": "Some of these are easy to fix\nbecause you might get a",
    "start": "584510",
    "end": "587300"
  },
  {
    "text": "compile time error.",
    "start": "587300",
    "end": "588470"
  },
  {
    "text": "If you have mismatch in function\nparameters then you",
    "start": "588470",
    "end": "591149"
  },
  {
    "text": "can fix that very easily.",
    "start": "591150",
    "end": "592840"
  },
  {
    "text": "Some defects -- you know, very\nnatural parallel programs",
    "start": "592840",
    "end": "595780"
  },
  {
    "text": "might not come up until run\ntime, so you might end up with",
    "start": "595780",
    "end": "598730"
  },
  {
    "text": "crashes or just erroneous\nbehavior.",
    "start": "598730",
    "end": "602220"
  },
  {
    "text": "I really think this is probably\nthe easiest one to",
    "start": "602220",
    "end": "603839"
  },
  {
    "text": "fix, and the prevention\ntechnique that I would",
    "start": "603840",
    "end": "607140"
  },
  {
    "text": "recommend is if there's\nsomething you're unfamiliar",
    "start": "607140",
    "end": "610400"
  },
  {
    "text": "about or you're not sure about\nhow to use something, ask.",
    "start": "610400",
    "end": "613830"
  },
  {
    "text": "But also, you don't need to know\nall the functions that",
    "start": "613830",
    "end": "616930"
  },
  {
    "text": "are available in something\nlike the Cell language",
    "start": "616930",
    "end": "620600"
  },
  {
    "text": "extensions for C.",
    "start": "620600",
    "end": "622440"
  },
  {
    "text": "Yes, there are a lot of\nfunctions -- you know, the",
    "start": "622440",
    "end": "623760"
  },
  {
    "text": "manuals, hundreds of pages,\nand you can't possibly go",
    "start": "623760",
    "end": "626890"
  },
  {
    "text": "through it all and nobody\nbecomes an expert in",
    "start": "626890",
    "end": "628600"
  },
  {
    "text": "everything.",
    "start": "628600",
    "end": "629279"
  },
  {
    "text": "But understand just a few basic\nconcepts and features.",
    "start": "629280",
    "end": "632500"
  },
  {
    "text": "So, David identified a bunch\nthat he found useful for",
    "start": "632500",
    "end": "636730"
  },
  {
    "text": "writing the programs, and some\nof the ones that are up on the",
    "start": "636730",
    "end": "641850"
  },
  {
    "text": "web page under the recipes for\nthis course list a few more.",
    "start": "641850",
    "end": "647209"
  },
  {
    "text": "And so this might help you in\njust understanding how these",
    "start": "647210",
    "end": "650760"
  },
  {
    "text": "functions work, understanding\nbasic mechanisms that they",
    "start": "650760",
    "end": "653070"
  },
  {
    "text": "give you, and that's good\nenough because it'll",
    "start": "653070",
    "end": "654810"
  },
  {
    "text": "help you get by.",
    "start": "654810",
    "end": "655790"
  },
  {
    "text": "Certainly for doing the project\nunder short time",
    "start": "655790",
    "end": "659250"
  },
  {
    "text": "constraints, you don't need to\nknow all the advanced features",
    "start": "659250",
    "end": "661570"
  },
  {
    "text": "that Cell might have. Or you can\nprobably just pick them up",
    "start": "661570",
    "end": "664560"
  },
  {
    "text": "on the fly as you need them.",
    "start": "664560",
    "end": "667550"
  },
  {
    "text": "So what are some more\ninteresting",
    "start": "667550",
    "end": "669010"
  },
  {
    "text": "problems that come up.",
    "start": "669010",
    "end": "670980"
  },
  {
    "text": "I think one that is probably\nnot too unfamiliar is this",
    "start": "670980",
    "end": "674560"
  },
  {
    "text": "space decomposition problems.\nSo, if you remember, space",
    "start": "674560",
    "end": "677820"
  },
  {
    "text": "decomposition is really\ndata distribution.",
    "start": "677820",
    "end": "680230"
  },
  {
    "text": "You have a serial program that\nyou want to parallelize.",
    "start": "680230",
    "end": "683320"
  },
  {
    "text": "And what that means if you have\nto actually send data",
    "start": "683320",
    "end": "685450"
  },
  {
    "text": "around to different processors\nso that each one knows how to",
    "start": "685450",
    "end": "688450"
  },
  {
    "text": "compute locally.",
    "start": "688450",
    "end": "691030"
  },
  {
    "text": "Here you might get things like\nsegmentation faults, alignment",
    "start": "691030",
    "end": "694440"
  },
  {
    "text": "problems, you might have index\nout of range errors.",
    "start": "694440",
    "end": "699650"
  },
  {
    "text": "What this comes of is forgetting\nto change things or",
    "start": "699650",
    "end": "702900"
  },
  {
    "text": "overlooking some simple things\nthat don't carryover from the",
    "start": "702900",
    "end": "705420"
  },
  {
    "text": "sequential case that\nare parallel case.",
    "start": "705420",
    "end": "707670"
  },
  {
    "text": "So what you might want to do is\nvalidate your distributions",
    "start": "707670",
    "end": "710200"
  },
  {
    "text": "and your memory partitions\ncorrectly.",
    "start": "710200",
    "end": "711980"
  },
  {
    "text": "So what's an example?",
    "start": "711980",
    "end": "714970"
  },
  {
    "text": "So suppose you had an array\nor a list of cells,",
    "start": "714970",
    "end": "719610"
  },
  {
    "text": "each cell has a number.",
    "start": "719610",
    "end": "721120"
  },
  {
    "text": "What you want to do is at each\nstep of the computation for",
    "start": "721120",
    "end": "724420"
  },
  {
    "text": "any given cell, you want add\nthe value to the left of it",
    "start": "724420",
    "end": "727550"
  },
  {
    "text": "and the value to the\nright of it.",
    "start": "727550",
    "end": "729209"
  },
  {
    "text": "So here we have cell zero\nhas the value 2.",
    "start": "729210",
    "end": "731660"
  },
  {
    "text": "We'll assume that the n\ndisconnectors are first, so",
    "start": "731660",
    "end": "733730"
  },
  {
    "text": "this is like a circular list,\na circular buffer.",
    "start": "733730",
    "end": "737910"
  },
  {
    "text": "So adding the left and right\nneighbor would get me, in this",
    "start": "737910",
    "end": "742060"
  },
  {
    "text": "case, 3 plus 1, 4.",
    "start": "742060",
    "end": "744600"
  },
  {
    "text": "And so on and so forth.",
    "start": "744600",
    "end": "746569"
  },
  {
    "text": "You want to repeat this\ncomputation for n steps.",
    "start": "746570",
    "end": "748710"
  },
  {
    "text": "So this might be very common in\ncomputations where you're",
    "start": "748710",
    "end": "751100"
  },
  {
    "text": "doing unit [? book ?]\ncommunication.",
    "start": "751100",
    "end": "754190"
  },
  {
    "text": "So what's a straightforward\nsequential implementation?",
    "start": "754190",
    "end": "757560"
  },
  {
    "text": "Well, you can use\ntwo buffers --",
    "start": "757560",
    "end": "759850"
  },
  {
    "text": "one for the current time step,\nand you do all the",
    "start": "759850",
    "end": "762220"
  },
  {
    "text": "calculations in that.",
    "start": "762220",
    "end": "763329"
  },
  {
    "text": "Then you use another buffer\nfor next time step.",
    "start": "763330",
    "end": "767970"
  },
  {
    "text": "Then you swap the two.",
    "start": "767970",
    "end": "770529"
  },
  {
    "text": "So the code might look\nsomething like this.",
    "start": "770530",
    "end": "772830"
  },
  {
    "text": "Sequential c code, my two\nbuffers, here's my loop.",
    "start": "772830",
    "end": "776470"
  },
  {
    "text": "I write into one buffer\nand then I switch",
    "start": "776470",
    "end": "778959"
  },
  {
    "text": "the two buffers around.",
    "start": "778960",
    "end": "780380"
  },
  {
    "text": "Any questions so far?",
    "start": "780380",
    "end": "783450"
  },
  {
    "text": "So now, what are some things\nthat can go wrong when you try",
    "start": "783450",
    "end": "787035"
  },
  {
    "text": "to parallelize this?",
    "start": "787035",
    "end": "791060"
  },
  {
    "text": "So how would you actually\nparallelize this code?",
    "start": "791060",
    "end": "793580"
  },
  {
    "text": "Well, we saw in some of your\nlabs, for example, that you",
    "start": "793580",
    "end": "795990"
  },
  {
    "text": "can take a big array, split it\nup in smaller chunks and",
    "start": "795990",
    "end": "798620"
  },
  {
    "text": "assign each chunk to one\nparticular processor.",
    "start": "798620",
    "end": "801450"
  },
  {
    "text": "So we can use that\ntechnique here.",
    "start": "801450",
    "end": "803610"
  },
  {
    "text": "So each processor, we have n of\nthem, rather size of them,",
    "start": "803610",
    "end": "808540"
  },
  {
    "text": "and it's going to get some\nnumber of elements.",
    "start": "808540",
    "end": "812000"
  },
  {
    "text": "So each time step, we have to\ncompute locally all the",
    "start": "812000",
    "end": "815060"
  },
  {
    "text": "communications, but then there's\nsome special cases",
    "start": "815060",
    "end": "817870"
  },
  {
    "text": "that we need to treat at\nthe boundaries, right.",
    "start": "817870",
    "end": "820270"
  },
  {
    "text": "So if I have this chunk and I\nneed to do my new neighbor",
    "start": "820270",
    "end": "822430"
  },
  {
    "text": "communication, I don't have\nthis particular cells.",
    "start": "822430",
    "end": "824800"
  },
  {
    "text": "I have to go out there\nand request it.",
    "start": "824800",
    "end": "827230"
  },
  {
    "text": "Similarly, somebody has\nto send me this",
    "start": "827230",
    "end": "828889"
  },
  {
    "text": "particular data item.",
    "start": "828890",
    "end": "829960"
  },
  {
    "text": "So there's some data exchange\nthat has to happen.",
    "start": "829960",
    "end": "834890"
  },
  {
    "text": "So in the decomposition, you\nwrite your parallel code.",
    "start": "834890",
    "end": "839300"
  },
  {
    "text": "Here, each buffer is\na different size.",
    "start": "839300",
    "end": "841930"
  },
  {
    "text": "What you do is you have some\nlocal, which says this is how",
    "start": "841930",
    "end": "845550"
  },
  {
    "text": "much of the data I'm getting,\nand has a total number of",
    "start": "845550",
    "end": "848510"
  },
  {
    "text": "elements, besides the number\nof processors.",
    "start": "848510",
    "end": "851490"
  },
  {
    "text": "Local essentially tells me\nthe size of my chunk.",
    "start": "851490",
    "end": "854540"
  },
  {
    "text": "I'm iterating through from zero\nand local and I'm doing",
    "start": "854540",
    "end": "857899"
  },
  {
    "text": "essentially the same\ncomputation.",
    "start": "857900",
    "end": "859710"
  },
  {
    "text": "So what's a bug in here?",
    "start": "859710",
    "end": "861400"
  },
  {
    "text": "Anybody see it?",
    "start": "861400",
    "end": "862260"
  },
  {
    "text": "Sort of giving you some hints\nof things highlighted in red",
    "start": "862260",
    "end": "864780"
  },
  {
    "text": "or there's something wrong\nwith the things",
    "start": "864780",
    "end": "866170"
  },
  {
    "text": "highlighted in red.",
    "start": "866170",
    "end": "867420"
  },
  {
    "start": "867420",
    "end": "876790"
  },
  {
    "text": "There's another hint.",
    "start": "876790",
    "end": "878089"
  },
  {
    "text": "So this is essentially the\ncomputations going on at every",
    "start": "878090",
    "end": "880330"
  },
  {
    "text": "processor, this is my buffer,\nand at every step I have to do",
    "start": "880330",
    "end": "884230"
  },
  {
    "text": "the calculations, taking care\nof the boundary edges.",
    "start": "884230",
    "end": "886320"
  },
  {
    "start": "886320",
    "end": "891840"
  },
  {
    "text": "Anybody want to take a stab?",
    "start": "891840",
    "end": "895100"
  },
  {
    "text": "Mark?",
    "start": "895100",
    "end": "895449"
  },
  {
    "text": "AUDIENCE: Is it that the\nnextbuffer zero needs to look",
    "start": "895450",
    "end": "900490"
  },
  {
    "text": "at data from 1?",
    "start": "900490",
    "end": "901740"
  },
  {
    "start": "901740",
    "end": "904720"
  },
  {
    "text": "PROFESSOR: Next buffer\nzero, right.",
    "start": "904720",
    "end": "906819"
  },
  {
    "text": "So what might be\na fix to that?",
    "start": "906820",
    "end": "908780"
  },
  {
    "start": "908780",
    "end": "912910"
  },
  {
    "text": "So the next buffer is zero.",
    "start": "912910",
    "end": "914810"
  },
  {
    "text": "So if this is zero then buffer\nof x minus 1 plus",
    "start": "914810",
    "end": "918850"
  },
  {
    "text": "this points to what?",
    "start": "918850",
    "end": "920100"
  },
  {
    "start": "920100",
    "end": "923160"
  },
  {
    "text": "AUDIENCE: So you need to\nstart at 1 and iterate.",
    "start": "923160",
    "end": "924639"
  },
  {
    "text": "PROFESSOR: Right, exactly.",
    "start": "924640",
    "end": "926840"
  },
  {
    "text": "It's a local plus 1, if you\nwere going to do these.",
    "start": "926840",
    "end": "930780"
  },
  {
    "text": "So that's one bug.",
    "start": "930780",
    "end": "932150"
  },
  {
    "text": "The other thing is the\nassumption that your data",
    "start": "932150",
    "end": "934810"
  },
  {
    "text": "elements might be divisible by\nthe number of processors that",
    "start": "934810",
    "end": "937800"
  },
  {
    "text": "you have. So you pick the\ndecomposition that might not",
    "start": "937800",
    "end": "940260"
  },
  {
    "text": "be symmetric across\nall processors.",
    "start": "940260",
    "end": "942110"
  },
  {
    "text": "So it's more subtle, I think,\nto keep in mind.",
    "start": "942110",
    "end": "946320"
  },
  {
    "text": "So that's one particular kind of\nproblem that might come up",
    "start": "946320",
    "end": "948640"
  },
  {
    "text": "on your decomposing data and\nreplicating among different",
    "start": "948640",
    "end": "951350"
  },
  {
    "text": "processors.",
    "start": "951350",
    "end": "952610"
  },
  {
    "text": "So you have to be careful about\nwhat are your boundary",
    "start": "952610",
    "end": "956380"
  },
  {
    "text": "cases going to be and how are\nyou going to deal with those.",
    "start": "956380",
    "end": "960650"
  },
  {
    "text": "The more difficult one\nis synchronization.",
    "start": "960650",
    "end": "963870"
  },
  {
    "text": "So synchronization is when\nyou're sending data from one",
    "start": "963870",
    "end": "966630"
  },
  {
    "text": "processor to the other and you\nmight end up with deadlock,",
    "start": "966630",
    "end": "969530"
  },
  {
    "text": "because one is trying to send,\nthe other's trying to send,",
    "start": "969530",
    "end": "971920"
  },
  {
    "text": "and neither can make progress\nuntil the other's received.",
    "start": "971920",
    "end": "975019"
  },
  {
    "text": "So your program hangs, you get\nnon-deterministic behavior or",
    "start": "975020",
    "end": "979390"
  },
  {
    "text": "output, every time you run\nyour program you get a",
    "start": "979390",
    "end": "982110"
  },
  {
    "text": "different result -- that\ncan drive you crazy.",
    "start": "982110",
    "end": "984910"
  },
  {
    "text": "So some of the defects\ncan be very subtle.",
    "start": "984910",
    "end": "987910"
  },
  {
    "text": "This is probably where you'll\nspend most of your time trying",
    "start": "987910",
    "end": "989750"
  },
  {
    "text": "to figure it out.",
    "start": "989750",
    "end": "992400"
  },
  {
    "text": "So one of the ways to prevent\nthis is to actually look at",
    "start": "992400",
    "end": "995100"
  },
  {
    "text": "how you're orchestrating your\ncommunication and doing it",
    "start": "995100",
    "end": "997680"
  },
  {
    "text": "very carefully.",
    "start": "997680",
    "end": "998700"
  },
  {
    "text": "So look at, for example,\nwhat's going on here.",
    "start": "998700",
    "end": "1002660"
  },
  {
    "text": "So this is the same problem, and\nwhat I'm doing is now this",
    "start": "1002660",
    "end": "1005620"
  },
  {
    "text": "is the parallel version and\nI'm sending the boundary",
    "start": "1005620",
    "end": "1008779"
  },
  {
    "text": "cases, the boundary cells to\nthe different processors.",
    "start": "1008780",
    "end": "1012870"
  },
  {
    "text": "This is an SPMD program.",
    "start": "1012870",
    "end": "1014290"
  },
  {
    "text": "So an SPMD program has every\nprocessor running essentially",
    "start": "1014290",
    "end": "1018240"
  },
  {
    "text": "the same code.",
    "start": "1018240",
    "end": "1019380"
  },
  {
    "text": "So this code is replicated\nover n processors and",
    "start": "1019380",
    "end": "1021640"
  },
  {
    "text": "everybody's trying to\ndo this same thing.",
    "start": "1021640",
    "end": "1023290"
  },
  {
    "text": "So what's the problem\nwith this code?",
    "start": "1023290",
    "end": "1026500"
  },
  {
    "text": "We're doing send of\nnext buffer zero.",
    "start": "1026500",
    "end": "1031060"
  },
  {
    "text": "Here, rank essentially\njust says each",
    "start": "1031060",
    "end": "1033319"
  },
  {
    "text": "processor has a rank.",
    "start": "1033320",
    "end": "1034880"
  },
  {
    "text": "So this is a way of identifying\nthings.",
    "start": "1034880",
    "end": "1037360"
  },
  {
    "text": "So I'm trying to send it to my\nprevious guy, I'm trying to",
    "start": "1037360",
    "end": "1040280"
  },
  {
    "text": "send it to the next guy, and\nhere I'm sending the value at",
    "start": "1040280",
    "end": "1043740"
  },
  {
    "text": "the far extreme of the buffer to\nthe next processor and then",
    "start": "1043740",
    "end": "1047150"
  },
  {
    "text": "to the previous processor.",
    "start": "1047150",
    "end": "1048560"
  },
  {
    "text": "Anybody see what's wrong here?",
    "start": "1048560",
    "end": "1049630"
  },
  {
    "text": "AUDIENCE: So are these\nblocking things?",
    "start": "1049630",
    "end": "1053610"
  },
  {
    "text": "PROFESSOR: Yeah, imagine they're\nblocking things.",
    "start": "1053610",
    "end": "1055160"
  },
  {
    "text": "AUDIENCE: Why will\nthat deadlock?",
    "start": "1055160",
    "end": "1057149"
  },
  {
    "start": "1057149",
    "end": "1060630"
  },
  {
    "text": "PROFESSOR: Right.",
    "start": "1060630",
    "end": "1062100"
  },
  {
    "text": "So this will deadlock, right.",
    "start": "1062100",
    "end": "1065380"
  },
  {
    "text": "So this will deadlock because\nthis processor is trying to",
    "start": "1065380",
    "end": "1068110"
  },
  {
    "text": "send here, this processor is\ntrying to send here, but",
    "start": "1068110",
    "end": "1070590"
  },
  {
    "text": "neither is receiving yet, so\nneither makes progress.",
    "start": "1070590",
    "end": "1073409"
  },
  {
    "text": "So how would you fix\nit at this point?",
    "start": "1073410",
    "end": "1075940"
  },
  {
    "text": "You might not want to use a\nblocking send all the time.",
    "start": "1075940",
    "end": "1079950"
  },
  {
    "text": "So if your architecture allows\nyou to have different flavors",
    "start": "1079950",
    "end": "1083600"
  },
  {
    "text": "of communication, so synchronous\nversus an",
    "start": "1083600",
    "end": "1085960"
  },
  {
    "text": "asynchronous, a blocking versus\nnon-blocking, you'll",
    "start": "1085960",
    "end": "1088679"
  },
  {
    "text": "want to avoid using constructs\nthat can lead you to deadlock",
    "start": "1088680",
    "end": "1091790"
  },
  {
    "text": "if you don't need to.",
    "start": "1091790",
    "end": "1094020"
  },
  {
    "text": "The other mechanism -- this was\npointed out briefly in the",
    "start": "1094020",
    "end": "1097430"
  },
  {
    "text": "talk on parallel programming\n-- you want to order your",
    "start": "1097430",
    "end": "1099980"
  },
  {
    "text": "sends and receives properly.",
    "start": "1099980",
    "end": "1101440"
  },
  {
    "text": "So alternate them.",
    "start": "1101440",
    "end": "1102330"
  },
  {
    "text": "So you have a send in\none processor, a",
    "start": "1102330",
    "end": "1104159"
  },
  {
    "text": "receive in the other.",
    "start": "1104160",
    "end": "1105970"
  },
  {
    "text": "You can use that to prevent\ndeadlock and get the",
    "start": "1105970",
    "end": "1108429"
  },
  {
    "text": "communication patterns right.",
    "start": "1108430",
    "end": "1110890"
  },
  {
    "text": "There could be more interesting\ncases that come up",
    "start": "1110890",
    "end": "1112640"
  },
  {
    "text": "if you're communicating over a\nnetwork where you might end up",
    "start": "1112640",
    "end": "1115230"
  },
  {
    "text": "with cyclic patterns leading\nto loops, and that also can",
    "start": "1115230",
    "end": "1120470"
  },
  {
    "text": "create some problems for you.",
    "start": "1120470",
    "end": "1121720"
  },
  {
    "start": "1121720",
    "end": "1124770"
  },
  {
    "text": "The last two I'll talk about\naren't really bugs in that",
    "start": "1124770",
    "end": "1128780"
  },
  {
    "text": "they might not cause your\nprogram to break or compute",
    "start": "1128780",
    "end": "1131090"
  },
  {
    "text": "incorrectly.",
    "start": "1131090",
    "end": "1132049"
  },
  {
    "text": "Things might work properly,\nbut you might not get the",
    "start": "1132050",
    "end": "1133890"
  },
  {
    "text": "actual performance that\nyou're expecting.",
    "start": "1133890",
    "end": "1136460"
  },
  {
    "text": "So these are performance bucks\nor performance defects.",
    "start": "1136460",
    "end": "1141659"
  },
  {
    "text": "So side effects of\nparallelization is often case",
    "start": "1141660",
    "end": "1144940"
  },
  {
    "text": "that you're focusing on your\nparallel code and you might",
    "start": "1144940",
    "end": "1147559"
  },
  {
    "text": "ignore things that are going\non in your sequential code,",
    "start": "1147560",
    "end": "1149820"
  },
  {
    "text": "and that might lead you to,\nessentially you've spent all",
    "start": "1149820",
    "end": "1152059"
  },
  {
    "text": "this time trying to parallelize\nyour code, but",
    "start": "1152060",
    "end": "1154720"
  },
  {
    "text": "your end result is not getting\nthe performance that you",
    "start": "1154720",
    "end": "1156760"
  },
  {
    "text": "expect because things\nlook sequential.",
    "start": "1156760",
    "end": "1159030"
  },
  {
    "text": "So what's wrong here?",
    "start": "1159030",
    "end": "1161120"
  },
  {
    "text": "So as an example, imagine that\nwe're doing instead of reading",
    "start": "1161120",
    "end": "1166240"
  },
  {
    "text": "data from a --",
    "start": "1166240",
    "end": "1170160"
  },
  {
    "text": "so, in the previous case I\ndidn't show you how we were",
    "start": "1170160",
    "end": "1172020"
  },
  {
    "text": "reading data into the different\nbuffers, but suppose",
    "start": "1172020",
    "end": "1174720"
  },
  {
    "text": "we were getting it from some\nfiles, so input buffer.",
    "start": "1174720",
    "end": "1177240"
  },
  {
    "text": "So now we have an SPMD program\nagain, everybody's trying to",
    "start": "1177240",
    "end": "1179750"
  },
  {
    "text": "read from this buffer.",
    "start": "1179750",
    "end": "1181010"
  },
  {
    "text": "What could go wrong here?",
    "start": "1181010",
    "end": "1182930"
  },
  {
    "text": "Anybody have an idea?",
    "start": "1182930",
    "end": "1185150"
  },
  {
    "text": "So every processor is opening\nthe file and then it's going",
    "start": "1185150",
    "end": "1188050"
  },
  {
    "text": "to figure out how much to skip\nand it'll start reading from",
    "start": "1188050",
    "end": "1190650"
  },
  {
    "text": "that location.",
    "start": "1190650",
    "end": "1191245"
  },
  {
    "text": "So everybody's reading from a\nfile, so that's OK, nobody's",
    "start": "1191245",
    "end": "1193830"
  },
  {
    "text": "modifying it.",
    "start": "1193830",
    "end": "1194510"
  },
  {
    "text": "But what can go wrong here?",
    "start": "1194510",
    "end": "1195950"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE PHRASE].",
    "start": "1195950",
    "end": "1199887"
  },
  {
    "start": "1199887",
    "end": "1207270"
  },
  {
    "text": "PROFESSOR: Right.",
    "start": "1207270",
    "end": "1209760"
  },
  {
    "text": "So essentially, sequentialize\nyour execution because reading",
    "start": "1209760",
    "end": "1213010"
  },
  {
    "text": "from the file system becomes\nthe bottleneck.",
    "start": "1213010",
    "end": "1216770"
  },
  {
    "text": "So you'll want to schedule input\nand output carefully.",
    "start": "1216770",
    "end": "1219550"
  },
  {
    "text": "You might find that not\neverybody needs to do the",
    "start": "1219550",
    "end": "1221680"
  },
  {
    "text": "input and output.",
    "start": "1221680",
    "end": "1222860"
  },
  {
    "text": "Only one processor has to do\nthe input and then it can",
    "start": "1222860",
    "end": "1226520"
  },
  {
    "text": "distribute it to all the\ndifferent processors.",
    "start": "1226520",
    "end": "1228370"
  },
  {
    "text": "So, in the Master/Slave model,\nwhich a lot of you are using",
    "start": "1228370",
    "end": "1232390"
  },
  {
    "text": "for the Cell programming, the\nMaster can just read the data",
    "start": "1232390",
    "end": "1236550"
  },
  {
    "text": "from the input files\nand distribute it",
    "start": "1236550",
    "end": "1237810"
  },
  {
    "text": "to everybody else.",
    "start": "1237810",
    "end": "1238633"
  },
  {
    "text": "So this avoids some\nof the problems",
    "start": "1238633",
    "end": "1239900"
  },
  {
    "text": "with input and output.",
    "start": "1239900",
    "end": "1241740"
  },
  {
    "text": "You can have similar kinds of\nproblems if you're reading",
    "start": "1241740",
    "end": "1245150"
  },
  {
    "text": "from other devices.",
    "start": "1245150",
    "end": "1246130"
  },
  {
    "text": "It doesn't have to be\nthe file system.",
    "start": "1246130",
    "end": "1248740"
  },
  {
    "text": "So here's another one,\na little more subtle.",
    "start": "1248740",
    "end": "1252520"
  },
  {
    "text": "So you're generating data--.",
    "start": "1252520",
    "end": "1255810"
  },
  {
    "text": "Hey, Allen, what's up?",
    "start": "1255810",
    "end": "1257196"
  },
  {
    "text": "AUDIENCE: I somehow missed the\ndistinction between when",
    "start": "1257196",
    "end": "1259965"
  },
  {
    "text": "you're waiting for the master\nto read all the dat aand",
    "start": "1259965",
    "end": "1262231"
  },
  {
    "text": "distribute it, and waiting for\nthe other [? processes ?] to",
    "start": "1262231",
    "end": "1264747"
  },
  {
    "text": "get through so I can read my\nprivate data, isn't it going",
    "start": "1264748",
    "end": "1267600"
  },
  {
    "text": "to be about the same\ntime on this?",
    "start": "1267600",
    "end": "1270910"
  },
  {
    "text": "PROFESSOR: No.",
    "start": "1270910",
    "end": "1271090"
  },
  {
    "text": "So here, just essentially, the\nMaster reads the file as part",
    "start": "1271090",
    "end": "1275130"
  },
  {
    "text": "of the initialization.",
    "start": "1275130",
    "end": "1277410"
  },
  {
    "text": "Then you distribute it.",
    "start": "1277410",
    "end": "1278050"
  },
  {
    "text": "So distribution can happen\nat run time.",
    "start": "1278050",
    "end": "1279770"
  },
  {
    "text": "So, the initialization you\ndon't care about because",
    "start": "1279770",
    "end": "1283250"
  },
  {
    "text": "hopefully that's a small\npart of the code.",
    "start": "1283250",
    "end": "1285080"
  },
  {
    "start": "1285080",
    "end": "1288679"
  },
  {
    "text": "So this code is guarded by rank\nequals Master, so only it",
    "start": "1288680",
    "end": "1291550"
  },
  {
    "text": "does this code.",
    "start": "1291550",
    "end": "1292270"
  },
  {
    "text": "Then here you might have the\ncommand that says wait until",
    "start": "1292270",
    "end": "1295200"
  },
  {
    "text": "I've received it and then\nexecute, or on the cells, then",
    "start": "1295200",
    "end": "1298679"
  },
  {
    "text": "these might be the SPE create\nthreads that happen after",
    "start": "1298680",
    "end": "1301270"
  },
  {
    "text": "you've read the data.",
    "start": "1301270",
    "end": "1302340"
  },
  {
    "text": "So hopefully, initialization\ntime is not something you have",
    "start": "1302340",
    "end": "1305200"
  },
  {
    "text": "concern about too much.",
    "start": "1305200",
    "end": "1306450"
  },
  {
    "start": "1306450",
    "end": "1308830"
  },
  {
    "text": "So if you're generating data on\nthe fly or dynamically, so",
    "start": "1308830",
    "end": "1312929"
  },
  {
    "text": "here we might use the Srand\nfunction to sort of start with",
    "start": "1312930",
    "end": "1316250"
  },
  {
    "text": "a random seeing and then\nfill in the buffer",
    "start": "1316250",
    "end": "1318830"
  },
  {
    "text": "with some random data.",
    "start": "1318830",
    "end": "1320330"
  },
  {
    "text": "So what could go wrong here?",
    "start": "1320330",
    "end": "1321580"
  },
  {
    "start": "1321580",
    "end": "1324250"
  },
  {
    "text": "So in Srand, when you're using\na random function -- sorry,",
    "start": "1324250",
    "end": "1330070"
  },
  {
    "text": "this is the same function.",
    "start": "1330070",
    "end": "1332340"
  },
  {
    "text": "When you're using a random,\na pseudo random number",
    "start": "1332340",
    "end": "1334640"
  },
  {
    "text": "generator, you have to give it\na seed, then if everybody",
    "start": "1334640",
    "end": "1337390"
  },
  {
    "text": "starts off with the same seed,\nthen you might end up with the",
    "start": "1337390",
    "end": "1340060"
  },
  {
    "text": "same random number sequence.",
    "start": "1340060",
    "end": "1342640"
  },
  {
    "text": "If that's something you're\nusing to parallelize your",
    "start": "1342640",
    "end": "1345960"
  },
  {
    "text": "computation, you might, in\neffect, end up with the same",
    "start": "1345960",
    "end": "1348460"
  },
  {
    "text": "kind of sequence on each\nprocessor and you lose all",
    "start": "1348460",
    "end": "1351820"
  },
  {
    "text": "kinds of parallelization.",
    "start": "1351820",
    "end": "1354250"
  },
  {
    "text": "So there's some hidden\nserialization issues in some",
    "start": "1354250",
    "end": "1356860"
  },
  {
    "text": "of the functions that you\nmight use that you",
    "start": "1356860",
    "end": "1358940"
  },
  {
    "text": "should be aware of.",
    "start": "1358940",
    "end": "1360190"
  },
  {
    "start": "1360190",
    "end": "1362350"
  },
  {
    "text": "The last one I'll talk about is",
    "start": "1362350",
    "end": "1364429"
  },
  {
    "text": "performance scalability defect.",
    "start": "1364430",
    "end": "1366570"
  },
  {
    "text": "So here you parallelize your\ncode, things look good, but",
    "start": "1366570",
    "end": "1370169"
  },
  {
    "text": "you're still not getting --",
    "start": "1370170",
    "end": "1371300"
  },
  {
    "text": "you've taken care of all your\nIO issue, you're still not",
    "start": "1371300",
    "end": "1374030"
  },
  {
    "text": "getting the performance\nyou want.",
    "start": "1374030",
    "end": "1375370"
  },
  {
    "text": "So, why is that?",
    "start": "1375370",
    "end": "1377710"
  },
  {
    "text": "You might have -- remember your\nAmdahl's law, and what",
    "start": "1377710",
    "end": "1381429"
  },
  {
    "text": "you want is an efficiency\nthat's linear.",
    "start": "1381430",
    "end": "1383580"
  },
  {
    "text": "Every time you add one processor\nyou want a straight",
    "start": "1383580",
    "end": "1388500"
  },
  {
    "text": "line curve between the number\nof processors and speed up.",
    "start": "1388500",
    "end": "1391410"
  },
  {
    "text": "This should be a linear\nrelationship.",
    "start": "1391410",
    "end": "1393490"
  },
  {
    "text": "So you might see sublinear speed\nups, and you want to",
    "start": "1393490",
    "end": "1396440"
  },
  {
    "text": "figure out why that is.",
    "start": "1396440",
    "end": "1397980"
  },
  {
    "text": "Some of the common causes here,\nand this will be the end",
    "start": "1397980",
    "end": "1400679"
  },
  {
    "text": "up focus of the next talk\nis, unbalanced amount of",
    "start": "1400680",
    "end": "1403280"
  },
  {
    "text": "computation.",
    "start": "1403280",
    "end": "1404100"
  },
  {
    "text": "Remember, dynamic\nload balancing",
    "start": "1404100",
    "end": "1405419"
  },
  {
    "text": "versus static load balancing.",
    "start": "1405420",
    "end": "1407050"
  },
  {
    "text": "Your work estimation might be\nwrong and so you might end up",
    "start": "1407050",
    "end": "1409210"
  },
  {
    "text": "with some processors idling,\nother processors",
    "start": "1409210",
    "end": "1412659"
  },
  {
    "text": "doing too much work.",
    "start": "1412660",
    "end": "1414940"
  },
  {
    "text": "So the way to prevent this is\nto actually look at the work",
    "start": "1414940",
    "end": "1417279"
  },
  {
    "text": "that's being done and figure\nout whether it's actually",
    "start": "1417280",
    "end": "1420370"
  },
  {
    "text": "roughly the same amount\nof work everywhere.",
    "start": "1420370",
    "end": "1422380"
  },
  {
    "text": "Here you might need profiling\ntools to help, and so I'm",
    "start": "1422380",
    "end": "1425040"
  },
  {
    "text": "going to talk about\nthis in a lot more",
    "start": "1425040",
    "end": "1426250"
  },
  {
    "text": "detail in the next lecture.",
    "start": "1426250",
    "end": "1429930"
  },
  {
    "text": "So in summary, there are lots\nof different bugs that you",
    "start": "1429930",
    "end": "1433800"
  },
  {
    "text": "might come up with.",
    "start": "1433800",
    "end": "1436030"
  },
  {
    "text": "There's a few that I've\nidentified here, some common",
    "start": "1436030",
    "end": "1439490"
  },
  {
    "text": "things you should\nlook out for.",
    "start": "1439490",
    "end": "1441070"
  },
  {
    "text": "So the erroneous use of language\nfeatures understand",
    "start": "1441070",
    "end": "1443519"
  },
  {
    "text": "only a few basic concepts of the\nentire language extension",
    "start": "1443520",
    "end": "1446790"
  },
  {
    "text": "set that you have. Space\ndecomposition, side effects",
    "start": "1446790",
    "end": "1450270"
  },
  {
    "text": "from parallelization.",
    "start": "1450270",
    "end": "1451540"
  },
  {
    "text": "Don't ignore sequential code.",
    "start": "1451540",
    "end": "1454330"
  },
  {
    "text": "Last one is trying to understand\nyour performance",
    "start": "1454330",
    "end": "1456429"
  },
  {
    "text": "scalability.",
    "start": "1456430",
    "end": "1457390"
  },
  {
    "text": "But there are other kinds\nof bugs, like",
    "start": "1457390",
    "end": "1458760"
  },
  {
    "text": "data races, for example.",
    "start": "1458760",
    "end": "1459990"
  },
  {
    "text": "So what can you do with those?",
    "start": "1459990",
    "end": "1462200"
  },
  {
    "text": "So remember, data races you\nhave different concurrent",
    "start": "1462200",
    "end": "1464799"
  },
  {
    "text": "threads and they're\ntrying to update",
    "start": "1464800",
    "end": "1465990"
  },
  {
    "text": "the same memory location.",
    "start": "1465990",
    "end": "1468010"
  },
  {
    "text": "So depending on who gets to\nwrite first and when you",
    "start": "1468010",
    "end": "1470400"
  },
  {
    "text": "actually do your read, you might\nget a different result.",
    "start": "1470400",
    "end": "1474540"
  },
  {
    "text": "So with data race detection,\nthese things are actually",
    "start": "1474540",
    "end": "1477880"
  },
  {
    "text": "getting better.",
    "start": "1477880",
    "end": "1478840"
  },
  {
    "text": "There are tools out there that\nwill essentially generate",
    "start": "1478840",
    "end": "1481140"
  },
  {
    "text": "traces as your program\nis running.",
    "start": "1481140",
    "end": "1483530"
  },
  {
    "text": "So for each thread you\ninstrumented and you look at",
    "start": "1483530",
    "end": "1486140"
  },
  {
    "text": "every load stored at executes.",
    "start": "1486140",
    "end": "1488120"
  },
  {
    "text": "Then what you do is you look at\nthe load in stores between",
    "start": "1488120",
    "end": "1491040"
  },
  {
    "text": "the difference threads and see\nif there's any intersections,",
    "start": "1491040",
    "end": "1493410"
  },
  {
    "text": "any orderings that might give\nyou erroneous behavior.",
    "start": "1493410",
    "end": "1497600"
  },
  {
    "text": "So this is getting better, it's\ngetting more automated.",
    "start": "1497600",
    "end": "1500770"
  },
  {
    "text": "Intel Threadchecker\nis one example.",
    "start": "1500770",
    "end": "1502610"
  },
  {
    "text": "There are others.",
    "start": "1502610",
    "end": "1505309"
  },
  {
    "text": "I really think the trend in\ndebugging will be towards",
    "start": "1505310",
    "end": "1507670"
  },
  {
    "text": "trace-based systems. You'll\nhave things like",
    "start": "1507670",
    "end": "1511720"
  },
  {
    "text": "checkpointing.",
    "start": "1511720",
    "end": "1512429"
  },
  {
    "text": "So as your program is running\nyou can take a snapshot of",
    "start": "1512430",
    "end": "1515550"
  },
  {
    "text": "where it is in the execution,\nand then you can use that",
    "start": "1515550",
    "end": "1517830"
  },
  {
    "text": "snapshot later on to inspect\nit and see what went wrong.",
    "start": "1517830",
    "end": "1521390"
  },
  {
    "text": "I think you might even have\nfeatures like replay.",
    "start": "1521390",
    "end": "1523380"
  },
  {
    "text": "In fact, some people are working\non this in research",
    "start": "1523380",
    "end": "1526350"
  },
  {
    "text": "and in industry.",
    "start": "1526350",
    "end": "1528120"
  },
  {
    "text": "So you might be able to say\nuh-oh, something went wrong.",
    "start": "1528120",
    "end": "1531000"
  },
  {
    "text": "Here's my list of checkpoints,\ncan you replay the execution",
    "start": "1531000",
    "end": "1533840"
  },
  {
    "text": "from this particular stage\nin the computation.",
    "start": "1533840",
    "end": "1536360"
  },
  {
    "text": "So it helps you focus down\nin the entire lifetime of",
    "start": "1536360",
    "end": "1540540"
  },
  {
    "text": "execution on a particular\nchunk where",
    "start": "1540540",
    "end": "1542320"
  },
  {
    "text": "things have gone wrong.",
    "start": "1542320",
    "end": "1545710"
  },
  {
    "text": "This is sort of a\npersonal dream.",
    "start": "1545710",
    "end": "1548899"
  },
  {
    "text": "I think one day we'll have the\nequivalent of a TiVo for your",
    "start": "1548900",
    "end": "1551300"
  },
  {
    "text": "programs, and you can use\nit for debugging.",
    "start": "1551300",
    "end": "1554350"
  },
  {
    "text": "So my program is running,\nsomething goes wrong, I can",
    "start": "1554350",
    "end": "1556470"
  },
  {
    "text": "rewind it, I can inspect things,\ndo my traditional",
    "start": "1556470",
    "end": "1558970"
  },
  {
    "text": "debugging, change things maybe\neven, and then start replaying",
    "start": "1558970",
    "end": "1562700"
  },
  {
    "text": "things and letting the\nprogram execute.",
    "start": "1562700",
    "end": "1567580"
  },
  {
    "text": "In fact, we're working on things\nlike this here at MIT",
    "start": "1567580",
    "end": "1570320"
  },
  {
    "text": "and with collaborators\nelsewhere.",
    "start": "1570320",
    "end": "1572139"
  },
  {
    "text": "So, this was a short lecture.",
    "start": "1572140",
    "end": "1575890"
  },
  {
    "text": "We'll take a break.",
    "start": "1575890",
    "end": "1576530"
  },
  {
    "text": "You can do the quizzes.",
    "start": "1576530",
    "end": "1578240"
  },
  {
    "text": "Note on the quizzes,\nthere are two",
    "start": "1578240",
    "end": "1579410"
  },
  {
    "text": "different kinds of questions.",
    "start": "1579410",
    "end": "1580720"
  },
  {
    "text": "They're very similar, just one\nword is different, and so",
    "start": "1580720",
    "end": "1584570"
  },
  {
    "text": "you'll want to just keep that in\nmind when you're discussing",
    "start": "1584570",
    "end": "1586720"
  },
  {
    "text": "it with others.",
    "start": "1586720",
    "end": "1588309"
  },
  {
    "text": "Then about 5, 10 minutes and\nthen we'll continue with the",
    "start": "1588310",
    "end": "1591320"
  },
  {
    "text": "rest of the talk, lecture 2.",
    "start": "1591320",
    "end": "1593710"
  },
  {
    "text": "Thanks.",
    "start": "1593710",
    "end": "1594960"
  },
  {
    "start": "1594960",
    "end": "1595262"
  }
]