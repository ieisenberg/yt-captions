[
  {
    "text": "-- is the next group of topics\nin 6.033 call fault tolerance.",
    "start": "0",
    "end": "11740"
  },
  {
    "text": "And the goal here is to learn\nhow to build reliable systems.",
    "start": "11740",
    "end": "16900"
  },
  {
    "text": "An extreme case, or at\nleast our ideal goal, is to try to build systems\nthat will never fail.",
    "start": "16900",
    "end": "22310"
  },
  {
    "text": "And what will find is that\nwe really can't do that, but what we'll try\nto do is to build systems which maybe fail less\noften than if you built them",
    "start": "22310",
    "end": "31560"
  },
  {
    "text": "without the principles that\nwe're going to talk about. So the idea is how to\nbuild reliable systems.",
    "start": "31560",
    "end": "36916"
  },
  {
    "text": "So in order to understand how\nto build reliable systems, we need to understand what\nmakes systems unreliable.",
    "start": "41080",
    "end": "46460"
  },
  {
    "text": "And that has to do with\nunderstanding what faults are.",
    "start": "46460",
    "end": "52260"
  },
  {
    "text": "What problems occur in systems\nthat cause systems to fail? And you've actually seen many\nexamples of faults already.",
    "start": "52260",
    "end": "60199"
  },
  {
    "text": "Informally, a fault\nis just some kind of a flaw or a mistake that\ncauses a component or a module",
    "start": "60200",
    "end": "68151"
  },
  {
    "text": "not to perform the way\nit's supposed to perform. And we'll formalize\nthis notion a little bit today as we go along.",
    "start": "68151",
    "end": "74690"
  },
  {
    "text": "So there are many examples\nof faults, several of which you've already seen. A system could fail\nbecause it has a software",
    "start": "74690",
    "end": "80580"
  },
  {
    "text": "fault, a bug in a piece of\nsoftware, so when you run it, it doesn't work according\nto the way you expect.",
    "start": "80580",
    "end": "86680"
  },
  {
    "text": "And that causes\nsomething bad to happen. You might have hardware faults.",
    "start": "86680",
    "end": "94539"
  },
  {
    "text": "You store some data on a disk. You go back and read it. And it isn't there. But it's been corrupted. And that's an example\nof a fault that",
    "start": "94539",
    "end": "100939"
  },
  {
    "text": "might cause bad things\nto happen if you build a system that relies on a\ndisk storing data persistently.",
    "start": "100940",
    "end": "108689"
  },
  {
    "text": "You might have design faults\nwhere a design fault might",
    "start": "108690",
    "end": "114500"
  },
  {
    "text": "be something where\nyou try to, let's say, figure out how much buffering\nto put into a network switch.",
    "start": "114500",
    "end": "121719"
  },
  {
    "text": "And you put into\nlittle buffering. So what ends up happening is\ntoo many packets get dropped. So you might actually just\nhave some bad logic in there,",
    "start": "121720",
    "end": "129610"
  },
  {
    "text": "and that causes you to design\nsomething that isn't quite going to work out.",
    "start": "129610",
    "end": "135514"
  },
  {
    "text": "And you might, of course,\nhave implementation faults where you have a design,\nand then you implement it, and you made a mistake\nin how it's implemented.",
    "start": "135514",
    "end": "141700"
  },
  {
    "text": "And that could cause\nfaults as well. And another example\nof the kind of faults",
    "start": "141700",
    "end": "146760"
  },
  {
    "text": "is an operational fault\nsometimes called a human error where a user actually\ndoes something",
    "start": "146760",
    "end": "153220"
  },
  {
    "text": "that you didn't anticipate\nor was told not to do, and that caused bad\nthings to happen.",
    "start": "153220",
    "end": "159841"
  },
  {
    "text": "For all of these\nfaults, there are really two categories of\nfaults regardless of what kind of fault it is.",
    "start": "159841",
    "end": "165840"
  },
  {
    "text": "The first category of\nfaults are latent faults.",
    "start": "165840",
    "end": "168954"
  },
  {
    "text": "So an example of\na latent fault is, let's say you have a\nbug in a program where",
    "start": "171860",
    "end": "177810"
  },
  {
    "text": "instead of testing\nif A less than B, you test if A greater than B. So that's a bug in a program.",
    "start": "177810",
    "end": "185629"
  },
  {
    "text": "But until it actually runs,\nuntil that line of code runs, this fault in the\nprogram isn't actually going to do anything bad.",
    "start": "185630",
    "end": "191360"
  },
  {
    "text": "It isn't going to have\nany adverse effect. And therefore, this fault is\nan example of a latent fault.",
    "start": "191360",
    "end": "197030"
  },
  {
    "text": "And nothing is happening\nuntil it gets triggered. And when it gets triggered,\nthat latent fault",
    "start": "197030",
    "end": "202970"
  },
  {
    "text": "might become an active fault.",
    "start": "202970",
    "end": "208751"
  },
  {
    "text": "Now, the problem when a latent\nfault becomes an active fault is that when you run\nthat line of code,",
    "start": "208751",
    "end": "215150"
  },
  {
    "text": "you might have a mistake\ncoming out at the output, which we're going\nto call an error.",
    "start": "215150",
    "end": "220819"
  },
  {
    "text": "So when an active\nfault is exercised, it leads to an error. And the problem with errors\nis that if you're not",
    "start": "220820",
    "end": "228325"
  },
  {
    "text": "careful about how\nyou deal with errors, and most of what we're\ngoing to talk about is how to deal with\nerrors, if you're not",
    "start": "228326",
    "end": "233380"
  },
  {
    "text": "careful about how you deal with\nerrors that leads to a failure.",
    "start": "233380",
    "end": "236300"
  },
  {
    "text": "So somewhat more\nformally, a fault is just any flaw in an\nunderlying component or underlying subsystem\nthat your system is using.",
    "start": "242040",
    "end": "249710"
  },
  {
    "text": "Now, if the fault turns out\nnot to be exercised then. There's no error. There's no error that\nresults, and there's",
    "start": "249710",
    "end": "255520"
  },
  {
    "text": "no failure that results. It's only when you\nhave an active fault that you might have an error. And when you have an error,\nyou might have a failure.",
    "start": "255520",
    "end": "262736"
  },
  {
    "text": "And what we're\ngoing to try to do is to understand how to\ndeal with these errors",
    "start": "262736",
    "end": "267780"
  },
  {
    "text": "so that when errors\noccur we're going to try to hide them or\nmask them, or do something such that these errors don't\npropagate and cause failures.",
    "start": "267780",
    "end": "275900"
  },
  {
    "text": "So the general goal,\nas I mentioned before, is to build systems\nthat don't fail.",
    "start": "280330",
    "end": "286850"
  },
  {
    "text": "So, in order to build\nsystems that don't fail, there are two approaches\nat a 50,000 foot level.",
    "start": "286850",
    "end": "292440"
  },
  {
    "text": "One approach to build a\nsystem that doesn't fail is to build it\nout of, make sure, every system is\ngoing to be built out",
    "start": "292440",
    "end": "297600"
  },
  {
    "text": "of components or modules. And those modules are\ngoing to be built out of modules themselves. One approach might be to\nmake sure that no module ever",
    "start": "297600",
    "end": "304050"
  },
  {
    "text": "fails, that no component that\nyou use to build your bigger system ever fails. And it'll turn out that for\nreasons that will become clear",
    "start": "304050",
    "end": "311360"
  },
  {
    "text": "based on an understanding\nof the techniques we are going to employ to\nbuild systems that don't fail,",
    "start": "311360",
    "end": "316670"
  },
  {
    "text": "it'll turn out that this\nis extremely expensive. It's just not going to work\nout for us to make sure that our disks never\nfail, and memory never",
    "start": "316670",
    "end": "323750"
  },
  {
    "text": "fails, and our networks\nnever fail, and so on. It's just too expensive\nand nearly impossible.",
    "start": "323750",
    "end": "329774"
  },
  {
    "text": "So what we're going\nto do actually is to start with\nunreliable components.",
    "start": "329774",
    "end": "333100"
  },
  {
    "text": "And we're going to build\nreliable systems out of unreliable components\nor modules more generally.",
    "start": "340150",
    "end": "346940"
  },
  {
    "text": "And what this means is that\nthe system that you build had better be tolerant of\nfaults that these underlying",
    "start": "349450",
    "end": "357060"
  },
  {
    "text": "components have, which is\nwhy the design of systems that don't fail or rarely\nfail is essentially",
    "start": "357060",
    "end": "364960"
  },
  {
    "text": "the same as designing systems\nthat are tolerant of faults, hence fault tolerance. So that's the reason why we\ncare about fault tolerance.",
    "start": "364960",
    "end": "373710"
  },
  {
    "text": "So let's take the\nexample of the kinds of, just to crystallize these\nnotions of faults and failures",
    "start": "373710",
    "end": "379500"
  },
  {
    "text": "a little bit more. So let's say you have a big\nsystem that has a module. Let's call it M1.",
    "start": "379500",
    "end": "384620"
  },
  {
    "text": "And this module uses a couple\nof other modules, M2 and M3.",
    "start": "384620",
    "end": "390970"
  },
  {
    "text": "And let's say M2 uses\nanother module, M4, where users might\nbe an invocation.",
    "start": "390970",
    "end": "396849"
  },
  {
    "text": "Or imagine this is an\nRPC call, for example.",
    "start": "396850",
    "end": "400570"
  },
  {
    "text": "And, let's say that M4 in here\nhas some component inside M4 like a disk or something,\nsome piece of software in M4.",
    "start": "403420",
    "end": "409970"
  },
  {
    "text": "And, let's say that that fails. So, it has a fault. It gets triggered. It becomes active,\nleads to an error.",
    "start": "409970",
    "end": "416368"
  },
  {
    "text": "It actually fails,\nthat little component. So when this fault becomes a\nfailure, a couple of things",
    "start": "416368",
    "end": "423890"
  },
  {
    "text": "could happen. M4, which is the module to which\nthis little failure belongs,",
    "start": "423890",
    "end": "434069"
  },
  {
    "text": "can do one of two things. One possibility\nis that this fault that caused the failure\ngets exposed to the caller.",
    "start": "434069",
    "end": "441310"
  },
  {
    "text": "So, M4 hasn't\nmanaged to figure out a way to hide this failure\nfrom M2, which means",
    "start": "441310",
    "end": "447159"
  },
  {
    "text": "that the fault propagates up. The failure gets visible, and\nthe fault propagates up to M2.",
    "start": "447160",
    "end": "452690"
  },
  {
    "text": "And now, M2 actually sees the\nunderlying component's failure.",
    "start": "452690",
    "end": "458920"
  },
  {
    "text": "So the point here is that\nthis little component fault caused a failure\nhere which caused",
    "start": "458920",
    "end": "464620"
  },
  {
    "text": "M4 itself to fail because M4 now\ncouldn't hide this underlying failure, and reported\nsomething that",
    "start": "464620",
    "end": "472020"
  },
  {
    "text": "was a failure, that\nwas an output that didn't conform to the\nspecification of M4 out to M2.",
    "start": "472020",
    "end": "479030"
  },
  {
    "text": "Now, as far as M2 is concerned,\nall that has happened so far is that the failure\nof this module, M4,",
    "start": "479030",
    "end": "486240"
  },
  {
    "text": "has shown up as a\nfault to M2, right, because an underlying\nmodule has failed.",
    "start": "486240",
    "end": "492780"
  },
  {
    "text": "It doesn't mean\nthat M2 has failed. It just means that M2\nhas now seen a fault. And M2 now might manage\nto hide this fault, which",
    "start": "492780",
    "end": "501150"
  },
  {
    "text": "would mean that M1 doesn't\nactually see anything. It doesn't see the\nunderlying fault",
    "start": "501150",
    "end": "506479"
  },
  {
    "text": "that caused the failure at all. But of course, if M2\nnow couldn't hide this or couldn't mask\nthis failure, then it",
    "start": "506480",
    "end": "513000"
  },
  {
    "text": "would propagate an\nerroneous output out to M1, an output\nthat didn't conform to the specification\nof M2, leading M1",
    "start": "513000",
    "end": "520570"
  },
  {
    "text": "to observe this as\na fault, and so on. So, the general idea is\nthat failures of sub-modules",
    "start": "520570",
    "end": "527100"
  },
  {
    "text": "tend to show up as faults\nin the higher level module.",
    "start": "527100",
    "end": "529550"
  },
  {
    "text": "And our goal is to\ntry to somehow design these systems that use lots\nof modules and components where at some level\nin the end we would",
    "start": "533240",
    "end": "540370"
  },
  {
    "text": "like to avoid failing overall. But inside here, we won't\nbe able to go about making",
    "start": "540370",
    "end": "546269"
  },
  {
    "text": "everything failure-free. I mean, there might be\nfailures inside sub-modules. But the idea is to\nensure, or try to ensure,",
    "start": "546270",
    "end": "553410"
  },
  {
    "text": "that M1 itself, the highest\nlevel system, doesn't fail.",
    "start": "553410",
    "end": "555920"
  },
  {
    "text": "So let's start with\na few examples.",
    "start": "558700",
    "end": "560225"
  },
  {
    "text": "In fact, these all examples of\nthings that we've already seen. And even though we haven't\ndiscussed it as such,",
    "start": "564427",
    "end": "569650"
  },
  {
    "text": "we've seen a lot of examples\nof fault tolerance in the class so far. So, for example, if you have\nbad synchronization code",
    "start": "569650",
    "end": "577884"
  },
  {
    "text": "like you didn't use the\nlocking discipline properly or didn't use any of the other\nsynchronization primitives",
    "start": "577885",
    "end": "584870"
  },
  {
    "text": "properly, you might have a\nsoftware fault that leads",
    "start": "584870",
    "end": "590520"
  },
  {
    "text": "to the failure of a module. Another example that we saw\nwhen we talk about networking",
    "start": "590520",
    "end": "596649"
  },
  {
    "text": "is when we talk about routing\nwhere the idea in here",
    "start": "596650",
    "end": "602450"
  },
  {
    "text": "was that we talked about\nrat in protocols that could handle failures of links. So, certain links could fail,\nleading to certain paths",
    "start": "602450",
    "end": "609069"
  },
  {
    "text": "to not be usable. But, the routing system\nmanaged to find other paths around the network. And that was because\nthere were other parts",
    "start": "609070",
    "end": "615500"
  },
  {
    "text": "available because\nthe network itself was built with some degree\nof redundancy underneath. And the routing protocol\nwas able to exploit that.",
    "start": "615500",
    "end": "624440"
  },
  {
    "text": "Another example that we\nsaw again from networks is packet loss.",
    "start": "624440",
    "end": "630474"
  },
  {
    "text": "We had best effort networks\nthat would lose packets. And it didn't mean that\nyour actual transfer",
    "start": "630474",
    "end": "635590"
  },
  {
    "text": "of a file at the ends and\nwhere would miss data. We came up with\nretransmissions as a mechanism",
    "start": "635590",
    "end": "641370"
  },
  {
    "text": "to use, again, another\nform of redundancy where you try the same thing\nagain to get your data through.",
    "start": "641370",
    "end": "646620"
  },
  {
    "text": "Another example of the failure\nthat we saw was congestion collapse --",
    "start": "650090",
    "end": "653904"
  },
  {
    "text": "-- where there was too much data\nbeing sent out into the network",
    "start": "656810",
    "end": "662500"
  },
  {
    "text": "too fast, and the\nnetwork would collapse. And our solution to\nthis problem was really to shed load was to run the\nsystem slower than it otherwise",
    "start": "662500",
    "end": "669800"
  },
  {
    "text": "would, by having\nthe people sending data send data slower in order\nto alleviate this problem.",
    "start": "669800",
    "end": "676440"
  },
  {
    "text": "Another example which\nwe saw last time was, or briefly saw last time was\nthe domain name system where",
    "start": "676440",
    "end": "682589"
  },
  {
    "text": "the domain name\nservers are replicated. So, if you couldn't reach one\nto resolve your domain name, you could go to another one.",
    "start": "682590",
    "end": "688830"
  },
  {
    "text": "And all of these,\nor most of these actually use the same techniques\nthat we're going to talk about. And all of these\ntechniques are built",
    "start": "688830",
    "end": "694700"
  },
  {
    "text": "around some form of redundancy\non another except probably",
    "start": "694700",
    "end": "699880"
  },
  {
    "text": "the locking thing. But all of the others are built\naround some form of redundancy. And we'll understand this\nmore systematically today",
    "start": "699880",
    "end": "706940"
  },
  {
    "text": "and in the next\ncouple of classes. So our goal here is to develop\na systematic approach --",
    "start": "706940",
    "end": "712401"
  },
  {
    "text": "-- to building systems\nthat are fault tolerant.",
    "start": "715490",
    "end": "722640"
  },
  {
    "text": "And the general approach for\nall fault tolerant systems is to use three techniques. So the first one we've\nalready seen, which is",
    "start": "722640",
    "end": "729180"
  },
  {
    "text": "don't build a monolithic system. Always build it around modules.",
    "start": "729180",
    "end": "731841"
  },
  {
    "text": "And the reason is\nthat it will that be easier for us to isolate\nthese modules firstly",
    "start": "735110",
    "end": "740580"
  },
  {
    "text": "one from another. But then, when\nmodules fail, it will be easier for us to treat\nthose failures as faults,",
    "start": "740580",
    "end": "746660"
  },
  {
    "text": "and then try to\nhide those faults, and apply the same\ntechnique, which brings us",
    "start": "746660",
    "end": "753089"
  },
  {
    "text": "to the second step, which is\nwhen failures occur causing errors, we need a plan\nfor the higher level",
    "start": "753090",
    "end": "761110"
  },
  {
    "text": "module to detect errors.",
    "start": "761110",
    "end": "762680"
  },
  {
    "text": "So failure results in an error. We have to know\nthat it's happened, which means we need\ntechniques to detect it.",
    "start": "767010",
    "end": "773796"
  },
  {
    "text": "And, of course, once\nwe detect an error we have a bunch of things\nwe could do with it. But ideally, if\nyou want to prevent the failure of that system, of\na system that's observed errors,",
    "start": "773796",
    "end": "781640"
  },
  {
    "text": "you need a way to\nhide these errors. The jargon for this\nis mask errors.",
    "start": "781640",
    "end": "786790"
  },
  {
    "text": "And if we do this, if we\nbuild systems that do this, then it's possible\nfor us to build systems that can form to spec.",
    "start": "792110",
    "end": "798330"
  },
  {
    "text": "So the goal here is to try\nto make sure that systems conform to some specification.",
    "start": "798330",
    "end": "801835"
  },
  {
    "text": "And if things don't\nconform to a specification, then that's when we\ncall it a failure.",
    "start": "805922",
    "end": "811390"
  },
  {
    "text": "And sometimes we\nplay some tricks where in order to build\nsystems that \"never fail\",",
    "start": "811390",
    "end": "816760"
  },
  {
    "text": "we'll scale back the\nspecification to actually allow for things that would in\nfact be considered failures,",
    "start": "816760",
    "end": "823670"
  },
  {
    "text": "but are things that still\nwould conform to the spec. So we relax the\nspecification to make sure that we could still meet the\nnotion of a failure free system",
    "start": "823670",
    "end": "833130"
  },
  {
    "text": "or a fault tolerant system. And we'll see some\nexamples of that actually in the next lecture.",
    "start": "833130",
    "end": "837700"
  },
  {
    "text": "And I've already mentioned,\nthe general trick for all of these systems\nthat we're going to study,",
    "start": "840410",
    "end": "846240"
  },
  {
    "text": "examples that we're\ngoing to study, is to use some\nform of redundance.",
    "start": "846240",
    "end": "849890"
  },
  {
    "text": "And that's the way in which\nwe're going to mask errors. And almost all systems,\nor every system",
    "start": "852779",
    "end": "859560"
  },
  {
    "text": "that I know of\nthat's fault tolerant uses redundancy in\nsome form or another. And often it's not\nobvious how it uses it.",
    "start": "859560",
    "end": "865149"
  },
  {
    "text": "But it does actually\nuse redundancy.",
    "start": "865150",
    "end": "867020"
  },
  {
    "text": "So I'm going to now give an\nexample that will turn out to be the same example we'll\nuse for the next three or four",
    "start": "872160",
    "end": "878070"
  },
  {
    "text": "lectures. And so, you may as well,\nyou should probably get familiar with this\nexample because we're going to see this\nover and over again.",
    "start": "878070",
    "end": "884400"
  },
  {
    "text": "It's a really simple example,\nbut it's complicated enough that everything we want to\nlearn about fault tolerance",
    "start": "884400",
    "end": "890670"
  },
  {
    "text": "will be visible in this example. So it starts with\nthe person who wants to do a bank transaction at an\nATM, or a PC, or on a computer.",
    "start": "890670",
    "end": "903640"
  },
  {
    "text": "You want to do a\nbank transaction. And the way this works, as\nyou probably know, is it goes over some\nkind of a network.",
    "start": "903640",
    "end": "911150"
  },
  {
    "text": "And then, if you want to\ndo this bank transaction,, it goes to a server,\nwhich is run by your bank.",
    "start": "911150",
    "end": "920060"
  },
  {
    "text": "And the way this\nnormally works is that the server\nhas a module that uses a database system,\nwhich deals with managing",
    "start": "920060",
    "end": "932870"
  },
  {
    "text": "your account information. And because you\ndon't want to forget, and the bank shouldn't forget\nhow much money you have,",
    "start": "932870",
    "end": "939170"
  },
  {
    "text": "there is data that's\nstored on disk. And we're going to be\ndoing things that are",
    "start": "939170",
    "end": "945750"
  },
  {
    "text": "actions of the following form. We're going to be\nasking the transfer",
    "start": "945750",
    "end": "953540"
  },
  {
    "text": "from some account to another\naccount some amount of money.",
    "start": "953540",
    "end": "958339"
  },
  {
    "text": "And now, of course, anything\ncould fail in between. So, for example, there could\nbe a problem in the network.",
    "start": "962530",
    "end": "968199"
  },
  {
    "text": "And the network could fail. Or the software running\non the server could fail. Or the software running\nthis database system could crash or report\nbad values or something.",
    "start": "968200",
    "end": "977580"
  },
  {
    "text": "The disc could fail. And do we want systematic\ntechniques by which this",
    "start": "977580",
    "end": "982790"
  },
  {
    "text": "transfer here or\nall of these calls that look a lot like\ntransfer do the right thing?",
    "start": "982790",
    "end": "989259"
  },
  {
    "text": "And so, this doing\nthe right thing is an informal way of\nsaying meet a specification. So, we first have to decide what\nwe want for a specification.",
    "start": "989260",
    "end": "998190"
  },
  {
    "text": "That has to hold true\nno matter what happens, no matter what failures occur. So one example of\na specification",
    "start": "998190",
    "end": "1003730"
  },
  {
    "text": "might be to say, no matter\nwhat happens, if I invoke this and it returns, then\nthis amount of money",
    "start": "1003730",
    "end": "1011139"
  },
  {
    "text": "has to be transferred\nfrom here to here. So that could be a specification\nthat you might expect.",
    "start": "1011140",
    "end": "1017170"
  },
  {
    "text": "It also turns out this\nspecification is extremely hard to meet. And we're not even\ngoing to try to do it. And this is the weasel\nwording I said before about,",
    "start": "1017170",
    "end": "1023259"
  },
  {
    "text": "we'll modify the specification. So, we'll change the\nspecification going forward for this example to mean,\nif this call returns,",
    "start": "1023259",
    "end": "1031079"
  },
  {
    "text": "then no matter what\nfailures occur, either a transfer has\nhappened exactly once,",
    "start": "1031079",
    "end": "1037348"
  },
  {
    "text": "or the state of the system is as\nif the transfer didn't even get started, OK, which\nis reasonable.",
    "start": "1037348",
    "end": "1043769"
  },
  {
    "text": "I mean, and then if you really\ncare about moving the money, and you are determined\nthat it hasn't been moved,",
    "start": "1043770",
    "end": "1049290"
  },
  {
    "text": "you or some program\nmight try it again, which actually is another\nform of using redundancy where",
    "start": "1049290",
    "end": "1054460"
  },
  {
    "text": "you just try it over again. And we won't\nunderstand completely",
    "start": "1054460",
    "end": "1061280"
  },
  {
    "text": "why a specification that says\nyou have to do this exactly once if it returns, why\nthat's hard to implement,",
    "start": "1061280",
    "end": "1067940"
  },
  {
    "text": "why that's hard to\nachieve, we'll see that in the next couple of classes. So, for now, just realized\nthat the specification here",
    "start": "1067940",
    "end": "1073550"
  },
  {
    "text": "is it should happen\nexactly once or it should be as if no partial\naction corresponding",
    "start": "1073550",
    "end": "1080527"
  },
  {
    "text": "to the [UNINTELLIGIBLE]\nof this transfer happened. So the state of the system\nmust be as if the system never",
    "start": "1080527",
    "end": "1085710"
  },
  {
    "text": "saw this transfer request. So any module could failure.",
    "start": "1085710",
    "end": "1091750"
  },
  {
    "text": "So, let's take some\nexamples of failures in order to get some\nterminology that'll help us understand faults.",
    "start": "1091750",
    "end": "1098471"
  },
  {
    "text": "So one thing that could\nhappen is that you could have a disk failure. So the disc could just fail.",
    "start": "1098471",
    "end": "1104360"
  },
  {
    "text": "And one example of a disk\nfailure is the disk fails and then it just stops working.",
    "start": "1104360",
    "end": "1110385"
  },
  {
    "text": "And it tells the\ndatabase system that's trying to read and write data\nfrom it that it isn't working.",
    "start": "1110385",
    "end": "1114510"
  },
  {
    "text": "So if that kind of failure\nhappens where this module here with this component\njust completely stops and tells the higher-level\nmodule that it stopped,",
    "start": "1116720",
    "end": "1124870"
  },
  {
    "text": "that's an example of a failure. That's called a\nfail stop failure.",
    "start": "1124870",
    "end": "1127646"
  },
  {
    "text": "And more generally,\nany module that tells the higher-level\nmodule that it just stops working without reporting\nanything else, no outputs,",
    "start": "1130522",
    "end": "1138430"
  },
  {
    "text": "that's fail stop. Of course, you could have disks.",
    "start": "1138430",
    "end": "1144019"
  },
  {
    "text": "And you might have failures\nthat aren't fail stop. You might have\nsomething where there",
    "start": "1144020",
    "end": "1149870"
  },
  {
    "text": "is some kind of error\nchecking associated with every sector on your disk. And, disk might start\nreporting errors that",
    "start": "1149870",
    "end": "1157649"
  },
  {
    "text": "say that this is a bad sector. So, it doesn't fail stop, but\nit tells the higher level, the database system in this\ncase that some data that's read,",
    "start": "1157650",
    "end": "1165100"
  },
  {
    "text": "or some data that's\nbeen written, there's a bad\nsector, which means that the checksum doesn't match\nthe data that's being read.",
    "start": "1165100",
    "end": "1174450"
  },
  {
    "text": "When you have an\nerror like that where it doesn't stop working\nbut it tells you",
    "start": "1174450",
    "end": "1179720"
  },
  {
    "text": "that something bad is going on,\nthat's an example of a failure. That's called a\nfail fast failure.",
    "start": "1179720",
    "end": "1184250"
  },
  {
    "text": "I actually don't think these\nterms, that most of these terms are particularly important. Fail stop is usually\nimportant and worth knowing,",
    "start": "1187041",
    "end": "1192834"
  },
  {
    "text": "but the reason to go\nthrough these terms is more to understand that there\nare various kinds of failures",
    "start": "1192834",
    "end": "1197900"
  },
  {
    "text": "possible. So in one case it stops working. In another case,\nit just tells you that it's not working\nbut continues working.",
    "start": "1197900",
    "end": "1203770"
  },
  {
    "text": "It tells you that\ncertain operations haven't been correctly done.",
    "start": "1203770",
    "end": "1207640"
  },
  {
    "text": "Now, another thing that could\nhappen when, for example, the disc has fail\nstop, has fail fast",
    "start": "1210610",
    "end": "1219430"
  },
  {
    "text": "is that the database\nsystem might decide that right operations, you're\nnot allowed to write things",
    "start": "1219430",
    "end": "1225980"
  },
  {
    "text": "to disk because the disk is\neither fail completely or is fail fast.",
    "start": "1225980",
    "end": "1231240"
  },
  {
    "text": "But it might allow actions or\nrequests that are read only. So, for example, it\nmight allow users",
    "start": "1231240",
    "end": "1237289"
  },
  {
    "text": "to come up to an ATM\nmachine, and just read how much money they\nhave from their account because it might be that there\nis a cache of the data that's",
    "start": "1237290",
    "end": "1243850"
  },
  {
    "text": "in memory in the database. So it might allow read-only\nactions, in which case",
    "start": "1243850",
    "end": "1249169"
  },
  {
    "text": "the system's perform\nis functioning with only a subset\nof the actions",
    "start": "1249170",
    "end": "1255720"
  },
  {
    "text": "that it's supposed to be taking. And if that happens,\nthat kind of failure is called a fail soft failure,\nwhere not all of the interfaces",
    "start": "1255720",
    "end": "1267559"
  },
  {
    "text": "are available, but a\nsubset of the interfaces are available and\ncorrectly working.",
    "start": "1267560",
    "end": "1271120"
  },
  {
    "text": "And the last kind of\nfailure that could happen is that in this\nexample, let's say",
    "start": "1274424",
    "end": "1281334"
  },
  {
    "text": "that failures are\noccurring when there's a large number of people trying\nto make these requests at ATMs.",
    "start": "1281334",
    "end": "1287100"
  },
  {
    "text": "And, there is some\nproblems that have arisen. And somebody determines\nthat the problem",
    "start": "1287100",
    "end": "1293840"
  },
  {
    "text": "arises when there\nis too many people gaining access to the\nsystem at the same time. And the system might\nnow move to a mold",
    "start": "1293840",
    "end": "1300090"
  },
  {
    "text": "where it allows only a small\nnumber of actions at a time, a small number of concurrent\nactions at a time, or maybe one action at a time.",
    "start": "1300090",
    "end": "1306330"
  },
  {
    "text": "So, one user can come at a\ntime to the system, which means the systems, there\nhas been a failure,",
    "start": "1306330",
    "end": "1312990"
  },
  {
    "text": "but the way the system's dealing\nwith it is that it determines that the failure doesn't get\ntriggered when the load is low.",
    "start": "1312990",
    "end": "1321210"
  },
  {
    "text": "So it might function\nat low performance. It still provides all\nof the interfaces, but just at very low performance\nor at lower performance.",
    "start": "1321210",
    "end": "1329190"
  },
  {
    "text": "And that kind of behavior\nis called failsafe. So it's moved to a mode\nwhere it's just scaled back",
    "start": "1329190",
    "end": "1337450"
  },
  {
    "text": "how much work it's\nwilling to do, and does it at\ndegraded performance.",
    "start": "1337450",
    "end": "1341365"
  },
  {
    "text": "OK, so the plan now is\nfor the rest of today,",
    "start": "1362830",
    "end": "1369029"
  },
  {
    "text": "so tomorrow from\nthe next lecture on, what we're going to do\nis understand algorithms for how we go about and how\nyou build systems that actually",
    "start": "1369030",
    "end": "1377500"
  },
  {
    "text": "do one or all of these in\norder to meet the specification that we want. But before we do that you have\nto understand a little bit",
    "start": "1377500",
    "end": "1384430"
  },
  {
    "text": "about models for faults. In order to build\nfault tolerant systems, it's usually a good\nidea to understand",
    "start": "1384430",
    "end": "1390420"
  },
  {
    "text": "a little bit more\nquantitatively models or faults",
    "start": "1390420",
    "end": "1398634"
  },
  {
    "text": "that occur in systems. And primarily,\nthis discussion is going to be focused\non hardware faults because most people don't\nunderstand how software",
    "start": "1398634",
    "end": "1406059"
  },
  {
    "text": "faults are to be modeled. But since all our\nsystems are going to be built on hardware,\nfor example discs",
    "start": "1406060",
    "end": "1411127"
  },
  {
    "text": "are going to be\nreally, really common. Our network links are\ngoing to be common. And all of those conform\nnicely to models.",
    "start": "1411127",
    "end": "1416990"
  },
  {
    "text": "It's worth understanding\nhow that works. So, for example, a\ndisk manufacturer",
    "start": "1416990",
    "end": "1423230"
  },
  {
    "text": "might report that the error rate\nof undetected errors, so disks usually have a fair amount\nof error detection in them.",
    "start": "1423230",
    "end": "1430180"
  },
  {
    "text": "But, they might report that the\nerror rate of undetected errors is, say, ten to the minus\n12 or ten to the minus 13.",
    "start": "1430180",
    "end": "1436100"
  },
  {
    "text": "And that number\nlooks really small. That says that out\nof that many bits, maybe one bit is corrupted,\nand you can't detect it.",
    "start": "1436100",
    "end": "1443362"
  },
  {
    "text": "But, you have to\nrealize that given modern workloads, for example\ntake Google as an example that you saw from\nlast recitation,",
    "start": "1443362",
    "end": "1449757"
  },
  {
    "text": "the amount of data that's being\nstored in the system like that or in the world in general is\nso huge that a ten to the minus",
    "start": "1449757",
    "end": "1456159"
  },
  {
    "text": "13th error rate means\nthat you're probably seeing some bad data and\nfile that you can never fix",
    "start": "1456160",
    "end": "1461570"
  },
  {
    "text": "or never detect\nevery couple of days.",
    "start": "1461570",
    "end": "1466700"
  },
  {
    "text": "Network people would\ntell you that fiber optic links have an error rate of\none error in ten to the 12th.",
    "start": "1466700",
    "end": "1472994"
  },
  {
    "text": "But you have to realize\nthat these links are sending so many gigabits per second\nthat one error in ten to the 12th means\nsomething like there's",
    "start": "1472994",
    "end": "1479980"
  },
  {
    "text": "an error that you can't detect\nmaybe every couple of hours.",
    "start": "1479980",
    "end": "1486204"
  },
  {
    "text": "What that really means is\nthat at the higher layers, you need to do\nmore work in order to make sure that your data\nis protected because you can't",
    "start": "1486204",
    "end": "1492350"
  },
  {
    "text": "actually rely on the fact that\nyour underlying components have these amazingly low numbers\nbecause there's so much data",
    "start": "1492350",
    "end": "1497679"
  },
  {
    "text": "going on, being sent or\nbeing stored on these systems that you need to have other\ntechniques at a higher layer",
    "start": "1497680",
    "end": "1503160"
  },
  {
    "text": "to protect, if you really\ncare about the integrity of your data.",
    "start": "1503160",
    "end": "1505900"
  },
  {
    "text": "In addition to\nthese raw numbers, there's two or\nthree other metrics that people use to understand\nfaults and failures.",
    "start": "1508430",
    "end": "1517922"
  },
  {
    "text": "The first one is the number\nof tolerated failures.",
    "start": "1517922",
    "end": "1520005"
  },
  {
    "text": "So, for example, if you\nbuild a system to store data and you're worried about discs\nfailing or discs reporting",
    "start": "1525330",
    "end": "1532550"
  },
  {
    "text": "at [earnest?] values, you might\nreplicate that data across many, many discs. And then when you\ndesign your system,",
    "start": "1532550",
    "end": "1538039"
  },
  {
    "text": "one of the things you would\nwant to analyze and report is the number of tolerated\nfailures of discs. So, for example, if you build\na system out of seven discs,",
    "start": "1538040",
    "end": "1546350"
  },
  {
    "text": "you might say that you can\nhandle up to two failed disks, or simply like that,\ndepending on how",
    "start": "1546350",
    "end": "1551540"
  },
  {
    "text": "you've designed your system. And that's usually a good thing\nto report because then people who use your system can\nknow how to provision",
    "start": "1551540",
    "end": "1558300"
  },
  {
    "text": "or engineer your system.",
    "start": "1558300",
    "end": "1564260"
  },
  {
    "text": "The second metric\nwhich we're going to spend a few more minutes\non is something called the mean time to failure.",
    "start": "1564260",
    "end": "1569660"
  },
  {
    "text": "And what this says is\nit takes a model where you have a system that\nstarts at time zero,",
    "start": "1581400",
    "end": "1586880"
  },
  {
    "text": "and it's running fine. And then at some point\nin time, it fails. And then, when it\nfails, that error",
    "start": "1586880",
    "end": "1593570"
  },
  {
    "text": "is made known to an operator. Or it's made known\nto some higher level that has a plan\nto work around it",
    "start": "1593570",
    "end": "1600419"
  },
  {
    "text": "to repair this failure. And then, once the\nfailure gets repaired, it takes some time for the\nfailure to get repaired.",
    "start": "1600420",
    "end": "1606064"
  },
  {
    "text": "And once it's repaired\nit starts running again. And then it fails at some\nother point in the future.",
    "start": "1606064",
    "end": "1611100"
  },
  {
    "text": "And when it goes through the\ncycle of failures and repairs, you end up with a timeline\nthat looks like this.",
    "start": "1611100",
    "end": "1617300"
  },
  {
    "text": "So you might start at time zero. And the system is working fine.",
    "start": "1617300",
    "end": "1623450"
  },
  {
    "text": "And then there is a\nfailure that happens here. And then the system is down\nfor a certain period of time.",
    "start": "1623450",
    "end": "1629820"
  },
  {
    "text": "And then somebody\nrepairs the system, and then it continues to work.",
    "start": "1629820",
    "end": "1635902"
  },
  {
    "text": "And then it fails\nagain, and so on.",
    "start": "1635902",
    "end": "1637360"
  },
  {
    "text": "And so, for each of\nthe durations of time that the system\nis working, let's assume it's starting\nat zero, each of these",
    "start": "1647050",
    "end": "1652730"
  },
  {
    "text": "defines a period of\ntime that I'm going to call TTF or time to fail.",
    "start": "1652730",
    "end": "1658090"
  },
  {
    "text": "OK, so this is the first\ntime to fail interval. This is the second time to\nfail This is the second time",
    "start": "1658090",
    "end": "1673710"
  },
  {
    "text": "to fail interval,\ntime to repair, and this is the third time\nto fail interval, and so on.",
    "start": "1673710",
    "end": "1679770"
  },
  {
    "text": "And analogously\nin between here, I could define these time\nto repair intervals, TTR1, TTR2, and so on.",
    "start": "1679770",
    "end": "1689940"
  },
  {
    "text": "So, the mean time to failure is\njust the mean of these values. There's some duration of time. You're like, three\nhours the system",
    "start": "1689940",
    "end": "1696298"
  },
  {
    "text": "worked, and then it crashed. That's TTF1. And then, somebody to repair\nit worked now for six hours.",
    "start": "1696298",
    "end": "1702020"
  },
  {
    "text": "That's TTF2, and so on. If you run your system for\na long enough period of time like a disk or anything\nelse, and then you",
    "start": "1702020",
    "end": "1708750"
  },
  {
    "text": "observe all these time\nto fail samples, and take the mean of that, that tells\nyou a mean time to failure.",
    "start": "1708750",
    "end": "1716870"
  },
  {
    "text": "The reason this\nis interesting is that you could run your system\nfor a really long period of time, and build up a\nmetric called availability.",
    "start": "1716870",
    "end": "1724620"
  },
  {
    "text": "So, for example, if\nyou're running a website, and the way this\nwebsite works is it runs for a while and then every\nonce in awhile it crashes.",
    "start": "1729800",
    "end": "1737640"
  },
  {
    "text": "So its network crashes and\npeople can't get to you. So you could run this for\nmonths or years on end,",
    "start": "1737640",
    "end": "1742670"
  },
  {
    "text": "and then observe these values. You could run this every month. You could decide what\navailability is, and decide",
    "start": "1742670",
    "end": "1748510"
  },
  {
    "text": "if it's good enough\nor if you want to make it higher or lower. So you could now define\nyour availability",
    "start": "1748510",
    "end": "1754310"
  },
  {
    "text": "to be the fraction of time that\nyour system is up and running. And the fraction of time that\nthe system is up and running",
    "start": "1754310",
    "end": "1761050"
  },
  {
    "text": "is the fraction of\ntime on this timeline that you have this\nkind of shaded thing.",
    "start": "1761050",
    "end": "1769240"
  },
  {
    "text": "OK, so that's just equal\nto the sum of all the time to failure numbers\ndivided by the total time.",
    "start": "1769240",
    "end": "1775970"
  },
  {
    "text": "And the total time is\njust the sum of all the TTF's and the TTR's.",
    "start": "1775970",
    "end": "1780260"
  },
  {
    "text": "OK, and that's what availability\nmeans is the fraction of time that your system\nis available is up.",
    "start": "1786150",
    "end": "1794030"
  },
  {
    "text": "Now, if you divide both the\ntop and the bottom by N, this number works out to\nbe the mean time to failure",
    "start": "1794030",
    "end": "1806559"
  },
  {
    "text": "divided by the mean time to\nfailure plus the mean time to repair.",
    "start": "1806560",
    "end": "1810930"
  },
  {
    "text": "So this is a useful notion\nbecause now it tells you that you can [point?] your system\nfor a very long period of time,",
    "start": "1818420",
    "end": "1823640"
  },
  {
    "text": "and build up a mean estimate,\nmean values of the time to failure and the\ntime to repair, and just come up with the\nnotion of what the availability",
    "start": "1823640",
    "end": "1832140"
  },
  {
    "text": "of the system is. And then, decide based on\nwhether it's high enough or not whether you want to improve\nsome aspect of the system",
    "start": "1832140",
    "end": "1838762"
  },
  {
    "text": "and whether it's worth doing.",
    "start": "1838762",
    "end": "1839970"
  },
  {
    "text": "So it turns out this\nmean time to failure, and therefore availability\nis related for components",
    "start": "1844540",
    "end": "1852840"
  },
  {
    "text": "to a notion called\nthe failure rate. So let me define\nthe failure rate.",
    "start": "1852840",
    "end": "1858270"
  },
  {
    "text": "So the failure rate\nis defined, it's also called a hazard function.",
    "start": "1869200",
    "end": "1874460"
  },
  {
    "text": "That's what people use the\nterm H of T, the hazard rate. That's defined as\nthe probability that you have a failure of a\nsystem or a component in time,",
    "start": "1874460",
    "end": "1885780"
  },
  {
    "text": "T to T plus delta T,\ngiven that it's working,",
    "start": "1885780",
    "end": "1891950"
  },
  {
    "text": "we'll say, OK, at time T, OK? So it's a conditional\nprobability.",
    "start": "1891950",
    "end": "1897910"
  },
  {
    "text": "It's the probability that\nyou'll fail in the next time instant given that it's\ncorrectly working and has been correctly working.",
    "start": "1897910",
    "end": "1903660"
  },
  {
    "text": "It's correctly\nworking at time T. So, if you look at\nthis for a disk,",
    "start": "1903660",
    "end": "1908720"
  },
  {
    "text": "most discs look like the\npicture shown up here. This is also called\nthe bathtub curve",
    "start": "1908720",
    "end": "1913900"
  },
  {
    "text": "because it looks like a bathtub. What you see at the left\nend here are new discs.",
    "start": "1913900",
    "end": "1918960"
  },
  {
    "text": "So, the X axis here shows time. I guess it's a\nlittle shifted below. You can't read some stuff\nthat's written at the bottom.",
    "start": "1918960",
    "end": "1925610"
  },
  {
    "text": "But the X axis shows\ntime, and the Y axis shows the failure rate. So, when you take a new\ncomponent like a new light bulb",
    "start": "1925610",
    "end": "1931740"
  },
  {
    "text": "or a new disc or anything new,\nthere is a pretty high chance that it'll actually fail because\nmanufacturers, when they sell",
    "start": "1931740",
    "end": "1938730"
  },
  {
    "text": "you stuff, don't\nactually sell you things without actually\nburning them in first. So for semiconductors,\nthat's also called yield.",
    "start": "1938730",
    "end": "1945410"
  },
  {
    "text": "They make a whole\nnumber of chips, and then they're\nburning a few, and then they only give you the rest. And the stuff that's...\nsurvive the burn in",
    "start": "1945410",
    "end": "1952520"
  },
  {
    "text": "and the fraction that\nsurvives the burning is also called the yield. So what you see on our left,\nthe colorful term for that",
    "start": "1952520",
    "end": "1959179"
  },
  {
    "text": "is infant mortality. So it's things that die when\nthey are really, really young.",
    "start": "1959180",
    "end": "1965269"
  },
  {
    "text": "And then, once you get\npast the early mortality, you end up with a flat failure,\na conditional probability",
    "start": "1965270",
    "end": "1972659"
  },
  {
    "text": "for failure. And what this says\nis that, and I'll get to this and a little bit.",
    "start": "1972660",
    "end": "1978490"
  },
  {
    "text": "But what this says is that once\nyou are in the flat region, it says that the\nprobability of failure is essentially independent of\nwhat's happened in the past.",
    "start": "1978490",
    "end": "1986110"
  },
  {
    "text": "And then you stay\nhere for a while. And then if the system\nhas been operating like a disk has been\noperating for awhile,",
    "start": "1989240",
    "end": "1995470"
  },
  {
    "text": "let's say three years or five\nyears typically for discs, then the probability\nof failure starts going up again because that's\nusually due to wear and tear,",
    "start": "1995470",
    "end": "2002630"
  },
  {
    "text": "which for hardware components\nis certainly the case.",
    "start": "2002630",
    "end": "2006750"
  },
  {
    "text": "There are a couple\nof interesting things about this curve that you\nshould realize, particularly when you read specifications\nfor things like discs.",
    "start": "2008724",
    "end": "2017120"
  },
  {
    "text": "Disc manufacturers\nwill report a number, like the mean time\nto failure number. And the mean time\nto failure number",
    "start": "2017120",
    "end": "2023440"
  },
  {
    "text": "that the report\nmight usually, I mean for discs might be 200,000\nhours or 300,000 hours.",
    "start": "2023440",
    "end": "2028767"
  },
  {
    "text": "I mean, that's a really\nlong period of time. That's 30 years. So when you look at\na number like that,",
    "start": "2028767",
    "end": "2034460"
  },
  {
    "text": "you have to ask\nwhether what it means is that discs really\nsurvive 30 years. And anybody who\nis on the computer",
    "start": "2034460",
    "end": "2040970"
  },
  {
    "text": "knows, you know, most discs\ndon't survive 30 years.",
    "start": "2040970",
    "end": "2046750"
  },
  {
    "text": "So they are actually\nreporting one over the reciprocal of this\nthing at the flat region",
    "start": "2046750",
    "end": "2052219"
  },
  {
    "text": "of the curve because this\nconditional failure probability rate, at this operation\ntime when the only reason",
    "start": "2052219",
    "end": "2059750"
  },
  {
    "text": "things fail is completely\nrandom failures not related to wear and tear. So when disc manufacturers\nreport a mean time",
    "start": "2059750",
    "end": "2066120"
  },
  {
    "text": "to failure number, they are\nactually reporting something that that's the time that\nyou're disc is likely to work.",
    "start": "2066120",
    "end": "2073719"
  },
  {
    "text": "What that number really says is\nthat during the period of time that the disc is\nnormally working,",
    "start": "2073719",
    "end": "2079550"
  },
  {
    "text": "the probability of\na random failure is one over the mean\ntime to failure.",
    "start": "2079550",
    "end": "2085344"
  },
  {
    "text": "That's what it really says. So the other number that\nthey also report, often in smaller print, is it the\nexpected operational lifetime.",
    "start": "2085344",
    "end": "2093461"
  },
  {
    "text": "And that's usually something\nlike three years or four years or five years, whatever\nit is they report. And that's where this\nthing starts going up,",
    "start": "2093462",
    "end": "2100490"
  },
  {
    "text": "and beyond a point where\nthe probability of failures above some threshold,\nthey report that as the expected\noperational lifetime.",
    "start": "2100490",
    "end": "2109410"
  },
  {
    "text": "Now, for software, this\ncurve doesn't actually apply, or at least nobody really knows\nwhat the curve is for software.",
    "start": "2109410",
    "end": "2116119"
  },
  {
    "text": "What is true for software,\nthough, is infant mortality, things were the conditional\nprobability of failure is high for new software, which\nis why you are sort of well",
    "start": "2116119",
    "end": "2123420"
  },
  {
    "text": "advised, the moment the\nnew upgrade of something comes around, most\npeople who are prudent wait a little bit to just make\nsure all the bugs are out,",
    "start": "2123420",
    "end": "2131352"
  },
  {
    "text": "and things get a\nlittle bit stable. So they wait a few months. You are always a couple\nof revisions behind. So I do believe that for\nsoftware, the left side",
    "start": "2131352",
    "end": "2139300"
  },
  {
    "text": "of the curve holds. It's totally unclear that\nthere is a flat region, and it's totally\nunclear that things start rising again with age.",
    "start": "2139300",
    "end": "2150240"
  },
  {
    "text": "So the reason for\nthis curve, being the way it is, is a lot of\nthis is based on the fact",
    "start": "2150240",
    "end": "2155950"
  },
  {
    "text": "that things are mechanical\nand have wear and tear. But the motivation\nfor this kind of curve actually comes from demographics\nand from human lifespans.",
    "start": "2155950",
    "end": "2164120"
  },
  {
    "text": "So this is a picture\nthat I got from, it's a website\ncalled mortality.org,",
    "start": "2164120",
    "end": "2170029"
  },
  {
    "text": "which is a research project\nrun by demographers.",
    "start": "2170030",
    "end": "2177010"
  },
  {
    "text": "And they have amazing data. There's way more data available\nbut human life expectancy and demographics than\nanything about software.",
    "start": "2177010",
    "end": "2184800"
  },
  {
    "text": "What this shows here is\nactually the same bathtub curve as in the previous chart. It just doesn't look\nlike that because the Y",
    "start": "2184800",
    "end": "2190480"
  },
  {
    "text": "axis is on a log scale. So given that it's\nrising linearly between 0.001 and 0.01,\non a linear scale that",
    "start": "2190480",
    "end": "2198730"
  },
  {
    "text": "looks essentially flat. So human beings for the\nprobability of death,",
    "start": "2198730",
    "end": "2204500"
  },
  {
    "text": "at a certain time,\ngiven that you are alive at a\ncertain time, that follows this curve here,\nessentially a bathtub curve.",
    "start": "2204500",
    "end": "2211500"
  },
  {
    "text": "At the left hand, of course,\nthere is infant mortality. This I think I pulled the data down. This is from an\narticle that appeared where the data for the\nUS population 1999.",
    "start": "2212480",
    "end": "2220380"
  },
  {
    "text": "It starts off again\nwith infant mortality. And then it's flat for a while. Then it rises up.",
    "start": "2220380",
    "end": "2227114"
  },
  {
    "text": "Now, there's a lot\nof controversy, it turns out, for whether the\nbathtub curve at the right end",
    "start": "2227114",
    "end": "2232230"
  },
  {
    "text": "holds for human beings or not. And, some people\nbelieve it does, and some people\nbelieve it doesn't. But the point here is that\nfor human beings anyway,",
    "start": "2232230",
    "end": "2238720"
  },
  {
    "text": "the rule of thumb that insurance\ncompanies use for determining insurance premiums is\nthat the log of the death",
    "start": "2238720",
    "end": "2247200"
  },
  {
    "text": "rate, the log of the probability\nof dying in a certain age grows linearly with the time\nthat somebody has been alive.",
    "start": "2247200",
    "end": "2255986"
  },
  {
    "text": "And that's what\nthis graph shows, that on large scale on\nthe Y axis, you have a line. And that's what they use for\ndetermining insurance premiums.",
    "start": "2255986",
    "end": "2263950"
  },
  {
    "text": "OK, so the reason this bathtub\ncurve is actually useful is, so if you go back,\nlet's go back here.",
    "start": "2267310",
    "end": "2276180"
  },
  {
    "text": "The reason both these\nnumbers are useful, the flat portion of\nthe bathtub curve and the expected operational\nlifetime is the following.",
    "start": "2276180",
    "end": "2282190"
  },
  {
    "text": "It's not like this flat\nportion of the curve where the disc manufacturer\nreports the mean time to failure. That's 30 years.",
    "start": "2282190",
    "end": "2288000"
  },
  {
    "text": "It's not like\nthat's useless even though you're disc only might\nrun for three to four years. The reason is that if you\nhave a project, if you have",
    "start": "2288000",
    "end": "2297390"
  },
  {
    "text": "a system where you\nare willing to upgrade your disk every three\nyears where you've budgeted for upgrading your discs\nevery said three years, then",
    "start": "2297390",
    "end": "2306070"
  },
  {
    "text": "you might be better off buying a\ndisk whose expected lifetime is only five years but whose\nflat portion is really low.",
    "start": "2306070",
    "end": "2316230"
  },
  {
    "text": "So in particular, if you're\ngiven to discs, one of which has a curve that\nlooks like that,",
    "start": "2316230",
    "end": "2321970"
  },
  {
    "text": "and another that has a curve\nthat looks like that, and let's",
    "start": "2321970",
    "end": "2329349"
  },
  {
    "text": "say this is five years,\nand this is three years.",
    "start": "2329350",
    "end": "2335410"
  },
  {
    "text": "If you're building\na system and you've budgeted for upgrading your\ndiscs every four years, then you're probably\nbetter off using the thing",
    "start": "2335410",
    "end": "2343080"
  },
  {
    "text": "with the lower\nvalue of mean time to failure because its\nexpected lifetime is longer. But if you're willing to\nupgrade your discs every two",
    "start": "2343080",
    "end": "2350030"
  },
  {
    "text": "years or one year,\nthen you might be better off with this thing\nhere with the lower meantime",
    "start": "2350030",
    "end": "2355225"
  },
  {
    "text": "to failure, even though its\nexpected operational lifetime is smaller. So both of these numbers\nare actually meaningful,",
    "start": "2355225",
    "end": "2360300"
  },
  {
    "text": "and it depends a lot on how\nyou're planning to use it. I mean, it's a lot like\nspare tires on your car.",
    "start": "2360300",
    "end": "2366110"
  },
  {
    "text": "I mean, the spare tire\nwas run perfectly fine as long as you don't\nexceed 100 miles. And the moment you\nexceed 100 miles, then",
    "start": "2366110",
    "end": "2372280"
  },
  {
    "text": "you don't want to use it at all. And it might be a lot cheaper\nto build the spare tire that runs just 100 miles\nbecause the users, you",
    "start": "2372280",
    "end": "2377660"
  },
  {
    "text": "are guaranteed that you\nwill get to a repair shop within 100 miles. It's the same concept.",
    "start": "2377660",
    "end": "2386000"
  },
  {
    "text": "OK.",
    "start": "2386000",
    "end": "2387620"
  },
  {
    "text": "So one of the things\nthat we can define, once we have this\ncondition of failure rate is the reliability\nof the system.",
    "start": "2402020",
    "end": "2408819"
  },
  {
    "text": "We'll define that as\nthe probability, R of T, is the probability that\nthe system's working at time T, given that it\nwas working at time zero,",
    "start": "2413860",
    "end": "2422520"
  },
  {
    "text": "or more generally assuming\nthat everything is always working at time zero,\nit's the probability",
    "start": "2422520",
    "end": "2427610"
  },
  {
    "text": "that you're OK at time T.",
    "start": "2427610",
    "end": "2437220"
  },
  {
    "text": "And it turns out that for\ncomponents in the flat region of this curve, H of T, the\nconditional failure rate is",
    "start": "2437220",
    "end": "2445160"
  },
  {
    "text": "a constant, on systems\nthat satisfy that,",
    "start": "2445160",
    "end": "2450260"
  },
  {
    "text": "and would satisfy the property\nthat the actual unconditional failure rate is a [memory-less?]\nprocess where the probability",
    "start": "2450260",
    "end": "2456070"
  },
  {
    "text": "of failure doesn't depend on how\nlong the system's been running. It turns out that\nfor the systems that satisfy those conditions,\nwhich apparently discs",
    "start": "2456070",
    "end": "2463480"
  },
  {
    "text": "do in the operation\nwhen they're actually not at the right edge of\nthe curve, which discs do,",
    "start": "2463480",
    "end": "2469730"
  },
  {
    "text": "the reliability,\nthis function goes as the very nice,\nsimple function, which",
    "start": "2469730",
    "end": "2475520"
  },
  {
    "text": "is an exponential decaying\nfunction, E to the minus T over MTTF. And this is under\ntwo conditions.",
    "start": "2475520",
    "end": "2481710"
  },
  {
    "text": "H of T has to be flat, and\nthe unconditional failure rate has to be something that\ndoesn't depend on how long the system's been running.",
    "start": "2481710",
    "end": "2487880"
  },
  {
    "text": "And for those systems,\nit's not hard to show that your reliability is\njust an exponential decaying",
    "start": "2487880",
    "end": "2493110"
  },
  {
    "text": "function, which means you\ncan do a lot of things like predict how long the\nsystem is likely to be running, and so on.",
    "start": "2493110",
    "end": "2499490"
  },
  {
    "text": "And that will tell you\nwhen to upgrade things. OK, so given all of\nthis stuff, we now",
    "start": "2499490",
    "end": "2508090"
  },
  {
    "text": "want techniques to cope with\nfailures, cope with faults. And that's what we're\ngoing to be looking at for the next\nfew lectures, let's",
    "start": "2508090",
    "end": "2515100"
  },
  {
    "text": "take one simple example\nof a system first.",
    "start": "2515100",
    "end": "2520537"
  },
  {
    "text": "And like I said before,\nall of these systems use redundancy in some form. So the disk fails\nat a certain rate.",
    "start": "2520537",
    "end": "2526650"
  },
  {
    "text": "Just put in multiple disks,\nreplicate the data across them, and then hope that\nthings survive.",
    "start": "2526650",
    "end": "2530940"
  },
  {
    "text": "So the first kind of\nredundancy that you might have in the\nexample that I just",
    "start": "2534280",
    "end": "2540079"
  },
  {
    "text": "talked about, spatial\nredundancy, where the idea is that you have multiple\ncopies of the same thing,",
    "start": "2540080",
    "end": "2547269"
  },
  {
    "text": "and the games we're\ngoing to play all have to do with how we're going\nto manage all these copies.",
    "start": "2547270",
    "end": "2553790"
  },
  {
    "text": "And actually, this will turn\nout to be quite complicated. We'll use these special copies\nin a number of different ways.",
    "start": "2553790",
    "end": "2560359"
  },
  {
    "text": "In some examples, we'll\napply error correcting codes to make copies of the data or\nuse other codes to replicate",
    "start": "2560360",
    "end": "2568790"
  },
  {
    "text": "the data. We might replicate\ndata and make copies",
    "start": "2568790",
    "end": "2574970"
  },
  {
    "text": "of data in the form of\nlogs which keep track of, you know, you run an operation. You store some results. But at the same time, before\nyou store those results,",
    "start": "2574970",
    "end": "2582100"
  },
  {
    "text": "you also store something\nin a log [surf?], the original data went away;\nyour log can tell you what",
    "start": "2582100",
    "end": "2587200"
  },
  {
    "text": "to do. Or you might just do\nplain and simple copies",
    "start": "2587200",
    "end": "2593300"
  },
  {
    "text": "followed by voting. So the idea is that you have\nmultiple copies of something,",
    "start": "2593300",
    "end": "2601550"
  },
  {
    "text": "and then you write\nto all of them. In the simplest of schemes,\nyou might write to all of them, and then when you want\nto read something,",
    "start": "2601550",
    "end": "2606740"
  },
  {
    "text": "you read from all of them. And then just what? And go with the majority. So intuitively that can tolerate\na certain number of failures.",
    "start": "2606740",
    "end": "2615338"
  },
  {
    "text": "And all of these\napproaches have been used. And people will continue\nto build systems along all of these ideas.",
    "start": "2615339",
    "end": "2621930"
  },
  {
    "text": "But in addition,\nwe're also going to look at temporal redundancy.",
    "start": "2621930",
    "end": "2628460"
  },
  {
    "text": "And the idea here\nis try it again. So this is different\nfrom copies.",
    "start": "2628460",
    "end": "2634890"
  },
  {
    "text": "What it says is\nyou try something. If it doesn't work and you\ndetermine that it doesn't work, try it again.",
    "start": "2634890",
    "end": "2641570"
  },
  {
    "text": "So retry is an example\nof temporal tricks. But it will turn out will also\nuse not just moving forward",
    "start": "2641570",
    "end": "2648070"
  },
  {
    "text": "and retrying something that\nwe know should be retried, we'll also use the\ntrick of undoing things that we have done.",
    "start": "2648070",
    "end": "2654130"
  },
  {
    "text": "So we'll move both\ndirections on the time axis. We'll retry stuff,\nbut at the same time",
    "start": "2654130",
    "end": "2659170"
  },
  {
    "text": "we'll also undo things because\nsometimes things have happened that shouldn't have happened.",
    "start": "2659170",
    "end": "2664279"
  },
  {
    "text": "Things went half way. And we really want\nto back things out. And we were going to use\nboth of these techniques.",
    "start": "2664280",
    "end": "2671724"
  },
  {
    "text": "So one example of spatial\nredundancy is a voting scheme.",
    "start": "2675980",
    "end": "2681830"
  },
  {
    "text": "And you can apply this to many\ndifferent kinds of systems. But let's just apply it\nto a simple example of,",
    "start": "2686360",
    "end": "2693800"
  },
  {
    "text": "there is data stored\nin multiple occasions. And then whenever\ndata is written, it's written to all of them. And then when you read it,\nyou read from all them,",
    "start": "2693800",
    "end": "2701160"
  },
  {
    "text": "and then you vote. And in a simple model\nwhere these components are",
    "start": "2701160",
    "end": "2707960"
  },
  {
    "text": "fail stop, which means that\nthey fail; they just fail.",
    "start": "2707960",
    "end": "2710660"
  },
  {
    "text": "Excuse me, on a simple\nmodel where things are not fail stop or fail fast, but just\nreport back this data to you,",
    "start": "2713210",
    "end": "2721549"
  },
  {
    "text": "so you are voting on it,\nand these results come back. You've written something in them\nand when you read things back,",
    "start": "2721550",
    "end": "2726660"
  },
  {
    "text": "arbitrary values might get\nreturned if there's a failure. And if there's no failure here,\ncorrect values get returned.",
    "start": "2726660",
    "end": "2731829"
  },
  {
    "text": "Then as long as two of these\ncopies are correctly working, or two of these versions\nare correctly working, then the vote will\nactually return to you",
    "start": "2731830",
    "end": "2738238"
  },
  {
    "text": "at the correct output. And that's the\nidea behind voting. So if the reliability of each\nof these components is some R,",
    "start": "2738238",
    "end": "2746500"
  },
  {
    "text": "that's the probability that\nthe system's working at time T according to that\ndefinition of reliability.",
    "start": "2746500",
    "end": "2751814"
  },
  {
    "text": "Then, under the assumption\nthat these are completely independent of each other,\nwhich is a big assumption, particularly for software.",
    "start": "2751814",
    "end": "2757250"
  },
  {
    "text": "But it might be a reasonable\nassumption for something like a disk, under the\nassumption that these are completely independent,\nthen you could write out",
    "start": "2757250",
    "end": "2764079"
  },
  {
    "text": "the reliability of this\nthree-voting scheme of this thing where you are\nvoting on three outputs.",
    "start": "2764080",
    "end": "2771212"
  },
  {
    "text": "But you know that the\nsystem is correctly working if any two of these\nare correctly working.",
    "start": "2771212",
    "end": "2776230"
  },
  {
    "text": "So that happens\nunder two conditions. Firstly, all three are\ncorrectly working, right?",
    "start": "2776230",
    "end": "2782930"
  },
  {
    "text": "Or, some two of the three\nare correctly working. And, there's three ways in\nwhich you could choose some two of the three.",
    "start": "2782930",
    "end": "2789410"
  },
  {
    "text": "And, one of them\nis wrongly working. And it turns out that\nthis number actually",
    "start": "2789410",
    "end": "2794870"
  },
  {
    "text": "is very, very large, much larger\nthan R, when R is close to one. And, in general,\nthis is bigger than R",
    "start": "2794870",
    "end": "2804140"
  },
  {
    "text": "when each of the components\nhas high enough reliability, namely, bigger than half.",
    "start": "2804140",
    "end": "2808290"
  },
  {
    "text": "And so, let's say that\neach of these components has a reliability of 95%.",
    "start": "2814650",
    "end": "2820670"
  },
  {
    "text": "If you work this number\nout, it turns out to be a pretty big number,\nmuch higher than 95%, much closer to one.",
    "start": "2820670",
    "end": "2826810"
  },
  {
    "text": "And, of course,\nthis kind of voting is a bad idea if the\nreliability of these components is really low.",
    "start": "2826810",
    "end": "2831840"
  },
  {
    "text": "I mean, if it's below one\nhalf, then chances are that you're more likely the two\nof them are just wrong, and you agree on that result.",
    "start": "2831840",
    "end": "2838170"
  },
  {
    "text": "And it turns out to reduce\nthe reliability of the system. Now, in general, you might think\nthat you can build systems out",
    "start": "2838170",
    "end": "2846170"
  },
  {
    "text": "of this basic voting idea,\nand for various reasons it turns out that this idea\nhas limited applicability",
    "start": "2846170",
    "end": "2852310"
  },
  {
    "text": "for the kinds of\nthings we want to do. And a lot of that\nstems from the fact that these are not, in\ngeneral, in computer systems.",
    "start": "2852310",
    "end": "2859649"
  },
  {
    "text": "It's very hard to design\ncomponents that are completely independent of each other. It might work out OK for certain\nhardware components where",
    "start": "2859649",
    "end": "2867430"
  },
  {
    "text": "you might do this\nvoting or other forms of spatial redundancy\nthat gives you these impressive\nreliability numbers.",
    "start": "2867430",
    "end": "2875130"
  },
  {
    "text": "But for software, this\nindependent assumption turns out to be\nreally hard to meet. And there is an approach to\nbuilding software like this.",
    "start": "2875130",
    "end": "2881230"
  },
  {
    "text": "It's called N\nversion programming. And it's still a\ntopic of research where people are trying to build\nsoftware systems out of voting.",
    "start": "2881230",
    "end": "2888681"
  },
  {
    "text": "But you have to pay a lot of\nattention and care to make sure that these software\ncomponents that are doing the same function\nare actually independent,",
    "start": "2888681",
    "end": "2896030"
  },
  {
    "text": "maybe written by\ndifferent people running on different operating\nsystems, and so on. And that turns out to be a\npretty expensive undertaking.",
    "start": "2896030",
    "end": "2903800"
  },
  {
    "text": "It's still sometimes\nnecessary if you want to build something\nhighly reliable. But because of its\ncost it's not something",
    "start": "2903800",
    "end": "2911619"
  },
  {
    "text": "that is the sort of\ncookie-cutter technique for achieving highly\nreliable software systems.",
    "start": "2911620",
    "end": "2916862"
  },
  {
    "text": "And so what we're going to\nsee starting for next time is a somewhat different\napproach for achieving software reliability that\ndoesn't rely on voting, which",
    "start": "2916862",
    "end": "2923742"
  },
  {
    "text": "won't actually achieve the\nsame degree of reliability as these kinds of\nsystems, but will achieve",
    "start": "2923742",
    "end": "2929641"
  },
  {
    "text": "a different kind of\nreliability that we'll talk about starting from next time.",
    "start": "2929642",
    "end": "2934310"
  }
]