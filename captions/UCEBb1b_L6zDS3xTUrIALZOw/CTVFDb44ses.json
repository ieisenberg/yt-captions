[
  {
    "start": "0",
    "end": "1284000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6090"
  },
  {
    "text": "continue to offer high-quality\neducational resources for free. To make a donation or to\nview additional materials",
    "start": "6090",
    "end": "12720"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu.",
    "start": "12720",
    "end": "17880"
  },
  {
    "start": "17880",
    "end": "25150"
  },
  {
    "text": "OLIVER DE WECK: So let me start. Session 3 is about system\nmodeling languages.",
    "start": "25150",
    "end": "31080"
  },
  {
    "text": "But before I start, I'd like\nto remind you that A1 is due",
    "start": "31080",
    "end": "37950"
  },
  {
    "text": "today. The first assignment\nis due today. And I think neither [? Yuanna ?]\nor I or [INAUDIBLE],,",
    "start": "37950",
    "end": "46620"
  },
  {
    "text": "did you get a lot of\nquestions about A1? ",
    "start": "46620",
    "end": "53870"
  },
  {
    "text": "GUEST SPEAKER: No. I didn't get any questions. OLIVER DE WECK: Yeah. So we didn't get many questions. So I interpret\nthat as a positive,",
    "start": "53870",
    "end": "62060"
  },
  {
    "text": "but I guess we'll find out. Everybody submitted. Well, so we're hoping to have\nthese graded in about a week,",
    "start": "62060",
    "end": "72220"
  },
  {
    "text": "give you feedback. And we'll also post\na master solution. And A2 is out right now.",
    "start": "72220",
    "end": "80170"
  },
  {
    "text": "And the other good news is\nthere is no new assignment today that's being-- the next A3 is going\nto go out next week.",
    "start": "80170",
    "end": "86700"
  },
  {
    "text": " Any questions about A1?",
    "start": "86700",
    "end": "91890"
  },
  {
    "text": "Was there something\nthat was particularly difficult or confusing?",
    "start": "91890",
    "end": "97120"
  },
  {
    "text": "Or was it straightforward? Anybody want to comment on A1? ",
    "start": "97120",
    "end": "104774"
  },
  {
    "text": "Wow. Sam. Do you want me--\npush the button.",
    "start": "104774",
    "end": "112082"
  },
  {
    "text": "GUEST SPEAKER: No,\nour team thought it was fairly clear\non what we had to do based on the lectures.",
    "start": "112082",
    "end": "117809"
  },
  {
    "text": "OLIVER DE WECK: OK. GUEST SPEAKER: We\ndidn't have any trouble. OLIVER DE WECK: Good. All right. Well, let's keep going then.",
    "start": "117809",
    "end": "125329"
  },
  {
    "text": "So the V-Model is our\nroadmap for the class. We're starting to\nfill in the V. We're",
    "start": "125330",
    "end": "130758"
  },
  {
    "text": "still in the upper left corner. And today's lecture is\nactually a little different. It's sort of in the center\nof the V, system modeling",
    "start": "130759",
    "end": "138410"
  },
  {
    "text": "languages, as a\nprecondition or precursor to what we've been calling MBSE,\nModel-Based System Engineering.",
    "start": "138410",
    "end": "146600"
  },
  {
    "text": "So what I'd like to cover\ntoday is why do we need--",
    "start": "146600",
    "end": "152490"
  },
  {
    "text": "or why have these system\nmodeling languages emerged, particularly, what do we\nmean by ontology, semantics,",
    "start": "152490",
    "end": "159320"
  },
  {
    "text": "and syntax? And then we're going\nto give you a-- I would characterize\nthis as a sampler",
    "start": "159320",
    "end": "166220"
  },
  {
    "text": "of three different\nsystem modeling languages that\nhave emerged really within the last 10, 15 years.",
    "start": "166220",
    "end": "173910"
  },
  {
    "text": "The first one is called OPM,\nObject Process Methodology. The second one is called SySML,\nSystem Modeling Language.",
    "start": "173910",
    "end": "182269"
  },
  {
    "text": "And then the third one\nis called Modelica. And then we'll sort of quickly\nwrap up with the question,",
    "start": "182270",
    "end": "189080"
  },
  {
    "text": "you know, what does this mean\nnow for system engineering today, and tomorrow\nin the future?",
    "start": "189080",
    "end": "195459"
  },
  {
    "text": "So I'd like to motivate\nthis with a little exercise. So you remember Mr.\nSticky from last time?",
    "start": "195460",
    "end": "202120"
  },
  {
    "text": "You came up with\nsome requirements. So it's kind of the simplest\nsystem I could think of here.",
    "start": "202120",
    "end": "207430"
  },
  {
    "text": "So what we'd like to do is\nhave you work in pairs again. And the assignment here\nis to describe this system",
    "start": "207430",
    "end": "218690"
  },
  {
    "text": "as clearly as you can,\nprovide a description. So last time the assignment\nwas right, a requirement,",
    "start": "218690",
    "end": "226390"
  },
  {
    "text": "come up with some requirements\nthat led to this design. But today I would\nlike you to describe",
    "start": "226390",
    "end": "232930"
  },
  {
    "text": "what the system is,\nhow it functions, and so forth, as\nclearly as you can.",
    "start": "232930",
    "end": "237970"
  },
  {
    "text": "And I would like\nyou to do this-- so hopefully you're on the\nWebex, logged into the Webex.",
    "start": "237970",
    "end": "244450"
  },
  {
    "text": "I would like you to do\nthis in teams of two. And as you're\ndoing this, I don't know if you've noticed but\non the Webex there's actually",
    "start": "244450",
    "end": "251680"
  },
  {
    "text": "a Notepad feature.",
    "start": "251680",
    "end": "258160"
  },
  {
    "text": "Where is it? ",
    "start": "258160",
    "end": "270940"
  },
  {
    "text": "Tell me. Left? Right? AUDIENCE: [INAUDIBLE]",
    "start": "270940",
    "end": "283270"
  },
  {
    "text": "OLIVER DE WECK: Oh, I see. So I can't share and use the\nNotepad at the same time.",
    "start": "283270",
    "end": "289310"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] OLIVER DE WECK: Annotate.",
    "start": "289310",
    "end": "294788"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] OLIVER DE WECK: Yeah, yeah. AUDIENCE: [INAUDIBLE]",
    "start": "294788",
    "end": "301980"
  },
  {
    "text": "OLIVER DE WECK: Stop sharing. But then they can't see it.",
    "start": "301980",
    "end": "307870"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] OLIVER DE WECK:\nCan they see this? AUDIENCE: [INAUDIBLE]",
    "start": "307870",
    "end": "313832"
  },
  {
    "text": "OLIVER DE WECK: So\nyou can write text. ",
    "start": "313832",
    "end": "332760"
  },
  {
    "text": "You can draw shapes. ",
    "start": "332760",
    "end": "341990"
  },
  {
    "text": "So the reason I want you to\ndo this on the whiteboard is such that we can\nthen go around and look",
    "start": "341990",
    "end": "348620"
  },
  {
    "text": "at some examples. So the assignment is take five\nminutes, turn to your partner",
    "start": "348620",
    "end": "356430"
  },
  {
    "text": "and try to describe this system. And then we'll go around\nand look at some--",
    "start": "356430",
    "end": "362180"
  },
  {
    "text": "we'll sample people's\ndescriptions. Go for it.",
    "start": "362180",
    "end": "368271"
  },
  {
    "text": "All right. So keep working\non the assignment but do it locally\non your computer,",
    "start": "368271",
    "end": "374080"
  },
  {
    "text": "not on the whiteboard. And then we'll sort of discuss\nit and share it and maybe",
    "start": "374080",
    "end": "381190"
  },
  {
    "text": "not use the\nwhiteboard, because I didn't realize there's only one\nwhiteboard that we all share. I thought that you have\nindividually the whiteboard",
    "start": "381190",
    "end": "388420"
  },
  {
    "text": "and then you can sort of pass\nit on to different people. So if you do it locally\non your machine,",
    "start": "388420",
    "end": "395210"
  },
  {
    "text": "then we can share the\nscreen so it'll work. So do it in do it in PowerPoint,\nor Word, or sketchpad,",
    "start": "395210",
    "end": "402850"
  },
  {
    "text": "or anything you want. Sorry about that. ",
    "start": "402850",
    "end": "410950"
  },
  {
    "text": "All right. So let's do this. We're going to sort\nof go back and forth between here and EPFL.",
    "start": "410950",
    "end": "418169"
  },
  {
    "text": "Let's start maybe\nover here with Narek. Are you ready?",
    "start": "418170",
    "end": "424430"
  },
  {
    "text": "So I'm going to\ngive you the ball, and then you can\nsort of explain how",
    "start": "424430",
    "end": "430480"
  },
  {
    "text": "you guys describe the system. NAREK SHOUGARIAN: So\nwhat we decided to do",
    "start": "430480",
    "end": "436090"
  },
  {
    "text": "was identify the primary\nfunction of Mr. Sticky.",
    "start": "436090",
    "end": "443470"
  },
  {
    "text": "So the primary function is\nto trap the fly, we thought.",
    "start": "443470",
    "end": "448510"
  },
  {
    "text": "This is enabled by a\ncouple of other functions that are sort of at a\nlower layer of abstraction.",
    "start": "448510",
    "end": "453560"
  },
  {
    "text": "It's attracting the fly,\nimmobilizing the fly, transporting the\nobjects to where",
    "start": "453560",
    "end": "459010"
  },
  {
    "text": "you need to immobilize the\nfly, and deploying Mr. Sticky. And we mapped this\nto the physical forms",
    "start": "459010",
    "end": "465790"
  },
  {
    "text": "that enable the function. So the canister, the\nphysical form of the canister is helping with the\ntransporting function.",
    "start": "465790",
    "end": "471880"
  },
  {
    "text": "The sticky tape is helping\nwith the immobilizing function. The scented\nmaterial, we thought, would be helping for\nthe attracting function.",
    "start": "471880",
    "end": "478690"
  },
  {
    "text": "And the hook maybe on top\nthat you use to hang it would help with the deploying. OLIVER DE WECK: OK.",
    "start": "478690",
    "end": "483860"
  },
  {
    "text": "Good. So nice function\nform separation. And you used primarily text,\nhuman language to describe it.",
    "start": "483860",
    "end": "491830"
  },
  {
    "text": "So let's see, at EPFL,\nwho would like to share? ",
    "start": "491830",
    "end": "498703"
  },
  {
    "text": "And we'll give you the ball.  AUDIENCE: OK. We can try maybe.",
    "start": "498704",
    "end": "505610"
  },
  {
    "text": "OLIVER DE WECK: Who is speaking? AUDIENCE: Maxim. OLIVER DE WECK: Maxim, OK. Can we give the ball to Maxim?",
    "start": "505610",
    "end": "512550"
  },
  {
    "text": "AUDIENCE: Yes. Do you see something? OLIVER DE WECK: Yeah, its good. AUDIENCE: Oh, perfect. So we draw like the same system\nwhen deployed and undeployed.",
    "start": "512550",
    "end": "522710"
  },
  {
    "text": "So we begin with a container\ncontaining basically the sticky setup rolled.",
    "start": "522710",
    "end": "527939"
  },
  {
    "text": "Then when unrolled,\nwe have the container that should be linked to the\nsticky setup, the [INAUDIBLE]",
    "start": "527940",
    "end": "534056"
  },
  {
    "text": "whatever. And then we have like an\nexternal input from the insects",
    "start": "534056",
    "end": "539670"
  },
  {
    "text": "that were, that come to-- we it sticked onto the-- ",
    "start": "539670",
    "end": "547076"
  },
  {
    "text": "OLIVER DE WECK: Yeah, go ahead AUDIENCE: OK.",
    "start": "547076",
    "end": "552730"
  },
  {
    "text": "So that's all. OLIVER DE WECK:\nSo I'll note here that you guys used graphics.",
    "start": "552730",
    "end": "559250"
  },
  {
    "text": "You used some kind of\ngraphical language. And at the highest\nlevel, you have-- it's like a state\ndiagram, rolled, unrolled.",
    "start": "559250",
    "end": "566360"
  },
  {
    "text": "So you showed the system\nin two different states. Very nice. Somebody else here\non the MIT side,",
    "start": "566360",
    "end": "572750"
  },
  {
    "text": "and then we'll go\nback one more time. Who would like to share here? Lucille?",
    "start": "572750",
    "end": "578009"
  },
  {
    "text": "OK. So let's-- AUDIENCE: So we did a diagram\nshowing the use of Mr. Sticky.",
    "start": "578010",
    "end": "588580"
  },
  {
    "text": "So we have a user\nbecause Mr. Sticky has to be rolled and\nunrolled-- well, unrolled.",
    "start": "588580",
    "end": "594330"
  },
  {
    "text": "The user installs or\ndisposes of Mr. Sticky. The flies are attracted to-- or\nMr. Sticky attracts the flies,",
    "start": "594330",
    "end": "602500"
  },
  {
    "text": "and the flies stick\nto Mr. Sticky. And then we did\ncompose Mr. Sticky into the different\ncomponents that",
    "start": "602500",
    "end": "608890"
  },
  {
    "text": "are below at a lower level. And yeah, so it's basically at\na higher level of use diagram.",
    "start": "608890",
    "end": "614709"
  },
  {
    "text": "OLIVER DE WECK: OK. So here we have, again,\na graphical description. The states are sort of implied.",
    "start": "614710",
    "end": "620890"
  },
  {
    "text": "But you're focusing on\ndecomposition, the elements. Very nice.",
    "start": "620890",
    "end": "626950"
  },
  {
    "text": "Anybody else at EPFL? Did anybody just write a\nparagraph of text, or more",
    "start": "626950",
    "end": "632215"
  },
  {
    "text": "of, like, sentences?  AUDIENCE: [INAUDIBLE]",
    "start": "632215",
    "end": "639670"
  },
  {
    "text": "OLIVER DE WECK: At EPFL,\nwho wants to share? ",
    "start": "639670",
    "end": "644810"
  },
  {
    "text": "AUDIENCE: Chris here. OLIVER DE WECK: Chris, OK. AUDIENCE: So we\ndidn't write the text. The text seems a bit heavy\nto convey a description",
    "start": "644810",
    "end": "655150"
  },
  {
    "text": "in efficient terms. What we prefer to do is\ndecompose in elements",
    "start": "655150",
    "end": "661120"
  },
  {
    "text": "and for each element\ngive some properties.",
    "start": "661120",
    "end": "669680"
  },
  {
    "text": "OLIVER DE WECK: OK. And did you do this\nin the form of a list, or in the form of a table?",
    "start": "669680",
    "end": "675790"
  },
  {
    "text": "Or how did you\nactually describe it? AUDIENCE: So wait. I'm trying to share the screen.",
    "start": "675790",
    "end": "681860"
  },
  {
    "text": "OLIVER DE WECK: OK. AUDIENCE: All right. So we just worked on\nthe first half here. We have the band.",
    "start": "681860",
    "end": "688030"
  },
  {
    "text": "And we give here properties. Those that have to be made\nof paper or soft material",
    "start": "688030",
    "end": "693180"
  },
  {
    "text": "has to be 1 to 1.5 meters\nlong, 3 to 5 centimeters large.",
    "start": "693180",
    "end": "700720"
  },
  {
    "text": "It needs to have a coating which\nitself is a sticky material,",
    "start": "700720",
    "end": "706319"
  },
  {
    "text": "and be centered in\norder to attract flies. It needs to have visible color. And then, well, the other part\nhere, which I'm highlighting,",
    "start": "706320",
    "end": "717959"
  },
  {
    "text": "would be related to\nthe packaging, so",
    "start": "717960",
    "end": "724100"
  },
  {
    "text": "a self-sealing linear container\nwith a single-use opening, including a hanger.",
    "start": "724100",
    "end": "730820"
  },
  {
    "text": "We'd possibly give\nbranding on the packaging and, well, the\nnon-toxic material",
    "start": "730820",
    "end": "736620"
  },
  {
    "text": "would refer to the\nsticky material. OLIVER DE WECK: Good, good.",
    "start": "736620",
    "end": "741810"
  },
  {
    "text": "Thank you very much. This is great. So what you showed,\nthat's more like a list.",
    "start": "741810",
    "end": "746880"
  },
  {
    "text": "And I would\ndescribe-- this looks like what I would call\na bill of materials. It's essentially a list\nof the primary elements",
    "start": "746880",
    "end": "755970"
  },
  {
    "text": "of form of the system. But there are some attributes\nthat are associated.",
    "start": "755970",
    "end": "761470"
  },
  {
    "text": "So this is a list format in\nthe form of a bill of materials",
    "start": "761470",
    "end": "766529"
  },
  {
    "text": "with attributes attached. So thank you very much. That's great. So I'm going to\nshare here again.",
    "start": "766530",
    "end": "774720"
  },
  {
    "text": "And you're probably\nwondering what the heck? Why did we do this?",
    "start": "774720",
    "end": "781149"
  },
  {
    "text": "Why did we do this exercise? And that's the point\nI want to make next.",
    "start": "781150",
    "end": "790449"
  },
  {
    "text": "So here's a very simple system. And we have four\nexamples of descriptions that were quite different.",
    "start": "790450",
    "end": "797470"
  },
  {
    "text": "And of course, if\nyou had more time, they'd become more complete. But they would be\nreally different.",
    "start": "797470",
    "end": "803170"
  },
  {
    "text": "So this is\nfundamentally the issue that we've been\nfacing in systems",
    "start": "803170",
    "end": "808690"
  },
  {
    "text": "engineering for a long time. The means for describing\nour artifacts, whether it's something\nas simple as a Mr.",
    "start": "808690",
    "end": "815230"
  },
  {
    "text": "Sticky, or an airplane,\nor a spacecraft, or a medical device,\nor even a service,",
    "start": "815230",
    "end": "821440"
  },
  {
    "text": "how would we describe it? Well, first of all,\nnatural language, the human natural language.",
    "start": "821440",
    "end": "826670"
  },
  {
    "text": "And as we know, the human\nnatural language is very rich. There's very different\nways in which",
    "start": "826670",
    "end": "833140"
  },
  {
    "text": "we can express, essentially,\nthe same facts, the same things. That's a wonderful thing if\nyou're a poet or a writer.",
    "start": "833140",
    "end": "841760"
  },
  {
    "text": "But it makes system\nengineering challenging, because it gets\nconfusing when we're",
    "start": "841760",
    "end": "848269"
  },
  {
    "text": "describing the same thing\nin very different ways. Or graphical, so\nwe saw some boxes,",
    "start": "848270",
    "end": "854210"
  },
  {
    "text": "and we saw some great\nexamples, sketches, drawings. So fundamentally, the\nway we describe systems--",
    "start": "854210",
    "end": "862339"
  },
  {
    "text": "and this gets to the left half\nand right half of the brain-- is using language, words,\nsentences, lists, or graphical.",
    "start": "862340",
    "end": "871399"
  },
  {
    "text": "Those are the two fundamental\nways of describing systems. And then we put all these\ndescriptions together",
    "start": "871400",
    "end": "878270"
  },
  {
    "text": "in what we've been\ncalling documents. We aggregate this in documents. So examples of documents would\nbe a requirements document.",
    "start": "878270",
    "end": "886880"
  },
  {
    "text": "That's what, essentially,\nyou're doing in Assignment 2. Or a drawing package,\neven if it's in CAD,",
    "start": "886880",
    "end": "895129"
  },
  {
    "text": "it's still essentially\na document. So typically in system\nengineering all of this",
    "start": "895130",
    "end": "901670"
  },
  {
    "text": "gets assembled into what we call\na TDP, Technical Data Package. And fundamentally, when\nyou're designing a new system,",
    "start": "901670",
    "end": "909620"
  },
  {
    "text": "you're producing\na technical data package that has software\ndrawings, descriptions.",
    "start": "909620",
    "end": "916340"
  },
  {
    "text": "And that's the deliverable\nfrom the design process, is this TDP, Technical\nData Package.",
    "start": "916340",
    "end": "922440"
  },
  {
    "text": "And from that, you should then\nbe able to build and operate the system with as few errors,\nmistakes, misunderstandings",
    "start": "922440",
    "end": "929449"
  },
  {
    "text": "as possible. And fundamentally,\nas our systems have been getting more\nand more complex--",
    "start": "929450",
    "end": "935780"
  },
  {
    "text": "we're now talking\nabout the systems that need the three, four,\nfive layers of decomposition--",
    "start": "935780",
    "end": "942050"
  },
  {
    "text": "it's very easy to have\nerrors, omissions, different interpretations\nof this information.",
    "start": "942050",
    "end": "948780"
  },
  {
    "text": "So that's fundamentally--\nbut there are advantages. I don't want to say\nit's categorically",
    "start": "948780",
    "end": "956540"
  },
  {
    "text": "bad to use natural\nlanguage and graphics. They're definitely an advantage,\nfamiliarity to the creator",
    "start": "956540",
    "end": "963080"
  },
  {
    "text": "of the description. So it's easy. It's comfortable. It feels familiar. And also it's not\nconfining, so you",
    "start": "963080",
    "end": "969500"
  },
  {
    "text": "can be quite creative\nby creating descriptions in this way. But the list of\ndisadvantages is quite",
    "start": "969500",
    "end": "976670"
  },
  {
    "text": "long for allowing an\narbitrary description, room for ambiguous\ninterpretations and errors.",
    "start": "976670",
    "end": "983930"
  },
  {
    "text": "It's quite difficult to update. So if you make a change\nin one description, that change will\nnot automatically",
    "start": "983930",
    "end": "990020"
  },
  {
    "text": "propagate to the\nother descriptions. Handing off these descriptions\nfrom one lifecycle phase",
    "start": "990020",
    "end": "995900"
  },
  {
    "text": "to another, there's\ndiscontinuities in these hand-offs. Uneven level of abstraction,\nso what I mean by that is you",
    "start": "995900",
    "end": "1004300"
  },
  {
    "text": "may describe one part of the\nsystem, and very detailed. So the last example\nwe saw with the list,",
    "start": "1004300",
    "end": "1012945"
  },
  {
    "text": "with the bill of\nmaterials, there was quite a bit of\ndetail there on the scent and the attributes of the tape.",
    "start": "1012945",
    "end": "1019320"
  },
  {
    "text": "But one of the other--\nat least a couple of the other descriptions\ndidn't have that level of detail when it came to the tape.",
    "start": "1019320",
    "end": "1025750"
  },
  {
    "text": "So the level of\nabstraction could be quite different in the\ndifferent ways to describe it.",
    "start": "1025750",
    "end": "1033010"
  },
  {
    "text": "And then for a\ncomplex system, you can imagine that the amount\nof volume of information",
    "start": "1033010",
    "end": "1039099"
  },
  {
    "text": "grows a lot. And so you can walk into any\nprogram manager and systems",
    "start": "1039099",
    "end": "1044380"
  },
  {
    "text": "engineers office\nand see bookshelves full of binders, dozens\nand dozens of binders",
    "start": "1044380",
    "end": "1050500"
  },
  {
    "text": "with documents, thousands\nand thousands of pages. And many of them are never read.",
    "start": "1050500",
    "end": "1056380"
  },
  {
    "text": "That's the big issue. So that's been the\nkind of way in which we've been doing system\nengineering traditionally.",
    "start": "1056380",
    "end": "1064330"
  },
  {
    "text": "So the idea here\nis that in order to mitigate-- yes, Justice.",
    "start": "1064330",
    "end": "1071893"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]",
    "start": "1071893",
    "end": "1078758"
  },
  {
    "text": "OLIVER DE WECK: Phase\nA, conceptual design. Phase B, preliminary\nand detail design.",
    "start": "1078759",
    "end": "1083760"
  },
  {
    "text": "Phase C is testing and launch. Phase E is operation.",
    "start": "1083760",
    "end": "1089460"
  },
  {
    "text": "So usually not the same\npeople do conceptual design,",
    "start": "1089460",
    "end": "1094590"
  },
  {
    "text": "preliminary design testing. So all the technical\ndata package, these artifacts have to be\ntransferred and handed off",
    "start": "1094590",
    "end": "1101940"
  },
  {
    "text": "to new people who then\nwork on the next phase. That's what I mean by hand-offs.",
    "start": "1101940",
    "end": "1107850"
  },
  {
    "text": "And, yeah, so the\nidea is in order",
    "start": "1107850",
    "end": "1113380"
  },
  {
    "text": "to mitigate some of\nthese disadvantages of natural language and\ngraphical description,",
    "start": "1113380",
    "end": "1120960"
  },
  {
    "text": "there has been, and\nthis has been recognized for a long time, a need to\nbe more precise, perhaps more",
    "start": "1120960",
    "end": "1127710"
  },
  {
    "text": "confining, but to\ncreate languages that allow us to describe\nsystems much more precisely.",
    "start": "1127710",
    "end": "1136120"
  },
  {
    "text": "And so I'll mention a\ncouple of the past efforts. And you can read about these.",
    "start": "1136120",
    "end": "1142090"
  },
  {
    "text": "Each of these has-- so I'll mention bond\ngraphs first, 1960. This was actually\ninvented here at MIT",
    "start": "1142090",
    "end": "1149800"
  },
  {
    "text": "by a professor in\nmechanical engineering. His name was Henry Paynter.",
    "start": "1149800",
    "end": "1155320"
  },
  {
    "text": "Professor Paynter\ncreated bond graphs. You can think of bond\ngraphs as block diagrams",
    "start": "1155320",
    "end": "1160840"
  },
  {
    "text": "where different blocks have\nports or interfaces where information, material,\nenergy flows in and out.",
    "start": "1160840",
    "end": "1168160"
  },
  {
    "text": "And you can compose a\nsystem out of these blocks. These bond graphs\nare essentially--",
    "start": "1168160",
    "end": "1173860"
  },
  {
    "text": "and Narik will talk\nabout Modelica, which is sort of a modern\nversion of bond graphs.",
    "start": "1173860",
    "end": "1180970"
  },
  {
    "text": "It has other features, too. But this has been\nsort of one attempt.",
    "start": "1180970",
    "end": "1186429"
  },
  {
    "text": "Another one that's very\nwell-known is IDEF, I-D-E-F, about 20 years later.",
    "start": "1186430",
    "end": "1192470"
  },
  {
    "text": "This was created by the Air\nForce, the US Air Force. And this is essentially\na description",
    "start": "1192470",
    "end": "1198640"
  },
  {
    "text": "of systems that's very\nfunctionally oriented. So it shows you what\nfunctions are involved. And we saw one of\nthe descriptions",
    "start": "1198640",
    "end": "1205000"
  },
  {
    "text": "was very functionally\noriented, and how the functions of the system\nrelate to each other.",
    "start": "1205000",
    "end": "1212660"
  },
  {
    "text": "But generally these\nsystem languages have not fully been deployed.",
    "start": "1212660",
    "end": "1219070"
  },
  {
    "text": "Some organizations use\nthem, others don't use them. And the main reason\nfor that is twofold. First of all, some of these\nlanguages were incomplete.",
    "start": "1219070",
    "end": "1227750"
  },
  {
    "text": "They would focus only on\none aspect, like functions or the block nature of the\nsystem, the block diagrams.",
    "start": "1227750",
    "end": "1234940"
  },
  {
    "text": "And a lot of them\nwere not executable. So they would be graphical,\nbut you couldn't actually",
    "start": "1234940",
    "end": "1240580"
  },
  {
    "text": "simulate and actually check\nwhether that description was complete or accurate.",
    "start": "1240580",
    "end": "1245800"
  },
  {
    "text": "So since then-- and\nthe other thing, of course, important\nis domain agnostic.",
    "start": "1245800",
    "end": "1252100"
  },
  {
    "text": "So what I mean by this is that\nthe system modeling language should be applicable for any\nkind of cyber physical system.",
    "start": "1252100",
    "end": "1259360"
  },
  {
    "text": "Again, if you're designing\na spacecraft, an aircraft, medical device, any\nkind of product,",
    "start": "1259360",
    "end": "1266409"
  },
  {
    "text": "the language shouldn't\nhave to be adapted. The language sort of covers\nall these applications. That's the idea.",
    "start": "1266410",
    "end": "1272500"
  },
  {
    "text": "So whatever language it is that\nyou're using or developing,",
    "start": "1272500",
    "end": "1277780"
  },
  {
    "text": "it has to have\nthese three things. Any language has\nthese three things. So the first is ontology.",
    "start": "1277780",
    "end": "1284230"
  },
  {
    "start": "1284000",
    "end": "1471000"
  },
  {
    "text": "And I reference here\nthe Wikipedia articles on these things. Some of my colleagues-- in\nacademia it's a big debate",
    "start": "1284230",
    "end": "1291010"
  },
  {
    "text": "is Wikipedia a legitimate source\nof information or is it not? My position on\nthis is that it is.",
    "start": "1291010",
    "end": "1297040"
  },
  {
    "text": "I think Wikipedia is\ndefinitely not perfect, depending on what topic\nyou're looking at,",
    "start": "1297040",
    "end": "1302620"
  },
  {
    "text": "but it's a sort of\nself-correcting system. So I actually go to Wikipedia,\nand then there's references.",
    "start": "1302620",
    "end": "1308799"
  },
  {
    "text": "And you can dive deeper. So I give you the\nWikipedia links here for these three things. First, ontology.",
    "start": "1308800",
    "end": "1315110"
  },
  {
    "text": "So ontology is a\nvery fancy word. What ontology actually is--",
    "start": "1315110",
    "end": "1321430"
  },
  {
    "text": "Mark, why don't\nyou come up here? You're an instructor today. Ontology, fundamentally,\nis describing the entities",
    "start": "1321430",
    "end": "1331510"
  },
  {
    "text": "that are allowed to exist in\nthe language, subjects, nouns, adverbs, what are the objects,\nthe entities, that can exist.",
    "start": "1331510",
    "end": "1341870"
  },
  {
    "text": "So it's a kind of\nvery abstract thing. But it's essentially the\nlibrary of words and objects",
    "start": "1341870",
    "end": "1348310"
  },
  {
    "text": "that are allowed to\nexist in that language and then how these entities\ncan be grouped perhaps",
    "start": "1348310",
    "end": "1355240"
  },
  {
    "text": "in a hierarchy and subdivided. So it essentially\nconstrains the universe of things you can\ndescribe in that language.",
    "start": "1355240",
    "end": "1362430"
  },
  {
    "text": "The shorter, the smaller\nyour ontology is, the more confined the language.",
    "start": "1362430",
    "end": "1368740"
  },
  {
    "text": "Semantics. Semantics is basically a branch\nof science of philosophy, which",
    "start": "1368740",
    "end": "1377799"
  },
  {
    "text": "is fundamentally assigning\nmeaning to those objects that are described in the ontology.",
    "start": "1377800",
    "end": "1383380"
  },
  {
    "text": "And so the way\nthat we say this is that it's the relationship\nbetween the signifiers,",
    "start": "1383380",
    "end": "1390360"
  },
  {
    "text": "so the signifiers are\nwords, letters, symbols, graphical symbols.",
    "start": "1390360",
    "end": "1396070"
  },
  {
    "text": "So how do we describe a\nresistor, for example, in electrical engineering?",
    "start": "1396070",
    "end": "1401080"
  },
  {
    "text": "A squiggly line. It's the zigzag line. Well, if you don't know\nelectrical engineering,",
    "start": "1401080",
    "end": "1407140"
  },
  {
    "text": "you just see a squiggly line. It's meaningless to you. But if you know that\nsemantically that",
    "start": "1407140",
    "end": "1413710"
  },
  {
    "text": "means that's a resistor,\nthat's the symbol for resistor, that's what we\nmean by semantics.",
    "start": "1413710",
    "end": "1418929"
  },
  {
    "text": "And then the third is syntax. What is syntax? It's the set of rules, the set\nof principles and processes",
    "start": "1418930",
    "end": "1426340"
  },
  {
    "text": "by which the objects or the\nentities in the ontology",
    "start": "1426340",
    "end": "1431710"
  },
  {
    "text": "can be combined to\nbuild up higher level information, like sentences,\nparagraphs, and so forth.",
    "start": "1431710",
    "end": "1439460"
  },
  {
    "text": "And so that's essentially\nthe construction rules for the language. So every language has\nthese three things.",
    "start": "1439460",
    "end": "1447580"
  },
  {
    "text": "So any questions\nabout this before we move into our first language?",
    "start": "1447580",
    "end": "1452610"
  },
  {
    "text": "So we're going to give three\nexamples of system modeling languages, and you'll see the\nsimilarities and differences.",
    "start": "1452610",
    "end": "1458090"
  },
  {
    "text": "But as you see these\nlanguages, keep in mind they all have ontology,\nsemantics, and syntax.",
    "start": "1458090",
    "end": "1465990"
  },
  {
    "text": "Any questions about that?  So OPM.",
    "start": "1465990",
    "end": "1472490"
  },
  {
    "start": "1471000",
    "end": "2435000"
  },
  {
    "text": "Let me describe to you OPM. This is one of the\nyounger languages.",
    "start": "1472490",
    "end": "1478159"
  },
  {
    "text": "And so OPM stands for\nObject Process Methodology. And it was created by\nProfessor Dov Dori at Technion,",
    "start": "1478160",
    "end": "1487970"
  },
  {
    "text": "a colleague of mine. Dov is essentially a computer\nscientist by training. And you'll see the\nheritage here of OPM.",
    "start": "1487970",
    "end": "1496340"
  },
  {
    "text": "And the big news\nhere about OPM is OPM is not that well-known yet.",
    "start": "1496340",
    "end": "1502580"
  },
  {
    "text": "If you ask around, not\ntoo many people know OPM. But I predict that\nin the next decade",
    "start": "1502580",
    "end": "1509059"
  },
  {
    "text": "that will change very quickly. And one of the reasons\nis that OPM was just now adopted as an ISO standard.",
    "start": "1509060",
    "end": "1517590"
  },
  {
    "text": "And if you know ISO, the\nInternational Standards Organization, they're\nlocated in Geneva, it's a big deal to\nbecome an ISO standard.",
    "start": "1517590",
    "end": "1524910"
  },
  {
    "text": "It took like five years,\nthe whole process, with committees and reviews. And so the ISO\nstandard is actually--",
    "start": "1524910",
    "end": "1532279"
  },
  {
    "text": "OPM was adopted\nas an ISO standard as a means to describe and\ndevelop other standards.",
    "start": "1532280",
    "end": "1539630"
  },
  {
    "text": "So it's kind of a metalanguage\nbecause, as you can imagine, when you read different\nstandards which, by the way,",
    "start": "1539630",
    "end": "1545870"
  },
  {
    "text": "have a lot of\ninfluence, they're also written in natural\nlanguage and graphics and lots of inconsistencies.",
    "start": "1545870",
    "end": "1552210"
  },
  {
    "text": "So the idea is that future\nISO standards should be written using OPM such that\nthey're clear and consistent,",
    "start": "1552210",
    "end": "1559310"
  },
  {
    "text": "and so forth. So the history here is\nthat if we go back further,",
    "start": "1559310",
    "end": "1567170"
  },
  {
    "text": "UML, which is Unified Modeling\nLanguage which I'm not going to talk about\ntoday, is a software--",
    "start": "1567170",
    "end": "1572809"
  },
  {
    "text": "this is a language that\nwas developed primarily for software engineering\nto consistently describe",
    "start": "1572810",
    "end": "1578780"
  },
  {
    "text": "use cases, to\nconsistently describe activity and flows in software,\nthe structure of software.",
    "start": "1578780",
    "end": "1587419"
  },
  {
    "text": "But it's really\nsoftware centric. So from UML 2.0, we then\nsort of branched off",
    "start": "1587420",
    "end": "1592970"
  },
  {
    "text": "into SysML, which Mark\nChodas, who just joined us will talk about, and then OPM.",
    "start": "1592970",
    "end": "1601550"
  },
  {
    "text": "So these are sort of\nderivatives of UML. And there's a book, it's not\none of the mandatory books",
    "start": "1601550",
    "end": "1607250"
  },
  {
    "text": "for this class, OPM 2002. If you're really\ninterested in OPM, I recommend you\ninvest in that book.",
    "start": "1607250",
    "end": "1614420"
  },
  {
    "text": "It's really very well written. So let me give you an example\nof how OPM can be used.",
    "start": "1614420",
    "end": "1623990"
  },
  {
    "text": "So like we said, typical\nproduct representations are sketches, engineering\ndrawings, or UML diagrams",
    "start": "1623990",
    "end": "1629659"
  },
  {
    "text": "and software, but the need\nfor a unified representation.",
    "start": "1629660",
    "end": "1634880"
  },
  {
    "text": "And fundamentally,\nwe have functions and then we have objects,\nform and function, in systems.",
    "start": "1634880",
    "end": "1643190"
  },
  {
    "text": "And so what we would like to\ndo, and the premise of OPM, is that we can show everything\nin one diagram type,",
    "start": "1643190",
    "end": "1653120"
  },
  {
    "text": "so the functions, the functional\nattributes, the objects,",
    "start": "1653120",
    "end": "1658370"
  },
  {
    "text": "and there's different\ntypes of objects, operands, system components,\nconsumables, the attributes",
    "start": "1658370",
    "end": "1664130"
  },
  {
    "text": "of those objects,\nand then the links. And I'll show you\nthe different types of links between these\nthat exist in OPM.",
    "start": "1664130",
    "end": "1671000"
  },
  {
    "text": "So it's a generic\nmodeling language. And it has been\nsuccessfully applied to system architecting\nof complex products",
    "start": "1671000",
    "end": "1677930"
  },
  {
    "text": "in different organizations. I'm going to try to give you\na pretty simple example here, which is a refrigerator.",
    "start": "1677930",
    "end": "1683820"
  },
  {
    "text": "So we're going to\nlook at a small kind of household-level refrigerator\nthrough the eyes of OPM.",
    "start": "1683820",
    "end": "1691860"
  },
  {
    "text": "All right. So here's the basic\nontology of OPM. It's very, very simple.",
    "start": "1691860",
    "end": "1698030"
  },
  {
    "text": "And that's the idea, is to have\nas few objects, as few entities",
    "start": "1698030",
    "end": "1704180"
  },
  {
    "text": "as possible in the\nlanguage to keep it simple. So the first one is\nthe idea of an object.",
    "start": "1704180",
    "end": "1711350"
  },
  {
    "text": "What is an object? Objects are drawn\nas these rectangles. Objects are defined\nas entities that",
    "start": "1711350",
    "end": "1719840"
  },
  {
    "text": "have the potential for stable,\nunconditional existence for some positive\nduration of time.",
    "start": "1719840",
    "end": "1727160"
  },
  {
    "text": "And objects have\nstates within them. So what would be an\nexample of an object",
    "start": "1727160",
    "end": "1735360"
  },
  {
    "text": "that we've talked about today? Go ahead. AUDIENCE: Maybe the sticky tape. OLIVIER DE WECK: Yeah, so\nthe sticky tape itself.",
    "start": "1735360",
    "end": "1741230"
  },
  {
    "text": "That's an object. It exists unconditionally. It's there. And what's important is it\ncould be a physical object.",
    "start": "1741230",
    "end": "1749040"
  },
  {
    "text": "So it has a physical existence. But it could also be a sort\nof informational object.",
    "start": "1749040",
    "end": "1756120"
  },
  {
    "text": "So for example, if you\nhave an idea or a vision,",
    "start": "1756120",
    "end": "1761750"
  },
  {
    "text": "that's an object, too. It's not physical in that\nsense, but it does exist as an informational object.",
    "start": "1761750",
    "end": "1769010"
  },
  {
    "text": "What are states? Let's see at EPFL. What would be an example\nof a state that's",
    "start": "1769010",
    "end": "1774500"
  },
  {
    "text": "associated with an object? ",
    "start": "1774500",
    "end": "1783770"
  },
  {
    "text": "Yeah, that's OK. Can somebody give an\nexample of a state?",
    "start": "1783770",
    "end": "1789039"
  },
  {
    "text": "AUDIENCE: Yeah. Rolled and unrolled\nfor the sticky tape. OLIVIER DE WECK:\nRolled and unrolled. Exactly.",
    "start": "1789040",
    "end": "1795310"
  },
  {
    "text": "Or furled and unfurled. So that's kind of a binary state\nthat could be halfway unrolled,",
    "start": "1795310",
    "end": "1801100"
  },
  {
    "text": "or the sticky tape is full of\nflies, or it's kind of empty.",
    "start": "1801100",
    "end": "1806830"
  },
  {
    "text": "Those would be describing the\nobject in terms of what state it is in. Exactly.",
    "start": "1806830",
    "end": "1811929"
  },
  {
    "text": "So the form is then the\nsum of all these objects. ",
    "start": "1811930",
    "end": "1817560"
  },
  {
    "text": "So that's one building block. And then processes\nare the other. So what are processes?",
    "start": "1817560",
    "end": "1823362"
  },
  {
    "text": "Oh, is there another example? Yeah, go ahead. AUDIENCE: May I ask a question? OLIVIER DE WECK: Is\nthis [INAUDIBLE]??",
    "start": "1823362",
    "end": "1828669"
  },
  {
    "text": "AUDIENCE: Yeah,\nit's [INAUDIBLE].. OLIVIER DE WECK: Go ahead. AUDIENCE: What do you mean\nby positive duration of time? OLIVIER DE WECK: Well,\nmeaning that the object",
    "start": "1828670",
    "end": "1836020"
  },
  {
    "text": "could be created. It didn't exist before. It's created, and it exists.",
    "start": "1836020",
    "end": "1841450"
  },
  {
    "text": "And then it could\nbe destroyed again. It could disappear, or\nit could be consumed.",
    "start": "1841450",
    "end": "1846520"
  },
  {
    "text": "But it means that\nthe object needs to exist for a non-zero\nperiod of time in order",
    "start": "1846520",
    "end": "1853000"
  },
  {
    "text": "for it to be called\nan object, so objects",
    "start": "1853000",
    "end": "1858980"
  },
  {
    "text": "in the world that can\nbe described with OPM, fundamentally, objects\ncan be created.",
    "start": "1858980",
    "end": "1866610"
  },
  {
    "text": "Objects can be modified,\nparticularly their states can be modified. And they can be\ndestroyed or consumed.",
    "start": "1866610",
    "end": "1874610"
  },
  {
    "text": "That's basically it. That's a complete set. Does that make sense?",
    "start": "1874610",
    "end": "1881770"
  },
  {
    "text": "So processes are--\nwhat are processes? Processes are\nreally fundamentally different from objects.",
    "start": "1881770",
    "end": "1887290"
  },
  {
    "text": "Processes are shown\nas these ellipses. And they're the patterns\nof transformation",
    "start": "1887290",
    "end": "1893740"
  },
  {
    "text": "applied to one or more objects. And processes change states. So processes, unlike objects,\ncannot exist on their own.",
    "start": "1893740",
    "end": "1902170"
  },
  {
    "text": "Processes only make sense\nif they're associated with at least one object.",
    "start": "1902170",
    "end": "1908860"
  },
  {
    "text": "So processes are essentially-- the functions that\nwe develop in systems are processes that transform\nor create, destroy,",
    "start": "1908860",
    "end": "1917500"
  },
  {
    "text": "or transform objects. So function emerges from\none or more processes.",
    "start": "1917500",
    "end": "1922909"
  },
  {
    "text": "And then we have different links\nbetween objects and processes. I'll show you two examples here.",
    "start": "1922910",
    "end": "1928130"
  },
  {
    "text": "One is the arrow\nwith a pointy head. That could be a consumption\nor production type link,",
    "start": "1928130",
    "end": "1938800"
  },
  {
    "text": "or a link with this\nlittle lollipop symbol. This is known as\nan instrument link.",
    "start": "1938800",
    "end": "1945779"
  },
  {
    "text": "And so the difference there\nis that if an object is linked to a process using an arrow,\nit means that something's",
    "start": "1945780",
    "end": "1952990"
  },
  {
    "text": "happening to that object. It's being created, or\ndestroyed, or modified. If an object is linked to a\nprocess using the lollipop",
    "start": "1952990",
    "end": "1960610"
  },
  {
    "text": "symbol, the instrument\nlink, it means that in order for that process\nto happen this object is",
    "start": "1960610",
    "end": "1967450"
  },
  {
    "text": "needed, it's an instrument. But the object itself,\nthe instrument, does not get modified in\nany way by the process.",
    "start": "1967450",
    "end": "1975200"
  },
  {
    "text": "But the process couldn't happen\nif that object didn't exist. Do you see the difference?",
    "start": "1975200",
    "end": "1981180"
  },
  {
    "text": "And so one of the really,\nI think, important things about OPM, but any\nof the languages,",
    "start": "1981180",
    "end": "1986360"
  },
  {
    "text": "is that every box,\nevery arrow, every link has precise semantics.",
    "start": "1986360",
    "end": "1992640"
  },
  {
    "text": "And usually when\nwe kind of doodle, when we just think about-- we put arrows and\nlinks between boxes,",
    "start": "1992640",
    "end": "1999000"
  },
  {
    "text": "we often don't\nreally deeply think when I put a link in here, what\ndoes that link actually mean? What does that link imply?",
    "start": "1999000",
    "end": "2005780"
  },
  {
    "text": "So when you do system modeling\nusing these languages, you become much,\nmuch more precise.",
    "start": "2005780",
    "end": "2011419"
  },
  {
    "text": "Yes, please. And would you push\nthe mic button? Yeah. Mark, go ahead. AUDIENCE: Can an object\nbe a process or a process",
    "start": "2011420",
    "end": "2018680"
  },
  {
    "text": "be an object? OLIVIER DE WECK: No. AUDIENCE: So what\nabout if you have--",
    "start": "2018680",
    "end": "2024580"
  },
  {
    "text": "I guess I'm thinking\nin terms of if there's some process for\ndoing some procedure",
    "start": "2024580",
    "end": "2030410"
  },
  {
    "text": "and like you're assembling\na satellite or whatnot. You need to modify that process. So how is that sort of\nthing represented in OPM?",
    "start": "2030410",
    "end": "2038990"
  },
  {
    "text": "OLIVIER DE WECK: The\nprocess modifies objects, but processes cannot\nmodify other processes",
    "start": "2038990",
    "end": "2045260"
  },
  {
    "text": "because processes are\nfundamentally, in OPM, acting upon the objects.",
    "start": "2045260",
    "end": "2051158"
  },
  {
    "text": "Now, processes can\ninvoke each other. So if there's a\nsequence of processes-- you have to do this assembly\nstep before this other assembly",
    "start": "2051159",
    "end": "2059388"
  },
  {
    "text": "step-- you can have what's\ncalled an invocation link. But that's a logical\ndependency between processes.",
    "start": "2059389",
    "end": "2066539"
  },
  {
    "text": "But fundamentally, the processes\nact through the objects in OPM. AUDIENCE: OK. ",
    "start": "2066540",
    "end": "2075186"
  },
  {
    "text": "OLIVIER DE WECK: So let's\ngo into some more detail. So at a high level when you\nlook at the economy, products--",
    "start": "2075186",
    "end": "2082190"
  },
  {
    "text": "yes, go ahead. AUDIENCE: I have a question. Why create another language\nand not just stick with UML?",
    "start": "2082190",
    "end": "2090788"
  },
  {
    "text": "OLIVIER DE WECK:\nSo good question.  So we'll talk about SysML,\nwhich is very similar to UML.",
    "start": "2090788",
    "end": "2099630"
  },
  {
    "text": "It's sort of generalized for\ncyber-physical systems, not just software.",
    "start": "2099630",
    "end": "2105020"
  },
  {
    "text": "So the reason that OPM\nwas created, because UML was found to be\nsomewhat too confining.",
    "start": "2105020",
    "end": "2111450"
  },
  {
    "text": "This is more general\nand also the idea of a unified representation, one\ntype of diagram and description",
    "start": "2111450",
    "end": "2120030"
  },
  {
    "text": "for any application. So it's basically a kind of a\nmore general version of UML.",
    "start": "2120030",
    "end": "2127109"
  },
  {
    "text": "But the other really\nimportant thing about OPM is that objects and\nprocesses are sort of--",
    "start": "2127110",
    "end": "2132480"
  },
  {
    "text": "the processes are often in\nobject-oriented thinking. Processes are embedded\ninside objects.",
    "start": "2132480",
    "end": "2140019"
  },
  {
    "text": "And in OPM, the\nprocesses have been emancipated to stand at\nthe same level as objects.",
    "start": "2140020",
    "end": "2147640"
  },
  {
    "text": "Those are the main differences. So let me go in a\nlittle bit more detail.",
    "start": "2147640",
    "end": "2153140"
  },
  {
    "text": "So if you think about the\neconomy in general, goods",
    "start": "2153140",
    "end": "2158339"
  },
  {
    "text": "and services, goods are objects,\nand services are processes.",
    "start": "2158340",
    "end": "2164100"
  },
  {
    "text": "So if you buy a new iPad, or a\nnew pencil, or whatever it is,",
    "start": "2164100",
    "end": "2173730"
  },
  {
    "text": "you're actually\nbuying an object. You're purchasing an object. That's obvious.",
    "start": "2173730",
    "end": "2179430"
  },
  {
    "text": "But why are you\npurchasing that object?  So let's say you're\nbuying a new tablet.",
    "start": "2179430",
    "end": "2188339"
  },
  {
    "text": "You're buying the tablet. But why are you\nbuying the tablet?",
    "start": "2188340",
    "end": "2194309"
  },
  {
    "text": "Sam, go ahead.  AUDIENCE: You're\nbuying the tablet",
    "start": "2194310",
    "end": "2200540"
  },
  {
    "text": "to perform an action for a\nprocess on something else, to do something. OLIVIER DE WECK: Right.",
    "start": "2200540",
    "end": "2205670"
  },
  {
    "text": "So what do tablets do? I mean, not stone tablets,\nbut modern tablets.",
    "start": "2205670",
    "end": "2212560"
  },
  {
    "text": "AUDIENCE: They allow you to\nwork with software, communicate. OLIVIER DE WECK: Yeah, so\nthey're information processing.",
    "start": "2212560",
    "end": "2219260"
  },
  {
    "text": "They're information-processing\ndevices. And there's an\nargument with tablets are great for\nconsuming information.",
    "start": "2219260",
    "end": "2225660"
  },
  {
    "text": "They're maybe not as good for\ngenerating new information. So fundamentally, you're\npurchasing the tablet,",
    "start": "2225660",
    "end": "2233490"
  },
  {
    "text": "which is an object,\nin order to be able to do information\nprocessing and information",
    "start": "2233490",
    "end": "2239600"
  },
  {
    "text": "consumption. So the process is then implicit. ",
    "start": "2239600",
    "end": "2245210"
  },
  {
    "text": "What's an example-- if you\npurchase a service, what would be an example of a service? ",
    "start": "2245210",
    "end": "2253306"
  },
  {
    "text": "What would be an\nexample of a service? Let's see at EPFL.",
    "start": "2253306",
    "end": "2258590"
  },
  {
    "text": "What would be an\nexample of a service that you could purchase? ",
    "start": "2258590",
    "end": "2267249"
  },
  {
    "text": "AUDIENCE: Going to the dentist. OLIVIER DE WECK:\nGoing to the dentist. Yeah, one of our\nfavorite things to do.",
    "start": "2267249",
    "end": "2273852"
  },
  {
    "text": "Have you been there recently?  AUDIENCE: Yeah, one month ago.",
    "start": "2273852",
    "end": "2280280"
  },
  {
    "text": "OLIVIER DE WECK: So\nI don't want to be-- I don't want to\nviolate your privacy, but can you share with us\nwhat happened at the dentist?",
    "start": "2280280",
    "end": "2289710"
  },
  {
    "text": "AUDIENCE: It's the\nyearly checkup. You have to check that\nthere's no hidden--",
    "start": "2289710",
    "end": "2296140"
  },
  {
    "text": "I don't know how you call\nthat in English, carries? OLIVIER DE WECK: Yeah, cavities. Yeah.",
    "start": "2296140",
    "end": "2301315"
  },
  {
    "text": "AUDIENCE: Yeah, cavities. Check that wisdom\ntooth don't mess up what you've been working\non tirelessly when",
    "start": "2301315",
    "end": "2308710"
  },
  {
    "text": "you were younger with braces. And [INAUDIBLE] get checked.",
    "start": "2308710",
    "end": "2314605"
  },
  {
    "text": "OLIVIER DE WECK: Very good. So going to the dentist. The dentist provides\na service which",
    "start": "2314605",
    "end": "2319810"
  },
  {
    "text": "is either checking\nyour teeth or filling cavities, which is a process.",
    "start": "2319810",
    "end": "2325240"
  },
  {
    "text": "And all the objects, the\nchair on which you sit, the instruments-- I guess we still use gold\nsometimes in some places--",
    "start": "2325240",
    "end": "2333130"
  },
  {
    "text": "those are objects that are\nused in the performance of the service. You see the relationship?",
    "start": "2333130",
    "end": "2339609"
  },
  {
    "text": "So objects and processes\nalways come in pairs. Thank you for that example.",
    "start": "2339610",
    "end": "2344650"
  },
  {
    "text": "So let me talk about the\nlinks in OPM briefly. So there are two types.",
    "start": "2344650",
    "end": "2349790"
  },
  {
    "text": "There's the structural links,\nwhich link objects to objects. And we typically use arrows,\nyou know, is related to",
    "start": "2349790",
    "end": "2356740"
  },
  {
    "text": "or we can tag these as well. So for example, something\npowers something else.",
    "start": "2356740",
    "end": "2361960"
  },
  {
    "text": "This is known as a tagged link. It suppresses the processes. And then there's these\ntriangles that are--",
    "start": "2361960",
    "end": "2369369"
  },
  {
    "text": "essentially, there's a\nkind of hierarchy implied there and slightly\ndifferent meanings.",
    "start": "2369370",
    "end": "2374910"
  },
  {
    "text": "So the solid triangle\nmeans decomposition. So the higher level\nobject is composed",
    "start": "2374910",
    "end": "2381730"
  },
  {
    "text": "of lower-level objects. So that's, Mark, you\nmentioned assembly, you know, are you creating the bus of\nthe spacecraft and it has",
    "start": "2381730",
    "end": "2389230"
  },
  {
    "text": "a whole bunch of stuff in it? Well, you would use\nthis filled in triangle to show that decomposition.",
    "start": "2389230",
    "end": "2395440"
  },
  {
    "text": "The second example is the\ncharacterization link. So this is essentially\nrelating an attribute",
    "start": "2395440",
    "end": "2402820"
  },
  {
    "text": "to its kind of master object. Specialization\nand generalization is the empty triangle.",
    "start": "2402820",
    "end": "2409150"
  },
  {
    "text": "And then this funny symbol\nhere is instantiation. So essentially, you\nhave a general object.",
    "start": "2409150",
    "end": "2417544"
  },
  {
    "text": "And then you can\ninstantiate that. So I have two children.",
    "start": "2417544",
    "end": "2422560"
  },
  {
    "text": "I have two children,\nwhich is general. And there's two\ninstantiations of them.",
    "start": "2422560",
    "end": "2427760"
  },
  {
    "text": "One of them is called Gabrielle. And one of them is\ncalled Christian. And they're actual people. So that's the idea\nof instantiation.",
    "start": "2427760",
    "end": "2435880"
  },
  {
    "start": "2435000",
    "end": "2546000"
  },
  {
    "text": "Processes. Processes are these\npatterns of transformation.",
    "start": "2435880",
    "end": "2441520"
  },
  {
    "text": "They're tricky. Processes are trickier to\nunderstand than the objects because we cannot hold\nor touch a process.",
    "start": "2441520",
    "end": "2448060"
  },
  {
    "text": "It's fleeting. And the creating change\nor destruction of objects",
    "start": "2448060",
    "end": "2453520"
  },
  {
    "text": "is what processes do. They rely on at least\none object in what",
    "start": "2453520",
    "end": "2458650"
  },
  {
    "text": "we call the preprocess set. A process transforms\nat least one object.",
    "start": "2458650",
    "end": "2463690"
  },
  {
    "text": "And the time is implied. So processes take\nalong a timeline.",
    "start": "2463690",
    "end": "2469330"
  },
  {
    "text": "And in terms of the\ndescription, in English we use the so-called\nGerund form.",
    "start": "2469330",
    "end": "2474670"
  },
  {
    "text": "So all the processes,\nthere's some examples on the right side, use\nthe \"ing\" form of a verb.",
    "start": "2474670",
    "end": "2482050"
  },
  {
    "text": "So we can then put\nthese together, objects and processes. So here's an example\nof a machine.",
    "start": "2482050",
    "end": "2489010"
  },
  {
    "text": "This happens to be like a\nprinter or copy machine. It has a main switch. The main switch has an\nattribute called Main Switch",
    "start": "2489010",
    "end": "2496290"
  },
  {
    "text": "State, which can be on or off. The process of\nswitching transforms,",
    "start": "2496290",
    "end": "2502800"
  },
  {
    "text": "in this case, the Main\nSwitch State from on to off. Or we could go the other way.",
    "start": "2502800",
    "end": "2508290"
  },
  {
    "text": "And in order for this to\nhappen, we have here-- this is actually slightly\ndifferent than the instrument",
    "start": "2508290",
    "end": "2514691"
  },
  {
    "text": "link. This is a filled\nin lollipop, which is known as an agent link. So the operator\nis an active agent",
    "start": "2514691",
    "end": "2521580"
  },
  {
    "text": "to carry out the\nswitching process which changes the main switch state\nfrom on to off or off to on,",
    "start": "2521580",
    "end": "2527970"
  },
  {
    "text": "and the Main Switch State is an\nattribute of the main switch.",
    "start": "2527970",
    "end": "2533430"
  },
  {
    "text": "So transporting. This is another example. Transporting changes the state\nof a person from being here,",
    "start": "2533430",
    "end": "2540600"
  },
  {
    "text": "Location A, to being\nthere, Location B.",
    "start": "2540600",
    "end": "2547260"
  },
  {
    "start": "2546000",
    "end": "3460000"
  },
  {
    "text": "So there are seven-- huh,\ncoincidence, seven, seven--",
    "start": "2547260",
    "end": "2554950"
  },
  {
    "text": "object process links in OPM. So P changes-- the process\nchanges the object,",
    "start": "2554950",
    "end": "2562660"
  },
  {
    "text": "say from State A to B. That's\nthe example we just looked at. You can actually hide that.",
    "start": "2562660",
    "end": "2568090"
  },
  {
    "text": "If you're really not interested\nin all the states and details, you hide the states. You don't want to see them.",
    "start": "2568090",
    "end": "2574600"
  },
  {
    "text": "And then you can\nreplace that with what's called the affectee link,\nwhich is this two-sided arrow.",
    "start": "2574600",
    "end": "2580539"
  },
  {
    "text": "And all you know is\nthat this process is affecting that object.",
    "start": "2580540",
    "end": "2585670"
  },
  {
    "text": "And it's a two-sided arrow. But you don't know exactly how\nbut you know it's affected.",
    "start": "2585670",
    "end": "2591730"
  },
  {
    "text": "A resultee link-- so this is an\narrow pointing from the process to the object--",
    "start": "2591730",
    "end": "2597279"
  },
  {
    "text": "means that the process\nof transporting produces emissions that\nweren't there before.",
    "start": "2597280",
    "end": "2603160"
  },
  {
    "text": "So that's a resultee link. But the process of transporting\nrequires or consumes energy.",
    "start": "2603160",
    "end": "2609160"
  },
  {
    "text": "So the arrow is\npointing from energy into the transporting process\nbecause it's being consumed.",
    "start": "2609160",
    "end": "2616060"
  },
  {
    "text": "I did mention the agent link. So there's an\noperator of a vehicle. And when we talk about\nautonomously driving vehicles,",
    "start": "2616060",
    "end": "2623470"
  },
  {
    "text": "a big topic right now,\nactually, it was cool. At EPA this summer, there's\nthe autonomous shuttle",
    "start": "2623470",
    "end": "2630519"
  },
  {
    "text": "on the campus, the\nelectric shuttle. Did anybody take that? Did you guys try that\nshuttle this summer?",
    "start": "2630520",
    "end": "2636125"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] OLIVIER DE WECK: Yeah? Did you like it?  AUDIENCE: No, I didn't.",
    "start": "2636125",
    "end": "2641990"
  },
  {
    "text": "But a friend is working\nin this kind of shuttle, like sitting for hours waiting\nfor people [INAUDIBLE]..",
    "start": "2641990",
    "end": "2649280"
  },
  {
    "text": "OLIVIER DE WECK:\nSo fundamentally, I mean, if you want to think\nof this in OPM language,",
    "start": "2649280",
    "end": "2654460"
  },
  {
    "text": "a driverless vehicle is\nbasically eliminating this, no longer needing an\noperator with an agent link",
    "start": "2654460",
    "end": "2661580"
  },
  {
    "text": "and replacing this with\na piece of software, which would be an\ninstrument link.",
    "start": "2661580",
    "end": "2668670"
  },
  {
    "text": "So the instrument, the\ntransporting process requires a vehicle. And then we have what's\nknown as a conditional link.",
    "start": "2668670",
    "end": "2675850"
  },
  {
    "text": "So this process can only\noccur if this object is in that particular state.",
    "start": "2675850",
    "end": "2680950"
  },
  {
    "text": "So this example here,\nobviously, ignores the existence of credit cards.",
    "start": "2680950",
    "end": "2686040"
  },
  {
    "text": "So you can do the purchasing. The process of purchasing is\nconditional upon the state",
    "start": "2686040",
    "end": "2695230"
  },
  {
    "text": "of the object money being\nin a state of enough for doing the purchase.",
    "start": "2695230",
    "end": "2700305"
  },
  {
    "text": " So here's an example of a\nlittle bit more complicated.",
    "start": "2700305",
    "end": "2707150"
  },
  {
    "text": "This is a Level 0 OPM diagram\nof a car, of a vehicle. So you can see in\nthe upper right is",
    "start": "2707150",
    "end": "2713650"
  },
  {
    "text": "sort of a sketch of a vehicle. And it has these\ndifferent attributes.",
    "start": "2713650",
    "end": "2718680"
  },
  {
    "text": "ED is engine displacement,\nheight, ground clearance, overall length, wheelbase.",
    "start": "2718680",
    "end": "2725859"
  },
  {
    "text": "There's a trailer here\nwith a towing capacity. So the way the way you\nwould interpret this",
    "start": "2725860",
    "end": "2731470"
  },
  {
    "text": "is that we have a\ntransporting process. That's our master, sort of\nthe highest level process.",
    "start": "2731470",
    "end": "2737710"
  },
  {
    "text": "And it changes the attribute\nlocation for driver passengers and cargo from A to B.\nAnd that's, fundamentally,",
    "start": "2737710",
    "end": "2745640"
  },
  {
    "text": "where the value is for\nthe owner of the vehicle. And then we can zoom in to\nthe transporting process",
    "start": "2745640",
    "end": "2752000"
  },
  {
    "text": "and look at subprocesses,\ntowing, propelling, and housing. And if you think about what\na vehicle does at the highest",
    "start": "2752000",
    "end": "2758420"
  },
  {
    "text": "level, it protects you, it\nhouses you, and it propels you.",
    "start": "2758420",
    "end": "2764869"
  },
  {
    "text": "And then you can break\nthose into more detail. And then on the left side\nhere we have, essentially,",
    "start": "2764870",
    "end": "2771050"
  },
  {
    "text": "the elements of form. So the automobile,\nwhich is an instrument of the transporting\nprocess, can be",
    "start": "2771050",
    "end": "2777410"
  },
  {
    "text": "decomposed into its major\nsubsystems, powertrain, chassis, body, wheels.",
    "start": "2777410",
    "end": "2782740"
  },
  {
    "text": "And each of those\nare characterized-- you see those attribute links-- characterized by things\nlike fuel capacity,",
    "start": "2782740",
    "end": "2791630"
  },
  {
    "text": "engine displacement. This is the design domain\nwe talked about last time. Ground clearance.",
    "start": "2791630",
    "end": "2797810"
  },
  {
    "text": "And so those are the\ndesign variables. Those are the parts\nand assemblies. And then on the right\nside, the processes,",
    "start": "2797810",
    "end": "2803990"
  },
  {
    "text": "the internal processes can also\nbe characterized by performance or functional attributes\nlike towing capacity,",
    "start": "2803990",
    "end": "2811670"
  },
  {
    "text": "fuel economy, acceleration. PV stands for Passenger\nVolume and cargo volume.",
    "start": "2811670",
    "end": "2818000"
  },
  {
    "text": "And those are things when you're\ncomparing different vehicles to purchase, those\nare the things",
    "start": "2818000",
    "end": "2823040"
  },
  {
    "text": "you would compare\nvehicles against. So they're the internal\nfunctions and then the functional attributes.",
    "start": "2823040",
    "end": "2829490"
  },
  {
    "text": "And then up here there\nis the fuel and emissions and safety-related\nissues, which that's often",
    "start": "2829490",
    "end": "2835520"
  },
  {
    "text": "where the governments\nintervene and then regulate. And this is sort of a highest\nlevel OPM of a vehicle.",
    "start": "2835520",
    "end": "2843800"
  },
  {
    "text": "And then if you want\nto see more detail, you would start drilling\ndown into these. And you'd have multiple\nlevels of these,",
    "start": "2843800",
    "end": "2850160"
  },
  {
    "text": "like a hierarchy\nof these diagrams. Yeah. AUDIENCE: So here,\nwhat is the use",
    "start": "2850160",
    "end": "2855619"
  },
  {
    "text": "of the-- or the meaning\nof the open arrows? And it looks like there's a\ncouple of different arrows",
    "start": "2855620",
    "end": "2862100"
  },
  {
    "text": "here than what we had\nin the other diagram. OLIVIER DE WECK: Are you\ntalking about these guys?",
    "start": "2862100",
    "end": "2868064"
  },
  {
    "text": "AUDIENCE: No. OLIVIER DE WECK: Oh, these here. Yeah. AUDIENCE: Yeah. OLIVIER DE WECK: So\nit's just a visual represent-- there's no\ndistinction on the arrows",
    "start": "2868064",
    "end": "2875250"
  },
  {
    "text": "whether they're\nfilled in or empty. That's just a kind\nof graphical thing. Yeah. ",
    "start": "2875250",
    "end": "2881869"
  },
  {
    "text": "So one of the-- yes. Veronica, do you\nwant to push the--",
    "start": "2881870",
    "end": "2888260"
  },
  {
    "text": "AUDIENCE: How\nwould you represent a process that creates\nkind of a temporary state?",
    "start": "2888260",
    "end": "2894530"
  },
  {
    "text": "So if you're saying this\nis acted on an object, and this changes the\nform of the object but the object will ultimately\nreturn to its original state",
    "start": "2894530",
    "end": "2901580"
  },
  {
    "text": "kind of absent of a\nreversing process, if it's a natural tendency\nfor the object to return,",
    "start": "2901580",
    "end": "2908270"
  },
  {
    "text": "how would you\nrepresent that change? Would you need to\nbreak it down as kind of a subprocess\nwithin the object?",
    "start": "2908270",
    "end": "2914401"
  },
  {
    "text": "OLIVIER DE WECK: Right. So I mean, and sometimes\nthere's multiple, there's non-uniqueness in sort\nof representing the same thing.",
    "start": "2914402",
    "end": "2921110"
  },
  {
    "text": "But there's one\nprocess that brings you to the temporary state. AUDIENCE: OK. OLIVIER DE WECK:\nAnd then there would be a restoring process\nthat restores you back",
    "start": "2921110",
    "end": "2928310"
  },
  {
    "text": "to the original state. AUDIENCE: Does the process\nhave to be a separate plan within the system?",
    "start": "2928310",
    "end": "2933809"
  },
  {
    "text": "Because there are certain\nobjects that have a tendency-- I'm thinking primarily of\nkind of chemical states",
    "start": "2933810",
    "end": "2939050"
  },
  {
    "text": "where reactions would\nhappen naturally. It's kind of a\nspecific thing, but I was thinking about how you\nmight model different systems.",
    "start": "2939050",
    "end": "2945110"
  },
  {
    "text": "And I was thinking\nabout the engine of the car, just kind of how\nthings might naturally return. So do you have to describe\nthe process explicitly",
    "start": "2945110",
    "end": "2952580"
  },
  {
    "text": "if it's not something that's\ninherently designed in,",
    "start": "2952580",
    "end": "2957650"
  },
  {
    "text": "if it's kind of a-- if it will happen anyway. OLIVIER DE WECK: I\nthink, I want to say you",
    "start": "2957650",
    "end": "2963380"
  },
  {
    "text": "have to explicitly define that. AUDIENCE: OK. OLIVIER DE WECK: So if it's a\nman-made process, so to speak,",
    "start": "2963380",
    "end": "2968840"
  },
  {
    "text": "then that's a process\nyou want to happen. And then if the restoring\nit back to some other state",
    "start": "2968840",
    "end": "2973910"
  },
  {
    "text": "is a natural process,\nwell, it exists. So it will restore the\nsystem to a prior state.",
    "start": "2973910",
    "end": "2980360"
  },
  {
    "text": "That process would also\nhave to be modeled. AUDIENCE: Is there a\ndistinction between how you would indicate a man-made\nprocess or a natural process?",
    "start": "2980360",
    "end": "2985940"
  },
  {
    "text": "OLIVIER DE WECK:\nNot fundamentally. AUDIENCE: OK. OLIVIER DE WECK:\nAnd in fact, OPM has been applied to modeling\nhow a cell functions.",
    "start": "2985940",
    "end": "2991200"
  },
  {
    "text": "So there's been some\npretty recent work on-- cells are incredibly-- the\nbiological engineering is just",
    "start": "2991200",
    "end": "2996770"
  },
  {
    "text": "really complex. So there's some\nreally recent work on describing even the\nRNA and cell division,",
    "start": "2996770",
    "end": "3003100"
  },
  {
    "text": "using very much this language. AUDIENCE: OK. OLIVIER DE WECK: So\nit doesn't matter whether it's an artificial\nprocess or a natural process.",
    "start": "3003100",
    "end": "3009857"
  },
  {
    "text": "AUDIENCE: Thank you. OLIVIER DE WECK: Let me\ngo a couple more minutes, and then we'll\ntake a short break. And then we'll talk\nabout SysML and Modelica.",
    "start": "3009857",
    "end": "3016480"
  },
  {
    "text": "So the key thing\nin OPM is there's only one type of diagram.",
    "start": "3016480",
    "end": "3021550"
  },
  {
    "text": "And there's also\nnatural language that gets auto-generated. And I'll show you this\nvery quickly in the tool.",
    "start": "3021550",
    "end": "3027130"
  },
  {
    "text": "So as you can imagine,\nas you're working on real systems, these\ndiagrams, if you'd showed them",
    "start": "3027130",
    "end": "3032560"
  },
  {
    "text": "on one sort of level, you'd have\nthousands of objects and links. It would be a mess.",
    "start": "3032560",
    "end": "3038830"
  },
  {
    "text": "So how does OPM\nhandle complexity? There's three\nfundamental mechanisms. One is known as\nfolding and unfolding.",
    "start": "3038830",
    "end": "3045880"
  },
  {
    "text": "What does that mean? It's basically related\nto the structure.",
    "start": "3045880",
    "end": "3050980"
  },
  {
    "text": "So folding/unfolding means\nthat higher level objects, you can show the decomposition of\nthe objects or you can hide it.",
    "start": "3050980",
    "end": "3058430"
  },
  {
    "text": "That's known as\nfolding and unfolding. Then the second one is\nin-zooming or out-zooming.",
    "start": "3058430",
    "end": "3064810"
  },
  {
    "text": "And so here's an example of\na process and an instrument and an affectee that's\naffected by the process.",
    "start": "3064810",
    "end": "3072150"
  },
  {
    "text": "And I want to know, what are the\nsubprocesses in that process? So you can zoom\ninto this process,",
    "start": "3072150",
    "end": "3079100"
  },
  {
    "text": "and it will expose\nthe subprocesses that are happening inside. That's known as in-zooming.",
    "start": "3079100",
    "end": "3084860"
  },
  {
    "text": "And then going back the other\nway is called out-zooming. And then the third one\nI've already mentioned,",
    "start": "3084860",
    "end": "3090460"
  },
  {
    "text": "which is that states\ncan be expressed or suppressed or hidden\ndepending on your interest",
    "start": "3090460",
    "end": "3097019"
  },
  {
    "text": "and what states of the\nsystem you want to look at. So here's the sort of Level\n0 OPM of our refrigerator.",
    "start": "3097020",
    "end": "3104510"
  },
  {
    "text": "I said that was kind\nof our case study. So how does the refrigerator\nwork at the sort of--",
    "start": "3104510",
    "end": "3110599"
  },
  {
    "text": "Level 0, that's what the\nstakeholder, what the customer sees. Don't care about the\ndetails of what's",
    "start": "3110600",
    "end": "3116480"
  },
  {
    "text": "happening in the refrigerator. So we have food-- and we'll get back to\nthis I think next week",
    "start": "3116480",
    "end": "3123800"
  },
  {
    "text": "in the kind of creativity\nconcept generation. Why do we have\nrefrigerators fundamentally?",
    "start": "3123800",
    "end": "3130640"
  },
  {
    "text": "If you've heard this\nbefore, you keep quiet. Maybe EPFL.",
    "start": "3130640",
    "end": "3135650"
  },
  {
    "text": "Why do we have refrigerators? ",
    "start": "3135650",
    "end": "3141970"
  },
  {
    "text": "Any ideas? ",
    "start": "3141970",
    "end": "3147210"
  },
  {
    "text": "Go ahead. AUDIENCE: Keep food cold. OLIVIER DE WECK: Yeah, well,\nif you're a beer drinker,",
    "start": "3147210",
    "end": "3153930"
  },
  {
    "text": "you want cold beer. But if you really\nthink about it deeply,",
    "start": "3153930",
    "end": "3159000"
  },
  {
    "text": "that's not really\nthe primary reason. The primary reason is this\nstate change, their shelf life.",
    "start": "3159000",
    "end": "3166470"
  },
  {
    "text": "So the primary reason why\nyou have refrigerators is to extend the shelf\nlife of the food.",
    "start": "3166470",
    "end": "3173100"
  },
  {
    "text": "So speaking as a systems\narchitect, system engineer, a refrigerator is a food\nspoilage rate reduction device.",
    "start": "3173100",
    "end": "3183829"
  },
  {
    "text": "You see that? So the attribute of the\nfood is the shelf life, and we're going to extend\nthe shelf life of the food.",
    "start": "3183830",
    "end": "3191829"
  },
  {
    "text": "If you think about it\nsort of architecturally, that's why we have\nrefrigerators. But I agree with you\non the cold beer.",
    "start": "3191830",
    "end": "3199280"
  },
  {
    "text": "We all agree we want\ncold beer, not warm beer. So you're right. You're right, too.",
    "start": "3199280",
    "end": "3204710"
  },
  {
    "text": "So the refrigerator\nessentially is an instrument of extending the\nfood shelf life.",
    "start": "3204710",
    "end": "3210020"
  },
  {
    "text": "So the food is the operand. The food is the operand. The extending of\nshelf life is what",
    "start": "3210020",
    "end": "3216140"
  },
  {
    "text": "we call the primary\nvalue delivering process. That's where the value is. The refrigerator itself\nis the product system.",
    "start": "3216140",
    "end": "3224270"
  },
  {
    "text": "And then the operator sets\nthe thermostat setting at which temperature the\nrefrigerator should be.",
    "start": "3224270",
    "end": "3231200"
  },
  {
    "text": "And then here we have the\nprimary operating process, which is what allows us to keep\nthe temperature of the food",
    "start": "3231200",
    "end": "3238340"
  },
  {
    "text": "at that level. And in order to do this, we\nconsume electrical power. We produce waste heat.",
    "start": "3238340",
    "end": "3244220"
  },
  {
    "text": "And we also require, or\nwe convect that waste heat to the exterior air at\na certain temperature.",
    "start": "3244220",
    "end": "3251580"
  },
  {
    "text": "How well do refrigerators\nwork in a vacuum chamber? ",
    "start": "3251580",
    "end": "3260000"
  },
  {
    "text": "They don't. They don't. There's no way\nto-- well, I guess you could radiate the\nheat a little bit.",
    "start": "3260000",
    "end": "3265930"
  },
  {
    "text": "But they're not going\nto work very well. You're not going\nto have conduction because you're sort of in the\nmiddle of the vacuum chamber.",
    "start": "3265930",
    "end": "3272200"
  },
  {
    "text": "You're not going\nto have convection. So you only have radiation. And that's not going\nto work very well. So the exterior air is important\nfor the refrigerator to work.",
    "start": "3272200",
    "end": "3282310"
  },
  {
    "text": "So then you say, well, OK. That's fine. I buy that. But now I want to really\nknow, how does it really work?",
    "start": "3282310",
    "end": "3288520"
  },
  {
    "text": "So you say operating. The refrigerator is operating. But I want to do\nin-zooming and understand,",
    "start": "3288520",
    "end": "3294760"
  },
  {
    "text": "how is it operating? So what's the key\nto refrigeration?",
    "start": "3294760",
    "end": "3300070"
  },
  {
    "text": "What's the magic word\nthere, or two magic words? AUDIENCE: [INAUDIBLE]",
    "start": "3300070",
    "end": "3307232"
  },
  {
    "text": "OLIVIER DE WECK: Yeah,\nthat's part of it. That's just a sliver of it. Heat exchange is part of it.",
    "start": "3307232",
    "end": "3313220"
  },
  {
    "text": "So the magic word\nis Carnot cycle. So here's a little graphic\nthat sort of gets into it.",
    "start": "3313220",
    "end": "3320690"
  },
  {
    "text": "So the Carnot cycle is actually\na thermodynamic concept where you're compressing\nessentially a refrigerant.",
    "start": "3320690",
    "end": "3330220"
  },
  {
    "text": "A coolant is being\ncompressed, absorbs the heat from the inside and then expands\nand condenses and radiates that",
    "start": "3330220",
    "end": "3339470"
  },
  {
    "text": "or convects that\nheat to the outside. So here's a-- I don't know if you remember\nyour thermodynamics.",
    "start": "3339470",
    "end": "3345710"
  },
  {
    "text": "This is a classic PV diagram. You've got the four legs\nof the Carnot cycle.",
    "start": "3345710",
    "end": "3350780"
  },
  {
    "text": "And actually, what's\nreally nice here-- so we're going through\nthis counter-clockwise. What's really nice about it is\nthat every leg of the Carnot",
    "start": "3350780",
    "end": "3359060"
  },
  {
    "text": "cycle is one of our processes. So compressing is this leg\nhere from D to B. Condensing",
    "start": "3359060",
    "end": "3367040"
  },
  {
    "text": "is from B to A.\nExpanding from A to E. And then evaporation\nhappens from E to D.",
    "start": "3367040",
    "end": "3372740"
  },
  {
    "text": "So the Carnot cycle\ncan be decomposed",
    "start": "3372740",
    "end": "3377930"
  },
  {
    "text": "into four subprocesses. These are the internal\nprocesses in the system",
    "start": "3377930",
    "end": "3383869"
  },
  {
    "text": "that are governed by physics. So if we take that\noperating process",
    "start": "3383870",
    "end": "3389120"
  },
  {
    "text": "that we looked at\nbefore, we can actually zoom in and see the\nsubprocesses emerging.",
    "start": "3389120",
    "end": "3395460"
  },
  {
    "text": "And so in cooling we have\nthose four expanding, evaporating,\ncompressing, condensing.",
    "start": "3395460",
    "end": "3400910"
  },
  {
    "text": "But I'm adding the\nabsorbing process, which is that the\nheat then needs to be absorbed by the exterior air.",
    "start": "3400910",
    "end": "3407360"
  },
  {
    "text": "We have to power the device. You can decompose\nthat into grounding, protecting, supplying.",
    "start": "3407360",
    "end": "3412850"
  },
  {
    "text": "Regulation, keeping\nit at the set point, you can decompose that process\ninto sensing, switching,",
    "start": "3412850",
    "end": "3419750"
  },
  {
    "text": "and setting the set point. And then we have\nsupporting, which is we need to be opening and\nclosing the refrigerator,",
    "start": "3419750",
    "end": "3426950"
  },
  {
    "text": "retaining it, and then\nconnecting all the pieces. So at Level -1, we had\none process at Level 0,",
    "start": "3426950",
    "end": "3434119"
  },
  {
    "text": "which was operating. The refrigerator was operating. And then as we\nzoom into Level -1,",
    "start": "3434120",
    "end": "3440105"
  },
  {
    "text": "four processes appear,\npowering, regulating, cooling, and supporting. And then at Level -2,\nwe have 15 subprocesses.",
    "start": "3440105",
    "end": "3448850"
  },
  {
    "text": "So this is sort of\na view at Level -1, our four subprocesses,\ncooling, powering, regulating,",
    "start": "3448850",
    "end": "3457160"
  },
  {
    "text": "supporting. And then we can zoom in more. So here's the general idea, and\nwe've looked at many systems",
    "start": "3457160",
    "end": "3464869"
  },
  {
    "start": "3460000",
    "end": "3534000"
  },
  {
    "text": "over the years, that most\ncyber-physical systems-- or it says optomechanical\nhere, but I really",
    "start": "3464870",
    "end": "3471680"
  },
  {
    "text": "mean it more generally-- have\nthis kind of OPM structure. On the right side,\nwe have the output",
    "start": "3471680",
    "end": "3478130"
  },
  {
    "text": "that the customer,\nthe stakeholder cares about, the operand. We have a set of\nspecialized processes,",
    "start": "3478130",
    "end": "3484890"
  },
  {
    "text": "and these can be often\norganized in a cascade. And then we have\nsupporting processes, like powering,\nconnecting, controlling,",
    "start": "3484890",
    "end": "3491869"
  },
  {
    "text": "that provide support for\nthe specialized processes. Most systems that we've seen\nhave this generic architecture.",
    "start": "3491870",
    "end": "3502920"
  },
  {
    "text": "How do you generate an OPM? Fundamentally, you\ncan do a top-down. So you start with\nyour stakeholders.",
    "start": "3502920",
    "end": "3509280"
  },
  {
    "text": "That's what we did\nin the first lecture. Where's the value? You start thinking\nabout requirements,",
    "start": "3509280",
    "end": "3515780"
  },
  {
    "text": "what functions, how well the\nfunctions should be performed. And you sort of go down.",
    "start": "3515780",
    "end": "3521570"
  },
  {
    "text": "Or if you already\nhave a system, you can actually reverse\nengineer that system and from bottom\nup, like we started",
    "start": "3521570",
    "end": "3529370"
  },
  {
    "text": "doing for the Mr. Sticky,\nand that's fundamentally reverse engineering.",
    "start": "3529370",
    "end": "3534890"
  },
  {
    "start": "3534000",
    "end": "3591000"
  },
  {
    "text": "So just for time, I'm\ngoing to skip this demo. But what I will do is\nI will post a video.",
    "start": "3534890",
    "end": "3541610"
  },
  {
    "text": "I'm going to make a little\nvideo with the OPCAT demo and post that to Stellar so\nyou can sort of watch that.",
    "start": "3541610",
    "end": "3547970"
  },
  {
    "text": "So this is one of the--\nit's still not super mature, but it's a Java-based\nprogram called",
    "start": "3547970",
    "end": "3553640"
  },
  {
    "text": "OPCAT that allows you to\ngenerate object process",
    "start": "3553640",
    "end": "3558890"
  },
  {
    "text": "diagrams in a\ncomputer-supported environment and store them in an XML\nformat, and so forth.",
    "start": "3558890",
    "end": "3567079"
  },
  {
    "text": "It allows you to\ncreate a hierarchy. And the other thing that's very\ncool, it autogenerates text.",
    "start": "3567080",
    "end": "3572880"
  },
  {
    "text": "So the text is called OPL,\nObject Process Language. And right now you can go from\nthe graphics to the text,",
    "start": "3572880",
    "end": "3580140"
  },
  {
    "text": "but you can't go the other way. So they're complete sentences. It's not like an exciting\nnovel when you read it.",
    "start": "3580140",
    "end": "3587150"
  },
  {
    "text": "But it is semantically precise. So we're going to\nswitch to SysML.",
    "start": "3587150",
    "end": "3593940"
  },
  {
    "start": "3591000",
    "end": "3599000"
  },
  {
    "text": "We're going to take\na very short break. Are there any\nquestions about OPM? In the system\narchitecture class,",
    "start": "3593940",
    "end": "3599610"
  },
  {
    "text": "we spend like five,\nsix lectures on OPM and you get to do\ndetailed exercises.",
    "start": "3599610",
    "end": "3605280"
  },
  {
    "text": "We kind of don't have time\nfor this in this class. But hopefully you've\nseen what it is. And if I've whetted\nyour appetite for OPM,",
    "start": "3605280",
    "end": "3613380"
  },
  {
    "text": "then the goal has been met. Any questions about OPM? ",
    "start": "3613380",
    "end": "3621030"
  },
  {
    "text": "Is it pretty clear? All right. So let's take-- yes.",
    "start": "3621030",
    "end": "3626160"
  },
  {
    "text": "AUDIENCE: Compared to\nModelica, because I've seen one of the\nlinks that OPM is",
    "start": "3626160",
    "end": "3631800"
  },
  {
    "text": "just for describing\nthe system, though. It's not for making\ncalculations or simulations.",
    "start": "3631800",
    "end": "3637200"
  },
  {
    "text": "OLIVIER DE WECK: That's correct. The latest versions\nof OPM you can do like a logical simulation.",
    "start": "3637200",
    "end": "3642760"
  },
  {
    "text": "So you can say, OK, this process\nenables and does this state, so it's kind of a\ndiscrete logical.",
    "start": "3642760",
    "end": "3648000"
  },
  {
    "text": "But usually it's not used for\nany mathematical calculations.",
    "start": "3648000",
    "end": "3653070"
  },
  {
    "text": "The purpose of OPM is really\nto support conceptual design, early conceptual design. That's correct.",
    "start": "3653070",
    "end": "3659006"
  },
  {
    "text": " Mark.",
    "start": "3659006",
    "end": "3664130"
  },
  {
    "text": "So just a couple of\nwords about Mark. He's a doctoral student right\nnow in the Space Systems Lab.",
    "start": "3664130",
    "end": "3670830"
  },
  {
    "text": "He's been working a lot on\nan instrument called REXIS. I guess you're the chief\nsystem engineer for REXIS.",
    "start": "3670830",
    "end": "3677600"
  },
  {
    "text": "MARK CHODAS: Yeah, yeah. OLIVIER DE WECK: And\nthat was also the topic of his master's thesis. So Mark really knows\nwhat he's talking about.",
    "start": "3677600",
    "end": "3684940"
  },
  {
    "text": "He knows SysML quite well. And thanks for doing this. MARK CHODAS: So let\nme start by giving",
    "start": "3684940",
    "end": "3690870"
  },
  {
    "text": "kind of a high-level\noverview of what SysML is and what it aims to do. So it's similar to OPM,\nbut there are a couple",
    "start": "3690870",
    "end": "3697170"
  },
  {
    "text": "important differences. SysML, as Olly said, it\nkind of is an extension",
    "start": "3697170",
    "end": "3702360"
  },
  {
    "text": "or inherits a lot from UML. And its aim is to really\nprovide a language that",
    "start": "3702360",
    "end": "3708510"
  },
  {
    "text": "enables you to capture\nall the different aspects of information about\na system in one place.",
    "start": "3708510",
    "end": "3714270"
  },
  {
    "text": "And this concept\nof Single Source Of Truth is something that\nI'll kind of try and emphasize during my presentation.",
    "start": "3714270",
    "end": "3719670"
  },
  {
    "text": "The idea is if all\nyour information is in this one model, then\ncommunication is easy.",
    "start": "3719670",
    "end": "3725770"
  },
  {
    "text": "There's no ambiguity\nbetween versions. Everyone knows\nwhere to go to get the most up-to-date and\ncorrect piece of information.",
    "start": "3725770",
    "end": "3733150"
  },
  {
    "text": "So that's one of the\nemphases of SysML. SysML is a graphical\nlanguage, similar to OPM.",
    "start": "3733150",
    "end": "3740460"
  },
  {
    "text": "It's defined in terms\nof diagram types that I'll go into in a second. It has more than just\none diagram type, as compared to OPM.",
    "start": "3740460",
    "end": "3747000"
  },
  {
    "text": "But basically it\naims to do things like capture functional\nbehavioral models, capture performance models,\ncapture the structural topology",
    "start": "3747000",
    "end": "3754144"
  },
  {
    "text": "of your system, the\nparts of your system and how they're\nall interconnected, and any other engineering\nanalysis model",
    "start": "3754144",
    "end": "3759450"
  },
  {
    "text": "is one of the big\nemphases with SysML, is integration with\nexternal analysis tools. So if you have a thermal tool, a\nstructural tool, an electronics",
    "start": "3759450",
    "end": "3768410"
  },
  {
    "text": "tool, or something\nlike that, integrating this informational,\ndescriptional model with that analysis\nmodel and enabling,",
    "start": "3768410",
    "end": "3775550"
  },
  {
    "text": "making it easy to\ntransfer information from your description model\nto your analysis model, do an analysis, and then\nincorporate those results back",
    "start": "3775550",
    "end": "3782670"
  },
  {
    "text": "into your descriptive\nmodel is one of the things that SysML really is all about. Then another thing,\nanother difference",
    "start": "3782670",
    "end": "3788943"
  },
  {
    "text": "compared to SysML from\nOPM is it incorporates requirements pretty explicitly. And that's one of the other\nareas that people are really",
    "start": "3788943",
    "end": "3795300"
  },
  {
    "text": "interested in is if you have\ngood modeling of requirements, what sort of information can\nyou glean about your system",
    "start": "3795300",
    "end": "3800340"
  },
  {
    "text": "that you couldn't otherwise? How do I advance the slide?",
    "start": "3800340",
    "end": "3806607"
  },
  {
    "text": "Oh, there we go. So as I said, SysML is\ncomposed of diagrams.",
    "start": "3806607",
    "end": "3812420"
  },
  {
    "text": "I'll go into in a\nsecond kind of what each diagram, what all\nthe diagram types are and what kind of\ntheir intent is. But here's kind of a\nhigh-level overview.",
    "start": "3812420",
    "end": "3819249"
  },
  {
    "text": "It might be a little\nbit difficult to read. So at the top you\nhave a system model. You have requirements,\ndiagrams, behavior, structure",
    "start": "3819249",
    "end": "3825350"
  },
  {
    "text": "and parametrics. Within requirements,\nthere's actually a specific requirements\ndiagram that's supposed to represent\nthe relationship",
    "start": "3825350",
    "end": "3832040"
  },
  {
    "text": "between requirements\nin your system. And I'll show an\nexample of that. In behavior, there are\ndiagrams to describe",
    "start": "3832040",
    "end": "3838310"
  },
  {
    "text": "kind of the activity of your\nsystem, the sequence of events that may happen. There's a state\nmachine diagram if you",
    "start": "3838310",
    "end": "3844160"
  },
  {
    "text": "want to model your\nsystem as a state and transition between those\nstates, things like that. In the structure,\nthere's diagrams",
    "start": "3844160",
    "end": "3851124"
  },
  {
    "text": "that go over the\ndecomposition of your system. What is your system? And what parts make\nup your system? Both the logical decomposition\nand the physical decomposition.",
    "start": "3851124",
    "end": "3859700"
  },
  {
    "text": "And then there's topology. How are they all connected? What are the characteristics\nof the interfaces?",
    "start": "3859700",
    "end": "3864980"
  },
  {
    "text": "Things like that. And then parametrics,\nwhich is kind of adding constraints and\nnumbers to all these things,",
    "start": "3864980",
    "end": "3872660"
  },
  {
    "text": "whether they be\nlogical constraints, mathematical constraints,\nthings like that. Similar to OPM, SysML has no\nbuilt-in analysis capabilities,",
    "start": "3872660",
    "end": "3879980"
  },
  {
    "text": "so you can't like run a model or\ncalculate an equation in SysML.",
    "start": "3879980",
    "end": "3885389"
  },
  {
    "text": "You can't really do that. But very frequently the\ntools that implement system",
    "start": "3885389",
    "end": "3893470"
  },
  {
    "text": "that I'll show\nyou have that kind of analysis capability\nbuilt into the tools, as opposed to the language.",
    "start": "3893470",
    "end": "3898630"
  },
  {
    "text": "So you can do things like use a\nparametric diagram with a bunch of equations to create\na system of equations",
    "start": "3898630",
    "end": "3905760"
  },
  {
    "text": "that you then can solve,\nwhether it be in the tool, or you can move it\nto an external tool, like Mathematica or something\nand solve it, and then",
    "start": "3905760",
    "end": "3911856"
  },
  {
    "text": "bring that information\nback into your system. You also can do kind of\nsequence-based computation.",
    "start": "3911856",
    "end": "3919920"
  },
  {
    "text": "If you have an activity\ndiagram that says first you have to build this\npart of your system and then this part\nof your system,",
    "start": "3919920",
    "end": "3925590"
  },
  {
    "text": "there's things in sequence,\nthings in parallel. You can run simulations like\nthat where it's all about,",
    "start": "3925590",
    "end": "3930839"
  },
  {
    "text": "have you done\neverything you need to do to get to the next step? Things in a more logical\nflow, as opposed to actually",
    "start": "3930840",
    "end": "3936510"
  },
  {
    "text": "mathematical equations, you can\ndo those sorts of computations as well. ",
    "start": "3936510",
    "end": "3941830"
  },
  {
    "text": "One note is that these diagrams,\nalthough they are the main way to define your system and\ninterface with the model,",
    "start": "3941830",
    "end": "3948130"
  },
  {
    "text": "are not the model themselves. So you can create\nlinks between diagrams. If an element shows up in\none diagram and that element",
    "start": "3948130",
    "end": "3956110"
  },
  {
    "text": "shows up in another diagram,\nthat's the same element. If you make changes\nin one diagram, that's going to propagate\nto all your diagrams.",
    "start": "3956110",
    "end": "3962740"
  },
  {
    "text": "So there's kind of\na database backend to this whole model\nthat encompasses all the information.",
    "start": "3962740",
    "end": "3967790"
  },
  {
    "text": "So instead of having a bunch\nof isolated block diagrams, they're really just views\ninto this model that's hidden in a backend database.",
    "start": "3967790",
    "end": "3974920"
  },
  {
    "start": "3974920",
    "end": "3980480"
  },
  {
    "text": "So we'll talk a little bit\nabout the applications of SysML. First is requirements\nengineering. As I said, when you can\nexplicitly model requirements",
    "start": "3980480",
    "end": "3987160"
  },
  {
    "text": "in the relationship between\nrequirements and your system, you can do a lot more. The way that it's\ntypically done nowadays",
    "start": "3987160",
    "end": "3992990"
  },
  {
    "text": "is with tons of documents-- I'm not sure if you've ever\nactually developed a system, but there's an ungodly\namount of documents.",
    "start": "3992990",
    "end": "3999200"
  },
  {
    "text": "I've experienced that firsthand. It's a real pain. There are tools like\nDOORS that will enable you to link requirements\nto other requirements,",
    "start": "3999200",
    "end": "4006010"
  },
  {
    "text": "and things like that that help\nyou manage your requirements. But what if you had\na really explicit tie between your requirements\nand your system?",
    "start": "4006010",
    "end": "4012040"
  },
  {
    "text": "You can actually\nrepresent in SysML. And I'll show you a\nlittle bit about this. You can represent in SysML a\ntextural requirement, you know,",
    "start": "4012040",
    "end": "4017859"
  },
  {
    "text": "the mass of your system must\nbe less than 5 kilograms, or something like that. You can tie that\nrequirement directly",
    "start": "4017860",
    "end": "4023121"
  },
  {
    "text": "to the mass property\nof your system. You can [INAUDIBLE]. You can start\nbuilding constraints. Your requirements aren't\njust textual statements,",
    "start": "4023121",
    "end": "4030100"
  },
  {
    "text": "they're actually constraints\nupon properties of your system. Those are the types of things\nyou can start to do with SysML. Do you have a question?",
    "start": "4030100",
    "end": "4036298"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]",
    "start": "4036298",
    "end": "4045690"
  },
  {
    "text": "MARK CHODAS: Yeah. Yeah, so that isn't something\nthat's built into the language. But that is something\nyou can do with--",
    "start": "4045690",
    "end": "4051030"
  },
  {
    "text": "basically there's a whole API. And you can interface\nwith the model. I'll show you this,\nactually, in my demo.",
    "start": "4051030",
    "end": "4057150"
  },
  {
    "text": "But you can build in rules and\nconstraints that say, check, for example, that all my\nrequirements, at least how",
    "start": "4057150",
    "end": "4062240"
  },
  {
    "text": "they've been defined,\nare satisfied. You can run that\ncheck, and it will tell you have they\nbeen satisfied or not. And that's something\nthat's really powerful",
    "start": "4062240",
    "end": "4068301"
  },
  {
    "text": "that you can't really do with\nexisting kind of techniques. Yeah. AUDIENCE: Thank you. And can you also, for\nexample, requirement changes,",
    "start": "4068301",
    "end": "4078170"
  },
  {
    "text": "like the master system\nhas to be this much, as opposed to this much, then\nwould it go through and check",
    "start": "4078170",
    "end": "4083369"
  },
  {
    "text": "until you have to now look\nat this, this, and this, and then that affect like- MARK CHODAS: So you're\ngetting down in the weeds.",
    "start": "4083370",
    "end": "4090299"
  },
  {
    "text": "That's something that would\nbe awesome if you could do. That really-- again,\nthat's not something that SysML enables\nyou to do natively.",
    "start": "4090300",
    "end": "4097259"
  },
  {
    "text": "But it gives you the\nlanguage and the syntax to be able to write\nqueries that give you that type of information.",
    "start": "4097260",
    "end": "4102540"
  },
  {
    "text": "That's kind of where the\ncutting edge is right now is, can we do that? Can we get that type of\ninformation from a SysML model?",
    "start": "4102540",
    "end": "4108239"
  },
  {
    "text": "That's something I'm really\ninterested in for my PhD thesis. So yeah, that's\nsomething that I think is possible and would\nbe really great to have",
    "start": "4108240",
    "end": "4114086"
  },
  {
    "text": "in the development\nprocess of a system.  So the next bullet here is\non a system description.",
    "start": "4114086",
    "end": "4120790"
  },
  {
    "text": "So actually one of the\nfundamental questions is, how do you describe\na domain-specific system",
    "start": "4120790",
    "end": "4126068"
  },
  {
    "text": "within SysML? I'll show you that SysML\nhas a pretty strong notion of inheritance, and\nclasses, and things like.",
    "start": "4126069",
    "end": "4131920"
  },
  {
    "text": "It's object-oriented. And so one of the questions is-- I'm in the space system. So how do you describe\na spacecraft in SysML?",
    "start": "4131920",
    "end": "4139330"
  },
  {
    "text": "SysML is very general. But how do you\nactually represent, for example, a CNDH\nsystem in SysML?",
    "start": "4139330",
    "end": "4144910"
  },
  {
    "text": "What are the types of attributes\nthat are typically found? How do you represent that?",
    "start": "4144910",
    "end": "4151180"
  },
  {
    "text": "How does it interface with\nother parts of your system? Those type of questions. That's another active\narea of research, domain-specific modeling.",
    "start": "4151180",
    "end": "4157449"
  },
  {
    "text": "And then finally, as\nI said, integration with external analysis tools. So there's quite a lot of\npapers in the literature",
    "start": "4157450",
    "end": "4163210"
  },
  {
    "text": "about going from a\nSysML model to MATLAB to SDK to Thermal Desktop,\nexternal modeling tools,",
    "start": "4163210",
    "end": "4172680"
  },
  {
    "text": "taking that information out of\nthe model, doing an analysis, putting it back in the model. And actually, I\nthink there I was",
    "start": "4172680",
    "end": "4178960"
  },
  {
    "text": "going to talk about Simscape,\nwhich is a kind of analysis tool, external analysis tool. And there's actually\nbeen papers written on,",
    "start": "4178960",
    "end": "4185270"
  },
  {
    "text": "how do you take SysML\ninformation from a SysML model, pull it into\nSimscape process it, and put it back in the model?",
    "start": "4185270",
    "end": "4190890"
  },
  {
    "text": " So let's talk\nabout the diagrams.",
    "start": "4190890",
    "end": "4196679"
  },
  {
    "text": "There are nine types\nof diagrams in SysML. And I'll try and just give\nyou a brief explanation of what they do.",
    "start": "4196680",
    "end": "4201840"
  },
  {
    "text": "I won't go into the\nsyntax for all of them because there's quite a bit\nof detail in the syntax. But I'll show you some\nexamples of a couple of them.",
    "start": "4201840",
    "end": "4207969"
  },
  {
    "text": "So we'll go from left to right. So there's two main classes,\nbehavior and structure, similar to OPM.",
    "start": "4207969",
    "end": "4214050"
  },
  {
    "text": "In the behavior diagram, in\nthe behavior diagram category you have activity\ndiagrams, which basically",
    "start": "4214050",
    "end": "4219900"
  },
  {
    "text": "represent flows of activities. So you do this, then you\ndo this, then you do this. Those can be tied\nto system elements.",
    "start": "4219900",
    "end": "4226890"
  },
  {
    "text": "If this system element has this\nsort of function or property or performs this operation on\nanother part of the system,",
    "start": "4226890",
    "end": "4232710"
  },
  {
    "text": "you can represent\nthat link as well. There's a sequence diagram,\nwhich is more about logical",
    "start": "4232710",
    "end": "4239679"
  },
  {
    "text": "ordering. So if you have, for example, a\nmulti-threaded software system, and you have\ndifferent threads that",
    "start": "4239680",
    "end": "4245190"
  },
  {
    "text": "may need different other\nthreads to communicate with them or finish their computation\nbefore that, that way you",
    "start": "4245190",
    "end": "4250470"
  },
  {
    "text": "can execute things\nlike that, you can do that sort of interfacing\nbetween different threads",
    "start": "4250470",
    "end": "4256830"
  },
  {
    "text": "of activities in a\nsequence diagram. This is one of the diagram\ntypes that was kind of inherited",
    "start": "4256830",
    "end": "4263070"
  },
  {
    "text": "directly from UML. So there is a very\nkind of strong software element to that diagram. ",
    "start": "4263070",
    "end": "4271400"
  },
  {
    "text": "There's a state machine diagram. So obviously, state\nmachines are very powerful. If your system has\nvarious states,",
    "start": "4271400",
    "end": "4276409"
  },
  {
    "text": "if things in your system\nhave various states, you can represent that in\na state machine diagram and then talk about, what are\nthe criteria for transitioning",
    "start": "4276410",
    "end": "4282830"
  },
  {
    "text": "between states? What would trigger or cause\na transition between states? What are guards that\nmust be met before you",
    "start": "4282830",
    "end": "4288723"
  },
  {
    "text": "can transition states? Things like that. That's where you represent\nthe state machine diagram. These type of diagrams are very\npowerful for describing things",
    "start": "4288724",
    "end": "4296000"
  },
  {
    "text": "like concept of operations. So there has been some work-- I did an internship at JPL\na couple of summers ago.",
    "start": "4296000",
    "end": "4302390"
  },
  {
    "text": "And they were trying to\nbuild up this capability to model a concept of\noperations for a spacecraft. So what are all the power\nmodes of everything?",
    "start": "4302390",
    "end": "4310096"
  },
  {
    "text": "What are the time--\nyou know, it spends this amount of time\nin this power mode, then it transitions here. For example, I can give\nan orbit of a spacecraft.",
    "start": "4310096",
    "end": "4316940"
  },
  {
    "text": "That's sort of\nthe thing that you can do with this set\nof behavior diagrams. And then use case analysis.",
    "start": "4316940",
    "end": "4322340"
  },
  {
    "text": "Again, it's mostly focused\non early concept development, stakeholders. How do they interface\nwith the system? Where do they derive value?",
    "start": "4322340",
    "end": "4328790"
  },
  {
    "text": "How does the user\ninteract with the system? Things like that. That's where you put\na use case diagram.",
    "start": "4328790",
    "end": "4334610"
  },
  {
    "text": "Going over to structure,\nthe block definition diagram is where you define the\nstructure of your system.",
    "start": "4334610",
    "end": "4341070"
  },
  {
    "text": "So the logical or\nphysical decomposition, I'll show you an\nexample of this. So if your system\nis a spacecraft,",
    "start": "4341070",
    "end": "4346130"
  },
  {
    "text": "it has various\nsubsystems, if you want to decompose it logically\nas a thermal subsystem, a structure subsystem,\nADCS subsystem,",
    "start": "4346130",
    "end": "4353211"
  },
  {
    "text": "things like that, you can\nalso decompose it physically so your spacecraft has solar\narrays, it has instruments,",
    "start": "4353211",
    "end": "4358590"
  },
  {
    "text": "it has thrusters,\nthings like that. You can represent those types\nof things in a block definition diagram. And then internal\nblock diagram is",
    "start": "4358590",
    "end": "4364940"
  },
  {
    "text": "where you describe the ties\nwith the interfaces between all the components of your system. And this can be at\nvarying different levels",
    "start": "4364940",
    "end": "4370661"
  },
  {
    "text": "of abstraction,\nas I'll show you. Parametric diagram is\nkind of a subdiagram type",
    "start": "4370661",
    "end": "4375710"
  },
  {
    "text": "of the internal block diagram. So you can, again,\nput constraints, mathematical, logical, things\nlike that, on your interfaces",
    "start": "4375710",
    "end": "4381260"
  },
  {
    "text": "and begin to build up the\ninfrastructure for doing computation in the model.",
    "start": "4381260",
    "end": "4386420"
  },
  {
    "text": "And then a packaging diagram\nis not terribly important. It's really focused on the\norganization of your model.",
    "start": "4386420",
    "end": "4392240"
  },
  {
    "text": "How do you scope things? It's kind of a modeling\ndiagram as opposed to a representation\nof your system.",
    "start": "4392240",
    "end": "4397433"
  },
  {
    "text": "Then last of all is the\nrequirements diagram up top. So again, I'll show you\na good example of this. But that's where you represent,\nhow are your requirements",
    "start": "4397434",
    "end": "4403525"
  },
  {
    "text": "related to your system? And then you can see\nhere what's been modified and what's been taken from\nUML and the new diagram types",
    "start": "4403525",
    "end": "4410000"
  },
  {
    "text": "of requirement and parametric. There were a couple\nof diagram types that were eliminated\nfrom UML that were pretty software-specific.",
    "start": "4410000",
    "end": "4417600"
  },
  {
    "text": "I think there is one called the\ndeployment diagram, like how has your software been\ndeployed across various servers",
    "start": "4417600",
    "end": "4423120"
  },
  {
    "text": "or users? Things like that. That's not really-- that's a\npretty software-specific thing, so in a general\nsystem you might not",
    "start": "4423120",
    "end": "4428800"
  },
  {
    "text": "care about that all that much. So that diagram was removed. So let me quickly go\nover some of the syntax.",
    "start": "4428800",
    "end": "4436580"
  },
  {
    "text": "So this is an Interface\nBlock Diagram, an IBD. And this is the type\nof diagram that I find is really interesting\nrepresenting these interfaces.",
    "start": "4436580",
    "end": "4446270"
  },
  {
    "text": "So here's the system\nengineering ontology we typically talk about. So this is basically a\nmodel of an avionics board.",
    "start": "4446270",
    "end": "4452200"
  },
  {
    "text": "So you have things like\nvoltage converters. You have memory,\nvolatile, nonvolatile.",
    "start": "4452200",
    "end": "4457230"
  },
  {
    "text": "We have an FPGA, which is\nour main computational unit. We talk about these as being\nparts of a system in terms",
    "start": "4457230",
    "end": "4464080"
  },
  {
    "text": "of system engineering ontology. Then these are these interfaces\nor these lines right here. So in SysML, the way we\ntalk about it is these",
    "start": "4464080",
    "end": "4471600"
  },
  {
    "text": "are part properties\nof the system. It's kind of like an\ninstantiation type of thing.",
    "start": "4471600",
    "end": "4478270"
  },
  {
    "text": "What we're saying is all of\nthese parts can represent independent of each other. And then you define a\nproperty of that part",
    "start": "4478270",
    "end": "4484840"
  },
  {
    "text": "as being part of\na different part, if that makes any sense at all. So for example, this is a board.",
    "start": "4484840",
    "end": "4490550"
  },
  {
    "text": "This main electronics\nboard is this whole block. And then that has some\nblocks within this block,",
    "start": "4490550",
    "end": "4495580"
  },
  {
    "text": "which represent the subparts\nthat make up the board. And these are called\npart properties of this overall block.",
    "start": "4495580",
    "end": "4502775"
  },
  {
    "text": "We have these green little\nboxes, which are called ports. And again, that's\nto support this kind of system-independent modeling.",
    "start": "4502775",
    "end": "4508960"
  },
  {
    "text": "So you can model like a\nvoltage converter independent of any type of system\nas maybe an input",
    "start": "4508960",
    "end": "4514150"
  },
  {
    "text": "voltage and output voltage. You can define what ranges\nthose are, things like that. And you can model those\ninterfaces using ports.",
    "start": "4514150",
    "end": "4520000"
  },
  {
    "text": "And then these connectors, which\nare called connectors in SysML which represent the\ninterfaces, represent",
    "start": "4520000",
    "end": "4525850"
  },
  {
    "text": "how each part is tied into\nthe kind of larger system. And you could, for\nexample, check that you don't have any empty ports.",
    "start": "4525850",
    "end": "4531820"
  },
  {
    "text": "If a part needs\nan input voltage, you could run a\nscript that checks that all the parts have all\ntheir ports kind of satisfied.",
    "start": "4531820",
    "end": "4539800"
  },
  {
    "text": "That's something you\ncan do with SysML.  So before I get\ninto the case study,",
    "start": "4539800",
    "end": "4545520"
  },
  {
    "text": "I want to talk a little bit\nabout what you're going to see. As Olly said, I work on\nsomething called REXIS, which is the REgolith\nX-Ray Imaging Spectrometer.",
    "start": "4545520",
    "end": "4552239"
  },
  {
    "text": "It's an x-ray\nspectrometer that's flying on NASA's OSIRIS-REx\nasteroid sample return mission.",
    "start": "4552240",
    "end": "4557370"
  },
  {
    "text": "I've been working\non it since 2011, when I was a senior here\nall throughout my master's, and then now for my PhD.",
    "start": "4557370",
    "end": "4563725"
  },
  {
    "text": "Basically we're going\nto measure x-rays that are fluoresced from the\nasteroid surface in order to tell what the elemental\ncomposition of the asteroid is.",
    "start": "4563725",
    "end": "4570660"
  },
  {
    "text": "So that's our main science goal. And that will\nbasically enable us to categorize where\nthe asteroid is",
    "start": "4570660",
    "end": "4577172"
  },
  {
    "text": "within the different\nmeteorite types that have been defined on the ground\nbased upon existing meteorite samples.",
    "start": "4577172",
    "end": "4583350"
  },
  {
    "text": "So what I did for\nmy master's thesis was modeled the design\nhistory of REXIS.",
    "start": "4583350",
    "end": "4588410"
  },
  {
    "text": "So how has our design evolved\nfrom the very beginning where it was very open\nended, very abstract,",
    "start": "4588410",
    "end": "4595460"
  },
  {
    "text": "and you'll see this,\nto the current design, which current in this case\nwas CDR which was over a year",
    "start": "4595460",
    "end": "4602300"
  },
  {
    "text": "ago now. Right now the current\nstate of REXIS is we're almost ready to\nmount to the spacecraft.",
    "start": "4602300",
    "end": "4608130"
  },
  {
    "text": "So it's very exciting. Just to give you an\nidea of a timeline, this is something I'm sure Olly\nwill talk about in this course,",
    "start": "4608130",
    "end": "4615740"
  },
  {
    "text": "is the flow through the\nsystem development lifecycles. So we have a system\nrequirements review back in January of 2012, system--",
    "start": "4615740",
    "end": "4622120"
  },
  {
    "text": "I think it's definition\nreview, April 2012, preliminary design\nreview January of 2013,",
    "start": "4622120",
    "end": "4628130"
  },
  {
    "text": "and then critical design\nreview February of 2014. So I created models at each of\nthese design points in SysML",
    "start": "4628130",
    "end": "4633924"
  },
  {
    "text": "and looked at, what are the\nlessons we could have learned? We didn't use the\nSysML in REXIS. I was kind of looking\nback historically,",
    "start": "4633924",
    "end": "4639570"
  },
  {
    "text": "what if we had used it? Could we have designed\nour system better in any sort of way?",
    "start": "4639570",
    "end": "4645840"
  },
  {
    "text": "So here is kind of\na CAD representation of how a design evolved. And I think you can\nkind of get the idea. Back at SRR, a lot of\nthings we didn't really",
    "start": "4645840",
    "end": "4652939"
  },
  {
    "text": "know what they would look like. We didn't know what the\ninterfaces would be. We didn't know what\nall the parts would be.",
    "start": "4652939",
    "end": "4658340"
  },
  {
    "text": "We had a little more\ndevelopment for SDR. You can see there's more arrows. The CAD is a little\nbit more detailed.",
    "start": "4658340",
    "end": "4664250"
  },
  {
    "text": "PDR, we had even more detail. This was actually like\na buildable design. This turned out to\nnot even be buildable.",
    "start": "4664250",
    "end": "4670760"
  },
  {
    "text": "And then we had more\nevolution between PDR and CDR to get to pretty much\nwhere the design is.",
    "start": "4670760",
    "end": "4676670"
  },
  {
    "text": "There's actually\nbeen some evolution after this as well, as sometimes\nhappens with a new system.",
    "start": "4676670",
    "end": "4682299"
  },
  {
    "text": "But you can see just\ngraphically kind of the increase in level\nof detail and level of fidelity of the\nstate of our system",
    "start": "4682299",
    "end": "4688255"
  },
  {
    "text": "throughout its\ndevelopment cycle. And I'll show you that and how\nthat looks in the SysML model as well.",
    "start": "4688255",
    "end": "4694584"
  },
  {
    "text": "So one of the things you can\ndo if you have a SysML model, is as I talked about,\nyou can run queries on it and pull out information that's\nvery difficult or impossible",
    "start": "4694584",
    "end": "4701319"
  },
  {
    "text": "to get with our current\ndeployment practices. So this is just looking at\nthe different subassemblies",
    "start": "4701319",
    "end": "4706510"
  },
  {
    "text": "within REXIS. What are the number of parts\nin each of the subassemblies? So you can see the general\ntrend is up for all of them,",
    "start": "4706510",
    "end": "4711861"
  },
  {
    "text": "as you would expect. Some jump up very high. Some kind of stay\nbasically where they were.",
    "start": "4711861",
    "end": "4717694"
  },
  {
    "text": "But in general,\nthey all increase. And this is something\nyou might be able to do with looking\nat like a parts list or something like that\nwith current methodologies.",
    "start": "4717694",
    "end": "4724660"
  },
  {
    "text": "But it would be very hard to\nget this information, which is the number of\nports per assembly. So each interface has two ports.",
    "start": "4724660",
    "end": "4729920"
  },
  {
    "text": "So these numbers divided\nby 2 basically equal the number of interfaces that\nwe have in each subassembly. And you can see, again,\nthere's a general trend",
    "start": "4729920",
    "end": "4736208"
  },
  {
    "text": "of increasing number of ports\nas you go through the lifecycle. So this is a piece\nof information",
    "start": "4736208",
    "end": "4741949"
  },
  {
    "text": "you might want to use\nif you want to manage the complexity of your system. And you say, this\nsubassembly is getting-- it's way too many interfaces,\nway too many parts.",
    "start": "4741949",
    "end": "4749220"
  },
  {
    "text": "It's way too complex. We need to think about\nhow we've logically arranged our system\nand maybe how can we rearrange it to make it more\nunderstandable and easier",
    "start": "4749220",
    "end": "4755950"
  },
  {
    "text": "to work with. And then you can divide the two. And you end up looking\nat how many-- this is ports per part in\neach subassembly at each",
    "start": "4755950",
    "end": "4764020"
  },
  {
    "text": "of the design reviews. And you can see trends here,\ntoo, which are interesting. So you can see in the\nbeginning we didn't really",
    "start": "4764020",
    "end": "4769510"
  },
  {
    "text": "know what we were doing. Some of these had a lot\nof parts, ports per part. Some of these had very few. They all ended up\nstabilizing kind",
    "start": "4769510",
    "end": "4775860"
  },
  {
    "text": "of in between the three and\nfive ports per part range. And then you can look\nat the literature and say, well,\ntypically systems tend",
    "start": "4775860",
    "end": "4782679"
  },
  {
    "text": "to be between five and\nsix ports per part. So what does that mean? Does that mean that our system\ndidn't model it correctly?",
    "start": "4782680",
    "end": "4788742"
  },
  {
    "text": "That's one possibility. It didn't model it to the lowest\nlevel of fidelity possible. Does it mean that our\nsystem is too simple?",
    "start": "4788742",
    "end": "4795552"
  },
  {
    "text": "Does it mean that\nwe're missing something that we haven't thought about? Does it mean that\nour system, which",
    "start": "4795552",
    "end": "4800740"
  },
  {
    "text": "was intended to be simple\nand cheap and implementable by students is actually\nachieving that goal because it's beneath what\nyou typically expect?",
    "start": "4800740",
    "end": "4807460"
  },
  {
    "text": "Those are the types of questions\nyou can ask with this data. But this data is not easy to get\nwith the current methodologies.",
    "start": "4807460",
    "end": "4812680"
  },
  {
    "text": "So this kind of very\nsimple queries you can do gives you power on managing\ncomplexity in your system.",
    "start": "4812680",
    "end": "4819490"
  },
  {
    "text": "So let me now transition\nquickly to the demo. Let's see.",
    "start": "4819490",
    "end": "4825330"
  },
  {
    "start": "4825330",
    "end": "4845650"
  },
  {
    "text": "There's no sound. AUDIENCE: I know, but\nI need to sync it up to make it [INAUDIBLE]. ",
    "start": "4845650",
    "end": "4860730"
  },
  {
    "text": "OLIVIER DE WECK: So while Mark\nis setting up for the demo, are there any questions\nabout SysML so far,",
    "start": "4860730",
    "end": "4866185"
  },
  {
    "text": "any observations you guys have? ",
    "start": "4866185",
    "end": "4871450"
  },
  {
    "text": "Maybe at EPFL. Do you see the similarities\nand differences between OPM and SysML? ",
    "start": "4871450",
    "end": "4878849"
  },
  {
    "text": "What's the biggest\ndifference between the two? There's two really\nimportant differences.",
    "start": "4878850",
    "end": "4884404"
  },
  {
    "text": " GUEST SPEAKER: No questions? Yes. AUDIENCE: I was going to ask--",
    "start": "4884404",
    "end": "4890010"
  },
  {
    "text": "OLIVIER DE WECK: Hang on. Hang on. Is there anybody at EPFL who\nwants to comment on this? ",
    "start": "4890010",
    "end": "4900570"
  },
  {
    "text": "AUDIENCE: No, there is\nno comment from EPFL. OLIVIER DE WECK: OK. Good. That's fine. That's fine.",
    "start": "4900570",
    "end": "4906770"
  },
  {
    "text": "Mark, are you set up? GUEST SPEAKER: Almost. ",
    "start": "4906770",
    "end": "4914077"
  },
  {
    "text": "OLIVIER DE WECK:\nWhat I would say is-- so first of all, OPM has\nonly one type of diagram,",
    "start": "4914077",
    "end": "4919890"
  },
  {
    "text": "and then you go really deep,\nsort of a deep hierarchy. SysML has nine different\ntypes of diagrams",
    "start": "4919890",
    "end": "4925880"
  },
  {
    "text": "split between behavioral\nand structural. So that's one difference. And then the other is that\nthe SysML is fundamentally",
    "start": "4925880",
    "end": "4932489"
  },
  {
    "text": "object-oriented because it comes\nfrom object-oriented thinking and software, whereas OPM\nhas objects and processes",
    "start": "4932490",
    "end": "4940140"
  },
  {
    "text": "sort of at the same level. Those are two of the most\nimportant differences. ",
    "start": "4940140",
    "end": "4947522"
  },
  {
    "text": "MARK CHODAS: All right. So what I'm showing you--\ncan everyone see the screen? Just let me know if you\ncan't see the screen.",
    "start": "4947522",
    "end": "4953160"
  },
  {
    "text": "What I'm showing you right now\nis a tool called MagicDraw. There are basically a\nvariety of tools provided",
    "start": "4953160",
    "end": "4958530"
  },
  {
    "text": "by commercial vendors that\nenable you to build and work with a SysML model. So SysML is a language, and\nthen it's implemented in tools.",
    "start": "4958530",
    "end": "4965130"
  },
  {
    "text": "And this just happens to be\none that's fairly well, fairly widely utilized. Unfortunately, it's\nquite expensive.",
    "start": "4965130",
    "end": "4971679"
  },
  {
    "text": "But anyway, so what I'm\nshowing you right now, and this is going to be a little\nbit difficult because, as you can see, you need a big screen.",
    "start": "4971680",
    "end": "4979070"
  },
  {
    "text": "What I'm showing you right\nnow is a requirements diagram. So you can see that right here. It's a requirements diagram.",
    "start": "4979070",
    "end": "4984539"
  },
  {
    "text": "And each of these blocks, as\nyou can see by the tag here, is a requirement.",
    "start": "4984540",
    "end": "4990090"
  },
  {
    "text": "So this is one of our\noperating criterias. Well operating temperature\nof all our components shall be maintained\nwithin operability limits.",
    "start": "4990090",
    "end": "4997380"
  },
  {
    "text": "Straightforward requirement. And you can create these\nsatisfy relationships between that requirement\nand the components",
    "start": "4997380",
    "end": "5004340"
  },
  {
    "text": "in the system that must\nsatisfy that requirement. So right now, this is being done\nat SRR, as you can see up here.",
    "start": "5004340",
    "end": "5010840"
  },
  {
    "text": "So this is very\nearly in the design. So we don't have it broken down\nfully to all the components.",
    "start": "5010840",
    "end": "5017030"
  },
  {
    "text": "But we have-- here is our\nmain electronics board. It has to satisfy\nthat requirement. Here's our radiation cover. It has to satisfy\nthat requirement.",
    "start": "5017030",
    "end": "5023480"
  },
  {
    "text": "So you can tie these two\nthings, the requirement and the part of the system that\nmust satisfy the requirement. And here I've tied it to parts.",
    "start": "5023480",
    "end": "5030110"
  },
  {
    "text": "So these are called\nblocks, which are the fundamental unit\nin SysML, is a block. So these represent\nparts of our system.",
    "start": "5030110",
    "end": "5036170"
  },
  {
    "text": "But you could tie it to\na property of that part if you wanted to. So then you get\ninto the situation I talked about\nearlier where you have",
    "start": "5036170",
    "end": "5042290"
  },
  {
    "text": "the requirement is on the mass\nof it must be less than this. You can tie it to the\nmass of the system itself, as opposed to the system.",
    "start": "5042290",
    "end": "5048251"
  },
  {
    "text": "You can tie it to the actual\nproperty, which is very useful. So let me quickly show you\none of the cool things.",
    "start": "5048251",
    "end": "5059810"
  },
  {
    "text": "If I delete these requirements,\nI'm not actually-- you can see there's\nno requirements. I'm not actually deleting\nthem from the system itself,",
    "start": "5059810",
    "end": "5065800"
  },
  {
    "text": "but I'm just doing it as I'm\nremoving it from the diagram. But if you wanted\nto, you should be",
    "start": "5065800",
    "end": "5072159"
  },
  {
    "text": "able to look at related elements\nof the different blocks.",
    "start": "5072160",
    "end": "5079200"
  },
  {
    "text": "So I just clicked\non a block, and I can choose to show all the\nrequirements, all the things",
    "start": "5079200",
    "end": "5084620"
  },
  {
    "text": "that are satisfied, the\nrequirements of that component of the system satisfies.",
    "start": "5084620",
    "end": "5089869"
  },
  {
    "text": "And these requirements pop up. So this is showing how\nthe diagrams themselves",
    "start": "5089870",
    "end": "5096422"
  },
  {
    "text": "aren't the model. There's actually\nbackend to the model. And you can kind of\nwork in the diagram and show or hide things\nhowever you want.",
    "start": "5096422",
    "end": "5102960"
  },
  {
    "text": "But the information is actually\nkept behind the diagram, so to speak.",
    "start": "5102960",
    "end": "5109120"
  },
  {
    "text": "So my research looked\ninto typologies. So let me just kind of show you\na little bit about what I did.",
    "start": "5109120",
    "end": "5115300"
  },
  {
    "text": "So this is a block definition\ndiagram, again, defining all the parts of your system. And I just want to give\nyou kind of a high level",
    "start": "5115300",
    "end": "5120660"
  },
  {
    "text": "idea of the type of\nthings that we saw. So it's big, first\nof all, very big.",
    "start": "5120660",
    "end": "5132110"
  },
  {
    "text": "These are all the\nparts of the system. So we start high like\nthe mission context, and the mission\ncontext contains things",
    "start": "5132110",
    "end": "5137574"
  },
  {
    "text": "like the environment and the\nspacecraft and then REXIS. And then you can\nbreak down REXIS. We have these various\nsubassemblies broken down",
    "start": "5137574",
    "end": "5143820"
  },
  {
    "text": "to parts. And that's how you get\nthis tree structure. And then this tree structure\ncan be tied together.",
    "start": "5143820",
    "end": "5150470"
  },
  {
    "text": "I can zoom in, but\nit's big again. So these are all the\nparts of our system. Let me give you an example.",
    "start": "5150470",
    "end": "5158320"
  },
  {
    "text": "So we have a couple\nof boards that we call our detector electronics. And those detector electronics\nhave various ports.",
    "start": "5158320",
    "end": "5165327"
  },
  {
    "text": "One thing they had to\ndo, they had this port in here and this interface here,\nwhich connects to our CCDs.",
    "start": "5165327",
    "end": "5170850"
  },
  {
    "text": "So this is showing how you can\nbuild interfaces and SysML. So here are the green\nboxes, again, or the ports.",
    "start": "5170850",
    "end": "5176699"
  },
  {
    "text": "The lines are the\nconnectors, and they're defining all the interfaces. And you can see at a high\nlevel how complicated things",
    "start": "5176700",
    "end": "5183660"
  },
  {
    "text": "get very quickly. This is the earliest, most\nabstract version of our design. And it already has a\nlot of complication.",
    "start": "5183660",
    "end": "5190920"
  },
  {
    "text": "One thing you can do-- I talked about running scripts. I'll show you how that works. It's quite easy.",
    "start": "5190920",
    "end": "5196860"
  },
  {
    "text": " So I just ran a script\non the model that",
    "start": "5196860",
    "end": "5202000"
  },
  {
    "text": "told me to find the number\nof parts in the scope that I defined and\nthe number of ports.",
    "start": "5202000",
    "end": "5207542"
  },
  {
    "text": "And here's the output of\nthat model right here. So the script itself is\nnot even very complicated.",
    "start": "5207542",
    "end": "5213170"
  },
  {
    "text": "It's like 50, 60 lines of code. And immediately I can pull out\nhow many ports, how many parts,",
    "start": "5213170",
    "end": "5218620"
  },
  {
    "text": "things like that,\ninformation down my system. So let me kind of take you\nbriefly through the development",
    "start": "5218620",
    "end": "5223990"
  },
  {
    "text": "process. So that was, again, the\nhighest, the most abstract, the earliest version\nof our system, SRR.",
    "start": "5223990",
    "end": "5229619"
  },
  {
    "text": "This is SDR. You can see it's starting\nto get a bit more complex.",
    "start": "5229620",
    "end": "5236830"
  },
  {
    "text": "And then you can go\nover to PDR, and it starts to get really scary. ",
    "start": "5236830",
    "end": "5245699"
  },
  {
    "text": "And you can go to CDR,\nand it's just a nightmare. So I created all these systems,\nall these models by hand.",
    "start": "5245700",
    "end": "5252429"
  },
  {
    "text": "You can actually build\nthe model with the script, if you would like. You can basically do things\nlike define a pattern",
    "start": "5252430",
    "end": "5259690"
  },
  {
    "text": "and then apply that pattern\nto all the parts of that type. That's all possible\nthrough the API.",
    "start": "5259690",
    "end": "5265180"
  },
  {
    "text": "And just to show you how much\nof a nightmare it was at CDR, let me run the same\nscript on the CDR model.",
    "start": "5265180",
    "end": "5274470"
  },
  {
    "text": "You have 230 parts\nand 900 interfaces. And this was not even\nmodeling to the lowest level of fidelity possible.",
    "start": "5274470",
    "end": "5280500"
  },
  {
    "text": "I didn't, for example,\nmodel all the components, all the capacitors,\nresistors, op amps, and stuff on the board.",
    "start": "5280500",
    "end": "5286360"
  },
  {
    "text": "And now you can already\nsee it's quite large. Kind of the idea\nbehind these models",
    "start": "5286360",
    "end": "5292080"
  },
  {
    "text": "would be to extend this to the\nlowest level in a real system and use this, basically use\nall the capabilities that you",
    "start": "5292080",
    "end": "5298260"
  },
  {
    "text": "had with the model\nto really manage your complexity in a way that\nis just not possible currently. And there's no\nway you can really",
    "start": "5298260",
    "end": "5303685"
  },
  {
    "text": "mentally keep track of\nall these interfaces and understanding how\nyour system is working. So having this\nmodeling capability",
    "start": "5303685",
    "end": "5308856"
  },
  {
    "text": "and querying capability is\nreally, really powerful. Yeah? AUDIENCE: What was used\nduring REXIS for the systems",
    "start": "5308856",
    "end": "5317350"
  },
  {
    "text": "engineering? You had applied\nthis after the fact. So what was used to create these\nblock diagram or [INAUDIBLE]..",
    "start": "5317350",
    "end": "5326257"
  },
  {
    "text": "MARK CHODAS: Do you mean during\nwhen we were developing REXIS? AUDIENCE: Yeah. MARK CHODAS: We basically\ndidn't have this.",
    "start": "5326257",
    "end": "5331500"
  },
  {
    "text": "So we were relying-- as you would typically do upon\nthe capabilities of the system engineer or the team--\nyou'd to have documents.",
    "start": "5331500",
    "end": "5338070"
  },
  {
    "text": "We have a ton of documents. But I was talking about how\nthings weren't buildable. I found a situation\nwhere because of the way",
    "start": "5338070",
    "end": "5345263"
  },
  {
    "text": "we had done our\nthermal system, we were dumping spacecraft\nheat to space, which you don't want to do.",
    "start": "5345264",
    "end": "5351210"
  },
  {
    "text": "I can explain why, but\nyou don't want to do that. And that's something we\ndidn't realize at the time.",
    "start": "5351210",
    "end": "5356329"
  },
  {
    "text": "If we had tried to\nbuild it, we would have had this\nproperty of the system that we didn't know\nactually existed until I went back and\nlooked at the model.",
    "start": "5356329",
    "end": "5363030"
  },
  {
    "text": "So we definitely miss things. And this should have\nimproved the design process, if we had been using it.",
    "start": "5363030",
    "end": "5369460"
  },
  {
    "text": "OLIVIER DE WECK: Great, so\nMark, sort of to wrap up, because we've got to switch\nover to [INAUDIBLE],, what's",
    "start": "5369460",
    "end": "5374600"
  },
  {
    "text": "your recommendation for, let's\nsay, students in the class got sort of intrigued by SysML.",
    "start": "5374600",
    "end": "5380330"
  },
  {
    "text": "What's the next step? MARK CHODAS: There's a\ncouple different ways. Certainly if you're\ninterested, let me know, and I can\ngive you resources",
    "start": "5380330",
    "end": "5387429"
  },
  {
    "text": "to further your understanding. As I said, working\nwith these tools can be expensive\nto get these tools.",
    "start": "5387430",
    "end": "5393717"
  },
  {
    "text": "So I can help you understand\nwhat that would take. ",
    "start": "5393717",
    "end": "5399250"
  },
  {
    "text": "There are beginning to\nbe some companies that will do like SysML training\ncourses that will sit down",
    "start": "5399250",
    "end": "5406300"
  },
  {
    "text": "for a day or a week\nand teach you SysML, basically, how to work with the\nmodel, how to build the model.",
    "start": "5406300",
    "end": "5411544"
  },
  {
    "text": "I took one of those courses. It was really great. Yeah, talk to me if\nyou're interested, and I can steer you\ndown the right path.",
    "start": "5411544",
    "end": "5418059"
  },
  {
    "text": "OLIVIER DE WECK:\nGreat, thanks, Mark. MARK CHODAS: Sure. OLIVIER DE WECK: Very good. So we did in 20 minutes what\nusually takes about a week,",
    "start": "5418059",
    "end": "5425440"
  },
  {
    "text": "right? MARK CHODAS: There's\na lot more depth. There's a lot more depth. OLIVIER DE WECK: Great, so\nwe're going to switch over now",
    "start": "5425440",
    "end": "5431925"
  },
  {
    "text": "to Modelica, which I think is-- we're going to maybe run a\ncouple of minutes over today,",
    "start": "5431925",
    "end": "5437980"
  },
  {
    "text": "but I think it's important\nwe cover all three languages. So let's get the slides back up.",
    "start": "5437980",
    "end": "5445369"
  },
  {
    "text": "And I'm going to\nswitch here to Narek. He's another doctoral\nstudent in the group. And so introduce yourself and\nthen tell us about Modelica.",
    "start": "5445370",
    "end": "5456513"
  },
  {
    "text": "NAREK SHOUGARIAN: Thank you. OLIVIER DE WECK: Are\nyou using this computer for slides or this computer? NAREK SHOUGARIAN: For the demo,\nI'm going to use this one.",
    "start": "5456514",
    "end": "5463707"
  },
  {
    "text": "OLIVIER DE WECK: This one? NAREK SHOUGARIAN: This one. OLIVIER DE WECK: This one. ",
    "start": "5463707",
    "end": "5475054"
  },
  {
    "text": "NAREK SHOUGARIAN: Thank you. So hello, everyone. My name is Narek. I'm a doctoral student\nat AeroAstro here.",
    "start": "5475054",
    "end": "5480720"
  },
  {
    "text": "My background is in\ngas turbine engines, and specifically\nI've been looking at concept generation of gas\nturbine engines, automated",
    "start": "5480720",
    "end": "5487110"
  },
  {
    "text": "concept generation. And the way I got\nacquainted with Modelica was that I needed to be\nable to rapidly reconfigure",
    "start": "5487110",
    "end": "5494490"
  },
  {
    "text": "different concepts and\nsimulate them mathematically, do physics-based simulations.",
    "start": "5494490",
    "end": "5499890"
  },
  {
    "text": "So in contrast to the\nfirst two languages, Modelica is a lot\nmore about rapidly",
    "start": "5499890",
    "end": "5506100"
  },
  {
    "text": "being able to build\nphysical models of systems and reconfiguring them and\nreusing them for later on.",
    "start": "5506100",
    "end": "5511659"
  },
  {
    "text": " So like I mentioned,\nModelica is primarily",
    "start": "5511660",
    "end": "5517600"
  },
  {
    "text": "about modeling physics-based\nmodeling of systems and rapidly being able to reuse\nmodels and reconfigure them.",
    "start": "5517600",
    "end": "5524560"
  },
  {
    "text": "It's a language, again. It's not a tool like the first\ntwo that you heard about. There are many different tools\nwhich implement this language.",
    "start": "5524560",
    "end": "5532060"
  },
  {
    "text": "But I'm going to start\noff with just describing how the language works\nand then go on to describe which tools that you can use.",
    "start": "5532060",
    "end": "5537699"
  },
  {
    "text": "In contrast to SysML,\nthere are a couple of really good free tools\nthat you can use and rapidly get into.",
    "start": "5537700",
    "end": "5542949"
  },
  {
    "text": "And there are a lot\nof libraries that you can use with hundreds,\neven thousands, of actually basic components\nthat you can use for modeling.",
    "start": "5542950",
    "end": "5551020"
  },
  {
    "text": "So it's a declarative language. And what I mean\nby declarative is that in sequential\nsort of programming,",
    "start": "5551020",
    "end": "5558699"
  },
  {
    "text": "you write commands. And you make assignments\nto various parameters. Here, you just describe\nthe governing equations",
    "start": "5558700",
    "end": "5565750"
  },
  {
    "text": "of the components\nyou want to simulate. And there's no particular\norder in which you do this.",
    "start": "5565750",
    "end": "5571300"
  },
  {
    "text": "The models are acausal. There's no direction to flows. All you really need to do is\ndescribe what ports, like Mark",
    "start": "5571300",
    "end": "5578470"
  },
  {
    "text": "mentioned. It's similar in this\nsituation-- what kind of ports you have, what\nkind of interfaces the components can have\nwith other components,",
    "start": "5578470",
    "end": "5584710"
  },
  {
    "text": "and the governing equations and\nthe parameters and variables. It's a multi-domain\nmodeling language,",
    "start": "5584710",
    "end": "5590107"
  },
  {
    "text": "so it's like agnostic\nto what kind of domain you're working in. It's not particular to\nelectrical engineering. For example, I'm\ngoing to be showing",
    "start": "5590107",
    "end": "5596140"
  },
  {
    "text": "an electrical\nengineering example and also show a gas\nturbine engine example with aeroelastic vibrations.",
    "start": "5596140",
    "end": "5602533"
  },
  {
    "text": "So you don't necessarily--\nyou're not attached to any specific domain. It's also\nobject-orientated, and it",
    "start": "5602534",
    "end": "5608679"
  },
  {
    "text": "enables you to decompose\nsystems into subsystems or recombine them and look\nat them at various levels",
    "start": "5608680",
    "end": "5616570"
  },
  {
    "text": "of abstraction. It's designed to be efficient. So this is a quote from\nProfessor Peter Fritzen",
    "start": "5616570",
    "end": "5622300"
  },
  {
    "text": "at the Linkopings University. So these are just about\nthe scale of problems",
    "start": "5622300",
    "end": "5627610"
  },
  {
    "text": "that you can solve with\nthe Modelica language. Obviously, it depends on\nwhat kind of equations you're talking about,\nbut it's designed",
    "start": "5627610",
    "end": "5635500"
  },
  {
    "text": "to be a very efficient\nway of simulating systems.",
    "start": "5635500",
    "end": "5640540"
  },
  {
    "text": "So I really want to\ntalk a little bit more about this idea of\nacausal modeling that I mentioned before.",
    "start": "5640540",
    "end": "5646640"
  },
  {
    "text": "So on the left hand\nside is an assignment. And that's typically what you\ndo when you program in MATLAB,",
    "start": "5646640",
    "end": "5653530"
  },
  {
    "text": "just the MATLAB normal scripts. f is assigned to ma or p is\nassigned the value of rho rt",
    "start": "5653530",
    "end": "5659380"
  },
  {
    "text": "for the equation\nof state of a gas. And what that means\nis that you know what the mass and\nacceleration are,",
    "start": "5659380",
    "end": "5664780"
  },
  {
    "text": "and you figure out the force. You assign that\nvalue to the force. In Modelica, there's\nalmost none of this.",
    "start": "5664780",
    "end": "5670505"
  },
  {
    "text": "It's equations not assignments. And what I mean by\nthat is this equation can be written in any which\nway, as long as your system",
    "start": "5670505",
    "end": "5676840"
  },
  {
    "text": "has the same number of\nequations as unknowns. The tool that you're using\nwill interpret the language",
    "start": "5676840",
    "end": "5683230"
  },
  {
    "text": "and will solve your problem. So you can write this\nin any which way you want in any order. As long as your problem\nis properly constrained,",
    "start": "5683230",
    "end": "5691150"
  },
  {
    "text": "the tool that you're\nusing will interpret it and solve the problem for you. ",
    "start": "5691150",
    "end": "5698050"
  },
  {
    "text": "So just to go into a little bit\nmore detail, all of Modelica's",
    "start": "5698050",
    "end": "5704230"
  },
  {
    "text": "and also other acausal\nmodeling language that I'll mention in a little bit-- which one of them is Simscape--",
    "start": "5704230",
    "end": "5711460"
  },
  {
    "text": "have essentially three parts. They're designed to\nbe extremely simple. The first, like Mark\nmentioned, are ports.",
    "start": "5711460",
    "end": "5719810"
  },
  {
    "text": "It's essentially identical\nto SysML in a way. Ports are the ways\nwith which components",
    "start": "5719810",
    "end": "5727600"
  },
  {
    "text": "can share information, material,\nor energy, for example. You can define any\nkind of port you want.",
    "start": "5727600",
    "end": "5733752"
  },
  {
    "text": "All you need to really do is\ndefine what kind of parameters it carries-- like for gas, for\nexample, temperature, pressure,",
    "start": "5733752",
    "end": "5738793"
  },
  {
    "text": "and mass flow; or for electrical\nports, voltage and current. The second part of\nany kind of model",
    "start": "5738793",
    "end": "5745000"
  },
  {
    "text": "that you're building in\nModelica or Simscape, which I'll mention\na little later, are variables and parameters.",
    "start": "5745000",
    "end": "5750300"
  },
  {
    "text": "So you just declare those. And the third part are\ngoverning equations. The point is that\nthere's nothing else.",
    "start": "5750300",
    "end": "5755380"
  },
  {
    "text": "It's just that. And I'll just brief briefly\ngo through a very, very simple example.",
    "start": "5755380",
    "end": "5761640"
  },
  {
    "text": "So for example, a capacitor. This is the entire\ncode for a capacitor,",
    "start": "5761640",
    "end": "5766710"
  },
  {
    "text": "and this is what will generate\na visual image of a capacitor with the correct ports for you.",
    "start": "5766710",
    "end": "5773640"
  },
  {
    "text": "First you have pins that\ncarry voltage and current. So the key thing to notice here\nis that there are fundamentally",
    "start": "5773640",
    "end": "5781739"
  },
  {
    "text": "two types of variables-- flow\nvariables and normal variables here.",
    "start": "5781740",
    "end": "5786960"
  },
  {
    "text": "Flow variables are ones\nfor which the Kirchoff's current law applies. So mass flow, for\nexample, every time",
    "start": "5786960",
    "end": "5793619"
  },
  {
    "text": "you connect 15\ncomponents together in a network, mass\nflow into that network needs to be conserved.",
    "start": "5793620",
    "end": "5799240"
  },
  {
    "text": "So the sum of mass flows\ninto any node has to be zero. That doesn't apply to\nthe standard variables.",
    "start": "5799240",
    "end": "5806774"
  },
  {
    "text": " So then you essentially define\nthe parameters, the variables.",
    "start": "5806774",
    "end": "5814650"
  },
  {
    "text": "And you need to define\nthe governing equations. And that's the\ncapacitor for you. There are slightly more\ncomplicated components",
    "start": "5814650",
    "end": "5821040"
  },
  {
    "text": "that you can use, for example\na pressure drop component. Did I lose my sharing?",
    "start": "5821040",
    "end": "5826760"
  },
  {
    "text": "No. In this case, the main thing\nto take away from this one",
    "start": "5826760",
    "end": "5832170"
  },
  {
    "text": "is that if you have\ncomplicated mathematics describing the fluid\nmechanics in a component, you can actually\ninitialized with one model",
    "start": "5832170",
    "end": "5839489"
  },
  {
    "text": "and then go to a full\nturbulent simulation. That's what this is doing here.",
    "start": "5839490",
    "end": "5845220"
  },
  {
    "text": "So just to get to the tool side\nof the equation, the language I",
    "start": "5845220",
    "end": "5851450"
  },
  {
    "text": "just showed you, it's the\nsame across all the tools. But there are many\ndifferent tools which you can use free and\ncommercial to actually run",
    "start": "5851450",
    "end": "5858710"
  },
  {
    "text": "these models. The main one that you'll be\nusing if you want to get deeper",
    "start": "5858710",
    "end": "5864770"
  },
  {
    "text": "into this is OpenModelica. It's free. It's actually become\nquite user-friendly.",
    "start": "5864770",
    "end": "5870870"
  },
  {
    "text": "And there's a link in the slides\nfrom which you can download it. There's one from Wolfram.",
    "start": "5870870",
    "end": "5877130"
  },
  {
    "text": "It's integrated\nwith Mathematica, which is quite useful. And there's a free\ntrial of it as well.",
    "start": "5877130",
    "end": "5883040"
  },
  {
    "text": "There's Dymola. There are other ones. But mainly, I think\nOpenModelica is the one that you guys will be using.",
    "start": "5883040",
    "end": "5889544"
  },
  {
    "text": "OLIVIER DE WECK: OK,\nso in other words, I think we're going to\nwrap up and then have you back next week.",
    "start": "5889544",
    "end": "5894760"
  },
  {
    "text": "NAREK SHOUGARIAN: OK. OLIVIER DE WECK: Are\nyou around next week? NAREK SHOUGARIAN:\nYeah, yeah. sure. ",
    "start": "5894760",
    "end": "5900269"
  },
  {
    "text": "OLIVIER DE WECK:\nJust to stay around. So basically we're going to\nfinish this lecture next week.",
    "start": "5900269",
    "end": "5907390"
  },
  {
    "text": "I think it's important enough\nthat you really see the demo and see sort of the-- and it actually ties in kind of\nnicely with next week's topic",
    "start": "5907390",
    "end": "5915250"
  },
  {
    "text": "is concept generation. This is the next step in the V.\nAnd since Narek, your research",
    "start": "5915250",
    "end": "5920619"
  },
  {
    "text": "is also on concept generation,\nit'll tie in nicely. So I think we're going\nto stop here for today.",
    "start": "5920620",
    "end": "5927110"
  },
  {
    "text": "So you heard about the general\nidea of system modeling languages that are rigorous,\nthat have ontology, syntax",
    "start": "5927110",
    "end": "5934150"
  },
  {
    "text": "and, semantics. There's different of these that\nhave been proposed, developed. Some are used more than others.",
    "start": "5934150",
    "end": "5940700"
  },
  {
    "text": "There's really important\ndifferences between them. So OPM is very conceptual. SysML is based on UML and\nhas these different type",
    "start": "5940700",
    "end": "5949900"
  },
  {
    "text": "of diagrams and can\nreally help you flesh out your design in more detail. And then Modelica allows\nyou to build these blocks.",
    "start": "5949900",
    "end": "5957100"
  },
  {
    "text": "It's acausal or declarative. And you can actually simulate\nthe physics of the system",
    "start": "5957100",
    "end": "5963520"
  },
  {
    "text": "pretty readily. So the big picture here,\njust to wrap up here,",
    "start": "5963520",
    "end": "5969250"
  },
  {
    "text": "the big picture\nis the following. And we'll come back\nto this next week.",
    "start": "5969250",
    "end": "5974750"
  },
  {
    "text": "The big picture is basically\nthat system engineering is in a transition phase.",
    "start": "5974750",
    "end": "5981880"
  },
  {
    "text": "The classic way of doing\nsystem engineering really for the last 50 years is on\nthe left, document-centric.",
    "start": "5981880",
    "end": "5988630"
  },
  {
    "text": "Write your requirements. Do your drawings. Even CAD, you know,\ncomputer-aided design,",
    "start": "5988630",
    "end": "5994510"
  },
  {
    "text": "is great, but it\nonly essentially does the mechanical\npart of the design. And so the result of that\nis as you get-- even REXIS,",
    "start": "5994510",
    "end": "6002400"
  },
  {
    "text": "REXIS is a box, like\nshoe-box size, basically. And it's going to fit on\na much bigger spacecraft.",
    "start": "6002400",
    "end": "6008910"
  },
  {
    "text": "And you saw how much\ncomplexity is there. And it gets very, very difficult\nto manage all this information,",
    "start": "6008910",
    "end": "6014700"
  },
  {
    "text": "to prevent errors, oversights,\nany change that you make. It doesn't propagate\nautomatically",
    "start": "6014700",
    "end": "6021210"
  },
  {
    "text": "in these documents. So the transition is\nhappening to the right side,",
    "start": "6021210",
    "end": "6026360"
  },
  {
    "text": "a model-centric way to\ndo system engineering. And think of\npaperless engineering.",
    "start": "6026360",
    "end": "6033090"
  },
  {
    "text": "Everything you're\ndoing is in a model. The models are linked. The models are executable.",
    "start": "6033090",
    "end": "6038940"
  },
  {
    "text": "The models automatically\npropagate any changes that you make in\nrequirements or design.",
    "start": "6038940",
    "end": "6044910"
  },
  {
    "text": "We're not quite there yet. But that is where\nthings are moving. And so keep that in mind.",
    "start": "6044910",
    "end": "6051780"
  },
  {
    "text": "So there's no new\nassignment this week. So next week, we have A-2,\nwhich is do, the requirements.",
    "start": "6051780",
    "end": "6056987"
  },
  {
    "text": "Please let us know if you\nhave any-- we're here for you. So I'm going to have office\nhours now on the WebEx.",
    "start": "6056987",
    "end": "6062369"
  },
  {
    "text": "You have the link.  If you have any\nquestions about A-2,",
    "start": "6062370",
    "end": "6067600"
  },
  {
    "text": "don't be shy to email me or\n[? Yuanna ?] or [? Leislu ?] at EPFL.",
    "start": "6067600",
    "end": "6073529"
  },
  {
    "text": "We're really here to\nanswer your questions. So next week topic, we're\ngoing to finish on Modelica, and concept generation is going\nto be sort of our-- creativity",
    "start": "6073529",
    "end": "6082420"
  },
  {
    "text": "concept generation is\nour main topic next week. ",
    "start": "6082420",
    "end": "6097257"
  }
]