[
  {
    "start": "0",
    "end": "99000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6760"
  },
  {
    "text": "continue to offer high-quality\neducational resources for free. To make a donation, or to\nview additional materials",
    "start": "6760",
    "end": "13390"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13390",
    "end": "22310"
  },
  {
    "text": "TADGE DRYJA: And that brings\nus to today's lecture, which is also something I\nwas not as familiar with.",
    "start": "22310",
    "end": "28550"
  },
  {
    "text": "So sort of a disclaimer-- I might have gotten\nlittle things wrong, or it might not\nbe quite as clear.",
    "start": "28550",
    "end": "33989"
  },
  {
    "text": "But do ask questions. So if it's stuff like Lightning\nNetwork or Discreet Log Contracts, well, for\nme-- that's sort of easy,",
    "start": "33990",
    "end": "40307"
  },
  {
    "text": "because I know it really well. This stuff is things\nI've known about, but I've never really\nwent as into the details.",
    "start": "40307",
    "end": "49170"
  },
  {
    "text": "So it's a little\nbit like, OK, figure it out well enough to explain\nit rather than just well enough",
    "start": "49170",
    "end": "54530"
  },
  {
    "text": "to understand how it works. So the basic idea is you want\nto hide the output amounts. So we saw last week how\nlooking at output amounts",
    "start": "54530",
    "end": "63380"
  },
  {
    "text": "can deanonymize and let you\nlink a lot of different things. And so we'll look\nat how to do that.",
    "start": "63380",
    "end": "68909"
  },
  {
    "text": "How do we hide output amounts? And so we'll talk\nabout commitments. So first, we'll talk about the\nreasons why and how to do it.",
    "start": "68910",
    "end": "75020"
  },
  {
    "text": "Then we'll talk about the\ndefinition of commitments. What is a commitment\nin cryptography? And then we'll talk about\nPedersen commitments,",
    "start": "75020",
    "end": "81770"
  },
  {
    "text": "and then we'll talk\nabout range proofs and put it together\nto get what's called \"confidential\ntransactions,\" which",
    "start": "81770",
    "end": "88010"
  },
  {
    "text": "is a vaguely confidential\ntransaction-- it just means the output amounts are secret.",
    "start": "88010",
    "end": "96009"
  },
  {
    "text": "So interrupt with any questions\nat any point of the way if something's not clear. So coinjoin-- last\ntime we talked",
    "start": "96010",
    "end": "103479"
  },
  {
    "start": "99000",
    "end": "405000"
  },
  {
    "text": "about combining transactions\nwith other people where you have your input--\nthey have their input.",
    "start": "103480",
    "end": "108840"
  },
  {
    "text": "You have your output--\nthey have their output. And if you shuffle the ordering\nof the inputs and outputs,",
    "start": "108840",
    "end": "115540"
  },
  {
    "text": "it might not be clear\nwho's sending what where. You're aggregating it,\nand in the process,",
    "start": "115540",
    "end": "120549"
  },
  {
    "text": "you're losing information,\nbecause no one gets to see the border\nlines between-- hey,",
    "start": "120550",
    "end": "125940"
  },
  {
    "text": "this is one transaction-- this\nis another transaction-- it's all in the same transaction,\nso you can't really tell.",
    "start": "125940",
    "end": "131740"
  },
  {
    "text": "But one issue-- and\na really big issue-- was that the output\namounts can often reveal who's sending what where.",
    "start": "131740",
    "end": "138460"
  },
  {
    "text": "So in this example-- well, maybe I\ndon't know who's A,",
    "start": "138460",
    "end": "143680"
  },
  {
    "text": "who's B, who's C,\nwho's D-- these all look like uniformly, random\naddresses or pubkeys.",
    "start": "143680",
    "end": "149319"
  },
  {
    "text": "But if I see an\ninput with 10 coins-- an input with 2 coins,\nand then an output with 2 coins, and an\noutput with 10 coins--",
    "start": "149320",
    "end": "155140"
  },
  {
    "text": "well, there's probably\nsomething like this going on. Why else would you do this?",
    "start": "155140",
    "end": "161470"
  },
  {
    "text": "If you were trying to\nsend 2 coins somewhere, why even involve\nthis 10-coin input?",
    "start": "161470",
    "end": "166520"
  },
  {
    "text": "Why not just say 2 coins to\n2 coins, and you're done? So if the goal is to obscure\nthe transaction graph",
    "start": "166520",
    "end": "173890"
  },
  {
    "text": "and have better anonymity\nbecause no one can tell what's going where--\nwell, this doesn't really work. I think it's going like that.",
    "start": "173890",
    "end": "180392"
  },
  {
    "text": "And then I showed that\nthere is a way to do it, whereas if you have 2 to\n8, then the 8 is obviously",
    "start": "180392",
    "end": "187540"
  },
  {
    "text": "from the person with 10. But the 2 different 2 coin\noutputs are unlinkable.",
    "start": "187540",
    "end": "193990"
  },
  {
    "text": "So that helps, but\nit's not great. And then for things like the\naggregate signatures, maybe",
    "start": "193990",
    "end": "201310"
  },
  {
    "text": "you can get people to aggregate\ntheir transactions together because it's\ncheaper and smaller.",
    "start": "201310",
    "end": "207020"
  },
  {
    "text": "But in general, they'll have\ntotally different input sizes, totally different output\nsizes, and it won't really give you any anonymity.",
    "start": "207020",
    "end": "213483"
  },
  {
    "text": "And it won't give\nyou any privacy, and it hurts fungibility. So how can we do this?",
    "start": "213483",
    "end": "219280"
  },
  {
    "text": "Wouldn't it be great if we\ncould hide the output amounts?",
    "start": "219280",
    "end": "224487"
  },
  {
    "text": "That would be really cool. So instead of having\nit like this-- it's just you don't see\nhow many coins there are.",
    "start": "224487",
    "end": "232560"
  },
  {
    "text": "Why don't we just delete\nthe output amounts entirely? Why even that saves 8 bytes.",
    "start": "232560",
    "end": "239590"
  },
  {
    "text": "So we can't just delete it. So what does this mean? This would be\nreally cool, though,",
    "start": "239590",
    "end": "245829"
  },
  {
    "text": "if we could somehow obscure\nthis so that no one can tell what the amounts are.",
    "start": "245830",
    "end": "252232"
  },
  {
    "text": "And, I guess,\ninitially, so they're going to be some transition\nsince Bitcoin wasn't built with this from the get-go.",
    "start": "252232",
    "end": "259088"
  },
  {
    "text": "At some point, there will\nbe a transaction where you can see the input\namounts, but then you can't see the output amounts.",
    "start": "259089",
    "end": "266889"
  },
  {
    "text": "But then you can have bounds\nand say, well, neither of these can be more than 12.",
    "start": "266890",
    "end": "272620"
  },
  {
    "text": "And then as it goes forward, and\nif the transaction graph gets bigger, those bounds\nstart getting really wide",
    "start": "272620",
    "end": "278319"
  },
  {
    "text": "because you're like, well,\nthis might have been 11, and this might have been 1,\nand then the next transaction",
    "start": "278320",
    "end": "283430"
  },
  {
    "text": "if it's mixed in with a bunch\nof things that have a pretty wide range, you\nhave to take the max and min of all those things. And, the min is\nalways going to be 0,",
    "start": "283430",
    "end": "290230"
  },
  {
    "text": "so it works pretty well\neven with this transaction. You could also think\nof a new system where either you start\nwith obscured amounts,",
    "start": "290230",
    "end": "303940"
  },
  {
    "text": "or the first mining\namounts are non-obscured, and then you mix them. Anyway, so this seems like it'd\nbe really useful because it",
    "start": "303940",
    "end": "311230"
  },
  {
    "text": "would allow you to combine\ntransactions and get better privacy.",
    "start": "311230",
    "end": "316810"
  },
  {
    "text": "Also, just really\nnice in general, even if you're not trying to\ncombine with anyone else-- it's really cool\nthat people can't",
    "start": "316810",
    "end": "322347"
  },
  {
    "text": "see how much money you have. If people can see how\nmany coins you have, they can try to\ncharge you more--",
    "start": "322347",
    "end": "328040"
  },
  {
    "text": "they can try to rob you-- there's all sorts of reasons\nwhy people don't usually say how much money\nthey're carrying around,",
    "start": "328040",
    "end": "335380"
  },
  {
    "text": "or how much they make, or how-- things like that. People are sensitive\nabout pricing information,",
    "start": "335380",
    "end": "341470"
  },
  {
    "text": "and some of it's societal\ntaboo, but also a lot of it's like I don't want people to\nknow how much money I have.",
    "start": "341470",
    "end": "348100"
  },
  {
    "text": "And I think there's-- I've read recently\nlike Uber doing this thing where\nthey like, oh, you're rich-- we're going\nto charge you more.",
    "start": "348100",
    "end": "354423"
  },
  {
    "text": "And people don't like that. It has been historically doable.",
    "start": "354423",
    "end": "360580"
  },
  {
    "text": "Companies segment\nthings, but often the way they do it is they're\nlike, OK, well, we're going to make first-class\nseats and then economy seats.",
    "start": "360580",
    "end": "367750"
  },
  {
    "text": "And the first class\nseats don't take up the space of 10 economy seats--\nthey take up the space of maybe 2, but they cost like 10x.",
    "start": "367750",
    "end": "375115"
  },
  {
    "text": "And the idea is, well,\nif you're rich-- we're going to charge you more. You can have the\nfancy stuff, and we're going to make more\nprofit off of that.",
    "start": "375115",
    "end": "382240"
  },
  {
    "text": "That's more OK, I guess,\nbut if it's just-- no, you're getting the same economy\nseat, but we know you're rich,",
    "start": "382240",
    "end": "387820"
  },
  {
    "text": "so we're going to\ncharge you more-- that-- I don't know. And we're getting\ninto that future",
    "start": "387820",
    "end": "394120"
  },
  {
    "text": "where there's enough data that\na lot of companies can do this. And some people,\nprobably myself included,",
    "start": "394120",
    "end": "399759"
  },
  {
    "text": "is like wait, no,\nI don't like that. I like the way it was before\nwhere companies didn't really know that much about me.",
    "start": "399760",
    "end": "405040"
  },
  {
    "text": "So this is an effort to try\nto keep things obscured-- try to keep the customer a bit\nmore anonymous with respect",
    "start": "405040",
    "end": "412467"
  },
  {
    "text": "to merchants so that they\ndon't have as much information to charge more. And then-- rob you--",
    "start": "412467",
    "end": "417610"
  },
  {
    "text": "that's maybe more\nBitcoin-specific where like-- yeah, I mean if\nyou're walking around",
    "start": "417610",
    "end": "423729"
  },
  {
    "text": "in an area that's\nsort of high-crime with a bunch of money hanging\nout of your pocket-- that's a bad idea.",
    "start": "423730",
    "end": "431030"
  },
  {
    "text": "The internet is sort of a\nhigh-crime area, especially, with respect to Bitcoin. And it's really easy to\nsee how much people have.",
    "start": "431030",
    "end": "437919"
  },
  {
    "text": "And so people-- the\nhackers know who to target, especially if it's\nlike an exchange--",
    "start": "437920",
    "end": "444370"
  },
  {
    "text": "they're pretty clear-- OK, this exchange\nhas tons of money. So it might not\nhelp the exchanges that much-- it obviously has\na lot of money, but anyway.",
    "start": "444370",
    "end": "452050"
  },
  {
    "text": "So this would be\nreally cool to do. I think people sort of agree--\nthis would be really cool.",
    "start": "452050",
    "end": "458602"
  },
  {
    "text": "This is a nice thing to have. ",
    "start": "458602",
    "end": "463840"
  },
  {
    "text": "And it also helps with privacy. You're trying to\nmake it hard to link",
    "start": "463840",
    "end": "469090"
  },
  {
    "text": "different outputs to each\nother or link the outputs to a specific person.",
    "start": "469090",
    "end": "474310"
  },
  {
    "text": "And hiding the amounts\nmakes them really hard to distinguish. So if you don't\nknow the amounts,",
    "start": "474310",
    "end": "479980"
  },
  {
    "text": "they become completely\nuniform where this is a completely random address.",
    "start": "479980",
    "end": "485689"
  },
  {
    "text": "I have no idea how\nmany coins there are. I have very little\nway to distinguish between these outputs.",
    "start": "485690",
    "end": "491509"
  },
  {
    "text": "I can try to trace the\ngraph and say, OK, well, this came from here--\nthis came from here, but they all look the same.",
    "start": "491510",
    "end": "496890"
  },
  {
    "text": "So I've got this big graph\nwith no real information other than the links\nbetween the notes,",
    "start": "496890",
    "end": "502610"
  },
  {
    "text": "which is still information. But it's much harder to\ntell what's going on.",
    "start": "502610",
    "end": "508100"
  },
  {
    "text": "So we're sold-- how do we do it? First, we need to define-- what exactly are\nwe trying to do?",
    "start": "508100",
    "end": "515742"
  },
  {
    "text": "What are we hiding from whom? Who knows what and\nwhen kind of thing? So the long-term\nstate of the system--",
    "start": "515742",
    "end": "524159"
  },
  {
    "text": "no one can see any-- no one can see it\nin the amounts. A has signed a\nsignature from key A--",
    "start": "524159",
    "end": "530080"
  },
  {
    "text": "a signature from key B-- some amount of coins. You don't see it. you\ndon't see any of this.",
    "start": "530080",
    "end": "535780"
  },
  {
    "text": "So that's the long-term state. But wait, people\nreceiving the payments should probably know how much\nthey're receiving, right?",
    "start": "535780",
    "end": "542829"
  },
  {
    "text": "And they should probably\nknow how much they have. If you don't know how much\nmoney you're getting-- that's not a very\nuseful payment system.",
    "start": "542830",
    "end": "549955"
  },
  {
    "text": "People sending should--\nthey should also know how much money they're sending. If the amount can be completely\ndetermined by the receiver--",
    "start": "549955",
    "end": "557230"
  },
  {
    "text": "that's also not a\ngood payment system. I'm just going to\ntake lots of money. So we can have two views.",
    "start": "557230",
    "end": "565270"
  },
  {
    "text": "We can say, OK, only the sender\nand receiver know the amounts. How about that-- where from\nthe network's point of view--",
    "start": "565270",
    "end": "572899"
  },
  {
    "text": "so if I'm just the third party\nlooking at this transaction-- I don't see any of the amounts. I just see there's no--",
    "start": "572900",
    "end": "578770"
  },
  {
    "text": "I have no idea how many\ncoins are being sent. But from the sender's\nview, the sender says, OK, I know I\nhave 2 coins here.",
    "start": "578770",
    "end": "585190"
  },
  {
    "text": "7 coins-- I changed it from\n2 and 10 on that line-- 2 coins here, 7 coins here. And I'm sending 7 coins\nhere and 2 coins there.",
    "start": "585190",
    "end": "592870"
  },
  {
    "text": "So the sender knows\nthe whole thing because they're the ones\ncreating this transaction. And then maybe the receiver\ndoesn't see everything.",
    "start": "592870",
    "end": "602980"
  },
  {
    "text": "Maybe the sender can prove to\nthe receiver a single amount but hide everything else.",
    "start": "602980",
    "end": "609860"
  },
  {
    "text": "That would be ideal. So the receiver only sees,\noh, I'm receiving 2 coins,",
    "start": "609860",
    "end": "616460"
  },
  {
    "text": "but I don't know. If I know this, then\nI can figure out",
    "start": "616460",
    "end": "621580"
  },
  {
    "text": "what these are, or at\nleast the sum of them. But if I don't know\nany of these things-- I don't know how much the\nperson sending me money has.",
    "start": "621580",
    "end": "629139"
  },
  {
    "text": "I just know, oh, I got 2 coins. Cool, that's what I wanted. But I don't learn anything\nabout their inputs",
    "start": "629140",
    "end": "635470"
  },
  {
    "text": "or their other outputs\nwithin the transaction. So that would be ideal\nif we can do that. So what we want is a\nsystem where network",
    "start": "635470",
    "end": "643180"
  },
  {
    "text": "doesn't see any of the amounts. The sender presumably\nsees all of it. Now, there could be cases\nwhere there's multiple senders,",
    "start": "643180",
    "end": "651353"
  },
  {
    "text": "and there are two people working\ntogether to make a transaction, and maybe we don't see\neach other's inputs,",
    "start": "651353",
    "end": "656410"
  },
  {
    "text": "but we'll keep it simple for now\nwhere there's a single sender. And then the receiver only\nsees their own output.",
    "start": "656410",
    "end": "663460"
  },
  {
    "text": "So that would be a\nreally powerful system. Then the receiver\nwould only know they're getting the\nright amount and not",
    "start": "663460",
    "end": "669160"
  },
  {
    "text": "learn anything else\nabout the sender's coins. So we might want to--\nlike I was saying,",
    "start": "669160",
    "end": "675250"
  },
  {
    "text": "you might want to\nhide per output. So if you have a-- if it's a global--",
    "start": "675250",
    "end": "680605"
  },
  {
    "text": "either you see everything or you\nsee-- sorry-- you see nothing, or you see everything--\nthat's still pretty good.",
    "start": "680605",
    "end": "685870"
  },
  {
    "text": "That's still better\nthan what we have when everyone sees\neverything, but it is better",
    "start": "685870",
    "end": "691330"
  },
  {
    "text": "if you can hide the rest\nof these three things from the receiver.",
    "start": "691330",
    "end": "696670"
  },
  {
    "text": "So any ideas? Some kind of encryption? Hide the amounts\nso the only people",
    "start": "696670",
    "end": "702610"
  },
  {
    "text": "with the right private\nkey can see the numbers? ",
    "start": "702610",
    "end": "707920"
  },
  {
    "text": "So, I don't think I've even\ntalked about encryption ever in this class, because there is\nno encryption in blockchains.",
    "start": "707920",
    "end": "715270"
  },
  {
    "start": "715000",
    "end": "1325000"
  },
  {
    "text": "[LAUGHS] Which is\nsomething you-- if you read something\nabout blockchain and you're like\nblockchain is encrypted. And you're like no,\nno-- they don't know",
    "start": "715270",
    "end": "721857"
  },
  {
    "text": "what they're talking about. So I haven't defined encryption. But encryption is-- generally,\nyou have some kind of private",
    "start": "721857",
    "end": "728560"
  },
  {
    "text": "key-- you take a clear text,\nyou apply-- you do some-- ",
    "start": "728560",
    "end": "735490"
  },
  {
    "text": "so like I had with signatures,\nyou have a set of functions. So encryption is-- you've got\nsome encryption function which",
    "start": "735490",
    "end": "742240"
  },
  {
    "text": "takes a key and a message\nand outputs a ciphertext.",
    "start": "742240",
    "end": "748511"
  },
  {
    "text": "And then you've got some kind\nof decryption function, which takes off in the same\nkey or something and then",
    "start": "748512",
    "end": "754810"
  },
  {
    "text": "the ciphertext and\noutputs the same message. And this is symmetric\nencryption because you're using the same key.",
    "start": "754810",
    "end": "761560"
  },
  {
    "text": "You can also have\nasymmetric encryption where this could\nbe a public key, and this could be a private key.",
    "start": "761560",
    "end": "768199"
  },
  {
    "text": "So in order to decrypt,\nyou need the private key, but in order to encrypt, you\nonly need someone's public key.",
    "start": "768200",
    "end": "773680"
  },
  {
    "text": " So, in practice, all\nthe things that people--",
    "start": "773680",
    "end": "781210"
  },
  {
    "text": "in practice, you\nusually stage it, so you have an asymmetric\nalgorithm to agree on a key,",
    "start": "781210",
    "end": "786730"
  },
  {
    "text": "and then you just use\nthe symmetric encryption and decryption where the keys\nare the same because it's",
    "start": "786730",
    "end": "791980"
  },
  {
    "text": "way faster. So you can do this operation\non the order of hundreds",
    "start": "791980",
    "end": "797800"
  },
  {
    "text": "of megabytes a second, whereas\nthe asymmetric ones are slow-- it's sort of like signing.",
    "start": "797800",
    "end": "803842"
  },
  {
    "text": "Maybe I'll go into it later. But if you understand all\nthe signing and stuff, it's not too bad.",
    "start": "803843",
    "end": "809818"
  },
  {
    "text": "But so maybe you\ncould say, OK, well, there's some kind of private\nkey that the sender creates-- encrypts the amounts, and then\nthey put the encrypted amounts",
    "start": "809818",
    "end": "818560"
  },
  {
    "text": "in the transaction, and they\nreveal the key to the receiver.",
    "start": "818560",
    "end": "825550"
  },
  {
    "text": "And, potentially, you\ncould have different keys for each amount-- that would work.",
    "start": "825550",
    "end": "832873"
  },
  {
    "text": "Any problems with that idea?  You can encrypt everything.",
    "start": "832873",
    "end": "838830"
  },
  {
    "text": "Yeah, you know? AUDIENCE: You would need to send\nover a public key or something so they can decrypt it.",
    "start": "838830",
    "end": "844570"
  },
  {
    "text": "TADGE DRYJA: Yeah, oh, OK, so\nthat is a sort of problem-- it's a limit. But that limit will carry\nforward to the stuff we do.",
    "start": "844570",
    "end": "853230"
  },
  {
    "text": "So you're going to have to-- right now, in Bitcoin, you\ncan find someone's address, send them the\ncoins-- you're good.",
    "start": "853230",
    "end": "859710"
  },
  {
    "text": "With this system,\nthere will be more interactivity between\nsender and receiver. So that's not great,\nbut not a deal breaker.",
    "start": "859710",
    "end": "866770"
  },
  {
    "text": "So we will need to do that. Other problem? Yeah. AUDIENCE: A key\nfor every amount. TADGE DRYJA: Yeah. AUDIENCE: [INAUDIBLE] because\nof the fact that there can be",
    "start": "866770",
    "end": "875186"
  },
  {
    "text": "a lot of different\nways to split up the-- TADGE DRYJA: Yeah,\nit could get bigger.",
    "start": "875187",
    "end": "881670"
  },
  {
    "text": "And the actual\nsolution gets big. So that's not great either. But the one that\nreally screws it up.",
    "start": "881670",
    "end": "888456"
  },
  {
    "text": "[LAUGHS] Yeah. AUDIENCE: How do the nodes\nverify the transaction? TADGE DRYJA: So the nodes don't\nverify the transaction at all",
    "start": "888456",
    "end": "894089"
  },
  {
    "text": "because they can't see anything. Well, I can do that. Well, how about I just make\n70 coins and 2,000 coins?",
    "start": "894090",
    "end": "901769"
  },
  {
    "text": "I can make as many\ncoins as I want. No one can see anything because\nthe network just sees nothing--",
    "start": "901770",
    "end": "908490"
  },
  {
    "text": "have no idea how many\ncoins are being sent. But I'd be like,\nhey, hey, I'm making more coins all over the place.",
    "start": "908490",
    "end": "914399"
  },
  {
    "text": "[LAUGHS] And this doesn't work. Because if I can\nsend coins to myself",
    "start": "914400",
    "end": "920490"
  },
  {
    "text": "and multiply them\nindefinitely, and it's hidden--",
    "start": "920490",
    "end": "925620"
  },
  {
    "text": "so to some extent,\nyou're like well, maybe the network doesn't care. Because well, I'm making them,\nbut they're only my own coins.",
    "start": "925620",
    "end": "936073"
  },
  {
    "text": "But if the network\ndoesn't see anything, it's easy to create the coins. And if those coins\nare later used,",
    "start": "936073",
    "end": "941760"
  },
  {
    "text": "I can't tell if they\nwere made up or not. So if I'm accepting-- so if I see this, and someone's\nlike, hey, here's 2,000 coins--",
    "start": "941760",
    "end": "949500"
  },
  {
    "text": "I'm like dude, you're\nmaking them up. You can't write extra\nzeros on $100 bill and be like here you go.",
    "start": "949500",
    "end": "955470"
  },
  {
    "text": "This is-- come on. No one's going to\naccept these later. ",
    "start": "955470",
    "end": "963290"
  },
  {
    "text": "I won't even know. Did you even have 7? Does this 7 coins\ncome from something",
    "start": "963290",
    "end": "968360"
  },
  {
    "text": "where you did the same\nkind of thing before? So, basically, if we do\nthat where we completely",
    "start": "968360",
    "end": "973710"
  },
  {
    "text": "obscure the amounts\nfrom the network and from all third\nparties, then anytime I'm",
    "start": "973710",
    "end": "979500"
  },
  {
    "text": "going to accept this,\nI'm going to have to enforce the rules myself. And then retroactively enforce\nthe rules for all transactions",
    "start": "979500",
    "end": "988170"
  },
  {
    "text": "beforehand to make sure\nnothing like this happened. So we could do that.",
    "start": "988170",
    "end": "993839"
  },
  {
    "text": "It's all obscured. The third-party-- the\nnetwork doesn't see anything. And it's up to the\nparticipants themselves",
    "start": "993840",
    "end": "999389"
  },
  {
    "text": "to say, well, if you're\ngoing to send me coins-- since I know if I'm sending\nit to someone later, I'm going to have to\nprovide some kind of proof",
    "start": "999390",
    "end": "1006200"
  },
  {
    "text": "that this kind of\nnonsense didn't happen. I'm also going to\nneed proof that all of the ancestor\ntransactions that",
    "start": "1006200",
    "end": "1012770"
  },
  {
    "text": "led to these 2 and 7 coins-- I'm going to need those amounts. And, so, yeah, you\ncould maybe do that.",
    "start": "1012770",
    "end": "1019700"
  },
  {
    "text": "You could provide the decryption\nkeys for all previous amounts.",
    "start": "1019700",
    "end": "1025599"
  },
  {
    "text": "But that basically gets you\nback to where we are right now-- not quite, but pretty close.",
    "start": "1025599",
    "end": "1030849"
  },
  {
    "text": " Either you allow\npeople to create coins,",
    "start": "1030849",
    "end": "1036550"
  },
  {
    "text": "or you basically are revealing\nclose to all previous amounts eventually to everyone. Because as that transaction\ngraph gets bigger and bigger,",
    "start": "1036550",
    "end": "1044359"
  },
  {
    "text": "I'm going to start having all\nthese thousands and thousands of ancestor transactions\nthat I'm going",
    "start": "1044359",
    "end": "1049660"
  },
  {
    "text": "to have to require proof for. I'm going to require all\nthose decryption keys to make sure nothing\nlike this happened.",
    "start": "1049660",
    "end": "1055630"
  },
  {
    "text": "And then eventually, all\nthe people receiving money will be able to see\neverything-- well, not quite everything, but a lot.",
    "start": "1055630",
    "end": "1062020"
  },
  {
    "text": "So it's like well,\nthird-parties-- the miners or maybe people\nwho are just looking",
    "start": "1062020",
    "end": "1067600"
  },
  {
    "text": "at the blockchain who aren't\nreally receiving any funds-- maybe it's hidden from them.",
    "start": "1067600",
    "end": "1073280"
  },
  {
    "text": "But once you start\nusing the system, you're going to basically\nbe able to see everything. So that's not great.",
    "start": "1073280",
    "end": "1078580"
  },
  {
    "text": " And it would also\nbe really annoying because then when you\nhave to receive coins,",
    "start": "1078580",
    "end": "1085060"
  },
  {
    "text": "you have to go back through\nthousands of transactions to make sure that didn't happen. So we need to prevent\ncoin creation while still",
    "start": "1085060",
    "end": "1094450"
  },
  {
    "text": "keeping the amount secret. This is a tricky problem-- any general ideas here?",
    "start": "1094450",
    "end": "1103809"
  },
  {
    "text": "So wouldn't it be\ncool if we could do this where the network\nsees there's w coins here,",
    "start": "1103810",
    "end": "1112102"
  },
  {
    "text": "there's x coins here,\nand there's y coins here, there's z coins here? And then we have a proof--",
    "start": "1112102",
    "end": "1118169"
  },
  {
    "text": "w plus x equals y plus\nz, without telling you what w, x, y, and z are.",
    "start": "1118170",
    "end": "1123630"
  },
  {
    "text": " Cool. Let's do it. Any ideas?",
    "start": "1123630",
    "end": "1128830"
  },
  {
    "text": "[LAUGHS] So this seems like\nthis would work.",
    "start": "1128830",
    "end": "1136670"
  },
  {
    "text": "This would do it in that if\nwe can reveal like say, hey, the person d--",
    "start": "1136670",
    "end": "1142370"
  },
  {
    "text": "z is 2. Cool. So I got 2 coins. And they can also verify that\nthese amounts are correct.",
    "start": "1142370",
    "end": "1151130"
  },
  {
    "text": "And then if you're-- you could either keep this\nproof only to the receiver, but then you'd\nhave to give proofs",
    "start": "1151130",
    "end": "1157309"
  },
  {
    "text": "about all the\nprevious transactions, or you can just, say no--\nthe whole network enforces these groups. This is now a consensus\nrule where if you want--",
    "start": "1157310",
    "end": "1165500"
  },
  {
    "text": "even if it's not\nyour transaction, it might be a parent of\nyour transaction someday. So you have to verify it.",
    "start": "1165500",
    "end": "1171440"
  },
  {
    "text": "If you're going to\naccept the block-- verify these proofs\nfor every transaction.",
    "start": "1171440",
    "end": "1177360"
  },
  {
    "text": "So that would work. AUDIENCE: So that's essentially\na minor deal, right? TADGE DRYJA: Yeah, a miner, or--",
    "start": "1177360",
    "end": "1184640"
  },
  {
    "text": "the miners would do it\nand also the full nodes. If you're running a node-- well, I'm not receiving\nanything here,",
    "start": "1184640",
    "end": "1190280"
  },
  {
    "text": "but I still need to make sure\nthis is a valid transaction in order to accept it. AUDIENCE: Isn't that a problem\nthen, because what if a miner",
    "start": "1190280",
    "end": "1196610"
  },
  {
    "text": "is in that transaction? TADGE DRYJA: If the\nminer's receive-- the miners D in\nreceiving this coin?",
    "start": "1196610",
    "end": "1203169"
  },
  {
    "text": "AUDIENCE: Yeah. TADGE DRYJA: Then they'll know-- then they'll both\nget the proof, which",
    "start": "1203170",
    "end": "1208250"
  },
  {
    "text": "is sort of redundant for them. And they'll also get\nthe actual amount-- z. So they'll know this is 2.",
    "start": "1208250",
    "end": "1215830"
  },
  {
    "text": "So that miner would know\nmore, but that's OK. I guess other miners wouldn't--\nor other nodes wouldn't.",
    "start": "1215830",
    "end": "1223290"
  },
  {
    "text": "So if you're participating,\nyou'll potentially know more. But the idea is\nthird-parties see a proof",
    "start": "1223290",
    "end": "1228550"
  },
  {
    "text": "and don't see the amounts. Yeah. AUDIENCE: So SPV\nwill have no way",
    "start": "1228550",
    "end": "1233827"
  },
  {
    "text": "of knowing if a transaction was\nvalid until it was [INAUDIBLE]?? TADGE DRYJA: They already know.",
    "start": "1233827",
    "end": "1239190"
  },
  {
    "text": "So SPV, while it's\nalready have no idea how many coins are\ncoming in on the inputs because they don't\nhave a UTXO set.",
    "start": "1239190",
    "end": "1245430"
  },
  {
    "text": "And the coin-- so\nif you see an input, you see it's pointing\nto some txid. I don't know how\nmany coins there are.",
    "start": "1245430",
    "end": "1251160"
  },
  {
    "text": "I would have to-- you could provide a\nproof to an SPV wallet that, hey, there were--",
    "start": "1251160",
    "end": "1256830"
  },
  {
    "text": "I can give you that\nprevious transaction, and you can see how many coins,\nbut then what about the one",
    "start": "1256830",
    "end": "1262230"
  },
  {
    "text": "before that? So, generally, SPV\nwallets can't enforce that amounts are correct\nor verify signatures,",
    "start": "1262230",
    "end": "1268080"
  },
  {
    "text": "because they don't know\nenough about these inputs, whereas full nodes--",
    "start": "1268080",
    "end": "1273870"
  },
  {
    "text": "when you tell me to\ninput 0, I know how much. I know what keys--\nthings like that. So SPV can't well--",
    "start": "1273870",
    "end": "1281430"
  },
  {
    "text": "no there's maybe some\nway to make the SPV have it so that SPV proofs\nare compatible with this.",
    "start": "1281430",
    "end": "1287100"
  },
  {
    "text": "But it's-- you already\ndon't have that. So I don't think\nthere's much idea--",
    "start": "1287100",
    "end": "1294300"
  },
  {
    "text": "there's much much\nresearch into how to make this SPV compatible.",
    "start": "1294300",
    "end": "1299670"
  },
  {
    "text": "But yeah, it's a good question. Other basic ideas? So how do we do this?",
    "start": "1299670",
    "end": "1304919"
  },
  {
    "text": "[LAUGHS] So this\nwill take a little-- the actual way to do this will\ntake the rest of the class.",
    "start": "1304920",
    "end": "1313390"
  },
  {
    "text": "Because there's a lot of\nthings where that seems like it'll work, and it's\nlike oh, no, it doesn't.",
    "start": "1313390",
    "end": "1319590"
  },
  {
    "text": "And this is sort of replaying\nthe ideas from several years of people trying to do this.",
    "start": "1319590",
    "end": "1326612"
  },
  {
    "start": "1325000",
    "end": "1630000"
  },
  {
    "text": "So how will we do this? So there's an idea\ncalled commitments. And the simplest form\nof a commitment is you",
    "start": "1326612",
    "end": "1333690"
  },
  {
    "text": "commit to some value-- you ouput it-- call it c-- and then you reveal the value\nand then someone can verify.",
    "start": "1333690",
    "end": "1340590"
  },
  {
    "text": "Well, given c and the\nvalue you just revealed,",
    "start": "1340590",
    "end": "1345630"
  },
  {
    "text": "is that a correct commitment? So I'm committing\nto the value 2.",
    "start": "1345630",
    "end": "1352820"
  },
  {
    "text": "I'm outputting something c\nand then revealing it was 2. And let me throw this\ninto my function.",
    "start": "1352820",
    "end": "1359220"
  },
  {
    "text": "2 and c-- do those match? Oh, it's true-- we're good. ",
    "start": "1359220",
    "end": "1366402"
  },
  {
    "text": "And then there's certain\nproperties you'd want. You don't want people to-- I think I have\nslides about that.",
    "start": "1366402",
    "end": "1372650"
  },
  {
    "text": "So the hash function\nis a commitment. I can say the hash of 5\nis 68 empty-- whatever.",
    "start": "1372650",
    "end": "1380309"
  },
  {
    "text": "And then I commit\nto 68 something. I publish this,\nand I tell everyone I'm committing to something.",
    "start": "1380310",
    "end": "1385700"
  },
  {
    "text": "I'm not going to tell you what\nI'm committing to exactly, but here's this 68fde0b7-- some long hash output.",
    "start": "1385700",
    "end": "1392630"
  },
  {
    "text": "And then I reveal\ndays later the thing",
    "start": "1392630",
    "end": "1398610"
  },
  {
    "text": "I was committing\nto-- that was 5. And then everyone can check. Let me throw 5 into\nmy hash function.",
    "start": "1398610",
    "end": "1405490"
  },
  {
    "text": "Oh, yeah, it was this. True. So that's a commitment scheme. ",
    "start": "1405490",
    "end": "1412509"
  },
  {
    "text": "It is binding. So there's binding and\nhiding, and there's different properties\nof commitment schemes.",
    "start": "1412510",
    "end": "1417970"
  },
  {
    "text": "So this we could say is\na computationally binding commitment scheme.",
    "start": "1417970",
    "end": "1423700"
  },
  {
    "text": "Once I've committed\nto this, I'm not going to be able to\nfind another number.",
    "start": "1423700",
    "end": "1428960"
  },
  {
    "text": "So I'm not going to be\nable to say, oh, it was 6 And then get the\nsame commitment out.",
    "start": "1428960",
    "end": "1435750"
  },
  {
    "text": "So I'm not going to-- so in\npractice, this is really long. This is a shot 2 output.",
    "start": "1435750",
    "end": "1441905"
  },
  {
    "text": "I didn't want to\nwrite the whole thing, but it goes to\nhere, or two lines. So the idea is I can't find\nanother number, especially",
    "start": "1441905",
    "end": "1450100"
  },
  {
    "text": "exactly the number I want. But I can't find any other\nnumber that will get me to that same hash output.",
    "start": "1450100",
    "end": "1455950"
  },
  {
    "text": "That's a collision, and I'm\ngoing to have to try it. Wait, so for a specific number,\nI'd have to try 2 to the 256.",
    "start": "1455950",
    "end": "1462970"
  },
  {
    "text": "For any collision, I only\nhave to do 2 the 128. But still, both of those\nare really big numbers.",
    "start": "1462970",
    "end": "1469660"
  },
  {
    "text": "I can't do it. So it's computationally binding. If I had some\namazing computer that",
    "start": "1469660",
    "end": "1475690"
  },
  {
    "text": "could perform an\ninfinite calculation,",
    "start": "1475690",
    "end": "1480820"
  },
  {
    "text": "I could find a collision. So there's the distinction\nbetween computationally",
    "start": "1480820",
    "end": "1487000"
  },
  {
    "text": "and information theoretically. Information\ntheoretically is stronger where even if I had the\nmost powerful computer,",
    "start": "1487000",
    "end": "1495550"
  },
  {
    "text": "I still couldn't do this,\nwhereas binding, in this case, it's computationally binding-- computationally is good enough.",
    "start": "1495550",
    "end": "1502533"
  },
  {
    "text": "Everything in\nBitcoin is already-- everything in all these\nsystems is already basically computational. There are some schemes, which\nare not computationally bound.",
    "start": "1502533",
    "end": "1511460"
  },
  {
    "text": "So one of the parts here-- and the Pedersen commitments\nare not computationally--",
    "start": "1511460",
    "end": "1517780"
  },
  {
    "text": "and things like severe\nsecret sharing and a couple other things where this is not\ndependent on processing power.",
    "start": "1517780",
    "end": "1525190"
  },
  {
    "text": "Even if you have infinite\nprocessing power, you just can't figure\nout what the values are,",
    "start": "1525190",
    "end": "1530230"
  },
  {
    "text": "which is cooler, but\nit's nice to have. It's not a requirement\nfor our systems.",
    "start": "1530230",
    "end": "1536809"
  },
  {
    "text": "So this is binding. Any ideas of what this is\nnot-- why this would not",
    "start": "1536810",
    "end": "1541940"
  },
  {
    "text": "be a good commitment scheme? You want to commit to a value\nand then later reveal it.",
    "start": "1541940",
    "end": "1549620"
  },
  {
    "text": "You don't want the\nperson who's committing to be able to change\ntheir commitment. What else might you want that\nthis probably doesn't provide?",
    "start": "1549620",
    "end": "1558090"
  },
  {
    "text": " AUDIENCE: Do you\nneed some way to be",
    "start": "1558090",
    "end": "1563610"
  },
  {
    "text": "able to hash the commitment? TADGE DRYJA: Yep. So you want to be\nable to do fancy stuff",
    "start": "1563610",
    "end": "1569015"
  },
  {
    "text": "with the commitments. Before we even get there,\nthat's in 5 or 6 slides-- before we even get\nthere, this doesn't",
    "start": "1569015",
    "end": "1575050"
  },
  {
    "text": "satisfy something else we want.  Yeah. AUDIENCE: All but like 5\nis such a common number?",
    "start": "1575050",
    "end": "1582100"
  },
  {
    "text": "TADGE DRYJA: This\nis easy to guess. So if I'm committing\nto a number,",
    "start": "1582100",
    "end": "1587149"
  },
  {
    "text": "I'm going to commit to\nthe number of pizzas I'm ordering at my party. And everyone's\nwondering how many",
    "start": "1587150",
    "end": "1592490"
  },
  {
    "text": "pieces are you going to order? I try things. It's binding, but\nit's not hiding.",
    "start": "1592490",
    "end": "1599450"
  },
  {
    "text": "So verifier can easily guess\nand check the committed value.",
    "start": "1599450",
    "end": "1604789"
  },
  {
    "text": "So for i equals 0. Just keep trying\ndifferent i's and see",
    "start": "1604790",
    "end": "1612000"
  },
  {
    "text": "if the hash matches 68fd even. And this will take\nvery little time because 5 is going to\nhappen pretty quick.",
    "start": "1612000",
    "end": "1619180"
  },
  {
    "text": "And then everyone will know\nhe's ordering five pizzas-- sounds like a decent\nparty, but not really worth going out\nof my way to go to.",
    "start": "1619180",
    "end": "1627559"
  },
  {
    "text": "If it was fffff pizzas--\nthat would be something else. So solution-- pretty\nstraightforward solution.",
    "start": "1627560",
    "end": "1635250"
  },
  {
    "start": "1630000",
    "end": "1786000"
  },
  {
    "text": "Add a blinding factor. So we're going to call that,\nr I guess, r is random.",
    "start": "1635250",
    "end": "1642620"
  },
  {
    "text": "So r is b8bc7579. And now I'm going to take the\nhash of 5 and concatenate r,",
    "start": "1642620",
    "end": "1650590"
  },
  {
    "text": "and now this is\na different hash. And now to reveal what\nI was committing to--",
    "start": "1650590",
    "end": "1657240"
  },
  {
    "text": "you reveal both 5 and r. ",
    "start": "1657240",
    "end": "1664120"
  },
  {
    "text": "And you need to tell people what\norder you're doing things in. The system needs\nto be predefined.",
    "start": "1664120",
    "end": "1670920"
  },
  {
    "text": "When you're committing,\nyou also have to commit to the algorithms\nor have pre-agreed",
    "start": "1670920",
    "end": "1676200"
  },
  {
    "text": "upon algorithms,\nbecause otherwise, you could do something--\nno, I committed to r. 5 was my blinding factor.",
    "start": "1676200",
    "end": "1682080"
  },
  {
    "text": "You need to have protocols set\nup beforehand, which you never",
    "start": "1682080",
    "end": "1687210"
  },
  {
    "text": "know, that could be some-- if you say, I'm committing. Here's this value. How are you committing? What hash functions?",
    "start": "1687210",
    "end": "1693380"
  },
  {
    "text": "What are you doing? But that's obvious. It might not be\nsuper obvious, so you",
    "start": "1693380",
    "end": "1698490"
  },
  {
    "text": "have to be careful on that. So this is now blinding. And it's hidden, and\nit's still binding.",
    "start": "1698490",
    "end": "1709350"
  },
  {
    "text": "You can't change it to 6. I think that's the\nnext slide, wait.",
    "start": "1709350",
    "end": "1714500"
  },
  {
    "text": "So you can't change this to 6\nand change to a different r. I mean, you could,\nbut you'd still",
    "start": "1714500",
    "end": "1720470"
  },
  {
    "text": "have to do a lot of computation. And this is now--",
    "start": "1720470",
    "end": "1726680"
  },
  {
    "text": "some things get easier. So before if you really wanted\nto reveal that it was 6,",
    "start": "1726680",
    "end": "1736590"
  },
  {
    "text": "you basically can. Because there's a single\noutput for 6, and it just",
    "start": "1736590",
    "end": "1742010"
  },
  {
    "text": "doesn't match this. So there's not-- if you have\na single chosen value that you want to reveal that's not the\none that you committed to--",
    "start": "1742010",
    "end": "1749218"
  },
  {
    "text": "you're basically stopped. There's no way to get around\nit even computationally. With this-- that's not true.",
    "start": "1749218",
    "end": "1755030"
  },
  {
    "text": "It's like I really\nwant to reveal 6, I can come up with a different\nr such that the hash of 6",
    "start": "1755030",
    "end": "1761480"
  },
  {
    "text": "and our prime is that. And then that's\nnow computational--",
    "start": "1761480",
    "end": "1766620"
  },
  {
    "text": "slight distinction. It's still binding\ncomputationally. But before, chosen\nvalues may not have been.",
    "start": "1766620",
    "end": "1775341"
  },
  {
    "text": "So that's, I guess,\nthe difference. It's computationally\nbinding for any value. But for a specific\nvalue, it might be--",
    "start": "1775342",
    "end": "1781773"
  },
  {
    "text": "not information\ntheoretic, but you can't do it, because the hash\nfunction doesn't help you there.",
    "start": "1781773",
    "end": "1787300"
  },
  {
    "start": "1786000",
    "end": "2909000"
  },
  {
    "text": "So what else do we want to do? You're saying we need more.",
    "start": "1787300",
    "end": "1792620"
  },
  {
    "text": "We want to be able to prove\nthings about the commitments. So we need some kind of\nhomomorphic commitments.",
    "start": "1792620",
    "end": "1799120"
  },
  {
    "text": "And we've seen the\nhomomorphic properties of these elliptic curve\npoints, which are really nice--",
    "start": "1799120",
    "end": "1804760"
  },
  {
    "text": "where you can add\nprivate keys or add scalars, and that's the same as\nadding these points on a curve.",
    "start": "1804760",
    "end": "1810310"
  },
  {
    "text": "So let's try that. We want something like this.",
    "start": "1810310",
    "end": "1815360"
  },
  {
    "text": "We want a-- commit\nto x, commit to y, and get these\ncommitments-- a and b.",
    "start": "1815360",
    "end": "1821350"
  },
  {
    "text": "And then we want to reveal\nz, which is x plus y. ",
    "start": "1821350",
    "end": "1828910"
  },
  {
    "text": "And then we want\nthe verify function that's put z in and a\nand b-- either a plus b",
    "start": "1828910",
    "end": "1835159"
  },
  {
    "text": "or a and b separately\nand return true. So we don't want to\nreveal x and y separately.",
    "start": "1835160",
    "end": "1841940"
  },
  {
    "text": "We will reveal the\nsum of x plus y. And then we will reveal--",
    "start": "1841940",
    "end": "1848450"
  },
  {
    "text": "and then we'll have the\ncommitments themselves. So since these are\nthe same operators, it'd be cool if that worked.",
    "start": "1848450",
    "end": "1855985"
  },
  {
    "text": "This is what we want. ",
    "start": "1855985",
    "end": "1861030"
  },
  {
    "text": "So that's not that bad. But we also want all those\nproperties where it's hiding, and it's binding and\nthings like that.",
    "start": "1861030",
    "end": "1867100"
  },
  {
    "text": "So what should we try? ",
    "start": "1867100",
    "end": "1873350"
  },
  {
    "text": "First idea is-- this\nwould be useful. How can we build this?",
    "start": "1873350",
    "end": "1878980"
  },
  {
    "text": "We want to-- we can reveal\nsums without revealing individual parts that\nwe've committed to.",
    "start": "1878980",
    "end": "1884720"
  },
  {
    "text": "So probably the first\nidea is let's just use private keys and public keys.",
    "start": "1884720",
    "end": "1890649"
  },
  {
    "text": "Let's use a times g-- that kind of thing. Oh, oh-- I forgot the joke--",
    "start": "1890650",
    "end": "1897000"
  },
  {
    "text": "was going to say, gee,\nhow can we build this? g-- it's g.",
    "start": "1897000",
    "end": "1903370"
  },
  {
    "text": "You want a commitment to act. You want a commitment to y. You want to reveal\nz is x plus y. So what if you did this?",
    "start": "1903370",
    "end": "1909100"
  },
  {
    "text": "You said, I'm going to\nmake a point on the curve-- x, which is just my\nvalue x times g--",
    "start": "1909100",
    "end": "1915100"
  },
  {
    "text": "point on the curve y, which\nis my value y times g. This does have that\nhomomorphic property.",
    "start": "1915100",
    "end": "1923120"
  },
  {
    "text": "But is this binding? ",
    "start": "1923120",
    "end": "1932440"
  },
  {
    "text": "It is. I can't come up with a different\nx that gets me to that point.",
    "start": "1932440",
    "end": "1938700"
  },
  {
    "text": "So multiplying by\nthe generator point is a hash function in\nthat you're not going to be able to find collisions.",
    "start": "1938700",
    "end": "1945590"
  },
  {
    "text": "So you can't find two\ndifferent private keys that give you the same public key. ",
    "start": "1945590",
    "end": "1952019"
  },
  {
    "text": "Sometimes you can. [LAUGHS] So I don't want--",
    "start": "1952020",
    "end": "1957030"
  },
  {
    "text": "in this specific\ncase, this is binding. There's a bunch of\nasterisks that's there.",
    "start": "1957030",
    "end": "1963660"
  },
  {
    "text": "I probably shouldn't. It gets complicated. There are some curves\nwhere it's not.",
    "start": "1963660",
    "end": "1971237"
  },
  {
    "text": "And some systems where it's not. And there have been\nproblems in currencies where people assume\nthat this is the case--",
    "start": "1971237",
    "end": "1976700"
  },
  {
    "text": "I think in Monero. But, yeah. AUDIENCE: Can you draw\nan example of curve? TADGE DRYJA: Yeah. So they-- the curve for\nBitcoin, I think it's y q?",
    "start": "1976700",
    "end": "1995470"
  },
  {
    "text": "No, y squared equals\nx cubed plus or minus? Minus 7, I think.",
    "start": "1995470",
    "end": "2000980"
  },
  {
    "text": "That's it. It looks sort of like this.",
    "start": "2000980",
    "end": "2006049"
  },
  {
    "text": "It's symmetric,\nwhich that isn't. I think I had it\nin an earlier one.",
    "start": "2006050",
    "end": "2012929"
  },
  {
    "text": "And then the x-axis is like\nthis is the origin-ish. And then the idea is you\nhave points and you can--",
    "start": "2012930",
    "end": "2020309"
  },
  {
    "text": "the sum is if you\nhave the sum there",
    "start": "2020310",
    "end": "2026490"
  },
  {
    "text": "it's going to be here,\nexcept it's here. So the idea is 3. Any line you draw more or less\nwill intersect at 3 points",
    "start": "2026490",
    "end": "2036750"
  },
  {
    "text": "unless it intersects\nat a tangent, or if it's straight\nup, then you say",
    "start": "2036750",
    "end": "2042870"
  },
  {
    "text": "it intersects at the\npoint at infinity. But any random line\nyou make will probably",
    "start": "2042870",
    "end": "2050520"
  },
  {
    "text": "intersect in 3 different points. And so then if this\nis a, b, and c,",
    "start": "2050520",
    "end": "2057989"
  },
  {
    "text": "we define a plus\nb plus c to be 0. So then we would define\nb plus c to be here--",
    "start": "2057989",
    "end": "2064199"
  },
  {
    "text": "negative a. And the negation is you\nflip it over the x-axis.",
    "start": "2064199",
    "end": "2070710"
  },
  {
    "text": "So I talked about this\na little bit before. But the idea is you've still\ngot this nice property where you",
    "start": "2070710",
    "end": "2079219"
  },
  {
    "text": "pick a point on here-- g-- everyone picks a random\npoint, and it's a generator.",
    "start": "2079219",
    "end": "2084860"
  },
  {
    "text": "Because if you keep adding. So here's g-- sorry--\nand take the tangent--",
    "start": "2084860",
    "end": "2089919"
  },
  {
    "text": "find this is 2g. Take the tangent here-- maybe it goes here to 3g.",
    "start": "2089920",
    "end": "2096020"
  },
  {
    "text": "Take the tangent here-- or\nno, that would be 4g-- sorry-- this would be 8g. So you can keep adding the\ng, and you'll eventually",
    "start": "2096020",
    "end": "2105309"
  },
  {
    "text": "cover the entire curve\nand get back to g. So that's why it's\nsort of a generator because it lets you get to\nevery point by just multiplying.",
    "start": "2105310",
    "end": "2114420"
  },
  {
    "text": "So the nice property here is\nif you have some number x times g, and some number y times g--",
    "start": "2114420",
    "end": "2124569"
  },
  {
    "text": "you can also do x plus y times\ng, and that equals xg plus yg.",
    "start": "2124570",
    "end": "2134470"
  },
  {
    "text": "So you can add the points. And that's the same\nas adding the scalars",
    "start": "2134470",
    "end": "2139690"
  },
  {
    "text": "before you multiply by g. And that's what basically\nwe use for everything.",
    "start": "2139690",
    "end": "2147810"
  },
  {
    "text": "And then the idea is\nyou can't go back. Given a point, let's\nsay we call this big X--",
    "start": "2147810",
    "end": "2153869"
  },
  {
    "text": "given a point-- big X,\nwhich is little x times g-- you can't figure out what x is. So you can't divide by a point.",
    "start": "2153870",
    "end": "2160205"
  },
  {
    "text": "You can't say oh,\ngiven x, I want to do x divided by\ng, which is little x.",
    "start": "2160205",
    "end": "2165570"
  },
  {
    "text": "I can't divide some stuff. I can multiply by\nrepeatedly adding. But division is not defined.",
    "start": "2165570",
    "end": "2173339"
  },
  {
    "text": "So this is binding,\nbut I don't want to--",
    "start": "2173340",
    "end": "2178390"
  },
  {
    "text": "there's asterisks that's there. But it's not blinded.",
    "start": "2178390",
    "end": "2183520"
  },
  {
    "text": "So same problem is the\nraw hash-based commitment where if I want to commit to\nthe number 5, and 5 times g,",
    "start": "2183520",
    "end": "2191140"
  },
  {
    "text": "and that's my point that I'm\ngoing to use for my commitment. Same problem-- 4-loop\nwill pretty quickly",
    "start": "2191140",
    "end": "2198250"
  },
  {
    "text": "show you that was 5. How about-- this seems\nlike a good idea.",
    "start": "2198250",
    "end": "2208980"
  },
  {
    "text": "I should say it in\nthe less obviously-- it's not a good idea way. [LAUGHS]",
    "start": "2208980",
    "end": "2214110"
  },
  {
    "text": "So why don't we add\na blinding factor?",
    "start": "2214110",
    "end": "2219508"
  },
  {
    "text": "What would the problem be here?  I want to commit to 5.",
    "start": "2219508",
    "end": "2225250"
  },
  {
    "text": "I'm going to add\nsome random number r and then multiply that\nsum by g, and then",
    "start": "2225250",
    "end": "2231310"
  },
  {
    "text": "when I want to reveal that\nI was committed to 5-- I reveal 5 and r.",
    "start": "2231310",
    "end": "2237035"
  },
  {
    "text": "AUDIENCE: You don't know\nwhich one is [INAUDIBLE]?? TADGE DRYJA: No, but I\ncan say, look, the first--",
    "start": "2237035",
    "end": "2242599"
  },
  {
    "text": "well, yeah, the problem is\naddition is easy to break.",
    "start": "2242600",
    "end": "2248570"
  },
  {
    "text": " When I committed to 5 plus\nr, I revealed 5 and r,",
    "start": "2248570",
    "end": "2256180"
  },
  {
    "text": "but it's not binding. I can find r prime, which\nis 5 plus r minus 6. And then 6 plus that r prime\nis going to be 6 plus 5",
    "start": "2256180",
    "end": "2264440"
  },
  {
    "text": "plus r minus 6. I can compute whatever\nr prime I want and whatever number I\nwant to reveal later.",
    "start": "2264440",
    "end": "2272000"
  },
  {
    "text": "So this isn't binding anymore. I'm now adding a\nrandom thing in,",
    "start": "2272000",
    "end": "2277880"
  },
  {
    "text": "and I'm committing to the\nsum of the thing I want and a random thing. But it's not binding because\nthat addition, I can play with.",
    "start": "2277880",
    "end": "2287520"
  },
  {
    "text": "So how about this? I'll hash 5 and\nconcatenate r and then",
    "start": "2287520",
    "end": "2293970"
  },
  {
    "text": "multiply that\nhashed output by g. ",
    "start": "2293970",
    "end": "2300400"
  },
  {
    "text": "Maybe, but then it's\nno longer homomorphic-- then I can't add.",
    "start": "2300400",
    "end": "2305920"
  },
  {
    "text": "So if I have the hash of\n5 and r1 times g and then",
    "start": "2305920",
    "end": "2313420"
  },
  {
    "text": "the hash of 7 and r 2 times g-- I can't add these anymore\nAnd then have the 5s",
    "start": "2313420",
    "end": "2322270"
  },
  {
    "text": "and 7s add up to 12-- it won't work. Because now it's a hash. And I've just got\nthese hashes adding,",
    "start": "2322270",
    "end": "2328570"
  },
  {
    "text": "and you don't really\nget any meaning there. So that doesn't work either. So we're stuck. ",
    "start": "2328570",
    "end": "2336220"
  },
  {
    "text": "Then the way you do it\nis totally non-obvious. And introducing g's\nfraternal twin-- h.",
    "start": "2336220",
    "end": "2343570"
  },
  {
    "text": "[LAUGHS] You make another\npoint on the curve, and you call it h, which\nis the letter after g.",
    "start": "2343570",
    "end": "2349300"
  },
  {
    "text": " It's another generator\npoint distinct from g.",
    "start": "2349300",
    "end": "2355049"
  },
  {
    "text": "So you pick one-- here's h.",
    "start": "2355050",
    "end": "2360390"
  },
  {
    "text": "You also need to make\nsure that nobody knows n such that n times g equals h.",
    "start": "2360390",
    "end": "2367150"
  },
  {
    "text": "That n might exist,\nbut you want to be sure that no one knows\nwhat it is because you know how to move between g and\nh, then that'll break this.",
    "start": "2367150",
    "end": "2378010"
  },
  {
    "text": "But if you take two random\npoints, g was randomly chosen, and you chose a random h,\nthis shouldn't be possible.",
    "start": "2378010",
    "end": "2385360"
  },
  {
    "text": "That would be breaking\nthe discreet log problem. So I shouldn't be able to\ncompute h divided by g--",
    "start": "2385360",
    "end": "2392227"
  },
  {
    "text": "you shouldn't be\nable to compute that.  And so I think in a lot of\ncases, they'll define h as--",
    "start": "2392227",
    "end": "2400859"
  },
  {
    "text": "take the hash of g's\nx-coordinate and then assign that to the x-coordinate for h--",
    "start": "2400860",
    "end": "2406877"
  },
  {
    "text": "something like that. So it looks pretty random-- should be able to find it. So we've got another\narbitrary point on the curve",
    "start": "2406877",
    "end": "2415380"
  },
  {
    "text": "that we're going to start\nusing for multiplying things. And so this is basically\na Pedersen commitment,",
    "start": "2415380",
    "end": "2421799"
  },
  {
    "text": "which sounds involved\nand it gets involved, but really it's not.",
    "start": "2421800",
    "end": "2427750"
  },
  {
    "text": "At its core, it's not too bad. It's saying we're going\nto have a blinding factor in the actual\nvalue we're committing to.",
    "start": "2427750",
    "end": "2434290"
  },
  {
    "text": "And so now I'm multiplying\nthe blinding factor by g and the actual value by h.",
    "start": "2434290",
    "end": "2441040"
  },
  {
    "text": "And I'm just adding\nthose two up. So you know how we can do that?",
    "start": "2441040",
    "end": "2446890"
  },
  {
    "text": "If my actual value is 5, I\ntake 5h by taking the tangent-- getting 2h-- take the\ntangent again-- getting 4h,",
    "start": "2446890",
    "end": "2454720"
  },
  {
    "text": "and then adding 4h and h by\ndrawing the line between them-- I'll get 5h.",
    "start": "2454720",
    "end": "2459970"
  },
  {
    "text": "And then I'll also\nget r. r's going to be some giant random thing. R's not going to be like 5. r's\ngoing to be a 256-bit random",
    "start": "2459970",
    "end": "2467440"
  },
  {
    "text": "number, and that will\nobscure what h was--",
    "start": "2467440",
    "end": "2473680"
  },
  {
    "text": "sorry. what v was because\nI added them together. So this is binding\nunless I know the ratio.",
    "start": "2473680",
    "end": "2481880"
  },
  {
    "text": "Unless I know h over g,\nor g over h-- whatever-- same thing--",
    "start": "2481880",
    "end": "2487870"
  },
  {
    "text": "I can't come up\nwith another r and v pair that gets me back to x. ",
    "start": "2487870",
    "end": "2494950"
  },
  {
    "text": "So I can try. There is one. There's probably bazillions of--",
    "start": "2494950",
    "end": "2502000"
  },
  {
    "text": "if I could find a\ndifferent r, I could then reveal that v was\n8 instead of 7.",
    "start": "2502000",
    "end": "2507730"
  },
  {
    "text": "But I can't find that r,\nbecause I need to know some way to get between g and h-- some factor n where\nn times g equals h.",
    "start": "2507730",
    "end": "2515490"
  },
  {
    "text": "If I don't know that,\nI can't do this. It is binding. It's also hiding.",
    "start": "2515490",
    "end": "2521890"
  },
  {
    "text": "So you might\nsuccessfully guess-- I might commit vehicles 5-- do some random number\nr times g plus 5h,",
    "start": "2521890",
    "end": "2530870"
  },
  {
    "text": "and you might guess correctly. But this should have\nbeen g-- oops-- sorry.",
    "start": "2530870",
    "end": "2536450"
  },
  {
    "text": "This is g. But if I have some really\nlong, random number times g, it's also an x, and you're not\ngoing to be able to guess that.",
    "start": "2536450",
    "end": "2545589"
  },
  {
    "text": "So this is also hiding. And it's homomorphic.",
    "start": "2545590",
    "end": "2551640"
  },
  {
    "text": "So x is r1g plus v1h.",
    "start": "2551640",
    "end": "2556980"
  },
  {
    "text": "y is r2g plus v2h. And what if I want to prove\nthat z is value 1 plus value 2",
    "start": "2556980",
    "end": "2567060"
  },
  {
    "text": "without revealing\nthem individually? Can you see how I could do that?",
    "start": "2567060",
    "end": "2572680"
  },
  {
    "start": "2572680",
    "end": "2578859"
  },
  {
    "text": "I can reveal both\nr's individually. Well, no, sorry-- I cannot\nreveal both r's individually because then you might be\nable to figure out the values.",
    "start": "2578860",
    "end": "2588090"
  },
  {
    "text": "But I can reveal the sum of\nthe r's and the sum of the v's. So I'm going to define\na point z, which",
    "start": "2588090",
    "end": "2595480"
  },
  {
    "text": "is point x plus point y. And that's just going to be\nthe sum of the r values--",
    "start": "2595480",
    "end": "2600640"
  },
  {
    "text": "the sum of those\nrandom values times g plus the sum of\nthe actual values I've committed to times h.",
    "start": "2600640",
    "end": "2608890"
  },
  {
    "text": "And then I reveal the sums. I reveal this-- I reveal that. And then the verifier can\ndo the math themselves.",
    "start": "2608890",
    "end": "2617589"
  },
  {
    "text": " It's a little hard. I'm revealing r and v,\nwhich is equal to this.",
    "start": "2617590",
    "end": "2624670"
  },
  {
    "text": "But I'm not revealing\nthese separately. I only reveal the sums. And then the\nverifier can check--",
    "start": "2624670",
    "end": "2631330"
  },
  {
    "text": "is this r they gave times g\nplus this v they gave times h equal to these two\npoints added together?",
    "start": "2631330",
    "end": "2639780"
  },
  {
    "text": "And if it is, they've\nproven the sum. So, for example, it's binding,\nhiding, and homomorphic.",
    "start": "2639780",
    "end": "2651170"
  },
  {
    "text": "So this would allow\nus to make proofs. ",
    "start": "2651170",
    "end": "2663310"
  },
  {
    "text": "Binding, hiding, homomorphic--\nyou reveal the sum of the r's. You reveal the sum of the v's--",
    "start": "2663310",
    "end": "2670852"
  },
  {
    "text": "it works. So basically now instead of\ncoin amounts, which are 8-byte--",
    "start": "2670852",
    "end": "2680810"
  },
  {
    "text": "they're in 64s-- I just provide\nelliptic curve points, which are 33 bytes,\nso it's a bit bigger--",
    "start": "2680810",
    "end": "2688530"
  },
  {
    "text": "not a huge deal. I can put another\n20-something bytes in my outputs-- no big deal.",
    "start": "2688530",
    "end": "2694930"
  },
  {
    "text": "And then I provide a proof by\nrevealing these sums each time.",
    "start": "2694930",
    "end": "2701589"
  },
  {
    "text": "So I prove that w plus\nx equals y plus z. And everyone can see this\nlittle w amount of coins--",
    "start": "2701590",
    "end": "2709599"
  },
  {
    "text": "there's actually y coins. There's actually x coins. There's actually z coins. And there's a blinding factor\nthat all the participants",
    "start": "2709600",
    "end": "2720000"
  },
  {
    "text": "have to keep track of. So the receiver's views-- they learn their own v and r.",
    "start": "2720000",
    "end": "2726410"
  },
  {
    "text": " When someone sends,\nthey would have to tell the receiver,\nhey, here's r4.",
    "start": "2726410",
    "end": "2734800"
  },
  {
    "text": "The sender makes up r4. And they can just compute--\nlet's make a random r3.",
    "start": "2734800",
    "end": "2739960"
  },
  {
    "text": "And then compute r4 such that\nr4 plus r3 equals r1 plus r2.",
    "start": "2739960",
    "end": "2747369"
  },
  {
    "text": "They need to make sure that\nthe randomnesses add up, which is easy because\nthey're regular scalars,",
    "start": "2747370",
    "end": "2753430"
  },
  {
    "text": "and the sender has full\ncontrol over r3 and r4. So, basically, make random ones\nuntil you get to the last one.",
    "start": "2753430",
    "end": "2759760"
  },
  {
    "text": "And then make the last\none such that they all add up to the right number. ",
    "start": "2759760",
    "end": "2765250"
  },
  {
    "text": "And then the sender can say,\nhere's your r4 and here's 2.",
    "start": "2765250",
    "end": "2771970"
  },
  {
    "text": "You're getting 2 coins. And the receiver gets\nthose two numbers and says, I can see that this\ntransaction commits to z--",
    "start": "2771970",
    "end": "2779100"
  },
  {
    "text": "a point. And you gave me an r and a v\nthat when I do the operation--",
    "start": "2779100",
    "end": "2785980"
  },
  {
    "text": "I get z. So I know that\nsuccessfully, you've revealed that these\nare two coins.",
    "start": "2785980",
    "end": "2790990"
  },
  {
    "text": "And I can use these\nvalues later when I want to send my own coins. ",
    "start": "2790990",
    "end": "2798400"
  },
  {
    "text": "So this works, but\nthere's more problems. [LAUGHS] Any idea what\nthe next big problem is?",
    "start": "2798400",
    "end": "2804890"
  },
  {
    "text": "Yeah. AUDIENCE: If there\nare only two outputs, and then c's r4 and d4--",
    "start": "2804890",
    "end": "2810770"
  },
  {
    "text": "they could be able to\n[INAUDIBLE] r3 and d3, right? TADGE DRYJA: Yeah. But that's OK.",
    "start": "2810770",
    "end": "2816620"
  },
  {
    "text": "I mean, there's no\nway around that. If there's only one input-- or wait-- if there's\nonly two outputs,",
    "start": "2816620",
    "end": "2828619"
  },
  {
    "text": "so if the receiver\nlearns these, they will be able to\ndistinguish-- if you",
    "start": "2828620",
    "end": "2834540"
  },
  {
    "text": "know the total amount of inputs,\nand there's only one other. You can just subtract\nand figure it out.",
    "start": "2834540",
    "end": "2841438"
  },
  {
    "text": "So there's all sorts of things. If there's only one\noutput, that person knows it's the sum\nof all the inputs.",
    "start": "2841438",
    "end": "2847170"
  },
  {
    "text": "AUDIENCE: You don't\nknow-- in this case, you don't know the\ntotal input, right? TADGE DRYJA: Right.",
    "start": "2847170",
    "end": "2852210"
  },
  {
    "text": "In this case, they don't have\nto reveal to you the v's-- they just have to reveal that\n2 plus y equals w plus x.",
    "start": "2852210",
    "end": "2863330"
  },
  {
    "text": "So you don't have to\nlearn their input amounts. ",
    "start": "2863330",
    "end": "2869340"
  },
  {
    "text": "If there's only one output,\nthen you learn if this is 2,",
    "start": "2869340",
    "end": "2874700"
  },
  {
    "text": "these must have added up to 2. But I don't learn exactly which. So this is useful.",
    "start": "2874700",
    "end": "2881403"
  },
  {
    "text": "There's still a big problem. ",
    "start": "2881403",
    "end": "2888322"
  },
  {
    "text": "r1 plus r2 is r3 plus r4-- you\ncan prove w plus x equals y plus c-- it works.",
    "start": "2888322",
    "end": "2893900"
  },
  {
    "text": "It's great. AUDIENCE: Do nodes only mean\nthe bigger transaction-- to know that the inputs\nyou put [INAUDIBLE]??",
    "start": "2893900",
    "end": "2900250"
  },
  {
    "text": "TADGE DRYJA: Yep. nodes can just compute these\nnumbers, and they're good.",
    "start": "2900250",
    "end": "2906637"
  },
  {
    "text": "So one thing you could do here--  OK, wait. So there's one thing that\nyou can do to break it.",
    "start": "2906637",
    "end": "2913579"
  },
  {
    "start": "2909000",
    "end": "3078000"
  },
  {
    "text": "But it's not a big deal. And then there's another\nthing-- you need a break that's a really big deal. Yeah. AUDIENCE: Since\nyou're proving sums,",
    "start": "2913580",
    "end": "2919190"
  },
  {
    "text": "is it that you can have a higher\nlikelihood of proving something that doesn't-- like that wasn't actually true?",
    "start": "2919190",
    "end": "2926570"
  },
  {
    "text": "TADGE DRYJA: Yeah,\nbut how exactly? So one thing you could do is--",
    "start": "2926570",
    "end": "2935800"
  },
  {
    "text": "I think, I said-- so, basically, you can verify\nit and put in outputs-- add up all the points--\nmake sure they're equal.",
    "start": "2935800",
    "end": "2940870"
  },
  {
    "text": "You reveal r and v to\nthe person receiving. And you don't want to forget r. r is now a private key.",
    "start": "2940870",
    "end": "2946280"
  },
  {
    "text": "If you forget r-- you're stuck. You can't prove\nanything anymore. You can make invalid\noutputs, which",
    "start": "2946280",
    "end": "2952840"
  },
  {
    "text": "are just points with\nno known r and v. But nobody should accept those. So you can do this where--",
    "start": "2952840",
    "end": "2960270"
  },
  {
    "text": "I have no idea what-- there is no commitment here. Maybe these have\nvalid commitments, but this is a point,\nwhich is w plus x minus y.",
    "start": "2960270",
    "end": "2967720"
  },
  {
    "text": "And there's no known r values\nor v values for these things.",
    "start": "2967720",
    "end": "2973590"
  },
  {
    "text": "And from the network's point of\nview, this will still be valid. The networks are saying, well,\nw plus x equals y plus z--",
    "start": "2973590",
    "end": "2980880"
  },
  {
    "text": "we're good. But then anyone accepting\nthat transaction-- you're not going to be able\nto give them an r value.",
    "start": "2980880",
    "end": "2988059"
  },
  {
    "text": "And so they're not going to\nsay this is actual money. So this is possible, but\nit's not a huge problem",
    "start": "2988060",
    "end": "2994060"
  },
  {
    "text": "because you can\ndestroy your own money. You can already do that in\na million different ways",
    "start": "2994060",
    "end": "2999970"
  },
  {
    "text": "in Bitcoin. But if you send to it\nto an output amount that doesn't have an actual r and\nv value-- that doesn't have",
    "start": "2999970",
    "end": "3007260"
  },
  {
    "text": "a valid Pedersen\ncommitment-- those coins can essentially be\ndestroyed because no one's going to be able to figure\nout r's and stuff for here.",
    "start": "3007260",
    "end": "3016720"
  },
  {
    "text": "So that's one issue-- not a big issue. Just don't do that. Don't ruin your own money.",
    "start": "3016720",
    "end": "3022297"
  },
  {
    "text": "Make sure you always\nhave valid commitments. And when you're\naccepting payments always make sure that you're given the\nvalues and the random blinding",
    "start": "3022297",
    "end": "3032440"
  },
  {
    "text": "factors. So that's one little risk\nbut not the big problem.",
    "start": "3032440",
    "end": "3038190"
  },
  {
    "text": "Anyone have an idea\nabout the big problem? So as a hint-- all of these things, and I\nhaven't written it because it",
    "start": "3038190",
    "end": "3045010"
  },
  {
    "text": "gets really redundant-- all of\nthese things are like mod p, which is some giant prime\nnumber that's 2 to 56 minus 17,",
    "start": "3045010",
    "end": "3057990"
  },
  {
    "text": "or it's not-- in the curve, ed25509 it's\n2 to the 255 minus 19.",
    "start": "3057990",
    "end": "3066593"
  },
  {
    "text": "So that's an easy\none to remember. So that's why they\ncall it curve 22519. In bitcoin, it's 2 to the\n256 minus some numbers that",
    "start": "3066593",
    "end": "3076130"
  },
  {
    "text": "are not too huge. So since all of these\nthings are modulo--",
    "start": "3076130",
    "end": "3082680"
  },
  {
    "start": "3078000",
    "end": "3088000"
  },
  {
    "text": "some big prime number-- what's a potential problem here?",
    "start": "3082680",
    "end": "3088242"
  },
  {
    "start": "3088000",
    "end": "3599000"
  },
  {
    "text": "It's a big problem\nor in some ways the opposite of a big problem.",
    "start": "3088242",
    "end": "3094748"
  },
  {
    "text": "Not a small problem. [LAUGHS] The opposite of a\nbig problem but not small--",
    "start": "3094748",
    "end": "3099925"
  },
  {
    "text": " big negative problem. [LAUGHS]",
    "start": "3099925",
    "end": "3107410"
  },
  {
    "text": "You can basically commit\nto negative values. So I send negative 99 coins\nhere, positive 108 coins here--",
    "start": "3107410",
    "end": "3119460"
  },
  {
    "text": "the numbers all work out. So you don't have negative. Usually, if you're\ndoing mod-some integer,",
    "start": "3119460",
    "end": "3126980"
  },
  {
    "text": "you don't think\nof it as negative, but you can think\nof being almost right at the top of\nthat modulo range",
    "start": "3126980",
    "end": "3134280"
  },
  {
    "text": "as being equivalent\nto being a negative 1. So if you say, I'm going\nto have p minus 1--",
    "start": "3134280",
    "end": "3141060"
  },
  {
    "text": "that's some huge number\nthat's within the very allowable range. But it also will\nlet you treat it",
    "start": "3141060",
    "end": "3148829"
  },
  {
    "text": "as a negative 1 for\noperations like addition and multiplication.",
    "start": "3148830",
    "end": "3153940"
  },
  {
    "text": "So this would work,\nand you can calculate what negative 99 is-- that's\njust going to be p minus 99,",
    "start": "3153940",
    "end": "3160740"
  },
  {
    "text": "or minus 100. I always am off by 1\nwhen I do these things. [LAUGHS] Wait, is it 100?",
    "start": "3160740",
    "end": "3167280"
  },
  {
    "text": "Anyway, so you can calculate-- it's not really minus 99-- it's some big number\nthat's going to be 32-bytes",
    "start": "3167280",
    "end": "3175260"
  },
  {
    "text": "long-- that's modulo.  Modulo p doesn't change, but\nit's equivalent to minus 99.",
    "start": "3175260",
    "end": "3183460"
  },
  {
    "text": "So that if I do add\nthese to this huge number plus this other small number,\nit loops over that modulo",
    "start": "3183460",
    "end": "3191020"
  },
  {
    "text": "and then gets back to-- what, 9. So this plus this is going\nto be 9 even though this",
    "start": "3191020",
    "end": "3197490"
  },
  {
    "text": "is some really long number. This plus-- this is going to be\nnine, and then it all adds up.",
    "start": "3197490",
    "end": "3203910"
  },
  {
    "text": "And then I've got this either\nnegative or implausibly large value that I've committed\nto, but I can just ignore that.",
    "start": "3203910",
    "end": "3212910"
  },
  {
    "text": "I can get rid of that. That negative output\nwill be hidden.",
    "start": "3212910",
    "end": "3218120"
  },
  {
    "text": "No one will see that I've\ngot this negative 99 here-- then I can toss it and\nend up with a whole bunch",
    "start": "3218120",
    "end": "3224810"
  },
  {
    "text": "of negative values\nthat are anti-coins and a whole bunch\nof more new coins.",
    "start": "3224810",
    "end": "3231800"
  },
  {
    "text": "And later on, I can prove\nI've got valid proofs-- all these w plus x equals y plus\nz proofs worked the whole time.",
    "start": "3231800",
    "end": "3241930"
  },
  {
    "text": "Shoot-- [LAUGHS] so we're stuck. ",
    "start": "3241930",
    "end": "3248359"
  },
  {
    "text": "We need more than a proof\nthat the sums are equal-- was working really well.",
    "start": "3248360",
    "end": "3254550"
  },
  {
    "text": "But just a proof that\nthe sums are equal is not enough because\nwe're modulo-- this big prime number.",
    "start": "3254550",
    "end": "3260680"
  },
  {
    "text": "And so you can make\nthese negations. We also need a proof that\nthey're non-negative, and not just not negative,\nbecause that negative 99 is",
    "start": "3260680",
    "end": "3270090"
  },
  {
    "text": "essentially p minus 99,\nwhich is some huge-- it's 2 to the 256 minus 99-ish.",
    "start": "3270090",
    "end": "3277466"
  },
  {
    "text": "So it's not just that\nthey're non-negative-- we have to prove that\nthey're reasonably sized-- that they're fairly small.",
    "start": "3277467",
    "end": "3283050"
  },
  {
    "text": "So if you could prove this\nnumber is non-negative, and it's less than 2 to the 64--",
    "start": "3283050",
    "end": "3289790"
  },
  {
    "text": "that would be cool. How can we prove something\nabout the number itself without revealing it? So now this is an\neven trickier problem,",
    "start": "3289790",
    "end": "3296630"
  },
  {
    "text": "because, before, we\nwanted to prove a sum. We wanted to prove\nthat z equals x plus y.",
    "start": "3296630",
    "end": "3304210"
  },
  {
    "text": "I don't want to tell\nyou what x plus y is, but I'll tell you what z is. That was proving a relation\nbetween these numbers.",
    "start": "3304210",
    "end": "3311310"
  },
  {
    "text": "This is just proving\nsomething about that number itself individually. We have to prove\nindividual numbers--",
    "start": "3311310",
    "end": "3318849"
  },
  {
    "text": "ranges. So we have to say, this to 2h-- there's a 2h in there, and I\ncan't show you it, because I'm",
    "start": "3318850",
    "end": "3325610"
  },
  {
    "text": "just committing a w. But I want to somehow\nshow you that the v here-- which should happen to\nbe 2, although I'm not",
    "start": "3325610",
    "end": "3331505"
  },
  {
    "text": "going to tell you-- the v there is within\na small range-- without telling you what it is--",
    "start": "3331505",
    "end": "3338340"
  },
  {
    "text": "without revealing it-- tricky. ",
    "start": "3338340",
    "end": "3345880"
  },
  {
    "text": "So what you can try to do\nis sign with the points.",
    "start": "3345880",
    "end": "3351640"
  },
  {
    "text": "Somehow, this is\nwhat'll get us there. The idea of we've got these\nPedersen commitments--",
    "start": "3351640",
    "end": "3358640"
  },
  {
    "text": "we've got these\npoints on a curve-- those are public keys. That's how we used to\nusually think of them.",
    "start": "3358640",
    "end": "3364200"
  },
  {
    "text": "Can we sign?  We know the private keys. We know r1.",
    "start": "3364200",
    "end": "3370060"
  },
  {
    "text": "We know 2. Can we make signatures\nsomehow and somehow use that to reveal some information\nabout h but not too much?",
    "start": "3370060",
    "end": "3381140"
  },
  {
    "text": "So the signature equation-- ",
    "start": "3381140",
    "end": "3386170"
  },
  {
    "text": "I didn't really review\nas much, but we've talked about this a couple times. Come up with a random value k--",
    "start": "3386170",
    "end": "3392280"
  },
  {
    "text": "take the hash of k\ntimes g and the message to be signed times\nyour private key--",
    "start": "3392280",
    "end": "3397290"
  },
  {
    "text": "that's your signature s. The problem is x. Your value that you've\ngot committed to here--",
    "start": "3397290",
    "end": "3404609"
  },
  {
    "text": "it's r2g plus 7h. What's your private key here?",
    "start": "3404610",
    "end": "3410120"
  },
  {
    "text": "Well, it's our 2 plus 7. But, no, because you know\nthe private scaler's here. But there's 2 points\ninvolved in this key.",
    "start": "3410120",
    "end": "3417810"
  },
  {
    "text": "So you can't make a signature. Generally, signatures\nare with respect to a single generator point. The way to verify this is\nto multiply both sides by g.",
    "start": "3417810",
    "end": "3426420"
  },
  {
    "text": "s times g should be k times\ng minus the hash of k times g, message times 8 times g which\nis a public key-- that works.",
    "start": "3426420",
    "end": "3432900"
  },
  {
    "text": "But now you've got h in here. So we're stuck.",
    "start": "3432900",
    "end": "3439930"
  },
  {
    "text": "We could try to define another\nsignature thing with both h and g, but that doesn't work. But what we can show, which\nis kind of interesting, well,",
    "start": "3439930",
    "end": "3449789"
  },
  {
    "text": "what if v is 0? Then x is r2 times g plus\n0h, which is just r2 times g.",
    "start": "3449790",
    "end": "3461780"
  },
  {
    "text": "This is nothing. There is no h here. And that means my private\nkey's going to be r2.",
    "start": "3461780",
    "end": "3469000"
  },
  {
    "text": "Well, now I can sign-- now I can re-sign with\nrespect to g with this point",
    "start": "3469000",
    "end": "3474100"
  },
  {
    "text": "x that I've committed to\nbecause the value is zero. ",
    "start": "3474100",
    "end": "3479850"
  },
  {
    "text": "The value-- the thing that\nI'm multiplying by h is 0. ",
    "start": "3479850",
    "end": "3486390"
  },
  {
    "text": "So it'll work for\na signature system. The same regular old\nsignature equation that we use, I can sign a\nmessage with key \"big X.\"",
    "start": "3486390",
    "end": "3496079"
  },
  {
    "text": "And so this is a\nproof of a 0 value-- I'll sign with my own key.",
    "start": "3496080",
    "end": "3501700"
  },
  {
    "text": "So if x is some random blinding\nfactor times g plus 0 times h--",
    "start": "3501700",
    "end": "3508660"
  },
  {
    "text": "where v, the value you're\ncommitting to is 0-- well, that means that\nthe signature is just--",
    "start": "3508660",
    "end": "3514750"
  },
  {
    "text": "so, the question is,\nwhat message do you sign? Well, maybe sign the message\nwhich is the pubkey itself. You don't need to sign a\nmessage but throw that in there.",
    "start": "3514750",
    "end": "3522310"
  },
  {
    "text": " And then this will work.",
    "start": "3522310",
    "end": "3527460"
  },
  {
    "text": "And someone can say, hey,\nhere's a signature from key x. And the signature is arbitrary.",
    "start": "3527460",
    "end": "3533603"
  },
  {
    "text": "It can be a signature\nof any message you want. But the fact that they are\nable to produce a signature reveals to you that v is 0.",
    "start": "3533603",
    "end": "3545910"
  },
  {
    "text": "So that's cool. It's not that cool, right? Because, well, I just\nrevealed my value,",
    "start": "3545910",
    "end": "3551040"
  },
  {
    "text": "and it revealed to be 0. But I did it\nwithout revealing r. So that is cool, right?",
    "start": "3551040",
    "end": "3556620"
  },
  {
    "text": "I could do it by saying, hey,\nhere's my r and v values-- multiply them and add them\nup to see that it gets",
    "start": "3556620",
    "end": "3562619"
  },
  {
    "text": "to the point I committed to. But I can now prove that-- I can prove something about\nv without revealing anything",
    "start": "3562620",
    "end": "3570870"
  },
  {
    "text": "about r. Before-- we were saying, the way\nyou reveal these commitments is you reveal the blinding\nfactor, and you",
    "start": "3570870",
    "end": "3576750"
  },
  {
    "text": "reveal the value itself. Well, now I can keep the\nblinding factor secret and reveal a little bit\nof information about v.",
    "start": "3576750",
    "end": "3584160"
  },
  {
    "text": "This works, and you can't\nsign if h is non-zero. You're not going to be able to--",
    "start": "3584160",
    "end": "3589670"
  },
  {
    "text": "you're not going to be able to\ncalculate any valid signature unless v is-- ah.",
    "start": "3589670",
    "end": "3595110"
  },
  {
    "text": "V is non-zero. Sorry.  So you can also do this\nwith a proof of v equals 1.",
    "start": "3595110",
    "end": "3604710"
  },
  {
    "text": "Again, sign your own key. So you define x prime\nto be just x minus h.",
    "start": "3604710",
    "end": "3610350"
  },
  {
    "text": "And then you can\nsay, well, look,",
    "start": "3610350",
    "end": "3615870"
  },
  {
    "text": "I'm going to prove\nto you that v is 1, and the way I do that is take\nthe point I've committed to x,",
    "start": "3615870",
    "end": "3621090"
  },
  {
    "text": "subtract h from it, and I'll provide a signature\non that new point.",
    "start": "3621090",
    "end": "3628150"
  },
  {
    "text": "Well, this should be v. I\ncan't do that unless v is 1.",
    "start": "3628150",
    "end": "3633490"
  },
  {
    "text": "So if I have this,\nand then I subtract h, then I get back to r times g. I can now provide a\nsignature just using r--",
    "start": "3633490",
    "end": "3641780"
  },
  {
    "text": "it'll work. So what does this get us?",
    "start": "3641780",
    "end": "3647600"
  },
  {
    "text": "We can prove that v is 0,\nor we can prove that v is 1, or, really, we can prove\nthat v is anything.",
    "start": "3647600",
    "end": "3653150"
  },
  {
    "text": "Just subtract a whole bunch\nof h's and subtract 7,000 h",
    "start": "3653150",
    "end": "3658940"
  },
  {
    "text": "and now provide a signature. And that proves\nthat v was 7,000. But wait, we just revealed\nv, so what's the point?",
    "start": "3658940",
    "end": "3666790"
  },
  {
    "text": "Did that really get us anywhere? If we can make a signature\nthat reveals the value",
    "start": "3666790",
    "end": "3673570"
  },
  {
    "text": "we've committed to with\nhiding the rest of the stuff-- is that useful?",
    "start": "3673570",
    "end": "3679580"
  },
  {
    "text": "If it's kind of cool, but\nwhat can we do with this? Any ideas?",
    "start": "3679580",
    "end": "3684880"
  },
  {
    "text": " So there's another part that I\ndidn't have time to introduce,",
    "start": "3684880",
    "end": "3693680"
  },
  {
    "text": "but maybe will at some point,\nand you can read about it. It's really cool. Ring signatures--\na ring signature",
    "start": "3693680",
    "end": "3700839"
  },
  {
    "text": "is similar to a\nnormal signature. You've got key pairs. You've got sign,\nverify, but there's",
    "start": "3700840",
    "end": "3708410"
  },
  {
    "text": "a set of public keys during\nthe signing and verification process.",
    "start": "3708410",
    "end": "3713420"
  },
  {
    "text": "So the basic idea\nis, I sign a message with one of the public keys,\nbut I don't tell you which one.",
    "start": "3713420",
    "end": "3719330"
  },
  {
    "text": "And you verify that, yep,\nthere was a signature here. I'm not quite sure\nwho signed it. There's possibly three\nor four different people",
    "start": "3719330",
    "end": "3725708"
  },
  {
    "text": "who may have signed it. But I know one of them\nsigned it but not which. So, basically, it's the\nkey-generation step--",
    "start": "3725708",
    "end": "3733650"
  },
  {
    "text": "same as before. You have some keygen-- takes in some randomness, and\nit spits out a private key",
    "start": "3733650",
    "end": "3738788"
  },
  {
    "text": "and a public key for you. And you can use those later. Sign, on the other hand--",
    "start": "3738788",
    "end": "3743910"
  },
  {
    "text": "sign function used\nto have the message to sign in your private key,\nand it would output a signature.",
    "start": "3743910",
    "end": "3749970"
  },
  {
    "text": "In ring signatures, you\nsign with the message you want to sign-- your private key\nand then pick a list",
    "start": "3749970",
    "end": "3756930"
  },
  {
    "text": "of other people's public keys. And this list can be\njust a single one.",
    "start": "3756930",
    "end": "3763109"
  },
  {
    "text": "It can be 1,000. You pick a bunch of other\npeople's public keys, and you generate a signature.",
    "start": "3763110",
    "end": "3769380"
  },
  {
    "text": "And then verify, you\nuse the signature to-- take the signature in--",
    "start": "3769380",
    "end": "3774740"
  },
  {
    "text": "the message that's been signed,\nand that list of pubkeys. And it outputs a Boolean of,\nyep, that signature worked,",
    "start": "3774740",
    "end": "3781670"
  },
  {
    "text": "or, no, it didn't but it\ndoesn't tell you which of the public keys is signed.",
    "start": "3781670",
    "end": "3787540"
  },
  {
    "text": "So this is a really cool idea. I think the initial\npaper was How to Leak a Secret, which was--",
    "start": "3787540",
    "end": "3795516"
  },
  {
    "text": "and then there's different\npapers about different more efficient ring signatures.",
    "start": "3795516",
    "end": "3800970"
  },
  {
    "text": "But this is a really\ncool thing to use. I think this could\nbe really cool",
    "start": "3800970",
    "end": "3806160"
  },
  {
    "text": "for a lot of different things. If people had public keys\nthat they were associated with",
    "start": "3806160",
    "end": "3812700"
  },
  {
    "text": "and wrote them on their business\ncards and stuff like I do-- you could then have\nleaking information",
    "start": "3812700",
    "end": "3819210"
  },
  {
    "text": "that's more credible. So instead of just\nthe newspaper saying, sources close to the\nmatter said x, y, z,",
    "start": "3819210",
    "end": "3825420"
  },
  {
    "text": "or a top official at the\nWhite House said this. You could have it\nbeing signed, and we've",
    "start": "3825420",
    "end": "3832680"
  },
  {
    "text": "got all these different White\nHouse officials' public keys-- one of them signed this message. So either there was\na key compromise,",
    "start": "3832680",
    "end": "3839408"
  },
  {
    "text": "and they all lost their keys,\nwhich is, in practice, probably more likely in that case, or\none of these people signed",
    "start": "3839408",
    "end": "3845520"
  },
  {
    "text": "this message, and I\nknow it's one of them, but it doesn't reveal\nanything about which",
    "start": "3845520",
    "end": "3850710"
  },
  {
    "text": "of the public keys-- so, that's pretty cool. So you can verify it's from a\nkey in the array of public keys",
    "start": "3850710",
    "end": "3857490"
  },
  {
    "text": "but not which. So let's put these together.",
    "start": "3857490",
    "end": "3863030"
  },
  {
    "text": "I can sign with x to\nprove that v is 0.",
    "start": "3863030",
    "end": "3869060"
  },
  {
    "text": "I could also sign with x prime,\nwhich I'm defining as x minus h to prove that v is 1.",
    "start": "3869060",
    "end": "3875760"
  },
  {
    "text": "Well, what if I have\na ring signature where I say I'm going to produce a\nsignature from both of these--",
    "start": "3875760",
    "end": "3882610"
  },
  {
    "text": "from one of these 2 public keys. And that would prove\nthat v is either 0 or 1.",
    "start": "3882610",
    "end": "3889365"
  },
  {
    "text": "But it doesn't prove which.  Make sense?",
    "start": "3889365",
    "end": "3894920"
  },
  {
    "text": "So the idea is, I can make these\nsignatures that essentially reveal what v is.",
    "start": "3894920",
    "end": "3900530"
  },
  {
    "text": "They indirectly reveal what v\nis by saying there's no way I could have made this\nsignature unless v was 0,",
    "start": "3900530",
    "end": "3907790"
  },
  {
    "text": "or unless v was 1\nbecause you're-- you know that the h component--",
    "start": "3907790",
    "end": "3913880"
  },
  {
    "text": "v is the coefficient for h. So you need to know that I don't\nhave an h component in there if I'm going to make a\nsignature with respect to g.",
    "start": "3913880",
    "end": "3922550"
  },
  {
    "text": "And I can make any number\nof different x primes",
    "start": "3922550",
    "end": "3927710"
  },
  {
    "text": "by subtracting\ndifferent amounts of h. But a single\nsignature would just",
    "start": "3927710",
    "end": "3932810"
  },
  {
    "text": "reveal what v was,\nwhich isn't useful. But a ring signature, whereas\nthere's 2 different pubkeys--",
    "start": "3932810",
    "end": "3939200"
  },
  {
    "text": "one of them's x-- one of them's\nx prime, we just subtract h. And I'm going to\nprovide a ring signature",
    "start": "3939200",
    "end": "3944869"
  },
  {
    "text": "from one of these 2 pubkeys. Now I've proven to you-- well, v is either 0 or 1--",
    "start": "3944870",
    "end": "3951349"
  },
  {
    "text": "it can't be both. But it can't be 2. It can't be 3. It's got to be one\nof those two values.",
    "start": "3951350",
    "end": "3958050"
  },
  {
    "text": "So does this make sense? Questions on this? Yes. AUDIENCE: What does\nunverified look like?",
    "start": "3958050",
    "end": "3963610"
  },
  {
    "text": "How does it verify that? TADGE DRYJA: Oh, well,\nthe original scheme",
    "start": "3963610",
    "end": "3972710"
  },
  {
    "text": "is kind of complicated. The one used in\nconfidential transactions is Borromean ring signatures.",
    "start": "3972710",
    "end": "3979010"
  },
  {
    "start": "3979010",
    "end": "3985320"
  },
  {
    "text": "You do a bunch of\nhash functions.  I don't know it.",
    "start": "3985320",
    "end": "3990870"
  },
  {
    "text": "I don't even really know it\nwell enough myself to really be able to explain it in a minute. But, basically, you\ncompute something",
    "start": "3990870",
    "end": "3997290"
  },
  {
    "text": "on all of the pubkeys,\nand then verify the signature on the\naggregate pubkey as a way",
    "start": "3997290",
    "end": "4002930"
  },
  {
    "text": "to think about it. The signatures can--\nthe computing time",
    "start": "4002930",
    "end": "4009319"
  },
  {
    "text": "gets big with a\nnumber of pubkeys. So if you have millions of\npubkeys that could possibly",
    "start": "4009320",
    "end": "4015500"
  },
  {
    "text": "be signing-- the verification algorithm\ngets really time-consuming.",
    "start": "4015500",
    "end": "4023030"
  },
  {
    "text": "So I can maybe go into ring\nsignatures another time. Yeah. AUDIENCE: I thought\nthe point of this",
    "start": "4023030",
    "end": "4028592"
  },
  {
    "text": "was to prove that\nv is non-negative. So right now, we're\njust saying it's not--",
    "start": "4028592",
    "end": "4034750"
  },
  {
    "text": "it could be two values. How does it help us\nthrough the signs? TADGE DRYJA: Well, neither\nof these are any good.",
    "start": "4034750",
    "end": "4041609"
  },
  {
    "text": "So we've just proven-- we've done quite a bit more\nthan prove it's non-negative. We've proved that it's\nexactly 0 or exactly 1.",
    "start": "4041610",
    "end": "4049310"
  },
  {
    "text": "We might want more values. So make a ring\nsignature from a million",
    "start": "4049310",
    "end": "4055039"
  },
  {
    "text": "different public keys\nwhere the pub n is just pub n minus 1 minus h.",
    "start": "4055040",
    "end": "4061730"
  },
  {
    "text": "And then I just proved that\nv is somewhere in the range from 0 to 99999. Yeah.",
    "start": "4061730",
    "end": "4067130"
  },
  {
    "text": "AUDIENCE: What is computation\ntime for ring signatures as the number of public keys? TADGE DRYJA: Yeah, it goes up.",
    "start": "4067130",
    "end": "4073220"
  },
  {
    "text": "The best is linear, or, no,\nthere might be-- sorry-- there's probably sublinear now. But this is not feasible.",
    "start": "4073220",
    "end": "4079190"
  },
  {
    "text": "[LAUGHS] The traditional\nring signatures are linear with the number of\npublic keys to be verified.",
    "start": "4079190",
    "end": "4086519"
  },
  {
    "text": "So if you did this-- well, all even then, you'd have\nto throw, though, because--",
    "start": "4086520",
    "end": "4094009"
  },
  {
    "text": "you have to at least\nthrow the public key into the verification function.",
    "start": "4094010",
    "end": "4099174"
  },
  {
    "text": "And so that means you need to\ncompute a million pubkeys-- throw it into that function. It's going to take a long time.",
    "start": "4099175",
    "end": "4104670"
  },
  {
    "text": "So this is not\nitself going to work.",
    "start": "4104670",
    "end": "4110239"
  },
  {
    "text": "Yeah. AUDIENCE: Just Monero\nuses ring signatures? TADGE DRYJA: Yes, Monero\nuses ring signatures",
    "start": "4110240",
    "end": "4117920"
  },
  {
    "text": "for a different reason. Well, now they use it for\nthis kind of thing, too. The Monero ring\nsignature was initially",
    "start": "4117920",
    "end": "4124389"
  },
  {
    "text": "used for not hiding\nthe amounts but hiding which outputs were being spent.",
    "start": "4124390",
    "end": "4132060"
  },
  {
    "text": "So in Bitcoin, everyone should-- ",
    "start": "4132060",
    "end": "4145460"
  },
  {
    "text": "So in Bitcoin if you\nhave a transaction-- here's my input,\nhere's my output.",
    "start": "4145460",
    "end": "4150989"
  },
  {
    "text": "And the simplest one is just-- this points to tx5 or something,\nand then my output is address--",
    "start": "4150990",
    "end": "4157245"
  },
  {
    "text": " and it's address b,\nand it's got 7 coins.",
    "start": "4157245",
    "end": "4165689"
  },
  {
    "text": "Everyone can see\nwhat you're spending. The idea in Monero is, I\ndon't point to an input--",
    "start": "4165689",
    "end": "4173580"
  },
  {
    "text": "I just provide a signature. And it's up to you to figure\nout where that signature's from. So I provide a signature\nand a list of pubkeys--",
    "start": "4173580",
    "end": "4181479"
  },
  {
    "text": "pub a-- pub b. So the smallest would be 2. And then I provide a key--",
    "start": "4181479",
    "end": "4188294"
  },
  {
    "text": "key in a number. So the idea is instead of\nthinking of it as outputs,",
    "start": "4188294",
    "end": "4193729"
  },
  {
    "text": "you think pubkeys have\nassociated values. You don't look at the\ntransactions themselves.",
    "start": "4193729",
    "end": "4199130"
  },
  {
    "text": "This is key c. And there previously have been--\npubkey a and pubkey b have had",
    "start": "4199130",
    "end": "4206620"
  },
  {
    "text": "values-- 7 coins sent to them. And I can now say,\nlook, I'm going to provide a ring signature from\neither pubkey a or pubkey b.",
    "start": "4206620",
    "end": "4217490"
  },
  {
    "text": "And I'm not going\nto tell you which, but you can see that both\npubkey a and pubkey b have",
    "start": "4217490",
    "end": "4223730"
  },
  {
    "text": "received 7 coins in the past. I want to send 7\ncoins over here. I'm going to prove that\nI own one of those two.",
    "start": "4223730",
    "end": "4230270"
  },
  {
    "text": "And then you can validate\nthat the transaction's valid. And then if later, you see\nanother transaction with a ring",
    "start": "4230270",
    "end": "4240400"
  },
  {
    "text": "signature from pub a-- pub b-- also sending\nto the key d--",
    "start": "4240400",
    "end": "4249072"
  },
  {
    "text": "7 coins. Now, I can delete\npub a and pub b. I don't know which, this--",
    "start": "4249072",
    "end": "4254889"
  },
  {
    "text": "so in transaction 1, I don't\nknow whether a or b was spent, but one of those two was.",
    "start": "4254890",
    "end": "4260330"
  },
  {
    "text": "And then in transaction 2,\nI don't know whether a or b are spent-- one of them was. But anyway, they've\nboth been spent now.",
    "start": "4260330",
    "end": "4265610"
  },
  {
    "text": "And so I can delete\nthem from my storage. But the ring\nsignature's in Monero",
    "start": "4265610",
    "end": "4270650"
  },
  {
    "text": "were used to obscure the\ntransaction graph itself-- where you can see that there's\na bunch of different keys",
    "start": "4270650",
    "end": "4276559"
  },
  {
    "text": "that have money\nassociated with them. And I'm going to\nprovide a signature that I own one of them,\nbut I don't tell you which.",
    "start": "4276560",
    "end": "4283820"
  },
  {
    "text": "And now they also do\nconfidential transactions to obscure the outputs using\nring signatures as well.",
    "start": "4283820",
    "end": "4289590"
  },
  {
    "text": "So I don't-- well,\nit's interesting. I haven't looked\nat it that closely.",
    "start": "4289590",
    "end": "4295737"
  },
  {
    "text": "So I know that's the basic idea. But there's a lot of\nsubtle details involved in how that works, and I'm\nnot super familiar with that.",
    "start": "4295737",
    "end": "4301996"
  },
  {
    "text": " So I can finish up.",
    "start": "4301996",
    "end": "4307560"
  },
  {
    "text": "So the way to make\nthis practical is, let's say you have a\nring signature for each bit,",
    "start": "4307560",
    "end": "4314322"
  },
  {
    "text": "so you're going to have to\nhave a different signature for each bit in your value.",
    "start": "4314322",
    "end": "4319650"
  },
  {
    "text": "So the pubkey x0-- well, I'm going to have\na ring signature where I",
    "start": "4319650",
    "end": "4325350"
  },
  {
    "text": "prove that it's either 0 or 1. And here I'm going to\nprove it's either a 0 or 2. Here I'm going to prove\nit's either 0 or 4.",
    "start": "4325350",
    "end": "4331470"
  },
  {
    "text": "And so if I have\n32 signatures, I can now prove a 32-bit number.",
    "start": "4331470",
    "end": "4338159"
  },
  {
    "text": "Each of those\nindividual signatures only has 2 public keys\nassociated with it. So that's now more feasible.",
    "start": "4338160",
    "end": "4345800"
  },
  {
    "text": "There's a total of 32\npublic keys, 32 signatures-- not the end of the world--\nstill kind of ugly.",
    "start": "4345800",
    "end": "4352730"
  },
  {
    "text": "And then there's\noptimizations where since these pubkeys are all\nthe same, the 0 value for that",
    "start": "4352730",
    "end": "4361150"
  },
  {
    "text": "bit-- we can squish them\ntogether and stuff to make it a little bit smaller. ",
    "start": "4361150",
    "end": "4368150"
  },
  {
    "text": "So you have a signature\nper bit of your output. If your values are not\ntoo big-- this works.",
    "start": "4368150",
    "end": "4374460"
  },
  {
    "text": "We're going to\nlimit it to 32-bits. So from 0 to 4 billion. Now you can prove that each\nbit was either a 0 or 1,",
    "start": "4374460",
    "end": "4385340"
  },
  {
    "text": "essentially, without revealing\nwhether it was a 0 or 1. And then it's a couple\nof kilobytes per output.",
    "start": "4385340",
    "end": "4392390"
  },
  {
    "text": "So it's a little bit annoying. It used to be 8 bytes. You said, hey,\nI've got 37 points.",
    "start": "4392390",
    "end": "4398960"
  },
  {
    "text": "Also, these 8 bytes are very\nsparse in that they rarely exceed 4 bytes.",
    "start": "4398960",
    "end": "4406440"
  },
  {
    "text": "So you can compact\nit down on disk. So this is a little-- scalability-wise, it's an issue.",
    "start": "4406440",
    "end": "4413510"
  },
  {
    "text": "You're now going from what used\nto be 8 bytes is now a couple kilobytes. I think they've got it\ndown to 2 kilobytes.",
    "start": "4413510",
    "end": "4420080"
  },
  {
    "text": "But still, that's 2 kilobytes. And it takes a bit more\nCPU time to verify. Because now, instead of\nverifying one signature",
    "start": "4420080",
    "end": "4427340"
  },
  {
    "text": "to see that the coins are\nmoving to the right place, you're verifying\n30-plus signatures",
    "start": "4427340",
    "end": "4434360"
  },
  {
    "text": "for every input and output.",
    "start": "4434360",
    "end": "4439480"
  },
  {
    "text": "Also, the real problem\nis it's not really compatible with Bitcoin-- this would be a really\ntricky fork to implement.",
    "start": "4439480",
    "end": "4445340"
  },
  {
    "text": "How do you implement this\nsuch that the old software on the network is OK\nwith these transactions",
    "start": "4445340",
    "end": "4451460"
  },
  {
    "text": "where they're expecting a\ntransaction that has a value? Here's how many coins\nare being moved.",
    "start": "4451460",
    "end": "4457880"
  },
  {
    "text": "If you say, no, I'm not\ngoing to tell you anymore. Well, old software doesn't\nknow how to deal with this and by default, will\nreject these transactions.",
    "start": "4457880",
    "end": "4464810"
  },
  {
    "text": "So there's ways to do it that\ndoesn't break compatibility, but they're pretty ugly.",
    "start": "4464810",
    "end": "4472760"
  },
  {
    "text": "One of the ways is\nto say, OK, from now on, all these transactions--\nall output values have to be 0.",
    "start": "4472760",
    "end": "4478490"
  },
  {
    "text": "So the old software\nwill still work, but it will be pretty\nconfused and say, I see all these values.",
    "start": "4478490",
    "end": "4484340"
  },
  {
    "text": "I see thousands of transactions. No one seems to be\nsending anyone any money. So they seem to be pointless.",
    "start": "4484340",
    "end": "4490190"
  },
  {
    "text": "And then there's\nthis hidden value that's in a different\ndata structure that would look something like segwit.",
    "start": "4490190",
    "end": "4496250"
  },
  {
    "text": "And segwit was a little bit\nugly-- this would be real ugly. Those are the trade-offs\nwe're dealing with here--",
    "start": "4496250",
    "end": "4503750"
  },
  {
    "text": "tricky fork. But you get this. This is what you get when you\nuse confidential transactions.",
    "start": "4503750",
    "end": "4512150"
  },
  {
    "text": "You got it, right? We have private,\nunlinkable amounts where the network can verify--",
    "start": "4512150",
    "end": "4517590"
  },
  {
    "text": "OK, let me verify that w\nplus x equals y plus z-- that's the easy part.",
    "start": "4517590",
    "end": "4522660"
  },
  {
    "text": "Now, let me verify for every\nindividual w, x, y, and z that it is within the\nrange of 0 to 6223222232--",
    "start": "4522660",
    "end": "4531192"
  },
  {
    "text": "02 to the 32-- it's a tongue-twister--\nby verifying",
    "start": "4531192",
    "end": "4537193"
  },
  {
    "text": "all these separate\nring signatures for each bit of the amount.  But you can do it, right?",
    "start": "4537193",
    "end": "4543140"
  },
  {
    "text": "You can verify-- input\namounts equal output amounts. All these input amounts\nand output amounts",
    "start": "4543140",
    "end": "4549889"
  },
  {
    "text": "are normal looking\nnumbers that aren't too big that aren't\nright up near the modulos to wrap around.",
    "start": "4549890",
    "end": "4555590"
  },
  {
    "text": "And it works-- it's\njust big and slow-- we're trying to\nmake that faster.",
    "start": "4555590",
    "end": "4562280"
  },
  {
    "text": "So probably not going to go--\nif you're interested in this, though, there's a lot of\nresearch about this kind",
    "start": "4562280",
    "end": "4567530"
  },
  {
    "text": "of thing right now. It's really cool getting in\nthe crazy, interesting math. So there's bulletproofs, which\nwas Benedict's at Stanford.",
    "start": "4567530",
    "end": "4576800"
  },
  {
    "text": "He wrote up-- I mean, a\nbunch of people wrote it, but I think it was\nsort of his idea, or his thing working\nwith other people, too.",
    "start": "4576800",
    "end": "4585320"
  },
  {
    "text": "That's more efficient\nrange proofs. I do not know how\nbulletproofs work. I tried to read the paper\nand got two pages in,",
    "start": "4585320",
    "end": "4592160"
  },
  {
    "text": "and I don't know. [LAUGHS] But I'm sure\nI could figure it out-- it would just take\nme a long time.",
    "start": "4592160",
    "end": "4599000"
  },
  {
    "text": "And then the Borromean\nring signatures-- the more efficient\nring signatures that can compact a lot of\ndata so that you're not--",
    "start": "4599000",
    "end": "4606930"
  },
  {
    "text": "so you get it down\nto two kilobytes for these range proofs in\nconfidential transactions.",
    "start": "4606930",
    "end": "4613610"
  },
  {
    "text": "And then I may try\nto give a class about this in a week or two-- MimbleWimble.",
    "start": "4613610",
    "end": "4620000"
  },
  {
    "text": "The idea is that when all of\nthe transactions in the network are like this and that have\nconfidential inputs and outputs",
    "start": "4620000",
    "end": "4626900"
  },
  {
    "text": "amounts, the transactions\ncan be canceled out in an interesting way. Because the output\namounts are unique.",
    "start": "4626900",
    "end": "4634495"
  },
  {
    "text": "They have these\nblinding factors. They have these range proofs. And so if you're in a block--",
    "start": "4634495",
    "end": "4640820"
  },
  {
    "text": "so just a hint\nabout MimbleWimble-- the idea is if you have\na transaction and amounts",
    "start": "4640820",
    "end": "4647990"
  },
  {
    "text": "are all obscured. But a is being consumed,\nb is being consumed, c is being created,\nd is being created.",
    "start": "4647990",
    "end": "4654920"
  },
  {
    "text": "These are amounts. And then I see\nlater in the block",
    "start": "4654920",
    "end": "4660950"
  },
  {
    "text": "there is another transaction\nwhich spends d coins and sends to e coins. ",
    "start": "4660950",
    "end": "4670350"
  },
  {
    "text": "I don't have to verify that\na plus b equal c plus d. And d equals e kind of thing--",
    "start": "4670350",
    "end": "4677730"
  },
  {
    "text": "I can just cross these out. And I can verify on\na block-level instead of a transaction-level that\nthe input amounts and output",
    "start": "4677730",
    "end": "4684750"
  },
  {
    "text": "amounts all matched up because\nI don't know what d is.",
    "start": "4684750",
    "end": "4690110"
  },
  {
    "text": "But, anyway, it was\non an output side and on an input side\nwithin the same block. So, anyway, it's gone.",
    "start": "4690110",
    "end": "4697350"
  },
  {
    "text": "It's being added to and\nsubtracted in this block. So I can do that. And I can do that\nover multiple blocks.",
    "start": "4697350",
    "end": "4702450"
  },
  {
    "text": "And I can basically keep\na tally of how many coins are in the system and\ncancel things out.",
    "start": "4702450",
    "end": "4710160"
  },
  {
    "text": "So that lets you do some\nreally cool things where you can skip a lot\nof verification at no loss of security.",
    "start": "4710160",
    "end": "4717220"
  },
  {
    "text": "So that's the idea of\na MimbleWimble, which is really a fun paper because it\nwas written by Lord Voldemort.",
    "start": "4717220",
    "end": "4722830"
  },
  {
    "text": " Someone posted a\nPastebin link on IRC.",
    "start": "4722830",
    "end": "4729320"
  },
  {
    "text": "And who knows who wrote this-- Lord Voldemort. Except it was Lord Voldemort-- the French word\nfor Lord Voldemort.",
    "start": "4729320",
    "end": "4736199"
  },
  {
    "text": "So when they translated\nHarry Potter into French, they changed the\nnames around, I guess,",
    "start": "4736200",
    "end": "4741210"
  },
  {
    "text": "and it was the French\nequivalent of Lord Voldemort. And so now there's a bunch of\npeople programming MimbleWimble",
    "start": "4741210",
    "end": "4747780"
  },
  {
    "text": "and implementing it. And they all use Harry Potter-- not all of them,\nbut a lot of them use Harry Potter\nnames on GitHub.",
    "start": "4747780",
    "end": "4753055"
  },
  {
    "text": "So it's kind of funny. It's also really funny that\nit was one of the most--",
    "start": "4753055",
    "end": "4758580"
  },
  {
    "text": "I would say, the most-- whoa, kind of paper of 2016 now.",
    "start": "4758580",
    "end": "4766660"
  },
  {
    "text": "And so it's of an\ninteresting indicator of the space we're working in\nthat you've got IBM and all",
    "start": "4766660",
    "end": "4772010"
  },
  {
    "text": "these big companies, and they're\nworking on blockchain research, and, honestly, not a\nton of awesome stuff,",
    "start": "4772010",
    "end": "4778760"
  },
  {
    "text": "whereas like, whoa,\nMimbleWimble, OK, Lord Voldemort-- he really showed everyone. [LAUGHS] So it's fun that it's\nstill a very out-there hackery",
    "start": "4778760",
    "end": "4788690"
  },
  {
    "text": "system. So that's-- hopefully, most\npeople got most of the idea.",
    "start": "4788690",
    "end": "4794320"
  },
  {
    "text": "It's a little bit fast. It sort of explained all the\nPedersen commitments and range",
    "start": "4794320",
    "end": "4799580"
  },
  {
    "text": "proofs and everything\nin a little bit of time. But I think you got the idea. And if you're interested\nin it, there's a lot of current\nresearch on this",
    "start": "4799580",
    "end": "4806239"
  },
  {
    "text": "and people implementing it. And there's a lot of cool\nthings you can do with it, so.",
    "start": "4806240",
    "end": "4810250"
  }
]