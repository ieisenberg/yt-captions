[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "6859"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation, or view\nadditional materials from",
    "start": "6860",
    "end": "13420"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at ocw.mit.edu.",
    "start": "13420",
    "end": "18770"
  },
  {
    "text": " PROFESSOR: Mike Acton today\nwho has done a lot of",
    "start": "18770",
    "end": "25800"
  },
  {
    "text": "programming on cell and also\ndone a lot of game development. He came from California just\nlike this today and",
    "start": "25800",
    "end": "32270"
  },
  {
    "text": "[OBSCURED]. MIKE ACTON: Yeah, it's\nreally cool. I'll tell you. PROFESSOR: He's going to talk\nabout what it's really like to",
    "start": "32270",
    "end": "40790"
  },
  {
    "text": "use cell and PS3 and what it's\nlike to program games. So I think it's going\nto be a fun lecture.",
    "start": "40790",
    "end": "47980"
  },
  {
    "text": "MIKE ACTON: All right, so\nanyway, I'm the Engine Director at Insomniac Games.",
    "start": "47980",
    "end": "54430"
  },
  {
    "text": "I've only recently taken that\nposition, previously I was working on PS3 technology at\nHighmoon studios, which is",
    "start": "54430",
    "end": "62530"
  },
  {
    "text": "with vin studios. And I've worked at Sony.",
    "start": "62530",
    "end": "68350"
  },
  {
    "text": "I've worked for Titus, and\nBluesky Studios in San Diego.",
    "start": "68350",
    "end": "78549"
  },
  {
    "text": "And I've been doing game\ndevelopment, 11, 12 years.",
    "start": "78550",
    "end": "83670"
  },
  {
    "text": "Before that I was working\nin simulation. So, the PlayStation 3 is\na really fun platform.",
    "start": "83670",
    "end": "93200"
  },
  {
    "text": "And I know you guys have been\nworking on cell development. Working with the PS3\nunder Linux.",
    "start": "93200",
    "end": "99220"
  },
  {
    "text": "Working as developers for the\nPS3 is definitely a different environment from that.",
    "start": "99220",
    "end": "104340"
  },
  {
    "text": "I think I'm going to concentrate\nmore on the high-level aspects of how you\ndesign a game for the cell.",
    "start": "104340",
    "end": "110850"
  },
  {
    "text": "And how the cell would impact\nthe design, and what are the elements of the game.",
    "start": "110850",
    "end": "116960"
  },
  {
    "text": "Just stuff that you probably\nhaven't had as part of this course that you might\nfind interesting.",
    "start": "116960",
    "end": "122950"
  },
  {
    "text": "And you can feel free to\ninterrupt me at any time with questions or whatever\nyou'd like. ",
    "start": "122950",
    "end": "132819"
  },
  {
    "text": "So just, I wanted to go over,\nbriefly, some of the different types of game development and\nwhat the trade-offs for each",
    "start": "132820",
    "end": "139370"
  },
  {
    "text": "one of them are. Casual games, console games,\nPC games, blah, blah, blah.",
    "start": "139370",
    "end": "144379"
  },
  {
    "text": "Casual games, basically, are the\nsmall, simple games that you would download on\nthe PC, or you would",
    "start": "144380",
    "end": "150485"
  },
  {
    "text": "see on Yahoo or whatever. And those generally don't have\nreally strict performance requirements. Where a console game, we have\nthis particular advantage of",
    "start": "150485",
    "end": "158780"
  },
  {
    "text": "knowing the hardware and the\nhardware doesn't change for an entire cycle. So for five, six years, we have",
    "start": "158780",
    "end": "164099"
  },
  {
    "text": "exactly the same hardware. And that's definitely an\nadvantage from a performance point anyway.",
    "start": "164100",
    "end": "170350"
  },
  {
    "text": "In this case, it's\nPlayStation 3. ",
    "start": "170350",
    "end": "177240"
  },
  {
    "text": "As far as develpment priorities,\ndevelopment priorities for a console game--\nand especially a PS3 game-- development would be\ncompletely different than you",
    "start": "177240",
    "end": "183810"
  },
  {
    "text": "might find on another\nkind of application. We don't really consider the\ncode itself important at all.",
    "start": "183810",
    "end": "191890"
  },
  {
    "text": "The real value is in\nthe programmers. The real value is in\nthe experience, and is in those skills.",
    "start": "191890",
    "end": "198599"
  },
  {
    "text": "Code is disposable. After six years, when we start\na new platform we pretty much",
    "start": "198600",
    "end": "204020"
  },
  {
    "text": "have to rewrite it anyway, so\nthere's not much point in trying to plan for a long\nlife span of code.",
    "start": "204020",
    "end": "211190"
  },
  {
    "text": "Especially when you have\noptimized code written in assembly for a particular\nplatform. ",
    "start": "211190",
    "end": "218500"
  },
  {
    "text": "And to that end, the data is\nway more significant to the performance than the\ncode, anyway.",
    "start": "218500",
    "end": "223849"
  },
  {
    "text": "And the data is specific\nto a particular game. Or specific to a particular\ntype of game.",
    "start": "223850",
    "end": "230450"
  },
  {
    "text": "And certainly specific to\na studios pipeline.",
    "start": "230450",
    "end": "236280"
  },
  {
    "text": "And it's the design of the data\nwhere you really want to spend your time concentrating,\nespecially for the PS3. ",
    "start": "236280",
    "end": "243430"
  },
  {
    "text": "Ease of programming-- whether\nor not it's easier to do parallelism is not a major\nconcern at all. If it's hard, so what?",
    "start": "243430",
    "end": "249680"
  },
  {
    "text": "You do it. That's it. Portability, runs on PlayStation\n3, doesn't run anywhere else.",
    "start": "249680",
    "end": "255280"
  },
  {
    "text": "That's a non-concern. And everything is about\nperformance. Everything we do.",
    "start": "255280",
    "end": "260440"
  },
  {
    "text": "A vast majority of our code is\neither hand up from IC, or assembly, very little\nhigh level code.",
    "start": "260440",
    "end": "266379"
  },
  {
    "text": "Some of our gameplay programmers\nwill write C plus plus for the high level logic,\nbut as a general, most of the",
    "start": "266380",
    "end": "273750"
  },
  {
    "text": "code that's running most the\ntime is definitely optimized. Yeah?",
    "start": "273750",
    "end": "278950"
  },
  {
    "text": "AUDIENCE: If programming is a\nnon-priority, does that mean to say that if you're developing\nmore than one",
    "start": "278950",
    "end": "285060"
  },
  {
    "text": "product or game, they don't\nshare any common infrastructure or need? MIKE ACTION: No, that's\nnot necessarily true. If we have games that share\nsimilar needs, they can",
    "start": "285060",
    "end": "293440"
  },
  {
    "text": "definitely share similar code. I mean, the point I'm trying to\nmake is, let's say in order",
    "start": "293440",
    "end": "298850"
  },
  {
    "text": "to make something fast it\nhas to be complicated. So be it, it's complicated.",
    "start": "298850",
    "end": "305990"
  },
  {
    "text": "Whether or not it's easy to use\nfor another programmer is not a major concern.",
    "start": "305990",
    "end": "311259"
  },
  {
    "text": "AUDIENCE: So you wish\nit was easier? MIKE ACTION: No. I don't care.",
    "start": "311260",
    "end": "316600"
  },
  {
    "text": "That's my point. AUDIENCE: Well, it's not as\nimportant as performance, but if someone came to you with a\nhigh performance tool, you",
    "start": "316600",
    "end": "322360"
  },
  {
    "text": "would like to use it? MIKE ACTION: I doubt\nthey could.  The highest performance tool\nthat exists is the brains of",
    "start": "322360",
    "end": "329460"
  },
  {
    "text": "the programmers on our team. You can not create-- it's theoretically impossible.",
    "start": "329460",
    "end": "335040"
  },
  {
    "text": "You can not out perform people\nwho are customizing for the data, for the context\nfor the game.",
    "start": "335040",
    "end": "342520"
  },
  {
    "text": "It is not even remotely\ntheoretically possible. AUDIENCE: That didn't come out\nin assembly programming for",
    "start": "342520",
    "end": "348620"
  },
  {
    "text": "general purpose but we'll\ntake this offline? And there was a day when that\nwas also true for general",
    "start": "348620",
    "end": "354789"
  },
  {
    "text": "preferred cleary at the time,\nbut it's no longer true. MIKE ACTION: It is\nabsolutely-- AUDIENCE: So the average person\nprefers to go on -- take it offline.",
    "start": "354790",
    "end": "360300"
  },
  {
    "text": " MIKE ACTION: Average person. We're not the average people. We're game programmers.",
    "start": "360300",
    "end": "365719"
  },
  {
    "text": "Yeah? AUDIENCE: So does cost\never become an issue? I mean-- MIKE ACTION: Absolutely, cost\ndoes become an issue. At a certain pont, something\nis so difficult that you",
    "start": "365720",
    "end": "375210"
  },
  {
    "text": "either have to throw up\nyour hands or you can't finish in time. AUDIENCE: Do you ever\nhit that point?",
    "start": "375210",
    "end": "380900"
  },
  {
    "text": "MIKE ACTION: Or you figure out\na new way of doing it. Or do a little bit less. I mean we do have to prioritize what you want to do.",
    "start": "380900",
    "end": "387060"
  },
  {
    "text": "At the end of the day you can't\ndo everything you want to do, and you have another\ngame you need to ship eventually, anyway.",
    "start": "387060",
    "end": "392520"
  },
  {
    "text": "So, a lot of times you do\nend up tabling things. And say, look we can get 50%\nmore performance out of this,",
    "start": "392520",
    "end": "398300"
  },
  {
    "text": "but we're going to have to table\nthat for now and scale back on the content. And that's why you have six\nyears of development.",
    "start": "398300",
    "end": "404340"
  },
  {
    "text": "You know, maybe in the next\ncycle, in the next game, you'll be able to squeeze\nout a little bit more. And the next one you squeeze\nout a little bit more.",
    "start": "404340",
    "end": "410370"
  },
  {
    "text": "That's sort of this continuous\ndevelopment, and continuous optimization over the course\nof a platform.",
    "start": "410370",
    "end": "417740"
  },
  {
    "text": "And sometimes, yeah, I mean\noccasionally you just say yeah, we can't do it or\nwhatever, it doesn't work.",
    "start": "417740",
    "end": "423720"
  },
  {
    "text": "I mean, that's part and parcel\nof development in general. Some ideas just don't pan out.",
    "start": "423720",
    "end": "428900"
  },
  {
    "text": " But-- AUDIENCE: Have you ever come\ninto a situation where",
    "start": "428900",
    "end": "434961"
  },
  {
    "text": "programming conflicts just\nkills a project? Like Microsoft had had a few\ntimes, like they couldn't put",
    "start": "434961",
    "end": "440137"
  },
  {
    "text": "out [OBSCURED]. Couldn't release for-- MIKE ACTION: Sure, there's\nplenty of studios where the programming complexity has\nkilled the studio, or killed",
    "start": "440137",
    "end": "446090"
  },
  {
    "text": "the project. But I find it hard to believe--\nor it's very rarely-- because it's complexity\nthat has to do",
    "start": "446090",
    "end": "452729"
  },
  {
    "text": "specifically with\noptimization. That complexity usually has\nto do with unnecessary",
    "start": "452730",
    "end": "458159"
  },
  {
    "text": "complexity. Complexity that doesn't\nachieve anything. Organization for the sake\nof organization.",
    "start": "458160",
    "end": "463500"
  },
  {
    "text": "So you have these sort of over\ndesigned C plus plus hierarchies just for the sake\nof over organizing things.",
    "start": "463500",
    "end": "471870"
  },
  {
    "text": "That's what will generally\nkill a project. But in performance, the\ncomplexity tends to come from",
    "start": "471870",
    "end": "477759"
  },
  {
    "text": "the rule set-- what you need\nto do to set it up. But the code tends to be smaller\nwhen it's faster.",
    "start": "477760",
    "end": "483700"
  },
  {
    "text": "You tend to be doing one\nthing and doing one thing really well. So it doesn't tend to\nget out of hand.",
    "start": "483700",
    "end": "488980"
  },
  {
    "text": "I mean, it occasionally\nhappens but, yeah? AUDIENCE: So in terms of the\noverall cost, how big is this",
    "start": "488980",
    "end": "496395"
  },
  {
    "text": "programming versus the\nother aspect of coming up with the game? Like the game design,\nthe graphics--",
    "start": "496395",
    "end": "503220"
  },
  {
    "text": "AUDIENCE: So, for example,\ndo you have-- MIKE ACTION: OK, development\nteam? ",
    "start": "503220",
    "end": "510830"
  },
  {
    "text": "So-- AUDIENCE: So how many\nprogrammers, how many artists, how many-- PROFESSOR: Maybe, let's-- so\nfor example, like, now it's",
    "start": "510830",
    "end": "517620"
  },
  {
    "text": "like, what, $20 million\nto deliver a PS3 game? MIKE ACTION: Between $10\nand $20 million, yeah. PROFESSOR: So let's\ndevelop [OBSCURED]",
    "start": "517620",
    "end": "524800"
  },
  {
    "text": "MIKE ACTION: So artists\nare by far the most-- the largest group\nof developers.",
    "start": "524800",
    "end": "531550"
  },
  {
    "text": "So you have animators and shade\nartists, and textual artists, and modelers,\nand enviromental artists, and lighters.",
    "start": "531550",
    "end": "537110"
  },
  {
    "text": "And so they'll often outnumber\nprogrammers 2:1.",
    "start": "537110",
    "end": "542630"
  },
  {
    "text": "Which is completely different\nthan-- certainly very different from PlayStation and\nthe gap is much larger than it",
    "start": "542630",
    "end": "549480"
  },
  {
    "text": "was on PlayStation 2. With programmers you tend to\nhave a fairly even split or",
    "start": "549480",
    "end": "556660"
  },
  {
    "text": "you tend to have a divide\nbetween the high level game play programmers and the low\nlevel engine programmers. And you will tend to have more\ngame play programmers than",
    "start": "556660",
    "end": "563700"
  },
  {
    "text": "engine programmers, although\nmost-- the majority of the CPU time is spent in the\nengine code.",
    "start": "563700",
    "end": "569880"
  },
  {
    "text": "And that partially comes down\nto education and experience.",
    "start": "569880",
    "end": "575030"
  },
  {
    "text": "In order to get high performance\ncode you need to have that experience.",
    "start": "575030",
    "end": "580689"
  },
  {
    "text": "You need to know how\nto optimize. You need to understand\nthe machine. You need to understand the\narchitecture and you need to understand the data.",
    "start": "580690",
    "end": "586990"
  },
  {
    "text": "And there's only so many people\nthat can do that on any particular team. AUDIENCE: Code size wise, How\nis the code size divided",
    "start": "586990",
    "end": "596401"
  },
  {
    "text": "between game playing and\nAI, special effects? MIKE ACTION: Just like,\nthe amount of code?",
    "start": "596401",
    "end": "601410"
  },
  {
    "text": "AUDIENCE: Yeah, it should\nbe small I guess. MIKE ACTION: Yeah, I mean,\nit's hard to say. I mean, because it depends\non how many",
    "start": "601410",
    "end": "607420"
  },
  {
    "text": "features you're using. And, you know sort of the scope\nof the engine is how much is being used for a\nparticular game, especially if",
    "start": "607420",
    "end": "613780"
  },
  {
    "text": "you're targeting multiple\ngames within a studio. But quite often-- interestingly\nenough-- the",
    "start": "613780",
    "end": "620460"
  },
  {
    "text": "game play code actually\noverwhelms the engine code in terms of size and that is back\nto basically what I was saying",
    "start": "620460",
    "end": "627590"
  },
  {
    "text": "that the engine code tends to do\none thing really well or a series of things really well. AUDIENCE: Game play code\nalso C plus plus?",
    "start": "627590",
    "end": "634790"
  },
  {
    "text": "MIKE ACTON: These days it's\nmuch more likely that game play code is C plus plus in\nthe high level and kills",
    "start": "634790",
    "end": "640220"
  },
  {
    "text": "performance and doesn't think\nabout things like cache.",
    "start": "640220",
    "end": "645290"
  },
  {
    "text": " That's actually part of the\nproblem with PlayStation 3",
    "start": "645290",
    "end": "652060"
  },
  {
    "text": "development. It was part of the challenge\nthat we've had with PlayStation 3 development. Is in the past, certainly with\nPlayStation 2 and definitely",
    "start": "652060",
    "end": "659970"
  },
  {
    "text": "on any previous console, this\ndivide between game play and engine worked very well.",
    "start": "659970",
    "end": "665600"
  },
  {
    "text": " The game play programmers could\njust call a function and it did its fat thing really fast\nand it came back and they",
    "start": "665600",
    "end": "673200"
  },
  {
    "text": "continue this, but in a serial\nprogram on one process that model works very well.",
    "start": "673200",
    "end": "679390"
  },
  {
    "text": "But now when the high level\ndesign can destroy performance",
    "start": "679390",
    "end": "685270"
  },
  {
    "text": "but through the simplest\ndecision, like for example, in collision detection if the logic\nassumes that the result",
    "start": "685270",
    "end": "693420"
  },
  {
    "text": "is immediately available there's\nvirtually no way of making that fast. So the\nhigh-level design has to",
    "start": "693420",
    "end": "699440"
  },
  {
    "text": "conform to the hardware. That's sort of a challenge\nnow, is introducing those",
    "start": "699440",
    "end": "705660"
  },
  {
    "text": "concepts to the high-level\nprogrammer who haven't traditionally had\nto deal with it. ",
    "start": "705660",
    "end": "712050"
  },
  {
    "text": "Does that answer that question\nas far as the split? AUDIENCE: You said 2:1, right?",
    "start": "712050",
    "end": "718610"
  },
  {
    "text": "MIKE ACTON: Approximately 2:1,\nartist to programmers. It varies studio to studio and\nteam to team, so it's hard to",
    "start": "718610",
    "end": "727390"
  },
  {
    "text": "say in the industry\nas a whole. ",
    "start": "727390",
    "end": "736899"
  },
  {
    "text": "So back basically to the\npoint of the code isn't really important. The code itself doesn't\nhave a lot of value.",
    "start": "736900",
    "end": "746250"
  },
  {
    "text": "There are fundamental things\nthat affect how you would design it in the first place. The type of game, the kind of\nengine that would run a racing",
    "start": "746250",
    "end": "752260"
  },
  {
    "text": "game is completely different\nthan the kind of engine that would run a first\nperson shooter. The needs are different, the\noptimizations are totally",
    "start": "752260",
    "end": "759240"
  },
  {
    "text": "different, the data is totally\ndifferent, so you wouldn't try to reuse code from\none to the other.",
    "start": "759240",
    "end": "764940"
  },
  {
    "text": "It just either wouldn't\nwork or would work really, really poorly. The framerate--",
    "start": "764940",
    "end": "770470"
  },
  {
    "text": "having a target of 30 frames per\nsecond is a much different problem than having a target\nof 60 frames per second. And in the NCSC territories\nthose are pretty much your",
    "start": "770470",
    "end": "778710"
  },
  {
    "text": "only two choices- 30 frames or\n60, which means everything has to be done in 16 and\n2/3 milliseconds.",
    "start": "778710",
    "end": "786430"
  },
  {
    "text": "That's it, that's\nwhat you have-- 432 milliseconds.",
    "start": "786430",
    "end": "792220"
  },
  {
    "text": "Of course, back to schedule\nand cost, how much? You know, do you have a two year\ncycle, one year cycle,",
    "start": "792220",
    "end": "799580"
  },
  {
    "text": "how much can you get done? The kind of hardware. So taking for example, an engine\nfrom PlayStation 2 and",
    "start": "799580",
    "end": "806620"
  },
  {
    "text": "trying to move it to PlayStation\n3 is sort of a lost cause. ",
    "start": "806620",
    "end": "816730"
  },
  {
    "text": "The kind of optimizations that\nyou would do, the kind of parallelization you would do\nis so completely different,",
    "start": "816730",
    "end": "823400"
  },
  {
    "text": "although there was\nparallelization in PlayStation 2, the choices would have been\ncompletely different.",
    "start": "823400",
    "end": "829350"
  },
  {
    "text": " The loss from trying to port it\nis much, much greater than",
    "start": "829350",
    "end": "837510"
  },
  {
    "text": "the cost of just\ndoing it again. AUDIENCE: [OBSCURED]",
    "start": "837510",
    "end": "846290"
  },
  {
    "text": "MIKE ACTON: I don't know that\nthere's an average. I mean, if you wanted to just\nlike homogenize the industry,",
    "start": "846290",
    "end": "851970"
  },
  {
    "text": "it's probably 18 months.",
    "start": "851970",
    "end": "857389"
  },
  {
    "text": "The compiler actually makes a\nhuge, significant difference in how you design your code.",
    "start": "857390",
    "end": "865040"
  },
  {
    "text": "If you're working with GCC and\nyou have programmers who have been working with GCC for 15\nyears abd who understand the",
    "start": "865040",
    "end": "871900"
  },
  {
    "text": "intricacies and issues involved\nin GCC, the kind of",
    "start": "871900",
    "end": "877020"
  },
  {
    "text": "code you would write would be\ncompletely different than if you were using XLC for\nexample, on the cell.",
    "start": "877020",
    "end": "882440"
  },
  {
    "text": " There are studios--",
    "start": "882440",
    "end": "888130"
  },
  {
    "text": "Insomniac doesn't, but there are\nother studios who do cross platform design. So for example, write\nPlaystation 3 games and Xbox",
    "start": "888130",
    "end": "895480"
  },
  {
    "text": "360 games and/or PC titles. At the moment, probably the\neasiest approach for that is",
    "start": "895480",
    "end": "903460"
  },
  {
    "text": "to target the PlayStation 3. So you have these sort of SPU\nfriendly chunks of processing",
    "start": "903460",
    "end": "911660"
  },
  {
    "text": "SPU chunks, friendly chunks of\ndata and move those onto homogenous parallel\nprocessors.",
    "start": "911660",
    "end": "918910"
  },
  {
    "text": "It's not the perfect solution,\nbut virtually all cross platform titles are not looking\nfor the perfect solution anyway because they\ncannot fully optimize for any",
    "start": "918910",
    "end": "926020"
  },
  {
    "text": "particular platform. ",
    "start": "926020",
    "end": "932370"
  },
  {
    "text": "I wanted to go through-- these are a basic list of some\nof the major modules that a",
    "start": "932370",
    "end": "938130"
  },
  {
    "text": "game is made out of.  I'll go through some of these\nand explain how designing on",
    "start": "938130",
    "end": "945950"
  },
  {
    "text": "the cell impacts the system. I'm not going to bother\nreading them.",
    "start": "945950",
    "end": "952260"
  },
  {
    "text": "I assume you all can read. ",
    "start": "952260",
    "end": "957950"
  },
  {
    "text": "So yeah, I'm going to go over\nthe major system, a few of the major systems and then we're\ngoing to drive a little bit into a specific system, in this\ncase an animation system.",
    "start": "957950",
    "end": "965790"
  },
  {
    "text": "And just talk it through,\nbasically you see how each of",
    "start": "965790",
    "end": "971399"
  },
  {
    "text": "these steps are affected by\nthe hardware that we're running on it.",
    "start": "971400",
    "end": "977470"
  },
  {
    "text": "So just to start with when\nyou're designing a structure, any structure, anywhere--",
    "start": "977470",
    "end": "983430"
  },
  {
    "text": "the initial structure is\naffected by the kind of",
    "start": "983430",
    "end": "990460"
  },
  {
    "text": "hardware that you're running. And in this particular case on\nthe SPU and there are other",
    "start": "990460",
    "end": "997080"
  },
  {
    "text": "processors where this is equally\ntrue, but in this conventional structure where\nyou say structure class or",
    "start": "997080",
    "end": "1002790"
  },
  {
    "text": "whatever and you have\ndomain-constrained structures are of surprisingly\nlittle use.",
    "start": "1002790",
    "end": "1011180"
  },
  {
    "text": "In general, the data is either\ncompressed or is in a stram or",
    "start": "1011180",
    "end": "1016395"
  },
  {
    "text": "is in blocks. It's sort of based on type,\nwhich means that there's no",
    "start": "1016395",
    "end": "1021910"
  },
  {
    "text": "fixed size struct that you\ncould define anyway. So as a general rule, the\nstructure of the data is",
    "start": "1021910",
    "end": "1029079"
  },
  {
    "text": "defined within the\ncode as opposed to in a struct somewhere. And that's really to get the\nperformance from the data, you",
    "start": "1029080",
    "end": "1037540"
  },
  {
    "text": "group things of similar type\ntogether rather than for example, on SPU, having flags\nthat say this is of type A and",
    "start": "1037540",
    "end": "1044084"
  },
  {
    "text": "this is of type B. Any flag\nimplies a branch, which is-- I'm sure you all know at this\npoint-- is really poor",
    "start": "1044085",
    "end": "1051320"
  },
  {
    "text": "performing on SPU. So basically, pull flags out,\nresort everything and then",
    "start": "1051320",
    "end": "1057890"
  },
  {
    "text": "move things in streams. And all\nof these types are going to be of varying sizes.",
    "start": "1057890",
    "end": "1063570"
  },
  {
    "text": "In which case there's very\nlittle point to define those structures in the first place\nbecause you can't change them. ",
    "start": "1063570",
    "end": "1072549"
  },
  {
    "text": "And the fact that you're\naccessing data in quadwords anyway. You're always either loading and\nstoring in quadwords, not",
    "start": "1072550",
    "end": "1078530"
  },
  {
    "text": "on scalars, so having scalar\nfields in a structure is sort of pointless.",
    "start": "1078530",
    "end": "1084149"
  },
  {
    "text": "So again, only SPU generally\nspeaking structures are of much use. ",
    "start": "1084150",
    "end": "1094690"
  },
  {
    "text": "When you go to define structures\nin general you need to consider things like the\ncache, the TLB, how that's",
    "start": "1094690",
    "end": "1104910"
  },
  {
    "text": "going to affect you're reading\nout of the structure or writing to the structure. More to the point of you cannot\njust assume that if",
    "start": "1104910",
    "end": "1112940"
  },
  {
    "text": "you've written some data\ndefinition that you can port it to another platform.",
    "start": "1112940",
    "end": "1118340"
  },
  {
    "text": "It's very easy to be poorly, a performing platform to platform. In this case, when we design\nstructures you have to",
    "start": "1118340",
    "end": "1125980"
  },
  {
    "text": "consider the fundamental\nunits of the cell. The cache line is a fundamental\nunit of the cell.",
    "start": "1125980",
    "end": "1132960"
  },
  {
    "text": "Basically, you want to define\nthings in terms of 128 bytes of wide.",
    "start": "1132960",
    "end": "1138690"
  },
  {
    "text": "What can you fit in there\nbecause you read one you read them all, so you want to pack\nas much as possible into 128",
    "start": "1138690",
    "end": "1146500"
  },
  {
    "text": "bytes and just deal with that\nas a fundamental unit. 16 bytes, of course, you're\ndoing load and stores through",
    "start": "1146500",
    "end": "1154270"
  },
  {
    "text": "quadword load and store. So you don't want to have little\nscalar bits in there",
    "start": "1154270",
    "end": "1160100"
  },
  {
    "text": "that you're shuffling around. Just deal with it\nas a quadword. And don't deal with anything\nsmaller than that.",
    "start": "1160100",
    "end": "1166280"
  },
  {
    "text": "So basically the minimum working\nsizes, in practice, would be 4 by 128 bits wide\nand you can split that up",
    "start": "1166280",
    "end": "1173460"
  },
  {
    "text": "regularly however you want. So to that point I think--",
    "start": "1173460",
    "end": "1181140"
  },
  {
    "text": "here's an example-- I want to talk about\na vector class. Vector class js usually the\nfirst thing a programmer will",
    "start": "1181140",
    "end": "1189399"
  },
  {
    "text": "jump onto when they might want\nto make something for games. But in real life, it's probably\nthe most useless",
    "start": "1189400",
    "end": "1197670"
  },
  {
    "text": "thing you could ever write.  It doesn't actually\ndo anything.",
    "start": "1197670",
    "end": "1204150"
  },
  {
    "text": "We have these, we know the\ninstruction set, it's already in quadwords. We know the loads and stores,\nwe've already designed your",
    "start": "1204150",
    "end": "1209990"
  },
  {
    "text": "data so it fits properly. This doesn't give us anything. And it potentially makes\nthings worse.",
    "start": "1209990",
    "end": "1216830"
  },
  {
    "text": " Allowing component access to a\nquadword, especially on the",
    "start": "1216830",
    "end": "1223360"
  },
  {
    "text": "PPU is ridiculously bad. In practice, if you allow\ncomponent access, high-level",
    "start": "1223360",
    "end": "1231600"
  },
  {
    "text": "programs will use component\naccess. So if you have a vector class\nthat says get x, get y,",
    "start": "1231600",
    "end": "1237160"
  },
  {
    "text": "whatever, somebody somewhere\nis going to use it, which means the performance of the\nwhole thing just drops and",
    "start": "1237160",
    "end": "1243330"
  },
  {
    "text": "it's impossible to optimize. So as a general rule, you pick\nyour fundamental unit.",
    "start": "1243330",
    "end": "1248990"
  },
  {
    "text": "In this case, the 4 by 128 bit\nunit that I was talking about and you don't define anything\nsmaller than that.",
    "start": "1248990",
    "end": "1256150"
  },
  {
    "text": "Everything is packed into\na unit about that size. And yes, in practice there'll\nbe some wasted space at the",
    "start": "1256150",
    "end": "1263510"
  },
  {
    "text": "beginning or end of streams of\ndata, groups of data, but it doesn't make much difference.",
    "start": "1263510",
    "end": "1270419"
  },
  {
    "text": "You're going to have that wasted\nspace if you are-- you're going to have much more\nthan that in wasted space if you're using dynamic memory,\nfor example, which",
    "start": "1270420",
    "end": "1277870"
  },
  {
    "text": "when I get to it-- I don't recommend\nyou use either. ",
    "start": "1277870",
    "end": "1285929"
  },
  {
    "text": "So some things to consider when\nyou're doing this sort of math transformation anyway is,\nare you going to do floats,",
    "start": "1285930",
    "end": "1292020"
  },
  {
    "text": "double, fixed point? I mean, doubles write out. There's no point. Regardless of the speed on the\nSPU of a double, there's no",
    "start": "1292020",
    "end": "1299640"
  },
  {
    "text": "value in it for games. We have known data, so if we\nneed to we can renormalize a",
    "start": "1299640",
    "end": "1306900"
  },
  {
    "text": "group of around a point and\nget into the range of a floating point.",
    "start": "1306900",
    "end": "1312100"
  },
  {
    "text": "It's a nonissue. So there's no reason to waste\nthe space in a double at all, unless it was actually faster,\nwhich it isn't.",
    "start": "1312100",
    "end": "1319380"
  },
  {
    "text": "So we don't use it. ",
    "start": "1319380",
    "end": "1324440"
  },
  {
    "text": "Sort of the only real\nproblematic thing with the SPU floating point is its format\nand not supporting",
    "start": "1324440",
    "end": "1329570"
  },
  {
    "text": "denormalized numbers becomes\nproblematic, but again, you can work around it by\nrenormalizing your numbers",
    "start": "1329570",
    "end": "1337679"
  },
  {
    "text": "within a known range so that it\nwon't to get to the point where it needs to\ndenormalize--",
    "start": "1337680",
    "end": "1343290"
  },
  {
    "text": "at least for the work that\nyou're actually doing. ",
    "start": "1343290",
    "end": "1349790"
  },
  {
    "text": "Yeah? AUDIENCE: [OBSCURED]",
    "start": "1349790",
    "end": "1358960"
  },
  {
    "text": "MIKE ACTON: Every program will\nwrite its own vector class. And I'm saying that that's\na useless exercise.",
    "start": "1358960",
    "end": "1365289"
  },
  {
    "text": "Don't bother doing it. Don't use anybody\nelse's either. ",
    "start": "1365290",
    "end": "1372730"
  },
  {
    "text": "If you're writing\nfor the cell-- if you're writing in C you\nhave the SI intrinsics.",
    "start": "1372730",
    "end": "1378360"
  },
  {
    "text": "They're already in quadwords,\nyou can do everything you want to do and you're not restricted\nby this sort of",
    "start": "1378360",
    "end": "1384210"
  },
  {
    "text": "concept of what a vector is. If you want to deal with,\nespecially on the SPU where you can freely deal with them\nas integers or floats or",
    "start": "1384210",
    "end": "1392210"
  },
  {
    "text": "whatever seamlessly without\ncost, there's plenty that you",
    "start": "1392210",
    "end": "1397279"
  },
  {
    "text": "can do with the floating\npoint number if you treat it as an integer. And when on either AltiVec or\nthe SPU where you can do that",
    "start": "1397280",
    "end": "1403800"
  },
  {
    "text": "without cost there's\na huge advantage to just doing it straight.",
    "start": "1403800",
    "end": "1408970"
  },
  {
    "text": "AUDIENCE: [OBSCURED] MIKE ACTON: Well, I'm saying\nwrite it in assembly. ",
    "start": "1408970",
    "end": "1415260"
  },
  {
    "text": "But if you have to, use\nthe intrinsics. But certainly don't write\na vector class.",
    "start": "1415260",
    "end": "1422190"
  },
  {
    "text": "So memory management. Static allocations always\nprefer the dynamic. Basically, general purpose\ndynamic memory allocation,",
    "start": "1422190",
    "end": "1429389"
  },
  {
    "text": "malloc free, whatever has just\nabsolutely no place in games. ",
    "start": "1429390",
    "end": "1437540"
  },
  {
    "text": "We don't have enough unknowns\nfor that to be valuable. We can group our data\nby specific types.",
    "start": "1437540",
    "end": "1443529"
  },
  {
    "text": "We know basic ranges\nof those types. The vast majority of the data\nis known in advance, it's",
    "start": "1443530",
    "end": "1449620"
  },
  {
    "text": "actually burned onto the disk. We can actually analyze that. So most of our allocations\ntend to",
    "start": "1449620",
    "end": "1455350"
  },
  {
    "text": "calculate it in advance. So you load the level and\noftentimes you just load",
    "start": "1455350",
    "end": "1460900"
  },
  {
    "text": "memory in off the disc\ninto memory and then fix up the pointers.",
    "start": "1460900",
    "end": "1466145"
  },
  {
    "text": " For things that change during\nthe runtime, just simple",
    "start": "1466145",
    "end": "1473570"
  },
  {
    "text": "hierarchical allocators, block\nallocators where you have fixed sizes is always the\neasiest and best way to go.",
    "start": "1473570",
    "end": "1482620"
  },
  {
    "text": "These are known types\nof known sizes. The key to that is to organize\nyour data so that's actually a",
    "start": "1482620",
    "end": "1490150"
  },
  {
    "text": "workable solution. So you don't have these sort of\nclasses or structures that are dynamically sized.",
    "start": "1490150",
    "end": "1495600"
  },
  {
    "text": "That you group them in terms\nof things that are similar. Physics data here and AI data\nis separately here in a",
    "start": "1495600",
    "end": "1503790"
  },
  {
    "text": "separate array. And that way those sort of\nchunks of data are similarly",
    "start": "1503790",
    "end": "1510580"
  },
  {
    "text": "sized and can be block\nallocated without any fragmentation issues at all. ",
    "start": "1510580",
    "end": "1518610"
  },
  {
    "text": "Eventually you'll probably want\nto design an allocator. Things to consider are\nthe page sizes.",
    "start": "1518610",
    "end": "1525909"
  },
  {
    "text": "That's critically important, you\nwant to work within a page as much as you possibly can. So you want to group things,\nnot necessarily the same",
    "start": "1525910",
    "end": "1533180"
  },
  {
    "text": "things, but the things that\nwill be read together or written together within\nthe same page.",
    "start": "1533180",
    "end": "1538429"
  },
  {
    "text": "So you want to have a concept of\nthe actual page up through the system.",
    "start": "1538430",
    "end": "1544290"
  },
  {
    "text": " Probably the most common mistake\nI see in a block allocator, so somebody says--",
    "start": "1544290",
    "end": "1551510"
  },
  {
    "text": "everybody knows what I mean\nby block allocator? Yeah? OK. So the most common mistake I see\npeople make is that they",
    "start": "1551510",
    "end": "1557890"
  },
  {
    "text": "do least recently used. They just grab the most least\nrecently used block and use that when summoning a request.\nThat's actually pretty much",
    "start": "1557890",
    "end": "1566510"
  },
  {
    "text": "the worst thing you can possibly\ndo because that's the most likely thing\nto be called.",
    "start": "1566510",
    "end": "1571530"
  },
  {
    "text": "That's the most likely thing to\nbe out of cache, both out of L1 and L2. Just the easiest thing you can\ndo to change that is just use",
    "start": "1571530",
    "end": "1579340"
  },
  {
    "text": "most recently used. Just go up the other way. I mean, there are much more\ncomplicated systems you can use, but just that one small\nchange where you're much more",
    "start": "1579340",
    "end": "1588120"
  },
  {
    "text": "likely to get warm data is going\nto give you a big boost. And again, like I said, use\nhierarchies of allocations",
    "start": "1588120",
    "end": "1595220"
  },
  {
    "text": "instead of these sort of static\nblock allocations. Instead of trying to have one\ngeneral purpose super mega",
    "start": "1595220",
    "end": "1602190"
  },
  {
    "text": "allocator that does\neverything. And again, if it's well planned,\nfragmentation is a",
    "start": "1602190",
    "end": "1608130"
  },
  {
    "text": "non-issue, it's impossible. Cache line, oh, and probably\nanother important concept to",
    "start": "1608130",
    "end": "1614809"
  },
  {
    "text": "keep in mind as you're writing\nyour allocator is the transfer block size of the SPU.",
    "start": "1614810",
    "end": "1619920"
  },
  {
    "text": "If you have a 16K block and the\nsystem is aware of fixing",
    "start": "1619920",
    "end": "1626110"
  },
  {
    "text": "K blocks then there are plenty\nof cases where you don't have to keep track of-- in the\nsystem-- the size of things.",
    "start": "1626110",
    "end": "1634190"
  },
  {
    "text": "It's just how many blocks, how\nmany SPU blocks do you have? Or what percentage of\nSPU blocks you have?",
    "start": "1634190",
    "end": "1640990"
  },
  {
    "text": "And that will help you can sort\nof compress down your memory requirements when you're\nreferring to blocks and",
    "start": "1640990",
    "end": "1647570"
  },
  {
    "text": "memory streams and memory. ",
    "start": "1647570",
    "end": "1653230"
  },
  {
    "text": "AUDIENCE: About the memory\nmanagement for data here, you also write overlay managers\nfor code for the user?",
    "start": "1653230",
    "end": "1660620"
  },
  {
    "text": "MIKE ACTON: Well, it basically\namounts to the same thing. I mean, the code is just data,\nyou just load it in and fix up",
    "start": "1660620",
    "end": "1666900"
  },
  {
    "text": "the pointers and you're done. AUDIENCE: I was just wondering\nwhether IBM gives you",
    "start": "1666900",
    "end": "1672292"
  },
  {
    "text": "embedding -- MIKE ACTON: We don't\nusse any of the IBM systems at all for games.",
    "start": "1672292",
    "end": "1678920"
  },
  {
    "text": " I know IBM has an overlay\nmanager as part of the SDK.",
    "start": "1678920",
    "end": "1686100"
  },
  {
    "text": "AUDIENCE: Well, not really. It's -- MIKE ACTON: Well, they have some\noverlay support, right?",
    "start": "1686100",
    "end": "1691970"
  },
  {
    "text": "That's not something\nwe would ever use. And in general, I mean, I\nguess that's probably an",
    "start": "1691970",
    "end": "1698170"
  },
  {
    "text": "interesting question of how-- AUDIENCE: So it's\nall ground up? MIKE ACTON: What's that? AUDIENCE: All your development\nis ground up?",
    "start": "1698170",
    "end": "1704080"
  },
  {
    "text": "MIKE ACTON: Yeah, for\nthe most part.  For us, that's definitely\ntrue.",
    "start": "1704080",
    "end": "1710600"
  },
  {
    "text": "There are studios that,\nespecially cross platform studios that will take\nmiddleware development and",
    "start": "1710600",
    "end": "1716020"
  },
  {
    "text": "just sort of use it\non a high-level.  But especially when you're\nstarting a first generation",
    "start": "1716020",
    "end": "1723280"
  },
  {
    "text": "platform game, there's virtually\nnothing there to use because the hardware hasn't been\naround long enough for",
    "start": "1723280",
    "end": "1728690"
  },
  {
    "text": "anybody else to write\nanything either. So if you need it, you\nwrite it yourself.",
    "start": "1728690",
    "end": "1735000"
  },
  {
    "text": "Plus that's just sort of the\ngeneral theme of game development. It's custom to your situation,\nto your data.",
    "start": "1735000",
    "end": "1742700"
  },
  {
    "text": "And anything that's general\npurpose enough to sell as middleware is probably not going\nto be fast enough to run",
    "start": "1742700",
    "end": "1750350"
  },
  {
    "text": "a triple A title. Not always true, but\nas a general rule, it's pretty valid.",
    "start": "1750350",
    "end": "1755640"
  },
  {
    "text": " OK, so-- wait, so how'd\nI get here?",
    "start": "1755640",
    "end": "1764920"
  },
  {
    "text": "All right, this is next. So here's another example\nof how the cell",
    "start": "1764920",
    "end": "1773100"
  },
  {
    "text": "might affect design. So you're writing a collision\ndetection system. ",
    "start": "1773100",
    "end": "1783460"
  },
  {
    "text": "It's obvious that you cannot or\nshould not expect immediate results from a collision\ndetection system, otherwise",
    "start": "1783460",
    "end": "1790820"
  },
  {
    "text": "you're going to be sitting and\nsyncing all the time for one result and performance just goes\nout the window, you may",
    "start": "1790820",
    "end": "1796670"
  },
  {
    "text": "as well just have a\nserial program. So you want to group results,\nyou want to group queries and",
    "start": "1796670",
    "end": "1803090"
  },
  {
    "text": "you want potentially, for those\nqueries to be deferred so that you can store them, you\ncan just DMA them out and",
    "start": "1803090",
    "end": "1809920"
  },
  {
    "text": "then whatever process needed\nthen we'll come back and grab them later. So conceptually that's the\ndesign you want to build into",
    "start": "1809920",
    "end": "1817475"
  },
  {
    "text": "a collision detection system,\nwhich then in turn affects the",
    "start": "1817475",
    "end": "1822590"
  },
  {
    "text": "high-level design. So AI, scripts, any game code\nthat might have previously",
    "start": "1822590",
    "end": "1829800"
  },
  {
    "text": "depended on a result being\nimmediately available, as in they have characters that shoot\nrays around the room to",
    "start": "1829800",
    "end": "1836120"
  },
  {
    "text": "decide what they're going to\ndo next or bullets that are flying through the air or\nwhatever, can no longer make",
    "start": "1836120",
    "end": "1842730"
  },
  {
    "text": "that assumption. So they have to be able to group\nup their queries and look them up later and\nhave other work",
    "start": "1842730",
    "end": "1848450"
  },
  {
    "text": "to do in the meantime. So this is a perfect example\nof how you cannot take old",
    "start": "1848450",
    "end": "1854470"
  },
  {
    "text": "code and move it to the PS3. Because old code, serial code\nwould have definitely assumed",
    "start": "1854470",
    "end": "1861330"
  },
  {
    "text": "that the results were\nimmediately available because honestly, that was the\nfastest way to do it. ",
    "start": "1861330",
    "end": "1869299"
  },
  {
    "text": "So on a separate issue, we have\nSPU decomposition for the geometry look up.",
    "start": "1869300",
    "end": "1875000"
  },
  {
    "text": "So from a high-level you have\nyour entire scene in the level of the world or whatever and you\nhave the set of queries in",
    "start": "1875000",
    "end": "1884640"
  },
  {
    "text": "the case of static--\ndid I collide with anything in the world? Or you have a RAID that, where\ndoes this RAID collide with",
    "start": "1884640",
    "end": "1889820"
  },
  {
    "text": "something in the world? And so you have this problem of\nyou have this large sort of memory database in main RAM\nand you have the smallest",
    "start": "1889820",
    "end": "1897520"
  },
  {
    "text": "spew, which obviously cannot\nread in the whole database, analyze it, and spit\nout the result.",
    "start": "1897520",
    "end": "1902670"
  },
  {
    "text": "It has to go back and forth\nto main RAM in order to build its result.",
    "start": "1902670",
    "end": "1909340"
  },
  {
    "text": "So the question is how do you\ndecompose the memory in the first place to make\nthat at least",
    "start": "1909340",
    "end": "1914700"
  },
  {
    "text": "somewhat reasonably efficient? The first sort of instinct I\nthink, based on history is",
    "start": "1914700",
    "end": "1924660"
  },
  {
    "text": "sort of the traditional scene\ngraph structures like BSP tree or off tree or something\nlike that.",
    "start": "1924660",
    "end": "1929679"
  },
  {
    "text": " Particularly, on the SPU because\nif TLB misses that",
    "start": "1929680",
    "end": "1936309"
  },
  {
    "text": "becomes really expensive, really\nquickly when you're basically hitting random\nmemory on every",
    "start": "1936310",
    "end": "1941549"
  },
  {
    "text": "single node on the tree. So what you want to do is you\nwant to make that hierarchy as",
    "start": "1941550",
    "end": "1948090"
  },
  {
    "text": "flat as you possibly can. If the leafs have to be bigger\nthat's fine because it turns",
    "start": "1948090",
    "end": "1955480"
  },
  {
    "text": "out it's much, much cheaper to\nstream in a bigger group of-- as much data as you can fit into\nthe SPU and run through",
    "start": "1955480",
    "end": "1963279"
  },
  {
    "text": "it and make your decisions and\nspit it back out than it is to traverse the hierarchy.",
    "start": "1963280",
    "end": "1969190"
  },
  {
    "text": "So basically, the depth of your\nhierarchy in your scene database is completely\ndetermined by how much data",
    "start": "1969190",
    "end": "1975960"
  },
  {
    "text": "you can fit into the\nSPU by the maximum size of the leaf node.",
    "start": "1975960",
    "end": "1982230"
  },
  {
    "text": "The rest of the dep is only\nbecause you don't have any other choice. You know, And basically the same\nthing goes with dynamic",
    "start": "1982230",
    "end": "1990690"
  },
  {
    "text": "geometry as you have geometry\nmoving around in the scene, characters moving around\nin the scene-- they basically need to update\nthemselves into their own",
    "start": "1990690",
    "end": "1998730"
  },
  {
    "text": "database, into their\nown leaves and they'll do this in groups.",
    "start": "1998730",
    "end": "2004180"
  },
  {
    "text": "And then when you query, you\nbasically want it to query as many of those as possible,\nas you can possibly fit in at once.",
    "start": "2004180",
    "end": "2010919"
  },
  {
    "text": "So you could have sort of a\nbroad faced collision first, where you have all of the groups\nof characters that are",
    "start": "2010920",
    "end": "2016910"
  },
  {
    "text": "potentially maximum\nin this leaf, so bound and box or whatever. So even though you could in\ntheory, in principle narrow",
    "start": "2016910",
    "end": "2025780"
  },
  {
    "text": "that down even more, the cost\nfor that, the cost for the potential memory miss for that\nis so high that you just want",
    "start": "2025780",
    "end": "2033790"
  },
  {
    "text": "to do a linear search through\nas many as you possibly can on SPU. Does that make sense?",
    "start": "2033790",
    "end": "2039170"
  },
  {
    "start": "2039170",
    "end": "2044220"
  },
  {
    "text": "Procedural graphics-- so although we have a GPU on\nthe PlayStation 3, it does",
    "start": "2044220",
    "end": "2052629"
  },
  {
    "text": "turn out that the SPU\nis a lot better at doing a lot of things. ",
    "start": "2052630",
    "end": "2059589"
  },
  {
    "text": "Things basically where\nyou create geometry for RSX to render.",
    "start": "2059590",
    "end": "2067629"
  },
  {
    "text": "So particle system, dynamic\nparticle systems. Especially where their systems have to\ninteract with the world in",
    "start": "2067630",
    "end": "2074990"
  },
  {
    "text": "some way, which will be much\nmore expensive on the GPU.",
    "start": "2074990",
    "end": "2081000"
  },
  {
    "text": "Sort of a dynamic systems\nlike cloth. Fonts is actually really\ninteresting because typically",
    "start": "2081000",
    "end": "2088460"
  },
  {
    "text": "you'll just see bitmap\nfonts in which case are just textures.",
    "start": "2088460",
    "end": "2093839"
  },
  {
    "text": "But if you have a very complex\nuser interface then just the size of the bitmap becomes\nextreme and if you compressed",
    "start": "2093840",
    "end": "2102800"
  },
  {
    "text": "them they look terrible,\nespecially fonts. Fonts need to look perfect. So if you do do procedural\nfonts, for example, two type",
    "start": "2102800",
    "end": "2108980"
  },
  {
    "text": "fonts, the cost of rendering\na font actually gets significant.",
    "start": "2108980",
    "end": "2115040"
  },
  {
    "text": "And in this case, the SPU is\nactually a great use for rendering a procedural font.",
    "start": "2115040",
    "end": "2122210"
  },
  {
    "text": "Rendering textures\nis basically the same case as font. Procedural textures like if you\ndo noise-based clouds or",
    "start": "2122210",
    "end": "2129200"
  },
  {
    "text": "something like that. And parametric geometry, it's\nlike nurbs or subdivision services or something like\nthat, is a perfect",
    "start": "2129200",
    "end": "2135300"
  },
  {
    "text": "case for the SPU. ",
    "start": "2135300",
    "end": "2142260"
  },
  {
    "text": "Is there a question? ",
    "start": "2142260",
    "end": "2148059"
  },
  {
    "text": "Geometry database, OK. First thing scene graphs\nare worthless.",
    "start": "2148060",
    "end": "2153970"
  },
  {
    "text": "Yeah? AUDIENCE: So of those sort of\ndiffernet conceptualized paths, are you literally\nswapping code in and out of",
    "start": "2153970",
    "end": "2162936"
  },
  {
    "text": "the SPUs with the data\nmany times per frame? Or is it more of a static--- MIKE ACTON: OK, that's an\nexcellent question.",
    "start": "2162936",
    "end": "2170520"
  },
  {
    "text": "It totally depends. I mean, in general through a\ngame or through, at least a",
    "start": "2170520",
    "end": "2176470"
  },
  {
    "text": "particular area of a game the\nSPU set up is stable. So if we decide you're going to\nhave this SPU dedicated to",
    "start": "2176470",
    "end": "2184770"
  },
  {
    "text": "physics for example, it is very\nlikely that that SPU is stable and it's going to be\ndedicated physics, at least",
    "start": "2184770",
    "end": "2191860"
  },
  {
    "text": "for some period of time through\nthe level or through the zone or wherever it is. Sometimes through\nan entire game.",
    "start": "2191860",
    "end": "2199920"
  },
  {
    "text": "So there are going to be\nelements of that where it's sort of a well balanced\nproblem.",
    "start": "2199920",
    "end": "2205260"
  },
  {
    "text": "There's basically no way you're\ngoing to get waste. It's always going to be full,\nit's always going to be busy.",
    "start": "2205260",
    "end": "2211350"
  },
  {
    "text": "Collision detection and physics\nare the two things that you'll never have\nenough CPU to do.",
    "start": "2211350",
    "end": "2218910"
  },
  {
    "text": "You can always use more\nand more CPU. And basically, the rest can\nbe dynamically scheduled.",
    "start": "2218910",
    "end": "2226790"
  },
  {
    "text": "And the question of how to\nschedule it, is actually an interesting problem.",
    "start": "2226790",
    "end": "2232230"
  },
  {
    "text": "It's my opinion that sort of\nlooking for the universal scheduler that solves all\nproblems and magically makes",
    "start": "2232230",
    "end": "2238820"
  },
  {
    "text": "everything work is a\ntotal lost cause. You have more than enough data\nto work with and in your game",
    "start": "2238820",
    "end": "2247880"
  },
  {
    "text": "to decide how to schedule your\nSPUs basically, manually.",
    "start": "2247880",
    "end": "2253480"
  },
  {
    "text": "And it's just not that\ncomplicated. We have six SPUs. How to schedule six SPUs is just\nnot that complicated a",
    "start": "2253480",
    "end": "2259380"
  },
  {
    "text": "problem, you could write it\ndown on a piece of paper. ",
    "start": "2259380",
    "end": "2266990"
  },
  {
    "text": "OK, so scene graphs are almost\nalways, universally a complete",
    "start": "2266990",
    "end": "2272040"
  },
  {
    "text": "waste time. They store way too much data\nfor no apparent reason.",
    "start": "2272040",
    "end": "2277640"
  },
  {
    "text": "Store your databases\nindependently based on what you're actually doing with\nthem, optimize your data separately because you're\naccessing it separately.",
    "start": "2277640",
    "end": "2284859"
  },
  {
    "text": "The only thing that should be\nlinking your sort of domain object is a key that says all\nright, we'll exist in this",
    "start": "2284860",
    "end": "2291910"
  },
  {
    "text": "database and the database\nand this database. But to have this sort of giant\nstructure that keeps all of",
    "start": "2291910",
    "end": "2298510"
  },
  {
    "text": "the data for each element in the\nscene is about the poorest",
    "start": "2298510",
    "end": "2304820"
  },
  {
    "text": "performing you can imagine for\nboth cache and TLB and SPU",
    "start": "2304820",
    "end": "2310580"
  },
  {
    "text": "because you can't fit it in\nindividual node on the SPU. ",
    "start": "2310580",
    "end": "2318130"
  },
  {
    "text": "I think I covered that.  Here's an interesting example,\nso what you want to do is if",
    "start": "2318130",
    "end": "2325540"
  },
  {
    "text": "you have the table of queries\nthat you have-- bunch of people over the course of a\nframe say I want to know if I",
    "start": "2325540",
    "end": "2331910"
  },
  {
    "text": "collided with something. And then if you basically make\na pre-sort pass on that and",
    "start": "2331910",
    "end": "2337040"
  },
  {
    "text": "basically, spatially sort these\nguys together, so let's say you have however many\nyou can fit in a SPU.",
    "start": "2337040",
    "end": "2343299"
  },
  {
    "text": "So you have four of these\nqueries together. Although they might be a little\nfurther apart then you",
    "start": "2343300",
    "end": "2350050"
  },
  {
    "text": "would hope, you could basically\ncreate a baling box through a single query on the\ndatabase that's the sum of all",
    "start": "2350050",
    "end": "2356720"
  },
  {
    "text": "of them and then as I said,\nnow you have a linear list that you can just stream through\nfor all of them.",
    "start": "2356720",
    "end": "2361930"
  },
  {
    "text": "So even though it's doing more\nwork for any individual one, the overhead is reduced so\nsignificantly that the end",
    "start": "2361930",
    "end": "2369230"
  },
  {
    "text": "result is that it's\nsignificantly faster.  And that's also what I mean by\nmultiple simultaneous lookups.",
    "start": "2369230",
    "end": "2377780"
  },
  {
    "text": "Basically you want to group\nqueries together, but make sure that there's some\nadvantage to that.",
    "start": "2377780",
    "end": "2384240"
  },
  {
    "text": "By spatially pre-sorting them\nthere is an advantage to that because it's more likely\nthat they will have",
    "start": "2384240",
    "end": "2390049"
  },
  {
    "text": "overlap in your queries. So game logic. Stuff that the cell would\naffect in game logic.",
    "start": "2390050",
    "end": "2398110"
  },
  {
    "text": "State machines are\na good example. If you defer your logic lines\nand defer your results, SPUs",
    "start": "2398110",
    "end": "2406330"
  },
  {
    "text": "are amazingly perfect for\ndefining state machines. If you expect your logic lines\nto be immediately available",
    "start": "2406330",
    "end": "2413130"
  },
  {
    "text": "across the entire system, SPU\nis absolutely horrid. So if you basically write\nbuffers into your state",
    "start": "2413130",
    "end": "2420920"
  },
  {
    "text": "machines or your logic machines\nthen each SPU can be",
    "start": "2420920",
    "end": "2426760"
  },
  {
    "text": "cranking on multiple state\nmachines at once where all the input and all the output lines\nare assumed to be deferred and",
    "start": "2426760",
    "end": "2434500"
  },
  {
    "text": "it's just an extremely\nstraightforward process.  Scripting, so scripting\nthings like--",
    "start": "2434500",
    "end": "2441380"
  },
  {
    "text": "I don't know, lewis script\nor C script or something like that.",
    "start": "2441380",
    "end": "2447080"
  },
  {
    "text": "I mean, obviously the first\nthing to look at is the size of the interpreter. Will it fit into an\nSPU to begin with?",
    "start": "2447080",
    "end": "2454420"
  },
  {
    "text": "Another option to consider is,\ncan it be converted into SPU",
    "start": "2454420",
    "end": "2460099"
  },
  {
    "text": "code, either offline\nor dynamically? Because you'll find that most\noff the shelf scripting",
    "start": "2460100",
    "end": "2465990"
  },
  {
    "text": "languages are scalar, sequential scripting languages.",
    "start": "2465990",
    "end": "2471220"
  },
  {
    "text": "So all of a P code within the\nscripting language itself",
    "start": "2471220",
    "end": "2476720"
  },
  {
    "text": "basically defines\nscalar access. So not only are you switching\non every byte to every two",
    "start": "2476720",
    "end": "2481970"
  },
  {
    "text": "bytes or whatever, so it's sort\nof poorly performing code from an SPU point of view, but\nit's also poorly performing",
    "start": "2481970",
    "end": "2487600"
  },
  {
    "text": "code from a memory\npoint of view. So I guess the question is\nwhether or not you can optimize the script itself and\nturn turn it into SPU code",
    "start": "2487600",
    "end": "2495700"
  },
  {
    "text": "that you can then dynamically\nload or come up with a new script that's just much more\nfriendly for the SPUs.",
    "start": "2495700",
    "end": "2502779"
  },
  {
    "text": " Another option if you have to\nuse a single, sort of scalar",
    "start": "2502780",
    "end": "2509880"
  },
  {
    "text": "scripting language like lua or\nC script or whatever, if you",
    "start": "2509880",
    "end": "2515549"
  },
  {
    "text": "can run multiple streams\nsimultaneously so that while you're doing these sort of\nindividual offline memory",
    "start": "2515550",
    "end": "2521980"
  },
  {
    "text": "lookups and reads and writes to\nmain memory, that once one blocks you can start moving\non another one.",
    "start": "2521980",
    "end": "2528549"
  },
  {
    "text": "As long as there's no\ndependencies between these two scripts we should be able\nto stream them both",
    "start": "2528550",
    "end": "2534600"
  },
  {
    "text": "simultaneously. Motion control actually turns\nout to be a critical problem",
    "start": "2534600",
    "end": "2541619"
  },
  {
    "text": "in games in general that's\noften overlooked. It's who controls the\nmotion in the game.",
    "start": "2541620",
    "end": "2548300"
  },
  {
    "text": "Is is the AI? So is it the controller in\nthe case of the player?",
    "start": "2548300",
    "end": "2554590"
  },
  {
    "text": "I say, push forward, so\nthe guy moves forward. Is that really what\ncontrols it? Or is it the physics?",
    "start": "2554590",
    "end": "2560950"
  },
  {
    "text": "So all the AI does is say, I\nwant to move forward, tells the physic system I want to move\nforward and the physics tries to follow it.",
    "start": "2560950",
    "end": "2567000"
  },
  {
    "text": "Or is it the animation? That you have the animators\nactually put translation in the animation, so is that\ntranslation the thing that's",
    "start": "2567000",
    "end": "2572530"
  },
  {
    "text": "actually driving the motion and\neverything else is trying to follow it? Turns out to be a surprisingly\ndifficult problem to solve and",
    "start": "2572530",
    "end": "2579829"
  },
  {
    "text": "every studio ends up with\ntheir own solution.",
    "start": "2579830",
    "end": "2586180"
  },
  {
    "text": "I forget what point I was\nmaking on how the cell affected that decision. ",
    "start": "2586180",
    "end": "2592040"
  },
  {
    "text": "But-- AUDIENCE: [OBSCURED]",
    "start": "2592040",
    "end": "2598780"
  },
  {
    "text": "MIKE ACTON: I think the point,\nprobably that I was trying to make is that because you want\neverything to be deferred",
    "start": "2598780",
    "end": "2604670"
  },
  {
    "text": "anyway, then the order does\nbecome a clearer sort of",
    "start": "2604670",
    "end": "2609700"
  },
  {
    "text": "winner in that order. Where you want the immediate\nfeedback from the controls,",
    "start": "2609700",
    "end": "2617780"
  },
  {
    "text": "the control leads the way. You have the physics, which then\nfollows, perhaps, even a frame behind that to say how\nthat new position is impacted",
    "start": "2617780",
    "end": "2626960"
  },
  {
    "text": "by the physical reality\nof the world. And then potentially a frame\nbehind that or half a frame",
    "start": "2626960",
    "end": "2632230"
  },
  {
    "text": "behind that you have the\nanimation system, which in that case would just be\nbasically, a visual",
    "start": "2632230",
    "end": "2638050"
  },
  {
    "text": "representation of what's\ngoing on rather than leading anything. It's basically an icon for\nwhat's happening in the",
    "start": "2638050",
    "end": "2644190"
  },
  {
    "text": "physics and the AI. ",
    "start": "2644190",
    "end": "2649390"
  },
  {
    "text": "The limitations of your system\nare that it has to be deferred and that it has to be\ndone in groups.",
    "start": "2649390",
    "end": "2654470"
  },
  {
    "text": "Basically, some of these sort of\nreally difficult decisions have only one or two\nobvious answers. ",
    "start": "2654470",
    "end": "2664570"
  },
  {
    "text": "All right, well I wanted to dig\ninto animation a little bit, so does anybody have any\nquestions on anything? Any of the sort of the\nhigh-level stuff that I've",
    "start": "2664570",
    "end": "2671300"
  },
  {
    "text": "covered up to this point?  Yeah?",
    "start": "2671300",
    "end": "2676853"
  },
  {
    "text": " AUDIENCE: So does the need for\ndeferral and breaking into",
    "start": "2676853",
    "end": "2683196"
  },
  {
    "text": "groups and staging, does this\nneed break the desire for the",
    "start": "2683196",
    "end": "2688230"
  },
  {
    "text": "higher-level programmers to\nabstract what's going on at the data engine level?",
    "start": "2688230",
    "end": "2694176"
  },
  {
    "text": "Or is that not quite\nthe issue? MIKE ACTON: Well, let's\nsay we get a game",
    "start": "2694176",
    "end": "2701130"
  },
  {
    "text": "play programmer, right? Fresh out of school, he's\ntaught in school, C plus plus in school.",
    "start": "2701130",
    "end": "2706680"
  },
  {
    "text": "Taught to decompose the world\ninto sort of the main classes and that they all communicate\nthrough each other maybe",
    "start": "2706680",
    "end": "2713460"
  },
  {
    "text": "through messaging. All right, well the first thing\nwe tell him is that all that is complete crap.",
    "start": "2713460",
    "end": "2719710"
  },
  {
    "text": "None of that will actually\nwork in practice. So in some sense, yes, there is\na sort of tendency for them",
    "start": "2719710",
    "end": "2726260"
  },
  {
    "text": "to want this interface, this\nsort of clean abstraction, but",
    "start": "2726260",
    "end": "2731310"
  },
  {
    "text": "abstraction doesn't\nhave any value. It doesn't make the game faster,\nit doesn't make the",
    "start": "2731310",
    "end": "2737085"
  },
  {
    "text": "game cheaper. It doesn't make-- AUDIENCE: [OBSCURED]",
    "start": "2737085",
    "end": "2742540"
  },
  {
    "text": "PROFESSOR: There's a\nbit of a religious. Let's move on. He has a lot of other\ninteresting things to say.",
    "start": "2742540",
    "end": "2747980"
  },
  {
    "text": "And we can get to\nthat question-- AUDIENCE: It sounds like\nthere's two completely different communities involved\nin the development.",
    "start": "2747980",
    "end": "2753790"
  },
  {
    "text": "There's the engine developers\nand there's the higher-level-- MIKE ACTON: That's a fair\nenough assessment. There are different\ncommunities.",
    "start": "2753790",
    "end": "2759430"
  },
  {
    "text": "There is a community of the game\nplay programmers and the community of engine\nprogrammers. And they have different\npriorities and they have",
    "start": "2759430",
    "end": "2766390"
  },
  {
    "text": "different experiences. So yeah, in that way there\nis a division.",
    "start": "2766390",
    "end": "2773190"
  },
  {
    "text": "PROFESSOR: I will\nlet you go on. You said you had a lot\nof interesting information to cover. MIKE ACTON: OK.",
    "start": "2773190",
    "end": "2780210"
  },
  {
    "text": "AUDIENCE: I can bitch\nabout that. Don't worry. MIKE ACTON: So just to get into\nanimation a little bit.",
    "start": "2780210",
    "end": "2786790"
  },
  {
    "text": "Let's start with trying to\nbuild a simple animation system and see what problems\ncome creep up as we're trying",
    "start": "2786790",
    "end": "2793520"
  },
  {
    "text": "to implement it on the cell.  So in the simplest case we\nhave a set of animation",
    "start": "2793520",
    "end": "2801080"
  },
  {
    "text": "channels defined for\na character, which is made up of joints. We're just talking about sort\nof a simple hierarchical",
    "start": "2801080",
    "end": "2807200"
  },
  {
    "text": "transformation here. And some of those channels\nare related. So in the case of rotation plus\ntranslation plus scale",
    "start": "2807200",
    "end": "2816599"
  },
  {
    "text": "equals any individual joint. So the first thing, typically\nthat you'll have to answer is",
    "start": "2816600",
    "end": "2824780"
  },
  {
    "text": "whether or not you want to do\neuler or quaternion rotation.",
    "start": "2824780",
    "end": "2832900"
  },
  {
    "text": "Now the tendency I guess,\nespecially for new programmers",
    "start": "2832900",
    "end": "2838640"
  },
  {
    "text": "is to go with quaternion. They're taught that gimbal\nlock is a sort of",
    "start": "2838640",
    "end": "2844970"
  },
  {
    "text": "insurmountable problem that\nonly quaternion solves. That's just simply not true.",
    "start": "2844970",
    "end": "2850260"
  },
  {
    "text": "I mean, gimbal lock\nis completely manageable in practice. ",
    "start": "2850260",
    "end": "2856230"
  },
  {
    "text": "When you're trying to rotate\non three axes and two axes rotate 90 degrees apart and\nthe third axis can't be",
    "start": "2856230",
    "end": "2862940"
  },
  {
    "text": "resolved or 180 degrees apart. So you can't resolve one\nof the axes, right? AUDIENCE: [OBSCURED]",
    "start": "2862940",
    "end": "2868950"
  },
  {
    "text": "MIKE ACTON: Yeah, it's where\nit's impossible to resolve one of the axes and that's\nthe nature of",
    "start": "2868950",
    "end": "2873990"
  },
  {
    "text": "euler sort of rotation. ",
    "start": "2873990",
    "end": "2880670"
  },
  {
    "text": "But sort of a quaternion\nrotation completely solves that mathematical problem, it's\nalways resolvable and",
    "start": "2880670",
    "end": "2886800"
  },
  {
    "text": "it's not very messy at all. I mean, from a sort of C\nprogrammers perspective, it looks clean, the math's clean,\neverything's clean about it.",
    "start": "2886800",
    "end": "2894330"
  },
  {
    "text": "Unfortunately, it doesn't\ncompress very well at all. Where if you used euler\nrotation, which basically just",
    "start": "2894330",
    "end": "2903720"
  },
  {
    "text": "means that the individual\nrotation for every axis. So x rotation, y rotation,\nz rotation.",
    "start": "2903720",
    "end": "2910829"
  },
  {
    "text": "That's much, much more\ncompressible because each one of those axes can be\nindividually compressed.",
    "start": "2910830",
    "end": "2916410"
  },
  {
    "text": "It's very unlikely that you're\nalways rotating all three axes, all the time, especially\nin a human character.",
    "start": "2916410",
    "end": "2922060"
  },
  {
    "text": "It's much more likely that only\none axis is rotating on any one given time and\nso that makes it--",
    "start": "2922060",
    "end": "2929690"
  },
  {
    "text": "just without any change,\nwithout any additional compression-- it tends to make\nit about 1/3 of the size.",
    "start": "2929690",
    "end": "2937368"
  },
  {
    "text": "AUDIENCE: [OBSCURED] MIKE ACTON: The animation\ndata.",
    "start": "2937368",
    "end": "2943069"
  },
  {
    "text": "So you have this frame of\nanimation, which is all these animation channels, right? And then over time you have\nthese different frames of",
    "start": "2943070",
    "end": "2951000"
  },
  {
    "text": "animation, right? If you store-- for every joint,\nfor every rotation you store a quaternion over time,\nit's hard to compress across",
    "start": "2951000",
    "end": "2958190"
  },
  {
    "text": "time because you're basically,\nessentially rotating all three axes, all the time. Well, with--",
    "start": "2958190",
    "end": "2964900"
  },
  {
    "text": "yeah? All right.  So let's say, of course, the\nnext step is how do we store",
    "start": "2964900",
    "end": "2972720"
  },
  {
    "text": "the actual rotation itself? Do we store it in cloth, double,\nhalf precision, fixed",
    "start": "2972720",
    "end": "2979119"
  },
  {
    "text": "point precision?  Probably the national tendency\nat this point would be to",
    "start": "2979120",
    "end": "2985670"
  },
  {
    "text": "store it in a floating point\nnumber, but if you look at the actual range of rotation, which\nis extremely limited on",
    "start": "2985670",
    "end": "2991630"
  },
  {
    "text": "a character, on any particular\njoint there are very few joints that would even\nrotate 180 degrees.",
    "start": "2991630",
    "end": "3000270"
  },
  {
    "text": "So a floating point\nis overkill, by a",
    "start": "3000270",
    "end": "3005360"
  },
  {
    "text": "large margin on rotation-- ",
    "start": "3005360",
    "end": "3011720"
  },
  {
    "text": "for the range. For the precision, however\nit's fairly good. Especially if you're doing very\nsmall rotations over a",
    "start": "3011720",
    "end": "3018160"
  },
  {
    "text": "long period of time. So probably a more balanced\napproach would be to go with a",
    "start": "3018160",
    "end": "3023980"
  },
  {
    "text": "16 bit floating point from a\nhalf format where you keep most of the precision, but\nyou reduce the range",
    "start": "3023980",
    "end": "3029270"
  },
  {
    "text": "significantly. There's also the potential for\ngoing with an 8 bit floating point format depending\non the kind of",
    "start": "3029270",
    "end": "3037840"
  },
  {
    "text": "animation that you're doing. And I'll probably have this on\nanother slide, but it really",
    "start": "3037840",
    "end": "3043190"
  },
  {
    "text": "depends on how close-- how compressible a joint is\ndepends on how close to the",
    "start": "3043190",
    "end": "3048940"
  },
  {
    "text": "root it is. The further away from the root\nthe less it matters. So the joint at your fingertip,\nyou can compress a",
    "start": "3048940",
    "end": "3054950"
  },
  {
    "text": "whole lot more because it\ndoesn't matter as much, it's not going to affect\nanything else. Where a joint at the actual\nroot, the smallest change in",
    "start": "3054950",
    "end": "3061520"
  },
  {
    "text": "motion will affect the entire\nsystem in animation and will make it virtually impossible for\nyou to line up animations",
    "start": "3061520",
    "end": "3067150"
  },
  {
    "text": "with each other, so that that\nparticular joint needs to be nearly perfect. And how do you store rotation?",
    "start": "3067150",
    "end": "3073220"
  },
  {
    "text": "Do you store them in degrees,\nradians, or normalized? I have seen people store\nthem in degrees.",
    "start": "3073220",
    "end": "3079230"
  },
  {
    "text": "I don't understand why you\nwould ever do that. It's just adding math\nto the problem.",
    "start": "3079230",
    "end": "3086430"
  },
  {
    "text": "Radians is perfectly fine if\nyou're using off the shelf",
    "start": "3086430",
    "end": "3091920"
  },
  {
    "text": "trigonometric functions-\ntan, sine whatever. But typically, if you're going\nto optimize those functions",
    "start": "3091920",
    "end": "3097079"
  },
  {
    "text": "yourself anyway, it's going to\nbe much more effective go with a normalized rotational value.",
    "start": "3097080",
    "end": "3102800"
  },
  {
    "text": "So basically between\nzero and 1. Makes it a lot easier to do\ntricks based on the circle.",
    "start": "3102800",
    "end": "3112970"
  },
  {
    "text": "Basically you can just take the\nfractional value and just deal with that.",
    "start": "3112970",
    "end": "3118050"
  },
  {
    "text": "So normalized rotation is\ngenerally the way to go and normalizing a half precision is\nprobably the even bet for",
    "start": "3118050",
    "end": "3127250"
  },
  {
    "text": "how you would store. ",
    "start": "3127250",
    "end": "3132890"
  },
  {
    "text": "So looking at what we need to\nfit into an SPU if we're going to running to an end machine. Yeah? AUDIENCE: You talked a lot about\ncompressing because of",
    "start": "3132890",
    "end": "3140472"
  },
  {
    "text": "the way it's impacting data,\nwhat's the key driver of that? MIKE ACTON: The SPU has\nvery little space.",
    "start": "3140472",
    "end": "3145940"
  },
  {
    "text": "AUDIENCE: OK, so it's just\nthe amount of space. MIKE ACTON: Yeah, well OK. There's two factors really,\nin all honesty.",
    "start": "3145940",
    "end": "3153450"
  },
  {
    "text": "So starting with the SPU. That you have to be able\nto work through this data on the SPU.",
    "start": "3153450",
    "end": "3159660"
  },
  {
    "text": "But you also have the\nDMA transfer itself. The SPU can actually calculate\nreally, really fast, right?",
    "start": "3159660",
    "end": "3165360"
  },
  {
    "text": "I mean, that's the\nwhole point. So if you can transfer less\ndata, burn through it a little",
    "start": "3165360",
    "end": "3171740"
  },
  {
    "text": "bit to expand it, it's\nactually a huge win. And on top of that we have a\nbig, big game and only 256",
    "start": "3171740",
    "end": "3179310"
  },
  {
    "text": "megs of main ram. And the amount of geometry that\npeople require from a",
    "start": "3179310",
    "end": "3188150"
  },
  {
    "text": "current generation game or\nnext generation game has",
    "start": "3188150",
    "end": "3194069"
  },
  {
    "text": "scaled up way more than the\namount of memory we've been given, so we've only been given\neight times as much",
    "start": "3194070",
    "end": "3200270"
  },
  {
    "text": "memory as we had in the\nprevious generation. People expect significantly more\nthan eight times as much geometry on the screen and\nwhere do we store that?",
    "start": "3200270",
    "end": "3209780"
  },
  {
    "text": "We have the Blu-Ray, we can't\nbe streaming everything off the disc all the time, which\nis to another point.",
    "start": "3209780",
    "end": "3216470"
  },
  {
    "text": "You have 40 gigs of data\non your disc, but only 256 megs of RAM.",
    "start": "3216470",
    "end": "3223030"
  },
  {
    "text": "So there's this sort of a\nseries of compression, decompression to keep\neverything--",
    "start": "3223030",
    "end": "3230600"
  },
  {
    "text": "basically, think of RAM\nas your L3 cache.",
    "start": "3230600",
    "end": "3235640"
  },
  {
    "start": "3235640",
    "end": "3240829"
  },
  {
    "text": "So we look at what we want\nto store on an SPU. Basically, the goal of this is\nwe want to get an entire",
    "start": "3240830",
    "end": "3246140"
  },
  {
    "text": "animation for a particular\nskeleton on an SPU so that we can transform the skeleton\nand output the",
    "start": "3246140",
    "end": "3252710"
  },
  {
    "text": "resulting joint data. So let's look at how big\nthat would have to be.",
    "start": "3252710",
    "end": "3259690"
  },
  {
    "text": "So first we start with the basic\nnine channels per joint. That's not assuming and again,\nyou'd probably have additional",
    "start": "3259690",
    "end": "3265390"
  },
  {
    "text": "channels, like foot step\nchannels and sound channels and other sort of animation\nchannels to help",
    "start": "3265390",
    "end": "3270660"
  },
  {
    "text": "actually make a game. In this case, we just want\nto animate the character. So we have rotation times 3,\ntranslations times 3, and",
    "start": "3270660",
    "end": "3277550"
  },
  {
    "text": "scales times 3. So the first thing to drop and\nthis will cover, this will",
    "start": "3277550",
    "end": "3284589"
  },
  {
    "text": "reduce your data by 70%, is\nall the uniform channels. So any data that doesn't\nactually change across the",
    "start": "3284590",
    "end": "3292130"
  },
  {
    "text": "entire length of\nthe animation. It may not be zero, but it could\nbe just one thing, one value that doesn't\nchange across",
    "start": "3292130",
    "end": "3297232"
  },
  {
    "text": "length of the animation. So you pull all the uniform\nchannels out. And most things that's going to\nbe scale, for example, most",
    "start": "3297232",
    "end": "3304369"
  },
  {
    "text": "joints don't scale. Although occasionally they do. And translation, in a human our\njoints don't translate.",
    "start": "3304370",
    "end": "3312870"
  },
  {
    "text": "However, when you actually\nanimate a character in order to get particular effects, in\norder to make it look more",
    "start": "3312870",
    "end": "3319830"
  },
  {
    "text": "human you do end up needing\nto translate joints. So we can reduce, but in order\nto that we need to build a",
    "start": "3319830",
    "end": "3331680"
  },
  {
    "text": "map, basically, a table of\nthese uniform channels. So now we know this table of\nuniform channels has to be stored in the SPU along with\nnow the remaining actual",
    "start": "3331680",
    "end": "3340110"
  },
  {
    "text": "animation data. Of course, multiplied by\nthe number of joints. ",
    "start": "3340110",
    "end": "3347779"
  },
  {
    "text": "So now we have what\nis essentially raw animation data. So for the sake of argument,\nlet's say the animation data",
    "start": "3347780",
    "end": "3355130"
  },
  {
    "text": "has been baked out by\nMaya or whatever at 30 frames a second.",
    "start": "3355130",
    "end": "3361120"
  },
  {
    "text": "We've pulled out the uniform\ndata, so now for the joints that do move we have these\ncurves over time of the entire",
    "start": "3361120",
    "end": "3367420"
  },
  {
    "text": "length of the animation. The problem is if that animation\nis 10 seconds long,",
    "start": "3367420",
    "end": "3373620"
  },
  {
    "text": "it's now way too big to fit in\nthe SPU by a large margin. So how do we sort of compress\nit down so that it",
    "start": "3373620",
    "end": "3382600"
  },
  {
    "text": "actually will fit? Again, just first of all, the\neasiest thing to do to start",
    "start": "3382600",
    "end": "3387630"
  },
  {
    "text": "with is just do simple curve\nfitting to get rid of the things that don't need to be\nthere that you can easily",
    "start": "3387630",
    "end": "3392910"
  },
  {
    "text": "calculate out. And again, the closer that you\nare to the root, the tighter that fits need to be.",
    "start": "3392910",
    "end": "3398400"
  },
  {
    "text": "Conversely, the further away you\nare from the root, you can loosen up the restrictions a\nlittle bit and have a little",
    "start": "3398400",
    "end": "3404460"
  },
  {
    "text": "bit looser fit on the\ncurve and compress a little bit more. ",
    "start": "3404460",
    "end": "3409859"
  },
  {
    "text": "So if you're doing a curve\nfitting with the simple spline, basically you have to\nstore your time values in the",
    "start": "3409860",
    "end": "3417880"
  },
  {
    "text": "places that were calculated. Part of the problem is now you\nhave sort of these individual",
    "start": "3417880",
    "end": "3423130"
  },
  {
    "text": "scalars with time can be\nrandomly spread throughout the entire animation. So any point where there's\nbasically a knot in the curve,",
    "start": "3423130",
    "end": "3429260"
  },
  {
    "text": "there's a time value. And none of these knots are\ngoing to line up with each other in any of these\nanimation channels.",
    "start": "3429260",
    "end": "3435930"
  },
  {
    "text": "So in principle, if you wanted\nto code this you would have to basically say, what is time\nright now and loop through",
    "start": "3435930",
    "end": "3443520"
  },
  {
    "text": "each of these scalar values,\nfind out where time is, calculate the postition\non the curve and then",
    "start": "3443520",
    "end": "3448525"
  },
  {
    "text": "spit out the result. So one, you still have to have\nthe unlimited length of data",
    "start": "3448525",
    "end": "3457030"
  },
  {
    "text": "and two, you're looping through\nscalar values on the SPU, which is really\nactually, horrible.",
    "start": "3457030",
    "end": "3462740"
  },
  {
    "text": "So we want to find a way\nto solve that problem. ",
    "start": "3462740",
    "end": "3468470"
  },
  {
    "text": "Probably the most trivial\nsolution is just do spline segemnts. You lose some compressibility,\nbut it solves the problem.",
    "start": "3468470",
    "end": "3475240"
  },
  {
    "text": "Basically you split up the\nspline into say, sections of 16 knots and you just do that.",
    "start": "3475240",
    "end": "3483190"
  },
  {
    "text": "And in order to do that you just\nneed a table, you need to add a table that says what the\nrange of time are in each of",
    "start": "3483190",
    "end": "3491170"
  },
  {
    "text": "those groups of 16 knots\nfor every channel. So when you're going to\ntransform the animation, first",
    "start": "3491170",
    "end": "3497690"
  },
  {
    "text": "you load this table in, you say,\nwhat's my time right now at time, t? You go and say which blocks,\nwhich segments of the spline",
    "start": "3497690",
    "end": "3504000"
  },
  {
    "text": "you need to load in for each\nchannel, you load those in. So now you have basically one\nsection of the spline, which",
    "start": "3504000",
    "end": "3511520"
  },
  {
    "text": "is too big probably for the\ncurrent t, but it covers what t you're actually in. So one block of spline for\nevery single channel.",
    "start": "3511520",
    "end": "3520660"
  },
  {
    "text": " So the advantage of this, now\nthat the spline is sorted into",
    "start": "3520660",
    "end": "3526520"
  },
  {
    "text": "sections is that rather than\nhaving all the spline data stored, sort of linearly, you\ncan now reorder the blocks so",
    "start": "3526520",
    "end": "3533680"
  },
  {
    "text": "that the spline data from\ndifferent channels is actually",
    "start": "3533680",
    "end": "3540589"
  },
  {
    "text": "tiled next to each other. So that when you actually go\nto do a load it's much more likely because you know you're\ngoing to be requesting all",
    "start": "3540590",
    "end": "3547380"
  },
  {
    "text": "these channel at once and all\non the same time, t, you can find a more or less, optimal\nordering that will allow more",
    "start": "3547380",
    "end": "3555470"
  },
  {
    "text": "of these group things to be\ngrouped in the same cache or at least the same page. ",
    "start": "3555470",
    "end": "3563500"
  },
  {
    "text": "And the advantage of course\nagain, is now the length of animation makes absolutely\nno difference at all.",
    "start": "3563500",
    "end": "3569830"
  },
  {
    "text": "The disadvantage is its less\ncompressible because you can only basically compress this one\nsection of the curve, but",
    "start": "3569830",
    "end": "3576920"
  },
  {
    "text": "a huge advantage is it solves\nthe scalar loop problem. So now you can take four of\nthese scalar values all with a",
    "start": "3576920",
    "end": "3586240"
  },
  {
    "text": "fixed known number of knots in\nit and just loop through all of the knots.",
    "start": "3586240",
    "end": "3593070"
  },
  {
    "text": "In principle you could search\nthrough and find a minimum number of knots to look through\nfor each one of the scalars, but in practice it's\nmuch faster just to loop",
    "start": "3593070",
    "end": "3599329"
  },
  {
    "text": "through all four simultaneously\nfor all 16 knots and just throw away the\nresults that are invalid as",
    "start": "3599330",
    "end": "3607150"
  },
  {
    "text": "you're going through it. That way you can use the\nSPU instruction set. You can load quadwords, store\nquadwords, and do everything",
    "start": "3607150",
    "end": "3614619"
  },
  {
    "text": "in the minimum single\nloop, which you can completely unroll. ",
    "start": "3614620",
    "end": "3623560"
  },
  {
    "text": "Does anybody have the time? PROFESSOR: It's [OBSCURED]",
    "start": "3623560",
    "end": "3629190"
  },
  {
    "text": "MIKE ACTON: So I'm OK. PROFESSOR: [OBSCURED] MIKE ACTON: Yeah?",
    "start": "3629190",
    "end": "3634427"
  },
  {
    "text": "AUDIENCE: In context do you make like\nrendering the animation or it seems like there would be a blow\nto whatever you're doing",
    "start": "3634427",
    "end": "3640860"
  },
  {
    "text": "on the SPUs. MIKE ACTON: Basically the SPUs\nare taking this channel animation data and baking it\nout into-- well, in the",
    "start": "3640860",
    "end": "3648359"
  },
  {
    "text": "easiest case baking\nit out into a 4 by 4 matrix per joint.",
    "start": "3648360",
    "end": "3654090"
  },
  {
    "text": "AUDIENCE: So the output\ntime's much bigger than the input time? I mean, you're compressing\nthe input by animation?",
    "start": "3654090",
    "end": "3659570"
  },
  {
    "text": "MIKE ACTON: No, the output size\nis significant, but it's much smaller. PROFESSOR: [OBSCURED]",
    "start": "3659570",
    "end": "3665700"
  },
  {
    "text": "AUDIENCE: So the animation\ndata it's [OBSCURED] [INTERPOSING VOICES] ",
    "start": "3665700",
    "end": "3671470"
  },
  {
    "text": "MIKE ACTON: No. I was just outputting the\njoint information. PROFESSOR: [OBSCURED]",
    "start": "3671470",
    "end": "3679820"
  },
  {
    "text": "MIKE ACTON: Independently we\nhave this skimming problem. Independently there's\na rendering problem. This is just baking animation.",
    "start": "3679820",
    "end": "3686250"
  },
  {
    "text": "This is purely animation\nchannel problem. PROFESSOR: [OBSCURED]",
    "start": "3686250",
    "end": "3693060"
  },
  {
    "text": "MIKE ACTON: OK, I'm just going\nto skip through this because this could take a long\ntime to talk about. Basically, what I wanted to say\nhere was let's take the",
    "start": "3693060",
    "end": "3699560"
  },
  {
    "text": "next step with animation,\nlet's add some dynamic support. The easiest thing to do is just\ncreate a second uniform",
    "start": "3699560",
    "end": "3707080"
  },
  {
    "text": "data table that you then\nblend with the first one and that one. In principle, is basically all\nof the channels and then now a",
    "start": "3707080",
    "end": "3715450"
  },
  {
    "text": "game play programmer can go and individually set any of those. So they can tweak the head or\ntweak the elbow or whatever.",
    "start": "3715450",
    "end": "3720750"
  },
  {
    "text": "And that's definitely\ncompressible because it's very unlikely thet're going to be\nmoving all the joints at once. You can create a secondary map\nthat says, this is the number",
    "start": "3720750",
    "end": "3728049"
  },
  {
    "text": "of joints that are dynamic, this\nis how they map to the uniform values. ",
    "start": "3728050",
    "end": "3735349"
  },
  {
    "text": "But then once you add any kind\nof dynamic support, you have now complicated the problem\nsignificantly.",
    "start": "3735350",
    "end": "3741760"
  },
  {
    "text": "Because now in reality, what\nyou need are constraints. You need to be able to have a\nlimit to how high the head can",
    "start": "3741760",
    "end": "3749650"
  },
  {
    "text": "move because what's going to\nhappen is although you could just say the head could only\nmove so much, if that movement",
    "start": "3749650",
    "end": "3755849"
  },
  {
    "text": "is algorithmic, so let's\nsay follow a character or whatever-- it is going to go outside\nof reasonable",
    "start": "3755850",
    "end": "3761760"
  },
  {
    "text": "constraints really quickly. So it's much cleaner and simpler\nto support that on the",
    "start": "3761760",
    "end": "3768359"
  },
  {
    "text": "engine side, so basically define\nconstraints for the joints and then let the\nhigh-level code point",
    "start": "3768360",
    "end": "3777250"
  },
  {
    "text": "wherever they want. AUDIENCE: [OBSCURED] MIKE ACTON: Yeah. Yeah, you can have max change\nover time so it only can move",
    "start": "3777250",
    "end": "3783090"
  },
  {
    "text": "so fast. The max range of\nmotion, the max acceleration is actually a much harder\nproblem because it implies",
    "start": "3783090",
    "end": "3791770"
  },
  {
    "text": "that you need to store the\nchange over time, which we're not actually storing.",
    "start": "3791770",
    "end": "3797360"
  },
  {
    "text": "Which would probably blow\nour memory on the SPU. So as far as impacting\nanimation, I would immediately",
    "start": "3797360",
    "end": "3805990"
  },
  {
    "text": "throw out max acceleration if an\nanimator were to come to me and say, this is a feature\nthat I wanted.",
    "start": "3805990",
    "end": "3812019"
  },
  {
    "text": "I would say, it's unlikely\nbecause it's unlikely we can fit it on the SPU. Whereas, on the PC, it might\nbe a different story.",
    "start": "3812020",
    "end": "3821400"
  },
  {
    "text": "And blending information,\nhow you blend these things together. ",
    "start": "3821400",
    "end": "3832180"
  },
  {
    "text": "What's that? AUDIENCE: [OBSCURED] MIKE ACTON: OK.",
    "start": "3832180",
    "end": "3837290"
  },
  {
    "text": " So as far as mixing, there's\nplenty of additional problems",
    "start": "3837290",
    "end": "3843839"
  },
  {
    "text": "in mixing animation. Phase matching, so for example,\nyou have a running and a walk.",
    "start": "3843840",
    "end": "3849800"
  },
  {
    "text": "Basically all that means is if\nyou were going to blend from a run to a walk you kind of want\nto blend in basically the",
    "start": "3849800",
    "end": "3855070"
  },
  {
    "text": "essentially same leg position. Because if you just blend from\nthe middle of an animation to the beginning of the animation,\nit's unlikely the",
    "start": "3855070",
    "end": "3861760"
  },
  {
    "text": "legs are going to match and for\nthe transition time you're going to see the scissoring\nof the legs. Which you see that in plenty\nof games, but especially in",
    "start": "3861760",
    "end": "3869700"
  },
  {
    "text": "next generation, especially\nas characters look more complicated they are expected\nto act more complicated.",
    "start": "3869700",
    "end": "3877099"
  },
  {
    "text": "Transitions handling either\nprogrammatic transitions",
    "start": "3877100",
    "end": "3882390"
  },
  {
    "text": "between animations, so we have\nan animation that's standing and animation that's crouching\nand with constraints, move",
    "start": "3882390",
    "end": "3889165"
  },
  {
    "text": "them down; or artist\ndriven animated transitions and/or both.",
    "start": "3889165",
    "end": "3896540"
  },
  {
    "text": "Translation matching\nis actually an interesting problem. So you have an animation that's\nrunning and you have an animation that's walking.",
    "start": "3896540",
    "end": "3902180"
  },
  {
    "text": "They both translate obviously,\nat different speeds, nonlinearly and you want to\nslowly run down into a walk,",
    "start": "3902180",
    "end": "3910079"
  },
  {
    "text": "but you have to match these sort\nof nonlinear translations as his feet are stepping\nonto the ground.",
    "start": "3910080",
    "end": "3916520"
  },
  {
    "text": "Turns out to be a really\ndifficult problem to get perfectly right, especially if\nyou have eye key on the feet",
    "start": "3916520",
    "end": "3922520"
  },
  {
    "text": "where he's walking on the ground\nor maybe walking uphill or downhill and the translation\nis being affected",
    "start": "3922520",
    "end": "3928010"
  },
  {
    "text": "by the world. In a lot of cases you'll see\npeople pretty much just ignore",
    "start": "3928010",
    "end": "3933760"
  },
  {
    "text": "this problem. But it is something to consider\ngoing forward and",
    "start": "3933760",
    "end": "3938950"
  },
  {
    "text": "this is something that we would\nconsider how to solve, regardless of whether or\nnot we could get it in.",
    "start": "3938950",
    "end": "3946970"
  },
  {
    "text": "As far as actually rendering\nthe geometry goes, you now have your sort of matrices\nof joints and you have--",
    "start": "3946970",
    "end": "3955920"
  },
  {
    "text": " let's say you want to send those\nto the GPU along with",
    "start": "3955920",
    "end": "3963070"
  },
  {
    "text": "the geometry to skin\nand render. Now the question is, do\nyou single or double",
    "start": "3963070",
    "end": "3968230"
  },
  {
    "text": "buffer those joints? Because right now basically, the\nGPU can be reading these",
    "start": "3968230",
    "end": "3974480"
  },
  {
    "text": "joints in parallel\nto when you're actually outputting them. So the traditional approach or\nthe easiest approach is just",
    "start": "3974480",
    "end": "3980494"
  },
  {
    "text": "to double buffer the joints. So just output into a different\nbuffer that the R6 is reading from. It's one frame or half a frame\nbehind, doesn't much matter.",
    "start": "3980495",
    "end": "3989069"
  },
  {
    "text": "But it also doubles now the\nspace of your joints. One advantage that games have\nis that a frame is a well",
    "start": "3989070",
    "end": "3996740"
  },
  {
    "text": "defined element in the games. We know what needs to happen\nacross the course of a frame.",
    "start": "3996740",
    "end": "4003809"
  },
  {
    "text": "So these characters need to be\nrendered, the collisions of this background needs\nto happen, physics",
    "start": "4003810",
    "end": "4009690"
  },
  {
    "text": "need to happen here. So you can within a frame, set\nit up so that the update from",
    "start": "4009690",
    "end": "4016500"
  },
  {
    "text": "the SPUs and the read from the\nGPU can never overlap.",
    "start": "4016500",
    "end": "4023350"
  },
  {
    "text": "Even without any kind of\nsynchronization or lock, it can be a well known fact that\nit's impossible for these two",
    "start": "4023350",
    "end": "4030450"
  },
  {
    "text": "things because there's actually\nsomething in the middle happening that has its\nown synchronization primitive.",
    "start": "4030450",
    "end": "4035770"
  },
  {
    "text": " That will allow you to do single\nbuffering of the data.",
    "start": "4035770",
    "end": "4041370"
  },
  {
    "text": "But it does require\nmore organization. Especially if you're doing it\non more than just one case. So you have all these things\nthat you want single buffered,",
    "start": "4041370",
    "end": "4048520"
  },
  {
    "text": "so you need to organize them\nwithin the frames so they're never updating and reading\nat the same time. ",
    "start": "4048520",
    "end": "4058910"
  },
  {
    "text": "So I'll make this the last\npoint I'll make. Optimization, one of the things\nthat you'll hear, save",
    "start": "4058910",
    "end": "4066640"
  },
  {
    "text": "optimization till the end. My point here being is if you\nsave optimization till the end, you don't know how to\ndo it because you haven't",
    "start": "4066640",
    "end": "4072800"
  },
  {
    "text": "actually practiced it. If you haven't practiced it\nyou don't know what to do. So it will take much longer.",
    "start": "4072800",
    "end": "4079100"
  },
  {
    "text": "You should always be optimizing\nin order to understand, when it actually\ncounts, what to do.",
    "start": "4079100",
    "end": "4085500"
  },
  {
    "text": "And the fact that real\noptimization does impact the design all the way up. Optimization of the hardware\nimpacts how an engine is",
    "start": "4085500",
    "end": "4093400"
  },
  {
    "text": "designed to be fast does impact\nthe data, it impacts how game play needs to be\nwritten, high-level code needs",
    "start": "4093400",
    "end": "4101262"
  },
  {
    "text": "to be called. So if you save optimization till\nlast, what you're doing is completely limiting what\nyou can optimize.",
    "start": "4101263",
    "end": "4110310"
  },
  {
    "text": "And the idea that it's the root\nof all evil certainly didn't come from a game\ndeveloper, I have to say.",
    "start": "4110310",
    "end": "4116579"
  },
  {
    "text": "Anyway, that's it. I hope that was helpful. ",
    "start": "4116580",
    "end": "4124799"
  },
  {
    "text": "PROFESSOR: Any questions? I think it's very interesting\nbecause there is a lot of things you learn at MIT.",
    "start": "4124800",
    "end": "4130255"
  },
  {
    "start": "4130255",
    "end": "4137949"
  },
  {
    "text": "Forget everything you learned\nso I think there's a very interesting perspective in there\nand for some of us it's",
    "start": "4137950",
    "end": "4143440"
  },
  {
    "text": "kind of hard to even digest a\nlittle bit, but Question? AUDIENCE: Call of Duty 3 came\nout on the Xbox and on the",
    "start": "4143440",
    "end": "4149540"
  },
  {
    "text": "PS3, is Call of Duty 3 on the\nPS3 just running on the GPU",
    "start": "4149540",
    "end": "4155180"
  },
  {
    "text": "then or is it-- MIKE ACTON: No, it's very\nlikely using the SPUs. I mean, I don't know. I haven't looked at the source\ncode, but I suspect that it's",
    "start": "4155180",
    "end": "4160949"
  },
  {
    "text": "using the SPUs. How efficiently it's\nusing them is an entirely different question.",
    "start": "4160950",
    "end": "4166150"
  },
  {
    "text": "But it's easy to take the most\ntrivial things right, say you",
    "start": "4166150",
    "end": "4171279"
  },
  {
    "text": "do hot spot analysis on your\nsequential code and say, OK,",
    "start": "4171280",
    "end": "4177139"
  },
  {
    "text": "well I can grab this section of\nthing and put it on the SPU right and just the heaviest\nhitters and put them on the SPU.",
    "start": "4177140",
    "end": "4182910"
  },
  {
    "text": "That's pretty easy to do. It's taking it to the next level\nthough, and to really have sort of the next\ngen of game--",
    "start": "4182910",
    "end": "4191819"
  },
  {
    "text": "now there's nowhere\nto go from there. There's nowhere to go from that\nanalysis, you've already sort of hit the limit of what\nyou can do with that.",
    "start": "4191820",
    "end": "4198460"
  },
  {
    "text": "It has to be redesigned. So I don't know what they're\ndoing honestly and certainly",
    "start": "4198460",
    "end": "4203970"
  },
  {
    "text": "I'm being recorded so--  yeah?",
    "start": "4203970",
    "end": "4209940"
  },
  {
    "text": "AUDIENCE: You guys have shipped\na game, on the PS3? MIKE ACTON: Yeah, it\nwas on action list.",
    "start": "4209940",
    "end": "4216080"
  },
  {
    "text": "AUDIENCE: OK, so that was\nmore like the [OBSCURED] games and whatever You seem to\ntalk a lot about all these",
    "start": "4216080",
    "end": "4223890"
  },
  {
    "text": "things you've had to redo. What else is there-- games look better as a console\nwas built on, what else is",
    "start": "4223890",
    "end": "4230219"
  },
  {
    "text": "there that you guys plan on\nchanging as far as working with the cell processor,\nor do you think",
    "start": "4230220",
    "end": "4236530"
  },
  {
    "text": "you've got it all ready? MIKE ACTON: Oh, no. There's plenty of work. There's plenty more\nto be optimized.",
    "start": "4236530",
    "end": "4242179"
  },
  {
    "text": "It's down to cost in scheduling\nthose things. I mean, we have a team of\npeople who now really understand the platform and\nwhereas a lot of what went",
    "start": "4242180",
    "end": "4252420"
  },
  {
    "text": "into previous titles was mixed\nwith learning curve.",
    "start": "4252420",
    "end": "4258120"
  },
  {
    "text": "So there's definitely a\npotential for going back and improving things and making\nthings better.",
    "start": "4258120",
    "end": "4263990"
  },
  {
    "text": "That's what a cycle of game\ndevelopment is all about. I mean, games at the end of the\nlifetime of PlayStation 3",
    "start": "4263990",
    "end": "4269580"
  },
  {
    "text": "will look significantly better\nthan release titles. That's the way it always is. AUDIENCE: The head of Sony\ncomputer and gaming said that",
    "start": "4269580",
    "end": "4277120"
  },
  {
    "text": "PS3 pretty soon would\nbe customizable. You're be able to get different amounts of RAM and whatnot. MIKE ACTON: Well, I think in\nthat case he was talking",
    "start": "4277120",
    "end": "4284329"
  },
  {
    "text": "specifically about a PS3 based,\nlike Tivo kind of weird",
    "start": "4284330",
    "end": "4290320"
  },
  {
    "text": "media thing, which has nothing\nto do with us. AUDIENCE: [OBSCURED]",
    "start": "4290320",
    "end": "4296730"
  },
  {
    "text": "MIKE ACTON: We're not stuck. That's what we have. I mean,\nI don't see it as stuck. I would much rather have the--",
    "start": "4296730",
    "end": "4301810"
  },
  {
    "text": "I mean, that's what console\ndevelopment is about, really. We have a machine, we have a set\nof limitations of it and",
    "start": "4301810",
    "end": "4308530"
  },
  {
    "text": "we can push that machine over\nthe lifetime of the platform. If it changes out from under us,\nit becomes PC development.",
    "start": "4308530",
    "end": "4313830"
  },
  {
    "text": "AUDIENCE: Are you allowed\nto use the seven SPUs or are you-- [OBSCURED] PROFESSOR: [OBSCURED]",
    "start": "4313830",
    "end": "4329020"
  },
  {
    "text": "MIKE ACTON: I don't know how\nmuch I can answer this just from NDA point-of-view.",
    "start": "4329020",
    "end": "4334030"
  },
  {
    "text": "But let's say hypothetically,\nthere magically became more SPUs on the PS3, right?",
    "start": "4334030",
    "end": "4339640"
  },
  {
    "text": "Probably nothing would happen. The game has to be optimized\nfor the minimum case, so nothing would change.",
    "start": "4339640",
    "end": "4345870"
  },
  {
    "text": " Anything else?",
    "start": "4345870",
    "end": "4351750"
  },
  {
    "text": "Yeah? AUDIENCE: So what's the\ndevelopment life cycle like for the engine part\nof the game.",
    "start": "4351750",
    "end": "4357010"
  },
  {
    "text": "And I don't assume you start by\nprototyping in higher-level mechanisms. Then you'll\ncompletely miss the design for",
    "start": "4357010",
    "end": "4365909"
  },
  {
    "text": "performance aspects of it. How do you build up from\nempty [OBSCURED]",
    "start": "4365910",
    "end": "4374140"
  },
  {
    "text": "MIKE ACTON: No, you don't\nstart with an empty. That's the perspective\ndifference. You don't start with code,\ncode's not important.",
    "start": "4374140",
    "end": "4379619"
  },
  {
    "text": "Start with the data. You sit down with an artist\nand they say, what do you want to do? And then you look at the data.",
    "start": "4379620",
    "end": "4385140"
  },
  {
    "text": "What does that data look like? What does this animation\ndata look like? PROFESSOR: Data size matters. [OBSCURED]",
    "start": "4385140",
    "end": "4392960"
  },
  {
    "text": "MIKE ACTON: Right. We have to figure out how\nto make it smaller. But it all starts\nwith the data. It all starts with that concept\nof what do we want to",
    "start": "4392960",
    "end": "4399940"
  },
  {
    "text": "see on the screen? What do we even want to\nhear on the speakers? What kind of effects\ndo we want. And actually look at that from\nthe perspective of the content",
    "start": "4399940",
    "end": "4408430"
  },
  {
    "text": "creator and what they're\ngenerating and what we can do with that data. Because game development is just\nthis black box between",
    "start": "4408430",
    "end": "4416440"
  },
  {
    "text": "the artists and the screen. We're providing a transformation\nengine that",
    "start": "4416440",
    "end": "4421489"
  },
  {
    "text": "takes the vision of the\ndesigners and the artists and just transforming it and\nspitting it on to screen.",
    "start": "4421490",
    "end": "4428810"
  },
  {
    "text": "So where you really need\nto start is with the source of the data. AUDIENCE: You've been doing game\ndevelopoment for 11 years",
    "start": "4428810",
    "end": "4435040"
  },
  {
    "text": "now is what you said. Have you had a favorite\nplatform and a nightmare platform?",
    "start": "4435040",
    "end": "4440050"
  },
  {
    "text": "MIKE ACTON: I've been pretty\nmuch with the PlayStation platform since there was a\nPlayStation platform and I",
    "start": "4440050",
    "end": "4447920"
  },
  {
    "text": "don't know, it's hard to get\nperspective because you're getting it and you always really\nlove plarform you're working on.",
    "start": "4447920",
    "end": "4455030"
  },
  {
    "text": "So it's hard. I mean, it's hard to\nget perspective.",
    "start": "4455030",
    "end": "4460630"
  },
  {
    "text": "In the program where I am today\nis not the same program where I was 10 years ago.",
    "start": "4460630",
    "end": "4465640"
  },
  {
    "text": "Personally, right now my\nfavorite plarform is PS3. PROFESSOR: So when put it in\nperspective, there are already",
    "start": "4465640",
    "end": "4470770"
  },
  {
    "text": "some platforms that on the first\ntime round, [COUGHING],",
    "start": "4470770",
    "end": "4477190"
  },
  {
    "text": "it's like cost of development. So one platform that as time\ngoes we have [OBSCURED]",
    "start": "4477190",
    "end": "4484989"
  },
  {
    "text": "MIKE ACTON: Well, like with the\nPS3, some of the things that I like about the PS3, which\nis sort of a different question are the fact that the\ncell is much more public than",
    "start": "4484990",
    "end": "4493449"
  },
  {
    "text": "any other platform\nhas ever been. With IBM's documentation, with\nToshiba's support and Sony",
    "start": "4493450",
    "end": "4498990"
  },
  {
    "text": "support, I've never had a\nplatform where I can get up on",
    "start": "4498990",
    "end": "4505200"
  },
  {
    "text": "a website and actually talk\nabout it outside of NDA. And that for me is an\namazing change.",
    "start": "4505200",
    "end": "4510980"
  },
  {
    "text": "Where I can go and talk to other\npeople-- exactly like this group here- that have\nused the same exact platform I've used.",
    "start": "4510980",
    "end": "4517530"
  },
  {
    "text": "That's never been able\nto happen before. Even on PS2, for quite a long\npart of the lifespan, even",
    "start": "4517530",
    "end": "4524380"
  },
  {
    "text": "though there was a Linux\neventually on the PS2, virtually everything was covered\nby NDA because there was no independent release\nof information.",
    "start": "4524380",
    "end": "4532830"
  },
  {
    "text": "So that's one of the great\nthings about PS3 is the public",
    "start": "4532830",
    "end": "4538270"
  },
  {
    "text": "availability of cell. ",
    "start": "4538270",
    "end": "4543510"
  },
  {
    "text": "PROFESSOR: Thank you very much\nfor coming all the way from California and giving\nus some insight. ",
    "start": "4543510",
    "end": "4555023"
  }
]