[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "Earlier we talked about about finding equivalent\nFSMs with fewer states.",
    "start": "859",
    "end": "5870"
  },
  {
    "text": "Now we'll develop an approach for finding\nsuch FSMs by looking for two states that that",
    "start": "5870",
    "end": "10910"
  },
  {
    "text": "can be merged into a single state without\nchanging the behavior of the FSM in any externally",
    "start": "10910",
    "end": "16610"
  },
  {
    "text": "distinguishable manner.",
    "start": "16610",
    "end": "19680"
  },
  {
    "text": "Two states are equivalent if they meet the\nfollowing two criteria.",
    "start": "19680",
    "end": "23490"
  },
  {
    "text": "First, the states must have identical outputs.",
    "start": "23490",
    "end": "27800"
  },
  {
    "text": "This makes sense: the outputs are visible\nto the outside, so if their values differed",
    "start": "27800",
    "end": "32710"
  },
  {
    "text": "between the two states, that difference would\nclearly be externally distinguishable!",
    "start": "32710",
    "end": "38030"
  },
  {
    "text": "Second, for each combination of input values,\nthe two states transition to equivalent states.",
    "start": "38030",
    "end": "46600"
  },
  {
    "text": "Our strategy for deriving an equivalent machine\nwith fewer states will be to start with our",
    "start": "46600",
    "end": "51100"
  },
  {
    "text": "original FSM, find pairs of equivalent states\nand merge those states.",
    "start": "51100",
    "end": "57100"
  },
  {
    "text": "We'll keep repeating the process until we\ncan't find any more equivalent states.",
    "start": "57100",
    "end": "62949"
  },
  {
    "text": "Let's try this on our ant FSM.",
    "start": "62950",
    "end": "65640"
  },
  {
    "text": "First we need to find a pair of states that\nhave the same outputs.",
    "start": "65640",
    "end": "69250"
  },
  {
    "text": "As it turns out, there's only one such pair:\nWALL1 and CORNER, both of which assert the",
    "start": "69250",
    "end": "74110"
  },
  {
    "text": "turn-right and forward outputs.",
    "start": "74110",
    "end": "76520"
  },
  {
    "text": "Okay, so let's assume that WALL1 and CORNER\nare equivalent and ask if they transition",
    "start": "76520",
    "end": "82600"
  },
  {
    "text": "to equivalent states for each applicable combination\nof input values.",
    "start": "82600",
    "end": "88770"
  },
  {
    "text": "For these two states, all the transitions\ndepend only on the value of the R input, so",
    "start": "88770",
    "end": "94159"
  },
  {
    "text": "we just have to check two cases.",
    "start": "94159",
    "end": "97100"
  },
  {
    "text": "If R is 0, both states transition to CORNER.",
    "start": "97100",
    "end": "100000"
  },
  {
    "text": "If R is 1, both states transition to WALL2.",
    "start": "100000",
    "end": "104930"
  },
  {
    "text": "So both equivalence criteria are satisfied\nand we can conclude that the WALL1 and CORNER",
    "start": "104930",
    "end": "110270"
  },
  {
    "text": "states are equivalent and can be merged.",
    "start": "110270",
    "end": "113810"
  },
  {
    "text": "This gives us the four-state FSM shown here,\nwhere we've called the single merged state",
    "start": "113810",
    "end": "118659"
  },
  {
    "start": "114000",
    "end": "114000"
  },
  {
    "text": "WALL1.",
    "start": "118659",
    "end": "120600"
  },
  {
    "text": "This smaller, equivalent FSM behaves exactly\nas the previous 5-state FSM.",
    "start": "120600",
    "end": "126950"
  },
  {
    "text": "The implementation of the 5-state machine\nrequires 3 state bits; the implementation",
    "start": "126950",
    "end": "131840"
  },
  {
    "text": "of the 4-state machine only requires 2 state\nbits.",
    "start": "131840",
    "end": "136040"
  },
  {
    "text": "Reducing the number of state bits by 1 is\nhuge since it reduces the size of the required",
    "start": "136040",
    "end": "140780"
  },
  {
    "text": "ROM by half!",
    "start": "140780",
    "end": "143680"
  },
  {
    "text": "Just as we were able to achieve considerable\nhardware savings by minimizing Boolean equations,",
    "start": "143680",
    "end": "149180"
  },
  {
    "text": "we can do the same in sequential logic by\nmerging equivalent states.",
    "start": "149180",
    "end": "154590"
  },
  {
    "text": "Roboant customers are looking forward to the\nprice cut!",
    "start": "154590",
    "end": "158760"
  },
  {
    "text": "Let's look at what we'd need to do if we wanted\nto implement the FSM using logic gates instead",
    "start": "158760",
    "end": "163810"
  },
  {
    "start": "159000",
    "end": "159000"
  },
  {
    "text": "a ROM for the combinational logic.",
    "start": "163810",
    "end": "167489"
  },
  {
    "text": "First we have to build the truth table, entering\nall the transitions in the state transition",
    "start": "167490",
    "end": "172349"
  },
  {
    "text": "diagram.",
    "start": "172349",
    "end": "173629"
  },
  {
    "text": "We'll start with the LOST state.",
    "start": "173629",
    "end": "175260"
  },
  {
    "text": "So if the FSM is in this state, the F output\nshould be 1.",
    "start": "175260",
    "end": "179909"
  },
  {
    "text": "If both antenna inputs are 0, the next state\nis also LOST.",
    "start": "179910",
    "end": "185420"
  },
  {
    "text": "Assigning the LOST state the encoding 00,\nwe've captured this information in the first",
    "start": "185420",
    "end": "189950"
  },
  {
    "text": "row of the table.",
    "start": "189950",
    "end": "192660"
  },
  {
    "text": "If either antenna is touching, the FSM should\ntransition from LOST to the rotate-counterclockwise",
    "start": "192660",
    "end": "199069"
  },
  {
    "text": "state.",
    "start": "199069",
    "end": "200069"
  },
  {
    "text": "We've given this an encoding of 01.",
    "start": "200069",
    "end": "204590"
  },
  {
    "text": "There are three combinations of L and R values\nthat match this transition, so we've added",
    "start": "204590",
    "end": "209790"
  },
  {
    "text": "three rows to the truth table.",
    "start": "209790",
    "end": "212329"
  },
  {
    "text": "This takes care of all the transitions from\nthe LOST state.",
    "start": "212330",
    "end": "216659"
  },
  {
    "text": "Now we can tackle the transitions from the\nrotate-counterclockwise state.",
    "start": "216659",
    "end": "221530"
  },
  {
    "text": "If either antenna is touching, the next state\nis again rotate-counterclockwise.",
    "start": "221530",
    "end": "226530"
  },
  {
    "text": "So we've identified the matching values for\nthe inputs and added the appropriate three",
    "start": "226530",
    "end": "230819"
  },
  {
    "text": "rows to the transition table.",
    "start": "230819",
    "end": "233560"
  },
  {
    "text": "We can continue in a similar manner to encode\nthe transitions one-by-one.",
    "start": "233560",
    "end": "239980"
  },
  {
    "start": "239000",
    "end": "239000"
  },
  {
    "text": "Here's the final table, where we've used don't\ncares to reduce the number of rows for presentation.",
    "start": "239980",
    "end": "246400"
  },
  {
    "text": "Next we want to come up with Boolean equations\nfor each of the outputs of the combinational",
    "start": "246400",
    "end": "250530"
  },
  {
    "text": "logic, i.e., the two next-state bits and the\nthree motion-control outputs.",
    "start": "250530",
    "end": "256310"
  },
  {
    "text": "Here are the Karnaugh maps for the two next-state\nbits.",
    "start": "256310",
    "end": "261729"
  },
  {
    "text": "Using our K-map skills from Chapter 4, we'll\nfind a cover of the prime implicants for S1-prime",
    "start": "261729",
    "end": "268409"
  },
  {
    "text": "and write down the corresponding product terms\nin a minimal sum-of-products equation.",
    "start": "268409",
    "end": "273990"
  },
  {
    "text": "And then do the same for the other next-state\nbit.",
    "start": "273990",
    "end": "277490"
  },
  {
    "text": "We can follow a similar process to derive\nminimal sum-of-products expressions for the",
    "start": "277490",
    "end": "281909"
  },
  {
    "text": "motion-control outputs.",
    "start": "281909",
    "end": "284650"
  },
  {
    "text": "Implementing each sum-of-products in a straight-forward\nfashion with AND and OR gates, we get the",
    "start": "284650",
    "end": "289710"
  },
  {
    "start": "285000",
    "end": "285000"
  },
  {
    "text": "following schematic for the ant brain.",
    "start": "289710",
    "end": "292470"
  },
  {
    "text": "Pretty neat!",
    "start": "292470",
    "end": "293680"
  },
  {
    "text": "Who knew that maze following behavior could\nbe implemented with a couple of D registers",
    "start": "293680",
    "end": "298949"
  },
  {
    "text": "and a handful of logic gates?",
    "start": "298949",
    "end": "302910"
  },
  {
    "text": "There are many complex behaviors that can\nbe created with surprisingly simple FSMs.",
    "start": "302910",
    "end": "308030"
  },
  {
    "text": "Early on, the computer graphics folks learned\nthat group behaviors like swarming, flocking",
    "start": "308030",
    "end": "314110"
  },
  {
    "text": "and schooling can be modeled by equipping\neach participant with a simple FSM.",
    "start": "314110",
    "end": "318899"
  },
  {
    "text": "So next time you see the massive battle scene\nfrom the Lord of the Rings movie, think of",
    "start": "318899",
    "end": "324069"
  },
  {
    "text": "many FSMs running in parallel!",
    "start": "324070",
    "end": "327710"
  },
  {
    "text": "Physical behaviors that arise from simple\ninteractions between component molecules can",
    "start": "327710",
    "end": "332469"
  },
  {
    "text": "sometimes be more easily modeled using cellular\nautomata -",
    "start": "332469",
    "end": "336930"
  },
  {
    "text": "arrays of communicating FSMS - than by trying\nto solve the partial differential equations",
    "start": "336930",
    "end": "342520"
  },
  {
    "text": "that model the constraints on the molecules'\nbehavior.",
    "start": "342520",
    "end": "346710"
  },
  {
    "text": "And here's an idea: what if we allowed the\nFSM to modify its own transition table?",
    "start": "346710",
    "end": "352900"
  },
  {
    "text": "Hmm.",
    "start": "352900",
    "end": "354279"
  },
  {
    "text": "Maybe that's a plausible model for evolution!",
    "start": "354279",
    "end": "357689"
  },
  {
    "text": "FSMs are everywhere!",
    "start": "357689",
    "end": "359949"
  },
  {
    "text": "You'll see FSMs for the rest of your life…",
    "start": "359949",
    "end": "362400"
  }
]