[
  {
    "start": "4500",
    "end": "4500"
  },
  {
    "text": "Remember that in\nour previous video,",
    "start": "4500",
    "end": "6390"
  },
  {
    "text": "we created four new variables,\nHighSodium, HighFat, HighCarbs,",
    "start": "6390",
    "end": "11000"
  },
  {
    "text": "and HighProtein.",
    "start": "11000",
    "end": "12850"
  },
  {
    "text": "Now in this video, we\nwill try to understand",
    "start": "12850",
    "end": "15160"
  },
  {
    "text": "our data and the relationships\nbetween our variables",
    "start": "15160",
    "end": "17850"
  },
  {
    "text": "better, using the table\nand tapply functions.",
    "start": "17850",
    "end": "21770"
  },
  {
    "text": "To figure out how many foods\nhave higher sodium level",
    "start": "21770",
    "end": "24620"
  },
  {
    "text": "than average, we want to look\nat the HighSodium variable",
    "start": "24620",
    "end": "28010"
  },
  {
    "text": "and count the foods\nthat have values 1.",
    "start": "28010",
    "end": "31390"
  },
  {
    "text": "We can do this using\nthe table function,",
    "start": "31390",
    "end": "34020"
  },
  {
    "text": "and give it as an input\nthe HighSodium vector.",
    "start": "34020",
    "end": "38960"
  },
  {
    "text": "Now pressing Enter, we obtain\nthe following information.",
    "start": "38960",
    "end": "42770"
  },
  {
    "text": "Most of the foods\nin our data set,",
    "start": "42770",
    "end": "44520"
  },
  {
    "text": "and precisely 4,800 of them,\nhave lower sodium than average,",
    "start": "44520",
    "end": "50000"
  },
  {
    "text": "and we have 2090 foods\nthat have higher sodium",
    "start": "50000",
    "end": "53570"
  },
  {
    "text": "content than average.",
    "start": "53570",
    "end": "55570"
  },
  {
    "text": "Now let's see how\nmany foods have",
    "start": "55570",
    "end": "57150"
  },
  {
    "text": "both high sodium and high fat.",
    "start": "57150",
    "end": "59770"
  },
  {
    "text": "Well, to do this we can\nalso use the table function,",
    "start": "59770",
    "end": "62570"
  },
  {
    "text": "but instead of giving\nit one input, now",
    "start": "62570",
    "end": "65319"
  },
  {
    "text": "we can give it two inputs.",
    "start": "65319",
    "end": "66930"
  },
  {
    "text": "So let's go back\nusing the Up arrow,",
    "start": "66930",
    "end": "69760"
  },
  {
    "text": "and now have the first\ninput being the HighSodium",
    "start": "69760",
    "end": "72690"
  },
  {
    "text": "vector and the second input\nbeing the HighFat vector.",
    "start": "72690",
    "end": "78789"
  },
  {
    "text": "And we obtain the\nfollowing table.",
    "start": "78789",
    "end": "81289"
  },
  {
    "text": "The rows belong to the first\ninput, which is HighSodium,",
    "start": "81289",
    "end": "84880"
  },
  {
    "text": "and the columns correspond\nto the second input,",
    "start": "84880",
    "end": "87509"
  },
  {
    "text": "which is HighFat.",
    "start": "87510",
    "end": "89200"
  },
  {
    "text": "So from the table\nwe see that we have",
    "start": "89200",
    "end": "91180"
  },
  {
    "text": "3,529 foods with low\nsodium and low fat,",
    "start": "91180",
    "end": "96360"
  },
  {
    "text": "1,355 foods with low\nsodium and high fat, 1,378",
    "start": "96360",
    "end": "103560"
  },
  {
    "text": "foods with high\nsodium but low fat,",
    "start": "103560",
    "end": "106649"
  },
  {
    "text": "and finally 712 foods with\nboth high sodium and high fat.",
    "start": "106650",
    "end": "112750"
  },
  {
    "text": "Now, what if we want to compute\nthe average amount of iron",
    "start": "112750",
    "end": "116370"
  },
  {
    "text": "sorted by high and low protein?",
    "start": "116370",
    "end": "119110"
  },
  {
    "text": "Well, to do this we can\nuse the tapply function.",
    "start": "119110",
    "end": "122470"
  },
  {
    "text": "Let us have a little\nrefresher on how",
    "start": "122470",
    "end": "124670"
  },
  {
    "text": "the tapply function works.",
    "start": "124670",
    "end": "127729"
  },
  {
    "text": "The tapply function takes\nthree arguments, and groups",
    "start": "127730",
    "end": "130990"
  },
  {
    "text": "the first argument according\nto the second argument,",
    "start": "130990",
    "end": "133870"
  },
  {
    "text": "and then applies argument three.",
    "start": "133870",
    "end": "136230"
  },
  {
    "text": "For instance, we wanted to\ncompute the average amount",
    "start": "136230",
    "end": "138980"
  },
  {
    "text": "of iron sorted by\nhigh and low protein.",
    "start": "138980",
    "end": "142300"
  },
  {
    "text": "In this case, the\nfirst argument is",
    "start": "142300",
    "end": "144500"
  },
  {
    "text": "whatever we are\ntrying to analyze,",
    "start": "144500",
    "end": "146130"
  },
  {
    "text": "which is the Iron vector,\nand we are sorting it",
    "start": "146130",
    "end": "148750"
  },
  {
    "text": "according to the vector\nHighProtein, which",
    "start": "148750",
    "end": "151210"
  },
  {
    "text": "is our second argument.",
    "start": "151210",
    "end": "152710"
  },
  {
    "text": "And finally we apply\nthe mean function",
    "start": "152710",
    "end": "154770"
  },
  {
    "text": "in R on the sorted Iron values.",
    "start": "154770",
    "end": "157360"
  },
  {
    "text": "And we should not\nforget to remove",
    "start": "157360",
    "end": "158960"
  },
  {
    "text": "the nonavailable entries.",
    "start": "158960",
    "end": "161270"
  },
  {
    "text": "So what does tapply do exactly?",
    "start": "161270",
    "end": "164090"
  },
  {
    "text": "Suppose that we have\nthe following data",
    "start": "164090",
    "end": "165989"
  },
  {
    "text": "frame with the foods\none through six,",
    "start": "165990",
    "end": "168530"
  },
  {
    "text": "along with information\nabout their Iron levels",
    "start": "168530",
    "end": "171260"
  },
  {
    "text": "and their values of HighProtein\nthat we just added earlier.",
    "start": "171260",
    "end": "175799"
  },
  {
    "text": "The first step is\ngrouping the Iron data",
    "start": "175800",
    "end": "178230"
  },
  {
    "text": "according to the\nvalues of HighProtein.",
    "start": "178230",
    "end": "180690"
  },
  {
    "text": "So, first group, all the\nfoods that have HighProtein",
    "start": "180690",
    "end": "184570"
  },
  {
    "text": "equal 1, and that would\nbe food number two",
    "start": "184570",
    "end": "187440"
  },
  {
    "text": "with 12.8 milligrams of\niron, food number three",
    "start": "187440",
    "end": "190930"
  },
  {
    "text": "with 1.44 milligrams of\niron, and food number six",
    "start": "190930",
    "end": "194930"
  },
  {
    "text": "with 2.29 milligrams of iron.",
    "start": "194930",
    "end": "198060"
  },
  {
    "text": "Then we group the remaining\nfoods that have protein levels",
    "start": "198060",
    "end": "201000"
  },
  {
    "text": "below average, and\nthis corresponds",
    "start": "201000",
    "end": "203140"
  },
  {
    "text": "to food one, food\nfour, and food five.",
    "start": "203140",
    "end": "207420"
  },
  {
    "text": "Then we compute the mean of\nIron level for each group.",
    "start": "207420",
    "end": "211270"
  },
  {
    "text": "In this case, the mean of the\ngroup with high protein levels",
    "start": "211270",
    "end": "214100"
  },
  {
    "text": "is 5.51, and the mean of the\ngroup with low protein levels",
    "start": "214100",
    "end": "218210"
  },
  {
    "text": "is 1.72.",
    "start": "218210",
    "end": "220120"
  },
  {
    "text": "And this is the result\nof the tapply function.",
    "start": "220120",
    "end": "223540"
  },
  {
    "text": "Now let's go back to\nR and have a hands",
    "start": "223540",
    "end": "225640"
  },
  {
    "text": "on practice on how to\nuse the tapply function.",
    "start": "225640",
    "end": "229829"
  },
  {
    "text": "So let's compute\nthe average amount",
    "start": "229829",
    "end": "231459"
  },
  {
    "text": "of iron sorted by\nprotein levels.",
    "start": "231460",
    "end": "233980"
  },
  {
    "text": "So we're going to type tapply,\nand then the first argument",
    "start": "233980",
    "end": "237550"
  },
  {
    "text": "is the Iron vector which\nwe are trying to analyze.",
    "start": "237550",
    "end": "240820"
  },
  {
    "text": "And we are sorting it according\nto the HighProtein vector,",
    "start": "240820",
    "end": "244470"
  },
  {
    "text": "so this is our second argument.",
    "start": "244470",
    "end": "246710"
  },
  {
    "text": "And then the mean\nstatistic is used,",
    "start": "246710",
    "end": "249050"
  },
  {
    "text": "because we're\ntrying to calculate",
    "start": "249050",
    "end": "250700"
  },
  {
    "text": "the average level of Iron.",
    "start": "250700",
    "end": "253250"
  },
  {
    "text": "And do not forget to remove the\nnon available entries by typing",
    "start": "253250",
    "end": "257220"
  },
  {
    "text": "na.rm=TRUE.",
    "start": "257220",
    "end": "257720"
  },
  {
    "text": "And here's the result.",
    "start": "260820",
    "end": "262720"
  },
  {
    "text": "Foods with low\nprotein content have",
    "start": "262720",
    "end": "265260"
  },
  {
    "text": "on average 2.55\nmilligrams of iron",
    "start": "265260",
    "end": "268640"
  },
  {
    "text": "and foods with high\nprotein content",
    "start": "268640",
    "end": "270860"
  },
  {
    "text": "have on average 3.2\nmilligrams of iron.",
    "start": "270860",
    "end": "274689"
  },
  {
    "text": "Now how about the maximum\nlevel of vitamin C",
    "start": "274690",
    "end": "277740"
  },
  {
    "text": "in foods with high\nand low carbs?",
    "start": "277740",
    "end": "280349"
  },
  {
    "text": "Again, we're going to use\nthe tapply function, so",
    "start": "280350",
    "end": "282580"
  },
  {
    "text": "use the Up arrow to go back\nto the previous command,",
    "start": "282580",
    "end": "285860"
  },
  {
    "text": "but now we're trying to\nanalyze the VitaminC vector.",
    "start": "285860",
    "end": "289360"
  },
  {
    "text": "So this is our first argument,\nAnd we are sorting it",
    "start": "289360",
    "end": "293629"
  },
  {
    "text": "according to high and low\ncarbs, so the second argument",
    "start": "293630",
    "end": "297020"
  },
  {
    "text": "is the vector HighCarbs.",
    "start": "297020",
    "end": "299000"
  },
  {
    "text": "And instead of the mean,\nwe're applying here",
    "start": "299000",
    "end": "300990"
  },
  {
    "text": "the max statistic, and\nwe obtain the following.",
    "start": "300990",
    "end": "305389"
  },
  {
    "text": "The maximum vitamin C level,\nwhich is 2,400 milligrams",
    "start": "305390",
    "end": "309980"
  },
  {
    "text": "is actually present in a\nfood that is high in carbs.",
    "start": "309980",
    "end": "314430"
  },
  {
    "text": "Well, is it true that foods\nthat are high in carbs",
    "start": "314430",
    "end": "316970"
  },
  {
    "text": "have generally high\nvitamin C content?",
    "start": "316970",
    "end": "319760"
  },
  {
    "text": "Well, to see if this\nis the case, now",
    "start": "319760",
    "end": "321860"
  },
  {
    "text": "we're going to go back\nto our tapply function,",
    "start": "321860",
    "end": "324530"
  },
  {
    "text": "and instead of the\nmax statistic we're",
    "start": "324530",
    "end": "326639"
  },
  {
    "text": "going to use the\nsummary function.",
    "start": "326640",
    "end": "329090"
  },
  {
    "text": "We obtain the following\ntwo sets of information.",
    "start": "329090",
    "end": "332350"
  },
  {
    "text": "The first set corresponds to\nthe foods with low carb content,",
    "start": "332350",
    "end": "336909"
  },
  {
    "text": "and the second set of\ninformation corresponds",
    "start": "336909",
    "end": "339380"
  },
  {
    "text": "to foods with higher carb\ncontent than average.",
    "start": "339380",
    "end": "343310"
  },
  {
    "text": "Now the statistical information\nthat the summary function",
    "start": "343310",
    "end": "345889"
  },
  {
    "text": "gives us pertains to\nthe vitamin C levels.",
    "start": "345890",
    "end": "349580"
  },
  {
    "text": "This means that we have\non average 6.36 milligrams",
    "start": "349580",
    "end": "354009"
  },
  {
    "text": "of vitamin C in foods\nwith low carb content,",
    "start": "354010",
    "end": "357600"
  },
  {
    "text": "and on average 16.31 milligrams\nof vitamin C in foods",
    "start": "357600",
    "end": "362230"
  },
  {
    "text": "with high carb content.",
    "start": "362230",
    "end": "364240"
  },
  {
    "text": "So, it does seem\nlike a general trend.",
    "start": "364240",
    "end": "367169"
  },
  {
    "text": "Foods with high carb content are\non average richer in vitamin C",
    "start": "367170",
    "end": "371350"
  },
  {
    "text": "compared to foods\nwith low carb content.",
    "start": "371350",
    "end": "374370"
  },
  {
    "text": "Now we reach the end of\nour first recitation.",
    "start": "374370",
    "end": "377410"
  },
  {
    "text": "I hope this was a good exercise\nto familiarize yourself better",
    "start": "377410",
    "end": "380850"
  },
  {
    "text": "with R, and learn some\nfun facts about nutrition.",
    "start": "380850",
    "end": "384470"
  },
  {
    "text": "Stay healthy.",
    "start": "384470",
    "end": "386310"
  }
]