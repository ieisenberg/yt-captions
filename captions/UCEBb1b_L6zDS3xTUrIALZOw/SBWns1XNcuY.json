[
  {
    "start": "4500",
    "end": "4500"
  },
  {
    "text": "In this video, we will do\nsome basic data analysis.",
    "start": "4500",
    "end": "8200"
  },
  {
    "text": "All that I've done\nsince our previous video",
    "start": "8200",
    "end": "10260"
  },
  {
    "text": "is clear the console, but R\nstill has all the information",
    "start": "10260",
    "end": "13840"
  },
  {
    "text": "stored.",
    "start": "13840",
    "end": "14980"
  },
  {
    "text": "In fact, if we use the\nUp Arrow on our keyboard,",
    "start": "14980",
    "end": "17860"
  },
  {
    "text": "we retrieve the last\ncommand we typed,",
    "start": "17860",
    "end": "20120"
  },
  {
    "text": "which was the summary\nof the USDA data frame.",
    "start": "20120",
    "end": "23740"
  },
  {
    "text": "And as a quick reminder, at\nthe end of our last video,",
    "start": "23740",
    "end": "26670"
  },
  {
    "text": "we realized that the\nmaximum level of Sodium",
    "start": "26670",
    "end": "29710"
  },
  {
    "text": "was 38,758 milligrams,\nwhich is very high.",
    "start": "29710",
    "end": "34890"
  },
  {
    "text": "We would like to see which\nfood this corresponds to.",
    "start": "34890",
    "end": "38210"
  },
  {
    "text": "Well, to check the values of\nsodium levels in the foods",
    "start": "38210",
    "end": "41059"
  },
  {
    "text": "within the data set, we\ncan type USDA$Sodium.",
    "start": "41060",
    "end": "43790"
  },
  {
    "text": "This gives us a series\nof numbers associated",
    "start": "46570",
    "end": "49220"
  },
  {
    "text": "with the amount of sodium in\nall the foods in our data set.",
    "start": "49220",
    "end": "52960"
  },
  {
    "text": "Remember from the lecture\nthat this is called a vector,",
    "start": "52960",
    "end": "55920"
  },
  {
    "text": "and it is associated\nwith the variable Sodium.",
    "start": "55920",
    "end": "59160"
  },
  {
    "text": "For instance, the sodium\nlevel of the last food",
    "start": "59160",
    "end": "61910"
  },
  {
    "text": "in our data set\nis 68 milligrams.",
    "start": "61910",
    "end": "65960"
  },
  {
    "text": "Now, to find which food has\nthe highest level of sodium,",
    "start": "65960",
    "end": "69289"
  },
  {
    "text": "we can simply use the\nfunction which.max, which",
    "start": "69289",
    "end": "73230"
  },
  {
    "text": "takes as an input\nthe Sodium vector,",
    "start": "73230",
    "end": "77120"
  },
  {
    "text": "and it gives us the index of\nthe food with the highest sodium",
    "start": "77120",
    "end": "80560"
  },
  {
    "text": "level.",
    "start": "80560",
    "end": "81600"
  },
  {
    "text": "In this case, the 265th\nfood in our data set",
    "start": "81600",
    "end": "85350"
  },
  {
    "text": "has the maximum sodium content.",
    "start": "85350",
    "end": "88020"
  },
  {
    "text": "Now to know which\nfood that is, we",
    "start": "88020",
    "end": "90430"
  },
  {
    "text": "need to take a look at\nthe vector corresponding",
    "start": "90430",
    "end": "92970"
  },
  {
    "text": "to the text description\nof the foods.",
    "start": "92970",
    "end": "95940"
  },
  {
    "text": "However, I cannot remember the\nexact name of that variable",
    "start": "95940",
    "end": "99390"
  },
  {
    "text": "on top of my head to be\nable to call it in R.",
    "start": "99390",
    "end": "102340"
  },
  {
    "text": "But we can use the\nfunction names,",
    "start": "102340",
    "end": "105270"
  },
  {
    "text": "which takes as an input the\nUSDA data frame and gives us",
    "start": "105270",
    "end": "109560"
  },
  {
    "text": "the exact names of all the\nvariables as stored in the USDA",
    "start": "109560",
    "end": "113899"
  },
  {
    "text": "data frame.",
    "start": "113900",
    "end": "115210"
  },
  {
    "text": "And now we know that the name\nof the variable we're looking at",
    "start": "115210",
    "end": "118590"
  },
  {
    "text": "is Description.",
    "start": "118590",
    "end": "120490"
  },
  {
    "text": "So now, to get the\nname of the 265th food,",
    "start": "120490",
    "end": "124340"
  },
  {
    "text": "we simply need to ask R\nto pick the 265th element",
    "start": "124340",
    "end": "128739"
  },
  {
    "text": "from the vector Description.",
    "start": "128740",
    "end": "130600"
  },
  {
    "text": "So, using our dollar notation\nto call the Description vector",
    "start": "130600",
    "end": "135350"
  },
  {
    "text": "and then the square brackets\naround the index 265,",
    "start": "135350",
    "end": "139780"
  },
  {
    "text": "and the winner is table salt!",
    "start": "139780",
    "end": "144360"
  },
  {
    "text": "Well, having 38,758 milligrams\nof sodium in 100 grams of table",
    "start": "144360",
    "end": "150960"
  },
  {
    "text": "salt sort of makes\nsense, but none of us",
    "start": "150960",
    "end": "155140"
  },
  {
    "text": "would eat 100 grams of\nsalt in one sitting.",
    "start": "155140",
    "end": "157829"
  },
  {
    "text": "So it might be more\ninteresting to find",
    "start": "157829",
    "end": "160790"
  },
  {
    "text": "out which foods, for\ninstance, contain more than,",
    "start": "160790",
    "end": "163799"
  },
  {
    "text": "say, 10,000\nmilligrams of sodium.",
    "start": "163800",
    "end": "166920"
  },
  {
    "text": "To do so, we can create\na new data frame,",
    "start": "166920",
    "end": "169720"
  },
  {
    "text": "and let's call it HighSodium.",
    "start": "169720",
    "end": "172520"
  },
  {
    "text": "And this is going to be a\nsubset of our original data",
    "start": "172520",
    "end": "176200"
  },
  {
    "text": "frame, USDA, with\nonly the foods that",
    "start": "176200",
    "end": "179300"
  },
  {
    "text": "have sodium content\nthat exceeds 10,000.",
    "start": "179300",
    "end": "183920"
  },
  {
    "text": "And now we created\nthis new data frame,",
    "start": "183920",
    "end": "186770"
  },
  {
    "text": "and to see how many foods there\nexist in this new data frame,",
    "start": "186770",
    "end": "190190"
  },
  {
    "text": "we need to see how many\nobservations this data",
    "start": "190190",
    "end": "193560"
  },
  {
    "text": "frame has.",
    "start": "193560",
    "end": "194610"
  },
  {
    "text": "And this can be done by using\nthe function nrow, which",
    "start": "194610",
    "end": "198510"
  },
  {
    "text": "computes the number of rows\nin the data frame HighSodium.",
    "start": "198510",
    "end": "204189"
  },
  {
    "text": "And then we obtain 10\nfoods with sodium levels",
    "start": "204190",
    "end": "207150"
  },
  {
    "text": "above 10,000 milligrams.",
    "start": "207150",
    "end": "209480"
  },
  {
    "text": "Since there are not many, we can\noutput the names of these foods",
    "start": "209480",
    "end": "213000"
  },
  {
    "text": "by looking at their\nDescription vector.",
    "start": "213000",
    "end": "215850"
  },
  {
    "text": "But this time, the\nDescription vector",
    "start": "215850",
    "end": "217810"
  },
  {
    "text": "is not associated with\nthe USDA data frame",
    "start": "217810",
    "end": "221110"
  },
  {
    "text": "but with the\nHighSodium data frame.",
    "start": "221110",
    "end": "224360"
  },
  {
    "text": "So HighSodium$Description,\nand now pressing Enter,",
    "start": "224360",
    "end": "230000"
  },
  {
    "text": "we obtain the names\nof these 10 foods.",
    "start": "230000",
    "end": "232620"
  },
  {
    "text": "So definitely table\nsalt is one of them.",
    "start": "232620",
    "end": "234989"
  },
  {
    "text": "We also have dry soup,\ngravy, some leavening agents,",
    "start": "234990",
    "end": "240140"
  },
  {
    "text": "but I thought caviar is well\nknown to be among the top 10",
    "start": "240140",
    "end": "244510"
  },
  {
    "text": "foods with highest\nlevels of sodium.",
    "start": "244510",
    "end": "246909"
  },
  {
    "text": "But it doesn't\nappear in this list.",
    "start": "246910",
    "end": "249660"
  },
  {
    "text": "Let's find how much sodium\nit has in 100 grams.",
    "start": "249660",
    "end": "253390"
  },
  {
    "text": "Now, obviously, this task\nwould have been very easy",
    "start": "253390",
    "end": "256359"
  },
  {
    "text": "if we knew the index of\ncaviar in our data set,",
    "start": "256360",
    "end": "259268"
  },
  {
    "text": "and we simply feed it\ninto the vector Sodium.",
    "start": "259269",
    "end": "263070"
  },
  {
    "text": "However, we need to get\nthe index of caviar,",
    "start": "263070",
    "end": "265810"
  },
  {
    "text": "and to do this, we\nneed to track down",
    "start": "265810",
    "end": "268260"
  },
  {
    "text": "the word caviar in\nthe text description.",
    "start": "268260",
    "end": "271610"
  },
  {
    "text": "To do this, we can\nuse the match function",
    "start": "271610",
    "end": "274310"
  },
  {
    "text": "and ask R to dig the word caviar\nin the description vector.",
    "start": "274310",
    "end": "280020"
  },
  {
    "text": "So USDA$Description.",
    "start": "280020",
    "end": "280860"
  },
  {
    "text": "And now pressing Enter,\nwe obtain that caviar is",
    "start": "283670",
    "end": "287030"
  },
  {
    "text": "the 4,154th food\nin our data set.",
    "start": "287030",
    "end": "291360"
  },
  {
    "text": "So now finding the sodium level\nof caviar is a piece of cake.",
    "start": "291360",
    "end": "295840"
  },
  {
    "text": "We just type USDA$Sodium and,\nusing the square brackets with",
    "start": "295840",
    "end": "301280"
  },
  {
    "text": "the index 4,154, ask R to pick\nthe sodium level of caviar",
    "start": "301280",
    "end": "306950"
  },
  {
    "text": "for us.",
    "start": "306950",
    "end": "307450"
  },
  {
    "text": "And this is 1,500 milligrams.",
    "start": "307450",
    "end": "311220"
  },
  {
    "text": "Now, to find a level of sodium\nin caviar, we used two steps,",
    "start": "311220",
    "end": "315130"
  },
  {
    "text": "but we can actually lump\nthem all in one single step.",
    "start": "315130",
    "end": "318450"
  },
  {
    "text": "So let's use the Up\nArrow twice to go back",
    "start": "318450",
    "end": "321150"
  },
  {
    "text": "to the match function, and we\nknow that this match function",
    "start": "321150",
    "end": "324240"
  },
  {
    "text": "gives us an index that then\nshould be fed into the Sodium",
    "start": "324240",
    "end": "327289"
  },
  {
    "text": "vector using square brackets.",
    "start": "327290",
    "end": "329010"
  },
  {
    "text": "So let's enclose it\nin square brackets,",
    "start": "329010",
    "end": "332190"
  },
  {
    "text": "and then at the beginning\nwe're going to just write",
    "start": "332190",
    "end": "334800"
  },
  {
    "text": "USDA$Sodium.",
    "start": "334800",
    "end": "337530"
  },
  {
    "text": "And, again, of\ncourse, this gives us",
    "start": "337530",
    "end": "339139"
  },
  {
    "text": "1,500 milligrams of sodium\nin 100 grams of caviar.",
    "start": "339140",
    "end": "345080"
  },
  {
    "text": "Now, the value 1,500\nmilligrams seems",
    "start": "345080",
    "end": "348020"
  },
  {
    "text": "to be very small compared to\n10,000 milligrams or 38,000",
    "start": "348020",
    "end": "352569"
  },
  {
    "text": "milligrams, which are the values\nthat we worked with so far",
    "start": "352570",
    "end": "355890"
  },
  {
    "text": "with respect to sodium levels.",
    "start": "355890",
    "end": "358570"
  },
  {
    "text": "But this doesn't seem\nto be a fair comparison.",
    "start": "358570",
    "end": "361680"
  },
  {
    "text": "Maybe the best way to figure\nout how big this value is,",
    "start": "361680",
    "end": "364870"
  },
  {
    "text": "is by comparing it to the mean\nand the standard deviation",
    "start": "364870",
    "end": "368240"
  },
  {
    "text": "of the sodium levels\nacross the data set.",
    "start": "368240",
    "end": "371639"
  },
  {
    "text": "To find the mean, we know\nthat this information",
    "start": "371640",
    "end": "373830"
  },
  {
    "text": "is given to us using\nthe summary function.",
    "start": "373830",
    "end": "376650"
  },
  {
    "text": "So let's use the summary\nfunction, and this time,",
    "start": "376650",
    "end": "379419"
  },
  {
    "text": "give it the input\nthe Sodium vector",
    "start": "379420",
    "end": "381740"
  },
  {
    "text": "instead of the whole\nUSDA data frame.",
    "start": "381740",
    "end": "385069"
  },
  {
    "text": "And we can see that the mean\nsodium value is 322 milligrams.",
    "start": "385070",
    "end": "391450"
  },
  {
    "text": "However, the summary\nfunction does not",
    "start": "391450",
    "end": "393310"
  },
  {
    "text": "give us standard\ndeviation information,",
    "start": "393310",
    "end": "395600"
  },
  {
    "text": "but we can do this using\nthe function sd, which",
    "start": "395600",
    "end": "398560"
  },
  {
    "text": "stands for standard deviation.",
    "start": "398560",
    "end": "400550"
  },
  {
    "text": "Give it as an input\nthe Sodium vector,",
    "start": "400550",
    "end": "404580"
  },
  {
    "text": "and, oh, we obtain\nnon-available.",
    "start": "404580",
    "end": "409310"
  },
  {
    "text": "Well we got NA because\nwe forgot to remove",
    "start": "409310",
    "end": "411940"
  },
  {
    "text": "the non-available\nentries before computing",
    "start": "411940",
    "end": "414220"
  },
  {
    "text": "our statistical measure.",
    "start": "414220",
    "end": "415420"
  },
  {
    "text": "So let's use the Up Arrow to go\nback to the standard deviation",
    "start": "415420",
    "end": "419260"
  },
  {
    "text": "function, and now we have to\nexplicitly tell R to remove",
    "start": "419260",
    "end": "423120"
  },
  {
    "text": "these non-available entries\nby typing na.rm=TRUE.",
    "start": "423120",
    "end": "425830"
  },
  {
    "text": "And now the standard\ndeviation is 1,045 milligrams.",
    "start": "429480",
    "end": "433840"
  },
  {
    "text": "Note that, if we sum the mean\nand the standard deviation,",
    "start": "433840",
    "end": "438020"
  },
  {
    "text": "we obtain around 1,400\nmilligrams, which",
    "start": "438020",
    "end": "441020"
  },
  {
    "text": "is still smaller than\nthe amount of sodium",
    "start": "441020",
    "end": "444150"
  },
  {
    "text": "in 100 grams of caviar.",
    "start": "444150",
    "end": "446370"
  },
  {
    "text": "Well, this means that caviar\nis pretty rich in sodium",
    "start": "446370",
    "end": "450110"
  },
  {
    "text": "compared to most of the\nfoods in our data set.",
    "start": "450110",
    "end": "453469"
  },
  {
    "text": "Now that we know how to do a\nbasic analysis of our data,",
    "start": "453470",
    "end": "457060"
  },
  {
    "text": "let's look at the plotting\nfunctionality in R",
    "start": "457060",
    "end": "459419"
  },
  {
    "text": "in our next video.",
    "start": "459420",
    "end": "461820"
  }
]