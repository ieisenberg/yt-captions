[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13339"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13340",
    "end": "21790"
  },
  {
    "start": "21000",
    "end": "51000"
  },
  {
    "text": "MARK SEIFTER: Hi, everyone. A few of you may know\nme from my tutorial, but if you don't I'm Mark\nSeifter I'm the senior TA here",
    "start": "21790",
    "end": "30250"
  },
  {
    "text": "at 6034 and these Friday\nomega recitations are going to be a little bit\ndifferent than any",
    "start": "30250",
    "end": "36606"
  },
  {
    "text": "of the other things\nin the class. All right, so, what\nis omega recitation.",
    "start": "36606",
    "end": "41989"
  },
  {
    "text": "Omega recitation is in\nthis lecture style room, but I hope to make it more\nlike a recitation or a tutorial",
    "start": "41990",
    "end": "48230"
  },
  {
    "text": "by, unfortunately\nfor some of you, perhaps, calling on you guys\nto participate during the omega",
    "start": "48230",
    "end": "54740"
  },
  {
    "start": "51000",
    "end": "210000"
  },
  {
    "text": "recitation, as we attempt to\nwork with some of the material that Patrick has given\nus the big picture",
    "start": "54740",
    "end": "60930"
  },
  {
    "text": "for in the lectures. And if you've gone\nto recitation so far you may received a\nlittle bit of enrichment",
    "start": "60930",
    "end": "66400"
  },
  {
    "text": "into how the algorithms work. Well, here in omega\nrecitation we're going to figure out how you\ncan work the algorithms.",
    "start": "66400",
    "end": "73810"
  },
  {
    "text": "And that's very important,\nbecause in this class being able to work the algorithms by\nhand in some of these examples",
    "start": "73810",
    "end": "83120"
  },
  {
    "text": "I put up here, or\nlike Patrick sometimes does in lectures to\nteach you the algorithms, is a crucial way\nof demonstrating",
    "start": "83120",
    "end": "89500"
  },
  {
    "text": "that you understand how the\nalgorithms work, and we use it on a quiz.",
    "start": "89500",
    "end": "94880"
  },
  {
    "text": "The way we use it on\nthe quiz is we-- well this is an old quiz problem. It's from last year.",
    "start": "94880",
    "end": "100040"
  },
  {
    "text": "It tripped up a lot of people. So we're going to\ngo over it today. I'm going to tell you all\nthe tricks that tripped up",
    "start": "100040",
    "end": "107119"
  },
  {
    "text": "a lot of people, in addition\nto emphasizing tricks that I've picked up over of\nthe three years of TA-ing",
    "start": "107120",
    "end": "113720"
  },
  {
    "text": "this course before, so\nthat you will not fall prey to any of these tricks. Hopefully.",
    "start": "113720",
    "end": "119520"
  },
  {
    "text": "I say hopefully, because\nsome of these tricks I talked about omega\nrecitation last year",
    "start": "119520",
    "end": "125029"
  },
  {
    "text": "and people still\ngot tricked by them. I guess maybe some people\ndidn't come to omega recitation or they were just\nvery tricky tricks.",
    "start": "125029",
    "end": "131820"
  },
  {
    "text": "So be sure to come\nto omega recitation. ",
    "start": "131820",
    "end": "136944"
  },
  {
    "text": "Pay attention to the tricks. Pay attention to how\nthese things are solved. Ask questions if\nyou're not sure.",
    "start": "136944",
    "end": "143220"
  },
  {
    "text": "And when we get\ndone with the hour together I'm hoping\nthat everyone's going to do really well on the\nrules part of the first quiz.",
    "start": "143220",
    "end": "151820"
  },
  {
    "text": "So without further\nado, if there are no questions on that, which\nI don't think there probably",
    "start": "151820",
    "end": "158730"
  },
  {
    "text": "will be, let's move on\nto the problem at hand. As some of you may\nhave noticed, it",
    "start": "158730",
    "end": "163980"
  },
  {
    "text": "is a Harry Potter based problem. One of our TAs last year\nwas a big Harry Potter fan.",
    "start": "163980",
    "end": "169430"
  },
  {
    "text": "So what we have here\na series of rules and a series of assertions.",
    "start": "169430",
    "end": "175739"
  },
  {
    "text": "Now if you happen to be real go\ngetter and have already looked at all the past\nquizzes online, you",
    "start": "175740",
    "end": "181610"
  },
  {
    "text": "may have already\nseen this problem. And if you really, really\nhave attention to detail you may notice something a\nlittle bit different in the way",
    "start": "181610",
    "end": "188739"
  },
  {
    "text": "I wrote it as compared to the\nway it was written online. In fact, you may, if you\nhave a lot of times a detail,",
    "start": "188740",
    "end": "195140"
  },
  {
    "text": "but you're not really\nin on Scheme or LISP, you may think the way I wrote\nit is much easier to understand.",
    "start": "195140",
    "end": "201680"
  },
  {
    "text": "And in case you can't\nunderstand the other way, and in case one\nof the TAs decides to write it in a LISP-like\nway again, let me explain.",
    "start": "201680",
    "end": "209900"
  },
  {
    "text": "If you look at one of my\nrules, say if x is ambitious, and x is a squib,\nthen x has a bad term.",
    "start": "209900",
    "end": "216880"
  },
  {
    "start": "210000",
    "end": "230000"
  },
  {
    "text": "That's rule 0 up at the top. That's written in sort of what\nwe call in fixed notation.",
    "start": "216880",
    "end": "224270"
  },
  {
    "text": "It's easy, it's simple. All operators are in the\norder you would expect. 2 plus 3 equals 5.",
    "start": "224270",
    "end": "230950"
  },
  {
    "start": "230000",
    "end": "322000"
  },
  {
    "text": "There's another kind of\nnotation that is sometimes used on previous quizzes. And by sometimes, good\nnumber of times, actually.",
    "start": "230950",
    "end": "237720"
  },
  {
    "text": "I'm not sure why we still use\nit that way, because of the fact that the class has move on to\nPython, but we do, sometimes.",
    "start": "237720",
    "end": "243810"
  },
  {
    "text": "And that's called\nprefix notation. In prefix notation, the\noperator comes first. So for instance,\nplus 2 3 equals 5.",
    "start": "243810",
    "end": "253580"
  },
  {
    "text": "The plus comes first. The function, then, comes first. In this case, the\nfunction is plus. So if we were writing this\nin prefix notation, in fact,",
    "start": "253580",
    "end": "260680"
  },
  {
    "text": "the way I received it, when it\nsaid, \"if and x is ambitious,",
    "start": "260680",
    "end": "266150"
  },
  {
    "text": "x is a squib, then\nx has a bad term. The and went first and\nthere's a parentheses",
    "start": "266150",
    "end": "271620"
  },
  {
    "text": "which included everything\nthat was scoped under the and. Does anyone have any questions\nabout prefix notation",
    "start": "271620",
    "end": "277310"
  },
  {
    "text": "in case it comes up? Just remember, if things\nstart being written",
    "start": "277310",
    "end": "283160"
  },
  {
    "text": "in a really weird way\nwith lots and lots and lots of\nparentheses, whatever's outside the parentheses,\nwhether it be \"plus\" or \"and\"",
    "start": "283160",
    "end": "290705"
  },
  {
    "text": "or \"or\" is an operator that acts\non the things that are inside. However, we're not going\nto deal with that now,",
    "start": "290705",
    "end": "297150"
  },
  {
    "text": "because I think the\nmost important thing is to understand is the rules,\nand the less important thing",
    "start": "297150",
    "end": "302930"
  },
  {
    "text": "is to understand\nprefix notation. And you can do a\nproblem at home that's written in prefix notation\nto test yourself on that.",
    "start": "302930",
    "end": "310570"
  },
  {
    "text": "So what rules do we have here. We've got equals 0 through 5. For some reason they\nare labeled with P's.",
    "start": "310570",
    "end": "318720"
  },
  {
    "text": "They are often labeled\nwith either P's or R's. The secret on why they are\nlabelled with P's is that one",
    "start": "318720",
    "end": "324930"
  },
  {
    "start": "322000",
    "end": "352000"
  },
  {
    "text": "year somebody labeled them\nwith P's for like \"proposition\" or something like that. And then other TAs looked at\nthat test and sometimes also",
    "start": "324930",
    "end": "332410"
  },
  {
    "text": "labeled it with P's and it\nsort of down the line continued to be labeled with P's,\nand sometimes with R's.",
    "start": "332410",
    "end": "340050"
  },
  {
    "text": "So these P's are\nthese six rules. The first rule is if x is\nambitious, and x is a squib,",
    "start": "340050",
    "end": "346820"
  },
  {
    "text": "then x has a bad term. So what's the deal with\nthese question mark x's?",
    "start": "346820",
    "end": "351860"
  },
  {
    "text": "The question mark before an\nx, or perhaps a y down here, indicate that there's a\nvariable waiting to be bound.",
    "start": "351860",
    "end": "359340"
  },
  {
    "start": "352000",
    "end": "420000"
  },
  {
    "text": "We're not assuming there's a\nHarry Potter character named x, and only if that question\nmark x, the mystery character,",
    "start": "359340",
    "end": "365130"
  },
  {
    "text": "only if mystery x character\nis ambitious can that person possibly have a bad term.",
    "start": "365130",
    "end": "370710"
  },
  {
    "text": "What we're seeing is any\ncharacter in the Harry Potter universe, or not\nthe Harry Potter universe, maybe a rhinoceros,\ncan fit into that x.",
    "start": "370710",
    "end": "380520"
  },
  {
    "text": "So for instance, if a\nrhinoceros is ambitious, and a rhinoceros is a squib,\nthen a rhinoceros has bad term.",
    "start": "380520",
    "end": "386920"
  },
  {
    "text": "That rule saying, for\nany x this is true. And it's very important how\nwe treat the question mark",
    "start": "386920",
    "end": "393950"
  },
  {
    "text": "x, and how we bind\nquestion mark x, when we do both back chaining\nand forward chaining.",
    "start": "393950",
    "end": "400540"
  },
  {
    "text": "I'll get back to that, because\nsome people made some very, very small mistakes\nthat really messed up",
    "start": "400540",
    "end": "408720"
  },
  {
    "text": "a lot of their forward and\nbackward chaining last year. It was actually very tricky. Jeremy, the TA who wrote\nthis was very clever,",
    "start": "408720",
    "end": "416240"
  },
  {
    "text": "and it makes it really great\ncase study for you guys. All right, so Rule 1, if x\nlives in Gryffindor tower",
    "start": "416240",
    "end": "423125"
  },
  {
    "start": "420000",
    "end": "455000"
  },
  {
    "text": "then x is a protagonist. By the way, for\nconciseness I'm going to be using GT for\nGryffindor tower",
    "start": "423125",
    "end": "429390"
  },
  {
    "text": "when I write these\nin later on, and I'll use SD for Slytherin dungeon. Speaking of which, Rule 2, if\nx lives in Slytherin dungeon,",
    "start": "429390",
    "end": "437460"
  },
  {
    "text": "then x is a villain,\nx is ambitious. Why there are two things here?",
    "start": "437460",
    "end": "444039"
  },
  {
    "text": "Well, after the \"if\" we have\nwhat we call antecedent, that's something that needs to\nbe true in order for this rule",
    "start": "444040",
    "end": "450580"
  },
  {
    "text": "to match. After the \"then\" we have what\nis called the consequent,",
    "start": "450580",
    "end": "455600"
  },
  {
    "text": "and in this case there\nare two consequents. Anyone who lives in\nSlytherin dungeon is automatically a villain\nand also ambitious.",
    "start": "455600",
    "end": "462440"
  },
  {
    "text": "So you can think of there\nbeing sort of an \"and therefore\" for the purposes\nof both of those assertions",
    "start": "462440",
    "end": "469729"
  },
  {
    "text": "would be added to\nthe knowledge base. Rule 3, if x is the\nprotagonist or x is a villain,",
    "start": "469730",
    "end": "476319"
  },
  {
    "text": "and x is ambitious,\nthen x studies a lot.",
    "start": "476320",
    "end": "482730"
  },
  {
    "text": "By the way, the scope\nfor this, just to be sure",
    "start": "482730",
    "end": "489440"
  },
  {
    "text": "that we're clear, is this.",
    "start": "489440",
    "end": "494610"
  },
  {
    "text": "So we need them to\nbe a protagonist or villain and no matter what\nthey have to be ambitious.",
    "start": "494610",
    "end": "502930"
  },
  {
    "text": "Rule 4, if x studies a lot,\nand x is a protagonist, x becomes Hermione's friend.",
    "start": "502930",
    "end": "508539"
  },
  {
    "text": "And Rule 5, if x snogs y, and x\nlives in Gryffindor tower and y",
    "start": "508540",
    "end": "513950"
  },
  {
    "text": "lives in Slytherin dungeon,\nthen x has a bad term. So those are our\nsix rules that we",
    "start": "513950",
    "end": "519760"
  },
  {
    "text": "can use to understand Jeremy's\nworld of the Harry Potter universe. And we also start off\nwith four assertions.",
    "start": "519760",
    "end": "527060"
  },
  {
    "text": "Let me not underestimate\nthe value of always looking to the assertions. It's one of my white star ideas\nthat are up here on the board.",
    "start": "527060",
    "end": "535180"
  },
  {
    "text": "Let me see. This. Perfect. Always check the assertions\nbefore using a rule.",
    "start": "535180",
    "end": "542640"
  },
  {
    "text": "This really tripped people up\nlast year, and you'll see why, because we're doing\nlast year's problem.",
    "start": "542640",
    "end": "548734"
  },
  {
    "text": "Our four assertions\nthat we start. With assertion 0, Millicent\nlives in Slytherin dungeon.",
    "start": "548734",
    "end": "554200"
  },
  {
    "text": "Assertion 1, Millicent\nis ambitious. Assertion 1 is what\ntripped people up, so remember that\nMillicent is ambitious.",
    "start": "554200",
    "end": "560820"
  },
  {
    "text": "Assertion 2 Seamus lives\nin Gryffindor tower. And assertion 3,\nSeamus snogs Millicent.",
    "start": "560820",
    "end": "567380"
  },
  {
    "text": "So those those are\nour four assertions that we've already started with.",
    "start": "567380",
    "end": "572820"
  },
  {
    "start": "572000",
    "end": "773000"
  },
  {
    "text": "Now the two things we're\ngoing to have to do are backward chaining\nand forward chaining.",
    "start": "572820",
    "end": "578400"
  },
  {
    "text": "Now when you guys learned\nthese two backward chaining and forward chaining,\nraise your hand",
    "start": "578400",
    "end": "583839"
  },
  {
    "text": "if thought forward chaining was\nharder than backward chaining. ",
    "start": "583840",
    "end": "590470"
  },
  {
    "text": "I knew it! I can prove whatever\npoint I want because noone wants the raise their hand. I also think backward chaining\nis higher than forward",
    "start": "590470",
    "end": "596710"
  },
  {
    "text": "chaining. Raise your hand if you\nthink backward chaining is higher than forward chaining? First of all, we have a\ngood number of people.",
    "start": "596710",
    "end": "602190"
  },
  {
    "text": "Second of all, since no one\nwants to raise their hand, I could just ask\nit the other way. That's a pro tip if you're ever\nwith a large group of people.",
    "start": "602190",
    "end": "609510"
  },
  {
    "text": "You can prove any point you want\nby asking the other direction. No one will raise their hand. So I agree that backward\nchaining is higher than forward",
    "start": "609510",
    "end": "618370"
  },
  {
    "text": "chaining. And I disagree with Patrick that\nwe're going to get out early, so let's start with\nbackward chaining first.",
    "start": "618370",
    "end": "625169"
  },
  {
    "text": "So that we make sure that we\nspend the bulk of our time with it. The forward chaining,\nwell, you just",
    "start": "625169",
    "end": "631579"
  },
  {
    "text": "go through pretty methodically\nand add new rules. Backward chaining, you have\nto draw this crazy tree.",
    "start": "631580",
    "end": "636660"
  },
  {
    "text": "There's a lot of places to get\nlost in the middle of the road. So let's do some\nbackward chaining.",
    "start": "636660",
    "end": "642220"
  },
  {
    "text": "And to do that, I'll do it\nover here on the left side. So when we're doing\nbackward chaining,",
    "start": "642220",
    "end": "647880"
  },
  {
    "text": "we have to remember a few\nthings that are written directly on the quiz. So you're not going to\nhave to worry about that.",
    "start": "647880",
    "end": "653140"
  },
  {
    "text": "But they're still\npretty important. So-- actually, I'll\nwrite it on here first.",
    "start": "653140",
    "end": "659459"
  },
  {
    "text": "I'm going to read them off. So when working on a\nhypothesis, the backward chainer tries to find a\nmatching assertion",
    "start": "659460",
    "end": "665509"
  },
  {
    "text": "in the list of assertions first. If no matching\nassertion is found,",
    "start": "665510",
    "end": "670850"
  },
  {
    "text": "the backward chainer\nwill try to find a rule with a matching consequence. A rule that has something\nin the then that",
    "start": "670850",
    "end": "677460"
  },
  {
    "text": "can prove the assertion\nis trying to figure out. So for instance, if\nI was doing backward chaining on Seamus [? Snaus ?]\nMillicent, what happens?",
    "start": "677460",
    "end": "687139"
  },
  {
    "text": "I'm immediately\ndone because there's an assertion that's\nassertion three that says Seamus [? Snaus ?] Millicent.",
    "start": "687140",
    "end": "693279"
  },
  {
    "text": "I proved it. I'm done. I'm happy. We can leave, we can go home. Unfortunately, that's not\nwhat the quiz asks us to do.",
    "start": "693280",
    "end": "700380"
  },
  {
    "text": "Now, let's say that instead,\nwe were supposed to say, I don't know, Seamus\nis a protagonist.",
    "start": "700380",
    "end": "706850"
  },
  {
    "text": "Well then, we'd wind\nup looking through here and we would look at the\nfact that rule one can prove",
    "start": "706850",
    "end": "714170"
  },
  {
    "text": "that someone is a protagonist. And we'd curse and\ntry to prove whatever is in the antecedent of rule\none, which is, OK, well,",
    "start": "714170",
    "end": "721649"
  },
  {
    "text": "does he live in\nGryffinder Tower? Assertion two, he does. So that's some really quick.",
    "start": "721650",
    "end": "727621"
  },
  {
    "text": " And if that was too,\nfast don't worry. We're going to go step by\nstep with the actual problem. But I just wanted to give two\nreally easy problems, really",
    "start": "727621",
    "end": "735826"
  },
  {
    "text": "quickly, how it's\ngoing to do it. Let's go step by step\nwith the real problem. Let's keep in mind,\nbackward chainer",
    "start": "735826",
    "end": "741230"
  },
  {
    "text": "never adds new assertions\nto the list of assertions. And if you have a\ntiebreak, you always",
    "start": "741230",
    "end": "749470"
  },
  {
    "text": "order based on rule order\nfirst, P0 through P5. And if the same rule matches\nwith more than one thing",
    "start": "749470",
    "end": "759130"
  },
  {
    "text": "in your list\nassertions, then you tiebreak based on the\norder of the assertions.",
    "start": "759130",
    "end": "764860"
  },
  {
    "text": "Very important. Disambiguation and\ntie-breaking are a big place to get messed up.",
    "start": "764860",
    "end": "771970"
  },
  {
    "text": "So we're going to try\nto prove that Millicent becomes Hermione's friend.",
    "start": "771970",
    "end": "779490"
  },
  {
    "start": "773000",
    "end": "1645000"
  },
  {
    "text": "And so I'm going to\nabbreviate some of the things, but not for the very first line.",
    "start": "779490",
    "end": "786750"
  },
  {
    "text": "So Millicent becomes\nHermione's friend.",
    "start": "786750",
    "end": "793360"
  },
  {
    "text": "We start drawing a goal tree. Now you guys are going to learn\nexactly what these mean very",
    "start": "793360",
    "end": "801580"
  },
  {
    "text": "soon, in fact, next lecture. But for now, trust me when I\nsay these goal trees are depth",
    "start": "801580",
    "end": "809620"
  },
  {
    "text": "first. And I'll explain what that\nmeans because some people have messed themselves up and spent\nmore time than they needed to",
    "start": "809620",
    "end": "817070"
  },
  {
    "text": "by treating the goal\ntree in a different way. Now, Millicent becomes\nHermione's friend.",
    "start": "817070",
    "end": "823950"
  },
  {
    "text": "Let's pretend that we\nare the backward chainer. We're trying to prove that\nthis is true or disprove and say, well, it's definitely\nnot true with what we have.",
    "start": "823950",
    "end": "831470"
  },
  {
    "text": "So let's see. I'm now going to\nmake you guys help. And people in the back think\nthey won't be called on.",
    "start": "831470",
    "end": "838560"
  },
  {
    "text": "So I often like to call\non people in the back. What do you think is the\nfirst thing we should do? Very first thing?",
    "start": "838560",
    "end": "844070"
  },
  {
    "text": "Yes, look for a\nmatching assertion. Excellent. Do we have a matching\nassertion, everyone?",
    "start": "844070",
    "end": "850030"
  },
  {
    "text": "No, we don't. That would be the world's\neasiest quiz problem. We do not have a\nmatching assertion. Great.",
    "start": "850030",
    "end": "855600"
  },
  {
    "text": "So, since we don't have a\nmatching assertion, what now? AUDIENCE: We start\nto look at the rules.",
    "start": "855600",
    "end": "863564"
  },
  {
    "text": "MARK SEIFTER: That's right. And do you see any rule that\ncould prove that Millicent",
    "start": "863565",
    "end": "869060"
  },
  {
    "text": "becomes Hermione's friend? AUDIENCE: P4. MARK SEIFTER: That's right. You can see in P4, x,\nwhich can be anybody.",
    "start": "869060",
    "end": "875520"
  },
  {
    "text": "Anyone is capable of\nbeing Hermione's friend. Great. So P4 is our rule of the hour.",
    "start": "875520",
    "end": "884210"
  },
  {
    "text": "So we're going to use P4. And when we use P4 to prove that\nMillicent becomes Hermione's",
    "start": "884210",
    "end": "892760"
  },
  {
    "text": "friend, we're going to\nhave to add something or another to the goal tree. So let's see.",
    "start": "892760",
    "end": "897824"
  },
  {
    "text": "What do we have to\nadd to the goal tree?  AUDIENCE: We have\nto see if Millicent",
    "start": "897824",
    "end": "903301"
  },
  {
    "text": "studies a lot [INAUDIBLE]. MARK SEIFTER: That's right. Does everyone see that? In order for her to\nbecome Hermione's friend,",
    "start": "903301",
    "end": "908350"
  },
  {
    "text": "by rule four, we have to\nsee if she studies a lot and is a protagonist. Question? AUDIENCE: [INAUDIBLE] ",
    "start": "908350",
    "end": "918399"
  },
  {
    "text": "MARK SEIFTER: OK, that's\na very good question. You're going to get screwed up\nif you look at the antecedent in backward chaining first.",
    "start": "918400",
    "end": "925190"
  },
  {
    "text": "It's backwards\npartially for a reason. You need to look\nat the consequent. Now why is that? Well, let's say there\nis a rule six that",
    "start": "925190",
    "end": "932550"
  },
  {
    "text": "said if x becomes\nHermione's friend, then Hermione feeds x Polyjuice\nPotion, or something like that.",
    "start": "932550",
    "end": "943090"
  },
  {
    "text": "Will that rule help\nus in back chaining to figure out if Millicent\nbecomes Hermione's friend?",
    "start": "943090",
    "end": "949072"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] MARK SEIFTER: Some people\nare shaking their head. But think about it, will that\nrule be able to prove it?",
    "start": "949072",
    "end": "955760"
  },
  {
    "text": "No. Now, if they do become\nHermione's friend and we want to do\nsome forward chaining, we'll figure out\nthat they're going to transmute into some\nkind of other thing because",
    "start": "955760",
    "end": "963240"
  },
  {
    "text": "of the Polyjuice Potion. But it's not going\nto help us do the one thing we want to\nback chain, which is to prove that thing on the top.",
    "start": "963240",
    "end": "968912"
  },
  {
    "text": "So we actually need\nto look for something that has our current\ngoal in its consequent. Then we add on the antecedents.",
    "start": "968912",
    "end": "974640"
  },
  {
    "text": "As people I've asked\nso far-- sorry, I don't know your\nnames-- like Patrick, have correctly given me every\ntime, which is excellent.",
    "start": "974640",
    "end": "982700"
  },
  {
    "text": "So notice also\nthat she didn't say x studies a lot needs to\nbe added to the goal tree.",
    "start": "982700",
    "end": "988955"
  },
  {
    "text": "She said Millicent\nstudies a lot. Oh, another question. Great.",
    "start": "988955",
    "end": "994410"
  },
  {
    "text": "AUDIENCE: So obviously\nafter putting rule 4 there, shouldn't we first check\nthe assertions-- check",
    "start": "994410",
    "end": "1001837"
  },
  {
    "text": "on the assertions instead of\nour conditions [INAUDIBLE] ",
    "start": "1001837",
    "end": "1007000"
  },
  {
    "text": "MARK SEIFTER: So\nthe question is, once we put rule\nfour in there, should we check to see if those\nantecedents of rule four",
    "start": "1007000",
    "end": "1012885"
  },
  {
    "text": "are already in the assertions\nbefore checking other rules? The answer?",
    "start": "1012885",
    "end": "1018100"
  },
  {
    "text": "You're not only correct, sir,\nyou're exactly one step ahead. So I'm going to assume I called\non you for the very next thing.",
    "start": "1018100",
    "end": "1024010"
  },
  {
    "text": "That's exactly what we do\nonce we draw it onto the tree. You're exactly on the way.",
    "start": "1024010",
    "end": "1030000"
  },
  {
    "text": "Further question? Perfect. All right, great.",
    "start": "1030000",
    "end": "1036760"
  },
  {
    "text": "So again, we're putting up\nMillicent studies a lot. Millicent is a protagonist. We're not putting up x.",
    "start": "1036760",
    "end": "1043530"
  },
  {
    "text": "Some people did that. And of course it's an\nn node as we heard. We need them both to be\ntrue or we're not going",
    "start": "1043530",
    "end": "1050970"
  },
  {
    "text": "to be able to continue onward. So we have-- I'm going\nto use m for Millicent. Millicent studies a lot.",
    "start": "1050970",
    "end": "1059580"
  },
  {
    "text": "Also over here, Millicent\nis a protagonist.",
    "start": "1059580",
    "end": "1064679"
  },
  {
    "text": " And we've already\nheard that we need",
    "start": "1064680",
    "end": "1071860"
  },
  {
    "text": "to search in the\nassertions before we go into any rules for what\nwe're looking for next.",
    "start": "1071860",
    "end": "1078315"
  },
  {
    "text": "The question is, what are we\nlooking for next and in what order? This is where that thing I\ntold you about depth search",
    "start": "1078315",
    "end": "1083540"
  },
  {
    "text": "is crucial. We are going to look\nhere on the left node. And if it has any children,\nif we have to keep going down,",
    "start": "1083540",
    "end": "1089360"
  },
  {
    "text": "we are not going\nto look here yet. There's a few reasons for that.",
    "start": "1089360",
    "end": "1094809"
  },
  {
    "text": "One of which is that we're lazy. The evaluation, if\nyou learned about it, is also-- if you learn about\nlazy evaluation, is also lazy.",
    "start": "1094810",
    "end": "1101350"
  },
  {
    "text": "And if we can disprove\nthis study's a lot branch, we don't have to do any work\nwith the protagonist branch. We're done.",
    "start": "1101350",
    "end": "1106720"
  },
  {
    "text": "We're out of here. And it's a loss. So we're going to move down\nthe study's a lot branch.",
    "start": "1106720",
    "end": "1114460"
  },
  {
    "text": "And we already heard\nfrom the audience, we need to look to see if\nit's in the assertions. Everyone, is Millicent studies\na lot in the assertions?",
    "start": "1114460",
    "end": "1123020"
  },
  {
    "text": "No, it's not. Well then, now we're going\nto get to that question",
    "start": "1123020",
    "end": "1128560"
  },
  {
    "text": "that I had before about the\nantecedent or the consequent. Because study lies here in\nthe antecedent of rule four,",
    "start": "1128560",
    "end": "1135192"
  },
  {
    "text": "but we're not going to be\nable to use rule four here. In fact, that's how we got\nhere in the first place. So the question is--\nlet's see, the question",
    "start": "1135192",
    "end": "1145950"
  },
  {
    "text": "is, do we have a rule in\nthe consequent that matches",
    "start": "1145950",
    "end": "1152360"
  },
  {
    "text": "Millicent studies a lot. Yeah, that's right, P3. ",
    "start": "1152360",
    "end": "1159030"
  },
  {
    "text": "That's right. So P3 would give us\nMillicent studies a lot. And so therefore what will\nwe add to the goal tree?",
    "start": "1159030",
    "end": "1168180"
  },
  {
    "text": "AUDIENCE: We add both that is\nMillicent either a protagonist or a villain and [INAUDIBLE]. MARK SEIFTER: Yeah, she.",
    "start": "1168180",
    "end": "1174920"
  },
  {
    "text": "Turns out to be a girl. So that's exactly right. We heard that we\nneed to add-- we",
    "start": "1174920",
    "end": "1182920"
  },
  {
    "text": "need to add an AND node,\nwhich also has an OR node at the bottom\nof it, because this",
    "start": "1182920",
    "end": "1188480"
  },
  {
    "text": "is a little bit of\na complicated rule. So we have an AND node.",
    "start": "1188480",
    "end": "1194380"
  },
  {
    "text": "So we have an AND node. And the first thing\non the AND node is Millicent is a protagonist\nor Millicent is a villain.",
    "start": "1194380",
    "end": "1208230"
  },
  {
    "text": " And the second thing on the AND\nnode is Millicent is ambitious.",
    "start": "1208230",
    "end": "1216105"
  },
  {
    "text": " Actually, that is the second\nthing on the AND node.",
    "start": "1216105",
    "end": "1221650"
  },
  {
    "text": "I hope that's what I said. All right, the second\nthing on the AND node is Millicent is ambitious. ",
    "start": "1221650",
    "end": "1229160"
  },
  {
    "text": "So here's our handy little tree.",
    "start": "1229160",
    "end": "1237657"
  },
  {
    "text": "Now this is where it's\nimportant, as I said, we're doing a\ndepth first search. We're going down\nalong the left branch.",
    "start": "1237657",
    "end": "1244490"
  },
  {
    "text": "So where do you think we're\ngoing to go next on this tree?",
    "start": "1244490",
    "end": "1250885"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] MARK SEIFTER: Not quite. That's a good guess.",
    "start": "1250885",
    "end": "1256300"
  },
  {
    "text": "You didn't say we're\ntrying to prove m is a protagonist on\nthe right branch, which is a very common mistake. What do you do?",
    "start": "1256300",
    "end": "1261376"
  },
  {
    "text": "AUDIENCE: You should\ngo down to see if there's a\nconsequence for m is-- Millicent is a protagonist.",
    "start": "1261376",
    "end": "1266870"
  },
  {
    "text": "MARK SEIFTER: Which one\nof the two Millicent is a protagonist do\nwe want to look at? ",
    "start": "1266870",
    "end": "1272231"
  },
  {
    "text": "Yeah, the farthest down left. That's right. So you guys will\nlearn depth for search on Monday, at which\npoint it will become",
    "start": "1272232",
    "end": "1278290"
  },
  {
    "text": "much clearer what I'm saying. But yeah, you always follow\nthe left branch as far down as you can.",
    "start": "1278290",
    "end": "1283947"
  },
  {
    "text": "Then you take the right\nbranch of that same branch that you followed. Great, so we're going to\ntry to find that Millicent",
    "start": "1283947",
    "end": "1289710"
  },
  {
    "text": "is a protagonist. What do we do first? Everyone? Check assertion, yes.",
    "start": "1289710",
    "end": "1296016"
  },
  {
    "text": "Is it in there? No, it's not. OK. So, therefore we're\ngoing to try to find",
    "start": "1296016",
    "end": "1302150"
  },
  {
    "text": "a rule as we heard about whether\nMillicent is a protagonist.",
    "start": "1302150",
    "end": "1307270"
  },
  {
    "text": "So, all the way in the back? All the way in the back, is\nthere a rule that matches?",
    "start": "1307270",
    "end": "1314938"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] MARK SEIFTER: That\nmatches in its consequent that Millicent is a protagonist.",
    "start": "1314938",
    "end": "1320809"
  },
  {
    "text": "AUDIENCE: Um, there is a rule. MARK SEIFTER: OK.",
    "start": "1320810",
    "end": "1326420"
  },
  {
    "text": "Well, let's give it a try. Which one? AUDIENCE: One. MARK SEIFTER: Rule\none, that's right. So therefore, we would have\nto add what to our goal tree?",
    "start": "1326420",
    "end": "1335380"
  },
  {
    "text": "AUDIENCE: Another [INAUDIBLE]. MARK SEIFTER: Right. And what's on that please?",
    "start": "1335380",
    "end": "1341188"
  },
  {
    "text": " AUDIENCE: [INAUDIBLE] MARK SEIFTER: Yeah, Millicent\nlives in Gryffindor Tower,",
    "start": "1341188",
    "end": "1347238"
  },
  {
    "text": "perfect. So, our new thing that\nwe're searching for is-- pretend this connects.",
    "start": "1347238",
    "end": "1355350"
  },
  {
    "text": "Actually, I guess\nit does connect. We're looking for m lives\nin Gryffindor Tower.",
    "start": "1355350",
    "end": "1361860"
  },
  {
    "text": "Great. And since it's depth first,\nthat's where we go next. Great, we're on a roll.",
    "start": "1361860",
    "end": "1367270"
  },
  {
    "text": "So what do we do first? Do we have that in assertions?",
    "start": "1367270",
    "end": "1373440"
  },
  {
    "text": "Some people say yes,\nbut the answer is no. We have, in fact, Seamus\nliving in Gryffindor Tower.",
    "start": "1373440",
    "end": "1378910"
  },
  {
    "text": "Most of you said \"no.\" You're right. The majority rules. We don't have any assertions.",
    "start": "1378910",
    "end": "1384310"
  },
  {
    "text": "However, do we have a rule\nwith that in the consequent? No. So what do we do?",
    "start": "1384310",
    "end": "1389690"
  },
  {
    "text": " People are saying different\nthings that are all correct.",
    "start": "1389690",
    "end": "1395980"
  },
  {
    "text": "Backtrack, you say. Go to the next. We can't prove it. All correct. Put a big x.",
    "start": "1395980",
    "end": "1402960"
  },
  {
    "text": "This isn't true. Now we'd look up. We're on an OR node. So we're not done yet because\neither of those can be true.",
    "start": "1402960",
    "end": "1412490"
  },
  {
    "text": "So now we go back up, backtrack,\nMillicent is a villain. ",
    "start": "1412490",
    "end": "1418850"
  },
  {
    "text": "What do we do first? Check assertions. Is it in there? No, it's not.",
    "start": "1418850",
    "end": "1424330"
  },
  {
    "text": "Don't worry, we're getting\nto one where it will be, where about 40%-- or 30%\nto 40% of the class lost",
    "start": "1424330",
    "end": "1430460"
  },
  {
    "text": "points, very, very soon. So, we see that\nMillicent is a villain.",
    "start": "1430460",
    "end": "1438770"
  },
  {
    "text": "And it's not in the assertions. So therefore, is\nthere any rule that",
    "start": "1438770",
    "end": "1443930"
  },
  {
    "text": "has that in its consequent? ",
    "start": "1443930",
    "end": "1449684"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]  MARK SEIFTER: We're looking\nfor Millicent is a villain.",
    "start": "1449684",
    "end": "1455040"
  },
  {
    "text": " AUDIENCE: [INAUDIBLE] ",
    "start": "1455040",
    "end": "1462902"
  },
  {
    "text": "MARK SEIFTER: Oh,\nyou can't see it. All right, I will\nmove it down slightly. It got a little bit off kilter\nwhen I put in the parentheses",
    "start": "1462902",
    "end": "1469422"
  },
  {
    "text": "around the \"and.\" Hold on. There you go. ",
    "start": "1469422",
    "end": "1476830"
  },
  {
    "text": "AUDIENCE: If [INAUDIBLE] is a\nprotagonist or is a villain. [INAUDIBLE]",
    "start": "1476830",
    "end": "1483422"
  },
  {
    "text": "MARK SEIFTER: We're\ntrying to prove that she's a villain, though. So do we have any with\nthat in the consequent?",
    "start": "1483422",
    "end": "1489255"
  },
  {
    "text": "[INAUDIBLE] anything\nthat will prove that she's a villain if\nwe fire off that rule. ",
    "start": "1489255",
    "end": "1496149"
  },
  {
    "text": "Want to give here a\nlittle bit of help? AUDIENCE: P2. If she lives in Slytherin, then\nshe's a villain [INAUDIBLE].",
    "start": "1496150",
    "end": "1501569"
  },
  {
    "text": "MARK SEIFTER: Ah, see that now? It had two, so it was\na little bit harder. Now some people ask, what\nabout that ambitious thing?",
    "start": "1501569",
    "end": "1507510"
  },
  {
    "text": "Can we like add that to\nthe tree or something? No. The backward chainer is\nsingle-minded, focused,",
    "start": "1507510",
    "end": "1512799"
  },
  {
    "text": "and stupid. Even though it's later going\nto need to prove that she's ambitious, it doesn't care.",
    "start": "1512800",
    "end": "1518239"
  },
  {
    "text": "It just sees the villain there. Villain, oh, that's great. As long as we've\ngot the antecedent",
    "start": "1518239",
    "end": "1523370"
  },
  {
    "text": "we are going to be happy. This is actually\nan important point,",
    "start": "1523370",
    "end": "1529289"
  },
  {
    "text": "not in this particular problem,\nbut in some other problems. So by using P2,\nwe're obviously going",
    "start": "1529290",
    "end": "1536279"
  },
  {
    "text": "to have the antecedent x\nlives in Slytherin dungeon. And x here is Millicent. So Millicent lives\nin Slytherin dungeon.",
    "start": "1536280",
    "end": "1542816"
  },
  {
    "text": " All right, so what's\nthe first thing",
    "start": "1542816",
    "end": "1549600"
  },
  {
    "text": "we do when we see\nthis new assertion?  We check the assertions.",
    "start": "1549600",
    "end": "1555430"
  },
  {
    "text": "Is it in there? Yes. That's not where\neveryone lost points, but yes, it is in there.",
    "start": "1555430",
    "end": "1561314"
  },
  {
    "text": "Check. This OR node is happy. Now we move up to the AND node\nwith Millicent is ambitious.",
    "start": "1561314",
    "end": "1568680"
  },
  {
    "text": "So Millicent is ambitious. What do we do now? ",
    "start": "1568680",
    "end": "1574830"
  },
  {
    "text": "AUDIENCE: So isn't\nthe consequent of P2 that x is a villain\nand x is ambitious.",
    "start": "1574830",
    "end": "1581210"
  },
  {
    "text": "I don't know if it's\n[INAUDIBLE] or whatever, but in our assertions we have\nthat Millicent is ambitious.",
    "start": "1581210",
    "end": "1588042"
  },
  {
    "text": "Is that necessary to let us-- MARK SEIFTER: To\nlet us use rule two. Actually, no.",
    "start": "1588042",
    "end": "1593940"
  },
  {
    "text": "The question is,\ndo we need the x is",
    "start": "1593940",
    "end": "1600659"
  },
  {
    "text": "ambitious to be in our list of\nassertions in order to use P2. For instance, if we didn't have\nthe assertion that Millicent",
    "start": "1600660",
    "end": "1608280"
  },
  {
    "text": "is ambitious, would P2\nhave a problem firing? ",
    "start": "1608280",
    "end": "1614030"
  },
  {
    "text": "So, it's a very\ninteresting question. It's sort of what\nactually I was trying to mention earlier when I\nsaid it's single-minded,",
    "start": "1614030",
    "end": "1622139"
  },
  {
    "text": "it's focused, it doesn't\ncare about the other one. Because you might say,\nwell, wait a minute, P2 could never\nhave actually fired",
    "start": "1622140",
    "end": "1628299"
  },
  {
    "text": "if it didn't have both\nof its consequents. But in fact, the backward\nchainer doesn't care.",
    "start": "1628300",
    "end": "1634130"
  },
  {
    "text": "All that the backward\nchainer is looking to do is to prove whether\nor not there's",
    "start": "1634130",
    "end": "1639760"
  },
  {
    "text": "a possibility that Millicent\nmight be a villain. It's not trying to say,\noh, all the results",
    "start": "1639760",
    "end": "1646530"
  },
  {
    "start": "1645000",
    "end": "1765000"
  },
  {
    "text": "of some certain rules are\nmaking Millicent a villain and all the other things that\nare there, like ambitious, are",
    "start": "1646530",
    "end": "1653390"
  },
  {
    "text": "in the database. It's not the forward chainer. It actually doesn't care. This sometimes leads to\nunnecessary computation.",
    "start": "1653390",
    "end": "1659560"
  },
  {
    "text": "But it's very simple, and\nit's very simple to code. So it often will probably\nspeed you up in the long run.",
    "start": "1659560",
    "end": "1665160"
  },
  {
    "text": "Like if there's, for instance,\n100 thing in the then and you only care\nabout one of them,",
    "start": "1665160",
    "end": "1670226"
  },
  {
    "text": "it would be a waste,\nalmost, to add those 99. There's a follow up\nover here somewhere?",
    "start": "1670226",
    "end": "1677030"
  },
  {
    "text": "[INAUDIBLE]  AUDIENCE: Order m of 99.",
    "start": "1677030",
    "end": "1683386"
  },
  {
    "text": "And so [INAUDIBLE] ",
    "start": "1683386",
    "end": "1690230"
  },
  {
    "text": "MARK SEIFTER: You can try. However, then at that\npoint, every time you check the\nassertions, you'd be",
    "start": "1690230",
    "end": "1695520"
  },
  {
    "text": "attempting to check those 99. Also, you might not\nhave used those rules. The question is, could\nyou make a hash table",
    "start": "1695520",
    "end": "1702660"
  },
  {
    "text": "with all of the 100 things\nthat were in the consequent? And then, after having\nmade that hash table",
    "start": "1702660",
    "end": "1708840"
  },
  {
    "text": "since you were already\nwalking through those anyway when you were checking\nit, you could add those to the assertions.",
    "start": "1708840",
    "end": "1714049"
  },
  {
    "text": "The problem is that you\nmight not necessarily want-- with the backward\nchainer-- you might not",
    "start": "1714049",
    "end": "1720200"
  },
  {
    "text": "necessarily want\nto think that all those things in the consequent\nare necessarily true.",
    "start": "1720200",
    "end": "1726860"
  },
  {
    "text": "However, you might\nnot care about them. And then you have\nto make an order and computation every time you\ncheck that list of assertions",
    "start": "1726860",
    "end": "1734090"
  },
  {
    "text": "in the upper left. AUDIENCE: [INAUDIBLE] ",
    "start": "1734090",
    "end": "1739819"
  },
  {
    "text": "MARK SEIFTER: You don't know\nwhat assertions there are. You have to check the\nentire list of assertions in the upper left\nevery time you get",
    "start": "1739819",
    "end": "1746240"
  },
  {
    "text": "to a new node in the goal tree. So each one is order 1. But I'm not saying to find a\nspecific assertion is order n.",
    "start": "1746240",
    "end": "1753060"
  },
  {
    "text": "I'm saying every time you get\na new node in the goal tree, you have to check all the\nassertions you've added. AUDIENCE: You have to do that\nanyway. [INAUDIBLE] assertions.",
    "start": "1753060",
    "end": "1760540"
  },
  {
    "text": "MARK SEIFTER: Yeah, you'd\nhave to check for the four. But let's say that there were\n10,000 consequents of P2.",
    "start": "1760540",
    "end": "1766710"
  },
  {
    "start": "1765000",
    "end": "1895000"
  },
  {
    "text": "You would have to check\n10,000 instead of four if you added them\nall after proving",
    "start": "1766710",
    "end": "1771750"
  },
  {
    "text": "P2 was true on the goal tree. Also, another important\nnote is that you might not",
    "start": "1771750",
    "end": "1777820"
  },
  {
    "text": "use every branch\nof the goal tree, if there's like an\nOR that's up higher and you wind up using a\ndifferent branch, in which case",
    "start": "1777820",
    "end": "1783110"
  },
  {
    "text": "you'd probably have to\nmake a separate hash table for every\nsub-branch that you have and then remember which\nhash tables were updated",
    "start": "1783110",
    "end": "1790060"
  },
  {
    "text": "based on which sub-branch. And then sub-branches die. It's probably more\neffort than it's worth.",
    "start": "1790060",
    "end": "1796906"
  },
  {
    "text": "It's certainly an\ninteresting question. It's a great question for\na debate in recitation. Also, I'm happy to\ntalk about it later.",
    "start": "1796906",
    "end": "1803980"
  },
  {
    "text": "I think that someone who very\nintelligently made hash tables and thought the problem\nthrough, as Patrick said,",
    "start": "1803980",
    "end": "1810180"
  },
  {
    "text": "more knowledge can\nmean a better-- well, actually maybe he hasn't\nsaid more knowledge can mean a better search because we\nhaven't done that lecture yet,",
    "start": "1810180",
    "end": "1816924"
  },
  {
    "text": "but-- AUDIENCE: You're talking\nabout implementation decision and using hash table might\nwell be a good way to do this.",
    "start": "1816924",
    "end": "1823975"
  },
  {
    "text": "The problem is that we're\npresuming some things about how the rules are firing and\nwhat [INAUDIBLE] they're",
    "start": "1823975",
    "end": "1830444"
  },
  {
    "text": "firing that depend on the order\nof assertions in the table. So if we used the hash\ntable, we'd lose the order.",
    "start": "1830444",
    "end": "1836736"
  },
  {
    "text": "[INAUDIBLE] MARK SEIFTER: That's true. That's true. But I'm thinking like\nif someone wanted",
    "start": "1836736",
    "end": "1841820"
  },
  {
    "text": "to make that implementation as\nlike do some research in rules based systems, it's possible you\ncan increase the running speed.",
    "start": "1841820",
    "end": "1848890"
  },
  {
    "text": "In this class, we are\nnot completely as focused on the fastest algorithms.",
    "start": "1848890",
    "end": "1854940"
  },
  {
    "text": "But I still think that\na cool thing to try. Questions from\npeople in the crowd? We'll start with you.",
    "start": "1854940",
    "end": "1860799"
  },
  {
    "text": "AUDIENCE: So ignoring\nthe hash table? MARK SEIFTER: Ignore\nthe hash table. That's a good idea because\nit's a little extra enrichment",
    "start": "1860800",
    "end": "1866296"
  },
  {
    "text": "thing. It's not anything\nyou would possibly need to know for the quiz. AUDIENCE: [INAUDIBLE]\nSo if it became",
    "start": "1866296",
    "end": "1874630"
  },
  {
    "text": "an [INAUDIBLE] are you\nusing this \"then\" statement because you want the villain. So along with using this\nyou get x is ambitious.",
    "start": "1874630",
    "end": "1883096"
  },
  {
    "text": "[INAUDIBLE] used after that,\nanother \"then\" statement that we also use that\nsays x is not ambitious.",
    "start": "1883096",
    "end": "1889072"
  },
  {
    "text": "So how would you resolve that? MARK SEIFTER: So\nthe question is, let's say you used rule\ntwo somewhere in the tree",
    "start": "1889072",
    "end": "1896370"
  },
  {
    "text": "to get that x is\na villain, which then says that x is ambitious. Then later, you have\nx is not ambitious",
    "start": "1896370",
    "end": "1904900"
  },
  {
    "text": "somewhere in one of the other\nrules that you then later need.",
    "start": "1904900",
    "end": "1910192"
  },
  {
    "text": "The question is, how\ndo you resolve that? What does it do? Well, first of all-- AUDIENCE: [INAUDIBLE] ",
    "start": "1910192",
    "end": "1919130"
  },
  {
    "text": "MARK SEIFTER: First\nof all, interestingly, if it says x is not ambitious--\nliterally like that.",
    "start": "1919130",
    "end": "1925537"
  },
  {
    "text": "And I'm not being pedantic here. This is one of\nthe tricks someone played in a previous quiz.",
    "start": "1925537",
    "end": "1931059"
  },
  {
    "text": "You can have that\nand x is ambitious both in the list because it's\na dumb rules-based system it",
    "start": "1931060",
    "end": "1936340"
  },
  {
    "text": "doesn't know that you can't\nhave both of those on the list. So if you have a positive\nassertion in a consequent,",
    "start": "1936340",
    "end": "1942759"
  },
  {
    "text": "x is not ambitious in a\nconsequent, x is not ambitious, it'll be happy to add\nMillicent is not ambitious",
    "start": "1942760",
    "end": "1949000"
  },
  {
    "text": "while Millicent ambitious\nthis is already there, because it's stupid. Now if it had\ndelete Millicent is",
    "start": "1949000",
    "end": "1955490"
  },
  {
    "text": "ambitious in the consequent\nand deleted something that was previously there, that\nwould be an interesting problem.",
    "start": "1955490",
    "end": "1964110"
  },
  {
    "text": "It could cause mistakes. Your back chaining\nwould probably make the mistake\nof allowing this.",
    "start": "1964110",
    "end": "1969196"
  },
  {
    "text": "However, this is exactly what we\ndo not, I believe as a policy, do not have DELETE\nstatements on the quizzes.",
    "start": "1969196",
    "end": "1975794"
  },
  {
    "text": " At least previous\nquizzes did not have them, except\nfor in a hypothetical",
    "start": "1975795",
    "end": "1982170"
  },
  {
    "text": "of what happens if we add\na DELETE statement here. I don't think we've ever\nmade people work things through with the delete.",
    "start": "1982170",
    "end": "1987610"
  },
  {
    "text": "Delete would possibly\ncause some issues. Question in the back? AUDIENCE: So, just\nto check this,",
    "start": "1987610",
    "end": "1993929"
  },
  {
    "text": "we're doing backwards\nchaining, we don't actually add assertions\nto your [INAUDIBLE]. MARK SEIFTER: Never add\nassertions in backward chain",
    "start": "1993930",
    "end": "2000230"
  },
  {
    "text": "to the assertion table. It's dumb. The system is dumb. I'm not saying it's a\ndumb idea to do this.",
    "start": "2000230",
    "end": "2005850"
  },
  {
    "text": "It's actually pretty\nfast to do it this way. But the system is dumb. The question is, do\nyou add assertions",
    "start": "2005850",
    "end": "2012204"
  },
  {
    "text": "or you don't add assertions? You do not. You simply go through, checking\nall the things on your goal",
    "start": "2012204",
    "end": "2017350"
  },
  {
    "text": "tree until the goal tree is\neither proven or disproven, then you're out of here.",
    "start": "2017350",
    "end": "2022530"
  },
  {
    "text": "So, cool so far, everyone? Good questions from everyone. These are all questions\nthat are things",
    "start": "2022530",
    "end": "2027789"
  },
  {
    "text": "that often trip people up. So, our next thing,\nMillicent is ambitious. We sort of-- the cat\nis out of the bag",
    "start": "2027790",
    "end": "2033258"
  },
  {
    "text": "because there is a question\nmentioning that there is an assertion that says that. But I direct you guys to\nour favorite rule, rule two.",
    "start": "2033259",
    "end": "2041290"
  },
  {
    "text": "Shouldn't we use\nrule two to prove that Millicent is ambitious? The answer is if you want to\nlose four points or however",
    "start": "2041290",
    "end": "2048010"
  },
  {
    "text": "many points, then yes. But if you don't\nwant to lose points, then this is already correct\nby virtue of assertion one.",
    "start": "2048010",
    "end": "2062279"
  },
  {
    "text": "So I guess I should write,\nalso, that this over here, Millicent studies a lot\nrule, this rule is rule four.",
    "start": "2062280",
    "end": "2073840"
  },
  {
    "text": "Yeah, that's rule four\n[INAUDIBLE] and protagonist. Down here to prove that she\nstudies a lot is rule three.",
    "start": "2073840",
    "end": "2080980"
  },
  {
    "text": "And then at the bottom here\nwe have what rules here?",
    "start": "2080980",
    "end": "2088989"
  },
  {
    "text": "We have the protagonist\nrule, which is one, and the villain\nrule which is two.",
    "start": "2088989",
    "end": "2095610"
  },
  {
    "text": " This is correct virtue of A0.",
    "start": "2095610",
    "end": "2101250"
  },
  {
    "text": " OK, great.",
    "start": "2101250",
    "end": "2106390"
  },
  {
    "text": "So we've proved\nthis whole AND node. We know that Millicent\nstudies a lot. But now we're going to have\nto go a little bit more",
    "start": "2106390",
    "end": "2112824"
  },
  {
    "text": "quickly based on time, and so\nI will do the remaining things. Anyone who has not been\ncalled on is off the hook.",
    "start": "2112824",
    "end": "2118270"
  },
  {
    "text": "But that doesn't mean\nnot to pay attention because there's some\ninteresting stuff still to come. So, Millicent is a protagonist.",
    "start": "2118270",
    "end": "2124350"
  },
  {
    "text": "Well, good news, everyone. There's one other reason\nthat I can do this",
    "start": "2124350",
    "end": "2129770"
  },
  {
    "text": "and that's that you've already\ntold me what I need to do. Most is a protagonist, you\nuse rule one, rule one.",
    "start": "2129770",
    "end": "2137810"
  },
  {
    "text": "And check if she lives\nin Gryffindor tower. Now, will it do it again?",
    "start": "2137810",
    "end": "2143031"
  },
  {
    "text": "Yes it will. It hasn't cached that\nit's already tried that. Now, hash table not\nwithstanding, caching something",
    "start": "2143031",
    "end": "2149840"
  },
  {
    "text": "you've already tried may be\na good idea with backward chaining, but we do not\ndo that in this class.",
    "start": "2149840",
    "end": "2155070"
  },
  {
    "text": "That's an implementation detail. It's another idea of\nsomething you can do. We don't catch things\nthat we've already tried.",
    "start": "2155070",
    "end": "2160630"
  },
  {
    "text": "We try them again, dammit. And when we try it again,\nmaybe it'll work this time.",
    "start": "2160630",
    "end": "2166170"
  },
  {
    "text": "No, it never works. It never works this time. This fails. This AND node fails.",
    "start": "2166170",
    "end": "2172000"
  },
  {
    "text": "The whole thing fails. They're not friends at all. They're bitter enemies.",
    "start": "2172000",
    "end": "2179310"
  },
  {
    "text": "Millicent does not\nbecome Hermione's friend. So now they ask\nus a few questions",
    "start": "2179310",
    "end": "2184510"
  },
  {
    "text": "which are pretty easy to answer\nbased on the ordeal we've just been through. So, determine the minimum\nnumber of additional assertions",
    "start": "2184510",
    "end": "2192579"
  },
  {
    "text": "that we would need\nto add for Millicent to become Hermione's friend.",
    "start": "2192580",
    "end": "2198180"
  },
  {
    "text": "But you're not allowed\nto add an assertion that matches a consequent of a rule.",
    "start": "2198180",
    "end": "2203820"
  },
  {
    "text": "You can only add an\nassertion-- in other words, you can't add an assertion that\nwill prove some other rules.",
    "start": "2203820",
    "end": "2211030"
  },
  {
    "text": "You have to add an assertion\nthat directly-- yeah, that's basically the rule here.",
    "start": "2211030",
    "end": "2216880"
  },
  {
    "text": "Because there's\na lot of choices. But he wanted one\nparticular answer. And so can anyone\nthink of an assertion",
    "start": "2216880",
    "end": "2223105"
  },
  {
    "text": "that doesn't match any\nconsequent of any rule that will make her be\nHermione's friend.",
    "start": "2223105",
    "end": "2231559"
  },
  {
    "text": "A lot of people say Millicent\nlives in Gryffindor. That's correct. So, part three, your\nsolution to part two",
    "start": "2231560",
    "end": "2236640"
  },
  {
    "text": "causes an uncommon situation. What is the uncommon situation? And what should you do\nto the list of assertions",
    "start": "2236640",
    "end": "2243779"
  },
  {
    "text": "to solve this problem?  Does anyone know what\nthe uncommon situation",
    "start": "2243780",
    "end": "2249040"
  },
  {
    "text": "would be if we added that\nshe lives in Gryffindor? Hand is raised up here. What is your answer? [INAUDIBLE] That's true.",
    "start": "2249040",
    "end": "2256687"
  },
  {
    "text": "She lives in Gryffindor\nand Slytherin. So how would you fix that?",
    "start": "2256687",
    "end": "2261742"
  },
  {
    "text": "[INAUDIBLE] Yes,\nyou could take out Slytherin from the assertions\nand say that she only",
    "start": "2261742",
    "end": "2269270"
  },
  {
    "text": "lived in Gryffindor. A lot of people gave the\nanswer to this question, which is a perfectly\nreasonable thing",
    "start": "2269270",
    "end": "2275700"
  },
  {
    "text": "to do in a rules-basis system. They said, well, we\ncan add a rule that says that if you live in x and\ny is different than x, then",
    "start": "2275700",
    "end": "2286060"
  },
  {
    "text": "you can't live in y. The problem with that,\namong other things, is that we asked for a way to\nchange the assertions and not",
    "start": "2286060",
    "end": "2293290"
  },
  {
    "text": "the rules. And you gave us a way to\nchange the assertions. That's the right answer. ",
    "start": "2293290",
    "end": "2302310"
  },
  {
    "text": "There was another\nbackward chaining problem, this is 2009 quiz one,\nand I will leave it off",
    "start": "2302310",
    "end": "2312030"
  },
  {
    "text": "for the moment. You guys should\ntake a look at it, in particular with\nvariable binding.",
    "start": "2312030",
    "end": "2317550"
  },
  {
    "text": "Because remember, you\nalways have to bind the variable that's\nrelevant to you. But that doesn't mean\nthat you always have",
    "start": "2317550",
    "end": "2323920"
  },
  {
    "text": "to bind all of the variables. For instance, let's\nsay that we wanted to prove that Millicent\nhas a bad term, which",
    "start": "2323920",
    "end": "2329290"
  },
  {
    "text": "as it turns out, is\nwhat we wanted to prove in the other backward chaining. Very quickly and without doing\nthe problem, can anyone who",
    "start": "2329290",
    "end": "2337549"
  },
  {
    "text": "thinks they're very clever\nat backward chaining tell me exactly what things would\nbe added to the goal tree",
    "start": "2337549",
    "end": "2343860"
  },
  {
    "text": "to prove that Millicent\nhas a bad term? Raise your hand. I won't pick out a\nvictim because I'm asking this to happen pretty quickly.",
    "start": "2343860",
    "end": "2349955"
  },
  {
    "text": " No one? ",
    "start": "2349955",
    "end": "2358190"
  },
  {
    "text": "All right. AUDIENCE: You would add the\nthree antecedents to rule--",
    "start": "2358190",
    "end": "2365405"
  },
  {
    "text": "MARK SEIFTER: To rule five. So what would you\nadd specifically? AUDIENCE: For anyone,\nvariable-wise, you would just have to\nshow that there is at least",
    "start": "2365405",
    "end": "2372365"
  },
  {
    "text": "one person who matches. MARK SEIFTER: So can you\njust sort of read out, what would the first\nthing say with the snogs?",
    "start": "2372365",
    "end": "2379580"
  },
  {
    "text": "AUDIENCE: X snogs-- or\nMillicent snogs anyone. MARK SEIFTER: Yeah,\nMillicent snogs y.",
    "start": "2379580",
    "end": "2387200"
  },
  {
    "text": "That's crucial. Some people did a lot\nof different things. Some people put\nSeamus in already. You can't do that.",
    "start": "2387200",
    "end": "2393140"
  },
  {
    "text": "The system is stupid, it doesn't\nknow that the person is Seamus. Also, some people\nsaid it worked, because look, they're\nsnogging each other,",
    "start": "2393140",
    "end": "2399610"
  },
  {
    "text": "but it's the wrong snoggle\ndirection up there. ",
    "start": "2399610",
    "end": "2405650"
  },
  {
    "text": "Because we have Seamus\nsnogging Millicent, not Millicent snogging Seamus. But yes, exactly. It would be Millicent snogs y.",
    "start": "2405650",
    "end": "2411440"
  },
  {
    "text": "Millicent lives in\nGryffindor tower. y lives in Slytherin dungeon. So, let's give forward chaining\nall the attention it deserves,",
    "start": "2411440",
    "end": "2419930"
  },
  {
    "text": "about eight minutes, which\nwill be more than enough. ",
    "start": "2419930",
    "end": "2426410"
  },
  {
    "text": "OK, we still got\nall these rules. We've still got all\nthese assertions. Instead of doing that horrible\nbackward chaining-- well,",
    "start": "2426410",
    "end": "2433345"
  },
  {
    "text": "it's not that horrible-- but\nwe'll do forward chaining. It'll be really easy. We'll just add new\nassertions as they go.",
    "start": "2433345",
    "end": "2438900"
  },
  {
    "text": "Remember the tiebreak order. Rules in order from 0 to 5. And if the same\nrule could fire off",
    "start": "2438900",
    "end": "2446490"
  },
  {
    "text": "with multiple\ndifferent assertions, we'll use the assertions\nin order from 0 to 3. So let's see.",
    "start": "2446490",
    "end": "2455160"
  },
  {
    "text": "We don't have much time, but\nwith our four assertions, let's see, what\nrules possibly could",
    "start": "2455160",
    "end": "2461310"
  },
  {
    "text": "match with our four assertions? Well, I'll figure out for you.",
    "start": "2461310",
    "end": "2466390"
  },
  {
    "text": "Do we have an assertion\nabout an ambitious person? Yes. But they're not a squib. So not rule zero.",
    "start": "2466390",
    "end": "2471917"
  },
  {
    "text": "Do we have someone that\nlives in Gryffindor? We absolutely do. Rule one is matches. Do we have someone that\nlives in Slytherin?",
    "start": "2471917",
    "end": "2477810"
  },
  {
    "text": "We do. Rule two matches. Do we have a protagonist\nor a villain? We don't have any\nprotagonist or villain.",
    "start": "2477810",
    "end": "2483680"
  },
  {
    "text": "Rule three is not going to\nmatch because it's in an \"and.\" do we have someone\nwho studies a lot? We do not have someone\nwho studies a lot.",
    "start": "2483680",
    "end": "2490149"
  },
  {
    "text": "Rule four is not going to match. Do we have some snogging? We do have some snogging. So rule one, two,\nand five match.",
    "start": "2490149",
    "end": "2496500"
  },
  {
    "text": "So m for matching, we\nhave one, two and five. Everyone, which one wins the\ntiebreak between one, two,",
    "start": "2496500",
    "end": "2503180"
  },
  {
    "text": "and five? One, because it comes\nfirst numerically. Which one is rule one if x\nlives in Gryffindor tower?",
    "start": "2503180",
    "end": "2510740"
  },
  {
    "text": "The only binding\nfor x is Seamus. Seamus lives in\nGryffindor tower. We're firing off rule one.",
    "start": "2510740",
    "end": "2517520"
  },
  {
    "text": "So new assertions, the first\nassertion that we'll add is Seamus is it a protagonist.",
    "start": "2517520",
    "end": "2526075"
  },
  {
    "text": "Great.  Now, there's one\nother thing, and it's",
    "start": "2526075",
    "end": "2532059"
  },
  {
    "text": "the main thing I wanted to tell\nyou about in forward chaining. About our old friend, rule\none, now that we've done this,",
    "start": "2532060",
    "end": "2539420"
  },
  {
    "text": "does rule one still match an\nassertion in the database? ",
    "start": "2539420",
    "end": "2546430"
  },
  {
    "text": "Yes. It does. But what's going to stop us\nfrom constantly doing rule one",
    "start": "2546430",
    "end": "2552186"
  },
  {
    "text": "every time because\nit comes numerically before the other rules? What stops us there is a\npart of our implementation.",
    "start": "2552186",
    "end": "2558260"
  },
  {
    "text": "And it's a very important part\nthat people sometimes forget. It's what I like to call\nthe no-impotent rules",
    "start": "2558260",
    "end": "2564240"
  },
  {
    "text": "implementation detail. That is, if a rule\nis completely, 100% impotent, it would\ndo absolutely nothing.",
    "start": "2564240",
    "end": "2571190"
  },
  {
    "text": "Then you do not fire it. You go to the next one. That's pretty important. Let's say that you possibly\nhad a delete, which",
    "start": "2571190",
    "end": "2577349"
  },
  {
    "text": "you won't have on the quiz. That means that if the\nthing to delete is missing,",
    "start": "2577350",
    "end": "2582630"
  },
  {
    "text": "it's impotent. If the thing to delete is\nthere, it's not impotent because you can delete. Let's say you have 500,000\nthings that you're going",
    "start": "2582630",
    "end": "2589990"
  },
  {
    "text": "to add to your assertions. 499,999 are already\nin your database.",
    "start": "2589990",
    "end": "2595670"
  },
  {
    "text": "One of them is missing. Is it an impotent rule? No, it's not. You have to fire it anyway. You can't be like, oh,\nit's mostly impotent rule.",
    "start": "2595670",
    "end": "2603060"
  },
  {
    "text": "No. You have fire off the rule\nif it will do anything. But right now rule one won't do\nanything because we've already",
    "start": "2603060",
    "end": "2609730"
  },
  {
    "text": "added Seamus is a protagonist. So what rules match down? Well, Seamus becoming a\nprotagonist is nice and all,",
    "start": "2609730",
    "end": "2617510"
  },
  {
    "text": "but he's not ambitious, so we\nstill don't match rule three. We still match rules\none, two, and five.",
    "start": "2617510",
    "end": "2623230"
  },
  {
    "text": "As I basically just got\nfinished telling you, the one that we're going\nto fire off now is two.",
    "start": "2623230",
    "end": "2628930"
  },
  {
    "text": "That's right. So, rule two is if x\nlives in Slytherin dungeon",
    "start": "2628930",
    "end": "2634240"
  },
  {
    "text": "our only [? binding ?]\nfor that is Millicent. And that will show that she's\na villain and she's ambitious.",
    "start": "2634240",
    "end": "2639950"
  },
  {
    "text": "So what assertions will we add? Millicent is a villain.",
    "start": "2639950",
    "end": "2645330"
  },
  {
    "text": "And people stopped. That's right. Good job, everyone. You remembered that\nMillicent is already",
    "start": "2645330",
    "end": "2650349"
  },
  {
    "text": "ambitious from assertion one, so\nwe don't have to add them both. A lot of people did.",
    "start": "2650350",
    "end": "2656340"
  },
  {
    "text": "They were wrong. So Millicent is a villain.",
    "start": "2656340",
    "end": "2661550"
  },
  {
    "text": "The other part of that\nrule doesn't do anything. But it's not an impotent rule\nbecause one of the things is not on there.",
    "start": "2661550",
    "end": "2667410"
  },
  {
    "text": "Great. So, what rules match now? Well, as it turns out,\nnow that Millicent",
    "start": "2667410",
    "end": "2674150"
  },
  {
    "text": "is a villain and ambitious,\nwe match rule three as well. So we match one,\ntwo, three, and five.",
    "start": "2674150",
    "end": "2681369"
  },
  {
    "text": "What rule are we going\nto fire, everyone? Three. Because one and two\nare impotent rules.",
    "start": "2681370",
    "end": "2687470"
  },
  {
    "text": "We'll fire rule three. Well, Millicent is a villain. She's also ambitious. She's our only match for three.",
    "start": "2687470",
    "end": "2693890"
  },
  {
    "text": "Therefore, what\nassertion do we add? Millicent studies a lot. That's right. ",
    "start": "2693890",
    "end": "2705030"
  },
  {
    "text": "So, Millicent studies a lot. However, she's\nnot a protagonist. We still don't match rule four.",
    "start": "2705030",
    "end": "2712180"
  },
  {
    "text": "Oh well, we figured that\nout already ourselves from backward chaining that we\nwere never going to match that.",
    "start": "2712180",
    "end": "2717400"
  },
  {
    "text": "So what matches? It's still one, two,\nthree, and five. Seeing as one, two and\nthree are impotent,",
    "start": "2717400",
    "end": "2722950"
  },
  {
    "text": "the only match is five. So the only match we\ncare about, the only one",
    "start": "2722950",
    "end": "2728570"
  },
  {
    "text": "we're going to fire is five. And the result? Let's see. x snogs y.",
    "start": "2728570",
    "end": "2734180"
  },
  {
    "text": "That's Seamus snogs Millicent. x lives in Gryffindor,\nthat's Seamus. y lives in Slytherin,\nthat's Millicent.",
    "start": "2734180",
    "end": "2741130"
  },
  {
    "text": "So what do we add? Seamus has a bad term. ",
    "start": "2741130",
    "end": "2756660"
  },
  {
    "text": "Simple, painless, it works out. We're done. And we got 100 on this quiz.",
    "start": "2756660",
    "end": "2763430"
  },
  {
    "text": "Hopefully you guys will, too. Question? The question is, if you have\na new assertion which matches",
    "start": "2763430",
    "end": "2769640"
  },
  {
    "text": "a rule but it's\nreally high number, it's all the way down at\nthe bottom of the rules, but it's new and\nit has new stuff,",
    "start": "2769640",
    "end": "2776349"
  },
  {
    "text": "should we do that first,\nmaybe, because it's new? Oh, you mean that it has a\nlower number, a lower number?",
    "start": "2776350",
    "end": "2783075"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] MARK SEIFTER: OK,\nso the question is, if a rule-- let's say\nthat rule three made Millicent",
    "start": "2783075",
    "end": "2789269"
  },
  {
    "text": "be a squib. Then yes, you'd\nimmediately not only match zero-- zero would immediately\nfire because numerically",
    "start": "2789270",
    "end": "2796715"
  },
  {
    "text": "it comes first. You'll see that on some\nof the old quizzes. And you may see\nthat in tutorial. If you guys want to do some more\npractice problems in tutorials,",
    "start": "2796715",
    "end": "2804270"
  },
  {
    "text": "your TAs will have\nthat available as one opportunity in tutorial. But yeah, that's exactly right. It happened that it\nwent in order this time,",
    "start": "2804270",
    "end": "2810930"
  },
  {
    "text": "but it will definitely\nhop anywhere it can in order to get to the\nlowest numbered assertion.",
    "start": "2810930",
    "end": "2817216"
  },
  {
    "start": "2817217",
    "end": "2817717"
  }
]