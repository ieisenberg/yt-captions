[
  {
    "text": "The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13350"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13350",
    "end": "25720"
  },
  {
    "text": "PROFESSOR: I wanted to\ntell you a little bit about the use of\ndigital communication schemes in the space program.",
    "start": "25720",
    "end": "32330"
  },
  {
    "text": "And part of that is it\nwasn't just the use. A lot of coding\ntheory was developed for use in this program.",
    "start": "32330",
    "end": "38870"
  },
  {
    "text": "So in the early days, there\nwas no error control coding.",
    "start": "38870",
    "end": "43960"
  },
  {
    "text": "So they had very slow\ntransmission rates and tried to compensate\nfor not having error control coding by taking\na long time to send a bit over.",
    "start": "43960",
    "end": "54430"
  },
  {
    "text": "But in later years, with the\nMariner and Viking probes,",
    "start": "54430",
    "end": "60190"
  },
  {
    "text": "they started to use\nerror control codes. And linear block codes are\nwhat we're talking about.",
    "start": "60190",
    "end": "66820"
  },
  {
    "text": "This would be the typical\nparameters for such a code. So we know how to read this. This is 32 bits per block.",
    "start": "66820",
    "end": "74920"
  },
  {
    "text": "Six data bits. And minimum timing\ndistance of 16. A particular kind of code\ncalled a bar orthogonal code",
    "start": "74920",
    "end": "81640"
  },
  {
    "text": "or Hadamard code, which had\nspecific characteristics and specific symmetries\nthat actually",
    "start": "81640",
    "end": "87760"
  },
  {
    "text": "helped with the decoding. So for instance, on\nMariner Nine, it's 1971.",
    "start": "87760",
    "end": "98149"
  },
  {
    "text": "This went into Mars' orbit. And the code was used to encode\nthe picture transmissions.",
    "start": "98150",
    "end": "105430"
  },
  {
    "text": "So each data word was\nsix bits to encode",
    "start": "105430",
    "end": "110920"
  },
  {
    "text": "64 gray levels and a picture. It turned out that, because\nof transmission issues,",
    "start": "110920",
    "end": "117310"
  },
  {
    "text": "the safe number of bits\nfor a block was 30 bits. And after that, you had to\ndo a little bit of realigning",
    "start": "117310",
    "end": "124090"
  },
  {
    "text": "or tweaking. So you could send 30\nbits at a time safely. And so, that was a\nchoice of n in that",
    "start": "124090",
    "end": "131200"
  },
  {
    "text": "vicinity was a natural choice. One thing you could\nhave thought to do would be take the six\nbits and repeat them",
    "start": "131200",
    "end": "138880"
  },
  {
    "text": "five times in the 30 bit window. And that would be\na repetition code. It turned out that, with this\nparticular Hadamard code,",
    "start": "138880",
    "end": "146740"
  },
  {
    "text": "you could actually get the same\ndata rates or comparable data rates.",
    "start": "146740",
    "end": "151849"
  },
  {
    "text": "Let's see. What would the data rate be? It would be k over n, right? 6 over 32.",
    "start": "151850",
    "end": "157629"
  },
  {
    "text": "But with much better error\ncorrection properties. So let's see. How many errors could you\ncorrect in this code per block?",
    "start": "157630",
    "end": "166610"
  },
  {
    "text": " Somebody?",
    "start": "166610",
    "end": "172440"
  },
  {
    "text": "Seven. Yeah. Because you've got a minimum\nHamming distance of 16.",
    "start": "172440",
    "end": "178800"
  },
  {
    "text": "So you want D minus 1\nover 2, the floor of that. So you could correct up\nto seven errors per block.",
    "start": "178800",
    "end": "185209"
  },
  {
    "text": "And this code was actually\nused on space probes right into the 80s.",
    "start": "185210",
    "end": "190623"
  },
  {
    "text": "And as I mentioned,\nthis particular code has various symmetries that\nallow actually something called the Fast Fourier Transform\nto be used in the decoding.",
    "start": "190623",
    "end": "197150"
  },
  {
    "text": "And so, that's really\nwhat drove this.",
    "start": "197150",
    "end": "203659"
  },
  {
    "text": "As you read about these probes,\nit's actually staggering how much they did\nwith so little.",
    "start": "203660",
    "end": "211230"
  },
  {
    "text": "Let's see. This thing went half a\nbillion miles almost. It had an onboard computer\nwith a memory of 512 words.",
    "start": "211230",
    "end": "220000"
  },
  {
    "text": "So you can imagine the\nkind of engineering that went into\norganizing all of this.",
    "start": "220000",
    "end": "225860"
  },
  {
    "text": "The transmitters-- and this is\ntypical of these space probes-- you don't have a lot\nof energy generated",
    "start": "225860",
    "end": "234860"
  },
  {
    "text": "from your solar\npanels necessarily. So 20 watt transmitters. So these have to transmit\nover this kind of distance",
    "start": "234860",
    "end": "243710"
  },
  {
    "text": "the data that you want to\nsend in the presence of noise and various other errors.",
    "start": "243710",
    "end": "249569"
  },
  {
    "text": "OK? So quite an engineering feat. Now the kinds of pictures\nthat you would get?",
    "start": "249570",
    "end": "255130"
  },
  {
    "text": "Well, these are pretty\namazing actually, considering what the\nprobes had to do.",
    "start": "255130",
    "end": "260630"
  },
  {
    "text": "So over the lifetime, it\nsent over 7,000 images. Mariner 9 is still orbiting\nMars, from what I understand.",
    "start": "260630",
    "end": "268113"
  },
  {
    "text": "It's not sending back. It stopped sending\nback transmissions one or two years after this.",
    "start": "268113",
    "end": "273200"
  },
  {
    "text": "But it's still in orbit until it\nslows down enough to crash in.",
    "start": "273200",
    "end": "280080"
  },
  {
    "text": "OK. So as I said, you're typically\ntalking about low power.",
    "start": "280080",
    "end": "287900"
  },
  {
    "text": "20 watts. WNBR, what's a\ntypical radio station",
    "start": "287900",
    "end": "294920"
  },
  {
    "text": "power on a college campus? They advertise\nsomething on the order of 700 watts for\ntheir transmitter.",
    "start": "294920",
    "end": "302030"
  },
  {
    "text": "So we're talking about doing\na lot with a little here.",
    "start": "302030",
    "end": "307780"
  },
  {
    "text": "A lot of the art\nis in the antenna. So you have an antenna that\ndirects this power very sharply",
    "start": "307780",
    "end": "314720"
  },
  {
    "text": "towards the intended receiver. But the more sharply\nyou try to direct that, the bigger of a control\nproblem you have.",
    "start": "314720",
    "end": "319908"
  },
  {
    "text": "Because you've got to point\nthat antenna all that more carefully. So all of these\nare coupled issues.",
    "start": "319908",
    "end": "325160"
  },
  {
    "text": "And then at the\nreceiver end, you've got very high quality amplifiers\nand signal processing.",
    "start": "325160",
    "end": "331830"
  },
  {
    "text": "But the data coding and\nerror correction schemes are a key part of that. And it turns out that,\nas you got more ambitious",
    "start": "331830",
    "end": "338965"
  },
  {
    "text": "with these\ntransmissions, you had to go to more complicated codes. And these are the\ncodes we're going to talk about today, what are\ncalled convolutional codes.",
    "start": "338965",
    "end": "346070"
  },
  {
    "text": "We'll talk about\nthe coding today. And then we'll talk about\nthe decoding with what's called the Viterbi\nalgorithm next lecture.",
    "start": "346070",
    "end": "354330"
  },
  {
    "text": "So this has been\nused extensively from late 1970s onwards.",
    "start": "354330",
    "end": "360080"
  },
  {
    "text": "More recently, you have\ncodes that are actually combinations of\nconvolutional codes, what",
    "start": "360080",
    "end": "366080"
  },
  {
    "text": "are called Turbo codes. And another family of codes,\nlow density parity chat codes,",
    "start": "366080",
    "end": "371629"
  },
  {
    "text": "which were developed in Bob\nGallagher's PhD thesis here. Bob Gallagher's on our faculty.",
    "start": "371630",
    "end": "377930"
  },
  {
    "text": " But convolutional codes\nwere really a workhorse",
    "start": "377930",
    "end": "384330"
  },
  {
    "text": "of the whole system. OK. So an example is\nnow Cassini, which",
    "start": "384330",
    "end": "391560"
  },
  {
    "text": "is in orbit around Saturn. It's actively sending pictures. This, if I read the\nwebsite correctly,",
    "start": "391560",
    "end": "397860"
  },
  {
    "text": "is a picture from August 29. And I saw other pictures\nposted from June and July.",
    "start": "397860",
    "end": "403360"
  },
  {
    "text": "So this is a picture of\none of Saturn's moons. And you can see the rings\nand the shadows of the rings and so on.",
    "start": "403360",
    "end": "409230"
  },
  {
    "text": "This is actually\nrecreated in natural color from multiple images. ",
    "start": "409230",
    "end": "417550"
  },
  {
    "text": "This, I guess, is part picture\nand part artist's rendition. But that shows you what\nCassini looks like.",
    "start": "417550",
    "end": "423562"
  },
  {
    "text": "There's only one\nof them out there. I don't think there's something\nelse to photograph Cassini.",
    "start": "423562",
    "end": "428830"
  },
  {
    "text": "So the kind of code that's\nused is a convolutional code.",
    "start": "428830",
    "end": "434650"
  },
  {
    "text": "We'll learn what\nthese parameters mean, how they enter into the\ndefinition of the code.",
    "start": "434650",
    "end": "440560"
  },
  {
    "text": "And here is a typical code rate. You're talking about\nsomething on the order of 83,000 bits per second\nas the code rate here.",
    "start": "440560",
    "end": "451600"
  },
  {
    "text": "Sorry, not the code rate. This is the data rate. OK? So the messages are coming.",
    "start": "451600",
    "end": "457194"
  },
  {
    "text": " Let's see. You're sending six times\nthis amount per second.",
    "start": "457195",
    "end": "464180"
  },
  {
    "text": "But this is the rate at\nwhich the data is coming in. OK? ",
    "start": "464180",
    "end": "469740"
  },
  {
    "text": "So convolutional codes. And again, I keep coming\nback to MIT names. Peter Elias was on\nour faculty here.",
    "start": "469740",
    "end": "477660"
  },
  {
    "text": "He was a department\nhead for a while. And in a short paper in\n1955, he invented the idea",
    "start": "477660",
    "end": "485220"
  },
  {
    "text": "of convolutional codes. So the idea here is not to\ndivide up your data into blocks",
    "start": "485220",
    "end": "492600"
  },
  {
    "text": "but to actually work\non the streaming data. And as the data goes past,\nyou generate parity bets",
    "start": "492600",
    "end": "499290"
  },
  {
    "text": "at a regular rate. And what you transmit\nin most typical schemes are just the parity bits. You don't send the message bits.",
    "start": "499290",
    "end": "505540"
  },
  {
    "text": "So this would be a\nnon-systematic code, if you like. So there's no part of that\nmessage that's directly",
    "start": "505540",
    "end": "510840"
  },
  {
    "text": "observing the message bits.  Now, you will actually generate\nand send multiple parity bids.",
    "start": "510840",
    "end": "524300"
  },
  {
    "text": "So you'll have a message\nsequence, x zero xn.",
    "start": "524300",
    "end": "531920"
  },
  {
    "text": "Sorry, x zero, x one. ",
    "start": "531920",
    "end": "544430"
  },
  {
    "text": "And from this, you\nderive parity bits. And you do that using the\nstandard sorts of equations",
    "start": "544430",
    "end": "552413"
  },
  {
    "text": "we've seen with block codes. Each parity bid\nhere, for instance, parity bit zero at a time n\nwill be some linear combination",
    "start": "552413",
    "end": "562070"
  },
  {
    "text": "of message bits. But it's the message bits\nas they're streaming by. So you might have, for\ninstance, this as your choice",
    "start": "562070",
    "end": "570680"
  },
  {
    "text": "for parity but number zero. ",
    "start": "570680",
    "end": "577839"
  },
  {
    "text": "OK. And then parity bit number one\ncould be some other combination",
    "start": "577840",
    "end": "584640"
  },
  {
    "text": "here. So for instance, xn plus\nx n minus 2, for instance.",
    "start": "584640",
    "end": "594490"
  },
  {
    "text": "OK. So it's a linear combination\nof some set of messages, just the way we've been generating\nparity bits all along.",
    "start": "594490",
    "end": "601410"
  },
  {
    "text": "The plus here, of\ncourse, is we're talking about binary messages.",
    "start": "601410",
    "end": "606670"
  },
  {
    "text": "So this is addition in GF2. So it's exclusive or\nModulo 2 addition.",
    "start": "606670",
    "end": "616710"
  },
  {
    "text": "And you can imagine a whole\nbunch of such parity bits. So in general, you would have\nR such parity bits computed off",
    "start": "616710",
    "end": "624990"
  },
  {
    "text": "some set of message bits\nand transmitted instead of the message bits.",
    "start": "624990",
    "end": "630010"
  },
  {
    "text": "So you might have, for each\nmessage been coming in, you might actually be\nsending out R parity bits.",
    "start": "630010",
    "end": "637529"
  },
  {
    "text": "So what you do is just\nsend these out in sequence. You'd send out the P zero\nvalue, the P1 value, time n.",
    "start": "637530",
    "end": "643830"
  },
  {
    "text": "Then recompute a time n\nplus 1 and keep going. All right? Well, actually I have them here.",
    "start": "643830",
    "end": "649370"
  },
  {
    "text": "I didn't see that. So all this happens\non a sliding window. This happens for a\nparticular choice of n.",
    "start": "649370",
    "end": "656147"
  },
  {
    "text": "And then it happens for\nthe next choice of n and the next choice of n. So you're doing this on the\nfly with a streaming sequence.",
    "start": "656147",
    "end": "662575"
  },
  {
    "start": "662575",
    "end": "668350"
  },
  {
    "text": "So let me just\nput up an equation that explains why this is\ncalled a convolutional code.",
    "start": "668350",
    "end": "677620"
  },
  {
    "text": "It turns out the expressions\nof this type where you take a data stream coming\nin and generate new data",
    "start": "677620",
    "end": "687550"
  },
  {
    "text": "streams of this\nform, it turns out that the operation that's\nbeing carried out here is something referred\nto as convolution.",
    "start": "687550",
    "end": "693910"
  },
  {
    "text": "So in general, what\nhas P zero then? It's some weighted combination\nof x at the current time,",
    "start": "693910",
    "end": "702970"
  },
  {
    "text": "x1 times step back,\nx2 time steps back. In general, k different\nvalues involved.",
    "start": "702970",
    "end": "710750"
  },
  {
    "text": "So what I have is a P zero\nn being a summation from,",
    "start": "710750",
    "end": "719210"
  },
  {
    "text": "let's say, J equals zero. ",
    "start": "719210",
    "end": "727860"
  },
  {
    "text": "So G zero J x of n\nminus J. All right?",
    "start": "727860",
    "end": "735459"
  },
  {
    "text": "So this is just\nsome set of numbers. Zero, one. Just as these bits are,\nthese are zero, one.",
    "start": "735460",
    "end": "743190"
  },
  {
    "text": "But this is the general form. ",
    "start": "743190",
    "end": "750790"
  },
  {
    "text": "This particular\nkind of combination is referred to as a convolution\noperation on the input stream.",
    "start": "750790",
    "end": "756910"
  },
  {
    "text": "And we'll see much\nmore of this when we come later to\nmodeling channels,",
    "start": "756910",
    "end": "762560"
  },
  {
    "text": "the physical channels. We'll talk about\nconvolution type models. So here, it's not so\nimportant that you",
    "start": "762560",
    "end": "768459"
  },
  {
    "text": "must have this expression. We'll have plenty of\nopportunity to work with expressions like this. This is just for you to\nknow that an expression",
    "start": "768460",
    "end": "775240"
  },
  {
    "text": "of this type, wherever you\nsee a summation with indices that are in this form, this is\nreferred to as a convolution.",
    "start": "775240",
    "end": "782390"
  },
  {
    "text": "OK? ",
    "start": "782390",
    "end": "788240"
  },
  {
    "text": "So it's convolution\nof the message stream with some set of weights.",
    "start": "788240",
    "end": "797527"
  },
  {
    "text": "AUDIENCE: Professor? PROFESSOR: Yeah? AUDIENCE: What does G stand for? PROFESSOR: The G is just\na set of weights here.",
    "start": "797527",
    "end": "802560"
  },
  {
    "text": "So in this particular case,\nfor parity expression zero,",
    "start": "802560",
    "end": "807800"
  },
  {
    "text": "G zero of zero would be 1. G zero of 1 would be 1. G zero of 2 would be 1.",
    "start": "807800",
    "end": "814128"
  },
  {
    "text": "AUDIENCE: OK. PROFESSOR: It's just\na set of weights. ",
    "start": "814128",
    "end": "820600"
  },
  {
    "text": "So yeah. This expression is a bit of\noverkill for the kind of use we're making of it.",
    "start": "820600",
    "end": "825959"
  },
  {
    "text": "But it's just to explain\nthe origin of the name. It turns out later, when we\nuse it for channel modeling,",
    "start": "825960",
    "end": "832980"
  },
  {
    "text": "the x's will not just\nbe zeros or ones. They could take\narbitrary real values. And the Gs could take\narbitrary real values.",
    "start": "832980",
    "end": "839170"
  },
  {
    "text": "So we'll be working with\nmuch more elaborate versions of this. OK? ",
    "start": "839170",
    "end": "849440"
  },
  {
    "text": "The number k is referred to\nas the constraint length. And it's the maximum number\nof message bits involved",
    "start": "849440",
    "end": "857540"
  },
  {
    "text": "when you look over all\nyour parity expressions. So in this particular instance,\nk would be equal to 3.",
    "start": "857540",
    "end": "863339"
  },
  {
    "text": "Right? It's the maximum window\nof data that you're",
    "start": "863340",
    "end": "868430"
  },
  {
    "text": "using in a non-trivial\nway to generate the bits. So here, you are using\nup to 3 to generate this.",
    "start": "868430",
    "end": "875168"
  },
  {
    "text": "Well, in this case\nalso, you're using a window of three message bits. It happens that you're\nignoring the one in the center.",
    "start": "875168",
    "end": "880790"
  },
  {
    "text": "But the constraint length\nis the length of message that you're actually looking at.",
    "start": "880790",
    "end": "887360"
  },
  {
    "text": "OK.  So in some sense, if you\nwant to think of it this way,",
    "start": "887360",
    "end": "894200"
  },
  {
    "text": "the number of parity\nexpressions that you use? Well, that's straightforward. That's just telling\nyou how much redundancy",
    "start": "894200",
    "end": "900820"
  },
  {
    "text": "you're willing to put in. Whereas the constraint\nlength is telling you",
    "start": "900820",
    "end": "905860"
  },
  {
    "text": "how deeply you're folding that\nredundancy into the message. So the bigger the\nconstraint length, the more message\nbits are involved",
    "start": "905860",
    "end": "912460"
  },
  {
    "text": "in generating a parity bit. And so, the more you're\nscrambling up the message and spreading it over a large\nsection of what's transmitted.",
    "start": "912460",
    "end": "921435"
  },
  {
    "text": "And so, you might\nexpect that you get a better error correction\nproperties with larger",
    "start": "921435",
    "end": "926470"
  },
  {
    "text": "constraint links. OK? ",
    "start": "926470",
    "end": "937810"
  },
  {
    "text": "OK. ",
    "start": "937810",
    "end": "943100"
  },
  {
    "text": "This is not saying anything new. ",
    "start": "943100",
    "end": "952890"
  },
  {
    "text": "So how do we come to\nactually transmitting? Well, we generate\nthe parity bits. And then, as I said, you\nsend all the parity bits",
    "start": "952890",
    "end": "959490"
  },
  {
    "text": "associated with your\ncomputation at time zero. Then all the parity bits\nassociated with the computation at time 1, time 2, and so on.",
    "start": "959490",
    "end": "969210"
  },
  {
    "text": "So in the case of the code\nused on the Cassini probe, that's 1 over 6 rate code.",
    "start": "969210",
    "end": "976070"
  },
  {
    "text": "It's actually computing\nsix parity expressions. So it's transmitting\nsix parity bits",
    "start": "976070",
    "end": "981830"
  },
  {
    "text": "for each message\nbit that comes in. What happens then at\nthe next time instant is that you shift\neverything up by one.",
    "start": "981830",
    "end": "988940"
  },
  {
    "text": "And we do the whole thing. ",
    "start": "988940",
    "end": "994530"
  },
  {
    "text": "OK?  Now, you can actually-- and I'll\nhave this up on the slides--",
    "start": "994530",
    "end": "1003080"
  },
  {
    "text": "you can actually crank\nthrough the equations. But it's not the\nmost illuminating way to think of things.",
    "start": "1003080",
    "end": "1009750"
  },
  {
    "text": "It's much easier to think of\nit visually through a block diagram of this type and\nusing the idea of what's",
    "start": "1009750",
    "end": "1016870"
  },
  {
    "text": "called a shift register. So what is a shift register? You may have encountered\nit in other places.",
    "start": "1016870",
    "end": "1022930"
  },
  {
    "start": "1022930",
    "end": "1033050"
  },
  {
    "text": "So we think of a shift register\nas, it's basically a box that",
    "start": "1033050",
    "end": "1039310"
  },
  {
    "text": "can remember something. OK? That's the register part of it. A register is something\nthat remembers a number.",
    "start": "1039310",
    "end": "1045890"
  },
  {
    "text": "You've got some input\nstream that comes in and some output stream emerging.",
    "start": "1045890",
    "end": "1051760"
  },
  {
    "text": "At any time, this stores\na particular number which is available to the output. So whatever is stored\nin the register",
    "start": "1051760",
    "end": "1058000"
  },
  {
    "text": "is available to the output. The shift part of\nthis description is that whatever is\nof the input will",
    "start": "1058000",
    "end": "1063490"
  },
  {
    "text": "get shifted into at the next\nclock cycle or the next time instance. OK? So the input gets shifted\nin at the next clock cycle.",
    "start": "1063490",
    "end": "1070360"
  },
  {
    "text": "Whatever is in here is\nremembered for that one clock cycle and is available\nat the output.",
    "start": "1070360",
    "end": "1076480"
  },
  {
    "text": "Right? So if I have a sequence x n\nbeing fed in four n zero, one,",
    "start": "1076480",
    "end": "1083590"
  },
  {
    "text": "two, three, and so on,\nif I'm seeing x n here,",
    "start": "1083590",
    "end": "1089049"
  },
  {
    "text": "what must have gone\ninto the previous time? If I see x n here at time n, if\nI'm seeing a particular input",
    "start": "1089050",
    "end": "1096280"
  },
  {
    "text": "at time n, what must have\ngone in the previous time as x n minus 1? So what's sitting\nhere is x minus 1.",
    "start": "1096280",
    "end": "1104950"
  },
  {
    "text": "Right? And x n minus 1 is available\nto me at the output. The next clock cycle, the\nnext input comes along.",
    "start": "1104950",
    "end": "1112700"
  },
  {
    "text": "The xn goes in here. And the whole thing shifts. All right?",
    "start": "1112700",
    "end": "1117710"
  },
  {
    "text": "Now what you have up there is\na cascade of shift registers. You've got some shift registers.",
    "start": "1117710",
    "end": "1124129"
  },
  {
    "text": "So keep in mind, the\noperation that I described-- if this is xn, if I'm looking\nat this time at time n,",
    "start": "1124130",
    "end": "1130280"
  },
  {
    "text": "xn sitting here-- what must be in\nthis shift register is the input of\nthe previous time. So that's x n minus 1.",
    "start": "1130280",
    "end": "1138650"
  },
  {
    "text": "These are shown adjacent. What we really mean is\nthat one shift register is feeding into the next one.",
    "start": "1138650",
    "end": "1143808"
  },
  {
    "text": "They're just shown as adjacent. But what must be sitting\nhere then is x n minus 2.",
    "start": "1143808",
    "end": "1150049"
  },
  {
    "text": "And if I read off something\nfrom here, what I'm looking at",
    "start": "1150050",
    "end": "1155180"
  },
  {
    "text": "is x n minus 1. Namely, what's sitting\nin the register. What I'm looking at\nhere is x n minus 2.",
    "start": "1155180",
    "end": "1161374"
  },
  {
    "text": " All right.",
    "start": "1161374",
    "end": "1166899"
  },
  {
    "text": "So do you see how\nthis is working now? This is actually\nthe same example",
    "start": "1166900",
    "end": "1172010"
  },
  {
    "text": "that I had written\nup earlier, I guess, for the computational\nparity bit. So here's-- except it's--",
    "start": "1172010",
    "end": "1177720"
  },
  {
    "text": "yeah. It's the same one. P zero n. Maybe I have the equations. Let's see if I can\ndisplay them for you.",
    "start": "1177720",
    "end": "1184267"
  },
  {
    "text": " No, I can't. OK. So what's P zero n?",
    "start": "1184267",
    "end": "1190600"
  },
  {
    "text": "P zero n is xn, that's\nconnecting from here, plus x n minus 1\nplus x n minus 2.",
    "start": "1190600",
    "end": "1198340"
  },
  {
    "text": "Again, by the way,\nin this diagram, what I showed as an arrow coming\nfrom the output of the shift",
    "start": "1198340",
    "end": "1203680"
  },
  {
    "text": "register is just\na shorthand here that shows the arrow coming out\nfrom the body of the register. It's the same thing\nwe're talking about.",
    "start": "1203680",
    "end": "1210297"
  },
  {
    "text": "OK? So P zero of n is the sum\nof these three message bits.",
    "start": "1210297",
    "end": "1217240"
  },
  {
    "text": "So we're talking one\nconstraint length three here. And what about P1 n? It's xn plus x n minus 2\nwith nothing of xn minus 1.",
    "start": "1217240",
    "end": "1226720"
  },
  {
    "text": "All right? So imagine this being\nthe picture for every n. So you start off at time\nzero and keep going.",
    "start": "1226720",
    "end": "1233440"
  },
  {
    "text": "Right? We refer to the\nstate of the shift registers as the pair of\nnumbers that we find in here.",
    "start": "1233440",
    "end": "1241360"
  },
  {
    "text": "So if we're talking about x's\nthat can be zeros or ones, the shift register\ncombination here",
    "start": "1241360",
    "end": "1247260"
  },
  {
    "text": "can be in one of four states. Right? Zero, zero. Zero, 1. 1, zero.",
    "start": "1247260",
    "end": "1252360"
  },
  {
    "text": "Or 1, 1. So four states. So here's a four state\nshift register into which",
    "start": "1252360",
    "end": "1258000"
  },
  {
    "text": "we're feeding in the stream. And what gets put\nout on the channel are these parity\nbits interleaved.",
    "start": "1258000",
    "end": "1266130"
  },
  {
    "text": "That clear enough? OK. ",
    "start": "1266130",
    "end": "1282090"
  },
  {
    "text": "Nothing I haven't said here. Right? ",
    "start": "1282090",
    "end": "1287630"
  },
  {
    "text": "So let's actually work through\nan example step by step. This is clear enough.",
    "start": "1287630",
    "end": "1292700"
  },
  {
    "text": "But let's just\nsee it concretely. Let's assume that I'm\nstarting out with the shift",
    "start": "1292700",
    "end": "1299990"
  },
  {
    "text": "registers in the zero state. And now, I've got this\nmessage sequence coming in that I want to send out.",
    "start": "1299990",
    "end": "1305670"
  },
  {
    "text": "OK? So the sequence\nis 1, zero, 1, 1. So the first bit that\nappears here is the 1.",
    "start": "1305670",
    "end": "1313010"
  },
  {
    "text": "And I've got to\ngenerate P zero and P1. Well, P zero is the exclusive\nOR of these three things.",
    "start": "1313010",
    "end": "1318270"
  },
  {
    "text": "So it's 1. P1 is the exclusive OR of\nthe first and the last. So it's again 1.",
    "start": "1318270",
    "end": "1323330"
  },
  {
    "text": "So that defines P\nzero and P1 at time n. The same way at the next time\ninstant, the next message input",
    "start": "1323330",
    "end": "1332660"
  },
  {
    "text": "bit comes in. So we had 1, zero, 1, 1. We took care of the 1 here. Now comes a zero.",
    "start": "1332660",
    "end": "1339350"
  },
  {
    "text": "We do the same thing. So the exclusive OR of all\nthree of them appears here. That's the 1.",
    "start": "1339350",
    "end": "1345380"
  },
  {
    "text": "The exclusive OR of the first\nand the last appears there. And that's the zero. So you can see how things\nare getting folded together",
    "start": "1345380",
    "end": "1353059"
  },
  {
    "text": "because the input that was here\nbefore is now sitting in here and plays a role in\ngeneration of the parity",
    "start": "1353060",
    "end": "1359420"
  },
  {
    "text": "bit for the next step. In fact, the word convolve\nmeans to fold together. And this is what it's\nactually trying to capture.",
    "start": "1359420",
    "end": "1366150"
  },
  {
    "text": "You're folding\ntogether these two sets of weights, the weights on the\ntop tier and the input sequence",
    "start": "1366150",
    "end": "1373280"
  },
  {
    "text": "weight. And then the next\ntwo cases, similarly.",
    "start": "1373280",
    "end": "1380710"
  },
  {
    "text": "OK. And that's what gets\nsent out at the bottom.",
    "start": "1380710",
    "end": "1386320"
  },
  {
    "text": "So this is the\ntransmitted sequence. So it's the 11100001.",
    "start": "1386320",
    "end": "1394530"
  },
  {
    "text": "Right? That's all there is to it. The implementation of the\nshift register is very easy.",
    "start": "1394530",
    "end": "1401320"
  },
  {
    "text": "And so, this is actually a\nvery straightforward thing to implement.",
    "start": "1401320",
    "end": "1407410"
  },
  {
    "text": "Now there's another viewpoint\nthat's also very useful here.",
    "start": "1407410",
    "end": "1413810"
  },
  {
    "text": "Another way to look\nat what's going on, which is thinking in terms\nof the state of the register",
    "start": "1413810",
    "end": "1420220"
  },
  {
    "text": "and how you move\nbetween the states. I guess, how many here are 004?",
    "start": "1420220",
    "end": "1426356"
  },
  {
    "text": "Are those are the ones\nwith smiles on their faces? OK. You see a lot of this\nthere, I imagine.",
    "start": "1426357",
    "end": "1433130"
  },
  {
    "text": "OK. So how do I read a\ndiagram like this? I've got a circle for each\nstate that the shift register",
    "start": "1433130",
    "end": "1440740"
  },
  {
    "text": "can be in. So the shift register\ncan be in zero, zero. Zero, 1. 1, zero.",
    "start": "1440740",
    "end": "1447640"
  },
  {
    "text": "1, 1. Right? Each of these arcs\nrepresents a transition",
    "start": "1447640",
    "end": "1453910"
  },
  {
    "text": "from one state to another. So let me ask you this. What does it take-- ",
    "start": "1453910",
    "end": "1460700"
  },
  {
    "text": "if I'm in the zero,\nzero state with my shift register-- so what\nyou've got in the picture",
    "start": "1460700",
    "end": "1466550"
  },
  {
    "text": "is your shift register\nsitting there with zero, zero. What does it take for me to\nget to the 1, zero state?",
    "start": "1466550",
    "end": "1478104"
  },
  {
    "start": "1478104",
    "end": "1484400"
  },
  {
    "text": "What must my input have been\nto get to the 1, zero state? ",
    "start": "1484400",
    "end": "1490410"
  },
  {
    "text": "Imagine how these shift\nregisters operate. Right? If I'm going to get from\nzero, zero to 1, zero,",
    "start": "1490410",
    "end": "1495690"
  },
  {
    "text": "I must have fed in a 1 at\nthe previous time instance. So it takes an input of 1 to go\nfrom zero, zero to the 1, zero.",
    "start": "1495690",
    "end": "1503970"
  },
  {
    "text": "So to go from zero, zero to\n1, zero, use an input of 1. That's the number that we\nwrite before the slash.",
    "start": "1503970",
    "end": "1510990"
  },
  {
    "text": "That's our labeling\nconvention for the arcs. We put the input that it\ntakes to make that transition.",
    "start": "1510990",
    "end": "1517510"
  },
  {
    "text": "And then after the slash,\nwe put the parity bits that are omitted. So what we've got\nfor the 1, 1 is",
    "start": "1517510",
    "end": "1524010"
  },
  {
    "text": "the parity bits that are omitted\nwhen you've got input 1 sitting",
    "start": "1524010",
    "end": "1529320"
  },
  {
    "text": "here, zero, zero here, and\nyou're using the parity computation that I had before.",
    "start": "1529320",
    "end": "1535500"
  },
  {
    "text": "Let's see here. So P zero is going to\nbe x n plus x n minus 1",
    "start": "1535500",
    "end": "1542310"
  },
  {
    "text": "plus x n minus 2. So that gives you 1. And what about P1? P1 is x n plus xn minus 2.",
    "start": "1542310",
    "end": "1549540"
  },
  {
    "text": "So that gives you another one. OK? So if you're in state zero--",
    "start": "1549540",
    "end": "1554672"
  },
  {
    "text": "the zero, zero state-- and you get an\ninput of 1, you're going to transition to 1, zero.",
    "start": "1554672",
    "end": "1560940"
  },
  {
    "text": "And you're going to omit 1, 1. OK. So the state diagram\ncaptures all that.",
    "start": "1560940",
    "end": "1566610"
  },
  {
    "text": "And similarly, all\nthe way around. So I haven't checked\neach of these. But I hope there are\nno mistakes in it.",
    "start": "1566610",
    "end": "1572350"
  },
  {
    "text": "But if you're in 1, zero? Oh well. By the way, if\nyou're in zero, zero, there's no way to\nget to zero, 1.",
    "start": "1572350",
    "end": "1578190"
  },
  {
    "text": "Right? So you don't see any arc\nfrom zero, zero to zero, 1. If you're in 1, zero,\nyou can get to 1, 1.",
    "start": "1578190",
    "end": "1584880"
  },
  {
    "text": "Or you can get to zero, 1\ndepending on what you feed in. OK?",
    "start": "1584880",
    "end": "1590679"
  },
  {
    "text": "So it's very\nstraightforward, then, to actually build\nout this diagram. Why don't we do a\nlittle bit more on here?",
    "start": "1590680",
    "end": "1599790"
  },
  {
    "start": "1599790",
    "end": "1607310"
  },
  {
    "text": "OK. So if I'm actually abstracting\nfrom the shift register picture",
    "start": "1607310",
    "end": "1615840"
  },
  {
    "text": "to something that's more\nlike the state picture, I'm going to say, here\nare my four states. I've just drawn it a\nlittle differently than I",
    "start": "1615840",
    "end": "1622917"
  },
  {
    "text": "have in the upper picture. Instead of circles with\nthese states in them, I prefer to think\nof them this way.",
    "start": "1622917",
    "end": "1628470"
  },
  {
    "text": "So what we said is, if you get\nan input of 1, you limit 1, 1.",
    "start": "1628470",
    "end": "1635100"
  },
  {
    "text": "And you'll get to that state. What does it take\nto get to the state?",
    "start": "1635100",
    "end": "1640770"
  },
  {
    "text": " Somebody? ",
    "start": "1640770",
    "end": "1647679"
  },
  {
    "text": "Can I have a hand\nand a loud voice? Yeah? AUDIENCE: Input zero. PROFESSOR: OK.",
    "start": "1647680",
    "end": "1653409"
  },
  {
    "text": "And then I guess you've got\nto go back to this to think about what's happening.",
    "start": "1653410",
    "end": "1658970"
  },
  {
    "text": "So I'll allow you to think of a\nzero sitting at the input here. So what would the\nparity bits be?",
    "start": "1658970",
    "end": "1665200"
  },
  {
    "start": "1665200",
    "end": "1670789"
  },
  {
    "text": "So the first parity bit\nwill be the exclusive OR of the zero, 1, and zero.",
    "start": "1670790",
    "end": "1677200"
  },
  {
    "text": "So it's going to give you a 1. Right? And then the next\nparity bit is going to be exclusive OR of\nwhat's here and there.",
    "start": "1677200",
    "end": "1685360"
  },
  {
    "text": "So that's going to be a zero. I hope that matches with\nwhat I have upstairs. We're talking about going\nfrom 1, zero to zero, 1.",
    "start": "1685360",
    "end": "1693399"
  },
  {
    "text": "It takes a zero\ninput to do that. And what you omit is 1, zero. Right? ",
    "start": "1693400",
    "end": "1700559"
  },
  {
    "text": "So you can fill in all of these. This is the state\ntransition diagram.",
    "start": "1700560",
    "end": "1706530"
  },
  {
    "text": "OK.  Let's see.",
    "start": "1706530",
    "end": "1712260"
  },
  {
    "text": "We say that, if you've got\na constraint length of three then, of k equals\nthree, for instance,",
    "start": "1712260",
    "end": "1718080"
  },
  {
    "text": "or let's say if you've got\na constraint length of k, you've got 2 to the\nk minus 1 states.",
    "start": "1718080",
    "end": "1724510"
  },
  {
    "text": "well, that's because, in\nthat constraint length, one of the bits involved\nis the input bit.",
    "start": "1724510",
    "end": "1731430"
  },
  {
    "text": "That's not sitting in\nthe shift registers. So you've got k minus\n1 bits left over. So your shift register\nis k minus 1 stages long.",
    "start": "1731430",
    "end": "1739230"
  },
  {
    "text": "And so, you've got 2 to\nthe k minus 1 states. All right.",
    "start": "1739230",
    "end": "1744360"
  },
  {
    "text": "So you could imagine\ngeneralizing this to more complicated\nsorts of situations. ",
    "start": "1744360",
    "end": "1753740"
  },
  {
    "text": "Let's see. Just going back to\nthe Cassini example, if you let me jump back a\nbit, there was a k there.",
    "start": "1753740",
    "end": "1763070"
  },
  {
    "text": "What was it? ",
    "start": "1763070",
    "end": "1769034"
  },
  {
    "text": "k of 15. OK. So for Cassini, you're using\none input bit and 14 more",
    "start": "1769035",
    "end": "1777080"
  },
  {
    "text": "bits in your register. OK? So you've got 2 to the\n14 possible states there.",
    "start": "1777080",
    "end": "1784573"
  },
  {
    "text": "So in these codes,\nyou're actually using very large\nconstraint lengths. ",
    "start": "1784573",
    "end": "1797915"
  },
  {
    "text": "OK.  All right. I want to go from the state\nmachine view to another view",
    "start": "1797915",
    "end": "1806653"
  },
  {
    "text": "now, which is what's called--\nso this is the state machine view-- ",
    "start": "1806653",
    "end": "1816648"
  },
  {
    "text": "to something called\nthe trellis view. ",
    "start": "1816648",
    "end": "1825268"
  },
  {
    "text": "This is something--\nby the way, there was a way of looking\nat things that was developed by someone else\nwho was on our faculty, David",
    "start": "1825268",
    "end": "1834530"
  },
  {
    "text": "Forni.  In fact, if you visit his\nhome, you'll see his garden. There's a nice\ntrellis around it.",
    "start": "1834530",
    "end": "1841360"
  },
  {
    "text": "And you'll see why\nwhen we draw this.  OK.",
    "start": "1841360",
    "end": "1846370"
  },
  {
    "text": "So what's the trellis view? The trellis view says\ntake the state machine but unfold it in time so that\nall your transitions over time",
    "start": "1846370",
    "end": "1853990"
  },
  {
    "text": "are not happening here. At every time step, you\ndraw the picture again and look to see\nwhere you get to. So let's do this.",
    "start": "1853990",
    "end": "1859850"
  },
  {
    "text": "This is the one I want\nto be most careful with and where I'll introduce a\nfew notational conventions so",
    "start": "1859850",
    "end": "1870960"
  },
  {
    "text": "that our later\nlife is simplified. ",
    "start": "1870960",
    "end": "1878970"
  },
  {
    "text": "OK. So we've got state zero, zero. State zero, 1.",
    "start": "1878970",
    "end": "1884570"
  },
  {
    "text": "State 1, zero. And state 1, 1.",
    "start": "1884570",
    "end": "1890500"
  },
  {
    "text": "OK. Except, though, this is\ngoing to be the picture that I have at time-- let's say-- at\ntime n equals zero.",
    "start": "1890500",
    "end": "1895870"
  },
  {
    "text": " At time n equals 1, well, I've\ngot the same shift registers.",
    "start": "1895870",
    "end": "1905388"
  },
  {
    "text": "I'm going to draw\nthis picture again. ",
    "start": "1905388",
    "end": "1917640"
  },
  {
    "text": "The easiest way to learn\nthis is to just follow through one example. So please keep your\nattention here.",
    "start": "1917640",
    "end": "1923930"
  },
  {
    "text": "And you'll have it sorted out. And then you won't have\nto worry about it again. It's the same thing as with LZW.",
    "start": "1923930",
    "end": "1930110"
  },
  {
    "text": "All right. So it looks kind of detailed. Maybe tedious. But it's actually very simple.",
    "start": "1930110",
    "end": "1936600"
  },
  {
    "text": "Just hang in there and\nfollow through one example. OK. So what does this say?",
    "start": "1936600",
    "end": "1942679"
  },
  {
    "text": "At time n equals zero,\nI'm in zero, zero. Suppose I get the input zero.",
    "start": "1942680",
    "end": "1949280"
  },
  {
    "text": "Suppose the input is zero. What state do I transition to?  Here.",
    "start": "1949280",
    "end": "1954720"
  },
  {
    "text": "Right?  So if I have an input zero,\nI'm going to transition here.",
    "start": "1954720",
    "end": "1960370"
  },
  {
    "text": "So this is with\nan input of zero. And what are my parity\nbits going to be? ",
    "start": "1960370",
    "end": "1968789"
  },
  {
    "text": "Both zeros. Right? ",
    "start": "1968790",
    "end": "1974490"
  },
  {
    "text": "What about if I get\nan input of one? Where do I transition to? Well, we've already\nseen that here.",
    "start": "1974490",
    "end": "1979920"
  },
  {
    "text": "If I get an input of 1, I'm\ngoing to transition to here. ",
    "start": "1979920",
    "end": "1987760"
  },
  {
    "text": "And what am I going to omit? Well, we've already\ncalculated that. We're going to omit a 1, 1.",
    "start": "1987760",
    "end": "1993100"
  },
  {
    "text": " Right? ",
    "start": "1993100",
    "end": "2000240"
  },
  {
    "text": "Let's do it for one more case. We're in zero, 1. What states can I transition to?",
    "start": "2000240",
    "end": "2005520"
  },
  {
    "text": " I could go to zero, zero. ",
    "start": "2005520",
    "end": "2014000"
  },
  {
    "text": "And I would do that\nif my input was zero. Right? ",
    "start": "2014000",
    "end": "2019380"
  },
  {
    "text": "And what would my\nparity bits be? Well, that's another\ncase for us to look at.",
    "start": "2019380",
    "end": "2026070"
  },
  {
    "text": "If our input is zero and\nwe're in state zero, 1, what would the parity bits be? ",
    "start": "2026070",
    "end": "2033940"
  },
  {
    "text": "For this choice of parity bits,\ndepends on what specific choice you made, of course.",
    "start": "2033940",
    "end": "2040009"
  },
  {
    "text": "1, 1?  Do you agree? ",
    "start": "2040010",
    "end": "2047210"
  },
  {
    "text": "And if I get an input of\n1 instead, where do I go? If I get an input\nof 1, I'm going",
    "start": "2047210",
    "end": "2052899"
  },
  {
    "text": "to go to 1, zero, which is here. ",
    "start": "2052900",
    "end": "2059899"
  },
  {
    "text": "OK? So if I had an input of\n1, I would go to 1, zero. My parity bits would be--",
    "start": "2059900",
    "end": "2066278"
  },
  {
    "text": "what would they be?  Can I have a hand and a voice?",
    "start": "2066278",
    "end": "2073610"
  },
  {
    "text": "Yeah. Zero, zero. Right. ",
    "start": "2073610",
    "end": "2081379"
  },
  {
    "text": "OK. So it's that simple. That's all you have to do. Fill out this picture\nand you're seeing what this picture translates\nto at the next time instant.",
    "start": "2081380",
    "end": "2088658"
  },
  {
    "text": "We're not using\nanything more than is in the state transition-- sorry-- in the state\nmachine diagram.",
    "start": "2088659",
    "end": "2095750"
  },
  {
    "text": "But we're unfolding\nthings in time, which is actually very helpful. ",
    "start": "2095750",
    "end": "2101570"
  },
  {
    "text": "Now, this is a simplification\nwe'll make in drawing this. Because I've arranged the\nstates in natural binary",
    "start": "2101570",
    "end": "2108970"
  },
  {
    "text": "counting order-- zero zero, zero\n1, 1 zero, and 1, 1-- it's always the case\nthat the upper arrow that",
    "start": "2108970",
    "end": "2115840"
  },
  {
    "text": "emanates from a\nstate corresponds to the input of zero. And the lower corresponds\nto an input of one.",
    "start": "2115840",
    "end": "2123339"
  },
  {
    "text": "OK? So I don't really need that\nfirst thing before the dash. I'm just going to\ndispense with it.",
    "start": "2123340",
    "end": "2129290"
  },
  {
    "text": "So if you're going up, of\nthe two choices that you have when you come out of a box,\nif you're going up, it's zero.",
    "start": "2129290",
    "end": "2137470"
  },
  {
    "text": "The input is zero. And if you're going\ndown, the input is 1. So I'm just going to\nlabel that as zero, zero.",
    "start": "2137470",
    "end": "2143720"
  },
  {
    "text": "OK? I'm going to label this as 1, 1. ",
    "start": "2143720",
    "end": "2150010"
  },
  {
    "text": "And I guess I've forgotten\nalready what some of these are. ",
    "start": "2150010",
    "end": "2160849"
  },
  {
    "text": "But you can see what the whole\npicture starts to look like. OK?",
    "start": "2160850",
    "end": "2166070"
  },
  {
    "text": " So let me actually, I'm not\ngoing to do these in detail.",
    "start": "2166070",
    "end": "2174599"
  },
  {
    "text": "But let's just see how the next\nstage would differ, if at all.",
    "start": "2174600",
    "end": "2182520"
  },
  {
    "text": " When I come to n\nequals 2, well, it's",
    "start": "2182520",
    "end": "2190990"
  },
  {
    "text": "the same story all over again. ",
    "start": "2190990",
    "end": "2196150"
  },
  {
    "text": "So whatever pattern of arrows\nI had coming out of here, I have the same pattern\nat the next stage",
    "start": "2196150",
    "end": "2202510"
  },
  {
    "text": "with the same labels. Right? Because there's\nnothing different. ",
    "start": "2202510",
    "end": "2208540"
  },
  {
    "text": "So if you'll allow\nme, let me actually fill out a few of these. ",
    "start": "2208540",
    "end": "2240530"
  },
  {
    "text": "And you'll get\npractice drawing one of these when you do recitation\nmaybe for another example.",
    "start": "2240530",
    "end": "2245910"
  },
  {
    "text": "So I can keep going with these. Let's see here. This is going to be 1, 1.",
    "start": "2245910",
    "end": "2254710"
  },
  {
    "text": "If I haven't found two arrows\ncoming out of each box, then I'm not done. ",
    "start": "2254710",
    "end": "2267869"
  },
  {
    "text": "Oh, this is wrong. Right? Thank you.",
    "start": "2267870",
    "end": "2273610"
  },
  {
    "text": "From zero, 1, I\ncan go to 1, zero. ",
    "start": "2273610",
    "end": "2283000"
  },
  {
    "text": "OK. So the two arrows coming out\nof each one, the upper arrow corresponds to the\ninput having been zero.",
    "start": "2283000",
    "end": "2289140"
  },
  {
    "text": "The lower arrow corresponds\nto an input having been 1.",
    "start": "2289140",
    "end": "2295059"
  },
  {
    "text": "And there are two arrows\ngoing into each box, as well, corresponding\nto whether the bit that's",
    "start": "2295060",
    "end": "2300190"
  },
  {
    "text": "going to get dropped\noff is a zero or a 1. All right? So there's a real\nsymmetry to this. ",
    "start": "2300190",
    "end": "2309420"
  },
  {
    "text": "I'll draw one more\nstage just a little bit to make a point here. ",
    "start": "2309420",
    "end": "2327250"
  },
  {
    "text": "OK. So you can keep going.  So how do you generate a code\nword from a trellis diagram?",
    "start": "2327250",
    "end": "2337000"
  },
  {
    "text": "You're starting in some state. Typically, it's\nthe all zero state. In fact, what\nyou'll usually do is",
    "start": "2337000",
    "end": "2342250"
  },
  {
    "text": "have a header for your message\nstream which is all zero. So you force the shift register\nto be in the zero state",
    "start": "2342250",
    "end": "2347380"
  },
  {
    "text": "once the real\nmessage bits come in. And then you move from here. So you're typically\nstarting here.",
    "start": "2347380",
    "end": "2353067"
  },
  {
    "text": "And then you navigate,\ndepending on whether you've got a zero or a 1. So if the first\nmessage bit is a 1,",
    "start": "2353067",
    "end": "2358960"
  },
  {
    "text": "you're going to go down here. If the next message\nbit is a zero, you're going to go up here. If the next message\nbit is a zero,",
    "start": "2358960",
    "end": "2365200"
  },
  {
    "text": "you're going to go up there. And the code word that\nyou omit is going to be, in that case, 1,\n1, 1, zero, 1, 1.",
    "start": "2365200",
    "end": "2373670"
  },
  {
    "text": "And then all zeros. Right? Assuming you're staying\nat zero from then on. So depending on what\nthe message sequence is,",
    "start": "2373670",
    "end": "2381490"
  },
  {
    "text": "you can actually go\nthrough the trellis. It's infinitely long, or as long\nas your message sequence is.",
    "start": "2381490",
    "end": "2386829"
  },
  {
    "text": "And figure out what the\ncode word is that's omitted. So this is actually\njust a graphical way of displaying code words.",
    "start": "2386830",
    "end": "2392380"
  },
  {
    "text": " So the set of code\nwords that I get,",
    "start": "2392380",
    "end": "2398380"
  },
  {
    "text": "does that correspond\nto a linear code? Let's assume that, somewhere\ndownstream, all these things",
    "start": "2398380",
    "end": "2404140"
  },
  {
    "text": "come back down to zero, zero. OK? So I'm only considering a\nfinite window of things.",
    "start": "2404140",
    "end": "2413720"
  },
  {
    "text": "It's not going to go on forever. So suppose I'm going to end\nmy input messages with zero,",
    "start": "2413720",
    "end": "2418990"
  },
  {
    "text": "zero at the end and come\nback down to that state. So my messages will always\nstart with zero, zero to force the register\nto the zero, zero state.",
    "start": "2418990",
    "end": "2426430"
  },
  {
    "text": "And they'll end with zero, zero. OK? The set of possible code\nwords is a set of parity bits",
    "start": "2426430",
    "end": "2433150"
  },
  {
    "text": "I omit along the way as I\nnavigate through the trellis. Is the set of code words,\ndoes the set of code words",
    "start": "2433150",
    "end": "2440170"
  },
  {
    "text": "constitute a linear code? That's the question. ",
    "start": "2440170",
    "end": "2447319"
  },
  {
    "text": "Maybe not obvious. Right? The way you answer\nthat is actually thinking back to this setting.",
    "start": "2447320",
    "end": "2454660"
  },
  {
    "text": "So one particular\ncode word would correspond to a particular input\nsequence that generated it.",
    "start": "2454660",
    "end": "2462950"
  },
  {
    "text": "A particular data message\nsequence that generated it. Another code would correspond\nto another message sequence.",
    "start": "2462950",
    "end": "2469520"
  },
  {
    "text": "And the question is, is\nthere a message sequence that would generate the\nsum of these two code words that you have?",
    "start": "2469520",
    "end": "2475460"
  },
  {
    "text": "And actually, it turns\nout that the answer is yes because these parity\nrelationships are based",
    "start": "2475460",
    "end": "2481040"
  },
  {
    "text": "on a nice linear operation. OK? So it turns out that the set\nof code words that you generate",
    "start": "2481040",
    "end": "2489350"
  },
  {
    "text": "constitutes a linear code.  So if you were going to\nthink of a minimum Hamming",
    "start": "2489350",
    "end": "2498369"
  },
  {
    "text": "distance for this\ncode, what would you want to be thinking of? ",
    "start": "2498370",
    "end": "2506030"
  },
  {
    "text": "I don't know if I've actually\ndrawn this correctly right now. Has anyone spotted any\nerrors along the way?",
    "start": "2506030",
    "end": "2511650"
  },
  {
    "text": "Or do I have it right? ",
    "start": "2511650",
    "end": "2520299"
  },
  {
    "text": "Seems to be OK. ",
    "start": "2520300",
    "end": "2527940"
  },
  {
    "text": "What would, how would you\nlook for a minimum Hamming distance in the set of\ncode words generated over this window?",
    "start": "2527940",
    "end": "2536750"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: Sorry? I didn't hear where\nthat came from.",
    "start": "2536750",
    "end": "2541978"
  },
  {
    "text": "Yeah.  Can you speak up?",
    "start": "2541978",
    "end": "2549720"
  },
  {
    "text": "The minimum number of ones\nin a non-zero code word. Right? So it would be the weight,\nthe minimum weight code",
    "start": "2549720",
    "end": "2555270"
  },
  {
    "text": "word you'd find among all\nthe number of code words. So you would have to find\na path starting here.",
    "start": "2555270",
    "end": "2561000"
  },
  {
    "text": "All my code words are going\nto start here and there. You have to find a path\nthrough this that picks up",
    "start": "2561000",
    "end": "2566880"
  },
  {
    "text": "the minimum number of ones. A path that's different\nfrom the all zeros path. OK?",
    "start": "2566880",
    "end": "2572190"
  },
  {
    "text": "Find a path through there which\nhas the minimum number of ones in it and the code word.",
    "start": "2572190",
    "end": "2577530"
  },
  {
    "text": "So what would that be? ",
    "start": "2577530",
    "end": "2583940"
  },
  {
    "text": "In this particular\ncase, maybe this path",
    "start": "2583940",
    "end": "2589589"
  },
  {
    "text": "we highlighted in another color. ",
    "start": "2589590",
    "end": "2600742"
  },
  {
    "text": "I don't have-- this\nis not a proof. This is just a suggestion\nthat this might be it. ",
    "start": "2600742",
    "end": "2607660"
  },
  {
    "text": "And you would have to\ndraw in all the paths, explore all the other paths. But what would be the minimum\nweight along this one?",
    "start": "2607660",
    "end": "2613970"
  },
  {
    "text": "Let's see. I've got 1, 1 there. 1, zero here. 1, 1 there. So I would get a weight\nof 5 on this path.",
    "start": "2613970",
    "end": "2622408"
  },
  {
    "text": "Now the question is whether\nyou could find another path with a smaller number of ones\nattached to the code word.",
    "start": "2622408",
    "end": "2629359"
  },
  {
    "text": "And I think if you work this\nout in detail on [INAUDIBLE],, that you'll find that you're\nactually stuck with 5.",
    "start": "2629360",
    "end": "2634690"
  },
  {
    "text": "OK? Now it turns out that the\ninterpretation of this number",
    "start": "2634690",
    "end": "2640030"
  },
  {
    "text": "is not quite as straightforward\nas the interpretation of the minimum Hamming\ndistance in block codes.",
    "start": "2640030",
    "end": "2645079"
  },
  {
    "text": "And the reason is\nthat actually this is a more complicated\nkind of picture",
    "start": "2645080",
    "end": "2651819"
  },
  {
    "text": "because it continues\non with the structure. ",
    "start": "2651820",
    "end": "2657660"
  },
  {
    "text": "So we don't actually call it\nthe minimum Hamming distance. We call it the free distance. ",
    "start": "2657660",
    "end": "2665430"
  },
  {
    "text": "So I'm just trying\nto evoke this. So the minimum\nweight code word you",
    "start": "2665430",
    "end": "2671849"
  },
  {
    "text": "find among the\nnon-zero code words will indeed be a\ncode word of eight 5. But the interpretation\nof that number",
    "start": "2671850",
    "end": "2679260"
  },
  {
    "text": "may not be directly as simple\nas in the case of the Hamming distance. ",
    "start": "2679260",
    "end": "2688900"
  },
  {
    "text": "But it's close. OK? So what it really\ntells you is that, over a data length\nthat is maybe not",
    "start": "2688900",
    "end": "2698500"
  },
  {
    "text": "much longer than\nthis, the code words that you have are separated\nby this distance minimum.",
    "start": "2698500",
    "end": "2706250"
  },
  {
    "text": "So you might expect that you\ncould correct two bit errors",
    "start": "2706250",
    "end": "2712450"
  },
  {
    "text": "over data lengths\nthat correspond to code words that are somewhat\nlonger than this perhaps.",
    "start": "2712450",
    "end": "2718029"
  },
  {
    "text": "OK? So that's all very hand-wavy. But that's all we're going\nto do with the notion",
    "start": "2718030",
    "end": "2723850"
  },
  {
    "text": "of free distance. So this is more complicated to\ndeal with than a block code. But the free distance actually\nhas that kind of intuition.",
    "start": "2723850",
    "end": "2731680"
  },
  {
    "text": "It has the intuition of\nminimum Hamming distance locally over this\nwindow of data.",
    "start": "2731680",
    "end": "2739930"
  },
  {
    "text": "Even if this went on\nfor thousands of bits, if you got a burst of\nerrors in this stretch that",
    "start": "2739930",
    "end": "2745420"
  },
  {
    "text": "had up to two errors,\nyou could correct them. Now we haven't talked\nabout decoding. We're going to talk\nabout that the next time.",
    "start": "2745420",
    "end": "2751789"
  },
  {
    "text": "OK. ",
    "start": "2751790",
    "end": "2756890"
  },
  {
    "text": "So that answers this piece. ",
    "start": "2756890",
    "end": "2763790"
  },
  {
    "text": "Now let me say one thing\nabout decoding, just to set us up for next time.",
    "start": "2763790",
    "end": "2769829"
  },
  {
    "text": "If I didn't have any\nnoise in my channel, it actually turns out that\ndecoding is pretty trivial.",
    "start": "2769830",
    "end": "2779490"
  },
  {
    "text": "How is that? If I gave you the\nsequence of parity bits, can you think of a way that\nyou could recover the input",
    "start": "2779490",
    "end": "2786640"
  },
  {
    "text": "sequence? ",
    "start": "2786640",
    "end": "2797460"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE] PROFESSOR: Good. Yeah. You see, if I add these two, I\nget x n minus 1 equals P zero",
    "start": "2797460",
    "end": "2807829"
  },
  {
    "text": "n plus P1 n. So if you give me the\nparity bit stream,",
    "start": "2807830",
    "end": "2814790"
  },
  {
    "text": "I can reconstruct for\nyou exactly the input with a one step delay. That's pretty good.",
    "start": "2814790",
    "end": "2820420"
  },
  {
    "text": "I'm happy with that. If it's taken me minutes for the\nsignal to reach me from Saturn,",
    "start": "2820420",
    "end": "2826640"
  },
  {
    "text": "I'm happy with a one step\ndelay here in decoding. All right? So in the absence of noise,\nthe inversion is simple.",
    "start": "2826640",
    "end": "2833630"
  },
  {
    "text": "The inversion meaning deducing\nthe input message bits from the output,\nthe parity bits.",
    "start": "2833630",
    "end": "2839210"
  },
  {
    "text": "And this is a theme you'll\nsee in many other settings. If there's no noise,\ninversion is easy.",
    "start": "2839210",
    "end": "2844467"
  },
  {
    "text": "You can look at the\noutput of a system and figure out\nwhat the input was. If you know exactly how\nthe system was creating",
    "start": "2844467",
    "end": "2851210"
  },
  {
    "text": "the output from the input. But in the presence of\nnoise, you've got a problem. Because you see, if\nyou have these parity",
    "start": "2851210",
    "end": "2857300"
  },
  {
    "text": "bits corrupted at some rate-- every few bits,\nyou've got errors-- well, you're\ninterpreted message is",
    "start": "2857300",
    "end": "2863210"
  },
  {
    "text": "going to have that same\nkind of error rate. OK? So it's really, in\nthe presence of noise,",
    "start": "2863210",
    "end": "2868248"
  },
  {
    "text": "it's an unsatisfactory\nway to do it. So this doesn't work.",
    "start": "2868248",
    "end": "2873839"
  },
  {
    "text": "We'll be looking at something\nmore careful next time. OK? So well actually,\nsince I have you here,",
    "start": "2873840",
    "end": "2882770"
  },
  {
    "text": "let me put up the spot quiz. We haven't quite hit the mark. So can you answer these for me?",
    "start": "2882770",
    "end": "2891260"
  },
  {
    "text": "What's the constraint\nlength of this code? ",
    "start": "2891260",
    "end": "2897880"
  },
  {
    "text": "Anyone? Who hasn't answered? Yeah? 4. Right? Because you've got xn and\nxn minus 1, xn minus 2,",
    "start": "2897880",
    "end": "2904610"
  },
  {
    "text": "xn minus 3. That's the largest window over\nwhich you're picking things. What about the code rate?",
    "start": "2904610",
    "end": "2909810"
  },
  {
    "text": " 1 over 3?",
    "start": "2909810",
    "end": "2915940"
  },
  {
    "text": "Right? Because for every\nmessage bit, you're generating three parity bits. You're going to shift\nout those three parity",
    "start": "2915940",
    "end": "2921570"
  },
  {
    "text": "bits before you do the\nshifting on the shift register. So the code rate is 1 over 3. The coefficients\nof the generators,",
    "start": "2921570",
    "end": "2927780"
  },
  {
    "text": "of course, you\ncan read up there. What about the number of states\nin the state machine here? ",
    "start": "2927780",
    "end": "2940240"
  },
  {
    "text": "What? 8. Right? Because constraint length is 4.",
    "start": "2940240",
    "end": "2945790"
  },
  {
    "text": "But one of those is the input. So you've got three bits that\nyou're storing in memory. 2 to the 3 is 8.",
    "start": "2945790",
    "end": "2951460"
  },
  {
    "text": "So the number of states\nin the machine is 8. OK? So more complicated\npicture than this.",
    "start": "2951460",
    "end": "2956869"
  },
  {
    "text": "But the same principle. All right. We'll continue next time. ",
    "start": "2956870",
    "end": "2963000"
  }
]