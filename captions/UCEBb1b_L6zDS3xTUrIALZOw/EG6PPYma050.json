[
  {
    "text": "The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13350"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13350",
    "end": "25723"
  },
  {
    "text": "PROFESSOR: So we're going to\ntalk about routing protocols. And today we're going to talk\nabout how routing protocols",
    "start": "25723",
    "end": "32130"
  },
  {
    "text": "handle failures. So I'm going to-- I want to bring everybody back\nonto the same page with respect",
    "start": "32130",
    "end": "37770"
  },
  {
    "text": "to where we are in the story. So in terms of\nrouting protocols,",
    "start": "37770",
    "end": "45930"
  },
  {
    "text": "if you imagine a network\ntopology like this, and let's",
    "start": "45930",
    "end": "58290"
  },
  {
    "text": "say that links have costs\nassociated with them. So I'm just going to make\nup some numbers here. ",
    "start": "58290",
    "end": "71040"
  },
  {
    "text": "We studied two classes\nof routing protocols. And we looked at these in\nthe absence of any failures.",
    "start": "71040",
    "end": "77039"
  },
  {
    "text": "The first is the distance vector\nprotocol, or more generally, vector protocols where,\nin an advertisement sent",
    "start": "77040",
    "end": "84330"
  },
  {
    "text": "from one node to\nanother, each node sends a subset of its routing table. In other words, it sends two\ncolumns from its routing table.",
    "start": "84330",
    "end": "92549"
  },
  {
    "text": "Recall that the routing\ntable at every node contains a destination,\na route, which",
    "start": "92550",
    "end": "100740"
  },
  {
    "text": "is a link, the name of\nthe link, and a cost. And in a distance\nvector protocol,",
    "start": "100740",
    "end": "107790"
  },
  {
    "text": "you send these two columns. You send these tuples for all of\nthe destinations that you know.",
    "start": "107790",
    "end": "114270"
  },
  {
    "text": "And that's what's spread out\nto all of the other nodes. In contrast-- so this\nis distance vector.",
    "start": "114270",
    "end": "121380"
  },
  {
    "text": "In contrast, in a\nlink state protocol, what you're sending to\nall of the other nodes",
    "start": "121380",
    "end": "127560"
  },
  {
    "text": "is information about all\nof the links that you have. And in particular,\nyou send information about the neighbor\nin your topology",
    "start": "127560",
    "end": "141150"
  },
  {
    "text": "together with the link\ncost to that neighbor, whereas here it's the cost of\nthe route to the destination",
    "start": "141150",
    "end": "150180"
  },
  {
    "text": "that you send.  In the distance vector protocol,\nthe computation of the routes",
    "start": "150180",
    "end": "156980"
  },
  {
    "text": "is distributed. So every node kind of\ncomputes and updates its routing table using the\nBellman-Ford update step, which",
    "start": "156980",
    "end": "164810"
  },
  {
    "text": "essentially updates the\nroute to a destination if you find a better\nroute to the destination. Or if you find that the route\nto the destination has--",
    "start": "164810",
    "end": "172450"
  },
  {
    "text": "that you currently have\n\"has a changed cost,\" in which case, you update\nyour routing table. In a link state protocol, the\ncomputation is not distributed.",
    "start": "172450",
    "end": "180252"
  },
  {
    "text": "What is distributed\nis the process of flooding this information\nof the local links.",
    "start": "180253",
    "end": "186410"
  },
  {
    "text": "That's why it's called\na link state protocol. And the computation of\nthe routes themselves are centralized.",
    "start": "186410",
    "end": "191840"
  },
  {
    "text": "Each node just runs a\nshortest path computation-- for example, Dijkstra's\nshortest path computation.",
    "start": "191840",
    "end": "198530"
  },
  {
    "text": "And in a link state protocol,\nas long as all of the nodes run exactly the same\ncomputation-- in other words,",
    "start": "198530",
    "end": "203730"
  },
  {
    "text": "they all try to minimize or\noptimize the same metric-- then you're guaranteed\nthat all of the nodes",
    "start": "203730",
    "end": "209420"
  },
  {
    "text": "end up computing\nthe correct routes, and that when you send\na packet from one node, it will reach the\ndestination, assuming",
    "start": "209420",
    "end": "215480"
  },
  {
    "text": "there's a path in the network. And in the problem set-- maybe not in the problems.",
    "start": "215480",
    "end": "220829"
  },
  {
    "text": "Certainly at the\nback of the chapter, there are problems\non what happens if some nodes run one\nprotocol and another node",
    "start": "220830",
    "end": "227630"
  },
  {
    "text": "runs another protocol. For example, you might have--\nimagine a routing protocol where one of the nodes is doing\nminimum cost routes and another",
    "start": "227630",
    "end": "234319"
  },
  {
    "text": "node is doing shortest paths-- in terms of the number\nof hops, not costs. And if you have that, you\nmight end up in a situation",
    "start": "234320",
    "end": "240530"
  },
  {
    "text": "where, in fact, the routing\ndoesn't work correctly. But assuming that\nall of the nodes",
    "start": "240530",
    "end": "245660"
  },
  {
    "text": "are on the same optimization\nin a link state protocol, they'll all get\nthe correct answer. And similarly, in a\ndistance vector protocol,",
    "start": "245660",
    "end": "252230"
  },
  {
    "text": "actually the update\nrule can do anything, as long as the nodes\nbelieve that this route-- and they perform some sort of\nan update to the routing table",
    "start": "252230",
    "end": "259338"
  },
  {
    "text": "entry consistent with the\ninformation that they hear, then the routing will work.",
    "start": "259339",
    "end": "264639"
  },
  {
    "text": "Now, what happens when\nthere are failures? And how does it work? So let's say that you run this\nprotocol and this topology.",
    "start": "264640",
    "end": "271380"
  },
  {
    "text": "And you give it enough time. Once you hear all of\nthe advertisements and compute the routes\nof the different nodes,",
    "start": "271380",
    "end": "277790"
  },
  {
    "text": "if you look at this\nnode over here, C four destination D\nwould have a route--",
    "start": "277790",
    "end": "285409"
  },
  {
    "text": "let's call this link L0. It will have a route, L0. And the cost of that\nroute would be three.",
    "start": "285410",
    "end": "293270"
  },
  {
    "text": "And similarly at B here, once\nit converges you'd have-- for destination D, let's\nimagine this link is called L0,",
    "start": "293270",
    "end": "300919"
  },
  {
    "text": "as well, at node B.\nYou might have L0 and the cost would be four, and\nsimilarly at the other nodes.",
    "start": "300920",
    "end": "311560"
  },
  {
    "text": "Now, let's say what happens\nis that some sort of a failure occurs. And failures could be one of--",
    "start": "311560",
    "end": "317479"
  },
  {
    "text": "a variety of failures could\noccur that cause the routing to get screwed up.",
    "start": "317480",
    "end": "323030"
  },
  {
    "text": "So one of the failures-- the\neasiest form of failure-- is that a packet could be lost. In particular, an\nadvertisement could be lost.",
    "start": "323030",
    "end": "329000"
  },
  {
    "start": "329000",
    "end": "340633"
  },
  {
    "text": "The second thing\nthat could happen is that a link could fail. ",
    "start": "340633",
    "end": "347020"
  },
  {
    "text": "I mean, if it's a\nwire, maybe a backhoe runs over it, which is actually\nmore common than you think. In fact, you could\nhave undersea cables",
    "start": "347020",
    "end": "355250"
  },
  {
    "text": "where sharks bite them\nand they get destroyed. I mean, lots of\nthings could happen.",
    "start": "355250",
    "end": "360477"
  },
  {
    "text": "So links could fail. And the third thing\nthat could happen, which is more common\nthan you might think, is that entire switches could\nfail or nodes could fail.",
    "start": "360477",
    "end": "367550"
  },
  {
    "start": "367550",
    "end": "373819"
  },
  {
    "text": "Since we actually don't know\nhow to write bug-free software, software bugs may\ncause things to fail. They may cause things to crash.",
    "start": "373820",
    "end": "379920"
  },
  {
    "text": "In fact, they may cause things\nto fail in mysterious ways where it looks like\nit's not failed,",
    "start": "379920",
    "end": "385889"
  },
  {
    "text": "but in fact, there's a fault\nin the software causing you to send bad advertisements. And for this course, we\nwon't worry about this.",
    "start": "385890",
    "end": "392780"
  },
  {
    "text": "We'll actually worry about\nonly a class of failures that we think of as fail stop. ",
    "start": "392780",
    "end": "400202"
  },
  {
    "text": "What I mean by that\nis if it fails, it just stops, as opposed to\nit fails and then it gives you wrong information, which is\nactually a lot harder to deal",
    "start": "400202",
    "end": "406940"
  },
  {
    "text": "with, because it's\nmuch better for you to fail and just stop\nrather than for the node to fail and pretend that\nit's correct and send you",
    "start": "406940",
    "end": "413450"
  },
  {
    "text": "bad information. That's a lot harder\nto deal with. We'll worry about that\nlater, not in 6.02.",
    "start": "413450",
    "end": "420020"
  },
  {
    "text": "Anyway, these\nthings could happen. So let's concretely assume that\nyou have this topology here. And what happens\nis this link fails.",
    "start": "420020",
    "end": "427430"
  },
  {
    "text": " Now, if you did nothing\nand you had that link fail,",
    "start": "427430",
    "end": "435060"
  },
  {
    "text": "what would happen? Now, let's look at\nit node by node.",
    "start": "435060",
    "end": "440570"
  },
  {
    "text": "What would happen here\nis that C would end up with no route to the\ndestination, because what",
    "start": "440570",
    "end": "448162"
  },
  {
    "text": "would happen is assuming that\nC has some way of discovering that this fault has\nhappened, it would have no route to the destination.",
    "start": "448162",
    "end": "454169"
  },
  {
    "text": "But if it doesn't discover\nthe fault had happened, it has this route\nto the destination. But if it sends\npackets on that link,",
    "start": "454170",
    "end": "459990"
  },
  {
    "text": "it wouldn't reach\nthe other side. Packets would be lost. But assuming that\nit discovers, has a way of discovering that\nthis link has failed,",
    "start": "459990",
    "end": "466460"
  },
  {
    "text": "it has no route to\nthe destination. Now, B has a route\nto the destination. It has this link.",
    "start": "466460",
    "end": "472940"
  },
  {
    "text": "But in fact, the next\nadvertisement from C,",
    "start": "472940",
    "end": "478150"
  },
  {
    "text": "if C were to make\nanother advertisement, would tell it that it had\nno route to the destination. But if it did nothing, if you\ndid nothing in the protocol,",
    "start": "478150",
    "end": "484400"
  },
  {
    "text": "B thinks it has a route\nto the destination. But in fact, it reaches C\nand it's actually a dead end because it reaches\nC and C doesn't",
    "start": "484400",
    "end": "490729"
  },
  {
    "text": "know what to do with it. It just drops the packet. The technical term for\nthis is a dead end.",
    "start": "490730",
    "end": "496660"
  },
  {
    "text": "You send packets. You think you're\nreaching the destination. But it's actually\ngetting dropped.",
    "start": "496660",
    "end": "501880"
  },
  {
    "text": "What about S? Does S have a route\nto the destination? Well, S doesn't have a route\nto the destination, either,",
    "start": "501880",
    "end": "507419"
  },
  {
    "text": "because the right route\nto the destination would probably have\nbeen this link over here",
    "start": "507420",
    "end": "515719"
  },
  {
    "text": "because the cost\nwas 2 plus 1 plus 3. And that wouldn't have a\nroute to the destination. It would have a\nroute, but the route",
    "start": "515720",
    "end": "521150"
  },
  {
    "text": "would lead to a dead\nend at C. And in fact, in this particular\nexample, no node would have a route to\nthe destination in terms",
    "start": "521150",
    "end": "527870"
  },
  {
    "text": "of the routing table itself. No node would have a route\nthat actually worked, in that the route\nwouldn't correspond",
    "start": "527870",
    "end": "534710"
  },
  {
    "text": "to an actual working path. But if you look at the\npicture, clearly there are other ways to get\nto the destination.",
    "start": "534710",
    "end": "540288"
  },
  {
    "text": "I mean, we designed\nthis topology presumably because we had some\nsort of redundancy. So if this failed, what\nyou would like to have",
    "start": "540288",
    "end": "547730"
  },
  {
    "text": "is for C to use one\nof the other paths. C might use this path or\nC might use this path.",
    "start": "547730",
    "end": "553570"
  },
  {
    "text": "Or C might-- yeah, those\nare the two possible paths it could use. And similarly, S might use--",
    "start": "553570",
    "end": "558830"
  },
  {
    "text": "should use that\npath, and so forth. So what you want is\na routing protocol that converges to the\nnew correct answer,",
    "start": "558830",
    "end": "567210"
  },
  {
    "text": "assuming there is a\nnew correct answer. And if there's no\nnew correct answer, it converges to whatever\nthe best possible answer is.",
    "start": "567210",
    "end": "573930"
  },
  {
    "text": "So to some destinations,\nyou could have a route, and to some destinations,\nyou don't have a route. So what you want is, as long\nas there is a connected path,",
    "start": "573930",
    "end": "582410"
  },
  {
    "text": "there is a path between a\nsource and a destination, you would like that\nsource to end up with a route that corresponds\nto some good working path,",
    "start": "582410",
    "end": "591110"
  },
  {
    "text": "and in particular,\nconverges to the new minimum cost working path between the\nsource and the destination.",
    "start": "591110",
    "end": "597540"
  },
  {
    "text": "So that's the statement\nof the problem. And we're going to solve that\nproblem today for both distance",
    "start": "597540",
    "end": "604670"
  },
  {
    "text": "vector and link scale. And interestingly,\nthe idea that we're going to use the same\nidea in both cases.",
    "start": "604670",
    "end": "611410"
  },
  {
    "text": "And the idea is, just like\nwe built a redundant topology by having alternate\npaths between places,",
    "start": "611410",
    "end": "617540"
  },
  {
    "text": "we're just going to\nrepeat advertisements. And we're going to repeat\nthe process of processing",
    "start": "617540",
    "end": "623030"
  },
  {
    "text": "these advertisements. It's a very simple idea. And the general plan-- there\nare three steps to the plan.",
    "start": "623030",
    "end": "629870"
  },
  {
    "text": "The first step in the plan\nis to periodically check-- every neighbor is\nresponsible for checking",
    "start": "629870",
    "end": "636170"
  },
  {
    "text": "the health of-- every node\nis responsible for checking the health of its neighbors.",
    "start": "636170",
    "end": "641390"
  },
  {
    "text": "So that's the step,\nwhich we're going to call neighbor aliveness. ",
    "start": "641390",
    "end": "650780"
  },
  {
    "text": "And the protocol we're\ngoing to use for that is called the hello protocol.",
    "start": "650780",
    "end": "656272"
  },
  {
    "text": "It's a very, very\nsimple protocol. I'll describe it in a moment. And we're going to use this\nidea that every node is",
    "start": "656273",
    "end": "662400"
  },
  {
    "text": "responsible for checking whether\neach of its neighbors is alive. And if it determines that\na neighbor is not alive,",
    "start": "662400",
    "end": "670200"
  },
  {
    "text": "it assumes the neighbor\nis dead and removes it from various tables and\ndata structures and so on.",
    "start": "670200",
    "end": "676860"
  },
  {
    "text": "And in fact, this\nfail stop assumption is pretty crucial for us,\nbecause the assumption is that when a failure occurs\nof a node, that in fact,",
    "start": "676860",
    "end": "683400"
  },
  {
    "text": "the node doesn't respond. If a failure occurs of a link,\nthe assumption here, as well, is that the link\nstops responding.",
    "start": "683400",
    "end": "689430"
  },
  {
    "text": "You don't get to send packets or\nreceive packets over that link. And for now, we're going to\nassume that every link is",
    "start": "689430",
    "end": "694860"
  },
  {
    "text": "bidirectional. So you send packets\nin both directions. In reality, there are\nunidirectional network links.",
    "start": "694860",
    "end": "701400"
  },
  {
    "text": "And you have to deal with\nthe problem differently. Not going to worry about that. So there is a protocol\ncalled the hello protocol",
    "start": "701400",
    "end": "708420"
  },
  {
    "text": "that runs to detect if your\nneighbor is alive or not. The second step in our answer\nis to make the advertisements",
    "start": "708420",
    "end": "717550"
  },
  {
    "text": "periodic. ",
    "start": "717550",
    "end": "725019"
  },
  {
    "text": "And the third step\nis, what do you do when you receive\nan advertisement? When you receive\nan advertisement,",
    "start": "725020",
    "end": "730958"
  },
  {
    "text": "you collect a bunch of\nthese advertisements that you receive from\nvarious neighbors. In the link state protocol,\nit's these link state",
    "start": "730958",
    "end": "737430"
  },
  {
    "text": "advertisements. In the distance vector protocol,\nit's these distance vector tuple advertisements.",
    "start": "737430",
    "end": "743070"
  },
  {
    "text": "And then you run a periodic\nintegration process. ",
    "start": "743070",
    "end": "756410"
  },
  {
    "text": "So if you look at\nit with a timeline,",
    "start": "756410",
    "end": "763209"
  },
  {
    "text": "every node asynchronously--\nin other words, independent of the other nodes. You don't have to\nsynchronize the clocks.",
    "start": "763210",
    "end": "769900"
  },
  {
    "text": "Every node has its own clock. And every node does these\ntwo steps periodically.",
    "start": "769900",
    "end": "776140"
  },
  {
    "text": "So from time to time, it\nsends an advertisement.",
    "start": "776140",
    "end": "783209"
  },
  {
    "text": " It just says, in\ndistance vector,",
    "start": "783209",
    "end": "789700"
  },
  {
    "text": "just sends these two\ncolumns to its neighbors. In the link state\nadvertisement, it just sends out its link\nstate information,",
    "start": "789700",
    "end": "796450"
  },
  {
    "text": "and the flooding process works. And then from time\nto time, there's this integration of these\nadvertisements that happen.",
    "start": "796450",
    "end": "802720"
  },
  {
    "start": "802720",
    "end": "811170"
  },
  {
    "text": "Et cetera. Now the beautiful part\nof these protocols is that I've shown\nthis picture here",
    "start": "811170",
    "end": "816643"
  },
  {
    "text": "with these integrations\nhappening interspersed with the advertisements. That doesn't actually\nhave to be the case. You could do them pretty\nmuch arbitrarily as long",
    "start": "816643",
    "end": "823810"
  },
  {
    "text": "as you do them periodically. The beautiful part\nof these protocols is that every node\nasynchronously running",
    "start": "823810",
    "end": "830800"
  },
  {
    "text": "these advertisement steps\nand these integration steps, as long as they\ndo this periodically,",
    "start": "830800",
    "end": "836350"
  },
  {
    "text": "in the end what you get\nas a property called eventual convergence. ",
    "start": "836350",
    "end": "852840"
  },
  {
    "text": "What that means is, assuming\nyou have all sorts of failures and any pattern of packet\nlosses, link failures,",
    "start": "852840",
    "end": "860430"
  },
  {
    "text": "and switches, and then\nyou freeze the system and assume that no more\nfailures happen, then what",
    "start": "860430",
    "end": "869230"
  },
  {
    "text": "eventual convergence means\nis that in some finite time,",
    "start": "869230",
    "end": "875095"
  },
  {
    "text": "all of the nodes in the\nnetwork will converge to correct routing state. That is, in these routing\nprotocols, all of the nodes",
    "start": "875095",
    "end": "881050"
  },
  {
    "text": "will end up with an answer\nthat's consistent with what you are trying to optimize. For example, minimum cost\npaths to all the destinations.",
    "start": "881050",
    "end": "889810"
  },
  {
    "text": "Now, proving that under\nan arbitrary model of when these advertisements\nand integration steps are all",
    "start": "889810",
    "end": "895450"
  },
  {
    "text": "asynchronous and being\ndone at random times is a little involved. And we're not going to\nattempt that in this course.",
    "start": "895450",
    "end": "901750"
  },
  {
    "text": "The notes talk a\nlittle bit about how you get eventual\nconvergence when you assume that all\nthe nodes are running",
    "start": "901750",
    "end": "906790"
  },
  {
    "text": "very periodic advertisement\nsteps interspersed with integration steps. The proof is really\nnot that important.",
    "start": "906790",
    "end": "912590"
  },
  {
    "text": "What's more important is for\nyou to understand the intention behind why it works. So I'll do that by\nsome examples here.",
    "start": "912590",
    "end": "918130"
  },
  {
    "text": " I have to also tell you\nwhat the Hello protocol is.",
    "start": "918130",
    "end": "923190"
  },
  {
    "text": "I'll get to that. But for now, just assume\nit's a module that tells you if the\nneighbor is alive or not.",
    "start": "923190",
    "end": "929589"
  },
  {
    "text": "So is this plan\nclear to everybody? It's just this same\nidea, except every node's doing this periodically. So in practice, you\nmight do this every 30",
    "start": "929590",
    "end": "936250"
  },
  {
    "text": "seconds or every three minutes\nor something like that. Of course, the longer the\ntime between advertisements,",
    "start": "936250",
    "end": "941910"
  },
  {
    "text": "the longer it's going\nto take for the protocol to converge after a failure\nor a set of failures.",
    "start": "941910",
    "end": "947090"
  },
  {
    "text": "And the shorter the time, it\ntakes a quicker amount of time to converge. But you end up doing\na lot more work.",
    "start": "947090",
    "end": "955100"
  },
  {
    "text": "And moreover, in practice,\nmany failures are transient. So a link may fail for a few\nseconds and then come back up.",
    "start": "955100",
    "end": "962440"
  },
  {
    "text": "And so it's in practice not\nthat useful to converge very, very quickly or react\nvery, very quickly.",
    "start": "962440",
    "end": "968438"
  },
  {
    "text": "It's important to\nconverge quickly once you start the convergence process. But once you-- detecting that\na neighbor is alive or dead",
    "start": "968438",
    "end": "975750"
  },
  {
    "text": "on the timescale\nof a few packets is sometimes too fast,\nbecause sometimes failures",
    "start": "975750",
    "end": "981780"
  },
  {
    "text": "last for very little time\nand then they go away. And in the meantime, you\nhave done all this work to converge to a\nnew routing state.",
    "start": "981780",
    "end": "987220"
  },
  {
    "text": "And then when the\nlink comes back up, you're going to do more work\nto come back to the old answer. You may as well have\njust been a little lazy.",
    "start": "987220",
    "end": "994000"
  },
  {
    "text": "And so deciding these\ntimes is tricky. And there's no real systematic\nway of doing it in practice.",
    "start": "994000",
    "end": "1000830"
  },
  {
    "text": "But the trade-off is usually\nbetween how quickly you wish to converge\nand how much work you're willing to expand in\nmaking that convergence happen.",
    "start": "1000830",
    "end": "1009940"
  },
  {
    "text": "So is the plan clear? It's just this same\nprotocol, except we're going to do this periodically.",
    "start": "1009940",
    "end": "1015860"
  },
  {
    "text": "OK. So the first step is\nthis enable liveness, or the hello protocol.",
    "start": "1015860",
    "end": "1020990"
  },
  {
    "text": "So that protocol is\nactually very easy. Every node-- you have a set of\nlinks coming out of the node",
    "start": "1020990",
    "end": "1028760"
  },
  {
    "text": "and then neighbors at\nthe other end of it. So the problem is\nthat the node needs to decide which of these links\nis working or not working",
    "start": "1028760",
    "end": "1036939"
  },
  {
    "text": "and which of the neighbors are\nstill there versus not there. And the way the\nprotocol works is",
    "start": "1036940",
    "end": "1042560"
  },
  {
    "text": "that every node in the\nsystem on each of its links-- let's call these nodes ABC.",
    "start": "1042560",
    "end": "1048404"
  },
  {
    "text": " On each of these\nlinks sends out--",
    "start": "1048405",
    "end": "1055540"
  },
  {
    "text": "periodically sends out\nonly to its neighbors a packet called a Hello packet.",
    "start": "1055540",
    "end": "1061810"
  },
  {
    "text": "And the Hello packet usually\nhas a sequence number on it, an incrementing\nsequence number.",
    "start": "1061810",
    "end": "1068260"
  },
  {
    "text": "The idea is now\nvery, very simple. This may be sent periodically,\nsay, every 10 seconds.",
    "start": "1068260",
    "end": "1074490"
  },
  {
    "text": "If n finds that a certain\nnumber of hello packets-- it hasn't heard from its\nneighbor, one of its neighbors,",
    "start": "1074490",
    "end": "1081720"
  },
  {
    "text": "in some time-- that is,\nperhaps three hello packets are missing, or four hello\npackets are missing in a row--",
    "start": "1081720",
    "end": "1086850"
  },
  {
    "text": "it just decides that\nthat neighbor is dead. It's a very simple idea.",
    "start": "1086850",
    "end": "1092160"
  },
  {
    "text": "So you send out hello\npackets periodically and if k successive\nmissing hello packets",
    "start": "1092160",
    "end": "1105539"
  },
  {
    "text": "implies the neighbor from\nwhich those packets are missing is dead. ",
    "start": "1105540",
    "end": "1115110"
  },
  {
    "text": "Now, in response,\nwhat happens is that all of the routes\nthat this node had that",
    "start": "1115110",
    "end": "1122610"
  },
  {
    "text": "went via that neighbor,\nvia that link, are eliminated from\nthe routing table.",
    "start": "1122610",
    "end": "1127710"
  },
  {
    "text": "And you could do that by\neither simply removing the entry from the routing\ntable or by keeping",
    "start": "1127710",
    "end": "1133289"
  },
  {
    "text": "the entry in the routing\ntable but making-- for those destinations--\nand replacing the cost from whatever\nthe value was to infinity.",
    "start": "1133290",
    "end": "1142350"
  },
  {
    "text": "And it's probably a better idea\nto replace it with infinity. I'm not exactly sure why.",
    "start": "1142350",
    "end": "1148080"
  },
  {
    "text": "That's kind of what\nmost people do. I think the reason\nis that you'd like to know that that destination\nexists in the network.",
    "start": "1148080",
    "end": "1154500"
  },
  {
    "text": "And then when the later route\narrives, you can fix it. But you could just\nremove it, as well.",
    "start": "1154500",
    "end": "1160420"
  },
  {
    "text": "The other thing that happens\nis, if you were in a link state protocol, what you would then\ndo is on the next advertisement",
    "start": "1160420",
    "end": "1167142"
  },
  {
    "text": "of the link state,\nyou would simply eliminate that link and\nthat neighbor altogether. So you would not advertise\nthis link and this neighbor",
    "start": "1167142",
    "end": "1175590"
  },
  {
    "text": "as existing anymore. And when that link state\nadvertisement floods through the network,\nall of the other nodes",
    "start": "1175590",
    "end": "1181910"
  },
  {
    "text": "through the flooding\nprocess would determine that that\nnode has gone away and that link has gone away.",
    "start": "1181910",
    "end": "1187318"
  },
  {
    "text": "And then when they run\nDijkstra's algorithm again and recompute the routes,\nthey will no longer assume that that link exists.",
    "start": "1187318",
    "end": "1193200"
  },
  {
    "text": "And they may find new\nroutes to the destination. So that's what the\nhello protocol does.",
    "start": "1193200",
    "end": "1199620"
  },
  {
    "text": "And so how you pick k, again,\nit's the same trade-off. It depends on how\nquickly you want",
    "start": "1199620",
    "end": "1205050"
  },
  {
    "text": "to converge to a real failure. And picking this is\ndifficult. For example, if you were on a\nwireless network",
    "start": "1205050",
    "end": "1211350"
  },
  {
    "text": "where the normal packet\nloss probability might be 10%, something high,\nthen waiting for a larger",
    "start": "1211350",
    "end": "1219809"
  },
  {
    "text": "number of successive\nfailed packets is a good idea, because\njust because a packet's lost",
    "start": "1219810",
    "end": "1225059"
  },
  {
    "text": "or two packets are lost doesn't\nmean the link has failed. On the other hand, if you\nwere running on a highly, highly reliable link in\nterms of packet loss-- like,",
    "start": "1225060",
    "end": "1232440"
  },
  {
    "text": "you were running on some\ndedicated optical link where the packet loss rate is\none part in a million--",
    "start": "1232440",
    "end": "1238860"
  },
  {
    "text": "then a single packet missing\nor two packets missing would be a good indication that\nthat link has actually failed",
    "start": "1238860",
    "end": "1244899"
  },
  {
    "text": "or that node at the other\nend of the link has failed, and therefore, k could be small.",
    "start": "1244900",
    "end": "1250720"
  },
  {
    "text": "So again, it totally depends\non the actual system context and the normal\npacket loss rates,",
    "start": "1250720",
    "end": "1255792"
  },
  {
    "text": "because what you're\ntrying to do is to make sure you\nreact to real failure, not to simply packet loss.",
    "start": "1255792",
    "end": "1261205"
  },
  {
    "text": "There's really no way\nto tell the difference. There's no way to tell the\ndifference between a link that really has failed versus a link\nwith a high packet loss rate.",
    "start": "1261205",
    "end": "1269670"
  },
  {
    "text": "It's a heuristic. And in fact, there's\nreally no way to tell between a node that has\nactually failed and gone away",
    "start": "1269670",
    "end": "1274740"
  },
  {
    "text": "and a node that's just\nheavily overloaded and is extremely\nslow in responding.",
    "start": "1274740",
    "end": "1279809"
  },
  {
    "text": "There's no way to tell. So these are all\nheuristics that you have to work with and\ntry to solve the problem.",
    "start": "1279810",
    "end": "1290033"
  },
  {
    "text": "So sometimes you\nmay get it wrong. Sometimes you may\nfind that a link has-- you may declare a link to have\nfailed when, in fact, it's",
    "start": "1290033",
    "end": "1295415"
  },
  {
    "text": "still fine. But that's life. And you just have\nto deal with it. So is the story clear\nso far as to how we deal",
    "start": "1295415",
    "end": "1303270"
  },
  {
    "text": "with routing and a failure? So we're going to apply\nthat to this picture. And you'll find that\nthe answer will work.",
    "start": "1303270",
    "end": "1309179"
  },
  {
    "text": "Yes? AUDIENCE: [INAUDIBLE]. PROFESSOR: Right. Like I said, what it--",
    "start": "1309180",
    "end": "1315920"
  },
  {
    "text": "let me repeat this. What it does is, first\nof all, it really",
    "start": "1315920",
    "end": "1321867"
  },
  {
    "text": "now assumes that both the\nnode and the link have failed. It doesn't really know. Now, it can definitively assume\nthat the link has failed.",
    "start": "1321867",
    "end": "1330320"
  },
  {
    "text": "The node may still be alive,\nbecause it may well be that there is a path like that.",
    "start": "1330320",
    "end": "1335600"
  },
  {
    "text": "And n wants to find that route\nvia A to that destination.",
    "start": "1335600",
    "end": "1341328"
  },
  {
    "text": "So what it does is\nreally two things. The first thing\nit does is it may have routes in its routing\ntable going through that link.",
    "start": "1341328",
    "end": "1348175"
  },
  {
    "text": "This link is now\nconsidered dead. And therefore, it should\nremove those routes. And then in subsequent\nadvertisements,",
    "start": "1348175",
    "end": "1353390"
  },
  {
    "text": "it should make sure that\nthe cost to that destination is infinity, which is why you\nwould remove it and replace",
    "start": "1353390",
    "end": "1360560"
  },
  {
    "text": "the cost to be infinity\nso that you tell the other guys that\npreviously I told you I could get to B with\nthe cost of five,",
    "start": "1360560",
    "end": "1366530"
  },
  {
    "text": "but really now it's infinity. The second thing that's done\nin the link state protocol is when you advertise-- you\nno longer advertise that link.",
    "start": "1366530",
    "end": "1373580"
  },
  {
    "text": "So really, the answer\nto your question is it assumes that\nthe link has failed. It makes no determination\nabout the node.",
    "start": "1373580",
    "end": "1381049"
  },
  {
    "text": "Yes? AUDIENCE: [INAUDIBLE]. ",
    "start": "1381050",
    "end": "1386410"
  },
  {
    "text": "PROFESSOR: Yes. A good protocol--\nand this will be tested in your lab\neight, in p-set eight, is if a link fence and\neventually comes back up,",
    "start": "1386410",
    "end": "1393890"
  },
  {
    "text": "we would like for you to\nactually find that answer. And this is an\nimportant requirement.",
    "start": "1393890",
    "end": "1398893"
  },
  {
    "text": "So if the broadcast--\nthat's why all the stuff that's done in the background\nis done periodically. So if a link comes\nback up, you want",
    "start": "1398893",
    "end": "1404230"
  },
  {
    "text": "to find the correct answer.  Any other questions?",
    "start": "1404230",
    "end": "1411559"
  },
  {
    "text": "OK. So let me apply this idea\nto this picture here. So what happened here\nwas this thing failed.",
    "start": "1411560",
    "end": "1417550"
  },
  {
    "text": "So C is, at this point in time-- let's assume we're doing\ndistance vector, this protocol here-- so C is going to assume\nthat this link has failed.",
    "start": "1417550",
    "end": "1426430"
  },
  {
    "text": "And therefore, it tells\nall of the other guys in its next advertisement-- it tells these other\nguys that it no longer",
    "start": "1426430",
    "end": "1434260"
  },
  {
    "text": "has a route to destination\nD. And it does that",
    "start": "1434260",
    "end": "1440500"
  },
  {
    "text": "by sending in its next\nlink state advertisement. Previously, it would have sent--",
    "start": "1440500",
    "end": "1446820"
  },
  {
    "text": "you know what? Did I tell everybody\nthat you send out the destination and the\nroute in the links-- in the advertisement?",
    "start": "1446820",
    "end": "1452370"
  },
  {
    "text": "I may have done that. I meant the destination\nand the cost. So maybe I should call this the\ncost and change that to route.",
    "start": "1452370",
    "end": "1460450"
  },
  {
    "text": "So this is the stuff that's\nsent in the advertisements. And these two columns\nare in the routing table.",
    "start": "1460450",
    "end": "1465940"
  },
  {
    "text": "But anyway, right\nnow here what would be advertised as D\nat a cost of three,",
    "start": "1465940",
    "end": "1473100"
  },
  {
    "text": "we replace that now\nwith D with the cost of infinity in\nour advertisements to our neighbors.",
    "start": "1473100",
    "end": "1479440"
  },
  {
    "text": "So that's what C\nwould advertise. And B, when it receives\nthat, would now",
    "start": "1479440",
    "end": "1485430"
  },
  {
    "text": "find that the route\nthat it gets along here had previously a cost of four. But now it says\nthat it's replaced",
    "start": "1485430",
    "end": "1492480"
  },
  {
    "text": "with the cost of infinity. So it will replace-- this routing table\nentry would go away. And it would replace it with no\nroute and a cost of infinity.",
    "start": "1492480",
    "end": "1501179"
  },
  {
    "text": "And that's what would propagate. Now, these advertisements\nare done periodically. So what D is doing,\nof course, is",
    "start": "1501180",
    "end": "1508350"
  },
  {
    "text": "to send out two advertisements,\none this way and one that way. Now, this thing is\nnot going to reach, because this link\nno longer is alive.",
    "start": "1508350",
    "end": "1516510"
  },
  {
    "text": "But this advertisement works. So when A receives the next\ndistance vector advertisement",
    "start": "1516510",
    "end": "1522630"
  },
  {
    "text": "from D, it now knows that\nit has a cost-- you know,",
    "start": "1522630",
    "end": "1528540"
  },
  {
    "text": "that link is actually alive\nand it has a route going there. Now, this particular\nexample is a little tricky,",
    "start": "1528540",
    "end": "1534000"
  },
  {
    "text": "because what's happening here,\nof course, is that A previously had two ways of getting to D--",
    "start": "1534000",
    "end": "1539620"
  },
  {
    "text": "4 plus 3 this way,\nor 7 that way. If it were previously\nusing that,",
    "start": "1539620",
    "end": "1545580"
  },
  {
    "text": "then A would also have no\nroute to the destination. And then it would have\nto wait for this guy",
    "start": "1545580",
    "end": "1551400"
  },
  {
    "text": "to send that route. So when it sent that route, A\nwould now have a valid route",
    "start": "1551400",
    "end": "1556620"
  },
  {
    "text": "to the destination. And in A's next advertisement,\nit would send that route over to these two guys.",
    "start": "1556620",
    "end": "1562230"
  },
  {
    "text": "So it would send out saying\nthat D is at cost seven. And it would do the\nsame thing here.",
    "start": "1562230",
    "end": "1568480"
  },
  {
    "text": "The D is at cost 7\nto C. Now, C, when it receives the\nnext advertisement",
    "start": "1568480",
    "end": "1573840"
  },
  {
    "text": "that D is at cost 7,\ncompares that route against its current route, which\nis now infinity, and replaces",
    "start": "1573840",
    "end": "1580800"
  },
  {
    "text": "in its routing table\nentry D infinity with D, this link here, and a cost\nof 4 plus 7, which is 11.",
    "start": "1580800",
    "end": "1589000"
  },
  {
    "text": "So it would replace it with\nD. Let me call this L1, L1, and a cost of 11.",
    "start": "1589000",
    "end": "1594480"
  },
  {
    "text": "And then on its\nnext advertisement, C would send that out to B\naccording to that advertisement",
    "start": "1594480",
    "end": "1600750"
  },
  {
    "text": "schedule. And similarly here, S, when\nit receives this from A",
    "start": "1600750",
    "end": "1606300"
  },
  {
    "text": "would, on its next\nadvertisement, after integrating the\nroute to destination D, which would have a\ncost of 1 plus 7, 8,",
    "start": "1606300",
    "end": "1613320"
  },
  {
    "text": "it would send out an\nadvertisement this way, which would have a cost of 8.",
    "start": "1613320",
    "end": "1620940"
  },
  {
    "text": "And B, when it receives\nboth of these things, would compare a cost of 8 on\nthis link against a cost of 1",
    "start": "1620940",
    "end": "1629450"
  },
  {
    "text": "plus 4 plus 7, which is 12. And it would find that\n8 is smaller than 12.",
    "start": "1629450",
    "end": "1634970"
  },
  {
    "text": "And therefore, B\nwould use this way of getting to the destination. Does that make sense? Yes?",
    "start": "1634970",
    "end": "1640828"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. ",
    "start": "1640828",
    "end": "1648605"
  },
  {
    "text": "PROFESSOR: Well, it's\nreceiving hello packets from all its neighbors. And it's just, if a link is\nalive and a hello shows up,",
    "start": "1648605",
    "end": "1655160"
  },
  {
    "text": "it processes it. And the moment the\nfirst hello shows up, it declares the link\nto be alive again. Finding that someone is\nalive is a lot easier",
    "start": "1655160",
    "end": "1661640"
  },
  {
    "text": "than finding that they're\ndead, at least if they're in networks. It's probably true in life, too.",
    "start": "1661640",
    "end": "1666872"
  },
  {
    "text": "But it's certainly\ntrue of networks because all you have to know-- I mean, assuming there's no\nmalicious nodes, detecting",
    "start": "1666872",
    "end": "1673520"
  },
  {
    "text": "that a node is alive,\nit takes one packet. Detecting that a node is\ndead, you're not sure. Maybe the link was down.",
    "start": "1673520",
    "end": "1679190"
  },
  {
    "text": "Maybe it was just\na transit failure. Maybe a packet was lost. So it's a lot harder to find\nthat something has crashed",
    "start": "1679190",
    "end": "1684980"
  },
  {
    "text": "than it is to find that\nsomething's working. But yeah, so you keep\nlistening for hello packets.",
    "start": "1684980",
    "end": "1693410"
  },
  {
    "text": "OK, so this is how it converges. Now eventually, of\ncourse, because there's",
    "start": "1693410",
    "end": "1699020"
  },
  {
    "text": "some correct working\npath, eventually it will all converge to\nthe correct answer. If later at some point and\nthen this link comes back up,",
    "start": "1699020",
    "end": "1706789"
  },
  {
    "text": "the same thing occurs,\nbecause all of this stuff is being done periodically. And so periodically,\nthese advertisements",
    "start": "1706790",
    "end": "1712460"
  },
  {
    "text": "are going to be sent. C is going to find that\nthere's a better route to go to D via this link as 0.",
    "start": "1712460",
    "end": "1718330"
  },
  {
    "text": "It advertises D\nnow at a cost of 4. And eventually all of\nthe nodes figure it out. And they converge back\nto the right answer.",
    "start": "1718330",
    "end": "1725450"
  },
  {
    "text": "OK. And you can see that the\nlink state protocol-- the convergence is actually\na little bit easier because again, there--",
    "start": "1725450",
    "end": "1732380"
  },
  {
    "text": "the nodes are periodically\nadvertising these links. So what's going to happen\nin a link state protocol is if you take the same picture--",
    "start": "1732380",
    "end": "1738730"
  },
  {
    "text": "and previously the\nnodes all had routes. And many of those routes\nwent through that link.",
    "start": "1738730",
    "end": "1743830"
  },
  {
    "text": "You have to wait for the next\nlink state advertisement, which would tell you after this\nhello protocol discovers that C",
    "start": "1743830",
    "end": "1750350"
  },
  {
    "text": "discovers that this\nlink has failed, it takes that next link\nstate protocol advertised-- link state advertisement\nby which all",
    "start": "1750350",
    "end": "1757370"
  },
  {
    "text": "of the nodes through\nthe flooding process discover that this\nlink has failed. And they all run\nDijkstra's algorithm again.",
    "start": "1757370",
    "end": "1763429"
  },
  {
    "text": "And they will find the\ncorrect new answer, which will take\nthem through paths that bypass this failed link.",
    "start": "1763430",
    "end": "1771970"
  },
  {
    "text": "Now, the same logic\napplies in both protocols to when a node fails. If this node were to\nfail, you can sort of",
    "start": "1771970",
    "end": "1777160"
  },
  {
    "text": "think through-- the\nnode failing is actually equivalent to all of the links\ncoming out of the node failing. So it's a somewhat\nharder problem",
    "start": "1777160",
    "end": "1783669"
  },
  {
    "text": "in terms of just making sure\nthat you're able to find the routes correctly. But this node failing is\nreally the same as all",
    "start": "1783670",
    "end": "1790660"
  },
  {
    "text": "of the links attached\nto that node failing. And in a link state\nprotocol, it'll eventually-- you'll\ndiscover that.",
    "start": "1790660",
    "end": "1796007"
  },
  {
    "text": "And all of the nodes will\ncompute routes this way. And similarly in a\ndistance vector protocol that's what happens.",
    "start": "1796007",
    "end": "1802485"
  },
  {
    "text": "Now, so far in\nthis picture, I've assumed that once you have these\nfailures and then you pause,",
    "start": "1802485",
    "end": "1808620"
  },
  {
    "text": "nothing else happens. There's no more failures,\nno packets that are lost, and so on. But life's actually not so kind.",
    "start": "1808620",
    "end": "1815080"
  },
  {
    "text": "What will happen in practice\nis that, first of all, before I get to why this stuff\nis a lot more complicated,",
    "start": "1815080",
    "end": "1821980"
  },
  {
    "text": "does everyone understand\nhow these things work and how they converge\ncorrectly to the right answer",
    "start": "1821980",
    "end": "1827020"
  },
  {
    "text": "after failure and after\nrecovery from failure? Any questions?",
    "start": "1827020",
    "end": "1832570"
  },
  {
    "text": " OK. So now let me tell\nyou all the ways in which this story goes wrong.",
    "start": "1832570",
    "end": "1838380"
  },
  {
    "text": " The first way the\nstory goes wrong is--",
    "start": "1838380",
    "end": "1845748"
  },
  {
    "text": "let me do it in the\ncontext of a link state protocol with a very,\nvery simple picture. Let's say you have--",
    "start": "1845748",
    "end": "1851350"
  },
  {
    "text": "I think I have a slide.  All right. Let's say you have the picture\nthat I've shown up there,",
    "start": "1851350",
    "end": "1860630"
  },
  {
    "text": "so very, very simple picture. There's A, B, and D.\nD is the destination. And this is some path.",
    "start": "1860630",
    "end": "1866790"
  },
  {
    "text": "So let's say that what\nhappens is that normally when there's no failures, the way\nto go from B to D is via A.",
    "start": "1866790",
    "end": "1873770"
  },
  {
    "text": "So B, A, D. And A\ngoes to D directly. Now, let's assume\nthat this link fails.",
    "start": "1873770",
    "end": "1880610"
  },
  {
    "text": "If that link fails\nand things work great, what's going to happen is\nthat in the next link state advertisement, A tells B\nthat AD no longer exists.",
    "start": "1880610",
    "end": "1890450"
  },
  {
    "text": "A knows the correct\nlink state from B. And so it computes its path\nvia B, its route via B.",
    "start": "1890450",
    "end": "1897320"
  },
  {
    "text": "And similarly, B realizes\nthat AD doesn't exist anymore. And it computes an\nalternate route that way.",
    "start": "1897320",
    "end": "1905000"
  },
  {
    "text": "But let's say what\nhappens is that AD fails. And then in the next link state\nadvertisement that A sends out,",
    "start": "1905000",
    "end": "1912660"
  },
  {
    "text": "that packet is lost. Let's say that A's link\nstate advertisement to B is just lost.",
    "start": "1912660",
    "end": "1918390"
  },
  {
    "text": "Packets could get lost. Now we have a problem because\nA knows that this has failed.",
    "start": "1918390",
    "end": "1925280"
  },
  {
    "text": "And therefore, when it computes\nits Dijkstra's algorithm or shortest path algorithm,\nit knows that what it wants",
    "start": "1925280",
    "end": "1930740"
  },
  {
    "text": "is a route going like that. But B, on the\nother hand, doesn't know that link AD has\nfailed, because it",
    "start": "1930740",
    "end": "1936920"
  },
  {
    "text": "didn't see that link state\nadvisement which was lost. So what B does is compute\nits routing table entry,",
    "start": "1936920",
    "end": "1943140"
  },
  {
    "text": "which is the same as\nit was before, going through that link over here. ",
    "start": "1943140",
    "end": "1950720"
  },
  {
    "text": "Now you have a\nproblem because when A gets a packet\nthat it now-- a data packet that it wants to send\nto destination D, previously",
    "start": "1950720",
    "end": "1957137"
  },
  {
    "text": "it sent it this way. But now it knows\nthat link has failed. So it sends the packet to\nB, because its route for D",
    "start": "1957137",
    "end": "1962170"
  },
  {
    "text": "is via B. Well, B\ngets that packet and looks it up in\nits routing table.",
    "start": "1962170",
    "end": "1967539"
  },
  {
    "text": "And B believes that the\nway to get to D is via A. So it sends it back to A. Well, A gets that packet\nand says, oh, that's great.",
    "start": "1967540",
    "end": "1974350"
  },
  {
    "text": "This is a packet for\ndestination D. I look it up in my routing table. It goes via B. And\nthis thing [INAUDIBLE]",
    "start": "1974350",
    "end": "1980679"
  },
  {
    "text": "for pretty much as\nlong as you want. This thing here is the simplest\nexample of a general phenomenon",
    "start": "1980680",
    "end": "1987429"
  },
  {
    "text": "called a routing loop. So the first thing\nthat can happen when-- during the process\nof route convergence,",
    "start": "1987430",
    "end": "1994000"
  },
  {
    "text": "various kinds of pathologies\nand problematic conditions could happen. And one of them\nis a routing loop. ",
    "start": "1994000",
    "end": "2002310"
  },
  {
    "text": "The second thing\nthat could happen-- and I showed you that here-- where during the\nprocess of convergence,",
    "start": "2002310",
    "end": "2008460"
  },
  {
    "text": "C does not have a\nroute to this link-- to the destination\nD. But B thought it had a route going via\nC. But in fact, C just",
    "start": "2008460",
    "end": "2015750"
  },
  {
    "text": "dropped that packet. That's the second\ncondition that happens. It's a dead end. ",
    "start": "2015750",
    "end": "2021522"
  },
  {
    "text": "So both of these things can\nhappen during the process of convergence. Now, these routing\nloops are particularly problematic because when\nyou have a routing loop,",
    "start": "2021522",
    "end": "2028470"
  },
  {
    "text": "this is an example of\na two-hop routing loop. A goes to B. B goes to A goes\nto B. So it bounces twice.",
    "start": "2028470",
    "end": "2034840"
  },
  {
    "text": "But you can have more\ncomplicated routing loops. You could have a routing\nloop with four hops that",
    "start": "2034840",
    "end": "2040110"
  },
  {
    "text": "looks like-- or four\nnodes involved, as opposed to two nodes, where\nthis is destination D.",
    "start": "2040110",
    "end": "2046409"
  },
  {
    "text": "And this A thinks that\nyou have to go that way. B thinks that you\nhave to go this way. C thinks you have\nto go this way.",
    "start": "2046410",
    "end": "2052690"
  },
  {
    "text": "And let's call this guy E. He\nthinks you have to go that way. And this could happen. So you end up with\npackets cycling around.",
    "start": "2052690",
    "end": "2059679"
  },
  {
    "text": "Now, these packets\ncycling around-- you know, there's\nreally no way to-- once you have routing table\nentries that have somehow",
    "start": "2059679",
    "end": "2068040"
  },
  {
    "text": "converged, until it gets\nfixed, somehow if they've converged to routes that--",
    "start": "2068040",
    "end": "2073739"
  },
  {
    "text": "where for B, you have\nto use this link, and C has to use this\nlink, and so forth, and you get a cycle,\nwhat ends up happening",
    "start": "2073739",
    "end": "2080429"
  },
  {
    "text": "is these packets cycle forever. There's really no way to avoid\nthe packets cycling forever.",
    "start": "2080430",
    "end": "2086190"
  },
  {
    "text": " Now, this is, of course--\neventually this will be fixed. If the routing protocol\neventually converges,",
    "start": "2086190",
    "end": "2092940"
  },
  {
    "text": "it will eventually\ndiscover that this is wrong and find the correct answer. But during the process\nof convergence,",
    "start": "2092940",
    "end": "2098610"
  },
  {
    "text": "bad things could\nhappen like this. And that's why we have on\npackets in packet switch networks a field called\nthe hop limit field.",
    "start": "2098610",
    "end": "2106620"
  },
  {
    "text": "And that's on a data packet. So you have the source\nof the packet sets a hop limit-- let's say 32.",
    "start": "2106620",
    "end": "2112980"
  },
  {
    "text": "It just says that I need\nto get to the destination and I know it shouldn't\ntake more than 32 hops, no matter what happens.",
    "start": "2112980",
    "end": "2119070"
  },
  {
    "text": "And then every node that-- every\nswitch that gets this packet reduces the hop limit by 1.",
    "start": "2119070",
    "end": "2125340"
  },
  {
    "text": "And eventually when the\nhop limit gets to zero, the packet's discarded. So this is a way to flush\npackets out of the network.",
    "start": "2125340",
    "end": "2131260"
  },
  {
    "text": "And usually you use this\nmechanism to handle the case when you get stuck\nin a routing loop,",
    "start": "2131260",
    "end": "2137963"
  },
  {
    "text": "you don't want these packets\nto cycle around forever and ever and ever, because these\npackets move around the network",
    "start": "2137963",
    "end": "2143009"
  },
  {
    "text": "in milliseconds. And the routing\nprotocols take minutes to converge, or many,\nmany seconds to converge.",
    "start": "2143010",
    "end": "2148260"
  },
  {
    "text": "So that's many,\nmany milliseconds. These packets could remain\nin the network forever and ever using the bandwidth\nand no one's getting any use out",
    "start": "2148260",
    "end": "2154080"
  },
  {
    "text": "of it. So you have this hop limit\nfield to flush packets out of the system. But of course, what\nwe'd like to do",
    "start": "2154080",
    "end": "2160320"
  },
  {
    "text": "is to design protocols with\nguaranteed no routing loops at all. Unfortunately, it's\nimpossible to do that.",
    "start": "2160320",
    "end": "2167320"
  },
  {
    "text": "But what we can try to do\nis to reduce and mitigate the effects of routing loops.",
    "start": "2167320",
    "end": "2173040"
  },
  {
    "text": "Now, I want to go through a few\nmore examples of routing loops in-- this is in the link\nstate protocol.",
    "start": "2173040",
    "end": "2178717"
  },
  {
    "text": "I want to actually\nnow talk about what happens with a distance\nvector protocol and show you why this basic,\nsimple distance vector",
    "start": "2178717",
    "end": "2186047"
  },
  {
    "text": "protocol, which is the\nfirst routing protocol that was invented, has some problems\nand how we go about fixing it.",
    "start": "2186047",
    "end": "2191253"
  },
  {
    "text": "And eventually I'll talk\nabout how this is all used on the internet today.",
    "start": "2191253",
    "end": "2196720"
  },
  {
    "text": "So here's how a\ndistance protocol-- a distance vector\nprotocol might get stuck in a weird\nkind of routing loop.",
    "start": "2196720",
    "end": "2205690"
  },
  {
    "text": "So let's take this example\nhere where you have five nodes and we're all interested in\nfinding routes to destination",
    "start": "2205690",
    "end": "2212310"
  },
  {
    "text": "E. And the general lesson\nI want to get at here is that a distance vector\nprotocol is extremely simple,",
    "start": "2212310",
    "end": "2218079"
  },
  {
    "text": "but it only works\non small networks. And for bigger networks,\nwe want something better.",
    "start": "2218080",
    "end": "2223950"
  },
  {
    "text": "So that's where\nthe story's going. So let me refresh where we\nare, all the discussion I",
    "start": "2223950",
    "end": "2229200"
  },
  {
    "text": "had so far. So let's assume that link\nAC fails in this picture.",
    "start": "2229200",
    "end": "2234557"
  },
  {
    "text": "So what you would like to--\nand assume that all link costs are 1. So we don't worry about\ncosts at this point.",
    "start": "2234558",
    "end": "2240300"
  },
  {
    "text": "What you want to have happen is\nfor A to discover that this-- A discovers that's failed. And when the routing\nconverges, you",
    "start": "2240300",
    "end": "2246900"
  },
  {
    "text": "would like A to use this link\nas its route to destination E. And the cost would be 1,\n1, 1, which would be 3.",
    "start": "2246900",
    "end": "2255039"
  },
  {
    "text": "All right. So when A discovers failure,\nit sends a cost of E is infinity to its neighbor--\nin particular, to B.",
    "start": "2255040",
    "end": "2262770"
  },
  {
    "text": "And then B, of\ncourse, has a route to destination E at cost 2.",
    "start": "2262770",
    "end": "2268090"
  },
  {
    "text": "B advertises that to\nA. And then A says, now I have a route to\ndestination E. And thus, this",
    "start": "2268090",
    "end": "2274020"
  },
  {
    "text": "is an example of a good\nconverging routing protocol. Everything's good.",
    "start": "2274020",
    "end": "2279277"
  },
  {
    "text": "Now, let's assume I\ncomplicate the picture. Let's assume that\nlink BD also fails.",
    "start": "2279278",
    "end": "2284820"
  },
  {
    "text": "So now what's the\ncorrect answer? Well, these two guys\nhave a route to E.",
    "start": "2284820",
    "end": "2290850"
  },
  {
    "text": "But the network has\nbecome disconnected. So the correct answer, the\ncorrect convergent answer here is that A and B both\ndiscover and instantiate",
    "start": "2290850",
    "end": "2299270"
  },
  {
    "text": "in the routing\ntables entries that say that E is at\na cost of infinity because there's no\npath, which means",
    "start": "2299270",
    "end": "2305010"
  },
  {
    "text": "that it's an infinite cost. So when a packet arrives\nat B for destination DE,",
    "start": "2305010",
    "end": "2310800"
  },
  {
    "text": "you just drop the packet. But this could happen. So here's an example\nof how that happens.",
    "start": "2310800",
    "end": "2317020"
  },
  {
    "text": "So let's say that\nthis link fails. B discovers that through\nthe hello protocol.",
    "start": "2317020",
    "end": "2322529"
  },
  {
    "text": "And at this point, B changes\nits routing table entry so that E is at infinity.",
    "start": "2322530",
    "end": "2329190"
  },
  {
    "text": "B had previously sent\ninformation to A saying that B was-- E was at distance 2 or cost 2.",
    "start": "2329190",
    "end": "2336360"
  },
  {
    "text": "And now it says,\nwell, I told you that E was at cost 2 before. But I'm changing my mind.",
    "start": "2336360",
    "end": "2341520"
  },
  {
    "text": "It's at cost infinity. And A says, OK. My entry for E now has cost\ninfinity and both of them",
    "start": "2341520",
    "end": "2348630"
  },
  {
    "text": "have converged correctly\nto the right answer. Now, unfortunately,\nthat's not the only thing",
    "start": "2348630",
    "end": "2354120"
  },
  {
    "text": "that could happen. This was in the lucky situation\nwhen B discovered it had failed",
    "start": "2354120",
    "end": "2359310"
  },
  {
    "text": "and immediately sent\nout its cost to A. But what could happen\nis a little different.",
    "start": "2359310",
    "end": "2365530"
  },
  {
    "text": "What could happen\nis that B could discover that D has failed\nand change its routing table",
    "start": "2365530",
    "end": "2373380"
  },
  {
    "text": "entry to infinity. But before it gets a chance\nto send out its advertisement to A--",
    "start": "2373380",
    "end": "2379140"
  },
  {
    "text": "or perhaps it sends\nout its advertisement with a cost of infinity\nto A, but it got lost--",
    "start": "2379140",
    "end": "2384368"
  },
  {
    "text": "in either of those\ncases, what could happen is A could send out\nits routing table cost to B for destination\nE, because that's what's",
    "start": "2384368",
    "end": "2393780"
  },
  {
    "text": "happening periodically, right? Every node is\nperiodically running this. And the times are\nall asynchronous. Every node has its own notion\nof when it should send out",
    "start": "2393780",
    "end": "2401220"
  },
  {
    "text": "its advertisement. So what happens now is A sends\nout an advertisement to B",
    "start": "2401220",
    "end": "2407790"
  },
  {
    "text": "saying it has a route to\ndestination E at a cost of 3,",
    "start": "2407790",
    "end": "2412810"
  },
  {
    "text": "which is very valid, right? After all, A does have a\nroute in its routing table",
    "start": "2412810",
    "end": "2418580"
  },
  {
    "text": "to E, whose cost is 3. It so happens it goes\nthrough B. But A doesn't yet know that that\nlink BD has failed.",
    "start": "2418580",
    "end": "2425040"
  },
  {
    "text": " Now we're a little\nbit in trouble because B now believes that\nits routing table entry for E",
    "start": "2425040",
    "end": "2432960"
  },
  {
    "text": "is at cost of infinity because\nBD has failed that link. And now it sees an advertisement\nfrom A with a better cost.",
    "start": "2432960",
    "end": "2442490"
  },
  {
    "text": "The route says,\nwow, this is cool. I now have a path\nof cost 3 via A",
    "start": "2442490",
    "end": "2448329"
  },
  {
    "text": "to E, which is better\nthan my cost of infinity. And so I'm going to assume\nthat I have an entry",
    "start": "2448330",
    "end": "2455319"
  },
  {
    "text": "to E at a cost of 4. So now you can see\nthat this is actually not a valid route at all.",
    "start": "2455320",
    "end": "2463350"
  },
  {
    "text": "Now, B actually,\non the face of it, has no way of knowing if A is\ntelling it a different route.",
    "start": "2463350",
    "end": "2468660"
  },
  {
    "text": "So it could\nconceivably be the case that A has a different route\ngoing that way whose cost is 3.",
    "start": "2468660",
    "end": "2476640"
  },
  {
    "text": "And A can legitimately\nhave a cost of 3 to E that it could be\ntelling B about.",
    "start": "2476640",
    "end": "2483059"
  },
  {
    "text": "But in this protocol,\nthere's no way for B to distinguish that case\nfrom the case where A is just",
    "start": "2483060",
    "end": "2488670"
  },
  {
    "text": "repeating to B a route\nthat it received via B. But it's just telling it\nthat it has a route via B.",
    "start": "2488670",
    "end": "2495550"
  },
  {
    "text": "Now, B, therefore, says that\nit has a cost of 4 to E. And it sends that to\nA. And A says, whoa.",
    "start": "2495550",
    "end": "2502020"
  },
  {
    "text": "Previously, the cost was 3-- 2 from B. And now\nB is telling me that the cost is\n4, which means I",
    "start": "2502020",
    "end": "2507810"
  },
  {
    "text": "need to make my cost equal\nto 4 plus 1, which is 5. And I'm going to\nsend that back down.",
    "start": "2507810",
    "end": "2513570"
  },
  {
    "text": "B says, all right. I've got a cost of 5. Previously, that same\nthing had a cost of 3. So now I'm going\nto make my cost 6.",
    "start": "2513570",
    "end": "2520901"
  },
  {
    "text": "And this goes on forever. Now, in the meantime, if\nthere are packets showing up at either A or B\nfor destination E,",
    "start": "2520901",
    "end": "2526895"
  },
  {
    "text": "they're just going to go\nbouncing between these two guys. This is a routing loop.",
    "start": "2526895",
    "end": "2532530"
  },
  {
    "text": "Now, when does this stop? When do these guys stop sending\nthese incrementing costs?",
    "start": "2532530",
    "end": "2540065"
  },
  {
    "text": "Sorry? AUDIENCE: [INAUDIBLE]. PROFESSOR: Yeah. You need a value of infinity.",
    "start": "2540065",
    "end": "2545990"
  },
  {
    "text": "You need to say\nthat, at some point, they're going to reach infinity\nand we're going to stop. So in other words,\nfor this protocol",
    "start": "2545990",
    "end": "2551570"
  },
  {
    "text": "as it's presented to converge\nin a legitimate amount-- reasonable amount of time,\nyour value of infinity",
    "start": "2551570",
    "end": "2557030"
  },
  {
    "text": "should be small. So this thing has\na colorful name. It's called counting\nto infinity.",
    "start": "2557030",
    "end": "2563270"
  },
  {
    "text": "Now, in reality, in any network,\nthe cost of infinity cannot be smaller than the minimum--\nthe maximum minimum cost path.",
    "start": "2563270",
    "end": "2573760"
  },
  {
    "text": "If you have a minimum cost\npath that has a cost of 75, for whatever reason, infinity\nhad better be bigger than 75.",
    "start": "2573760",
    "end": "2581590"
  },
  {
    "text": "Right? So what it means\nis that you have a problem with this protocol. It works great on\nsmall networks.",
    "start": "2581590",
    "end": "2587950"
  },
  {
    "text": "But it only works\non small networks. And the reason for that is that\nit needs the value of infinity that's not very big.",
    "start": "2587950",
    "end": "2594830"
  },
  {
    "text": "So this is why distance\nvector protocols are only used for really\nsimple, small networks. And the moment the network\nbecomes a certain size",
    "start": "2594830",
    "end": "2602170"
  },
  {
    "text": "or when you want costs\nthat are large values, you really can't\nuse this protocol.",
    "start": "2602170",
    "end": "2607787"
  },
  {
    "text": "So how do you fix this problem?  Any ideas on how to\nsolve this problem?",
    "start": "2607788",
    "end": "2615580"
  },
  {
    "text": "Clearly the internet\nis pretty big. We're not counting to infinity\nthroughout the whole internet.",
    "start": "2615580",
    "end": "2621820"
  },
  {
    "text": "Or at least, we\ndon't think we are. So how would you\nfix this problem? Any ideas? ",
    "start": "2621820",
    "end": "2631369"
  },
  {
    "text": "Yes? AUDIENCE: [INAUDIBLE]. PROFESSOR: So we do have\na hop limit on packets. So all these packets\nmight have a hop limit.",
    "start": "2631370",
    "end": "2638119"
  },
  {
    "text": "So the packets don't remain in\nthe network for a long time. But that doesn't solve the\nproblem of the routing protocol",
    "start": "2638120",
    "end": "2643930"
  },
  {
    "text": "to converge takes a time\nwhich is this counting",
    "start": "2643930",
    "end": "2650625"
  },
  {
    "text": "to infinity problem. So you want a better\nsolution in some way. Yes? AUDIENCE: [INAUDIBLE].",
    "start": "2650625",
    "end": "2656805"
  },
  {
    "start": "2656805",
    "end": "2664996"
  },
  {
    "text": "PROFESSOR: OK. So that's one good\nidea, which is-- in fact, that's how\nthey started trying to solve this problem,\nwhich is, if you have",
    "start": "2664997",
    "end": "2673180"
  },
  {
    "text": "a route to a destination\ncoming from a neighbor, don't send back the\nsame route to them.",
    "start": "2673180",
    "end": "2680570"
  },
  {
    "text": "In other words, in this\ncase, A's route to E was via B. So A should not\nadvertise a route to E--",
    "start": "2680570",
    "end": "2689320"
  },
  {
    "text": "a route for destination\nE back to B. If you do that,\nthere's a name for it. It's called split\nhorizon and the notes",
    "start": "2689320",
    "end": "2695155"
  },
  {
    "text": "describe how this\nprotocol works. Or you could do even better. A could advertise to B that\nits route to destination E",
    "start": "2695155",
    "end": "2703660"
  },
  {
    "text": "has a cost of infinity,\nforcing B to definitely not use that route,\nno matter what",
    "start": "2703660",
    "end": "2709270"
  },
  {
    "text": "happens, because A\nperceived that route via B. So A should tell B that\nthe cost of that route is infinity because under\nno circumstances does A",
    "start": "2709270",
    "end": "2716770"
  },
  {
    "text": "want B to use the same\nroute that it received. So you could do that. The trouble with that is it\ndoesn't-- it solves these",
    "start": "2716770",
    "end": "2723303"
  },
  {
    "text": "two-hop loop problems, but it\ndoesn't solve four-hop loop problems. So you could have a situation\nwhere this link fails and C",
    "start": "2723303",
    "end": "2730960"
  },
  {
    "text": "discovers that. But before C sends\nout its update, B sends out its route to C.\nAnd so C thinks it can use B.",
    "start": "2730960",
    "end": "2738805"
  },
  {
    "text": "In the meantime, B thinks\nit has a route via A. So you might end up with\npackets cycling around",
    "start": "2738805",
    "end": "2744730"
  },
  {
    "text": "in longer hop loops. So that idea that you\nhad doesn't actually solve the more general problem.",
    "start": "2744730",
    "end": "2750110"
  },
  {
    "text": "So any other\nmodification or idea that can solve the problem? ",
    "start": "2750110",
    "end": "2761250"
  },
  {
    "text": "So one thing you\ncould do is something called path vector, which\nis what you could do is every node, rather than\njust sending the cost,",
    "start": "2761250",
    "end": "2769080"
  },
  {
    "text": "it could send the entire\nroute, that is-- sorry. It could send the entire path. It could send the\nlist of nodes that",
    "start": "2769080",
    "end": "2776250"
  },
  {
    "text": "corresponds to that particular\nroute in its routing table advertisement. So I'll show that\nwith a picture here.",
    "start": "2776250",
    "end": "2781620"
  },
  {
    "text": "So E could send out not\njust its destination and a cost, which previously, it\nwould say that to come to E, E",
    "start": "2781620",
    "end": "2789240"
  },
  {
    "text": "would say the cost is zero. But it could now say the cost\nis zero and the path is E.",
    "start": "2789240",
    "end": "2794700"
  },
  {
    "text": "And then each of these\nother guys, C and D, could send out their\nown advertisements",
    "start": "2794700",
    "end": "2802849"
  },
  {
    "text": "saying the cost is 2 or\nwhatever-- the cost is 1. But they could also say\nthat the path is the DE.",
    "start": "2802850",
    "end": "2808970"
  },
  {
    "text": "So D says that my path to get\nto E is DE in its advertisement. And B here, when\nit receives that,",
    "start": "2808970",
    "end": "2815540"
  },
  {
    "text": "could send out its\nown path vector, which is the list of nodes\nor the list of switches",
    "start": "2815540",
    "end": "2825270"
  },
  {
    "text": "that corresponds to an actual\npath that's advertised. And now the rule for\nhow you integrate",
    "start": "2825270",
    "end": "2831630"
  },
  {
    "text": "a route into your routing\ntable entries is very simple. If you see an advertisement\nwith your own identity",
    "start": "2831630",
    "end": "2838380"
  },
  {
    "text": "in that advertisement,\nthen you know that that's just a\nrumor that you started or you were involved with, so\nyou shouldn't integrate it.",
    "start": "2838380",
    "end": "2844830"
  },
  {
    "text": "So in particular, in\nthis example here, if B, for example, were to\nsee an advertisement from A",
    "start": "2844830",
    "end": "2851280"
  },
  {
    "text": "with a path that was A, B, D, E,\nthen B wouldn't integrate that.",
    "start": "2851280",
    "end": "2856568"
  },
  {
    "text": "So what would happen in the\npicture I showed you before is if these two links were\nto fail, what would happen is that B would have--\nif that link failed,",
    "start": "2856568",
    "end": "2864510"
  },
  {
    "text": "B would have sent\nthat BDE over here. And when A advertises\nthat back to B,",
    "start": "2864510",
    "end": "2870480"
  },
  {
    "text": "it would have ABDE show up. And B now sees ABDE.",
    "start": "2870480",
    "end": "2875880"
  },
  {
    "text": "And B finds that its own\nname is in that vector or in that\nadvertisement and says,",
    "start": "2875880",
    "end": "2880890"
  },
  {
    "text": "I should pay no\nattention to that. And as long as you find\nyour own name somewhere in that list of nodes\nthat routing advertisement",
    "start": "2880890",
    "end": "2889890"
  },
  {
    "text": "went through, you know that\nyou shouldn't pay any attention to it because you were involved\nin creating that advertisement.",
    "start": "2889890",
    "end": "2896190"
  },
  {
    "text": "And so you shouldn't\npay attention to it. This protocol is\ncalled path vector. It's used on the\ninternet in something",
    "start": "2896190",
    "end": "2901872"
  },
  {
    "text": "called the Border\nGateway Protocol, which runs between\nautonomous systems. And that's actually what\nmakes the internet essentially",
    "start": "2901872",
    "end": "2910050"
  },
  {
    "text": "converge and not have\nthese routing loops that go between different\ninternet service providers.",
    "start": "2910050",
    "end": "2915212"
  },
  {
    "text": " Any questions, comments so\nfar about any of this stuff?",
    "start": "2915212",
    "end": "2922160"
  },
  {
    "text": " So let me summarize everything\nabout routing protocols.",
    "start": "2922160",
    "end": "2928422"
  },
  {
    "text": "And we pick this up in\nrecitation with some problems tomorrow. So the last two lectures\nin recitation, we've",
    "start": "2928423",
    "end": "2933619"
  },
  {
    "text": "spoken about the network layer. And the main problem that's\nsolved by the network layer is how to get packet\nrouting to work.",
    "start": "2933620",
    "end": "2940640"
  },
  {
    "text": "How do you find good paths\nbetween different nodes in the network, between\ndifferent switches",
    "start": "2940640",
    "end": "2945950"
  },
  {
    "text": "in the network?  Now, we've separated\nout the tasks of routing from forwarding.",
    "start": "2945950",
    "end": "2952680"
  },
  {
    "text": "Forwarding is what happens when\na packet arrives at a switch. There's a lookup that\nhappens in a routing table.",
    "start": "2952680",
    "end": "2958250"
  },
  {
    "text": "You take the destination. You look it up in\nthe table, find the link in the routing\ntable, and ship the packet.",
    "start": "2958250",
    "end": "2964000"
  },
  {
    "text": "So that's done--\nusually you want it to be done very, very fast. Routing is the process\nby which the nodes",
    "start": "2964000",
    "end": "2969210"
  },
  {
    "text": "create routing table entries. And that's a very\ndistributed process. It runs amongst all\nof the other-- all",
    "start": "2969210",
    "end": "2975240"
  },
  {
    "text": "of the switches in the network. We looked at two routing\nprotocols-- link state and distance vector.",
    "start": "2975240",
    "end": "2981190"
  },
  {
    "text": "In distance vector,\nthe computation is distributed with these\nBellman-Ford update steps.",
    "start": "2981190",
    "end": "2986250"
  },
  {
    "text": "And the distance\nvector protocol is very beautiful in that\nit's very, very simple. It works for small networks.",
    "start": "2986250",
    "end": "2992122"
  },
  {
    "text": "But to make the ideal\nwork for bigger networks, you have to enhance the\ndistance with the actual path.",
    "start": "2992122",
    "end": "2997590"
  },
  {
    "text": "And if you enhance\nit with the path, you actually avoid a lot\nof these routing loops that show up. You can't eliminate it.",
    "start": "2997590",
    "end": "3002780"
  },
  {
    "text": "But you can mitigate\nthe effect of it. In the link state\nprotocol, there's",
    "start": "3002780",
    "end": "3007918"
  },
  {
    "text": "actually more work that's done. There's a lot more information\nthat's flooded between nodes. But the protocol\nconverges quicker",
    "start": "3007918",
    "end": "3014400"
  },
  {
    "text": "than these distance vector and\npath vector protocols usually. Link state protocol, you flood\nthis neighbor information.",
    "start": "3014400",
    "end": "3020250"
  },
  {
    "text": "You consume more bandwidth. There's a lot more bandwidth\nthat's used in the network in flooding it. And the computation\nis centralized.",
    "start": "3020250",
    "end": "3025830"
  },
  {
    "text": "You run Dijkstra's\nshortest path. So what the internet\ndoes in general-- I'll pick up on this two\nlecture-- or three lectures",
    "start": "3025830",
    "end": "3031170"
  },
  {
    "text": "from now, when I talk about\nhow the internet really works and applies the\nconcepts we've studied. What you'll find is that\nnetworks like MIT's network",
    "start": "3031170",
    "end": "3038460"
  },
  {
    "text": "will run a protocol like-- a link state like protocol\nto achieve connectivity",
    "start": "3038460",
    "end": "3043530"
  },
  {
    "text": "between nodes inside MIT. And then routers at the\nedge of MIT connecting to other internet\nservice providers",
    "start": "3043530",
    "end": "3049140"
  },
  {
    "text": "run a path vector\nprotocol, like BGP. And all of these\nthings work together and they work because\nultimately, all of the switches",
    "start": "3049140",
    "end": "3055830"
  },
  {
    "text": "create these routing\ntable entries that have a mapping between\ndestinations and routes",
    "start": "3055830",
    "end": "3060870"
  },
  {
    "text": "or links that have to be used. So that's the routing story. We'll pick it up in\nrecitation tomorrow and see you back on Wednesday.",
    "start": "3060870",
    "end": "3069140"
  }
]