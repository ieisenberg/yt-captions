[
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "5412"
  },
  {
    "text": " FRANK SCHAFER: Yeah, so, yeah,\nI plan to split it in two parts,",
    "start": "5412",
    "end": "12850"
  },
  {
    "text": "so the first part is about\nordinary differential equations, so just a quick recap\nwhat an ordinary differential",
    "start": "12850",
    "end": "19560"
  },
  {
    "text": "equation actually\nis, and then we'll go into this kind of\nsensitivity analysis, so how to compute\nderivatives of solutions",
    "start": "19560",
    "end": "26310"
  },
  {
    "text": "of ordinary\ndifferential equations. And specifically, we will\npick out one very important",
    "start": "26310",
    "end": "31410"
  },
  {
    "text": "of these methods.  So, yeah, an ordinary\ndifferential equation",
    "start": "31410",
    "end": "37040"
  },
  {
    "text": "is basically described by\nthis kind of initial value problem, where we have the\nstate at a given initial time",
    "start": "37040",
    "end": "43340"
  },
  {
    "text": "t0 is equal to u0, and then\nthe dynamics of this state is described by this\nkind of time evolution.",
    "start": "43340",
    "end": "50820"
  },
  {
    "text": "So we have that the\nderivative of u is-- the time derivative of u\nis equal to this function f",
    "start": "50820",
    "end": "57649"
  },
  {
    "text": "that can depend on time,\non the state itself, and on some parameters p.",
    "start": "57650",
    "end": "63510"
  },
  {
    "text": "And the first natural\nquestion to ask is, basically, how do\nwe solve such an ODE?",
    "start": "63510",
    "end": "70980"
  },
  {
    "text": "And let's say the probably\nsimplest ODE I could imagine basically is one of a\nfree-falling particle",
    "start": "70980",
    "end": "79170"
  },
  {
    "text": "or a ball, which\nis described by-- well, probably, you\nhave all seen this--",
    "start": "79170",
    "end": "85260"
  },
  {
    "text": "by Newton's law, or something\nlike the acceleration is equal to minus the\ngravitational constant.",
    "start": "85260",
    "end": "92229"
  },
  {
    "text": "And for these kind of\neasy ordinary differential equations, right, we can\nsolve that analytically,",
    "start": "92230",
    "end": "99120"
  },
  {
    "text": "so we simply integrate\nthat equation twice, right? So we have that z\nprime is equal to some",
    "start": "99120",
    "end": "108330"
  },
  {
    "text": "offset minus g t minus t0.",
    "start": "108330",
    "end": "114435"
  },
  {
    "text": "And then we could\nintegrate it a second time, and we'd get, like, the\nfull analytical solution of the height, in that\ncase, with respect to time.",
    "start": "114435",
    "end": "123505"
  },
  {
    "text": " Here, on this\nslide, I did already something that's very\nmeaningful to solve",
    "start": "123505",
    "end": "130389"
  },
  {
    "text": "ODEs numerically, and that's,\nlike, we want to bring down these kind of ODEs, which\nare sometimes described",
    "start": "130389",
    "end": "137320"
  },
  {
    "text": "with second-order\nderivatives, to just first-order derivatives. And the basic trick\nis to introduce",
    "start": "137320",
    "end": "143349"
  },
  {
    "text": "this additional variable\nv, right, so the velocity in that case, which\ncan be written as--",
    "start": "143350",
    "end": "148840"
  },
  {
    "text": "right, so v of t is\nequal to dz of t dt.",
    "start": "148840",
    "end": "159370"
  },
  {
    "text": "OK, so for that kind of ODE, we\nknow the analytical solution, and it's basically\neasy to solve.",
    "start": "159370",
    "end": "164950"
  },
  {
    "text": "Now, coming back to the\nmore general case, where we have some nice\nfunction f, but solving",
    "start": "164950",
    "end": "174217"
  },
  {
    "text": "for the analytical\nsolution is tough, right, because integrating\nis already tough and solving these kind\nof initial value problems",
    "start": "174217",
    "end": "180130"
  },
  {
    "text": "is even tougher,\nwe can fall back to some numerical routines,\nbasically, to solve it.",
    "start": "180130",
    "end": "186470"
  },
  {
    "text": "And the easiest\nnumerical routine is called Euler\nsolver, where we--",
    "start": "186470",
    "end": "191740"
  },
  {
    "text": "and probably all of\nus could have come up with that by ourselves-- so\nwe simply discretize time.",
    "start": "191740",
    "end": "197930"
  },
  {
    "text": "So we introduce this\ntn, discrete time steps of our solution, and\nthen if we plug that",
    "start": "197930",
    "end": "205000"
  },
  {
    "text": "into the definition of the\nderivative, we get something like these finite\ndifference equations. So, right, if we see here,\nthe du dt would be u n plus 1",
    "start": "205000",
    "end": "214090"
  },
  {
    "text": "at the-- so that's basically\nthe state at the time tn plus 1 minus the state at the\ntime tn divided by delta t,",
    "start": "214090",
    "end": "221050"
  },
  {
    "text": "and if we bring the delta t and\nthe state to the other side, we get this explicit\nEuler method.",
    "start": "221050",
    "end": "227385"
  },
  {
    "text": "STEVEN JOHNSON:\nAnd last week, we talked about finite\ndifference approximations, so this is exactly\ntaking that derivative",
    "start": "227385",
    "end": "233530"
  },
  {
    "text": "and making a forward\ndifference approximation. FRANK SCHAFER: Yeah. Yeah, exactly. And you can have more\nsophisticated methods,",
    "start": "233530",
    "end": "240100"
  },
  {
    "text": "of course, to solve your ODEs,\nbut for the rest of today, it's basically enough\nto just think of,",
    "start": "240100",
    "end": "245470"
  },
  {
    "text": "if we don't know the\nanalytical solution, we can use some\nnumerical routine to solve for the state\nas a function of time.",
    "start": "245470",
    "end": "252250"
  },
  {
    "text": "And, yeah, actually, I wanted\nto implement that very quickly with you, like, for the case\nof the free-falling ball,",
    "start": "252250",
    "end": "260620"
  },
  {
    "text": "so for that kind of ODE. ",
    "start": "260620",
    "end": "267090"
  },
  {
    "text": "So let's define some\ninitial height, some kind",
    "start": "267090",
    "end": "272240"
  },
  {
    "text": "of initial velocity, the\ngravitational constant,",
    "start": "272240",
    "end": "280380"
  },
  {
    "text": "and, well, maybe let's\nsay that's basically",
    "start": "280380",
    "end": "285450"
  },
  {
    "text": "our parameter, g. We can say our initial\nstate, right, is then",
    "start": "285450",
    "end": "293800"
  },
  {
    "text": "this vector where\nwe stack together initial height and\ninitial velocity.",
    "start": "293800",
    "end": "299650"
  },
  {
    "text": " And we say maybe,\nin our task, we",
    "start": "299650",
    "end": "305939"
  },
  {
    "text": "want to integrate that\nequation from some initial time to some final time, and we have\nto provide this kind of time",
    "start": "305940",
    "end": "316640"
  },
  {
    "text": "discretization. Let's choose some small\ntime discretization.",
    "start": "316640",
    "end": "322220"
  },
  {
    "text": " Everybody's happy\nwith that so far? ",
    "start": "322220",
    "end": "330210"
  },
  {
    "text": "So then we want to define our\nODE function, which is also",
    "start": "330210",
    "end": "335460"
  },
  {
    "text": "called the vector field, where\nwe just insert the definitions I had on this slide, basically.",
    "start": "335460",
    "end": "342090"
  },
  {
    "text": "So we have that the derivative\nof the height with respect",
    "start": "342090",
    "end": "348080"
  },
  {
    "text": "to time is the velocity, right,\nwhich is here, in our case, now the second component. And we have that the\nderivative of the time",
    "start": "348080",
    "end": "355640"
  },
  {
    "text": "is equal to-- the\nderivative of the velocity with respect to time is\nequal to minus g, which",
    "start": "355640",
    "end": "361100"
  },
  {
    "text": "is on the right-hand\nside of the board, and then we return, basically,\nagain, the vector of these two.",
    "start": "361100",
    "end": "367642"
  },
  {
    "text": "STEVEN JOHNSON: We're going to\nget g from the parameters, p [INAUDIBLE]. FRANK SCHAFER: Oh, yeah. Let's say it like that.",
    "start": "367642",
    "end": "373560"
  },
  {
    "text": "Thanks.  And so now we want to\nimplement our Euler",
    "start": "373560",
    "end": "382320"
  },
  {
    "text": "solver, which should take-- well, the kind of function\nthat we want to solve,",
    "start": "382320",
    "end": "388199"
  },
  {
    "text": "we want it to take\nthe initial condition. Let's write it a\nbit more general.",
    "start": "388200",
    "end": "393960"
  },
  {
    "text": " The time span of\nthe simulation--",
    "start": "393960",
    "end": "400860"
  },
  {
    "text": "STEVEN JOHNSON: tspan. FRANK SCHAFER: tspan,\nyeah, and the parameters,",
    "start": "400860",
    "end": "406670"
  },
  {
    "text": "and maybe even dt. ",
    "start": "406670",
    "end": "412510"
  },
  {
    "text": "And let's say our time\nat some point will be-- so we make a copy so we don't\noverwrite into the array.",
    "start": "412510",
    "end": "420130"
  },
  {
    "text": "So that this is preserved,\nwe make a time grid. ",
    "start": "420130",
    "end": "427968"
  },
  {
    "text": "This is actually big enough\non the screen for everyone? Oh, good. ",
    "start": "427968",
    "end": "450690"
  },
  {
    "text": "Right, we have to be a bit\ncareful with the endpoint because we don't want\nit to step one too far. ",
    "start": "450690",
    "end": "460060"
  },
  {
    "text": "And then the update rule is\nbasically we take u at a given time, and that's-- whoops.",
    "start": "460060",
    "end": "469100"
  },
  {
    "text": " STEVEN JOHNSON: And you\ndon't need the deepcopy",
    "start": "469100",
    "end": "475890"
  },
  {
    "text": "since you're not overwriting\nu in place anyway. FRANK SCHAFER: That's true. I think I will need it later\nfor one modification, so--",
    "start": "475890",
    "end": "484895"
  },
  {
    "text": "STEVEN JOHNSON: But you\ndon't need any copy. FRANK SCHAFER: That's also true. OK. ",
    "start": "484895",
    "end": "492840"
  },
  {
    "text": "And let's say I'm not\ninterested in the full solution as a function of time, but\njust in the endpoint as--",
    "start": "492840",
    "end": "497880"
  },
  {
    "text": " OK, let's see if\nthat works already. ",
    "start": "497880",
    "end": "516289"
  },
  {
    "text": "All right, that's good. u should be at ti, for sure.",
    "start": "516289",
    "end": "521870"
  },
  {
    "start": "521870",
    "end": "529890"
  },
  {
    "text": "Yeah, we can check if that's the\ncorrect solution by plugging it into our analytical equation.",
    "start": "529890",
    "end": "535485"
  },
  {
    "text": " Let me just pull the form. ",
    "start": "535485",
    "end": "548470"
  },
  {
    "text": "Right, so we have now written\na numerical routine that spits out the state\nat a given time t,",
    "start": "548470",
    "end": "553540"
  },
  {
    "text": "and I think that\nlooks actually good. So we have t equal to 0, so\nour z should be z0 minus g--",
    "start": "553540",
    "end": "563560"
  },
  {
    "text": " minus v0 times 1 plus v0\ntimes 1 minus 1/2 times g.",
    "start": "563560",
    "end": "578935"
  },
  {
    "text": " And, yeah, that\nlooks basically good.",
    "start": "578935",
    "end": "584080"
  },
  {
    "text": "That's the discretization\nerror of the Euler method, and we could check the same\nfor the second component. STEVEN JOHNSON: Yeah, so\nthe correct answer is 0.1,",
    "start": "584080",
    "end": "590800"
  },
  {
    "text": "and then it's--\nit's, like, 0.105. FRANK SCHAFER: Yeah, it's-- yeah, exactly, it's slightly\noff because we have not the most",
    "start": "590800",
    "end": "596650"
  },
  {
    "text": "sophisticated numerical solver. OK, cool. So that's how we\nsolve ODEs numerically",
    "start": "596650",
    "end": "603130"
  },
  {
    "text": "if we don't have an\nanalytical solution, and, yeah, now we get into the\nkind of sensitivity analysis",
    "start": "603130",
    "end": "609460"
  },
  {
    "text": "if we have a numerical\nroutine available. So there are two different ways,\nfundamentally different ways,",
    "start": "609460",
    "end": "616480"
  },
  {
    "text": "to do sensitivity analysis. One is called discrete\nsensitivity analysis, and one is called continuous\nsensitivity analysis.",
    "start": "616480",
    "end": "624310"
  },
  {
    "text": "And the first one\nis basically you imagine that you wrote\nthat solver that we just",
    "start": "624310",
    "end": "629770"
  },
  {
    "text": "wrote in some language\nthat's compatible with automatic differentiation. And so we first discretize,\nbasically is the task,",
    "start": "629770",
    "end": "636070"
  },
  {
    "text": "and then we differentiate it. And the second one\nis basically we write a custom rule for\nthe sensitivity analysis,",
    "start": "636070",
    "end": "643640"
  },
  {
    "text": "and so we first\napproximate, basically, the gradient that we want to\ncompute and then differentiate",
    "start": "643640",
    "end": "650779"
  },
  {
    "text": "it-- and then discretize it. And for each of these methods,\nthese different paradigms,",
    "start": "650780",
    "end": "659230"
  },
  {
    "text": "basically, in either first\ndiscretizing and then differentiating or\nfirst differentiating and then discretizing, there\nare two different modes",
    "start": "659230",
    "end": "666280"
  },
  {
    "text": "that you also probably have\ncovered in the lecture already. You can either derive a forward,\nor also called tangent, mode",
    "start": "666280",
    "end": "672820"
  },
  {
    "text": "or a reverse, adjoint, mode. And depending on if you\nhave many input parameters",
    "start": "672820",
    "end": "677890"
  },
  {
    "text": "and a small number of\noutputs, one of these modes is basically preferred\nto each other.",
    "start": "677890",
    "end": "683200"
  },
  {
    "text": "So in the setting where you have\nmany parameters with respect to which you want to compute\na gradient or derivative,",
    "start": "683200",
    "end": "689350"
  },
  {
    "text": "you usually want to\nhave some adjoint mode, and if you have\nhigh memory demands,",
    "start": "689350",
    "end": "695560"
  },
  {
    "text": "you typically want to have these\ncontinuous sensitivity methods. So it's a very relevant\ncase to consider",
    "start": "695560",
    "end": "701620"
  },
  {
    "text": "these continuous adjoints,\nbasically, and that's what we will do today.",
    "start": "701620",
    "end": "708790"
  },
  {
    "text": "So what are\nsensitivities good for? Just as a recap, so\nsensitivity analysis basically just, well,\ndescribes what it says.",
    "start": "708790",
    "end": "717270"
  },
  {
    "text": "So we might be interested\nin just describing how maybe the height of our\nball would change if we slightly",
    "start": "717270",
    "end": "723780"
  },
  {
    "text": "perturb the parameter of\nthe differential equation, but we can also use the\ngradient of these ODEs to do more fancy stuff,\nas Steven mentioned,",
    "start": "723780",
    "end": "731880"
  },
  {
    "text": "like parameter estimation\nin, what, chemical reaction networks or so, or control\nfor whatever physical system",
    "start": "731880",
    "end": "739740"
  },
  {
    "text": "or chemical system\nyou have at hand. So once again, so for the\nfree-falling particle,",
    "start": "739740",
    "end": "745520"
  },
  {
    "text": "it might be the task that\nwe have some terminal cost or so, that could be this\nG of u at the final time,",
    "start": "745520",
    "end": "751760"
  },
  {
    "text": "and we are interested\nin maybe saying how the height\nchanges with respect to the gravitational constant.",
    "start": "751760",
    "end": "757050"
  },
  {
    "text": "And so the claim is\nthat this is always easy if we can solve the ODE\nanalytically, right,",
    "start": "757050",
    "end": "763370"
  },
  {
    "text": "so if we look at the\nsolution there of the ODE, can someone say what's the\nsensitivity that I wrote down,",
    "start": "763370",
    "end": "771020"
  },
  {
    "text": "like, the sensitivity of the\nfinal height with respect to g? ",
    "start": "771020",
    "end": "779330"
  },
  {
    "text": "Yup? AUDIENCE: Negative 1/2\nt minus [INAUDIBLE].. FRANK SCHAFER: Yeah,\nexactly, so and now we",
    "start": "779330",
    "end": "784870"
  },
  {
    "text": "will basically cover\nhow we do that if we don't have the analytic\nsolution available.",
    "start": "784870",
    "end": "789970"
  },
  {
    "text": "For this, we will have\nto do some derivation. Uh-huh. Yup. ",
    "start": "789970",
    "end": "798269"
  },
  {
    "text": "Let me move them. ",
    "start": "798270",
    "end": "804960"
  },
  {
    "text": "So we'll do continuous\nadjoins today.",
    "start": "804960",
    "end": "810680"
  },
  {
    "start": "810680",
    "end": "820330"
  },
  {
    "text": "So let's first write down\none of these cost functions which I just had in a\nbit more general way.",
    "start": "820330",
    "end": "825760"
  },
  {
    "text": "So we have some\ncost that depends on the state as a\nfunction of time and p,",
    "start": "825760",
    "end": "831750"
  },
  {
    "text": "where the state\nitself, of course,",
    "start": "831750",
    "end": "837130"
  },
  {
    "text": "also depends on the parameters. And we'll say that this\nfunction can be written as the--",
    "start": "837130",
    "end": "845205"
  },
  {
    "start": "845205",
    "end": "855394"
  },
  {
    "text": "all right, so we say we can-- we don't have, maybe,\njust the final value,",
    "start": "855394",
    "end": "860640"
  },
  {
    "text": "but we are interested\nin general in some functional on the solution\nof the differential equation.",
    "start": "860640",
    "end": "867252"
  },
  {
    "text": "AUDIENCE: And you can think\nof capital G and little g as just being scalar functions? FRANK SCHAFER: Yes. AUDIENCE: OK. FRANK SCHAFER: Yup.",
    "start": "867252",
    "end": "872640"
  },
  {
    "text": "Yup.  And now comes basically\nthe first nice trick",
    "start": "872640",
    "end": "878930"
  },
  {
    "text": "in this kind of derivation,\nand that's related to Lagrange multipliers. STEVEN JOHNSON: Do you want\nto write down the ODE that",
    "start": "878930",
    "end": "885808"
  },
  {
    "text": "at least satisfies? FRANK SCHAFER: Yeah,\nprobably a good idea.",
    "start": "885808",
    "end": "891209"
  },
  {
    "text": "All right, such that-- ",
    "start": "891210",
    "end": "901430"
  },
  {
    "text": "Oh, I see. ",
    "start": "901430",
    "end": "921272"
  },
  {
    "text": "OK, so the first trick\nthat we want to do is basically to add a 0 to\nthis kind of function, so--",
    "start": "921272",
    "end": "927149"
  },
  {
    "text": "STEVEN JOHNSON: Can\nwe pause to make sure we're understanding\nwhat you're doing? So you have some ODE,\nyou solve for u of t,",
    "start": "927150",
    "end": "934709"
  },
  {
    "text": "and then you're going to compute\na number at the end, capital G, by keeping the ODE solution\nand integrating some function",
    "start": "934710",
    "end": "942330"
  },
  {
    "text": "little g into that\nsolution, right? And the ODE depends\non some parameters,",
    "start": "942330",
    "end": "948180"
  },
  {
    "text": "and you want to\nfind the derivative of this final output,\ncapital G, with respect",
    "start": "948180",
    "end": "953550"
  },
  {
    "text": "to all those parameters of p. So little p might\nbe a vector, it",
    "start": "953550",
    "end": "959234"
  },
  {
    "text": "might be 10,000 reaction rates.",
    "start": "959234",
    "end": "966530"
  },
  {
    "text": "And capital G might\nbe the integral",
    "start": "966530",
    "end": "971710"
  },
  {
    "text": "of the squared difference\nbetween the ODE solution and some experimental data\non the chemical reaction,",
    "start": "971710",
    "end": "978863"
  },
  {
    "text": "you know, the\nconcentration, [INAUDIBLE].. ",
    "start": "978863",
    "end": "984192"
  },
  {
    "text": "FRANK SCHAFER: Yeah, exactly. Does everybody see\nwhy that's a 0? ",
    "start": "984192",
    "end": "991370"
  },
  {
    "text": "Right, so why-- STEVEN JOHNSON: Yeah, so,\nsorry, I was talking about that and then maybe you need\nto say what the 0 is",
    "start": "991370",
    "end": "1001740"
  },
  {
    "text": "FRANK SCHAFER: Right, so\nbecause, by definition, basically, our state fulfills\nthis ordinary differential",
    "start": "1001740",
    "end": "1009660"
  },
  {
    "text": "equation, we can introduce this\nkind of Lagrange multiplier, and that term is 0.",
    "start": "1009660",
    "end": "1015600"
  },
  {
    "text": "So if we add that term to\nthis kind of cost function, we basically do nothing, but\nwe have this free Lagrange",
    "start": "1015600",
    "end": "1025439"
  },
  {
    "text": "multiplier that we\ncan choose later on. So that will be kind of the\ntrick that we will play.",
    "start": "1025440",
    "end": "1032130"
  },
  {
    "text": "And now, as Steven\nalready said, so we're interested in\ncomputing dG over dp,",
    "start": "1032130",
    "end": "1041369"
  },
  {
    "text": "right, so that's the kind\nof sensitivity gradient information that\nwe want to have.",
    "start": "1041369",
    "end": "1047550"
  },
  {
    "text": " There will be a long line,\nso what we basically do",
    "start": "1047550",
    "end": "1053670"
  },
  {
    "text": "is just doing all the chain rule\non that term and these terms. ",
    "start": "1053670",
    "end": "1071701"
  },
  {
    "text": "STEVEN JOHNSON: And now\nthink of p as a scalar, but in general, it could\nbe a vector or something. And if it's the\ngradient, of dG dp.",
    "start": "1071702",
    "end": "1079309"
  },
  {
    "start": "1079309",
    "end": "1087850"
  },
  {
    "text": "FRANK SCHAFER: Yeah, it's\na gradient transpose, yeah. STEVEN JOHNSON: So what we were\ncalling G prime in the book.",
    "start": "1087850",
    "end": "1093376"
  },
  {
    "start": "1093376",
    "end": "1107650"
  },
  {
    "text": "FRANK SCHAFER: Yeah, let\nme quickly write it down because it's easy to do\nmistakes on that part.",
    "start": "1107650",
    "end": "1113360"
  },
  {
    "text": " Oh, minus sign from the\nminus we had before.",
    "start": "1113360",
    "end": "1120134"
  },
  {
    "start": "1120134",
    "end": "1137745"
  },
  {
    "text": "STEVEN JOHNSON: Maybe you\ncould write it a little bigger? FRANK SCHAFER: Oh. OK. ",
    "start": "1137745",
    "end": "1163830"
  },
  {
    "text": "OK, I'll leave out the\nutp's to save some space, but every u here\ndepends on t and p.",
    "start": "1163830",
    "end": "1169928"
  },
  {
    "start": "1169928",
    "end": "1182040"
  },
  {
    "text": "I guess that's maybe\nhard to read at the end, but there's a dt\nonly missing here.",
    "start": "1182040",
    "end": "1189278"
  },
  {
    "text": "Is that readable for\nyou on that side? AUDIENCE: [INAUDIBLE]. FRANK SCHAFER: I know. I will repeat that\nterm in a second,",
    "start": "1189278",
    "end": "1196050"
  },
  {
    "text": "so you will see again\nwhat's that term. ",
    "start": "1196050",
    "end": "1204060"
  },
  {
    "text": "Right, so let's\ncall that basically, like, the sensitivity,\ncall that, and yet, let's",
    "start": "1204060",
    "end": "1212880"
  },
  {
    "text": "simplify a bit the notation. So that's my small g. I'm sorry, my small g's and\nsmall f's look fairly similar.",
    "start": "1212880",
    "end": "1220080"
  },
  {
    "text": "That's small gu, so\nI'll always denote by subscript with respect\nto what we differentiate.",
    "start": "1220080",
    "end": "1229877"
  },
  {
    "text": "STEVEN JOHNSON: This is like\nin the homework, you know, has a few problems where partial\nderivatives are subscripts.",
    "start": "1229878",
    "end": "1236220"
  },
  {
    "text": "FRANK SCHAFER: Small gp, and in\nthis term, what we can do here",
    "start": "1236220",
    "end": "1242340"
  },
  {
    "text": "is basically swap the\nderivative with respect to p and with respect to time. So we get here a prime, right,\nso because when we swap it,",
    "start": "1242340",
    "end": "1254080"
  },
  {
    "text": "we have du dp, which\nis s, and then we have the time derivative.",
    "start": "1254080",
    "end": "1260040"
  },
  {
    "text": "And we have here some fu times\ns, and the last term is f--",
    "start": "1260040",
    "end": "1273100"
  },
  {
    "text": "that last term is fp. ",
    "start": "1273100",
    "end": "1279720"
  },
  {
    "text": "OK, let me go to the center\nbecause I think it's probably better readable from there. STEVEN JOHNSON: Can you\nscroll the board down",
    "start": "1279720",
    "end": "1285320"
  },
  {
    "text": "so we can see more? FRANK SCHAFER: Oh, Yeah. STEVEN JOHNSON: All right. FRANK SCHAFER: Oh, OK. ",
    "start": "1285320",
    "end": "1292385"
  },
  {
    "text": "STEVEN JOHNSON: Thank you. FRANK SCHAFER: Oh, yeah. OK. So, yeah, I wrote this second\nterm, which was probably",
    "start": "1292385",
    "end": "1298780"
  },
  {
    "text": "hard to read, a bit bigger. ",
    "start": "1298780",
    "end": "1323159"
  },
  {
    "text": "So that's the second term\non the right-hand side and-- STEVEN JOHNSON: Could\nI maybe say something",
    "start": "1323160",
    "end": "1328650"
  },
  {
    "text": "to try and clarify? FRANK SCHAFER: Yup. STEVEN JOHNSON:\nSo, right, so you",
    "start": "1328650",
    "end": "1336440"
  },
  {
    "text": "have this function you're\ntrying to differentiate, and if you just differentiate\nthis p directly,",
    "start": "1336440",
    "end": "1343430"
  },
  {
    "text": "you get this term,\nwhich is easy. Right, if the function depends\ndirectly on the parameters,",
    "start": "1343430",
    "end": "1349010"
  },
  {
    "text": "you can take that derivative. Often, that derivative is 0. This term, which\nis easy, this is",
    "start": "1349010",
    "end": "1354260"
  },
  {
    "text": "your cost function, how does\nit depend on the solution. This term is hard.",
    "start": "1354260",
    "end": "1359502"
  },
  {
    "text": "How do you get the derivative\nof the solution with respect to the parameters? So the goal and\nadding 0 here is going",
    "start": "1359503",
    "end": "1366055"
  },
  {
    "text": "to be-- is going to give us\nthis extra degree of freedom, lambda, that will-- if he's\nclever in how he chooses this,",
    "start": "1366055",
    "end": "1373470"
  },
  {
    "text": "there'll be a trick\nthat allows him to cancel this term\nthis term that's hard",
    "start": "1373470",
    "end": "1379230"
  },
  {
    "text": "and get a differential\nequation for lambda. So that's-- it's often\ngood to sort of show--",
    "start": "1379230",
    "end": "1387030"
  },
  {
    "text": "there's kind of\na magic step here where you added\nthis lambda term, and you know, sometimes\nit's good to not",
    "start": "1387030",
    "end": "1393029"
  },
  {
    "text": "keep people in\nsuspense as to why the hell did you add this term. FRANK SCHAFER: That's true.",
    "start": "1393030",
    "end": "1399010"
  },
  {
    "text": "Yeah, exactly. Yes. One step before we can\nactually do that trick to eliminate the s, and\nthat's basically this",
    "start": "1399010",
    "end": "1406720"
  },
  {
    "text": "s prime that we got, which\nwe first have to get rid of.",
    "start": "1406720",
    "end": "1412030"
  },
  {
    "text": "Anybody has an idea,\nmaybe, how to do that, like, our plans to\nturn s prime into an s?",
    "start": "1412030",
    "end": "1418720"
  },
  {
    "start": "1418720",
    "end": "1425750"
  },
  {
    "text": "STEVEN JOHNSON:\n18.01 question, you have a derivative in an integral\nyou don't like, how can you get rid of it?",
    "start": "1425750",
    "end": "1431299"
  },
  {
    "start": "1431300",
    "end": "1437320"
  },
  {
    "text": "AUDIENCE: Integrate by parts. FRANK SCHAFER: Yeah, so we\nintegrate that term by parts,",
    "start": "1437320",
    "end": "1444550"
  },
  {
    "text": "and that gives us-- ",
    "start": "1444550",
    "end": "1469220"
  },
  {
    "text": "all right, so that's from\nthe integration by parts, now the prime on\nthe lambda, which",
    "start": "1469220",
    "end": "1474290"
  },
  {
    "text": "will be exactly going towards\nthe ODE that Steven mentioned.",
    "start": "1474290",
    "end": "1479870"
  },
  {
    "start": "1479870",
    "end": "1492870"
  },
  {
    "text": "STEVEN JOHNSON: Time is\nalways a time derivative? FRANK SCHAFER: Yes. Yes, I should have said that. ",
    "start": "1492870",
    "end": "1506273"
  },
  {
    "text": "STEVEN JOHNSON: OK, can you also\ncomment on the shape of lambda? Like, why is lambda-- is lambda\na matrix, a vector, a scalar,",
    "start": "1506273",
    "end": "1511933"
  },
  {
    "text": "what is the-- why\nis it transpose? Like, what's the\nsize of this lambda?",
    "start": "1511933",
    "end": "1518440"
  },
  {
    "text": "FRANK SCHAFER: The size of this\nlambda, so it's such that-- right, this output should\nbe a scalar, right,",
    "start": "1518440",
    "end": "1528140"
  },
  {
    "text": "because we optimize the\nscalar cost function, so the size of lambda\nis basically in the--",
    "start": "1528140",
    "end": "1534550"
  },
  {
    "text": "well, in the adjoint space\nof f, right-- or of u prime.",
    "start": "1534550",
    "end": "1542980"
  },
  {
    "text": "STEVEN JOHNSON: Yeah, so\nthe solution here is not a scalar. u is not a scalar. It's a column vector, right?",
    "start": "1542980",
    "end": "1549160"
  },
  {
    "text": "You have n equations\nand n variables. Lambda is a column vector with\nthe same number of components and has the same--",
    "start": "1549160",
    "end": "1555270"
  },
  {
    "text": "it has the same shape as u. ",
    "start": "1555270",
    "end": "1563930"
  },
  {
    "text": "FRANK SCHAFER: Yeah, so\nwhat we want to do next is basically insert\nback this term into that equation, so we--",
    "start": "1563930",
    "end": "1572240"
  },
  {
    "text": "that was our term here. And so we take now this\npart, insert it back,",
    "start": "1572240",
    "end": "1578690"
  },
  {
    "text": "and we're already going\nto what's our goal, and reorder all terms such\nthat we have this s separated,",
    "start": "1578690",
    "end": "1586700"
  },
  {
    "text": "basically.  So what we end up with\nis basically this dG dp.",
    "start": "1586700",
    "end": "1597080"
  },
  {
    "start": "1597080",
    "end": "1613570"
  },
  {
    "text": "STEVEN JOHNSON: It's a little\nfunny because in Greek-- in linear algebra, we're used\nto Greek letters being scalars,",
    "start": "1613570",
    "end": "1618909"
  },
  {
    "text": "but for adjoint methods,\nthe adjoint vector is always called\nlambda because it comes",
    "start": "1618910",
    "end": "1624130"
  },
  {
    "text": "from Lagrange multipliers. ",
    "start": "1624130",
    "end": "1638653"
  },
  {
    "text": "FRANK SCHAFER: Oh, I'm\nmissing a prime here. ",
    "start": "1638654",
    "end": "1645160"
  },
  {
    "text": "OK, let's write that\ndirectly into one. ",
    "start": "1645160",
    "end": "1663410"
  },
  {
    "text": "OK, so not much happened\nhere, basically. It's just looking\nat all the terms. So we leave that term here.",
    "start": "1663410",
    "end": "1671420"
  },
  {
    "text": "This is that term. That is that term. We moved this term which doesn't\ndepend on f to the front,",
    "start": "1671420",
    "end": "1679669"
  },
  {
    "text": "and we had another term that\nwas depending on S here, which we moved to the back,\nbasically, so these two",
    "start": "1679670",
    "end": "1687950"
  },
  {
    "text": "terms were, like, swapped. AUDIENCE: So again\nthe goal here is--",
    "start": "1687950",
    "end": "1694640"
  },
  {
    "text": "the S, which is d u-- the\nderivative of the solution's expected parameter, that's the\nannoying term you don't know how to deal with, so you're\ngoing to try and group it",
    "start": "1694640",
    "end": "1701588"
  },
  {
    "text": "all together and then make\nthat term 0 so that you don't have to deal with it.",
    "start": "1701588",
    "end": "1708380"
  },
  {
    "text": "FRANK SCHAFER: Yeah, so we\nare free to choose lambda,",
    "start": "1708380",
    "end": "1717690"
  },
  {
    "text": "so we can choose lambda\nto be whatever we want. So why don't we take basically\nthe choice lambda prime of T",
    "start": "1717690",
    "end": "1727130"
  },
  {
    "text": "is equal to minus\nlambda T fu minus gu?",
    "start": "1727130",
    "end": "1735860"
  },
  {
    "text": "Right, if we take\nthat choice, we will have that\nthis term vanishes,",
    "start": "1735860",
    "end": "1741990"
  },
  {
    "text": "and we can also,\nsince this is an ODE, specify, well, basically\nthe initial condition.",
    "start": "1741990",
    "end": "1749309"
  },
  {
    "text": "So we can specify that lambda\nof t should be equal to 0.",
    "start": "1749310",
    "end": "1757400"
  },
  {
    "text": "If we do that, we have\nthat this term cancels, and one of the terms from\nthis integration by parts",
    "start": "1757400",
    "end": "1766580"
  },
  {
    "text": "also cancels.  Then it's the question of what--",
    "start": "1766580",
    "end": "1775947"
  },
  {
    "text": "STEVEN JOHNSON: And why did\nyou choose capital T to be that, lambda capital T to be 0? FRANK SCHAFER: Yeah,\nthat's the next question,",
    "start": "1775947",
    "end": "1782309"
  },
  {
    "text": "and that's because--  basically, what is s of t0,\nwhich comes into that term,",
    "start": "1782310",
    "end": "1791760"
  },
  {
    "text": "so we know that's s of t0,\nright, by definition of s,",
    "start": "1791760",
    "end": "1797060"
  },
  {
    "text": "it's the sensitivity\nof the initial state with respect to the parameter.",
    "start": "1797060",
    "end": "1804083"
  },
  {
    "text": "And, right, and we know\nthat the initial state doesn't depend on the\nparameter, so that term--  STEVEN JOHNSON: Or\nit could, right?",
    "start": "1804083",
    "end": "1809610"
  },
  {
    "text": "FRANK SCHAFER: Oh, it could. STEVEN JOHNSON: It could,\nbut whatever it is, you know what it is. Like, you don't-- you have the\ninitial condition in closed",
    "start": "1809610",
    "end": "1815090"
  },
  {
    "text": "form, right, so even if it\ndepends on some parameters, you know what it is.",
    "start": "1815090",
    "end": "1820950"
  },
  {
    "text": "But here, here only the--\nyou're simplifying it to-- only the\nsystem of equations",
    "start": "1820950",
    "end": "1827539"
  },
  {
    "text": "depends on the parameters. FRANK SCHAFER: Yes. Yup. Exactly, so either it's easy,\nor it's, well, 0, basically.",
    "start": "1827540",
    "end": "1835620"
  },
  {
    "text": " Yes, nice, so we have in the end\nthat just this term, basically,",
    "start": "1835620",
    "end": "1844480"
  },
  {
    "text": "survives, so we have that\ndg, the derivative of g with respect to the parameters-- or\nthe gradient, in this case--",
    "start": "1844480",
    "end": "1850880"
  },
  {
    "text": "is equal to that derivative,\nwhich is easy to compute. It depends on this\nlambda, and it",
    "start": "1850880",
    "end": "1857000"
  },
  {
    "text": "depends on the derivative\nof f with respect to p. That's a Jacobian, basically.",
    "start": "1857000",
    "end": "1863960"
  },
  {
    "text": "So let me let this here. Right here, so what's\nkind of the procedure",
    "start": "1863960",
    "end": "1871970"
  },
  {
    "text": "that we need to do\nto solve it, right? So when we solve\nthat integral, we",
    "start": "1871970",
    "end": "1880190"
  },
  {
    "text": "realize that we\nfirst have to solve this ordinary differential\nequation, which gets a special name, actually.",
    "start": "1880190",
    "end": "1886370"
  },
  {
    "text": "So this is the adjoint ODE. ",
    "start": "1886370",
    "end": "1896720"
  },
  {
    "text": "But we also see that\nthe forward solution is embedded in that ODE, right?",
    "start": "1896720",
    "end": "1903500"
  },
  {
    "text": "So to solve for the quantity\nwhich we're interested in, we basically have a\nthree-step procedure.",
    "start": "1903500",
    "end": "1912389"
  },
  {
    "text": "So we first solve for u of t.",
    "start": "1912390",
    "end": "1922538"
  },
  {
    "text": "Well, that's at least the\neasiest way to think about it. We first would solve\nfor the ODE for u of t,",
    "start": "1922538",
    "end": "1929270"
  },
  {
    "text": "then we have that information. In the next step, we solve\nfor lambda of T. I can also--",
    "start": "1929270",
    "end": "1937805"
  },
  {
    "text": "STEVEN JOHNSON: Can you\nwrite down ODEs again and just these steps? Just to summarize, you're\nsolving an ODE for u of t,",
    "start": "1937805",
    "end": "1944000"
  },
  {
    "text": "and write down the\nODE for lambda, maybe. ",
    "start": "1944000",
    "end": "1962617"
  },
  {
    "text": "Maybe transpose it back,\nso just a lambda prime.",
    "start": "1962618",
    "end": "1969320"
  },
  {
    "text": "Usually, you would\ntranspose it, right? FRANK SCHAFER: OK. ",
    "start": "1969320",
    "end": "1974540"
  },
  {
    "text": "Then it's f. STEVEN JOHNSON: Just\ntransposing both sides of that equation for lambda. ",
    "start": "1974540",
    "end": "1986110"
  },
  {
    "text": "FRANK SCHAFER: gu, right? STEVEN JOHNSON: gu transpose. ",
    "start": "1986110",
    "end": "1991718"
  },
  {
    "text": "And there's an initial\ncondition, right, so for-- FRANK SCHAFER: Yeah, so that\nhas an initial condition. ",
    "start": "1991718",
    "end": "2006318"
  },
  {
    "text": "Right, the initial condition\nis kind of important because we see, the first\nODE, we solve forwards",
    "start": "2006318",
    "end": "2011809"
  },
  {
    "text": "in time, and then\nthe adjoint ODE, as you are now used to\nprobably from reverse-mode AD,",
    "start": "2011810",
    "end": "2017390"
  },
  {
    "text": "we have to solve\nbackwards in time. So we have also this\nforward-backwards workflow,",
    "start": "2017390",
    "end": "2022460"
  },
  {
    "text": "and then once we\nknow u and lambda, we can actually solve the\nintegration for dG dp.",
    "start": "2022460",
    "end": "2039795"
  },
  {
    "text": "STEVEN JOHNSON: Can\nyou write that out? Just because it simplifies\nnow, so several of the terms",
    "start": "2039795",
    "end": "2046370"
  },
  {
    "text": "have dropped out. FRANK SCHAFER: Oh, just g-- STEVEN JOHNSON: And write big. ",
    "start": "2046370",
    "end": "2061320"
  },
  {
    "text": "FRANK SCHAFER: OK, that's a-- STEVEN JOHNSON: No,\nno, wait, there's no-- I thought you wanted to write\nit in terms of lambda, right?",
    "start": "2061320",
    "end": "2067050"
  },
  {
    "text": "FRANK SCHAFER: Oh, yeah. STEVEN JOHNSON: Yeah,\nthere's no s anymore. FRANK SCHAFER: Wait. Yeah, exactly.",
    "start": "2067050",
    "end": "2072649"
  },
  {
    "text": "And g-- yeah, that\nshould be right.",
    "start": "2072650",
    "end": "2079914"
  },
  {
    "text": "STEVEN JOHNSON: And then plus a\nboundary-- oh, no, the boundary term is 0 in your case. FRANK SCHAFER:\nYeah, I set it to 0.",
    "start": "2079915",
    "end": "2085504"
  },
  {
    "text": "STEVEN JOHNSON: So\nbefore you continue, let me just compare this. We talked about adjoint\nmethods in class before,",
    "start": "2085505",
    "end": "2090638"
  },
  {
    "text": "but for solving, like,\nlinear systems or nonlinear equations where the dependence\non parameter, and it",
    "start": "2090639",
    "end": "2097690"
  },
  {
    "text": "was of the same flavor. So first, you solve\nthe forward equations. You solve ax equals\nb for x, right,",
    "start": "2097690",
    "end": "2104230"
  },
  {
    "text": "and then we solved\nan adjoint equation that involved a transpose or a\ntranspose of a Jacobian, right?",
    "start": "2104230",
    "end": "2111190"
  },
  {
    "text": "But whatever the\nadjoint equation was of the same kind of-- same flavor and same size as\nthe original problem, but it",
    "start": "2111190",
    "end": "2118540"
  },
  {
    "text": "was linear, right? And then once you have\nthe forward solution, the adjoint solution, you\njust take some dot products.",
    "start": "2118540",
    "end": "2123730"
  },
  {
    "text": "So here, you solve\nan ODE, right, and you're using whatever\nyour favorite ODE solver is. Then you solve an adjoint ODE,\nwhich is sort of transposed,",
    "start": "2123730",
    "end": "2133090"
  },
  {
    "text": "and it's linear now, even if\nthe original one was linear, and it's backwards in time\nif the original one was",
    "start": "2133090",
    "end": "2138829"
  },
  {
    "text": "forwards in time. And then once you have the\nforward solution u of t and the adjoint\nsolution lambda of T,",
    "start": "2138830",
    "end": "2144560"
  },
  {
    "text": "you take some dot products,\nwhich for functions, the analog of that is integrals, right?",
    "start": "2144560",
    "end": "2150230"
  },
  {
    "text": "And so everything in that\nsense becomes easy now. Independent-- even if you\nhave 10,000 parameters,",
    "start": "2150230",
    "end": "2156800"
  },
  {
    "text": "you solve one forward ODE, one\nadjoint ODE of the same size, and then some dot products.",
    "start": "2156800",
    "end": "2163170"
  },
  {
    "text": "So this is why you can\ncompute derivatives with a huge number of\nparameters efficiently,",
    "start": "2163170",
    "end": "2171290"
  },
  {
    "text": "and they're kind of always of\nthe same flavor, these adjoint, reverse-mode things. FRANK SCHAFER: Yes, and\nnow there are a few tricks,",
    "start": "2171290",
    "end": "2178280"
  },
  {
    "text": "basically, to evaluate\nthat efficiently, or different styles to\nevaluate that equation.",
    "start": "2178280",
    "end": "2184550"
  },
  {
    "text": "The first thing to\nnotice is basically that we don't necessarily, for\nthis continuous adjoint method,",
    "start": "2184550",
    "end": "2191090"
  },
  {
    "text": "have to store and compute the\nfull continuous solution of u of t because an ODE is\nbasically reversible.",
    "start": "2191090",
    "end": "2201240"
  },
  {
    "text": "And so we can solve\nthe ODE forwards, just save the final\nvalue of that ODE,",
    "start": "2201240",
    "end": "2208070"
  },
  {
    "text": "and then solve it basically\nin lockstep backwards together with lambda to have--",
    "start": "2208070",
    "end": "2214790"
  },
  {
    "text": "well, to avoid this kind of\nstoring the continuous solution of u of t at all times.",
    "start": "2214790",
    "end": "2221450"
  },
  {
    "text": "And everybody happy with\nthat kind of trick, right? So-- STEVEN JOHNSON: I'm not happy\nwith that kind of trick, like,",
    "start": "2221450",
    "end": "2228195"
  },
  {
    "text": "if it's chaotic or\nsomething like that. FRANK SCHAFER: But\nODEs are reversible-- STEVEN JOHNSON: Solving\nforwards might be exponentially decaying, and\nsolving it backwards",
    "start": "2228195",
    "end": "2233610"
  },
  {
    "text": "might be exponentially growing. So that trick doesn't\nalways work, right? FRANK SCHAFER: Yes, exactly. That trick has to be done with\ncare, and there are some--",
    "start": "2233610",
    "end": "2241180"
  },
  {
    "text": "right, so that trick, just\nto visualize it again, it basically says, if we\nhave some ODE at u of t0",
    "start": "2241180",
    "end": "2247350"
  },
  {
    "text": "and we solve it to some\nfinal time, u of capital T, I was saying, you can\njust store this value",
    "start": "2247350",
    "end": "2255150"
  },
  {
    "text": "and start solving it backwards. But depending on\nyour physical system,",
    "start": "2255150",
    "end": "2260339"
  },
  {
    "text": "well, your trajectory\nmight not-- because your numerical solver\nmight not be reversible, you might deviate from\nyour true solution.",
    "start": "2260340",
    "end": "2267673"
  },
  {
    "text": "And then if you solve\nit for long times, again, backwards, that might\nbe numerically very bad, and so the first thing\npeople are usually doing",
    "start": "2267673",
    "end": "2274260"
  },
  {
    "text": "is introducing so-called\ncheckpoints, which only means, once you solve it back and\nyou reach your checkpoint, you",
    "start": "2274260",
    "end": "2282059"
  },
  {
    "text": "basically reset your\nsolution to the state which you had forwards. So that reduces a bit\nthe memory consumption.",
    "start": "2282060",
    "end": "2289859"
  },
  {
    "text": "And the second trick people are\ndoing, if it's really unstable and your ODE solver is not\nworking, then what you would do",
    "start": "2289860",
    "end": "2296190"
  },
  {
    "text": "is maybe also have\nthese checkpoints but always just store\na continuous solution within the checkpoints that you\nsolve forwards again in time.",
    "start": "2296190",
    "end": "2304600"
  },
  {
    "text": "STEVEN JOHNSON: So just\nanother comment on that, so one thing we\nhave to be always careful about in\npresenting things",
    "start": "2304600",
    "end": "2310560"
  },
  {
    "text": "is explaining the solution\nbefore we explain the problem, right? So the issue here\nthat you're trying",
    "start": "2310560",
    "end": "2316410"
  },
  {
    "text": "to solve with going\nbackwards and reversing and so forth is--\nso in principle, you solve it forward,\nright, to find u of t,",
    "start": "2316410",
    "end": "2324390"
  },
  {
    "text": "and then you solve it\nbackwards to find lambda T, and then you take some\ndot products, right? The problem you can run\ninto is that then you",
    "start": "2324390",
    "end": "2332400"
  },
  {
    "text": "need to store u of t\nnot just at the endpoint but at all the intermediate\ntimes, which is fine if u of t",
    "start": "2332400",
    "end": "2339900"
  },
  {
    "text": "is just a small\nnumber of parameters. And you just store it\nat a bunch of points, and then you basically\ncan interpolate",
    "start": "2339900",
    "end": "2347820"
  },
  {
    "text": "with polynomials in between. Right, this is how\nODE solvers work. But this is a problem\nif you're solving",
    "start": "2347820",
    "end": "2354810"
  },
  {
    "text": "a huge system of ODEs,\nwhere, say, it's really a discretized PDE, for example.",
    "start": "2354810",
    "end": "2360789"
  },
  {
    "text": "So you have u is, say, the\nelectric field at every point in space as a function of time\nin some big computational cell,",
    "start": "2360790",
    "end": "2367830"
  },
  {
    "text": "then solving-- then usually when you solve it,\nyou march it forward in time, and you kind of just\nonly store the solution",
    "start": "2367830",
    "end": "2374339"
  },
  {
    "text": "at the current time. But here, you need to\nstore all the solutions at all the intermediate times\nall the way until the end",
    "start": "2374340",
    "end": "2382330"
  },
  {
    "text": "and then go backwards, and\nyou can run out of memory. And so this is the basic\nproblem with adjoint methods",
    "start": "2382330",
    "end": "2388620"
  },
  {
    "text": "and when you have,\nlike, evolving in time or going through\nbig recurrences,",
    "start": "2388620",
    "end": "2394140"
  },
  {
    "text": "is you need to store all\nthe intermediate ones. And so there's all\nthese tricks to try and only store some of\nthe intermediate values",
    "start": "2394140",
    "end": "2400800"
  },
  {
    "text": "at some checkpoints and kind of\nreconstruct things on the fly as you integrate lambda T\nbackwards so that you don't",
    "start": "2400800",
    "end": "2409560"
  },
  {
    "text": "need to store everything,\nbut that's sort of the issue that you're\nstruggling with here.",
    "start": "2409560",
    "end": "2415200"
  },
  {
    "text": "But for small ODEs, to only\nhave a few things at any time, you just store the\nwhole solution.",
    "start": "2415200",
    "end": "2421740"
  },
  {
    "text": "It's not that hard. FRANK SCHAFER: Right. True. Yeah, well, for small\nODEs that contain",
    "start": "2421740",
    "end": "2427950"
  },
  {
    "text": "some parametric function, that's\nvery expensive to evaluate, right? Like, what Chris\nis basically doing",
    "start": "2427950",
    "end": "2434190"
  },
  {
    "text": "is putting a neural network\ninside the drift function, so even if the ODE\nitself looks very simple,",
    "start": "2434190",
    "end": "2440310"
  },
  {
    "text": "if you have a neural\nnetwork in each timestep, you will have to store all\nintermediate computations also,",
    "start": "2440310",
    "end": "2445380"
  },
  {
    "text": "and outputs of that. So, yeah, that makes\nthe continuous adjoint",
    "start": "2445380",
    "end": "2451560"
  },
  {
    "text": "very meaningful. Yeah, right, so there's\na third kind of trick",
    "start": "2451560",
    "end": "2460830"
  },
  {
    "text": "which can be used to simplify\nthat workflow even a bit more.",
    "start": "2460830",
    "end": "2466822"
  },
  {
    "text": "Basically, that's the first\ntrick, and as we now discussed, it's not always applicable. But if it's applicable, it can\nbe nice and very efficient.",
    "start": "2466822",
    "end": "2474750"
  },
  {
    "text": "The third trick is basically to\nlook at this integration term",
    "start": "2474750",
    "end": "2480050"
  },
  {
    "text": "and basically realize that\nan integration can also",
    "start": "2480050",
    "end": "2488280"
  },
  {
    "text": "be phrased as a solution to an\nordinary differential equation.",
    "start": "2488280",
    "end": "2493596"
  },
  {
    "text": "So I'm not sure if\nthat was covered or--",
    "start": "2493596",
    "end": "2504770"
  },
  {
    "text": "but, yeah, let's say\nI have a function F. I want to integrate it as\n[INAUDIBLE] prime to delta t.",
    "start": "2504770",
    "end": "2513510"
  },
  {
    "text": " But everybody agrees, that's\nkind of the same form?",
    "start": "2513510",
    "end": "2519350"
  },
  {
    "text": "So we have some integration,\nand now the claim",
    "start": "2519350",
    "end": "2524780"
  },
  {
    "text": "is that we can write that\nas an ordinary differential equation small f of t.",
    "start": "2524780",
    "end": "2533000"
  },
  {
    "text": "And, yeah, now we want\nto basically apply Euler's method to that, and so\nif we apply Euler's method--",
    "start": "2533000",
    "end": "2541320"
  },
  {
    "text": "STEVEN JOHNSON: So, wait,\nstop here for a second. So before you again\ngive the solution,",
    "start": "2541320",
    "end": "2546660"
  },
  {
    "text": "so you're going to write\na differential equation w prime equals F of T, right? So wt is going to\nbe a new variable.",
    "start": "2546660",
    "end": "2554910"
  },
  {
    "text": "What's the initial condition\nof that, that you're going to want to use? Again, at the end, you're\ngoing to want to write down",
    "start": "2554910",
    "end": "2560413"
  },
  {
    "text": "a differential equation\nwhose solution gives that integral, so what-- you're going to write\na differential equation",
    "start": "2560413",
    "end": "2566690"
  },
  {
    "text": "dw dt equals little f of t. What initial condition\nshould you use? ",
    "start": "2566690",
    "end": "2574339"
  },
  {
    "text": "Any guesses? To get-- to turn it back-- so its solution will\ngive you the same thing",
    "start": "2574340",
    "end": "2580119"
  },
  {
    "text": "as that definite\nintegral from t0 to t. ",
    "start": "2580120",
    "end": "2588535"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. STEVEN JOHNSON: 0, OK,\nso but at what time? AUDIENCE: t0. STEVEN JOHNSON: At t0, so w of\nt0 equals 0, and then what's--",
    "start": "2588535",
    "end": "2602530"
  },
  {
    "text": "capital F of T\nequals what, then? So now the integral you\nwant, the first line,",
    "start": "2602530",
    "end": "2608140"
  },
  {
    "text": "capital-- is that an I or an F? I can't-- FRANK SCHAFER:\nThat's an F. Sorry.",
    "start": "2608140",
    "end": "2613390"
  },
  {
    "text": "STEVEN JOHNSON: That's\na capital F, OK. FRANK SCHAFER: Sorry. STEVEN JOHNSON: It has\nthe second line going kind of-- looks a little bit--",
    "start": "2613390",
    "end": "2619450"
  },
  {
    "text": "OK, so anyway, so your capital\nF of T, your integral that you want is what in terms of w? So if you have-- the\ndifferential equation,",
    "start": "2619450",
    "end": "2625920"
  },
  {
    "text": "its initial condition\nt equals 0 is 0-- t0 is 0. Its derivative is little f\nof t, so then the integral",
    "start": "2625920",
    "end": "2634770"
  },
  {
    "text": "is what now? AUDIENCE: [INAUDIBLE]. FRANK SCHAFER: Yeah, right,\nso I can write that integral.",
    "start": "2634770",
    "end": "2640820"
  },
  {
    "text": "Let me write one step\nin between, basically, and kind of slide it. ",
    "start": "2640820",
    "end": "2646861"
  },
  {
    "text": "STEVEN JOHNSON: You're kind\nof discretizing it first, so before you\ndiscretize it, I want to make sure they understand\nthe connection between the ODE",
    "start": "2646862",
    "end": "2652987"
  },
  {
    "text": "and the integral. So don't discretize\nit yet, all right? Just, this is an exact\nrelationship, right?",
    "start": "2652987",
    "end": "2659773"
  },
  {
    "text": "FRANK SCHAFER: Oh, so you just\nwant to have plugged in the w, so-- STEVEN JOHNSON: Yeah,\nyeah, it's w of what? ",
    "start": "2659773",
    "end": "2667200"
  },
  {
    "text": "No, there's no integral. It's equal to w of-- ",
    "start": "2667200",
    "end": "2674270"
  },
  {
    "text": "it's w of capital T, right? That's-- FRANK SCHAFER: Oh, right. STEVEN JOHNSON: Right. FRANK SCHAFER:\nOK, now I see what you want you want me to write.",
    "start": "2674270",
    "end": "2679700"
  },
  {
    "text": "STEVEN JOHNSON: Right. So the point is, if you\nhave a differential equation w prime equals f of t, the\nsolution is just the integral.",
    "start": "2679700",
    "end": "2687740"
  },
  {
    "text": "w is just the integral of\nf, which is what you want, and then you put the initial\ncondition at t0 equals 0.",
    "start": "2687740",
    "end": "2693350"
  },
  {
    "text": "That's the left edge\nof the integral, and then the final integral\nyou want is just w of t.",
    "start": "2693350",
    "end": "2698359"
  },
  {
    "text": "So that's-- he's turning--\nthe integral you want is just a differential equation, is\nthis differential equation,",
    "start": "2698360",
    "end": "2706210"
  },
  {
    "text": "and now you're going to\ndiscretize it, right? FRANK SCHAFER: Right, now\nif I'm discretizing it,",
    "start": "2706210",
    "end": "2711560"
  },
  {
    "text": "I will see the same,\nbasically, as for-- yeah, for an Euler step. I should write it down, or--",
    "start": "2711560",
    "end": "2717700"
  },
  {
    "text": "STEVEN JOHNSON: Sure, if\nyou want to discretize it. Yeah, I just wanted to--\nbecause not everyone here has done a lot of\ndifferential equations, right,",
    "start": "2717700",
    "end": "2724522"
  },
  {
    "text": "or maybe hasn't\ndone them recently, so I want to make\nsure they understand,",
    "start": "2724522",
    "end": "2729730"
  },
  {
    "text": "understood that trick. ",
    "start": "2729730",
    "end": "2749115"
  },
  {
    "text": "It's good. Take it all the way up now. FRANK SCHAFER: Oh, OK. STEVEN JOHNSON: [INAUDIBLE].",
    "start": "2749115",
    "end": "2754426"
  },
  {
    "start": "2754426",
    "end": "2762240"
  },
  {
    "text": "FRANK SCHAFER: Right, so\nI'm basically writing down what the Euler steps would\nbe in the discretization",
    "start": "2762240",
    "end": "2769109"
  },
  {
    "text": "for that integral.  That's the first, and then\nI just keep iterating.",
    "start": "2769110",
    "end": "2779590"
  },
  {
    "start": "2779590",
    "end": "2792010"
  },
  {
    "text": "Let's think a moment for-- ",
    "start": "2792010",
    "end": "2806410"
  },
  {
    "text": "So these are n Euler steps\niterated on the function. ",
    "start": "2806410",
    "end": "2814619"
  },
  {
    "text": "There's an i missing,\nprobably, somewhere. ",
    "start": "2814620",
    "end": "2821780"
  },
  {
    "text": "Right, because once\nI have my first step, the time changes, and then\nthat's flagged back also",
    "start": "2821780",
    "end": "2828200"
  },
  {
    "text": "into the function. STEVEN JOHNSON: OK, so this\nis really an approximation for the original thing, right?",
    "start": "2828200",
    "end": "2833350"
  },
  {
    "text": "So you're writing \"equals\"\nhere, but just to be clear, right, the original\nequation is--",
    "start": "2833350",
    "end": "2839990"
  },
  {
    "text": "you have an integral and\nthe differential equation. That's an exact\nrelationship, and now you're going to write the\ndiscrete analog of that,",
    "start": "2839990",
    "end": "2846170"
  },
  {
    "text": "or the discrete approximation. So w of t plus delta t\nis really approximately equal to w of t plus t delta\nt, and this is approximately.",
    "start": "2846170",
    "end": "2854710"
  },
  {
    "text": "FRANK SCHAFER: Yeah,\nif I do it again-- something like an Euler step.",
    "start": "2854710",
    "end": "2860300"
  },
  {
    "text": "STEVEN JOHNSON: So you can\napproximate the derivative by a difference, and then\nthe integral of your--",
    "start": "2860300",
    "end": "2867830"
  },
  {
    "text": "is essentially\napproximated by a sum. ",
    "start": "2867830",
    "end": "2875670"
  },
  {
    "text": "FRANK SCHAFER: Right,\nand so this now has, then, also, I mean,\nthe typical form",
    "start": "2875670",
    "end": "2880740"
  },
  {
    "text": "of what you would do numerically\nto solve an integral, right? So it's-- yeah, you have the\nfunction value at different",
    "start": "2880740",
    "end": "2891490"
  },
  {
    "text": "points, and then with the\ndiscretization that you use and summed it all up. STEVEN JOHNSON: This\nis a very simple way",
    "start": "2891490",
    "end": "2898090"
  },
  {
    "text": "to do an approximate integral\nnumerically, just like-- Euler integration for ODEs\nand this approximate sum",
    "start": "2898090",
    "end": "2905470"
  },
  {
    "text": "for an integral, you should\nnever, ever do this in reality, almost, because there's\nexponentially more",
    "start": "2905470",
    "end": "2911350"
  },
  {
    "text": "accurate ways to integrate\napproximate integrals. But it's a nice way to\nreally simply think of--",
    "start": "2911350",
    "end": "2917800"
  },
  {
    "text": "if you're confused by\nintegrals and derivatives, you can think of them as\ndifferences and sums or sums",
    "start": "2917800",
    "end": "2923110"
  },
  {
    "text": "and differences, right? FRANK SCHAFER: Yeah,\nright, that statement is true for both, right,\nthe Euler solver for ODEs",
    "start": "2923110",
    "end": "2928947"
  },
  {
    "text": "and the kind of derivation\nfor the integral. ",
    "start": "2928947",
    "end": "2934223"
  },
  {
    "text": "Yeah, that's actually the\nfull derivation, I'm sure. STEVEN JOHNSON: Yeah, so does\neveryone see that basically, then, if you plug in,\nthe initial t is 0.",
    "start": "2934223",
    "end": "2940859"
  },
  {
    "text": "w of t0 is 0. Right, so and then why don't\nyou take it one step further? So then w of t0, if w of t0\nis 0, the first term is 0.",
    "start": "2940860",
    "end": "2950650"
  },
  {
    "text": "The second term is approximately\nthe integral, right, so it's just a restating\nthe same thing, just",
    "start": "2950650",
    "end": "2956529"
  },
  {
    "text": "with sums and differences. So this is-- so the solution of\nthe ODE is really the integral.",
    "start": "2956530",
    "end": "2962547"
  },
  {
    "text": "FRANK SCHAFER: Yes.  Yeah, to summarize\nthat, so we can have,",
    "start": "2962548",
    "end": "2969300"
  },
  {
    "text": "then, basically all the\nthree methods above. STEVEN JOHNSON: So can\nyou finish and write--",
    "start": "2969300",
    "end": "2974880"
  },
  {
    "text": "so the point at the-- what you're going\nto do then is just merge the solution of the\nadjoint ODE with that integral",
    "start": "2974880",
    "end": "2981717"
  },
  {
    "text": "in the third step, so instead\nof doing them in separate steps, so you can maybe just\nwrite down the derivative.",
    "start": "2981717",
    "end": "2987630"
  },
  {
    "text": "It has a-- FRANK SCHAFER: That one, right? STEVEN JOHNSON:\nYeah, so what's w? w is now going to be-- no, no,\nw is going to be lambda and--",
    "start": "2987630",
    "end": "2996448"
  },
  {
    "text": "OK, it doesn't matter. ",
    "start": "2996448",
    "end": "3003652"
  },
  {
    "text": "FRANK SCHAFER: Yeah, depending\non the other side of-- STEVEN JOHNSON: You want to go\nin the other direction, right? Yeah. FRANK SCHAFER: Probably\nwant to solve it like that.",
    "start": "3003652",
    "end": "3010720"
  },
  {
    "text": "STEVEN JOHNSON:\nBut the point is, you think of this as\na coupled ODE, for w along with the adjoint\nODE for lambda prime.",
    "start": "3010720",
    "end": "3016990"
  },
  {
    "text": "So if you write down the lambda\nprime underneath, right-- ",
    "start": "3016990",
    "end": "3032610"
  },
  {
    "text": "FRANK SCHAFER: gu. ",
    "start": "3032610",
    "end": "3043047"
  },
  {
    "text": "STEVEN JOHNSON: So you can think\nof this as one system of ODEs for a vector that contains\nw and lambda, right,",
    "start": "3043047",
    "end": "3052049"
  },
  {
    "text": "so you just do the\ntwo things together instead of the separate steps.",
    "start": "3052050",
    "end": "3057885"
  },
  {
    "text": "Oh, and then I guess,\nyeah, you could also integrate the original\nequation backwards as well.",
    "start": "3057885",
    "end": "3063869"
  },
  {
    "text": " All right, so now your unknowns\nare w, lambda, and u, so,",
    "start": "3063870",
    "end": "3069865"
  },
  {
    "text": "like, one big vector of those\nthree things stacked together. ",
    "start": "3069865",
    "end": "3078930"
  },
  {
    "text": "And the advantage\nof this is that you don't need to store\nthe lambdas, I guess, and maybe the u's. If you\nwere able to integrate",
    "start": "3078930",
    "end": "3086070"
  },
  {
    "text": "the whole thing backwards, you\ndon't need to store anything. You just pass this to\nyour ODE integrator,",
    "start": "3086070",
    "end": "3092520"
  },
  {
    "text": "and it only keeps track\nof your current step. And it just walks\nfrom beginning to end, and at the end of\nthe day, your w",
    "start": "3092520",
    "end": "3099540"
  },
  {
    "text": "is the integral that you want-- is the derivative. FRANK SCHAFER: Yeah, so that's\nthe most memory-efficient one",
    "start": "3099540",
    "end": "3105750"
  },
  {
    "text": "to basically solve for the\nsensitivity dG dp in the end.",
    "start": "3105750",
    "end": "3111150"
  },
  {
    "text": " Right. That's all for--",
    "start": "3111150",
    "end": "3116327"
  },
  {
    "text": "STEVEN JOHNSON: So I\nthink we should maybe take a break for\nthe-- or in a minute, but are you basically--\nis this basically it?",
    "start": "3116327",
    "end": "3123250"
  },
  {
    "text": "Or are you going to\nshow some examples? FRANK SCHAFER: I would\nhave the integration of that numerically,\nbut it takes another 10,",
    "start": "3123250",
    "end": "3128809"
  },
  {
    "text": "15 minutes at least. STEVEN JOHNSON: Yeah, I see you\nwant to show an example of-- yeah, I mean, we can do\nthat after the break,",
    "start": "3128810",
    "end": "3134530"
  },
  {
    "text": "but maybe we can just take a\nbreak for a couple minutes now. But do people have\nquestions before we-- about this step?",
    "start": "3134530",
    "end": "3141220"
  },
  {
    "text": "You have forward ODE,\nadjoint ODE, and then a dot product, which is\nbasically the integral. And then there's these tricks to\ntry and basically combine them",
    "start": "3141220",
    "end": "3148210"
  },
  {
    "text": "into one ODE that\nyou solve instead of having to store u of\nT, store lambda of T,",
    "start": "3148210",
    "end": "3153280"
  },
  {
    "text": "and then do the integral.  AUDIENCE: So say you have\nsome data point that you're",
    "start": "3153280",
    "end": "3161448"
  },
  {
    "text": "comparing to something you're\nlooking for, would you--",
    "start": "3161448",
    "end": "3167210"
  },
  {
    "text": "so if the system's not\nchaotic, you'd probably want to start it at\nthe final data point and integrate backwards\nwith the lambda equation,",
    "start": "3167210",
    "end": "3176017"
  },
  {
    "text": "but if it is, then\nwould you just want to integrate forward\nto get the full solution",
    "start": "3176018",
    "end": "3181826"
  },
  {
    "text": "and then just solve that? STEVEN JOHNSON: Yeah, so\nsuppose capital G-- wait,",
    "start": "3181826",
    "end": "3187375"
  },
  {
    "text": "so suppose capital G is a sum\nand not an integral, right? So you're-- or you have a\nbunch of delta functions,",
    "start": "3187375",
    "end": "3193668"
  },
  {
    "text": "is another way of\nthinking about it, right? So basically, you're\ncomparing the solution u of T",
    "start": "3193668",
    "end": "3198849"
  },
  {
    "text": "to, say, some known\nsolution, some measured data, at only a discrete set of times. So now G is a sum,\nright, so one way",
    "start": "3198850",
    "end": "3206320"
  },
  {
    "text": "to do it would be to\ncompute u of T, lambda of T, and then just do the sum.",
    "start": "3206320",
    "end": "3212259"
  },
  {
    "text": "But is there a way to combine\nthat into a single ODE if now capital G\nis not an integral,",
    "start": "3212260",
    "end": "3219160"
  },
  {
    "text": "it's a discrete summation\nover a set of times? FRANK SCHAFER: Yeah,\nbasically, you can write it--",
    "start": "3219160",
    "end": "3225880"
  },
  {
    "text": "go to this kind of\ndiscrete formulation. Probably the easiest\nway, I think, to think about it is\nthat these describe",
    "start": "3225880",
    "end": "3234190"
  },
  {
    "text": "the kind of continuous\nchanges that you want to have in the cost\nfunction, and so",
    "start": "3234190",
    "end": "3241630"
  },
  {
    "text": "what you will have if\nyou just have your cost function compared at\ndiscrete time points you--",
    "start": "3241630",
    "end": "3248350"
  },
  {
    "text": "right, you basically\nhave your solution. And then at some point,\nyou compare your cost,",
    "start": "3248350",
    "end": "3255950"
  },
  {
    "text": "and so what will happen\nis that you just solve-- you will have a\nbackward solution",
    "start": "3255950",
    "end": "3262780"
  },
  {
    "text": "starting from here for\nthe adjoint and for u.",
    "start": "3262780",
    "end": "3268340"
  },
  {
    "text": "And then at these time points\nwhere you have your comparison, you basically have to--\nyou can update your state",
    "start": "3268340",
    "end": "3276589"
  },
  {
    "text": "by the change that comes in just\nfrom those nodes, basically. So we'll just have,\nlike, partial derivatives",
    "start": "3276590",
    "end": "3285510"
  },
  {
    "text": "added at those time points\nto your adjoint state. STEVEN JOHNSON: Yeah,\nso, I mean, ODE solvers,",
    "start": "3285510",
    "end": "3291558"
  },
  {
    "text": "you can tell them to\nstop at certain times, so as you go\nbackwards in time, you can just have it\nstop at that time and then update something\nand then stop at that time",
    "start": "3291558",
    "end": "3298690"
  },
  {
    "text": "and add-- at the next time\nand add something to accumulate your sum\nas you go along. But mathematically,\nyou could basically",
    "start": "3298690",
    "end": "3306190"
  },
  {
    "text": "think of it as jump conditions\nthat occur at those times, and so there's also ways to\ninclude those in differential",
    "start": "3306190",
    "end": "3314530"
  },
  {
    "text": "equation solvers, where,\noh, every once in a while, these times, something jumps.",
    "start": "3314530",
    "end": "3319630"
  },
  {
    "text": "There's a discontinuity\nin the solution, and then in between, it's not\nchanging at all, in this case.",
    "start": "3319630",
    "end": "3324978"
  },
  {
    "text": "FRANK SCHAFER: Yup. STEVEN JOHNSON:\nProbably, it's easier just to say let me integrate\nit up to this time,",
    "start": "3324978",
    "end": "3332527"
  },
  {
    "text": "get that solution\nup to the next time, and just have a callback\nat those discrete times and just accumulate the sum.",
    "start": "3332527",
    "end": "3337560"
  },
  {
    "text": " AUDIENCE: One more question\nabout that, so maybe cycling back to the idea of\nmatrix calculus, so here,",
    "start": "3337560",
    "end": "3344590"
  },
  {
    "text": "everything is still-- basically, if you\nwant to generalize it, say you have a\nmatrix-valued ODE,",
    "start": "3344590",
    "end": "3350710"
  },
  {
    "text": "then your lambdas become\nsome matrix-valued thing. So they live in the dual\nstate to whatever you",
    "start": "3350710",
    "end": "3358446"
  },
  {
    "text": "want to take the derivative of,\nand as long as it sort of makes sense, the ODEs that come out\nat the other end, that will",
    "start": "3358446",
    "end": "3366420"
  },
  {
    "text": "give you the right sensitivity? Is that-- STEVEN JOHNSON: Yeah. Yeah, so if you have\na more general space--",
    "start": "3366420",
    "end": "3371690"
  },
  {
    "text": "so u, u lives in some\narbitrary vector space, right, then you have to replace\nthe lambda transpose there",
    "start": "3371690",
    "end": "3377920"
  },
  {
    "text": "with an inner product, right? And then this fu transpose\nis some more general adjoint",
    "start": "3377920",
    "end": "3387190"
  },
  {
    "text": "operator in that Hilbert\nspace, right, so all of this still works. So you can think of this\njust-- it's literally",
    "start": "3387190",
    "end": "3394097"
  },
  {
    "text": "the same derivation. You can think of it\nas just a change. It's just, lambda\ntranspose is now",
    "start": "3394097",
    "end": "3399220"
  },
  {
    "text": "notation for that inner product. It's just-- you\nhave to understand what the notation means\nin a more general sense,",
    "start": "3399220",
    "end": "3406029"
  },
  {
    "text": "but it's literally\nthe same, same thing. I don't know, have you\ndone anything where--",
    "start": "3406030",
    "end": "3411380"
  },
  {
    "text": "I guess you're doing\nquantum systems, so probably, your states\nlive in some more--",
    "start": "3411380",
    "end": "3416837"
  },
  {
    "text": "FRANK SCHAFER: Density\nmatrices, yeah, sure. STEVEN JOHNSON: --live in\nmore general Hilbert spaces all the time. FRANK SCHAFER: Yeah.",
    "start": "3416837",
    "end": "3423677"
  },
  {
    "text": "Yeah, and numerically, you\ncan also then vectorize the density matrix, right? And they have-- yeah.",
    "start": "3423677",
    "end": "3429580"
  },
  {
    "text": "Yeah, rewrite, basically,\nalso the definitions of f to deal with\nvectors depending on your implementation,\nbut, yeah, right.",
    "start": "3429580",
    "end": "3436690"
  },
  {
    "text": "STEVEN JOHNSON: Yeah, so we\ntalked about that as well. So one way of dealing with\nmatrices and other things is just to turn them into\ncolumn vectors, right,",
    "start": "3436690",
    "end": "3443700"
  },
  {
    "text": "but if it's more natural\nin your system space to talk about\nmatrices, then you'd",
    "start": "3443700",
    "end": "3450510"
  },
  {
    "text": "really rather deal with\nthat Hilbert space directly. FRANK SCHAFER: Right. STEVEN JOHNSON: And if these\nare PDEs, so u is now not--",
    "start": "3450510",
    "end": "3457290"
  },
  {
    "text": "is like a function\nof space, right? Of course, on a\ncomputer, you probably discretized it, but\nit's nice conceptually",
    "start": "3457290",
    "end": "3463770"
  },
  {
    "text": "to think about this\nas a function of space and this inner-- lambda is also a function\nof space, for example,",
    "start": "3463770",
    "end": "3469770"
  },
  {
    "text": "and then this inner\nproduct is some kind of integral over a space. So it is really powerful\nto be able to not",
    "start": "3469770",
    "end": "3476970"
  },
  {
    "text": "have to turn everything\ninto a column vector when you want to\ndo linear algebra. ",
    "start": "3476970",
    "end": "3486490"
  },
  {
    "text": "Got a five-minute break, so\nwe'll come back at 12:10. And I could go then, or if\nyou want to show some more",
    "start": "3486490",
    "end": "3493460"
  },
  {
    "text": "examples, you can do that. But-- ",
    "start": "3493460",
    "end": "3500000"
  }
]