[
  {
    "start": "0",
    "end": "215000"
  },
  {
    "text": " So I'm back. I guess by your\npresence here you've",
    "start": "0",
    "end": "6000"
  },
  {
    "text": "shown that for you people,\nDP1 is well under control. And that's great.",
    "start": "6000",
    "end": "12099"
  },
  {
    "text": "OK, so today is the last lecture\non this topic on the networking piece of 6.033.",
    "start": "12100",
    "end": "18369"
  },
  {
    "text": "And, the topic for\ntoday is something called congestion control. And what we're\ngoing to do is spend",
    "start": "18369",
    "end": "24382"
  },
  {
    "text": "most of today talking\nabout congestion control. But let me remind you of\nwhere we are in networking.",
    "start": "24382",
    "end": "29902"
  },
  {
    "text": "And so if there's one\nthing you take away from 6.033 from this\nnetworking piece you should remember\nthis picture.",
    "start": "29902",
    "end": "35030"
  },
  {
    "text": " So the way we're\ndealing with networking,",
    "start": "35030",
    "end": "41270"
  },
  {
    "text": "and the way we always\ndeal with networking in any complicated system is\nto layer network protocols.",
    "start": "41270",
    "end": "47320"
  },
  {
    "text": "And the particular learning\nmodel that we picked for 6.033 is a subset of what you'd\nsee out in the real world.",
    "start": "47320",
    "end": "52910"
  },
  {
    "text": "And it's mostly accurate. There is something\ncalled the link layer which deals with\ntransmitting packets",
    "start": "52910",
    "end": "58270"
  },
  {
    "text": "on the link. And of that, you have\nthe network layer. And, the particular\nkind of network layer",
    "start": "58270",
    "end": "64390"
  },
  {
    "text": "that we are talking about\nis a very popular one which provides a kind of service\ncalled a best effort service.",
    "start": "64390",
    "end": "70816"
  },
  {
    "text": "And the easiest way to\nunderstand best effort services: it just\ntries to get packets through from one end to another.",
    "start": "70816",
    "end": "76280"
  },
  {
    "text": "But it doesn't get all panicked\nif it can't get packets through. It just lets a higher\nlayer called the end",
    "start": "76280",
    "end": "82140"
  },
  {
    "text": "to end layer deal with\nany problems such as lost packets, or missing packets,\nor corrupted packets,",
    "start": "82140",
    "end": "90120"
  },
  {
    "text": "reordered packets, and so on. And last time when\nSam gave the lecture,",
    "start": "90120",
    "end": "97620"
  },
  {
    "text": "he talked about a few things\nthat the end to end layer does. And in particular we talked\nabout how the end to end layer",
    "start": "97620",
    "end": "103979"
  },
  {
    "text": "achieves reliability\nusing acknowledgments.",
    "start": "103980",
    "end": "109130"
  },
  {
    "text": "So the receiver\nacknowledges packets that it receives from the\ncenter, and the sender, if it misses an acknowledgment\ngoes ahead and retransmits",
    "start": "109130",
    "end": "116240"
  },
  {
    "text": "the packet. And in order to do\nthat, we spent some time talking about timers\nbecause you have to not try",
    "start": "116240",
    "end": "123577"
  },
  {
    "text": "to retransmit immediately. You have to wait some\ntime until you're pretty sure that the\npacket's actually lost before you go ahead and\ntry to retransmit the packet.",
    "start": "123577",
    "end": "132100"
  },
  {
    "text": "The next concept at the end to\nend layer that we talked about is something called a sliding\nwindow, where the idea was",
    "start": "132100",
    "end": "142460"
  },
  {
    "text": "that if I send you a packet,\ngot an acknowledgment back, and then sent you\nthe next packet and did that, things\nare really slow.",
    "start": "142460",
    "end": "149590"
  },
  {
    "text": "And all that a\nsliding window is, is really an idea that you've\nalready seen from an earlier chapter, and probably from\n6.004 called pipelining, which",
    "start": "149590",
    "end": "158180"
  },
  {
    "text": "is to have multiple\noutstanding things in the pipe or in the network at once as a\nway to get higher performance.",
    "start": "158180",
    "end": "166840"
  },
  {
    "text": "And the last thing that\nwe talked about last time was flow control.",
    "start": "166840",
    "end": "173230"
  },
  {
    "text": "And the idea here\nis to make sure that the sender doesn't send\ntoo fast because if it's sent really fast, it would\nswamp the receiver, which",
    "start": "173230",
    "end": "180770"
  },
  {
    "text": "might be slow trying to keep\nup processing the sender's packets. So you don't want to swamp\nthe receiver's buffer.",
    "start": "180770",
    "end": "187360"
  },
  {
    "text": "And we talked about how\nwith every acknowledgment, the receiver can\npiggyback some information",
    "start": "187360",
    "end": "193620"
  },
  {
    "text": "about how much space it has\nremaining in its buffer. And if that clamped\ndown to zero, then the sender would\nautomatically slow down.",
    "start": "193620",
    "end": "201090"
  },
  {
    "text": "You would produce what's also\nknown as back pressure back to the sender's thing. I don't have any more\nspace to slow down.",
    "start": "201090",
    "end": "206530"
  },
  {
    "text": "And the sender guarantees that\nit won't send more packets at any given time,\nmore data at any given",
    "start": "206530",
    "end": "211670"
  },
  {
    "text": "time than what the receiver says\nit can handle in its buffer.",
    "start": "211670",
    "end": "217120"
  },
  {
    "start": "215000",
    "end": "525000"
  },
  {
    "text": "So that was the plan. Those are the things we talked\nabout so far for the end",
    "start": "217120",
    "end": "222390"
  },
  {
    "text": "to end layer. And what we're\ngoing to do today is to go back to one of the main\nthings about networks that",
    "start": "222390",
    "end": "228120"
  },
  {
    "text": "was mentioned during the\nfirst networking lecture and talk about how we achieve\nthat, which is sharing. ",
    "start": "228120",
    "end": "237890"
  },
  {
    "text": "Ultimately, it's extremely\ninefficient to build networks where every computer\nis connected",
    "start": "237890",
    "end": "243629"
  },
  {
    "text": "to every other\ncomputer in the world by a dedicated link or a\ndedicated path of its own.",
    "start": "243630",
    "end": "248750"
  },
  {
    "text": "Fundamentally,\nnetworks are efficient only if they allow\ncomputers connected to each other to share\npaths underneath.",
    "start": "248750",
    "end": "255120"
  },
  {
    "text": "And the moment you\nhave sharing of links, you have to worry about\nsharing the resources,",
    "start": "255120",
    "end": "263569"
  },
  {
    "text": "namely sharing the\nbandwidth of a link and that's what we're\ngoing to do today.",
    "start": "263570",
    "end": "268970"
  },
  {
    "text": "And we're going to do this. Basically the goal for today is\nto talk about the problems that",
    "start": "268970",
    "end": "274120"
  },
  {
    "text": "arise if you don't you\ndo sharing properly, and then spend some\ntime talking about how we solve these problems.",
    "start": "274120",
    "end": "280065"
  },
  {
    "text": " So imagine you have a network.",
    "start": "280065",
    "end": "286560"
  },
  {
    "text": "And I'm going to start\nwith a simple example. And we're going to\nuse that example to write through,\nbecause it will turn out",
    "start": "286560",
    "end": "292238"
  },
  {
    "text": "that the simple\nexample will illustrate the essential\nproblem with sharing.",
    "start": "292239",
    "end": "297250"
  },
  {
    "text": "So imagine you have a bunch\nof computers connected to one end of the network. And at the other end you\nhave other computers.",
    "start": "297250",
    "end": "307174"
  },
  {
    "text": "And imagine that\nthese are senders and these are receivers. And they share the network. And you know a really simple\nform of sharing this network",
    "start": "307174",
    "end": "314300"
  },
  {
    "text": "might be when you have\nall of these computers, take their links like\nthe Ethernet connections",
    "start": "314300",
    "end": "320160"
  },
  {
    "text": "and hook them up to a switch. And maybe you hook it\nup to another switch.",
    "start": "320160",
    "end": "325230"
  },
  {
    "text": "And then there's\nother paths that eventually take you\nto the receivers that you want to talk to.",
    "start": "325230",
    "end": "332580"
  },
  {
    "text": "And imagine just for example\nthat these are fake lengths. So for example these might\nbe 100 Mb per second links.",
    "start": "332580",
    "end": "340440"
  },
  {
    "text": "And then you go [SOUND OFF/THEN\n ON], and that might be,",
    "start": "340440",
    "end": "348430"
  },
  {
    "text": "let's say it's a\nmegabit per second link. So this might be\n1 Mb per second.",
    "start": "348430",
    "end": "354090"
  },
  {
    "text": "And these things are\n100 Mb per second. And of course you could\nhave the receivers connected",
    "start": "354090",
    "end": "360690"
  },
  {
    "text": "with extremely fast\nlinks as well, which means that if the\nsender and the receiver just looked at their own\naccess links, these 100",
    "start": "360690",
    "end": "368680"
  },
  {
    "text": "Mb per second links, and just\nthought to themselves, well, I have 100 Mb per second links. The sender has 100\nMb per second link,",
    "start": "368680",
    "end": "375730"
  },
  {
    "text": "so clearly we could exchange\ndata at 100 Mb per second. That would be flawed\nbecause all of these things",
    "start": "375730",
    "end": "382180"
  },
  {
    "text": "go through this relatively thin\npipe of a megabit per second.",
    "start": "382180",
    "end": "388570"
  },
  {
    "text": "So really, the goal\nhere is to take all of these connections,\nall of these end to end transfers that might\nbe happening at any given",
    "start": "388570",
    "end": "394620"
  },
  {
    "text": "point in time, and share every\nlink in the network properly. And I'll define what I mean\nby properly as we go along.",
    "start": "394620",
    "end": "404364"
  },
  {
    "text": "So let's write\nsome notation first because it will help us\npose the problem clearly. So let's say that\nthere is some offered",
    "start": "404364",
    "end": "411470"
  },
  {
    "text": "load that these different\nsenders offered to the network. So you've decided to\ndownload a bunch of files,",
    "start": "411470",
    "end": "416970"
  },
  {
    "text": "music files, and WebPages. And each of those\nhas a certain load that it's a certain\nsize of a file.",
    "start": "416970",
    "end": "423130"
  },
  {
    "text": "A sender can actually push\nthat data through at some rate. So that's the offered\nload on the network.",
    "start": "423130",
    "end": "429070"
  },
  {
    "text": "And let's assume that senders\n[want?] through N here, and let's say that the offered\nload of the sender is L1.",
    "start": "429070",
    "end": "435569"
  },
  {
    "text": "This is L2, all\nthe way through LN. OK, so in this simple picture,\nthe total offered load",
    "start": "435570",
    "end": "443330"
  },
  {
    "text": "on the network\nalong this path is the summation of LI's, where\nI runs from one to N, right?",
    "start": "443330",
    "end": "450712"
  },
  {
    "text": " Hand out here, in\nthis simple picture,",
    "start": "450713",
    "end": "456230"
  },
  {
    "text": "we have all this offered\nload going through this one common link, which we're going\nto call the bottleneck link.",
    "start": "456230",
    "end": "462352"
  },
  {
    "text": "We don't actually know\nwhere; the senders don't know where the bottleneck\nis because it's not near them. And in general,\nit's not near them.",
    "start": "462352",
    "end": "468405"
  },
  {
    "text": "It could be, but in general,\nthey don't know where it is. The receivers don't\nknow where it is. But there is some\nbottleneck link",
    "start": "468405",
    "end": "473733"
  },
  {
    "text": "that's going to throttle the\nmaximum rate at which you could send data. Let's call that rate C.",
    "start": "473734",
    "end": "480710"
  },
  {
    "text": "So what we would\nlike to be able to do is ensure that at\nall points in time that the sum of the load\nthat's being offered",
    "start": "480710",
    "end": "487180"
  },
  {
    "text": "by all senders that\nshare any given link is less than the\ncapacity of that link.",
    "start": "487180",
    "end": "493500"
  },
  {
    "text": "And so, C here, this\npicture, this would be C. And notice that\nwe don't actually know where these things are.",
    "start": "493500",
    "end": "499539"
  },
  {
    "text": "And for different connections,\nif you are surfing the web and downloading music and\nso on, the actual bottleneck",
    "start": "499540",
    "end": "504750"
  },
  {
    "text": "for each of those transfers\nmight in general be different. But the general goal\nfor congestion control",
    "start": "504750",
    "end": "510060"
  },
  {
    "text": "is you look at any path\nbetween a sender and receiver, and there is, in general,\nsome bottleneck there.",
    "start": "510060",
    "end": "516389"
  },
  {
    "text": "And you have to ensure that\nfor every bottleneck link, in fact for every\nlink, the total offered",
    "start": "516390",
    "end": "521729"
  },
  {
    "text": "load presented to that link\nsatisfies this relationship. OK, so that's ultimate goal.",
    "start": "521730",
    "end": "528680"
  },
  {
    "start": "525000",
    "end": "1008000"
  },
  {
    "text": "[SOUND OFF/THEN ON], OK? [SOUND OFF/THEN ON] one other\nproblem, that you want this.",
    "start": "528680",
    "end": "542370"
  },
  {
    "start": "542370",
    "end": "548000"
  },
  {
    "text": "This is not a trivial problem. So one reason it's\nnot trivial is",
    "start": "548000",
    "end": "553279"
  },
  {
    "text": "something that might\nhave been clear to you from the definition\nof the problem. You want to share this for\nall the links in the network.",
    "start": "553280",
    "end": "558390"
  },
  {
    "text": "And the network in general\nmight have, or will have, millions of links, and\nhundreds of millions of hosts.",
    "start": "558390",
    "end": "565530"
  },
  {
    "text": "So any solution you come\nup with has to be scalable. ",
    "start": "565530",
    "end": "573140"
  },
  {
    "text": "And in particular, it has to\nscale to really large networks, networks that are as big\nas the public Internet,",
    "start": "573140",
    "end": "580630"
  },
  {
    "text": "and the whole public\nInternet 10 years from now. So it has to be\nsomething that scales.",
    "start": "580630",
    "end": "586760"
  },
  {
    "text": "It has to handle large values. So it has to handle\nlarge networks.",
    "start": "586760",
    "end": "592090"
  },
  {
    "text": "It has to handle large values\nof N, where the number of N",
    "start": "592090",
    "end": "598590"
  },
  {
    "text": "to N connections that\nare transferring data on this network, and it's\nan unknown value of N. You don't really know what N\nis at any given point in time.",
    "start": "598590",
    "end": "605697"
  },
  {
    "text": "And it could be extremely large. So you have to handle that. And above all, and\nthis is actually",
    "start": "605697",
    "end": "611170"
  },
  {
    "text": "the most important point. And it's often missed by a lot\nof descriptions of congestion",
    "start": "611170",
    "end": "617110"
  },
  {
    "text": "control and sharing. A good solution has to scale\nacross many orders of magnitude",
    "start": "617110",
    "end": "623500"
  },
  {
    "text": "of link properties. On the Internet or in any\ndecent packet switch network,",
    "start": "623500",
    "end": "630500"
  },
  {
    "text": "link rates vary\nby perhaps seven, or eight, or nine\norders of magnitude.",
    "start": "630500",
    "end": "635580"
  },
  {
    "text": "A single network could have\nlinks that send data in five or ten kilobits\nper second on one",
    "start": "635580",
    "end": "641350"
  },
  {
    "text": "extreme, and 10 Gb per\nsecond, or 40 Gb per second on the other extreme. And a single path\nmight actually go",
    "start": "641350",
    "end": "648759"
  },
  {
    "text": "through links whose\ncapacities vary by many orders of magnitude. And it's extremely\nimportant that a solution",
    "start": "648760",
    "end": "655130"
  },
  {
    "text": "work across this range because\notherwise its generality isn't that general.",
    "start": "655130",
    "end": "660190"
  },
  {
    "text": "And what you would like is\na very general solution.  The second reason\nthis problem as",
    "start": "660190",
    "end": "666910"
  },
  {
    "text": "hard is that here\nwe have this N, but really N is a\nfunction of time.",
    "start": "666910",
    "end": "672922"
  },
  {
    "text": "You're surfing the Web. You click on a link, and all\nof a sudden 18 embedded objects come through. In general, each of those\nis a different connection.",
    "start": "672922",
    "end": "680889"
  },
  {
    "text": "And then it's gone. And the next time somebody\nelse clicks on something, there's a bunch more objects. So N varies with time.",
    "start": "680890",
    "end": "686290"
  },
  {
    "start": "686290",
    "end": "691540"
  },
  {
    "text": "And as a consequence,\nthe offered load on the system, both\nthe total offered load",
    "start": "691540",
    "end": "696830"
  },
  {
    "text": "as well as the load offered\nby single connection varies with time. So, LI varies with time as well.",
    "start": "696830",
    "end": "703870"
  },
  {
    "text": " So it's kind of really\nhard to understand what the steady-state\nbehavior of a large network",
    "start": "703870",
    "end": "710360"
  },
  {
    "text": "like the Internet\nis because there is no steady-state behavior. ",
    "start": "710360",
    "end": "716250"
  },
  {
    "text": "And [SOUND OFF/THEN ON]\nis the thing that we're going to come back\nto and [SOUND OFF/THEN ON]",
    "start": "716250",
    "end": "728620"
  },
  {
    "text": "the person who can control\nthe rate at which data is being sent is the sender.",
    "start": "728620",
    "end": "733830"
  },
  {
    "text": "And maybe the receiver\ncan help it control it by advertising these\nflow control windows. So the control happens\nat these points.",
    "start": "733830",
    "end": "741342"
  },
  {
    "text": "But if you think about it, the\nresource that's being shared is somewhere else. It's far away, right?",
    "start": "741342",
    "end": "746970"
  },
  {
    "text": "So, there is a delay between\nthe congestion point, or the points where\noverload happens",
    "start": "746970",
    "end": "752560"
  },
  {
    "text": "with these points\nin the network, and where the control\ncan be exercised to control congestion.",
    "start": "752560",
    "end": "758860"
  },
  {
    "text": "And this situation is\nextremely different from most other resource\nmanagement schemes",
    "start": "758860",
    "end": "765000"
  },
  {
    "text": "for other computer systems. If you talk about processor\nresource management, well, there's a schedule\nof the controls, what runs on the processor.",
    "start": "765000",
    "end": "771054"
  },
  {
    "text": "The processor is right there. There's no long delay\nbetween the two. So if the operating system\ndecides to schedule [another?]",
    "start": "771054",
    "end": "776810"
  },
  {
    "text": "process, well, it doesn't take\na long time before that happens. It happens pretty quickly. And nothing else usually\nhappens in the meantime",
    "start": "776810",
    "end": "783570"
  },
  {
    "text": "related to something\nelse, some other process. If you talk about\ndisk scheduling, well, the disk scheduler is\nvery, very close to the disk.",
    "start": "783570",
    "end": "790040"
  },
  {
    "text": "It can make a\ndecision, and exercises control according to whatever\npolicy that it wants.",
    "start": "790040",
    "end": "795457"
  },
  {
    "text": "Here, if the network\ndecides it's congested, and there is some plan\nby which the network will want to react to that load,\nwell, it can't do very much.",
    "start": "795457",
    "end": "805399"
  },
  {
    "text": "It has to somehow\narrange for feedback to reach the points of control,\nwhich are in general far away,",
    "start": "805400",
    "end": "810530"
  },
  {
    "text": "and are not just far\naway in terms of delay, but that delay varies as well.",
    "start": "810530",
    "end": "816390"
  },
  {
    "text": "That's what makes\nthe problem hard, which is that the resource is\nfar from the control point.",
    "start": "816390",
    "end": "832910"
  },
  {
    "text": "So these are the\ncongestion points, which is where the resources are. And these are the\ncontrol points, which is where you can exercise.",
    "start": "832910",
    "end": "838520"
  },
  {
    "text": "And the two are\nseparated geographically. ",
    "start": "838520",
    "end": "844040"
  },
  {
    "text": "I don't think I mentioned this. This is what you want. And any situation where\nthe summation of LI,",
    "start": "844040",
    "end": "852160"
  },
  {
    "text": "the offered load on a link,\nis larger than the capacity, that overload situation is what\nwe're going to call congestion.",
    "start": "852160",
    "end": "859660"
  },
  {
    "text": "OK, so any time you\nsee LI bigger than C, we're going to define\nthat as congestion. And then, I'll make this notion\na little bit more precise.",
    "start": "859660",
    "end": "866920"
  },
  {
    "text": "And you'll see why we have to\nmake it slightly more precise. But for now, just say that\nif inequality is swapped, that means it's congested.",
    "start": "866920",
    "end": "873020"
  },
  {
    "text": " OK, so that's the problem.",
    "start": "873020",
    "end": "878320"
  },
  {
    "text": "We are going to want\nto solve the problem. Now, every other problem that\nwe've encountered in networking",
    "start": "878320",
    "end": "885310"
  },
  {
    "text": "so far, we've solved by going\nback to that layered picture",
    "start": "885310",
    "end": "890350"
  },
  {
    "text": "and saying, well, we need\nto deliver, for example, if you want to deliver\npackets across one link,",
    "start": "890350",
    "end": "895589"
  },
  {
    "text": "we say all right, we'll take\nthis thing as a link layer protocol. We'll define framing\non top of it, and define a way by\nwhich we can do things",
    "start": "895589",
    "end": "903800"
  },
  {
    "text": "like [UNINTELLIGIBLE] correction\nif we need to on that link, and we'll solve the\nproblem right there. Then we say, OK, we need to\nconnect all these computers up",
    "start": "903801",
    "end": "910510"
  },
  {
    "text": "together and build up routing\ntables so we can forward data. And we say, OK, that's the\nnetwork layer's problem. We're going to solve\nthe problem there.",
    "start": "910510",
    "end": "917134"
  },
  {
    "text": "And then packets get lost. Well, we'll deal with it\nat the end to end layer. And, that model has\nworked out extremely well",
    "start": "917134",
    "end": "922810"
  },
  {
    "text": "because it allows us to run\narbitrary applications on top of this network layer\nwithout really having",
    "start": "922810",
    "end": "928649"
  },
  {
    "text": "to build up forwarding\ntables for every application anew and run it on\nall sorts of links.",
    "start": "928650",
    "end": "934209"
  },
  {
    "text": "And you can have\npaths containing a variety of different links. And everything works\nout like a charm.",
    "start": "934210",
    "end": "939319"
  },
  {
    "text": "But the problem with doing\nthat for congestion control is that this layered\npicture is actually",
    "start": "939320",
    "end": "944590"
  },
  {
    "text": "getting in the way\nof solving congestion control in a very clean manner. And the reason for that is\nthat the end to end layer runs",
    "start": "944590",
    "end": "952220"
  },
  {
    "text": "at the end points. And those are the\npoints were control is exercised to control the\nrate at which traffic is",
    "start": "952220",
    "end": "957700"
  },
  {
    "text": "being sent on to the network.",
    "start": "957700",
    "end": "962940"
  },
  {
    "text": "But the congestion,\nand the notice of any information about whether\nthe network is overloaded is deeply buried inside the\nnetwork at the network layer.",
    "start": "962940",
    "end": "971720"
  },
  {
    "text": "So, what you need is a\nway by which information from the network layer\nabout whether congestion is occurring, or whether\ncongestion is not occurring,",
    "start": "971720",
    "end": "978850"
  },
  {
    "text": "or whether congestion is likely\nto occur even though it's not yet occurred, that\nkind of information has somehow to percolate\ntoward the end to end layer.",
    "start": "978850",
    "end": "986459"
  },
  {
    "text": "And so far, we've\nmodularized this very nicely by not really having\nvery much information propagate between the layers.",
    "start": "986460",
    "end": "991940"
  },
  {
    "text": "But now, to solve this problem\nof congestion, precisely because this separation between\nthe resource and the control",
    "start": "991940",
    "end": "998097"
  },
  {
    "text": "point, and the fact that the\ncontrol point is at the end to end layer, at\nleast in the way we're going to\nsolve the problem.",
    "start": "998097",
    "end": "1003340"
  },
  {
    "text": "And the fact that the\nresources at the network layer, it necessitates across layer\nsolution to the problem.",
    "start": "1003340",
    "end": "1009130"
  },
  {
    "start": "1008000",
    "end": "1188000"
  },
  {
    "start": "1009130",
    "end": "1017420"
  },
  {
    "text": "So somehow we need information\nto move between the two layers. So here's a general plan.",
    "start": "1017420",
    "end": "1022540"
  },
  {
    "text": " So we're going to arrange for\nthem to end layer at the sender",
    "start": "1022540",
    "end": "1030709"
  },
  {
    "text": "to send at a rate. This is going to be a rate\nthat changes with time. But let's say that the\nsender at some point in time",
    "start": "1030710",
    "end": "1038619"
  },
  {
    "text": "sends at a rate, RI where RI\nis measured in bits per second.",
    "start": "1038619",
    "end": "1047449"
  },
  {
    "text": "And that's actually true here. In case it wasn't clear, these\nloads are in bits per second. The capacity is in bits\nper second as well.",
    "start": "1047450",
    "end": "1054059"
  },
  {
    "text": "So the plan is for the sender to\nsend at a [layered?] rate, RI. And, for all of the switches\ninside the network, to keep",
    "start": "1054060",
    "end": "1063405"
  },
  {
    "text": "track in some fashion of\nwhether they are being congested or not, and it's going to\nbe really simple after that.",
    "start": "1063405",
    "end": "1069960"
  },
  {
    "text": "If the senders are\nsending too fast, or if a given sender\nis sending too fast, then we're going to\ntell them to slow down.",
    "start": "1069960",
    "end": "1078190"
  },
  {
    "text": "The network layer is somehow\ngoing to tell the sender to slow down. And likewise, if they\nare sending too slow,",
    "start": "1078190",
    "end": "1085860"
  },
  {
    "text": "and we have yet\nto figure out how you know that you're\nsending too slow, and that you could\nsend a little faster,",
    "start": "1085860",
    "end": "1091050"
  },
  {
    "text": "you're sending too\nslow there's going to be some plan by which\nthe sender can speed up.",
    "start": "1091050",
    "end": "1096440"
  },
  {
    "start": "1096440",
    "end": "1101710"
  },
  {
    "text": "And the nature of\nour solution is going to be that\nthere is really not going to be a steady\nrate at which senders",
    "start": "1101710",
    "end": "1107090"
  },
  {
    "text": "are going to send. In fact, by the\ndefinition of the problem, the steady rate is a [fool's\n errand?] because N varies N",
    "start": "1107090",
    "end": "1112664"
  },
  {
    "text": "varies and the load varies. So that means on any given link,\nthe traffic varies with time. So you really don't\nwant a static rate.",
    "start": "1112665",
    "end": "1118570"
  },
  {
    "text": "What you would like to do is\nif there's any extra capacity, and the sender has load\nto fill that capacity, you want that sender\nto use that capacity.",
    "start": "1118570",
    "end": "1125170"
  },
  {
    "text": "So this rate is going\nto adapt and change with time in response\nto some feedback that we're going to obtain based\non network layer information",
    "start": "1125170",
    "end": "1134580"
  },
  {
    "text": "essentially from the network\nlayer about whether people are sending too fast or\npeople are sending too slow. OK and all congestion\ncontrol schemes",
    "start": "1134580",
    "end": "1142285"
  },
  {
    "text": "that people have come\nup with, all algorithms for solving this problem,\nand there have been dozens",
    "start": "1142285",
    "end": "1147890"
  },
  {
    "text": "if not a few\nhundred of them, all of these things in various\nvariants of various solutions,",
    "start": "1147890",
    "end": "1153930"
  },
  {
    "text": "all of them are according\nto the basic plan. OK, the network layer\ngives some feedback. If it's too fast, slow down.",
    "start": "1153930",
    "end": "1159726"
  },
  {
    "text": "If it's too slow, speed up. ",
    "start": "1159726",
    "end": "1164780"
  },
  {
    "text": "The analogy is a little bit\nlike a water pipeline network. Imagine have all sorts of\npipes feeding water in.",
    "start": "1164780",
    "end": "1171049"
  },
  {
    "text": "You have this massive\npipeline network. And what you can control are\nthe valves at the end points. And by controlling\nthe valves, you",
    "start": "1171050",
    "end": "1177779"
  },
  {
    "text": "can decide whether to\nlet water rush in or not. And anytime you're\ngetting clogged, you have to slow down\nand close the valves.",
    "start": "1177780",
    "end": "1184030"
  },
  {
    "text": " So the devil's actually\nin the details.",
    "start": "1184030",
    "end": "1189230"
  },
  {
    "start": "1188000",
    "end": "1798000"
  },
  {
    "text": "So were going to dive in to\nactually seeing how we're going to solve this problem. And the first component of any\nsolution to congestion control",
    "start": "1189230",
    "end": "1196477"
  },
  {
    "text": "is something we've already seen. ",
    "start": "1196477",
    "end": "1201700"
  },
  {
    "text": "And it's buffering. Any network that has\nasynchronous multiplex and, which Sam talked about the\nfirst time, any network that",
    "start": "1201700",
    "end": "1216240"
  },
  {
    "text": "has the following behavior,\nat any given point in time you might have multiple packets\narrive in to a given switch.",
    "start": "1216240",
    "end": "1224552"
  },
  {
    "text": "And, the switch can\nonly send one of them out on an outgoing link at\nany given point in time, which means if you\nweren't careful, you",
    "start": "1224552",
    "end": "1232280"
  },
  {
    "text": "would have to drop the\nother packet that showed up. And so, almost\neveryone who builds a decent asynchronously\nmultiplex network",
    "start": "1232280",
    "end": "1239530"
  },
  {
    "text": "puts in some queues\nto buffer packets until the link is free so they\ncan then send the packet out",
    "start": "1239530",
    "end": "1247300"
  },
  {
    "text": "onto the link. So the key question\nwhen it comes to buffering but you\nhave to ask is how much?",
    "start": "1247300",
    "end": "1254847"
  },
  {
    "text": "I don't actually mean how\nmuch in terms of how expensive it is, but in terms of how\nmuch should the buffering be? Should you have one\npacket of buffering?",
    "start": "1254847",
    "end": "1261370"
  },
  {
    "text": "Two packets? Four packets? And how big should\nthe buffer be? Well, the one way to answer\nthe question of how much,",
    "start": "1261370",
    "end": "1271860"
  },
  {
    "text": "first you can ask, what\nhappens if it's too little? So what happens if the buffering\nis too little in a switch?",
    "start": "1271860",
    "end": "1277050"
  },
  {
    "text": " Like you put one\npacket or two packets",
    "start": "1277050",
    "end": "1282450"
  },
  {
    "text": "of buffering: what happens? ",
    "start": "1282450",
    "end": "1288070"
  },
  {
    "text": "I'm sorry, what? Well, congestion by\ndefinition has happened when",
    "start": "1288070",
    "end": "1293510"
  },
  {
    "text": "the load exceeds the capacity. So you get congestion. But what's the effect of that? So a bunch of packets show up.",
    "start": "1293510",
    "end": "1299960"
  },
  {
    "text": "You've got two\npackets of buffering. [So you could lose?] packets. This is pretty clear, right?",
    "start": "1299960",
    "end": "1305720"
  },
  {
    "text": "Good. So if it's too\nlittle, what ends up happening is that\nyou drop packets, which suggests that you can't\nhave too little buffering, OK?",
    "start": "1305720",
    "end": "1314339"
  },
  {
    "text": "So, at the other\nend of the spectrum, you could just say,\nwell, I'm going to design my network so\nit never drops a packet.",
    "start": "1314339",
    "end": "1320429"
  },
  {
    "text": "Memory is cheap. We learned about Moore's Law. So let's just over provision,\nalso called too much buffering.",
    "start": "1320430",
    "end": "1327900"
  },
  {
    "text": "OK, it's not really\nthat expensive. So what happens if there's\ntoo much buffering?",
    "start": "1327900",
    "end": "1333240"
  },
  {
    "text": "Well, if you think\nabout it, the only thing that happens when you have too\nmuch buffering as well, packets",
    "start": "1333240",
    "end": "1339399"
  },
  {
    "text": "won't get lost. But all you've\ndone is traded off packet loss for packet delay.",
    "start": "1339400",
    "end": "1344580"
  },
  {
    "text": " Adding more buffering doesn't\nmake your link go any faster.",
    "start": "1344580",
    "end": "1351115"
  },
  {
    "text": "They should probably\nlearn that at Disneyland and places like that. I mean, these lines\nthere are just so long. I mean, they may\nas well tell people",
    "start": "1351115",
    "end": "1356660"
  },
  {
    "text": "to go away and come back later. It's the same principle. I mean, just adding longer\nlines and longer queues doesn't mean that the\nlink goes any faster.",
    "start": "1356660",
    "end": "1364960"
  },
  {
    "text": "So it's really problematic\nto add excessive buffers. And the reason is quite subtle.",
    "start": "1364960",
    "end": "1370500"
  },
  {
    "text": "The reason it actually\nhas to do with something we talked about the last\ntime, or at lease one reason, a critical reason has to do\nwith timers and retransmissions.",
    "start": "1370500",
    "end": "1380100"
  },
  {
    "text": "Recall that all you do when\nyou have too much buffering is you eliminate packet loss\nor at least reduce it greatly",
    "start": "1380100",
    "end": "1386080"
  },
  {
    "text": "at the expense of\nincreasing delays. But the problem with\nincreasing delays is that your timers that you're\ntrying to set up to figure out",
    "start": "1386080",
    "end": "1395090"
  },
  {
    "text": "when to retransmit a\npacket, you would like them to adapt to increasing delays. So he you build this\nexponentially weighted",
    "start": "1395090",
    "end": "1400790"
  },
  {
    "text": "moving average, and you pick\na timeout interval that's based on the mean value,\nand the standard deviation.",
    "start": "1400790",
    "end": "1406640"
  },
  {
    "text": "And the problem with\ntoo much buffering is that it makes these\nadaptive timers extremely hard to implement\nbecause your timeout",
    "start": "1406640",
    "end": "1415190"
  },
  {
    "text": "value has to depend on both the\nmean and standard deviation. And if you have\ntoo much buffering, the range of round-trip\ntime values is too high.",
    "start": "1415190",
    "end": "1425020"
  },
  {
    "text": "And the result of\nthat you end up with this potential\nfor something called congestion collapse.",
    "start": "1425020",
    "end": "1430850"
  },
  {
    "text": " And let me explain\nthis with a picture.",
    "start": "1430850",
    "end": "1449930"
  },
  {
    "text": " So your adaptive\ntimers are trying",
    "start": "1449930",
    "end": "1457360"
  },
  {
    "text": "to estimate the round-trip time,\nand the average round-trip time in the standard deviation\nor at the linear deviation",
    "start": "1457360",
    "end": "1463470"
  },
  {
    "text": "of the round-trip time,\nand at some point they're going to make a decision\nas to whether to retransmit",
    "start": "1463470",
    "end": "1469200"
  },
  {
    "text": "a packet or not. What might happen,\nand what does happen",
    "start": "1469200",
    "end": "1476490"
  },
  {
    "text": "and has happened when you have\ntoo much networks with too much buffering is\nthat you end up with a queue that's really big.",
    "start": "1476490",
    "end": "1483640"
  },
  {
    "text": "OK, and this is some link on\nwhich the packet's going out, and you might have\npacket one sitting here,",
    "start": "1483640",
    "end": "1489612"
  },
  {
    "text": "and two sitting here, and\nthree, and all the way out. There is a large number\nof packets sitting there.",
    "start": "1489612",
    "end": "1495779"
  },
  {
    "text": "Notice that the\nend to end sender is trying to decide\nwhether packet one",
    "start": "1495780",
    "end": "1501460"
  },
  {
    "text": "for whose acknowledgment\nit still hasn't heard. It's trying to decide whether\none is still in transit,",
    "start": "1501460",
    "end": "1506880"
  },
  {
    "text": "or has actually been dropped. And it should\nretransmit the packet only after one has been dropped.",
    "start": "1506880",
    "end": "1512842"
  },
  {
    "text": "But if you have\ntoo much buffering, the range of these\nvalues is so high that it makes these adaptive\ntimers quite difficult to tune.",
    "start": "1512842",
    "end": "1519690"
  },
  {
    "text": "And the result often is that\none is still sitting here. But it had been stuck behind\na large number of packets.",
    "start": "1519690",
    "end": "1525847"
  },
  {
    "text": "So the delay was extremely long. And the end to end\nsender timed out. And when it times out, get\nretransmits one into the queue.",
    "start": "1525847",
    "end": "1534250"
  },
  {
    "text": "And, soon after\nthat, often it might retransmit two, and retransmit\nthree, and retransmit four, and so on. And these packets are sort\nof just stuck in the queue.",
    "start": "1534250",
    "end": "1541440"
  },
  {
    "text": "They're not actually lost. And if you think about\nwhat will happen then, this link, which is already a\ncongested link, because queues",
    "start": "1541440",
    "end": "1548467"
  },
  {
    "text": "have been building up here, long\nqueues have been building up, this link is not starting to use\nmore and more of its capacity",
    "start": "1548467",
    "end": "1556160"
  },
  {
    "text": "to send the same packet twice,\nright, because it sent one out.",
    "start": "1556160",
    "end": "1561190"
  },
  {
    "text": "And the sender\nretransmitted it thinking it was lost when it was just\nstuck behind a long queue. And now one is being sent again.",
    "start": "1561190",
    "end": "1566780"
  },
  {
    "text": "And two is being sent\nagain, and so on.  And graphically, if you look\nat this, what you end up with",
    "start": "1566780",
    "end": "1573490"
  },
  {
    "text": "is a picture that looks\nlike the following. This picture plots the total\noffered load on the X axis,",
    "start": "1573490",
    "end": "1581830"
  },
  {
    "text": "and the throughput of\nthe system on the Y axis where the\nthroughput is defined",
    "start": "1581830",
    "end": "1589250"
  },
  {
    "text": "as the number of useful bits\nper second that you get. So if you send the\npacket one twice,",
    "start": "1589250",
    "end": "1596590"
  },
  {
    "text": "only one of those packets\nis actually useful. Now, initially when\nthe offered load is low",
    "start": "1596590",
    "end": "1602226"
  },
  {
    "text": "and the network\nis not congested, and the offered load is less\nthan the capacity of the link, this curve is just a\nstraight line with slope one,",
    "start": "1602226",
    "end": "1609370"
  },
  {
    "text": "right, because\neverything you offer is below the link's capacity. And it's going through.",
    "start": "1609370",
    "end": "1615530"
  },
  {
    "text": "Now at some point, it hits\nthe link's capacity, right, the bottleneck link's capacity.",
    "start": "1615530",
    "end": "1620789"
  },
  {
    "text": "And after that, any\nextra offered load that you pump into\nthe network is not going to go out any faster.",
    "start": "1620790",
    "end": "1626249"
  },
  {
    "text": "The throughput is still\ngoing to remain the same. And, it's just going\nto be flat for a while.",
    "start": "1626249",
    "end": "1631850"
  },
  {
    "text": "And the reason it's flat is\nthat queues are building up. And, that's one reason that you\ncan't send things any faster. The only thing that's going on\nis that queues are building up.",
    "start": "1631850",
    "end": "1639340"
  },
  {
    "text": "So this curve remains flat. Now, in a decent network\nthat doesn't have congestion collapse, if you don't\ndo anything else,",
    "start": "1639340",
    "end": "1647720"
  },
  {
    "text": "but somehow manage to keep\nthe system working here, this curve might\nremain flat forever. No matter what the\noffered load, you know,",
    "start": "1647720",
    "end": "1653280"
  },
  {
    "text": "you can pump more and\nmore load in the system. And the throughput remains\nflat at the capacity.",
    "start": "1653280",
    "end": "1658820"
  },
  {
    "text": "But the problem is that\nit has interactions with things that the\nhigher layer is are doing, such as these\nretransmissions and timers.",
    "start": "1658820",
    "end": "1665080"
  },
  {
    "text": "And, eventually, more\nand more of the capacity starts being used uselessly for\nthese redundant transmissions.",
    "start": "1665080",
    "end": "1671242"
  },
  {
    "text": "And you might end\nup in a situation where the throughput dies down. OK, and if that\nhappens, this situation",
    "start": "1671242",
    "end": "1679299"
  },
  {
    "text": "is called congestion collapse.  There is more and more work\nbeing presented to the system.",
    "start": "1679300",
    "end": "1688670"
  },
  {
    "text": "If you reach a situation\nwhere the actual amount of useful work that's\nbeen done starts reducing as more work gets\npresented to the system,",
    "start": "1688670",
    "end": "1695730"
  },
  {
    "text": "that's the situation\nof congestion collapse. And this kind of thing shows\nup in many other systems,",
    "start": "1695730",
    "end": "1700880"
  },
  {
    "text": "for example, in things like\nWeb servers that are built out",
    "start": "1700880",
    "end": "1706710"
  },
  {
    "text": "of many stages where you have\na high load presented [at?] the system, you might\nsee congestion collapse",
    "start": "1706710",
    "end": "1712490"
  },
  {
    "text": "in situations where, let's\nsay you get a Web request. And what you have to\ndo is seven stages of processing on\nthe Web request.",
    "start": "1712490",
    "end": "1718940"
  },
  {
    "text": "But what you do\nwith the processor is you take a request,\nand you process it for three of those stages.",
    "start": "1718940",
    "end": "1724920"
  },
  {
    "text": "And then you decide to\ngo to the next request and process at three stages. And, you go to the next request\n[that?] passes at three stages.",
    "start": "1724920",
    "end": "1730630"
  },
  {
    "text": "So, [no?] request gets complete. Your CPU's 100% utilized. But the throughput\nis essentially diving down to zero.",
    "start": "1730630",
    "end": "1736809"
  },
  {
    "text": "That's another situation where\nyou have congestion collapse. But when it occurs\nin networks, it",
    "start": "1736810",
    "end": "1744380"
  },
  {
    "text": "turns out it's more complicated\nto solve the networks because of these reasons that\nI outlined before.",
    "start": "1744380",
    "end": "1750127"
  },
  {
    "start": "1750127",
    "end": "1756190"
  },
  {
    "text": "So has everyone seen this?",
    "start": "1756190",
    "end": "1765929"
  },
  {
    "text": "So let's go back to our problem. Our goal is to, we want\nthis thing to be true.",
    "start": "1765930",
    "end": "1771809"
  },
  {
    "text": "The aggregate offered\nload to be smaller than the capacity of a link\nfor every link in the system.",
    "start": "1771810",
    "end": "1778889"
  },
  {
    "text": "But it turns out that's not\nenough of a specification because there are many\nways to achieve this goal.",
    "start": "1778890",
    "end": "1784910"
  },
  {
    "text": "For example, a really cheesy\nway to achieve this goal is to make sure that\neverybody remains quiet. If nobody sends\nany packets, you're",
    "start": "1784910",
    "end": "1791150"
  },
  {
    "text": "going to get that to be true. So we're going to actually\nhave to define the problem a little bit more completely.",
    "start": "1791150",
    "end": "1796700"
  },
  {
    "text": "And let's first define\nwhat we don't want. The first thing we don't\nwant is congestion collapse.",
    "start": "1796700",
    "end": "1807250"
  },
  {
    "start": "1798000",
    "end": "1838000"
  },
  {
    "text": "So any solution should have\nthe property that it never gets into that situation. And in fact, good\ncongestion control schemes",
    "start": "1807250",
    "end": "1813860"
  },
  {
    "text": "operate at the left\nknee of the curve. But we're not going\nto get too hung up on that because if we operate\na little bit in the middle,",
    "start": "1813860",
    "end": "1820040"
  },
  {
    "text": "we're going to say that's\nfine because that'll turn out to be good enough in practice. And often is just fine.",
    "start": "1820040",
    "end": "1825050"
  },
  {
    "text": "And the additional complexity\nthat you might have to bring to bear on a solution to work\nnearer [the knee?] might not be",
    "start": "1825050",
    "end": "1830730"
  },
  {
    "text": "worth it. OK, but really\nwe're going to worry about not falling off the\ncliff at the right edge, OK?",
    "start": "1830730",
    "end": "1838600"
  },
  {
    "start": "1838000",
    "end": "1906000"
  },
  {
    "text": "And then having done\nthat, we're going to want reasonable utilization\nalso called efficiency.",
    "start": "1838600",
    "end": "1847360"
  },
  {
    "text": "So, what this says is that if\nyou have a network link that's often congested, you\nwant to make sure",
    "start": "1847360",
    "end": "1853529"
  },
  {
    "text": "that that link isn't\nunderutilized when there is offered load around. So for example,\npeople are presenting",
    "start": "1853530",
    "end": "1860350"
  },
  {
    "text": "100 kb per second of\nload, and the network link has that capacity; you\nwant that to be used.",
    "start": "1860350",
    "end": "1866830"
  },
  {
    "text": "You don't want to\nshut them up too much. So what this really\nmeans in practice is that if you have slowed\ndown, and excess capacity",
    "start": "1866830",
    "end": "1873940"
  },
  {
    "text": "has presented\nitself, then you have to make sure that you speed up. So that's what it\nmeans in practice.",
    "start": "1873940",
    "end": "1880050"
  },
  {
    "text": " And the third part\nof the solution is there's another thing\nwe need to specify.",
    "start": "1880050",
    "end": "1888130"
  },
  {
    "text": "And the reason is that you\ncan solve these two problems by making sure that only\none person transmits",
    "start": "1888130",
    "end": "1894490"
  },
  {
    "text": "in the network. OK, if that person has\nenough offered load, then you just got\neverybody out altogether,",
    "start": "1894490",
    "end": "1900150"
  },
  {
    "text": "and essentially\nallocate that resource in sort of a monopolistic\nfashion to this one person.",
    "start": "1900150",
    "end": "1905979"
  },
  {
    "text": "That's not going to be\nvery good because we would like our network to be\nused by a number of people. So I'm going to define that as\na goal of any good solution.",
    "start": "1905979",
    "end": "1914760"
  },
  {
    "start": "1906000",
    "end": "2150000"
  },
  {
    "text": "I'm going to call it\nequitable allocation.  I'm not going to say fair\nallocation because fair",
    "start": "1914760",
    "end": "1921710"
  },
  {
    "text": "suggests that it's\nreally a strong condition that every connection gets a\nroughly equal throughput if it",
    "start": "1921710",
    "end": "1926980"
  },
  {
    "text": "has that offered load. I mean, that turns out to\nbe, I think, in my opinion,",
    "start": "1926980",
    "end": "1932309"
  },
  {
    "text": "achieving perfect fairness\nto TCP connections is just a waste of time\nbecause in reality, fairness",
    "start": "1932310",
    "end": "1938840"
  },
  {
    "text": "is governed by who's paying\nwhat for access to the network. So we're not going to get\ninto that in this class.",
    "start": "1938840",
    "end": "1944340"
  },
  {
    "text": "But we are going to want\nsolutions that don't eliminate, don't starve certain\nconnections out.",
    "start": "1944340",
    "end": "1949562"
  },
  {
    "text": "And we'll be happy\nwith that because that will turn out to work out\njust fine in practice. ",
    "start": "1949562",
    "end": "1957820"
  },
  {
    "text": "Now, to understand this\nproblem a little bit better, we're going to want to\nunderstand this requirement",
    "start": "1957820",
    "end": "1964220"
  },
  {
    "text": "a little bit more closely. And the problem is\nthat this requirement",
    "start": "1964220",
    "end": "1970030"
  },
  {
    "text": "of the aggregate rate\nspecified by the offered load, being smaller than\nthe link capacity is",
    "start": "1970030",
    "end": "1977380"
  },
  {
    "text": "a condition on rates. It just says the offered\nload is 100 kb per second. The capacity is\n150 kb per second.",
    "start": "1977380",
    "end": "1984150"
  },
  {
    "text": "That means it's fine. The problem is that you\nhave to really ask offered",
    "start": "1984150",
    "end": "1989440"
  },
  {
    "text": "load over what timescale? For example, if the overall\noffered load on your network",
    "start": "1989440",
    "end": "1995860"
  },
  {
    "text": "is, let's say, a\nmegabit per second, and the capacity of the network\nis half a megabit per second,",
    "start": "1995860",
    "end": "2002200"
  },
  {
    "text": "and in that condition\nlasts for a whole day, OK, so for a whole day, your\nwebsite got slash dotted.",
    "start": "2002200",
    "end": "2008240"
  },
  {
    "text": "Take that example. And you have this\nlittle wimpy access link through your DSL line.",
    "start": "2008240",
    "end": "2013250"
  },
  {
    "text": "And, ten times that much\nin terms of requests are being presented\nto your website. And, it lasts for the whole day.",
    "start": "2013250",
    "end": "2020269"
  },
  {
    "text": "Guess what. Nothing we're\ngoing to talk about is really going to\nsolve that problem in a way that allows every\nrequest to get through",
    "start": "2020270",
    "end": "2025581"
  },
  {
    "text": "in a timely fashion. At some point, you throw up your\nhands and say, you know what? If I want my website\nto be popular,",
    "start": "2025581",
    "end": "2031380"
  },
  {
    "text": "I'd better put it on a\n10 Mb per second network and make sure that everybody\ncan gain access to it.",
    "start": "2031380",
    "end": "2037602"
  },
  {
    "text": "So we're not really going to\nsolve the problem at that time scale. On the other hand, if\nyour website suddenly",
    "start": "2037602",
    "end": "2044140"
  },
  {
    "text": "got a little bit popular,\nand a bunch of connections came to it, but it didn't\nlast for a whole day,",
    "start": "2044140",
    "end": "2050919"
  },
  {
    "text": "but it lasted for a\nfew seconds, we're going to want to deal\nwith that problem.",
    "start": "2050920",
    "end": "2056839"
  },
  {
    "text": "So if you think about it,\nthere are three timescales that matter here. And these timescales\narise in an actual way",
    "start": "2056840",
    "end": "2062839"
  },
  {
    "text": "because of this network where\ncongestion happens here. And then we're going to\nhave some feedback, go back",
    "start": "2062840",
    "end": "2068780"
  },
  {
    "text": "to the sender, and the\nsender exercises control. And the only timescale\nin this whole system is the round-trip\ntime because that's",
    "start": "2068780",
    "end": "2075690"
  },
  {
    "text": "the timescale, the\norder of magnitude of the timescale around\nwhich any feedback is going to come to us.",
    "start": "2075690",
    "end": "2082030"
  },
  {
    "text": "So there are three\ntimescales of interest. There is smaller than\none round-trip time,",
    "start": "2082030",
    "end": "2087899"
  },
  {
    "text": "which says this inequality is\nnot satisfied for really small.",
    "start": "2087900",
    "end": "2093480"
  },
  {
    "text": "The time where there is\na little spurt, a burst, it's also called a burst,\na burst of packets show up,",
    "start": "2093480",
    "end": "2098680"
  },
  {
    "text": "and then you have\nto handle them. But then after that,\nthings get to be fine.",
    "start": "2098680",
    "end": "2105565"
  },
  {
    "text": "So there is smaller than\none round-trip time. So this is summation LI\nis greater than C, i.e.",
    "start": "2105565",
    "end": "2111180"
  },
  {
    "text": "the network is congested. It could be congested at\nreally short durations that are smaller than a roundtrip time.",
    "start": "2111180",
    "end": "2116840"
  },
  {
    "text": "It could be between\none and I'm going to say 100 round-trip times. ",
    "start": "2116840",
    "end": "2122950"
  },
  {
    "text": "And just for real\nnumbers, a round-trip time is typically order of 100 ms.",
    "start": "2122950",
    "end": "2128310"
  },
  {
    "text": "So we are talking here\nof less than 100 ms up to about ten seconds, and then\nbigger than this number, OK?",
    "start": "2128310",
    "end": "2137010"
  },
  {
    "text": "Bigger than 100. And these are all\norders of magnitude.",
    "start": "2137010",
    "end": "2142230"
  },
  {
    "text": "I mean, it could be 500 RTT's. OK, those are the three\ntime scales to worry about. ",
    "start": "2142230",
    "end": "2150300"
  },
  {
    "text": "When congestion happens at\nless than one roundtrip time, we're going to solve that\nproblem using this technique.",
    "start": "2150300",
    "end": "2156470"
  },
  {
    "text": "We're going to solve\nit using buffering, OK? And, that's the plan. The reason is that it's really\nhard to do anything else",
    "start": "2156470",
    "end": "2163030"
  },
  {
    "text": "because the congestion\nlasts for certain burst. And by the time you\nfigure that out and tell",
    "start": "2163030",
    "end": "2168693"
  },
  {
    "text": "the sender of that,\nthe congestion has gone away, which\nmeans telling the sender that the congestion\nhas gone away, which means telling the sender\nthat the congestion has gone",
    "start": "2168694",
    "end": "2174990"
  },
  {
    "text": "away was sort of a waste\nbecause the sender would have slowed down. But the congestion\nanyway went away. So, why bother, right?",
    "start": "2174990",
    "end": "2181160"
  },
  {
    "text": "Why did you tell\nthe sender that? So that's the kind\nof thing you want to solve at the network\nlayer inside the switches.",
    "start": "2181160",
    "end": "2187547"
  },
  {
    "text": "And that's going to be\ndone using buffering.  And that sort of\nsuggests, and there's",
    "start": "2187547",
    "end": "2194240"
  },
  {
    "text": "a bit of sleight-of-hand here. And we're not going\nto talk about why there's a sleight-of-hand. But this really suggests\nthat if you design a network",
    "start": "2194240",
    "end": "2201900"
  },
  {
    "text": "and you want to put\nbuffering in the network, you'd better not put more than\nabout a round-trip time's worth",
    "start": "2201900",
    "end": "2206910"
  },
  {
    "text": "of buffering in that switch. If you put buffering longer\nthan a round-trip time, you're getting in\nthe way of things",
    "start": "2206910",
    "end": "2212840"
  },
  {
    "text": "that the higher layers\nare going to be doing. And it's going to confuse them. In fact, Sam showed\nyou this picture",
    "start": "2212840",
    "end": "2218190"
  },
  {
    "text": "of these round-trip\ntimes varying a lot between the last\nlecture where the mean was",
    "start": "2218190",
    "end": "2224312"
  },
  {
    "text": "two and a half seconds. And the standard deviation\nwas one and a half seconds. That was not a made-up picture. That was from a real\nwireless network",
    "start": "2224312",
    "end": "2230591"
  },
  {
    "text": "where the designers\nhad incorrectly put a huge amount of buffering. And this is extremely common.",
    "start": "2230591",
    "end": "2235609"
  },
  {
    "text": "Almost every modem that you buy,\ncellular modem or phone modem, has way too much\nbuffering in it.",
    "start": "2235610",
    "end": "2241210"
  },
  {
    "text": "And, the only thing that happens\nis these queues build up. It's just a mistake. ",
    "start": "2241210",
    "end": "2247700"
  },
  {
    "text": "So less than one roundtrip time:\ndeal with it using buffering. ",
    "start": "2247700",
    "end": "2254119"
  },
  {
    "text": "Between one and 100\nround-trip times, we're going to deal with that\nproblem using the techniques",
    "start": "2254120",
    "end": "2260010"
  },
  {
    "text": "that we are going to talk about\ntoday, the next five or ten minutes.",
    "start": "2260010",
    "end": "2265369"
  },
  {
    "text": "And then bigger than 100\nround-trip times or 1,000 round-trip times are things\nwhere congestion is just sort of persistent for many,\nmany, many seconds or minutes",
    "start": "2265370",
    "end": "2273910"
  },
  {
    "text": "or hours. And there are ways of dealing\nwith this problem using",
    "start": "2273910",
    "end": "2280280"
  },
  {
    "text": "protocols and using algorithms. But ultimately you have to ask\nyourself whether you are really under provisioned,\nand you really",
    "start": "2280280",
    "end": "2286465"
  },
  {
    "text": "ought to be buying or\nprovisioning your network to be higher, maybe put\nyour [UNINTELLIGIBLE] on a different network\nthat has higher capacity.",
    "start": "2286465",
    "end": "2292820"
  },
  {
    "text": "And these are longer\ntimes congestion effects for which decisions\nbased on provisioning",
    "start": "2292820",
    "end": "2300310"
  },
  {
    "text": "have to probably come to\nplay in solving the problem. ",
    "start": "2300310",
    "end": "2308885"
  },
  {
    "start": "2308000",
    "end": "2330000"
  },
  {
    "text": "So, provisioning is certainly\nan important problem. And when you have\ncongestion lasting really long periods\nof time, that",
    "start": "2308885",
    "end": "2314280"
  },
  {
    "text": "might be the right solution. But for everything\nelse, there is",
    "start": "2314280",
    "end": "2322780"
  },
  {
    "text": "solutions that are much easier\nto understand, or at least as far as using the tools that\nwe've built so far in 6.033.",
    "start": "2322780",
    "end": "2329839"
  },
  {
    "text": "So, the first component\nof the solution is some buffering to deal\nwith the smaller than one",
    "start": "2329840",
    "end": "2336630"
  },
  {
    "start": "2330000",
    "end": "2671000"
  },
  {
    "text": "round-trip time situation.  And then when your buffers\nstart getting filled up,",
    "start": "2336630",
    "end": "2345539"
  },
  {
    "text": "and congestion is lasting for\nmore than a round-trip time, then your buffers start\ngetting filled up.",
    "start": "2345540",
    "end": "2350630"
  },
  {
    "text": "At that point, you're starting\nto see congestion that can't be hidden by pure buffering.",
    "start": "2350630",
    "end": "2357280"
  },
  {
    "text": "And that can't be hidden\nbecause queues are building up, and that's causing increased\ndelay to show up at the sender,",
    "start": "2357280",
    "end": "2362300"
  },
  {
    "text": "and perhaps packets may\nstart getting dropped when the queue overflows. And that causes the sender to\nobserve this congestion, which",
    "start": "2362300",
    "end": "2371170"
  },
  {
    "text": "means that what we want\nis a plan by which, when congestion happens lasting\nover half a round-trip time",
    "start": "2371170",
    "end": "2378089"
  },
  {
    "text": "or close to a\nround-trip time, we're going to want to provide\nfeedback to the sender, OK?",
    "start": "2378090",
    "end": "2384866"
  },
  {
    "text": "And then the third\npart of our solution is when the sender gets this\nfeedback, what it's going to do",
    "start": "2384866",
    "end": "2392380"
  },
  {
    "text": "is adapt.  And the way it's going to\nadapt is actually easy. It's going to do it by\nmodifying the rate at which it",
    "start": "2392380",
    "end": "2400710"
  },
  {
    "text": "sends packets. And that's what are set up. The sender sends at rate RI. What you do is you change\nthe rate or the speed",
    "start": "2400710",
    "end": "2410369"
  },
  {
    "text": "at which the sender sends.  So, there's two things\nwe have to figure out.",
    "start": "2410370",
    "end": "2416820"
  },
  {
    "text": "One is, how does the\nnetwork give feedback? And the second is, what\nexactly is going on",
    "start": "2416820",
    "end": "2421941"
  },
  {
    "text": "with changing the speed? How does it work?  There are many ways\nto give feedback,",
    "start": "2421941",
    "end": "2427850"
  },
  {
    "text": "and sort of the first order of\nthings you might think about are, well, when the\nqueue starts to fill up,",
    "start": "2427850",
    "end": "2433010"
  },
  {
    "text": "I'll send a message\nto the sender, or I'll send a bit in the packet\nheader and get to the endpoint, and it'll send\nthis feedback back.",
    "start": "2433010",
    "end": "2439060"
  },
  {
    "text": "And any variant that you can\nthink of in the next five or ten minutes I can assure\nyou has been thought of",
    "start": "2439060",
    "end": "2444519"
  },
  {
    "text": "and investigated. And you might think\nof new ways of doing it which would be great. I mean, this is a\ntopic of active work.",
    "start": "2444520",
    "end": "2451509"
  },
  {
    "text": "People are working\non this stuff still. But my opinion is\nthat the best way to solve this\nproblem of feedback",
    "start": "2451510",
    "end": "2458240"
  },
  {
    "text": "is the simplest possible\nthing you could think of. The simplest technique that\nreally works all the time is just drop the packet.",
    "start": "2458240",
    "end": "2465560"
  },
  {
    "text": "In particular, if the\nqueue overflows, and it's going to get dropped anyway,\nand that's a sign of congestion, but if at any point in time\nyou decide that the network is",
    "start": "2465560",
    "end": "2472516"
  },
  {
    "text": "getting congested and remains\nso for a long enough time scale that you want the\nsender to react, just throw the packet away.",
    "start": "2472516",
    "end": "2478227"
  },
  {
    "text": "The last thing about\nthrowing a packet away is that it's extremely\nhard to implement it wrong because when the\nqueue overflows,",
    "start": "2478227",
    "end": "2483594"
  },
  {
    "text": "the packet's going\nto be dropped anyway. So that feedback is going to be\nmade available to the sender. ",
    "start": "2483594",
    "end": "2492970"
  },
  {
    "text": "So what we're going\nto assume for now is that all packet drops\nthat happen in networks",
    "start": "2492970",
    "end": "2498350"
  },
  {
    "text": "are a sign of congestion, OK? And when a packet gets dropped,\nthe sender gets that feedback.",
    "start": "2498350",
    "end": "2504952"
  },
  {
    "text": "And, the reason it\ngets that feedback is, remember that every\npacket's being acknowledged. So if it misses\nan acknowledgment,",
    "start": "2504952",
    "end": "2511010"
  },
  {
    "text": "then it knows that the\npacket's been dropped. And it says, ah, the\nnetwork is congested.",
    "start": "2511010",
    "end": "2516650"
  },
  {
    "text": "And then I'm going\nto change my speed. And, I'm going to\nchange my speed by reducing the rate at which\nI'm going to send packets.",
    "start": "2516650",
    "end": "2524519"
  },
  {
    "text": "So now, we have to ask\nhow the sender adapts to congestion, how the speed\nthing actually works out. ",
    "start": "2524520",
    "end": "2536480"
  },
  {
    "text": "Well? It says up.",
    "start": "2536480",
    "end": "2543794"
  },
  {
    "text": "It's already up. Yeah, it doesn't\nhave a down button.",
    "start": "2543794",
    "end": "2549119"
  },
  {
    "text": " What's that? ",
    "start": "2549120",
    "end": "2559180"
  },
  {
    "text": "Sam? ",
    "start": "2559180",
    "end": "2564940"
  },
  {
    "text": "How many professors\ndoes it take to --",
    "start": "2564940",
    "end": "2589950"
  },
  {
    "text": "He turned the thing off. He turned the light off on that. This might actually work.",
    "start": "2589950",
    "end": "2599740"
  },
  {
    "text": "Can you see that?  I bet it's a race condition.",
    "start": "2599740",
    "end": "2607420"
  },
  {
    "text": "All right, so, can you see that? OK, let's just move from here. OK, the way we're\ngoing to figure out",
    "start": "2607420",
    "end": "2613181"
  },
  {
    "text": "the rate at which we're\ngoing to send our packets is to use this idea\nof a sliding window that we talked\nabout the last time.",
    "start": "2613181",
    "end": "2619030"
  },
  {
    "text": "And since Sam did\nsuch a nice animation, I'm going to display that\nagain, just a refresher.",
    "start": "2619030",
    "end": "2626510"
  },
  {
    "text": "Wonderful. All right. [APPLAUSE] And since Sam\nmade this nice animation,",
    "start": "2626510",
    "end": "2634579"
  },
  {
    "text": "I'm going to play that back. I've always wanted to\nsay, play it again, Sam.",
    "start": "2634580",
    "end": "2641329"
  },
  {
    "text": "So, what's going on\nhere is that whenever the receiver\nreceives a packet, it",
    "start": "2641330",
    "end": "2647550"
  },
  {
    "text": "sends in acknowledgment back. And the sender's pipelining\npackets going through. And whatever the sender\ngets an acknowledgment,",
    "start": "2647550",
    "end": "2653390"
  },
  {
    "text": "it sends a new packet off. And that's where\nyou see happening. Whenever it gets\nan acknowledgment, a new packet goes out\nonto the other end.",
    "start": "2653390",
    "end": "2659720"
  },
  {
    "text": "And, the window's\nsliding by one every time it gets an acknowledgement. So this is sort of the way in\nwhich this steady-state thing",
    "start": "2659720",
    "end": "2666620"
  },
  {
    "text": "works out for us\nin this network. So the main point\nto note about this",
    "start": "2666620",
    "end": "2673470"
  },
  {
    "start": "2671000",
    "end": "2799000"
  },
  {
    "text": "is that this scheme\nhas an effect that I'll call self pacing.",
    "start": "2673470",
    "end": "2679349"
  },
  {
    "text": "OK, it's self pacing because\nthe sender doesn't actually have to worry very much\nabout when it should exactly",
    "start": "2679350",
    "end": "2685480"
  },
  {
    "text": "send a packet because\nit's being told every time an\nacknowledgment arrives, it's being told that the reason\nI got an acknowledgment is",
    "start": "2685480",
    "end": "2692230"
  },
  {
    "text": "because one packet left the\nnetwork, which means I can send one packet into the network. And as long as things\nweren't congested before,",
    "start": "2692230",
    "end": "2698060"
  },
  {
    "text": "they won't be\ncongested now, right, because packets\nhave left the pipe. For every packet that leaves,\nyou're putting one packet in.",
    "start": "2698060",
    "end": "2704590"
  },
  {
    "text": "This is an absolutely beautiful\nidea called self-pacing. And, the idea here is that\n[acts?] essentially [strobe?]",
    "start": "2704590",
    "end": "2711880"
  },
  {
    "text": "data packets. And, like all a\nreally nice ideas, it's extremely simple to get it.",
    "start": "2711880",
    "end": "2718476"
  },
  {
    "text": "And it turns out to have\nlots of implications for why the congestion\ncontrol system is actually",
    "start": "2718476",
    "end": "2723730"
  },
  {
    "text": "stable in reality. So what this means,\nfor example, is let's say that things are fine. And, all of a sudden\na bunch of packets",
    "start": "2723730",
    "end": "2729527"
  },
  {
    "text": "come in from somewhere\nelse, and the network starts to get congested. What's going to\nhappen is that queues are going to start building up.",
    "start": "2729527",
    "end": "2736330"
  },
  {
    "text": "But, when queues start\nbuilding up, what happens is that transmissions that are\nongoing for this connection",
    "start": "2736330",
    "end": "2742020"
  },
  {
    "text": "are just going to slow down\na little bit because they're going to get interleaved\nwith other packets in the queue, which means the\nacts are going to come back",
    "start": "2742020",
    "end": "2748850"
  },
  {
    "text": "slower because how\ncan the acts come back any faster than the network\ncan deliver them, which means automatically the sender has\na slowing down effect dealing",
    "start": "2748850",
    "end": "2756520"
  },
  {
    "text": "with transient congestion. This is a really,\nreally nice behavior. And as a consequence\nof the way in which",
    "start": "2756520",
    "end": "2763089"
  },
  {
    "text": "the self pacing of, the way\nin which the sliding window thing here works.",
    "start": "2763090",
    "end": "2769119"
  },
  {
    "text": "So now, at some point the\nnetwork might become congested,",
    "start": "2769120",
    "end": "2777610"
  },
  {
    "text": "and a packet may get dropped. So, the way that manifests\nitself as one packet gets dropped, the corresponding\nacknowledgment",
    "start": "2777610",
    "end": "2783910"
  },
  {
    "text": "doesn't get back to the sender. And when an acknowledgment\ndoesn't get back to the sender, what\nthe sender does",
    "start": "2783910",
    "end": "2790299"
  },
  {
    "text": "is reduce its\nwindow size by two. ",
    "start": "2790300",
    "end": "2799630"
  },
  {
    "start": "2799000",
    "end": "2821000"
  },
  {
    "text": "OK, so I should mention here\nthere are really two windows going on. One window is the window that\nwe talked about last time",
    "start": "2799630",
    "end": "2806280"
  },
  {
    "text": "where the receiver tells the\nsender how much buffer space that it has. And the other window,\nanother variable",
    "start": "2806280",
    "end": "2813410"
  },
  {
    "text": "that we just introduced which\nis maintained by the sender, and it's also called the\ncongestion window, OK?",
    "start": "2813410",
    "end": "2820880"
  },
  {
    "text": "And this is a\ndynamic variable that constantly changing as\nthe sender gets feedback",
    "start": "2820880",
    "end": "2826160"
  },
  {
    "start": "2821000",
    "end": "2853000"
  },
  {
    "text": "from the receiver. And in response to\na missing act when you determine that\na packet is lost, you say its congestion\nis going on.",
    "start": "2826160",
    "end": "2831900"
  },
  {
    "text": "And I want to reduce\nmy window size. And there are many\nways to reduce it. We're going to just\nmultiplicatively decrease it. And the reason for that\nhas to do with the reason",
    "start": "2831900",
    "end": "2838930"
  },
  {
    "text": "why, for example,\non the Ethernet you found that you were\ndoing exponential back off. You're sort of\ngeometrically increasing",
    "start": "2838930",
    "end": "2845520"
  },
  {
    "text": "the spacing with which you\nare sending packets there. You're doing the\nsame kind of thing here reducing the rate\nby a factor of two.",
    "start": "2845520",
    "end": "2853530"
  },
  {
    "text": "So that's how you slowdown. At some point you might\nget in a situation where no acknowledgments\ncome back for a while.",
    "start": "2853530",
    "end": "2860340"
  },
  {
    "text": "Say, many packets\ngets lost, right? And that could happen. All of a sudden there's a\nlot of congestion going on.",
    "start": "2860340",
    "end": "2865868"
  },
  {
    "text": "You get nothing back. At that point, you've lost this\nability for acknowledgments to strobe new data packets.",
    "start": "2865868",
    "end": "2872519"
  },
  {
    "text": "OK, so the acts have acted\nas a clock allowing you to strobe packets through. And you've lost that.",
    "start": "2872520",
    "end": "2877680"
  },
  {
    "text": "At this point, your best\nplan is just to stop. And you halt for a while. It's also called a\ntimeout where you just",
    "start": "2877680",
    "end": "2884410"
  },
  {
    "text": "be quiet for awhile, often on\nthe order of a second or more. And then you try to\nstart over again.",
    "start": "2884410",
    "end": "2891087"
  },
  {
    "start": "2891000",
    "end": "3045000"
  },
  {
    "text": "Of course, now we have to figure\nout how you start over again. And that's the same\nproblem you have when you start a connection\nin the beginning.",
    "start": "2891087",
    "end": "2897070"
  },
  {
    "text": "When a connection starts up, how\ndoes it know how fast to send? It's the same problem as when\nmany, many packet drops happen,",
    "start": "2897070",
    "end": "2902590"
  },
  {
    "text": "and you timeout. And, in TCP, that startup is\ndone using something called, a technique called slow start.",
    "start": "2902590",
    "end": "2908937"
  },
  {
    "text": "And I'll describe the algorithm. It's a really elegant algorithm,\nand it's very, very simple to implement.",
    "start": "2908937",
    "end": "2914414"
  },
  {
    "text": "So you have a\nsender and receiver. And the plan is\ninitially, the sender wants to initiate a\nconnection to the receiver. It sends a request.",
    "start": "2914414",
    "end": "2920140"
  },
  {
    "text": "It gets the response back\nwith the flow control window. It just says how much\nbuffer space the receiver currently has.",
    "start": "2920140",
    "end": "2925690"
  },
  {
    "text": "OK, we're not going to use\nthat anymore in this picture. But it's just\nthere saying, which means the sender can never\nsend more than eight packets",
    "start": "2925690",
    "end": "2932961"
  },
  {
    "text": "within any given roundtrip. Then what happens is the\nsender sends the first segment, and it gets an act.",
    "start": "2932961",
    "end": "2938920"
  },
  {
    "text": "So, initially this congestion\nwindow value starts off at one. OK, so you send one packet. One segment, you get\nan acknowledgment back.",
    "start": "2938920",
    "end": "2945930"
  },
  {
    "text": "And now the plan is that\nthe algorithm is as follows. For every acknowledgment\nyou get back,",
    "start": "2945930",
    "end": "2951210"
  },
  {
    "text": "you increase the\ncongestion window by one. OK, so what this means is when\nyou get this acknowledgment",
    "start": "2951210",
    "end": "2958510"
  },
  {
    "text": "back, you send out two packets. And each of those two\npackets and sends you",
    "start": "2958510",
    "end": "2964460"
  },
  {
    "text": "back two acknowledgements. Now, for each of those\ntwo acknowledgements,",
    "start": "2964460",
    "end": "2969520"
  },
  {
    "text": "you increase the\nwindow by one, which means that after you got\nboth those acknowledgements, you've increased\nyour window by two.",
    "start": "2969520",
    "end": "2975284"
  },
  {
    "text": "In previously, the\nwindow was two. So, now you can\nsend four packets. So what happens is in response\nto the rape acknowledgment,",
    "start": "2975284",
    "end": "2980780"
  },
  {
    "text": "you send out two packets. In response to the light\nblue acknowledgement, you send out two more packets.",
    "start": "2980780",
    "end": "2986970"
  },
  {
    "text": "And now, those get\nthrough to the other side, they send back\nacknowledgments to you. In response to\neach one of those,",
    "start": "2986970",
    "end": "2992000"
  },
  {
    "text": "you increase the window by one. So increasing the window by\none on each acknowledgment means you can send two packets.",
    "start": "2992000",
    "end": "2998420"
  },
  {
    "text": "The reason is that one\npacket went through. And you got an acknowledgment. So in response to\nthe acknowledgment,",
    "start": "2998420",
    "end": "3004680"
  },
  {
    "text": "you could send\none packet to fill in the space occupied\nby the packet that",
    "start": "3004680",
    "end": "3010329"
  },
  {
    "text": "just got acknowledged. In addition, you\nincrease the window by one, which means you\ncan send one more packet.",
    "start": "3010330",
    "end": "3016260"
  },
  {
    "text": "So really, what's going\non with this algorithm is if on each act, you\nsend two segments, which",
    "start": "3016260",
    "end": "3021570"
  },
  {
    "text": "means you increase\nthe window by one, the congestion window by\none, really what happens is the rate at which this window\nopens is exponential in time",
    "start": "3021570",
    "end": "3028010"
  },
  {
    "text": "because in every roundtrip,\nfrom one roundtrip to the next, you're doubling the\nentire window, OK?",
    "start": "3028010",
    "end": "3033812"
  },
  {
    "text": "So although it's called slow\nstart, it's really quite fast. And, it's an\nexponential increase.",
    "start": "3033812",
    "end": "3039010"
  },
  {
    "text": "So if you put it\nall together, it will turn out that the way in\nwhich algorithms like the TCP",
    "start": "3039010",
    "end": "3047140"
  },
  {
    "text": "algorithm works is it starts\noff at a value of the congestion window. If this is the congestion\nwindow, and this is time,",
    "start": "3047140",
    "end": "3052670"
  },
  {
    "text": "it starts off at some\nsmall value like one. And, it increases exponentially. ",
    "start": "3052670",
    "end": "3058780"
  },
  {
    "text": "And then, if you continually\nincrease exponentially, this is a recipe for congestion. It's surely going to overflow\nsome buffer and slowdown.",
    "start": "3058780",
    "end": "3065120"
  },
  {
    "text": "So what really happens in\npractice is after a while, based on some threshold, it\njust automatically decides",
    "start": "3065120",
    "end": "3071980"
  },
  {
    "text": "it's probably not worth\ngoing exponentially fast. And, it turns out slows down\nto go at a linear increase.",
    "start": "3071980",
    "end": "3078805"
  },
  {
    "text": "So every round-trip time\nit's increasing the window by a constant amount. And then at some point,\ncongestion might happen.",
    "start": "3078805",
    "end": "3084940"
  },
  {
    "text": "And when congestion\nhappens, we drop the window by a factor of two. So, we cut down to a factor\nof two of the current window.",
    "start": "3084940",
    "end": "3091359"
  },
  {
    "text": "And then, we continue\nto increase linearly. And then you might have\ncongestion coming again.",
    "start": "3091360",
    "end": "3096859"
  },
  {
    "text": "For instance, we might have lost\nall of the acknowledgements, not got any of the\nacknowledgements,",
    "start": "3096860",
    "end": "3102790"
  },
  {
    "text": "losing a lot of packets, which\nmeans we go down to this thing where we've lost the act clock. So, we have to time out.",
    "start": "3102790",
    "end": "3108650"
  },
  {
    "text": "And, it's like a new connection. So, we remain\nsilent for a while. And this period is\nthe time out period",
    "start": "3108650",
    "end": "3114090"
  },
  {
    "text": "that's governed by the\nequations that we talked about the last time based\non the roundtrip time and the standard deviation.",
    "start": "3114090",
    "end": "3119494"
  },
  {
    "text": "We remain quiet for a while,\nand then we start over as if it's a new connection. And we increase exponentially.",
    "start": "3119494",
    "end": "3125949"
  },
  {
    "text": "And this time, we\ndon't exponentially increase as we did\nthe very first time. We actually exponentially\nincrease only for a little bit",
    "start": "3125949",
    "end": "3132580"
  },
  {
    "text": "because we knew that\ncongestion happened here. So, we go up to some\nfraction of that, and then",
    "start": "3132580",
    "end": "3137859"
  },
  {
    "text": "increase linearly. So the exact details\nare not important. The thing that's important is\njust understanding that when",
    "start": "3137860",
    "end": "3144367"
  },
  {
    "text": "congestion occurs, you will drop\nyour window by a factor [of?] some multiplicative degrees. And at the beginning\nof connection,",
    "start": "3144367",
    "end": "3150237"
  },
  {
    "text": "you're trying to quickly\nfigure out what the sustainable capacity is. So he you are going in\nthis increase phase here.",
    "start": "3150237",
    "end": "3155770"
  },
  {
    "text": "But after awhile,\nyou don't really want to be exponentially\nincreasing all the time because that's almost\nguaranteed to overrun buffers.",
    "start": "3155770",
    "end": "3161740"
  },
  {
    "text": "So you want to go into\na more [ginger mode?]. And, people have proposed\ncongestion control schemes that do all sorts of things,\nall sorts of functions.",
    "start": "3161740",
    "end": "3168400"
  },
  {
    "text": "But this is the\nthing that's just out there on all of the computers. And it works remarkably well.",
    "start": "3168400",
    "end": "3173529"
  },
  {
    "text": "So, there's two basic points\nyou have to take home from here. The main goal of\ncongestion control is to avoid congestion\ncollapse, which",
    "start": "3173529",
    "end": "3179230"
  },
  {
    "text": "is the picture that's being\nhidden behind that, which is that as often\nload increases, you don't want throughput\nto drop like a cliff.",
    "start": "3179230",
    "end": "3186370"
  },
  {
    "text": "And this is a cross\nlayer problem. And the essence of\nall solutions is to use a combination of network\nlayer feedback and end system",
    "start": "3186370",
    "end": "3194800"
  },
  {
    "text": "control, end to end control. And, good solutions\nwork across eight orders of magnitude of\nbandwidth, and four orders",
    "start": "3194800",
    "end": "3201119"
  },
  {
    "text": "of magnitude of delay. So, with that, we'll start. DP1 is due tomorrow. Have a great spring break, and\nsee you after spring break.",
    "start": "3201120",
    "end": "3209390"
  },
  {
    "start": "3209390",
    "end": "3216543"
  }
]