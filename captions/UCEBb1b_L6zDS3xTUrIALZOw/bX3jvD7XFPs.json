[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "7410"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation or view\nadditional materials from",
    "start": "7410",
    "end": "13960"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at",
    "start": "13960",
    "end": "19790"
  },
  {
    "text": "ocw.mit.edu.  PROFESSOR: Good morning. ",
    "start": "19790",
    "end": "27870"
  },
  {
    "text": "This is 600. So I hope any of you who thought\nthis was a different course find where you\nreally belong.",
    "start": "27870",
    "end": "36810"
  },
  {
    "text": "My name is John Guttag. And I'll be lecturing the\ncourse all semester.",
    "start": "36810",
    "end": "43650"
  },
  {
    "text": "OK. Today I want to accomplish\nseveral things. Cover some of the administrative\ndetails.",
    "start": "43650",
    "end": "51290"
  },
  {
    "text": "Talk about the goals\nof the course-- what I hope you'll learn. And then begin talking\nabout the conceptual",
    "start": "51290",
    "end": "58430"
  },
  {
    "text": "material in the course. It will seem a little bit slow,\nbecause it will be a",
    "start": "58430",
    "end": "64000"
  },
  {
    "text": "little bit slow. I promise starting on Thursday\nwe're going to pick up the pace considerably.",
    "start": "64000",
    "end": "70119"
  },
  {
    "text": "So let's start with the\nstrategic goals of the course. ",
    "start": "70120",
    "end": "77160"
  },
  {
    "text": "The official introduction\nto course 6 is 601. Historically, students who\narrive at MIT with little or",
    "start": "77160",
    "end": "85549"
  },
  {
    "start": "80000",
    "end": "564000"
  },
  {
    "text": "no programming experience\nfind 601 an ordeal.",
    "start": "85550",
    "end": "90930"
  },
  {
    "text": "And the point of this is\nto prepare freshman and sophomores for entering\ncourse 6--",
    "start": "90930",
    "end": "97040"
  },
  {
    "text": "that's the Electrical\nEngineering Computer Science department-- in a gentler, kinder way.",
    "start": "97040",
    "end": "103070"
  },
  {
    "text": "So that 601 is not so\nmuch of a problem.",
    "start": "103070",
    "end": "108550"
  },
  {
    "text": "I want to help students\nfeel justifiably-- and I want to emphasize\nthe word justifiably--",
    "start": "108550",
    "end": "114299"
  },
  {
    "text": "confident in their ability\nto write small and medium sized programs. So at the end of the term, you\nshould all feel comfortable",
    "start": "114300",
    "end": "123200"
  },
  {
    "text": "writing programs. The real theme of the course,\nand what I spend most of the",
    "start": "123200",
    "end": "128899"
  },
  {
    "text": "time on, is how to map\nproblems into a computational framework.",
    "start": "128900",
    "end": "135760"
  },
  {
    "text": "There's going to be an emphasis\non scientific problems, rather than, say,\ncommercial problems.",
    "start": "135760",
    "end": "141440"
  },
  {
    "text": "But there will be some talk\nabout some non-scientific problems as well. How to take a problem that may\nnot at first blush appear to",
    "start": "141440",
    "end": "150810"
  },
  {
    "text": "be attackable with the program,\nand show you how to formulate the problem in such\na way that you can use",
    "start": "150810",
    "end": "158090"
  },
  {
    "text": "computation to get insight\ninto the problem. It should not take\nyou very long.",
    "start": "158090",
    "end": "164142"
  },
  {
    "text": "All of the problem sets involve\nprogramming in Python programming language, which I'll\nsay a little bit about",
    "start": "164142",
    "end": "170700"
  },
  {
    "text": "later today. The first problem set,\nbasically, is getting Python",
    "start": "170700",
    "end": "176000"
  },
  {
    "text": "installed on your\nown computer. Most of the people will want to\njust use whatever their own",
    "start": "176000",
    "end": "182330"
  },
  {
    "text": "laptop is to do the\nproblem sets on. Don't get fooled by the first\ntwo problem sets into thinking",
    "start": "182330",
    "end": "189210"
  },
  {
    "text": "this is a gut course. It's not. It starts out gently\nto lure you in.",
    "start": "189210",
    "end": "197610"
  },
  {
    "text": "And then life gets pretty\nhard pretty quickly. So don't be fooled.",
    "start": "197610",
    "end": "205020"
  },
  {
    "text": "The quizzes-- and there will be two evening\nquizzes and a final-- are open book open notes.",
    "start": "205020",
    "end": "213530"
  },
  {
    "text": "When you get to be my age, you\nget very sensitive about how difficult it is to\nremember things.",
    "start": "213530",
    "end": "219140"
  },
  {
    "text": "And so, we won't be asking\nyou to memorize stuff. The course is about solving\nproblems, knowing how to solve",
    "start": "219140",
    "end": "226530"
  },
  {
    "text": "problems, not how much\nyou can remember. For many of you who are majoring\nin biology or course",
    "start": "226530",
    "end": "234829"
  },
  {
    "text": "20, it's going to be kind of a\nshock that this course isn't about how much you can remember,\nbut it's about how",
    "start": "234830",
    "end": "241910"
  },
  {
    "text": "well you can solve problems. And that's what the quizzes\nare really going to be focused on.",
    "start": "241910",
    "end": "248140"
  },
  {
    "text": "Probably the most unusual thing\nabout this course is the collaboration policy, which\nis liberal in the extreme.",
    "start": "248140",
    "end": "260199"
  },
  {
    "text": "You can collaborate with anybody\nyou want on any of the problem sets.",
    "start": "260200",
    "end": "265270"
  },
  {
    "text": "Not on the quizzes. But on any of the\nproblem sets. You can work with each other,\nwhich is what I recommend.",
    "start": "265270",
    "end": "272090"
  },
  {
    "text": "You can work with your parents,\nif one of them happens to be a software\nengineer.",
    "start": "272090",
    "end": "277259"
  },
  {
    "text": "You can work with friends\nin course 6. Whatever you want to do.",
    "start": "277260",
    "end": "282780"
  },
  {
    "text": "The goal of the problem sets\nis to help you learn. What we've seen in the past is\npeople who are a little, shall",
    "start": "282780",
    "end": "291750"
  },
  {
    "text": "I say too collaborative, i.e.\nthey just copy the problem set from somebody else, live in a\nfool's paradise which comes",
    "start": "291750",
    "end": "299840"
  },
  {
    "text": "crashing down at\nthe first quiz. People who don't spend enough\ntime thinking about the",
    "start": "299840",
    "end": "306130"
  },
  {
    "text": "problem sets themselves cannot\ntake the quizzes successfully.",
    "start": "306130",
    "end": "311560"
  },
  {
    "text": "So it's a fine line. But our goal is not\nto be policemen.",
    "start": "311560",
    "end": "319570"
  },
  {
    "text": "I tell my TAs, their job is to\nhelp you learn, not to prevent you from, quote, cheating.",
    "start": "319570",
    "end": "326540"
  },
  {
    "text": "So to solve that problem, we've\neliminated the concept of cheating on problem sets.",
    "start": "326540",
    "end": "331580"
  },
  {
    "text": "There is no way to cheat\non problem sets. So just go and do them.",
    "start": "331580",
    "end": "336740"
  },
  {
    "text": "There's no textbook. We will be posting readings\non the web.",
    "start": "336740",
    "end": "342990"
  },
  {
    "text": "For the most part, these will\nbe pointers to websites. Occasionally we'll\npost readings that we wrote ourselves.",
    "start": "342990",
    "end": "352030"
  },
  {
    "text": "Doesn't mean you shouldn't\nbuy a textbook. In fact, there are a number\nof Python texts.",
    "start": "352030",
    "end": "358690"
  },
  {
    "text": "We'll recommend a few of them. It might make sense to buy one\nand bring it to a quiz,",
    "start": "358690",
    "end": "364020"
  },
  {
    "text": "because it will have an index\nthat will let you look things up quickly, that\nsort of thing. But again, a lot of students\nnever buy a",
    "start": "364020",
    "end": "371320"
  },
  {
    "text": "text and do just fine. We will not be handing\nout class notes",
    "start": "371320",
    "end": "377780"
  },
  {
    "text": "on a regular basis. A lot of studies have indicated\nthat students learn",
    "start": "377780",
    "end": "383680"
  },
  {
    "text": "more when they take their own\nnotes than when they are handed out. And so, as a matter of what I\nthink is good pedagogy, we",
    "start": "383680",
    "end": "390600"
  },
  {
    "text": "don't hand out detailed\nlecture notes. We will be using, after today, a\nlot of handouts with code on",
    "start": "390600",
    "end": "399360"
  },
  {
    "text": "them, which we'll\nmake available. But it's not intended to make\nany sense outside the context",
    "start": "399360",
    "end": "405639"
  },
  {
    "text": "of lectures. It's not self-contained. The main purpose of this course\nis to help you become",
    "start": "405640",
    "end": "412120"
  },
  {
    "text": "skillful in making the\ncomputer do what you want it to do.",
    "start": "412120",
    "end": "417690"
  },
  {
    "text": "Once you acquire this skill,\nyour first instinct, when confronted with many tasks, will\nbe to write a program to",
    "start": "417690",
    "end": "426090"
  },
  {
    "text": "do that task for you. I always tell people I became\na computer scientist in part",
    "start": "426090",
    "end": "433030"
  },
  {
    "text": "because I'm lazy. And there was a lot of stuff\nthat I found it was easier to",
    "start": "433030",
    "end": "438230"
  },
  {
    "text": "write a program to make\nthe computer do it, rather than do it myself. So I do that a lot. If I need to do something, I\nsay, can I just write a quick",
    "start": "438230",
    "end": "446210"
  },
  {
    "text": "program to do it? And I'd like you to be able\nto acquire that skill. ",
    "start": "446210",
    "end": "454440"
  },
  {
    "text": "And remember, that programming\nis actually a lot of fun. So I should say that, in\naddition to learning a lot in",
    "start": "454440",
    "end": "461810"
  },
  {
    "text": "this course, I hope most of\nyou will find it fun. Kind of a strange thought.",
    "start": "461810",
    "end": "467820"
  },
  {
    "text": "MIT course, fun.  Maybe it's an oxymoron.",
    "start": "467820",
    "end": "474950"
  },
  {
    "text": "But I don't think so. I really do think you can have\na lot of fun writing programs for this course.",
    "start": "474950",
    "end": "482380"
  },
  {
    "text": "There are many people\nwho believe that-- how shall I say this?",
    "start": "482380",
    "end": "488740"
  },
  {
    "text": "Programming is the most\nfun you can have with your clothes on. ",
    "start": "488740",
    "end": "495880"
  },
  {
    "text": "It really can be a lot of fun. So think of it that way.",
    "start": "495880",
    "end": "501200"
  },
  {
    "text": "All right. So the primary knowledge you're\ngoing to take away is",
    "start": "501200",
    "end": "506430"
  },
  {
    "text": "computational problem solving. So to start with, we might\nask the question, what is",
    "start": "506430",
    "end": "513010"
  },
  {
    "text": "computation? And to think about that-- this is interesting.",
    "start": "513010",
    "end": "519442"
  },
  {
    "text": "Ah, there's where\nthe chalk is. I was afraid I was going to be\nconfronted with a sea of black",
    "start": "519442",
    "end": "525959"
  },
  {
    "text": "boards and erasers\nand no chalk. But there is chalk.",
    "start": "525960",
    "end": "532840"
  },
  {
    "text": "So if we think about it,\nthere are essentially two kinds of knowledge. ",
    "start": "532840",
    "end": "541540"
  },
  {
    "text": "Declarative-- and you're going to see, I'm\nnot a great speller. ",
    "start": "541540",
    "end": "549500"
  },
  {
    "text": "And imperative. ",
    "start": "549500",
    "end": "558750"
  },
  {
    "text": "Declarative knowledge\nis composed of statements of fact.",
    "start": "558750",
    "end": "565120"
  },
  {
    "start": "564000",
    "end": "654000"
  },
  {
    "text": "For example, a good health care\nplan improves the quality of medical care while\nsaving money.",
    "start": "565120",
    "end": "571250"
  },
  {
    "text": " As we know from doings in\nWashington, it's a lot easier",
    "start": "571250",
    "end": "577490"
  },
  {
    "text": "to state that goal than to know\nhow to achieve that goal. So the key thing about\ndeclarative knowledge is, it",
    "start": "577490",
    "end": "584089"
  },
  {
    "text": "says something that is true. Otherwise it wouldn't be\nknowledge, it would be",
    "start": "584090",
    "end": "589340"
  },
  {
    "text": "misinformation. But doesn't tell you\nhow to do it. In a more mathematical sense,\nsay y is the square root of x",
    "start": "589340",
    "end": "599140"
  },
  {
    "text": "if and only if y times\ny equals x.",
    "start": "599140",
    "end": "604600"
  },
  {
    "text": "All right? Perfectly clear statement of\nwhat it means to be the square root, but it doesn't tell you\nhow to find the square root.",
    "start": "604600",
    "end": "615280"
  },
  {
    "text": "Interestingly enough, it does\ntell you how to test whether or not you have the answer\nto the square root.",
    "start": "615280",
    "end": "624250"
  },
  {
    "text": "And so if you had some way of\ngenerating guesses, you can at",
    "start": "624250",
    "end": "629670"
  },
  {
    "text": "least check whether\nthey're correct. And in fact, starting in the\nnext lecture, we'll talk about",
    "start": "629670",
    "end": "636710"
  },
  {
    "text": "the fact that a lot of\ncomputational techniques involve something called\nguess and check.",
    "start": "636710",
    "end": "644029"
  },
  {
    "text": "Where you have a way to generate\nguesses and a way to check whether they're right. ",
    "start": "644030",
    "end": "652230"
  },
  {
    "text": "Imperative knowledge, in\ncontrast, tells you how to",
    "start": "652230",
    "end": "657579"
  },
  {
    "start": "654000",
    "end": "695000"
  },
  {
    "text": "solve a problem. How to accomplish something. So you could think of it as like\na recipe in a cookbook.",
    "start": "657580",
    "end": "665290"
  },
  {
    "text": "So it's one thing to say a\nchocolate cake is something that tastes delicious\nand is bad for you.",
    "start": "665290",
    "end": "671070"
  },
  {
    "text": "That's declarative knowledge. But you can open a cookbook and\nget a recipe that tells",
    "start": "671070",
    "end": "676380"
  },
  {
    "text": "you how to make a\nchocolate cake. That's imperative knowledge.",
    "start": "676380",
    "end": "682130"
  },
  {
    "text": "Now, below, we have a recipe for\nfinding not a square root",
    "start": "682130",
    "end": "688700"
  },
  {
    "text": "necessarily, but an approximation to a square root. And one of the themes of this\ncourse is that a lot of",
    "start": "688700",
    "end": "697830"
  },
  {
    "start": "695000",
    "end": "774000"
  },
  {
    "text": "problems we cannot solve\nprecisely, but we can find",
    "start": "697830",
    "end": "703300"
  },
  {
    "text": "answers that are good enough\nfor practical purposes. And those are called\napproximation algorithms.",
    "start": "703300",
    "end": "711839"
  },
  {
    "text": "So here's a way-- this is a very old method for\nfinding the square root.",
    "start": "711840",
    "end": "717870"
  },
  {
    "text": "In fact, it's believed\nthat Heron was the one who did this.",
    "start": "717870",
    "end": "724269"
  },
  {
    "text": "Heron of Alexandria.  In the news much today,\nAlexandria was the capital of",
    "start": "724270",
    "end": "731690"
  },
  {
    "text": "ancient Egypt.  He was the first one to\nwrite this method",
    "start": "731690",
    "end": "737300"
  },
  {
    "text": "down a long time ago. Though it's believed that even\nbefore Heron, the Babylonians",
    "start": "737300",
    "end": "744320"
  },
  {
    "text": "know how to do it. So you start with a guess, g.",
    "start": "744320",
    "end": "749790"
  },
  {
    "text": "Any old guess will do. Then you say, is g times\ng close enough to x?",
    "start": "749790",
    "end": "757240"
  },
  {
    "text": "If so, you stop. Say OK, I've got a good enough\napproximation of the answer.",
    "start": "757240",
    "end": "763370"
  },
  {
    "text": "If it's not, you create a new\nguess by averaging g and x",
    "start": "763370",
    "end": "770740"
  },
  {
    "text": "divided by g. So g new is going to be\ng old plus x divided",
    "start": "770740",
    "end": "778450"
  },
  {
    "start": "774000",
    "end": "998000"
  },
  {
    "text": "by g old, over 2. And then using this new guess,\nyou go back to step 2.",
    "start": "778450",
    "end": "787390"
  },
  {
    "text": "So let's quickly run through\nan example of this. We can start with this\npretty easily.",
    "start": "787390",
    "end": "795910"
  },
  {
    "text": "We'll take a guess. Let's say g equals 3. ",
    "start": "795910",
    "end": "803090"
  },
  {
    "text": "So we look at three times 3. ",
    "start": "803090",
    "end": "810220"
  },
  {
    "text": "9. And we say, is that\ngood enough? Well, let's say we're looking\nfor the root of 25.",
    "start": "810220",
    "end": "817375"
  },
  {
    "text": " I guess I should have started\nwith the problem statement.",
    "start": "817375",
    "end": "823480"
  },
  {
    "text": "Sorry about that. Well, 9 is probably not close\nenough to 25 that we're happy.",
    "start": "823480",
    "end": "829640"
  },
  {
    "text": "May be good enough for\ngovernment work, but not for most other purposes. So we'll reset g, and we'll\nset g to 3 plus 25 over 3.",
    "start": "829640",
    "end": "849100"
  },
  {
    "text": "All of that over 2.  Which equals 5.6666 et cetera.",
    "start": "849100",
    "end": "860050"
  },
  {
    "text": "All right. So now we'll multiply\nthat by itself.",
    "start": "860050",
    "end": "869990"
  },
  {
    "text": "And that gets to\nbe about 32.04.",
    "start": "869990",
    "end": "877000"
  },
  {
    "text": "Close enough to 25? Probably not. ",
    "start": "877000",
    "end": "882730"
  },
  {
    "text": "So we'll take another step. And we'll set g equal to--",
    "start": "882730",
    "end": "888230"
  },
  {
    "text": " well, when we're done with it\nall, I'm not going to bore you",
    "start": "888230",
    "end": "895510"
  },
  {
    "text": "with writing the\nformula again. It'll be 5.04.",
    "start": "895510",
    "end": "900980"
  },
  {
    "text": "If we square that, it's 25.4. We decide that's close enough\nto 25, and we're done.",
    "start": "900980",
    "end": "909000"
  },
  {
    "text": " What we say at this point\nis that the algorithm--",
    "start": "909000",
    "end": "919220"
  },
  {
    "text": "and that's an important word. ",
    "start": "919220",
    "end": "930259"
  },
  {
    "text": "An algorithm is a description\nof how to perform a computation. ",
    "start": "930260",
    "end": "950980"
  },
  {
    "text": "We say that the algorithm\nhas converged. ",
    "start": "950980",
    "end": "959630"
  },
  {
    "text": "Which is a fancy way\nto say it's halted. ",
    "start": "959630",
    "end": "968150"
  },
  {
    "text": "What we've got here, if you\nthink about it, is a set of",
    "start": "968150",
    "end": "974150"
  },
  {
    "text": "instructions. ",
    "start": "974150",
    "end": "981270"
  },
  {
    "text": "Steps that can be executed\nand a flow of control.",
    "start": "981270",
    "end": "987325"
  },
  {
    "start": "987325",
    "end": "993120"
  },
  {
    "text": "The order in which\nwe execute them. So if we look at this, there's a\ndefault order of execution--",
    "start": "993120",
    "end": "1001340"
  },
  {
    "start": "998000",
    "end": "1086000"
  },
  {
    "text": "1, 2, 3, 4. But then there's the go back\nto step 2 and start over.",
    "start": "1001340",
    "end": "1008589"
  },
  {
    "start": "1008590",
    "end": "1014030"
  },
  {
    "text": "And there's a termination\ncondition. ",
    "start": "1014030",
    "end": "1029109"
  },
  {
    "text": "It tells us when to stop. And of course, that's\nimportant.",
    "start": "1029109",
    "end": "1035310"
  },
  {
    "text": "I've always been amused, if you\nlook at a shampoo bottle, you'll see an algorithm that\nsays something like lather,",
    "start": "1035310",
    "end": "1041260"
  },
  {
    "text": "rinse, repeat. And if you follow it\nliterally, you never get to stop.",
    "start": "1041260",
    "end": "1047959"
  },
  {
    "text": "Which I suppose make sense if\nyou're selling shampoo, because people use\na lot of it. But really, there\nought to be some",
    "start": "1047960",
    "end": "1054490"
  },
  {
    "text": "termination condition there. OK. So now, how do we capture this\nidea of a recipe in a",
    "start": "1054490",
    "end": "1063130"
  },
  {
    "text": "mechanical process? One way would be to design a\nmachine specifically to do",
    "start": "1063130",
    "end": "1070390"
  },
  {
    "text": "square roots. So if I knew how to design\ncircuits, which I don't, I",
    "start": "1070390",
    "end": "1078460"
  },
  {
    "text": "could sit down-- probably many\nof you could sit down-- and design a circuit that would implement this algorithm.",
    "start": "1078460",
    "end": "1084590"
  },
  {
    "text": " And in fact, that's more or\nless what you'll find in a",
    "start": "1084590",
    "end": "1090410"
  },
  {
    "start": "1086000",
    "end": "1254000"
  },
  {
    "text": "cheap four function calculator\nthat does square roots. Not quite this algorithm, but\na similar algorithm is just",
    "start": "1090410",
    "end": "1097890"
  },
  {
    "text": "part of the circuitry\nto go compute that.",
    "start": "1097890",
    "end": "1103220"
  },
  {
    "text": "And in fact, this used\nto be the way that all computers worked.",
    "start": "1103220",
    "end": "1109820"
  },
  {
    "text": "So the initial computers\nwere what are called fixed program computers.",
    "start": "1109820",
    "end": "1116122"
  },
  {
    "start": "1116123",
    "end": "1124160"
  },
  {
    "text": "They were designed to do very\nspecific things, and that's what they did.",
    "start": "1124160",
    "end": "1131220"
  },
  {
    "text": "So for example, one of the very\nfirst computers, designed in 1941, by Atanasoff and\nBerry, solved systems of",
    "start": "1131220",
    "end": "1140590"
  },
  {
    "text": "linear equations for the purpose\nof plotting artillery",
    "start": "1140590",
    "end": "1145750"
  },
  {
    "text": "trajectories. And that's all it did. If you wanted to balance your\nbank account with this",
    "start": "1145750",
    "end": "1152740"
  },
  {
    "text": "computer, you couldn't do it. But you could figure\nout how to drop an artillery shell somewhere.",
    "start": "1152740",
    "end": "1159570"
  },
  {
    "text": "Also during World War II, Alan\nTuring built a machine specifically designed\nfor breaking the",
    "start": "1159570",
    "end": "1166559"
  },
  {
    "text": "German enigma code. Actually a fascinating story of\nscience how that was built.",
    "start": "1166560",
    "end": "1173680"
  },
  {
    "text": "But again, that was\nall it could do. ",
    "start": "1173680",
    "end": "1179020"
  },
  {
    "text": "These computers were useful,\nbut only in a very limited way.",
    "start": "1179020",
    "end": "1186370"
  },
  {
    "text": "The big breakthrough, the thing\nit made computation really important to society,\nwas the invention of the",
    "start": "1186370",
    "end": "1194440"
  },
  {
    "text": "stored program computer. ",
    "start": "1194440",
    "end": "1209590"
  },
  {
    "text": "It took people quite a while\nto figure this out. But once they did,\nit seems obvious.",
    "start": "1209590",
    "end": "1215350"
  },
  {
    "text": "The basic notion of a stored\nprogram computer is that the",
    "start": "1215350",
    "end": "1220580"
  },
  {
    "text": "instructions are the\nsame as data.",
    "start": "1220580",
    "end": "1225600"
  },
  {
    "text": "So now, there is no distinction\nbetween the program that implements the\nalgorithm and the data on",
    "start": "1225600",
    "end": "1233980"
  },
  {
    "text": "which that program operates. So there's no difference between\nthe input of 25, part",
    "start": "1233980",
    "end": "1246130"
  },
  {
    "text": "of the data, and the steps of\nthe algorithm used to do that.",
    "start": "1246130",
    "end": "1252890"
  },
  {
    "text": " Once that was possible,\nthe machines",
    "start": "1252890",
    "end": "1258640"
  },
  {
    "start": "1254000",
    "end": "1334000"
  },
  {
    "text": "became infinitely flexible. You could change the program\nanytime you wanted.",
    "start": "1258640",
    "end": "1266120"
  },
  {
    "text": "And furthermore, programs\ncould produce programs.",
    "start": "1266120",
    "end": "1271580"
  },
  {
    "text": "Because programs can\nproduce data. And if program and data are\nthe same thing, that means",
    "start": "1271580",
    "end": "1277440"
  },
  {
    "text": "programs can produce programs. And we were off and running. And that's really what made\ncomputers what they are today.",
    "start": "1277440",
    "end": "1285390"
  },
  {
    "text": " Once this became clear as the\nparadigm for computers, people",
    "start": "1285390",
    "end": "1296840"
  },
  {
    "text": "began to think of the computer\nitself as a program. ",
    "start": "1296840",
    "end": "1303220"
  },
  {
    "text": "And in particular, as a kind\nof program called an interpreter. ",
    "start": "1303220",
    "end": "1309270"
  },
  {
    "text": "And we'll get to more\non this later today. An interpreter is a program that\ncan execute any legal set",
    "start": "1309270",
    "end": "1319530"
  },
  {
    "text": "of instructions. And consequently, can be used\nto describe and accomplish",
    "start": "1319530",
    "end": "1327860"
  },
  {
    "text": "anything you can do\nwith a computer. So roughly speaking, this is\nwhat a stored program computer",
    "start": "1327860",
    "end": "1333950"
  },
  {
    "text": "looks like. This is 6004 in 40 seconds.",
    "start": "1333950",
    "end": "1339669"
  },
  {
    "text": "It's got memory. Lots of it today.",
    "start": "1339670",
    "end": "1345050"
  },
  {
    "text": "A control unit that basically\ntells it what to do. For example, fetch some data\nfrom memory, put some data",
    "start": "1345050",
    "end": "1353340"
  },
  {
    "text": "into memory, send some output\nto a screen, all of those",
    "start": "1353340",
    "end": "1358350"
  },
  {
    "text": "kinds of things. What for historical reasons we\ncall the arithmetic logic",
    "start": "1358350",
    "end": "1363880"
  },
  {
    "text": "unit, this is, in some sense,\nthe brains of the computer. The thing that actually\ndoes computations.",
    "start": "1363880",
    "end": "1371570"
  },
  {
    "text": "An accumulator, which\nis part of the ALU that stores results.",
    "start": "1371570",
    "end": "1376710"
  },
  {
    "text": "And a bunch of input\nand output devices. The things that we actually see\nwhen we use a computer.",
    "start": "1376710",
    "end": "1383340"
  },
  {
    "text": "And that's it. And again, the key thing to\nnotice is, there's only one",
    "start": "1383340",
    "end": "1388840"
  },
  {
    "text": "kind of memory. There's not a memory for program\nand a memory for data. There's just the memory.",
    "start": "1388840",
    "end": "1394840"
  },
  {
    "text": " The nice thing to think about\nhere is, given a small set of",
    "start": "1394840",
    "end": "1403560"
  },
  {
    "text": "instructions, you can\nthen build any kind of program you want.",
    "start": "1403560",
    "end": "1409870"
  },
  {
    "text": "So typically, the computers have\na very small number of",
    "start": "1409870",
    "end": "1415150"
  },
  {
    "text": "built-in instructions. Order of dozens,\nand that's it.",
    "start": "1415150",
    "end": "1421880"
  },
  {
    "text": "And by combining those\ninstructions in very clever ways, you can do arbitrarily\ncomplex things.",
    "start": "1421880",
    "end": "1429890"
  },
  {
    "text": "In much the same way a good\nchef can take a very small number of ingredients, and from\nthose, produce a variety",
    "start": "1429890",
    "end": "1436885"
  },
  {
    "text": "of interesting edibles. Alan Turing, in the 1930s--",
    "start": "1436885",
    "end": "1444690"
  },
  {
    "text": "very famous British\nmathematician of whom you will hear more-- showed that, in fact, there\nwere six primitive",
    "start": "1444690",
    "end": "1453330"
  },
  {
    "text": "instructions. Each of which operated on\none bit of information.",
    "start": "1453330",
    "end": "1461330"
  },
  {
    "text": "And with those six primitive\ninstructions, you could do anything that could be\ndone with a computer.",
    "start": "1461330",
    "end": "1467600"
  },
  {
    "text": "Kind of amazing. It was six instructions. There were things like\nread, write, plus--",
    "start": "1467600",
    "end": "1476100"
  },
  {
    "text": "I don't know, maybe minus. I forget what they were. And that was it. That's all you needed.",
    "start": "1476100",
    "end": "1481750"
  },
  {
    "text": "We will not make you write\nprograms using only six instructions. We will give you a\nmuch larger set.",
    "start": "1481750",
    "end": "1487240"
  },
  {
    "text": "But still, it's really\nquite remarkable. It's what makes programming\nsuch an amazing endeavor.",
    "start": "1487240",
    "end": "1497470"
  },
  {
    "text": "OK. So what instructions\nwill you be using?",
    "start": "1497470",
    "end": "1502590"
  },
  {
    "text": "Well, that's what a programming\nlanguage does. So a programming language\nprovides a set of primitive",
    "start": "1502590",
    "end": "1511000"
  },
  {
    "text": "instructions. A set of primitive control\nstructures.",
    "start": "1511000",
    "end": "1518660"
  },
  {
    "text": "So instructions and mechanisms\nfor controlling the order in which they get executed.",
    "start": "1518660",
    "end": "1525679"
  },
  {
    "text": "And that's all. And then you can do whatever\nyou want with them. And what distinguishes one\nprogramming language from",
    "start": "1525680",
    "end": "1533330"
  },
  {
    "text": "another is what these\nthings are. What are your instructions? What of your flow of control?",
    "start": "1533330",
    "end": "1540520"
  },
  {
    "text": "And how do you combine them? What are the combining\nmechanisms?",
    "start": "1540520",
    "end": "1545780"
  },
  {
    "text": "And in fact, it's the combining\nmechanisms more than anything else that separate\none language from another.",
    "start": "1545780",
    "end": "1552080"
  },
  {
    "text": " The most amazing thing\nabout programming--",
    "start": "1552080",
    "end": "1560000"
  },
  {
    "text": "and this has its good side and\nits bad side, and it's something you need to remember\nas you do the problem sets--",
    "start": "1560000",
    "end": "1566900"
  },
  {
    "text": "is that the computer will always\ndo exactly what you tell what to do.",
    "start": "1566900",
    "end": "1574020"
  },
  {
    "text": "It's remarkable. You don't have any friends\nwho will do whatever you tell them to do.",
    "start": "1574020",
    "end": "1579919"
  },
  {
    "text": "I can tell you my children\ncertainly don't do whatever I tell them to do. And my wife doesn't either.",
    "start": "1579920",
    "end": "1587610"
  },
  {
    "text": "Sometimes she probably\nthinks I do whatever she tells me to do. But a computer will do what\nyou tell it to do.",
    "start": "1587610",
    "end": "1595540"
  },
  {
    "text": "So that's very empowering. It's also very annoying.",
    "start": "1595540",
    "end": "1600960"
  },
  {
    "text": "Because it means if your program\ndoesn't work, it's your own darn fault. You got nobody else to\nblame but yourself.",
    "start": "1600960",
    "end": "1609039"
  },
  {
    "text": "Because it's not the\ncomputer's fault. You may want to curse the\ncomputer, but you shouldn't.",
    "start": "1609040",
    "end": "1614059"
  },
  {
    "text": "It's just doing what\nyou told it to. So be careful what\nyou wish for.",
    "start": "1614060",
    "end": "1620700"
  },
  {
    "text": "All right. The programming language we're\ngoing to use in 600 is Python. ",
    "start": "1620700",
    "end": "1638130"
  },
  {
    "text": "It's a relatively recent\naddition to the universe of languages.",
    "start": "1638130",
    "end": "1643710"
  },
  {
    "text": "I want to emphasize that\nthis course is not about learning Python.",
    "start": "1643710",
    "end": "1649150"
  },
  {
    "text": "I will spend relatively little\ntime in the lectures telling you about Python.",
    "start": "1649150",
    "end": "1655270"
  },
  {
    "text": "It's about computational\nmethods, is what this course is really about.",
    "start": "1655270",
    "end": "1660420"
  },
  {
    "text": "And Python is merely\na teaching tool. ",
    "start": "1660420",
    "end": "1665870"
  },
  {
    "text": "Once you learn to program in\nPython, it's easy to learn to program in another language.",
    "start": "1665870",
    "end": "1671370"
  },
  {
    "text": "It's a very easily transferable\nskill. ",
    "start": "1671370",
    "end": "1677220"
  },
  {
    "text": "If we think about what defines\nany programming language, it's",
    "start": "1677220",
    "end": "1683059"
  },
  {
    "text": "got a syntax, a static\nsemantics, and a semantics.",
    "start": "1683060",
    "end": "1697206"
  },
  {
    "start": "1697206",
    "end": "1705020"
  },
  {
    "text": "Are any of you here linguistics\nmajors?  Not a one. All right.",
    "start": "1705020",
    "end": "1710230"
  },
  {
    "text": "Then I can make up whatever I\nwant about these terms and maybe you'll believe me. All right.",
    "start": "1710230",
    "end": "1716140"
  },
  {
    "text": "So the syntax tells us which\nsequences of characters and",
    "start": "1716140",
    "end": "1723510"
  },
  {
    "text": "symbols constitute a\nwell-formed string. ",
    "start": "1723510",
    "end": "1732220"
  },
  {
    "text": "So it would tell us, maybe, that\nwe could write something like x equals 3 plus 4.",
    "start": "1732220",
    "end": "1743875"
  },
  {
    "text": " And that's syntactically\ncorrect.",
    "start": "1743875",
    "end": "1749070"
  },
  {
    "text": "It's well-formed. It might also tell us that\nx equals 3 blank 4 is not",
    "start": "1749070",
    "end": "1756919"
  },
  {
    "text": "syntactically correct. It's not a legal string. ",
    "start": "1756920",
    "end": "1762750"
  },
  {
    "text": "So by analogy with English,\nthe syntax describes which",
    "start": "1762750",
    "end": "1768340"
  },
  {
    "text": "strings of words constitute\nwell-formed sentences. ",
    "start": "1768340",
    "end": "1776230"
  },
  {
    "text": "Well-formed. Not necessarily meaningful.",
    "start": "1776230",
    "end": "1781270"
  },
  {
    "text": "So it would tell you that some\nsentence like Susan is",
    "start": "1781270",
    "end": "1788100"
  },
  {
    "text": "building is syntactically\nwell-formed. It may not be very sensible.",
    "start": "1788100",
    "end": "1793445"
  },
  {
    "text": " The static semantics tells\nus which well-formed",
    "start": "1793445",
    "end": "1802020"
  },
  {
    "text": "strings have a meaning. That are which strings\nare meaningful.",
    "start": "1802020",
    "end": "1807480"
  },
  {
    "text": " So you can think about that\nas also making sense.",
    "start": "1807480",
    "end": "1816430"
  },
  {
    "text": "So in Python, it might tell us\nthat some strings which are",
    "start": "1816430",
    "end": "1824790"
  },
  {
    "text": "syntactically fine don't\nmean anything. So for example, it might tell\nus that the string 3 divided",
    "start": "1824790",
    "end": "1834210"
  },
  {
    "text": "by the character string abc is\nsyntactically well-formed",
    "start": "1834210",
    "end": "1840490"
  },
  {
    "text": "because it's value\noperator value.",
    "start": "1840490",
    "end": "1847120"
  },
  {
    "text": "Sort of like noun verb\nnoun is syntactically well-formed in English. But it would tell us\nthat there's no",
    "start": "1847120",
    "end": "1854370"
  },
  {
    "text": "real meaning to this. Dividing a number by a string\ndoesn't mean anything.",
    "start": "1854370",
    "end": "1860070"
  },
  {
    "text": "And so you would get an error\nmessage saying the syntax is OK, but the static semantics\nis broken.",
    "start": "1860070",
    "end": "1867105"
  },
  {
    "text": " So for example, in English ,\nthe sentence I are big is",
    "start": "1867105",
    "end": "1876779"
  },
  {
    "text": "somehow syntactically\nwell-formed-- noun verb noun--",
    "start": "1876780",
    "end": "1881870"
  },
  {
    "text": "but we might say it fails the\nstatic semantic test.",
    "start": "1881870",
    "end": "1886880"
  },
  {
    "text": "We don't want to assign\na meaning to it. The semantics of the language\nlooks only at the strings that",
    "start": "1886880",
    "end": "1895300"
  },
  {
    "text": "are both syntactically correct\nand static semantically correct, and assigns a\nreal meaning to them.",
    "start": "1895300",
    "end": "1904880"
  },
  {
    "text": "In natural language, sentences\ncan be ambiguous.",
    "start": "1904880",
    "end": "1910440"
  },
  {
    "text": "So one of my favorites, when I\nhave to write a recommendation letter for a student that maybe\nI don't think is so",
    "start": "1910440",
    "end": "1916560"
  },
  {
    "text": "good, I might say something\nlike I cannot praise this student too highly.",
    "start": "1916560",
    "end": "1922190"
  },
  {
    "text": "Well, you can interpret\nthat however you want. It keeps me from getting sued,\nbut I can also claim, well, I",
    "start": "1922190",
    "end": "1930990"
  },
  {
    "text": "don't like the student at all. And English is full\nof those things. Programming languages, in\ncontrast, are designed so that",
    "start": "1930990",
    "end": "1940410"
  },
  {
    "text": "every well-formed program\nhas exactly one meaning.",
    "start": "1940410",
    "end": "1946170"
  },
  {
    "text": "There's no ambiguity.  So you can't typically\ntalk of a program as",
    "start": "1946170",
    "end": "1953510"
  },
  {
    "text": "having a semantic error.  If it is well-formed, it\nmeans something, and",
    "start": "1953510",
    "end": "1959690"
  },
  {
    "text": "that's what it means. On the other hand, it's easy\nto talk about a program",
    "start": "1959690",
    "end": "1966120"
  },
  {
    "text": "meaning something other than\nyou wanted it to mean. And you will discover in the\nproblem sets, most of the time",
    "start": "1966120",
    "end": "1973220"
  },
  {
    "text": "the programs don't mean what\nyou want them to mean. That is to say, when you run\nthem, they don't give you the",
    "start": "1973220",
    "end": "1978920"
  },
  {
    "text": "correct answer. And then you will go through\nthis process of debugging them and learning how to do it.",
    "start": "1978920",
    "end": "1985460"
  },
  {
    "text": "So what might happen when we\nwrite a program that doesn't do what we want it to do?",
    "start": "1985460",
    "end": "1993870"
  },
  {
    "text": "It might crash. ",
    "start": "1993870",
    "end": "1999600"
  },
  {
    "text": "By that, we mean stop running\nand produce some palpable indication that it\nhas done so.",
    "start": "1999600",
    "end": "2007030"
  },
  {
    "text": "So you've all used programs\nthat have crashed, right? You sat there using your email\nprogram or Word, or",
    "start": "2007030",
    "end": "2015399"
  },
  {
    "text": "PowerPoint, or something. And suddenly, it\njust goes away. And you get a message on your\nscreen and an invitation to",
    "start": "2015400",
    "end": "2023649"
  },
  {
    "text": "send Apple or Microsoft a file\nexplaining what went wrong so",
    "start": "2023650",
    "end": "2029050"
  },
  {
    "text": "they can fix it.  In a properly designed computing\nsystem, when one",
    "start": "2029050",
    "end": "2037480"
  },
  {
    "text": "program crashes, it does not\ndamage the overall system. ",
    "start": "2037480",
    "end": "2043430"
  },
  {
    "text": "So you'd like it to\njust be local. What else might it do?",
    "start": "2043430",
    "end": "2049050"
  },
  {
    "text": "It might never stop. ",
    "start": "2049050",
    "end": "2061169"
  },
  {
    "text": "Now, if you have no idea how\nlong a program is supposed to run, this can be hard\nto diagnose.",
    "start": "2061170",
    "end": "2066838"
  },
  {
    "text": " But again, I'm sure you've\nall run into this. I've certainly run into it.",
    "start": "2066839",
    "end": "2073260"
  },
  {
    "text": "Every once in a while I'll\nsay, try and write a PowerPoint file. And it'll just sit there.",
    "start": "2073260",
    "end": "2079830"
  },
  {
    "text": "Or I'll try to read a file and\nit'll just sit there and never finish the job. Or I don't have enough\npatience.",
    "start": "2079830",
    "end": "2086940"
  },
  {
    "text": "But probably it would never\nhave finished it. Again, you will all write\nprograms that do this.",
    "start": "2086940",
    "end": "2093408"
  },
  {
    "text": "It's a good idea to know how\nlong you expect your programs to run, so that you can\nrecognize this.",
    "start": "2093409",
    "end": "2100380"
  },
  {
    "text": "Typically, we say that these\nprograms have in them an infinite loop. ",
    "start": "2100380",
    "end": "2109250"
  },
  {
    "text": "And we'll talk about that when\nwe get to flow of control. Finally, a program might run to\ncompletion and produce the",
    "start": "2109250",
    "end": "2128530"
  },
  {
    "text": "wrong answer. ",
    "start": "2128530",
    "end": "2138760"
  },
  {
    "text": "These problems are kind of in\nascending order of badness. ",
    "start": "2138760",
    "end": "2146309"
  },
  {
    "text": "If it crashes, at least\nyou know that something has gone wrong.",
    "start": "2146310",
    "end": "2151770"
  },
  {
    "text": "An infinite loop can be very\nannoying, because you just wait for a long time. But the worst thing that happens\nis when you think",
    "start": "2151770",
    "end": "2158590"
  },
  {
    "text": "everything is good\nand it's not.  There have been lots of\nexamples of this.",
    "start": "2158590",
    "end": "2165840"
  },
  {
    "text": "This is the sort of thing\nthat costs lives. ",
    "start": "2165840",
    "end": "2171380"
  },
  {
    "text": "There was a radiation therapy\nmachine that produced the wrong dosage of radiation and\nactually killed quite a few",
    "start": "2171380",
    "end": "2181650"
  },
  {
    "text": "people, because they put in\nthe correct input, and it would dose the patient\nwith radiation.",
    "start": "2181650",
    "end": "2188220"
  },
  {
    "text": "And a fatal dose of radiation. That's a really bad mistake.",
    "start": "2188220",
    "end": "2195000"
  },
  {
    "text": "There are buildings that\ncollapse because people run programs that do the structural\nengineering, and",
    "start": "2195000",
    "end": "2200550"
  },
  {
    "text": "the programs give the\nwrong answer. Lots of bad things can happen.",
    "start": "2200550",
    "end": "2205770"
  },
  {
    "text": "So one of the things we're going\nto spend time on this term is, what you can do to\navoid writing programs that",
    "start": "2205770",
    "end": "2213750"
  },
  {
    "text": "have this rather unpleasant\nproperty. How do you test them?",
    "start": "2213750",
    "end": "2218940"
  },
  {
    "text": "How do you write them in such\na way that this is the least likely event?",
    "start": "2218940",
    "end": "2224420"
  },
  {
    "text": "That's not what you\nwant to happen.  OK.",
    "start": "2224420",
    "end": "2230000"
  },
  {
    "text": "Some programming languages\ngive you a lot of help in avoiding these things.",
    "start": "2230000",
    "end": "2237860"
  },
  {
    "start": "2234000",
    "end": "2364000"
  },
  {
    "text": "Python is kind of mediocre\nin that respect. It's not the best.",
    "start": "2237860",
    "end": "2243080"
  },
  {
    "text": "It's not the worst. It's somewhere in the middle.",
    "start": "2243080",
    "end": "2248640"
  },
  {
    "text": "Because what you'd like is a\nprogram with very rigorous static semantics, such that if\nyou pass those tests, it has a",
    "start": "2248640",
    "end": "2259550"
  },
  {
    "text": "high probability of behaving\nas expected. So for example, it's a good\nthing that Python doesn't",
    "start": "2259550",
    "end": "2267990"
  },
  {
    "text": "allow you to do this. Because who knows what\nthat's going to do?",
    "start": "2267990",
    "end": "2274180"
  },
  {
    "text": "Something weird. You'd rather be told no,\nyou can't write that. And then you have to write\nsomething that's more",
    "start": "2274180",
    "end": "2280770"
  },
  {
    "text": "obviously meaningful. Rather than it just making\nup an interpretation.",
    "start": "2280770",
    "end": "2286510"
  },
  {
    "text": "As we will see going forward,\nPython is not, for example, as good as Java is at weeding\nout meaningless things.",
    "start": "2286510",
    "end": "2296640"
  },
  {
    "text": "Or things that have surprising\nmeanings. On the other hand, it's better\nthan C. So kind of in the",
    "start": "2296640",
    "end": "2303349"
  },
  {
    "text": "middle as these programming\nlanguages go. Why do we use Python in this\ncourse if it's not the best in",
    "start": "2303350",
    "end": "2311330"
  },
  {
    "text": "that respect? It's got several\ngood features.",
    "start": "2311330",
    "end": "2317730"
  },
  {
    "text": "One of them is, it's\neasy to learn. It's much less complicated\nthan, say, Java.",
    "start": "2317730",
    "end": "2325280"
  },
  {
    "text": "So the learning curve\nis much steeper. That's a good thing. You get up to speed faster.",
    "start": "2325280",
    "end": "2331910"
  },
  {
    "text": "It's very widely used today in\na lot of areas of science,",
    "start": "2331910",
    "end": "2337720"
  },
  {
    "text": "particularly the\nlife sciences. It has probably become the\nmost popular language in",
    "start": "2337720",
    "end": "2343060"
  },
  {
    "text": "biology and the other\nlife sciences. And therefore, for those of you\nwho have careers in that",
    "start": "2343060",
    "end": "2348220"
  },
  {
    "text": "area, it's the most useful\nlanguage to know. It's also widely used in\nother areas as well.",
    "start": "2348220",
    "end": "2356830"
  },
  {
    "text": "It is easier to debug\nthan most languages. And the reason it's easier to\ndebug than most languages, or",
    "start": "2356830",
    "end": "2365380"
  },
  {
    "text": "than many, is it's an\ninterpreted language. So you'll remember, I talked\nabout a computer as an",
    "start": "2365380",
    "end": "2373050"
  },
  {
    "text": "interpreter. Something that you feed in a\nbunch of instructions, called",
    "start": "2373050",
    "end": "2379330"
  },
  {
    "text": "the source code. You do some checking. And then it executes the\ninstructions, including the",
    "start": "2379330",
    "end": "2386470"
  },
  {
    "text": "flow of control instructions. Produces some output.",
    "start": "2386470",
    "end": "2391490"
  },
  {
    "text": "The nice thing that goes on\nthere is if something untoward happens, the interpreter can\ndescribe in the language of",
    "start": "2391490",
    "end": "2400690"
  },
  {
    "text": "the source code what\nwent wrong. The source code is the\ncode that you wrote.",
    "start": "2400690",
    "end": "2407700"
  },
  {
    "text": "On the other hand, the way a\ncompiler works is, you take",
    "start": "2407700",
    "end": "2413130"
  },
  {
    "text": "the source code, you check it,\nbut then you translate it into",
    "start": "2413130",
    "end": "2418500"
  },
  {
    "text": "another language called\nthe object code. This is a language closer\nto the language that the",
    "start": "2418500",
    "end": "2426360"
  },
  {
    "text": "computer, the hardware, knows\nhow to interpret. Then the hardware interpreter\ninterprets the compiled code,",
    "start": "2426360",
    "end": "2435520"
  },
  {
    "text": "the object code, and\nproduces output. And the problem here is if\nsomething goes wrong, it wants",
    "start": "2435520",
    "end": "2443960"
  },
  {
    "text": "to give you an error message in\nterms of the object code, which you've never seen\nin your life.",
    "start": "2443960",
    "end": "2451880"
  },
  {
    "text": "And that can make\nit very obscure. So the advantage? Why do we have compilers?",
    "start": "2451880",
    "end": "2458390"
  },
  {
    "text": "Typically, compiled languages\nare more efficient. ",
    "start": "2458390",
    "end": "2463470"
  },
  {
    "text": "Because they go through this\nextra step, they take less time to run those programs.",
    "start": "2463470",
    "end": "2471040"
  },
  {
    "text": "You can compile Python as well,\nif you want to get an efficient version. But it's not designed under\nthat assumption.",
    "start": "2471040",
    "end": "2479420"
  },
  {
    "text": "And so, it works well when\nit's interpreted, which is why we use it. ",
    "start": "2479420",
    "end": "2487722"
  }
]