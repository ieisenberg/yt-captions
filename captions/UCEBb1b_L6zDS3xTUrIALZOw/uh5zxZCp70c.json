[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "Next we turn our attention to encoding data\nas sequences of 0's and 1's, a string of bits.",
    "start": "1630",
    "end": "7820"
  },
  {
    "text": "An encoding is an unambiguous mapping between\nbit strings and the members of the set of",
    "start": "7820",
    "end": "12540"
  },
  {
    "text": "data to be encoded.",
    "start": "12540",
    "end": "14410"
  },
  {
    "start": "13000",
    "end": "35000"
  },
  {
    "text": "For example, suppose we have a set of four\nsymbols -- A, B, C, and D â€“ and we want",
    "start": "14410",
    "end": "20140"
  },
  {
    "text": "to use bit strings to encode messages constructed\nof these symbols, for example \"ABBA\".",
    "start": "20140",
    "end": "26710"
  },
  {
    "text": "If we choose to encode the message one character\nat a time, our encoding would assign a unique",
    "start": "26710",
    "end": "32189"
  },
  {
    "text": "bit string to each symbol.",
    "start": "32189",
    "end": "34800"
  },
  {
    "text": "Since we have four symbols, we might choose\na unique two-bit string for each: \"A\" could",
    "start": "34800",
    "end": "39010"
  },
  {
    "start": "35000",
    "end": "77000"
  },
  {
    "text": "be \"00\", B = \"01\", C = \"10\", and D = \"11\".",
    "start": "39010",
    "end": "45890"
  },
  {
    "text": "This would be called a \"fixed-length encoding\"\nsince the bit strings used to represent the",
    "start": "45890",
    "end": "50460"
  },
  {
    "text": "symbols all have the same length.",
    "start": "50460",
    "end": "52930"
  },
  {
    "text": "The encoding for the message \"ABBA\" would\nbe \"00-01-01-00\".",
    "start": "52930",
    "end": "60610"
  },
  {
    "text": "And we can run the process backwards: given\na bit string and the encoding key, we can",
    "start": "60610",
    "end": "65899"
  },
  {
    "text": "look up the next bits in the bit string, using\nthe key to determine the symbol they represent.",
    "start": "65899",
    "end": "72270"
  },
  {
    "text": "\"00\" would be decoded as \"A\", \"01\" as B and\nso on.",
    "start": "72270",
    "end": "78340"
  },
  {
    "start": "77000",
    "end": "108000"
  },
  {
    "text": "We can also use bit strings of different lengths\nto encode symbols -- this is called a variable-length",
    "start": "78340",
    "end": "84248"
  },
  {
    "text": "encoding.",
    "start": "84249",
    "end": "85759"
  },
  {
    "text": "So A could be \"01\", B = \"1\", C = \"000\" and\nD = \"001\".",
    "start": "85759",
    "end": "92399"
  },
  {
    "text": "\"ABBA\" would be encoded as \"01-1-1-01\".",
    "start": "92399",
    "end": "99289"
  },
  {
    "text": "We'll see that carefully constructed variable-length\nencodings are useful for the efficient encoding",
    "start": "99289",
    "end": "103990"
  },
  {
    "text": "of messages where the symbols occur with different\nprobabilities.",
    "start": "103990",
    "end": "108740"
  },
  {
    "start": "108000",
    "end": "150000"
  },
  {
    "text": "We have to be careful that the encoding is\nunambiguous!",
    "start": "108740",
    "end": "112048"
  },
  {
    "text": "Suppose we had decided to encode A as \"0\",\nB as \"1\", C as \"10\" and D as \"11\".",
    "start": "112049",
    "end": "119880"
  },
  {
    "text": "The encoding for \"ABBA\" would be \"0-1-1-0\".",
    "start": "119880",
    "end": "124659"
  },
  {
    "text": "Looking good since that encoding is shorter\nthan either of the previous two encodings.",
    "start": "124659",
    "end": "129849"
  },
  {
    "text": "Now let's try to decode this bit string -- oops.",
    "start": "129850",
    "end": "133820"
  },
  {
    "text": "Using the encoding key, we can unfortunately\narrive at several decodings: \"ABBA\" of course,",
    "start": "133820",
    "end": "139100"
  },
  {
    "text": "but also \"ADA\" or \"ABC\" depending on how we\ngroup the bits.",
    "start": "139100",
    "end": "144380"
  },
  {
    "text": "This attempt at specifying an encoding has\nfailed since the message cannot be interpreted",
    "start": "144380",
    "end": "148740"
  },
  {
    "text": "unambiguously.",
    "start": "148740",
    "end": "150390"
  },
  {
    "start": "150000",
    "end": "188000"
  },
  {
    "text": "Graphically we can represent an unambiguous\nencoding as a binary tree, labeling the branches",
    "start": "150390",
    "end": "155590"
  },
  {
    "text": "from each tree node with \"0\" and \"1\", placing\nthe symbols to be encoded as the leaves of",
    "start": "155590",
    "end": "160700"
  },
  {
    "text": "the tree.",
    "start": "160700",
    "end": "161879"
  },
  {
    "text": "If you build a binary tree for a proposed\nencoding and find that there are no symbols",
    "start": "161880",
    "end": "166510"
  },
  {
    "text": "labeling interior nodes and exactly one symbol\nat each leaf, then your encoding is good to",
    "start": "166510",
    "end": "171580"
  },
  {
    "text": "go!",
    "start": "171580",
    "end": "172660"
  },
  {
    "text": "For example, consider the encoding shown on\nthe left.",
    "start": "172660",
    "end": "175940"
  },
  {
    "text": "It takes just a second to draw the corresponding\nbinary tree.",
    "start": "175940",
    "end": "179460"
  },
  {
    "text": "The symbol B is distance 1 from the root of\nthe tree, along an arc labeled \"0\".",
    "start": "179460",
    "end": "184020"
  },
  {
    "text": "A is distance two, and C and D are distance\n3.",
    "start": "184020",
    "end": "189040"
  },
  {
    "start": "188000",
    "end": "227000"
  },
  {
    "text": "If we receive an encoded message, for example\n\"01111\", we can decode it using successive",
    "start": "189040",
    "end": "195909"
  },
  {
    "text": "bits of the encoding to identify a path from\nthe root of tree, descending step-by-step",
    "start": "195910",
    "end": "200870"
  },
  {
    "text": "until we come to leaf, then repeating the\nprocess starting at the root again, until",
    "start": "200870",
    "end": "205900"
  },
  {
    "text": "all the bits in the encoded message have been\nconsumed.",
    "start": "205900",
    "end": "209540"
  },
  {
    "text": "So the message from the sheep is: \"0\" takes\nus from the root to the leaf B, which is our",
    "start": "209540",
    "end": "214930"
  },
  {
    "text": "first decoded symbol.",
    "start": "214930",
    "end": "216750"
  },
  {
    "text": "Then \"1-1\" takes us to A and the next \"1-1\"\nresults in a second A.",
    "start": "216750",
    "end": "221320"
  },
  {
    "text": "The final decoded message -- \"BAA\" -- is not\ntotally unexpected, at least from an American",
    "start": "221320",
    "end": "226990"
  },
  {
    "text": "sheep.",
    "start": "226990",
    "end": "227920"
  }
]