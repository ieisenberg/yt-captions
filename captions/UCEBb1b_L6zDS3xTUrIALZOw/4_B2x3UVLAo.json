[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "The following content is\nprovided under a Creative",
    "start": "0",
    "end": "2430"
  },
  {
    "text": "Commons license.",
    "start": "2430",
    "end": "4000"
  },
  {
    "text": "Your support will help MIT\nOpenCourseWare continue to",
    "start": "4000",
    "end": "6950"
  },
  {
    "text": "offer high quality educational\nresources for free.",
    "start": "6950",
    "end": "10559"
  },
  {
    "text": "To make a donation or view\nadditional materials from",
    "start": "10560",
    "end": "13450"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at",
    "start": "13450",
    "end": "16610"
  },
  {
    "text": "ocw.mit.edu.",
    "start": "16610",
    "end": "17860"
  },
  {
    "start": "17860",
    "end": "22740"
  },
  {
    "text": "PROFESSOR: So in this second\nlecture we're going to talk",
    "start": "22740",
    "end": "25350"
  },
  {
    "text": "about some design patterns\nfor parallel programming.",
    "start": "25350",
    "end": "29830"
  },
  {
    "text": "And to tell you a little bit\nabout what a design pattern is",
    "start": "29830",
    "end": "33180"
  },
  {
    "text": "and why is it useful.",
    "start": "33180",
    "end": "34340"
  },
  {
    "text": "And some of you, if you've\ntaken object oriented",
    "start": "34340",
    "end": "36440"
  },
  {
    "text": "programming you've probably\nalready have seen design",
    "start": "36440",
    "end": "38449"
  },
  {
    "text": "patterns before.",
    "start": "38450",
    "end": "40580"
  },
  {
    "text": "So I ended the last lecture with\nOK, so I understand some",
    "start": "40580",
    "end": "43600"
  },
  {
    "text": "of the performance implications,\nhow do I go",
    "start": "43600",
    "end": "45329"
  },
  {
    "start": "45000",
    "end": "45000"
  },
  {
    "text": "about parallelizing\nmy program?",
    "start": "45330",
    "end": "48510"
  },
  {
    "text": "This is a flyer I found quite\noften in books and talks on",
    "start": "48510",
    "end": "53899"
  },
  {
    "text": "parallel programming.",
    "start": "53900",
    "end": "54600"
  },
  {
    "text": "It essentially lays out 4 common\nsteps for parallelizing",
    "start": "54600",
    "end": "58960"
  },
  {
    "text": "your program.",
    "start": "58960",
    "end": "60680"
  },
  {
    "text": "So often, you start out with\nsequential programs. This",
    "start": "60680",
    "end": "63630"
  },
  {
    "text": "shouldn't be surprising since\nfor a long time as you've",
    "start": "63630",
    "end": "66810"
  },
  {
    "text": "heard in earlier lectures,\npeople just coded sequential",
    "start": "66810",
    "end": "69350"
  },
  {
    "text": "code and that was just\ngood enough.",
    "start": "69350",
    "end": "72189"
  },
  {
    "text": "So now the problem is you want\nto take that sequential code",
    "start": "72190",
    "end": "75220"
  },
  {
    "text": "or you want to still write\nsequential code just because",
    "start": "75220",
    "end": "77410"
  },
  {
    "text": "it's conceptually easier and\nyou want to be able to",
    "start": "77410",
    "end": "79670"
  },
  {
    "text": "parallelize it so you can map\nit down to your parallel",
    "start": "79670",
    "end": "83240"
  },
  {
    "text": "architecture, which in this\nexample has 4 processors.",
    "start": "83240",
    "end": "86930"
  },
  {
    "text": "So the first step is you take\nyour sequential program and",
    "start": "86930",
    "end": "90630"
  },
  {
    "text": "you divide it up into tasks.",
    "start": "90630",
    "end": "92759"
  },
  {
    "text": "So during the project reviews,\nfor example, yesterday when I",
    "start": "92760",
    "end": "95250"
  },
  {
    "text": "talked to each team individually\nwe sort of talked",
    "start": "95250",
    "end": "97980"
  },
  {
    "text": "about this and you sort of\nstumbled on these 4 steps",
    "start": "97980",
    "end": "101740"
  },
  {
    "text": "whether you realized\nit or not.",
    "start": "101740",
    "end": "104189"
  },
  {
    "text": "And so you come up with these\ntasks and then each one",
    "start": "104190",
    "end": "107750"
  },
  {
    "text": "essentially incapsulates\nsome computation.",
    "start": "107750",
    "end": "110670"
  },
  {
    "text": "And then you group them\ntogether, so this is some",
    "start": "110670",
    "end": "112869"
  },
  {
    "text": "granularity adjustment and you\nmap them down to processes.",
    "start": "112870",
    "end": "115530"
  },
  {
    "text": "These are things you can pose\ninto threads, for example.",
    "start": "115530",
    "end": "118369"
  },
  {
    "text": "And then you have to essentially\nplot these down",
    "start": "118370",
    "end": "120790"
  },
  {
    "text": "onto actual processors and they\nhave to talk with each",
    "start": "120790",
    "end": "124850"
  },
  {
    "text": "other, so you have to\norchestrate to communication",
    "start": "124850",
    "end": "127250"
  },
  {
    "text": "and then finally do\nthe execution.",
    "start": "127250",
    "end": "130110"
  },
  {
    "text": "So step through each one\nof these at a time.",
    "start": "130110",
    "end": "136280"
  },
  {
    "start": "134000",
    "end": "134000"
  },
  {
    "text": "Sort of composition and recall\nthat just really effects or",
    "start": "136280",
    "end": "140300"
  },
  {
    "text": "just really is effected\nby Amdahl's Law.",
    "start": "140300",
    "end": "143450"
  },
  {
    "text": "And that if there's not a whole\nlot of parallels in the",
    "start": "143450",
    "end": "146110"
  },
  {
    "text": "application your decomposition\nis a waste of time.",
    "start": "146110",
    "end": "148590"
  },
  {
    "text": "There's not really a\nwhole lot to get.",
    "start": "148590",
    "end": "150340"
  },
  {
    "text": "But what you're trying to do\nis identify concurrency in",
    "start": "150340",
    "end": "153150"
  },
  {
    "text": "your application and\nfigure out at what",
    "start": "153150",
    "end": "155200"
  },
  {
    "text": "level to exploit it.",
    "start": "155200",
    "end": "156569"
  },
  {
    "text": "So what you're trying to do is\ndivide up your computation",
    "start": "156570",
    "end": "159140"
  },
  {
    "text": "into tasks and eventually\nthese are going to be",
    "start": "159140",
    "end": "162050"
  },
  {
    "text": "distributed among processors and\nyou want to find enough of",
    "start": "162050",
    "end": "164900"
  },
  {
    "text": "them so that you can keep\nall the processors busy.",
    "start": "164900",
    "end": "168189"
  },
  {
    "text": "And remember that the more of\nthese that you have this gives",
    "start": "168190",
    "end": "171200"
  },
  {
    "text": "you sort of an upper bound on\nyour potential speed up.",
    "start": "171200",
    "end": "174640"
  },
  {
    "text": "And as in the rate tracing\nexample that I showed, the",
    "start": "174640",
    "end": "177500"
  },
  {
    "text": "number of tasks that you\nhave may vary run time.",
    "start": "177500",
    "end": "180660"
  },
  {
    "text": "So sometimes you might have lot\nof arrays bouncing off a",
    "start": "180660",
    "end": "183220"
  },
  {
    "text": "lot of things, and sometimes you\nmight not have a whole lot",
    "start": "183220",
    "end": "186140"
  },
  {
    "text": "of reflection going on\nso number of arrays",
    "start": "186140",
    "end": "190150"
  },
  {
    "text": "will change over time.",
    "start": "190150",
    "end": "192720"
  },
  {
    "text": "And in other applications,\ninteractions, for example,",
    "start": "192720",
    "end": "195080"
  },
  {
    "text": "between molecules might\nchange in a",
    "start": "195080",
    "end": "196610"
  },
  {
    "text": "molecular dynamic simulator.",
    "start": "196610",
    "end": "199960"
  },
  {
    "text": "The assignment really\neffects granularity.",
    "start": "199960",
    "end": "201980"
  },
  {
    "text": "This is where you've partitioned\nyour tasks, you're",
    "start": "201980",
    "end": "203769"
  },
  {
    "start": "202000",
    "end": "202000"
  },
  {
    "text": "trying to group them together\nso that you're taking into",
    "start": "203770",
    "end": "207760"
  },
  {
    "text": "account, what is the\ncommunication",
    "start": "207760",
    "end": "209299"
  },
  {
    "text": "cost going to be?",
    "start": "209300",
    "end": "210830"
  },
  {
    "text": "What kind of locality am\nI going to deal with?",
    "start": "210830",
    "end": "214640"
  },
  {
    "text": "And what kind of synchronization\nmechanisms do",
    "start": "214640",
    "end": "216450"
  },
  {
    "text": "I need and how often do\nI need to synchronize?",
    "start": "216450",
    "end": "218690"
  },
  {
    "start": "218690",
    "end": "222980"
  },
  {
    "text": "You adjust your granularity\nsuch that you end up with",
    "start": "222980",
    "end": "225019"
  },
  {
    "text": "things that are load balanced\nand you try to reduce",
    "start": "225020",
    "end": "227460"
  },
  {
    "text": "communication as much\nas possible.",
    "start": "227460",
    "end": "230300"
  },
  {
    "text": "And structured approaches\nmight work well.",
    "start": "230300",
    "end": "231870"
  },
  {
    "text": "You might look at the code, do\nsome inspection, you might",
    "start": "231870",
    "end": "234670"
  },
  {
    "text": "understand the application, but\nthere are some well-known",
    "start": "234670",
    "end": "237360"
  },
  {
    "text": "design patterns which is\nessentially the thing we're",
    "start": "237360",
    "end": "239330"
  },
  {
    "text": "going to get to try to\nhelp you with this.",
    "start": "239330",
    "end": "240920"
  },
  {
    "start": "240920",
    "end": "244470"
  },
  {
    "text": "As programmers really, I\nthink, we worry about",
    "start": "244470",
    "end": "247280"
  },
  {
    "text": "partitioning first. This is\nreally independent of an",
    "start": "247280",
    "end": "252510"
  },
  {
    "text": "architecture programming\nmodel.",
    "start": "252510",
    "end": "254069"
  },
  {
    "text": "Just taking my application and\nfiguring out well, what are",
    "start": "254070",
    "end": "256920"
  },
  {
    "text": "different parts that I need to\ncompose together to build my",
    "start": "256920",
    "end": "259709"
  },
  {
    "text": "application?",
    "start": "259710",
    "end": "260350"
  },
  {
    "text": "So I'm going to show you\nan example of that.",
    "start": "260350",
    "end": "262100"
  },
  {
    "text": "And one thing to keep in the\nback of your mind is that the",
    "start": "262100",
    "end": "265550"
  },
  {
    "text": "complexity of how much\npartitioning work you actually",
    "start": "265550",
    "end": "269150"
  },
  {
    "text": "have to do really effects\nyour decision.",
    "start": "269150",
    "end": "271360"
  },
  {
    "text": "So if you start out with some\npiece of code or you wrote",
    "start": "271360",
    "end": "273610"
  },
  {
    "text": "your code in one way and you\nrealize that to actually",
    "start": "273610",
    "end": "276729"
  },
  {
    "text": "parallelize it requires so much\nmore work, in some user",
    "start": "276730",
    "end": "279340"
  },
  {
    "text": "studies we've done on sort of\ntrying to get performance from",
    "start": "279340",
    "end": "281760"
  },
  {
    "text": "code, it really effects how\nmuch work you actually do.",
    "start": "281760",
    "end": "284600"
  },
  {
    "text": "And if something requires a lot\nof work, you might not do",
    "start": "284600",
    "end": "286610"
  },
  {
    "text": "it even though it might have\nreally hot payoff.",
    "start": "286610",
    "end": "288710"
  },
  {
    "text": "So you want to be able to keep\ncomplexity down, so it pays",
    "start": "288710",
    "end": "293720"
  },
  {
    "text": "off to really think well about\nyour algorithm, how you",
    "start": "293720",
    "end": "295980"
  },
  {
    "text": "structure it ahead of time.",
    "start": "295980",
    "end": "299430"
  },
  {
    "text": "And finally, the last two stages\nI've lumped together.",
    "start": "299430",
    "end": "301880"
  },
  {
    "start": "301000",
    "end": "301000"
  },
  {
    "text": "It's really orchestration\nand mapping.",
    "start": "301880",
    "end": "303330"
  },
  {
    "text": "I have my task, they need to\ncommunicate, so what kind of",
    "start": "303330",
    "end": "307229"
  },
  {
    "text": "computation primitives\ndo I need?",
    "start": "307230",
    "end": "308770"
  },
  {
    "text": "What kind of communication\nprimitives do I need?",
    "start": "308770",
    "end": "311449"
  },
  {
    "text": "So am I packaging things\nup into threads?",
    "start": "311450",
    "end": "313590"
  },
  {
    "text": "And they're talking together\nover DMAs or shared memories.",
    "start": "313590",
    "end": "321270"
  },
  {
    "text": "And what you want to do is try\nto preserve locality and then",
    "start": "321270",
    "end": "324050"
  },
  {
    "text": "figure out how to come up with\na scheduling order that",
    "start": "324050",
    "end": "326860"
  },
  {
    "text": "preserves overall dependence\nof the computation.",
    "start": "326860",
    "end": "329400"
  },
  {
    "start": "329400",
    "end": "333389"
  },
  {
    "text": "Parallel program by patterns is\nmeant to essentially give",
    "start": "333390",
    "end": "336720"
  },
  {
    "start": "334000",
    "end": "334000"
  },
  {
    "text": "you a cookbook or set of recipes\nyou can follow to help",
    "start": "336720",
    "end": "340750"
  },
  {
    "text": "you with different steps:\ndecompose, assign,",
    "start": "340750",
    "end": "343050"
  },
  {
    "text": "orchestrate and map.",
    "start": "343050",
    "end": "345099"
  },
  {
    "text": "This could lead to really\nhigh quality",
    "start": "345100",
    "end": "346710"
  },
  {
    "text": "solutions in some domains.",
    "start": "346710",
    "end": "347740"
  },
  {
    "text": "So in the scientific\ncomputations there's a lot of",
    "start": "347740",
    "end": "351490"
  },
  {
    "text": "problems that are well\nunderstood and well studied",
    "start": "351490",
    "end": "353590"
  },
  {
    "text": "and some of the frequently\noccurring things have been",
    "start": "353590",
    "end": "355430"
  },
  {
    "text": "abstracted out and sort of\nrecorded in patterns.",
    "start": "355430",
    "end": "360240"
  },
  {
    "text": "And there's another purpose to\npatterns too, in that they",
    "start": "360240",
    "end": "362699"
  },
  {
    "text": "provide you with the\nvocabulary for--",
    "start": "362700",
    "end": "365360"
  },
  {
    "text": "two programmers can talk to each\nother and use the right",
    "start": "365360",
    "end": "368099"
  },
  {
    "text": "terminology and that conveys\na whole lot of information",
    "start": "368100",
    "end": "370940"
  },
  {
    "text": "without having to actually\ngo through and",
    "start": "370940",
    "end": "373920"
  },
  {
    "text": "understand all the details.",
    "start": "373920",
    "end": "376280"
  },
  {
    "text": "You instantaneously know if\nI use a particular model.",
    "start": "376280",
    "end": "381510"
  },
  {
    "start": "381510",
    "end": "384010"
  },
  {
    "text": "It can also help with software\nreusuability, malleability,",
    "start": "384010",
    "end": "386570"
  },
  {
    "text": "and modularity.",
    "start": "386570",
    "end": "387640"
  },
  {
    "text": "All of those things that are\nsoftware engineer perspective",
    "start": "387640",
    "end": "390070"
  },
  {
    "text": "from an engineering perspective\nare important.",
    "start": "390070",
    "end": "394060"
  },
  {
    "text": "So brief history and I found\nthis in some of the talks that",
    "start": "394060",
    "end": "398035"
  },
  {
    "text": "I was researching.",
    "start": "398035",
    "end": "399770"
  },
  {
    "text": "There's a book by Christopher\nAlexander from Berkeley in",
    "start": "399770",
    "end": "403520"
  },
  {
    "text": "1977 that actually looked at\nclassifying patterns or really",
    "start": "403520",
    "end": "408389"
  },
  {
    "text": "listing patterns from an\narchitectural perspective.",
    "start": "408390",
    "end": "410800"
  },
  {
    "text": "He tried to look at what are\nsome patterns that occur in",
    "start": "410800",
    "end": "413914"
  },
  {
    "text": "living designs and\nrecording those.",
    "start": "413915",
    "end": "417230"
  },
  {
    "text": "So as an example, for\nexample, there's a 6",
    "start": "417230",
    "end": "419150"
  },
  {
    "text": "foot balcony pattern.",
    "start": "419150",
    "end": "420850"
  },
  {
    "text": "So if you're going to build a\nbalcony you should build it 6",
    "start": "420850",
    "end": "422920"
  },
  {
    "text": "foot deep and you should have it\nslightly recessed and so on",
    "start": "422920",
    "end": "426590"
  },
  {
    "text": "because this is what's commonly\nused and these are",
    "start": "426590",
    "end": "428900"
  },
  {
    "text": "the kinds of balconies that\nhave good properties",
    "start": "428900",
    "end": "433139"
  },
  {
    "text": "architecturally.",
    "start": "433140",
    "end": "433850"
  },
  {
    "text": "Now I don't know whether this\nbook actually had a whole lot",
    "start": "433850",
    "end": "436480"
  },
  {
    "text": "of impact on how people designed\narchitectures.",
    "start": "436480",
    "end": "439180"
  },
  {
    "text": "Certainly not probably for the\nStata Center, but some",
    "start": "439180",
    "end": "443350"
  },
  {
    "start": "440000",
    "end": "440000"
  },
  {
    "text": "patterns from object oriented\nprogramming, I think, many of",
    "start": "443350",
    "end": "446360"
  },
  {
    "text": "you have already seen these by\nthe Gang of Four in 1995--",
    "start": "446360",
    "end": "451479"
  },
  {
    "text": "really sort of organized and\nclassified and came up with",
    "start": "451480",
    "end": "455760"
  },
  {
    "text": "different ways of--",
    "start": "455760",
    "end": "458730"
  },
  {
    "text": "or captured different ways of\nprogramming that people had",
    "start": "458730",
    "end": "462240"
  },
  {
    "text": "been using.",
    "start": "462240",
    "end": "463060"
  },
  {
    "text": "You know, things like the\nvisitor pattern, for example,",
    "start": "463060",
    "end": "465230"
  },
  {
    "text": "some of you might know.",
    "start": "465230",
    "end": "466480"
  },
  {
    "start": "466480",
    "end": "472460"
  },
  {
    "text": "So in 2005, not too long ago\nthere was a new book, which",
    "start": "472460",
    "end": "476280"
  },
  {
    "start": "475000",
    "end": "475000"
  },
  {
    "text": "I'm using to create some\nof these slides.",
    "start": "476280",
    "end": "479860"
  },
  {
    "text": "Really came up with or recorded\npatterns for parallel",
    "start": "479860",
    "end": "485539"
  },
  {
    "text": "programming.",
    "start": "485540",
    "end": "486480"
  },
  {
    "text": "And they identified really\n4 design spaces.",
    "start": "486480",
    "end": "489500"
  },
  {
    "text": "I think these are sort of\nstructured to express or",
    "start": "489500",
    "end": "494260"
  },
  {
    "text": "capture different elements.",
    "start": "494260",
    "end": "495930"
  },
  {
    "text": "So some elements are for the\nalgorithm expression, I've",
    "start": "495930",
    "end": "499580"
  },
  {
    "text": "listed those here and some are\nfor the actual software",
    "start": "499580",
    "end": "502080"
  },
  {
    "text": "construction or the actual\nimplementation.",
    "start": "502080",
    "end": "504379"
  },
  {
    "text": "So under algorithm expression\nit's really the thing of",
    "start": "504380",
    "end": "508380"
  },
  {
    "text": "decomposition; finding\nconcurrency.",
    "start": "508380",
    "end": "509920"
  },
  {
    "text": "Where are my tasks?",
    "start": "509920",
    "end": "512050"
  },
  {
    "text": "In the algorithm structure,\nwell, you might need some way",
    "start": "512050",
    "end": "515390"
  },
  {
    "text": "of packaging those tasks\ntogether so that they can talk",
    "start": "515390",
    "end": "519050"
  },
  {
    "text": "to each other and be able to\nuse parallel architecture.",
    "start": "519050",
    "end": "526950"
  },
  {
    "text": "On the software construction\nside you're dealing slightly",
    "start": "526950",
    "end": "529150"
  },
  {
    "text": "more low level details.",
    "start": "529150",
    "end": "530640"
  },
  {
    "text": "So what are some things you\nmight need at a slightly lower",
    "start": "530640",
    "end": "533320"
  },
  {
    "text": "level of implementation to\nactually get all the",
    "start": "533320",
    "end": "535770"
  },
  {
    "text": "computation that's expressed at\nthe algorithm level to work",
    "start": "535770",
    "end": "538920"
  },
  {
    "text": "and run well?",
    "start": "538920",
    "end": "539950"
  },
  {
    "text": "So I'm going to essentially talk\nabout the latter part in",
    "start": "539950",
    "end": "545010"
  },
  {
    "text": "the next lecture and I'll cover\nmuch of the algorithm",
    "start": "545010",
    "end": "547580"
  },
  {
    "text": "expression stuff here--",
    "start": "547580",
    "end": "549320"
  },
  {
    "text": "at least the fine concurrency\npart in this talk.",
    "start": "549320",
    "end": "552780"
  },
  {
    "text": "And if there's time I'll\ndo algorithm structure.",
    "start": "552780",
    "end": "554740"
  },
  {
    "text": "Otherwise, just talk\nabout it next time.",
    "start": "554740",
    "end": "557750"
  },
  {
    "text": "So let's say you're working\nwith MPEG decoding.",
    "start": "557750",
    "end": "561650"
  },
  {
    "text": "This is a pipeline picture of an\nMPEG 2 decoder or rather a",
    "start": "561650",
    "end": "564690"
  },
  {
    "text": "blocked level diagram of\nan MPEG 2 decoder.",
    "start": "564690",
    "end": "567780"
  },
  {
    "text": "And you have this algorithm\nand you say, OK, I want to",
    "start": "567780",
    "end": "569690"
  },
  {
    "text": "parallelize this.",
    "start": "569690",
    "end": "570380"
  },
  {
    "text": "Where's my parallelism?",
    "start": "570380",
    "end": "571830"
  },
  {
    "text": "Where's my concurrency?",
    "start": "571830",
    "end": "574510"
  },
  {
    "text": "You know, in MPEG 2 you have\nsome bit screen, you do some",
    "start": "574510",
    "end": "577000"
  },
  {
    "text": "decoding on it and you end\nup with two things.",
    "start": "577000",
    "end": "579770"
  },
  {
    "text": "You end up with motion vectors\nthat tell you here's",
    "start": "579770",
    "end": "582430"
  },
  {
    "text": "somebody's head, in the next\nscene it's moved to this",
    "start": "582430",
    "end": "584890"
  },
  {
    "text": "particular location.",
    "start": "584890",
    "end": "586140"
  },
  {
    "start": "586140",
    "end": "589050"
  },
  {
    "text": "So these are captured by\nthe motion vectors.",
    "start": "589050",
    "end": "593350"
  },
  {
    "text": "So this captures or recovers\ntemporal information.",
    "start": "593350",
    "end": "596800"
  },
  {
    "text": "In here you cover spatial\ninformation.",
    "start": "596800",
    "end": "598730"
  },
  {
    "text": "So in somebody's head you might\nhave discovered some",
    "start": "598730",
    "end": "601730"
  },
  {
    "text": "redundancies so that redundancy\nis eliminated out",
    "start": "601730",
    "end": "603880"
  },
  {
    "text": "so you need to know essentially,\nuncompress or",
    "start": "603880",
    "end": "607180"
  },
  {
    "text": "undo that compression.",
    "start": "607180",
    "end": "608560"
  },
  {
    "text": "So you go through some stages.",
    "start": "608560",
    "end": "610070"
  },
  {
    "text": "You combine the two together.",
    "start": "610070",
    "end": "612330"
  },
  {
    "text": "Combine the motion estimation\nand now the recovered pictures",
    "start": "612330",
    "end": "615030"
  },
  {
    "text": "to reconstruct the image and\nthen you might do some",
    "start": "615030",
    "end": "617480"
  },
  {
    "text": "additional stages.",
    "start": "617480",
    "end": "618730"
  },
  {
    "start": "618730",
    "end": "620850"
  },
  {
    "text": "This particular stage here is\nindicated to be data parallel",
    "start": "620850",
    "end": "624600"
  },
  {
    "text": "in that I can do different\nscenes for example in parallel",
    "start": "624600",
    "end": "628120"
  },
  {
    "text": "or I might be able to do\ndifferent slices of the",
    "start": "628120",
    "end": "629850"
  },
  {
    "text": "picture in parallel.",
    "start": "629850",
    "end": "631029"
  },
  {
    "text": "So I can essentially take\nadvantage of data parallelism",
    "start": "631030",
    "end": "633820"
  },
  {
    "text": "in the concept of taking a loop\nand breaking it up as I",
    "start": "633820",
    "end": "637140"
  },
  {
    "text": "showed in lecture 5.",
    "start": "637140",
    "end": "640520"
  },
  {
    "text": "So in task decomposition what\nwe're looking for is really",
    "start": "640520",
    "end": "643480"
  },
  {
    "text": "independent coarse-grain\ncomputation.",
    "start": "643480",
    "end": "647630"
  },
  {
    "text": "And these often are inherent to\nthe algorithm. so here I've",
    "start": "647630",
    "end": "651040"
  },
  {
    "text": "outlined these in yellow here.",
    "start": "651040",
    "end": "652850"
  },
  {
    "text": "You know, so this is one\nparticular task.",
    "start": "652850",
    "end": "654600"
  },
  {
    "text": "I can have one thread of\nexecution doing all the",
    "start": "654600",
    "end": "657959"
  },
  {
    "text": "spatial decomposition.",
    "start": "657960",
    "end": "659370"
  },
  {
    "text": "I can have another\nthread decoding",
    "start": "659370",
    "end": "660830"
  },
  {
    "text": "all my motion vectors.",
    "start": "660830",
    "end": "663710"
  },
  {
    "text": "And in general, you're looking\nfor sequences of statements",
    "start": "663710",
    "end": "667410"
  },
  {
    "text": "that operate together\nas a group.",
    "start": "667410",
    "end": "669410"
  },
  {
    "text": "These could be loops or they\ncould be functions.",
    "start": "669410",
    "end": "672970"
  },
  {
    "text": "And usually you want these to\nessentially just fall out of",
    "start": "672970",
    "end": "675990"
  },
  {
    "text": "your algorithm as\nit's expressed.",
    "start": "675990",
    "end": "677670"
  },
  {
    "text": "And a lot of cases it does, so\ndepending on how you think",
    "start": "677670",
    "end": "681070"
  },
  {
    "text": "about the program you might\nbe able to find",
    "start": "681070",
    "end": "682570"
  },
  {
    "text": "these quicker or easier.",
    "start": "682570",
    "end": "686260"
  },
  {
    "text": "Data decompositions, which\nI've highlighted here",
    "start": "686260",
    "end": "688760"
  },
  {
    "text": "essentially says you have the\nsame computation applied to",
    "start": "688760",
    "end": "691490"
  },
  {
    "text": "lots of small data element.",
    "start": "691490",
    "end": "693080"
  },
  {
    "text": "You know, you can take your\nlarge data element, partition",
    "start": "693080",
    "end": "695130"
  },
  {
    "text": "it into smaller chunks and do\nthe computation over and over",
    "start": "695130",
    "end": "698150"
  },
  {
    "text": "in parallel and so that allows\nyou to essentially get that",
    "start": "698150",
    "end": "700750"
  },
  {
    "text": "kind of data parallelism,\nexpansion of space.",
    "start": "700750",
    "end": "704070"
  },
  {
    "text": "And finally, I'm going to\nmake a case for pipeline",
    "start": "704070",
    "end": "707000"
  },
  {
    "text": "parallelism, which essentially\nsays, well, I can recognize",
    "start": "707000",
    "end": "709960"
  },
  {
    "text": "that I have a lot of stages in\nmy computation and it does",
    "start": "709960",
    "end": "713060"
  },
  {
    "text": "help to actually have this kind\nof decomposition just",
    "start": "713060",
    "end": "716430"
  },
  {
    "text": "because you're familiar\nwith pipelining",
    "start": "716430",
    "end": "718399"
  },
  {
    "text": "concepts from other domains.",
    "start": "718400",
    "end": "720890"
  },
  {
    "text": "So this type of producer\nconsumer chain is actually",
    "start": "720890",
    "end": "725030"
  },
  {
    "text": "beneficial.",
    "start": "725030",
    "end": "726590"
  },
  {
    "text": "So it does help to sort of\nexpose these kinds of",
    "start": "726590",
    "end": "728950"
  },
  {
    "text": "relationships.",
    "start": "728950",
    "end": "730200"
  },
  {
    "start": "730200",
    "end": "732170"
  },
  {
    "text": "So what are some guidelines for\nactually coming up with",
    "start": "732170",
    "end": "735370"
  },
  {
    "start": "734000",
    "end": "734000"
  },
  {
    "text": "your task decomposition?",
    "start": "735370",
    "end": "736560"
  },
  {
    "text": "Where do you start?",
    "start": "736560",
    "end": "737640"
  },
  {
    "text": "You have your algorithm, you\nunderstand the problem really",
    "start": "737640",
    "end": "741600"
  },
  {
    "text": "well, you're writing some code\nand the hope is that in fact,",
    "start": "741600",
    "end": "744970"
  },
  {
    "text": "as I've pointed out, it does\nhappen that you can look for",
    "start": "744970",
    "end": "748649"
  },
  {
    "text": "natural code regions that\nincapsulate your computation.",
    "start": "748650",
    "end": "752640"
  },
  {
    "text": "So function calls, distinct\nloop iterations are pretty",
    "start": "752640",
    "end": "756020"
  },
  {
    "text": "good places to start looking.",
    "start": "756020",
    "end": "758830"
  },
  {
    "text": "And it's easier as a general\nrule, it's easier to start",
    "start": "758830",
    "end": "762990"
  },
  {
    "text": "with as many tasks as possible\nand then fuse them to make the",
    "start": "762990",
    "end": "766880"
  },
  {
    "text": "more coarse-grained than to\ngo the other way around.",
    "start": "766880",
    "end": "770220"
  },
  {
    "text": "It impacts your software\nengineering decisions, it",
    "start": "770220",
    "end": "773730"
  },
  {
    "text": "impacts software implementation,\nit impacts how",
    "start": "773730",
    "end": "776529"
  },
  {
    "text": "you incapsulate things at\nlow level details of",
    "start": "776530",
    "end": "779050"
  },
  {
    "text": "implementation.",
    "start": "779050",
    "end": "780970"
  },
  {
    "text": "So it's always easier to\nfuse than to fizz.",
    "start": "780970",
    "end": "784720"
  },
  {
    "text": "And you want to consider\nthree things.",
    "start": "784720",
    "end": "786180"
  },
  {
    "text": "You want to keep three things\nin mind: flexibility,",
    "start": "786180",
    "end": "788380"
  },
  {
    "text": "efficiency, and simplicity.",
    "start": "788380",
    "end": "790150"
  },
  {
    "text": "So flexibility says if you made\nsome decisions, is that",
    "start": "790150",
    "end": "801760"
  },
  {
    "text": "really going to scale well or\nis it going to allow you to",
    "start": "801760",
    "end": "804540"
  },
  {
    "text": "sort of make the decisions,\nchanges?",
    "start": "804540",
    "end": "808329"
  },
  {
    "text": "So you might want to have\nfixed tasks versus",
    "start": "808330",
    "end": "810230"
  },
  {
    "text": "parameterized tasks,\nfor example.",
    "start": "810230",
    "end": "812139"
  },
  {
    "text": "So the loops that I showed in\nthe previous talk, each loop",
    "start": "812140",
    "end": "817420"
  },
  {
    "text": "that I parallelized had a hard\ncoded number that said, you're",
    "start": "817420",
    "end": "820070"
  },
  {
    "text": "going to do 4 iterations.",
    "start": "820070",
    "end": "821460"
  },
  {
    "text": "That may work well or it\nmay not work well.",
    "start": "821460",
    "end": "823520"
  },
  {
    "text": "You know, I can't reuse that\ncode now if I want to",
    "start": "823520",
    "end": "825420"
  },
  {
    "text": "essentially use that kind of\ndata decomposition and work",
    "start": "825420",
    "end": "828130"
  },
  {
    "text": "sharing if I have a longer loop\nand I want a longer array",
    "start": "828130",
    "end": "831220"
  },
  {
    "text": "and I want each thread\nto do more work.",
    "start": "831220",
    "end": "833509"
  },
  {
    "text": "So you might want to\nparameterize more things in",
    "start": "833510",
    "end": "836670"
  },
  {
    "text": "your tasks.",
    "start": "836670",
    "end": "838139"
  },
  {
    "text": "The efficiency, in that you have\nto keep in mind that each",
    "start": "838140",
    "end": "841110"
  },
  {
    "text": "of these tasks will eventually\nsort of have to talk with",
    "start": "841110",
    "end": "844470"
  },
  {
    "text": "other tasks.",
    "start": "844470",
    "end": "845410"
  },
  {
    "text": "There's communication costs\nthat have to be taken into",
    "start": "845410",
    "end": "848529"
  },
  {
    "text": "account, synchronization.",
    "start": "848530",
    "end": "850030"
  },
  {
    "text": "So you want these tasks to\nactually amortize the",
    "start": "850030",
    "end": "852040"
  },
  {
    "text": "communication costs or other\noverheads over to computation.",
    "start": "852040",
    "end": "856079"
  },
  {
    "text": "And you want to keep in mind\nthat there's going to be",
    "start": "856080",
    "end": "858340"
  },
  {
    "text": "dependencies between these tasks\nand you don't want these",
    "start": "858340",
    "end": "860720"
  },
  {
    "text": "dependencies to get\nout of hand.",
    "start": "860720",
    "end": "862259"
  },
  {
    "text": "So you want to keep things\nunder control.",
    "start": "862260",
    "end": "864230"
  },
  {
    "text": "And lastly, which is probably as\nimportant as the other two:",
    "start": "864230",
    "end": "868410"
  },
  {
    "text": "simplicity.",
    "start": "868410",
    "end": "869220"
  },
  {
    "text": "And that if you start\ndecomposing your code into",
    "start": "869220",
    "end": "872290"
  },
  {
    "text": "different chunks and you can't\nthen understand your code in",
    "start": "872290",
    "end": "875850"
  },
  {
    "text": "the end, it doesn't help you\nfrom debugging perspective,",
    "start": "875850",
    "end": "879180"
  },
  {
    "text": "doesn't help you from a\nsoftware engineering",
    "start": "879180",
    "end": "880970"
  },
  {
    "text": "perspective or not being able\nto reuse you code or other",
    "start": "880970",
    "end": "884779"
  },
  {
    "text": "people being able to understand\nyour code.",
    "start": "884780",
    "end": "886290"
  },
  {
    "start": "886290",
    "end": "889040"
  },
  {
    "text": "Guidelines for data",
    "start": "889040",
    "end": "889990"
  },
  {
    "text": "decomposition are sort of similar.",
    "start": "889990",
    "end": "892250"
  },
  {
    "start": "891000",
    "end": "891000"
  },
  {
    "text": "And you essentially have to do\ntask and data parallelism to",
    "start": "892250",
    "end": "896200"
  },
  {
    "text": "sort of complete your process.",
    "start": "896200",
    "end": "900250"
  },
  {
    "text": "And often your task\ndecomposition dictates your",
    "start": "900250",
    "end": "903040"
  },
  {
    "text": "data partitioning.",
    "start": "903040",
    "end": "904209"
  },
  {
    "text": "So if I've split up a loop into\ntwo different processes",
    "start": "904210",
    "end": "907320"
  },
  {
    "text": "I've essentially implied how\ndata should be distributed",
    "start": "907320",
    "end": "910590"
  },
  {
    "text": "between these two threads.",
    "start": "910590",
    "end": "913290"
  },
  {
    "text": "And data composition is a good\nstarting point as opposed to",
    "start": "913290",
    "end": "917320"
  },
  {
    "text": "task parallelism as a\ngood starting point.",
    "start": "917320",
    "end": "920340"
  },
  {
    "text": "If you're doing the same\ncomputation over and over and",
    "start": "920340",
    "end": "922470"
  },
  {
    "text": "over again, over really, really\nlarge data sets, so you",
    "start": "922470",
    "end": "927050"
  },
  {
    "text": "can essentially use that as your\nstick to decide whether",
    "start": "927050",
    "end": "930040"
  },
  {
    "text": "you do task decomposition first\nor data decomposition",
    "start": "930040",
    "end": "933380"
  },
  {
    "text": "first.",
    "start": "933380",
    "end": "937720"
  },
  {
    "start": "936000",
    "end": "936000"
  },
  {
    "text": "I've just listed two common\ndata decompositions.",
    "start": "937720",
    "end": "941459"
  },
  {
    "text": "I'll talk about more of these\nlater on when we talk about",
    "start": "941460",
    "end": "944040"
  },
  {
    "text": "actual performance\noptimizations.",
    "start": "944040",
    "end": "948000"
  },
  {
    "text": "So you want to decompose arrays\nfor example, along rows",
    "start": "948000",
    "end": "951890"
  },
  {
    "text": "or columns.",
    "start": "951890",
    "end": "952670"
  },
  {
    "text": "You can compose arrays into\nblocks, you decompose them",
    "start": "952670",
    "end": "955200"
  },
  {
    "text": "into blocks.",
    "start": "955200",
    "end": "956640"
  },
  {
    "text": "You have recursive\ndata structures.",
    "start": "956640",
    "end": "958150"
  },
  {
    "text": "So a tree, you might partition\nit into left and right",
    "start": "958150",
    "end": "960570"
  },
  {
    "text": "sub-trees in a binary tree.",
    "start": "960570",
    "end": "962420"
  },
  {
    "text": "And the thing you're trying to\nget to is actually start with",
    "start": "962420",
    "end": "966149"
  },
  {
    "text": "a problem, and then recursively\nsubdivide it until",
    "start": "966150",
    "end": "968740"
  },
  {
    "text": "you can get to a manageable\npart.",
    "start": "968740",
    "end": "970339"
  },
  {
    "text": "Do the computation and figure\nout a way to do the",
    "start": "970340",
    "end": "972190"
  },
  {
    "text": "integration.",
    "start": "972190",
    "end": "973390"
  },
  {
    "text": "You know, it's like merge\nsort, classic example --",
    "start": "973390",
    "end": "976970"
  },
  {
    "text": "tries to capture this\nreally well.",
    "start": "976970",
    "end": "979660"
  },
  {
    "text": "So again, the three theme, key\nconcepts to keep in mind when",
    "start": "979660",
    "end": "983620"
  },
  {
    "text": "you're doing data decomposition:\nflexibility,",
    "start": "983620",
    "end": "985980"
  },
  {
    "text": "efficiency, and simplicity.",
    "start": "985980",
    "end": "989100"
  },
  {
    "text": "The first two are really just\nmeant to suggest that the size",
    "start": "989100",
    "end": "993370"
  },
  {
    "text": "of the data that you've\nallocated actually leads to",
    "start": "993370",
    "end": "996150"
  },
  {
    "text": "enough work.",
    "start": "996150",
    "end": "997670"
  },
  {
    "text": "Because you want to amortize the\ncost of communication or",
    "start": "997670",
    "end": "1000250"
  },
  {
    "text": "synchronization, but you also\nwant the amount of work that's",
    "start": "1000250",
    "end": "1003570"
  },
  {
    "text": "generated by each data chunk\nto generate about the same",
    "start": "1003570",
    "end": "1008510"
  },
  {
    "text": "amount of work, so\nload balancing.",
    "start": "1008510",
    "end": "1011040"
  },
  {
    "text": "And simplicity, just for same\nreason as task decomposition",
    "start": "1011040",
    "end": "1015360"
  },
  {
    "text": "can get out of hand,\ndata decomposition",
    "start": "1015360",
    "end": "1017600"
  },
  {
    "text": "can get out of hand.",
    "start": "1017600",
    "end": "1018550"
  },
  {
    "text": "You don't want data moving\naround throughout and then it",
    "start": "1018550",
    "end": "1021480"
  },
  {
    "text": "becomes again, hard to debug or\nmanage or make changes and",
    "start": "1021480",
    "end": "1026120"
  },
  {
    "text": "track dependencies.",
    "start": "1026120",
    "end": "1029110"
  },
  {
    "text": "Pipeline parallelism, this is\nactually classified somewhere",
    "start": "1029110",
    "end": "1031549"
  },
  {
    "text": "else in the book.",
    "start": "1031550",
    "end": "1032500"
  },
  {
    "text": "Actually, lifted it up and tried\nto make a case for it in",
    "start": "1032500",
    "end": "1037850"
  },
  {
    "start": "1033000",
    "end": "1033000"
  },
  {
    "text": "that it's just good nature I\nthink, to expose producer",
    "start": "1037850",
    "end": "1040480"
  },
  {
    "text": "consumer relationships\nin your code.",
    "start": "1040480",
    "end": "1041720"
  },
  {
    "text": "So if I have a function that's\nproducing data that's going to",
    "start": "1041720",
    "end": "1044280"
  },
  {
    "text": "be used by another function as\nwith the spatial decomposition",
    "start": "1044280",
    "end": "1049780"
  },
  {
    "text": "or in different stages of\nclassic rate tracing",
    "start": "1049780",
    "end": "1052300"
  },
  {
    "text": "algorithms you want to maintain\nthat producer",
    "start": "1052300",
    "end": "1055320"
  },
  {
    "text": "consumer relationship or that\nasembly line analogy.",
    "start": "1055320",
    "end": "1058970"
  },
  {
    "text": "And what are some prime examples\nof pipelines in",
    "start": "1058970",
    "end": "1061909"
  },
  {
    "text": "computer architecture?",
    "start": "1061910",
    "end": "1063810"
  },
  {
    "text": "It's like the instruction\npipeline",
    "start": "1063810",
    "end": "1065280"
  },
  {
    "text": "and your super scalar.",
    "start": "1065280",
    "end": "1067170"
  },
  {
    "text": "But there might be some other\nexamples of pipelines, things",
    "start": "1067170",
    "end": "1070070"
  },
  {
    "text": "that you might have used\nin say, UNIX shell.",
    "start": "1070070",
    "end": "1073590"
  },
  {
    "text": "So cat processor, pipe\nit to another--",
    "start": "1073590",
    "end": "1077740"
  },
  {
    "text": "to a grep word and then\nword count that.",
    "start": "1077740",
    "end": "1079780"
  },
  {
    "text": "So I think it's a\nnatural concept.",
    "start": "1079780",
    "end": "1082860"
  },
  {
    "text": "We use it in many different ways\nand it's good to sort of",
    "start": "1082860",
    "end": "1085880"
  },
  {
    "text": "practice that at the software\nlevel as well.",
    "start": "1085880",
    "end": "1088890"
  },
  {
    "text": "And there are some computations\nin specific",
    "start": "1088890",
    "end": "1091490"
  },
  {
    "text": "domains, like in signal\nprocessing and graphics that",
    "start": "1091490",
    "end": "1093990"
  },
  {
    "text": "have really sort of--",
    "start": "1093990",
    "end": "1097140"
  },
  {
    "text": "where the pipeline model is\nreally important part of how",
    "start": "1097140",
    "end": "1100410"
  },
  {
    "text": "computation gets carried out.",
    "start": "1100410",
    "end": "1101960"
  },
  {
    "text": "You know, you have your graphics\npipeline for example,",
    "start": "1101960",
    "end": "1105039"
  },
  {
    "text": "in signal processing.",
    "start": "1105040",
    "end": "1107070"
  },
  {
    "text": "How much time do I have?",
    "start": "1107070",
    "end": "1109418"
  },
  {
    "text": "How am I doing on time?",
    "start": "1109418",
    "end": "1111429"
  },
  {
    "text": "PROFESSOR: OK, should\nI stop here?",
    "start": "1111430",
    "end": "1113250"
  },
  {
    "text": "AUDIENCE: About how much more?",
    "start": "1113250",
    "end": "1114660"
  },
  {
    "text": "PROFESSOR: 10 slides.",
    "start": "1114660",
    "end": "1117550"
  },
  {
    "text": "PROFESSOR: OK, so this is sort\nof a brief summary, which will",
    "start": "1117550",
    "end": "1122930"
  },
  {
    "text": "lead into a much larger talk at\nthe next lecture on how you",
    "start": "1122930",
    "end": "1126270"
  },
  {
    "text": "actually go about re-engineering\nyour code for",
    "start": "1126270",
    "end": "1128200"
  },
  {
    "text": "parallelism.",
    "start": "1128200",
    "end": "1129090"
  },
  {
    "text": "And this could come into play\nif you start with sequential",
    "start": "1129090",
    "end": "1132159"
  },
  {
    "text": "code and you're parallelizing\nit.",
    "start": "1132160",
    "end": "1133610"
  },
  {
    "text": "Some of you are doing that\nfor your projects.",
    "start": "1133610",
    "end": "1135090"
  },
  {
    "text": "Or if you're actually writing\ncode from scratch and you want",
    "start": "1135090",
    "end": "1138140"
  },
  {
    "text": "to engineer that for parallelism\nas well.",
    "start": "1138140",
    "end": "1139650"
  },
  {
    "start": "1139650",
    "end": "1142570"
  },
  {
    "text": "So I think it's important to\nsort of understand the problem",
    "start": "1142570",
    "end": "1146279"
  },
  {
    "text": "that you're working with.",
    "start": "1146280",
    "end": "1147305"
  },
  {
    "text": "So you want to survey your\nlandscape, understand what",
    "start": "1147305",
    "end": "1149300"
  },
  {
    "text": "other people might have done,\nand look for well-known",
    "start": "1149300",
    "end": "1152270"
  },
  {
    "text": "solutions and common pitfalls.",
    "start": "1152270",
    "end": "1156320"
  },
  {
    "text": "And the patterns that I'm going\nto talk about in more",
    "start": "1156320",
    "end": "1158570"
  },
  {
    "text": "detail really provide you with a\nlist of questions to sort of",
    "start": "1158570",
    "end": "1161480"
  },
  {
    "text": "help you assess the existing\ncode that you're working with",
    "start": "1161480",
    "end": "1166620"
  },
  {
    "text": "or the problem that you're\ntrying to solve.",
    "start": "1166620",
    "end": "1169160"
  },
  {
    "text": "There's something that you need\nto keep in mind that sort",
    "start": "1169160",
    "end": "1171250"
  },
  {
    "text": "of effect your overall\ncorrectness.",
    "start": "1171250",
    "end": "1173450"
  },
  {
    "text": "So for example, is your",
    "start": "1173450",
    "end": "1174659"
  },
  {
    "text": "computation numerically stable?",
    "start": "1174660",
    "end": "1177110"
  },
  {
    "text": "You might know if you have a\nfloating point computation you",
    "start": "1177110",
    "end": "1180640"
  },
  {
    "text": "might not be able to reorder\nall the operations because",
    "start": "1180640",
    "end": "1183540"
  },
  {
    "text": "that might effect your\nactual precision.",
    "start": "1183540",
    "end": "1186320"
  },
  {
    "text": "And so your overall output might\nbe different and that",
    "start": "1186320",
    "end": "1188320"
  },
  {
    "text": "may or may not be acceptable.",
    "start": "1188320",
    "end": "1190730"
  },
  {
    "text": "So a lot of scientific codes for\nexample, are things that",
    "start": "1190730",
    "end": "1193929"
  },
  {
    "text": "have to deal with a lot of\nprecision, might have to be",
    "start": "1193930",
    "end": "1196530"
  },
  {
    "text": "cognizant of that fact.",
    "start": "1196530",
    "end": "1198720"
  },
  {
    "text": "You want to also define the\nscope of, what are you trying",
    "start": "1198720",
    "end": "1201260"
  },
  {
    "text": "to do and will it\nbe good enough?",
    "start": "1201260",
    "end": "1204880"
  },
  {
    "text": "You want to do back of the hand,\nback of the envelope",
    "start": "1204880",
    "end": "1207160"
  },
  {
    "text": "calculations to make sure that\nthings that you're suggesting",
    "start": "1207160",
    "end": "1210550"
  },
  {
    "text": "of doing are actually feasible,\nthat they're",
    "start": "1210550",
    "end": "1213095"
  },
  {
    "text": "actually practical and that\nwill give you the sort of",
    "start": "1213095",
    "end": "1215309"
  },
  {
    "text": "performance expectations\nthat you've set out.",
    "start": "1215310",
    "end": "1219460"
  },
  {
    "text": "You also want to understand\nyour input range.",
    "start": "1219460",
    "end": "1224399"
  },
  {
    "text": "You might be able to specialize\nif there are some",
    "start": "1224400",
    "end": "1226630"
  },
  {
    "text": "cases for example, that you're\nallowed to ignore.",
    "start": "1226630",
    "end": "1229170"
  },
  {
    "text": "So these are good things\nto keep in mind.",
    "start": "1229170",
    "end": "1231930"
  },
  {
    "text": "You also want to define\na testing protocol.",
    "start": "1231930",
    "end": "1234140"
  },
  {
    "start": "1233000",
    "end": "1233000"
  },
  {
    "text": "I think it's important\nto understand--",
    "start": "1234140",
    "end": "1237250"
  },
  {
    "text": "you started out with some piece\nof code, you're going to",
    "start": "1237250",
    "end": "1238800"
  },
  {
    "text": "make some changes to it,\nhow you going to go",
    "start": "1238800",
    "end": "1240520"
  },
  {
    "text": "about testing it?",
    "start": "1240520",
    "end": "1241770"
  },
  {
    "text": "How you might go about debugging\nit and that could be",
    "start": "1241770",
    "end": "1244650"
  },
  {
    "text": "essentially where you spend\na lot of your time.",
    "start": "1244650",
    "end": "1247910"
  },
  {
    "text": "And then having these things\nin mind, I think, the parts",
    "start": "1247910",
    "end": "1251650"
  },
  {
    "text": "that are worth looking\nat are the parts that",
    "start": "1251650",
    "end": "1255400"
  },
  {
    "text": "make the most sense.",
    "start": "1255400",
    "end": "1256470"
  },
  {
    "text": "Where is your computation\nspending most of its time?",
    "start": "1256470",
    "end": "1258140"
  },
  {
    "text": "Is there hot spots\nin your code?",
    "start": "1258140",
    "end": "1259610"
  },
  {
    "text": "And you can use profiling tools\nfor that and in fact,",
    "start": "1259610",
    "end": "1262380"
  },
  {
    "text": "you'll see some of that for\ncell in some of the",
    "start": "1262380",
    "end": "1264150"
  },
  {
    "text": "recitations later\nin the course.",
    "start": "1264150",
    "end": "1268660"
  },
  {
    "text": "So a simple example of molecular\ndynamics simulator.",
    "start": "1268660",
    "end": "1273750"
  },
  {
    "text": "What you're trying to do is,\nyou have some space of",
    "start": "1273750",
    "end": "1276940"
  },
  {
    "text": "molecules, which I'm just going\nto represent in 2D.",
    "start": "1276940",
    "end": "1279929"
  },
  {
    "text": "You know, look, they have water\nmolecules and I have",
    "start": "1279930",
    "end": "1283040"
  },
  {
    "text": "some protein that I'm trying\nto understand how the",
    "start": "1283040",
    "end": "1290250"
  },
  {
    "text": "different atoms in that molecule\nare moving around so",
    "start": "1290250",
    "end": "1292640"
  },
  {
    "text": "that I can determine the\nshape of the protein.",
    "start": "1292640",
    "end": "1294880"
  },
  {
    "text": "So there are forces,\nthere are bonded",
    "start": "1294880",
    "end": "1297010"
  },
  {
    "text": "forces between the molecules.",
    "start": "1297010",
    "end": "1299190"
  },
  {
    "text": "So I've just shown for example,\nbonded forces among",
    "start": "1299190",
    "end": "1302419"
  },
  {
    "start": "1301000",
    "end": "1301000"
  },
  {
    "text": "my protein and then there\nare non-bonded forces.",
    "start": "1302420",
    "end": "1305120"
  },
  {
    "text": "So how are different atoms sort\nof interacting with each",
    "start": "1305120",
    "end": "1307300"
  },
  {
    "text": "other because of electrostatic\nforces, for example.",
    "start": "1307300",
    "end": "1309670"
  },
  {
    "start": "1309670",
    "end": "1312920"
  },
  {
    "text": "So what you try to do is figure\nout, on each atom, what",
    "start": "1312920",
    "end": "1315435"
  },
  {
    "text": "are all the forces that are\naffecting it and what is its",
    "start": "1315435",
    "end": "1318100"
  },
  {
    "text": "current position and then you\ntry to estimate where it's",
    "start": "1318100",
    "end": "1321110"
  },
  {
    "text": "going to move based on\nNewtonian, in the simplest",
    "start": "1321110",
    "end": "1325929"
  },
  {
    "text": "case, a Newtonian f equals\nm a type projection.",
    "start": "1325930",
    "end": "1329710"
  },
  {
    "text": "So in a naive algorithm you have\nn squared interactions.",
    "start": "1329710",
    "end": "1332950"
  },
  {
    "text": "You have to calculate all the\nforces on one molecule from",
    "start": "1332950",
    "end": "1336149"
  },
  {
    "text": "all others.",
    "start": "1336150",
    "end": "1339210"
  },
  {
    "text": "By understanding your problem\nyou know that you can actually",
    "start": "1339210",
    "end": "1341909"
  },
  {
    "text": "exploit the properties of\nforces that essentially",
    "start": "1341910",
    "end": "1344720"
  },
  {
    "text": "decrease exponentially, so you\ncan use a cutoff distance.",
    "start": "1344720",
    "end": "1347490"
  },
  {
    "text": "So if a molecule is way too far\naway you can ignore this.",
    "start": "1347490",
    "end": "1350400"
  },
  {
    "text": "And for people who do galaxy\ncalculations, you know you can",
    "start": "1350400",
    "end": "1355220"
  },
  {
    "text": "ignore geometric forces between\nconstellations or",
    "start": "1355220",
    "end": "1358620"
  },
  {
    "text": "clusters that are\ntoo far apart.",
    "start": "1358620",
    "end": "1361160"
  },
  {
    "text": "So in the sequential code, some\npseudo code for doing a",
    "start": "1361160",
    "end": "1365370"
  },
  {
    "text": "molecular dynamic simulator,\nyou have your atoms array,",
    "start": "1365370",
    "end": "1368100"
  },
  {
    "text": "your force array, your set of\nneighbors in a two-dimensional",
    "start": "1368100",
    "end": "1370750"
  },
  {
    "start": "1370000",
    "end": "1370000"
  },
  {
    "text": "space and you're going to go\nthrough and sort of simulate",
    "start": "1370750",
    "end": "1374470"
  },
  {
    "text": "different time steps.",
    "start": "1374470",
    "end": "1375710"
  },
  {
    "text": "And for each time step you're\ngoing to do-- for each atom--",
    "start": "1375710",
    "end": "1378659"
  },
  {
    "text": "compute the bonded forces,\ncompute who are my neighbors",
    "start": "1378660",
    "end": "1382250"
  },
  {
    "text": "for those neighbors, compute--\nso these are things that",
    "start": "1382250",
    "end": "1385250"
  },
  {
    "text": "essentially incapsulate\ndistance.",
    "start": "1385250",
    "end": "1387100"
  },
  {
    "text": "Compute the forces between\nthem, update the",
    "start": "1387100",
    "end": "1389500"
  },
  {
    "text": "position and end.",
    "start": "1389500",
    "end": "1391360"
  },
  {
    "text": "So since this is a loop then\nthat might suggest essentially",
    "start": "1391360",
    "end": "1396179"
  },
  {
    "start": "1395000",
    "end": "1395000"
  },
  {
    "text": "where to start looking\nfor concurrency.",
    "start": "1396180",
    "end": "1398810"
  },
  {
    "text": "So you can start with the\ndecomposition patterns and",
    "start": "1398810",
    "end": "1401680"
  },
  {
    "text": "they'll be more in depth details\nabout those next.",
    "start": "1401680",
    "end": "1406360"
  },
  {
    "text": "I'm going to give you some\nintuition and then you would",
    "start": "1406360",
    "end": "1408705"
  },
  {
    "text": "try to figure out whether your\ndecomposition has to abide by",
    "start": "1408705",
    "end": "1411370"
  },
  {
    "text": "certain dependencies and what\nare those dependencies?",
    "start": "1411370",
    "end": "1414120"
  },
  {
    "text": "How do you expose them?",
    "start": "1414120",
    "end": "1415140"
  },
  {
    "text": "And then, how can you\ndesign and evaluate?",
    "start": "1415140",
    "end": "1417620"
  },
  {
    "start": "1417000",
    "end": "1417000"
  },
  {
    "text": "How can you evaluate\nyour design?",
    "start": "1417620",
    "end": "1418870"
  },
  {
    "start": "1418870",
    "end": "1422050"
  },
  {
    "text": "Screwed up again.",
    "start": "1422050",
    "end": "1424000"
  },
  {
    "text": "I just fixed this.",
    "start": "1424000",
    "end": "1424920"
  },
  {
    "text": "OK, so this is the pseudo code\nagain from the previous slide.",
    "start": "1424920",
    "end": "1428800"
  },
  {
    "text": "And since all you have is a\nsimple loop that essentially",
    "start": "1428800",
    "end": "1432440"
  },
  {
    "text": "says, this is where to look\nfor the computation.",
    "start": "1432440",
    "end": "1434600"
  },
  {
    "text": "And since you're essentially\ndoing the same computation for",
    "start": "1434600",
    "end": "1436980"
  },
  {
    "start": "1436000",
    "end": "1436000"
  },
  {
    "text": "each atom then that again,\ngives you the type of",
    "start": "1436980",
    "end": "1442210"
  },
  {
    "text": "parallelism that we've\ntalked about before.",
    "start": "1442210",
    "end": "1445169"
  },
  {
    "text": "So you can look for splitting\nup each iteration and",
    "start": "1445170",
    "end": "1448700"
  },
  {
    "text": "parallelizing those so that each\nprocessor for example,",
    "start": "1448700",
    "end": "1450970"
  },
  {
    "text": "does one atom.",
    "start": "1450970",
    "end": "1452850"
  },
  {
    "text": "Or each processor does a\ncollection of atoms. But there",
    "start": "1452850",
    "end": "1455870"
  },
  {
    "text": "are additional tasks.",
    "start": "1455870",
    "end": "1456920"
  },
  {
    "text": "So data level parallelism\nversus sort of control",
    "start": "1456920",
    "end": "1459640"
  },
  {
    "text": "parallelism.",
    "start": "1459640",
    "end": "1460670"
  },
  {
    "text": "For each atom you also want\nto calculate the forces.",
    "start": "1460670",
    "end": "1463320"
  },
  {
    "text": "You want to calculate long\nrange interactions, find",
    "start": "1463320",
    "end": "1465409"
  },
  {
    "text": "neighbors, update position\nand so on.",
    "start": "1465410",
    "end": "1467490"
  },
  {
    "text": "And some of these have shared\ndata, some of them do not.",
    "start": "1467490",
    "end": "1470340"
  },
  {
    "text": "So you have to factor that in.",
    "start": "1470340",
    "end": "1471789"
  },
  {
    "text": "So understanding there control\ndependencies essentially tells",
    "start": "1471790",
    "end": "1474660"
  },
  {
    "text": "you how you need to it lay\nout your orchestration.",
    "start": "1474660",
    "end": "1480930"
  },
  {
    "start": "1475000",
    "end": "1475000"
  },
  {
    "text": "So you have your bonded forces,\nyou have your neighbor",
    "start": "1480930",
    "end": "1482750"
  },
  {
    "text": "list, that effects your long\nrange calculations.",
    "start": "1482750",
    "end": "1485240"
  },
  {
    "text": "But to do this update position\nI need both of these tasks to",
    "start": "1485240",
    "end": "1488110"
  },
  {
    "text": "have completed.",
    "start": "1488110",
    "end": "1489870"
  },
  {
    "text": "And in each one of these tasks\nthere's different data",
    "start": "1489870",
    "end": "1493270"
  },
  {
    "text": "structures that they need.",
    "start": "1493270",
    "end": "1494660"
  },
  {
    "text": "So everybody essentially reads\nthe location of the items. So",
    "start": "1494660",
    "end": "1500180"
  },
  {
    "start": "1499000",
    "end": "1499000"
  },
  {
    "text": "this is good because we want\ntime step that essentially",
    "start": "1500180",
    "end": "1502510"
  },
  {
    "text": "says, I can really distribute\nthis really well, but then",
    "start": "1502510",
    "end": "1508470"
  },
  {
    "text": "there's a right synchronization\nproblem",
    "start": "1508470",
    "end": "1510480"
  },
  {
    "text": "because eventually I have to\nupdate this array so I have to",
    "start": "1510480",
    "end": "1512880"
  },
  {
    "text": "be careful about who goes\nfirst. There's an",
    "start": "1512880",
    "end": "1516590"
  },
  {
    "text": "accumulation, which means\nI can potentially do a",
    "start": "1516590",
    "end": "1519200"
  },
  {
    "text": "reduction on these.",
    "start": "1519200",
    "end": "1521279"
  },
  {
    "text": "There's some write on the other\nend, but that seems to",
    "start": "1521280",
    "end": "1523630"
  },
  {
    "text": "be a localized data structure.",
    "start": "1523630",
    "end": "1525280"
  },
  {
    "text": "So for partitioning example,\nneighbors might have to be",
    "start": "1525280",
    "end": "1530040"
  },
  {
    "text": "just locals at a different\nprocessor.",
    "start": "1530040",
    "end": "1531960"
  },
  {
    "text": "So coming up with this structure\nand sort of block",
    "start": "1531960",
    "end": "1534890"
  },
  {
    "text": "level diagram helps you\nessentially figure out where",
    "start": "1534890",
    "end": "1538380"
  },
  {
    "text": "are your tasks?",
    "start": "1538380",
    "end": "1539180"
  },
  {
    "text": "Helps you figure out what kind\nof synchronization mechanisms",
    "start": "1539180",
    "end": "1541410"
  },
  {
    "text": "you need and it can also help\nyou suggest the data",
    "start": "1541410",
    "end": "1544710"
  },
  {
    "text": "distribution that you might need\nto reduce synchronization",
    "start": "1544710",
    "end": "1548380"
  },
  {
    "text": "costs and problems. And\nlastly, you want to",
    "start": "1548380",
    "end": "1552330"
  },
  {
    "text": "essentially evaluate\nyour design.",
    "start": "1552330",
    "end": "1554440"
  },
  {
    "text": "And you want to keep in mind,\nwhat is your target",
    "start": "1554440",
    "end": "1555980"
  },
  {
    "text": "architecture.",
    "start": "1555980",
    "end": "1556990"
  },
  {
    "start": "1556000",
    "end": "1556000"
  },
  {
    "text": "Are you trying to really run\non shared memory and",
    "start": "1556990",
    "end": "1559130"
  },
  {
    "text": "distributed memory and message\npassing or are you just doing",
    "start": "1559130",
    "end": "1562290"
  },
  {
    "text": "this for one architecture?",
    "start": "1562290",
    "end": "1563160"
  },
  {
    "text": "So for your project, you're\ndoing this for self, so you",
    "start": "1563160",
    "end": "1566750"
  },
  {
    "text": "can be very self specific.",
    "start": "1566750",
    "end": "1568830"
  },
  {
    "text": "But if you're doing this\nin other contexts, the",
    "start": "1568830",
    "end": "1571269"
  },
  {
    "text": "architecture actually\nmight influence",
    "start": "1571270",
    "end": "1572770"
  },
  {
    "text": "some of your decisions.",
    "start": "1572770",
    "end": "1574020"
  },
  {
    "start": "1574020",
    "end": "1576080"
  },
  {
    "text": "Does data sharing have\nenough special",
    "start": "1576080",
    "end": "1577760"
  },
  {
    "text": "properties like a read only?",
    "start": "1577760",
    "end": "1579980"
  },
  {
    "text": "There are data structures\nthat are read only.",
    "start": "1579980",
    "end": "1581460"
  },
  {
    "text": "Are there enough accumulations\nthat you can exploit by",
    "start": "1581460",
    "end": "1584370"
  },
  {
    "text": "reductions?",
    "start": "1584370",
    "end": "1585250"
  },
  {
    "text": "Are there temporal constraints\non data sharing",
    "start": "1585250",
    "end": "1589300"
  },
  {
    "text": "that you can exploit?",
    "start": "1589300",
    "end": "1590250"
  },
  {
    "text": "And can you deal with\nthose efficiently?",
    "start": "1590250",
    "end": "1591630"
  },
  {
    "text": "If you can't then you\nhave a problem.",
    "start": "1591630",
    "end": "1594170"
  },
  {
    "text": "So you need to resolve that.",
    "start": "1594170",
    "end": "1595550"
  },
  {
    "text": "If the designs OK then\nyou move on to",
    "start": "1595550",
    "end": "1597180"
  },
  {
    "text": "the next design space.",
    "start": "1597180",
    "end": "1598970"
  },
  {
    "text": "So at the next lecture\nI'll go through these",
    "start": "1598970",
    "end": "1601679"
  },
  {
    "text": "in a lot more detail.",
    "start": "1601680",
    "end": "1602460"
  },
  {
    "text": "That's it.",
    "start": "1602460",
    "end": "1604179"
  },
  {
    "start": "1604180",
    "end": "1605873"
  }
]