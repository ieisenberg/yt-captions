[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": " The following\ncontent is provided by MIT OpenCourseWare under\na Creative Commons License. Additional information\nabout our license,",
    "start": "0",
    "end": "8230"
  },
  {
    "text": "and MIT OpenCourseWare\nin general, is available at ocw.mit.edu. ",
    "start": "8230",
    "end": "16570"
  },
  {
    "start": "15000",
    "end": "140000"
  },
  {
    "text": "PROFESSOR: OK. Now, where am I\nwith this problem? Well, last time I spoke about\nwhat the situation's like",
    "start": "16570",
    "end": "28696"
  },
  {
    "text": "as alpha goes to infinity. And I want to say also a word\nabout -- more than a word --",
    "start": "28697",
    "end": "37530"
  },
  {
    "text": "about alpha going to 0.  And then, the real problems\ncome when alpha is in between.",
    "start": "37530",
    "end": "48899"
  },
  {
    "text": "The real problem\n-- the situations, these ill-posed problems that\ncome from inverse problems,",
    "start": "48900",
    "end": "58570"
  },
  {
    "text": "trying to find out what's\ninside your brain by taking measurements at the skull. All sorts of applications\ninvolve a finite alpha.",
    "start": "58570",
    "end": "72350"
  },
  {
    "text": "And I'm not quite ready\nto discuss those topics.",
    "start": "72350",
    "end": "78310"
  },
  {
    "text": "I mean, roughly speaking -- I'll write down a reminder now.",
    "start": "78310",
    "end": "86240"
  },
  {
    "text": "What happened when\nalpha went to infinity? When alpha went to\ninfinity, this part",
    "start": "86240",
    "end": "93460"
  },
  {
    "text": "became the important part. So as alpha went to infinity,\nthe limit was u_infinity,",
    "start": "93460",
    "end": "102229"
  },
  {
    "text": "shall I call it? u_infinity.  Well, so u_infinity was\na minimizer of this term,",
    "start": "102230",
    "end": "110860"
  },
  {
    "text": "u_infinity minimized\nB*u minus d squared.",
    "start": "110860",
    "end": "122100"
  },
  {
    "text": "In fact, in my last lecture,\nI was taking B*u equal d",
    "start": "122100",
    "end": "130490"
  },
  {
    "text": "as an equation that\nhad exact solutions, and saying how did we\nactually solve B*u equal d.",
    "start": "130490",
    "end": "137060"
  },
  {
    "text": "So u_infinity\nminimizes B*u minus d. But that might\nleave some freedom.",
    "start": "137060",
    "end": "144080"
  },
  {
    "start": "140000",
    "end": "535000"
  },
  {
    "text": "If B doesn't have\nthat many rows, if its rank is not\nthat big, then this",
    "start": "144080",
    "end": "150349"
  },
  {
    "text": "doesn't finish the job. So among these, if\nthere are many --",
    "start": "150350",
    "end": "159610"
  },
  {
    "text": "and that's what were\ninterested in -- u hat infinity, that limit,\nwill minimize the other bit,",
    "start": "159610",
    "end": "171810"
  },
  {
    "text": "A*u minus b square. Does that makes sense somehow?",
    "start": "171810",
    "end": "178110"
  },
  {
    "text": "This is in the problem\nhere, for any finite alpha. As alpha gets bigger\nand bigger, we",
    "start": "178110",
    "end": "183599"
  },
  {
    "text": "push harder and\nharder on this one, so we get a one that's\na winner for this one,",
    "start": "183600",
    "end": "190440"
  },
  {
    "text": "but the trace of this\nfirst part is still around and if there are many winners,\nthen having this first part",
    "start": "190440",
    "end": "199770"
  },
  {
    "text": "in there will give us, among\nthe winners, the one that",
    "start": "199770",
    "end": "204970"
  },
  {
    "text": "does the best on that term. And small alpha,\ngoing to 0, will just",
    "start": "204970",
    "end": "213620"
  },
  {
    "text": "be the opposite right? This finally struck\nme over the weekend, you know, like I could\ndivide this quantity,",
    "start": "213620",
    "end": "220300"
  },
  {
    "text": "this whole expression by\nalpha, so then I have a 1 there, and a 1 over alpha\nhere, and now as alpha",
    "start": "220300",
    "end": "228440"
  },
  {
    "text": "goes 0 this is the big term. So now u -- shall\nI call this u_0?",
    "start": "228440",
    "end": "236490"
  },
  {
    "text": "Brilliant notation, right? So this produces a u_alpha.",
    "start": "236490",
    "end": "242640"
  },
  {
    "text": " In that limit it converges to\na u_infinity that focuses first",
    "start": "242640",
    "end": "250200"
  },
  {
    "text": "on this problem, but\nin the other limit, when alpha's going to 0, it's\nthis term that's biggest.",
    "start": "250200",
    "end": "255970"
  },
  {
    "text": "So u_0 minimizes A*u minus b\nsquared and if there are many",
    "start": "255970",
    "end": "265530"
  },
  {
    "text": "minimizers, among these --\nwell, you know what I'm going",
    "start": "265530",
    "end": "271264"
  },
  {
    "text": "to write. u_0, see I\nput a little hat there. Did I?",
    "start": "271265",
    "end": "276330"
  },
  {
    "text": "I don't know I haven't\nstayed with these hats very much but maybe\nI'll add them.",
    "start": "276330",
    "end": "283060"
  },
  {
    "text": "u hat minimizes the term\nthat's not so important,",
    "start": "283060",
    "end": "288870"
  },
  {
    "text": "B*u minus d square. OK, so today's lecture is still\nabout these limiting cases.",
    "start": "288870",
    "end": "300780"
  },
  {
    "text": "As I said, the scientific\nproblems, ill-posed problems,",
    "start": "300780",
    "end": "309210"
  },
  {
    "text": "especially these\ninverse problems, give situations in which\nthese limiting problems are",
    "start": "309210",
    "end": "316180"
  },
  {
    "text": "really bad, and you don't get\nto the limit, you don't want to. The whole point is to\nhave a finite alpha.",
    "start": "316180",
    "end": "327040"
  },
  {
    "text": "But choosing that alpha\ncorrectly is the art --",
    "start": "327040",
    "end": "333020"
  },
  {
    "text": "let me just say\nwhy -- so I almost, I'm sort of anticipating what\nI'm not ready to do properly.",
    "start": "333020",
    "end": "341030"
  },
  {
    "text": "So, I'll say why a finite\nalpha, on Wednesday.",
    "start": "341030",
    "end": "349010"
  },
  {
    "text": "Why? Because noisy data.",
    "start": "349010",
    "end": "354440"
  },
  {
    "start": "354440",
    "end": "364500"
  },
  {
    "text": "Because of the noise, at\nbest u is only determined,",
    "start": "364500",
    "end": "374360"
  },
  {
    "text": "because of the noise,\nup to some order,",
    "start": "374360",
    "end": "380099"
  },
  {
    "text": "say, order of some\nsmall quantity delta that measures the noise.",
    "start": "380100",
    "end": "385389"
  },
  {
    "text": "This is like a\nmeasure of the noise. ",
    "start": "385390",
    "end": "392750"
  },
  {
    "text": "Then there's no reason to\ndo what we did last time, like forcing B*u equal d.",
    "start": "392750",
    "end": "399450"
  },
  {
    "text": "There's no point in forcing\nB*u equal d if the d in that equation has noise in it,\nthen pushing it all the way",
    "start": "399450",
    "end": "411980"
  },
  {
    "text": "to the limit is unreasonable,\nand may produce a very,",
    "start": "411980",
    "end": "419570"
  },
  {
    "text": "you know, a\ncatastrophic illness. So that's when -- so it's\nreally the presence of noise,",
    "start": "419570",
    "end": "428350"
  },
  {
    "text": "the presence of uncertainty in\nthe first place that says OK,",
    "start": "428350",
    "end": "435180"
  },
  {
    "text": "a finite alpha is fine, you're\nnot looking for perfection, what you're looking\nfor is some stability,",
    "start": "435180",
    "end": "441110"
  },
  {
    "text": "some control on the stability. OK, right.",
    "start": "441110",
    "end": "447039"
  },
  {
    "text": "But now -- so that's Wednesday. ",
    "start": "447040",
    "end": "454300"
  },
  {
    "text": "Today, let me go -- I didn't\ngive an example, so today,",
    "start": "454300",
    "end": "463310"
  },
  {
    "text": "two topics, one is an\nexample with B*u equal d.",
    "start": "463310",
    "end": "471990"
  },
  {
    "text": "That was last\nlecture's, and that's the case when alpha\ngoes to infinity,",
    "start": "471990",
    "end": "478450"
  },
  {
    "text": "then secondly is something\ncalled a pseudoinverse. You may have seen that\nexpression, the pseudoinverse",
    "start": "478450",
    "end": "486440"
  },
  {
    "text": "of A, and sometimes it's\nwritten A with a dagger or A with a plus sign.",
    "start": "486440",
    "end": "493390"
  },
  {
    "text": "And that is worth knowing about. So this is a topic\nin linear algebra. It would be in my\nlinear algebra book,",
    "start": "493390",
    "end": "499910"
  },
  {
    "text": "but it's a topic that never\ngets into the 18.06 course cause it's sort of a little late.",
    "start": "499910",
    "end": "506490"
  },
  {
    "text": "And that will appear\nas alpha goes to 0. Right. So that's what\ntoday is about, it's",
    "start": "506490",
    "end": "514860"
  },
  {
    "text": "linear algebra, because I'm\nnot ready for the noise yet.",
    "start": "514860",
    "end": "521789"
  },
  {
    "text": "But it's the noisy data\nthat we have in reality",
    "start": "521790",
    "end": "528310"
  },
  {
    "text": "and that's why, in reality,\nalpha will be chosen finite.",
    "start": "528310",
    "end": "535340"
  },
  {
    "start": "535000",
    "end": "1598000"
  },
  {
    "text": "OK. So part one, then, is to do a\nvery simple example with B*u",
    "start": "535340",
    "end": "542760"
  },
  {
    "text": "equal d. And here is the example. OK. So this is my sum of\nsquares in which I plan",
    "start": "542760",
    "end": "551858"
  },
  {
    "text": "to let alpha to go to infinity. ",
    "start": "551859",
    "end": "558130"
  },
  {
    "text": "So A is the identity\nmatrix and b is 0. So that quantity is simple.",
    "start": "558130",
    "end": "566120"
  },
  {
    "text": "Here, I have just one equation,\nso p is 1; p by n is 1 by 2.",
    "start": "566120",
    "end": "576580"
  },
  {
    "text": "I've just one equation u_1 minus\nu_2 equals 6, and in the limit,",
    "start": "576580",
    "end": "581940"
  },
  {
    "text": "as alpha go to\ninfinity, I expect to see that that\nequation is enforced. ",
    "start": "581940",
    "end": "589930"
  },
  {
    "text": "So there's two ways to do it,\nwe can let alpha go to infinity and look at u_alpha\ngoing toward u_infinity,",
    "start": "589930",
    "end": "602820"
  },
  {
    "text": "maybe with their little hats. Or the second method which is\nthe null space method, which is",
    "start": "602820",
    "end": "612670"
  },
  {
    "text": "what I spoke about last time. the null space method solves the\nconstraint B*u equal d which is",
    "start": "612670",
    "end": "624290"
  },
  {
    "text": "just u_1 minus u_2 equal 6. OK. And that's -- maybe I'll\nstart with that one.",
    "start": "624290",
    "end": "633389"
  },
  {
    "text": "Which looks so simple,\nof course, just to solve u_1 minus u_2 equal 6. I mean, everybody\nwould say, OK, solve it",
    "start": "633390",
    "end": "641980"
  },
  {
    "text": "for u_2 equals u_1 minus 6. ",
    "start": "641980",
    "end": "649579"
  },
  {
    "text": "So here is the method any\nsensible person would use.",
    "start": "649580",
    "end": "654650"
  },
  {
    "text": "But this course doesn't. OK, the sensible method\nwould be u_2 is u_1 minus 6;",
    "start": "654650",
    "end": "663630"
  },
  {
    "text": "plug that into the\nsquares and minimize.",
    "start": "663630",
    "end": "672440"
  },
  {
    "text": "So when I plug this in,\nof course, this is exact,",
    "start": "672440",
    "end": "678090"
  },
  {
    "text": "and this becomes u\n-- so I'm minimizing,",
    "start": "678090",
    "end": "683470"
  },
  {
    "text": "minimizing u_1 squared\nplus, what was it?",
    "start": "683470",
    "end": "688610"
  },
  {
    "text": "u_1 minus 6 square. ",
    "start": "688610",
    "end": "694930"
  },
  {
    "text": "So that's reduced the\nproblem to one unknown, this is the null space method.",
    "start": "694930",
    "end": "701250"
  },
  {
    "text": "The null space method\nis to solve the equation and remove unknowns.",
    "start": "701250",
    "end": "708259"
  },
  {
    "text": "Remove p unknowns coming\nfrom the p constraints, and here p is 1.",
    "start": "708260",
    "end": "714149"
  },
  {
    "text": "OK. And by the way, can we\njust guess, or not guess, but pretty well be sure,\nwhat's the minimizer here?",
    "start": "714150",
    "end": "725769"
  },
  {
    "text": "Anybody just tell me what\nu_1 would minimize that? Just make a guess, maybe? ",
    "start": "725770",
    "end": "733090"
  },
  {
    "text": "I'm looking for a number sort\nof halfway between 0 and 6",
    "start": "733090",
    "end": "739520"
  },
  {
    "text": "somehow. You won't be surprised\nthat the u_1 is 3.",
    "start": "739520",
    "end": "747630"
  },
  {
    "text": "And then, from this equation, I\nshould learn that u_2 is minus 3 -- u_2, no, u_(2, infinity).",
    "start": "747630",
    "end": "754700"
  },
  {
    "text": " Now I've got too many --\nu_(2, infinity) is minus 3.",
    "start": "754700",
    "end": "762130"
  },
  {
    "text": "Anyway, simple calculus, if you\njust set the derivative to 0,",
    "start": "762130",
    "end": "767430"
  },
  {
    "text": "you'll get 3 and then\nyou get minus 3 for u_2. So that's the null space\nmethod, except that I",
    "start": "767430",
    "end": "773649"
  },
  {
    "text": "didn't follow my complicated\nQR orthogonalization.",
    "start": "773650",
    "end": "782180"
  },
  {
    "text": "And I just want\nto do that quickly to reach the same answer.",
    "start": "782180",
    "end": "787319"
  },
  {
    "text": " And to say, why don't\nI just do this anyway?",
    "start": "787320",
    "end": "795250"
  },
  {
    "text": "This is what -- this\nwould be the row -- this would be the standard\nmethod in the first month",
    "start": "795250",
    "end": "803029"
  },
  {
    "text": "of linear algebra would be to\nuse the row reduced echelon form, which of course\nis going to be really,",
    "start": "803030",
    "end": "810300"
  },
  {
    "text": "really simple for\nthis matrix; in fact, that's already in row reduced\nechelon form -- elimination,",
    "start": "810300",
    "end": "817440"
  },
  {
    "text": "row reduction has nothing\nto do to improve that -- and then solve and then\nplug in and then go with it.",
    "start": "817440",
    "end": "824279"
  },
  {
    "text": "OK, well the thing\nis that that row",
    "start": "824280",
    "end": "829290"
  },
  {
    "text": "reduced echelon form, the\nstuff you teach, is not, for large systems,\nguaranteed stable.",
    "start": "829290",
    "end": "839730"
  },
  {
    "text": "It's not numerically stable. And the option of using--\nof orthogonalizing",
    "start": "839730",
    "end": "847200"
  },
  {
    "text": "is the right one to\nknow for a large system. So you you'll have to allow me,\non this really small example,",
    "start": "847200",
    "end": "856010"
  },
  {
    "text": "to use a method that\nI described last time. And I just want to recap with\nan example on the small system.",
    "start": "856010",
    "end": "864970"
  },
  {
    "text": "OK, so what was that method? So this is the null space\nmethod using qr now.",
    "start": "864970",
    "end": "870950"
  },
  {
    "text": " The MATLAB command qr, so\nwhat did we -- qr of B prime.",
    "start": "870950",
    "end": "879709"
  },
  {
    "text": "Do you remember\nthat we took that -- that's the MATLAB command\nthat eventually will,",
    "start": "879710",
    "end": "887140"
  },
  {
    "text": "or is actually already in\nthe notes for this section, and those notes\nwill get updated --",
    "start": "887140",
    "end": "893460"
  },
  {
    "text": "but that's step one in\nthe null space method, qr B prime.",
    "start": "893460",
    "end": "898940"
  },
  {
    "text": "And this gives me a\nchance to say what's up with this qr algorithm.",
    "start": "898940",
    "end": "904790"
  },
  {
    "text": "I mean after lu, qr is the most\nimportant algorithm in MATLAB.",
    "start": "904790",
    "end": "911149"
  },
  {
    "text": "And so what does it do? B prime, the transpose of B,\nis just 1, minus 1, right?",
    "start": "911150",
    "end": "920460"
  },
  {
    "text": "OK. Now what does Gram-Schmidt\ndo to that matrix?",
    "start": "920460",
    "end": "930800"
  },
  {
    "text": " Well, the idea of\nGram-Schmidt is",
    "start": "930800",
    "end": "937250"
  },
  {
    "text": "to produce orthonormal columns. So the most basic Gram-Schmidt\nidea would say, so what would",
    "start": "937250",
    "end": "945220"
  },
  {
    "text": "Gram and Schmidt say? They'd say, well, we\nonly have one column, and all we would have\nto do is normalize it",
    "start": "945220",
    "end": "952340"
  },
  {
    "text": "So Gram-Schmidt would produce\nthe normalized thing --",
    "start": "952340",
    "end": "961940"
  },
  {
    "text": "times square root of 2. That would be the q, and\nthis would be the r, 1 by 1,",
    "start": "961940",
    "end": "969810"
  },
  {
    "text": "in Gram Schmidt. OK, but here's the point, that\nthe qr algorithm in MATLAB,",
    "start": "969810",
    "end": "980540"
  },
  {
    "text": "which no longer uses\nthe Gram-Schmidt idea, instead uses a Householder idea,\nand one nice thing about this",
    "start": "980540",
    "end": "991000"
  },
  {
    "text": "is that it produces not just\nthis column, but another one,",
    "start": "991000",
    "end": "999950"
  },
  {
    "text": "it produces a column for the\n-- it completes the basis",
    "start": "999950",
    "end": "1007520"
  },
  {
    "text": "to a full orthonormal basis. So it finds a second vector.",
    "start": "1007520",
    "end": "1014019"
  },
  {
    "text": "So ordinary\nGram-Schmidt just had one column times one number.",
    "start": "1014020",
    "end": "1019270"
  },
  {
    "text": "What qr actually does is it\nends up with two columns.",
    "start": "1019270",
    "end": "1025480"
  },
  {
    "text": "And well, everybody can see\nwhat's the other column --",
    "start": "1025480",
    "end": "1032410"
  },
  {
    "text": "that has length 1, of course,\nand is orthogonal to the first column.",
    "start": "1032410",
    "end": "1037500"
  },
  {
    "text": "And now, that is\nmultiplied by 0. ",
    "start": "1037500",
    "end": "1047310"
  },
  {
    "text": "So this is what qr does. We have this 2 by 1 matrix,\nit produces a 2 by 2 times a 2",
    "start": "1047310",
    "end": "1055160"
  },
  {
    "text": "by 1.  And you might say, it\nwas wasting its time,",
    "start": "1055160",
    "end": "1063000"
  },
  {
    "text": "to find this part, because\nit's multiplied by 0,",
    "start": "1063000",
    "end": "1068810"
  },
  {
    "text": "but what are we learning\nfrom the vector?",
    "start": "1068810",
    "end": "1074910"
  },
  {
    "text": "From this [1, 1] vector or\n1 over square root of 2, 1 over square root of 2 vector?",
    "start": "1074910",
    "end": "1080190"
  },
  {
    "text": "What good can that do us? It's the null space of\nB. So B was 1, minus 1,",
    "start": "1080190",
    "end": "1091490"
  },
  {
    "text": "So let me just -- so that's\nthe connection with null space of B. If I look at vectors\n-- there's my matrix B,",
    "start": "1091490",
    "end": "1103120"
  },
  {
    "text": "and if I'm solving B*u equal\nd, if I'm solving B*u equal d,",
    "start": "1103120",
    "end": "1109330"
  },
  {
    "text": "then u is u_particular\nand u null space,",
    "start": "1109330",
    "end": "1117200"
  },
  {
    "text": "and if I want u null space, then\nthat's where this -- and these,",
    "start": "1117200",
    "end": "1122960"
  },
  {
    "text": "whatever extra columns, this\nmight be p columns and then this would be n minus p columns,\nthat's what that's good for.",
    "start": "1122960",
    "end": "1130639"
  },
  {
    "text": "And of course that\ncolumn tells me about the null space\nwhich, for this matrix,",
    "start": "1130640",
    "end": "1136380"
  },
  {
    "text": "is one-dimensional\nand easy to find, OK.",
    "start": "1136380",
    "end": "1145400"
  },
  {
    "text": "So that may be just to, so you\nknow the difference between",
    "start": "1145400",
    "end": "1153210"
  },
  {
    "text": "Gram-Schmidt's qr\nwhich stops with -- if you had one column\nyou end with one column,",
    "start": "1153210",
    "end": "1159450"
  },
  {
    "text": "and the MATLAB Householder\nqr which finds a full square",
    "start": "1159450",
    "end": "1164500"
  },
  {
    "text": "matrix. OK, just good to know and\nhere we've found a use for it. OK.",
    "start": "1164500",
    "end": "1169910"
  },
  {
    "text": "So then, the algorithm\nthat I gave last time --",
    "start": "1169910",
    "end": "1176010"
  },
  {
    "text": "and I'll give the\ncode in the notes -- goes through the steps of\nfinding a u_particular,",
    "start": "1176010",
    "end": "1185740"
  },
  {
    "text": "and actually, the u_particular\nthat it would find happens",
    "start": "1185740",
    "end": "1191600"
  },
  {
    "text": "to be -- [3, minus 3] happens\nto be the actual winner.",
    "start": "1191600",
    "end": "1199539"
  },
  {
    "text": "And therefore, the u null space\nthat that algorithm would find",
    "start": "1199540",
    "end": "1206085"
  },
  {
    "text": "-- if I went through\nall the steps, you would see that because I'm\nin this special case of b being",
    "start": "1206085",
    "end": "1215019"
  },
  {
    "text": "0 and so on, that the vector that\nit would choose -- this is the basis\nfor the null space,",
    "start": "1215020",
    "end": "1221440"
  },
  {
    "text": "but it would choose 0 of that\nbasis vector and would come up",
    "start": "1221440",
    "end": "1228620"
  },
  {
    "text": "with that answer. OK so that's what the\nalgorithm from last time",
    "start": "1228620",
    "end": "1234240"
  },
  {
    "text": "would have done to this problem. I also, over the weekend,\nthought OK, if it's all true,",
    "start": "1234240",
    "end": "1246120"
  },
  {
    "text": "I should be able to\nuse my first method.",
    "start": "1246120",
    "end": "1251460"
  },
  {
    "text": "The large alpha method\nand just find the answer to the original problem and\nlet alpha go to infinity.",
    "start": "1251460",
    "end": "1258879"
  },
  {
    "text": "Are you willing to do that? That might take a\nlittle more calculation,",
    "start": "1258880",
    "end": "1264010"
  },
  {
    "text": "but let me try that. I'm hoping, you know, that\nit approaches this answer.",
    "start": "1264010",
    "end": "1270430"
  },
  {
    "text": "This is the answer\nI'm looking for. OK so, do your mind just\n-- suppose I had to do that",
    "start": "1270430",
    "end": "1282360"
  },
  {
    "text": "minimization. Again, now I'm not using\nthe null space method, so I'm not reducing, I'm not\ngetting u_2 out of the problem.",
    "start": "1282360",
    "end": "1290610"
  },
  {
    "text": "I'm doing the minimum as it\nstands, and so what do I get?",
    "start": "1290610",
    "end": "1298730"
  },
  {
    "text": "Well, I've got two\nvariables u_1 and u_2. So I take the derivatives\nwith respect u_1 --",
    "start": "1298730",
    "end": "1305210"
  },
  {
    "text": "I'm minimizing --\neverybody, when I point, I'm pointing at that top line.",
    "start": "1305210",
    "end": "1310360"
  },
  {
    "text": "So it's 2*u_1, and\nwhat do I have here?",
    "start": "1310360",
    "end": "1316030"
  },
  {
    "text": "2*alpha u_1 minus u_2\nminus 6 equaling 0.",
    "start": "1316030",
    "end": "1323990"
  },
  {
    "text": "Is that -- did I take the\nu_1 derivative correctly? Now if I take the u_2\nderivative I get two u_2's.",
    "start": "1323990",
    "end": "1332590"
  },
  {
    "text": "And now, the chain rule is\ngoing to give me a minus sign, so it would be a minus 2*alpha\nu_1 minus u_2 minus 6 equals 0.",
    "start": "1332590",
    "end": "1342850"
  },
  {
    "text": "So those two equations\nwill determine u_1 and u_2 for a finite alpha.",
    "start": "1342850",
    "end": "1349370"
  },
  {
    "text": "And then I'll let alpha head to\ninfinity and see what happens. OK, first I'll\nmultiply by a half",
    "start": "1349370",
    "end": "1357730"
  },
  {
    "text": "and get rid of those\nuseless 2's, and then solve this equation.",
    "start": "1357730",
    "end": "1365360"
  },
  {
    "text": "OK, so what do I have here? I've got a matrix -- u_1 is\nmultiplying 1 plus alpha,",
    "start": "1365360",
    "end": "1374159"
  },
  {
    "text": "u_2 has a minus alpha. In this line, u_1 has a minus\nalpha, u_1 has a 1 minus,",
    "start": "1374160",
    "end": "1386340"
  },
  {
    "text": "minus, plus alpha, am I right? Times [u 1, u 2] equals --\nwhat's my right-hand side?",
    "start": "1386340",
    "end": "1394950"
  },
  {
    "text": "I guess the right-hand\nside has alphas in it. 6*alpha and minus\n6*alpha, I think.",
    "start": "1394950",
    "end": "1403299"
  },
  {
    "text": "OK.  two equations, two unknowns.",
    "start": "1403300",
    "end": "1409510"
  },
  {
    "text": "These are the normal equation\nfor this problem, written out explicitly.",
    "start": "1409510",
    "end": "1415610"
  },
  {
    "text": "And probably I can\nfind the solution and let alpha go to infinity.",
    "start": "1415610",
    "end": "1421750"
  },
  {
    "text": "You could say,\nwhat are you doing, Professor Strang, this\nelementary calculation?",
    "start": "1421750",
    "end": "1427870"
  },
  {
    "text": "But there is something sort\nof satisfying about seeing a small example actually work.",
    "start": "1427870",
    "end": "1433030"
  },
  {
    "text": "At least to me. OK, so how do I solve\nthose equations?",
    "start": "1433030",
    "end": "1438850"
  },
  {
    "text": "Well, good question.  Should I -- with\na 2 by 2 matrix,",
    "start": "1438850",
    "end": "1445610"
  },
  {
    "text": "can I do the unforgivable and\nactually find its inverse? I mean, it's like not allowed\nin true linear algebra",
    "start": "1445610",
    "end": "1454260"
  },
  {
    "text": "to find the inverse, but\nmaybe we could do it here. So [u 1, u 2] is going to be\nthe inverse matrix, which is --",
    "start": "1454260",
    "end": "1465410"
  },
  {
    "text": "so my little recipe for finding\ninverses is take the entries,",
    "start": "1465410",
    "end": "1471120"
  },
  {
    "text": "this entry goes up is up here,\nthat entry goes down there --",
    "start": "1471120",
    "end": "1478790"
  },
  {
    "text": "well, you couldn't\nsee the difference -- this entry stays stays in\nplace, those change sign,",
    "start": "1478790",
    "end": "1486640"
  },
  {
    "text": "and then I have to divide\nby the determinant. So what was the\ndeterminant of this?",
    "start": "1486640",
    "end": "1491680"
  },
  {
    "text": "1 plus 2*alpha plus alpha\nsquared minus alpha squared, I get 1 plus 2 alpha.",
    "start": "1491680",
    "end": "1497289"
  },
  {
    "text": "And that's the inverse matrix\nnow that's multiplying 6*alpha",
    "start": "1497290",
    "end": "1502830"
  },
  {
    "text": "and minus 6*alpha, OK. And if I can do that\nmultiplication, I have -- well,",
    "start": "1502830",
    "end": "1510100"
  },
  {
    "text": "there's this factor 1\nover 1 plus 2*alpha, and what do I have?",
    "start": "1510100",
    "end": "1515880"
  },
  {
    "text": "6*alpha, 6 alpha squared,\nminus 6 alpha squared, I think 6*alpha?",
    "start": "1515880",
    "end": "1522730"
  },
  {
    "text": "6 alpha squared, minus 6*alpha\nsquared plus -- minus 6 alpha, I think it's that,\nminus 6*alpha.",
    "start": "1522730",
    "end": "1530200"
  },
  {
    "text": "And, ready for the great moment?",
    "start": "1530200",
    "end": "1536320"
  },
  {
    "text": "Let alpha go to infinity,\nand what do I get?",
    "start": "1536320",
    "end": "1544100"
  },
  {
    "text": "As alpha goes to infinity,\nthe 1 becomes insignificant,",
    "start": "1544100",
    "end": "1552580"
  },
  {
    "text": "the alpha cancels the alpha,\nso that approaches [3, -3].",
    "start": "1552580",
    "end": "1559659"
  },
  {
    "text": "So there you see the large\nalpha method in practice. OK. And you see what -- well,\nthere's something quite",
    "start": "1559660",
    "end": "1571130"
  },
  {
    "text": "important here. Something quite important,\nand it's connected with the pseudoinverse.",
    "start": "1571130",
    "end": "1576440"
  },
  {
    "text": " The pseudoinverse -- so now,\nI want to, we got this answer.",
    "start": "1576440",
    "end": "1587350"
  },
  {
    "text": "And what I want to say is that\nthe alpha, the limiting alpha",
    "start": "1587350",
    "end": "1595299"
  },
  {
    "text": "system, has produced\nthis pseudoinverse.",
    "start": "1595300",
    "end": "1603300"
  },
  {
    "start": "1598000",
    "end": "1665000"
  },
  {
    "text": "So now I have to tell you\nabout the pseudoinverse and what it means. And basically, the essential\nthing that it means",
    "start": "1603300",
    "end": "1610210"
  },
  {
    "text": "is, the pseudoinverse\ngives the solution u which",
    "start": "1610210",
    "end": "1619840"
  },
  {
    "text": "has no null space component. That's what the\npseudoinverse is about.",
    "start": "1619840",
    "end": "1625120"
  },
  {
    "text": "I'll draw a picture to\nsay what I'm saying. But it's this fact that\nmeans that this part,",
    "start": "1625120",
    "end": "1632010"
  },
  {
    "text": "which was this number,\nis the output --",
    "start": "1632010",
    "end": "1640150"
  },
  {
    "text": "this is the pseudoinverse\nof B applied to [6, 6].",
    "start": "1640150",
    "end": "1648530"
  },
  {
    "text": "You see the point? B hasn't got an inverse. B is 1, minus 1.",
    "start": "1648530",
    "end": "1654410"
  },
  {
    "text": "It's a rectangular matrix.",
    "start": "1654410",
    "end": "1660200"
  },
  {
    "text": "And it's not invertible\nin the normal sense.",
    "start": "1660200",
    "end": "1670220"
  },
  {
    "start": "1665000",
    "end": "2595000"
  },
  {
    "text": "I can't find a\ntwo-sided inverse; a B inverse doesn't exist.",
    "start": "1670220",
    "end": "1678490"
  },
  {
    "text": "But a pseudoinverse counts. So, just to give a MATLAB -- as\nlong as I've written a MATLAB",
    "start": "1678490",
    "end": "1686020"
  },
  {
    "text": "command here, why don't I\nwrite the other MATLAB command?",
    "start": "1686020",
    "end": "1691910"
  },
  {
    "text": "u is the pseudoinverse -- you\nremember that pseudo starts",
    "start": "1691910",
    "end": "1697940"
  },
  {
    "text": "with a letter p, so P-I-N-V\n-- of B multiplying d.",
    "start": "1697940",
    "end": "1707529"
  },
  {
    "text": "That's what we\ngot automatically.",
    "start": "1707530",
    "end": "1714660"
  },
  {
    "text": "And it's what we get --\nand the reason we got the pseudoinverse.",
    "start": "1714660",
    "end": "1720660"
  },
  {
    "text": "So let me just say\nwhat was special here. What was special that\nproduced this pseudoinverse --",
    "start": "1720660",
    "end": "1726060"
  },
  {
    "text": "that I'm going to\nspeak about more -- was this choice A equal\nthe identity and b equal 0,",
    "start": "1726060",
    "end": "1734040"
  },
  {
    "text": "the fact that we just put the\nnorm of u squared there --",
    "start": "1734040",
    "end": "1739530"
  },
  {
    "text": "well, the idea is this\nproduces the pseudoinverse. ",
    "start": "1739530",
    "end": "1746030"
  },
  {
    "text": "And if you like -- so, can I\nsay a little more about this",
    "start": "1746030",
    "end": "1752110"
  },
  {
    "text": "pseudoinverse before drawing\nthe picture that shows what it's about? So I took this thing and\nlet alpha go to infinity.",
    "start": "1752110",
    "end": "1759570"
  },
  {
    "text": "OK, so I could equally well\nhave divided it by alpha, the whole -- if I divide\nthe whole thing by alpha,",
    "start": "1759570",
    "end": "1767370"
  },
  {
    "text": "that won't change the minimizer;\ncertainly the same u's will",
    "start": "1767370",
    "end": "1772500"
  },
  {
    "text": "win. And now I see one\nover alpha going to 0.",
    "start": "1772500",
    "end": "1777830"
  },
  {
    "text": "And that's where the\npseudoinverse is usually seen. We take the given problem,\nwhich does not completely",
    "start": "1777830",
    "end": "1786550"
  },
  {
    "text": "determine u_1 and\nu_2, and we throw in a small amount\nof norm u squared,",
    "start": "1786550",
    "end": "1794800"
  },
  {
    "text": "and find the minimum\nfor that, right. So yeah.",
    "start": "1794800",
    "end": "1801380"
  },
  {
    "text": " Let me say it, somehow.",
    "start": "1801380",
    "end": "1806440"
  },
  {
    "text": "I take the B transpose B\nplus the 1 over alpha I --",
    "start": "1806440",
    "end": "1815870"
  },
  {
    "text": "now alpha is still going to\ninfinity in this lecture,",
    "start": "1815870",
    "end": "1823559"
  },
  {
    "text": "so 1 over alpha, the whole\nthing is headed for 0 --",
    "start": "1823560",
    "end": "1830890"
  },
  {
    "text": "times the norm of u square. This is the u_1 squared\nplus u_2 squared.",
    "start": "1830890",
    "end": "1837720"
  },
  {
    "text": "OK. And that inverse, that quantity\ninverse approaches the -- well,",
    "start": "1837720",
    "end": "1849350"
  },
  {
    "text": "once I -- I'm not giving\nthe complete formula, but that's is what entering\nhere and it leads to --",
    "start": "1849350",
    "end": "1859020"
  },
  {
    "text": "may I see the vague word leads\ntoward the pseudoinverse B",
    "start": "1859020",
    "end": "1865830"
  },
  {
    "text": "plus. Yeah. And I'll do better with that.",
    "start": "1865830",
    "end": "1871130"
  },
  {
    "text": "OK, I want to go\non to the picture. OK, so right.",
    "start": "1871130",
    "end": "1877770"
  },
  {
    "text": "Do you know the most important\npicture of linear algebra? The whole picture what a\nmatrix is actually doing?",
    "start": "1877770",
    "end": "1884610"
  },
  {
    "text": "Here we have a great example\nto draw that picture. So here's the picture\nthat 18.06 is --",
    "start": "1884610",
    "end": "1893690"
  },
  {
    "text": "it's at the center of 18.06. For our 2 by 1 matrix.",
    "start": "1893690",
    "end": "1899059"
  },
  {
    "text": "So this is our matrix\nis B equals 1, minus 1. This is the picture\nfor that matrix.",
    "start": "1899060",
    "end": "1905810"
  },
  {
    "text": "OK, so that matrix\nhas a row space.",
    "start": "1905810",
    "end": "1911660"
  },
  {
    "text": "The row space is the\nset of all vectors that are a combinations of the rows. But there's only one row, so\nthe row space is only a line.",
    "start": "1911660",
    "end": "1920400"
  },
  {
    "text": "I guess it's probably that line. So the row space\nof B, of my matrix,",
    "start": "1920400",
    "end": "1929770"
  },
  {
    "text": "is all multiples of [1, -1].",
    "start": "1929770",
    "end": "1936180"
  },
  {
    "text": "So it's a line. Let's put the zero point in. OK, then the matrix\nalso has a null space.",
    "start": "1936180",
    "end": "1944540"
  },
  {
    "text": "The null space as the side\nof solutions to B*x equals 0.",
    "start": "1944540",
    "end": "1950420"
  },
  {
    "text": "It's a line, and in fact\nit's a perpendicular line.",
    "start": "1950420",
    "end": "1956040"
  },
  {
    "text": "So this is the null space\nof B, and it contains all --",
    "start": "1956040",
    "end": "1965830"
  },
  {
    "text": "what does it contain? All the solutions to B*u\nequals 0 which, in this case,",
    "start": "1965830",
    "end": "1971340"
  },
  {
    "text": "are all multiples of [1, 1].",
    "start": "1971340",
    "end": "1976690"
  },
  {
    "text": "And just to come back\nto my early comment, that's what the qr, the extra\nhalf of the qr algorithm",
    "start": "1976690",
    "end": "1986500"
  },
  {
    "text": "is telling us; it's giving\nus a beautiful basis for the null space.",
    "start": "1986500",
    "end": "1991919"
  },
  {
    "text": "And so the key point is that\nthe null space is always perpendicular to the row space,\nwhich of course we see here.",
    "start": "1991920",
    "end": "2002130"
  },
  {
    "text": "This z is what we had to\ncompute when there were",
    "start": "2002130",
    "end": "2008240"
  },
  {
    "text": "p components and not just one. And now, where is -- let's\nsee, what else goes into this",
    "start": "2008240",
    "end": "2018039"
  },
  {
    "text": "picture? Where are the solutions to\nmy equation B*u equal d?",
    "start": "2018040",
    "end": "2024740"
  },
  {
    "text": "So my equation was -- my\nequation was u_1 minus u_2",
    "start": "2024740",
    "end": "2030620"
  },
  {
    "text": "equal a particular number, 6,\nand where are the solutions",
    "start": "2030620",
    "end": "2036690"
  },
  {
    "text": "to u_1 minus u_2 equals 6? ",
    "start": "2036690",
    "end": "2042250"
  },
  {
    "text": "OK, so now I want to draw all\nthe -- Where are all the --",
    "start": "2042250",
    "end": "2051080"
  },
  {
    "text": "so this is the u1, u2 plane? OK, so one solution is\ntake c equal to 3. [3, -3],",
    "start": "2051080",
    "end": "2060320"
  },
  {
    "text": "the combination [3, -3],\nwhich is right there, is my particular solution, so\nu_particular, or u row space,",
    "start": "2060320",
    "end": "2069409"
  },
  {
    "text": "is [3, -3].  That solves the equation,\nand it lies in the row space.",
    "start": "2069410",
    "end": "2078530"
  },
  {
    "text": "And now, if you\nunderstand the whole point of linear equations, where\nare the rest of the solutions?",
    "start": "2078530",
    "end": "2087399"
  },
  {
    "text": "How do I draw the\nrest of the solutions? Well, to a particular solution I\nadd on any null space solution.",
    "start": "2087400",
    "end": "2095889"
  },
  {
    "text": "The null space\nsolutions go this way. So I add on -- so this is my\nwhole line of all solutions,",
    "start": "2095890",
    "end": "2106100"
  },
  {
    "text": "so this is the line\nof all solutions. ",
    "start": "2106100",
    "end": "2117960"
  },
  {
    "text": "And now, the key question is,\nwhich solution is the smallest?",
    "start": "2117960",
    "end": "2124230"
  },
  {
    "text": "When -- so this is the\nidea this pseudoinverse. When there are many solutions,\npick the smallest one,",
    "start": "2124230",
    "end": "2131260"
  },
  {
    "text": "pick the shortest one, it's\nthe most stable somehow. It's the natural one.",
    "start": "2131260",
    "end": "2136530"
  },
  {
    "text": "And which one is it? OK which -- so\nhere is the origin.",
    "start": "2136530",
    "end": "2142859"
  },
  {
    "text": "What point on that line\nis closest to the origin? What point minimizes u_1\nsquare plus u_2 square?",
    "start": "2142860",
    "end": "2151930"
  },
  {
    "text": "Everybody can see. This guy, that minimi--\nso the pseudoinverse says,",
    "start": "2151930",
    "end": "2161000"
  },
  {
    "text": "wait a minute, when you've\ngot a whole line of solutions, just tell me a good one.",
    "start": "2161000",
    "end": "2166490"
  },
  {
    "text": "Tell me the special one. And the special one is\nthe one in the row space. ",
    "start": "2166490",
    "end": "2174109"
  },
  {
    "text": "And that's the one that\nthe pseudoinverse picks. So the pseudoinverse of a matrix\n-- so the general rule is,",
    "start": "2174110",
    "end": "2183210"
  },
  {
    "text": "and part of the lecture\nwas the fact that, as alpha goes to\ninfinity in this problem,",
    "start": "2183210",
    "end": "2189549"
  },
  {
    "text": "the pseudoinverse will do it. Or I could say, just directly,\nwhat does the pseudoinverse do?",
    "start": "2189550",
    "end": "2195310"
  },
  {
    "text": "The pseudoinverse -- so B plus,\nthe pseudoinverse, chooses,",
    "start": "2195310",
    "end": "2206450"
  },
  {
    "text": "it chooses u_p, if you like,\nu_p -- that's the B plus,",
    "start": "2206450",
    "end": "2215500"
  },
  {
    "text": "that multiplies -- the solution\n-- I can't say B inverse d.",
    "start": "2215500",
    "end": "2221290"
  },
  {
    "text": "Everybody knows my\nequation is B*u equal d. So this is my\nequation, B*u equal d.",
    "start": "2221290",
    "end": "2228850"
  },
  {
    "text": "And my particular solution,\nmy pseudo-solution, my best",
    "start": "2228850",
    "end": "2234000"
  },
  {
    "text": "solution, is going\nto be B plus d, and it's going to\nbe in the row space,",
    "start": "2234000",
    "end": "2241380"
  },
  {
    "text": "because it's the\nsmallest solution.",
    "start": "2241380",
    "end": "2246930"
  },
  {
    "text": " So if you meet the\nidea of pseudoinverses,",
    "start": "2246930",
    "end": "2253640"
  },
  {
    "text": "now you know what\nit's talking about. Because we don't\nhave a true inverse,",
    "start": "2253640",
    "end": "2260059"
  },
  {
    "text": "we have a whole line of a\nsolutions, we want to pick one,",
    "start": "2260060",
    "end": "2265230"
  },
  {
    "text": "and the pseudoinverse\npicks this one. It's the one in the row\nspace, and it's the shortest,",
    "start": "2265230",
    "end": "2270579"
  },
  {
    "text": "because these are orthogonal. Because these are orthogonal\n-- u is u_p plus u_n,",
    "start": "2270580",
    "end": "2282210"
  },
  {
    "text": "and because those\nare orthogonal, the length of u\nsquared, by Pythagoras, is the length of u_p squared\nplus the length of u_n squared.",
    "start": "2282210",
    "end": "2291670"
  },
  {
    "text": "And which one is shortest? The one that has no u_n.",
    "start": "2291670",
    "end": "2298830"
  },
  {
    "text": "That orthogonal\ncomponent might as well be 0 if you want the shortest.",
    "start": "2298830",
    "end": "2306300"
  },
  {
    "text": "So all solutions have\nthis, and this is the length of the shortest one.",
    "start": "2306300",
    "end": "2312030"
  },
  {
    "text": "OK. So that tells you what\nthe pseudoinverse is. At least it tells you what\nit is for a 1 by 2 matrix.",
    "start": "2312030",
    "end": "2321550"
  },
  {
    "text": "As long as I'm trying to\nspeak about the pseudoinverse,",
    "start": "2321550",
    "end": "2328710"
  },
  {
    "text": "let me complete this thought. But you saw the idea,\nthat the thought was --",
    "start": "2328710",
    "end": "2336569"
  },
  {
    "text": "there are there two\nways to get it, again. The null space method\nthat goes for it directly,",
    "start": "2336570",
    "end": "2342940"
  },
  {
    "text": "or the big alpha method that\nwe checked actually works.",
    "start": "2342940",
    "end": "2349069"
  },
  {
    "text": "So that was the point\nof this board here. That the big alpha method, also\nproduces, in the limit as alpha",
    "start": "2349070",
    "end": "2355780"
  },
  {
    "text": "goes to infinity, u_p. And there's a little\n-- it doesn't have --",
    "start": "2355780",
    "end": "2363850"
  },
  {
    "text": "if alpha was a 1,000, I wouldn't\nget exactly the right answer, because this would be\n2,001 in the denominator.",
    "start": "2363850",
    "end": "2372319"
  },
  {
    "text": "But as 1,000 becomes a million\nand alpha goes to infinity, I guess the exact one.",
    "start": "2372320",
    "end": "2380110"
  },
  {
    "text": "OK, so here I was going\nto draw the picture, so if I draw row space -- can I\nimagine this is the row space,",
    "start": "2380110",
    "end": "2393170"
  },
  {
    "text": "whose dimension is the\nrank of the matrix.",
    "start": "2393170",
    "end": "2398579"
  },
  {
    "text": "Perpendicular to it is the\nnull space whose dimension is",
    "start": "2398580",
    "end": "2407510"
  },
  {
    "text": "the rest -- the rank, that was\nthe rank that I always call r,",
    "start": "2407510",
    "end": "2412940"
  },
  {
    "text": "then this will have the\ndimension n minus r, the number of --\nthis is exactly,",
    "start": "2412940",
    "end": "2419680"
  },
  {
    "text": "these are the two things\nthat MATLAB found here.",
    "start": "2419680",
    "end": "2427589"
  },
  {
    "text": "These were the r vectors in the\nrow space, turned into columns,",
    "start": "2427590",
    "end": "2434030"
  },
  {
    "text": "and these were the n minus r\n-- but that was only one -- vectors in the null space.",
    "start": "2434030",
    "end": "2440339"
  },
  {
    "text": "So normally, we're up in n\ndimensions, not just two.",
    "start": "2440340",
    "end": "2446690"
  },
  {
    "text": "With two dimensions, I just\nhad lines; in n dimensions I have an r-dimensional\nsubspace perpendicular",
    "start": "2446690",
    "end": "2454040"
  },
  {
    "text": "to an n minus r\ndimensional subspace. And now B. What does B do?",
    "start": "2454040",
    "end": "2461150"
  },
  {
    "text": "OK. So suppose I take a vector\nu_n in the null space",
    "start": "2461150",
    "end": "2466990"
  },
  {
    "text": "o B. Then B takes it to 0. So can I just draw\nthat with an arrow?",
    "start": "2466990",
    "end": "2473180"
  },
  {
    "text": "This'll be 0. B*u_n is 0, that's\nthe whole idea.",
    "start": "2473180",
    "end": "2480210"
  },
  {
    "text": "OK. But a vector in a row\nspace is not taken to 0.",
    "start": "2480210",
    "end": "2486809"
  },
  {
    "text": "B will take that --- dot\ndot dot dot -- into the --",
    "start": "2486810",
    "end": "2492110"
  },
  {
    "text": "I better draw here -- the\ncolumn space of B. OK.",
    "start": "2492110",
    "end": "2503740"
  },
  {
    "text": "Which I'm drawing as a subspace\nwhose dimension is also,",
    "start": "2503740",
    "end": "2509350"
  },
  {
    "text": "is this same rank r, that's\nthe great fact about matrices,",
    "start": "2509350",
    "end": "2517590"
  },
  {
    "text": "that the number of\nindependent rows equals the number of\nindependent columns. So this guy heads off\nto some B u row space.",
    "start": "2517590",
    "end": "2531550"
  },
  {
    "text": "OK. And if I've complete the\npicture, as I really should,",
    "start": "2531550",
    "end": "2536900"
  },
  {
    "text": "there's another\nsubspace over here,",
    "start": "2536900",
    "end": "2543359"
  },
  {
    "text": "which happened to be the zero\nsubspace in this example, but usually it's here.",
    "start": "2543360",
    "end": "2549970"
  },
  {
    "text": "It's the null space\nof B transpose.",
    "start": "2549970",
    "end": "2555230"
  },
  {
    "text": " In that example, B\ntranspose was [1, -1]",
    "start": "2555230",
    "end": "2565470"
  },
  {
    "text": "and its column was independent,\nso there was no null space.",
    "start": "2565470",
    "end": "2571140"
  },
  {
    "text": "So I had a simple\npicture, and that's why I wanted to draw you\na bigger picture with it.",
    "start": "2571140",
    "end": "2577270"
  },
  {
    "text": "It's dimension will be,\nwell, not n minus r,",
    "start": "2577270",
    "end": "2582950"
  },
  {
    "text": "but if B is m by\nn, let's say, then",
    "start": "2582950",
    "end": "2590849"
  },
  {
    "text": "it turns out that\nthis null space will have dimension m minus r. No problem.",
    "start": "2590850",
    "end": "2596100"
  },
  {
    "start": "2595000",
    "end": "2910000"
  },
  {
    "text": "OK. Now, in the last\nthree minutes, I want to draw the pseudoinverse.",
    "start": "2596100",
    "end": "2605740"
  },
  {
    "text": "So what I'm saying is\nthat every matrix B, every rectangular\nor square matrix B,",
    "start": "2605740",
    "end": "2612020"
  },
  {
    "text": "has these four spaces. Four fundamental subspaces\nthey've come to be called.",
    "start": "2612020",
    "end": "2617890"
  },
  {
    "text": "OK and the null space is the\nvectors which B takes to 0.",
    "start": "2617890",
    "end": "2626289"
  },
  {
    "text": "B takes any vector\ninto its column space. So now let me just draw what\nhappens to u equal u null",
    "start": "2626290",
    "end": "2635950"
  },
  {
    "text": "space plus u row space. So this was a guy\nin the row space.",
    "start": "2635950",
    "end": "2643220"
  },
  {
    "text": "If I -- B, what will B do\nwhen multiplies this vector? This vector has a part\nthat's in the null space,",
    "start": "2643220",
    "end": "2652010"
  },
  {
    "text": "and a part that's\nin the row space. But when I multiply by B,\nwhat happens to this part?",
    "start": "2652010",
    "end": "2659860"
  },
  {
    "text": "Gone. When I multiply that\nby B, where does it go? There. So this, all these guys\nfeed into that same point.",
    "start": "2659860",
    "end": "2671000"
  },
  {
    "text": "B*u is also going there.",
    "start": "2671000",
    "end": "2677400"
  },
  {
    "text": "That's why it's not invertible. Of course. That's why it's not invertible.",
    "start": "2677400",
    "end": "2682800"
  },
  {
    "text": "Here, I guess --\nyeah, here I -- sorry.",
    "start": "2682800",
    "end": "2691120"
  },
  {
    "text": "Yeah. This was the null space of\nB. I didn't write in what it was the null space of.",
    "start": "2691120",
    "end": "2696380"
  },
  {
    "text": "OK. So the matrix couldn't be\ninvertible, and actually, because it has a null space,\nand they all send those --",
    "start": "2696380",
    "end": "2704299"
  },
  {
    "text": "so what is the\npseudoinverse, finally? Finally, last moment, the\npseudoinverse is the matrix --",
    "start": "2704300",
    "end": "2713640"
  },
  {
    "text": "it's like an inverse matrix\nthat comes backwards, right? It reverses what B does.",
    "start": "2713640",
    "end": "2721650"
  },
  {
    "text": "What it cannot do is reverse\nstuff that's appeared at 0.",
    "start": "2721650",
    "end": "2728000"
  },
  {
    "text": "No matrix could send\n0 back to u_n right? If i multiply by\nthe zero vector,",
    "start": "2728000",
    "end": "2734650"
  },
  {
    "text": "I'm only going to\nget the zero vector. So the pseudoinverse has to --\nwhat it can do is it can send",
    "start": "2734650",
    "end": "2744730"
  },
  {
    "text": "this stuff back to this.",
    "start": "2744730",
    "end": "2750220"
  },
  {
    "text": "This is what the\npseudoinverse does. If I had a different color\nchalk I would use it now.",
    "start": "2750220",
    "end": "2755460"
  },
  {
    "text": "But let use two\narrows or even three. This is what the\npseudoinverse does.",
    "start": "2755460",
    "end": "2762470"
  },
  {
    "text": "It takes the column space and\nsends it back to the row space.",
    "start": "2762470",
    "end": "2768570"
  },
  {
    "text": "And because these have the same\ndimension r -- the point is,",
    "start": "2768570",
    "end": "2773710"
  },
  {
    "text": "inside B is this r by\nr matrix that's cool.",
    "start": "2773710",
    "end": "2778880"
  },
  {
    "text": "It's totally invertible. And B plus inverts it. So from row space\nto column space",
    "start": "2778880",
    "end": "2785900"
  },
  {
    "text": "goes B; from column\nspace back to row space comes the pseudoinverse, but I\ncan't call it a genuine inverse",
    "start": "2785900",
    "end": "2794420"
  },
  {
    "text": "because all this stuff,\nincluding 0, the best I can do",
    "start": "2794420",
    "end": "2800299"
  },
  {
    "text": "is send those all back to 0. There.",
    "start": "2800300",
    "end": "2805400"
  },
  {
    "text": "Now I've really wiped\nout that figure. But I'll put the\nthree arrows there",
    "start": "2805400",
    "end": "2812490"
  },
  {
    "text": "that makes it crystal clear. So this, those three\narrows are indicating",
    "start": "2812490",
    "end": "2818740"
  },
  {
    "text": "what the pseudoinverse does. It takes the column space -- Its\ncolumn space is the row space.",
    "start": "2818740",
    "end": "2828580"
  },
  {
    "text": "The column space of B plus\nis the row space of B. You know, sort of, in these\ntwo spaces, that's where",
    "start": "2828580",
    "end": "2836700"
  },
  {
    "text": "the pseudoinverse is alive. And B kills the null space and\nB plus kills the null space --",
    "start": "2836700",
    "end": "2845410"
  },
  {
    "text": "the other null space. The null space of B transpose. Anyway, that pseudoinverse is at\nthe center of the whole theory",
    "start": "2845410",
    "end": "2855690"
  },
  {
    "text": "here. You know, when I take out\nbooks from the library about regularizing\nleast squares,",
    "start": "2855690",
    "end": "2864530"
  },
  {
    "text": "they begin by explaining\nthe pseudoinverse. Which, as we've seen, arises\nas alpha goes to infinity",
    "start": "2864530",
    "end": "2875470"
  },
  {
    "text": "or 0, whichever end we're at. And what I have\nstill to do next time",
    "start": "2875470",
    "end": "2882220"
  },
  {
    "text": "is, what happens if\nI'm not prepared to go all the way to\nthe pseudoinverse,",
    "start": "2882220",
    "end": "2888820"
  },
  {
    "text": "because it blows up on me,\nand I want a finite alpha,",
    "start": "2888820",
    "end": "2897110"
  },
  {
    "text": "what should that alpha be? And that alpha will be\ndetermined by, as I said,",
    "start": "2897110",
    "end": "2906710"
  },
  {
    "text": "somehow by the noise\nlevel in the system. Right. And just to emphasize another\nexample that I'll probably",
    "start": "2906710",
    "end": "2914540"
  },
  {
    "start": "2910000",
    "end": "2956000"
  },
  {
    "text": "mention, you know,\nCT scans, MRI, all those things that\nare trying to reconstruct",
    "start": "2914540",
    "end": "2922420"
  },
  {
    "text": "the results from limited number\nof measurements, measurements that are not really enough\nto perfect reconstruction,",
    "start": "2922420",
    "end": "2931270"
  },
  {
    "text": "so this is the theory of\nimperfect reconstruction, if I can invent an\nexpression, having",
    "start": "2931270",
    "end": "2940640"
  },
  {
    "text": "met perfect reconstruction\nin the world of wavelets and signal processing,\nthis is the subject",
    "start": "2940640",
    "end": "2946480"
  },
  {
    "text": "of imperfect\nreconstruction and I'll hope to do justice\nto it on Wednesday.",
    "start": "2946480",
    "end": "2952270"
  },
  {
    "text": "OK. Thank you. ",
    "start": "2952270",
    "end": "2956523"
  }
]