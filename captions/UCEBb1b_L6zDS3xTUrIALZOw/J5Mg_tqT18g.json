[
  {
    "text": "Using more complicated series/parallel networks\nof switches, we can build devices that implement",
    "start": "849",
    "end": "6859"
  },
  {
    "text": "more complex logic functions.",
    "start": "6859",
    "end": "9930"
  },
  {
    "text": "To design a more complex logic gate, first\nfigure the series and parallel connections",
    "start": "9930",
    "end": "14370"
  },
  {
    "text": "of PFET switches that will connect the gate's\noutput to V_DD for the right combination of",
    "start": "14370",
    "end": "19880"
  },
  {
    "text": "inputs.",
    "start": "19880",
    "end": "21160"
  },
  {
    "text": "In this example, the output F will be 1 when\nA is 0 OR when both B is 0 AND C is 0.",
    "start": "21160",
    "end": "29689"
  },
  {
    "text": "The \"OR\" translates into a parallel connection,\nand the \"AND\" translates into a series connection,",
    "start": "29690",
    "end": "35770"
  },
  {
    "text": "giving the pullup circuit you see to the right.",
    "start": "35770",
    "end": "39160"
  },
  {
    "text": "To build the complementary pulldown circuit,\nsystematically walk the hierarchy of pullup",
    "start": "39160",
    "end": "44010"
  },
  {
    "text": "connections, replacing PFETs with NFETs, series\nsubcircuits with parallel subcircuits, and",
    "start": "44010",
    "end": "50250"
  },
  {
    "text": "parallel subcircuits with series subcircuits.",
    "start": "50250",
    "end": "53829"
  },
  {
    "text": "In the example shown, the pullup circuit had\na switch controlled by A in parallel with",
    "start": "53829",
    "end": "59809"
  },
  {
    "text": "a series subcircuit consisting of switches\ncontrolled by B and C.",
    "start": "59809",
    "end": "64530"
  },
  {
    "text": "The complementary pulldown circuit uses NFETs,\nwith the switch controlled by A in series",
    "start": "64530",
    "end": "71020"
  },
  {
    "text": "with a parallel subcircuit consisting of switches\ncontrolled by B and C.",
    "start": "71020",
    "end": "76350"
  },
  {
    "text": "Finally combine the pullup and pulldown circuits\nto form a fully-complementary CMOS implementation.",
    "start": "76350",
    "end": "84100"
  },
  {
    "text": "This probably went by a quickly, but with\npractice you'll get comfortable with the CMOS",
    "start": "84100",
    "end": "87909"
  },
  {
    "text": "design process.",
    "start": "87909",
    "end": "90670"
  },
  {
    "text": "Mr. Blue is asking a good question: will this\nrecipe work for any and all logic functions?",
    "start": "90670",
    "end": "97560"
  },
  {
    "text": "The answer is \"no\", let's see why.",
    "start": "97560",
    "end": "101170"
  },
  {
    "text": "Using CMOS, a single gate (a circuit with\none pullup network and one pulldown network)",
    "start": "101170",
    "end": "106938"
  },
  {
    "text": "can only implement the so-called inverting\nfunctions where rising inputs lead to falling",
    "start": "106939",
    "end": "111750"
  },
  {
    "text": "outputs and vice versa.",
    "start": "111750",
    "end": "114549"
  },
  {
    "text": "To see why, consider what happens with one\nof the gate's inputs goes from 0 to 1.",
    "start": "114549",
    "end": "120329"
  },
  {
    "text": "Any NFET switches controlled by the rising\ninput will go from off to on.",
    "start": "120329",
    "end": "125930"
  },
  {
    "text": "This may enable one or more paths between\nthe gate's output and GROUND.",
    "start": "125930",
    "end": "130300"
  },
  {
    "text": "And PFET switches controlled by the rising\ninput will from on to off.",
    "start": "130300",
    "end": "135660"
  },
  {
    "text": "This may disable one or more paths between\nthe gate's output and V_DD.",
    "start": "135660",
    "end": "141430"
  },
  {
    "text": "So if the gate's output changes as the result\nof the rising input, it must be because some",
    "start": "141430",
    "end": "146719"
  },
  {
    "text": "pulldown path was enabled and some pullup\npath was disabled.",
    "start": "146720",
    "end": "151720"
  },
  {
    "text": "In other words, any change in the output voltage\ndue to a rising input must be a falling transition",
    "start": "151720",
    "end": "157820"
  },
  {
    "text": "from 1 to 0.",
    "start": "157820",
    "end": "160950"
  },
  {
    "text": "Similar reasoning tells us that falling inputs\nmust lead to rising outputs.",
    "start": "160950",
    "end": "165590"
  },
  {
    "text": "In fact, for any non-constant CMOS gate, we\nknow that its output must be 1 when all inputs",
    "start": "165590",
    "end": "171379"
  },
  {
    "text": "are 0 (since all the NFETs are off and all\nthe PFETs are on).",
    "start": "171380",
    "end": "175650"
  },
  {
    "text": "And vice-versa: if all the inputs are 1, the\ngate's output must be 0.",
    "start": "175650",
    "end": "182689"
  },
  {
    "text": "This means that so-called positive logic can't\nbe implemented with a single CMOS gate.",
    "start": "182690",
    "end": "189140"
  },
  {
    "text": "Look at this truth table for the AND function.",
    "start": "189140",
    "end": "193090"
  },
  {
    "text": "It's value when both inputs are 0 or both\ninputs are 1 is inconsistent with our deductions",
    "start": "193090",
    "end": "198480"
  },
  {
    "text": "about the output of a CMOS gate for these\ncombinations of inputs.",
    "start": "198480",
    "end": "202980"
  },
  {
    "text": "Furthermore, we can see that when A is 1 and\nB rises from 0 to 1, the output rises instead",
    "start": "202980",
    "end": "210909"
  },
  {
    "text": "of falls.",
    "start": "210910",
    "end": "213370"
  },
  {
    "text": "Moral of the story: when you're a CMOS designer,\nyou'll get very good at implementing functionality",
    "start": "213370",
    "end": "218790"
  },
  {
    "text": "with inverting logic!",
    "start": "218790",
    "end": "219840"
  }
]