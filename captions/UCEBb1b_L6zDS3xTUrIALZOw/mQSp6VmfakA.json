[
  {
    "text": "The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6350"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6350",
    "end": "13330"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13330",
    "end": "21543"
  },
  {
    "text": "PROFESSOR: Ok then, let's\nstart with problems. And as we find concept issues,\nwe'll get to concept issues.",
    "start": "21543",
    "end": "29412"
  },
  {
    "text": "So, we talked about\nshortest-path, but we talked\nabout shortest-path in a very odd way, right?",
    "start": "29413",
    "end": "34730"
  },
  {
    "text": "I'm a coder. So for me I'm used to, all right\nI go to one of these lectures, I hear a problem, then\nI get out of the lecture",
    "start": "34730",
    "end": "41600"
  },
  {
    "text": "with an algorithm and\nthe running time, right? This time we got\nout of the lecture with no algorithm\nand no running time.",
    "start": "41600",
    "end": "47660"
  },
  {
    "text": "So, what's the point? The point is that we\nlearned some analysis tricks that we can use for any\nshortest-path algorithm.",
    "start": "47660",
    "end": "55620"
  },
  {
    "text": "And the advantage\nof knowing that-- by the way too easy to\nforget, at least until you see the first real algorithms--",
    "start": "55620",
    "end": "61820"
  },
  {
    "text": "if you know that, if you\nhave to modify an algorithm, you can still use\nthe same analysis to prove that your new\nalgorithm is going to be correct",
    "start": "61820",
    "end": "69032"
  },
  {
    "text": "and that it's going to be fast. They're really\nnice tools to have, especially if you have to\ndo that on a problem set",
    "start": "69032",
    "end": "75500"
  },
  {
    "text": "or on an interview, or who\nknows, maybe even on a quiz. We'll see if that\nhappens or not.",
    "start": "75500",
    "end": "81950"
  },
  {
    "text": "We didn't talk about any\nshortest-path algorithms. So, we're not going to assume\nshortest-path algorithms.",
    "start": "81950",
    "end": "87130"
  },
  {
    "text": "Instead we're going to use\nthem as if we had them.",
    "start": "87130",
    "end": "92530"
  },
  {
    "text": "No, wait. I don't like that. That's kind of annoying. Let's not do that. Let's do something else. We didn't talk about the\nshortest-path algorithm",
    "start": "92530",
    "end": "99320"
  },
  {
    "text": "in lecture. Let's build one right\nnow, how about that? Let's turn to the graph.",
    "start": "99320",
    "end": "105230"
  },
  {
    "text": "Vertices and edges, right? ",
    "start": "105230",
    "end": "112820"
  },
  {
    "text": "Let's see if I can\nmake this work. ",
    "start": "112820",
    "end": "137040"
  },
  {
    "text": "Suppose we have a graph. We have V vertices, E\nedges and all the edges",
    "start": "137040",
    "end": "144690"
  },
  {
    "text": "have a weight\nthat's non-negative. Sorry, let's make it positive\njust to make things easy.",
    "start": "144690",
    "end": "151290"
  },
  {
    "text": "It's smaller than W,\nso it's not too big. And they're all integers.",
    "start": "151290",
    "end": "158219"
  },
  {
    "text": "Go. ",
    "start": "158220",
    "end": "164490"
  },
  {
    "text": "There's brute-force, OK. So, brute-force would mean what? Enumerate all the paths?",
    "start": "164490",
    "end": "169510"
  },
  {
    "text": "OK. Let's go over something\na little bit better. ",
    "start": "169510",
    "end": "176200"
  },
  {
    "text": "Does anyone remember\nthe algorithm that was taught in class? The structure?",
    "start": "176200",
    "end": "182020"
  },
  {
    "text": "No. Klaus mentioned Dijkstra\nand mentioned Bellman-Ford.",
    "start": "182020",
    "end": "188340"
  },
  {
    "text": "Let's write them up here. ",
    "start": "188340",
    "end": "195110"
  },
  {
    "text": "And they gave us the\nrunning times, which we'll try to remember in a bit. But, we don't know algorithms,\nso no Dijkstra, no Bellman-Ford",
    "start": "195110",
    "end": "204160"
  },
  {
    "text": "for us. What do we know?",
    "start": "204160",
    "end": "209780"
  },
  {
    "text": "Let's start with a simpler case. What if there are\nno weights here. What if the graph\nlooked like this.",
    "start": "209780",
    "end": "215049"
  },
  {
    "start": "215050",
    "end": "222460"
  },
  {
    "text": "You're making my life hard. ",
    "start": "222460",
    "end": "229050"
  },
  {
    "text": "Like this. No costs. All the edges have\nthe same costs.",
    "start": "229050",
    "end": "234607"
  },
  {
    "text": "What would we do to\nsolve the problem?  Say we want the shortest\npath from A to E.",
    "start": "234607",
    "end": "246790"
  },
  {
    "text": "AUDIENCE: BFS. PROFESSOR: BFS. How's everyone\nfeeling about BFS?",
    "start": "246790",
    "end": "251799"
  },
  {
    "text": " What does BFS do,\nreally quickly?",
    "start": "251800",
    "end": "256898"
  },
  {
    "text": " How do you run BFS? AUDIENCE: Take a starting\nnode and then you",
    "start": "256899",
    "end": "263103"
  },
  {
    "text": "can search all it's neighbors. PROFESSOR: OK. Pick a starting node. Then, look at its neighbors?",
    "start": "263103",
    "end": "270410"
  },
  {
    "text": "AUDIENCE: And then you enter it\nthrough each of its neighbors to find its neighbors\nand so forth.",
    "start": "270410",
    "end": "276940"
  },
  {
    "text": "PROFESSOR: Sounds an\nawful lot like DFS. What's the difference\nbetween them? AUDIENCE: Well, you go\nthrough all of these neighbors",
    "start": "276940",
    "end": "283720"
  },
  {
    "text": "before you start going\nthrough any of it. I mean, you go through\nall As neighbors before you take\na neighbor and go through all of its neighbors.",
    "start": "283720",
    "end": "289700"
  },
  {
    "text": "PROFESSOR: Ok, that's\nthe difference. And it makes a huge\ndifference as we've seen in topological\nsorting last time.",
    "start": "289700",
    "end": "295490"
  },
  {
    "text": "So we have a list\nand we're going to use it to keep track of the\nnodes that we need to visit.",
    "start": "295490",
    "end": "301069"
  },
  {
    "text": "We start with A. We numerate\nall of As neighbors. And the ones that\nhaven't been seen",
    "start": "301070",
    "end": "308509"
  },
  {
    "text": "get stuck at the\nend of the list. A, B, C. A is out of the list.",
    "start": "308510",
    "end": "313689"
  },
  {
    "text": "Then we take out the first node\nfrom the list, B in this case.",
    "start": "313690",
    "end": "319230"
  },
  {
    "text": "We numerate all its neighbors,\nA, C, D, E. Out of all these,",
    "start": "319230",
    "end": "324260"
  },
  {
    "text": "we take the neighbors\nthat we haven't seen and we put them at\nthe end of the list. ",
    "start": "324260",
    "end": "332460"
  },
  {
    "text": "take out C, we look\nat its neighbors. We've seen them. We take out D, we\nlook at his neighbors. We've seen them. We take out E, we look\nat all its neighbors.",
    "start": "332460",
    "end": "339183"
  },
  {
    "text": "We've seen them. So this is BFS. BFS has this concept of levels.",
    "start": "339183",
    "end": "344830"
  },
  {
    "text": "And another way to look at\nlevels is, if you start at A, and you draw a\ncircus of radius one,",
    "start": "344830",
    "end": "352670"
  },
  {
    "text": "it's going to have all the nodes\nthat are distance 1 from 8. Right? Exactly one edge.",
    "start": "352670",
    "end": "358080"
  },
  {
    "text": "Then you draw a\ncircus of radius 2 and you get all the nodes that\nyou can reach in two edges.",
    "start": "358080",
    "end": "366550"
  },
  {
    "text": "And BFS calls these\ncircles levels. A is at level 0.",
    "start": "366550",
    "end": "371940"
  },
  {
    "text": "This is level 1. This is level 2. If you look at this list and\nyou write down the levels,",
    "start": "371940",
    "end": "378710"
  },
  {
    "text": "you have 0, 1, 1, 2, 2. If you had another\nnode out here, say F,",
    "start": "378710",
    "end": "386610"
  },
  {
    "text": "this would be\ndiscovered when we get to D. It would go all\nthe way here at the end,",
    "start": "386610",
    "end": "393200"
  },
  {
    "text": "and this is level 3. In BFS the levels are\nalways increasing.",
    "start": "393200",
    "end": "398479"
  },
  {
    "text": "If you keep track\nof parent pointers, the parent pointer of\na node, at some level,",
    "start": "398480",
    "end": "403900"
  },
  {
    "text": "will always point to a\nnode at the previous level. So, in BFS we get the shortest\npaths in terms of edge count.",
    "start": "403900",
    "end": "411770"
  },
  {
    "text": " Make sense? This is a recall, right?",
    "start": "411770",
    "end": "417240"
  },
  {
    "text": "It is not new stuff. Everyone happy with it? If it wouldn't have\ncosts, we could use",
    "start": "417240",
    "end": "423030"
  },
  {
    "text": "BFS to compute shortest paths. But, we have costs.",
    "start": "423030",
    "end": "429006"
  },
  {
    "text": "How do we deal with that? Intuitively, I'd like to\nmake BFS go across this edge",
    "start": "429006",
    "end": "435950"
  },
  {
    "text": "faster than it would\ngo across the edge. If I could do that, if this guy\ncould get stuck in the queue",
    "start": "435950",
    "end": "441930"
  },
  {
    "text": "before this guy,\nI would be happy. Intuitively, that's\nwhat I'd like to do.",
    "start": "441930",
    "end": "447090"
  },
  {
    "text": "How do we do that? AUDIENCE: Sort before adding?",
    "start": "447090",
    "end": "452812"
  },
  {
    "text": "PROFESSOR: Sort-- AUDIENCE: Sort your\nneighbors sorts. PROFESSOR: Sort? OK.",
    "start": "452812",
    "end": "459110"
  },
  {
    "text": "AUDIENCE: What if you kept\ntrack of it in a menu? Kept track of your queue\nas a priority queue.",
    "start": "459110",
    "end": "465830"
  },
  {
    "text": "PROFESSOR: Congratulations. You deserve a Turing Award. You have discovered Dijkstra. ",
    "start": "465830",
    "end": "473240"
  },
  {
    "text": "OK, let's go for\nsomething simpler. I just say this is Dijkstra. We'll talk about it\nin lecture on Tuesday.",
    "start": "473240",
    "end": "479350"
  },
  {
    "text": "Very good. AUDIENCE: Like, have\nan adjacency list and, I think using what he said.",
    "start": "479350",
    "end": "486824"
  },
  {
    "text": "Just sort it by cost-- PROFESSOR: OK, let's\nsee how this would work.",
    "start": "486824",
    "end": "492490"
  },
  {
    "text": "We have A, and we're\npulling A out of the list.",
    "start": "492490",
    "end": "498509"
  },
  {
    "text": "And we see its neighbors\nare C and B. Right? The distance to C is 2.",
    "start": "498510",
    "end": "503610"
  },
  {
    "text": "The distance to B is 4. So we start with A.\nDoes this mean that I'm",
    "start": "503610",
    "end": "509860"
  },
  {
    "text": "going to put in B before C? I'm going to put\nin C and then B? AUDIENCE: No, it doesn't really\nmatter because at the end",
    "start": "509860",
    "end": "517781"
  },
  {
    "text": "you just sort the part. I guess you could\nadd in the costs. Like associate the\ncosts of B with 4",
    "start": "517782",
    "end": "524048"
  },
  {
    "text": "and C with 2 within\nyour adjacency list? PROFESSOR: So, that's how we\nwould keep track of costs,",
    "start": "524049",
    "end": "530300"
  },
  {
    "text": "right? One way. AUDIENCE: --for the\nqueue would be A and then the value would be like\na [INAUDIBLE] B and its cost, and the [INAUDIBLE]\nC and its cost.",
    "start": "530300",
    "end": "537620"
  },
  {
    "text": "PROFESSOR: So you're saying that\nwhat I would have in this list is B with a cost of 4?",
    "start": "537620",
    "end": "545020"
  },
  {
    "text": "And C with a cost of 2? Presumably, the other\nway around, right?",
    "start": "545020",
    "end": "552610"
  },
  {
    "text": "C goes first? ",
    "start": "552610",
    "end": "560890"
  },
  {
    "text": "Like This? And then I take out C, I explore\nthe neighbors so and so forth?",
    "start": "560890",
    "end": "566220"
  },
  {
    "text": "The moment I did this I\nalready lost the battle. Because, see this path\nA, C, B, length 3?",
    "start": "566220",
    "end": "576760"
  },
  {
    "text": "If I put both of\nthem in the queue, then the parent pointers\nare going to look like this. So, I already have a\nbad path from B to A.",
    "start": "576760",
    "end": "584271"
  },
  {
    "text": "AUDIENCE: OK, well don't\nadd that node then. PROFESSOR: OK, then\nhow do we do it? AUDIENCE: I guess you\ncan talk to each of them",
    "start": "584271",
    "end": "592635"
  },
  {
    "text": "and see which one's\nlower and then, only add that one if it's the lowest. So it's more like\ndepth search then--",
    "start": "592635",
    "end": "598488"
  },
  {
    "text": "PROFESSOR: Well, you two need\nto talk together because you're getting to Dijkstra, too. You're both going to\nrediscover Dijkstra.",
    "start": "598488",
    "end": "606120"
  },
  {
    "text": "So that's great, but I'm\nlooking for something simple. This is too complicated. If you're going to\ndo Dijkstra now, then",
    "start": "606120",
    "end": "612740"
  },
  {
    "text": "what are going to do\non lecture on Tuesday? AUDIENCE: More\nDijkstra problems? PROFESSOR: Well, I think Shreeny\nwants to talk about Dijkstra,",
    "start": "612740",
    "end": "620140"
  },
  {
    "text": "so let's not get there. AUDIENCE: How do you do\nthis without doing Dijkstra? PROFESSOR: Good.",
    "start": "620140",
    "end": "625180"
  },
  {
    "text": "That's exactly what\nI want to know. [LAUGHTER] So, let me give\nyou another hint.",
    "start": "625180",
    "end": "631790"
  },
  {
    "text": "The first hint was that I\nwant to go through this edge faster than I would\ngo through this edge. The other hint is that we're\nallowed to change the graph.",
    "start": "631790",
    "end": "640744"
  },
  {
    "text": "AUDIENCE: Is this what we\ntalked about in lecture, or are we thinking\nof something else?",
    "start": "640744",
    "end": "646490"
  },
  {
    "text": "PROFESSOR: He might\nhave talked about that at the end of lecture.",
    "start": "646490",
    "end": "651610"
  },
  {
    "text": "AUDIENCE: Were you putting the\ncurrent weight for each node inside the circles?",
    "start": "651610",
    "end": "658390"
  },
  {
    "text": "PROFESSOR: No. AUDIENCE: You could\nadd it and then if you could find a better path to B?",
    "start": "658390",
    "end": "665740"
  },
  {
    "text": "With rows relative\nto A, then you could just delete that path? And B to 4? So at the beginning you\nadd them all, but then--",
    "start": "665740",
    "end": "672626"
  },
  {
    "text": "PROFESSOR: You're risking to\nhave exponential running time. AUDIENCE: (LAUGHS)",
    "start": "672626",
    "end": "678357"
  },
  {
    "text": "PROFESSOR: Those are\nall valid optimizations under some constraints. Like, this one's good if you\ndon't have too much memory,",
    "start": "678357",
    "end": "684250"
  },
  {
    "text": "but the time goes up. I want my graph to have\nedges with no costs,",
    "start": "684250",
    "end": "690810"
  },
  {
    "text": "because if I have costs,\nthis is not going to work. BFS is not going to work.",
    "start": "690810",
    "end": "696950"
  },
  {
    "text": "We can't tweak it. If you could tweak it then that\nwould be another Turing Award. AUDIENCE: So,\ncreate dummy nodes?",
    "start": "696950",
    "end": "702560"
  },
  {
    "text": "PROFESSOR: Create dummy nodes. How do I do that? AUDIENCE:Put a band of\nnode in between A and C?",
    "start": "702560",
    "end": "709779"
  },
  {
    "text": "PROFESSOR: OK. Why am I doing this? ",
    "start": "709780",
    "end": "716510"
  },
  {
    "text": "So now I have two edges\nand they have costs. AUDIENCE: One. Then you put three nodes\nin between A and B.",
    "start": "716510",
    "end": "723092"
  },
  {
    "text": "PROFESSOR: OK.  And now here I have\nfour edges, right?",
    "start": "723092",
    "end": "730980"
  },
  {
    "text": "1, 1, 1, 1. There was a 4 here before and\nthere was a 2 here before.",
    "start": "730980",
    "end": "737990"
  },
  {
    "text": "Do you guys see\nwhat's happening? So, instead of one edge\nof cost C, I have C edges.",
    "start": "737990",
    "end": "744519"
  },
  {
    "text": "So, now BFS is going to take C\nsteps to go through that edge.",
    "start": "744520",
    "end": "751010"
  },
  {
    "text": "And all the edges now\nhave the same cost. This looks like a problem\nthat BFS can solve. We know it can solve.",
    "start": "751010",
    "end": "756150"
  },
  {
    "text": "We proved that it can solve it. Well, CLRS did. We take their word\nfor granted, sort of. ",
    "start": "756150",
    "end": "765140"
  },
  {
    "text": "This works right? Is everyone happy with it? Does it make sense? AUDIENCE: So basically,\nwe get through C",
    "start": "765140",
    "end": "775160"
  },
  {
    "text": "before you'll get to\nB on the other path. PROFESSOR: Yep. This is the path of\nlength 3, so this node",
    "start": "775160",
    "end": "780230"
  },
  {
    "text": "is going to get in\nthe queue first. Then this node. Then these two nodes. And they're going to\nget in the queue from C.",
    "start": "780230",
    "end": "789970"
  },
  {
    "text": "Let's see what happened here. This is really important\nbecause this is what you're going to be doing in real life.",
    "start": "789970",
    "end": "797170"
  },
  {
    "text": "Chances of having to\nbuild a new algorithm? Kind of slim. Why don't you want to do that?",
    "start": "797170",
    "end": "802250"
  },
  {
    "text": "Say you take Dijkstra and\nyou tweak it a little bit. If you did that, you have\nto go through the analysis",
    "start": "802250",
    "end": "807910"
  },
  {
    "text": "and prove the\nrunning time again, prove the correctness again. Time-consuming, error-prone,\nit's really hard.",
    "start": "807910",
    "end": "815089"
  },
  {
    "text": "However, what happened here\nis that we have some problem that we want to solve. Say we have the raw\ninput for that problem",
    "start": "815090",
    "end": "821630"
  },
  {
    "text": "that we're trying to solve. That is this graph\nthat I draw the board.",
    "start": "821630",
    "end": "828365"
  },
  {
    "text": " And we apply some\ntransform and we",
    "start": "828365",
    "end": "834890"
  },
  {
    "text": "get an input that's\nsuitable for an algorithm that we already know. ",
    "start": "834890",
    "end": "845670"
  },
  {
    "text": "I'm going to take\na shortcut here. ",
    "start": "845670",
    "end": "853120"
  },
  {
    "text": "We apply the transform, right? We took this graph and\nwe built a new graph in. And this is hopefully easy.",
    "start": "853120",
    "end": "859740"
  },
  {
    "text": "Right? Take an edge and split it up. Put in fake nodes. This is easy. We know how to code that.",
    "start": "859740",
    "end": "866410"
  },
  {
    "text": "And now we have this algorithm\nthat you already know, and we're treating\nit like a black box. ",
    "start": "866410",
    "end": "873180"
  },
  {
    "text": "We know it's correct. We know it's running time. We're not questioning them. We're taking them straight\nfrom the textbook. They have to be right.",
    "start": "873180",
    "end": "878779"
  },
  {
    "text": "By the way, what's the\nrunning time of BFS? ",
    "start": "878780",
    "end": "888620"
  },
  {
    "text": "AUDIENCE: V plus E? PROFESSOR: Very good. ",
    "start": "888620",
    "end": "895050"
  },
  {
    "text": "Then BFS is going to\ngive us a path, right? And the path is going\nto look like this. It's going to be\nA, fake node, C, D,",
    "start": "895050",
    "end": "907700"
  },
  {
    "text": "fake node, E. If you're giving\nthis back to the guy who",
    "start": "907700",
    "end": "913112"
  },
  {
    "text": "gave you the problem,\nthey're going to be like, what are these fake nodes? I don't know\nanything about them. This doesn't make sense.",
    "start": "913112",
    "end": "919320"
  },
  {
    "text": "You need to take this\nraw output and you need to transform it again.",
    "start": "919320",
    "end": "925280"
  },
  {
    "text": "Based on what you did\nthis transformation, you have to read out the output. You have to interpret it.",
    "start": "925280",
    "end": "931110"
  },
  {
    "text": "So, this is either\ninterpret or readout. And then you get a\nnice output that's",
    "start": "931110",
    "end": "938230"
  },
  {
    "text": "the output to your\noriginal problem. ",
    "start": "938230",
    "end": "943280"
  },
  {
    "text": "This process here is the\nmost likely way in which you'll use your 6006 knowledge.",
    "start": "943280",
    "end": "950110"
  },
  {
    "text": "And this is replaced by any\nalgorithm that we taught. This is replaced by\nany real life problem",
    "start": "950110",
    "end": "955318"
  },
  {
    "text": "that you'll encounter. ",
    "start": "955318",
    "end": "961579"
  },
  {
    "text": "There's one missing step here. We know the running\ntime for this. Let's find out the running\ntime for the whole thing.",
    "start": "961580",
    "end": "968650"
  },
  {
    "text": "In order to do that,\nwe have to figure out given this original graph. Let's say that now,\nin the original graph,",
    "start": "968650",
    "end": "975180"
  },
  {
    "text": "we have V prime vertices,\nE prime edges, and W prime weights.",
    "start": "975180",
    "end": "980759"
  },
  {
    "text": "We have to convert\nthis into V plus E. We have to see when we make this\ntransform, how many vertices",
    "start": "980760",
    "end": "986800"
  },
  {
    "text": "do we get? How many edges do we get in\nterms of the original graph so that we can compute\nthe running time?",
    "start": "986800",
    "end": "991928"
  },
  {
    "text": " In the original graph, V\nprime vertices, E prime edges,",
    "start": "991928",
    "end": "998670"
  },
  {
    "text": "W prime weights. In this new graph, how many\nedges do I have, at most? ",
    "start": "998670",
    "end": "1011014"
  },
  {
    "text": "AUDIENCE: Something times E? PROFESSOR: Yep. Perfect. ",
    "start": "1011014",
    "end": "1017410"
  },
  {
    "text": "Each edge has cost\nat most W. That means we're going to split\nit up into most W edges.",
    "start": "1017410",
    "end": "1024360"
  },
  {
    "text": "How many vertices\nare we going to have? ",
    "start": "1024361",
    "end": "1034462"
  },
  {
    "text": "AUDIENCE: W prime? PROFESSOR: W prime, E prime.",
    "start": "1034462",
    "end": "1039510"
  },
  {
    "text": "AUDIENCE: Plus V prime? PROFESSOR: Plus V prime. Don't forget about\nthe original ones. They're still there.",
    "start": "1039510",
    "end": "1045640"
  },
  {
    "text": "So, total running time for\nBFS on this new graph is? ",
    "start": "1045640",
    "end": "1057778"
  },
  {
    "text": "AUDIENCE: --E prime. PROFESSOR: Put it the other way\naround, plus W prime, E prime.",
    "start": "1057778",
    "end": "1064610"
  },
  {
    "text": " This is the running\ntime that we have.",
    "start": "1064610",
    "end": "1070340"
  },
  {
    "text": "Now, does anyone remember\nDijkstra's running time and Bellam-Ford's running time? ",
    "start": "1070340",
    "end": "1078870"
  },
  {
    "text": "So what is the running\ntime for Dijkstra? AUDIENCE: V log V plus E?",
    "start": "1078870",
    "end": "1084970"
  },
  {
    "text": "PROFESSOR: Almost. AUDIENCE: V log V? PROFESSOR: Oh, wait. I think you're right.",
    "start": "1084970",
    "end": "1090850"
  },
  {
    "text": "V log V plus-- AUDIENCE: E?",
    "start": "1090850",
    "end": "1096840"
  },
  {
    "text": "PROFESSOR: I already\nnamed this from CRS? Or is this what we got? ",
    "start": "1096840",
    "end": "1103630"
  },
  {
    "text": "Entry is a fancy key to\ngive this running time. AUDIENCE: [INAUDIBLE]. PROFESSOR: You can get this, but\nyou need the really fancy data",
    "start": "1103630",
    "end": "1109470"
  },
  {
    "text": "structure for it. In real life, the running\ntime looks more like E log V.",
    "start": "1109470",
    "end": "1116980"
  },
  {
    "text": "And how about Bellam-Ford? ",
    "start": "1116980",
    "end": "1129970"
  },
  {
    "text": "So let's take this\nrunning time for Dijkstra because this is\nwhat you're going to implement in real life. And we can argue about that\nafter next lecture for now.",
    "start": "1129970",
    "end": "1137220"
  },
  {
    "text": "Take my word for it. And let's compare it\nto what we got here.",
    "start": "1137220",
    "end": "1142480"
  },
  {
    "text": "V is smaller than E\nin most same cases. Let's say that this is\nactually W prime, E prime.",
    "start": "1142480",
    "end": "1149450"
  },
  {
    "text": "If you compare this\nwith this, you'll see that, if W is smaller than\nlog V, well, smaller equal,",
    "start": "1149450",
    "end": "1158820"
  },
  {
    "text": "then this algorithm is\nnot worse than Dijkstra. It's on par with Dijkstra.",
    "start": "1158820",
    "end": "1165440"
  },
  {
    "text": "For graphs with small costs,\nwe discovered an algorithm that solves shortest paths.",
    "start": "1165440",
    "end": "1170720"
  },
  {
    "text": "You walked into this\nrecitation knowing no algorithm to solve shortest path. Now we have an algorithm.",
    "start": "1170720",
    "end": "1176440"
  },
  {
    "text": "Already in a much\nbetter position. Right? And we didn't\ninvent anything new. We don't have to\nprove correctness.",
    "start": "1176440",
    "end": "1182420"
  },
  {
    "text": "All we did was one of\nthese transformations. How's everyone feeling?",
    "start": "1182420",
    "end": "1189588"
  },
  {
    "text": "Those things makes sense? Everyone happy? ",
    "start": "1189588",
    "end": "1194770"
  },
  {
    "text": "Let's talk about another problem\nthat also uses this structure.",
    "start": "1194770",
    "end": "1200025"
  },
  {
    "start": "1200025",
    "end": "1210037"
  },
  {
    "text": "Suppose we have the\nsame graph that we had before, or actually, any\ngraph with V vertices, E edges.",
    "start": "1210037",
    "end": "1217040"
  },
  {
    "text": "Now we know how to\ncompute shortest paths. So we can assume\nthese as black boxes.",
    "start": "1217040",
    "end": "1222250"
  },
  {
    "text": " We're going to use\nthese as they are.",
    "start": "1222250",
    "end": "1229150"
  },
  {
    "text": "We have a graph with V\nvertices and E edges. ",
    "start": "1229150",
    "end": "1244640"
  },
  {
    "text": "Let me copy the\ncosts really quickly. ",
    "start": "1244640",
    "end": "1255660"
  },
  {
    "text": "Suppose this is\nthe highway system, right, like in Google Maps. And we have two brothers.",
    "start": "1255660",
    "end": "1261320"
  },
  {
    "text": "They start off from\na place and they have to end up in another place. They're going to drive together.",
    "start": "1261320",
    "end": "1267520"
  },
  {
    "text": "They want this to\nbe sort of fair. Every time they go\nbetween two cities they're going to switch\nseats so that none of them",
    "start": "1267520",
    "end": "1274950"
  },
  {
    "text": "drives too much. So say the brothers\nare Tim and Jim.",
    "start": "1274950",
    "end": "1281356"
  },
  {
    "text": "The names are wrong. This is actually a problem\nfrom last year's quiz. So, by the way, real problem.",
    "start": "1281357",
    "end": "1286700"
  },
  {
    "text": "You can pay attention now. These are two brothers.",
    "start": "1286700",
    "end": "1292700"
  },
  {
    "text": "They're going to alternate. Right? One of them is going to\ndrive across one road, then the other one, then the\nfirst one, then the second one.",
    "start": "1292700",
    "end": "1299190"
  },
  {
    "text": "So on and so forth. Now, two Tim has a much better\nsense of direction than Jim.",
    "start": "1299190",
    "end": "1305950"
  },
  {
    "text": "That's just how things are. And if you ever\ndriven long distances, the hardest thing to do\nis to get from the city",
    "start": "1305950",
    "end": "1313310"
  },
  {
    "text": "to the highway. Like, if you have to drive\nfrom here to New York. Hardest thing to do? Get out of Boston\nand onto the highway.",
    "start": "1313310",
    "end": "1319800"
  },
  {
    "text": "Then, at the end, the\nhardest thing to do? Get from the highway\ninto where you want to go through New York traffic.",
    "start": "1319800",
    "end": "1325630"
  },
  {
    "text": "Everything else? Piece of cake. We want Tim to handle\nboth of these situations.",
    "start": "1325630",
    "end": "1333055"
  },
  {
    "text": "The driving path must start\nwith Tim and must end with Tim. Otherwise, God knows,\nthey're going to crash.",
    "start": "1333055",
    "end": "1339260"
  },
  {
    "text": " First off let's convert\nthis into graph terms.",
    "start": "1339260",
    "end": "1344730"
  },
  {
    "text": "And then let's solve it.  AUDIENCE: You might convert\nwhat's already in the graph.",
    "start": "1344730",
    "end": "1351952"
  },
  {
    "text": " PROFESSOR: I have\nthis constraint that they're going to switch\nseats and that Tim has to start",
    "start": "1351952",
    "end": "1359988"
  },
  {
    "text": "and Tim has to end. How do I phrase\nthis in mathy terms? In graph terms? ",
    "start": "1359988",
    "end": "1372430"
  },
  {
    "text": "AUDIENCE: We're starting\nit where and ending where? PROFESSOR: We're given\nwhere in the graph. We're starting at S, ending at\nT. Some points in the graph.",
    "start": "1372430",
    "end": "1380420"
  },
  {
    "text": "AUDIENCE: And people have to\ndrive with it an entire edge?",
    "start": "1380420",
    "end": "1385500"
  },
  {
    "text": "PROFESSOR: Ya. AUDIENCE: So\nbasically, Jim has to--",
    "start": "1385500",
    "end": "1393029"
  },
  {
    "text": "whoever the good driver has to-- to drive on the edge\nthat's adjacent to E and S.",
    "start": "1393030",
    "end": "1399345"
  },
  {
    "text": "PROFESSOR: Yep. OK. AUDIENCE: You physically need,\nlike an odd number of edges.",
    "start": "1399345",
    "end": "1404710"
  },
  {
    "text": "PROFESSOR: Yep. So I want the shortest path\nwith an odd number of edges. Why odd number of edges?",
    "start": "1404710",
    "end": "1410490"
  },
  {
    "text": "If we look at the edges, Tim's\ngoing to take the first one. Then Jim, then Tim, then\nJim, then Tim, then Jim.",
    "start": "1410490",
    "end": "1417210"
  },
  {
    "text": "No matter how many I have\nhere, it has to end with Tim. So, I'm going to have an\nodd number of letters here,",
    "start": "1417210",
    "end": "1422710"
  },
  {
    "text": "therefore, odd number of edges. Right? So I want the shortest path\nthat has an odd number of edges.",
    "start": "1422710",
    "end": "1431730"
  },
  {
    "start": "1431730",
    "end": "1438570"
  },
  {
    "text": "And as the hint we're going\nto use that trick over there. Yes? AUDIENCE: But, the shortest\npath isn't necessarily",
    "start": "1438570",
    "end": "1445596"
  },
  {
    "text": "like the fairest, right? Like, in terms of\ndistributing driving?",
    "start": "1445596",
    "end": "1451090"
  },
  {
    "text": "PROFESSOR: One of them is\ngoing to drive one more road, such is life. Sorry, one more edge segment.",
    "start": "1451090",
    "end": "1456345"
  },
  {
    "text": " Tim's going to\ndrive three times, Jim is going to drive two times.",
    "start": "1456345",
    "end": "1461992"
  },
  {
    "text": "AUDIENCE: Right, but like,\nin terms of the weights? PROFESSOR: Oh, yeah. We don't care about that.",
    "start": "1461992",
    "end": "1467679"
  },
  {
    "text": "Jim doesn't know where\nhe's going anyways. AUDIENCE: Just a minimum, we\nhave to have like three paths, right?",
    "start": "1467680",
    "end": "1473117"
  },
  {
    "text": "We don't just want Tim\nto get out to the highway and be like, oh look our\njourney's not that far-- ",
    "start": "1473117",
    "end": "1479650"
  },
  {
    "text": "PROFESSOR: So I went to the\npath with the smallest cost. So, smallest total weight.",
    "start": "1479650",
    "end": "1485787"
  },
  {
    "text": "AUDIENCE: In theory it\ncould be length, too. Right? PROFESSOR: Well, if\nit's length, too, then it's not going to be good\nbecause they're going to crash.",
    "start": "1485787",
    "end": "1493850"
  },
  {
    "text": "AUDIENCE: Oh, I see. They have to switch every time. PROFESSOR: Tim can't drive\nfor two consecutive edges. ",
    "start": "1493850",
    "end": "1508117"
  },
  {
    "text": "AUDIENCE: You could use\nbreadth-first search and, once you get\nto the end point,",
    "start": "1508117",
    "end": "1514409"
  },
  {
    "text": "or made all paths that\nare [INAUDIBLE] and then,",
    "start": "1514410",
    "end": "1520267"
  },
  {
    "text": "of those paths,\ngo through to see which one's the lowest cost? PROFESSOR: You're\nthinking enumerate",
    "start": "1520267",
    "end": "1526380"
  },
  {
    "text": "all paths of even length? Just to make sure I got it. So this is cool because it let's\nme show something else that's",
    "start": "1526380",
    "end": "1533690"
  },
  {
    "text": "cool. So, enumerate all\npaths of even length. Something else I\nheard, enumerate",
    "start": "1533690",
    "end": "1540159"
  },
  {
    "text": "all the shortest paths. For both of these, let's\nlook at this graph. ",
    "start": "1540160",
    "end": "1553830"
  },
  {
    "text": "S, T, all the paths\nhave length 1. ",
    "start": "1553830",
    "end": "1560910"
  },
  {
    "text": "How many ways are there\nto get from S to T? ",
    "start": "1560910",
    "end": "1566010"
  },
  {
    "text": "AUDIENCE: Two to three. PROFESSOR: Two to three. Two ways to go\nacross this diamond. Two ways to go across this one.",
    "start": "1566010",
    "end": "1573080"
  },
  {
    "text": "Two ways to go across this one. Right? 2 times 2 times 2? 8.",
    "start": "1573080",
    "end": "1579270"
  },
  {
    "text": "If I add another\ndiamond, how many paths?",
    "start": "1579270",
    "end": "1585370"
  },
  {
    "text": "One more?  So the number of even\npaths, or the number",
    "start": "1585370",
    "end": "1591559"
  },
  {
    "text": "of shortest paths, the\nnumber of whatever paths I can think about is, order of?",
    "start": "1591560",
    "end": "1598380"
  },
  {
    "text": " Come on, guys. Math.",
    "start": "1598380",
    "end": "1604419"
  },
  {
    "text": "Rrrr! Go! [LAUGHTER] AUDIENCE: 2 to a\nnumber of diamonds?",
    "start": "1604420",
    "end": "1609907"
  },
  {
    "text": "PROFESSOR: Which is?  Roughly to the vertices.",
    "start": "1609907",
    "end": "1618519"
  },
  {
    "text": "Exponential in the\nnumber of vertices. Not very good, not very good. We can't do this.",
    "start": "1618520",
    "end": "1625660"
  },
  {
    "text": "So, it's better that we\ntalked about it here, then that you try\nto do it on the quiz and you have to discover\nthis on your own, right?",
    "start": "1625660",
    "end": "1631708"
  },
  {
    "text": "Good comment. AUDIENCE: Didn't understand\nwhat you meant by that lecture. Now it makes sense. PROFESSOR: That's\ncompletely different.",
    "start": "1631708",
    "end": "1637380"
  },
  {
    "text": "AUDIENCE: That wasn't the\nthing he was talking about? PROFESSOR: That's different. AUDIENCE: OK.",
    "start": "1637380",
    "end": "1642800"
  },
  {
    "text": "PROFESSOR: That's where\nrelaxation can go wrong. So if you show that if you relax\nthe edges in a random order, you can have an exponential\nnumber of steps.",
    "start": "1642800",
    "end": "1649840"
  },
  {
    "text": " This shows that there\nare an exponential number",
    "start": "1649840",
    "end": "1654980"
  },
  {
    "text": "of paths for any\ngraph, no matter how good your algorithm is.",
    "start": "1654980",
    "end": "1660160"
  },
  {
    "text": "So we're not going to be\nable to enumerate them. Let's try something else. ",
    "start": "1660160",
    "end": "1667981"
  },
  {
    "text": "AUDIENCE: You have\nanother suggestion? Just look at all the-- PROFESSOR: So,\nyou're doing this.",
    "start": "1667981",
    "end": "1673700"
  },
  {
    "text": "You're looking here. Everyone's looking here. How about this?",
    "start": "1673700",
    "end": "1678880"
  },
  {
    "text": " AUDIENCE: We should do that?",
    "start": "1678880",
    "end": "1684690"
  },
  {
    "text": "PROFESSOR: Ther's that, right? There's a transform. You need to transform\nyour graph in some way, then run the algorithm.",
    "start": "1684690",
    "end": "1690040"
  },
  {
    "text": "And then reading off the\noutputs should be easy. I claim that the hard step\nis the transform step, not",
    "start": "1690040",
    "end": "1696382"
  },
  {
    "text": "the read off step. ",
    "start": "1696382",
    "end": "1704981"
  },
  {
    "text": "Let me give you one\nmore piece of intuition. ",
    "start": "1704982",
    "end": "1710860"
  },
  {
    "text": "We're going to keep\ntrack of states, somehow. Remember Rubik's cube?",
    "start": "1710860",
    "end": "1716120"
  },
  {
    "text": "We had one vertex\nfor each state. A state representing the\nconfiguration of the cube.",
    "start": "1716120",
    "end": "1723280"
  },
  {
    "text": "Here, suppose I'm looking\nat the path from S",
    "start": "1723280",
    "end": "1728360"
  },
  {
    "text": "to D. The problem\nthat I have with this is that, if I have an algorithm\nthat tells me the shortest",
    "start": "1728360",
    "end": "1735480"
  },
  {
    "text": "path from S to D is something,\nI don't know if it's even or if it's odd.",
    "start": "1735480",
    "end": "1740820"
  },
  {
    "text": "It's not keeping track of that. It's missing some state. The state that it's\nmissing is whether the path",
    "start": "1740820",
    "end": "1746450"
  },
  {
    "text": "that I used to get here\nis even or odd length. I should do something\nto the graph to keep track of this state.",
    "start": "1746450",
    "end": "1752396"
  },
  {
    "text": " AUDIENCE: Can you BFS it once?",
    "start": "1752396",
    "end": "1757990"
  },
  {
    "text": "To plan-- You BFS once.",
    "start": "1757990",
    "end": "1763744"
  },
  {
    "text": "Then you that B and\nC are all like 108, and then you know\nthat E and D are 208?",
    "start": "1763744",
    "end": "1768980"
  },
  {
    "text": " PROFESSOR: B 208 if\nI take this path.",
    "start": "1768980",
    "end": "1776649"
  },
  {
    "text": "It might be 108, might be 208. But, this is good.",
    "start": "1776650",
    "end": "1782260"
  },
  {
    "text": "This is what you'll\ndo on a quiz, right? You come up with\nan idea and then you're going to think\nabout it for a bit.",
    "start": "1782260",
    "end": "1788470"
  },
  {
    "text": "If you get stuck, try\nto convince yourself that it's wrong. If things get too hard, discard\nand look somewhere else.",
    "start": "1788470",
    "end": "1796480"
  },
  {
    "text": "This is thought process, right? You think of something,\nbacktrack, backtrack, backtrack, and eventually you\nget to the right solution.",
    "start": "1796480",
    "end": "1802530"
  },
  {
    "start": "1802530",
    "end": "1813823"
  },
  {
    "text": "Let's go over the\nsolution for this one, and then I'll give you a hard\none that is sort of like this.",
    "start": "1813823",
    "end": "1819870"
  },
  {
    "text": "Then I'll want the solution\nfrom you for that one. I'm going to draw this\ngraph in a bigger version,",
    "start": "1819870",
    "end": "1825140"
  },
  {
    "text": "so I'll have to erase this.  So this is a cool concept.",
    "start": "1825140",
    "end": "1832650"
  },
  {
    "text": "You will be able to do\na lot of things with it. AUDIENCE: Is this one\nsolvable by Dijkstra?",
    "start": "1832650",
    "end": "1838302"
  },
  {
    "text": "PROFESSOR: Ya. AUDIENCE: Just curious. PROFESSOR: Yeah, we'll\nrun Dijkstra on it after we transform it.",
    "start": "1838302",
    "end": "1843353"
  },
  {
    "start": "1843353",
    "end": "1851570"
  },
  {
    "text": "These are big nodes! Why am I doing it this way? AUDIENCE: (LAUGHS) Is that\nlike, Seattle, Portland, San",
    "start": "1851570",
    "end": "1857580"
  },
  {
    "text": "Francisco? PROFESSOR: It's because I'm\ngoing to need room for copies. I'm going to make a copy of each\nnode to keep track of state.",
    "start": "1857580",
    "end": "1865750"
  },
  {
    "text": "AUDIENCE: Gosh. PROFESSOR: So,\ninstead of one node I'll have two nodes\nfor each node.",
    "start": "1865750",
    "end": "1870850"
  },
  {
    "text": "And I have two\nnodes because this is what lets me keep track of\nstate, odd path or even path. ",
    "start": "1870850",
    "end": "1879000"
  },
  {
    "text": "Let me erase the edges\nbecause that's not how it's going to work, actually. ",
    "start": "1879000",
    "end": "1887210"
  },
  {
    "text": "Instead of having a node A, I'm\ngoing to have a node A even.",
    "start": "1887210",
    "end": "1892899"
  },
  {
    "text": "And I'm going to\nhave a copy, A odd.",
    "start": "1892900",
    "end": "1898816"
  },
  {
    "text": "E even, I'm going to\nhave to copy, V odd.",
    "start": "1898816",
    "end": "1905196"
  },
  {
    "text": "C even, copies to C odd.",
    "start": "1905196",
    "end": "1910480"
  },
  {
    "text": "D even, make a copy to D odd.",
    "start": "1910480",
    "end": "1917299"
  },
  {
    "text": "Wait, this is E, sorry. Sorry, my bad. [QUIET TALKING]",
    "start": "1917300",
    "end": "1929110"
  },
  {
    "text": "Suppose I got to A using\nan even length path.",
    "start": "1929110",
    "end": "1935390"
  },
  {
    "text": "If I take the edge\nfrom A to B, I will get to B using an even\nlength path, or an odd length",
    "start": "1935390",
    "end": "1941670"
  },
  {
    "text": "path? AUDIENCE: Odd. PROFESSOR: So, if I get to A\nusing an even length path, then",
    "start": "1941670",
    "end": "1946950"
  },
  {
    "text": "from there I'll get to B\nusing an odd length path. Sorry, four. Using this exact road.",
    "start": "1946950",
    "end": "1955204"
  },
  {
    "text": "AUDIENCE: A really\nmessed-up graph. PROFESSOR: That's a\nnice way to name it. [WOMAN LAUGHING]",
    "start": "1955204",
    "end": "1960409"
  },
  {
    "text": "I've heard worse. If I get to A using an\nodd number of edges,",
    "start": "1960410",
    "end": "1966240"
  },
  {
    "text": "how many edges will I\nhave and I get to B? AUDIENCE: [INAUDIBLE]. ",
    "start": "1966240",
    "end": "1973160"
  },
  {
    "text": "PROFESSOR: So this edge\nbecame these edges here. ",
    "start": "1973160",
    "end": "1978670"
  },
  {
    "text": "Now let's do the\nedge between B and E. I get to be using an\neven number of edges.",
    "start": "1978670",
    "end": "1984730"
  },
  {
    "text": "I take B. Do I get to\nthe even or to the odd? AUDIENCE: Odd. ",
    "start": "1984730",
    "end": "1992010"
  },
  {
    "text": "PROFESSOR: I get to\nB using an odd path. ",
    "start": "1992010",
    "end": "1997190"
  },
  {
    "text": "What are the lengths\nof these paths? AUDIENCE: 5. ",
    "start": "1997190",
    "end": "2003323"
  },
  {
    "text": "PROFESSOR: Cool.  God, this is starting to\nlook ugly, you're right.",
    "start": "2003323",
    "end": "2008940"
  },
  {
    "text": "[LAUGHTER] Let's do A, C and stop there. A even is connected to?",
    "start": "2008940",
    "end": "2015179"
  },
  {
    "text": "AUDIENCE: Odd. PROFESSOR: C odd, by\na path the length.",
    "start": "2015180",
    "end": "2020890"
  },
  {
    "text": "And A odd is connected to\nC even by a path of length. ",
    "start": "2020890",
    "end": "2027388"
  },
  {
    "text": "Is this starting to make sense? ",
    "start": "2027388",
    "end": "2034120"
  },
  {
    "text": "So all the edges are\ngoing to look like this. AUDIENCE: So are those like\ntwo independent graphs?",
    "start": "2034120",
    "end": "2042090"
  },
  {
    "text": "PROFESSOR: Well, I have\nedges connecting them. But, I like your question. The reason this is\nugly is because I'm",
    "start": "2042090",
    "end": "2048730"
  },
  {
    "text": "looking at a 2D\nprojection of a 3D graph. If I had a holographic display,\nwhich would be a lot nicer,",
    "start": "2048730",
    "end": "2055040"
  },
  {
    "text": "then I would do something\nalong these lines. ",
    "start": "2055040",
    "end": "2061750"
  },
  {
    "text": "Two pieces of paper.  I would draw the original graph,\nand call it the even graph.",
    "start": "2061750",
    "end": "2068100"
  },
  {
    "text": "Put it here. I would draw the graph\nagain, call it the odd graph, and put it here.",
    "start": "2068100",
    "end": "2074679"
  },
  {
    "text": "So this is my 2D graph. This is my map,\nthe original map. And this is state. The third dimension is state.",
    "start": "2074679",
    "end": "2080663"
  },
  {
    "text": " When I'm at a node, and I\nused an even number of edges",
    "start": "2080663",
    "end": "2086908"
  },
  {
    "text": "to get here, I'm going\nto go take one edge and go to another node using\nan odd number of edges.",
    "start": "2086909",
    "end": "2095489"
  },
  {
    "text": "So all the edges are\ngoing to go from here to here, and from here to here. ",
    "start": "2095489",
    "end": "2102050"
  },
  {
    "text": "Does it makes more sense now? So the reason that looks\nugly is because you're seeing the graph like this.",
    "start": "2102050",
    "end": "2108580"
  },
  {
    "text": "If you could see like this,\nand maybe play with it a little bit, it\nwould make more sense. It wouldn't look as ugly.",
    "start": "2108580",
    "end": "2114570"
  },
  {
    "text": " There are two graphs, the\neven graph and the odd graph.",
    "start": "2114570",
    "end": "2120650"
  },
  {
    "text": "And the edges between them\nrepresent you doing something.",
    "start": "2120650",
    "end": "2126289"
  },
  {
    "text": "When you take the\nhighway, you transition from an even state to an odd\nstate, and from an odd state to an even state.",
    "start": "2126290",
    "end": "2132180"
  },
  {
    "text": "So that's why the edges\nare the way they are. Now let me see if\nyou guys get it.",
    "start": "2132180",
    "end": "2137720"
  },
  {
    "text": "What node do I start from? What node do I\nwant to end up in? AUDIENCE: A, and\nyou're ending up at B?",
    "start": "2137720",
    "end": "2145080"
  },
  {
    "text": "[INAUDIBLE]  PROFESSOR: OK.",
    "start": "2145080",
    "end": "2151630"
  },
  {
    "text": "AUDIENCE: Oh, there's two-- PROFESSOR: I heard\nthree answers. One of them is correct.",
    "start": "2151630",
    "end": "2157700"
  },
  {
    "text": "Do you want to vote or do you\nguys want to figure it out? Talk it out? Fight?",
    "start": "2157700",
    "end": "2163099"
  },
  {
    "text": "AUDIENCE: A even, E odd.  PROFESSOR: We start from A\neven and we end up at E odd.",
    "start": "2163100",
    "end": "2170860"
  },
  {
    "text": "Why do I started at A even? AUDIENCE: We've seen\nexactly zero cities",
    "start": "2170860",
    "end": "2175890"
  },
  {
    "text": "when we started out. PROFESSOR: Yep, so\nthe original path has length the 0, which\nhappens to be even. And we want to end up\nwith an odd length path.",
    "start": "2175890",
    "end": "2184400"
  },
  {
    "text": "So if we go from here\nto here-- see how because we have two nodes\nout of each original node,",
    "start": "2184400",
    "end": "2189800"
  },
  {
    "text": "the path is going to alternate\nbetween even and odd. And is going to keep\ntrack of the state that they didn't\nhave before, and it's",
    "start": "2189800",
    "end": "2195593"
  },
  {
    "text": "going to just do\nthe right thing. It's magic! It works!",
    "start": "2195593",
    "end": "2201463"
  },
  {
    "text": "Let's see what is the\nrunning this new algorithm. ",
    "start": "2201463",
    "end": "2206559"
  },
  {
    "text": "Say my original graph had V\nand E. How many new vertices do I have?",
    "start": "2206560",
    "end": "2212015"
  },
  {
    "text": "AUDIENCE: Two kinds. PROFESSOR: How many edges? AUDIENCE: Twice? ",
    "start": "2212016",
    "end": "2221080"
  },
  {
    "text": "PROFESSOR: Each edge is\ncopied exactly twice. Which algorithm\nam I going to use? All my weights are\npositive because they're",
    "start": "2221080",
    "end": "2226918"
  },
  {
    "text": "the time it takes\nto drive somewhere, the distance or something. So which algorithm do I use?",
    "start": "2226918",
    "end": "2232658"
  },
  {
    "text": "AUDIENCE: Breadth-first search? ",
    "start": "2232658",
    "end": "2239367"
  },
  {
    "text": "PROFESSOR: We can't use\nbreadth-first search because you have weight. So breadth-first search is not\ngoing to find the right answer.",
    "start": "2239367",
    "end": "2246170"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: Oh, you\nwant to use this thing. AUDIENCE: Yes. PROFESSOR: Well,\nso we don't have to worry about\nthat because now we",
    "start": "2246170",
    "end": "2251667"
  },
  {
    "text": "put the shortest path\nalgorithm in the black box and we have them. AUDIENCE: Oh, so we\ncan use them now. PROFESSOR: We use\nthese black boxes.",
    "start": "2251667",
    "end": "2258070"
  },
  {
    "text": "But what we need to know is\nwhen to use this black box and when is this black box. Which boxes faster, by the way?",
    "start": "2258070",
    "end": "2265420"
  },
  {
    "text": "Please, please give\nme the right answer. AUDIENCE: Dijkstra? PROFESSOR: All right! Dijkstra is faster.",
    "start": "2265420",
    "end": "2270540"
  },
  {
    "text": "[LAUGHTER] So whenever we can use\nDijkstra we will use Dijkstra. When can't we use Dijkstra?",
    "start": "2270540",
    "end": "2275608"
  },
  {
    "text": "AUDIENCE: When it's\nnegative, [INAUDIBLE]..  PROFESSOR: Negative--",
    "start": "2275608",
    "end": "2281440"
  },
  {
    "text": "AUDIENCE: Weights. PROFESSOR: Negative weights. If I have weights\ngreater or equal to 0,",
    "start": "2281440",
    "end": "2289100"
  },
  {
    "text": "I'm happy I can use Dijkstra. If I have weights that are\nsmaller than 0, well, whatever.",
    "start": "2289100",
    "end": "2295029"
  },
  {
    "text": "It's going to be slower,\nbut I can still solve it. AUDIENCE: It's like\narbitrary negative weights. PROFESSOR: Yep.",
    "start": "2295030",
    "end": "2301070"
  },
  {
    "text": "Arbitrary negative weights.  So all the edges here are\npositive, so I'm going to use--",
    "start": "2301070",
    "end": "2310214"
  },
  {
    "text": "AUDIENCE: Dijkstra. PROFESSOR: Dijkstra! Very good. So the running time\nwill be, order of--",
    "start": "2310214",
    "end": "2317625"
  },
  {
    "text": "AUDIENCE: V log V? PROFESSOR: V log V\nplus E. If you're a theory person, if you're\nin real life it's E log V.",
    "start": "2317625",
    "end": "2327869"
  },
  {
    "text": "This is exactly the running\ntime for the original graph. The transformation only\nincreased the graph size",
    "start": "2327870",
    "end": "2334710"
  },
  {
    "text": "by a constant factor. So, same running time. Pretty good, right? ",
    "start": "2334710",
    "end": "2341650"
  },
  {
    "text": "OK, let's do one more problem. Let's do the hard problem now. ",
    "start": "2341650",
    "end": "2351109"
  },
  {
    "text": "Are you guys getting ready\nfor the hard problem? ",
    "start": "2351110",
    "end": "2360477"
  },
  {
    "text": "AUDIENCE: If we hadn't\nseen this probably wouldn't have thought of it. I wouldn't even\nthink about this. PROFESSOR: Well, that's\nwhy we taught you this.",
    "start": "2360477",
    "end": "2368490"
  },
  {
    "text": "So I wanted to do two things. I wanted to show you that\ntrick, which is a cool trick, keep track of state\nby multiplying",
    "start": "2368490",
    "end": "2375740"
  },
  {
    "text": "the vertices that you have. And I wanted to go through\nsome wrong solutions and figure out why\nthey're wrong so you",
    "start": "2375740",
    "end": "2381245"
  },
  {
    "text": "can develop an intuition. Because, when you're going\nto get a new problem, you're going to\nthink of something.",
    "start": "2381245",
    "end": "2386790"
  },
  {
    "text": "Unless you're really\ngood, unless you are destined to win a\nTuring Award of some sort, the first solution\nwill probably be wrong.",
    "start": "2386790",
    "end": "2393833"
  },
  {
    "text": "Even if you're destined\nto win a Turing Award, the first thing that comes to\nmind will probably be wrong. I'm willing to bet\nDijkstra didn't think",
    "start": "2393833",
    "end": "2399337"
  },
  {
    "text": "of Dijkstra off\nthe top of his head when he heard about the problem.",
    "start": "2399337",
    "end": "2405010"
  },
  {
    "text": "What you want to do\nis get an intuition. So you think of a solution and\nit starts getting complicated,",
    "start": "2405010",
    "end": "2410619"
  },
  {
    "text": "or things start\nlooking wrong, you want to back out and\nthink of something else. The more things we can\nconsider, higher chances",
    "start": "2410620",
    "end": "2417148"
  },
  {
    "text": "that you're going to stumble\nupon the correct solution. So that's why we are building\nan intuition for bad solutions. [LAUGHTER]",
    "start": "2417148",
    "end": "2423800"
  },
  {
    "text": "I'm not just saying,\nhey, give me a solution and now I'll tell\nyou it's wrong. It's not just to embarrass\nyou or something. There's that intuition\nbuilding step.",
    "start": "2423800",
    "end": "2430252"
  },
  {
    "text": "That's really important. There's this network that\nwe keep talking about.",
    "start": "2430252",
    "end": "2436223"
  },
  {
    "text": "There's this highway\nnetwork, except this time it's a bit more complicated. ",
    "start": "2436223",
    "end": "2442480"
  },
  {
    "text": "So for each edge\nI have two things. I have a fuel cost,\nwhich is constant.",
    "start": "2442480",
    "end": "2450079"
  },
  {
    "text": "A fuel cost is a function\nof the length of the road. But now, I have these realistic\nhighways where I have traffic.",
    "start": "2450080",
    "end": "2458240"
  },
  {
    "text": "If you try to go from\nBoston to New York, 2 AM? Three hours. Rush hour?",
    "start": "2458240",
    "end": "2463849"
  },
  {
    "text": "Six hours. So we have to keep track\nof this in some way. Well we're going to split\nup the day into minutes.",
    "start": "2463850",
    "end": "2470910"
  },
  {
    "text": "Say you have 10\nminutes in a day. Can anyone tell me what\nM is, really quickly? Not a number, a\nformula, something.",
    "start": "2470910",
    "end": "2478810"
  },
  {
    "text": "AUDIENCE: What's 3,600 times 24? And that's seconds.",
    "start": "2478810",
    "end": "2484615"
  },
  {
    "text": " PROFESSOR: All right. So this is how many\nminutes in a day.",
    "start": "2484615",
    "end": "2490526"
  },
  {
    "start": "2490526",
    "end": "2496329"
  },
  {
    "text": "This is how many minutes\nwe have in a day, right? For each edge, we're going\nto have a function that's",
    "start": "2496330",
    "end": "2502609"
  },
  {
    "text": "the time cost of the edge. So it's the time cost of this\nedge, and it's going to say,",
    "start": "2502610",
    "end": "2508800"
  },
  {
    "text": "if I start at a\ncertain time, it's going to take this many\nminutes to go across the edge.",
    "start": "2508800",
    "end": "2514510"
  },
  {
    "text": "For each highway I\nknow how much time it's going to take to go\nacross it, given when I start.",
    "start": "2514510",
    "end": "2521610"
  },
  {
    "text": "And I know much fuel\nI'm going to consume. By the way, edges are\ndirected now, just",
    "start": "2521610",
    "end": "2526720"
  },
  {
    "text": "to make our life easy. This graph is going\nto be like this.",
    "start": "2526720",
    "end": "2533500"
  },
  {
    "text": "Let's see if I can\nget this right. AUDIENCE: [INAUDIBLE]. ",
    "start": "2533500",
    "end": "2539494"
  },
  {
    "text": "PROFESSOR: So the\nreal reason I'm having this is the time\nto go across the highway",
    "start": "2539495",
    "end": "2546530"
  },
  {
    "text": "might be different,\ndepending which way you go. AUDIENCE:Oh-- PROFESSOR: Getting into Boston\nin the morning versus getting",
    "start": "2546530",
    "end": "2551990"
  },
  {
    "text": "into Boston in the evening. Which one's easier? Sorry, versus getting out\nof Boston in the morning.",
    "start": "2551990",
    "end": "2557392"
  },
  {
    "text": "Intuitively, I'd say\nit's probably harder to get in in the morning because\npeople are going to work. And it's easier to get out.",
    "start": "2557392",
    "end": "2562960"
  },
  {
    "text": "But ya, I don't know either. AUDIENCE: The 95 one's a hurdle. [LAUGHTER] PROFESSOR:We have an answer.",
    "start": "2562960",
    "end": "2568887"
  },
  {
    "text": "[LAUGHTER] Our edges are going\nto be oriented. ",
    "start": "2568887",
    "end": "2576990"
  },
  {
    "text": "I want to find an itinerary\nthat satisfies two constraints. AUDIENCE: [INAUDIBLE].",
    "start": "2576990",
    "end": "2583529"
  },
  {
    "text": "PROFESSOR: Ya, that's\nnot good, right? New York and New York. [WOMAN LAUGHING]",
    "start": "2583530",
    "end": "2590180"
  },
  {
    "text": "So I want to see how fast I\ncan get to my destination. That's my top priority. If I get to New York at 5:00 PM,\nI want to get there at 5:00 PM.",
    "start": "2590180",
    "end": "2600580"
  },
  {
    "text": "I don't want to get there\nat 5:01, for example. But if I have three ways\nto get there at 5:00 PM,",
    "start": "2600580",
    "end": "2605952"
  },
  {
    "text": "I want to choose the way\nthat's the most eco-friendly. So, the least amount of fuel.",
    "start": "2605952",
    "end": "2612369"
  },
  {
    "text": "So out of all possible\nways, the fastest way? Out of all possible\nfastest ways,",
    "start": "2612370",
    "end": "2618170"
  },
  {
    "text": "the way that consumes\nthe least fuel?  Go.",
    "start": "2618170",
    "end": "2624740"
  },
  {
    "text": "You have two minutes. Maybe five. AUDIENCE: And we have\nthe same costs for the--",
    "start": "2624740",
    "end": "2632130"
  },
  {
    "text": "PROFESSOR: Each edge always\nhas the same fuel cost. But, depending on when\nyou start, going across it",
    "start": "2632130",
    "end": "2638010"
  },
  {
    "text": "is going to take a\ndifferent time, too. AUDIENCE: And we don't\nknow what those times are? PROFESSOR: They're going to\nbe different for each edge.",
    "start": "2638010",
    "end": "2645076"
  },
  {
    "text": "AUDIENCE: One guess,\ntake Dijkstra. Find the shortest\npath length and we look for all path lengths\nthat are that length.",
    "start": "2645076",
    "end": "2651872"
  },
  {
    "text": "I don't know. PROFESSOR: So we\nhave the issue that-- I might still have it. Oh no, never mind. Sorry, I erased it so it's\nnot on your mind anymore.",
    "start": "2651872",
    "end": "2659250"
  },
  {
    "text": "We have those\ndiamonds that show you that there might be an\nexponential number of paths with the same length,\nor the same distance.",
    "start": "2659250",
    "end": "2665273"
  },
  {
    "text": "AUDIENCE: And it\ndoesn't help that we know we should cut off the-- PROFESSOR: Nope. So we need to do the\nprocess that I just erased.",
    "start": "2665273",
    "end": "2672750"
  },
  {
    "text": "Transform the graph in. The thing is, now you're\nmissing state, right? This misses state.",
    "start": "2672750",
    "end": "2678220"
  },
  {
    "text": "This tells you\nhow many edges you have to get from\nsource to destination. But we're not keeping track of\nsome state that these vital.",
    "start": "2678220",
    "end": "2686290"
  },
  {
    "text": "Transform the graph to\nkeep track of state, run, say Dijkstra, and\nthen interpret the output.",
    "start": "2686290",
    "end": "2692590"
  },
  {
    "text": " What state do we need? Let's think of that.",
    "start": "2692590",
    "end": "2697610"
  },
  {
    "text": "AUDIENCE: Fuel cost, I think. PROFESSOR: Sorry? AUDIENCE: The two costs\nis the same for each edge.",
    "start": "2697610",
    "end": "2704137"
  },
  {
    "text": "It's just the time is different. To be in traffic. AUDIENCE: But once we have\nfound the fastest spot",
    "start": "2704137",
    "end": "2712369"
  },
  {
    "text": "that we wanted to see cut\ninto our fuel cost range and which one do\nwe want to take.",
    "start": "2712370",
    "end": "2720423"
  },
  {
    "text": " Thinking about the priority,\nour priority is time.",
    "start": "2720424",
    "end": "2727900"
  },
  {
    "text": "So we want to save fuels\nas a state, to check it?",
    "start": "2727900",
    "end": "2734983"
  },
  {
    "text": " PROFESSOR: The problem\nis I don't even know",
    "start": "2734983",
    "end": "2740146"
  },
  {
    "text": "if fuel costs are integers. I can't keep fuel as a state. How many copies would I have?",
    "start": "2740146",
    "end": "2745768"
  },
  {
    "text": "For each vertex how\nmany copies would I have if fuel is a state? Who knows?",
    "start": "2745768",
    "end": "2751160"
  },
  {
    "text": "So let's try something else. But, you're on the right track. Let's take a variable\nand make it state.",
    "start": "2751160",
    "end": "2756975"
  },
  {
    "text": " AUDIENCE: So for every\nvertex can you keep",
    "start": "2756975",
    "end": "2765923"
  },
  {
    "text": "track of what's the shortest\ntime it took to get there?",
    "start": "2765923",
    "end": "2775480"
  },
  {
    "text": "PROFESSOR: What's the shortest\ntime it took to get there? How would you keep\ntrack of that? Would you make\nthat state, or how",
    "start": "2775480",
    "end": "2782398"
  },
  {
    "text": "would you keep track of that?  I'm not disagreeing.",
    "start": "2782398",
    "end": "2788210"
  },
  {
    "text": "I'm trying to understand your-- AUDIENCE: So for example,\nlet's say if you have B, right?",
    "start": "2788210",
    "end": "2796292"
  },
  {
    "text": "Let's say it takes like\none hour to go from A to B.",
    "start": "2796292",
    "end": "2801380"
  },
  {
    "text": "PROFESSOR: It depends when\nyou start, by the way. How much time it takes\ndepends on when you start.",
    "start": "2801380",
    "end": "2807020"
  },
  {
    "text": "If you start at 8:00\nAM, it might be an hour. If you start at 9:00 AM\nit might be two hours.",
    "start": "2807020",
    "end": "2813980"
  },
  {
    "text": "AUDIENCE: Do you need to have\na finite number of states? PROFESSOR: It's nice\nif it's not infinite,",
    "start": "2813980",
    "end": "2819380"
  },
  {
    "text": "but it doesn't have to be\nconstant, like we had before. It can be more than\nconstant, for sure.",
    "start": "2819380",
    "end": "2825690"
  },
  {
    "text": "So what are you thinking? AUDIENCE: I want to\nuse time as a state. PROFESSOR: I like that idea.",
    "start": "2825690",
    "end": "2831380"
  },
  {
    "text": "Let's try to do it. We're going to use\ntime as a state. How many vertices am I going\nto have for each vertex?",
    "start": "2831380",
    "end": "2840069"
  },
  {
    "text": "So for each original\nvertex, how many vertices am I going to have\nin my new graph? ",
    "start": "2840070",
    "end": "2846003"
  },
  {
    "text": "AUDIENCE: Three or\nfour [INAUDIBLE].. ",
    "start": "2846003",
    "end": "2851150"
  },
  {
    "text": "AUDIENCE: The sum of all times? PROFESSOR: So if I say, hey,\nI'm at this vertex at this time,",
    "start": "2851150",
    "end": "2858010"
  },
  {
    "text": "then I'm going to\nhave M vertices for each original vertex, right? AUDIENCE: Right.",
    "start": "2858010",
    "end": "2863190"
  },
  {
    "text": "PROFESSOR: I promise that the\nresolution of time is minutes. I promise that this\nthing gives you",
    "start": "2863190",
    "end": "2868780"
  },
  {
    "text": "an integer number of minutes. AUDIENCE: Can it be\nput into days, though?",
    "start": "2868780",
    "end": "2873920"
  },
  {
    "text": " PROFESSOR: Suppose we can get\nfrom source to destination",
    "start": "2873920",
    "end": "2878930"
  },
  {
    "text": "in one day. So let's see how it\nbuilds this graph first, and then we can figure out\nthe rest of the things.",
    "start": "2878930",
    "end": "2886440"
  },
  {
    "text": "So for each node I'm going\nto make M copies of it. Suppose in my original\ngraph I had a node.",
    "start": "2886440",
    "end": "2893670"
  },
  {
    "text": "I'm going to have M\ncopies of that node. And each copy has\nthe original vertex,",
    "start": "2893670",
    "end": "2898819"
  },
  {
    "text": "and the time when I'm there. Right? There are V of these. And there are M of these.",
    "start": "2898820",
    "end": "2907570"
  },
  {
    "text": "Yes? AUDIENCE: It\ntotally makes sense. It's a great idea. PROFESSOR: Yeah, you had it!",
    "start": "2907570",
    "end": "2912809"
  },
  {
    "text": "Great idea. So far so good. [LAUGHTER] AUDIENCE: Now they\nneed to be connected to the appropriate next one.",
    "start": "2912810",
    "end": "2918180"
  },
  {
    "text": "PROFESSOR: Let's\nhear how we do that. Suppose we have an\nedge from U to V.",
    "start": "2918180",
    "end": "2928369"
  },
  {
    "text": "How are going to connect this? How are we going\nto transform this? How many edges are going\nto make from that edge?",
    "start": "2928370",
    "end": "2934850"
  },
  {
    "start": "2934850",
    "end": "2941244"
  },
  {
    "text": "AUDIENCE: Do you have to do\nit from every start time? I guess. So you'd write M edges.",
    "start": "2941244",
    "end": "2948490"
  },
  {
    "text": "PROFESSOR: M edges. From U and a start\ntime to V and what?",
    "start": "2948490",
    "end": "2956216"
  },
  {
    "text": "AUDIENCE:T plus T C of T. PROFESSOR: T plus T C of\ngoing through that edge.",
    "start": "2956216",
    "end": "2962880"
  },
  {
    "text": "Right? AUDIENCE: Right. PROFESSOR: T C are going\nfrom U to V at the stop. ",
    "start": "2962880",
    "end": "2972640"
  },
  {
    "text": "Ya, like this. So you start from a time. So the edge points from\nthe time that you start up",
    "start": "2972640",
    "end": "2979000"
  },
  {
    "text": "until the time when\nyou'd be able to finish. So, up until the time where\nyou'd be off the highway",
    "start": "2979000",
    "end": "2985800"
  },
  {
    "text": "and die in the next city. And we need one\nmore type of edges. There's one more tiny trick.",
    "start": "2985800",
    "end": "2991890"
  },
  {
    "text": "If I'm somewhere in\nMassachusetts, and I know that it's really bad now. I prefer to wait out for a\nfew minutes, go to a bar,",
    "start": "2991890",
    "end": "2999098"
  },
  {
    "text": "and then come and drive-- OK not to a bar-- go to a\nfood place, then drive later. [LAUGHTER]",
    "start": "2999098",
    "end": "3004849"
  },
  {
    "text": "AUDIENCE: --vertical\nedges that-- PROFESSOR: --represent waiting. AUDIENCE: You have to add\none minute between them.",
    "start": "3004850",
    "end": "3010990"
  },
  {
    "text": "PROFESSOR: How do I do that? AUDIENCE: From U to\nU with a cost of 1.",
    "start": "3010990",
    "end": "3018000"
  },
  {
    "text": " PROFESSOR: So from\nU to U at 20 plus 1.",
    "start": "3018000",
    "end": "3026126"
  },
  {
    "text": "I like this better. What's the fuel cost of this?",
    "start": "3026126",
    "end": "3031730"
  },
  {
    "text": "AUDIENCE: Zero. PROFESSOR: So here this\nedge had fuel cost at C, Then the new edge\nis going have fuel",
    "start": "3031730",
    "end": "3037510"
  },
  {
    "text": "cost for the ones on the top. AUDIENCE: Is it\nproportional to minutes?",
    "start": "3037510",
    "end": "3043180"
  },
  {
    "text": "Speed? PROFESSOR: It's the same. F C stays the same, no matter\nwhen we go through the highway",
    "start": "3043180",
    "end": "3049859"
  },
  {
    "text": "if C is a function of\nthe distance of the road. This edge becomes M\nedges with the same cost.",
    "start": "3049860",
    "end": "3058380"
  },
  {
    "text": "And then I have to have\nvertical waiting edges. ",
    "start": "3058380",
    "end": "3063839"
  },
  {
    "text": "If we had the\nholographic display that I talked about earlier\nyou'd have M sheets of paper",
    "start": "3063840",
    "end": "3069140"
  },
  {
    "text": "this time. You start at time\n0 at your source and then your edges go represent\nthe moves that you can make.",
    "start": "3069140",
    "end": "3077350"
  },
  {
    "text": "So, you could start\nin Boston at 8:00 AM. And you could take\nI-90 and end up in--",
    "start": "3077350",
    "end": "3083920"
  },
  {
    "text": "I don't know\nMassachusetts city names-- Albuquerque at 9:00 AM?",
    "start": "3083920",
    "end": "3089420"
  },
  {
    "text": "[LAUGHTER] AUDIENCE: Amherst. PROFESSOR: Amherst, OK. So you started in\nBoston 8:00 AM, you end up at Amherst\nat 9, 10:00 AM.",
    "start": "3089420",
    "end": "3097240"
  },
  {
    "text": "Right? So this is one edge. The edges represent\nthe moves that you could make in this graph.",
    "start": "3097240",
    "end": "3102810"
  },
  {
    "text": " Does this makes? AUDIENCE: I don't understand\nthe two last lines there.",
    "start": "3102810",
    "end": "3111475"
  },
  {
    "text": "I don't really get what we\nwere doing there [INAUDIBLE].. PROFESSOR: Let's see what\nwe're trying to do here.",
    "start": "3111475",
    "end": "3116510"
  },
  {
    "text": "We're saying that, if I'm a node\nU, and I'm starting at time T. AUDIENCE: Ya, so that's\nlike one piece of paper.",
    "start": "3116510",
    "end": "3123770"
  },
  {
    "text": "PROFESSOR: Yep. I'm going to go on\nthe road, right? I'm going to go on\nthe road from U to V.",
    "start": "3123770",
    "end": "3129950"
  },
  {
    "text": "So where am I going to arrive? AUDIENCE: There at V\nat some time plus that. PROFESSOR: Now we have\nto figure out what time",
    "start": "3129950",
    "end": "3136547"
  },
  {
    "text": "we're going to arrive at. The time that we arrive\nat is the original time, plus whatever time I'm\ngoing to spend on the road.",
    "start": "3136547",
    "end": "3143520"
  },
  {
    "text": "What's the time I\nspend on the road? It's not constant because\nI have that timetable that includes traffic.",
    "start": "3143520",
    "end": "3149819"
  },
  {
    "text": "So this is what this tells me. This is what this big,\nugly formula is all about. It says the timetable for\nthis edge assuming you start",
    "start": "3149820",
    "end": "3157839"
  },
  {
    "text": "at time T. That's all there is. Nothing else. AUDIENCE: What's the\nsecond line, then? PROFESSOR: So the\nsecond line is waiting.",
    "start": "3157840",
    "end": "3164490"
  },
  {
    "text": "So if I don't have this\nthen I'm constrained in that I have to\ndrive all the time.",
    "start": "3164490",
    "end": "3170760"
  },
  {
    "text": "I go from here to\nAmherst, then I have to go from Amherst to\nsomewhere else, and keep going, keep going, keep going.",
    "start": "3170760",
    "end": "3176178"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: Yeah, this is\nwhere I wait for a minute.",
    "start": "3176178",
    "end": "3181850"
  },
  {
    "text": "If I wait for a minute,\nI don't consume any fuel and I go from time\nT to time T plus 1.",
    "start": "3181850",
    "end": "3187048"
  },
  {
    "text": "AUDIENCE: OK. PROFESSOR: Does this make sense? Do we want to analyze the\nrunning time for this really",
    "start": "3187049",
    "end": "3193110"
  },
  {
    "text": "quickly? AUDIENCE: Sure. PROFESSOR: How many edges? ",
    "start": "3193110",
    "end": "3199325"
  },
  {
    "text": "AUDIENCE: E times M? PROFESSOR: OK, let's do vertices\nbecause vertices is quick.",
    "start": "3199325",
    "end": "3204401"
  },
  {
    "text": "AUDIENCE: V times M? PROFESSOR: So, edges is,\nyou're saying, V times M?",
    "start": "3204401",
    "end": "3211430"
  },
  {
    "text": "Almost. AUDIENCE: Pause there. PROFESSOR: So there's\na pause, right? How many pause edges do I have?",
    "start": "3211430",
    "end": "3218440"
  },
  {
    "text": "AUDIENCE: V-- M.",
    "start": "3218440",
    "end": "3225152"
  },
  {
    "text": "PROFESSOR: This is\nhow many vertices? This is how many edges? Plug this into which algorithm,\nDijkstra or Bellam-Ford?",
    "start": "3225153",
    "end": "3232255"
  },
  {
    "text": "AUDIENCE: Dijkstra. PROFESSOR: Done! Yay, we solved the hard problem.",
    "start": "3232255",
    "end": "3238501"
  },
  {
    "text": "AUDIENCE: How do you ensure\nthat the time's right? Do you have to go through\nand see if there's a path? PROFESSOR: How do we\nread the solution?",
    "start": "3238501",
    "end": "3244930"
  },
  {
    "text": "That's good. That's a good question. I like that. So, we're going to have M\nvertices of the destination.",
    "start": "3244930",
    "end": "3251100"
  },
  {
    "text": "Alright? Let's see how they're\ngoing to look like. First off, if you\nstart at 8:00 AM, maybe you're not going to make\nit to New York at 8:01 AM.",
    "start": "3251100",
    "end": "3259810"
  },
  {
    "text": "The vertex that says\nNew York at 8:01 AM is probably going to have\na cost of plus infinity.",
    "start": "3259810",
    "end": "3266180"
  },
  {
    "text": "First off the really\nearly times are going to have a cost\nof plus infinity. Not going to happen. Then, at some point, the cost\nis going to become finite.",
    "start": "3266180",
    "end": "3274310"
  },
  {
    "text": "That's the fastest way you can\nget from Boston to New York. ",
    "start": "3274310",
    "end": "3279740"
  },
  {
    "text": "using the least amount of fuel. So the cost that you have there\nis the answer to our problem.",
    "start": "3279740",
    "end": "3285490"
  },
  {
    "text": "AUDIENCE: So basically,\nwhen you get there you have to enter it through all M. PROFESSOR: All M vertices that\ncorrespond to the destination.",
    "start": "3285490",
    "end": "3292210"
  },
  {
    "text": " The costs are going\nto look like this.",
    "start": "3292210",
    "end": "3298500"
  },
  {
    "text": "They're going to be infinity,\ninfinity, infinity all the way up, until some point\nin here you're going to have your final answer.",
    "start": "3298500",
    "end": "3306110"
  },
  {
    "text": "The cost to get\nthere the fastest-- see, you can get\nthere at 3:00 PM. This is how much fuel you have\nto spend to get there at 3;00",
    "start": "3306110",
    "end": "3313849"
  },
  {
    "text": "PM. But, if you're willing\nto wait until 3:01 PM, you're going to have the fastest\ncost you can have for that.",
    "start": "3313850",
    "end": "3321500"
  },
  {
    "text": "If you're willing\nto wait until 3:02, you're going to have the\nanswer for that, too.",
    "start": "3321500",
    "end": "3326650"
  },
  {
    "text": "So here you're going to get\nthe whole trade-off curve of, if you're willing to\nwait for a few minutes, or if you're willing to\nwait for an extra hour, how",
    "start": "3326650",
    "end": "3333508"
  },
  {
    "text": "much fuel you can save. ",
    "start": "3333508",
    "end": "3338810"
  },
  {
    "text": "So, I think that's cool\nabout your questions. You had a question, too.",
    "start": "3338810",
    "end": "3344600"
  },
  {
    "text": "AUDIENCE: Why did\nwe have V times M in the E prime expression? ",
    "start": "3344600",
    "end": "3350972"
  },
  {
    "text": "PROFESSOR: First off, we\nhave E times M, right? We're good with these. These are the waiting edges.",
    "start": "3350972",
    "end": "3356710"
  },
  {
    "text": "AUDIENCE: So we are\nwaiting after every minute? PROFESSOR: The waiting\nedges are vertex time",
    "start": "3356710",
    "end": "3364369"
  },
  {
    "text": "to vertex time plus 1. How many vertices? V. How many times?",
    "start": "3364370",
    "end": "3369913"
  },
  {
    "text": "AUDIENCE: M. PROFESSOR: So it's V times\nM. Because at each minute,",
    "start": "3369913",
    "end": "3375787"
  },
  {
    "text": "you can be at a certain city\nand decide to wait one more minute to stay the same city. ",
    "start": "3375787",
    "end": "3383130"
  },
  {
    "text": "OK Does this make sense? Thank you guys! I'm really happy we\nsolved the hard problem!",
    "start": "3383130",
    "end": "3388800"
  },
  {
    "text": "That's good.",
    "start": "3388800",
    "end": "3390520"
  }
]