[
  {
    "start": "0",
    "end": "118000"
  },
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING] ",
    "start": "0",
    "end": "24960"
  },
  {
    "text": "MICHAEL SIPSER:\nGreetings, everybody. Welcome to our last\nlecture of the term.",
    "start": "24960",
    "end": "31740"
  },
  {
    "text": "We have survived a\nsemester online in 18.404",
    "start": "31740",
    "end": "38620"
  },
  {
    "text": "and we are going to\nconclude our last topic",
    "start": "38620",
    "end": "45160"
  },
  {
    "text": "today, which is interactive\nproof systems that we started last time. And with the big--\nwell, the big theorem",
    "start": "45160",
    "end": "59140"
  },
  {
    "text": "of interactive proof systems\nis that IP equals PSPACE.",
    "start": "59140",
    "end": "64209"
  },
  {
    "text": "And we're going to\ngive the main idea for that in a slightly\nweaker theorem, as we'll see.",
    "start": "64209",
    "end": "73280"
  },
  {
    "text": "So why don't we jump in? So we have been doing\ninteractive proofs.",
    "start": "73280",
    "end": "79510"
  },
  {
    "text": "We gave an example of showing\nthat the graph isomorphism",
    "start": "79510",
    "end": "84610"
  },
  {
    "text": "problem, the\ncomplement of that is an IP, as I hope you remember. We had that interaction with\nthe approver and a verifier.",
    "start": "84610",
    "end": "93820"
  },
  {
    "text": "We're going to go\nthrough it quickly. Not that protocol,\nbut just the setup. And then we're going to finish\nby showing that this number SAT",
    "start": "93820",
    "end": "104590"
  },
  {
    "text": "problem is an IP\nand should conclude that coNP is a subset of IP.",
    "start": "104590",
    "end": "111080"
  },
  {
    "text": "All right, so let's go for it. Yes.",
    "start": "111080",
    "end": "116550"
  },
  {
    "text": " So just remember,\ninteractive proof systems,",
    "start": "116550",
    "end": "123360"
  },
  {
    "start": "118000",
    "end": "325000"
  },
  {
    "text": "there are these two parties,\nthe prover and the verifier. The prover has unlimited\ncomputational ability.",
    "start": "123360",
    "end": "129959"
  },
  {
    "text": "I kind of model that as an army\nof students perhaps who can--",
    "start": "129960",
    "end": "143400"
  },
  {
    "text": "where we don't-- they\ncan work all night. They can use\ncomputational resources.",
    "start": "143400",
    "end": "150480"
  },
  {
    "text": "And the prover,\nhowever, we're not going to measure the\ncomputational power",
    "start": "150480",
    "end": "156090"
  },
  {
    "text": "of the prover. That's unlimited. And so the prover can do\nthings like find certificates.",
    "start": "156090",
    "end": "163110"
  },
  {
    "text": "It can test whether\nthings are satisfiable. It can factor numbers.",
    "start": "163110",
    "end": "169410"
  },
  {
    "text": "We don't care. It can do whatever\nwe'd like and there is no charge for the prover's\ncomputational demands.",
    "start": "169410",
    "end": "177069"
  },
  {
    "text": "OK. So the setup we had was the\nprover and the verifier. Both see the input. The exchange of polynomial\nnumber of messages.",
    "start": "177070",
    "end": "184450"
  },
  {
    "text": "And then the verifier\naccepts or rejects. ",
    "start": "184450",
    "end": "189510"
  },
  {
    "text": "And we had this notion\nof the probability",
    "start": "189510",
    "end": "196530"
  },
  {
    "text": "that the verifier ends\nup accepting when paired with a particular prover.",
    "start": "196530",
    "end": "202440"
  },
  {
    "text": "And what we want is that\nfor strings in a language, that probability should\nbe high for some prover.",
    "start": "202440",
    "end": "209790"
  },
  {
    "text": "And for strings not\nin the language, that probability should be low\nno matter what the prover does.",
    "start": "209790",
    "end": "215280"
  },
  {
    "text": "So there's nothing\nthe prover can do. And the way it kind of\nsuggests that at any prover.",
    "start": "215280",
    "end": "221160"
  },
  {
    "text": "But whatever the prover's\nstrategy cannot make",
    "start": "221160",
    "end": "228410"
  },
  {
    "text": "the verifier accept\nwith high probability. Just doesn't have enough\ninformation or it doesn't-- it's just not able to\nmake the verifier accept",
    "start": "228410",
    "end": "235519"
  },
  {
    "text": "with high probability.  You might think of\nthe prover as trying",
    "start": "235520",
    "end": "241880"
  },
  {
    "text": "to make the verifier accept. So the P tilde is\na crooked prover. I don't think that went down\nvery well with everybody.",
    "start": "241880",
    "end": "249980"
  },
  {
    "text": "So I have it here. Another way of looking\nat it, maybe it looks a little bit\nmore like NP here where",
    "start": "249980",
    "end": "260940"
  },
  {
    "text": "IP is the collection of\nlanguages where there's a verifier, just like we had. You can think of NP as\nhaving a verifier which",
    "start": "260940",
    "end": "268260"
  },
  {
    "text": "can check certificates. Here the prover is going\nto be like the certificate so that for strings\nin the language,",
    "start": "268260",
    "end": "274860"
  },
  {
    "text": "there's a prover which can\ninteract with the verifier and make it accept\na high probability.",
    "start": "274860",
    "end": "280260"
  },
  {
    "text": "And you're not in\nthe language, there is no prover, which can\ninteract with the verifier",
    "start": "280260",
    "end": "285270"
  },
  {
    "text": "and make the verifier\naccept with even more than low probability.",
    "start": "285270",
    "end": "290400"
  },
  {
    "text": "What's important is this\ngap, just like with BPP, between acceptance or rejection.",
    "start": "290400",
    "end": "297060"
  },
  {
    "text": "And that gap is\nthere because we want to be able to use the\namplification lemma.",
    "start": "297060",
    "end": "303510"
  },
  {
    "text": "And if there was\nno gap, then you wouldn't be able\nto amplify and make the probability of acceptance\nextremely high when you want",
    "start": "303510",
    "end": "311190"
  },
  {
    "text": "it to be in the language,\nwhen you're in the language, and extremely low when\nyou're not in the language. ",
    "start": "311190",
    "end": "318280"
  },
  {
    "text": "OK. So I hope that refreshes your\nmemory as to how that works.",
    "start": "318280",
    "end": "323560"
  },
  {
    "text": "We're going to walk\nourselves through the-- ",
    "start": "323560",
    "end": "332940"
  },
  {
    "start": "325000",
    "end": "513000"
  },
  {
    "text": "well, through what\nwe did last time. But let's set the\nstage for that.",
    "start": "332940",
    "end": "340660"
  },
  {
    "text": "So the surprising\ntheorem, as I mentioned, is that IP equals PSPACE.",
    "start": "340660",
    "end": "346110"
  },
  {
    "text": "One direction of that is a\nfairly standard simulation.",
    "start": "346110",
    "end": "351180"
  },
  {
    "text": "With PSPACE, you can\nbasically work your way through the tree\nof possibilities",
    "start": "351180",
    "end": "356490"
  },
  {
    "text": "for an interactive\nproof protocol. And you can calculate\nthe probability",
    "start": "356490",
    "end": "362340"
  },
  {
    "text": "that the verifier\nwould end up accepting if you had the best possible\nprover that would try",
    "start": "362340",
    "end": "368010"
  },
  {
    "text": "to make the verifier accept. And you can just do\nthat calculation. It's in the book. You're not going to be\nresponsible for knowing that,",
    "start": "368010",
    "end": "374789"
  },
  {
    "text": "actually. We haven't covered\nit in lecture. But it's not very hard. A little technical, I suppose.",
    "start": "374790",
    "end": "381778"
  },
  {
    "text": "The other direction is\nthe interesting one, and that's the\ndirection we're going to be moving toward today. We won't quite get there,\nbut the way it works",
    "start": "381778",
    "end": "389840"
  },
  {
    "text": "is that to show that\neverything in PSPACE, which is kind of amazing, is\ncontained with an IP.",
    "start": "389840",
    "end": "397189"
  },
  {
    "text": "So everything in PSPACE can be\ndone with an interactive proof system.",
    "start": "397190",
    "end": "403009"
  },
  {
    "text": "And the way that\nis done is by using a PSPACE complete problem, TQBF,\nand showing that that problem",
    "start": "403010",
    "end": "409220"
  },
  {
    "text": "itself is an IP. But we're not going\nto prove that. That would be sort\nof the next thing",
    "start": "409220",
    "end": "415640"
  },
  {
    "text": "we would prove if we had\na little bit more time. But we're going to be satisfied\nwith just the somewhat",
    "start": "415640",
    "end": "422120"
  },
  {
    "text": "weaker but very similar\nstatement that coNP",
    "start": "422120",
    "end": "429350"
  },
  {
    "text": "is contained in IP here. Again, still very\nsurprising, because you",
    "start": "429350",
    "end": "435562"
  },
  {
    "text": "have to be able to show, for\nexample, that a formula is not satisfiable with a prover. How can a prover convince a\nverifier that a formula is not",
    "start": "435562",
    "end": "442970"
  },
  {
    "text": "satisfiable? Showing that it is\nsatisfiable, you just give the certificate, which\nis the satisfying assignment.",
    "start": "442970",
    "end": "450115"
  },
  {
    "text": "But how do you show\nsomething's not satisfiable? It's unexpected. And the proof of that is\npretty much similar, slightly",
    "start": "450115",
    "end": "458160"
  },
  {
    "text": "is one kind of\ntechnical point which we don't have to get into.",
    "start": "458160",
    "end": "463910"
  },
  {
    "text": "So it's slightly easier but\nvery much in the same spirit.",
    "start": "463910",
    "end": "469640"
  },
  {
    "text": "So remember this\nnumber set problem is you're given a\nformula and a number,",
    "start": "469640",
    "end": "476169"
  },
  {
    "text": "and that number\nis supposed to be exactly the number of satisfying\nassignments of the formula.",
    "start": "476170",
    "end": "482510"
  },
  {
    "text": "So in particular, a formula's\nunsatisfiable, then it would be paired\nwith the number 0.",
    "start": "482510",
    "end": "487810"
  },
  {
    "text": "And that's why the number\nset problem is coNP-hard,",
    "start": "487810",
    "end": "493120"
  },
  {
    "text": "because you can easily reduce\nthe unsatisfiability to number set.",
    "start": "493120",
    "end": "498760"
  },
  {
    "text": "An unsatisfiability\nis coNP complete. OK, so remember we introduced\nthis notation last time.",
    "start": "498760",
    "end": "506680"
  },
  {
    "text": "This is going to be critical\nfor understanding this proof. So let's go through\nit once again. ",
    "start": "506680",
    "end": "514030"
  },
  {
    "start": "513000",
    "end": "908000"
  },
  {
    "text": "So if you have some\nformula, what I'd like to do is preset some of the\nvariables of that formula.",
    "start": "514030",
    "end": "521760"
  },
  {
    "text": "So that's going to be a formula\non m variables x1 to xm. And I'd like to preset the first\ni variables to zeros or ones",
    "start": "521760",
    "end": "534690"
  },
  {
    "text": "as I wish. So I'm going to indicate\nthat by phi with 0 means",
    "start": "534690",
    "end": "542730"
  },
  {
    "text": "I'm setting x1 to 0 and\nthe rest of the variables remain variables.",
    "start": "542730",
    "end": "548770"
  },
  {
    "text": "And more generally, phi\nof i values a1 to ai,",
    "start": "548770",
    "end": "555700"
  },
  {
    "text": "which to start\noff with are going to be just zeros and\nones, just Boolean values. That's going to be the\nformula with those first x1",
    "start": "555700",
    "end": "564880"
  },
  {
    "text": "to set to a1 dot, dot, dot\nxi set to ai for those i",
    "start": "564880",
    "end": "572840"
  },
  {
    "text": "constants, which\nwere zeros and ones. I'm going to call those\npresets, because we're",
    "start": "572840",
    "end": "579880"
  },
  {
    "text": "presetting some of the\nvariables in the formula. And the rest of\nthe variables we're",
    "start": "579880",
    "end": "586180"
  },
  {
    "text": "going to leave as variables. So we get a new formula\non fewer variables by doing this\npre-setting process.",
    "start": "586180",
    "end": "592345"
  },
  {
    "text": " And we're going to get to\ndo the same thing in terms",
    "start": "592345",
    "end": "597790"
  },
  {
    "text": "of counting the number of\nsatisfying assignments. So remember the notation\nnumber phi is the number",
    "start": "597790",
    "end": "606770"
  },
  {
    "text": "of satisfying assignments. Number phi with a preset\nof 0 is the number",
    "start": "606770",
    "end": "611870"
  },
  {
    "text": "of satisfying assignments\nwhen you've set x1 to 0. And no phi of a1 to ai is where\nyou set the first i variables",
    "start": "611870",
    "end": "622140"
  },
  {
    "text": "to those i values. And then you're going to look\nat the number of satisfying",
    "start": "622140",
    "end": "629340"
  },
  {
    "text": "assignments with\nthose presets in mind. So there were two facts.",
    "start": "629340",
    "end": "634930"
  },
  {
    "text": "I'm going to call them\nidentities, because we're going to rely on those and we're\ngoing to actually extend those",
    "start": "634930",
    "end": "641970"
  },
  {
    "text": "to the non Boolean case,\nas we'll see shortly. So these two identities\nsay that, first of all,",
    "start": "641970",
    "end": "654710"
  },
  {
    "text": "if I preset, I\nthink understanding the first one is clear\njust by thinking about it",
    "start": "654710",
    "end": "660850"
  },
  {
    "text": "in the case where i equals 0. So this is the case where\nthe number of satisfying",
    "start": "660850",
    "end": "667630"
  },
  {
    "text": "assignments altogether is\nthe number of satisfying assignments when I've set x1 to\n0 plus the number of satisfying",
    "start": "667630",
    "end": "675870"
  },
  {
    "text": "assignments when\nI've set x1 to 1. And this just\ngeneralizes that when",
    "start": "675870",
    "end": "681490"
  },
  {
    "text": "I look at having already\npreset the first i variables.",
    "start": "681490",
    "end": "687339"
  },
  {
    "text": "So if I preset the first i\nvariables to these i values,",
    "start": "687340",
    "end": "692430"
  },
  {
    "text": "the number of\nsatisfying assignments I get there is the number\nof satisfying assignments I get with those presets\nplus the next variable being",
    "start": "692430",
    "end": "699870"
  },
  {
    "text": "set either to 0 or to 1. And then you add those up. The same idea.",
    "start": "699870",
    "end": "705620"
  },
  {
    "text": "And lastly, if I set\nall of the variables to values, so I have no\nvariables left, and I look",
    "start": "705620",
    "end": "713330"
  },
  {
    "text": "at the number of\nsatisfying assignments consistent with that\nfully set variables,",
    "start": "713330",
    "end": "721319"
  },
  {
    "text": "so there's no variables\nleft, everything is set, everything is preset,\nthat's just whether or not",
    "start": "721320",
    "end": "726650"
  },
  {
    "text": "those values have satisfied\nthe formula already or not. So this is going to be\nequal to 0 or 1, the number",
    "start": "726650",
    "end": "733820"
  },
  {
    "text": "of consistent\nsatisfying assignments with those m presets where\nm is a number of variables",
    "start": "733820",
    "end": "738920"
  },
  {
    "text": "is just whether those m values\nsatisfy the formula, in which case, I get 1, or they don't\nsatisfy the formula, in which",
    "start": "738920",
    "end": "746269"
  },
  {
    "text": "case, I get a 0. Critical to understand\nthese in the Boolean case,",
    "start": "746270",
    "end": "751887"
  },
  {
    "text": "because we're going\nto generalize this to the non Boolean\ncase, and it's going to be just more abstract.",
    "start": "751887",
    "end": "757220"
  },
  {
    "text": "The formulas are going\nto look the same. We're going to have to kind of--",
    "start": "757220",
    "end": "762449"
  },
  {
    "text": "we're going to\nlose the intuition that those things correspond\nto satisfying assignments.",
    "start": "762450",
    "end": "767990"
  },
  {
    "text": "Or counting the number of\nsatisfying assignments. All right. So let's have a\nquick check-in here.",
    "start": "767990",
    "end": "775570"
  },
  {
    "text": "So we're just going to\ndo an example to hope to nail this in, this idea.",
    "start": "775570",
    "end": "783129"
  },
  {
    "text": "So here's a particular\nformula phi. ",
    "start": "783130",
    "end": "788970"
  },
  {
    "text": "And now remember,\nnumber phi is the number of satisfying assignments. So phi, the number of\nsatisfying assignments where",
    "start": "788970",
    "end": "795790"
  },
  {
    "text": "I've set x1 to 0 and so on. And here I'm really\nkind of giving you",
    "start": "795790",
    "end": "801860"
  },
  {
    "text": "two options in each\nrow for the value. Now you have to check\nall that are true.",
    "start": "801860",
    "end": "808670"
  },
  {
    "text": "So it's really going to be at\nmost one per row, presumably. ",
    "start": "808670",
    "end": "816700"
  },
  {
    "text": "All right. Let's see if you're\nwith me here. So the number of satisfying\nassignments for altogether,",
    "start": "816700",
    "end": "827880"
  },
  {
    "text": "well, there are two ways\nof satisfying this formula. This is really\nlike exclusive or.",
    "start": "827880",
    "end": "834660"
  },
  {
    "text": "So either x1 is 1, x2 is\n0, or x1 is 0 and x2 is 1.",
    "start": "834660",
    "end": "841139"
  },
  {
    "text": "So one of the variables\nhas to be true. The other one has to be false. And then you're going to end\nup satisfying both clauses,",
    "start": "841140",
    "end": "847350"
  },
  {
    "text": "as you can easily see. So b is correct\nin the first line.",
    "start": "847350",
    "end": "854770"
  },
  {
    "text": "Now, if I'm going\nto already commit to saying the first\nvariable is set to 0, now",
    "start": "854770",
    "end": "861640"
  },
  {
    "text": "how many satisfying\nassignments can there be? Well, the second\nvariable just has to be set to 1 in\norder to satisfy.",
    "start": "861640",
    "end": "867970"
  },
  {
    "text": "So now there's going to be\nonly one satisfying assignment consistent with setting\nthe first variable to 0.",
    "start": "867970",
    "end": "874720"
  },
  {
    "text": "Now if I set both\nvariables to 0, now how many satisfying\nassignments can there",
    "start": "874720",
    "end": "881079"
  },
  {
    "text": "be consistent with\nthat assignment? There can be 0, because in\norder to satisfy this formula,",
    "start": "881080",
    "end": "890230"
  },
  {
    "text": "one of the variables\nhas to be 0. The other one has to be 1. If I'm presenting\nthem both to 0, there's not going to be\nany satisfying assignments,",
    "start": "890230",
    "end": "896710"
  },
  {
    "text": "because 0, 0 not\nsatisfy the formula. OK, apologies for messing up\nthat check in on the last day.",
    "start": "896710",
    "end": "908370"
  },
  {
    "start": "908000",
    "end": "1070000"
  },
  {
    "text": "Oh well.  All right. Let's first go over the protocol\nwe attempted for number SAT",
    "start": "908370",
    "end": "928959"
  },
  {
    "text": "last week on Thursday. So we're given the input,\nthe formula, and a k.",
    "start": "928960",
    "end": "939620"
  },
  {
    "text": "And remember what\nwe want to happen. We want the verifier\nto end up accepting with high probability when\nk is the correct value",
    "start": "939620",
    "end": "947149"
  },
  {
    "text": "and with low probability when\nk is not the correct value. Now, this is going to be, as\nyou may remember from last time,",
    "start": "947150",
    "end": "957769"
  },
  {
    "text": "this is going to end up\nbeing a flawed protocol, because it's exponential. We're only allowed to have\na polynomial size protocol.",
    "start": "957770",
    "end": "965060"
  },
  {
    "text": "But just looking ahead\nin this protocol, the verifier is going\nto end up accepting",
    "start": "965060",
    "end": "971420"
  },
  {
    "text": "with probability 1 for an honest\nprover and with probability 0",
    "start": "971420",
    "end": "977000"
  },
  {
    "text": "no matter what the\nprover tries to do. So for any prover, the verifier\ncannot be made to accept.",
    "start": "977000",
    "end": "984080"
  },
  {
    "text": "So this is kind\nof an extreme case where there's not going to end\nup being any probabilities.",
    "start": "984080",
    "end": "990139"
  },
  {
    "text": "But it's an\nexponential protocol. So in that sense, it\ndoesn't do what we need. So let's go through it,\nbecause it really sets us up",
    "start": "990140",
    "end": "997790"
  },
  {
    "text": "for the polynomial protocol\nwith the non Boolean values.",
    "start": "997790",
    "end": "1003959"
  },
  {
    "text": "All right. So first the prover sends-- let's just look at\nit and not rush it.",
    "start": "1003960",
    "end": "1010980"
  },
  {
    "text": "The prover sends the number\nof satisfying assignments",
    "start": "1010980",
    "end": "1017519"
  },
  {
    "text": "according to the prover. The verifier checks\nthat is equal to k.",
    "start": "1017520",
    "end": "1025240"
  },
  {
    "text": "And I think it's\nbest to understand this first with the case that\nthe input is in the language.",
    "start": "1025240",
    "end": "1032169"
  },
  {
    "text": "So k is correct and we\nhave an honest prover. And then we'll\nunderstand what happens",
    "start": "1032170",
    "end": "1037520"
  },
  {
    "text": "if k is not in the language. And we'll see that no matter\nwhat the prover tries to do,",
    "start": "1037520",
    "end": "1043160"
  },
  {
    "text": "the verifier is going\nto end up not accepting. And again, this is just a\nsetup for the real protocol.",
    "start": "1043160",
    "end": "1052490"
  },
  {
    "text": "So this is kind of\na dopey protocol. You're going to think, what in\nthe world, why am I doing this? ",
    "start": "1052490",
    "end": "1059800"
  },
  {
    "text": "It seems like I'm\nmaking something that's very simple complicated, but\nit's really just the framework",
    "start": "1059800",
    "end": "1065830"
  },
  {
    "text": "that I'm putting together. Because, well, you'll see.",
    "start": "1065830",
    "end": "1071090"
  },
  {
    "start": "1070000",
    "end": "3599000"
  },
  {
    "text": "All right. So the proof is going\nto send the claim for the number of\nsatisfying assignments,",
    "start": "1071090",
    "end": "1076659"
  },
  {
    "text": "which in the honest case is\ngoing to be the correct value. The verifier checks that\nit matches the input.",
    "start": "1076660",
    "end": "1082870"
  },
  {
    "text": "Now the verifier says,\nwell, I want to be convinced that your claim is correct. So the prover is going\nto justify that claim",
    "start": "1082870",
    "end": "1092070"
  },
  {
    "text": "by saying, well, the\ntotal number of satisfying assignments is\nwhatever it is, 100 because the number when\nI have x1 set to 0 is 60.",
    "start": "1092070",
    "end": "1103590"
  },
  {
    "text": "And the number when I\nhave x1 set to 1 is 40. And that adds up to\n100, which is what",
    "start": "1103590",
    "end": "1108750"
  },
  {
    "text": "you would need to have happen. So the verifier checks that the\nsum is correct and then says,",
    "start": "1108750",
    "end": "1115330"
  },
  {
    "text": "well, now how do I know\nthose two values are right? So then the prover unpacks\nit one level further.",
    "start": "1115330",
    "end": "1121850"
  },
  {
    "text": "So breaks those two\ndown by justifying that phi 0 was correct,\nthat value 60 was correct,",
    "start": "1121850",
    "end": "1130000"
  },
  {
    "text": "by saying, well, now if\nI set the next variable, x2 to 0 and 1, that's going\nto have to add up to phi 0.",
    "start": "1130000",
    "end": "1137260"
  },
  {
    "text": "So maybe to get 60,\nI had 50 and 10. And to get 40 for number\nphi of one, I had 20 and 20.",
    "start": "1137260",
    "end": "1149180"
  },
  {
    "text": "So these I have to add up.",
    "start": "1149180",
    "end": "1154350"
  },
  {
    "text": "So each level justifies\nthe preceding level. We're going to have\nthat happen again.",
    "start": "1154350",
    "end": "1160410"
  },
  {
    "text": " Now, the prover says, well, I\nmean, I need to be convinced.",
    "start": "1160410",
    "end": "1168250"
  },
  {
    "text": "I don't trust you. I need to be convinced that\nthese values are correct. So level by level,\nthe prover is going",
    "start": "1168250",
    "end": "1177130"
  },
  {
    "text": "to be setting more and more\nof the variables in all the possible ways\nuntil it gets down",
    "start": "1177130",
    "end": "1182680"
  },
  {
    "text": "to the very bottom where\nit's setting the variables in all possible ways.",
    "start": "1182680",
    "end": "1187970"
  },
  {
    "text": "So exponentially\nmany settings here. And the verifier now checks that\nthe previous round was correct.",
    "start": "1187970",
    "end": "1196950"
  },
  {
    "text": "So that's where we set\nonly the first m minus 1, the very last variable\nhadn't yet been set.",
    "start": "1196950",
    "end": "1203510"
  },
  {
    "text": "So checks all of\nthose 2 to the n minus 1 possible\nsettings in terms",
    "start": "1203510",
    "end": "1211129"
  },
  {
    "text": "of the new settings\nthat we got where we set those m minus 1\nsettings, but we extended it",
    "start": "1211130",
    "end": "1218059"
  },
  {
    "text": "by 0 and by 1. Again, this is the same identity\nthat we used from before.",
    "start": "1218060",
    "end": "1223174"
  },
  {
    "text": " And now that the prover has sent\nall of those possible values,",
    "start": "1223175",
    "end": "1231890"
  },
  {
    "text": "the verifier needs to be sure\nthat those are still correct. But the thing is\nthat at this point,",
    "start": "1231890",
    "end": "1239900"
  },
  {
    "text": "those are all zeros and\nones because they all say whether that assignment\nsatisfies the formula",
    "start": "1239900",
    "end": "1247460"
  },
  {
    "text": "or doesn't satisfy the formula. So the verifier can\ncheck those directly.",
    "start": "1247460",
    "end": "1252810"
  },
  {
    "text": "Checks each of\nthose, whether just by plugging into the\nformula and seeing",
    "start": "1252810",
    "end": "1258390"
  },
  {
    "text": "does it satisfy\nthe formula or not. So each one of these\nis a 0, 1 value, which is supposed to correspond\nto whether the formula was",
    "start": "1258390",
    "end": "1265320"
  },
  {
    "text": "satisfied or not. Those all are correct and\neverything else along the way",
    "start": "1265320",
    "end": "1273540"
  },
  {
    "text": "has been correct. The verifier is going to accept. Otherwise if at any point\none of those checks failed,",
    "start": "1273540",
    "end": "1281490"
  },
  {
    "text": "the verifier has already\nrejected or at this point it just rejects. So that is the protocol,\nthe exponential protocol.",
    "start": "1281490",
    "end": "1294890"
  },
  {
    "text": "And I'm not sure if this\nis helpful to you or not, but I like to think of it sort\nof as a tree of possibilities.",
    "start": "1294890",
    "end": "1304050"
  },
  {
    "text": "So these yellow values are\nwhat the prover is sending.",
    "start": "1304050",
    "end": "1309440"
  },
  {
    "text": "So the prover first\nsends the number of satisfying\nassignments all together. The verifier in\nwhite is checking--",
    "start": "1309440",
    "end": "1317600"
  },
  {
    "text": "are doing these checks. So it checks that it equals k. ",
    "start": "1317600",
    "end": "1326430"
  },
  {
    "text": "And then the prover\nsends the next level. The verifier checks that\nthe addition works out.",
    "start": "1326430",
    "end": "1334440"
  },
  {
    "text": "Then the prover\nunpacks it further,",
    "start": "1334440",
    "end": "1339870"
  },
  {
    "text": "assigns values to the\nfirst two variables, and the verifier checks that\njust the assignments, just",
    "start": "1339870",
    "end": "1347639"
  },
  {
    "text": "a single variable are\nconsistent with that and so on. And to assign all m variables\nand then it checks directly",
    "start": "1347640",
    "end": "1357539"
  },
  {
    "text": "with the formula. Now, what happens--\nand here is the case.",
    "start": "1357540",
    "end": "1364340"
  },
  {
    "text": "It's going to be important\nto understand in both here and in the non Boolean case. What happens if we had an\nincorrect value for the input?",
    "start": "1364340",
    "end": "1375500"
  },
  {
    "text": "And what I want to show you is\nthat the prover is going to-- I want to show you\nthat the verifier is",
    "start": "1375500",
    "end": "1381620"
  },
  {
    "text": "going to end up rejecting\nin this case with certainty.",
    "start": "1381620",
    "end": "1389309"
  },
  {
    "text": "Later on it's just going to\nreject with high probability. But for this protocol, it's\ngoing to accept with certainty.",
    "start": "1389310",
    "end": "1396970"
  },
  {
    "text": "And why is that? Because first of all, if\nthe prover, if k was wrong,",
    "start": "1396970",
    "end": "1407180"
  },
  {
    "text": "so I'm indicating the\nwrong values in red. If k was wrong, so it did not\nequal the number of satisfying",
    "start": "1407180",
    "end": "1414080"
  },
  {
    "text": "assignments, if the prover\nsends the correct value, the verifier is just going\nto say it doesn't match up.",
    "start": "1414080",
    "end": "1420860"
  },
  {
    "text": "I reject right away. So what can the\nprover possibly do",
    "start": "1420860",
    "end": "1426660"
  },
  {
    "text": "to prevent the verifier\nfrom accepting? You're going to see that\nthere's nothing you can do. But later on, there's a chance\nthat the prover can get lucky.",
    "start": "1426660",
    "end": "1434620"
  },
  {
    "text": "But here there's\nnothing you can do. Let's try to humor me and see--",
    "start": "1434620",
    "end": "1442269"
  },
  {
    "text": "let the prover try to manage\nto keep the verifier going",
    "start": "1442270",
    "end": "1447610"
  },
  {
    "text": "as long as possible. So the prover in order\nto prevent the verifier from rejecting at\nthe beginning would",
    "start": "1447610",
    "end": "1454179"
  },
  {
    "text": "have to lie about the number\nof satisfying assignments.",
    "start": "1454180",
    "end": "1459340"
  },
  {
    "text": "But then the prover is\ngoing to say, well, OK,",
    "start": "1459340",
    "end": "1464890"
  },
  {
    "text": "you're claiming there's only\n99 satisfying assignments. Prover doesn't know what\nthe right real answer is.",
    "start": "1464890",
    "end": "1471460"
  },
  {
    "text": "But we know it was\n100, let's say. But let's say k was equal to 99.",
    "start": "1471460",
    "end": "1478710"
  },
  {
    "text": "The prover claimed it's 99 now. And so the verifier\nsays, OK, well, it's 99.",
    "start": "1478710",
    "end": "1487649"
  },
  {
    "text": "Convince me of that. So now the prover\nis going to have to say the number of\nsatisfying assignments for 0 and the number of satisfying\nassignments for 1,",
    "start": "1487650",
    "end": "1494318"
  },
  {
    "text": "they have to add up. At least one of those\nhas to be wrong, because you can't have the\ntwo correct values adding up",
    "start": "1494318",
    "end": "1500529"
  },
  {
    "text": "to the false value. So a lie here has to yield\na lie in at least one",
    "start": "1500530",
    "end": "1508280"
  },
  {
    "text": "of those two places. And then a lie there\nis going to have to yield a lie in one\nof those two places,",
    "start": "1508280",
    "end": "1514899"
  },
  {
    "text": "just like each lie kind\nof forces more lies. As you know, you're\ntrying to lie.",
    "start": "1514900",
    "end": "1521080"
  },
  {
    "text": "The story gets more and\nmore complicated in order to try to justify all this.",
    "start": "1521080",
    "end": "1527960"
  },
  {
    "text": "And so in the end, you're\ngoing to get an inequality. And the verifier is going\nto end up rejecting.",
    "start": "1527960",
    "end": "1535015"
  },
  {
    "text": "Somewhere along\nthe line, there's going to have to\nbe an inequality, if not along the way\nthen at the very end",
    "start": "1535015",
    "end": "1540680"
  },
  {
    "text": "when the verifier\ndoes the check itself. Because one of those, you\ncould trace that down, there's",
    "start": "1540680",
    "end": "1546940"
  },
  {
    "text": "going to be lies\nand lies and lies and then there's going to\nbe at the very bottom one",
    "start": "1546940",
    "end": "1554590"
  },
  {
    "text": "of these values is\ngoing to be wrong. And when the verifier\nchecks them all, it's going to find out that\nthere is an inequality there.",
    "start": "1554590",
    "end": "1562207"
  },
  {
    "text": "And so one of those\nchecks is going to fail. ",
    "start": "1562207",
    "end": "1570415"
  },
  {
    "text": "So I'm getting\none question here. Why is this any better\nthan just checking all possible assignments\nwithout a prover?",
    "start": "1570415",
    "end": "1576830"
  },
  {
    "text": "It isn't. The only reason\nI'm doing this is to get us ready for the\narithmetized protocol",
    "start": "1576830",
    "end": "1588029"
  },
  {
    "text": "where we have non\nBoolean values coming in. So questions on this? I think it's important\nto understand this one.",
    "start": "1588030",
    "end": "1599080"
  },
  {
    "text": "Don't ask the question why. The why is just going\nto be we are getting ourselves ready for\nsomething later,",
    "start": "1599080",
    "end": "1605290"
  },
  {
    "text": "which you don't know yet. But I want you to understand\nit for what it is,",
    "start": "1605290",
    "end": "1611260"
  },
  {
    "text": "even if it seems\nunnecessarily complicated. ",
    "start": "1611260",
    "end": "1617290"
  },
  {
    "text": "OK, so let's keep going. So how are we going\nto fix that protocol",
    "start": "1617290",
    "end": "1622560"
  },
  {
    "text": "so it's not exponential? So again, here is a picture\nof that exponential protocol. And we have that\nexponential blow",
    "start": "1622560",
    "end": "1630540"
  },
  {
    "text": "up occurring because\nat every stage, each value is going to be\njustified in terms of two values at the next stage.",
    "start": "1630540",
    "end": "1638080"
  },
  {
    "text": "So it's going to be\nexponentially many values after a while.",
    "start": "1638080",
    "end": "1643720"
  },
  {
    "text": "So instead, we're going to\ntry to justify each value here in terms of just a single\nvalue at the next stage.",
    "start": "1643720",
    "end": "1649800"
  },
  {
    "text": " But it's not going to\nbe good enough just to pick either the 0\nor the 1 at random.",
    "start": "1649800",
    "end": "1658429"
  },
  {
    "text": "Because it might be each-- there might be just\na single course of lies going through here.",
    "start": "1658430",
    "end": "1665740"
  },
  {
    "text": "And the only way you\nwould be to catch that would be to guess correctly at\neach stage which was the lie.",
    "start": "1665740",
    "end": "1675040"
  },
  {
    "text": "And then you would\ncatch it at the end. If you're just going\nto be randomly picking zeros and ones, you're\nnot going to have",
    "start": "1675040",
    "end": "1683580"
  },
  {
    "text": "a high probability of catching\nthe prover when it's lying. And so that's not going\nto be good enough.",
    "start": "1683580",
    "end": "1692250"
  },
  {
    "text": "The input might\nbe the wrong value and you might have\na prover which",
    "start": "1692250",
    "end": "1697770"
  },
  {
    "text": "just has one path of lies,\nand then your probability,",
    "start": "1697770",
    "end": "1703800"
  },
  {
    "text": "you would still have\na high probability of accepting in that case, even\nthough the input was wrong.",
    "start": "1703800",
    "end": "1710020"
  },
  {
    "text": "It's not what you want. When the input is\nwrong, you have to have only a tiny chance, a\nvery small chance of accepting.",
    "start": "1710020",
    "end": "1718795"
  },
  {
    "text": "So the way we're\ngoing to achieve that is by having these-- instead of picking a 0 or a\n1 for these random values,",
    "start": "1718795",
    "end": "1728600"
  },
  {
    "text": "we're going to have non Boolean\nassignments to the variables. And we have to\nmake sense of that.",
    "start": "1728600",
    "end": "1734910"
  },
  {
    "text": "And we've already seen\nan example of that. It's going to be\nvery much the same. ",
    "start": "1734910",
    "end": "1741670"
  },
  {
    "text": "All right. Are we all together here?",
    "start": "1741670",
    "end": "1749070"
  },
  {
    "text": "So this is a place\nwhere we could try, if you have a question,\nwe can try to answer that.",
    "start": "1749070",
    "end": "1761460"
  },
  {
    "text": "Are we good? Let's keep moving. OK, so how are we going to\narithmetize Boolean formulas?",
    "start": "1761460",
    "end": "1767660"
  },
  {
    "text": "It's, again, the same\nidea we had before. Simulating ands and ors\nwith plus and times.",
    "start": "1767660",
    "end": "1773179"
  },
  {
    "text": "So we had this from\nbefore, same exact picture. Actually it's even\nsimpler, because now we're going to be using the true\nsimulation of or instead",
    "start": "1773180",
    "end": "1783039"
  },
  {
    "text": "of some kind of a special\ncase simulation of or, which we had in the\nbranching program case.",
    "start": "1783040",
    "end": "1789670"
  },
  {
    "text": "So these faithfully\ndo what and and",
    "start": "1789670",
    "end": "1794762"
  },
  {
    "text": "or does when you plug in 0\nfor false and 1 for true.",
    "start": "1794762",
    "end": "1801380"
  },
  {
    "text": "So that means that we can\ntake an entire formula and arithmetize it. The formula built out of\nands and ors and negations.",
    "start": "1801380",
    "end": "1809500"
  },
  {
    "text": "And you're going to get a\npolynomial that comes out. ",
    "start": "1809500",
    "end": "1815250"
  },
  {
    "text": "And that polynomial, what's\ngoing to be important for us is not going to be of\nextremely high degree.",
    "start": "1815250",
    "end": "1820799"
  },
  {
    "text": "The actual degree is going\nto be at most the length of the formula in terms of\nthe number of symbols it has.",
    "start": "1820800",
    "end": "1825870"
  },
  {
    "text": "You can check that on your own. But for now you\ncan just trust me. The degree of the polynomial,\nbecause it only goes up",
    "start": "1825870",
    "end": "1833760"
  },
  {
    "text": "during the multiplications,\nbut the degree doesn't",
    "start": "1833760",
    "end": "1839040"
  },
  {
    "text": "become too big. ",
    "start": "1839040",
    "end": "1846909"
  },
  {
    "text": "And we're going to be doing-- and I don't want this to\nbe a confusing issue here. We're going to be doing--\nbut we have to be correct.",
    "start": "1846910",
    "end": "1857215"
  },
  {
    "text": "I don't want to\nbe cheating here. So all of the arithmetic is\ngoing to be done in a field.",
    "start": "1857215",
    "end": "1862700"
  },
  {
    "text": "So we have to do plus and\ntimes mod some number, which",
    "start": "1862700",
    "end": "1872840"
  },
  {
    "text": "turns out needs to be a\nprime number for reasons I'm not going to get into. But it doesn't really matter.",
    "start": "1872840",
    "end": "1878299"
  },
  {
    "text": "It's just modular arithmetic. And that's one\nthing that enables us to pick random\nvalues in a natural way,",
    "start": "1878300",
    "end": "1883880"
  },
  {
    "text": "because there's only finitely\nmany values in the field. And so you're just going\nto pick one at random.",
    "start": "1883880",
    "end": "1889210"
  },
  {
    "text": "But here we want to\nbe able to represent-- it's going to be more important\nfor us to have a larger",
    "start": "1889210",
    "end": "1896789"
  },
  {
    "text": "field, because we want\nto be able to represent the number of satisfying\nassignments which",
    "start": "1896790",
    "end": "1902520"
  },
  {
    "text": "can be a number between\n0 and 2 to the m. So we have to have a\nfield which has at least 2",
    "start": "1902520",
    "end": "1908040"
  },
  {
    "text": "to the m elements in it so\nthat we can in a sensible way write down those numbers.",
    "start": "1908040",
    "end": "1913230"
  },
  {
    "text": " Let's not get\ncaught up with that.",
    "start": "1913230",
    "end": "1919950"
  },
  {
    "text": "But we can try to answer those\nquestions offline if you want. But just think about\nit for this first pass.",
    "start": "1919950",
    "end": "1927990"
  },
  {
    "text": "We're doing the\narithmetic mod sum prime. ",
    "start": "1927990",
    "end": "1934740"
  },
  {
    "text": "So now we have the same notion\nof presets as we had before.",
    "start": "1934740",
    "end": "1941090"
  },
  {
    "text": "So if we have a formula and\nwe preset some of the values",
    "start": "1941090",
    "end": "1946210"
  },
  {
    "text": "but now those values may\nbe non Boolean values. ",
    "start": "1946210",
    "end": "1951620"
  },
  {
    "text": "We may be plugging in\nvalues for the formula. Not just zeros and ones, but\nwe might be plugging in sevens",
    "start": "1951620",
    "end": "1959000"
  },
  {
    "text": "or 23's or whatever. And the formula is\ngoing to in order",
    "start": "1959000",
    "end": "1964400"
  },
  {
    "text": "to have a value,\na meaning to that, we're going to treat that\nformula as the polynomial",
    "start": "1964400",
    "end": "1969890"
  },
  {
    "text": "from the arithmetization. And just plug in those\nvalues into the polynomial and see what the\npolynomial does for you.",
    "start": "1969890",
    "end": "1977920"
  },
  {
    "text": "So here we're going\nto be presetting some of the values of the\nformula like we did before. And now it's going\nto be the same thing.",
    "start": "1977920",
    "end": "1984750"
  },
  {
    "text": "But now in the\npolynomial, we're going to be pre-assigning some of\nthe values of the variables",
    "start": "1984750",
    "end": "1990510"
  },
  {
    "text": "to these a's from the field. And the remaining variables\nare going to stay as unset.",
    "start": "1990510",
    "end": "1996870"
  },
  {
    "text": " Now we have to give\nan interpretation.",
    "start": "1996870",
    "end": "2004169"
  },
  {
    "text": " So the new polynomial here.",
    "start": "2004170",
    "end": "2009325"
  },
  {
    "text": " So I'm getting a question. Well, maybe I better take this.",
    "start": "2009325",
    "end": "2015180"
  },
  {
    "text": "Let me hold off on that\nfor now what the degree is. ",
    "start": "2015180",
    "end": "2027880"
  },
  {
    "text": "I'll answer the\nquestions in a second. So now remember from\nbefore, number phi",
    "start": "2027880",
    "end": "2037260"
  },
  {
    "text": "was the number of\nsatisfying assignments when I preset the first i values.",
    "start": "2037260",
    "end": "2044438"
  },
  {
    "text": "It no longer makes sense to talk\nabout satisfying assignments, because these values may\nno longer be Booleans.",
    "start": "2044438",
    "end": "2052050"
  },
  {
    "text": "So I'm going to have\nto write this formally",
    "start": "2052050",
    "end": "2059510"
  },
  {
    "text": "as I'm going to plug in\nthose values, those i values,",
    "start": "2059510",
    "end": "2067379"
  },
  {
    "text": "for the first i variables. And the remaining are\nvariables which I have not set.",
    "start": "2067380",
    "end": "2074129"
  },
  {
    "text": "I'm going to assign\nthem to zeros and ones in all possible ways. Only to zeros and ones. ",
    "start": "2074130",
    "end": "2081449"
  },
  {
    "text": "Because what I want to\nhave, you might think, well, why aren't we assigning these\nto other values in the field?",
    "start": "2081449",
    "end": "2087570"
  },
  {
    "text": "Well, because what I'm aiming\nat is that if I were to plug in zeros and ones at this\npoint into the polynomial,",
    "start": "2087570",
    "end": "2097870"
  },
  {
    "text": "I'm supposed to get exactly the\nsame values as I had before, because I'm simulating\nand's and or's.",
    "start": "2097870",
    "end": "2103390"
  },
  {
    "text": "So I'm just extending the\ndefinition, the evaluation",
    "start": "2103390",
    "end": "2111819"
  },
  {
    "text": "into a new realm. But I shouldn't\nchange the values on the old Boolean realm.",
    "start": "2111820",
    "end": "2119070"
  },
  {
    "text": "So I'm going to be adding up the\nunassigned, the unset variables in all possible Boolean ways.",
    "start": "2119070",
    "end": "2125700"
  },
  {
    "text": "And the first i values\ncould be non Boolean values. So you have to just accept\nthis as an abstract notion.",
    "start": "2125700",
    "end": "2134980"
  },
  {
    "text": "No longer has an interpretation\nas satisfying assignments. ",
    "start": "2134980",
    "end": "2141890"
  },
  {
    "text": "So as I said,\nwhat's important is that if I happen to put\nBoolean values in now,",
    "start": "2141890",
    "end": "2149090"
  },
  {
    "text": "then phi and number phi\ngive the same values",
    "start": "2149090",
    "end": "2154790"
  },
  {
    "text": "as they would have before. Because the polynomial\nacts identically",
    "start": "2154790",
    "end": "2162269"
  },
  {
    "text": "to the formula on\nBoolean values. ",
    "start": "2162270",
    "end": "2168710"
  },
  {
    "text": "OK. So this is what I'm\nrepeating what I said. And there's another point\nthat also you have to check,",
    "start": "2168710",
    "end": "2175820"
  },
  {
    "text": "which is that the identities\nthat we had earlier that connected up what happens\nwhen I set the first i values",
    "start": "2175820",
    "end": "2184730"
  },
  {
    "text": "and I set the first i plus\n1 values, those still hold.",
    "start": "2184730",
    "end": "2190869"
  },
  {
    "text": "So if I set the first i values\nnow to possibly some non",
    "start": "2190870",
    "end": "2197200"
  },
  {
    "text": "Boolean assignment,\nthat's what I get when I extend those values\nto one more variable being",
    "start": "2197200",
    "end": "2208410"
  },
  {
    "text": "assigned. But I just need to assign\nthat variable to 0 and to 1 and add those up\nbecause of the way",
    "start": "2208410",
    "end": "2213960"
  },
  {
    "text": "I've defined things over here. So I've assigned those variables\nto zeros-- the unset variable",
    "start": "2213960",
    "end": "2222030"
  },
  {
    "text": "to zeros and ones when I'm\ndefining the number phi",
    "start": "2222030",
    "end": "2227280"
  },
  {
    "text": "function. And then lastly, when\nI assign everything",
    "start": "2227280",
    "end": "2233750"
  },
  {
    "text": "now to possibly non Boolean\nvalues, that's going to be--",
    "start": "2233750",
    "end": "2238970"
  },
  {
    "text": "there's no longer\nanything to add up. So I'm going to get exactly\nthe same as I got from",
    "start": "2238970",
    "end": "2245990"
  },
  {
    "text": "before when I-- so assigning number phi\nof totally preset input,",
    "start": "2245990",
    "end": "2251330"
  },
  {
    "text": "it's the same as phi with\na totally preset input. Because in that case,\nthere are no variables",
    "start": "2251330",
    "end": "2257910"
  },
  {
    "text": "left to add up over. So there's just one. I just get one single.",
    "start": "2257910",
    "end": "2264480"
  },
  {
    "text": "I sum it as just\none element in it.  So I got a question\nhere for earlier.",
    "start": "2264480",
    "end": "2273000"
  },
  {
    "text": "What happens to the\ndegrees of the polynomials? ",
    "start": "2273000",
    "end": "2278540"
  },
  {
    "text": "Well, the degree\nof number phi is going to be at most\nthe degree of phi,",
    "start": "2278540",
    "end": "2283730"
  },
  {
    "text": "because I'm just\nadding things up. And addition doesn't\nchange degrees. ",
    "start": "2283730",
    "end": "2290859"
  },
  {
    "text": "As I preset values, the\nnumber of variables goes down, but the degree may not\nnecessarily go down.",
    "start": "2290860",
    "end": "2299319"
  },
  {
    "text": "So the question was I got are\nthe new polynomials having lower degrees? Not necessarily.",
    "start": "2299320",
    "end": "2307400"
  },
  {
    "text": "They have fewer variables\nbut not a smaller degree. ",
    "start": "2307400",
    "end": "2317000"
  },
  {
    "text": "So let's do this check. Let's see if that-- ",
    "start": "2317000",
    "end": "2322820"
  },
  {
    "text": "now again, this is I think\nI have messed up on this. ",
    "start": "2322820",
    "end": "2329270"
  },
  {
    "text": "Well, there's one\nof these that's-- ",
    "start": "2329270",
    "end": "2335366"
  },
  {
    "text": "I'll give it away in part. There's only one of them\nthat was true anyway. So you can check the one\nthat's true according",
    "start": "2335366",
    "end": "2344089"
  },
  {
    "text": "to the way we've defined it. So this is a little\nbit of a trick question here, as I'll explain.",
    "start": "2344090",
    "end": "2350694"
  },
  {
    "text": "But there's only\none of them that faithfully does\nthe arithmetization as I described on this page.",
    "start": "2350695",
    "end": "2357830"
  },
  {
    "text": "And that's the one\nyou should check. So remember, over here\nthis is the formula.",
    "start": "2357830",
    "end": "2365369"
  },
  {
    "text": "This is the recipe for how\nI'm doing the arithmetization. This whole process here.",
    "start": "2365370",
    "end": "2373020"
  },
  {
    "text": "So one of these lines,\none of these, a, b, or c, corresponds to doing that.",
    "start": "2373020",
    "end": "2378470"
  },
  {
    "text": " I'm going to close this down.",
    "start": "2378470",
    "end": "2383830"
  },
  {
    "text": "So are we all in? ",
    "start": "2383830",
    "end": "2388920"
  },
  {
    "text": "Yeah. So a is the correct answer. ",
    "start": "2388920",
    "end": "2395000"
  },
  {
    "text": "A does the arithmetization\naccording to the recipe that I just described.",
    "start": "2395000",
    "end": "2400430"
  },
  {
    "text": "Because if you look\nat x1 or x2, we can just check it in the very\nfirst part of the polynomial.",
    "start": "2400430",
    "end": "2410480"
  },
  {
    "text": "x1 or x2. Well, it's x1 plus x2\nminus the product x1 x2. So you can just\nsee it right there.",
    "start": "2410480",
    "end": "2416600"
  },
  {
    "text": "The others don't have that. And similarly for\nx1 bar and x2 bar.",
    "start": "2416600",
    "end": "2423130"
  },
  {
    "text": "It becomes 1 minus\nx1, 1 minus x2, and then the product of those. ",
    "start": "2423130",
    "end": "2429540"
  },
  {
    "text": "So a is pretty straightforward\nas the arithmetization of phi.",
    "start": "2429540",
    "end": "2435570"
  },
  {
    "text": "Now, in fact, any\nof those would work. I don't want to\nconfuse you here. But any of those would have\nworked, because they all agree",
    "start": "2435570",
    "end": "2443010"
  },
  {
    "text": "on the Boolean assignment. And that's all that\nreally matters. ",
    "start": "2443010",
    "end": "2448810"
  },
  {
    "text": "So if you have any-- all I care about\nis that they agree. The formula agrees\nwith the polynomial",
    "start": "2448810",
    "end": "2455670"
  },
  {
    "text": "and the Boolean\ncases, and these all happen to agree\nand zeros and ones.",
    "start": "2455670",
    "end": "2460890"
  },
  {
    "text": "Doesn't matter though. I put those there just\nin case you tried it by just substitution\nof zeros and ones in.",
    "start": "2460890",
    "end": "2467250"
  },
  {
    "text": "You might have picked\nthe wrong thing.  OK. So let's take a break\nhere, and then we",
    "start": "2467250",
    "end": "2476160"
  },
  {
    "text": "will see about how to go\nabout fixing the protocol",
    "start": "2476160",
    "end": "2482250"
  },
  {
    "text": "after the break. All right. So also happy to\ntake any questions.",
    "start": "2482250",
    "end": "2488312"
  },
  {
    "text": "We haven't really\ndone a whole lot. We basically, this\nhas all been review of what we did last time.",
    "start": "2488312",
    "end": "2496070"
  },
  {
    "text": "But let me start the timer.",
    "start": "2496070",
    "end": "2501315"
  },
  {
    "text": " But feel free to ask questions.",
    "start": "2501315",
    "end": "2506890"
  },
  {
    "text": " I'll tell you where we're going. This whole proof\nreally comes down",
    "start": "2506890",
    "end": "2514830"
  },
  {
    "text": "to understanding\none line, which is going to be in the second half.",
    "start": "2514830",
    "end": "2519930"
  },
  {
    "text": " So I'm really kind of-- this is all big\nsetup here to get",
    "start": "2519930",
    "end": "2527070"
  },
  {
    "text": "you ready to be able\nto understand that one. I'll tell you when it's coming. So you won't have to\nworry that you'll miss it.",
    "start": "2527070",
    "end": "2534270"
  },
  {
    "text": "But that line is not\neasy to understand. So I think it's important\nto get all of the framework",
    "start": "2534270",
    "end": "2540810"
  },
  {
    "text": "and all of the context all\nset up for you so then you",
    "start": "2540810",
    "end": "2547110"
  },
  {
    "text": "can understand that line and\nhopefully you see that line and understand it.",
    "start": "2547110",
    "end": "2552120"
  },
  {
    "text": "OK, so the important fact.",
    "start": "2552120",
    "end": "2557535"
  },
  {
    "text": " So let's go back.",
    "start": "2557535",
    "end": "2562998"
  },
  {
    "text": "You wanted to see\nthe important fact. ",
    "start": "2562998",
    "end": "2571405"
  },
  {
    "text": "OK. ",
    "start": "2571405",
    "end": "2581130"
  },
  {
    "text": "So this is what I\nwas saying before. ",
    "start": "2581130",
    "end": "2588040"
  },
  {
    "text": "If I plug in Boolean values\ninto the arithmetization,",
    "start": "2588040",
    "end": "2594110"
  },
  {
    "text": "I get the same exact\nthing as I would have if I applied the\nBoolean operations before I",
    "start": "2594110",
    "end": "2599420"
  },
  {
    "text": "did the arithmetization. So plus and times in\nthe arithmetization",
    "start": "2599420",
    "end": "2605400"
  },
  {
    "text": "give a faithful simulation\nof and and or according",
    "start": "2605400",
    "end": "2610890"
  },
  {
    "text": "to these little formulas. That's all I'm saying with this.",
    "start": "2610890",
    "end": "2618090"
  },
  {
    "text": "And so if I plug in\nBoolean values for the a's",
    "start": "2618090",
    "end": "2625630"
  },
  {
    "text": "I get exactly the same as I\nwould have gotten before I did the arithmetization. Because the arithmetization\nis a faithful simulation.",
    "start": "2625630",
    "end": "2632823"
  },
  {
    "text": "Not sure how else to say it. Let's see. What does the or rule now--",
    "start": "2632823",
    "end": "2637980"
  },
  {
    "text": "why does the or rule now\ncontain the minus ab term while the previous instance of\narithmetization didn't?",
    "start": "2637980",
    "end": "2646170"
  },
  {
    "text": "Remember in the case\nof branching programs, we didn't need the\nminus ab term over here.",
    "start": "2646170",
    "end": "2654080"
  },
  {
    "text": "And that was because we could\nargue that it was a disjoint or in the case of the\nbranching programs.",
    "start": "2654080",
    "end": "2660200"
  },
  {
    "text": "I don't want to get confusing by\ntrying to explain why that was. But in that earlier case, we\nnever took an or of two ones.",
    "start": "2660200",
    "end": "2671290"
  },
  {
    "text": "It was an of 0, 0 or possibly\n0, 1 or possibly 1, 0.",
    "start": "2671290",
    "end": "2678160"
  },
  {
    "text": "So therefore we never\nhad to deal with a case when we had an or of a 1, 1. And here we can have that.",
    "start": "2678160",
    "end": "2684910"
  },
  {
    "text": "So we have to subtract\noff that ab term, because otherwise we'd have-- if we just had a plus\nb, then the 1, 1 case,",
    "start": "2684910",
    "end": "2693109"
  },
  {
    "text": "we would end up with a 2. And that would not be\na faithful simulation of the or operation, because 1\nor 1 should be just 1, not 2.",
    "start": "2693110",
    "end": "2702700"
  },
  {
    "text": "So this is a good question here. Do all the numbers need\nto be zeros and ones? I'm not sure how negation\nwould work with larger numbers.",
    "start": "2702700",
    "end": "2709210"
  },
  {
    "text": " The negation, you just\nblindly follow it.",
    "start": "2709210",
    "end": "2715579"
  },
  {
    "text": "Even though we're going to be\nplugging in non Boolean values,",
    "start": "2715580",
    "end": "2722810"
  },
  {
    "text": "it's going to be 1 minus 7. So you're going to get minus 6. You have to do that mod P, mod\nQ, whatever that value you get.",
    "start": "2722810",
    "end": "2731600"
  },
  {
    "text": "But you can no\nlonger think about it as negation in the former sense.",
    "start": "2731600",
    "end": "2738720"
  },
  {
    "text": "Now it just becomes\na formal thing. You're just plugging along\ndoing what the polynomial says.",
    "start": "2738720",
    "end": "2745910"
  },
  {
    "text": "Numbers are coming out. You think this is just nonsense. But the thing is it's going\nto have a meaning that's",
    "start": "2745910",
    "end": "2751430"
  },
  {
    "text": "going to be useful to us. That's what this protocol\nis going to show. ",
    "start": "2751430",
    "end": "2757410"
  },
  {
    "text": "So you can't think about\nit as negation anymore. It's just negation\nbecomes 1 minus x",
    "start": "2757410",
    "end": "2763589"
  },
  {
    "text": "in the arithmetized\nworld and you just have to live with that.",
    "start": "2763590",
    "end": "2768810"
  },
  {
    "text": "Let's see. ",
    "start": "2768810",
    "end": "2776210"
  },
  {
    "text": "Another question here. If all the phi are equivalent\nfor Boolean inputs in the check",
    "start": "2776210",
    "end": "2781910"
  },
  {
    "text": "in, so this is back\ninto this check in here, so if all of the-- ",
    "start": "2781910",
    "end": "2793670"
  },
  {
    "text": "yeah. So the question is if they're\nall equivalent in the Boolean case, why is only a correct?",
    "start": "2793670",
    "end": "2802580"
  },
  {
    "text": "Because I defined P sub\nphi in a particular way.",
    "start": "2802580",
    "end": "2808500"
  },
  {
    "text": "And so this was the value\nyou got if you follow the way I define P sub phi. The others would work, they just\nweren't the way I defined it.",
    "start": "2808500",
    "end": "2816650"
  },
  {
    "start": "2816650",
    "end": "2821948"
  },
  {
    "text": "Any other questions here? We should probably move on. Can arithmetization be\nused in other contexts?",
    "start": "2821948",
    "end": "2827490"
  },
  {
    "start": "2827490",
    "end": "2833240"
  },
  {
    "text": "Offhand, I don't know. There are these two cases\nwhere arithmetization works. Whether there are other cases\ntoo, I'm actually not sure.",
    "start": "2833240",
    "end": "2841349"
  },
  {
    "text": "OK, so let's move on. So our timer is up.",
    "start": "2841350",
    "end": "2851180"
  },
  {
    "text": "The candle has burned down. OK. So this was-- OK, here we go.",
    "start": "2851180",
    "end": "2857540"
  },
  {
    "text": "This is the real protocol.  So I'm going to present it\nto you the way I did before.",
    "start": "2857540",
    "end": "2865730"
  },
  {
    "text": "Let's think about\nit with the case first where the input\nis in the language and we have an honest prover.",
    "start": "2865730",
    "end": "2871750"
  },
  {
    "text": " So we start off the same way.",
    "start": "2871750",
    "end": "2880140"
  },
  {
    "text": "The prover sends phi,\nsends number phi.",
    "start": "2880140",
    "end": "2886200"
  },
  {
    "text": "Which in the old\nsense was the number of satisfying assignments. It actually still is,\nbecause since we're not",
    "start": "2886200",
    "end": "2891820"
  },
  {
    "text": "presetting anything, there's\nno non Booleans in the picture yet. So this is going to be\nthe same value as before.",
    "start": "2891820",
    "end": "2898730"
  },
  {
    "text": "The verifier checks that\nk equals number phi. So that's why we have to have\na big enough field there,",
    "start": "2898730",
    "end": "2904250"
  },
  {
    "text": "so that we can\nrepresent numbers up to the number of potential\nnumber of satisfying",
    "start": "2904250",
    "end": "2910380"
  },
  {
    "text": "assignments. But that's a side note. But anyway, this is\nexactly what we did before.",
    "start": "2910380",
    "end": "2916230"
  },
  {
    "text": "No change. The number of satisfying\nassignments if you like. Now, let's just see. Let's remember.",
    "start": "2916230",
    "end": "2922090"
  },
  {
    "text": "And this is one of those\ncases where not having a big blackboard hampers us.",
    "start": "2922090",
    "end": "2927580"
  },
  {
    "text": "So I'm just going to remind\nyou what we did last time. But I'm going to change this. So remember before P sent--",
    "start": "2927580",
    "end": "2935109"
  },
  {
    "text": "and unpacked at one level. Sent the number of\nsatisfying assignments said number phi of 0\nand number phi of 1.",
    "start": "2935110",
    "end": "2943359"
  },
  {
    "text": "And then we did that\ncheck to justify the previous value, which the\nverifier doesn't necessarily",
    "start": "2943360",
    "end": "2948545"
  },
  {
    "text": "trust.  OK. Fasten your\nseatbelts, everybody.",
    "start": "2948545",
    "end": "2954640"
  },
  {
    "text": "This is the whole\nproof in the next line. ",
    "start": "2954640",
    "end": "2961630"
  },
  {
    "text": "But it's a doozy. ",
    "start": "2961630",
    "end": "2966960"
  },
  {
    "text": "All right. P is going to send phi of\nz as a polynomial in z.",
    "start": "2966960",
    "end": "2977670"
  },
  {
    "text": "It's going to send\njust a single object. But that object is\nan entire polynomial. ",
    "start": "2977670",
    "end": "2984910"
  },
  {
    "text": "And the way it's\ngoing to send that is by sending the coefficients\nof that polynomial.",
    "start": "2984910",
    "end": "2991180"
  },
  {
    "text": "So let's digest that statement.",
    "start": "2991180",
    "end": "3002050"
  },
  {
    "text": "So first of all,\nlet's understand",
    "start": "3002050",
    "end": "3008210"
  },
  {
    "text": "the value of doing that. So if I can send the\nentire polynomial phi sub z represented\nas a polynomial,",
    "start": "3008210",
    "end": "3017320"
  },
  {
    "text": "I can plug in 0 and 1\ninto that polynomial and allow the verifier\nto do the check",
    "start": "3017320",
    "end": "3024340"
  },
  {
    "text": "that it needs to\ndo to demonstrate",
    "start": "3024340",
    "end": "3032600"
  },
  {
    "text": "that number phi is correct. So it's going to check that\nnumber phi is number phi of 0",
    "start": "3032600",
    "end": "3040940"
  },
  {
    "text": "plus number phi of 1. But instead of getting\nthose values directly from the prover, it's going\nto take that polynomial it got",
    "start": "3040940",
    "end": "3048890"
  },
  {
    "text": "and evaluate that\npolynomial at 0 and 1. ",
    "start": "3048890",
    "end": "3056040"
  },
  {
    "text": "And just to remember,\nlet's go back and remember how we defined--",
    "start": "3056040",
    "end": "3063200"
  },
  {
    "text": "defined number phi\nto make sure that we understand what it means\nto have a polynomial here.",
    "start": "3063200",
    "end": "3071580"
  },
  {
    "text": "So remember, here we're just\ntaking the very first value.",
    "start": "3071580",
    "end": "3076710"
  },
  {
    "text": "But you are OK with\nputting a constant 0 or 1 and then adding up over\nall possible extensions,",
    "start": "3076710",
    "end": "3084240"
  },
  {
    "text": "all possible Boolean\nextensions to that. And maybe it's OK to put in a\nnon Boolean value here, like 7.",
    "start": "3084240",
    "end": "3092880"
  },
  {
    "text": "And then you take the\nremaining variables and assign them zeros and\nones in all possibilities and add it up.",
    "start": "3092880",
    "end": "3098820"
  },
  {
    "text": "Now I'm going to do something\neven a little wilder. I'm going to put in\na variable for a1.",
    "start": "3098820",
    "end": "3105190"
  },
  {
    "text": "Some symbolic, if you\nwant, symbolic value.",
    "start": "3105190",
    "end": "3111560"
  },
  {
    "text": "So I'm going to put\nin a value z for a1. So now I plug in z for a1 here.",
    "start": "3111560",
    "end": "3116920"
  },
  {
    "text": "And a2 through am are\ngoing to be zeros and ones in all possible ways.",
    "start": "3116920",
    "end": "3122710"
  },
  {
    "text": "So I just get a polynomial in z. The other variables get\nassigned and added up",
    "start": "3122710",
    "end": "3128580"
  },
  {
    "text": "over the various\nBoolean assignments. And now I get some polynomial. So I get some expression in z.",
    "start": "3128580",
    "end": "3134880"
  },
  {
    "text": "That's just going to be a\nsingle variable polynomial. ",
    "start": "3134880",
    "end": "3141348"
  },
  {
    "text": "Whose degree is it going to be? At most the degree\nof number phi.",
    "start": "3141348",
    "end": "3146940"
  },
  {
    "text": "So degree is not\ngoing to be too big. ",
    "start": "3146940",
    "end": "3152470"
  },
  {
    "text": "So it sends the\ncoefficients so the degree of that is not too big. So there are not too many\ncoefficients to send. ",
    "start": "3152470",
    "end": "3163140"
  },
  {
    "text": "So the coefficients are\nin terms of the xi's. No. I'm not sure what the mean--\nthe coefficients are not in terms-- the xi's\nare gone at this point.",
    "start": "3163140",
    "end": "3170760"
  },
  {
    "text": "The xi's, we've\nadded up the xi's being assigned to zeros and\nones in all possible ways.",
    "start": "3170760",
    "end": "3176790"
  },
  {
    "text": " So there are no\nother variables left. There's only z.",
    "start": "3176790",
    "end": "3184289"
  },
  {
    "text": "So I'm going to do the\nsame protocol in a more pictorial way in a minute.",
    "start": "3184290",
    "end": "3189730"
  },
  {
    "text": "So you're going to see\nthis whole thing twice. But try to get it. You'll have two\nchances to get this.",
    "start": "3189730",
    "end": "3195150"
  },
  {
    "text": "Try to get it. Try hard each time. ",
    "start": "3195150",
    "end": "3200880"
  },
  {
    "text": "So I've got send phi of\nz as a polynomial in z. Now, that's going to be\nenough for me to figure out",
    "start": "3200880",
    "end": "3206240"
  },
  {
    "text": "what number phi of 0\nand number phi of 1 is, because I plug it\nin for 0 and 1 for z.",
    "start": "3206240",
    "end": "3213710"
  },
  {
    "text": "But now I can figure\nout what number phi of 2 is also, because I can plug 2\nin for z or number phi of 7.",
    "start": "3213710",
    "end": "3221660"
  },
  {
    "text": "I plug 7 in for z.  So let's stop here and see\nare there other questions.",
    "start": "3221660",
    "end": "3229420"
  },
  {
    "text": "So is the size of number phi-- I don't understand.",
    "start": "3229420",
    "end": "3236660"
  },
  {
    "text": "This question about\nthe size of no phi. Is it 2 to the m? No, it's not 2 to the m, because\nthe degree of that polynomial,",
    "start": "3236660",
    "end": "3246830"
  },
  {
    "text": "number phi of z, I mean,\nit's a very large expression",
    "start": "3246830",
    "end": "3252480"
  },
  {
    "text": "if you want to initially--\nyes, it's going to be an exponentially big sum. But the prover adds\nit all up for you,",
    "start": "3252480",
    "end": "3260940"
  },
  {
    "text": "and you're just going to\nhave at most a small number of coefficients, because\nthe polynomial is only",
    "start": "3260940",
    "end": "3267600"
  },
  {
    "text": "of a certain degree. And a polynomial in one\nvariable of degree d",
    "start": "3267600",
    "end": "3273029"
  },
  {
    "text": "has at most d or d plus 1\ncoefficients to worry about. So it's not that many\ncoefficients as an expression.",
    "start": "3273030",
    "end": "3280460"
  },
  {
    "text": "So shouldn't the summation\ntake 2 to the m time? I'm not caring about\nthe prover's time.",
    "start": "3280460",
    "end": "3286630"
  },
  {
    "text": "The prover has a\nlot of work to do. But the prover sends phi of z.",
    "start": "3286630",
    "end": "3292600"
  },
  {
    "text": "So yes, the prover has\nan exponential job.",
    "start": "3292600",
    "end": "3298070"
  },
  {
    "text": "I don't care. The verifier needs to be able\nto check it in polynomial time. And that checking is going\nto, well, we'll have to see.",
    "start": "3298070",
    "end": "3305020"
  },
  {
    "text": "How does the verifier know\nthat that polynomial is right? That's a question maybe\nyou should be asking.",
    "start": "3305020",
    "end": "3311200"
  },
  {
    "start": "3311200",
    "end": "3317270"
  },
  {
    "text": "Yeah. I'm getting lots of\nquestions about how much time the prover needs to take. Yeah, the prover is going to\nhave to spend exponential time",
    "start": "3317270",
    "end": "3322878"
  },
  {
    "text": "to figure out that polynomial. That's all right. We don't care about\nthe prover's time. ",
    "start": "3322878",
    "end": "3332470"
  },
  {
    "text": "Yeah. So the summation here is going\nto be adding up polynomials. That is correct. ",
    "start": "3332470",
    "end": "3340539"
  },
  {
    "text": "I'm happy to spend time,\nbecause really here this is the whole proof. You have to understand. Well, we have to\nunderstand why this works.",
    "start": "3340540",
    "end": "3347260"
  },
  {
    "text": "But we kind of\nunderstand half of it, because knowing that\npolynomial is enough to--",
    "start": "3347260",
    "end": "3357530"
  },
  {
    "text": "if you could certify that that\nwas the correct polynomial for number phi of z, then\nwe can use that polynomial",
    "start": "3357530",
    "end": "3367760"
  },
  {
    "text": "to confirm the previous\nvalue, what number phi was, because you just plug\nin zeros and ones for z,",
    "start": "3367760",
    "end": "3374980"
  },
  {
    "text": "and you add it up.  But now how are we\ngoing to justify",
    "start": "3374980",
    "end": "3380977"
  },
  {
    "text": "that the polynomial is correct? Because this looks\nlike even a worse job. Now we have a whole\nbunch of coefficients and have to make sure all of\nthose coefficients are right.",
    "start": "3380978",
    "end": "3387770"
  },
  {
    "text": "And so instead of\njust two values, now we have d values where d is\nthe degree of that polynomial,",
    "start": "3387770",
    "end": "3393050"
  },
  {
    "text": "which could be at most\nthe length of the formula. ",
    "start": "3393050",
    "end": "3402280"
  },
  {
    "text": "So here is the next idea. ",
    "start": "3402280",
    "end": "3407930"
  },
  {
    "text": "So the prover needs to show\nthat phi of z is correct. ",
    "start": "3407930",
    "end": "3417130"
  },
  {
    "text": "The way it's going to do that,\nso even before we do that, so phi of z is going\nto be some polynomial.",
    "start": "3417130",
    "end": "3426940"
  },
  {
    "text": "Now, the prover may\nbe lying, may be sending the wrong polynomial. ",
    "start": "3426940",
    "end": "3435490"
  },
  {
    "text": "How does the prover\nconvince the verifier that the polynomial is\nthe right polynomial?",
    "start": "3435490",
    "end": "3442830"
  },
  {
    "text": "Well, that seems\nlike a tough job. So what it's going to do\nis remember that the--",
    "start": "3442830",
    "end": "3448450"
  },
  {
    "text": " so there is a correct\npolynomial that you",
    "start": "3448450",
    "end": "3457760"
  },
  {
    "text": "would get by plugging\nin to this expression for the correct value. So there's some\ncorrect polynomial.",
    "start": "3457760",
    "end": "3463220"
  },
  {
    "text": "The prover may be sending\nsome incorrect polynomial.",
    "start": "3463220",
    "end": "3468830"
  },
  {
    "text": "So now we have the correct\npolynomial and the possibly incorrect polynomial.",
    "start": "3468830",
    "end": "3474010"
  },
  {
    "text": "And the point is\nthose two can only agree in a small\nnumber of places",
    "start": "3474010",
    "end": "3479650"
  },
  {
    "text": "by that fact we proved a couple\nof lectures back regarding",
    "start": "3479650",
    "end": "3485109"
  },
  {
    "text": "polynomials. So two different polynomials\ncan agree only rarely.",
    "start": "3485110",
    "end": "3490840"
  },
  {
    "text": "So what we're going\nto do, the way the prover is going to justify\nthat this polynomial was the correct one, is by\nevaluating it at a random place",
    "start": "3490840",
    "end": "3501210"
  },
  {
    "text": "and then demonstrating\nthat that value you get is a correct value.",
    "start": "3501210",
    "end": "3507799"
  },
  {
    "text": "If the polynomial was\nthe wrong polynomial, then evaluating it\nat a random place",
    "start": "3507800",
    "end": "3514990"
  },
  {
    "text": "is probably going to disagree\nwith the correct polynomial at that place, because\nthey can only agree rarely.",
    "start": "3514990",
    "end": "3520810"
  },
  {
    "text": " So the prover is going\nto demonstrate that",
    "start": "3520810",
    "end": "3526780"
  },
  {
    "text": "by evaluating that polynomial at\na random place, that value you",
    "start": "3526780",
    "end": "3532720"
  },
  {
    "text": "get is going to be\nthe correct value, and it's going to continue\nto do that in the way,",
    "start": "3532720",
    "end": "3537740"
  },
  {
    "text": "using the same\nprotocol, as we'll see. So that's where we're going. So in order to show that\nphi of z is correct,",
    "start": "3537740",
    "end": "3544950"
  },
  {
    "text": "the verifier now gets to pick\na random value in the field. And the prover is going to show\nthat evaluating that polynomial",
    "start": "3544950",
    "end": "3553230"
  },
  {
    "text": "at r1 is correct. Remember this looks a lot\nlike what we had from before",
    "start": "3553230",
    "end": "3559530"
  },
  {
    "text": "where we were showing that\nnumber phi of 0 is correct and number phi of 1 is correct.",
    "start": "3559530",
    "end": "3565210"
  },
  {
    "text": "Now we're trying to show\nthat number phi of r1, this random value from\nthe field is correct.",
    "start": "3565210",
    "end": "3571870"
  },
  {
    "text": "So the way we're going\nto do that is now by unpacking it one level down.",
    "start": "3571870",
    "end": "3580380"
  },
  {
    "text": "And we're going to be using that\nidentity, because this value",
    "start": "3580380",
    "end": "3586589"
  },
  {
    "text": "here is going to be equal\nto number phi of r1 comma 0 plus number phi of r1 comma 1.",
    "start": "3586590",
    "end": "3595500"
  },
  {
    "text": "But we don't want to\nsend both of those. So we're going to\nsend them combined into a polynomial of\nnumber phi of r1 of z",
    "start": "3595500",
    "end": "3604079"
  },
  {
    "text": "as a polynomial in z. This is a new polynomial in z.",
    "start": "3604080",
    "end": "3609350"
  },
  {
    "text": "So now if you understood\nthe previous line, then hopefully this one\nwon't be too hard to swallow.",
    "start": "3609350",
    "end": "3616380"
  },
  {
    "text": "Because now we're going to\ncheck the identity, but here",
    "start": "3616380",
    "end": "3624190"
  },
  {
    "text": "by evaluating the polynomial\nagain but one level",
    "start": "3624190",
    "end": "3629200"
  },
  {
    "text": "at the next level. So this is perhaps a good\nplace to take questions,",
    "start": "3629200",
    "end": "3639060"
  },
  {
    "text": "because this is the-- this is really what I spent\nall the time setting things up",
    "start": "3639060",
    "end": "3644490"
  },
  {
    "text": "for so that you would be ready\nto get this thing hopefully without-- and hopefully be\nable to appreciate it",
    "start": "3644490",
    "end": "3651770"
  },
  {
    "text": "and understand it. ",
    "start": "3651770",
    "end": "3661970"
  },
  {
    "text": "So I'm not getting questions. Let's move on a little further. So now again, the\nprover had sent",
    "start": "3661970",
    "end": "3671140"
  },
  {
    "text": "this polynomial in stage two. ",
    "start": "3671140",
    "end": "3678370"
  },
  {
    "text": "Now the verifier\nneeds to be sure that that polynomial is correct. So it's going to evaluate\nthat new polynomial",
    "start": "3678370",
    "end": "3687370"
  },
  {
    "text": "at a random location.  So by picking a random\nvalue r2 in the field.",
    "start": "3687370",
    "end": "3697050"
  },
  {
    "text": "And now we need to show\nthat this value is correct,",
    "start": "3697050",
    "end": "3702970"
  },
  {
    "text": "because if that polynomial\nhad been the wrong polynomial, it disagreed with the correct\npolynomial almost everywhere.",
    "start": "3702970",
    "end": "3708970"
  },
  {
    "text": "And by picking a\nrandom place, it's probably not going to be\nthe right value and so on.",
    "start": "3708970",
    "end": "3716060"
  },
  {
    "text": "Until we get to the end where\nwe have almost all of the values",
    "start": "3716060",
    "end": "3726960"
  },
  {
    "text": "have been picked, and so\nwe have one last value to select a 0 and 1.",
    "start": "3726960",
    "end": "3732869"
  },
  {
    "text": "This corresponds to the n-th. It would be great if I could put\nboth pictures on your screen,",
    "start": "3732870",
    "end": "3740309"
  },
  {
    "text": "but I can't. So this very much\ncorresponds to what happened in the\nexponential protocol",
    "start": "3740310",
    "end": "3745920"
  },
  {
    "text": "but just along sort of this\narithmetization single path.",
    "start": "3745920",
    "end": "3752099"
  },
  {
    "text": "So it checks that\nthe previous value",
    "start": "3752100",
    "end": "3758120"
  },
  {
    "text": "is correct in terms of\nexpanding it with 0 and 1. But again, the 0 and 1 comes\nfrom evaluating the polynomial.",
    "start": "3758120",
    "end": "3765710"
  },
  {
    "text": " And now the verifier\nneeds to be convinced",
    "start": "3765710",
    "end": "3772060"
  },
  {
    "text": "that that polynomial was right. So it picks a random\nvalue, but now it",
    "start": "3772060",
    "end": "3777160"
  },
  {
    "text": "doesn't rely on\nthe prover anymore. It's going to see whether\nthat assignment that it gets",
    "start": "3777160",
    "end": "3790950"
  },
  {
    "text": "by evaluating the polynomial\nwith that random value rn plugged in is the same as\nwhat I get by evaluating",
    "start": "3790950",
    "end": "3798510"
  },
  {
    "text": "the polynomial for\nthe formula itself that the verifier\ncan do directly.",
    "start": "3798510",
    "end": "3805850"
  },
  {
    "text": "Because this is now a\npolynomial now just plugging into the formula and\nusing the arithmetization",
    "start": "3805850",
    "end": "3812270"
  },
  {
    "text": "to get a value out.  So this was the last\nline of the identity.",
    "start": "3812270",
    "end": "3819290"
  },
  {
    "text": " We had those two identities.",
    "start": "3819290",
    "end": "3825000"
  },
  {
    "text": "So this is the second identity. And we had to check\nthat this is correct. ",
    "start": "3825000",
    "end": "3832530"
  },
  {
    "text": "So I'm going to show\nthis to you in a picture. ",
    "start": "3832530",
    "end": "3838760"
  },
  {
    "text": "Not sure it'll help\nif you're confused. But why don't we take\nsome questions on this?",
    "start": "3838760",
    "end": "3845430"
  },
  {
    "text": "So as I said, I'm\ngoing to give you two chances to understand this. Because I know it's tough.",
    "start": "3845430",
    "end": "3851790"
  },
  {
    "text": "Especially with the\nconstraints of Zoom, this is a particularly\nchallenging idea to explain. ",
    "start": "3851790",
    "end": "3861510"
  },
  {
    "text": "OK, so let's see. So the benefit of this approach\nis that the prover only",
    "start": "3861510",
    "end": "3866790"
  },
  {
    "text": "sends one item for each\ndepth level instead of multiple items. That's right. But that one item\nis the polynomial.",
    "start": "3866790",
    "end": "3875280"
  },
  {
    "text": "So that captures all of the\nvalues for the entire field.",
    "start": "3875280",
    "end": "3880700"
  },
  {
    "text": "But taking advantage\nof the arithmetization, that one polynomial has a\nlot of information in it.",
    "start": "3880700",
    "end": "3888859"
  },
  {
    "text": "And what's nice is\nthat you can check that polynomial by just\nevaluating it at one random place.",
    "start": "3888860",
    "end": "3894293"
  },
  {
    "text": "You can check that that\npolynomial is correct. ",
    "start": "3894293",
    "end": "3909310"
  },
  {
    "text": "So I'm getting\nanother question here. Where does this come from here? V checks that this here.",
    "start": "3909310",
    "end": "3916010"
  },
  {
    "text": "So this where does this-- so you have to look--\nto understand where this is coming from, you have\nto-- we're at the n-th round",
    "start": "3916010",
    "end": "3923720"
  },
  {
    "text": "now. So you have to look\nback like at round two. V has to check that\nphi of r1, which",
    "start": "3923720",
    "end": "3930700"
  },
  {
    "text": "comes from the end\nof the first round. So this checks\nthat this phi of r1",
    "start": "3930700",
    "end": "3936820"
  },
  {
    "text": "is correct because that was\nhow we justified the polynomial",
    "start": "3936820",
    "end": "3942610"
  },
  {
    "text": "with just a single variable. The very first\npolynomial was correct.",
    "start": "3942610",
    "end": "3948860"
  },
  {
    "text": "A little hard to say. But this comes from the\nprevious round, this guy here.",
    "start": "3948860",
    "end": "3954520"
  },
  {
    "start": "3954520",
    "end": "3960230"
  },
  {
    "text": "So this is the polynomial\nfor the current round. This is the value from\nthe previous round.",
    "start": "3960230",
    "end": "3966410"
  },
  {
    "text": "All right. More questions. ",
    "start": "3966410",
    "end": "3977060"
  },
  {
    "text": "So why doesn't this run\nin exponential time? Another question I'm getting. Doesn't V need to check\ntwice at each layer?",
    "start": "3977060",
    "end": "3982280"
  },
  {
    "text": "Yes. The verifier needs to check-- ",
    "start": "3982280",
    "end": "3989579"
  },
  {
    "text": "gets two values,\nbut those two values come from the one polynomial.",
    "start": "3989580",
    "end": "3996040"
  },
  {
    "text": "So there's no blow up anymore. Those two values. Maybe you'll see it in the\npicture that I'm going to show.",
    "start": "3996040",
    "end": "4001945"
  },
  {
    "text": "So maybe just hold\nthat question. Maybe this will become\nclearer in the diagram. ",
    "start": "4001945",
    "end": "4012717"
  },
  {
    "text": "So another question. Does this work because the\npolynomial kind of encodes all the possible\nvalues together?",
    "start": "4012717",
    "end": "4019080"
  },
  {
    "text": "I think that's sort of true. It sort of mixes them all\ntogether into one object. Then you have to\ncheck that one object,",
    "start": "4019080",
    "end": "4025620"
  },
  {
    "text": "which can be done with this\nsort of random probing of it. ",
    "start": "4025620",
    "end": "4037770"
  },
  {
    "text": "So this is another good\nquestion that we'll see explained in the next slide. ",
    "start": "4037770",
    "end": "4044040"
  },
  {
    "text": "So similarly in\nattempt one, the prover can keep lying by\npicking polynomials",
    "start": "4044040",
    "end": "4051480"
  },
  {
    "text": "by continuing to\npick polynomials, by lying about the polynomials. But eventually it's going to get\ncaught, because this value is",
    "start": "4051480",
    "end": "4058788"
  },
  {
    "text": "going to be the wrong value.  If the polynomial in the\nprevious stage and the m",
    "start": "4058788",
    "end": "4065160"
  },
  {
    "text": "minus-- if a polynomial that the\nprover sent in the m stage is the wrong polynomial,\nthen you evaluate it,",
    "start": "4065160",
    "end": "4073200"
  },
  {
    "text": "you're going to get the\nwrong value probably. And so then that\nwrong value is not",
    "start": "4073200",
    "end": "4079859"
  },
  {
    "text": "going to match the\ncorrect value, which is you can read off yourself\nby reading the formula.",
    "start": "4079860",
    "end": "4086670"
  },
  {
    "text": "I think we need to move\non to the next slide. ",
    "start": "4086670",
    "end": "4092090"
  },
  {
    "text": "All right. So same proof, version\ntwo, but looks different.",
    "start": "4092090",
    "end": "4099330"
  },
  {
    "text": "Again, the input is that. Here is what the prover sends. Here is what the verifier sends.",
    "start": "4099330",
    "end": "4104790"
  },
  {
    "text": "I'm going to sort of whimsically\ndesign this as a telephone chat",
    "start": "4104790",
    "end": "4111149"
  },
  {
    "text": "where they're sending each other\nmessages through messaging. So the prover sends the\nnumber phi to start off with.",
    "start": "4111149",
    "end": "4120450"
  },
  {
    "text": "And then off on the side,\nthese are the checks that the verifier is\ngoing to be doing. So here in our first\nround of the chat,",
    "start": "4120450",
    "end": "4128540"
  },
  {
    "text": "the prover is going\nto send phi of z. Remember this is\njust a polynomial",
    "start": "4128540",
    "end": "4135979"
  },
  {
    "text": "in not too many coefficients. So it's a polynomial\nin one variable.",
    "start": "4135979",
    "end": "4141380"
  },
  {
    "text": "The degree is small. So there are not too\nmany coefficients here. So this is just pretending this\nis what it might look like.",
    "start": "4141380",
    "end": "4149089"
  },
  {
    "text": "So from that polynomial, the\nverifier can plug in 0 and 1",
    "start": "4149090",
    "end": "4155429"
  },
  {
    "text": "and see that that adds up.  Now the verifier, to check that\nthis polynomial is correct,",
    "start": "4155430",
    "end": "4163140"
  },
  {
    "text": "it picks a random value to\nevaluate this polynomial on. ",
    "start": "4163140",
    "end": "4169220"
  },
  {
    "text": "And so now it's going to have\nto check that this is correct. So this is nothing to check. You're just writing this down in\nanticipation of the next check.",
    "start": "4169220",
    "end": "4177520"
  },
  {
    "text": "Now, the prover to justify\nthat this value is right,",
    "start": "4177520",
    "end": "4184470"
  },
  {
    "text": "that this polynomial is\nright, so we evaluate--",
    "start": "4184470",
    "end": "4190700"
  },
  {
    "text": "the prover in order to check\nthat this value is right",
    "start": "4190700",
    "end": "4195800"
  },
  {
    "text": "is going to send the\npolynomial for the next level.",
    "start": "4195800",
    "end": "4201260"
  },
  {
    "text": "Now, we can from that, we\ncan plug in 0 and 1 for z. See if that adds up.",
    "start": "4201260",
    "end": "4208250"
  },
  {
    "text": "And now to be sure that\nthis polynomial is right, we evaluate it at a random\nplace, calculate that value,",
    "start": "4208250",
    "end": "4217800"
  },
  {
    "text": "and then have to see that\nthis value is correct.",
    "start": "4217800",
    "end": "4228329"
  },
  {
    "text": "So now we expand to\none level further. We take a polynomial\nfor the next variable.",
    "start": "4228330",
    "end": "4235330"
  },
  {
    "text": "And we see that adds up. OK, I'm not sure whether\nthis is helping or not.",
    "start": "4235330",
    "end": "4244060"
  },
  {
    "text": "But we keep doing\nthat until we get to the very last round with a\nprover sending a polynomial.",
    "start": "4244060",
    "end": "4250970"
  },
  {
    "text": "Make sure that this\nadds up correctly. And the verifier to see that\nthis polynomial is right",
    "start": "4250970",
    "end": "4258840"
  },
  {
    "text": "picks a random value and\nevaluates it and now checks",
    "start": "4258840",
    "end": "4265260"
  },
  {
    "text": "that this agrees\nwith the formula. Because we've now assigned\nall of the variables. And then we can check\nthis number phi directly",
    "start": "4265260",
    "end": "4273870"
  },
  {
    "text": "in terms of the phi,\nbecause they have to agree.",
    "start": "4273870",
    "end": "4279120"
  },
  {
    "text": "And so the verifier would\naccept if everything checks out. Let's see what happens. So this answer will\nanswer some questions.",
    "start": "4279120",
    "end": "4285810"
  },
  {
    "text": " Why don't I walk through what\nhappens if the input was wrong.",
    "start": "4285810",
    "end": "4296120"
  },
  {
    "text": "And we'll see how\nthe verifier is",
    "start": "4296120",
    "end": "4301160"
  },
  {
    "text": "likely to catch the prover\nbut not guaranteed to catch the prover in this case. ",
    "start": "4301160",
    "end": "4308540"
  },
  {
    "text": "So if k was correct,\nthe verifier will accept with\nthe honest prover. But if k was wrong,\nso I'm going to,",
    "start": "4308540",
    "end": "4315740"
  },
  {
    "text": "again, indicate the\nwrong values in red.  I want to show you that the\nverifier is almost certainly",
    "start": "4315740",
    "end": "4323210"
  },
  {
    "text": "going to accept\nbut not guaranteed. So did I say that wrong?",
    "start": "4323210",
    "end": "4331170"
  },
  {
    "text": "So if k is wrong, the verifier\nis going to probably reject, but it's not\nguaranteed to reject. ",
    "start": "4331170",
    "end": "4338800"
  },
  {
    "text": "So first of all, if the\nprover does not lie, does not send the wrong\nvalue for number phi,",
    "start": "4338800",
    "end": "4345080"
  },
  {
    "text": "The verifier is certainly\ngoing to reject, because it's not going\nto get any quality there. ",
    "start": "4345080",
    "end": "4351540"
  },
  {
    "text": "So the prover has to lie. Say if k was 99 but\nthe real value was",
    "start": "4351540",
    "end": "4359530"
  },
  {
    "text": "100, the prover if it\nsays 100, the verifier's going to reject immediately. So the prover's\ngoing to say, well,",
    "start": "4359530",
    "end": "4367390"
  },
  {
    "text": "let's see what the prover can do\nto make the verifier hopefully",
    "start": "4367390",
    "end": "4373990"
  },
  {
    "text": "accept from the\nprover's standpoint. So the prover is\ngoing to send 99. Well, the verifier\nsays, OK, 99, fine.",
    "start": "4373990",
    "end": "4381100"
  },
  {
    "text": "Convince me. So the prover-- now one of\nthese two is going to be wrong.",
    "start": "4381100",
    "end": "4386290"
  },
  {
    "text": " Because the two correct\nvalues can't add up to the wrong value.",
    "start": "4386290",
    "end": "4392170"
  },
  {
    "text": "So one of these is wrong. So that means the prover had\nto send the wrong polynomial.",
    "start": "4392170",
    "end": "4397820"
  },
  {
    "text": "Because the correct polynomial\nwould evaluate the correct answers here. So the prover had to send\nthe wrong polynomial.",
    "start": "4397820",
    "end": "4404130"
  },
  {
    "text": "So now when we evaluate\nit at a random place, chances are this is going to\nbe the wrong-- this is not",
    "start": "4404130",
    "end": "4410860"
  },
  {
    "text": "going to be the same value that\nthe correct polynomial would have given you. The prover could get lucky.",
    "start": "4410860",
    "end": "4417850"
  },
  {
    "text": "The verifier might\nhave just happened to pick a place where\nthe correct polynomial and the incorrect\npolynomial agree.",
    "start": "4417850",
    "end": "4424420"
  },
  {
    "text": "In that place, the prover\nwill think, huh, I'm saved. Now I can act like the honest\nprover from this point on",
    "start": "4424420",
    "end": "4432850"
  },
  {
    "text": "and the verifier\nwill never catch me. It's sort of a little bit\nanalogous to the situation",
    "start": "4432850",
    "end": "4440230"
  },
  {
    "text": "maybe--  I'm trying to see if you really\nstudied the whole course.",
    "start": "4440230",
    "end": "4446770"
  },
  {
    "text": "So I'm giving you an exam by\npicking sort of random places there. But maybe you just studied\na few facts from the course.",
    "start": "4446770",
    "end": "4456690"
  },
  {
    "text": "You might get lucky. I might happen to ask\njust about those facts. And then you give the appearance\nof having studied everything,",
    "start": "4456690",
    "end": "4463590"
  },
  {
    "text": "but you really didn't. So here the prover might\nsend the wrong polynomial, but the verifier\njust queries that",
    "start": "4463590",
    "end": "4470030"
  },
  {
    "text": "at the place where\nit happens to agree with the correct polynomial,\nand the prover just gets lucky. And the verifier is going\nto accept, in that case.",
    "start": "4470030",
    "end": "4477180"
  },
  {
    "text": "But there are very few of those. So that's why the prover\nis almost certainly to be caught if it tries to lie.",
    "start": "4477180",
    "end": "4484110"
  },
  {
    "text": "But not guaranteed. So just tracing this down.",
    "start": "4484110",
    "end": "4490920"
  },
  {
    "text": "If this was a lie, then one\nof those two has to be a lie. So therefore, the next\npolynomial has to be a lie.",
    "start": "4490920",
    "end": "4497969"
  },
  {
    "text": "And so we continue. So then the next value is almost\ncertainly going to be a lie. Not guaranteed. And so then one of those\ntwo values has to be a lie.",
    "start": "4497970",
    "end": "4506210"
  },
  {
    "text": "At least one has to be a lie. Therefore, the polynomial has\nto be a lie and so on until--",
    "start": "4506210",
    "end": "4514903"
  },
  {
    "text": "unless the prover got lucky\nalong the way somewhere, which is very unlikely,\neven though it has a several opportunities.",
    "start": "4514903",
    "end": "4521120"
  },
  {
    "text": "We've arranged it so that\nthe chance of getting lucky is tiny at each stage.",
    "start": "4521120",
    "end": "4526289"
  },
  {
    "text": "So even though he\nhas a few chances, there's still going to be\na tiny chance that you're going to get lucky somewhere.",
    "start": "4526290",
    "end": "4531320"
  },
  {
    "text": "And so this is wrong, then\nchances are that's wrong. And so therefore, this is\ngoing to be a disagreement.",
    "start": "4531320",
    "end": "4538850"
  },
  {
    "text": "And the verifier at that\npoint when it doesn't agree is going to reject.",
    "start": "4538850",
    "end": "4544323"
  },
  {
    "text": "Unless the prover got lucky\nsomewhere along the way, which is unlikely. So I don't know if you had--",
    "start": "4544323",
    "end": "4553040"
  },
  {
    "text": "so that's all I was going\nto say about this proof. I don't know if you had\nany questions on it,",
    "start": "4553040",
    "end": "4558170"
  },
  {
    "text": "but let's just see. OK. So do we have any\nquestions I can answer?",
    "start": "4558170",
    "end": "4567840"
  },
  {
    "text": "How the prover gets-- how does a prover get number--",
    "start": "4567840",
    "end": "4573800"
  },
  {
    "text": "how does the prover\nget number phi of z? ",
    "start": "4573800",
    "end": "4582430"
  },
  {
    "text": "So you have to-- why is number phi of z\nhave no other variables?",
    "start": "4582430",
    "end": "4587679"
  },
  {
    "text": "You have to go back and\nlook at the definition of number phi of a. Because you add up over\nall the other variables.",
    "start": "4587680",
    "end": "4595760"
  },
  {
    "text": "So now instead of a, we're\nplugging a variable for that. But you're still adding up\nover the other variables.",
    "start": "4595760",
    "end": "4601310"
  },
  {
    "text": "So this is a function in just\none variable, because it--",
    "start": "4601310",
    "end": "4608230"
  },
  {
    "text": "the original thing\nwas a polynomial. This is also going\nto be polynomial. I think we're starting\nto run low on time.",
    "start": "4608230",
    "end": "4615140"
  },
  {
    "text": "So this is our very last check\nin for the semester here. So of course there's one\nnatural question to ask you all.",
    "start": "4615140",
    "end": "4625580"
  },
  {
    "text": "And for our very last\ncheck in, as we're in our last couple of minutes\nof the course or at least",
    "start": "4625580",
    "end": "4631790"
  },
  {
    "text": "the lectures, does P equal NP?",
    "start": "4631790",
    "end": "4637500"
  },
  {
    "text": "What do you think? ",
    "start": "4637500",
    "end": "4644660"
  },
  {
    "text": "Will maybe PB equal NPB solved\nby a deep learning algorithm? Or maybe we'll never prove it.",
    "start": "4644660",
    "end": "4653050"
  },
  {
    "text": "Give me your best guess. We're kind of\nrunning out of time. So let's not think\ntoo hard here.",
    "start": "4653050",
    "end": "4661470"
  },
  {
    "text": "Another five seconds. ",
    "start": "4661470",
    "end": "4666849"
  },
  {
    "text": "All right. Ending polling. I'll share that with you.",
    "start": "4666850",
    "end": "4672070"
  },
  {
    "text": "Oh, I did share. So what did we get? D here. We will prove it in somewhere\nbetween 20 and 100 years",
    "start": "4672070",
    "end": "4679310"
  },
  {
    "text": "from now. That seems to be the\nmajority opinion. ",
    "start": "4679310",
    "end": "4684460"
  },
  {
    "text": "I don't know. I hope it'll be sooner\nthan that, because I'd like to see the answer.",
    "start": "4684460",
    "end": "4690520"
  },
  {
    "text": "But we don't know. ",
    "start": "4690520",
    "end": "4695670"
  },
  {
    "text": "Yeah, if you can prove\nP different from NP, I'll give you an A+. You won't have to\ntake the final.",
    "start": "4695670",
    "end": "4701395"
  },
  {
    "text": "But you better be\nsure you're right. All right. So that is our quick review.",
    "start": "4701395",
    "end": "4707850"
  },
  {
    "text": "We finished number set in\nIP and therefore that coNP is a subset of IP.",
    "start": "4707850",
    "end": "4715410"
  },
  {
    "text": "If you're interested in further\npursuit of this material, I got a couple of\nquestions on that.",
    "start": "4715410",
    "end": "4720690"
  },
  {
    "text": "These are some courses\nyou may want to look at. I know I checked\nwith Ryan Williams.",
    "start": "4720690",
    "end": "4727980"
  },
  {
    "text": "He's planning to teach\nAdvanced Complexity fall 2021.",
    "start": "4727980",
    "end": "4733680"
  },
  {
    "text": "So that's going to be the\nmost natural follow-on subject",
    "start": "4733680",
    "end": "4739140"
  },
  {
    "text": "to this one. There's the crypto\nclasses also are kind of make use of\nsome of the same ideas.",
    "start": "4739140",
    "end": "4745025"
  },
  {
    "text": "And there's, of course,\nalso randomness computation that Ronitt Rubinfeld teaches. If I didn't check with her.",
    "start": "4745025",
    "end": "4750330"
  },
  {
    "text": "I'm not sure the next time\nshe's going to be teaching that. ",
    "start": "4750330",
    "end": "4755710"
  },
  {
    "text": "And good luck on the\nfinal and best wishes.",
    "start": "4755710",
    "end": "4762912"
  },
  {
    "text": "And I'm going to\nhave office hours. So if you have any questions,\nhappy to answer those.",
    "start": "4762912",
    "end": "4769320"
  },
  {
    "text": "But otherwise, see you all. Good luck. ",
    "start": "4769320",
    "end": "4775705"
  },
  {
    "text": "Thank you for the comments. Yeah, I enjoyed having\nyou all as students. It was a fun time.",
    "start": "4775705",
    "end": "4781000"
  },
  {
    "text": "A lot of work, but\nit was a fun time. I've always been intrigued\nby the P versus NP problem,",
    "start": "4781000",
    "end": "4786719"
  },
  {
    "text": "and I proved a kind of a-- ",
    "start": "4786720",
    "end": "4793490"
  },
  {
    "text": "I proved the\nexponential complexity of computing the parity\nfunction in a certain weak model",
    "start": "4793490",
    "end": "4800210"
  },
  {
    "text": "of computation. So parity function is obviously\nvery trivial function.",
    "start": "4800210",
    "end": "4806690"
  },
  {
    "text": "But for the parity function,\nif you can't count,",
    "start": "4806690",
    "end": "4812610"
  },
  {
    "text": "whatever that means,\nbut there is a model you can kind of set up\nwhere you can't count.",
    "start": "4812610",
    "end": "4817980"
  },
  {
    "text": "Then parity requires\nexponential complexity.",
    "start": "4817980",
    "end": "4823020"
  },
  {
    "text": "And surprisingly,\nnot easy to prove. But that's probably the theorem\nthat I'm most known for.",
    "start": "4823020",
    "end": "4830010"
  },
  {
    "text": "Anyway. But that would be a\ntopic for another day. Another question.",
    "start": "4830010",
    "end": "4835620"
  },
  {
    "text": "Why not include\nMyhill-Nerode theorem.",
    "start": "4835620",
    "end": "4840918"
  },
  {
    "text": "I don't know. That's a theorem\nabout finite automata and all of those ways\nof characterizing the regular languages.",
    "start": "4840918",
    "end": "4846620"
  },
  {
    "text": "That seems kind of\na technical theorem. I don't see much\npoint in covering it.",
    "start": "4846620",
    "end": "4851990"
  },
  {
    "text": "And another question that\nsome of my colleagues ask me is why don't I\nhave Rice's theorem, which",
    "start": "4851990",
    "end": "4857000"
  },
  {
    "text": "sort of provides a\nkind of a machine for proving undecidability. And I don't know.",
    "start": "4857000",
    "end": "4862730"
  },
  {
    "text": "I think that you can use Rice's\ntheorem without understanding how to prove undecidability.",
    "start": "4862730",
    "end": "4868680"
  },
  {
    "text": " It's like checking off a box.",
    "start": "4868680",
    "end": "4875650"
  },
  {
    "text": "Checking some boxes and then you\nconclude something's undecided. I'd rather have\nsomebody understand it",
    "start": "4875650",
    "end": "4881830"
  },
  {
    "text": "rather than be able to\nuse some powerful tool. ",
    "start": "4881830",
    "end": "4887719"
  },
  {
    "text": "Can we understand that\nproof about the parity function that I just alluded to?",
    "start": "4887720",
    "end": "4893530"
  },
  {
    "text": "It's super hard. With the knowledge from\nthis class, I think you can.",
    "start": "4893530",
    "end": "4898685"
  },
  {
    "text": " That theorem relies\non a certain technique",
    "start": "4898685",
    "end": "4905440"
  },
  {
    "text": "which we didn't cover called\nthe probabilistic method, which is a kind of an amazing method.",
    "start": "4905440",
    "end": "4911260"
  },
  {
    "text": "Not hard to explain,\nbut basically you show that something\nexists by showing",
    "start": "4911260",
    "end": "4916900"
  },
  {
    "text": "that the probability\nthat a random object has the property you're\nlooking for is more than 0.",
    "start": "4916900",
    "end": "4925585"
  },
  {
    "text": "And so therefore,\nthe thing that you're looking for that has that\nproperty has to exist. ",
    "start": "4925585",
    "end": "4931863"
  },
  {
    "text": "There are lots of examples\nof that these days. But it's kind of\nan amazing method. So we use that method.",
    "start": "4931863",
    "end": "4937500"
  },
  {
    "text": "Do I think quantum computing\ncan solve useful problems beyond the capability\nof computers?",
    "start": "4937500",
    "end": "4942758"
  },
  {
    "text": "I have no idea\nwhether one can really build a quantum computer. It seems to be always\n20 years off at least to doing one that factors.",
    "start": "4942758",
    "end": "4948960"
  },
  {
    "text": "And I've been literally\nI remember people 20 years ago saying\nit's 20 years off.",
    "start": "4948960",
    "end": "4954470"
  },
  {
    "text": "So I don't think\nit's converging. I'm skeptical that they'll ever\nbuild a quantum computer that",
    "start": "4954470",
    "end": "4961349"
  },
  {
    "text": "can factor. I'll go out on a\nlimb and say that. But that's controversial. ",
    "start": "4961350",
    "end": "4969372"
  },
  {
    "text": "And whether it can solve\nother useful problems, I'm not sure what other\nuseful problems are there. Well, I guess they're\nsimulating quantum systems.",
    "start": "4969372",
    "end": "4975620"
  },
  {
    "text": "So maybe that might be possible.  All right.",
    "start": "4975620",
    "end": "4981100"
  },
  {
    "text": "I think I'm going\nto end this now.",
    "start": "4981100",
    "end": "4986370"
  },
  {
    "text": "But thank you, everybody. Take care. Bye bye.",
    "start": "4986370",
    "end": "4991610"
  },
  {
    "start": "4991610",
    "end": "5009000"
  }
]