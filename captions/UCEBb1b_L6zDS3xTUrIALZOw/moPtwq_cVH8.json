[
  {
    "start": "0",
    "end": "83000"
  },
  {
    "text": " The following\ncontent is provided under a Creative\nCommons license. Your support will help MIT\nOpenCourseWare continue",
    "start": "0",
    "end": "6860"
  },
  {
    "text": "to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6860",
    "end": "13330"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13330",
    "end": "22720"
  },
  {
    "text": "PROFESSOR: Today, we are going\nto do computational complexity. This is rather different\nfrom every other thing",
    "start": "22720",
    "end": "28989"
  },
  {
    "text": "we've seen in this class.  This class is basically about\npolynomial time algorithms",
    "start": "28989",
    "end": "36120"
  },
  {
    "text": "and problems where we\ncan solve your problem in polynomial time. And today, it's about\nwhen you can't do that.",
    "start": "36120",
    "end": "43130"
  },
  {
    "text": "Sometimes, we can prove\nyou can't do that. Sometimes, we're pretty\nsure you can't do that. But it's all about\nnegative results",
    "start": "43130",
    "end": "49140"
  },
  {
    "text": "when your problems\nare really complex. And there's a lot\nof fun topics, here.",
    "start": "49140",
    "end": "55039"
  },
  {
    "text": "This is the topic of\nentire classes, like 6045. We're just going to get\na 1 hour flavor of it.",
    "start": "55040",
    "end": "62949"
  },
  {
    "text": "So think of it as\na high level intro. But we're going to prove real\ntheorems and do real things and you'll get a sense\nof how all this works.",
    "start": "62950",
    "end": "69579"
  },
  {
    "text": "So I'm going to start out with\nthree complexity classes-- P, EXP, and R. How many\npeople know what P is?",
    "start": "69580",
    "end": "81390"
  },
  {
    "text": "And it is? Polynomial time. More precisely, it's\nthe set of all problems",
    "start": "81390",
    "end": "88509"
  },
  {
    "text": "you can solve in\npolynomial time. ",
    "start": "88510",
    "end": "95590"
  },
  {
    "text": "This is what the\nclass is all about.  Almost every\nproblem we have seen",
    "start": "95590",
    "end": "101110"
  },
  {
    "text": "in this class-- there's\none exception-- is in P. Does anyone\nknow the exception?",
    "start": "101110",
    "end": "108960"
  },
  {
    "text": "It's a good puzzle for you. Not NP. What's next? EXP.",
    "start": "108960",
    "end": "115120"
  },
  {
    "text": "How many people\nknow what EXP is? Or you can guess. Any guesses?",
    "start": "115120",
    "end": "120399"
  },
  {
    "text": "Exponential. These are all the problems you\ncan solve in exponential time. ",
    "start": "120400",
    "end": "141190"
  },
  {
    "text": "If you want to be formal\nabout it, in this case, exponential means 2 to\nthe n to some constant.",
    "start": "141190",
    "end": "149200"
  },
  {
    "text": "So not just 2 the n, but also\n2 to the n squared, 2 to the n cubed. Those are all\nconsidered-- exponential",
    "start": "149200",
    "end": "154350"
  },
  {
    "text": "and a polynomial is\nconsidered in the class EXP. Now, basically, almost every\nproblem you can dream of you",
    "start": "154350",
    "end": "162010"
  },
  {
    "text": "can solve in EXP. Exponential time\nis so much time. And this class has always\nbeen about taking things that",
    "start": "162010",
    "end": "167705"
  },
  {
    "text": "are obviously in EXP and showing\nthat they're actually in P. So if you want to\ndraw a picture,",
    "start": "167705",
    "end": "173120"
  },
  {
    "text": "you could say, OK,\nhere's all the problems we can solve in polynomial time. Here's all the problems we\ncan solve in exponential time.",
    "start": "173120",
    "end": "180287"
  },
  {
    "text": "And there are problems out here. These are different classes. And we want to sort\nof bring things",
    "start": "180287",
    "end": "186069"
  },
  {
    "text": "into here as much as possible. I actually want to\ndraw this picture",
    "start": "186070",
    "end": "191940"
  },
  {
    "text": "in a different way, which\nis as a horizontal line. ",
    "start": "191940",
    "end": "200760"
  },
  {
    "text": "So an axis.  I'm going to call this\ncomputational difficulty.",
    "start": "200760",
    "end": "207949"
  },
  {
    "text": "You could call it\ncomputational complexity, but that's a bit of\na loaded term that actually has formal meaning. Difficulty is nice and vague.",
    "start": "207949",
    "end": "214000"
  },
  {
    "text": "So I can draw an\nabstract picture. This is not a true\ndiagram, but it's a very good guideline\nof what's going on.",
    "start": "214000",
    "end": "220770"
  },
  {
    "text": "So we have-- I'm going to draw--\nI believe-- three notches.",
    "start": "220770",
    "end": "226905"
  },
  {
    "text": " No, eventually four, so let\nme give myself some room.",
    "start": "226905",
    "end": "232770"
  },
  {
    "text": " We have over here, the\neasy problems are P. Then,",
    "start": "232770",
    "end": "241920"
  },
  {
    "text": "we have these problems,\nwhich are EXP. We're going to fill in\nsomething in the middle.",
    "start": "241920",
    "end": "248930"
  },
  {
    "text": "And then this is\nsomething called R. So you've got P is\neverything, here. EXP is all the way out to\nhere, in some abstract view.",
    "start": "248930",
    "end": "259140"
  },
  {
    "text": "The next thing is R. How\nmany people know what R is? This one, I had to look up.",
    "start": "259140",
    "end": "266250"
  },
  {
    "text": "It's not usually given a name. No one. Teaching staff?",
    "start": "266250",
    "end": "271430"
  },
  {
    "text": "You guys know it? ",
    "start": "271430",
    "end": "276500"
  },
  {
    "text": "These are all problems\nsolvable in finite time. R stands for finite. ",
    "start": "276500",
    "end": "289980"
  },
  {
    "text": "R stands for recursive. Recursive used to mean\nsomething completely different, back in the '30s, when people\nwere thinking about what's",
    "start": "289980",
    "end": "296863"
  },
  {
    "text": "computable, what's\nnot computable. These are, basically, solvable\nproblems, computable problems.",
    "start": "296863",
    "end": "302390"
  },
  {
    "text": "Finite time is a reasonable\nrequirement, I think, for all algorithms. And that's R. Now,\nI've drawn this arrow",
    "start": "302390",
    "end": "309690"
  },
  {
    "text": "to keep going because there\nare problems out here. It's kind of\ndiscouraging, but there are problems that\nare unsolvable.",
    "start": "309690",
    "end": "317080"
  },
  {
    "text": "In fact, most problems\nare unsolvable. We're going to prove that. It's actually really\neasy to prove.",
    "start": "317080",
    "end": "323340"
  },
  {
    "text": "Kind of depressing, but true.",
    "start": "323340",
    "end": "328360"
  },
  {
    "start": "326000",
    "end": "510000"
  },
  {
    "text": "Let me start with some examples\nbefore we get to that proof. ",
    "start": "328360",
    "end": "336200"
  },
  {
    "text": "So I'm writing examples\nof some things we've seen. So here's an example of\na problem we've seen.",
    "start": "336200",
    "end": "344170"
  },
  {
    "text": " Negative-weight cycle detection. ",
    "start": "344170",
    "end": "352314"
  },
  {
    "text": "I give you a graph--\na weighted graph. I want to know does it have\nany negative-weight cycles?",
    "start": "352314",
    "end": "358090"
  },
  {
    "text": "What classes is this problem in? P. We know how to solve\nthis in polynomial time-- in VE time-- using Bellman-Ford.",
    "start": "358090",
    "end": "366259"
  },
  {
    "text": "VE time-- well, that finds\nnegative-weight cycles reachable from s. But, I guess, if you\nadd a source that",
    "start": "366260",
    "end": "371370"
  },
  {
    "text": "can reach anywhere--\nzero weight-- then that'll tell you\noverall that it's in P.",
    "start": "371370",
    "end": "378390"
  },
  {
    "text": "It's also in EXP, of course. Everything in P is also in EXP. Because if you can solve\nit in polynomial time, you can solve it in\nexponential time.",
    "start": "378390",
    "end": "385290"
  },
  {
    "text": "This is at most\nexponential time. At most polynomial. ",
    "start": "385290",
    "end": "393440"
  },
  {
    "text": "Here's a problem\nwe haven't seen. But it's pretty cool. N by n Chess.",
    "start": "393440",
    "end": "399190"
  },
  {
    "text": "So this is the\nproblem I give you. So we're in an by n\nboard, and I give you a whole bunch of\npieces on the board,",
    "start": "399190",
    "end": "405690"
  },
  {
    "text": "and I want to know does\nWhite win from here? I say it's White to\nmove or Black to move,",
    "start": "405690",
    "end": "411660"
  },
  {
    "text": "and who's going to win\nform this position? This problem, can be\nsolved in exponential time.",
    "start": "411660",
    "end": "419085"
  },
  {
    "text": "You can sort of play out\nall possible strategies and see who wins.",
    "start": "419085",
    "end": "425210"
  },
  {
    "text": "And it's not in P. There's\nno polynomial time algorithm to play generalized Chess.",
    "start": "425210",
    "end": "432150"
  },
  {
    "text": "This sort of captures why\nChess-- even at eight by eight Chess-- is hard-- because\nthere's no general way",
    "start": "432150",
    "end": "437510"
  },
  {
    "text": "to do it. So there's no special\nway to do it, probably.",
    "start": "437510",
    "end": "443210"
  },
  {
    "text": "Computational complexity is\nall about order of growth. So we can't analyze\neight by eight Chess, but we can analyze n by n Chess.",
    "start": "443210",
    "end": "449289"
  },
  {
    "text": "And that gives us a flavor of\nwhy 8 by 8 is so difficult. Go is also in EXP, but\nnot in P-- lots of games",
    "start": "449290",
    "end": "457000"
  },
  {
    "text": "are in this category, lot's of\ncomplicated games, let's say. And so this is a first example\nof a problem that we know we",
    "start": "457000",
    "end": "465130"
  },
  {
    "text": "cannot solve in polynomial time. Bad news.",
    "start": "465130",
    "end": "470880"
  },
  {
    "text": "I also talked about\nTetris a little bit. ",
    "start": "470880",
    "end": "476940"
  },
  {
    "text": "Unlike the Tetris\ntraining, which we saw, this is sort of\nrealistic Tetris-- all the rules of Tetris.",
    "start": "476940",
    "end": "482340"
  },
  {
    "text": "The only catch is that I\ntell you all the pieces that are going to come in advance. Because, otherwise,\nit's some random process",
    "start": "482340",
    "end": "488442"
  },
  {
    "text": "and it's kind of hard to think\nabout what's the best strategy. But if I tell you\nwhat's going to come--",
    "start": "488442",
    "end": "493524"
  },
  {
    "text": "say it's a\npseudo-random generator and you know how it works. You know all the\npieces that will come. I want to know can I survive\nfrom a given initial board mess",
    "start": "493524",
    "end": "502830"
  },
  {
    "text": "and for a given\nsequence of pieces. This can also be solved\nin exponential time. Just try all the possibilities.",
    "start": "502830",
    "end": "509574"
  },
  {
    "start": "509575",
    "end": "514780"
  },
  {
    "start": "510000",
    "end": "665000"
  },
  {
    "text": "We don't know whether it's\nin P. We're pretty sure",
    "start": "514780",
    "end": "525760"
  },
  {
    "text": "it's not in P. And by the\nend of today's lecture, you'll understand why\nwe think it's not in P.",
    "start": "525760",
    "end": "531500"
  },
  {
    "text": "But it's going to be\nsomewhere in between here. Tetris is actually right here.",
    "start": "531500",
    "end": "537110"
  },
  {
    "text": "But I haven't defined\nwhat right here is yet. ",
    "start": "537110",
    "end": "546040"
  },
  {
    "text": "And then the next one\nis halting problem. ",
    "start": "546040",
    "end": "564720"
  },
  {
    "text": "So halting problem\nis particularly cool, as we'll see-- or interesting. It's the problem of given a\ncomputer program-- Python,",
    "start": "564720",
    "end": "574710"
  },
  {
    "text": "whatever, it doesn't really\nmatter what language. They're all the same in\na theoretical sense--",
    "start": "574710",
    "end": "582149"
  },
  {
    "text": "does it ever halt?  Does it ever stop running,\nreturn a result, whatever?",
    "start": "582150",
    "end": "590335"
  },
  {
    "text": " This would be really handy--\nyou're writing some code,",
    "start": "590335",
    "end": "595600"
  },
  {
    "text": "and you've run it\nfor 5 hours, and you don't know is that\nbecause there's a bug and you've got an infinite loop?",
    "start": "595600",
    "end": "601453"
  },
  {
    "text": "Or is it just because\nit's really slow? So you'd like to give it\nto some program-- checking",
    "start": "601453",
    "end": "608137"
  },
  {
    "text": "program-- that says\nwill this run forever or will it terminate. That's the halting problem.",
    "start": "608137",
    "end": "613160"
  },
  {
    "text": "And this problem\nis not in R. There is no correct algorithm\nfor solving this problem.",
    "start": "613160",
    "end": "620260"
  },
  {
    "text": "There's no way to tell,\ngiven an arbitrary program, whether it will halt.",
    "start": "620260",
    "end": "625840"
  },
  {
    "text": "Now, in some situations--\ntake the empty program-- I can tell that it halts. Or I take some special\nsimple class of programs,",
    "start": "625840",
    "end": "633580"
  },
  {
    "text": "I can tell whether they halt or\ndetermine that they don't halt. But there's no algorithm that\nsolves it for all programs,",
    "start": "633580",
    "end": "640890"
  },
  {
    "text": "in finite time. In infinite time,\nI can solve it. Just run it.",
    "start": "640890",
    "end": "646540"
  },
  {
    "text": "Run the program. Given finite time, there's\nno way to solve this. And so this is a little bit\nbeyond what we can prove today.",
    "start": "646540",
    "end": "653370"
  },
  {
    "text": "It's not that hard\nto prove, but it takes half an hour or something. I want to get to other things. But if you take 6045,\nthey'll prove this.",
    "start": "653370",
    "end": "662020"
  },
  {
    "text": "What I want to show you\ninstead is an easier result-- that almost\nevery problem is not in R.",
    "start": "662020",
    "end": "689800"
  },
  {
    "start": "665000",
    "end": "980000"
  },
  {
    "text": "I need one term, though,\nwhich is decision problems. All of these problems,\nI set it up in a way",
    "start": "689800",
    "end": "695050"
  },
  {
    "text": "that the answer is\nbinary-- yes or no. Is there a\nnegative-weight cycle? Yes or no?",
    "start": "695050",
    "end": "701089"
  },
  {
    "text": "Does White win from\nthis position in Chess? Can you survive in Tetris? And does this program halt?",
    "start": "701090",
    "end": "708240"
  },
  {
    "text": "For various reasons--\nbasically convenience-- the whole field of\ncomputational complexity",
    "start": "708240",
    "end": "713320"
  },
  {
    "text": "focuses on decision problems. And, in fact-- so\ndecision problems",
    "start": "713320",
    "end": "719370"
  },
  {
    "text": "are ones where the\nanswer is yes or no. That's all. Why? Essentially because\nit doesn't matter.",
    "start": "719370",
    "end": "725520"
  },
  {
    "text": "If you take a problem\nyou care about, you can convert it into\na decision problem. We can see examples\nof that later.",
    "start": "725520",
    "end": "732760"
  },
  {
    "text": "Decision problems\nare basically as hard as optimization\nproblems or whatever.",
    "start": "732760",
    "end": "737988"
  },
  {
    "text": "But let's focus on\ndecision problems. The answer is yes or no. Claim that most of\nthem are uncomputable.",
    "start": "737989",
    "end": "743589"
  },
  {
    "text": "And we can prove\nthis pretty easily if you know a bit of\nset theory, I guess.",
    "start": "743590",
    "end": "750389"
  },
  {
    "text": " On the one hand, I have\nproblems I want to solve.",
    "start": "750390",
    "end": "757350"
  },
  {
    "text": "These are decision problems. And on the other hand,\nI have algorithms, or computer programs\nto solve them.",
    "start": "757350",
    "end": "762819"
  },
  {
    "text": "I'm going to think\nof computer programs because more precise\nalgorithms can be a little bit nebulous for\nthinking about pseudocode--",
    "start": "762820",
    "end": "770230"
  },
  {
    "text": "what's valid, what's invalid. But computer programs\nare very clear. I give you some code. You throw it into Python.",
    "start": "770230",
    "end": "776090"
  },
  {
    "text": "Either it works or it doesn't. And it does something. Runs for a while. ",
    "start": "776090",
    "end": "784080"
  },
  {
    "text": "How can I think about the\nspace of all possible programs? Well, programs are things\nyou type into a computer",
    "start": "784080",
    "end": "792020"
  },
  {
    "text": "in ASCII, whatever. In the end, you can think of\nit as just as a binary string. Somehow it gets\nencoded in binary.",
    "start": "792020",
    "end": "798060"
  },
  {
    "text": "Everything is reduced to binary\nin the end, on a computer. So this is a binary string.",
    "start": "798060",
    "end": "807339"
  },
  {
    "text": "Now, you can also think\nof a binary string as representing a\nnumber, in binary.",
    "start": "807340",
    "end": "813279"
  },
  {
    "text": "So you can also\nthink of a program, then, as a natural number-- some\nnumber between 0 and infinity.",
    "start": "813280",
    "end": "818960"
  },
  {
    "text": "And an integer. So usually we represent\nthis as math bold N.",
    "start": "818960",
    "end": "825850"
  },
  {
    "text": "That's just 0, 1, 2, 3. You can think of every\nprogram is ultimately reducing to an integer.",
    "start": "825850",
    "end": "831959"
  },
  {
    "text": "It's a big integer, but, hey. It's an integer. So that's the space\nof all programs.",
    "start": "831960",
    "end": "837647"
  },
  {
    "text": "Now, I want to think about the\nspace of all decision problems. ",
    "start": "837647",
    "end": "842899"
  },
  {
    "text": "So how can I define\na decision problem? Well, the natural way to\nthink of a decision problem",
    "start": "842900",
    "end": "848640"
  },
  {
    "text": "is as a function that\nmaps inputs to yes or no. ",
    "start": "848640",
    "end": "859350"
  },
  {
    "text": "Function from\ninputs to yes or no.",
    "start": "859350",
    "end": "868430"
  },
  {
    "text": "Or you can think\nof that as 1 and 0. So what's an input?",
    "start": "868430",
    "end": "874310"
  },
  {
    "text": "Well, an input is\na binary string. So an input is a number--\na natural number. ",
    "start": "874310",
    "end": "881790"
  },
  {
    "text": "Input is a binary string, which\nwe can think of as being in N.",
    "start": "881790",
    "end": "891579"
  },
  {
    "text": "So we've got a\nfunction from N to 0,1.",
    "start": "891580",
    "end": "898570"
  },
  {
    "text": "So another way to represent\none of these functions is as a table.",
    "start": "898570",
    "end": "904220"
  },
  {
    "text": "I could just write\ndown all the answers. So I've got, well, the input\ncould be 0-- the number 0.",
    "start": "904220",
    "end": "910110"
  },
  {
    "text": "And then, maybe it's a 0. Input could be could be 1\nand then, maybe, output is 0. Then, the input could be 2,\n3, 4, 5, 1, 0, 1, 1, whatever.",
    "start": "910110",
    "end": "921750"
  },
  {
    "text": "So I could write the\ntable of all answers. This is another way to\nwrite down such a function.",
    "start": "921750",
    "end": "928430"
  },
  {
    "text": "What we have, here, is an\ninfinite string of bits. Each of them could be 0 or 1.",
    "start": "928430",
    "end": "934290"
  },
  {
    "text": "It would be a different problem. But they all exist. Any infinite string of bits\nrepresents a decision problem.",
    "start": "934290",
    "end": "941060"
  },
  {
    "text": "They're the same thing. So a decision problem is\nan infinite string of bits. A program is a finite\nstring of bits.",
    "start": "941060",
    "end": "949676"
  },
  {
    "text": "These are different things. One way to see that\nthey're different is put a decimal point, here.",
    "start": "949676",
    "end": "957639"
  },
  {
    "text": "Now, this infinite\nstring of bits is a number-- a real\nnumber-- between 0 and 1.",
    "start": "957640",
    "end": "963710"
  },
  {
    "text": "It's written in binary. You may not be used\nto binary point. This dot is not a decimal point.",
    "start": "963710",
    "end": "968960"
  },
  {
    "text": "It's a binary point. But, hey. Any real number can be expressed\nby an infinite string of bits",
    "start": "968960",
    "end": "976040"
  },
  {
    "text": "in this way-- any real\nnumber between 0 and 1. ",
    "start": "976040",
    "end": "982210"
  },
  {
    "start": "980000",
    "end": "1173000"
  },
  {
    "text": "So a decision\nproblem is basically",
    "start": "982210",
    "end": "991940"
  },
  {
    "text": "something in R, the set\nof all real numbers, whereas a program is something\nin N, the set of all integers.",
    "start": "991940",
    "end": "998555"
  },
  {
    "text": " And the thing is, the\nnumber of real numbers",
    "start": "998555",
    "end": "1005360"
  },
  {
    "text": "is much, much bigger than\nthe number of integers.",
    "start": "1005360",
    "end": "1010459"
  },
  {
    "text": "In a formal sense, we call\nthis one uncountably infinite, and this one is\ncountably infinite. I'm not going to prove\nthat here, today.",
    "start": "1010460",
    "end": "1016830"
  },
  {
    "text": "You may have seen that proof. It's pretty simple. And that's bad news.",
    "start": "1016830",
    "end": "1022350"
  },
  {
    "text": "That means that there\nare way more problems than there are\nprograms to solve them.",
    "start": "1022350",
    "end": "1027549"
  },
  {
    "text": "So this means almost every\nproblem that we could conceive",
    "start": "1027550",
    "end": "1032890"
  },
  {
    "text": "of is unsolvable\nby every program. ",
    "start": "1032890",
    "end": "1050600"
  },
  {
    "text": "And this is pretty depressing\nthe first time I saw it. That's why we put it at\nthe end of the class. ",
    "start": "1050600",
    "end": "1057950"
  },
  {
    "text": "I think you get all existential. I mean the thing is\nevery program only solves one problem.",
    "start": "1057950",
    "end": "1063201"
  },
  {
    "text": "It takes some input,\nand it's either going to output yes or no. And if it's wrong on any of\nthe inputs, then it's wrong.",
    "start": "1063201",
    "end": "1068580"
  },
  {
    "text": "So it's going to give an answer. Say it's a\ndeterministic algorithm. No random numbers or things.",
    "start": "1068580",
    "end": "1075950"
  },
  {
    "text": "Then, there's just\nnot enough programs to go around if each program\nonly solves one problem.",
    "start": "1075950",
    "end": "1081402"
  },
  {
    "text": "This is the end of the proof. Any questions about that? Kind of weird.",
    "start": "1081402",
    "end": "1087390"
  },
  {
    "text": "Because yet somehow, most of\nthe problems that we think about are computable. I don't know why that is.",
    "start": "1087390",
    "end": "1093100"
  },
  {
    "text": "But mathematically,\nmost problems that you could think\nof are uncomputable. ",
    "start": "1093100",
    "end": "1101450"
  },
  {
    "text": "Question? AUDIENCE: [INAUDIBLE]. ",
    "start": "1101450",
    "end": "1107850"
  },
  {
    "text": "PROFESSOR: Yeah. It's something like,\nthe way that we describe problems is usually almost\nalgorithmic, anyway.",
    "start": "1107850",
    "end": "1115990"
  },
  {
    "text": "And so, usually, most problems\nwe think of are in EXP. And so they're\ndefinitely computable.",
    "start": "1115990",
    "end": "1122299"
  },
  {
    "text": "There's some\nmetatheorem about how we think about problems,\nnot just programs. ",
    "start": "1122300",
    "end": "1131110"
  },
  {
    "text": "So that's all I'm going to\nsay about R. So out here, we have halting problem and,\nactually, most problems.",
    "start": "1131110",
    "end": "1137971"
  },
  {
    "text": "You can think of this\nas an infinite line and then there's just\nthis small portion which are things you can solve.",
    "start": "1137972",
    "end": "1143840"
  },
  {
    "text": "But we care about this\nportion because that's the interesting stuff. That's what\nalgorithms are about. Out here kind of\nnothing happens.",
    "start": "1143840",
    "end": "1153560"
  },
  {
    "text": "So I want to talk about\nthis notch, which is NP. ",
    "start": "1153560",
    "end": "1162747"
  },
  {
    "text": "I imagine you've heard about NP.  It's pretty cool, but\nalso kind of confusing.",
    "start": "1162747",
    "end": "1170240"
  },
  {
    "text": " But it's actually very\nclosely related to something",
    "start": "1170240",
    "end": "1177890"
  },
  {
    "text": "we've seen with dynamic\nprogramming, which is guessing. So I'm going to give you\na couple of definitions",
    "start": "1177890",
    "end": "1184460"
  },
  {
    "text": "of NP-- not formal definition,\nbut high level definitions. ",
    "start": "1184460",
    "end": "1192210"
  },
  {
    "text": "So just like P, EXP, and R,\nit's a set of decision problems.",
    "start": "1192210",
    "end": "1197350"
  },
  {
    "text": "And it's going to look very\nsimilar to P. NP does not",
    "start": "1197350",
    "end": "1203650"
  },
  {
    "text": "stand for not a polynomial. It stands for\nnondeterministic polynomial.",
    "start": "1203650",
    "end": "1208750"
  },
  {
    "text": "We'll get to\nnondeterministic in a moment. The first line is the same.",
    "start": "1208750",
    "end": "1214435"
  },
  {
    "text": "It's all decision problems you\ncan solve in polynomial time. That sounds like P.\nBut then, there's",
    "start": "1214436",
    "end": "1219720"
  },
  {
    "text": "this extra line, which is\nvia a \"lucky\" algorithm.",
    "start": "1219720",
    "end": "1225480"
  },
  {
    "start": "1225480",
    "end": "1233730"
  },
  {
    "text": "Let me tell you--\nat a high level what a lucky algorithm does\nis it can make guesses.",
    "start": "1233730",
    "end": "1240434"
  },
  {
    "text": "But unlike the way that\nwe've been making guesses with dynamic programming--\nwith dynamic programming we had to guess something.",
    "start": "1240434",
    "end": "1245443"
  },
  {
    "text": "We tried all the possibilities. A lucky algorithm just\nneeds to try one possibility",
    "start": "1245443",
    "end": "1250596"
  },
  {
    "text": "because it's really lucky. It always guesses\nthe right choice. It's like magic.",
    "start": "1250597",
    "end": "1256440"
  },
  {
    "text": "This is not a realistic\nmodel of computation, but it is a model of computation\ncalled nondeterministic model.",
    "start": "1256440",
    "end": "1264470"
  },
  {
    "text": " And it's going to sound\ncrazy because it is crazy,",
    "start": "1264470",
    "end": "1271950"
  },
  {
    "text": "but nonetheless it's\nactually really useful-- even though you could\nnever really build",
    "start": "1271950",
    "end": "1277409"
  },
  {
    "text": "this on a real computer. The nondeterministic\nmodel is not a model of real computation. It is a model of theoretical\nhypothetical computation.",
    "start": "1277410",
    "end": "1285409"
  },
  {
    "text": "It gets at the\nroot-- at the core of what is possible to solve. You'll see why, in a little bit.",
    "start": "1285410",
    "end": "1292799"
  },
  {
    "text": "So in this model, an algorithm--\nit can compute stuff,",
    "start": "1292800",
    "end": "1299800"
  },
  {
    "text": "but, in particular,\nit makes guesses. So should I do this\nor should I do this?",
    "start": "1299800",
    "end": "1306030"
  },
  {
    "text": "And it just says-- It\ndoesn't flip a coin. It's not random. It just thinks-- it\njust makes a guess.",
    "start": "1306030",
    "end": "1313990"
  },
  {
    "text": "Well, I don't know. Let's go this way. And then it comes\nanother fork in the road. It's like, well, I don't know.",
    "start": "1313990",
    "end": "1319431"
  },
  {
    "text": "I'll go this way. That's the guessing. You give it a list of\nchoices and somehow a choice is determined, by magic--\nnondeterministic magic.",
    "start": "1319431",
    "end": "1328910"
  },
  {
    "text": "And then the fun part is--\nI should say, at the end",
    "start": "1328910",
    "end": "1338970"
  },
  {
    "text": "the algorithm either\nsays yes or no.",
    "start": "1338970",
    "end": "1344652"
  },
  {
    "text": "It gives you an output.  The guesses are guaranteed--\nthis is the magic part--",
    "start": "1344652",
    "end": "1354590"
  },
  {
    "text": "to lead to a yes\nanswer, if possible.",
    "start": "1354590",
    "end": "1363779"
  },
  {
    "text": " So if you imagine the space\nof executions of this program,",
    "start": "1363780",
    "end": "1370800"
  },
  {
    "text": "you start here, and you\nmake some guess and you don't know which way to go. In dynamic programming,\nwe try all of them.",
    "start": "1370800",
    "end": "1377118"
  },
  {
    "text": "But this algorithm\ndoesn't try all of them. It's like a branching universe\nmodel of the universe. So you make some\nchoice, and then you",
    "start": "1377119",
    "end": "1383929"
  },
  {
    "text": "make some other choice, and\nthen you make some other choice. All of these are guesses. And some of these\nthings will lead to yes.",
    "start": "1383930",
    "end": "1391500"
  },
  {
    "text": "Some of these things\nwill lead to no. And in this magical model,\nif there's any yes out there,",
    "start": "1391500",
    "end": "1397040"
  },
  {
    "text": "you will follow a path to a yes. If all of the answers\nare no, then, of course, it doesn't matter\nwhat choices you make.",
    "start": "1397040",
    "end": "1403640"
  },
  {
    "text": "You will output no. But if there's ever a yes,\nmagically these guesses find it. This is the sense of lucky.",
    "start": "1403640",
    "end": "1410390"
  },
  {
    "text": "If you're trying to find a\nyes-- that's your goal in life-- then this corresponds to luck.",
    "start": "1410390",
    "end": "1417289"
  },
  {
    "text": "And NP is the class of\nall problems solvable in polynomial time by a\nreally lucky algorithm.",
    "start": "1417290",
    "end": "1423800"
  },
  {
    "text": "Crazy. I know. ",
    "start": "1423800",
    "end": "1430450"
  },
  {
    "text": "Let's talk about Tetris. ",
    "start": "1430450",
    "end": "1436320"
  },
  {
    "text": "Tetris, I claim, is in NP. And we know how to solve\nit in exponential time.",
    "start": "1436320",
    "end": "1441870"
  },
  {
    "text": "Just try all the options. But, in fact, I don't need\nto try all the options.",
    "start": "1441870",
    "end": "1447640"
  },
  {
    "text": "It would be enough just use\nthis nondeterministic magic. I could say, well, should I\ndrop the piece here, here, here,",
    "start": "1447640",
    "end": "1454420"
  },
  {
    "text": "here, here, or here. And should it be rotated\nlike this, or like this, or like this, or like this?",
    "start": "1454420",
    "end": "1460170"
  },
  {
    "text": "I don't know. So I guess. And I just place that piece. I make another guess where\nto place the next piece.",
    "start": "1460170",
    "end": "1465900"
  },
  {
    "text": "Then I make another guess\nwhere to place the next piece. I implement the rules\nof Tetris, which is if there's a\nfull line it clears.",
    "start": "1465900",
    "end": "1472426"
  },
  {
    "text": "I figure out where\nthese things fall. I can even think about, should\nI rotate at the last second.",
    "start": "1472426",
    "end": "1479080"
  },
  {
    "text": "If I don't know, I'll guess. Any choice you have to\nmake in playing Tetris, you can just guess.",
    "start": "1479080",
    "end": "1485280"
  },
  {
    "text": "There's only polynomially\nmany guesses you need to make. So it's still polynomial time. That's important.",
    "start": "1485280",
    "end": "1490440"
  },
  {
    "text": "It's not like we\ncan do anything. But we can make a polynomial\nnumber these magic guesses. And then at the end, I\ndetermine did I die--",
    "start": "1490440",
    "end": "1499330"
  },
  {
    "text": "or rather, did I survive. It's important, actually. It only works one way. Did I survive?",
    "start": "1499330",
    "end": "1504780"
  },
  {
    "text": "Yes or no? And that's easy to compute. I just see did I ever\ngo above the top row.",
    "start": "1504780",
    "end": "1511120"
  },
  {
    "text": "So what this model says\nis if there is any way to survive-- if there is\nany way to get a yes answer,",
    "start": "1511120",
    "end": "1517100"
  },
  {
    "text": "then, my guesses will find\nit, magically, in this model. Therefore, Tetris is in NP.",
    "start": "1517100",
    "end": "1522370"
  },
  {
    "text": " If I had instead\nsaid, did I die, then,",
    "start": "1522370",
    "end": "1528200"
  },
  {
    "text": "what this algorithm would\ntell me is there any way to die-- which, the\nanswer's probably yes,",
    "start": "1528200",
    "end": "1533970"
  },
  {
    "text": "unless you're given a\nreally trivial input. So it's important you set up\nthe yes versus no, correctly.",
    "start": "1533970",
    "end": "1539710"
  },
  {
    "text": "But the Tetris decision problem\n\"can I survive,\" is in NP. The decision problem \"can I\ndie,\" should not be in NP.",
    "start": "1539710",
    "end": "1548669"
  },
  {
    "text": "But we don't know. ",
    "start": "1548670",
    "end": "1557110"
  },
  {
    "text": "Another way to think about NP.  And you might find\nthis intuitive",
    "start": "1557110",
    "end": "1562950"
  },
  {
    "start": "1560000",
    "end": "1783000"
  },
  {
    "text": "because we've been\ndoing lots of guessing. It's just a little crazy. There's another way that's\nmore intuitive to many people.",
    "start": "1562950",
    "end": "1571490"
  },
  {
    "text": "So if this doesn't make\nsense, don't worry, yet. This is another\nway to phrase it. ",
    "start": "1571490",
    "end": "1613152"
  },
  {
    "text": "Another way to think\nabout NP-- which turns out to be equivalent-- is that don't\nthink so much about algorithms",
    "start": "1613152",
    "end": "1621450"
  },
  {
    "text": "for solving a problem,\njust think about algorithms for checking the\nsolution to a problem.",
    "start": "1621450",
    "end": "1627437"
  },
  {
    "text": "It's usually a lot\neasier to check your work than it is to solve a\nproblem in the first place. And NP is all about that issue.",
    "start": "1627437",
    "end": "1635400"
  },
  {
    "text": "So think of decision\nproblems and think about if you have a solution--\nso let's say in Tetris,",
    "start": "1635400",
    "end": "1641270"
  },
  {
    "text": "the solution is yes. In fact, I need to\nsay this, probably.",
    "start": "1641270",
    "end": "1647660"
  },
  {
    "text": "The more formal\nversion is whenever the answer is yes,\nyou can prove it.",
    "start": "1647660",
    "end": "1657900"
  },
  {
    "text": " And you can check that\nproof in polynomial time.",
    "start": "1657900",
    "end": "1664100"
  },
  {
    "start": "1664100",
    "end": "1669890"
  },
  {
    "text": "This is the more formal--\nthis a little bit high level. What does check mean? Here's what check means.",
    "start": "1669890",
    "end": "1676080"
  },
  {
    "text": "Whenever an answer is \"yes,\"\nyou can write down a proof that the answer is yes. And someone can\ncome along and check",
    "start": "1676080",
    "end": "1682400"
  },
  {
    "text": "that proof in polynomial\ntime and be convinced that the answer is yes. What does convinced mean?",
    "start": "1682400",
    "end": "1687600"
  },
  {
    "text": "It's not that hard. Think of it is a\ntwo player game. There's me trying\nto play Tetris,",
    "start": "1687600",
    "end": "1693400"
  },
  {
    "text": "and there's you\ntrying to be convinced that I'm really good at Tetris. It seems a little one sided,\nbut-- it's a asymmetric game.",
    "start": "1693400",
    "end": "1703059"
  },
  {
    "text": "So you want to prove Tetris is--\nI want to show Tetris is in NP. Imagine I'm this\nmagical creature.",
    "start": "1703060",
    "end": "1709790"
  },
  {
    "text": "Actually, it's kind of funny. It reminds me of a story. On the front of my\noffice door, you may have seen there's\nan email I received,",
    "start": "1709790",
    "end": "1717540"
  },
  {
    "text": "maybe 15 years\nago-- oh no, I guess it can't be that long ago. Must've been about\n7 years ago when",
    "start": "1717540",
    "end": "1723710"
  },
  {
    "text": "we proved that Tetris\nis NP-complete. And the email says, \"Dear\nSir,\"-- or whatever--",
    "start": "1723710",
    "end": "1731660"
  },
  {
    "text": "\"I am NP-complete.\" We don't what\nNP-complete means, yet, but it's a\nmeaningless statement.",
    "start": "1731660",
    "end": "1737310"
  },
  {
    "text": "So it doesn't matter that\nyou don't know what it means. It might get funnier\nthroughout the lecture today.",
    "start": "1737310",
    "end": "1743940"
  },
  {
    "text": "And he's like, I\ncan solve Tetris. I'm really good\nat playing Tetris.",
    "start": "1743940",
    "end": "1749533"
  },
  {
    "text": "I'm really good at\nplaying Minesweeper-- all these games that are\nthought to be intractable. He gave me his\nrecords and so on.",
    "start": "1749534",
    "end": "1755809"
  },
  {
    "text": "It's like how can\nI apply my talent. So I will translate what he\nmeant to say was, \"I am lucky.\"",
    "start": "1755810",
    "end": "1766230"
  },
  {
    "text": "And this is probably\nnot true, but he thought that he was lucky. He wanted to convince\nme he was lucky.",
    "start": "1766230",
    "end": "1771940"
  },
  {
    "text": "So how could we do it? Well, I could give him a\nreally hard Tetris problem. And say, can you\nsurvive these pieces?",
    "start": "1771940",
    "end": "1778870"
  },
  {
    "text": "And he says, \"yes,\nI can survive. \" And how does he prove to\nme that he can survive? Well, he just plays it.",
    "start": "1778870",
    "end": "1785149"
  },
  {
    "start": "1783000",
    "end": "2095000"
  },
  {
    "text": "He shows me what to do. So proof is sequence\nof moves that you make.",
    "start": "1785150",
    "end": "1793740"
  },
  {
    "text": "It's really easy\nto convince someone that you can survive a\ngiven level of Tetris.",
    "start": "1793740",
    "end": "1800290"
  },
  {
    "text": "You just show what the\nsequence of moves are. And then I, as a mere mortal\npolynomial time algorithm",
    "start": "1800290",
    "end": "1807860"
  },
  {
    "text": "can check that that\nsequence works. I just have to implement\nthe rules of Tetris. So in Tetris, the rules\nare easy to implement.",
    "start": "1807860",
    "end": "1813980"
  },
  {
    "text": "Its the knowing what\nthing to do is hard. But in NP, knowing\nwhich way to go is easy.",
    "start": "1813980",
    "end": "1821840"
  },
  {
    "text": "In this version,\nyou don't even talk about how to find the solution. It's just a matter\nof can you write down a solution that can be checked.",
    "start": "1821840",
    "end": "1829279"
  },
  {
    "text": "Can prove it. This is not in polynomial time. You get arbitrarily\nmuch time to prove it.",
    "start": "1829280",
    "end": "1834710"
  },
  {
    "text": "But then, the check has to\nhappen in polynomial time. ",
    "start": "1834710",
    "end": "1841047"
  },
  {
    "text": "Kind of clear?  That's Tetris.",
    "start": "1841047",
    "end": "1846450"
  },
  {
    "text": "And every problem that you\ncan solve in polynomial time you can also,\nof course, check it. Because if you could solve\nit in polynomial time,",
    "start": "1846450",
    "end": "1853090"
  },
  {
    "text": "you could just solve\nit and then see did you get the same\nanswer that I did. So P is inside NP.",
    "start": "1853090",
    "end": "1859789"
  },
  {
    "text": "But the big question\nis does p equal NP.",
    "start": "1859790",
    "end": "1864910"
  },
  {
    "text": "And most people think no. P does not equal NP--\nmost sane people.",
    "start": "1864910",
    "end": "1872059"
  },
  {
    "text": " So this is a big problem.",
    "start": "1872060",
    "end": "1878909"
  },
  {
    "text": "It's one of the famous\nMillennium Prize problems. So in particular, if you solved\nit, you would get $1 million,",
    "start": "1878910",
    "end": "1887030"
  },
  {
    "text": "and fame, and probably\nother fortune. You could do TV spots. I think that's how people\nmostly make their money.",
    "start": "1887030",
    "end": "1894160"
  },
  {
    "text": "You could do a lot. You would become the most famous\ncomputer scientist in the world if you prove this.",
    "start": "1894160",
    "end": "1900020"
  },
  {
    "text": "So a lot of people have tried. Every year, there's an\nattempt to prove either what everyone believes\nor, most often,",
    "start": "1900020",
    "end": "1906500"
  },
  {
    "text": "people try to prove the\nreverse-- that they are equal. I don't know why. They should bet the other way.",
    "start": "1906500",
    "end": "1913250"
  },
  {
    "text": "So what does P does\nnot equal NP mean? It means that there are\nproblems, here, that are in NP",
    "start": "1913250",
    "end": "1920040"
  },
  {
    "text": "but not in P. Think\nabout what this means. This is saying P are the\nproblems that we can actually",
    "start": "1920040",
    "end": "1925809"
  },
  {
    "text": "solve on a legitimate computer. NP are problems that we can\nsolve in this magical fairy",
    "start": "1925810",
    "end": "1930950"
  },
  {
    "text": "computer where all of\nour dreams are granted. You say, oh, I don't\nknow which way to go.",
    "start": "1930950",
    "end": "1936120"
  },
  {
    "text": "It doesn't matter because\nthe machine magically tells you which way to go.",
    "start": "1936120",
    "end": "1941400"
  },
  {
    "text": "If you're goal is\nto get to a yes. So NP is a really powerful\nmodel of computation.",
    "start": "1941400",
    "end": "1947929"
  },
  {
    "text": "It's an insane model\nof computation. No one in their right mind\nwould consider it legitimate. So obviously, it's\nmore powerful than P,",
    "start": "1947930",
    "end": "1955250"
  },
  {
    "text": "except we don't know\nhow to prove it. Very annoying. ",
    "start": "1955250",
    "end": "1965480"
  },
  {
    "text": "Other phrasings of\nP does not equal NP is-- these are my\nphrasings, I them up-- you",
    "start": "1965480",
    "end": "1970870"
  },
  {
    "text": "can't engineer luck. ",
    "start": "1970870",
    "end": "1977520"
  },
  {
    "text": "You can believe in\nluck, if you want. But it's not something\nthat we can build out of a regular computer.",
    "start": "1977520",
    "end": "1983960"
  },
  {
    "text": "That's the meaning\nof this statement. And so I think most\npeople believe that.",
    "start": "1983960",
    "end": "1989485"
  },
  {
    "text": " Another phrasing would\nbe that solving problems",
    "start": "1989485",
    "end": "1999520"
  },
  {
    "text": "is harder than\nchecking solutions. ",
    "start": "1999520",
    "end": "2007299"
  },
  {
    "text": "A more formal version is that\ngenerating solutions or proofs of solutions can be\nharder than checking them.",
    "start": "2007300",
    "end": "2017510"
  },
  {
    "start": "2017510",
    "end": "2024850"
  },
  {
    "text": "Another phrasing is\nit's harder to generate a proof of a theorem\nthan it is to check the proof of a theorem.",
    "start": "2024850",
    "end": "2030780"
  },
  {
    "text": "We all know checking\nthe proof of a theorem should be easy if you\nwrite it precisely.",
    "start": "2030780",
    "end": "2036000"
  },
  {
    "text": "Just make sure each step\nfollows from the previous ones. Done. But proving a\ntheorem, that's hard.",
    "start": "2036000",
    "end": "2041610"
  },
  {
    "text": "You need inspiration. You need some clever idea. That's guessing. Inspiration equals luck equals\nguessing, in this model.",
    "start": "2041610",
    "end": "2049020"
  },
  {
    "text": "And that's hard.  The only way we know is\nto try all the proofs.",
    "start": "2049020",
    "end": "2055879"
  },
  {
    "text": "See which of them work. ",
    "start": "2055880",
    "end": "2064020"
  },
  {
    "text": "So what the heck? What could we possibly say? This is all kind of weird.",
    "start": "2064020",
    "end": "2070020"
  },
  {
    "text": "This would be the\nend of the lecture if you say, OK,\nwell we don't know. That's it.",
    "start": "2070020",
    "end": "2077350"
  },
  {
    "text": "But thankfully-- I kind\nof need this board. I also want this one, but\nI guess I'll go over here.",
    "start": "2077350",
    "end": "2083690"
  },
  {
    "text": " Fortunately, this is not\nthe end of the story.",
    "start": "2083690",
    "end": "2090280"
  },
  {
    "text": "And we can say a lot\nabout things like Tetris.",
    "start": "2090280",
    "end": "2095340"
  },
  {
    "start": "2095000",
    "end": "2460000"
  },
  {
    "text": "See I drew Tetris not\njust in this regime. We're pretty sure Tetris\nis between NP and P.",
    "start": "2095340",
    "end": "2101329"
  },
  {
    "text": "That it's in NP minus P.",
    "start": "2101330",
    "end": "2106480"
  },
  {
    "text": "So let me write that down. Tetris is in NP minus P. We\ndon't know that because we",
    "start": "2106480",
    "end": "2116640"
  },
  {
    "text": "don't know-- this\ncould be the empty set. What we do know\nis that if there's",
    "start": "2116640",
    "end": "2126040"
  },
  {
    "text": "anything in NP minus P--\nif they are different,",
    "start": "2126040",
    "end": "2132040"
  },
  {
    "text": "then-- if there's\nanything in NP minus P, then Tetris is one\nof those things.",
    "start": "2132040",
    "end": "2139059"
  },
  {
    "text": "That's why I drew\nTetris out there. It is, in a certain sense,\nthe hardest problem in NP.",
    "start": "2139060",
    "end": "2145800"
  },
  {
    "text": "Tetris. Why Tetris? Well, it's not just Tetris.",
    "start": "2145800",
    "end": "2150809"
  },
  {
    "text": "There are a lot of problems\nright at that little notch. But this is pretty interesting\nbecause, while we can't figure",
    "start": "2150809",
    "end": "2157220"
  },
  {
    "text": "this out, most people\nbelieve this is true. And so as long as you\nbelieve in that-- as long as you have faith--\nthen you can prove",
    "start": "2157220",
    "end": "2165920"
  },
  {
    "text": "that Tetris is in NP minus P. And so it's hard. It's not in P, in this case.",
    "start": "2165920",
    "end": "2171880"
  },
  {
    "text": "In particular, not in\nP. That's kind of cool.",
    "start": "2171880",
    "end": "2179738"
  },
  {
    "text": "How in the world do we\nprove something like this? It's actually not that hard. I mean it took us\nseveral months,",
    "start": "2179739",
    "end": "2185829"
  },
  {
    "text": "but that's just months, whereas\nthis thing has been around since, I guess, the '70s.",
    "start": "2185830",
    "end": "2193170"
  },
  {
    "text": "P versus NP. Why is this true?",
    "start": "2193170",
    "end": "2198760"
  },
  {
    "text": "Because Tetris is NP-hard. ",
    "start": "2198760",
    "end": "2206210"
  },
  {
    "text": "What does NP-hard mean? This means as hard as\nevery problem in NP.",
    "start": "2206210",
    "end": "2214640"
  },
  {
    "text": " I can't say harder than\nbecause it's non-strict.",
    "start": "2214640",
    "end": "2222010"
  },
  {
    "text": "So it's at least as hard\nas every problem in NP. And that's why I drew\nit at the far right.",
    "start": "2222010",
    "end": "2227579"
  },
  {
    "text": "It's sort of the\nhardest extreme of NP. Among everything in NP\nyou can possibly imagine,",
    "start": "2227580",
    "end": "2233030"
  },
  {
    "text": "Tetris is as hard\nas all of them. And therefore, if there's\nanything that's harder than P,",
    "start": "2233030",
    "end": "2239430"
  },
  {
    "text": "then Tetris is going to be\nharder than P because it's as far to the right as possible. Either P equals NP, in which\ncase the picture is like this.",
    "start": "2239430",
    "end": "2247490"
  },
  {
    "text": "Here's P. Here's NP. Tetris is still at the\nright extreme, here. But it's less interesting\nbecause it's still in P.",
    "start": "2247490",
    "end": "2255430"
  },
  {
    "text": "Or the picture looks like\nthis, and NP is strictly bigger than P. And then, because\nTetris is at the right extreme,",
    "start": "2255430",
    "end": "2261020"
  },
  {
    "text": "it's outside of P. So\nwe prove this in order to establish this claim.",
    "start": "2261020",
    "end": "2267110"
  },
  {
    "text": " Just to get some\nterminology, what",
    "start": "2267110",
    "end": "2272630"
  },
  {
    "text": "is this NP-complete business? ",
    "start": "2272630",
    "end": "2278810"
  },
  {
    "text": "Tetris is NP-complete,\nwhich means two things.",
    "start": "2278810",
    "end": "2289550"
  },
  {
    "text": "One is that it's NP-hard. And the other is\nthat it's in NP. So if you think of the\nintersection, NP intersect",
    "start": "2289550",
    "end": "2296339"
  },
  {
    "text": "NP-hard, that's NP-complete. Let me draw on the picture\nhere what this means.",
    "start": "2296340",
    "end": "2306490"
  },
  {
    "text": "So I'm going to\ndraw it on the top. ",
    "start": "2306490",
    "end": "2318589"
  },
  {
    "text": "This is NP-hard.  Everything from here to\nthe right is NP-hard.",
    "start": "2318590",
    "end": "2326039"
  },
  {
    "text": "NP-hard means it's at least\nas hard as everything in NP. That means it might\nbe at this line or it might be to the right.",
    "start": "2326040",
    "end": "2332390"
  },
  {
    "text": "But in the case of Tetris,\nwe know that it's in NP. We proved that a\ncouple of times.",
    "start": "2332390",
    "end": "2337494"
  },
  {
    "text": "And so we know that Tetris\nis also in this range. And so if it's in this\nrange and in this range, it's got to be right here.",
    "start": "2337494",
    "end": "2343690"
  },
  {
    "text": "Completeness is nice. If you prove something\nis something complete-- prove a problem is some\ncomplexity class complete--",
    "start": "2343690",
    "end": "2349920"
  },
  {
    "text": "then you know sort of exactly\nwhere it falls on this line. NP-complete means right here.",
    "start": "2349920",
    "end": "2355750"
  },
  {
    "text": "EXP-complete means right here. Turns out Chess is EXP-complete.",
    "start": "2355750",
    "end": "2362880"
  },
  {
    "text": "EXP-hard is anything\nfrom here over. EXP is anything from\nhere, over this way.",
    "start": "2362880",
    "end": "2370670"
  },
  {
    "text": "Chess is right at\nthat borderline. It is the hardest\nproblem in EXP. And that's actually\nthe only way we",
    "start": "2370670",
    "end": "2375970"
  },
  {
    "text": "know to prove that it's not NP. It's is pretty easy to\nshow that EXP is bigger than P. And Chess is the\nfarthest to the right in EXP--",
    "start": "2375970",
    "end": "2383770"
  },
  {
    "text": "of any problem in EXP-- and\nso, therefore, it's not in P. So whereas this one-- these two,\nwe're not sure are they equal.",
    "start": "2383770",
    "end": "2391350"
  },
  {
    "text": "This line we know is\ndifferent from this one. We don't know about\nthese two, though.",
    "start": "2391350",
    "end": "2398720"
  },
  {
    "text": "Does NP equal EXP? Not as famous. You won't get a million\ndollars, but still a very big,",
    "start": "2398720",
    "end": "2404850"
  },
  {
    "text": "open question. What else do I wanna say? Tetris, Chess, EXP-hard.",
    "start": "2404850",
    "end": "2411020"
  },
  {
    "text": "So these lines, here--\nthis is NP-complete",
    "start": "2411020",
    "end": "2416369"
  },
  {
    "text": "And this is EXP-complete. ",
    "start": "2416369",
    "end": "2435980"
  },
  {
    "text": "So the last thing I want to\ntalk about is reductions. ",
    "start": "2435980",
    "end": "2443769"
  },
  {
    "text": "Reductions-- so how do you\nprove something like this? What is as hard as even mean? I haven't defined that.",
    "start": "2443770",
    "end": "2449230"
  },
  {
    "text": "But it's not hard to define. In fact, it's a concept\nwe've seen already. ",
    "start": "2449230",
    "end": "2478609"
  },
  {
    "start": "2460000",
    "end": "2790000"
  },
  {
    "text": "Reductions are actually a\nway to design algorithms that we've been using\nimplicitly a lot.",
    "start": "2478610",
    "end": "2484354"
  },
  {
    "text": "You may have even\nheard this term. A bunch of recitations have\nused the word reduction for graph reduction.",
    "start": "2484354",
    "end": "2489970"
  },
  {
    "text": "You have some problem,\nyou convert it into a graph problem, then you\njust call the graph algorithm. You're done.",
    "start": "2489970",
    "end": "2495830"
  },
  {
    "text": "That's reduction. In general, you have\nsome problem, A, that you want to solve. And you convert it into\nsome other problem, B,",
    "start": "2495830",
    "end": "2504030"
  },
  {
    "text": "that you already\nknow how to solve. It's a great tool\nbecause, in this class, you learn tons of algorithms\nfor solving tons of problems.",
    "start": "2504030",
    "end": "2510630"
  },
  {
    "text": "Now, someone gives you,\nin your job or whatever, or you think about\nsome problem that you",
    "start": "2510630",
    "end": "2516950"
  },
  {
    "text": "don't know how to solve,\nthe first thing you should do is-- can I convert\nit into something I know how to solve\nbecause then you're done.",
    "start": "2516950",
    "end": "2522930"
  },
  {
    "text": "Now it may not be the\nbest way to solve it, but at least it's\na way to solve it. Probably in polynomial time\nbecause we think of B as things",
    "start": "2522930",
    "end": "2529015"
  },
  {
    "text": "you can solve in\npolynomial time. Great. So just convert\nproblem A, which you",
    "start": "2529015",
    "end": "2540730"
  },
  {
    "text": "want to solve, into some problem\nB that you know how to solve.",
    "start": "2540730",
    "end": "2547615"
  },
  {
    "text": " That's reduction. Let me give you some examples\nthat we've already seen,",
    "start": "2547615",
    "end": "2555460"
  },
  {
    "text": "just to fit this into your\nmental map of the class. ",
    "start": "2555460",
    "end": "2562640"
  },
  {
    "text": "It's kind of a funny one\nbut it's a very simple one. ",
    "start": "2562640",
    "end": "2572470"
  },
  {
    "text": "So how do you solve\nunweighted shortest paths? ",
    "start": "2572470",
    "end": "2578300"
  },
  {
    "text": "In general? Easy one. Give you a graph with no\nweights on the edges and I want to the shortest\npath from s to t.",
    "start": "2578300",
    "end": "2584466"
  },
  {
    "text": "AUDIENCE: BFS PROFESSOR: BFS. Linear time, right? Well, that's if\nyou're smart or if you",
    "start": "2584466",
    "end": "2590050"
  },
  {
    "text": "feel like implementing BFS. Suppose someone\ngave you Djikstra. Said, here, look, I've\ngot Djikstra code.",
    "start": "2590050",
    "end": "2596125"
  },
  {
    "text": "You don't have to do anything. There's Djisktra\ncode right there. But Djikstra solves\nweighted shortest path. I don't have any weights.",
    "start": "2596125",
    "end": "2602160"
  },
  {
    "text": "What do I do? Set the weights to 1.",
    "start": "2602160",
    "end": "2608140"
  },
  {
    "text": "It's very easy, but\nthis is a reduction-- a simple example of reduction. Not the smartest of reductions,\nbut it's a reduction.",
    "start": "2608140",
    "end": "2615330"
  },
  {
    "text": " So I can convert\nunweighted shortest paths",
    "start": "2615330",
    "end": "2620780"
  },
  {
    "text": "into weighted shortest paths\nby adding weights of 1. Done. Adding weights of\n0 would not work.",
    "start": "2620780",
    "end": "2626070"
  },
  {
    "text": "But weights of 1. OK. Weights of 2 also works. Pick your favorite number, but\nas long as you're consistent",
    "start": "2626070",
    "end": "2631950"
  },
  {
    "text": "about it. That's a reduction. Here's some more\ninteresting ones. On the problems set--\nproblem set six--",
    "start": "2631950",
    "end": "2643920"
  },
  {
    "text": "there was this RenBook problem,\n\"I Can Haz Moar Frendz?\" That was the name\nof the problem.",
    "start": "2643920",
    "end": "2649580"
  },
  {
    "text": "And the goal was\nto solve-- to find",
    "start": "2649580",
    "end": "2654640"
  },
  {
    "text": "paths that minimize\nthe product of weights. But what we've\ncovered in class is how to solve a problem when\nit's the sum of weights.",
    "start": "2654640",
    "end": "2661910"
  },
  {
    "text": "How do you do it? In one word, or less? Logs.",
    "start": "2661910",
    "end": "2666990"
  },
  {
    "text": "Just take logs. That converts\nproducts into sums. Now you start to get the flavor.",
    "start": "2666990",
    "end": "2672930"
  },
  {
    "text": "This is a problem that you could\ntake Djikstra or Bellman-Ford, and change all the\nrelaxation steps",
    "start": "2672930",
    "end": "2679390"
  },
  {
    "text": "and change it to work\ndirectly with products. That would work,\nbut it's more work.",
    "start": "2679390",
    "end": "2686570"
  },
  {
    "text": "You have to prove that\nthat's still correct. It's annoying to think about. And it's annoying to program.",
    "start": "2686570",
    "end": "2692660"
  },
  {
    "text": "It's not modular,\nblah, blah, blah. Whereas if you just\ndo this reduction, you can use exactly the\ncode that you had before,",
    "start": "2692660",
    "end": "2699990"
  },
  {
    "text": "at the end. So that's nice. This is why\nreductions are really the most common algorithm design\ntechnique because you don't",
    "start": "2699990",
    "end": "2707562"
  },
  {
    "text": "want to implement an algorithm\nfor every single problem you have. It would be nice if you could\nreuse some of those algorithms",
    "start": "2707562",
    "end": "2713200"
  },
  {
    "text": "that you had before. Reductions let you do that. Another one, which was on the\nquiz in the true-false-- quiz",
    "start": "2713200",
    "end": "2721680"
  },
  {
    "text": "two-- was converting longest\npath into shortest path. We didn't phrase\nit as a reduction.",
    "start": "2721680",
    "end": "2726990"
  },
  {
    "text": "It was just can you\nsolve longest path using Bellman-Ford. And the answer is yes. You just negate all the weights.",
    "start": "2726990",
    "end": "2733165"
  },
  {
    "text": "And that converts a\nlongest path problem into a shortest path problem. Easy.",
    "start": "2733165",
    "end": "2740309"
  },
  {
    "text": "Also on the quiz-- maybe I don't\nneed to write all of these down because they're a little\nbit weird problems. We made them up.",
    "start": "2740310",
    "end": "2746369"
  },
  {
    "text": "There was the-- what was\nthe duck tour called? Bird tours? Bird tours?",
    "start": "2746370",
    "end": "2751950"
  },
  {
    "text": "Aviation tours? Whatever. You want to visit a bunch of\nsites in some specified order.",
    "start": "2751950",
    "end": "2756990"
  },
  {
    "text": "The point in that problem\nis you could reduce it to a single shortest\npaths query.",
    "start": "2756990",
    "end": "2762900"
  },
  {
    "text": "And so if you already\nhave shortest path code, you don't have to think much. You just do the\ngraph application.",
    "start": "2762900",
    "end": "2768400"
  },
  {
    "text": "Done. Then there's the\nleaky tank problem, which is also a graph\nreduction problem.",
    "start": "2768400",
    "end": "2774570"
  },
  {
    "text": "You could represent all\nthese extra weird things that were happening\nin your car by just changing the graph a little bit.",
    "start": "2774570",
    "end": "2780202"
  },
  {
    "text": "And it's a very\npowerful technique. In this class, we see it\nmostly in graph reductions. But it could apply\nall over the place.",
    "start": "2780202",
    "end": "2788120"
  },
  {
    "text": "And while this is a powerful\ntechnique for coming up with new algorithms, it's\nalso a powerful technique",
    "start": "2788120",
    "end": "2794310"
  },
  {
    "start": "2790000",
    "end": "2850000"
  },
  {
    "text": "for proving things\nlike Tetris is NP-hard.",
    "start": "2794310",
    "end": "2801380"
  },
  {
    "text": "So what we proved\nis that a problem called 3-Partition can\nbe reduced to Tetris.",
    "start": "2801380",
    "end": "2809600"
  },
  {
    "start": "2809600",
    "end": "2817810"
  },
  {
    "text": "What's 3-Partition? 3-Partition is I\ngive you n numbers. I want to know can I\ndivide them into triples,",
    "start": "2817810",
    "end": "2823930"
  },
  {
    "text": "each of the same sum. So I have n numbers. Divide them into n\nover 3 groups of 3,",
    "start": "2823930",
    "end": "2830170"
  },
  {
    "text": "such that the sum of\neach of the 3s is equal. Sounds like an easy\nenough problem.",
    "start": "2830170",
    "end": "2835780"
  },
  {
    "text": "But it's an NP-complete problem. And people knew that since\none of the first papers.",
    "start": "2835780",
    "end": "2842950"
  },
  {
    "text": "I guess that was late\n'70s, early '80s, by Karp. So Karp already proved\nthis is standing",
    "start": "2842950",
    "end": "2848800"
  },
  {
    "text": "on the shoulders of giants. Karp proved 3-Partition\nis NP-complete,",
    "start": "2848800",
    "end": "2854359"
  },
  {
    "start": "2850000",
    "end": "2940000"
  },
  {
    "text": "so I don't need to\nthink about that. All I need to\nfocus on is showing that Tetris is harder\nthan 3-Partition.",
    "start": "2854360",
    "end": "2863470"
  },
  {
    "text": "This is what I mean by harder. Harder means-- so when\nI can reduce A to B,",
    "start": "2863470",
    "end": "2868990"
  },
  {
    "text": "we say the A-- B is at least\nas hard as A. Why's that?",
    "start": "2868990",
    "end": "2882090"
  },
  {
    "text": "Because I can solve A by solving\nB. I just apply this reduction and then solve B. So if I\nhad some good way to solve B,",
    "start": "2882090",
    "end": "2888570"
  },
  {
    "text": "it would turn into a\ngood way to solve A. Now 3-Partition-- which\nis A, here-- we're",
    "start": "2888570",
    "end": "2894940"
  },
  {
    "text": "pretty sure there's no good\nalgorithm for solving this. Pretty sure it's not in P.\nAnd so Tetris better not be P",
    "start": "2894940",
    "end": "2902900"
  },
  {
    "text": "either because if\nTetris were in P, then we could just take\nour 3-Partition, reduce it to Tetris, and then\n3-Partition would be in P.",
    "start": "2902900",
    "end": "2910990"
  },
  {
    "text": "In fact, all of the\nNP-complete problems, you can reduce to each other.",
    "start": "2910990",
    "end": "2916470"
  },
  {
    "text": "And so to show that something\nis at that little position, NP-complete, all\nyou need to do is",
    "start": "2916470",
    "end": "2921900"
  },
  {
    "text": "find some known\nNP-complete problem and reduce it to your problem.",
    "start": "2921900",
    "end": "2927520"
  },
  {
    "text": "So reductions are super useful\nfor getting positive results for making new\nalgorithms, but also",
    "start": "2927520",
    "end": "2933579"
  },
  {
    "text": "for proving negative results--\nshowing that one problem is harder than another. And if you already\nbelieve this is hard,",
    "start": "2933580",
    "end": "2939080"
  },
  {
    "text": "then you should\nbelieve this is hard. ",
    "start": "2939080",
    "end": "2948570"
  },
  {
    "start": "2940000",
    "end": "3071000"
  },
  {
    "text": "I think that's all I\nreally have time for. I'll give you a couple\nmore NP-complete problems.",
    "start": "2948570",
    "end": "2954480"
  },
  {
    "text": "Kind of fun. Traveling salesman problem,\nyou may have heard of. Let's say you have a graph.",
    "start": "2954480",
    "end": "2960020"
  },
  {
    "text": "And you want to find out\nthe shortest path that visits all the vertices,\nnot just one vertex.",
    "start": "2960020",
    "end": "2965770"
  },
  {
    "text": "That's NP-complete. We solved longest common\nsubsequence for two strings,",
    "start": "2965770",
    "end": "2971680"
  },
  {
    "text": "but if I give you\nn strings that you need to find the longest\ncommon subsequence of, that's NP-complete.",
    "start": "2971680",
    "end": "2977730"
  },
  {
    "text": "Minesweeper, Sudoku, most\npuzzles that are interesting are NP-complete.",
    "start": "2977730",
    "end": "2983990"
  },
  {
    "text": "SAT. SAT is a-- I give you a Boolean\nformula like x or y AND NOT",
    "start": "2983990",
    "end": "2993120"
  },
  {
    "text": "x-- something like that. I want to know is there some\nsetting of the variables that makes this thing come out true?",
    "start": "2993120",
    "end": "2998790"
  },
  {
    "text": "Is it possible to\nmake this true? That's NP-complete complete. This was actually\nthe first problem",
    "start": "2998790",
    "end": "3004310"
  },
  {
    "text": "that was shown NP-complete. There's this issue, right? If I'm going to show\neverything's NP-complete by reduction, how the\nheck do I get started?",
    "start": "3004310",
    "end": "3010910"
  },
  {
    "text": "What's the first problem? And this is the first problem. You could sort of prove it\nby definition, almost, of NP,",
    "start": "3010910",
    "end": "3018580"
  },
  {
    "text": "here. But I won't do that. Three coloring a graph.",
    "start": "3018580",
    "end": "3024610"
  },
  {
    "text": "Shortest paths. This is fun. Shortest paths in\na graph is hard. But in the real world, we\nlive in a three dimensional,",
    "start": "3024610",
    "end": "3030620"
  },
  {
    "text": "geometric environment. What if I want to\nfind the shortest path from this point,\nwhere I am, to that point, over on the ceiling\nor something.",
    "start": "3030620",
    "end": "3037500"
  },
  {
    "text": "And I can fly. That's NP-complete. It's kind of weird. Shortest paths in a two\ndimensional environment",
    "start": "3037500",
    "end": "3044160"
  },
  {
    "text": "is polynomial. It's a good thing that we are\non ground because, then, we can model things\nby two dimensions. We can model things by graphs.",
    "start": "3044160",
    "end": "3050470"
  },
  {
    "text": "But in 3D, shortest\npaths is NP-complete. So all these things where\na problem-- knapsack,",
    "start": "3050470",
    "end": "3056139"
  },
  {
    "text": "that's another one. We've already covered knapsack. We saw a pseudo-polynomial\nalgorithm. Turns out, you can't do\nbetter than pseudo-polynomial",
    "start": "3056139",
    "end": "3062390"
  },
  {
    "text": "unless P equals NP because\nknapsack is NP-complete. So there you go.",
    "start": "3062390",
    "end": "3068160"
  },
  {
    "text": "Computational complexity\nin 50 minutes. ",
    "start": "3068160",
    "end": "3071813"
  }
]