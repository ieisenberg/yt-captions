[
  {
    "text": "The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6060"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation, or to\nview additional materials",
    "start": "6060",
    "end": "12700"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "12700",
    "end": "25741"
  },
  {
    "text": "PROFESSOR: All right. Welcome back to 6890. Today we start a series of\nlectures on satisfiability.",
    "start": "25741",
    "end": "32380"
  },
  {
    "text": "We saw a little bit\nabout satisfiability in the first lecture. Now we're going to do it right,\nand do it more intensely,",
    "start": "32380",
    "end": "39530"
  },
  {
    "text": "and see a lot of examples. Today we'll just\nsee a few examples of using SAT to prevent\nNP-completeness or NP-hardness.",
    "start": "39530",
    "end": "46680"
  },
  {
    "text": "But over the next lecture or two\nwe will see many more examples. And SAT is really the\nmost common problem",
    "start": "46680",
    "end": "55160"
  },
  {
    "text": "that everyone uses\nto prove NP-hardness. So this is the moment you've\nall been waiting for, I suppose.",
    "start": "55160",
    "end": "61090"
  },
  {
    "text": "This is one of the\nmotivations for organizing this whole class, so we\ncan tell you all about SAT,",
    "start": "61090",
    "end": "66300"
  },
  {
    "text": "it's many variations, so\nyou get to learn them all, and then see lots\nof different ways you can SAT to\nrepresent your problems.",
    "start": "66300",
    "end": "73110"
  },
  {
    "text": "So without further\nado, let's get started. ",
    "start": "73110",
    "end": "81479"
  },
  {
    "text": "Today I'm going to give you\na whole bunch of problems",
    "start": "81480",
    "end": "87680"
  },
  {
    "text": "and definitions, and then we\nwill do reductions afterwards. So there's going to be\na lot of problems here.",
    "start": "87680",
    "end": "93950"
  },
  {
    "text": "You probably will have\ntrouble remembering them all, there are so many. But in particular,\nthe notes serve as a useful reference,\nlike, here's",
    "start": "93950",
    "end": "100200"
  },
  {
    "text": "all the versions you\nmight care about-- here's which ones are\nhard, which ones are easy. So with that in mind,\nget ready for the ride.",
    "start": "100200",
    "end": "109150"
  },
  {
    "text": "So the original SAT\nproblem is you're given a Boolean formula, which\nis like over the operators",
    "start": "109150",
    "end": "126280"
  },
  {
    "text": "AND, OR, and NOT. And in case you look\nat the literature, usually AND is the wedge, OR\nis the v, and NOT is the neg?",
    "start": "126280",
    "end": "136860"
  },
  {
    "text": "I don't know the\nname of that symbol. And it's over n\nvariables x1, x2, xn.",
    "start": "136860",
    "end": "151530"
  },
  {
    "text": "So usually, you're not\ngiven true or false so that you can construct\nthem by saying, x1 and not x1.",
    "start": "151530",
    "end": "157069"
  },
  {
    "text": "That's never true. So that's false, for example. And then you could\nnegate that and get true. And the question is, can\nyou set the variables",
    "start": "157070",
    "end": "163890"
  },
  {
    "text": "to make the formula true? ",
    "start": "163890",
    "end": "178520"
  },
  {
    "text": "So that's the general problem. This is the very\nfirst problem proved to be NP-complete by\nCook and then by Levin.",
    "start": "178520",
    "end": "187303"
  },
  {
    "text": "So it's usually called\nthe Cook-Levin theorem, the satisfiability\nis NP-complete. And I was looking at\nthe paper the other day.",
    "start": "187303",
    "end": "194670"
  },
  {
    "text": "It doesn't actually mention\nthe notion of NP in that paper. I think that came later. But the notion is there.",
    "start": "194670",
    "end": "203760"
  },
  {
    "text": "So I'll give you another\nversion of the same problem,",
    "start": "203760",
    "end": "215069"
  },
  {
    "text": "essentially, called circuit SAT. This is a useful perspective\nwhich we will see probably",
    "start": "215070",
    "end": "220650"
  },
  {
    "text": "not till next class. But another way\nto think about it. Also makes it the\nNP-completeness",
    "start": "220650",
    "end": "225970"
  },
  {
    "text": "a little bit more intuitive. ",
    "start": "225970",
    "end": "234989"
  },
  {
    "text": "OK. This is kind of the algebraic\nway of thinking about things. You have variables and\nyou write operators,",
    "start": "234990",
    "end": "240910"
  },
  {
    "text": "and you use parentheses\nand that sort of thing. But if you're more\ngraphically inclined, you could imagine you\nhave your excise as wires,",
    "start": "240910",
    "end": "250490"
  },
  {
    "text": "they're connected to gates--\nthis is an and gate, this is",
    "start": "250490",
    "end": "255879"
  },
  {
    "text": "an or gate, this is a negation. So you can imagine\nsomething like this.",
    "start": "255879",
    "end": "266000"
  },
  {
    "text": "So you can, generally, copy\nyour data and do various things.",
    "start": "266000",
    "end": "271890"
  },
  {
    "text": "And then this is the output. And so this is what you\nmight call the formula. ",
    "start": "271890",
    "end": "278870"
  },
  {
    "text": "It is the AND of the\nnegation of the OR of x3 and the AND of x1 and x2.",
    "start": "278870",
    "end": "286629"
  },
  {
    "text": "And then, pop off, it's also\nANDed with this thing again. So the one advantage\nof circuit SAT",
    "start": "286630",
    "end": "292490"
  },
  {
    "text": "is you can reuse complex\ncomputations, just by copying the signal.",
    "start": "292490",
    "end": "298260"
  },
  {
    "text": "Normally, in a formula,\nyou'd have to copy and paste that chunk of the formula. So you could imagine this\nlets you write formulas",
    "start": "298260",
    "end": "304910"
  },
  {
    "text": "slightly more efficiently. I think it doesn't. If you reuse things, you\ncan always write them",
    "start": "304910",
    "end": "312370"
  },
  {
    "text": "as a variable over here. Question. AUDIENCE: What about feedback? PROFESSOR: Feedback\nis forbidden.",
    "start": "312370",
    "end": "318020"
  },
  {
    "text": "So this should be a\ndirected acyclic graph. Yeah. Good question. So it's an acyclic circuit.",
    "start": "318020",
    "end": "328600"
  },
  {
    "text": "That would be another problem,\nwhich is harder than an NP. So circuit SAT is\nNP-complete when it's acyclic",
    "start": "328600",
    "end": "335169"
  },
  {
    "text": "and you can convert\nbetween one and the other. And it's a little\nbit more intuitive that you can write arbitrary\ncomputations as a circuit.",
    "start": "335170",
    "end": "343190"
  },
  {
    "text": "And then this is a question\nof whether you can-- the existence of some\nsetting of the AIs",
    "start": "343190",
    "end": "349699"
  },
  {
    "text": "is the same thing\nas saying, is there some set of guesses that\nwill lead me to a yes answer?",
    "start": "349700",
    "end": "357440"
  },
  {
    "text": "So that is intuitively\nlike NP and that's roughly how you prove these\nproblems are NP-complete.",
    "start": "357440",
    "end": "362680"
  },
  {
    "text": "You write the computation-- the checking\ncomputation-- to see whether your certificate is a\nvalid certificate as a circuit",
    "start": "362680",
    "end": "371250"
  },
  {
    "text": "or as a formula. And then the existential\nquantifiers on the xi's let you",
    "start": "371250",
    "end": "377770"
  },
  {
    "text": "do all the guessing to\nsee whether they're-- and this is biased, right? It's trying to find a true.",
    "start": "377770",
    "end": "383639"
  },
  {
    "text": "And that's exactly what NP does. It's trying to find a true path\nthat ends up answering yes.",
    "start": "383640",
    "end": "389759"
  },
  {
    "text": "So yes and true\nare symmetric here. So that's the extent of\nthe complexity theory",
    "start": "389760",
    "end": "396430"
  },
  {
    "text": "we'll do today. I'm going to give you\nmore versions of SAT. Next one is CNF SAT.",
    "start": "396430",
    "end": "403780"
  },
  {
    "text": "CNF stands for\nconjunctive normal form. ",
    "start": "403780",
    "end": "412820"
  },
  {
    "text": "I hope you all know\nprepositional logic. Because we're going to\nbe doing a bunch today. So ANDs are also\ncalled conjunctions,",
    "start": "412820",
    "end": "420210"
  },
  {
    "text": "ORs are called disjunctions. This is old terminology. So conjunctive normal form\nmeans that your formula",
    "start": "420210",
    "end": "432400"
  },
  {
    "text": "is an AND of clauses. ",
    "start": "432400",
    "end": "439430"
  },
  {
    "text": "What's a clause? Well a clause is going\nto be an OR of literals.",
    "start": "439430",
    "end": "445960"
  },
  {
    "text": " What's a literal? ",
    "start": "445960",
    "end": "453920"
  },
  {
    "text": "A literal is going\nto be xi or not xi.",
    "start": "453920",
    "end": "459450"
  },
  {
    "text": " So these are variables. So variables are\npossible literals",
    "start": "459450",
    "end": "464800"
  },
  {
    "text": "and the negations of variables\nand literals, and that's it. And that is CNF SAT.",
    "start": "464800",
    "end": "470030"
  },
  {
    "text": "So it's a special case of SAT\nwhere your formula happens to have this picture.",
    "start": "470030",
    "end": "476740"
  },
  {
    "text": "And in general, you can\nconvert arbitrary formulas into conjunctive normal form.",
    "start": "476740",
    "end": "482130"
  },
  {
    "text": "It's a normal form, meaning\nit's essentially unique. A minimal CNF formula is unique.",
    "start": "482130",
    "end": "488539"
  },
  {
    "text": "So there's a known\ntransformation to do that, polynomial time. That's how you\nprove this is hard. ",
    "start": "488540",
    "end": "495970"
  },
  {
    "text": "Another view in this picture. We'll use CNF SAT a lot, usually\nin even more specialized form.",
    "start": "495970",
    "end": "503190"
  },
  {
    "text": "But already, one useful view--\nwhich we saw a little bit in lecture one, we'll\nsee it again today--",
    "start": "503190",
    "end": "511690"
  },
  {
    "text": "is you can view such an\ninput as a bipartite graph. You have, let's say,\nvariables on the one side",
    "start": "511690",
    "end": "525420"
  },
  {
    "text": "and clauses on the other side. And then you have two types\nof connections, a clause--",
    "start": "525420",
    "end": "532490"
  },
  {
    "text": "in general, a clause is\ngoing to have degree three. And let's say the\ndashed edges are negated",
    "start": "532490",
    "end": "540649"
  },
  {
    "text": "and the solid edges\nare not negated. So this is a clause that\ninvolves x1 or x2 or not x3.",
    "start": "540650",
    "end": "547385"
  },
  {
    "start": "547385",
    "end": "552580"
  },
  {
    "text": "And in general, each\nof these clauses is going to involve some\nnumber of variables over here.",
    "start": "552580",
    "end": "559630"
  },
  {
    "text": "I said three, but I haven't\nactually gotten to three yet. That is 3SAT. So the most common\nform of CNF SAT we use",
    "start": "559630",
    "end": "567140"
  },
  {
    "text": "is called 3SAT, where it's CNF\nSAT in the special case where",
    "start": "567140",
    "end": "576230"
  },
  {
    "text": "the clause is an\nor three literals. And you can assume it's\nexactly three or at most three.",
    "start": "576230",
    "end": "585100"
  },
  {
    "text": "So that's like saying the\ndegree of each of the clause notes here is exactly three. ",
    "start": "585100",
    "end": "591610"
  },
  {
    "text": "And that's the\nproblem with it we used for proving Super\nMario Brothers was hard in the first lecture.",
    "start": "591610",
    "end": "598870"
  },
  {
    "text": "So in my notes I have\nthings nicely indented. So we had CNF SAT, which\nis a special case of SAT,",
    "start": "598870",
    "end": "605190"
  },
  {
    "text": "and then 3SAT, which is a\nspecial case of CNF SAT. A special case of 3SAT that's\nalso hard is called 3SAT-5.",
    "start": "605190",
    "end": "612352"
  },
  {
    "text": "I don't know that this\nis super standard, but I found at least one\npaper that gives it this name. This says that each\nvariable occurs in less than",
    "start": "612352",
    "end": "626610"
  },
  {
    "text": "or equal to five clauses, either\nin it's positive or negated",
    "start": "626610",
    "end": "632250"
  },
  {
    "text": "form. So this is sometimes called\nmax five occurrence 3-SAT.",
    "start": "632250",
    "end": "638390"
  },
  {
    "text": "And I think you can even make\nthem exactly five occurrances if you want. But, at most, five occurrances\nis usually what you want.",
    "start": "638390",
    "end": "645070"
  },
  {
    "text": "Question. AUDIENCE: Is that\ntight as 3SAT-4 NP? PROFESSOR: That's\na good question.",
    "start": "645070",
    "end": "650140"
  },
  {
    "text": "3SAT-4? I don't know. I would guess it's tight.",
    "start": "650140",
    "end": "656873"
  },
  {
    "text": "Because there are a lot of\npeople that mention five, but I haven't seen a mention\nthat four is polynomial. All right?",
    "start": "656873",
    "end": "662230"
  },
  {
    "text": "So we should figure that out. Other questions? Or it's probably the same one.",
    "start": "662230",
    "end": "667570"
  },
  {
    "text": "All right. Here's another\nspecial case of 3SAT. ",
    "start": "667570",
    "end": "674540"
  },
  {
    "text": "Monotone 3SAT.  This is where each clause is\nall positive or all negative.",
    "start": "674540",
    "end": "692075"
  },
  {
    "start": "692075",
    "end": "697840"
  },
  {
    "text": "So of course, if every\nclause is all positive, then you could set all\nthe variables to true",
    "start": "697840",
    "end": "704459"
  },
  {
    "text": "and you'll satisfy. If all the classes are negative,\nyou set all the variables to false and you satisfy.",
    "start": "704460",
    "end": "709520"
  },
  {
    "text": "But if half the clauses\nare all positive, half the clauses are all\nnegative, then that's hard. That's called monotone 3SAT.",
    "start": "709520",
    "end": "716700"
  },
  {
    "text": "I've actually not\nseen this used, but I imagine it is helpful\nin a few situations. ",
    "start": "716700",
    "end": "724170"
  },
  {
    "text": "This is definitely\nthe most common. Almost every proof\nstarts with 3SAT. But it's really good to\nknow all the extra things",
    "start": "724170",
    "end": "729700"
  },
  {
    "text": "you can assume about your 3SAT\nproblem and it still be hard. ",
    "start": "729700",
    "end": "734950"
  },
  {
    "text": "I have more hard versions,\nbut before we get there I'm going to tell you\nabout some easy versions.",
    "start": "734950",
    "end": "739988"
  },
  {
    "text": "And question. AUDIENCE: Is monotone 3SAT-5? PROFESSOR: Another\ngood question.",
    "start": "739988",
    "end": "745470"
  },
  {
    "text": "Monotone 3SAT-5, is\nthat NP complete? I don't know. Partly these were done\nat different times.",
    "start": "745470",
    "end": "752010"
  },
  {
    "text": " Monotone 3SAT is mentioned\nin Garey and Johnson",
    "start": "752010",
    "end": "757279"
  },
  {
    "text": "as done in 1978, presumably for\na particular hardness proof. 3SAT-5 is probably\na very old idea.",
    "start": "757280",
    "end": "765610"
  },
  {
    "text": "Probably this idea of\nreducing occurances goes to some logic thing. But the earliest reference\nI found was 1998,",
    "start": "765610",
    "end": "772070"
  },
  {
    "text": "and most people had forgotten\nabout monotone 3SAT by then. So it probably just\nhasn't been considered,",
    "start": "772070",
    "end": "777155"
  },
  {
    "text": "but it might be easy. Yeah.  AUDIENCE: The construction\nto limit to five variables--",
    "start": "777155",
    "end": "783940"
  },
  {
    "text": "should I believe work with the\nmonotone construction as well? PROFESSOR: OK. Conjecture.",
    "start": "783940",
    "end": "789769"
  },
  {
    "text": "Yes, it's hard.  OK. ",
    "start": "789770",
    "end": "799270"
  },
  {
    "text": "But stay tuned for\na certain answer. So let me tell you\nsome polynomial time",
    "start": "799270",
    "end": "805250"
  },
  {
    "text": "versions of SAT. The three is tight if you\nhave a clause being an",
    "start": "805250",
    "end": "812509"
  },
  {
    "text": "or of two literals,\nbut otherwise they're just like 3SAT-- or just like CNF SAT, I guess--",
    "start": "812510",
    "end": "819480"
  },
  {
    "text": "then this is polynomial time. And let me give you\na rough sketch why.",
    "start": "819480",
    "end": "828800"
  },
  {
    "text": "So if you have an\nor of two literals, that's something like x or y.",
    "start": "828800",
    "end": "835540"
  },
  {
    "text": "And the little bit of\npropositional logic you should know is the meaning\nof, let's say, a implies b.",
    "start": "835540",
    "end": "844480"
  },
  {
    "text": "Saying this should hold-- and a and b are\neither true or false--",
    "start": "844480",
    "end": "849550"
  },
  {
    "text": "is the same as\nsaying not a or b. Because if a is false, then the\nimplication tells you nothing.",
    "start": "849550",
    "end": "856840"
  },
  {
    "text": "If a is true, then it better\nbe the case that b is true. So either a is\nfalse, in which case",
    "start": "856840",
    "end": "862113"
  },
  {
    "text": "you don't worry about\nsomething, or a is true, and then b better\nbe true, as well. So these are the same--",
    "start": "862113",
    "end": "867272"
  },
  {
    "text": "maybe write triple\nequals, for these are equivalent logical statements. So we can apply\nthat here and say",
    "start": "867273",
    "end": "873720"
  },
  {
    "text": "x or y is the same thing\nas not x implies y,",
    "start": "873720",
    "end": "878740"
  },
  {
    "text": "or not y implies x. It's symmetric. But this is now just\na simple implication. If we ever set x to be\nfalse, then y must be true.",
    "start": "878740",
    "end": "887020"
  },
  {
    "text": "And every clause\ncan be converted into such an implication. You can build a graph of\nall such implications.",
    "start": "887020",
    "end": "893470"
  },
  {
    "text": "And then, turns out, to\nsolve 2SAT, you can just pick your favorite variable,\nxi, set it to true,",
    "start": "893470",
    "end": "899433"
  },
  {
    "text": "follow all implications,\nsee whether you get a contradiction. If you don't, then\nthe claim is there is a satisfying assignment\nwhere xi equals true.",
    "start": "899433",
    "end": "906490"
  },
  {
    "text": "So you can try that\nwith xi true, xi false. If there's any hope,\nthen one of them should say no contradiction.",
    "start": "906490",
    "end": "913510"
  },
  {
    "text": "Then just run with that. And you can prove by induction\nthat won't get stuck. It won't make any\nimpossible assignments,",
    "start": "913510",
    "end": "921610"
  },
  {
    "text": "unless there was no\nassignment to begin with. So that's why 2SAT is easy\nand one of the situations",
    "start": "921610",
    "end": "928450"
  },
  {
    "text": "you should be careful about. On the other hand,\nMAX 2SAT is hard.",
    "start": "928450",
    "end": "937930"
  },
  {
    "text": "So MAX 2SAT is you're\ngiven a 2SAT formula-- you're given a 2CNF formula-- and normally, we ask for an\nassignment to the variables",
    "start": "937930",
    "end": "946480"
  },
  {
    "text": "that satisfies all the\nclauses, but if you just want to satisfy k of them--",
    "start": "946480",
    "end": "952280"
  },
  {
    "text": "so satisfy k of the clauses.",
    "start": "952280",
    "end": "959060"
  },
  {
    "text": "So usually you\nwant to maximize k, but let's say, for a decision\nproblem, I'll give you k and I want to know, can you\nsatisfy k of the clauses?",
    "start": "959060",
    "end": "965630"
  },
  {
    "text": "That problem is NP hard. ",
    "start": "965630",
    "end": "971660"
  },
  {
    "text": "So that can be useful. If you can only\nrepresent 2SAT clauses, but you can somehow get\na maximization thing in,",
    "start": "971660",
    "end": "976820"
  },
  {
    "text": "then you're golden again. But 2SAT alone is not enough. There are some other\neasy-to-solve versions.",
    "start": "976820",
    "end": "987310"
  },
  {
    "text": "This is essentially a\ngeneralization of 2SAT is Horn SAT. ",
    "start": "987310",
    "end": "994455"
  },
  {
    "text": "It's maybe a little\nbit more surprising the first time you see it. Again, it's a special\ncase of CNF SAT, which",
    "start": "994455",
    "end": "1002398"
  },
  {
    "text": "you can tell by my indentation. ",
    "start": "1002398",
    "end": "1010520"
  },
  {
    "text": "Each clause has at most\none negative literal. ",
    "start": "1010520",
    "end": "1016839"
  },
  {
    "text": "So that means a clause is\ngoing to look something like-- has one negative?",
    "start": "1016840",
    "end": "1022850"
  },
  {
    "text": "Sorry. Sorry. Horn is the other way around. We will get-- that\nproblem is also solvable.",
    "start": "1022850",
    "end": "1028130"
  },
  {
    "text": "But the one that's\ncalled Horn SAT is-- there's at most one\npositive literal. So that means\nyou're form is going",
    "start": "1028130",
    "end": "1034430"
  },
  {
    "text": "to look something like not\nx or not y are not z or w.",
    "start": "1034430",
    "end": "1041599"
  },
  {
    "text": "So there's one positive. The rest are all negated. And we can do some more\nprepositional logic.",
    "start": "1041599",
    "end": "1049540"
  },
  {
    "text": "So use De Morgan's theorem. This is the same thing as\nthe negation of the AND.",
    "start": "1049540",
    "end": "1055615"
  },
  {
    "text": " OK? And then we can apply\nthis helpful rule.",
    "start": "1055615",
    "end": "1063880"
  },
  {
    "text": "And say this is the same thing\nas if x and y and z are true,",
    "start": "1063880",
    "end": "1069490"
  },
  {
    "text": "then w better be true. And so you can use essentially\nthe same algorithm that",
    "start": "1069490",
    "end": "1077680"
  },
  {
    "text": "you're-- I mean, slightly\nharder to check. If all three of these\nthings are true, then this one better be true.",
    "start": "1077680",
    "end": "1084460"
  },
  {
    "text": "But it's always a guarantee. You know this thing must happen. Just like in 2-SAT, if x\nhappened to be set to false,",
    "start": "1084460",
    "end": "1092850"
  },
  {
    "text": "then you know y must be true. So you can just follow\nthese implication chains. If you get a contradiction,\nyou know you're in trouble.",
    "start": "1092850",
    "end": "1098455"
  },
  {
    "text": "If you don't get\na contradiction, again, you can\nprove by induction that all will be well.",
    "start": "1098455",
    "end": "1103629"
  },
  {
    "text": "And so you just\nmake sure every time you assign a variable you\ndon't get a contradiction and you can satisfy\nany Horn formula.",
    "start": "1103630",
    "end": "1112130"
  },
  {
    "text": "So that's cool. ",
    "start": "1112130",
    "end": "1124833"
  },
  {
    "text": "So I didn't write\nit on the board, but this is\npolynomially solvable.",
    "start": "1124833",
    "end": "1130060"
  },
  {
    "text": "There's a symmetric version,\nwhich is called Dual Horn SAT.",
    "start": "1130060",
    "end": "1135800"
  },
  {
    "text": " So this is the same thing, but\nat most one negative literal",
    "start": "1135800",
    "end": "1143770"
  },
  {
    "text": "in each clause. And this is also solvable\nin polynomial time",
    "start": "1143770",
    "end": "1149200"
  },
  {
    "text": "because you can just negate all\nthe variables in your formula. And then when you\nget an answer, you",
    "start": "1149200",
    "end": "1154750"
  },
  {
    "text": "can negate all the\nvariables again to get the solution to\nthe original problem. So because you can\nsolve Horn SAT,",
    "start": "1154750",
    "end": "1161310"
  },
  {
    "text": "you can solve Dual Horn SAT. ",
    "start": "1161310",
    "end": "1168930"
  },
  {
    "text": "Cool. One more bad case I'll\nmention now is DNF SAT.",
    "start": "1168930",
    "end": "1177590"
  },
  {
    "text": "You might say, well, why do\nwe make things ANDs of ORs? What about ORs of ANDs?",
    "start": "1177590",
    "end": "1183690"
  },
  {
    "text": "So DNF is disjunctive\nnormal form, meaning the disjunctions\nare on the outside. ",
    "start": "1183690",
    "end": "1195240"
  },
  {
    "text": "So the formula is an AND of OR--",
    "start": "1195240",
    "end": "1204929"
  },
  {
    "text": "sorry. AUDIENCE: It's an OR of ANDs. PROFESSOR: Other way. ",
    "start": "1204930",
    "end": "1211289"
  },
  {
    "text": "OR of ANDs of literals.",
    "start": "1211290",
    "end": "1216660"
  },
  {
    "text": "We use some shorthand,\nnot-defined clauses here because we don't\nreally use this problem. Because it's polynomial time.",
    "start": "1216660",
    "end": "1224570"
  },
  {
    "text": "Why is it polynomial time? AUDIENCE: You can just\nevaluate one of the ANDs. PROFESSOR: Just evaluate\none of the ANDs.",
    "start": "1224570",
    "end": "1230560"
  },
  {
    "text": "If you-- AUDIENCE: If it's true. PROFESSOR: Right. It's true if any one\nof these is possible. So you can just check for\nobvious contradictions, like xi",
    "start": "1230560",
    "end": "1237950"
  },
  {
    "text": "and not xi. If that happens, then\nthat cause is impossible. Throw it away. If any clause has no\ninternal contradictions,",
    "start": "1237950",
    "end": "1244770"
  },
  {
    "text": "then just satisfy the clause. OK? It's basically-- the answer is\nyes whenever there is a clause.",
    "start": "1244770",
    "end": "1252120"
  },
  {
    "text": "It could be of the empty\nformula, no clauses. So writing-- you can also\nwrite any formula into DNF.",
    "start": "1252120",
    "end": "1258950"
  },
  {
    "text": "It's like an enumeration of\nall the true possibilities. But it takes exponential\ntime to do so.",
    "start": "1258950",
    "end": "1265480"
  },
  {
    "text": "So it's a funny asymmetry\nbetween AND and OR. That's life.",
    "start": "1265480",
    "end": "1271220"
  },
  {
    "text": "Yeah. AUDIENCE: I just want\nto say, for Horn SAT, even if you don't have\nHorn SAT or Dual Horn SAT,",
    "start": "1271220",
    "end": "1276410"
  },
  {
    "text": "you might have a formula\nwhere some renaming-- not necessarily all\nof the literals-- but renaming just\nsome of the literals",
    "start": "1276410",
    "end": "1281910"
  },
  {
    "text": "will put it in Horn SAT. And that's also in-- PROFESSOR: Oh. Just negating some of them. AUDIENCE: Yeah.",
    "start": "1281910",
    "end": "1287370"
  },
  {
    "text": "Like, each time a\nvariable occurs, you have to negate all the\ninstances of that variable. But these are called\nrenamable Horn formulas.",
    "start": "1287370",
    "end": "1294190"
  },
  {
    "text": "And it's also-- finding the\nrenaming is linear time. PROFESSOR: OK. So some kind of renamable Horn.",
    "start": "1294190",
    "end": "1301195"
  },
  {
    "text": " And by renaming, you just\nmean negating, right?",
    "start": "1301195",
    "end": "1307665"
  },
  {
    "text": "AUDIENCE: Yeah. The term used in the\nliterature is renamable Horn. PROFESSOR: There exists\na negation of, let's say,",
    "start": "1307665",
    "end": "1317640"
  },
  {
    "text": "some subset of the\nvariable's x such that Horn.",
    "start": "1317640",
    "end": "1328390"
  },
  {
    "text": "OK? That's the very concise version. So you get to choose some of the\nvariables to negate and make it a Horn clause that's\nalso polynomial time.",
    "start": "1328390",
    "end": "1335794"
  },
  {
    "text": "Cool. Thank you. ",
    "start": "1335795",
    "end": "1341309"
  },
  {
    "text": "You might be wondering\nat this point, how much-- I mean, do I have to\nremember all of these? And sometimes the answer is yes.",
    "start": "1341310",
    "end": "1346960"
  },
  {
    "text": "But there is actually\na dichotomy theorem that will tell you\nwhich versions of SAT are polynomial time and\nwhich versions are NP hard,",
    "start": "1346960",
    "end": "1354860"
  },
  {
    "text": "and we'll cover that\nin one more page. But I'm-- well, all of these\nare involved in the statement",
    "start": "1354860",
    "end": "1361860"
  },
  {
    "text": "of that dichotomy. Not quite all, but most of them. So it's not exactly a shortcut.",
    "start": "1361860",
    "end": "1367940"
  },
  {
    "start": "1367940",
    "end": "1382990"
  },
  {
    "text": "I would say a lot of\nthe time, the problem you're working with\ndoes not naturally map onto ANDs and ORs.",
    "start": "1382990",
    "end": "1389160"
  },
  {
    "text": "It sort of involves bits of\nsome sort-- there's a 0 and a 1 notion-- but they may not really\ncorrespond to logical notions",
    "start": "1389160",
    "end": "1396880"
  },
  {
    "text": "of true or false. And the operations\nyou can do on them may not correspond to AND or\nOR, or anything nice like that.",
    "start": "1396880",
    "end": "1404730"
  },
  {
    "text": "So the next two versions\nof SAT are in that spirit.",
    "start": "1404730",
    "end": "1409820"
  },
  {
    "text": " So this is usually, these\ndays, called 1-in3 SAT,",
    "start": "1409820",
    "end": "1417817"
  },
  {
    "text": "but originally it was\ncalled exactly-1 3SAT. ",
    "start": "1417817",
    "end": "1428860"
  },
  {
    "text": "So this is going to be a little\nbit weirder to write down, but like CNF SAT, the formula is\nthe end of a bunch of clauses.",
    "start": "1428860",
    "end": "1436950"
  },
  {
    "text": "So that part's the same. But now we're going\nto make a clause to be a relation on\nthree variables, which",
    "start": "1436950",
    "end": "1445789"
  },
  {
    "text": "is that exactly one of, let's\nsay, xi, xj, and xk is true.",
    "start": "1445790",
    "end": "1459950"
  },
  {
    "text": "So this means it could be\ntrue-false-false, xi is true, but the other two are false,\nit could be xj is true,",
    "start": "1459950",
    "end": "1467310"
  },
  {
    "text": "the other two are false, or\nit could be that xk is true and the other two are false.",
    "start": "1467310",
    "end": "1473000"
  },
  {
    "text": "But those are the only\nhappy assignments. Question. AUDIENCE: Is it exactly one\nof three variables or three",
    "start": "1473000",
    "end": "1478797"
  },
  {
    "text": "literals? PROFESSOR: Good question. The original statement\nis its variables,",
    "start": "1478797",
    "end": "1485808"
  },
  {
    "text": "so that's how I wrote it. This is usually called monotone. These days it's usually\ncalled monotone 1-in-3SAT.",
    "start": "1485808",
    "end": "1493440"
  },
  {
    "text": "I don't know how\nusually exactly. Sometimes it's called\nall positive 1-in-3SAT.",
    "start": "1493440",
    "end": "1498600"
  },
  {
    "text": " So let's say literals\nequal variables.",
    "start": "1498600",
    "end": "1510210"
  },
  {
    "text": "You could, of course,\nif you want, consider a more general version where\nyou can have negations. But you don't need\nto, so why bother.",
    "start": "1510210",
    "end": "1519273"
  },
  {
    "text": "That fact is usually\nforgotten in most proofs. So you'll see in the\nliterature a reduction from 1-in-3SAT with\nnegations, and they",
    "start": "1519273",
    "end": "1525220"
  },
  {
    "text": "have a negation gadget. It's like, you don't need\nto have a negation gadget. So why not skip it?",
    "start": "1525220",
    "end": "1533220"
  },
  {
    "text": "But there you go. Now I'll just mention\nI'm not a fan of the word monotone here because here\nwe have monotone to mean",
    "start": "1533220",
    "end": "1540059"
  },
  {
    "text": "all positive or all negative. Here we mean all positive. ",
    "start": "1540060",
    "end": "1545450"
  },
  {
    "text": "Not ideal reuse of terminology. I think that's why sometimes\nthis is all positive 1-in-3SAT. Anyway, it's a bit of a mess.",
    "start": "1545450",
    "end": "1551683"
  },
  {
    "text": "But that is the state\nof the literature. So you get it all.",
    "start": "1551683",
    "end": "1557309"
  },
  {
    "text": "All right. Here's another problem. ",
    "start": "1557310",
    "end": "1564419"
  },
  {
    "text": "Monotone not-exactly-1 3SAT. ",
    "start": "1564420",
    "end": "1571590"
  },
  {
    "text": "I should not have\nany suspense here. This is NP. OK?",
    "start": "1571590",
    "end": "1577940"
  },
  {
    "text": "This is NP-complete. This is also NP-complete. But not-exactly-1\n3SAT is polynomial.",
    "start": "1577940",
    "end": "1584560"
  },
  {
    "text": "So I think you\nknow what it means. A clause specifies that-- again,\nwe take an and of clauses.",
    "start": "1584560",
    "end": "1593040"
  },
  {
    "text": "And we want zero, two, or three\nof three variables are true.",
    "start": "1593040",
    "end": "1600490"
  },
  {
    "text": "In other words, exactly\none of them is false. No. I don't mean that.",
    "start": "1600490",
    "end": "1607050"
  },
  {
    "text": "Exactly one of them being\nfalse would be 1-in-3SAT again, just by negating\neverything, which we're",
    "start": "1607050",
    "end": "1613620"
  },
  {
    "text": "allowed to do if we want to. But this is different. This is saying, it could\nbe everything's false,",
    "start": "1613620",
    "end": "1621000"
  },
  {
    "text": "or it could be one\nthing is false, or it could be zero\nthings are false. ",
    "start": "1621000",
    "end": "1627559"
  },
  {
    "text": "But not two things are false. OK? This turns out to be polynomial.",
    "start": "1627560",
    "end": "1633240"
  },
  {
    "text": "And do I have-- oh. There's one funny\nthing here, which",
    "start": "1633240",
    "end": "1641510"
  },
  {
    "text": "is if all your clauses\nlook like this, you can set all your\nvariables to false.",
    "start": "1641510",
    "end": "1646570"
  },
  {
    "text": "So this is sort of\na trivial problem. But to make it more\ninteresting, you can say x1 equals true,\njust to get you started.",
    "start": "1646570",
    "end": "1655580"
  },
  {
    "text": "So there's no\ntrivial solution then and it still turns\nout this is easy.",
    "start": "1655580",
    "end": "1660600"
  },
  {
    "text": "Because if you think\nabout this long enough, as I did yesterday, this\nwill look something like--",
    "start": "1660600",
    "end": "1666710"
  },
  {
    "start": "1666710",
    "end": "1675529"
  },
  {
    "text": "if you have three variables,\neither they're all false-- then fine-- or if one of them is\ntrue, then you better",
    "start": "1675530",
    "end": "1683059"
  },
  {
    "text": "have another one true. That's a way of saying if\nthere's at least one of them, there better be at least two. That's what we want.",
    "start": "1683060",
    "end": "1688280"
  },
  {
    "text": "This has to be true for\nall shifts of i, j, k. So for each of i, j, k,\nif one of them is true,",
    "start": "1688280",
    "end": "1693370"
  },
  {
    "text": "you want to imply\nthe OR of the other. And this is the same\nas NOT xi or xj or xk.",
    "start": "1693370",
    "end": "1702910"
  },
  {
    "text": "Don't need the\nparentheses because it's associative communicative. And that is a dual horn clause.",
    "start": "1702910",
    "end": "1712530"
  },
  {
    "text": "And that's why\nthis is polynomial. Question. AUDIENCE: I think I'm\nconfused about the definition. Why can't they just\nall be true then?",
    "start": "1712530",
    "end": "1720240"
  },
  {
    "text": "PROFESSOR: Good question. Let's say x2 is false. I should double check.",
    "start": "1720240",
    "end": "1726399"
  },
  {
    "text": "I don't remember that in the\nstatement of the problem. We do not allow negations here. Once you allow negations,\nthis trick won't work.",
    "start": "1726400",
    "end": "1733470"
  },
  {
    "text": "But if these appear\nall in positive form, then we can convert\ninto the single negative and get dual horn.",
    "start": "1733470",
    "end": "1738840"
  },
  {
    "text": "Question. AUDIENCE: Are you allowed to\nmix the zero, two, and threes? Or does it have to be all\nthe clauses have to be--",
    "start": "1738840",
    "end": "1745179"
  },
  {
    "text": "PROFESSOR: All\ncauses look like-- all clauses say, zero, two, or\nthree of these three variables must be true.",
    "start": "1745180",
    "end": "1751897"
  },
  {
    "text": "You can't have a clause that\nsays zero of these are true and two of these are true. AUDIENCE: No. But if you have two of\nthese clauses that give you",
    "start": "1751897",
    "end": "1757293"
  },
  {
    "text": "all those choices,\ncan you choose one to be zero and then\nhave another one be two, or whatever.",
    "start": "1757293",
    "end": "1762820"
  },
  {
    "text": "PROFESSOR: For each clause,\nit's an independent choice whether you have zero, two, or\nthree of the variables true. Yeah.",
    "start": "1762820",
    "end": "1768269"
  },
  {
    "text": "So this OR is local\nto the clause. Other questions?",
    "start": "1768270",
    "end": "1774360"
  },
  {
    "text": "So it's still an\nAND of things that-- it's just we have\na weirder relation. Instead of just taking the OR\nof a bunch of things, which",
    "start": "1774360",
    "end": "1780425"
  },
  {
    "text": "would be saying at least\none of them is true, now we allow zero or two or\nthree of them to be true.",
    "start": "1780425",
    "end": "1787720"
  },
  {
    "text": "OK. One more version,\nthen we'll get to--",
    "start": "1787720",
    "end": "1793780"
  },
  {
    "text": "well, one and a\nhalf more versions--  then we'll get to the\ndichotomy theorem.",
    "start": "1793780",
    "end": "1800176"
  },
  {
    "start": "1800176",
    "end": "1806980"
  },
  {
    "text": "So x1 is Not-All-Equal-3SAT. ",
    "start": "1806980",
    "end": "1819382"
  },
  {
    "text": "I feel like that's\nabout all I need to write down, other than the\nfact that it is NP-complete.",
    "start": "1819382",
    "end": "1824570"
  },
  {
    "text": "But just in case,\nwhat this means is a clause is something\nlike Not-All-Equal",
    "start": "1824570",
    "end": "1833770"
  },
  {
    "text": "of three variables again.  And this is what I'm defining\nis going to be the monotone",
    "start": "1833770",
    "end": "1843410"
  },
  {
    "text": "Not-All-Equal-3SAT-- which is also hard-- ",
    "start": "1843410",
    "end": "1849480"
  },
  {
    "text": "where these are variables,\nnot just literals.",
    "start": "1849480",
    "end": "1858610"
  },
  {
    "text": "So no negations in monotone\nNot-All-Equal-3SAT.",
    "start": "1858610",
    "end": "1863710"
  },
  {
    "text": "Again, the original\nproof already had monotonicity in there, so\nthere's no work to be done.",
    "start": "1863710",
    "end": "1869370"
  },
  {
    "text": "Cool. So not all equal just\nmeans that they're not all the same values. So that means not all\ntrue and not all false.",
    "start": "1869370",
    "end": "1876720"
  },
  {
    "text": "Not TTT and not FFF.",
    "start": "1876720",
    "end": "1883580"
  },
  {
    "text": "I really like this\nversion of 3SAT because it's\ncompletely symmetric between true and false.",
    "start": "1883580",
    "end": "1889170"
  },
  {
    "text": "I mean, not at the clause level. Every clause has\nto be satisfied. Those are ANDed together\nin the logical level. But the xi's are\ntreated completely",
    "start": "1889170",
    "end": "1895345"
  },
  {
    "text": "symmetrically between\ntrue and false. You could just call\nthem red and blue. There's no reason to think\none is true one is false.",
    "start": "1895345",
    "end": "1900850"
  },
  {
    "text": "You just can't have them all be\nthe same color within a clause. OK.",
    "start": "1900850",
    "end": "1906280"
  },
  {
    "text": "So you could think of it as\na problem on hypergraphs. Three uniform hypergraphs,\nyou have all these triples of things.",
    "start": "1906280",
    "end": "1912150"
  },
  {
    "text": "You just want them to not\nall be colored the same. So it means two of one, one\nof the other two trues and one",
    "start": "1912150",
    "end": "1917740"
  },
  {
    "text": "false, two reds and one\nblue, two falses, one true. They're all this--\nthose are all good cases",
    "start": "1917740",
    "end": "1923293"
  },
  {
    "text": "and these are the bad cases.  Cool.",
    "start": "1923293",
    "end": "1930390"
  },
  {
    "text": "AUDIENCE: So this is\none or two in 3SAT? PROFESSOR: Yeah. You can think of this\nexactly one or two",
    "start": "1930390",
    "end": "1937240"
  },
  {
    "text": "in 3SAT, if you want to\nphrase it in this style. OK. So ideally, you should\nremember all of these.",
    "start": "1937240",
    "end": "1944899"
  },
  {
    "text": "But I'll tell you the\nmost important ones are regular 3SAT-- that's at least one of\neach thing is true--",
    "start": "1944900",
    "end": "1950559"
  },
  {
    "text": "exactly 1 3SAT, or 1-in-3SAT-- where exactly one of the things\nis true, and adding more things",
    "start": "1950560",
    "end": "1955610"
  },
  {
    "text": "breaks it-- and Not-All-Equal-3SAT. Those are the three\nimportant ones",
    "start": "1955610",
    "end": "1960750"
  },
  {
    "text": "to know from a lower\nbounds perspective. These others are\nto, like, be careful that you don't fall into\none of these things that",
    "start": "1960750",
    "end": "1966872"
  },
  {
    "text": "is polynomial. So occasionally MAX\n2SAT is the one other",
    "start": "1966872",
    "end": "1973507"
  },
  {
    "text": "that would be useful here. But remember these guys. They're super handy. Because what will happen when\nyou're proving hardness is you",
    "start": "1973507",
    "end": "1980940"
  },
  {
    "text": "fool around and\nyou try to find-- you build a gadget\nthat has two truths-- two possible ways to satisfy it.",
    "start": "1980940",
    "end": "1987920"
  },
  {
    "text": "Call one red and one blue\nor one true and one false. And then you try different\nways to combine three of them.",
    "start": "1987920",
    "end": "1994850"
  },
  {
    "text": "And you're trying to get-- you need some other\nthings-- but you're trying to get clause gadgets.",
    "start": "1994850",
    "end": "1999890"
  },
  {
    "text": "Trying to get them to-- ",
    "start": "1999890",
    "end": "2005549"
  },
  {
    "text": "when you combine three\nwires into a little gadget, you want them to be\nconstrained somehow.",
    "start": "2005550",
    "end": "2010740"
  },
  {
    "text": "That in order to be\nglobally OK, something must hold locally at\nthose three things. And it might end up being\na Not-All-Equal constraint,",
    "start": "2010740",
    "end": "2017380"
  },
  {
    "text": "it might end up being\nan exactly 1 constraint, or it might end up\nbeing a 3SAT constraint. With some negations\nto make it happy,",
    "start": "2017380",
    "end": "2024610"
  },
  {
    "text": "it should be one of\nthose to be hard. If you fall into something like\nthis, then that's not good.",
    "start": "2024610",
    "end": "2031190"
  },
  {
    "text": " Question. AUDIENCE: So let's say, since\nthis Not-All-Equal thing--",
    "start": "2031190",
    "end": "2038913"
  },
  {
    "text": "let's say you call\nit red and blue. What if you add green?",
    "start": "2038913",
    "end": "2043964"
  },
  {
    "text": "Then would there be-- would Not-All-Equal\n3SAT be NP-hard,",
    "start": "2043964",
    "end": "2051429"
  },
  {
    "text": "or would you need\n4SAT or something? PROFESSOR: Yeah. So what about ternary truth? ",
    "start": "2051429",
    "end": "2059488"
  },
  {
    "text": "I-- there might be a\nproblem on that in the PSET. But in general, you would\nhave to go through the work",
    "start": "2059488",
    "end": "2067570"
  },
  {
    "text": "to check which problems. I think those are\npretty uncommon. So usually what you do is\nif you have a gadget that",
    "start": "2067570",
    "end": "2074429"
  },
  {
    "text": "can be solved not two\nways, but four ways, is you call two of them\ntrue and two of them false and hope they behave\nmore or less identically.",
    "start": "2074429",
    "end": "2081570"
  },
  {
    "text": "So that's the most common\nanswer, practically, to what we do. But it certainly is plausible\nwith three different values.",
    "start": "2081570",
    "end": "2087952"
  },
  {
    "text": "Some of these are\ngoing to be hard but I don't know which ones. Hopefully all them, but\nyou have to be careful.",
    "start": "2087953",
    "end": "2094935"
  },
  {
    "text": "And definitely the next theorem\nI'm going to talk about-- the dichotomy theorem-- would get more complicated\nwith three colors.",
    "start": "2094935",
    "end": "2101500"
  },
  {
    "start": "2101500",
    "end": "2113100"
  },
  {
    "text": "Nice question. ",
    "start": "2113100",
    "end": "2118520"
  },
  {
    "text": "So let's do Schaefer's\nDichotomy Theorem.",
    "start": "2118520",
    "end": "2130620"
  },
  {
    "text": "This is about which versions\nof SAT are polynomial",
    "start": "2130620",
    "end": "2136370"
  },
  {
    "text": "and which versions\nare NP-complete. With the right set up, every\nproblem you can think of",
    "start": "2136370",
    "end": "2142070"
  },
  {
    "text": "is either polynomial\nor NP-complete. There's no things in between. These are called\nNP-intermediate problems.",
    "start": "2142070",
    "end": "2148540"
  },
  {
    "text": "So it's always going to be\none extreme or the other, as I'm about to set it up.",
    "start": "2148540",
    "end": "2154040"
  },
  {
    "text": "And this theorem is by Schaefer. And in the very\nsame paper he proves Not-All-Equal 3SAT and\n1-in-3SAT are hard.",
    "start": "2154040",
    "end": "2161599"
  },
  {
    "text": "Those are the original proofs. So it's a great paper. I have looked at it many times.",
    "start": "2161600",
    "end": "2168290"
  },
  {
    "text": "It's from 1978. So long time ago.",
    "start": "2168290",
    "end": "2173317"
  },
  {
    "text": "But still quite readable. ",
    "start": "2173318",
    "end": "2179720"
  },
  {
    "text": "So I don't know how much-- all\nthe last problems we've stated have this property, but\nI'll make it explicit again.",
    "start": "2179720",
    "end": "2185250"
  },
  {
    "text": "That's your formula is going\nto be an AND of clauses. And now we're going to allow\ngeneral kinds of clauses.",
    "start": "2185250",
    "end": "2192770"
  },
  {
    "text": "A clause is just going\nto be any relation on some number of variables. ",
    "start": "2192770",
    "end": "2199917"
  },
  {
    "text": "So there won't be any notion\nof literal here because you can put that in the relation.",
    "start": "2199917",
    "end": "2205700"
  },
  {
    "text": "I'll call this a general\nclause and say relation",
    "start": "2205700",
    "end": "2212200"
  },
  {
    "text": "on some variables.  So relation is something--",
    "start": "2212200",
    "end": "2218290"
  },
  {
    "text": "I give you a set of truth\nvalues for those variables and we'll say yes or no. That's valid or it's invalid.",
    "start": "2218290",
    "end": "2224456"
  },
  {
    "text": "You can think of a\nrelation as the set of all assignments, their\nvariables, and make it true. But you don't have to\nspecify that, per se.",
    "start": "2224457",
    "end": "2230715"
  },
  {
    "text": "You just sort of\nknow what it is.  OK. So I mean, in\nparticular, it could",
    "start": "2230715",
    "end": "2237880"
  },
  {
    "text": "be the OR of three\nvariables, then we get 3SAT. Or it could be the Not-All-Equal\nconstraint on three variables,",
    "start": "2237880",
    "end": "2243070"
  },
  {
    "text": "then it's Not-All-Equal\n3SAT, and so on.  OK. We are going to--",
    "start": "2243070",
    "end": "2250650"
  },
  {
    "text": "so I guess, sorry. The relationship should be given\nto you as a Boolean formula. So it could be an OR, or\nyou can write 1-in-3SAT",
    "start": "2250650",
    "end": "2257400"
  },
  {
    "text": "as a Boolean formula. It's just little tedious. You could say, well it could\nbe this, or it could be this, or it could be this. In general, I'm going\nto assume that they're",
    "start": "2257400",
    "end": "2266960"
  },
  {
    "text": "given to you in CNF form. Sorry, that's redundant. CNF has form in it.",
    "start": "2266960",
    "end": "2274109"
  },
  {
    "text": "Because any formula\ncan be made into CNF. So now CNF is an\nAND of ORs, so this",
    "start": "2274110",
    "end": "2282010"
  },
  {
    "text": "is going to be an AND of what\nwe might normally call clauses, but we're already\nin a clause, so I'm",
    "start": "2282010",
    "end": "2287170"
  },
  {
    "text": "going to call this subclauses.  Starting to sound like legalese.",
    "start": "2287170",
    "end": "2294507"
  },
  {
    "text": "I made up this word. It's not in the literature. So in general, your formula\nis an AND of clauses,",
    "start": "2294507",
    "end": "2300010"
  },
  {
    "text": "each one is your\nsum relation, which we're going to think of\nas an AND of subclauses. Of course, it's really just\nan AND of all the things.",
    "start": "2300010",
    "end": "2305448"
  },
  {
    "text": "But this is trying\nto be general. Because we're going to have\nconstraints in the clauses,",
    "start": "2305448",
    "end": "2311620"
  },
  {
    "text": "in particular. So then claim is SAT--",
    "start": "2311620",
    "end": "2319190"
  },
  {
    "text": "on these types of formulas-- so here's the\ndifference, I guess. To define the problem, you\nspecify what kind of relations",
    "start": "2319190",
    "end": "2328430"
  },
  {
    "text": "that you allow. So in 3SAT, we say, OK,\nso OR of three things. In CNF SAT, it's an OR\nof k things for any k.",
    "start": "2328430",
    "end": "2334700"
  },
  {
    "text": "In Not-All-Equal 3SAT, it's\nnot all equal of three things, and so on. So we give that up front and\nthen the decision problem",
    "start": "2334700",
    "end": "2343570"
  },
  {
    "text": "is well, I have\nn variables and I can combine them with these\nclauses however I want.",
    "start": "2343570",
    "end": "2352363"
  },
  {
    "text": "So we need some kind\nof infinity, right? If I gave you a\nspecific problem, then it's not going\nto be NP-hard.",
    "start": "2352363",
    "end": "2357599"
  },
  {
    "text": "Like, with these 10\nvariables, that's never going to be interesting. So I give you the notion\nof what causes are allowed,",
    "start": "2357600",
    "end": "2364690"
  },
  {
    "text": "what relations are\npermitted, and then I want to consider the class\nof all possible formulas you",
    "start": "2364690",
    "end": "2372490"
  },
  {
    "text": "can build with\nclauses of that type. So you can think of this as\nreally more of a clause type, like Not-All-Equal,\njust to be precise here.",
    "start": "2372490",
    "end": "2380840"
  },
  {
    "text": "And then we get\na version of SAT. And it's going to be polynomial\nif one of four cases happen.",
    "start": "2380840",
    "end": "2396190"
  },
  {
    "text": "At least one. Any one of these\nwill make it easy. We have seen almost\nall of these. So first one is setting\nall variables true",
    "start": "2396190",
    "end": "2408140"
  },
  {
    "text": "satisfies the formula. Well not just the formula,\nbut all formulas of this type.",
    "start": "2408140",
    "end": "2414490"
  },
  {
    "text": "Or all variables false\nsatisfies all clauses.",
    "start": "2414490",
    "end": "2429994"
  },
  {
    "text": " OK. This is a statement over all\nformulas with this clause type,",
    "start": "2429995",
    "end": "2435970"
  },
  {
    "text": "right? So, a statement about\nthe clause types. And it's one of the issues we\nwere having with not exactly 1 3SAT, because there the\nclause type allowed everything",
    "start": "2435970",
    "end": "2444897"
  },
  {
    "text": "to be false and it also\nhad everything to be true, so it was doubly bad. But of course is if\nyou have clauses where",
    "start": "2444897",
    "end": "2451560"
  },
  {
    "text": "this is true for all the-- you could allow different\ntypes of clauses. You could have Not-All-Equal\nplus 1-in-3SAT, that",
    "start": "2451560",
    "end": "2457190"
  },
  {
    "text": "will also be hard, of course. But if all of your clauses have\nthis property, then of course, you just globally set the\nvariables and you're done.",
    "start": "2457190",
    "end": "2463717"
  },
  {
    "text": " OK. That was the first case.",
    "start": "2463717",
    "end": "2468950"
  },
  {
    "start": "2468950",
    "end": "2479730"
  },
  {
    "text": "All right. So the next one is that\nit could be the subclauses",
    "start": "2479730",
    "end": "2489400"
  },
  {
    "text": "are all Horn, or all dual Horn.",
    "start": "2489400",
    "end": "2495704"
  },
  {
    "start": "2495705",
    "end": "2501190"
  },
  {
    "text": "So those are two happy\ncases we saw before. I mean, we can think\nof the overall problem",
    "start": "2501190",
    "end": "2506220"
  },
  {
    "text": "as an AND of the clauses,\nwhich are ANDs of subclauses, so if everything is a\nHorn or dual Horn thing,",
    "start": "2506220",
    "end": "2513010"
  },
  {
    "text": "then we're happy. And next case is the\nrelations are all 2-CNF.",
    "start": "2513010",
    "end": "2525670"
  },
  {
    "text": "So this would be the 2SAT case. If all the relations you're\nworking with are in 2-CNF, then when we AND them together,\nyou still have a 2-CNF formula,",
    "start": "2525670",
    "end": "2532455"
  },
  {
    "text": "so you can solve it by 2SAT. So these are all\nthings we've seen.",
    "start": "2532455",
    "end": "2537740"
  },
  {
    "text": "There's one more\ncase we haven't seen. Is there a question?",
    "start": "2537740",
    "end": "2542786"
  },
  {
    "text": "Yeah. AUDIENCE: Isn't 2SAT just a\nsubcase of the Horn and dual Horn thing?",
    "start": "2542786",
    "end": "2548048"
  },
  {
    "text": "Because you're always\ngoing to have-- PROFESSOR: It's true. 2SAT is a special case of Horn.",
    "start": "2548048",
    "end": "2553810"
  },
  {
    "text": "[INTERPOSING VOICES] AUDIENCE: You could have\none with two positives and another one\nwith two negatives.",
    "start": "2553810",
    "end": "2559160"
  },
  {
    "text": "AUDIENCE: Yeah, that's true. Yeah. PROFESSOR: Ah,\nright, right, right. So I see. So 2-CNF, some of the\nclauses are going to be Horn",
    "start": "2559160",
    "end": "2567320"
  },
  {
    "text": "and some of them are\ndual Horn, I think. So it doesn't fall into\nthis because it's not all one or the other. In general, those\ncombinations are bad.",
    "start": "2567320",
    "end": "2574570"
  },
  {
    "text": "But 2SAT is always OK. Good question. ",
    "start": "2574570",
    "end": "2582520"
  },
  {
    "text": "OK Last case is\nsome linear algebra.",
    "start": "2582520",
    "end": "2590855"
  },
  {
    "start": "2590855",
    "end": "2597540"
  },
  {
    "text": "This is one other\neasy case of SAT which doesn't come\nup very often, so I didn't write it\nas a separate one. ",
    "start": "2597540",
    "end": "2630050"
  },
  {
    "text": "So imagine equations like this. I take some number variables,\nI x OR them together and I say,",
    "start": "2630050",
    "end": "2637040"
  },
  {
    "text": "that should be 0, or similar\nthing, I set it equal to 1. Those are what I would call\nlinear equation over Zmod2.",
    "start": "2637040",
    "end": "2645200"
  },
  {
    "text": "Because in Zmod2-- the finite\nfield in two elements-- addition becomes x OR and\nthere's no multiplication here",
    "start": "2645200",
    "end": "2652589"
  },
  {
    "text": "because it's a linear system. So we can solve these things\nbecause z2 is a finite field.",
    "start": "2652590",
    "end": "2660930"
  },
  {
    "text": "We can use Gaussian\nelimination if-- even if I have a whole bunch\nof these equations, I can solve them all using\nGaussian elimination.",
    "start": "2660930",
    "end": "2668650"
  },
  {
    "text": "Or determine that\nthey're unsolvable. So that's another easy case\nfor SAT to be careful about.",
    "start": "2668650",
    "end": "2675790"
  },
  {
    "text": "And the theorem is if you\nhave one of these situations-- so you can't mix these.",
    "start": "2675790",
    "end": "2681780"
  },
  {
    "text": "If you have one\nclause of this type and another clause of this type,\nyour problem will be NP-hard.",
    "start": "2681780",
    "end": "2687680"
  },
  {
    "text": "So in general, you say,\notherwise SAT is NP-hard.",
    "start": "2687680",
    "end": "2694089"
  },
  {
    "start": "2694090",
    "end": "2699565"
  },
  {
    "text": "I guess it will\nactually be NP-complete here, the way we've set it up. Well, assuming the\nrelations are checkable.",
    "start": "2699565",
    "end": "2707319"
  },
  {
    "text": "So these are the only cases. This is an easy case,\nthis is an easy case, this is an easy case. It could be that multiple\nof these things are true.",
    "start": "2707320",
    "end": "2713640"
  },
  {
    "text": "Maybe your 2CNF\nand your all Horn. That will also be\npolynomial, of course. But if none of these\nindividually hold,",
    "start": "2713640",
    "end": "2720580"
  },
  {
    "text": "then your problem is NP-hard. Question. AUDIENCE: So how\ndoes this generalize from non-Boolean fields?",
    "start": "2720580",
    "end": "2726966"
  },
  {
    "text": "I'm sure the last one\nis also still true. PROFESSOR: Yeah. So we can go back to your\nquestion about three colors,",
    "start": "2726966",
    "end": "2732180"
  },
  {
    "text": "and the answer is I don't know. As far as I know, there's\nno theorem of that type. But there might be one. It's been 30 years.",
    "start": "2732180",
    "end": "2739150"
  },
  {
    "text": "So it wouldn't be surprising. Certainly, you can-- some\nof these positive results will generalize.",
    "start": "2739150",
    "end": "2745320"
  },
  {
    "text": "But I think even this one\nwould be a little tricky.",
    "start": "2745320",
    "end": "2750360"
  },
  {
    "text": "AUDIENCE: So MAX 2SAT\ndoesn't fall in this? PROFESSOR: Right. So here the goal is always to\nsatisfy all of the clauses.",
    "start": "2750360",
    "end": "2756335"
  },
  {
    "text": "It's always the AND\nof all the clauses. You could imagine a\nMAX 2SAT-like theorem.",
    "start": "2756335",
    "end": "2761560"
  },
  {
    "text": "My guess is most\nproblems will be hard. But as far as I know,\nthere's no such theorem.",
    "start": "2761560",
    "end": "2766680"
  },
  {
    "text": "Yeah. AUDIENCE: Is there any way\nto understand this theorem as making a geometric statement\nabout the relation being convex",
    "start": "2766680",
    "end": "2773760"
  },
  {
    "text": "and hypercube or something? Like, is there any\nsort of convexity property encoded in this?",
    "start": "2773760",
    "end": "2780470"
  },
  {
    "text": "PROFESSOR: I don't know. I would guess no. I know there is a\nmore modern take",
    "start": "2780470",
    "end": "2785910"
  },
  {
    "text": "on this that is more algebraic. So it's more like, if you\nstart with these things and you can build\nup in this way,",
    "start": "2785910",
    "end": "2791725"
  },
  {
    "text": "anything you can\nbuild up in this way are the polynomial\nsolvable versions of SAT. Anything you can't build\nup in this way is NP-hard.",
    "start": "2791725",
    "end": "2800035"
  },
  {
    "text": "So if you're interested in\nthat, check the Wikipedia page for Schaefer's\nDichotomy Theorem.",
    "start": "2800035",
    "end": "2805742"
  },
  {
    "text": "But I don't think there's\na geometric interpretation. This one, obviously, has a\ngeometric interpretation. But I think the others\nnot, would be my guess.",
    "start": "2805742",
    "end": "2813680"
  },
  {
    "text": "Yeah. AUDIENCE: So does\nthis say something about the complexity of\nrecognizing the clauses if you",
    "start": "2813680",
    "end": "2820260"
  },
  {
    "text": "interpret them as a language? PROFESSOR: If I give\nyou the formula that specifies the types\nof clauses, can you",
    "start": "2820260",
    "end": "2826220"
  },
  {
    "text": "determine whether any\nof these is the case. I would guess yes, but I\ndon't know of such a theorem.",
    "start": "2826220",
    "end": "2834690"
  },
  {
    "text": "So another good question. So many questions\nto think about here. It's definitely not\nexplicitly mentioned,",
    "start": "2834690",
    "end": "2841460"
  },
  {
    "text": "that I saw, in the\nSchaefer paper. But it's been around for\na while so people may have thought about that more.",
    "start": "2841460",
    "end": "2848100"
  },
  {
    "text": "It definitely can\nbe a little tricky to check which things are\nof this type, practically. So it would be nice if\nthere was an algorithm.",
    "start": "2848100",
    "end": "2857620"
  },
  {
    "text": "I would say-- so again,\npractically speaking, there was one hardness proof I\nwas trying to generate gadgets",
    "start": "2857620",
    "end": "2867380"
  },
  {
    "text": "computationally. So just enumerate\nall possible gadgets of a certain size\nfor my problem, and then see what formula\nthey were representing.",
    "start": "2867380",
    "end": "2875970"
  },
  {
    "text": "And then we would take that\nformula, do a Karnaugh map-- if you've ever done\ndigital logic stuff--",
    "start": "2875970",
    "end": "2882560"
  },
  {
    "text": "and then from that, you\nget a nice, minimal form. And then we would-- usually we could\njust look at the map",
    "start": "2882560",
    "end": "2888660"
  },
  {
    "text": "and say, oh, that's\njust equals, or that's not equals or something. We were hoping for-- we\nwere dreaming for-- one",
    "start": "2888660",
    "end": "2895590"
  },
  {
    "text": "of these things or 3SAT. We never got the\ngadget we wanted. So I think, with a Karnaugh\nmap, you could do this.",
    "start": "2895590",
    "end": "2902750"
  },
  {
    "text": "But that's exponential time. AUDIENCE: Yeah. PROFESSOR: So I\ndon't know for sure.",
    "start": "2902750",
    "end": "2908718"
  },
  {
    "text": "I should probably check\nthe algebraic view. That might-- AUDIENCE: That's a\nclever approach though.",
    "start": "2908718",
    "end": "2914353"
  },
  {
    "text": "PROFESSOR: Yeah. AUDIENCE: To do things\ncomputationally. PROFESSOR: It's\ndefinitely helpful. Because of course,\ncomputationally, you",
    "start": "2914353",
    "end": "2919579"
  },
  {
    "text": "can only look at small gadgets. But hopefully there is a small\ngadget and then a nice proof. So why do the hard work of\ngenerating them yourself when",
    "start": "2919580",
    "end": "2927215"
  },
  {
    "text": "the computer could\ndo it for you? It doesn't work\nfor all problems. Your problems need to\nbe locally isolatable.",
    "start": "2927215",
    "end": "2932830"
  },
  {
    "text": "To not worry about\nthe big picture. Other questions?",
    "start": "2932830",
    "end": "2939290"
  },
  {
    "text": "Cool. Well that's all the versions\nof SAT you need to know.",
    "start": "2939290",
    "end": "2945240"
  },
  {
    "text": "Because here we have the\nuniversality theorem. There will be another\none or two that we bump into but these are the\nthings you should all know.",
    "start": "2945240",
    "end": "2953980"
  },
  {
    "text": "It's really helpful\nwhen doing a proof to not have to worry about\nwhich version 3SAT you even are going to use, and just know\nthat these are all out here.",
    "start": "2953980",
    "end": "2961115"
  },
  {
    "text": "So that when you find a gadget\nthat happens to match one, and then you say,\noh, well I meant to do a reduction from\nNot-All-Equal 3SAT.",
    "start": "2961115",
    "end": "2968820"
  },
  {
    "text": "That's why I wanted\nto tell you all these, although I know it's a lot\nto take in all at once.",
    "start": "2968820",
    "end": "2974800"
  },
  {
    "text": "Let's do some\nreductions, finally. ",
    "start": "2974800",
    "end": "2983240"
  },
  {
    "text": "NP hardcore time. So the first one, I had\nactually never seen before,",
    "start": "2983240",
    "end": "2993910"
  },
  {
    "text": "but it's in Schaefer's paper. So I thought it'd\nbe fun to cover. ",
    "start": "2993910",
    "end": "3001430"
  },
  {
    "text": "Here's a problem,\nwhich is NP-hard, and we will actually\nprove this one NP-hard. 2-colorable perfect matching.",
    "start": "3001430",
    "end": "3007240"
  },
  {
    "text": " Let's say you're given a\nplanar 3-regular graph,",
    "start": "3007240",
    "end": "3016569"
  },
  {
    "text": "every vertex has degree 3. ",
    "start": "3016570",
    "end": "3024380"
  },
  {
    "text": "And what you'd like to do is\n2-color the vertices, a red and blue, such that every\nvertex has exactly one",
    "start": "3024380",
    "end": "3048765"
  },
  {
    "text": "neighbor of the same color. ",
    "start": "3048765",
    "end": "3059750"
  },
  {
    "text": "OK. So if you look at a vertex and\nit has three neighbors, then--",
    "start": "3059750",
    "end": "3066650"
  },
  {
    "text": "let's say we color\nthis guy red, there should be exactly one\nneighbor that's red. And so you can think of\nthis edge as being red,",
    "start": "3066650",
    "end": "3072765"
  },
  {
    "text": "and then the red edges will\nform a perfect matching in the graph. Every vertex will\nbe [? instant to ?] exactly one edge.",
    "start": "3072765",
    "end": "3079028"
  },
  {
    "text": "So that's the 2-colorable\nperfect matching. It's kind of-- well, sorry. The red edges form\nperfect matching",
    "start": "3079028",
    "end": "3084859"
  },
  {
    "text": "on the red nodes,\nand the black-- or the white edges, I guess--\nform a perfect matching",
    "start": "3084860",
    "end": "3091560"
  },
  {
    "text": "on the white nodes,\nblack nodes, whatever. So it's like two\nperfect matchings,",
    "start": "3091560",
    "end": "3099369"
  },
  {
    "text": "one in each color class. So this is a nice problem. You can think of it\nas SAT, in a sense.",
    "start": "3099370",
    "end": "3105270"
  },
  {
    "text": "It's, again, just a local\nconstraint on the notes. ",
    "start": "3105270",
    "end": "3110607"
  },
  {
    "text": "And so you can think of this\nas being a clause involving those four guys. I think, unless I\ndid something wrong,",
    "start": "3110607",
    "end": "3116859"
  },
  {
    "text": "you can think of it\nas 2SAT and 4SAT,",
    "start": "3116860",
    "end": "3121880"
  },
  {
    "text": "or a special version\nof 2SAT and 4SAT. Because-- is that right?",
    "start": "3121880",
    "end": "3128185"
  },
  {
    "text": "Yeah. So let's say red is true.",
    "start": "3128185",
    "end": "3133809"
  },
  {
    "text": "So what we're saying\nis if this guy is true, among these four nodes\nthere should be exactly one other one that is red.",
    "start": "3133810",
    "end": "3140069"
  },
  {
    "text": "On the other hand,\nif this is black, there should be exactly\none of them that is black. And so the other\ntwo should be red.",
    "start": "3140070",
    "end": "3146560"
  },
  {
    "text": "So in all cases, it's exactly\ntwo and four of them are red. And it's symmetric between red\nand black, so that seems good.",
    "start": "3146560",
    "end": "3152970"
  },
  {
    "text": "So this is a special\ncase of 2SAT and 4SAT. In case you were wondering\nwhether 2SAT and 4SAT is hard, here it is.",
    "start": "3152970",
    "end": "3158940"
  },
  {
    "text": "And I have the original\nreduction by Schaefer here.",
    "start": "3158940",
    "end": "3165865"
  },
  {
    "text": "Do I have any notes? No, that would be too easy. So here's a gadget and\nhere's another gadget,",
    "start": "3165865",
    "end": "3175220"
  },
  {
    "text": "and then they're\npasted together. And I should mention--",
    "start": "3175220",
    "end": "3181580"
  },
  {
    "text": "so Schaefer claims that if you\nhave a planar 3-regular graph, this problem is hard. But he doesn't prove it.",
    "start": "3181580",
    "end": "3186820"
  },
  {
    "text": "He just proves it\nfor general graphs, so I'm only going to prove\nit for general graphs. Maybe we can think about\nplanar 3-regular case,",
    "start": "3186820",
    "end": "3193970"
  },
  {
    "text": "but not right here. So this will just make a graph\ninstance to that problem.",
    "start": "3193970",
    "end": "3200180"
  },
  {
    "text": "So this gadget,\nthis is a k4 on-- and we're only\ndistinguishing x, y, and z.",
    "start": "3200180",
    "end": "3207090"
  },
  {
    "text": "And it has to form-- there's going to be one red\nedge and one black edge.",
    "start": "3207090",
    "end": "3212530"
  },
  {
    "text": "So maybe like this,\nand like this. Or like this, or like this. It's going to be a rotation\nof one of those assignments.",
    "start": "3212530",
    "end": "3218550"
  },
  {
    "text": "So I believe the\nclaim is x, y, and z, just looking at\nthose three vertices, should be not-all-equal.",
    "start": "3218550",
    "end": "3226490"
  },
  {
    "text": "OK? If two of them are\nred, by symmetry-- there's lots of\nrotational symmetry here-- so maybe two of them\nare red and one is black.",
    "start": "3226490",
    "end": "3233400"
  },
  {
    "text": "Then this guy can be set\nblack and you're happy. It's actually forced for\nthat guy to be black.",
    "start": "3233400",
    "end": "3238529"
  },
  {
    "text": "If two of them are black,\nthen these two must be red. And if all three of these\nare black, you're toast.",
    "start": "3238530",
    "end": "3245170"
  },
  {
    "text": "Because you should\nhave two of each. And if all three of them\nare red, you're in trouble.",
    "start": "3245170",
    "end": "3250640"
  },
  {
    "text": "So this is a not-all-equal\nclause gadget for this problem.",
    "start": "3250640",
    "end": "3257490"
  },
  {
    "text": "So we're going to reduce\nfrom Not-All-Equal 3SAT to 2-colorable perfect matching.",
    "start": "3257490",
    "end": "3263630"
  },
  {
    "text": "So we're representing a\nNot-All-Equal clause like this. And now what we need is the\nability to copy data, right?",
    "start": "3263630",
    "end": "3273250"
  },
  {
    "text": "So these are three variables\nthat-- at the moment, yeah, they can be red or blue. But what we need\nis that the same xi",
    "start": "3273250",
    "end": "3279329"
  },
  {
    "text": "can appear in multiple clauses. Because we have a\nbipartite graph. If every variable appeared\nin only in one clause,",
    "start": "3279330",
    "end": "3284420"
  },
  {
    "text": "the problem would\nbe really easy. So that's what this gadget does.",
    "start": "3284420",
    "end": "3289590"
  },
  {
    "text": "The claim is this\ngadget copies a value. And this, I think, requires-- so it says that these two\nguys must have the same color.",
    "start": "3289590",
    "end": "3297900"
  },
  {
    "text": "And so what you do\nis you just have-- for each Not-All-Equal\nclause-- you have one of these\nNot-All-Equal gadgets.",
    "start": "3297900",
    "end": "3304540"
  },
  {
    "text": "And then whenever you\nhave two variables that are supposed to be the\nsame thing here, it's x and x.",
    "start": "3304540",
    "end": "3309680"
  },
  {
    "text": "In our terminology, xi and xi. Then you're just going to\nconnect them with this gadget. And that will force\nthem to be equal.",
    "start": "3309680",
    "end": "3316230"
  },
  {
    "text": "Or over here we have y and y. So r here is Not-All-Equal. In our terminology, it'd\nbe NAE, xxy, and yzu.",
    "start": "3316230",
    "end": "3324089"
  },
  {
    "text": "This would represent\nthat formula. So the thing to check, which\nI will leave as an exercise,",
    "start": "3324090",
    "end": "3330670"
  },
  {
    "text": "because it seems-- at least, I couldn't find\na clean way to do it. It seems a little bit tedious.",
    "start": "3330670",
    "end": "3335990"
  },
  {
    "text": "That this forces equality\nbetween the two ends, not providing any\nother constraints.",
    "start": "3335990",
    "end": "3342615"
  },
  {
    "text": " So that was a simple proof.",
    "start": "3342615",
    "end": "3348616"
  },
  {
    "text": "One of few simple proofs. Still some cases to check. Yeah. AUDIENCE: Wait, you said\nthose general graphs,",
    "start": "3348616",
    "end": "3354465"
  },
  {
    "text": "they don't [? tap in? ?] PROFESSOR: Right. This is general graphs. So you might say, what about\nplanar 3-regular graphs?",
    "start": "3354465",
    "end": "3363490"
  },
  {
    "text": "Planar Not-All-Equal 3SAT--\nwhen this graph is planar-- when the bipartite graph\nis planar-- it's actually",
    "start": "3363490",
    "end": "3370000"
  },
  {
    "text": "easy to solve, polynomial. So you can't reduce from\nplanar Not-All-Equal 3SAT",
    "start": "3370000",
    "end": "3375490"
  },
  {
    "text": "because it's easy. But I would guess that\nin this situation-- and we just proved this is\na more general problem than",
    "start": "3375490",
    "end": "3381720"
  },
  {
    "text": "Not-All-Equal 3SAT-- what we would need at this\npoint is a crossover gadget. So that when-- and this\nthing is going to end up with",
    "start": "3381720",
    "end": "3388420"
  },
  {
    "text": "crossings-- if there's a gadget\nthat just communicates the information\nacross the crossover, without any other\nconstraints, then we",
    "start": "3388420",
    "end": "3394745"
  },
  {
    "text": "can just plug that in and\nget rid of all crossings. Then we have a planar graph\nand that would prove this part.",
    "start": "3394745",
    "end": "3400140"
  },
  {
    "text": "And then the other part is that\nwe have high degree nodes here. And so I'm guessing\nSchaefer had in",
    "start": "3400140",
    "end": "3405855"
  },
  {
    "text": "mind the gadget that\ntakes a high degree node and splits it up into lots of\nlittle lower degree nodes-- degree 3 nodes-- that\nsimulates the same effect.",
    "start": "3405855",
    "end": "3413770"
  },
  {
    "text": "But I don't know either gadget. But that would be\nmy guess on how to-- that would be the\nobvious approach of how",
    "start": "3413770",
    "end": "3419340"
  },
  {
    "text": "to proceed to get that theorem. Yeah. AUDIENCE: The other\ngadget is just [? 1b ?] split into\ndegree 3 copies connected",
    "start": "3419340",
    "end": "3427410"
  },
  {
    "text": "by that gadget. PROFESSOR: OK. Good. One gadget down.",
    "start": "3427410",
    "end": "3432440"
  },
  {
    "text": "Now we just need a crossover.  Other questions? ",
    "start": "3432440",
    "end": "3441549"
  },
  {
    "text": "All right. I want to talk about two\nfamilies of problems-- a proof hardness for two\nfamilies of problems-- next.",
    "start": "3441550",
    "end": "3448160"
  },
  {
    "text": "One is called pushing blocks. These come up in lots of\ndifferent video games.",
    "start": "3448160",
    "end": "3455810"
  },
  {
    "text": "One of the first, I\nthink, is called Sokoban. This goes back to 1984 and this\nis, I believe, the original CGA",
    "start": "3455810",
    "end": "3463860"
  },
  {
    "text": "graphics for Sokoban. And so you may have\nplayed Sokoban. I think it's in Emacs.",
    "start": "3463860",
    "end": "3470079"
  },
  {
    "text": "It's all over the place. Tons of implementations on it. You are at a warehouseman, that\nis what sokoban means literally",
    "start": "3470080",
    "end": "3476510"
  },
  {
    "text": "in Japanese. And you have these boxes. They're all one by one boxes. You are one by one. There are some bricks\nwhich cannot be moved.",
    "start": "3476510",
    "end": "3483150"
  },
  {
    "text": "You have some target\nlocations and your poor job is to move all these boxes\ninto the target locations.",
    "start": "3483150",
    "end": "3489190"
  },
  {
    "text": "Or rather, every\ntarget location must be covered by exactly one box. Boxes can overlap each\nother, you can push a box,",
    "start": "3489190",
    "end": "3495612"
  },
  {
    "text": "but you can only\npush one at a time because you're not that strong. So you could not, for\nexample, push left here.",
    "start": "3495612",
    "end": "3501030"
  },
  {
    "text": "But in general, your inputs\nare up, down, left, and right. Up, up, down, down,\nleft, right, left, right.",
    "start": "3501030",
    "end": "3507060"
  },
  {
    "text": "And you can only push\none block at a time. So if you push a\nblock into a corner, it's never going to move again.",
    "start": "3507060",
    "end": "3512970"
  },
  {
    "text": "So often you have to hit reset. There's a lot of\nways to get stuck. But this is a solvable instance.",
    "start": "3512970",
    "end": "3518500"
  },
  {
    "text": "I think it's level five\nin the original game. So this got started a\nhuge family of problems.",
    "start": "3518500",
    "end": "3525892"
  },
  {
    "text": "There are tons of\nother video games that have pushing\nblocks problems. This is one, in Legend of\nZelda: Minish Cap, which I think",
    "start": "3525892",
    "end": "3532080"
  },
  {
    "text": "is a Gameboy Advance game. It's been a while since\nI played this one. But here is a level\nwhere you have--",
    "start": "3532080",
    "end": "3538630"
  },
  {
    "text": "it's in perspective\na little bit, but this is really a 2D problem.",
    "start": "3538630",
    "end": "3543790"
  },
  {
    "text": "Everything is one by one. Believe me. You have one by one blocks. You're on ice.",
    "start": "3543790",
    "end": "3549670"
  },
  {
    "text": "So if you ever push a\nblock, it will slide off to infinity unless it hits\nsomething else, like a block.",
    "start": "3549670",
    "end": "3556530"
  },
  {
    "text": "And your goal is to\nget a block here. OK? Anyone see how to do it? ",
    "start": "3556530",
    "end": "3563893"
  },
  {
    "text": "AUDIENCE: It's like\nRicochet Robots. AUDIENCE: Can you\nwalk without sliding? PROFESSOR: It's a lot\nlike Ricochet Robots. Yeah. You can walk wherever you want.",
    "start": "3563893",
    "end": "3570100"
  },
  {
    "text": "There is no block. So there's lots of free\nspace in this case. So you can push this guy down\nand then push it over and then",
    "start": "3570100",
    "end": "3579250"
  },
  {
    "text": "push it up. It's actually not that hard. At some point I was\nthinking, well maybe I should stack up three\nhere so it ends up-- but no.",
    "start": "3579250",
    "end": "3586270"
  },
  {
    "text": "It's just three pushes\nand you're done. And if you watch the YouTube\nvideo that's linked from this,",
    "start": "3586270",
    "end": "3593120"
  },
  {
    "text": "you'll see him spend\nlike 30 minutes until he finds the\nright solution. In the game, it's frustrating\nbecause once you push them off,",
    "start": "3593120",
    "end": "3599842"
  },
  {
    "text": "they disappear and you have\nto leave and come back. Anyway. So out of all these games,\nwe've defined a bunch of models.",
    "start": "3599842",
    "end": "3608330"
  },
  {
    "text": "Here's one aspect of the model. So we have the\nfixed blocks, which are in red, the movable\nblocks, which are in cyan here,",
    "start": "3608330",
    "end": "3616590"
  },
  {
    "text": "and the robot is blue. Everything's one by one. And in one model, which we call\nPush, when you push a block,",
    "start": "3616590",
    "end": "3624310"
  },
  {
    "text": "it moves one step. That's the normal model. And that's like Sokoban.",
    "start": "3624310",
    "end": "3629359"
  },
  {
    "text": "And I'll talk about\nthe two in a second. In PushPush-- this is\nlike the on-ice version.",
    "start": "3629360",
    "end": "3635900"
  },
  {
    "text": "So you're not on ice. You can still kind of\nmove and then kind of counteract physics and\njust move one step.",
    "start": "3635900",
    "end": "3642300"
  },
  {
    "text": "But the blocks, they'll just fly\noff until they hit something. So here, this block will\nfly until it goes there.",
    "start": "3642300",
    "end": "3649090"
  },
  {
    "text": "In PushPushPush,\neverything is so slippery that if you hit a block and\nit hits another block that's",
    "start": "3649090",
    "end": "3655120"
  },
  {
    "text": "movable, they will all\njust keep going until they hit an immovable block.",
    "start": "3655120",
    "end": "3660896"
  },
  {
    "text": "AUDIENCE: But you don't slip. PROFESSOR: You still don't\nslip in any of these models. So there's another\nversion where you slip,",
    "start": "3660896",
    "end": "3666700"
  },
  {
    "text": "which has not been\nconsidered so much. Although Ricochet Robots\nhas been considered and that's in that genre.",
    "start": "3666700",
    "end": "3671890"
  },
  {
    "text": "Yeah? AUDIENCE: Is there a model\nwhere the block you first pushed stops and transfers its\nmomentum to the other--",
    "start": "3671890",
    "end": "3678150"
  },
  {
    "text": "PROFESSOR: Oh, cool. Yeah. Conservation momentum. So this one hits then\nthe next one goes. That's probably--",
    "start": "3678150",
    "end": "3683508"
  },
  {
    "text": "AUDIENCE: PushStopPush. PROFESSOR: PushStopPush. I would guess that's also\nhard because this ends up being the same proof.",
    "start": "3683508",
    "end": "3688994"
  },
  {
    "text": "I'm guessing that works,\nbut we would need to check. That's a good-- yeah. The push-- push ricochet push.",
    "start": "3688995",
    "end": "3696630"
  },
  {
    "text": "OK. One other thing here\nis the number two. You'll notice only\ntwo blocks are moving. And normally here, two is\nthe strength of the robot,",
    "start": "3696630",
    "end": "3704680"
  },
  {
    "text": "meaning if there are\nup to two in a row, you can push two blocks, but\nonce there are three in a row, you can't push at all.",
    "start": "3704680",
    "end": "3711069"
  },
  {
    "text": "The idea here is the\nsame thing happens. So they're just too heavy. After you get up\nto three of them,",
    "start": "3711070",
    "end": "3716720"
  },
  {
    "text": "then they'll stop sliding. And same with PushPushPush. AUDIENCE: So Sokoban\nis actually Push-1.",
    "start": "3716720",
    "end": "3723220"
  },
  {
    "text": "PROFESSOR: Sokoban\nis like Push-1. It's a little bit\nmore complicated, as illustrated in this table.",
    "start": "3723220",
    "end": "3728990"
  },
  {
    "text": "So Sokoban is here and you can\nonly push one block at a time.",
    "start": "3728990",
    "end": "3735400"
  },
  {
    "text": "There are fixed blocks. And in general, the models\nthat have fixed blocks are highlighted in pink here.",
    "start": "3735400",
    "end": "3741670"
  },
  {
    "text": "The slide thing is trying\nto capture whether it just moves one step or all the\nway until it can't anymore.",
    "start": "3741670",
    "end": "3748600"
  },
  {
    "text": "That's the max. And there's only a\ncouple of slide versions. I haven't put PushPushPush\nhere because that",
    "start": "3748600",
    "end": "3753620"
  },
  {
    "text": "would be the only difference--\nis what max means. But everything else\nyou just move one step.",
    "start": "3753620",
    "end": "3759800"
  },
  {
    "text": "Then the other issue\nis, what is the goal? I mentioned in Sokoban you\nhave to cover every storage",
    "start": "3759800",
    "end": "3766339"
  },
  {
    "text": "space with a box. That is the only problem with\nthat flavor, in this list",
    "start": "3766340",
    "end": "3771359"
  },
  {
    "text": "anyway. All the ones that\nare called Push-- the goal is just to get\nthe robot to a destination,",
    "start": "3771360",
    "end": "3776990"
  },
  {
    "text": "like in Mario or\nZelda or something. So that's the difference\nbetween Sokoban and Push-1.",
    "start": "3776990",
    "end": "3784630"
  },
  {
    "text": "Well Push-1-f, I suppose,\nis pushing one thing at a time with fixed blocks.",
    "start": "3784630",
    "end": "3791320"
  },
  {
    "text": "That's identical to Sokoban\nexcept for this issue of what the goal is. Either just to get from s to t--",
    "start": "3791320",
    "end": "3797070"
  },
  {
    "text": "the robot-- or to\nget all the blocks into a particular configuration. ",
    "start": "3797070",
    "end": "3803290"
  },
  {
    "text": "OK. Well there are some\nother things here. We've talked about Push-k.",
    "start": "3803290",
    "end": "3809260"
  },
  {
    "text": "Push-star is when k is infinity. So when you push, you can--\nyour arbitrary strength-- you can push as many blocks\nin a row as you want.",
    "start": "3809260",
    "end": "3816230"
  },
  {
    "text": "PushPush-k, PushPush-star, then. We've talked about f. f is\nwhen you have fixed blocks.",
    "start": "3816230",
    "end": "3821410"
  },
  {
    "text": "Push-1-f, Push-k-f,\nand Push-star-f. And then there's one\nother variation here",
    "start": "3821410",
    "end": "3828549"
  },
  {
    "text": "that's been considered,\nwhich is the x. This is when the path\nthat the robot takes must not cross itself--",
    "start": "3828550",
    "end": "3834830"
  },
  {
    "text": "must not revisit a square. This is-- there a\nlot of video games where after you leave a\nsquare, that square disappears.",
    "start": "3834830",
    "end": "3840230"
  },
  {
    "text": "It falls down into the\nabyss and so you're scared. So to represent those games--",
    "start": "3840230",
    "end": "3847210"
  },
  {
    "text": "there's another\nreason we did that, but I'll get to\nthat in a moment-- there's Push-k-x\nand Push-star-x.",
    "start": "3847210",
    "end": "3853740"
  },
  {
    "text": "OK. Now let's talk about complexity. That's the right\ntwo columns here. The reference and\nthe complexity.",
    "start": "3853740",
    "end": "3861120"
  },
  {
    "text": "So all of these\nproblems are NP-hard. OK? But there's this\nissue-- are they in NP",
    "start": "3861120",
    "end": "3868160"
  },
  {
    "text": "or are they PSPACE-Complete? Question. AUDIENCE: Sorry. What did you say\na fixed block is? PROFESSOR: A fixed block is a\nblock that cannot be pushed.",
    "start": "3868160",
    "end": "3875480"
  },
  {
    "text": "So it's just glued\nto the ground. AUDIENCE: So this is\njust whether or not there are some blocks\nthat are fixed. PROFESSOR: Right. In these problems, this\nis a more general version",
    "start": "3875480",
    "end": "3882259"
  },
  {
    "text": "than this game. Here, you allow some blocks\nto be specified as fixed. Here, everything is\npotentially movable.",
    "start": "3882260",
    "end": "3888490"
  },
  {
    "text": "Although if you have\nmore than k in a row, it's like a fixed block. If you have a k plus\n1 by k plus 1 block,",
    "start": "3888490",
    "end": "3893660"
  },
  {
    "text": "that's fixed, effectively. But you have a\nresolution issue that you",
    "start": "3893660",
    "end": "3898740"
  },
  {
    "text": "can't make tiny fixed\nblocks in this model. And in this model there are\nno fixed blocks whatsoever.",
    "start": "3898740",
    "end": "3903790"
  },
  {
    "text": "But here you can specify\nsome of them are fixed. ",
    "start": "3903790",
    "end": "3908810"
  },
  {
    "text": "A lot of versions. AUDIENCE: So push-star\nhas a boundary? Otherwise you could just-- PROFESSOR: Push-star does\nlive in a rectangular box.",
    "start": "3908810",
    "end": "3914569"
  },
  {
    "text": "Yeah. That is the one. AUDIENCE: Is it fixed? PROFESSOR: You could think of\nthat as fixed blocks or not.",
    "start": "3914570",
    "end": "3921450"
  },
  {
    "text": "If nothing is fixed, then you\ncan just walk off to infinity. Move all the blocks\naway and then come back and find your destination.",
    "start": "3921450",
    "end": "3927143"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: Right. So they're all NP-hard. There's a few that are\nknown to be PSPACE-Complete.",
    "start": "3927143",
    "end": "3933280"
  },
  {
    "text": "Push-Push, with a fixed\nstrength, is PSPACE-Complete.",
    "start": "3933280",
    "end": "3938560"
  },
  {
    "text": "Or with fixed blocks, I think,\nshould also be PSPACE-Complete.",
    "start": "3938560",
    "end": "3944240"
  },
  {
    "text": "That's not written here. But Push-Push-Star, all\nwe know is NP-hardness. ",
    "start": "3944240",
    "end": "3950800"
  },
  {
    "text": "Push-k-f, where k is at least 2,\nis known to be PSPACE-Complete.",
    "start": "3950800",
    "end": "3956050"
  },
  {
    "text": "But Push-1-f or Push-2,\nwithout the f, are both open.",
    "start": "3956050",
    "end": "3962160"
  },
  {
    "text": "And the reason we\nwere interested in a non-crossing path is that\nforces the problem to be an NP.",
    "start": "3962160",
    "end": "3967450"
  },
  {
    "text": "Because then you know\nthe solution path has polynomial length. You can visit each\nsquare at most once. So the hard part\nhere was to prove",
    "start": "3967450",
    "end": "3974069"
  },
  {
    "text": "that it's still NP-hard,\neven with non-crossing paths. We won't try to\nprove that today. So those, we actually have\ntight bounds of NP-complete.",
    "start": "3974070",
    "end": "3980770"
  },
  {
    "text": "And Sokoban-- there's a\nrelatively old result-- 1998-- that it's\nPSPACE-Complete. OK. Let's do some reductions.",
    "start": "3980770",
    "end": "3986950"
  },
  {
    "text": "So this first reduction\nis amazingly cool. It's by Michael Hoffman, 2000.",
    "start": "3986950",
    "end": "3993120"
  },
  {
    "text": "This is Push-star with\na rectangular box. OK. So you're here.",
    "start": "3993120",
    "end": "3998200"
  },
  {
    "text": "The outlined regions\nare the blank space. Everything else is\nfilled with a block. But every block\nis movable and you",
    "start": "3998200",
    "end": "4004369"
  },
  {
    "text": "can push arbitrarily strongly. So this is going\nto be variables. You're going to make\nsome choices here.",
    "start": "4004370",
    "end": "4010340"
  },
  {
    "text": "These are the connections\nbetween variables and clauses. This is a bipartite\ngraph encoded",
    "start": "4010340",
    "end": "4015380"
  },
  {
    "text": "in binary in the obvious way. There's variables\nhere, clauses here. There's a hole exactly when that\nliteral appears in that clause.",
    "start": "4015380",
    "end": "4024720"
  },
  {
    "text": "OK? There's actually two rows\nper variable, the true and the false. And then there's this gadget\nhere to connect the things.",
    "start": "4024720",
    "end": "4032050"
  },
  {
    "text": "And then these are\nthe clauses where we're going to check that\nthey were all set correctly. So let's go through it. This is the schematic\ndiagram of what I just said.",
    "start": "4032050",
    "end": "4039140"
  },
  {
    "text": "We're going to start here\nin the variable block and walk through each\nof the variables. Here's what the\nvariables look like.",
    "start": "4039140",
    "end": "4044740"
  },
  {
    "text": "You have two rows, the xi row\nand the xi complement row. That's another way\nto write NOT xi.",
    "start": "4044740",
    "end": "4051368"
  },
  {
    "text": "And you're going to count,\nhow many times does xi appear in any clauses? In the positive\nform, negative form. That's called ni and ni bar.",
    "start": "4051368",
    "end": "4058192"
  },
  {
    "text": "And you're going to\nmeasure out these lengths. You can negate variables to\nmake sure that ni is always bigger than ni bar.",
    "start": "4058193",
    "end": "4064230"
  },
  {
    "text": "So do that. So in this case, ni is this\nbig, ni bar is this big. Measure it out. This is your blank space.",
    "start": "4064230",
    "end": "4070052"
  },
  {
    "text": "And what you're allowed-- what we will show you\nyou're allowed to do-- is either move up here\nand move all the way",
    "start": "4070052",
    "end": "4075900"
  },
  {
    "text": "over here and then up. Or to move here and all\nthe way over and then up. And this star is so that the\none block that's here could fit.",
    "start": "4075900",
    "end": "4084742"
  },
  {
    "text": "And then you can\ngo over to this x. In general, in these gadgets,\nthe x is your target. x marks the spot. All right?",
    "start": "4084742",
    "end": "4090120"
  },
  {
    "text": "For the gadget. And then there's a\nglobal x, which will be at the end of the clauses.",
    "start": "4090120",
    "end": "4096410"
  },
  {
    "text": "So what does this do? Well if you think about\nthis connection block-- this is the bipartite\ngraph encoded as a matrix--",
    "start": "4096410",
    "end": "4104040"
  },
  {
    "text": "the number of blank spaces\nover here is exactly ni. So this is why, after you\npush ni steps or ni bar steps,",
    "start": "4104040",
    "end": "4112097"
  },
  {
    "text": "you'll have to stop. Because there are no blank\nspaces to the right of you. Then the only thing\nyou can do is go up because there are no\nblank spaces below you.",
    "start": "4112097",
    "end": "4118663"
  },
  {
    "text": "So in general, these gadgets are\nsuper tight because above you there's nothing. It's all blocks.",
    "start": "4118663",
    "end": "4123799"
  },
  {
    "text": "And below you and left\nof you, it's all blocks. There's nothing you can do. You put the next\nvariable gadget here, so then that remains true.",
    "start": "4123800",
    "end": "4130979"
  },
  {
    "text": "In your row, and\nin your columns, you're completely packed. So the only choice you have\nis to do this or to do this.",
    "start": "4130979",
    "end": "4137130"
  },
  {
    "text": "And you will fill the\nrow that you choose. Exactly.",
    "start": "4137130",
    "end": "4142233"
  },
  {
    "text": "OK? So that's the variable gadget. AUDIENCE: What prevents\nyou from choosing both? PROFESSOR: You\ncould choose both.",
    "start": "4142233",
    "end": "4148649"
  },
  {
    "text": "Or you could do a little bit\nof one and then do the other. That's true. But as we'll see, that\nonly makes your life worse.",
    "start": "4148649",
    "end": "4154033"
  },
  {
    "text": "AUDIENCE: OK. PROFESSOR: Yeah. Good question. So next, we enter\nthe bridge gadget,",
    "start": "4154033",
    "end": "4159318"
  },
  {
    "text": "which is these two pictures\nand it looks like this. This is basically a\nlocking mechanism.",
    "start": "4159319",
    "end": "4165058"
  },
  {
    "text": "So you start here-- I'll just tell you're\nsupposed to do. You walk over through\nthis blank space,",
    "start": "4165058",
    "end": "4170380"
  },
  {
    "text": "then you push all of\nthese things down to here. So this basically prevents\nyou from going back",
    "start": "4170380",
    "end": "4178970"
  },
  {
    "text": "to where you were. So you push all that down. And then you go over here\nand you tunnel down--",
    "start": "4178970",
    "end": "4187040"
  },
  {
    "text": "so I think you're moving\nthese blocks over to here. That's another kind of lock. And then you're pushing\nthis stuff down to here.",
    "start": "4187040",
    "end": "4194920"
  },
  {
    "text": "And then you get there. So when all is said and\ndone, this will be down here, this will be down here,\nthis will be over here.",
    "start": "4194920",
    "end": "4202180"
  },
  {
    "text": "And so when you're\nin the clause block-- again, you have full\nrows to your left, full columns above you.",
    "start": "4202180",
    "end": "4207889"
  },
  {
    "text": "So there's nothing-- you can't\ngo up and you can't go left. That's the purpose\nof this gadget-- is to connect this\nthing to this thing.",
    "start": "4207890",
    "end": "4213739"
  },
  {
    "text": "If there was a teleporter,\nit would be much easier. We could just leave\nthese all filled. But we want to get up to here,\nbut make sure this is all",
    "start": "4213740",
    "end": "4221290"
  },
  {
    "text": "filled at the end. So that's the sole\npurpose of this gadget. OK. Now a clause.",
    "start": "4221290",
    "end": "4228336"
  },
  {
    "text": "How do we do a clause again? So you have-- there's\nthree spaces here because this is 3SAT.",
    "start": "4228336",
    "end": "4233760"
  },
  {
    "text": "You can move down one here,\nand then move over two. These two blocks go here. And then you can get to the x.",
    "start": "4233760",
    "end": "4240139"
  },
  {
    "text": "Or you can go down here\nand over and get to the x. Or you can go here\nand down, over.",
    "start": "4240140",
    "end": "4245829"
  },
  {
    "text": "And this is possible if\nthere's a hole below you. This is possible if\nthere's a hole below you, and this is possible if\nthere's a hole below you.",
    "start": "4245830",
    "end": "4252322"
  },
  {
    "text": "These are aligned\nwith these things. So with exact-- I\ndidn't quite align them, but these three columns\nare these three columns.",
    "start": "4252322",
    "end": "4260750"
  },
  {
    "text": "And if one of these\nis unfilled, you'll be able to get\nfrom here to here. If they're all\nfilled, you won't.",
    "start": "4260750",
    "end": "4268030"
  },
  {
    "text": "Because it will be full\ncolumns all the way down. ",
    "start": "4268030",
    "end": "4273070"
  },
  {
    "text": "So that's a clause gadget\nbecause things were filled when",
    "start": "4273070",
    "end": "4278690"
  },
  {
    "text": "you chose that thing to be-- maybe I-- did I\nget it backwards?",
    "start": "4278690",
    "end": "4284655"
  },
  {
    "text": "AUDIENCE: So you're really\nchoosing the opposite. PROFESSOR: Right. You're choosing the\nthing to be not true",
    "start": "4284655",
    "end": "4291725"
  },
  {
    "text": "and leaving the other one\nto be as true as possible by not pushing it. So it leaves the hole so\nthat later you can traverse--",
    "start": "4291725",
    "end": "4297219"
  },
  {
    "text": "AUDIENCE: So that's why you\nwouldn't want to choose both. PROFESSOR: Right. If you chose both, that\nwould be like making them both of them not\ntrue, and so you don't get any of the benefits.",
    "start": "4297220",
    "end": "4303890"
  },
  {
    "text": "OK? That's Push-star. Cool? ",
    "start": "4303890",
    "end": "4313840"
  },
  {
    "text": "OK. Let's do Push-Push-1 in 3D. This is really easy.",
    "start": "4313840",
    "end": "4320530"
  },
  {
    "text": "This is almost like the\nSuper Mario Brothers proof. So it's just old drawing style.",
    "start": "4320530",
    "end": "4327180"
  },
  {
    "text": "And we've drawn sort\nof the dual graphs, so these paths are\nlittle width-1 tunnels that you can walk down.",
    "start": "4327180",
    "end": "4333283"
  },
  {
    "text": "So you start up here and you can\neither push this thing this way or this way. And so you're choosing which\nway you'll be able to traverse.",
    "start": "4333283",
    "end": "4339910"
  },
  {
    "text": "Either you can go the true\nway or the false way-- the opposite of wherever\nyou push that block.",
    "start": "4339910",
    "end": "4345054"
  },
  {
    "text": "And so that cuts off\none of the things. Then that path is going to be\nconnected to all of the clauses that it satisfies.",
    "start": "4345055",
    "end": "4350920"
  },
  {
    "text": "That that literal\nchoice satisfies. Then there's this\ngadget to prevent you from wrapping around\nto the other side.",
    "start": "4350920",
    "end": "4356720"
  },
  {
    "text": "Whichever one you come down, you\nwill block off the other path. And then you do that again\nfor the next variable,",
    "start": "4356720",
    "end": "4362640"
  },
  {
    "text": "the next variable, and so on. At the end of the\nlast variable, you run through all the clauses. So how do the clauses work?",
    "start": "4362640",
    "end": "4368600"
  },
  {
    "text": "Very simple. If any of the literals\nthat satisfy the clause",
    "start": "4368600",
    "end": "4374730"
  },
  {
    "text": "were visitable, then you\ncould push this block over. And then later, when\nyou visit the clause--",
    "start": "4374730",
    "end": "4380112"
  },
  {
    "text": "at the end, when\nyou visit the clause and try to traverse it--\nif there's nothing here when you push this\nblock down, it",
    "start": "4380112",
    "end": "4385125"
  },
  {
    "text": "will go all the\nway to the bottom and you're trapped, never to get\nto the finish line down here.",
    "start": "4385125",
    "end": "4390580"
  },
  {
    "text": "But if at least one of these was\nin, then it will block this guy and you can-- if that's\ntrue for all the clauses--",
    "start": "4390580",
    "end": "4397530"
  },
  {
    "text": "then you can get\nto the destination. So these are just\nclause checking. And that's a very\nstraightforward 3SAT proof.",
    "start": "4397530",
    "end": "4406208"
  },
  {
    "text": "In fact, the previous\nproof is based on this one. And the next proof\nis based on this one. And the Nintendo proofs\nare all based on this one.",
    "start": "4406208",
    "end": "4412560"
  },
  {
    "text": "This is sort of the prototype. Yeah. AUDIENCE: Do you have the\ncrossover gadget that--",
    "start": "4412560",
    "end": "4417747"
  },
  {
    "text": "PROFESSOR: So this is 3D. AUDIENCE: Oh, oh. PROFESSOR: So\nthere's no crossover. But in 2D, we want\nto get a crossover.",
    "start": "4417747",
    "end": "4423610"
  },
  {
    "text": "So here's how we do 2D. And this will work for\nboth Push and Push-1-- Push and Push-Push.",
    "start": "4423610",
    "end": "4430100"
  },
  {
    "text": "The only place we're\nusing Push-Push was this clause gadget, so let's\nfirst get rid of that aspect.",
    "start": "4430100",
    "end": "4436350"
  },
  {
    "text": "So here's something\ncalled a lock, and you're going to have to\nbelieve a little bit here. ",
    "start": "4436350",
    "end": "4442730"
  },
  {
    "text": "Your goal, let's say,\nis to get from a to b. And this is what happens if you\ntry to go from a to b directly.",
    "start": "4442730",
    "end": "4451730"
  },
  {
    "text": "There isn't much that\nyou can move-- well, you can maybe move i down,\nj left, and like this, but--",
    "start": "4451730",
    "end": "4459659"
  },
  {
    "text": " yes. You can move i down, j left, e\ndown, f left, b down, but not c",
    "start": "4459660",
    "end": "4471880"
  },
  {
    "text": "left, because d is in the way. OK? ",
    "start": "4471880",
    "end": "4477869"
  },
  {
    "text": "So you can't get from a to b. But if you visit from u, and you\npush this block out of the way,",
    "start": "4477870",
    "end": "4485448"
  },
  {
    "text": "then you'd come back\nthrough a, then you can do-- AUDIENCE: Push them over. PROFESSOR: You can\ndo these things. Push them all over.",
    "start": "4485448",
    "end": "4490590"
  },
  {
    "text": "And then you have\nroom to push c over, and then a can go all the\nway down, and you're through.",
    "start": "4490590",
    "end": "4495750"
  },
  {
    "text": "So this unlocks the lock. Then allowing a to\nbe traversal later.",
    "start": "4495750",
    "end": "4501362"
  },
  {
    "text": "AUDIENCE: And going\nbackwards from v to u would lock it again? PROFESSOR: No. This is not a reversible gadget.",
    "start": "4501362",
    "end": "4506820"
  },
  {
    "text": "It only works once. AUDIENCE: [INAUDIBLE]. PROFESSOR: You can't unlock.",
    "start": "4506820",
    "end": "4511850"
  },
  {
    "text": "Once l's down, it's\npermanently there.  So now we're going to use\nthis in a clause as follows.",
    "start": "4511850",
    "end": "4519960"
  },
  {
    "text": "So here's the lock\nand then there's this schematic above it. So we have three\npossible entries. This is xi or NOT xj or xk.",
    "start": "4519960",
    "end": "4529383"
  },
  {
    "text": "And we're going\nto use this gadget to say, well if you come\ndown the true path from here, you're going to have to\npush this block down,",
    "start": "4529383",
    "end": "4535850"
  },
  {
    "text": "which prevents you from using\nthe other half of the gadget. So either you move\ny or you move x.",
    "start": "4535850",
    "end": "4541522"
  },
  {
    "text": "From then on, you can only\ndo west to south traversal or only north to east traversal. So it blocks the other path.",
    "start": "4541522",
    "end": "4547974"
  },
  {
    "text": "So this is--\nbecause I don't want to come down here,\nunlock the lock, and then go back on\na different path.",
    "start": "4547975",
    "end": "4553340"
  },
  {
    "text": "Because that's not something\nthat's necessarily true. So as you come\ndown one of these, you force these gadgets to\nbe in a particular state that",
    "start": "4553340",
    "end": "4559849"
  },
  {
    "text": "will only let you come\nback the way you came-- go back the way you came. And then you can unlock\nthe lock and then",
    "start": "4559850",
    "end": "4566910"
  },
  {
    "text": "this just connects back. OK? Then later, when we're\nchecking the clauses-- when we come through\nall the clauses",
    "start": "4566910",
    "end": "4572460"
  },
  {
    "text": "to make sure that they're true-- we're going to route those\nfrom a to b, to a to b, to a to b for all the locks. And if they're all\nunlocked, then we'll",
    "start": "4572460",
    "end": "4578860"
  },
  {
    "text": "be able to traverse\nthem, and otherwise, not. That's the idea. OK.",
    "start": "4578860",
    "end": "4584200"
  },
  {
    "text": "Then we have the\nissue of a crossover, if we want to go into 2D. So we have-- here's a basic\ncrossover in the Push-1 model,",
    "start": "4584200",
    "end": "4594590"
  },
  {
    "text": "or Push-Push-1. If we're going to go from north\nto south, then we will go--",
    "start": "4594590",
    "end": "4600000"
  },
  {
    "text": "OK. We can push this down. But we won't be able\nto go to the east then.",
    "start": "4600000",
    "end": "4605170"
  },
  {
    "text": "OK? And we're not able\nto go to the west because if we push this\nblock, it gets stuck. So we can go north to\nsouth, that's fine.",
    "start": "4605170",
    "end": "4611550"
  },
  {
    "text": "And we can also go west to\neast, by symmetry, essentially. But you can't go from west\nto north or west to south,",
    "start": "4611550",
    "end": "4618100"
  },
  {
    "text": "or any of the\nother combinations. This works as long as\nyou do one or the other. ",
    "start": "4618100",
    "end": "4624590"
  },
  {
    "text": "Once you do west to east, you\ncan't even do north to south. So that's why we call\nit an XOR crossover.",
    "start": "4624590",
    "end": "4630429"
  },
  {
    "text": "It's not what we want. But if we combine\nthings in this way, we get a uni-directional\ncrossover.",
    "start": "4630430",
    "end": "4638280"
  },
  {
    "text": "This is one where-- I better check my notes-- you can do with one\nof three things.",
    "start": "4638280",
    "end": "4645810"
  },
  {
    "text": "You can do north to\nsouth, if you want. And then you can\ndo west to east.",
    "start": "4645810",
    "end": "4653450"
  },
  {
    "text": "So you could just\ndo west to east. Or you could do north to\nsouth, then west to east. Or you could just\ndo north to south.",
    "start": "4653450",
    "end": "4659150"
  },
  {
    "text": "Those are all possible here. So when we do north to south,\nwe prevent this particular thing",
    "start": "4659150",
    "end": "4665100"
  },
  {
    "text": "from being traversed. But we unlock this gate, which\nlater, when we go west to east, will allow us to do it.",
    "start": "4665100",
    "end": "4670900"
  },
  {
    "text": "So we go here and then these\nare called no-reverse gadgets.",
    "start": "4670900",
    "end": "4678340"
  },
  {
    "text": "So once you push this block\nback, you can never go-- this gadget becomes\nuntraversible.",
    "start": "4678340",
    "end": "4684480"
  },
  {
    "text": "So you come here, you push\nthis, push that, push that, and now you can never\nuse this gadget again.",
    "start": "4684480",
    "end": "4689830"
  },
  {
    "text": "So it's like a single-use thing. So you can come here. If you tried to\ndo that, you would get stuck because\nthis is a lock and it",
    "start": "4689830",
    "end": "4696688"
  },
  {
    "text": "hasn't been unlocked yet. So instead you've got to go over\nhere, go through this thing, permanently destroy it, and\nthen unlock this gadget,",
    "start": "4696688",
    "end": "4703710"
  },
  {
    "text": "and then you exit. So that was north\nto south traversal. We unlocked this gate and\nwe unlocked this gate.",
    "start": "4703710",
    "end": "4709290"
  },
  {
    "text": "So if you're coming\nwest to east, it could be this has\nbeen done or not. So going west to east, maybe\nyou haven't visited this gadget.",
    "start": "4709290",
    "end": "4716210"
  },
  {
    "text": "Then you can just\ngo through here, block off a later north to\nsouth traversal, that's OK.",
    "start": "4716210",
    "end": "4721330"
  },
  {
    "text": "Then come over here and leave. And if you try to go\nhere, nothing happens.",
    "start": "4721330",
    "end": "4726620"
  },
  {
    "text": "OK? Or it could be this\nhas already been done-- north to south-- and then when\nyou're coming from the west,",
    "start": "4726620",
    "end": "4733230"
  },
  {
    "text": "this has been unlocked, and\nso you can open this gate and come through here.",
    "start": "4733230",
    "end": "4738840"
  },
  {
    "text": "This has already been used,\nso you can't go that way. So instead you use this one.",
    "start": "4738840",
    "end": "4744260"
  },
  {
    "text": "This has already been unlocked,\nso you can get through. And then you get out. So with just a little\nbit of checking,",
    "start": "4744260",
    "end": "4750570"
  },
  {
    "text": "those are the only\nthings you can do. So when we have this diagram-- I think I have one here--",
    "start": "4750570",
    "end": "4755699"
  },
  {
    "text": "variables and clauses, and\nyou connect all the variables to all the clauses\nthey're involved in-- this is a slide from lecture one,\nbut it's the same outline.",
    "start": "4755700",
    "end": "4764790"
  },
  {
    "text": "You know the order in which\nthese crossings happen. Because you know I'm going to\nvisit variable i before I visit",
    "start": "4764790",
    "end": "4770900"
  },
  {
    "text": "variable j greater than i. So I know how to order--\nand each of these paths",
    "start": "4770900",
    "end": "4777750"
  },
  {
    "text": "is really two paths,\none and then the other. And so I know whether\nI'm going to do north",
    "start": "4777750",
    "end": "4782860"
  },
  {
    "text": "to south before west to east. If not, I'd transpose the\ngadget and exchange north-south",
    "start": "4782860",
    "end": "4788880"
  },
  {
    "text": "with west-east. And then I don't need\nthat they're both visited. I don't know which ones\nare going to be visited, but I could do one or the other.",
    "start": "4788880",
    "end": "4795130"
  },
  {
    "text": "Or if I do both, I know one\nwill come before the other. So that kind of crossover\ngadget is enough for Push-1 and Push-Push-1.",
    "start": "4795130",
    "end": "4804430"
  },
  {
    "text": "And it's exactly mimicking\nwhat we did with Super Mario Brothers, we just had a\ndifferent variable choice",
    "start": "4804430",
    "end": "4809680"
  },
  {
    "text": "and a different clause and a\ndifferent crossover gadget. But other than that, it\nwas exactly the same.",
    "start": "4809680",
    "end": "4815949"
  },
  {
    "text": "The gadgets were different,\nbut the proof structure was the same. And that's our beginning\nof 3SAT reductions.",
    "start": "4815950",
    "end": "4822639"
  },
  {
    "text": "We will do many more next class. ",
    "start": "4822640",
    "end": "4831515"
  }
]