[
  {
    "text": "The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13350"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13350",
    "end": "28437"
  },
  {
    "text": "PROFESSOR: OK let's get started.  Let's get started, please.",
    "start": "28437",
    "end": "34410"
  },
  {
    "text": "All right, last time we talked\nabout information and entropy. The picture we had\nwas of some kind",
    "start": "34410",
    "end": "40970"
  },
  {
    "text": "of a source emitting symbols. ",
    "start": "40970",
    "end": "50360"
  },
  {
    "text": "Symbols-- let's say n of them. So it chooses from these symbols\nwith probabilities P1 up to Pn.",
    "start": "50360",
    "end": "60875"
  },
  {
    "text": " And then we talked about the\nexpected information here,",
    "start": "60875",
    "end": "76330"
  },
  {
    "text": "or the entropy, so the\nexpected information",
    "start": "76330",
    "end": "84500"
  },
  {
    "text": "you get when you see the symbol\nthat's emitted by the source. And that was the average\nvalue of the information.",
    "start": "84500",
    "end": "91670"
  },
  {
    "text": "So it was-- let's see,\nyou take 1 over log of 1 over P i for each of\nthe possible symbols.",
    "start": "91670",
    "end": "99782"
  },
  {
    "text": "And then you've\ngot to weight it by the corresponding probability\nto get an expectation.",
    "start": "99782",
    "end": "104960"
  },
  {
    "text": "And this was the\nentropy of the source. Or if you want to make\nexplicit the source,",
    "start": "104960",
    "end": "110720"
  },
  {
    "text": "you could say H\nof S for source-- capital S. All right?",
    "start": "110720",
    "end": "119413"
  },
  {
    "text": "And then we were actually\nthinking of this operating repeatedly. So in the model we had last\ntime, the source at each time",
    "start": "119413",
    "end": "126440"
  },
  {
    "text": "chooses from one of these\nsymbols with this probability. And it does it independently\nof choices at other times.",
    "start": "126440",
    "end": "131760"
  },
  {
    "text": "So what the source\nactually generates is what's referred to as\nan iid sequence of symbols,",
    "start": "131760",
    "end": "140810"
  },
  {
    "text": "independent,\nidentically distributed.",
    "start": "140810",
    "end": "145851"
  },
  {
    "text": "You'll see this a lot-- ",
    "start": "145852",
    "end": "152569"
  },
  {
    "text": "Or iid sequence of symbols. ",
    "start": "152570",
    "end": "159860"
  },
  {
    "text": "So the independent part\nof this refers to the fact that it makes the\nchoice independently",
    "start": "159860",
    "end": "165510"
  },
  {
    "text": "at each time instant. The identically\ndistributed means that at each time\ninstant, it goes back",
    "start": "165510",
    "end": "170700"
  },
  {
    "text": "to these same probabilities. It's the same distribution\nthat it uses each time. So that's what iid means--",
    "start": "170700",
    "end": "176430"
  },
  {
    "text": "so sort of a stationary\nprobabilistic source with no dependence from one\ntime instant to the next.",
    "start": "176430",
    "end": "181560"
  },
  {
    "text": " Average information was\nmeasured in bits per symbol.",
    "start": "181560",
    "end": "190319"
  },
  {
    "text": " And what we wanted to do\nwas take those symbols",
    "start": "190320",
    "end": "196260"
  },
  {
    "text": "and compress them\nto binary digits.",
    "start": "196260",
    "end": "204450"
  },
  {
    "start": "204450",
    "end": "210739"
  },
  {
    "text": "OK, so we were going to-- you can compress\nthem to other things. We were going to think of\ncompressing them to binary",
    "start": "210740",
    "end": "216957"
  },
  {
    "text": "digits because we're thinking\nof a channel that can take 0s 1s or a signal that's in\ntwo possible states.",
    "start": "216957",
    "end": "223710"
  },
  {
    "text": "So what we wanted to do was\ntake each symbol or sequence of symbols and code it in\nthe form of binary digits.",
    "start": "223710",
    "end": "230640"
  },
  {
    "text": "Right?  Now, each binary\ndigit can, at most,",
    "start": "230640",
    "end": "237530"
  },
  {
    "text": "carry one bit of information. If the binary digit is equally\nlikely to be a 0 or a 1,",
    "start": "237530",
    "end": "243525"
  },
  {
    "text": "then it carries one\nbit of information. So that tells you really\nthat if you're going to code this, the code length--",
    "start": "243525",
    "end": "250760"
  },
  {
    "text": " let's see-- compress to binary\ndigits, let's say, or encode.",
    "start": "250760",
    "end": "257190"
  },
  {
    "text": " And what we need is the\nexpected code length.",
    "start": "257190",
    "end": "262500"
  },
  {
    "start": "262500",
    "end": "269960"
  },
  {
    "text": "L should be greater\nthan or equal to H. So",
    "start": "269960",
    "end": "277880"
  },
  {
    "text": "you need to transmit at\nleast this many binary digits on average to convey\nthe information that's",
    "start": "277880",
    "end": "284840"
  },
  {
    "text": "coming out of the source-- per symbol or per timestamp.",
    "start": "284840",
    "end": "290014"
  },
  {
    "text": "All right, so that\nwas the basic setup. ",
    "start": "290015",
    "end": "296040"
  },
  {
    "text": "I've given you one\nof these bounds here. When we talked about\ncodes, by the way,",
    "start": "296040",
    "end": "302009"
  },
  {
    "text": "we decided that if we're\ntalking about binary codes, we want to limit ourselves to\nwhat are called instantaneously",
    "start": "302010",
    "end": "312669"
  },
  {
    "text": "decodable or prefix-free codes.",
    "start": "312670",
    "end": "319420"
  },
  {
    "text": "And these are codes\nthat correspond to the leaves of a code tree.",
    "start": "319420",
    "end": "324940"
  },
  {
    "text": "So we had examples of this type. You want your symbols\nto be associated with the leaves of--\nthe end of the tree, not",
    "start": "324940",
    "end": "334000"
  },
  {
    "text": "intermediate points. The reason being\nthat, as you work your way down to the tree--",
    "start": "334000",
    "end": "340990"
  },
  {
    "text": "by the way, I'm assuming\nthat this picture makes sense to you in some fashion\nfrom recitation.",
    "start": "340990",
    "end": "348520"
  },
  {
    "text": "But as you work your\nway down to the symbol, you don't encounter any\nother symbols on the way. So as soon as you\nhit the leaf, you",
    "start": "348520",
    "end": "354398"
  },
  {
    "text": "know what symbol you've got. So we're limiting\nourselves to codes of that type because\nsome of the statements",
    "start": "354398",
    "end": "360189"
  },
  {
    "text": "I make are not true if you\ndon't have codes of this type. So I won't comment\non that again.",
    "start": "360190",
    "end": "366250"
  },
  {
    "text": "All right, so we've got\nthat, the first inequality",
    "start": "366250",
    "end": "371380"
  },
  {
    "text": "that I've put up there. And it turns out\nthat Shannon showed how to actually construct\ncodes that will give you",
    "start": "371380",
    "end": "381078"
  },
  {
    "text": "a band on the other side. Let me actually write it\nthe way it is on the slide.",
    "start": "381078",
    "end": "386840"
  },
  {
    "text": "So Shannon showed how to get\ncodes that satisfy this-- so can get code satisfying this.",
    "start": "386840",
    "end": "396430"
  },
  {
    "text": " So Shannon showed\nhow to get within one",
    "start": "396430",
    "end": "401830"
  },
  {
    "text": "of the lower bound in terms\nof the expected length of the code. So that was pretty good.",
    "start": "401830",
    "end": "407860"
  },
  {
    "text": "But after coming up\nwith this paper in '48 and working on this for a while,\nneither he nor other luminaries",
    "start": "407860",
    "end": "414760"
  },
  {
    "text": "in the field had found how\nto get the best such code, and that's what\nHuffman ended up doing.",
    "start": "414760",
    "end": "420129"
  },
  {
    "text": "So we've talked\nabout that already.",
    "start": "420130",
    "end": "425380"
  },
  {
    "text": "OK, so Huffman showed\nhow to get a code of minimum expected\nlength per symbol",
    "start": "425380",
    "end": "430690"
  },
  {
    "text": "with a very simple construction. ",
    "start": "430690",
    "end": "435940"
  },
  {
    "text": "Now, you can actually\nextend Huffman--",
    "start": "435940",
    "end": "442890"
  },
  {
    "text": "and maybe you talked about\nthis in recitation as well. So you can code\nper symbol, or you",
    "start": "442890",
    "end": "448050"
  },
  {
    "text": "can decide you're going\nto create super-symbols. Take the same source, but say\nthat the symbols that it emits",
    "start": "448050",
    "end": "457590"
  },
  {
    "text": "are the symbols from here\ngrouped two at a time. So you're going to\ntake the symbol emitted",
    "start": "457590",
    "end": "463650"
  },
  {
    "text": "at some particular time\nand then the symbol at the following time and\ncall that a super-symbol.",
    "start": "463650",
    "end": "468930"
  },
  {
    "text": "And then take the\nnext pair, and that's a super-symbol and so on. So you're doing\nthe Huffman coding,",
    "start": "468930",
    "end": "474420"
  },
  {
    "text": "but on pairs of symbols. So you can go through the\nsame kind of construction.",
    "start": "474420",
    "end": "480480"
  },
  {
    "text": "If you assuming an iid\nsource, then the probability of a paired super-symbol\nis easy to compute.",
    "start": "480480",
    "end": "487983"
  },
  {
    "text": "It's just a probability\nof the individual ones because they're\nindependently emitted. And then the entropy\nof the resulting source",
    "start": "487983",
    "end": "496530"
  },
  {
    "text": "here turns out to be twice\nthe entropy of the source here because these are\nindependent emissions,",
    "start": "496530",
    "end": "502330"
  },
  {
    "text": "so the entropies will just add. So you can do the Huffman\nconstruction again.",
    "start": "502330",
    "end": "508200"
  },
  {
    "text": "And what you discover is\nthe same kind of thing except this is now\nthe inequality, right?",
    "start": "508200",
    "end": "517830"
  },
  {
    "text": "And the reason is-- well, here L is still the\nexpected length per symbol. But you're doing pairs\nnow, so the expected length",
    "start": "517830",
    "end": "525210"
  },
  {
    "text": "for the pair is 2L. Right? The lower bound is the\nentropy of the source.",
    "start": "525210",
    "end": "530670"
  },
  {
    "text": "That's 2H. The upper bound is the\nentropy of that source plus 1. So you can construct\na code of that type.",
    "start": "530670",
    "end": "536940"
  },
  {
    "text": "You can do it with Shannon's\nconstruction or Huffman's. And now see what\nyou've managed to do. You've got a little titer of a\nsqueeze on the expected length.",
    "start": "536940",
    "end": "545610"
  },
  {
    "start": "545610",
    "end": "554100"
  },
  {
    "text": "So we've gone from H\nplus 1 to H plus 1/2 with this construction.",
    "start": "554100",
    "end": "560810"
  },
  {
    "text": "If you took triples, this\nwould just change to 1 over 3.",
    "start": "560810",
    "end": "565910"
  },
  {
    "text": "If you took K-tuples,\nyou'd get 1 over K. So if you encode larger\nand larger blocks,",
    "start": "565910",
    "end": "571970"
  },
  {
    "text": "you can squeeze\nthe expected length down to essentially what\nthe entropy band tells you.",
    "start": "571970",
    "end": "577140"
  },
  {
    "text": " Now, Huffman-- you've\nspent time in recitation.",
    "start": "577140",
    "end": "584670"
  },
  {
    "text": "I just thought I would\nquickly run through an example so that you have this\nfresh in your minds.",
    "start": "584670",
    "end": "593520"
  },
  {
    "text": "So we start off with\na set of symbols. This is kind of weak,\nbut I hope you can it.",
    "start": "593520",
    "end": "598890"
  },
  {
    "text": "A set of symbols, A through D\nin this case, with probabilities associated with it.",
    "start": "598890",
    "end": "604560"
  },
  {
    "text": "The Huffman process\nis to first sort these symbols in descending\norder of probability.",
    "start": "604560",
    "end": "609570"
  },
  {
    "text": "So that's what I\nreally start with. You take the two\nsmallest ones and lump them together to get a paired\nsymbol, rearrange, reorder.",
    "start": "609570",
    "end": "619548"
  },
  {
    "text": "And then you do the\nsame thing again. You take the two,\ncombine them, reorder. Take the two smallest ones,\ncombine them, reorder.",
    "start": "619548",
    "end": "627660"
  },
  {
    "text": "And that's what you have\nfor your reduction phase. And then you start\nto trace back.",
    "start": "627660",
    "end": "633210"
  },
  {
    "text": "So when you trace back, you can\npick the upper one to be zero, the lower one to be 1.",
    "start": "633210",
    "end": "639060"
  },
  {
    "text": "And then every time you get a\nbifurcation, as you go back, you'll pick the upper one to be\nzero and the lower one to be 1.",
    "start": "639060",
    "end": "646110"
  },
  {
    "text": "And you start to build\nup your code word, right? So this one traces back. There's no bifurcation.",
    "start": "646110",
    "end": "652730"
  },
  {
    "text": "This traces back. The 0 becomes 0001. And you go all\nthe way like that.",
    "start": "652730",
    "end": "659410"
  },
  {
    "text": "OK? So trace back-- let's see.",
    "start": "659410",
    "end": "666475"
  },
  {
    "text": "Oh, was there a-- yeah. So the 1 here becomes\na 1 0 and a 1 1. And then at the next step,\nyou're all the way back",
    "start": "666475",
    "end": "672740"
  },
  {
    "text": "with the Huffman code. Right? So that's the Huffman code\nfor that set of symbols.",
    "start": "672740",
    "end": "679580"
  },
  {
    "text": "It's a Huffman code. I shouldn't say the Huffman\ncode because, if you notice, at various stages\nwe had probabilities",
    "start": "679580",
    "end": "686480"
  },
  {
    "text": "that were identical, like over\nhere and over here and over here.",
    "start": "686480",
    "end": "691700"
  },
  {
    "text": "And we could have chosen\nhow to order these things and then how to do the\nsubsequent grouping.",
    "start": "691700",
    "end": "697787"
  },
  {
    "text": "And all of those will\ngive you Huffman codes with the same minimum\nexpected length. ",
    "start": "697787",
    "end": "707269"
  },
  {
    "text": "All right. ",
    "start": "707270",
    "end": "713062"
  },
  {
    "text": "All right, I want to give\nyou another way of thinking about entropy and why\nit enters into coding.",
    "start": "713062",
    "end": "719245"
  },
  {
    "text": " And here's the basic idea. All right, so we're still\nthinking about the source",
    "start": "719245",
    "end": "727570"
  },
  {
    "text": "emitting independent symbols. It's an iid source. And we've got a very\nlong string of emissions.",
    "start": "727570",
    "end": "733750"
  },
  {
    "text": "So we've got a very long\nstring of symbols emitted,",
    "start": "733750",
    "end": "743910"
  },
  {
    "text": "maybe S1 of the first time,\nS17 here, S2 here, and so on.",
    "start": "743910",
    "end": "751800"
  },
  {
    "text": "And the question is, in a\nvery long string of symbols, how many times do you\nexpect to see symbol S1?",
    "start": "751800",
    "end": "757130"
  },
  {
    "text": "How many times you expect to\nsee a symbol S2 and so on? Well, if you\nactually work it out, it turns out that\nthe expected number",
    "start": "757130",
    "end": "763340"
  },
  {
    "text": "of times, number of times we\nsee SI in the [INAUDIBLE] symbol",
    "start": "763340",
    "end": "776150"
  },
  {
    "text": "is K times the\nprobability of seeing SI.",
    "start": "776150",
    "end": "781260"
  },
  {
    "text": "So it's what you'd expect. All right? So the expected number\nof times is that. Well, but that doesn't tell\nyou what the number of times",
    "start": "781260",
    "end": "789470"
  },
  {
    "text": "is that you'll see in\nany given experiment. We know that you need to think\nabout standard deviations as well.",
    "start": "789470",
    "end": "796050"
  },
  {
    "text": "So what this is saying is,\nfor instance, for symbol SI,",
    "start": "796050",
    "end": "804910"
  },
  {
    "text": "that we expect to get\nthat many of symbol SI.",
    "start": "804910",
    "end": "812381"
  },
  {
    "text": "But actually, there's a\ndistribution around it. So you'll get a\nlittle histogram here.",
    "start": "812382",
    "end": "819050"
  },
  {
    "text": "I'm not making any attempt\nto draw it very carefully, but there's a distribution. You run different\nexperiments, you're",
    "start": "819050",
    "end": "825500"
  },
  {
    "text": "going to get different numbers\nof SI in that run of K. Right? So there's a distribution.",
    "start": "825500",
    "end": "831510"
  },
  {
    "text": "And it turns out\nyou can actually write an explicit formula\nfor the standard deviation. ",
    "start": "831510",
    "end": "842820"
  },
  {
    "text": "This is something you'll see\nif you do a probability course. It's actually very simple.",
    "start": "842820",
    "end": "848540"
  },
  {
    "text": " So that's the\nstandard deviation. So the standard\ndeviation goes as root K.",
    "start": "848540",
    "end": "858750"
  },
  {
    "text": "So the interesting thing is\nthat the standard deviation is a fraction of--",
    "start": "858750",
    "end": "864270"
  },
  {
    "text": "the number of successes\nget smaller and smaller as K becomes larger and larger.",
    "start": "864270",
    "end": "869490"
  },
  {
    "text": "Or another way to see that\nis, if I normalize this,",
    "start": "869490",
    "end": "874560"
  },
  {
    "text": "so I'm going to do a\nnumber of successes divided by K. This histogram\nis going to cluster around P i.",
    "start": "874560",
    "end": "883990"
  },
  {
    "text": " And the standard deviation\nnow, because I've divided by K,",
    "start": "883990",
    "end": "892453"
  },
  {
    "text": "the standard deviation\nactually now ends up being P1 minus P square\nroot of K. All right?",
    "start": "892453",
    "end": "902040"
  },
  {
    "text": " So what this says is\nif you get a run of K",
    "start": "902040",
    "end": "909450"
  },
  {
    "text": "emissions of the symbol\nand you try and estimate the probability, P i by taking\nthe ratio of times SI appears",
    "start": "909450",
    "end": "916560"
  },
  {
    "text": "over the total number\nof runs, you'll actually get a little\nspread here centered on P i.",
    "start": "916560",
    "end": "923070"
  },
  {
    "text": "But the spread actually\ngoes down as 1 over root K. So this is really what the law\nof large numbers is telling us.",
    "start": "923070",
    "end": "928330"
  },
  {
    "text": "It's telling us that if\nyou take a very long run, you almost certainly get\na number of successes,",
    "start": "928330",
    "end": "935880"
  },
  {
    "text": "well, Kp i in this case. It's very tightly concentrated. ",
    "start": "935880",
    "end": "942410"
  },
  {
    "text": "All right, we don't want you\nto remember all these formulas. I have them on the slides. It's just there for fun.",
    "start": "942410",
    "end": "948010"
  },
  {
    "text": "There's something else\nthat I put on there that you can try out for fun. I don't want to talk through\nit, but you can use exactly this",
    "start": "948010",
    "end": "955560"
  },
  {
    "text": "to analyze things like polling. Why is it that you\ncan poll 2,500 people",
    "start": "955560",
    "end": "962460"
  },
  {
    "text": "and say that I've\ngot a margin of error of 1% as to how the election\nis going to turn out?",
    "start": "962460",
    "end": "967769"
  },
  {
    "text": "Well, the answer is,\nactually, in exactly this. If we have time at the\nend, I'll come back to it.",
    "start": "967770",
    "end": "972820"
  },
  {
    "text": "But it's easy enough that\nyou can look at it yourself. So let's focus on what it\nis I wanted to show you.",
    "start": "972820",
    "end": "980730"
  },
  {
    "text": " I picked Obama 0.55, but that\nwas just as illustration.",
    "start": "980730",
    "end": "988970"
  },
  {
    "text": "[LAUGHTER] No. No political views to\nbe imputed to that.",
    "start": "988970",
    "end": "995070"
  },
  {
    "text": "All right, so what\nwe're saying is you've got K emissions of this symbol.",
    "start": "995070",
    "end": "1003200"
  },
  {
    "text": "And with very high\nprobability, you've got Kp1 one of S1,\nKp2 of S2, and so on.",
    "start": "1003200",
    "end": "1016260"
  },
  {
    "text": "So this is really what\nyou're expecting to get, provided you've tossed this\na large number of times.",
    "start": "1016260",
    "end": "1025030"
  },
  {
    "text": "What's the probability of\ngetting a sequence that has Kp1 of S1, Kp2 of S2, and so on?",
    "start": "1025030",
    "end": "1033349"
  },
  {
    "text": "So you've got to get\nS1 and Kp1 positions. What's the probability of that?",
    "start": "1033349",
    "end": "1039640"
  },
  {
    "text": "And you've got to get\nS2 and Kp2 positions. So how do you work out\nthose probabilities?",
    "start": "1039640",
    "end": "1047109"
  },
  {
    "text": "We're invoking independence\nof all the emissions. So you can multiply\nprobabilities. So what you have is S1\noccurring with probability.",
    "start": "1047109",
    "end": "1055690"
  },
  {
    "text": "P1 to the power\nKp1, because P1 is the probability with\nwhich S1 occurs,",
    "start": "1055690",
    "end": "1061640"
  },
  {
    "text": "and it's happening Kp1 times. So you take it to that power,\nand then P2 to the Kp2,",
    "start": "1061640",
    "end": "1071410"
  },
  {
    "text": "all the way up to Pn to the Kpn. OK?",
    "start": "1071410",
    "end": "1076540"
  },
  {
    "text": "So this is the probability of\ngetting a sequence like this.",
    "start": "1076540",
    "end": "1083140"
  },
  {
    "text": " And what we've said is this\nis the only kind of sequence you're typically going to get.",
    "start": "1083140",
    "end": "1089160"
  },
  {
    "text": "All the rest have very low\nprobability of occurrence. So it must be that when I\nadd up all these sequences,",
    "start": "1089160",
    "end": "1095190"
  },
  {
    "text": "I get, essentially,\nprobability 1. So the question then is how\nmany such sequences are there.",
    "start": "1095190",
    "end": "1101760"
  },
  {
    "text": "If a single sequence\nof this type has this probability, and the\nonly sequences I'm going to get",
    "start": "1101760",
    "end": "1107690"
  },
  {
    "text": "are sequences of this\ntype effectively, and the probabilities\nhave to sum to 1.",
    "start": "1107690",
    "end": "1113220"
  },
  {
    "text": "How many sequences do\nI have of this type? ",
    "start": "1113220",
    "end": "1118740"
  },
  {
    "text": "Do you agree that it's\n1 over the probability?  The number of such sequences?",
    "start": "1118740",
    "end": "1124610"
  },
  {
    "text": "Because I've got to take the\nnumber of sequences times",
    "start": "1124610",
    "end": "1129620"
  },
  {
    "text": "this individual probability\nhas to come up to be one. Right? The number of sequences--\nlet me write this down.",
    "start": "1129620",
    "end": "1137012"
  },
  {
    "text": "So that you see it\na little better. ",
    "start": "1137012",
    "end": "1147799"
  },
  {
    "text": "The number of such-- let me call them\ntypical sequences--",
    "start": "1147800",
    "end": "1154130"
  },
  {
    "text": " times the probability\nof any such sequence",
    "start": "1154130",
    "end": "1161700"
  },
  {
    "text": "has got to be approximately 1. I say approximately because\nthere are a few other sequences",
    "start": "1161700",
    "end": "1167420"
  },
  {
    "text": "whose probabilities might-- I would have to take a count of. But this is essentially it. So the number of such sequences\nis 1 over this number.",
    "start": "1167420",
    "end": "1175299"
  },
  {
    "text": "So the number of such sequences\nis P1 to the minus K1,",
    "start": "1175300",
    "end": "1183530"
  },
  {
    "text": "P1, P2 to the minus\nKp2 and so on.",
    "start": "1183530",
    "end": "1191520"
  },
  {
    "start": "1191520",
    "end": "1196600"
  },
  {
    "text": "That's the number\nof such sequences. And essentially, these\nare all the sequences that I'm going to get. ",
    "start": "1196600",
    "end": "1204120"
  },
  {
    "text": "Well, if I take\nthe log of this-- ",
    "start": "1204120",
    "end": "1211210"
  },
  {
    "text": "just visualize\nhow the log works. Now I've got the\nlog of a product, so that going to be a sum\nof the individual logs.",
    "start": "1211210",
    "end": "1218480"
  },
  {
    "text": "I've got the log of\na power of something, so the power will come\ndown to multiply the log.",
    "start": "1218480",
    "end": "1224340"
  },
  {
    "text": "This comes out to be K\ntimes H of S exactly.",
    "start": "1224340",
    "end": "1229870"
  },
  {
    "text": "OK, so the log of the\nnumber of sequences is K times H of S,\nK times the entropy.",
    "start": "1229870",
    "end": "1237940"
  },
  {
    "text": " This is log to the base 2.",
    "start": "1237940",
    "end": "1244310"
  },
  {
    "text": "So the number of sequences\nis equal to 2 to the KH.",
    "start": "1244310",
    "end": "1252050"
  },
  {
    "text": "I'm saying equal to. I should be putting\napproximately equal to signs everywhere,\nbut you get the idea.",
    "start": "1252050",
    "end": "1257700"
  },
  {
    "text": "So the number of typical\nsequences is 2 to the KH.",
    "start": "1257700",
    "end": "1263149"
  },
  {
    "text": "How many binary digits does it\ntake to count 2 the KH things? ",
    "start": "1263150",
    "end": "1271210"
  },
  {
    "text": "KH, right? So what I need is-- ",
    "start": "1271210",
    "end": "1276954"
  },
  {
    "text": "so I just need KHS binary digits\nto count the typical sequences.",
    "start": "1276954",
    "end": "1286890"
  },
  {
    "start": "1286890",
    "end": "1294980"
  },
  {
    "text": "So how many binary digits\ndo I need per symbol? ",
    "start": "1294980",
    "end": "1300790"
  },
  {
    "text": "It's just that divided\nby K because I've got a string of K symbols. So I need a number of binary\ndigits equal to the entropy.",
    "start": "1300790",
    "end": "1308450"
  },
  {
    "text": "So this is a quick way\nof seeing that entropy is very relevant to minimal\ncoding of sequences of outputs",
    "start": "1308450",
    "end": "1314950"
  },
  {
    "text": "from a source like this. All right, now I swept a\nlot of math under the rug.",
    "start": "1314950",
    "end": "1321500"
  },
  {
    "text": "The math that makes\nthis rigorous exists. We don't want to have\nany part of it here.",
    "start": "1321500",
    "end": "1328490"
  },
  {
    "text": "But for those of you\nwho are inclined, you can look in a book\non information theory.",
    "start": "1328490",
    "end": "1334390"
  },
  {
    "text": "There's a nice name to it. It's called the\nAsymptotic Equipartition--",
    "start": "1334390",
    "end": "1344740"
  },
  {
    "text": "Equipartition Property.",
    "start": "1344740",
    "end": "1352220"
  },
  {
    "text": "OK? It's basically saying that,\nasymptotically the probability partitions into equal\nprobabilities for all",
    "start": "1352220",
    "end": "1359140"
  },
  {
    "text": "these typical sequences. All right. ",
    "start": "1359140",
    "end": "1365560"
  },
  {
    "text": "So all that is for Huffman\nand its application",
    "start": "1365560",
    "end": "1372430"
  },
  {
    "text": "to symbols emitted independently\nby a source over time.",
    "start": "1372430",
    "end": "1377680"
  },
  {
    "text": "But there are\nlimitations to this. We've been working with Huffman\ncoding under the assumption",
    "start": "1377680",
    "end": "1385270"
  },
  {
    "text": "that the probabilities\nare given to us. But it's typically the case\nthat the probabilities are not known for some arbitrary source\nthat you're trying to code for.",
    "start": "1385270",
    "end": "1395170"
  },
  {
    "text": "The probabilities might\nchange with time as the source characteristics change. So you would need to\ndetect that and recode,",
    "start": "1395170",
    "end": "1402039"
  },
  {
    "text": "if you're going to do Huffman. And then the more\nimportant point perhaps is that sources\nare generally not iid.",
    "start": "1402040",
    "end": "1410350"
  },
  {
    "text": "The sources of\ninterest are not really generating independent\nidentically",
    "start": "1410350",
    "end": "1416950"
  },
  {
    "text": "distributed symbols. What's perhaps\nmore true is that--",
    "start": "1416950",
    "end": "1422809"
  },
  {
    "text": "let's see. Oh, here-- once you're done\ncompressing your source",
    "start": "1422810",
    "end": "1430600"
  },
  {
    "text": "to binary digits where\neach binary digit carries a bit of information,\nthen you've got something that essentially\nis not correlated over time.",
    "start": "1430600",
    "end": "1442210"
  },
  {
    "text": "You've managed to\nkind of decouple it. But at this stage, these symbols\nare not really independent",
    "start": "1442210",
    "end": "1448660"
  },
  {
    "text": "in typical cases of interest. So one important case, of\ncourse, is just English text.",
    "start": "1448660",
    "end": "1455110"
  },
  {
    "text": "You can still code\nit symbol by symbol, but it's a very\ninefficient coding. If you wanted to do\nit symbol by symbol,",
    "start": "1455110",
    "end": "1462420"
  },
  {
    "text": "let's just ignore uppercase. You've got 26\nletters plus a space. So that's 27 symbols.",
    "start": "1462420",
    "end": "1470110"
  },
  {
    "text": "Well, you could certainly code\nthat with five binary digits because that would give\nyou 32 things to count.",
    "start": "1470110",
    "end": "1476050"
  },
  {
    "text": "You can do better\nwith a code that approaches the\nentropy associated with a source of this type.",
    "start": "1476050",
    "end": "1482710"
  },
  {
    "text": "That would be 4.755 bits. OK, so if you ignored\ndependence in English text",
    "start": "1482710",
    "end": "1490780"
  },
  {
    "text": "and just treated each\nsymbol is equally likely, you'd say that\nthat's the entropy,",
    "start": "1490780",
    "end": "1496152"
  },
  {
    "text": "and you could attempt to code\nit with something approaching that. But actually, not all\nsymbols are equally likely.",
    "start": "1496152",
    "end": "1502309"
  },
  {
    "text": "If you look at a typical\ndistribution of frequencies-- and we saw this\nwith Morse already. The E is much more common than\nT, than A, O, I, N and so on.",
    "start": "1502310",
    "end": "1512660"
  },
  {
    "text": "So there is a\ndistribution to this. But you can take account of\nthat distribution and compute",
    "start": "1512660",
    "end": "1520300"
  },
  {
    "text": "the associated entropy, and\nyou get something a little bit smaller, 4.177 instead of\nthe 4.7-something that we",
    "start": "1520300",
    "end": "1527590"
  },
  {
    "text": "hadn't before. Because not all letters\nare equally likely. But this is still thinking\nof it symbol by symbol,",
    "start": "1527590",
    "end": "1535720"
  },
  {
    "text": "not recognizing\ndependence over time. ",
    "start": "1535720",
    "end": "1541640"
  },
  {
    "text": "But English and other\nlanguages are full of context. Right? If you know the preceding\npart of the text,",
    "start": "1541640",
    "end": "1550260"
  },
  {
    "text": "you have a very good way\nto guess the next letter. Nothing can be said to\nbe certain except death",
    "start": "1550260",
    "end": "1557070"
  },
  {
    "text": "and-- well, you\ncan-- in this case, you can give me the\nnext three letters. Right? Anyone? AUDIENCE: It's taxes",
    "start": "1557070",
    "end": "1562430"
  },
  {
    "text": "PROFESSOR: Taxes, yeah. ",
    "start": "1562430",
    "end": "1567440"
  },
  {
    "text": "So even though X\ntaken in isolation has a very low\nprobability of occurrence,",
    "start": "1567440",
    "end": "1572740"
  },
  {
    "text": "if you look at the histogram\non the previous page, you see that the\nprobability is 0.0017.",
    "start": "1572740",
    "end": "1579190"
  },
  {
    "text": "Letters are not\nindependently generated. Now, it turns out Shannon was\nactually one of the earliest to study this in\nexperiments on his wife.",
    "start": "1579190",
    "end": "1587299"
  },
  {
    "text": "He had her-- he presented\nher with bits of text from one particular\nbook and asked her to guess the next\nletter and so on.",
    "start": "1587300",
    "end": "1593770"
  },
  {
    "text": "And he had a 1951 paper\nthat actually launched a lot of this, because\nhe had developed now",
    "start": "1593770",
    "end": "1599679"
  },
  {
    "text": "the tools for talking about it. His estimate was much lower\nthan the 4-point-something.",
    "start": "1599680",
    "end": "1605100"
  },
  {
    "text": "It was more in the vicinity\nof one bit, 1 to 1.5 bits. So there's a lot of compression\npossible with English text",
    "start": "1605100",
    "end": "1615100"
  },
  {
    "text": "because there's this kind\nof a dependence here. ",
    "start": "1615100",
    "end": "1626500"
  },
  {
    "text": "And just to tell you\nwhat it is that we're trying to compute when\nwe compute entropy",
    "start": "1626500",
    "end": "1631980"
  },
  {
    "text": "for these long\nsequences of symbols, we're sort of saying what's\nthe joint entropy of a sequence",
    "start": "1631980",
    "end": "1638700"
  },
  {
    "text": "of K symbols divided by K in the\nlimit of K going to infinity.",
    "start": "1638700",
    "end": "1644440"
  },
  {
    "text": "So this is what you\nmight call H under bar. It's not over bar\nbecause I couldn't see how to do an over\nbar on my PowerPoint.",
    "start": "1644440",
    "end": "1651030"
  },
  {
    "text": "But it's usually an\nover bar in the books. But this is really the\nobject that you would",
    "start": "1651030",
    "end": "1656730"
  },
  {
    "text": "like to get your hands on. For sequential text\nthat has context in it, this is the kind of\nentropy that you really",
    "start": "1656730",
    "end": "1663510"
  },
  {
    "text": "would like to be working with. OK. So that brings us to\nan approach to coding",
    "start": "1663510",
    "end": "1671130"
  },
  {
    "text": "that's really focused-- coding or compression\nthat's really focused on sequential text.",
    "start": "1671130",
    "end": "1676180"
  },
  {
    "text": "And this is the Lempel-Ziv-Welch\nalgorithm that's in the notes. Turns out that Lempel\nand Ziv or Ziv and Lempel",
    "start": "1676180",
    "end": "1683610"
  },
  {
    "text": "had two earlier papers. And then Welch improved\non it in an '84 paper.",
    "start": "1683610",
    "end": "1689640"
  },
  {
    "text": "And what's in blue over\nthere is a bit of a mouthful. And each word kind\nof means something,",
    "start": "1689640",
    "end": "1694840"
  },
  {
    "text": "so I thought I'd\nlist it all there. Maybe I've used too\nmany of these words-- universal lossless compression\nof sequential or streaming data",
    "start": "1694840",
    "end": "1703470"
  },
  {
    "text": "by adaptive variable\nlength coding. And I'll come to talk about\nthose terms on the next slide.",
    "start": "1703470",
    "end": "1709580"
  },
  {
    "text": "And it turns out that this is\na very widely used compression algorithm for all\nsorts of files.",
    "start": "1709580",
    "end": "1715050"
  },
  {
    "text": "Sometimes it's for a part of it. Sometimes it's optional. Sometimes it's\ncombined with Huffman,",
    "start": "1715050",
    "end": "1720300"
  },
  {
    "text": "but all of these things\nthat do compression pay homage to Lempel\nand Ziv at least.",
    "start": "1720300",
    "end": "1728880"
  },
  {
    "text": "They were also patented. Actually, Unisys owned the\npatent on LZW for many years.",
    "start": "1728880",
    "end": "1734565"
  },
  {
    "text": "These have all expired now. But while the patents were held,\nit made for a lot of heartburn",
    "start": "1734565",
    "end": "1740370"
  },
  {
    "text": "because there were\nthings being done without knowledge of the\nexistence of the patents. And then people got hit\nwith lawsuits and so on.",
    "start": "1740370",
    "end": "1749230"
  },
  {
    "text": "Jacob Ziv, again part of this\nincredible heritage from MIT of people working here in\nthe early days of information",
    "start": "1749230",
    "end": "1757139"
  },
  {
    "text": "theory. He was a graduate student here\nat the same time as Huffman and many other people whose\nnames surface in all of this.",
    "start": "1757140",
    "end": "1763500"
  },
  {
    "text": " I was actually at an award\nceremony of the IEEE,",
    "start": "1763500",
    "end": "1769020"
  },
  {
    "text": "where Lempel got an award\nfor his compression work. And people were given a whole\nminute for a thank you speech,",
    "start": "1769020",
    "end": "1776980"
  },
  {
    "text": "a mini thank you speech. And everyone took their minute\nto mention this person and that and talk about the\norigins of the work.",
    "start": "1776980",
    "end": "1783820"
  },
  {
    "text": "It's a lot to say\nin a minute but they managed to convey a lot. Lempel came up and\nsaid, \"thank you.\"",
    "start": "1783820",
    "end": "1789581"
  },
  {
    "text": "[LAUGHTER] It seemed kind of fitting\nfor someone whose life is devoted to compression. [LAUGHTER]",
    "start": "1789582",
    "end": "1797790"
  },
  {
    "text": "I just couldn't help\nbut crack up there. That was-- all right.",
    "start": "1797790",
    "end": "1804059"
  },
  {
    "text": "Now the interesting\nthing about this is that there are\ntheoretical guarantees",
    "start": "1804060",
    "end": "1809112"
  },
  {
    "text": "that, under\nappropriate assumptions on the source, asymptotically,\nthis process will",
    "start": "1809112",
    "end": "1814289"
  },
  {
    "text": "attain that bound. Now the thing is, the word\nasymptotically hides many sins.",
    "start": "1814290",
    "end": "1821160"
  },
  {
    "text": "Lots of things happen\nat infinity that are not supposed to happen. Or lots of things happen\nat infinity that never",
    "start": "1821160",
    "end": "1827760"
  },
  {
    "text": "happen when you're watching. So the theoretical\nperformance perhaps is not as important as the fact\nthat it works exceedingly well",
    "start": "1827760",
    "end": "1834720"
  },
  {
    "text": "in practice. So we're going to talk\na little bit about it. You've got a lab on it as well.",
    "start": "1834720",
    "end": "1839909"
  },
  {
    "text": " So let me just say a little bit\nabout what these words mean.",
    "start": "1839910",
    "end": "1848050"
  },
  {
    "text": "So this is universal\nin the sense that it doesn't\nnecessarily-- it doesn't need any knowledge of\nthe particular statistics",
    "start": "1848050",
    "end": "1854230"
  },
  {
    "text": "of the source that\nit's compressing. It's willing to take\nits hand at anything.",
    "start": "1854230",
    "end": "1859830"
  },
  {
    "text": "OK? So it doesn't need to know\nthe source statistics. It actually learns\nthe source statistics",
    "start": "1859830",
    "end": "1865990"
  },
  {
    "text": "in the course of\nimplementing the algorithm. And it does that by\nactually building up",
    "start": "1865990",
    "end": "1871870"
  },
  {
    "text": "a dictionary for\nstrings of symbols that it discovers\nin the source text. So it's built around\nconstruction of a dictionary.",
    "start": "1871870",
    "end": "1881500"
  },
  {
    "text": "What it then does is\nit compresses the text, not to things that we've\nseen here in Huffman,",
    "start": "1881500",
    "end": "1887950"
  },
  {
    "text": "but to actually\ndictionary entries. So it's sort of like\nMorse's original idea, which was communicate the\naddress in the dictionary",
    "start": "1887950",
    "end": "1894850"
  },
  {
    "text": "rather than communicating\nthe word itself or some compressed\nversion of the word. So it compresses the\ntext to sequences",
    "start": "1894850",
    "end": "1900712"
  },
  {
    "text": "of dictionary addresses,\nand those are the code words that it sends to the receiver.",
    "start": "1900712",
    "end": "1906650"
  },
  {
    "text": "It's also a variable\nlength compression scheme. But it's interesting\nthat it doesn't",
    "start": "1906650",
    "end": "1911660"
  },
  {
    "text": "take a fixed length of symbols\nto varying lengths of code words. It actually takes\nvarying lengths",
    "start": "1911660",
    "end": "1918140"
  },
  {
    "text": "of symbols to fixed\nlength of code words. So it's a little bit backwards. But it's still a variable\nlength in that sense.",
    "start": "1918140",
    "end": "1925700"
  },
  {
    "text": "So the way this works is that\nthe sender and the receiver start off with a core dictionary\nthat they both agreed on.",
    "start": "1925700",
    "end": "1932210"
  },
  {
    "text": "And for our\nillustrations, we might",
    "start": "1932210",
    "end": "1937789"
  },
  {
    "text": "say that they've\nagreed on the letters A through Z, lowercase\nA through Z.",
    "start": "1937790",
    "end": "1950390"
  },
  {
    "text": "So what they have is these\nletters or this core dictionary stored in some register. Well, actually let me show\nyou what it might look like.",
    "start": "1950390",
    "end": "1959279"
  },
  {
    "text": "So there's the register\nwith, let's say, you have an 8-bit table.",
    "start": "1959280",
    "end": "1965210"
  },
  {
    "text": "This is the dictionary\nthat you have at both ends. So you can store 256\ndifferent things.",
    "start": "1965210",
    "end": "1970550"
  },
  {
    "text": "And you've both agreed on what's\ngoing to go into those slots. So somewhere-- I think\nit's slot 97 in one",
    "start": "1970550",
    "end": "1976700"
  },
  {
    "text": "of these particular codes,\nyou've got the letter A. And somewhere else\nyou've got B, and so on.",
    "start": "1976700",
    "end": "1981919"
  },
  {
    "text": "Or the next position\nyou've got B. You can store a bunch\nof standard symbols. So we'll consider that\nall the single letter",
    "start": "1981920",
    "end": "1989090"
  },
  {
    "text": "symbols are already stored\nin designated positions",
    "start": "1989090",
    "end": "1994580"
  },
  {
    "text": "in this dictionary that's known\nto the sender and the receiver. So if the sender just\nsends 252, the receiver",
    "start": "1994580",
    "end": "2004180"
  },
  {
    "text": "knows what 252 refers\nto because they've got that core dictionary\nthat they've agreed on.",
    "start": "2004180",
    "end": "2009963"
  },
  {
    "text": "Some of the text\nhere, by the way, is stuff I've said already. So I'll actually go back.",
    "start": "2009963",
    "end": "2015850"
  },
  {
    "start": "2015850",
    "end": "2028260"
  },
  {
    "text": "And then what happens is\nthat the source starts to sequentially scan\nthe text that's arriving",
    "start": "2028260",
    "end": "2034650"
  },
  {
    "text": "or that it's looking at and\nputs new strings that it's",
    "start": "2034650",
    "end": "2041160"
  },
  {
    "text": "found into new\nlocations in this table and then communicates the\naddress for the receiver.",
    "start": "2041160",
    "end": "2049199"
  },
  {
    "text": "The magic of this-- and I mean\nit's fiendishly clever, very simple, but very clever, is\nthat the receiver can build up",
    "start": "2049199",
    "end": "2057029"
  },
  {
    "text": "its dictionary in tandem with\nthe transmitter building up the dictionary.",
    "start": "2057030",
    "end": "2062520"
  },
  {
    "text": "It's just a one-step delay. So one step later,\nthe receiver has figured out what that\ndictionary entry is.",
    "start": "2062520",
    "end": "2070060"
  },
  {
    "text": "So the transmitter or the source\nis building up the dictionary, looking at strings in\nthe input sequence,",
    "start": "2070060",
    "end": "2079379"
  },
  {
    "text": "communicating the address-- the addresses of the appropriate\nstrings to the receiver,",
    "start": "2079380",
    "end": "2086250"
  },
  {
    "text": "and the receiver is building\nup a dictionary in parallel. Now I think the easiest\nway to do this-- there's discussion in the text.",
    "start": "2086250",
    "end": "2092760"
  },
  {
    "text": "There's also code fragments. But I think the\neasiest way for me to try and do this is to\nactually just show you",
    "start": "2092760",
    "end": "2097980"
  },
  {
    "text": "how it works on a\nparticular sequence. ",
    "start": "2097980",
    "end": "2104450"
  },
  {
    "text": "And you may not get all\nthe details all at once. I do have a little animation\nthat I need to tweak a bit,",
    "start": "2104450",
    "end": "2109810"
  },
  {
    "text": "and I'll-- well, it's not an animation,\nbut a set of slides that'll help you\nunderstand, actually,",
    "start": "2109810",
    "end": "2115030"
  },
  {
    "text": "this particular example. So I'll have that\nposted as well. ",
    "start": "2115030",
    "end": "2122022"
  },
  {
    "text": "But for now, let's\njust work through this and see what it looks like.",
    "start": "2122022",
    "end": "2127520"
  },
  {
    "text": "And I hope I don't trip\nover myself in the process. I hope you'll be forgiving. ",
    "start": "2127520",
    "end": "2141150"
  },
  {
    "text": "And I need these two\nblackboards to do it. ",
    "start": "2141150",
    "end": "2148020"
  },
  {
    "text": "OK.  And I need some colored chalk. ",
    "start": "2148020",
    "end": "2156320"
  },
  {
    "text": "So what I'm going to have\nover here is the source.",
    "start": "2156320",
    "end": "2161670"
  },
  {
    "text": "And over here is the receiver. ",
    "start": "2161670",
    "end": "2169720"
  },
  {
    "text": "And the source wants to send\na message that I'll put here--",
    "start": "2169720",
    "end": "2176590"
  },
  {
    "text": "A-B-C. This is going to\nlook incredibly boring.",
    "start": "2176590",
    "end": "2187955"
  },
  {
    "text": " But the algorithm does different\nthings at different stages,",
    "start": "2187955",
    "end": "2193620"
  },
  {
    "text": "so that keeps it interesting. And let's see 1, 2, 3, 4, 5.",
    "start": "2193620",
    "end": "2198800"
  },
  {
    "text": "And then we hit a special case\nsomewhere near the end here that is worth sorting out.",
    "start": "2198800",
    "end": "2204020"
  },
  {
    "text": "Because otherwise\nthat, the fragment of the code that you\nsee doesn't make sense. Gee, can you believe that I\nwant to start this again here?",
    "start": "2204020",
    "end": "2213079"
  },
  {
    "text": "Sorry. Let's start here. I want at least six\nreplications of ABC. ",
    "start": "2213080",
    "end": "2224823"
  },
  {
    "text": "I want you to get\ncomfortable also so you can settle into this. ",
    "start": "2224823",
    "end": "2231900"
  },
  {
    "text": "OK, here we go. All right.",
    "start": "2231900",
    "end": "2238630"
  },
  {
    "text": "The receiver has no idea\nthat this is the sequence. The source has, and\nthe receiver both have A through Z sitting\nin their dictionary",
    "start": "2238630",
    "end": "2247420"
  },
  {
    "text": "at designated locations. So the source will\nfirst see the letter A",
    "start": "2247420",
    "end": "2257649"
  },
  {
    "text": "and does nothing because\nA is in its dictionary. It doesn't want to\ndo anything yet.",
    "start": "2257649",
    "end": "2263010"
  },
  {
    "text": "Then it looks at-- it pulls in B. So now\nit's looking at AB. AB is not in its dictionary\nbecause it's a symbol of--",
    "start": "2263010",
    "end": "2269700"
  },
  {
    "text": "it's a string of two symbols. So now it knows it needs\nto make a dictionary entry.",
    "start": "2269700",
    "end": "2275549"
  },
  {
    "text": "I'm going to indicate\ndictionary entry with this. So the source is going to\nmake a dictionary entry of AB.",
    "start": "2275550",
    "end": "2282660"
  },
  {
    "text": "So what this means is\nsomewhere in that register in a particular position,\nor in the next position",
    "start": "2282660",
    "end": "2287760"
  },
  {
    "text": "actually from the agreed on\ntable, it sticks in this.",
    "start": "2287760",
    "end": "2293490"
  },
  {
    "text": "And then what it transmits\nto the receiver is not this,",
    "start": "2293490",
    "end": "2298980"
  },
  {
    "text": "but the code for A. OK?",
    "start": "2298980",
    "end": "2305260"
  },
  {
    "text": "So it enters the longer fragment\nhere as a new dictionary word and sends the address for the\npiece that the receiver sees.",
    "start": "2305260",
    "end": "2314580"
  },
  {
    "text": "So what does the receiver get? The receiver sees A\ncoming in and says, OK,",
    "start": "2314580",
    "end": "2320140"
  },
  {
    "text": "that's the sequence\nA. That's the symbol. A, I'm all set.",
    "start": "2320140",
    "end": "2326190"
  },
  {
    "text": "All right? Now what happens\nis that the source",
    "start": "2326190",
    "end": "2334420"
  },
  {
    "text": "pulls in the next letter. It's done with the A, so you can\nessentially forget about that. It pulls in the next letter.",
    "start": "2334420",
    "end": "2340900"
  },
  {
    "text": "Looks to see if it's got\nB-C in its dictionary. It doesn't have BC because it\nonly has single letter entries,",
    "start": "2340900",
    "end": "2348880"
  },
  {
    "text": "and it has AB. So it's got to put in BC. So it's going to put\nin an entry for BC.",
    "start": "2348880",
    "end": "2354670"
  },
  {
    "start": "2354670",
    "end": "2359880"
  },
  {
    "text": "And then what it's going\nto transmit is the B.",
    "start": "2359880",
    "end": "2368170"
  },
  {
    "text": "The receiver gets\nthe B. Oh, sorry--",
    "start": "2368170",
    "end": "2373900"
  },
  {
    "text": "the directory entry for B. And\nso it knows that's the letter B. And now it enters AB in its--",
    "start": "2373900",
    "end": "2382990"
  },
  {
    "text": " in its dictionary, OK,\nin the next location.",
    "start": "2382990",
    "end": "2391010"
  },
  {
    "text": "So you see, with\na one-step delay, the AB that was in\nthe dictionary here has ended up in the\ndictionary of the receiver.",
    "start": "2391010",
    "end": "2397590"
  },
  {
    "text": " OK, we're done with this.",
    "start": "2397590",
    "end": "2403770"
  },
  {
    "text": "We now pull in the\nnext letter here. That's A. We haven't seen A--",
    "start": "2403770",
    "end": "2409140"
  },
  {
    "text": "we haven't seen CA\nin our dictionary. So we make an entry for CA,\nship out C. C comes here.",
    "start": "2409140",
    "end": "2419550"
  },
  {
    "text": " I should say that this was done\nwith the A. The C comes here,",
    "start": "2419550",
    "end": "2429099"
  },
  {
    "text": "and the receiver knows\nto make an entry for BC. ",
    "start": "2429100",
    "end": "2438630"
  },
  {
    "text": "So with one delay it's got it.  OK, we're done with this.",
    "start": "2438630",
    "end": "2444674"
  },
  {
    "text": " We pull in the next letter, AB.",
    "start": "2444675",
    "end": "2451670"
  },
  {
    "text": "That's in our dictionary. So we keep going, all right? So this algorithm doesn't look\nto ship out the dictionary",
    "start": "2451670",
    "end": "2459740"
  },
  {
    "text": "address every time it sees a\nsequence that it recognizes. If it's got this already\nin its dictionary, it keeps going to try\nand learn a new word.",
    "start": "2459740",
    "end": "2467420"
  },
  {
    "text": "So it's already got AB\nthere, so it keeps going and it pulls in C. And\nnow that's a new word.",
    "start": "2467420",
    "end": "2473609"
  },
  {
    "text": "So it's got ABC as a new entry.",
    "start": "2473610",
    "end": "2480170"
  },
  {
    "text": "It ships out AB-- the address for AB rather. ",
    "start": "2480170",
    "end": "2490770"
  },
  {
    "text": "This gets the address for AB,\nwhich is in its dictionary.",
    "start": "2490770",
    "end": "2497650"
  },
  {
    "text": "It puts the AB down there.  It takes the first\nletter of the string that",
    "start": "2497650",
    "end": "2503650"
  },
  {
    "text": "came in and appends\nit to the last one that it had there\nand gives you the CA. ",
    "start": "2503650",
    "end": "2510730"
  },
  {
    "text": "So you see, it's keeping up\nbut with a one-step delay. ",
    "start": "2510730",
    "end": "2516220"
  },
  {
    "text": "Let's keep going. So the AB is done with. We pull in A. We've got CA.",
    "start": "2516220",
    "end": "2524234"
  },
  {
    "text": "We pull in the B.\nWe don't have CAB, so let's enter that as well.",
    "start": "2524234",
    "end": "2529590"
  },
  {
    "text": " By the time we've done\nthis example, by the way, I'm hoping you'll\nknow Lempel-Ziv.",
    "start": "2529590",
    "end": "2537030"
  },
  {
    "text": "So bear with me.  All right, dictionary\nentry-- and now",
    "start": "2537030",
    "end": "2543260"
  },
  {
    "text": "what does it send\nout to the receiver? AUDIENCE: [INAUDIBLE] PROFESSOR: Sorry. AUDIENCE: C2 PROFESSOR: CA-- the\naddress for CA, right?",
    "start": "2543260",
    "end": "2555030"
  },
  {
    "text": "The address for CA. So the address for CA comes in. ",
    "start": "2555030",
    "end": "2560329"
  },
  {
    "text": "It decodes the CA. ",
    "start": "2560330",
    "end": "2568450"
  },
  {
    "text": "And so let's see. We're done with these\npieces, but this one has to build up its new\ndirect dictionary entry.",
    "start": "2568450",
    "end": "2576670"
  },
  {
    "text": "And so what it's got is\nthe AB setting from before, and it pulls in\nthe first letter. Instead of wrapping\nto the next board,",
    "start": "2576670",
    "end": "2583240"
  },
  {
    "text": "let me start winding up again-- winding upwards. ",
    "start": "2583240",
    "end": "2589650"
  },
  {
    "text": "OK, so that's the new\nentry there, the receiver-- one step delayed from here. ",
    "start": "2589650",
    "end": "2598660"
  },
  {
    "text": "OK, I pull in the C. I have BC . I keep going.",
    "start": "2598660",
    "end": "2604140"
  },
  {
    "text": "I pull on the A.\nI don't see that. So I need BCA. ",
    "start": "2604140",
    "end": "2613650"
  },
  {
    "text": "I ship out the address for BC.  So I'm done with these.",
    "start": "2613650",
    "end": "2620580"
  },
  {
    "text": "I get the address for BC here. ",
    "start": "2620580",
    "end": "2626130"
  },
  {
    "text": "I decode and get BC. I combined the first\nletter of the new fragment",
    "start": "2626130",
    "end": "2633405"
  },
  {
    "text": "with what was sitting here. So I get CAB as my\ndictionary entry.",
    "start": "2633405",
    "end": "2643300"
  },
  {
    "text": " And I keep going.",
    "start": "2643300",
    "end": "2648400"
  },
  {
    "text": "All right, it's very systematic. I'm going to keep\ngoing because there's a special case that will trip\nyou up if you don't get to it.",
    "start": "2648400",
    "end": "2655819"
  },
  {
    "text": "And we need to proceed\na couple more here. OK, I pull in the\nB. I've got a AB.",
    "start": "2655820",
    "end": "2663680"
  },
  {
    "text": "I pull in the C. I've got ABC. ",
    "start": "2663680",
    "end": "2669579"
  },
  {
    "text": "I pull in the A.\nI don't have ABCA. So I enter that\nin my dictionary.",
    "start": "2669580",
    "end": "2680327"
  },
  {
    "text": " And then I ship out ABC. ",
    "start": "2680327",
    "end": "2694200"
  },
  {
    "text": "OK, so you're always building\na new word, entering it in your dictionary, and\nthen the part that's already",
    "start": "2694200",
    "end": "2700643"
  },
  {
    "text": "known you're\nshipping out and then hanging onto the\nend of this to start building the new fragment. ",
    "start": "2700643",
    "end": "2708150"
  },
  {
    "text": "ABC arrives here. ",
    "start": "2708150",
    "end": "2717140"
  },
  {
    "text": "I had the BC from before. I pull in the first\nletter of that, and I get a BCA as my new\nentry, which is this one.",
    "start": "2717140",
    "end": "2728160"
  },
  {
    "text": " OK.",
    "start": "2728160",
    "end": "2733220"
  },
  {
    "text": "Now we pull in the AB. I mean, we pull in\nthe B. We have AB. We pull in the C. We have ABC.",
    "start": "2733220",
    "end": "2740000"
  },
  {
    "text": "We pull in the A, we have\nABCA, so we pull on the B.",
    "start": "2740000",
    "end": "2747770"
  },
  {
    "text": "We ship out ABCA-- A-B-C-A. Right?",
    "start": "2747770",
    "end": "2755950"
  },
  {
    "text": "And now we're done\nwith all those guys. And here comes ABCA. ",
    "start": "2755950",
    "end": "2766369"
  },
  {
    "text": "And I go to my dictionary,\nand I don't have ABCA--",
    "start": "2766370",
    "end": "2771910"
  },
  {
    "text": " big hiccup. ",
    "start": "2771910",
    "end": "2778840"
  },
  {
    "text": "So the reason that\nhappened is that I'm discovering I need to send\nABCA on the very next step",
    "start": "2778840",
    "end": "2787079"
  },
  {
    "text": "after entering it in my\ndictionary on the receiver-- on the transmitter side. And so the receiver hasn't\nyet had a chance to catch up.",
    "start": "2787080",
    "end": "2795990"
  },
  {
    "text": "Now if you analyze\nthis, It turns out that whenever this happens,\nthe sequence involved",
    "start": "2795990",
    "end": "2803010"
  },
  {
    "text": "has its last character equal\nto its first character. So looking at this,\nthe dictionary",
    "start": "2803010",
    "end": "2810510"
  },
  {
    "text": "here is waiting to build up. It's got the ABC\nhere, and it's waiting to pull in the first\nletter from the sequence--",
    "start": "2810510",
    "end": "2818370"
  },
  {
    "text": "the sequence associated\nwith this dictionary entry. It doesn't have that\ndictionary entry. So it can't pull in the A\nlike it was doing all along.",
    "start": "2818370",
    "end": "2825299"
  },
  {
    "text": "But if you analyze the cases\nunder which this happens, It turns out that\nwhenever you don't have it in your dictionary\nentry, the missing letter",
    "start": "2825300",
    "end": "2832340"
  },
  {
    "text": "that you want to pull\ninto your dictionary is the same as the first\none in that string that's waiting to be built up.",
    "start": "2832340",
    "end": "2838320"
  },
  {
    "text": "So it completes it with\nan A, and it's all set. Now it says ABCA,\nand it continues",
    "start": "2838320",
    "end": "2848010"
  },
  {
    "text": "So this happens under very\nparticular conditions. It's a special case. If you actually look at the code\nthat's in the notes you'll see.",
    "start": "2848010",
    "end": "2856350"
  },
  {
    "text": "While the encoding\nis straightforward, it's really remarkable that\na short fragment like this",
    "start": "2856350",
    "end": "2861630"
  },
  {
    "text": "can do that encoding. ",
    "start": "2861630",
    "end": "2868600"
  },
  {
    "text": "Let's see here.  I don't want to do this. I did another example.",
    "start": "2868600",
    "end": "2873747"
  },
  {
    "start": "2873747",
    "end": "2880210"
  },
  {
    "text": "Let me just say what's on this\nbefore I dispense with it. Sorry.",
    "start": "2880210",
    "end": "2885930"
  },
  {
    "text": "OK. So look at what's happened.",
    "start": "2885930",
    "end": "2892390"
  },
  {
    "text": "In terms of the number\nof things we've sent, we've only sent these addresses. And there are fewer\nof them than there",
    "start": "2892390",
    "end": "2898030"
  },
  {
    "text": "were symbols in the original. So that's where the\ncompression comes in. And as you get the longer\nstrings, the benefit is higher.",
    "start": "2898030",
    "end": "2905595"
  },
  {
    "text": "Actually, I'm going to pass\nthis and just tell you, when you look through the\ncode fragment for decoding,",
    "start": "2905595",
    "end": "2913060"
  },
  {
    "text": "this is the special case\nthat we talked about. If the code is not\nin your dictionary, then do such and such.",
    "start": "2913060",
    "end": "2918260"
  },
  {
    "text": "So that's the explanation. All right. And that's described\nin the slides. We'll put that on.",
    "start": "2918260",
    "end": "2923980"
  },
  {
    "text": "I just wanted to end\nwith a couple of things. One is actually-- LZW is a\ngood example of something",
    "start": "2923980",
    "end": "2930160"
  },
  {
    "text": "that you see in other\ncontexts as well, where you're faced with transmitting\ndata and you decide instead",
    "start": "2930160",
    "end": "2935950"
  },
  {
    "text": "that you'll transmit the\nmodel or your best model for what generates that data. That can often be a much more\nefficient way to do things.",
    "start": "2935950",
    "end": "2942220"
  },
  {
    "text": "And in fact, when you\nspeak into your cell phone, you're not transmitting\na raw speech waveform.",
    "start": "2942220",
    "end": "2947289"
  },
  {
    "text": "There's actually a very\nsophisticated code there that's modeling your\nspeech as the output",
    "start": "2947290",
    "end": "2953380"
  },
  {
    "text": "of an autoregressive filter. And then it sends the filter\ntap weights to the receiver.",
    "start": "2953380",
    "end": "2959470"
  },
  {
    "text": "So this kind of thing\narises again and again. Sending the model and\nthe little information you need to run the model\nat the receiving end",
    "start": "2959470",
    "end": "2966430"
  },
  {
    "text": "can be much more efficient\nthan sending the data. The other thing is\neverything we've talked about has been\nlossless compression--",
    "start": "2966430",
    "end": "2972590"
  },
  {
    "text": "Huffman and LZW. You can completely recover\nwhat was compressed.",
    "start": "2972590",
    "end": "2977940"
  },
  {
    "text": "But there's a whole world\nof lossy compression, which is very important. And we'll find ways to sneak\nin discussion of that as well.",
    "start": "2977940",
    "end": "2984760"
  },
  {
    "text": "All right, thank you. ",
    "start": "2984760",
    "end": "2993000"
  }
]