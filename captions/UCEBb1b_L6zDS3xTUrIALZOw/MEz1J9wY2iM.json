[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13330"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13330",
    "end": "21179"
  },
  {
    "text": "PROFESSOR: Let's get started. Thanks for coming to lecture. Know there's a quiz coming up. There will be a tangible benefit\nof attending this lecture.",
    "start": "21180",
    "end": "30500"
  },
  {
    "text": "And it's not Frisbees. OK? We'll figure it out soon.",
    "start": "30500",
    "end": "36270"
  },
  {
    "text": "So, two lectures on\napproximation algorithms. One today and one,\nI guess a week",
    "start": "36270",
    "end": "44060"
  },
  {
    "text": "and two days from today on\nThursday after the break. Eric will give that one.",
    "start": "44060",
    "end": "49420"
  },
  {
    "text": "So this is more of an\nintroductory lecture. Eric talked about NP complete\nproblems and NP hard problems.",
    "start": "49420",
    "end": "56740"
  },
  {
    "text": "He talked about how you could\nshow that problems are NP complete or NP hard.",
    "start": "56740",
    "end": "62180"
  },
  {
    "text": "So what happens when you\ndiscover that a problem is NP complete or NP hard? Well, there's a\nvariety of strategies.",
    "start": "62180",
    "end": "70850"
  },
  {
    "text": "You could just kind of give up,\nand say this is intractable. I want a different job.",
    "start": "70850",
    "end": "76210"
  },
  {
    "text": "You could say that\nI'm just going to do the best I can without\nany theoretical guarantees.",
    "start": "76210",
    "end": "83520"
  },
  {
    "text": "I'm going to use a heuristic. I'm going to think of the\nsimplest, greedy heuristic. I'm going to code it up\nand I'm going to move on.",
    "start": "83520",
    "end": "91170"
  },
  {
    "text": "Or you could do\napproximation algorithms. You could say, I'm going to\nthink up an interesting, greedy",
    "start": "91170",
    "end": "97469"
  },
  {
    "text": "heuristic. But I'm going to prove\nthat this greedy heuristic,",
    "start": "97470",
    "end": "104010"
  },
  {
    "text": "in every conceivable situation\nwith respect to the inputs, is going to be within\nsome factor of optimal.",
    "start": "104010",
    "end": "111651"
  },
  {
    "text": "Right? And that's what we're\ngoing to do today. We're going to take a bunch\nof NP complete problems,",
    "start": "111651",
    "end": "117030"
  },
  {
    "text": "and we're going to\nessentially create simple heuristics with these\nproblems, simple strategies",
    "start": "117030",
    "end": "125280"
  },
  {
    "text": "that are polynomial time, to\nquote, \"solve these problems.\" And what does it mean\nto solve these problems?",
    "start": "125280",
    "end": "133100"
  },
  {
    "text": "Well, you know that if\nit's polynomial time, you're not guaranteed to get\nthe optimum answer every time.",
    "start": "133100",
    "end": "139650"
  },
  {
    "text": "But you'll call it a solution--\nan approximate solution-- because you're within\na factor of two",
    "start": "139650",
    "end": "145170"
  },
  {
    "text": "for every possible input. That's one example. Or, you have a more complicated\napproximation factor",
    "start": "145170",
    "end": "154110"
  },
  {
    "text": "that we'll get to\nin a second, where it's not quite a factor of two. It might be a factor of two\nfor small size problems.",
    "start": "154110",
    "end": "160860"
  },
  {
    "text": "Might be a factor of\n10 for larger problems. And so on and so forth. And then the last\nthing is, it'd be great",
    "start": "160860",
    "end": "166870"
  },
  {
    "text": "if you could spend more time\nand get better solutions. And those are\napproximation schemes.",
    "start": "166870",
    "end": "173409"
  },
  {
    "text": "And we'll look at\napproximation schemes as well. So, just dive in each\nof these problems,",
    "start": "173410",
    "end": "179440"
  },
  {
    "text": "depending on whether it's\ndecision or optimization is NP complete or NP hard.",
    "start": "179440",
    "end": "187410"
  },
  {
    "text": "I'll define these\nproblems as we go along. But basically, the name of the\ngame here is, grab a problem,",
    "start": "187410",
    "end": "194500"
  },
  {
    "text": "define it, think of an\ninteresting heuristic, do a proof. OK? And that's essentially what\nwe're going to do three times.",
    "start": "194500",
    "end": "203069"
  },
  {
    "text": "The good news is the\nproofs aren't tortuous. They're not 30-minute proofs. And they should be\npretty intuitive.",
    "start": "203070",
    "end": "209810"
  },
  {
    "text": "And we'll see if we can\nextract them out of you. A painful extraction process.",
    "start": "209810",
    "end": "216727"
  },
  {
    "text": "I went to the dentist yesterday.  Not for extraction. ",
    "start": "216727",
    "end": "229709"
  },
  {
    "text": "I should've said, I went\nto the dentist yesterday and I'm now going to take\nit out on you, right?",
    "start": "229709",
    "end": "236730"
  },
  {
    "text": "OK, so what's an\napproximation algorithm? An algorithm, for\na problem of size",
    "start": "236730",
    "end": "244989"
  },
  {
    "text": "n, and so it's going\nto be parameterized.",
    "start": "244990",
    "end": "251090"
  },
  {
    "text": "And the approximation factor\nmay also be parameterized. It'd be nice if it weren't,\nif it were a constant factor",
    "start": "251090",
    "end": "256190"
  },
  {
    "text": "approximation. But sometimes you can't do that. And in fact, sometimes\nyou can prove that constant\nfactor approximation",
    "start": "256190",
    "end": "263660"
  },
  {
    "text": "algorithms don't exist. And if they do,\nthen p equals NP. All right?",
    "start": "263660",
    "end": "268900"
  },
  {
    "text": "So it's gets very interesting. So, in this case, approximation\nalgorithms or schemes",
    "start": "268900",
    "end": "275240"
  },
  {
    "text": "exist for these\nthree problems, which is why we are looking\nat them today. But you got a problem of size n.",
    "start": "275240",
    "end": "282780"
  },
  {
    "text": "And we're going to define an\napproximation ratio, row of n,",
    "start": "282780",
    "end": "296510"
  },
  {
    "text": "for any input-- if for\nany input-- excuse me.",
    "start": "296510",
    "end": "302265"
  },
  {
    "start": "302265",
    "end": "309700"
  },
  {
    "text": "The algorithm\nproduces a solution",
    "start": "309700",
    "end": "316740"
  },
  {
    "text": "with cost C that satisfies\nthis little property, which",
    "start": "316740",
    "end": "325139"
  },
  {
    "text": "says that the max of C\ndivided by Copt divided",
    "start": "325140",
    "end": "332040"
  },
  {
    "text": "by-- oh, sorry-- and Copt\ndivided by C is less than or equal to row n.",
    "start": "332040",
    "end": "339430"
  },
  {
    "text": "And the only reason you\nhave two terms in here is because you haven't\nsaid whether it's a minimization problem or\na maximization problem.",
    "start": "339430",
    "end": "346949"
  },
  {
    "text": "Right, so of it' a\nminimization problem, you don't want to be too much\ngreater than the minimum.",
    "start": "346950",
    "end": "352982"
  },
  {
    "text": "If it's a maximization\nproblem, you don't want to be too much\nsmaller than the maximum. And so you just stick\nthose two things in there.",
    "start": "352982",
    "end": "358610"
  },
  {
    "text": "And you don't worry\nabout whether it's min or max in terms of\nthe objective function, and you want it to be\na particular ratio.",
    "start": "358610",
    "end": "365580"
  },
  {
    "text": "OK? Now I did say row of n there. So this could be a constant or\nit could be a function of no.",
    "start": "365580",
    "end": "372300"
  },
  {
    "text": "If it's a function\nof n, it's going to be an increasing\nfunction of n.",
    "start": "372300",
    "end": "377682"
  },
  {
    "text": "OK? Otherwise you could\njust bound it, and have a constant, obviously. So, you might have\nsomething like-- and we'll",
    "start": "377682",
    "end": "384280"
  },
  {
    "text": "see one of these-- log n\napproximation scheme, which says that you're going\nto be within logarithmic",
    "start": "384280",
    "end": "394470"
  },
  {
    "text": "of the answer-- the\nminimum or maximum. But if it's a million, then\nif you do log of base two,",
    "start": "394470",
    "end": "401300"
  },
  {
    "text": "then you're within a factor\nof 20, which isn't that great. But let's just say if\nyou're happy with it,",
    "start": "401300",
    "end": "407125"
  },
  {
    "text": "and if it goes to\na billion, it's a factor 30, and\nso on and so forth. Actually, it could grow.",
    "start": "407125",
    "end": "412910"
  },
  {
    "text": "So that's an algorithm. If these terms are\nused interchangeably,",
    "start": "412910",
    "end": "420820"
  },
  {
    "text": "we'll try and differentiate. But we do have something that\nwe call an approximation scheme.",
    "start": "420820",
    "end": "426610"
  },
  {
    "text": "And the big difference\nbetween approximation algorithms an\napproximation schemes is that I'm going to have a\nlittle knob in an approximation",
    "start": "426610",
    "end": "433880"
  },
  {
    "text": "scheme that's going\nto let me do more work to get something better.",
    "start": "433880",
    "end": "439070"
  },
  {
    "text": "OK? And that's essentially\nwhat a scheme is, where we're going to take\nan input-- an additional input--",
    "start": "439070",
    "end": "447889"
  },
  {
    "text": "epsilon, strictly\ngreater than zero. And for any fixed\nepsilon, the scheme--",
    "start": "447890",
    "end": "462409"
  },
  {
    "text": "it's an approximation scheme\nas opposed to an algorithm-- is a 1 plus epsilon\napproximation algorithm.",
    "start": "462410",
    "end": "471330"
  },
  {
    "start": "471330",
    "end": "478870"
  },
  {
    "text": "And so here we just say that\nthis is a row n approximation algorithm if it\nsatisfies this property.",
    "start": "478870",
    "end": "487270"
  },
  {
    "text": "And here we have a\nfamily of algorithms that are parameterized by\nn in terms of run time,",
    "start": "487270",
    "end": "495810"
  },
  {
    "text": "as well as epsilon. And so you might\nhave a situation",
    "start": "495810",
    "end": "501970"
  },
  {
    "text": "where you have\norder n raised to q",
    "start": "501970",
    "end": "507400"
  },
  {
    "text": "divided by epsilon running time\nfor an approximation algorithm.",
    "start": "507400",
    "end": "516669"
  },
  {
    "text": "And what this means is that if\nyou're within 10% of optimal, then you're going to\nput 0.1 down here.",
    "start": "516669",
    "end": "525180"
  },
  {
    "text": "And this is going to be an\nn raised to 20 algorithm. Polynomial time!",
    "start": "525180",
    "end": "530350"
  },
  {
    "text": "Wonderful! Solve the world's problems. Not really. I mean, n raised to\n20 is pretty bad.",
    "start": "530350",
    "end": "535459"
  },
  {
    "text": "But it's not exponential. Right? So you see that there\nis a growth here",
    "start": "535460",
    "end": "543889"
  },
  {
    "text": "of polynomial degree\nwith respect to epsilon. And it's a pretty fast growth.",
    "start": "543890",
    "end": "551860"
  },
  {
    "text": "If you want to go to\nepsilon equals 0.01, I mean, even n raised to 20\nis probably untenable.",
    "start": "551860",
    "end": "557230"
  },
  {
    "text": "But certainly n raised to\n200 is completely untenable. Right? So this is what's called a PTAS,\nwhich is probabilistic time",
    "start": "557230",
    "end": "573800"
  },
  {
    "text": "approximation scheme. And don't worry too much\nabout the probabilistic.",
    "start": "573800",
    "end": "580610"
  },
  {
    "text": "It's a function of epsilon. That's the way you\nwant to think about it. The run time.",
    "start": "580610",
    "end": "586820"
  },
  {
    "text": "And we'll look at a particular\nscheme later in the lecture.",
    "start": "586820",
    "end": "591920"
  },
  {
    "text": "But clearly this is\npolynomial in n, OK? But it's not\npolynomial in epsilon.",
    "start": "591920",
    "end": "599870"
  },
  {
    "text": "All right? So a PTAS is going to\nbe poly in n, but not",
    "start": "599870",
    "end": "606450"
  },
  {
    "text": "necessarily in epsilon.",
    "start": "606450",
    "end": "614150"
  },
  {
    "text": "And I say not necessarily\nbecause we still call it a PTAS.",
    "start": "614150",
    "end": "620010"
  },
  {
    "text": "We just say, fully polynomial\ntime approximation scheme, FPTAS, if it's polynomial in\nboth n and 1 over epsilon.",
    "start": "620010",
    "end": "630030"
  },
  {
    "text": "Right? So fully PTAS is poly\nin n and 1 over epsilon.",
    "start": "630030",
    "end": "641790"
  },
  {
    "text": "So a fully PTAS scheme\nwould be something like n divided by epsilon square.",
    "start": "641790",
    "end": "648970"
  },
  {
    "text": "OK? So as epsilon shrinks,\nobviously the run time is going to grow because you've\ngot 1 over epsilon square.",
    "start": "648970",
    "end": "657470"
  },
  {
    "text": "But it's not anywhere\nas bad as the n raised to 2 divided by epsilon\nin terms of its growth rate.",
    "start": "657470",
    "end": "664180"
  },
  {
    "text": "OK? So there's lots of\nNP complete problems that have PTAS's and that some\nof them have FPTAS's as well.",
    "start": "664180",
    "end": "670852"
  },
  {
    "text": "And so on and so forth. Question? AUDIENCE: [INAUDIBLE] PROFESSOR: So we won't\nget into that today.",
    "start": "670852",
    "end": "678570"
  },
  {
    "text": "But you can think of\nit as the probability",
    "start": "678570",
    "end": "686260"
  },
  {
    "text": "over the space of possible\nsolutions that you have.",
    "start": "686260",
    "end": "692420"
  },
  {
    "text": "You can distribution of inputs. The bottom line is\nthat we actually",
    "start": "692420",
    "end": "697540"
  },
  {
    "text": "won't cover that today. So let's shelve for\nthe next lecture, OK?",
    "start": "697540",
    "end": "703399"
  },
  {
    "text": "So just worry about the fact\nthat it's polynomial in n",
    "start": "703400",
    "end": "711460"
  },
  {
    "text": "and not in epsilon\nfor the first part. And it's polynomial in n and\nepsilon for the second part.",
    "start": "711460",
    "end": "717070"
  },
  {
    "text": "OK? AUDIENCE: [INAUDIBLE] PROFESSOR: Oh I see. So, it's a good point.",
    "start": "717070",
    "end": "722100"
  },
  {
    "text": "So for the purposes of this\nlecture, thank you so much. I'm glad I didn't\nhave to get into that.",
    "start": "722100",
    "end": "727900"
  },
  {
    "text": "Polynomial time. Good. Better answer. Either way, we're not\ngoing to cover that.",
    "start": "727900",
    "end": "734400"
  },
  {
    "text": "All right? Good. So, it's polynomial. I mean, you could have\nprobabilistic algorithms",
    "start": "734400",
    "end": "739420"
  },
  {
    "text": "that have this kind of\nbehavior, of course. But we're not going to cover\nthat in today's lecture.",
    "start": "739420",
    "end": "745980"
  },
  {
    "text": "But thanks for\npointing that out Eric. So, that's our set up. We essentially have\na situation where",
    "start": "745980",
    "end": "755020"
  },
  {
    "text": "it'd be great if we could tackle\nNP complete problems using this hammer, right?",
    "start": "755020",
    "end": "760899"
  },
  {
    "text": "Any questions so far?  All right.",
    "start": "760900",
    "end": "767660"
  },
  {
    "text": "Vertex cover. So let's dive right in. ",
    "start": "767660",
    "end": "774360"
  },
  {
    "text": "Let's talk about a particular\nproblem, very simple problem. What you have is an\nundirected graph, G(V,E).",
    "start": "774360",
    "end": "783125"
  },
  {
    "start": "783125",
    "end": "792630"
  },
  {
    "text": "And all we want is\na set of vertices that cover all of the edges.",
    "start": "792630",
    "end": "798145"
  },
  {
    "text": " So a set of vertices\nthat cover all edges.",
    "start": "798145",
    "end": "810780"
  },
  {
    "text": "What does it mean to cover? It's the obvious thing. If I have something like this. ",
    "start": "810780",
    "end": "818150"
  },
  {
    "text": "As long as I have a vertex\nin my set of vertices",
    "start": "818150",
    "end": "825310"
  },
  {
    "text": "that I'm calling a\ncover that touches one endpoint of an\nedge, we're going",
    "start": "825310",
    "end": "832290"
  },
  {
    "text": "to call that edge covered, OK? So, in this case\nit's pretty clear",
    "start": "832290",
    "end": "839360"
  },
  {
    "text": "that the vertex\ncover is simply that. Because that vertex\ntouches all of the edges",
    "start": "839360",
    "end": "847400"
  },
  {
    "text": "at least at one\nof the endpoints. A vertex is going to touch\none endpoint of an edge.",
    "start": "847400",
    "end": "852580"
  },
  {
    "text": "But this vertex cover that\nI've shaded touches every edge.",
    "start": "852580",
    "end": "858280"
  },
  {
    "text": "So that's a vertex cover. If, in fact, I had\nan extra edge here,",
    "start": "858280",
    "end": "864890"
  },
  {
    "text": "then I now have to pick\none-- or this one of that one",
    "start": "864890",
    "end": "870050"
  },
  {
    "text": "in order to complete my cover. OK? That's it. That's vertex cover.",
    "start": "870050",
    "end": "876030"
  },
  {
    "text": "Decision problem, NP\ncomplete to figure out if there's a certain number that\nis below a certain value that",
    "start": "876030",
    "end": "885470"
  },
  {
    "text": "do the covering. You obviously have an\noptimization problem",
    "start": "885470",
    "end": "890600"
  },
  {
    "text": "associated with that. And so on and so forth. So that's our simple set up\nfor our first hard problem.",
    "start": "890600",
    "end": "897589"
  },
  {
    "text": "All right? And so, just to write that\nout, find a subset V prime,",
    "start": "897590",
    "end": "908050"
  },
  {
    "text": "which is a subset of capital V,\nsuch that if (U,V) is an edge",
    "start": "908050",
    "end": "919399"
  },
  {
    "text": "of G-- belongs to E-- then we\nhave either U belonging to V",
    "start": "919400",
    "end": "930040"
  },
  {
    "text": "prime, or V belonging\nto V prime, or both. And it's quite possible that\nyour vertex cover is such",
    "start": "930040",
    "end": "937230"
  },
  {
    "text": "that, for a given edge, you have\ntwo vertices that touch each of the endpoints of the edge.",
    "start": "937230",
    "end": "944690"
  },
  {
    "text": "And the optimization\nproblem, which is what we'd like to do\nhere, is find a V prime",
    "start": "944690",
    "end": "952330"
  },
  {
    "text": "so the cardinality is minimum. ",
    "start": "952330",
    "end": "958171"
  },
  {
    "text": "OK?  So that's it. ",
    "start": "958171",
    "end": "965800"
  },
  {
    "text": "So, we don't know of a\npolynomial time algorithm",
    "start": "965800",
    "end": "971620"
  },
  {
    "text": "to solve this problem. So we resort to heuristics. What is an intuitive\nheuristic for this problem?",
    "start": "971620",
    "end": "982550"
  },
  {
    "text": "Suppose I wanted to implement\na poly time, greedy algorithm",
    "start": "982550",
    "end": "988540"
  },
  {
    "text": "for this problem. What would be the first\nthing that you'd think of?",
    "start": "988540",
    "end": "994830"
  },
  {
    "text": "Yeah, go ahead. AUDIENCE: [INAUDIBLE] PROFESSOR: Find the max degree. I love that answer.",
    "start": "994830",
    "end": "1000290"
  },
  {
    "text": "It's the wrong answer\nfor this problem. But I love it because it\nsets me up for-- ta-DA!",
    "start": "1000290",
    "end": "1009086"
  },
  {
    "text": "All this work I did\nbefore lecture, OK? All right.",
    "start": "1009086",
    "end": "1015040"
  },
  {
    "text": "So, it turns out, that it's\nnot an incorrect answer.",
    "start": "1015040",
    "end": "1022490"
  },
  {
    "text": "It's really not the\nbest answer in terms of the heuristic you apply to\nget an approximation algorithm.",
    "start": "1022490",
    "end": "1033420"
  },
  {
    "text": "So we're still in the context of\nan approximation algorithm, not an approximation scheme.",
    "start": "1033420",
    "end": "1039589"
  },
  {
    "text": "And what we have here is a\nperfectly fine heuristic that,",
    "start": "1039589",
    "end": "1044970"
  },
  {
    "text": "who knows? It might actually work\nbetter in practice than this other\napproximation algorithm",
    "start": "1044970",
    "end": "1050710"
  },
  {
    "text": "that I'm going to\ntalk about and prove. But the fact of the matter\nis that this approximation algorithm that has,\nas a heuristic,",
    "start": "1050710",
    "end": "1058820"
  },
  {
    "text": "picking the maximum\ndegree continually. And completing your vertex cover\nby picking the maximum degree",
    "start": "1058820",
    "end": "1066650"
  },
  {
    "text": "continually is a log n\napproximation algorithm.",
    "start": "1066650",
    "end": "1073470"
  },
  {
    "text": "And what that means is\nthat I can construct-- and that example is right\nup there-- an example where,",
    "start": "1073470",
    "end": "1082260"
  },
  {
    "text": "regardless of what n is,\nthis particular heuristic-- the maximum degree\nheuristic-- might be log n off",
    "start": "1082260",
    "end": "1090899"
  },
  {
    "text": "from optimal. OK? Whereas, this other scheme\nthat we're going to talk about",
    "start": "1090900",
    "end": "1096080"
  },
  {
    "text": "is going to be within a\nfactor of two of optimal regardless of the\ninput that you apply.",
    "start": "1096080",
    "end": "1101580"
  },
  {
    "text": "Right? So, you have a domination\nhere with respect to the two",
    "start": "1101580",
    "end": "1106699"
  },
  {
    "text": "approximation algorithms. You've got one that is log n. Row n is log n, as I've\ndefined over there.",
    "start": "1106699",
    "end": "1112299"
  },
  {
    "text": "And on the other side,\nyou've got two, right? So if you're a theoretician, you\nknow what you're going to pick.",
    "start": "1112300",
    "end": "1117790"
  },
  {
    "text": "You're going to pick two. It turns out, if\nyou're a practitioner, you might actually\npick this one, right? But this is a theory course.",
    "start": "1117790",
    "end": "1125880"
  },
  {
    "text": "So what is going on here? Well, this is a\nconcocted example that shows you that a maximum\ndegree heuristic could",
    "start": "1125880",
    "end": "1134280"
  },
  {
    "text": "be as far off as log n, right?",
    "start": "1134280",
    "end": "1141380"
  },
  {
    "text": "And so if you look at\nwhat's going on here,",
    "start": "1141380",
    "end": "1150620"
  },
  {
    "text": "you end up with something where\nyou have a bunch of vertices",
    "start": "1150620",
    "end": "1160770"
  },
  {
    "text": "up on top, OK? And you end up with case k\nfactorial vertices up on top.",
    "start": "1160770",
    "end": "1170600"
  },
  {
    "text": "So k equals three in this case. I have six vertices up there. I got two down here because\nthis is 6 divided by 3,",
    "start": "1170600",
    "end": "1177470"
  },
  {
    "text": "because k is 3. And then I got 6\ndivided by 3 here, so that's 2 and 6\ndivided by 1 here. And so that's 6.",
    "start": "1177470",
    "end": "1183559"
  },
  {
    "text": "OK? And so these edges are\nset up in such a way that it's a\npathological example.",
    "start": "1183560",
    "end": "1190100"
  },
  {
    "text": "And I misspoke in terms of\nthe approximation algorithm.",
    "start": "1190100",
    "end": "1195350"
  },
  {
    "text": "I will correct myself in just\na second, in terms of log n. It does grow with the\nsize of the graph.",
    "start": "1195350",
    "end": "1203110"
  },
  {
    "text": "Well, I'll precisely tell\nyou what this approximation algorithm is in terms of the\nrow n factor in just a minute.",
    "start": "1203110",
    "end": "1209620"
  },
  {
    "text": "But let's just take a\nlook at this problem here and see what happens when\nyou apply this maximum degree",
    "start": "1209620",
    "end": "1216240"
  },
  {
    "text": "heuristic, right? And we have to take into\naccount the fact that, if you have ties, in\nterms of maximum degree,",
    "start": "1216240",
    "end": "1223460"
  },
  {
    "text": "you may end up doing\nthe wrong thing. Because you haven't defined\nwhat the tiebreak is when you have two nodes\nthat have the same degree.",
    "start": "1223460",
    "end": "1230710"
  },
  {
    "text": "You could do the wrong\nthing and pick the bad node for this particular\nproblem, right? You have to do a\nworst case analysis.",
    "start": "1230710",
    "end": "1237830"
  },
  {
    "text": "So in the worst case, when\nyou create a vertex cover using maximum degree, what\nis the worst case in terms",
    "start": "1237830",
    "end": "1246380"
  },
  {
    "text": "of the number of\nvertices that we picked for this particular example? Someone?",
    "start": "1246380",
    "end": "1251880"
  },
  {
    "text": "What is the worst case in terms\nof the number of vertices? Yeah, back there. AUDIENCE: Eleven? PROFESSOR: Eleven. And where did you get that from?",
    "start": "1251880",
    "end": "1257895"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: You grab all\nof the ones on the bottom. Fantastic.",
    "start": "1257895",
    "end": "1263260"
  },
  {
    "text": "All right, there you go. Could you stand up?  Whoa.",
    "start": "1263260",
    "end": "1268790"
  },
  {
    "text": "All right.  It was the dentist yesterday. ",
    "start": "1268790",
    "end": "1275750"
  },
  {
    "text": "So, that's exactly right. That's exactly right. So what could happen\nis you could pick this,",
    "start": "1275750",
    "end": "1285540"
  },
  {
    "text": "because that's degree 3. Notice that the maximum\ndegree here is 3, of any node. Right?",
    "start": "1285540",
    "end": "1290909"
  },
  {
    "text": "So if I pick something of\ndegree three, I'm good. I'm in keeping\nwith my heuristic.",
    "start": "1290910",
    "end": "1297160"
  },
  {
    "text": "I could pick all the\nones at the top, right? And then I'm done, right?",
    "start": "1297160",
    "end": "1303190"
  },
  {
    "text": "That's a good-- that's\na good does solution. That's a good trajectory.",
    "start": "1303190",
    "end": "1309700"
  },
  {
    "text": "But all I've said is, the\nheuristic is maximum degree. So there's nothing that's\nstopping me from picking this.",
    "start": "1309700",
    "end": "1315390"
  },
  {
    "text": "And then once I pick that,\nI could pick this one. And then I'm down to, once\nI've taken away these two,",
    "start": "1315390",
    "end": "1320850"
  },
  {
    "text": "remember that now the maximum\ndegree in the entire graph is two.",
    "start": "1320850",
    "end": "1326140"
  },
  {
    "text": "Right? Because each of these things\nis losing the degree-- losing one from its\ndegree-- as I go along.",
    "start": "1326140",
    "end": "1334488"
  },
  {
    "text": "So then I could pick this one,\nthis one, this one, et cetera. And so I could end up with 11. OK?",
    "start": "1334489",
    "end": "1339760"
  },
  {
    "text": "So if you go do the\nmath really quickly-- and this is where\nI'll correct what",
    "start": "1339760",
    "end": "1346299"
  },
  {
    "text": "I said before-- the algo could\npick all the bottom vertices.",
    "start": "1346300",
    "end": "1355380"
  },
  {
    "start": "1355380",
    "end": "1360410"
  },
  {
    "text": "And so the solution and the\ntop vertices are optimal. Top optimal.",
    "start": "1360410",
    "end": "1367890"
  },
  {
    "text": "So that's k factorial, right? According to my\nparameterized graph.",
    "start": "1367890",
    "end": "1373120"
  },
  {
    "text": "That's k factorial in terms\nof the optimal solution for this graph. But if I pick the ones\nthat are the bottom,",
    "start": "1373120",
    "end": "1379510"
  },
  {
    "text": "then it's k factorial\ndivided by k, plus 1 over k minus 1, plus da\nda da da, plus 1.",
    "start": "1379510",
    "end": "1388390"
  },
  {
    "text": "Which is our harmonic number. And that's approximately\nk factorial log k, OK?",
    "start": "1388390",
    "end": "1395710"
  },
  {
    "text": "And this is where I misspoke. I kept saying log n, log n. But that's not\ncompletely correct.",
    "start": "1395710",
    "end": "1402620"
  },
  {
    "text": "Because if I think of n as\nbeing the size of the input, k factorial is n, right?",
    "start": "1402620",
    "end": "1409520"
  },
  {
    "text": "And so if you see that\nI have log k here, then remember that this is log\nk where k factorial equals n.",
    "start": "1409520",
    "end": "1420120"
  },
  {
    "text": "So this is another log\nfactor, roughly speaking. Right? So think of it approximately\nas log log n approximation, OK?",
    "start": "1420120",
    "end": "1428809"
  },
  {
    "text": "Which is pretty good. But it does grow with n, right? The point is this\ndoes grow with n.",
    "start": "1428810",
    "end": "1434260"
  },
  {
    "text": "So it's not the best\napproximation scheme that you can think of.",
    "start": "1434260",
    "end": "1439710"
  },
  {
    "text": "Because the approximation\nfactor grows with the size of your problem. So it'd be great if you could\ncome up with a constant factor",
    "start": "1439710",
    "end": "1447960"
  },
  {
    "text": "approximation scheme that\nwould beat this one, certainly from a theoretical\nstandpoint, right?",
    "start": "1447960",
    "end": "1453110"
  },
  {
    "text": "But this one, maximum\ndegree, chances are, if you're a practitioner,\nthis is what you'd code.",
    "start": "1453110",
    "end": "1458700"
  },
  {
    "text": "Not the one I'm\ngoing to describe. OK? But we're going to analyze\nthe one I've described. I've just shown you that\nthere is an example where",
    "start": "1458700",
    "end": "1468190"
  },
  {
    "text": "you have this log k factor. We haven't done a\nproof of the fact that there's no worse\nexample than this one.",
    "start": "1468190",
    "end": "1476060"
  },
  {
    "text": "OK? So I'm just claiming,\nat this point, that this is at best, a log\nk approximation algorithm.",
    "start": "1476060",
    "end": "1485280"
  },
  {
    "text": "We haven't actually shown\nthat it is, in fact, a log k approximation algorithm. At best, it's that.",
    "start": "1485280",
    "end": "1490630"
  },
  {
    "text": "OK? Any questions?  All right. So what's another heuristic?",
    "start": "1490630",
    "end": "1497230"
  },
  {
    "text": "What's another heuristic\nfor doing vertex cover?",
    "start": "1497230",
    "end": "1504169"
  },
  {
    "text": "We did this picking\nthe maximum degree. Nice and simple.",
    "start": "1504170",
    "end": "1510090"
  },
  {
    "text": "But it didn't quite\nwork out for us. ",
    "start": "1510090",
    "end": "1516960"
  },
  {
    "text": "Any other ideas? ",
    "start": "1516960",
    "end": "1522350"
  },
  {
    "text": "So, I picked vertices. What else could I pick?",
    "start": "1522350",
    "end": "1527660"
  },
  {
    "text": "I could pick edges, right? So, I could pick random edges.",
    "start": "1527660",
    "end": "1533700"
  },
  {
    "text": "It turns out that\nactually works better from a theoretical standpoint. ",
    "start": "1533700",
    "end": "1547800"
  },
  {
    "text": "So, what we're going\nto do here is simply set the cover to be null.",
    "start": "1547800",
    "end": "1557429"
  },
  {
    "text": "Go ahead and set all of\nthe edges to be E prime. And then we're going to\niterate over these edges.",
    "start": "1557430",
    "end": "1566865"
  },
  {
    "start": "1566865",
    "end": "1577260"
  },
  {
    "text": "I'm not even\nspecifying the way I'm going to select these edges. And I still will be able to\ndo a proof of 2 approximation.",
    "start": "1577260",
    "end": "1586460"
  },
  {
    "text": "OK?  Oh!",
    "start": "1586460",
    "end": "1591550"
  },
  {
    "text": "I forgot the best part. This is on your quiz.",
    "start": "1591550",
    "end": "1597600"
  },
  {
    "text": "That was the tangible benefit\nof attending the lecture. So copy that down.",
    "start": "1597600",
    "end": "1602890"
  },
  {
    "start": "1602890",
    "end": "1616420"
  },
  {
    "text": "So this is very simple. It's not a complicated problem.",
    "start": "1616420",
    "end": "1621850"
  },
  {
    "text": "This is not simple\nheuristics that are going to be\nparticularly complicated.",
    "start": "1621850",
    "end": "1627630"
  },
  {
    "text": "You just do some\nselections, and then you iterate over the graph. And you take away\nstuff from the graph.",
    "start": "1627630",
    "end": "1633160"
  },
  {
    "text": "Typically, you take away\nvertices as well as edges. And you keep going until\nyou got nothing left, right?",
    "start": "1633160",
    "end": "1639560"
  },
  {
    "text": "And then you look at\nyour cover, and you say, what is the size of my cover? ",
    "start": "1639560",
    "end": "1651900"
  },
  {
    "text": "And here we return C, all right?",
    "start": "1651900",
    "end": "1658650"
  },
  {
    "text": "So I won't spend\nany time on that. You can read it. It's simple iterative\nalgorithm that fixed edges",
    "start": "1658650",
    "end": "1667130"
  },
  {
    "text": "randomly and keeps going. So, now comes the\nfun part, which",
    "start": "1667130",
    "end": "1675350"
  },
  {
    "text": "is we need to show that that\nlittle algorithm is always",
    "start": "1675350",
    "end": "1682000"
  },
  {
    "text": "going to be within a\nfactor of 2 of optimal, OK?",
    "start": "1682000",
    "end": "1688990"
  },
  {
    "text": "And you can play around\nwith this example. ",
    "start": "1688990",
    "end": "1694020"
  },
  {
    "text": "In fact, in this case,\nyou have 6 and 11. So that's a factor\nof 2, of course. So even this algorithm is\nbetter than a factor of 2.",
    "start": "1694020",
    "end": "1701210"
  },
  {
    "text": "But it won't be if I expanded\nthe graph and increased k. But that algorithm that I\nhave up there is always going",
    "start": "1701210",
    "end": "1707540"
  },
  {
    "text": "to be within a factor of 2. And we want to prove\nthat, all right?",
    "start": "1707540",
    "end": "1712800"
  },
  {
    "text": "So how do we go\nabout proving that? ",
    "start": "1712800",
    "end": "1717960"
  },
  {
    "text": "We want to prove, in particular,\nthat a prox vertex cover is a 2",
    "start": "1717960",
    "end": "1727760"
  },
  {
    "text": "approximation algorithm.",
    "start": "1727760",
    "end": "1733750"
  },
  {
    "start": "1733750",
    "end": "1739230"
  },
  {
    "text": "So, any ideas? How would I prove\nsomething like this?",
    "start": "1739230",
    "end": "1744270"
  },
  {
    "text": " Where do you think this\nfactor of 2 comes from?",
    "start": "1744270",
    "end": "1750457"
  },
  {
    "text": "Someone who hasn't answered yet.  You answered a lot of questions\nin the past, all right?",
    "start": "1750457",
    "end": "1757160"
  },
  {
    "text": " No? Someone?",
    "start": "1757160",
    "end": "1764000"
  },
  {
    "text": "All right. AUDIENCE: [INAUDIBLE] PROFESSOR: I'm sorry? AUDIENCE: [INAUDIBLE]",
    "start": "1764000",
    "end": "1770440"
  },
  {
    "text": "PROFESSOR: That's an\nexcellent observation. The observation is\nthat the edges we pick",
    "start": "1770440",
    "end": "1778510"
  },
  {
    "text": "do not intersect each other. So, I gave you a Frisbee\nfor the wrong answer.",
    "start": "1778510",
    "end": "1783740"
  },
  {
    "text": "So for this correct one,\nI won't give you one? That's fair, right? No.",
    "start": "1783740",
    "end": "1788790"
  },
  {
    "text": "That's unfair. Right? There you go. Sorry. ",
    "start": "1788790",
    "end": "1794240"
  },
  {
    "text": "So, the key observation\nwas in this algorithm, I'm going to be picking edges.",
    "start": "1794240",
    "end": "1800639"
  },
  {
    "text": "And the edges will not\nshare vertices, right?",
    "start": "1800640",
    "end": "1806470"
  },
  {
    "text": "Because I delete the vertices\nonce I've picked an edge, correct? So there's no way that the\nedges will share vertices.",
    "start": "1806470",
    "end": "1813340"
  },
  {
    "text": "So what does that mean? Well, that means\nthat, I'm getting--",
    "start": "1813340",
    "end": "1819350"
  },
  {
    "text": "let's say, I get A edges. So let A denote the\nedges that are picked.",
    "start": "1819350",
    "end": "1830549"
  },
  {
    "text": " So I'm going to get edges\nthat look like that.",
    "start": "1830550",
    "end": "1838470"
  },
  {
    "text": "OK? And I got continuality\nof A edges. I know that in my vertex\ncover, that, obviously, I",
    "start": "1838470",
    "end": "1848220"
  },
  {
    "text": "have to pick vertices\nthat cover all the edges. Now I'm picking edges,\nand what's happening,",
    "start": "1848220",
    "end": "1855570"
  },
  {
    "text": "of course, is that I'm\npicking 2 A vertices. ",
    "start": "1855570",
    "end": "1864150"
  },
  {
    "text": "So my C-- and remember,\nmy cost was C. And I had Copt, that\ncorresponds to the optimum cost.",
    "start": "1864150",
    "end": "1872200"
  },
  {
    "text": "And so the cost that\nthis algorithm produces is 2 times A, right?",
    "start": "1872200",
    "end": "1877770"
  },
  {
    "text": "Make sense? Because I'm picking vertices,\nwe are picking edges. There's no overlap.",
    "start": "1877770",
    "end": "1884470"
  },
  {
    "text": "And therefore, the cost\nis 2 times A, right? So as long as I can now say\nthat Copt, which is the optimum,",
    "start": "1884470",
    "end": "1893500"
  },
  {
    "text": "is less than or\nequal to A, right? I have my factor of 2\napproximation algorithm.",
    "start": "1893500",
    "end": "1899490"
  },
  {
    "text": "So that's it. It's a simple\nargument that says now show that Copt is at least\nA. Copt, I'm minimizing.",
    "start": "1899490",
    "end": "1919269"
  },
  {
    "text": "Copt should be at\nleast A. Right? I hope I said that right before. But I wrote that\ndown here correctly.",
    "start": "1919270",
    "end": "1926290"
  },
  {
    "text": "So if I say that\nCopt is at least A, then I got my proof\nhere of 2 approximation.",
    "start": "1926290",
    "end": "1932769"
  },
  {
    "text": "Because I'm getting\n2 A back, right? So if you go look at C divided\nby-- so this means, of course,",
    "start": "1932770",
    "end": "1938100"
  },
  {
    "text": "that C is less than or equal\nto 2 Copt, if I can show--",
    "start": "1938100",
    "end": "1949750"
  },
  {
    "text": "make that statement. And it turns out that's\na fairly easy statement",
    "start": "1949750",
    "end": "1955100"
  },
  {
    "text": "to argue simply because of the\ndefinition of vertex cover.",
    "start": "1955100",
    "end": "1962070"
  },
  {
    "text": "Remember that I'm going to have\nto cover every edge, correct?",
    "start": "1962070",
    "end": "1969509"
  },
  {
    "text": "So I'm going to cover--\nneed to cover every edge,",
    "start": "1969510",
    "end": "1979170"
  },
  {
    "text": "including all edges in A.\nA is a subset of edges.",
    "start": "1979170",
    "end": "1989070"
  },
  {
    "text": "I have to cover all the edges. Clearly, I have to\ncover the A edges, which are a subset of all\nof the edges, right?",
    "start": "1989070",
    "end": "1995010"
  },
  {
    "text": "How am I going to cover\nall of the A edges that happened to all be disjoint\nin terms of their vertices?",
    "start": "1995010",
    "end": "2004320"
  },
  {
    "text": "I'm going to have to pick one\nvertex for each of these edges,",
    "start": "2004320",
    "end": "2010419"
  },
  {
    "text": "right? I mean, I could pick\nthis one or that one. But I have to pick one of them. I could pick this\none or that one.",
    "start": "2010420",
    "end": "2016789"
  },
  {
    "text": "And so on and so forth, right? So it is clear that, given\nthis disjoint collection",
    "start": "2016790",
    "end": "2023830"
  },
  {
    "text": "of edges corresponding\nto A, that Copt is greater than or equal to A, OK?",
    "start": "2023830",
    "end": "2029440"
  },
  {
    "text": "And that's it. So I had to cover all. This requires, since no two\nedges share an endpoint,",
    "start": "2029440",
    "end": "2042100"
  },
  {
    "text": "this means that I need to pick a\ndifferent vertex from each edge",
    "start": "2042100",
    "end": "2053609"
  },
  {
    "text": "in A. And that implies that Copt\nis greater than or equal to A.",
    "start": "2053610",
    "end": "2066149"
  },
  {
    "text": "All right? Any questions about that? We all good here? Yup?",
    "start": "2066150",
    "end": "2071399"
  },
  {
    "text": "Understood the proof? So that's our first\napproximation algorithm",
    "start": "2071400",
    "end": "2076590"
  },
  {
    "text": "where we actually had a proof. And so, this is kind of cool. It obviously a pretty\nsimple algorithm.",
    "start": "2076590",
    "end": "2083770"
  },
  {
    "text": "You're guaranteed to be\nwithin a factor of 2. It doesn't mean\nthat that's the best heuristic you can come up with.",
    "start": "2083770",
    "end": "2090679"
  },
  {
    "text": "It doesn't mean that\nthis is what you'd code.",
    "start": "2090679",
    "end": "2095739"
  },
  {
    "text": "But this is the best\napproximation algorithm that you're going to cover\nfor vertex cover, OK?",
    "start": "2095739",
    "end": "2105050"
  },
  {
    "text": "So, what about other problems?",
    "start": "2105050",
    "end": "2110370"
  },
  {
    "text": "What's the state of the world\nwith respect to approximation? There's lots of NP complete\nand NP hard problems",
    "start": "2110370",
    "end": "2117550"
  },
  {
    "text": "for which we know\napproximation schemes. And we like to move towards\napproximation schemes slowly.",
    "start": "2117550",
    "end": "2124910"
  },
  {
    "text": "But I'd like to look at\na problem that perhaps is a little more compelling\nthan vertex cover",
    "start": "2124910",
    "end": "2132020"
  },
  {
    "text": "before we get to\napproximation schemes. And that's what's\ncalled set cover. ",
    "start": "2132020",
    "end": "2144220"
  },
  {
    "text": "So set cover tries to\ncover a set with subsets.",
    "start": "2144220",
    "end": "2152810"
  },
  {
    "text": "And it's very useful\nin optimization",
    "start": "2152810",
    "end": "2158050"
  },
  {
    "text": "where you have overlapping\nsets, maybe it's schedules,",
    "start": "2158050",
    "end": "2163710"
  },
  {
    "text": "it's tasks, it's people getting\ninvited to dinner, et cetera, and you want to make sure\neverybody gets invited.",
    "start": "2163710",
    "end": "2171400"
  },
  {
    "text": "You want to invite\nfamilies, and there's overlapping families, because\npeople have relationships.",
    "start": "2171400",
    "end": "2177840"
  },
  {
    "text": "And you want to\neventually minimize the number of dinners you\nactually have to have.",
    "start": "2177840",
    "end": "2183010"
  },
  {
    "text": "And that's, I don't know,\nhopefully a motivating example.",
    "start": "2183010",
    "end": "2188330"
  },
  {
    "text": "If it wasn't, too bad. ",
    "start": "2188330",
    "end": "2193460"
  },
  {
    "text": "So you do have a family of\npossibly overlapping subsets. ",
    "start": "2193460",
    "end": "2200410"
  },
  {
    "text": "S1, S2, Sm, subset\nof equal to x.",
    "start": "2200410",
    "end": "2206460"
  },
  {
    "text": "So that's that big\nset that we have. Such that I want to cover\nall of the elements.",
    "start": "2206460",
    "end": "2211740"
  },
  {
    "text": "So that's what this little\nequation corresponds to. The union of all the\nselected SI's should equal x.",
    "start": "2211740",
    "end": "2222579"
  },
  {
    "text": "I need to cover it all. And I do want to minimize. ",
    "start": "2222580",
    "end": "2229890"
  },
  {
    "text": "It's called a C. Find\nC subset 1, 2, m.",
    "start": "2229890",
    "end": "2237042"
  },
  {
    "text": "So I'm selecting a\nbunch of these things. So C is simply-- capital C here\nis some subset of the indices.",
    "start": "2237042",
    "end": "2246530"
  },
  {
    "text": "And the only reason I do\nthat is to say that I want to do this while minimizing.",
    "start": "2246530",
    "end": "2253430"
  },
  {
    "text": "I wanted to I equals 1\nthrough m while minimizing C.",
    "start": "2253430",
    "end": "2265790"
  },
  {
    "text": "OK?  Let me get this right. So this is what I have.",
    "start": "2265790",
    "end": "2272550"
  },
  {
    "text": "Find C, subset of these,\nsuch that-- I'm sorry.",
    "start": "2272550",
    "end": "2279002"
  },
  {
    "text": "There's one more.  Union of I belonging\nto C, SI equals x.",
    "start": "2279002",
    "end": "2290190"
  },
  {
    "text": "OK?  Sorry for the mess here.",
    "start": "2290190",
    "end": "2296340"
  },
  {
    "text": "But this last line\nthere-- so this is simply a specification\nof the problem.",
    "start": "2296340",
    "end": "2302390"
  },
  {
    "text": "I'm going to be given\nx, and I'm going to be given a large\ncollection of subsets, such that the union of all of those\nsubsets are going to cover x.",
    "start": "2302390",
    "end": "2313099"
  },
  {
    "text": "And now I'm saying,\nI want to look inside and I want to\nselect all of them.",
    "start": "2313100",
    "end": "2319810"
  },
  {
    "text": "I want to select a\nbunch of these things. You know, C, which is some\nsubset of these indices,",
    "start": "2319810",
    "end": "2325099"
  },
  {
    "text": "so 1 may not be in it. 2 may be in it. 4 may be in it, et cetera.",
    "start": "2325100",
    "end": "2330119"
  },
  {
    "text": "And such that those subsets\nthat are in this capital C",
    "start": "2330120",
    "end": "2335600"
  },
  {
    "text": "set add up to x. OK? So pictorially, may\nmake things clearer.",
    "start": "2335600",
    "end": "2347740"
  },
  {
    "text": "You have, let's say, a grid\nhere corresponding to x.",
    "start": "2347740",
    "end": "2356410"
  },
  {
    "text": "So each of these dots\nthat I'm drawing here are elements that\nneed to be covered. ",
    "start": "2356410",
    "end": "2365130"
  },
  {
    "text": "So that's my x. And I might have S1\ncorresponding to that.",
    "start": "2365130",
    "end": "2376390"
  },
  {
    "text": "This is S3, right?",
    "start": "2376390",
    "end": "2382380"
  },
  {
    "text": "And S2 is this\nthing in the middle. ",
    "start": "2382380",
    "end": "2390190"
  },
  {
    "text": "That's S2. S5 is this one here.",
    "start": "2390190",
    "end": "2400270"
  },
  {
    "text": "And I got a little S4 over here. ",
    "start": "2400270",
    "end": "2407420"
  },
  {
    "text": "And finally, I got--\nlet's see-- S6, yup.",
    "start": "2407420",
    "end": "2416622"
  },
  {
    "text": " Which is kind of this funky\nthing that goes like that.",
    "start": "2416623",
    "end": "2425170"
  },
  {
    "text": " So this thing here is S6.",
    "start": "2425170",
    "end": "2432680"
  },
  {
    "text": "All right? OK. What's the optimum? You got 30 seconds.",
    "start": "2432680",
    "end": "2438170"
  },
  {
    "text": " What's the optimum cover?",
    "start": "2438170",
    "end": "2445890"
  },
  {
    "text": "Yeah, go ahead. You had your hand up. AUDIENCE: [INAUDIBLE] ",
    "start": "2445890",
    "end": "2453626"
  },
  {
    "text": "PROFESSOR: Yep. That's exactly right. So the optimum S3, S4, S5.",
    "start": "2453626",
    "end": "2460960"
  },
  {
    "text": "All right. AUDIENCE: [INAUDIBLE] ",
    "start": "2460960",
    "end": "2467437"
  },
  {
    "text": "PROFESSOR: Oh. S3. Yeah, S4 is this one here. S6, S5, OK good. ",
    "start": "2467437",
    "end": "2474820"
  },
  {
    "text": "S3. And then-- oh! You know what? You're right.",
    "start": "2474820",
    "end": "2479859"
  },
  {
    "text": "Let's make you right. ",
    "start": "2479860",
    "end": "2486210"
  },
  {
    "text": "Don't erase that. Here you go. ",
    "start": "2486210",
    "end": "2493990"
  },
  {
    "text": "So that's 3, right? So C would be-- cardinality\nof C would be 3.",
    "start": "2493990",
    "end": "2503599"
  },
  {
    "text": "So it's a nontrivial problem. It's not clear how\nyou're going to do this.",
    "start": "2503600",
    "end": "2509910"
  },
  {
    "text": "I've got to use a heuristic. Hard in terms of optimization.",
    "start": "2509910",
    "end": "2515640"
  },
  {
    "text": "Optimal requires exponential\ntime, as far as we know. And we're just going to go\noff and say, hey let's design",
    "start": "2515640",
    "end": "2524140"
  },
  {
    "text": "an approximation\nalgorithm, right? So let's think of a heuristic. What's a good heuristic?",
    "start": "2524140",
    "end": "2531820"
  },
  {
    "text": "What's a good heuristic\nfor this problem? I hope I haven't scared you.",
    "start": "2531820",
    "end": "2537420"
  },
  {
    "text": "What's a good heuristic\nfor this problem? What's the obvious heuristic? Yeah? AUDIENCE: [INAUDIBLE] PROFESSOR: The largest subset.",
    "start": "2537420",
    "end": "2543130"
  },
  {
    "text": "And in this\nparticular case, it's actually the best also\nin terms of theory.",
    "start": "2543130",
    "end": "2549900"
  },
  {
    "text": "So, approximate set\ncover-- at least the best",
    "start": "2549900",
    "end": "2564376"
  },
  {
    "text": "that we're concerned\nabout in this lecture. ",
    "start": "2564376",
    "end": "2575359"
  },
  {
    "text": "And what is\napproximates set cover? It's pick largest SI.",
    "start": "2575360",
    "end": "2585130"
  },
  {
    "text": "Remove all elements in\nSI from x, and other Sj.",
    "start": "2585130",
    "end": "2598190"
  },
  {
    "text": " So you're constantly shrinking.",
    "start": "2598190",
    "end": "2603260"
  },
  {
    "text": "And then keep doing that. So you'll have a new problem. And you're going to specify that\nnew problem on every iteration,",
    "start": "2603260",
    "end": "2611520"
  },
  {
    "text": "just like we did\nfor vertex cover and we've done many a time. If you do that over here,\nnotice that what you end up with",
    "start": "2611520",
    "end": "2620840"
  },
  {
    "text": "is picking S1, because\nS1 is the big boy here,",
    "start": "2620840",
    "end": "2626830"
  },
  {
    "text": "in the sense that it's\ngot six elements in it. Right? Up on top.",
    "start": "2626830",
    "end": "2632670"
  },
  {
    "text": "And so you'd pick\napprox or heuristic algo",
    "start": "2632670",
    "end": "2639460"
  },
  {
    "text": "would pick S1, S4, S5,\nand S3 in that order.",
    "start": "2639460",
    "end": "2647660"
  },
  {
    "text": "I won't go over it. It's not that important. The point is it doesn't get you\nthe optimum for this problem.",
    "start": "2647660",
    "end": "2655790"
  },
  {
    "text": "And in general, you could\nalways concoct examples where any heuristic\nfails, of course, right?",
    "start": "2655790",
    "end": "2661810"
  },
  {
    "text": "Because this problem is hard. But it's four as\nopposed to three. And the big question, again, as\nalways, is, what's the bound?",
    "start": "2661810",
    "end": "2671780"
  },
  {
    "text": "What's the bound if you\napplied this heuristic? And what can you\nshow with respect",
    "start": "2671780",
    "end": "2677690"
  },
  {
    "text": "to the approximation algorithm? What is row n here? So that's what we\nhave to do here,",
    "start": "2677690",
    "end": "2683400"
  },
  {
    "text": "in terms of what the bound is. And we're actually going\nto do an analysis here",
    "start": "2683400",
    "end": "2688710"
  },
  {
    "text": "that is pretty straightforward. It's got a little\nbit of algebra in it. But if you go look\nat that this, it's",
    "start": "2688710",
    "end": "2695480"
  },
  {
    "text": "covered in CLRS, the textbook. But the analysis in there\nuses harmonic numbers,",
    "start": "2695480",
    "end": "2700520"
  },
  {
    "text": "and is substantially\nmore complicated for, in my mind, no reason.",
    "start": "2700520",
    "end": "2708430"
  },
  {
    "text": "And so we have a\nsimpler analysis here that is simply going to\nbe a matter of counting.",
    "start": "2708430",
    "end": "2714630"
  },
  {
    "text": "We are picking the maximum\nnumber of elements every time.",
    "start": "2714630",
    "end": "2723549"
  },
  {
    "text": "The best we can do. It's a greedy heuristic. We're trying to shrink our\nproblem as much as possible.",
    "start": "2723550",
    "end": "2734000"
  },
  {
    "text": "Initially we have x. And then we're going\nto get a new problem, let's call it x0 first,\nfor the initial problem.",
    "start": "2734000",
    "end": "2741540"
  },
  {
    "text": "You're going to get\na new problem, x1. And we're maximally\nshrinking x1 in relation",
    "start": "2741540",
    "end": "2748640"
  },
  {
    "text": "to x0, in the sense that\nwe're going to remove as many elements as we can.",
    "start": "2748640",
    "end": "2754030"
  },
  {
    "text": "Because that is\nprecisely our heuristic. So the big question is, as we\ngo from the biggest problem",
    "start": "2754030",
    "end": "2761864"
  },
  {
    "text": "that we have, the\noriginal problem to smaller and smaller problems,\nwhen do we end up with nothing?",
    "start": "2761864",
    "end": "2767020"
  },
  {
    "text": "When we end up with\nnothing, that's when the number\nof iterations that corresponds to the number\nof SI's that we picked",
    "start": "2767020",
    "end": "2775030"
  },
  {
    "text": "is going to be the collection\nof SI's in our solution. And the cardinality of\nthat is our cost, right?",
    "start": "2775030",
    "end": "2783210"
  },
  {
    "text": "So that's all pretty\nstraightforward, hopefully. So what we need to do, of\ncourse, is show a proof.",
    "start": "2783210",
    "end": "2790980"
  },
  {
    "text": "And the way we're\ngoing to do this is by a fairly straightforward\ncounting argument.",
    "start": "2790980",
    "end": "2796560"
  },
  {
    "text": "Assume there's a cover Copt,\nsince that Copt equals t.",
    "start": "2796560",
    "end": "2806260"
  },
  {
    "text": "OK? So the cardinality\nof Copt equals t. So I'm just assuming that this\nt subset's in my optimum cover,",
    "start": "2806260",
    "end": "2814730"
  },
  {
    "text": "OK? t subset's in my optimum cover. Now let x of k be the set\nof elements in iteration k.",
    "start": "2814730",
    "end": "2830540"
  },
  {
    "text": " And let's assume\nthat x0 equals x.",
    "start": "2830540",
    "end": "2836070"
  },
  {
    "text": "So initially, I'm at 0. And I want to subscript\nthis because I want to point to\neach of the problems",
    "start": "2836070",
    "end": "2845090"
  },
  {
    "text": "that I'm going to\nhave as I shrink this set down to nothing.",
    "start": "2845090",
    "end": "2853730"
  },
  {
    "text": "Now I know that for all\nk, including of course x0,",
    "start": "2853730",
    "end": "2859970"
  },
  {
    "text": "xk can be covered by t sets.",
    "start": "2859970",
    "end": "2866609"
  },
  {
    "text": "OK? I mean, that's kind\nof a vacuous statement because I assumed that x0\ncould be covered by t sets.",
    "start": "2866610",
    "end": "2874350"
  },
  {
    "text": "And x0 is only shrinking\nto x1, to x2, et cetera. And I'm just saying,\nall of these things",
    "start": "2874350",
    "end": "2879950"
  },
  {
    "text": "could be covered-- each of those\nintermediate problems as well, can be covered-- by t. In fact, in the\nsolution that we have,",
    "start": "2879950",
    "end": "2887100"
  },
  {
    "text": "the optimal solution,\nif these x0's are coming from my heuristic.",
    "start": "2887100",
    "end": "2893210"
  },
  {
    "text": "But if they were coming\nfrom an optimum solution, then x0 would be covered by t.",
    "start": "2893210",
    "end": "2898936"
  },
  {
    "text": "x1 would be covered\nby t minus 1. And t minus 2, and\nso on and so forth.",
    "start": "2898936",
    "end": "2903990"
  },
  {
    "text": "But I don't have an\noptimum algorithm here. I just have my\nheuristic algorithm.",
    "start": "2903990",
    "end": "2908992"
  },
  {
    "text": "And I'm just making a\nfairly vacuous statement, as I said, based\non my definition, that the original problem\ncan be covered using t.",
    "start": "2908992",
    "end": "2916420"
  },
  {
    "text": "And therefore, a\nsmaller problem, when I remove elements from it,\ncould also be covered using t.",
    "start": "2916420",
    "end": "2921460"
  },
  {
    "text": "OK? So far, so good? So now, one of them covers what?",
    "start": "2921460",
    "end": "2937680"
  },
  {
    "text": "What can I say\nabout one of them? What principle can I\nuse to make a claim",
    "start": "2937680",
    "end": "2943580"
  },
  {
    "text": "about the number of\nelements that are covered by one of these t sets?",
    "start": "2943580",
    "end": "2950170"
  },
  {
    "text": " Remember a principle\nfrom way back?",
    "start": "2950170",
    "end": "2958010"
  },
  {
    "text": "6042? My favorite principle? Flapping. Think flapping.",
    "start": "2958010",
    "end": "2963920"
  },
  {
    "text": "Pigeon hole. Pigeon hole principle, right? See, you have to remember\nall of the material",
    "start": "2963920",
    "end": "2970599"
  },
  {
    "text": "that you learned at MIT\nfor the rest of your life. OK? You never know when\nit's going to be useful.",
    "start": "2970600",
    "end": "2977160"
  },
  {
    "text": "OK, so here you go, pigeon hole. My favorite principle. ",
    "start": "2977160",
    "end": "2982750"
  },
  {
    "text": "It's such a trivial principle. So one of them covers at\nleast xk divided by t.",
    "start": "2982750",
    "end": "2993369"
  },
  {
    "text": "I mean, why is this\neven a principle? Right? Elements. ",
    "start": "2993369",
    "end": "2999990"
  },
  {
    "text": "OK, so that's it, right? That's the observation.",
    "start": "2999990",
    "end": "3005730"
  },
  {
    "text": "And, now that implies that\nan algorithm-- because it's",
    "start": "3005730",
    "end": "3012100"
  },
  {
    "text": "going to pick the\nmaximum of these, right? The algorithm is going to\npick the maximum of these. So, it's going to pick\na set of current size",
    "start": "3012100",
    "end": "3028320"
  },
  {
    "text": "greater than or equal\nto xk divided by t. Otherwise, the algorithm\nwould be incorrect.",
    "start": "3028320",
    "end": "3034180"
  },
  {
    "text": "It's not doing what\nyou told it to do. Right? It's got to pick the maximum.",
    "start": "3034180",
    "end": "3039300"
  },
  {
    "text": "So keep chugging here. And one real observation, and\nthen the rest of it is algebra.",
    "start": "3039300",
    "end": "3049255"
  },
  {
    "start": "3049255",
    "end": "3056059"
  },
  {
    "text": "So, what I can say\nis that for all k, xk plus 1, which is\nshrinking, is less than",
    "start": "3056060",
    "end": "3064610"
  },
  {
    "text": "or equal to 1\nminus 1 over t, xk.",
    "start": "3064610",
    "end": "3070600"
  },
  {
    "text": "OK? That's the way I'm shrinking. Right? This is again, a fairly\nconservative statement.",
    "start": "3070600",
    "end": "3078290"
  },
  {
    "text": "Because the fact\nof the matter is that I'm putting t in as\na constant here, right?",
    "start": "3078290",
    "end": "3083650"
  },
  {
    "text": "But t is actually, in effect,\nchanging, obviously, halfway through the algorithm. I don't need t sets to cover the\nx-- whatever it is-- xk over 2",
    "start": "3083650",
    "end": "3093790"
  },
  {
    "text": "or whatever it is that I have. I need the t for x0. Maybe I did a bad selection\nwith my heuristic,",
    "start": "3093790",
    "end": "3100380"
  },
  {
    "text": "and I still would need t, which\nis optimum, remember, for x1. But halfway through\nthe algorithm",
    "start": "3100380",
    "end": "3106680"
  },
  {
    "text": "after I picked a bunch of sets,\nI'm still saying I need t, OK? Because I just need\nthat for my proof.",
    "start": "3106680",
    "end": "3113137"
  },
  {
    "text": "That's all I need for the proof. In CLRS, this\nactually varies and it turns into a harmonic series.",
    "start": "3113137",
    "end": "3119380"
  },
  {
    "text": "We won't go there. OK? You can do the natural\nlogarithm of n plus 1, a proof,",
    "start": "3119380",
    "end": "3126690"
  },
  {
    "text": "just doing the simpler analysis. OK? So you see what's\nhappening here.",
    "start": "3126690",
    "end": "3132109"
  },
  {
    "text": "That's my shrinkage. That's the recurrence,\nif you will,",
    "start": "3132110",
    "end": "3137610"
  },
  {
    "text": "that tells me how my\nproblem size is shrinking. And when do I end?",
    "start": "3137610",
    "end": "3143160"
  },
  {
    "text": "What is my stopping point?  What's my stopping point?",
    "start": "3143160",
    "end": "3149109"
  },
  {
    "text": "Mathematically? ",
    "start": "3149109",
    "end": "3155650"
  },
  {
    "text": "When do we end this lecture? When you give me the answer. No, not quite.",
    "start": "3155650",
    "end": "3161849"
  },
  {
    "text": "So I end when? I got nothing to cover, right? So when one of these things\ngets down to xk equals 0, right?",
    "start": "3161850",
    "end": "3176990"
  },
  {
    "text": "When xk equals 0, I'm done. ",
    "start": "3176990",
    "end": "3183310"
  },
  {
    "text": "I'm constantly\ntaking stuff away. When xk equals 0,\nI'm going to be done. OK?",
    "start": "3183310",
    "end": "3188490"
  },
  {
    "text": "And I'm going to\nmove a little bit between discrete\nand continuous here.",
    "start": "3188490",
    "end": "3193670"
  },
  {
    "text": "It's all going to be fine. But what I have is, if I just\ntake that, I can turn this.",
    "start": "3193670",
    "end": "3201090"
  },
  {
    "text": "This is a recurrence. I want to turn\nthat into a series. So I can say something like 1\nminus 1 over t, raised to k,",
    "start": "3201090",
    "end": "3210490"
  },
  {
    "text": "times n. And this is the\ncardinality of x, which is the cardinality of x0.",
    "start": "3210490",
    "end": "3216930"
  },
  {
    "text": "So that's what I have up there. And that's essentially\nwhat happens. I constantly shrink\nas I go along. And I have a constant\nrate of shrinkage here.",
    "start": "3216930",
    "end": "3224330"
  },
  {
    "text": "Which is the\nconservative part of it. So keep that in mind. But it doesn't matter from\nan analysis standpoint.",
    "start": "3224330",
    "end": "3229920"
  },
  {
    "text": "OK? So if you look at that, and\nyou say, what happens here? Well, I can just say\nthat this is less than or equal to e\nraised to minus--",
    "start": "3229920",
    "end": "3236640"
  },
  {
    "text": "you knew you were\ngoing to get an e, because you saw a natural\nalgorithm here, right?",
    "start": "3236640",
    "end": "3242369"
  },
  {
    "text": "And so, that's what we got.  And basically, that's it.",
    "start": "3242370",
    "end": "3250089"
  },
  {
    "text": "You can do a little\nbit of algebra. I'll just write\nthis out for you. But I won't really explain it.",
    "start": "3250090",
    "end": "3256740"
  },
  {
    "text": "You're going to\nhave Xk equals 0. You're done. The cost, of course, is k.",
    "start": "3256740",
    "end": "3262570"
  },
  {
    "text": "Right? The cost is k, because\nyou've selected k subsets. All right, so that's\nyour cost, all right?",
    "start": "3262570",
    "end": "3269470"
  },
  {
    "text": "So, when you get to\nthe point, you're done. And the cost is k. So what you need\nis, you need to say",
    "start": "3269470",
    "end": "3275850"
  },
  {
    "text": "that e raised to\nminus kt divided by n is strictly less than 1.",
    "start": "3275850",
    "end": "3281930"
  },
  {
    "text": "Because that is\neffectively when you have strictly less than 1 element.",
    "start": "3281930",
    "end": "3287150"
  },
  {
    "text": "It's discrete. So that means you have zero\nelements left to cover. That means you're done OK? So that's your\ncondition for stopping.",
    "start": "3287150",
    "end": "3295840"
  },
  {
    "text": "So this done means that e\nraised to minus kt times n is strictly less than 1.",
    "start": "3295840",
    "end": "3302750"
  },
  {
    "text": "And if you go do\nthat, you'll get k over t, just about greater\nthan natural logarithm of m(n).",
    "start": "3302750",
    "end": "3313460"
  },
  {
    "text": "The algorithm terminates if we\njust do a little manipulation.",
    "start": "3313460",
    "end": "3319210"
  },
  {
    "text": "And that implies that\nk over t less than or equal to natural logarithm\nof n plus 1 is valid.",
    "start": "3319210",
    "end": "3330240"
  },
  {
    "text": "Right? k over t is going\nto be less than or equal to natural\nlogarithm of n plus 1. Because the instant\nit becomes greater,",
    "start": "3330240",
    "end": "3337530"
  },
  {
    "text": "the algorithm terminates. Right? And that's how you got\nyour proof over here. Because this is\nexactly what we want.",
    "start": "3337530",
    "end": "3343790"
  },
  {
    "text": "k is our C from way back where\nit's the cost of our heuristic or the cost of\nour approximation.",
    "start": "3343790",
    "end": "3350250"
  },
  {
    "text": "t is the optimum cost. That's what I defined it as. And this is a bound on k over t.",
    "start": "3350250",
    "end": "3357250"
  },
  {
    "text": "All right? Cool. Any questions on this? ",
    "start": "3357250",
    "end": "3365270"
  },
  {
    "text": "OK. So this approximation ratio\ngets worse for larger problems,",
    "start": "3365270",
    "end": "3370740"
  },
  {
    "text": "just like this other\napproximation's algorithm that we didn't actually prove\nfrom the very first problem.",
    "start": "3370740",
    "end": "3377359"
  },
  {
    "text": "That also got worse. We had a log k factor for that.",
    "start": "3377360",
    "end": "3382520"
  },
  {
    "text": "And as your problem\nsize increased, obviously the approximation\nfactor increased. This is a little\nclearer as to what",
    "start": "3382520",
    "end": "3390430"
  },
  {
    "text": "the increase looks\nlike in relation to the original size of n.",
    "start": "3390430",
    "end": "3395650"
  },
  {
    "text": "So it's just natural\nlogarithm of n plus 1. So, so far, we've done\napproximation algorithms,",
    "start": "3395650",
    "end": "3402280"
  },
  {
    "text": "a couple of different varieties. We had a constant\nfactor one, and then we had a row of n that actually\nhad a dependence on n.",
    "start": "3402280",
    "end": "3410450"
  },
  {
    "text": "Now let's move, and we'll do\none last example on partition, which it turns out has a trivial\nconstant factor approximation",
    "start": "3410450",
    "end": "3419560"
  },
  {
    "text": "scheme. And this obvious\nthing, and we'll get to that in just a second.",
    "start": "3419560",
    "end": "3424650"
  },
  {
    "text": "But what is nice about\npartition is you can actually get a PTAS, right?",
    "start": "3424650",
    "end": "3430280"
  },
  {
    "text": "Polynomial time approximation\nscheme, and FPTAS, fully polynomial time\napproximation scheme,",
    "start": "3430280",
    "end": "3436640"
  },
  {
    "text": "that essentially give you with\nhigher and higher run times.",
    "start": "3436640",
    "end": "3442420"
  },
  {
    "text": "They're going to\ngive you solutions that are closer and\ncloser to optimal, right? If you want to do the\nFPTAS, we'll do the PTAS.",
    "start": "3442420",
    "end": "3450780"
  },
  {
    "text": "So partition is a trivial\nlittle problem to define. It's just you have\na set, and you",
    "start": "3450780",
    "end": "3456500"
  },
  {
    "text": "want to partition it into two\nsets such that they're not unbalanced.",
    "start": "3456500",
    "end": "3462140"
  },
  {
    "text": "So your cost is the imbalance\nbetween the two sets.",
    "start": "3462140",
    "end": "3467900"
  },
  {
    "text": "And you want to\nminimize that cost. You'd love to have two sets that\nare exactly the same weight.",
    "start": "3467900",
    "end": "3473500"
  },
  {
    "text": "But if one of them is extremely\nunbalanced with respect",
    "start": "3473500",
    "end": "3478610"
  },
  {
    "text": "to the other, then it's bad. Either way. So, here we go with partition.",
    "start": "3478610",
    "end": "3483625"
  },
  {
    "start": "3483625",
    "end": "3490810"
  },
  {
    "text": "Set S of n items with\nweights S1 through Sn,",
    "start": "3490810",
    "end": "3506700"
  },
  {
    "text": "assume S1 greater than S2, Sn,\nwithout loss of generality.",
    "start": "3506700",
    "end": "3515804"
  },
  {
    "text": "So this is just\nan ordering thing. I mean, obviously,\nthere's some order. I'm not even claiming\nuniqueness here.",
    "start": "3515804",
    "end": "3520960"
  },
  {
    "text": "I'm just saying just assume\nthat this is the order. The analysis is much\nbetter if you do this--",
    "start": "3520960",
    "end": "3526910"
  },
  {
    "text": "if you make this assumption. And I want to\npartition into A and B",
    "start": "3526910",
    "end": "3537950"
  },
  {
    "text": "to minimize max of\nsigma I belongs to A. Si",
    "start": "3537950",
    "end": "3550839"
  },
  {
    "text": "sigma I belongs to B Si. And this is the weight of A.\nAnd this is the weight of B.",
    "start": "3550840",
    "end": "3565140"
  },
  {
    "text": "And so there's only\nso much you can do. If you have 2L equals sigma\nI equals 1 through n Si--",
    "start": "3565140",
    "end": "3578430"
  },
  {
    "text": "so I'm just calling that 2L--\nthe sum of all the weights. Then my optimum\nsolution is what?",
    "start": "3578430",
    "end": "3587070"
  },
  {
    "text": "What is the lower bound\non the optimum solution? If it's 2L?",
    "start": "3587070",
    "end": "3593140"
  },
  {
    "text": "What's the trivial lower bound? Just L, right? So I could have L\nhere and L there.",
    "start": "3593140",
    "end": "3599480"
  },
  {
    "text": "And if I had 2L here\nand 0 here, then oh!",
    "start": "3599480",
    "end": "3606459"
  },
  {
    "text": "That's right. I want to minimize. Remember, don't-- maybe\nthat's what threw you off. It threw me off right here.",
    "start": "3606459",
    "end": "3611650"
  },
  {
    "text": "I see a max here, and\nI got a little worried. But I want to minimize\nthe maximum of these two quantities, OK?",
    "start": "3611650",
    "end": "3618339"
  },
  {
    "text": "And so the best I could\ndo is to keep them equal. And if I get L for\nboth of them, that",
    "start": "3618340",
    "end": "3624470"
  },
  {
    "text": "would minimize the maximum\nof those two quantities. If I had 2L and 0, then the\nmaximum of those two quantities",
    "start": "3624470",
    "end": "3630160"
  },
  {
    "text": "is 2L, and obviously I\nhaven't done any minimization. So now you see why there's\na trivial optimum solution",
    "start": "3630160",
    "end": "3642710"
  },
  {
    "text": "is greater than or\nequal to L. Right? And now you see why there's\na trivial two approximation",
    "start": "3642710",
    "end": "3650070"
  },
  {
    "text": "algorithm. Because the worst I\ncould do is 2L, right? I could dump all of them\non one side, constant time,",
    "start": "3650070",
    "end": "3657609"
  },
  {
    "text": "and the other one is 0. And my cost is 2L. So I'm within a factor of 2\nin this problem trivially.",
    "start": "3657610",
    "end": "3664819"
  },
  {
    "text": "So, unfortunately that's not\nthe end of the lecture, OK?",
    "start": "3664820",
    "end": "3670000"
  },
  {
    "text": "So, we've got to do better. I mean, clearly,\nthere's more here. You'd like to get much closer.",
    "start": "3670000",
    "end": "3675589"
  },
  {
    "text": "This is a different\nkind of problem. And it would be wonderful if\nwe could get within epsilon. Right? I'm within 1%.",
    "start": "3675590",
    "end": "3681040"
  },
  {
    "text": "How long does it take me? I'm within 0.01%, guaranteed. How long does it take me? Right? That's what an approximation\nscheme is, as opposed",
    "start": "3681040",
    "end": "3688470"
  },
  {
    "text": "to just a plain algorithm. So if you're actually going\nto talk about epsilon here,",
    "start": "3688470",
    "end": "3695070"
  },
  {
    "text": "and we're just doing a PTAS. So we're going to see something\nthat is not polynomial in 1",
    "start": "3695070",
    "end": "3702819"
  },
  {
    "text": "over epsilon. It's polynomial in n. But not polynomial\nin 1 over epsilon.",
    "start": "3702820",
    "end": "3709480"
  },
  {
    "text": "But there's an FPTAS\nwith this problem that you're not responsible for. ",
    "start": "3709480",
    "end": "3720880"
  },
  {
    "text": "So this is going to be an\ninteresting algorithm simply because we now have to do\nsomething with epsilon.",
    "start": "3720880",
    "end": "3726390"
  },
  {
    "text": "It's going to have\nan extra input. It's not going to be the\nsimple heuristic, where I'm going to do maximum degree\nor maximum number of elements",
    "start": "3726390",
    "end": "3732239"
  },
  {
    "text": "or anything like that. I want to take this epsilon and\nactually do something with it. All right? So how does this work?",
    "start": "3732239",
    "end": "3739099"
  },
  {
    "text": "Well, basically what happens in\nPTAS's, or in a bunch of them,",
    "start": "3739100",
    "end": "3745430"
  },
  {
    "text": "is that you essentially do\nan exponential amount of work given a particular epsilon to\nget a partial optimum solution.",
    "start": "3745430",
    "end": "3756099"
  },
  {
    "text": "So you can think of epsilon\nas essentially being 1 divided",
    "start": "3756100",
    "end": "3763610"
  },
  {
    "text": "by m plus 1, where\nm is some quantity. And as m grows, the\ncomplexity of your algorithm",
    "start": "3763610",
    "end": "3771540"
  },
  {
    "text": "is going to grow. But obviously, as\nm grows, you're getting a tighter\nand tighter epsilon.",
    "start": "3771540",
    "end": "3777650"
  },
  {
    "text": "You're getting guaranteed closer\nand closer to your optimum. And so we're going\nto have two phases",
    "start": "3777650",
    "end": "3783470"
  },
  {
    "text": "here in this particular\napproximation scheme. The first phase is find an\noptimal partition, A prime, B",
    "start": "3783470",
    "end": "3799730"
  },
  {
    "text": "prime, of S1 through Sm.",
    "start": "3799730",
    "end": "3806030"
  },
  {
    "text": "And we're just going to assume\nthat this exhaustive search, which looks at all possible\nsubsets, and picks the best",
    "start": "3806030",
    "end": "3813930"
  },
  {
    "text": "one. OK? And how many subsets are\nthere for a set of size m?",
    "start": "3813930",
    "end": "3820690"
  },
  {
    "text": "It's 2 raised to m. So this is going to be\nan exponential order, 2 raised to m algorithm.",
    "start": "3820690",
    "end": "3826950"
  },
  {
    "text": "OK? I'm just going to find\nthe optimum partition through exhaustive search for m.",
    "start": "3826950",
    "end": "3832780"
  },
  {
    "text": "Right? m is less than n. ",
    "start": "3832780",
    "end": "3839577"
  },
  {
    "text": "So I'm picking something\nthat's a smaller problem. I'm going to seed this. So, the way this\nscheme works is, I'm seeding my\nactual algorithm--",
    "start": "3839577",
    "end": "3847760"
  },
  {
    "text": "my actual heuristic-- with\nan initial partial solution.",
    "start": "3847760",
    "end": "3853390"
  },
  {
    "text": "And depending on how much\nwork I do to create the seed,",
    "start": "3853390",
    "end": "3859615"
  },
  {
    "text": "I'm going to end up\nhaving higher complexity. And obviously that's a function\nof small m, or 1 over epsilon.",
    "start": "3859615",
    "end": "3867990"
  },
  {
    "text": "And so this takes-- this optimal\ntakes order to raise to m time.",
    "start": "3867990",
    "end": "3875460"
  },
  {
    "text": "And you can think\nof that as order 2 raised to 1 over epsilon.",
    "start": "3875460",
    "end": "3882420"
  },
  {
    "text": "And so that's why it's a\nPTAS, and not an FPTAS. OK?",
    "start": "3882420",
    "end": "3888450"
  },
  {
    "text": "So this is PTAS. ",
    "start": "3888450",
    "end": "3896756"
  },
  {
    "text": "What else do we need to do? Well, I don't actually\nhave a solution yet. Because if m is really\nsmall-- and by the way,",
    "start": "3896756",
    "end": "3902520"
  },
  {
    "text": "m can be 0 as well. Right? Epsilon would then be\nat 2 approximation,",
    "start": "3902520",
    "end": "3909460"
  },
  {
    "text": "1 divided by-- this\nwould be one half. And so 1 over epsilon is 2.",
    "start": "3909460",
    "end": "3914710"
  },
  {
    "text": "So then you've got\nyour trivial algorithm that we had, the 2\napproximation scheme. So that makes sense?",
    "start": "3914710",
    "end": "3921890"
  },
  {
    "text": "So the second phase\nis you're going to start with your seed\ncorresponding to A and B.",
    "start": "3921890",
    "end": "3931460"
  },
  {
    "text": "You're going to set them\nto A prime and B prime. And what I'm going to do is,\nfor I equals m plus 1 to n,",
    "start": "3931460",
    "end": "3942310"
  },
  {
    "text": "if w(a) less than\nor equal to w(b),",
    "start": "3942310",
    "end": "3952670"
  },
  {
    "text": "A equals A union I--\nrunning out of room-- else",
    "start": "3952670",
    "end": "3962540"
  },
  {
    "text": "B equals B union I. OK?",
    "start": "3962540",
    "end": "3970750"
  },
  {
    "text": "So it's not that hard\nto see, hopefully. All I'm doing here is, I'm just\ngoing in a very greedy way.",
    "start": "3970750",
    "end": "3978130"
  },
  {
    "text": "I got my initial A\nprime and B prime. I set them to A and\nB. And I say, oh, I",
    "start": "3978130",
    "end": "3983420"
  },
  {
    "text": "got this element here. Which one is bigger? This one is bigger? I'm going to put the\nelement over here. And then I look at it again.",
    "start": "3983420",
    "end": "3989500"
  },
  {
    "text": "I got another element. Which one is bigger? And I go this way, that way. That's pretty much it.",
    "start": "3989500",
    "end": "3994760"
  },
  {
    "text": "So, again, all of\nthese algorithms are really straightforward. The interesting part's--\nthe fun part's-- in showing",
    "start": "3994760",
    "end": "4002660"
  },
  {
    "text": "the approximation guarantee. So we're good here?",
    "start": "4002660",
    "end": "4008610"
  },
  {
    "text": "Yup? All right. So back to analysis.",
    "start": "4008610",
    "end": "4014090"
  },
  {
    "text": "One last time. ",
    "start": "4014090",
    "end": "4020210"
  },
  {
    "text": "So, let's see.  We want to show that\na prox partition-- ah,",
    "start": "4020210",
    "end": "4033030"
  },
  {
    "text": "you know how to spell\npartition-- is PTAS. ",
    "start": "4033030",
    "end": "4038609"
  },
  {
    "text": "I guess I don't, but you do.  Let's assume that w(a)\nis greater than or equal",
    "start": "4038610",
    "end": "4047930"
  },
  {
    "text": "to w(b) to end with. Right? So I'm just saying,\nat the end here,",
    "start": "4047930",
    "end": "4054030"
  },
  {
    "text": "I'm just marking the one\nthat was larger that came out of the max as A. Right? Without loss of generality.",
    "start": "4054030",
    "end": "4060054"
  },
  {
    "text": "Just to make things\neasier, I don't want to keep interchanging things. So our approximation ratio\nis w(a) divided by L, right?",
    "start": "4060054",
    "end": "4073180"
  },
  {
    "text": "w(a) could at best be L if I got\na perfect partition, perfectly",
    "start": "4073180",
    "end": "4078220"
  },
  {
    "text": "balanced. But it could be a\nlittle bit more. And that's my\napproximation ratio, OK?",
    "start": "4078220",
    "end": "4083660"
  },
  {
    "text": "So I need to now figure\nout how the approximation ratio reflects on the run\ntime, and is related to m",
    "start": "4083660",
    "end": "4093960"
  },
  {
    "text": "and, therefore, epsilon. All right? So what I'm going\nto do here is, I'm",
    "start": "4093960",
    "end": "4099469"
  },
  {
    "text": "going to look at a point in\ntime where I have A and B--",
    "start": "4099470",
    "end": "4111149"
  },
  {
    "text": "and remember that\nw(a) is defined to be greater than w(b). But here, I'm\nlooking at some point",
    "start": "4111149",
    "end": "4118880"
  },
  {
    "text": "in time, which is not\nnecessarily at the very end",
    "start": "4118880",
    "end": "4125139"
  },
  {
    "text": "here. It could be. But you can think\nof this as being, I'm just going to say\nB or intermediate B.",
    "start": "4125140",
    "end": "4135000"
  },
  {
    "text": "And this won't matter too much. But I'm just being a little\nbit of a stickler here.",
    "start": "4135000",
    "end": "4142189"
  },
  {
    "text": "I'll explain why I said\nthat in just a minute. But the point is, I\nhave a situation where",
    "start": "4142189",
    "end": "4150259"
  },
  {
    "text": "I know that w(a) is\ngreater than w(b) or greater than or equal to\nw(b) because I assumed it. That's how I marked it.",
    "start": "4150260",
    "end": "4155939"
  },
  {
    "text": "And I'm going to look at k is\nthe last element added to A.",
    "start": "4155939",
    "end": "4172450"
  },
  {
    "text": "It's been added. Now this could have been\nadded in the first phase",
    "start": "4172450",
    "end": "4183859"
  },
  {
    "text": "or the second phase. It's quite possible\nthat for a given m,",
    "start": "4183859",
    "end": "4190560"
  },
  {
    "text": "that if it's large, for example,\nthat A prime that you end up",
    "start": "4190560",
    "end": "4197080"
  },
  {
    "text": "with is your A to\nbegin with here, and that you never\nexecute this statement OK?",
    "start": "4197080",
    "end": "4205280"
  },
  {
    "text": "It's quite possible, right? You got your initial seed\nand never added to it.",
    "start": "4205280",
    "end": "4212763"
  },
  {
    "text": "And that was it. Because your m was large,\nfor example, right? So what I'm saying here\nis, k is the last element",
    "start": "4212764",
    "end": "4221090"
  },
  {
    "text": "added to A. OK? So there's clearly\na last element. I'm just marking that.",
    "start": "4221090",
    "end": "4226100"
  },
  {
    "text": "And we know that A is\ngreater than or equal to B. Now it may be true that if\nI'm looking at the snapshot",
    "start": "4226100",
    "end": "4232360"
  },
  {
    "text": "when just after I add\nthe k-th element to A, I may not be done yet, in terms\nof I still have a few elements.",
    "start": "4232360",
    "end": "4240199"
  },
  {
    "text": "And I may be adding\nelements to B. But regardless,\ngiven my definition,",
    "start": "4240200",
    "end": "4245550"
  },
  {
    "text": "I know that the rate of B\nis less than the rate of A. Because even though the\nlast element overall",
    "start": "4245550",
    "end": "4252870"
  },
  {
    "text": "may be added to B,\nw(b) is less than w(a),",
    "start": "4252870",
    "end": "4258490"
  },
  {
    "text": "and I'm only looking at the\nlast element added to A here. OK?",
    "start": "4258490",
    "end": "4264570"
  },
  {
    "text": "So why all of this skulduggery?",
    "start": "4264570",
    "end": "4270090"
  },
  {
    "text": "Well, there's a method\nhere to the madness.",
    "start": "4270090",
    "end": "4276300"
  },
  {
    "text": "We're going to analyze\nwhat possibly happens in the first phase\nand the second phase,",
    "start": "4276300",
    "end": "4282679"
  },
  {
    "text": "and get our approximation ratio.",
    "start": "4282680",
    "end": "4288768"
  },
  {
    "text": "Shouldn't take too long. ",
    "start": "4288768",
    "end": "4299450"
  },
  {
    "text": "So there's two cases here\nthat we need to analyze. The first one is easy. The second one is a\nlittle more involved.",
    "start": "4299450",
    "end": "4305250"
  },
  {
    "text": "I'm going to now assume\nthat k was the last element and was added in\nthe first phase, OK?",
    "start": "4305250",
    "end": "4313620"
  },
  {
    "text": "If k is added to\nA, what can I say?",
    "start": "4313620",
    "end": "4327840"
  },
  {
    "text": "If k was added in\nthe first phase to A, and that's the last element\nadded throughout the algorithm,",
    "start": "4327840",
    "end": "4337440"
  },
  {
    "text": "by the time you get a\npartition, what can you say? ",
    "start": "4337440",
    "end": "4342719"
  },
  {
    "text": "What can you say\nabout the solution? What strong statement can\nyou make about the solution? ",
    "start": "4342720",
    "end": "4349960"
  },
  {
    "text": "What's the only interesting\nstrong statement that you can make\nabout a solution?",
    "start": "4349960",
    "end": "4355770"
  },
  {
    "text": "So I got to A. Remember\nwhat the first phase is. What's the first phase?",
    "start": "4355770",
    "end": "4362240"
  },
  {
    "text": "Well, it's optimal, right? So, after that,\nwhat happened to A?",
    "start": "4362240",
    "end": "4369120"
  },
  {
    "text": "Well it didn't change. Right? So, what you got is optimum.",
    "start": "4369120",
    "end": "4374237"
  },
  {
    "text": "Right? Because w(a) was defined to be\ngreater than or equal to w(b). w(a) was optimum for the\nsmaller problem, whatever m was.",
    "start": "4374237",
    "end": "4381460"
  },
  {
    "text": "You never added\nanything else to it. So you're done. It's optimum. So in this case, your\napproximation ratio",
    "start": "4381460",
    "end": "4387245"
  },
  {
    "text": "is 1 because you got the\noptimum solution, right? So if k is added to\nA in the first place,",
    "start": "4387245",
    "end": "4393310"
  },
  {
    "text": "this means A equals A prime.",
    "start": "4393310",
    "end": "4399560"
  },
  {
    "text": "We have an optimal partition.",
    "start": "4399560",
    "end": "4404875"
  },
  {
    "text": " Since we can't do\nbetter than w(a) prime",
    "start": "4404875",
    "end": "4423650"
  },
  {
    "text": "when we have n\ngreater than m items.",
    "start": "4423650",
    "end": "4431590"
  },
  {
    "text": "And we know w(a) prime is\noptimal for the m items.",
    "start": "4431590",
    "end": "4440395"
  },
  {
    "text": " OK? So that's cool.",
    "start": "4440395",
    "end": "4447000"
  },
  {
    "text": "That's good. So we got an approximation\nratio of 1 there.",
    "start": "4447000",
    "end": "4452640"
  },
  {
    "text": "And remember that, this is not\ntaking overall exponential time necessarily.",
    "start": "4452640",
    "end": "4458480"
  },
  {
    "text": "It's just a case where I've\npicked some arbitrary m, and it happens to be the\ncase that A equals A prime",
    "start": "4458480",
    "end": "4467140"
  },
  {
    "text": "at the end of the algorithm. So I am taking exponential\ntime in m-- m as in Mary--",
    "start": "4467140",
    "end": "4474200"
  },
  {
    "text": "but I'm not taking\nexponential time in n-- right? n as in Nancy.",
    "start": "4474200",
    "end": "4481289"
  },
  {
    "text": "So the second part is where the\napproximation ratio comes in.",
    "start": "4481290",
    "end": "4487050"
  },
  {
    "text": "k is added to A in\nthe second phase.",
    "start": "4487050",
    "end": "4495105"
  },
  {
    "start": "4495105",
    "end": "4501092"
  },
  {
    "text": "So here, what we're\ngoing to do is, we're going to say we know\nw(a) minus Sk is less than",
    "start": "4501092",
    "end": "4509389"
  },
  {
    "text": "or equal to w(b). This is the second phase\nwe're talking about here.",
    "start": "4509390",
    "end": "4514640"
  },
  {
    "text": "The only reason\nSk was added to A was because you decided that A\nwas the side that was smaller,",
    "start": "4514640",
    "end": "4524060"
  },
  {
    "text": "right, or perhaps equal. So that's the reason\nyou added into it. So you know that w(a) minus\nSk is less than or equal",
    "start": "4524060",
    "end": "4530620"
  },
  {
    "text": "to w(b) at that time. So think of A and B here\nas being variables that",
    "start": "4530620",
    "end": "4536783"
  },
  {
    "text": "are obviously changing, right? But what I'm saying\nhere is, even",
    "start": "4536783",
    "end": "4544350"
  },
  {
    "text": "if you look-- this is the\nalgorithm where A and B, you constantly look at them\nand decide which way to go.",
    "start": "4544350",
    "end": "4549600"
  },
  {
    "text": "But if you look\nat the last step, then you look at\nthe final values.",
    "start": "4549600",
    "end": "4555830"
  },
  {
    "text": "Then you could certainly\nmake the statement for those final values,\nthat the w(a), which",
    "start": "4555830",
    "end": "4561520"
  },
  {
    "text": "is the resultant value, minus\nSk, should have been less than or equal to w(b). And you had a smaller\nw(a) to begin with.",
    "start": "4561520",
    "end": "4570560"
  },
  {
    "text": "And you added Sk to it. And that happened\nin the second phase. OK?",
    "start": "4570560",
    "end": "4576540"
  },
  {
    "text": "So this is why k was added. This is why k was added to A.",
    "start": "4576540",
    "end": "4587750"
  },
  {
    "text": "I want to be a\nlittle careful here given that we're overloading\nA and B without trying to point out what each of these\nstatements actually means.",
    "start": "4587750",
    "end": "4595480"
  },
  {
    "text": "And ask questions\nif you're confused.",
    "start": "4595480",
    "end": "4600770"
  },
  {
    "text": "I know that w(a)\nminus Sk is less than or equal to 2L minus w(a).",
    "start": "4600770",
    "end": "4608956"
  },
  {
    "text": "That's just a substitution. Because w(a) plus\nw(b) equals 2L. ",
    "start": "4608956",
    "end": "4619739"
  },
  {
    "text": "And then, last little\ntrick, again it's algebra.",
    "start": "4619740",
    "end": "4625290"
  },
  {
    "text": "Nothing profound here. We have our assumption that\nwe ordered these things.",
    "start": "4625290",
    "end": "4631329"
  },
  {
    "text": "So you had S1 through--\nSn, excuse me. The whole thing was ordered.",
    "start": "4631330",
    "end": "4637040"
  },
  {
    "text": "And so we can say that\nS1, S2, all the way to Sm,",
    "start": "4637040",
    "end": "4647750"
  },
  {
    "text": "is greater than or equal to Sk. We are actually\ndoing this in order. We are taking the\nbigger elements",
    "start": "4647750",
    "end": "4654440"
  },
  {
    "text": "and then deciding where they go. So we sorted those\nthings initially. And so what we end up\nwith when we look at Sk,",
    "start": "4654440",
    "end": "4661830"
  },
  {
    "text": "we have taken care\nof values prior to Sk that are all greater\nthan or equal to Sk.",
    "start": "4661830",
    "end": "4667490"
  },
  {
    "text": "Right? That's, again, using\nour initial assumption. So what that means\nis 2L is greater",
    "start": "4667490",
    "end": "4676340"
  },
  {
    "text": "than or equal to m plus 1 Sk\nsince k is greater than m.",
    "start": "4676340",
    "end": "4685949"
  },
  {
    "text": "Again, this is not\nparticularly tight. Because m could be really\npretty small in relation to n.",
    "start": "4685950",
    "end": "4692289"
  },
  {
    "text": "But I do know that I\ncan make the statement that since the values\nare decreasing,",
    "start": "4692289",
    "end": "4697980"
  },
  {
    "text": "that 2L, which is the sum of\nall of those, is greater than or equal to m plus 1 times\nSk, regardless of what m is.",
    "start": "4697980",
    "end": "4705510"
  },
  {
    "text": "Right? And so, that's pretty much it. Once you do that, you have\nyour approximation ratio.",
    "start": "4705510",
    "end": "4714640"
  },
  {
    "text": "Let's leave that up there\nbecause that's the algorithm. Finish this off with\na little algebra.",
    "start": "4714640",
    "end": "4722664"
  },
  {
    "start": "4722664",
    "end": "4732050"
  },
  {
    "text": "So w(a) divided by L is less\nthan or equal to L plus Sk",
    "start": "4732050",
    "end": "4739440"
  },
  {
    "text": "divided by 2, divided by L.\nI'm basically substituting. I have this and I have that.",
    "start": "4739440",
    "end": "4745900"
  },
  {
    "text": "And I'm playing around with it. And I got 1 plus\nSk divided by-- 1",
    "start": "4745900",
    "end": "4756929"
  },
  {
    "text": "plus Sk divided by 2L, which\nis-- now this I could say",
    "start": "4756930",
    "end": "4763890"
  },
  {
    "text": "is equal. That's simply equal. This, I have a less\nthan or equal to.",
    "start": "4763890",
    "end": "4769140"
  },
  {
    "text": "And then I can go less\nthan or equal to 1 plus Sk divided by m plus 1 Sk.",
    "start": "4769140",
    "end": "4777830"
  },
  {
    "text": "And then I got 1 plus\n1 divided by m plus 1,",
    "start": "4777830",
    "end": "4784340"
  },
  {
    "text": "which is, of course,\n1 plus epsilon. So all I did here\nwas use this fact",
    "start": "4784340",
    "end": "4792470"
  },
  {
    "text": "and essentially relate 2L to Sk. And once I could\nrelate 2L to Sk,",
    "start": "4792470",
    "end": "4798250"
  },
  {
    "text": "substituting for Sk in here, I\nended up with the approximation",
    "start": "4798250",
    "end": "4807880"
  },
  {
    "text": "ratio that I want, w(a) over\nL, is L plus Sk divided by 2. That simply comes from here.",
    "start": "4807880",
    "end": "4815190"
  },
  {
    "text": "And plug that in,\ndivided by L. And then I have Sk divided by 2L.",
    "start": "4815190",
    "end": "4821370"
  },
  {
    "text": "And then this part\nhere, 2L is going to get substituted by\nm plus 1 Sk and voila.",
    "start": "4821370",
    "end": "4829580"
  },
  {
    "text": "I'm over here. OK? So the story behind\nthis particular problem",
    "start": "4829580",
    "end": "4837870"
  },
  {
    "text": "was it was in the quiz. And Eric, I guess took the quiz. Did you actually take the quiz?",
    "start": "4837870",
    "end": "4844010"
  },
  {
    "text": "Or edit the quiz? And he says, this\nproblem is impossible.",
    "start": "4844010",
    "end": "4849330"
  },
  {
    "text": "It was a problem. He said, this problem\nis impossible. I had to Google it to\nfind out the answer.",
    "start": "4849330",
    "end": "4855090"
  },
  {
    "text": "Or something like that. And I said, well, I'm going\nto give the answer in lecture, right? So there you go.",
    "start": "4855090",
    "end": "4860840"
  },
  {
    "text": "So remember this. Write it down. Four points for coming\nto lecture today. See you guys next time.",
    "start": "4860840",
    "end": "4867790"
  }
]