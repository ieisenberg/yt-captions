[
  {
    "start": "0",
    "end": "500"
  },
  {
    "text": "In the last lecture we\ncompleted the design",
    "start": "500",
    "end": "2380"
  },
  {
    "text": "of the Beta, our\nreduced-instruction-set",
    "start": "2380",
    "end": "4640"
  },
  {
    "text": "computer.",
    "start": "4640",
    "end": "5899"
  },
  {
    "text": "The simple organization\nof the Beta ISA",
    "start": "5900",
    "end": "8410"
  },
  {
    "text": "meant that there was\na lot commonality",
    "start": "8410",
    "end": "10920"
  },
  {
    "text": "in the circuity needed to\nimplement the instructions.",
    "start": "10920",
    "end": "14000"
  },
  {
    "text": "The final design has a\nfew main building blocks",
    "start": "14000",
    "end": "16730"
  },
  {
    "text": "with MUX steering\nlogic to select",
    "start": "16730",
    "end": "18750"
  },
  {
    "text": "input values as appropriate.",
    "start": "18750",
    "end": "22030"
  },
  {
    "text": "If we were to count MOSFETs and\nthink about propagation delays,",
    "start": "22030",
    "end": "25690"
  },
  {
    "text": "we’d quickly determine that our\n3-port main memory (shown here",
    "start": "25690",
    "end": "29770"
  },
  {
    "text": "as the two yellow components)\nwas the most costly component",
    "start": "29770",
    "end": "33470"
  },
  {
    "text": "both in terms of space and\npercentage of the cycle time",
    "start": "33470",
    "end": "36180"
  },
  {
    "text": "required by the memory accesses.",
    "start": "36180",
    "end": "38890"
  },
  {
    "text": "So in many ways, we really\nhave a “memory machine” instead",
    "start": "38890",
    "end": "42130"
  },
  {
    "text": "of a “computing machine”.",
    "start": "42130",
    "end": "44590"
  },
  {
    "text": "The execution of\nevery instruction",
    "start": "44590",
    "end": "46510"
  },
  {
    "text": "starts by fetching the\ninstruction from main memory.",
    "start": "46510",
    "end": "49899"
  },
  {
    "text": "And ultimately all the\ndata processed by the CPU",
    "start": "49900",
    "end": "52790"
  },
  {
    "text": "is loaded from or\nstored to main memory.",
    "start": "52790",
    "end": "56360"
  },
  {
    "text": "A very few frequently-used\nvariable values can be kept",
    "start": "56360",
    "end": "59500"
  },
  {
    "text": "in the CPU’s register file,\nbut most interesting programs",
    "start": "59500",
    "end": "63620"
  },
  {
    "text": "manipulate *much* more data\nthan can be accommodated",
    "start": "63620",
    "end": "66490"
  },
  {
    "text": "by the storage available as\npart of the CPU datapath.",
    "start": "66490",
    "end": "71080"
  },
  {
    "text": "In fact, the performance of\nmost modern computers is limited",
    "start": "71080",
    "end": "74540"
  },
  {
    "text": "by the bandwidth,\ni.e., bytes/second,",
    "start": "74540",
    "end": "77530"
  },
  {
    "text": "of the connection between\nthe CPU and main memory,",
    "start": "77530",
    "end": "81030"
  },
  {
    "text": "the so-called\n“memory bottleneck”.",
    "start": "81030",
    "end": "84049"
  },
  {
    "text": "The goal of this\nlecture is to understand",
    "start": "84050",
    "end": "86150"
  },
  {
    "text": "the nature of the bottleneck and\nto see if there architectural",
    "start": "86150",
    "end": "89250"
  },
  {
    "text": "improvements we might make\nto minimize the problem as",
    "start": "89250",
    "end": "92260"
  },
  {
    "text": "much as possible.",
    "start": "92260",
    "end": "94670"
  },
  {
    "text": "We have a number of memory\ntechnologies at our disposal,",
    "start": "94670",
    "end": "97500"
  },
  {
    "text": "varying widely in their\ncapacity, latency, bandwidth,",
    "start": "97500",
    "end": "101190"
  },
  {
    "text": "energy efficiency\nand their cost.",
    "start": "101190",
    "end": "104270"
  },
  {
    "text": "Not surprisingly,\nwe find that each",
    "start": "104270",
    "end": "106049"
  },
  {
    "text": "is useful for\ndifferent applications",
    "start": "106050",
    "end": "107920"
  },
  {
    "text": "in our overall\nsystem architecture.",
    "start": "107920",
    "end": "110860"
  },
  {
    "text": "Our registers are built\nfrom sequential logic",
    "start": "110860",
    "end": "113020"
  },
  {
    "text": "and provide very low\nlatency access (20ps or so)",
    "start": "113020",
    "end": "116930"
  },
  {
    "text": "to at most a few\nthousands of bits of data.",
    "start": "116930",
    "end": "121040"
  },
  {
    "text": "Static and dynamic memories,\nwhich we’ll discuss further",
    "start": "121040",
    "end": "123810"
  },
  {
    "text": "in the coming slides, offer\nlarger capacities at the cost",
    "start": "123810",
    "end": "127180"
  },
  {
    "text": "of longer access latencies.",
    "start": "127180",
    "end": "129550"
  },
  {
    "text": "Static random-access\nmemories (SRAMs)",
    "start": "129550",
    "end": "132560"
  },
  {
    "text": "are designed to\nprovide low latencies",
    "start": "132560",
    "end": "135209"
  },
  {
    "text": "(a few nanoseconds at most) to\nmany thousands of locations.",
    "start": "135210",
    "end": "139500"
  },
  {
    "text": "Already we see that more\nlocations means longer access",
    "start": "139500",
    "end": "142990"
  },
  {
    "text": "latencies — this is a\nfundamental size vs.",
    "start": "142990",
    "end": "145820"
  },
  {
    "text": "performance tradeoff of our\ncurrent memory architectures.",
    "start": "145820",
    "end": "150160"
  },
  {
    "text": "The tradeoff comes about because\nincreasing the number of bits",
    "start": "150160",
    "end": "153320"
  },
  {
    "text": "will increase the area needed\nfor the memory circuitry, which",
    "start": "153320",
    "end": "156860"
  },
  {
    "text": "will in turn lead to longer\nsignal lines and slower circuit",
    "start": "156860",
    "end": "160100"
  },
  {
    "text": "performance due to\nincreased capacitive loads.",
    "start": "160100",
    "end": "164670"
  },
  {
    "text": "Dynamic random-access\nmemories (DRAMs)",
    "start": "164670",
    "end": "167380"
  },
  {
    "text": "are optimized for\ncapacity and low cost,",
    "start": "167380",
    "end": "170120"
  },
  {
    "text": "sacrificing access latency.",
    "start": "170120",
    "end": "173159"
  },
  {
    "text": "As we’ll see in this lecture,\nwe’ll use both SRAMs and DRAMs",
    "start": "173160",
    "end": "177070"
  },
  {
    "text": "to build a hybrid memory\nhierarchy that provides low",
    "start": "177070",
    "end": "180570"
  },
  {
    "text": "average latency and high\ncapacity — an attempt to get",
    "start": "180570",
    "end": "184130"
  },
  {
    "text": "the best of both worlds!",
    "start": "184130",
    "end": "186930"
  },
  {
    "text": "Notice that the word “average”\nhas snuck into the performance",
    "start": "186930",
    "end": "189939"
  },
  {
    "text": "claims.",
    "start": "189940",
    "end": "191280"
  },
  {
    "text": "This means that we’ll be relying\non statistical properties",
    "start": "191280",
    "end": "194290"
  },
  {
    "text": "of memory accesses to achieve\nour goals of low latency",
    "start": "194290",
    "end": "197799"
  },
  {
    "text": "and high capacity.",
    "start": "197800",
    "end": "199880"
  },
  {
    "text": "In the worst case, we’ll still\nbe stuck with the capacity",
    "start": "199880",
    "end": "202610"
  },
  {
    "text": "limitations of SRAMs and\nthe long latencies of DRAMs,",
    "start": "202610",
    "end": "206760"
  },
  {
    "text": "but we’ll work hard to ensure\nthat the worst case occurs",
    "start": "206760",
    "end": "209672"
  },
  {
    "text": "infrequently!",
    "start": "209673",
    "end": "210215"
  },
  {
    "start": "210215",
    "end": "213190"
  },
  {
    "text": "Flash memory and\nhard-disk drives",
    "start": "213190",
    "end": "215200"
  },
  {
    "text": "provide non-volatile storage.",
    "start": "215200",
    "end": "217950"
  },
  {
    "text": "“Non-volatile” means that the\nmemory contents are preserved",
    "start": "217950",
    "end": "220879"
  },
  {
    "text": "even when the power\nis turned off.",
    "start": "220880",
    "end": "223520"
  },
  {
    "text": "Hard disks are at the bottom\nof the memory hierarchy,",
    "start": "223520",
    "end": "226130"
  },
  {
    "text": "providing massive amounts\nof long-term storage",
    "start": "226130",
    "end": "228880"
  },
  {
    "text": "for very little cost.",
    "start": "228880",
    "end": "231090"
  },
  {
    "text": "Flash memories, with a 100-fold\nimprovement in access latency,",
    "start": "231090",
    "end": "234640"
  },
  {
    "text": "are often used in concert with\nhard-disk drives in the same",
    "start": "234640",
    "end": "238050"
  },
  {
    "text": "way that SRAMs are used in\nconcert with DRAMs, i.e.,",
    "start": "238050",
    "end": "241950"
  },
  {
    "text": "to provide a hybrid system for\nnon-volatile storage that has",
    "start": "241950",
    "end": "245709"
  },
  {
    "text": "improved latency\n*and* high capacity.",
    "start": "245710",
    "end": "249340"
  },
  {
    "text": "Let’s learn a bit more about\neach of these four memory",
    "start": "249340",
    "end": "251590"
  },
  {
    "text": "technologies, then we’ll\nreturn to the job of building",
    "start": "251590",
    "end": "254709"
  },
  {
    "text": "our memory system.",
    "start": "254710",
    "end": "256720"
  }
]