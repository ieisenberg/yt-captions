[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": " PROFESSOR: All right.",
    "start": "0",
    "end": "5069"
  },
  {
    "text": "Today I think is the\nlast lecture at least for the while about\norigami, and I'm",
    "start": "5070",
    "end": "11280"
  },
  {
    "start": "10000",
    "end": "65000"
  },
  {
    "text": "going to talk about\nwhere I got started thinking about\norganic mathematics. ",
    "start": "11280",
    "end": "21020"
  },
  {
    "text": "The folding cup\nproblem, and this",
    "start": "21020",
    "end": "28270"
  },
  {
    "text": "is sort of motivated\nby a magic trick. The idea is you take\na piece of paper.",
    "start": "28270",
    "end": "34040"
  },
  {
    "text": "You fold it flat. ",
    "start": "34040",
    "end": "40040"
  },
  {
    "text": "You make one complete\nstraight cut. ",
    "start": "40040",
    "end": "49550"
  },
  {
    "text": "You cut along a line.  And you unfold the\npieces, and the question",
    "start": "49550",
    "end": "60080"
  },
  {
    "text": "is what shapes can you\nget by that process. So this is like a magic trick.",
    "start": "60080",
    "end": "66440"
  },
  {
    "start": "65000",
    "end": "130000"
  },
  {
    "text": "I showed you making a\nswan which I have here just for-- to jog your memory.",
    "start": "66440",
    "end": "72400"
  },
  {
    "text": "You have a rectangle paper, and\nyou can see the swan on there and you can see a\nbunch of creases.",
    "start": "72400",
    "end": "78770"
  },
  {
    "text": "You fold along all the\ncreases, not the swan lines, and you end up with all\nthe edges of the swan lying",
    "start": "78770",
    "end": "86620"
  },
  {
    "text": "right along that line. You cut along the line,\nand you get your swan,",
    "start": "86620",
    "end": "96460"
  },
  {
    "text": "as we did before. And you also get the anti-swan. The other piece-- I didn't\nshow that last time.",
    "start": "96460",
    "end": "103089"
  },
  {
    "text": "But it's really--\nit's not like we're making we're not allowed\nto make any extra creases. We really want the swan.",
    "start": "103089",
    "end": "109420"
  },
  {
    "text": "So we cut along exactly\nthe edges of the swan by lining them up onto a line.",
    "start": "109420",
    "end": "114765"
  },
  {
    "text": "So really, you could think\nof this as a magic trick in cutting, but you\ncan also think of it as an origami\nproblem, which is I",
    "start": "114765",
    "end": "120090"
  },
  {
    "text": "want to line up all\nthese edges by folding. How do I do it? And that way it connects to a\nlot origami design problems.",
    "start": "120090",
    "end": "127440"
  },
  {
    "text": "This problem has an old history. It goes back to 1721.",
    "start": "127440",
    "end": "133130"
  },
  {
    "start": "130000",
    "end": "250000"
  },
  {
    "text": "This is the oldest\nreference we know. This is a Japanese puzzle\nbook, Wakoku Chiyekurabe",
    "start": "133130",
    "end": "141120"
  },
  {
    "text": "by Kan Chu Sen. And I think this is\nkind of like-- it's called \"Mathematical\nContests\" is the translation.",
    "start": "141120",
    "end": "147629"
  },
  {
    "text": "And it's sort of\nlike the old version of like these big\nproblem solving sessions",
    "start": "147630",
    "end": "156519"
  },
  {
    "text": "that kids do these days\nto get better at math, and one of the pages\nposes this problem.",
    "start": "156520",
    "end": "163470"
  },
  {
    "text": "I have this Japanese\nemblem shape. Can I make it from\na piece of paper by folding in one straight\ncut, and the answer is yes.",
    "start": "163470",
    "end": "171377"
  },
  {
    "text": "And this is a solution\nif you cheat and look in the back of the book. So I'll let you read\nthat for minute.",
    "start": "171377",
    "end": "178030"
  },
  {
    "text": "[LAUGHS] You're making folds\nalong lines that end up lining up other\nparts of the shape",
    "start": "178030",
    "end": "185370"
  },
  {
    "text": "so that in the end everything\nlies along the line, then you cut along the line. We learned about\nthis a bit later",
    "start": "185370",
    "end": "192920"
  },
  {
    "text": "than the-- we learned about\nthis problem from Martin Gardner originally, and he knew\nabout the magic world.",
    "start": "192920",
    "end": "200410"
  },
  {
    "text": "So Houdini, before he\nwas an escape artist, he was a general magician, and\nin 1922, he wrote or probably",
    "start": "200410",
    "end": "206769"
  },
  {
    "text": "had ghost written this book,\n\"Houdini's Paper Magic\". And one of the pages is about\nfolding, and it says here,",
    "start": "206770",
    "end": "215579"
  },
  {
    "text": "you can take a square\npaper, fold it flat, make one straight cut, and get\na regular five-pointed star.",
    "start": "215580",
    "end": "221060"
  },
  {
    "text": "And that was pretty cool,\nand then other magicians picked it up, in particular\nthis guy Gerald Lowe, who",
    "start": "221060",
    "end": "227289"
  },
  {
    "text": "wrote this book \"Paper Capers\". It's more like a\nvery small book. Magic book. And he could make all\nsorts of different things",
    "start": "227289",
    "end": "233970"
  },
  {
    "text": "and he would incorporate\nthem into magic tricks. And he was primarily\nusing simple folds. He would just fold along\none line at a time,",
    "start": "233970",
    "end": "240910"
  },
  {
    "text": "and make one\nstraight cut, and go to make all these cool patterns.",
    "start": "240910",
    "end": "246500"
  },
  {
    "text": "Like here, I have one\nof his examples redone.",
    "start": "246500",
    "end": "252080"
  },
  {
    "start": "250000",
    "end": "400000"
  },
  {
    "text": "I start from a rectangle,\nI fold, I fold, I fold, I fold-- these are\nall simple folds.",
    "start": "252080",
    "end": "257880"
  },
  {
    "text": "I take my scissors, and I make\none complete straight cut.",
    "start": "257880",
    "end": "264400"
  },
  {
    "text": "And usually when I perform\nthis trick, I say look! I made an isosceles triangle.",
    "start": "264400",
    "end": "272050"
  },
  {
    "text": "Wow! I made five isosceles triangles. Amazing! And then I made\neverything, except the five",
    "start": "272050",
    "end": "279220"
  },
  {
    "text": "isosceles triangles. So you saw that coming. And you could make an\narrangement of five of these",
    "start": "279220",
    "end": "285560"
  },
  {
    "text": "if you want. All that sort of\nvery symmetric stuff is easy to do by simple folds. I'll talk more about\nsimple folds later,",
    "start": "285560",
    "end": "291910"
  },
  {
    "text": "but we were really curious\nabout the general challenge. So this is the-- you can\ndownload this from my web page",
    "start": "291910",
    "end": "299260"
  },
  {
    "text": "if you want to make one. It's pretty-- it's a fun trick.",
    "start": "299260",
    "end": "305110"
  },
  {
    "text": "Good. So I have some more\ninteresting examples. See here I have a\nrectangle folded,",
    "start": "305110",
    "end": "311380"
  },
  {
    "text": "and I make one\ncomplete straight cut. ",
    "start": "311380",
    "end": "324000"
  },
  {
    "text": "And this one has actually\na line of symmetry, so I fold in half\nat the beginning.",
    "start": "324000",
    "end": "329705"
  },
  {
    "text": " So I get an angel fish.",
    "start": "329705",
    "end": "334931"
  },
  {
    "text": "Ooh!  All right, you're not impressed.",
    "start": "334931",
    "end": "340250"
  },
  {
    "text": "Keep going. Here's another one. One straight cut. We could go all day here.",
    "start": "340250",
    "end": "346550"
  },
  {
    "text": "I mean, the point\nof today's lecture is to see how this is done. In general.",
    "start": "346550",
    "end": "352149"
  },
  {
    "text": "Here we have a butterfly. ",
    "start": "352149",
    "end": "357280"
  },
  {
    "text": "All right. You guys are tough\nto impress here. Here we go. This one is deemed thematic.",
    "start": "357280",
    "end": "363639"
  },
  {
    "text": "It's almost October, so\nit's sort of appropriate. We'll one straight cut.",
    "start": "363640",
    "end": "369560"
  },
  {
    "text": "Haven't done this\none for quite awhile. Get tons of pieces, and if I'm\nlucky-- open it up the right",
    "start": "369560",
    "end": "377020"
  },
  {
    "text": "way around. Jack-o-lantern. ",
    "start": "377020",
    "end": "384000"
  },
  {
    "text": "Wow, it's amazing! How is it possible? Obviously you can make\nmany shapes all at once.",
    "start": "384000",
    "end": "389789"
  },
  {
    "text": "That's the general idea here. I'll admit, I cheated\nhere because I wanted kids to be able to fold this.",
    "start": "389790",
    "end": "395039"
  },
  {
    "text": "The outer octagon\nwas cut initially. Yeah, so it's not\nfrom a rectangle.",
    "start": "395040",
    "end": "400556"
  },
  {
    "text": "Just to make it easier\nto fold, but you could do it all at once. And now, the big demo.",
    "start": "400556",
    "end": "407620"
  },
  {
    "text": "In fact, it's so\nbig I think I might want to use the exacto knife. Uh, we'll try with scissors.",
    "start": "407620",
    "end": "415908"
  },
  {
    "text": "Got a lot of layers. Oh, yeah.",
    "start": "415908",
    "end": "421530"
  },
  {
    "text": "This is why I usually\nbring my own scissors. Just checking the other side. ",
    "start": "421530",
    "end": "428930"
  },
  {
    "text": "They're better scissors. That's what's special\nabout my scissors. All right, time for\nthe exacto knife.",
    "start": "428930",
    "end": "434830"
  },
  {
    "text": "Make sure I'm only\ncutting on the boundary between red and white. ",
    "start": "434830",
    "end": "442742"
  },
  {
    "text": "Yeah, my lecture notes. Yeah, who needs those? ",
    "start": "442742",
    "end": "449275"
  },
  {
    "text": "It's flat. ",
    "start": "449275",
    "end": "454292"
  },
  {
    "text": "A little more cutting. ",
    "start": "454292",
    "end": "459592"
  },
  {
    "text": "I believe all the pieces in\nthis case are rectangles. ",
    "start": "459592",
    "end": "464620"
  },
  {
    "text": "Exciting. All right, straight cut, right?",
    "start": "464620",
    "end": "469964"
  },
  {
    "text": "I don't remember which\nway this one opens. ",
    "start": "469964",
    "end": "475324"
  },
  {
    "text": "This should be the MIT logo. This one I encourage\nyou to try at home.",
    "start": "475325",
    "end": "481900"
  },
  {
    "text": "It's pretty crazy. It's definitely a hard folding. ",
    "start": "481900",
    "end": "489130"
  },
  {
    "text": "I'm getting used to it now. All right, so you could\nmake anything is the point. Some are a little more difficult\nbecause they have more layers",
    "start": "489130",
    "end": "497081"
  },
  {
    "text": "and so on. If I made it out of thinner\npaper like some of the math magicians do, it is super easy.",
    "start": "497081",
    "end": "503140"
  },
  {
    "text": "Onion skin paper or something. I think I have some pictures\nof the piece patterns if you want to see\nwhat these look like.",
    "start": "503140",
    "end": "513500"
  },
  {
    "text": "And these are all\navailable for download. You want to impress\nyour friends, go for it.",
    "start": "513500",
    "end": "518640"
  },
  {
    "start": "518640",
    "end": "524914"
  },
  {
    "text": "They all use slightly\ndifferent color codings, but it's mountain or valley. ",
    "start": "524914",
    "end": "530420"
  },
  {
    "text": "And so we want to see\nhow to make these. ",
    "start": "530420",
    "end": "539330"
  },
  {
    "text": "So let me state\nthe theorem first. We have our good friend,\nthe universality result,",
    "start": "539330",
    "end": "547840"
  },
  {
    "start": "540000",
    "end": "650000"
  },
  {
    "text": "which is any set of line\nsegments on your piece of paper",
    "start": "547840",
    "end": "560370"
  },
  {
    "text": "can be-- I'll phrase it as can\nbe aligned by flat folding.",
    "start": "560370",
    "end": "567279"
  },
  {
    "text": " A line means when you\nmake the flat folding,",
    "start": "567280",
    "end": "573710"
  },
  {
    "text": "all the segments come\nonto a common line. Nothing else comes to that\nline, and therefore you",
    "start": "573710",
    "end": "579079"
  },
  {
    "text": "cut a long line, you get\nexactly those line segments. And there are two methods\nfor solving this problem.",
    "start": "579080",
    "end": "587579"
  },
  {
    "text": "The first one is what I call\nstraight skeleton method,",
    "start": "587580",
    "end": "596960"
  },
  {
    "text": "and second one I'll call\nthe disk packing method. ",
    "start": "596960",
    "end": "603560"
  },
  {
    "text": "By slightly different authors. This one was me, my dad, and\nmy advisor, Anna [INAUDIBLE].",
    "start": "603560",
    "end": "608700"
  },
  {
    "text": "This one was Marshall Burn,\nme, David Epstein, Barry Hayes.",
    "start": "608700",
    "end": "614550"
  },
  {
    "text": "This one's slightly\nafter this one. This is sort of my first\ncomputational origami paper. And they're quite different.",
    "start": "614550",
    "end": "623250"
  },
  {
    "text": "I mean at a high level,\nthis one's practical. This one is theoretically\ngood, but impractical.",
    "start": "623250",
    "end": "629205"
  },
  {
    "text": "This one's actually\ntheoretically bad in a few situations\nwhich we will get to, but it works very\nwell almost always.",
    "start": "629205",
    "end": "635930"
  },
  {
    "text": "In a formal sense\nof almost always. This one always works, but\nit's a challenge to fold.",
    "start": "635930",
    "end": "642740"
  },
  {
    "text": "All of the examples\nI showed you are made with the straight\nskeleton method. ",
    "start": "642740",
    "end": "648140"
  },
  {
    "text": "So that's the idea. That's where we're going\nto talk about both of them.",
    "start": "648140",
    "end": "653250"
  },
  {
    "start": "650000",
    "end": "660000"
  },
  {
    "text": "And first, I have a warm\nup-- three warm ups.",
    "start": "653250",
    "end": "659030"
  },
  {
    "text": "Suppose you had a\nsquare paper and you wanted to make a single cut. What folding do I do?",
    "start": "659030",
    "end": "666180"
  },
  {
    "start": "660000",
    "end": "775000"
  },
  {
    "text": "Nothing! Yeah, that was easy. Let's say I have two\nlines I want to make.",
    "start": "666180",
    "end": "673232"
  },
  {
    "text": "What should I do?  Fold between them.",
    "start": "673232",
    "end": "678370"
  },
  {
    "text": "Fold the lines onto each other,\nwhich is angular bisector. If I extend the lines, and\nI bisect the angle there,",
    "start": "678370",
    "end": "689030"
  },
  {
    "text": "then I will fold one\nline to the other. I brought one just to\nbe totally obvious.",
    "start": "689030",
    "end": "694149"
  },
  {
    "text": "You have two lines\nfold along the angular bisector of their extensions. It lines up the lines,\nand nothing else.",
    "start": "694150",
    "end": "700050"
  },
  {
    "text": " OK, a little more exciting.",
    "start": "700050",
    "end": "705505"
  },
  {
    "text": " What if I had a triangle?",
    "start": "705505",
    "end": "713399"
  },
  {
    "text": "How would you line up the edges\nthe triangle and nothing else? Rabbit ear.",
    "start": "713400",
    "end": "718675"
  },
  {
    "text": "Yes.  Rabbit ear is you fold\nalong the three angular",
    "start": "718675",
    "end": "725300"
  },
  {
    "text": "bisectors of the triangle. This is something we talked\nabout in the tree method. This is one of the\nsort of gadgets",
    "start": "725300",
    "end": "731760"
  },
  {
    "text": "we use in one of-- where\nthese were active paths. And we fold along those\nangular bisectors.",
    "start": "731760",
    "end": "738326"
  },
  {
    "text": "Angular bisectors\nintuitively are very good because locally\nthey line up edges. So if I fold along\nall three of them,",
    "start": "738326",
    "end": "744400"
  },
  {
    "text": "and you may know that they\nalways meet at a point, then I kind of line\nup all those edges. If I just fold along\nthose three edges,",
    "start": "744400",
    "end": "750450"
  },
  {
    "text": "it won't be flat foldable. It's like this floppy thing. And so I've added in\nthese perpendicular--",
    "start": "750450",
    "end": "756850"
  },
  {
    "text": "the purple lines--\nto give me my hinges",
    "start": "756850",
    "end": "762050"
  },
  {
    "text": "so I can manipulate these arms. You don't have to\nuse all of them. Then you flatten it,\nand now along this line",
    "start": "762050",
    "end": "768390"
  },
  {
    "text": "are all the black guys. All the black lines. We've got a bunch\nof flat foldings.",
    "start": "768390",
    "end": "774660"
  },
  {
    "text": "All right, so a general idea,\nand in the straight skeleton method, what we are going\nto use are angular bisectors",
    "start": "774660",
    "end": "782899"
  },
  {
    "start": "775000",
    "end": "1380000"
  },
  {
    "text": "and perpendicular folds. Perpendicular folds are also\ngood because locally folds are a reflection\nif you fold flat.",
    "start": "782900",
    "end": "789110"
  },
  {
    "text": "So this line will fold\non top of this line. So perpendiculars are good. Angular bisectors are good.",
    "start": "789110",
    "end": "794540"
  },
  {
    "text": "If you fold along all of them,\nyou should line everything up. That's the intuition,\nand the question",
    "start": "794540",
    "end": "802730"
  },
  {
    "text": "is how do I fold a long\nenough angular bisectors and perpendiculars so that\nit actually folds flat.",
    "start": "802730",
    "end": "809090"
  },
  {
    "text": "And that is the straight\nskeleton, or one way to do that is the\nstraight skeleton. ",
    "start": "809090",
    "end": "824019"
  },
  {
    "text": "And this actually was\ninvented a few years earlier. 95, 96 by a couple of Austrians.",
    "start": "824020",
    "end": "832389"
  },
  {
    "text": "That was in [INAUDIBLE]\nand actually four people. ",
    "start": "832390",
    "end": "839949"
  },
  {
    "text": "So let me write\ndown a definition, and then we will-- I'll\nshow you what it means.",
    "start": "839950",
    "end": "847040"
  },
  {
    "text": "We've seen a thing\nlike this very briefly in the universal\nmolecule, but this is going to be more\ngeneral in some sense.",
    "start": "847040",
    "end": "853945"
  },
  {
    "start": "853945",
    "end": "871660"
  },
  {
    "text": "And actually, why don't\nI put up an image of one while we're defining it.",
    "start": "871660",
    "end": "878430"
  },
  {
    "start": "878430",
    "end": "919764"
  },
  {
    "text": "All right, so it is trajectory\nof the vertices of the desired cut pattern-- that's our input. The graph of edges\nwe want to cut out.",
    "start": "919764",
    "end": "928230"
  },
  {
    "text": "As we simultaneously\nshrink each region. That's every face\noutlined by those cuts.",
    "start": "928230",
    "end": "933490"
  },
  {
    "text": "Keeping edges parallel and a\nuniform perpendicular distance from the original edges.",
    "start": "933490",
    "end": "938760"
  },
  {
    "text": "So, a bit of a mouthful, but\nlet me draw some pictures.",
    "start": "938760",
    "end": "945900"
  },
  {
    "text": "Well, let's maybe\nstart with a triangle. So the idea with\na triangle is you",
    "start": "945900",
    "end": "951329"
  },
  {
    "text": "shrink-- this is really the\nwrong order to do things. ",
    "start": "951330",
    "end": "956637"
  },
  {
    "text": "I want to shrink-- there's\ntwo regions for the triangle. There's the inside\nand the outside. If I shrink the inside, I\nget these parallel lines.",
    "start": "956637",
    "end": "964760"
  },
  {
    "text": "All-- I want all of these\ndistances to be equal. Those are the\nperpendicular distances.",
    "start": "964760",
    "end": "969899"
  },
  {
    "text": "I keep shrinking,\nand at some point I can't shrink anymore\nbecause I get a single point.",
    "start": "969900",
    "end": "975279"
  },
  {
    "text": "The in-center of the triangle. If I watch where did the\nvertices go during that time, it's along angular bisectors.",
    "start": "975280",
    "end": "981450"
  },
  {
    "text": "Hey, our good friends,\nangular bisectors. Now I do the same\nthing on the outside. Shrinking the outside region\nis like expanding the triangle.",
    "start": "981450",
    "end": "990420"
  },
  {
    "text": "As I expand the triangle, the\noutside gets smaller area. So actually, it's\njust the same thing.",
    "start": "990420",
    "end": "997390"
  },
  {
    "text": "I get concentric\ntriangles, and I just keep going along the\nangular bisectors.",
    "start": "997390",
    "end": "1002430"
  },
  {
    "text": "So that's it. It's not going to give us\nthe perpendicular fold. It's just the angular\nbisector parts.",
    "start": "1002430",
    "end": "1007470"
  },
  {
    "text": "Still see a triangle\nin there somewhere.  OK, that's a really\nsimple example,",
    "start": "1007470",
    "end": "1013570"
  },
  {
    "text": "and the only event\nthat happened is that the polygon disappeared. When that happens, you stop\nwith that particular polygon.",
    "start": "1013570",
    "end": "1023950"
  },
  {
    "text": "In general, there are three\nthings that can happen. We call these events.",
    "start": "1023950",
    "end": "1029064"
  },
  {
    "text": " Three interesting. Things.",
    "start": "1029065",
    "end": "1034589"
  },
  {
    "text": "One is that an edge disappears. ",
    "start": "1034589",
    "end": "1041550"
  },
  {
    "text": "So for example, locally, if\nI have a picture like this and I shrink, and I shrink,\nand I shrink, at some point--",
    "start": "1041550",
    "end": "1052500"
  },
  {
    "text": "what's happening is these\nangular bisectors are meeting, and now I lost-- this edge\nshrinks to zero length.",
    "start": "1052500",
    "end": "1060410"
  },
  {
    "text": "So just forget about the edge. Pretend it was never there. Just keeps shrinking now\nwhat is these two edges.",
    "start": "1060410",
    "end": "1065790"
  },
  {
    "text": "And I shrink, and I\nshrink, and I shrink.",
    "start": "1065790",
    "end": "1070900"
  },
  {
    "text": "What happens is, in some\nsense, these vertices merge-- these edges\nmerge, and now I",
    "start": "1070900",
    "end": "1076640"
  },
  {
    "text": "have one guy going\nstraight up there. And what is that edge doing?",
    "start": "1076640",
    "end": "1081710"
  },
  {
    "text": "It's not an angular\nbisector of this or this, but it's an angular bisector\nof the extension of these two",
    "start": "1081710",
    "end": "1087825"
  },
  {
    "text": "lines.  Because if you look at this--\none of these two edges--",
    "start": "1087825",
    "end": "1095950"
  },
  {
    "text": "they are parallel\nto the two original. So if you bisect those\nparallel offsets, it's the same thing as\nbisecting the original edges",
    "start": "1095950",
    "end": "1102810"
  },
  {
    "text": "and extension. So this looks good because\nthese two folds will line up those two edges, or this fold\nwill line up these two edge.",
    "start": "1102810",
    "end": "1110785"
  },
  {
    "text": "This fold will line\nup those two edges. This fold will line\nup these two edges. And we're doing kind\nof extra alignment,",
    "start": "1110785",
    "end": "1116080"
  },
  {
    "text": "but everything looks kosher.  Good.",
    "start": "1116080",
    "end": "1123580"
  },
  {
    "text": "So when an edge disappears,\nyou just forget about it. ",
    "start": "1123580",
    "end": "1130650"
  },
  {
    "text": "All right, forget-- it's\nprobably \"forgedaboutit\"-- something like that.",
    "start": "1130650",
    "end": "1136092"
  },
  {
    "text": "All right. Then we have-- a\nregion can disappear.",
    "start": "1136092",
    "end": "1141825"
  },
  {
    "text": " That's what happened\nwith the triangle.",
    "start": "1141825",
    "end": "1148970"
  },
  {
    "text": "And then again, you\nforget about it. ",
    "start": "1148970",
    "end": "1155307"
  },
  {
    "text": "There may be many regions. You have to keep shrinking\nthe other regions, but when one\ndisappears, you're done.",
    "start": "1155307",
    "end": "1161310"
  },
  {
    "text": "Third thing that can happen\nis that a region splits. ",
    "start": "1161310",
    "end": "1169950"
  },
  {
    "text": "So let's look at an\ninteresting polygon. ",
    "start": "1169950",
    "end": "1176250"
  },
  {
    "text": "This one-- the straight edges.",
    "start": "1176250",
    "end": "1182580"
  },
  {
    "text": "And when I shrink this\nguy-- see, what's happening",
    "start": "1182580",
    "end": "1188130"
  },
  {
    "text": "is this edge is approaching\nthat vertex, and at some point",
    "start": "1188130",
    "end": "1196440"
  },
  {
    "text": "they will meet.  And what we're left with are\ntwo triangles in this case.",
    "start": "1196440",
    "end": "1204120"
  },
  {
    "text": "And generally split\ninto two parts, you just keep\nshrinking the parts. So it's not really like\nyou're stopping at any point.",
    "start": "1204120",
    "end": "1211710"
  },
  {
    "text": "Just the same thing\nover and over. But if you're implementing\nthis on a computer, you really have to\nrealize that happens.",
    "start": "1211710",
    "end": "1217046"
  },
  {
    "text": "Otherwise you'd shrink\nthem beyond each other and it would be self\nintersecting and ugly. But you do the\nobvious thing, which",
    "start": "1217046",
    "end": "1223460"
  },
  {
    "text": "is you cut where they split. And what will happen in this\ncase with straight skeleton is you keep going along\nan angular bisector",
    "start": "1223460",
    "end": "1230910"
  },
  {
    "text": "until that little\ntriangle stops. ",
    "start": "1230910",
    "end": "1240430"
  },
  {
    "text": "One more edge here. So that's what the straight\nskeleton will look like.",
    "start": "1240430",
    "end": "1245600"
  },
  {
    "text": "This edge is an angular bisector\nof this one and this one. This edge is an angular bisector\nof this one and this one.",
    "start": "1245600",
    "end": "1251180"
  },
  {
    "text": "In general, if you\nlook at an edge, and you see what\noriginal edge can I",
    "start": "1251180",
    "end": "1257390"
  },
  {
    "text": "reach without crossing\nanother skeleton edge, those are the two\nthat you bisect. So it's really easy to see.",
    "start": "1257390",
    "end": "1263210"
  },
  {
    "text": "Look at this guy. The only two I can reach\nare this one and this one. I look at this one, the\nonly two I can reach",
    "start": "1263210",
    "end": "1268260"
  },
  {
    "text": "are that one and that one. So it's an angular\nbisector of those two. In fact, in general, if you\nfinish the outside here too,",
    "start": "1268260",
    "end": "1274085"
  },
  {
    "text": "it's the same deal. And then-- yeah,\nall right, enough.",
    "start": "1274085",
    "end": "1279740"
  },
  {
    "text": "Here's a bigger example. Little turtle drawn\non a triangular grid,",
    "start": "1279740",
    "end": "1285179"
  },
  {
    "text": "and you can see there's\nangular bisectors. This is a straight skeleton. This guy, for example,\nbisects this horizontal edge",
    "start": "1285180",
    "end": "1290650"
  },
  {
    "text": "and this horizontal edge has a\nlittle bit of a boundary case we have to think about, but this\nis the right interpretation. ",
    "start": "1290650",
    "end": "1297740"
  },
  {
    "text": "It's like an angle of 180,\nso you bisect it to 90. Other fun features.",
    "start": "1297740",
    "end": "1303124"
  },
  {
    "text": "Here we get a\nlittle bit of action on the outside of the polygon. So far, we haven't seen that. So, like these guys\nmeet, and there",
    "start": "1303124",
    "end": "1310890"
  },
  {
    "text": "is some bigger-- there's a\nbigger turtle here somewhere.",
    "start": "1310890",
    "end": "1316680"
  },
  {
    "text": "It's hard to draw. Anyway, what's\nhappening is this edge",
    "start": "1316680",
    "end": "1321780"
  },
  {
    "text": "is shrinking to zero while this\none is offsetting down this way and this is offsetting\ndown this way.",
    "start": "1321780",
    "end": "1327679"
  },
  {
    "text": "So the new turtle ends\nup being like that.  And so on. ",
    "start": "1327680",
    "end": "1336780"
  },
  {
    "text": "You're shrinking every face. So in general, you have a\nwhole bunch of polygons. Or in general we're\nallowing crazy things",
    "start": "1336780",
    "end": "1344840"
  },
  {
    "text": "like this as this pattern\nof cuts I want to make. Maybe you want to cut your\nsquare into five pieces.",
    "start": "1344840",
    "end": "1351970"
  },
  {
    "text": "I'm going to shrink each of\nthem separately, or in parallel. It doesn't actually matter.",
    "start": "1351970",
    "end": "1357513"
  },
  {
    "text": "So in this case\nthere's just going to be five angular bisectors. In general, there are several\nregions you shrink all of them.",
    "start": "1357514",
    "end": "1364090"
  },
  {
    "text": "A lot of the time we\nthink about polygons, and then there's two\nregions to shrink. And it looks like you're\nexpanding the turtle to go out,",
    "start": "1364090",
    "end": "1370422"
  },
  {
    "text": "but really you're shrinking\nthe outside region. It just happens to be--\nthere's one infinite region that one looks weird.",
    "start": "1370422",
    "end": "1375490"
  },
  {
    "text": " A couple other special\ncases, because I",
    "start": "1375490",
    "end": "1382130"
  },
  {
    "start": "1380000",
    "end": "1490000"
  },
  {
    "text": "want to do any graph\nand not just polygons. You could have something\nthat just terminates.",
    "start": "1382130",
    "end": "1388990"
  },
  {
    "text": "So a degree one vertex only\nhas one [? edge ?] into it. In this case, it's\nnot quite well defined what to do\nbecause you offset this",
    "start": "1388990",
    "end": "1396429"
  },
  {
    "text": "and you offset this,\nbut what happens here? And there it's\nsort of arbitrary. You can do whatever you\nwant, but the simplest thing",
    "start": "1396430",
    "end": "1403136"
  },
  {
    "text": "you can do is to make\na-- imagine that there's a little vertical segment here\nthat happens to be length zero,",
    "start": "1403136",
    "end": "1408740"
  },
  {
    "text": "and it expands into the\nedge of a rectangle.",
    "start": "1408740",
    "end": "1414679"
  },
  {
    "text": "So you end up with these\n245 degree angular bisectors",
    "start": "1414680",
    "end": "1420910"
  },
  {
    "text": "between this vertical edge\nand the horizontal one. But you have some\nflexibility there.",
    "start": "1420910",
    "end": "1427000"
  },
  {
    "text": "You can design it how you want. The other case you can\nhave is a degree 0 vertex. There are no edges here.",
    "start": "1427000",
    "end": "1433811"
  },
  {
    "text": "This is a little funny\nin the way I defined it. I just said I wanted\nto align line segments. You could also align points\nif you really feel like it,",
    "start": "1433812",
    "end": "1441050"
  },
  {
    "text": "and that would be\nrepresented by a dot that has no cuts next to it. If you want to cut\nout just this point--",
    "start": "1441050",
    "end": "1447560"
  },
  {
    "text": "I need to make it something. You could think of it as a\ntiny triangle for consistency with this picture. We think of it as\na little square.",
    "start": "1447560",
    "end": "1453980"
  },
  {
    "text": "And so, when you\nexpand it, or when you shrink the outside region,\nyou get four 45 degrees folds.",
    "start": "1453980",
    "end": "1460870"
  },
  {
    "text": "This is actually how\n[? Eichholtz ?] et al defined it back in '96, and\nit's a fine definition.",
    "start": "1460870",
    "end": "1470400"
  },
  {
    "text": "But you have flexibility\nhere in your design process. They'll all work.",
    "start": "1470400",
    "end": "1475494"
  },
  {
    "text": "And this would let you take a\nwhole bunch of points, align them onto a common line, and\nnothing else is on that line.",
    "start": "1475494",
    "end": "1480871"
  },
  {
    "text": "Because these folds are\ngoing to push everything that's surrounding the\npoint away from the line.",
    "start": "1480871",
    "end": "1487910"
  },
  {
    "text": "All right. Some fun facts. Straight skeleton\nis nice and small. If you have n original\npoints and line segments",
    "start": "1487910",
    "end": "1496740"
  },
  {
    "start": "1490000",
    "end": "1510000"
  },
  {
    "text": "in your desired cut pattern,\nthe straight skeleton has a linear n number of\nline segments-- linear number",
    "start": "1496740",
    "end": "1503700"
  },
  {
    "text": "of creases. So order n. ",
    "start": "1503700",
    "end": "1511980"
  },
  {
    "start": "1510000",
    "end": "1600000"
  },
  {
    "text": "Other fun facts-- there is\na one-to-one correspondence between the edges you\nwant to cut along,",
    "start": "1511980",
    "end": "1520100"
  },
  {
    "text": "like let me pick\none over here maybe. Like this-- this is an\nedge I want to cut along,",
    "start": "1520100",
    "end": "1525880"
  },
  {
    "text": "and regions of the\nstraight skeleton. So here's a region. A face of the straight skeleton.",
    "start": "1525880",
    "end": "1531299"
  },
  {
    "text": "This guy. There's exactly one cut\nedge inside of that. That's always the case. You look everywhere here.",
    "start": "1531300",
    "end": "1537477"
  },
  {
    "text": "Every region of the\nstraight skeleton-- it's more obvious if I color\nthem different colors. There's one cut edge inside.",
    "start": "1537477",
    "end": "1543720"
  },
  {
    "text": "And all of those guys that\nsurround that cut edge bisect that edge\nand another one.",
    "start": "1543720",
    "end": "1552052"
  },
  {
    "text": "And the other one is the\none on the other side. In general, you take one of\nthe straight skeleton edges. There are two sides.",
    "start": "1552052",
    "end": "1557209"
  },
  {
    "text": "There's two faces of\nthe straight skeleton. This one's crazy and non convex. This one's just a little\ninfinite triangle down here,",
    "start": "1557209",
    "end": "1563980"
  },
  {
    "text": "and that edge bisects\nthose two cut edges. So it's very easy to walk\naround the structure. See what it bisects.",
    "start": "1563980",
    "end": "1570410"
  },
  {
    "text": "lots of things get bisected. But, it's not flat\nfoldable, so we're not done.",
    "start": "1570410",
    "end": "1576360"
  },
  {
    "text": "And that's where we\nneed the perpendiculars. So-- ",
    "start": "1576360",
    "end": "1599580"
  },
  {
    "text": "I'll write down the\ndefinition, and maybe show the picture\nwe're going for. ",
    "start": "1599580",
    "end": "1663996"
  },
  {
    "start": "1600000",
    "end": "1850000"
  },
  {
    "text": "There's a lot of\nstructures here. There is what I\ncall the cut graph-- the things we're trying to make. Then there's the\nstraight skeleton.",
    "start": "1663996",
    "end": "1669805"
  },
  {
    "text": "You should think of it as\na graph drawn on a paper. It has vertices of\nstraight skeleton, which is called\nskeleton vertices.",
    "start": "1669805",
    "end": "1675612"
  },
  {
    "text": "Regions of straight\nskeleton, which is called skeleton regions. Edges of the cut\ngraph, which are called cut edges, and so on.",
    "start": "1675612",
    "end": "1681399"
  },
  {
    "text": "We're going to add\na new graph, which is the perpendicular graph. Which you can think\nof as hinges from tree",
    "start": "1681399",
    "end": "1687649"
  },
  {
    "text": "method of origami design. So what is this--\nwhat does it mean?",
    "start": "1687650",
    "end": "1693460"
  },
  {
    "text": "We started a straight\nskeleton vertex. Usually there are three\nskeleton edges coming together.",
    "start": "1693460",
    "end": "1698550"
  },
  {
    "text": "Vertex-- sometimes they're\nmore like this guy. Four. And if there's three\nedges coming together,",
    "start": "1698550",
    "end": "1705530"
  },
  {
    "text": "there are three\nskeleton regions. For each one-- each\nof those regions-- has one cut edge\nin it, so we try",
    "start": "1705530",
    "end": "1711720"
  },
  {
    "text": "to walk perpendicular\nand toward that cut edge. So here I walk perpendicular.",
    "start": "1711720",
    "end": "1717690"
  },
  {
    "text": "I meet at right angles here. I just go off to infinity. Here I walk perpendicular to\nthis cut edge, and that's cool,",
    "start": "1717690",
    "end": "1726330"
  },
  {
    "text": "but then I leave\nthe skeleton region. At that point I enter\na new skeleton region,",
    "start": "1726330",
    "end": "1732230"
  },
  {
    "text": "which is this one,\nthis non-convex thing. It contains one et edge, and\nwhen I-- where was I here?",
    "start": "1732230",
    "end": "1738080"
  },
  {
    "text": "I entered. Now I want to move\nperpendicular to that cut edge, so that when I cross it, I\ncross it perpendicularly.",
    "start": "1738080",
    "end": "1744699"
  },
  {
    "text": "Now I enter a new region. It contains this cut edge. I move perpendicular to it,\nand I don't actually cross it,",
    "start": "1744699",
    "end": "1752409"
  },
  {
    "text": "but I enter a new region. Now I'm in the region\nof this cut edge, so I move perpendicular to that. And wow, I hit another\nskeleton vertex.",
    "start": "1752410",
    "end": "1759100"
  },
  {
    "text": "I stop. OK this example is because\nit's on a triangular grid, there's lots of\ndegeneracies like that.",
    "start": "1759100",
    "end": "1764670"
  },
  {
    "text": "Usually you'd eventually\ngo off to infinity, or come around to meet yourself. Here I happen to hit\na different vertex.",
    "start": "1764670",
    "end": "1771440"
  },
  {
    "text": "You do that all the vertices. All the skeleton vertices. Now there's some weird\nones like this one.",
    "start": "1771440",
    "end": "1779750"
  },
  {
    "text": "Notice there are no purple\nlines coming out from here, and that's because\nevery region you",
    "start": "1779750",
    "end": "1784990"
  },
  {
    "text": "try to enter you\nimmediately leave. So if I tried-- there's\nfour regions here.",
    "start": "1784990",
    "end": "1790130"
  },
  {
    "text": "Try each one of them. Like this region\nhas this cut edge. If I try to go\nperpendicular to it,",
    "start": "1790130",
    "end": "1795400"
  },
  {
    "text": "I'd enter a different region,\nso I can actually go at all. Like I move and then\nI instantly stop.",
    "start": "1795400",
    "end": "1800970"
  },
  {
    "text": "So you could think of there\nbeing like a zero radius thing there. That's sort of the\ndegenerate case",
    "start": "1800970",
    "end": "1807290"
  },
  {
    "text": "of a river being a disc\nIs it being a circle. Same thing going on. All of-- in general\nwhen you have",
    "start": "1807290",
    "end": "1813320"
  },
  {
    "text": "reflex vertices and their\nregular bisectors meeting, you're going to lose\nsome perpendiculars because you can't enter them.",
    "start": "1813320",
    "end": "1820000"
  },
  {
    "text": "Here's another one where I\njust have one perpendicular edge coming out. This one I can\nreach, but if I tried",
    "start": "1820000",
    "end": "1826375"
  },
  {
    "text": "to be perpendicular\nto either of these, I enter the wrong region. That's the perpendicular\nfolds, and that's pretty much",
    "start": "1826375",
    "end": "1833840"
  },
  {
    "text": "the crease pattern. There are technically\na few other folds you have to deal\nwith, but that is-- if you want to make\nsomething right now,",
    "start": "1833840",
    "end": "1840550"
  },
  {
    "text": "just apply those two algorithms\nand you get your shape. Just fold along\nthat crease pattern.",
    "start": "1840550",
    "end": "1846260"
  },
  {
    "text": "It will be flat\nfoldable almost always.",
    "start": "1846260",
    "end": "1852410"
  },
  {
    "start": "1850000",
    "end": "2210000"
  },
  {
    "text": "Why is it flat foldable? So one thing we can check is\nlocal flat foldability at least",
    "start": "1852410",
    "end": "1857810"
  },
  {
    "text": "satisfies Kawasaki's condition\nbecause at a typical vertex",
    "start": "1857810",
    "end": "1862860"
  },
  {
    "text": "you're going to have three\nskeleton edges coming together. And so there are\nthree faces here.",
    "start": "1862860",
    "end": "1868720"
  },
  {
    "text": "Each of them has a cut edge\nsomewhere-- probably draw",
    "start": "1868720",
    "end": "1874610"
  },
  {
    "text": "this reasonably well-- and\nshould have the property that when I extend these--\ndidn't draw that so well.",
    "start": "1874610",
    "end": "1882250"
  },
  {
    "text": "And I extend these-- these\nare angular bisectors. We know the skeleton edges will\nangularly bisect two cut edges.",
    "start": "1882250",
    "end": "1891260"
  },
  {
    "text": "The two cut edges that\nare defined by these guys. So I should get an angular\nbisector here, and those meet.",
    "start": "1891260",
    "end": "1899390"
  },
  {
    "text": "An angular bisector here. And then I also have\nperpendicular folds. So they may not actually meet\nthis guy, but if they did,",
    "start": "1899390",
    "end": "1908590"
  },
  {
    "text": "they certainly\nmeet the extension. Hey, that's our good\nfriend, the rabbit ear.",
    "start": "1908590",
    "end": "1913790"
  },
  {
    "text": "Just regular triangle fold. And in particular, you can see\nthat these angles are equal.",
    "start": "1913790",
    "end": "1923510"
  },
  {
    "text": "I call this three prime. It's like 180 minus\nthat, I think.",
    "start": "1923510",
    "end": "1930971"
  },
  {
    "text": "If I'm not mistaken. And this is one prime. Not the best notation.",
    "start": "1930971",
    "end": "1938000"
  },
  {
    "text": "And these are two\nprime and two prime. And so I've got these\nnice angle pairings.",
    "start": "1938000",
    "end": "1944044"
  },
  {
    "text": "That means if I add the odd\nangles, I get the even angles. Same thing. So I definitely have\nKawasaki's theorem everywhere.",
    "start": "1944044",
    "end": "1950280"
  },
  {
    "text": "You could check--\nit works even when you have these degenerate\nsituations where more than three skeleton\nedges come together.",
    "start": "1950280",
    "end": "1958207"
  },
  {
    "text": "For the same reason. You still get pairing. Just more than three of them. ",
    "start": "1958207",
    "end": "1963770"
  },
  {
    "text": "All right. But some exciting\nthings can happen. So I'm going to look\nat proving foldability,",
    "start": "1963770",
    "end": "1970660"
  },
  {
    "text": "but one exciting\nthing that can happen is you get a lot of\nperpendicular folds at a very",
    "start": "1970660",
    "end": "1976570"
  },
  {
    "text": "few original cut lines. So here I'm trying to make\nthis weird pinwheel shape.",
    "start": "1976570",
    "end": "1982070"
  },
  {
    "text": "I want to cut out the bold\nlines of the cut line. So I want to cut\nout this square, and then these four squares\narranged in a pinwheel pattern",
    "start": "1982070",
    "end": "1989934"
  },
  {
    "text": "around that one. Why you'd want to do that? I don't know, but we're\nmathematicians so we're going to consider all the cases.",
    "start": "1989934",
    "end": "1995710"
  },
  {
    "text": "So the straight skeleton\nis the thin black lines, and that's linear size. That's nice, but\nthe perpendiculars--",
    "start": "1995710",
    "end": "2003370"
  },
  {
    "text": "if this piece of\npaper's infinite, the number of\nperpendiculars is infinite. If you have a finite\npiece of paper,",
    "start": "2003370",
    "end": "2008870"
  },
  {
    "text": "which is what you\nusually buy in the store, then it's a finite\nnumber of creases. So in any finite region, this\nis a finite number of creases,",
    "start": "2008870",
    "end": "2016090"
  },
  {
    "text": "but it's a lot of them. So that's one sad thing. You can't bound the\nnumber of creases as a function of the\nnumber of cut lines.",
    "start": "2016090",
    "end": "2023650"
  },
  {
    "text": "But I think that's\nactually necessary. I don't think it's possible\nto solve this problem while bounding the\nnumber of creases",
    "start": "2023650",
    "end": "2028960"
  },
  {
    "text": "in terms of the\nnumber of cut lines. That's one of the open\nproblems getting down on one of these pictures.",
    "start": "2028960",
    "end": "2036910"
  },
  {
    "text": "One of these slide--\nlecture notes. There's something else\neven more annoying, though.",
    "start": "2036910",
    "end": "2042952"
  },
  {
    "text": "It happens even in a\nfinite piece of paper, and it's even more obscure\nwhy you'd want to make this.",
    "start": "2042952",
    "end": "2049679"
  },
  {
    "text": "But the bold blue\nlines are the cuts, and then the thin black lines\nare the straight skeleton.",
    "start": "2049679",
    "end": "2056820"
  },
  {
    "text": "You could tell this\nspans many years because I keep changing\nnotational style, and this is from the textbook.",
    "start": "2056820",
    "end": "2064079"
  },
  {
    "text": "And then you get these\nperpendicular folds. So I haven't drawn all\nof them but these dash lines, the light blue.",
    "start": "2064080",
    "end": "2071408"
  },
  {
    "text": "And this example is set up so\nthat-- let me get this right. This width is an\nirrational multiple",
    "start": "2071409",
    "end": "2081870"
  },
  {
    "text": "of this width or this width. One of those. Things are irrational, so\nthey're not very nice numbers.",
    "start": "2081870",
    "end": "2090629"
  },
  {
    "text": "And what I need to do\nto finish this picture is these guys go-- they\nenter a new skeleton region. They're actually going\nto keep going straight",
    "start": "2090630",
    "end": "2097180"
  },
  {
    "text": "because there's two cut\nlines that are parallel to each other. It's going to go up there, and\nit's going to cycle around.",
    "start": "2097180",
    "end": "2102226"
  },
  {
    "text": "Let me do one round. Who did I move? This guy. So this guy I just\nextended down.",
    "start": "2102226",
    "end": "2109020"
  },
  {
    "text": "He's going to turn around,\nmake 180 degree turn, and you can check each of these. Your setups do 180 degree\nturn around this axis,",
    "start": "2109020",
    "end": "2116740"
  },
  {
    "text": "around this axis on the bottom,\nand on the top around this axis and around this axis. Depending wherever you\nenter, it's like a racetrack.",
    "start": "2116740",
    "end": "2123549"
  },
  {
    "text": "Keep going around and around. And if you follow that one\nguy a little bit farther, it looks like that.",
    "start": "2123550",
    "end": "2129680"
  },
  {
    "text": "And a little bit farther,\nand it looks like that. It never finishes.",
    "start": "2129680",
    "end": "2134720"
  },
  {
    "text": "So in fact you completely\nfilled this region with creases. It's like a dense\nregion of creases.",
    "start": "2134720",
    "end": "2140288"
  },
  {
    "text": "Now this would be\na bitch to fold.  I don't recommend you try it.",
    "start": "2140289",
    "end": "2146609"
  },
  {
    "text": "And this is really a situation\nwhere this algorithm fails. The good news is if I move\nany of these vertices--",
    "start": "2146610",
    "end": "2153520"
  },
  {
    "text": "the cut vertices the tiniest\namount-- this will disappear. I really had to be very careful\nand get lots of degeneracy",
    "start": "2153520",
    "end": "2160520"
  },
  {
    "text": "for this to happen.  We don't actually know\nhow to prove that.",
    "start": "2160520",
    "end": "2165980"
  },
  {
    "text": "It's conjecture that if you take\nany cuts-- any graph of cuts you want to make, and\nyou perturb the vertices",
    "start": "2165980",
    "end": "2173530"
  },
  {
    "text": "in a tiny epsilon disc then\nthe resulting thing will not have this density behavior.",
    "start": "2173530",
    "end": "2179070"
  },
  {
    "text": "I'm totally sure it's true,\nbut we don't have the proof. So that's life. This is why I said skeleton\nmethod works almost always.",
    "start": "2179070",
    "end": "2188420"
  },
  {
    "text": "There are these\nannoying situations where it doesn't really\ngive your crease pattern.",
    "start": "2188420",
    "end": "2194089"
  },
  {
    "text": "So if you feel like\nunless you somehow think this is legitimate to\nmake infinitely many creases.",
    "start": "2194090",
    "end": "2199172"
  },
  {
    "text": "I don't think so.  All right, let me tell\nyou a few more things",
    "start": "2199172",
    "end": "2208780"
  },
  {
    "text": "to make this practical for you. You want to-- what\nyou really want is a mountain valley assignment.",
    "start": "2208780",
    "end": "2214109"
  },
  {
    "start": "2210000",
    "end": "2410000"
  },
  {
    "text": "Before I showed you lots of\nperpendicular and skeleton edges, and basically\nthe way it works",
    "start": "2214110",
    "end": "2220820"
  },
  {
    "text": "is if you look at any\nskeleton edge like this one,",
    "start": "2220820",
    "end": "2226380"
  },
  {
    "text": "it's bisecting in this\ncase a convex angle. So I make it a mountain. Here, red is mountain,\nblue is valley.",
    "start": "2226380",
    "end": "2233760"
  },
  {
    "text": "Dot dashes mountain,\ndash is valley. That is the standard. Whenever I'm bisecting\na reflex angle,",
    "start": "2233760",
    "end": "2239590"
  },
  {
    "text": "then I make the\nskeleton edge a valley. And that's basically true.",
    "start": "2239590",
    "end": "2247310"
  },
  {
    "text": "Convex angles, mountains,\nreflex angles, valleys. That's for the straight\nskeleton edges. Yeah. ",
    "start": "2247310",
    "end": "2257740"
  },
  {
    "text": "Like this fold, or this one? Oh, this guy.",
    "start": "2257740",
    "end": "2263179"
  },
  {
    "text": "All right, this is a\nbit of a special case. Here I'm really bisecting\nan angle of zero.",
    "start": "2263179",
    "end": "2268349"
  },
  {
    "text": "To extend these guys out,\nthey need an infinite, and they form a zero angle\nbecause they're parallel. And I call zero a convex angle,\nbut I just defined it that way,",
    "start": "2268350",
    "end": "2276980"
  },
  {
    "text": "and so this is a mountain. Whereas this guy bisecting\nis barely convex.",
    "start": "2276980",
    "end": "2285170"
  },
  {
    "text": "Is that really a mountain? No, that's a typo. Good.",
    "start": "2285170",
    "end": "2290460"
  },
  {
    "text": "This one should be a valley. Pretty sure. Yeah, should be a valley-- wow,\nthis is a weird crease pattern.",
    "start": "2290460",
    "end": "2300609"
  },
  {
    "text": "That's not a straight\nskeleton there. Never mind this picture-- I\nknew there was always a bug. I think there's a typo\nin the book as we say.",
    "start": "2300610",
    "end": "2309133"
  },
  {
    "start": "2309133",
    "end": "2315299"
  },
  {
    "text": "How did I make the initial\npattern of the turtle? I just drew something\nthat looked like a turtle. Anything.",
    "start": "2315299",
    "end": "2321994"
  },
  {
    "text": "I happened to draw\nthis on a grid, but there's no reason I had to. ",
    "start": "2321994",
    "end": "2340839"
  },
  {
    "text": "I designed them. So in this example, I designed\nthe ratios to be really nasty.",
    "start": "2340840",
    "end": "2346650"
  },
  {
    "text": "Like root 2 over 10\nratio or something. ",
    "start": "2346650",
    "end": "2352614"
  },
  {
    "text": "The whole thing will-- if I\nperturb these vertices at all, the whole thing will fall apart. I won't get these\n180 degree turns.",
    "start": "2352614",
    "end": "2358049"
  },
  {
    "text": "Things will end up\ngoing off to infinity. The hard part here is\nactually-- rational ratios",
    "start": "2358050",
    "end": "2363490"
  },
  {
    "text": "are quite common. What's uncommon\nin this picture is that this thing is closed\nup, and you never escape.",
    "start": "2363490",
    "end": "2369980"
  },
  {
    "text": "Almost always, there'll\nbe a little gap and you'll eventually\nreach the gap and then go off to infinity.",
    "start": "2369980",
    "end": "2375470"
  },
  {
    "text": "So that's what happens\nin a typical case. ",
    "start": "2375470",
    "end": "2382568"
  },
  {
    "text": "So if you drew a picture on the\ngrid this would never happen. That you can prove. Yeah.",
    "start": "2382569",
    "end": "2388670"
  },
  {
    "text": "Square grid. Probably also the\ntriangular grid. You need to be a little\ncareful because you want all these constructions\nto stay on the grid,",
    "start": "2388670",
    "end": "2395850"
  },
  {
    "text": "but I think something\nlike that is true. OK, let's move on to how we\nconstruct a folded state.",
    "start": "2395850",
    "end": "2404779"
  },
  {
    "text": "When this algorithm works,\nwhen it gives a valid crease pattern, you know it's\nlocally flat foldable",
    "start": "2404779",
    "end": "2410560"
  },
  {
    "start": "2410000",
    "end": "2705000"
  },
  {
    "text": "because it satisfies\nKawasaki, but how do we actually know that\nit globally folds flat? To do that, you have\nto describe what",
    "start": "2410560",
    "end": "2415771"
  },
  {
    "text": "it looks like after it's folded. And the idea here is to look at\nwhat we call corridors but are",
    "start": "2415771",
    "end": "2423140"
  },
  {
    "text": "essentially discrete versions\nof rivers from tree theory. So you have these\nconstant width strips",
    "start": "2423140",
    "end": "2430100"
  },
  {
    "text": "that turn at skeleton\nedges, and they could go off to\ninfinity on both sides.",
    "start": "2430100",
    "end": "2436030"
  },
  {
    "text": "In general they could loop\naround and meet themselves again, but in this case they\nactually all go to infinity.",
    "start": "2436030",
    "end": "2444410"
  },
  {
    "text": "And if you look at\none of those strips-- you could actually just cut\nthis out of your textbook.",
    "start": "2444410",
    "end": "2451260"
  },
  {
    "text": "Just slice it up and look\nat how that's folding. Well, it meets a skeleton\nedge, and then maybe it",
    "start": "2451260",
    "end": "2459112"
  },
  {
    "text": "meets a cut edge. Usually you don't fold those. Then it meets another\nskeleton edge. It just meets edges\none at a time.",
    "start": "2459112",
    "end": "2464500"
  },
  {
    "text": "It's never\ncomplicated because we divided along all these\nperpendicular folds. You really only meet\none edge at a time.",
    "start": "2464500",
    "end": "2472710"
  },
  {
    "text": "Which is good. In fact, if you look at\none of these skeleton edges",
    "start": "2472710",
    "end": "2479290"
  },
  {
    "text": "it's creased along,\nnormally you think of that as an angular bisector\nof these two cut edges,",
    "start": "2479290",
    "end": "2486559"
  },
  {
    "text": "but you can also think of\nit as an angular bisector of these two\nperpendicular folds. Because if you bisect\nthese two things,",
    "start": "2486560",
    "end": "2494650"
  },
  {
    "text": "you also bisect two things\nthat are perpendicular to them. It's like two wrongs\nmake a right somehow.",
    "start": "2494650",
    "end": "2500830"
  },
  {
    "text": "So this guy bisects\nthose two creases. So if you fold along\nhere-- actually",
    "start": "2500830",
    "end": "2506000"
  },
  {
    "text": "you align these creases. It's a duality-- you are\naligning the perpendicular folds. That fold along here, you line\nup this fold with that one,",
    "start": "2506000",
    "end": "2513580"
  },
  {
    "text": "this fold with that one. I fold here, I lined up\nthis fold with that one. There's like a zero\nlength fold that's there.",
    "start": "2513580",
    "end": "2520797"
  },
  {
    "text": "You fold along all these things. You line up this with\nitself, and so on. So you follow along this thing.",
    "start": "2520797",
    "end": "2526540"
  },
  {
    "text": "This corridor folds down\nto basically a rectangle.",
    "start": "2526540",
    "end": "2533260"
  },
  {
    "text": "It's got some rough edges\nin the top and the bottom, but it lies in the strip in 3D,\nand I have a picture of that.",
    "start": "2533260",
    "end": "2540960"
  },
  {
    "text": "So I took the one over\nhere-- this blue corridor--",
    "start": "2540960",
    "end": "2546670"
  },
  {
    "text": "and if you fold it up,\nit looks like this. OK, now in particular, you\ncan check at this point.",
    "start": "2546670",
    "end": "2552090"
  },
  {
    "text": "It's pretty easy\nto check because of all this bisectorness--\nBisector goodness--",
    "start": "2552090",
    "end": "2557340"
  },
  {
    "text": "that you bring into\nalignment all the cut edges. So for example, this guy,\nbecause it bisects that cut",
    "start": "2557340",
    "end": "2564100"
  },
  {
    "text": "edge and that cut edge, it\nbrings them into alignment. And you can see that\nsomewhere in this picture. I think it's these two guys.",
    "start": "2564100",
    "end": "2571200"
  },
  {
    "text": "It can be a little\nmore complicated. Like over here I\nhave a cut edge,",
    "start": "2571200",
    "end": "2576339"
  },
  {
    "text": "then I have a bisector, and\nthen a bisector, and then a bisector, and then\nanother cut edge. But if you think about it right,\nit's-- I don't happen to meet",
    "start": "2576340",
    "end": "2584920"
  },
  {
    "text": "these cut edges, but I'm\neffectively bringing this into alignment with this, and\nthen this into alignment with",
    "start": "2584920",
    "end": "2590500"
  },
  {
    "text": "this, and then this into\nalignment with that. So in the end, I\nline this with that, and that's what's happening\nup here on the left.",
    "start": "2590500",
    "end": "2600910"
  },
  {
    "text": "Where I don't quite\ncome all the way down, but I still end up\nlining everything up. So this is the solution to\nthe fold-and-cut problem",
    "start": "2600910",
    "end": "2606890"
  },
  {
    "text": "as long as it actually faults. And to show that\nactually folds, you just need to show that these\ncorridors-- I forget,",
    "start": "2606890",
    "end": "2615556"
  },
  {
    "text": "I think we call\nthese accordions. It's been a long time. Since '98 I wrote this paper",
    "start": "2615556",
    "end": "2622230"
  },
  {
    "text": "You take these\naccordions and you just want to see how\nthey fit together. And low and behold,\nthey fit together",
    "start": "2622230",
    "end": "2628170"
  },
  {
    "text": "in a tree in this picture. It gets more complicated\nin another picture, which",
    "start": "2628170",
    "end": "2634750"
  },
  {
    "text": "I will show you in a moment. But in this situation where\nevery quarter goes off",
    "start": "2634750",
    "end": "2640980"
  },
  {
    "text": "to infinity on both sides,\nyou get a nice tree structure. And as long as you could\nfold this tree flat,",
    "start": "2640980",
    "end": "2648870"
  },
  {
    "text": "then you can fold\nthis thing flat. Because each of these\nedges of the tree",
    "start": "2648870",
    "end": "2655250"
  },
  {
    "text": "is this very simple\naccordion structure which trivially falls flat.",
    "start": "2655250",
    "end": "2660502"
  },
  {
    "text": "The other thing you\nhave to check here is you actually alternate\nmountain valley. That's a little more\nsubtle, especially when I don't draw the\nmountain valley assignment.",
    "start": "2660502",
    "end": "2667790"
  },
  {
    "text": "But it turns out you always\nalternate between mountain and valley in this\npicture, which is great. That's the thing we\nknow always folds flats.",
    "start": "2667790",
    "end": "2674850"
  },
  {
    "text": "It's like a 1D folding. So these are super easy to fold. You can fold each of them if\nyou cut along all the dash",
    "start": "2674850",
    "end": "2680690"
  },
  {
    "text": "lines You can fold\neach separately. Then you need to\njoin them together where the edges here-- just like\nin tree theory-- the edges here",
    "start": "2680690",
    "end": "2687760"
  },
  {
    "text": "correspond to these rivers. And now you need to\nsomehow attach them here.",
    "start": "2687760",
    "end": "2692819"
  },
  {
    "text": "Check that where you attach\nthem, there's no crossings. I'm not going to describe,\nbut it's pretty easy.",
    "start": "2692820",
    "end": "2700140"
  },
  {
    "text": "Plain area essentially\nof that diagram, and then you need to\nfold this tree flat. Folding a tree flat\nis actually kind",
    "start": "2700140",
    "end": "2707160"
  },
  {
    "start": "2705000",
    "end": "2795000"
  },
  {
    "text": "of a segue into\nnext lecture, which will be about folding linkages. In this case, it's really easy.",
    "start": "2707160",
    "end": "2713300"
  },
  {
    "text": "You just pick up some root,\nlike the letter \"A\" over there, and you hang the tree. Pull up.",
    "start": "2713300",
    "end": "2719455"
  },
  {
    "text": "Technically this is like a\n[? depth ?] [? first ?] search of the tree. So you just walk\ndown-- aways walk down",
    "start": "2719455",
    "end": "2725380"
  },
  {
    "text": "until you're finished,\nthen you go back up. Walk down some more branches. You end up drawing everything\ndownward away from A.",
    "start": "2725380",
    "end": "2732900"
  },
  {
    "text": "And it will be a flat folding. There won't be any\ncrossings here. And then this is a\n1D representation",
    "start": "2732900",
    "end": "2737962"
  },
  {
    "text": "of what's really\ngoing on, which is that above each of these\nedges is really an accordion,",
    "start": "2737962",
    "end": "2744339"
  },
  {
    "text": "and you need to adjoin\nthem together there. So we'll basically do\nthis modular folding where you fold each\naccordion separately,",
    "start": "2744340",
    "end": "2749770"
  },
  {
    "text": "put them together\naccording to this. Boom, you get your flat folding. From this picture, you could\nread out the mountain valley",
    "start": "2749770",
    "end": "2754954"
  },
  {
    "text": "assignments before the\nperpendicular folds. This looks like a\nvalley, this looks like a valley-- this looks\nlike a perpendicular fold",
    "start": "2754954",
    "end": "2761000"
  },
  {
    "text": "I didn't use because\nthere's no crease there. That's flat. Whereas a mountain-- mountain's\nprobably at the top at A.",
    "start": "2761000",
    "end": "2770880"
  },
  {
    "text": "What really happens-- if\nyou want to know-- really",
    "start": "2770880",
    "end": "2776137"
  },
  {
    "text": "what we're deciding is whether\nthis starts mountain or valley, and then it will actually\nalternate back and forth",
    "start": "2776137",
    "end": "2781390"
  },
  {
    "text": "as you move along\nthe perpendicular. So that's basically how you\nconstruct a folded state.",
    "start": "2781390",
    "end": "2787760"
  },
  {
    "text": "In this situation of\nso-called linear corridors. Now there are a bunch of\nthings I haven't mentioned,",
    "start": "2787760",
    "end": "2795400"
  },
  {
    "start": "2795000",
    "end": "3050000"
  },
  {
    "text": "but I think-- I don't\nwant to talk about them too much so I get out\nto the other topics. ",
    "start": "2795400",
    "end": "2827590"
  },
  {
    "text": "So, what I just talked\nabout is something called a linear corridor\ncase, which is really",
    "start": "2827590",
    "end": "2834410"
  },
  {
    "text": "where it's most beautiful--\nthis construction",
    "start": "2834410",
    "end": "2839440"
  },
  {
    "text": "of a folded state-- and\nlinear corridor intuitively is something like this.",
    "start": "2839440",
    "end": "2844450"
  },
  {
    "text": "It goes off to\ninfinite on both sides. Has constant width all the way. Of course, it's really\na discrete thing.",
    "start": "2844450",
    "end": "2849660"
  },
  {
    "text": "Not a smooth thing.  Let me say\nconjecture-- if you're",
    "start": "2849660",
    "end": "2860690"
  },
  {
    "text": "cut graph has that\nmaximum degree",
    "start": "2860690",
    "end": "2866290"
  },
  {
    "text": "2-- it means at most two\nedges at every vertex.",
    "start": "2866290",
    "end": "2871810"
  },
  {
    "text": "This is a very common scenario. This is if you want\nto make a polygon, every vertex has degree 2. If you want to make\nseveral polygons,",
    "start": "2871810",
    "end": "2877730"
  },
  {
    "text": "every vertex has degree 2. I'll even let you have vertices\nof degree 1 or 0 for free,",
    "start": "2877730",
    "end": "2882950"
  },
  {
    "text": "but mainly we're thinking\nabout degree 2 everywhere. ",
    "start": "2882950",
    "end": "2888620"
  },
  {
    "text": "Then, we almost always\nhave a linear corridor.",
    "start": "2888620",
    "end": "2900315"
  },
  {
    "text": " So this is why the\nsituation's interesting,",
    "start": "2900315",
    "end": "2906120"
  },
  {
    "text": "although unfortunately\nthis is still a conjecture. I'm sure this is\ntrue, but proving it-- I don't quite know\nthe right techniques.",
    "start": "2906120",
    "end": "2913500"
  },
  {
    "text": "So in this typical situation,\nyou take any picture you want. You slightly perturb very\nvertex randomly, say,",
    "start": "2913500",
    "end": "2921250"
  },
  {
    "text": "then with probability\n1-- 100% probability-- you will get only\nlinear corridors.",
    "start": "2921250",
    "end": "2926395"
  },
  {
    "text": " And that's the situation\nwhere it turns into a tree.",
    "start": "2926395",
    "end": "2932060"
  },
  {
    "text": "It's easy to fold life is good. The annoying case is\ncircular corridor case.",
    "start": "2932060",
    "end": "2939235"
  },
  {
    "start": "2939235",
    "end": "2945560"
  },
  {
    "text": "This takes a lot\nmore work to prove, and I'm not going to\ntalk about it much. A circular corridor\nlooks like this.",
    "start": "2945560",
    "end": "2955550"
  },
  {
    "text": "Here we have these\nin with rivers also. So you just loop around. Still constant width everywhere,\nbut you meet yourself.",
    "start": "2955550",
    "end": "2963737"
  },
  {
    "text": "You don't go out to infinity.  It's harder.",
    "start": "2963737",
    "end": "2969010"
  },
  {
    "text": "Why is it harder? Well in particular, if you\nlook at how one corridor folds,",
    "start": "2969010",
    "end": "2977180"
  },
  {
    "text": "it's no longer-- it's\nlike the same situation we had in like lectures\ntwo and three where we had on the one hand\na 1D folding was really easy.",
    "start": "2977180",
    "end": "2985560"
  },
  {
    "text": "But then when you\nmade it circular-- you're just folding a circle\ninstead of folding a line segment-- now you had\nthis wrap around issue.",
    "start": "2985560",
    "end": "2991760"
  },
  {
    "text": "So, like, these guys\nwould have to line up. It turns out they will\nline up because everything is bisecting and whatnot.",
    "start": "2991760",
    "end": "2997808"
  },
  {
    "text": "These edges will\nline up, but now you have to join them together. And if this part went all the\nway down here and came back up,",
    "start": "2997809",
    "end": "3004160"
  },
  {
    "text": "then you'd get an intersection. And it turns out, in general,\nI get a choice of who's first",
    "start": "3004160",
    "end": "3012839"
  },
  {
    "text": "and who's last. I have a circular\norder of things, and I get to choose where\nI break that circular order",
    "start": "3012840",
    "end": "3017849"
  },
  {
    "text": "and make it a linear order. Where I do the wrap around. There's some\ncircular corridors--",
    "start": "3017850",
    "end": "3022860"
  },
  {
    "text": "you can't even break\nthem and make it work. Kind of depressing.",
    "start": "3022860",
    "end": "3030200"
  },
  {
    "text": "So this is definitely harder\nand that sometimes it's not possible. ",
    "start": "3030200",
    "end": "3036680"
  },
  {
    "text": "But we can save a\nlittle bit, which is-- I don't have\nan example handy.",
    "start": "3036680",
    "end": "3043800"
  },
  {
    "text": "I wish I did. I'll have to reconstruct it. This is so long ago. ",
    "start": "3043800",
    "end": "3050810"
  },
  {
    "start": "3050000",
    "end": "3600000"
  },
  {
    "text": "Here's a way to make\nit definitely work. Fold all the cut edges. ",
    "start": "3050810",
    "end": "3057300"
  },
  {
    "text": "So far in the pictures\nI've been drawing, I didn't fold\nalong the cut edges because I really wanted to\nseparate the green region here",
    "start": "3057300",
    "end": "3063992"
  },
  {
    "text": "from the yellow region. If I folded this up-- this\nis quite a complicated one to fold-- you get the cut lines\nsomewhere like over there,",
    "start": "3063992",
    "end": "3072320"
  },
  {
    "text": "and then the green stuff will\nbe always above the cut line and the yellow stuff will\nbe below the cut line. In general, this is\ncalled a side assignment.",
    "start": "3072320",
    "end": "3078770"
  },
  {
    "text": "You have a bunch of\nregions you decide which ones you want\nto be above and which ones you want to be below. And usually, you have\npolygons, and you",
    "start": "3078770",
    "end": "3085060"
  },
  {
    "text": "say the interiors are above\nand the exteriors are below. But in general, you could\nask for anything you want.",
    "start": "3085060",
    "end": "3091770"
  },
  {
    "text": "You could say maybe I want\nboth of these to be above. If you make both\nof them above, you have to valley fold along\nall of the cut lines.",
    "start": "3091770",
    "end": "3099314"
  },
  {
    "text": "So if you do that-- you say\nI want all regions to be above the cut line-- you\ncan still line them up. You end up folding along all\nthe cut edges with valleys.",
    "start": "3099314",
    "end": "3107010"
  },
  {
    "text": "And then wrap around\nis super easy. We take this thing, and in\nfact, everyone's folding",
    "start": "3107010",
    "end": "3113090"
  },
  {
    "text": "along the black lines. So really everybody\ncomes down to the floor, and then the wrap around is\njust underneath the floor",
    "start": "3113090",
    "end": "3120090"
  },
  {
    "text": "and life is good. So that's one way to\ndeal with this case, and you have to\nprove that works.",
    "start": "3120090",
    "end": "3126250"
  },
  {
    "text": "It's complicated.  I would rather go\nonto other topics.",
    "start": "3126250",
    "end": "3133270"
  },
  {
    "text": "I do think this would\nmake a fun project. It's not easy to make\nthese crease patterns.",
    "start": "3133270",
    "end": "3140200"
  },
  {
    "text": "Currently we draw\nthem always by hand, meaning with the fancy\ndrawing program that knows how to do\nangular bisectors. ",
    "start": "3140200",
    "end": "3147470"
  },
  {
    "text": "And it's an art to\nmove around the points so that you get\nlots of alignments.",
    "start": "3147470",
    "end": "3152930"
  },
  {
    "text": "Like when you get four straight\nskeleton edges coming together, that means you\nget fewer creases. That's a good thing whenever\nyou can make that happen.",
    "start": "3152930",
    "end": "3159850"
  },
  {
    "text": "So when you could give\nme software to help do that, I would love you. ",
    "start": "3159850",
    "end": "3167980"
  },
  {
    "text": "So let's move on. Any questions about the\nstraight skeleton method?",
    "start": "3167980",
    "end": "3173240"
  },
  {
    "text": "Now I'm going to switch\nover to disk packing. ",
    "start": "3173240",
    "end": "3178758"
  },
  {
    "text": "All right. Same problem, but\nnow I'll give you",
    "start": "3178758",
    "end": "3184480"
  },
  {
    "text": "a method that always\nworks in theory.",
    "start": "3184480",
    "end": "3190300"
  },
  {
    "text": "Just difficult in practice. ",
    "start": "3190300",
    "end": "3199060"
  },
  {
    "text": "I think this is good\nchalk because it's yellow. Generally, if it's\nyellow on the outside",
    "start": "3199060",
    "end": "3205410"
  },
  {
    "text": "it is railroad chalk,\nwhich is the good stuff. But, what the problem\nis-- we have bad erasers.",
    "start": "3205410",
    "end": "3212040"
  },
  {
    "text": "It's persistence of vision. You just get to remember\nwhat I used to write. ",
    "start": "3212040",
    "end": "3231001"
  },
  {
    "text": "I don't want to write\ndown the algorithms. It's complicated. I want to give you a visual\noverview of the main steps.",
    "start": "3231001",
    "end": "3239240"
  },
  {
    "text": "I guess there's nice\nfigures do that for us. So we start with a\nvery complicated shape",
    "start": "3239240",
    "end": "3246980"
  },
  {
    "text": "we want to make, like\nthis quadrilateral. And you can see disk\npacking is involved.",
    "start": "3246980",
    "end": "3253510"
  },
  {
    "text": "The very first thing we do-- and\nI'll tell you why in a moment-- is thicken the graph\nyou want to build.",
    "start": "3253510",
    "end": "3259292"
  },
  {
    "text": "So maybe it's a\npolygon, maybe it's a graph-- I'll think about\nthe polygon case for now because it's easier, then I'll\ncome back to the general case.",
    "start": "3259292",
    "end": "3265610"
  },
  {
    "text": "I thicken it by tiny epsilon. Just offset in both directions. Just like as if you're starting\nthe straight skeleton method,",
    "start": "3265610",
    "end": "3272400"
  },
  {
    "text": "but then you stop after epsilon. No events happen\nin epsilon time.",
    "start": "3272400",
    "end": "3278880"
  },
  {
    "text": "OK, then I have this picture--\nthe purple stuff, pink stuff,",
    "start": "3278880",
    "end": "3285250"
  },
  {
    "text": "whatever. Magenta. 50% magenta. I happen to know I\ndrew this figure.",
    "start": "3285250",
    "end": "3291390"
  },
  {
    "text": "Now I'm going to take\nsome 50% cyan disks and pack them to\nfill this region.",
    "start": "3291390",
    "end": "3297369"
  },
  {
    "text": "Now what I want-- there's\nthree properties I want. One is that every\nvertex, but you have to think about\neach region separately",
    "start": "3297370",
    "end": "3303680"
  },
  {
    "text": "which is a little bit confusing. Let's think about the outside. It's a little easier. Bigger. Every vertex of this\ngraph on the outside",
    "start": "3303680",
    "end": "3312180"
  },
  {
    "text": "should be the center of a disk. There's a disk center here. There's a disk center here.",
    "start": "3312180",
    "end": "3317520"
  },
  {
    "text": "there's a disk center here,\nand a disk center there. On the inside it's also true,\nthey're just different disks.",
    "start": "3317520",
    "end": "3323680"
  },
  {
    "text": "Then also I want the\nedges of the graph to be covered by\na radii of disks.",
    "start": "3323680",
    "end": "3329855"
  },
  {
    "text": "And so here's a\nradius of one disk. Here's a diameter of a disc. Here's a radius of a disk\nthat covers the edge.",
    "start": "3329855",
    "end": "3336820"
  },
  {
    "text": "So in other words, I\nwant to fill-- along the edge I want to\nhave a bunch of centers so that I completely\ncover that edge with blue.",
    "start": "3336820",
    "end": "3344680"
  },
  {
    "text": "You'll see why later. Question? ",
    "start": "3344680",
    "end": "3351960"
  },
  {
    "text": "The disks have to\nbe non-overlapping. These properties are actually\nquite challenging to achieve.",
    "start": "3351960",
    "end": "3357709"
  },
  {
    "text": "Your question is why\ndo we use small disks. ",
    "start": "3357709",
    "end": "3363360"
  },
  {
    "text": "Disk, because if I\nhad a big disk here, it would intersect this disk. ",
    "start": "3363360",
    "end": "3369990"
  },
  {
    "text": "Now I didn't have to\nmake that disk so big, but if I made that\none smaller, I'd have to have more disks here.",
    "start": "3369990",
    "end": "3376349"
  },
  {
    "text": "Or here there's also\ntwo small disks. That one I probably could have\ngotten away with a bigger disk.",
    "start": "3376349",
    "end": "3383420"
  },
  {
    "text": "Oh, no, but then on the\ninside you have a problem. So these guys actually\nhave to match up. That's another constraint.",
    "start": "3383420",
    "end": "3389250"
  },
  {
    "text": "And the inside and the\noutside have to match up. Here there's a slight\nchange in radii to compensate for the epsilon. Along the edges they're\nexactly the same.",
    "start": "3389250",
    "end": "3395810"
  },
  {
    "text": "So if I made this\none a big disk, it would overlap this one. So I could make that one\nsmaller, but then-- other",
    "start": "3395810",
    "end": "3401340"
  },
  {
    "text": "problems. So you have to\nsimultaneously balance all these constraints,\nwhich is a bit exciting.",
    "start": "3401340",
    "end": "3408270"
  },
  {
    "text": "What else? The discs don't overlap. And the last property is that\nthe gaps between the disks have always three or four sides.",
    "start": "3408270",
    "end": "3416970"
  },
  {
    "text": "Why? Because I want it to. It will make life easier. You could try to\ndeal with more sides,",
    "start": "3416970",
    "end": "3423730"
  },
  {
    "text": "but three and four is nice. Yeah, I'll get to that.",
    "start": "3423730",
    "end": "3430530"
  },
  {
    "text": "Why do we care about\nnumber of sides? Because I'm going\nto draw a graph. I'm going to subdivide\nmy original graph here",
    "start": "3430530",
    "end": "3437030"
  },
  {
    "text": "with these red lines to\nsay whenever disks kiss, I will draw-- connect the\ncenters of those disks.",
    "start": "3437030",
    "end": "3443815"
  },
  {
    "text": " And because these gaps always\nhave three or four sides--",
    "start": "3443815",
    "end": "3451536"
  },
  {
    "text": "it's not the best example. Here's like three sides. The red lines I draw\nwill outline a triangle.",
    "start": "3451537",
    "end": "3456990"
  },
  {
    "text": "Whenever I have three sides,\nwhenever I have four sides, I'll have a quadrilateral. So I've subdivided my\nregions into triangles",
    "start": "3456990",
    "end": "3464040"
  },
  {
    "text": "and quadrilaterals. OK, you have to believe\nthat this is possible. I can sketch an\nalgorithm for you,",
    "start": "3464040",
    "end": "3470700"
  },
  {
    "text": "which is you draw a tiny\ndisk at each of the corners, and then you draw lots of\ntiny this along the edges",
    "start": "3470700",
    "end": "3477070"
  },
  {
    "text": "to fill the edges. And that will\nsatisfy everything. I mean the disks will\nbe non-overlapping because they're super tiny.",
    "start": "3477070",
    "end": "3482795"
  },
  {
    "text": "They won't get near any other\ndisks from some other side. And what other good things? Oh, but the regions\nwill be ginormous.",
    "start": "3482795",
    "end": "3489579"
  },
  {
    "text": "They won't have\nthree or four sides. They'll have 100 sides, a\nmillion sides-- who knows. Well, whenever you have\nsome crazy region outlined",
    "start": "3489580",
    "end": "3498460"
  },
  {
    "text": "by disks-- might not be convex. Whatever-- just draw the\nbiggest disk you can in there.",
    "start": "3498460",
    "end": "3505276"
  },
  {
    "text": "I'll get it to turn\ninto a disk eventually. That does not intersect\nanybody, but if it's",
    "start": "3505276",
    "end": "3510519"
  },
  {
    "text": "the biggest possible,\nit will actually touch at least three sides. If you degenerate,\nit might touch four.",
    "start": "3510520",
    "end": "3516880"
  },
  {
    "text": "But in general, it will\ntouch three sides, which will subdivide that\nregion into three pieces,",
    "start": "3516880",
    "end": "3522152"
  },
  {
    "text": "and you can show that those\npieces are all little bit smaller than what you had before\nin terms of number of sides.",
    "start": "3522152",
    "end": "3527480"
  },
  {
    "text": "Except when you start\nwith a quadrilateral. When there's four\nsides, you'll get quadrilaterals and triangle. So you can't go\nbelow three and four.",
    "start": "3527480",
    "end": "3533930"
  },
  {
    "text": "It'd be great if we\ncould always get down to three sides in\nevery region, but we can get down to three or four. Anything bigger than three\nor four you can show.",
    "start": "3533930",
    "end": "3540760"
  },
  {
    "text": "This will make it\nstrictly smaller. So that is an algorithm. It's not super efficient, but\nit will find a disk packing",
    "start": "3540760",
    "end": "3546160"
  },
  {
    "text": "with all these properties. Then we do the subdivision. Now what do you think\nwe're going to do? What do we do with\nthe triangles?",
    "start": "3546160",
    "end": "3553220"
  },
  {
    "text": "Rabbit ear. That's the key phrase for today. So remember our good friend,\nthe rabbit ear, and then",
    "start": "3553220",
    "end": "3560690"
  },
  {
    "text": "there was the universal\nmolecule-- Lang's universal molecule\nfor the quadrilateral. We're going to use that\nfor the quadrilaterals.",
    "start": "3560690",
    "end": "3567330"
  },
  {
    "text": "And it turns out there's\nsome nice properties here, which is the perpendicular\nfolds of the rabbit ear",
    "start": "3567330",
    "end": "3574799"
  },
  {
    "text": "will always hit right at the\nkissing point between the two disks. And same thing in here.",
    "start": "3574800",
    "end": "3580924"
  },
  {
    "text": "We've got these four disks. We've got this quadrilateral\nregion in between. and the perpendicular folds that\ncome out of these two points.",
    "start": "3580925",
    "end": "3590990"
  },
  {
    "text": "You may not remember\nexactly what's happening here as we shrink. And then in the tree method,\nthis became an active path.",
    "start": "3590990",
    "end": "3599920"
  },
  {
    "text": "There's no notion of\nactive paths here, but we just make that so. That these perpendicular folds\nwill end up hitting kissing",
    "start": "3599920",
    "end": "3608580"
  },
  {
    "text": "disks, and we'll end up actually\nwith the four arm starfish. In terms of the tree you get and\nthe articulatable flaps here,",
    "start": "3608580",
    "end": "3618090"
  },
  {
    "text": "these guys will all\nmeet at a point. That's just the way this\nworks with disk packing.",
    "start": "3618090",
    "end": "3623470"
  },
  {
    "text": "And you can think of\nthere being disks here and you're actually applying\nthe tree method to that flap",
    "start": "3623470",
    "end": "3629069"
  },
  {
    "text": "pattern, and that's probably the\neasiest way to think about it. But what's good for us--\ndo I have a picture?",
    "start": "3629070",
    "end": "3637079"
  },
  {
    "text": "Not yet. But the point is, I have\nperpendiculars coming out of here. I have perpendiculars\ncoming out of here.",
    "start": "3637080",
    "end": "3642150"
  },
  {
    "text": "They will meet because these\ndisks kiss at the same point up from both sides.",
    "start": "3642150",
    "end": "3648720"
  },
  {
    "text": "Perpendiculars meet. That's good. That means I don't\nget perpendiculars bouncing all over the place. So all this work is to make\nsure that perpendiculars",
    "start": "3648720",
    "end": "3655490"
  },
  {
    "text": "are well behaved. It's a lot of work to\ndo it, but it does it.",
    "start": "3655490",
    "end": "3660540"
  },
  {
    "text": "Now when you fold this\nthing, what we end up doing is lining up-- remember there\nwas two copies of my polygon.",
    "start": "3660540",
    "end": "3668770"
  },
  {
    "text": "There's the inner copy\nand the outer copy. I end up lining up\nall of these guys--",
    "start": "3668770",
    "end": "3677960"
  },
  {
    "text": "I'm got to go back\nto the picture. I'm sorry. So we have this inner copy,\nand what these molecules end up",
    "start": "3677960",
    "end": "3684440"
  },
  {
    "text": "doing is lining up all\nthe edges of this quad, all the edges of this quad,\nall the edges of this triangle. All those edges\non the inside will",
    "start": "3684440",
    "end": "3690859"
  },
  {
    "text": "become lined up on one edge. All the lines on\nthe outside become lined up on another line.",
    "start": "3690860",
    "end": "3696980"
  },
  {
    "text": "Turns out it will be\nparallel to that line. But what we really wanted\nto line up were these edges,",
    "start": "3696980",
    "end": "3702277"
  },
  {
    "text": "and you can see why we had to\ndo the outside of the beginning, because otherwise we'd get\ntons of extra junk on our line.",
    "start": "3702277",
    "end": "3708030"
  },
  {
    "text": "We only want these\nedges on our line. So we did the offset\nso that all this stuff",
    "start": "3708030",
    "end": "3713330"
  },
  {
    "text": "will come to one line. All this stuff on the outside\nwill come to another line. And then we get this picture.",
    "start": "3713330",
    "end": "3721410"
  },
  {
    "text": "So this is one\nline at the bottom. Another line at the top. We really wanted to line up\nstuff-- the blue stuff there.",
    "start": "3721410",
    "end": "3729269"
  },
  {
    "text": "And there's still\nsome junk on our line. These cyan triangles\nrepresent things",
    "start": "3729270",
    "end": "3734510"
  },
  {
    "text": "that come from down\nhere, but we really don't want them\nto cross our line. They just happened to.",
    "start": "3734510",
    "end": "3740390"
  },
  {
    "text": "So we have to sync\nthem repeatedly. Do lots of folds to make them\nunderneath that epsilon line.",
    "start": "3740390",
    "end": "3745730"
  },
  {
    "text": "Then we can cut along\nour line, and we're done. Easy. ",
    "start": "3745730",
    "end": "3753620"
  },
  {
    "text": "To prove that this works,\nwe'll view a little sketch. This is kind of fun,\nand it's one piece",
    "start": "3753620",
    "end": "3760670"
  },
  {
    "text": "of what we're in the process\nof doing for tree maker. This is sort of like a\nspecial case of tree maker. You just have very\nsimple molecules",
    "start": "3760670",
    "end": "3767260"
  },
  {
    "text": "and a relatively simple way\nin which they're combined. ",
    "start": "3767260",
    "end": "3775380"
  },
  {
    "text": "Here I've done a\nsimpler example. I want to make a square, and I\nend up decomposing in this case",
    "start": "3775380",
    "end": "3781890"
  },
  {
    "text": "into nine molecules-- nine\nquadrilateral molecules. A very simple disk\npacking which I have not shown the disk packing here.",
    "start": "3781890",
    "end": "3788170"
  },
  {
    "text": "The idea is I'm going to\nmake some cuts in my paper to make my problem easier.",
    "start": "3788170",
    "end": "3793645"
  },
  {
    "text": "I'm going to have to pay for\nthat, because later I really want those edges joined. I'll have to glue\nthem back together. But to make it easier think\nabout, I cut those four edges.",
    "start": "3793645",
    "end": "3804290"
  },
  {
    "text": "So that the way in which\nmy molecules are connected to each other is a tree,\nbecause I like trees.",
    "start": "3804290",
    "end": "3809751"
  },
  {
    "text": "They're easier to think about. Easier to do induction over. So that's the blue line\nconnecting the centers",
    "start": "3809751",
    "end": "3815580"
  },
  {
    "text": "in a tree. The other remaining edges in\nthe grid have been cut away.",
    "start": "3815580",
    "end": "3821440"
  },
  {
    "text": "Now the idea is--\nit's kind of like what I was drawing for the\nlinear corridor case.",
    "start": "3821440",
    "end": "3827190"
  },
  {
    "text": "You have a tree, you pick\nup the tree from some node, and just hang it down.",
    "start": "3827190",
    "end": "3832710"
  },
  {
    "text": "And in this case, we hang\nit from this molecule. The red edges are\nmountain, so three of these",
    "start": "3832710",
    "end": "3839760"
  },
  {
    "text": "are going to be valley. One mountain. The idea is this thing reaches\naround the next guy, which",
    "start": "3839760",
    "end": "3844886"
  },
  {
    "text": "reaches is around the\nnext guy, which reaches around the next guy,\nand there's actually-- there's two valleys\nhere-- two little pockets.",
    "start": "3844886",
    "end": "3851326"
  },
  {
    "text": "Each of-- this guy\ngoes in that pocket, this guy goes in that pocket,\nand recursively, it just works. I think I have a picture of\nwhat's actually happening here.",
    "start": "3851326",
    "end": "3860095"
  },
  {
    "text": "Yeah, is it's hard\nto really draw, but each of these\nforearm starfish",
    "start": "3860095",
    "end": "3865990"
  },
  {
    "text": "has one mountain\nand three valleys, and you just nestle inside\nyour parent in the tree.",
    "start": "3865990",
    "end": "3873070"
  },
  {
    "text": "And this is really easy to show\nthat there's no crossings here because just joined\nto your parent,",
    "start": "3873070",
    "end": "3878310"
  },
  {
    "text": "and it's a nice\nnesting structure. It's just in the same way\nthat trees can be folded flat.",
    "start": "3878310",
    "end": "3884270"
  },
  {
    "text": "You can fold all\nthese molecules flat and join them\ntogether in a tree.",
    "start": "3884270",
    "end": "3890960"
  },
  {
    "text": "But we didn't\nreally have a tree. We had all those extra cuts\nthat we have to re-suture. ",
    "start": "3890960",
    "end": "3897380"
  },
  {
    "text": "So we have this picture,\nand now we really have to join up these edges and\nthink about what the mountain valley assignment is there.",
    "start": "3897380",
    "end": "3903520"
  },
  {
    "text": "And it works. ",
    "start": "3903520",
    "end": "3908666"
  },
  {
    "text": "This green thing\nis the boundary, and then I have\nconnected the dots.",
    "start": "3908666",
    "end": "3915299"
  },
  {
    "text": "Each of these dots corresponds\nto one green edge here. I forget whether it's this\nedge or that one, I think.",
    "start": "3915300",
    "end": "3922270"
  },
  {
    "text": "It's just a single edge. And so, for example, these\ntwo are-- these two joins,",
    "start": "3922270",
    "end": "3934930"
  },
  {
    "text": "and then the joins above\nthat nestle around it. And then the other\nbranch at the top are",
    "start": "3934930",
    "end": "3940950"
  },
  {
    "text": "joins, and in the leftmost\ncut are these two joins. You have to make these\njoins, and really",
    "start": "3940950",
    "end": "3946130"
  },
  {
    "text": "all you need to\ncheck is that these joins form a non-crossing\npicture like they do here. And that's almost obvious\nbecause this is a planer",
    "start": "3946130",
    "end": "3953200"
  },
  {
    "text": "diagram and we're cutting\nalong a planer tree, and so this is again a depth\nfirst search kind of thing.",
    "start": "3953200",
    "end": "3959329"
  },
  {
    "text": "So there's one tree we\ncall the dual tree here that works because it's\na tree, and then there's",
    "start": "3959330",
    "end": "3965840"
  },
  {
    "text": "the cuts you make which are\ndifferent trees-- primal tree if you want-- and that also\nworks because of planarity.",
    "start": "3965840",
    "end": "3972410"
  },
  {
    "text": "And it all works. That's the hand wavy version,\nand you can read the textbook",
    "start": "3972410",
    "end": "3977685"
  },
  {
    "text": "if you want more details. Oh, gosh. If you want to solve more\ngeneral graphs, you can do it.",
    "start": "3977685",
    "end": "3984720"
  },
  {
    "text": "In general, you have to\noffset all of those cut lines, and you get all these things--\nalong the pink lines here you",
    "start": "3984720",
    "end": "3994240"
  },
  {
    "text": "line things up,\nbut you really want to line up these blue\nlines-- purple lines.",
    "start": "3994240",
    "end": "4000450"
  },
  {
    "text": "And so you have to do more\nsyncing to get it to work. Now I have all the\nthings I want to line up on this line and this line.",
    "start": "4000450",
    "end": "4005849"
  },
  {
    "text": "I fold in the middle,\nand now they're lined up. ",
    "start": "4005850",
    "end": "4012070"
  },
  {
    "text": "That fold in the middle--\nyeah, that will work. Good. Might have to do more syncing. ",
    "start": "4012070",
    "end": "4020180"
  },
  {
    "text": "Whew. Questions about\ndisk-packing method? This is a bit of\na whirlwind tour,",
    "start": "4020180",
    "end": "4025957"
  },
  {
    "text": "but I wanted to get\nthrough it quickly to tell you about a new result. Just got accepted\nto a conference",
    "start": "4025957",
    "end": "4031670"
  },
  {
    "text": "to appear in October. Pretty soon.",
    "start": "4031670",
    "end": "4037050"
  },
  {
    "start": "4037050",
    "end": "4042780"
  },
  {
    "text": "And it's a project that started\nin this class in the problem session three years ago,\nand we just solved it.",
    "start": "4042780",
    "end": "4050090"
  },
  {
    "text": "Took awhile. Took another\nco-author to chime in.",
    "start": "4050090",
    "end": "4055170"
  },
  {
    "text": " And it goes back to the\nearly history of fold and cut",
    "start": "4055170",
    "end": "4062720"
  },
  {
    "text": "which is simple folds. All the magicians were\nusing simple folds. What can you make\nwith simple folds?",
    "start": "4062720",
    "end": "4068670"
  },
  {
    "text": "Now you've been wowed and dowed\nthat you could make anything with arbitrary folds, but simple\nfolds you cannot make anything.",
    "start": "4068670",
    "end": "4075029"
  },
  {
    "text": "Because the first told\nyou make, say, this one,",
    "start": "4075030",
    "end": "4080310"
  },
  {
    "text": "has to be a line of\nsymmetry of your diagram. ",
    "start": "4080310",
    "end": "4085844"
  },
  {
    "text": "Got to stop making my life hard. If you can fold something,\nyou can never unfold it.",
    "start": "4085844",
    "end": "4091170"
  },
  {
    "text": "That's the usual\nsimple fold model. This has to line\nup-- the cuts you want to line up over\nhere, that are exactly",
    "start": "4091170",
    "end": "4097702"
  },
  {
    "text": "be the cuts you want\nto line up here. So you can only make\nsymmetric diagrams. The first fold has to be a\nline of reflectional symmetry.",
    "start": "4097702",
    "end": "4104990"
  },
  {
    "text": "But is that the only\nproperty you need? No. Kind of have to have symmetry\nfor while until you're done.",
    "start": "4104990",
    "end": "4112019"
  },
  {
    "text": "How do you formalize that? Well, we came up\nwith an algorithm that in polynomial time,\nan efficient algorithm",
    "start": "4112020",
    "end": "4120339"
  },
  {
    "text": "will tell you whether a\ngiven polygon can be made.",
    "start": "4120340",
    "end": "4127089"
  },
  {
    "text": "Like this polygon looks good. I think-- yeah, I\nthink this can be made.",
    "start": "4127090",
    "end": "4136430"
  },
  {
    "text": "So I think I would fold\nalong and do a bisector here, and then this\nbasically disappears.",
    "start": "4136430",
    "end": "4142390"
  },
  {
    "text": "Folding over. Then I would fold along\nand get a bisector here, and then this\ndisappears into that,",
    "start": "4142390",
    "end": "4148140"
  },
  {
    "text": "and then maybe I can fold here.",
    "start": "4148140",
    "end": "4155049"
  },
  {
    "text": "Does that work? Barely. I mean I've got to make sure\nthat this blank paper does not come onto that.",
    "start": "4155050",
    "end": "4162770"
  },
  {
    "text": "But if that's a\nproblem, I can probably make-- I could make a\nfold here, for example.",
    "start": "4162770",
    "end": "4168950"
  },
  {
    "text": "Shrinks that up. There's lots of\nthings you can do. This is a borderline case\nwhether it's yes or no.",
    "start": "4168950",
    "end": "4174528"
  },
  {
    "text": "I will give you an\nalgorithm that does it.  For polygons with margin.",
    "start": "4174529",
    "end": "4181909"
  },
  {
    "text": " Bit of a technical condition.",
    "start": "4181909",
    "end": "4187000"
  },
  {
    "text": "Something that is\npretty typical. What I mean is the thing\nyou're trying to cut out",
    "start": "4187000",
    "end": "4192200"
  },
  {
    "text": "does not meet the\nboundary of the paper. There's no margin here. It'd be hard to print out.",
    "start": "4192200",
    "end": "4197240"
  },
  {
    "text": "So I really want\nsomething that has margin. That's a typical\ncase we care about. We actually need this\nfor the proof to work.",
    "start": "4197240",
    "end": "4202620"
  },
  {
    "text": "We also need that\nit's a single polygon. ",
    "start": "4202620",
    "end": "4209160"
  },
  {
    "text": "It does not work\nwith general graphs. This algorithm. Because more complicated\nthings can happen.",
    "start": "4209160",
    "end": "4214380"
  },
  {
    "text": "It might be [INAUDIBLE]. for all we know,\nthe general case. So here's the algorithm that\nI'll give you in number form.",
    "start": "4214380",
    "end": "4225450"
  },
  {
    "text": "First thing you do is\nguess the first fold. This is a powerful\nidea that even",
    "start": "4225450",
    "end": "4231880"
  },
  {
    "text": "most algorithmisists\ndon't necessarily know. The idea is what could\nthe first fold be?",
    "start": "4231880",
    "end": "4237394"
  },
  {
    "text": "Has to be a line of\nreflection symmetry. Turns out there's a linear\nnumber [INAUDIBLE] most. You can find them\nin linear time.",
    "start": "4237394",
    "end": "4243310"
  },
  {
    "text": "All these good algorithms\nfor finding them. But which fold do I make first? The answer is I don't care.",
    "start": "4243310",
    "end": "4248970"
  },
  {
    "text": "Let's just try them\nall one at a time. This is what I call guessing. Just imagine from now on\nthat we made the right guess,",
    "start": "4248970",
    "end": "4254989"
  },
  {
    "text": "but if you end up failing\nlater on this algorithm, just go back here\ntry the next one. There's only N of them to try.",
    "start": "4254990",
    "end": "4260937"
  },
  {
    "text": "So you're going to\nmultiply the running time of the rest of the algorithm\nby N, and if this is N to N",
    "start": "4260937",
    "end": "4266809"
  },
  {
    "text": "squared-- which I think\nthe rest of the algorithm is N squared-- the whole\nalgorithm will be N cubed because you just run\nthis over and over",
    "start": "4266809",
    "end": "4272635"
  },
  {
    "text": "for each possible first fold. We don't have a great theory\nto find the first fold. Just try them all.",
    "start": "4272635",
    "end": "4278270"
  },
  {
    "text": "That's step one. Step two-- that's the only\nguess we're going to make.",
    "start": "4278270",
    "end": "4285710"
  },
  {
    "text": "Fold down to convex hull. This is a central idea.",
    "start": "4285710",
    "end": "4292389"
  },
  {
    "text": "So we have this polygon\nwe want to make. There's all this\nextra blank paper.",
    "start": "4292390",
    "end": "4298049"
  },
  {
    "text": "I don't like extra blank paper. Just get rid of it. Make lots of folds to fold\nthe blank paper onto itself",
    "start": "4298049",
    "end": "4303230"
  },
  {
    "text": "until it gets so tiny it just\ngoes slightly around the convex hull. Convex hull is the\nsmallest convex polygon",
    "start": "4303230",
    "end": "4309940"
  },
  {
    "text": "that contains your shape. So it'll be like that. It'll reduce the\npaper down to that.",
    "start": "4309940",
    "end": "4315630"
  },
  {
    "text": "And I do this a lot. I might as well. It makes the problem easier\nbecause I have less blank space",
    "start": "4315630",
    "end": "4321280"
  },
  {
    "text": "to worry about. Blank space is a problem\nbecause if I [? fold ?] blank space onto\na cut, it's bad. It's not allowed.",
    "start": "4321280",
    "end": "4326880"
  },
  {
    "text": " So the next thing we do is make\nthe best possible safe fold.",
    "start": "4326880",
    "end": "4336380"
  },
  {
    "text": " I need to define\nthat, but a safe fold",
    "start": "4336380",
    "end": "4343276"
  },
  {
    "text": "is just the folds\nwe're trying to make, which is locally they\nare lines of symmetry. So like this one was a good\nfold after I made this fold.",
    "start": "4343276",
    "end": "4351159"
  },
  {
    "text": "So this is-- all the\nright stuff here is gone. It's a good fold because\nit folds this on to this,",
    "start": "4351160",
    "end": "4356579"
  },
  {
    "text": "and it folds blank space\nonto this blank space. So anything that comes into-- on\ntop of each other is identical.",
    "start": "4356580",
    "end": "4362640"
  },
  {
    "text": "That's a safe fold. And repeat.",
    "start": "4362640",
    "end": "4370139"
  },
  {
    "text": "That's the algorithm. How does that work? ",
    "start": "4370140",
    "end": "4378750"
  },
  {
    "text": "Why does this work? So it's the obvious\nalgorithm, basically. It says make safe folds\nuntil you're done.",
    "start": "4378750",
    "end": "4385080"
  },
  {
    "text": "If you finish, then you're done. And then the answer's yes. If you don't finish-- which\nis a little hard to check",
    "start": "4385080",
    "end": "4391720"
  },
  {
    "text": "because you can always\nmake microscopic folds-- but you take the\nlimit and-- if it's possible to do this\nin polynomial time--",
    "start": "4391720",
    "end": "4398960"
  },
  {
    "text": "you find that out. Turns out I can't finish\nby making safe folds. Then you can show\nthat actually there",
    "start": "4398960",
    "end": "4405340"
  },
  {
    "text": "was no way to make that\npattern by simple folds. So let me give you an\nidea of why that's true.",
    "start": "4405340",
    "end": "4412790"
  },
  {
    "text": " After I make a single\nfold-- the first fold--",
    "start": "4412790",
    "end": "4419930"
  },
  {
    "text": "my picture looks like this. It's no longer a polygon. It's like half a polygon.",
    "start": "4419930",
    "end": "4425699"
  },
  {
    "text": "It ends at the\nboundary of the paper. It begins and ends with\nthe boundary of paper, and you have some\nchain in the middle.",
    "start": "4425700",
    "end": "4431703"
  },
  {
    "text": "We call this a passage. It's like a path\nyou wander along. And I want to somehow bring\nall those edges into alignment.",
    "start": "4431703",
    "end": "4437430"
  },
  {
    "text": " Here I'm already\nusing it as a polygon. If it weren't a polygon,\nthere might be more than one",
    "start": "4437430",
    "end": "4444008"
  },
  {
    "text": "of these. Now I want to make a fold. For example, this fold is\nsafe because it folds this",
    "start": "4444008",
    "end": "4449210"
  },
  {
    "text": "on to this, and it folds\nblank space onto blank space if I do it right. ",
    "start": "4449210",
    "end": "4458140"
  },
  {
    "text": "And keep doing that. Now when I make a fold\nlike this, what happens is I can think of this region\nthat I folded-- the smaller",
    "start": "4458140",
    "end": "4465810"
  },
  {
    "text": "side-- as disappearing. It just got absorbed\ninto the paper here.",
    "start": "4465810",
    "end": "4470940"
  },
  {
    "text": "So the graph that I was\ntrying to line up got smaller. That's clearly a good thing. Makes my problem easier.",
    "start": "4470940",
    "end": "4477020"
  },
  {
    "text": "The piece of paper I was\nfolding also got smaller. That's a good thing.",
    "start": "4477020",
    "end": "4482300"
  },
  {
    "text": "But that's not always true. Suppose you had a piece\nof paper like this,",
    "start": "4482300",
    "end": "4488744"
  },
  {
    "text": "which could happen\nafter a bunch folding, and then you fold\nalong a line like that because, for\nexample, your passage",
    "start": "4488745",
    "end": "4494880"
  },
  {
    "text": "looks like that or something. When I make the fold--\nthis has to go off.",
    "start": "4494880",
    "end": "4499910"
  },
  {
    "text": "When I make the fold I\nget this crazy thing. Not drawn to scale.",
    "start": "4499910",
    "end": "4506600"
  },
  {
    "text": "And this polygon does not\nfit inside this polygon. So my paper got\nbigger in some places.",
    "start": "4506600",
    "end": "4511909"
  },
  {
    "text": "And that's a worry, because\nnow I have the stuff-- maybe it happens\nto be blank space. Maybe there's other\njunk that got out here.",
    "start": "4511910",
    "end": "4518239"
  },
  {
    "text": "And now have to worry\nabout collisions with this bigger piece of paper. And this is always\nour sticking point,",
    "start": "4518240",
    "end": "4523960"
  },
  {
    "text": "but there's some\nmagic you can do. In fact, the picture\ncannot look like this.",
    "start": "4523960",
    "end": "4530409"
  },
  {
    "text": " Because, look, you've got\nsome portion of your passage",
    "start": "4530410",
    "end": "4536820"
  },
  {
    "text": "to the left of the crease. You've got some portion of\nthe passage to the right. One of them has to be shorter.",
    "start": "4536820",
    "end": "4542460"
  },
  {
    "text": "Plus, this is a\nline of symmetry. So wherever I have a portion\nof my passage over here,",
    "start": "4542460",
    "end": "4549680"
  },
  {
    "text": "I will have a portion\nof my passage over here until I run out of length. One of them is shorter. So the shorter one like this\none gets totally absorbed",
    "start": "4549680",
    "end": "4557360"
  },
  {
    "text": "by the larger one. So the shorter side\nalways disappears. So in this picture, I have\nthe long side of my passage,",
    "start": "4557360",
    "end": "4564620"
  },
  {
    "text": "and it's really a\nsubset of the original. If I reduce this\nto the convex hull,",
    "start": "4564620",
    "end": "4570330"
  },
  {
    "text": "like this, this\nstuff disappears. And in general, if you do\nthis fold down to convex hull,",
    "start": "4570330",
    "end": "4578430"
  },
  {
    "text": "this repeat goes\nback to step two. If you fold down\nto the convex hull, you can show that not only\ndoes your passage-- the thing",
    "start": "4578430",
    "end": "4585573"
  },
  {
    "text": "you want to cut out-- get\nsmaller, but you piece of paper also gets smaller. Guaranteed.",
    "start": "4585573",
    "end": "4590610"
  },
  {
    "text": "And once you know the paper get\nsmaller and your things you're trying to align get smaller, you\nknow that every move is safe.",
    "start": "4590610",
    "end": "4597739"
  },
  {
    "text": "So you never get stuck by\nfollowing this algorithm. This works for\npolygons with margin,",
    "start": "4597740",
    "end": "4603440"
  },
  {
    "text": "but not in any other situation\nas far as we can tell. ",
    "start": "4603440",
    "end": "4608626"
  },
  {
    "text": "Cool.  The last thing I\nwanted to leave you on",
    "start": "4608626",
    "end": "4614050"
  },
  {
    "text": "is going out a little way\nfrom regular 2D flat sheets",
    "start": "4614050",
    "end": "4620440"
  },
  {
    "text": "of paper. You can generalize\nand go up a dimension to folding polyhedra surface.",
    "start": "4620440",
    "end": "4629000"
  },
  {
    "text": "Here, a surface of a polyhedron. You've probably done this. You take a cereal box and\nyou can collapse it flat.",
    "start": "4629000",
    "end": "4635730"
  },
  {
    "text": "Is that always possible? It's called the flattening\nproblem, and the answer is yes.",
    "start": "4635730",
    "end": "4641210"
  },
  {
    "text": "And you can think of it\nas a fold and cut problem, because of the fold\nand cut problem, you have some polygon\nlike this diamond.",
    "start": "4641210",
    "end": "4647070"
  },
  {
    "text": "You make some\ncollection of folds that brings the boundary\nof the diamond to align.",
    "start": "4647070",
    "end": "4652406"
  },
  {
    "text": "So if you forget\nabout what's happening on the inside of\nthe paper-- you just look at the boundary\nof the paper-- you're folding that one-dimensional\nboundary so that it collapses",
    "start": "4652406",
    "end": "4661410"
  },
  {
    "text": "down to a single line. What I want to do is\nthis up a dimension.",
    "start": "4661410",
    "end": "4666840"
  },
  {
    "text": "I take a 3D cube of\npaper-- solid cube. I have embedded within\nit some polygons",
    "start": "4666840",
    "end": "4675769"
  },
  {
    "text": "that I want to bring\nto a common plane. And I want to fold the solid\ncube through four dimensions,",
    "start": "4675770",
    "end": "4684690"
  },
  {
    "text": "but flat so it ends up\nback in three dimensions. I get a different 3D solid,\nbut with multiple layers",
    "start": "4684690",
    "end": "4691280"
  },
  {
    "text": "right on top of each\nother-- little bit a fourth dimension\nhanging out there. But if I just look\nat what's happening",
    "start": "4691280",
    "end": "4696310"
  },
  {
    "text": "to the boundary\nof my polyhedron-- say I start with a dodecahedron\nor something embedded in there-- and I want\nto fold this thing",
    "start": "4696310",
    "end": "4702670"
  },
  {
    "text": "so all the sides\nof the dodecahedron come to a common plane. That is the 3D\nfolding cup problem.",
    "start": "4702670",
    "end": "4708210"
  },
  {
    "text": "It remains unsolved. I suspect it's possible to solve\neven with straight skeletons",
    "start": "4708210",
    "end": "4713390"
  },
  {
    "text": "and perpendiculars,\nbut it's really hard to draw the pictures. So we have not resolved\nthat one way or the other.",
    "start": "4713390",
    "end": "4720320"
  },
  {
    "text": "But the boundary\nproblem-- forget about what's happening to\nthe interior and the exterior of the dodecahedron. If you just look at the\nsurface of the dodecahedron,",
    "start": "4720320",
    "end": "4726886"
  },
  {
    "text": "that you can fold\nin 3D-- we think-- and you can show\nand burn in haze",
    "start": "4726886",
    "end": "4733500"
  },
  {
    "text": "from the complexity proof\na couple lectures ago, and also on this disk-packing\nmethod with our co-authors.",
    "start": "4733500",
    "end": "4740460"
  },
  {
    "text": "They prove just two\nyears ago that if you have any orientable manifold,\nwhich is things like polyhedron",
    "start": "4740460",
    "end": "4748720"
  },
  {
    "text": "but no Mobius strips, no Klein\nbundles, and other ugly things. They have to be\nmanifold, so you're not",
    "start": "4748720",
    "end": "4754940"
  },
  {
    "text": "allowed to join three triangles\ntogether along a single edge.",
    "start": "4754940",
    "end": "4760760"
  },
  {
    "text": "That would be forbidden. So it's locally flat. In such a case, you\ncan flatten the thing.",
    "start": "4760760",
    "end": "4767870"
  },
  {
    "text": "And the proof is very similar to\nthe disk-packing method of fold and cut, and in the\ntextbook we talk",
    "start": "4767870",
    "end": "4774570"
  },
  {
    "text": "about how do you apply\nthat to do something that's just like a sphere. A regular polyhedron. That's pretty easy to do\nwith the disk-packing method.",
    "start": "4774570",
    "end": "4781490"
  },
  {
    "text": "They generalize it\nto the case where you have polyhedral doughnuts\nand all sorts of fun things.",
    "start": "4781490",
    "end": "4789045"
  },
  {
    "text": "But there's tons of\nopen problems here. So we know how to\nflatten surfaces, and that's useful for things\nlike folding airbags flat.",
    "start": "4789045",
    "end": "4795190"
  },
  {
    "text": "But can you fold\nthe 3D solid flat? You can think of--\nwe have here 1D edges",
    "start": "4795190",
    "end": "4802530"
  },
  {
    "text": "which we are collapsing\nto a 1D line. There is also zero\ndimensional points here,",
    "start": "4802530",
    "end": "4809900"
  },
  {
    "text": "which we don't bring\nto a single point. It'd be nice if you could--\nthe generalized fold and cup",
    "start": "4809900",
    "end": "4815090"
  },
  {
    "text": "problem is you take a\nD dimensional thing, and you have all of\nthese-- there's 0, 1, 2,",
    "start": "4815090",
    "end": "4820180"
  },
  {
    "text": "3-- up to D dimensional\nparts to it-- or D minus\none-dimensional parts. You want to bring each of\nthem down into alignment",
    "start": "4820180",
    "end": "4826599"
  },
  {
    "text": "so that all the vertices\ncome to common point, all the edges come\nto a common line,",
    "start": "4826600",
    "end": "4831701"
  },
  {
    "text": "all the two-dimensional\nfaces come to a common plane, and so on up the\ndimension hierarchy.",
    "start": "4831702",
    "end": "4836820"
  },
  {
    "text": "That is the ultimate\nopen problem. I think we end the book with\nit, and it's totally unsolved.",
    "start": "4836820",
    "end": "4842890"
  },
  {
    "text": "Any questions?  That's folding\nand cutting paper, and next time we'll\nstart linkages.",
    "start": "4842890",
    "end": "4850000"
  },
  {
    "start": "4850000",
    "end": "4856661"
  }
]