[
  {
    "text": " [SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "5963"
  },
  {
    "start": "5964",
    "end": "13412"
  },
  {
    "text": "RACHEL ZHANG: OK. So what is GKR? ",
    "start": "13412",
    "end": "19092"
  },
  {
    "text": "Can you guys read this? Is this too big? Too small? It's fine? AUDIENCE: It's fine. ",
    "start": "19092",
    "end": "27512"
  },
  {
    "text": "RACHEL ZHANG: OK. So the idea is\ngiven a circuit C, we're going to-- instead of hash\ncomputing circuit C by yourself,",
    "start": "27512",
    "end": "34060"
  },
  {
    "text": "you can delegate\nit to a prover who would do the computation\nfor you and prove the computation is correct\nin an interactive protocol.",
    "start": "34060",
    "end": "41160"
  },
  {
    "text": "And the main idea of\nhow you can do it-- So let's say this is the depth\nD and size S. What you're",
    "start": "41160",
    "end": "52200"
  },
  {
    "text": "going to do is\nyou're going to take every single layer\nof the circuit,",
    "start": "52200",
    "end": "57210"
  },
  {
    "text": "extend it to a\nlow-degree extension. ",
    "start": "57210",
    "end": "63100"
  },
  {
    "text": "So is this going to be the hat. So you're basically going\nto take all the wire values on each layer, find a\nlow-degree extension of it,",
    "start": "63100",
    "end": "71530"
  },
  {
    "text": "and then you're going to have\nsome low-degree extension of each layer. The top layer is going to be the\nV1, then V1 layer, and so on.",
    "start": "71530",
    "end": "80420"
  },
  {
    "text": "The final layer\nis going to be VD. And the way GKR works is\nessentially as follows.",
    "start": "80420",
    "end": "85510"
  },
  {
    "text": "You're going to reduce some\nclaims about the top layer-- the upper layer-- to claims about layers below it. And you're going\nto keep doing this",
    "start": "85510",
    "end": "91230"
  },
  {
    "text": "until you reach the bottom\nlayer, at which point the verifier can\ncheck themselves. So at the beginning, you might\nhave that the output gate--",
    "start": "91230",
    "end": "99600"
  },
  {
    "text": "you want this to be equal to 0. You're going to reduce this,\nvia sum check protocol,",
    "start": "99600",
    "end": "105390"
  },
  {
    "text": "to two claims. So let's call this V11 equals,\nmaybe, the value of V11.",
    "start": "105390",
    "end": "113700"
  },
  {
    "text": "And also, the claim that\nthe low-degree extension on the second point--",
    "start": "113700",
    "end": "119160"
  },
  {
    "text": "so that's also equal to\nthe different value of you want it here. And this is [INAUDIBLE]\nassumption protocol.",
    "start": "119160",
    "end": "126540"
  },
  {
    "text": "And then you can do it again. So last time, [INAUDIBLE]\ntwo-to-two fashion. So we're going to reduce the\ntwo claims to two claims,",
    "start": "126540",
    "end": "133210"
  },
  {
    "text": "[INAUDIBLE]. ",
    "start": "133210",
    "end": "143722"
  },
  {
    "text": "I'm just going to keep going. At the end, you're going\nto reduce the assumption to the claim about\nthe output layer.",
    "start": "143722",
    "end": "149160"
  },
  {
    "text": "So maybe ZD1. ",
    "start": "149160",
    "end": "160950"
  },
  {
    "text": "And at this point in\ntime, this is just a low-degree extension\nof all the input gates, which is size n.",
    "start": "160950",
    "end": "167670"
  },
  {
    "text": "The verifier knows what\nall these inputs are, so they can compute the\nlow-degree extension by themselves. And so all together,\nthis is going",
    "start": "167670",
    "end": "173940"
  },
  {
    "text": "to take a prover time poly (S)\nto prove the computation's done",
    "start": "173940",
    "end": "179850"
  },
  {
    "text": "correctly to the verifier. And the verifier\nwill run, in time--",
    "start": "179850",
    "end": "185610"
  },
  {
    "text": "let's see it's going to\nbe D times polylog S,",
    "start": "185610",
    "end": "191190"
  },
  {
    "text": "plus n times maybe\npolylog S, also.  So this is what\nwe did last time.",
    "start": "191190",
    "end": "197340"
  },
  {
    "text": "Yeah. AUDIENCE: Can you go over how\nusing the same randomness help",
    "start": "197340",
    "end": "202459"
  },
  {
    "text": "you get the thing-- you just do all the way down? RACHEL ZHANG: Right. So the idea is,\ninstead of having",
    "start": "202460",
    "end": "208310"
  },
  {
    "text": "to run a different\nsubject protocol with independent randomness for\neach of these two claims, what you can do is use the same\nrandomness for both claims",
    "start": "208310",
    "end": "215600"
  },
  {
    "text": "simultaneously. And turns out that\nthe gates you have to check at the very bottom, at\nthe end of sum check protocol,",
    "start": "215600",
    "end": "221450"
  },
  {
    "text": "will be based on the\nrandom method that was used during from the\nverifier's point of view. So as long as the\nsame randomness",
    "start": "221450",
    "end": "227210"
  },
  {
    "text": "using both of these\nthings, then you'll have to use the same two final\nchecks at the very bottom of the sum check.",
    "start": "227210",
    "end": "232484"
  },
  {
    "text": " Yeah. OK.",
    "start": "232485",
    "end": "239030"
  },
  {
    "text": "Cool. And maybe I should\nalso just tell you-- yeah, I also wanted to\nwrite out sum check equation",
    "start": "239030",
    "end": "245510"
  },
  {
    "text": "just so we have it\nfor later because it's going to be important. Used up an entire board\nrange is kind of awkward.",
    "start": "245510",
    "end": "251340"
  },
  {
    "text": "So maybe I'll put\nit somewhere else. Yeah. Oh, it can move there.",
    "start": "251340",
    "end": "256420"
  },
  {
    "text": "Maybe? OK. I guess-- I told the camera man\nwe wouldn't need that board. But I'll just put it\nhere because it shouldn't",
    "start": "256420",
    "end": "262040"
  },
  {
    "text": "be important, I guess. Or it would be important for\nus, but we did last time. So hopefully, it won't be new.",
    "start": "262040",
    "end": "267350"
  },
  {
    "text": " So you're checking an\nelement of the ith layer.",
    "start": "267350",
    "end": "274970"
  },
  {
    "text": "You want to reduce it to 2 and\nthings in the previous layer. And so what you can do is you\ncan take an output gate and two",
    "start": "274970",
    "end": "281590"
  },
  {
    "text": "input gates, and it's going\nto be this giant thing. So whether or not it\nwas at gate times--",
    "start": "281590",
    "end": "297440"
  },
  {
    "text": "times this one-- times--\nwhether-- times the sum of it. ",
    "start": "297440",
    "end": "328458"
  },
  {
    "text": "And then you need to take\na low-degree extension. ",
    "start": "328458",
    "end": "334365"
  },
  {
    "text": "And so that's the equation. What's going to happen is you're\ngoing to essentially do a sum check with this entire thing\nhere as a polynomial in your sum",
    "start": "334365",
    "end": "341525"
  },
  {
    "text": "check. So we'll come back to this\nlater and we'll just leave it up for now. AUDIENCE: Sorry. What's the Q2? RACHEL ZHANG: Yeah, it's\na polynomial of degree--",
    "start": "341525",
    "end": "347603"
  },
  {
    "text": " I'm going to say it's,\nlike, the size of H, maybe, in each variable.",
    "start": "347603",
    "end": "353810"
  },
  {
    "text": "So individual degree\nsize h minus 1. Or just take it over--",
    "start": "353810",
    "end": "359879"
  },
  {
    "text": "to the M. And it's\ngoing to basically test the quality of z and p. So if z-- if p is\nin this hypercube,",
    "start": "359880",
    "end": "368440"
  },
  {
    "text": "then it should be 1, if and\nonly if p is equal to z, and then the low-degree\nextension of that. ",
    "start": "368440",
    "end": "378930"
  },
  {
    "text": "OK, so today we're going\nto ask some questions. So we knew how to do this. So last time, I\nshowed how to do this,",
    "start": "378930",
    "end": "384940"
  },
  {
    "text": "as long as we had Oracle access\nto the add and mult gates. So the goal of the first\npart of today's class",
    "start": "384940",
    "end": "392130"
  },
  {
    "text": "is to remove this Oracle access. We're going to show how\nto get these things. Actually, we have a little\nbit more in this board.",
    "start": "392130",
    "end": "398080"
  },
  {
    "text": "So I guess-- so question\none is how to get",
    "start": "398080",
    "end": "403860"
  },
  {
    "text": "these low-degree extensions. ",
    "start": "403860",
    "end": "411365"
  },
  {
    "text": "Maybe you guys can tell me. Do you have any ideas? How can we get these? ",
    "start": "411365",
    "end": "420751"
  },
  {
    "text": "So I feel like Arnan is\nbouncing, which clearly means he has something to say. AUDIENCE: Oh. [LAUGHTER]",
    "start": "420752",
    "end": "426193"
  },
  {
    "text": "Could you arithmetize\nthe circuit's [INAUDIBLE] succinct\ndescription? RACHEL ZHANG: OK, good. So maybe I'm going to say\nsomething like maybe you",
    "start": "426193",
    "end": "433440"
  },
  {
    "text": "can compute these\nthings yourself somehow, if you can arithmetize it. And we're going to see\nhow do this in a sec.",
    "start": "433440",
    "end": "440200"
  },
  {
    "text": "Another way to do it is we\nalready know how to do GKR. Like, we already know how\nto delegate a circuit.",
    "start": "440200",
    "end": "445820"
  },
  {
    "text": "So let's redelegate\nthe add and mult gates. So we're going to\nredelegate add and mult.",
    "start": "445820",
    "end": "457410"
  },
  {
    "text": "And this is, indeed, what they\ndo in the original GKR paper. But we're not going\nto do it today.",
    "start": "457410",
    "end": "462820"
  },
  {
    "text": "So this is another\nthing you could do. But today, we're going to\nshow how to compute them.",
    "start": "462820",
    "end": "468100"
  },
  {
    "text": "Actually, this is a bit\nweird because we're actually going to compute the low-degree\nextensions of these add and mult circuits.",
    "start": "468100",
    "end": "473620"
  },
  {
    "text": "We're actually going\nto compute a different, somewhat low-degree\npolynomial on these-- that share the same\nvalues on the hypercube.",
    "start": "473620",
    "end": "481360"
  },
  {
    "text": "So it's actually not going\nto be the canonical LDE.",
    "start": "481360",
    "end": "487120"
  },
  {
    "text": " I think last time,\nLeo had said something about-- can you use a different\nlow-degree polynomial?",
    "start": "487120",
    "end": "494957"
  },
  {
    "text": "And the answer here\nis, yes, and we're going to see application\nof that today. ",
    "start": "494957",
    "end": "501100"
  },
  {
    "text": "OK, cool. So the idea is-- so if you want to compute them-- so you can't compute the actual\ncanonical low-degree extension.",
    "start": "501100",
    "end": "507890"
  },
  {
    "text": "So what can you do? Well-- and the\nreason is basically",
    "start": "507890",
    "end": "514631"
  },
  {
    "text": "because if you compute\nthe add and mult gates-- because the circuit is\ntoo complicated for you to compute yourself.",
    "start": "514632",
    "end": "520729"
  },
  {
    "text": "So maybe here's an idea. What if, instead of computing-- doing GKR in the\noriginal circuit,",
    "start": "520730",
    "end": "526170"
  },
  {
    "text": "we do it on a much\nsimpler circuit that computes the\nsame functionality as a circuit you're\ntrying to-- that you want? ",
    "start": "526170",
    "end": "540850"
  },
  {
    "text": "So idea-- replace C with a\nsimpler to describe circuit.",
    "start": "540850",
    "end": "551029"
  },
  {
    "start": "551030",
    "end": "556340"
  },
  {
    "text": "And I guess by\nsimpler to describe, I just mean that add and mult\nshould be easily computable. ",
    "start": "556340",
    "end": "573440"
  },
  {
    "text": "And so let's use the\nuniversal circuit. So universal circuit is\ngoing to be a circuit that's going to take as inputs\nthe circuit that you're",
    "start": "573440",
    "end": "579498"
  },
  {
    "text": "trying to compute,\nalong with the input. And it's going to output-- it's going to simulate the\ncomputation of your circuit",
    "start": "579498",
    "end": "585310"
  },
  {
    "text": "C on the input x and\nthen compute C of x.",
    "start": "585310",
    "end": "590532"
  },
  {
    "text": "And the claim is going to be\nthat this universal circuit is going to have a simpler\ndescription, at least for the add and mult gates,\nthan the original circuit",
    "start": "590532",
    "end": "597571"
  },
  {
    "text": "because it's going\nto take us input like the description\nof the circuit. And then it's going to\nsimulate description, but all these simulation is\neasy to describe because it's",
    "start": "597572",
    "end": "604160"
  },
  {
    "text": "very general and very easy.  So maybe let's see\nhow this will work.",
    "start": "604160",
    "end": "610584"
  },
  {
    "text": " So you have this\nuniversal circuit here. It's going to look like this.",
    "start": "610585",
    "end": "618285"
  },
  {
    "text": "And it's going to take as input\na description of the circuit C, along with your input x.",
    "start": "618285",
    "end": "623940"
  },
  {
    "text": "And then it's going to run-- the hope is that this is\ngoing to be D times poly log--",
    "start": "623940",
    "end": "629945"
  },
  {
    "text": " maybe it should be-- OK. We'll talk about this later.",
    "start": "629945",
    "end": "636015"
  },
  {
    "text": "So this should\nbe, hopefully, not so much bigger than the\ncircuit C because you're going to want to do it efficiently.",
    "start": "636015",
    "end": "641020"
  },
  {
    "text": "What is this\ndescription C over here? This is-- yeah, maybe I should-- OK. ",
    "start": "641020",
    "end": "650810"
  },
  {
    "text": "So what does the circuit C? What should input\nto this be like? Well, it's basically going to be\na function that will tell you--",
    "start": "650810",
    "end": "658575"
  },
  {
    "text": " yeah, so I guess\nit would tell you-- for every single-- maybe\nthis should be an add 1",
    "start": "658575",
    "end": "666010"
  },
  {
    "text": "and then mult 1. So for both add and\nmult, it'll tell if, at a single location in\nthe original circuit, C--",
    "start": "666010",
    "end": "673125"
  },
  {
    "text": " if there is a gate\nof that form or not.",
    "start": "673125",
    "end": "678730"
  },
  {
    "text": "So it's going to be a\npretty large description. It's going to be\nsize 2 to the s. ",
    "start": "678730",
    "end": "685889"
  },
  {
    "text": "Does that make sense?  Yeah.",
    "start": "685889",
    "end": "691600"
  },
  {
    "text": "AUDIENCE: So the circuit\n[INAUDIBLE] size. We're going to give a\ndescription of size 2 to the s. RACHEL ZHANG: Yes.",
    "start": "691600",
    "end": "696813"
  },
  {
    "text": "We'll start with that. And as Ted is alluding to-- so\nwould not be so good for us, but we'll discuss how\nto do in a little bit. AUDIENCE: S this is just--",
    "start": "696813",
    "end": "702160"
  },
  {
    "text": "RACHEL ZHANG: Yeah. AUDIENCE: Just-- literally,\njust two-bit strings. RACHEL ZHANG: Yeah, yeah, yeah.",
    "start": "702160",
    "end": "707270"
  },
  {
    "text": "It's supposed to be really long. It's going to tell you what\nevery gate of the circuit looks like.",
    "start": "707270",
    "end": "712560"
  },
  {
    "text": "AUDIENCE: Didn't\npw1 and w2 range over the horizontal\ndistance of the circuit,",
    "start": "712560",
    "end": "718900"
  },
  {
    "text": "not the vertical distance? RACHEL ZHANG: Yeah, OK. Maybe we can have\npw1 and w2 range",
    "start": "718900",
    "end": "724570"
  },
  {
    "text": "over all the possible\ngates or something. So we can change the\nnotation a little bit. That's OK. ",
    "start": "724570",
    "end": "732870"
  },
  {
    "text": "OK. AUDIENCE: Sorry. Last question. RACHEL ZHANG: Yeah. AUDIENCE: I guess this\nis a very small detail,",
    "start": "732870",
    "end": "737950"
  },
  {
    "text": "but how do you handle\nknots at the input layer? RACHEL ZHANG: So what you can\ndo-- this is also, actually, a huge issue with the GKR\nprotocol, because you only",
    "start": "737950",
    "end": "743670"
  },
  {
    "text": "have add and mult gates. But you can do is you can have\n, and then also the flip of x or the not of x.",
    "start": "743670",
    "end": "749162"
  },
  {
    "text": "And then now you can\nsimulate everything. AUDIENCE: OK.  RACHEL ZHANG: OK.",
    "start": "749162",
    "end": "756019"
  },
  {
    "text": "So my claim is basically\nthat this universal circuit is going to be much\nsimpler to describe than the original\ncircuit, C. And maybe",
    "start": "756020",
    "end": "761540"
  },
  {
    "text": "let's just see why in,\nhopefully, a not too in detail view, but hopefully,\nwe can get an idea.",
    "start": "761540",
    "end": "766770"
  },
  {
    "text": "So the idea is-- let's say this is your\ncircuit C over here. ",
    "start": "766770",
    "end": "775297"
  },
  {
    "text": "It's going to be a bunch of\nlayers with a bunch of gates in each of the\nlayers, and they're going to each have\nsome functionality.",
    "start": "775297",
    "end": "781120"
  },
  {
    "text": " And so what the universal\ncircuit is basically going",
    "start": "781120",
    "end": "787399"
  },
  {
    "text": "to do is it's going to say-- I want you to compute this value\nof this circuit C gate here.",
    "start": "787400",
    "end": "794810"
  },
  {
    "text": "Let me look at all\nthe previous ones, because you don't know\nwhich one is a tattoo. So you're going to look at\nall the possible values,",
    "start": "794810",
    "end": "802250"
  },
  {
    "text": "and you're going to, then,\nsee what their circuit C says and then compute the appropriate\nfunction of the previous layer",
    "start": "802250",
    "end": "807560"
  },
  {
    "text": "based on what the\ncircuit C says. So in particular-- yeah.",
    "start": "807560",
    "end": "812610"
  },
  {
    "text": "So the particular\nin the ith layer-- so the value of the circuit-- of this thing in the ith\nlayer-- is going to be--",
    "start": "812610",
    "end": "820370"
  },
  {
    "text": "so maybe this is a layer,\nand this is a gate. ",
    "start": "820370",
    "end": "827940"
  },
  {
    "text": "And it's going to be a\nsum of possible gates in the previous layer\nof the following thing.",
    "start": "827940",
    "end": "833800"
  },
  {
    "text": "So it's going to be whether C-- ",
    "start": "833800",
    "end": "841939"
  },
  {
    "text": "so it's going to be\nwhether C has an add gate corresponding to the three\ngates you're picking. So this is J, And then\nmaybe K and K prime,",
    "start": "841940",
    "end": "850160"
  },
  {
    "text": "and then times the sum of them.",
    "start": "850160",
    "end": "857250"
  },
  {
    "text": "So it's a similar thing\nas in the GKR thing. We're going to have an\nadd and a mult condition.",
    "start": "857250",
    "end": "863940"
  },
  {
    "text": "So if it's an add gate, you're\ngoing to compute the sum. And if it's a mult\ngate, you're going",
    "start": "863940",
    "end": "868990"
  },
  {
    "text": "to compute the mult. Is that OK?",
    "start": "868990",
    "end": "883700"
  },
  {
    "text": "AUDIENCE: What is that inside\nthe parentheses on the add gate. RACHEL ZHANG: Yeah, OK. So this is going to be\nwhether the circuit is",
    "start": "883700",
    "end": "891290"
  },
  {
    "text": "an add gate at these\nparticular three gates-- J, K and K prime. And this is going to be\nthe values, V I plus 1K.",
    "start": "891290",
    "end": "899970"
  },
  {
    "text": "So it's what this value is. AUDIENCE: [INAUDIBLE] RACHEL ZHANG: Yeah,\nsorry So maybe this is a little bit small. ",
    "start": "899970",
    "end": "906010"
  },
  {
    "text": "OK. I don't really know how\nto make this bigger. ",
    "start": "906010",
    "end": "913520"
  },
  {
    "text": "Yeah. AUDIENCE: The subscript\non the C add-- I actually think of it\nas an input [? text. ?] RACHEL ZHANG: Yeah, exactly.",
    "start": "913520",
    "end": "918737"
  },
  {
    "text": "So these are both going to\nbe given from the description of the circuit C, which--\nthis will also have to take--",
    "start": "918737",
    "end": "924208"
  },
  {
    "text": "the description of\ncircuit C, and it's also going to read into here. AUDIENCE: And this\nis the same thing that's written on the\nboard [INAUDIBLE].",
    "start": "924208",
    "end": "929900"
  },
  {
    "text": "RACHEL ZHANG: Yeah, it's\nessentially the same thing. AUDIENCE: It's just not\n[INAUDIBLE] section. [INTERPOSING VOICES]",
    "start": "929900",
    "end": "934964"
  },
  {
    "text": " RACHEL ZHANG: Yeah. AUDIENCE: Sorry.",
    "start": "934964",
    "end": "940620"
  },
  {
    "text": "RACHEL ZHANG: No. AUDIENCE: I'm still\nhung up on this. C add is defined over three\ninputs, all of which range",
    "start": "940620",
    "end": "946350"
  },
  {
    "text": "from 1 to [? test, ?] right? RACHEL ZHANG: Sure. OK. Yeah. AUDIENCE: Why is it a size 3?",
    "start": "946350",
    "end": "951519"
  },
  {
    "text": "So it's essentially the same\n[INAUDIBLE] size like s cubed. RACHEL ZHANG: Good. Yes. Yes. So we're going to have to\ndeal with that in a bit.",
    "start": "951520",
    "end": "957310"
  },
  {
    "text": "So yeah, instead of saying\nthat the circuit C here is-- the description of\ncircuit C is too big-- we're going to have to\ndo something for that.",
    "start": "957310",
    "end": "963760"
  },
  {
    "text": "AUDIENCE: Wait. So why is it 2 the s, though? Is it because we have-- RACHEL ZHANG: Sorry. It's just s. It's just S.",
    "start": "963760",
    "end": "969050"
  },
  {
    "text": "AUDIENCE: OK. RACHEL ZHANG: You're right. You're right. It's just S. AUDIENCE: Wait. Wasn't it S-cubed?",
    "start": "969050",
    "end": "974310"
  },
  {
    "text": "RACHEL ZHANG: S-cubed? Oh, yes. [LAUGHTER]",
    "start": "974310",
    "end": "980164"
  },
  {
    "text": " Does that makes sense? Sorry. I tried to explain that\n[INAUDIBLE] really badly.",
    "start": "980164",
    "end": "985590"
  },
  {
    "text": "But you're basically trying to\nsimulate the computation of C. And to do that you're going\nto introduce a new circuit--",
    "start": "985590",
    "end": "993660"
  },
  {
    "text": "like, a new small circuit\nfor every single gate in your universal circuit that\nwill look at the previous layer",
    "start": "993660",
    "end": "999335"
  },
  {
    "text": "and then compute appropriate\nfunctionality based on [INAUDIBLE] is supposed to say.",
    "start": "999335",
    "end": "1004860"
  },
  {
    "text": "OK. AUDIENCE: Rachel? RACHEL ZHANG: Yeah. AUDIENCE: What is the\np [INAUDIBLE] on this? RACHEL ZHANG: Yeah, OK.",
    "start": "1004860",
    "end": "1010710"
  },
  {
    "text": "AUDIENCE: On the\noff-camera board. RACHEL ZHANG: Yeah, yeah. So-- yeah-- so these are\nall going to be H to the m.",
    "start": "1010710",
    "end": "1016560"
  },
  {
    "text": "H to the m here is going to\nbe the size of, like, a layer. AUDIENCE: OK, OK. RACHEL ZHANG: So\nit's going to be--",
    "start": "1016560",
    "end": "1022188"
  },
  {
    "text": "so p you can think of as\nbeing in the ith layer. And then omega 1 and omega 2\nare in the i plus 1th layer.",
    "start": "1022188",
    "end": "1027603"
  },
  {
    "text": "AUDIENCE: I see. I see. And p to z is just an\narbitrary [INAUDIBLE]. RACHEL ZHANG: Yeah.",
    "start": "1027603",
    "end": "1032849"
  },
  {
    "text": "AUDIENCE: OK. RACHEL ZHANG: Yeah. AUDIENCE: So that summation\nthere really represents--",
    "start": "1032849",
    "end": "1040150"
  },
  {
    "text": "you're trying to compute that\nsummation with a bunch of gates. RACHEL ZHANG: Yeah, yeah, yeah. So this is going-- this is\ngoing to correspond to--",
    "start": "1040150",
    "end": "1045855"
  },
  {
    "text": "I'm sorry. This is really bad. Yeah, this is\ngoing to correspond to a pretty big circuit\nhere that's going",
    "start": "1045855",
    "end": "1051490"
  },
  {
    "text": "to look at the previous\nlayer, and-- yeah. AUDIENCE: So the depth of\nU could be, like, the depth of that mini circuit times p.",
    "start": "1051490",
    "end": "1056770"
  },
  {
    "text": "RACHEL ZHANG: Exactly. Yeah, that's perfect. So-- yeah.",
    "start": "1056770",
    "end": "1069170"
  },
  {
    "text": "So I don't know\nwhat your name is. AUDIENCE: Gabe. RACHEL ZHANG: Gabe. So as Gabe said, the depth of\nthe circuit is going to be--",
    "start": "1069170",
    "end": "1075440"
  },
  {
    "text": "the depth of the original\ncircuit of C times this depth here.",
    "start": "1075440",
    "end": "1080748"
  },
  {
    "text": "So the question is,\nwhat is the depth here? ",
    "start": "1080748",
    "end": "1085920"
  },
  {
    "text": "Thoughts? ",
    "start": "1085920",
    "end": "1091510"
  },
  {
    "text": "Roughly. I don't know. [INAUDIBLE]  AUDIENCE: log S?",
    "start": "1091510",
    "end": "1096933"
  },
  {
    "text": "RACHEL ZHANG: Yeah OK. Something has log S. Like,\npolylog, maybe, at worse. ",
    "start": "1096933",
    "end": "1110180"
  },
  {
    "text": "Yeah, and the reason is because\nyou can think of this big sum as a binary tree of sums.",
    "start": "1110180",
    "end": "1117890"
  },
  {
    "text": "And then at the very\nbottom of this binary tree, you have poly S many\nthings you're looking at.",
    "start": "1117890",
    "end": "1125095"
  },
  {
    "text": " So this entire depth,\nbecause it's a binary tree,",
    "start": "1125095",
    "end": "1130250"
  },
  {
    "text": "is only going to be to\ndepth log S or something. AUDIENCE: What's U? RACHEL ZHANG: The depths\nof the universal circuit.",
    "start": "1130250",
    "end": "1135950"
  },
  {
    "text": "AUDIENCE: OK. Good. U. RACHEL ZHANG: Yeah. And what about the size\nof this universal circuit?",
    "start": "1135950",
    "end": "1142220"
  },
  {
    "start": "1142220",
    "end": "1150409"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] RACHEL ZHANG:\nYeah, so it's going to be the size of\noriginal circuit times,",
    "start": "1150410",
    "end": "1155730"
  },
  {
    "text": "like, poly S, so it's\njust going to be poly S. And the reason for that\nis because the size",
    "start": "1155730",
    "end": "1162350"
  },
  {
    "text": "of this universal circuit\nis basically going to be-- for every gate of\nthe original circuit, you have-- this poly S-size\ncircuit's replacing it.",
    "start": "1162350",
    "end": "1169960"
  },
  {
    "text": "So you get to poly\nS size here and then times the size of the\ncircuit, which is poly S.",
    "start": "1169960",
    "end": "1176820"
  },
  {
    "text": "OK. So this is going to be like\npart of the circuit we're going to end up\nusing to delegate, instead of using the\noriginal circuit, C.",
    "start": "1176820",
    "end": "1184040"
  },
  {
    "text": "I guess the last claim that I\nmade is that this circuit U is much simpler to describe\nthan the circuit C.",
    "start": "1184040",
    "end": "1190435"
  },
  {
    "text": "So particularly,\nthe add and mult gates are easily computable\nor describable, very simply.",
    "start": "1190435",
    "end": "1197430"
  },
  {
    "text": "And maybe let's look at this\nand think about it for a minute. ",
    "start": "1197430",
    "end": "1205130"
  },
  {
    "text": "So I guess if you're\ntrying to figure out-- I have-- I'm trying to\nlook at this specific gate,",
    "start": "1205130",
    "end": "1211550"
  },
  {
    "text": "and I want to see if it's,\nlike, an add or mult gate. But you do, and you figure out\nwhere in this tree you are. And you can be like, oh, look,\nI'm part of this binary tree.",
    "start": "1211550",
    "end": "1218948"
  },
  {
    "text": "It should be an add gate. And then you're like,\nOK, I'm an add gate. Or you can read,\nmaybe, in the leaves. You're like, oh, this\nparticular gate corresponds",
    "start": "1218948",
    "end": "1226130"
  },
  {
    "text": "to some add gate in the original\ncircuit times some values.",
    "start": "1226130",
    "end": "1231762"
  },
  {
    "text": "And you figure out-- oh, this is\nsupposed to be multiplied or add gate or something. The point is that this\nis a pretty easy function",
    "start": "1231762",
    "end": "1237810"
  },
  {
    "text": "to describe. In particular-- so there's going\nto be low-depth Boolean formulas",
    "start": "1237810",
    "end": "1245460"
  },
  {
    "text": "that compute both the\nadd and mult gates. So there's going to be\na Boolean formula of--",
    "start": "1245460",
    "end": "1254050"
  },
  {
    "text": "let's see. So it's going to be a\nBoolean formula of size",
    "start": "1254050",
    "end": "1262019"
  },
  {
    "text": "polylog S that computes the\nadd and mult functionalities.",
    "start": "1262020",
    "end": "1276460"
  },
  {
    "text": " So it tells you that-- within U, these--\nbecause they're",
    "start": "1276460",
    "end": "1284590"
  },
  {
    "text": "small formulas that tell you\nwhether a particular gate in U is an add or mult gate.",
    "start": "1284590",
    "end": "1289919"
  },
  {
    "text": "That good? Cool And so now,\nlike these formulas",
    "start": "1289920",
    "end": "1298850"
  },
  {
    "text": "are much easier to compute\nthan the previous add and mult. So ostensibly, the verifier\ncan do it themselves now.",
    "start": "1298850",
    "end": "1306590"
  },
  {
    "text": "So-- AUDIENCE: [INAUDIBLE] RACHEL ZHANG: Yeah. AUDIENCE: Can you\nuse [INAUDIBLE]?",
    "start": "1306590",
    "end": "1311962"
  },
  {
    "text": "RACHEL ZHANG: OK. So I guess, originally-- yeah, originally-- so how\ndo you compute add and mult?",
    "start": "1311962",
    "end": "1317280"
  },
  {
    "text": "We're going to-- I\ndidn't write it yet, but you're going to assume that\nz is a logspace-uniform circuit,",
    "start": "1317280",
    "end": "1323799"
  },
  {
    "text": "which means that you-- you\ncan do maybe up to time poly S computation to compute\nit, which is too much.",
    "start": "1323800",
    "end": "1331590"
  },
  {
    "text": "Here, since the circuit-- the\nformula is only of size polylog, you can compute it yourself.",
    "start": "1331590",
    "end": "1337348"
  },
  {
    "text": "So then when you're doing\nGKR in the universal circuit, you just have to do a small\ncomputation as opposed to the big one.",
    "start": "1337348",
    "end": "1343900"
  },
  {
    "text": "Yeah. AUDIENCE: Are these--\nif we add [INAUDIBLE] mults it's a logspace uniform? RACHEL ZHANG: I guess maybe a\nlog logspace uniform, right?",
    "start": "1343900",
    "end": "1351875"
  },
  {
    "text": "Is that how it works? [LAUGHS] I mean, there's\nis polylog, right?",
    "start": "1351875",
    "end": "1358290"
  },
  {
    "text": "So basically, what\nI mean by this is you can feed in any\np omega 1 and omega 2",
    "start": "1358290",
    "end": "1363990"
  },
  {
    "text": "and then compute a\nformula of this size and it'll tell you\nwhat the answer is. So it's only polylog size.",
    "start": "1363990",
    "end": "1369655"
  },
  {
    "text": "So you only have to-- AUDIENCE: Does there\nexist a formula such that, for all\np1, omega 1, omega 2-- RACHEL ZHANG: Yeah. AUDIENCE: --the formula\ncomputes it, correctly?",
    "start": "1369655",
    "end": "1376588"
  },
  {
    "text": "RACHEL ZHANG: Yeah, yeah. AUDIENCE: Right. But-- yeah. The naive way I would do it\nis advice of polylog size. But I'm assuming there's a\nway to make it-- to get rid",
    "start": "1376588",
    "end": "1383390"
  },
  {
    "text": "of this advice, right? [INAUDIBLE] RACHEL ZHANG: Yeah, I think\nit's log, log uniform.",
    "start": "1383390",
    "end": "1390150"
  },
  {
    "text": "AUDIENCE: I think it's\njust, like, [? max ?] If-- to figure out what\nlevel i is to figure out what",
    "start": "1390150",
    "end": "1395889"
  },
  {
    "text": "[INAUDIBLE] is. AUDIENCE: [INAUDIBLE]\nuniversal circuit. AUDIENCE: Yeah, that's right. Yeah, that is. ",
    "start": "1395890",
    "end": "1412988"
  },
  {
    "text": "AUDIENCE: Oh, the size\nfor the universal circuit. RACHEL ZHANG: Yeah. AUDIENCE: OK. OK, I understand.",
    "start": "1412988",
    "end": "1420150"
  },
  {
    "text": "RACHEL ZHANG: Yeah, maybe-- just\nto summarize what we've done, we've essentially\nreplaced this C, which has complicated add\nand mult gate description,",
    "start": "1420150",
    "end": "1427650"
  },
  {
    "text": "with a universal circuit,\nwhich has a much simpler add and mult gate description. And then, now, what\nwe're going to do is we're going to run GKR on\nthe universal circuit instead",
    "start": "1427650",
    "end": "1435090"
  },
  {
    "text": "of the original circuit, C.\nThe output is still the same because the universal circuit\nwill simulate C and compute",
    "start": "1435090",
    "end": "1440130"
  },
  {
    "text": "C of x. But now, the verifier\ncan, themselves, compute. add and mult.",
    "start": "1440130",
    "end": "1446272"
  },
  {
    "text": "AUDIENCE: But the input [? N ?]\nwould increase because you have to write the description. RACHEL ZHANG: Good, good.",
    "start": "1446272",
    "end": "1452410"
  },
  {
    "text": "Yeah, OK. ",
    "start": "1452410",
    "end": "1458913"
  },
  {
    "text": "So now, we're going to run a\nCPR on U. You can have U of C",
    "start": "1458913",
    "end": "1464211"
  },
  {
    "text": "because it's on the circuit-- this is U, instead\nof C. So issues.",
    "start": "1464212",
    "end": "1471110"
  },
  {
    "text": " Maybe I should also write-- ",
    "start": "1471110",
    "end": "1494830"
  },
  {
    "text": "So issues. So one is that-- that Arnan pointed out-- which is that the input\nis now really large.",
    "start": "1494830",
    "end": "1501315"
  },
  {
    "text": " So issue one-- input is large.",
    "start": "1501315",
    "end": "1507045"
  },
  {
    "start": "1507045",
    "end": "1521050"
  },
  {
    "text": "And if you remember\nfrom the GKR protocol, the verifier at the very end\nhas to compute some points",
    "start": "1521050",
    "end": "1526880"
  },
  {
    "text": "in the low-degree\nextension of the input. Before, we said, OK, the\ninput is only size n.",
    "start": "1526880",
    "end": "1531948"
  },
  {
    "text": "So they can compute\nit by themselves. It's only n times polylog\ntime to compute it. But now the input also has\nC, which is size S. So now",
    "start": "1531948",
    "end": "1541100"
  },
  {
    "text": "you have to actually spend\ntime poly S to compute the final layer, which is bad.",
    "start": "1541100",
    "end": "1547868"
  },
  {
    "text": "Like, we want the\nverifier to be efficient. Now we're back to square one. So we're going to\ndeal with this.",
    "start": "1547868",
    "end": "1554450"
  },
  {
    "text": "Any other issues? ",
    "start": "1554450",
    "end": "1563362"
  },
  {
    "text": "AUDIENCE: Sorry. In the GKR protocol, the add\ntimes poly S's, do I only need to compute a couple\nof bits in the input layer,",
    "start": "1563363",
    "end": "1570480"
  },
  {
    "text": "or do I need to compute\nthe entire input layer? RACHEL ZHANG: You\nneed to read it all because what\nyou're going to do is you're going to\nlook at the input layer",
    "start": "1570480",
    "end": "1577090"
  },
  {
    "text": "and then compute the\nlow-degree extension. And the only way\nyou can do something with the low-degree\nextension-- if you know everything in the coding.",
    "start": "1577090",
    "end": "1582570"
  },
  {
    "text": "Otherwise-- yeah Yeah.",
    "start": "1582570",
    "end": "1589433"
  },
  {
    "text": "AUDIENCE: Sorry. I just have a question. Before you [? have ?]\nissues, is it obvious that the verifier can compute\nlike add and mult tilde, given",
    "start": "1589433",
    "end": "1596539"
  },
  {
    "text": "that you can add, but like--? RACHEL ZHANG: Good, good. AUDIENCE: Oh, is that the issue? RACHEL ZHANG: Yeah.",
    "start": "1596540",
    "end": "1601970"
  },
  {
    "text": "So-- AUDIENCE: [LAUGHS] ",
    "start": "1601970",
    "end": "1612018"
  },
  {
    "text": "RACHEL ZHANG: Yeah. So Nikon's question\nis, how do you compute the low-degree\nextension of add and mult? Right now, I've only given you a\nBoolean formula to compute them.",
    "start": "1612018",
    "end": "1619679"
  },
  {
    "text": "So you can compute the\nvalues on the hypercube, but you can't\nnecessarily compute the logic extensions of them.",
    "start": "1619680",
    "end": "1625170"
  },
  {
    "text": "So we're going to see how\nto fix both of these things. And hopefully, if I'm honest,\nthese are the only two issues. So we'll see.",
    "start": "1625170",
    "end": "1631070"
  },
  {
    "text": " Is this OK so far? ",
    "start": "1631070",
    "end": "1652165"
  },
  {
    "text": "So issue one-- the\ninput is now all of the circuit, plus\nthe original input,",
    "start": "1652165",
    "end": "1657620"
  },
  {
    "text": "so it's very large. So right now, this\nis what our circuit looks like-- is U. Big part\nis C And small part is x.",
    "start": "1657620",
    "end": "1668300"
  },
  {
    "text": "So here's when the\nlogspace uniformity of C is going to come in. ",
    "start": "1668300",
    "end": "1676120"
  },
  {
    "text": "So if you ever read\nGKR statements, the theorem only\nholds for when C",
    "start": "1676120",
    "end": "1681160"
  },
  {
    "text": "is logspace-uniform,\nwhich means that there's some small description of it. ",
    "start": "1681160",
    "end": "1688899"
  },
  {
    "text": "So some small log S\nsize description of C.",
    "start": "1688900",
    "end": "1698630"
  },
  {
    "text": "And maybe let's call\nthis description this. And this is Turing machine M--",
    "start": "1698630",
    "end": "1705770"
  },
  {
    "text": " that, basically, if it\nreads in this description,",
    "start": "1705770",
    "end": "1714610"
  },
  {
    "text": "it can then output like\nthe entire circuit C. And this Turing machine\nshould run in logspace.",
    "start": "1714610",
    "end": "1725970"
  },
  {
    "text": "But it can run for\nas much as S time. ",
    "start": "1725970",
    "end": "1735270"
  },
  {
    "text": "So C is too big. Yeah. AUDIENCE: So M is, like, fixed. RACHEL ZHANG: Yeah, M is--",
    "start": "1735270",
    "end": "1740820"
  },
  {
    "text": "yeah, it's just a-- it's\nfixed Turing machine. Yeah. ",
    "start": "1740820",
    "end": "1746080"
  },
  {
    "text": "Yeah. AUDIENCE: Just to make sure,\nintuitively, why this matters-- it's because C has\nto have, somehow, nice structure for it to be\ndefined on inputs of different",
    "start": "1746080",
    "end": "1753940"
  },
  {
    "text": "lengths and stuff-- being non-uniform? RACHEL ZHANG: I think one main\nthing is that the verifier needs",
    "start": "1753940",
    "end": "1760750"
  },
  {
    "text": "to be able to know what C is\nbecause like in order to get get on the circuit C\nfor the verifier,",
    "start": "1760750",
    "end": "1766520"
  },
  {
    "text": "they need to have some way\nof describing the circuit, in some sense. This is basically saying, the\ncircuit has to be like log size",
    "start": "1766520",
    "end": "1773980"
  },
  {
    "text": "so that the verifier can hold\nit and have some way of knowing what circuit C is. AUDIENCE: I guess\nI'm trying to think",
    "start": "1773980",
    "end": "1780190"
  },
  {
    "text": "about what kinds of circuits\nare excluded by this-- circuits that-- basically,\nyou have to write out all--",
    "start": "1780190",
    "end": "1785440"
  },
  {
    "text": "the entire truth\ntable to describe. Is that what we're\ntrying to get rid of? RACHEL ZHANG: So I think Ted is\nour local complexity theorist,",
    "start": "1785440",
    "end": "1791990"
  },
  {
    "text": "so I'm going to-- AUDIENCE: This is\nthe door I want. Basically, the\ncircuit [INAUDIBLE]. [INTERPOSING VOICES]",
    "start": "1791990",
    "end": "1798270"
  },
  {
    "text": "AUDIENCE: OK. AUDIENCE: You can't\nhardcode things, though. You can't hardcode a random\nstring or something like that.",
    "start": "1798270",
    "end": "1804010"
  },
  {
    "text": "AUDIENCE: Right.  AUDIENCE: Yeah, [INAUDIBLE]\ncircuit [INAUDIBLE].",
    "start": "1804010",
    "end": "1809728"
  },
  {
    "text": " RACHEL ZHANG: So C is large.",
    "start": "1809728",
    "end": "1815070"
  },
  {
    "text": "And the problem was that reading\nthis entire thing is too much. But we have a short\ndescription of C.",
    "start": "1815070",
    "end": "1820440"
  },
  {
    "text": "So let's also, maybe, have a\ncircuit that computes C. Maybe",
    "start": "1820440",
    "end": "1825605"
  },
  {
    "text": "we'll call this\nM just because we have a Turing machine called M,\nbut it's not a Turing machine. It's a circuit. And this circuit will take,\nas input, the description C,",
    "start": "1825605",
    "end": "1834330"
  },
  {
    "text": "with the things\naround it, and then it will output the entire\ncircuit description.",
    "start": "1834330",
    "end": "1839520"
  },
  {
    "text": "And that will feed into the\nuniversal gate universal K ?] that we just talked about. ",
    "start": "1839520",
    "end": "1844640"
  },
  {
    "text": "So this circuit here\nis our circuit C prime that we will actually\nbe delegating on. ",
    "start": "1844640",
    "end": "1856590"
  },
  {
    "text": "And just to be clear,\nwhich ones are the inputs? The inputs are this-- this description\nof z and also x.",
    "start": "1856590",
    "end": "1862750"
  },
  {
    "text": "Like, this entire C here is\nnow wrapped into the circuit. Yeah. AUDIENCE: I put the\nnotation-- like M,",
    "start": "1862750",
    "end": "1868650"
  },
  {
    "text": "parentheses, bracket C equals C.\nSo what do you mean by equal C? Like-- RACHEL ZHANG: Yeah. AUDIENCE: --is there some other\ndescription of the circuit,",
    "start": "1868650",
    "end": "1875250"
  },
  {
    "text": "or would say the Turing\nmachine is able to run the circuit on any [INAUDIBLE]? RACHEL ZHANG: So it will run on\nlog S space and up to S time,",
    "start": "1875250",
    "end": "1884070"
  },
  {
    "text": "and then it can output any\ngate of the circuit you want. AUDIENCE: Any gate of the-- RACHEL ZHANG: Yeah, and maybe\nif you have an output here",
    "start": "1884070",
    "end": "1889919"
  },
  {
    "text": "that's separate from its actual\nspace that you can compute on compute on, ?] you can\njust output the gate by one.",
    "start": "1889920",
    "end": "1895860"
  },
  {
    "text": "AUDIENCE: Oh, OK. So you say equal C\nmeans find the gate. RACHEL ZHANG: Sure. Yeah.",
    "start": "1895860",
    "end": "1900960"
  },
  {
    "text": "I'll put in the\ndescription of C, or description of the\ngates of C So output gates.",
    "start": "1900960",
    "end": "1907040"
  },
  {
    "text": " Yeah.",
    "start": "1907040",
    "end": "1912110"
  },
  {
    "text": "AUDIENCE: If you're\njust unrolling M, isn't that really deep? RACHEL ZHANG: Good, good. OK, yeah.",
    "start": "1912110",
    "end": "1917280"
  },
  {
    "text": "So what's the depth of this? So-- OK, M can run\nin time up to S. So this could, ostensibly,\nbe depth S, which",
    "start": "1917280",
    "end": "1923487"
  },
  {
    "text": "is bad because our\nverifier would have to depend on the depth also. ",
    "start": "1923487",
    "end": "1929660"
  },
  {
    "text": "Well, it turns out you\ncan do it in depth log S. And I'm not going to\ntell you how to do it. You're going to tell\nme by the end of class.",
    "start": "1929660",
    "end": "1936153"
  },
  {
    "text": "So that's the goal, by 3:00 PM. And this will also be size\nS. So we'll get there.",
    "start": "1936153",
    "end": "1947020"
  },
  {
    "text": "But it'll be your\njob to convince me. It's not my job to convince you. ",
    "start": "1947020",
    "end": "1953720"
  },
  {
    "text": "Cool. Anything else? Yeah. AUDIENCE: How do you turn this\nTuring machine into a circuit? RACHEL ZHANG: Good. OK. You'll tell me.",
    "start": "1953720",
    "end": "1958940"
  },
  {
    "text": " It's the weekend, so\nthe weekend don't worry.",
    "start": "1958940",
    "end": "1965910"
  },
  {
    "text": "I think you'll be able to figure\nit out at the end of class. ",
    "start": "1965910",
    "end": "1974620"
  },
  {
    "text": "And then the other\nclaim is that this is-- has easy add and mult gates. And also-- you'll also tell\nme that by the end of class.",
    "start": "1974620",
    "end": "1982840"
  },
  {
    "text": "So basically, the\ncircuit is going to have all the nice\nproperties you want. It's going to be depth, log S\nsize S. The whole circuit-- now,",
    "start": "1982840",
    "end": "1988840"
  },
  {
    "text": "C prime is going to be size poly\nS because it was also size poly S. This should probably be\npoly S, not just size S.",
    "start": "1988840",
    "end": "1999410"
  },
  {
    "text": "And then total depth is going to\nbe, like, poly log S. So-- yeah. AUDIENCE: The statement\nis, like, truth table",
    "start": "1999410",
    "end": "2004740"
  },
  {
    "text": "of M on C equals C-- on bracket C equals\nC. So do we need",
    "start": "2004740",
    "end": "2010821"
  },
  {
    "text": "size of C different copies\nof M [INAUDIBLE] bits? RACHEL ZHANG: Sure. Yeah, yeah. Sure. AUDIENCE: [INAUDIBLE]\nall of them?",
    "start": "2010821",
    "end": "2016740"
  },
  {
    "text": "OK. RACHEL ZHANG: Sure. Yeah or you can think-- it's a thing-- you can have an\noutput tape, where you can just",
    "start": "2016740",
    "end": "2021810"
  },
  {
    "text": "output everything\nto, or another thing. AUDIENCE: Yeah. Yeah. I just-- I want to make\nsure that it doesn't break.",
    "start": "2021810",
    "end": "2028458"
  },
  {
    "text": "RACHEL ZHANG: Yeah. AUDIENCE: No, it doesn't break\n[INAUDIBLE] for me either. You can take it [INAUDIBLE]. RACHEL ZHANG: OK, yeah.",
    "start": "2028458",
    "end": "2033720"
  },
  {
    "text": "AUDIENCE: You might have\njust said this, actually, but [INAUDIBLE] on the line\nthat says log S size description of C--",
    "start": "2033720",
    "end": "2039570"
  },
  {
    "text": "like, C in brackets. Like, C in brackets is a string. It's not actually,\nlike, log S, right? It's, like-- S or\nsomething, isn't it?",
    "start": "2039570",
    "end": "2045940"
  },
  {
    "text": "Or-- RACHEL ZHANG: No, this is\ngoing to be a log S size. ",
    "start": "2045940",
    "end": "2052369"
  },
  {
    "text": "So the circuit C is\nsize S, but there's a short description that can\ntell you what circuit C is",
    "start": "2052370",
    "end": "2058129"
  },
  {
    "text": "going to look like. AUDIENCE: I guess we got\na family of circuits-- like, C1 through CM.",
    "start": "2058130",
    "end": "2063899"
  },
  {
    "text": "The description could be,\nlike, the number n that you should print or something. Like a copy of that.",
    "start": "2063900",
    "end": "2069808"
  },
  {
    "text": "RACHEL ZHANG: Sure. Yeah. AUDIENCE: Then why\nis that tree there? That log S-- wouldn't the\nnumber of leaves just be S?",
    "start": "2069808",
    "end": "2079206"
  },
  {
    "text": "[INAUDIBLE] M tree. RACHEL ZHANG: So this\ndescription is size log S, so this entire thing\nhere is log-S size.",
    "start": "2079206",
    "end": "2086190"
  },
  {
    "text": "AUDIENCE: Isn't that\na full [INAUDIBLE]? RACHEL ZHANG: I guess it\ngoes like this, more than--",
    "start": "2086190",
    "end": "2092204"
  },
  {
    "text": "yes, Alex. [INTERPOSING VOICES]  AUDIENCE: Yes, because\nthis is [INAUDIBLE] log S",
    "start": "2092204",
    "end": "2098060"
  },
  {
    "text": "and [INAUDIBLE] size log S.\nIt's roughly [? one ?] [? or ?] [? two ?] [? things. ?] AUDIENCE: [INAUDIBLE] circuit\nthat everyone could [INAUDIBLE].",
    "start": "2098060",
    "end": "2103626"
  },
  {
    "text": " AUDIENCE: There are conditions. [INAUDIBLE]",
    "start": "2103626",
    "end": "2109088"
  },
  {
    "text": "AUDIENCE: But we don't\nknow how to unroll it yet. When we unroll it,\nwe might [INAUDIBLE]. ",
    "start": "2109088",
    "end": "2121430"
  },
  {
    "text": "RACHEL ZHANG: Cool. OK, so the claim is\ngiven the circuit and given all these properties\nyou can prove to me later about,",
    "start": "2121430",
    "end": "2129750"
  },
  {
    "text": "then you can do GKR. So according to our-- I put it behind.",
    "start": "2129750",
    "end": "2135180"
  },
  {
    "text": "I should push it forward. So the prover is going\nto run in time poly S, where S is the size of\nthis new circuit, C prime.",
    "start": "2135180",
    "end": "2140900"
  },
  {
    "text": "This is size poly S.\nThis is size poly. So everything is poly S, and\npoly of polys, polys of poly S",
    "start": "2140900",
    "end": "2147170"
  },
  {
    "text": "for the prover. And the verifier is the depth\nof the circuit, plus the input",
    "start": "2147170",
    "end": "2152510"
  },
  {
    "text": "length. Steps here-- this is\ngoing to be, like-- I think we said\nit was, basically,",
    "start": "2152510",
    "end": "2159049"
  },
  {
    "text": "depth of the original\ncircuit times log. And this is going\nto be really small. It's going to be, like,\nlog S So it's going to be,",
    "start": "2159050",
    "end": "2164623"
  },
  {
    "text": "overall, the same depth\nof the original circuit. And then the input size\nis now log S plus n. So it's not so\nmuch bigger either.",
    "start": "2164623",
    "end": "2170800"
  },
  {
    "start": "2170800",
    "end": "2182810"
  },
  {
    "text": "OK, input. Maybe-- yeah, OK. So the second issue\nthat Nikon pointed out--",
    "start": "2182810",
    "end": "2188550"
  },
  {
    "text": "how do you compute the\nlow-degree extensions of the add and mult gates, whereas we only\ncurrently have Boolean formulas",
    "start": "2188550",
    "end": "2194730"
  },
  {
    "text": "that compute them on the-- I guess, in this case, it's\neven a Boolean hypercube. It's not even the h- hypercube.",
    "start": "2194730",
    "end": "2200130"
  },
  {
    "text": "Yeah. Yeah. AUDIENCE: [? Wait, I got another ?]\n[? question. ?] [INAUDIBLE] So the idea here was you wanted\nto ultimately get the bottom",
    "start": "2200130",
    "end": "2206900"
  },
  {
    "text": "layer to be size small? But still, this middle\nlayer that you get to that has C written on it when\nyou run the algorithm.",
    "start": "2206900",
    "end": "2214000"
  },
  {
    "text": "That's big. So at some point, you\nhave to be able to get low-degree evaluations\nin this middle layer?",
    "start": "2214000",
    "end": "2219368"
  },
  {
    "text": "RACHEL ZHANG: The\nprover would do it. You would never have to do it. AUDIENCE: I see. ",
    "start": "2219368",
    "end": "2226020"
  },
  {
    "text": "So the GKR-- the\nprotocol we had last time was only for circuits\nwith extensions that get smaller, right?",
    "start": "2226020",
    "end": "2231870"
  },
  {
    "text": "RACHEL ZHANG:\n[INAUDIBLE] Doesn't matter, because\nwhat-- the way I did is she extended every\nlayer to size S anyway.",
    "start": "2231870",
    "end": "2238682"
  },
  {
    "text": "So even if it\nwasn't S originally, she extended it to be big. So I think, sometimes, S can\nbe viewed as an upper bound",
    "start": "2238683",
    "end": "2244710"
  },
  {
    "text": "of each layer size, also. ",
    "start": "2244710",
    "end": "2252099"
  },
  {
    "text": "So second issue-- how do\nwe compute add and mult? So we have-- let me just write\ndown what I put up there.",
    "start": "2252100",
    "end": "2258590"
  },
  {
    "text": "I can push this up. So we have these two\nBoolean formulas. ",
    "start": "2258590",
    "end": "2284565"
  },
  {
    "text": "And it's going to\ncompute add and mult. This doesn't have a go on top\nbecause it's not a low-degree ?] extension. ",
    "start": "2284565",
    "end": "2312270"
  },
  {
    "text": "So, So this ?] is what\nphi of add looks like. It's a Boolean formula,\nso it's, like, a big tree.",
    "start": "2312270",
    "end": "2317540"
  },
  {
    "text": "Not big, actually. It's very small trees. It's, like, polylog size. I know output at the end.",
    "start": "2317540",
    "end": "2323660"
  },
  {
    "text": " Yeah, what you're like--",
    "start": "2323660",
    "end": "2330990"
  },
  {
    "text": "yeah, out of b1\noption something. So here's-- the\ninputs are all bits.",
    "start": "2330990",
    "end": "2337130"
  },
  {
    "text": "So it's going to\nbe 0, 1 to the--  I guess this should\nbe taking as input.",
    "start": "2337130",
    "end": "2343835"
  },
  {
    "text": "So the size of the circuit. And telling you whether or\nnot that particular gate is add or mult\ngate, so it should be like size of like log n\nof the size of the C prime.",
    "start": "2343835",
    "end": "2353972"
  },
  {
    "text": "So this should be-- ",
    "start": "2353972",
    "end": "2365430"
  },
  {
    "text": "OK.  Cool. And our goal is to compute--",
    "start": "2365430",
    "end": "2371233"
  },
  {
    "start": "2371233",
    "end": "2378109"
  },
  {
    "text": "and so, here, we have-- H is going to be an\nH. And so here, M",
    "start": "2378110",
    "end": "2384560"
  },
  {
    "text": "is log base H of S prime.",
    "start": "2384560",
    "end": "2394237"
  },
  {
    "text": "So this is what we want,\nand this is what we have. ",
    "start": "2394237",
    "end": "2400350"
  },
  {
    "text": "I want to repeat again. This is not the\nlow-degree extension. This is going to be a\nlow-degree extension. ",
    "start": "2400350",
    "end": "2407770"
  },
  {
    "text": "So what do we do for sharp set\nor sharpie Do you guys remember?",
    "start": "2407770",
    "end": "2414530"
  },
  {
    "text": "Yeah. AUDIENCE: Sorry. One more question. Is a low-degree\nextension-- but aren't low-degree extensions unique?",
    "start": "2414530",
    "end": "2420819"
  },
  {
    "text": "RACHEL ZHANG: So it's a\nextension that has low degree, but it's not that low. It's, like, somewhat low.",
    "start": "2420820",
    "end": "2426280"
  },
  {
    "text": "It's low to [INAUDIBLE]. AUDIENCE: So we're talking about\njust extension [INAUDIBLE]. RACHEL ZHANG: Yeah. And it's not going to\nbe the lowest degree,",
    "start": "2426280",
    "end": "2432452"
  },
  {
    "text": "but it will have\nlow enough degree We can call it low enough degree. [LAUGHTER] Yeah, low enough\ndegree extension.",
    "start": "2432452",
    "end": "2439820"
  },
  {
    "start": "2439820",
    "end": "2445312"
  },
  {
    "text": "So you can call this the LEID. [LAUGHTER]",
    "start": "2445312",
    "end": "2451298"
  },
  {
    "start": "2451298",
    "end": "2457770"
  },
  {
    "text": "OK. So it's not going to be\nthe low-degree extension, but it will be kind of. It'll be OK.",
    "start": "2457770",
    "end": "2463250"
  },
  {
    "text": "So what did we do for\nsharpie the other-- like, the first class. This is, like, going\nthree weeks ago.",
    "start": "2463250",
    "end": "2470510"
  },
  {
    "text": "The idea there, we took\na Boolean formula-- or a formula, right? OK, let me maybe\njog your memory.",
    "start": "2470510",
    "end": "2476460"
  },
  {
    "text": "So the idea was you want to\ncount the number of satisfied equations through some of CSP.",
    "start": "2476460",
    "end": "2482690"
  },
  {
    "text": "You first turn this into\nsome Boolean formula. And then you do something to it.",
    "start": "2482690",
    "end": "2489507"
  },
  {
    "text": "And then you can apply\nthe subject protocol. So what do you do in the middle? AUDIENCE: Arithmetize. RACHEL ZHANG: Arithmetize. Let's arithmetize is this thing.",
    "start": "2489507",
    "end": "2495785"
  },
  {
    "text": "So maybe, first,\nbefore we arithmetize, we should change\nthe input formats. So over here, we have h here. We have Boolean, like 0, 1.",
    "start": "2495785",
    "end": "2502170"
  },
  {
    "text": "But what you can\ndo is you can just take maybe a chunk of size--",
    "start": "2502170",
    "end": "2507240"
  },
  {
    "text": "sorry, this is a like\nreally minor detail. I think-- it's fine. Let's do it anyway. So this is going to be size--",
    "start": "2507240",
    "end": "2512930"
  },
  {
    "text": " log of size of h. And then-- so this is how many\nbits are going to be here.",
    "start": "2512930",
    "end": "2519560"
  },
  {
    "text": "And you're going to take h. And you can convert it\nvia some polynomial.",
    "start": "2519560",
    "end": "2524900"
  },
  {
    "text": "It's going to be a\ndegree h minus 1 poly.",
    "start": "2524900",
    "end": "2531329"
  },
  {
    "text": "It's going to convert any\nelement, h, of your bigger set, capital H, to 0 string.",
    "start": "2531330",
    "end": "2540608"
  },
  {
    "text": "And you can do this\na bunch of times. ",
    "start": "2540608",
    "end": "2551640"
  },
  {
    "text": "So now we have this weird thing\nwhere you're feeding in h,",
    "start": "2551640",
    "end": "2556920"
  },
  {
    "text": "and then you can use a degree\nlike h polynomial to convert it to 0, 1s.",
    "start": "2556920",
    "end": "2562900"
  },
  {
    "text": "And then now you can feed it\ninto this Boolean formula. And for this part, we're\ngoing to just arithmetize it.",
    "start": "2562900",
    "end": "2568620"
  },
  {
    "text": "So with arithmetizing--\njust to recall. So arithmetizing is you\ncan take an and gate",
    "start": "2568620",
    "end": "2578190"
  },
  {
    "text": "and replace it with the\npolynomial-- a plus b minus a times b.",
    "start": "2578190",
    "end": "2583530"
  },
  {
    "text": "And then-- sorry, this\nis-- should be in, not add. And then OR of a, b--",
    "start": "2583530",
    "end": "2591150"
  },
  {
    "text": "is this right? No. It's the way. This is a plus b minus a,\nb, and this is a times b.",
    "start": "2591150",
    "end": "2599110"
  },
  {
    "text": "So every time there's\na OR gate here, you can replace it\nby this polynomial. And if it's an AND gate, you can\nreplace it with this polynomial.",
    "start": "2599110",
    "end": "2606118"
  },
  {
    "text": " So maybe-- there's\nanother lemma that Yael",
    "start": "2606118",
    "end": "2612192"
  },
  {
    "text": "proved during the first\nclass that-- maybe it's been too long to\nremember, but maybe you can try to rethink about it. So the question is,\nwhat is the degree",
    "start": "2612192",
    "end": "2619940"
  },
  {
    "text": "of the final polynomial you get\nhere when you arithmetize it? ",
    "start": "2619940",
    "end": "2638307"
  },
  {
    "text": "AUDIENCE: Is it 2 to the depth? [INAUDIBLE] RACHEL ZHANG: Yeah,\nyeah, exactly. So it's a number of\ninput gates here.",
    "start": "2638308",
    "end": "2644270"
  },
  {
    "text": "I think that's the way she\nsaid it in the first class. It was just a number\nof input gates, times-- I guess, here, you had\nto times by the degree",
    "start": "2644270",
    "end": "2650315"
  },
  {
    "text": "of each thing you're feeding\nin, which is to be h minus 1. So it's going to be--",
    "start": "2650315",
    "end": "2657130"
  },
  {
    "text": "log S prime, which is the number\nof gates in the bottom, times-- let's just say h\ninstead of h minus 1",
    "start": "2657130",
    "end": "2662920"
  },
  {
    "text": "because it's a little shorter.  So this is going to\nbe the polynomial",
    "start": "2662920",
    "end": "2669390"
  },
  {
    "text": "that we're going to use for\nadd tilde and mult tilde. So it's not the low-degree\nextension but it's a good thing.",
    "start": "2669390",
    "end": "2678100"
  },
  {
    "text": "Yeah. AUDIENCE: Is this is over-- just to be clear. The extension is over-- is that right, or is\nthis over [INAUDIBLE]?",
    "start": "2678100",
    "end": "2684450"
  },
  {
    "text": "RACHEL ZHANG: Yeah, so\nI guess what's happening is you're first\nconverting your h over--",
    "start": "2684450",
    "end": "2690130"
  },
  {
    "text": "yeah. Sorry. Yeah. AUDIENCE: The way\nyou've drawn it, it makes it seem like you're\nconverting h into log h bits.",
    "start": "2690130",
    "end": "2696880"
  },
  {
    "text": "What if I just want to\nconvert it to a single? RACHEL ZHANG: So h\nis big. h is, like, 2 to the log h sort\nof information.",
    "start": "2696880",
    "end": "2703580"
  },
  {
    "text": "Or-- maybe it's the\nwrong information. So h comes from\nthis bigger set H.",
    "start": "2703580",
    "end": "2710119"
  },
  {
    "text": "So you want to\nconvert it to 0, 1 so you can feed it into\nthe Boolean formula. Otherwise, it's not\ntype-compatible. AUDIENCE: But the Boolean\nformula only takes in--",
    "start": "2710120",
    "end": "2719037"
  },
  {
    "text": "like, when you fix\na Boolean formula, it has a bunch of\ninputs that are bits. But each bit-- you\ncalled them [INAUDIBLE].",
    "start": "2719038",
    "end": "2727830"
  },
  {
    "text": "So how do you plug in\nlog h bits into an input that only have one bit?",
    "start": "2727830",
    "end": "2733112"
  },
  {
    "text": "RACHEL ZHANG: OK, Yeah. So you can convert this\ninto a number of bits. It's going to be\nlog h many bits.",
    "start": "2733112",
    "end": "2741510"
  },
  {
    "text": "AUDIENCE: The first\nlog n [INAUDIBLE]. AUDIENCE: [INAUDIBLE]",
    "start": "2741510",
    "end": "2746647"
  },
  {
    "text": " RACHEL ZHANG: Yeah,\nso the conversion",
    "start": "2746647",
    "end": "2752320"
  },
  {
    "text": "isn't from one h\nsymbol to one bit. It's going to be one\nh symbol to many bits. AUDIENCE: To many bits.",
    "start": "2752320",
    "end": "2757917"
  },
  {
    "text": "RACHEL ZHANG: Right. Many is going to 1 h bits. AUDIENCE: I thought\nwe just wanted",
    "start": "2757917",
    "end": "2763210"
  },
  {
    "text": "to find a big\nargument in circuits is that when you evaluate it,\nwhen the h and r is 0 and 1,",
    "start": "2763210",
    "end": "2770247"
  },
  {
    "text": "it's equivalent to the original. RACHEL ZHANG: OK. Yeah, sure. So if you want to\nkeep this-- this in 0, 1 so you can have big\nset here H just be 0, 1,",
    "start": "2770247",
    "end": "2776170"
  },
  {
    "text": "then this is just identity. You can just plug\nit straight in. I guess this conversion is-- I don't know.",
    "start": "2776170",
    "end": "2782410"
  },
  {
    "text": "Yael called the thing based on\nwhether H is like a bigger set. So I've just been\nconverting it to H",
    "start": "2782410",
    "end": "2787570"
  },
  {
    "text": "is pretty much that, basically. AUDIENCE: Oh, OK h\nis different than f. RACHEL ZHANG: Yeah.",
    "start": "2787570",
    "end": "2793248"
  },
  {
    "text": "AUDIENCE: OK. ",
    "start": "2793248",
    "end": "2801258"
  },
  {
    "text": "AUDIENCE: So you're literally\njust saying arithmetize, right? RACHEL ZHANG: I'm literally\njust saying arithmetize, yeah.",
    "start": "2801258",
    "end": "2806290"
  },
  {
    "text": "AUDIENCE: And it's still\na deterministic procedure. So you'll get to\nsome unique point,",
    "start": "2806290",
    "end": "2811675"
  },
  {
    "text": "given the same\n[INAUDIBLE] point, but it's just not the\nlow-degree extension. RACHEL ZHANG: Yeah. But it's low enough\ndegree, which",
    "start": "2811675",
    "end": "2818589"
  },
  {
    "text": "is going to be the number\nhere, because if it was a really low degree,\nit would just be h degree.",
    "start": "2818590",
    "end": "2824089"
  },
  {
    "text": "But this is a log factor bigger. But that's going to be OK for us\nbecause, as a verifier, that's",
    "start": "2824090",
    "end": "2830380"
  },
  {
    "text": "fine, I guess. Yeah.  AUDIENCE: I'm still a\nlittle bit confused about--",
    "start": "2830380",
    "end": "2836079"
  },
  {
    "text": "so b add basically computes\nfor one gate, right?",
    "start": "2836080",
    "end": "2843310"
  },
  {
    "text": "That essentially like\ncomputes-- given one gate it simulates the circuit for\none particular gate, right?",
    "start": "2843310",
    "end": "2849430"
  },
  {
    "text": "RACHEL ZHANG: No. So this formula-- so the input\nis going to be any particular",
    "start": "2849430",
    "end": "2854710"
  },
  {
    "text": "location in your entire circuit,\nand it's going to compute this log depth-- this polylog-size formula to\ntell you what that gate should",
    "start": "2854710",
    "end": "2861460"
  },
  {
    "text": "be-- whether that was\nthe add gate or not. So the input is not\nthe specific gate. It's going to be any of the\ngates in the entire circuit.",
    "start": "2861460",
    "end": "2869830"
  },
  {
    "text": "AUDIENCE: Yeah, so it's one\nformula for the entire circuit. RACHEL ZHANG: Yeah, one\nformula for the entire circuit.",
    "start": "2869830",
    "end": "2876612"
  },
  {
    "text": "AUDIENCE: But then why are you--  and so where exactly--",
    "start": "2876612",
    "end": "2882930"
  },
  {
    "text": "what-- we have these h's. And that means that we\nhave, technically, I guess the same number of inputs.",
    "start": "2882930",
    "end": "2888990"
  },
  {
    "text": "But we have blocks\nof inputs now. And how exactly\ndoes that change?",
    "start": "2888990",
    "end": "2894119"
  },
  {
    "text": "Because that means\nthat we have-- technically, we're combining--\nit just feels weird",
    "start": "2894120",
    "end": "2905300"
  },
  {
    "text": "because, in some sense, it feels\nlike we're mixing up information because we're saying--",
    "start": "2905300",
    "end": "2910339"
  },
  {
    "text": "we're assigning one thing-- one thing in a large space to a\nbunch of things in the Boolean",
    "start": "2910340",
    "end": "2918950"
  },
  {
    "text": "space, of the [INAUDIBLE]. In the large field-- h is\nin the larger field, right?",
    "start": "2918950",
    "end": "2924049"
  },
  {
    "text": "And we're saying that\nwe're just assigning one h to this spread of things\nin the [INAUDIBLE] field.",
    "start": "2924050",
    "end": "2929678"
  },
  {
    "text": "And it just feels--  I'm not [INAUDIBLE] a\nlot [? of things. ?]",
    "start": "2929678",
    "end": "2935480"
  },
  {
    "text": "RACHEL ZHANG: OK, yeah. So maybe the confusion is,\nlike, this part is 0, 1, so it's really just Boolean. And then over here, we\nhave this weird h going",
    "start": "2935480",
    "end": "2942207"
  },
  {
    "text": "into it, which is not Boolean. So, what is this\npolynomial doing with all this Boolean stuff? So that's part of the question?",
    "start": "2942207",
    "end": "2947972"
  },
  {
    "text": "Yeah, so maybe we should\nthink about it as in-- Let's first arithmetize\nthis circuit here. So we're going to get something\nover a large field already.",
    "start": "2947972",
    "end": "2955020"
  },
  {
    "text": "And now we're going to\nplug in these polynomials into the arithmetized\nthing, which is already going to be polynomial.",
    "start": "2955020",
    "end": "2960228"
  },
  {
    "text": "So we're-- it's like\npolynomial composition. AUDIENCE: But the thing is\nyou're not doing one to one.",
    "start": "2960228",
    "end": "2966510"
  },
  {
    "text": "You're doing one to many. RACHEL ZHANG: If you think about\nit, the amount of information is conserved because\nhere, there's H options--",
    "start": "2966510",
    "end": "2973140"
  },
  {
    "text": "capital H options-- for this h1. And then when you\nplug it up here, you now still have\nonly h options",
    "start": "2973140",
    "end": "2978860"
  },
  {
    "text": "for the resulting 0, 1 string. AUDIENCE: Well-- I\nmean, yes, but it also--",
    "start": "2978860",
    "end": "2986589"
  },
  {
    "text": "it felt that-- yes, but in the\nhigher field, we only have--",
    "start": "2986590",
    "end": "2992920"
  },
  {
    "text": "now we only have the log\nS prime different inputs from the larger field.",
    "start": "2992920",
    "end": "2999230"
  },
  {
    "text": "Now we're jamming\nthem into this-- or rather, we only have a few--",
    "start": "2999230",
    "end": "3006810"
  },
  {
    "text": "we have much less things-- the input from the larger field,\nand we're jamming that in.",
    "start": "3006810",
    "end": "3013170"
  },
  {
    "text": "And it just-- each\nelement is getting",
    "start": "3013170",
    "end": "3018190"
  },
  {
    "text": "is covering a bunch of bits,\nand those might [INAUDIBLE]. RACHEL ZHANG: So it turns out\nthat there is a unique mapping",
    "start": "3018190",
    "end": "3023900"
  },
  {
    "text": "from the string of h1 up to hm. And then the 0, 1 to\nthe log S prime string.",
    "start": "3023900",
    "end": "3031520"
  },
  {
    "text": "And so it's a bijection. You can go back and\nforth between them. So it's actually--\nthere's no clashing. It's going to be\njust one to one.",
    "start": "3031520",
    "end": "3038859"
  },
  {
    "text": "AUDIENCE: OK. I'm sorry. I'm just not following\nthe bijection. [INAUDIBLE] RACHEL ZHANG: Sure, OK.",
    "start": "3038860",
    "end": "3044500"
  },
  {
    "text": "Yeah. AUDIENCE: I guess that's\nwhere my [INAUDIBLE]. RACHEL ZHANG: Sure. OK, so what's going\nto happen is--",
    "start": "3044500",
    "end": "3050420"
  },
  {
    "text": "maybe let me zoom out of that. It's a little messy. So let's say you have--\nthis is going to be just--",
    "start": "3050420",
    "end": "3055812"
  },
  {
    "text": "because this is going to be\nour 0, 1 layer over here. AUDIENCE: I'm sorry again for-- RACHEL ZHANG: Yeah,\nno, you're fine. It's good to ask questions.",
    "start": "3055812",
    "end": "3060990"
  },
  {
    "text": "So this is going to be\nlog h number of bits. And the idea is we're\ngoing to take some h,",
    "start": "3060990",
    "end": "3069349"
  },
  {
    "text": "and we're going to map it here\nto log h many different bits.",
    "start": "3069350",
    "end": "3075600"
  },
  {
    "text": "So here-- one way\nyou can do this-- and you can write\nthis in binary. So maybe this-- maybe h\nhere is, like, size 8.",
    "start": "3075600",
    "end": "3082559"
  },
  {
    "text": "So this would correspond\nto a binary string. AUDIENCE: I get you can do that. But I'm like, why are\nwe allowed to do that?",
    "start": "3082560",
    "end": "3089550"
  },
  {
    "text": "And how exactly-- why\nexactly is this helping us? I understand that you can write\nit in binary on only that.",
    "start": "3089550",
    "end": "3096530"
  },
  {
    "text": "How exactly is this\nhelping us again? Because it feels like\nnow each element--",
    "start": "3096530",
    "end": "3102900"
  },
  {
    "text": "each big element in the\nextension-- like, before, we were just saying that\nwe're going to extend each",
    "start": "3102900",
    "end": "3109369"
  },
  {
    "text": "individual-- we're going to assume\nthat 0, 1 values are actually now\nextended values.",
    "start": "3109370",
    "end": "3115809"
  },
  {
    "text": "But then, now, we're doing\nit in such a way that-- because before, we were\nassuming these values",
    "start": "3115810",
    "end": "3122309"
  },
  {
    "text": "from the large circuit are-- ",
    "start": "3122310",
    "end": "3128388"
  },
  {
    "text": "we're going to say-- if happen to have, obviously,\nan AND gate, then we're",
    "start": "3128388",
    "end": "3134400"
  },
  {
    "text": "going to have one big value\nand another big value, and then multiply them\ntogether [INAUDIBLE]. RACHEL ZHANG: OK.",
    "start": "3134400",
    "end": "3139785"
  },
  {
    "text": "Can you hold that? How about if we\ntake a break now, and then we'll come\nback in five minutes, and then we'll do the\nsecond half of the class? I think that's\nall for this part.",
    "start": "3139785",
    "end": "3145030"
  },
  {
    "text": "And maybe we can talk offline. AUDIENCE: Sorry. RACHEL ZHANG: No,\nyou're totally fine. Let's talk about it then. [INTERPOSING VOICES]",
    "start": "3145030",
    "end": "3150690"
  },
  {
    "text": "So how many of you guys\nknow the theorem exists or what it says or anything?",
    "start": "3150690",
    "end": "3157950"
  },
  {
    "text": "AUDIENCE: Somehow,\nI already forgot. RACHEL ZHANG: OK, it's fine. We'll talk about it again. So this is a really\nfamous theorem. It's a great theorem.",
    "start": "3157950",
    "end": "3163515"
  },
  {
    "text": "It's very good. So we should talk about\nwhat these things are. So can one of the local\ncomplexity theorists people",
    "start": "3163515",
    "end": "3170369"
  },
  {
    "text": "tell you what IP is?  It doesn't have to be the\nlocal complexity theorist.",
    "start": "3170370",
    "end": "3175930"
  },
  {
    "text": "It could be any of you. [LAUGHS] AUDIENCE: Positive\nstatements about [INAUDIBLE]",
    "start": "3175930",
    "end": "3181810"
  },
  {
    "text": "the interactive protocol between\npolytime [INAUDIBLE] verifier and the\ncomputationally-bounded prover. ",
    "start": "3181810",
    "end": "3189628"
  },
  {
    "text": "RACHEL ZHANG: Unbounded prover.  [INTERPOSING VOICES]",
    "start": "3189628",
    "end": "3195130"
  },
  {
    "start": "3195130",
    "end": "3201410"
  },
  {
    "text": "Let's see. ",
    "start": "3201410",
    "end": "3218130"
  },
  {
    "text": "OK. Yeah. So-- OK, so IP is a class\nof all statements that have interactive proofs.",
    "start": "3218130",
    "end": "3223400"
  },
  {
    "text": "Interactive. That's right. OK, yeah. And the prover can\nbe unbounded time. And then the verifier's\nrunning on poly time.",
    "start": "3223400",
    "end": "3229937"
  },
  {
    "text": "So the interactive proof\nshould also be poly size. Otherwise, the\nverifier can't read it. And then what is PSPACE?",
    "start": "3229937",
    "end": "3234950"
  },
  {
    "start": "3234950",
    "end": "3243190"
  },
  {
    "text": "AUDIENCE: Polynomial\nspace-bounded TM languages? RACHEL ZHANG: Great. OK. Polyspace computations.",
    "start": "3243190",
    "end": "3249349"
  },
  {
    "text": "Yay. ",
    "start": "3249350",
    "end": "3255660"
  },
  {
    "text": "And so the easier direction-- so it was shown in 1992. These two things\nare actually equal.",
    "start": "3255660",
    "end": "3262030"
  },
  {
    "text": "So the easier direction to\nshow is that IP is in PSPACE. The way you do that\nis by simulating",
    "start": "3262030",
    "end": "3268120"
  },
  {
    "text": "all possible\ntranscripts, and then you can do some counting stuff. We won't go into the details. But in 1992, it was shown the\nother direction, also held.",
    "start": "3268120",
    "end": "3275950"
  },
  {
    "text": "So this is by Shamir in 1992.",
    "start": "3275950",
    "end": "3280980"
  },
  {
    "text": "So in fact, PSPACE\nis also in IP, which means that these two\nclasses are actually equal.",
    "start": "3280980",
    "end": "3288900"
  },
  {
    "text": "And to do this, he constructed\nan interactive proof for any PSPACE\ncomputation, and that",
    "start": "3288900",
    "end": "3295950"
  },
  {
    "text": "would give you the inclusion. So in particular, this means\nthat any PSPACE computation",
    "start": "3295950",
    "end": "3308940"
  },
  {
    "text": "has interactive proof. ",
    "start": "3308940",
    "end": "3314780"
  },
  {
    "text": "So going back to the\nconcept of delegation, which is what this class\nis entirely about-- how do you delegate\na computation",
    "start": "3314780",
    "end": "3320930"
  },
  {
    "text": "to a bigger prover, one\nyou can run very quickly? Well, this is delegation, right? OK.",
    "start": "3320930",
    "end": "3327480"
  },
  {
    "text": "It's basically like, I want\nyou to compute some small space computation, like polyspace. And I can ask the\ncloud, hey, can you",
    "start": "3327480",
    "end": "3333680"
  },
  {
    "text": "run this awesome Shamir\ninteractive proof for me and just tell me-- prove to\nme that you did it correctly?",
    "start": "3333680",
    "end": "3339065"
  },
  {
    "text": "And we're good, right? So what's the issue? Why aren't we done?",
    "start": "3339065",
    "end": "3345140"
  },
  {
    "text": "Why did we do GKR at all? The reason is because,\nhere, the prover runtime",
    "start": "3345140",
    "end": "3353040"
  },
  {
    "text": "is 2 to the S squared.  So in PSPACE-- any computation\nis doable in time 2 to the S.",
    "start": "3353040",
    "end": "3361170"
  },
  {
    "text": "But here's this additional--\nso this is S2 that's squared. So basically, the time to prove\nis much more than the time",
    "start": "3361170",
    "end": "3368310"
  },
  {
    "text": "necessary to simply\ncompute, which is why there's all\nthese follow-up works and why this is actually so--\nan interesting question today.",
    "start": "3368310",
    "end": "3375630"
  },
  {
    "text": "And there are some\nfollow-up work. I don't know the reference,\nand Yael didn't either. And I don't know if\nmemory is wrong either.",
    "start": "3375630",
    "end": "3380980"
  },
  {
    "text": "So it could be wrong. It could be true. So it's a possible statement. [LAUGHTER]",
    "start": "3380980",
    "end": "3386790"
  },
  {
    "text": "So it's possible that\nthere's a follow-up work that showed how to have a proved\nruntime of 2 to the S log S,",
    "start": "3386790",
    "end": "3392400"
  },
  {
    "text": "which is significantly better\nthan 2 to the S squared. But it's still not\n2 to the S, which would be the best you could\nhope for any arbitrary PSPACE",
    "start": "3392400",
    "end": "3399810"
  },
  {
    "text": "computation. So today, what we're\ngoing to show is-- ",
    "start": "3399810",
    "end": "3407280"
  },
  {
    "text": "so today, the theorem is\ngoing to be as follows. So assuming GKR, which is\nan unconditional statement.",
    "start": "3407280",
    "end": "3412880"
  },
  {
    "text": "It's not an assumption. It's just-- this is what we're\ngoing to use in the proof. So since we have GKR, we can\nget IP equals PSPACE with--",
    "start": "3412880",
    "end": "3426620"
  },
  {
    "text": "time 2 to the-- I should probably right\npoly 2 to the S prover.",
    "start": "3426620",
    "end": "3434555"
  },
  {
    "start": "3434555",
    "end": "3441780"
  },
  {
    "text": "So what this means\nis-- so for, maybe, the hardest PSPACE computations,\nassuming that, I guess, the hardest thing you can\ndo is time 2 to the S,",
    "start": "3441780",
    "end": "3448470"
  },
  {
    "text": "then we do have actually\nefficient delegation protocols for these things. And they're, in fact,\nalso proof systems.",
    "start": "3448470",
    "end": "3454168"
  },
  {
    "text": "So they are, like, information\ntheoretically secure. And maybe I'll just mention\none open question is, what",
    "start": "3454168",
    "end": "3461510"
  },
  {
    "text": "about general time TSPACE-- space computation? So-- where T's\nnot necessarily S,",
    "start": "3461510",
    "end": "3471570"
  },
  {
    "text": "can you do an interactive\nproof as efficient?",
    "start": "3471570",
    "end": "3478169"
  },
  {
    "start": "3478169",
    "end": "3483329"
  },
  {
    "text": "I think this is not known. So if you want to think\nabout some proof systems, this is a question\nyou can think about.",
    "start": "3483330",
    "end": "3489280"
  },
  {
    "start": "3489280",
    "end": "3495830"
  },
  {
    "text": "Are you guys OK if I raise this? This is probably fine, right? OK. AUDIENCE: Here, efficient\nis, like, poly T? RACHEL ZHANG: Yeah, poly T.\nAnd you can definitely ask",
    "start": "3495830",
    "end": "3502190"
  },
  {
    "text": "more-- even stronger questions. Can you do it with linear time\noverhead, additive, whatever, overhead?",
    "start": "3502190",
    "end": "3509600"
  },
  {
    "text": "Yeah, there's many questions. ",
    "start": "3509600",
    "end": "3531390"
  },
  {
    "text": "OK, so how do we describe\na PSPACE computation? Someone said that it's a\nspace of all computations that",
    "start": "3531390",
    "end": "3538080"
  },
  {
    "text": "are doable by a Turing\nmachine with bounded space. So let's say that\nwe have our Turing machine, M. And let's\nsay it runs in space, S.",
    "start": "3538080",
    "end": "3553530"
  },
  {
    "text": "And maybe I could say,\non input 0, 1 to the n.",
    "start": "3553530",
    "end": "3560390"
  },
  {
    "text": "And maybe the thing we want is-- ",
    "start": "3560390",
    "end": "3567200"
  },
  {
    "text": "and maybe we can just say time-- and also time, T. And I guess\nI could set it to 2 to the S,",
    "start": "3567200",
    "end": "3572900"
  },
  {
    "text": "just for now. Is that OK? So let's say that maybe\nwe have a Turing machine and we want to see that within\ntime T, which is 2 to the S,",
    "start": "3572900",
    "end": "3578900"
  },
  {
    "text": "that eventually, it\nwill get to the output, like the accepting\nconfiguration, or not. ",
    "start": "3578900",
    "end": "3585920"
  },
  {
    "text": "So by this point, it should\nget to accepting configuration.",
    "start": "3585920",
    "end": "3595930"
  },
  {
    "start": "3595930",
    "end": "3605220"
  },
  {
    "text": "So here's a trick. The idea here, we're going to\nuse GKR to prove the theorem. So we're going to have\nto construct some circuit",
    "start": "3605220",
    "end": "3611970"
  },
  {
    "text": "to delegate some\ncomputation with GKR with. ",
    "start": "3611970",
    "end": "3617430"
  },
  {
    "text": "So this Turing machine here-- it\nruns in space S-- can run time-- up to 2 to the S. So\nif you naively do this,",
    "start": "3617430",
    "end": "3624407"
  },
  {
    "text": "you would be [INAUDIBLE]\ndepth 2 to the S circuit. That's not so good. We want it, really,\nto be depth S.",
    "start": "3624407",
    "end": "3631869"
  },
  {
    "text": "So the thing about let\nme write that down. So the goal is to convert\nto depth S. That's the goal.",
    "start": "3631870",
    "end": "3650720"
  },
  {
    "text": "So here's the trick. The trick is as follows. We're going to look\nat the transition matrix of all the possible\nstates of the Turing tape,",
    "start": "3650720",
    "end": "3660180"
  },
  {
    "text": "basically. So we're to have a bunch of\ndifferent possible states here",
    "start": "3660180",
    "end": "3665670"
  },
  {
    "text": "and a bunch of different\npossible states here. So how many possible\nstates are there?",
    "start": "3665670",
    "end": "3672680"
  },
  {
    "text": "Well, there is 0, 1 to the S.\nThat's what the state could actually say on the tape.",
    "start": "3672680",
    "end": "3678570"
  },
  {
    "text": "But that's also where the\nTuring machine is right now. So maybe times the\nindex and S should",
    "start": "3678570",
    "end": "3686060"
  },
  {
    "text": "say where the Turing\nmachine is right now. And then it would do one\ncomputation, move somewhere,",
    "start": "3686060",
    "end": "3691670"
  },
  {
    "text": "and then it'll be an adjacent\nplace at a different state. And then, now,\nthe new state will be like a slightly\ndifferent string,",
    "start": "3691670",
    "end": "3696980"
  },
  {
    "text": "and it'll be-- the\nTuring pointer will be at a different location. So here is also going\nto be the same states.",
    "start": "3696980",
    "end": "3702970"
  },
  {
    "start": "3702970",
    "end": "3709849"
  },
  {
    "text": "And the point is we're going\nto put a 1 at a location",
    "start": "3709850",
    "end": "3715460"
  },
  {
    "text": "if there's a way to get from\nthis state here to this state here in one time step. ",
    "start": "3715460",
    "end": "3722819"
  },
  {
    "text": "And 0s everywhere else. Yeah. AUDIENCE: Does this state\ninclude the internal automaton?",
    "start": "3722820",
    "end": "3730115"
  },
  {
    "text": "RACHEL ZHANG: Yes,\nthat's a good point. It's actually a\nvery good-- yeah. AUDIENCE: So there should only\nbe, like, one 1 in each row.",
    "start": "3730115",
    "end": "3736470"
  },
  {
    "text": "RACHEL ZHANG: Yeah, there\nshould be one 1 in every row because the thing you were going\nto do after one time step should",
    "start": "3736470",
    "end": "3741599"
  },
  {
    "text": "be deterministic based on\nyour current location-- your state based on your--",
    "start": "3741600",
    "end": "3746850"
  },
  {
    "text": "your internal state of\nyour Turing machine, as well as what\nyou see around you.",
    "start": "3746850",
    "end": "3752220"
  },
  {
    "text": "I'm using this as just the\nnumber of states in the Turing machine. Anything else I'm forgetting\nwithin these states?",
    "start": "3752220",
    "end": "3757580"
  },
  {
    "text": "There's just a\nbunch of information that I don't remember. ",
    "start": "3757580",
    "end": "3764280"
  },
  {
    "text": "So anyway-- so I guess-- the key point here is that this\nmatrix is actually very easy",
    "start": "3764280",
    "end": "3769680"
  },
  {
    "text": "to compute, because given maybe\na state here and a state here,",
    "start": "3769680",
    "end": "3775119"
  },
  {
    "text": "you can compare very-- in very\nlow depth, very efficiently. So it's a very\nuniform description",
    "start": "3775120",
    "end": "3780540"
  },
  {
    "text": "of this check, or of the\ncircuit that will generate, whether or not the particular\ncorresponding matrix",
    "start": "3780540",
    "end": "3785640"
  },
  {
    "text": "value is a 0 or 1. And that'll be important\nfor us because we want--",
    "start": "3785640",
    "end": "3792480"
  },
  {
    "text": "we want a uniform circuit,\nI guess, at this point. And this will make it uniform. AUDIENCE: So\n[INAUDIBLE] previously.",
    "start": "3792480",
    "end": "3798942"
  },
  {
    "text": "RACHEL ZHANG: Yeah, OK. So the matrix here is easy\nto compute, is my claim.",
    "start": "3798942",
    "end": "3804039"
  },
  {
    "text": "The reason is you can take any\nstate here, any state here. You can do some checks.",
    "start": "3804040",
    "end": "3809579"
  },
  {
    "text": "It's a very-- it's\na small formula. You can just check it very\neasily by knowing what M is, by knowing what you see.",
    "start": "3809580",
    "end": "3814877"
  },
  {
    "text": "And you can tell if there's\na transition from that to the next state. So the matrix here is easy\nto compute, is my claim.",
    "start": "3814877",
    "end": "3821020"
  },
  {
    "start": "3821020",
    "end": "3836950"
  },
  {
    "text": "So maybe let's call\nthis matrix A. So what I just said is that Aij--",
    "start": "3836950",
    "end": "3843520"
  },
  {
    "text": "this is going to be the\nith row in the jth column-- entry of A. This is\ngoing to be a 1 if--",
    "start": "3843520",
    "end": "3851020"
  },
  {
    "text": "so state i goes to state\nj in one time step. ",
    "start": "3851020",
    "end": "3869910"
  },
  {
    "text": "And so that's good. What we really want to know\nis whether i will go to j",
    "start": "3869910",
    "end": "3876652"
  },
  {
    "text": "or the starting\nconfiguration will go to the accepting\nconfiguration in T time steps. That's what we want.",
    "start": "3876653",
    "end": "3882185"
  },
  {
    "start": "3882185",
    "end": "3926680"
  },
  {
    "text": "So here, we have a copy\nof A. Maybe let's just",
    "start": "3926680",
    "end": "3933630"
  },
  {
    "text": "do some computations just\nfor fun and see what happens. So you have a copy of matrix A\nhere, a copy of matrix A here.",
    "start": "3933630",
    "end": "3939840"
  },
  {
    "text": "Just multiply them via\nmatrix multiplication. So we have A squared. ",
    "start": "3939840",
    "end": "3946880"
  },
  {
    "text": "What is the value of\nthe entry in the ith row and the jth column of A squared?",
    "start": "3946880",
    "end": "3952402"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] RACHEL ZHANG: Yeah, so-- I guess I'll write\nhere, actually. ",
    "start": "3952402",
    "end": "3959925"
  },
  {
    "text": "So A squared-- so the\nijth entry of A squared is whether i goes\nto j in two steps.",
    "start": "3959925",
    "end": "3970327"
  },
  {
    "text": "And maybe for those of you\nwho haven't seen this before, let's just do it so you see why. ",
    "start": "3970327",
    "end": "3978050"
  },
  {
    "text": "So if you want to look at the\nijth entry of this product of these two matrices,\nwhat you want to do",
    "start": "3978050",
    "end": "3983990"
  },
  {
    "text": "is you want to take\nthe ith row, look at all the entries across\nit, take the jth column, look at all the entries\ndown it, and you",
    "start": "3983990",
    "end": "3991310"
  },
  {
    "text": "want to take the\npairwise-- you want to take the product and the sum. So you want to take this entry\ntimes this entry, this entry",
    "start": "3991310",
    "end": "3996568"
  },
  {
    "text": "times this entry, and so on. So what's essentially\nhappening is, here, you want to\ntake-- you want",
    "start": "3996568",
    "end": "4002020"
  },
  {
    "text": "to look at the\nentry corresponding to going from i to k. And then you go from\nk to l and k to j.",
    "start": "4002020",
    "end": "4009250"
  },
  {
    "text": "And then you do this\nfor k equals 2, also. We do it for-- llike you go from i to k. And then you'll\ndo it from k to j.",
    "start": "4009250",
    "end": "4015400"
  },
  {
    "text": "And so the final entry will--\nthe sum of all of this-- these products--\nwill be 1 if and only if there is a way to\ngo from i to some k",
    "start": "4015400",
    "end": "4022330"
  },
  {
    "text": "to j in two time steps. That OK? Or-- I don't know.",
    "start": "4022330",
    "end": "4028270"
  },
  {
    "text": "OK.  So in general then, if we\nwant to look at the transition",
    "start": "4028270",
    "end": "4034650"
  },
  {
    "text": "matrix of having-- after going for T time steps-- you keep doing this.",
    "start": "4034650",
    "end": "4039720"
  },
  {
    "text": "And you get that the ijth\nentry of A to the power",
    "start": "4039720",
    "end": "4047900"
  },
  {
    "text": "is whether i goes to j. ",
    "start": "4047900",
    "end": "4058270"
  },
  {
    "text": "AUDIENCE: So here, [INAUDIBLE]\nwhether [INAUDIBLE] exactly T",
    "start": "4058270",
    "end": "4063740"
  },
  {
    "text": "steps? Like, no more, no less? RACHEL ZHANG: Yeah, OK. That's a good point. So maybe we can say this should\nbe in exactly T time steps.",
    "start": "4063740",
    "end": "4071410"
  },
  {
    "text": "And maybe you can have\nyour Turing machine stay as accepting configuration if\nit's already reached it, maybe, for instance.",
    "start": "4071410",
    "end": "4076740"
  },
  {
    "text": "That's one thing you could do. Another way you\ncould do it is you-- you could change this\nmatrix because it's a one-to-one diagonal\nso that you can always",
    "start": "4076740",
    "end": "4082810"
  },
  {
    "text": "waste time if you want. But whatever version\nyou want is fine. Just-- maybe, let's say for\nnow, after exactly T time steps,",
    "start": "4082810",
    "end": "4089000"
  },
  {
    "text": "it should reach the\nexisting configuration. And just have it\nstart accepting place. ",
    "start": "4089000",
    "end": "4100068"
  },
  {
    "text": "So the point is\nif we can compute what AT of the input\nconfiguration, comma, the accepting\nconfiguration is, we",
    "start": "4100069",
    "end": "4106599"
  },
  {
    "text": "know if this PSPACE computation\nis accepting or not. That good?",
    "start": "4106600",
    "end": "4111930"
  },
  {
    "text": " So what we want is--",
    "start": "4111930",
    "end": "4118213"
  },
  {
    "start": "4118214",
    "end": "4131238"
  },
  {
    "text": "OK, so we're going to write\na circuit to compute this. ",
    "start": "4131239",
    "end": "4142589"
  },
  {
    "text": "Is it OK if I'm very\nloose about this? I just feel like\nall these things about exactly how everything\nends up is just terrible.",
    "start": "4142590",
    "end": "4149680"
  },
  {
    "text": "I don't know.  OK, so I guess one\nthing you could do",
    "start": "4149680",
    "end": "4155399"
  },
  {
    "text": "is you could just\ncompute and then A squared, then A cubed\nand A to the fourth. But it's not so good\nbecause you can do it",
    "start": "4155399",
    "end": "4161278"
  },
  {
    "text": "for T times your\ncircuit C, depth T. So what should you do instead? AUDIENCE: Repeated squaring.",
    "start": "4161279",
    "end": "4167130"
  },
  {
    "text": "RACHEL ZHANG: Repeated squaring. Great. OK. Yay. ",
    "start": "4167130",
    "end": "4175390"
  },
  {
    "text": "OK. So the idea is we can\ncompute this matrix A So this is going to be very\neasy to compute because we",
    "start": "4175390",
    "end": "4183339"
  },
  {
    "text": "talked a little bit about how\nevery entry of this matrix is-- you can compute it\nvery easily just by looking at the\ntwo configurations",
    "start": "4183340",
    "end": "4189549"
  },
  {
    "text": "are that you're interested in.  And then you can compute A\nsquared from this by just--",
    "start": "4189550",
    "end": "4197800"
  },
  {
    "text": "I guess you do one division,\none multiplication. And then we can do A to the\nfourth, A to the eighth and so",
    "start": "4197800",
    "end": "4205600"
  },
  {
    "text": "on. And eventually we'll\nget to A the T, which I don't have room for. ",
    "start": "4205600",
    "end": "4219397"
  },
  {
    "text": "This is going to be our matrix-- or our circuit.  Let's look at the depth--",
    "start": "4219397",
    "end": "4225620"
  },
  {
    "text": "what the depth of the circuit. [INTERPOSING VOICES]",
    "start": "4225620",
    "end": "4231230"
  },
  {
    "text": " OK, so it's, like, log T-ish.",
    "start": "4231230",
    "end": "4236520"
  },
  {
    "text": "AUDIENCE: But\neach, like, thing-- RACHEL ZHANG: Yeah. OK. Times something. [LAUGHTER]",
    "start": "4236520",
    "end": "4241536"
  },
  {
    "text": "AUDIENCE: But don't\nyou have to do-- ",
    "start": "4241536",
    "end": "4246960"
  },
  {
    "text": "you have to add up T\nthetas to that thing. But you can make it a binary\ntree, so that will have",
    "start": "4246960",
    "end": "4253900"
  },
  {
    "text": "[INAUDIBLE]. Yeah. OK. [INTERPOSING VOICES]",
    "start": "4253900",
    "end": "4258960"
  },
  {
    "text": "AUDIENCE: Poly S. RACHEL ZHANG: We're\ngoing to say poly S. It's probably, like,\nlog t times poly S anyway.",
    "start": "4258960",
    "end": "4264560"
  },
  {
    "text": " So that's pretty good. Means that it's a verifier\nwhen running this computation",
    "start": "4264560",
    "end": "4272730"
  },
  {
    "text": "with the prover in GKR. It's a scale to the depths. The depth is now in poly S.\nWhat's the size of the circuit?",
    "start": "4272730",
    "end": "4278090"
  },
  {
    "start": "4278090",
    "end": "4287929"
  },
  {
    "text": "AUDIENCE: Poly S-ish,\n[INAUDIBLE] 2 to the S.",
    "start": "4287930",
    "end": "4293208"
  },
  {
    "text": "AUDIENCE: [? Just ?]\n[? write ?] [? it out. ?] [INTERPOSING VOICES]",
    "start": "4293208",
    "end": "4298465"
  },
  {
    "text": " RACHEL ZHANG: Yeah,\nso I guess the matrix stuff is going to be size 2\nthe 2, or something times 2",
    "start": "4298465",
    "end": "4305135"
  },
  {
    "text": "to the S. AUDIENCE: 2 to the S squared. RACHEL ZHANG: Yeah. 2 to the S. So poly 2 to the S.\n2 to the S times 2 to the S is 2",
    "start": "4305135",
    "end": "4311456"
  },
  {
    "text": "to the 2S. So yeah. ",
    "start": "4311456",
    "end": "4316530"
  },
  {
    "text": "Yeah. OK. [LAUGHS] OK, so if we apply\nGKR to this, what do we get?",
    "start": "4316530",
    "end": "4323199"
  },
  {
    "text": "So let's run GKR. Oh, and at the very\ntop, we need to, then,",
    "start": "4323200",
    "end": "4328885"
  },
  {
    "text": "look at the input state and then\ncheck the corresponding entry. So you want to read this\nparticular entry, maybe.",
    "start": "4328885",
    "end": "4335050"
  },
  {
    "text": "But you can read it by doing\nsome of pretty small computation on what the input and\naccepting computations are.",
    "start": "4335050",
    "end": "4342910"
  },
  {
    "text": "So let's run GKR.  So prover runtime?",
    "start": "4342910",
    "end": "4347915"
  },
  {
    "start": "4347915",
    "end": "4358727"
  },
  {
    "text": "AUDIENCE: Poly 2 to the S. RACHEL ZHANG: Yay. OK I'll let you do this. ",
    "start": "4358727",
    "end": "4364860"
  },
  {
    "text": "Verifier runtime? ",
    "start": "4364860",
    "end": "4370000"
  },
  {
    "text": "AUDIENCE: Poly S. RACHEL ZHANG: Yay. OK I guess that's what\nwe wanted to prove, huh?",
    "start": "4370000",
    "end": "4375100"
  },
  {
    "text": "OK. Nice. [LAUGHTER] Good work. Are there any\nquestions about this?",
    "start": "4375100",
    "end": "4380870"
  },
  {
    "text": "Or is this-- does it make sense? Yeah. AUDIENCE: Sorry, I might have\nmissed an important point, but where is the cost of\nactually doing the squaring?",
    "start": "4380870",
    "end": "4387045"
  },
  {
    "text": " RACHEL ZHANG: I guess a really\ngood depth in the circuit is each square you do is\ngoing to take some more",
    "start": "4387045",
    "end": "4393430"
  },
  {
    "text": "depth of your circuit. AUDIENCE: Yeah. RACHEL ZHANG: Is that\nwhat you're saying? AUDIENCE: Yeah,\nthat's the question.",
    "start": "4393430",
    "end": "4398440"
  },
  {
    "text": "RACHEL ZHANG: Maybe I didn't\nunderstand the question. AUDIENCE: Oh, is it-- what is the cost of squaring A? Just going from A to A\nsquared, what's the cost?",
    "start": "4398440",
    "end": "4405350"
  },
  {
    "text": "RACHEL ZHANG: Sure. Yeah. So how do you compute a squared. You can do every row\nand every column.",
    "start": "4405350",
    "end": "4411550"
  },
  {
    "text": "And then what if I add them? AUDIENCE: Oh. So is it-- you're just doing-- RACHEL ZHANG: You're just\ndoing matrix application.",
    "start": "4411550",
    "end": "4418055"
  },
  {
    "text": "AUDIENCE: I see. RACHEL ZHANG: So maybe you\ncan tell me how [INAUDIBLE]. [LAUGHTER]",
    "start": "4418055",
    "end": "4423328"
  },
  {
    "text": " [INTERPOSING VOICES] ",
    "start": "4423328",
    "end": "4428340"
  },
  {
    "text": "AUDIENCE: But are we supposed\nto know how that thing that you said we need to prove to you--\nare we supposed to know-- RACHEL ZHANG: Oh, yeah,\nthat's a great question.",
    "start": "4428340",
    "end": "4435320"
  },
  {
    "text": "So earlier-- I already\nerased it, I think. Wait.",
    "start": "4435320",
    "end": "4440540"
  },
  {
    "text": "Are there any more questions\nabout this before we go to that?  AUDIENCE: So we're asking\nyou this to prove that",
    "start": "4440540",
    "end": "4447520"
  },
  {
    "text": "because [INAUDIBLE]. ",
    "start": "4447520",
    "end": "4452628"
  },
  {
    "text": "RACHEL ZHANG: You can't use IP.  Just use the logic you just had.",
    "start": "4452628",
    "end": "4458990"
  },
  {
    "text": "AUDIENCE: OK, OK. RACHEL ZHANG: Yeah. So how do we construct\nthe circuit now?",
    "start": "4458990",
    "end": "4464690"
  },
  {
    "text": "[INTERPOSING VOICES] ",
    "start": "4464690",
    "end": "4479183"
  },
  {
    "text": "AUDIENCE: So that's\nanother reason we need logspace\nuniform [INAUDIBLE]. AUDIENCE: It runs in logspace. That's a Turing machine.",
    "start": "4479183",
    "end": "4486030"
  },
  {
    "text": "So [INAUDIBLE] AUDIENCE: Yeah. ",
    "start": "4486030",
    "end": "4492280"
  },
  {
    "text": "RACHEL ZHANG: Yeah, OK. So this is basically a\nscaled-down version of that. This is logspace uniform.",
    "start": "4492280",
    "end": "4497900"
  },
  {
    "text": "So you're running in logspace. Then you're running\nin time space S. So this is a exponentially\nsmaller version of that.",
    "start": "4497900",
    "end": "4504243"
  },
  {
    "text": "So all the parameters\nover there-- you scale them down. So we have the depth over here. Was poly S. The log of that\nis log S. The log of the size",
    "start": "4504243",
    "end": "4514150"
  },
  {
    "text": "here is S So we have all\nthose things we wanted. ",
    "start": "4514150",
    "end": "4522030"
  },
  {
    "text": "AUDIENCE: How do you incorporate\nthat input into this-- you need to know what\nthe starting state is.",
    "start": "4522030",
    "end": "4527887"
  },
  {
    "text": "RACHEL ZHANG: With this\none or with [INAUDIBLE]? AUDIENCE: With that one. RACHEL ZHANG: The input state. Yeah.",
    "start": "4527888",
    "end": "4533890"
  },
  {
    "text": "So I think the way I\nnormally think-- or I like to think about it is\nyou only check the input",
    "start": "4533890",
    "end": "4538895"
  },
  {
    "text": "configuration at the\nvery end, once you complete the entire thing. So then you only have to read\nthe input, comma, accepting",
    "start": "4538895",
    "end": "4544480"
  },
  {
    "text": "configurations entry. And there you can\njust do a formula to read off what it\nsays and then look",
    "start": "4544480",
    "end": "4551350"
  },
  {
    "text": "at the corresponding value. AUDIENCE: So almost the\nentire circuit is just--",
    "start": "4551350",
    "end": "4556870"
  },
  {
    "text": "doesn't even read the input. RACHEL ZHANG: Yeah,\nit's only the very end. ",
    "start": "4556870",
    "end": "4568890"
  },
  {
    "text": "AUDIENCE: But, I mean,\nthis is very accepting, and that one doesn't\nreally accept it in print.",
    "start": "4568890",
    "end": "4574670"
  },
  {
    "text": "RACHEL ZHANG: Yeah. AUDIENCE: [INAUDIBLE] RACHEL ZHANG: Yeah, yeah. OK. So maybe-- yeah, so I guess\neach configuration corresponds",
    "start": "4574670",
    "end": "4585579"
  },
  {
    "text": "to-- it's a configuration. So there's some data about\nwhat the gate's output-- gate value is or something.",
    "start": "4585580",
    "end": "4592040"
  },
  {
    "text": "Maybe you can read\noff the value there. ",
    "start": "4592040",
    "end": "4598929"
  },
  {
    "text": "AUDIENCE: Each entry,\n[INAUDIBLE] [? comma-- ?] is the gate here [? or not, ?] and\nthen each entry [INAUDIBLE]?",
    "start": "4598930",
    "end": "4604365"
  },
  {
    "text": " AUDIENCE: And this sounds like\nan easy add, mult situation,",
    "start": "4604366",
    "end": "4611469"
  },
  {
    "text": "right? Because [? it's just ?]\n[? computation? ?] RACHEL ZHANG: Yeah. The important point here is\nthat computing the matrix A",
    "start": "4611470",
    "end": "4617550"
  },
  {
    "text": "is very easy. That's, really,\nthe key thing here. And that's also why,\nwhen we said what--",
    "start": "4617550",
    "end": "4623850"
  },
  {
    "text": "we were behind. But when we said\nwhat A looks like, it really had to be also\nwhere the Turing pointer was,",
    "start": "4623850",
    "end": "4630958"
  },
  {
    "text": "because if you didn't know\nwhere the pointer was, it could be very large. Yeah.",
    "start": "4630958",
    "end": "4636300"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]",
    "start": "4636300",
    "end": "4644360"
  },
  {
    "text": "AUDIENCE: So you\ncan factor out what you're saying into the form\nof-- if you have a low space",
    "start": "4644360",
    "end": "4651858"
  },
  {
    "text": "computation, you can turn\nto a low-depth circuit. Is that a is that a fair\n[INAUDIBLE]? that you've used?",
    "start": "4651858",
    "end": "4657063"
  },
  {
    "text": "RACHEL ZHANG: Yeah,\nit's actually a kind of interesting statement, huh? I don't know. I didn't know that you could\ndo this until recently either.",
    "start": "4657063",
    "end": "4663658"
  },
  {
    "text": " So I guess-- the\ninteresting thing here",
    "start": "4663658",
    "end": "4668950"
  },
  {
    "text": "is instead of being a really\ntall and skinny computation, you can turn it into a circuit\nthat's really fat and short.",
    "start": "4668950",
    "end": "4675490"
  },
  {
    "text": "AUDIENCE: That's why we're\ngetting [INAUDIBLE] depth, not [INAUDIBLE]. ",
    "start": "4675490",
    "end": "4684364"
  },
  {
    "text": "AUDIENCE: Wait. Sorry. OK. I was just-- in terms of\nwhere we're at in class. So we just proved this theorem.",
    "start": "4684365",
    "end": "4690390"
  },
  {
    "text": "And is this the same reasoning\nfor why the logic conformity thing works out, too--",
    "start": "4690390",
    "end": "4696310"
  },
  {
    "text": "by the same [INAUDIBLE]? RACHEL ZHANG: You tell me. [LAUGHTER] AUDIENCE: Yeah. You tell me.",
    "start": "4696310",
    "end": "4702780"
  },
  {
    "text": "I'm delegating. [LAUGHTER] AUDIENCE: It's kind of weird\nbecause you don't actually",
    "start": "4702780",
    "end": "4707942"
  },
  {
    "text": "take A as input. A is [? hardcoded ?]\ninto the circuit, right? That's why the input can\nstill be the small thing.",
    "start": "4707942",
    "end": "4714520"
  },
  {
    "text": "That's just describing\nthe starting state. RACHEL ZHANG: Yeah,\nThe Turing machine, M, is what determines what the\ncircuit action looks like.",
    "start": "4714520",
    "end": "4721329"
  },
  {
    "text": "So maybe as part of\nthe input of this, you're also going to have a\ndescription-- like, the Turing machine in its entirety. The Turing machines are finite\nsize, so it doesn't matter.",
    "start": "4721330",
    "end": "4728140"
  },
  {
    "text": "AUDIENCE: Yeah.  AUDIENCE: And\nthat's why we don't need to worry about complicated\nadd, mult predicates inside,",
    "start": "4728140",
    "end": "4735180"
  },
  {
    "text": "because it's actually\njust looks like this. ",
    "start": "4735180",
    "end": "4747225"
  },
  {
    "text": "AUDIENCE: I'm still\nkind of weirded out by the fact that all of that--",
    "start": "4747225",
    "end": "4752660"
  },
  {
    "text": "until the star at\nthe top, all of this is not even dependent\non the input. So it's like-- in this case,\nit's just going to be constant.",
    "start": "4752660",
    "end": "4760240"
  },
  {
    "text": "Like, [INAUDIBLE]. So then why are we going\nthrough the trouble of computing all these\nlayers, instead of just",
    "start": "4760240",
    "end": "4766700"
  },
  {
    "text": "using the top layer, where we-- RACHEL ZHANG: I mean, how\ndo you hold the top layer?",
    "start": "4766700",
    "end": "4772310"
  },
  {
    "text": "AUDIENCE: So you're\nsaying that it's easier to encode the entire computation\nthing than just the result.",
    "start": "4772310",
    "end": "4777812"
  },
  {
    "text": "RACHEL ZHANG: It's\neasy to say what you have to do to compute it\nthan to actually compute it.",
    "start": "4777812",
    "end": "4783130"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] AUDIENCE: [INAUDIBLE] M,\nnot C. M [INAUDIBLE] C.",
    "start": "4783130",
    "end": "4792875"
  },
  {
    "text": "AUDIENCE: Or brackets used\na compressed representation of C. [INAUDIBLE]",
    "start": "4792875",
    "end": "4799727"
  },
  {
    "text": "AUDIENCE: But I'm saying, why\ndon't you just hardcode it in the top layer of M? AUDIENCE: That\nwould [INAUDIBLE] C.",
    "start": "4799727",
    "end": "4808540"
  },
  {
    "text": "RACHEL ZHANG: They\ndidn't even [INAUDIBLE] AUDIENCE: Well, it's just-- I mean, it's just a\nstring of size of C.",
    "start": "4808540",
    "end": "4814860"
  },
  {
    "text": "So you can't hardcode\n[INAUDIBLE] solution. AUDIENCE: OK. It's weird, but I\ncan kind of see.",
    "start": "4814860",
    "end": "4822486"
  },
  {
    "text": " AUDIENCE: So basically, we\nwent through this trouble and we were able to go\nthrough this trouble",
    "start": "4822486",
    "end": "4828677"
  },
  {
    "text": "because we assume that C\ncan be described succinctly, like logspace succinctly. ",
    "start": "4828677",
    "end": "4836558"
  },
  {
    "text": "RACHEL ZHANG: Yeah. AUDIENCE: Is poly log\nS uniform [INAUDIBLE]? RACHEL ZHANG: I'm going\nto delegate-- push it",
    "start": "4836558",
    "end": "4842697"
  },
  {
    "text": "to somebody else. I don't know how log blows up.",
    "start": "4842697",
    "end": "4848380"
  },
  {
    "text": "Probably not,\nbecause if you take-- the transition\nmatrix A you have is going to be 2 to the\ndescription size or whatever.",
    "start": "4848380",
    "end": "4855110"
  },
  {
    "text": "Like, the space. So if you have larger\nspace, it's really bad. ",
    "start": "4855110",
    "end": "4861760"
  },
  {
    "text": "AUDIENCE: But\nspace S gets turned into depth like S squared,\nroughly, in this transformation.",
    "start": "4861760",
    "end": "4867739"
  },
  {
    "text": "RACHEL ZHANG: Yeah. AUDIENCE: So if we have\nspace S squared to start, we can definitely [INAUDIBLE].",
    "start": "4867740",
    "end": "4875160"
  },
  {
    "text": "RACHEL ZHANG: Yeah,\nbut the question is the prover runtime, right? But the reason why\nwe're doing any of this",
    "start": "4875160",
    "end": "4881400"
  },
  {
    "text": "is because the prover runtime. You actually get an advantage\nin the prover runtime. ",
    "start": "4881400",
    "end": "4895220"
  },
  {
    "text": "So we're done early. So maybe we can all\ngo get some corn. And-- yay.",
    "start": "4895220",
    "end": "4900640"
  },
  {
    "text": "[APPLAUSE] ",
    "start": "4900640",
    "end": "4906000"
  }
]