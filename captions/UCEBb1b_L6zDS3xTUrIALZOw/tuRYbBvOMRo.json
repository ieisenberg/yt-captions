[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "ANNOUNCER: Open content is\nprovided under a creative commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "6840"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation, or view\nadditional materials from",
    "start": "6840",
    "end": "13390"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at ocw.mit.edu .",
    "start": "13390",
    "end": "19930"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG: OK. I finished up last time\ntalking about lists.",
    "start": "19930",
    "end": "27359"
  },
  {
    "start": "21000",
    "end": "177000"
  },
  {
    "text": "And I pointed out that lists are\nmutable, showed you some examples of mutation.",
    "start": "27360",
    "end": "34770"
  },
  {
    "text": "We can look at it here; we\nlooked at append, which added things to lists, we looked at\ndelete, deleting things from a",
    "start": "34770",
    "end": "43980"
  },
  {
    "text": "list. You can also assign to a\nlist, or to an element of a",
    "start": "43980",
    "end": "49010"
  },
  {
    "text": "list. So ivy sub 1, for example,\ncould be assigned",
    "start": "49010",
    "end": "55879"
  },
  {
    "text": "minus 15, and that will actually\nmutate the list.",
    "start": "55880",
    "end": "63970"
  },
  {
    "text": "So heretofore, when we wrote\nassignment, what we always meant, was changing the binding\nof a variable to a",
    "start": "63970",
    "end": "73370"
  },
  {
    "text": "different object. Here, we are overloading the\nnotation to say, no, no, ivys",
    "start": "73370",
    "end": "82460"
  },
  {
    "text": "is still bound to the same\nobject, but an element of ivys",
    "start": "82460",
    "end": "89430"
  },
  {
    "text": "is bound to a different\nobject. If you think about it, that\nmakes sense, because when we",
    "start": "89430",
    "end": "97060"
  },
  {
    "text": "have a list, what a list is,\nis a sequence of objects.",
    "start": "97060",
    "end": "109039"
  },
  {
    "text": "And what this says is, is the\nobject named by the expression",
    "start": "109040",
    "end": "115890"
  },
  {
    "text": "ivys sub 1, is now bound to the\nobject, if you will, named",
    "start": "115890",
    "end": "123820"
  },
  {
    "text": "by the constant minus 15. So we can watch this run here.",
    "start": "123820",
    "end": "140170"
  },
  {
    "text": "Idle can-- that's exciting.",
    "start": "140170",
    "end": "145500"
  },
  {
    "text": "I hadn't expected that answer. All right, your question.",
    "start": "145500",
    "end": "151150"
  },
  {
    "text": "STUDENT: [INAUDIBLE] four\nelements to ivys, and you tell it to change the fifth element\nof ivys to negative 15, will",
    "start": "151150",
    "end": "156340"
  },
  {
    "text": "it add it or [INAUDIBLE]",
    "start": "156340",
    "end": "162230"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG: Well,\nI'll tell you how ol-- let's answer that the easy way.",
    "start": "162230",
    "end": "168590"
  },
  {
    "text": "We'll start up a shell\nand we'll try it.",
    "start": "168590",
    "end": "175660"
  },
  {
    "text": "All right, we'll just get out\nof what we were doing here. And so, we now have some things,\nso we, for example,",
    "start": "175660",
    "end": "185050"
  },
  {
    "start": "177000",
    "end": "471000"
  },
  {
    "text": "have ivys, I can print ivys\n, and it's only got three",
    "start": "185050",
    "end": "191740"
  },
  {
    "text": "elements but your question\nprobably is just as good for adding the fourth as adding\nthe fifth, so what would",
    "start": "191740",
    "end": "197379"
  },
  {
    "text": "happen if we say ivys sub 3--\nbecause that of course is the",
    "start": "197380",
    "end": "204370"
  },
  {
    "text": "fourth element, right?",
    "start": "204370",
    "end": "212590"
  },
  {
    "text": "Let's find out. OK. Because what that does is, it's\nchanging the binding of",
    "start": "212590",
    "end": "225120"
  },
  {
    "text": "the name ivys, in this\ncase, sub 1. What it looked at here, with the\nname ivys sub 3, and said",
    "start": "225120",
    "end": "232860"
  },
  {
    "text": "that name doesn't-- isn't\nbound, right? That isn't there.",
    "start": "232860",
    "end": "238160"
  },
  {
    "text": "So it couldn't do it, so instead\nthat's what append is for, is to stick things on to\nthe end of the list. But a",
    "start": "238160",
    "end": "245910"
  },
  {
    "text": "very good question. So we can see what we did here,\nand, but of course I can",
    "start": "245910",
    "end": "256019"
  },
  {
    "text": "now, if I choose, say something\nlike, ivys sub 1 is",
    "start": "256020",
    "end": "265069"
  },
  {
    "text": "assigned minus 15, and now if\nI print ivys, there it is.",
    "start": "265070",
    "end": "272540"
  },
  {
    "text": "And again, this points out\nsomething I wanted to me-- I mentioned last time, list can\nbe heterogeneous, in the",
    "start": "272540",
    "end": "281260"
  },
  {
    "text": "sense that the elements can be\nmultiple different types. As you see here, some of the\nelements are strings and some",
    "start": "281260",
    "end": "287480"
  },
  {
    "text": "of the elements are integers. Let's look at another example.",
    "start": "287480",
    "end": "296800"
  },
  {
    "text": "Let's suppose, we'll start\nwith the list, I'll call it l 1.",
    "start": "296800",
    "end": "308960"
  },
  {
    "text": "This, by the way, is a really\nbad thing I just did. What was-- what's really bad\nabout calling a list l 1?",
    "start": "308960",
    "end": "315690"
  },
  {
    "text": "STUDENT: [INAUDIBLE] PROFESSOR JOHN GUTTAG: Is it l\n1, or is it 11, or is it l l?",
    "start": "315690",
    "end": "322050"
  },
  {
    "text": "It's a bad habit to get into\nwhen you write programs, so I",
    "start": "322050",
    "end": "327680"
  },
  {
    "text": "never use lowercase L except\nwhen I'm spelling the word where it's obvious, because\notherwise I get all sorts of",
    "start": "327680",
    "end": "333920"
  },
  {
    "text": "crazy things going on. All right, so let's make\nit the list 123.",
    "start": "333920",
    "end": "341780"
  },
  {
    "text": "All right? Now, I'll say L 2 equals L 1.",
    "start": "341780",
    "end": "350680"
  },
  {
    "text": "Now I'll print L 2. Kind of what you'd guess, but\nhere's the interesting",
    "start": "350680",
    "end": "357380"
  },
  {
    "text": "question: if I say L 1 is\nassigned 0, L 1 sub 0 is",
    "start": "357380",
    "end": "365410"
  },
  {
    "text": "assigned 4, I'll print L 1.",
    "start": "365410",
    "end": "370950"
  },
  {
    "text": "That's what you expect, but\nwhat's going to happen if I print L 2?",
    "start": "370950",
    "end": "382190"
  },
  {
    "text": "423 as well, and that's because\nwhat happened is I had",
    "start": "382190",
    "end": "387590"
  },
  {
    "text": "this model, which we looked at\nlast time, where I had the list L 1, which was bound to\nan object, and then the",
    "start": "387590",
    "end": "404120"
  },
  {
    "text": "assignment L 2 gets L 1, bound\nthe name L 2 to the same",
    "start": "404120",
    "end": "411169"
  },
  {
    "text": "object, so when I mutated this\nobject, which I reached",
    "start": "411170",
    "end": "418240"
  },
  {
    "text": "through the name L 1 to make\nthat 4, since this name was",
    "start": "418240",
    "end": "425190"
  },
  {
    "text": "bound to the same object, when\nI print it, I got 423.",
    "start": "425190",
    "end": "432440"
  },
  {
    "text": "So that's the key thing to--\nto realize; that what the",
    "start": "432440",
    "end": "437470"
  },
  {
    "text": "assignment did was\nhave two separate paths to the same object.",
    "start": "437470",
    "end": "445330"
  },
  {
    "text": "So I could get to that object\neither through this path or through that path, it didn't\nmatter which path I use to",
    "start": "445330",
    "end": "451750"
  },
  {
    "text": "modify it, I would see it when\nI looked at the other. Yes. STUDENT: [INAUDIBLE]",
    "start": "451750",
    "end": "464259"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG: So the\nquestion, if I said a is",
    "start": "464260",
    "end": "470220"
  },
  {
    "text": "assigned 2, b is assigned a,\nand then a is assigned 3.",
    "start": "470220",
    "end": "476530"
  },
  {
    "start": "471000",
    "end": "598000"
  },
  {
    "text": "Is that your question? So the question is, a is\nassigned 1, b is assigned a, a",
    "start": "476530",
    "end": "486580"
  },
  {
    "text": "is assigned 2, and then if\nI print b, I'll get 1.",
    "start": "486580",
    "end": "498069"
  },
  {
    "text": "Because these are not mutable,\nthis is going to be assigned",
    "start": "498070",
    "end": "504330"
  },
  {
    "text": "to an object in the store, so\nwe'll draw the picture over",
    "start": "504330",
    "end": "509340"
  },
  {
    "text": "here, that we had initially a\nis bound to an object with 1",
    "start": "509340",
    "end": "516479"
  },
  {
    "text": "in it, and then b got bound to\nthe same object, but then when",
    "start": "516480",
    "end": "526269"
  },
  {
    "text": "I did the assignment, what that\ndid was it broke this",
    "start": "526270",
    "end": "531750"
  },
  {
    "text": "connection, and now had a\nassigned to a different object, with the number,\nin this case, 2 in it.",
    "start": "531750",
    "end": "544310"
  },
  {
    "text": "Whereas the list assignment you\nsee here did not rebind",
    "start": "544310",
    "end": "552480"
  },
  {
    "text": "the object l 1, it\nchanged this.",
    "start": "552480",
    "end": "558149"
  },
  {
    "text": "OK? Now formally I could have had\nthis pointing off to another object containing 4, but that\njust seemed excessive, right?",
    "start": "558150",
    "end": "566620"
  },
  {
    "text": "But you see the difference. Great question, and a very\nimportant thing to understand,",
    "start": "566620",
    "end": "572550"
  },
  {
    "text": "and that's why I'm belaboring\nthis point, since this is where people tend to get pretty\nconfused, and this is",
    "start": "572550",
    "end": "579060"
  },
  {
    "text": "why mutation is very important\nto understand. Yeah. STUDENT: [UNINTELLIGIBLE]",
    "start": "579060",
    "end": "585899"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG:\nI'm just assuming it'll be a great question. STUDENT: [INAUDIBLE]",
    "start": "585900",
    "end": "597670"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG:\nExactly. So if-- very good question-- so,\nfor example, we can just",
    "start": "597670",
    "end": "605140"
  },
  {
    "start": "598000",
    "end": "705000"
  },
  {
    "text": "do it here. The question was, suppose I now\ntype L 1 equals the empty",
    "start": "605140",
    "end": "615150"
  },
  {
    "text": "list. I can print L 1, and I can\nprint L 2, because again,",
    "start": "615150",
    "end": "630760"
  },
  {
    "text": "that's analogous to this\nexample, where I just swung the binding of the identifier.",
    "start": "630760",
    "end": "637190"
  },
  {
    "text": "So this is important, it's a\nlittle bit subtle, but if you don't really understand this\ndeeply, you'll find yourself",
    "start": "637190",
    "end": "644960"
  },
  {
    "text": "getting confused a lot. All right?",
    "start": "644960",
    "end": "650500"
  },
  {
    "text": "OK. Let me move on, and I want to\ntalk about one more type.",
    "start": "650500",
    "end": "659550"
  },
  {
    "text": "By the way, if you look at the\nhandout from last time, you'll see that there's some other\nexamples of mutation,",
    "start": "659550",
    "end": "664710"
  },
  {
    "text": "including a function\nthat does mutation. It's kind of interesting, but I\ndon't think we need-- think we've probably done\nenough here that I",
    "start": "664710",
    "end": "671960"
  },
  {
    "text": "hope it now make sense. That one type I want to talk\nabout still is dictionaries.",
    "start": "671960",
    "end": "694120"
  },
  {
    "text": "Like lists, dictionaries are\nmutable, like lists, they can",
    "start": "694120",
    "end": "707650"
  },
  {
    "start": "705000",
    "end": "1175000"
  },
  {
    "text": "be heterogeneous, but unlike\nlists, they're not ordered.",
    "start": "707650",
    "end": "718320"
  },
  {
    "text": "The elements in them don't\nhave an order, and furthermore, we have generalized\nthe indexing.",
    "start": "718320",
    "end": "737579"
  },
  {
    "text": "So lists and strings, we can\nonly get at elements by",
    "start": "737580",
    "end": "744620"
  },
  {
    "text": "numbers, by integers, really. Here what we use is, think\nof every element of the",
    "start": "744620",
    "end": "753850"
  },
  {
    "text": "dictionary as a key value pair,\nwhere the keys are used",
    "start": "753850",
    "end": "768350"
  },
  {
    "text": "as the indices. So we can have an example,\nlet's look at it.",
    "start": "768350",
    "end": "781420"
  },
  {
    "text": "So, if you look at the function\nshow dics here, you'll see I've declared a\nvariable called e to f, ah,",
    "start": "781420",
    "end": "791260"
  },
  {
    "text": "think of that as English to\nFrench, and I've defined a dictionary to do translations.",
    "start": "791260",
    "end": "798650"
  },
  {
    "text": "And so, we see that the string\none corresponds the-- the key",
    "start": "798650",
    "end": "805690"
  },
  {
    "text": "one corresponds to the value un\nthe key soccer corresponds",
    "start": "805690",
    "end": "812670"
  },
  {
    "text": "to the French word football,\net cetera.",
    "start": "812670",
    "end": "819370"
  },
  {
    "text": "It's kind of bizarre, but the\nFrench call soccer football.",
    "start": "819370",
    "end": "825760"
  },
  {
    "text": "And then I can index in it. So if I print e to f of soccer,\nit will print the",
    "start": "825760",
    "end": "833100"
  },
  {
    "text": "string football. So you can imagine that this is\na very powerful mechanism.",
    "start": "833100",
    "end": "847170"
  },
  {
    "text": "So let's look what happens\nwhen I run-- start to run this.",
    "start": "847170",
    "end": "869200"
  },
  {
    "text": "All right. So, it says not defined-- and\nwhy did it say not defined,",
    "start": "869200",
    "end": "875820"
  },
  {
    "text": "there's an interesting\nquestion. Let's just make sure we get this\nright, and we start the",
    "start": "875820",
    "end": "881850"
  },
  {
    "text": "show up again--",
    "start": "881850",
    "end": "895380"
  },
  {
    "text": "All right, so, I run\nit, and sure enough, it shows football.",
    "start": "895380",
    "end": "902180"
  },
  {
    "text": "What happens if I\ngo e to f of 0?",
    "start": "902180",
    "end": "910710"
  },
  {
    "text": "I get a key error. Because, remember, these\nthings are not ordered.",
    "start": "910710",
    "end": "916009"
  },
  {
    "text": "There is no 0th element. 0 is not a key of this\nparticular object.",
    "start": "916010",
    "end": "924430"
  },
  {
    "text": "Now I could have made 0 a key,\nkeys don't have to be strings, but as it happened, I didn't.",
    "start": "924430",
    "end": "932589"
  },
  {
    "text": "So let's comment that out, so\nwe don't get stuck again.",
    "start": "932590",
    "end": "955480"
  },
  {
    "text": "Where we were before, I've\nprinted it here, you might be a little surprised\nof the order.",
    "start": "955480",
    "end": "961890"
  },
  {
    "text": "Why is soccer first? Because the order of this\ndoesn't matter.",
    "start": "961890",
    "end": "967190"
  },
  {
    "text": "That's why it's using\nset braces, so don't worry about that.",
    "start": "967190",
    "end": "972649"
  },
  {
    "text": "The next thing I'm doing is--\nso that's that, and then--",
    "start": "972650",
    "end": "979690"
  },
  {
    "text": "I'm now going to create another\none, n to s, for numbers to strings, where my\nkeys are numbers, in this case",
    "start": "979690",
    "end": "989125"
  },
  {
    "text": "the number 1 corresponds\nto the word one, and interestingly enough, I'm also\ngoing to have the word one",
    "start": "989125",
    "end": "995660"
  },
  {
    "text": "corresponding to the number 1. I can use anything I want for\nkeys, I can use anything I",
    "start": "995660",
    "end": "1001020"
  },
  {
    "text": "want for values. And now if we look at this,\nwe see, I can get this.",
    "start": "1001020",
    "end": "1010890"
  },
  {
    "text": "All right. So these are extremely\nvaluable.",
    "start": "1010890",
    "end": "1016019"
  },
  {
    "text": "I can do lots of things with\nthese, and you'll see that as we get to future assignments,\nwe'll make heavy use of",
    "start": "1016020",
    "end": "1021950"
  },
  {
    "text": "dictionaries. Yeah. Question. STUDENT: [INAUDIBLE]",
    "start": "1021950",
    "end": "1027480"
  },
  {
    "text": "PROFESSOR JOHN GUTTAG: You can,\nbut you don't know what order you'll get them in. What you can do is you can\niterate keys, which gives you",
    "start": "1027480",
    "end": "1036040"
  },
  {
    "text": "the keys in the dictionary, and\nthen you can choose them, but there's no guarantee\nin the order in",
    "start": "1036040",
    "end": "1042530"
  },
  {
    "text": "which you get keys. Now you might wonder, why\ndo we have dictionaries?",
    "start": "1042530",
    "end": "1048970"
  },
  {
    "text": "It would be pretty easy to\nimplement them with lists, because you could have a list\nwhere each element of the list",
    "start": "1048970",
    "end": "1057390"
  },
  {
    "text": "was a key value pair, and if\nI wanted to find the value corresponding to a key, I could\nsay for e in the list,",
    "start": "1057390",
    "end": "1066410"
  },
  {
    "text": "if the first element of e is the\nkey, then I get the value, otherwise I look at the next\nelement in the list.",
    "start": "1066410",
    "end": "1072620"
  },
  {
    "text": "So adding dictionaries, as\nProfessor Grimson said with so many other things, doesn't\ngive you any more",
    "start": "1072620",
    "end": "1078480"
  },
  {
    "text": "computational power. It gives you a lot of expressive\nconvenience, you",
    "start": "1078480",
    "end": "1084740"
  },
  {
    "text": "can write the programs much\nmore cleanly, but most importantly, it's fast.",
    "start": "1084740",
    "end": "1092059"
  },
  {
    "text": "Because if you did what I\nsuggested with the list, the time to look up the key would be\nlinear in the length of the",
    "start": "1092060",
    "end": "1097890"
  },
  {
    "text": "list. You'd have to look\nat each element until you found the key. Dictionaries are implemented\nusing a magic technique called",
    "start": "1097890",
    "end": "1105970"
  },
  {
    "text": "hashing, which we'll look at a\nlittle bit later in the term,",
    "start": "1105970",
    "end": "1112179"
  },
  {
    "text": "which allows us to retrieve\nkeys in constant time. So it doesn't matter how big\nthe dictionary is, you can",
    "start": "1112180",
    "end": "1119980"
  },
  {
    "text": "instantaneously retrieve the\nvalue associated with the key.",
    "start": "1119980",
    "end": "1125020"
  },
  {
    "text": "Extremely powerful. Not in the next problems set but\nin the problem set after that, we'll be exploiting that\nfacility of dictionaries.",
    "start": "1125020",
    "end": "1134660"
  },
  {
    "text": "All right. Any questions about this? If not, I will turn the podium\nover to Professor Grimson.",
    "start": "1134660",
    "end": "1142409"
  },
  {
    "text": "PROFESSOR ERIC GRIMSON:\nI've stolen it. This is like tag team\nwrestling, right?",
    "start": "1142410",
    "end": "1164039"
  },
  {
    "text": "Professor Guttag has you\non the ropes, I get to finish you off.",
    "start": "1164040",
    "end": "1171990"
  },
  {
    "text": "Try this again. OK. We wanted to finish up that\nsection, we're now going to",
    "start": "1171990",
    "end": "1177730"
  },
  {
    "text": "start on a new section, and I\nwant to try and do one and a",
    "start": "1177730",
    "end": "1182919"
  },
  {
    "text": "half things in the\nremaining time. I'm going to introduce one topic\nthat we're going to deal with fairly quickly, and then\nwe tackle the second topic,",
    "start": "1182920",
    "end": "1190590"
  },
  {
    "text": "it's going to start today, and\nwe're going to carry on. So let me tell the two\nthings I want to do. I want to talk a little bit\nabout how you use the things",
    "start": "1190590",
    "end": "1197580"
  },
  {
    "text": "we've been building in terms\nof functions to help you structure and organize\nyour code. It's a valuable tool that you\nwant to have as a programmer.",
    "start": "1197580",
    "end": "1205010"
  },
  {
    "text": "And then we're going to turn to\nthe question of efficiency. How do we measure efficiency\nof algorithms? Which is going to be a really\nimportant thing that we want",
    "start": "1205010",
    "end": "1211140"
  },
  {
    "text": "to deal with, and we'll start\nit today, it's undoubtedly going to take us a couple more\nlectures to finish it off.",
    "start": "1211140",
    "end": "1216549"
  },
  {
    "text": "Right, so how do you\nuse the idea of functions to organize code? We've been doing it implicitly,\never since we",
    "start": "1216550",
    "end": "1224305"
  },
  {
    "text": "introduced functions. I want to make it a little more\nexplicit, and I want to show you a tool for\ndoing that. And I think the easy way\nto do is-- is to",
    "start": "1224305",
    "end": "1231270"
  },
  {
    "text": "do it with an example. So let's take a really\nsimple example. I want to compute the\nlength of the",
    "start": "1231270",
    "end": "1237080"
  },
  {
    "text": "hypotenuse of a right triangle. And yeah, I know you know how\nto do it, but let's think about what might happen if\nI wanted to do that.",
    "start": "1237080",
    "end": "1243159"
  },
  {
    "text": "And in particular, if I think\nabout that problem-- actually I want to do this-- if I think\nabout that problem, I'm going",
    "start": "1243160",
    "end": "1257405"
  },
  {
    "start": "1255000",
    "end": "1882000"
  },
  {
    "text": "to write a little piece\nof pseudo code. Just to think about how I would\nbreak that problem up.",
    "start": "1257405",
    "end": "1263909"
  },
  {
    "text": "Pseudo code. Now, you're all linguistic\nmajors, pseudo means false, this sounds like code that ain't\ngoing to run, and that's",
    "start": "1263910",
    "end": "1270990"
  },
  {
    "text": "not the intent of the term. When I say pseudo code, what I\nmean is, I'm going to write a description of the steps,\nbut not in a particular",
    "start": "1270990",
    "end": "1278159"
  },
  {
    "text": "programming language. I'm going to simply write\na description of what do I want to do. So if I were to solve this\nproblem, here's the way I",
    "start": "1278160",
    "end": "1284270"
  },
  {
    "text": "would do it. I would say, first thing I want\nto do, is I want to input a value for the base\nas a float.",
    "start": "1284270",
    "end": "1298420"
  },
  {
    "text": "Need to get the base in. Second thing I want to do, I\nneed to get the height, so I'm",
    "start": "1298420",
    "end": "1303440"
  },
  {
    "text": "going to input a value for the\nheight, also as a float, a",
    "start": "1303440",
    "end": "1309759"
  },
  {
    "text": "floating point. OK. I get the two values in, what\ndo I need to do, well, you sort of know that, right?",
    "start": "1309760",
    "end": "1315480"
  },
  {
    "text": "I want to then do, I need to\nfind the square root-- b",
    "start": "1315480",
    "end": "1324510"
  },
  {
    "text": "squared plus h squared, right? The base plus the height, that's\nthe thing I want for the hypotenuse-- and I'm going\nto save that as a float in",
    "start": "1324510",
    "end": "1337390"
  },
  {
    "text": "hyp, for hypotenuse. And then finally I need to print\nsomething out, using the",
    "start": "1337390",
    "end": "1348170"
  },
  {
    "text": "value in hyp.",
    "start": "1348170",
    "end": "1354260"
  },
  {
    "text": "OK. Whoop-dee-doo, right? Come on. We know how to do this. But notice what I did.",
    "start": "1354260",
    "end": "1360300"
  },
  {
    "text": "First of all, I've used the\nnotion of modularity. I've listed a sequence of\nmodules, the things that I",
    "start": "1360300",
    "end": "1365370"
  },
  {
    "text": "want to do. Second thing to notice, is that\nlittle piece of pseudo code is telling me things\nabout values.",
    "start": "1365370",
    "end": "1373770"
  },
  {
    "text": "I need to have a float. I need to have another float\nhere, it's giving me some information.",
    "start": "1373770",
    "end": "1378860"
  },
  {
    "text": "Third thing to notice is,\nthere's a flow of control. The order which these things\nare going to happen.",
    "start": "1378860",
    "end": "1384450"
  },
  {
    "text": "And the fourth thing to notice\nis, I've used abstraction. I've said nothing about how I'm\ngoing to make square root.",
    "start": "1384450",
    "end": "1391530"
  },
  {
    "text": "I'm using it as an abstraction,\nsaying I'm going to have square root from\nsomewhere, maybe I'll build it myself, maybe somebody gives it\nto me as part of a library,",
    "start": "1391530",
    "end": "1397760"
  },
  {
    "text": "so I'm burying the details\ninside of it. I know this is a simple example,\nbut when you mature",
    "start": "1397760",
    "end": "1403610"
  },
  {
    "text": "as a programmer, one of the\nfirst things you should do when you sit down to tackle\nsome problem is write something like this\npseudo code.",
    "start": "1403610",
    "end": "1410120"
  },
  {
    "text": "I know Professor Guttag\ndoes it all the time. I know, for a lot of\nyou, it's like, OK, I got a heavy problem. Let's see, def Foobar open\nparen, a bunch of parameters.",
    "start": "1410120",
    "end": "1419399"
  },
  {
    "text": "Wrong way to start. Start by thinking about what\nare the sequences. This also, by the way, in some\nsense, gives me the beginnings",
    "start": "1419400",
    "end": "1424980"
  },
  {
    "text": "of my comments for what\nthe structure of my code is going to be. OK. If we do that, if you look at\nthe handout then, I can now",
    "start": "1424980",
    "end": "1432200"
  },
  {
    "text": "start implementing this. I wanted to show you that, so,\nfirst thing I'm going to do is say, all right, I know I'm going\nto need square root in",
    "start": "1432200",
    "end": "1438500"
  },
  {
    "text": "here, so I'm going to,\nin fact, import math. That's a little different from\nother import statements.",
    "start": "1438500",
    "end": "1445440"
  },
  {
    "text": "This says I'm going to get the\nentire math library and bring it in so I can use it.",
    "start": "1445440",
    "end": "1450830"
  },
  {
    "text": "And then, what's the first\nthing I wanted to do? I need to get a value\nfor base as a float. Well OK, and that sounds like\nI'm going to need to do input",
    "start": "1450830",
    "end": "1456940"
  },
  {
    "text": "of something, you can see that\nstatement there, it's-- got the wrong glasses on\nbut right there-- I'm going to do an input with\na little message, and I'm",
    "start": "1456940",
    "end": "1464230"
  },
  {
    "text": "going to store it in base. But here's where I'm going to\npractice a little bit of defensive programming.",
    "start": "1464230",
    "end": "1470030"
  },
  {
    "text": "I can't rely on Professor Guttag\nif I give this-- if this code to him, I can't rely\non him to type in a float.",
    "start": "1470030",
    "end": "1476500"
  },
  {
    "text": "Actually I can, because he's a\nsmart guy, but in general, I can't rely on the user-- PROFESSOR JOHN GUTTAG: I\nwouldn't do it right",
    "start": "1476500",
    "end": "1482040"
  },
  {
    "text": "to see if you did. PROFESSOR ERIC GRIMSON:\nActually, he's right, you know. He would not do it, just to\nsee if I'm doing it right. I can't rely on the user.",
    "start": "1482040",
    "end": "1487110"
  },
  {
    "text": "I want to make sure I\nget a float in it, so how do I do that? Well, here's one nice\nlittle trick. First of all, having read in\nthat value, I can check to",
    "start": "1487110",
    "end": "1496299"
  },
  {
    "text": "see, is it of the right type? Now, this is not the nicest way\nto do it but it'll work. I can look at the type of the\nvalue of base and compare it",
    "start": "1496300",
    "end": "1503190"
  },
  {
    "text": "to the type of an actual float\nand see, are they the same? Is this a real or a float?",
    "start": "1503190",
    "end": "1508490"
  },
  {
    "text": "If it is, I'm done. How do I go back if it isn't? Well, I'm going to create\na little infinite loop.",
    "start": "1508490",
    "end": "1514519"
  },
  {
    "text": "Not normally a good idea. I set up a variable here,\ncalled input OK. Initially it's false, because\nI have no input.",
    "start": "1514520",
    "end": "1521870"
  },
  {
    "text": "And then I run a loop in which\nI read something in, I check to see if it's the right type,\nif it is, I change that",
    "start": "1521870",
    "end": "1528120"
  },
  {
    "text": "variable to say it's now the\ncorrect type, which means the next time through the loop, I'm\ngoing to say I'm all set",
    "start": "1528120",
    "end": "1534320"
  },
  {
    "text": "and I'm going to bounce out. But if it is not, it's going\nto print out a message here saying, you screwed up, somewhat\npolitely, and it's",
    "start": "1534320",
    "end": "1542580"
  },
  {
    "text": "going to go back around. So it'll just cycle until\nI get something of the right type. Nice way of doing it.",
    "start": "1542580",
    "end": "1549230"
  },
  {
    "text": "Right, what's the second\nthing I do? Well, I get the same sort of\nthing to read in the height, once I have that I'm going to\ntake base squared plus height",
    "start": "1549230",
    "end": "1556679"
  },
  {
    "text": "squared, and there's a form\nthat we've just seen once before, and it's going to repeat\nit, that is math.SQRT",
    "start": "1556680",
    "end": "1562690"
  },
  {
    "text": "and it says the following: it\nsays, take from the math library the function\ncalled sqrt.",
    "start": "1562690",
    "end": "1571370"
  },
  {
    "text": "OK. We're going to come back to this\nwhen we get to objects, it's basically picking up that\nobject and it's applying that,",
    "start": "1571370",
    "end": "1576880"
  },
  {
    "text": "putting that value into hype,\nand then just printing something out. And again, if I just run this,\njust to show that it's going",
    "start": "1576880",
    "end": "1583419"
  },
  {
    "text": "to do the right thing, it says\nenter base, I'm obnoxious, it says oops, wasn't a float, so\nwe'll be nice about it, and I",
    "start": "1583420",
    "end": "1593180"
  },
  {
    "text": "enter a height, and it prints\nout what I expected. I just concatenated those\nstrings together, by the way,",
    "start": "1593180",
    "end": "1599120"
  },
  {
    "text": "at the end. All right. Notice what I did. OK.",
    "start": "1599120",
    "end": "1604770"
  },
  {
    "text": "I went from this description,\nit gives me [UNINTELLIGIBLE] some information. I need to have a particular\ntype. I made sure I had the\nparticular type.",
    "start": "1604770",
    "end": "1611390"
  },
  {
    "text": "I've used some abstraction to\nsuppress some details here. Now if you look at that list,\nthere is actually something I",
    "start": "1611390",
    "end": "1618590"
  },
  {
    "text": "didn't seem to check, which is,\nI said I wanted a float stored in hyp.",
    "start": "1618590",
    "end": "1624830"
  },
  {
    "text": "How do I know I've got\na float in hyp? Well I'm relying on the\ncontract, if you like, that",
    "start": "1624830",
    "end": "1631080"
  },
  {
    "text": "the manufacturer of square root\nput together, which is, if I know I'm giving it two\nfloats, which I do because I make sure they're floats, the\ncontract, if you like, of",
    "start": "1631080",
    "end": "1638240"
  },
  {
    "text": "square root says I'll give\nyou back a float. So I can guarantee I've got\nsomething of the right type.",
    "start": "1638240",
    "end": "1644240"
  },
  {
    "text": "OK. I know this is boring\nas whatever. But there's an important\npoint here. Having now used this pseudo code\nto line things up, I can",
    "start": "1644240",
    "end": "1651530"
  },
  {
    "text": "start putting some additional\nstructure on this. And in particular, I'm sure\nyou're looking at this going--",
    "start": "1651530",
    "end": "1657030"
  },
  {
    "text": "will look at it if we look\nat the right piece-- going, wait a minute. This chunk of code and this\nchunk of code, they're really",
    "start": "1657030",
    "end": "1666420"
  },
  {
    "text": "doing the same thing. And this is something\nI want to use. If I look at those two pieces\nof computation, I can see a",
    "start": "1666420",
    "end": "1673090"
  },
  {
    "text": "pattern there. It's an obvious pattern\nof what I'm doing. And in particular, I can then\nask the following question,",
    "start": "1673090",
    "end": "1679060"
  },
  {
    "text": "which is, what's different\nbetween those two pieces of code? And I suggest two\nthings, right?",
    "start": "1679060",
    "end": "1685440"
  },
  {
    "text": "One is, what's the thing\nI print out when I ask for the input? The second thing is, what do I\nprint out if I actually don't",
    "start": "1685440",
    "end": "1692970"
  },
  {
    "text": "get the right input in? And so the only two differences\nare, right there, and there versus\nhere and here.",
    "start": "1692970",
    "end": "1700970"
  },
  {
    "text": "So this is a good place to\nthink about, OK, let me capture that. Let me write a function, in fact\nthe literal thing I would",
    "start": "1700970",
    "end": "1706660"
  },
  {
    "text": "do is to say, identify the\nthings that change, give each of them a variable name because\nI want to refer to",
    "start": "1706660",
    "end": "1713100"
  },
  {
    "text": "them, and then write a function\nthat captures the rest of that computation\njust with those variable names inside.",
    "start": "1713100",
    "end": "1719660"
  },
  {
    "text": "And in fact, if you look down--\nand I'm just going to highlight this portion, I'm not\ngoing to run it-- but if you look down here, that's\nexactly what that does.",
    "start": "1719660",
    "end": "1728230"
  },
  {
    "text": "I happen to have it commented\nout, right? What does it do? It has height, it says, I've got\ntwo names of things: the request message and\nthe error message.",
    "start": "1728230",
    "end": "1734780"
  },
  {
    "text": "The body of that function\nlooks exactly like the computation up above, except\nI'm simply using those in",
    "start": "1734780",
    "end": "1740440"
  },
  {
    "text": "place of the specific message\nI had before. And then the only other\ndifference is obviously, it's",
    "start": "1740440",
    "end": "1746019"
  },
  {
    "text": "a function I need to\nreturn a value. So when I'm done, I'm going to\ngive the value back out. All right?",
    "start": "1746020",
    "end": "1751540"
  },
  {
    "text": "And that then let's me get\nto, basically, this code.",
    "start": "1751540",
    "end": "1757870"
  },
  {
    "text": "Having done that, I simply call\nbase with get float, I call height with get float, and\ndo the rest of the work.",
    "start": "1757870",
    "end": "1763070"
  },
  {
    "text": "All right. What's the point\nof doing this? Well, notice again. What have I done?",
    "start": "1763070",
    "end": "1768510"
  },
  {
    "text": "I've captured a module\ninside of a function. And even though it's a simple\nlittle thing here, there's",
    "start": "1768510",
    "end": "1773730"
  },
  {
    "text": "some a couple of really nice\nadvantages to this. All right? First one is there's\nless code to read.",
    "start": "1773730",
    "end": "1779390"
  },
  {
    "text": "It's easier to debug. I don't have as much\nto deal with. But the more important thing\nis, I've now separated out",
    "start": "1779390",
    "end": "1785400"
  },
  {
    "text": "implementation from\nfunctionality, or implementation from use.",
    "start": "1785400",
    "end": "1790470"
  },
  {
    "text": "What does that mean? It means anybody using that\nlittle function get float",
    "start": "1790470",
    "end": "1795649"
  },
  {
    "text": "doesn't have to worry about\nwhat's inside of it. So for example, I decide I want\nto change the message I print out, I don't have to\nchange the function, I just",
    "start": "1795650",
    "end": "1802500"
  },
  {
    "text": "pass in a different parameter. Well if I-- you know, with\n[UNINTELLIGIBLE PHRASE sorry,",
    "start": "1802500",
    "end": "1808399"
  },
  {
    "text": "let me say it differently. I don't need to worry about\nhow checking is done, it's handled inside of\nthat function.",
    "start": "1808400",
    "end": "1814420"
  },
  {
    "text": "If I decide there's a better\nway to get input, and there is, then I can make it to change\nwhat I don't have to",
    "start": "1814420",
    "end": "1820960"
  },
  {
    "text": "change the code that\nuses the input. So, if you like, I've built a\nseparation between the user",
    "start": "1820960",
    "end": "1827100"
  },
  {
    "text": "and the implementer. And that's exactly one of the\nreasons why I want to have the functions, because I've\nseparated those out.",
    "start": "1827100",
    "end": "1833820"
  },
  {
    "text": "Another way of saying it is,\nanything that uses get float doesn't care what the details\nare inside or shouldn't, and",
    "start": "1833820",
    "end": "1839880"
  },
  {
    "text": "if I change that definition, I\ndon't have to change anything elsewhere in my code, whereas if\nI just have the raw code in",
    "start": "1839880",
    "end": "1846300"
  },
  {
    "text": "there, I have to go\noff and do it. Right, so the things we want\nyou to take away from this are, get into the habit of using\npseudo code when you sit",
    "start": "1846300",
    "end": "1854700"
  },
  {
    "text": "down to start a problem, write\nout what are the steps. I will tell you that a good\nprogrammer, at least in my",
    "start": "1854700",
    "end": "1860150"
  },
  {
    "text": "mind, may actually go back and\nmodify the pseudo code as they realize they're missing things,\nbut it's easier to do",
    "start": "1860150",
    "end": "1865350"
  },
  {
    "text": "that when you're looking at a\nsimple set of steps, than when you're in the middle\nof a pile of code.",
    "start": "1865350",
    "end": "1870629"
  },
  {
    "text": "And get into the habit of using\nit to help you define what is the flow of control. What are the basic modules, what\ninformation needs to be",
    "start": "1870630",
    "end": "1877910"
  },
  {
    "text": "passed between those\nmodules in order to make the code work. OK.",
    "start": "1877910",
    "end": "1883290"
  },
  {
    "start": "1882000",
    "end": "2280000"
  },
  {
    "text": "That was the short topic. I will come back to this some\nmore and you're going to get lots of practice with this.",
    "start": "1883290",
    "end": "1888480"
  },
  {
    "text": "What I want to do is\nto start talking about a different topic. Which is efficiency.",
    "start": "1888480",
    "end": "1893740"
  },
  {
    "text": "And this is going to sound\nlike a weird topic, we're going to see why it's of\nvalue in a second.",
    "start": "1893740",
    "end": "1899170"
  },
  {
    "text": "I want to talk about efficiency,\nand we're going to, or at least I'm going to, at\ntimes also refer to this as",
    "start": "1899170",
    "end": "1907750"
  },
  {
    "text": "orders of growth, for reasons\nthat you'll see over the next few minutes.",
    "start": "1907750",
    "end": "1914890"
  },
  {
    "text": "Now, efficiency is obviously\nan important consideration when you're designing code,\nalthough I have to admit, at",
    "start": "1914890",
    "end": "1920300"
  },
  {
    "text": "least for me, I usually want\nto at least start initially with code that works, and then\nworry about how I might go",
    "start": "1920300",
    "end": "1925570"
  },
  {
    "text": "back and come up with more\nefficient implementation. I like to have something I\ncan rely on, but it is an important issue.",
    "start": "1925570",
    "end": "1931059"
  },
  {
    "text": "And our goal over the next\ncouple of lectures, is basically to give you\na sense of this. So we're not going to turn\nyou into an expert on",
    "start": "1931060",
    "end": "1937990"
  },
  {
    "text": "computational efficiency. That's, there are whole courses\non that, there's some great courses here on that,\nit takes some mathematical",
    "start": "1937990",
    "end": "1943640"
  },
  {
    "text": "sophistication, we're going to\npush that off a little bit. But what we-- what we do want\nto do, is to give you some",
    "start": "1943640",
    "end": "1948710"
  },
  {
    "text": "intuition about how to\napproach questions of efficiency. We want you to have a sense of\nwhy some programs complete",
    "start": "1948710",
    "end": "1956440"
  },
  {
    "text": "almost before you're\ndone typing it. Some programs run overnight.",
    "start": "1956440",
    "end": "1962160"
  },
  {
    "text": "Some programs won't stop\nuntil I'm old and gray. Some programs won't stop until\nyou're old and gray.",
    "start": "1962160",
    "end": "1969080"
  },
  {
    "text": "And these are really different\nefficiencies, and we want to give you a sense of how do you\nreason about those different kinds of programs.",
    "start": "1969080",
    "end": "1975460"
  },
  {
    "text": "And part of it is we want you\nto learn how to have a catalog, if you like, of\ndifferent classes of algorithms, so that when you get\na problem, you try and map",
    "start": "1975460",
    "end": "1983720"
  },
  {
    "text": "it into an appropriate class,\nand use the leverage, if you like, of that class of algorithms. Now.",
    "start": "1983720",
    "end": "1992030"
  },
  {
    "text": "It's a quick sidebar, I've got\nto say, I'm sure talking about efficiency to folks like you\nprobably seems really strange.",
    "start": "1992030",
    "end": "1997309"
  },
  {
    "text": "I mean, you grew up in an age\nwhen computers were blazingly fast, and have tons of memory,\nso why in the world do you",
    "start": "1997310",
    "end": "2003220"
  },
  {
    "text": "care about efficiency? Some of us were not so lucky. So I'll admit, my first computer\nI program was a PDP6,",
    "start": "2003220",
    "end": "2012070"
  },
  {
    "text": "only Professor Guttag even knows\nwhat PDP stands for, it was made by Digital Equipment\nCompany, which does not exist",
    "start": "2012070",
    "end": "2017080"
  },
  {
    "text": "anymore, is now long gone. It had, I know, this is\nold guy stories, but it had 160k of memory.",
    "start": "2017080",
    "end": "2026549"
  },
  {
    "text": "Yeah. 160k. 160 kilobits of memory. I mean, your flash cards have\nmore than that, right?",
    "start": "2026550",
    "end": "2033530"
  },
  {
    "text": "It had a processor speed\nof one megahertz. It did a million operations\nper second.",
    "start": "2033530",
    "end": "2040809"
  },
  {
    "text": "So let's think about it. This sucker, what's\nit got in there? That Air Mac, it's, see, it's\ngot, its go-- my Air Mac, I",
    "start": "2040810",
    "end": "2047470"
  },
  {
    "text": "don't know about John's, his is\nprobably better, mine has 1.8 gigahertz speed. That's 1800 times faster.",
    "start": "2047470",
    "end": "2055210"
  },
  {
    "text": "But the real one that blows me\naway is, it has 2 gig of memory inside of it. That's 12 thousand times\nmore memory.",
    "start": "2055210",
    "end": "2063540"
  },
  {
    "text": "Oh, and by the way? The PDP6, it was in a rack\nabout this tall. From the floor, not\nfrom the table.",
    "start": "2063540",
    "end": "2069810"
  },
  {
    "text": "All right, so you didn't grow\nup in the late 1800s like I did, you don't have to\nworry about this sort of stuff, right? But a point I'm trying to make\nis, it sounds like anymore",
    "start": "2069810",
    "end": "2076409"
  },
  {
    "text": "computers have gotten so\nblazingly fast, why should you worry about it? Let me give you one other\nanecdote that I can't resist.",
    "start": "2076410",
    "end": "2082370"
  },
  {
    "text": "This is the kind of thing you\ncan use at cocktail parties to impress your friends\nfrom Harvard. OK.",
    "start": "2082370",
    "end": "2087389"
  },
  {
    "text": "Imagine I have a little lamp, a\nlittle goose-- one of those little gooseneck lamps, I'd put\nit on the table here, I'd put the height about a f-- about\na foot off the table.",
    "start": "2087390",
    "end": "2095389"
  },
  {
    "text": "And if I was really good, I\ncould hit, or time it so that when I hurt-- yeah, try again. When I turn this on switch on\nin the lamp, at exactly the",
    "start": "2095390",
    "end": "2103070"
  },
  {
    "text": "same time, I'm going to hit a\nkey on my computer and start it running. OK. In the length of time it takes\nfor the light to get from that",
    "start": "2103070",
    "end": "2112200"
  },
  {
    "text": "bulb to the table, this\nmachine processes two operations.",
    "start": "2112200",
    "end": "2119810"
  },
  {
    "text": "Oh come on, that's amazing. Two operations. You know, you can do the\nsimple numbers, right? [UNINTELLIGIBLE PHRASE]",
    "start": "2119810",
    "end": "2125820"
  },
  {
    "text": "Light travels basically a\nfoot in a nanosecond. Simple rule of thumb. Now, the nanosecond is what,\n10 to the minus 9 seconds.",
    "start": "2125820",
    "end": "2132650"
  },
  {
    "text": "This thing does 2 gig\nworth of operations.",
    "start": "2132650",
    "end": "2138430"
  },
  {
    "text": "A gig is 10 to the 9, so it\ndoes two operations in the length of time it takes light\nto get from one foot off the table down to the table.",
    "start": "2138430",
    "end": "2144070"
  },
  {
    "text": "That's amazing. So why in the world do you\ncare about efficiency? Well the problem is that the\nproblems grow faster than the",
    "start": "2144070",
    "end": "2152710"
  },
  {
    "text": "computers speed up. I'll give you two examples. I happen to work in\nmedical imaging. Actually, so does Professor\nGuttag.",
    "start": "2152710",
    "end": "2158720"
  },
  {
    "text": "In my in my area of research,\nit's common for us to want to process about 100 images a\nsecond in order to get real",
    "start": "2158720",
    "end": "2164690"
  },
  {
    "text": "time display. Each image has about a million\nelements in it. I've got to process about a half\na gig of data a second in",
    "start": "2164690",
    "end": "2172220"
  },
  {
    "text": "order to get anything\nout of it. Second example. Maybe one that'll hit a little\nmore home to you.",
    "start": "2172220",
    "end": "2178170"
  },
  {
    "text": "I'm sure you all use Google, I'm\nsure it's a verb in your vocabulary, right? Now, Google processes--\nten million?",
    "start": "2178170",
    "end": "2184590"
  },
  {
    "text": "Ten billion pages? John? I think ten billion was the\nlast number I heard. Does that sound about right? PROFESSOR JOHN GUTTAG:\nI think it might",
    "start": "2184590",
    "end": "2190862"
  },
  {
    "text": "actually be more by now. PROFESSOR ERIC GRIMSON:\nMaybe more by now. But let's, for the sake of\nargument, ten billion pages. Imagine you want to search\nthrough Google to find a",
    "start": "2190862",
    "end": "2198140"
  },
  {
    "text": "particular page. You want to do it in a second. And you're going to just do it\nthe brute force way, assuming",
    "start": "2198140",
    "end": "2203880"
  },
  {
    "text": "you could even reach all of\nthose pages in that time. Well, if you're going to do\nthat, you've got to be able to",
    "start": "2203880",
    "end": "2209420"
  },
  {
    "text": "find what you're looking for\nin a page in two steps. Where a step is a comparison\nor an arithmetic operation.",
    "start": "2209420",
    "end": "2217470"
  },
  {
    "text": "Ain't going to happen, right? You just can't do it. So again, part of the point here\nis that things grow-- or",
    "start": "2217470",
    "end": "2223300"
  },
  {
    "text": "to rephrase it, interesting\nthings grow at an incredible rate. And as a consequence, brute\nforce methods are typically",
    "start": "2223300",
    "end": "2229960"
  },
  {
    "text": "not going to work. OK. So that then leads to the\nquestion about what should we do about this?",
    "start": "2229960",
    "end": "2234990"
  },
  {
    "text": "And probably the obvious thing\nyou'll think about is, we'll come up with a clever\nalgorithm. And I want to disabuse\nyou of that notion.",
    "start": "2234990",
    "end": "2241430"
  },
  {
    "text": "It's a great idea if\nyou can do it, The guy who-- I think I'm going to say this\nright, John, right? Sanjay? Ghemawat?-- with a guy who was\na graduate of our department,",
    "start": "2241430",
    "end": "2249120"
  },
  {
    "text": "who is the heart and soul behind\nGoogle's really fast search, is an incredibly smart\nguy, and he did come up with a",
    "start": "2249120",
    "end": "2254480"
  },
  {
    "text": "really clever algorithm about\nhow you structure that search, in order to make it happen. And he probably made a lot\nof money along the way.",
    "start": "2254480",
    "end": "2259880"
  },
  {
    "text": "So if you have a great idea,\nyou know, talk to a good patent attorney and get\nit locked away. But in general, it's hard\nto come up with the",
    "start": "2259880",
    "end": "2266460"
  },
  {
    "text": "really clever algorithm. What you're much better at doing\nis saying how do I take the problem I've got and map it\ninto a class of algorithms",
    "start": "2266460",
    "end": "2274970"
  },
  {
    "text": "about which I know and use the\nefficiencies of those to try and figure out how\nto make it work.",
    "start": "2274970",
    "end": "2280390"
  },
  {
    "text": "So what we want to do, is, I\nguess another way of saying it is, efficiency is really about\nchoice of algorithm.",
    "start": "2280390",
    "end": "2292589"
  },
  {
    "text": "And we want to help you learn\nhow to map a problem into a",
    "start": "2292590",
    "end": "2298620"
  },
  {
    "text": "class of algorithms of\nsome efficiency.",
    "start": "2298620",
    "end": "2304970"
  },
  {
    "text": "That's our goal. OK. So to do this, we need a little\nmore abstract way of",
    "start": "2304970",
    "end": "2311190"
  },
  {
    "text": "talking about efficiency, and\nso, the question is, how do we think about efficiency? Typically there's two things\nwe want to measure.",
    "start": "2311190",
    "end": "2319079"
  },
  {
    "text": "Space and time. Sounds like an astrophysics\ncourse, right?",
    "start": "2319080",
    "end": "2326650"
  },
  {
    "text": "Now, space usually we--\nach, try it again. When we talk about space, what\nwe usually refer to is, how",
    "start": "2326650",
    "end": "2334210"
  },
  {
    "text": "much computer memory does it\ntake to complete a computation of a particular size?",
    "start": "2334210",
    "end": "2339240"
  },
  {
    "text": "So let me write that down, it's\nhow much memory do I need",
    "start": "2339240",
    "end": "2348240"
  },
  {
    "text": "to complete a computation. And by that, I mean, not how\nmuch memory do I need to store",
    "start": "2348240",
    "end": "2353760"
  },
  {
    "text": "the size of the input, it's\nreally how much internal memory do I use up as I go\nthrough the computation?",
    "start": "2353760",
    "end": "2359100"
  },
  {
    "text": "I've got some internal variables\nI have to store, what kinds of things do I\nhave to keep track of?",
    "start": "2359100",
    "end": "2364500"
  },
  {
    "text": "You're going to see the\narguments about space if you take some of the courses that\nfollow on, and again, some nice courses about that.",
    "start": "2364500",
    "end": "2369690"
  },
  {
    "text": "For this course, we're\nnot going to worry about space that much. What we're really going\nto focus on is time.",
    "start": "2369690",
    "end": "2376109"
  },
  {
    "text": "OK. So we're going to focus here. And the obvious question I\ncould start with is, and",
    "start": "2376110",
    "end": "2384510"
  },
  {
    "text": "suppose I ask you, how long does\nthe algorithm implemented by this program take to run?",
    "start": "2384510",
    "end": "2392370"
  },
  {
    "text": "How might I answer\nthat question? Any thoughts?",
    "start": "2392370",
    "end": "2401140"
  },
  {
    "text": "Yeah. STUDENT: [INAUDIBLE]",
    "start": "2401140",
    "end": "2406440"
  },
  {
    "text": "PROFESSOR ERIC GRIMSON:\nAh, you're jumping ahead of me, great. The answer was, find a\nmathematical expression depending on the number\nof inputs. It was exactly where\nI want to go.",
    "start": "2406440",
    "end": "2412560"
  },
  {
    "text": "Thank you. I was hoping for a simpler\nanswer, which is, just run it.",
    "start": "2412560",
    "end": "2418619"
  },
  {
    "text": "Which is, yeah I know,\nseems like a dumb thing to say, right? One of the things you could\nimagine is just try it on and",
    "start": "2418620",
    "end": "2423670"
  },
  {
    "text": "input, see how long it takes. You're all cleverer than that,\nbut I want to point out why that's not a great idea.",
    "start": "2423670",
    "end": "2429270"
  },
  {
    "text": "First of all, that depends on\nwhich input I've picked. All right? Obviously the algorithm is\nlikely to depend on the size",
    "start": "2429270",
    "end": "2434850"
  },
  {
    "text": "of the input, so this\nis not a great idea. Second one is, it depends on\nwhich machine I'm running on. If I'm using a PDP6, it's going\nto take a whole lot",
    "start": "2434850",
    "end": "2441980"
  },
  {
    "text": "longer than if I'm\nusing an Air Mac. All right? Third one is, it may depend\non which version",
    "start": "2441980",
    "end": "2447050"
  },
  {
    "text": "of Python I'm running. Depends on how clever the\nimplementer of Python was. Fourth one is, it may depend on\nwhich programming language",
    "start": "2447050",
    "end": "2453720"
  },
  {
    "text": "I'm doing it in. So I could do it empirically,\nbut I don't want to do that typically, it's just not a\ngreat way to get at it.",
    "start": "2453720",
    "end": "2458940"
  },
  {
    "text": "And so in fact, what we\nwant is exactly what the young lady said. I'm going to ask the following\nquestion, which is-- let me",
    "start": "2458940",
    "end": "2466240"
  },
  {
    "start": "2460000",
    "end": "2781000"
  },
  {
    "text": "write it down-- what is the\nnumber of the basic steps",
    "start": "2466240",
    "end": "2476750"
  },
  {
    "text": "needed as a function\nof the input size?",
    "start": "2476750",
    "end": "2491270"
  },
  {
    "text": "That's the question we're going\nto try and address. If we can do this, this is good,\nbecause first of all, it",
    "start": "2491270",
    "end": "2497750"
  },
  {
    "text": "removes any questions about what\nmachine I'm running on, it's talking about\nfundamentally, how hard is this problem, and the second\nthing is, it is going to do it",
    "start": "2497750",
    "end": "2504960"
  },
  {
    "text": "specifically in terms\nof the input. Which is one of the things\nthat I was worried about.",
    "start": "2504960",
    "end": "2510780"
  },
  {
    "text": "OK. So to do this, we're going to\nhave to do a couple of things. All right, the first one is,\nwhat do we mean by input size?",
    "start": "2510780",
    "end": "2517619"
  },
  {
    "text": "And unfortunately, this depends\non the problem. It could be what's the size of\nthe integer I pass in as an",
    "start": "2517620",
    "end": "2523500"
  },
  {
    "text": "argument, if that's what\nI'm passing in. It could be, how long is the\nlist, if I'm processing a list or a tuple It could\nbe, how many bits",
    "start": "2523500",
    "end": "2530180"
  },
  {
    "text": "are there in something. So it-- that is something where\nwe have to simply be clear about specifying what\nwe're using as input size.",
    "start": "2530180",
    "end": "2537099"
  },
  {
    "text": "And we want to characterize it\nmathematically as some number, or some variable rather, the\nlength of the list, the size",
    "start": "2537100",
    "end": "2542820"
  },
  {
    "text": "of the integer, would be the\nthing we'd want to do. Second thing we've got\nto worry about is,",
    "start": "2542820",
    "end": "2548140"
  },
  {
    "text": "what's a basic step? All right, if I bury a whole lot\nof computation inside of",
    "start": "2548140",
    "end": "2553819"
  },
  {
    "text": "something, I can say, wow, this\nprogram, you know, runs in one step. Unfortunately, that one step\ncalls the Oracle at Delphi and",
    "start": "2553820",
    "end": "2560080"
  },
  {
    "text": "gets an answer back. Maybe not quite what you want. We're typically going to use\nas basic steps the built-in",
    "start": "2560080",
    "end": "2567050"
  },
  {
    "text": "primitives that a machine\ncomes with. Or another way of saying it is,\nwe're going to use as the basic steps, those operations\nthat run in constant time, so",
    "start": "2567050",
    "end": "2573960"
  },
  {
    "text": "arithmetic operations. Comparisons. Memory access, and in fact one\nof the things we're going to",
    "start": "2573960",
    "end": "2579300"
  },
  {
    "text": "do here, is we're going to\nassume a particular model,",
    "start": "2579300",
    "end": "2588230"
  },
  {
    "text": "called a random access model,\nwhich basically says, we're",
    "start": "2588230",
    "end": "2596340"
  },
  {
    "text": "going to assume that the length\nof time it takes me to get to any location in\nmemory is constant.",
    "start": "2596340",
    "end": "2603450"
  },
  {
    "text": "It's not true, by the way, of\nall programming languages. In fact, Professor Guttag\nalready talked about that, in some languages lists take\na time linear with the",
    "start": "2603450",
    "end": "2610290"
  },
  {
    "text": "length to get to it. So we're to assume we can get\nto any piece of data, any instruction in constant time,\nand the second assumption",
    "start": "2610290",
    "end": "2616430"
  },
  {
    "text": "we're going to make is that the\nbasic primitive steps take constant time, same amount\nof time to compute.",
    "start": "2616430",
    "end": "2622089"
  },
  {
    "text": "Again, not completely true,\nbut it's a good model, so arithmetic operations,\ncomparisons, things of that",
    "start": "2622090",
    "end": "2627960"
  },
  {
    "text": "sort, we're all going to assume\nare basically in that in that particular model. OK. Having done that, then, there\nare three things that we're",
    "start": "2627960",
    "end": "2634650"
  },
  {
    "text": "going to look at. As I said, what we want to do\nis, we want to count the number of basic steps it takes\nto compute a computation as a",
    "start": "2634650",
    "end": "2641000"
  },
  {
    "text": "function of input size. And the question is, what\ndo we want to count? Now, one possibility\nis to do best case.",
    "start": "2641000",
    "end": "2650720"
  },
  {
    "text": "Over all possible inputs to\nthis function, what's the fastest it runs? The fewest, so the minimum,\nif you like.",
    "start": "2650720",
    "end": "2659589"
  },
  {
    "text": "It's nice, but not particularly\nhelpful. The other obvious one to\ndo would be worst case.",
    "start": "2659590",
    "end": "2667930"
  },
  {
    "text": "Again, over all possible inputs\nto this function, what's the most number of\nsteps it takes to do the computation?",
    "start": "2667930",
    "end": "2674470"
  },
  {
    "text": "And the third possibility, is\nto do the expected case. The average.",
    "start": "2674470",
    "end": "2683430"
  },
  {
    "text": "I'm going to think\nof it that way. In general, people focus\non worst case.",
    "start": "2683430",
    "end": "2689680"
  },
  {
    "text": "For a couple of reasons. In some ways, this would be\nnicer, do expected cases, it's going to tell you on average how\nmuch you expect to take,",
    "start": "2689680",
    "end": "2696319"
  },
  {
    "text": "but it tends to be hard to\ncompute, because to compute that, you have to know a\ndistribution on input.",
    "start": "2696320",
    "end": "2702220"
  },
  {
    "text": "How likely are all the inputs,\nare they all equally likely, or are they going to depend\non other things? And that may depend on the\nuser, so you can't",
    "start": "2702220",
    "end": "2707369"
  },
  {
    "text": "kind of get at that. We're, as a consequence, going\nto focus on worst case.",
    "start": "2707370",
    "end": "2712470"
  },
  {
    "text": "This is handy for a\ncouple of reasons. One, it means there\nare no surprises. All right?",
    "start": "2712470",
    "end": "2717630"
  },
  {
    "text": "If you run it, you have a sense\nof the upper bound, about how much time it's going\nto take to do this computation, so you're not\ngoing to get surprised by",
    "start": "2717630",
    "end": "2723070"
  },
  {
    "text": "something showing up. The second one is, a lot of the\ntime, the worst case is the one that happens.",
    "start": "2723070",
    "end": "2729950"
  },
  {
    "text": "Professor Guttag used an example\nof looking in the dictionary for something. Now, imagine that dictionary\nactually has something that's",
    "start": "2729950",
    "end": "2735710"
  },
  {
    "text": "a linear search to go through\nit, as opposed to the hashing he did, so it's a list,\nfor example. If it's in there, you'll find\nit perhaps very quickly.",
    "start": "2735710",
    "end": "2742380"
  },
  {
    "text": "If it's not there, you've got\nto go through everything to say it's not there. And so the worst case often\nis the one that shows up,",
    "start": "2742380",
    "end": "2747900"
  },
  {
    "text": "especially in things\nlike search. So, as a consequence, we're\ngoing to stick with the worst",
    "start": "2747900",
    "end": "2755160"
  },
  {
    "text": "case analysis. Now, I've got two\nminutes left. I was going to start showing\nyou some examples, but I",
    "start": "2755160",
    "end": "2761750"
  },
  {
    "text": "think, rather than doing that,\nI'm going to stop here, I'm going to give you two minutes\nback of time, but I want to just point out to you that we\nare going to have fun next",
    "start": "2761750",
    "end": "2769630"
  },
  {
    "text": "week, because I'm going to show\nyou what in the world that has to do with\nefficiency.",
    "start": "2769630",
    "end": "2776960"
  },
  {
    "text": "So with that, we'll\nsee you next time. ",
    "start": "2776960",
    "end": "2781582"
  }
]