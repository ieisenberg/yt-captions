[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "6840"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation or view\nadditional materials from",
    "start": "6840",
    "end": "13389"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at ocw.mit.edu.",
    "start": "13390",
    "end": "21560"
  },
  {
    "text": "PROFESSOR: I want to take a few\nminutes at the start of today's lecture to wrap\nup a few more things about debugging.",
    "start": "21560",
    "end": "27460"
  },
  {
    "text": "And then I'll move on\nto the main event.",
    "start": "27460",
    "end": "33470"
  },
  {
    "text": "Just a few small points. First of all, keep in mind that\nthe bug is probably not",
    "start": "33470",
    "end": "39030"
  },
  {
    "text": "where you think it is. Because if a bug were there,\nyou'd have already found it.",
    "start": "39030",
    "end": "45860"
  },
  {
    "text": "There are some simple things\nthat you should always look at when you're looking for bugs.",
    "start": "45860",
    "end": "54940"
  },
  {
    "text": "Reversed order of arguments. You might have a function that\ntakes to floats and you just",
    "start": "54940",
    "end": "63850"
  },
  {
    "text": "passed them in the\nwrong order. You may have noticed that when\nProfessor Grimson and I used",
    "start": "63850",
    "end": "69190"
  },
  {
    "text": "examples in class, we were\npretty careful how we name our parameters.",
    "start": "69190",
    "end": "74500"
  },
  {
    "text": "And I often end up using the\nsame names for the actuals and the formals. And this just helps me not get\nconfused about what order to",
    "start": "74500",
    "end": "82740"
  },
  {
    "text": "do things in. Spelling.",
    "start": "82740",
    "end": "90310"
  },
  {
    "text": "These are just dumb little\nthings to look for. Did you spell all the\nidentifiers the way you think you did.",
    "start": "90310",
    "end": "95969"
  },
  {
    "text": "The problem is, when you\nread code you see what you expect to see.",
    "start": "95970",
    "end": "101190"
  },
  {
    "text": "And if you've typed in l when\nyou should've typed a 1, or a 1 when you should've typed an\nl, you're likely to miss it.",
    "start": "101190",
    "end": "108320"
  },
  {
    "text": "If you've made a mistake with\nupper and lower case. Things like that. So just be very careful\nlooking at that.",
    "start": "108320",
    "end": "117060"
  },
  {
    "text": "Initialization.",
    "start": "117060",
    "end": "124500"
  },
  {
    "text": "A very common bug is to\ninitialize a variable. Go through a loop, and then\nforget to reinitialize it when",
    "start": "124500",
    "end": "132530"
  },
  {
    "text": "it needs to be reinitialized\nagain. So it's initialized outside\nthe loop when it should be",
    "start": "132530",
    "end": "137890"
  },
  {
    "text": "initialized inside the loop. Or conversely, inside the\nloop when it should be outside the loop.",
    "start": "137890",
    "end": "144820"
  },
  {
    "text": "So look carefully at when\nvariables are being initialized.",
    "start": "144820",
    "end": "155330"
  },
  {
    "text": "Object versus value equality.",
    "start": "155330",
    "end": "163180"
  },
  {
    "text": "Particularly when you use double\nequals, are you asking whether you've got the same\nobject or the same value?",
    "start": "163180",
    "end": "171129"
  },
  {
    "text": "They mean very different things,\nas we have seen. Keep track of that.",
    "start": "171130",
    "end": "178060"
  },
  {
    "text": "Related to that is aliasing.",
    "start": "178060",
    "end": "185390"
  },
  {
    "text": "And you'll see that, by the way,\non the problem set that we're posting tomorrow. Where we're going to ask you\nto just look at some code,",
    "start": "185390",
    "end": "193410"
  },
  {
    "text": "that there's some issues there\nwith the fact that you alias things, maybe on purpose,\nmaybe on accident.",
    "start": "193410",
    "end": "200910"
  },
  {
    "text": "And by that I mean two different\nways to get to the same value, the same object.",
    "start": "200910",
    "end": "207239"
  },
  {
    "text": "Frequently that introduces\nbugs into the program.",
    "start": "207240",
    "end": "213010"
  },
  {
    "text": "A particular instance of that\nis deep versus shallow copy.",
    "start": "213010",
    "end": "222860"
  },
  {
    "text": "When you decide to make a copy\nof something like a list, you have to think hard about are you\nonly copying the top level",
    "start": "222860",
    "end": "230360"
  },
  {
    "text": "of the list, but if it's, say,\na list that contains a list, are you also getting\na new copy of",
    "start": "230360",
    "end": "236990"
  },
  {
    "text": "everything it contains? It doesn't matter if it's a list\nof integers or a list of",
    "start": "236990",
    "end": "242750"
  },
  {
    "text": "strings or a list of tuples, but\nit matters a lot if it's a list of lists.",
    "start": "242750",
    "end": "248750"
  },
  {
    "text": "Or a list of anything that\ncould be mutable. So when you copy, what\nare you getting?",
    "start": "248750",
    "end": "254680"
  },
  {
    "text": "When you copy a dictionary,\nfor example. Think through all of that.",
    "start": "254680",
    "end": "260810"
  },
  {
    "text": "And again, a related problem\nthat people run into is side-effects.",
    "start": "260810",
    "end": "269190"
  },
  {
    "text": "You call a function and it\nreturns a value, but maybe it, on purpose or on accident,\nmodifies one of the actual",
    "start": "269190",
    "end": "277590"
  },
  {
    "text": "parameters. So you could each make\na list of things.",
    "start": "277590",
    "end": "285680"
  },
  {
    "text": "Every experienced programmer\nover time develops a personal",
    "start": "285680",
    "end": "291289"
  },
  {
    "text": "model of the mistakes\nthey make. I know the kinds of things\nI get wrong.",
    "start": "291290",
    "end": "297650"
  },
  {
    "text": "And so when I'm looking for a\nbug, I always say, oh, have you done this dumb thing\nyou always do.",
    "start": "297650",
    "end": "304030"
  },
  {
    "text": "So be a little bit\nintrospective. Keep track of the mistakes\nyou make.",
    "start": "304030",
    "end": "309970"
  },
  {
    "text": "And if your program doesn't\nwork, that should be your first guess.",
    "start": "309970",
    "end": "315570"
  },
  {
    "text": "Couple of other hints. Keep a record of what\nyou've tried.",
    "start": "315570",
    "end": "330330"
  },
  {
    "text": "People will look at things and\nthey'll come in and that'll talk to a TA, and the TA will\nsay, did you try this?",
    "start": "330330",
    "end": "337030"
  },
  {
    "text": "And the person will\nsay, I don't know. That leads you to end up\ndoing the same thing",
    "start": "337030",
    "end": "342620"
  },
  {
    "text": "over and over again. This gets back to my main theme\nof Tuesday, which is be systematic.",
    "start": "342620",
    "end": "349220"
  },
  {
    "text": "Know what you've already tried,\ndon't waste your time trying it again.",
    "start": "349220",
    "end": "357600"
  },
  {
    "text": "Think about reconsidering\nyour assumptions.",
    "start": "357600",
    "end": "368700"
  },
  {
    "text": "A huge one is, are you actually\nrunning the code you're looking at\nin your editor.",
    "start": "368700",
    "end": "376670"
  },
  {
    "text": "This is a mistake I make\nall the time in Python. I sit there in idle, and\nI edit some code.",
    "start": "376670",
    "end": "385349"
  },
  {
    "text": "I then click on the shell,\nrather than hitting F5, try",
    "start": "385350",
    "end": "391140"
  },
  {
    "text": "and run it and say, it's\nnot doing what I thought I should do. And I'll sit there staring at\nthe output, staring at the",
    "start": "391140",
    "end": "397639"
  },
  {
    "text": "code, not realizing that\nthat output was not produced by that code.",
    "start": "397640",
    "end": "405160"
  },
  {
    "text": "It's a mistake I've learned\nthat I make. It's an easy one to\nmake in Python.",
    "start": "405160",
    "end": "412550"
  },
  {
    "text": "Lots of assumptions like that. You thought you knew what the\nbuilt-in function sort did,",
    "start": "412550",
    "end": "419190"
  },
  {
    "text": "method sort did. Well, does it do what\nyou think it does? Does append do what\nyou think it does?",
    "start": "419190",
    "end": "425129"
  },
  {
    "text": "Go back and say, alright,\nI've obviously, some assumption is not right.",
    "start": "425130",
    "end": "433220"
  },
  {
    "text": "When you're debugging somebody\nelse's code, debug the code,",
    "start": "433220",
    "end": "441630"
  },
  {
    "text": "not the comments.",
    "start": "441630",
    "end": "447460"
  },
  {
    "text": "I've often made the mistake\nof believing the comments somebody wrote in your code\nabout what some function does.",
    "start": "447460",
    "end": "454900"
  },
  {
    "text": "Sometimes it's good\nto believe it. But sometimes you\nhave to read it.",
    "start": "454900",
    "end": "461849"
  },
  {
    "text": "Important thing. When it gets really\ntough, get help.",
    "start": "461850",
    "end": "469540"
  },
  {
    "text": "Swallow your pride. Any one of my graduate students\nwill tell you that",
    "start": "469540",
    "end": "475810"
  },
  {
    "text": "from time to time I walk into\ntheir office and say, do you have a minute? And if they foolishly say yes,\nI drag them back to my office",
    "start": "475810",
    "end": "484960"
  },
  {
    "text": "and say I'm stuck on this bug,\nwhat am I doing wrong?",
    "start": "484960",
    "end": "490009"
  },
  {
    "text": "And it's amazing what -- well,\na, they're smarter than I am which helps.",
    "start": "490010",
    "end": "495030"
  },
  {
    "text": "But even if they weren't smarter\nthan I am, just a fresh set of eyes.",
    "start": "495030",
    "end": "500260"
  },
  {
    "text": "I've read through the same thing\ntwenty times and I've missed something obvious. Someone who's never seen it\nbefore looks at and says, did",
    "start": "500260",
    "end": "507365"
  },
  {
    "text": "you really mean to do this? Are you sure you didn't want to\ndo for i in range of list,",
    "start": "507365",
    "end": "515890"
  },
  {
    "text": "rather than for i in list? That sort of thing.",
    "start": "515890",
    "end": "521539"
  },
  {
    "text": "Makes a big difference to just\nget that set of eyes. And in particular, try and\nexplain to somebody else what",
    "start": "521540",
    "end": "532180"
  },
  {
    "text": "you think the program\nis doing. So I'll sit there with the\nstudent and I'll say, I'm",
    "start": "532180",
    "end": "537850"
  },
  {
    "text": "going to try and explain to\nyou why what I think this program is doing. And probably 80% of the time,\nhalfway through my",
    "start": "537850",
    "end": "546760"
  },
  {
    "text": "explanation, I say,\noh, never mind. I'm embarrassed. And I send them away.",
    "start": "546760",
    "end": "552180"
  },
  {
    "text": "Because just the act of\nexplaining it to him or her has helped me understand it.",
    "start": "552180",
    "end": "557920"
  },
  {
    "text": "So when you're really stuck,\njust get somebody. And try and explain to them why\nyou think your program is",
    "start": "557920",
    "end": "564529"
  },
  {
    "text": "doing what it's doing. Another good thing to do\nwhen you're really",
    "start": "564530",
    "end": "569930"
  },
  {
    "text": "stuck is walk away.",
    "start": "569930",
    "end": "576460"
  },
  {
    "text": "Take a break. Come back and look at it with\nfresh eyes of your own.",
    "start": "576460",
    "end": "581810"
  },
  {
    "text": "Effectively, what you're doing\nhere is perhaps trading latency for efficiency.",
    "start": "581810",
    "end": "589510"
  },
  {
    "text": "It may, if you go back, come\nback and two hours later, maybe you'll, it'll take you\nat least two hours to have",
    "start": "589510",
    "end": "597380"
  },
  {
    "text": "found the bugs, because you've\nbeen away for two hours. And maybe if you'd stayed there\nand worked really hard",
    "start": "597380",
    "end": "602390"
  },
  {
    "text": "you'd have found it an hour\nand fifty eight minutes. But is it really worth\nthe two minutes?",
    "start": "602390",
    "end": "607970"
  },
  {
    "text": "This is another reason, by\nthe way, to start it long before it's due. That you actually have the\nleisure to walk away.",
    "start": "607970",
    "end": "615580"
  },
  {
    "text": "All right. What do you do when you've\nfound the bug and you need to fix it?",
    "start": "615580",
    "end": "622480"
  },
  {
    "text": "Remember the old saw,\nhaste makes waste.",
    "start": "622480",
    "end": "630610"
  },
  {
    "text": "I don't know this but I'll bet\nBenjamin Franklin said this.",
    "start": "630610",
    "end": "636200"
  },
  {
    "text": "Don't rush into anything. Think about the fix, don't make\nthe first change that",
    "start": "636200",
    "end": "642110"
  },
  {
    "text": "comes to mind and\nsee if it works. Ask yourself, will it fix all\nof the symptoms you've seen?",
    "start": "642110",
    "end": "649639"
  },
  {
    "text": "Or if not, are the symptoms\nindependent, will at least fix some of them?",
    "start": "649640",
    "end": "654980"
  },
  {
    "text": "What are the ramifications\nof the proposed change. Will it break other things?",
    "start": "654980",
    "end": "663020"
  },
  {
    "text": "That's a big issue. You can fix one thing, you\nbreak something else. So think through what this\nchange might break.",
    "start": "663020",
    "end": "670710"
  },
  {
    "text": "Does it allow you to tidy\nup other things? This is important, I\nthink, that code",
    "start": "670710",
    "end": "682890"
  },
  {
    "text": "should not always grow.",
    "start": "682890",
    "end": "691070"
  },
  {
    "text": "We all have a tendency to\nfix code by adding code.",
    "start": "691070",
    "end": "696840"
  },
  {
    "text": "And the program just gets bigger\nand bigger and bigger. The more code you have, the\nharder it is to get it right.",
    "start": "696840",
    "end": "705070"
  },
  {
    "text": "So, sometimes, what you need\nto, so you just pull back. And say, well, let me\njust tidy things up.",
    "start": "705070",
    "end": "713180"
  },
  {
    "text": "That, by the way, is also\na good debugging tool. Sometimes when I'm really stuck,\nI say, alright let me",
    "start": "713180",
    "end": "718680"
  },
  {
    "text": "stop looking for the bug. Let me just clean up the\ncode a little bit. Make my program prettier.",
    "start": "718680",
    "end": "724220"
  },
  {
    "text": "And in the process of tidying it\nup and making it prettier, I'll often by accident\nfind the bug.",
    "start": "724220",
    "end": "730940"
  },
  {
    "text": "So it's a good trick\nto remember. Finally, and this is very\nimportant, make sure that you",
    "start": "730940",
    "end": "746649"
  },
  {
    "text": "can revert. There's nothing more frustrating\nthen spending four",
    "start": "746650",
    "end": "757009"
  },
  {
    "text": "hours debugging, and realizing\nat the end of four hours your program is worse than it\nwas when you started.",
    "start": "757010",
    "end": "764550"
  },
  {
    "text": "And you can't get back to where\nit was when you started. So if you look at one of my\ndirectories, you'll find that",
    "start": "764550",
    "end": "775020"
  },
  {
    "text": "I've been pretty anal about\nsaving old versions.",
    "start": "775020",
    "end": "782480"
  },
  {
    "text": "I can always pretty much get\nback to some place I've been. So if I've made a set of changes\nand I realize I've",
    "start": "782480",
    "end": "789160"
  },
  {
    "text": "broken something that used to\nwork, I can find a version of the code in which it used to\nwork, and figure out what was",
    "start": "789160",
    "end": "796340"
  },
  {
    "text": "going on there. Disk space is cheap.",
    "start": "796340",
    "end": "802820"
  },
  {
    "text": "Don't hesitate to save\nyour old versions. It's a good thing.",
    "start": "802820",
    "end": "808029"
  },
  {
    "text": "Alright, that's the end of my,\nmaybe sermon is the right word",
    "start": "808030",
    "end": "813750"
  },
  {
    "text": "on debugging. Polemic, I don't know. I hope it will be helpful. And I hope you'll remember some\nof these things as you",
    "start": "813750",
    "end": "821380"
  },
  {
    "text": "try and get your programs\nto work. I now want to get back to\nalgorithms. And where we've",
    "start": "821380",
    "end": "828360"
  },
  {
    "text": "sort of been for a while,\nand where we will stay for a while. More fundamentally, I want to\nget back to what I think of as",
    "start": "828360",
    "end": "836530"
  },
  {
    "text": "the main theme of 6.00, which\nis taking a problem and",
    "start": "836530",
    "end": "843070"
  },
  {
    "text": "finding some way to formulate\nthe problem so that we can use",
    "start": "843070",
    "end": "848190"
  },
  {
    "text": "computing to help us\nget an answer.",
    "start": "848190",
    "end": "853280"
  },
  {
    "text": "And in particular, we're going\nto spend the next few lectures looking at a class of problems\nknown as optimization",
    "start": "853280",
    "end": "860620"
  },
  {
    "text": "problems. In general,\nevery optimization",
    "start": "860620",
    "end": "876300"
  },
  {
    "text": "problem is the same. It has two parts.",
    "start": "876300",
    "end": "881830"
  },
  {
    "text": "Some function that you're either\nattempting to maximize",
    "start": "881830",
    "end": "890840"
  },
  {
    "text": "or minimize the value of.",
    "start": "890840",
    "end": "897550"
  },
  {
    "text": "And these are duals. And some set of constraints\nthat must be honored.",
    "start": "897550",
    "end": "914370"
  },
  {
    "text": "Possibly an empty set\nof constraints. So what are some of the classic\noptimization problems?",
    "start": "914370",
    "end": "922730"
  },
  {
    "text": "Well one of the most well-known\nis the so-called shortest path problem.",
    "start": "922730",
    "end": "933240"
  },
  {
    "text": "Probably almost every one\nof you has used a shortest path algorithm. For example, if you go to\nMapquest, or Google Maps and",
    "start": "933240",
    "end": "941910"
  },
  {
    "text": "ask how do I get from\nhere to there. You give it the function,\nprobably in this case to",
    "start": "941910",
    "end": "948780"
  },
  {
    "text": "minimize, and it gives you\na choice of functions. Minimize time, minimize\ndistance.",
    "start": "948780",
    "end": "956320"
  },
  {
    "text": "And maybe you give it a\nset of constraints. I don't want to drive\non highways.",
    "start": "956320",
    "end": "961400"
  },
  {
    "text": "And it tries to find the\nshortest way, subject to those constraints, to get from Point\nA to Point B. And there are",
    "start": "961400",
    "end": "970260"
  },
  {
    "text": "many, many other instances\nof this kind of thing. And tomorrow it's recitation,\nwe'll spend quite a bit of",
    "start": "970260",
    "end": "976690"
  },
  {
    "text": "time on shortest\npath problems. Another classic optimization\nproblem is",
    "start": "976690",
    "end": "985730"
  },
  {
    "text": "the traveling salesman. Actually, I should probably,\nbe modern, call it the",
    "start": "985730",
    "end": "994519"
  },
  {
    "text": "traveling salesperson, the\ntraveling salesperson problem.",
    "start": "994520",
    "end": "1004250"
  },
  {
    "text": "So the problem here, roughly, is\ngiven, a number of cities,",
    "start": "1004250",
    "end": "1009390"
  },
  {
    "text": "and say the cost of traveling\nfrom city to city by airplane, what's the least cost round\ntrip that you can find?",
    "start": "1009390",
    "end": "1019110"
  },
  {
    "text": "So you start at one place, you\nhave to go to a number of other places. End up where you started.",
    "start": "1019110",
    "end": "1025289"
  },
  {
    "text": "It's not quite the same as the\nshortest path, and figure out the way to do that\nthat involves",
    "start": "1025290",
    "end": "1031030"
  },
  {
    "text": "spending the least money. Or the least time, or\nsomething else.",
    "start": "1031030",
    "end": "1039390"
  },
  {
    "text": "What are some of the other\nclassic optimization problems?",
    "start": "1039390",
    "end": "1047490"
  },
  {
    "text": "There's bin packing.",
    "start": "1047490",
    "end": "1056270"
  },
  {
    "text": "Filling up some container with\nobjects of varying size and, perhaps, shape.",
    "start": "1056270",
    "end": "1063649"
  },
  {
    "text": "So you've got the trunk of\nyour car and you've got a bunch of luggage. More luggage than can\nactually fit in.",
    "start": "1063650",
    "end": "1069600"
  },
  {
    "text": "And you're trying to figure\nout what order to put things in. And which ones you can put in. How to fill up that bin.",
    "start": "1069600",
    "end": "1077770"
  },
  {
    "text": "Very important in shipping. People use bin packing\nalgorithms to figure out, for example, how to load\nup container ships.",
    "start": "1077770",
    "end": "1084870"
  },
  {
    "text": "Things of that nature. Moving vans, all sorts of\nthings of that nature.",
    "start": "1084870",
    "end": "1091340"
  },
  {
    "text": "In biology and in natural\nlanguage processing and many other things, we see a lot of\nsequence alignment problems.",
    "start": "1091340",
    "end": "1103420"
  },
  {
    "text": "For example, aligning DNA\nsequences, or RNA sequences.",
    "start": "1103420",
    "end": "1111810"
  },
  {
    "text": "And, one we'll spend a fair\namount of time on today and",
    "start": "1111810",
    "end": "1117280"
  },
  {
    "text": "Tuesday is the knapsack\nproblem.",
    "start": "1117280",
    "end": "1123440"
  },
  {
    "text": "In the old days people used to\ncall backpacks knapsacks. So we old folks sometimes even\nstill make that mistake.",
    "start": "1123440",
    "end": "1132240"
  },
  {
    "text": "And the problem there is, you've\ngot a bunch of things. More than will fit into the\nknapsack, and you're trying to",
    "start": "1132240",
    "end": "1138520"
  },
  {
    "text": "figure out which things to\ntake and which things to leave. As you plan\nyour hiking trip.",
    "start": "1138520",
    "end": "1143550"
  },
  {
    "text": "How much water should\nyou take. How many blankets? How much food? And you're trying to optimize\nthe value of the objects you",
    "start": "1143550",
    "end": "1152640"
  },
  {
    "text": "can take subject to the\nconstraint that the backpack is of finite size.",
    "start": "1152640",
    "end": "1160309"
  },
  {
    "text": "Now, why am I telling\nyou all of this at this lightning speed?",
    "start": "1160310",
    "end": "1167500"
  },
  {
    "text": "It's because I want you to think\nabout it, going forward,",
    "start": "1167500",
    "end": "1173950"
  },
  {
    "text": "about the issue of problem\nreduction.",
    "start": "1173950",
    "end": "1179139"
  },
  {
    "text": "We'll come back to this.",
    "start": "1179140",
    "end": "1187730"
  },
  {
    "text": "What this basically means is,\nyou're given some problem to solve, that you've never\nseen before.",
    "start": "1187730",
    "end": "1194580"
  },
  {
    "text": "And the first thing you do is\nask is it an instance of some",
    "start": "1194580",
    "end": "1200159"
  },
  {
    "text": "problem that other people\nhave already solved?",
    "start": "1200160",
    "end": "1206020"
  },
  {
    "text": "So when the folks at Mapquest\nsat down to do their program, I guarantee you somebody opened\nan algorithms book and",
    "start": "1206020",
    "end": "1214870"
  },
  {
    "text": "said, what have other\npeople done to solve shortest path problems?",
    "start": "1214870",
    "end": "1220200"
  },
  {
    "text": "I'll rely on fifty years of\nclever people rather than trying to invent my own.",
    "start": "1220200",
    "end": "1226210"
  },
  {
    "text": "And so frequently what we try\nand do is, we take a new problem and map it onto an old\nproblem so that we can use an",
    "start": "1226210",
    "end": "1234960"
  },
  {
    "text": "old solution. In order to be able to do that,\nit's nice to have in our",
    "start": "1234960",
    "end": "1241419"
  },
  {
    "text": "heads an inventory of previously\nsolved problems. To",
    "start": "1241420",
    "end": "1247005"
  },
  {
    "text": "which we can reduce the\ncurrent problem. So as we go through this\nsemester, we'll look at,",
    "start": "1247005",
    "end": "1254000"
  },
  {
    "text": "briefly or not so briefly,\ndifferent previously solved problems in the hope that at\nsome time in your future, when",
    "start": "1254000",
    "end": "1261960"
  },
  {
    "text": "you have a problem to deal\nwith, you'll say, I know that's really like\nshortest path, or",
    "start": "1261960",
    "end": "1267830"
  },
  {
    "text": "really like graph coloring. Let me just take my problem and\nturn it into that problem,",
    "start": "1267830",
    "end": "1274000"
  },
  {
    "text": "and use an existing solution. So we'll start looking in detail\nat one problem, and",
    "start": "1274000",
    "end": "1282970"
  },
  {
    "text": "that's the knapsack problem.",
    "start": "1282970",
    "end": "1290120"
  },
  {
    "text": "Let's see. Where do I want to start? Oh yes, OK. So far, we've been looking\nat problems that",
    "start": "1290120",
    "end": "1296590"
  },
  {
    "text": "have pretty fast solutions. Most optimization problems do\nnot have fast solutions.",
    "start": "1296590",
    "end": "1306810"
  },
  {
    "text": "That is to say, when you're\ndealing with a large set of things, it takes a while to\nget the right answer.",
    "start": "1306810",
    "end": "1314210"
  },
  {
    "text": "Consequently, you have to\nbe clever about it. Typically up till now, we've\nlooked at things that can be",
    "start": "1314210",
    "end": "1320700"
  },
  {
    "text": "done in sublinear time. Or, at worst, polynomial time.",
    "start": "1320700",
    "end": "1329450"
  },
  {
    "text": "We'll now look at a problem that\ndoes not fall into that. And we'll start with\nwhat's called the",
    "start": "1329450",
    "end": "1334720"
  },
  {
    "text": "continuous knapsack problem.",
    "start": "1334720",
    "end": "1342210"
  },
  {
    "text": "So here's the classic\nformulation. Assume that you are a burglar.",
    "start": "1342210",
    "end": "1350559"
  },
  {
    "text": "And you have a backpack that\nholds, say, eight pounds' worth of stuff.",
    "start": "1350560",
    "end": "1355980"
  },
  {
    "text": "And you've now broken into a\nhouse and you're trying to decide what to take.",
    "start": "1355980",
    "end": "1361529"
  },
  {
    "text": "Well, let's assume in the\ncontinuous world, what you is you walk into the house and you\nsee something like four",
    "start": "1361530",
    "end": "1368480"
  },
  {
    "text": "pounds of gold dust. And you\nsee three pounds of silver",
    "start": "1368480",
    "end": "1379580"
  },
  {
    "text": "dust, and maybe ten\npounds of raisins.",
    "start": "1379580",
    "end": "1386750"
  },
  {
    "text": "And I don't actually\nknow the periodic table entry for raisins. So I'll have to write it out.",
    "start": "1386750",
    "end": "1396679"
  },
  {
    "text": "Well, how would you solve\nthis problem?",
    "start": "1396680",
    "end": "1401730"
  },
  {
    "text": "First, let's say, what\nis the problem? How can we formulate it?",
    "start": "1401730",
    "end": "1407929"
  },
  {
    "text": "Well, let's assume that what\nwe want to do is, we have",
    "start": "1407930",
    "end": "1413070"
  },
  {
    "text": "something we want to optimize. So we're looking for\na function to",
    "start": "1413070",
    "end": "1418429"
  },
  {
    "text": "maximize, in this case. What might that function be?",
    "start": "1418430",
    "end": "1424180"
  },
  {
    "text": "Well, let's say it's some number\nof, some amount of, the",
    "start": "1424180",
    "end": "1431750"
  },
  {
    "text": "cost of the value of gold. Times however many\npounds of gold.",
    "start": "1431750",
    "end": "1440620"
  },
  {
    "text": "Plus the cost of silver times\nhowever many - no, gold, is a",
    "start": "1440620",
    "end": "1448870"
  },
  {
    "text": "g, isn't it. Pounds of silver, plus the\ncost of raisins times the",
    "start": "1448870",
    "end": "1458039"
  },
  {
    "text": "number of pounds of raisins. So that's the function\nI want to optimize.",
    "start": "1458040",
    "end": "1464740"
  },
  {
    "text": "I want to maximize\nthat function.",
    "start": "1464740",
    "end": "1470710"
  },
  {
    "text": "And the constraint is what?",
    "start": "1470710",
    "end": "1480120"
  },
  {
    "text": "It's that the pounds of gold\nplus the pounds of silver plus",
    "start": "1480120",
    "end": "1485320"
  },
  {
    "text": "the pounds of raisins is\nno greater than eight.",
    "start": "1485320",
    "end": "1492110"
  },
  {
    "text": "So I've got a function to\nmaximize and a constraint that must be obeyed.",
    "start": "1492110",
    "end": "1498620"
  },
  {
    "text": "Now, the strategy here\nis pretty clear. As often is for the continuous\nproblem.",
    "start": "1498620",
    "end": "1504760"
  },
  {
    "text": "What's the strategy? I pour in the gold till\nI run out of gold. I pour in the silver until\nI run out of silver.",
    "start": "1504760",
    "end": "1512740"
  },
  {
    "text": "And then I take as many raisins\nas will fit in and I leave. Right?",
    "start": "1512740",
    "end": "1518600"
  },
  {
    "text": "I hope almost every one of you\ncould figure out that was the right strategy. If not, you're not well suited\nto a life of crime.",
    "start": "1518600",
    "end": "1529400"
  },
  {
    "text": "What I just described is an instance of a greedy algorithm.",
    "start": "1529400",
    "end": "1543930"
  },
  {
    "text": "In a greedy algorithm, at\nevery step you do what maximizes your value\nat that step.",
    "start": "1543930",
    "end": "1552570"
  },
  {
    "text": "So there's no planning ahead. You just do what's ever best.\nIt's like when someone gets",
    "start": "1552570",
    "end": "1558960"
  },
  {
    "text": "their food and they start\nby eating dessert. Just to make sure they\nget to the best part before they're full.",
    "start": "1558960",
    "end": "1567640"
  },
  {
    "text": "In this case, a greedy algorithm\nactually gives us the best possible solution.",
    "start": "1567640",
    "end": "1578430"
  },
  {
    "text": "That's not always so. Now, you've actually all implemented a greedy algorithm.",
    "start": "1578430",
    "end": "1585429"
  },
  {
    "text": "Or are in the process thereof. Where have we implemented a\ngreedy algorithm, or have been",
    "start": "1585430",
    "end": "1591800"
  },
  {
    "text": "asked to do a greedy\nalgorithm? Well, there are not that many\nthings you guys have been",
    "start": "1591800",
    "end": "1597960"
  },
  {
    "text": "working on this semester. Yeah? STUDENT: [INAUDIBLE]",
    "start": "1597960",
    "end": "1608760"
  },
  {
    "text": "PROFESSOR: Exactly right. So what you were doing there,\nit was a really good throw.",
    "start": "1608760",
    "end": "1621539"
  },
  {
    "text": "But it was a really good answer\nyou gave. So I'll forgive you the bad hands.",
    "start": "1621540",
    "end": "1629700"
  },
  {
    "text": "You were asked to choose\nthe word that gave you the maximum value. And then do it again with\nwhatever letters you had left.",
    "start": "1629700",
    "end": "1640820"
  },
  {
    "text": "Was that guaranteed to win? To give you the best\npossible scores?",
    "start": "1640820",
    "end": "1647120"
  },
  {
    "text": "No. Suppose, for example, you had\nthe letters this, doglets.",
    "start": "1647120",
    "end": "1657940"
  },
  {
    "text": "Well, the highest scoring word\nmight have been something like Doges, these guys used to rule\nVenice, but if you did that",
    "start": "1657940",
    "end": "1670200"
  },
  {
    "text": "you'd been left with the letters\nl and t, which are",
    "start": "1670200",
    "end": "1675440"
  },
  {
    "text": "kind of hard to use. So you've optimized\nthe first step.",
    "start": "1675440",
    "end": "1680770"
  },
  {
    "text": "But now you're stuck\nwith something that's not very useful. Whereas in fact, maybe you would\nhave been better to go",
    "start": "1680770",
    "end": "1690960"
  },
  {
    "text": "with dog, dogs, and let.",
    "start": "1690960",
    "end": "1699820"
  },
  {
    "text": "So what we see here is an\nexample of something very important and quite general.",
    "start": "1699820",
    "end": "1707890"
  },
  {
    "text": "Which was that locally optimal\ndecisions do not always lead",
    "start": "1707890",
    "end": "1731600"
  },
  {
    "text": "to a global optimums. So you\ncan't just repeatedly do the",
    "start": "1731600",
    "end": "1745340"
  },
  {
    "text": "apparently local thing\nand expect to necessarily get to it.",
    "start": "1745340",
    "end": "1751220"
  },
  {
    "text": "Now, as it happens with the\ncontinuous knapsack problem as we've formulated it,\ngreedy is good.",
    "start": "1751220",
    "end": "1761020"
  },
  {
    "text": "But let's look for a slight\nvariant of it, where greedy is",
    "start": "1761020",
    "end": "1767710"
  },
  {
    "text": "not so good. And that's what's called the\nzero-one knapsack problem.",
    "start": "1767710",
    "end": "1796140"
  },
  {
    "text": "This is basically a discrete\nversion of the knapsack problem.",
    "start": "1796140",
    "end": "1802420"
  },
  {
    "text": "The formulation is that we have\nn items and at every step",
    "start": "1802420",
    "end": "1812590"
  },
  {
    "text": "we have to either take\nthe whole item or none of the item.",
    "start": "1812590",
    "end": "1818060"
  },
  {
    "text": "In the continuous problem, the\ngold dust was assumed to be infinitely small.",
    "start": "1818060",
    "end": "1823919"
  },
  {
    "text": "And so you could take as much\nof it as you wanted. Here it's as if you\nhad gold bricks.",
    "start": "1823920",
    "end": "1830750"
  },
  {
    "text": "You get to take the whole brick\nor no brick at all.",
    "start": "1830750",
    "end": "1836210"
  },
  {
    "text": "Each item has a weight and a\nvalue, and we're trying to",
    "start": "1836210",
    "end": "1841610"
  },
  {
    "text": "optimize it as before. So let's look at an example of\na zero-one knapsack problem.",
    "start": "1841610",
    "end": "1847880"
  },
  {
    "text": "Again we'll go back\nto our burglar. So the burglar breaks into the\nhouse and finds the following",
    "start": "1847880",
    "end": "1861100"
  },
  {
    "text": "items available. And you'll see in your handout\na list of items and their value and how much,\nwhat they weight.",
    "start": "1861100",
    "end": "1868250"
  },
  {
    "text": "Finds a watch, a nice Bose\nradio, a beautiful Tiffany",
    "start": "1868250",
    "end": "1873830"
  },
  {
    "text": "vase, and a large\nvelvet Elvis.",
    "start": "1873830",
    "end": "1879890"
  },
  {
    "text": "And now this burglar finds, in\nfact, two of each of those. Person is a real velvet Elvis\nfan and needed two",
    "start": "1879890",
    "end": "1886430"
  },
  {
    "text": "copies of this one. Alright, and now he's trying\nto decide what to take.",
    "start": "1886430",
    "end": "1895129"
  },
  {
    "text": "Well if the knapsack were large\nenough the thief would take it all and run, but let's\nassume that it can only hold",
    "start": "1895130",
    "end": "1900890"
  },
  {
    "text": "eight pounds, as before. And therefore the thief\nhas choices to make.",
    "start": "1900890",
    "end": "1906630"
  },
  {
    "text": "Well, there are three types of\nthieves I want to consider: the greedy thief, the\nslow thief, and you.",
    "start": "1906630",
    "end": "1917570"
  },
  {
    "text": "We'll start with the\ngreedy thief. Well, the greedy thief follows\nthe greedy algorithm.",
    "start": "1917570",
    "end": "1923300"
  },
  {
    "text": "What do you get if you follow\nthe greedy algorithm? What's the first thing\nthe thief does? Takes the most valuable item,\nwhich is a watch.",
    "start": "1923300",
    "end": "1934720"
  },
  {
    "text": "And then what does\nhe do after that? Takes another watch. And then?",
    "start": "1934720",
    "end": "1942539"
  },
  {
    "text": "Pardon? STUDENT: [INAUDIBLE] PROFESSOR: And then? STUDENT: [INAUDIBLE]",
    "start": "1942540",
    "end": "1948390"
  },
  {
    "text": "PROFESSOR: No. Not unless he wants to break\nthe vase into little pieces and stuff it in the corners.",
    "start": "1948390",
    "end": "1954429"
  },
  {
    "text": "The backpack is now\nfull, right? There's no more room.",
    "start": "1954430",
    "end": "1961659"
  },
  {
    "text": "So the greedy thief take\nthat and leaves. But it's not an optimal\nsolution.",
    "start": "1961660",
    "end": "1972419"
  },
  {
    "text": "What should the thief\nhave done? What's the best thing\nyou can do?",
    "start": "1972420",
    "end": "1977860"
  },
  {
    "text": "Instead of taking that\none vase, the thief could take two radios.",
    "start": "1977860",
    "end": "1983890"
  },
  {
    "text": "And get more value. So the greedy thief, in some\nsense, gets the wrong answer.",
    "start": "1983890",
    "end": "1992299"
  },
  {
    "text": "But maybe isn't so dumb. While greedy algorithms are not\nguaranteed to get you the",
    "start": "1992300",
    "end": "1999070"
  },
  {
    "text": "right answer all the\ntime, they're often very good to use.",
    "start": "1999070",
    "end": "2005350"
  },
  {
    "text": "And what they're good about is,\nthey're easy to implement.",
    "start": "2005350",
    "end": "2011190"
  },
  {
    "text": "And they're fast to run. You can imagine coding\nthe solution up",
    "start": "2011190",
    "end": "2016980"
  },
  {
    "text": "and it's pretty easy. And when it runs, it's pretty\nfast. Just takes the most",
    "start": "2016980",
    "end": "2024890"
  },
  {
    "text": "valuable, the next most\nvaluable, the next most valuable, I'm done. And the thief leaves,\nand is gone.",
    "start": "2024890",
    "end": "2031000"
  },
  {
    "text": "So that's a good thing. On the other hand, it's often\nthe case in the world that",
    "start": "2031000",
    "end": "2036460"
  },
  {
    "text": "that's not good enough. And we're not looking for an OK\nsolution, but we're looking",
    "start": "2036460",
    "end": "2041990"
  },
  {
    "text": "for the best solution. Optimal means best. And that's\nwhat the slow thief does.",
    "start": "2041990",
    "end": "2051440"
  },
  {
    "text": "So the slow thief thinks\nthe following. Well, what I'll do is I'll\nput stuff in the",
    "start": "2051440",
    "end": "2058070"
  },
  {
    "text": "backpack until it's full. I'll compute its value.",
    "start": "2058070",
    "end": "2064710"
  },
  {
    "text": "Then I'll empty the backpack\nout, put another combination of stuff compute its value,\ntry all possible ways of",
    "start": "2064710",
    "end": "2072169"
  },
  {
    "text": "filling up the backpack, and\nthen when I'm done, I'll know which was the best. And that's\nthe one I'll do.",
    "start": "2072170",
    "end": "2080200"
  },
  {
    "text": "So he's packing and unpacking,\npacking and unpacking, trying all possible combinations of\nobjects that will obey the",
    "start": "2080200",
    "end": "2086899"
  },
  {
    "text": "constraint. And then choosing the winner. Well, this is like an algorithm\nwe've seen before.",
    "start": "2086900",
    "end": "2093529"
  },
  {
    "text": "It's not greedy. What is this? What category of algorithm\nis that?",
    "start": "2093530",
    "end": "2099820"
  },
  {
    "text": "Somebody? Louder? STUDENT: Brute force. PROFESSOR: Brute force,\nexhaustive",
    "start": "2099820",
    "end": "2105529"
  },
  {
    "text": "enumeration, exactly. We're exhausting all\npossibilities. And then choosing the winner.",
    "start": "2105530",
    "end": "2112490"
  },
  {
    "text": "Well, that's what the\nslow thief tried. Unfortunately it took so long\nthat before he finished the",
    "start": "2112490",
    "end": "2119240"
  },
  {
    "text": "owner returned home, called the\npolice and the thief ended up in jail. It happens.",
    "start": "2119240",
    "end": "2125880"
  },
  {
    "text": "Fortunately, while sitting in\njail awaiting trial, the slow",
    "start": "2125880",
    "end": "2130890"
  },
  {
    "text": "thief decided to figure\nwhat was wrong. And, amazingly enough, he\nhad studied mathematics.",
    "start": "2130890",
    "end": "2137650"
  },
  {
    "text": "And had a blackboard\nin the cell. So he was able to work it out.",
    "start": "2137650",
    "end": "2143810"
  },
  {
    "text": "So he first said, well, let me\ntry and figure out what I was really doing and why\nit took so long.",
    "start": "2143810",
    "end": "2150700"
  },
  {
    "text": "So first, let's think about what\nwas the function the slow",
    "start": "2150700",
    "end": "2156859"
  },
  {
    "text": "thief was attempting\nto maximize.",
    "start": "2156860",
    "end": "2162930"
  },
  {
    "text": "The summation, from i equals 1\nto n, where n is the number of",
    "start": "2162930",
    "end": "2170160"
  },
  {
    "text": "items, so I might label watch\n1-0, watch 2-2, I don't care",
    "start": "2170160",
    "end": "2180609"
  },
  {
    "text": "that they're both watches. They're two separate items.\nAnd then what I want to maximize is the sum of the price\nof item i times whether",
    "start": "2180610",
    "end": "2194360"
  },
  {
    "text": "or not I took x i.",
    "start": "2194360",
    "end": "2200400"
  },
  {
    "text": "So think of x as a vector\nof 0's and 1's.",
    "start": "2200400",
    "end": "2211089"
  },
  {
    "text": "Hence the name of the problem. If I'm going to keep that item,\nitem i, if I'm going to",
    "start": "2211090",
    "end": "2217500"
  },
  {
    "text": "take it, I give it a 1. If I'm not going to take\nit I give it a 0.",
    "start": "2217500",
    "end": "2223800"
  },
  {
    "text": "And so I just take the value of\nthat item times whether or not it's 0 or 1.",
    "start": "2223800",
    "end": "2231000"
  },
  {
    "text": "So my goal here is to choose x\nsuch that this is maximized.",
    "start": "2231000",
    "end": "2239840"
  },
  {
    "text": "Choose x such that that function\nis maximized, subject",
    "start": "2239840",
    "end": "2245240"
  },
  {
    "text": "to a constraint. And the constraint, is it the\nsum from 1 to n of the weight",
    "start": "2245240",
    "end": "2268020"
  },
  {
    "text": "of the item, times x i, is less\nthan or equal to c, the",
    "start": "2268020",
    "end": "2277950"
  },
  {
    "text": "maximum weight I'm allowed\nto put in my backpack. In this case it was eight.",
    "start": "2277950",
    "end": "2284810"
  },
  {
    "text": "So now I have a nice, tidy\nmathematical formulation of the problem.",
    "start": "2284810",
    "end": "2290380"
  },
  {
    "text": "And that's often the first step\nin problem reduction. Is to go from a problem that has\na bunch of words, and try",
    "start": "2290380",
    "end": "2298560"
  },
  {
    "text": "and write it down as a nice,\ntight mathematical formulation. So now I know the formulation\nis to find x, the vector x,",
    "start": "2298560",
    "end": "2308190"
  },
  {
    "text": "such that this constraint\nis obeyed and this function is maximized.",
    "start": "2308190",
    "end": "2317609"
  },
  {
    "text": "That make sense to everybody? Any questions about that?",
    "start": "2317610",
    "end": "2322730"
  },
  {
    "text": "Great. So as the thief had thought,\nwe can clearly solve this",
    "start": "2322730",
    "end": "2330220"
  },
  {
    "text": "problem by generating all\npossible values of x and",
    "start": "2330220",
    "end": "2337270"
  },
  {
    "text": "seeing which one solves\nthis problem.",
    "start": "2337270",
    "end": "2343990"
  },
  {
    "text": "But now the thief started\nscratching his head and said, well, how many possible\nvalues of x are there?",
    "start": "2343990",
    "end": "2353450"
  },
  {
    "text": "Well, how can we think\nabout that?",
    "start": "2353450",
    "end": "2359670"
  },
  {
    "text": "Well, a nice way to think\nabout that is to say, I've got a vector.",
    "start": "2359670",
    "end": "2365990"
  },
  {
    "text": "So there's the vector with\neight 0's in it.",
    "start": "2365990",
    "end": "2372460"
  },
  {
    "text": "Three, four, five, six,\nseven, eight. Indicating I didn't take\nany of the items.",
    "start": "2372460",
    "end": "2384119"
  },
  {
    "text": "There's the vector, and again\nyou'll see this in your handout, says I only took\nthe first item.",
    "start": "2384120",
    "end": "2395610"
  },
  {
    "text": "There's the one that says I\nonly took the second item. There's the one that says\nI took the first",
    "start": "2395610",
    "end": "2402590"
  },
  {
    "text": "and the second item. And at the last,\nI have all 1's.",
    "start": "2402590",
    "end": "2409140"
  },
  {
    "text": "This series look like anything\nfamiliar to you? These are binary\nnumbers, right?",
    "start": "2409140",
    "end": "2415050"
  },
  {
    "text": "Eight digit binary numbers. Zero, one, two, three.",
    "start": "2415050",
    "end": "2421009"
  },
  {
    "text": "What's the biggest number\nI can represent with eight of these?",
    "start": "2421010",
    "end": "2426260"
  },
  {
    "text": "Somebody?",
    "start": "2426260",
    "end": "2431350"
  },
  {
    "text": "Well, suppose we had\ndecimal numbers. And I said I'm giving you\nthree decimal digits.",
    "start": "2431350",
    "end": "2437040"
  },
  {
    "text": "What's the biggest number you\ncan represent with three decimal digits?",
    "start": "2437040",
    "end": "2443650"
  },
  {
    "text": "Pardon? STUDENT: [INAUDIBLE] PROFESSOR: Right. Which is roughly what?",
    "start": "2443650",
    "end": "2450670"
  },
  {
    "text": "10 to the? STUDENT: [INAUDIBLE] PROFESSOR: Right.",
    "start": "2450670",
    "end": "2458390"
  },
  {
    "text": "Yes. STUDENT: [INAUDIBLE] PROFESSOR: Right. Exactly right.",
    "start": "2458390",
    "end": "2463400"
  },
  {
    "text": "So, in this case it's\n2 to the 8th. Because I have eight digits.",
    "start": "2463400",
    "end": "2468890"
  },
  {
    "text": "But exactly right. More generally, it's\n2 to the n.",
    "start": "2468890",
    "end": "2478670"
  },
  {
    "text": "Where n is the number of\npossible items I have to choose from.",
    "start": "2478670",
    "end": "2486460"
  },
  {
    "text": "Well, now that we've figured\nthat out, what we're seeing is",
    "start": "2486460",
    "end": "2493550"
  },
  {
    "text": "that the brute force algorithm\nis exponential.",
    "start": "2493550",
    "end": "2502600"
  },
  {
    "text": "In the number of items we\nhave to choose from. Not in the number that we take,\nbut the number we have",
    "start": "2502600",
    "end": "2509380"
  },
  {
    "text": "to think about taking. Exponential growth\nis a scary thing.",
    "start": "2509380",
    "end": "2517120"
  },
  {
    "text": "So now we can look at\nthese two graphs, look at the top one.",
    "start": "2517120",
    "end": "2523490"
  },
  {
    "text": "So there, we've compared n\nsquared, quadratic growth,",
    "start": "2523490",
    "end": "2530630"
  },
  {
    "text": "which by the way Professor\nGrimson told you was bad, to,",
    "start": "2530630",
    "end": "2535650"
  },
  {
    "text": "really bad, which is\nexponential growth. And in fact, if you look at\nthe top figure it looks as",
    "start": "2535650",
    "end": "2542869"
  },
  {
    "text": "exponential or, quadratic isn't\neven growing at all. You see how really fast\nexponential growth is?",
    "start": "2542870",
    "end": "2551090"
  },
  {
    "text": "You get to fifteen items and\nwe're up at seventy thousand already and counting.",
    "start": "2551090",
    "end": "2559150"
  },
  {
    "text": "The bottom graph has exactly\nthe same data. But what I've done is, I've use\nthe logarithmic y-axis.",
    "start": "2559150",
    "end": "2567040"
  },
  {
    "text": "Later in the term, we'll spend\nquite a lot of time talking about how do we visualize\ndata.",
    "start": "2567040",
    "end": "2572130"
  },
  {
    "text": "How do we make sense of data. I've done that because you can\nsee here that the quadratic",
    "start": "2572130",
    "end": "2577270"
  },
  {
    "text": "one is actually growing. It's just growing a\nlot more slowly.",
    "start": "2577270",
    "end": "2585400"
  },
  {
    "text": "So the moral here\nis simple one. Exponential algorithms are\ntypically not useful. n does",
    "start": "2585400",
    "end": "2595910"
  },
  {
    "text": "not have to get very big for\nexponential to fail.",
    "start": "2595910",
    "end": "2601470"
  },
  {
    "text": "Now, imagine that you're trying\nto pack a ship and you've got ten thousand\nitems to choose from.",
    "start": "2601470",
    "end": "2607779"
  },
  {
    "text": "2 to the 10,000 is a\nreally big number.",
    "start": "2607780",
    "end": "2614790"
  },
  {
    "text": "So what we see immediately,\nand the slow thief decided just before being incarcerated\nfor years and years, was that",
    "start": "2614790",
    "end": "2624500"
  },
  {
    "text": "it wasn't possible to\ndo it that way. He threw up his hands and\nsaid, it's an unsolvable",
    "start": "2624500",
    "end": "2631210"
  },
  {
    "text": "problem, I should have been\ngreedy, there's no good way to do this. That gets us to the\nsmart thief.",
    "start": "2631210",
    "end": "2638320"
  },
  {
    "text": "Why is this thief smart? Because she took 600. And she learned that in fact\nthere is a good way to solve",
    "start": "2638320",
    "end": "2644640"
  },
  {
    "text": "this problem. And that's what we're going\nto talk about next.",
    "start": "2644640",
    "end": "2650660"
  },
  {
    "text": "And that's something called\ndynamic programming.",
    "start": "2650660",
    "end": "2663059"
  },
  {
    "text": "A lot of people think this is\na really hard and fancy concept, and they teach in\nadvanced algorithms classes.",
    "start": "2663060",
    "end": "2669770"
  },
  {
    "text": "And they do, but in fact\nas you'll see it's really pretty simple. A word of warning.",
    "start": "2669770",
    "end": "2675810"
  },
  {
    "text": "Don't try and figure out\nwhy it's called dynamic programming. It makes no sense at all.",
    "start": "2675810",
    "end": "2681799"
  },
  {
    "text": "It was invented by a\nmathematician called Bellman. And he was at the time being\npaid by the Defense Department",
    "start": "2681800",
    "end": "2689369"
  },
  {
    "text": "to work on something else. And he didn't want them to\nknow what he was doing. So he made up a name that he\nwas sure they would have no",
    "start": "2689370",
    "end": "2696250"
  },
  {
    "text": "clue what it meant. Unfortunately, we now have\nlived with it forever, so",
    "start": "2696250",
    "end": "2702240"
  },
  {
    "text": "don't think of it as actually\nbeing anything dynamic particularly. It's just a name.",
    "start": "2702240",
    "end": "2709870"
  },
  {
    "text": "It's very useful, and why we\nspend time on it for solving a broad range of problems that\non their surface are",
    "start": "2709870",
    "end": "2718260"
  },
  {
    "text": "exponentially difficult. And, in fact, getting very\nfast solutions to them.",
    "start": "2718260",
    "end": "2725530"
  },
  {
    "text": "The key thing in dynamic\nprogramming, and we'll return to both of these, is you're\nlooking for a situation where",
    "start": "2725530",
    "end": "2732100"
  },
  {
    "text": "there are overlapping\nsub-problems and what's called",
    "start": "2732100",
    "end": "2745280"
  },
  {
    "text": "optimal substructure. Don't expect to know what\nthese mean yet. Hopefully by the end of the day,\nTuesday, they will both",
    "start": "2745280",
    "end": "2752750"
  },
  {
    "text": "make great sense to you. Let's first look at\nthe overlapping sub-problems example.",
    "start": "2752750",
    "end": "2759760"
  },
  {
    "text": "You have on your handout,\na recursive",
    "start": "2759760",
    "end": "2765120"
  },
  {
    "text": "implementation of Fibonacci. Which we've seen before.",
    "start": "2765120",
    "end": "2785829"
  },
  {
    "text": "What I've done is I've augmented\nit with this global called num calls just so I can\nkeep track of how many times",
    "start": "2785830",
    "end": "2792560"
  },
  {
    "text": "it gets called. And let's see what happens\nif we call fib of 5.",
    "start": "2792560",
    "end": "2808930"
  },
  {
    "text": "Well, quite a few steps. What's the thing that you notice\nabout this output?",
    "start": "2808930",
    "end": "2820710"
  },
  {
    "text": "There's something here that\nshould tip us off that maybe we're not doing this the most\nefficient way possible.",
    "start": "2820710",
    "end": "2829080"
  },
  {
    "text": "I called fib with 5 and then\nit calls it with 4.",
    "start": "2829080",
    "end": "2835040"
  },
  {
    "text": "And then that call\ncalls fib with 3. So I'm doing 4, 3, 2, 2, 1, 0.",
    "start": "2835040",
    "end": "2841420"
  },
  {
    "text": "And I'm doing 1, 2. Well, what we see is I'm calling\nfib a lot of times with the same argument.",
    "start": "2841420",
    "end": "2850760"
  },
  {
    "text": "And it makes sense. Because I start with fib of 5,\nand then I have to do fib of 4",
    "start": "2850760",
    "end": "2856200"
  },
  {
    "text": "and fib of 3. Well, fib of 4 is going to also\nhave to do a fib of 3 and",
    "start": "2856200",
    "end": "2862940"
  },
  {
    "text": "a fib of 2 and a fib of\n1, and a fib of 0. And then the fib of 3 is going\nto do a fib of 2 and a fib of",
    "start": "2862940",
    "end": "2869220"
  },
  {
    "text": "1 and a fib of 0. And so I'm doing the same thing\nover and over again.",
    "start": "2869220",
    "end": "2876119"
  },
  {
    "text": "That's because I have what\nare called overlapping sub-problems. I have used divide\nand conquer, as we seen",
    "start": "2876120",
    "end": "2884630"
  },
  {
    "text": "before, to recursively break it\ninto smaller problems. But the smaller problem of fib of\n4 and the smaller problem of",
    "start": "2884630",
    "end": "2892849"
  },
  {
    "text": "fib of 3 overlap with\neach other. And that leads to a lot of\nredundant computation.",
    "start": "2892850",
    "end": "2901210"
  },
  {
    "text": "And I've done fib of 5, which\nis a small number. If we look at some other things,\nfor example, let's get",
    "start": "2901210",
    "end": "2909119"
  },
  {
    "text": "rid of this.",
    "start": "2909120",
    "end": "2919860"
  },
  {
    "text": "Let's try see fib of 10.",
    "start": "2919860",
    "end": "2936590"
  },
  {
    "text": "Well, there's a reason I chose\n10 rather than, say, 20.",
    "start": "2936590",
    "end": "2942590"
  },
  {
    "text": "Here fib got called 177 times.",
    "start": "2942590",
    "end": "2949420"
  },
  {
    "text": "Roughly speaking, the analysis\nof fib is actually quite complex, of a recursive fib.",
    "start": "2949420",
    "end": "2955020"
  },
  {
    "text": "And I won't go through it, but\nwhat you can see is it's more or less, it is in fact,\nexponential.",
    "start": "2955020",
    "end": "2961680"
  },
  {
    "text": "But it's not 2 to\nthe something. It's a more complicated thing.",
    "start": "2961680",
    "end": "2966950"
  },
  {
    "text": "But it grows quite quickly. And the reason it does is\nbecause of this overlapping.",
    "start": "2966950",
    "end": "2974240"
  },
  {
    "text": "On Tuesday we'll talk about a\ndifferent way to implement Fibonacci, where the growth will\nbe much less dramatic.",
    "start": "2974240",
    "end": "2984510"
  },
  {
    "text": "Thank you. ",
    "start": "2984510",
    "end": "2986433"
  }
]