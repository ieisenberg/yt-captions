[
  {
    "start": "0",
    "end": "75466"
  },
  {
    "text": "PROFESSOR: All right. Let's get started.  So we have a fun lecture today\nabout efficient origami design.",
    "start": "75466",
    "end": "83580"
  },
  {
    "text": "Last Monday, we did\ninefficient origami design, but it was universal. We could fold anything.",
    "start": "83580",
    "end": "90000"
  },
  {
    "text": "And let's see,\nThursday, we talked about some basic\nfoldability, crease patterns, what make the valid.",
    "start": "90000",
    "end": "95410"
  },
  {
    "text": "That'll ground us\na little bit today when designing some\ncrease patterns. Although, we're going to\nstay fairly high level today",
    "start": "95410",
    "end": "102780"
  },
  {
    "text": "because there are two big\nmethods I want to talk about. One is tree method\nwhich is hit it pretty big in the impractical\norigami design.",
    "start": "102780",
    "end": "110380"
  },
  {
    "text": "Lot of modern complex\norigami designers use it either in their head\nor occasionally on a computer.",
    "start": "110380",
    "end": "117270"
  },
  {
    "text": "I demoed it quickly last time. So we are going to see some\nlevel of detail how that works.",
    "start": "117270",
    "end": "123390"
  },
  {
    "text": "And then, I want to\ntalk about Orgamizer which is one of the latest\ntechniques for designing",
    "start": "123390",
    "end": "128959"
  },
  {
    "text": "crazy, arbitrary,\nthree-dimensional shapes that seems to be pretty efficient. Although we don't have a formal\nsense in which it is efficient,",
    "start": "128960",
    "end": "137010"
  },
  {
    "text": "it has some nice properties. And it's pretty cool,\nand I can also demo it. It's also freely downloadable\nsoftware for Windows.",
    "start": "137010",
    "end": "147330"
  },
  {
    "text": "Good. So just to get you\nmotivated a little bit, I brought a bunch of examples.",
    "start": "147330",
    "end": "155150"
  },
  {
    "text": "I'll show you more later. But this is the\nsort of thing you can do with the tree method. It's not going to be the tree\nmethod as I presented here.",
    "start": "155150",
    "end": "162540"
  },
  {
    "text": "This is a variation\non it called box pleating which\nyou can read about in Origami Design Secrets.",
    "start": "162540",
    "end": "168430"
  },
  {
    "text": "And I don't think Jason\nwill talk about that either. But it's a variation on\nwhat we'll be talking about.",
    "start": "168430",
    "end": "175599"
  },
  {
    "text": "It lets you do crazy things like\nthese two praying mantises, one eating the other.",
    "start": "175600",
    "end": "181800"
  },
  {
    "text": "This is a design by Robert Lang. Fairly new. I don't have a year\nhere, but I think it's last year or something.",
    "start": "181800",
    "end": "188590"
  },
  {
    "text": "And that's the sort\nof thing you can do getting all the limbs, all\nthe right proportions, even",
    "start": "188590",
    "end": "195069"
  },
  {
    "text": "multiple characters\nby representing your model as a stick figure. And that's what\nthe tree method is",
    "start": "195070",
    "end": "201790"
  },
  {
    "text": "all about and doing\nthat efficiently. So this is a statement\nlast time of the theorem.",
    "start": "201790",
    "end": "210200"
  },
  {
    "text": "There's some catches to this. It's an algorithm. Find a folding of\nthe smallest square",
    "start": "210200",
    "end": "215740"
  },
  {
    "text": "possible into and origami\nbase with the desired tree as a shadow\nor as a projection.",
    "start": "215740",
    "end": "225519"
  },
  {
    "text": "So you remember,\nthis kind of picture. You want to make a lizard. You specify the lengths\nof each of these limbs",
    "start": "225520",
    "end": "231900"
  },
  {
    "text": "and how they're connected\ntogether into a tree. And then, you want to build an\norigami model on top of that,",
    "start": "231900",
    "end": "240299"
  },
  {
    "text": "so to speak. So that it looks\nsomething like this.",
    "start": "240300",
    "end": "248159"
  },
  {
    "text": " And you want to find a square\nthe folds into such a shape.",
    "start": "248160",
    "end": "255190"
  },
  {
    "text": "This projection is\nexactly that tree. Now, say it's an algorithm, and\nit finds the smallest square.",
    "start": "255190",
    "end": "260320"
  },
  {
    "text": "But to do that, essentially\nrequires exponential time. We'll prove in the next class\nthat this problem, in general,",
    "start": "260320",
    "end": "266670"
  },
  {
    "text": "is NP-complete. So it's really hard. But there is an\nexponential time algorithm,",
    "start": "266670",
    "end": "272259"
  },
  {
    "text": "and I didn't say efficient here. It's efficient in terms\nof design, quality, or in terms of algorithm.",
    "start": "272260",
    "end": "278259"
  },
  {
    "text": "But you have to\npick one of the two. So in TreeMaker the\nprogram, there's",
    "start": "278260",
    "end": "283830"
  },
  {
    "text": "an efficient\nalgorithm, which finds a reasonably good-sized square. But it's not guaranteed\nto be optimal.",
    "start": "283830",
    "end": "288880"
  },
  {
    "text": "It's just a local optimum. In principle, you could\nspend exponential time here.",
    "start": "288880",
    "end": "294250"
  },
  {
    "text": "So slow algorithm and\nget the smallest square. So it depends. The other catch is this folding.",
    "start": "294250",
    "end": "300750"
  },
  {
    "text": "We're still working on proving\nthat this does not actually self-intersect in\nthe folded state.",
    "start": "300750",
    "end": "307030"
  },
  {
    "text": "I checked the dates. We've been working on\nthat for six years. But it's closing in.",
    "start": "307030",
    "end": "313340"
  },
  {
    "text": "Maybe next year we'll have\na draft of this proof. It's quite-- it's\nmany, many pages.",
    "start": "313340",
    "end": "318405"
  },
  {
    "text": " Good.",
    "start": "318405",
    "end": "324010"
  },
  {
    "text": "So those are the catches. Now, let me tell you\nabout this term uniaxial. Essentially, it just\nmeans tree shapes.",
    "start": "324010",
    "end": "331470"
  },
  {
    "text": "But I'd like to be a little\nbit more formal about that. And last time, I showed you\nthe standard origami bases.",
    "start": "331470",
    "end": "338120"
  },
  {
    "text": "All of these are\nuniaxial, I think, except the pinwheel\nwhich we folded.",
    "start": "338120",
    "end": "344830"
  },
  {
    "text": "So the pinwheel-- so let\nme tell you intuitively what uniaxial means. It means you can take\nall these flaps of paper",
    "start": "344830",
    "end": "351870"
  },
  {
    "text": "and lie them, place\nthem along a line. And the hinges\nbetween those flaps",
    "start": "351870",
    "end": "360120"
  },
  {
    "text": "are all perpendicular\nto that line. So this is the axis.",
    "start": "360120",
    "end": "366500"
  },
  {
    "text": "Whereas something like\nthis, essentially there are four axes. The flaps are here,\nor two axes I guess.",
    "start": "366500",
    "end": "374240"
  },
  {
    "text": "But definitely not one. So these cannot be\nlined up along a line, even if you've flapped\nthem around some other way.",
    "start": "374240",
    "end": "382880"
  },
  {
    "text": "That's intuitive definition. Multiaxial is not a\nformally defined thing.",
    "start": "382880",
    "end": "387960"
  },
  {
    "text": "But uniaxial we can\nformally define. And it will capture things\nlike this water bomb base,",
    "start": "387960",
    "end": "394520"
  },
  {
    "text": "all the other bases there,\nas well as bases like this.",
    "start": "394520",
    "end": "400370"
  },
  {
    "text": "And it's defined\nby Robert Lang, I think probably around '94\nwas the first publication.",
    "start": "400370",
    "end": "408185"
  },
  {
    "start": "408185",
    "end": "419550"
  },
  {
    "text": "And it's just a\nbunch of conditions. ",
    "start": "419550",
    "end": "431170"
  },
  {
    "text": "And a bunch of them are just\ntechnical to make things work out mathematically. First thing I'd like to say\nis that the entire base-- base",
    "start": "431170",
    "end": "440010"
  },
  {
    "text": "just means origami\nfor our purposes. It's sort of\npractical distinction",
    "start": "440010",
    "end": "447060"
  },
  {
    "text": "not a mathematical one. Is that everything\nlies above the floor. So the floor is equal\nto zero, and we'll just",
    "start": "447060",
    "end": "454040"
  },
  {
    "text": "say everything's above that. And the action is going\nto be in the floor. That's where I've\ndrawn it that way.",
    "start": "454040",
    "end": "459570"
  },
  {
    "text": "Here, there's a floor. And the tree is going\nto lie on the floor, and everything\nelse is above that.",
    "start": "459570",
    "end": "465889"
  },
  {
    "text": " Second property. ",
    "start": "465890",
    "end": "477669"
  },
  {
    "text": "Sort of a shadow property. If I look at where\nthe base meets",
    "start": "477670",
    "end": "483940"
  },
  {
    "text": "the floor is equals to\nzero, that's the same thing as if I look at the\nshadow onto the floor.",
    "start": "483940",
    "end": "491740"
  },
  {
    "start": "491740",
    "end": "498889"
  },
  {
    "text": "This is essentially saying\nthat this base does not have any overhang. So if it had, for\nexample, some feature",
    "start": "498890",
    "end": "506680"
  },
  {
    "text": "like this that hung over\nits shadow-- was more-- went out here.",
    "start": "506680",
    "end": "512339"
  },
  {
    "text": "The shadow goes out here,\nbut the base does not. That's not allowed. So I want everything--\nactually want things to get smaller\nas you go up in z.",
    "start": "512340",
    "end": "521809"
  },
  {
    "text": "This is a stronger\nstatement of property two. ",
    "start": "521809",
    "end": "528290"
  },
  {
    "text": "And then, I want to\ndefine this notion flaps.  And the basic idea\nis that you have",
    "start": "528290",
    "end": "538410"
  },
  {
    "text": "faces of the crease pattern. ",
    "start": "538410",
    "end": "548310"
  },
  {
    "text": "so the faces are\njust the regions we get out of the creases, all\nthese triangles for example.",
    "start": "548310",
    "end": "555250"
  },
  {
    "text": "I can divide them,\npartition them into groups which I call flaps. So for example, these two\nguys over here form one flap.",
    "start": "555250",
    "end": "563020"
  },
  {
    "text": "They fold together. They're going to be\nmanipulated together. And so in this case,\nI'll get four flaps.",
    "start": "563020",
    "end": "568955"
  },
  {
    "start": "568955",
    "end": "582790"
  },
  {
    "text": "Anything I want to say here? Yeah. Each flap is going to\nproject to a line segment.",
    "start": "582790",
    "end": "601400"
  },
  {
    "start": "601400",
    "end": "612470"
  },
  {
    "text": "It's going to be one of\nthe edges of the tree.  So then, there's the\nnotion of a hinge crease.",
    "start": "612470",
    "end": "619760"
  },
  {
    "start": "619760",
    "end": "626300"
  },
  {
    "text": "And these are just creases\nshared by two flaps.",
    "start": "626300",
    "end": "631690"
  },
  {
    "text": "So they're the creases that\nseparate one flap from another.",
    "start": "631690",
    "end": "638270"
  },
  {
    "text": " These will always require\nthat they projects to a point.",
    "start": "638270",
    "end": "649300"
  },
  {
    "text": " So this is equivalent to saying\nthe hinge crease is vertical.",
    "start": "649300",
    "end": "654649"
  },
  {
    "text": "It's perpendicular to the floor. I'm always projecting\nstraight down onto the floor orthographically, just\nsetting z to zero.",
    "start": "654650",
    "end": "664680"
  },
  {
    "text": "And so that's saying\nthese are the hinges. They should be vertical.",
    "start": "664680",
    "end": "672000"
  },
  {
    "text": "So projection is a point. And then from those\ntwo properties, I can define a graph\nwhich I want to be a tree.",
    "start": "672000",
    "end": "678225"
  },
  {
    "start": "678225",
    "end": "688819"
  },
  {
    "text": "So each flap I want to\nmake an edge of my graph. And that edge is going\nto be the line segment",
    "start": "688820",
    "end": "695050"
  },
  {
    "text": "that the flap projects,\neach flat projects to. And I'm going to connect\nthose edges together",
    "start": "695050",
    "end": "702580"
  },
  {
    "text": "at vertices when the flaps\nshare the hinge crease.",
    "start": "702580",
    "end": "712995"
  },
  {
    "start": "712995",
    "end": "721620"
  },
  {
    "text": "All right. That's a graph which\nyou can define. And that graph is a tree.",
    "start": "721620",
    "end": "727294"
  },
  {
    "text": "That's the constraint.  And I think I have even more.",
    "start": "727294",
    "end": "732644"
  },
  {
    "text": " I've got one more property. ",
    "start": "732645",
    "end": "757140"
  },
  {
    "text": "I think I actually\nwant projects here. Let's try that. ",
    "start": "757140",
    "end": "765540"
  },
  {
    "text": "All right. This is a bunch of formalism to\nstate what's pretty intuitive. I want all the flaps of\npaper to be vertical,",
    "start": "765540",
    "end": "774920"
  },
  {
    "text": "so they project\nto a line segment. When I look from the-- when\nI look at the projection,",
    "start": "774920",
    "end": "783140"
  },
  {
    "text": "I can define a\ngraph where there's an edge for each flap,\nwhere it's projecting.",
    "start": "783140",
    "end": "789200"
  },
  {
    "text": "And I join those edges together. Here, I'm joinging\nfour them at a vertex. Because if you unfold it,\nthey all share hinge creases.",
    "start": "789200",
    "end": "797020"
  },
  {
    "text": "Hinge creases in this case\nare the perpendicular. These four guys.",
    "start": "797020",
    "end": "802230"
  },
  {
    "text": "So because-- it's\nhard to manipulate. I've got a flap over here.",
    "start": "802230",
    "end": "807420"
  },
  {
    "text": "A flap over here. They share a hinge, so I connect\nthem together in the graph.",
    "start": "807420",
    "end": "812700"
  },
  {
    "text": "It's just a formal way to\nmake the graph correct. It may seem tedious,\nbut this definition",
    "start": "812700",
    "end": "820090"
  },
  {
    "text": "sidesteps some issues which\nwould occur if you defined it in the more obvious way which\nis just take the projection,",
    "start": "820090",
    "end": "825340"
  },
  {
    "text": "call it a tree. But I don't want\nto get into why you need to do it this way exactly. Maybe, we'll see\nit at some point.",
    "start": "825340",
    "end": "831940"
  },
  {
    "text": "Essentially, some flaps can\nbe hidden inside others, so you need this definition\nfor it to really work. ",
    "start": "831940",
    "end": "839260"
  },
  {
    "text": "And then, there's\nthis extra constraint which is that my base\nis pointy at the leaves.",
    "start": "839260",
    "end": "844579"
  },
  {
    "text": "Leaves are the\nvertices of the tree to have only one incident edge. And so I want there\nto be only one",
    "start": "844580",
    "end": "852060"
  },
  {
    "text": "point that lives at the leaf. Obviously, elsewhere\nin the tree, there's a whole bunch of points,\na whole vertical segment,",
    "start": "852060",
    "end": "858266"
  },
  {
    "text": "that all projects to that point. Here, I just want one. That's important\nbecause I want to think about where the leaves are.",
    "start": "858267",
    "end": "864010"
  },
  {
    "text": "And the whole idea\nin the tree method is to think about how to\nplace the leaves on your piece of paper so that\nthis folding exists.",
    "start": "864010",
    "end": "873790"
  },
  {
    "text": "So that's what\nwe're going to do. ",
    "start": "873790",
    "end": "891220"
  },
  {
    "text": "The tree method is kind of\nsurprising in its simplicity. There's a bunch of\ndetails to make it work.",
    "start": "891220",
    "end": "896410"
  },
  {
    "text": "But the idea is\nactually very simple. Let's suppose you want\nability uniaxial base.",
    "start": "896410",
    "end": "904680"
  },
  {
    "text": "I'll tell you something\nthat must be satisfied by your uniaxial base,\na necessary condition.",
    "start": "904680",
    "end": "909915"
  },
  {
    "text": " Assuming you're starting from\na convex piece of paper, which",
    "start": "909915",
    "end": "921337"
  },
  {
    "text": "is the case we\nusually care about. Actually, we're starting\nfrom a square, a rectangle, or something convex.",
    "start": "921337",
    "end": "929970"
  },
  {
    "text": "Here's what has to be true. ",
    "start": "929970",
    "end": "949740"
  },
  {
    "text": "I didn't give a\nname, but this graph",
    "start": "949740",
    "end": "955899"
  },
  {
    "text": "that's supposed\nto be a tree, I'm going to call the shadow\ntree for obvious reasons.",
    "start": "955900",
    "end": "965850"
  },
  {
    "text": "And now, I want to take two\npoints in the shadow tree, measure their distance\nin a tree sense.",
    "start": "965850",
    "end": "971990"
  },
  {
    "text": "So I have some tree like this. I have two points like, say,\nthis point and that point.",
    "start": "971990",
    "end": "980130"
  },
  {
    "text": "The distance between\nthem is the distance as measured if you had to walk\nin the tree, how far is it",
    "start": "980130",
    "end": "986850"
  },
  {
    "text": "to go from here to here. And because our tree\nis a metric tree, because we specified\nall the edge lengths, we can just add up those\nlengths, measure them.",
    "start": "986850",
    "end": "994850"
  },
  {
    "text": "And that's the distance\nbetween two points in the tree. That must be less than\nor equal to the distance",
    "start": "994850",
    "end": "1002329"
  },
  {
    "text": "between those two points\non the piece of paper. ",
    "start": "1002330",
    "end": "1026959"
  },
  {
    "text": "What does that mean? So on piece of paper\nthat's convex--",
    "start": "1026960",
    "end": "1032160"
  },
  {
    "text": "so it might not be a square, but\nsquare's easier picture draw. The distance between\nthem is that.",
    "start": "1032160",
    "end": "1040059"
  },
  {
    "text": "Pretty simple. So what does this mean? I'm taking this square.",
    "start": "1040060",
    "end": "1045750"
  },
  {
    "text": "Somehow, I'm folding\nit into a base whose projection is the tree. So I look at these\ntwo points, p and q,",
    "start": "1045750",
    "end": "1056630"
  },
  {
    "text": "I fold them somewhere\nin the 3D picture which is not drawn up here. Those points-- so maybe there's\na p up here and a q up here.",
    "start": "1056630",
    "end": "1066070"
  },
  {
    "text": "I project those points\ndown onto the floor which is going to fall on the\ntree by this definition.",
    "start": "1066070",
    "end": "1073000"
  },
  {
    "text": "Call that, let's say, p prime\nfor the projected version of p, q prime.",
    "start": "1073000",
    "end": "1078160"
  },
  {
    "text": "I measure the distance here. That has to be-- the\ndistance between p prime",
    "start": "1078160",
    "end": "1084186"
  },
  {
    "text": "and q prime in\nthe tree should be less than or equal to the\ndistance between p and q in the piece of paper, for\nevery pair points p and q.",
    "start": "1084186",
    "end": "1091110"
  },
  {
    "text": "That's the condition. It's almost trivial\nto show because when",
    "start": "1091110",
    "end": "1099650"
  },
  {
    "text": "I take this segment of paper,\nI fold the piece of paper. But in particular, I\nfold p and q somehow.",
    "start": "1099650",
    "end": "1106250"
  },
  {
    "text": "I can't get p and q farther\naway from each other because folding only\nmakes things closer.",
    "start": "1106250",
    "end": "1112650"
  },
  {
    "text": "There, I'm assuming that the\npiece of paper is convex. There's no way to\nfold and stretch pq",
    "start": "1112650",
    "end": "1117704"
  },
  {
    "text": "because that's a\nsegment of paper. It can only contract. I mean, you can fold the\nsegment something like this.",
    "start": "1117704",
    "end": "1124950"
  },
  {
    "text": "Then, the distance\nbetween p and q gets smaller than the\nlength of this segment.",
    "start": "1124950",
    "end": "1130890"
  },
  {
    "text": "Because if I took this-- this\nline segment of paper that got folded.",
    "start": "1130890",
    "end": "1136649"
  },
  {
    "text": "If I project it\nonto the line here, it's only going to get shorter. So I fold p and q.",
    "start": "1136650",
    "end": "1142030"
  },
  {
    "text": "They get closer in three-space. And then, I project\nthem down to the floor.",
    "start": "1142030",
    "end": "1148430"
  },
  {
    "text": "They can also only get\ncloser when I do that. ",
    "start": "1148430",
    "end": "1156170"
  },
  {
    "text": "So that's essentially the proof. Do I need to spell that out? So you have the line\nsegment on the paper.",
    "start": "1156170",
    "end": "1162850"
  },
  {
    "text": "You fold it. It gets shorter. You project it onto the floor. It also get shorter. Therefore, whatever\nthis distance",
    "start": "1162850",
    "end": "1168465"
  },
  {
    "text": "is on the tree has to be less\nthan or equal to the distance you started with. So this may seem\nkind of trivial.",
    "start": "1168465",
    "end": "1174400"
  },
  {
    "text": "But the surprising thing is it\nthis is really all you need.",
    "start": "1174400",
    "end": "1180180"
  },
  {
    "text": "So this is true between any\ntwo points in the shadow tree. In fact, we're going\nto focus on the leaves. We'll say, all right,\nso in particular, I've",
    "start": "1180180",
    "end": "1187750"
  },
  {
    "text": "got a place this leaf, and\neach of these six leaves here, I have to place them somewhere\non the piece of paper.",
    "start": "1187750",
    "end": "1194430"
  },
  {
    "text": "I better do it so that that\ncondition is satisfied. I have to place these two\nleaves and the piece of paper--",
    "start": "1194430",
    "end": "1201150"
  },
  {
    "text": "let's say this distance is\none, and this distance is one.",
    "start": "1201150",
    "end": "1206637"
  },
  {
    "text": "These two leaves have to be\nplaced on the piece of paper such that their distance\nis at least two.",
    "start": "1206637",
    "end": "1212110"
  },
  {
    "text": "And the distance between these\ntwo guys has to be at least two and between these two guys\nhas to be at least two.",
    "start": "1212110",
    "end": "1217300"
  },
  {
    "text": "And same over here. Let's say all the\nedge lengths are one. And the distance between,\nsay, this leaf and this leaf",
    "start": "1217300",
    "end": "1224940"
  },
  {
    "text": "has to be at least three\nbecause the distance in the tree is three. So at the very least, we should\nplace the points on the paper",
    "start": "1224940",
    "end": "1232945"
  },
  {
    "text": "so that those conditions\nare satisfied, and it turns out,\nthat's enough as long as you find a placement of the\npoints such as those conditions",
    "start": "1232945",
    "end": "1239350"
  },
  {
    "text": "are satisfied. There will be a folding where\nthose leaves actually come from those points of paper.",
    "start": "1239350",
    "end": "1244710"
  },
  {
    "text": "That's the crazy part. But this idea is actually\nkind of obvious in some sense.",
    "start": "1244710",
    "end": "1250070"
  },
  {
    "text": "I mean, once you know\nit, it's really obvious. But what's surprising is it this\nis all you need to worry about.",
    "start": "1250070",
    "end": "1257010"
  },
  {
    "text": "There's a lot of details that\nmake that work, but you can. So let me just\nmention one detail",
    "start": "1257010",
    "end": "1266940"
  },
  {
    "text": "which is the scale factor. If you fix the size,\nthe edge lengths",
    "start": "1266940",
    "end": "1272730"
  },
  {
    "text": "on the tree which\nis the usual, which is one way to think\nabout it, and you start with some square--\nlike if I start with a one",
    "start": "1272730",
    "end": "1279750"
  },
  {
    "text": "by one square, there's no way\nI'm going to fold that tree. There's just not enough\ndistance in the square. So what I'd like to do is\nfind the smallest square",
    "start": "1279750",
    "end": "1286820"
  },
  {
    "text": "that can fold into this thing. Or equivalently find--\nyou can think of scaling the piece of paper, or\nyou can think of scaling",
    "start": "1286820",
    "end": "1294110"
  },
  {
    "text": "the tree with a\nfixed piece of paper. Doesn't really matter. In general, you get\nthis problem which",
    "start": "1294110",
    "end": "1302929"
  },
  {
    "text": "I'll call scale optimization. This is the hard problem. ",
    "start": "1302930",
    "end": "1313970"
  },
  {
    "text": "So let's say-- just\ndefining some variables.",
    "start": "1313970",
    "end": "1339000"
  },
  {
    "text": "So P i, I'm going to\nmaybe number the leaves or label label them\nsomehow, various letters.",
    "start": "1339000",
    "end": "1345150"
  },
  {
    "text": "And then, P i is going\nto be the point where that-- of paper\nthat actually forms",
    "start": "1345150",
    "end": "1350200"
  },
  {
    "text": "that leaf in the folded state. That leaf which corresponds\nto a single point of paper",
    "start": "1350200",
    "end": "1356924"
  },
  {
    "text": "projects to that leaf.  And then, my goal is\nto maximize some scale",
    "start": "1356924",
    "end": "1365190"
  },
  {
    "text": "factor which I'll call lambda. ",
    "start": "1365190",
    "end": "1370990"
  },
  {
    "text": "Subject to a bunch of\nconstraints which are just",
    "start": "1370990",
    "end": "1376150"
  },
  {
    "text": "those constraints, except\nthat I add a scale factor. ",
    "start": "1376150",
    "end": "1390100"
  },
  {
    "text": "So for every pair\nof leaves, i and j, I'm going to\nmeasure the distance",
    "start": "1390100",
    "end": "1396080"
  },
  {
    "text": "between those\nleaves in the tree. This as a tree distance. Compare that to the\ndistance and the piece",
    "start": "1396080",
    "end": "1401870"
  },
  {
    "text": "of paper between those two\npoints, the Euclidean distance. And instead of\nrequiring that this",
    "start": "1401870",
    "end": "1406980"
  },
  {
    "text": "is greater than or equal to\nthis, which is the usual one, I'm going to add in\nthe scale factor which you can think of as shrinking\nthis or expanding that.",
    "start": "1406980",
    "end": "1415110"
  },
  {
    "text": "It doesn't matter. But I want to-- because here I'm\nsort of shrinking this amount.",
    "start": "1415110",
    "end": "1421630"
  },
  {
    "text": "I want to maximize\nthat factor, so I shrink it the least possible.",
    "start": "1421630",
    "end": "1427360"
  },
  {
    "text": "You can formulate it this way\nor maybe a more intuitive way. But this is the standard set up.",
    "start": "1427360",
    "end": "1434640"
  },
  {
    "text": "And this is something-- this is\ncalled a nonlinear optimization problem. It's something that lots\nof people think about.",
    "start": "1434640",
    "end": "1441060"
  },
  {
    "text": "There are heuristics\nto solve it. You can solve in an\nexponential time. In general, it's\nNP-complete, and we'll",
    "start": "1441060",
    "end": "1446440"
  },
  {
    "text": "see next class that actually\nthis problem of origami design is NP-complete.",
    "start": "1446440",
    "end": "1451539"
  },
  {
    "text": "So there's not going to be\nanything better than heuristics and and slow algorithms. ",
    "start": "1451540",
    "end": "1458730"
  },
  {
    "text": "So the idea is, you solve that. Now, you have your leaves on\nyour piece of paper somewhere.",
    "start": "1458730",
    "end": "1465610"
  },
  {
    "text": "Now what? Now, you have to figure\nout how everything folds.",
    "start": "1465610",
    "end": "1471730"
  },
  {
    "text": "That's where we get to\nsome real combinatorial, some discrete geometry.",
    "start": "1471730",
    "end": "1477656"
  },
  {
    "text": "Fun stuff. ",
    "start": "1477656",
    "end": "1484769"
  },
  {
    "text": "Yeah. I have one extra\nmotivation here. Origami design is\nfun, but here's",
    "start": "1484770",
    "end": "1490200"
  },
  {
    "text": "a puzzle you can solve, too. ",
    "start": "1490200",
    "end": "1496170"
  },
  {
    "text": "Which we can already see. ",
    "start": "1496170",
    "end": "1505020"
  },
  {
    "text": "Margulis napkin problem. Origin of this problem\nis not entirely clear, but I think it came\nfrom Russia originally.",
    "start": "1505020",
    "end": "1513690"
  },
  {
    "text": "And the problem, the puzzle\nis usually stated as follows. Prove that if you take\na unit square paper--",
    "start": "1513690",
    "end": "1521400"
  },
  {
    "text": "so it has perimeter\nfour that you can, no matter how you fold it, the\nperimeter always gets smaller.",
    "start": "1521400",
    "end": "1529770"
  },
  {
    "text": "Never bigger than four. We used a very\nsimilar thing here. We said, if you have\ntwo points, they're distance can only get smaller.",
    "start": "1529770",
    "end": "1536690"
  },
  {
    "text": "That's true. Margulis napkin\npuzzle is not true. That's the difference.",
    "start": "1536690",
    "end": "1542330"
  },
  {
    "text": "Perimeter is different\nfrom distance. And in fact, you can\nfold a piece of paper to make the perimeter\narbitrarily large,",
    "start": "1542330",
    "end": "1549610"
  },
  {
    "text": "which is pretty crazy. And this is something\nthat Robert Lang proved few years ago, using--",
    "start": "1549610",
    "end": "1555720"
  },
  {
    "text": "It's sort of easy once\nyou have the fact-- which I haven't quite written down\nhere, but I've been saying.",
    "start": "1555720",
    "end": "1562150"
  },
  {
    "text": "As long as you place your\npoints subject to this property, there is a folding that\nhas that shadow tree.",
    "start": "1562150",
    "end": "1568290"
  },
  {
    "text": " And so the idea with the\nMargulis napkin problem",
    "start": "1568290",
    "end": "1573620"
  },
  {
    "text": "is let's make a really\nspiky tree, a star. ",
    "start": "1573620",
    "end": "1580809"
  },
  {
    "text": "I want to fold the\nsmallest square possible, so that projection\nis this thing. Let's say that it has-- I won't\nsay how many limbs it has.",
    "start": "1580810",
    "end": "1591750"
  },
  {
    "text": "But the idea is, if you're using\npaper efficiently, in fact, the folding will be very narrow.",
    "start": "1591750",
    "end": "1597600"
  },
  {
    "text": "It'll be a pretty efficient\nuse of paper, hopefully. And so the actual\n3D state will just",
    "start": "1597600",
    "end": "1603640"
  },
  {
    "text": "be a little bit\ntaller than that tree. And then, you just wash it. And the idea is that then\nthe perimeter is really big.",
    "start": "1603640",
    "end": "1610330"
  },
  {
    "text": "You've got a-- the\nperimeter as you walk around the\nedges of that tree. So how big a tree can I get?",
    "start": "1610330",
    "end": "1616760"
  },
  {
    "text": "I'd like to somehow\nplace these leaves-- now, what's the constraint\non the leaves? Let's say all of\nthese are length one.",
    "start": "1616760",
    "end": "1624480"
  },
  {
    "text": "Then, this says it\nevery pair of leaves must be at least distance\ntwo way from each other.",
    "start": "1624480",
    "end": "1630149"
  },
  {
    "text": "So I got to place these\ndots in the square so that every pair has\ndistance at least two. This is like saying--\nhere's my square.",
    "start": "1630150",
    "end": "1638350"
  },
  {
    "text": "--I'd like to place dots\nso their distance is at least distance two. That's like saying\nif, I drew a unit",
    "start": "1638350",
    "end": "1645150"
  },
  {
    "text": "disk around two points--\nI got to remember. You should always draw the\ndisk first and then the center.",
    "start": "1645150",
    "end": "1652530"
  },
  {
    "text": "Much easier. Those disks should\nnot be overlapping. If this is length one,\nand this is length one,",
    "start": "1652530",
    "end": "1661750"
  },
  {
    "text": "the disks will be\noverlapping if and only if this distance is\nsmaller than two. I want it always to be\ngreater than or equal to two.",
    "start": "1661750",
    "end": "1668420"
  },
  {
    "text": "So I just have to place a whole\nbunch of disks in the square so that they're not overlapping.",
    "start": "1668420",
    "end": "1674010"
  },
  {
    "text": "So how big a square\ndo I need to do that? This is a well-studied problem,\nis the disk packing problem.",
    "start": "1674010",
    "end": "1680850"
  },
  {
    "text": "A lot of results known about it. It's quite difficult. But we don't need to be super\nsmart here to get a good bound.",
    "start": "1680850",
    "end": "1687909"
  },
  {
    "text": "Let's put a point-- let's\nput points along a grid. I'm going to regret\nmaking such a big grid.",
    "start": "1687910",
    "end": "1694659"
  },
  {
    "text": " Let's say, an n by n grid.",
    "start": "1694660",
    "end": "1701640"
  },
  {
    "start": "1701640",
    "end": "1707380"
  },
  {
    "text": "And I'm going to set\nthe size of my disks right so that these\nguys just barely touch.",
    "start": "1707380",
    "end": "1713305"
  },
  {
    "text": " This is actually not a\nterribly good packing.",
    "start": "1713305",
    "end": "1720870"
  },
  {
    "text": "You should do a triangular\ngrid instead of a square grid. But it'll be good\nenough asymptotically.",
    "start": "1720870",
    "end": "1727610"
  },
  {
    "text": "You get the idea. If I set the size of\nmy paper to be n by n,",
    "start": "1727610",
    "end": "1732840"
  },
  {
    "text": "I can fit about n squared\nunit disks in there.",
    "start": "1732840",
    "end": "1738029"
  },
  {
    "text": "N by n paper folds something\nlike n plus 1 squared.",
    "start": "1738030",
    "end": "1745340"
  },
  {
    "text": "But let's just say,\napproximately n squared disks. So that means I can make a star\nwith about n squared limbs.",
    "start": "1745340",
    "end": "1756169"
  },
  {
    "text": "It's insane. It's like super efficient. Each of these little\nportions of paper ends up being one\nof these segments.",
    "start": "1756170",
    "end": "1762599"
  },
  {
    "text": "That's the claim is,\nyou could fold that. So once you fold this thing,\nI have an n by n square. You started with\nperimeter about four n",
    "start": "1762599",
    "end": "1770100"
  },
  {
    "text": "And now, I have perimeter\nabout n squared. That's huge with\nrespect to four n.",
    "start": "1770100",
    "end": "1775480"
  },
  {
    "text": "So this is much bigger than four\nn, for n sufficiently large.",
    "start": "1775480",
    "end": "1782316"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]\nabout the length flaps. PROFESSOR: Here, I was assuming\nall the flaps are length one. So the disks are size one,\nand so it's an n by n square.",
    "start": "1782316",
    "end": "1790600"
  },
  {
    "text": " Clear? So this is more\nmotivation for why",
    "start": "1790600",
    "end": "1796990"
  },
  {
    "text": "this theorem is interesting. It lets you solve\nthis fun math puzzle and show not only does a\nperimeter not go-- not only",
    "start": "1796990",
    "end": "1806020"
  },
  {
    "text": "does the perimeter\nnot only go down, but it can go arbitrarily high.",
    "start": "1806020",
    "end": "1811228"
  },
  {
    "text": "It just takes a lot of folding. ",
    "start": "1811229",
    "end": "1816370"
  },
  {
    "text": "So let's say\nsomething about how we prove that once you have a\nvalid placement of the points,",
    "start": "1816370",
    "end": "1822820"
  },
  {
    "text": "you can actually fill in\nthe creases, find folding. ",
    "start": "1822820",
    "end": "1841970"
  },
  {
    "text": "Let me bring up an example.  So this is actually\nthe example I",
    "start": "1841970",
    "end": "1848340"
  },
  {
    "text": "keep using which is, you\nwant to make a lizard or some generic four-legged\ntail and head kind of creature.",
    "start": "1848340",
    "end": "1858090"
  },
  {
    "text": "This is the output\nfrom TreeMaker, complete with crease\npattern and everything. But here, I've labeled\nall the-- or actually",
    "start": "1858090",
    "end": "1865080"
  },
  {
    "text": "Robert Lang, I think, has\nlabeled all of-- this a figure from our book. --all the vertices of\nthe tree and the shadow.",
    "start": "1865080",
    "end": "1873270"
  },
  {
    "text": "And then, we're\nlabeling where they come from on the piece of paper. ",
    "start": "1873270",
    "end": "1879750"
  },
  {
    "text": "So in particular, you see\nsomething like a leaf h. And it comes from this\none point on the paper.",
    "start": "1879750",
    "end": "1886410"
  },
  {
    "text": "This leaf d comes\nfrom this point, and g comes from that point. It's actually kind of\nsimilarly oriented to this guy.",
    "start": "1886410",
    "end": "1893710"
  },
  {
    "text": "The interior vertices, they\ncome from several points. It's a little messy. But let's-- one of the things\nis to try to locate where those",
    "start": "1893710",
    "end": "1901309"
  },
  {
    "text": "points ought to be. s So there's this idea\nof an active path which",
    "start": "1901310",
    "end": "1908809"
  },
  {
    "text": "is a path in the tree\nbetween two leaves.",
    "start": "1908810",
    "end": "1915720"
  },
  {
    "text": "I'll call them\nshadow leaves to say that they're in the shadow tree. ",
    "start": "1915720",
    "end": "1923650"
  },
  {
    "text": "And the length of\nthat path equals",
    "start": "1923650",
    "end": "1932850"
  },
  {
    "text": "the distance in the paper.",
    "start": "1932850",
    "end": "1939370"
  },
  {
    "text": " So in the case of\nmaking a star graph,",
    "start": "1939370",
    "end": "1945020"
  },
  {
    "text": "this is exactly\nwhen the disks kiss, when the just touch each\nother on the boundary.",
    "start": "1945020",
    "end": "1952130"
  },
  {
    "text": "So in other words, we\nhave this inequality, saying the distance\nbetween in the paper should",
    "start": "1952130",
    "end": "1958110"
  },
  {
    "text": "be greater than or equal\nto distance in the tree. If that inequality is\nactually an equality, if they're the same thing,\nthen it's kind of critical.",
    "start": "1958110",
    "end": "1966640"
  },
  {
    "text": "I can't get those points\nany closer in the paper. Those things I\ncall active paths.",
    "start": "1966640",
    "end": "1972970"
  },
  {
    "text": "And that is some of\nthe lines up here. I guess the black\ndashed line, actually,",
    "start": "1972970",
    "end": "1981509"
  },
  {
    "text": "in a lot of the dash lines. All of the dash lines, I think. So for example, d to h, that's\na distance between two leaves.",
    "start": "1981510",
    "end": "1992650"
  },
  {
    "text": "And if you measure the\ndistance here, it's two. And just imagine,\nthis example has been set up so this\nis exactly two.",
    "start": "1992650",
    "end": "1999130"
  },
  {
    "text": "So this is tight. I can't move h any closer\nto d or vice versa. And also from h to\na, a is actually",
    "start": "1999130",
    "end": "2006210"
  },
  {
    "text": "in the middle of the paper\nand corresponds to that flap. That's all of those\ngreen, actually",
    "start": "2006210",
    "end": "2013540"
  },
  {
    "text": "it's just the green lines,\ngreen dashed lines are active. They're kind of critical.",
    "start": "2013540",
    "end": "2018960"
  },
  {
    "text": "And what's nice is that\nsubdivides my piece of paper into a bunch of smaller shapes. So I have a little\ntriangle out here.",
    "start": "2018960",
    "end": "2025567"
  },
  {
    "text": "That turns out to be junk. We're not going to need\nit because the sort of outside the diagram. You could folder underneath.",
    "start": "2025567",
    "end": "2030690"
  },
  {
    "text": "Get rid of it. You've got a quadrilateral\nhere between the green lines.",
    "start": "2030690",
    "end": "2036738"
  },
  {
    "text": "We've got a triangle\nup here, a triangle at the top, triangle\non the left. All we need to do is fill\nin those little parts.",
    "start": "2036738",
    "end": "2044190"
  },
  {
    "text": "Fill in that triangle. Fill in that quadrilateral. Of course, in general, there\nmight not be any active paths, and we haven't simplified\nthe diagram at all.",
    "start": "2044190",
    "end": "2050865"
  },
  {
    "text": "But if there are\nno active paths, you're really probably\nnot very efficient. That means none of these\nconstraints are tight.",
    "start": "2050865",
    "end": "2057080"
  },
  {
    "text": "That means you could increase\nthe scale factor lambda, make a better model.",
    "start": "2057080",
    "end": "2063544"
  },
  {
    "text": "You can increase lambda\nat least a little bit. If all of these are\nstrictly greater, you can increase lambda until\none of them becomes equal.",
    "start": "2063544",
    "end": "2070846"
  },
  {
    "text": "So you should have at\nleast one active path. And in fact if\nyou're efficient, you should have lots\nof active paths.",
    "start": "2070846",
    "end": "2077300"
  },
  {
    "text": "I don't think I need to\nbe too formal about that. ",
    "start": "2077300",
    "end": "2086080"
  },
  {
    "text": "But it's true.  And here's one thing you\ncan show about active paths.",
    "start": "2086080",
    "end": "2093469"
  },
  {
    "text": "So what would be really\nnice, in this example, I have triangles\nand quadrilaterals. In general, I'm going\nto have a whole bunch",
    "start": "2093469",
    "end": "2099241"
  },
  {
    "text": "of different shapes. Some of them could\neven be non-convex which would be annoying. I would really just like\nto deal with triangles",
    "start": "2099241",
    "end": "2105470"
  },
  {
    "text": "because I like\ntriangles-- geometer. And triangles are simple. And it looks like the\ncrease pattern in a triangle",
    "start": "2105470",
    "end": "2111170"
  },
  {
    "text": "is pretty simple. In fact, it's just\nangular bisectors of the triangle plus a few\nextra perpendicular folds.",
    "start": "2111170",
    "end": "2119940"
  },
  {
    "text": "So that would be\nkind of nice if I could get everything triangles. To do that, I need\nlots of active paths.",
    "start": "2119940",
    "end": "2126640"
  },
  {
    "text": "So how can I guarantee that\nthere's lots of active paths? I'm going wave my hands a little\nbit about how this is done.",
    "start": "2126640",
    "end": "2133420"
  },
  {
    "text": " But the idea is to\naugment the tree.",
    "start": "2133420",
    "end": "2143200"
  },
  {
    "text": "So I have some tree that\nI actually want to make, like lizard. And I'm going to add\nsome extra stuff.",
    "start": "2143200",
    "end": "2149930"
  },
  {
    "text": "Like maybe I'll add a branch\nhere and a branch here or whatever. Whatever it takes. ",
    "start": "2149930",
    "end": "2157130"
  },
  {
    "text": "I got to do so carefully. So let me say what that means. ",
    "start": "2157130",
    "end": "2165400"
  },
  {
    "text": "So I'm going to add extra\nleaves to the shadow tree.",
    "start": "2165400",
    "end": "2175359"
  },
  {
    "text": " My goal is to make the active\npaths triangulate the paper",
    "start": "2175360",
    "end": "2207300"
  },
  {
    "text": "without changing\nthe scale factor. ",
    "start": "2207300",
    "end": "2217040"
  },
  {
    "text": "So this is kind of a cheat. And most of the time, you\ndon't actually need this cheat. But for proving things, it\nmakes life a little easier.",
    "start": "2217040",
    "end": "2226330"
  },
  {
    "text": "So we want to show that\nit's enough to place the vertices subject\nto this, the leaves subject to this constraint.",
    "start": "2226330",
    "end": "2234080"
  },
  {
    "text": "So ideally, we make our tree. But if we make an even\nmore complicated tree, like with these extra little\nlimbs, we can get rid of them",
    "start": "2234080",
    "end": "2242551"
  },
  {
    "text": "at the end. You just fold them\nover and collapse this flap against\nan adjacent flap.",
    "start": "2242551",
    "end": "2247770"
  },
  {
    "text": "So if we make our life\nharder, that's OK, too. If we could fold a\nmore complicated tree,",
    "start": "2247770",
    "end": "2253580"
  },
  {
    "text": "in particular we folded\nthe tree we wanted. If we can do that without\nchanging the scale factor,",
    "start": "2253580",
    "end": "2258850"
  },
  {
    "text": "then great. Then, we did what\nwe wanted to do. We folded our piece of paper\nwith the desired scale factor.",
    "start": "2258850",
    "end": "2267845"
  },
  {
    "text": "In reality, we're actually\ngoing to move the leaves around a little bit\nso that we have to do. We're going to move\naround the leaves",
    "start": "2267845",
    "end": "2274250"
  },
  {
    "text": "that you already placed\nin order to make room for the new leaves. But here's the idea. We have these leaves.",
    "start": "2274250",
    "end": "2281600"
  },
  {
    "text": "There's some active\npaths, these green lines. And we'd really-- we have this\nquadrilateral in the center.",
    "start": "2281600",
    "end": "2287609"
  },
  {
    "text": "We'd really like\nto subdivide it. Like this black line is\nkind of asking for it. It would be really\nnice if we could just",
    "start": "2287610",
    "end": "2293140"
  },
  {
    "text": "add in an active paths there. And you can do it. Let's see if I can identify\nwhat we're talking about here.",
    "start": "2293140",
    "end": "2301170"
  },
  {
    "text": "So a fun thing\nabout active paths, you look at two leaves like\ng d here, which corresponds",
    "start": "2301170",
    "end": "2307130"
  },
  {
    "text": "to this path g d here,\nbecause it's active, you know this length is exactly\nthe length traced right here.",
    "start": "2307130",
    "end": "2315490"
  },
  {
    "text": "So that means, this\nsegment has to be folded right along\nthe tree here. You know that this\nsegment is that.",
    "start": "2315490",
    "end": "2321340"
  },
  {
    "text": "And so in particular, you know\nwhere c is on that segment. C actually comes from multiple\npoints in this diagram.",
    "start": "2321340",
    "end": "2327360"
  },
  {
    "text": "But you know that this point\nright here must fold to c. And you know this point\nmust fold here and so on.",
    "start": "2327360",
    "end": "2335260"
  },
  {
    "text": "These guys correspond. ",
    "start": "2335260",
    "end": "2340500"
  },
  {
    "text": "So that's good. So if I look at\nthis quadrilateral, it corresponds so g to c to d\nto c to h to c to b to a back",
    "start": "2340500",
    "end": "2353450"
  },
  {
    "text": "to b back to c. And so my guess is if you\nadd a little limb in here--",
    "start": "2353450",
    "end": "2365300"
  },
  {
    "text": "I think I can draw on this. That would be nice. Should really tell you\nabout-- is this going to work?",
    "start": "2365300",
    "end": "2375100"
  },
  {
    "text": "Yes. It's kind of white,\nbut there we go.  So great.",
    "start": "2375100",
    "end": "2384020"
  },
  {
    "text": "Draw a fun diagram here.  This is how I make my lecture\nnotes if you're curious.",
    "start": "2384020",
    "end": "2390760"
  },
  {
    "text": "This is a tablet PC. ",
    "start": "2390760",
    "end": "2396100"
  },
  {
    "text": "Now, I've got\nsome-- Tell me if I",
    "start": "2396100",
    "end": "2402261"
  },
  {
    "text": "make a mistake, those who\nknow what I'm drawing. ",
    "start": "2402261",
    "end": "2408088"
  },
  {
    "text": "What the hell is this? I think it goes there. There.",
    "start": "2408088",
    "end": "2415320"
  },
  {
    "text": "There. I'll explain what I'm\ndrawing once I've drawn it. It's easier.",
    "start": "2415320",
    "end": "2421920"
  },
  {
    "text": "Something like that. This is a bunch of disks\nand a bunch of other things,",
    "start": "2421920",
    "end": "2427329"
  },
  {
    "text": "there's only one\nhere called rivers. And this is a geometric way to\nthink about the constraints.",
    "start": "2427330",
    "end": "2434260"
  },
  {
    "text": "If you look at this structure--\nso I have a disk down",
    "start": "2434260",
    "end": "2441180"
  },
  {
    "text": "here corresponding to d. I have a disk corresponding\nto h, a disk corresponding to g, a river corresponding\nto the segment b c.",
    "start": "2441180",
    "end": "2448392"
  },
  {
    "text": "The reason I only\nhave one river is there's only one interior\nedge in this tree. Everything else is a leaf edge.",
    "start": "2448392",
    "end": "2454160"
  },
  {
    "text": "So leaf edges are\ngoing to be disks. All non leaf edges are\ngoing to be rivers. And the structure, the way\nthat those things connect",
    "start": "2454160",
    "end": "2461300"
  },
  {
    "text": "to each other is the same as\nthe structure in this tree. So you've got the\nthree disks down here,",
    "start": "2461300",
    "end": "2467020"
  },
  {
    "text": "which corresponds\nto these leaf edges. They all touch a common river\nbecause all of those edges are incident to that\nedge in the center.",
    "start": "2467020",
    "end": "2476096"
  },
  {
    "text": "And there's three\ndisks on the top that correspond to the three\nleaf edges up here. This is really just\nthe same thing.",
    "start": "2476096",
    "end": "2482540"
  },
  {
    "text": "It's saying that if\nyou want to look, say, at the distance\nbetween h and a here.",
    "start": "2482540",
    "end": "2488440"
  },
  {
    "text": "The distance between h and\na should be length three. And those three\nlengths are represented by the size of\nthis disk, followed",
    "start": "2488440",
    "end": "2495400"
  },
  {
    "text": "by the width of\nthis river, followed by the size of the a disk. It's say exactly the same\nconstraints, just represented",
    "start": "2495400",
    "end": "2502510"
  },
  {
    "text": "geometrically. Now, if I'm lucky,\nthese regions actually kiss, they touch at points.",
    "start": "2502510",
    "end": "2507529"
  },
  {
    "text": "That's when things are active. And you could draw straight\nacross from a to h and never go",
    "start": "2507530",
    "end": "2513940"
  },
  {
    "text": "in these outside regions. If you're not lucky,\nthey won't touch. If they don't touch,\nmake them touch.",
    "start": "2513940",
    "end": "2521619"
  },
  {
    "text": "That's all I want to do. And so I just want to\nblow up these regions,",
    "start": "2521620",
    "end": "2528240"
  },
  {
    "text": "make them longer, for\nexample, until things touch.",
    "start": "2528240",
    "end": "2533280"
  },
  {
    "text": "When they touch enough,\nif you do it right, you can actually get\nthem to triangulate. That's my very\nhand wavy argument.",
    "start": "2533280",
    "end": "2540270"
  },
  {
    "text": "It's proved formally\nin the book, and it's a little bit technical. So I think I will\nmove on and tell you",
    "start": "2540270",
    "end": "2551137"
  },
  {
    "text": "what to do with triangles. ",
    "start": "2551137",
    "end": "2609609"
  },
  {
    "text": "So suppose you\nhave some triangle. And each of these edges\nis an active path.",
    "start": "2609610",
    "end": "2616970"
  },
  {
    "text": "So there's some leaf here.  We'll call them a, b, and c.",
    "start": "2616970",
    "end": "2624700"
  },
  {
    "text": "And this segment we know will\nmap right along the floor to make up that path, that\nactive path in the tree.",
    "start": "2624700",
    "end": "2636430"
  },
  {
    "text": "Like I said, we're going to\nfollow along angular bisectors. ",
    "start": "2636430",
    "end": "2645260"
  },
  {
    "text": "You may know the angular\nbisectors of a triangle meet at a single point.",
    "start": "2645260",
    "end": "2652750"
  },
  {
    "text": "And then, we're going to\nmake some perpendicular folds like that.",
    "start": "2652750",
    "end": "2667704"
  },
  {
    "text": " Where the\nperpendicular folds go,",
    "start": "2667705",
    "end": "2673280"
  },
  {
    "text": "well, they go whenever\nthere's a shadow vertex along this segment.",
    "start": "2673280",
    "end": "2680680"
  },
  {
    "text": "Remember this edge,\nb c corresponds to some path between b\nand c in the tree which",
    "start": "2680680",
    "end": "2689619"
  },
  {
    "text": "looks like whatever. And so for each\nof these branching points that we visit along\nthat, we can just measure.",
    "start": "2689620",
    "end": "2696684"
  },
  {
    "text": "As we move along here, we get to\nsome vertex then another vertex then another vertex then c,\nexcept I did it backwards.",
    "start": "2696684",
    "end": "2704630"
  },
  {
    "text": "And so for each of\nthese guys, I know that I need to be able\nto articulate there. I need a hinge crease.",
    "start": "2704630",
    "end": "2710510"
  },
  {
    "text": "And so I just put in a\nhinge grace perpendicular to the floor,\nessentially, because we know this is mapping\nto the floor.",
    "start": "2710510",
    "end": "2717370"
  },
  {
    "text": "And conveniently,\nthose will all line up. So if I have some vertex\nhere-- let's call it d.",
    "start": "2717370",
    "end": "2722730"
  },
  {
    "text": "--d will be here. But d will also be here. Because if I follow\nthe path from b to a, a is some other\nguy, maybe this one,",
    "start": "2722730",
    "end": "2730580"
  },
  {
    "text": "I also have to go through d. And so these things will\nconveniently line up perfectly. I'm not going to\nprove that again.",
    "start": "2730580",
    "end": "2736880"
  },
  {
    "text": "But it's true. And you just get this really\nnice simple to fold thing.",
    "start": "2736880",
    "end": "2742730"
  },
  {
    "text": " Shoot, I'll fold\none if you haven't. This is a standard rabbit ear\nmolecule in making origami.",
    "start": "2742730",
    "end": "2750545"
  },
  {
    "text": "You have a little triangle. You want to make it an ear. You squeeze along the\nangular bisectors, and it makes a cute rabbit ear.",
    "start": "2750545",
    "end": "2758150"
  },
  {
    "text": "And you can see it also,\nthe crease pattern, in here like in this\ntriangle in the upper right.",
    "start": "2758150",
    "end": "2765980"
  },
  {
    "text": "You've got the red lines which\nare the angular bisectors. And then, you've got all\nthose perpendicular folds.",
    "start": "2765980",
    "end": "2771470"
  },
  {
    "text": "And they go exactly\nwhere those letters go. And the triangle at\nthe top is similar.",
    "start": "2771470",
    "end": "2778430"
  },
  {
    "text": "It's a little different because\nthe very top edge of the paper is not actually active.",
    "start": "2778430",
    "end": "2783550"
  },
  {
    "text": "So there's really a\nspecial case there. Upper right is also not active. Oh, that's annoying.",
    "start": "2783550",
    "end": "2790460"
  },
  {
    "text": "Yeah. There's a little\nbit of extra stuff that happens at the\nboundary of the paper",
    "start": "2790460",
    "end": "2795849"
  },
  {
    "text": "where you don't\nhave active paths. But it's, as you can see\nfrom the crease pattern, it's basically the same.",
    "start": "2795850",
    "end": "2801770"
  },
  {
    "text": "In fact, I could\ncall it the same. It's a little bit less pretty\nbecause this is not green.",
    "start": "2801770",
    "end": "2808595"
  },
  {
    "text": "And so you don't actually\nknow that c is here. And you don't know\nthat b is there. But you know about\nall the other edges.",
    "start": "2808595",
    "end": "2814542"
  },
  {
    "text": "There's just one edge\nyou might not know about. And so you can figure\nout what the right edge is based on the other edges\nof the triangle, the other two",
    "start": "2814542",
    "end": "2820700"
  },
  {
    "text": "edges.  That's just a feature. You can triangulate everything\nexcept the boundary.",
    "start": "2820700",
    "end": "2829000"
  },
  {
    "text": "You may not be able to get\nactive paths in this step. ",
    "start": "2829000",
    "end": "2836070"
  },
  {
    "text": "That kind of does\nthe tree method in a super abbreviated version. ",
    "start": "2836070",
    "end": "2843980"
  },
  {
    "text": "I showed you a demo last\ntime, just in case you forgot. You draw your favorite tree.",
    "start": "2843980",
    "end": "2850135"
  },
  {
    "text": "See if I can get it\nto do the same one. ",
    "start": "2850135",
    "end": "2857360"
  },
  {
    "text": "And you optimize,\ngenerate a crease pattern. Oh, it's a different one.",
    "start": "2857360",
    "end": "2863350"
  },
  {
    "text": "Fun. There it is. And here, TreeMaker knows\nhow to draw the disks.",
    "start": "2863350",
    "end": "2869129"
  },
  {
    "text": "It doesn't currently know how\nto draw the rivers because it's kind of tricky to make a snakey\npath in a computer program.",
    "start": "2869129",
    "end": "2875790"
  },
  {
    "text": "But you see the three disks down\nhere, the three disks up there, and you can imagine\nthe one river",
    "start": "2875790",
    "end": "2881289"
  },
  {
    "text": "in the middle representing the\ncentral segment of your tree.",
    "start": "2881290",
    "end": "2887437"
  },
  {
    "text": "And one of the problems\non the problems set, problem set one is\nreleased, is to just make something using TreeMaker.",
    "start": "2887437",
    "end": "2892769"
  },
  {
    "text": "I would encourage\nyou to start simple unless you know\nwhat you're doing. You don't have to\nuse the program. You could do it by\nhand, placing disks.",
    "start": "2892769",
    "end": "2898380"
  },
  {
    "text": "That's how most\norigamists actually do it. I'm sure Jason will\ndo it that way.",
    "start": "2898380",
    "end": "2903850"
  },
  {
    "text": "You can use the program,\nprint out a crease pattern, see what it looks like. ",
    "start": "2903850",
    "end": "2911760"
  },
  {
    "text": "Next thing.  If you want to do\nthis in reality--",
    "start": "2911760",
    "end": "2918200"
  },
  {
    "text": "and what TreeMaker is doing\nis not this triangulation. Doing a triangulation\nis a bit of a pain, but you could keep\nmodifying your tree",
    "start": "2918200",
    "end": "2924474"
  },
  {
    "text": "until it triangulates. The alternative is you\njust deal with polygons that are bigger than triangles.",
    "start": "2924474",
    "end": "2929654"
  },
  {
    "text": "And there's this thing\ncalled the universal molecule by Robert Lang. Here it is for a quadrilateral.",
    "start": "2929654",
    "end": "2935609"
  },
  {
    "text": "And it makes it-- this works\nfor any convex polygon.",
    "start": "2935610",
    "end": "2941070"
  },
  {
    "text": "Now sometimes, you're\nactive paths don't decompose your shape into convex polygons. And this still doesn't work.",
    "start": "2941070",
    "end": "2946710"
  },
  {
    "text": "You still have to\ndo something here. You need to add some\nextra leaf edges to the tree to just\nfill things up.",
    "start": "2946710",
    "end": "2953790"
  },
  {
    "text": "But you don't have to stop. You have to go all the way to\nthe point of triangulation. You can stop at the point which\nhappens most the time when",
    "start": "2953790",
    "end": "2961369"
  },
  {
    "text": "all of the faces are convex. And then, it's a slightly more\ngeneral picture what happens.",
    "start": "2961370",
    "end": "2967440"
  },
  {
    "text": "Intuitively, what\nyou want to do is, this is the tree you want\nto make among those leaves.",
    "start": "2967440",
    "end": "2973010"
  },
  {
    "text": "All the boundary edges\nhere are active paths. You have g d h a. Those are active\npaths, so you know",
    "start": "2973010",
    "end": "2978960"
  },
  {
    "text": "where all of those branching\npoints are in the middle. You'd like to build that.",
    "start": "2978960",
    "end": "2984720"
  },
  {
    "text": "And so what we're going to\ndo is build it bottom up in the literal sense from z\nequals zero, increasing z.",
    "start": "2984720",
    "end": "2992050"
  },
  {
    "text": "And what that corresponds\nto in this picture is shrinking or offsetting\nthese edges inward.",
    "start": "2992050",
    "end": "2999579"
  },
  {
    "text": "So you offset these\nall by the same amount. That's like traveling\nup over here. So you see the red\nlines here correspond",
    "start": "2999580",
    "end": "3005680"
  },
  {
    "text": "to the red cross sections. So I just see what happens\nin cross section is I shrink things in.",
    "start": "3005680",
    "end": "3011460"
  },
  {
    "text": "And the first thing that happens\nat this first critical red drawing is that the path\nfrom d to a becomes critical,",
    "start": "3011460",
    "end": "3020890"
  },
  {
    "text": "becomes active. Before it was\ninactive that-- that was kind of annoying for me.",
    "start": "3020890",
    "end": "3026530"
  },
  {
    "text": "I wanted it to be\ntriangulated, but it wasn't. The distance from a to\nd in the piece of paper",
    "start": "3026530",
    "end": "3032069"
  },
  {
    "text": "was bigger than the distance\nbetween the leaves in the tree.",
    "start": "3032070",
    "end": "3040180"
  },
  {
    "text": "I wanted them to be equal. Well, it turns out, if\nyou shrink this thing, eventually they\nmight become equal. And that's what happens.",
    "start": "3040180",
    "end": "3045650"
  },
  {
    "text": "And that's what\nTreeMaker computes. And what you should\ndo if you're building the universal molecule. If you discover, oh,\nnow a d is active,",
    "start": "3045650",
    "end": "3053680"
  },
  {
    "text": "now, I subdivide\ninto two triangles. And then, I do the thing\nin the two triangles. And generally, you start\nwith some convex polygon.",
    "start": "3053680",
    "end": "3060167"
  },
  {
    "text": "You shrink it. At some point, some diagonal\nmight become active. You split it into two,\njust keep going in the two.",
    "start": "3060167",
    "end": "3067240"
  },
  {
    "text": "And there's one other\nthing which can happen, which is what's happening\nat the end of a triangle.",
    "start": "3067240",
    "end": "3072640"
  },
  {
    "text": "You shrink. And then, it could be two\nvertices actually collide with each other. And then, you just think\nof them as one vertex",
    "start": "3072640",
    "end": "3078620"
  },
  {
    "text": "and keep shrinking. So that's the general universal\nmolecule construction. You see in a sort of-- these are\nthe cross sections from above.",
    "start": "3078620",
    "end": "3089380"
  },
  {
    "text": "You see that as you go up,\nthings are getting smaller. That is one of the statements of\nthe uniaxial base as you go up.",
    "start": "3089380",
    "end": "3096870"
  },
  {
    "text": "Cross sections get tinier. And that gives you\nthe crease pattern.",
    "start": "3096870",
    "end": "3102050"
  },
  {
    "text": "If you follow along\nwhere the vertices go during this process,\nand you draw in and all the active path that\nyou create along the way,",
    "start": "3102050",
    "end": "3108760"
  },
  {
    "text": "that's your crease pattern. ",
    "start": "3108760",
    "end": "3114490"
  },
  {
    "text": "So that's how you do\nit more practically is you use the universal molecule. But to prove it, you\ndon't actually need that.",
    "start": "3114490",
    "end": "3119786"
  },
  {
    "text": " All right. I have now some more real\nexamples by Robert Lang",
    "start": "3119786",
    "end": "3130724"
  },
  {
    "text": "and by Jason Ku. So here is Roosevelt elk.",
    "start": "3130725",
    "end": "3135850"
  },
  {
    "text": "And Rob is all about\ngetting very realistic form.",
    "start": "3135850",
    "end": "3141900"
  },
  {
    "text": "So all of the branching\nmeasurements and-- I'm sure if you knew\na lot about elks, you could recognizes\nthis a Roosevelt",
    "start": "3141900",
    "end": "3148380"
  },
  {
    "text": "elk not some other elk. And you can achieve that\nlevel of detail and realism",
    "start": "3148380",
    "end": "3153505"
  },
  {
    "text": "using the tree\nmethod because you can control all of the relative\nlengths of those segments and get perfect\nbranching structure",
    "start": "3153506",
    "end": "3159719"
  },
  {
    "text": "and get the right proportions\nfor the legs and tail and so on. And you can see\nhere, the-- and you",
    "start": "3159719",
    "end": "3166730"
  },
  {
    "text": "can go to Robert Lang's webpage,\nlandorigami.com and print this out. And try it out if you want.",
    "start": "3166730",
    "end": "3172790"
  },
  {
    "text": "This will fold not this but\nthe base for that model. And you could see the disks. And you can see some\napproximation of the rivers",
    "start": "3172790",
    "end": "3179740"
  },
  {
    "text": "here. But they're not quite drawn\nin in this particular diagram.",
    "start": "3179740",
    "end": "3186220"
  },
  {
    "text": "But a lot of detail. And if you look\ncarefully, you can really read off what the tree is here. You can see how these\nthings are separated,",
    "start": "3186220",
    "end": "3192500"
  },
  {
    "text": "and it will correspond to the\nbranching structure over there. Here's a more complicated one.",
    "start": "3192500",
    "end": "3199390"
  },
  {
    "text": "Scorpion varleg\nwhich you can also fold at lifesize if\nyou're really crazy.",
    "start": "3199390",
    "end": "3207450"
  },
  {
    "text": "And you can also see from\nthese kinds of diagrams that paper usage is super\nefficient in these designs.",
    "start": "3207450",
    "end": "3216530"
  },
  {
    "text": "And presumably that's\nhow Robert design them. The only paper we're\nwasting in some sense",
    "start": "3216530",
    "end": "3222339"
  },
  {
    "text": "is the little regions between\nthe disks and the rivers",
    "start": "3222340",
    "end": "3227910"
  },
  {
    "text": "which is quite small. Most of the papers getting\nabsorbed into the flaps. ",
    "start": "3227910",
    "end": "3234570"
  },
  {
    "text": "Here's one of the first\nmodels by Jason Ku that I saw, the Nazgul from\nLord of the Rings.",
    "start": "3234570",
    "end": "3240380"
  },
  {
    "text": "And pretty complicated. So here, the bold lines\nshow you essentially",
    "start": "3240380",
    "end": "3245760"
  },
  {
    "text": "where the disks and the\nrivers are that have been-- AUDIENCE: Those are\nactually the hinge creases. PROFESSOR: Oh, those\nare hinge creases.",
    "start": "3245760",
    "end": "3250944"
  },
  {
    "text": "Yeah. Good. And the top is the\nactual crease pattern.",
    "start": "3250944",
    "end": "3256150"
  },
  {
    "text": "And it's pretty awesome. You've got a horse and rider\nout of one square paper. ",
    "start": "3256150",
    "end": "3264109"
  },
  {
    "text": "Here's a shrimp. He's super complicated\nand super realistic.",
    "start": "3264110",
    "end": "3269440"
  },
  {
    "text": "It looks very shrimpy. I know some people who\nare freaked out by shrimp. And so this should really\nelicit that similar response.",
    "start": "3269440",
    "end": "3277320"
  },
  {
    "text": "Or other people get really\nhungry at this point, I guess. But you could see the\ntree is pretty dense here,",
    "start": "3277320",
    "end": "3285180"
  },
  {
    "text": "lots of little features\ngetting that branching right. And one last example\nis this butterfly",
    "start": "3285180",
    "end": "3292770"
  },
  {
    "text": "which is pretty\nawesome in its realism. And I guess the tree\nis a lot simpler here.",
    "start": "3292770",
    "end": "3300160"
  },
  {
    "text": "But there's a lot of\nextra creases here. You see just for getting\nthe flaps nice and narrow.",
    "start": "3300160",
    "end": "3307130"
  },
  {
    "text": "So in general, these\nkinds of constructions will make this guy\nrather pointy and tall.",
    "start": "3307130",
    "end": "3314590"
  },
  {
    "text": "And you can just squash it back. And it's called a\nsync fold and make it tinier like-- you\nhave something like this.",
    "start": "3314590",
    "end": "3323180"
  },
  {
    "text": "The flaps are you\nthink are too tall. You just fold here.",
    "start": "3323180",
    "end": "3330300"
  },
  {
    "text": "Which, if you look at\nthe crease pattern, makes just an offset\nversion of the original.",
    "start": "3330300",
    "end": "3335840"
  },
  {
    "text": "And hey, now your\nflaps are half is tall. And if you're a\nproper origamist,",
    "start": "3335840",
    "end": "3341140"
  },
  {
    "text": "you-- I shouldn't do this live. ",
    "start": "3341140",
    "end": "3350760"
  },
  {
    "text": "You change the mountain valley\nassignment a little bit, and you sync everything\non the inside",
    "start": "3350760",
    "end": "3355839"
  },
  {
    "text": "instead of just folding it over. ",
    "start": "3355840",
    "end": "3362728"
  },
  {
    "text": "It's not going to\nlook super pretty. But same tree structure, just\nthe flaps are half as tall.",
    "start": "3362728",
    "end": "3371680"
  },
  {
    "text": "So that's all this\npleating here. And I think that's it\nfor my little tour.",
    "start": "3371680",
    "end": "3378310"
  },
  {
    "text": "And Jason Ku next. Next Monday we'll\nbe talking more about the artistic side,\nhistory of origami design,",
    "start": "3378310",
    "end": "3386290"
  },
  {
    "text": "and what it takes to\nreally make something real by these approaches. That should be lots of fun.",
    "start": "3386290",
    "end": "3393690"
  },
  {
    "text": "I want to move on to other kinds\nof efficient origami design. Less directly applicable\nto real origami design",
    "start": "3393690",
    "end": "3403509"
  },
  {
    "text": "so to speak, at least currently. But mathematically\nmore powerful. Uniaxial bases are\nnice, but it's not",
    "start": "3403510",
    "end": "3410700"
  },
  {
    "text": "everything you\nmight want to fold. So what if we want\nto fold other stuff.",
    "start": "3410700",
    "end": "3416940"
  },
  {
    "start": "3416940",
    "end": "3423180"
  },
  {
    "text": "And to a geometer,\nmost natural version of folding other stuff\nor folding anything",
    "start": "3423180",
    "end": "3428650"
  },
  {
    "text": "is a polyhedron. You have a bunch of\npolygons, flat panels in 3D, somehow joined together\nto make some surface.",
    "start": "3428650",
    "end": "3435570"
  },
  {
    "text": "How do I fold that? And let's start with a super\nsimple example which is I want to fold a\nsquare into a cube.",
    "start": "3435570",
    "end": "3445599"
  },
  {
    "text": "How big a square do I\nneed to fold a unit cube? Or how big cube can I\nfold for a unit square?",
    "start": "3445600",
    "end": "3453850"
  },
  {
    "text": "Either way. And I'm going to make\nit a one by one square.",
    "start": "3453850",
    "end": "3463700"
  },
  {
    "text": "And I'm going to fold it\ninto a cube of dimension x.",
    "start": "3463700",
    "end": "3471060"
  },
  {
    "text": "And I want to know--\nit looks funny. It's the quintuple x cubed.",
    "start": "3471060",
    "end": "3476930"
  },
  {
    "text": " It's the x-coordinate. That's my motivation. ",
    "start": "3476930",
    "end": "3486800"
  },
  {
    "text": "So we talked-- one\nthing we can think about is what makes the\ncorners of the cubes",
    "start": "3486800",
    "end": "3493329"
  },
  {
    "text": "and how far away should they be. So if I want to fold\nthis cube, I look at,",
    "start": "3493330",
    "end": "3498650"
  },
  {
    "text": "let's say, the opposite\ncorners of the cube. They're pretty far\naway on the cube.",
    "start": "3498650",
    "end": "3504920"
  },
  {
    "text": "And I know that by\nfolding I could only make distance is smaller. So somehow, if I measure the\nshortest path on the cube,",
    "start": "3504920",
    "end": "3513369"
  },
  {
    "text": "from this point to\nthis point, it's that if you believe-- when\nyou unfold this thing,",
    "start": "3513370",
    "end": "3520980"
  },
  {
    "text": "it should be flat. If I unfolds to just\nthose two squares, it's a straight line\nbetween the two.",
    "start": "3520980",
    "end": "3528686"
  },
  {
    "text": "And so that goes to the\nmidpoint of this edge and then over there. And you measure that length.",
    "start": "3528686",
    "end": "3533700"
  },
  {
    "text": "And oh, trigonometry.  Root five, that's\nnot what I wanted.",
    "start": "3533700",
    "end": "3539730"
  },
  {
    "text": " So we have x here, 2x here.",
    "start": "3539730",
    "end": "3549460"
  },
  {
    "text": "So this distance\nis-- yeah, I see.",
    "start": "3549460",
    "end": "3558310"
  },
  {
    "start": "3558310",
    "end": "3563959"
  },
  {
    "text": "Why is that different from\nwhat I have written down? ",
    "start": "3563959",
    "end": "3573674"
  },
  {
    "text": "Because that was not the\ndiameter of the cube. I see. AUDIENCE: You want\nthem equidistant.",
    "start": "3573674",
    "end": "3580286"
  },
  {
    "text": "PROFESSOR: No. I do want this but,\nI think if I go from the center of this\nsquare-- this is hard to draw.",
    "start": "3580287",
    "end": "3588120"
  },
  {
    "text": "--to the center of the back\nsquare, which is back here,",
    "start": "3588120",
    "end": "3594570"
  },
  {
    "text": "that distance is going\nto be wrapping around. Which is just going\nto be like 2x.",
    "start": "3594570",
    "end": "3602550"
  },
  {
    "text": "Is that bigger or\nsmaller than root 5x? AUDIENCE: It's smaller. PROFESSOR: Smaller.",
    "start": "3602550",
    "end": "3607560"
  },
  {
    "text": "Interesting.  One, two, three, four.",
    "start": "3607560",
    "end": "3616100"
  },
  {
    "text": "What did I do wrong? ",
    "start": "3616100",
    "end": "3621609"
  },
  {
    "text": "Oh, I see. OK. Here's a fun fact. This is actually the\nsmallest antipodal distance.",
    "start": "3621610",
    "end": "3629280"
  },
  {
    "text": "Get this right. So if you take some\npoint on the cube, and you look at the\npoint farthest away",
    "start": "3629280",
    "end": "3634290"
  },
  {
    "text": "from it on the other\nside of the cube, it will always be\nat least 2x away. So here, it's bigger.",
    "start": "3634290",
    "end": "3639830"
  },
  {
    "text": "This is probably the diameter. It's bigger than 2x, but it\nwill always be at least 2x away. This is actually the smallest\nsituation you can get.",
    "start": "3639830",
    "end": "3648380"
  },
  {
    "text": "And so I want to think\nabout the point that corresponds to the\ncenter of the square. Right?",
    "start": "3648380",
    "end": "3653870"
  },
  {
    "text": "Yes. Now maybe that maps to\nthe center like this.",
    "start": "3653870",
    "end": "3659809"
  },
  {
    "text": "And the antipodal points is\n2x away, or maybe it's bigger. But at least I know that this\nlength is greater than or equal",
    "start": "3659810",
    "end": "3669059"
  },
  {
    "text": "to 2x because that's-- the\nantipodal point has to be made",
    "start": "3669060",
    "end": "3675200"
  },
  {
    "text": "from that. I need to think\nabout all situation because I really want to think\nabout the center of the square.",
    "start": "3675200",
    "end": "3680873"
  },
  {
    "text": "Once that is at\nleast 2x, then I know that the side of the square\nis at least 2 root 2x.",
    "start": "3680873",
    "end": "3689570"
  },
  {
    "text": "Yes. ",
    "start": "3689570",
    "end": "3695450"
  },
  {
    "text": "And so I know that this is one.",
    "start": "3695450",
    "end": "3700780"
  },
  {
    "text": "And you work it out. And x is root 2 over 4. ",
    "start": "3700780",
    "end": "3706910"
  },
  {
    "text": "Or it's at most that. And so that gives you some\nbound on what it takes.",
    "start": "3706910",
    "end": "3712235"
  },
  {
    "text": "So this is actually\nreally the only technique we know to prove lower\nbounds on how much-- how big",
    "start": "3712235",
    "end": "3717550"
  },
  {
    "text": "a square you need\nto make something. It's this kind of distance\nincreasing argument. And it turns out you can\nactually achieve x equals this.",
    "start": "3717550",
    "end": "3725390"
  },
  {
    "text": "So this is what I\ncall lower bound. It says, you can't do\nany better than this. But there's also a matching\nupper bound which achieves this",
    "start": "3725390",
    "end": "3736310"
  },
  {
    "text": "and not going to\ndraw it perfectly.",
    "start": "3736310",
    "end": "3749840"
  },
  {
    "start": "3749840",
    "end": "3760950"
  },
  {
    "text": "So there are the six\nsides of the cube. You've got one, two,\nthree, four, five. And the sixth one is\nsplit into quarters.",
    "start": "3760950",
    "end": "3767470"
  },
  {
    "text": "And you can see, you just\nactually fold here, here, here, and here to get\nrid of that excess.",
    "start": "3767470",
    "end": "3773880"
  },
  {
    "text": "And it will come\ntogether as a cube. You also fold along\nthe edges of the cube. And it perfectly\nachieves this property.",
    "start": "3773880",
    "end": "3780180"
  },
  {
    "text": "That from the\ncenter of the paper, you have exactly one\nthis distance 2 root",
    "start": "3780180",
    "end": "3787400"
  },
  {
    "text": "2x to the antipodal\npoint which is the center of the opposite face.",
    "start": "3787400",
    "end": "3792630"
  },
  {
    "text": "Question? AUDIENCE: Sorry. Can you explain where the\n2x came from [INAUDIBLE]?",
    "start": "3792630",
    "end": "3797670"
  },
  {
    "text": "PROFESSOR: I wave my hands. So I'm thinking\nabout an arbitrary point on the\nsurface of the cube.",
    "start": "3797670",
    "end": "3804410"
  },
  {
    "text": "Here, it should\nbe clear it's 2x. There's x right here. And there's 1/2x here.",
    "start": "3804410",
    "end": "3810290"
  },
  {
    "text": "And there's 1/2x on the back. And I looked at\nanother situation which is when it was at a\ncorner that bigger than 2x.",
    "start": "3810290",
    "end": "3818335"
  },
  {
    "text": "And I claim if you\ninterpolate in the middle, you'll get something\nin the middle, in between 2x and root 5x.",
    "start": "3818335",
    "end": "3824920"
  },
  {
    "text": "For example, if\ntake a point here that's closer to the\ncorner, then that",
    "start": "3824920",
    "end": "3830530"
  },
  {
    "text": "point-- you should probably\nalso think about the edge case. But you check all of them,\nand they're at least 2x.",
    "start": "3830530",
    "end": "3835780"
  },
  {
    "text": "That's what I'm claiming. So I didn't really\nprove that formally. But claim is 2x is the smallest\nantepodal pair you could get.",
    "start": "3835780",
    "end": "3843820"
  },
  {
    "text": "AUDIENCE: What does\nantipodal mean? PROFESSOR: Antipodal simple\nmeans on the other side. The anti pode, the opposite\npole, like from North Pole",
    "start": "3843820",
    "end": "3850980"
  },
  {
    "text": "to South Pole. AUDIENCE: [INAUDIBLE].  PROFESSOR: Right\nnow, we know we're",
    "start": "3850980",
    "end": "3855990"
  },
  {
    "text": "taking whatever point is\nthe center of the square. It maps somewhere in the cube. I take the antipode from there.",
    "start": "3855990",
    "end": "3861760"
  },
  {
    "text": "I know that has to\nbe at least 2x away. And if you look at\nthe distance map here,",
    "start": "3861760",
    "end": "3869850"
  },
  {
    "text": "the farthest away point in\nthe squared from the center is the corner point. So I know that that distance\ncan only get smaller.",
    "start": "3869850",
    "end": "3876760"
  },
  {
    "text": "And other distances\nonly get smaller. So if I have to make a\n2x distance from there, this is my best\nchance for doing it.",
    "start": "3876760",
    "end": "3883770"
  },
  {
    "text": "And that gives\nyou a lower bound. Doesn't mean it can be achieved. But this shows you that\nyou can achieve it.",
    "start": "3883770",
    "end": "3889260"
  },
  {
    "text": "This is a result by Catalano,\nJohnson, and Lobe in 2001. It's like the only optimality\nresult we have for folding 3D",
    "start": "3889260",
    "end": "3896341"
  },
  {
    "text": "shapes. That's why I mention it. Tons of fun open\nproblems like you don't want to make\na square-- a cube.",
    "start": "3896341",
    "end": "3901920"
  },
  {
    "text": "Maybe you want to\nmake a triangle. If you want to cover a\ntriangle on both sides,",
    "start": "3901920",
    "end": "3908240"
  },
  {
    "text": "that's probably open. If you want to make\nregular tetrahedron, that's probably open. Pretty much any problem\nyou pose here is open.",
    "start": "3908240",
    "end": "3914030"
  },
  {
    "text": "It would make fun project. You can also think\nabout, instead of starting from\nsquare, you start",
    "start": "3914030",
    "end": "3919176"
  },
  {
    "text": "with a rectangle of\nsome given aspect ratio. What's the biggest\ncube you can make? That's kind of fun\nbecause in the limit",
    "start": "3919176",
    "end": "3925320"
  },
  {
    "text": "for a super long rectangle,\nyou should do strip wrapping. For a square, we have\nthe right answer.",
    "start": "3925320",
    "end": "3930520"
  },
  {
    "text": "What's the right\nanswer in between? Who knows. ",
    "start": "3930520",
    "end": "3937550"
  },
  {
    "text": "The next thing I wanted to\ntalk about where there's been some recent progress\nis checkerboard folding.",
    "start": "3937550",
    "end": "3945080"
  },
  {
    "start": "3945080",
    "end": "3953630"
  },
  {
    "text": "In lecture one, I showed\nyou this model which I never go anywhere without,\nthe four by four",
    "start": "3953630",
    "end": "3959950"
  },
  {
    "text": "checkerboard folded from one\nsquare paper, white on one side",
    "start": "3959950",
    "end": "3966460"
  },
  {
    "text": "and red on the other. And so I think this is\nprobably the most efficient way to fold a four by\nfour checkerboard.",
    "start": "3966460",
    "end": "3973310"
  },
  {
    "text": "You start with a\nsquare of one size, and you shrink both\ndimensions by two. And you get a four\nby four checkerboard.",
    "start": "3973310",
    "end": "3978540"
  },
  {
    "text": "But we don't know\nif this is the best way to fold a checkerboard. Be nice to know. And this has been\nstudied for a while.",
    "start": "3978540",
    "end": "3988609"
  },
  {
    "text": "And this is not\nthe standard method for folding a checkerboard. But it's actually\npretty efficient",
    "start": "3988610",
    "end": "3994010"
  },
  {
    "text": "which is kind of crazy. So you take a\nsquare, white on one side and brown on the other.",
    "start": "3994010",
    "end": "4000620"
  },
  {
    "text": "You do this accordion pleat. You get a bunch of nice color\nreversals, bunch of squares.",
    "start": "4000620",
    "end": "4006420"
  },
  {
    "text": "And then, you just need to make\na square of squares from that. So general problem is, I want\nto fold an n by n checkerboard",
    "start": "4006420",
    "end": "4013869"
  },
  {
    "text": "from the smallest\npossible square. How big does it have to\nbe as a function of n? And the standard\napproach is-- well,",
    "start": "4013870",
    "end": "4021670"
  },
  {
    "text": "this is the first\nmethod that does it for all n in a\ngeneral simple way. But the practical\nfoldings people",
    "start": "4021670",
    "end": "4028120"
  },
  {
    "text": "have designed, like four by four\nand there are a bunch of eight by eights out there, are little\nmore efficient than this. But they have the\nsame asymptotics",
    "start": "4028120",
    "end": "4034410"
  },
  {
    "text": "which is the perimeter\nof the square you start with has to be about\ntwice n squared",
    "start": "4034410",
    "end": "4040580"
  },
  {
    "text": "to make an n by n checkerboard. And the reason\nthat is, is if you look at the\ncheckerboard pattern,",
    "start": "4040580",
    "end": "4047010"
  },
  {
    "text": "we're trying to get\ncolor reversals along all of these lines between the red\nand the white, brown and white.",
    "start": "4047010",
    "end": "4055369"
  },
  {
    "text": "And the way we're doing\nthat here is we're taking the boundary\nof the paper, and we're mapping it along\nall the color reversals.",
    "start": "4055370",
    "end": "4062710"
  },
  {
    "text": "And if you work out how\nmuch color reversal is there in an n by n thing, it's\nabout twice n squared.",
    "start": "4062710",
    "end": "4069200"
  },
  {
    "text": "And so either your perimeter\nhas to be at least that large if you're going to cover the\ncolor reversals with perimeter.",
    "start": "4069200",
    "end": "4074960"
  },
  {
    "text": "And for a long time, we thought\nthat was the best we could do was to cover color reversals\nwith a perimeter of paper.",
    "start": "4074960",
    "end": "4081089"
  },
  {
    "text": "Of course, know that you\ncan take a square of paper make the perimeter\narbitrarily large. So this was never\nreally a lower bound.",
    "start": "4081090",
    "end": "4088769"
  },
  {
    "text": "We never really knew that\nyou needed 2n squared. The four by four\nachieves 2n squared.",
    "start": "4088770",
    "end": "4095440"
  },
  {
    "text": "We think it's the\nbest for four by four, but we proved last\nyear-- this is",
    "start": "4095440",
    "end": "4100939"
  },
  {
    "text": "with Marty and [INAUDIBLE]\nand Robert Lang-- that you can do better and\nget perimeter about n squared.",
    "start": "4100939",
    "end": "4108734"
  },
  {
    "text": "Now, there are some lower order\nterms there, the order n parts. So this is really only\npractical for large n.",
    "start": "4108735",
    "end": "4113880"
  },
  {
    "text": "I think-- I'll elaborate on\nthat a little more in a moment. But here's the idea.",
    "start": "4113880",
    "end": "4119689"
  },
  {
    "text": "Instead of visiting\nall the boundaries between red and\nwhite squares, I just",
    "start": "4119689",
    "end": "4125318"
  },
  {
    "text": "want to visit the\nsquares themselves. So if I could fold\na, in this case",
    "start": "4125319",
    "end": "4130439"
  },
  {
    "text": "a rectangle paper\ninto this shape which has slits down\nthe sides, and it",
    "start": "4130439",
    "end": "4135528"
  },
  {
    "text": "has these flaps hanging out. Now, you've seen how to make\nflaps super efficiently. You really don't need\nto shrink the paper",
    "start": "4135529",
    "end": "4141549"
  },
  {
    "text": "by very much to\nmake this pattern. Then, you take these guys-- and\neverything is white side up.",
    "start": "4141550",
    "end": "4148778"
  },
  {
    "text": "You take these flaps,\nfold them over. They become brown.",
    "start": "4148779",
    "end": "4155189"
  },
  {
    "text": "And these guys fall over. These fall down. These guys fall up. You can actually make any\ntwo color pixel pattern",
    "start": "4155189",
    "end": "4161330"
  },
  {
    "text": "from this idea. And it will make white squares\non top of the brown surface",
    "start": "4161330",
    "end": "4166710"
  },
  {
    "text": "that you folded. So this is the starting point. You just fold everything over. And you get your checkerboard.",
    "start": "4166710",
    "end": "4173350"
  },
  {
    "text": "And now, essentially, you're\nvisiting each square only once instead of the boundary\nedge for all the squares.",
    "start": "4173350",
    "end": "4178849"
  },
  {
    "text": "And so you end up\nusing only n squared instead of twice n squared. And you can do it if you\nstart from a square also. You just need more flaps.",
    "start": "4178850",
    "end": "4187259"
  },
  {
    "text": "And there's a bunch of\ntabs sticking up here, and a bunch of tabs\nsticking up there.",
    "start": "4187260",
    "end": "4192799"
  },
  {
    "text": "You can fold this again\nsuper efficiently, using all these\nstandard techniques. And then, you make a\ncheckerboard twice as",
    "start": "4192800",
    "end": "4199639"
  },
  {
    "text": "efficient for large n as we've\npreviously thought possible. Now, we still don't know\nwhether this is optimal.",
    "start": "4199640",
    "end": "4207200"
  },
  {
    "text": "We think it is. But we thought so before also. ",
    "start": "4207200",
    "end": "4214340"
  },
  {
    "text": "Who knows? So big open problem is\n[INAUDIBLE] for anything.",
    "start": "4214340",
    "end": "4219410"
  },
  {
    "text": "In terms of actual values\nof n, for n bigger than 16,",
    "start": "4219410",
    "end": "4225270"
  },
  {
    "text": "this method is better than\nthe standard approach.",
    "start": "4225270",
    "end": "4231120"
  },
  {
    "text": "Although if you look just\nat seamless-- so seamless,",
    "start": "4231120",
    "end": "4236756"
  },
  {
    "text": "I didn't mention,\nbut we're going to talk about it\nmore in a moment. When I make a square\nof a checkerboard,",
    "start": "4236756",
    "end": "4241869"
  },
  {
    "text": "I'd really like this to\nbe a single panel of paper not divided into little panels.",
    "start": "4241870",
    "end": "4247200"
  },
  {
    "text": "And like in this checkerboard,\nthis white square has a bunch of seems on it. It's made out of three\nsmaller triangles.",
    "start": "4247200",
    "end": "4254080"
  },
  {
    "text": "And that's not so nice. This method is seamless. You get whole panels making\neach of your squares,",
    "start": "4254080",
    "end": "4260230"
  },
  {
    "text": "so it looks a little prettier. If you look at the best eight\nby eight seamless folding, this beats the best seamless\neight by eight folding.",
    "start": "4260230",
    "end": "4267550"
  },
  {
    "text": "Although it's rather\ndifficult to fold. Hasn't yet been folded. That would be a\ngood project also.",
    "start": "4267550",
    "end": "4272630"
  },
  {
    "text": " Build an actual checkerboard\nwith this method.",
    "start": "4272630",
    "end": "4278010"
  },
  {
    "text": " Questions?",
    "start": "4278010",
    "end": "4284040"
  },
  {
    "text": "Now, I want to move\nto the general case. So I talked a little bit about\ncheckerboards and about cubes.",
    "start": "4284040",
    "end": "4289100"
  },
  {
    "text": "Let's think about\narbitrary polyhedra. And this is the Origamizer. ",
    "start": "4289100",
    "end": "4314340"
  },
  {
    "text": "So Origamizer's\nactually two things. It's a computer program for\nWindows that you can download,",
    "start": "4314340",
    "end": "4320460"
  },
  {
    "text": "and it's an algorithm. And they're not quite the same. So there's original\ncomputer program",
    "start": "4320460",
    "end": "4326989"
  },
  {
    "text": "and Tomohiro Tachi wrote\na couple papers about it. That program does\nnot always work.",
    "start": "4326990",
    "end": "4333020"
  },
  {
    "text": "Doesn't make every polyhedron. It need some finesse to make it\nwork, but it's super efficient.",
    "start": "4333020",
    "end": "4339990"
  },
  {
    "text": "And it's practical. He's made lots of models\nwith it like the bunny you've seen on the poster.",
    "start": "4339990",
    "end": "4345450"
  },
  {
    "text": "There's the algorithm,\nwhich we developed together. And we know it's similar.",
    "start": "4345450",
    "end": "4350520"
  },
  {
    "text": "And we know it always works. But it's a little\nbit less practical.",
    "start": "4350520",
    "end": "4355909"
  },
  {
    "text": "So it's-- theory's always\na little behind practice, let's say. So there's a\npractical thing here.",
    "start": "4355910",
    "end": "4362046"
  },
  {
    "text": "There's also a theoretically\nguaranteed thing here. They're not quite the same,\nbut they're very similar. I'm going to tell you a little.",
    "start": "4362046",
    "end": "4367690"
  },
  {
    "text": "I'll show you both, basically. But the idea is, a\npractical algorithm",
    "start": "4367690",
    "end": "4376160"
  },
  {
    "text": "to fold any polyhedron. ",
    "start": "4376160",
    "end": "4391710"
  },
  {
    "text": "And practical here\nis a bit vague. We don't-- that's not a theorem.",
    "start": "4391710",
    "end": "4396920"
  },
  {
    "text": "We don't know how to define\npractical in mathematics anyway. ",
    "start": "4396920",
    "end": "4404550"
  },
  {
    "text": "It has some fun features,\nthough, mathematically. One is that it's seamless. So for it to be seamless, I\nneed to assume convex faces.",
    "start": "4404550",
    "end": "4414075"
  },
  {
    "text": " So faces are the sides\nof the polyhedron.",
    "start": "4414076",
    "end": "4419130"
  },
  {
    "text": "So like in a cube,\nevery face is a square. Those are convex. And provided all the faces\nare convex, if they're not,",
    "start": "4419130",
    "end": "4425929"
  },
  {
    "text": "you have to cut them\nup into convex pieces. My folding will be\nseamless in that",
    "start": "4425930",
    "end": "4431320"
  },
  {
    "text": "it will be covered by an\nentire piece of paper. There maybe other things\nhidden underneath. But there won't be any\nvisible seems on the top side.",
    "start": "4431320",
    "end": "4441300"
  },
  {
    "text": "So that's nice.  It's also water tight.",
    "start": "4441300",
    "end": "4447055"
  },
  {
    "start": "4447055",
    "end": "4453290"
  },
  {
    "text": "And for this, I have\nan illustration. This is a feature missed\nby the strip method. And if you've always\nfelt like the strip",
    "start": "4453290",
    "end": "4459520"
  },
  {
    "text": "method of making\nanything is cheating, here's a nice formal sense\nin which it's cheating.",
    "start": "4459520",
    "end": "4465220"
  },
  {
    "text": "We didn't realize it until we\nstart talking about Origamizer which does not have\nthis cheating sense.",
    "start": "4465220",
    "end": "4471820"
  },
  {
    "text": "So here I'm trying to\nmake a 3D surface, looks like a saddle\nsurface, by a strip.",
    "start": "4471820",
    "end": "4478590"
  },
  {
    "text": "If I just visited the guys in\nthis nice zigzag order, which I know is possible, I get all\nthese slits down the sides.",
    "start": "4478590",
    "end": "4486020"
  },
  {
    "text": "This thing would not hold water. If you poured water\non it, it would fall through all the cracks.",
    "start": "4486020",
    "end": "4491270"
  },
  {
    "text": "And if I fold it right,\nlike in this picture, there should be\nno seems in here.",
    "start": "4491270",
    "end": "4496690"
  },
  {
    "text": "The square, the boundary of the\nsquares is what's drawn in red. So here the boundary\nof your piece of paper",
    "start": "4496690",
    "end": "4502740"
  },
  {
    "text": "gets mapped all over the place. So it's lots of holes. Here, I want the\nboundary of the paper to be the same as the\nboundary of the surface.",
    "start": "4502740",
    "end": "4511600"
  },
  {
    "text": "So the only place the water\nto run off is at the edge. I mean, obviously, this\nthing is not a closed solid.",
    "start": "4511600",
    "end": "4518690"
  },
  {
    "text": "But if you actually\nmade a cube, you're still going to get some\nedge because the boundary paper has to go somewhere.",
    "start": "4518690",
    "end": "4524090"
  },
  {
    "text": "But if you then\nsewed up the edge, it would totally hold water.",
    "start": "4524090",
    "end": "4530219"
  },
  {
    "text": "So that is the informal\nversion of watertight. The formal version\nis the boundary",
    "start": "4530220",
    "end": "4536470"
  },
  {
    "text": "of the paper maps within\nsome tiny distance",
    "start": "4536470",
    "end": "4547890"
  },
  {
    "text": "epsilon of the boundary\nof the surface, boundary of the polyhedron. ",
    "start": "4547890",
    "end": "4558470"
  },
  {
    "text": "And here, when I say\npolyhedron, I really means something that's\ntopologically a disk.",
    "start": "4558470",
    "end": "4565875"
  },
  {
    "start": "4565875",
    "end": "4572770"
  },
  {
    "text": "Brief topology. This is a disk.",
    "start": "4572770",
    "end": "4578050"
  },
  {
    "text": "This is a disk. This is not a disk.",
    "start": "4578050",
    "end": "4583995"
  },
  {
    "text": " Cube is not a disk.",
    "start": "4583995",
    "end": "4590586"
  },
  {
    "text": "It's a sphere.  This is a disk.",
    "start": "4590586",
    "end": "4596010"
  },
  {
    "text": "A piece of paper is a disk. So really the only things\nyou could fold topologically in a pure sense in a water\ntight sense are disks.",
    "start": "4596010",
    "end": "4603270"
  },
  {
    "text": "You can't glue things together. That's not in the rules. So I can't make--\nI could fold this.",
    "start": "4603270",
    "end": "4609550"
  },
  {
    "text": "But I'd have to have\nan extra seem somewhere in order to make this\nthing just be a disk.",
    "start": "4609550",
    "end": "4614730"
  },
  {
    "text": "I could fold a cube. But I have to have\nsome seem somewhere. Here-- the top-- a square\ngets cut into four pieces",
    "start": "4614730",
    "end": "4622840"
  },
  {
    "text": "in order to make it into a disk. Any higher topology can be\ncut down and made a disk.",
    "start": "4622840",
    "end": "4628590"
  },
  {
    "text": "So this is still universal. But in terms of the\nwater tightness, you have to think\nabout the disk version.",
    "start": "4628590",
    "end": "4634270"
  },
  {
    "text": "AUDIENCE: Erik? PROFESSOR: Yes. AUDIENCE: Even when you go\nback and forth with the script method, you could argue that\nthat was topologically a disk.",
    "start": "4634270",
    "end": "4641886"
  },
  {
    "text": "PROFESSOR: Oh, yeah. Anything, any folding you make\nis still topologically a disk. This is making a disk.",
    "start": "4641887",
    "end": "4646940"
  },
  {
    "text": "But it's doesn't\npreserve the boundary. AUDIENCE: It what? PROFESSOR: It's not\npreserving the boundary. So yeah. Any origami, you're\nstill disk like,",
    "start": "4646940",
    "end": "4653620"
  },
  {
    "text": "and you're watertight\nfor some disk surface. But I want to make this disk\nsurface with that boundary.",
    "start": "4653620",
    "end": "4660520"
  },
  {
    "text": "And watertightness is supposed\nto match the given boundary. But that boundary\nmust form a disk.",
    "start": "4660520",
    "end": "4666270"
  },
  {
    "text": "That's the point. I can't say, oh, there's\nno boundary in a cube. So you have-- so the boundary\nof paper goes nowhere.",
    "start": "4666270",
    "end": "4671490"
  },
  {
    "text": "That's not allowed. So you get to specify it,\nbut it has to be a disk.",
    "start": "4671490",
    "end": "4677891"
  },
  {
    "text": "I'm going to wave\nmy hand some more. There's another feature which\nyou can see in this picture. This is a schematic of what\nOrigamizer would produce which",
    "start": "4677892",
    "end": "4685860"
  },
  {
    "text": "is that there's some\nextra stuff underneath. It's slightly lighter because\nit's on the bottom side there.",
    "start": "4685860",
    "end": "4693019"
  },
  {
    "text": "But you can see\nalong every edge, these are the edges of\nthe actual polyhedron. And then, there's these\nextra little tabs,",
    "start": "4693020",
    "end": "4698650"
  },
  {
    "text": "extra flaps on the underside. This is actually necessary. If you want\nwatertightness, you can't",
    "start": "4698650",
    "end": "4704600"
  },
  {
    "text": "fold exactly that polyhedron. You fold a slightly\nthickened version.",
    "start": "4704600",
    "end": "4709720"
  },
  {
    "text": "But you can keep all\nthose flaps on one side. So if you're making\nsomething like a cube, you can put all the\ngarbage on the inside",
    "start": "4709720",
    "end": "4715835"
  },
  {
    "text": "where no one can see it. So there's another feature\nhere is we get a little extra.",
    "start": "4715835",
    "end": "4722454"
  },
  {
    "start": "4722455",
    "end": "4728200"
  },
  {
    "text": "And that's necessary if\nyou want watertightness. And it's sort of\nthe trick that makes all of this possible\nand efficient and so on.",
    "start": "4728200",
    "end": "4734640"
  },
  {
    "text": " So the high level\nidea of Origamizer",
    "start": "4734640",
    "end": "4740454"
  },
  {
    "text": "is we're going to say,\nthere's all these faces that we need to make.",
    "start": "4740455",
    "end": "4745780"
  },
  {
    "text": "So just plop them down on\nthe piece of paper somewhere. And then, fold away the excess.",
    "start": "4745780",
    "end": "4751389"
  },
  {
    "text": "Get rid of it by tucking. And that excess\npaper is going to get mapped into these\nlittle chunks here.",
    "start": "4751390",
    "end": "4759480"
  },
  {
    "text": "And maybe I'll show you a demo. ",
    "start": "4759480",
    "end": "4768110"
  },
  {
    "text": "So you takes\nsomething like-- this is similar to the\nthing I was showing.",
    "start": "4768110",
    "end": "4774510"
  },
  {
    "text": "And I forgot a mouse. ",
    "start": "4774510",
    "end": "4780610"
  },
  {
    "text": "There are all the\nfaces in the plane. And they've conveniently\nalready been arranged. I can't zoom out because\nI lack scroll wheel.",
    "start": "4780610",
    "end": "4788720"
  },
  {
    "text": "But there's a square\nthat makes the-- yeah,",
    "start": "4788720",
    "end": "4795450"
  },
  {
    "text": "or a multi-touch trackpad. Sorry. And all the faces\nare just there.",
    "start": "4795450",
    "end": "4800900"
  },
  {
    "text": "And then there's\nthis extra stuff. And now I say-- I should\nprobably do this, too.",
    "start": "4800900",
    "end": "4806760"
  },
  {
    "text": "Maybe not. Well, all right. And then I say, crease pattern.",
    "start": "4806760",
    "end": "4815010"
  },
  {
    "text": "Boom. That folds away the excess. And then, just the\nwhite faces, these guys which correspond faces\nover there, are used.",
    "start": "4815010",
    "end": "4824520"
  },
  {
    "text": "And then, you just fold\naway the extra junk. Easy.",
    "start": "4824520",
    "end": "4829940"
  },
  {
    "text": "You want to make a bunny. ",
    "start": "4829940",
    "end": "4835280"
  },
  {
    "text": "This is actually\nan example where it will not work by itself.",
    "start": "4835280",
    "end": "4840985"
  },
  {
    "text": "Because as I said,\nthis algorithm is not quite guaranteed to work. So I'm going to change\nthe boundary little bit",
    "start": "4840985",
    "end": "4849780"
  },
  {
    "text": "by cutting to the ears.",
    "start": "4849780",
    "end": "4855179"
  },
  {
    "text": "And so this is still--\nit was a disk before. It's a disk after because\nthere's this boundary here.",
    "start": "4855180",
    "end": "4860810"
  },
  {
    "text": "But it turns out,\nnow the algorithm will work, assuming\nI didn't mess up. ",
    "start": "4860810",
    "end": "4869070"
  },
  {
    "text": "It's bouncing\naround a little bit. You can see it's\npretty efficient here. There's very tiny gaps\nbetween the triangles.",
    "start": "4869070",
    "end": "4877010"
  },
  {
    "text": "There's actually a little\nbit a violation here. What's happening, which you\ncan see here, is, on the inside",
    "start": "4877010",
    "end": "4883349"
  },
  {
    "text": "are all this extra\nstructure, these flaps. And sometimes they're so\nbig that they actually penetrate the surface.",
    "start": "4883350",
    "end": "4889780"
  },
  {
    "text": "But that can be dealt with by\njust a little bit of cutting, maybe a little more cutting.",
    "start": "4889780",
    "end": "4896730"
  },
  {
    "text": "Not cutting in\nthe literal sense. But we just subdivided\nthese panels into lots of smaller panels.",
    "start": "4896730",
    "end": "4902260"
  },
  {
    "text": "And now, it is valid. This not the design that\nyou've seen on the poster.",
    "start": "4902260",
    "end": "4908310"
  },
  {
    "text": "The design on poster's\nlittle more efficient. I'm not so expert. I'm not so pro that I can\nmake exactly that design.",
    "start": "4908310",
    "end": "4914820"
  },
  {
    "text": "So it's a little inefficient\non the sides here. But you can use this tool\nto make super complicated 3D",
    "start": "4914820",
    "end": "4919840"
  },
  {
    "text": "models. Let me quickly tell you what\ngoes into the algorithm.",
    "start": "4919840",
    "end": "4926110"
  },
  {
    "text": "So the first part\nis to figure out where all these tucks\nare going to go. They lie essentially\nalong angular bisectors",
    "start": "4926110",
    "end": "4933969"
  },
  {
    "text": "on one side of every edge. But at the vertices, things\nare super complicated.",
    "start": "4933970",
    "end": "4939820"
  },
  {
    "text": "And in general, if you have a\nnon-convex surface with tons of material coming together,\nwhat I'd like to do",
    "start": "4939820",
    "end": "4945770"
  },
  {
    "text": "is add lots of little\nflaps on the side. So that when I\nopen it up-- so let",
    "start": "4945770",
    "end": "4951449"
  },
  {
    "text": "me draw you a generic picture. So we have two faces\ncoming together. What I'd like to do\nis add a flap here",
    "start": "4951450",
    "end": "4960680"
  },
  {
    "text": "and a corresponding\none just behind it. So that's sort of a tab. ",
    "start": "4960680",
    "end": "4969110"
  },
  {
    "text": "And I can unfold that and\nthink of some other surface that I'm trying to fold. So I really wanted just\nthose two polygons.",
    "start": "4969110",
    "end": "4976450"
  },
  {
    "text": "But now, I've made some other\nthing which is still a disk. You can add those faces in\nsuch a way that you will have,",
    "start": "4976450",
    "end": "4982980"
  },
  {
    "text": "at most, 360 degrees\nof material everywhere. So even though in\nthe original thing, you had maybe tons of material\ncoming together which you",
    "start": "4982980",
    "end": "4990190"
  },
  {
    "text": "cannot make with real paper,\nyou add in a bunch of tabs along the edges and a few\nmore at the vertices.",
    "start": "4990190",
    "end": "4995480"
  },
  {
    "text": "You can fix things so\nthat the thing is actually makeable from one\nsheet of paper.",
    "start": "4995480",
    "end": "5000940"
  },
  {
    "text": "That's the high level idea. Doing that is a bit detailed. The paper isn't even published. These are some figures from it.",
    "start": "5000940",
    "end": "5006784"
  },
  {
    "text": "But this is some--\nway this is how you resolve a vertex with\nsome triangulation stuff. Each of these corresponds to\na flap in the original thing.",
    "start": "5006784",
    "end": "5015179"
  },
  {
    "text": "And then, this is where\nwe're a little impractical.",
    "start": "5015180",
    "end": "5020216"
  },
  {
    "text": "It doesn't quite\nmatch what we do in practice in the\ncomputer program. But the idea is, you imagine,\nyou have your faces which",
    "start": "5020216",
    "end": "5027300"
  },
  {
    "text": "you want to bring\ntogether somehow. They're distributed in the\npiece of paper somewhere.",
    "start": "5027300",
    "end": "5034690"
  },
  {
    "text": "But you'd really like\nto connect them together when they have matching edges. So this edge might\nbe glued to some edge",
    "start": "5034690",
    "end": "5040570"
  },
  {
    "text": "of some other triangle. And I need to just navigate\nthese little river-like strips",
    "start": "5040570",
    "end": "5047775"
  },
  {
    "text": "to visit one edge\nfrom the other. And we proved that if these\nguys are sufficiently tiny, you can always do that.",
    "start": "5047775",
    "end": "5053270"
  },
  {
    "text": "And of course, in reality,\nyou want to arrange things, so you can do it efficiently\nwith little wastage. But we proved at least it's\npossible with this kind",
    "start": "5053270",
    "end": "5059825"
  },
  {
    "text": "of wiggly path stuff.  So now our picture, the\nthing we're trying to make",
    "start": "5059825",
    "end": "5066849"
  },
  {
    "text": "looks something like that. Where we have-- originally\nit was four triangles, the gray triangles. We added in these extra\nflaps so that it's",
    "start": "5066850",
    "end": "5074350"
  },
  {
    "text": "nice and well-behaved. And each of those flaps we're\ncovering from both sides.",
    "start": "5074350",
    "end": "5080780"
  },
  {
    "text": "And if you think the red\ndiagram-- I'll get this right.",
    "start": "5080780",
    "end": "5088610"
  },
  {
    "text": "The red diagram\ncorresponds to that. It's just been kind of squashed. So there are four\ntriangles, which",
    "start": "5088610",
    "end": "5093620"
  },
  {
    "text": "correspond to the\nfour top flaps. And there's this outer chunk\nwhich corresponds to that flap.",
    "start": "5093620",
    "end": "5102010"
  },
  {
    "text": "And then, you look at the dual\nwhich is the blue diagram. You take that\npicture, and that's",
    "start": "5102010",
    "end": "5107820"
  },
  {
    "text": "how you set up the crease\npattern essentially. So these are the\noriginal four triangles.",
    "start": "5107820",
    "end": "5113430"
  },
  {
    "text": "And then. There's all this\nstuff that represents the structure of that\nthing that we want to make.",
    "start": "5113430",
    "end": "5119230"
  },
  {
    "text": "And then, you just have to fill\nin the creases in the middle. And you do that just\nwith something--",
    "start": "5119230",
    "end": "5124900"
  },
  {
    "text": "this is how you do it\nguaranteed correct. And we saw I had to do\nlots of subdivision here. What I called,\naccidentally, cutting.",
    "start": "5124900",
    "end": "5132030"
  },
  {
    "text": "But just lots of pleats there. Because, essentially,\nthis is the edge.",
    "start": "5132030",
    "end": "5137350"
  },
  {
    "text": "And we want that edge to\nlie in a tiny little tab. So it's got to go up\nand down and up and down and up and down,\naccordion style.",
    "start": "5137350",
    "end": "5143969"
  },
  {
    "text": "And if you do it\nright, all those things will collapse down to\na little tab attached",
    "start": "5143970",
    "end": "5149400"
  },
  {
    "text": "to that edge which is\nalso attach that edge. And they will get joined up. Then, you've got to get rid of\nall this stuff in the middle.",
    "start": "5149400",
    "end": "5155270"
  },
  {
    "text": "And rough idea is,\nif you pack it with-- or I guess you\ncover it with disks so that everything\nis again very tiny.",
    "start": "5155270",
    "end": "5162730"
  },
  {
    "text": "And you fold what's called the\n[INAUDIBLE] with those points. And it works.",
    "start": "5162730",
    "end": "5169020"
  },
  {
    "text": "It's a complicated\nbut very cool. And the paper hopefully will\nbe released later this year",
    "start": "5169020",
    "end": "5176650"
  },
  {
    "text": "finally. And that's Origamizer. And that's efficient\norigami design.",
    "start": "5176650",
    "end": "5182030"
  },
  {
    "start": "5182030",
    "end": "5187104"
  }
]