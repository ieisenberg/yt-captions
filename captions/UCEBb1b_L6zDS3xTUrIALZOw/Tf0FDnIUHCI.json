[
  {
    "start": "0",
    "end": "544000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "6920"
  },
  {
    "text": "offer high-quality educational\nresources for free. To make a donation or view\nadditional materials from",
    "start": "6920",
    "end": "13469"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at MIT.edu.",
    "start": "13470",
    "end": "21260"
  },
  {
    "text": "PROFESSOR: Ladies and gentlemen,\nwelcome to lecture number five. In the previous lectures we\ntalked about the formulation",
    "start": "21260",
    "end": "27630"
  },
  {
    "text": "of the finite element method,\nand we derived already some element matrices. I want to continue that",
    "start": "27630",
    "end": "34200"
  },
  {
    "text": "discussion in the next lecture. However, now I would like to\nspend some time with you and",
    "start": "34200",
    "end": "39770"
  },
  {
    "text": "discuss with you the\nimplementation of the finite element method. I would like to present to\nyou some important aspect",
    "start": "39770",
    "end": "46720"
  },
  {
    "text": "regarding the implementation\nof the procedures that we talked about already. We derived the equilibrium\nequations KU equals R in the",
    "start": "46720",
    "end": "54450"
  },
  {
    "text": "earlier lectures, where R, of\ncourse, contains various contributions due to body load,\nsurface load, and so on.",
    "start": "54450",
    "end": "61770"
  },
  {
    "text": "And we particularly pointed\nout that that the total structural stiffness matrix\nis obtained by summing the",
    "start": "61770",
    "end": "67570"
  },
  {
    "text": "element stiffness matrices, as\nschematically shown here. This we refer to as the direct\nstiffness procedure, and that",
    "start": "67570",
    "end": "76140"
  },
  {
    "text": "direct stiffness procedure is\nalso applicable to the load contributions, where we sum the\nelement load contribution",
    "start": "76140",
    "end": "83490"
  },
  {
    "text": "into a total nodal point load\nvector RB, and similarly for",
    "start": "83490",
    "end": "89159"
  },
  {
    "text": "RS and so on, which then\ntogether make up the total load vector R.",
    "start": "89160",
    "end": "95140"
  },
  {
    "text": "We pointed out that the\nstiffness matrix of a typical element M is obtained via\nthis relationship here.",
    "start": "95140",
    "end": "103900"
  },
  {
    "text": "Notice in this integer, BM is\nthe strain displacement transformation matrix, CM is\nthe stress-strain law, and",
    "start": "103900",
    "end": "111870"
  },
  {
    "text": "here we have Bm transposed. We're integrating this\npart over the total volume of the element.",
    "start": "111870",
    "end": "118240"
  },
  {
    "text": "The RB vector for element M\nwas written as shown here, where FB are the body loads\nper unit volume into the",
    "start": "118240",
    "end": "129190"
  },
  {
    "text": "coordinate directions\nconsidered. Of course, these FB loads are\na function of the coordinate",
    "start": "129190",
    "end": "135620"
  },
  {
    "text": "is the element, and HM\nis the displacement interpolation matrix.",
    "start": "135620",
    "end": "140860"
  },
  {
    "text": "We are once again integrating\nthis product over the total volume of the element.",
    "start": "140860",
    "end": "146320"
  },
  {
    "text": "In both of these equations, we\nhave been dealing with the HM",
    "start": "146320",
    "end": "152960"
  },
  {
    "text": "matrix and the BM matrix. Of course, the BM matrix, as we\ndiscussed, is obtained from",
    "start": "152960",
    "end": "158290"
  },
  {
    "text": "the HM matrix by appropriate\ndifferentiations and so on. Now we pointed out that if we\nhad N number of degrees of",
    "start": "158290",
    "end": "167710"
  },
  {
    "text": "freedom in the total structure,\nthen our HM matrix",
    "start": "167710",
    "end": "172960"
  },
  {
    "text": "is of order k by N. Capital N,\nthe same N that we're talking",
    "start": "172960",
    "end": "178620"
  },
  {
    "text": "about here. k is equal to 1, 2, or 3,\ndepending on whether we are",
    "start": "178620",
    "end": "184790"
  },
  {
    "text": "dealing with a 1, 2, or\n3-dimensional analysis. The BM matrix is of order l by\nN, where l is equal to the",
    "start": "184790",
    "end": "193890"
  },
  {
    "text": "number of strain components\nthat we are including in the element. In a 3-dimensional element, for\nexample, we would have l",
    "start": "193890",
    "end": "202110"
  },
  {
    "text": "being equal to 6, because there\nare 6 strain components. It's important that we talk\nhere about capital N being",
    "start": "202110",
    "end": "209970"
  },
  {
    "text": "equal to the total number\nof degrees of freedom. This way, this KM matrix here is\na matrix of order capital N",
    "start": "209970",
    "end": "219420"
  },
  {
    "text": "by capital N. In other words,\nthis is an N-by-N matrix, and",
    "start": "219420",
    "end": "225130"
  },
  {
    "text": "this RB vector here is a vector\nof length N. It's has N",
    "start": "225130",
    "end": "232480"
  },
  {
    "text": "entries this way, and of\ncourse only one column. Having here an N-by-N matrix and\nan N-by-1 vector here, we",
    "start": "232480",
    "end": "242030"
  },
  {
    "text": "can directly assemble the\nelement contributions into the",
    "start": "242030",
    "end": "248790"
  },
  {
    "text": "global structural matrices\nand vectors. We can do this because this\nmatrix here has the same order",
    "start": "248790",
    "end": "257670"
  },
  {
    "text": "at that matrix here, or each\nof the element matrices has the same order as the total\nstructure matrix.",
    "start": "257670",
    "end": "265810"
  },
  {
    "text": "Well, in practice, this is,\nof course, not efficient. We are dealing with a\nvery large system.",
    "start": "265810",
    "end": "271449"
  },
  {
    "text": "The capital N that we're talking\nabout here might be 2,000, 3,000, 10,000, and it is\nnot efficient to calculate",
    "start": "271450",
    "end": "278979"
  },
  {
    "text": "here in a capital N-by-N matrix\nfor each element,",
    "start": "278980",
    "end": "284640"
  },
  {
    "text": "because we recognized already\nearlier that a large number of",
    "start": "284640",
    "end": "289970"
  },
  {
    "text": "rows and columns are simply\nzeros in this matrix here. In fact, only those rows and\ncolumns contain non-zero",
    "start": "289970",
    "end": "298490"
  },
  {
    "text": "contributions or non-zero\nelements which correspond to the element degrees\nof freedom.",
    "start": "298490",
    "end": "304610"
  },
  {
    "text": "In practice, therefore,\nwe calculate compacted element matrices. We are calculating for element\nM or for typical element M",
    "start": "304610",
    "end": "312760"
  },
  {
    "text": "matrix o order little n-by-n. Notice that I left out\nthe superscript here.",
    "start": "312760",
    "end": "319680"
  },
  {
    "text": "And our RV vector would be an\nn-by-1, lower case n, where n is now the number of element\ndegrees of freedom.",
    "start": "319680",
    "end": "327759"
  },
  {
    "text": "The H matrix that we're using\nand the B matrix that we're using now is a k-by-little n,\nl-by-little n, versus here,",
    "start": "327760",
    "end": "337426"
  },
  {
    "text": "k-by-capital N, l-by-capital\nN. We talk here about the",
    "start": "337426",
    "end": "343710"
  },
  {
    "text": "compacted matrices, and these\ncompacted matrices contain really all the information of\nthese, which we might call",
    "start": "343710",
    "end": "353720"
  },
  {
    "text": "blown-up matrices. Because the non-zero entries in\nthese blown-up matrices are",
    "start": "353720",
    "end": "359770"
  },
  {
    "text": "all contained in the K matrix\nthat I talked about here.",
    "start": "359770",
    "end": "366250"
  },
  {
    "text": "What we need, then, in practice\nis the K matrix, the compacted matrix, with\nconnectivity arrays, in order",
    "start": "366250",
    "end": "373800"
  },
  {
    "text": "to be able to go through\nthis process here. In order to be able to assemble\nthe compacted element",
    "start": "373800",
    "end": "379940"
  },
  {
    "text": "matrices into a global\nstructural stiffness matrix. That is done by a connectivity\narray, as I will be",
    "start": "379940",
    "end": "386750"
  },
  {
    "text": "discussing just now. That is one of the important\naspects that I would like to discuss with you in\nthis lecture.",
    "start": "386750",
    "end": "393430"
  },
  {
    "text": "Well, I have prepared here some\nview graphs as before, and let us look at the first\none here, in which I simply",
    "start": "393430",
    "end": "400960"
  },
  {
    "text": "summarize one through three\nphases that we are going through in a finite\nelement analysis.",
    "start": "400960",
    "end": "406520"
  },
  {
    "text": "The first phase consists of\nthe calculation of the structure matrices K, M,\nC, and R, whichever are",
    "start": "406520",
    "end": "412240"
  },
  {
    "text": "applicable. Here I mean static dynamic\nanalysis, et cetera. The second phase, then, once\nwe have established these",
    "start": "412240",
    "end": "420000"
  },
  {
    "text": "global structural stiffness\nmatrices, consists of the solution of the equilibrium\nequation.",
    "start": "420000",
    "end": "425280"
  },
  {
    "text": "Of course, this solution is\ncarried out differently in static analysis and in dynamic\nanalysis, and I will be",
    "start": "425280",
    "end": "432370"
  },
  {
    "text": "discussing the solution\nprocedures that we're using in later lectures. Once we have solid state\nequilibrium equations for the",
    "start": "432370",
    "end": "439560"
  },
  {
    "text": "displacements, velocities,\naccelerations, we can calculate the element\nstresses. The element stresses are then\nobtained from the strain",
    "start": "439560",
    "end": "446380"
  },
  {
    "text": "displacement matrices and the\nstress-strain law, together with the displacement as a nodal\npoint displacement that",
    "start": "446380",
    "end": "453020"
  },
  {
    "text": "we have evaluated. In this lecture, I really\nwant to discuss with",
    "start": "453020",
    "end": "459430"
  },
  {
    "text": "you only phase one. In other words, how do we\ncalculate the structure matrices whichever\nare applicable?",
    "start": "459430",
    "end": "466950"
  },
  {
    "text": "This phase one can be\nsubdivided, again, into three different steps, and\nI summarize these",
    "start": "466950",
    "end": "473060"
  },
  {
    "text": "on this view graph. The nodal point on element\ninformation are read and/or generated first.",
    "start": "473060",
    "end": "478970"
  },
  {
    "text": "Notice that I also included\ngenerated here, because there is much repetitiveness in many\nfinite element analyses, and",
    "start": "478970",
    "end": "487370"
  },
  {
    "text": "we want to take advantage of\nthat repetitiveness, therefore generate information data\nwhenever is possible.",
    "start": "487370",
    "end": "494220"
  },
  {
    "text": "Then once we had the nodal point\nin element information read into the computer program,\nwe calculate the",
    "start": "494220",
    "end": "500919"
  },
  {
    "text": "element stiffness matrices. The mass and damping matrices,\nif they are applicable, and",
    "start": "500920",
    "end": "506530"
  },
  {
    "text": "equivalent node upon loads. Once we calculated the element\nstiffness matrices, we can",
    "start": "506530",
    "end": "512500"
  },
  {
    "text": "assemble math and damping\nmatrices, of course. Also, we can assemble all of\nthese contributions here into",
    "start": "512500",
    "end": "519479"
  },
  {
    "text": "the global structure matrices,\nK, M, C, and R. And I would",
    "start": "519480",
    "end": "524910"
  },
  {
    "text": "like to discuss this process\nin detail with you. Before going into the details,\nlet me mention that the",
    "start": "524910",
    "end": "531590"
  },
  {
    "text": "procedures which I will be\ndiscussing this you are really the procedures that are\nused in the computer program Sab and ADINA.",
    "start": "531590",
    "end": "539040"
  },
  {
    "text": "But very similar procedures\nare also used in other computer programs.",
    "start": "539040",
    "end": "545440"
  },
  {
    "start": "544000",
    "end": "740000"
  },
  {
    "text": "The first important aspect that\nI like to mention to you is that in a finite element\nanalysis, we have to define",
    "start": "545440",
    "end": "552580"
  },
  {
    "text": "what degrees of freedom\nwe want to admit at the nodal point. In other words, if we have a\nfinite element mesh such as",
    "start": "552580",
    "end": "560370"
  },
  {
    "text": "this one here, I will be talking\nabout that mesh in more detail later.",
    "start": "560370",
    "end": "566260"
  },
  {
    "text": "Then if this is a plane stress\nanalysis, in other words, here we have a cantilever plate,\nsay, subjected to a load",
    "start": "566260",
    "end": "572640"
  },
  {
    "text": "there, if it's a plane stress\nanalysis, I only want to admit certain degrees of freedom\nat each of these nodes.",
    "start": "572640",
    "end": "579629"
  },
  {
    "text": "We have nine nodes here. For example, at these nodes,\nthere shall be no degrees of",
    "start": "579630",
    "end": "585560"
  },
  {
    "text": "freedom admitted, or else I want\nto knock out all of the degrees of freedom to simulate\nthe boundary condition along",
    "start": "585560",
    "end": "592070"
  },
  {
    "text": "here, and at these degrees of\nfreedom here, away from the edge, I have two degrees of\nfreedom to correspond to a",
    "start": "592070",
    "end": "600220"
  },
  {
    "text": "plane stress condition. Well, if I want to do that for\nthis analysis and similarly,",
    "start": "600220",
    "end": "606920"
  },
  {
    "text": "of course, I proceed in other\nanalyses, then I want to deal",
    "start": "606920",
    "end": "612170"
  },
  {
    "text": "with each nodal point in turn. And here I have a typical nodal\npoint i, say, at which",
    "start": "612170",
    "end": "618460"
  },
  {
    "text": "we can have altogether a certain\nnumber of degrees of freedom, the maximum that I\nmight want to admit in a",
    "start": "618460",
    "end": "624339"
  },
  {
    "text": "computer program. Now in Sab and ADINA, we admit\na maximum of 6 degrees of",
    "start": "624340",
    "end": "630029"
  },
  {
    "text": "freedom, however, we\nmight have more. In piping analysis, we might\nhave generalized organization",
    "start": "630030",
    "end": "635070"
  },
  {
    "text": "degrees of freedom, such as we\nare using in ADINA P, and then we would have more degrees of\nfreedom at the nodal point i.",
    "start": "635070",
    "end": "642350"
  },
  {
    "text": "But let's talk now only\nabout 6 degrees of freedom and the maximum.",
    "start": "642350",
    "end": "648649"
  },
  {
    "text": "I denote the first degree of\nfreedom as the U degree of freedom, the second degree of\nfreedom as the V degree of",
    "start": "648650",
    "end": "654510"
  },
  {
    "text": "freedom, the third degree of\nfreedom as the W degree of freedom, the fourth one as the\nrotation about the x-axis,",
    "start": "654510",
    "end": "662940"
  },
  {
    "text": "shown by this vector. Notice that here I'm talking\nabout a vector such as this one here shown.",
    "start": "662940",
    "end": "669400"
  },
  {
    "text": "And theta Y is the fifth degree\nof freedom, theta Z is the sixth degree of freedom.",
    "start": "669400",
    "end": "674850"
  },
  {
    "text": "What we are doing then is to\ndefine a matrix ID, or we call it the ID array, identification\narray, which",
    "start": "674850",
    "end": "683319"
  },
  {
    "text": "has a certain number\nof rows and a certain number also columns.",
    "start": "683320",
    "end": "688709"
  },
  {
    "text": "The number of rows is equal to\nthe maximum number of degrees of freedom that we can\nhave in the analysis.",
    "start": "688710",
    "end": "696259"
  },
  {
    "text": "Now in this particular case,\nwe have 6 as the maximum--",
    "start": "696260",
    "end": "702720"
  },
  {
    "text": "1, 2, 3, 4, 5, 6. The number of nodal points,\nof course, vary",
    "start": "702720",
    "end": "707880"
  },
  {
    "text": "from analysis to analysis. They might be 1,000, 5,000,\nor even more.",
    "start": "707880",
    "end": "715800"
  },
  {
    "text": "For each nodal point, we have 1\ncolumn, therefore 6 entries.",
    "start": "715800",
    "end": "722100"
  },
  {
    "text": "And for each nodal point, we\ncan use these 6 entries to define whether a degree of\nfreedom is active or",
    "start": "722100",
    "end": "730130"
  },
  {
    "text": "non-active. A degree of freedom is active if\nstiffness is put into that",
    "start": "730130",
    "end": "735690"
  },
  {
    "text": "degree of freedom, if stiffness\nis defined in that degree of freedom. Well, let us go through\na specific example.",
    "start": "735690",
    "end": "744759"
  },
  {
    "start": "740000",
    "end": "1012000"
  },
  {
    "text": "Here we have a cantilever\nanalysis, cantilever plate analysis, and here we have a\n2-by-2 elements idealization",
    "start": "744760",
    "end": "757390"
  },
  {
    "text": "of that plate, containing\naltogether 4 elements. It's a plane stress analysis.",
    "start": "757390",
    "end": "763860"
  },
  {
    "text": "The loading on this plate is\nwhile at temperature 100 degrees Celsius top, 70 degrees\nCelsius bottom.",
    "start": "763860",
    "end": "772680"
  },
  {
    "text": "And there might be a\nconcentrated load, such as shown here.",
    "start": "772680",
    "end": "778620"
  },
  {
    "text": "Et cetera. But let us now focus our\nattention on, how do we generate the element matrices,\nand how do we assemble these",
    "start": "778620",
    "end": "786079"
  },
  {
    "text": "element matrices into the\nglobal structure matrix? Well, this is a 2-by-2 element\nidealization .",
    "start": "786080",
    "end": "793270"
  },
  {
    "text": "We notice the following. We notice that we have\naltogether 9 nodal points--",
    "start": "793270",
    "end": "803779"
  },
  {
    "text": "and let me use the\npointer here. 1, 2, 3, 4, 5, 6, 7,\n8, 9 nodal points--",
    "start": "803780",
    "end": "814350"
  },
  {
    "text": "that with these 9\nnodal points, we have defined 4 elements--",
    "start": "814350",
    "end": "821110"
  },
  {
    "text": "element 1, 2, 3, 4-- that element 1 and 2 have the\nsame material properties, and",
    "start": "821110",
    "end": "833699"
  },
  {
    "text": "element 3 and 4 have the same\nmaterial properties. Notice the Young's modulus is\nhere 2 times 10 to the sixth,",
    "start": "833700",
    "end": "840870"
  },
  {
    "text": "whereas it is 1 times 10 to the\nsixth for element 1 and 2.",
    "start": "840870",
    "end": "846850"
  },
  {
    "text": "Therefore, we will have to\ndefine two sets of material properties-- one set for these elements,\nand one",
    "start": "846850",
    "end": "853430"
  },
  {
    "text": "set for these elements. We also notice that since\nwe have 9 nodal points",
    "start": "853430",
    "end": "860130"
  },
  {
    "text": "altogether, we could have a\nmaximum of 18 degrees of freedom in a plane stress\nanalysis, because there are",
    "start": "860130",
    "end": "868280"
  },
  {
    "text": "two degrees of freedom in a\nplane stress analysis for each nodal point.",
    "start": "868280",
    "end": "873570"
  },
  {
    "text": "However, these 18, of course,\nrepresent the absolute maximum, which in a static\nanalysis, we could not use,",
    "start": "873570",
    "end": "881550"
  },
  {
    "text": "because we would have to also\nconstrain the element mesh sufficiently to obtain a\nsolution, to have a stable",
    "start": "881550",
    "end": "888089"
  },
  {
    "text": "structure, in other words, while\nthe constraints here are that at these nodal points, that\nall displacement shall be",
    "start": "888090",
    "end": "895379"
  },
  {
    "text": "equal to 0. Now let us look at our ID array,\nthe ID array which I mentioned right here.",
    "start": "895380",
    "end": "902120"
  },
  {
    "text": "We will have, in other words,\n9 columns here, because we have 9 nodal points, and we have\nour 6 rows here, because",
    "start": "902120",
    "end": "911470"
  },
  {
    "text": "we have a maximum of 6\ndegrees of freedom. ",
    "start": "911470",
    "end": "916930"
  },
  {
    "text": "An active degree of freedom we\ndenote by a 0 in this matrix.",
    "start": "916930",
    "end": "923510"
  },
  {
    "text": "A non-active degree of\nfreedom we denote by 1 in this ID matrix.",
    "start": "923510",
    "end": "928790"
  },
  {
    "text": "We notice the following. If I put here the number of\nnodal points along, we have 1,",
    "start": "928790",
    "end": "934802"
  },
  {
    "text": "2, 3, 4, 5, 6, 7, 8, 9.",
    "start": "934802",
    "end": "939970"
  },
  {
    "text": "Of course, the degrees of\nfreedom here are U, V, W,",
    "start": "939970",
    "end": "945009"
  },
  {
    "text": "theta X, theta Y, theta Z. Now, notice that what we are\nsaying is that only for nodal",
    "start": "945010",
    "end": "953550"
  },
  {
    "text": "points 4, 5, 6, 7, 8, and 9,\nwe have these as active",
    "start": "953550",
    "end": "958740"
  },
  {
    "text": "degrees of freedom. In other words, At nodal point\n4, 5, 6, 7, 8, 9, we have",
    "start": "958740",
    "end": "969759"
  },
  {
    "text": "active degrees of freedom. These will be active\ndegrees of freedom. ",
    "start": "969760",
    "end": "979230"
  },
  {
    "text": "And let me finish these\nhere too on this side. So we have these as active\ndegrees of freedom.",
    "start": "979230",
    "end": "986610"
  },
  {
    "text": "These degrees of freedom and on\nthis side are interactive, because their constraint.",
    "start": "986610",
    "end": "994000"
  },
  {
    "text": "They are no displacement. Of course, stiffness is coming\ninto these degrees of freedom",
    "start": "994000",
    "end": "999620"
  },
  {
    "text": "through, yes. So we could have made these\nactive degrees of freedom. However, in addition, we also\nknow that the displacements",
    "start": "999620",
    "end": "1006360"
  },
  {
    "text": "are 0 there, so we make them\ninactive on that basis. ",
    "start": "1006360",
    "end": "1013470"
  },
  {
    "start": "1012000",
    "end": "1141000"
  },
  {
    "text": "The result, then, is that we\nhave to read into the ID array as shown here. This is the typical reading\nthat you would use in the",
    "start": "1013470",
    "end": "1021680"
  },
  {
    "text": "ADINA computer program. Once in all of those entries\nhere, and zeros there.",
    "start": "1021680",
    "end": "1027790"
  },
  {
    "text": "Now the program knows that\ncorresponding to these zeros here, we will have to set\nup element equations.",
    "start": "1027790",
    "end": "1036869"
  },
  {
    "text": "In other words, actually, we\nhave to set up for each zero one equation, one global\ndegree of freedom.",
    "start": "1036869",
    "end": "1044849"
  },
  {
    "text": "And the program that\ngoes through this process as follows. It searches through--",
    "start": "1044849",
    "end": "1052130"
  },
  {
    "text": "let me go once more back-- through these elements of the\nID matrix product that you",
    "start": "1052130",
    "end": "1059820"
  },
  {
    "text": "have been feeding into\nthe program. It searches through it, and\nreplaces each one by a zero,",
    "start": "1059820",
    "end": "1066050"
  },
  {
    "text": "going down column-wise, and\neach zero by a number. It starts with 1 and goes on\nconsecutively to the maximum",
    "start": "1066050",
    "end": "1075650"
  },
  {
    "text": "number of zeros that\nit encounters. The final result, then,\nis this one.",
    "start": "1075650",
    "end": "1080930"
  },
  {
    "text": "Maybe I can just put it on top,\nonly to signify here that",
    "start": "1080930",
    "end": "1086340"
  },
  {
    "text": "we had all of these now zeros\nwhich we are ones before, and some numbers in this\ncorner here where",
    "start": "1086340",
    "end": "1092690"
  },
  {
    "text": "we had zeros before. Let me take the bottom view\ngraph out, and so now we see",
    "start": "1092690",
    "end": "1098240"
  },
  {
    "text": "what has happened. We have 0s everywhere here and\nequation numbers up here,",
    "start": "1098240",
    "end": "1105710"
  },
  {
    "text": "which have been generated by\ngoing through the original columns of the ID array from top\nto bottom, and replacing",
    "start": "1105710",
    "end": "1114770"
  },
  {
    "text": "the zeros by numbers-- 1, 2-- these were all ones,\nwe put zeros here--",
    "start": "1114770",
    "end": "1120220"
  },
  {
    "text": "3, 4-- put zeros here-- 5, 6-- put zeros here-- et cetera.",
    "start": "1120220",
    "end": "1125840"
  },
  {
    "text": "Now, these are the degrees of\nfreedom that the structure will actually have, and they are\ndefined because stiffness",
    "start": "1125840",
    "end": "1134470"
  },
  {
    "text": "is coming into each of these\ndegrees of freedom from the plane stress element, and we\nknow them to be non-zero.",
    "start": "1134470",
    "end": "1142059"
  },
  {
    "start": "1141000",
    "end": "1203000"
  },
  {
    "text": "In other words, if we look at\nour final element idealization",
    "start": "1142060",
    "end": "1147640"
  },
  {
    "text": "again, we find that these\nvectors here are active",
    "start": "1147640",
    "end": "1153120"
  },
  {
    "text": "degrees of freedom, which\nI pointed out earlier. In fact, this is here degree of\nfreedom 1, this is degree",
    "start": "1153120",
    "end": "1160890"
  },
  {
    "text": "of freedom 2, which is at nodal\npoint 4, and here we",
    "start": "1160890",
    "end": "1166910"
  },
  {
    "text": "have degree of freedom 3, and\nthen 4, at nodal point 5. And those entries are\njust those here.",
    "start": "1166910",
    "end": "1175000"
  },
  {
    "text": "At nodal point 4, remember\nnodal points along here. So this is nodal point 4.",
    "start": "1175000",
    "end": "1180220"
  },
  {
    "text": "We have the first and second\ndegree of freedom of the structural model. At nodal point 5, we have the\nthird and fourth degree of",
    "start": "1180220",
    "end": "1187960"
  },
  {
    "text": "freedom of the total\nstructural model. Et cetera. Well, this is an important\naspect.",
    "start": "1187960",
    "end": "1194110"
  },
  {
    "text": "Let us now go on\nto some further aspects of the analyses. We will use this later on, once\nagain, when we set up the",
    "start": "1194110",
    "end": "1201880"
  },
  {
    "text": "connectivity arrays\nof the element. Here is our finite element\nidealization, once again.",
    "start": "1201880",
    "end": "1208169"
  },
  {
    "start": "1203000",
    "end": "1279000"
  },
  {
    "text": "And the next step now is to read\nin also the coordinates of all the elements and\nthe temperatures",
    "start": "1208170",
    "end": "1214140"
  },
  {
    "text": "at the nodal points. Now with this coordinate system,\nx, y, and z, as shown",
    "start": "1214140",
    "end": "1221230"
  },
  {
    "text": "here, the coordinate of all of\nthese nodal points can be read indirectly.",
    "start": "1221230",
    "end": "1226400"
  },
  {
    "text": "You can read them up. if you\nknow the length from here to there, being 60 centimeters and\nbeing from here to there",
    "start": "1226400",
    "end": "1232470"
  },
  {
    "text": "40 centimeters, surely all the\ncoordinates can be defined. And knowing that the temperature\nis given here at",
    "start": "1232470",
    "end": "1238610"
  },
  {
    "text": "70 degrees Celsius and 100\ndegrees Celsius there, and there's a linear variation\nfrom top to bottom in",
    "start": "1238610",
    "end": "1245110"
  },
  {
    "text": "temperature, we directly also\ndefine the temperature array, as shown here. These are the temperatures at\nnodal point 1 to 9, x, y, z",
    "start": "1245110",
    "end": "1254160"
  },
  {
    "text": "coordinates at nodal\npoint 1 to 9. Of course, this is input. You have to input this to the\ncomputer program, just the",
    "start": "1254160",
    "end": "1263769"
  },
  {
    "text": "same way as you have to\ninput to the computer program the ID array. But then the computer program\nfigures out what coordinates",
    "start": "1263770",
    "end": "1275230"
  },
  {
    "text": "of these arrays pertain to\nthe specific elements.",
    "start": "1275230",
    "end": "1280290"
  },
  {
    "start": "1279000",
    "end": "1327000"
  },
  {
    "text": "And that is done in\nthe following way. Once again, here is our\nelement idealization.",
    "start": "1280290",
    "end": "1286610"
  },
  {
    "text": "Now we have read in the fact\nthat we want to have this as the first 2 degrees\nof freedom, then",
    "start": "1286610",
    "end": "1296010"
  },
  {
    "text": "this degree of freedom. That we have already all\nestablished, that we have these degrees of freedom in\nthe finite element mesh.",
    "start": "1296010",
    "end": "1302360"
  },
  {
    "text": "The program knows\nthat already. That it does know via the\nreading of the information in",
    "start": "1302360",
    "end": "1307750"
  },
  {
    "text": "the ID array. We also have all the coordinates\nof the nodal points, and we also have\nthe temperatures of",
    "start": "1307750",
    "end": "1315049"
  },
  {
    "text": "all the nodal points. What we still have to now read\nin is how an element is",
    "start": "1315050",
    "end": "1320660"
  },
  {
    "text": "connected to the various nodal\npoints given in the structure. And that is the next\nimportant reading.",
    "start": "1320660",
    "end": "1328659"
  },
  {
    "start": "1327000",
    "end": "1424000"
  },
  {
    "text": "Here for element 1, we know that\nthe node numbers are 5, 2, 1, and 4, and the material\nproperty is number 1.",
    "start": "1328660",
    "end": "1338090"
  },
  {
    "text": "Let's go back once more. For element 1, that is, this\nelement here, I want to use",
    "start": "1338090",
    "end": "1344190"
  },
  {
    "text": "this material property\nset, and I call that property set number 1. Property set number 1,\nalso, for element 2.",
    "start": "1344190",
    "end": "1351660"
  },
  {
    "text": "But property set number 2 for\nelements 3 and for element 4,",
    "start": "1351660",
    "end": "1357120"
  },
  {
    "text": "because these element\nproperties are different from these. Well, so element one\nhas nodal points--",
    "start": "1357120",
    "end": "1364650"
  },
  {
    "text": "I use the following\nconvention-- 5, 2, 1, 4. I go counterclockwise around.",
    "start": "1364650",
    "end": "1371080"
  },
  {
    "text": "So locally, I'm thinking of a\ncoordinate system lying in the",
    "start": "1371080",
    "end": "1376350"
  },
  {
    "text": "elements, such as shown here. And this one here being in the\npositive quadrant is my first",
    "start": "1376350",
    "end": "1383370"
  },
  {
    "text": "nodal point that I assign\nto the element. This is, therefore, the\nlocal nodal point 1.",
    "start": "1383370",
    "end": "1391500"
  },
  {
    "text": "Let's put another little\npicture here. This is a local nodal point 1. That's local nodal point 2.",
    "start": "1391500",
    "end": "1397650"
  },
  {
    "text": "That's local nodal point 3. That's local nodal point 4 for\nany one of these elements.",
    "start": "1397650",
    "end": "1403630"
  },
  {
    "text": "The local nodal point 1\ncorresponds to the global nodal point 5.",
    "start": "1403630",
    "end": "1408900"
  },
  {
    "text": "2 corresponds to 2. 3 here corresponds to 1 there, 4\nhere corresponds to 4 there.",
    "start": "1408900",
    "end": "1416890"
  },
  {
    "text": "I say, therefore, that the node\nnumbers of the element are 5, 2, 1, 4.",
    "start": "1416890",
    "end": "1424380"
  },
  {
    "text": "The element number 2, then, with\nthis convention that I'm using, has nodal point\n6, 3, 2, 5.",
    "start": "1424380",
    "end": "1434899"
  },
  {
    "text": "Well, let's look here. We have here 6, 3, 2, 5. Also properties at 1.",
    "start": "1434900",
    "end": "1440320"
  },
  {
    "text": "Let's go on to element\nnumber 3. Here with this convention,\nonce again, we have 8, 5, 4, 7.",
    "start": "1440320",
    "end": "1447770"
  },
  {
    "text": " And now, however, the material\nproperty set number 2.",
    "start": "1447770",
    "end": "1455179"
  },
  {
    "text": "Et cetera. Now, once the program knows\nthese nodal point numbers, it",
    "start": "1455180",
    "end": "1463270"
  },
  {
    "text": "can figure out a connectivity\narray. And that is done using the ID\narray that the program has",
    "start": "1463270",
    "end": "1473050"
  },
  {
    "text": "already established. It's being done in the\nfollowing way. Remember that, once again, nodal\npoint 1, 2, 3, 4, 5, 6,",
    "start": "1473050",
    "end": "1485460"
  },
  {
    "text": "7, 8, and 9 correspond\nto these columns?",
    "start": "1485460",
    "end": "1490950"
  },
  {
    "text": "Now, we know from this\ninformation here that element 1 couples into nodal\npoint 5, 2, 1, 4.",
    "start": "1490950",
    "end": "1500490"
  },
  {
    "text": "Let's keep that in mind, now, 5,\n2, 1, 4, and circle here 5,",
    "start": "1500490",
    "end": "1507470"
  },
  {
    "text": "2, 1, and 4, where this one here\nis the first local nodal",
    "start": "1507470",
    "end": "1514720"
  },
  {
    "text": "point, this is the second local\nnodal point, this is the",
    "start": "1514720",
    "end": "1521620"
  },
  {
    "text": "third local nodal point,\nand that is the fourth local nodal point.",
    "start": "1521620",
    "end": "1526950"
  },
  {
    "text": "That's important. Well, if we look at that\ninformation, then, recognizing",
    "start": "1526950",
    "end": "1533200"
  },
  {
    "text": "that the local nodal point 1\ncorresponds to the global nodal point 5, we have to use\nthese two equation numbers",
    "start": "1533200",
    "end": "1544440"
  },
  {
    "text": "corresponding to the\nfirst nodal points. Let's put a little\npicture up here.",
    "start": "1544440",
    "end": "1551330"
  },
  {
    "text": "You see what I'm saying\nhere is the following. If this is local nodal point\n1, that's 2, that's 3, and",
    "start": "1551330",
    "end": "1557980"
  },
  {
    "text": "that's 4, and if I know that\nthis local nodal point with",
    "start": "1557980",
    "end": "1563900"
  },
  {
    "text": "degrees of freedom, let's call\nthem little u and little v,",
    "start": "1563900",
    "end": "1569170"
  },
  {
    "text": "corresponds really to the global\npoint 5 with degrees of",
    "start": "1569170",
    "end": "1574830"
  },
  {
    "text": "freedom 3 and 4, then this u\nmust correspond to 3 here, and",
    "start": "1574830",
    "end": "1582080"
  },
  {
    "text": "that v must correspond\nto that 4 here. In other words, our connectivity\narray which we",
    "start": "1582080",
    "end": "1590800"
  },
  {
    "text": "will be using is established\nas follows. For our compact matrix, we have\n8 rows and columns, and",
    "start": "1590800",
    "end": "1600670"
  },
  {
    "text": "for our actual matrix that we\nwant to add into the structure matrix, we notice that what we\nwant to do is take the first",
    "start": "1600670",
    "end": "1611240"
  },
  {
    "text": "row and column here, and add\nit into the third row and column of the structure\nmatrix.",
    "start": "1611240",
    "end": "1618509"
  },
  {
    "text": "The first one here, u here,\ncorresponds to 3 here.",
    "start": "1618510",
    "end": "1624990"
  },
  {
    "text": "The second one here,\nwhich is the v, corresponds to the 4 here.",
    "start": "1624990",
    "end": "1631360"
  },
  {
    "text": "In other words, the first\ndegree of freedom of the element corresponds to the\nthird in the structure. The second degree of freedom of\nthe element corresponds to",
    "start": "1631360",
    "end": "1639200"
  },
  {
    "text": "the fourth in the structure. And that is shown right here. The first one corresponds to\nthe third in the structure.",
    "start": "1639200",
    "end": "1646690"
  },
  {
    "text": "The second one in the compact\nelement stiffness matrix corresponds to the\nfourth degree of",
    "start": "1646690",
    "end": "1652460"
  },
  {
    "text": "freedom in the structure. Now if we go onto the second\nlocal nodal point, we see",
    "start": "1652460",
    "end": "1660880"
  },
  {
    "text": "zeros here, and these zeros\ngo directly into the connectivity array.",
    "start": "1660880",
    "end": "1666670"
  },
  {
    "text": "The third one has also zeros\nhere, and the fourth one has 1 and 2. So our connectivity array, then,\nproceeding in the same",
    "start": "1666670",
    "end": "1674890"
  },
  {
    "text": "way, is shown as given here. These are the degrees of freedom\nat the first nodal",
    "start": "1674890",
    "end": "1681920"
  },
  {
    "text": "point, this first local\nnodal point. These are the degrees of freedom\nat the second local",
    "start": "1681920",
    "end": "1688690"
  },
  {
    "text": "nodal point. These are the degrees of freedom\nat the third local nodal point, and these are the\ndegrees of freedom at the",
    "start": "1688690",
    "end": "1694630"
  },
  {
    "text": "fourth local nodal point. In other words, what\nI'm saying here really is the following.",
    "start": "1694630",
    "end": "1699870"
  },
  {
    "text": "You see this here is\nthe third degree of freedom in the structure.",
    "start": "1699870",
    "end": "1705490"
  },
  {
    "text": "This is the fourth degree of\nfreedom in the structure. There is no degree of freedom\nhere because we",
    "start": "1705490",
    "end": "1710659"
  },
  {
    "text": "have a support there. That is that zero\nand that zero. There is no degree of freedom\nhere because we",
    "start": "1710660",
    "end": "1717270"
  },
  {
    "text": "have a support here. 0, 0. At this node, we are talking\nabout the first degree of",
    "start": "1717270",
    "end": "1723980"
  },
  {
    "text": "freedom here and the second\ndegree of freedom here of this structure, and that\nis given here.",
    "start": "1723980",
    "end": "1729940"
  },
  {
    "text": "So if I have established the\n8-by-8 stiffness matrix of the element, I can directly use that\n8-by-8 stiffness matrix",
    "start": "1729940",
    "end": "1739070"
  },
  {
    "text": "with this connectivity array,\nand assemble the appropriate contributions from that 8-by-8\nmatrix into the global",
    "start": "1739070",
    "end": "1746580"
  },
  {
    "text": "structure stiffness matrix. The same process that\nis applied to all",
    "start": "1746580",
    "end": "1753289"
  },
  {
    "text": "of the other elements-- let's look at one more\nelement here.",
    "start": "1753290",
    "end": "1758320"
  },
  {
    "text": "And element 2, as we pointed out\nearlier, has nodal point 6, 3, 2, 5.",
    "start": "1758320",
    "end": "1764880"
  },
  {
    "text": "Well, what we then have to do\nis look at our ID array. 6, 3, 2, 5.",
    "start": "1764880",
    "end": "1772300"
  },
  {
    "text": "And what we are seeing\nimmediately is that we have a 5, 6 here and a 3, 4 here.",
    "start": "1772300",
    "end": "1779340"
  },
  {
    "text": "So the first two entries in the\nelement array should be 5, 6, and the last two entries\nshould be 3, 4, because we",
    "start": "1779340",
    "end": "1784820"
  },
  {
    "text": "have all these zeros there. And indeed, if we look at\nour LM vector here,",
    "start": "1784820",
    "end": "1790590"
  },
  {
    "text": "that's what we obtain. Similarly, we proceed for\nthe other elements. This is the connectivity array\nfor element 2, for element 3,",
    "start": "1790590",
    "end": "1801610"
  },
  {
    "text": "and for element 4. We can use that now to assemble\nthe element stiffness matrices into the global\nstructural stiffness matrix.",
    "start": "1801610",
    "end": "1810080"
  },
  {
    "text": "Of course, the program figures\nthese out automatically from the ID array and from you having\nput into the program",
    "start": "1810080",
    "end": "1820289"
  },
  {
    "text": "the nodal points of\neach element. Let us look now at how do we\nactually deal with the",
    "start": "1820290",
    "end": "1828730"
  },
  {
    "start": "1823000",
    "end": "2191000"
  },
  {
    "text": "stiffness matrix? Well, if we look at a typical\nstiffness matrix--",
    "start": "1828730",
    "end": "1835040"
  },
  {
    "text": "this might be a typical\none here-- we have this pattern. Of course the matrix is\nsymmetric, and what we have",
    "start": "1835040",
    "end": "1844210"
  },
  {
    "text": "are some non-zero elements\nclustered to the diagonal, and",
    "start": "1844210",
    "end": "1849760"
  },
  {
    "text": "some 0 elements out there. It is convenient at this point\nto define a half bandwidth of",
    "start": "1849760",
    "end": "1857480"
  },
  {
    "text": "the stiffness matrix. That half bandwidth is defined\nin the following way.",
    "start": "1857480",
    "end": "1862720"
  },
  {
    "text": "We ignore, first of all, the\ndiagonal element, and then we",
    "start": "1862720",
    "end": "1869970"
  },
  {
    "text": "identify the furthest off\ndiagonal element from that",
    "start": "1869970",
    "end": "1875049"
  },
  {
    "text": "diagonal element. The furthest one from the\ndiagonal element defines the half bandwidth of the matrix.",
    "start": "1875050",
    "end": "1882190"
  },
  {
    "text": "mK is the half bandwidth\nof the matrix. In some literature, we also\nrefer to the half bandwidth of",
    "start": "1882190",
    "end": "1889549"
  },
  {
    "text": "the matrix as mK plus 1. But then remember that the total\nbandwidth off the matrix",
    "start": "1889550",
    "end": "1895950"
  },
  {
    "text": "is simply 2 mK plus 1, because\nthe diagonal element only occurs once.",
    "start": "1895950",
    "end": "1901830"
  },
  {
    "text": "Another way of looking at the\ndefinition of the half bandwidth is as follows.",
    "start": "1901830",
    "end": "1907230"
  },
  {
    "text": "If we go from the diagonal up\nin each column, we will come",
    "start": "1907230",
    "end": "1912890"
  },
  {
    "text": "to an element above which\nonly zeros are. Like in this case, for example,\nthere are only zeros",
    "start": "1912890",
    "end": "1920730"
  },
  {
    "text": "above K 4, 5. And we do the same for each\nall of the columns, and we",
    "start": "1920730",
    "end": "1928105"
  },
  {
    "text": "define the last non-zero\nelement, this one here, above",
    "start": "1928105",
    "end": "1935010"
  },
  {
    "text": "which all elements are\nzero, as the skyline. So the skyline is defined\nas shown here.",
    "start": "1935010",
    "end": "1941520"
  },
  {
    "text": " This is the skyline\nof the matrix.",
    "start": "1941520",
    "end": "1946779"
  },
  {
    "text": "The half bandwidth, then, is\nequal to the maximum column height minus 1.",
    "start": "1946780",
    "end": "1954100"
  },
  {
    "text": "In this particular case, you see\nthe maximum column height is 1, 2, 3, 4, which\nwe have here also--",
    "start": "1954100",
    "end": "1959690"
  },
  {
    "text": "1, 2, 3, 4. We subtract 1 and we\nget mK equal to 3.",
    "start": "1959690",
    "end": "1965860"
  },
  {
    "text": "So this is the pattern that we\nobserve in an actual finite element analysis.",
    "start": "1965860",
    "end": "1971289"
  },
  {
    "text": "What we would like to achieve is\nthat the half bandwidth is as small as possible, because\nthen we know that our",
    "start": "1971290",
    "end": "1979389"
  },
  {
    "text": "numerical operations\nis a solution of KU equals R are small.",
    "start": "1979390",
    "end": "1984730"
  },
  {
    "text": "Well, the actual storage that\nwe're using, however, is a little different.",
    "start": "1984730",
    "end": "1991200"
  },
  {
    "text": "Namely, it is effective to store\nthe total information as",
    "start": "1991200",
    "end": "1996559"
  },
  {
    "text": "a one-dimensional array. And the storage, then, is\ncarried out as follows.",
    "start": "1996560",
    "end": "2001640"
  },
  {
    "text": "Notice that in a one-dimensional\narray, I am using now the following\nconvention.",
    "start": "2001640",
    "end": "2007179"
  },
  {
    "text": "This here is the first element\nin the one-dimensional array. The second element is this\nk22, which is a2.",
    "start": "2007180",
    "end": "2015440"
  },
  {
    "text": "The third element is k12. The fourth element is\nk33, and so on.",
    "start": "2015440",
    "end": "2022360"
  },
  {
    "text": "In other words, the A vector\nhere, being a one-dimensional vector, stores all of the\ninformation here in a",
    "start": "2022360",
    "end": "2031840"
  },
  {
    "text": "one-dimensional order, where we\nsimply go from the diagonal upwards to store all\nof the elements.",
    "start": "2031840",
    "end": "2039890"
  },
  {
    "text": "So a6 is the diagonal element\nthat is the fourth column",
    "start": "2039890",
    "end": "2045790"
  },
  {
    "text": "here, a6 corresponds to k44, and\na7 then stores this one,",
    "start": "2045790",
    "end": "2051199"
  },
  {
    "text": "a8 stores that one, a9\nstores that one. Notice that we do carry\nalong these zeros.",
    "start": "2051199",
    "end": "2056290"
  },
  {
    "text": "And the reason for it is that\nwhen we do perform our solution of the equation, in\ngeneral, but not always, in",
    "start": "2056290",
    "end": "2062480"
  },
  {
    "text": "general, this zero becomes\na non-zero element, and therefore it is effective to\njust carry it along, because",
    "start": "2062480",
    "end": "2069540"
  },
  {
    "text": "we will have to later on\nstore some non-zero information in it.",
    "start": "2069540",
    "end": "2074638"
  },
  {
    "text": "Notice that this is the total\narray, and we have altogether,",
    "start": "2074639",
    "end": "2080510"
  },
  {
    "text": "in this particular case, 21\nentries here, in addition to",
    "start": "2080510",
    "end": "2086449"
  },
  {
    "text": "storing the stiffness matrix in\nthis one-dimensional array. However, we also have to have\nan identification array that",
    "start": "2086449",
    "end": "2095669"
  },
  {
    "text": "tells us which elements in this\none-dimensional array are diagonal elements.",
    "start": "2095670",
    "end": "2102160"
  },
  {
    "text": "Of course, here from this\npicture, we see immediately that these are the diagonal\nelements of",
    "start": "2102160",
    "end": "2107200"
  },
  {
    "text": "the stiffness matrix. However, imagine that we\nsimply store A as a",
    "start": "2107200",
    "end": "2113210"
  },
  {
    "text": "one-dimensional array\n[? alone, ?] then we would have to know that\na2 corresponds to the",
    "start": "2113210",
    "end": "2119309"
  },
  {
    "text": "second diagonal element, a6\ncorresponds to the fourth diagonal element, and so on.",
    "start": "2119310",
    "end": "2124800"
  },
  {
    "text": "And that is done by\nas a MAXA array. You see, MAXA here stores\nthe addresses of",
    "start": "2124800",
    "end": "2130460"
  },
  {
    "text": "the diagonal elements. Having MAXA, the array MAXA, and\nhaving the one-dimensional",
    "start": "2130460",
    "end": "2138980"
  },
  {
    "text": "array that contains all the\nelements of the stiffness matrix strung out in one\ndimension, we can access any",
    "start": "2138980",
    "end": "2147360"
  },
  {
    "text": "element in here during\nthe solution of the equation as is required.",
    "start": "2147360",
    "end": "2152730"
  },
  {
    "text": " Let me mention one\nmore point--",
    "start": "2152730",
    "end": "2159100"
  },
  {
    "text": "that the length of this array\nhere is not equal to n, but",
    "start": "2159100",
    "end": "2164297"
  },
  {
    "text": "it's n plus 1, because this last\nelement here gives us a",
    "start": "2164297",
    "end": "2169820"
  },
  {
    "text": "diagonal element that would\noccur out here. So 22 really is this diagonal\nelement, which we really don't",
    "start": "2169820",
    "end": "2178450"
  },
  {
    "text": "have, of course. But when we subtract 1 from it,\nwe get this element here, or the address of this element\nhere, and then we know how",
    "start": "2178450",
    "end": "2186170"
  },
  {
    "text": "long this column is. We have to know how long\nthis column is. And for that reason, we need\nthis last entry here.",
    "start": "2186170",
    "end": "2193130"
  },
  {
    "start": "2191000",
    "end": "2611000"
  },
  {
    "text": "In practice, of course, what\nwe might find is that we cannot store this total\nmatrix in [? core, ?]",
    "start": "2193130",
    "end": "2199700"
  },
  {
    "text": "because it's just too big. There are just too many elements\nin the matrix.",
    "start": "2199700",
    "end": "2205970"
  },
  {
    "text": "If we talk about a 5,000 degree\nof freedom model with a bandwidth of 1,000, then we\nhave 5 million elements in",
    "start": "2205970",
    "end": "2214490"
  },
  {
    "text": "that matrix. And even on the very large-scale\ncomputers now, you",
    "start": "2214490",
    "end": "2220730"
  },
  {
    "text": "have to somehow block that\ninformation in order to be able to deal with it.",
    "start": "2220730",
    "end": "2226260"
  },
  {
    "text": "And that we do in the\nfollowing way. If a certain amount of\nhigh-speed storage is available, then based on that\nhigh-speed storage available,",
    "start": "2226260",
    "end": "2236010"
  },
  {
    "text": "we simply block the total\nstiffness matrix. Once again, shown here. Here is the skyline, or the\ncolumn heights are given by",
    "start": "2236010",
    "end": "2243700"
  },
  {
    "text": "that skyline. We block it as shown here. This is here block 1, this is\nhere block 2, this is here",
    "start": "2243700",
    "end": "2250300"
  },
  {
    "text": "block 3, and that is block 4. In fact we will see, later on,\nwhen we talk about the",
    "start": "2250300",
    "end": "2255710"
  },
  {
    "text": "solution of equations, it is\nnecessary that we can keep two",
    "start": "2255710",
    "end": "2262300"
  },
  {
    "text": "blocks at a time in the\nhigh-speed storage. In other words, if we have a\ntotal high-speed storage of",
    "start": "2262300",
    "end": "2267809"
  },
  {
    "text": "40,000 elements, then 20,000\nelements would be this, and 20,000 elements would be this.",
    "start": "2267810",
    "end": "2274660"
  },
  {
    "text": "Or in practice, of course, these\nmight be slightly less than 20,000, and these\nmight also be slightly less than 20,000.",
    "start": "2274660",
    "end": "2280780"
  },
  {
    "text": "But we have to be able to keep\ntwo blocks in core, and that is our criteria to determine\nthe block size.",
    "start": "2280780",
    "end": "2288130"
  },
  {
    "text": "Of course, the computer program,\nonce again, does all that automatically. It just knows how much storage\nthere is available, because",
    "start": "2288130",
    "end": "2294900"
  },
  {
    "text": "you have a specified amount of\nstorage that is available, and then it allocates the\nappropriate amount for each",
    "start": "2294900",
    "end": "2302780"
  },
  {
    "text": "block and calculates the block\nsize, the column heights in each block, and so on.",
    "start": "2302780",
    "end": "2308340"
  },
  {
    "text": " Once again, I'm showing here\nzero elements in a column.",
    "start": "2308340",
    "end": "2315200"
  },
  {
    "text": "When we actually decompose the\nmatrix as we do in Gauss",
    "start": "2315200",
    "end": "2321079"
  },
  {
    "text": "elimination into an LDA\ntransport form-- I will be discussing\nthat later--",
    "start": "2321080",
    "end": "2327040"
  },
  {
    "text": "we fill up these zero elements\nin general, and that is the reason why we carry them along\nin the solution phase.",
    "start": "2327040",
    "end": "2335000"
  },
  {
    "text": "Let me make a few remarks on the\nbandwidth, the use of an",
    "start": "2335000",
    "end": "2340690"
  },
  {
    "text": "effective bandwidth. Here we have a finite element\nmodel of a cantilever, a plane",
    "start": "2340690",
    "end": "2345950"
  },
  {
    "text": "stress finite element model\nof a cantilever. At each node, we have two\ndegrees of freedom, just as in",
    "start": "2345950",
    "end": "2352640"
  },
  {
    "text": "this earlier model that\nwe considered. Notice these are now 8-node\nelements, isoparametric",
    "start": "2352640",
    "end": "2358089"
  },
  {
    "text": "elements that I will be\ndiscussing later. We have constraint, of course,\nat this end, all degrees of",
    "start": "2358090",
    "end": "2364220"
  },
  {
    "text": "freedom, because the cantilever\nis 6 there. In this particular layout,\nnotice we have used the",
    "start": "2364220",
    "end": "2373450"
  },
  {
    "text": "following element or nodal\npoint numbering. 1, 2, 3, 4, 5, 6 up to 13,\nthen from 14 to 20,",
    "start": "2373450",
    "end": "2381010"
  },
  {
    "text": "then from 21 to 33. Well, this then means that\nour bandwidth here, or",
    "start": "2381010",
    "end": "2392599"
  },
  {
    "text": "half-bandwidth, I should rather\nsay, and now let's",
    "start": "2392600",
    "end": "2397810"
  },
  {
    "text": "simply include the diagonal. It doesn't make much\ndifference. We are talking, in practical\nanalysis, about a bandwidth,",
    "start": "2397810",
    "end": "2404400"
  },
  {
    "text": "or half bandwidth, of 300. So having 300 or 301, really, in\na practical analysis, makes",
    "start": "2404400",
    "end": "2411160"
  },
  {
    "text": "very little difference. Our half bandwidth, including\nthe diagonal element here,",
    "start": "2411160",
    "end": "2417360"
  },
  {
    "text": "would be 46. How would we obtain that? Well, if we look at the coupling\nbetween nodal points",
    "start": "2417360",
    "end": "2425240"
  },
  {
    "text": "that is due to the element\nstiffnesses, we recognize that for a typical element, let's\nlook at this element, we have",
    "start": "2425240",
    "end": "2433420"
  },
  {
    "text": "a maximum nodal 25 here, a\nminimum nodal point 3. Now, 25 minus 3 is\nequal to 22.",
    "start": "2433420",
    "end": "2445900"
  },
  {
    "text": "However, we now have to add 1 on\nbecause all of the diagonal",
    "start": "2445900",
    "end": "2451940"
  },
  {
    "text": "part, and that together,\nthen, gives 23. ",
    "start": "2451940",
    "end": "2457750"
  },
  {
    "text": "This 1 I'm adding on because\nof the diagonal element--",
    "start": "2457750",
    "end": "2462970"
  },
  {
    "text": "and if you where to look at the\nstiffness matrix in its assembled form-- of this element\nin its assembled form,",
    "start": "2462970",
    "end": "2469730"
  },
  {
    "text": "you would see that this part\nhere is to be added on, because you had also the\ndiagonal contribution.",
    "start": "2469730",
    "end": "2477390"
  },
  {
    "text": "So the maximum difference\nbetween the nodal points plus",
    "start": "2477390",
    "end": "2482599"
  },
  {
    "text": "1 gives us 23. Now, that 23 is a maximum if 1\ndegree of freedom were at 1",
    "start": "2482600",
    "end": "2490930"
  },
  {
    "text": "nodal point. However, we take that 23 and we\nhave to multiply it by 2,",
    "start": "2490930",
    "end": "2496130"
  },
  {
    "text": "because we have 2 degrees of\nfreedom per nodal point, and that then gives us 46.",
    "start": "2496130",
    "end": "2501740"
  },
  {
    "text": "So the half bandwidth, including\nthe diagonal, is 46.",
    "start": "2501740",
    "end": "2507730"
  },
  {
    "text": "Well, that is a very\nlarge bandwidth, in this particular case. And let us now try to rearrange\nthe nodal point",
    "start": "2507730",
    "end": "2516609"
  },
  {
    "text": "numbering to come up with\na smaller bandwidth. And the better nodal\npoint numbering here is shown in layout.",
    "start": "2516610",
    "end": "2524820"
  },
  {
    "text": "1, 2, 3, 4, 5, 6, 7, 8, and\nso on, down this way.",
    "start": "2524820",
    "end": "2530230"
  },
  {
    "text": "If we now look at the same\nelement again, the maximum difference in nodal\npoints is 7.",
    "start": "2530230",
    "end": "2537480"
  },
  {
    "text": "We add 1 again to get 8, and we\nhave 2 degrees of freedom per nodal point. That gives us a half\nbandwidth of 16.",
    "start": "2537480",
    "end": "2546590"
  },
  {
    "text": "And therefore, we have reduced\nthe bandwidth by almost a factor of 3.",
    "start": "2546590",
    "end": "2552180"
  },
  {
    "text": "Now this means that the solution\neffort will go down,",
    "start": "2552180",
    "end": "2557339"
  },
  {
    "text": "in the equation solution phase,\nwill go down by a factor of 9. Because he would see that\nour solution effort is",
    "start": "2557340",
    "end": "2564270"
  },
  {
    "text": "proportional to the half\nbandwidth squared. So if there's a factor of 3\nhere, the solution will",
    "start": "2564270",
    "end": "2573060"
  },
  {
    "text": "actually be reduced\nby a factor of 9. Therefore, it is very important\nto use minimum",
    "start": "2573060",
    "end": "2580210"
  },
  {
    "text": "bandwidth in the finite element\nmesh, or rather number the nodal point in such\na way as to obtain a",
    "start": "2580210",
    "end": "2587720"
  },
  {
    "text": "minimum half bandwidth. If we actually deal with column\nsolvers, we will see",
    "start": "2587720",
    "end": "2593860"
  },
  {
    "text": "that in some cases we quite\ndon't want to have the minimum bandwidth because we have a\ncolumn solver, about but these",
    "start": "2593860",
    "end": "2601090"
  },
  {
    "text": "are details that we will be\naddressing in a little bit.",
    "start": "2601090",
    "end": "2606790"
  },
  {
    "text": "In general, we want to have\nreally a minimum bandwidth. Let us look now at the overall\nsolution phase once more.",
    "start": "2606790",
    "end": "2618710"
  },
  {
    "start": "2611000",
    "end": "2856000"
  },
  {
    "text": "This is a solution phase in\nthe computer program STAP, which is in the textbook that\nyou are using in this course.",
    "start": "2618710",
    "end": "2628140"
  },
  {
    "text": "You might look at the\ndescription of this computer program in more detail, but the\noverall solution set is as",
    "start": "2628140",
    "end": "2635940"
  },
  {
    "text": "shown here. We start the program, and we\nhave to read a nodal point",
    "start": "2635940",
    "end": "2641700"
  },
  {
    "text": "data, which involves\ncoordinates, boundary conditions, and we established\nthe equation",
    "start": "2641700",
    "end": "2647339"
  },
  {
    "text": "numbers in an ID array. I'll discuss that with you. We then would calculate and\nstore load vectors for our",
    "start": "2647340",
    "end": "2656609"
  },
  {
    "text": "load cases. We write these on tape. If we have a typical analysis,\nthree, four load cases, we",
    "start": "2656610",
    "end": "2664039"
  },
  {
    "text": "calculate all of these\nload vectors and store them on tape.",
    "start": "2664040",
    "end": "2669120"
  },
  {
    "text": "Then we continue to read,\ngenerate, and store element",
    "start": "2669120",
    "end": "2675420"
  },
  {
    "text": "data the way I've been\ndiscussing this with you, and",
    "start": "2675420",
    "end": "2680530"
  },
  {
    "text": "in the actual analysis, we\nloop over element groups. By that I mean that the total\nelements are subdivided into",
    "start": "2680530",
    "end": "2688610"
  },
  {
    "text": "element groups. This is an effective concept\nbecause in an actual structural analysis, we deal\nwith plane stress elements,",
    "start": "2688610",
    "end": "2695860"
  },
  {
    "text": "beam elements, truss elements,\nthree-dimensional shell elements, and so on. And it is effective to just\ngroup all of these elements",
    "start": "2695860",
    "end": "2704320"
  },
  {
    "text": "together into specific groups.",
    "start": "2704320",
    "end": "2709470"
  },
  {
    "text": "In other words, put the shell\nelements together in one group, the beam elements\ntogether in another",
    "start": "2709470",
    "end": "2714720"
  },
  {
    "text": "group, and so on. In fact, this is a very\neffective way of proceeding",
    "start": "2714720",
    "end": "2720140"
  },
  {
    "text": "also in non-linear\nanalysis, in a more complicated analysis. If you're familiar a little\nbit with ADINA, what we do",
    "start": "2720140",
    "end": "2726720"
  },
  {
    "text": "there is that we are grouping\nelements not just together according to the kinds of\nkinematics that they're",
    "start": "2726720",
    "end": "2734310"
  },
  {
    "text": "representing, but also the\nmaterial models they are containing, the kind of\ndescriptions we want to use",
    "start": "2734310",
    "end": "2742970"
  },
  {
    "text": "for non-linearities,\net cetera. Well, having then generated and\nstored the element data,",
    "start": "2742970",
    "end": "2751580"
  },
  {
    "text": "we can read it and calculate\nthe element stiffness matrices, and assemble these\nin a global structural",
    "start": "2751580",
    "end": "2758789"
  },
  {
    "text": "stiffness matrix. Here we loop over all element\ngroups once again. And this means generally we are\nstoring this element data",
    "start": "2758790",
    "end": "2768910"
  },
  {
    "text": "on tape, and then we are reading\nit and going over all of the element group data,\nas shown here.",
    "start": "2768910",
    "end": "2775250"
  },
  {
    "text": "Then next we can factorize\nthe stiffness matrix. This is a basic step in the\nGauss elimination procedure,",
    "start": "2775250",
    "end": "2783380"
  },
  {
    "text": "as I will be discussing\nwith you later. And now we loop over the load\nvectors for each load case,",
    "start": "2783380",
    "end": "2792670"
  },
  {
    "text": "read the load vector, and\ncalculate the nodal point displacement. We then read the element\ngroup data and",
    "start": "2792670",
    "end": "2800240"
  },
  {
    "text": "calculate the element stresses. Print out the element stresses,\nand if there is another load case to be\nconsidered, we go back from",
    "start": "2800240",
    "end": "2806990"
  },
  {
    "text": "here into there. So the LDA transport\nfactorization of the stiffness matrix which was outside this\nloop is only done once.",
    "start": "2806990",
    "end": "2815309"
  },
  {
    "text": "A forward reduction and back\nsubstitution of the load vector is done for each load\ncase, as shown here.",
    "start": "2815310",
    "end": "2822220"
  },
  {
    "text": "I will be discussing those\naspects in more detail later.",
    "start": "2822220",
    "end": "2828260"
  },
  {
    "text": "Let us now look at some typical\neffective elements. We have been discussing so far\nsome simple elements, just to",
    "start": "2828260",
    "end": "2838290"
  },
  {
    "text": "expose you to the basic concepts\nthat are being used.",
    "start": "2838290",
    "end": "2844620"
  },
  {
    "text": "And for that reason, we\ndiscussed some very simple elements in the earlier\nlectures. What I want to do now in the\nnext lectures is to discuss",
    "start": "2844620",
    "end": "2851020"
  },
  {
    "text": "this you modern, effective\nisoparametric elements. These are also the elements that\nwe are using in the ADINA",
    "start": "2851020",
    "end": "2859910"
  },
  {
    "start": "2856000",
    "end": "3355000"
  },
  {
    "text": "computer program. Here we have a one-dimensional\ntruss element which can be",
    "start": "2859910",
    "end": "2865930"
  },
  {
    "text": "used as a cable element. As a simplest element, it would\nbe 2-noded element. We would only assign this\nnode and that node.",
    "start": "2865930",
    "end": "2875210"
  },
  {
    "text": "And then it would be, of course,\na simple 2-noded truss, a very common element,\n2-node truss.",
    "start": "2875210",
    "end": "2883990"
  },
  {
    "text": "However, as shown here, we can\nalso have a third note, which",
    "start": "2883990",
    "end": "2889530"
  },
  {
    "text": "is this one. And we can have a fourth note. In other words, what we will be\ndealing with, really, are",
    "start": "2889530",
    "end": "2897650"
  },
  {
    "text": "variable number node elements,\nwhich have two nodes, three nodes, or four nodes for the\none-dimensional truss element.",
    "start": "2897650",
    "end": "2907370"
  },
  {
    "text": "A ring element is obtained from\nthe truss element in this very simple way.",
    "start": "2907370",
    "end": "2912430"
  },
  {
    "text": "It's really an axis-symmetric\ntruss, you might call it an axis-symmetric truss, with only\none degree of freedom. It has only stiffness in its\ncircumferential direction.",
    "start": "2912430",
    "end": "2921140"
  },
  {
    "text": "So this is a truss element. And the basic concept that we\nare using is that we can have",
    "start": "2921140",
    "end": "2926930"
  },
  {
    "text": "a variable number of nodes. Similarly for this element, this\nis a plane stress, plane",
    "start": "2926930",
    "end": "2933920"
  },
  {
    "text": "strain, or axis-symmetric\nelement. Notice that the only\ndisplacement that we are talking about in this particular\ncase are two",
    "start": "2933920",
    "end": "2940780"
  },
  {
    "text": "displacements, u and v, or in\nADINA, we call this the V and",
    "start": "2940780",
    "end": "2946570"
  },
  {
    "text": "W degree of freedom,\ncorresponding to the y- and z-axis. The z-axis is, in an\naxis-symmetric case, the axis",
    "start": "2946570",
    "end": "2952740"
  },
  {
    "text": "of revolution. And with this degree of freedom,\nthe kinematics of the",
    "start": "2952740",
    "end": "2959420"
  },
  {
    "text": "element are defined when\nwe talk about a specific number of nodes.",
    "start": "2959420",
    "end": "2965780"
  },
  {
    "text": "And then the element can be used\nfor plane stress, plane strain, and axis-symmetric\nanalysis, depending on which",
    "start": "2965780",
    "end": "2971990"
  },
  {
    "text": "stress-strain law you're\nusing, and which strain components and stress\ncomponents",
    "start": "2971990",
    "end": "2978070"
  },
  {
    "text": "you're dealing with. Here, too, we can use the\nelement simply with 4 nodes,",
    "start": "2978070",
    "end": "2984280"
  },
  {
    "text": "so we would have this\n4-noded element. We can also add another note,\nmake it a 5-noded element.",
    "start": "2984280",
    "end": "2993250"
  },
  {
    "text": "We can add this node, we have\na 6-noded element, now a 7-noded element, and finally\nan 8-noded element.",
    "start": "2993250",
    "end": "2999329"
  },
  {
    "text": "The variable number node concept\nis a very effective way of formulating elements,\nbecause the same basic",
    "start": "2999330",
    "end": "3006150"
  },
  {
    "text": "sub-protein basic element can\nbe used for all sorts of different applications.",
    "start": "3006150",
    "end": "3011420"
  },
  {
    "text": "The same holds for\nthree-dimensional analysis. There's also a bit of a number\nnode 3-dimensional element",
    "start": "3011420",
    "end": "3021080"
  },
  {
    "text": "where we have a basic number of\nnodes being 8, and then we",
    "start": "3021080",
    "end": "3026820"
  },
  {
    "text": "would have this brick\nelement here-- let me just quickly\nsketch it out.",
    "start": "3026820",
    "end": "3033910"
  },
  {
    "text": "This is the basic\nbrick element. And now we can simply add\nadditional nodes in to obtain",
    "start": "3033910",
    "end": "3041690"
  },
  {
    "text": "higher-order elements. And the 21-noded element here\nis a very effective element",
    "start": "3041690",
    "end": "3049049"
  },
  {
    "text": "for general three-dimensional\nanalysis. However, in some other\napplications, even the 8-noded",
    "start": "3049050",
    "end": "3055100"
  },
  {
    "text": "element is quite effective,\neffectiveness, of course, being always measured by the\ncomputational effort involved",
    "start": "3055100",
    "end": "3063310"
  },
  {
    "text": "in dealing with such an element,\nand the accuracy that the element can give us\nin actual analysis.",
    "start": "3063310",
    "end": "3071110"
  },
  {
    "text": "So this being one element,\nagain, that can contain from 8 up to 21 notes, being a variable\nnumber node element,",
    "start": "3071110",
    "end": "3079269"
  },
  {
    "text": "and being very effectively\nformulated using the isoparametric concept\nthat I will be",
    "start": "3079270",
    "end": "3084300"
  },
  {
    "text": "discussing in the next lecture. Notice that in that concept,\nwe can have curved element sides, as shown here, for the\nhigher order elements.",
    "start": "3084300",
    "end": "3093660"
  },
  {
    "text": "Finally there is, of course,\nour beam element.",
    "start": "3093660",
    "end": "3099089"
  },
  {
    "text": "The beam element, which I'm sure\nyou are quite familiar with, a simple 2-noded element\nwhich might not be referred to",
    "start": "3099090",
    "end": "3108720"
  },
  {
    "text": "as a finite element, but on the\nother side, we might also",
    "start": "3108720",
    "end": "3114250"
  },
  {
    "text": "call it a finite element. Originally, it was not called\na finite element, but now if",
    "start": "3114250",
    "end": "3119720"
  },
  {
    "text": "we look at the basic\ninterpolation procedures that we are employing, we may\nvery well refer to",
    "start": "3119720",
    "end": "3125230"
  },
  {
    "text": "it at a finite element. Then the shell element that\nI also will be discussing.",
    "start": "3125230",
    "end": "3132210"
  },
  {
    "text": "Here we have a basic shell\nelement that is shown here,",
    "start": "3132210",
    "end": "3138530"
  },
  {
    "text": "having 16 nodes. At each nodal point, we have\nnow 5 degrees of freedom.",
    "start": "3138530",
    "end": "3145619"
  },
  {
    "text": "The 5 degrees of freedom being 3\ntranslations, as shown here. And in addition, 2 rotations,\nthese being the 2 rotations.",
    "start": "3145620",
    "end": "3157700"
  },
  {
    "text": "The 16-node element is the\nhighest order element that I",
    "start": "3157700",
    "end": "3162940"
  },
  {
    "text": "can recommend for practical\nanalysis. It's a quite expensive element,\nbut very accurate, because it admits curvature\ninto all directions.",
    "start": "3162940",
    "end": "3172160"
  },
  {
    "text": "So for curvatures, it can be a\nvery effective element to use. Notice that at each node, we\nhave 5 degrees of freedom",
    "start": "3172160",
    "end": "3180530"
  },
  {
    "text": "where these translations are\ndefined in the xyz global",
    "start": "3180530",
    "end": "3185980"
  },
  {
    "text": "coordinate system, whereas the\nrotations are not necessarily",
    "start": "3185980",
    "end": "3191000"
  },
  {
    "text": "aligned with the\nx- and y-axes. I will be discussing that\nlater on in detail.",
    "start": "3191000",
    "end": "3196740"
  },
  {
    "text": "But then with 16 notes and 5\ndegrees of freedom, we are talking about 80 degrees of\nfreedom altogether, a very",
    "start": "3196740",
    "end": "3204390"
  },
  {
    "text": "considerable number for\na single element. In practice, therefore, we\nwant to possibly use less",
    "start": "3204390",
    "end": "3210170"
  },
  {
    "text": "nodes on the element, and an\neffective element that directly is obtained\nfrom this one is",
    "start": "3210170",
    "end": "3216150"
  },
  {
    "text": "simply the 9-noded element. I will be discussing\nthat element.",
    "start": "3216150",
    "end": "3221650"
  },
  {
    "text": "And of course, this element and\nother elements from this",
    "start": "3221650",
    "end": "3227549"
  },
  {
    "text": "one are directly obtained by\nsimply assigning certain nodes to the element.",
    "start": "3227550",
    "end": "3232700"
  },
  {
    "text": "We use here again the variable\nnumber node concept as we use it for the truss element, the\n2-dimensional, and the",
    "start": "3232700",
    "end": "3239529"
  },
  {
    "text": "3-dimensional element. Another important feature that I\nlike to also just mention to",
    "start": "3239530",
    "end": "3244660"
  },
  {
    "text": "you is the fact that this\nelement can be used as a transition element.",
    "start": "3244660",
    "end": "3250220"
  },
  {
    "text": "You might have a shell here,\nand you might have a solid here to be idealized, and\nthere's a transition region.",
    "start": "3250220",
    "end": "3259530"
  },
  {
    "text": "The solid element here would\nhave, in general, 3 degrees of freedom at a node.",
    "start": "3259530",
    "end": "3264820"
  },
  {
    "text": "The shell element here has 5\ndegrees of freedom at this node, 5 degrees of freedom at\nthis node, and here we have a",
    "start": "3264820",
    "end": "3272530"
  },
  {
    "text": "transition element that has\nshell degrees of freedom at these nodes, and solid degrees\nof freedom at these top and",
    "start": "3272530",
    "end": "3280740"
  },
  {
    "text": "bottom nodes. Here altogether at this line, 6\ndegrees of freedom, 3 here,",
    "start": "3280740",
    "end": "3286770"
  },
  {
    "text": "3 there, whereas at this line,\n5 degrees of freedom. So this is an effective way of\nmodeling a transition region",
    "start": "3286770",
    "end": "3294509"
  },
  {
    "text": "between a shell and a solid\nin a compatible way.",
    "start": "3294510",
    "end": "3299940"
  },
  {
    "text": "In other words, preserving full\ncompatibility between the",
    "start": "3299940",
    "end": "3305810"
  },
  {
    "text": "elements, and not using any\nconstraint equations. I will be also talking further\nabout this element later.",
    "start": "3305810",
    "end": "3312341"
  },
  {
    "text": " In this lecture, then, what I\nwanted to discuss with you",
    "start": "3312342",
    "end": "3318370"
  },
  {
    "text": "were some basic concepts\nregarding the formulation of the finite element methods, in\nparticular regarding the",
    "start": "3318370",
    "end": "3327770"
  },
  {
    "text": "implementation of the finite\nelement method. In other words, how do we\nactually implement what we",
    "start": "3327770",
    "end": "3333260"
  },
  {
    "text": "formulated in the earlier\nlectures? Some of these concepts are very\nimportant concepts when",
    "start": "3333260",
    "end": "3341170"
  },
  {
    "text": "it comes to actual practical\nimplementation of the finite element method, particularly\nthe one that I discussed",
    "start": "3341170",
    "end": "3347270"
  },
  {
    "text": "regarding the connectivity\narrays that are formulated, and so on.",
    "start": "3347270",
    "end": "3352720"
  },
  {
    "text": "This is all I wanted to say. Thank you for your attention. ",
    "start": "3352720",
    "end": "3356280"
  }
]