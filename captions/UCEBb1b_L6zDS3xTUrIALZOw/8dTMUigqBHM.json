[
  {
    "text": " The following content is\nprovided under a Creative Commons license.",
    "start": "0",
    "end": "5950"
  },
  {
    "text": "Your support will help MIT\nOpenCourseWare continue to offer high quality educational\nresources for free.",
    "start": "5950",
    "end": "12639"
  },
  {
    "text": "To make a donation or view\nadditional materials from hundreds of MIT courses, visit\nMIT OpenCourseWare at",
    "start": "12640",
    "end": "19460"
  },
  {
    "text": "ocw.mit.edu. ",
    "start": "19460",
    "end": "32180"
  },
  {
    "text": "SAMAN AMARASINGHE: Today I'm\ngoing to talk a little bit about computer architecture.",
    "start": "32180",
    "end": "37790"
  },
  {
    "text": "And how computer architecture\nimpacts performance engineering. So the main part of this is\ngoing through a long overview",
    "start": "37790",
    "end": "48210"
  },
  {
    "text": "of the Pentium, the Nahalem\narchitecture that in the",
    "start": "48210",
    "end": "53230"
  },
  {
    "text": "machines that you guys\nare using, which is hot off the press. Six core processor that's\nout there now.",
    "start": "53230",
    "end": "60730"
  },
  {
    "text": "And then I will talk a little\nbit about profiling a program. And then the next lecture, the\nTAs are going to demonstrate",
    "start": "60730",
    "end": "68610"
  },
  {
    "text": "how to use some of those\nprofiling tools that you guys are supposed to use for\nthe project two.",
    "start": "68610",
    "end": "73990"
  },
  {
    "text": "And I guess the project two will\nprobably appear, since we had a delay, so probably\nbe up here 24 delayed.",
    "start": "73990",
    "end": "79880"
  },
  {
    "text": "We'll release the project,\ntoo, up there. And then at the end of the talk,\nend of the lecture, I'm",
    "start": "79880",
    "end": "85986"
  },
  {
    "text": "going to talk about a little\nbit of example. Go to some program and show what\nyou can gain by looking",
    "start": "85986",
    "end": "94520"
  },
  {
    "text": "at things like profiling,\nand what information that you gain. Just kind of do a\nhigh level view.",
    "start": "94520",
    "end": "101980"
  },
  {
    "text": "So let's start something. So how many of you have had\na chip in your hand.",
    "start": "101980",
    "end": "112300"
  },
  {
    "text": "Microprocessor in your hand. Some. There's some people\nwho haven't. So I brought some show\nand tell things.",
    "start": "112300",
    "end": "118329"
  },
  {
    "text": "So what I'm going to do\nis pass them around. And there are two things that\nare actually very valuable",
    "start": "118330",
    "end": "124940"
  },
  {
    "text": "that I want to tell you and then\nmake sure that they don't get damaged. So this is a Pentium 3 that's\nalready in a big",
    "start": "124940",
    "end": "133270"
  },
  {
    "text": "heat sink in there. So you can't see that much, but\nthey're really cute and they created a hologram of the\nchip and put it there so you",
    "start": "133270",
    "end": "142490"
  },
  {
    "text": "can catch, I guess, people who\nare trying to use counterfeit",
    "start": "142490",
    "end": "148700"
  },
  {
    "text": "and stuff like that. So this is MDK 6 with\nthe packaging.",
    "start": "148700",
    "end": "153780"
  },
  {
    "text": "I'm going to send it\naround in there. And this is a Pentium Pro.",
    "start": "153780",
    "end": "164300"
  },
  {
    "text": "Normally what happens is that\nwhen the first dye comes out, this is humongous,\ngiganiticized.",
    "start": "164300",
    "end": "169350"
  },
  {
    "text": "But after a couple of\ngenerations, what you do is you take the same circuit and\nyou shrink it and shrink it.",
    "start": "169350",
    "end": "174360"
  },
  {
    "text": "This is probably what\ntwo shrinks-- so the actual dye right now is\nvery small because this is",
    "start": "174360",
    "end": "179380"
  },
  {
    "text": "copper [UNINTELLIGIBLE PHRASE] later process that things\nhave been shrunk. This is a Core Two Duo\nSo I think there's a",
    "start": "179380",
    "end": "189910"
  },
  {
    "text": "two cores in there. So I didn't want to bring\nanything newer because those",
    "start": "189910",
    "end": "195650"
  },
  {
    "text": "chips are darn expensive, and\nif you touch it, basically just static will basically\ndestroy the process.",
    "start": "195650",
    "end": "201580"
  },
  {
    "text": "So these are something that\ncame out of things that doesn't work.",
    "start": "201580",
    "end": "207640"
  },
  {
    "text": "The next two things. These are-- I really need to get this\n[UNINTELLIGIBLE] because these are like the only thing\nthat's the one",
    "start": "207640",
    "end": "214950"
  },
  {
    "text": "available in this world. Basically there's only\none of item. So at MIT, we build a process a\ncouple of years ago called a",
    "start": "214950",
    "end": "222370"
  },
  {
    "text": "row processor. So here's a row dye before\nit's being mounted. So this is what comes out after\nall the fabrication,",
    "start": "222370",
    "end": "229920"
  },
  {
    "text": "before it goes into this\nmounting with all the pins. If you look at the top of this\none, what do you see?",
    "start": "229920",
    "end": "236450"
  },
  {
    "text": "It's all these dots, which\nare basically where all the pins go. So you don't actually even see\ninside the dye in this one.",
    "start": "236450",
    "end": "242620"
  },
  {
    "text": "However, then you pay a bunch\nof money to these people who go and grind that chip.",
    "start": "242620",
    "end": "247670"
  },
  {
    "text": "You take a real working chip and\nyou grind it, and expose insides of the chip.",
    "start": "247670",
    "end": "252860"
  },
  {
    "text": "So this is a ground chip that's exposed the metal layering. In fact, this you can see real\ncircuits in the chip.",
    "start": "252860",
    "end": "258200"
  },
  {
    "text": "So I don't think anybody has the\nmission that's required to see the transistors or\neven the circuits.",
    "start": "258200",
    "end": "265020"
  },
  {
    "text": "But it's kind of interesting\nto see. So here are these two\nthings, so some show and tell like that.",
    "start": "265020",
    "end": "271354"
  },
  {
    "text": "Ah-ha. And this. This is entire reason that\nmicroprocessor not getting faster anymore.",
    "start": "271354",
    "end": "277280"
  },
  {
    "text": "Because this is one humongo heap\nthing that you put in the",
    "start": "277280",
    "end": "282720"
  },
  {
    "text": "modern machines, and there's a\nhuge fan that goes above that. And you can't keep building\nlarger and larger heat things",
    "start": "282720",
    "end": "287920"
  },
  {
    "text": "to get the heat out. And so that this why the heat\nis paramount, and that's why",
    "start": "287920",
    "end": "294810"
  },
  {
    "text": "we can't run 4 gigahertz,\n10 gigahertz process. We are thick into the current\nkind of gigahertz train, and",
    "start": "294810",
    "end": "301760"
  },
  {
    "text": "then we [UNINTELLIGIBLE] multiple cores. So it's a big, humongo block\nin there, and then some",
    "start": "301760",
    "end": "307370"
  },
  {
    "text": "actually might even have\na bigger block. So while this go around, let's\nstart the lecture.",
    "start": "307370",
    "end": "315840"
  },
  {
    "text": "So computer architecting\nincludes many different things. You are doing instructions,\nmemory, IEO Bus, disk systems,",
    "start": "315840",
    "end": "323220"
  },
  {
    "text": "GPU, graphics, all\nof those things. But we are not getting\ninto beyond instruction and memory system. So we are going to focus on\nthat, but if you really want",
    "start": "323220",
    "end": "331550"
  },
  {
    "text": "to understand the full end to\nend performance, you have to worry about all those\nother things. So that said, let's go into\ninstructions and memory.",
    "start": "331550",
    "end": "339590"
  },
  {
    "text": "So here is the Nehalem\nprocessor. And there's a beautiful\npicture of the",
    "start": "339590",
    "end": "344700"
  },
  {
    "text": "processor in the left. This as kind of the role\nchip that I'm showing.",
    "start": "344700",
    "end": "349770"
  },
  {
    "text": "They have ground out the upper\nlayers and showed some of the layers in there.",
    "start": "349770",
    "end": "355570"
  },
  {
    "text": "So that's what you get when\nyou buy the Nehalem. And this very complicated\ndiagram in the right side,",
    "start": "355570",
    "end": "362330"
  },
  {
    "text": "it's an abstract notion of\nwhat's happening inside. So what you do is go a little\nbit into this [UNINTELLIGIBLE]",
    "start": "362330",
    "end": "367820"
  },
  {
    "text": "diagram, and trying to\nunderstand what impact it would have on you. This is not architecture class,\nbut you, as trying to",
    "start": "367820",
    "end": "376090"
  },
  {
    "text": "get performance, has to make\nsure all these components works pretty well. That said, it's very hard to\nunderstand in a modern",
    "start": "376090",
    "end": "384250"
  },
  {
    "text": "microprocessor exactly\nwhat's going on. Not even Intel understand\nwhat's going on most of the time.",
    "start": "384250",
    "end": "390070"
  },
  {
    "text": "And so a lot of things\n[UNINTELLIGIBLE]. So you can't ask tell\nme exactly what",
    "start": "390070",
    "end": "395850"
  },
  {
    "text": "happened or get there. So you can be fussy. On the other hand, being fussy\nmeans there's a level of",
    "start": "395850",
    "end": "405640"
  },
  {
    "text": "abstraction that you\nhave to live with. And what that means is when\nsomething hit their head very",
    "start": "405640",
    "end": "411550"
  },
  {
    "text": "hard, and have a really bad\nsituation you can see that and you can react to that. But there are a lot of small\nthings that happen.",
    "start": "411550",
    "end": "417530"
  },
  {
    "text": "These things interact in\nvery complex ways. So you don't understand exactly\nthe minor detail",
    "start": "417530",
    "end": "423250"
  },
  {
    "text": "what's going on in these\nmicroprocessor for a given application. A lot of different things might\nwork different ways.",
    "start": "423250",
    "end": "428850"
  },
  {
    "text": "So that's it. So if we look at what you learn\nfrom 004, so what that",
    "start": "428850",
    "end": "434380"
  },
  {
    "text": "means is instruction. You have here two\ninstructions. One after the other. So if the instructions\ntake [UNINTELLIGIBLE]",
    "start": "434380",
    "end": "439540"
  },
  {
    "text": "cycle. So we see the\nnon-[UNINTELLIGIBLE] method. So you look at why it's probably\ntaking five cycles.",
    "start": "439540",
    "end": "446169"
  },
  {
    "text": "So that's because it's doing\ndifferent things. You are doing instruction fetch,\ninstruction decode, after that execute.",
    "start": "446170",
    "end": "452250"
  },
  {
    "text": "Then you do some memory\n[UNINTELLIGIBLE] and then find the right packet in there. So you do all those things\n[UNINTELLIGIBLE]",
    "start": "452250",
    "end": "457820"
  },
  {
    "text": "instruction, and then\nyou start the next [UNINTELLIGIBLE] cycle. Of course, this is\nvery necessary. So the first two people\n[UNINTELLIGIBLE].",
    "start": "457820",
    "end": "464410"
  },
  {
    "text": "After I do instruction fetch,\nthat logic that's doing instruction fetch is not doing\nanything for a while.",
    "start": "464410",
    "end": "470370"
  },
  {
    "text": "Why don't I start the next\ninstruction phase immediately because you are doing the same\ncircuit, and then recycle,",
    "start": "470370",
    "end": "475720"
  },
  {
    "text": "that's so it can go do the next\nthing, and next thing, and next thing. And by doing that, well I can\nbasically recycle, I can get",
    "start": "475720",
    "end": "483120"
  },
  {
    "text": "the instruction through\nthe system. So this looks very nice and\nsimple and you can get.",
    "start": "483120",
    "end": "488470"
  },
  {
    "text": "So what are they\nchoosing here? Is the world this\nnice and simple?",
    "start": "488470",
    "end": "495400"
  },
  {
    "text": "No. OK, what might happen? AUDIENCE: [INAUDIBLE PHRASE] ",
    "start": "495400",
    "end": "501930"
  },
  {
    "text": "SAMAN AMARASINGHE: You have a\nlot of issues that normally cause hazards. So there could be three\ndifferent type of hazard.",
    "start": "501930",
    "end": "509180"
  },
  {
    "text": "There's a thing called\nstructural hazard. What you are trying to do is\nattempt to use the same",
    "start": "509180",
    "end": "515030"
  },
  {
    "text": "hardware, do two things, but\nthere's only one hardware. You can't get two things done. One has to be after another.",
    "start": "515030",
    "end": "520960"
  },
  {
    "text": "And there's a thing called\ndata hazards. That means you're trying to\nrun these things, one now",
    "start": "520960",
    "end": "526700"
  },
  {
    "text": "another, but in logically. They have to run sequence\nserially. So that means that's a data\ndependence, I'll get into,",
    "start": "526700",
    "end": "533740"
  },
  {
    "text": "that makes it impossible to make\nthese things run in the pipeline fashion. And finally, this control has\nthings like branches and",
    "start": "533740",
    "end": "540459"
  },
  {
    "text": "things like that,\n[UNINTELLIGIBLE] interfere with that. So let me get a little\nbit detail down here.",
    "start": "540460",
    "end": "547040"
  },
  {
    "text": "So the first thing we have is\nwhat we call data hazard. I will talk about two\ndifferent hazards.",
    "start": "547040",
    "end": "552160"
  },
  {
    "text": "So before I go there, I will\nshare a little bit about this assembly representation. In two lectures, you're going\nto get a more deep drilling",
    "start": "552160",
    "end": "560060"
  },
  {
    "text": "into the how to go from\nC to Assembly. But before that, so what this\ninstruction says, this is the",
    "start": "560060",
    "end": "566520"
  },
  {
    "text": "normal x86 form. We are doing add long. Add in to the values in this\nrbx and rax and put the",
    "start": "566520",
    "end": "574720"
  },
  {
    "text": "results back into rax. So you are doing rbx plus rax\nand get the result into rax.",
    "start": "574720",
    "end": "580410"
  },
  {
    "text": "You are subjecting rax\nwith rcx and put the results into rcx.",
    "start": "580410",
    "end": "586100"
  },
  {
    "text": "So basically all the rest of\nthe results are in the right-hand side. Two [UNINTELLIGIBLE] are basically the first\nand second.",
    "start": "586100",
    "end": "592250"
  },
  {
    "text": "So the last one gets\nread and modified. So that's the way\nit's weighted. So while you have two is--",
    "start": "592250",
    "end": "598130"
  },
  {
    "text": "question? AUDIENCE: [INAUDIBLE PHRASE] ",
    "start": "598130",
    "end": "603629"
  },
  {
    "text": "SAMAN AMARASINGHE: Instruction,\nyeah. It's different concept. The second instruction is data\ndependent, of course.",
    "start": "603630",
    "end": "609540"
  },
  {
    "text": "What's happening is I am writing\nthis value here, which will be read by this guy here.",
    "start": "609540",
    "end": "614829"
  },
  {
    "text": "So I write something\nand the next instruction is reading that. The problem is it's the right\nthing must not be available",
    "start": "614830",
    "end": "621920"
  },
  {
    "text": "until very late in\nthe pipeline. So they cannot execute\nsimultaneously and all that",
    "start": "621920",
    "end": "629269"
  },
  {
    "text": "thing basically of\nthis dependence. This is called basically read\nafter write, because I'm going",
    "start": "629270",
    "end": "635270"
  },
  {
    "text": "to read after it's\nbeen written. And if you look at the pipeline\nhere, what happens is the write happens here, and the\nnext feed has to happen",
    "start": "635270",
    "end": "645980"
  },
  {
    "text": "somewhere down here. So until this one, this\nslide [UNINTELLIGIBLE] so this status has to get\ndelayed after this point.",
    "start": "645980",
    "end": "653910"
  },
  {
    "text": "This make sense? Because I'm trying to in here\nread something that's not",
    "start": "653910",
    "end": "660140"
  },
  {
    "text": "going to be produced for\ntwo more clock cycles. So that's not available\nand I can't do that.",
    "start": "660140",
    "end": "665340"
  },
  {
    "text": "Make sense? OK. ",
    "start": "665340",
    "end": "671529"
  },
  {
    "text": "So this next cycle dependence\nis called name dependence. That's the dependence\nand anti-dependence.",
    "start": "671530",
    "end": "678610"
  },
  {
    "text": "Basically what it's doing is two\ninstructions are using the same register.",
    "start": "678610",
    "end": "684180"
  },
  {
    "text": "And because of that I can't\nstart to see the radius there until the other one switches\noff with the register.",
    "start": "684180",
    "end": "689760"
  },
  {
    "text": "So in here, what's happening\nhere is I am subtracting rax and rbx.",
    "start": "689760",
    "end": "698850"
  },
  {
    "text": "I'm putting the value in rbx. And here I am adding rcx to\nrax, and basically start",
    "start": "698850",
    "end": "706500"
  },
  {
    "text": "putting the value in rax. The problem here is I cannot\nmodify rax before this guy has",
    "start": "706500",
    "end": "713149"
  },
  {
    "text": "[UNINTELLIGIBLE] the value in here. So that means I'm trying to go\nmodify it, and say no, no, no. You can't touch it because\nsomebody will still want to",
    "start": "713150",
    "end": "720210"
  },
  {
    "text": "get the value, and I can't\ngo destroy the value. And I had to [UNINTELLIGIBLE]. That's the first type of what\nyou call anti-dependence.",
    "start": "720210",
    "end": "727760"
  },
  {
    "text": "And because of this, you\nboth are using rax. There's no real data movement,\nbut it basically",
    "start": "727760",
    "end": "733060"
  },
  {
    "text": "has the same space. I had to wait till the other\nperson can be evicted before I",
    "start": "733060",
    "end": "738180"
  },
  {
    "text": "can read that register. So these are called write\nafter read hazard.",
    "start": "738180",
    "end": "744680"
  },
  {
    "text": "The other type of dependence is\ncalled output dependence. So I am updating rax twice, and\nof course in this simple",
    "start": "744680",
    "end": "753060"
  },
  {
    "text": "example we can probably even\ndrop this instruction because it doesn't matter because\nI'm re-writing it. But if there's something in\nbetween also reading, what",
    "start": "753060",
    "end": "760040"
  },
  {
    "text": "happens is I can't do\nthis in wrong order. The last value that updated has\nto be this instruction.",
    "start": "760040",
    "end": "766010"
  },
  {
    "text": "So we had to make sure this\ninstruction happens after this instruction. So we have a dependence, so\nthere's some ordering in here",
    "start": "766010",
    "end": "773140"
  },
  {
    "text": "that has to be maintained. And this is call write\nafter write hazard.",
    "start": "773140",
    "end": "780440"
  },
  {
    "text": "So instructions that have medium\ndependence, we can actually get rid of the\ndependent by what we call",
    "start": "780440",
    "end": "786650"
  },
  {
    "text": "register renaming. So everybody uses rax, so that's\nkind of artifact of",
    "start": "786650",
    "end": "793520"
  },
  {
    "text": "good old inter [UNINTELLIGIBLE] architecture sometimes\n[UNINTELLIGIBLE] when register, so you have to\nuse the same register for many, many things.",
    "start": "793520",
    "end": "799540"
  },
  {
    "text": "So in a modern-- inside the hardware\nthere's what we call a register renaming.",
    "start": "799540",
    "end": "804560"
  },
  {
    "text": "You have lots more slots for the\nsame registers, and even when you're using rax, this is\nan old one, this is a new one,",
    "start": "804560",
    "end": "811680"
  },
  {
    "text": "use a different location\nfor the new one. So I can do renaming. And then basically hardware\ncan get rid of that.",
    "start": "811680",
    "end": "819350"
  },
  {
    "text": "The next interesting thing\nis control hazard. So here what we see, if you had\nthis kind of a loop, s1,",
    "start": "819350",
    "end": "825930"
  },
  {
    "text": "it's control dependent on p1. So we can't do s1 until\np1 is done.",
    "start": "825930",
    "end": "832670"
  },
  {
    "text": "Or s2 until p2 is done. So we are [UNINTELLIGIBLE] the p1 condition is\n[UNINTELLIGIBLE]",
    "start": "832670",
    "end": "838620"
  },
  {
    "text": "before you can do s1 and\n[UNINTELLIGIBLE] for the next one. So the interesting thing is\ncontrol dependence also we can",
    "start": "838620",
    "end": "846870"
  },
  {
    "text": "get rid of it by doing\nspeculation. So the idea there what hardware\ndoes is it will say",
    "start": "846870",
    "end": "852320"
  },
  {
    "text": "wait a minute. I know I have to wait till p1 is\n[UNINTELLIGIBLE] to do s1. But I'm going to do s1 anyway.",
    "start": "852320",
    "end": "859170"
  },
  {
    "text": "I will just go to s1,\nspeculatively. And then at the end of doing\nthat, at some time when p1 is",
    "start": "859170",
    "end": "866779"
  },
  {
    "text": "calculated, and I know\nwhat the p1, I said did I do it right? If I did it right, I'm good.",
    "start": "866780",
    "end": "872960"
  },
  {
    "text": "If I did something wrong,\nI have done some [UNINTELLIGIBLE] that is not useful for that. Question? AUDIENCE: [INAUDIBLE PHRASE]",
    "start": "872960",
    "end": "878700"
  },
  {
    "text": " SAMAN AMARASINGHE: So what\nhappens is there's this thing",
    "start": "878700",
    "end": "886629"
  },
  {
    "text": "called a write buffer. The complex thing is at the\nend of the day, the",
    "start": "886630",
    "end": "891940"
  },
  {
    "text": "instructions have to\nbe get committed in the order they arrive.",
    "start": "891940",
    "end": "897340"
  },
  {
    "text": "So before committing, you keep\nthe state in buffers without [UNINTELLIGIBLE]",
    "start": "897340",
    "end": "902990"
  },
  {
    "text": "into the main one. AUDIENCE: [INAUDIBLE PHRASE] SAMAN AMARASINGHE: So right\nback into memory doesn't happen until the commit point.",
    "start": "902990",
    "end": "910570"
  },
  {
    "text": "But when you read something,\nbefore reading the memory, say OK, I have updated something,\nis it in the right buffer?",
    "start": "910570",
    "end": "915650"
  },
  {
    "text": "So I read things from the\nright buffer in there. So you had to go in\norder commitment.",
    "start": "915650",
    "end": "921589"
  },
  {
    "text": "Because you can't do out of\norder commitment, that can do crazy things. You do in order commitment, but\ninside the metrics things",
    "start": "921590",
    "end": "927250"
  },
  {
    "text": "can go easier. I'm just kind of jumping\nthe gun a little bit.",
    "start": "927250",
    "end": "932400"
  },
  {
    "text": "So in a modern Nehalem\nprocessor, these are kind of",
    "start": "932400",
    "end": "937660"
  },
  {
    "text": "Intel [UNINTELLIGIBLE], so you\ndon't know exactly what it is. In some place it says it\nhas 16 clock cycles.",
    "start": "937660",
    "end": "942870"
  },
  {
    "text": "So it says it might be 16\nstages of pipeline. And another place it says 20\nto 24 stages of pipeline.",
    "start": "942870",
    "end": "950600"
  },
  {
    "text": "OK, if you work for Intel and\nsign the NDA you will get the exact number. But it doesn't matter.",
    "start": "950600",
    "end": "955839"
  },
  {
    "text": "It's a lot of pipeline\nstages, so that's all you need to know. So what happens is if you are\ndoing this in sort of five",
    "start": "955840",
    "end": "961130"
  },
  {
    "text": "stage, like what you did\nin probably beta. You do instruction decode,\ninstruction queue, pre-record",
    "start": "961130",
    "end": "969590"
  },
  {
    "text": "queue, decode, register rename, and allocate registers. And then there's thing called\nreservation and stations that",
    "start": "969590",
    "end": "977089"
  },
  {
    "text": "wait for when data's available\nto execute that instruction. And then execute, and then\nbasically go there.",
    "start": "977090",
    "end": "983730"
  },
  {
    "text": "This is what normally\ninstruction life would be, if everything goes one after\nanother after another.",
    "start": "983730",
    "end": "990060"
  },
  {
    "text": "So what to get out of this is\nthe pipelines are long.",
    "start": "990060",
    "end": "996260"
  },
  {
    "text": "So pipeline stores and stuff\ncan be expensive. So the other thing you can\ndo in abstract way",
    "start": "996260",
    "end": "1002490"
  },
  {
    "text": "is do multiple issue. So if you do pipeline, what\nhappens is you do one at a",
    "start": "1002490",
    "end": "1007610"
  },
  {
    "text": "time so you can use the pipeline\nstages nicely. How about instead of having one\nunit, if you have integer",
    "start": "1007610",
    "end": "1014000"
  },
  {
    "text": "unit and a floating\npoint unit. And every clock cycle you\ncan basically abstract. You could say look, I'm taking\ninterger instruction, I'm",
    "start": "1014000",
    "end": "1020600"
  },
  {
    "text": "taking floating point\ninstruction, and take them both together [UNINTELLIGIBLE]. And then whala, at the end of\nthe day in one clock cycle I",
    "start": "1020600",
    "end": "1026859"
  },
  {
    "text": "can [UNINTELLIGIBLE] two instructions, one integer,\none floating point, if you have two different\nsets in there.",
    "start": "1026859",
    "end": "1032329"
  },
  {
    "text": "So this is also very nice. You can get a lot of what we\ncall super scaler performance.",
    "start": "1032329",
    "end": "1039050"
  },
  {
    "text": "However, it's called instruction\nlevel parallelism. There's a lot of problems, also\nthings that you worry.",
    "start": "1039050",
    "end": "1044529"
  },
  {
    "text": "Well first of all, you have to\nhave enough instruction in level parallel. Because the instruction you get\nis the sequence history,",
    "start": "1044530",
    "end": "1050230"
  },
  {
    "text": "and you see one after another. I mean you write your\nprogram and compile. It looks like you run one\ninstruction, finish it, run",
    "start": "1050230",
    "end": "1056840"
  },
  {
    "text": "another, run another. So in order to form parallely,\nyou're to find things. You can actually do parallel. That takes time.",
    "start": "1056840",
    "end": "1064950"
  },
  {
    "text": "And of course, between hardware\nand software you are to maintain that preserve order\nof instructions, because",
    "start": "1064950",
    "end": "1071300"
  },
  {
    "text": "you want to make sure that it\nlooks like and it feels like you ran one after another\nafter another. You don't want things to run in\na haphazard way and create",
    "start": "1071300",
    "end": "1078309"
  },
  {
    "text": "arbitrary result. And so you have to, again,\nthings like this, data dependences, control dependences\nhave to be",
    "start": "1078310",
    "end": "1084210"
  },
  {
    "text": "satisfied when you're getting\nthis parallelism. So data dependency, there's a\nhazard, and determining which",
    "start": "1084210",
    "end": "1094070"
  },
  {
    "text": "order you can run things. So for example, output\ndependence. Say look, I can't just\nrun them parallel. I have to make one after\nanother after another.",
    "start": "1094070",
    "end": "1100480"
  },
  {
    "text": "You're to get all those\nthings done. And also if you're lot of\ndependency kind of gives you bounds, how much parallelism\nyou can get.",
    "start": "1100480",
    "end": "1106909"
  },
  {
    "text": "If things are all one dependent\nagainst one after another, you can't run\nthem parallel. You have to wait to run\nthings to another one.",
    "start": "1106910",
    "end": "1112390"
  },
  {
    "text": "So by looking at data\ndependence, as you can figure out, OK look, did I get good\nperformance, good ILT or not?",
    "start": "1112390",
    "end": "1120080"
  },
  {
    "text": "So what we want to do is exploit\nthis parallelism like we see in the program order.",
    "start": "1120080",
    "end": "1125900"
  },
  {
    "text": "And basically make sure that\nyou always get the same result on that.",
    "start": "1125900",
    "end": "1132410"
  },
  {
    "text": "One way of getting parallelism\nthat is in modern process is called multimedia instruction.",
    "start": "1132410",
    "end": "1139120"
  },
  {
    "text": "It's called SIMD in academic\ncircle, something like Single Instruction Multiple Data, and\nit's called data level",
    "start": "1139120",
    "end": "1146539"
  },
  {
    "text": "parallelism, and Intel, of\ncourse, has to give the [UNINTELLIGIBLE] name\nthey call SSE, they just call it MMX.",
    "start": "1146540",
    "end": "1151870"
  },
  {
    "text": "So the idea there is\nlook, they are building this wide measure. They can easily build 128\nbit wide register.",
    "start": "1151870",
    "end": "1160810"
  },
  {
    "text": "But you most probably don't\nneed 128 bit data, because that's too big. But they can build this large.",
    "start": "1160810",
    "end": "1167740"
  },
  {
    "text": "And most will tell you about\nhappy with about 32 bit data. So what? [UNINTELLIGIBLE] wait a minute. You build this wide thing.",
    "start": "1167740",
    "end": "1173549"
  },
  {
    "text": "But you can chop it into four\npieces or eight pieces or two pieces, what you want. So here we chop that large\nthing into four pieces.",
    "start": "1173550",
    "end": "1181830"
  },
  {
    "text": "And then what you can do is in\na single instruction, you can instead of doing one large add,\nthe same type of adder,",
    "start": "1181830",
    "end": "1189610"
  },
  {
    "text": "you can add four separate\nthings. Four small parts. So you're assuring add, but\ninstead of adding 228 bit",
    "start": "1189610",
    "end": "1196030"
  },
  {
    "text": "data, what you are doing is\nadding here, four 32 bit data.",
    "start": "1196030",
    "end": "1201590"
  },
  {
    "text": "The entire architecture\nlooks very identical to an 228 bit data. It's basically to remember\nyour double",
    "start": "1201590",
    "end": "1208720"
  },
  {
    "text": "004, it's like a carry. Then just have to\ncome the carry. You don't carry from here\nto here, and do that.",
    "start": "1208720",
    "end": "1214460"
  },
  {
    "text": "So this is you're loading this\nlarge chunk, and you are just working on these things. And whala, by doing that,\nhaving the same kind of",
    "start": "1214460",
    "end": "1221800"
  },
  {
    "text": "circuitry, you get much\nbetter parallelism. And if you have like 8 bit data,\nboy, you can get lots of",
    "start": "1221800",
    "end": "1227570"
  },
  {
    "text": "parallelism. So there's all these multiple\ninstructions in there.",
    "start": "1227570",
    "end": "1234380"
  },
  {
    "text": "And so what you can do is you\ncan have a loop like this. So you can, in every situation,\nyou can add the I",
    "start": "1234380",
    "end": "1240240"
  },
  {
    "text": "to BI, and create pretty\ngood [UNINTELLIGIBLE]. So you can do one at a time. But assume you have\n32 bit values.",
    "start": "1240240",
    "end": "1248700"
  },
  {
    "text": "Instead of doing-- single\ninstruction you can load 0 to 8 3 in one go. B0 to BC in one go.",
    "start": "1248700",
    "end": "1255000"
  },
  {
    "text": "Just do the add of all four in\none, go [UNINTELLIGIBLE]. So in single time you get\nfour things done.",
    "start": "1255000",
    "end": "1261520"
  },
  {
    "text": "So this is really cool. And if you remember my first\nlecture, we showed this matrix",
    "start": "1261520",
    "end": "1268870"
  },
  {
    "text": "multiplier. If you get [UNINTELLIGIBLE] in there, you get a lot less\ninstructions executed. We got a nice [UNINTELLIGIBLE].",
    "start": "1268870",
    "end": "1276420"
  },
  {
    "text": "So I'm going down, so the top\npath I'm showing, the C code-- for that loop, and then the\nbottom half in there, I'm",
    "start": "1276420",
    "end": "1285030"
  },
  {
    "text": "showing the normal\nassembly that we [UNINTELLIGIBLE], what you see. And once you start understanding\nassembly a",
    "start": "1285030",
    "end": "1292410"
  },
  {
    "text": "little bit more, you can go\nahead and read this and see what's going on. And then if you\n[UNINTELLIGIBLE], you get a",
    "start": "1292410",
    "end": "1298360"
  },
  {
    "text": "humongous beast like this. This has unrolled\n[UNINTELLIGIBLE], whatever. And this is the kind of code\nthat we generated by",
    "start": "1298360",
    "end": "1308150"
  },
  {
    "text": "[UNINTELLIGIBLE]. And that's just much,\nmuch faster than the one on the left.",
    "start": "1308150",
    "end": "1313390"
  },
  {
    "text": " Any questions so far?",
    "start": "1313390",
    "end": "1318520"
  },
  {
    "text": "OK. So when we have this superscalar\n[UNINTELLIGIBLE],",
    "start": "1318520",
    "end": "1323980"
  },
  {
    "text": "with multiple execution, so what\nyou can do is in a clock cycle, you can do\na lot of things.",
    "start": "1323980",
    "end": "1329940"
  },
  {
    "text": "So in the [UNINTELLIGIBLE]\nprocessor, you have basically six things, six execution things\nthat can happen in one",
    "start": "1329940",
    "end": "1336665"
  },
  {
    "text": "clock cycle. It's not the same thing, so\nyou can do a data store. You can store address, load\naddress from there, and then",
    "start": "1336665",
    "end": "1347010"
  },
  {
    "text": "you can do three different\ntype of executions. There are three units in here.",
    "start": "1347010",
    "end": "1353760"
  },
  {
    "text": "In here you can do either\ninteger or SSE, add or move instruction, this unit can do\nthis kind of instruction, you",
    "start": "1353760",
    "end": "1361320"
  },
  {
    "text": "can have a floating point\nadd-in around here. This one needs to also have this\nbunch of different things",
    "start": "1361320",
    "end": "1367240"
  },
  {
    "text": "you can do. So this complex hardware, we'll\nkind of figure out, OK, if you have these instructions,\nfigure out what",
    "start": "1367240",
    "end": "1373990"
  },
  {
    "text": "of these [UNINTELLIGIBLE] are available. If the instruction is able to\nexecute, it will put it into one of these and het\nthe results out.",
    "start": "1373990",
    "end": "1380310"
  },
  {
    "text": "So if you're lucky, what you\ncan see is, you might get",
    "start": "1380310",
    "end": "1385420"
  },
  {
    "text": "about six instructions\ngoing each cycle. So if you look at the mesh\nhere, what we call clock",
    "start": "1385420",
    "end": "1392980"
  },
  {
    "text": "[UNINTELLIGIBLE] instruction,\nit could be 1/6. If you're lucky. If you can run the mesh into\nthe metal, that means",
    "start": "1392980",
    "end": "1398600"
  },
  {
    "text": "everything is working\nall the time. It's very hard to find that\nkind of program, but",
    "start": "1398600",
    "end": "1404903"
  },
  {
    "text": "[UNINTELLIGIBLE] can get something like that. That's really cool. ",
    "start": "1404904",
    "end": "1410570"
  },
  {
    "text": "So what happens is to get this\nthing, they do things called out-of-order instruction. So what that means is, issuing\nthis varying number of",
    "start": "1410570",
    "end": "1419049"
  },
  {
    "text": "instructions in the clock,\nin here, in the Nehalem processor, you can store 128\ninstructions in this core",
    "start": "1419050",
    "end": "1426860"
  },
  {
    "text": "instruction buffer. [INAUDIBLE] better name than instruction\nbuffer. If you can see that, [INAUDIBLE]\nvery far.",
    "start": "1426860",
    "end": "1433970"
  },
  {
    "text": "But [INAUDIBLE] up\nthere, sorry. ",
    "start": "1433970",
    "end": "1439770"
  },
  {
    "text": "Here. It's called reservation\nstations. So when you put it in, all\nthose [UNINTELLIGIBLE],",
    "start": "1439770",
    "end": "1446140"
  },
  {
    "text": "reformation [UNINTELLIGIBLE],\nready to get, and the minute it becomes available, that means\nall the data is ready for it to run, you can basically\nissue that and run.",
    "start": "1446140",
    "end": "1454029"
  },
  {
    "text": " So what they're doing is,\nin these hundreds of",
    "start": "1454030",
    "end": "1460590"
  },
  {
    "text": "instructions, you're figuring\nout the patterns you can run. And a minute some part is\navailable, the data becomes available, you can run that.",
    "start": "1460590",
    "end": "1468010"
  },
  {
    "text": "And so that means the program\nmight have instructions in certain order. It gets executed in very\ndifferent orders than what the",
    "start": "1468010",
    "end": "1474690"
  },
  {
    "text": "program has. So that's what call you\ncan give things like [UNINTELLIGIBLE] register, [UNINTELLIGIBLE]\ndependencies, [UNINTELLIGIBLE]",
    "start": "1474690",
    "end": "1480940"
  },
  {
    "text": "execution. And sometimes you might\nrun speculator. You might not know. You might have the data, but\nthere might be controlled",
    "start": "1480940",
    "end": "1486390"
  },
  {
    "text": "dependence. You might not know that it's\nactually is supposed to happen, but it says\nwait a minute, I have execution available.",
    "start": "1486390",
    "end": "1492430"
  },
  {
    "text": "It's not doing anything. OK, let's run it and keep the\nresults, and if it is actually useful, we'll use it.",
    "start": "1492430",
    "end": "1498830"
  },
  {
    "text": "Otherwise, we'll\nthrow it away. You can do things like that. And that's a speculation. So another type of\nspeculation--",
    "start": "1498830",
    "end": "1506580"
  },
  {
    "text": "speculation mostly means, you\nwant to do something, but you don't know whether\nyou can do it.",
    "start": "1506580",
    "end": "1512519"
  },
  {
    "text": "So how do you go about\ndoing that? The way that interprocess and\nmodern processor do, is they do a lot of predictions.",
    "start": "1512520",
    "end": "1519230"
  },
  {
    "text": "It has like this is\n[UNINTELLIGIBLE] say, look at the crystal ball and say,\naha, this is the future.",
    "start": "1519230",
    "end": "1524360"
  },
  {
    "text": "And it does that\n[UNINTELLIGIBLE] really many things. So it does things like branch\nprediction, value prediction,",
    "start": "1524360",
    "end": "1531029"
  },
  {
    "text": "prefetching. So it says, aha, I don't know\nwhere you're going, but I think you are going home\nafter the class.",
    "start": "1531030",
    "end": "1538260"
  },
  {
    "text": "And then probably if I said\nsomething like this, it's probably right for most\nof the people. And actually, no, in this class,\nmost of you, again,",
    "start": "1538260",
    "end": "1543860"
  },
  {
    "text": "will probably go to sleep after\nthe class, because of the project. So if I do that probably I do\na very good prediction.",
    "start": "1543860",
    "end": "1552160"
  },
  {
    "text": "How many of you are going to go\nto sleep after the class? Huh, my prediction\nis not that good.",
    "start": "1552160",
    "end": "1557910"
  },
  {
    "text": "OK. We'll see. ",
    "start": "1557910",
    "end": "1563540"
  },
  {
    "text": "So you can go all these kinds\nof things, identify normal behavior programs to\ndeal with that.",
    "start": "1563540",
    "end": "1569900"
  },
  {
    "text": "Ad what prefetching says is,\nif I look at what you have been taking from the money,\nthere are some patterns, and",
    "start": "1569900",
    "end": "1576610"
  },
  {
    "text": "I'm expecting you to\n[UNINTELLIGIBLE] that pattern, and I will\nbasically get the data, even though you don't ask for it,\nbecause I'm expecting you to",
    "start": "1576610",
    "end": "1583480"
  },
  {
    "text": "be doing that. It's like a very good butler who\ncan really think, you ask",
    "start": "1583480",
    "end": "1593260"
  },
  {
    "text": "something, have that ready\nfor you, basically. So by doing that, you can get\nmuch better parallelism,",
    "start": "1593260",
    "end": "1599880"
  },
  {
    "text": "because now you're not waiting\nfor that to be sure that you can do it. You're just kind of doing this,\nassuming you might be",
    "start": "1599880",
    "end": "1606350"
  },
  {
    "text": "using it, and if you do it\nreally well, you're actually going to use it. And that will be useful.",
    "start": "1606350",
    "end": "1613210"
  },
  {
    "text": "So for example, even things\nlike value prediction. Value prediction says,\n[UNINTELLIGIBLE] to get out, you know when you\ndo this complex calculation,",
    "start": "1613210",
    "end": "1620740"
  },
  {
    "text": "most of the time,\ndata is zero. You multiply and add a lot of\nzeroes, and if you're doing",
    "start": "1620740",
    "end": "1626670"
  },
  {
    "text": "spreadsheets, all it is\n[UNINTELLIGIBLE] calculations. So if I don't know the value,\nlet me assume it's 0.",
    "start": "1626670",
    "end": "1633440"
  },
  {
    "text": "And that actually works\nmost of the time. Or you look at the last couple\nof times, what has happened to that [UNINTELLIGIBLE],\nand there,",
    "start": "1633440",
    "end": "1638940"
  },
  {
    "text": "let me predict something. And people to find these kind\nof things that are a lot of patterns in [UNINTELLIGIBLE]\nprogram.",
    "start": "1638940",
    "end": "1643960"
  },
  {
    "text": "And if it works, that's\nreally great. So in speculation, what you do\nis first issue and execute.",
    "start": "1643960",
    "end": "1652820"
  },
  {
    "text": "As if the branch was-- I already knew where it is\ngoing, just by using the prediction. And if I just know dynamic\nscheduling, I am only doing",
    "start": "1652820",
    "end": "1659950"
  },
  {
    "text": "[UNINTELLIGIBLE] issues, I am not going to\nexecute until I know everything is [UNINTELLIGIBLE]. So it's speculation goes\none step beyond.",
    "start": "1659950",
    "end": "1668030"
  },
  {
    "text": "It's what we call a data\nflow execution model, the dynamic schedule. And that means, the minute the\ndata is ready and everything",
    "start": "1668030",
    "end": "1674690"
  },
  {
    "text": "is ready, you can execute, even\nthough it might not mean the same mode of the program. It might be much later\ninstruction.",
    "start": "1674690",
    "end": "1680090"
  },
  {
    "text": "But implicitly, you\ncan execute that. So again, the [UNINTELLIGIBLE]",
    "start": "1680090",
    "end": "1685610"
  },
  {
    "text": "pipeline, you can do\n20 to 24 stage or 16, whatever is correct.",
    "start": "1685610",
    "end": "1691429"
  },
  {
    "text": "The other thing it does is\nthis crazy thing called micro-ops that puts everybody\nout to a loop.",
    "start": "1691430",
    "end": "1697770"
  },
  {
    "text": "So what happened was-- this\nis kind of historical-- Intel, a long time ago, came up\nwith the x86 architecture.",
    "start": "1697770",
    "end": "1704262"
  },
  {
    "text": "They came up with this\ninstruction set. That instruction set is called\na CISC instruction set.",
    "start": "1704262",
    "end": "1709960"
  },
  {
    "text": "It's a complex instruction\nset architecture. What that means is there are\nthese instructions there are",
    "start": "1709960",
    "end": "1715890"
  },
  {
    "text": "that are really,\nreally complex. You can move an entire string\nfrom one place to another in",
    "start": "1715890",
    "end": "1721840"
  },
  {
    "text": "one instruction. The problem is, most\ninstructions cannot be done in one cycle.",
    "start": "1721840",
    "end": "1728750"
  },
  {
    "text": "So what modern [UNINTELLIGIBLE] did was, they built a\n[UNINTELLIGIBLE] compiler into the hardware.",
    "start": "1728750",
    "end": "1734740"
  },
  {
    "text": "So what happens inside this\nprocess is, take this CISC instruction and compile them\ndown to these particular",
    "start": "1734740",
    "end": "1740759"
  },
  {
    "text": "micro-operations, that each\noperation is small can be done in basically one cycle.",
    "start": "1740760",
    "end": "1746179"
  },
  {
    "text": "So it's doing this\nmapping in there. And then inside the computer,\nit's basically dealing with micro-ops.",
    "start": "1746180",
    "end": "1752060"
  },
  {
    "text": "So up to here, it's dealing with\nthese long instructions,",
    "start": "1752060",
    "end": "1760420"
  },
  {
    "text": "and here it's precoding and\ndecoding into micro-ops. So after that, so what that\nmeans, every cycle, it can",
    "start": "1760420",
    "end": "1767510"
  },
  {
    "text": "issue 6 micro-ops. So there might be 6 instructions\nyou know, 3, or",
    "start": "1767510",
    "end": "1773540"
  },
  {
    "text": "even 1, depending on how many\nmicro-ops [UNINTELLIGIBLE]. So if you look at instruction\nmanual in the [UNINTELLIGIBLE], you can\nsee how many micro-op",
    "start": "1773540",
    "end": "1780970"
  },
  {
    "text": "[UNINTELLIGIBLE] instruction\nit's going into, and if it's large, that means those\ninstructions are slow.",
    "start": "1780970",
    "end": "1786000"
  },
  {
    "text": "And you can have this 120\nmicro-op waiting to be executed, sitting in this\nreservation station.",
    "start": "1786000",
    "end": "1794919"
  },
  {
    "text": "Basically, they are\nwaiting there. The minute the data is\navailable, and then a slot available, it will go down, get\nexecuted, and come back.",
    "start": "1794920",
    "end": "1800790"
  },
  {
    "text": " So branch prediction,\nbasically--",
    "start": "1800790",
    "end": "1806750"
  },
  {
    "text": "the problem with branches is\nif you have this very nice pipeline, what happens is,\nbranch target is not known",
    "start": "1806750",
    "end": "1814670"
  },
  {
    "text": "until this target\ndetection time. Where is my mouse? OK. Until this point, I don't know\nwhether the branch, where I am",
    "start": "1814670",
    "end": "1820960"
  },
  {
    "text": "supposed to go. And so how do I go ahead and get\nthe instruction, because I don't know where I'm going\nuntil this point.",
    "start": "1820960",
    "end": "1827290"
  },
  {
    "text": "Even worse, I might not\neven know address. Some [UNINTELLIGIBLE] you are going AOB, you are\ntaken or not taken.",
    "start": "1827290",
    "end": "1832690"
  },
  {
    "text": "But sometimes there might\nbe [UNINTELLIGIBLE] branches. I don't even, if I'm returning\nthe return address in the stack.",
    "start": "1832690",
    "end": "1837990"
  },
  {
    "text": "Until I go fit the stack and\nload it and all those things, I don't know where I'm\ngoing, so I had to",
    "start": "1837990",
    "end": "1844320"
  },
  {
    "text": "wait until this point. So if I do it, basically\nI have to wait until this pipeline. All these things are\ngoing to stalled.",
    "start": "1844320",
    "end": "1850510"
  },
  {
    "text": "Nothing happens in here. This is first stage. You can have a interested\npipeline. You are waiting 20 stages, just\nstalled, doing nothing.",
    "start": "1850510",
    "end": "1857730"
  },
  {
    "text": "And then there's superscalar\nplus 20. So that means 20 cycles without\nthe [? 6 issues ?]",
    "start": "1857730",
    "end": "1863210"
  },
  {
    "text": "you can do. So 6 plus 20 is 120 possible\ninstructions wasted, and it's",
    "start": "1863210",
    "end": "1871230"
  },
  {
    "text": "a lot of waste. So you don't want to do that. So what you do is, you build a\npredictor to figure out which",
    "start": "1871230",
    "end": "1876919"
  },
  {
    "text": "direction the brand is going. And depending on what the\npredictor do, and the neat thing is, these days, these\npredictions are",
    "start": "1876920",
    "end": "1882470"
  },
  {
    "text": "really, really good. They can predict up to 99 points\nplus [UNINTELLIGIBLE]",
    "start": "1882470",
    "end": "1887520"
  },
  {
    "text": "where you're going. So it's like me telling you,\nyou guys are all going to sleep afterwards, and this\nis going to sleep on me.",
    "start": "1887520",
    "end": "1892910"
  },
  {
    "text": " So what you can predict,\nI will say, aha!",
    "start": "1892910",
    "end": "1900150"
  },
  {
    "text": "I tell you, you are going\nin that direction. This is like going to\n[UNINTELLIGIBLE]. I think you're going\nthat direction, and",
    "start": "1900150",
    "end": "1906299"
  },
  {
    "text": "then you just go there. And 99% of the time, you're OK,\nand when [UNINTELLIGIBLE]",
    "start": "1906300",
    "end": "1912440"
  },
  {
    "text": "finally decided, you can say,\noh, that was slight. If you're wrong, you squash\neverything and restart.",
    "start": "1912440",
    "end": "1918460"
  },
  {
    "text": "And so modern predictors are\nthis very complicated beast. It looks at things like what\nhappened previously.",
    "start": "1918460",
    "end": "1925470"
  },
  {
    "text": "It looks at [UNINTELLIGIBLE]\ncall stack where are the call stack, what went into\nthe call stack. And then when you're returning,\nyou can predict",
    "start": "1925470",
    "end": "1931830"
  },
  {
    "text": "where we might be returning. A lot of different things go in\nthere, and in fact, we see the core microarchitecture that\ncame before Nehalem's",
    "start": "1931830",
    "end": "1939600"
  },
  {
    "text": "predictor, and Nehalem\n[UNINTELLIGIBLE], oh, it even has more things, and so it's\neven more different. So these guys are doing\nthese complex things.",
    "start": "1939600",
    "end": "1946480"
  },
  {
    "text": "What that means is, sometimes\nit affects program in a way",
    "start": "1946480",
    "end": "1951790"
  },
  {
    "text": "that you think, oh, huh, this is\nsomething that I don't know what might happen. [UNINTELLIGIBLE] this condition, I might not\nknow what might happen.",
    "start": "1951790",
    "end": "1957889"
  },
  {
    "text": "But model prediction sometimes\nsurprises you. Aha, I know there's a pattern,\nI recognize that pattern, and",
    "start": "1957890",
    "end": "1963270"
  },
  {
    "text": "I go about that. And every architecture, I try\ndifferent kinds of patterns, and I find the architectures\nget better and better.",
    "start": "1963270",
    "end": "1969050"
  },
  {
    "text": "So for example, at some point,\nif you go odd-even, odd-even branches, if you assume I have\na loop, I say, if i is odd,",
    "start": "1969050",
    "end": "1977350"
  },
  {
    "text": "going one direction,\notherwise not. Pentium 3 type thing, OK. It just screw up\n[UNINTELLIGIBLE]",
    "start": "1977350",
    "end": "1983040"
  },
  {
    "text": "with every time it's doing\nsomething different. I don't know what's going on. [UNINTELLIGIBLE] Pentium I'd probably say aha,\nthere's a pattern, odd-even, odd-even, it figure out.",
    "start": "1983040",
    "end": "1989730"
  },
  {
    "text": "I core 2 figures out things like\nevery third, every fourth type pattern it figures out. And then things get\nbetter and better.",
    "start": "1989730",
    "end": "1996510"
  },
  {
    "text": "There's very complicated\npatterns you do, these guys manage to figure out. Which is kind of fun, to\nsee what it can figure",
    "start": "1996510",
    "end": "2002600"
  },
  {
    "text": "out, what it can't. By writing a very small program,\nyou can get that. I show some of that.",
    "start": "2002600",
    "end": "2008980"
  },
  {
    "text": "So the next thing that you have\nto worry about is the memory system.",
    "start": "2008980",
    "end": "2014130"
  },
  {
    "text": "So the memory system, if you\nwant to be the computer, what you want to do is have a\nlot of very fast memory",
    "start": "2014130",
    "end": "2019550"
  },
  {
    "text": "very close to you. You can do that. It's going to be\nvery expensive. Sometimes through SQL you\ncan't even attain that,",
    "start": "2019550",
    "end": "2025190"
  },
  {
    "text": "because by the time you build a\nlot of things, it's actually already far away from\nyou, because we are running very fast here.",
    "start": "2025190",
    "end": "2030910"
  },
  {
    "text": "So the way you deal with that\nis building caches. That means you keep a small\namount of things close to you",
    "start": "2030910",
    "end": "2036522"
  },
  {
    "text": "in there, and you put things\nin that cache in a way that hopefully, those are\nthe things you",
    "start": "2036522",
    "end": "2042720"
  },
  {
    "text": "will be using anyways. So it works very nicely. So the reason that can be done\nis in programming, when you",
    "start": "2042720",
    "end": "2051210"
  },
  {
    "text": "run a program, there are two\ntypes of behaviors that it [UNINTELLIGIBLE] to\ntake advantage of. One thing is called\ntemporal locality.",
    "start": "2051210",
    "end": "2057940"
  },
  {
    "text": "What that means is, most\nprograms, if you use you some data, there's a good chance you\nare going to use the same",
    "start": "2057940",
    "end": "2064149"
  },
  {
    "text": "data very soon. Because normally, there's a\nthing called a working set.",
    "start": "2064150",
    "end": "2069800"
  },
  {
    "text": "I am working with a certain\nset of data. I'm basically touching these\nthings again and again. So if I use that, I'm going\nto use that data again.",
    "start": "2069800",
    "end": "2075840"
  },
  {
    "text": "So that means I want to keep the\ndata that I used close by. Other one is called\nspecial locality.",
    "start": "2075840",
    "end": "2082290"
  },
  {
    "text": "That means, if I use some\ndata, I have a very good chance that I might be using\na neighboring data item.",
    "start": "2082290",
    "end": "2089609"
  },
  {
    "text": "Because if I am accessing a\nstructure or an array, if I'm accessing something, I\nmight be accessing a",
    "start": "2089610",
    "end": "2094629"
  },
  {
    "text": "[UNINTELLIGIBLE] neighbor\nthing next. So there's what's called\npartial locality. And taking advantage of these\ntwo, you can build this very",
    "start": "2094630",
    "end": "2102290"
  },
  {
    "text": "fast memory system that feels\nlike you have a huge amount of memory very close to you. Of course, the opposite\nis true.",
    "start": "2102290",
    "end": "2108070"
  },
  {
    "text": "If your program doesn't behave\nlike that, it looks like you have lots of memory very far\nfrom you, and the program",
    "start": "2108070",
    "end": "2113900"
  },
  {
    "text": "becomes very, very slow. ",
    "start": "2113900",
    "end": "2120339"
  },
  {
    "text": "Because memories didn't speed\nup as fast as processors. So what that means is, every\ngeneration, the memory",
    "start": "2120340",
    "end": "2127660"
  },
  {
    "text": "[UNINTELLIGIBLE] further and\nfurther away, slower and slower and slower. And this is how we manage\nto keep the",
    "start": "2127660",
    "end": "2133220"
  },
  {
    "text": "machines running fast. So if you look at what's going\non every level, I just gave",
    "start": "2133220",
    "end": "2139700"
  },
  {
    "text": "you a diagram. I won't go through detail. You can look at it later. There are caches, and higher\nlevels you can",
    "start": "2139700",
    "end": "2146570"
  },
  {
    "text": "only keep very small. And one like [UNINTELLIGIBLE],\nyou can only keep a couple of hundred bytes in\nthe registers. But very fast exercise.",
    "start": "2146570",
    "end": "2153020"
  },
  {
    "text": "Then you go to cache. I see on-chip stuff. We can keep a little bit more,\naccess time go down, and then",
    "start": "2153020",
    "end": "2158490"
  },
  {
    "text": "finally when you go to main\nmemory, you can keep a huge amount, slow access. And even at the end, something\nlike tape, you can keep a huge",
    "start": "2158490",
    "end": "2165950"
  },
  {
    "text": "amount of stuff. Almost infinite amount\nof stuff. But it takes hours to get\nthe tape access is not",
    "start": "2165950",
    "end": "2172250"
  },
  {
    "text": "[UNINTELLIGIBLE]. So there's this hierarchy, and\nthere are a certain amount things you want.",
    "start": "2172250",
    "end": "2177550"
  },
  {
    "text": "You are using [UNINTELLIGIBLE] very fast. You don't want to\nput it in tape. But you know something that you\nmight access in a year,",
    "start": "2177550",
    "end": "2183130"
  },
  {
    "text": "that's probably a good\nplace to put it. So there's this hierarchy\nthere. And then you have cache, what\nhappens is, you want to give",
    "start": "2183130",
    "end": "2192390"
  },
  {
    "text": "the illusion everything is\nthere, but when you go to access it, the data might\nnot be there.",
    "start": "2192390",
    "end": "2197430"
  },
  {
    "text": "There are many reasons it might\nnot be there, so let's go through some of\nthe reasons. So one thing is called\ncold miss.",
    "start": "2197430",
    "end": "2203610"
  },
  {
    "text": "That means it's the first time\nI've seen that data. So it cannot be in the cache. If it's the first time I was\nasking the disk, it's probably",
    "start": "2203610",
    "end": "2209990"
  },
  {
    "text": "sitting very back in main\nmemory, or somewhere in the disk, and I have to go get it. One way to get around this\nproblem is prefetching.",
    "start": "2209990",
    "end": "2217910"
  },
  {
    "text": "So if I keep accessing\nthis I say, aha. You're accessing this\nin this pattern. And there's a good probability\nthe next pattern is here, and",
    "start": "2217910",
    "end": "2225250"
  },
  {
    "text": "OK, go get it very fast, because\nyou're coming in that sort of direction. So by doing prefetching, you\nmight be able to get rid of",
    "start": "2225250",
    "end": "2231230"
  },
  {
    "text": "[UNINTELLIGIBLE] is happening. Then there's a thing called\ncapacity miss. What that means is, you're\naccessing a lot of data.",
    "start": "2231230",
    "end": "2238550"
  },
  {
    "text": "At some point, you have\naccessed enough data, everything you accessed cannot\nbe fit in the cache, and you",
    "start": "2238550",
    "end": "2245109"
  },
  {
    "text": "have to throw out some of the\ndata to put the next one. So most caches use the\na policy called least recently used.",
    "start": "2245110",
    "end": "2250960"
  },
  {
    "text": "That means the data that you\nunpacked for the longest time gets thrown out of the cache.",
    "start": "2250960",
    "end": "2256860"
  },
  {
    "text": "But the problem is, at some\npoint, you're going to come back to it. And if you come back to it after\na long time, that thing",
    "start": "2256860",
    "end": "2263410"
  },
  {
    "text": "has been out of that\nlevel of cache. This happened at every level. So what that means is, you have\na thing called a working set, that you keep working\nagain and using.",
    "start": "2263410",
    "end": "2270770"
  },
  {
    "text": "If the working set is a little\nbit larger than the cache, when you come back to that,\nthe data is gone.",
    "start": "2270770",
    "end": "2275780"
  },
  {
    "text": "It's not in the cache. So you want to kind of create a\nworking set that fits in the cache nicely, at ever\nlevel, basically.",
    "start": "2275780",
    "end": "2281849"
  },
  {
    "text": "You can do something like\npre-fetching and gets around it, but if you can avoid\n[UNINTELLIGIBLE], that's really nice.",
    "start": "2281850",
    "end": "2288005"
  },
  {
    "text": "Then there's a thing called\na conflict miss. One way of cache work-- it\ndoesn't let you store",
    "start": "2288005",
    "end": "2297640"
  },
  {
    "text": "everything in every location. Sometimes there are some\nlocations in cache",
    "start": "2297640",
    "end": "2303570"
  },
  {
    "text": "[UNINTELLIGIBLE] associated with it. Did you get [UNINTELLIGIBLE]\nassociated in 004?? ",
    "start": "2303570",
    "end": "2310960"
  },
  {
    "text": "Associativity? OK. Again, I will talk about cache\nassociated [UNINTELLIGIBLE], but I'm going to talk about\nmemory system later and",
    "start": "2310960",
    "end": "2317500"
  },
  {
    "text": "[UNINTELLIGIBLE] there. And what that means is, this\nis a really bad behavior, because you are only accessing\na small amount of things, but",
    "start": "2317500",
    "end": "2328180"
  },
  {
    "text": "all of the data, all\nthe aggregate can't fit into the cache. The pattern makes it only fit\ninto a small part of the",
    "start": "2328180",
    "end": "2333970"
  },
  {
    "text": "cache, so you had to\nthrow the data out. I'll get back to this. I'm just going to\nput it there. And then in a multiprocess\nsystem, [UNINTELLIGIBLE]",
    "start": "2333970",
    "end": "2341339"
  },
  {
    "text": "multicourse, there's a thing\ncalled true sharing. That means I [UNINTELLIGIBLE]\ndata [UNINTELLIGIBLE], and the next time [UNINTELLIGIBLE]",
    "start": "2341340",
    "end": "2346740"
  },
  {
    "text": "want to trust the data. So I have to give the data to\nyou, so you're getting cache. And then when I want to use my\ndata, it's [UNINTELLIGIBLE].",
    "start": "2346740",
    "end": "2352560"
  },
  {
    "text": "I have to get it back to me. So I'm kind of using data back\nand forth, back and forth. So that's called true sharing.",
    "start": "2352560",
    "end": "2359800"
  },
  {
    "text": "And a more hideous form of that\nis called false sharing. That means most of the data\nis in a cache line.",
    "start": "2359800",
    "end": "2367130"
  },
  {
    "text": "When you move data you\nmove the cache line. So what I'm doing, is I'm using\nmy data myself, and you",
    "start": "2367130",
    "end": "2373995"
  },
  {
    "text": "are using some other data, but\nunfortunately, they're in the same cache line. So when I say, OK, I want my\ndata, I get the entire cache",
    "start": "2373995",
    "end": "2381300"
  },
  {
    "text": "line, including your\ndata, and then you want to use your data. You say, oops, it's\nnot with me.",
    "start": "2381300",
    "end": "2386480"
  },
  {
    "text": "And I then that means\nyou [UNINTELLIGIBLE] go to you, and at that\npoint, I don't have my data in my cache.",
    "start": "2386480",
    "end": "2392330"
  },
  {
    "text": "So this data is going\nback and forth. Even though I never touch your\ndata, we have two separate",
    "start": "2392330",
    "end": "2397720"
  },
  {
    "text": "data, but it's going back. I will get this things in a\nlot more detail in later lectures, so this is kind\nof giving [INAUDIBLE].",
    "start": "2397720",
    "end": "2403760"
  },
  {
    "text": "So there are all of these\ndifferent ways that the data can be not in the cache.",
    "start": "2403760",
    "end": "2408770"
  },
  {
    "text": "So here is what the\nprocessor you are",
    "start": "2408770",
    "end": "2414350"
  },
  {
    "text": "working with looks like. There are 6 cores, and there\nare L1 separate instruction and data caches, and then\nthere's L2 unified cache,",
    "start": "2414350",
    "end": "2422950"
  },
  {
    "text": "[UNINTELLIGIBLE] L3 cache or [UNINTELLIGIBLE],\nand then there's main memory. So it's even this deep,\ndeep, deep cache",
    "start": "2422950",
    "end": "2429830"
  },
  {
    "text": "hierarchy going on then. And then right-hand side, I kind\nof showed the difference. And the interesting thing to\nrealize is, the L1 cache",
    "start": "2429830",
    "end": "2438690"
  },
  {
    "text": "delays about 4 nanoseconds. It gets a little bit, 2 1/2\ntimes slower when you go to L2",
    "start": "2438690",
    "end": "2448550"
  },
  {
    "text": "cache, and [? 12 ?] times\nslower when you go to L3 cache, and even more slow when\nyou go to main memory.",
    "start": "2448550",
    "end": "2455540"
  },
  {
    "text": "So every time you go down,\nit gets slower and slower and slower. That's basically the\ngist of it in here.",
    "start": "2455540",
    "end": "2461130"
  },
  {
    "text": " Question?",
    "start": "2461130",
    "end": "2466404"
  },
  {
    "text": "AUDIENCE: Each core has two L1\ncache for instructions and [INAUDIBLE]? SAMAN AMARASINGHE: And\ninstruction data.",
    "start": "2466404",
    "end": "2472780"
  },
  {
    "text": "So instruction goes\none direction, data goes in one direction. So next I want to talk a little\nbit about profiling.",
    "start": "2472780",
    "end": "2480900"
  },
  {
    "text": "So predictor who is\ngoing to be-- the first part of the predictor is all about profiling.",
    "start": "2480900",
    "end": "2487360"
  },
  {
    "text": "Profiling is very important,\nbecause you run a program. It doesn't do well. So how do you know\nwhat's going on?",
    "start": "2487360",
    "end": "2495750"
  },
  {
    "text": "First of all, you do know, even\nif it's not doing well. And if it's not doing well,\nwhat's the reason? So just having one number,\nthat then saying it's",
    "start": "2495750",
    "end": "2503529"
  },
  {
    "text": "[UNINTELLIGIBLE] in 10 minutes,\n[UNINTELLIGIBLE] 5 minutes, doesn't tell\nyou too much. You know what to look if you\nhave a large program.",
    "start": "2503530",
    "end": "2509150"
  },
  {
    "text": "The profiling means going,\nlooking at what the program is doing to get an understanding\nin there.",
    "start": "2509150",
    "end": "2515310"
  },
  {
    "text": "So what you want to do was\ncollect this performance data while running the application,\nand then if you're a large",
    "start": "2515310",
    "end": "2523260"
  },
  {
    "text": "application, you want to\norganize and display data in that a variety of ways, and a\nlot of times, relate that data",
    "start": "2523260",
    "end": "2531109"
  },
  {
    "text": "to source code, and see\nwhat that means in the [UNINTELLIGIBLE] code. And hopefully by looking at this\none, you can identify,",
    "start": "2531110",
    "end": "2536619"
  },
  {
    "text": "ha, there's a problem here. So there are a bunch of tools.",
    "start": "2536620",
    "end": "2542130"
  },
  {
    "text": "Intel Vtune, gprof,\noprofile, perf. So you guys are going to use\nmainly perf, and we will",
    "start": "2542130",
    "end": "2549170"
  },
  {
    "text": "probably talk a little\nbit about gprof.",
    "start": "2549170",
    "end": "2554970"
  },
  {
    "text": "And next time when you come,\nnext lecture we'll talk about this a lot more.",
    "start": "2554970",
    "end": "2560269"
  },
  {
    "text": "So profiling is mainly to find\nwhere in an application or a",
    "start": "2560270",
    "end": "2565690"
  },
  {
    "text": "system there is a significant\namount of activity. And when the significant amount\nof activity you want to",
    "start": "2565690",
    "end": "2570710"
  },
  {
    "text": "know whether those activity can\nbe avoided, or there's a problem here. So there are some\n[UNINTELLIGIBLE]",
    "start": "2570710",
    "end": "2577700"
  },
  {
    "text": "significant to what's there,\nit could be anywhere. It might be addressed\nin the memory,",
    "start": "2577700",
    "end": "2583359"
  },
  {
    "text": "something might be happening. It might be in the\n[UNINTELLIGIBLE] system, some kind of process in\nthe operating system might",
    "start": "2583360",
    "end": "2589569"
  },
  {
    "text": "be happening in one thread, it\nmight be happening in an executable file or a module. If you know the symbol of\nsomething, you can say, oh,",
    "start": "2589570",
    "end": "2596340"
  },
  {
    "text": "huh, that mode, that actually\nis this function, and if you know even more information about\nthe program, you can",
    "start": "2596340",
    "end": "2601692"
  },
  {
    "text": "say, aha, that's false,\nand in fact it's this line of the program. So you get this information from\nthe application when you",
    "start": "2601692",
    "end": "2607900"
  },
  {
    "text": "compile that you can say debug\ninformation, say aha, this happens in this line\nof the program that's having this problem.",
    "start": "2607900",
    "end": "2613880"
  },
  {
    "text": "So you can break it down and\nget that info like that. [PHONE RINGING]",
    "start": "2613880",
    "end": "2619030"
  },
  {
    "text": "Somebody's trying to call me. Hold on. OK. Secondly, we care about\nsignificant activity.",
    "start": "2619030",
    "end": "2625500"
  },
  {
    "text": "If the activity just happened\nonly a few times, happened only nanoseconds of execution\ntime, who cares?",
    "start": "2625500",
    "end": "2632039"
  },
  {
    "text": "You don't want to do that. You want to focus on\nthings that matter. And the key thing about\nthis [UNINTELLIGIBLE].",
    "start": "2632040",
    "end": "2638060"
  },
  {
    "text": "If you spend most of your time\nin insignificant things, you would get insignificant\nperformance improvement.",
    "start": "2638060",
    "end": "2643599"
  },
  {
    "text": "If you found the significant\npart and work on that, you can get significant gains. So the key thing is to find\nthe significant ones.",
    "start": "2643600",
    "end": "2649039"
  },
  {
    "text": "[PHONE RINGING] Excuse me. ",
    "start": "2649040",
    "end": "2660290"
  },
  {
    "text": "OK. And the final activity. ",
    "start": "2660290",
    "end": "2666680"
  },
  {
    "text": "So activity means time is spent\nin doing something, and some activities are bad ones. Like if you actually do running",
    "start": "2666680",
    "end": "2672770"
  },
  {
    "text": "instruction, that's good. If your running is useful\ninstruction, a long time, you're OK. But you might doing actually\n[UNINTELLIGIBLE],",
    "start": "2672770",
    "end": "2679040"
  },
  {
    "text": "[UNINTELLIGIBLE] [? misprediction ?], stuff like that, that's bad activity. You [UNINTELLIGIBLE] say, aha. I am spending a lot of time\ndoing something that I can",
    "start": "2679040",
    "end": "2685620"
  },
  {
    "text": "avoid, and how do\nI avoid that? So that's what you\nwant to look at. And you have two ways of doing\nthat, and I want to give you",
    "start": "2685620",
    "end": "2694190"
  },
  {
    "text": "an analogy to figure\nout what it is. So assume you are going,\nvisiting a bunch",
    "start": "2694190",
    "end": "2699790"
  },
  {
    "text": "of different places. You're on a city tour. You are visiting different\nparts of the city.",
    "start": "2699790",
    "end": "2705920"
  },
  {
    "text": "And I want to figure out,\nwhere do you spend most of your time?",
    "start": "2705920",
    "end": "2712440"
  },
  {
    "text": "And that's a hard problem,\nbecause I am sitting in my office, and say, OK, you're\ngoing [UNINTELLIGIBLE]",
    "start": "2712440",
    "end": "2717630"
  },
  {
    "text": "the city. I want to figure out where you\nspend most of the time. I have two ways of doing that. I'm a busy person.",
    "start": "2717630",
    "end": "2722925"
  },
  {
    "text": "What I can do is every 30\nminutes, I can call you and say, where are you? And you say, OK, I'm in this\nlibrary, I'm in this--",
    "start": "2722925",
    "end": "2729230"
  },
  {
    "text": "and then at that point, I can\nhave a histogram and say, he's still in the library. And I can call again,\nwhere are you?",
    "start": "2729230",
    "end": "2734260"
  },
  {
    "text": "And I can log that. And at some point, at the end\nof the day, I'll have a histogram saying, every time I\ncall, you found something.",
    "start": "2734260",
    "end": "2740820"
  },
  {
    "text": "If you spend a lot of time in\nthe science museum, I will have a bunch of\n[UNINTELLIGIBLE]. We'll see [UNINTELLIGIBLE]",
    "start": "2740820",
    "end": "2746080"
  },
  {
    "text": "become then, and if you are not\n[UNINTELLIGIBLE], if you have only one [UNINTELLIGIBLE]",
    "start": "2746080",
    "end": "2751470"
  },
  {
    "text": "find out, OK, you're not\nspending time there. That's one way to do that.",
    "start": "2751470",
    "end": "2756599"
  },
  {
    "text": "Let's go [UNINTELLIGIBLE] saying, for every landmark, I\ncreate a telephone booth.",
    "start": "2756600",
    "end": "2762570"
  },
  {
    "text": "And every time you enter a\nlandmark, you [UNINTELLIGIBLE] the telephone booth, you've got\nto call an operator and say what time it is, so\n[UNINTELLIGIBLE].",
    "start": "2762570",
    "end": "2768850"
  },
  {
    "text": "And then you call me and say,\naha, I'm entering this landmark, the time now is 5:50,\nand I write it down. And every time you exit the\nlandmark, you call me and say,",
    "start": "2768850",
    "end": "2775510"
  },
  {
    "text": "I'm exiting this landmark. Time now is-- I write it down. OK? These are kind of two\nways of doing that.",
    "start": "2775510",
    "end": "2780640"
  },
  {
    "text": "That's like an instrumentation\nsolution. So the sampling collector-based\nperiodically",
    "start": "2780640",
    "end": "2786580"
  },
  {
    "text": "interupt the processor and look\nat where you are, and depending on where you are,\nyou can mark that off.",
    "start": "2786580",
    "end": "2795030"
  },
  {
    "text": "And it's called time-based\nsampling means every time, every 100 milliseconds or\nsomething, in [UNINTELLIGIBLE]",
    "start": "2795030",
    "end": "2801190"
  },
  {
    "text": "processing, you stop and\nsay where you are. Event-based sampling means you\nare counting number of events",
    "start": "2801190",
    "end": "2808120"
  },
  {
    "text": "like cache meters. Every hundred cache meters, you\nstop and say, OK, where has this happened?",
    "start": "2808120",
    "end": "2813180"
  },
  {
    "text": "Of course, if the cache misses\nhappen in a regular pattern, you might be in trouble, because\nevery hundred, you might be the same place, then\nyou would get a skewed number.",
    "start": "2813180",
    "end": "2820130"
  },
  {
    "text": "But most probably, there's\na statistical variation in there. You can get [? account index ?] and figure out where these\nthings happen.",
    "start": "2820130",
    "end": "2826300"
  },
  {
    "text": "So if you're looking at where\nall the cache [UNINTELLIGIBLE] is happening, you don't look at\nevery miss, because there are millions of miss. Every 10,000 miss, you figure\nout where you are, and",
    "start": "2826300",
    "end": "2833740"
  },
  {
    "text": "statistically, one is missing\nmany times, that will adapt in that column.",
    "start": "2833740",
    "end": "2839550"
  },
  {
    "text": "And nice thing about\nthat is, there's nothing you need to do. Now installation, no changes to\napplication you need to do.",
    "start": "2839550",
    "end": "2846944"
  },
  {
    "text": "[UNINTELLIGIBLE] here, you know\nhow to go in changes, phone booth everywhere. Wide coverage.",
    "start": "2846944",
    "end": "2853100"
  },
  {
    "text": "You can cover everything. So that means, assume you\ninstall phone booth in all the",
    "start": "2853100",
    "end": "2858550"
  },
  {
    "text": "fixed landmarks, but there's a\nservice [UNINTELLIGIBLE] down. I didn't see. I don't have a phone\nbooth there. But here, if I'm calling you,\nI know I'm [UNINTELLIGIBLE]",
    "start": "2858550",
    "end": "2865550"
  },
  {
    "text": "you, anyplace you are, I will\ncover, even though I haven't anticipated that point.",
    "start": "2865550",
    "end": "2870960"
  },
  {
    "text": "Very low overhead, because I can\ndecide to call you every 30 minutes or call you every 1\nminute, if I really care or",
    "start": "2870960",
    "end": "2879525"
  },
  {
    "text": "worry about you, and I can\ncontrol the overhead that I'm looking at, basically.",
    "start": "2879525",
    "end": "2885410"
  },
  {
    "text": "The problem is its approximate\nposition. Because if you spend 5 hours\nat MIT and 30 seconds at",
    "start": "2885410",
    "end": "2892610"
  },
  {
    "text": "Harvard, I will never know\nthat you went to Harvard, because I might have not called\nyou while you were there at Harvard. You might think it's boring\nand come back, and I never",
    "start": "2892610",
    "end": "2899990"
  },
  {
    "text": "knew that you did that. And also, the other thing is, I\ndon't know exactly how many times you went to a place,\nbecause I might have called",
    "start": "2899990",
    "end": "2906160"
  },
  {
    "text": "you 10 times, and I found you\nin the museum of the science 10 times, but you might have\ngone there 20 times, and I",
    "start": "2906160",
    "end": "2913940"
  },
  {
    "text": "might have missed you under the\ntimes I didn't call, or you might have gone there only\nfive times and stayed for a long time, and I might have\ncalled multiple times.",
    "start": "2913940",
    "end": "2919510"
  },
  {
    "text": "I don't know that, and I don't\nknow the count of times you are gone, which is\nhard to know. ",
    "start": "2919510",
    "end": "2926140"
  },
  {
    "text": "So the main thing is there might\nbe things that are not that statistically significant\nthat you might miss.",
    "start": "2926140",
    "end": "2933340"
  },
  {
    "text": "And if you care about that,\nit's not a good bet. But most of the time we care\nabout the really statistically",
    "start": "2933340",
    "end": "2939089"
  },
  {
    "text": "significant things, so this\nis a really good method. The other part is perfect\naccuracy, because every time",
    "start": "2939090",
    "end": "2948050"
  },
  {
    "text": "you go somewhere, you have to\ncall me, and I know how many times you went to the\nmuseum of science.",
    "start": "2948050",
    "end": "2954030"
  },
  {
    "text": "I know exactly the time\nyou enter and exited a [UNINTELLIGIBLE]. I know all of those things\n[INAUDIBLE].",
    "start": "2954030",
    "end": "2959589"
  },
  {
    "text": "The problem of that is kind\nof low granularity. I can't put phone booth at every\ncorner, and if you had called me at every corner,\nit's going",
    "start": "2959590",
    "end": "2965930"
  },
  {
    "text": "to be way too expensive. So I have low granularity, very\ngood information, and also high overhead. Because if you're going in and\nout a lot to a building, you",
    "start": "2965930",
    "end": "2972980"
  },
  {
    "text": "have to call, you have\nto stop and call, it's very high overhead. And there's not much of a way\nfor me to control that.",
    "start": "2972980",
    "end": "2978079"
  },
  {
    "text": "And it's also high touch. That means I have to build all\nthat infrastructure, I have to go and modify your application,\nbasically, in",
    "start": "2978080",
    "end": "2984830"
  },
  {
    "text": "something [UNINTELLIGIBLE] compile time application, get\nmodified to basically have all these [UNINTELLIGIBLE] installed into the\napplication.",
    "start": "2984830",
    "end": "2990740"
  },
  {
    "text": " So you can look a lot of\ndifferent types of events.",
    "start": "2990740",
    "end": "2996490"
  },
  {
    "text": "So in Intel, if you look at\ncore performance counters, there are hundreds of\nperformance counters.",
    "start": "2996490",
    "end": "3002420"
  },
  {
    "text": "And some of these performance\ncounters have no sense whatsoever. So for example, Intel has\nthis counter called",
    "start": "3002420",
    "end": "3009120"
  },
  {
    "text": "number of bogus branches. What's a bogus branch? I mean, why should Intel be\ndoing anything bogus?",
    "start": "3009120",
    "end": "3014970"
  },
  {
    "text": "It's some [UNINTELLIGIBLE] came out. But there are some counters\nthat are useful, so you're",
    "start": "3014970",
    "end": "3020676"
  },
  {
    "text": "sort of getting [UNINTELLIGIBLE] by thousands of things\navailable, we focus on things that we care about. Things like branch events,\nload store events, cache",
    "start": "3020676",
    "end": "3028119"
  },
  {
    "text": "meter, prefetchers. Those are the important things,\nand some multicore events that we can look at,\nand get some interesting",
    "start": "3028120",
    "end": "3034240"
  },
  {
    "text": "information. And a lot of times, just by\nlooking at numbers doesn't",
    "start": "3034240",
    "end": "3040730"
  },
  {
    "text": "make too much sense. You know you had $5 billion,\n$300 million branches missed.",
    "start": "3040730",
    "end": "3047290"
  },
  {
    "text": "Is it a good high or low? You have no idea. The right thing is, OK.",
    "start": "3047290",
    "end": "3052660"
  },
  {
    "text": "[UNINTELLIGIBLE] to number of instruction\nexecuted how much it would be. The most important numbers\nare ratios.",
    "start": "3052660",
    "end": "3058750"
  },
  {
    "text": "So from the branches executed,\nhow many were missed? That's a lot more important\nthan, you have 5 billion branch misses.",
    "start": "3058750",
    "end": "3065140"
  },
  {
    "text": "That doesn't say\nanything to me. So most of the time, you have\nto figure out the right ratios, and what makes sense\nto look at those ratios.",
    "start": "3065140",
    "end": "3071130"
  },
  {
    "text": " So now what I want to do is\nto go through a couple of",
    "start": "3071130",
    "end": "3078110"
  },
  {
    "text": "examples and show what\nI can see in these different program behaviors.",
    "start": "3078110",
    "end": "3084450"
  },
  {
    "text": "Any questions so far? Next lecture we are going to go\nthrough hands-on examples,",
    "start": "3084450",
    "end": "3091500"
  },
  {
    "text": "going through some of these\nprofiling tools.",
    "start": "3091500",
    "end": "3098150"
  },
  {
    "text": "So it's kind of fun-- what I did was finally discover\nwhat architecture is",
    "start": "3098150",
    "end": "3104280"
  },
  {
    "text": "doing, and what is the modern\nmulticore is capable of doing. In fact, some of these examples,\nso this set of",
    "start": "3104280",
    "end": "3110180"
  },
  {
    "text": "examples were done\non a Core Two. So some of the numbers might\nbe very different in",
    "start": "3110180",
    "end": "3115359"
  },
  {
    "text": "[UNINTELLIGIBLE], because the\narchitecture might do better in some special prediction\nstuff. I don't know.",
    "start": "3115360",
    "end": "3120599"
  },
  {
    "text": "It might be fun to\nmove it it again. So what I have is a program\nthat I first created two interesting arrays to\naccess this array.",
    "start": "3120600",
    "end": "3128190"
  },
  {
    "text": "One array has numbers 1 to n,\nMAXA, is stored in this array.",
    "start": "3128190",
    "end": "3133760"
  },
  {
    "text": "This has 1 to MAXA in random\norder stored in this array. So when I use this as a way to\naccess the main array, and if",
    "start": "3133760",
    "end": "3144490"
  },
  {
    "text": "I use this in [UNINTELLIGIBLE] 0 to n, I will actually access\nA [UNINTELLIGIBLE] 0.",
    "start": "3144490",
    "end": "3149569"
  },
  {
    "text": "It's almost like saying AI. But I use this here. But if I use this one, I'm doing\nrandom [UNINTELLIGIBLE].",
    "start": "3149570",
    "end": "3155542"
  },
  {
    "text": "Well, the first program I'm\ndoing is just nothing but going through this one. I will have autoloop that will\ngo through many, many times,",
    "start": "3155542",
    "end": "3162390"
  },
  {
    "text": "so I can actually\n[UNINTELLIGIBLE] time. So I just go through-- just nothing but trying to\njust go through that.",
    "start": "3162390",
    "end": "3167930"
  },
  {
    "text": "Second thing I did, I just\nput a condition. Say, j is than MAXA half.",
    "start": "3167930",
    "end": "3173119"
  },
  {
    "text": "That means halfway through\nthe program, I will go and update this one. Another half, I'm not\ndoing anything.",
    "start": "3173120",
    "end": "3181150"
  },
  {
    "text": "Then I said, OK, look. I divide by every fourth\n[UNINTELLIGIBLE]. So what I is j and\nwith 03 in there.",
    "start": "3181150",
    "end": "3189920"
  },
  {
    "text": "That means 3 means [? 2b ?] in the 1 1. So we study 0. That means last two\n[UNINTELLIGIBLE] has to be 0.",
    "start": "3189920",
    "end": "3196600"
  },
  {
    "text": "To form in delta every fourth\nelement, I will update. Otherwise I won't. ",
    "start": "3196600",
    "end": "3202710"
  },
  {
    "text": "And the next thing I\ndid was I updated--",
    "start": "3202710",
    "end": "3210320"
  },
  {
    "text": "OK. Let me ask you a question. So this program, the output-- that means what happened\nto A--",
    "start": "3210320",
    "end": "3218560"
  },
  {
    "text": "the output of A is equivalent to\nsome other program, one of these three programs. Which one is the [? outward ?] equivalent?",
    "start": "3218560",
    "end": "3224660"
  },
  {
    "text": " See what you can make up.",
    "start": "3224660",
    "end": "3229890"
  },
  {
    "text": " So first three programs or\neach will have separate",
    "start": "3229890",
    "end": "3236290"
  },
  {
    "text": "different outputs. A at A would be different\nif you run it.",
    "start": "3236290",
    "end": "3241860"
  },
  {
    "text": "Except the fourth program will\nproduce the exact same results as some other program, on the\nfirst three programs.",
    "start": "3241860",
    "end": "3247380"
  },
  {
    "text": "Which one? ",
    "start": "3247380",
    "end": "3256517"
  },
  {
    "text": "Wake up, wake up, wake up! ",
    "start": "3256518",
    "end": "3262787"
  },
  {
    "text": "I hear something. I hear some-- second one. Somebody said the second one.",
    "start": "3262787",
    "end": "3268789"
  },
  {
    "text": "How many people agree\nwith that? How many people disagree? ",
    "start": "3268790",
    "end": "3276660"
  },
  {
    "text": "OK. This is not a statistical\nexample. It can be exact.",
    "start": "3276660",
    "end": "3282089"
  },
  {
    "text": "Why say the second one? Second one is right. So what that means is, in fact,\ninstead of a j, I'm",
    "start": "3282090",
    "end": "3288500"
  },
  {
    "text": "using inc j. Inc j is exactly j, because it\ngoes, inc 0 is 0, inc 1 is 1,",
    "start": "3288500",
    "end": "3294580"
  },
  {
    "text": "inc 2 is 2. I just created the same\n[UNINTELLIGIBLE] array in here. This is something to get that.",
    "start": "3294580",
    "end": "3301506"
  },
  {
    "text": "And finally, I am doing\nthe [UNINTELLIGIBLE] A basically from x. So what that means, I'm using\nthe same amount of data will",
    "start": "3301506",
    "end": "3309150"
  },
  {
    "text": "get updated, but it's very\ndifferent order in there. So now, before I go to\nthe next slide--",
    "start": "3309150",
    "end": "3315920"
  },
  {
    "text": "question? AUDIENCE: Maybe you said this,\nbut what is the A array?",
    "start": "3315920",
    "end": "3322518"
  },
  {
    "text": "SAMAN AMARASINGHE: Yeah,\nit's some numbers. Some random set of numbers. I don't care about that. I just updated this one.",
    "start": "3322518",
    "end": "3328390"
  },
  {
    "text": "So in here, which program do\nwe think run the faster? ",
    "start": "3328390",
    "end": "3336980"
  },
  {
    "text": "So let me ask you this-- which program updated the least\namount of updates for A?",
    "start": "3336980",
    "end": "3344710"
  },
  {
    "start": "3344710",
    "end": "3354380"
  },
  {
    "text": "Third one, yeah, because\nit's only doing every fourth element. Which did the most?",
    "start": "3354380",
    "end": "3360460"
  },
  {
    "text": "First one is doing every\nelement, and everybody else will do probably half\nof the updates. So knowing that, which program\nwill run faster?",
    "start": "3360460",
    "end": "3368170"
  },
  {
    "text": " First one is updating\neverything.",
    "start": "3368170",
    "end": "3373260"
  },
  {
    "text": "[UNINTELLIGIBLE], OK. [UNINTELLIGIBLE] plus 1, OK. Which program will run slow? ",
    "start": "3373260",
    "end": "3381220"
  },
  {
    "text": "Last one. You guys are onto something. You have seen my slide, you\nactually know what the hell is going on.",
    "start": "3381220",
    "end": "3386910"
  },
  {
    "text": "So what I show here is, you\ncan't read this one, but I [UNINTELLIGIBLE] on time, and then I\ncreate a ratio.",
    "start": "3386910",
    "end": "3392549"
  },
  {
    "text": "So if you look at the ratio-- so aha. The first program, I always\nnormalize to that, runs 1, and",
    "start": "3392550",
    "end": "3398769"
  },
  {
    "text": "that runs the fastest, if you\ntried, and the last program ran the slowest. And the interesting thing is,\nthe [UNINTELLIGIBLE], the",
    "start": "3398770",
    "end": "3412830"
  },
  {
    "text": "other, the two, the second and\nfourth one, that wrote about half [UNINTELLIGIBLE], basically\nran all of the same.",
    "start": "3412830",
    "end": "3419990"
  },
  {
    "text": "But the one that wrote every\nfourth element was actually slower than others. Why is it going on?",
    "start": "3419990",
    "end": "3426810"
  },
  {
    "text": "So what you can do is, first\nlook at how many instructions would it add up, and how many\ninstruction were executed?",
    "start": "3426810",
    "end": "3434430"
  },
  {
    "text": "So if you look at that, what\nyou see is, the first one executes the least amount of\ninstructions, because it",
    "start": "3434430",
    "end": "3440820"
  },
  {
    "text": "doesn't have to do all\nthis [UNINTELLIGIBLE] when it's updating. The interesting thing is, the\none that wrote half has the",
    "start": "3440820",
    "end": "3450350"
  },
  {
    "text": "most amount of instructions. One that wrote only 1/4 has\nmiddle amount of instructions.",
    "start": "3450350",
    "end": "3456510"
  },
  {
    "text": "That kind of makes\nsense in here. But this still doesn't\nexplain the slowdown. That means if this is the only\ncase, the divide by 4 should",
    "start": "3456510",
    "end": "3467329"
  },
  {
    "text": "run faster than the\nother three. That doesn't make sense. And then what you look at,\nlook at [UNINTELLIGIBLE]",
    "start": "3467330",
    "end": "3473320"
  },
  {
    "text": "branches in there, and if you\nlook at the branches, what you see is-- Let me skip this\none, actually.",
    "start": "3473320",
    "end": "3480230"
  },
  {
    "text": "I want to get this one. This is called clocks\nper instruction. What this is is, if the\ninstructions ran slow, these",
    "start": "3480230",
    "end": "3487900"
  },
  {
    "text": "instructions will take a\nlot more clock cycles. That means the instructions\nare not doing well.",
    "start": "3487900",
    "end": "3493590"
  },
  {
    "text": "That means they are\nstalling, they are taking a lot more time. Normally, we should be able\nto run [UNINTELLIGIBLE]",
    "start": "3493590",
    "end": "3498720"
  },
  {
    "text": "about four instruction\n[UNINTELLIGIBLE] cycles should get a CPA of 0.25, but that's\nvery rare, and if you look at",
    "start": "3498720",
    "end": "3505380"
  },
  {
    "text": "that, if I normalize, I get\n1 in here normalized. And then what you see is second\nand fourth test, almost",
    "start": "3505380",
    "end": "3513920"
  },
  {
    "text": "the same CPI, and the third has\nworse, and the last one is",
    "start": "3513920",
    "end": "3519760"
  },
  {
    "text": "even worse. So why is that? Why are those instructions\ndoing bad?",
    "start": "3519760",
    "end": "3524780"
  },
  {
    "text": "And then you can go look\nat that misprediction instruction, and this is\nexactly what happens. Divide by 4.",
    "start": "3524780",
    "end": "3531030"
  },
  {
    "text": "This is a condition. The branch predictor couldn't\npredict it that well, because [UNINTELLIGIBLE]",
    "start": "3531030",
    "end": "3536390"
  },
  {
    "text": "predicted in the first three,\nand it's [UNINTELLIGIBLE] predicted, OK, after three,\nnext one is also going 1 direction, oops, it's in\nanother direction.",
    "start": "3536390",
    "end": "3541920"
  },
  {
    "text": "OK, going first three\npredictions, going one direction, knowing\nthat information. So divide by 4, looks really\nbad, then predict 3.",
    "start": "3541920",
    "end": "3548250"
  },
  {
    "text": "And then the random one was\njust completely off. Random one, basically\npredictions of three [INAUDIBLE].",
    "start": "3548250",
    "end": "3553470"
  },
  {
    "text": "That's why this is. So in fact, if you just want to\ncalculate the run time, if",
    "start": "3553470",
    "end": "3558480"
  },
  {
    "text": "you think every misprediction\ncost you 21 instructions, you",
    "start": "3558480",
    "end": "3563920"
  },
  {
    "text": "kind of get the exact\ntotal first. You can't help it. So after you meet the\ninstruction, take one cycle,",
    "start": "3563920",
    "end": "3570300"
  },
  {
    "text": "and everybody misprediction\ninstruction, take 21 cycles, and you just calculate that. And this [UNINTELLIGIBLE], I\njust came, took it out of a",
    "start": "3570300",
    "end": "3575950"
  },
  {
    "text": "hat, and then voila, I get\na number that's very close to run time. So what that means is, I can\nkind of understand what the",
    "start": "3575950",
    "end": "3584460"
  },
  {
    "text": "behavior, this explains\nwhat's going on. So I can have a model in my\nhead for what's going on. So it's all about misprediction\nin here.",
    "start": "3584460",
    "end": "3591210"
  },
  {
    "text": "I did two other experiments\nin here. I have the slide sitting here,\nbut I don't think I have too much time to go. I want to go to the\nnumbers in there.",
    "start": "3591210",
    "end": "3600240"
  },
  {
    "text": "Are you ready, [UNINTELLIGIBLE]? OK. Why don't you go put\nyour laptop in.",
    "start": "3600240",
    "end": "3605530"
  },
  {
    "text": "You have the dongle? AUDIENCE: [INAUDIBLE]  SAMAN AMARASINGHE: OK.",
    "start": "3605530",
    "end": "3612819"
  },
  {
    "text": "So voila. So something you guys waited all\nthis time, and were up all",
    "start": "3612820",
    "end": "3619100"
  },
  {
    "text": "these days developing. So let's see how\neverybody did. OK, without further ado.",
    "start": "3619100",
    "end": "3625630"
  },
  {
    "text": "I haven't even seen\nthese numbers. OK, what happened? He's trying to-- OK, good. This is [UNINTELLIGIBLE]",
    "start": "3625630",
    "end": "3632730"
  },
  {
    "text": "screen, OK. Do you have it? OK. AUDIENCE: OK.",
    "start": "3632730",
    "end": "3638334"
  },
  {
    "text": "Something to keep in mind\nis, we haven't actually investigated what's causing\npeople to have build failures or crashes yet.",
    "start": "3638334",
    "end": "3643760"
  },
  {
    "text": "So it could be your fault,\nit could be ours. We'll figure that out. SAMAN AMARASINGHE: So if\nsmaller, better or higher,",
    "start": "3643760",
    "end": "3649380"
  },
  {
    "text": "better, what's-- AUDIENCE: [INAUDIBLE] better. This is run time. That SAMAN AMARASINGHE: This\nis really good! ",
    "start": "3649380",
    "end": "3655849"
  },
  {
    "text": "This is actually-- AUDIENCE: [INAUDIBLE] The baseline is the flat code\nthat you see in the middle.",
    "start": "3655850",
    "end": "3662650"
  },
  {
    "text": "SAMAN AMARASINGHE: So\nthis is really good. That means there were\nkind of two groups. Most of the people got\neverything right, and they're",
    "start": "3662650",
    "end": "3669240"
  },
  {
    "text": "now the bottom. And there's another group that\nmissed something, and it's in the second camp.",
    "start": "3669240",
    "end": "3675126"
  },
  {
    "text": "AUDIENCE: I think some of these\nprojects are from people who dropped the class\nat some point. So there's probably\n[INAUDIBLE]",
    "start": "3675126",
    "end": "3681440"
  },
  {
    "text": "might not be actually\nrepresentative of the class. SAMAN AMARASINGHE: So last\nyear, we got like almost exponential curve, actually.",
    "start": "3681440",
    "end": "3687980"
  },
  {
    "text": "Last year, what happened was\nthere were a couple of people at the bottom, and everybody\nworked at the top, basically. Which is actually good. So you guys actually figured\nout what's going on.",
    "start": "3687980",
    "end": "3694490"
  },
  {
    "text": "AUDIENCE: So next one is\neven more interesting. SAMAN AMARASINGHE: Wow! AUDIENCE: So this\nis [INAUDIBLE]",
    "start": "3694490",
    "end": "3699559"
  },
  {
    "text": "that we gave you guys. Most of you optimized it\ndown to 0 seconds. So I coded in a harder\ntest case, and here's",
    "start": "3699560",
    "end": "3707290"
  },
  {
    "text": "the results on that. Still pretty good. [INAUDIBLE]",
    "start": "3707290",
    "end": "3713144"
  },
  {
    "text": "There's some very specific\noptimizations [INAUDIBLE]. Yeah. SAMAN AMARASINGHE: So exactly. There are people who are\nclimbing up, I don't know",
    "start": "3713144",
    "end": "3720140"
  },
  {
    "text": "exactly what, but it's very\nclear that [UNINTELLIGIBLE], probably data representation\ntag that people missed in here.",
    "start": "3720140",
    "end": "3726750"
  },
  {
    "text": "Which is really now\ninteresting. Yes. AUDIENCE: And for Pentominos,\nthis is very incomplete, because the set of tests that\nwe wanted to run are still",
    "start": "3726750",
    "end": "3734330"
  },
  {
    "text": "currently running. So I just picked a random test\ncase, just to give everybody an idea of how everybody did,\nand set the time out very low",
    "start": "3734330",
    "end": "3742200"
  },
  {
    "text": "so that I could actually finish\nit during this lecture. And what's [INAUDIBLE]? Yes. Somebody solved it\ninstantaneously, and it",
    "start": "3742200",
    "end": "3749230"
  },
  {
    "text": "searches for the first 5,000\nsolutions to some random puzzle that I pulled out. SAMAN AMARASINGHE: So\n[UNINTELLIGIBLE]?",
    "start": "3749230",
    "end": "3757146"
  },
  {
    "text": "AUDIENCE: That I haven't\nverified yet. SAMAN AMARASINGHE: Aha. So it might be, there might be\njust the scratchings, so we don't know that, and then that\ncould be correct answer, but--",
    "start": "3757146",
    "end": "3766789"
  },
  {
    "text": "AUDIENCE: Which one\nis the baseline? The baseline is actually\nthe 90-second mark.",
    "start": "3766790",
    "end": "3773180"
  },
  {
    "text": "[INAUDIBLE] SAMAN AMARASINGHE:\n[UNINTELLIGIBLE] the baseline? AUDIENCE: No. 10 seconds and above are either\ntimeout or [INAUDIBLE].",
    "start": "3773180",
    "end": "3780190"
  },
  {
    "text": "SAMAN AMARASINGHE: Oh, they're\nprobably mostly timeouts. AUDIENCE: [INAUDIBLE]",
    "start": "3780190",
    "end": "3785240"
  },
  {
    "text": "SAMAN AMARASINGHE: Yes.  So there you are. This one, people would have some\nwork to do, I guess, to",
    "start": "3785240",
    "end": "3792200"
  },
  {
    "text": "get the performance down. But this is pretty good. This is not like\n[UNINTELLIGIBLE].",
    "start": "3792200",
    "end": "3798210"
  },
  {
    "text": "I mean, last couple of\nyears, we had people, [UNINTELLIGIBLE] someone who was 1,000\n[UNINTELLIGIBLE], you had to plot it in a log thing.",
    "start": "3798210",
    "end": "3805460"
  },
  {
    "text": "So in fact, if I do a square\nroot within the grid, this is pretty nice.",
    "start": "3805460",
    "end": "3810980"
  },
  {
    "text": "So [UNINTELLIGIBLE] is not that bad. So this is great. This is where you get\n[UNINTELLIGIBLE]",
    "start": "3810980",
    "end": "3816060"
  },
  {
    "text": "performance wise And if you are\nin the bottom, you can go have a beer.",
    "start": "3816060",
    "end": "3821450"
  },
  {
    "text": "Otherwise, you might have to\ngo back and figure out what you missed. AUDIENCE: [INAUDIBLE]",
    "start": "3821450",
    "end": "3828770"
  },
  {
    "text": "SAMAN AMARASINGHE: Oh, if\nyou're [UNINTELLIGIBLE]. Yes, exactly yes. I should say that. ",
    "start": "3828770",
    "end": "3841237"
  }
]