[
  {
    "text": "[SQUEAKING]\n[RUSTLING] [CLICKING]",
    "start": "0",
    "end": "25140"
  },
  {
    "text": "PROFESSOR: All righty,\nwhy don't we get started. ",
    "start": "25140",
    "end": "31199"
  },
  {
    "text": "So welcome back. Nice to see you all.",
    "start": "31200",
    "end": "36590"
  },
  {
    "text": "And what have we been doing\nin theory of computation?",
    "start": "36590",
    "end": "42290"
  },
  {
    "text": "We have been talking\nabout Turing machines and about the power\nof Turing machines.",
    "start": "42290",
    "end": "50750"
  },
  {
    "text": "We started at the\nbeginning by showing a bunch of decidability\ntheorems that",
    "start": "50750",
    "end": "58579"
  },
  {
    "text": "exhibit the power\nof Turing machines to calculate properties\nof finite automata,",
    "start": "58580",
    "end": "68159"
  },
  {
    "text": "context free grammars,\nand so on in some cases. And last lecture, we talked\nabout the limitations",
    "start": "68160",
    "end": "75780"
  },
  {
    "text": "of the power of Turing\nmachines by proving undecidability theorems.",
    "start": "75780",
    "end": "82470"
  },
  {
    "text": "So we showed that\nthis language A TM, the acceptance problem\nfor Turing machines itself",
    "start": "82470",
    "end": "89280"
  },
  {
    "text": "is an undecidable problem. That was the first of\nmany undecidable problems that we're going to encounter.",
    "start": "89280",
    "end": "95790"
  },
  {
    "text": "And though we proved\nthe undecidability of A TM using the\ndiagonalization",
    "start": "95790",
    "end": "101430"
  },
  {
    "text": "method as hopefully\nyou remember, we're going to introduce\na new method which we kind of basically\npreviewed last time",
    "start": "101430",
    "end": "108420"
  },
  {
    "text": "called the reducibility\nmethod, which is the way other\nproblems are typically shown to be undecidable.",
    "start": "108420",
    "end": "116420"
  },
  {
    "text": "And so we're going to stick\nwith that for this lecture and also next lecture.",
    "start": "116420",
    "end": "121850"
  },
  {
    "text": "We're going to be talking\nabout undecidability. And I think there's going to\nbe a few additional discussions",
    "start": "121850",
    "end": "128889"
  },
  {
    "text": "after that. But this is one of\nthe important themes of the course is to\nunderstand that threshold",
    "start": "128889",
    "end": "135520"
  },
  {
    "text": "between decidability\nand undecidability, or the limitations\nof computation, OK.",
    "start": "135520",
    "end": "143780"
  },
  {
    "text": "So today, as I\nmentioned, we're going to talk about the\nreducibility method for proving problems\nundecidable and also",
    "start": "143780",
    "end": "150290"
  },
  {
    "text": "for proving problems\nnon-turing recognizable, Turing unrecognizable.",
    "start": "150290",
    "end": "156590"
  },
  {
    "text": "We're going to\nintroduce this notion of a reducibility in general.",
    "start": "156590",
    "end": "161960"
  },
  {
    "text": "And we'll also talk about\na very specific kind of reducibility called\nthe mapping reducibility. So today as\npromised, we're going",
    "start": "161960",
    "end": "168650"
  },
  {
    "text": "to talk about using\nreducibilities to prove problems are\nundecidable, or unrecognizable.",
    "start": "168650",
    "end": "176030"
  },
  {
    "text": "So that's going to be\nour general method, oops, make myself\nsmaller, thank you.",
    "start": "176030",
    "end": "182060"
  },
  {
    "text": "I always forget. Thank you for the reminder. ",
    "start": "182060",
    "end": "190980"
  },
  {
    "text": "So using reducibilities to\nprove problems are undecidable,",
    "start": "190980",
    "end": "197040"
  },
  {
    "text": "or unrecognizable, and\nthe basic way that works is we're going to leverage\nanother some problem we already",
    "start": "197040",
    "end": "203580"
  },
  {
    "text": "know is undecidable\nsay, or unrecognizable to prove other problems\nare unrecognizable.",
    "start": "203580",
    "end": "209280"
  },
  {
    "text": "So we did a quick example\nof that last time. We're going to go over\nthat example again just to set the stage.",
    "start": "209280",
    "end": "215190"
  },
  {
    "text": "And then we're going to talk\nabout that in greater detail. So as you recall\nfrom last time, we",
    "start": "215190",
    "end": "222370"
  },
  {
    "text": "had this problem\nHALT TM, which is the problem of testing\nfor a given Turing",
    "start": "222370",
    "end": "227410"
  },
  {
    "text": "machine and an input\nto that Turing machine, whether the Turing\nmachine halts, either accepting or rejecting,\nbut just whether it halts.",
    "start": "227410",
    "end": "235569"
  },
  {
    "text": "Which is a somewhat different\nproblem, closely related obviously, but somewhat\ndifferent than the A TM problem, which is just\ntesting whether the Turing",
    "start": "235570",
    "end": "242740"
  },
  {
    "text": "machine accepts. We already showed that\nA TM is undecidable.",
    "start": "242740",
    "end": "249099"
  },
  {
    "text": "Now, conceivably, HALT\nTM might be decidable.",
    "start": "249100",
    "end": "254200"
  },
  {
    "text": "You know, it's not\nexactly the same problem. But we're going to show\nthat HALT TM is likewise undecidable.",
    "start": "254200",
    "end": "260359"
  },
  {
    "text": "We did this last time, but\nI'm just going over it again. I'm going to likewise show\nthat HALT TM is undecidable.",
    "start": "260360",
    "end": "266700"
  },
  {
    "text": "We could go back to the\ndiagonalization method and do it from scratch.",
    "start": "266700",
    "end": "271710"
  },
  {
    "text": "But generally, that's\nnot what's done. Generally what people do is they\nuse a reducibility from a known",
    "start": "271710",
    "end": "277680"
  },
  {
    "text": "undecidable problem. And so what we're going to show\nis a proof by contradiction which says that if\nHALT TM were decidable,",
    "start": "277680",
    "end": "289840"
  },
  {
    "text": "then A TM would\nalso be decidable. And we know it isn't. And that's by virtue of what we\ncall a reducibility from A TM",
    "start": "289840",
    "end": "296860"
  },
  {
    "text": "to HALT TM. And I'll explain\nwith the terminology. And we'll have a chance\nto play with the concept",
    "start": "296860",
    "end": "301870"
  },
  {
    "text": "all lecture long. So we're going to see all\nsorts of different variations.",
    "start": "301870",
    "end": "307720"
  },
  {
    "text": "So as I said, we'll assume\nHALT TM is decidable and use that to show that A\nTM is decidable, which we know",
    "start": "307720",
    "end": "312970"
  },
  {
    "text": "is not true. So quickly going through it\nbecause we did it already once before, we're\ngoing to assume",
    "start": "312970",
    "end": "320830"
  },
  {
    "text": "that HALT TM is decidable. Let's say Turing machine\nR is the decider.",
    "start": "320830",
    "end": "327460"
  },
  {
    "text": "And now we're going\nto show that ATM is decidable by constructing\na Turing machine S,",
    "start": "327460",
    "end": "332639"
  },
  {
    "text": "which uses R to decide A TM. That's going to be\nour contradiction.",
    "start": "332640",
    "end": "339730"
  },
  {
    "text": "So here is the machine S. You have to keep in mind\nwhat the goal of S is.",
    "start": "339730",
    "end": "348650"
  },
  {
    "text": "We're going to design\nS to solve A TM, which we know is not decidable.",
    "start": "348650",
    "end": "354700"
  },
  {
    "text": "So don't get confused by that. We're aiming for\na contradiction. So we're going to\nuse S as typically--",
    "start": "354700",
    "end": "362227"
  },
  {
    "text": "well, there might\nbe other variations. But for now, S is going\nto be used to decide A TM.",
    "start": "362227",
    "end": "368320"
  },
  {
    "text": "So we can try to figure\nout, how can we decide A TM. And the way we're going to do\nit is use our HALT TM tester",
    "start": "368320",
    "end": "380050"
  },
  {
    "text": "that we assumed to have. And we'll first\ntake our M and w,",
    "start": "380050",
    "end": "386910"
  },
  {
    "text": "where we're trying to\ndetermine, does M accept w? And we'll first test\nwhether M halts on w.",
    "start": "386910",
    "end": "393000"
  },
  {
    "text": "If it doesn't, we're done. Because it couldn't\nbe accepting w, M couldn't be accepting\nw if it's not even",
    "start": "393000",
    "end": "399450"
  },
  {
    "text": "just halting on w.  So if R reports doesn't hold,\nwe can reject right off.",
    "start": "399450",
    "end": "410210"
  },
  {
    "text": "But even if R says it does\nhalt, we're still in good shape",
    "start": "410210",
    "end": "415580"
  },
  {
    "text": "because now we can run\nM on w until completion because R has promised us\nthat it's going to halt.",
    "start": "415580",
    "end": "422800"
  },
  {
    "text": "R is stated. And R is assumed to be correct. R is stated that M\nhalts on w, so now we",
    "start": "422800",
    "end": "428925"
  },
  {
    "text": "don't have to\nworry about getting into a loop, which\nwe're not allowed to do since we're making a decider.",
    "start": "428925",
    "end": "434500"
  },
  {
    "text": "We're trying to\ndecide A TM here. But now we can run them\non w to completion. We can find out\nwhat M does on w.",
    "start": "434500",
    "end": "441220"
  },
  {
    "text": "And then we can act accordingly.  So we're using the HALT\nTM decider to decide A TM.",
    "start": "441220",
    "end": "449220"
  },
  {
    "text": "That's the name of\nthe game here, OK? And that's a contradiction. And so therefore our assumption\nthat HALT TM was decidable",
    "start": "449220",
    "end": "457133"
  },
  {
    "text": "had to be false. So it's undecidable. OK? Important to understand\nthis because this",
    "start": "457133",
    "end": "464550"
  },
  {
    "text": "is sort of the prototype for\nall of the other undecidability",
    "start": "464550",
    "end": "472620"
  },
  {
    "text": "proofs that we're going\nto do going forward. OK, so we can just take\na few seconds here. If there's something that\nyou're not getting about this,",
    "start": "472620",
    "end": "480840"
  },
  {
    "text": "it's a good time to ask. ",
    "start": "480840",
    "end": "487660"
  },
  {
    "text": "Not seeing many messages here,\nor any, so why don't we go on?",
    "start": "487660",
    "end": "492760"
  },
  {
    "text": "But if you ask, I can get to\nit next slide too, all right. Here we go.",
    "start": "492760",
    "end": "498050"
  },
  {
    "text": "So here's the concept\nof reducibility. And I know, I've taught\nthis course, many times.",
    "start": "498050",
    "end": "504420"
  },
  {
    "text": "I know where the\nbumpy places are in terms of people\nstruggling with material.",
    "start": "504420",
    "end": "510900"
  },
  {
    "text": "The concept of reducibility\nis a bit tricky.",
    "start": "510900",
    "end": "517750"
  },
  {
    "text": "So don't feel bad if you\ndon't get it right away. You know, so that's\nwhy I'm going to try to go slowly\nin this lecture",
    "start": "517750",
    "end": "524340"
  },
  {
    "text": "to make sure we're all\ntogether on understanding how reducibility works.",
    "start": "524340",
    "end": "530050"
  },
  {
    "text": "OK, so the concept\nof reducibility is that we say one problem\nis reducible to another,",
    "start": "530050",
    "end": "535870"
  },
  {
    "text": "say A reducible to\nB. It means that you can use B to solve A.\nThat's what it means",
    "start": "535870",
    "end": "544699"
  },
  {
    "text": "for A to be reducible to B. OK, so I'm going to\ngive a bunch of sort",
    "start": "544700",
    "end": "551720"
  },
  {
    "text": "of informal examples of that,\nor easy examples of that. And then we'll start\nto use it for real.",
    "start": "551720",
    "end": "559450"
  },
  {
    "text": "So example 1, this is sort\nof really outside material from the course. But I think it's something\nyou can appreciate.",
    "start": "559450",
    "end": "568375"
  },
  {
    "text": "You know, everybody\nknows you can measure the area of a\nrectangle by measuring",
    "start": "568375",
    "end": "574310"
  },
  {
    "text": "the lengths of the two\nsides, measuring the length",
    "start": "574310",
    "end": "580040"
  },
  {
    "text": "and width of the rectangle. So in other words, if\nyou had the problem",
    "start": "580040",
    "end": "586670"
  },
  {
    "text": "of determining the area, you\ncould reduce that problem to the problem of\nmeasuring the length",
    "start": "586670",
    "end": "593600"
  },
  {
    "text": "and width of the rectangle. So here, we're\ntaking one problem",
    "start": "593600",
    "end": "601110"
  },
  {
    "text": "and reducing it to\nanother problem. You know, it's\nconceivable that measuring the length and width\nis easier than it would",
    "start": "601110",
    "end": "610890"
  },
  {
    "text": "be to measure the area\ndirectly by somehow covering the space with tiles, is\none way of measuring it.",
    "start": "610890",
    "end": "622090"
  },
  {
    "text": "But it tells you, you\ndon't have to do that. The problem of\nmeasuring the area is easier than\ncovering with tiles.",
    "start": "622090",
    "end": "629050"
  },
  {
    "text": "You can just measure the length\nand width and you're done. So reducibility\nis a way of making",
    "start": "629050",
    "end": "634800"
  },
  {
    "text": "problems easier by translating\nthem into some easier problem.",
    "start": "634800",
    "end": "644357"
  },
  {
    "text": "So here's another example\nthat we've already seen. We didn't call it\na reducibility. But if you remember back\na couple of weeks ago,",
    "start": "644357",
    "end": "654090"
  },
  {
    "text": "we were talking about\nthe languages A NFA, and A DFA, the acceptance\nproblems for NFAs and DFAs.",
    "start": "654090",
    "end": "661300"
  },
  {
    "text": "And we gave a way of\nsolving the A DFA problem. As you remember,\nthe Turing machine simulated the finite automaton.",
    "start": "661300",
    "end": "669710"
  },
  {
    "text": "And we solved the\nNFA problem not by doing it directly but by\nconverting the NFA to a DFA",
    "start": "669710",
    "end": "678530"
  },
  {
    "text": "and then using the\nsolution for A DFA. ",
    "start": "678530",
    "end": "683740"
  },
  {
    "text": "In effect, what\nwe were doing was we were reducing the A NFA\nproblem to the A DFA problem.",
    "start": "683740",
    "end": "688840"
  },
  {
    "start": "688840",
    "end": "698250"
  },
  {
    "text": "So let's do another example. Here's a problem.",
    "start": "698250",
    "end": "704209"
  },
  {
    "text": "Here's an example\nthat you again, probably didn't think\nabout it this way. But from your homework, we\nhad this pusher problem,",
    "start": "704210",
    "end": "714290"
  },
  {
    "text": "the problem of determining\nwhether a pushdown automaton ever pushes on\nits stack for any input.",
    "start": "714290",
    "end": "723210"
  },
  {
    "text": "I know a bunch of\nyou were struggling with that problem working\non it, hopefully solving it",
    "start": "723210",
    "end": "729660"
  },
  {
    "text": "in one way or another. So there's one way to solve\nit is in effect by reducing",
    "start": "729660",
    "end": "734790"
  },
  {
    "text": "the pusher problem to the\nE CFG the emptiness for CFG which is the equivalent\nto the emptiness for PDAs.",
    "start": "734790",
    "end": "740865"
  },
  {
    "start": "740865",
    "end": "748320"
  },
  {
    "text": "I mean, this is the\nsolution I had in mind, which is a particularly\nsimple and short solution.",
    "start": "748320",
    "end": "753600"
  },
  {
    "text": "Of course, not\nthe only solution. You can take your\npushdown automaton where you're trying to\ndetermine if it ever pushes.",
    "start": "753600",
    "end": "761870"
  },
  {
    "text": "And you can take the states\nthat are about to make a push.",
    "start": "761870",
    "end": "768160"
  },
  {
    "text": "And instead of making\nthem make a push, you make them accept states. And you get rid of the\noriginal accept states.",
    "start": "768160",
    "end": "774070"
  },
  {
    "text": " So now you've converted\nthis automaton",
    "start": "774070",
    "end": "781550"
  },
  {
    "text": "to one that accepts every time\nthe original push on automaton",
    "start": "781550",
    "end": "788300"
  },
  {
    "text": "pushes. And it accepts, and then has to\nmove to the end of the input, of course.",
    "start": "788300",
    "end": "793960"
  },
  {
    "text": "So it goes into an\naccept state and moves to the end of the input. So every time the original\nmachine was about to push,",
    "start": "793960",
    "end": "800190"
  },
  {
    "text": "the new machine that\nyou're just creating here is going to go into an accept\nstate at the end of the input.",
    "start": "800190",
    "end": "807550"
  },
  {
    "text": "Now to test whether the original\nmachine ever uses stack, it's enough to test whether\nthe new machine ever",
    "start": "807550",
    "end": "814720"
  },
  {
    "text": "accepts an S string. ",
    "start": "814720",
    "end": "820060"
  },
  {
    "text": "OK, so that's a way. I don't want to overcomplicate\nthis right here and get you thinking about\nthe homework again.",
    "start": "820060",
    "end": "825400"
  },
  {
    "text": "But this is a way of reducing\none problem to another problem. And if you don't\nquite get this one,",
    "start": "825400",
    "end": "833440"
  },
  {
    "text": "just focus on the\nother two examples. I don't want to spend time on\nthe homework set 2 right now. So we can address that all\nseparately if you want.",
    "start": "833440",
    "end": "842213"
  },
  {
    "text": "It's also the solution\nthat's written up in the solution set that's\nposted on the home page",
    "start": "842213",
    "end": "849070"
  },
  {
    "text": "by the way.  OK, so getting\nback to let's see,",
    "start": "849070",
    "end": "855680"
  },
  {
    "text": "thinking about reducibility. What I have in mind, again,\nthis is sort of rephrasing it,",
    "start": "855680",
    "end": "862470"
  },
  {
    "text": "but I'm trying to hammer it in\nthat if A is reducible to B, then solving B gives\na solution to A.",
    "start": "862470",
    "end": "873050"
  },
  {
    "text": "Because that's what happens\nin each of these examples. Now, how are we\ngoing to use that?",
    "start": "873050",
    "end": "878840"
  },
  {
    "text": "We're going to use that\nin the following two ways. One is to observe that, if\nA is reducible to B and B",
    "start": "878840",
    "end": "888000"
  },
  {
    "text": "is an easy problem,\nthen A must also",
    "start": "888000",
    "end": "894730"
  },
  {
    "text": "be easy because we have\na way of converting A problems into B problems. We have a way of solving\nA using B. So B is easy.",
    "start": "894730",
    "end": "905160"
  },
  {
    "text": "Then now you can\nsolve A too easily. Because you can solve A\nusing B, which is easy.",
    "start": "905160",
    "end": "912950"
  },
  {
    "text": "Maybe that's clearest\nup here in example 1, where measuring the area might\nseem at first glance hard.",
    "start": "912950",
    "end": "919550"
  },
  {
    "text": "You could have to walk\nout over the whole area. But it's not hard\nbecause you only have to measure the\nlength and the width.",
    "start": "919550",
    "end": "925218"
  },
  {
    "text": " So the fact that B is easy\ntells you that A is easy.",
    "start": "925218",
    "end": "930480"
  },
  {
    "text": "But actually, this\nis not the way we're going to be using\nit most typically. We're going to be most\ntypically using it",
    "start": "930480",
    "end": "937079"
  },
  {
    "text": "in the second version, which is\na little bit more convoluted.",
    "start": "937080",
    "end": "943310"
  },
  {
    "text": "But this is the way you're going\nto have to get used to this. So if A is reducible\nto B, and you",
    "start": "943310",
    "end": "949265"
  },
  {
    "text": "know A is hard,\nundecidable, unrecognizable, whatever the form of\nhard you care about,",
    "start": "949265",
    "end": "956339"
  },
  {
    "text": "if you know A is hard,\nand A is reducible to B, then that tells you B\nalso has to be hard.",
    "start": "956340",
    "end": "963330"
  },
  {
    "text": " Why?",
    "start": "963330",
    "end": "968550"
  },
  {
    "text": "Because if B were easy,\nthen A would be easy. But we're assuming\nthat A is hard.",
    "start": "968550",
    "end": "975960"
  },
  {
    "text": "So B also has to be hard.  OK, so I'm inverting\nthe logic here.",
    "start": "975960",
    "end": "985480"
  },
  {
    "text": "But this is\nlogically equivalent. So you have to mull\nthat over a bit.",
    "start": "985480",
    "end": "991779"
  },
  {
    "start": "991780",
    "end": "999060"
  },
  {
    "text": "So why don't you\nthink about that. And let me just take a\nfew questions on the chat and don't forget the\nTAs are there too.",
    "start": "999060",
    "end": "1005540"
  },
  {
    "text": "So they're happy to\nanswer your questions. Don't make them sit\nthere lonely, all right.",
    "start": "1005540",
    "end": "1012960"
  },
  {
    "text": " So somebody is\nasking, is it possible",
    "start": "1012960",
    "end": "1018180"
  },
  {
    "text": "that A is reducible to B and\nthat B is also reducible to A?",
    "start": "1018180",
    "end": "1023630"
  },
  {
    "text": "So that's a good question. That can certainly happen. In that case in a\ncertain sense, A and B",
    "start": "1023630",
    "end": "1029480"
  },
  {
    "text": "are going to be equivalent. So solving 1 is going to be\njust as easy or hard as solving",
    "start": "1029480",
    "end": "1036290"
  },
  {
    "text": "the other one, OK? So they're going to be\nequivalent from the perspective of the difficulty\nof solving them.",
    "start": "1036290",
    "end": "1043760"
  },
  {
    "text": "So somebody is asking-- and this is a\nperennial confusion--",
    "start": "1043760",
    "end": "1049600"
  },
  {
    "text": "so in the previous\nslide here, I think I'll just flip back to it here.",
    "start": "1049600",
    "end": "1056100"
  },
  {
    "text": "So which direction are we doing? Are we reducing A TM to\nHALT TM or HALT TM to A TM?",
    "start": "1056100",
    "end": "1061205"
  },
  {
    "text": "The way it's written on the\nslide is what I have in mind. Here we're reducing\nA TM to HALT TM",
    "start": "1061205",
    "end": "1066570"
  },
  {
    "text": "because we're using\nHALT TM to solve A TM.",
    "start": "1066570",
    "end": "1072250"
  },
  {
    "text": "And that's reducing\nA TM to HALT TM. Just like here,\nmeasuring the area",
    "start": "1072250",
    "end": "1084100"
  },
  {
    "text": "is reducible to measuring\nthe lengths of the sides, we're using measuring the length\nof the sides to solve the area.",
    "start": "1084100",
    "end": "1089830"
  },
  {
    "text": " So we're reducing the area\nto the lengths, the area",
    "start": "1089830",
    "end": "1096840"
  },
  {
    "text": "to the length of the sides. But I know you're going\nto have to play with it,",
    "start": "1096840",
    "end": "1105630"
  },
  {
    "text": "digest it, get used to it. ",
    "start": "1105630",
    "end": "1111350"
  },
  {
    "text": "All right, OK, so\nlet's continue.",
    "start": "1111350",
    "end": "1118470"
  },
  {
    "text": "OK, so as I said,\nthis latter one because the focus on\nthis course is mainly",
    "start": "1118470",
    "end": "1126120"
  },
  {
    "text": "on the limitations\nof computation. So we're going to be\nlooking at ways of showing",
    "start": "1126120",
    "end": "1132059"
  },
  {
    "text": "problems or difficulty. It could be difficult in\nprinciple, like undecidable. Or it could be\ndifficult in terms",
    "start": "1132060",
    "end": "1138382"
  },
  {
    "text": "of complexity, which\nis what we're going to focus on in the second half. But in both cases,\nwe're going to be using",
    "start": "1138383",
    "end": "1143920"
  },
  {
    "text": "the concept of reducibility. So reducibility is\ngoing to be a theme. You've got to get comfortable\nwith reducibility, OK.",
    "start": "1143920",
    "end": "1151660"
  },
  {
    "text": "So we're going to be\nfocusing more on the notion that if you reduce A to\nB, and you know A is hard,",
    "start": "1151660",
    "end": "1157600"
  },
  {
    "text": "that tells you B is also hard. OK, so I'm going to\nsay that a few times",
    "start": "1157600",
    "end": "1165309"
  },
  {
    "text": "during the course\nof today's lecture to try to help you get it. All right, here's a check in.",
    "start": "1165310",
    "end": "1172050"
  },
  {
    "text": "A little bit sort\nof off to the side. But I thought it was\na fun check in more.",
    "start": "1172050",
    "end": "1177990"
  },
  {
    "text": " The question is, some\npeople say biology",
    "start": "1177990",
    "end": "1183250"
  },
  {
    "text": "is reducible to physics. Well, maybe everything\nis reducible to physics since physics tells you about\nthe laws of the universe.",
    "start": "1183250",
    "end": "1190390"
  },
  {
    "text": "And biology is part\nof the universe. So my question to\nyou is, do you think?",
    "start": "1190390",
    "end": "1197410"
  },
  {
    "text": "And there's no\nright answer here. Do you think, in\nyour opinion, is biology reducible to physics?",
    "start": "1197410",
    "end": "1203690"
  },
  {
    "text": "Maybe yes, or maybe there are\nsome things like consciousness which cannot be\nreduced to physics.",
    "start": "1203690",
    "end": "1211820"
  },
  {
    "text": "Or maybe we don't know. So I'm curious to\nknow your thoughts.",
    "start": "1211820",
    "end": "1218274"
  },
  {
    "text": " But it does kind\nof use in a sense",
    "start": "1218275",
    "end": "1225929"
  },
  {
    "text": "the notion of\nreducible in the spirit of what I have in mind here.",
    "start": "1225930",
    "end": "1231420"
  },
  {
    "text": "In the sense that if you could\nfully understand physics, would that allow you to\nfully understand biology?",
    "start": "1231420",
    "end": "1237435"
  },
  {
    "start": "1237435",
    "end": "1242640"
  },
  {
    "text": "OK, here we are. We're almost-- kind of\ninteresting, though not too",
    "start": "1242640",
    "end": "1250400"
  },
  {
    "text": "unexpected I suppose. ",
    "start": "1250400",
    "end": "1255700"
  },
  {
    "text": "So we are, I think,\njust about done. 5 seconds, pick anything if\nyou want to get credit for this",
    "start": "1255700",
    "end": "1263830"
  },
  {
    "text": "and you haven't selected yet. Ready to go, ending polling.",
    "start": "1263830",
    "end": "1269750"
  },
  {
    "text": " Here are the results. ",
    "start": "1269750",
    "end": "1277899"
  },
  {
    "text": "And as I say, there's\nno right answer here. But if I had been in the\nclass, I would have picked B.",
    "start": "1277900",
    "end": "1288960"
  },
  {
    "text": "But I'm not surprised,\nespecially in an MIT crowd that A is the winner, all right.",
    "start": "1288960",
    "end": "1299195"
  },
  {
    "text": "Let's continue. ",
    "start": "1299195",
    "end": "1304649"
  },
  {
    "text": "OK, so now we're going to\nuse reducibility again. This is going to be yet another\nexample like the HALT TM",
    "start": "1304650",
    "end": "1310960"
  },
  {
    "text": "example, but a\nlittle bit harder.  And we're going\nto be doing this.",
    "start": "1310960",
    "end": "1316380"
  },
  {
    "text": "You know, next\nlecture, we're going to be doing more\nreducibilities but much harder. So we really got to get\nreally comfortable, all right.",
    "start": "1316380",
    "end": "1328415"
  },
  {
    "text": "I want to show E TMs. So E TM is the emptiness\nproblem for Turing machines. Is this language empty?",
    "start": "1328415",
    "end": "1333478"
  },
  {
    "text": "I'm just going to\ngive you a machine. I want to know, is this\nlanguage empty or not? Does it accept something\nor is this language empty?",
    "start": "1333478",
    "end": "1340620"
  },
  {
    "text": "That's going to be\nundecidable, no surprise, proof by contradiction. And we're going to show that\nA TM is reducible to E TM.",
    "start": "1340620",
    "end": "1348010"
  },
  {
    "text": " So these things often\ntake a very similar form.",
    "start": "1348010",
    "end": "1357160"
  },
  {
    "text": "And I'm going to try\nto use the same form. So if you're\nfeeling shaky on it, at least you'll get the form\nof the way the solution goes",
    "start": "1357160",
    "end": "1365620"
  },
  {
    "text": "and that will help you maybe\nplug-in to solve problems, OK.",
    "start": "1365620",
    "end": "1372240"
  },
  {
    "text": "So proof by\ncontradiction, assume",
    "start": "1372240",
    "end": "1377290"
  },
  {
    "text": "that E TM is decidable,\nopposite of what we've been trying to show. And then show that\nA TM is decidable,",
    "start": "1377290",
    "end": "1382450"
  },
  {
    "text": "which you know is false.  So we'll say we have\na decider for A TM,",
    "start": "1382450",
    "end": "1390440"
  },
  {
    "text": "R, using the same\nletters on purpose here just to try to get\nthe pattern for you,",
    "start": "1390440",
    "end": "1398220"
  },
  {
    "text": "so R deciding E TM. Construct S deciding A TM, OK.",
    "start": "1398220",
    "end": "1405450"
  },
  {
    "text": "So now, let's think about\nit together for a minute",
    "start": "1405450",
    "end": "1411210"
  },
  {
    "text": "before I just put it up there. ",
    "start": "1411210",
    "end": "1416390"
  },
  {
    "text": "So S, I'm trying to\nmake a decider for A TM, using my decider for the\nemptiness problem, OK?",
    "start": "1416390",
    "end": "1428850"
  },
  {
    "text": "So we have R, which can tell us\nwhether M's language is empty.",
    "start": "1428850",
    "end": "1435000"
  },
  {
    "text": "So why don't we\njust, I don't know, stick M into that emptiness\ntester and see what it says?",
    "start": "1435000",
    "end": "1443780"
  },
  {
    "text": "I'm not saying this\nis the solution, but this is how one might\nthink about coming up with the solution. ",
    "start": "1443780",
    "end": "1451350"
  },
  {
    "text": "So are you with me? We're going to take M, we\nhave an emptiness tester.",
    "start": "1451350",
    "end": "1457350"
  },
  {
    "text": "Let's take M and plug it\ninto R, see what R says. R is going to come back and\ntell us whether M's language is",
    "start": "1457350",
    "end": "1465420"
  },
  {
    "text": "empty or not. Now, one of those answers\nwill make us happy.",
    "start": "1465420",
    "end": "1472284"
  },
  {
    "text": " Why?",
    "start": "1472285",
    "end": "1477350"
  },
  {
    "text": "Suppose R tells us that\nM's language is empty.",
    "start": "1477350",
    "end": "1485640"
  },
  {
    "text": "Why is that good? With that, we're done.",
    "start": "1485640",
    "end": "1490800"
  },
  {
    "text": "Because S is trying\nto figure out, we're trying to\nfigure out exactly,",
    "start": "1490800",
    "end": "1495809"
  },
  {
    "text": "somebody told me the\nanswer which is correct. Because now we can reject.",
    "start": "1495810",
    "end": "1500919"
  },
  {
    "text": "If M's language is\nempty, it's clearly not accepting w because it's\nnot accepting anything.",
    "start": "1500920",
    "end": "1507350"
  },
  {
    "text": "So if R says M's language\nis empty, then we're good. The only problem is we also\nsay M's language is not empty.",
    "start": "1507350",
    "end": "1515470"
  },
  {
    "text": "And then what do we know? Well, not much, not much\nthat's useful for testing",
    "start": "1515470",
    "end": "1520750"
  },
  {
    "text": "whether M accepts w. We just know M\naccepts something. But that something\nmay or may not be w.",
    "start": "1520750",
    "end": "1526720"
  },
  {
    "start": "1526720",
    "end": "1532270"
  },
  {
    "text": "OK, so what do we do? Well, the problem is\nthat M is possibly",
    "start": "1532270",
    "end": "1539510"
  },
  {
    "text": "accepting all sorts of\nstrings besides w, which are kind of mucking up the works.",
    "start": "1539510",
    "end": "1546620"
  },
  {
    "text": "They're interfering with\nthe solution that we like. We'd like to be\nable to use R on M",
    "start": "1546620",
    "end": "1555470"
  },
  {
    "text": "to tell us whether\nM is accepting w. But M is accepting other things. And that's making the\npicture complicated.",
    "start": "1555470",
    "end": "1562110"
  },
  {
    "text": "So what I propose\nwe do, why don't we modify M so that it never\naccepts anything besides w?",
    "start": "1562110",
    "end": "1570830"
  },
  {
    "text": "The very first thing M\ndoes in the modified form is it looks at\nits input and sees",
    "start": "1570830",
    "end": "1576170"
  },
  {
    "text": "whether it's different from w. If it's different from w,\nit immediately rejects. ",
    "start": "1576170",
    "end": "1582880"
  },
  {
    "text": "Now we take that\nmodified machine, and we feed it into\nthe emptiness tester. ",
    "start": "1582880",
    "end": "1590860"
  },
  {
    "text": "Now the emptiness\ntester is going to give us the\ninformation we're looking for because if the emptiness\ntester says the modified",
    "start": "1590860",
    "end": "1598960"
  },
  {
    "text": "machines language\nis empty, well, we know that M is\nnot accepting w",
    "start": "1598960",
    "end": "1604179"
  },
  {
    "text": "because we haven't changed how\nM behaves when it's given w.",
    "start": "1604180",
    "end": "1609490"
  },
  {
    "text": "But if R says M's\nlanguage is not empty,",
    "start": "1609490",
    "end": "1616330"
  },
  {
    "text": "well, then it must be\nthat M is accepting w. Because we've\nalready filtered out all of the other\npossibilities when",
    "start": "1616330",
    "end": "1623440"
  },
  {
    "text": "we've modified the machine. So let me repeat\nthat on the slide",
    "start": "1623440",
    "end": "1628910"
  },
  {
    "text": "and write it down a\nlittle bit more formally. So what I'm going to do is\nI'm going to transform M",
    "start": "1628910",
    "end": "1634130"
  },
  {
    "text": "to a new Turing machine. I'm going to call it\nM sub w to emphasize the fact that this new\nmachine depends on W.",
    "start": "1634130",
    "end": "1641179"
  },
  {
    "text": "It's going to actually\nhave w built into as part of the rules of the machine.",
    "start": "1641180",
    "end": "1646668"
  },
  {
    "text": "So for a different w,\nwe're going to end up with a different machine here. So this is a machine\nwhose structure is",
    "start": "1646668",
    "end": "1652360"
  },
  {
    "text": "going to depend on knowing w.  And that machine is\ngoing to be very much",
    "start": "1652360",
    "end": "1659310"
  },
  {
    "text": "like the original\nmachine M, except that when it gets an input,\nlet's say it's called X now,",
    "start": "1659310",
    "end": "1665940"
  },
  {
    "text": "that machine is going\nto compare X with w and reject if it's not equal.",
    "start": "1665940",
    "end": "1672410"
  },
  {
    "text": " Otherwise, if X is equal to\nw, it's going to run M on w",
    "start": "1672410",
    "end": "1680900"
  },
  {
    "text": "as before. So it's not going to change the\nbehavior when the input is w. It's only going to change the\nbehavior when the input is",
    "start": "1680900",
    "end": "1688610"
  },
  {
    "text": "something different\nthan w, and then it's going to reject, all right.",
    "start": "1688610",
    "end": "1696350"
  },
  {
    "text": "So I'm going to look\nat two aspects of this.",
    "start": "1696350",
    "end": "1701660"
  },
  {
    "text": "First, let's understand the\nlanguage of this new machine. And then we'll\nalso talk about how",
    "start": "1701660",
    "end": "1707660"
  },
  {
    "text": "we go about doing\nthis transformation. So first of all,\njust for emphasis,",
    "start": "1707660",
    "end": "1716130"
  },
  {
    "text": "so Mw works just like M.\nIt has all the rules of M in it, except some extra rules.",
    "start": "1716130",
    "end": "1722600"
  },
  {
    "text": "It always at the\nvery first step, it tests whether X\nis equal to w or not.",
    "start": "1722600",
    "end": "1733600"
  },
  {
    "text": "And if it's not\nequal to, it rejects. Not equal to, reject. So the language of\nthat new machine",
    "start": "1733600",
    "end": "1739560"
  },
  {
    "text": "is either going to\nbe just the string w when M accepts w because\neverything else is filtered",
    "start": "1739560",
    "end": "1744840"
  },
  {
    "text": "out. Or the empty set if\nM rejects something. ",
    "start": "1744840",
    "end": "1751140"
  },
  {
    "text": "So it's important that you\nunderstand the behavior, at least, of this new machine.",
    "start": "1751140",
    "end": "1758790"
  },
  {
    "text": "It's just like M except\nfiltering out all of the inputs which are not w.",
    "start": "1758790",
    "end": "1765570"
  },
  {
    "text": "Those are going to be\nautomatically rejected. So it's also important\nthat S be able to make",
    "start": "1765570",
    "end": "1776300"
  },
  {
    "text": "this transformation. But I claim that you'll\nhave to accept this",
    "start": "1776300",
    "end": "1781799"
  },
  {
    "text": "if you don't totally see it. But the transformation\nis simply taking M",
    "start": "1781800",
    "end": "1789540"
  },
  {
    "text": "and adding some new rules,\nsome new transitions and states",
    "start": "1789540",
    "end": "1794670"
  },
  {
    "text": "so that the very first\nthing that M sub w does",
    "start": "1794670",
    "end": "1799680"
  },
  {
    "text": "is it just has a\nsequence of moves where it's checking that the\ninput string is equal to w",
    "start": "1799680",
    "end": "1808169"
  },
  {
    "text": "or not. And if it's not equal\nto w, it just rejects.",
    "start": "1808170",
    "end": "1813720"
  },
  {
    "text": "So it's easy to modify\nM. You could easily write a program which\nwould modify the states",
    "start": "1813720",
    "end": "1819420"
  },
  {
    "text": "and transitions of M to make it\ndo that test at the beginning.",
    "start": "1819420",
    "end": "1826280"
  },
  {
    "text": "So I'm not going to elaborate\non those kinds of things in the future. But just for the\nvery first time,",
    "start": "1826280",
    "end": "1831370"
  },
  {
    "text": "I just want to make sure you\nunderstand that we're not doing anything fishy here. This is a completely legitimate\nthing for S to be able to do.",
    "start": "1831370",
    "end": "1841570"
  },
  {
    "text": "So S can modify M\nto this new machine Mw, which filters\nthat new machine,",
    "start": "1841570",
    "end": "1848840"
  },
  {
    "text": "filters out all strings\nexcept for w and rejects them.",
    "start": "1848840",
    "end": "1855110"
  },
  {
    "text": "So S takes that new machine, and\nwhat is it going to do with it? Is it ever going to\nrun that machine? No.",
    "start": "1855110",
    "end": "1861750"
  },
  {
    "text": "This machine is built\nnot for running. This machine is built\nfor feeding into R.",
    "start": "1861750",
    "end": "1871510"
  },
  {
    "text": "Because as you remember,\nfeeding M into R had the problem that M might\naccept things besides w.",
    "start": "1871510",
    "end": "1877630"
  },
  {
    "text": "And that confuses the result\nthat we get from R in the sense that it's not useful. But if we feed Mw\ninto R, now we're",
    "start": "1877630",
    "end": "1886559"
  },
  {
    "text": "good because if the information\nabout whether Mw's language is",
    "start": "1886560",
    "end": "1892350"
  },
  {
    "text": "empty from over here tells us\nwhether or not M accepts w. ",
    "start": "1892350",
    "end": "1899500"
  },
  {
    "text": "If Mw's language is not\nempty, then M accepts w. If M's language is\nempty, M rejects w.",
    "start": "1899500",
    "end": "1905783"
  },
  {
    "start": "1905784",
    "end": "1911690"
  },
  {
    "text": "OK, so starting to get\nsome good questions here. Let me just finish\nthe description of S.",
    "start": "1911690",
    "end": "1920600"
  },
  {
    "text": "So somebody is asking here. So this is an\nexcellent question. ",
    "start": "1920600",
    "end": "1928669"
  },
  {
    "text": "How do we know that Mw\nhalts on w, or whatever?",
    "start": "1928670",
    "end": "1935440"
  },
  {
    "text": "We don't. Mw may not halt on w. We don't care.",
    "start": "1935440",
    "end": "1940820"
  },
  {
    "text": "We're never going to\nrun Mw on anything. ",
    "start": "1940820",
    "end": "1946800"
  },
  {
    "text": "We're going to take\nMw as a machine, and we're going to feed it\ninto R as a description. We are going to take\nthe description of Mw",
    "start": "1946800",
    "end": "1953460"
  },
  {
    "text": "and feed it into R.\nThen it's R's problem. But R has been assumed to\nanswer emptiness testing.",
    "start": "1953460",
    "end": "1963710"
  },
  {
    "text": "So we just took the original\nmachine, modified it so that the only possible\nthing it could accept is w.",
    "start": "1963710",
    "end": "1972100"
  },
  {
    "text": "And now feed it into\nthe emptiness tester to see whether its\nlanguage is empty or not.",
    "start": "1972100",
    "end": "1977780"
  },
  {
    "text": "Now if its language\nis not empty, it has to be accepting\nw because it's built not to accept anything else.",
    "start": "1977780",
    "end": "1984170"
  },
  {
    "text": "So we don't care whether\nMw might end up looping.",
    "start": "1984170",
    "end": "1989310"
  },
  {
    "text": "We're never going to run Mw.  I acknowledge, it's a\nleap for many of you.",
    "start": "1989310",
    "end": "1997520"
  },
  {
    "text": "So you're going to\nhave to mull it over. So we're going to use R to test\nwhether Mw's language is empty.",
    "start": "1997520",
    "end": "2006880"
  },
  {
    "text": "If yes, that means\nthat M rejects w. So then we're going\nto reject, if we know that Mw's\nlanguage is empty,",
    "start": "2006880",
    "end": "2013570"
  },
  {
    "text": "that must have been\nthat M rejected w. So now as an A TM decider,\nwhich is what S is,",
    "start": "2013570",
    "end": "2020559"
  },
  {
    "text": "S is supposed to\nreject, which is what we have here in the description.",
    "start": "2020560",
    "end": "2026090"
  },
  {
    "text": "And if no, that means the\nlanguage is not empty. So M accepts w, and so\ntherefore we're accepting.",
    "start": "2026090",
    "end": "2032830"
  },
  {
    "text": "So there's a little bit\nof a twist here also. OK, so let's take some more. ",
    "start": "2032830",
    "end": "2041580"
  },
  {
    "text": "I'm expecting some\nquestions here. So somebody is\nasking, how do you",
    "start": "2041580",
    "end": "2046860"
  },
  {
    "text": "determine if the\nlanguage is decidable? I mean, that's what we're doing.",
    "start": "2046860",
    "end": "2053100"
  },
  {
    "text": "You can show a language\nis decidable by exhibiting a Turing machine\nwhich decides it.",
    "start": "2053100",
    "end": "2059819"
  },
  {
    "text": "And you can show a\nlanguage is not decidable, which is what we're\ndoing here by proving that it's not possible for a\nTuring machine to decide it.",
    "start": "2059820",
    "end": "2067980"
  },
  {
    "text": "You know, we did\nthat first with A TM. We got that contradiction\nby diagonalization.",
    "start": "2067980",
    "end": "2073860"
  },
  {
    "text": "And here we're\ndoing a reducibility to show as the method\nof proof, all right.",
    "start": "2073860",
    "end": "2083570"
  },
  {
    "text": "Let's continue. So now we're going to\ntalk about a special kind.",
    "start": "2083570",
    "end": "2089210"
  },
  {
    "text": "So far we talked\nabout reducibility. We didn't define\nit in a precise way",
    "start": "2089210",
    "end": "2095030"
  },
  {
    "text": "because there are\nseveral different ways to get at the notion of\nreducibility precisely.",
    "start": "2095030",
    "end": "2101150"
  },
  {
    "text": "And I'm going to introduce\na one version, which is a little bit more restrictive. I mean, somewhat more\nrestrictive and a little bit",
    "start": "2101150",
    "end": "2107480"
  },
  {
    "text": "different way of looking at it\nthan we have been doing so far. But there were going to be\nsome benefits to looking",
    "start": "2107480",
    "end": "2113720"
  },
  {
    "text": "at this particular kind of\nreducibility, which we're calling mapping reducibility.",
    "start": "2113720",
    "end": "2118730"
  },
  {
    "text": "It's going to have several\nbenefits for us immediately and down the road. But this is also\na little technical",
    "start": "2118730",
    "end": "2127759"
  },
  {
    "text": "so don't get scared off.",
    "start": "2127760",
    "end": "2137450"
  },
  {
    "text": "It might look\ncomplicated at first. But we'll try to\nunpack it for you, OK.",
    "start": "2137450",
    "end": "2143819"
  },
  {
    "text": "So first of all, we have\nto first of all talk",
    "start": "2143820",
    "end": "2151080"
  },
  {
    "text": "about the notion of a\ncomputable function. So generally when we've\nhad Turing machines,",
    "start": "2151080",
    "end": "2156740"
  },
  {
    "text": "they're doing yes, no. They're doing accept,\nreject kinds of things.",
    "start": "2156740",
    "end": "2162210"
  },
  {
    "text": "So it's like a function,\njust sort of a computing, sort of a binary function.",
    "start": "2162210",
    "end": "2167630"
  },
  {
    "text": "For here, we're going to want to\ntalk about Turing machines that are computing a\nfunction which converts",
    "start": "2167630",
    "end": "2175040"
  },
  {
    "text": "one string to another string. So it's mapping from\nstrings to strings.",
    "start": "2175040",
    "end": "2182810"
  },
  {
    "text": "And it could be like the\nfunction which reverses",
    "start": "2182810",
    "end": "2188600"
  },
  {
    "text": "the string, for example. That's one possible function\nyou could be having here.",
    "start": "2188600",
    "end": "2194960"
  },
  {
    "text": "But there's of course zillions\nof possible functions here. And we're going to talk about\nfunctions that you can compute",
    "start": "2194960",
    "end": "2201410"
  },
  {
    "text": "with the Turing machine. And that basically means\nyou provide the input to the function as input\nto the Turing machine.",
    "start": "2201410",
    "end": "2207470"
  },
  {
    "text": "And the output of the function,\nthe value of the function comes out as the output\nof the Turing machine,",
    "start": "2207470",
    "end": "2212540"
  },
  {
    "text": "which let's just say it\nleaves that value on its tape when it halts. It halts with the value of\nthe function on the tape.",
    "start": "2212540",
    "end": "2218780"
  },
  {
    "text": " But just, we're thinking\nabout algorithms here.",
    "start": "2218780",
    "end": "2225050"
  },
  {
    "text": "Come up with your\nfavorite method of thinking about algorithms. It has an input and an output. And the algorithm just\ncomputes the function",
    "start": "2225050",
    "end": "2232310"
  },
  {
    "text": "by taking as input w,\nand the output is f of w. It doesn't have to\nbe a Turing machine.",
    "start": "2232310",
    "end": "2238040"
  },
  {
    "text": "Just any algorithm that\ncan compute something is good enough. They are all equivalent.",
    "start": "2238040",
    "end": "2244983"
  },
  {
    "text": "And now we're going to use\nthis notion of a function that you can compute to\ndefine a kind of reducibility",
    "start": "2244983",
    "end": "2251260"
  },
  {
    "text": "called mapping reducibility. I'm going to say that\nA is mapping reducible to B, written with this less\nthan or equal to sub M symbol.",
    "start": "2251260",
    "end": "2260752"
  },
  {
    "text": "And you're going\nto see that a lot. It's on the homework\nalso by the way. If there is some computable\nfunction as I just described,",
    "start": "2260752",
    "end": "2269890"
  },
  {
    "text": "where whenever w is\nin A, f of w is in B.",
    "start": "2269890",
    "end": "2278529"
  },
  {
    "text": "And the way to think about\nit is with this picture. So A and B are\nlanguages, written like,",
    "start": "2278530",
    "end": "2284420"
  },
  {
    "text": "here's A and here's B. And now there are strings.",
    "start": "2284420",
    "end": "2289645"
  },
  {
    "text": " So w might be in A.\nIt might be out of A.",
    "start": "2289645",
    "end": "2299140"
  },
  {
    "text": "And you think of you're trying\nto solve A. You're trying",
    "start": "2299140",
    "end": "2306010"
  },
  {
    "text": "to decide membership in\nA. So you want to test whether w is in A or not.",
    "start": "2306010",
    "end": "2314170"
  },
  {
    "text": "A mapping reducible\nis a function which maps things\nfrom this space",
    "start": "2314170",
    "end": "2322970"
  },
  {
    "text": "over to that space in a way\nthat strings that are in A get mapped to strings\nthat are in B.",
    "start": "2322970",
    "end": "2331440"
  },
  {
    "text": "So if you start out with\nw in A, f of w is in B. And if w is not in A, then f\nof w is not in B. Pictorially",
    "start": "2331440",
    "end": "2344490"
  },
  {
    "text": "it's a simple idea. We'll have to make\nsure we understand why this fits with our\nconcept of reducibility.",
    "start": "2344490",
    "end": "2353910"
  },
  {
    "text": "But we'll do that. But anyway, let's\nfirst understand just what we're doing here. We're just coming up\nwith a function that",
    "start": "2353910",
    "end": "2360540"
  },
  {
    "text": "can do this kind of a mapping. It sort of translates\nproblems which inputs which may or may not be\nin A into other strings which",
    "start": "2360540",
    "end": "2372390"
  },
  {
    "text": "may or may not be in B.\nBut sort of maintaining",
    "start": "2372390",
    "end": "2380970"
  },
  {
    "text": "the same membership property. So if you start out\nwith something in A, when you apply f, you're going\nto end up with something in B.",
    "start": "2380970",
    "end": "2388859"
  },
  {
    "text": "And conversely, if you're not in\nA, then you won't be in B, OK?",
    "start": "2388860",
    "end": "2394715"
  },
  {
    "text": " Somebody is asking, so just\na couple of questions here.",
    "start": "2394715",
    "end": "2401700"
  },
  {
    "text": "Not necessarily 1-to-1? No, so the function\ndoesn't have to be 1-to-1. There could be multiple things\nthat map to the same point.",
    "start": "2401700",
    "end": "2408455"
  },
  {
    "text": " And is there any\nrestriction on the alphabet?",
    "start": "2408455",
    "end": "2413820"
  },
  {
    "text": "No.  So before we actually\nget into the example,",
    "start": "2413820",
    "end": "2424400"
  },
  {
    "text": "let me try to give\nyou a sense about why we call this a reducibility.",
    "start": "2424400",
    "end": "2430440"
  },
  {
    "text": "And the reason is, suppose\nwe have such an f which can",
    "start": "2430440",
    "end": "2436700"
  },
  {
    "text": "do the mapping as I described. And we also have a way of\ndeciding membership in B.",
    "start": "2436700",
    "end": "2445820"
  },
  {
    "text": "So B is decidable. So that's going to tell us\nright away that A is decidable.",
    "start": "2445820",
    "end": "2451250"
  },
  {
    "text": "Because if you have some\ninput, and you want to know, is it an A or not, you can now\napply f and test whether f of w",
    "start": "2451250",
    "end": "2462380"
  },
  {
    "text": "is in B. So the\ntest of w is in A,",
    "start": "2462380",
    "end": "2469230"
  },
  {
    "text": "you're going to instead\ntest whether f of w is in B. And we're assuming that shows\nthat A is reducible to B.",
    "start": "2469230",
    "end": "2476050"
  },
  {
    "text": "So if you could solve the B\nproblem, that also gives you a way to solve the A problem.",
    "start": "2476050",
    "end": "2482200"
  },
  {
    "text": "So again, we're going to\nsay this several times in several different ways. So if you didn't quite\nget it yet, don't panic.",
    "start": "2482200",
    "end": "2491040"
  },
  {
    "text": "So here is going\nto be an example. Sort of building on what\nwe just showed last time",
    "start": "2491040",
    "end": "2497250"
  },
  {
    "text": "in the previous\nslide, A TM, we're going to show how\nA TM is actually mapping reducible to\nthe complement of E TM.",
    "start": "2497250",
    "end": "2505740"
  },
  {
    "text": "And the complement\nis necessary here.  The computable function\nthat we're going to give,",
    "start": "2505740",
    "end": "2513109"
  },
  {
    "text": "which is basically,\nthe computable function is going to translate\nproblems about A TM",
    "start": "2513110",
    "end": "2521660"
  },
  {
    "text": "to problems about E TM\nbecause we're mapping reducing",
    "start": "2521660",
    "end": "2526730"
  },
  {
    "text": "A TM to the complement of E TM. So what we're doing here is with\nmapping M and w to the machine",
    "start": "2526730",
    "end": "2536420"
  },
  {
    "text": "Mw.  Kind of in a way, we're\nboiling out the essence,",
    "start": "2536420",
    "end": "2543890"
  },
  {
    "text": "boiling down to the\nessence of the proof that we gave in\nthe previous slide. This is really the\ncore of the proof.",
    "start": "2543890",
    "end": "2551590"
  },
  {
    "text": "This translation of Mw\nwhere you want to know, is M accepting w to a new\nmachine Mw where you're testing",
    "start": "2551590",
    "end": "2559780"
  },
  {
    "text": "whether Mw's language is empty. And so remember Mw from before.",
    "start": "2559780",
    "end": "2567180"
  },
  {
    "text": "It's the machine\nthat filters out all the non-w's\nand rejects them. ",
    "start": "2567180",
    "end": "2574060"
  },
  {
    "text": "And the reason why this\nreduction function works is that Mw is in A TM,\nif and only if M sub w",
    "start": "2574060",
    "end": "2582930"
  },
  {
    "text": "is in the complement of A TM. So M accepts w exactly when\nMw's language is not empty, OK?",
    "start": "2582930",
    "end": "2596400"
  },
  {
    "text": "So M accepts w if and\nonly if the language of Mw is not empty. So you have to mull this\nover a bit to realize it's--",
    "start": "2596400",
    "end": "2603869"
  },
  {
    "text": "I know this can be\na little tricky. But I think what we're\ngoing to do here,",
    "start": "2603870",
    "end": "2610440"
  },
  {
    "text": "I think we're at the\ntime for the break. So oh, no, there's\none more slide.",
    "start": "2610440",
    "end": "2616260"
  },
  {
    "text": "I apologize. So let's talk\nabout this and then we're going to have\nour coffee break. ",
    "start": "2616260",
    "end": "2627490"
  },
  {
    "text": "So these properties\nare really going to be getting at what\nmakes mapping reducibility",
    "start": "2627490",
    "end": "2636370"
  },
  {
    "text": "fit with our understanding of\nwhat a reducibility should be. So if A is mapping reducible\nto B, and B is decidable,",
    "start": "2636370",
    "end": "2643360"
  },
  {
    "text": "then so is A. So that\nfits with what we want. Because if A is reducible to B,\nand B is easy, then A is easy.",
    "start": "2643360",
    "end": "2650850"
  },
  {
    "text": "So here easy means decidable. And here is the proof. Let's take a Turing\nmachine that decides B",
    "start": "2650850",
    "end": "2657420"
  },
  {
    "text": "and construct a Turing machine\nthat decides A as claimed,",
    "start": "2657420",
    "end": "2663010"
  },
  {
    "text": "S operates like this. It takes its input,\ncomputes f of that input,",
    "start": "2663010",
    "end": "2668860"
  },
  {
    "text": "tests whether f of w\nis in B using the R",
    "start": "2668860",
    "end": "2678520"
  },
  {
    "text": "machine that we were assuming. We have R deciding B.\nAnd if R halts then",
    "start": "2678520",
    "end": "2685150"
  },
  {
    "text": "output the same result. So if R accepts,\nwe're going to accept. If R halts and\nrejects, we'll reject.",
    "start": "2685150",
    "end": "2691590"
  },
  {
    "text": "And of course we're going\nto be similarly running R. So if R is not\ngoing to be halting, we are not going to\nend up halting either.",
    "start": "2691590",
    "end": "2698630"
  },
  {
    "text": "OK? So the corollary is,\nand this is the way we're going to be using\nit, if A is reducible to B",
    "start": "2698630",
    "end": "2709619"
  },
  {
    "text": "and A is undecidable, then so\nis B. So this is as I mentioned,",
    "start": "2709620",
    "end": "2717090"
  },
  {
    "text": "the focus for us is going\nto be on undecidability. And you may want\nto think about A",
    "start": "2717090",
    "end": "2722250"
  },
  {
    "text": "is like the A TM problem\nwhich we know is undecidable. We're going to show\nthe A TM is mapping",
    "start": "2722250",
    "end": "2729090"
  },
  {
    "text": "reducible to some other problem\nto show that other problem is undecidable. ",
    "start": "2729090",
    "end": "2736938"
  },
  {
    "text": "And the important\nthing about mapping reducibility is that it\nalso applies to recognizes.",
    "start": "2736938",
    "end": "2742990"
  },
  {
    "text": "So if A is mapping\nreducible to B, and B is Turing\nrecognizable, then so is A.",
    "start": "2742990",
    "end": "2748150"
  },
  {
    "text": "So if you're reducing A\nto a recognizable problem, then A is also\nrecognizable, same proof.",
    "start": "2748150",
    "end": "2754740"
  },
  {
    "text": "Because you can just\nmap your w to f of w and feed it into the recognizer.",
    "start": "2754740",
    "end": "2761130"
  },
  {
    "text": "That's going to give\nyou a recognizer for the original language. ",
    "start": "2761130",
    "end": "2767010"
  },
  {
    "text": "And the corollary is that if\nA is mapping reducible to B, and A is unrecognizable,\nthen so is B.",
    "start": "2767010",
    "end": "2774300"
  },
  {
    "text": "So this is again\nthat inverted logic. So now I think we're--",
    "start": "2774300",
    "end": "2780970"
  },
  {
    "text": "oops, I meant to put\nthis picture up earlier. OK, so here's a check in.",
    "start": "2780970",
    "end": "2788710"
  },
  {
    "text": "It will be more of a\ncheck in for me to see how well you're following me.",
    "start": "2788710",
    "end": "2794660"
  },
  {
    "text": "So these are some properties-- so I'll give you a\nminute here to think about this-- some properties\nof mapping reducibility.",
    "start": "2794660",
    "end": "2803720"
  },
  {
    "text": "Suppose A is mapping reducible\nto B, what can we conclude?",
    "start": "2803720",
    "end": "2808869"
  },
  {
    "text": "Does that mean that\nwe can flip it around? If A is mapping\nreducible to B, does that",
    "start": "2808870",
    "end": "2813950"
  },
  {
    "text": "mean that B is mapping\nreducible to A? What about this one? If A is mapping reducible\nto B, is the complement",
    "start": "2813950",
    "end": "2821610"
  },
  {
    "text": "of A mapping reducible\nto the complement of B, or maybe neither? So you can check all that apply,\nmultiple choice, 5 seconds.",
    "start": "2821610",
    "end": "2837260"
  },
  {
    "text": " Sorry to pressure you, but\nwe have to move on here.",
    "start": "2837260",
    "end": "2844660"
  },
  {
    "text": "Pick anything. If you don't know, OK,\n1, 2, 3, the end, OK.",
    "start": "2844660",
    "end": "2853290"
  },
  {
    "text": " Well, the majority is correct.",
    "start": "2853290",
    "end": "2860540"
  },
  {
    "text": "In fact, it's only\nB. Now, A really",
    "start": "2860540",
    "end": "2871170"
  },
  {
    "text": "is not in the spirit\nof reducibility. Because as suggested even by\nthe inequality sign there,",
    "start": "2871170",
    "end": "2879809"
  },
  {
    "text": "A being reducible to B is really\na rather different thing than B being reducible to A.",
    "start": "2879810",
    "end": "2887890"
  },
  {
    "text": "So that's something. We're not going to\nprove that right here. But that's something that\nyou could think about.",
    "start": "2887890",
    "end": "2897760"
  },
  {
    "text": "But part B, I think,\nif you just look here at the definition of\nmapping reducibility,",
    "start": "2897760",
    "end": "2906370"
  },
  {
    "text": "it maps strings in\nto in and out to out. Well, that's just going to be if\nyou exchange in and out as you",
    "start": "2906370",
    "end": "2913960"
  },
  {
    "text": "do when you're flipping\ncompliments on both sides, it's still by the same f going\nto still work as a mapping",
    "start": "2913960",
    "end": "2920380"
  },
  {
    "text": "reduction, OK? So now we're at\nour coffee break.",
    "start": "2920380",
    "end": "2927170"
  },
  {
    "text": "So we're going to take\nfive minutes here,",
    "start": "2927170",
    "end": "2934920"
  },
  {
    "text": "and I'll be happy to\ntake questions here.",
    "start": "2934920",
    "end": "2942910"
  },
  {
    "text": "Don't forget the TAs. They're here to. ",
    "start": "2942910",
    "end": "2948214"
  },
  {
    "text": "OK. ",
    "start": "2948215",
    "end": "2959530"
  },
  {
    "text": "OK, so this is a\nfair question here. You know, so we had this\nnotion of a general reduction and a mapping reduction.",
    "start": "2959530",
    "end": "2966460"
  },
  {
    "text": "They are not the same. So any time you have\na mapping reduction, it's going to be an example of\na general reduction, but not",
    "start": "2966460",
    "end": "2973390"
  },
  {
    "text": "the other way around. So if you go back and\nlook at the reduction that we offered\nfor HALT TM where",
    "start": "2973390",
    "end": "2981819"
  },
  {
    "text": "we showed A TM is reducible\nto HALT TM where we started, it's actually not\na mapping reduction",
    "start": "2981820",
    "end": "2989743"
  },
  {
    "text": "because we're doing\nsomething more complicated than translating an A\nTM problem to a HALT TM.",
    "start": "2989743",
    "end": "2995020"
  },
  {
    "text": "We're kind of using\nthe HALT TM decider in a more complicated way. And there are cases where\nthat's actually necessary.",
    "start": "2995020",
    "end": "3003340"
  },
  {
    "text": "So we're not going\nto discuss that here.",
    "start": "3003340",
    "end": "3008570"
  },
  {
    "text": "But it's actually kind of an\ninteresting homework problem perhaps, or some kind of\na problem to think about.",
    "start": "3008570",
    "end": "3014150"
  },
  {
    "text": " So Turing machines for f's,\nit's not really a decider,",
    "start": "3014150",
    "end": "3022849"
  },
  {
    "text": "but it has to be-- well, I guess it does have\nto be a decider in a way. It's always halts. The Turing machines for\nf has to always halt.",
    "start": "3022850",
    "end": "3029089"
  },
  {
    "text": "It always has to have an output. So f for the computing the\nfunction always has to halt.",
    "start": "3029090",
    "end": "3041910"
  },
  {
    "text": "So someone is asking me,\ncan I explain the statement that if error halts, then\noutput the same result?",
    "start": "3041910",
    "end": "3049640"
  },
  {
    "text": "I just mean that in that\nprevious slide, or two slides back, if R accepts,\nhalts and accepts,",
    "start": "3049640",
    "end": "3057320"
  },
  {
    "text": "then we're going\nto halt and accept. And if R halts and rejects,\nthen we halt and reject. So I don't know if\nthis is a good idea,",
    "start": "3057320",
    "end": "3064400"
  },
  {
    "text": "but we can just\npull that back here. So that was the statement here. If our halts and\noutput the same result,",
    "start": "3064400",
    "end": "3070310"
  },
  {
    "text": "I just mean that S is\ngoing to do the same. You know, we're translating\nan A problem to a B problem,",
    "start": "3070310",
    "end": "3078950"
  },
  {
    "text": "and then answering\nthe B problem. And we're going to give the same\nvalue, the same answer there.",
    "start": "3078950",
    "end": "3085740"
  },
  {
    "text": "So whatever R says,\nwe're going to say too, if that's helpful, all right.",
    "start": "3085740",
    "end": "3095070"
  },
  {
    "text": " Boy, this is a\ngood question here. ",
    "start": "3095070",
    "end": "3101860"
  },
  {
    "text": "If A is reducible to B, why\ncan't we just get B reducible to A by inverting the function?",
    "start": "3101860",
    "end": "3108400"
  },
  {
    "text": "That's a great question. I like that question. The reason is because the\nfunction that's mapping onto B",
    "start": "3108400",
    "end": "3117910"
  },
  {
    "text": "doesn't have to be onto,\nsubjective I guess. So if it was onto, so\nif it covered all of B,",
    "start": "3117910",
    "end": "3130030"
  },
  {
    "text": "then I think then you would\nget an invertible function. And you would get the reduction\ngoing the other way as well.",
    "start": "3130030",
    "end": "3138560"
  },
  {
    "text": "But though, I'm not sure\nwhat happens when you have. It doesn't matter if\nyou have collisions.",
    "start": "3138560",
    "end": "3144053"
  },
  {
    "text": "It turns out that's\nnot going to matter. But anyway, let's not get\nit too complicated here. But the problem with inverting\nit is that it's not necessarily",
    "start": "3144053",
    "end": "3153190"
  },
  {
    "text": "onto the whole range of B.",
    "start": "3153190",
    "end": "3162710"
  },
  {
    "text": "So we're kind of\nout of time here.  Is A reducible to A compliment?",
    "start": "3162710",
    "end": "3168970"
  },
  {
    "text": "Let me just handle that. No, not necessarily. It's reducible.",
    "start": "3168970",
    "end": "3175910"
  },
  {
    "text": "A is reducible to A complement,\nbut not mapping reducible to A compliment.",
    "start": "3175910",
    "end": "3181250"
  },
  {
    "text": "But A is general\nreducible to A compliment. So actually we'll talk. I have a slide on that.",
    "start": "3181250",
    "end": "3187740"
  },
  {
    "text": "So let us move on, OK? Mapping I think, it's\nactually this line, mapping",
    "start": "3187740",
    "end": "3194370"
  },
  {
    "text": "versus general reducibility. So we're going to\ncontrast it to a bit.",
    "start": "3194370",
    "end": "3199408"
  },
  {
    "text": "So mapping reducibility,\nwhich is what we've just been talking about\nhas this picture, which is, I think, a very\nuseful picture to remember.",
    "start": "3199408",
    "end": "3207090"
  },
  {
    "text": "And because I like to think\nof a mapping reduction",
    "start": "3207090",
    "end": "3214590"
  },
  {
    "text": "as a problem translator. Your problem is sort\nof in the A domain.",
    "start": "3214590",
    "end": "3220080"
  },
  {
    "text": "And the mapping reduction allows\nyou to translate that problem into the B domain.",
    "start": "3220080",
    "end": "3226030"
  },
  {
    "text": "OK, and then if you have a way\nof solving it in the B domain, combining that\nwith the reduction,",
    "start": "3226030",
    "end": "3231220"
  },
  {
    "text": "you get a solution to the\nproblem in the A domain. So that's why if A is\nmapping reducible to B,",
    "start": "3231220",
    "end": "3239380"
  },
  {
    "text": "and B is solvable, then\nA is also solvable. ",
    "start": "3239380",
    "end": "3244700"
  },
  {
    "text": "So mapping reduction is a\nspecial kind of reducibility, as opposed to the general\nnotion in general reducibility",
    "start": "3244700",
    "end": "3251440"
  },
  {
    "text": "where we started. And it's particularly useful to\nprove Turing unrecognizability.",
    "start": "3251440",
    "end": "3256990"
  },
  {
    "text": "So when you want to prove\nTuring unrecognizability,",
    "start": "3256990",
    "end": "3262600"
  },
  {
    "text": "as we'll see, general\nreducibility is not fine",
    "start": "3262600",
    "end": "3268090"
  },
  {
    "text": "enough in a way, it doesn't\nsort of differentiate things as well as mapping\nreducibility does.",
    "start": "3268090",
    "end": "3274089"
  },
  {
    "text": "And for that reason,\nit's not always going to be useful to prove\nTuring unrecognizability.",
    "start": "3274090",
    "end": "3281020"
  },
  {
    "text": "It's better for\nproving undecidability. ",
    "start": "3281020",
    "end": "3287240"
  },
  {
    "text": "So what we're\ncalling reducibility, or general reducibility\nis where we just",
    "start": "3287240",
    "end": "3292750"
  },
  {
    "text": "use a solvent for B\nto solve A in sort of a most general possible way.",
    "start": "3292750",
    "end": "3298460"
  },
  {
    "text": "So I'm writing that\nas a picture here. If you want to solve\nA, you're going to use the B solver as\na subroutine to solve A.",
    "start": "3298460",
    "end": "3307942"
  },
  {
    "text": "That's the way we did the HALT\nTM reduction at the beginning.",
    "start": "3307942",
    "end": "3313269"
  },
  {
    "text": "But we didn't necessarily\ntranslate an A TM problem to a HALT TM problem.",
    "start": "3313270",
    "end": "3318830"
  },
  {
    "text": "It's slightly different. So you can go back\nand look at that. So I find that people\nstruggle more with the mapping",
    "start": "3318830",
    "end": "3327380"
  },
  {
    "text": "reducibility concept. And that the\ngeneral reducibility is what people naturally\ngravitate towards.",
    "start": "3327380",
    "end": "3333650"
  },
  {
    "text": "And so in some sense,\nit's conceptually simpler. And it's useful to\nproving undecidability. But you really have to\nbe comfortable with both.",
    "start": "3333650",
    "end": "3340520"
  },
  {
    "text": "And especially in\nthe complexity part, we're going to be focusing\non mapping reducibility.",
    "start": "3340520",
    "end": "3348059"
  },
  {
    "text": "So one noteworthy difference\nhere as sort of foreshadowed by the person who made\nthis question, which",
    "start": "3348060",
    "end": "3355349"
  },
  {
    "text": "is a good question,\nis that A is reducible using a general reduction to A\ncompliment, which kind of makes",
    "start": "3355350",
    "end": "3362369"
  },
  {
    "text": "sense. I mean, if I can test whether\nthings are in A compliment,",
    "start": "3362370",
    "end": "3368702"
  },
  {
    "text": "well, I can test\nwhether things are in A. You just invert the answer. But A may not be mapping\nreducible to A compliment",
    "start": "3368702",
    "end": "3377839"
  },
  {
    "text": "because there is a very\nspecial kind of reduction. And you have to just translate\nthings in the language",
    "start": "3377840",
    "end": "3384944"
  },
  {
    "text": "to things in the language,\nand things out of the language to things out of the language. And they don't necessarily\nallow you to do that inversion.",
    "start": "3384945",
    "end": "3392000"
  },
  {
    "text": "So for example, A\nTM complement is not mapping reducible to A TM.",
    "start": "3392000",
    "end": "3398870"
  },
  {
    "text": "Because as we\npointed out, anything that's reducible to a\nrecognizable language",
    "start": "3398870",
    "end": "3405089"
  },
  {
    "text": "is going to be recognizable. Anything mapping reducible\nto a recognizable language",
    "start": "3405090",
    "end": "3410100"
  },
  {
    "text": "is going to be recognizable. But we know that A TM\ncomplement is not recognizable.",
    "start": "3410100",
    "end": "3415390"
  },
  {
    "text": "We showed that before. So it couldn't be mapping\nreducible to A TM.",
    "start": "3415390",
    "end": "3422076"
  },
  {
    "text": "It's coming a little\nfast I realize. You're going to\nhave to digest it.",
    "start": "3422076",
    "end": "3427210"
  },
  {
    "text": "So here's the last\ncheck in for today. ",
    "start": "3427210",
    "end": "3436349"
  },
  {
    "text": "OK, we showed that if A\nis mapping reducible to B, and B is Turing\nrecognizable, then so is A.",
    "start": "3436350",
    "end": "3443740"
  },
  {
    "text": "And so let's just say\nthat again carefully. If A is mapping reducible to B,\nand B is Turing recognizable,",
    "start": "3443740",
    "end": "3452220"
  },
  {
    "text": "then so is A. And here are the\nemphasis on Turing recognizable",
    "start": "3452220",
    "end": "3457349"
  },
  {
    "text": "as opposed to decidable. Is the same true if we use\ngeneral reducibility instead",
    "start": "3457350",
    "end": "3463760"
  },
  {
    "text": "of mapping reducibility? So you got it? So we're saying A is\nmapping reducible to B",
    "start": "3463760",
    "end": "3471350"
  },
  {
    "text": "using this picture over here. And we're going to assume\nthat B is Turing recognizable,",
    "start": "3471350",
    "end": "3479670"
  },
  {
    "text": "so that we have a\nmachine which halts an accepts when you're\ninside B, and you know,",
    "start": "3479670",
    "end": "3487411"
  },
  {
    "text": "is going to reject possibly\na looping when you're not inside B. Now, that allows you to get\na recognizer for A if you",
    "start": "3487412",
    "end": "3496520"
  },
  {
    "text": "have a mapping reduction. Does it always work to\ngive you a recognizer if you have just a\ngeneral reduction?",
    "start": "3496520",
    "end": "3503210"
  },
  {
    "text": "If you just have now,\nassuming you have a B solver, and you're going to build\nan A solver out of that.",
    "start": "3503210",
    "end": "3509170"
  },
  {
    "text": " OK, so mull that over while\nI'm setting this thing up.",
    "start": "3509170",
    "end": "3515020"
  },
  {
    "text": " Well, the right answer is\nwinning, but not by much.",
    "start": "3515020",
    "end": "3522329"
  },
  {
    "text": "I suppose I shouldn't\nbe laughing about it. But I knew that this is\ngoing to be challenging.",
    "start": "3522330",
    "end": "3529902"
  },
  {
    "text": "So I think it's the\nkind of thing you're going to have to work at.",
    "start": "3529903",
    "end": "3535630"
  },
  {
    "text": "So let's see we're almost\ndone here, 5 seconds to go.",
    "start": "3535630",
    "end": "3541789"
  },
  {
    "text": "Better answer that, I\ncan see a few of you, either you've left\nthe room, or you're--",
    "start": "3541790",
    "end": "3549250"
  },
  {
    "text": "OK, 2 seconds, 1, 2, 3. Somebody hasn't answered it. ",
    "start": "3549250",
    "end": "3558750"
  },
  {
    "text": "There we go. So the correct answer\nis B. It's not the same.",
    "start": "3558750",
    "end": "3564000"
  },
  {
    "text": "The reason is that\nin general, I mean, the picture is right here. ",
    "start": "3564000",
    "end": "3575360"
  },
  {
    "text": "Let's see, how do\nI explain this?",
    "start": "3575360",
    "end": "3587360"
  },
  {
    "text": "So we know that a\nlanguage is going to be--",
    "start": "3587360",
    "end": "3598080"
  },
  {
    "text": "OK, if we're using\ngeneral disability and A is just reducible to B,",
    "start": "3598080",
    "end": "3611490"
  },
  {
    "text": "we know that a\nlanguage is always reducible to its complement\nin using general reducibility.",
    "start": "3611490",
    "end": "3619790"
  },
  {
    "text": "So if this were true,\nthen we would have here",
    "start": "3619790",
    "end": "3633630"
  },
  {
    "text": "so if this were true,\nwhen a language is",
    "start": "3633630",
    "end": "3640759"
  },
  {
    "text": "reducible to its complement,\nif the complement were recognizable, the language\nwould also be recognizable.",
    "start": "3640760",
    "end": "3646940"
  },
  {
    "text": "That clearly is not going to\nbe the case because you know,",
    "start": "3646940",
    "end": "3653040"
  },
  {
    "text": "A TM complement is\nreducible to A TM using general reducibility.",
    "start": "3653040",
    "end": "3658819"
  },
  {
    "text": "But A TM complement\nis not recognizable even though A TM\nis recognizable.",
    "start": "3658820",
    "end": "3664280"
  },
  {
    "text": "So we kind of have a proof\nthat this has to be no. But as you can see, I'm even\ngetting myself confused.",
    "start": "3664280",
    "end": "3672170"
  },
  {
    "text": "So you have to stare at it. So let me see, we can try to\ntake a couple of questions",
    "start": "3672170",
    "end": "3677630"
  },
  {
    "text": "see if I can clear up\npeople's confusion. So why again, is A\nreducible to its complement",
    "start": "3677630",
    "end": "3684720"
  },
  {
    "text": "in the general sense? So I'm saying, if\nyou have a solver,",
    "start": "3684720",
    "end": "3689810"
  },
  {
    "text": "if you have a decider\nfor A compliment, it gives you a solver for\nA. You just ask the solver,",
    "start": "3689810",
    "end": "3698180"
  },
  {
    "text": "is the string in\nthe language or not? And now you just give\nthe opposite answer",
    "start": "3698180",
    "end": "3705240"
  },
  {
    "text": "if you want to solve the\ncomplimentary problem. So the A complement is\ngeneral reducible to A.",
    "start": "3705240",
    "end": "3713250"
  },
  {
    "text": "You just invert the answer for\nwhatever the solver is doing for A. But you can't just\ndo that inversion when",
    "start": "3713250",
    "end": "3718830"
  },
  {
    "text": "you have a mapping reduction. It's a much more kind of\nspecific translation that's",
    "start": "3718830",
    "end": "3727690"
  },
  {
    "text": "allowed.  I mean, the\nfundamental difference",
    "start": "3727690",
    "end": "3732740"
  },
  {
    "text": "between general reducibility\nand mapping reducibility, I'm trying to bring it out here. It's just a difference\nin the nature",
    "start": "3732740",
    "end": "3739130"
  },
  {
    "text": "of the way things are used. Mapping reducibility\nis a special kind of general reducibility.",
    "start": "3739130",
    "end": "3745010"
  },
  {
    "text": "So to answer the\nquestion about what's the fundamental difference,\none is using the problem",
    "start": "3745010",
    "end": "3751579"
  },
  {
    "text": "as a subroutine and the one is\nusing it as a transformation.",
    "start": "3751580",
    "end": "3758750"
  },
  {
    "text": " Anyway, I think we're going\nto have to move on here.",
    "start": "3758750",
    "end": "3766540"
  },
  {
    "text": "And I am going to have couple\nof examples which may help. And then, there are office\nhours too after the lecture.",
    "start": "3766540",
    "end": "3777750"
  },
  {
    "text": "OK, oh, yeah, so I wanted\nto again to help you. I'm putting these down\nas sort of templates",
    "start": "3777750",
    "end": "3784290"
  },
  {
    "text": "for how do you use reducibility. I'm not saying you should\njust apply things blindly.",
    "start": "3784290",
    "end": "3791460"
  },
  {
    "text": "But I think it's sometimes\ngood just to see the pattern and then to understand\nhow the pattern works. So once you just start\nto understand the pattern",
    "start": "3791460",
    "end": "3799560"
  },
  {
    "text": "of how things are used. So to show a language\nis undecidable,",
    "start": "3799560",
    "end": "3804570"
  },
  {
    "text": "to prove a language\nB is undecidable, show undecidable\nlanguages reducible to B.",
    "start": "3804570",
    "end": "3812589"
  },
  {
    "text": "Using just a general reduction\nis going to be good enough. And the template\nfor that is, assume",
    "start": "3812590",
    "end": "3819520"
  },
  {
    "text": "we have R deciding\nB, which you then can use as a subroutine when\nyou make a Turing machine S",
    "start": "3819520",
    "end": "3828590"
  },
  {
    "text": "deciding A. And that's going\nto be your contradiction. If A was originally shown to\nbe known to be undecidable.",
    "start": "3828590",
    "end": "3835894"
  },
  {
    "text": " But now to prove something\nunrecognizable, this kind",
    "start": "3835894",
    "end": "3843260"
  },
  {
    "text": "of reduction it's not\nas restrictive enough",
    "start": "3843260",
    "end": "3854060"
  },
  {
    "text": "because this kind of reduction\nallows for complementation which is not going to be\nsatisfactory when you're trying",
    "start": "3854060",
    "end": "3861410"
  },
  {
    "text": "to prove Turing unrecognizable. So you're going to have to\nprohibit the complementation.",
    "start": "3861410",
    "end": "3867115"
  },
  {
    "text": "And that's really one of\nthe effects of the mapping reducibility if that sort of is\ngetting at the essence of it.",
    "start": "3867115",
    "end": "3873470"
  },
  {
    "text": "So you're going to show an\nunTuring of a recognizable A is mapping reducible to\nB. Often you start out",
    "start": "3873470",
    "end": "3879920"
  },
  {
    "text": "with the complement of A\nTM, which is a language we know is Turing unrecognizable\nas we showed before,",
    "start": "3879920",
    "end": "3890400"
  },
  {
    "text": "OK, here the template is you\ngive the reduction function f, that computable function, OK.",
    "start": "3890400",
    "end": "3897930"
  },
  {
    "text": " So here are going\nto be two examples, one showing that E TM is\nTuring unrecognizable.",
    "start": "3897930",
    "end": "3906140"
  },
  {
    "text": "We showed it was\nundecidable before. Now we're going to show\nit's even in a sense worse.",
    "start": "3906140",
    "end": "3912580"
  },
  {
    "text": "It's not even recognizable. And the way we'll do that is to\nreduce a known unrecognizable",
    "start": "3912580",
    "end": "3923710"
  },
  {
    "text": "language to E TM in\nthe emptiness language. ",
    "start": "3923710",
    "end": "3931070"
  },
  {
    "text": "So here is the\npicture that we have when we're doing\nmapping reductions.",
    "start": "3931070",
    "end": "3937010"
  },
  {
    "text": "We're going to map strings that\nare in the complement of A TM,",
    "start": "3937010",
    "end": "3943680"
  },
  {
    "text": "so strings that\nare outside of A TM if you wish to strings where the\nlanguage is empty to machines",
    "start": "3943680",
    "end": "3951922"
  },
  {
    "text": "where the language is empty. And here are strings\ndescribing machines which are where the language is empty.",
    "start": "3951923",
    "end": "3957830"
  },
  {
    "text": "And here we're going\nto take A TM problems",
    "start": "3957830",
    "end": "3964770"
  },
  {
    "text": "and map them to machines where\nthe language is not empty. And the thing that's\ngoing to do the trick",
    "start": "3964770",
    "end": "3971400"
  },
  {
    "text": "is going to be that\nsame reduction function that we saw earlier. ",
    "start": "3971400",
    "end": "3978760"
  },
  {
    "text": "We're going to take that\nmachine w from before, the machine that filters\nout all the non-w's.",
    "start": "3978760",
    "end": "3987820"
  },
  {
    "text": "And we're going to take Mw,\nwhich is an A TM compliment",
    "start": "3987820",
    "end": "3996860"
  },
  {
    "text": "problem.  So if M rejects w that it's\nin the complement of A TM,",
    "start": "3996860",
    "end": "4005100"
  },
  {
    "text": "and that's supposed to map\nto a string, a machine which",
    "start": "4005100",
    "end": "4010860"
  },
  {
    "text": "is where the language\nis empty, OK.",
    "start": "4010860",
    "end": "4020530"
  },
  {
    "text": "So if Mw is in the complement\nof A TM, so M rejects w, then Mw's language\nis going to be empty,",
    "start": "4020530",
    "end": "4026410"
  },
  {
    "text": "which is what you\nwant to have happen. ",
    "start": "4026410",
    "end": "4031510"
  },
  {
    "text": "Let me move on to my last. I mean, this example is\nin a way kind of similar to the one we did before. And I really want to get\nto the last example here.",
    "start": "4031510",
    "end": "4040540"
  },
  {
    "text": "OK, so we'll have to\njust talk through this rather than having it build.",
    "start": "4040540",
    "end": "4046690"
  },
  {
    "text": " Let's take EQ TM.",
    "start": "4046690",
    "end": "4051730"
  },
  {
    "text": "That's the equivalence\nproblem for Turing machines. Do they recognize\nthe same language?",
    "start": "4051730",
    "end": "4059485"
  },
  {
    "text": " So this is a language\nof a new kind for us.",
    "start": "4059485",
    "end": "4067630"
  },
  {
    "text": "This is a language where\nneither it nor its complement are going to be recognizable,\nTuring recognizable.",
    "start": "4067630",
    "end": "4073648"
  },
  {
    "text": " So the way we get that is, the\nway we show problems are not",
    "start": "4073648",
    "end": "4085550"
  },
  {
    "text": "recognizable is mapping reduce\na non-recognizable language",
    "start": "4085550",
    "end": "4091830"
  },
  {
    "text": "to typically the\ncomplement of A TM. So we're going to mapping\nreduce the complement of A TM",
    "start": "4091830",
    "end": "4097020"
  },
  {
    "text": "to both EQ TM and to\nthe complement of EQ TM",
    "start": "4097020",
    "end": "4103200"
  },
  {
    "text": "to show that both of those\nare not recognizable. And here we're going to\nintroduce a new machine",
    "start": "4103200",
    "end": "4110140"
  },
  {
    "text": "that we're going to be building\ninside the reduction function.",
    "start": "4110140",
    "end": "4115410"
  },
  {
    "text": "And that's going to be a\nmachine I'm going to call Tw. And Tw is a machine that\nalways behaves the way",
    "start": "4115410",
    "end": "4124880"
  },
  {
    "text": "M behaves on w for every input. So if M accepts w, T is\ngoing to accept everything.",
    "start": "4124880",
    "end": "4133599"
  },
  {
    "text": "If M rejects w, T is going\nto reject everything. So it copies the behavior\nof M on w onto all inputs.",
    "start": "4133600",
    "end": "4142740"
  },
  {
    "text": "And the way I describe\nthat machine Tw is it ignores its input. Whatever the input is,\nit just simulates M on w.",
    "start": "4142740",
    "end": "4151979"
  },
  {
    "text": "You could easily\ngive an M and w, you can build the machine Tw. It just always runs M on w,\nno matter what input it gets.",
    "start": "4151979",
    "end": "4160080"
  },
  {
    "text": " And so now we're going\nto give a function which maps A TM problems\nwhich have the form Mw.",
    "start": "4160080",
    "end": "4167778"
  },
  {
    "text": "So it's an A TM\ncompliment problem. So this want to test\nif M accepts w or not.",
    "start": "4167779",
    "end": "4173790"
  },
  {
    "text": "So that's an A TM\ncompliment-type problem. And I want to map that to an\nEQ TM problem with the form--",
    "start": "4173790",
    "end": "4180960"
  },
  {
    "text": "you know, EQ TM problems\nrepairs the machine now, and where going to\nbe testing equivalence.",
    "start": "4180960",
    "end": "4186191"
  },
  {
    "text": "So I'm just trying to give\nyou the form of the output of the reduction function f.",
    "start": "4186191",
    "end": "4192299"
  },
  {
    "text": "And specifically,\nwhat it's going to look like is when we\nhave f is processing on Mw,",
    "start": "4192300",
    "end": "4200250"
  },
  {
    "text": "it's going to\nproduce two machines. One of them is going to\nbe Tw which always behaves",
    "start": "4200250",
    "end": "4206660"
  },
  {
    "text": "the way M behaves on w but\nexpanded to all inputs,",
    "start": "4206660",
    "end": "4211680"
  },
  {
    "text": "and then a machine I'm going\nto call T reject, which just is",
    "start": "4211680",
    "end": "4217230"
  },
  {
    "text": "designed to reject everything.  Now, just walk through\nthe logic with me.",
    "start": "4217230",
    "end": "4225690"
  },
  {
    "text": "If M rejects w, Tw\nrejects everything.",
    "start": "4225690",
    "end": "4232469"
  },
  {
    "text": "And so we'll be equivalent\nto the machine T reject. That's what we want.",
    "start": "4232470",
    "end": "4238740"
  },
  {
    "text": "If M rejects w, so we're in\nthe language A TM compliment,",
    "start": "4238740",
    "end": "4244157"
  },
  {
    "text": "then these two machines\nthat I produce for you are going to be in the EQ TM line.",
    "start": "4244157",
    "end": "4250430"
  },
  {
    "text": "That's what I want\nto have happen for a reduction from A\nTM compliment to EQ TM.",
    "start": "4250430",
    "end": "4257570"
  },
  {
    "text": "Similarly, to do\npart 2, I'm going",
    "start": "4257570",
    "end": "4262670"
  },
  {
    "text": "to make here a different f,\nmaybe I should call it f prime, all right, f1 and f2 for\nthe two different parts.",
    "start": "4262670",
    "end": "4269910"
  },
  {
    "text": "So these are two different f's. I'm going to make f here. ",
    "start": "4269910",
    "end": "4276500"
  },
  {
    "text": "Instead of generating\nTw and T reject, I'm going to have\nTw and T accept",
    "start": "4276500",
    "end": "4281969"
  },
  {
    "text": "which is a Turing machine\nthat always accepts its input. Now, if M rejects w,\nit's in A TM compliment,",
    "start": "4281970",
    "end": "4292850"
  },
  {
    "text": "then Tw is going to\nreject everything. And it's going to be different\nfrom its companion here,",
    "start": "4292850",
    "end": "4300230"
  },
  {
    "text": "T accept. And so it won't be\nin EQ TM compliment.",
    "start": "4300230",
    "end": "4305980"
  },
  {
    "text": "But if M accepts w, then Tw\nis going to accept everything. And it's going to be\nequivalent to T accept.",
    "start": "4305980",
    "end": "4313179"
  },
  {
    "text": "And you will be equivalent. So the here is where we're\ntaking A TM compliment",
    "start": "4313180",
    "end": "4319750"
  },
  {
    "text": "and mapping it to the\ncompliment, the EQ TM. ",
    "start": "4319750",
    "end": "4325730"
  },
  {
    "text": "Too many compliments\nhere I realize. Compliments are confusing. But anyway, why don't\nyou mull this over.",
    "start": "4325730",
    "end": "4333140"
  },
  {
    "text": "And just to summarize, OK,\nwe're out of time here.",
    "start": "4333140",
    "end": "4341390"
  },
  {
    "text": "But why do we use reducing\nwhen we talk about reductions? It's because when\nwe reduce A to B,",
    "start": "4341390",
    "end": "4347660"
  },
  {
    "text": "we kind of bring A's difficulty\ndown to B's difficulty, that's where the reducing comes from.",
    "start": "4347660",
    "end": "4354510"
  },
  {
    "text": "Or we bring B's difficulty\nup to A's difficulty, because it's really A's\ndifficulty relative to B",
    "start": "4354510",
    "end": "4361290"
  },
  {
    "text": "that we're talking about\nwhen we're reducing A to B. So that's why the term reducing\nseems a little out of place",
    "start": "4361290",
    "end": "4368400"
  },
  {
    "text": "when we're proving things\nundecidable, or unrecognizable. But that's where\nit's coming from. Anyway, quick\nreview, we introduced",
    "start": "4368400",
    "end": "4376510"
  },
  {
    "text": "the reducibility method. We defined mapping\nreducibility as a special kind",
    "start": "4376510",
    "end": "4381630"
  },
  {
    "text": "of reducibility. We showed E TM as undecidable\nand unrecognizable. And that EQ TM is\nboth, it and it's",
    "start": "4381630",
    "end": "4389340"
  },
  {
    "text": "complement are unrecognizable. So we're out of time. I will shut this down.",
    "start": "4389340",
    "end": "4396220"
  },
  {
    "text": "But I'll take a few\nquestions here actually. I'll stick around\nfor a few questions. And then I'll move to the other\nchat room for office hours, OK?",
    "start": "4396220",
    "end": "4404579"
  },
  {
    "text": " So question, go over the case\nfor the complement of EQ TM.",
    "start": "4404580",
    "end": "4414949"
  },
  {
    "text": "So I will do that.  So that's in this slide here.",
    "start": "4414950",
    "end": "4423000"
  },
  {
    "text": "OK, so this is proof\npart 2 for the person",
    "start": "4423000",
    "end": "4431790"
  },
  {
    "text": "who asked me to go over it. But I think it's helpful\nfor those of you who might",
    "start": "4431790",
    "end": "4436920"
  },
  {
    "text": "be a little bit shaky on this.  I want to mapping reduce\nthe complement of A TM",
    "start": "4436920",
    "end": "4444020"
  },
  {
    "text": "to the complement of EQ TM. ",
    "start": "4444020",
    "end": "4449617"
  },
  {
    "text": "By the way, I don't know if\nthis is going to be helpful. But as we pointed out in\nthe check in a while back,",
    "start": "4449617",
    "end": "4454970"
  },
  {
    "text": "that's completely equivalent\nto having a mapping reduction from A TM to EQ TM.",
    "start": "4454970",
    "end": "4461270"
  },
  {
    "text": "You can complement\nboth sides, and you get an equivalent statement.",
    "start": "4461270",
    "end": "4468530"
  },
  {
    "text": "Maybe let's stick with the\ncompliments here though. I hope that doesn't make\nit too confusing, OK.",
    "start": "4468530",
    "end": "4476740"
  },
  {
    "text": "We're trying to show\nthe complement of A TM is mapping reducible to\nthe complement of EQ TM.",
    "start": "4476740",
    "end": "4482170"
  },
  {
    "text": "What does that mean? So that means when M rejects\nw, so you're in the compliment,",
    "start": "4482170",
    "end": "4489490"
  },
  {
    "text": "we want the two Turing\nmachines to be inequivalent.",
    "start": "4489490",
    "end": "4495130"
  },
  {
    "text": "No, yeah, so we're in\nthe compliment of EQ TM. ",
    "start": "4495130",
    "end": "4500920"
  },
  {
    "text": "So in other words, when we're\nin the complement of A TM, we want the result of the f to\nbe in the complement of EQ TM.",
    "start": "4500920",
    "end": "4512090"
  },
  {
    "text": "So in other words,\nwhen M rejects w, the two machines\nshould be inequivalent. ",
    "start": "4512090",
    "end": "4519690"
  },
  {
    "text": "Right? When M accepts w, the two\nmachines should be equivalent.",
    "start": "4519690",
    "end": "4524830"
  },
  {
    "text": "Because when we're not in this\nlanguage, so we're in A TM, we want to be not\nin that language.",
    "start": "4524830",
    "end": "4530800"
  },
  {
    "text": "So we should be in EQ TM. So when M accepts w, we\nshould be equivalent.",
    "start": "4530800",
    "end": "4536980"
  },
  {
    "text": "When M rejects w, we\nshould be inequivalent. That's what we want. Let's go down here.",
    "start": "4536980",
    "end": "4544220"
  },
  {
    "text": "So if M accepts w, we want\nthem to-- so when M accepts w,",
    "start": "4544220",
    "end": "4551720"
  },
  {
    "text": "we want them to be equivalent. So if M accepts w, Tw\naccepts everything.",
    "start": "4551720",
    "end": "4557260"
  },
  {
    "text": "And it's equivalent to T accept. When M rejects w, Tw\nrejects everything.",
    "start": "4557260",
    "end": "4566280"
  },
  {
    "text": "And so it's not\nequivalent to the machine that accepts everything. So just go through\nthe logic yourself.",
    "start": "4566280",
    "end": "4575493"
  },
  {
    "text": "You'll see why it's working. ",
    "start": "4575493",
    "end": "4581210"
  },
  {
    "text": "All right, so,\nbye, bye, everyone. ",
    "start": "4581210",
    "end": "4596000"
  }
]