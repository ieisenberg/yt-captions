[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6060"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation, or to\nview additional materials",
    "start": "6060",
    "end": "12700"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "12700",
    "end": "26520"
  },
  {
    "text": "PROFESSOR: Now look\nat how the web uses cryptographic protocols to\nprotect network communication",
    "start": "26520",
    "end": "32770"
  },
  {
    "text": "and deal with network\nfactors in general. So before we dive\ninto the details, I want to remind you\nthere's a quiz on Wednesday.",
    "start": "32770",
    "end": "39641"
  },
  {
    "text": "And that's not in this room. It's in Walker. But it's at the\nregular lecture time.",
    "start": "39641",
    "end": "45559"
  },
  {
    "text": "Any questions about that? Hopefully straightforward. Third floor, I\nthink it is usually. ",
    "start": "45559",
    "end": "53340"
  },
  {
    "text": "All right. So today we're going to talk\nabout how the web sort of uses",
    "start": "53340",
    "end": "58654"
  },
  {
    "text": "cryptography to protect\nnetwork communication. And we'll look at two sort\nof closely related topics.",
    "start": "58654",
    "end": "63800"
  },
  {
    "text": "One is, how do you just\ncryptographically protect never communication in a larger\nscale than the Kerberos system",
    "start": "63800",
    "end": "69890"
  },
  {
    "text": "we looked at in last lecture? And then also, we're going to\nlook at how do you actually integrate this cryptographic\nprotection provided to you",
    "start": "69890",
    "end": "76970"
  },
  {
    "text": "at the network level into\nthe entire application. So how does the web\nbrowser make sense",
    "start": "76970",
    "end": "82190"
  },
  {
    "text": "of whatever guarantees the\ncryptographic protocol is providing to it? And these are closely\nrelated, and it turns out",
    "start": "82190",
    "end": "89990"
  },
  {
    "text": "that protecting network\ncommunications is rather easy. Cryptography mostly just works. And integrating it in,\nand currently using it",
    "start": "89990",
    "end": "97960"
  },
  {
    "text": "at a higher level\nin the browser, is actually that\nmuch trickier part, how to actually build a\nsystem around cryptography.",
    "start": "97960",
    "end": "104260"
  },
  {
    "text": " Before we dive into\nthis whole discussion, I want to remind\nyou of the kinds",
    "start": "104260",
    "end": "112899"
  },
  {
    "text": "of cryptographic primitives\nwe're going to use here. So in last lecture on\nKerberos, we basically",
    "start": "112900",
    "end": "119580"
  },
  {
    "text": "used something called\nsymmetric crypto, or encryption and decryption.",
    "start": "119580",
    "end": "125630"
  },
  {
    "text": "And the plan there is that\nyou have a secret key k, and you have two functions.",
    "start": "125630",
    "end": "131340"
  },
  {
    "text": "So you can take\nsome piece of data, let's call it p for\nplain text, and you can apply an encryption\nfunction, that's",
    "start": "131340",
    "end": "138170"
  },
  {
    "text": "a function of some key k. And if you encrypt this plain\ntext, you get a Cypher text c.",
    "start": "138170",
    "end": "144150"
  },
  {
    "text": "And similarly, there's a\ndescription function called d, that given the same key k. And the cipher text will give\nyou back your plain text.",
    "start": "144150",
    "end": "151859"
  },
  {
    "text": "So this is the primitive that\nKerberos was all built around. But it turns out there's\nother primitives, as well,",
    "start": "151860",
    "end": "158240"
  },
  {
    "text": "that will be useful\nfor today's discussion. And this is called asymmetric\nencryption and decryption.",
    "start": "158240",
    "end": "166350"
  },
  {
    "text": "And here the idea is to have\ndifferent keys for encryption and decryption. We'll see why this is so useful.",
    "start": "166350",
    "end": "172504"
  },
  {
    "text": "And in particular, the\nfunctions that you get is, you can encrypt to\na particular public key",
    "start": "172505",
    "end": "178300"
  },
  {
    "text": "with a sum message and\nget a cipher text text. And in order to\ndecrypt, you just supply the corresponding secret\nkey to get the plain text back.",
    "start": "178300",
    "end": "187380"
  },
  {
    "text": "And the cool thing now as you\ncan publish this public key anywhere on the\ninternet, and people can encrypt messages for you,\nbut you need the secret key",
    "start": "187380",
    "end": "195180"
  },
  {
    "text": "in order to decrypt\nthe messages. And we'll see how this\nis used in the protocol. And in practice you'll\noften use public key crypto",
    "start": "195180",
    "end": "206200"
  },
  {
    "text": "in a slightly different way. So instead of encrypting\nand decrypting messages, you might actually want to\nsign or verify messages.",
    "start": "206200",
    "end": "214510"
  },
  {
    "text": "Turns out that at the\nimplementation level these are related operations,\nbut at an API level",
    "start": "214510",
    "end": "221162"
  },
  {
    "text": "they might look all\nlittle bit different. So you might find a message\nwith your secret key,",
    "start": "221162",
    "end": "227349"
  },
  {
    "text": "and you get some sort\nof a signature s. And then you can also\nverify this message using",
    "start": "227350",
    "end": "233930"
  },
  {
    "text": "the corresponding public key. And you get the message, and\nthe signature, and outcomes,",
    "start": "233930",
    "end": "240040"
  },
  {
    "text": "and some Boolean flags\nsaying whether this is the correct signature\nnot on that message.",
    "start": "240040",
    "end": "246040"
  },
  {
    "text": "And there are some relatively\nintuitive guarantees that these functions provide\nif you, for example, got",
    "start": "246040",
    "end": "251630"
  },
  {
    "text": "this signature and it\nverifies correctly, then it must have been\ngenerated by someone with the correct secret key.",
    "start": "251630",
    "end": "256930"
  },
  {
    "text": " Make sense, in terms of\nthe primitives we have? All right.",
    "start": "256930",
    "end": "262789"
  },
  {
    "text": "So now let's actually\ntry to figure out--  How would we protect\nnetwork communication",
    "start": "262790",
    "end": "268384"
  },
  {
    "text": "at a larger scale in Kerberos. In Kerberos, we had\nthe fairly simple model",
    "start": "268385",
    "end": "273650"
  },
  {
    "text": "where we had all the\nusers and servers have some sort of a relation\nwith this KDC entity.",
    "start": "273650",
    "end": "281330"
  },
  {
    "text": "And this KDC entity\nhas this giant table of principles and their keys.",
    "start": "281330",
    "end": "286695"
  },
  {
    "text": " And whenever a user wants\nto talk to some server,",
    "start": "286695",
    "end": "291940"
  },
  {
    "text": "they have to ask the KDC\nto generate a ticket based on those giant\ntable the KDC has.",
    "start": "291940",
    "end": "298340"
  },
  {
    "text": "So this seems like a reasonably\nstraightforward model. So why do we need\nsomething more? Why is Kerberos not\nenough for the web?",
    "start": "298340",
    "end": "306180"
  },
  {
    "text": "Why doesn't the web use\njust Kerberos for securing all communications? ",
    "start": "306180",
    "end": "313059"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]  PROFESSOR: Yeah. So there a sort of a single\nKDC, has to be trusted by all.",
    "start": "313059",
    "end": "324730"
  },
  {
    "text": "So this is, perhaps, not great. So you might have\ntrouble really believing that some machine out there\nis secure for everyone",
    "start": "324730",
    "end": "331420"
  },
  {
    "text": "in the world to use. Like, yeah, maybe\npeople at MIT are willing to trust\nsomeone at [? ISNT ?] to run the KDC there.",
    "start": "331420",
    "end": "338639"
  },
  {
    "text": "All right. So that's plausible, yeah. AUDIENCE: [INAUDIBLE] PROFESSOR: Yes.",
    "start": "338640",
    "end": "343820"
  },
  {
    "text": "A key management is\nhard, I guess, yeah. So what I mean in particular\nby key management--",
    "start": "343820",
    "end": "349778"
  },
  {
    "text": " AUDIENCE: [INAUDIBLE] ",
    "start": "349778",
    "end": "362715"
  },
  {
    "text": "PROFESSOR: Yes. It might actually be a hard\njob to build a KDC that we can manage a billion keys,\nor ten billion keys, for all",
    "start": "362715",
    "end": "369990"
  },
  {
    "text": "the people in the world. So it might be a\ntricky proposition. If that's not the\ncase, then I guess",
    "start": "369990",
    "end": "375340"
  },
  {
    "text": "another bummer with Kerberos\nis that all users actually have to have a key, or have\nto be known to the KDC.",
    "start": "375340",
    "end": "383415"
  },
  {
    "text": " So, you can't even\nuse Kerberos at MIT",
    "start": "383415",
    "end": "388467"
  },
  {
    "text": "to connect to some servers,\nunless you yourself have an account in\nthe Kerberos database.",
    "start": "388467",
    "end": "393520"
  },
  {
    "text": "Whereas on the web, it's\ncompletely reasonable to expect the you walk\nup to some computer, the computer has no\nidea who you are,",
    "start": "393520",
    "end": "399732"
  },
  {
    "text": "but you can still go to\nAmazon's website protected with cryptography. Yeah? AUDIENCE: [INAUDIBLE]",
    "start": "399733",
    "end": "406058"
  },
  {
    "text": " PROFESSOR: That's our idea.",
    "start": "406058",
    "end": "411900"
  },
  {
    "text": "So there's these kinds\nof considerations. So there's private\nforward secrecies. There are a couple\nof other things you want from the\ncryptographic protocol,",
    "start": "411900",
    "end": "418259"
  },
  {
    "text": "and we'll look at them and\nhow they sort of show up in SSL, as well. But the key there is that\nthe solution is actually",
    "start": "418260",
    "end": "423490"
  },
  {
    "text": "exactly the same as what\nyou would do Kerberos, and what you would do in SSL\nor TLS to address those guys.",
    "start": "423490",
    "end": "429514"
  },
  {
    "text": "But you're absolutely right. There Kerberos deep\nprotocols we read about in the paper is pretty dated.",
    "start": "429514",
    "end": "436150"
  },
  {
    "text": "So, even if you were\nusing it for the web, you would want to apply\nsome changes to it.",
    "start": "436150",
    "end": "441860"
  },
  {
    "text": "Those are not huge though,\nat the [INAUDIBLE] level. Any other thoughts on why\nwe should use Kerberos?",
    "start": "441860",
    "end": "448280"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE] ",
    "start": "448280",
    "end": "456276"
  },
  {
    "text": "PROFESSOR: This is\nactually not so scalable.  Yeah, recovery.",
    "start": "456277",
    "end": "461440"
  },
  {
    "text": " Maybe registration\neven, as well, like you have to go to\nsome accounts office",
    "start": "461440",
    "end": "468100"
  },
  {
    "text": "and get an account. Yeah? AUDIENCE: [INAUDIBLE]\nneeds to be online. PROFESSOR: Yeah, so\nthat's another problem.",
    "start": "468100",
    "end": "474120"
  },
  {
    "text": "These are sort of\nmanagement issues, but at the protocol\nlevel, the KDC",
    "start": "474120",
    "end": "479794"
  },
  {
    "text": "has to be online\nbecause it has actually mediate every interaction\nyou have with the service. ",
    "start": "479794",
    "end": "485289"
  },
  {
    "text": "It means that in the web, every\ntime you go to a new website, you'd have to talk to\nsome KDC first, which would be a bit of a\nperformance bottleneck.",
    "start": "485289",
    "end": "491940"
  },
  {
    "text": "So like another\nkind of scalability, this is like\nperformance scalability. This is more management\nscalability kind of stuff.",
    "start": "491940",
    "end": "498900"
  },
  {
    "text": "Make sense?  So, how can we\nsolve this problem",
    "start": "498900",
    "end": "504040"
  },
  {
    "text": "with these better primitives? Well, the idea is to use\npublic key cryptography to give",
    "start": "504040",
    "end": "511330"
  },
  {
    "text": "this KDC out of the loop. So let's first\nfigure out whether we can establish secure\ncommunication if you just know",
    "start": "511330",
    "end": "520419"
  },
  {
    "text": "some other party's public key. And then we'll\nsee how we plug-in a public key version of a\nKDC to authenticate parties",
    "start": "520419",
    "end": "526840"
  },
  {
    "text": "in this protocol. If you don't want\nto use a KDC, what",
    "start": "526840",
    "end": "534194"
  },
  {
    "text": "you could do with\npublic key crypto is maybe you can somehow\nlearn the public key of the public key of the\nother value on a connector.",
    "start": "534194",
    "end": "539440"
  },
  {
    "text": "So in Kerberos, if I want\nto connect to a file server, maybe I just know the\nfile server's public key from somewhere.",
    "start": "539440",
    "end": "545190"
  },
  {
    "text": "Like me as a freshman I get\na printout saying the file server's public key is this. And then you can go\nahead and connect it.",
    "start": "545190",
    "end": "552450"
  },
  {
    "text": "And the way you might\nactually do this is you could just encrypt a message\nfor the public key of the file",
    "start": "552450",
    "end": "558552"
  },
  {
    "text": "server that you\nwant to connect to. But it turns out\nthat in practice, these public key\noperations are pretty slow.",
    "start": "558552",
    "end": "564541"
  },
  {
    "text": "They are several\norders of magnitude slower than symmetric\nkey cryptography. So almost always you want to get\nout of the use of public crypto",
    "start": "564541",
    "end": "573520"
  },
  {
    "text": "as soon as practical. So a typical protocol\nmight look like this where you have a and b, and\nthey want to communicate.",
    "start": "573520",
    "end": "580020"
  },
  {
    "text": "And a knows b's public key. So what might happen is\nthat a might generate some sort of session s.",
    "start": "580020",
    "end": "586445"
  },
  {
    "text": " Just pick a random number. And then it's going to send\nto b the session key s.",
    "start": "586445",
    "end": "596210"
  },
  {
    "text": "So this is kind of\nlooking like Kerberos. And we're going to encrypt\nthe session s for b's key.",
    "start": "596210",
    "end": "601839"
  },
  {
    "text": "And remember in Kerberos,\nin order to do this, we have to have the\nKDC do this for us because a didn't\nknow the key for b,",
    "start": "601840",
    "end": "608095"
  },
  {
    "text": "or couldn't have been allowed to\nknow because that is a secret. But only b should've known. With public key cyrptor\nyou can actually this now.",
    "start": "608095",
    "end": "614280"
  },
  {
    "text": "We can just encrypt the secret\ns using these public keys.",
    "start": "614280",
    "end": "621730"
  },
  {
    "text": "And we send this\nmessage over to b. B can now decrypt this\nmessage, and say I should be using this secret key.",
    "start": "621730",
    "end": "627500"
  },
  {
    "text": "And now we can have a\ncommunication channel where all the messages\nare just encrypted",
    "start": "627500",
    "end": "632890"
  },
  {
    "text": "under this secret key s. Does this Make sense?",
    "start": "632890",
    "end": "638971"
  },
  {
    "text": "So there are some nice\nproperties about this protocol. One is that we got\nrid of having to have a KDC be online and generate\nour session key for us.",
    "start": "638971",
    "end": "647339"
  },
  {
    "text": "We could just have\none of the parties generate it and then\nencrypt it for another party without the use of the KDC.",
    "start": "647339",
    "end": "654040"
  },
  {
    "text": "Another nice thing\nis we're probably pretty confident that\nmessages sent by a to b",
    "start": "654040",
    "end": "659480"
  },
  {
    "text": "will only be read by b. Because only b could have\ndecrypted this message.",
    "start": "659480",
    "end": "664670"
  },
  {
    "text": "And therefore,\nonly b should have that corresponding secret key s. But this is pretty nicely.",
    "start": "664670",
    "end": "671030"
  },
  {
    "text": "Any questions about\nthis protocol? Yeah? AUDIENCE: Does it matter\nwhether the user or the server",
    "start": "671030",
    "end": "676146"
  },
  {
    "text": "generates the pass code? PROFESSOR: Well, maybe. I think it depends on\nexactly the considerations,",
    "start": "676146",
    "end": "685760"
  },
  {
    "text": "or the properties you\nwant out of this protocol. So here, certainly if a is\nbuggy or picks bad randomness,",
    "start": "685760",
    "end": "695320"
  },
  {
    "text": "the server then sends some\ndata back to a, thinking, oh, this is now the only data\nthat is going to be seen by a.",
    "start": "695320",
    "end": "700970"
  },
  {
    "text": "Well, maybe that's not\ngoing to be quite right. So you might care a little bit. There's a couple of other\nproblems with this protocol,",
    "start": "700970",
    "end": "707270"
  },
  {
    "text": "as well. Question? AUDIENCE: I was gonna say\nthat in this protocol,",
    "start": "707270",
    "end": "712810"
  },
  {
    "text": "a you could just do [INAUDIBLE]. ",
    "start": "712810",
    "end": "718021"
  },
  {
    "text": "PROFESSOR: Yes, that's\nactually not great. So there's actually\nseveral problems with this. One is the replay.",
    "start": "718021",
    "end": "725660"
  },
  {
    "text": "So the problem here\nis that I can just send these messages\nagain, and it",
    "start": "725660",
    "end": "730810"
  },
  {
    "text": "looks like a is sending these\nmessages to b, and so on. So typically the\nsolution to this",
    "start": "730810",
    "end": "736160"
  },
  {
    "text": "is to have both\nparties participate in the generation of\ns, and that ensures",
    "start": "736160",
    "end": "742470"
  },
  {
    "text": "that the key we're\nusing is now fresh. Because here, because b didn't\nactually generating anything,",
    "start": "742470",
    "end": "747839"
  },
  {
    "text": "these protocol messages look\nexactly the same every time. So typically, what happens\nis that, one party picks",
    "start": "747840",
    "end": "753410"
  },
  {
    "text": "a random number like s, and\nthen another party b also picks some random number,\ntypically called a non.",
    "start": "753410",
    "end": "759417"
  },
  {
    "text": "But, whatever. There's two numbers. And then the key they\nagreed to use in the thing that one party picked,\nbut actually is",
    "start": "759417",
    "end": "765460"
  },
  {
    "text": "the hash of the things\nthat both of them picked. So you could do that. You could also do\n[? DP Helmond ?] kind of stuff",
    "start": "765460",
    "end": "772509"
  },
  {
    "text": "like we looked at\nin the last lecture where you get forward secrecy. It was a little bit more\ncomplicated math rather than",
    "start": "772509",
    "end": "778220"
  },
  {
    "text": "just hashing two random numbers\nthat two parties picked. But then you get\nsome nice properties, like forward secrecy.",
    "start": "778220",
    "end": "785610"
  },
  {
    "text": "So replay attacks\nyou typically fixed by having b generate some nons.",
    "start": "785610",
    "end": "794350"
  },
  {
    "text": "And then you set\nthe real secret key that you're going to use\nto hash of the secret key",
    "start": "794350",
    "end": "799899"
  },
  {
    "text": "from one guy concatenated\nwith this non. And, of course, b would\nhave to send the nons back",
    "start": "799900",
    "end": "806350"
  },
  {
    "text": "to a in order to\nfigure out what's going on for both of\nthem to agree on a key.",
    "start": "806350",
    "end": "812850"
  },
  {
    "text": "All right. So another problem here is that\nthere's no real authentication",
    "start": "812850",
    "end": "820060"
  },
  {
    "text": "of a here, all right? So a knows who b\nis, or at least a knows who will be able\nto decrypt the data.",
    "start": "820060",
    "end": "826700"
  },
  {
    "text": "But b has no idea who\nis on the other side, whether it's a or some adversary\nimpersonating a, et cetera.",
    "start": "826700",
    "end": "834630"
  },
  {
    "text": "So how would we fix it\nint his public key world? Yeah? AUDIENCE: You have been assigned\nsomething and [INAUDIBLE].",
    "start": "834630",
    "end": "841854"
  },
  {
    "text": "PROFESSOR: Yeah. There's a couple of ways\nyou could go about this. One possibility\nis a maybe should",
    "start": "841854",
    "end": "847510"
  },
  {
    "text": "sign this message\ninitially, because we have this nice sign primitive. So we could maybe have a sign\nthis thing with a's secret key.",
    "start": "847510",
    "end": "859040"
  },
  {
    "text": "And that sign just\nprovides the signature, but presumably you\nassign it and also provide the message, as well.",
    "start": "859040",
    "end": "864400"
  },
  {
    "text": "And then b would have to\nknow a is public key in order to verify the signature. But if b knows a is\npublic key, then b's",
    "start": "864400",
    "end": "872229"
  },
  {
    "text": "going to be reasonably\nconfident that a is the one that sent this message over. Make sense?",
    "start": "872229",
    "end": "877470"
  },
  {
    "text": "Another thing you could\ndo is rely on encryption. So maybe b could send the\nnons back to a encrypted",
    "start": "877470",
    "end": "884120"
  },
  {
    "text": "under a's public key. And then only a would be\nable to decrypt the nons and generate the final\nsession key s prime.",
    "start": "884120",
    "end": "890366"
  },
  {
    "text": "So there are a couple\nof tricks you could do. This is roughly how\nclient certificates work in web browsers today.",
    "start": "890366",
    "end": "897640"
  },
  {
    "text": "So a has a secret\nkey, so when get an MIT personal certificate,\nwhat happens is your browser",
    "start": "897640",
    "end": "903550"
  },
  {
    "text": "generates a long\nlived secret key and gets a certificate for it. And whenever you send\nto request a web server,",
    "start": "903550",
    "end": "910636"
  },
  {
    "text": "you're going to prove\nthe fact that you know the secret key in\nyour user certificate,",
    "start": "910636",
    "end": "915970"
  },
  {
    "text": "and then establish the\nsecret key s for the rest the communication. Make Sense?",
    "start": "915970",
    "end": "922640"
  },
  {
    "text": "All right.  These are sort of all fixable\nproblems at the protocol level",
    "start": "922640",
    "end": "929760"
  },
  {
    "text": "that are reasonably\neasy to V address by adding extra messages. The big assumption here, of\ncourse, that we're going under",
    "start": "929760",
    "end": "936810"
  },
  {
    "text": "is that all the parties know\neach other's public keys. So do you actually discover\nsomeone's public key?",
    "start": "936810",
    "end": "947500"
  },
  {
    "text": "for, you know, it a wants\nto connect a website, I have a URL that I want to\nconnect to, or a host name,",
    "start": "947500",
    "end": "953881"
  },
  {
    "text": "how do I know what pub\nkey that corresponds to? Or similarly, if I connect to\nwebsis to look at my grades,",
    "start": "953882",
    "end": "959660"
  },
  {
    "text": "how does the server know\nwhat my public key should be, as opposed to the public key\nof some other at person MIT?",
    "start": "959660",
    "end": "968550"
  },
  {
    "text": "So this is the main problem\nthat the KDC was addressing.",
    "start": "968550",
    "end": "973889"
  },
  {
    "text": "I guess the KDC was solving\ntwo problems for us before. One it that is was\ngenerating this message.",
    "start": "973889",
    "end": "979081"
  },
  {
    "text": "It was generating\nthe session key and encrypting it\nfor the server. We fixed that by doing\npublic key crypto now.",
    "start": "979081",
    "end": "985480"
  },
  {
    "text": "But we also need to get this\nmapping from string principal names to cryptographic keys\nof the Kerberos previously",
    "start": "985480",
    "end": "992339"
  },
  {
    "text": "provided to us. And the way that\nis going to happen in this the https world,\nthis protocol called TLC,",
    "start": "992340",
    "end": "1002199"
  },
  {
    "text": "is that we're going to\nstill rely on some parties to maintain, of to\na least logically",
    "start": "1002200",
    "end": "1007740"
  },
  {
    "text": "maintain those giant tables\nmapping principal names onto cryptographic keys.",
    "start": "1007740",
    "end": "1013420"
  },
  {
    "text": "And the plan is, we're\ngoing to have something called a certificate authority. ",
    "start": "1013420",
    "end": "1022470"
  },
  {
    "text": "This is often abbreviated\nas CA in all kinds of security literature.",
    "start": "1022470",
    "end": "1027609"
  },
  {
    "text": "This thing is also going\nto logically maintain the stable of, here's\nthe name of a principle,",
    "start": "1027609",
    "end": "1033380"
  },
  {
    "text": "and here's the public\nkey for that principle.",
    "start": "1033380",
    "end": "1039319"
  },
  {
    "text": "And the main difference from\nthe way Kerberos worked, is that this\ncertificate authority thing isn't going to have to\nbe online for all transactions.",
    "start": "1039319",
    "end": "1048449"
  },
  {
    "text": "So in Kerberos you have\nto talk to those KDCs to get a connection or\nto look up someone's key.",
    "start": "1048450",
    "end": "1053799"
  },
  {
    "text": "Instead, what's going to\nhappen in this CA world, is that if you have some\nname here, and a public key,",
    "start": "1053800",
    "end": "1063210"
  },
  {
    "text": "the certificate\nauthority is going to just sign messages stating\nthat certain rows exist",
    "start": "1063210",
    "end": "1071020"
  },
  {
    "text": "in this table. So the certificate\nauthority is going to have its own sort of\nsecret and public key here.",
    "start": "1071020",
    "end": "1079540"
  },
  {
    "text": " And it's going to\nuse the secret key to find messages for other\nusers in the system to rely on.",
    "start": "1079540",
    "end": "1089080"
  },
  {
    "text": "So if you have a\nparticular entry like this, in this CA's\ndatabase, then the CA",
    "start": "1089080",
    "end": "1095410"
  },
  {
    "text": "is going to find a\nmessage saying this name corresponds to this public key.",
    "start": "1095410",
    "end": "1102750"
  },
  {
    "text": "And it's going to sign\nthis whole message with CA's secret key.",
    "start": "1102750",
    "end": "1111225"
  },
  {
    "text": "Make sense?  So this is going to allow us to\ndo very similar things to what",
    "start": "1111225",
    "end": "1117790"
  },
  {
    "text": "Kerberos was doing,\nbut we are now going to get rid of\nthe CA having to be",
    "start": "1117790",
    "end": "1122830"
  },
  {
    "text": "online for all transactions. And in fact, it's now going\nto be much more scalable. So this is what's usually\ncalled a certificate.",
    "start": "1122830",
    "end": "1129358"
  },
  {
    "text": " And the reason this is going\nto be much more scalable is that, in fact, to a client,\nor anyone using this system,",
    "start": "1129358",
    "end": "1140027"
  },
  {
    "text": "a certificate provided\nfrom one source is as good as a certificate\nprovided from any other source. It's signed by\nthe CA secret key.",
    "start": "1140027",
    "end": "1146120"
  },
  {
    "text": "So you can verify its\nvalidity without having to actually contact\nthe certificate authority, or any other\ndesignated party here.",
    "start": "1146120",
    "end": "1153867"
  },
  {
    "text": "And typically, the way\nthis works is that a server that you want to talk to\nstores the certificate that it",
    "start": "1153867",
    "end": "1159880"
  },
  {
    "text": "originally got from the\ncertificate authority. And whenever you connect\nto it, the server will tell you, well,\nhere's my certificate.",
    "start": "1159880",
    "end": "1166130"
  },
  {
    "text": "It was signed by this CA. You can check the\nsignature and just verify that this is, in fact, my\npublic key and that's my name.",
    "start": "1166130",
    "end": "1173020"
  },
  {
    "text": "And on the flip\nside, the same thing happens on client certificates. So when you the user connect to\na web server, what's actually",
    "start": "1173020",
    "end": "1179790"
  },
  {
    "text": "going on is that your\nclient certificate actually talks about the public key\ncorresponding to the secret key",
    "start": "1179790",
    "end": "1185779"
  },
  {
    "text": "that you originally\ngenerated in your browser. And this way when you\nconnect to a server, you're going to present\na certificate signed",
    "start": "1185780",
    "end": "1192350"
  },
  {
    "text": "by MIT's certificate authority\nsaying your user name corresponds to this public key.",
    "start": "1192350",
    "end": "1197680"
  },
  {
    "text": "And this is how the server\nis going to be convinced that a message signed\nwith your secret key",
    "start": "1197680",
    "end": "1203430"
  },
  {
    "text": "is proof that this is the right\nAthena user connecting to me.",
    "start": "1203430",
    "end": "1209695"
  },
  {
    "text": "Does that make sense? Yeah. AUDIENCE: Where does\nthe [? project ?] get the certificate [INAUDIBLE]?",
    "start": "1209695",
    "end": "1215470"
  },
  {
    "text": "PROFESSOR: Ah, yes. Like the chicken\nand the egg problem. It keeps going down. Where do you get\nthese public keys?",
    "start": "1215470",
    "end": "1220788"
  },
  {
    "text": "At some point you have\nto hard code these in, or that's typically\nwhat most systems do. So today what\nactually happens is",
    "start": "1220788",
    "end": "1227074"
  },
  {
    "text": "that when you download\na web browser, or you get a computer\nfor the first time, it actually comes with\npublic keys of hundreds",
    "start": "1227074",
    "end": "1233929"
  },
  {
    "text": "of these certificate\nauthorities. And there's many of them. Some are run by security\ncompanies like VeriSign.",
    "start": "1233930",
    "end": "1241659"
  },
  {
    "text": "The US Postal Service has\na certificate authority, for some reason. There's many entities there\nthat could, in principal, issue",
    "start": "1241660",
    "end": "1247640"
  },
  {
    "text": "these certificates and are\nfully trusted by the system. ",
    "start": "1247640",
    "end": "1253510"
  },
  {
    "text": "These mini certificate\nauthorities are now replacing the trust\nthat we had in this KDC.",
    "start": "1253510",
    "end": "1259674"
  },
  {
    "text": "And sometimes, we\nhaven't actually addressed all the problems\nwe listed with Kerberos. So previously were worried\nthat, oh man, how are",
    "start": "1259674",
    "end": "1266930"
  },
  {
    "text": "we going to trust? How is everyone\nin the word going to trust a single KDC machine? But now, it's actually worse.",
    "start": "1266930",
    "end": "1273850"
  },
  {
    "text": "This is actually worse that\nin some ways, because instead of trusting a\nsingle KDC machine, everyone is now trusting\nthese hundreds or certificate",
    "start": "1273850",
    "end": "1280960"
  },
  {
    "text": "authorities because all of\nthem are equally as powerful. Any of them could sign\na message like this and it would be\naccepted by clients",
    "start": "1280960",
    "end": "1288720"
  },
  {
    "text": "as a correct statement\nsaying this principle has this public key. So you have to only break\ninto one of these guys instead",
    "start": "1288720",
    "end": "1295890"
  },
  {
    "text": "of the one KDSC.  Yeah?",
    "start": "1295890",
    "end": "1301235"
  },
  {
    "text": "AUDIENCE: Is there a\nmechanism to open the keys? PROFESSOR: Yeah. That's another hard problem. It turns out to be that\nbefore we talked to the KDC,",
    "start": "1301235",
    "end": "1307889"
  },
  {
    "text": "and if you screwed\nup, you could tell the KDC to stop giving\nout my key, or change it. Now the certificates are\nactually potentially valid",
    "start": "1307889",
    "end": "1315410"
  },
  {
    "text": "forever. So the typical\nsolution is twofold. One is, sort of expectedly,\nthese certificates",
    "start": "1315410",
    "end": "1321410"
  },
  {
    "text": "include an expiration time. So this way you can at\nleast bound the damage.",
    "start": "1321410",
    "end": "1326970"
  },
  {
    "text": "Is This is kind of like a\nKerberos ticket's lifetime, except in practice, these\ntend to be to several orders of magnitude higher.",
    "start": "1326970",
    "end": "1332750"
  },
  {
    "text": "So in Kerberos, your\nticket's lifetime could be a couple hours. Here it's typically a year\nor something like this.",
    "start": "1332750",
    "end": "1340720"
  },
  {
    "text": "So the CAs really don't want\nto be talked to very often. So you want to get\nyour money once",
    "start": "1340720",
    "end": "1346240"
  },
  {
    "text": "a year for the\ncertificate, and then give you out this\nblob of signed bytes, and you're good\nto go for a year. You don't have to\nconduct them again.",
    "start": "1346240",
    "end": "1352930"
  },
  {
    "text": "So this is good for scalability,\nbut not so good for security. And there's two problems\nthat you might worry about",
    "start": "1352930",
    "end": "1359620"
  },
  {
    "text": "with certificates. One is that Maybe\nthe CA's screwed up. So maybe the CA issued a\ncertificate for the wrong name.",
    "start": "1359620",
    "end": "1367710"
  },
  {
    "text": "Like, they weren't very careful. And accidentally, I\nask them to give you a certificate for amazon.com,\nand they just slipped up",
    "start": "1367710",
    "end": "1373297"
  },
  {
    "text": "and said, all right, sure. That's amazon.com. I will give you a\ncertificate for that. So that seems like a\nproblem on the CA side.",
    "start": "1373297",
    "end": "1378860"
  },
  {
    "text": "So they miss-issued\na certificate. And that's one way that you\ncould end up with a certificate that you wish no longer\nexisted, because you",
    "start": "1378860",
    "end": "1385550"
  },
  {
    "text": "signed the wrong thing. Another possibility\nis that they CA does the right thing,\nbut then the person who",
    "start": "1385550",
    "end": "1391440"
  },
  {
    "text": "had the certificate I\naccidentally disclosed the secret key, or someone stole\nthe secret key corresponding",
    "start": "1391440",
    "end": "1397220"
  },
  {
    "text": "to the public key\nin the certificate. So this means that\ncertificate no longer says what you think it might mean.",
    "start": "1397220",
    "end": "1403380"
  },
  {
    "text": "Even though this says\namazon.com's key is this, actually every one\nin the world has",
    "start": "1403380",
    "end": "1409285"
  },
  {
    "text": "the corresponding secret\nkey because posted it on the internet. So you can't really\nlearn much from someone",
    "start": "1409285",
    "end": "1414425"
  },
  {
    "text": "sending you a message signed by\nthe corresponding secret key, because it could've been anyone\nthat stole the secret key.",
    "start": "1414425",
    "end": "1420186"
  },
  {
    "text": "So that's another\nreason why you might want to revoke a certificate. And revoking certificates\nis pretty messy.",
    "start": "1420187",
    "end": "1427220"
  },
  {
    "text": "There's not really\na great plan for it. The two alternatives\nthat people have tried",
    "start": "1427220",
    "end": "1436340"
  },
  {
    "text": "are to basically publish\na list of all revoked certificates in the world.",
    "start": "1436340",
    "end": "1441799"
  },
  {
    "text": "This Is something called\ncertificate revocation list, or CRLs. And the way this works\nis that every certificate",
    "start": "1441800",
    "end": "1449800"
  },
  {
    "text": "authority issues\nthese certificates, but then on the side, it\nmaintains a list of mistakes.",
    "start": "1449800",
    "end": "1455039"
  },
  {
    "text": "These are things\nthat it realized they screwed up and\nissued a certificate under the wrong name, or\nour customers come to them",
    "start": "1455040",
    "end": "1460320"
  },
  {
    "text": "and say, hey, you\nissued me a certificate. Everything was going great. But someone then got\nrude on my machine and stole the private key.",
    "start": "1460320",
    "end": "1466370"
  },
  {
    "text": "Please tell the world that my\ncertificate is no good anymore. So this certificate\nauthority, in principle,",
    "start": "1466370",
    "end": "1471570"
  },
  {
    "text": "could add stuff to this CRL, and\nthen clients like web browsers are supposed to download\nthis CRL periodically.",
    "start": "1471570",
    "end": "1479309"
  },
  {
    "text": "And then whenever they're\npresented with a certificate, they should check\nif the certificate appears in this revoked list.",
    "start": "1479309",
    "end": "1485689"
  },
  {
    "text": "And it shows up\nthere, then should say that certificate's no good. You better give me a new one.",
    "start": "1485689",
    "end": "1491384"
  },
  {
    "text": "I'm not going to trust\nthis particular sign message anymore. So that's one plan.",
    "start": "1491384",
    "end": "1496770"
  },
  {
    "text": "It's not great.  If you really used, it\nwould be a giant list.",
    "start": "1496770",
    "end": "1502754"
  },
  {
    "text": "And it would be quite a lot\nof overhead for everyone in the world to download this. The other problem is\nthat no one actually",
    "start": "1502754",
    "end": "1508480"
  },
  {
    "text": "bothers doing this stuff. so\nthe lists in practice are empty. If you actually ask all\nthese CAs, most of them",
    "start": "1508480",
    "end": "1513600"
  },
  {
    "text": "will give you back an empty CRL\nbecause no one's ever bothered to add anything to this list. Because, why would you?",
    "start": "1513600",
    "end": "1518610"
  },
  {
    "text": "It will only break\nthings because it will reduce the number of\nconnections that will succeed. So it's not clear whether there\nis a great motivations for CAs",
    "start": "1518610",
    "end": "1526210"
  },
  {
    "text": "to maintain this CRL. The other thing that\npeople have tried",
    "start": "1526210",
    "end": "1531460"
  },
  {
    "text": "is to query online the CAs. Like in the Kerberos world, we\ncontact the KDC all the time.",
    "start": "1531460",
    "end": "1539200"
  },
  {
    "text": "And in the CA world we try\nto get out of this business and say, well, the\nCA's only going to sign these\nmessages once a year.",
    "start": "1539200",
    "end": "1545279"
  },
  {
    "text": "That's sort of a bummer. So there's an\nalternative protocol called online certificate\nstatus protocol, or OCSP.",
    "start": "1545280",
    "end": "1552970"
  },
  {
    "text": "And this protocol pushes\nus back from the CA world to the KDC world.",
    "start": "1552970",
    "end": "1558110"
  },
  {
    "text": "So whenever a client\ngets a certificate and they're curious, is this\nreally a valid certificate?",
    "start": "1558110",
    "end": "1563299"
  },
  {
    "text": "Even though it's before\nthe expiration time, maybe something went wrong. So using this OCSP protocol,\nyou can contact some server",
    "start": "1563300",
    "end": "1570670"
  },
  {
    "text": "and just say, hey, I\ngot this certificate. Do you think it's still valid? So basically, offloading the\njob of maintaining this CRL",
    "start": "1570670",
    "end": "1578220"
  },
  {
    "text": "to a particular server. So instead of downloading\na whole list yourself, you're going to ask\nthe server, hey, is",
    "start": "1578220",
    "end": "1583334"
  },
  {
    "text": "this thing in that list? So that's another plan\nthat people have tried. It's also not used very\nwidely because of two factors.",
    "start": "1583334",
    "end": "1593710"
  },
  {
    "text": "One is that it adds latency to\nevery request that you make.",
    "start": "1593710",
    "end": "1598990"
  },
  {
    "text": "So every time you want\nto connect to a server, now you have to first\nconnect, get the certificate",
    "start": "1598990",
    "end": "1604059"
  },
  {
    "text": "from the server. Now you have to talk\nto this OCSP guy and then wait for him to respond\nand then do something else.",
    "start": "1604060",
    "end": "1610950"
  },
  {
    "text": "So for latency reasons,\nthis is actually not a super popular plan. Another problem\nis that you don't",
    "start": "1610950",
    "end": "1616980"
  },
  {
    "text": "want this OCSP thing being down\nfrom affecting your ability to browse the web.",
    "start": "1616980",
    "end": "1622880"
  },
  {
    "text": "Suppose this OSCP\nserver goes down. You could, like, disable\nthe whole internet because you can't check\nanyone's certificate.",
    "start": "1622880",
    "end": "1628090"
  },
  {
    "text": "Like, it could be all bad. And then all your\nconnections stop working. So no one wants that.",
    "start": "1628090",
    "end": "1633590"
  },
  {
    "text": "So most clients\ntreat the OCSP server being down as sort\nof an OK occurrence.",
    "start": "1633590",
    "end": "1641194"
  },
  {
    "text": "This is really bad from\na security perspective because if you're\nan attacker and you want to convince\nsomeone that you have",
    "start": "1641194",
    "end": "1647040"
  },
  {
    "text": "a legitimate certificate, but\nit's actually been revoked, all you have to do\nis somehow prevent",
    "start": "1647040",
    "end": "1652740"
  },
  {
    "text": "that client from talking\nto the OCSP server. And then the client will say,\nwell, I do the certificate.",
    "start": "1652740",
    "end": "1659080"
  },
  {
    "text": "I'll try to check\nit, but this guy doesn't seem to be around,\nso I'll just go for it. So that's basically the\nsort of lay of the land",
    "start": "1659080",
    "end": "1666554"
  },
  {
    "text": "as far as verification goes. So there's no real great answer. The thing that\npeople do in practice",
    "start": "1666554",
    "end": "1672210"
  },
  {
    "text": "as an alternative to this\nis that clients just hard code in really bad mistakes.",
    "start": "1672210",
    "end": "1678500"
  },
  {
    "text": "So for example, the Chrome\nweb browser actually ships inside of it with\na list of certificates",
    "start": "1678500",
    "end": "1684080"
  },
  {
    "text": "that Google really\nwants to revoke. So if someone\nmis-issues a certificate for Gmail or for some other\nimportant site-- like Facebook,",
    "start": "1684080",
    "end": "1691789"
  },
  {
    "text": "Amazon, or whatever-- then\nthe next release of Chrome will contain that thing in\nits verification list baked",
    "start": "1691790",
    "end": "1699950"
  },
  {
    "text": "into Chrome. So this way, you don't have\nto contact the CRL server. You don't have to\ntalk to this OCSP guy.",
    "start": "1699950",
    "end": "1705550"
  },
  {
    "text": "It's just baked in. Like, this certificate\nis no longer valid. The client rejects it. Yeah. AUDIENCE: Sorry, one last thing. PROFESSOR: Yeah.",
    "start": "1705550",
    "end": "1710960"
  },
  {
    "text": "AUDIENCE: So let's say\nI've stolen the secret key on the certificate [INAUDIBLE]. All public keys are\n[? hard coded-- ?] PROFESSOR: Oh, yeah.",
    "start": "1710960",
    "end": "1715973"
  },
  {
    "text": "That's [INAUDIBLE] really bad. I don't think there's any\nsolution baked into the system",
    "start": "1715973",
    "end": "1722280"
  },
  {
    "text": "right now for this. There have been\ncertainly situations",
    "start": "1722280",
    "end": "1727289"
  },
  {
    "text": "where certificate\nauthorities appear to have been compromised. So in 2011, there\nwere two CAs that",
    "start": "1727290",
    "end": "1734870"
  },
  {
    "text": "were compromised in the\nissue, or they were somehow tricked into issuing\ncertificates for Gmail,",
    "start": "1734870",
    "end": "1740090"
  },
  {
    "text": "for Facebook, et cetera. And it's not clear. Maybe someone did\nsteal their secret key. So what happened is I\nthink those CAs actually",
    "start": "1740090",
    "end": "1749150"
  },
  {
    "text": "got removed from a\nset of trusted CAs by browsers from that point on. So the next release of Chrome\nis just like, hey, you're",
    "start": "1749150",
    "end": "1755760"
  },
  {
    "text": "really screwed up. We're going to kick you\nout of the sort of CAs that are trusted. And it was actually\nkind of a bummer because all of the\nlegitimate people that",
    "start": "1755760",
    "end": "1761875"
  },
  {
    "text": "had certificates from\nthat certificate authority are now out of luck. They have to get\nnew certificates. So this is a somewhat\nmessy system,",
    "start": "1761875",
    "end": "1768440"
  },
  {
    "text": "but that's sort of what happens\nin practice with certificates. Make sense?",
    "start": "1768440",
    "end": "1774539"
  },
  {
    "text": "Other questions\nabout how this works? All right.",
    "start": "1774540",
    "end": "1779612"
  },
  {
    "text": "So this is the sort of general\nplan for how certificates work. And as we were\ntalking about, they're",
    "start": "1779612",
    "end": "1786800"
  },
  {
    "text": "sort of better than\nKerberos in the sense that you don't have to\nhave this guy be online. It might be a little\nbit more scalable",
    "start": "1786800",
    "end": "1793580"
  },
  {
    "text": "because you can\nhave multiple KDCs, and you don't have\nto talk to them. Another cool thing\nabout this protocol",
    "start": "1793580",
    "end": "1798783"
  },
  {
    "text": "is that unlike Kerberos,\nyou're not forced to authenticate both parties. So you could totally\nconnect to a web server",
    "start": "1798783",
    "end": "1806010"
  },
  {
    "text": "without having a\ncertificate for yourself. This happens all the time. If you just go to\namazon.com, you are going to check that\nAmazon is the right entity,",
    "start": "1806010",
    "end": "1813380"
  },
  {
    "text": "but Amazon has no idea who you\nare necessarily, or at least not until you log in later. So the crypto protocol level,\nyou have no certificate.",
    "start": "1813380",
    "end": "1820040"
  },
  {
    "text": "Amazon has a certificate. So that was actually\nmuch better than Kerberos where in order to connect\nto a Kerberos service, you have to be an entry in\nthe Kerberos database already.",
    "start": "1820040",
    "end": "1828030"
  },
  {
    "text": "One thing that's a little bit\nof a bummer with this protocol as we've described it is\nthat in fact, the server does",
    "start": "1828030",
    "end": "1833639"
  },
  {
    "text": "have to have a certificate. So you can't just\nconnect to a server and say, hey, let's\njust encrypt our stuff.",
    "start": "1833640",
    "end": "1839080"
  },
  {
    "text": "I have no idea who you\nare, or not really, and you don't have\nany idea who I am, but let's encrypt it anyway.",
    "start": "1839080",
    "end": "1844940"
  },
  {
    "text": "So this is called\nopportunistic encryption, and it's of course vulnerable\nto man in the middle attacks",
    "start": "1844940",
    "end": "1850020"
  },
  {
    "text": "because you're connecting\nto someone and saying, well, let's encrypt\nour stuff, but you have no idea who it really is\nthat you're encrypting stuff",
    "start": "1850020",
    "end": "1855536"
  },
  {
    "text": "with. Both might be a\ngood idea anyway. If someone is not actively\nmounting an attack against you, at least the packets later on\nwill be encrypted and protected",
    "start": "1855536",
    "end": "1862850"
  },
  {
    "text": "from snooping. So it's a bit of\na shame that this protocol that we're looking\nat here-- SSL, TLS, whatever--",
    "start": "1862850",
    "end": "1872220"
  },
  {
    "text": "doesn't offer this kind of\nopportunistic encryption thing. But such is life. So I guess the server\n[INAUDIBLE] in this protocol.",
    "start": "1872220",
    "end": "1879380"
  },
  {
    "text": "The client sometimes can and\nsometimes doesn't have to. Make sense?",
    "start": "1879380",
    "end": "1884600"
  },
  {
    "text": "Yeah. AUDIENCE: I'm just curious. What's to stop\nsomeone from-- I mean, let's just say that\nonce a year, they",
    "start": "1884600",
    "end": "1890487"
  },
  {
    "text": "create using new name key pairs. So why couldn't you kind of\ntry to spend that entire year",
    "start": "1890487",
    "end": "1897476"
  },
  {
    "text": "for that specific key? PROFESSOR: Huh? AUDIENCE: Why does that\nnot work with this? PROFESSOR: I think it does work.",
    "start": "1897476",
    "end": "1902840"
  },
  {
    "text": "So OK, so it's like what\ngoes wrong with this scheme. Like, one of the\nthings that we have to do with the\ntopography of good here,",
    "start": "1902840",
    "end": "1909440"
  },
  {
    "text": "and as with Kerberos, people\nstart off using good crypto, but it gets worse\nand worse over time.",
    "start": "1909440",
    "end": "1915226"
  },
  {
    "text": "Computers get faster. There's better algorithms\nthat are breaking this stuff. And if people are not\ndiligent about increasing their standards, then\nthese problems do creep up.",
    "start": "1915226",
    "end": "1922869"
  },
  {
    "text": "So for example, it used to be\nthe case that many certificates were signed. Well, there's two\nthings going on. There's a public key\nsignature scheme.",
    "start": "1922869",
    "end": "1929419"
  },
  {
    "text": "And then because the public key\ncrypto has some limitations, you typically-- actually,\nwhen you sign a message,",
    "start": "1929420",
    "end": "1935510"
  },
  {
    "text": "you actually take a\nhash of the message and then you sign the\nhash itself because it's hard to sign a gigantic\nmessage, but it's",
    "start": "1935510",
    "end": "1941860"
  },
  {
    "text": "easy to sign a compact hash And one thing that\nactually went wrong is that people used to\nuse MD5 as a hash function",
    "start": "1941860",
    "end": "1949390"
  },
  {
    "text": "for collapsing the big message\nhere signing into a 128 bit",
    "start": "1949390",
    "end": "1954844"
  },
  {
    "text": "thing that you're\ngoing to actually sign with a crypto system. MD5 was good maybe 20 years\nago, and then over time,",
    "start": "1954844",
    "end": "1960930"
  },
  {
    "text": "people discovered weaknesses\nin MD5 that could be exploited. So actually, at some\npoint, someone did actually",
    "start": "1960930",
    "end": "1966340"
  },
  {
    "text": "ask for a certificate with\na particular MD5 hash, and then they\ncarefully figured out",
    "start": "1966340",
    "end": "1971880"
  },
  {
    "text": "another message that hashes\nto the same MD5 value. And as a result, now you have a\nsignature by a CA on some hash,",
    "start": "1971880",
    "end": "1982090"
  },
  {
    "text": "and then you have a different\nmessage, a different key, or a different\nname that you could convince someone was signed.",
    "start": "1982090",
    "end": "1988870"
  },
  {
    "text": "And this does happen. Like, if you spend a lot of time\ntrying to break a single key, than you will\nsucceed eventually.",
    "start": "1988870",
    "end": "1995430"
  },
  {
    "text": "If that certificate\nwas using crypto, that could be brute force.",
    "start": "1995430",
    "end": "2000456"
  },
  {
    "text": "Another example of something\nthat's probably not so great now is if you're using RSA. We haven't really\ntalked about RSA,",
    "start": "2000456",
    "end": "2005525"
  },
  {
    "text": "but RSA is one of\nthese public key crypto systems that allows us to\neither encrypt messages or sign messages.",
    "start": "2005525",
    "end": "2011610"
  },
  {
    "text": "With RSA, these\ndays, it's probably feasible to spend lots of money\nand break 1,000 bit RSA keys.",
    "start": "2011610",
    "end": "2018965"
  },
  {
    "text": "You'd probably have to\nspend a fair amount of work, but it's doable, probably\nwithin a year easily.",
    "start": "2018965",
    "end": "2024850"
  },
  {
    "text": "From there, absolutely. You can ask a certificate\nauthority to sign some message, or you can even take\nsomeone's existing public key",
    "start": "2024850",
    "end": "2032850"
  },
  {
    "text": "and try to brute force the\ncorresponding secret key, or [? manual hack. ?] So you have to keep up with\nthe attackers in some sense.",
    "start": "2032850",
    "end": "2041630"
  },
  {
    "text": "You have to use\nlarger keys with RSA. Or maybe you have to use\na different crypto scheme. For example, now people\ndon't use MD5 hashes",
    "start": "2041630",
    "end": "2048031"
  },
  {
    "text": "and certificates. They use SHA-1, but that\nwas good for a while. Now SHA-1 is also weak,\nand Google is actually now",
    "start": "2048031",
    "end": "2053250"
  },
  {
    "text": "actively trying to push web\ndevelopers and browser vendors et cetera to discontinue\nthe use of SHA-1",
    "start": "2053250",
    "end": "2059711"
  },
  {
    "text": "and use a different hash\nfunction because it's pretty clear that maybe in\n5 or 10 years time, there will be relatively\neasy attacks on SHA-1.",
    "start": "2059712",
    "end": "2067070"
  },
  {
    "text": "It's already been\nshown to be weaker. So I guess there is no\nmagic bullet, per se. You just have to\nmake sure that you",
    "start": "2067070",
    "end": "2073388"
  },
  {
    "text": "keep evolving with the hackers. Yeah. There is a problem, absolutely.",
    "start": "2073389",
    "end": "2079199"
  },
  {
    "text": "Like, all of this stuff\nthat we're talking about relies on crypto being correct,\nor sort of being s to break.",
    "start": "2079199",
    "end": "2084330"
  },
  {
    "text": "So you have to pick\nparameters suitably. At least here, there's\nan expiration time. So well, let's pick\nsome parameters",
    "start": "2084330",
    "end": "2091800"
  },
  {
    "text": "that are good for a year\nas opposed to for 10 years. The CA has a much\nbigger problem. This key, there's no\nexpiration on it, necessarily.",
    "start": "2091800",
    "end": "2099570"
  },
  {
    "text": "So that's less clear\nwhat's going on. So probably, you would pick\nreally aggressively sort",
    "start": "2099570",
    "end": "2105360"
  },
  {
    "text": "of safe parameters. So 4,000 or 6,000\nbit RSA or something.",
    "start": "2105360",
    "end": "2111160"
  },
  {
    "text": "Or another scheme all together. Don't use SHA-1 at all here. ",
    "start": "2111160",
    "end": "2116710"
  },
  {
    "text": "Yeah. No real clear answer. You just have to do it. All right.",
    "start": "2116710",
    "end": "2121990"
  },
  {
    "text": "Any other questions? All right. So let's now look at-- so\nthis is just like the protocol",
    "start": "2121990",
    "end": "2127740"
  },
  {
    "text": "side of things. Let's now look at how\ndo we integrate this into a particular application,\nnamely the web browser?",
    "start": "2127740",
    "end": "2134420"
  },
  {
    "text": "So I guess if you want to secure\nnetwork communication, or sort of websites, with\ncryptography, there's",
    "start": "2134420",
    "end": "2141490"
  },
  {
    "text": "really three things we\nhave to protect in browser. So the first thing we have to\nprotect is data on the network.",
    "start": "2141490",
    "end": "2148220"
  },
  {
    "text": " And this is almost the easy\npart because well, we're",
    "start": "2148220",
    "end": "2155421"
  },
  {
    "text": "just going to run a\nprotocol very much like what I've been describing so far. We'll encrypt all the\nmessages, sign them,",
    "start": "2155421",
    "end": "2160920"
  },
  {
    "text": "make sure they haven't\nbeen tampered with, all this great stuff. So that's how we're\ngoing to protect data.",
    "start": "2160920",
    "end": "2166619"
  },
  {
    "text": "But then there's two other\nthings in a web browser that we really have\nto worry about. So the first of them\nis anything that",
    "start": "2166620",
    "end": "2173970"
  },
  {
    "text": "actually runs in the browser. So code that's running\nin the browser, like JavaScript or\nimportant data that's",
    "start": "2173970",
    "end": "2179510"
  },
  {
    "text": "stored in the browser. Maybe your cookies, or local\nstorage, or lots of other stuff",
    "start": "2179510",
    "end": "2184950"
  },
  {
    "text": "that goes on in a\nmodern browser all has to be somehow protected\nfrom network [? of hackers. ?] And we'll see the\nkinds of things",
    "start": "2184950",
    "end": "2191170"
  },
  {
    "text": "we have to worry about\nhere in a second. And then the last thing that you\nmight not think about too much",
    "start": "2191170",
    "end": "2196920"
  },
  {
    "text": "but turns out to be a\nreal issue in practice is protecting the\nuser interface.",
    "start": "2196920",
    "end": "2203950"
  },
  {
    "text": "And the reason for this\nis that ultimately, much of the confidential data\nthat we care about protecting",
    "start": "2203950",
    "end": "2209930"
  },
  {
    "text": "comes from the user. And the user is typing this\nstuff into some website, and the user probably\nhas multiple websites",
    "start": "2209930",
    "end": "2215620"
  },
  {
    "text": "open on their computer\nso that the user has to be able to distinguish\nwhich site they're actually interacting with at\nany moment in time.",
    "start": "2215620",
    "end": "2221980"
  },
  {
    "text": "If they accidentally typed their\nAmazon password into some web discussion forum, it's\ngoing to be disastrous depending on how much you care\nabout your Amazon password,",
    "start": "2221980",
    "end": "2229090"
  },
  {
    "text": "but still. So you really want to\nhave good user interface",
    "start": "2229090",
    "end": "2234550"
  },
  {
    "text": "sort of elements that\nhelp the user figure out what are they doing? Am I typing this confidential\ndata into the right website,",
    "start": "2234550",
    "end": "2240500"
  },
  {
    "text": "or what's going to happen to\nthis data when I submit it? So this turns out to be a pretty\nimportant issue for protecting",
    "start": "2240500",
    "end": "2250360"
  },
  {
    "text": "web applications. All right. Make sense? So let's talk actually\nwhat the current web",
    "start": "2250360",
    "end": "2257760"
  },
  {
    "text": "browsers do on this front. So as I mentioned, here\nfor protecting [INAUDIBLE], we're just going to use this\nprotocol called SSL or TLS now",
    "start": "2257760",
    "end": "2267290"
  },
  {
    "text": "that encrypts and\nauthenticates data. It looks very similar to the\nkind of discussion we've had so far.",
    "start": "2267290",
    "end": "2273109"
  },
  {
    "text": "It includes the certificate\nauthorities, et cetera. And then of course,\nmany more details.",
    "start": "2273110",
    "end": "2278710"
  },
  {
    "text": "Like, TLS is hugely\ncomplicated, but it's not particularly interesting\nfrom this [INAUDIBLE] angle.",
    "start": "2278710",
    "end": "2286064"
  },
  {
    "text": "All right, so protecting,\n[? stopping ?] the browser turns out to be much\nmore interesting. And the reason is that\nwe need to make sure",
    "start": "2286064",
    "end": "2293950"
  },
  {
    "text": "that any code or data delivered\nover non-encrypted connections",
    "start": "2293950",
    "end": "2299520"
  },
  {
    "text": "can't tamper with\ncode and data that came from an\nencrypted connection because our threat model is\nthat anything that's unencrypted",
    "start": "2299520",
    "end": "2306620"
  },
  {
    "text": "could potentially be tampered\nwith by a network [? backer. ?] So we have to make\nsure that if we",
    "start": "2306620",
    "end": "2313730"
  },
  {
    "text": "have some unencrypted JavaScript\ncode running on our browser, then we should assume\nthat that could've",
    "start": "2313730",
    "end": "2320220"
  },
  {
    "text": "been tampered with an attacker\nbecause it wasn't encrypted. It wasn't authenticated\nover the network. And consequently,\nwe should prevent it",
    "start": "2320220",
    "end": "2325660"
  },
  {
    "text": "from tampering with any\npages that were delivered over an encrypted connection.",
    "start": "2325660",
    "end": "2330749"
  },
  {
    "text": "So the general plan\nfor this is we're going to introduce a new URL scheme.",
    "start": "2330749",
    "end": "2336620"
  },
  {
    "text": "Let's call HTTPS. So you often see this in URLs,\npresumably in your own life.",
    "start": "2336620",
    "end": "2342710"
  },
  {
    "text": "And there's going to be two\nthings that-- well, first of all, the cool thing about\nintroducing a new URL scheme",
    "start": "2342710",
    "end": "2350190"
  },
  {
    "text": "is that now, these URLs are\njust different from HTTP URLs. So if you have a URL that's\nHTTPS colon something",
    "start": "2350190",
    "end": "2356560"
  },
  {
    "text": "something, it's a\ndifferent origin as far as the same origin policy\nis concerned from regular HTTP",
    "start": "2356560",
    "end": "2363420"
  },
  {
    "text": "URLs. So HTTP URLs go over\nunencrypted corrections. These things are\ngoing over SSL/TLS.",
    "start": "2363420",
    "end": "2369430"
  },
  {
    "text": "So you'll never confuse\nthe two if the same origin policy does its job correctly.",
    "start": "2369430",
    "end": "2375130"
  },
  {
    "text": "So that's one bit of a puzzle. But then you have\nto also make sure that you correctly distinguish\ndifferent encrypted sites",
    "start": "2375130",
    "end": "2384040"
  },
  {
    "text": "from one another. It then turns out cookies\nhave a different policy for historical reasons.",
    "start": "2384040",
    "end": "2389072"
  },
  {
    "text": "So let's first talk\nabout how we're going to distinguish\ndifferent encrypted sites from one another. So the plan for that\nis that actually,",
    "start": "2389072",
    "end": "2396010"
  },
  {
    "text": "the host name via the URL has to\nbe the name in the certificate.",
    "start": "2396010",
    "end": "2402965"
  },
  {
    "text": " So that's what\nactually turns out that the certificate\nauthorities are",
    "start": "2402965",
    "end": "2409126"
  },
  {
    "text": "going to sign at\nthe end of the day So we're going to literally\nsign the host name that shows up",
    "start": "2409126",
    "end": "2414150"
  },
  {
    "text": "in your URL as the name for\nyour web server's public key. So Amazon presumably has a\ncertificate for www.amazon.com.",
    "start": "2414150",
    "end": "2422684"
  },
  {
    "text": "That's the name,\nand then whatever the public key corresponding\nto their secret key is. And this is what the\nbrowser's going to look for.",
    "start": "2422684",
    "end": "2429050"
  },
  {
    "text": "So if it gets a\ncertificate-- well, if it tries to connect or get\na URL that's https://foo.com,",
    "start": "2429050",
    "end": "2438015"
  },
  {
    "text": "it better be the case that the\nserver presents a certificate for foo.com exactly. Otherwise, we'll say, well, we\ntried to connect to one guy,",
    "start": "2438016",
    "end": "2445560"
  },
  {
    "text": "but we actually\nhave another guy. That's a different\nname in the certificate that we connected to.",
    "start": "2445560",
    "end": "2450890"
  },
  {
    "text": "And that'll be a\ncertificate mismatch. So that's how we are going to\ndistinguish different sites",
    "start": "2450890",
    "end": "2457230"
  },
  {
    "text": "from one another. We're basically\ngoing to get the CAs to help us tell\nthese sites apart, and the CAs are going to\npromise to issue certificates",
    "start": "2457230",
    "end": "2463630"
  },
  {
    "text": "to only the right entities. So that's on the\nsame margin policy side, how we're going to\nseparate the code apart.",
    "start": "2463630",
    "end": "2471300"
  },
  {
    "text": "And then as it turns out--\nwell, as you might remember, cookies have a slightly\ndifferent policy.",
    "start": "2471300",
    "end": "2477475"
  },
  {
    "text": "Like, it's almost the same\norigin, but not quite. So cookies have a\nslightly different plan.",
    "start": "2477475",
    "end": "2483980"
  },
  {
    "text": "So cookies have this secure flag\nthat you can set on a cookie.",
    "start": "2483980",
    "end": "2490609"
  },
  {
    "text": "So the rules are, if a\ncookie has a secure flag, then it gets sent only\nto HTTPS requests,",
    "start": "2490610",
    "end": "2499940"
  },
  {
    "text": "or along with HTTPS requests. And if a cookie doesn't\nhave a secure flag,",
    "start": "2499940",
    "end": "2505700"
  },
  {
    "text": "then it applies to both\nHTTP and HTTPS requests. Well, it's a little\nbit complicated, right.",
    "start": "2505700",
    "end": "2511600"
  },
  {
    "text": "It would be cleaner\nif cookies just said, well, this is a cookie\nfor an HTTPS post,",
    "start": "2511600",
    "end": "2517079"
  },
  {
    "text": "and this is a cookie\nfor HTTP host. And they're just\ncompletely different. That would be very clear in\nterms of isolating secure sites",
    "start": "2517080",
    "end": "2523410"
  },
  {
    "text": "from insecure sites. Unfortunately, for\nhistorical reasons, cookies have this weird\nsort of interaction.",
    "start": "2523410",
    "end": "2529370"
  },
  {
    "text": "So if a cookie is marked\nsecure, then it only applies to HTTPS sites.",
    "start": "2529370",
    "end": "2534660"
  },
  {
    "text": "Well, there's a host\nalso as well, right. So secure cookies apply\nonly to HTTPS host URLs,",
    "start": "2534660",
    "end": "2540920"
  },
  {
    "text": "and insecure cookies\napply to both. So that will be some source of\nproblems for us in a second.",
    "start": "2540920",
    "end": "2547310"
  },
  {
    "text": "Make sense? All right. And the final bit\nthat web browsers",
    "start": "2547310",
    "end": "2552490"
  },
  {
    "text": "do to try to help us along in\nthis plan is for the UI aspect,",
    "start": "2552490",
    "end": "2558869"
  },
  {
    "text": "they're going to introduce\nsome kind of a lock icon that users are supposed to see.",
    "start": "2558870",
    "end": "2565660"
  },
  {
    "text": "So there's a lock\nicon in your browser, plus you're supposed to look\nat the URL to figure out",
    "start": "2565660",
    "end": "2571150"
  },
  {
    "text": "which site you're on. Now that's how web\nbrowser developers expect you to think of the world.",
    "start": "2571150",
    "end": "2577030"
  },
  {
    "text": "Like, if you're ever\nentering confidential stuff into some website, then\nyou should look at the URL,",
    "start": "2577030",
    "end": "2582850"
  },
  {
    "text": "make sure that's\nthe actual host name that you want to be\ntalking to, and then look for some sort of a\nlock icon, and then you",
    "start": "2582850",
    "end": "2588980"
  },
  {
    "text": "should assume things\nare good to go. So that's the UI aspect of it. It's not great. It turns out that many\nphishing sites will just",
    "start": "2588980",
    "end": "2597880"
  },
  {
    "text": "include an image of a lock\nicon in the site itself and have a different URL. And if you don't know\nexactly what to look for",
    "start": "2597880",
    "end": "2604030"
  },
  {
    "text": "or what's going on, a user\nmight be fooled by this.",
    "start": "2604030",
    "end": "2609210"
  },
  {
    "text": "So this UI side\nis a little messy, partly because users\nare messy, like humans.",
    "start": "2609210",
    "end": "2614790"
  },
  {
    "text": "And it's really\nhard to tell what's the right thing to do here. So we'll focus mostly\non this aspect of it,",
    "start": "2614790",
    "end": "2620109"
  },
  {
    "text": "which is much easier\nto discuss precisely. Make sense?",
    "start": "2620110",
    "end": "2625290"
  },
  {
    "text": "Any questions about\nthis stuff so far? Yeah. AUDIENCE: I noticed\nsome websites that our HTTPS [INAUDIBLE].",
    "start": "2625290",
    "end": "2631624"
  },
  {
    "text": "PROFESSOR: Yeah. So it turns out that the\nbrowsers evolve over time what",
    "start": "2631624",
    "end": "2637030"
  },
  {
    "text": "it means to get a lock icon. So one thing that\nsome browsers do",
    "start": "2637030",
    "end": "2643370"
  },
  {
    "text": "is they give you\na lock icon only if all of the content or the\nresources within your page",
    "start": "2643370",
    "end": "2649849"
  },
  {
    "text": "were also served over HTTPS. So this is one of\nthe problems that forced HTTPS tries to\naddress is this mixed",
    "start": "2649850",
    "end": "2655680"
  },
  {
    "text": "content or insecure\nembedding kinds of problems. So sometimes, you will be fail\nto get a lock icon because",
    "start": "2655680",
    "end": "2662289"
  },
  {
    "text": "of that check. Other times, maybe\nyour certificate isn't quite good enough. So for example, Chrome will\nnot give you a lock icon",
    "start": "2662290",
    "end": "2669700"
  },
  {
    "text": "if it thinks your certificate\nuses weak cryptography. But also, it varies\nwith browsers.",
    "start": "2669700",
    "end": "2675990"
  },
  {
    "text": "So maybe Chrome will not\ngive you a lock icon, but Firefox will. So it's, again,\nthere's no clear spec",
    "start": "2675990",
    "end": "2683000"
  },
  {
    "text": "on what this lock icon means. Just people sweep stuff\nunder this lock icon.",
    "start": "2683000",
    "end": "2691059"
  },
  {
    "text": "Other questions? All right. So let's look at h guess\nwhat kinds of problems",
    "start": "2691060",
    "end": "2698830"
  },
  {
    "text": "we run into with this plan. So one thing I guess we\nshould maybe first talk about is, OK, so in\nregular HTTP, we used",
    "start": "2698830",
    "end": "2707540"
  },
  {
    "text": "to rely on DNS to\ngive us the correct IP address on the server.",
    "start": "2707540",
    "end": "2713100"
  },
  {
    "text": "So how much do we have to\ntrust DNS for these HTTPS URLs? ",
    "start": "2713100",
    "end": "2720960"
  },
  {
    "text": "Are DNS servers trusted,\nor are these DNS mappings important for us anymore? ",
    "start": "2720960",
    "end": "2728360"
  },
  {
    "text": "Yeah. AUDIENCE: They are\nbecause the certificate is signing the domain name. I don't think you sign an\nIP address [INAUDIBLE].",
    "start": "2728360",
    "end": "2734860"
  },
  {
    "text": "PROFESSOR: That's right. Yeah. So the certificate\nsigns the domain name. So this is like amazon.com. ",
    "start": "2734860",
    "end": "2742040"
  },
  {
    "text": "So [INAUDIBLE]. AUDIENCE: Say someone steals\namazon.com's private key",
    "start": "2742040",
    "end": "2747776"
  },
  {
    "text": "and [INAUDIBLE] another server\nwith another IP address, and combines [INAUDIBLE]\nIP address [INAUDIBLE].",
    "start": "2747776",
    "end": "2754849"
  },
  {
    "text": "But then you already\nstole the private key. PROFESSOR: That's right. Yeah. So in fact, you're\ndescribing after both steal the private key and\nredirect DNS to yourself.",
    "start": "2754849",
    "end": "2762880"
  },
  {
    "text": "So is DNS in itself sensitive\nenough for us to care about? I guess in some\nsense you're right,",
    "start": "2762880",
    "end": "2769310"
  },
  {
    "text": "that we need DNS\nto find the idea, or otherwise we'd be lost\nbecause this is just the host name, and we still need to\nfind IP address to talk to it.",
    "start": "2769310",
    "end": "2775990"
  },
  {
    "text": "What if someone\ncompromised the DNS server and points us at a\ndifferent IP address? Is it going to be bad? Yeah.",
    "start": "2775990",
    "end": "2781230"
  },
  {
    "text": "AUDIENCE: Well, maybe\njust [INAUDIBLE] HTTPS. PROFESSOR: So potentially\nworrisome, right.",
    "start": "2781230",
    "end": "2786810"
  },
  {
    "text": "So they might just refuse\nthe connection altogether. AUDIENCE: Well, no. They just redirect\nyou to the HTTP URL. PROFESSOR: Well, so\ncertainly, if you",
    "start": "2786810",
    "end": "2793351"
  },
  {
    "text": "connect to it over HTTPS,\nthen they can't redirect. But yeah.",
    "start": "2793351",
    "end": "2799660"
  },
  {
    "text": "Yeah. AUDIENCE: You can [INAUDIBLE]\nand try to fool the user. That's [INAUDIBLE].",
    "start": "2799660",
    "end": "2806520"
  },
  {
    "text": "PROFESSOR: That's right, yeah. So the thing that\nyou mentioned is that you could try to serve\nup a different certificate.",
    "start": "2806520",
    "end": "2813190"
  },
  {
    "text": "So maybe you-- well, one\npossibility is you somehow compromised the CA, in\nwhich case all right, you're in business.",
    "start": "2813190",
    "end": "2819470"
  },
  {
    "text": "Another possibility is\nmaybe you'll just sign the certificate by yourself. Or maybe you have some old\ncertificate for this guy",
    "start": "2819470",
    "end": "2824725"
  },
  {
    "text": "that you gotten the\nprivate key for. And it turns out\nthat web browsers,",
    "start": "2824725",
    "end": "2831070"
  },
  {
    "text": "as this sort of forced HTTPS\npaper we're reading touched on, most web browsers actually ask\nthe user if something doesn't",
    "start": "2831070",
    "end": "2838570"
  },
  {
    "text": "look right with the\ncertificate, which seems like a fairly\nstrange thing to do because here's the rule.",
    "start": "2838570",
    "end": "2843850"
  },
  {
    "text": "The host name has to match\nthe name of the certificate, and it has to be valid. It has to be unexpired,\nall these very clear rules.",
    "start": "2843850",
    "end": "2850450"
  },
  {
    "text": "But because of historically the\nway HTTPS has been deployed, it's often been the case\nthat web server operators",
    "start": "2850450",
    "end": "2858029"
  },
  {
    "text": "mis-configure HTTPS. So maybe they just forget\nto renew their certificate.",
    "start": "2858030",
    "end": "2863330"
  },
  {
    "text": "Things were going\nalong great and you didn't notice that your\ncertificate was expired and you just forgot to renew it.",
    "start": "2863330",
    "end": "2869030"
  },
  {
    "text": "So it seems to web\nbrowser developers, that seems like a bit of a bummer. Oh, man. It's just expired. Let's just let\nthe user continue.",
    "start": "2869030",
    "end": "2875510"
  },
  {
    "text": "So they offer a dialogue\nbox for the user saying, well, I got a\ncertificate, but it doesn't look right in some way.",
    "start": "2875510",
    "end": "2881050"
  },
  {
    "text": "[INAUDIBLE] go ahead\nanyway and continue. So web browsers will allow\nusers to sort of override",
    "start": "2881050",
    "end": "2887880"
  },
  {
    "text": "this decision on things like\nexpiration of certificates. Also for host names,\nit might be the case",
    "start": "2887880",
    "end": "2893286"
  },
  {
    "text": "that your website has many name. Like for Amazon,\nyou might connect to amazon.com, or maybe\nwww.amazon.com, or maybe",
    "start": "2893287",
    "end": "2901430"
  },
  {
    "text": "other host names. And if you are not careful\nwith the website operator, you might not know\nto get certificates",
    "start": "2901430",
    "end": "2907590"
  },
  {
    "text": "for every possible name\nthat your website has. And then a user is sort\nof stuck saying, well,",
    "start": "2907590",
    "end": "2913615"
  },
  {
    "text": "the host name doesn't\nlook quite right, but maybe let's go anyway. So this is the reason\nwhy web browsers allow",
    "start": "2913615",
    "end": "2919070"
  },
  {
    "text": "users to accept more\nbroadly, or a broader range",
    "start": "2919070",
    "end": "2924560"
  },
  {
    "text": "of certificates, than these\nrules might otherwise dictate. So that's [INAUDIBLE] problem. And then if you\nhijack DNS, then you",
    "start": "2924560",
    "end": "2931484"
  },
  {
    "text": "might be able to\nredirect the user to one of these\nsites that serves up a incorrect certificate.",
    "start": "2931484",
    "end": "2936830"
  },
  {
    "text": "And if the user isn't\ncareful, they're going to potentially approve\nthe browser accepting",
    "start": "2936830",
    "end": "2943230"
  },
  {
    "text": "your certificate, and then\nyou're in trouble then. That's a bit of a gray area\nwith respect to how much",
    "start": "2943230",
    "end": "2952354"
  },
  {
    "text": "you should really trust DNS. So you certainly don't want to\ngive arbitrary users control of your DNS name [INAUDIBLE].",
    "start": "2952354",
    "end": "2957890"
  },
  {
    "text": "But certainly, the goal\nof SSL/TLS and HTTPS, all this stuff, is to\nhopefully not trust DNS at all.",
    "start": "2957890",
    "end": "2965289"
  },
  {
    "text": "If everything works\nhere correctly, then DNS shouldn't be trusted. You can [INAUDIBLE].",
    "start": "2965290",
    "end": "2971794"
  },
  {
    "text": "You should never be able\nto intercept any data or corrupt data, et cetera. Make sense?",
    "start": "2971794",
    "end": "2977847"
  },
  {
    "text": "That's if everything\nworks, of course. It's a little bit\nmessier than that. All right.",
    "start": "2977847",
    "end": "2983990"
  },
  {
    "text": "So I guess one interesting\nquestion to talk about",
    "start": "2983990",
    "end": "2989230"
  },
  {
    "text": "is I guess how bad\ncould an attack be if the user mis-approves\na certificate?",
    "start": "2989230",
    "end": "2997289"
  },
  {
    "text": "So as we were saying,\nif the user accepts a certificate for the wrong\nhost or accepts an expired certificate, what\ncould go wrong?",
    "start": "2997290",
    "end": "3005300"
  },
  {
    "text": "How much should we worry about\nthis mistake from the user? Yeah.",
    "start": "3005300",
    "end": "3010428"
  },
  {
    "text": "AUDIENCE: Well, [INAUDIBLE].  But it could be,\n[? in example ?], not the site",
    "start": "3010428",
    "end": "3017671"
  },
  {
    "text": "the user wants to visit. So they could do things like\npretend to be the user's name.",
    "start": "3017671",
    "end": "3024252"
  },
  {
    "text": "PROFESSOR: Right. So certainly, the user\nmight then I guess be fooled into thinking,\noh, I have all this money,",
    "start": "3024252",
    "end": "3029640"
  },
  {
    "text": "or you have no money at all\nbecause the result page comes back saying here's your balance. So maybe the user\nwill assume something",
    "start": "3029640",
    "end": "3035940"
  },
  {
    "text": "about what that bank has\nor doesn't have based on the result. Well,\nit still seems bad,",
    "start": "3035940",
    "end": "3041830"
  },
  {
    "text": "but not necessarily\nso disastrous. Yeah. AUDIENCE: I think\nthat an [INAUDIBLE] get all the user's\ncookies and [INAUDIBLE].",
    "start": "3041830",
    "end": "3051162"
  },
  {
    "text": "PROFESSOR: Right. So this is your fear, yeah. This is much more\nworrisome, actually, or has a much more longer\nlasting impact on you.",
    "start": "3051162",
    "end": "3058000"
  },
  {
    "text": "And the reason this works out\nis because the browser, when it figures out [INAUDIBLE]\nmakes a decision",
    "start": "3058000",
    "end": "3064059"
  },
  {
    "text": "as to who is allowed to get\na particular set of cookies or not just looks at\nthe host name in the URL",
    "start": "3064060",
    "end": "3069640"
  },
  {
    "text": "that you were supposed\nto be connected to. So if you connect to some\nattackers' web server, and then you just accept their\ncertificate for amazon.com",
    "start": "3069640",
    "end": "3078130"
  },
  {
    "text": "as the real thing,\nthen the browser will think, yeah, the entity\nI'm talking to is amazon.com, so I will treat them as I\nwould a normal amazon.com",
    "start": "3078130",
    "end": "3085809"
  },
  {
    "text": "server, which means that\nthey should get access to all the cookies that\nyou have for that host.",
    "start": "3085810",
    "end": "3091119"
  },
  {
    "text": "And presumably they could\nrun a JavaScript code in your browser in that\nsame origin principle.",
    "start": "3091120",
    "end": "3097880"
  },
  {
    "text": "So if you have\nanother site open that was connecting to the\nreal website-- like maybe",
    "start": "3097880",
    "end": "3105080"
  },
  {
    "text": "you had a tab open\nin your browser. You closed your laptop,\nthen you opened it on a different network, all of\na sudden, someone intercepted",
    "start": "3105080",
    "end": "3111190"
  },
  {
    "text": "your connection to\namazon.com and injected their own response. If you approve it,\nthen they'll be able to access\nthe old amazon.com",
    "start": "3111190",
    "end": "3118975"
  },
  {
    "text": "page you have open because\nas far as the browser is concerned, these\nare the same origin because they have\nthe same host name.",
    "start": "3118975",
    "end": "3124656"
  },
  {
    "text": "That's going to be troublesome. So this is potentially\nquite a unfortunate attack",
    "start": "3124656",
    "end": "3129670"
  },
  {
    "text": "if the user makes\nthe wrong choice on approving that certificate. Make sense?",
    "start": "3129670",
    "end": "3135430"
  },
  {
    "text": "Any questions about that? All right. So that's one sort of, I guess,\nissue that this forced HTTPS",
    "start": "3135430",
    "end": "3142480"
  },
  {
    "text": "paper is worried\nabout is users making a mistake in the decision,\nusers having too much leeway",
    "start": "3142480",
    "end": "3148869"
  },
  {
    "text": "in accepting certificates. Another problem that\nshows up in practice",
    "start": "3148870",
    "end": "3155910"
  },
  {
    "text": "is that-- we sort of\nbriefly talked about this-- but this is one of the\nthings that also forced",
    "start": "3155910",
    "end": "3161690"
  },
  {
    "text": "HTTPS, I think, is\nsomewhat concerned about is this notion of insecure\nembedding, or mixed content.",
    "start": "3161690",
    "end": "3170760"
  },
  {
    "text": "And the problem that\nthis term refers to is that a secure site, or\nany website for that matter,",
    "start": "3170760",
    "end": "3180880"
  },
  {
    "text": "can embed other pieces of\ncontent into a web page. So if you have some sort of\na site, foo.com/index.html,",
    "start": "3180880",
    "end": "3194019"
  },
  {
    "text": "this site might be\nserved from HTTPS, but inside of this HTML page,\nyou could have many tags that",
    "start": "3194020",
    "end": "3201420"
  },
  {
    "text": "instruct the browser to go\nand fetch other stuff as part of this page. So the easiest thing\nto sort of think about",
    "start": "3201420",
    "end": "3207820"
  },
  {
    "text": "is probably script\ntags where you can say script source\nequals http jquery.com.",
    "start": "3207820",
    "end": "3216230"
  },
  {
    "text": "So this is a popular\nJavaScript library that makes it easier to\ninteract with lots of stuff",
    "start": "3216230",
    "end": "3221330"
  },
  {
    "text": "in your browser. But many web developers\njust reference a URL",
    "start": "3221330",
    "end": "3227150"
  },
  {
    "text": "on another site like this. So we should be fairly\nstraightforward, but what's the problem\nwith this kind of set up?",
    "start": "3227150",
    "end": "3233790"
  },
  {
    "text": "Suppose you have a secure\nsite and you just load jQuery. Yeah.",
    "start": "3233790",
    "end": "3238896"
  },
  {
    "text": "AUDIENCE: It could\nbe fake jQuery. PROFESSOR: Yeah. So there are actually\ntwo ways that you could get the wrong thing\nthat you're not expecting.",
    "start": "3238896",
    "end": "3246380"
  },
  {
    "text": "One possibility is that\njQuery itself is compromised. So that seems like, well,\nyou get what you asked for.",
    "start": "3246380",
    "end": "3252470"
  },
  {
    "text": "You asked for this\nsite from jquery.com and that's what you get. If jQuery is compromised,\nthat's too bad.",
    "start": "3252470",
    "end": "3259069"
  },
  {
    "text": "Another problem is\nthat this request is going to be sent without any\nencryption or authentication over the network.",
    "start": "3259070",
    "end": "3264980"
  },
  {
    "text": "So if an adversary is in control\nover your network connection, then they could\nintercept this request",
    "start": "3264980",
    "end": "3270890"
  },
  {
    "text": "and serve back some other\nJavaScript code in response. Now, this JavaScript\ncode is going to run as part of this page.",
    "start": "3270890",
    "end": "3278480"
  },
  {
    "text": "And now, because it's running\nin this HTTPS foo.com domain, it has access to your\nsecure cookies for foo.com",
    "start": "3278480",
    "end": "3285630"
  },
  {
    "text": "and any other stuff you have\nin that page, et cetera. So it seems like a\nreally bad thing.",
    "start": "3285630",
    "end": "3290920"
  },
  {
    "text": "So you should be careful not to. Or a web developer\ncertainly should be careful not to make\nthis kind of a mistake.",
    "start": "3290920",
    "end": "3297470"
  },
  {
    "text": "So one solution is to ensure\nthat all content embedded in a secure page is also secure.",
    "start": "3297470",
    "end": "3304339"
  },
  {
    "text": "So this seems like a good\nguideline for many web developers to follow. So maybe you should just\ndo https colon jquery.com.",
    "start": "3304340",
    "end": "3312434"
  },
  {
    "text": "Or it turns out that URLs\nsupport these origin relative URLs, which means you could omit\nthe HTTPS part and just say,",
    "start": "3312435",
    "end": "3321345"
  },
  {
    "text": "[INAUDIBLE] script source\nequals //jquery.com/ something.",
    "start": "3321345",
    "end": "3329550"
  },
  {
    "text": "And what this means is to\nuse whatever URL scheme your own URL came from.",
    "start": "3329550",
    "end": "3335890"
  },
  {
    "text": "So this tag will translate\nto https jquery.com if it's on an HTTPS page, and\nto regular http jquery.com",
    "start": "3335890",
    "end": "3342870"
  },
  {
    "text": "if it's on a non-HTTPS,\njust regular HTTP URL. So that's one way to\navoid this problem.",
    "start": "3342870",
    "end": "3350660"
  },
  {
    "text": "Another thing that actually\nrecently got introduced. So this field is\nsomewhat active.",
    "start": "3350660",
    "end": "3357280"
  },
  {
    "text": "People are trying to\nmake things better. One alternative way of\ndealing with this problem",
    "start": "3357280",
    "end": "3364340"
  },
  {
    "text": "is perhaps to include a hash or\nsome sort of an [? indicator ?] right here in the tag, because\nif you know exactly what",
    "start": "3364340",
    "end": "3370720"
  },
  {
    "text": "content you want to load,\nmaybe you don't actually have to load it all over HTTPS. You don't actually care who\nserves it to you, as long as it",
    "start": "3370720",
    "end": "3377740"
  },
  {
    "text": "matches a particular hash. So there's actually\na new spec out there",
    "start": "3377740",
    "end": "3382890"
  },
  {
    "text": "for being able to\nspecify basically hashes in these kinds of tags.",
    "start": "3382890",
    "end": "3390309"
  },
  {
    "text": "So instead of having to refer\nto jquery.com with an HTTPS URL, maybe what you\ncould do is just say",
    "start": "3390310",
    "end": "3395800"
  },
  {
    "text": "script source equals\njquery.com, maybe even HTTP.",
    "start": "3395800",
    "end": "3401020"
  },
  {
    "text": "But here, you're going to\ninclude some sort of a tag attribute, like\nhash equals here,",
    "start": "3401020",
    "end": "3407752"
  },
  {
    "text": "you're going to put in a--\nlet's say a shell one hash or a shell two\nhash of the content",
    "start": "3407752",
    "end": "3412800"
  },
  {
    "text": "that you're expecting to\nget back from the server. AUDIENCE: [INAUDIBLE]. PROFESSOR: Question? AUDIENCE: [INAUDIBLE].",
    "start": "3412800",
    "end": "3417920"
  },
  {
    "text": "PROFESSOR: Ah, man. There's some\ncomplicated name for it. I have the URL, actually, in the\nlecture notes, so [INAUDIBLE].",
    "start": "3417920",
    "end": "3424069"
  },
  {
    "text": " Subresource integrity\nor something like this.",
    "start": "3424070",
    "end": "3431590"
  },
  {
    "text": "I can actually slowly\nbe-- well, hopefully will be deployed probably\nsoon in various browsers.",
    "start": "3431590",
    "end": "3438380"
  },
  {
    "text": "Feels like another way to\nactually authenticate content without relying on data, or data\nencryption of the [INAUDIBLE].",
    "start": "3438380",
    "end": "3446980"
  },
  {
    "text": "So here, we have this\nvery generic plan using SSL and TLS to\nauthenticate connections to particular servers.",
    "start": "3446980",
    "end": "3453317"
  },
  {
    "text": "This is almost like\nan alternative way of thinking of sort of securing\nyour network communication.",
    "start": "3453317",
    "end": "3459160"
  },
  {
    "text": "If the thing you just\ncare about is integrity, then maybe you don't need\na secure, encrypted channel over the network.",
    "start": "3459160",
    "end": "3464630"
  },
  {
    "text": "All you need is to\nspecify exactly what you want at the end of the day. Yeah. AUDIENCE: So doesn't\nthis [INAUDIBLE]?",
    "start": "3464630",
    "end": "3471280"
  },
  {
    "text": "PROFESSOR: Doesn't this\ncode sit at the client? Well, it runs at the client,\nbut the client fetches this code",
    "start": "3471280",
    "end": "3477030"
  },
  {
    "text": "from some server. AUDIENCE: [INAUDIBLE]. Can't anybody just [INAUDIBLE]?",
    "start": "3477030",
    "end": "3482383"
  },
  {
    "text": "PROFESSOR: Yeah. So I think the\npoint of the hash is to protect the containing page\nfrom attackers that injected",
    "start": "3482384",
    "end": "3493060"
  },
  {
    "text": "different JavaScript code here. So for jQuery, this\nmakes a lot of sense because jQuery is well known.",
    "start": "3493060",
    "end": "3498310"
  },
  {
    "text": "You're not trying to hide\nwhat jQuery source code is. Well, what you do want to\nmake sure is that the network attacker cannot intercept\nyour connection and supply",
    "start": "3498310",
    "end": "3505880"
  },
  {
    "text": "a malicious version of\njQuery that's going to leak your cookies. AUDIENCE: [? Oh, ?] OK. PROFESSOR: That make sense?",
    "start": "3505880",
    "end": "3512150"
  },
  {
    "text": "It's absolutely true that\nanyone can compute the hash of these things for themselves. ",
    "start": "3512150",
    "end": "3518240"
  },
  {
    "text": "So this is a solution\nfor integrity problems, not for confidentiality. ",
    "start": "3518240",
    "end": "3525339"
  },
  {
    "text": "All right. So this is sort of what I guess\ndevelopers have to watch out",
    "start": "3525340",
    "end": "3531450"
  },
  {
    "text": "for when writing pages, or\nincluding content in their HTML",
    "start": "3531450",
    "end": "3538680"
  },
  {
    "text": "pages on a HTTPS URL. Another worrisome problem\nis dealing with cookies.",
    "start": "3538680",
    "end": "3545230"
  },
  {
    "text": "And here's where this difference\nbetween secure flags and just",
    "start": "3545230",
    "end": "3552130"
  },
  {
    "text": "origins comes into play. So one thing, of course,\nthe developer could screw up",
    "start": "3552130",
    "end": "3557859"
  },
  {
    "text": "is maybe they just forget\nto set the secure flag on a cookie in the first place.",
    "start": "3557860",
    "end": "3563150"
  },
  {
    "text": "This happens. Maybe you're thinking my users\nonly ever go to the HTTPS URL.",
    "start": "3563150",
    "end": "3569950"
  },
  {
    "text": "My cookies are\nnever [INAUDIBLE]. Why should I set the\nsecure flag on the cookie? And they might\n[? also have the ?] secure flag, or maybe\nthey just forget about it.",
    "start": "3569950",
    "end": "3575970"
  },
  {
    "text": "Is this a problem? What if your users\nare super diligent? They always visit the\nHTTPS URL, and you don't",
    "start": "3575970",
    "end": "3583260"
  },
  {
    "text": "have any problems like this. Do you still leave the\nsecure flag on your cookies? [INAUDIBLE] ",
    "start": "3583260",
    "end": "3591180"
  },
  {
    "text": "Yeah. AUDIENCE: Could the\nattacker connect to your URL and redirect you\nto a [INAUDIBLE]? PROFESSOR: Yeah. So even if the user doesn't\nexplicitly, manually",
    "start": "3591180",
    "end": "3599110"
  },
  {
    "text": "go to some plain text URL, the\nattacker could give you a link, or maybe ask you to load an\nimage from a non-HTTPS URL.",
    "start": "3599110",
    "end": "3606834"
  },
  {
    "text": "And then non-secure\ncookie is just going to be sent along\nwith the network request. So that seems like\na bit of a problem. So you really do\nneed the secure flag,",
    "start": "3606834",
    "end": "3613560"
  },
  {
    "text": "even if your users and your\napplication is super careful. AUDIENCE: But I'm\nassuming there's an HTTP URL [INAUDIBLE].",
    "start": "3613560",
    "end": "3619668"
  },
  {
    "text": " PROFESSOR: That's right, yeah. So again, so how could\nthis [? break? ?] Suppose",
    "start": "3619668",
    "end": "3626319"
  },
  {
    "text": "I have a site. It doesn't even\nlisten on port 80. There's no way to\nconnect to me on port 80,",
    "start": "3626319",
    "end": "3631560"
  },
  {
    "text": "so why is it a problem if\nI have a non-secure cookie? AUDIENCE: Because the\nbrowser wouldn't have cookies for another domain.",
    "start": "3631560",
    "end": "3638000"
  },
  {
    "text": "PROFESSOR: That's right. So the browser wouldn't\nsend your cookie to a different domain,\nbut yet it still",
    "start": "3638000",
    "end": "3643660"
  },
  {
    "text": "seems worrisome that an\nattacker might load a URL. So suppose that amazon.com only\never served stuff over SSL.",
    "start": "3643660",
    "end": "3650842"
  },
  {
    "text": "It's not even\nlistening on port 80. There's no way to connect it. So in this case,\nand as a result,",
    "start": "3650842",
    "end": "3657080"
  },
  {
    "text": "they don't set their\nsecure flag on a cookie. So how could a hacker\nthen steal their cookie if Amazon isn't even\nlistening at port 80?",
    "start": "3657080",
    "end": "3664546"
  },
  {
    "text": "Yeah. AUDIENCE: Can't the\nbrowser still think it's an HTTP connection? PROFESSOR: Well, so\nif you connect to port",
    "start": "3664546",
    "end": "3671100"
  },
  {
    "text": "443 and you speak SSL\nor GLS, then it's always going to be encrypted. So that's not a problem.",
    "start": "3671100",
    "end": "3676697"
  },
  {
    "text": "Yeah. AUDIENCE: The attacker can\n[INAUDIBLE] their network. PROFESSOR: Yeah. So the attacker can actually\nintercept your packets",
    "start": "3676697",
    "end": "3684349"
  },
  {
    "text": "that are trying to connect\nto Amazon on port 80 and then appear, and make\nit appear, like you've connected successfully.",
    "start": "3684350",
    "end": "3690720"
  },
  {
    "text": "So if the attacker has\ncontrol over your network, they could redirect\nyour packets trying",
    "start": "3690720",
    "end": "3695760"
  },
  {
    "text": "to get to Amazon to their\nown machine on port 80. They're going to\naccept the connection, and the client isn't going to\nbe able to know the difference.",
    "start": "3695760",
    "end": "3701831"
  },
  {
    "text": "It will be as if Amazon\nis listening on port 80, and then your cookies will be\nsent to this adversary's web",
    "start": "3701831",
    "end": "3706931"
  },
  {
    "text": "server. AUDIENCE: Because the\nclient is unknown. PROFESSOR: That's right. Yeah, so for HTTP,\nthere's no way to authenticate the host\nyou're connected to.",
    "start": "3706931",
    "end": "3713420"
  },
  {
    "text": "This is exactly what's going on. HTTP has no authentication,\nand as a result, you have to prevent\nthe cookies from being",
    "start": "3713420",
    "end": "3719950"
  },
  {
    "text": "sent over HTTP in\nthe first place because you have no idea\nwho that HTTP connection is",
    "start": "3719950",
    "end": "3725320"
  },
  {
    "text": "going to go to if you're\nassuming a network adversary. AUDIENCE: So you need\nnetwork control to do this.",
    "start": "3725320",
    "end": "3730624"
  },
  {
    "text": "PROFESSOR: Well, yeah. So either you have full\ncontrol over your network so you know that adversaries\naren't going to be able to intercept your packets.",
    "start": "3730624",
    "end": "3736860"
  },
  {
    "text": "But even then, it's\nactually not so great. Like look at the TCP lecture. You can do all kinds of sequence\nnumber of attacks and so on.",
    "start": "3736860",
    "end": "3743716"
  },
  {
    "text": "[? That's going to be ?]\ntroublesome. All right. Any more questions about that? Yeah.",
    "start": "3743716",
    "end": "3748732"
  },
  {
    "text": "AUDIENCE: I'm sorry, but\nisn't the attack intercepted in that case? Is there like a redirect? PROFESSOR: Well, what\nthat hacker presumably",
    "start": "3748732",
    "end": "3753750"
  },
  {
    "text": "would intercept is an HTTP\nrequest from the client going to http amazon.com, and\nthat request includes",
    "start": "3753750",
    "end": "3760939"
  },
  {
    "text": "all your amazon.com cookies,\nor cookies for whatever domain it is that you're\nsending your request to. So if you don't mark\nthose cookies as secure,",
    "start": "3760939",
    "end": "3767084"
  },
  {
    "text": "there will be set of both\nencrypted and unencrypted connections. AUDIENCE: So how does that\nrequest get initiated? PROFESSOR: Ah, OK.",
    "start": "3767084",
    "end": "3772600"
  },
  {
    "text": "Yeah. So maybe you get the user\nto visit newyorktimes.com and you pay for an advertisement\nthat loads an image",
    "start": "3772600",
    "end": "3778260"
  },
  {
    "text": "from http colon amazon.com. And there's nothing\npreventing you from saying, please load\nan image from this URL.",
    "start": "3778260",
    "end": "3785119"
  },
  {
    "text": "But when a browser\ntries to connect there, it'll send the cookies if\nthe connection succeeds. Question back there.",
    "start": "3785120",
    "end": "3790854"
  },
  {
    "text": "AUDIENCE: Will it ask\nfor a change [INAUDIBLE]? PROFESSOR: Yeah. So HTTPS everywhere\nis an extension",
    "start": "3790854",
    "end": "3796890"
  },
  {
    "text": "that is very similar to\nforced HTTPS in some ways, and it tries to prevent\nthese kinds of mistakes.",
    "start": "3796890",
    "end": "3804720"
  },
  {
    "text": "So I guess one thing\nthat forced HTTP does is they worry about\nsuch mistakes.",
    "start": "3804720",
    "end": "3811759"
  },
  {
    "text": "And when you sort of opted a\nsite into this forced HTTPS plan, one thing that the\nbrowser will do for you",
    "start": "3811760",
    "end": "3819559"
  },
  {
    "text": "is prevent any HTTPS\nconnections to that host in the first place. So there's no way to make\nthis kind of mistakes",
    "start": "3819560",
    "end": "3827250"
  },
  {
    "text": "of not flagging your\ncookie as secure, or having other sort of kinds\nof cookie problems as well.",
    "start": "3827250",
    "end": "3834340"
  },
  {
    "text": "Another more subtle\nproblem-- so this, the problem we\ntalked about just now is the developer\nforgetting to set",
    "start": "3834340",
    "end": "3840430"
  },
  {
    "text": "the secure flag on a cookie. So that seems fixable. OK, maybe the developer\nshould just do it. OK, fix that problem.",
    "start": "3840430",
    "end": "3845690"
  },
  {
    "text": "The thing that's\nmuch more subtle is that when a secure web\nserver gets a cookie back",
    "start": "3845690",
    "end": "3851030"
  },
  {
    "text": "from the client, it actually has\nno idea whether this cookie was sent through an encrypted\nconnection or a plain text",
    "start": "3851030",
    "end": "3857020"
  },
  {
    "text": "connection because\nwhen the server gets a cookie from the\nclient, all it gets is the key value\npair for a cookie.",
    "start": "3857020",
    "end": "3864200"
  },
  {
    "text": "And as we sort of look at here,\nthe plan for the [INAUDIBLE] follows is that it'll include\nboth secure and insecure",
    "start": "3864200",
    "end": "3871529"
  },
  {
    "text": "cookies when it's sending a\nrequest to a secure server, because the browser\nhere was just",
    "start": "3871530",
    "end": "3876850"
  },
  {
    "text": "concerned about the\nconfidentiality of cookies. But on the server\nside, you now don't",
    "start": "3876850",
    "end": "3882029"
  },
  {
    "text": "have any integrity guarantees. When you get a\ncookie from a user, it might have been sent over\nan encrypted connection, but it also might have been sent\nover a plain text connection.",
    "start": "3882030",
    "end": "3890369"
  },
  {
    "text": "So this leads to somewhat\nmore subtle attacks, but the flavor of\nthese attacks tend",
    "start": "3890370",
    "end": "3895670"
  },
  {
    "text": "to be things like\nsession fixation. What it means is that suppose I\nwant to see what emails you're",
    "start": "3895670",
    "end": "3901840"
  },
  {
    "text": "sending. Or maybe I'll set a\ncookie for you that is a copy of my Gmail, cookie.",
    "start": "3901840",
    "end": "3906849"
  },
  {
    "text": "So when you go to compose\na message in Gmail, it'll actually be saved in\nmy sent folder inside of your sent folder.",
    "start": "3906850",
    "end": "3912531"
  },
  {
    "text": "It'll be as if you're\nusing my account, and then I'll be able to\nextract things from there. So if I can force a session\ncookie into your browser",
    "start": "3912531",
    "end": "3920610"
  },
  {
    "text": "and sort of get you\nto use my account, maybe I can extract some\ninformation that way from the victim.",
    "start": "3920610",
    "end": "3927170"
  },
  {
    "text": "So that's another problem that\narises because of this grey",
    "start": "3927170",
    "end": "3932290"
  },
  {
    "text": "area [INAUDIBLE] incomplete\nseparation between HTTP and HTTPS cookies.",
    "start": "3932290",
    "end": "3937523"
  },
  {
    "text": "Question. AUDIENCE: So you would need\na [INAUDIBLE] vulnerability to set that cookie [INAUDIBLE]. PROFESSOR: No.\n[INAUDIBLE] vulnerability",
    "start": "3937523",
    "end": "3943419"
  },
  {
    "text": "to set this cookie. You would just trick the\nbrowser into connecting to a regular HTTP host URL.",
    "start": "3943419",
    "end": "3949460"
  },
  {
    "text": "And without some extension\nlike forced HTTPS or HTTPS everywhere, you could\nthen, as an adversary,",
    "start": "3949460",
    "end": "3956730"
  },
  {
    "text": "set up a key in\nthe user's browser. It's a non-secure\ncookie, but it's going to be sent back,\neven on secure requests.",
    "start": "3956730",
    "end": "3963555"
  },
  {
    "text": "AUDIENCE: So do you have to\ntrick the browser into thinking the domain is the same domain? PROFESSOR: That's right. Yeah. So you have to intercept\ntheir network connection",
    "start": "3963555",
    "end": "3969910"
  },
  {
    "text": "and probably do the\nsame kind of attack you were talking about just\na couple of minutes ago. Yeah. Make sense?",
    "start": "3969910",
    "end": "3975970"
  },
  {
    "text": "All right. So I guess there's\nprobably [INAUDIBLE]. So what does forced HTTPS\nactually do for us now?",
    "start": "3975970",
    "end": "3983130"
  },
  {
    "text": "It tries to prevent some\nsubset of these problems. So I guess I should say, so\nforced HTTPS, the paper we read",
    "start": "3983130",
    "end": "3989680"
  },
  {
    "text": "was sort of a\nresearch proposal that was published I guess\nfive or six years ago now.",
    "start": "3989680",
    "end": "3995538"
  },
  {
    "text": "Since then, it's actually\nbeen standardized and actually adopted. So this was like a somewhat\nsketchy plug-in that",
    "start": "3995539",
    "end": "4002410"
  },
  {
    "text": "stored stuff and some cookies. Are they worried about\ngetting evicted and so on? Now actually, most\nbrowsers look at this paper",
    "start": "4002410",
    "end": "4008770"
  },
  {
    "text": "and say, OK, this\nis a great idea. We'll actually\nimplement it better within the browser itself. So there's something called HTTP\nstrict transport security that",
    "start": "4008770",
    "end": "4015970"
  },
  {
    "text": "implements most of the\nideas from forced HTTPS and actually make a good story. Like, here's how research\nactually makes an impact on I",
    "start": "4015970",
    "end": "4023565"
  },
  {
    "text": "guess security of web\napplications and browsers. But anyway, let's look\nat what forced HTTPS",
    "start": "4023565",
    "end": "4028970"
  },
  {
    "text": "does for a website. So forced HTTPS allows a\nwebsite to set this bit",
    "start": "4028970",
    "end": "4035220"
  },
  {
    "text": "for a particular host name. And the way that forced\nHTTPS changes the behavior",
    "start": "4035220",
    "end": "4041005"
  },
  {
    "text": "of the browser is threefold. So if some website\nsets forced HTTPS,",
    "start": "4041005",
    "end": "4048760"
  },
  {
    "text": "then there's sort of three\nthings that happen differently. So any certificate\nerrors are always fatal.",
    "start": "4048760",
    "end": "4059110"
  },
  {
    "text": "So the user doesn't\nhave a chance of accepting incorrect\ncertificate that",
    "start": "4059110",
    "end": "4065780"
  },
  {
    "text": "has a wrong host name, or an\nexpiration time that's passed, et cetera. So it's one thing that\nthe browser now changes.",
    "start": "4065780",
    "end": "4072810"
  },
  {
    "text": "Another is that it redirects\nall HTTP requests to HTTPS.",
    "start": "4072810",
    "end": "4081130"
  },
  {
    "text": "So this is a pretty good idea. If you know a site is always\nusing HTTPS legitimately,",
    "start": "4081130",
    "end": "4088590"
  },
  {
    "text": "then you should probably\nprohibit any regular HTTP requests [? website ?],\nbecause that's probably a sign of some mistake\nor attacker trying",
    "start": "4088590",
    "end": "4095110"
  },
  {
    "text": "to trick you into connecting\nto a site without encryption. You want to make sure this\nactually happens before you issue the HTTP request.",
    "start": "4095110",
    "end": "4102080"
  },
  {
    "text": "Otherwise, the HTTP request\nhas already sort of sailed onto the network. And the last thing that this\nforced HTTPS setting changes is",
    "start": "4102080",
    "end": "4112139"
  },
  {
    "text": "that it actually prohibits\nthis insecure embedding",
    "start": "4112140",
    "end": "4117740"
  },
  {
    "text": "plan that we looked\nat below here",
    "start": "4117740",
    "end": "4123910"
  },
  {
    "text": "when you're including a\nHTTP URL in an HTTPS site.",
    "start": "4123910",
    "end": "4130149"
  },
  {
    "text": "Make sense? So this is what the forced\nHTTPS sort of extension did.",
    "start": "4130149",
    "end": "4135318"
  },
  {
    "text": "In terms of what's\ngoing on now is that well, so this HTTPS\nstrict transport security HSTS",
    "start": "4135319",
    "end": "4143180"
  },
  {
    "text": "protocol basically\ndoes the same things. Most browsers now prohibit\ninsecure embedding by default.",
    "start": "4143180",
    "end": "4149969"
  },
  {
    "text": "So this used to be a\nlittle controversial because many developers\nhave trouble with this.",
    "start": "4149969",
    "end": "4154969"
  },
  {
    "text": "But I think Firefox and Chrome\nand IE all now by default",
    "start": "4154970",
    "end": "4160589"
  },
  {
    "text": "will refuse to load\ninsecure components, or at least secure JavaScript\nand CSS, into our page",
    "start": "4160590",
    "end": "4167649"
  },
  {
    "text": "unless you do something. Question. AUDIENCE: Don't they\nprompt the user? PROFESSOR: They used to, and\nthe user would just say, yes.",
    "start": "4167649",
    "end": "4173700"
  },
  {
    "text": "So IE, for example, used to\npop up this dialogue box, and this paper\ntalks about, saying, would you like to load\nsome extra content,",
    "start": "4173700",
    "end": "4180560"
  },
  {
    "text": "or something like that. AUDIENCE: [INAUDIBLE]\nbecause [INAUDIBLE]. PROFESSOR: Yeah. I think if you try to\npretend to be clever,",
    "start": "4180560",
    "end": "4187500"
  },
  {
    "text": "then you can bypass all\nthese security mechanisms. But don't try to\nbe clever this way.",
    "start": "4187500",
    "end": "4193220"
  },
  {
    "text": "So this is mostly a\nnon-problem in modern browsers, but these two things\nare still things that forced HTTPS and HTTP\nstrict transport security",
    "start": "4193220",
    "end": "4201510"
  },
  {
    "text": "provide and are useful. Yeah. AUDIENCE: What happens\nwhen a website can't support HTTPS? [INAUDIBLE]\nchange their [INAUDIBLE]?",
    "start": "4201510",
    "end": "4208895"
  },
  {
    "text": "PROFESSOR: So what do you\nmean can't support HTTPS? AUDIENCE: [INAUDIBLE]. PROFESSOR: Well, OK. So if you have a website\nthat doesn't support HTTPS",
    "start": "4208895",
    "end": "4216330"
  },
  {
    "text": "but sets this\ncookie, what happens? AUDIENCE: [INAUDIBLE]. PROFESSOR: Yeah. So this is the reason\nwhy it's an option.",
    "start": "4216330",
    "end": "4222790"
  },
  {
    "text": "So if you opted everyone, then\nyou're exactly in this boat. Like, oh, all of a sudden, you\ncan't talk to most of the web",
    "start": "4222790",
    "end": "4228140"
  },
  {
    "text": "because they don't use HTTPS. So you really wanted this\nto be selectively enabled for sites that really want\nthis kind of protection.",
    "start": "4228140",
    "end": "4234974"
  },
  {
    "text": "Yeah. AUDIENCE: But also, if\nI remember correctly, you can't set the cookie\nunless the site [INAUDIBLE]. PROFESSOR: That's right, yeah. So these guys are also\nworried about denial",
    "start": "4234974",
    "end": "4241441"
  },
  {
    "text": "of service attacks,\nwhere this plug in could be used to cause\ntrouble for other sites.",
    "start": "4241441",
    "end": "4247300"
  },
  {
    "text": "So if you, for example,\nset this forced HTTPS bit for some unsuspecting\nwebsite, then all of a sudden,",
    "start": "4247300",
    "end": "4255400"
  },
  {
    "text": "the website stops working\nbecause everyone is now trying to connect\nto them over HTTPS, and they don't support HTTPS.",
    "start": "4255400",
    "end": "4260889"
  },
  {
    "text": "So this is one example\nof worrying about denial of service attacks. Another thing is\nthat they actually",
    "start": "4260890",
    "end": "4267810"
  },
  {
    "text": "don't support setting forced\nHTTPS for an entire domain. So they worried that, for\nexample, at mit.edu, I",
    "start": "4267810",
    "end": "4275900"
  },
  {
    "text": "am a user at mit.edu. Maybe I'll set a forced HTTPS\ncookie for start.mit.edu in everyone's browsers.",
    "start": "4275900",
    "end": "4281770"
  },
  {
    "text": "And now, only HTTPS\nthings work at MIT. That seems also a\nlittle disastrous,",
    "start": "4281770",
    "end": "4287510"
  },
  {
    "text": "so you probably\nwant to avoid that. On the other hand, actually,\nHTTPS strict transfer security",
    "start": "4287510",
    "end": "4292730"
  },
  {
    "text": "went back on this\nand said, well, we'll allow this notion of forcing\nHTTPS for an entire subdomain",
    "start": "4292730",
    "end": "4298930"
  },
  {
    "text": "because it turns out\nto be useful because of these insecure cookies\nbeing sent along with a request",
    "start": "4298930",
    "end": "4304595"
  },
  {
    "text": "that you can't tell where\nthey were sent from initially. Anyway, so there's all\nkinds of subtle interactions",
    "start": "4304595",
    "end": "4310850"
  },
  {
    "text": "with teachers at\nthe lowest level, but it's not clear what\nthe right choice is.",
    "start": "4310850",
    "end": "4317320"
  },
  {
    "text": "OK, so one actually interesting\nquestion you might ask is are these fundamental\nto the system we",
    "start": "4317320",
    "end": "4325040"
  },
  {
    "text": "have, or are these mostly\njust helping developers avoid mistakes? So suppose you had a\ndeveloper that's very diligent",
    "start": "4325040",
    "end": "4332000"
  },
  {
    "text": "and doesn't do insecure\n[INAUDIBLE] embedding, doesn't solve any\nother problems, always gets their\ncertificates renewed,",
    "start": "4332000",
    "end": "4338640"
  },
  {
    "text": "should they bother with\nforced HTTPS or not? Yeah. AUDIENCE: Well, yeah.",
    "start": "4338640",
    "end": "4343885"
  },
  {
    "text": "You still have the problem with\nsomeone forcing HTTP protocol. Nothing stops the\nhacker from doing",
    "start": "4343885",
    "end": "4350502"
  },
  {
    "text": "[? excessive ?]\n[INAUDIBLE] forces the user to load something\nover HTTP and then to intercept the connection. PROFESSOR: That's true, but if\nyou feel they're very diligent",
    "start": "4350502",
    "end": "4358130"
  },
  {
    "text": "and all their cookies\nare marked secure, then having someone visit an\nHTTP version of your site,",
    "start": "4358130",
    "end": "4363542"
  },
  {
    "text": "shouldn't be a problem. AUDIENCE: [INAUDIBLE]. PROFESSOR: Yeah. So you'd probably have to\ndefend against cookie overwrite",
    "start": "4363542",
    "end": "4369530"
  },
  {
    "text": "or injection attacks, and\nthat's sort of doable. It's a little tedious, but\nyou can probably do something.",
    "start": "4369530",
    "end": "4375089"
  },
  {
    "text": "AUDIENCE: Yeah. I think her point is that\nalso, it didn't-- security didn't check the\ncertificate, right?",
    "start": "4375089",
    "end": "4380473"
  },
  {
    "text": "PROFESSOR: Yeah. So that's one. I think that this\nis the biggest thing is this first point, which\nis that everything else,",
    "start": "4380474",
    "end": "4386290"
  },
  {
    "text": "you can sort of defend it\nagainst by cleverly coding or being careful in\nyour application. The first thing is\nsomething that the user",
    "start": "4386290",
    "end": "4392739"
  },
  {
    "text": "has-- or the developer--\nhas no control over because the developer\nwants to make sure, for example, that their cookie will only\nbe sent to their server as",
    "start": "4392740",
    "end": "4400375"
  },
  {
    "text": "signed by this CA. And if the user is allowed\nto randomly say, oh, that's good enough,\nthen the developer",
    "start": "4400375",
    "end": "4406810"
  },
  {
    "text": "has no clue where\ntheir cookie's going to end up because some\nuser is going to leak it to some incorrect server.",
    "start": "4406810",
    "end": "4413420"
  },
  {
    "text": "So this is, I think, the main\nbenefit of this protocol. Question back there. AUDIENCE: [INAUDIBLE]\nsecond point is also vital because the\nuser might not [INAUDIBLE].",
    "start": "4413420",
    "end": "4420863"
  },
  {
    "text": "You might [INAUDIBLE]\nof the site, which would be right in the middle. PROFESSOR: I see. OK. So I agree in the\nsense that this",
    "start": "4420863",
    "end": "4427969"
  },
  {
    "text": "is very useful from the\npoint of view of UI security because as far as the\ncookies are concerned,",
    "start": "4427970",
    "end": "4435349"
  },
  {
    "text": "the developer can\nprobably be clever enough to do something sensible. But the user might not\nbe diligently looking",
    "start": "4435349",
    "end": "4441510"
  },
  {
    "text": "at that lock icon\nand URL at all times. So if you load up\namazon.com and it asks you",
    "start": "4441510",
    "end": "4449790"
  },
  {
    "text": "for a credit card number,\nyou might just type it in. You just forgot to\nlook for a lock icon, whereas if you set forced\nHTTPS for amazon.com, then",
    "start": "4449790",
    "end": "4458790"
  },
  {
    "text": "there's just not\nchance that you'll have an HTTP URL for that site.",
    "start": "4458790",
    "end": "4464304"
  },
  {
    "text": "It still [? causes a ?]\nproblem that maybe the user doesn't read the URL correctly. Like it says Ammazon\nwith two Ms dot com.",
    "start": "4464305",
    "end": "4472350"
  },
  {
    "text": "Probably still fool many users. But anyway, that is another\nadvantage for forced HTTPS.",
    "start": "4472350",
    "end": "4479756"
  },
  {
    "text": "Make sense? Other questions\nabout this scheme? ",
    "start": "4479756",
    "end": "4486480"
  },
  {
    "text": "All right. So I guess one\ninteresting thing is how do you get this\nforced HTTPS bit",
    "start": "4486480",
    "end": "4492739"
  },
  {
    "text": "for a site in the first place? Could you have intercepted\nthat as an attacker and prevent that\nbit from being set",
    "start": "4492740",
    "end": "4499780"
  },
  {
    "text": "if you\n[? want to mount a fax? ?] Yeah.",
    "start": "4499780",
    "end": "4505210"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] HTTPS. I mean, HTTPS, we're\n[? assuming ?] [INAUDIBLE] protocol [INAUDIBLE].",
    "start": "4505210",
    "end": "4512010"
  },
  {
    "text": "PROFESSOR: That's right. So on one hand,\nthis could be good. But this forced\nhttps that can only be sent over HTTPS connection\nto the host in question.",
    "start": "4512010",
    "end": "4521900"
  },
  {
    "text": "On other hand, the user might\nbe fooled at that point. Like, he doesn't have\nthe forced HTTPS bit yet.",
    "start": "4521900",
    "end": "4528810"
  },
  {
    "text": "So maybe the user will allow\nsome incorrect certificate, or will not even know that\nthis is HTTP and not HTTPS.",
    "start": "4528810",
    "end": "4538400"
  },
  {
    "text": "So it seems potentially\npossible for an attacker to prevent that forced\nHTTPS bit from being",
    "start": "4538400",
    "end": "4544219"
  },
  {
    "text": "sent in the first place. If you've never been to a site\nand you try to visit that site,",
    "start": "4544220",
    "end": "4549610"
  },
  {
    "text": "you might never learn whether\nit should be forced HTTPS or not in the first place. Yeah. AUDIENCE: Will the [INAUDIBLE]\nroaming certificate there.",
    "start": "4549610",
    "end": "4558000"
  },
  {
    "text": "PROFESSOR: That's right, yeah. So I guess the way to think\nof it is if they did a set, then you know you talked to\nthe right server at some point,",
    "start": "4558000",
    "end": "4565370"
  },
  {
    "text": "and then you could continue\nusing that bit correctly. On the other hand, if you don't\nhave that bit set, or maybe",
    "start": "4565370",
    "end": "4570400"
  },
  {
    "text": "if you've never talked\nto a server yet, there's no clear cut\nprotocol that will always give you whether that forced\nHTTPS bit should be set or not.",
    "start": "4570400",
    "end": "4578510"
  },
  {
    "text": "Maybe amazon.com always wants\nto set that forced HTTPS bit. But the first time you\npulled up your laptop,",
    "start": "4578510",
    "end": "4583560"
  },
  {
    "text": "you were already on\nan attacker's network, and there's just no way for\nyou to connect to amazon.com. Everything is intercepted,\nor something like this.",
    "start": "4583560",
    "end": "4590280"
  },
  {
    "text": "So it's a very hard\nproblem to solve. The bootstrapping of\nthese security settings",
    "start": "4590280",
    "end": "4595850"
  },
  {
    "text": "is pretty tricky. I guess one thing\nyou could try to do is maybe embed\nthis bit in DNSSEC. So if you have DNSSEC,\nalready in use,",
    "start": "4595850",
    "end": "4602530"
  },
  {
    "text": "then maybe you could sign\nwhether you should use HTTPS or not, or forced HTTPS or\nnot, as part of your DNS name.",
    "start": "4602530",
    "end": "4610960"
  },
  {
    "text": "But again, it just boils\ndown the problem to DNSSEC being secure. So there's always this\nsort of rule of trust",
    "start": "4610960",
    "end": "4616083"
  },
  {
    "text": "where you have to really\nassume that's correct. Question. AUDIENCE: [INAUDIBLE]. ",
    "start": "4616083",
    "end": "4624544"
  },
  {
    "text": "PROFESSOR: Yeah. So I guess Google keeps\ntrying to improve things by hard coding it. So one thing that\nChrome offers is",
    "start": "4624544",
    "end": "4632490"
  },
  {
    "text": "that actually, the browser\nships with a list of sites that should have forced HTTPS\nenabled-- or now, well, this",
    "start": "4632490",
    "end": "4639219"
  },
  {
    "text": "HSTS thing, which is\n[INAUDIBLE] enabled. So when you actually\ndownload Chrome,",
    "start": "4639220",
    "end": "4644510"
  },
  {
    "text": "you get lots of\nactually useful stuff, like somewhat up to date CRL\nand a list of forced HTTPS",
    "start": "4644510",
    "end": "4650650"
  },
  {
    "text": "sites that are\nparticularly important. So this is like somewhat\nadmitting defeat.",
    "start": "4650650",
    "end": "4655779"
  },
  {
    "text": "Like the protocol doesn't work. We just have to distribute\nthis a priori to everyone. And it sets up this\nunfortunate dichotomy",
    "start": "4655779",
    "end": "4662360"
  },
  {
    "text": "between sites that are\nsort of important enough for Google to ship\nwith the browser, and sites that don't do this.",
    "start": "4662360",
    "end": "4669132"
  },
  {
    "text": "Now of course, Google\nright now tells you that anyone can get\ntheir site included because the list is so small. But if this grows to\nmillions of entries,",
    "start": "4669132",
    "end": "4675739"
  },
  {
    "text": "I'm sure Google\nwill stop including everyone's site in there. But yeah, you could\ntotally add a domain. And you could email\nChrome developers",
    "start": "4675740",
    "end": "4682320"
  },
  {
    "text": "and get your thing included on\nthe list of forced HTTPS URLs. Anyway, any other questions\nabout forced HTTPS and SSL?",
    "start": "4682320",
    "end": "4691816"
  },
  {
    "text": "All right. Good. So I'll see you guys on\nWednesday at the [INAUDIBLE]. ",
    "start": "4691816",
    "end": "4697002"
  }
]