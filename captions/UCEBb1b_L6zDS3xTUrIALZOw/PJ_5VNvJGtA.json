[
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "5880"
  },
  {
    "start": "5880",
    "end": "11270"
  },
  {
    "text": "ANA BELL: OK, so let's get\nstarted on today's lecture.",
    "start": "11270",
    "end": "16610"
  },
  {
    "text": "Last lecture I left you off with\nthe promise of bigger and better algorithms to do what\nwe've been trying to do,",
    "start": "16610",
    "end": "22350"
  },
  {
    "text": "which is to approximate square\nroots and things like that. So today will be\nthe introduction",
    "start": "22350",
    "end": "27560"
  },
  {
    "text": "of our last algorithm\nfor a bit before we'll start talking about\nmore Python syntax.",
    "start": "27560",
    "end": "32689"
  },
  {
    "text": "But today we're going to\nintroduce the bisection search algorithm. OK, but before we get\ninto that, let's try",
    "start": "32689",
    "end": "38570"
  },
  {
    "text": "to remember where we\nleft off last time. So last time we talked\nabout floating point numbers",
    "start": "38570",
    "end": "44900"
  },
  {
    "text": "and then we talked about\napproximation algorithms. So the reason why we talked\nabout floating point numbers",
    "start": "44900",
    "end": "52400"
  },
  {
    "text": "is because we wanted to come\nup with an algorithm that was better than guess and check. Guess and check was\nreally limiting.",
    "start": "52400",
    "end": "58399"
  },
  {
    "text": "We were basically limited\nto some exhaustive number of potential solutions.",
    "start": "58400",
    "end": "64230"
  },
  {
    "text": "But we didn't just want\nto have an exhaustive set to look through for a solution.",
    "start": "64230",
    "end": "69320"
  },
  {
    "text": "We wanted to be able to actually\ncome up with an approximation to solve our problems.",
    "start": "69320",
    "end": "74580"
  },
  {
    "text": "And so we talked about floating\npoint numbers because we said, well, instead of having,\nfor example, integer",
    "start": "74580",
    "end": "80100"
  },
  {
    "text": "increments when we searched\nfor square roots of values, let's try to have\nsmaller increments.",
    "start": "80100",
    "end": "87780"
  },
  {
    "text": "And so if we have smaller\nincrements than an integer, well, we were starting to look\nat incrementing by 0.1 or 0.25",
    "start": "87780",
    "end": "95630"
  },
  {
    "text": "or 0.001, whatever we want. And so then since we started\ntalking about these floating",
    "start": "95630",
    "end": "101540"
  },
  {
    "text": "point numbers, it was\nimportant to understand what happens behind the scenes. And we saw that these floating\npoint numbers can't actually",
    "start": "101540",
    "end": "108079"
  },
  {
    "text": "be represented in\nmemory directly exactly. There's always, for the\nmajority of the numbers,",
    "start": "108080",
    "end": "113930"
  },
  {
    "text": "there's going to be\nsome sort of rounding that happens when that\nnumber is stored in memory.",
    "start": "113930",
    "end": "119329"
  },
  {
    "text": "And the rounding is very small. It's something like\n10 to the negative 10. Or sorry, 2 to the negative\n32, which is approximately 10",
    "start": "119330",
    "end": "128690"
  },
  {
    "text": "to the negative 10, which\nseems small, but we saw even with just a loop that added\n0.1 to itself 10 times,",
    "start": "128690",
    "end": "135170"
  },
  {
    "text": "we were already getting\nvery surprising results. So the approximation method\nintroduced the idea of, yes, we",
    "start": "135170",
    "end": "144629"
  },
  {
    "text": "can get an approximation for\nthe square root of a number, but we can't check for equality.",
    "start": "144630",
    "end": "149940"
  },
  {
    "text": "We can't say I'm going to come\nup with this approximation such that this approximation\nsquared or whatever",
    "start": "149940",
    "end": "157543"
  },
  {
    "text": "problem we're trying\nto solve is exactly equal to the number\nwe're looking for. So we had to have a\nlittle wiggle room.",
    "start": "157543",
    "end": "162780"
  },
  {
    "text": "And that wiggle room came\nin the form of an epsilon. So we were\napproximating a solution",
    "start": "162780",
    "end": "168959"
  },
  {
    "text": "by basically saying,\ndoes this solution come within plus or minus\nepsilon of my desired value.",
    "start": "168960",
    "end": "176319"
  },
  {
    "text": "So we came up with a nice\nalgorithm, the approximation algorithm, and we tested on\na bunch of different values.",
    "start": "176320",
    "end": "182189"
  },
  {
    "text": "We were incrementing a\nsmall increment a little bit at a time. And for the problem where\nwe're trying to find",
    "start": "182190",
    "end": "188400"
  },
  {
    "text": "approximate the square\nroot of some value x, we were saying, well,\nI'm going to keep making these small incremental\nchanges to my guess",
    "start": "188400",
    "end": "195960"
  },
  {
    "text": "until I come within\nplus or minus epsilon of my actual value. The guess squared was within\nplus or minus epsilon of my x.",
    "start": "195960",
    "end": "204040"
  },
  {
    "text": "And this was the\nnice slide that was kind of the big\nbang of last lecture",
    "start": "204040",
    "end": "211270"
  },
  {
    "text": "where we said we have to be\ncareful about the way we write these approximation\nalgorithms, because we might overshoot our epsilon.",
    "start": "211270",
    "end": "219590"
  },
  {
    "text": "So if this is our guess and\nthis is a guess squared,",
    "start": "219590",
    "end": "224800"
  },
  {
    "text": "the blue arrow\nincrements normally, whatever increment we choose. But then it's possible that at\nsome point the guess squared",
    "start": "224800",
    "end": "232780"
  },
  {
    "text": "comes just short of the\nepsilon, the x minus epsilon.",
    "start": "232780",
    "end": "238760"
  },
  {
    "text": "And with the\nfollowing increment, the guess squared becomes\njust past x plus epsilon.",
    "start": "238760",
    "end": "245450"
  },
  {
    "text": "And so the code that\nwe ended up writing, which it made sense right\nwhen we wrote it, actually",
    "start": "245450",
    "end": "250790"
  },
  {
    "text": "ended up giving us an infinite\nloop, because it never stopped. We never were within\nthat plus minus epsilon,",
    "start": "250790",
    "end": "257088"
  },
  {
    "text": "and so we would just keep making\nguesses from there on out. So we ended up getting an\ninfinite loop for our program.",
    "start": "257089",
    "end": "264470"
  },
  {
    "text": "The solution was to take\na little bit of code from guess and check\nand said let's add",
    "start": "264470",
    "end": "272120"
  },
  {
    "text": "an additional little sanity\ncheck stopping condition. And so everything\nexcept for this box",
    "start": "272120",
    "end": "278630"
  },
  {
    "text": "was the approximation algorithm. And we added the thing that I've\nboxed here as our sanity check",
    "start": "278630",
    "end": "283928"
  },
  {
    "text": "that we grabbed from the\nguess and check algorithm that basically said if we've\nmade a guess that is just",
    "start": "283928",
    "end": "291350"
  },
  {
    "text": "past the reasonable\nnumber, a reasonable guess, we know that all the\nguesses from here",
    "start": "291350",
    "end": "297650"
  },
  {
    "text": "on out will also\nbe unreasonable. And so there's no need\nto keep searching, and that condition will cause\nus to stop our infinite loop,",
    "start": "297650",
    "end": "307730"
  },
  {
    "text": "our potential infinite loop. So this guess squared is\nless than or equal to x.",
    "start": "307730",
    "end": "312810"
  },
  {
    "text": "Basically says stop when we go\npast the last reasonable guess. And that condition plus\nthe regular condition",
    "start": "312810",
    "end": "320090"
  },
  {
    "text": "from an approximation\nalgorithm, which says, I want my guess square to\nbe plus or minus epsilon",
    "start": "320090",
    "end": "326630"
  },
  {
    "text": "of the actual x, those two\nconditions together made",
    "start": "326630",
    "end": "332120"
  },
  {
    "text": "up my algorithm. And that's the algorithm. It's just this loop right\nhere, this while loop with this increment.",
    "start": "332120",
    "end": "338450"
  },
  {
    "text": "So it looks really,\nreally simple. And so what we ended up having\nis these two conditions.",
    "start": "338450",
    "end": "343820"
  },
  {
    "text": "So I want to be\nwithin epsilon and I want to still be making\nreasonable guesses to be,",
    "start": "343820",
    "end": "349880"
  },
  {
    "text": "sorry, I want to be, sorry,\noutside of the bounds of epsilon and still be making\nreasonable guesses. That's the condition that causes\nme to keep making more guesses.",
    "start": "349880",
    "end": "358699"
  },
  {
    "text": "And when either one of\nthese becomes false, I'm going to stop\nmaking guesses.",
    "start": "358700",
    "end": "363800"
  },
  {
    "text": "And that's what the if\nelse down here says. It says one of these conditions\nbecame false, either this one.",
    "start": "363800",
    "end": "370880"
  },
  {
    "text": "I'm making unreasonable\nguesses now. Or I've come within\nplus or minus epsilon. So which one is it?",
    "start": "370880",
    "end": "377560"
  },
  {
    "text": "So here I'm making\nunreasonable guesses. So I've exited the loop\nbecause I've gone too far.",
    "start": "377560",
    "end": "383970"
  },
  {
    "text": "In which case, I print I\nfail to find the square root. And otherwise, I've\nexited because I am now",
    "start": "383970",
    "end": "391080"
  },
  {
    "text": "within plus or minus epsilon. So let me just run the\ncode to remind ourselves",
    "start": "391080",
    "end": "396270"
  },
  {
    "text": "what it looked like. So here we're trying to find\n54,321 was this troublesome",
    "start": "396270",
    "end": "404090"
  },
  {
    "text": "value being within\nplus or minus 0.01. Our guess squared to be\nplus minus 0.01 of 54,321.",
    "start": "404090",
    "end": "413360"
  },
  {
    "text": "Our increment seemed\nreally small, 0.0001. But when we ran it, it\ntook a couple of seconds,",
    "start": "413360",
    "end": "422840"
  },
  {
    "text": "and we made about\n2.3 million guesses. And the code says we failed\nto find the square root.",
    "start": "422840",
    "end": "429980"
  },
  {
    "text": "And we're also reporting\nwhat the last guess was and what the last guess\nsquared was as well.",
    "start": "429980",
    "end": "436180"
  },
  {
    "text": "So what's the solution to this? The solution was, well, we\ncan make our epsilon bigger.",
    "start": "436180",
    "end": "442620"
  },
  {
    "text": "So if we made our epsilon be 1,\nso if we want it to be within plus or minus 1 of 54,321,\nyeah, that code works.",
    "start": "442620",
    "end": "453720"
  },
  {
    "text": "It didn't fail. It made still about\n2.3 million guesses, and it came up\nwith this estimate.",
    "start": "453720",
    "end": "459419"
  },
  {
    "text": "So as soon as we came with\nan epsilon, that boundary we stopped the program. It didn't try to do better.",
    "start": "459420",
    "end": "466030"
  },
  {
    "text": "It didn't try to\nget closer to x. The other solution, if we\nwere unhappy with the fact",
    "start": "466030",
    "end": "472280"
  },
  {
    "text": "that we failed, was to\nmake our steps smaller. But what's the problem if\nwe make our steps smaller?",
    "start": "472280",
    "end": "478527"
  },
  {
    "text": "Do you guys remember\nwhen I run the program? ",
    "start": "478527",
    "end": "483610"
  },
  {
    "text": "Yeah, it takes longer. And can you approximate\nhow much longer it'll take? ",
    "start": "483610",
    "end": "490730"
  },
  {
    "text": "I decreased my step size by 10. So every one step\nI made last run, I'm now going to take 10 steps.",
    "start": "490730",
    "end": "497510"
  },
  {
    "text": "So I'm waiting\nbasically, what, 15, 20 seconds here if the last\nrun took two seconds to run.",
    "start": "497510",
    "end": "504630"
  },
  {
    "text": "And now I've also doubled\nthe number of guesses. Or sorry, not doubled.",
    "start": "504630",
    "end": "510560"
  },
  {
    "text": "I'm making 10 times\nthe number of guesses. 23 million as opposed\nto 2.3 million.",
    "start": "510560",
    "end": "515719"
  },
  {
    "text": "But the code didn't fail. It found something that's\npretty close to the square root",
    "start": "515720",
    "end": "521449"
  },
  {
    "text": "of 54,321.",
    "start": "521450",
    "end": "527610"
  },
  {
    "text": "So that's where we left off. And I don't know about you, but\nI don't want to wait 20 seconds",
    "start": "527610",
    "end": "533850"
  },
  {
    "text": "to figure out what the\nsquare root of 54,000 is. That seems like an unreasonably\nlong amount of time",
    "start": "533850",
    "end": "539040"
  },
  {
    "text": "to come up with\nan approximation. And we don't wait that long\nwhen we do it on the computer",
    "start": "539040",
    "end": "545160"
  },
  {
    "text": "or when we do it\non the calculator. And so that leads me to the\nbisection search algorithm. It's got to be a\nbetter way for us",
    "start": "545160",
    "end": "552420"
  },
  {
    "text": "to solve certain types\nof problems much faster, but only certain\ntypes of problems.",
    "start": "552420",
    "end": "559310"
  },
  {
    "text": "So to motivate the bisection\nsearch, before we even look at code, I just want to\ngive you a bit of motivation",
    "start": "559310",
    "end": "564640"
  },
  {
    "text": "with a few different examples. The first one is I'm\ngoing to give you guys a chance to win some money.",
    "start": "564640",
    "end": "572259"
  },
  {
    "text": "So suppose I put a $100 bill\nat one page in this book.",
    "start": "572260",
    "end": "577840"
  },
  {
    "text": "This is actually the last\nedition, not the edition we're using this year. But I don't have this year's\nedition, unfortunately,",
    "start": "577840",
    "end": "585700"
  },
  {
    "text": "in my office. So this book is 448 pages long.",
    "start": "585700",
    "end": "590830"
  },
  {
    "text": "And I've put some\nmoney in this book. And if you can guess\nwhere the money is",
    "start": "590830",
    "end": "595870"
  },
  {
    "text": "in eight or fewer guesses,\nI will give you the money. And if you fail, you\nget an F. Not really.",
    "start": "595870",
    "end": "602589"
  },
  {
    "text": "Is this a game anyone\nwould want to play? No. That's what I thought.",
    "start": "602590",
    "end": "608759"
  },
  {
    "text": "And in fact, your chances of\nwinning are about 1 in 56. And yeah, I don't want\nto play that game either.",
    "start": "608760",
    "end": "617340"
  },
  {
    "text": "But now let's say I give you\nsome additional information. With each guess you\nmake, I will tell you",
    "start": "617340",
    "end": "624870"
  },
  {
    "text": "whether you are correct,\ntoo low, or too high.",
    "start": "624870",
    "end": "630570"
  },
  {
    "text": "So I give you some\nadditional information. Is this a game that now\nyou would want to play?",
    "start": "630570",
    "end": "635670"
  },
  {
    "text": "Would anyone like to\nplay the game with me? You want to play the game? OK.",
    "start": "635670",
    "end": "640790"
  },
  {
    "text": "All right, so you're up. ",
    "start": "640790",
    "end": "646819"
  },
  {
    "text": "So I'm going to write\ndown your guesses, because you only have eight. You remember that there's\nonly eight guesses.",
    "start": "646820",
    "end": "652545"
  },
  {
    "text": "So what's your first guess? There's 448 pages. You pick 1 to 448.",
    "start": "652545",
    "end": "660650"
  },
  {
    "text": "What's your first guess? STUDENT: 224. ANA BELL: 224. All right. Smack in the\nmiddle, right there.",
    "start": "660650",
    "end": "667069"
  },
  {
    "text": "All right, 224. Don't look. ",
    "start": "667070",
    "end": "673087"
  },
  {
    "text": "STUDENT: I have no\nidea what I'm doing. [LAUGHTER] ANA BELL: No money. But now I give you\nextra information.",
    "start": "673087",
    "end": "679550"
  },
  {
    "text": "The guess is too high. STUDENT: My guess was too high? ANA BELL: Yes, your\nguess was too high. So not 224.",
    "start": "679550",
    "end": "685145"
  },
  {
    "text": "STUDENT: 112. ANA BELL: 112. So you want to go here. 112.",
    "start": "685145",
    "end": "690300"
  },
  {
    "text": "All right. That's two guesses now. ",
    "start": "690300",
    "end": "705269"
  },
  {
    "text": "Nope. The guess is too high as well. Still too high. ",
    "start": "705270",
    "end": "715645"
  },
  {
    "text": "56? OK. So here somewhere. OK.",
    "start": "715645",
    "end": "721280"
  },
  {
    "text": "All right. 56. ",
    "start": "721280",
    "end": "726410"
  },
  {
    "text": "The guess is too high. ",
    "start": "726410",
    "end": "733380"
  },
  {
    "text": "Still too high.  STUDENT: [INAUDIBLE]",
    "start": "733380",
    "end": "738920"
  },
  {
    "text": "ANA BELL: 28? All right, 28. I'm going to start\nwriting up here. 28. You have 1, 2, 3.",
    "start": "738920",
    "end": "745610"
  },
  {
    "text": "You're at four guesses now. 28. It is-- no.",
    "start": "745610",
    "end": "756970"
  },
  {
    "text": "Wait, now I have to\nremember where I put it. It's too high. It's too high.",
    "start": "756970",
    "end": "762340"
  },
  {
    "text": "Sorry. [LAUGHS] Still too high. STUDENT: 14. ANA BELL: 14. OK, 14.",
    "start": "762340",
    "end": "768459"
  },
  {
    "text": "Right there. OK, now 14. ",
    "start": "768460",
    "end": "775210"
  },
  {
    "text": "Now it's too low. Now that I remembered-- now\nthat I remember where I actually put it, it's too low.",
    "start": "775210",
    "end": "782260"
  },
  {
    "text": "STUDENT: Turns out\nit's on page like 400. ANA BELL: Between 14 and 28.",
    "start": "782260",
    "end": "788149"
  },
  {
    "text": "So now you know it's-- yeah. 21? OK. So right there. 21.",
    "start": "788150",
    "end": "793840"
  },
  {
    "text": "OK, let's see. ",
    "start": "793840",
    "end": "800560"
  },
  {
    "text": "Guys, I'm shaking. [CHEERING] ",
    "start": "800560",
    "end": "808380"
  },
  {
    "text": "It's not 100, but there is a 1\nand a 0 in it, so there you go.",
    "start": "808380",
    "end": "814650"
  },
  {
    "text": "All right. That was awesome. So yes, I'm really\nglad you played.",
    "start": "814650",
    "end": "820890"
  },
  {
    "text": "And actually, you only took\nseven guesses to get it. So I could have probably\nrigged it a little bit better.",
    "start": "820890",
    "end": "827520"
  },
  {
    "text": "Because your chances of winning\nthis game are about 1 in 3. And you did a really good job.",
    "start": "827520",
    "end": "833620"
  },
  {
    "text": "So what was your thought\nprocess, basically? And I think once you\ndid a couple of them,",
    "start": "833620",
    "end": "839440"
  },
  {
    "text": "anyone who maybe didn't\nthink about this way kind of figured it out. You were basically guessing\nthe halfway point each time",
    "start": "839440",
    "end": "847500"
  },
  {
    "text": "I told you too high or too low. And so bisection\nsearch is a method",
    "start": "847500",
    "end": "852509"
  },
  {
    "text": "that you can use\nto solve problems where there is some sort\nof order to the thing",
    "start": "852510",
    "end": "859110"
  },
  {
    "text": "you're trying to search. So let's say we\nknow our interval.",
    "start": "859110",
    "end": "865050"
  },
  {
    "text": "In this case in the book, we\nknew that we had page 1 to 448.",
    "start": "865050",
    "end": "871420"
  },
  {
    "text": "So we had this low point, page\none, and this high point, 448. And we know that our answer\nlies within this interval.",
    "start": "871420",
    "end": "879070"
  },
  {
    "text": "And it can be integers,\nlike in this book, or it can be fractional\npieces as well.",
    "start": "879070",
    "end": "885319"
  },
  {
    "text": "And the idea is you're\njust guessing the midpoint between this interval. It's as good as\nguess as anything.",
    "start": "885320",
    "end": "890950"
  },
  {
    "text": "But based on the answer that I\ngive you, because now I give you extra information if\nit's too high or too low,",
    "start": "890950",
    "end": "896900"
  },
  {
    "text": "you can basically eliminate\nhalf of the search space. So with the guess 244,\nwhat ended up happening is",
    "start": "896900",
    "end": "904930"
  },
  {
    "text": "you eliminated this\nentire half of the book. So it's like I take this\noriginal book, 448 pages,",
    "start": "904930",
    "end": "912250"
  },
  {
    "text": "get the midpoint,\nrip it in half, throw away these upper pages.",
    "start": "912250",
    "end": "917329"
  },
  {
    "text": "And now you think of it like\nhaving this skinnier book. And this is now the book\nyou're searching through.",
    "start": "917330",
    "end": "924850"
  },
  {
    "text": "And then you're repeating\nthe process all over again. The low endpoint\nis still page one,",
    "start": "924850",
    "end": "930760"
  },
  {
    "text": "right because I\nhave no information about how low I need to go. But my high endpoint becomes the\nguess that I had just made, 224.",
    "start": "930760",
    "end": "941980"
  },
  {
    "text": "And now I make another guess\nmidpoint in this skinnier book.",
    "start": "941980",
    "end": "947680"
  },
  {
    "text": "And so this should\ntrigger something in your brain about computation\nand things that we've learned.",
    "start": "947680",
    "end": "953920"
  },
  {
    "text": "As soon as we're saying\nI'm repeating this process of now just doing the guess\nagain with this smaller",
    "start": "953920",
    "end": "960519"
  },
  {
    "text": "version of a book where\nbasically we have a loop. That's something that you\nshould be thinking about.",
    "start": "960520",
    "end": "967600"
  },
  {
    "text": "And this loop is\ngoing to be something that just repeats the same\nprocess over and over again.",
    "start": "967600",
    "end": "973270"
  },
  {
    "text": "Once I've eliminated this\nupper half of the book, now I'm looking through\nthis lower half, midpoint.",
    "start": "973270",
    "end": "978520"
  },
  {
    "text": "Based on the answer\nI give you, you can rip the book again\nin half where you are now and now you're searching the\nskinnier version of the book.",
    "start": "978520",
    "end": "987230"
  },
  {
    "text": "So we're basically\ncutting the number of things we need to search\nfor in half every time",
    "start": "987230",
    "end": "993500"
  },
  {
    "text": "we make a guess, which\nis really powerful. With guess and check or\nwith approximation method,",
    "start": "993500",
    "end": "1001167"
  },
  {
    "text": "if we're going to do guess\nand check on this book, we'd be asking is\nit page one, is it page two, is it page\nthree, is it page four.",
    "start": "1001167",
    "end": "1007029"
  },
  {
    "text": "And that's tedious. We're not eliminating half\nthe book with each guess. We're just eliminating\none page with each guess.",
    "start": "1007030",
    "end": "1017050"
  },
  {
    "text": "So this idea of\nlogarithmic growth, which is what happens\nwhen you eliminate the search space in\nhalf with each stage,",
    "start": "1017050",
    "end": "1024699"
  },
  {
    "text": "is logarithmic growth. And we'll come back to this idea\nagain towards the last few weeks of lecture when we talk\nabout comparing algorithms",
    "start": "1024700",
    "end": "1032679"
  },
  {
    "text": "in this class. And what does it mean\nfor one algorithm to be more efficient\nthan another algorithm? What does it mean to run faster?",
    "start": "1032680",
    "end": "1038589"
  },
  {
    "text": " So that's just\nsomething I mentioned. When we do guess and check\nwhere we ask one page at a time,",
    "start": "1038589",
    "end": "1045849"
  },
  {
    "text": "that's linear growth. Because if I give you now a\nbook that's double the size",
    "start": "1045849",
    "end": "1050980"
  },
  {
    "text": "and just by bad luck I put\nthe money away at the end, if I put the money at the end in\nthis book that's twice as big,",
    "start": "1050980",
    "end": "1058130"
  },
  {
    "text": "then you're going to have to\nask me twice as many questions until you get to the answer. But with logarithmic\ngrowth, if I still",
    "start": "1058130",
    "end": "1064720"
  },
  {
    "text": "put the money in\nthis book that's double the size somewhere,\nall you need to do is make one extra guess,\nnot 400 extra guesses",
    "start": "1064720",
    "end": "1073030"
  },
  {
    "text": "to figure out which\ninterval it's in. You take from this double\nbook, make your first guess,",
    "start": "1073030",
    "end": "1078160"
  },
  {
    "text": "and all of a sudden we\nare at this book again.  So let's do another\nanalogy just so we",
    "start": "1078160",
    "end": "1086710"
  },
  {
    "text": "get kind of the sense\nof where this is going. So suppose that we don't just\nneed to work with numbers.",
    "start": "1086710",
    "end": "1092000"
  },
  {
    "text": "We can also work\nwith anything that has an ordering property to it. So suppose when you came in, I\nasked you to sit alphabetically.",
    "start": "1092000",
    "end": "1099309"
  },
  {
    "text": "Front left is last name A,\nback right is last name Z.",
    "start": "1099310",
    "end": "1104680"
  },
  {
    "text": "And then I'm looking\nfor a particular person. For me, the bisection\nsearch algorithm",
    "start": "1104680",
    "end": "1110170"
  },
  {
    "text": "could be basically\nask the person in the middle of the class\nwhat is their last name.",
    "start": "1110170",
    "end": "1115659"
  },
  {
    "text": "If they say what it is and\ndepending on what they say,",
    "start": "1115660",
    "end": "1121600"
  },
  {
    "text": "I can basically dismiss\nhalf of the people. If their last name starts\nwith a letter later",
    "start": "1121600",
    "end": "1127090"
  },
  {
    "text": "than the one I'm looking\nfor in the alphabet, I dismiss the upper\nhalf and vice versa. And then I have this only half\nof the people to search through.",
    "start": "1127090",
    "end": "1134830"
  },
  {
    "text": "And I keep repeating\nthis process until I have only\none person left and either that person is\nthe one I'm looking for,",
    "start": "1134830",
    "end": "1141890"
  },
  {
    "text": "in which case I've\ndecreased by half the size of the class\nwith each guess, and I have one\nperson left to ask.",
    "start": "1141890",
    "end": "1148880"
  },
  {
    "text": "It's the one I'm looking\nfor, or that person that just isn't here.",
    "start": "1148880",
    "end": "1153890"
  },
  {
    "text": "So let's try to apply the\nsame idea of bisection search",
    "start": "1153890",
    "end": "1159170"
  },
  {
    "text": "to programming. And specifically,\nlet's do the problem we've been trying to solve\nkind of as a common thread",
    "start": "1159170",
    "end": "1165980"
  },
  {
    "text": "throughout these\nalgorithms figuring out the square root of a number. Not exact. Actually, we're still\ngoing to be looking only",
    "start": "1165980",
    "end": "1172250"
  },
  {
    "text": "for an approximation to the\nsquare root of a number. So the idea here is\nthat our interval",
    "start": "1172250",
    "end": "1178820"
  },
  {
    "text": "is if we're trying to\nfind the square root of x is going to be between 0 and x.",
    "start": "1178820",
    "end": "1183860"
  },
  {
    "text": "So basically I can just\nreuse this number line here.",
    "start": "1183860",
    "end": "1189679"
  },
  {
    "text": "And I have my interval for\nthe square root is 0 and x.",
    "start": "1189680",
    "end": "1195990"
  },
  {
    "text": "So like that. So with approximation\nmethod, we would start at 0",
    "start": "1195990",
    "end": "1202670"
  },
  {
    "text": "and painstakingly make\nour way little by little. But with bisection search,\nwe're making our initial guess",
    "start": "1202670",
    "end": "1210809"
  },
  {
    "text": "to be the halfway point. Again, we're working\nwith numbers, so the ordering properties\nis very intuitive.",
    "start": "1210810",
    "end": "1217400"
  },
  {
    "text": "We ask at this\nhalfway point what is-- with this guess at\nthe halfway point, what is the guess squared?",
    "start": "1217400",
    "end": "1224790"
  },
  {
    "text": "So if the guess squared is up\nhere, so g squared is up here,",
    "start": "1224790",
    "end": "1232360"
  },
  {
    "text": "then I know this\nguess is too big. So I know I do not need to make\nany further guesses up here.",
    "start": "1232360",
    "end": "1241200"
  },
  {
    "text": "So that's this case here. If I know this guess is\ntoo big, then my interval",
    "start": "1241200",
    "end": "1248429"
  },
  {
    "text": "now becomes this is going\nto be the low still, but now this is going\nto be my high point.",
    "start": "1248430",
    "end": "1253519"
  },
  {
    "text": "And this new interval\nI'm looking through. But if you think about it,\nit's the exact same problem",
    "start": "1253520",
    "end": "1259520"
  },
  {
    "text": "I started with when my\ninterval was larger. I still have an interval\nwith a low and a high.",
    "start": "1259520",
    "end": "1265190"
  },
  {
    "text": "I'm still going to\nmake a guess halfway. This new g here. And I'm going to ask\nagain, is this new guess",
    "start": "1265190",
    "end": "1273409"
  },
  {
    "text": "squared less than\nor greater than x? Let's say this\ncase is less than.",
    "start": "1273410",
    "end": "1279010"
  },
  {
    "text": "So if the new guess,\nnew g, is less than-- the new g squared is less\nthan x, then I know--",
    "start": "1279010",
    "end": "1286000"
  },
  {
    "text": "this is new g. Then I know that anything lower\nthan this is definitely not",
    "start": "1286000",
    "end": "1293170"
  },
  {
    "text": "going to be closer to the\nanswer I'm looking for. So now I'm eliminating this\nhalf of the search space.",
    "start": "1293170",
    "end": "1299950"
  },
  {
    "text": "And then I keep making\nthe same guesses. Next g, g, latest g.",
    "start": "1299950",
    "end": "1306010"
  },
  {
    "text": "This is like when you guys\nname your files, remember, and you've got new file, final\nfile, latest file, version two,",
    "start": "1306010",
    "end": "1314804"
  },
  {
    "text": "all that stuff. That's basically what I did. So anyway, I have this latest g\nhere, which is my new midpoint.",
    "start": "1314805",
    "end": "1320350"
  },
  {
    "text": "And I keep making these\nguesses and asking the question whether this guess squared\nis greater than or equal",
    "start": "1320350",
    "end": "1325929"
  },
  {
    "text": "or less than x. And I adjust my\nboundaries accordingly.",
    "start": "1325930",
    "end": "1331790"
  },
  {
    "text": "So at each stage, the number of\nvalues I have to search through are just half of what I had\nto search through last guess.",
    "start": "1331790",
    "end": "1341899"
  },
  {
    "text": "So the bisection search takes\nadvantage of two properties. And you can only use it when you\nhave these properties in hand.",
    "start": "1341900",
    "end": "1349460"
  },
  {
    "text": "There's some sort of ordering\nto the thing you're searching. So you know last names\nare alphabetical.",
    "start": "1349460",
    "end": "1354770"
  },
  {
    "text": "You know you have\nthis range of values. And you have some\nsort of feedback.",
    "start": "1354770",
    "end": "1360980"
  },
  {
    "text": "The feedback tells you whether\nthe guess that you made was too low or too high or\nexact or approximate, whatever",
    "start": "1360980",
    "end": "1368930"
  },
  {
    "text": "you want. So think about this for a\nsecond and answer the question.",
    "start": "1368930",
    "end": "1376110"
  },
  {
    "text": "So you're guessing a four digit\nPIN code on a phone or whatever. And the feedback\nthe phone tells you",
    "start": "1376110",
    "end": "1383090"
  },
  {
    "text": "is whether the guess\nis correct or not. Can you use bisection\nsearch in this situation",
    "start": "1383090",
    "end": "1388870"
  },
  {
    "text": "to quickly and correctly\nguess the code? No. Why is that?",
    "start": "1388870",
    "end": "1393960"
  },
  {
    "text": "What are we missing? STUDENT: It doesn't tell you\nif it's too big or too small. ANA BELL: It doesn't tell you\nif it's too big or too small.",
    "start": "1393960",
    "end": "1399390"
  },
  {
    "text": "Yeah. So I mean, you could\nuse bisection search and you could choose which\nhave to look through.",
    "start": "1399390",
    "end": "1404700"
  },
  {
    "text": "But then basically,\nyou just have to search through all the\nvalues anyway in worst case.",
    "start": "1404700",
    "end": "1409950"
  },
  {
    "text": "And then you might as well have\njust gone from 0000, 0001, 0002, and just have gone\nincrementally upward.",
    "start": "1409950",
    "end": "1417080"
  },
  {
    "text": " So how about this\nextreme guessing game?",
    "start": "1417080",
    "end": "1423510"
  },
  {
    "text": "So you have a\nfriend and you like to play this extreme\nguessing game where you",
    "start": "1423510",
    "end": "1429809"
  },
  {
    "text": "want to guess a number exactly. So your friend has a\ndecimal number in mind.",
    "start": "1429810",
    "end": "1437149"
  },
  {
    "text": "So it can be the decimal point\nlike any real number from 0 to 10, let's say,\nincluding 0, including 10,",
    "start": "1437150",
    "end": "1443980"
  },
  {
    "text": "to any precision in mind. So the feedback your\nfriend gives you when you play this\nextreme guessing",
    "start": "1443980",
    "end": "1449740"
  },
  {
    "text": "game is whether your guess was\ncorrect, too low, or too high. In this case, can you\nuse bisection search",
    "start": "1449740",
    "end": "1456164"
  },
  {
    "text": "to quickly and correctly\nguess the number. ",
    "start": "1456165",
    "end": "1461408"
  },
  {
    "text": "STUDENT: You could, but the\nnumber might be really long and then it would\ntake a long time. ANA BELL: Yeah.",
    "start": "1461408",
    "end": "1467260"
  },
  {
    "text": "So I included this\nword exactly here. If I didn't include\nthat, I think the answer could\nbe yes, because you",
    "start": "1467260",
    "end": "1475330"
  },
  {
    "text": "could play the game to\naround or approximation to two decimal places\nor something like that.",
    "start": "1475330",
    "end": "1481440"
  },
  {
    "text": "But I guess if your\nfriend wants to flex with pi in your\nextreme guessing game,",
    "start": "1481440",
    "end": "1488030"
  },
  {
    "text": "then bisection\nsearch wouldn't work. Because if you're trying to\nfind that number exactly,",
    "start": "1488030",
    "end": "1493790"
  },
  {
    "text": "then you'll never get to it. So yeah, you're using\nbisection search, but it's going to basically\nbe an infinite algorithm.",
    "start": "1493790",
    "end": "1501590"
  },
  {
    "text": "It won't terminate. ",
    "start": "1501590",
    "end": "1508740"
  },
  {
    "text": "So this is the same slide I had\nat the beginning of lecture, just to remind ourselves what\nthe code looks like when we use",
    "start": "1508740",
    "end": "1516600"
  },
  {
    "text": "the approximation algorithm. Nothing new here. So we had the thing\nthat basically did",
    "start": "1516600",
    "end": "1522929"
  },
  {
    "text": "the work was this while loop. While we were still\nfarther away from epsilon and we were still making\nreasonable guesses,",
    "start": "1522930",
    "end": "1530309"
  },
  {
    "text": "increment our guess by 0.0001. Now let's write the code\nfor the approximating",
    "start": "1530310",
    "end": "1538210"
  },
  {
    "text": "the square root of a number\nbut with bisection search. So we're going to follow\nthe same kind of procedure",
    "start": "1538210",
    "end": "1543700"
  },
  {
    "text": "we did here. And we're actually going to\nwrite it together on the slides. And I'm going to explain\nthe thought process that",
    "start": "1543700",
    "end": "1549460"
  },
  {
    "text": "goes behind each step. So the first thing\nwe're doing is",
    "start": "1549460",
    "end": "1555400"
  },
  {
    "text": "we're initializing\nsome stuff up here. So the thing we want to\nfind the square root of,",
    "start": "1555400",
    "end": "1561820"
  },
  {
    "text": "why not do the same number. That gave us trouble last time. And we still want to be within\nsome plus or minus epsilon,",
    "start": "1561820",
    "end": "1568180"
  },
  {
    "text": "again, because we do not\nwant to be comparing floats. And this num guesses\nis going to keep track",
    "start": "1568180",
    "end": "1575660"
  },
  {
    "text": "of how many guesses we've made. Basically when we played the\nguessing game, how many guesses did you do to get to the money.",
    "start": "1575660",
    "end": "1582725"
  },
  {
    "text": " Good. And then at the\nbottom here, we're",
    "start": "1582725",
    "end": "1588940"
  },
  {
    "text": "going to print out\nthe number of guesses",
    "start": "1588940",
    "end": "1594399"
  },
  {
    "text": "and what the guess was that\nbrought us close to the plus or minus epsilon.",
    "start": "1594400",
    "end": "1601230"
  },
  {
    "text": "So the first thing we do is we\nnotice there was a repetition. And the while loop here is\nexactly the same as the while",
    "start": "1601230",
    "end": "1609510"
  },
  {
    "text": "loop for the\napproximation method. While we're still farther\nthan epsilon away,",
    "start": "1609510",
    "end": "1616080"
  },
  {
    "text": "while our guess squared\nis plus or minus epsilon",
    "start": "1616080",
    "end": "1622269"
  },
  {
    "text": "away from x, so absolute\nvalue of guess squared minus x",
    "start": "1622270",
    "end": "1628300"
  },
  {
    "text": "is greater or equal to epsilon. I guess this could just\nbe greater than details.",
    "start": "1628300",
    "end": "1634980"
  },
  {
    "text": "Let's keep making guesses. Now, the guesses, we're\nnot incrementing anything.",
    "start": "1634980",
    "end": "1640940"
  },
  {
    "text": "This isn't the\napproximation method. We need to make the\nguesses in a smart way.",
    "start": "1640940",
    "end": "1646840"
  },
  {
    "text": "So we're going to initialize\nsome stuff for our algorithm to work, like our\noriginal endpoints.",
    "start": "1646840",
    "end": "1654430"
  },
  {
    "text": "And then we're going to do some\nstuff inside the loop, whatever is repeated, whatever we\nnoted when we were talking",
    "start": "1654430",
    "end": "1661456"
  },
  {
    "text": "about the algorithm. What did we note that\ngets repeated every time? Let's talk about\nthe initializations.",
    "start": "1661457",
    "end": "1669799"
  },
  {
    "text": "We need to initialize\nour two endpoints. For the bisection\nsearch to work, we need to know what\nour endpoints are.",
    "start": "1669800",
    "end": "1676430"
  },
  {
    "text": "So the low is going to be 0. So if we're trying to\nfind the square root of x, we might as well make our low 0.",
    "start": "1676430",
    "end": "1682900"
  },
  {
    "text": "And let's make our high point x. Our high point can be 2x, it\ncould be 3x, whatever we want,",
    "start": "1682900",
    "end": "1689870"
  },
  {
    "text": "but that's too big. We using algebra that\ndefinitely it won't be that big. So we can just make\nour high point x.",
    "start": "1689870",
    "end": "1698250"
  },
  {
    "text": "And then we just kick\noff this algorithm with our initial guess.",
    "start": "1698250",
    "end": "1703529"
  },
  {
    "text": "It's going to be the\nmidpoint of low and high. So high plus low divided by 2.",
    "start": "1703530",
    "end": "1709290"
  },
  {
    "text": "So that brings us to just before\nthe while loop here, right here.",
    "start": "1709290",
    "end": "1714820"
  },
  {
    "text": "And now we're going\nto repeat some stuff while we're still farther than\nepsilon away from our answer.",
    "start": "1714820",
    "end": "1724590"
  },
  {
    "text": "So the thing that\nwe're repeating is going to be checking if\nwe are too low or too high.",
    "start": "1724590",
    "end": "1731030"
  },
  {
    "text": "We have a guess in hand\nnow, this midpoint here, and now with this guess in\nhand, that kind of kicked off",
    "start": "1731030",
    "end": "1737870"
  },
  {
    "text": "our algorithm,\nwe're going to say is this guess too\nlow or too high?",
    "start": "1737870",
    "end": "1742880"
  },
  {
    "text": "That's what the algorithm needs. So that's an if else, a\nlittle conditional here.",
    "start": "1742880",
    "end": "1750070"
  },
  {
    "text": "If the guest squared\nis less than x, then the guess is too low. ",
    "start": "1750070",
    "end": "1757580"
  },
  {
    "text": "So if this guess squared\nbrings us to somewhere here,",
    "start": "1757580",
    "end": "1763880"
  },
  {
    "text": "then we know this\nguess is too low. What do I do in this case? What does the\nalgorithm say to do?",
    "start": "1763880",
    "end": "1770299"
  },
  {
    "text": " Yes.",
    "start": "1770300",
    "end": "1775878"
  },
  {
    "text": "STUDENT: [INAUDIBLE]  ANA BELL: Other way around.",
    "start": "1775878",
    "end": "1781150"
  },
  {
    "text": "Yeah. So this is too low. So I definitely don't want\nanything lower than here. Exactly.",
    "start": "1781150",
    "end": "1786370"
  },
  {
    "text": "So we're going to\nset our low endpoint. If the guess is too low,\nlet's set our low endpoint",
    "start": "1786370",
    "end": "1792190"
  },
  {
    "text": "to be whatever\nguess we just made. Because we know this is too low. Anything lower than this\nis definitely too low.",
    "start": "1792190",
    "end": "1798940"
  },
  {
    "text": "So I don't care about these. Else, we don't need\nan el if, because we",
    "start": "1798940",
    "end": "1805360"
  },
  {
    "text": "know the else is the\nother way around. Else our guess was too high.",
    "start": "1805360",
    "end": "1810370"
  },
  {
    "text": "So if the next time around\nwe make a guess here, something like that, then\nwe know we're too high.",
    "start": "1810370",
    "end": "1816400"
  },
  {
    "text": "And then we need to set our\nhigh endpoint to be the guess.",
    "start": "1816400",
    "end": "1821640"
  },
  {
    "text": "Is everyone OK with that so far? OK. What remains?",
    "start": "1821640",
    "end": "1827720"
  },
  {
    "text": "So I've changed one\nof my boundaries, either my low or\nmy high boundary to be whatever\nguess I just made.",
    "start": "1827720",
    "end": "1834190"
  },
  {
    "text": "What is the next step? What does this algorithm\ndo or this loop do as is?",
    "start": "1834190",
    "end": "1839260"
  },
  {
    "text": " It finished doing\nwhatever is inside",
    "start": "1839260",
    "end": "1845940"
  },
  {
    "text": "and it goes back and\nuses the guess and check whether the guess\nsquared minus x",
    "start": "1845940",
    "end": "1851790"
  },
  {
    "text": "is greater or equal to epsilon. Have I changed my guess\ninside this loop yet?",
    "start": "1851790",
    "end": "1857950"
  },
  {
    "text": "No. So that's the last\nstep that remains. Make the guess be\nthe new midpoint",
    "start": "1857950",
    "end": "1866799"
  },
  {
    "text": "using either the changed\nhigh or the changed low.",
    "start": "1866800",
    "end": "1872630"
  },
  {
    "text": "So each time\nthrough my loop, I'm either changing my\nlow to be the guess",
    "start": "1872630",
    "end": "1878320"
  },
  {
    "text": "or changing my high\nto be the guess. So I'm making one of\nthose two changes. After I've made that change, I\nneed to find the new midpoint.",
    "start": "1878320",
    "end": "1887340"
  },
  {
    "text": "So if I changed my low, now\nI need to make my new guess. ",
    "start": "1887340",
    "end": "1893580"
  },
  {
    "text": "And with this new guess, then\nI'm happy for the while loop to check it again.",
    "start": "1893580",
    "end": "1899670"
  },
  {
    "text": "Take that guess squared. See how far away it is from x. And then it does the changing\nof the boundary all over again.",
    "start": "1899670",
    "end": "1911070"
  },
  {
    "text": "And that's it. There's no other\nlines of code in here.",
    "start": "1911070",
    "end": "1916167"
  },
  {
    "text": "So in some sense,\nthere's a little bit of trust with this loop that\nit does the right thing.",
    "start": "1916167",
    "end": "1921410"
  },
  {
    "text": "But if you kind of do a little\nbit of iteration in your brain or through the\nPython tutor, you'll",
    "start": "1921410",
    "end": "1928669"
  },
  {
    "text": "see that it actually\ndoes it correctly. So we can just use\nthat same number line.",
    "start": "1928670",
    "end": "1936500"
  },
  {
    "text": "And let's look at\nthe square root. Let's find the approximation\nto the square root of 36.",
    "start": "1936500",
    "end": "1942450"
  },
  {
    "text": "The epsilon, I made it one just\nbecause I don't want to do. So many steps in\nthe Python tutor.",
    "start": "1942450",
    "end": "1948110"
  },
  {
    "text": "But you can imagine\nif it's smaller, it'll just give us a\nbetter approximation.",
    "start": "1948110",
    "end": "1953500"
  },
  {
    "text": "So we're initializing\nthe x, the thing we want to find the square\nroot of, and epsilon,",
    "start": "1953500",
    "end": "1958590"
  },
  {
    "text": "the low and the high. 0 and 36 in this\nparticular case.",
    "start": "1958590",
    "end": "1964740"
  },
  {
    "text": " Stepping through, the first\nguess is half of 36 and 0.",
    "start": "1964740",
    "end": "1971440"
  },
  {
    "text": "So 18. So here's my guess is 18. And now we kick\noff our while loop",
    "start": "1971440",
    "end": "1977890"
  },
  {
    "text": "by saying what is 18 squared? It's pretty big. Definitely bigger than 36.",
    "start": "1977890",
    "end": "1984020"
  },
  {
    "text": "So I'm going to go\ninside this else because my guess is too high.",
    "start": "1984020",
    "end": "1989260"
  },
  {
    "text": "So my high becomes this. And this is still the low.",
    "start": "1989260",
    "end": "1995050"
  },
  {
    "text": "I know nothing about the\nlow end at this point. So then my guess becomes the\nhigh plus low, 0 plus 18 divided",
    "start": "1995050",
    "end": "2003669"
  },
  {
    "text": "by 2. So that's going to be 9. So you can see my\nguess has updated to 9.",
    "start": "2003670",
    "end": "2010210"
  },
  {
    "text": "And now I find\nthe guess squared. What is 9 squared? Is it still farther than plus\nor minus 36 plus minus 1?",
    "start": "2010210",
    "end": "2018460"
  },
  {
    "text": "Yes. In fact, it's still way too big. So now my high, since\nI know 9 is still",
    "start": "2018460",
    "end": "2025710"
  },
  {
    "text": "way too big for my\nguess, my high becomes 9. ",
    "start": "2025710",
    "end": "2033440"
  },
  {
    "text": "Like that. And then I make a new\nguess based on 0 and 9",
    "start": "2033440",
    "end": "2039950"
  },
  {
    "text": "and the halfway\npoint between there. So 4 and 1/2. ",
    "start": "2039950",
    "end": "2046630"
  },
  {
    "text": "So there it is updated. And using this guess,\nsquare it and see whether it's less than\n36 or greater than 36.",
    "start": "2046630",
    "end": "2055960"
  },
  {
    "text": "It's less than 36. So now this 4.5 becomes\nmy low endpoint.",
    "start": "2055960",
    "end": "2063940"
  },
  {
    "text": "Now I have some information\nabout the low endpoint like that.",
    "start": "2063940",
    "end": "2069730"
  },
  {
    "text": "So I know my final answer is\nwithin this little interval right here.",
    "start": "2069730",
    "end": "2075017"
  },
  {
    "text": "And then I'm just going to\ngo quicker, because now we're dealing with some fractions.",
    "start": "2075017",
    "end": "2080020"
  },
  {
    "text": "My low point becomes 4.5 and\nnow I get the midpoint between 4 and 1/2 and 9 and that's 6.75.",
    "start": "2080020",
    "end": "2088090"
  },
  {
    "text": "And then we keep doing the same\nprocess over and over again. Hopefully you get the idea now\nwhere we keep changing this.",
    "start": "2088090",
    "end": "2095199"
  },
  {
    "text": "While the guess\nsquared is still 36, outside of the boundary\nof 36 plus or minus 1.",
    "start": "2095199",
    "end": "2102760"
  },
  {
    "text": "So if it's less than\n35 or greater than 37, keep making guesses.",
    "start": "2102760",
    "end": "2108140"
  },
  {
    "text": "So we're going to go till\nprobably 6 0 something. There. I think that's the end. Yep.",
    "start": "2108140",
    "end": "2113359"
  },
  {
    "text": "So the guess being\n6.0469 brings us",
    "start": "2113360",
    "end": "2118400"
  },
  {
    "text": "to a guess squared\nwithin plus or minus 1. Yes, question?",
    "start": "2118400",
    "end": "2123640"
  },
  {
    "text": "STUDENT: What about if your\nguess was [INAUDIBLE],, look through the library? ANA BELL: If the guess was?",
    "start": "2123640",
    "end": "2130260"
  },
  {
    "text": "If my guess was correct, then\nwe would break immediately.",
    "start": "2130260",
    "end": "2139560"
  },
  {
    "text": " Because this is false.",
    "start": "2139560",
    "end": "2146110"
  },
  {
    "text": "Yeah, we don't even\nenter the while loop. ",
    "start": "2146110",
    "end": "2153519"
  },
  {
    "text": "OK, so let's run the code. So this is the\nbisection search code",
    "start": "2153520",
    "end": "2162230"
  },
  {
    "text": "that I just ran through\nthe Python tutor. We looked on the slides. But running with 54,321.",
    "start": "2162230",
    "end": "2169970"
  },
  {
    "text": "So just to recap,\nthe number of guesses we did with the approximation\nmethod was 23 million.",
    "start": "2169970",
    "end": "2176810"
  },
  {
    "text": "To give us an answer that\nsaid the square root of 23-- the square root of\n54,000 is about 233.",
    "start": "2176810",
    "end": "2183650"
  },
  {
    "text": "And now we run it with\nour bisection search. And I didn't even have to wait. That took less than a second\ncompared to 20 seconds",
    "start": "2183650",
    "end": "2191690"
  },
  {
    "text": "that we had to wait for. And it didn't fail. It gave us very similar answer.",
    "start": "2191690",
    "end": "2198480"
  },
  {
    "text": "It's this 233.068 is close\nto the square root of 54,000. And we did 30 guesses.",
    "start": "2198480",
    "end": "2207009"
  },
  {
    "text": " Dramatic pause.",
    "start": "2207010",
    "end": "2212370"
  },
  {
    "text": "23 million for the approximation\nmethod, 20 seconds later,",
    "start": "2212370",
    "end": "2218610"
  },
  {
    "text": "versus 30 guesses less\nthan a second later. So it's not like we went from\n23 million to 5 million guesses.",
    "start": "2218610",
    "end": "2228000"
  },
  {
    "text": "We went from the order\nof millions to just tens, which is really, really cool.",
    "start": "2228000",
    "end": "2236220"
  },
  {
    "text": "That's very impressive. And that's what\nlogarithmic growth means.",
    "start": "2236220",
    "end": "2242440"
  },
  {
    "text": "That's the power of\nlogarithmic growth and recognizing that we\ncan apply bisection search to these problems.",
    "start": "2242440",
    "end": "2248140"
  },
  {
    "text": " So with approximation\nmethod, again, we're",
    "start": "2248140",
    "end": "2255000"
  },
  {
    "text": "decreasing our search space\nby 0.0001 with each guess. But with the bisection\nsearch, we're",
    "start": "2255000",
    "end": "2261750"
  },
  {
    "text": "decreasing our search space\nby half with each guess. So if we had however\nmany things to search",
    "start": "2261750",
    "end": "2271130"
  },
  {
    "text": "for, in the book we had 400\npages to search through, with our first\nguess, we now only have 200 pages to\nsearch through.",
    "start": "2271130",
    "end": "2278550"
  },
  {
    "text": "With the second\nguess, we only have 100 pages to search through. With the next guess, we only\nhave 50 pages to search through.",
    "start": "2278550",
    "end": "2285549"
  },
  {
    "text": "And the idea of bisection search\njust that it's logarithmic comes from the fact that\nwe have to ask ourselves,",
    "start": "2285550",
    "end": "2292210"
  },
  {
    "text": "how many guesses do we\nmake until we have only, for example, one page left to\nsearch through for the money?",
    "start": "2292210",
    "end": "2299940"
  },
  {
    "text": "Or how many guesses\ndo we have to make till we are within epsilon? There's only that one--",
    "start": "2299940",
    "end": "2305790"
  },
  {
    "text": "we reach the one value that\ngives us within epsilon. And so this many\nguesses means that we've",
    "start": "2305790",
    "end": "2313020"
  },
  {
    "text": "divided our search space by 2\nto the power of k many times.",
    "start": "2313020",
    "end": "2318690"
  },
  {
    "text": "And that's when we've\nconverged on the answer. And so to converge\non the answer means you've divided your\nsearch space by 2 k times.",
    "start": "2318690",
    "end": "2327540"
  },
  {
    "text": "So n divided by 2 to\nthe power of k equals 1. You have reached\nyour one answer.",
    "start": "2327540",
    "end": "2333390"
  },
  {
    "text": "The money is at this page. The student is sitting there. Or we have come within\n0.01 of the actual answer.",
    "start": "2333390",
    "end": "2342130"
  },
  {
    "text": "And so when this is true,\nn is equal to 2 to the k, and what we want is to solve\nthis problem in terms of n.",
    "start": "2342130",
    "end": "2350460"
  },
  {
    "text": "So k is equal to log of n. And that's where the\nlogarithmic growth comes from for this\nparticular problem.",
    "start": "2350460",
    "end": "2357060"
  },
  {
    "text": "So in terms of loops,\nyes, it took us k times through the while loop\nto figure out the answer.",
    "start": "2357060",
    "end": "2363400"
  },
  {
    "text": "But in terms of the size\nof our search space, it took us log of n times\nto get to our answer.",
    "start": "2363400",
    "end": "2369720"
  },
  {
    "text": " So let's look at a\ncouple of nuances of the code we just wrote.",
    "start": "2369720",
    "end": "2375820"
  },
  {
    "text": "So if we try to run the code\nfor values between 0 and 1,",
    "start": "2375820",
    "end": "2383420"
  },
  {
    "text": "what actually happens? So if we run it\nwith, for example, what's the square root of 0.5.",
    "start": "2383420",
    "end": "2396920"
  },
  {
    "text": "It's running. It's still running. I'm pretty sure it should have\ngiven us an answer by now,",
    "start": "2396920",
    "end": "2403650"
  },
  {
    "text": "so let's just stop it. We've entered an infinite loop.",
    "start": "2403650",
    "end": "2408740"
  },
  {
    "text": "So in that case, let's see what\nactually it's printing out. So when you've entered\nan infinite loop,",
    "start": "2408740",
    "end": "2415160"
  },
  {
    "text": "it's time to put some\nprint statements. Best place to put\nprint statements is within the loop itself\nand just print out",
    "start": "2415160",
    "end": "2422110"
  },
  {
    "text": "some values for things. So here I have this\nprint statement where we print out what-- oops.",
    "start": "2422110",
    "end": "2428618"
  },
  {
    "text": "Let me get that out of the way. What the low value is. So we've got low equals--",
    "start": "2428618",
    "end": "2435302"
  },
  {
    "text": "and actually, I don't need\nto convert this to string. It should just be low. And oops.",
    "start": "2435302",
    "end": "2440560"
  },
  {
    "text": "And then the high value\nand then the guess itself.",
    "start": "2440560",
    "end": "2445830"
  },
  {
    "text": " Oops. Like that.",
    "start": "2445830",
    "end": "2451160"
  },
  {
    "text": "So if we run it,\nthat's what we get.",
    "start": "2451160",
    "end": "2457557"
  },
  {
    "text": "And it looks like\nit's just repeating, repeating over and over again.",
    "start": "2457557",
    "end": "2462786"
  },
  {
    "text": "So what happens when I'm\nlooking for a square root of a value between 0 and 1?",
    "start": "2462787",
    "end": "2468020"
  },
  {
    "text": " So this is my 0 to x.",
    "start": "2468020",
    "end": "2475800"
  },
  {
    "text": "But if x is between 0 and 1,\nthe square root of x, It's",
    "start": "2475800",
    "end": "2483130"
  },
  {
    "text": "bigger than x itself. So the square root of\n0.5 is bigger than 0.5.",
    "start": "2483130",
    "end": "2489560"
  },
  {
    "text": "It's not smaller than 0.5.",
    "start": "2489560",
    "end": "2495200"
  },
  {
    "text": "So what this program is doing is\nit's making its initial guess. ",
    "start": "2495200",
    "end": "2502339"
  },
  {
    "text": "High plus low divided by 2. So 0. ",
    "start": "2502340",
    "end": "2507860"
  },
  {
    "text": "If my initial guess\nis 0 to x, it's making an initial guess there. And then at some point, it\njust gets stuck in this loop.",
    "start": "2507860",
    "end": "2514460"
  },
  {
    "text": "Because the low becomes\n0.5 after our first guess. The high becomes 0.5 as well.",
    "start": "2514460",
    "end": "2521300"
  },
  {
    "text": "And the halfway point between\n0.5 and 0.5 is just 0.5.",
    "start": "2521300",
    "end": "2526680"
  },
  {
    "text": "So now it's just reassigning\nthe new guess to itself over and over again. ",
    "start": "2526680",
    "end": "2535650"
  },
  {
    "text": "So we need to make\na fix to that, and I'm going to have you\nguys make the fix to that.",
    "start": "2535650",
    "end": "2541890"
  },
  {
    "text": "So you don't need to\naccount for both cases. But change the endpoints\nfor this particular problem",
    "start": "2541890",
    "end": "2551490"
  },
  {
    "text": "such that it works with\nvalues of x between 0 and 1. So if we're trying to find the\nsquare root of a decimal number",
    "start": "2551490",
    "end": "2559759"
  },
  {
    "text": "between 0 and 1, what\nare the endpoints that you want to choose\nfor the code to now work?",
    "start": "2559760",
    "end": "2565040"
  },
  {
    "text": "And the code is exactly\nthe same as before. So all you need to do is\nchoose different endpoints. Yes.",
    "start": "2565040",
    "end": "2571125"
  },
  {
    "text": "STUDENT: Sorry, I just don't\nunderstand why it got stuck, like how the high\nand low [INAUDIBLE]..",
    "start": "2571125",
    "end": "2576510"
  },
  {
    "text": "ANA BELL: OK, we can run\nit with the Python tutor. And so if this is 0.5.",
    "start": "2576510",
    "end": "2585690"
  },
  {
    "text": "So basically we've made\nour guess like that. And then we're\nchanging our guesses.",
    "start": "2585690",
    "end": "2592210"
  },
  {
    "text": "And so you can see\nthat it's actually changing the low and the high.",
    "start": "2592210",
    "end": "2599150"
  },
  {
    "text": "And it originally\ndid the right thing.",
    "start": "2599150",
    "end": "2604289"
  },
  {
    "text": "The first few guesses,\nit's making the changes appropriately. But then the\nfloating point errors",
    "start": "2604290",
    "end": "2609720"
  },
  {
    "text": "come into play\nwhere at some point, this 0.4999 and this low\nthat it keeps dividing",
    "start": "2609720",
    "end": "2617700"
  },
  {
    "text": "is just going to become 0.5. And 0.5 is a power\nof 2, remember,",
    "start": "2617700",
    "end": "2624140"
  },
  {
    "text": "as floating points are. And in this particular case,\nonce it reaches the 0.5,",
    "start": "2624140",
    "end": "2631280"
  },
  {
    "text": "then floating point errors\ndon't come into play anymore, because that 0.5 can just\nbe represented exactly.",
    "start": "2631280",
    "end": "2636920"
  },
  {
    "text": "So I'm going to have to probably\nhit Next for quite a few more times. But you can kind of see where\nthat's getting that 0.5 from.",
    "start": "2636920",
    "end": "2646010"
  },
  {
    "text": "Does that help? STUDENT: Yeah. So the floating point error just\n[INAUDIBLE] get the [INAUDIBLE]..",
    "start": "2646010",
    "end": "2655040"
  },
  {
    "text": "ANA BELL: That and also the fact\nthat we didn't really account-- this code doesn't actually work\ncorrectly with these values.",
    "start": "2655040",
    "end": "2662490"
  },
  {
    "text": "So it enters an infinite loop\nbecause of the floating point error towards the end.",
    "start": "2662490",
    "end": "2668579"
  },
  {
    "text": "And that causes us to\nsee just 0.5, 0.5, 0.5. But if we were doing it\nto infinite precision,",
    "start": "2668580",
    "end": "2676010"
  },
  {
    "text": "you would start to see numbers\nthat approach 0.5 but never quite get there.",
    "start": "2676010",
    "end": "2681079"
  },
  {
    "text": "But I think our code--\nthe reason we saw 0.5 here is because it already\nran 100 times, 200 times.",
    "start": "2681080",
    "end": "2687980"
  },
  {
    "text": "And so now we're just\nseeing the tail end of it. ",
    "start": "2687980",
    "end": "2704900"
  },
  {
    "text": "So here is the code\nfor fixing that.",
    "start": "2704900",
    "end": "2711652"
  },
  {
    "text": "So what do you guys think\nthe low endpoint should be and the high endpoint should\nbe if we wanted this to work with values between 0 and 1?",
    "start": "2711653",
    "end": "2721270"
  },
  {
    "text": "So if this is our--  this is our x.",
    "start": "2721270",
    "end": "2726450"
  },
  {
    "text": "And we know x is less\nthan 1, greater than 0. The square root of x is going\nto be somewhere up here.",
    "start": "2726450",
    "end": "2734069"
  },
  {
    "text": "And we know the maximum\nplace it will be is 1. And what's a minimum place\nthat the square root of x",
    "start": "2734070",
    "end": "2741930"
  },
  {
    "text": "could be for values\nwithin this range? I heard x. So this is the minimum value\nfor the square root of x.",
    "start": "2741930",
    "end": "2751020"
  },
  {
    "text": "And this is the maximum value\nfor the square root of x. ",
    "start": "2751020",
    "end": "2757269"
  },
  {
    "text": "So all we need to do is say the\nlow is equal to x and the high",
    "start": "2757270",
    "end": "2762580"
  },
  {
    "text": "is equal to 1. And then I think this\ncode should work.",
    "start": "2762580",
    "end": "2768760"
  },
  {
    "text": "Yeah. ",
    "start": "2768760",
    "end": "2778100"
  },
  {
    "text": "And so I did just\nthat down here. So here is the code with\nactually allowing for the user",
    "start": "2778100",
    "end": "2785390"
  },
  {
    "text": "to give us any value,\nnot just between 0 and 1 or greater than 1.",
    "start": "2785390",
    "end": "2791660"
  },
  {
    "text": "So all I did here to\nmake the code work and be robust is add an if\nelse right at the beginning.",
    "start": "2791660",
    "end": "2801460"
  },
  {
    "text": "So I allow the user to give\nme whatever x they'd like. But then I do a\nlittle check here",
    "start": "2801460",
    "end": "2806850"
  },
  {
    "text": "that says if the x is\ngreater or equal to 1,",
    "start": "2806850",
    "end": "2812300"
  },
  {
    "text": "then my low and high\nend points become 0 to x, because I\nknow the square root is going to be\nwithin that boundary.",
    "start": "2812300",
    "end": "2819300"
  },
  {
    "text": "But then otherwise\nif the user gave me a value that's\nless than 1, and I",
    "start": "2819300",
    "end": "2825250"
  },
  {
    "text": "guess I should do greater than\n0 just in case the user gives me",
    "start": "2825250",
    "end": "2830470"
  },
  {
    "text": "negative numbers, then I would\nchoose the boundary for the low to be x and the high to be 1.",
    "start": "2830470",
    "end": "2836830"
  },
  {
    "text": "So just a very\nsimple if else here. And otherwise the rest of\nthe code works just the same.",
    "start": "2836830",
    "end": "2842635"
  },
  {
    "start": "2842635",
    "end": "2853750"
  },
  {
    "text": "Yeah, so this is exactly what\nwe just saw in the slides. An if and an else where I choose\nthe endpoints accordingly.",
    "start": "2853750",
    "end": "2862920"
  },
  {
    "text": "Any questions about this code? Does it make sense? Yeah. STUDENT: I make\nthe low equal to 0,",
    "start": "2862920",
    "end": "2868180"
  },
  {
    "text": "and it still gives me the same\nanswer for square [INAUDIBLE] of 0.5. Why is that?",
    "start": "2868180",
    "end": "2873240"
  },
  {
    "text": "ANA BELL: Oh, if you make\nthe low equal to 0 here? ",
    "start": "2873240",
    "end": "2879880"
  },
  {
    "text": "I think that's fine. Because then that means you're\nmaking your low lower than",
    "start": "2879880",
    "end": "2885220"
  },
  {
    "text": "it needs to be. And so your first guess is\nbasically the halfway point,",
    "start": "2885220",
    "end": "2890470"
  },
  {
    "text": "x itself. And then I think\nit just fixes it.",
    "start": "2890470",
    "end": "2895478"
  },
  {
    "text": "STUDENT: So it just goes\nthrough one extra guess? ANA BELL: It goes\nthrough one extra guess. Exactly. And that's, again, the\npower of bisection search.",
    "start": "2895478",
    "end": "2902500"
  },
  {
    "text": "For values greater than 1, if\nwe made our high boundary be 2x,",
    "start": "2902500",
    "end": "2910100"
  },
  {
    "text": "it would just make one extra\nguess to bring us to x and then below and so on and so on.",
    "start": "2910100",
    "end": "2916320"
  },
  {
    "text": "So one extra guess is\nnothing to the computer. ",
    "start": "2916320",
    "end": "2924190"
  },
  {
    "text": "So a couple observations with\nbisections for bisection search. So it takes a significantly\nless amount of time",
    "start": "2924190",
    "end": "2934470"
  },
  {
    "text": "to solve problems using\nbisection search than it does using the approximation method.",
    "start": "2934470",
    "end": "2939930"
  },
  {
    "text": "And it gives us an\napproximation to, in this case, the square root of a\nnumber that was just",
    "start": "2939930",
    "end": "2946620"
  },
  {
    "text": "as good as the\napproximation method itself. When we did the book\nexample, and that's",
    "start": "2946620",
    "end": "2952950"
  },
  {
    "text": "the second point here. It might be easier\nto illustrate. When we did the book\nexample, the very first guess",
    "start": "2952950",
    "end": "2959460"
  },
  {
    "text": "eliminated more number of\npages than later guesses.",
    "start": "2959460",
    "end": "2965369"
  },
  {
    "text": "Our first guess eliminated\n200 pages right off the bat.",
    "start": "2965370",
    "end": "2970620"
  },
  {
    "text": "Our second guess only\neliminated 100 pages. Our third only 50. And at some point,\nyou can imagine",
    "start": "2970620",
    "end": "2976349"
  },
  {
    "text": "that we're only eliminating\nsomething like four pages. And then we're eliminating\nonly two pages at a time",
    "start": "2976350",
    "end": "2983220"
  },
  {
    "text": "the more and more\nguesses you make. So it feels more\ndramatic at first,",
    "start": "2983220",
    "end": "2988260"
  },
  {
    "text": "but then it kind of dies down. But that's just\nlogarithmic growth.",
    "start": "2988260",
    "end": "2993480"
  },
  {
    "text": "It feels dramatic\nat first, but then as you get closer and closer\nto the actual approximation,",
    "start": "2993480",
    "end": "2998760"
  },
  {
    "text": "the actual answer, you're\nnot taking as big of steps or you're not making such\ndramatic cuts to the book.",
    "start": "2998760",
    "end": "3007500"
  },
  {
    "text": "And so the bisection search\nalgorithm is really awesome, but again, there\nare some limitations",
    "start": "3007500",
    "end": "3013710"
  },
  {
    "text": "to when you can use it. You have to have your\nsearch space have endpoints.",
    "start": "3013710",
    "end": "3018870"
  },
  {
    "text": "That search space needs to be\nordered alphabetically, in order by numeric or whatever.",
    "start": "3018870",
    "end": "3025500"
  },
  {
    "text": "And you have to be able\nto get the feedback. Is this guess too\nlow or too high? If you don't have\nthose, then you",
    "start": "3025500",
    "end": "3031830"
  },
  {
    "text": "can't use bisection\nsearch for this. I'm going to give you a couple\nof moments to work on this code",
    "start": "3031830",
    "end": "3037530"
  },
  {
    "text": "by yourself. So this is you writing the\nbisection search algorithm to find the cube root\nof positive cubed.",
    "start": "3037530",
    "end": "3044700"
  },
  {
    "text": "So don't worry about\nnegatives or whatever. Just assume the user\ngives you a positive cube.",
    "start": "3044700",
    "end": "3050040"
  },
  {
    "text": "I'm initializing the\nvalues for you here. So the cube is 27.",
    "start": "3050040",
    "end": "3055720"
  },
  {
    "text": "I want you to be within\nplus or minus 0.01. So your guess squared should be\nwithin plus or minus 0.01 of 27.",
    "start": "3055720",
    "end": "3063339"
  },
  {
    "text": "Start with a low of\n0 and a high of cube. And write the rest\nof the algorithm.",
    "start": "3063340",
    "end": "3069590"
  },
  {
    "text": "Don't copy and paste\nwhat we did for square. Try to write it all by\nyourself all over again.",
    "start": "3069590",
    "end": "3076890"
  },
  {
    "text": "It'll, A, give you\npractice coding, B, make sure that you\nunderstand the actual steps of the algorithm.",
    "start": "3076890",
    "end": "3082101"
  },
  {
    "text": "You don't need to\nwrite it top to bottom. You can write the inside of\nthe while loop first, whatever",
    "start": "3082102",
    "end": "3087170"
  },
  {
    "text": "feels comfortable for you. But as long as you\ntry to write it all by yourself to try to make\nthis coding second nature,",
    "start": "3087170",
    "end": "3096020"
  },
  {
    "text": "I'm all for that. So I'll give you a couple\nof moments to do that, and then we can\nwrite it together. But basically, it's going to be\nalmost the same as what we've",
    "start": "3096020",
    "end": "3103490"
  },
  {
    "text": "been seeing on the slides. ",
    "start": "3103490",
    "end": "3109590"
  },
  {
    "text": "All right, does anyone\nhave a start for me? What do you want to start with? Do you want to do a\nwhile loop or a for loop?",
    "start": "3109590",
    "end": "3115529"
  },
  {
    "text": "Let's ask that. A while loop. OK. Let's do while.",
    "start": "3115530",
    "end": "3121680"
  },
  {
    "text": "And what's the condition going\nto be for the approximation? Yep.",
    "start": "3121680",
    "end": "3127601"
  },
  {
    "text": "Oh, I needed to define a guess. Perfect. What should my guess be? ",
    "start": "3127602",
    "end": "3136470"
  },
  {
    "text": "Yes. High plus low over 2. ",
    "start": "3136470",
    "end": "3143490"
  },
  {
    "text": "So I have my initial guess. And then what is\nhappening with my loop?",
    "start": "3143490",
    "end": "3151010"
  },
  {
    "text": "I want to keep doing\nthings as long as-- ",
    "start": "3151010",
    "end": "3160710"
  },
  {
    "text": "guess to the third minus cube.",
    "start": "3160710",
    "end": "3168320"
  },
  {
    "start": "3168320",
    "end": "3179130"
  },
  {
    "text": "Yep, absolute value of guess. Yep.  OK.",
    "start": "3179130",
    "end": "3184325"
  },
  {
    "text": " Exactly. We want it to be\nlarger, larger or equal,",
    "start": "3184325",
    "end": "3190160"
  },
  {
    "text": "whatever you'd like, epsilon. So while I'm still too far away. ",
    "start": "3190160",
    "end": "3197960"
  },
  {
    "text": "STUDENT: [INAUDIBLE] write\nnot equal [INAUDIBLE]?? ANA BELL: No, because then\nwe're comparing floats.",
    "start": "3197960",
    "end": "3204110"
  },
  {
    "text": "We want to be farther.",
    "start": "3204110",
    "end": "3209440"
  },
  {
    "text": "Because if it's not\nequal to, you only stop when it becomes\nexactly 0.01 away.",
    "start": "3209440",
    "end": "3222160"
  },
  {
    "text": "So we can draw. It's easier if we draw. This is our x and\nthis is epsilon.",
    "start": "3222160",
    "end": "3232820"
  },
  {
    "text": "And our guess cubed\nif it's equal to,",
    "start": "3232820",
    "end": "3238690"
  },
  {
    "text": "that means g cubed is exactly\nhere, I guess, or exactly here.",
    "start": "3238690",
    "end": "3245680"
  },
  {
    "text": "STUDENT: Oh, so we [INAUDIBLE]. ANA BELL: Yes, you want\nto be out of bounds to still be making guesses.",
    "start": "3245680",
    "end": "3253690"
  },
  {
    "text": "Yep. What's our process\nfor making a new guess using bisection search?",
    "start": "3253690",
    "end": "3260770"
  },
  {
    "text": "So we have a guess. And now what do we need to do? We need to decide whether\nit's too low or too high.",
    "start": "3260770",
    "end": "3266650"
  },
  {
    "text": "That's what the\nbisection search says. So guess or guess cubed\nis too low or too high.",
    "start": "3266650",
    "end": "3275960"
  },
  {
    "text": " Exactly. If the guess cubed--",
    "start": "3275960",
    "end": "3282994"
  },
  {
    "text": " yep, larger than cube.",
    "start": "3282995",
    "end": "3290100"
  },
  {
    "text": "Then our guess is too high. So I can even make a\nnote for myself here. Guess too high.",
    "start": "3290100",
    "end": "3297960"
  },
  {
    "text": "So if it's too high. I know anything bigger\nthan it I don't want.",
    "start": "3297960",
    "end": "3303250"
  },
  {
    "text": "So I need to set my high\nendpoint or my low endpoint. ",
    "start": "3303250",
    "end": "3310280"
  },
  {
    "text": "Yeah, my high endpoint\nbecomes my guess. I'm resetting my high to be\nthe guess, because I know",
    "start": "3310280",
    "end": "3316100"
  },
  {
    "text": "that guess is too big anyway. Else opposite.",
    "start": "3316100",
    "end": "3321660"
  },
  {
    "text": "My low endpoint is my guess. ",
    "start": "3321660",
    "end": "3326800"
  },
  {
    "text": "Am I done? Nope. OK. What do I need to do? ",
    "start": "3326800",
    "end": "3333270"
  },
  {
    "text": "I need to redefine my guess. If I don't redefine my guess,\nmy code has an infinite loop. So my guess is\nexactly as before.",
    "start": "3333270",
    "end": "3341030"
  },
  {
    "text": "High plus low divided by 2. ",
    "start": "3341030",
    "end": "3348609"
  },
  {
    "text": "And then at the end,\nsame indentation level as the while loop. We can just print our guess.",
    "start": "3348610",
    "end": "3355000"
  },
  {
    "text": "Because I know\nI'm going to break as soon as I become within\nor equal to epsilon.",
    "start": "3355000",
    "end": "3361720"
  },
  {
    "start": "3361720",
    "end": "3367630"
  },
  {
    "text": "Yay, that's what\nwe were expecting. And it's fine that\nit's 3.000 something.",
    "start": "3367630",
    "end": "3373270"
  },
  {
    "text": "I wouldn't expect it to be\nexactly 3, even though we as humans know it is 3, because\nthe algorithm says to stop as",
    "start": "3373270",
    "end": "3380740"
  },
  {
    "text": "soon as we came within epsilon. Yes, we can find a better\nanswer if we keep going,",
    "start": "3380740",
    "end": "3387040"
  },
  {
    "text": "but that's not what we\nasked the code to do. We asked the code\nto stop as soon as we came within plus\nor minus epsilon of this.",
    "start": "3387040",
    "end": "3393775"
  },
  {
    "text": " STUDENT: Matter whether the\nhigh goes in the if or the low?",
    "start": "3393775",
    "end": "3400625"
  },
  {
    "text": "ANA BELL: It does\nnot matter if you put the high in the if or the low. I mean, as long as\nyou're consistent.",
    "start": "3400625",
    "end": "3406360"
  },
  {
    "text": "If it's greater than, you\nhave to reassign the high. If this is less than,\nyou reassign the low. ",
    "start": "3406360",
    "end": "3420859"
  },
  {
    "text": "OK, so we're going to\nlook at one more algorithm to figure out an approximation\nto the square root of a number.",
    "start": "3420860",
    "end": "3429170"
  },
  {
    "text": "Just to show you that there\nis something else, yet another thing.",
    "start": "3429170",
    "end": "3434690"
  },
  {
    "text": "And this particular\nalgorithm only works to find roots\nof a polynomial.",
    "start": "3434690",
    "end": "3440470"
  },
  {
    "text": "So this is a\nNewton-Raphson algorithm. And basically we don't\nneed to prove this, but basically they\nshowed that if you",
    "start": "3440470",
    "end": "3450370"
  },
  {
    "text": "have a polynomial of\nthis form, so ax squared plus bx plus c or\nax to the power of 4",
    "start": "3450370",
    "end": "3457779"
  },
  {
    "text": "plus bx cubed plus\ncx plus d, something like that, if you have\na polynomial like that,",
    "start": "3457780",
    "end": "3463119"
  },
  {
    "text": "then you can start with a\nguess, any guess you'd like.",
    "start": "3463120",
    "end": "3470020"
  },
  {
    "text": "And you can come up with\na better approximation",
    "start": "3470020",
    "end": "3475420"
  },
  {
    "text": "to the square root by\nsaying a new guess. So the new better\napproximation for the guess",
    "start": "3475420",
    "end": "3482020"
  },
  {
    "text": "is whatever your current\nguess is minus that polynomial evaluated at the guess.",
    "start": "3482020",
    "end": "3487750"
  },
  {
    "text": "So replace x with\nyour guess divided by the derivative of\nthat polynomial evaluated",
    "start": "3487750",
    "end": "3493720"
  },
  {
    "text": "at the guess. So get the derivative and\nreplace x with your guess. This should sound familiar,\nbecause lecture two,",
    "start": "3493720",
    "end": "3502420"
  },
  {
    "text": "we actually implemented\njust this part. Remember when we were\nlearning about expressions",
    "start": "3502420",
    "end": "3508720"
  },
  {
    "text": "and combining them together? I mentioned this\nalgorithm and I said, we're not going to be writing\nthe whole algorithm today,",
    "start": "3508720",
    "end": "3514852"
  },
  {
    "text": "but we are going\nto be implementing the part that makes a new\nbetter guess for the square root of a number.",
    "start": "3514852",
    "end": "3520220"
  },
  {
    "text": "Well, today we're actually\ngoing to take that line, put a wrapper around\nit, the wrapper",
    "start": "3520220",
    "end": "3526180"
  },
  {
    "text": "being a little loop that makes\nsuccessive guesses, better and better guesses using\nguesses that we have just",
    "start": "3526180",
    "end": "3534070"
  },
  {
    "text": "made to get us close to the\napproximation for a square root.",
    "start": "3534070",
    "end": "3540280"
  },
  {
    "text": "So let's start with this. So the idea here for finding\nthe square root of a number",
    "start": "3540280",
    "end": "3545289"
  },
  {
    "text": "is to realize that if we want to\nfind the square root of, let's say, 24, that's\nessentially us applying",
    "start": "3545290",
    "end": "3554289"
  },
  {
    "text": "this algorithm to\nthe polynomial that says that's x squared minus 24.",
    "start": "3554290",
    "end": "3560599"
  },
  {
    "text": "Because if x squared\nminus 24 equals 0, then basically x\nsquared is equal to 24.",
    "start": "3560600",
    "end": "3566750"
  },
  {
    "text": "And to solve for x means\nthat we are looking for the square root of 24. So we can try to apply\nthis Newton-Raphson method",
    "start": "3566750",
    "end": "3574730"
  },
  {
    "text": "to find an approximation to\nthe square root of a number by simply solving\nusing their method",
    "start": "3574730",
    "end": "3581540"
  },
  {
    "text": "to solve applied to this\npolynomial, x squared minus whatever value you want to\nfind the square root of.",
    "start": "3581540",
    "end": "3588620"
  },
  {
    "text": "So just to give you\na little intuition for how this works is so\nwe have an initial guess.",
    "start": "3588620",
    "end": "3593960"
  },
  {
    "text": "Let's say it's\nthis x1 right here. And you take f of x1. That brings you up here.",
    "start": "3593960",
    "end": "3603000"
  },
  {
    "text": "You find the\nderivative over here and you follow the\ntangent line to the x-axis",
    "start": "3603000",
    "end": "3608730"
  },
  {
    "text": "for the next guess. And you repeat the process. Evaluate this guess to\nget f of that guess.",
    "start": "3608730",
    "end": "3616200"
  },
  {
    "text": "This is the tangent line. Follow it down to the\nx-axis for a better guess. And you keep doing this until\nyou get as close as you'd",
    "start": "3616200",
    "end": "3623849"
  },
  {
    "text": "like to the square root here. So just for completeness\nsake since I did link it,",
    "start": "3623850",
    "end": "3630075"
  },
  {
    "text": "this is what it looks like. That's your initial guess. That's your f. There's your tangent line. That gives you the next guess.",
    "start": "3630075",
    "end": "3635220"
  },
  {
    "text": "Evaluate that. Get your tangent line. Get your next guess. Evaluate that.",
    "start": "3635220",
    "end": "3640470"
  },
  {
    "text": "Get the tangent line. There's your next guess. And it basically works\nfor any polynomial.",
    "start": "3640470",
    "end": "3645720"
  },
  {
    "text": "But we are applying\nit to just finding the square root of a number, so\nour polynomial is pretty simple.",
    "start": "3645720",
    "end": "3653278"
  },
  {
    "text": "So if we want to find\nthe square root of k, the polynomial we're interested\nin here is x squared minus k.",
    "start": "3653278",
    "end": "3659790"
  },
  {
    "text": "The derivative, I think have\nyou guys done derivatives yet in math? OK, good. The derivative of x\nsquared minus k is just 2x.",
    "start": "3659790",
    "end": "3668910"
  },
  {
    "text": "And then we can initialize our\nguess to be whatever we'd like.",
    "start": "3668910",
    "end": "3674680"
  },
  {
    "text": "And then all we need\nto do for a better guess than the one\nwe currently have is to take our current guess\nminus that guess plugged",
    "start": "3674680",
    "end": "3684600"
  },
  {
    "text": "into the polynomial of interest. So g squared minus k divided by\nthe derivative with the guess",
    "start": "3684600",
    "end": "3691050"
  },
  {
    "text": "plugged in two times g. And if we repeat this\nmany, many, many times, this will eventually get\nus to a nice approximation",
    "start": "3691050",
    "end": "3698579"
  },
  {
    "text": "for the square\nroot of the number. And this is the code. It's even simpler than\nthe bisection search code.",
    "start": "3698580",
    "end": "3707200"
  },
  {
    "text": "So let's say we want to be\nwithin plus or minus 0.01 of 24",
    "start": "3707200",
    "end": "3712950"
  },
  {
    "text": "with our guess. We can start with\nany guess we'd like,",
    "start": "3712950",
    "end": "3718030"
  },
  {
    "text": "but I guess a\nreasonable guess is to just take that\nk, the thing you want to find the square\nroot of, divide by 2.",
    "start": "3718030",
    "end": "3724380"
  },
  {
    "text": "Once again, we can keep track\nof how many guesses we do. And surprise, the\nwhile loop condition",
    "start": "3724380",
    "end": "3731490"
  },
  {
    "text": "for while we keep making\nguesses is exactly the same as what we've seen before. In approximation method and\nin bisection search method.",
    "start": "3731490",
    "end": "3739950"
  },
  {
    "text": "As long as we're outside this\nplus or minus epsilon boundary, keep making guesses, because\nI'm not happy with my guess.",
    "start": "3739950",
    "end": "3749050"
  },
  {
    "text": "So here while the absolute\nvalue of guess squared minus k, k being the thing we want\nto find the square root of,",
    "start": "3749050",
    "end": "3756280"
  },
  {
    "text": "is bigger than epsilon. So if we're farther\naway in both ends,",
    "start": "3756280",
    "end": "3761650"
  },
  {
    "text": "we keep track of how\nmany guesses we've done and make our new guess. So this is what's different\nthan bisection or approximation.",
    "start": "3761650",
    "end": "3767620"
  },
  {
    "text": "The guess is done by the\nNewton-Raphson method. And this line right\nhere is what we",
    "start": "3767620",
    "end": "3773050"
  },
  {
    "text": "wrote in lecture two or three. Our new guess is our old guess\nminus the guess evaluated at x.",
    "start": "3773050",
    "end": "3783800"
  },
  {
    "text": "So guess squared minus k divided\nby the derivative evaluated at guess 2 times guess.",
    "start": "3783800",
    "end": "3791660"
  },
  {
    "text": "And that's it. The loop takes care of the rest. And it'll keep\nmaking new guesses until it comes within\nplus or minus epsilon.",
    "start": "3791660",
    "end": "3798420"
  },
  {
    "text": "So that's our function. That's f of guess and\nthat's f prime of guess.",
    "start": "3798420",
    "end": "3807150"
  },
  {
    "text": "So let's run it. ",
    "start": "3807150",
    "end": "3813560"
  },
  {
    "text": "Here it is. ",
    "start": "3813560",
    "end": "3820120"
  },
  {
    "text": "So we made four guesses to\nfind the square root of 24",
    "start": "3820120",
    "end": "3825130"
  },
  {
    "text": "is about 4.9, which\njust pretty good. We came within 0.01. And if we try 5, 4, 3,\n2, 1, our favorite number",
    "start": "3825130",
    "end": "3833910"
  },
  {
    "text": "so far in this class,\nwe only did 10 guesses. And it gave us just as\ngood an approximation",
    "start": "3833910",
    "end": "3841020"
  },
  {
    "text": "as bisection search and that\nridiculously long approximation method. ",
    "start": "3841020",
    "end": "3851020"
  },
  {
    "text": "Yes? STUDENT: Why is the\nguess [INAUDIBLE]?? ANA BELL: Why is\nthe guess k over 2?",
    "start": "3851020",
    "end": "3856040"
  },
  {
    "text": "It can be anything you want. We just started with\nsomething reasonable that's a function of k.",
    "start": "3856040",
    "end": "3863300"
  },
  {
    "text": "Yeah, it can be 100. It can be whatever\nyou'd want to do.",
    "start": "3863300",
    "end": "3869000"
  },
  {
    "text": "Because the algorithm\nwill work no matter what. ",
    "start": "3869000",
    "end": "3875700"
  },
  {
    "text": "So that's awesome. There's less guesses. But this is a pretty\nlimiting algorithm.",
    "start": "3875700",
    "end": "3882200"
  },
  {
    "text": "You can only use it\nto find square roots of a particular value. We can't use it,\napply this algorithm",
    "start": "3882200",
    "end": "3889580"
  },
  {
    "text": "to finding the person in\nthe middle of the room or something like that.",
    "start": "3889580",
    "end": "3894890"
  },
  {
    "text": "It's really specific to\nthis particular problem. ",
    "start": "3894890",
    "end": "3900660"
  },
  {
    "text": "So a little wrap\nup before we go on to just introducing\nthe next lecture",
    "start": "3900660",
    "end": "3906740"
  },
  {
    "text": "is we talked about iteration. That was kind of the\nbig thing that we",
    "start": "3906740",
    "end": "3912650"
  },
  {
    "text": "added after conditionals. So finding a way to repeat\ncertain lines of code to",
    "start": "3912650",
    "end": "3919940"
  },
  {
    "text": "do something useful for us. And we looked at guess\nand check methods. Now, I guess I'm\nputting all the methods",
    "start": "3919940",
    "end": "3926585"
  },
  {
    "text": "we saw under guess and\ncheck, because they're kind of all guess and check. We're guessing a value\nand we're checking",
    "start": "3926585",
    "end": "3933349"
  },
  {
    "text": "whether that value is exact\nor within some epsilon of what we want to be.",
    "start": "3933350",
    "end": "3939230"
  },
  {
    "text": "And all these guess\nand check methods have the same kind of three\nthings associated with them.",
    "start": "3939230",
    "end": "3945480"
  },
  {
    "text": "There's some sort of loop. There's something that you\nneed to do over and over again. We need some way to\ngenerate the guesses.",
    "start": "3945480",
    "end": "3952835"
  },
  {
    "text": "And that's where things\nare different between the different algorithms. And then we need\nsome way to check",
    "start": "3952835",
    "end": "3958190"
  },
  {
    "text": "that the guess is right\nor within some epsilon or something like that. And then a way for us to\ncontinue making guesses.",
    "start": "3958190",
    "end": "3965470"
  },
  {
    "text": "So we saw exhaustive\nenumeration, the original guess and check method\nwhere we basically",
    "start": "3965470",
    "end": "3970859"
  },
  {
    "text": "had integers or some set\nvalues that we wanted to check. It was exhaustive, so we\nknew exactly how many values",
    "start": "3970860",
    "end": "3977250"
  },
  {
    "text": "we would have to iterate over. Approximation algorithms allowed\nus to have smaller increments",
    "start": "3977250",
    "end": "3984210"
  },
  {
    "text": "and we were able to search\nfor approximations to square",
    "start": "3984210",
    "end": "3989369"
  },
  {
    "text": "roots or cube roots or whatever\nproblem we were trying to solve. Bisection search we\nsaw was an improvement",
    "start": "3989370",
    "end": "3996270"
  },
  {
    "text": "over approximation\nmethods, but only for problems that had\nan ordering property and for problems that\nyou could figure out",
    "start": "3996270",
    "end": "4003770"
  },
  {
    "text": "whether your guesses\nwere too high or too low. If you can't have\nthose, then you can't apply bisection search.",
    "start": "4003770",
    "end": "4009020"
  },
  {
    "text": "So you're stuck with an\napproximation algorithm or something else. And then this Newton-Raphson was\nkind of the last thing we saw.",
    "start": "4009020",
    "end": "4015960"
  },
  {
    "text": "It's very specific algorithm for\nfinding square roots of values, but still valuable\nin kind of showcasing",
    "start": "4015960",
    "end": "4022859"
  },
  {
    "text": "this looping construct,\nchecking for something, and then making a new guess.",
    "start": "4022860",
    "end": "4028980"
  },
  {
    "text": "This is basically a summary\nof what I just said also. So we don't need to go over it.",
    "start": "4028980",
    "end": "4035590"
  },
  {
    "text": "But are there any questions\nabout these three algorithms? Do they make sense? Hopefully the coding practice\nkind of helped a little bit",
    "start": "4035590",
    "end": "4041890"
  },
  {
    "text": "during the lectures. Any questions? No?",
    "start": "4041890",
    "end": "4047150"
  },
  {
    "text": "OK. So in the last\nfive or so minutes, I want to introduce the\nmotivation for the next topic",
    "start": "4047150",
    "end": "4055490"
  },
  {
    "text": "we're going to talk about. So far we've basically learned\nhow to write a bunch of code.",
    "start": "4055490",
    "end": "4063020"
  },
  {
    "text": "We learned expressions,\nwe learned variables, we learned conditionals, we\nlearned loops, conditionals",
    "start": "4063020",
    "end": "4070940"
  },
  {
    "text": "and loops as a way to add\ncontrol flow to our program. And we had this\nnice little toolbox of things to use to\nwrite algorithms.",
    "start": "4070940",
    "end": "4078380"
  },
  {
    "text": "So it is true we\nhave all that you need to know to write\ninteresting algorithms.",
    "start": "4078380",
    "end": "4085100"
  },
  {
    "text": "We wrote these\ninteresting algorithms. But we actually\nhaven't taught you about some important\nconcepts in programming.",
    "start": "4085100",
    "end": "4093830"
  },
  {
    "text": "And these concepts\nactually exist in all of the modern\nprogramming languages. And these ideas are\ndecomposition and abstraction.",
    "start": "4093830",
    "end": "4102470"
  },
  {
    "text": "So I'll just motivate\nthese ideas today. We're not going to\nlook at any code. But I'll show you\nsome simpler version",
    "start": "4102470",
    "end": "4109889"
  },
  {
    "text": "of decomposition abstraction\nthat you've already been kind of doing. And then next lecture, we'll\nsee how we can actually",
    "start": "4109890",
    "end": "4116189"
  },
  {
    "text": "implement these ideas in code. So the idea of decomposition is\nthat you take a large program",
    "start": "4116189",
    "end": "4126200"
  },
  {
    "text": "and you try to divide\nit into smaller parts. Each one of these parts\nwill be self-contained.",
    "start": "4126200",
    "end": "4134060"
  },
  {
    "text": "So they won't really\ninterfere with each other, as in the code from\none part is not",
    "start": "4134060",
    "end": "4139670"
  },
  {
    "text": "going to influence the\ncode in another part. But they can talk to each other. They can send values to\neach other back and forth.",
    "start": "4139670",
    "end": "4147439"
  },
  {
    "text": "So if you take one large\nspaghetti code program and you try to divide it into\nthese nice self-contained parts,",
    "start": "4147439",
    "end": "4154040"
  },
  {
    "text": "you can have each\none of these parts solve a different part,\na different portion of your large program.",
    "start": "4154040",
    "end": "4159410"
  },
  {
    "text": "And in the end, they can\nkind of come together to solve the larger program.",
    "start": "4159410",
    "end": "4164568"
  },
  {
    "text": "That's the idea\nof decomposition. And the idea of\nabstraction is once you",
    "start": "4164569",
    "end": "4169729"
  },
  {
    "text": "write these self-contained\nparts one time and you've done the work,\nyou've done the thought process,",
    "start": "4169729",
    "end": "4176609"
  },
  {
    "text": "you've thought about how to\nwrite them in an efficient way, nobody else needs to know\nexactly how you implemented",
    "start": "4176609",
    "end": "4182460"
  },
  {
    "text": "them. You want to abstract\naway all the details that went into figuring out how to\nsolve that problem into just",
    "start": "4182460",
    "end": "4190109"
  },
  {
    "text": "some text or some interface\nthat allows you to say, hey,",
    "start": "4190109",
    "end": "4195820"
  },
  {
    "text": "I solved this problem. All you need to do is give\nme this input and this input and this input and my code\nwill solve your problem",
    "start": "4195820",
    "end": "4202380"
  },
  {
    "text": "and give you this output back. Kind of like if you're\nworking in a group project, every one of you goes\nand does your own part.",
    "start": "4202380",
    "end": "4209680"
  },
  {
    "text": "I don't care if you use\nthe internet or the library to solve your part. All I care is that we\nall come back together",
    "start": "4209680",
    "end": "4216539"
  },
  {
    "text": "and we put our results together. And so that's the\nidea of abstraction.",
    "start": "4216540",
    "end": "4221829"
  },
  {
    "text": "There's some unnecessary details\nthat might be in some code. I don't care about\nthose details,",
    "start": "4221830",
    "end": "4227100"
  },
  {
    "text": "how you solved your problem. I just care that you\nsolved the problem. So tell me how I can\ninteract with you.",
    "start": "4227100",
    "end": "4234050"
  },
  {
    "text": "So this is sort\nof very low level,",
    "start": "4234050",
    "end": "4241210"
  },
  {
    "text": "I guess, in some ways\nthat we've already been employing the ideas of\ndecomposition and abstraction.",
    "start": "4241210",
    "end": "4247480"
  },
  {
    "text": "So decomposition is\nthe idea that you can write smaller pieces of code\nthat are kind of self-contained.",
    "start": "4247480",
    "end": "4255970"
  },
  {
    "text": "So if I gave you this, I kind\nof talked about spaghetti code, this is kind of like a simpler\nversion of spaghetti code.",
    "start": "4255970",
    "end": "4262780"
  },
  {
    "text": "If I gave you this line of\ncode, it's a little bit messy. I've got some value\nhere that I know",
    "start": "4262780",
    "end": "4269890"
  },
  {
    "text": "is going to be important,\nespecially if I define it to some large number\nof decimal places.",
    "start": "4269890",
    "end": "4276670"
  },
  {
    "text": "I've got these two\nvalues here that I'm copying over, basically. This is not great coding style.",
    "start": "4276670",
    "end": "4283900"
  },
  {
    "text": "It's not great coding practice. But I can kind of take\nthese values and save them",
    "start": "4283900",
    "end": "4290240"
  },
  {
    "text": "and/or decompose them into\nthings that are reusable. So I've got pi here, which\nis interesting to me.",
    "start": "4290240",
    "end": "4299060"
  },
  {
    "text": "I can save it in a variable. I've got r here, 2.2. I'm saving it as\na variable named",
    "start": "4299060",
    "end": "4305270"
  },
  {
    "text": "r that I know I'm going\nto use in many places. So instead of copying and\npasting 2.2 here and here,",
    "start": "4305270",
    "end": "4311510"
  },
  {
    "text": "I might make a mistake if I type\nit out, I just use the variable. And so I've decomposed this\nlittle bit of spaghetti code",
    "start": "4311510",
    "end": "4318440"
  },
  {
    "text": "into these nice modular pieces. I've got pi as a\nmodule, r as a module, and then I'm just\nputting them together",
    "start": "4318440",
    "end": "4324920"
  },
  {
    "text": "to achieve this common goal,\nwhich is to find the area. And we're going to\nsee this on a larger",
    "start": "4324920",
    "end": "4331500"
  },
  {
    "text": "scale using these things\ncalled functions next lecture. Now, the idea of\nabstraction, again, we've",
    "start": "4331500",
    "end": "4338360"
  },
  {
    "text": "already been kind of doing this. Hopefully you guys\nhave been doing this through comments in your code.",
    "start": "4338360",
    "end": "4345150"
  },
  {
    "text": "So if you spend some\ntime on your problem set when it's first released and\nyou write a whole chunk of code",
    "start": "4345150",
    "end": "4351590"
  },
  {
    "text": "and you do a really\ngood job at it and you did it in a really\ncool way, come a week later,",
    "start": "4351590",
    "end": "4358010"
  },
  {
    "text": "you forgot some details\nthat you've done right and you didn't\ncomment your code. That could lead you\ninto big trouble,",
    "start": "4358010",
    "end": "4367880"
  },
  {
    "text": "because now you have to figure\nout what the code is doing. If you had just written\na little bit of comment",
    "start": "4367880",
    "end": "4374360"
  },
  {
    "text": "at the beginning of the code\nfor an interesting way or, hey, I used the bisection\nsearch algorithm here or so",
    "start": "4374360",
    "end": "4381559"
  },
  {
    "text": "and so, that would actually\nsuppress a lot of the details from your code. But you would still be able to\nremember what the code is doing.",
    "start": "4381560",
    "end": "4389390"
  },
  {
    "text": "And so the idea of\nsuppressing details is done through comments. And we're going to see\nin the next lecture",
    "start": "4389390",
    "end": "4394850"
  },
  {
    "text": "how we can suppress details for\nlarger chunks of code as well. So that's the idea\nof abstraction here.",
    "start": "4394850",
    "end": "4403030"
  },
  {
    "text": "So the big idea that we're\ngoing to look through in the next lecture is to stop\nwriting large chunks of code",
    "start": "4403030",
    "end": "4409950"
  },
  {
    "text": "where we copy and paste things\nthat do the same thing over and over again,\nbecause that could lead",
    "start": "4409950",
    "end": "4415440"
  },
  {
    "text": "to errors being introduced. You change it in one place. You forget to change\nit in another place.",
    "start": "4415440",
    "end": "4420870"
  },
  {
    "text": "We're going to see\nhow we can write these little modules\ncalled functions that you write only once,\nyou debug only once,",
    "start": "4420870",
    "end": "4428250"
  },
  {
    "text": "and then you can use\nthem over and over and over again in your\ncode with different inputs",
    "start": "4428250",
    "end": "4433380"
  },
  {
    "text": "to give you different outputs. So the idea here is\nwe want to create",
    "start": "4433380",
    "end": "4438960"
  },
  {
    "text": "code that's easy to modify,\neasy to maintain, and easy",
    "start": "4438960",
    "end": "4445650"
  },
  {
    "text": "to understand. So if you come back to it a week\nfrom now or a year from now, you'll still be able to know\nwhat that code is doing.",
    "start": "4445650",
    "end": "4452280"
  },
  {
    "text": "So that's the motivation\nfor next lecture. We'll start with a\nreal life example, and then we'll dive\nright into functions.",
    "start": "4452280",
    "end": "4460550"
  },
  {
    "start": "4460550",
    "end": "4466000"
  }
]