[
  {
    "text": "We are given this circuit which consists of\nnine combinational modules connected as shown.",
    "start": "959",
    "end": "6660"
  },
  {
    "text": "The number in each block corresponds to the\npropagation delay (in microseconds) of that",
    "start": "6660",
    "end": "12059"
  },
  {
    "text": "block.",
    "start": "12059",
    "end": "13349"
  },
  {
    "text": "The first question we want to ask ourselves\nis what are the latency and throughput of",
    "start": "13349",
    "end": "17949"
  },
  {
    "text": "this combinational circuit?",
    "start": "17949",
    "end": "20689"
  },
  {
    "text": "The longest path through this circuit passes\nthrough two 3 microsecond modules, one 2 microsecond",
    "start": "20689",
    "end": "26949"
  },
  {
    "text": "module, and two 1 microsecond modules.",
    "start": "26950",
    "end": "30609"
  },
  {
    "text": "Therefore the latency = 2(3) + 1(2) + 2(1)\n= 10 microseconds.",
    "start": "30609",
    "end": "40270"
  },
  {
    "text": "The throughput is 1/Latency = 1/(10 microseconds).",
    "start": "40270",
    "end": "48019"
  },
  {
    "text": "Now we want to pipeline this circuit for maximum\nthroughput.",
    "start": "48019",
    "end": "52329"
  },
  {
    "text": "Recall that the clock period must allow enough\ntime for the propagation delay of the pipeline",
    "start": "52329",
    "end": "58210"
  },
  {
    "text": "register, plus the propagation delay of any\ncombinational logic between the pipeline registers,",
    "start": "58210",
    "end": "65220"
  },
  {
    "text": "plus the setup time of the pipeline register.",
    "start": "65220",
    "end": "68649"
  },
  {
    "text": "Since our pipeline registers are ideal, the\npropagation delay and setup time of the pipeline",
    "start": "68649",
    "end": "74090"
  },
  {
    "text": "registers is 0, so our clock period will be\nequal to the longest combinational logic delay",
    "start": "74090",
    "end": "81310"
  },
  {
    "text": "between any pair of pipeline registers.",
    "start": "81310",
    "end": "84540"
  },
  {
    "text": "To minimize the clock period, we want to add\npipeline contours so that each pipeline stage",
    "start": "84540",
    "end": "90259"
  },
  {
    "text": "can be clocked at the rate of our slowest\ncomponent which is 3 microseconds.",
    "start": "90259",
    "end": "96149"
  },
  {
    "text": "This means that within a single pipeline stage\nall combinational paths must have at most",
    "start": "96149",
    "end": "102340"
  },
  {
    "text": "a propagation delay of 3 microseconds.",
    "start": "102340",
    "end": "105140"
  },
  {
    "text": "Recall, that when pipelining a circuit, all\noutputs must have a pipeline register on them,",
    "start": "105140",
    "end": "111220"
  },
  {
    "text": "so our first contour is drawn so as to cross\nthe single output C(X).",
    "start": "111220",
    "end": "117100"
  },
  {
    "text": "Each pipeline stage should have at most a\nlatency of 3 microseconds.",
    "start": "117100",
    "end": "121700"
  },
  {
    "text": "This means that the bottom right 1 microsecond\nmodule and the 3 microsecond module above",
    "start": "121700",
    "end": "127100"
  },
  {
    "text": "it must be in separate pipeline stages so\nour next contour crosses between them.",
    "start": "127100",
    "end": "133030"
  },
  {
    "text": "We then complete that contour by joining each\nend of the contour to one of the two ends",
    "start": "133030",
    "end": "138270"
  },
  {
    "text": "of our original output contour.",
    "start": "138270",
    "end": "140940"
  },
  {
    "text": "Every time a wire is crossed, that indicates\nthat we are adding a pipeline register.",
    "start": "140940",
    "end": "145910"
  },
  {
    "text": "There is more than one way of doing this because\nfor example, the bottom three 1 units could",
    "start": "145910",
    "end": "152590"
  },
  {
    "text": "all be in the same pipeline stage, or just\nthe two rightmost bottom 1 unit components,",
    "start": "152590",
    "end": "158610"
  },
  {
    "text": "or just the single bottom right 1 unit component.",
    "start": "158610",
    "end": "162060"
  },
  {
    "text": "Let's try to pipeline this circuit in two\ndifferent ways to make sure that we end up",
    "start": "162060",
    "end": "166020"
  },
  {
    "text": "with the same latency and throughput results.",
    "start": "166020",
    "end": "169170"
  },
  {
    "text": "For our first implementation, let's put the\nbottom right 1 unit in its own pipeline stage.",
    "start": "169170",
    "end": "176400"
  },
  {
    "text": "Next we have a pipeline stage that includes\nour second row 3 unit.",
    "start": "176400",
    "end": "182040"
  },
  {
    "text": "We can include the middle bottom 1 unit in\nthis same pipeline stage because those two",
    "start": "182040",
    "end": "186840"
  },
  {
    "text": "units are independent of each other and can\nbe executed in parallel.",
    "start": "186840",
    "end": "192200"
  },
  {
    "text": "Now we see that we have a bunch of 2 and 1\nunit components.",
    "start": "192200",
    "end": "196340"
  },
  {
    "text": "We want to isolate these from the top left\n3 unit component, so we draw our final contour",
    "start": "196340",
    "end": "202120"
  },
  {
    "text": "to isolate that 3 unit.",
    "start": "202120",
    "end": "204810"
  },
  {
    "text": "Note that at this point all the remaining\n2 and 1 unit modules add up to at most 3 microseconds",
    "start": "204810",
    "end": "210840"
  },
  {
    "text": "along any path in the second pipeline stage.",
    "start": "210840",
    "end": "214290"
  },
  {
    "text": "This means that we are done and we do not\nneed to add any further pipeline stages.",
    "start": "214290",
    "end": "219900"
  },
  {
    "text": "So our pipelined circuit ended up with 4 pipeline\nstages and our clock period = 3 microseconds.",
    "start": "219900",
    "end": "229079"
  },
  {
    "text": "This means that our pipelined latency is 4\n* T = 4 * 3 = 12 microseconds.",
    "start": "229080",
    "end": "239280"
  },
  {
    "text": "Our throughput for the pipelined circuit is\n1/T = 1/(3 microseconds).",
    "start": "239280",
    "end": "248569"
  },
  {
    "text": "Note that the latency of the pipelined circuit\nis actually slower than the combinational",
    "start": "248570",
    "end": "253290"
  },
  {
    "text": "latency.",
    "start": "253290",
    "end": "254480"
  },
  {
    "text": "This occurs because our pipelined implementation\nhas some unused cycles in the last pipeline",
    "start": "254480",
    "end": "260090"
  },
  {
    "text": "stage.",
    "start": "260090",
    "end": "261090"
  },
  {
    "text": "However, our throughput is significantly better\nas a result of being able to now have our",
    "start": "261090",
    "end": "266009"
  },
  {
    "text": "clock period equal to the length of the slowest\ncomponent.",
    "start": "266009",
    "end": "271669"
  },
  {
    "text": "Recall that we said that this was not the\nonly way that we could draw our contours.",
    "start": "271669",
    "end": "276610"
  },
  {
    "text": "Let's try an alternate solution.",
    "start": "276610",
    "end": "278340"
  },
  {
    "text": "For our second solution, let's try to merge\nthe bottom three 1 units into one pipeline",
    "start": "278340",
    "end": "284590"
  },
  {
    "text": "stage.",
    "start": "284590",
    "end": "286240"
  },
  {
    "text": "Next we need to isolate our middle 3.",
    "start": "286240",
    "end": "289289"
  },
  {
    "text": "The remaining 2 and 1 unit components can\nall be merged into another pipeline stage.",
    "start": "289289",
    "end": "294479"
  },
  {
    "text": "Finally, the top left 3 ends up in its own\npipeline stage.",
    "start": "294479",
    "end": "300090"
  },
  {
    "text": "As before we end up with 4 pipeline stages\nthat can be clocked with a period of T = 3",
    "start": "300090",
    "end": "306189"
  },
  {
    "text": "microseconds.",
    "start": "306189",
    "end": "307439"
  },
  {
    "text": "This demonstrates that both component divisions\nend up with a latency of 12 microseconds and",
    "start": "307439",
    "end": "313580"
  },
  {
    "text": "a throughput of 1/(3 microseconds).",
    "start": "313580",
    "end": "319560"
  },
  {
    "text": "Now suppose you found pipelined replacements\nfor the components marked 3 and 2 that had",
    "start": "319560",
    "end": "325310"
  },
  {
    "text": "3 and 2 stages, respectively, and could be\nclocked at a 1 microsecond period.",
    "start": "325310",
    "end": "331520"
  },
  {
    "text": "Using these replacements and pipelining for\nmaximum throughput, what is the best achievable",
    "start": "331520",
    "end": "336710"
  },
  {
    "text": "performance?",
    "start": "336710",
    "end": "338880"
  },
  {
    "text": "With these new components that can each be\nclocked with a period of 1 microsecond, our",
    "start": "338880",
    "end": "343551"
  },
  {
    "text": "clock period T goes down to 1 microsecond.",
    "start": "343551",
    "end": "347389"
  },
  {
    "text": "The number of stages in our pipeline, however,\nnow rises to 10 stages because these new components",
    "start": "347389",
    "end": "353509"
  },
  {
    "text": "each have multiple pipeline stages in them.",
    "start": "353509",
    "end": "357070"
  },
  {
    "text": "So our new latency is L = 10 * T = 10(1) = 10\nmicroseconds.",
    "start": "357070",
    "end": "365710"
  },
  {
    "text": "The throughput is 1/T = 1/(1 microsecond).",
    "start": "365710",
    "end": "371779"
  }
]