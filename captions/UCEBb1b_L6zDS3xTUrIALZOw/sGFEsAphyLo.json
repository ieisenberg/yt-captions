[
  {
    "start": "0",
    "end": "94000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help MIT\nOpenCourseWare continue to",
    "start": "0",
    "end": "6950"
  },
  {
    "text": "offer high quality educational\nresources for free. To make a donation or view\nadditional materials from",
    "start": "6950",
    "end": "13500"
  },
  {
    "text": "hundreds of MIT courses, visit\nMIT OpenCourseWare at ocw.mit.edu.",
    "start": "13500",
    "end": "19030"
  },
  {
    "start": "19030",
    "end": "29180"
  },
  {
    "text": "PROFESSOR: As we come\nclose to testing, we have shrinkage here. People probably left home. Hopefully, everybody who left\nhome finished their report.",
    "start": "29180",
    "end": "37700"
  },
  {
    "text": "So you guys have all\nlooked into how to do the final project. And have all the ideas how\nto go and optimize.",
    "start": "37700",
    "end": "43900"
  },
  {
    "text": " How many people have downloaded,\ncompiled, and ran,",
    "start": "43900",
    "end": "50235"
  },
  {
    "text": "and you know what's going on? OK. Good. Good. Good. ",
    "start": "50235",
    "end": "55930"
  },
  {
    "text": "Exactly.  It's happening right now.",
    "start": "55930",
    "end": "61950"
  },
  {
    "text": "OK. Good. So I will repeat this what\nI said last time in here.",
    "start": "61950",
    "end": "68161"
  },
  {
    "text": "We're going to have a design\nreview with your masters. So just look for us to send\nyou the information.",
    "start": "68161",
    "end": "74840"
  },
  {
    "text": "That means when you\ncome back from Thanksgiving, schedule it early. So they can help if you have any\nchanges in design process.",
    "start": "74840",
    "end": "83789"
  },
  {
    "text": "And then we have a competition\non December 9 in class here, trying to figure\nout who has the",
    "start": "83790",
    "end": "88840"
  },
  {
    "text": "fastest ray tracer created. And in fact, this year there\nis Akamai prize for the",
    "start": "88840",
    "end": "97660"
  },
  {
    "start": "94000",
    "end": "94000"
  },
  {
    "text": "winning team, including they\nhave a kind of celebration and demonstration in their\nheadquarters.",
    "start": "97660",
    "end": "102790"
  },
  {
    "text": "You get to go get a tour with\ntheir knock and stuff like. Plus, every winning member is\ngoing to get a iPod Nano.",
    "start": "102790",
    "end": "112439"
  },
  {
    "text": "So there's a lot more motivation\nnow to get the fastest running ray tracer OK.",
    "start": "112440",
    "end": "120280"
  },
  {
    "text": "So with that, let's switch\ngears a little bit. So today, I'm going to talk\nabout distributed systems.",
    "start": "120280",
    "end": "130039"
  },
  {
    "text": "Until now what we looked at was,\nOK, given a box how to get something running as fast\nas possible inside that box.",
    "start": "130039",
    "end": "138555"
  },
  {
    "text": "And today we're going to look\nat going outside the box. Basically, we want to scale up\nto clusters of machines.",
    "start": "138555",
    "end": "147750"
  },
  {
    "text": "That means the room can\nhave 10, 15 machines. In fact, for your class,\nyou guys are using--",
    "start": "147750",
    "end": "155299"
  },
  {
    "text": "how many machines do we have? 16 machines. So you are doing\nindependently. But you can use as one gigantic\nmachine if you can",
    "start": "155300",
    "end": "162280"
  },
  {
    "text": "and run something. And data center scale. This is kind of people like\nGoogle, and Amazon, has these",
    "start": "162280",
    "end": "167370"
  },
  {
    "text": "kinds of things. And finally, Planet Scale. If you want to run something\neven bigger, larger.",
    "start": "167370",
    "end": "173790"
  },
  {
    "text": "What you have to deal with, and\nwhat kind of issues you have to deal with. It's time to reboot\nmy machine. And I have to be pressing this\nbutton probably four or five",
    "start": "173790",
    "end": "181890"
  },
  {
    "text": "times during the day. So Cluster Scale.",
    "start": "181890",
    "end": "187560"
  },
  {
    "text": "So you want to run a program\non multiple machines. And OK, Let me put it there.",
    "start": "187560",
    "end": "192910"
  },
  {
    "text": "Why the heck do you\nwant to do that? What's the advantages of-- instead of running on one nice\nmachine, running on a cluster",
    "start": "192910",
    "end": "200719"
  },
  {
    "text": "of machines? What do you get? ",
    "start": "200720",
    "end": "207982"
  },
  {
    "text": "AUDIENCE: It's cheaper. PROFESSOR: It's cheaper. That's a good one. It's cheaper to get a bunch of\nsmall machines than to buy a",
    "start": "207982",
    "end": "213910"
  },
  {
    "text": "humongo mainframe\ntype machine. Yes, that's a very\ngood answer. What else?",
    "start": "213910",
    "end": "219150"
  },
  {
    "text": " AUDIENCE: It's very slow. It's slower.",
    "start": "219150",
    "end": "224870"
  },
  {
    "text": "PROFESSOR: So you would run\nsomething because it's slower? AUDIENCE: But it\nis a trade-off.",
    "start": "224870",
    "end": "230170"
  },
  {
    "text": "PROFESSOR: Yes, so there's some\ntrade off between speed. But it might not be that much.",
    "start": "230170",
    "end": "237569"
  },
  {
    "text": "Even when you get a gigantic\nmachine, there are bottlenecks in it. In a cluster kind of thing, you\ncan avoid the bottlenecks.",
    "start": "237570",
    "end": "243270"
  },
  {
    "text": "But hopefully, you're trying\nto do it to get some performance in scaling\nto large number of",
    "start": "243270",
    "end": "249540"
  },
  {
    "text": "users and what not. So basically, what you\nwant to get is--",
    "start": "249540",
    "end": "256470"
  },
  {
    "text": "so get more parallelism. Because now we have more\nmachines, more calls.",
    "start": "256470",
    "end": "261528"
  },
  {
    "start": "261000",
    "end": "261000"
  },
  {
    "text": "And hopefully get higher\nthroughput. Definitely, because\nyou are doing it. Hopefully, it's a little bit of\nlower latency too, because",
    "start": "261529",
    "end": "267590"
  },
  {
    "text": "if you have one gigantic system,\nif everything has to go through bottlenecks, it might\nbe slower than basically",
    "start": "267590",
    "end": "277150"
  },
  {
    "text": "having different system. So assume, just an example, if\nyou are something like Verizon",
    "start": "277150",
    "end": "286510"
  },
  {
    "text": "or Netflix trying to\nserve your videos. It makes much more sense to have\na bunch of clusters of",
    "start": "286510",
    "end": "292230"
  },
  {
    "text": "machines each doing a lot of\nindependent work than trying to send all the videos\nto one machine.",
    "start": "292230",
    "end": "298360"
  },
  {
    "text": "Another interesting fact\nis robustness. So until now you guys didn't\ncare about robustness, because",
    "start": "298360",
    "end": "304720"
  },
  {
    "text": "something went wrong, the\nentire thing collapsed. There's no half baked machine. The machine crashed, your\nprogram crashed.",
    "start": "304720",
    "end": "311440"
  },
  {
    "text": "Everything died. So you just have this\nfatalistic attitude. OK. It crashed.",
    "start": "311440",
    "end": "316880"
  },
  {
    "text": "Everything is dead. So why bother? But in these clusters, if you\nhave a lot of machines, if one",
    "start": "316880",
    "end": "323847"
  },
  {
    "text": "machine dies, there's many\nothers to pick up. So you can have a system that\nprobably has availability much",
    "start": "323847",
    "end": "329650"
  },
  {
    "text": "higher than what you can get\non a single machine. And finally, cost savings. Because it's cheaper\nto do this, have a",
    "start": "329650",
    "end": "336400"
  },
  {
    "text": "bunch of small machines. And businesses like Google\nhas really taken advantage of that.",
    "start": "336400",
    "end": "342590"
  },
  {
    "text": " So there are issues we have to\ndeal with in order to program",
    "start": "342590",
    "end": "348520"
  },
  {
    "text": "this damn thing. And if you want to get\nperformance, you have to program in a way to get\ngood performance.",
    "start": "348520",
    "end": "353780"
  },
  {
    "text": "You don't run much slower\nand load less performance than one box. You'll get performance and also\nperformance scalability.",
    "start": "353780",
    "end": "360650"
  },
  {
    "text": "That means if you get 10\nmachines, you want to get some performance as if you have 20. Hopefully, you want to get a lot\nmore performance than 20.",
    "start": "360650",
    "end": "367370"
  },
  {
    "text": "So how do we keep things\nscaling in there? And also the thing's\nrobustness.",
    "start": "367370",
    "end": "372510"
  },
  {
    "text": "So the idea there is if you\nhave one machine, you're fatalistic. If the machine goes,\neverything goes.",
    "start": "372510",
    "end": "378729"
  },
  {
    "text": "You don't care. But if you have a lot more\nmachines, you want to make sure that application runs even\nif the machine's fails.",
    "start": "378730",
    "end": "386100"
  },
  {
    "text": "Worse, if you have a lot of\nmachines, there's a lot more chance of failure. So if one goes down, everything\ncrashes still.",
    "start": "386100",
    "end": "392130"
  },
  {
    "text": "Then your application will be a\nlot less robust even than a single machine, because\nthere too many moving parts to go wrong.",
    "start": "392130",
    "end": "397845"
  },
  {
    "text": "So you want to actually deal\nwith this robustness. So that adds an entire new\ndimension in there.",
    "start": "397845",
    "end": "404780"
  },
  {
    "text": "We are not going to go too much\ndeeper into robustness. But that is one big thing that\nyou have to really worry about",
    "start": "404780",
    "end": "410340"
  },
  {
    "text": "when you go to distributed\nsystems. OK. What's a distributed system?",
    "start": "410340",
    "end": "415699"
  },
  {
    "text": "So this is what we have\nbeen working so far? Can we see if we can\nreduce the lights?",
    "start": "415700",
    "end": "422080"
  },
  {
    "text": " I guess up there you can't--",
    "start": "422080",
    "end": "428480"
  },
  {
    "text": "OK. We don't go fully\ndark, we'll see. ",
    "start": "428480",
    "end": "436450"
  },
  {
    "text": "Oh, that's you guys. Don't go to sleep even\nthough light is--",
    "start": "436450",
    "end": "442419"
  },
  {
    "text": "there. So this should be over there\nand I don't have any way to darken this side. So these are the machines we\nhave been thinking about.",
    "start": "442420",
    "end": "449580"
  },
  {
    "text": "We have a memory system. And more than just having\na shared memory, we have cache coherence.",
    "start": "449580",
    "end": "455760"
  },
  {
    "text": "So that means if two people want\nto communicate to write to this single memory location,\nand the lot of that",
    "start": "455760",
    "end": "462250"
  },
  {
    "text": "data appears lower on all\nthe different cores. So we can use that information\nto basically communicate to",
    "start": "462250",
    "end": "468770"
  },
  {
    "text": "the processor. That's really nice. So a distributed memory machine\nhas no shared memory.",
    "start": "468770",
    "end": "477040"
  },
  {
    "text": "So each memory is-- Now, how are you going\nto communicate? ",
    "start": "477040",
    "end": "483130"
  },
  {
    "text": "Message? Yeah, this is not software. You actually need something\nadditional. Something like a network, or\nInternet, something behind",
    "start": "483130",
    "end": "491060"
  },
  {
    "text": "sitting out that actually\nlet you communicate between each other. So if you just really look at\nthe kind of cost, this is a",
    "start": "491060",
    "end": "499689"
  },
  {
    "text": "back of the envelope\ntype calculation. Register is probably\none cycle. Cache is about 10 cycles.",
    "start": "499690",
    "end": "506090"
  },
  {
    "text": "If you go to DRAM, you can\nget about 1,000 cycles. Remote memory, going somewhere\nacross, is, again, another",
    "start": "506090",
    "end": "512520"
  },
  {
    "text": "order of magnitude from that. So of course, you keep adding. And that's probably the\nreason that sometimes",
    "start": "512520",
    "end": "517789"
  },
  {
    "text": "things can be slow. Because now, we have another\nlayer that's even slower. So we have to think about it,\nworry about it when you're",
    "start": "517789",
    "end": "526610"
  },
  {
    "text": "writing code for these\ntypes of machines. So in shared memory machines,\nwe learn in",
    "start": "526610",
    "end": "533190"
  },
  {
    "text": "languages like Cilk. It's very nice to communicate\nbecause we synchronize via locks.",
    "start": "533190",
    "end": "538930"
  },
  {
    "text": "And all communication\nvia memory. Because when you write\nsomething, if you look at that memory location, everybody\nelse will see it.",
    "start": "538930",
    "end": "545990"
  },
  {
    "text": "And if you put the right\nsynchronization, hopefully you will get the value you want. In distributed memory\nmachines, there's",
    "start": "545990",
    "end": "553620"
  },
  {
    "text": "nothing like that. So what we see is we explicitly sends some data across. So you have what we\ncall messages.",
    "start": "553620",
    "end": "560240"
  },
  {
    "text": "And that means if you want to\nsend something to-- if another person needs to look at\nsomething, we have to send it",
    "start": "560240",
    "end": "565285"
  },
  {
    "text": "to that person. So you have to originate\nyourself. Saying, I'm sending. That other person has\nto receive it. And they have to put it\nwherever you want.",
    "start": "565286",
    "end": "572949"
  },
  {
    "text": "So everybody's address\nspace is separate. And if you want to synchronize,\nyou would also do",
    "start": "572950",
    "end": "578820"
  },
  {
    "text": "it through the message. So you send a message, then the\nother person wait for the message to come. And so this shows you what\nnormally happens in messages.",
    "start": "578820",
    "end": "590550"
  },
  {
    "text": "In the shared memory, there's\nnothing called message size. You write a cache line. The cache line moves.",
    "start": "590550",
    "end": "596070"
  },
  {
    "text": "And you can't keep changing\nthe cache line size. Hopefully, prefetcher will be\ngood and do something nice.",
    "start": "596070",
    "end": "601220"
  },
  {
    "text": "But you don't have\nthat much choice. In messages, you can compose any\nsize of message you want. So what this graph shows is the\nminimum cost and average",
    "start": "601220",
    "end": "610930"
  },
  {
    "text": "cost of different\nsize messages. So there's a couple of things\nto get out of this graph.",
    "start": "610930",
    "end": "616029"
  },
  {
    "text": "One is that if the message is\neven 0 length, or very small, you still have overhead.",
    "start": "616030",
    "end": "621670"
  },
  {
    "text": "You're going to send\nthe darn message. So if even you send nothing,\nit cost you some amount.",
    "start": "621670",
    "end": "627000"
  },
  {
    "text": "And the second thing is as the\nmessage gets bigger and bigger, the cost keeps\nincreasing, because now you're sending more and more data.",
    "start": "627000",
    "end": "633640"
  },
  {
    "text": "So if you really amortize the\noverhead cost, you are to send large messages in there. Another thing this chart shows\nis that as messages become",
    "start": "633640",
    "end": "641600"
  },
  {
    "text": "bigger, the kind of the\ndistribution of overhead is all over the map.",
    "start": "641600",
    "end": "647440"
  },
  {
    "text": "Because now we are sending large\nthings, a lot of other craziness happens\nto these things. So sometimes it can go\nfast, sometimes it",
    "start": "647440",
    "end": "653910"
  },
  {
    "text": "can be pretty slow. I will get why it might be\nsometimes this kind of distribution shortly.",
    "start": "653910",
    "end": "659610"
  },
  {
    "text": "So the main point is that, that\nyou don't send smaller messages if you can, because\nthe overhead is too high.",
    "start": "659610",
    "end": "666880"
  },
  {
    "text": "So why is this? Why is sending messages\ncomplicated? Till now, there's\nnobody sitting",
    "start": "666880",
    "end": "673940"
  },
  {
    "text": "between you and hardware. Once you send the program run,\nyou own the entire hardware,",
    "start": "673940",
    "end": "679550"
  },
  {
    "text": "and after figuring out all the\nweirdness that's on x86 there's nothing in\nbetween you.",
    "start": "679550",
    "end": "685670"
  },
  {
    "text": "You probably won't look at the\ncompile code if you look at what assembly is generated\nyou have full view what's going on in here.",
    "start": "685670",
    "end": "691770"
  },
  {
    "text": "Unfortunately, message passing,\na lot of other things come into play. So if you want to send a message\nand the applications",
    "start": "691770",
    "end": "697320"
  },
  {
    "text": "says, aha, I'm sending\na message. And normally, it will\ndo a system call to operating system.",
    "start": "697320",
    "end": "703180"
  },
  {
    "start": "702000",
    "end": "702000"
  },
  {
    "text": "And normally, this message\nwill get copied into the operating system. It's copying here.",
    "start": "703180",
    "end": "708209"
  },
  {
    "text": "This operating system called the\noperating system wakes up. This might be when this\nscheduled, there's a lot of",
    "start": "708210",
    "end": "713500"
  },
  {
    "text": "things going on. And then the operating system\nhas to send to the network interface card. And the network will say, OK,\nI can't send long messages.",
    "start": "713500",
    "end": "720230"
  },
  {
    "text": "I'm going to break into a\nbunch of small messages. And put some hardware here.",
    "start": "720230",
    "end": "725600"
  },
  {
    "text": "And it will end up in\nthe other side. In a bunch of fragmented small\npieces that the network",
    "start": "725600",
    "end": "731600"
  },
  {
    "text": "interface unit has to reassemble\ninto one message and deliver up. And this will probably--",
    "start": "731600",
    "end": "736840"
  },
  {
    "text": "it will copy back into\nthe application. So what that means is that a\nlot of other things getting",
    "start": "736840",
    "end": "742120"
  },
  {
    "text": "involved, each optimize\nseparately, doing a lot of different things. And so that is why you have this\nbig unpredictable mess",
    "start": "742120",
    "end": "749610"
  },
  {
    "text": "happening in message passing. And so there you not only have\nto worry about your code.",
    "start": "749610",
    "end": "757050"
  },
  {
    "text": "You have to worry about what the\noperating system is doing. You have to worry about what\nthe network is doing. You have to worry about your\nnetwork card's doing.",
    "start": "757050",
    "end": "763060"
  },
  {
    "text": "So there's a lot of moving\nparts in this. If you want to get really,\nreally good performance, people have to worry about\nall these things in here.",
    "start": "763060",
    "end": "771089"
  },
  {
    "text": "So let's look at how\na message works. So I hope you can see\nthese diagrams.",
    "start": "771090",
    "end": "776150"
  },
  {
    "text": "Can you see these? Barely? So let me say-- So I have a sending process\nand a receiving process.",
    "start": "776150",
    "end": "781675"
  },
  {
    "text": "Oh, don't reboot please. ",
    "start": "781675",
    "end": "788160"
  },
  {
    "text": "And so what happens if-- this\nis a message-- if we are sending without any buffering of\na message, that means I am",
    "start": "788160",
    "end": "794280"
  },
  {
    "text": "not copying it anywhere,\nso assume I want to send a message. I said I have a message\nto send.",
    "start": "794280",
    "end": "799649"
  },
  {
    "text": "And then what happens in this\nmodel is, OK, until the receiver is ready,\nyou have to wait.",
    "start": "799650",
    "end": "806440"
  },
  {
    "text": "Because there is no place\nto send the message. So finally, when the other side\nsays I want to receive",
    "start": "806440",
    "end": "813620"
  },
  {
    "text": "something, it will tell this\nthing it's OK to send. And it will copy the data. And then after copying the data,\nboth parts can continue.",
    "start": "813620",
    "end": "822410"
  },
  {
    "text": "So this is what happens if\nsender wants to send early.",
    "start": "822410",
    "end": "828509"
  },
  {
    "text": "If you're very lucky, the minute\nyou try to send, the receiver says I want it. And we have very little delay.",
    "start": "828510",
    "end": "834170"
  },
  {
    "text": "And everything gets copied. And that's in your lucky case. In other cases, the receiver\nwants some data.",
    "start": "834170",
    "end": "839879"
  },
  {
    "text": " But the sender is not ready, so\nyour receiver has to wait",
    "start": "839880",
    "end": "845580"
  },
  {
    "text": "until the sender wants\nto send it. And when this message [? is ?] [? sent ?], you copy\nthe data in here. So this is a very naive\nsimple way.",
    "start": "845580",
    "end": "853430"
  },
  {
    "text": "What can we eliminate\nout of this? How can we make it a\nlittle bit faster?",
    "start": "853430",
    "end": "860132"
  },
  {
    "text": "AUDIENCE: Buffer. PROFESSOR: Yeah. If you buffer, what\nwill eliminate? What will go away?",
    "start": "860132",
    "end": "866089"
  },
  {
    "text": "Out of-- we have this overhead,\nthis overhead, and this overhead. Which overheads can\nget eliminated?",
    "start": "866090",
    "end": "871640"
  },
  {
    "text": " Wait for send can go ahead.",
    "start": "871640",
    "end": "878110"
  },
  {
    "text": "So what happens is-- So here actually what they're\nshowing is buffering also with",
    "start": "878110",
    "end": "885750"
  },
  {
    "text": "some hardware support. That means I am trying\nto send something. And the minute I copied\nit out there, I can",
    "start": "885750",
    "end": "892570"
  },
  {
    "text": "keep working in there. And somewhere in the background\nwhere you send the data, it will arrive here. And if it wants it,\nthe data is there.",
    "start": "892570",
    "end": "899740"
  },
  {
    "text": "Of course, if the receiver comes\nearly and asks for data, you can't do that. Still you have to wait, because\nthe data is not there.",
    "start": "899740",
    "end": "907100"
  },
  {
    "text": "However, if there's no hardware\nsupport, both has to probably wait a little bit,\nbecause you have to get the data copied.",
    "start": "907100",
    "end": "912540"
  },
  {
    "text": "So if you have a lot of hardware\nsupport, you don't see this copy time. But if there's no hardware\nsupport, you see some copy",
    "start": "912540",
    "end": "918960"
  },
  {
    "text": "time going in here. So what's the advantage\nof this versus--",
    "start": "918960",
    "end": "925150"
  },
  {
    "text": "OK, tell me one advantage\nof this method versus this method.",
    "start": "925150",
    "end": "930730"
  },
  {
    "text": "So of course, this one there\nis a lot of wait time and stuff like that. We know that. But is there any advantage of\ndoing this one, this waiting",
    "start": "930730",
    "end": "938370"
  },
  {
    "text": "until sending and sending it\nthere versus this kind of a nice sending it in\nthe background. AUDIENCE: They're\nsynchronized.",
    "start": "938370",
    "end": "943912"
  },
  {
    "text": "PROFESSOR: Hmm? AUDIENCE: Sychronized. PROFESSOR: Synchronized\nis one advantage. What else might happen?",
    "start": "943912",
    "end": "951780"
  },
  {
    "text": "So what else are you going\nto do to get this kind of thing working? ",
    "start": "951780",
    "end": "960959"
  },
  {
    "text": "So in order for this to make\nprogress, what do you have to do to data?",
    "start": "960960",
    "end": "965970"
  },
  {
    "text": "It has to copy. So it has to get multiple\ncopies. So from application space. It has to get copied to\noperating system space.",
    "start": "965970",
    "end": "972520"
  },
  {
    "text": "It has to get copied into\nthe networking stack. So data keep getting copying,\nand copying, and copying in there.",
    "start": "972520",
    "end": "978079"
  },
  {
    "text": "And in here you basically\ndon't copy. You just say, OK, wait. I'll keep the data and when\nyou're ready, I will send it directly in here.",
    "start": "978080",
    "end": "984019"
  },
  {
    "text": "And you can directly probably\neven send it to the network. And send it. So if you're sending a lot of\ndata, copy my old value.",
    "start": "984020",
    "end": "992670"
  },
  {
    "text": "So this might even be better\nif you're sending a huge amount of data. So that's one advantage of\nhaving system like that.",
    "start": "992670",
    "end": "1000130"
  },
  {
    "text": "And of course, hardware-- if there's no hardware support,\nbasically still you have to do some copying\nin here.",
    "start": "1000130",
    "end": "1006220"
  },
  {
    "start": "1006220",
    "end": "1012949"
  },
  {
    "text": "So this is-- what am I showing here? So what we are showing in\nhere is non-blocking.",
    "start": "1012950",
    "end": "1021160"
  },
  {
    "text": "So one way to look at that is\nwhen you're sending, when you request for send, what you can\nsay is, OK, I continue but I",
    "start": "1021160",
    "end": "1031079"
  },
  {
    "text": "haven't copied the data. I have my data in here,\nbut I'm doing that. But what I must tell you, OK,\nlook, this data still hasn't",
    "start": "1031079",
    "end": "1036524"
  },
  {
    "text": "moved out of my space yet. So I have to worry. I can't rewrite the data. And at some point, when you say\nI want the data, it will",
    "start": "1036524",
    "end": "1043030"
  },
  {
    "text": "go there and bring\nthe data for you. And catch you like that. So between this time since I\ndon't want to make too many",
    "start": "1043030",
    "end": "1050440"
  },
  {
    "text": "copies, I have to make sure that\nI don't touch that data. Or I have to copy it. So that's my request in here.",
    "start": "1050440",
    "end": "1056900"
  },
  {
    "text": "And of course, if you have no\nhardware support, you have to",
    "start": "1056900",
    "end": "1063590"
  },
  {
    "text": "put some time into actually\ndoing the copying. So this is nice.",
    "start": "1063590",
    "end": "1072600"
  },
  {
    "text": "But we want to have a little\nbit of high level support to do this. So this is not as nice as things\nlike Cilk, because you",
    "start": "1072600",
    "end": "1081840"
  },
  {
    "text": "don't have to worry about a\nlot of other interesting things going on. So what people have developed\nis called MPI language,",
    "start": "1081840",
    "end": "1088130"
  },
  {
    "text": "Message Passing Interface\nlanguage. It is kind of a bit foggy. But that's the best people\nhave these days.",
    "start": "1088130",
    "end": "1095470"
  },
  {
    "text": "A machine independent way of\nwhen have the distributed systems to communicate\nwith each other.",
    "start": "1095470",
    "end": "1102760"
  },
  {
    "text": "So-- [PHONE RINGING] Whoops. That's not good. My phone. ",
    "start": "1102760",
    "end": "1111139"
  },
  {
    "text": "Sorry about that. So what happens is each machine\nhas its own processor, it's own memory.",
    "start": "1111140",
    "end": "1117220"
  },
  {
    "start": "1114000",
    "end": "1114000"
  },
  {
    "text": "So there's no shared memory\non a thing like that. Its own thread of\ncontrol is run. And each process communicates\nvia messages.",
    "start": "1117220",
    "end": "1125280"
  },
  {
    "text": "And there is send\nas is needed. And that means but you can't\nsend like pointers, because",
    "start": "1125280",
    "end": "1133430"
  },
  {
    "text": "there's no notion of pointers. You actually have a data\nstructure that's self-contained center\nof the site.",
    "start": "1133430",
    "end": "1139140"
  },
  {
    "text": "So here's a small program. I'm going to walk\nthrough that. So I have main. And I'm setting a bunch\nof these variables.",
    "start": "1139140",
    "end": "1145620"
  },
  {
    "text": "For now, those are not\nthat important. But for completeness,\nI have that.",
    "start": "1145620",
    "end": "1150820"
  },
  {
    "text": "And then, of course, if use\nsomething like MPI, there's a bunch of setup things\nthat you have. And so basically like cut and\npaste with what people",
    "start": "1150820",
    "end": "1158000"
  },
  {
    "text": "normally do as we set up. And then I have this\npiece of code.",
    "start": "1158000",
    "end": "1163769"
  },
  {
    "text": " This piece of code, what it\ndoes is, this same program",
    "start": "1163770",
    "end": "1172210"
  },
  {
    "text": "runs on multiple different\nmachines. So everyone has the\nsame program.",
    "start": "1172210",
    "end": "1178860"
  },
  {
    "text": "But then at some point,\nI want to know in my machine what to do. So what I do is I\ncheck who am I?",
    "start": "1178860",
    "end": "1185759"
  },
  {
    "text": "Am I machine zero? If I'm machine zero, do this. If I'm machine one, do this.",
    "start": "1185760",
    "end": "1190940"
  },
  {
    "text": "So by doing that, I can\ncite a piece of code that everybody runs. And everybody figures\nout who they are.",
    "start": "1190940",
    "end": "1196140"
  },
  {
    "text": "And if they are the given\nthing, what to do. So here what it says is, OK, if\nI'm machine zero, my source",
    "start": "1196140",
    "end": "1203920"
  },
  {
    "text": "and destination is\nmachine one. If I'm machine one,\nmy source and destination is machine zero. So I'm trying to communicate\nbetween each other.",
    "start": "1203920",
    "end": "1210880"
  },
  {
    "text": "So if you look at what happens\nis, first, I am sending",
    "start": "1210880",
    "end": "1216110"
  },
  {
    "text": "basically to this machine. So I'm sending something into\nthis machine, so the syntax--",
    "start": "1216110",
    "end": "1222670"
  },
  {
    "text": "I'm not going to go\nthrough that. You don't have to know that. But what you need to\nknow is that I'm trying to send something.",
    "start": "1222670",
    "end": "1227780"
  },
  {
    "text": "I tell explicitly who to send. And there has to be matching\nreceiving that data. Otherwise, sends go somewhere.",
    "start": "1227780",
    "end": "1233670"
  },
  {
    "text": "And just it goes bad. Send here, you can send it. It can probably go bad.",
    "start": "1233670",
    "end": "1239520"
  },
  {
    "text": "But receive you have to have\nsomebody who sends for that. So the receive basically\nhas to have matching. And then you send it\nthat direction.",
    "start": "1239520",
    "end": "1245910"
  },
  {
    "text": "And then what I do is\nI receive in here. And this gets sent\nto me in here.",
    "start": "1245910",
    "end": "1253640"
  },
  {
    "text": "So question I did send\nreceive here. What would happen if I did\nalso send receive here?",
    "start": "1253640",
    "end": "1259450"
  },
  {
    "text": "If I reorganized these two,\nwhat would happen? If I used the same piece of\ncode, that two pieces of code.",
    "start": "1259450",
    "end": "1266240"
  },
  {
    "text": "Then I don't even have\ndo a bit to make this two separate code. I can basically factor\nthis out down here.",
    "start": "1266240",
    "end": "1271910"
  },
  {
    "text": "I do a send, receive;\nsend, receive here. And then send the just IDs.",
    "start": "1271910",
    "end": "1276929"
  },
  {
    "text": " What happen? ",
    "start": "1276930",
    "end": "1289194"
  },
  {
    "text": "AUDIENCE: It works\nwithout a buffer.  PROFESSOR: These things\nare what you",
    "start": "1289194",
    "end": "1294210"
  },
  {
    "text": "called blocking sends. If you have blocking sends, it\nmeans that until the receiver receives it might be\nblocked if you are",
    "start": "1294210",
    "end": "1300060"
  },
  {
    "text": "doing a blocking send. OK. That means if two guys\nare trying to send, nobody is receiving.",
    "start": "1300060",
    "end": "1305520"
  },
  {
    "text": "You have what? AUDIENCE: Deadlock. PROFESSOR: You have deadlock. So that's why I actually\nhad to do this. This is called blocking send.",
    "start": "1305520",
    "end": "1311630"
  },
  {
    "text": "So instead of blocking sends-- So of course, those are\nfinalized things",
    "start": "1311630",
    "end": "1316799"
  },
  {
    "text": "and do that up there. I can do this one. What this says is--",
    "start": "1316800",
    "end": "1323039"
  },
  {
    "text": "This is actually a little\nmore complicated. What I'm doing is I have a\nbunch of buffers here. I have how many processors?",
    "start": "1323040",
    "end": "1330690"
  },
  {
    "text": "I have bunch of buffers\nin here. I have, I guess, my ID number\nof processors--",
    "start": "1330690",
    "end": "1337450"
  },
  {
    "text": "no, numtask number\nof processors. What I am sending, say I'm\nsending a circular buffer. I'm sending around\nto everybody.",
    "start": "1337450",
    "end": "1344991"
  },
  {
    "text": "Both directions. So I am sending the\nprevious and next. So assume something is\nsitting in numtasks.",
    "start": "1344991",
    "end": "1350520"
  },
  {
    "text": "I am sending back and forth. So here what I am doing is\nbasically non-blocking sends and receives.",
    "start": "1350520",
    "end": "1355980"
  },
  {
    "text": "So first time issuing\na receive. So even if I receive a receive,\nit says I have intent",
    "start": "1355980",
    "end": "1361110"
  },
  {
    "text": "to receive. But I am not receiving\nsomething. I am not waiting. So I can continue. And then I am doing the same.",
    "start": "1361110",
    "end": "1366940"
  },
  {
    "text": "So otherwise, if I just do just\nreceive and send, if you do blocking is going\nto be deadlocked. But here I do that.",
    "start": "1366940",
    "end": "1371970"
  },
  {
    "text": "And then in this wait for all. What it says is, OK, now\nI issued a receive.",
    "start": "1371970",
    "end": "1377590"
  },
  {
    "text": "Now wait until that\nreceive is done. So before I use the data, I have\nto wait for it in there.",
    "start": "1377590",
    "end": "1383200"
  },
  {
    "text": "And also, when I do the send,\nI am wait for all in here.",
    "start": "1383200",
    "end": "1389649"
  },
  {
    "text": "So why do you think it might\nbe advantageous to do a",
    "start": "1389650",
    "end": "1395190"
  },
  {
    "text": "non-blocking receives and\nnon-blocking sends? So sends, it makes perfect\nsense, because once I have",
    "start": "1395190",
    "end": "1404450"
  },
  {
    "text": "sent, I won't do anything\nbecause I don't have to wait for anything. I am done. So blocking sends is\nnot that useful.",
    "start": "1404450",
    "end": "1411400"
  },
  {
    "text": "But receives, why do you want\nto do non-blocking receives, then a blocking receive? Because then you\nwon't receive.",
    "start": "1411400",
    "end": "1417940"
  },
  {
    "text": "You have to wait till the data\ncomes to do anything. Because that's what non-blocking\nreceives means. I have to receive early and then\nwait for the receives to",
    "start": "1417940",
    "end": "1425929"
  },
  {
    "text": "happen at this point. What might be an advantage of\ndoing a non-blocking receive? ",
    "start": "1425930",
    "end": "1433650"
  },
  {
    "text": "Anybody can think\nof an advantage? ",
    "start": "1433650",
    "end": "1439800"
  },
  {
    "text": "It's harder. Because now you have to remove\nthe receives from the synchronization point instead\nof writing one receive.",
    "start": "1439800",
    "end": "1446410"
  },
  {
    "text": " AUDIENCE: Because when sends\ncome from other machines, we can receive it. ",
    "start": "1446410",
    "end": "1457330"
  },
  {
    "text": "PROFESSOR: That might be one\ninteresting thing because you are expecting multiple\nreceives. You don't know what's\ncoming first.",
    "start": "1457330",
    "end": "1462360"
  },
  {
    "text": "If you do non-blocking receive,\nthen you can be-- opt out the first guy then\nbasically work on.",
    "start": "1462360",
    "end": "1469710"
  },
  {
    "text": "That's a very good point. OK. What else? ",
    "start": "1469710",
    "end": "1479860"
  },
  {
    "text": "What other advantages\nyou might have? Having a non-blocking receive? ",
    "start": "1479860",
    "end": "1492639"
  },
  {
    "text": "AUDIENCE: If the receive fails,\nwe can just have them resend it again. PROFESSOR: Receive fails?",
    "start": "1492640",
    "end": "1498940"
  },
  {
    "text": "OK. Receive fails. See, that's complicated. But another interesting\nthing might be space. Because when I see the\nnon-blocking receive, I know",
    "start": "1498940",
    "end": "1506940"
  },
  {
    "text": "where the data has to be. So I already allocated\na buffer for that.",
    "start": "1506940",
    "end": "1512060"
  },
  {
    "text": "So, if the data comes now, I\ncan directly copy into my local buffer if there's already\na received issued, if there's already a\nspace allocated.",
    "start": "1512060",
    "end": "1518790"
  },
  {
    "text": "Normally, other way around,\nuntil you see the issue the received, you don't know where\nthe data has to be, so it has",
    "start": "1518790",
    "end": "1523830"
  },
  {
    "text": "to get copied at that point. So here, you can keep the\nbuffer, and hopefully, if you",
    "start": "1523830",
    "end": "1528900"
  },
  {
    "text": "are lucky, the same hasn't\nhappened yet, so you should set up the buffer, and then,\nwhen the data comes, say, aha,",
    "start": "1528900",
    "end": "1534870"
  },
  {
    "text": "here is the matching receive. Directly put it there\nby passing it and copying in the middle. So that's the advantage here.",
    "start": "1534870",
    "end": "1542110"
  },
  {
    "text": "So, I am here. I did a wait for the\nreceives here.",
    "start": "1542110",
    "end": "1547400"
  },
  {
    "text": "Did the work that\nuses the data. And wait for sends\nhere, afterwards.",
    "start": "1547400",
    "end": "1552760"
  },
  {
    "text": "OK. Could I have moved wait for\nsends before the work? ",
    "start": "1552760",
    "end": "1562370"
  },
  {
    "text": "What happens if I have\nmoved wait for sends before the work? Is it incorrect?",
    "start": "1562370",
    "end": "1568130"
  },
  {
    "text": "How many people think\nthis is incorrect?  Is it incorrect to move\nthis wait for sends?",
    "start": "1568130",
    "end": "1575610"
  },
  {
    "text": "All the sends before the work,\nto move this item about? Because work is where all the\nwork happens, I assume, that",
    "start": "1575610",
    "end": "1581309"
  },
  {
    "text": "uses this data. So wait for sends about\nwhat happens. AUDIENCE: Well, if that's\nincorrect, then you lose...",
    "start": "1581310",
    "end": "1587001"
  },
  {
    "text": " PROFESSOR: Yeah, you lose--\nyou're waiting for something that you don't have to wait.",
    "start": "1587001",
    "end": "1592060"
  },
  {
    "text": "Of course, you can move these\ndown, because that means you might start using, and try to\nuse data that's not there.",
    "start": "1592060",
    "end": "1597940"
  },
  {
    "text": "So, this has to be here. And this, basically,\nfor performance purposes, has to be after.",
    "start": "1597940",
    "end": "1604205"
  },
  {
    "text": " So, of course you have to\nworry about a lot of",
    "start": "1604205",
    "end": "1610740"
  },
  {
    "text": "correctness issues. One is deadlocks. So, there are two types\nof deadlocks. That's blocking sends\nand receives,",
    "start": "1610740",
    "end": "1617480"
  },
  {
    "text": "what we talked about. But there's also other types\nof deadlocks that happen because of resources.",
    "start": "1617480",
    "end": "1624060"
  },
  {
    "text": "So, let me get to that\nin the next slide. And the other interesting\nthing that can",
    "start": "1624060",
    "end": "1629940"
  },
  {
    "text": "happen is stale data. In your shared memory machine,\nneed to update the data. You know everybody's\ngoing to see that.",
    "start": "1629940",
    "end": "1637140"
  },
  {
    "text": "Because the hardware\ntakes care of that. But, in a message passing\nmachine, it's up to you get",
    "start": "1637140",
    "end": "1643269"
  },
  {
    "text": "the latest data when\nit's needed. So, if you don't have the data,\nyou think, aha, I have the data, but it might not be\nthe right value because you",
    "start": "1643270",
    "end": "1649760"
  },
  {
    "text": "haven't gotten something new. So, it's up to you to\nbasically send the data out and that.",
    "start": "1649760",
    "end": "1656710"
  },
  {
    "text": "And, also, robustness is a big\nissue because the fact that you have multiple machines means\nyou can make it robust,",
    "start": "1656710",
    "end": "1664080"
  },
  {
    "text": "but the other flip side is up\nto you to make it robust. So that means you have to figure\nout if a machine fails,",
    "start": "1664080",
    "end": "1669880"
  },
  {
    "text": "how to respond to that. So, if you're waiting for a\nmachine there for it fails. OK?",
    "start": "1669880",
    "end": "1675530"
  },
  {
    "text": "There are a lot of issues, it\ntime out, and then you have to go and deal with that. So, that can make the\nprogramming a lot more",
    "start": "1675530",
    "end": "1681580"
  },
  {
    "text": "complicated. And if you just don't do that,\nyour overall program would be",
    "start": "1681580",
    "end": "1687950"
  },
  {
    "text": "a lot less robust than a single\nmachine because there could be a lot more failures\nin the large system. ",
    "start": "1687950",
    "end": "1697080"
  },
  {
    "text": "So, here's a kind of deadlock\nthat can happen. What I am doing is processor\nzero is sending and processor",
    "start": "1697080",
    "end": "1708700"
  },
  {
    "text": "one is sending data\nto each other. It doesn't have a read write\ndeadlock because I am for",
    "start": "1708700",
    "end": "1715399"
  },
  {
    "text": "sending, sending and then I\nam receiving, receiving. The sends here, and the receives\nfrom here, the sends",
    "start": "1715400",
    "end": "1720679"
  },
  {
    "text": "here, and then receive. So normally it looks like I'm\nsending two things, It should go, and I am receiving that.",
    "start": "1720680",
    "end": "1726700"
  },
  {
    "text": "But, assuming that I am sending\nhuge amount of data. OK. So I start sending,\nand there's not",
    "start": "1726700",
    "end": "1735930"
  },
  {
    "text": "enough room for received. Just say, OK, I don't have any\nroom to receive, I have to wait until the data, at least a\ndata start getting consumed",
    "start": "1735930",
    "end": "1743410"
  },
  {
    "text": "to start receiving. OK. If you keep sending multiple of\nsend outs, you might do a multiple of send outs in more\nthan one, multiple of sends",
    "start": "1743410",
    "end": "1750270"
  },
  {
    "text": "here, I might get deadlocked,\nI might get blocked because they can have receive, receive,\nand he's also trying",
    "start": "1750270",
    "end": "1755550"
  },
  {
    "text": "to send multiple things, I might\nget blocked in here. So I might get into this\ncriss-cross situation. If you were trying to send\nsomething, but other guy can't",
    "start": "1755550",
    "end": "1762200"
  },
  {
    "text": "proceed, up to get received. So even though, if program\nlook like there's a nice",
    "start": "1762200",
    "end": "1767570"
  },
  {
    "text": "matching send and receive,\nthere's no cycles. There's a cycle created by the\nresource usage in here.",
    "start": "1767570",
    "end": "1773280"
  },
  {
    "text": "So, if doing lot of sends before\na lot receives, and vice versa, you have\nto be careful.",
    "start": "1773280",
    "end": "1779670"
  },
  {
    "text": "If you do too much of that,\nit's nice to block things, move things up. But if you have too many things,\nthen you might end up",
    "start": "1779670",
    "end": "1786120"
  },
  {
    "text": "in deadlock situation. Even though, traditionally,\nit might not happen. ",
    "start": "1786120",
    "end": "1792000"
  },
  {
    "text": "So, you have host of other\nperformance issues that you'll deal with.",
    "start": "1792000",
    "end": "1797030"
  },
  {
    "text": "So let me address couple\nof them and what it might shows up.",
    "start": "1797030",
    "end": "1802780"
  },
  {
    "text": "So one big thing is\noccupancy cost. Because, when you do shared\nmemory, minute you basically",
    "start": "1802780",
    "end": "1814320"
  },
  {
    "text": "showing instructions. Instruction goes executes, you\nare done with and that operation is finished.",
    "start": "1814320",
    "end": "1819550"
  },
  {
    "text": " When you are doing a message\npassing, each",
    "start": "1819550",
    "end": "1826250"
  },
  {
    "text": "message is very expensive. It has to do a lot of things. You have to do a context switch,\ndo a buffer copy, and",
    "start": "1826250",
    "end": "1831260"
  },
  {
    "text": "a protocol stack processing,\nand then might have to do another context switch\nfor that. And there's a lot of these\ncopying and stuff happening,",
    "start": "1831260",
    "end": "1839179"
  },
  {
    "text": "and the network controller might\ninterrupt the private system, because either there's\ndata coming, copy the data in",
    "start": "1839180",
    "end": "1846640"
  },
  {
    "text": "there, and you send as\nignored application. So there's this huge amount\nof things happening just for one message.",
    "start": "1846640",
    "end": "1852790"
  },
  {
    "text": "If you are sending like one\nlousy byte, or one even like kilobyte., it just doing a lot\nof millions of instructions,",
    "start": "1852790",
    "end": "1860690"
  },
  {
    "text": "just on behalf of small\namount of data. So that's a large\namount of cost associated with that overhead.",
    "start": "1860690",
    "end": "1865990"
  },
  {
    "text": " So, setup already\nis very high. And, so what you want to do is\nyou want to amortize the cost",
    "start": "1865990",
    "end": "1874370"
  },
  {
    "text": "by sending large messages. So what you were to say, so\nlook I'm not sending this small thing, I'm going to\naccumulate a lot of things,",
    "start": "1874370",
    "end": "1880389"
  },
  {
    "text": "I'm going to send everything\nas bulk if you can. And then you can basically\namortize these costs of doing things.",
    "start": "1880390",
    "end": "1886190"
  },
  {
    "start": "1886000",
    "end": "1886000"
  },
  {
    "text": " Other thing is communications\nis excruciatingly slow.",
    "start": "1886190",
    "end": "1892450"
  },
  {
    "text": "So even the memory system, it's\nabout probably a couple of hundred plus compared\nto CPU communicating.",
    "start": "1892450",
    "end": "1903140"
  },
  {
    "text": "In the cluster interconnect, you\ncan do tens of thousands of instructions in the CPU, by\nthe time it get communicated.",
    "start": "1903140",
    "end": "1913879"
  },
  {
    "text": "In a grid, or if you are doing\nthrough the internet, and then it sits in the seconds now.",
    "start": "1913880",
    "end": "1918909"
  },
  {
    "text": "You can actually feel it. And then your processor can run\nmillions of instructions in that time. And so if you are waiting for\nsomething, you had to wait for",
    "start": "1918910",
    "end": "1926440"
  },
  {
    "text": "a very long time. They might not have enough\nthings to stuff in the middle, to kind of amortize the cost.",
    "start": "1926440",
    "end": "1932419"
  },
  {
    "text": "And then you have to\nworry about that. So what that means is if you\nstart waiting for something to happen, you are waiting\nfor a long time.",
    "start": "1932420",
    "end": "1939420"
  },
  {
    "text": "So you have to figure out\nputting things in there. Not waiting this, non-blocking\nthings is very important",
    "start": "1939420",
    "end": "1945775"
  },
  {
    "text": "because of that. And so normally what you want\nto do is you want to have",
    "start": "1945775",
    "end": "1957300"
  },
  {
    "text": "always split operations, that\nmeans you want to kind of initiate something at some\npoint, very early on, and then",
    "start": "1957300",
    "end": "1963680"
  },
  {
    "text": "use it later, especially if\nyou're looking for something like a receive. So if, I want to, especially\nif I want to get some--",
    "start": "1963680",
    "end": "1970200"
  },
  {
    "text": "normally in the shared memory,\njust kind of doing a simple thing, asking something and\nget replies, very simple.",
    "start": "1970200",
    "end": "1975690"
  },
  {
    "text": "Here, because if you just do\nthat, there's a huge waiting bit rate, so you want to kind\nof do speed operations.",
    "start": "1975690",
    "end": "1981230"
  },
  {
    "text": "So, this code can be\nvery complicated, because you tried to-- if you want to ask something,\nyou ask very early, you do a",
    "start": "1981230",
    "end": "1987240"
  },
  {
    "text": "lot of other things before\nthe reply comes. AUDIENCE: [INAUDIBLE].",
    "start": "1987240",
    "end": "1992490"
  },
  {
    "text": "PROFESSOR: Oops.  OK. Let's see how many times\nI had to press that.",
    "start": "1992490",
    "end": "2000330"
  },
  {
    "text": "Before I realize I\nhave to reboot.  So, if you want to\nrendezvous with--",
    "start": "2000330",
    "end": "2008260"
  },
  {
    "text": "normally, what have that means\nthat two points has to kind of synchronize at the same point. So what you want to do is you\ncan do a three-way sender send",
    "start": "2008260",
    "end": "2014520"
  },
  {
    "text": "a request, receiver acks with,\nOK, it's OK to send, and the senders delivers the data. So that means I have to do a\nthree-way communication.",
    "start": "2014520",
    "end": "2021140"
  },
  {
    "text": "Or, this alternative with\ntwo-way, you sender doesn't send anything, receiver\nbasically send a request, and",
    "start": "2021140",
    "end": "2026559"
  },
  {
    "text": "then you send the data. So this could be faster because\nthere's less things to do in here.",
    "start": "2026560",
    "end": "2033780"
  },
  {
    "text": "There's another method called\nRMA, or it's another name you might see, it's called\nactive messages.",
    "start": "2033780",
    "end": "2039179"
  },
  {
    "text": "Where you don't ask\nthe receiver. When you send, you have some\npre-assigned place you can go",
    "start": "2039180",
    "end": "2044995"
  },
  {
    "text": "and dump the data. So you don't wait for somebody\nto ask for data. You said, OK, if I want send,\nI'll immediately send, and put it somewhere.",
    "start": "2044995",
    "end": "2050260"
  },
  {
    "text": "And the data that I send\nthe place in here. So, the first slide I showed\nyou, all at that time, you saw",
    "start": "2050260",
    "end": "2059899"
  },
  {
    "text": "all these big difference in\nthe time, either this can happen, the message can go very\nfast, or sometime it will",
    "start": "2059900",
    "end": "2066210"
  },
  {
    "text": "be really slow. There's a big variation\nin here. This happen basically because of\nthe network communications.",
    "start": "2066210",
    "end": "2075919"
  },
  {
    "start": "2075000",
    "end": "2075000"
  },
  {
    "text": "How many of you know a\nlittle bit about TCP? ",
    "start": "2075920",
    "end": "2081179"
  },
  {
    "text": "OK. ",
    "start": "2081179",
    "end": "2086859"
  },
  {
    "text": "Let me just explain about\nfive minutes of TCP before I move on. So TCP is one of the main\nprotocols that we use to",
    "start": "2086860",
    "end": "2095599"
  },
  {
    "text": "communicate over Internet. And two things, you want\nto actually send data. But also, you want to\nbe a good citizen.",
    "start": "2095600",
    "end": "2103100"
  },
  {
    "text": "You have actually work in a\nway that it doesn't really take over the entire shared\nbandwidth you have.",
    "start": "2103100",
    "end": "2110320"
  },
  {
    "text": "So what TCP does,\nit has a window. So what it says is, OK, I can\nsend certain amount of data",
    "start": "2110320",
    "end": "2116320"
  },
  {
    "text": "that's the size of the window,\nbut I can't move beyond that until I get some\nacknowledgement.",
    "start": "2116320",
    "end": "2122640"
  },
  {
    "text": "So I send the window\namount of data. And, on the other side, when\nit's received that data, I said, I have seen this\nmuch of the window.",
    "start": "2122640",
    "end": "2128599"
  },
  {
    "text": "And once it's seen this much of\nthe window this send that acknowledgement back. And when that acknowledgement\ncomes, you",
    "start": "2128600",
    "end": "2134450"
  },
  {
    "text": "say, aha, that's good. That means it has seen that. Then I can send more. I keep sending more. And then, the TCP has this very\ninteresting property.",
    "start": "2134450",
    "end": "2141069"
  },
  {
    "text": "If you are doing a really good\ncommunication, things are going very nicely, it starts\nincreasing the window size.",
    "start": "2141070",
    "end": "2146490"
  },
  {
    "text": "It says, oh, OK, that means that\nwindows size keeps going. I can do bigger and bigger\nand bigger window size. You can keep increasing\nthe window size.",
    "start": "2146490",
    "end": "2152810"
  },
  {
    "text": "And then, what happens at some\npoint, the system get overloaded, because if you\neveryone is start--",
    "start": "2152810",
    "end": "2159200"
  },
  {
    "text": "increase their window size, too\nmany packets start coming into the network. At some point, the network in\nthe middle, doesn't have",
    "start": "2159200",
    "end": "2164710"
  },
  {
    "text": "enough room. It drops something. So, TCP, nice thing about the\nnetwork is that, even if it",
    "start": "2164710",
    "end": "2169720"
  },
  {
    "text": "doesn't have a guarantee that it\nwill guarantee it can just drop something. And when it drops, what happens\nis the other guy is",
    "start": "2169720",
    "end": "2175259"
  },
  {
    "text": "waiting for acknowledgement. So waiting for data to come,\nit never shows up. So then it has this thing, an\nack, saying I never got it.",
    "start": "2175260",
    "end": "2181839"
  },
  {
    "text": "And the problem with that is, so\nyou have a nice bandwidth, and you get increasing the\nbandwidth, you get faster and",
    "start": "2181840",
    "end": "2188010"
  },
  {
    "text": "faster and faster, and suddenly\ndata get missed. And suddenly you have this\nbig timeout delay.",
    "start": "2188010",
    "end": "2193609"
  },
  {
    "text": "And then everybody freezes. And then get the ack, and you\nrestart with a smaller window and slowly pick up, something\nlike that.",
    "start": "2193610",
    "end": "2199660"
  },
  {
    "text": "So because of that, there a lot\nof times what happens, is this packet get dropped,\nretransmit happens, so you",
    "start": "2199660",
    "end": "2206300"
  },
  {
    "text": "have this kind of sawtooth\npattern. Things get faster and faster,\nthings go down for nothing,",
    "start": "2206300",
    "end": "2211400"
  },
  {
    "text": "for a little while, again\nstart again, in here.",
    "start": "2211400",
    "end": "2216430"
  },
  {
    "text": "So the other way of\ncommunicating is called UDP. UDP says, OK, if you don't\nhave any kind of",
    "start": "2216430",
    "end": "2224030"
  },
  {
    "text": "acknowledgement, or something\nlike that, I'll just send. And you, on the other hand,\nfigure this out whether you got something or not.",
    "start": "2224030",
    "end": "2230050"
  },
  {
    "text": "And send information back. So the network doesn't\nparticipate in any kind of a",
    "start": "2230050",
    "end": "2235190"
  },
  {
    "text": "balancing act of\ncommunication. It's end-to-end. So of course, you can be a\nreally bad citizen, and say,",
    "start": "2235190",
    "end": "2240220"
  },
  {
    "text": "OK, I don't care. I just keep sending huge\namount of data and then somebody would go well. But, what people have found is\nfor things like video, you can",
    "start": "2240220",
    "end": "2251300"
  },
  {
    "text": "send UPD and kind of\nmanipulate yourself end-to-end, can get\nmuch better than trying to do this TCP.",
    "start": "2251300",
    "end": "2258110"
  },
  {
    "text": "So the kind of thing is,\neven though there's not acknowledgment, or there's no\nreal attempt to make sure all",
    "start": "2258110",
    "end": "2265930"
  },
  {
    "text": "the data goes, UDP sometimes\ncan get better bandwidth, because it doesn't drop\npackets in here.",
    "start": "2265930",
    "end": "2272540"
  },
  {
    "text": "So, there's a lot of great\nstuff, I mean you guys can take the networking class and\nlearn all about the protocols",
    "start": "2272540",
    "end": "2281230"
  },
  {
    "text": "and stuff like that. There's really, really cool\nstuff in here, so some of you",
    "start": "2281230",
    "end": "2287240"
  },
  {
    "text": "might actually, next couple of\nsemesters, learn all about how these things work. So I'm just giving you, lot of\nperformance wise, these are",
    "start": "2287240",
    "end": "2296010"
  },
  {
    "text": "the issues that you are to worry\nabout when you are doing network level things.",
    "start": "2296010",
    "end": "2301039"
  },
  {
    "text": "OK. So that's kind of talks about\na little bit about a small",
    "start": "2301040",
    "end": "2307170"
  },
  {
    "text": "scale, and then if you want to\ngo to next bigger scale-- why you want to go?",
    "start": "2307170",
    "end": "2313160"
  },
  {
    "text": "There can be lot more uses. If you are on something like\nFacebook, or Amazon, you have",
    "start": "2313160",
    "end": "2318790"
  },
  {
    "text": "a lot more users to deal with. If you are, what's a good\none with a lot of data?",
    "start": "2318790",
    "end": "2329970"
  },
  {
    "text": " Google Earth, or something\nlike that. You have a lot of data.",
    "start": "2329970",
    "end": "2335040"
  },
  {
    "text": "And you have to deal with all\nthe data, and that's a good way to do the scale up. Or you might have huge amount of\nprocessing you want to do,",
    "start": "2335040",
    "end": "2342370"
  },
  {
    "text": "for example, the one place a lot\nof data and processing is things like these new basically\ntelescopes that's",
    "start": "2342370",
    "end": "2355230"
  },
  {
    "text": "coming about, that has arrays\nof hundreds of different things, so you have huge amount\nof data coming from the telescopes.",
    "start": "2355230",
    "end": "2360529"
  },
  {
    "text": "And then you could do a huge\namount of processing and that. So that basically, has broad\ndata and processing, and in",
    "start": "2360530",
    "end": "2367140"
  },
  {
    "text": "things like webs, social\nnetworks, and stuff like that, gives me a lot of data. So here are some examples of\nsome things like the airline",
    "start": "2367140",
    "end": "2374860"
  },
  {
    "text": "reservation system. It's something, all the airlines\nhave to assign millions of planes, flights,\nmillions of seats",
    "start": "2374860",
    "end": "2381770"
  },
  {
    "text": "that you deal with. Things like a stock trading\nsystem that all the trades has to has to come there, and the\nprices has to get calculated,",
    "start": "2381770",
    "end": "2390150"
  },
  {
    "text": "and then trades has\nto get validated. And, very big analysis, so you\nform some kind of global",
    "start": "2390150",
    "end": "2395500"
  },
  {
    "text": "understanding of what's\ngoing on. And I'm going to talk about\nthese two, three things too. Scene completion and web\nsearch, which probably",
    "start": "2395500",
    "end": "2402970"
  },
  {
    "text": "everybody knows. So, yes, this kind of\ndata, now, kind of a",
    "start": "2402970",
    "end": "2409220"
  },
  {
    "text": "web analysis example. So what these guys were trying\nto do was, every weekly, troll",
    "start": "2409220",
    "end": "2416000"
  },
  {
    "text": "151 million web pages, and\nget about a terabyte of",
    "start": "2416000",
    "end": "2421250"
  },
  {
    "text": "information, and analyze\npage statistics. So that's what they\nare trying to do. Some come up with some\nidea about OK, what",
    "start": "2421250",
    "end": "2428430"
  },
  {
    "text": "is the world happening? How did the pages change\nthe last week? And then try to get a\nglobal view of that.",
    "start": "2428430",
    "end": "2434620"
  },
  {
    "text": "At this point, you have both\nhuge amount of data and pretty large amount of computation\npower, that you had to build a",
    "start": "2434620",
    "end": "2440050"
  },
  {
    "text": "system to do that. This is where you need\na larger system. Here's another interesting\nsystem that people built.",
    "start": "2440050",
    "end": "2447670"
  },
  {
    "text": "So if you have image here, and\nthe image has this nice background, there's\nunfortunate house",
    "start": "2447670",
    "end": "2453960"
  },
  {
    "text": "sitting in the front. So what this says is, OK,\neliminate the house, search a very large database to find\nsimilar images and plop",
    "start": "2453960",
    "end": "2464180"
  },
  {
    "text": "something in there.  OK. So OK.",
    "start": "2464180",
    "end": "2469779"
  },
  {
    "text": "You can get your face with\nsome nice actual eyes, or",
    "start": "2469780",
    "end": "2475170"
  },
  {
    "text": "something like that. Just eliminate all the bad\nparts, and then and then get good parts and put\nthem in there.",
    "start": "2475170",
    "end": "2480809"
  },
  {
    "text": "And so this one, basically, what\nthey'll do was, that's about 396 gigabytes of\nimages out there.",
    "start": "2480810",
    "end": "2490780"
  },
  {
    "text": "And so we had to classify\nimages to get the scene detector, do color similarity,\nand do context matching.",
    "start": "2490780",
    "end": "2497500"
  },
  {
    "text": "So computation, what they're\ndoing is about 50 minutes doing scene matching, 20 minutes\nof local matching",
    "start": "2497500",
    "end": "2505300"
  },
  {
    "text": "trying to find right matching,\nand four minutes composing there, and then you can\nparallelize that and reduce",
    "start": "2505300",
    "end": "2512020"
  },
  {
    "text": "this time to about\nfive minutes. So here's something that's\nhuge amount of data. You'll look a lot of things, you\ndo a lot of processing to",
    "start": "2512020",
    "end": "2518470"
  },
  {
    "text": "figure out we get the right\nthing and these actually keep",
    "start": "2518470",
    "end": "2523640"
  },
  {
    "text": "increasing these images as we\nkeep asking for more, more flexibility, and\nmore accuracy.",
    "start": "2523640",
    "end": "2529269"
  },
  {
    "text": "Things can get higher\nand higher. So really cool application that\nreally require large data",
    "start": "2529270",
    "end": "2534740"
  },
  {
    "text": "and large processing. So, of course, the kind of\nclinical application is probably Google.",
    "start": "2534740",
    "end": "2539940"
  },
  {
    "text": "So in this research, you'll\nget some nice results. So what people say, is this\nwhat two thousand process",
    "start": "2539940",
    "end": "2545460"
  },
  {
    "text": "involved getting this\nquery for you. It takes 200 plus terabytes of\ndata, but this is already old",
    "start": "2545460",
    "end": "2553070"
  },
  {
    "text": "now, this could be\neven higher now. And this takes ten to the ten\ntotal clock cycles for",
    "start": "2553070",
    "end": "2558680"
  },
  {
    "text": "everything that needs\nto happen, for you to get to your query. And you only get one\nsent for the query.",
    "start": "2558680",
    "end": "2565430"
  },
  {
    "text": "So that, not only are doing it\nfast, you are doing a lot of processing, you are doing\nit very cheap. And I think one of the biggest\nthings that Google did is",
    "start": "2565430",
    "end": "2573910"
  },
  {
    "text": "figure how to get that\ndone fast and cheap. And that's why they\nso successful.",
    "start": "2573910",
    "end": "2582010"
  },
  {
    "text": "Oops, sorry, I didn't say\nthis. so it's one second response time, and the cheapest\n$0.05 average the cost, basically.",
    "start": "2582010",
    "end": "2588750"
  },
  {
    "text": "If you compute a time that's\ngoing to cost more than $0.05, is not worth it. And you had to do it that.",
    "start": "2588750",
    "end": "2595090"
  },
  {
    "text": "So, this is Google, spend a lot\nof time how to figure out, how to do this is cheaply.",
    "start": "2595090",
    "end": "2600250"
  },
  {
    "text": " So, this is already validated,\nbut Google is very secretive",
    "start": "2600250",
    "end": "2607010"
  },
  {
    "text": "of what they do, so this is the\nclosest I can figure out. They have three million plus\nprocessers in clusters of 2000",
    "start": "2607010",
    "end": "2615590"
  },
  {
    "text": "plus process, each,\nin each cluster. And what they already did\nwas they went for the cheapest thing.",
    "start": "2615590",
    "end": "2621070"
  },
  {
    "text": "They build entire system\nout of the cheapest parts we can get. x86 processors, the cheapest\ndisks, fairly cheap",
    "start": "2621070",
    "end": "2628040"
  },
  {
    "text": "communication, and\ngain reliability, redundancy though software.",
    "start": "2628040",
    "end": "2633339"
  },
  {
    "text": "So each part, I mean supposing\nin Google, this data center, there's somebody who's\nconstantly growing and",
    "start": "2633340",
    "end": "2639220"
  },
  {
    "text": "changing machines and\nchanging disks. Because there's so\nmuch failure. But that means we have to have\nthe software system to keep",
    "start": "2639220",
    "end": "2646800"
  },
  {
    "text": "the things running in there. And what they have is a\npartitioned workload, all those things are nicely\npartitioned and distributed",
    "start": "2646800",
    "end": "2653580"
  },
  {
    "text": "through Google as this nice file\nsystem and stuff do that. And then you have to do\ncrawling, index generation,",
    "start": "2653580",
    "end": "2660160"
  },
  {
    "text": "index search, document\nretrieval, ad placement, all those things happen in there. Of course, other things like\nMicrosoft and Yahoo, and all",
    "start": "2660160",
    "end": "2667210"
  },
  {
    "text": "those other people have\nsystems like that. So this is kind of what, when\nyou go in here to scale up,",
    "start": "2667210",
    "end": "2674030"
  },
  {
    "text": "there's no other way, you have\nto actually build this huge system to do that. So one thing Google does, going\na little bit technical,",
    "start": "2674030",
    "end": "2680575"
  },
  {
    "text": "is this have a system\ncalled MapReduce. How many of you have seen,\nheard of MapReduce? OK.",
    "start": "2680575",
    "end": "2685609"
  },
  {
    "text": "So there's all this people\nwho know MapReduce. Probably more than I do. So the idea there is you have a\nbunch of data, a huge amount",
    "start": "2685610",
    "end": "2693980"
  },
  {
    "text": "of data in here. And, normally, what you have\nto do is find some",
    "start": "2693980",
    "end": "2699220"
  },
  {
    "start": "2694000",
    "end": "2694000"
  },
  {
    "text": "similarities in lot of\ndata, and do some processing for that. And this is programming model\nset up nicely help doing that.",
    "start": "2699220",
    "end": "2708750"
  },
  {
    "text": "So, that this borrows lot of\nfunctional programming. What that means is I'm not\nchanging data, I'm always",
    "start": "2708750",
    "end": "2715710"
  },
  {
    "text": "taking some data values and\ncreating something new. I'm never changing something\nexisting, that's basically",
    "start": "2715710",
    "end": "2721460"
  },
  {
    "text": "meaning of a functional\nprogram. So MapReduce has\ntwo components. First the map. That means given some input\nvalue and a key in there, what",
    "start": "2721460",
    "end": "2733000"
  },
  {
    "text": "you develop generate is some\nintermediate results and output key.",
    "start": "2733000",
    "end": "2739670"
  },
  {
    "text": "You get bunch of values coming\nthrough, and everybody process each one as separate. And say, OK. So here is the output\nkey, and here's some",
    "start": "2739670",
    "end": "2746370"
  },
  {
    "text": "intermediate value. And then what you do is things\nwith the same output key gets",
    "start": "2746370",
    "end": "2751700"
  },
  {
    "text": "sorted into one list. And then it's going reduce it. And the reducer takes the output\nkey in this list, and",
    "start": "2751700",
    "end": "2759480"
  },
  {
    "text": "say, OK, look I'm going to\nprocess the entire list down to one element or\nsmall data item.",
    "start": "2759480",
    "end": "2766109"
  },
  {
    "text": "OK? So let's go through\na little bit more, digging deep into that. And so you map, basically get a\nhuge amount of records from",
    "start": "2766110",
    "end": "2778200"
  },
  {
    "text": "the data source, and it fits\ninto this map function, and it",
    "start": "2778200",
    "end": "2785359"
  },
  {
    "text": "produce intermediate results. And the reduced function,\nbasically, combines the data,",
    "start": "2785360",
    "end": "2791250"
  },
  {
    "text": "and all the folding-- let me give you an example. I think that will\nshow you better.",
    "start": "2791250",
    "end": "2797190"
  },
  {
    "text": "So here is kind of\narchitecture. So you have a huge amount\nof data resources. You have many, many\nsources in here.",
    "start": "2797190",
    "end": "2803380"
  },
  {
    "text": "And each of the data comes in\nto that, and the map will basically distributed by keys\nand values, so there could be",
    "start": "2803380",
    "end": "2808430"
  },
  {
    "text": "millions and values. And then, what you have to do\nis, wait until all the data,",
    "start": "2808430",
    "end": "2813480"
  },
  {
    "text": "has done that. And then cleared for\nthe number of keys here, number of reducers.",
    "start": "2813480",
    "end": "2819620"
  },
  {
    "text": "So hopefully you wont\nhave a lot of keys. If you have more than two\nkeys, you don't get that parallelism because then you\nwould be too huge lists.",
    "start": "2819620",
    "end": "2825940"
  },
  {
    "text": "And then, again, what happens\nis these keys get paired to reducers to come the final\nvalue in here.",
    "start": "2825940",
    "end": "2833660"
  },
  {
    "text": "So what's the parallelism\nhere? What makes the parallelism\ngo high? Or, not have enough\nparallelism?",
    "start": "2833660",
    "end": "2840090"
  },
  {
    "text": " Yeah, I mean, first of all,\nyou need to have enough,",
    "start": "2840090",
    "end": "2845810"
  },
  {
    "text": "hopefully, multiple data stores\nso you get a lot of parallelism coming in here. Map is easily parallelizable,\nbecause each choosing in here.",
    "start": "2845810",
    "end": "2853660"
  },
  {
    "text": "Reducer is the problem\nI think one. Because if you have too many\nkeys, too little keys, you are in trouble.",
    "start": "2853660",
    "end": "2859820"
  },
  {
    "text": "The other interesting thing\nin here is there's a big shuffling between here. So that means data has to\ngo all over the place.",
    "start": "2859820",
    "end": "2866470"
  },
  {
    "text": "So it's not something that, you\ngot data and you process to the end you got data you\nprocess to end, every data has",
    "start": "2866470",
    "end": "2872040"
  },
  {
    "text": "to kind of cross back, and so\nthat's a huge amount of communication in here that could\nbe bottle-necked too. That can be bottle-necked, keys\ncan be bottle-necked.",
    "start": "2872040",
    "end": "2880200"
  },
  {
    "text": "So map function runs parallel,\ncreating different things. Reduced functions also run\nparallel for each key.",
    "start": "2880200",
    "end": "2886039"
  },
  {
    "text": "And all values are basically\nprocessed independently because of that. Also, the bottle-neck is reduce\nphase can't start until",
    "start": "2886040",
    "end": "2893640"
  },
  {
    "text": "all the map is done, and also\nall the data gets shuffled around with that. So here's an interesting\nexample. What I am trying to do is I am\ntrying to count the number of",
    "start": "2893640",
    "end": "2900630"
  },
  {
    "text": "words in assume huge amount\nof web pages. So what I can do is in the map,\nI get each page in here--",
    "start": "2900630",
    "end": "2910800"
  },
  {
    "start": "2909000",
    "end": "2909000"
  },
  {
    "text": "I thread through the page\nemitting each word as my key and the count as one.",
    "start": "2910800",
    "end": "2917230"
  },
  {
    "text": "Because I only get one thing. And then my reducer\nis basically--",
    "start": "2917230",
    "end": "2922930"
  },
  {
    "text": "my key is each word. So if I have a million words, I\ncan have a million reducers.",
    "start": "2922930",
    "end": "2928050"
  },
  {
    "text": "And the reducer basically takes\nall those things-- it's not that fun because\neverything is all at number one.",
    "start": "2928050",
    "end": "2933290"
  },
  {
    "text": "Because we count at one. And then basically keep adding\nup how many things for each",
    "start": "2933290",
    "end": "2938410"
  },
  {
    "text": "word came about and put\nup the results. So you can say, OK, look, for\nthe entire corpus of data, I",
    "start": "2938410",
    "end": "2944310"
  },
  {
    "text": "had this many words count, this\nmany word occurrences, this many all for each word.",
    "start": "2944310",
    "end": "2949990"
  },
  {
    "text": "You get a word count. So basically trying to create\na histogram here and",
    "start": "2949990",
    "end": "2956960"
  },
  {
    "text": "MapReducer provides a very nice\ninterface to do that. And it's very nice, high level,\nand it provides this",
    "start": "2956960",
    "end": "2964560"
  },
  {
    "text": "nice infrastructure to run this\nin parallel in here and",
    "start": "2964560",
    "end": "2972200"
  },
  {
    "text": "do all the communication\nnecessary, figure out how many",
    "start": "2972200",
    "end": "2977230"
  },
  {
    "text": "reducers to run, look at\nmachines to run them, produce the result, and give\nyou the result. So this is a nice infrastructure\nGoogle has",
    "start": "2977230",
    "end": "2983372"
  },
  {
    "text": "built in there. ",
    "start": "2983372",
    "end": "2988470"
  },
  {
    "text": "So in this level, when\nyou go to this-- this is the data center level. What do you have\nto do to scale?",
    "start": "2988470",
    "end": "2995789"
  },
  {
    "text": "You need to distribute data. And you need to parallelize\nbecause if all the data is in",
    "start": "2995790",
    "end": "3001290"
  },
  {
    "text": "one machine, it doesn't help. And you need to have parallelism\nto scale everything. Another interesting thing you\ncan do is approximate.",
    "start": "3001290",
    "end": "3010039"
  },
  {
    "text": "So what that means is normally\nwhen you calculate, when",
    "start": "3010040",
    "end": "3015090"
  },
  {
    "text": "everybody has exactly the same\ndata all the time-- because when you write the memory,\neverybody sees that memory--",
    "start": "3015090",
    "end": "3021520"
  },
  {
    "text": "you have the perfect knowledge\nof the word. And in a distributed system,\ngetting perfect knowledge is",
    "start": "3021520",
    "end": "3026809"
  },
  {
    "text": "very expensive. That means every time something\nchanges, you have to send everybody that data. And one way that people really\nmake these systems run fast,",
    "start": "3026810",
    "end": "3035019"
  },
  {
    "text": "you say, wait a minute, if\nsomebody doesn't have the perfect knowledge, if there's\na little bit of discrepancy between something, I am OK.",
    "start": "3035020",
    "end": "3043859"
  },
  {
    "text": "Assume you have a new-- you changed your--",
    "start": "3043860",
    "end": "3048970"
  },
  {
    "text": "we'll say-- web page and added a couple\nof new words in there. Next second, the search\ndoesn't see it.",
    "start": "3048970",
    "end": "3055970"
  },
  {
    "text": "Nobody's going to complain. And then you can deliver that.",
    "start": "3055970",
    "end": "3060980"
  },
  {
    "text": "If you do a search, you'll\nfind something. But somebody else doesn't do it\nbecause that data haven't propagated that to both\nof the things.",
    "start": "3060980",
    "end": "3067350"
  },
  {
    "text": "Nobody's going to complain and\nsay, wait a minute, I found it, but he didn't. It can have a little\nbit of a lag.",
    "start": "3067350",
    "end": "3073140"
  },
  {
    "text": "And that can be really,\nreally useful in these kind of systems. Because every time something\nhappened, you don't have to",
    "start": "3073140",
    "end": "3079492"
  },
  {
    "text": "keep updating. But tell me a system that you\ncan't actually do that. ",
    "start": "3079492",
    "end": "3086550"
  },
  {
    "text": "Play it a little bit\nfast and easy.",
    "start": "3086550",
    "end": "3091972"
  },
  {
    "text": "AUDIENCE: Stock trading. PROFESSOR: Stock trading. Yeah, that's something\nbasically, if you say, yeah, you might get it too,\nyou might get it--",
    "start": "3091972",
    "end": "3098910"
  },
  {
    "text": "and that doesn't work. Basically, stock trading has\nthis very particular thing",
    "start": "3098910",
    "end": "3104130"
  },
  {
    "text": "because when it does submit,\nwe'll say, a sale order,",
    "start": "3104130",
    "end": "3110194"
  },
  {
    "text": "within a certain amount of time,\nit has to get matched up and has to be announced\nto both people.",
    "start": "3110195",
    "end": "3116859"
  },
  {
    "text": "And also, there are a lot of\nother constraints like if the machine goes down. Either trade has to be everybody\nsaw the trade or",
    "start": "3116860",
    "end": "3124760"
  },
  {
    "text": "nobody saw it. You can't say-- somebody\nsays, I sold it. And another guy says,\nno, I didn't buy it.",
    "start": "3124760",
    "end": "3131520"
  },
  {
    "text": "And when you have millions of\nbillions of dollars back and forth, that doesn't\nreally work. So for that, there's this thing\ncalled transactions.",
    "start": "3131520",
    "end": "3140250"
  },
  {
    "text": "So transactions is an\ninteresting way-- a lot of databases have this\ntransaction. Transactions say, look,\nI am doing this",
    "start": "3140250",
    "end": "3146050"
  },
  {
    "text": "very complicated thing. ",
    "start": "3146050",
    "end": "3151500"
  },
  {
    "text": "And I cannot have this\nintermediate state going on. So what transactions say is,\nfirst, tell me everything I",
    "start": "3151500",
    "end": "3158720"
  },
  {
    "text": "want to do in the transaction. So it might be I want to sell\na stock, I want to buy a stock, whatever. And then at some point when you\ncommit the transaction,",
    "start": "3158720",
    "end": "3168250"
  },
  {
    "text": "you either say, OK, everything\nworked, good, the entire thing gets committed. And you are done. Or it can explicitly\nreject it.",
    "start": "3168250",
    "end": "3177170"
  },
  {
    "text": "It can come back and say,\nlook, I can't do this transaction. Now sorry, you can restart it. So you can accept and reject.",
    "start": "3177170",
    "end": "3182960"
  },
  {
    "text": "But then the nice thing about\nthat is then every one single-- it's like atomicity.",
    "start": "3182960",
    "end": "3188020"
  },
  {
    "text": "Every one action doesn't have\nto happen immediately or happen as a group. You can say, OK, I'm doing\na bunch of action in the",
    "start": "3188020",
    "end": "3194589"
  },
  {
    "text": "transaction. And then finally, I can come\nin and if it works, great. So what might be a reason you\nmight not be able to commit a",
    "start": "3194590",
    "end": "3201950"
  },
  {
    "text": "transaction if you\ndo a transaction? ",
    "start": "3201950",
    "end": "3210695"
  },
  {
    "text": "Anybody else want to answer? When you say, I want a\ntransaction, I want to commit something, what might say--",
    "start": "3210695",
    "end": "3215710"
  },
  {
    "text": " so here's an interesting\nthing. In the stock trading\ntype world--",
    "start": "3215710",
    "end": "3222220"
  },
  {
    "text": "so assume I want to\nsell something. Let's look at the airline\nreservation. So assume I have an airline\nseat in here.",
    "start": "3222220",
    "end": "3228690"
  },
  {
    "text": "And if two people want to try to\nresell that seat, I can do",
    "start": "3228690",
    "end": "3234280"
  },
  {
    "text": "all this processing in parallel\nfor everybody until I come to the commit point.",
    "start": "3234280",
    "end": "3239750"
  },
  {
    "text": "That means I can look at\neverybody after you enter the data, do the price, all those\nthings separately",
    "start": "3239750",
    "end": "3246580"
  },
  {
    "text": "for the same seat. But then when you come to the\ncommit point, you say, can I commit the transaction?",
    "start": "3246580",
    "end": "3251750"
  },
  {
    "text": "At that point, only at that\npoint, they have to figure out whether there's a conflict\nin here. And at some point, if\nthere's a conflict,",
    "start": "3251750",
    "end": "3257770"
  },
  {
    "text": "it says, oops, can't. One transaction has\nto get aborted. The nice thing about that is\nmost of the time people are",
    "start": "3257770",
    "end": "3263675"
  },
  {
    "text": "not going to fight for\nthe same seat. And then things can proceed\nin parallel. You don't have to wait. Otherwise, if you do that,\nthere might only one seat",
    "start": "3263675",
    "end": "3271050"
  },
  {
    "text": "assignment at a time\nyou can do. And that's really not\ngoing to scale. So everybody tried to\nget their seat. They go to the end, and they\nsay, can I proceed?",
    "start": "3271050",
    "end": "3277590"
  },
  {
    "text": "And at that point, you check\nwhether there's a conflict. And if there's a conflict,\none guy backs out. So that's the transaction.",
    "start": "3277590",
    "end": "3283434"
  },
  {
    "text": "Oops, I'm going to get\nrebooted I guess. ",
    "start": "3283435",
    "end": "3289400"
  },
  {
    "text": "So when you go to planet scale,\nyou can get even into",
    "start": "3289400",
    "end": "3296049"
  },
  {
    "text": "more issues, things like-- what could be a planet scale\nthing out there? ",
    "start": "3296050",
    "end": "3305190"
  },
  {
    "text": "What's an interesting planet\nscale thing that you can think of? ",
    "start": "3305190",
    "end": "3310690"
  },
  {
    "text": "Single computation that has to\nhappen in the planet scale. ",
    "start": "3310690",
    "end": "3321300"
  },
  {
    "text": "Something like Internet\nnaming system. It has to work everywhere\nin the entire planet. Or something like Internet\nrouting.",
    "start": "3321300",
    "end": "3327640"
  },
  {
    "text": "There has to be an algorithm\nthat has to work. The entire world has to\ncooperate and then make sure",
    "start": "3327640",
    "end": "3333260"
  },
  {
    "text": "that all the traffic actually\ngoes to the right place. So there's a lot more\nissues, interesting things show up in here.",
    "start": "3333260",
    "end": "3340609"
  },
  {
    "text": "So things like Seti@Home\ntype stuff-- these are a little bit dated\nthese days, that happens--",
    "start": "3340610",
    "end": "3348290"
  },
  {
    "text": "distributed all across\nthe place. So if you do planet scale, it\nhas to be truly distributed.",
    "start": "3348290",
    "end": "3355520"
  },
  {
    "text": "There cannot be any global\noperations, no single bottleneck. And you have to have\ndistributed",
    "start": "3355520",
    "end": "3360795"
  },
  {
    "text": "view with stale data. You cannot say, look,\neverybody has to have the same data.",
    "start": "3360795",
    "end": "3365850"
  },
  {
    "text": "You have to have everything\ndistributed. And it has to add up to load\ndistributions because things",
    "start": "3365850",
    "end": "3370880"
  },
  {
    "text": "can keep changing in there. So what I'm going to do next is\ntrying to give you a little",
    "start": "3370880",
    "end": "3377760"
  },
  {
    "text": "bit of a case study that shows\nyou some interesting properties that show\nup when you start",
    "start": "3377760",
    "end": "3384580"
  },
  {
    "text": "building at that scale. And this has some planet scale\ntype properties, some cluster",
    "start": "3384580",
    "end": "3390590"
  },
  {
    "text": "properties, whatever. And I will probably first\ndescribe this interesting problem and then show what kind\nof solutions that came",
    "start": "3390590",
    "end": "3397810"
  },
  {
    "text": "through, so to give you\na perspective for a problem in here.",
    "start": "3397810",
    "end": "3403630"
  },
  {
    "text": "Any questions up to this far\nfor distributed systems?  It's hard to do distributed\nsystems in one lecture.",
    "start": "3403630",
    "end": "3411020"
  },
  {
    "text": "There are almost closest for\ndistributed systems. But this will give you a\nfeel for some of it.",
    "start": "3411020",
    "end": "3418890"
  },
  {
    "text": "So the case study here\nis from VMware. It's called deduplication\nat global space.",
    "start": "3418890",
    "end": "3427500"
  },
  {
    "text": "And the problem shows up when\nyou're trying to move virtual machines across the world.",
    "start": "3427500",
    "end": "3433330"
  },
  {
    "text": "You have this virtual machine. So what virtualization did was\nit took a piece of hardware and it converted\nit into a file.",
    "start": "3433330",
    "end": "3440690"
  },
  {
    "text": "So each machine is now a file. When you have a file, like\nhardware, there are a lot of cool things you can do then.",
    "start": "3440690",
    "end": "3447390"
  },
  {
    "text": "You can replicate those files. So suddenly, instead of one\nmachine, you've got tens of hundreds of machines.",
    "start": "3447390",
    "end": "3452930"
  },
  {
    "text": "You can move those\nthings in here. And of course, you can start\nanother machines all over.",
    "start": "3452930",
    "end": "3458340"
  },
  {
    "text": "So once you are able to move\nthese things, the issue becomes how to move those things\naround and what's the cost of moving something.",
    "start": "3458340",
    "end": "3464400"
  },
  {
    "text": " And also, you can\nstore it, store those things in a database.",
    "start": "3464400",
    "end": "3470070"
  },
  {
    "start": "3470000",
    "end": "3470000"
  },
  {
    "text": " The interesting thing that's\nhappening these",
    "start": "3470070",
    "end": "3476260"
  },
  {
    "text": "days is cloud computing. Cloud means there's all these\nproviders all over the place,",
    "start": "3476260",
    "end": "3481484"
  },
  {
    "text": "saying, I have processing\npower, I can give you some of them. Amazon does something easy too,\nbut Verizon is trying to",
    "start": "3481485",
    "end": "3486550"
  },
  {
    "text": "do, everybody is trying\nto do that. So if you want to have the best\nmarket, what you want to",
    "start": "3486550",
    "end": "3493940"
  },
  {
    "text": "do is have the elasticity to\nmove from cloud to cloud for many reasons. So sometimes the cloud\nmight be too small.",
    "start": "3493940",
    "end": "3500600"
  },
  {
    "text": "You want to get to a bigger\ncloud in there. Or you want to be\nnear the users. So in the daytime in the US, you\nwant probably to move the",
    "start": "3500600",
    "end": "3508350"
  },
  {
    "text": "machines through US. At night, there might be users\nin China, so you want to move your compute nearer China. Because it will be closer to the\npeople who are using it.",
    "start": "3508350",
    "end": "3515099"
  },
  {
    "text": "So something like that, you\ncan move around there. Or you want to find the\ncheaper provider. If somebody comes and says,\nlook, I can give you compute",
    "start": "3515100",
    "end": "3520280"
  },
  {
    "text": "power $0.10 cheaper than what\nyou are getting, OK, I want to move to that guy.",
    "start": "3520280",
    "end": "3526880"
  },
  {
    "text": "And also, to amortize the risk\nof catastrophic failure. If there's a hurricane\napproaching somewhere, I might",
    "start": "3526880",
    "end": "3532710"
  },
  {
    "text": "want to move to a data center\nthat might be out of the way. And I want to do that. And the interesting thing there\nis a lot of things.",
    "start": "3532710",
    "end": "3540956"
  },
  {
    "text": "But when you say, application in\nthe cloud, it's a machine,",
    "start": "3540956",
    "end": "3546860"
  },
  {
    "text": "a machine basically in\na virtual machine. At the same time, a virtual\nmachine has to get moved around, not your small\napplication.",
    "start": "3546860",
    "end": "3553109"
  },
  {
    "text": "The entire thing has\nto move around. And virtual machines\nare hefty. Because it has an operating\nsystem,",
    "start": "3553110",
    "end": "3558630"
  },
  {
    "text": "it has all the software. There's so many things now. Then your data and your state.",
    "start": "3558630",
    "end": "3564160"
  },
  {
    "text": "There are a lot of things\nin the machine in here. And all those things have to get\nmoved around, so that can be expensive.",
    "start": "3564160",
    "end": "3569900"
  },
  {
    "text": "So yes, interesting experiment\nin here. So the idea here is to try to\nmove something from Boston to",
    "start": "3569900",
    "end": "3576530"
  },
  {
    "text": "Palo Alto on a 2 megabytes\nnetwork. And there are a bunch\nof different virtual",
    "start": "3576530",
    "end": "3582320"
  },
  {
    "text": "machines in here, VMs. And it takes-- whatever-- 3,000 minutes to move these\nmachines from--",
    "start": "3582320",
    "end": "3592670"
  },
  {
    "text": "this is 500 minutes. That means what? ",
    "start": "3592670",
    "end": "3601050"
  },
  {
    "text": "Some hours to move them. Some hours to move these\nmachines around. And then what you say, look, the\nmachines are heavy, big.",
    "start": "3601050",
    "end": "3608800"
  },
  {
    "text": "Why can't you first compress\nthe machine? So you can use something like\nnormal compression. So blue is basically compress,\nmove the machine, and",
    "start": "3608800",
    "end": "3617250"
  },
  {
    "text": "decompress. So here is something\ninteresting. This is a very fast\ncompression.",
    "start": "3617250",
    "end": "3624380"
  },
  {
    "text": "You did really well, you\nare moving there. If you want a better\ncompression, you say, I'm going to do a full, best\ncompression I can do, it's",
    "start": "3624380",
    "end": "3631760"
  },
  {
    "text": "actually slower. Because the trouble is the\ncompression time is so high, the reduction is not\nusable in here.",
    "start": "3631760",
    "end": "3638570"
  },
  {
    "text": "So you try to compress, you\nspend most of the time compressing. So actually, this is even\nslower that just sending without compression.",
    "start": "3638570",
    "end": "3644369"
  },
  {
    "text": "So compression is important,\ncompression is useful. So can you do better than a\nnormal compression in here? How can you do better?",
    "start": "3644370",
    "end": "3651070"
  },
  {
    "text": "So some key observations\nin here. So a large part of these\nfiles are executables.",
    "start": "3651070",
    "end": "3657410"
  },
  {
    "text": "You have your Linux kernel,\nwhatever, to all those executables hitting in there. And basically, that's\nmonoculturing the world.",
    "start": "3657410",
    "end": "3667460"
  },
  {
    "text": "There are no million different\nexecutables. You are a Linux kernel, there's\nonly a certain amount",
    "start": "3667460",
    "end": "3673030"
  },
  {
    "text": "of versions. Microsoft XP, there are certain\ntypes of versions. So even though there are\nmillions of machines, inside",
    "start": "3673030",
    "end": "3680335"
  },
  {
    "text": "the millions of machines,\nthere aren't millions of different applications. There's only hundreds of\ndifferent applications.",
    "start": "3680335",
    "end": "3685350"
  },
  {
    "text": "And so your motion moves. If you think about it, you are\nmoving the same thing again and again and again. Can you take advantage\nof that?",
    "start": "3685350",
    "end": "3691309"
  },
  {
    "text": "And there's even substantial\nredundancy in each of these. So this is very interesting.",
    "start": "3691310",
    "end": "3697190"
  },
  {
    "text": "If you have a Windows machine,\neach DLL has three copies. So you have the copy, and then\nthe Installer has a copy.",
    "start": "3697190",
    "end": "3703990"
  },
  {
    "text": "And then there's another copy\nin the next version to basically back out,\nso undo copy.",
    "start": "3703990",
    "end": "3709049"
  },
  {
    "text": "So each thing is kept\nthree copies. So every big thing,\nthey're seeing multiple copies in there. So that part is there also.",
    "start": "3709050",
    "end": "3714609"
  },
  {
    "text": "Even within a single disk, there\nis redundancy in here. And another interesting thing\nis many of the disks have a",
    "start": "3714610",
    "end": "3723250"
  },
  {
    "text": "large amount of zero pages. So if you send something\nuncompressed, you send a huge amount of zeros. So you are waiting for zeros\nto get in there.",
    "start": "3723250",
    "end": "3731120"
  },
  {
    "text": "Even easy compression can get to\nthose zeros, but this is a large chunk of data in here. And so the interesting thing\nis if you take one virtual",
    "start": "3731120",
    "end": "3739560"
  },
  {
    "text": "machine, this is the number\nof non-zero blocks. And this is the number\nof unique blocks. So unique blocks are smaller\nthan non-zero blocks.",
    "start": "3739560",
    "end": "3747150"
  },
  {
    "text": "But if you keep adding more\nand more virtual machines, then of course, the number of\ntotal blocks keeps going up.",
    "start": "3747150",
    "end": "3753520"
  },
  {
    "text": "But the unique blocks doesn't\nkeep increasing. That means the second Linux box\nyou add, there's not much",
    "start": "3753520",
    "end": "3762720"
  },
  {
    "text": "new in there. So if you look at that, what\nhappens is the first guy has about 80% things are unique.",
    "start": "3762720",
    "end": "3768810"
  },
  {
    "text": "When you keep adding things,\nit's about only 30% is unique after you add. Because it's the same program. Only the data is different\nas you keep adding.",
    "start": "3768810",
    "end": "3775700"
  },
  {
    "text": "So can you really take\nadvantage of that? So that is where deduplication\ncomes in.",
    "start": "3775700",
    "end": "3781349"
  },
  {
    "text": "So deduplication says, I have\nthis data, I have a lot of redundant data. So A B, A B, A B is redundant.",
    "start": "3781350",
    "end": "3787380"
  },
  {
    "text": "So what you want to do is break\nit up to some kind of blocks in here. And then one easy way to\ndo is calculate a hash.",
    "start": "3787380",
    "end": "3795350"
  },
  {
    "text": "Because you don't want\nto compare blocks. That's too much. N squared comparison of blocks\nis a lot of comparison. You can have some kind of\nhash calculated for",
    "start": "3795350",
    "end": "3802180"
  },
  {
    "text": "each of these blocks. And then you can compare\nthe hashes. And if the hashes are\nthe same, they are the same blocks.",
    "start": "3802180",
    "end": "3808190"
  },
  {
    "text": "And then what you can do is\nyou can eliminate most of these blocks in there and then\nkeep hashes for each block--",
    "start": "3808190",
    "end": "3815790"
  },
  {
    "text": "only the hash. And then what you can do is you\ncan only keep the unique",
    "start": "3815790",
    "end": "3820900"
  },
  {
    "text": "blocks in here. So even though you have nine in\nhere, only five different unique blocks are there.",
    "start": "3820900",
    "end": "3825910"
  },
  {
    "text": "So that's a nice way\nof deduplicating. So you actually have what you\ncall recipe, a common block",
    "start": "3825910",
    "end": "3831275"
  },
  {
    "text": "store in here. So one way to do that is you\ncan have a recipe on common block store for each of\nthe systems in here.",
    "start": "3831275",
    "end": "3839039"
  },
  {
    "text": "That's the tradition\nof deduplication. Or what you can do is have\neverybody keep a recipe and",
    "start": "3839040",
    "end": "3844930"
  },
  {
    "text": "only have one common\nblock store. Just keep one, single common\nblock store, and everybody have a recipe, or probably\ncache of a recipe.",
    "start": "3844930",
    "end": "3851910"
  },
  {
    "text": "So by doing that, you can even\nreduce a huge amount of the things happening in here.",
    "start": "3851910",
    "end": "3859480"
  },
  {
    "text": "So the interesting thing is if\nyou are keeping one common block store, who can keep,\nwho can manage? That's the interesting\nquestion in here.",
    "start": "3859480",
    "end": "3866180"
  },
  {
    "text": "So can you keep instead of\ncommon block store for each processor, each computer, can\nyou keep the common block",
    "start": "3866180",
    "end": "3874319"
  },
  {
    "text": "store for the entire world? So if you find most of the\ncommon blocks in the world, keep one store.",
    "start": "3874320",
    "end": "3880130"
  },
  {
    "text": "And the nice thing about\nthat is then I can go anywhere in the world. I can ask for the common blocks\nfor the common things.",
    "start": "3880130",
    "end": "3886880"
  },
  {
    "text": "I can populate it myself. ",
    "start": "3886880",
    "end": "3892900"
  },
  {
    "text": "So here's this interesting\nsystem called the Bonsai. What they did was--",
    "start": "3892900",
    "end": "3897930"
  },
  {
    "text": "so if you have a block in here,\nyou calculate a hash function in here,\nget a hash key.",
    "start": "3897930",
    "end": "3902970"
  },
  {
    "text": "So what that means,\nthe hash key can uniquely access this block. And then what you want to do\nis ask that you want to",
    "start": "3902970",
    "end": "3909170"
  },
  {
    "text": "compress this block. This additional step, I'll\nexplain later why it's needed.",
    "start": "3909170",
    "end": "3914700"
  },
  {
    "text": "So the other thing you can do\nis you can get a second hash key and use that as a private\nkey to encrypt this block.",
    "start": "3914700",
    "end": "3924160"
  },
  {
    "text": "Because you calculate\ntwo hash keys. One is the hash key\nto identify. The other one is a private key\nto encrypt this block. And then what you can look at\nis this global store to see",
    "start": "3924160",
    "end": "3931440"
  },
  {
    "text": "whether this hash key exists. If the hash key exists,\nthen say, I got the page, here is the page.",
    "start": "3931440",
    "end": "3936870"
  },
  {
    "text": "That's the encrypted page. And each page will\nhave a unique ID. And so here's my unique ID.",
    "start": "3936870",
    "end": "3942490"
  },
  {
    "text": "If you find the page in here,\nwhat you can do is you can only store UID and this\nprivate key and",
    "start": "3942490",
    "end": "3949230"
  },
  {
    "text": "get rid of my page. So storing UID and private key\nis sufficient to get my page",
    "start": "3949230",
    "end": "3955040"
  },
  {
    "text": "and unencrypt it. Why do you think I have\nto compress here? Why do I have to basically\ndo encrypt here?",
    "start": "3955040",
    "end": "3963170"
  },
  {
    "text": "What's the interesting thing\nabout encryption? ",
    "start": "3963170",
    "end": "3968270"
  },
  {
    "text": "Why encrypt? Assume this is global. ",
    "start": "3968270",
    "end": "3977260"
  },
  {
    "text": "Because if you don't encrypt, it\nmight be a common page, but",
    "start": "3977260",
    "end": "3983520"
  },
  {
    "text": "it might not be something you\nwant everybody to know. So assume a large company\nlike Google.",
    "start": "3983520",
    "end": "3994640"
  },
  {
    "text": "President of Google, Larry Page,\nsends everybody emails, saying, this is very private,\nbut here is something that's",
    "start": "3994640",
    "end": "4000420"
  },
  {
    "text": "happening in the company. And it will get into everybody's\nmailbox. And suddenly, it becomes-- aha-- a common page.",
    "start": "4000420",
    "end": "4006050"
  },
  {
    "text": "And it gets sucked in\nthe world because of the common page. And now everybody can see that,\nand that's not good.",
    "start": "4006050",
    "end": "4012560"
  },
  {
    "text": "But now if you have\nthis private key-- if you don't have the private\nkey, I can't decrypt that.",
    "start": "4012560",
    "end": "4017620"
  },
  {
    "text": "So what happens is-- let me go through what\nyou can do in here. And then what can happen is if\nyou had these two, UID and",
    "start": "4017620",
    "end": "4025760"
  },
  {
    "text": "private key, you can go to the\nglobal storage and say, here's",
    "start": "4025760",
    "end": "4031460"
  },
  {
    "text": "the UID, give me the page. It has a page. It better have the page\nfor that UID. Get the page out of that. And then now I can use my\nprivate key to decrypt it.",
    "start": "4031460",
    "end": "4039310"
  },
  {
    "text": "And then of course, I\ncan decompress it in the original page. So by doing that, I can have\nthis global system that keeps",
    "start": "4039310",
    "end": "4047550"
  },
  {
    "text": "common pages in there\nand store them. I can basically, really\neliminate the storage.",
    "start": "4047550",
    "end": "4053665"
  },
  {
    "text": "Because the nice thing is this\ncould be, we'll say, 2K pages. And this is 64 bit, and this\nis probably 256 bit.",
    "start": "4053665",
    "end": "4061800"
  },
  {
    "text": "So there's a huge compression\nof data in there. ",
    "start": "4061800",
    "end": "4070320"
  },
  {
    "text": "So here are the kinds of\ndecisions you are to make. For example, hash key. So each page is represented\nby a hash key.",
    "start": "4070320",
    "end": "4075760"
  },
  {
    "text": " But you can have two hash keys,\ntwo pages mapping to the",
    "start": "4075760",
    "end": "4084940"
  },
  {
    "text": "same hash key. So my god, you're not unique. So why is it OK? ",
    "start": "4084940",
    "end": "4092692"
  },
  {
    "text": "AUDIENCE: Low probability. PROFESSOR: Very low\nprobability. And in fact, what they looked\nat was they calculated the disk failure.",
    "start": "4092692",
    "end": "4099449"
  },
  {
    "text": "There's a higher failure of disk\nfailing and losing data than hash collision.",
    "start": "4099450",
    "end": "4105080"
  },
  {
    "text": "So you can say, look, you're\nkeeping that in the hard drive, so there could be more\nchance of disk failure than hash collision.",
    "start": "4105080",
    "end": "4110140"
  },
  {
    "text": "So therefore, hash key is-- you can do that, low enough\nprobability, you can get away with that.",
    "start": "4110140",
    "end": "4116386"
  },
  {
    "text": "Actually, I want to skip the\nrest of this in there. So here is the comparison how\nmuch compression you can give.",
    "start": "4116386",
    "end": "4125869"
  },
  {
    "text": "Some of them, you almost\ncan compress 100%. Because if you have a newly\ninstalled Linux box with very",
    "start": "4125870",
    "end": "4132220"
  },
  {
    "text": "little data, everything\nis in the global. So by doing that, basically,\nhere is the communication.",
    "start": "4132220",
    "end": "4138649"
  },
  {
    "text": "The compression is cheap. You don't have to do too much\nbecause you just do this hash comparison to do that.",
    "start": "4138649",
    "end": "4144219"
  },
  {
    "text": "And then now the communication\ntime is even reduced because you communicate a lot less.",
    "start": "4144220",
    "end": "4150490"
  },
  {
    "text": "And then you expand. So all these three are actually\nnow much faster to",
    "start": "4150490",
    "end": "4156899"
  },
  {
    "text": "send a machine across. So here is a total size\nof all the VMs.",
    "start": "4156899",
    "end": "4162850"
  },
  {
    "text": "The interesting thing is if you\ncompress within, if you just do compression, most\nof this is zero blocks.",
    "start": "4162850",
    "end": "4170630"
  },
  {
    "text": "You can eliminate the zeros\nand do a simple compression in here. And if you do local\ndeduplication, if you",
    "start": "4170630",
    "end": "4175939"
  },
  {
    "text": "eliminate that, and\nif you do global, you'll get to this point. So you get to about basically\n30% of all your data.",
    "start": "4175939",
    "end": "4184060"
  },
  {
    "text": "And yeah, there's more data\nin here, but just-- ",
    "start": "4184060",
    "end": "4190109"
  },
  {
    "text": "So that's an interesting global\nlevel system that",
    "start": "4190109",
    "end": "4197000"
  },
  {
    "text": "people are building today. And I think if these kind of\nsystems appear in many",
    "start": "4197000",
    "end": "4202590"
  },
  {
    "text": "different places. These days, a lot of people are\nbuilding things like cell phone games and things like\nthat, has this huge back",
    "start": "4202590",
    "end": "4209760"
  },
  {
    "text": "stores, back computation. All those things have this large\nscalability in there.",
    "start": "4209760",
    "end": "4214790"
  },
  {
    "text": "And so the nice thing about\nperformance engineering is if your application doesn't require\na huge amount of",
    "start": "4214790",
    "end": "4221699"
  },
  {
    "text": "computation or very fast\nprocessing, if you're going to have millions and millions of\nusers, or if you're expecting",
    "start": "4221700",
    "end": "4227880"
  },
  {
    "text": "millions of users, then building\nthese systems, and understanding, and building scalability is really important.",
    "start": "4227880",
    "end": "4235460"
  },
  {
    "text": "And a lot of the things we\nlearned in this class is directly applicable there.",
    "start": "4235460",
    "end": "4240760"
  },
  {
    "text": "So I have... Any other questions before you\nguys can go finish your",
    "start": "4240760",
    "end": "4248289"
  },
  {
    "text": "project report and go have a\nnice Thanksgiving dinner? ",
    "start": "4248290",
    "end": "4254560"
  },
  {
    "text": "So everybody is thinking that\nthey will be able to get a good handle on what they are\ndoing for the final project?",
    "start": "4254560",
    "end": "4262660"
  },
  {
    "text": "Oh come on, there are so many\ncool things you can do with this project. ",
    "start": "4262660",
    "end": "4269214"
  },
  {
    "text": "AUDIENCE: We're working on it.  PROFESSOR: And there are--",
    "start": "4269214",
    "end": "4274410"
  },
  {
    "text": "whatever-- three or four iPod\nNanos waiting. So it makes a lot of\nsense to actually",
    "start": "4274410",
    "end": "4280910"
  },
  {
    "text": "really focus this one. This is a fun project. This is, in fact,\na fun project. Because talk to these guys\nwhat they did last year.",
    "start": "4280910",
    "end": "4288410"
  },
  {
    "text": "People did a lot of interesting\nthings. Because we gave you freedom to\nactually even change the algorithms.",
    "start": "4288410",
    "end": "4294610"
  },
  {
    "text": "So you can actually look\nat the algorithm. If you know a little bit of\nphysics and graphics type",
    "start": "4294610",
    "end": "4299720"
  },
  {
    "text": "stuff, look at them and say,\nlook, can I even reduce computation of how the\ncomputation is being done?",
    "start": "4299720",
    "end": "4304980"
  },
  {
    "text": "So people got a lot of wins\nby doing things like that. And of course, parallelization\nmatters.",
    "start": "4304980",
    "end": "4310345"
  },
  {
    "text": "And there are a lot of\noptimization possibilities in this piece of code. So take a look at that.",
    "start": "4310346",
    "end": "4317199"
  },
  {
    "text": "Just have a plan. Just don't go blindly into\nit, just have a plan. Run it, profile it,\nget some feedback.",
    "start": "4317200",
    "end": "4323440"
  },
  {
    "text": "You need to get this for\nyour presentations. So run, profile, get some\nfeedback, have a good plan.",
    "start": "4323440",
    "end": "4330330"
  },
  {
    "text": "Go attack it. So see you in a week. ",
    "start": "4330330",
    "end": "4343339"
  }
]