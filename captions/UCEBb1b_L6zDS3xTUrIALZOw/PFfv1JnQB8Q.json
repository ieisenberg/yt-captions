[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6050"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or to\nview additional materials",
    "start": "6050",
    "end": "12690"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "12690",
    "end": "25920"
  },
  {
    "text": "ERIK DEMAINE: All right. Today we start a new\nsection of NP-hardness. I think it'll be one\nlecture about Hamiltonicity.",
    "start": "25920",
    "end": "34230"
  },
  {
    "text": "So Hamiltonian cycle and path.",
    "start": "34230",
    "end": "39600"
  },
  {
    "text": "We've talked about this briefly. But cycle is just a cycle\nvisiting every vertex exactly",
    "start": "39600",
    "end": "48969"
  },
  {
    "text": "once. ",
    "start": "48970",
    "end": "58900"
  },
  {
    "text": "And usually when you talk about\na graph being Hamiltonian, you mean that there's a\nHamiltonian cycle, also called",
    "start": "58900",
    "end": "65180"
  },
  {
    "text": "a Hamiltonian tour, or\nHamiltonian circuit all mean the same thing.",
    "start": "65180",
    "end": "70439"
  },
  {
    "text": "And then there's\nHamiltonian path. Another problem we\nhave looked at before.",
    "start": "70440",
    "end": "76000"
  },
  {
    "text": "And same thing, but path that\nvisits every vertex exactly once. These are pretty much\nthe same problem, but different versions are\nuseful in different settings.",
    "start": "76000",
    "end": "84580"
  },
  {
    "text": "In case you're curious\nwhere this comes from, it comes from this game\nintroduced by Hamilton in 1857.",
    "start": "84580",
    "end": "91290"
  },
  {
    "text": "He was the royal astronomer\nof Ireland back then,",
    "start": "91290",
    "end": "96410"
  },
  {
    "text": "but he had fun\nwith games as well. So here you have something like\nthe graph of a dodecahedron.",
    "start": "96410",
    "end": "104520"
  },
  {
    "text": "The dual is an icosahedron,\nhence the name, and you want to find a\nHamiltonian circuit through it.",
    "start": "104520",
    "end": "109576"
  },
  {
    "text": "Or there's actually a two-player\ngame where one person chooses a subset of the\ngraph, the other one tries to find Hamiltonian\ncircuit in that subset.",
    "start": "109577",
    "end": "117500"
  },
  {
    "text": "So that's where\nHamiltonicity comes from. But for us today it is a\nnice NP-complete problem.",
    "start": "117500",
    "end": "125280"
  },
  {
    "text": "We've actually seen one proof\nthat planar max degree four,",
    "start": "125280",
    "end": "131760"
  },
  {
    "text": "I think, Hamiltonicity is hard. That was in the\nplanar SAT discussion,",
    "start": "131760",
    "end": "140890"
  },
  {
    "text": "and this is the original\npaper that does planar 3SAT. And there was this proof--\nI guess it's not actually",
    "start": "140890",
    "end": "146470"
  },
  {
    "text": "max degree four, probably a\nmax degree six or something. ",
    "start": "146470",
    "end": "153140"
  },
  {
    "text": "We argued the directed\ncase-- this apparently works for the undirected\ncase-- we'll get an even stronger result here.",
    "start": "153140",
    "end": "160890"
  },
  {
    "text": "In general, the problem\nis NP-complete in a lot",
    "start": "160890",
    "end": "170140"
  },
  {
    "text": "of different special cases,\nsuch as the one we saw.",
    "start": "170140",
    "end": "176090"
  },
  {
    "text": "For example, if you're\nlooking for a path and you're given the\ntwo end points-- so",
    "start": "176090",
    "end": "185734"
  },
  {
    "text": "normally you'd say is\nthere a Hamiltonian path or is there Hamiltonian cycle? Those are both hard\nin general graphs.",
    "start": "185734",
    "end": "190799"
  },
  {
    "text": "But if I give you a graph and\nI give you two nodes, s and t, and I want to know is\nthere-- so here's the graph,",
    "start": "190800",
    "end": "198540"
  },
  {
    "text": "here's s and t-- I want to\nknow is there a path that starts at s, ends at t. This is NP-hard.",
    "start": "198540",
    "end": "205140"
  },
  {
    "text": "By reduction from Hamiltonian\ncycle, tell me what to do.",
    "start": "205140",
    "end": "210374"
  },
  {
    "text": "AUDIENCE: You add a new node\nwhich has connection to s and t and nothing else.",
    "start": "210374",
    "end": "215907"
  },
  {
    "text": "ERIK DEMAINE: Add a\nnew node connected to s and t and nothing else. Yeah. So we'll add this new node\nx, connected to s and t.",
    "start": "215907",
    "end": "224294"
  },
  {
    "text": "What's interesting\nabout adding a degree two node is you know it\nhas to be in the cycle, so you know that these two\nedges have to be in the cycle.",
    "start": "224294",
    "end": "232015"
  },
  {
    "text": "AUDIENCE: Also, if\nit's directed you can direct those two so that-- ERIK DEMAINE: It's not directed.",
    "start": "232016",
    "end": "237749"
  },
  {
    "text": "All these are going\nto be undirected. ",
    "start": "237749",
    "end": "245650"
  },
  {
    "text": "This would preserve\ndirectedness if you wanted it. So there you go.",
    "start": "245650",
    "end": "251520"
  },
  {
    "text": "So if Hamiltonian cycle's\nhard, then Hamiltonian path given two end points is hard. Easy warm-up.",
    "start": "251520",
    "end": "258528"
  },
  {
    "text": "It's also NP-complete\nfor planar three regular,",
    "start": "258529",
    "end": "267639"
  },
  {
    "text": "three connected graphs,\nwhere every face",
    "start": "267640",
    "end": "276595"
  },
  {
    "text": "has degree at least five. But probably already met them. It's NP-hard for\nbipartite graphs.",
    "start": "276595",
    "end": "283790"
  },
  {
    "text": "These are all various\nresults proved in the '70s.",
    "start": "283790",
    "end": "291277"
  },
  {
    "text": "It's going to be hard\nfor squares of graphs. ",
    "start": "291277",
    "end": "297580"
  },
  {
    "text": "Squares of graphs\nis interesting. This is whenever you\nhave a length two path, you add an edge.",
    "start": "297580",
    "end": "303730"
  },
  {
    "text": "It's a square, and\nthat's still hard. Another fun problem is\ncomputing a Hamiltonian cycle",
    "start": "303730",
    "end": "312539"
  },
  {
    "text": "given a Hamiltonian\npath is also hard. ",
    "start": "312540",
    "end": "320720"
  },
  {
    "text": "On the other hand, some\nvariations are easy. So you have to be a\nlittle bit careful.",
    "start": "320720",
    "end": "326770"
  },
  {
    "text": "There are a lot of papers\nabout various graphs that are always\nHamiltonian and usually",
    "start": "326770",
    "end": "331860"
  },
  {
    "text": "when they're always Hamiltonian\nthere's a good algorithm to find them. Here are just a\ncouple of examples.",
    "start": "331860",
    "end": "337540"
  },
  {
    "text": "One is cubes of graphs. So if you take all\nlength three paths",
    "start": "337540",
    "end": "344410"
  },
  {
    "text": "and connect them by an edge,\nor maybe length less than or equal to three-- I'm not\nsure exactly-- that's easy. All such graphs are Hamiltonian,\nwhere with squares it's",
    "start": "344410",
    "end": "351680"
  },
  {
    "text": "still hard. So that's kind of a limit. And the other one\nhere is planar-- three",
    "start": "351680",
    "end": "357720"
  },
  {
    "text": "connector graphs is NP-complete. Planar four connector\ngraphs is polynomial. ",
    "start": "357720",
    "end": "368130"
  },
  {
    "text": "This is a tough theorem,\none of many tough theorems. All such graphs are Hamiltonian.",
    "start": "368130",
    "end": "375630"
  },
  {
    "text": "So those are a few\ncases to worry about. We will see some more today. And these are relatively simple.",
    "start": "375630",
    "end": "382950"
  },
  {
    "text": "We're going to\nprove even stricter versions of this\nproblem NP-complete, but it starts to give you\nthe flavor of what's there.",
    "start": "382950",
    "end": "390490"
  },
  {
    "text": " In fact the first\none we will prove",
    "start": "390490",
    "end": "401780"
  },
  {
    "text": "is-- this may seem a little\nweird because I wanted",
    "start": "401780",
    "end": "409150"
  },
  {
    "text": "to do undirected,\nbut we're going to make it undirected\nin a moment. We're going to do a\nseries of reductions.",
    "start": "409150",
    "end": "415240"
  },
  {
    "text": "First one we'll do is planar\nmax degree three graphs.",
    "start": "415240",
    "end": "421530"
  },
  {
    "text": " So this will be a\nreduction from 3SAT.",
    "start": "421530",
    "end": "431210"
  },
  {
    "text": "So the general idea,\nand please wait why you should care about this problem.",
    "start": "431210",
    "end": "437289"
  },
  {
    "text": "We're going to reduce it\nto another more interesting version of Hamiltonicity. But here's one way to represent\n3SAT as Hamiltonicity--",
    "start": "437290",
    "end": "444599"
  },
  {
    "text": "another way, similar to\nthe one we did before. We got clauses here\nover on the left. Here some of the\nclauses have size two,",
    "start": "444600",
    "end": "451760"
  },
  {
    "text": "but it works for the three case. Here we have the variables.",
    "start": "451760",
    "end": "458030"
  },
  {
    "text": "And the key concept\nhere is this notation.",
    "start": "458030",
    "end": "463370"
  },
  {
    "text": "This is shorthand for a\nmore complicated gadget, which is to say that these\ntwo things should not",
    "start": "463370",
    "end": "472040"
  },
  {
    "text": "be both chosen. This is an exclusive OR. Exactly one of them\nshould be chosen.",
    "start": "472040",
    "end": "477710"
  },
  {
    "text": "So that forces x1 to be\nthe opposite of x1 bar, and it also lets you\nduplicate things.",
    "start": "477710",
    "end": "482862"
  },
  {
    "text": "So here we get multiple\ncopies of the variable. You keep doing that\nseveral times you get many copies of variable\nand its complement.",
    "start": "482862",
    "end": "489070"
  },
  {
    "text": "And then we're also going to\nuse some connections like this. We're going to need\na crossover gadget,",
    "start": "489070",
    "end": "494880"
  },
  {
    "text": "but this will say\nthat you-- well, so this is going to\nbe some clause which",
    "start": "494880",
    "end": "500910"
  },
  {
    "text": "it's not literally as drawn. Again, this is notation\nfor a gadget the is going to force at least one\nof these to be traversable.",
    "start": "500910",
    "end": "509580"
  },
  {
    "text": "And so that overall\nshould represent 3SAT. We need a clause gadget. We need this exclusive\nOR so that we can split,",
    "start": "509580",
    "end": "515919"
  },
  {
    "text": "duplicate things. Overall, the cycle's\ngoing to do this. It's going to visit all the\nvariables in order, then",
    "start": "515919",
    "end": "521419"
  },
  {
    "text": "all the clauses in order. So we can't get anything\ninteresting out of planarity, because that graph\nwith these connections",
    "start": "521419",
    "end": "528157"
  },
  {
    "text": "is not going to be planar. So we'll need a crossover. And those are the\nthree gadgets we need. Yeah. AUDIENCE: Why were\nyou using exclusively",
    "start": "528157",
    "end": "534157"
  },
  {
    "text": "working with [INAUDIBLE]\nvariables [INAUDIBLE]? ERIK DEMAINE: So the idea\nis here there's a choice.",
    "start": "534157",
    "end": "540170"
  },
  {
    "text": "Do I choose this edge or this\nedge in the Hamiltonian cycle. And I want the choice\nfor this copy of x1",
    "start": "540170",
    "end": "545700"
  },
  {
    "text": "to be the same as\nfor that copy of x1. So the exclusive OR forces each\ninstance of x1 to be the same.",
    "start": "545700",
    "end": "552940"
  },
  {
    "text": "In general, if\nthere's k instances, you'd have k of these. AUDIENCE: Can you connect that?",
    "start": "552940",
    "end": "558008"
  },
  {
    "text": "Use the same guy to\nconnect it to the instance inside the clause? ",
    "start": "558008",
    "end": "564699"
  },
  {
    "text": "ERIK DEMAINE: I guess the reason\nwhy we need two copies here is that you can't-- well, see you\ncan't have 2 XOR gadgets going",
    "start": "564700",
    "end": "571670"
  },
  {
    "text": "to the same place. So it will be clear once\nwe've seen the XOR gadget. We want two distinct copies so\nthat these two things can point",
    "start": "571670",
    "end": "578490"
  },
  {
    "text": "to different copies of x1. That's why we're making\na copy like that. Does that make sense?",
    "start": "578490",
    "end": "584502"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. ERIK DEMAINE: OK. Excellent. Actually, same slide. I should just show them.",
    "start": "584502",
    "end": "591350"
  },
  {
    "text": "So here is-- maybe let's\nstart with the XOR gadget because the clause-- ah,\nclause doesn't actually use it.",
    "start": "591350",
    "end": "599009"
  },
  {
    "text": "So the XOR gadget is if we have\ntwo edges of opposite direction relative to the way\nwe're being connected.",
    "start": "599010",
    "end": "606687"
  },
  {
    "text": "I think it also works\nin the other way because these are-- no,\nthese are also opposite if you redraw it this way.",
    "start": "606687",
    "end": "614870"
  },
  {
    "text": "We're just going to\nhave this picture, which can be traversed. Either this guy\ncan come in-- here",
    "start": "614870",
    "end": "621149"
  },
  {
    "text": "we're really using direction,\ndirectionality of the graph. You can traverse\nthe top edge or you",
    "start": "621150",
    "end": "627740"
  },
  {
    "text": "can traverse the bottom edge\nin the opposite direction. But you can't just turn around\nbecause then these vertices",
    "start": "627740",
    "end": "635570"
  },
  {
    "text": "would be uncovered. And as soon as\nyou've gone this far, you can't come back this way.",
    "start": "635570",
    "end": "641800"
  },
  {
    "text": "So once you enter here\nyou're forced to leave there. Once you enter\nhere you're forced to leave there, if you\nwant to cover everything.",
    "start": "641800",
    "end": "646826"
  },
  {
    "text": "So that's an exclusive\nOR, and at least one of those better happen. So that's what\nhappens over there.",
    "start": "646826",
    "end": "653339"
  },
  {
    "text": "And also what we'll\nend up doing here, except we also need\nthe crossing case. On the other hand,\nfor the clause,",
    "start": "653340",
    "end": "660620"
  },
  {
    "text": "the idea is basically there's a\ncycle over here, which is fine.",
    "start": "660620",
    "end": "667070"
  },
  {
    "text": "But somehow that\ncycle for that clause has to be connected into the big\ncycle that we've drawn already.",
    "start": "667070",
    "end": "673529"
  },
  {
    "text": "And at least one\nof the variables needs to connect to that. So the idea is we\ncan come up here--",
    "start": "673530",
    "end": "685050"
  },
  {
    "text": "so also these vertices\nneed to be covered. So we can come up here,\ngo over here, loop around,",
    "start": "685050",
    "end": "693870"
  },
  {
    "text": "and be happy. And then we've grab\nthe entire cycle. Also, when we've\ngrabbed this cycle,",
    "start": "693870",
    "end": "702050"
  },
  {
    "text": "we can also grab these vertices.",
    "start": "702050",
    "end": "710010"
  },
  {
    "text": "All of them. That's only going to be\npossible if this is possible.",
    "start": "710010",
    "end": "716840"
  },
  {
    "text": "So in the outer side, we can't\ngo here and then up here.",
    "start": "716840",
    "end": "722930"
  },
  {
    "text": "We can go here over here. That's also fine. OK.",
    "start": "722930",
    "end": "728660"
  },
  {
    "text": "Good. I see. So that the issue is-- so\nthese are actually flexible. These guys can be covered\nbasically from the right side",
    "start": "728660",
    "end": "736430"
  },
  {
    "text": "or from the left\nside, either way. So it doesn't matter whether\nyou take this path or this path.",
    "start": "736430",
    "end": "742520"
  },
  {
    "text": "But at least one of these\nsort of pairs of edges, as they're drawn\nover here, you need",
    "start": "742520",
    "end": "748800"
  },
  {
    "text": "to be able to choose\nthe left choice and, therefore,\nget the big cycle.",
    "start": "748800",
    "end": "754430"
  },
  {
    "text": "And the issue with that is\nbecause you have this XOR, it's an exclusive OR, exactly\none of those two things",
    "start": "754430",
    "end": "760320"
  },
  {
    "text": "must be true. So in some cases,\nyou'll be forced to choose the right thing. If this variable\nchose the right path,",
    "start": "760320",
    "end": "767750"
  },
  {
    "text": "then this one will also have to\nchoose the right path because of this exclusive OR,\nand preventing you",
    "start": "767750",
    "end": "774280"
  },
  {
    "text": "from grabbing the cycle. You're fine in this clause\nif at least one of them you choose the left path.",
    "start": "774280",
    "end": "780860"
  },
  {
    "text": "In fact, if you\nlook very closely there's some bold\nedges indicating which one's got chosen here. So here, two of them were\non the right, one of them",
    "start": "780860",
    "end": "788650"
  },
  {
    "text": "was on the left for this clause. In general, if at least\none of them is on the left you're OK for the clause.",
    "start": "788650",
    "end": "796230"
  },
  {
    "text": "Clear. The high level now. This would work fine if we\ndidn't care about planarity, but I want planar\ndirected max degree three.",
    "start": "796230",
    "end": "803399"
  },
  {
    "text": "At this point we should be\ndirected max degree three. So that's an improvement from\nlast time in terms of degrees.",
    "start": "803400",
    "end": "812050"
  },
  {
    "text": "And then there's this fun\nfigure for the crossover.",
    "start": "812050",
    "end": "817149"
  },
  {
    "text": "So in general, that's\njust a repetition of what our XOR gadget was. Now we have crossing\nXOR constraints.",
    "start": "817150",
    "end": "826760"
  },
  {
    "text": "So here's a typical example. Let's say we have\nthis XOR trying to go from there to there and\nit crosses these other XORs.",
    "start": "826760",
    "end": "835440"
  },
  {
    "text": "So what we're going to\ndo is build something like that gadget for the\nvertical connection with this,",
    "start": "835440",
    "end": "842710"
  },
  {
    "text": "and this, and this, and this. And we duplicate these edges. That doesn't help you-- I mean\nit's the same as that picture,",
    "start": "842710",
    "end": "850205"
  },
  {
    "text": "I just happened\nto duplicate them. The reason we do\nthat is we're going to put XORs across like this,\nand this forces an alternation.",
    "start": "850205",
    "end": "859670"
  },
  {
    "text": "So if this is in,\nthen this must be out, so this must be in,\nso this must be out,",
    "start": "859670",
    "end": "865430"
  },
  {
    "text": "so this must be in, and\nso on all the way through. And so that forces an\nXOR between this edge",
    "start": "865430",
    "end": "871970"
  },
  {
    "text": "and that edge. Cool? So that is the crossing\nx over XOR gadget, which",
    "start": "871970",
    "end": "881440"
  },
  {
    "text": "you plug into all\nof these pictures, and you end up with planar\ndirected max degree three.",
    "start": "881440",
    "end": "888310"
  },
  {
    "text": "All right? So far so good. Next-- I have a goal.",
    "start": "888310",
    "end": "895761"
  },
  {
    "text": "I'm still not going\nto tell you the goal. ",
    "start": "895762",
    "end": "900779"
  },
  {
    "text": "Next one is going to be planar\nbipartite max degree three.",
    "start": "900780",
    "end": "907980"
  },
  {
    "start": "907980",
    "end": "918714"
  },
  {
    "text": "Undirected.  This is going to be one of\nour simplest reductions ever.",
    "start": "918715",
    "end": "925320"
  },
  {
    "text": "There it is. So the cool thing\nabout max degree three directed-- I mean there are\nfew cases you can exclude.",
    "start": "925320",
    "end": "933339"
  },
  {
    "text": "You can't have three\nincoming edges. You can't have three\noutgoing edges. It would be pretty hard\nto have a cycle that",
    "start": "933340",
    "end": "938403"
  },
  {
    "text": "includes such vertices. So you could have\ndegree two vertices, but I don't think\nwe even had any.",
    "start": "938403",
    "end": "946080"
  },
  {
    "text": "Did I say that we had\ndegree two in this picture?",
    "start": "946080",
    "end": "952500"
  },
  {
    "text": "Probably not. I mean if we did we could\ndouble the edge or something.",
    "start": "952500",
    "end": "957670"
  },
  {
    "text": "So that was probably actually\nplanar directed three regular. OK, but now undirected.",
    "start": "957670",
    "end": "965110"
  },
  {
    "text": "But you can basically\nhave two edges in, one out, or one\nedge in and two out.",
    "start": "965110",
    "end": "971790"
  },
  {
    "text": "And we're going to convert that. So the interesting\nthing here, you have to visit this\nvertex, which means",
    "start": "971790",
    "end": "978110"
  },
  {
    "text": "you have to visit this edge\nin any Hamiltonian cycle. Because once you\ncome here you've",
    "start": "978110",
    "end": "983540"
  },
  {
    "text": "got to leave on that edge. Similarly, you have\nto visit this edge. You can tell that just\nfrom this picture. So we call these forced edges.",
    "start": "983540",
    "end": "989880"
  },
  {
    "text": "And we can represent that\nby adding a vertex there. It says, hey, you've\ngot to visit that edge. So you're going to visit it\nby that little path there.",
    "start": "989880",
    "end": "998949"
  },
  {
    "text": "And now things are bipartite. ",
    "start": "998950",
    "end": "1004800"
  },
  {
    "text": "And the bipartiteness\nis essentially forcing the\ndirectionality as well. So let's say when you come\ninto a vertex and you're blue,",
    "start": "1004800",
    "end": "1013800"
  },
  {
    "text": "so that means\nthese guys have had to have been red,\nwhenever you leave,",
    "start": "1013800",
    "end": "1019840"
  },
  {
    "text": "you first visit a red\nvertex and then go. So here you're coming in\nagain as blue, and then",
    "start": "1019840",
    "end": "1025579"
  },
  {
    "text": "before you leave you turn red. And so because you've satisfied\ndirectionality over here,",
    "start": "1025579",
    "end": "1032220"
  },
  {
    "text": "the outgoing edge here\nbecomes an incoming edge to the next vertex,\nthat means you'll be going into a blue\nvertex either because it's",
    "start": "1032220",
    "end": "1039510"
  },
  {
    "text": "like this or like that. And you are effectively\nforcing directionality.",
    "start": "1039510",
    "end": "1046836"
  },
  {
    "text": " I mean everything\ncould be reversed. ",
    "start": "1046836",
    "end": "1056120"
  },
  {
    "text": "Because you're always\ncoming into a blue vertex and leaving on a red. That forces you to be going\nfrom the tail of an arrow",
    "start": "1056120",
    "end": "1064100"
  },
  {
    "text": "to the head of an arrow. So same thing by symmetry.",
    "start": "1064100",
    "end": "1069430"
  },
  {
    "text": "So these problems are actually\nreally close to each other.",
    "start": "1069430",
    "end": "1074910"
  },
  {
    "text": "These were done in\ndifferent papers, but this was an older one. And then this problem was\nintroduced for another reason,",
    "start": "1074910",
    "end": "1084159"
  },
  {
    "text": "which is grid graphs. This is where I\nreally want to go. ",
    "start": "1084160",
    "end": "1094750"
  },
  {
    "text": "So the idea with the\ngrid graph is you, let's say, have a set of\npoints on the square lattice.",
    "start": "1094750",
    "end": "1107405"
  },
  {
    "start": "1107405",
    "end": "1115160"
  },
  {
    "text": "And then you're going to have\nan edge whenever you have two points at unit distance. ",
    "start": "1115160",
    "end": "1125580"
  },
  {
    "text": "So let me draw an example. Cheat, and have some\nexamples drawn for me.",
    "start": "1125580",
    "end": "1132560"
  },
  {
    "text": "This was in a much more recent\npaper, but some nice pictures. So we're just choosing a set\nof points in the square grid.",
    "start": "1132560",
    "end": "1139900"
  },
  {
    "text": "And then whenever we\nhave two points that are a unit distance\napart, you're forced to have an edge there. You can't say there's no edge.",
    "start": "1139900",
    "end": "1146100"
  },
  {
    "text": "That would be a sub-graph\nof a grid graph. But for example, when\nthis point is absent,",
    "start": "1146100",
    "end": "1151130"
  },
  {
    "text": "you don't get any\nconnections through here. So these are all\nexamples of grid graphs.",
    "start": "1151130",
    "end": "1157100"
  },
  {
    "text": " Now there's one special\ncase, or in general, we",
    "start": "1157100",
    "end": "1163210"
  },
  {
    "text": "distinguish-- there's sort\nof three types of faces in such a planar graph. There's what you might\ncall pixels-- little one",
    "start": "1163210",
    "end": "1170640"
  },
  {
    "text": "by one squares. There's the outside\nface, and then there's everything else\nwhich we call holes.",
    "start": "1170640",
    "end": "1177299"
  },
  {
    "text": "So any non-length for\nface we call hole.",
    "start": "1177300",
    "end": "1183195"
  },
  {
    "text": "If there are no holes we\ncall it a solid grid graph. This is interesting\nbecause solid grid",
    "start": "1183195",
    "end": "1191110"
  },
  {
    "text": "graphs you can\nsolve Hamiltonicity in polynomial time. It's not always possible, but\nthere is a polynomial time",
    "start": "1191110",
    "end": "1199070"
  },
  {
    "text": "algorithm for solving\nthe solid grid graph case by Umens and Lenhart, '97.",
    "start": "1199070",
    "end": "1206255"
  },
  {
    "text": "A very complicated algorithm. Luckily, this is a\nhardness proof class so I don't have to cover it.",
    "start": "1206255",
    "end": "1213710"
  },
  {
    "text": "I'm going to focus on the\nhardness when you allow holes. ",
    "start": "1213710",
    "end": "1220270"
  },
  {
    "text": "So this is where things get fun. We are going to reduce-- we did\na reduction from here to here.",
    "start": "1220270",
    "end": "1228200"
  },
  {
    "text": "We're going to do a\nreduction from here to here. So we're going to suppose that\nwe want to solve Hamiltonicity",
    "start": "1228200",
    "end": "1234050"
  },
  {
    "text": "in planar bipartite max\ndegree three graphs, and we're going to convert such\na planar bipartite max degree",
    "start": "1234050",
    "end": "1239960"
  },
  {
    "text": "three. Graph into a grid graph\nthat acts the same.",
    "start": "1239960",
    "end": "1246370"
  },
  {
    "text": " So the first step is to\ndraw the graph on a grid.",
    "start": "1246370",
    "end": "1256900"
  },
  {
    "text": "That's pretty obvious. So here's an example\nof what we want to do,",
    "start": "1256900",
    "end": "1262309"
  },
  {
    "text": "and then this is a\npicture of how to do it. Suppose you have a\nbipartite planar graph. Not obvious this is\nplanar, but it's obvious",
    "start": "1262310",
    "end": "1268810"
  },
  {
    "text": "that it's bipartite. It happens to be planar. It's max degree three. And the vertices are\nlabeled, the XIs and the YIs,",
    "start": "1268810",
    "end": "1276410"
  },
  {
    "text": "and you can see the\ncorresponding labeling here. So not all of the grid dots\nare going to be labeled.",
    "start": "1276410",
    "end": "1282280"
  },
  {
    "text": "Some of them are just auxiliary. In order to connect\nto vertices we're going to have to draw paths,\northogonal paths on the grid.",
    "start": "1282280",
    "end": "1290150"
  },
  {
    "text": "But the key thing I\nwant is the square grid has a two-coloring inherently,\nand I want that two-coloring",
    "start": "1290150",
    "end": "1297000"
  },
  {
    "text": "to match this two-coloring. That's what I would call a\nparity-preserving embedding of the Graph",
    "start": "1297000",
    "end": "1304770"
  },
  {
    "text": "And you can see in this example,\nthe three XIs are white, and the three YIs are black.",
    "start": "1304770",
    "end": "1311299"
  },
  {
    "text": "And if you check all the\nedges they should correspond. Just ignore the\ndash lines-- that's to show you the grid underlying.",
    "start": "1311300",
    "end": "1319460"
  },
  {
    "text": "So this is a valid embedding. How do we do it? Well, we just take any\nembedding in the grid.",
    "start": "1319460",
    "end": "1325397"
  },
  {
    "text": "It's well known that if you\nhave a max degree four graph you can draw it in the\ngrid without crossings, and each edge is some\northogonal polyline.",
    "start": "1325397",
    "end": "1332580"
  },
  {
    "text": " I won't prove that here.",
    "start": "1332580",
    "end": "1337990"
  },
  {
    "text": "And then suppose the parity's\nwrong for some vertex. Suppose you draw vertex B\nand it happens to be black,",
    "start": "1337990",
    "end": "1345560"
  },
  {
    "text": "but you want it to be white? Then I'm just going to\nshift it over by one and do these kinds of\nwiggles, and that's it.",
    "start": "1345560",
    "end": "1352710"
  },
  {
    "text": "So you scale everything\nby a factor of three and you'll have room\nto do those wiggles.",
    "start": "1352710",
    "end": "1358010"
  },
  {
    "text": "So take an arbitrary\northogonal grid drawing and then add the\nwiggles whenever",
    "start": "1358010",
    "end": "1364615"
  },
  {
    "text": "things are in the wrong\nparity and now every vertex will be in the correct parity. That will be crucial\nfor the reduction.",
    "start": "1364615",
    "end": "1372730"
  },
  {
    "text": "So at this point we've got an\northogonal parity-preserving",
    "start": "1372730",
    "end": "1377830"
  },
  {
    "text": "drawing of our given bipartite\nplanar max degree three graph. And the issue is there are sort\nof two types of vertices here.",
    "start": "1377830",
    "end": "1386760"
  },
  {
    "text": "There's the ones there\nwe really need to visit, and then there's\nthese other vertices which are representing edges.",
    "start": "1386760",
    "end": "1392890"
  },
  {
    "text": "We don't need to visit every\nedge-- that's the tour problem. Hamiltonian tour, we just need\nto visit every vertex which",
    "start": "1392890",
    "end": "1398830"
  },
  {
    "text": "are the labeled dots over here. So this is where things get fun.",
    "start": "1398830",
    "end": "1405730"
  },
  {
    "text": "Here is a key gadget before we\nsee the overall architecture. These are called tentacles\nin the original paper.",
    "start": "1405730",
    "end": "1412596"
  },
  {
    "text": "I'm calling them edge\ngadgets because they're just simulating a single edge\nof the original graph, but tentacles is cooler.",
    "start": "1412597",
    "end": "1418610"
  },
  {
    "text": "Whichever you prefer. So these are the\ndots that haven't all been drawn explicitly here.",
    "start": "1418610",
    "end": "1425570"
  },
  {
    "text": "And so it's just like a two\nby and sort of corridor. The base version would be this,\nbut if you want to have turns,",
    "start": "1425570",
    "end": "1433159"
  },
  {
    "text": "which we're going to\nneed 90 degree turns, it looks more like this. And there's basically\ntwo ways to cover this.",
    "start": "1433160",
    "end": "1439170"
  },
  {
    "text": "Sort of three ways. But the way parity\nwill work out, there will only be two\nways that we care about.",
    "start": "1439170",
    "end": "1444279"
  },
  {
    "text": "There's not a variable gadget. It looks like maybe\na variable gadget,",
    "start": "1444280",
    "end": "1449330"
  },
  {
    "text": "but that's not how\nwe're using it. So one way you can visit this\ngadget is to zigzag like this.",
    "start": "1449330",
    "end": "1455340"
  },
  {
    "text": "We've seen this in pretty\nmuch all of our planar Hamiltonicity proofs. The core idea's the same.",
    "start": "1455340",
    "end": "1462460"
  },
  {
    "text": "You could start at A and end\nat C, or you could start at B and end at D, and that's\ntrue in this version as well.",
    "start": "1462460",
    "end": "1469815"
  },
  {
    "text": "Once you start\nalternating you're forced to alternate\nall the way through. So you could imagine\nusing that for a wire, but we're not going to\nuse the two alternations.",
    "start": "1469815",
    "end": "1476730"
  },
  {
    "text": "By parity we'll be forced to\ndo it one way or the other. We'll be told whether\nwe're starting or ending",
    "start": "1476730",
    "end": "1482000"
  },
  {
    "text": "in one of them, I think. Well, it won't matter.",
    "start": "1482000",
    "end": "1487378"
  },
  {
    "text": "But there's this other\nway you could visit, which is to just go all\nthe way down then come all the way back. ",
    "start": "1487379",
    "end": "1495260"
  },
  {
    "text": "This is going to\ncorrespond to an edge that is in the Hamiltonian cycle.",
    "start": "1495260",
    "end": "1500600"
  },
  {
    "text": "Because I want to start\nat some vertex up here, and I want to end at some vertex\ndown here if I follow the edge.",
    "start": "1500600",
    "end": "1506530"
  },
  {
    "text": "This is going to correspond\nto an edge that we don't use. Because at this\nvertex, I still need",
    "start": "1506530",
    "end": "1513360"
  },
  {
    "text": "to cover these vertices\nsomehow, but I don't want that to really matter. I want this edge to\nbe coverable for free.",
    "start": "1513360",
    "end": "1519210"
  },
  {
    "text": "So the idea is as I visit\nthis vertex we're just going to zip down here, zip back up. And all these vertices\nget visited for free.",
    "start": "1519210",
    "end": "1527530"
  },
  {
    "text": "It's not really\npart of the tour. Let me show you in\nsome more detail.",
    "start": "1527530",
    "end": "1533420"
  },
  {
    "text": "Here's what a vertex looks like. Vertex is just going to\nbe a 3 by 3 grid of dots.",
    "start": "1533420",
    "end": "1539940"
  },
  {
    "text": "Now, remember there are\ntwo kinds of vertices. There's the ones\nthat were-- so again, we're expanding everything\nfor this to work out.",
    "start": "1539940",
    "end": "1547470"
  },
  {
    "text": "The vertices that\nwere originally white and the vertices that\nwere originally black. It doesn't matter\nwhich is which,",
    "start": "1547470",
    "end": "1552700"
  },
  {
    "text": "but there's two\nclasses of vertices. And we're going to attach\nthe edge gadgets, which were",
    "start": "1552700",
    "end": "1559720"
  },
  {
    "text": "these 2 by n kind of things. So this is all edge gadget here.",
    "start": "1559720",
    "end": "1565220"
  },
  {
    "text": "We're going to attach\nit to a vertex that's white in this sort of flush\nlength two connection.",
    "start": "1565220",
    "end": "1573370"
  },
  {
    "text": "So this is the variable up\nhere, this 3 by 3 thing, and here we're having two edges\nconnecting to the edge gadget.",
    "start": "1573370",
    "end": "1581150"
  },
  {
    "text": "For the black\nvertices we're only going to have a single\nedge connecting them. This is called a pin\nconnection, between the wire",
    "start": "1581150",
    "end": "1589350"
  },
  {
    "text": "gadget or the tentacle,\nand the 3 by 3 down here. OK. Why?",
    "start": "1589350",
    "end": "1594800"
  },
  {
    "text": " Because.",
    "start": "1594800",
    "end": "1600240"
  },
  {
    "text": "So here let's\nconsider two vertices that are attached by an edge.",
    "start": "1600240",
    "end": "1605750"
  },
  {
    "text": "So they have opposite parity. One's-- I've forgotten\nwhich is which. This is white and\nthis black I think.",
    "start": "1605750",
    "end": "1611287"
  },
  {
    "text": "Here we have the pin connection. Here we have the\nlength two connection. And the idea is there's exactly\ntwo ways to traverse this edge,",
    "start": "1611287",
    "end": "1618279"
  },
  {
    "text": "as we saw. But now you can see\nthe connections. Let me put it that way. So the idea is, well,\nmaybe you choose",
    "start": "1618280",
    "end": "1623727"
  },
  {
    "text": "to use that edge in the\ncycle, and so I want to be able to just traverse it. Everything is good. And so here I know\nthat I'm entering",
    "start": "1623727",
    "end": "1630130"
  },
  {
    "text": "at this point, which\nmeans I know that I'll have to be exiting here. So the parities are forced. So the zigzag parity is forced.",
    "start": "1630130",
    "end": "1637610"
  },
  {
    "text": "The other possibility, because\nthere's only one connection here, you couldn't traverse\nthis way and then come back.",
    "start": "1637610",
    "end": "1643980"
  },
  {
    "text": "But from this side you could\ntraverse and then come back. And it doesn't touch\nthe vertex at all.",
    "start": "1643980",
    "end": "1649620"
  },
  {
    "text": "So the idea is you could\nignore this edge entirely and it gets covered for free,\nprovided once you erase this,",
    "start": "1649620",
    "end": "1655765"
  },
  {
    "text": "this edge is in the\nHamiltonian tour.",
    "start": "1655765",
    "end": "1660970"
  },
  {
    "text": "And at this point I should\nmention what all this labeling means on the vertex gadget.",
    "start": "1660970",
    "end": "1666500"
  },
  {
    "text": "The idea is for\nthis vertex, if you start at any of the PIs,\nany of the four corners--",
    "start": "1666500",
    "end": "1672350"
  },
  {
    "text": "any of the private\ninvestigators-- then you can end at any other\nPI, PJ in such a way",
    "start": "1672350",
    "end": "1681450"
  },
  {
    "text": "that you visit all\nthree of the EIs. ",
    "start": "1681450",
    "end": "1686590"
  },
  {
    "text": "AUDIENCE: There\nare four of them. ERIK DEMAINE: There\nare four of them. EI, EO, EIEI-O. No, OK.",
    "start": "1686590",
    "end": "1692890"
  },
  {
    "text": "So let me get to the point. You could start\nat PI, end at PJ, and visit all the vertices and\nall of the EIs, all of the EKs.",
    "start": "1692890",
    "end": "1703620"
  },
  {
    "text": "So for example, if I want\nto go from here to here, I can go like this,\nvisited all the edges.",
    "start": "1703620",
    "end": "1710360"
  },
  {
    "text": "If I want to go\nfrom here to here, I can go like this,\nvisited all the vertices,",
    "start": "1710360",
    "end": "1716530"
  },
  {
    "text": "visited all the EIs. So that's good because\neach of these EIs",
    "start": "1716530",
    "end": "1721560"
  },
  {
    "text": "is potentially attached\nto an edge gadget and we might want to visit\nall of the things out there",
    "start": "1721560",
    "end": "1726950"
  },
  {
    "text": "and come back. OK? So you see the reason why we\nonly want a pin connection here",
    "start": "1726950",
    "end": "1738740"
  },
  {
    "text": "is if we had a full\nconnection with two edges, you might imagine that\nyou come out here,",
    "start": "1738740",
    "end": "1744400"
  },
  {
    "text": "do something, eventually\ndo other stuff, and then come back on this path. But because we have a\npin connection always",
    "start": "1744400",
    "end": "1750830"
  },
  {
    "text": "on one of the two\nsides, you can't have two separate traversal paths. As soon as you get here you\nhave to turn back around.",
    "start": "1750830",
    "end": "1758370"
  },
  {
    "text": "If you went this\nway, then this guy would never be\nvisible in a cycle. So that's the key thing.",
    "start": "1758370",
    "end": "1764669"
  },
  {
    "text": "This was one of the\nEIs, and so the idea is you can completely\nforget about this path. You can just think\nabout going from one",
    "start": "1764670",
    "end": "1770500"
  },
  {
    "text": "of these white\nvertices to another. In general, it's\ngoing to correspond to which edge gadgets that\nvertex gadget is connected to.",
    "start": "1770500",
    "end": "1778049"
  },
  {
    "text": " So you can go from\none vertex to another.",
    "start": "1778050",
    "end": "1784210"
  },
  {
    "text": "You will visit this edge. And so you can add in this\npart if you don't use the edge. If you do use the\nedge, then you'll",
    "start": "1784210",
    "end": "1789632"
  },
  {
    "text": "be starting from one\nof these white vertices and you want to go to this one. And then you'll\nfollow this path.",
    "start": "1789632",
    "end": "1795239"
  },
  {
    "text": "And then you get to\nthis vertex, then you'll go from one\nof black vertices to one of the other\nfour corners, and so on.",
    "start": "1795239",
    "end": "1801020"
  },
  {
    "text": "Question? AUDIENCE: Should that\nline of three white dots, shouldn't they all be black?",
    "start": "1801020",
    "end": "1806030"
  },
  {
    "text": "ERIK DEMAINE: Yes,\nthis should be black. It's not my fault. It could be the\nscanner or it could",
    "start": "1806030",
    "end": "1811470"
  },
  {
    "text": "be-- this is a hand-drawn\nfigure as you might guess. So yeah, that should be black. Everything should alternate.",
    "start": "1811470",
    "end": "1817380"
  },
  {
    "text": "So you can tell the\nparity's a vertex based on the color of the corners.",
    "start": "1817380",
    "end": "1823620"
  },
  {
    "text": "Any other questions\nabout that proof? OK.",
    "start": "1823620",
    "end": "1828866"
  },
  {
    "text": " So this is pretty cool.",
    "start": "1828866",
    "end": "1833910"
  },
  {
    "text": "And I would say\nHamiltonicity in grid graphs is used a lot as a base\nproblem for reductions",
    "start": "1833910",
    "end": "1840620"
  },
  {
    "text": "in computational geometry,\nespecially tour-like problems. And you'll notice a theme.",
    "start": "1840620",
    "end": "1847350"
  },
  {
    "text": "Every reduction so far, except\nthe very first one I guess, was from one type of\nHamiltonian circuit to another type of\nHamiltonian circuit.",
    "start": "1847350",
    "end": "1853505"
  },
  {
    "text": "And this tends to be common that\nyou can work within Hamiltonian circuit and modify your\ngraph in all sorts of ways",
    "start": "1853505",
    "end": "1859370"
  },
  {
    "text": "to get to a very simplified\nversion of Hamiltonian circuit. And that's cool. And so you get a lot of mileage\njust within the Hamiltonian",
    "start": "1859370",
    "end": "1867320"
  },
  {
    "text": "circuit family.  Cool.",
    "start": "1867320",
    "end": "1872710"
  },
  {
    "text": "Let me give you a couple of\napplications right off the bat. What? AUDIENCE: This is going\nback a little bit,",
    "start": "1872710",
    "end": "1879030"
  },
  {
    "text": "but are there any sort of\nnatural families of graphs for which finding\na Hamiltonian path",
    "start": "1879030",
    "end": "1884340"
  },
  {
    "text": "is strictly easier\nthan finding a circle? ",
    "start": "1884340",
    "end": "1889420"
  },
  {
    "text": "ERIK DEMAINE: I think the only--\nthis problem would be easy. Find a Hamiltonian path\ngiven a Hamiltonian path.",
    "start": "1889420",
    "end": "1895580"
  },
  {
    "text": "But I'm not aware of any other\nproblems where a Hamiltonian path is easier than cycle.",
    "start": "1895580",
    "end": "1903360"
  },
  {
    "text": "I mean in general,\nyou can reduce one to the other somehow. That's maybe a little tricky\nwithout the two given end",
    "start": "1903360",
    "end": "1909990"
  },
  {
    "text": "points. And if you have\nlots of structure, like planarity and through\nregularity it's not so clear,",
    "start": "1909990",
    "end": "1917120"
  },
  {
    "text": "but definitely Hamiltonian path\nis still hard in this problem. I think one easy\nway to do that is",
    "start": "1917120",
    "end": "1922880"
  },
  {
    "text": "to just do the same\nchain of reductions, but start with Hamiltonian\npath instead of cycle",
    "start": "1922880",
    "end": "1928030"
  },
  {
    "text": "and follow through, and\npretty much every step should still be path-based. So it's actually useful.",
    "start": "1928030",
    "end": "1934880"
  },
  {
    "text": "We'll want Hamiltonian path and\ngrid graphs also at some point. But what I showed was\nHamiltonian cycle.",
    "start": "1934880",
    "end": "1941429"
  },
  {
    "text": "So for pretty much everywhere\nthey seem to be the same, but it would be cool to\nfind an example where they have different complexity.",
    "start": "1941429",
    "end": "1948790"
  },
  {
    "text": "OK. So here's another problem. Euclidean TSP.",
    "start": "1948790",
    "end": "1954130"
  },
  {
    "start": "1954130",
    "end": "1959330"
  },
  {
    "text": "Traveling salesman problem. You're given a set of\npoints in the plane.",
    "start": "1959330",
    "end": "1965299"
  },
  {
    "text": "Better not make it too big\nbecause this might be hard. And I want to find a tour.",
    "start": "1965300",
    "end": "1972185"
  },
  {
    "text": "It visits every\npoint exactly once, and has minimum total\nlength, Euclidean length.",
    "start": "1972185",
    "end": "1978700"
  },
  {
    "text": "So the usual notion of length. I claim this is NP-hard.",
    "start": "1978700",
    "end": "1984260"
  },
  {
    "text": "Now, this is a little scary. Most of the problems we've been\nworking with are very discrete. I mean the output here\nis sort of discrete.",
    "start": "1984260",
    "end": "1989911"
  },
  {
    "text": "You choose a permutation\non the points. But it feels like there's\nalmost no control here.",
    "start": "1989911",
    "end": "1995880"
  },
  {
    "text": "I mean how would I construct\nlocalized gadgets when I can just jump from any point\nto any other point at any time",
    "start": "1995880",
    "end": "2002100"
  },
  {
    "text": "as long as that point\nhasn't already been used. But it's really easy to\nprove this is NP-hard",
    "start": "2002100",
    "end": "2007759"
  },
  {
    "text": "given what we just did. Oh, I should say, here's\na full worked out example,",
    "start": "2007760",
    "end": "2013814"
  },
  {
    "text": "so this is what I\nshould be pointing at. This was the parity-preserving\ngraph that we drew before.",
    "start": "2013814",
    "end": "2021429"
  },
  {
    "text": "And this is what you\nget in the reduction, along with actual\nsolution, which is the one drawn in orange here.",
    "start": "2021430",
    "end": "2029880"
  },
  {
    "text": "So you can see read that\noff, because wherever you see zigzags, that's where\nyou're using the path here.",
    "start": "2029880",
    "end": "2037529"
  },
  {
    "text": "So these correspond, and\nthen this corresponds. And then up and over.",
    "start": "2037530",
    "end": "2044000"
  },
  {
    "text": "And then the unused edges,\nthe not orange ones, that's where we get\nthese kinds of loops,",
    "start": "2044000",
    "end": "2050869"
  },
  {
    "text": "starting from the\nvertices of one parity, I guess the white ones, and\nthen going to the black ones",
    "start": "2050870",
    "end": "2058460"
  },
  {
    "text": "and turning around\nat the pin joint. Cool. So given this is hard,\nwhy is this hard?",
    "start": "2058460",
    "end": "2066654"
  },
  {
    "text": " So the decision\nproblem, let's say,",
    "start": "2066654",
    "end": "2072190"
  },
  {
    "text": "is I give you a set of points. I give you the desired\nlength of the tour. I want to know is there a tour,\nvisits every point exactly",
    "start": "2072190",
    "end": "2079899"
  },
  {
    "text": "once, and has length at\nmost that given length. AUDIENCE: So if you\nlook at a grid graph,",
    "start": "2079900",
    "end": "2088466"
  },
  {
    "text": "you'll have some\nnumber of nodes, which means the tour would\nhave to necessarily have-- it can just choose those points.",
    "start": "2088467",
    "end": "2094899"
  },
  {
    "text": "The tour would necessarily\nhave at least-- exactly that many edges,\nand each edge would",
    "start": "2094900",
    "end": "2100562"
  },
  {
    "text": "have to have length\nat least one, because the close [INAUDIBLE]\npoints is one apart.",
    "start": "2100562",
    "end": "2106010"
  },
  {
    "text": "ERIK DEMAINE: Yup. AUDIENCE: And so if you\njust counter [INAUDIBLE] those points and say\nthat that's the desired",
    "start": "2106010",
    "end": "2111327"
  },
  {
    "text": "length of your tour,\nthen you can only do that if you can get through\nthis by following only edges that are length one.",
    "start": "2111327",
    "end": "2116724"
  },
  {
    "text": "ERIK DEMAINE: Exactly. So we're going to reduce\nfrom this problem. Given such a grid\ngraph, the reduction",
    "start": "2116724",
    "end": "2123620"
  },
  {
    "text": "just looks at the vertices,\nthrows away the edges. That is our input-- those\npoints are the input to TSP.",
    "start": "2123620",
    "end": "2131280"
  },
  {
    "text": "And then the claim\nis that every tour-- let's say there are end\npoints in this picture.",
    "start": "2131280",
    "end": "2136619"
  },
  {
    "text": "Every tour has to have length\nat least n, as you say, because they're end points,\nthe total number of edges is n in a cycle, a\nHamiltonian cycle,",
    "start": "2136620",
    "end": "2144010"
  },
  {
    "text": "and every edge must have\nlength at least one, because that's the nearest pair.",
    "start": "2144010",
    "end": "2149600"
  },
  {
    "text": "And so that's a lower bound. And then on the\nother hand, if there is a tour that\nhas length only n,",
    "start": "2149600",
    "end": "2158437"
  },
  {
    "text": "then it must actually\nbe a Hamiltonian cycle in this graph,\nbecause then you're only using edges that\nexist in the grid graph.",
    "start": "2158437",
    "end": "2164837"
  },
  {
    "text": "So it's really the same problem. Euclidean TSP really is\na special case of this. ",
    "start": "2164837",
    "end": "2171780"
  },
  {
    "text": "Cool. This problem was proved\nhard much earlier. ",
    "start": "2171780",
    "end": "2178890"
  },
  {
    "text": "Hamiltonicity and grid graph. ",
    "start": "2178890",
    "end": "2186099"
  },
  {
    "text": "But here is now a nice simple\nproof using what we know. ",
    "start": "2186100",
    "end": "2192579"
  },
  {
    "text": "I'll tell you more\nreasons in a little bit, but I have one more at this\npoint, which is platform games.",
    "start": "2192580",
    "end": "2200869"
  },
  {
    "text": " I don't have a graphic\nbecause there's",
    "start": "2200870",
    "end": "2206560"
  },
  {
    "text": "so many games that\ncould apply here, Super Mario Brothers among them.",
    "start": "2206560",
    "end": "2211790"
  },
  {
    "text": "Suppose you have a little\ndude, you can walk around. And you've got some\nkind of coins--",
    "start": "2211790",
    "end": "2219630"
  },
  {
    "text": "I don't know how to draw coins. They almost look like eyeballs. But anyway, you've\ngot a bunch of coins",
    "start": "2219630",
    "end": "2224839"
  },
  {
    "text": "which you want to collect. And you have some way\nthat you can walk around. If you're a top-down\ngame, then that's",
    "start": "2224840",
    "end": "2231790"
  },
  {
    "text": "pretty much the\nentire reduction. And then also you have a timer.",
    "start": "2231790",
    "end": "2237890"
  },
  {
    "text": "So timer plus collectibles--\nables or ibles?",
    "start": "2237890",
    "end": "2246490"
  },
  {
    "text": "Ables. And any such game is\nNP-hard, at least,",
    "start": "2246490",
    "end": "2254160"
  },
  {
    "text": "because if you want to get\nall of these coins, that's like vertices you need to visit. As I say, a top-down game\nyou're walking in a grid graph.",
    "start": "2254160",
    "end": "2261930"
  },
  {
    "text": "The time limit will\nprevent us from going out into the white space because\nthere's no coins there.",
    "start": "2261930",
    "end": "2268141"
  },
  {
    "text": "And so if the timeline limit\nis exactly the number of coins, and every step you make\nyou have to get a coin,",
    "start": "2268141",
    "end": "2273170"
  },
  {
    "text": "then that will force you to only\nfollow-- the edges in the grid graph can't go out here.",
    "start": "2273170",
    "end": "2279165"
  },
  {
    "text": "No obstacles needed. And you understand that in\nthe real game, of course,",
    "start": "2279165",
    "end": "2284410"
  },
  {
    "text": "there might be stuff\nhappening here. Maybe there's a ladder\nso you can go up here. You just have to set up\nall these traversal lengths",
    "start": "2284410",
    "end": "2291110"
  },
  {
    "text": "to take the same amount of\ntime in under optimal play. And then you can simulate a\nton of video games in this way.",
    "start": "2291110",
    "end": "2297110"
  },
  {
    "text": " This is a result.",
    "start": "2297110",
    "end": "2302120"
  },
  {
    "text": "This is in Fun 2010 by Forishek. So some reasons why you care.",
    "start": "2302120",
    "end": "2308530"
  },
  {
    "text": "A lot of games map\nnaturally onto grids. A lot of real problems\ncan map onto grids.",
    "start": "2308530",
    "end": "2316619"
  },
  {
    "text": "In general, grids\nwill be very helpful. ",
    "start": "2316620",
    "end": "2322110"
  },
  {
    "text": "So next problem I\nwant to solve is--",
    "start": "2322110",
    "end": "2327750"
  },
  {
    "text": "by solve, I mean\nshow hard, as usual. Let's say, max degree\nthree grid graphs.",
    "start": "2327750",
    "end": "2338715"
  },
  {
    "text": " I don't have a great\nmotivation-- well,",
    "start": "2338715",
    "end": "2345500"
  },
  {
    "text": "I have a motivation for this. Probably others that\nI'm not aware of. I didn't actually know about\nthis result until recently.",
    "start": "2345500",
    "end": "2352300"
  },
  {
    "text": "It's pretty cool. If you look at this reduction,\nthere are some vertices that-- I mean here\nwe're drawing the cycle,",
    "start": "2352300",
    "end": "2357620"
  },
  {
    "text": "but some vertices\nhave degree four. Of course, every grid\ngraph is max degree four.",
    "start": "2357620",
    "end": "2363270"
  },
  {
    "text": "And max degree two is pretty\neasy to solve Hamiltonicity.",
    "start": "2363270",
    "end": "2368440"
  },
  {
    "text": "So what's left is\nmax degree three. So a natural question in\nbetween is can you do max degree three grid graphs.",
    "start": "2368440",
    "end": "2374484"
  },
  {
    "text": "The claim is that is also hard. And it's going to be\nbasically the same proof, but we're going to change all\nthe gadgets, most of them.",
    "start": "2374485",
    "end": "2383506"
  },
  {
    "text": "There's one shared author. This was Eti Papadimitriou\nand Szwarcfiter. ",
    "start": "2383507",
    "end": "2390619"
  },
  {
    "text": "And then this is\nPapadimitriou and Vazirani a couple years later.",
    "start": "2390620",
    "end": "2395859"
  },
  {
    "text": "So this is actually\nvery similar to the edge gadget we saw before. Here's the old edge gadget.",
    "start": "2395860",
    "end": "2403730"
  },
  {
    "text": "Before when we had a turn\nwe had a degree four vertex. I want to get rid of that,\nand I'm going to get rid of it",
    "start": "2403730",
    "end": "2408940"
  },
  {
    "text": "by just sort of shifting these\nthings apart and blowing up this circle, this cycle.",
    "start": "2408940",
    "end": "2414240"
  },
  {
    "text": "So I end up with a\nbigger cycle here, end up with an edge\nconnection there. But effectively, it's the\nsame kind of topology.",
    "start": "2414240",
    "end": "2422020"
  },
  {
    "text": "If you're coming in\nand alternating-- I guess you have to\nget the parity right.",
    "start": "2422020",
    "end": "2428640"
  },
  {
    "text": "If you're coming in from this\nside and you're alternating, then you can come around\nand visit like that,",
    "start": "2428640",
    "end": "2433930"
  },
  {
    "text": "and everything is OK. Back and forth. Cool.",
    "start": "2433930",
    "end": "2439260"
  },
  {
    "text": "That was drawn right over here. That's a zigzag path. The return path\nis just as before.",
    "start": "2439260",
    "end": "2444570"
  },
  {
    "text": "And so we can use this\nedge gadget exactly as we did before, but now it's\nmax degree three everywhere.",
    "start": "2444570",
    "end": "2451810"
  },
  {
    "text": "So that's easy. In general, using\nthis trick that here we had a corner\nwith a vertex on it.",
    "start": "2451810",
    "end": "2457980"
  },
  {
    "text": "You can turn that\ninto a longer path with various vertices on it. That will act the same from\na Hamiltonicity perspective.",
    "start": "2457980",
    "end": "2463750"
  },
  {
    "text": "So that's the key\nthing we're doing. And then it's a matter\nof putting things to fit on the grid.",
    "start": "2463750",
    "end": "2471310"
  },
  {
    "text": "So that's the first change. Now, the second change is\ngoing to be a little bit more drastic, a little weirder.",
    "start": "2471310",
    "end": "2478630"
  },
  {
    "text": "The vertex gadget used\nto be this 3 by 3 thing. Very hard to get\nrid of that, vertex would have to be\nfour in the center.",
    "start": "2478630",
    "end": "2485590"
  },
  {
    "text": "Well, if you did\nthat, you would be left with a little\nsquare, an empty square.",
    "start": "2485590",
    "end": "2490720"
  },
  {
    "text": "And we're going to\nneed two of those. So this is the\ndumbbell picture used",
    "start": "2490720",
    "end": "2497760"
  },
  {
    "text": "in many theoretical results. So we have two of these squares.",
    "start": "2497760",
    "end": "2503670"
  },
  {
    "text": "We're going to separate\nthem by a fairly long path of the right parity. And the idea is you can have\nup to two connections over here",
    "start": "2503670",
    "end": "2511850"
  },
  {
    "text": "to edges, and up to two\nconnections over here for edges. And typical\nconnections are going",
    "start": "2511850",
    "end": "2517940"
  },
  {
    "text": "to look just like we\nhad before, but it's not going quite all be like this. So it used to be we could\nhave a full edge connection",
    "start": "2517940",
    "end": "2525830"
  },
  {
    "text": "or we could have a pin\nconnection as before.",
    "start": "2525830",
    "end": "2532040"
  },
  {
    "text": "When this edge turns it's going\nto use the weirder turn gadget. So the edges look\nbasically the same,",
    "start": "2532040",
    "end": "2537780"
  },
  {
    "text": "it's just the turns that we\nchanged in the last slide. OK.",
    "start": "2537780",
    "end": "2543790"
  },
  {
    "text": "This almost works, but I\nhave to specify some details. So for example, easy case.",
    "start": "2543790",
    "end": "2551069"
  },
  {
    "text": "Degree two vertex. Suppose the original graph\nhas a degree two vertex-- we had that in our reduction.",
    "start": "2551070",
    "end": "2557740"
  },
  {
    "text": "Because in fact, every\nother vertex pretty much was degree two, if you\ntrack all of these things.",
    "start": "2557740",
    "end": "2564622"
  },
  {
    "text": "When we went from\nthe directed case to the bipartite case we\nadded in lots of vertices, lots of degree two vertices.",
    "start": "2564622",
    "end": "2569630"
  },
  {
    "text": "So if we want to simulate\na degree two vertex, we will just have one of\nthe edges attaching up here,",
    "start": "2569630",
    "end": "2575930"
  },
  {
    "text": "and one of the edges\nattaching down here. And again-- in this picture\nit's one on the left side,",
    "start": "2575930",
    "end": "2582550"
  },
  {
    "text": "one on the right side. And again, we have\nthis feature that if we start at any of the PIs we\ncan get to one of the PJs",
    "start": "2582550",
    "end": "2590850"
  },
  {
    "text": "by visiting all the EI edges. So for example, if we start\nhere we go like this over here.",
    "start": "2590850",
    "end": "2599704"
  },
  {
    "text": "And we have a choice. We can either go like this,\nend at P3 or go like this and end at P4. We visited all the EIs.",
    "start": "2599705",
    "end": "2606170"
  },
  {
    "text": "But we can't start\nat P1 and end at P2. We want to visit everything. Start at P1.",
    "start": "2606170",
    "end": "2612100"
  },
  {
    "text": "If you go out there,\nyou can never come back. To come around here,\nyou've already visited P2.",
    "start": "2612100",
    "end": "2617510"
  },
  {
    "text": "So we cannot start and\nend on the left side. We cannot start and\nend on the right side. So for a degree two\nvertex, that's fine.",
    "start": "2617510",
    "end": "2623864"
  },
  {
    "text": "We just put one\nof the connections on one side, one on the\nother, and we'll come in, visit everything, come out.",
    "start": "2623864",
    "end": "2630110"
  },
  {
    "text": "And because we\nvisit all the EIs, we can do this kind of\ntraversal every time.",
    "start": "2630110",
    "end": "2637869"
  },
  {
    "text": "Now, for a degree\nthree vertex, this is a little bit troublesome. ",
    "start": "2637870",
    "end": "2644150"
  },
  {
    "text": "Remember our picture. ",
    "start": "2644150",
    "end": "2659394"
  },
  {
    "text": "What do degree three\nvertices look like? If you follow through\nthe chain of reductions, we had this case, and we\nhad this case, and this one",
    "start": "2659394",
    "end": "2670760"
  },
  {
    "text": "we converted into that. And this one we converted\ninto that I think.",
    "start": "2670760",
    "end": "2685001"
  },
  {
    "text": "Yup. Because this was a forced edge. This was a forced edge and so we\nadded a dot to represent that.",
    "start": "2685001",
    "end": "2692050"
  },
  {
    "text": "So the good news is every\ntime we have a degree three vertex in the starting graph,\none of the edges is forced.",
    "start": "2692050",
    "end": "2700520"
  },
  {
    "text": "One of the three\nedges is forced. So it's really a choice\nbetween do you take this one or do you take this one. I mean that's, of course,\nwhat we had over here.",
    "start": "2700520",
    "end": "2708160"
  },
  {
    "text": "So what we're going to do is\ntake these two edges, which are exclusively OR'd together. I choose exactly one of these.",
    "start": "2708160",
    "end": "2715400"
  },
  {
    "text": "We're going to put that on\none side, so that one of them will go up here, one of\nthem will go down here.",
    "start": "2715400",
    "end": "2722349"
  },
  {
    "text": "And then the forced edge we'll\nput over on the other side. Forced edge is always\nchosen, so that",
    "start": "2722350",
    "end": "2727569"
  },
  {
    "text": "means we'll come in either P1\nor P2, or leave on P1 or P2, depending on which of\nthose two cases we're in.",
    "start": "2727570",
    "end": "2733710"
  },
  {
    "text": "And then we will leave\nor enter from P3 or P4,",
    "start": "2733710",
    "end": "2738869"
  },
  {
    "text": "according to which of\nthe two edges you choose. Happy?",
    "start": "2738870",
    "end": "2744260"
  },
  {
    "text": "No? AUDIENCE: I'm understanding\nthat we're actually reducing from a sub-problem\nof [INAUDIBLE] bipartite, max degree three graphs in\nthat every vertex is connected",
    "start": "2744260",
    "end": "2751299"
  },
  {
    "text": "to at least one\ndegree two vertex? ERIK DEMAINE: Yeah.",
    "start": "2751300",
    "end": "2757220"
  },
  {
    "text": "Right. So we could say at this\npoint-- in fact, it's planar",
    "start": "2757220",
    "end": "2763450"
  },
  {
    "text": "bipartite max degree three\ngraphs where every degree three vertex is adjacent to\nexactly one, or no,",
    "start": "2763450",
    "end": "2771270"
  },
  {
    "text": "at least one degree two vertex. And then we can\ncarry that condition",
    "start": "2771270",
    "end": "2778060"
  },
  {
    "text": "through all the\nreductions, and that would make this an actual reduction. Or you can think of this as\na reduction going from here,",
    "start": "2778060",
    "end": "2784490"
  },
  {
    "text": "just copying all the details. Yeah.  Other questions?",
    "start": "2784490",
    "end": "2789910"
  },
  {
    "text": " OK.",
    "start": "2789910",
    "end": "2795510"
  },
  {
    "text": "I'm a little confused because\nthere's one more gadget. But I didn't seem\nto use that gadget. So I'm not sure whether\nthis is necessary.",
    "start": "2795510",
    "end": "2805690"
  },
  {
    "text": "But here's another\nthing you can do, which they're using\nfor the forced edges. You can have one wire--\nsorry, this is the picture.",
    "start": "2805690",
    "end": "2814390"
  },
  {
    "text": "You can have one edge\ngadget that attaches to both ends of the dumbbell.",
    "start": "2814390",
    "end": "2819420"
  },
  {
    "text": "So then you have a\nchoice whether you end up connecting that edge to\nthe bottom of the dumbbell",
    "start": "2819420",
    "end": "2826540"
  },
  {
    "text": "or to the top of the dumbbell. Sorry. This is connecting to the\ntop, and this is connecting",
    "start": "2826540",
    "end": "2834040"
  },
  {
    "text": "to the bottom, the dumbbell. So that's another way to do\nthe same kind of degree three vertex.",
    "start": "2834040",
    "end": "2839480"
  },
  {
    "text": "You could have this guy coming\nin-- this is the forced edge, and the forced edge has\nto come to this vertex.",
    "start": "2839480",
    "end": "2846450"
  },
  {
    "text": "You get a choice of whether you\nstart up here and then leave along this non-forced\nedge, or you first",
    "start": "2846450",
    "end": "2853420"
  },
  {
    "text": "traverse down this way\nand then leave along this non-forced edge. So that's another way to do\nit, but it seems just as good",
    "start": "2853420",
    "end": "2860910"
  },
  {
    "text": "as the way I described, which\nwas to put forced edge only a one side, and then the other\ntwo guys on the other side.",
    "start": "2860910",
    "end": "2868130"
  },
  {
    "text": "Unless there's a parity issue. It could be that this\nconnection and this connection",
    "start": "2868130",
    "end": "2874880"
  },
  {
    "text": "have the opposite parities,\nwhich is not good. Because we want the two\nconnections-- in this case,",
    "start": "2874880",
    "end": "2886030"
  },
  {
    "text": "both of these are\ngoing to be white. And in this case both of\nthese are going to be black.",
    "start": "2886030",
    "end": "2891270"
  },
  {
    "text": "So the two non-forced\nedges connect to vertices of the same color. And I think if you try to\nattach one of them over here",
    "start": "2891270",
    "end": "2899100"
  },
  {
    "text": "and one of them over\nhere on a variable, they will have the wrong colors,\nthey'll have opposite colors.",
    "start": "2899100",
    "end": "2904570"
  },
  {
    "text": "I think that's why\nyou need this gadget. Because now this left connection\nand this other left connection",
    "start": "2904570",
    "end": "2910579"
  },
  {
    "text": "will have the same parity\nbecause this count is odd I think.",
    "start": "2910580",
    "end": "2916290"
  },
  {
    "text": "I think that's why you need it. And that preserves parity. So it's a bit subtle. You have to be careful all the\nconnections preserve parity.",
    "start": "2916290",
    "end": "2924640"
  },
  {
    "text": "Cool. So that was max degree\nthree grid graphs.",
    "start": "2924640",
    "end": "2931852"
  },
  {
    "text": "Any other questions?  Here is one motivation from this\nPapadimitriou/Vazirani paper",
    "start": "2931852",
    "end": "2940740"
  },
  {
    "text": "for this problem related to\nEuclidean traveling salesman",
    "start": "2940740",
    "end": "2955080"
  },
  {
    "text": "problem. ",
    "start": "2955080",
    "end": "2969920"
  },
  {
    "text": "It's this notion of\ndegree-bounded minimum spanning tree. Minimum spanning tree normally\nis a polynomial problem.",
    "start": "2969920",
    "end": "2976180"
  },
  {
    "text": "We're given some graph, you\nwant to find a spanning tree. Tree that this is\nall the vertices,",
    "start": "2976180",
    "end": "2982029"
  },
  {
    "text": "but it can be a tree\ninstead of just a path. And it's minimum in that it\nhas minimum total length of all",
    "start": "2982030",
    "end": "2989060"
  },
  {
    "text": "the edges. So that's a polynomial problem. If I say, well, I want\na minimum spanning tree",
    "start": "2989060",
    "end": "2994270"
  },
  {
    "text": "where all of the\nvertices in the tree have max degree two,\nthat is Hamiltonian path,",
    "start": "2994270",
    "end": "3001996"
  },
  {
    "text": "or I guess really\ntraveling salesman problem. So we already proved Euclidean\nmax degree two minimum spanning",
    "start": "3001996",
    "end": "3010430"
  },
  {
    "text": "tree is hard. What about max degree three? Does that somehow-- does the\nbranching make it easier, and the answer is no.",
    "start": "3010430",
    "end": "3017170"
  },
  {
    "text": "You start from this problem. And the cool thing\nabout a max degree",
    "start": "3017170",
    "end": "3022420"
  },
  {
    "text": "three grid graph is if you look\nat any point, at most three",
    "start": "3022420",
    "end": "3028030"
  },
  {
    "text": "of its neighboring spots\nare actual vertices. One of them has to be absent\nin a max degree three.",
    "start": "3028030",
    "end": "3036000"
  },
  {
    "text": "So what I'm going to do is add a\npoint really close to that one.",
    "start": "3036000",
    "end": "3042880"
  },
  {
    "text": "And now you can show in\nany minimum spanning tree, these guys must be connected,\nand this one basically",
    "start": "3042880",
    "end": "3051962"
  },
  {
    "text": "has to be a leaf because\neverything else is quite far away. I mean at most you have\nthese guys occupied.",
    "start": "3051962",
    "end": "3060329"
  },
  {
    "text": "You know that this\nis completely absent. So I add this point. I'm going to have\nto connect this.",
    "start": "3060330",
    "end": "3065910"
  },
  {
    "text": "it won't be able to connect\nany other way if I'm using the shortest possible length. And so at that point, if\nthis has degree three,",
    "start": "3065910",
    "end": "3073510"
  },
  {
    "text": "there's only two\nincident edges left, and so it's Hamiltonian path\nagain in the grid graph.",
    "start": "3073510",
    "end": "3080390"
  },
  {
    "text": "So this is why\nthey were motivated to define max degree grid\ngraphs and prove that hard.",
    "start": "3080390",
    "end": "3086950"
  },
  {
    "text": " Cool. Some more geometry.",
    "start": "3086950",
    "end": "3093800"
  },
  {
    "text": "All right. So for a long time--\nyou know, this is all done in the '80s,\nall the grid graph stuff.",
    "start": "3093800",
    "end": "3099650"
  },
  {
    "text": "We only had square grids. We couldn't afford\ntriangles back in the day.",
    "start": "3099650",
    "end": "3106630"
  },
  {
    "text": "But recently, people started\nto think about triangular grids and hex grids. Those are the only\ntiling regular n-gons.",
    "start": "3106630",
    "end": "3113620"
  },
  {
    "text": "So you can define the\nsame kind of thing. A triangular grid graph,\na hexagonal grid graph.",
    "start": "3113620",
    "end": "3118790"
  },
  {
    "text": "Again, you take a set of\npoints in the triangular lattice or the hex lattice.",
    "start": "3118790",
    "end": "3123934"
  },
  {
    "text": "Is the hex actually a lattice? Well, anyway, you know\nwhat I mean, the hex grid. And you connect\nany two points when",
    "start": "3123935",
    "end": "3133630"
  },
  {
    "text": "they're a unit distance\napart, where that's defined to be one and one.",
    "start": "3133630",
    "end": "3138990"
  },
  {
    "text": "So again, we have the notion of\nsolid, triangular, or hex grid graph, and there are no holes. Again, we can characterize the\npixels-- they're not really",
    "start": "3138990",
    "end": "3146620"
  },
  {
    "text": "pixels-- hexels and trigles? I don't know. In the paper they're\nall just called pixels.",
    "start": "3146620",
    "end": "3152580"
  },
  {
    "text": "There's those types of faces. There's the outside face. And then there's the hole\nfaces-- H-O-L-E, not W-H-O-L-E.",
    "start": "3152580",
    "end": "3161400"
  },
  {
    "text": "OK. Cool. They define some other\nterms, which I will get to.",
    "start": "3161400",
    "end": "3167839"
  },
  {
    "start": "3167840",
    "end": "3175330"
  },
  {
    "text": "Let me tell you what's known\nabout all of these problems. ",
    "start": "3175330",
    "end": "3190060"
  },
  {
    "text": "So first thing, so these are--\nSo first thing that's known",
    "start": "3190060",
    "end": "3213800"
  },
  {
    "text": "is that if you have\na solid grid graph, then the triangular\ncase is also polynomial.",
    "start": "3213800",
    "end": "3221330"
  },
  {
    "text": "So I mentioned solid\nsquare grid graphs are easy to solve Hamiltonicity in.",
    "start": "3221330",
    "end": "3226850"
  },
  {
    "text": "Turns out solid\ntriangular grid graphs are also easy to solve grid\ngraphs-- solve Hamiltonicity",
    "start": "3226850",
    "end": "3232410"
  },
  {
    "text": "in. Almost all of them are\nHamiltonian in a certain sense, as long as you check\nfor some basic things you shouldn't have.",
    "start": "3232410",
    "end": "3239950"
  },
  {
    "text": "But hex is open. So there's actually a ton\nof nice open problems still.",
    "start": "3239950",
    "end": "3245000"
  },
  {
    "text": " Next case is called\na super thin.",
    "start": "3245000",
    "end": "3253090"
  },
  {
    "start": "3253090",
    "end": "3268040"
  },
  {
    "text": "So what is super thin? Super thin means\nthere are no pixels.",
    "start": "3268040",
    "end": "3276500"
  },
  {
    "text": "Every face is either a\nhole or the outside face. I don't have an example here,\nbut this kind of connection",
    "start": "3276500",
    "end": "3283880"
  },
  {
    "text": "is what you would have\nin super thin graphs. So you've got the whole face\nhere, a whole face there.",
    "start": "3283880",
    "end": "3290619"
  },
  {
    "text": "You shouldn't have any of\nthese pixels to be super thin. That case turns out to\nbe polynomial for squares",
    "start": "3290620",
    "end": "3296380"
  },
  {
    "text": "and hexes, open for triangles. All right, next\ncase is called thin.",
    "start": "3296380",
    "end": "3302660"
  },
  {
    "start": "3302660",
    "end": "3312090"
  },
  {
    "text": "That one right there implies. In the thin case, both the\ntriangle and the square,",
    "start": "3312091",
    "end": "3319329"
  },
  {
    "text": "problems are NP-hard,\nhexes are open. What does thin mean? Thin means every vertex\nis on the boundary.",
    "start": "3319330",
    "end": "3327750"
  },
  {
    "text": "So super thin is something like\nevery edge is on the boundary. Thin is that every vertex\nis on the boundary.",
    "start": "3327750",
    "end": "3334200"
  },
  {
    "text": "So for example, this\npart here is thin. The banner's actually\ndrawn in bold here.",
    "start": "3334200",
    "end": "3339319"
  },
  {
    "text": "If every vertex has bold\nedges incident to it, then we call that thin. So it's a little bit\nthicker than super thin.",
    "start": "3339320",
    "end": "3347510"
  },
  {
    "text": "So it's also easier to think\nof the dual if you care to. If you draw a vertex for every\npixel, in the super thin case",
    "start": "3347510",
    "end": "3356330"
  },
  {
    "text": "there are no\nvertices in the dual. In the thin case, the\ndual is super thin.",
    "start": "3356330",
    "end": "3363470"
  },
  {
    "text": "I don't know if that's\neasier to think about. But these cases\nare actually hard, at least in two out\nof the three pictures.",
    "start": "3363470",
    "end": "3370710"
  },
  {
    "text": "One of them we have\nalready proved. ",
    "start": "3370710",
    "end": "3376150"
  },
  {
    "text": "If you have a max\ndegree three grid graph, if max degree is\nthree then it must",
    "start": "3376150",
    "end": "3383460"
  },
  {
    "text": "be on the boundary because\nof that absent pixel. So we already showed the thin\ncase for squares is hard.",
    "start": "3383460",
    "end": "3389040"
  },
  {
    "text": "Max degree thin implies\nthin, four squares.",
    "start": "3389040",
    "end": "3394450"
  },
  {
    "text": "And so you might ask\nwhat about triangles?",
    "start": "3394450",
    "end": "3401710"
  },
  {
    "text": "OK, so finally we get\nto an actual proof.",
    "start": "3401710",
    "end": "3407024"
  },
  {
    "text": "It's going to be the\nsame kind of thing. I'll skip this detail, but this\nis the planar and betting part.",
    "start": "3407024",
    "end": "3412359"
  },
  {
    "text": "So again, we're going to reduce\nfrom bipartite max degree three",
    "start": "3412360",
    "end": "3417710"
  },
  {
    "text": "planar Hamiltonicity\nas we did before. And then we're going\nto draw it in the plane",
    "start": "3417710",
    "end": "3424770"
  },
  {
    "text": "in some kind of\nparity-preserving sense with edges routed on\nthe triangular grid.",
    "start": "3424770",
    "end": "3431860"
  },
  {
    "text": "That's not hard. Then we have very\nsimilar looking gadgets.",
    "start": "3431860",
    "end": "3438420"
  },
  {
    "text": "Although in this case,\na vertex can just be a little triangle of dots.",
    "start": "3438420",
    "end": "3444460"
  },
  {
    "text": "The edge gadget's going\nto look pretty similar. It's like a ladder, but now the\nladder has funny rungs on it.",
    "start": "3444460",
    "end": "3451244"
  },
  {
    "text": "Turns are just what\nyou would expect.  Notice we get degree five here.",
    "start": "3451244",
    "end": "3460322"
  },
  {
    "text": "But otherwise,\nthings are the same. You can traverse either in\nthe loopback configuration. When you have this\npin joint there",
    "start": "3460322",
    "end": "3466570"
  },
  {
    "text": "you'll be forced to\nturn around there. Or you zigzag all\nthe way through, and then that's used\nfor present edges.",
    "start": "3466570",
    "end": "3474224"
  },
  {
    "text": "So this is edges you don't\nuse in Hamiltonian cycle. These are edges you do use. And there are two\ntypes of vertices.",
    "start": "3474224",
    "end": "3479619"
  },
  {
    "text": "There's the ones of one parity\nwhere you always meet-- here,",
    "start": "3479620",
    "end": "3485690"
  },
  {
    "text": "you're kind of meeting\nwith three edges, but you're kind of meeting\non a whole edge, like that.",
    "start": "3485690",
    "end": "3491270"
  },
  {
    "text": "And from here you\nhave the choice whether you do this or do this. Two of them will be zigzags,\none of them will be double-back.",
    "start": "3491270",
    "end": "3500826"
  },
  {
    "text": "And then there's the\nother parity class where you only have pin joints. These are, again, just\nconnected by single edges,",
    "start": "3500826",
    "end": "3505841"
  },
  {
    "text": "so they act just\nlike we had before. So pretty much the same\nreduction, but with different--",
    "start": "3505841",
    "end": "3512750"
  },
  {
    "text": "in some ways, this is an\neasier reduction I think. ",
    "start": "3512750",
    "end": "3518599"
  },
  {
    "text": "Cool. Now, that was max degree five. What about max degree four?",
    "start": "3518600",
    "end": "3523790"
  },
  {
    "text": "So here we had degree\nfive vertex there. If we kind of do our same\ntrick of spreading them around,",
    "start": "3523790",
    "end": "3532080"
  },
  {
    "text": "you end up with\ndegree four at most. And it acts the same.",
    "start": "3532080",
    "end": "3537550"
  },
  {
    "text": "And the vertices we're going\nto explode into a hexagon.",
    "start": "3537550",
    "end": "3544870"
  },
  {
    "text": "And it works. So I should say max degree\nfour triangle is NP-hard.",
    "start": "3544870",
    "end": "3562480"
  },
  {
    "text": " This reduction\nshould also be thin.",
    "start": "3562480",
    "end": "3568790"
  },
  {
    "text": "Previous one may\nhave also been thin, but again, all of the\nvertices are on the boundary.",
    "start": "3568790",
    "end": "3574410"
  },
  {
    "text": "So this is the thin\ntriangle is hard. Max degree four\ntriangle is hard.",
    "start": "3574410",
    "end": "3579644"
  },
  {
    "text": "We did this one. So we've done all\nthe hardest proofs. That will cease to be\nthe case in a moment.",
    "start": "3579644",
    "end": "3587720"
  },
  {
    "text": "OK, here's one more thing. Max-- so what about hex grids.",
    "start": "3587720",
    "end": "3595480"
  },
  {
    "text": "I haven't mentioned any\nhardness for hex grids yet. And one thing we know\nis max degree three,",
    "start": "3595480",
    "end": "3601680"
  },
  {
    "text": "writing new squares, but\nalso hexagons are NP-hard.",
    "start": "3601680",
    "end": "3609609"
  },
  {
    "text": "Now, this is not so impressive. Every vertex in the hex grid\nhas a degree at most three.",
    "start": "3609610",
    "end": "3615090"
  },
  {
    "text": "But you can't hope\nfor two, so that's the best you can hope for in\nmax degree characterization",
    "start": "3615090",
    "end": "3620640"
  },
  {
    "text": "with respect to hex grid.  This proof is tricky.",
    "start": "3620640",
    "end": "3626195"
  },
  {
    "text": " Maybe before I go there let me\njust mention one other result.",
    "start": "3626195",
    "end": "3635390"
  },
  {
    "text": "So this is delayed. One other notion you can\nthink about for grid graphs",
    "start": "3635390",
    "end": "3642809"
  },
  {
    "text": "is called polygonal\ngrid graphs, and that's what's supposed to\nbe illustrated here.",
    "start": "3642810",
    "end": "3648049"
  },
  {
    "text": "Polygonal's kind of the\nopposite of super thin. So super thin we\nhad an edge that",
    "start": "3648050",
    "end": "3653570"
  },
  {
    "text": "had non-pixels on both sides. In polygonal, every edge\nhas a pixel on at least one",
    "start": "3653570",
    "end": "3661770"
  },
  {
    "text": "of the two sides. So you never have an\nedge between two holes or a hole in the outside face.",
    "start": "3661770",
    "end": "3668900"
  },
  {
    "text": "That's a polygonal situation.  So that's something\nyou might assume.",
    "start": "3668900",
    "end": "3675080"
  },
  {
    "text": "It's sort of like\nsaying you had a polygon and then you sort of took\nthe interior of the polygon, whereas here, this\nwas not really",
    "start": "3675080",
    "end": "3680710"
  },
  {
    "text": "a polygon because it's like\nthere was a doubled edge there or something. That's not really\na nice picture.",
    "start": "3680710",
    "end": "3686884"
  },
  {
    "text": "So polygonal's\nsomething you might hope for in the\npractical applications, which we will get to soon.",
    "start": "3686884",
    "end": "3693510"
  },
  {
    "text": "Funny thing is for polygonal\ntriangular grid graphs, the problem is polynomial.",
    "start": "3693510",
    "end": "3700119"
  },
  {
    "text": "And for polygonal hex grid\ngraphs, the problem is NP-hard.",
    "start": "3700120",
    "end": "3708410"
  },
  {
    "text": "And for polygonal square\ngrid graphs, we don't know.",
    "start": "3708410",
    "end": "3713460"
  },
  {
    "text": "Another open problem.  I won't prove this.",
    "start": "3713460",
    "end": "3719220"
  },
  {
    "text": "I think, again, this is\nalmost always feasible. It's almost always\na Hamiltonian path.",
    "start": "3719220",
    "end": "3725220"
  },
  {
    "text": "For this, I'm guessing it\nfollows from the same proof. Let's go into this\nproof, hex grid hardness.",
    "start": "3725220",
    "end": "3737590"
  },
  {
    "text": "Again, there's a drawing step. You're given some\nbipartite max degree three graph, and bipartite\nplanar max three degree graph.",
    "start": "3737590",
    "end": "3748280"
  },
  {
    "text": "And then we're going to\ndraw on the hex grid. In this case, we're going\nto represent variables",
    "start": "3748280",
    "end": "3753540"
  },
  {
    "text": "by sort of horizontal strips,\njust because that's what is a little bit easier to do.",
    "start": "3753540",
    "end": "3760110"
  },
  {
    "text": "So it turns out-- I think turns\nare really annoying on the hex grid. Hard to do a turn.",
    "start": "3760110",
    "end": "3765480"
  },
  {
    "text": "So we're going to focus\nour turn attention within these little rectangles. And it turns out you can\ndraw everything in such a way",
    "start": "3765480",
    "end": "3772680"
  },
  {
    "text": "that all of the edges are\nstraight lines, straight line segments, if you grow the\nvertices to be these longer",
    "start": "3772680",
    "end": "3779510"
  },
  {
    "text": "horizontal things. So believe that.",
    "start": "3779510",
    "end": "3785280"
  },
  {
    "text": "Then main idea is a very\nsimilar kind of thing.",
    "start": "3785280",
    "end": "3791021"
  },
  {
    "text": "In this case, they're\ngoing to draw the pictures and they're going to draw\nall of the forced edges that must be in there,\nand here they haven't",
    "start": "3791021",
    "end": "3797540"
  },
  {
    "text": "drawn the part in the middle. There's two ways to fill it in. Essentially, you could\nzigzag back and forth, just like before.",
    "start": "3797540",
    "end": "3802950"
  },
  {
    "text": "Or you could go there and\ncome back, just like before. So edge gadget looks\npretty reasonable.",
    "start": "3802950",
    "end": "3808225"
  },
  {
    "text": " These are some more gadgets.",
    "start": "3808225",
    "end": "3813670"
  },
  {
    "text": "These are like sub-routines\nthey're going to use. Their named and they have color\npatterns to give you a sense.",
    "start": "3813670",
    "end": "3820099"
  },
  {
    "text": "This is going to be\nthe center of a vertex, and there's a few different\nthings you could do with that.",
    "start": "3820100",
    "end": "3825849"
  },
  {
    "text": "This is some kind\nof turn gadget. That's what I called it. They called it something\na little different.",
    "start": "3825850",
    "end": "3831030"
  },
  {
    "text": "I think a rosette. But you can sort of\nzigzag, or you can kind of",
    "start": "3831030",
    "end": "3837250"
  },
  {
    "text": "go there and double-back,\nbut you end up with different\norientations at the end. This is what they call a U turn.",
    "start": "3837250",
    "end": "3844079"
  },
  {
    "text": "Again, these edges are forced. You can either use\nit as a zigzag, or they could both kind\nof cancel each other out.",
    "start": "3844080",
    "end": "3850220"
  },
  {
    "text": "Sort of don't meet each other. So you could do different\nkind of connectivity.",
    "start": "3850220",
    "end": "3855670"
  },
  {
    "text": "With that in mind, here\nis all the vertex gadgets.",
    "start": "3855670",
    "end": "3861390"
  },
  {
    "text": "So I don't know all\nthe details here.",
    "start": "3861390",
    "end": "3866421"
  },
  {
    "text": "But I think there's\na lot of cases because of the different ways\nthings could be connected.",
    "start": "3866421",
    "end": "3871780"
  },
  {
    "text": "You could have like one\non top of the-- notice the dash things are the\nrectangles that I had before.",
    "start": "3871780",
    "end": "3877740"
  },
  {
    "text": "Normally they'd be\nreally spread out. So maybe you have two in\nthe bottom, one on the top, here I have two on the\ntop, one on the bottom.",
    "start": "3877740",
    "end": "3884190"
  },
  {
    "text": "And they could be oriented like\nthis, or oriented like that. So there's a lot of\ndifferent cases as a result.",
    "start": "3884190",
    "end": "3890680"
  },
  {
    "text": "The core part in the\nmiddle is the same. It's pretty much\nlike the examples we had before of\nessentially like a little 3",
    "start": "3890680",
    "end": "3899369"
  },
  {
    "text": "by 3 square for the square\ncase, or a little triangle in the triangle case. A little bit bigger in a hex. It's basically a cycle is\nan extra dot in the middle.",
    "start": "3899370",
    "end": "3908359"
  },
  {
    "text": "But then this was\na U turn gadgets, so if something\nwas coming up here,",
    "start": "3908360",
    "end": "3914079"
  },
  {
    "text": "you could just sort\nof turn back around if you don't want\nto use the edge.",
    "start": "3914080",
    "end": "3919320"
  },
  {
    "text": "I think these are\nprob-- well, yeah, so there's probably\nalso two parity classes. There's the turn gadgets.",
    "start": "3919320",
    "end": "3926329"
  },
  {
    "text": "And it works, but\nit's complicated. ",
    "start": "3926330",
    "end": "3935140"
  },
  {
    "text": "I think that's all I'll say\nabout various grid graphs. AUDIENCE: Yeah. You said that in\nhexagonal grids were open?",
    "start": "3935140",
    "end": "3941349"
  },
  {
    "text": "Did you mean the vertex? Every vertex on the boundary-- ERIK DEMAINE: It means every\nvertex on the boundary. AUDIENCE: --[INAUDIBLE].",
    "start": "3941349",
    "end": "3947320"
  },
  {
    "text": "ERIK DEMAINE: No. It's not necessarily the same. So if you have hex grid--\nI mean this could still",
    "start": "3947320",
    "end": "3952510"
  },
  {
    "text": "be a boundary\ncycle and you still have a degree three vertex. Something like\nthis part is thin.",
    "start": "3952510",
    "end": "3959150"
  },
  {
    "text": "And I'm guessing you\ncould complete that. So they're probably\nvery special, so I could imagine the thin\nhex grids are polynomial,",
    "start": "3959150",
    "end": "3966079"
  },
  {
    "text": "but it's not known. OK. One more picture. This is an actual explicitly\nconstructed example",
    "start": "3966080",
    "end": "3973270"
  },
  {
    "text": "from that graph to\nthis crazy gadgets. But now you can\nsee a little better",
    "start": "3973270",
    "end": "3979220"
  },
  {
    "text": "what the rectangles look like. If you want to\nstretch something out, there's always horizontal\nwires that you can stretch out.",
    "start": "3979220",
    "end": "3984870"
  },
  {
    "text": "And I keep calling them wires. So those horizontal\npieces of edge gadgets that you can stretch out\nso that you end up firing",
    "start": "3984870",
    "end": "3992050"
  },
  {
    "text": "and hitting the next vertex,\nwhich is this rectangle. And when you spread\nout the rectangles",
    "start": "3992050",
    "end": "3997360"
  },
  {
    "text": "you have to stretch out\nthese diagonal shots. Cool.",
    "start": "3997360",
    "end": "4002420"
  },
  {
    "text": "Those hex grid graphs. Why do we care about\nhex grid graphs so much? Because Settlers of Catan,\nand various other board games",
    "start": "4002420",
    "end": "4010680"
  },
  {
    "text": "that have a hex grid. Now, has anyone here not\nplayed Settlers of Catan?",
    "start": "4010680",
    "end": "4016980"
  },
  {
    "text": "OK, a few. There's a whole game to it. But--",
    "start": "4016980",
    "end": "4022608"
  },
  {
    "text": "[LAUGHTER] What I'm going to\nfocus on is this card.",
    "start": "4022608",
    "end": "4028520"
  },
  {
    "text": "It's called longest road. So in general, you're\nconstructing cities.",
    "start": "4028520",
    "end": "4033990"
  },
  {
    "text": "Don't worry about cities. But you're constructing\nthese road segments. They're edges on the hex grid.",
    "start": "4033990",
    "end": "4039590"
  },
  {
    "text": "And the longest road says that\nyou get two points, two victory points, if you have the longest\nroad, meaning the longest",
    "start": "4039590",
    "end": "4046910"
  },
  {
    "text": "path that can be\nformed using edges of your color versus edges\nof anyone else's color,",
    "start": "4046910",
    "end": "4051980"
  },
  {
    "text": "then you get two points. So here is the idea. Settlers of Catan has\nrandomness and stuff like that,",
    "start": "4051980",
    "end": "4058350"
  },
  {
    "text": "but again, if we look\nat a mate-in-1 problem, that goes out the window. Just can I win in this one move.",
    "start": "4058350",
    "end": "4063580"
  },
  {
    "text": "There's no randomness to that. Let's suppose you have\ntons of resources. This is what you\nneed to build a road.",
    "start": "4063580",
    "end": "4069850"
  },
  {
    "text": "And inconveniently,\nyour opponents have built cities and things\nin all of these white spots,",
    "start": "4069850",
    "end": "4076099"
  },
  {
    "text": "so you're not allowed\nto build roads there. That's just part of the rules. So that's the opponent's\nform obstacles.",
    "start": "4076099",
    "end": "4082140"
  },
  {
    "text": "And then because you\nhave infinite cash, you can basically build\nthe entire grid graph here.",
    "start": "4082140",
    "end": "4088130"
  },
  {
    "text": "And then to figure out whether\nthere's a really long road, namely a road length n, where\nn is the number of pixels that",
    "start": "4088130",
    "end": "4095130"
  },
  {
    "text": "were not occupied by opponents. Number of dots that are\nnot occupied by opponents",
    "start": "4095130",
    "end": "4101049"
  },
  {
    "text": "is NP-complete. Cool? And your opponent has a\nslightly shorter road,",
    "start": "4101050",
    "end": "4106740"
  },
  {
    "text": "so you really have to\ndistinguish whether you had the longest road.",
    "start": "4106740",
    "end": "4112000"
  },
  {
    "text": "In fact, I like to say\nmate-in-0 is NP-complete, deciding whether you've already\nwon the game is NP-complete.",
    "start": "4112000",
    "end": "4119549"
  },
  {
    "text": "Now you don't even need cash. It's just I give\nyou a configuration. Do you have the longest\nroad is NP-hard.",
    "start": "4119550",
    "end": "4125979"
  },
  {
    "text": "So it's the only mate-in-0\nhardness result I know of. Maybe we can find more.",
    "start": "4125979",
    "end": "4132060"
  },
  {
    "text": "OK, so that's why\nhex grids are cool. Let's do some more games.",
    "start": "4132060",
    "end": "4138100"
  },
  {
    "text": "Here is another Nikoli\npuzzle, Slither Link. Their more famous one.",
    "start": "4138100",
    "end": "4143410"
  },
  {
    "text": "So you're given a\ngrid of squares. Each square is either blank,\nmeaning no constraint, or there's a number saying\nthere should be exactly two",
    "start": "4143410",
    "end": "4150509"
  },
  {
    "text": "edges among those four. And there should be exactly\nthree edges among those four. Your goal is to find a\ncycle-- not Hamiltonian",
    "start": "4150510",
    "end": "4157549"
  },
  {
    "text": "but just a cycle, doesn't visit\nall the dots-- that satisfies that neighboring constraint.",
    "start": "4157550",
    "end": "4163420"
  },
  {
    "text": "So here there were exactly two. Here there are exactly\nthree edges in your cycle.",
    "start": "4163420",
    "end": "4170270"
  },
  {
    "text": "OK? This is the very first\npuzzle on the website. Again, there are books\non Slither Link puzzles.",
    "start": "4170270",
    "end": "4175660"
  },
  {
    "text": "And here is a little\noverkill of a hardness proof, but in one slide.",
    "start": "4175660",
    "end": "4182009"
  },
  {
    "text": "So this is a reduction from\nHamiltonicity in planar graphs.",
    "start": "4182010",
    "end": "4188130"
  },
  {
    "text": "So you take any planar graph\nand draw it in the grid. This is one of the very\nfirst steps we did today.",
    "start": "4188130",
    "end": "4194380"
  },
  {
    "text": "And then if you do that, there\nare two types of vertices. There's the ones\nyou have to visit and there's the ones\nyou don't have to visit.",
    "start": "4194380",
    "end": "4200234"
  },
  {
    "text": "Now, we know grid\ngraphs are hard. So we could actually\nassume all of the vertices have to be visited.",
    "start": "4200234",
    "end": "4206690"
  },
  {
    "text": "But for whatever reason,\nthis proof did not do that. This is back in 2000,\nso at that point maybe",
    "start": "4206690",
    "end": "4212640"
  },
  {
    "text": "it was not so well known. But these days, grid\ngraphs, Hamiltonicity is used a lot, but\nprobably not so much then.",
    "start": "4212640",
    "end": "4220180"
  },
  {
    "text": "So anyway, there's\nthis gadget which is you can do whatever\nyou want, basically.",
    "start": "4220180",
    "end": "4225840"
  },
  {
    "text": "These are the vertices that\ndon't need to be visited. The key gadget is this one. So let's focus our\nattention here.",
    "start": "4225840",
    "end": "4232679"
  },
  {
    "text": "We have these ones which means\nthe cycle must come here. And so collectively these are\ngoing to form Hamiltonian cycle",
    "start": "4232680",
    "end": "4240070"
  },
  {
    "text": "constraints. You're building a cycle and\nyou have to visit these ones. Now it turns out no matter\nwhich end you come in",
    "start": "4240070",
    "end": "4246640"
  },
  {
    "text": "and which end you leave, you\ncan visit all of the ones. You could be adjacent\nto all of the ones. So different turns\nare going straight.",
    "start": "4246640",
    "end": "4254740"
  },
  {
    "text": "And so if there is\na Hamiltonian cycle, you'll be able to\nvisit all the ones. And conversely, if you\ncan visit all the ones,",
    "start": "4254740",
    "end": "4261850"
  },
  {
    "text": "that must be a\nHamiltonian cycle. The one extra thing\nwe need to say, if you just glue these\ngadgets together,",
    "start": "4261850",
    "end": "4266960"
  },
  {
    "text": "then there's no-- you can go\nfrom anywhere to anywhere. So you just add in\nsome zeroes here",
    "start": "4266960",
    "end": "4274100"
  },
  {
    "text": "if you don't want there to be a\nconnection from left to right. So you can use that to\ndelineate the boundary.",
    "start": "4274100",
    "end": "4279219"
  },
  {
    "text": "So this could actually do\na sub-graph of a grid graph even more special, or you leave\na clear if there's an edge.",
    "start": "4279220",
    "end": "4285255"
  },
  {
    "text": "And so you get a\npicture like this. In this case, they're\nusing these bunch of zeroes",
    "start": "4285255",
    "end": "4291150"
  },
  {
    "text": "to say, well, you\ndon't have to visit these pixels because they're\njust simulating a big edge.",
    "start": "4291150",
    "end": "4296755"
  },
  {
    "text": "But we really have\ninfrastructure to simulate edges. We don't really need that. So that's a really easy proof.",
    "start": "4296755",
    "end": "4302850"
  },
  {
    "text": " I would say in\ngeneral, what you have to be careful about here\nis that edges are free,",
    "start": "4302850",
    "end": "4309350"
  },
  {
    "text": "because in Hamiltonian\ncycle you're not supposed to pay for the edges. You just have to\nvisit every vertex.",
    "start": "4309350",
    "end": "4314739"
  },
  {
    "text": "But that's really easy\nin this kind of set up. Another Nikoli puzzle,\nHashiwokakero, bridge building.",
    "start": "4314740",
    "end": "4323850"
  },
  {
    "text": "You have a bunch of\ndots in the plane. Each dot has a number on it,\nspecifying a degree request.",
    "start": "4323850",
    "end": "4331290"
  },
  {
    "text": "And your goal is to make\na connected structure. It looks like it's\nusually a tree,",
    "start": "4331290",
    "end": "4337150"
  },
  {
    "text": "but that's not part\nof the constraints. Where every vertex\nhas that degree, you can use multiple edges.",
    "start": "4337150",
    "end": "4342550"
  },
  {
    "text": "You could build multiple bridges\nbetween the same two cities. And so there's four incident to\nthat, eight incident to that,",
    "start": "4342550",
    "end": "4348849"
  },
  {
    "text": "and everything's orthogonal. It can only build\nhorizontal, vertical. You can't build a\nbridge like this.",
    "start": "4348849",
    "end": "4354190"
  },
  {
    "text": "You're not allowed\nto make turns. AUDIENCE: Same as\nstandard coding where you've only got two\nparallel edges per [INAUDIBLE].",
    "start": "4354190",
    "end": "4359932"
  },
  {
    "text": "ERIK DEMAINE: Ah. OK. So also standard is that max\ndouble-edge, no triple-edge.",
    "start": "4359932",
    "end": "4366800"
  },
  {
    "text": "Thank you. Obviously, i haven't\nactually played. It won't matter\nin this reduction.",
    "start": "4366800",
    "end": "4372590"
  },
  {
    "text": "So here we are reducing from\nHamiltonicity in grid graphs. So these are edges that\nwe might want to allow.",
    "start": "4372590",
    "end": "4379330"
  },
  {
    "text": "In general, we're going to use\nthese little ones to delineate the boundary. It's just the same kind\nof trick we use here",
    "start": "4379330",
    "end": "4387469"
  },
  {
    "text": "with Euclidean degree three MST. We added a little dot\njust off to the side.",
    "start": "4387470",
    "end": "4393385"
  },
  {
    "text": "It's not a metric problem\nhere, so we're just adding it one unit over. That delineates the boundary. It basically is forced to\nconnect into the only neighbor.",
    "start": "4393386",
    "end": "4401399"
  },
  {
    "text": "If you tried to do this\nkind of connection, you'd end up being disconnected. You'd just get a\nsingle edge there.",
    "start": "4401399",
    "end": "4406489"
  },
  {
    "text": "Because ones will\nonly face ones. Sorry. The other constraint\nis you're not allowed to have crossing bridges.",
    "start": "4406490",
    "end": "4413570"
  },
  {
    "text": "That won't matter here. So we delineate the\nboundary at the ones, and then every other\nvertex is going",
    "start": "4413570",
    "end": "4419060"
  },
  {
    "text": "to have value two plus the\nnumber of boundary edges incident to it. So here it happens to be four,\nhere it happens to be three.",
    "start": "4419060",
    "end": "4425660"
  },
  {
    "text": "So I could have gone like this. That would have been fine. But in the cycle, I happened\nto go around that way.",
    "start": "4425660",
    "end": "4431790"
  },
  {
    "text": "That's representing the cycle. So again, very easy. This shows you how useful it\nis once you have grid graphs.",
    "start": "4431790",
    "end": "4438890"
  },
  {
    "text": "You can do any problem on any\ngrid, pretty much, that has any kind of tour-like thing.",
    "start": "4438890",
    "end": "4444019"
  },
  {
    "text": "That will be hard\nusing these reductions. So that's why we care. ",
    "start": "4444020",
    "end": "4451470"
  },
  {
    "text": "All right. Here's some\npractical motivation. Well, I have a game here. But suppose you're\nmowing your lawn.",
    "start": "4451470",
    "end": "4457740"
  },
  {
    "text": "And so usually a lawnmower\nhas a circular cutting tool, but in this game it happens\nto be a square cutting tool.",
    "start": "4457740",
    "end": "4464550"
  },
  {
    "text": "It's basically the same. And you have some polygon with\nholes that you want to mow.",
    "start": "4464550",
    "end": "4472271"
  },
  {
    "text": "There's actually two\nversions of the problem. ",
    "start": "4472271",
    "end": "4485344"
  },
  {
    "text": "And they were introduced by\nArkin, Fekete and Mitchell, 2000.",
    "start": "4485344",
    "end": "4491271"
  },
  {
    "text": "One's called Lawn Mowing. ",
    "start": "4491271",
    "end": "4497690"
  },
  {
    "text": "So Lawn Mowing you're\ngiven a polygon. You have to visit, let's say,\nif we're using a square cutter,",
    "start": "4497690",
    "end": "4504010"
  },
  {
    "text": "you have to visit every\npixel of the polygon. You have to visit\nthe entire-- you're moving a unit square around. You've got to visit everything\nto cut the entire lawn.",
    "start": "4504010",
    "end": "4511300"
  },
  {
    "text": "But you're also allowed\nto leave the polygon, because for a lawn mower you\ncan go outside the grass. You can go onto the pavement.",
    "start": "4511300",
    "end": "4517010"
  },
  {
    "text": "Most lawnmowers that\ndoesn't break it. So that's called Lawn Mowing. You can go outside if you want.",
    "start": "4517010",
    "end": "4523090"
  },
  {
    "text": " And the other problem\nis called Milling.",
    "start": "4523090",
    "end": "4528275"
  },
  {
    "text": " And with Milling,\nyou can't go outside.",
    "start": "4528275",
    "end": "4533969"
  },
  {
    "text": " That video game is probably\nsome hybrid between these two",
    "start": "4533970",
    "end": "4539570"
  },
  {
    "text": "problems, but both\nproblems have been considered a lot, especially\nfrom an approximation standpoint.",
    "start": "4539570",
    "end": "4544690"
  },
  {
    "text": "But there are lots of situations\nwhere this kind of problem comes up. Suppose you're laser cutting.",
    "start": "4544690",
    "end": "4550890"
  },
  {
    "text": "This is one of the\nfirst laser cutter projects we did with\nGeorge Hart, back in 2003,",
    "start": "4550890",
    "end": "4556410"
  },
  {
    "text": "where cutting out these\ntwo-headed salamanders like that and then\nassembling them. If you've ever been to G6 in\nStata, it's hanging there.",
    "start": "4556410",
    "end": "4565770"
  },
  {
    "text": "So you can think of this\nlaser cutting problems, you have a lot of dots and\nyou have to cut them all.",
    "start": "4565770",
    "end": "4571340"
  },
  {
    "text": "That is literally what\nhappens to laser cutter is pulsing with little dots. And in this case it\nlooks pretty clear",
    "start": "4571340",
    "end": "4577780"
  },
  {
    "text": "how to connect them together. But if you're cutting many\nsalamanders out of one sheet, and you think of the\nsalamander's pretty small,",
    "start": "4577780",
    "end": "4584909"
  },
  {
    "text": "that's like a TSP problem\nor really a milling problem. You have to visit all\nthese things using",
    "start": "4584910",
    "end": "4590000"
  },
  {
    "text": "the shortest-- it's really\na lawn mowing problem. So you can turn off\nthe laser and you can move around somewhere else\nthat you don't want to visit.",
    "start": "4590000",
    "end": "4599640"
  },
  {
    "text": "3D printing is like lawn\nmowing problem in each layer. So 3D printing is done\nby printing each layer",
    "start": "4599640",
    "end": "4606520"
  },
  {
    "text": "and then stacking\nthem up one at a time. So in each layer you have\nto deposit material in FDM,",
    "start": "4606520",
    "end": "4611989"
  },
  {
    "text": "say we're additive printing. You have to deposit material. If you're doing laser\ncuring, same kind of thing.",
    "start": "4611990",
    "end": "4617570"
  },
  {
    "text": "How do you move the laser with\nthe shortest amount of work. It's called milling.",
    "start": "4617570",
    "end": "4622809"
  },
  {
    "text": "I don't have an image for this. Because if you're doing NC\nmilling you have a drill and you're moving the drill\naround to cut out some shape",
    "start": "4622810",
    "end": "4629810"
  },
  {
    "text": "or to cut a region.  There you're not allowed\nto go outside the shape you",
    "start": "4629810",
    "end": "4636630"
  },
  {
    "text": "want to cut, because you go\noutside, you cut too much. And you don't want to\nhave to pay to retract.",
    "start": "4636630",
    "end": "4642220"
  },
  {
    "text": "There are other versions of the\nproblem where you can retract the cutting bit and so on.",
    "start": "4642220",
    "end": "4648320"
  },
  {
    "text": "So of course we proved\nmilling is hard. That is exactly the\nHamilton [INAUDIBLE]",
    "start": "4648320",
    "end": "4654280"
  },
  {
    "text": "graphs if you're not\nallowed to leave the region. Of course, that also shows\nthat lawn mowing is hard because you never want\nto go outside the region.",
    "start": "4654280",
    "end": "4661190"
  },
  {
    "text": "One fun result is lawn\nmowing is hard even when you have no holes in your region. So if you cut these little\nslits, from a lawn mowing",
    "start": "4661190",
    "end": "4668197"
  },
  {
    "text": "perspective it basically\nmakes no difference because you could\nstill go over it, and it doesn't really\nsave you anything",
    "start": "4668197",
    "end": "4673420"
  },
  {
    "text": "to not have to cut that. So lawn mowing is hard\neven without holes. ",
    "start": "4673420",
    "end": "4681349"
  },
  {
    "text": "Cool. I have one more problem. Do you want to see it? OK.",
    "start": "4681350",
    "end": "4687520"
  },
  {
    "text": "So here's-- sorry--\na brief warm-up. Suppose you have a grid graph.",
    "start": "4687520",
    "end": "4692700"
  },
  {
    "text": "You rotate it 45 degrees. You can represent each of these\nvertices as a vertical segment",
    "start": "4692700",
    "end": "4699199"
  },
  {
    "text": "if they're black parity\nor horizontal segment. If they're white parity\nsuch that segments",
    "start": "4699200",
    "end": "4705230"
  },
  {
    "text": "intersect, if and only if\nthere's an edge joining. So these are unit\northogonal segments. This is called an\nintersection graph",
    "start": "4705230",
    "end": "4711679"
  },
  {
    "text": "where the vertices\nare the objects, and the edges are\nwhether things intersect.",
    "start": "4711679",
    "end": "4717430"
  },
  {
    "text": "I need that, so Hamiltonicity\nin these graphs is hard. Here's a problem called\nminimum turn milling.",
    "start": "4717430",
    "end": "4725270"
  },
  {
    "text": "So a big issue for 3D\nprinting, for milling, usually when you're cutting\nor you're depositing material,",
    "start": "4725270",
    "end": "4732710"
  },
  {
    "text": "you can move really\nfast in a straight line. But when you need\nto make a turn you have to basically come to a\nstop and then speed up again.",
    "start": "4732710",
    "end": "4740050"
  },
  {
    "text": "So suppose you have infinite\nacceleration, so to speak,",
    "start": "4740050",
    "end": "4745099"
  },
  {
    "text": "or close to infinite\nacceleration. So once you're going straight\nyou can go arbitrarily far for the same cost,\nand what you really",
    "start": "4745100",
    "end": "4750610"
  },
  {
    "text": "pay for is the slowing\ndown and speeding back up at every corner. So then you want to minimize\nthe number of turns, not",
    "start": "4750610",
    "end": "4756310"
  },
  {
    "text": "the lengths. This is one of my\nfirst hardness proofs that was not about puzzles.",
    "start": "4756310",
    "end": "4762050"
  },
  {
    "text": "I think the original\npaper was 2000, the journal version's 2005. So suppose you have one of these\nrectangle intersection graphs.",
    "start": "4762050",
    "end": "4769170"
  },
  {
    "text": "What we're going to do is\nreplace each of these things with a cycle, and then\nthicken that cycle.",
    "start": "4769170",
    "end": "4778100"
  },
  {
    "text": "This is a thin grid\ngraph, not super thin.",
    "start": "4778100",
    "end": "4784090"
  },
  {
    "text": "Maybe super thin. Here it's super\nthin, and here you have a little square\nthat you're cutting with.",
    "start": "4784090",
    "end": "4791790"
  },
  {
    "text": "So each of these things you\nhave to make four turns. Then also, to go from one\nof these to one of these,",
    "start": "4791790",
    "end": "4798770"
  },
  {
    "text": "to go from one vertex to\nthe next, you need a turn. So in general, you're going\nto need 5n turns in order",
    "start": "4798770",
    "end": "4805520"
  },
  {
    "text": "to visit n of these\noriginal segments. And you can do that\nif and only if there's a Hamiltonian cycle\nin the original graph,",
    "start": "4805520",
    "end": "4812510"
  },
  {
    "text": "which was this picture. Basically, if you\ncome in one position--",
    "start": "4812510",
    "end": "4817760"
  },
  {
    "text": "so here's one of these\nrectangles you want to visit. You come in one\nplace and you know",
    "start": "4817760",
    "end": "4824420"
  },
  {
    "text": "that you want to leave\non some other place. So you double this edge--\nyou're going to cut it twice.",
    "start": "4824420",
    "end": "4829520"
  },
  {
    "text": "That's allowed in this model. And then you loop around. And the number of turns here\nis exactly one to come in,",
    "start": "4829520",
    "end": "4835660"
  },
  {
    "text": "four to go around, and\nthen one to come out. In general, it's one\nper edge in the cycle,",
    "start": "4835660",
    "end": "4841080"
  },
  {
    "text": "and four per vertex\nin the cycle. So again, Hamiltonicity\ngives us what we want.",
    "start": "4841080",
    "end": "4847679"
  },
  {
    "text": "Even where we minimize\nthe number of turns, we can simulate that by counting\nvertices as turns, basically.",
    "start": "4847679",
    "end": "4855740"
  },
  {
    "text": "And that's it for Hamiltonicity. ",
    "start": "4855740",
    "end": "4867784"
  }
]