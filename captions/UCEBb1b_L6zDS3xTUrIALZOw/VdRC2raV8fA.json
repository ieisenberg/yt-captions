[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "When trying to minimize a sum-of-products\nexpression using the reduction identity, our",
    "start": "880",
    "end": "5421"
  },
  {
    "text": "goal is to find two product terms that can\nbe written as one smaller product term, eliminating",
    "start": "5421",
    "end": "10520"
  },
  {
    "text": "the \"don't-care\" variable.",
    "start": "10520",
    "end": "12760"
  },
  {
    "text": "This is easy to do when two the product terms\ncome from adjacent rows in the truth table.",
    "start": "12760",
    "end": "17640"
  },
  {
    "text": "For example, look at the bottom two rows in\nthis truth table.",
    "start": "17640",
    "end": "21619"
  },
  {
    "text": "Since the Y output is 1 in both cases, both\nrows will be represented in the sum-of-products",
    "start": "21619",
    "end": "26570"
  },
  {
    "text": "expression for this function.",
    "start": "26570",
    "end": "29029"
  },
  {
    "text": "It's easy to spot the don't care variable:\nwhen C and B are both 1, the value of A isn't",
    "start": "29029",
    "end": "35230"
  },
  {
    "text": "needed to determine the value of Y.",
    "start": "35230",
    "end": "36821"
  },
  {
    "text": "Thus, the last two rows of the truth table\ncan be represented by the single product term",
    "start": "36821",
    "end": "42431"
  },
  {
    "text": "(B AND C).",
    "start": "42431",
    "end": "45780"
  },
  {
    "text": "Finding these opportunities would be easier\nif we reorganized the truth table so that",
    "start": "45780",
    "end": "49820"
  },
  {
    "text": "the appropriate product terms were on adjacent\nrows.",
    "start": "49820",
    "end": "54030"
  },
  {
    "text": "That's what we've done in the Karnaugh map,\nK-map for short, shown on the right.",
    "start": "54030",
    "end": "58559"
  },
  {
    "text": "The K-map organizes the truth table as a two-dimensional\ntable with its rows and columns labeled with",
    "start": "58560",
    "end": "64080"
  },
  {
    "text": "the possible values for the inputs.",
    "start": "64080",
    "end": "66969"
  },
  {
    "text": "In this K-map, the first row contains entries\nfor when C is 0 and the second row contains",
    "start": "66969",
    "end": "72420"
  },
  {
    "text": "entries for when C is 1.",
    "start": "72420",
    "end": "74700"
  },
  {
    "text": "Similarly, the first column contains entries\nfor when A is 0 and B is 0.",
    "start": "74700",
    "end": "79409"
  },
  {
    "text": "And so on.",
    "start": "79409",
    "end": "81258"
  },
  {
    "text": "The entries in the K-map are exactly the same\nas the entries in the truth table, they're",
    "start": "81259",
    "end": "85180"
  },
  {
    "text": "just formatted differently.",
    "start": "85180",
    "end": "88219"
  },
  {
    "text": "Note that the columns have been listed in\na special sequence that's different from the",
    "start": "88219",
    "end": "91659"
  },
  {
    "text": "usual binary counting sequence.",
    "start": "91659",
    "end": "94270"
  },
  {
    "text": "In this sequence, called a Gray Code, adjacent\nlabels differ in exactly one of their bits.",
    "start": "94270",
    "end": "100258"
  },
  {
    "text": "In other words, for any two adjacent columns,\neither the value of the A label changed, or",
    "start": "100259",
    "end": "104820"
  },
  {
    "text": "the value of the B label changed.",
    "start": "104820",
    "end": "107950"
  },
  {
    "text": "In this sense, the leftmost and rightmost\ncolumns are also adjacent.",
    "start": "107950",
    "end": "112868"
  },
  {
    "text": "We write the table as a two-dimensional matrix,\nbut you should think of it as cylinder with",
    "start": "112869",
    "end": "116729"
  },
  {
    "text": "its left and right edges touching.",
    "start": "116729",
    "end": "119318"
  },
  {
    "text": "If it helps you visualize which entries are\nadjacent, the edges of the cube shows which",
    "start": "119319",
    "end": "124049"
  },
  {
    "text": "3-bit input values differ by only one bit.",
    "start": "124049",
    "end": "128119"
  },
  {
    "text": "As shown by the red arrows, if two entries\nare adjacent in the cube, they are also adjacent",
    "start": "128119",
    "end": "132960"
  },
  {
    "text": "in the table.",
    "start": "132960",
    "end": "135260"
  },
  {
    "text": "It's easy to extend the K-map notation to\ntruth tables for functions with 4 inputs,",
    "start": "135260",
    "end": "139510"
  },
  {
    "text": "as shown here.",
    "start": "139510",
    "end": "141220"
  },
  {
    "text": "We've used a Gray code sequencing for the\nrows as well as the columns.",
    "start": "141220",
    "end": "145540"
  },
  {
    "text": "As before, the leftmost and rightmost columns\nare adjacent, as are the top and bottom rows.",
    "start": "145540",
    "end": "151670"
  },
  {
    "text": "Again, as we move to an adjacent column or\nan adjacent row, only one of the four input",
    "start": "151670",
    "end": "156830"
  },
  {
    "text": "labels will have changed.",
    "start": "156830",
    "end": "159270"
  },
  {
    "text": "To build a K-map for functions of 6 variables\nwe'd need a 4x4x4 matrix of values.",
    "start": "159270",
    "end": "165120"
  },
  {
    "text": "That's hard to draw on the 2D page and it\nwould be a challenge to tell which cells in",
    "start": "165120",
    "end": "169680"
  },
  {
    "text": "the 3D matrix were adjacent.",
    "start": "169680",
    "end": "172180"
  },
  {
    "text": "For more than 6 variables we'd need additional\ndimensions.",
    "start": "172180",
    "end": "175900"
  },
  {
    "text": "Something we can handle with computers, but\nhard for those of us who live in only a three-dimensional",
    "start": "175900",
    "end": "180680"
  },
  {
    "text": "space!",
    "start": "180680",
    "end": "182760"
  },
  {
    "text": "As a practical matter, K-maps work well for\nup to 4 variables, and we'll stick with that.",
    "start": "182760",
    "end": "188400"
  },
  {
    "text": "But keep in mind that you can generalize the\nK-map technique to higher dimensions.",
    "start": "188400",
    "end": "194530"
  },
  {
    "start": "194000",
    "end": "194000"
  },
  {
    "text": "So why talk about K-maps?",
    "start": "194530",
    "end": "196890"
  },
  {
    "text": "Because patterns of adjacent K-map entries\nthat contain 1's will reveal opportunities",
    "start": "196890",
    "end": "202050"
  },
  {
    "text": "for using simpler product terms in our sum-of-products\nexpression.",
    "start": "202050",
    "end": "206690"
  },
  {
    "text": "Let's introduce the notion of an implicant,\na fancy name for a rectangular region of the",
    "start": "206690",
    "end": "211840"
  },
  {
    "text": "K-map where the entries are all 1's.",
    "start": "211840",
    "end": "214220"
  },
  {
    "text": "Remember when an entry is a 1, we'll want\nthe sum-of-products expression to evaluate",
    "start": "214220",
    "end": "218910"
  },
  {
    "text": "to TRUE for that particular combination of\ninput values.",
    "start": "218910",
    "end": "223700"
  },
  {
    "text": "We require the width and length of the implicant\nto be a power of 2, i.e., the region should",
    "start": "223700",
    "end": "228910"
  },
  {
    "text": "have 1, 2, or 4 rows, and 1, 2, or 4 columns.",
    "start": "228910",
    "end": "235060"
  },
  {
    "text": "It's okay for implicants to overlap.",
    "start": "235060",
    "end": "237720"
  },
  {
    "text": "We say that an implicant is a prime implicant\nif it is not completely contained in any other",
    "start": "237720",
    "end": "242710"
  },
  {
    "text": "implicant.",
    "start": "242710",
    "end": "243710"
  },
  {
    "text": "Each product term in our final minimized sum-of-products\nexpression will be related to some prime implicant",
    "start": "243710",
    "end": "249490"
  },
  {
    "text": "in the K-map.",
    "start": "249490",
    "end": "252010"
  },
  {
    "text": "Let's see how these rules work in practice\nusing these two example K-maps.",
    "start": "252010",
    "end": "257160"
  },
  {
    "text": "As we identify prime implicants, we'll circle\nthem in red.",
    "start": "257160",
    "end": "261750"
  },
  {
    "text": "Starting with the K-map on the left, the first\nimplicant contains the singleton 1-cell that's",
    "start": "261750",
    "end": "266320"
  },
  {
    "text": "not adjacent to any other cell containing\n1's.",
    "start": "266320",
    "end": "270160"
  },
  {
    "text": "The second prime implicant is the pair of\nadjacent 1's in the upper right hand corner",
    "start": "270160",
    "end": "274240"
  },
  {
    "text": "of the K-map.",
    "start": "274240",
    "end": "275840"
  },
  {
    "text": "This implicant is has one row and two columns,\nmeeting our constraints on an implicant's",
    "start": "275840",
    "end": "280280"
  },
  {
    "text": "dimensions.",
    "start": "280280",
    "end": "282900"
  },
  {
    "text": "Finding the prime implicants in the right-hand\nK-map is a bit trickier.",
    "start": "282900",
    "end": "286860"
  },
  {
    "text": "Recalling that the left and right columns\nare adjacent, we can spot a 2x2 prime implicant.",
    "start": "286860",
    "end": "293270"
  },
  {
    "text": "Note that this prime implicant contains many\nsmaller 1x2, 2x1 and 1x1 implicants, but none",
    "start": "293270",
    "end": "299720"
  },
  {
    "text": "of those would be prime implicants since they\nare completely contained in the 2x2 implicant.",
    "start": "299720",
    "end": "305000"
  },
  {
    "text": "It's tempting draw a 1x1 implicant around\nthe remaining 1, but actually we want to find",
    "start": "305000",
    "end": "310680"
  },
  {
    "text": "the largest implicant that contains this particular\ncell.",
    "start": "310680",
    "end": "314370"
  },
  {
    "text": "In this case, that's the 1x2 prime implicant\nshown here.",
    "start": "314370",
    "end": "318650"
  },
  {
    "text": "Why do we want to find the largest possible\nprime implicants?",
    "start": "318650",
    "end": "321400"
  },
  {
    "text": "We'll answer that question in a minute…",
    "start": "321400",
    "end": "325180"
  },
  {
    "text": "Each implicant can be uniquely identified\nby a product term, a Boolean expression that",
    "start": "325180",
    "end": "329789"
  },
  {
    "text": "evaluates to TRUE for every cell contained\nwithin the implicant and FALSE for all other",
    "start": "329790",
    "end": "334590"
  },
  {
    "text": "cells.",
    "start": "334590",
    "end": "335669"
  },
  {
    "text": "Just as we did for the truth table rows at\nthe beginning of this chapter, we can use",
    "start": "335669",
    "end": "339290"
  },
  {
    "text": "the row and column labels to help us build\nthe correct product term.",
    "start": "339290",
    "end": "344940"
  },
  {
    "text": "The first implicant we circled corresponds\nto the product term (not A) AND (not B)",
    "start": "344940",
    "end": "350370"
  },
  {
    "text": "AND C, an expression that evaluates to TRUE\nwhen A is 0, B is 0, and C is 1.",
    "start": "350370",
    "end": "357960"
  },
  {
    "text": "How about the 1x2 implicant in the upper-right\nhand corner?",
    "start": "357960",
    "end": "362210"
  },
  {
    "text": "We don't want to include the input variables\nthat change as we move around in the implicant.",
    "start": "362210",
    "end": "367138"
  },
  {
    "text": "In this case the two input values that remain\nconstant are C (which has the value 0) and",
    "start": "367139",
    "end": "372590"
  },
  {
    "text": "A (which has the value 1), so the corresponding\nproduct term is A AND (not C).",
    "start": "372590",
    "end": "379350"
  },
  {
    "text": "Here are the two product terms for the two\nprime implicants in the right-hand K-map.",
    "start": "379350",
    "end": "385650"
  },
  {
    "text": "Notice that the larger the prime implicant,\nthe smaller the product term!",
    "start": "385650",
    "end": "390370"
  },
  {
    "text": "That makes sense: as we move around inside\na large implicant, the number of inputs that",
    "start": "390370",
    "end": "394270"
  },
  {
    "text": "remain constant across the entire implicant\nis smaller.",
    "start": "394270",
    "end": "397729"
  },
  {
    "text": "Now we see why we want to find the largest\npossible prime implicants: they give us the",
    "start": "397730",
    "end": "402400"
  },
  {
    "text": "smallest product terms!",
    "start": "402400",
    "end": "405190"
  },
  {
    "start": "405000",
    "end": "405000"
  },
  {
    "text": "Let's try another example.",
    "start": "405190",
    "end": "407250"
  },
  {
    "text": "Remember that we're looking for the largest\npossible prime implicants.",
    "start": "407250",
    "end": "410560"
  },
  {
    "text": "A good way to proceed is to find some un-circled\n1, and then identify the largest implicant",
    "start": "410560",
    "end": "415860"
  },
  {
    "text": "we can find that incorporates that cell.",
    "start": "415860",
    "end": "419110"
  },
  {
    "text": "There's a 2x4 implicant that covers the middle\ntwo rows of the table.",
    "start": "419110",
    "end": "423719"
  },
  {
    "text": "Looking at the 1's in the top row, we can\nidentify two 2x2 implicants that include those",
    "start": "423720",
    "end": "429100"
  },
  {
    "text": "cells.",
    "start": "429100",
    "end": "430770"
  },
  {
    "text": "There's a 4x1 implicant that covers the right\ncolumn, leaving the lonely 1 in the lower",
    "start": "430770",
    "end": "435948"
  },
  {
    "text": "left-hand corner of the table.",
    "start": "435949",
    "end": "438979"
  },
  {
    "text": "Looking for adjacent 1's and remembering the\ntable is cyclic, we can find a 2x2 implicant",
    "start": "438979",
    "end": "444770"
  },
  {
    "text": "that incorporates this last un-circled 1.",
    "start": "444770",
    "end": "449370"
  },
  {
    "text": "Notice that we're always looking for the largest\npossible implicant, subject to constraint",
    "start": "449370",
    "end": "453460"
  },
  {
    "text": "that each dimension has to be either 1, 2\nor 4.",
    "start": "453460",
    "end": "457470"
  },
  {
    "text": "It's these largest implicants that will turn\nout to be prime implicants.",
    "start": "457470",
    "end": "462030"
  },
  {
    "text": "Now that we've identified the prime implicants,\nwe're ready to build the minimal sum-of-products",
    "start": "462030",
    "end": "466630"
  },
  {
    "text": "expression.",
    "start": "466630",
    "end": "468290"
  },
  {
    "start": "468000",
    "end": "468000"
  },
  {
    "text": "Here are two example K-maps where we've shown\nonly the prime implicants needed to cover",
    "start": "468290",
    "end": "472600"
  },
  {
    "text": "all the 1's in the map.",
    "start": "472600",
    "end": "474630"
  },
  {
    "text": "This means, for example, that in the 4-variable\nmap, we didn't include the 4x1 implicant covering",
    "start": "474630",
    "end": "480430"
  },
  {
    "text": "the right column.",
    "start": "480430",
    "end": "482360"
  },
  {
    "text": "That implicant was a prime implicant since\nit wasn't completely contained by any other",
    "start": "482360",
    "end": "486569"
  },
  {
    "text": "implicant, but it wasn't needed to provide\na cover for all the ones in the table.",
    "start": "486570",
    "end": "492550"
  },
  {
    "text": "Looking at the top table, we'll assemble the\nminimal sum-of-products expression by including",
    "start": "492550",
    "end": "496819"
  },
  {
    "text": "the product terms for each of the shown implicants.",
    "start": "496820",
    "end": "500210"
  },
  {
    "text": "The top implicant has the product term A AND\n(not C), and the bottom implicant has the",
    "start": "500210",
    "end": "505650"
  },
  {
    "text": "product term (B AND C).",
    "start": "505650",
    "end": "508340"
  },
  {
    "text": "And we're done!",
    "start": "508340",
    "end": "510460"
  },
  {
    "text": "Why is the resulting equation minimal?",
    "start": "510460",
    "end": "513140"
  },
  {
    "text": "If there was some further reduction that could\nbe applied, to produce a yet smaller product",
    "start": "513140",
    "end": "517789"
  },
  {
    "text": "term, that would mean there was a larger prime\nimplicant that could have been circled in",
    "start": "517790",
    "end": "521959"
  },
  {
    "text": "the K-map.",
    "start": "521960",
    "end": "524470"
  },
  {
    "text": "Looking the bottom table, we can assemble\nthe sum-of-products expression term-by-term.",
    "start": "524470",
    "end": "530110"
  },
  {
    "text": "There were 4 prime implicants, so there are\n4 product terms in the expression.",
    "start": "530110",
    "end": "536170"
  },
  {
    "text": "And we're done.",
    "start": "536170",
    "end": "538180"
  },
  {
    "text": "Finding prime implicants in a K-map is faster\nand less error-prone that fooling around with",
    "start": "538180",
    "end": "542640"
  },
  {
    "text": "Boolean algebra identities.",
    "start": "542640",
    "end": "546130"
  },
  {
    "text": "Note that the minimal sum-of-products expression\nisn't necessarily unique.",
    "start": "546130",
    "end": "550550"
  },
  {
    "text": "If we had used a different mix of the prime\nimplicants when building our cover, we would",
    "start": "550550",
    "end": "554950"
  },
  {
    "text": "have come up with different sum-of-products\nexpression.",
    "start": "554950",
    "end": "557480"
  },
  {
    "text": "Of course, the two expressions are equivalent\nin the sense that they produce the same value",
    "start": "557480",
    "end": "562139"
  },
  {
    "text": "of Y for any particular combination of input\nvalues - they were built from the same truth",
    "start": "562140",
    "end": "567180"
  },
  {
    "text": "table after all.",
    "start": "567180",
    "end": "568279"
  },
  {
    "text": "And the two expressions will have the same\nnumber of operations.",
    "start": "568280",
    "end": "572690"
  },
  {
    "text": "So when you need to come with up a minimal\nsum-of-products expression for functions of",
    "start": "572690",
    "end": "576240"
  },
  {
    "text": "up to 4 variables, K-maps are the way to go!",
    "start": "576240",
    "end": "580070"
  },
  {
    "start": "580000",
    "end": "580000"
  },
  {
    "text": "We can also use K-maps to help us remove glitches\nfrom output signals.",
    "start": "580070",
    "end": "584240"
  },
  {
    "text": "Earlier in the chapter we saw this circuit\nand observed that when A was 1 and B was 1,",
    "start": "584240",
    "end": "588890"
  },
  {
    "text": "then a 1-to-0 transition on C might produce\na glitch on the Y output as the bottom product",
    "start": "588890",
    "end": "595020"
  },
  {
    "text": "term turned off and the top product term turned\non.",
    "start": "595020",
    "end": "599980"
  },
  {
    "text": "That particular situation is shown by the\nyellow arrow on the K-map, where we're transitioning",
    "start": "599980",
    "end": "604810"
  },
  {
    "text": "from the cell on the bottom row of the 1-1\ncolumn to the cell on the top row.",
    "start": "604810",
    "end": "610600"
  },
  {
    "text": "It's easy to see that we're leaving one implicant\nand moving to another.",
    "start": "610600",
    "end": "615130"
  },
  {
    "text": "It's the gap between the two implicants that\nleads to the potential glitch on Y.",
    "start": "615130",
    "end": "621160"
  },
  {
    "text": "It turns out there's a prime implicant that\ncovers the cells involved in this transition",
    "start": "621160",
    "end": "625250"
  },
  {
    "text": "- shown here with a dotted red outline.",
    "start": "625250",
    "end": "628480"
  },
  {
    "text": "We didn't include it when building the original\nsum-of-products implementation since the other",
    "start": "628480",
    "end": "633339"
  },
  {
    "text": "two product terms provided the necessary functionality.",
    "start": "633339",
    "end": "637770"
  },
  {
    "text": "But if we do include that implicant as a third\nproduct term in the sum-of products, no glitch",
    "start": "637770",
    "end": "643670"
  },
  {
    "text": "can occur on the Y output.",
    "start": "643670",
    "end": "646560"
  },
  {
    "text": "To make an implementation lenient, simply\ninclude all the prime implicants in the sum-of-products",
    "start": "646560",
    "end": "651250"
  },
  {
    "text": "expression.",
    "start": "651250",
    "end": "652330"
  },
  {
    "text": "That will bridge the gaps between product\nterms that lead to potential output glitches.",
    "start": "652330",
    "end": "656580"
  }
]