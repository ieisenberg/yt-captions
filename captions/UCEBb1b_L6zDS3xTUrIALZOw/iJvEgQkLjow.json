[
  {
    "start": "4500",
    "end": "4500"
  },
  {
    "text": "In this video, we'll\nbuild a CART model",
    "start": "4500",
    "end": "6720"
  },
  {
    "text": "to predict healthcare cost.",
    "start": "6720",
    "end": "9010"
  },
  {
    "text": "First, let's make sure the\npackages rpart and rpart.plot",
    "start": "9010",
    "end": "14040"
  },
  {
    "text": "are loaded with the\nlibrary function.",
    "start": "14040",
    "end": "16340"
  },
  {
    "text": "You should have\nalready installed them",
    "start": "19440",
    "end": "21370"
  },
  {
    "text": "in the previous lecture on\npredicting Supreme Court",
    "start": "21370",
    "end": "24380"
  },
  {
    "text": "decisions.",
    "start": "24380",
    "end": "24880"
  },
  {
    "text": "Now, let's build our CART model.",
    "start": "29020",
    "end": "31240"
  },
  {
    "text": "We'll call it ClaimsTree.",
    "start": "31240",
    "end": "35200"
  },
  {
    "text": "And we'll use the rpart\nfunction to predict bucket2009,",
    "start": "35200",
    "end": "41580"
  },
  {
    "text": "using as independent variables:\nage, arthritis, alzheimers,",
    "start": "41580",
    "end": "54550"
  },
  {
    "text": "cancer, copd, depression,\ndiabetes, heart.failure, ihd,",
    "start": "54550",
    "end": "73920"
  },
  {
    "text": "kidney, osteoporosis,\nand stroke.",
    "start": "73920",
    "end": "83649"
  },
  {
    "text": "We'll also use bucket2008\nand reimbursement2008.",
    "start": "83650",
    "end": "93690"
  },
  {
    "text": "The data set we'll use to\nbuild our model is ClaimsTrain.",
    "start": "93690",
    "end": "97920"
  },
  {
    "text": "And then we'll add the\narguments, method = \"class\",",
    "start": "103440",
    "end": "109400"
  },
  {
    "text": "since we have a classification\nproblem here, and cp = 0.00005.",
    "start": "109400",
    "end": "119370"
  },
  {
    "text": "Note that even though we have\na multi-class classification",
    "start": "119370",
    "end": "122380"
  },
  {
    "text": "problem here, we build\nour tree in the same way",
    "start": "122380",
    "end": "126270"
  },
  {
    "text": "as a binary\nclassification problem.",
    "start": "126270",
    "end": "130009"
  },
  {
    "text": "So go ahead and hit Enter.",
    "start": "130009",
    "end": "132320"
  },
  {
    "text": "The cp value we're\nusing here was",
    "start": "132320",
    "end": "135490"
  },
  {
    "text": "selected through\ncross-validation",
    "start": "135490",
    "end": "137500"
  },
  {
    "text": "on the training set.",
    "start": "137500",
    "end": "139440"
  },
  {
    "text": "We won't perform the\ncross-validation here,",
    "start": "139440",
    "end": "142170"
  },
  {
    "text": "because it takes a\nsignificant amount of time",
    "start": "142170",
    "end": "145020"
  },
  {
    "text": "on a data set of this size.",
    "start": "145020",
    "end": "147730"
  },
  {
    "text": "Remember that we have\nalmost 275,000 observations",
    "start": "147730",
    "end": "153390"
  },
  {
    "text": "in our training set.",
    "start": "153390",
    "end": "155510"
  },
  {
    "text": "But keep in mind\nthat the R commands",
    "start": "155510",
    "end": "157760"
  },
  {
    "text": "needed for cross-validation\nhere are the same as those used",
    "start": "157760",
    "end": "162069"
  },
  {
    "text": "in the previous lecture on\npredicting Supreme Court",
    "start": "162070",
    "end": "164870"
  },
  {
    "text": "decisions.",
    "start": "164870",
    "end": "166780"
  },
  {
    "text": "So now that our\nmodel's done, let's",
    "start": "166780",
    "end": "168850"
  },
  {
    "text": "take a look at our tree\nwith the prp function.",
    "start": "168850",
    "end": "171860"
  },
  {
    "text": "It might take a while\nto load, because we",
    "start": "177510",
    "end": "179670"
  },
  {
    "text": "have a huge tree here.",
    "start": "179670",
    "end": "181930"
  },
  {
    "text": "This makes sense\nfor a few reasons.",
    "start": "181930",
    "end": "184730"
  },
  {
    "text": "One is the large number of\nobservations in our training",
    "start": "184730",
    "end": "187739"
  },
  {
    "text": "set.",
    "start": "187740",
    "end": "188980"
  },
  {
    "text": "Another is that we have a\nfive-class classification",
    "start": "188980",
    "end": "191970"
  },
  {
    "text": "problem, so the\nclassification is",
    "start": "191970",
    "end": "194340"
  },
  {
    "text": "more complex than a binary\nclassification case,",
    "start": "194340",
    "end": "197840"
  },
  {
    "text": "like the one we saw in\nthe previous lecture.",
    "start": "197840",
    "end": "200680"
  },
  {
    "text": "The trees used by D2Hawkeye\nwere also very large CART trees.",
    "start": "200680",
    "end": "205530"
  },
  {
    "text": "While this hurts the\ninterpretability of the model,",
    "start": "205530",
    "end": "208290"
  },
  {
    "text": "it's still possible to describe\neach of the buckets of the tree",
    "start": "208290",
    "end": "211849"
  },
  {
    "text": "according to the splits.",
    "start": "211850",
    "end": "214260"
  },
  {
    "text": "So now, let's make\npredictions on the test set.",
    "start": "214260",
    "end": "217780"
  },
  {
    "text": "So go back to your R console,\nand we'll call our predictions",
    "start": "217780",
    "end": "225079"
  },
  {
    "text": "PredictTest, where we'll use the\npredict function for our model",
    "start": "225079",
    "end": "232440"
  },
  {
    "text": "ClaimsTree, and our\nnewdata is ClaimsTest.",
    "start": "232440",
    "end": "237860"
  },
  {
    "text": "And we want to\nadd type = \"class\"",
    "start": "242680",
    "end": "245310"
  },
  {
    "text": "to get class predictions.",
    "start": "245310",
    "end": "246750"
  },
  {
    "text": "And we can make our\nclassification matrix",
    "start": "249270",
    "end": "251490"
  },
  {
    "text": "on the test set to\ncompute the accuracy.",
    "start": "251490",
    "end": "254360"
  },
  {
    "text": "So we'll use the table function,\nwhere the actual outcomes are",
    "start": "254360",
    "end": "258620"
  },
  {
    "text": "ClaimsTest$bucket2009, and our\npredictions are PredictTest.",
    "start": "258620",
    "end": "265810"
  },
  {
    "text": "So to compute the\naccuracy, we need",
    "start": "269100",
    "end": "271060"
  },
  {
    "text": "to add up the numbers\non the diagonal",
    "start": "271060",
    "end": "273350"
  },
  {
    "text": "and divide by the total number\nof observations in our test",
    "start": "273350",
    "end": "276600"
  },
  {
    "text": "set.",
    "start": "276600",
    "end": "277790"
  },
  {
    "text": "So we have 114141 +\n16102 + 118 + 201 + 0.",
    "start": "277790",
    "end": "294409"
  },
  {
    "text": "And we'll divide by the\nnumber of rows in ClaimsTest.",
    "start": "294409",
    "end": "298360"
  },
  {
    "text": "So the accuracy of\nour model is 0.713.",
    "start": "301220",
    "end": "306430"
  },
  {
    "text": "For the penalty error, we\ncan use our penalty matrix",
    "start": "306430",
    "end": "309419"
  },
  {
    "text": "like we did in the\nprevious video.",
    "start": "309420",
    "end": "311670"
  },
  {
    "text": "So scroll up to the\nclassification matrix command",
    "start": "311670",
    "end": "315440"
  },
  {
    "text": "and surround the table function\nby the as.matrix function,",
    "start": "315440",
    "end": "322560"
  },
  {
    "text": "and then we'll multiply\nby PenaltyMatrix.",
    "start": "322560",
    "end": "325370"
  },
  {
    "text": "So remember that this takes\neach entry in our classification",
    "start": "330090",
    "end": "334010"
  },
  {
    "text": "matrix and multiplies it\nby the corresponding number",
    "start": "334010",
    "end": "337770"
  },
  {
    "text": "in the penalty matrix.",
    "start": "337770",
    "end": "340310"
  },
  {
    "text": "So now we just\nneed to add up all",
    "start": "340310",
    "end": "342190"
  },
  {
    "text": "of the numbers in this matrix\nby surrounding it by the sum",
    "start": "342190",
    "end": "347800"
  },
  {
    "text": "function and then dividing\nby the total number",
    "start": "347800",
    "end": "351840"
  },
  {
    "text": "of observations in our test\nset, or nrow(ClaimsTest).",
    "start": "351840",
    "end": "354930"
  },
  {
    "text": "So our penalty error is 0.758.",
    "start": "359700",
    "end": "363570"
  },
  {
    "text": "In the previous video, we\nsaw that our baseline method",
    "start": "363570",
    "end": "366400"
  },
  {
    "text": "had an accuracy of 68% and\na penalty error of 0.74.",
    "start": "366400",
    "end": "372330"
  },
  {
    "text": "So while we increased\nthe accuracy,",
    "start": "372330",
    "end": "374509"
  },
  {
    "text": "the penalty error also went up.",
    "start": "374510",
    "end": "376770"
  },
  {
    "text": "Why?",
    "start": "376770",
    "end": "378099"
  },
  {
    "text": "By default, rpart will try to\nmaximize the overall accuracy,",
    "start": "378100",
    "end": "382870"
  },
  {
    "text": "and every type of error is seen\nas having a penalty of one.",
    "start": "382870",
    "end": "387180"
  },
  {
    "text": "Our CART model predicts\n3, 4, and 5 so rarely",
    "start": "387180",
    "end": "391360"
  },
  {
    "text": "because there are very few\nobservations in these classes.",
    "start": "391360",
    "end": "395449"
  },
  {
    "text": "So we don't really\nexpect this model",
    "start": "395450",
    "end": "397530"
  },
  {
    "text": "to do better on the penalty\nerror than the baseline method.",
    "start": "397530",
    "end": "401530"
  },
  {
    "text": "So how can we fix this?",
    "start": "401530",
    "end": "403639"
  },
  {
    "text": "The rpart function\nallows us to specify",
    "start": "403640",
    "end": "406250"
  },
  {
    "text": "a parameter called loss.",
    "start": "406250",
    "end": "408500"
  },
  {
    "text": "This is the penalty\nmatrix we want",
    "start": "408500",
    "end": "410330"
  },
  {
    "text": "to use when building our model.",
    "start": "410330",
    "end": "412650"
  },
  {
    "text": "So let's scroll back up to\nwhere we built our CART model.",
    "start": "412650",
    "end": "416930"
  },
  {
    "text": "At the end of the\nrpart function,",
    "start": "416930",
    "end": "419139"
  },
  {
    "text": "we'll add the argument params\n= list(loss=PenaltyMatrix).",
    "start": "419140",
    "end": "423800"
  },
  {
    "text": "This is the name of the\npenalty matrix we created.",
    "start": "433120",
    "end": "436470"
  },
  {
    "text": "Close the parentheses\nand hit Enter.",
    "start": "436470",
    "end": "441150"
  },
  {
    "text": "So while our model\nis being built,",
    "start": "441150",
    "end": "443960"
  },
  {
    "text": "let's think about what\nwe expect to happen.",
    "start": "443960",
    "end": "447270"
  },
  {
    "text": "If the rpart function\nknows that we'll",
    "start": "447270",
    "end": "450000"
  },
  {
    "text": "be giving a higher penalty\nto some types of errors",
    "start": "450000",
    "end": "453070"
  },
  {
    "text": "over others, it might\nchoose different splits",
    "start": "453070",
    "end": "456490"
  },
  {
    "text": "when building the\nmodel to minimize",
    "start": "456490",
    "end": "458780"
  },
  {
    "text": "the worst types of errors.",
    "start": "458780",
    "end": "461270"
  },
  {
    "text": "We'll probably get a\nlower overall accuracy",
    "start": "461270",
    "end": "464159"
  },
  {
    "text": "with this new model.",
    "start": "464159",
    "end": "465850"
  },
  {
    "text": "But hopefully, the penalty\nerror will be much lower too.",
    "start": "465850",
    "end": "469060"
  },
  {
    "text": "So now that our model is done,\nlet's regenerate our test",
    "start": "473850",
    "end": "477380"
  },
  {
    "text": "set predictions by scrolling up\nto where we created PredictTest",
    "start": "477380",
    "end": "482090"
  },
  {
    "text": "and hitting Enter, and then\nrecreating our classification",
    "start": "482090",
    "end": "486330"
  },
  {
    "text": "matrix by scrolling up\nto the table function",
    "start": "486330",
    "end": "490199"
  },
  {
    "text": "and hitting Enter again.",
    "start": "490200",
    "end": "493910"
  },
  {
    "text": "Now let's add up the numbers\non the diagonal, 94310 + 18942",
    "start": "493910",
    "end": "503250"
  },
  {
    "text": "+ 4692 + 636 + 2, and\ndivide by the number of rows",
    "start": "503250",
    "end": "515070"
  },
  {
    "text": "in ClaimsTest.",
    "start": "515070",
    "end": "515830"
  },
  {
    "text": "And hit Enter.",
    "start": "518870",
    "end": "520390"
  },
  {
    "text": "So the accuracy of\nthis model is 0.647.",
    "start": "520390",
    "end": "524620"
  },
  {
    "text": "And we can scroll up and\ncompute the penalty error here",
    "start": "524620",
    "end": "529080"
  },
  {
    "text": "by going back to the sum\ncommand and hitting Enter.",
    "start": "529080",
    "end": "533570"
  },
  {
    "text": "So the penalty error of\nour new model is 0.642.",
    "start": "533570",
    "end": "537890"
  },
  {
    "text": "Our accuracy is now lower\nthan the baseline method,",
    "start": "537890",
    "end": "541170"
  },
  {
    "text": "but our penalty error\nis also much lower.",
    "start": "541170",
    "end": "544700"
  },
  {
    "text": "Note that we have significantly\nfewer independent variables",
    "start": "544700",
    "end": "548060"
  },
  {
    "text": "than D2Hawkeye had.",
    "start": "548060",
    "end": "549970"
  },
  {
    "text": "If we had the hundreds\nof codes and risk factors",
    "start": "549970",
    "end": "552829"
  },
  {
    "text": "available to D2Hawkeye, we\nwould hopefully do even better.",
    "start": "552830",
    "end": "557230"
  },
  {
    "text": "In the next video, we'll discuss\nthe accuracy of the models",
    "start": "557230",
    "end": "560550"
  },
  {
    "text": "used by D2Hawkeye and how\nanalytics can provide an edge.",
    "start": "560550",
    "end": "565720"
  }
]