[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6680"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6680",
    "end": "13670"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13670",
    "end": "23780"
  },
  {
    "text": "PROFESSOR: So\nwelcome to this week. We're going to talk\nabout trees mainly.",
    "start": "23780",
    "end": "29189"
  },
  {
    "text": "We're going to talk about\nsome very special ones, spanning trees. But before we do\nthis, you will go",
    "start": "29190",
    "end": "35770"
  },
  {
    "text": "through a whole\nbunch of definitions and look at examples to\nexplain how it works.",
    "start": "35770",
    "end": "41070"
  },
  {
    "text": " So let's talk about\nwalks and paths.",
    "start": "41070",
    "end": "48364"
  },
  {
    "start": "48365",
    "end": "54290"
  },
  {
    "text": "So you've already seen\na bit of graph theory. We've talked about graph\ncolorings and so on.",
    "start": "54290",
    "end": "63000"
  },
  {
    "text": "But now we're going to talk\nabout special types of graphs, and special structures\nwithin such graphs.",
    "start": "63000",
    "end": "68960"
  },
  {
    "text": " Well, let's start with\nthe first definition.",
    "start": "68960",
    "end": "75510"
  },
  {
    "text": "How do we define a walk? Well, a walk is\nsomething very simple. You walk from one vertex\nin the graph over an edge",
    "start": "75510",
    "end": "83250"
  },
  {
    "text": "to a next vertex, to a\nnext vertex, and so on. So how do we define this?",
    "start": "83250",
    "end": "89369"
  },
  {
    "text": "A walk is a sequence of vertices\nthat are connected by edges.",
    "start": "89370",
    "end": "107920"
  },
  {
    "text": "So for example, we\nmay have something that looks like a first vertex.",
    "start": "107920",
    "end": "113470"
  },
  {
    "text": "That we call the start. And an edge that goes\nto a second vertex.",
    "start": "113470",
    "end": "120759"
  },
  {
    "text": "We continue like\nthis until the end, say, at vk, which we\ncall the end of the walk.",
    "start": "120760",
    "end": "127520"
  },
  {
    "text": "And if you look at\nthis, we say this is a walk from v0\nall the way to vk.",
    "start": "127520",
    "end": "133900"
  },
  {
    "text": "It has exactly k edges. And we say that the length\nis actually equal to k.",
    "start": "133900",
    "end": "143130"
  },
  {
    "text": "So this is a very basic notion. And what we are\nreally interested in",
    "start": "143130",
    "end": "148660"
  },
  {
    "text": "is actually paths. And paths are special\ntypes of walks",
    "start": "148660",
    "end": "155620"
  },
  {
    "text": "in which all those\nvertices are actually different from one another.",
    "start": "155620",
    "end": "160700"
  },
  {
    "text": "But let's first give\nan example of a graph that you will study throughout\nthe whole lecture, especially",
    "start": "160700",
    "end": "167030"
  },
  {
    "text": "when we come to spanning trees.  So let's have a look\nat the following graph.",
    "start": "167030",
    "end": "175070"
  },
  {
    "start": "175070",
    "end": "194290"
  },
  {
    "text": "So let this be a graph. And for example, we\ncan have a walk that goes from this particular edge.",
    "start": "194290",
    "end": "203890"
  },
  {
    "text": "Say we call this v0. It goes over this\nedge over here.",
    "start": "203890",
    "end": "209640"
  },
  {
    "text": "Suppose I want to end over here. Well, I can go many ways\nin this particular one.",
    "start": "209640",
    "end": "215030"
  },
  {
    "text": "I can go for this edge. I may go over here. I may go all the way\nto this part over here.",
    "start": "215030",
    "end": "221040"
  },
  {
    "text": "I may return if I want to. And I finally, I take this\nedge for example back to--",
    "start": "221040",
    "end": "227010"
  },
  {
    "text": "over this edge, I will\nend in the last vertex vk. So what we notice\nhere is that we",
    "start": "227010",
    "end": "233566"
  },
  {
    "text": "have a walk that actually gets\nto this particular vertex,",
    "start": "233566",
    "end": "238689"
  },
  {
    "text": "and then returns to this vertex. So for a few other edges, and\nthen goes all the way to vk.",
    "start": "238690",
    "end": "245470"
  },
  {
    "text": "So if you talk about\nthe path, then we really want all the difference\nvertices not to occur twice.",
    "start": "245470",
    "end": "252920"
  },
  {
    "text": "So let's define this\nso the destination is that a path is actually a walk.",
    "start": "252920",
    "end": "260500"
  },
  {
    "text": " Is a walk where all\nedges, where all vertices,",
    "start": "260500",
    "end": "273379"
  },
  {
    "text": "vi's, are different. ",
    "start": "273380",
    "end": "280790"
  },
  {
    "text": "In this particular\ncase-- well for example, if you strip off\nthis part over here,",
    "start": "280790",
    "end": "285810"
  },
  {
    "text": "you will get a path from v0\nto here, to here, to here. And all these vertices\non the path on this walk",
    "start": "285810",
    "end": "294450"
  },
  {
    "text": "are different. And therefore it is a path. This also shows us something.",
    "start": "294450",
    "end": "300830"
  },
  {
    "text": "It is possible to construct\nfrom a walk a path. As you can see, we started\noff with this particular walk.",
    "start": "300830",
    "end": "308560"
  },
  {
    "text": "And we just deleted,\nessentially, a part where we sort of came\nback to the same vertex again.",
    "start": "308560",
    "end": "317630"
  },
  {
    "text": "And when we delete all\nthose kinds of parts, you will end up with a path. So can we formalize this\na little bit better?",
    "start": "317630",
    "end": "325660"
  },
  {
    "text": "Then we get the next lemma. ",
    "start": "325660",
    "end": "331060"
  },
  {
    "text": "I call this lemma one. And let's see whether\nwe can prove this.",
    "start": "331060",
    "end": "336700"
  },
  {
    "text": "So we want to show that if\nthere exists a walk from, say,",
    "start": "336700",
    "end": "342970"
  },
  {
    "text": "a vertex u to-- well, maybe\nI should not use arrows.",
    "start": "342970",
    "end": "349900"
  },
  {
    "text": "That's confusing--\nfrom u to v. Then there",
    "start": "349900",
    "end": "357210"
  },
  {
    "text": "also exists a path from u to v.",
    "start": "357210",
    "end": "366139"
  },
  {
    "text": "So how can we prove this? Do you have any ideas? So what kind of proof\ntechniques can we use here?",
    "start": "366140",
    "end": "375190"
  },
  {
    "text": "And maybe one of the\nprinciples that we have seen?",
    "start": "375190",
    "end": "381396"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]\nbut I have an idea",
    "start": "381396",
    "end": "386807"
  },
  {
    "text": "about how you could show this. It's basically if you\nvisit one vertex-- let's",
    "start": "386808",
    "end": "392600"
  },
  {
    "text": "you go 1, 2, 3, 4, 5, 3, 6.",
    "start": "392600",
    "end": "398650"
  },
  {
    "text": "You can walk from 1 to 6. Then we just take out the\n4, you just go 1, 2, 3, 6.",
    "start": "398650",
    "end": "406732"
  },
  {
    "text": "PROFESSOR: Right. So what did we do there? We essentially had a walk. And then we cut out\na smaller parts here",
    "start": "406732",
    "end": "412250"
  },
  {
    "text": "that recurs in a sense. And we have shortened the path,\nwe have shortened the walk",
    "start": "412250",
    "end": "419060"
  },
  {
    "text": "to a smaller path. So what we've used here\nis we can sort of take out",
    "start": "419060",
    "end": "426720"
  },
  {
    "text": "parts of the walk just\nlike we did over here until the walk gets shorter,\nand shorter, and shorter.",
    "start": "426720",
    "end": "433440"
  },
  {
    "text": "So maybe one of the things\nthat we may consider is a walk of shortest length.",
    "start": "433440",
    "end": "439425"
  },
  {
    "text": " And we know that\nthis is possible.",
    "start": "439425",
    "end": "447860"
  },
  {
    "text": "Oops, sorry about that. ",
    "start": "447860",
    "end": "454770"
  },
  {
    "text": "So let's prove this. So for example, suppose there\nexists such a walk from u",
    "start": "454770",
    "end": "462930"
  },
  {
    "text": "to v. Then we know by\nthe ordering principle that there exists a\nwalk of minimum length.",
    "start": "462930",
    "end": "469900"
  },
  {
    "text": "So that's what we're\ngoing to use here. And then we're going\nto essentially go",
    "start": "469900",
    "end": "476000"
  },
  {
    "text": "in the same direction as\nwhat you were talking about because we're going to show\nthat it's not possible to delete",
    "start": "476000",
    "end": "482509"
  },
  {
    "text": "anything more. Because otherwise,\nif you could do that, the walk would get shorter.",
    "start": "482510",
    "end": "487594"
  },
  {
    "text": "And that's not possible, because\nby the well ordering principle,",
    "start": "487594",
    "end": "493009"
  },
  {
    "text": "we simply consider that there\nexists a walk of minimal length",
    "start": "493010",
    "end": "502580"
  },
  {
    "text": "that we are interested in. ",
    "start": "502580",
    "end": "510440"
  },
  {
    "text": "We will show that this\nparticular walk is actually going to be a path. So let's see how we can do this.",
    "start": "510440",
    "end": "516950"
  },
  {
    "text": "So let's do walk be equal\nto-- well, it starts in v0. It's equal to u.",
    "start": "516950",
    "end": "523450"
  },
  {
    "text": "There's an edge to, say, v1. It goes all the way up to vk,\nwhich is the last vertex, v.",
    "start": "523450",
    "end": "533160"
  },
  {
    "text": "So what are we going to prove? We're going to prove that\nthis is actually a path. And since this is a\nwalk of minimal length,",
    "start": "533160",
    "end": "540790"
  },
  {
    "text": "well suppose it is not a path. So we are going to\nuse contradiction.",
    "start": "540790",
    "end": "545980"
  },
  {
    "text": " Well if it's not a path, then\nby our definitions over here,",
    "start": "545980",
    "end": "553029"
  },
  {
    "text": "there must be two\nvertices that are actually the same, just like in here. So we go from v0 to, say, this\nparticular vertex, or this one.",
    "start": "553030",
    "end": "562269"
  },
  {
    "text": "And then we come\nback to this one, and then all the way to vk. So if it is not a\npath, then two of those",
    "start": "562270",
    "end": "569949"
  },
  {
    "text": "must be equal to one another. And then we are going\nto use this trick. We're going to\ntake out this part.",
    "start": "569950",
    "end": "576000"
  },
  {
    "text": "We get the shorter walk. But that contradicts that\nour walk is minimal length.",
    "start": "576000",
    "end": "582660"
  },
  {
    "text": "So that's sort of the proof\ntechnique that we're doing. OK. Let's do this. ",
    "start": "582660",
    "end": "592139"
  },
  {
    "text": "So first, let's\nconsider a few cases.",
    "start": "592140",
    "end": "597640"
  },
  {
    "text": "If k equals 0, then\nthat's pretty obvious. We have only a single vertex u\nthat is connected by a 0 length",
    "start": "597640",
    "end": "605640"
  },
  {
    "text": "path to itself. So this is fine. For k equals 1, we have\njust a single edge.",
    "start": "605640",
    "end": "613019"
  },
  {
    "text": "And then we're done too. That's a path as well. So let's consider the case\nwhere k is at least two.",
    "start": "613020",
    "end": "622230"
  },
  {
    "text": "Well, suppose it's a walk. It's not a path. So we are going to\nassume the opposite.",
    "start": "622230",
    "end": "628695"
  },
  {
    "start": "628695",
    "end": "634310"
  },
  {
    "text": "If it's not a path,\nthen we concluded that two of those vi's must\nbe equal to one another.",
    "start": "634310",
    "end": "642330"
  },
  {
    "text": "So there exits an i unequal to\nj such that vertex vi equals vj.",
    "start": "642330",
    "end": "651208"
  },
  {
    "text": "Ah, but now we have\na walk that goes from v0 all the way to, say,\nvi, which is equal to vj.",
    "start": "651208",
    "end": "662279"
  },
  {
    "text": "And then we go all the way\nup to vk which is equal to v. So essentially, we have\ncreated a shorter walk.",
    "start": "662280",
    "end": "669420"
  },
  {
    "text": "We have taken out this\nlittle triangle over here. ",
    "start": "669420",
    "end": "677260"
  },
  {
    "text": "Now this is a shorter walk. And this contradicts our\nassumption of minimality.",
    "start": "677260",
    "end": "687170"
  },
  {
    "text": " So that means that our\nassumption over here",
    "start": "687170",
    "end": "693650"
  },
  {
    "text": "is not true. So the walk is actually a path. So this concludes the proof.",
    "start": "693650",
    "end": "700009"
  },
  {
    "text": " So even though this\nlemma is pretty",
    "start": "700010",
    "end": "706300"
  },
  {
    "text": "straightforward in\nthe sense that we all feel that if you have a walk,\nthen you can create a path,",
    "start": "706300",
    "end": "712010"
  },
  {
    "text": "if you really want to write it\ndown with all the principles that we have been\ntaught, you can see",
    "start": "712010",
    "end": "717594"
  },
  {
    "text": "a few things appearing here. So we first started with\nthe well ordering principle. And also we used the method\nof contradiction in our proof.",
    "start": "717594",
    "end": "727620"
  },
  {
    "text": "So let's set talk about\nthe next definition. So we talked about\nwalks and paths. Let's talk about connectivity.",
    "start": "727620",
    "end": "733430"
  },
  {
    "start": "733430",
    "end": "741460"
  },
  {
    "text": "We actually defined\ntwo vertices, u and v to be connected if\nthere is a path that",
    "start": "741460",
    "end": "749710"
  },
  {
    "text": "connects u to v. So\nu and v are connected",
    "start": "749710",
    "end": "759160"
  },
  {
    "text": "if there is a path from u to v.",
    "start": "759160",
    "end": "769680"
  },
  {
    "text": "And now we can talk about the\ngraphs that are connected. That's a very important concept.",
    "start": "769680",
    "end": "777089"
  },
  {
    "text": "A graph is connected if every\npair of vertices is connected.",
    "start": "777090",
    "end": "794480"
  },
  {
    "text": "So when every pair of vertices\nin the graph are connected.",
    "start": "794480",
    "end": "805490"
  },
  {
    "text": "So an example is the particular\ngraph on the blackboard.",
    "start": "805490",
    "end": "812130"
  },
  {
    "text": "You can see here that\nthere's always a path to be found from this vertex,\nto this one, or to that one,",
    "start": "812130",
    "end": "818209"
  },
  {
    "text": "to this. to that,\nto this, or that. You can do this for\nany two vertices.",
    "start": "818210",
    "end": "825420"
  },
  {
    "text": "So this is a connected graph. A graph that is not\nconnected looks something",
    "start": "825420",
    "end": "830500"
  },
  {
    "text": "like this for example. You may have a single\nedge plus, say,",
    "start": "830500",
    "end": "838980"
  },
  {
    "text": "another triangle,\nmaybe with another edge or something like that. So they are disconnected\nfrom this vertex.",
    "start": "838980",
    "end": "846779"
  },
  {
    "text": "I do not have a\ngraph that connects to this vertex over here.",
    "start": "846780",
    "end": "852080"
  },
  {
    "text": "So this is about connectivity. And now we can start talking\nabout cycles and closed walks.",
    "start": "852080",
    "end": "862730"
  },
  {
    "start": "862730",
    "end": "870170"
  },
  {
    "text": "Together, these concepts\nwill help us to define trees. And then we can start\ntalking about this very",
    "start": "870170",
    "end": "876560"
  },
  {
    "text": "special concept, spanning trees.  So let's see how that works.",
    "start": "876560",
    "end": "882279"
  },
  {
    "text": " So cycles and closed walks.",
    "start": "882280",
    "end": "888300"
  },
  {
    "start": "888300",
    "end": "895110"
  },
  {
    "text": "We first define a closed walk. And once we have done this, we\nare able to get into cycles.",
    "start": "895110",
    "end": "904209"
  },
  {
    "text": "So what's a closed walk? Well, it's actually a walk for\nwhich the start and the end vertex are the same.",
    "start": "904210",
    "end": "909830"
  },
  {
    "start": "909830",
    "end": "915840"
  },
  {
    "text": "So it starts and ends at\nexactly the same vertex.",
    "start": "915840",
    "end": "923980"
  },
  {
    "start": "923980",
    "end": "931769"
  },
  {
    "text": "So this is all pretty\nstraightforward. So we have v0 connected to,\nsay, v1, all the way up to vk.",
    "start": "931770",
    "end": "939360"
  },
  {
    "text": "And vk itself is equal to v0. So you have a walk\nthat goes all the way",
    "start": "939360",
    "end": "944790"
  },
  {
    "text": "from v0 all the way back to vk. For example, in this graph, you\ncould have walked all the way",
    "start": "944790",
    "end": "953019"
  },
  {
    "text": "back to v0. You would have a closed walk. So what's a cycle?",
    "start": "953020",
    "end": "958160"
  },
  {
    "text": "A cycle is a little\nbit more special in which all these\nvertices over here",
    "start": "958160",
    "end": "963900"
  },
  {
    "text": "are actually different\nfrom one another. So if k is at least\nthree-- so the walk",
    "start": "963900",
    "end": "971240"
  },
  {
    "text": "is not just a simple edge,\nor just a single vertex. ",
    "start": "971240",
    "end": "977790"
  },
  {
    "text": "And if all v0, v1, all the way\nup to vk minus 1 are different,",
    "start": "977790",
    "end": "989339"
  },
  {
    "text": "then we are saying\nthat we have a cycle.",
    "start": "989340",
    "end": "996900"
  },
  {
    "text": "Then it is called a cycle. ",
    "start": "996900",
    "end": "1005250"
  },
  {
    "text": "So these two concepts,\nconnectivity and cycles, will help us to define trees. ",
    "start": "1005250",
    "end": "1015410"
  },
  {
    "text": "So what are trees? A simple example\nis something that looks like this, for example.",
    "start": "1015410",
    "end": "1022570"
  },
  {
    "start": "1022570",
    "end": "1029980"
  },
  {
    "text": "The idea is that a\ntree is both connected. And it has no cycles.",
    "start": "1029980",
    "end": "1035630"
  },
  {
    "text": "So in this case, we can see\nthat every vertex it's connected to every other vertex.",
    "start": "1035630",
    "end": "1041310"
  },
  {
    "text": "But there is no cycle like\na triangle or something that is connected all around.",
    "start": "1041310",
    "end": "1047220"
  },
  {
    "text": "So let's define this properly. A definition is that a\nconnected and acyclic graph",
    "start": "1047220",
    "end": "1063690"
  },
  {
    "text": "is called a tree. ",
    "start": "1063690",
    "end": "1071230"
  },
  {
    "text": "And within trees, we also\nhave something very special that we call leaves. And leaves are exactly those\nnodes that have degree one.",
    "start": "1071230",
    "end": "1079600"
  },
  {
    "text": "So for example, this\nnode has degree one. It has only this\nedge connected to it. So this is called a leaf.",
    "start": "1079600",
    "end": "1086840"
  },
  {
    "text": "This one also is a leaf\nbecause it has just one edge connected to it. But this lead over\nhere has three edges.",
    "start": "1086840",
    "end": "1094290"
  },
  {
    "text": "So it has degree three. This one has degree four. This is the leaf again. This one is a leaf,\nthis one, and this one.",
    "start": "1094290",
    "end": "1103130"
  },
  {
    "text": "So this is very\nimportant concept. We often use leaves\nin our proofs. And we will get to one.",
    "start": "1103130",
    "end": "1110510"
  },
  {
    "text": "So a lead is a node with\ndegree one in a tree.",
    "start": "1110510",
    "end": "1125620"
  },
  {
    "text": " OK great.",
    "start": "1125620",
    "end": "1130640"
  },
  {
    "text": " So now let's have\na look at trees.",
    "start": "1130640",
    "end": "1136470"
  },
  {
    "text": "Suppose I'm looking at\na subgraph of a tree. What can we say\nabout a subgraph?",
    "start": "1136470",
    "end": "1142947"
  },
  {
    "text": "What kind of structure\ndoes this have? So suppose for example I want to\ntake some connected subgraphs.",
    "start": "1142947",
    "end": "1150310"
  },
  {
    "text": "So that's what I'm\nactually interested in. So for example, I\ntake this-- suppose",
    "start": "1150310",
    "end": "1155400"
  },
  {
    "text": "I take this connected subgraph. Then what does it look like?",
    "start": "1155400",
    "end": "1161150"
  },
  {
    "text": "Do we see some\nstructure in this? ",
    "start": "1161150",
    "end": "1167890"
  },
  {
    "text": "It's-- no? AUDIENCE: It's a tree. PROFESSOR: Yeah, it's a three. So are we able to\nprove this also?",
    "start": "1167890",
    "end": "1174710"
  },
  {
    "text": " So this lemma you\nactually lose later on.",
    "start": "1174710",
    "end": "1182060"
  },
  {
    "text": "So any connected subgraph\nof the tree is a tree.",
    "start": "1182060",
    "end": "1194940"
  },
  {
    "text": " And to prove-- well, how\ncan we start out a proof?",
    "start": "1194940",
    "end": "1202440"
  },
  {
    "text": "Any suggestions? So let's have a look here. So how may I think about this?",
    "start": "1202440",
    "end": "1208960"
  },
  {
    "text": "Well, I may take a\nconnected subgraph, and I want to show--\nof a tree- and I",
    "start": "1208960",
    "end": "1214596"
  },
  {
    "text": "want show that it is a tree. A general method could\nbe, for example, to--",
    "start": "1214596",
    "end": "1221144"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]\nYou know, one of the things, one\nof the conditions is it has to be acyclical.",
    "start": "1221144",
    "end": "1228434"
  },
  {
    "text": "So since you're not adding\nnodes and you're not starting within cycles, you\ncan't create a new cycle.",
    "start": "1228434",
    "end": "1235794"
  },
  {
    "text": "PROFESSOR: Yeah. I think you're saying\nsomething like, if I have a connected\nsubgraph, which",
    "start": "1235794",
    "end": "1241480"
  },
  {
    "text": "is like a smaller\npart of the tree-- now suppose that\nwould not be a tree.",
    "start": "1241480",
    "end": "1246520"
  },
  {
    "text": "Say it would have a cycle. Then that cycle would also be\npresent in the tree itself.",
    "start": "1246520",
    "end": "1251840"
  },
  {
    "text": "And that's not really possible\nbecause a tree has no cycles. So that's sort of indeed\nhow the proof goes.",
    "start": "1251840",
    "end": "1259440"
  },
  {
    "text": "So we essentially\nuse contradiction. ",
    "start": "1259440",
    "end": "1267630"
  },
  {
    "text": "So let's suppose that this\nconnected subgraph is actually",
    "start": "1267630",
    "end": "1273830"
  },
  {
    "text": "not a tree. ",
    "start": "1273830",
    "end": "1284159"
  },
  {
    "text": "So suppose it's a\nconnected subgraph. It's not a tree. Well then, in that case,\nit must have a cycle,",
    "start": "1284160",
    "end": "1291690"
  },
  {
    "text": "because a tree is something\nthat is both connected and has a cycle and is acyclic.",
    "start": "1291690",
    "end": "1298850"
  },
  {
    "text": "We have a connected subgraph,\nwhich is not a tree. So it must have a cycle. ",
    "start": "1298850",
    "end": "1305380"
  },
  {
    "text": "So it has a cycle. But now since it is a\nsubgraph of the bigger graph,",
    "start": "1305380",
    "end": "1312400"
  },
  {
    "text": "we know that the cycle must\nalso be in the whole graph. So the whole graph has\nthis particular cycle.",
    "start": "1312400",
    "end": "1327190"
  },
  {
    "text": "Wait a minute. The whole graph is the tree.",
    "start": "1327190",
    "end": "1333420"
  },
  {
    "text": "And a tree's acyclic. So we get a contradiction. So that means that our original\nassumption that it's not a tree",
    "start": "1333420",
    "end": "1340610"
  },
  {
    "text": "is wrong. So it is a tree. So this is, again, such a\ngeneral kind of proof method",
    "start": "1340610",
    "end": "1347725"
  },
  {
    "text": "that we repeatedly use here. So this lemma, which\nwe will call two,",
    "start": "1347725",
    "end": "1355380"
  },
  {
    "text": "we will use in the\nnext proof where we're going to talk about the\nrelationship between vertices",
    "start": "1355380",
    "end": "1360970"
  },
  {
    "text": "and edges within trees. ",
    "start": "1360970",
    "end": "1375980"
  },
  {
    "text": "It's a very beautiful\nrelationship. The lemma states if you have\na tree that has n vertices,",
    "start": "1375980",
    "end": "1385149"
  },
  {
    "text": "then it must have\nn minus 1 edges. So this is a very tight\nrelationship here.",
    "start": "1385150",
    "end": "1391110"
  },
  {
    "text": "So a tree with n vertices\nhas n minus 1 edges.",
    "start": "1391110",
    "end": "1403070"
  },
  {
    "text": "So let's see. How can we prove this one? Any suggestions? So what did we use at the\nbeginning of the course here?",
    "start": "1403070",
    "end": "1412600"
  },
  {
    "text": "So we have n vertices. And we want to show that\nit has n minus 1 edges.",
    "start": "1412600",
    "end": "1419020"
  },
  {
    "text": " We can use induction, right?",
    "start": "1419020",
    "end": "1425669"
  },
  {
    "text": "So let's use induction. on n.",
    "start": "1425670",
    "end": "1431720"
  },
  {
    "text": "So how do we proceed\nif you do this? Well, we always start out\nwith an induction hypothesis.",
    "start": "1431720",
    "end": "1438920"
  },
  {
    "text": "So the statement here\nwould be something like, well, there are n minus\n1 edges in any n vertex tree.",
    "start": "1438920",
    "end": "1455380"
  },
  {
    "text": " And if you start with\ninduction, you always",
    "start": "1455380",
    "end": "1460950"
  },
  {
    "text": "start with the base case, right? So we have the base case. So how does this work?",
    "start": "1460950",
    "end": "1468540"
  },
  {
    "text": "So for example, we\nwant to consider P1. So there are zero edges\nin any one vertex tree.",
    "start": "1468540",
    "end": "1477069"
  },
  {
    "text": "Well, that's true, right? If I have just one\nvertex, there's no edge. So this is definitely correct.",
    "start": "1477069",
    "end": "1485630"
  },
  {
    "text": "So that's easy. So let's prove the other part,\nwhich is the inductive step.",
    "start": "1485630",
    "end": "1493900"
  },
  {
    "text": "And the inductive step is--",
    "start": "1493900",
    "end": "1502306"
  },
  {
    "text": " So to do the inductive step, we\nare going to always assume Pn.",
    "start": "1502306",
    "end": "1511270"
  },
  {
    "text": "And then we want\nto prove Pn plus 1. So let's do this. So we have the inductive step.",
    "start": "1511270",
    "end": "1517390"
  },
  {
    "start": "1517390",
    "end": "1522740"
  },
  {
    "text": "And we always start\nout the same way. So we suppose P of n.",
    "start": "1522740",
    "end": "1532850"
  },
  {
    "text": "And now we want to\nprove Pn plus 1. So how do we do this? Well, take a tree that has\nn plus 1 vertices vertices.",
    "start": "1532850",
    "end": "1540910"
  },
  {
    "text": "And we want to show\nthat it has n edges. So take any such tree.",
    "start": "1540910",
    "end": "1547680"
  },
  {
    "text": "So let T be a tree that\nhas n plus 1 vertices.",
    "start": "1547680",
    "end": "1556660"
  },
  {
    "start": "1556660",
    "end": "1562170"
  },
  {
    "text": "So how can we use the\ninduction hypothesis here? So do you have any\nideas over here?",
    "start": "1562170",
    "end": "1569360"
  },
  {
    "text": "So I have a tree with\nn plus 1 vertices. And if I want to be able\nto use this induction",
    "start": "1569360",
    "end": "1576960"
  },
  {
    "text": "at this induction\nhypothesis, then I can only apply it on trees\nthat have n vertices.",
    "start": "1576960",
    "end": "1584125"
  },
  {
    "text": "So somehow I have to\ndelete one vertex. Right? So what kind of vertex\ncan I delete in such a way",
    "start": "1584125",
    "end": "1592120"
  },
  {
    "text": "that we still have a tree? ",
    "start": "1592120",
    "end": "1598730"
  },
  {
    "text": "And I need that because\nthis induction step can only",
    "start": "1598730",
    "end": "1604549"
  },
  {
    "text": "be applied to trees. So what type of vertex can I\nremove from a tree and it still",
    "start": "1604550",
    "end": "1613060"
  },
  {
    "text": "stays a tree? So for example, if you look\nat this example up here,",
    "start": "1613060",
    "end": "1619630"
  },
  {
    "text": "what kind of vertex\ncan I remove here? AUDIENCE: A leaf. PROFESSOR: Yeah, except. I can remove a leaf--\nfor example, this one.",
    "start": "1619630",
    "end": "1626594"
  },
  {
    "text": "And why is that? Because if there's only one\nedge connected to the rest of the tree-- so if I delete\nit, I will actually keep a tree.",
    "start": "1626594",
    "end": "1635420"
  },
  {
    "text": "So that's how the\nproof will continue. So we take out one vertex.",
    "start": "1635420",
    "end": "1641169"
  },
  {
    "text": "So let v be a leaf of the tree. ",
    "start": "1641170",
    "end": "1650919"
  },
  {
    "text": "And let's remove this\nparticular vertex.",
    "start": "1650920",
    "end": "1655970"
  },
  {
    "text": " So what do we get?",
    "start": "1655970",
    "end": "1661250"
  },
  {
    "text": "Well, we again have\na connected subgraph.",
    "start": "1661250",
    "end": "1667600"
  },
  {
    "text": "So this creates a\nconnected subgraph.",
    "start": "1667600",
    "end": "1676539"
  },
  {
    "text": "And we also know\nthat this is a tree. So how can we conclude that?",
    "start": "1676540",
    "end": "1682640"
  },
  {
    "text": "Well, we had another\nlemma somewhere that's behind this blackboard.",
    "start": "1682640",
    "end": "1689060"
  },
  {
    "text": "It says that if you\nhave connected subgraph, then we still have a tree. So this is great.",
    "start": "1689060",
    "end": "1695040"
  },
  {
    "text": "So this is also a tree. ",
    "start": "1695040",
    "end": "1702760"
  },
  {
    "text": "So now we can apply Pn\nbecause we have n vertices,",
    "start": "1702760",
    "end": "1708290"
  },
  {
    "text": "because we deleted one. So by Pn, we can conclude\nthat this particular subgraph",
    "start": "1708290",
    "end": "1716630"
  },
  {
    "text": "has n minus 1 edges. You simply apply our\nstatement over here.",
    "start": "1716630",
    "end": "1723070"
  },
  {
    "text": " But we want to say something\nabout the original tree.",
    "start": "1723070",
    "end": "1729960"
  },
  {
    "text": "So how do we do this? Well, we have to somehow\nreconstruct this tree. Well, we have deleted v. So\nwe have to reattach v again.",
    "start": "1729960",
    "end": "1738971"
  },
  {
    "text": "So let's do this.  So we reattach v.\nAnd if I do this,",
    "start": "1738972",
    "end": "1748730"
  },
  {
    "text": "well, let's look at\nthis example over here. I reattach the leaf. I will add one more edge.",
    "start": "1748730",
    "end": "1756260"
  },
  {
    "text": "So if I reattach\nthis particular leaf, I will get back the\noriginal T over here.",
    "start": "1756260",
    "end": "1767100"
  },
  {
    "text": "And how many edges does it have? Well, it has these\nn minus 1 edges",
    "start": "1767100",
    "end": "1775650"
  },
  {
    "text": "plus the one edge that is\nneeded to reattach the leaf.",
    "start": "1775650",
    "end": "1781890"
  },
  {
    "text": "So that's all together\nexactly n edges. So now we have shown that for\nevery n plus 1 vertex tree,",
    "start": "1781890",
    "end": "1794430"
  },
  {
    "text": "every such tree has n edges. So now we're done, because\nthis shows P n plus 1.",
    "start": "1794430",
    "end": "1802740"
  },
  {
    "text": "So this is how the\nlemma is proved. And in the homework,\nyou actually use this.",
    "start": "1802740",
    "end": "1808980"
  },
  {
    "text": " So let's now talk about very\nspecial trees, spanning trees.",
    "start": "1808980",
    "end": "1817895"
  },
  {
    "text": " I think this is a\nvery exciting topic. So let's look at this\nparticular graph over here.",
    "start": "1817895",
    "end": "1827060"
  },
  {
    "start": "1827060",
    "end": "1833330"
  },
  {
    "text": "Let's define spanning trees. So what's a spanning tree? A spanning tree is a subgraph of\na graph that somehow spans all",
    "start": "1833330",
    "end": "1842420"
  },
  {
    "text": "the vertices within this graph. So it's a tree that touches\nevery single vertex.",
    "start": "1842420",
    "end": "1849830"
  },
  {
    "text": "So for example, we may have-- ",
    "start": "1849830",
    "end": "1856030"
  },
  {
    "text": "Maybe this is not\nsuch a bright color. Maybe this one.",
    "start": "1856030",
    "end": "1862460"
  },
  {
    "text": "So for example, we may have\na tree that looks like this.",
    "start": "1862460",
    "end": "1867590"
  },
  {
    "start": "1867590",
    "end": "1876210"
  },
  {
    "text": "So in this particular\ngraph, we can create a subgraph with\nthe thickened green edges",
    "start": "1876210",
    "end": "1884840"
  },
  {
    "text": "over here, which is a\ntree, and also covers all the different vertices\nof the original graph.",
    "start": "1884840",
    "end": "1892971"
  },
  {
    "text": "This is actually pretty\namazing that you can do this, you can actually create\nsuch a kind of tree.",
    "start": "1892972",
    "end": "1900030"
  },
  {
    "text": "And what you want to\nprove, first of all, is that for every\nconnected graph,",
    "start": "1900030",
    "end": "1905510"
  },
  {
    "text": "we can construct\nsuch a spanning tree. So let's first define this. And then we will\nprove this theorem.",
    "start": "1905510",
    "end": "1912610"
  },
  {
    "text": " And then after this, we're going\nto talk about weighted graphs.",
    "start": "1912610",
    "end": "1920660"
  },
  {
    "text": "That will lead to minimum\nweight spanning trees. And then it gets\nreally interesting",
    "start": "1920660",
    "end": "1926230"
  },
  {
    "text": "because you want to figure\nout how we can actually construct those for any graph. ",
    "start": "1926230",
    "end": "1935830"
  },
  {
    "text": "So let's define a spanning tree. A spanning tree--",
    "start": "1935830",
    "end": "1943725"
  },
  {
    "text": " And we appreciate this as\nSD-- of a connected graph",
    "start": "1943725",
    "end": "1960230"
  },
  {
    "text": "is actually a subgraph\nthat is a tree.",
    "start": "1960230",
    "end": "1971820"
  },
  {
    "text": "So that's the first condition. And it also covers all\nthe other vertices. So it has the same\nvertices as the graph.",
    "start": "1971820",
    "end": "1986725"
  },
  {
    "start": "1986725",
    "end": "1993520"
  },
  {
    "text": "And over here, we\nhave this example. So now what you want to show\nis the following theorem",
    "start": "1993520",
    "end": "1999960"
  },
  {
    "text": "that any connected\ngraph actually has such a spanning tree. So the theorem is\nevery connected graph",
    "start": "1999960",
    "end": "2023110"
  },
  {
    "text": "has a spanning tree. And let's think about\na proof together.",
    "start": "2023110",
    "end": "2032090"
  },
  {
    "text": "So for example, we may\nstart with the idea",
    "start": "2032090",
    "end": "2039020"
  },
  {
    "text": "to use a contradiction. Suppose there exists\na connected graph that",
    "start": "2039020",
    "end": "2044810"
  },
  {
    "text": "has no spanning tree. So how would we go ahead? ",
    "start": "2044810",
    "end": "2055850"
  },
  {
    "text": "So how can we prove that we\nhave a contradiction here?",
    "start": "2055850",
    "end": "2061644"
  },
  {
    "text": "So the proof that we're\ngoing to propose here is by contradiction. ",
    "start": "2061644",
    "end": "2073320"
  },
  {
    "text": "That means that we're going\nto assume the opposite. So assume that we have\na connected graph,",
    "start": "2073320",
    "end": "2082040"
  },
  {
    "text": "a connected graph G. ",
    "start": "2082040",
    "end": "2094569"
  },
  {
    "text": "That has no spanning tree. So how can we use this?",
    "start": "2094570",
    "end": "2101450"
  },
  {
    "text": "How could this be strange? Or what can we do here? ",
    "start": "2101450",
    "end": "2113420"
  },
  {
    "text": "So one of the nice things\nabout trees over here is-- so that maybe gives us some\ninsight is that if we have",
    "start": "2113420",
    "end": "2122970"
  },
  {
    "text": "a tree-- well, it seems like\nsuch a kind of spanning tree is",
    "start": "2122970",
    "end": "2129395"
  },
  {
    "text": "like--  It's a solution to a\nsubgraph that is connected",
    "start": "2129395",
    "end": "2136000"
  },
  {
    "text": "with a minimum number of edges.  Like if I have any other type\nof subgraph-- for example,",
    "start": "2136000",
    "end": "2146970"
  },
  {
    "text": "if it has cycles, I can always\nremove an edge of course. So we know a subgraph of G that\ntouches all the different edges",
    "start": "2146970",
    "end": "2160260"
  },
  {
    "text": "and has a cycle\ncan get shortened by eliminating one\nedge of a cycle that's",
    "start": "2160260",
    "end": "2168240"
  },
  {
    "text": "within such as a subgraph. So maybe we have an idea here. And maybe we can use this.",
    "start": "2168240",
    "end": "2174339"
  },
  {
    "text": "So maybe we can say, let's\nset consider a graph T. So",
    "start": "2174340",
    "end": "2183370"
  },
  {
    "text": "let T be a connected subgraph\nof G, but with a property",
    "start": "2183370",
    "end": "2190730"
  },
  {
    "text": "that it has a minimum\nnumber of edges. So let this be a\nconnected subgraph of G.",
    "start": "2190730",
    "end": "2201790"
  },
  {
    "text": "And we assume that it has the\nsame vertices of G of course.",
    "start": "2201790",
    "end": "2207290"
  },
  {
    "start": "2207290",
    "end": "2215050"
  },
  {
    "text": "In addition, it has the smallest\nnumber of edges possible.",
    "start": "2215050",
    "end": "2220200"
  },
  {
    "start": "2220200",
    "end": "2237349"
  },
  {
    "text": "So what do we know? Well, let's look at\nour assumption here. We said that a connected\ngraph, G-- that's",
    "start": "2237350",
    "end": "2245069"
  },
  {
    "text": "what we consider\nhere-- for which there is no spanning tree. So what do we know?",
    "start": "2245070",
    "end": "2250170"
  },
  {
    "text": "We know that this\nparticular T over here can definitely not be a\nspanning tree, because that's what we assume here.",
    "start": "2250170",
    "end": "2255790"
  },
  {
    "text": " Can we use this?",
    "start": "2255790",
    "end": "2262920"
  },
  {
    "text": "So let's think about this. ",
    "start": "2262920",
    "end": "2269780"
  },
  {
    "text": "So if it is not a spanning\ntree, then what must it have?",
    "start": "2269780",
    "end": "2275510"
  },
  {
    "text": "So we already know that T\nis a connected subgraph of G",
    "start": "2275510",
    "end": "2281380"
  },
  {
    "text": "with the same vertices of\nG. So the only difference between a spanning tree and T\nis that the spanning tree is",
    "start": "2281380",
    "end": "2291035"
  },
  {
    "text": "a tree, and T is not a tree. So therefor, T\nmust have a cycle.",
    "start": "2291035",
    "end": "2297870"
  },
  {
    "text": "So we use our\nassumption over here. We know that T is\nnot a spanning tree.",
    "start": "2297870",
    "end": "2307730"
  },
  {
    "text": "And now we can conclude\nthat it must have a cycle. ",
    "start": "2307730",
    "end": "2316960"
  },
  {
    "text": "So now we can start\nthinking about this cycle.",
    "start": "2316960",
    "end": "2322530"
  },
  {
    "text": "And let's feel--  What can we do here?",
    "start": "2322530",
    "end": "2327830"
  },
  {
    "text": "So we constructed T\nas the subgraph that has the minimum number\nof edges possible.",
    "start": "2327830",
    "end": "2335730"
  },
  {
    "text": "So now if you have a\ncycle, the whole idea is that we're going to delete\none of the edges of the cycle.",
    "start": "2335730",
    "end": "2341750"
  },
  {
    "text": "And if you do that, we will\nbe able to construct a smaller subgraph T, essentially, with\na smaller number of edges.",
    "start": "2341750",
    "end": "2351420"
  },
  {
    "text": "And that contradicts this\nparticular statement over here. So that's sort of\nhow we go ahead.",
    "start": "2351420",
    "end": "2357900"
  },
  {
    "text": "So if it has a cycle,\nlet's write it out. For example, here we\nhave a cycle like this.",
    "start": "2357900",
    "end": "2366195"
  },
  {
    "text": " Well, let's prove that if\nwe remove one of the cycle,",
    "start": "2366195",
    "end": "2376820"
  },
  {
    "text": "that we still have a\nconnected subgraph. So the whole graph T\nis much bigger, right?",
    "start": "2376820",
    "end": "2384180"
  },
  {
    "text": "It has lots of\nconnections and so on.",
    "start": "2384180",
    "end": "2389480"
  },
  {
    "text": "Suppose we will remove this\nparticular edge over here. So we remove this one.",
    "start": "2389480",
    "end": "2395099"
  },
  {
    "text": " Do we still have a\nconnected subgraph of G",
    "start": "2395100",
    "end": "2403059"
  },
  {
    "text": "that covers all\nthe vertices of G? Well, of course it cover\nall the vertices of G because we only removed\nan edge over here.",
    "start": "2403060",
    "end": "2409980"
  },
  {
    "text": "So that's fine. All these parts are still\nconnected to the rest. ",
    "start": "2409980",
    "end": "2416910"
  },
  {
    "text": "If you can show that it is\nconnected, then well we just--",
    "start": "2416910",
    "end": "2423079"
  },
  {
    "text": "well, we removed one edge. So we actually created\nthis smaller graph. And then we get contradiction.",
    "start": "2423080",
    "end": "2428510"
  },
  {
    "text": "And then we're done\nwith our proof. So let's see whether we\ncan prove that if we remove",
    "start": "2428510",
    "end": "2435330"
  },
  {
    "text": "this particular edge\nover here, that we still have a connected subgraph. So how can we do this? ",
    "start": "2435330",
    "end": "2442760"
  },
  {
    "text": "Well, let's take-- so the\nfirst case would be if a vertex",
    "start": "2442760",
    "end": "2451382"
  },
  {
    "text": "x is connected to y. So I want to take any\npair x, y of vertices.",
    "start": "2451382",
    "end": "2460000"
  },
  {
    "text": "And suppose that the path\nthat connects x and y does not contain this particular\nedge e that I remove here.",
    "start": "2460000",
    "end": "2469030"
  },
  {
    "text": "So suppose this\ndoes not contain e.",
    "start": "2469030",
    "end": "2478000"
  },
  {
    "text": "So I look at the graph\nT. I Know T is connected. So I take a pair of\nvertices x and y.",
    "start": "2478000",
    "end": "2485110"
  },
  {
    "text": "I know there is a path\nbetween x and y in T.",
    "start": "2485110",
    "end": "2491020"
  },
  {
    "text": "If this path does not\ncontain the edge e, then I know that the same path\nstill exists in the same graph",
    "start": "2491020",
    "end": "2499410"
  },
  {
    "text": "where I've removed\nthis particular edge. So that's great, right? I have shown that\nx and y are still",
    "start": "2499410",
    "end": "2506109"
  },
  {
    "text": "connected in the new graph\nwhere I've removed this e.",
    "start": "2506110",
    "end": "2511250"
  },
  {
    "text": "So now let's look\nat another case. For example, x is over here.",
    "start": "2511250",
    "end": "2516440"
  },
  {
    "text": "And it is connected all\nthe way through here",
    "start": "2516440",
    "end": "2521500"
  },
  {
    "text": "over this particular edge all\nthe way to, say, y over here.",
    "start": "2521500",
    "end": "2526770"
  },
  {
    "text": "So this is case number two. ",
    "start": "2526770",
    "end": "2535720"
  },
  {
    "text": "Well, are x ad y\nstill connected? Yes they are, right? Because I have removed\ne from a cycle.",
    "start": "2535720",
    "end": "2545609"
  },
  {
    "text": "So I can still go into the\nother direction of the cycle and connect back towards y.",
    "start": "2545610",
    "end": "2554539"
  },
  {
    "text": "So what we see here is that\nx can go all the way to here. But it can still go\nover the cycle back",
    "start": "2554540",
    "end": "2561109"
  },
  {
    "text": "to here, and then to y. So we are still connected.",
    "start": "2561110",
    "end": "2568410"
  },
  {
    "text": "So this shows that\nin both of the cases, for any pair of vertices,\neven after removal of e,",
    "start": "2568410",
    "end": "2575260"
  },
  {
    "text": "the graph T minus this\nedge e is still connected. ",
    "start": "2575260",
    "end": "2581650"
  },
  {
    "text": "So let's write this out. So all vertices in G\nare still connected",
    "start": "2581650",
    "end": "2600540"
  },
  {
    "text": "after removing e from T.",
    "start": "2600540",
    "end": "2611150"
  },
  {
    "text": "So now we are done. So what was that again? We now constructed\na smaller graph--",
    "start": "2611150",
    "end": "2617290"
  },
  {
    "text": "smaller in the sense that it has\none less edge-- that is still",
    "start": "2617290",
    "end": "2622540"
  },
  {
    "text": "connected, and with\nthe same vertices as G. But I assumed that T\nwas already the smallest",
    "start": "2622540",
    "end": "2629470"
  },
  {
    "text": "such graph, such subgraph. So we have a contradiction. So what does this mean?",
    "start": "2629470",
    "end": "2636190"
  },
  {
    "text": "This means that our original\nassumption that we have over here cannot be true because\nwe started off with this",
    "start": "2636190",
    "end": "2643170"
  },
  {
    "text": "assumption. Because of this, we could\nstart to construct this. And then you could derive\nthis whole argumentation.",
    "start": "2643170",
    "end": "2651705"
  },
  {
    "text": "And in the end, we\nget a contradiction. So our original\nassumption is wrong. So actually, this\nis not possible.",
    "start": "2651705",
    "end": "2660040"
  },
  {
    "text": "There does not exist a connected\ngraph G that has no ST. So the theorem is true.",
    "start": "2660040",
    "end": "2667120"
  },
  {
    "text": "So this is an important theorem. So now we can start talking\nabout weighted minimum spanning",
    "start": "2667120",
    "end": "2674416"
  },
  {
    "text": "trees. ",
    "start": "2674416",
    "end": "2680620"
  },
  {
    "text": "So let's use this picture over\nhere and assign some weights",
    "start": "2680620",
    "end": "2688020"
  },
  {
    "text": "to this graph.  So for example, we have 1,\n2, 2, 3, 3, 3, a 1 over here,",
    "start": "2688020",
    "end": "2708800"
  },
  {
    "text": "another 1, 1, 4, and 7.",
    "start": "2708800",
    "end": "2715130"
  },
  {
    "text": "And let's construct\na spanning tree.",
    "start": "2715130",
    "end": "2720950"
  },
  {
    "text": "So let me give an\nexample over here. Actually, this is an example\nthat we have right her",
    "start": "2720950",
    "end": "2725980"
  },
  {
    "text": "in the thick lines in green. So what is the weight\nof the spanning tree",
    "start": "2725980",
    "end": "2732430"
  },
  {
    "text": "that we have here? So we simply add the\nweights of all the edges. So we have 7, 3.",
    "start": "2732430",
    "end": "2738020"
  },
  {
    "text": "That makes 10. 11, 14, another\n2, 16, 17, 18, 19.",
    "start": "2738020",
    "end": "2744800"
  },
  {
    "text": "So the weight of this\nparticular spanning tree is 19.",
    "start": "2744800",
    "end": "2753650"
  },
  {
    "text": "So now the problem\nis-- and that's the rest of the\nlecture-- how can you construct a minimum\nweight spanning",
    "start": "2753650",
    "end": "2759790"
  },
  {
    "text": "tree, one that has the\nminimum weight possible?",
    "start": "2759790",
    "end": "2765870"
  },
  {
    "text": "So we see another example. So could I swap\nsome edges around",
    "start": "2765870",
    "end": "2771279"
  },
  {
    "text": "or something like that such\nthat I can get a lesser weight? So for example, over here,\nI have-- for example,",
    "start": "2771280",
    "end": "2780940"
  },
  {
    "text": "this node over here is connected\nby an edge that has weight 3.",
    "start": "2780940",
    "end": "2787290"
  },
  {
    "text": "But I could also\nhave connected it to this particular one over\nhere, which is only weight 1.",
    "start": "2787290",
    "end": "2793530"
  },
  {
    "text": "If I do this, I actually improve\nthe spanning tree construction.",
    "start": "2793530",
    "end": "2799220"
  },
  {
    "text": "So I will get something\nthat looks like-- ",
    "start": "2799220",
    "end": "2807480"
  },
  {
    "text": "Let's see-- that\nlooks like this. ",
    "start": "2807480",
    "end": "2814980"
  },
  {
    "text": "And now we replaced 3 by 1. So it gets 17.",
    "start": "2814980",
    "end": "2822260"
  },
  {
    "text": "So can we do anything\nless than this? That's maybe-- it's\nstill a tree, right?",
    "start": "2822260",
    "end": "2828580"
  },
  {
    "text": "Because there's no cycle. Here we have this, this,\nthis, this part over here.",
    "start": "2828580",
    "end": "2834300"
  },
  {
    "text": "If you want to have\nconnected subgraph, I always need the 7 in here. ",
    "start": "2834300",
    "end": "2841490"
  },
  {
    "text": "Well, it seems like you\ncannot really replace anything by something cheaper.",
    "start": "2841490",
    "end": "2847020"
  },
  {
    "text": "Like any edge in here seems\nto be pretty necessary.",
    "start": "2847020",
    "end": "2854467"
  },
  {
    "text": "Of course, what I could\ndo is I could create other minimum spanning trees. So actually it turns out that\n17 is the minimum weight.",
    "start": "2854467",
    "end": "2861060"
  },
  {
    "text": "For example, I could,\ninstead of this edge, I could use this edge. That's another solution.",
    "start": "2861060",
    "end": "2866930"
  },
  {
    "text": "Or instead of this edge,\nI could use this edge. ",
    "start": "2866930",
    "end": "2877960"
  },
  {
    "text": "So how do we construct such a\nminimum weight spanning tree? Can we somehow find an\nalgorithm that creates this?",
    "start": "2877960",
    "end": "2886330"
  },
  {
    "text": "And that's the big\nproblem of today. So let me write out\none spanning tree",
    "start": "2886330",
    "end": "2891859"
  },
  {
    "text": "that I will use for\nthe rest of this class.",
    "start": "2891860",
    "end": "2896890"
  },
  {
    "text": "And maybe I will use a\nlittle bit different color.",
    "start": "2896890",
    "end": "2903604"
  },
  {
    "start": "2903604",
    "end": "2913930"
  },
  {
    "text": "Let's use red over here. ",
    "start": "2913930",
    "end": "2919892"
  },
  {
    "text": "I hope this is visible.  So we have red, this\none, and this one,",
    "start": "2919892",
    "end": "2929828"
  },
  {
    "text": "and this one, and this\none, and this one. That's going to\nbe-- this is going",
    "start": "2929828",
    "end": "2936480"
  },
  {
    "text": "to be the spanning tree\nthat I'm going to look at. This is also weight 17. ",
    "start": "2936480",
    "end": "2948750"
  },
  {
    "text": "So let's first define what a\nminimum weight spanning tree is, just to be very precise.",
    "start": "2948750",
    "end": "2955180"
  },
  {
    "text": "And then let's\nhave an algorithm. Maybe you have already ideas\nof how this could be done.",
    "start": "2955180",
    "end": "2962790"
  },
  {
    "text": "It turns out actually\nthat if you just start with a greedy\napproach, you just start to add sort of through\nthe edges of minimum weight,",
    "start": "2962790",
    "end": "2971420"
  },
  {
    "text": "that you can still add\nwithout creating any cycles.",
    "start": "2971420",
    "end": "2976630"
  },
  {
    "text": "You will get an\nalgorithm that is going to do the trick for you. So that's kind of surprising.",
    "start": "2976630",
    "end": "2983830"
  },
  {
    "text": "So let's talk about\nthe definition. ",
    "start": "2983830",
    "end": "2990559"
  },
  {
    "text": "So the minimum spanning tree\nof an edge weighted graph",
    "start": "2990560",
    "end": "3001830"
  },
  {
    "text": "is defined as-- ",
    "start": "3001830",
    "end": "3012410"
  },
  {
    "text": "It's defined as the\nspanning tree of G such that it has the smallest\npossible sum of edge weights.",
    "start": "3012410",
    "end": "3031850"
  },
  {
    "start": "3031850",
    "end": "3040290"
  },
  {
    "text": "Well the algorithm\nthat I'm thinking about here is very straightforward.",
    "start": "3040290",
    "end": "3046530"
  },
  {
    "text": "Actually I'll use\nthis blackboard because this algorithm\nwill be the focus",
    "start": "3046530",
    "end": "3052160"
  },
  {
    "text": "of the rest of the lecture. ",
    "start": "3052160",
    "end": "3068819"
  },
  {
    "text": "So what's the algorithm? ",
    "start": "3068820",
    "end": "3073950"
  },
  {
    "text": "We actually grow a\nsubgraph step by step.",
    "start": "3073950",
    "end": "3080430"
  },
  {
    "text": "So one edge at a time\nsuch that at each step",
    "start": "3080430",
    "end": "3095359"
  },
  {
    "text": "we want to add the\nminimum weight edge that",
    "start": "3095360",
    "end": "3115850"
  },
  {
    "text": "keeps the subgraph acyclic. ",
    "start": "3115850",
    "end": "3133319"
  },
  {
    "text": "So this is our algorithm. Let's have a look how this\nworks in this particular graph over here.",
    "start": "3133320",
    "end": "3138733"
  },
  {
    "start": "3138733",
    "end": "3144660"
  },
  {
    "text": "So suppose I would\nstart off with-- well, if I start with this algorithm.",
    "start": "3144660",
    "end": "3151080"
  },
  {
    "text": "I take, say, any\nminimum weight edge. Say I take this particular one.",
    "start": "3151080",
    "end": "3156120"
  },
  {
    "text": "So this could be my\nfirst edge that I choose.  Then I may want to choose\nanother minimum weight",
    "start": "3156120",
    "end": "3163980"
  },
  {
    "text": "edge such that I do\nnot create a cycle. Well, which one could I choose? I could choose this one.",
    "start": "3163980",
    "end": "3169770"
  },
  {
    "text": "I could also choose this one. With this one, I could\nchoose this part. With this one, I could\nchoose that part.",
    "start": "3169770",
    "end": "3175826"
  },
  {
    "text": "I could also choose this one. So let's choose\nthis one actually. This would be our second\nstep and our second edge",
    "start": "3175826",
    "end": "3184540"
  },
  {
    "text": "that we select in our algorithm. There are two disjoint edges. So there's definitely no graph.",
    "start": "3184540",
    "end": "3189819"
  },
  {
    "text": " Well, maybe now\nour third step, I",
    "start": "3189820",
    "end": "3195810"
  },
  {
    "text": "can choose one of these edges,\nwhich also has just weight",
    "start": "3195810",
    "end": "3201390"
  },
  {
    "text": "1, which is minimum weight. So this could be my\nthird possibility. ",
    "start": "3201390",
    "end": "3207960"
  },
  {
    "text": "Then what's the\nfourth possibility? Well, I have to choose\none of those actually.",
    "start": "3207960",
    "end": "3215890"
  },
  {
    "text": "I cannot choose\nthis weight 1 edge? Why not? Because that would\ncreate a cycle.",
    "start": "3215890",
    "end": "3223400"
  },
  {
    "text": "So I'm not allowed to\nchoose this one anymore. So I choose one of these two. So for example, I choose\nthis one over here.",
    "start": "3223400",
    "end": "3230860"
  },
  {
    "text": "This is the fourth edge that\nI add to the whole picture. So note that in the meantime.",
    "start": "3230860",
    "end": "3237200"
  },
  {
    "text": "I have two disconnected\ncomponents. One other here, which is this\narc, and another arc over here.",
    "start": "3237200",
    "end": "3247300"
  },
  {
    "text": "So which edge do I attach\nnow in the algorithm? Well, I can still add\nthis minimum weight edge",
    "start": "3247300",
    "end": "3255050"
  },
  {
    "text": "over here of weight two, because\nit does not create any cycle.",
    "start": "3255050",
    "end": "3260140"
  },
  {
    "text": "So this would be\nthe fifth wonder that I add to the whole picture.",
    "start": "3260140",
    "end": "3265500"
  },
  {
    "text": "Well, now I can choose\neither one of those. So for example, this\nwould be my sixth step.",
    "start": "3265500",
    "end": "3271310"
  },
  {
    "text": "And then finally, I can\nchoose none of these because those would\ncreate cycles.",
    "start": "3271310",
    "end": "3277410"
  },
  {
    "text": "But I can choose this one. So this is going to be\nthe seventh one that I",
    "start": "3277410",
    "end": "3282990"
  },
  {
    "text": "add to the whole graph\nthat I construct here and grow in this algorithm.",
    "start": "3282990",
    "end": "3289060"
  },
  {
    "text": "It turns out that this algorithm\nactually creates for you a minimum spanning tree. And the proof is\nmuch more complex",
    "start": "3289060",
    "end": "3295700"
  },
  {
    "text": "than what you have seen before. So that's what we're\ngoing to do right now.",
    "start": "3295700",
    "end": "3300970"
  },
  {
    "text": " So when we think\nabout this algorithm,",
    "start": "3300970",
    "end": "3306049"
  },
  {
    "text": "then somehow I want to guarantee\nthat at every single step, I will be able to grow into\na minimum spanning tree.",
    "start": "3306050",
    "end": "3314090"
  },
  {
    "text": "And that's the basic\nintuition that we have. And that's the lemma that\nwe want to prove first.",
    "start": "3314090",
    "end": "3321520"
  },
  {
    "text": "So formalizing, we\nget the following.",
    "start": "3321520",
    "end": "3329227"
  },
  {
    "text": "We want to prove the\nfollowing statement. ",
    "start": "3329227",
    "end": "3339040"
  },
  {
    "text": "So the lemma that will help us\nis let S be the set of edges",
    "start": "3339040",
    "end": "3346870"
  },
  {
    "text": "that I have been selecting\nup to now in the algorithm.",
    "start": "3346870",
    "end": "3353100"
  },
  {
    "text": "So let S consist, for\nexample, of the first m edges.",
    "start": "3353100",
    "end": "3360175"
  },
  {
    "start": "3360175",
    "end": "3370250"
  },
  {
    "text": "What we want to show\nis that we can still",
    "start": "3370250",
    "end": "3377760"
  },
  {
    "text": "extend this set of edges\ninto a minimum spanning tree. We can still grow\nwithin the algorithm",
    "start": "3377760",
    "end": "3383190"
  },
  {
    "text": "into a minimum spanning tree. That is what you want to show.",
    "start": "3383190",
    "end": "3388280"
  },
  {
    "text": "So we want to show that their\nexists a minimum spanning tree",
    "start": "3388280",
    "end": "3394300"
  },
  {
    "text": "T that has the vertex\nset V and an edge set E.",
    "start": "3394300",
    "end": "3401942"
  },
  {
    "text": " So this is the minimum\nspanning tree for the graph G such that S is actually\na subset of the edges",
    "start": "3401942",
    "end": "3417950"
  },
  {
    "text": "in this minimum spanning tree. So this is a nice\nmathematical formulation that really precisely\nstates that we can still",
    "start": "3417950",
    "end": "3428836"
  },
  {
    "text": "keep on growing into a\nminimum spanning tree. So how would this lemma help\nus in proving the theorem that we want to show?",
    "start": "3428836",
    "end": "3436980"
  },
  {
    "text": "Actually, where is the theorem? I did not write down\nthe theorem so far.",
    "start": "3436980",
    "end": "3443080"
  },
  {
    "text": "I can put this over here. So the theorem\nthat's want to show is that for any connected\nweighted graph G,",
    "start": "3443080",
    "end": "3463990"
  },
  {
    "text": "the algorithm creates a\nminimum spanning tree. ",
    "start": "3463990",
    "end": "3471990"
  },
  {
    "text": "The algorithm produces\na minimum spanning tree.",
    "start": "3471990",
    "end": "3479960"
  },
  {
    "text": "So how can we prove his theorem? Suppose we know that\nthis lemma is true, which we will prove later.",
    "start": "3479960",
    "end": "3487050"
  },
  {
    "text": "Then how do we know\nthat this theorem holds? ",
    "start": "3487050",
    "end": "3496020"
  },
  {
    "text": "Actually, I'm wiping out this\nparticular theorem over here. We will use this in a moment. So we know that every connected\ngraph has a spanning tree.",
    "start": "3496020",
    "end": "3503990"
  },
  {
    "text": "We already know that. But now we want to\nshow that we can even construct a minimum spanning\ntree for a weighted graph.",
    "start": "3503990",
    "end": "3511480"
  },
  {
    "text": " So how are we going ahead? ",
    "start": "3511480",
    "end": "3518849"
  },
  {
    "text": "The proof of the\ntheorem is as follows.",
    "start": "3518850",
    "end": "3525820"
  },
  {
    "text": "I will suppose that\nthe number of edges-- the number of vertices--\nis actually equal to n.",
    "start": "3525820",
    "end": "3532319"
  },
  {
    "text": "And if we want to show that we\nget to a minimum spanning tree,",
    "start": "3532320",
    "end": "3537750"
  },
  {
    "text": "we want to first of all\nshow that the algorithm is able to choose at least\nn minus 1 edges, right?",
    "start": "3537750",
    "end": "3545840"
  },
  {
    "text": "Because a tree has\nn minus 1 edges. We have shown this before. ",
    "start": "3545840",
    "end": "3553220"
  },
  {
    "text": "The algorithm should\nnot get stuck. So let's first prove that. So suppose I have chosen\nless than n minus 1 edges.",
    "start": "3553220",
    "end": "3563160"
  },
  {
    "text": " So suppose we have less\nthan n minus 1 edges picked.",
    "start": "3563160",
    "end": "3571920"
  },
  {
    "text": "Well then what do we know? Well, there exists as\nedge in E minus S--",
    "start": "3571920",
    "end": "3584460"
  },
  {
    "text": "well, let me first\nwrite it out-- that can be added\nwithout creating a cycle.",
    "start": "3584460",
    "end": "3598440"
  },
  {
    "text": " So why is this?",
    "start": "3598440",
    "end": "3603760"
  },
  {
    "text": "Well, I know that\nE is the edge set of my minimum spanning tree.",
    "start": "3603760",
    "end": "3610760"
  },
  {
    "text": "I know that S is a part of--\nis a subset of all the edges.",
    "start": "3610760",
    "end": "3618390"
  },
  {
    "text": "I know that a minimum\nspanning tree is a tree. It's a tree on n vertices.",
    "start": "3618390",
    "end": "3624570"
  },
  {
    "text": "We know that's a tree on n\nvertices has n minus 1 edges.",
    "start": "3624570",
    "end": "3629870"
  },
  {
    "text": "I know that less than n minus 1\nedges have been chosen so far.",
    "start": "3629870",
    "end": "3635070"
  },
  {
    "text": "So that means that S has\nless than n minus 1 edges.",
    "start": "3635070",
    "end": "3640720"
  },
  {
    "text": "E has successfully\nn minus 1 edges. So there's at least one\nedge that is contained,",
    "start": "3640720",
    "end": "3645914"
  },
  {
    "text": "that it is an element\nin E, but not in S.",
    "start": "3645915",
    "end": "3652345"
  },
  {
    "text": "And for that\nparticular edge-- well, since it's part of\nthis tree, together",
    "start": "3652345",
    "end": "3658390"
  },
  {
    "text": "with S, which is also part of\nall the edges within the tree--",
    "start": "3658390",
    "end": "3665339"
  },
  {
    "text": "well, we know that that\nedge, for that reason, will not create a cycle.",
    "start": "3665340",
    "end": "3671990"
  },
  {
    "text": "Because otherwise, the\noriginal would have a cycle. ",
    "start": "3671990",
    "end": "3677690"
  },
  {
    "text": "So we know that the\nalgorithm can always select an edge such that's\nno cycle is created.",
    "start": "3677690",
    "end": "3685300"
  },
  {
    "text": "And that means that we can\nkeep on going in the algorithm until at least n minus\n1 edges are selected.",
    "start": "3685300",
    "end": "3693410"
  },
  {
    "text": "So what happens if we\nhave n minus 1 edges? ",
    "start": "3693410",
    "end": "3700020"
  },
  {
    "text": "So once n minus 1\nedges have been chosen,",
    "start": "3700020",
    "end": "3709960"
  },
  {
    "text": "well, then S has\nexactly n minus 1 edges. E has exactly n minus 1\nedges, because it's a tree.",
    "start": "3709960",
    "end": "3718450"
  },
  {
    "text": "They are subsets of one another. So they must be\nequal to one another. So essentially what\nwe have here is",
    "start": "3718450",
    "end": "3724160"
  },
  {
    "text": "that S exactly defines\nthe minimum spanning tree",
    "start": "3724160",
    "end": "3730039"
  },
  {
    "text": "that we are looking for. So the algorithm\nat the very end,",
    "start": "3730040",
    "end": "3735880"
  },
  {
    "text": "when it has chosen\nn minus 1 edges, produces a minimum\nspanning tree.",
    "start": "3735880",
    "end": "3741540"
  },
  {
    "text": "So we know that S defines\nthe edges of a minimum weight",
    "start": "3741540",
    "end": "3754130"
  },
  {
    "text": "spanning tree. So if this lemma\nreally holds true, then this theorem can be shown.",
    "start": "3754130",
    "end": "3761226"
  },
  {
    "text": "So now let's have a\nlook at this lemma. And we're going to use\nthat picture over there to see how we can prove this.",
    "start": "3761226",
    "end": "3767610"
  },
  {
    "text": "So this is a little bit tricky. And the way to go about this\nis actually to use induction.",
    "start": "3767610",
    "end": "3780340"
  },
  {
    "text": "So let's check see whether\nwe can do this together. ",
    "start": "3780340",
    "end": "3791799"
  },
  {
    "text": "So the proof of the\nlemma is as follows. ",
    "start": "3791800",
    "end": "3800619"
  },
  {
    "text": "We want to use induction. On what do you think we\nare going to induct here?",
    "start": "3800620",
    "end": "3807160"
  },
  {
    "text": "Well, we want to prove\nthis particular lemma, and we have this\nparticular variable m. So that seems to be a\ngood methods to continue.",
    "start": "3807160",
    "end": "3814790"
  },
  {
    "text": "So we'll use induction on m. ",
    "start": "3814790",
    "end": "3821740"
  },
  {
    "text": "Let's state the\ninduction hypothesis.",
    "start": "3821740",
    "end": "3827030"
  },
  {
    "text": "Well, it's exactly the\nsame as in the lemma. So we say for all\nG and for all sets",
    "start": "3827030",
    "end": "3834780"
  },
  {
    "text": "S that consists of the\nfirst m selected edges,",
    "start": "3834780",
    "end": "3852730"
  },
  {
    "text": "there exists a minimum\nspanning tree of G such",
    "start": "3852730",
    "end": "3862119"
  },
  {
    "text": "that S is a subset of E.",
    "start": "3862120",
    "end": "3868780"
  },
  {
    "text": "So this is how\ninduction hypothesis. And as always, we start\nwith the base case.",
    "start": "3868780",
    "end": "3874720"
  },
  {
    "text": "And the base case is\ngoing to be pretty straightforward in\nthis particular case. ",
    "start": "3874720",
    "end": "3882750"
  },
  {
    "text": "We have to do a little\nbit of work for it. So let's see how that works. So the base case is m equals 0.",
    "start": "3882750",
    "end": "3890619"
  },
  {
    "text": "So let's reread this statement\nwhere m is equal to 0. Well, if we have zero selected\nedges, then S is the empty set.",
    "start": "3890620",
    "end": "3903779"
  },
  {
    "text": "So I have to prove\nthat for all G, there exists a minimum\nspanning tree such",
    "start": "3903780",
    "end": "3909240"
  },
  {
    "text": "that the empty set is a subset\nof E. Well, the empty set is always a subset of E, right?",
    "start": "3909240",
    "end": "3914691"
  },
  {
    "text": "So that's no problem.  So what I need to proof\nis that for all G,",
    "start": "3914691",
    "end": "3920570"
  },
  {
    "text": "there exists a minimum\nspanning tree of G.",
    "start": "3920570",
    "end": "3925780"
  },
  {
    "text": "And this is where our\nprevious theorem comes in, because we showed\nthat for all graphs G,",
    "start": "3925780",
    "end": "3932010"
  },
  {
    "text": "there exists a spanning tree. And if there exists\na spanning tree, there exists a minimum\nweight spanning tree.",
    "start": "3932010",
    "end": "3938540"
  },
  {
    "text": "So that's the base case. So m equals 0 implies that\nS is equal to the empty set.",
    "start": "3938540",
    "end": "3946380"
  },
  {
    "text": "So that means that\nS is definitely a subset for any set of edges of\na minimum weight spanning tree.",
    "start": "3946380",
    "end": "3958420"
  },
  {
    "text": " And now we're going to use our\ntheorem to show that there also",
    "start": "3958420",
    "end": "3967030"
  },
  {
    "text": "exists a minimum spanning tree. So this in itself is not\nyet sufficient, right? You see that.",
    "start": "3967030",
    "end": "3973970"
  },
  {
    "text": "I know that if S\nis the empty set, then I know that\nthis always holds.",
    "start": "3973970",
    "end": "3979119"
  },
  {
    "text": "But the statement is\na little bit bigger. For all G, I still\nneed to prove there exists a minimum spanning tree.",
    "start": "3979120",
    "end": "3985280"
  },
  {
    "text": "And that's what our\nprevious theorem told us. So we'll now write\nthat part out. So we have to base case.",
    "start": "3985280",
    "end": "3991090"
  },
  {
    "text": " Let's see.",
    "start": "3991090",
    "end": "3996130"
  },
  {
    "start": "3996130",
    "end": "4002680"
  },
  {
    "text": "I think I will go and\nprove this over here.",
    "start": "4002680",
    "end": "4009020"
  },
  {
    "text": "So let's look at the--  That's the inductive step.",
    "start": "4009020",
    "end": "4015850"
  },
  {
    "text": "And then hopefully we can play\na little bit with this picture up here to get some insight.",
    "start": "4015850",
    "end": "4021916"
  },
  {
    "text": " So how do we do this?",
    "start": "4021916",
    "end": "4029050"
  },
  {
    "text": "Well, with an inductive\nstep, we start as usual. ",
    "start": "4029050",
    "end": "4037880"
  },
  {
    "text": "We assume that P of m holds.",
    "start": "4037880",
    "end": "4043765"
  },
  {
    "text": " Now how do we go ahead? So I want to prove Pm plus\n1, which is stated over here.",
    "start": "4043765",
    "end": "4054160"
  },
  {
    "text": "So I want to consider\nthe set S that consists of the first n\nplus 1 selected edges.",
    "start": "4054160",
    "end": "4060960"
  },
  {
    "text": "So well, essentially\nwhat I'm interested in",
    "start": "4060960",
    "end": "4066140"
  },
  {
    "text": "is what happens in\nthe n plus 1 step. So let E denote the edge that\nI added in the m plus 1 step.",
    "start": "4066140",
    "end": "4083484"
  },
  {
    "start": "4083484",
    "end": "4090720"
  },
  {
    "text": "And let S be the first\nm selected edges.",
    "start": "4090720",
    "end": "4096318"
  },
  {
    "text": "And we know that we can\napply p of m for S, right? Because we assume this\nis our inductive step.",
    "start": "4096319",
    "end": "4102960"
  },
  {
    "text": "So we can apply\nsomething for S. We would like to show Pm plus 1. So we would like\nto show something",
    "start": "4102960",
    "end": "4108970"
  },
  {
    "text": "for the union of those two. So let me repeat that. Let S denote the first\nm selected edges.",
    "start": "4108970",
    "end": "4120799"
  },
  {
    "text": " So by our induction hypothesis,\nwe can-- well, let's apply it.",
    "start": "4120800",
    "end": "4134430"
  },
  {
    "text": "We know that there\nexists a minimum spanning tree such that S is a\nsubset of the edges.",
    "start": "4134430",
    "end": "4141700"
  },
  {
    "text": "So let's just pick one\nsuch minimum spanning tree. So let T star be such a\nminimum spanning tree.",
    "start": "4141700",
    "end": "4151489"
  },
  {
    "text": "It has edges E star. ",
    "start": "4151490",
    "end": "4163710"
  },
  {
    "text": "And we know that S is\nactually a subset of E star. ",
    "start": "4163710",
    "end": "4174890"
  },
  {
    "text": "Let's look at the\nvery first case. So what are the kind of cases\nthat we are interested in? So let's think again.",
    "start": "4174890",
    "end": "4181699"
  },
  {
    "text": "What do we need to prove? We need to prove Pn plus 1. So we need to prove something\nabout the union of S and E.",
    "start": "4181700",
    "end": "4188670"
  },
  {
    "text": "We want to show that there is\na minimum spanning tree such that the edge set of this\nminimum spanning tree",
    "start": "4188670",
    "end": "4196220"
  },
  {
    "text": "contains both S and also E. So what kind of cases\ncan we handle here?",
    "start": "4196220",
    "end": "4205100"
  },
  {
    "text": "Well, what will be a\nreally good first case? The first case could be\nthat E is actually already",
    "start": "4205100",
    "end": "4213260"
  },
  {
    "text": "part of E star. Well, if that's true, then\nof course, S together with E",
    "start": "4213260",
    "end": "4220980"
  },
  {
    "text": "is also a subset of E star. And that means that we are\ndone, in this particular case.",
    "start": "4220980",
    "end": "4232450"
  },
  {
    "text": "And why is this? Because this is an example of\na minimum spanning tree that",
    "start": "4232450",
    "end": "4238219"
  },
  {
    "text": "contains both S and E.\nSo it contains the n plus 1 first selected edges.",
    "start": "4238220",
    "end": "4243429"
  },
  {
    "text": "And so this is Pn plus 1. Now the next case is\nthe difficult part. ",
    "start": "4243430",
    "end": "4252350"
  },
  {
    "text": "OK, let's wipe\nout-- actually, we",
    "start": "4252350",
    "end": "4259400"
  },
  {
    "text": "do not really need the proof\nof the theorem anymore. So let's take this\noff the blackboard.",
    "start": "4259400",
    "end": "4265929"
  },
  {
    "start": "4265930",
    "end": "4272910"
  },
  {
    "text": "So the way to do this\nis to sort of see",
    "start": "4272910",
    "end": "4278910"
  },
  {
    "text": "how we can use the tree, T\nstar, and somehow transform it",
    "start": "4278910",
    "end": "4286040"
  },
  {
    "text": "into another tree for\nthis particular case where we assume that\nE is not in E star.",
    "start": "4286040",
    "end": "4293565"
  },
  {
    "start": "4293565",
    "end": "4299949"
  },
  {
    "text": "So let's have a look\nat that graph up there. Let me rewrite it a little bit.",
    "start": "4299950",
    "end": "4305730"
  },
  {
    "text": "And let's look at what\nhappens in the algorithm after two steps.",
    "start": "4305730",
    "end": "4311200"
  },
  {
    "text": "So I will redraw the graph. So we have, say, these edges.",
    "start": "4311200",
    "end": "4323920"
  },
  {
    "start": "4323920",
    "end": "4333969"
  },
  {
    "text": "This one-- let me see.",
    "start": "4333970",
    "end": "4339370"
  },
  {
    "text": "I want to use some different\ncolors to make this as clear as possible.",
    "start": "4339370",
    "end": "4346630"
  },
  {
    "text": "We have this one. We have this one. We have this one.",
    "start": "4346630",
    "end": "4353170"
  },
  {
    "text": "And we also have\nthis one actually. Sorry. All right, so let's define\nthe different edges.",
    "start": "4353170",
    "end": "4361739"
  },
  {
    "text": "The straight ones\nfrom the set S. So after two steps over there,\nwe have selected this edge",
    "start": "4361740",
    "end": "4369990"
  },
  {
    "text": "first, and then this\nedge was the second edge that we selected\nin our algorithm.",
    "start": "4369990",
    "end": "4375150"
  },
  {
    "text": "So these two together\nform the set S. So what is T star?",
    "start": "4375150",
    "end": "4382100"
  },
  {
    "text": "T star could be, for\nexample, the spanning tree that contains both these\nedges plus the dotted ones.",
    "start": "4382100",
    "end": "4394155"
  },
  {
    "text": " So let's have a look here. This is indeed a tree, right?",
    "start": "4394155",
    "end": "4401389"
  },
  {
    "text": "And if we look into\nthis picture over here,",
    "start": "4401390",
    "end": "4406580"
  },
  {
    "text": "you can see that the weight\nof this particular tree is 17. It's also a minimum\nweight spanning tree.",
    "start": "4406580",
    "end": "4413180"
  },
  {
    "text": " What is G? G is the complete graph and\ncontains not only these two",
    "start": "4413180",
    "end": "4421500"
  },
  {
    "text": "types of edges, but also these\nsort of more orange colored ones.",
    "start": "4421500",
    "end": "4426744"
  },
  {
    "text": " So this is so the\nsituation that we are in.",
    "start": "4426744",
    "end": "4434490"
  },
  {
    "text": "Now in our algorithm,\nwe want to choose this particular third edge.",
    "start": "4434490",
    "end": "4442350"
  },
  {
    "text": "So this is going to be our\ne, this particular edge.",
    "start": "4442350",
    "end": "4449140"
  },
  {
    "text": "And as you can see, e\nis not part of T star. It's not one of those\ntwo kinds of edges.",
    "start": "4449140",
    "end": "4456190"
  },
  {
    "text": "It's actually one\nof the orange edges. So what can we do here?",
    "start": "4456190",
    "end": "4462400"
  },
  {
    "text": "Well, the idea is that we\nwant to recreate like a you",
    "start": "4462400",
    "end": "4469640"
  },
  {
    "text": "tree in which we somehow\nexchange e-- exchange one",
    "start": "4469640",
    "end": "4475530"
  },
  {
    "text": "of the edges in T\nstar with e, and still sort of maintaining the\nminimum spanning tree property.",
    "start": "4475530",
    "end": "4482740"
  },
  {
    "text": "So how can you prove this? ",
    "start": "4482740",
    "end": "4492590"
  },
  {
    "text": "The way to do this\nis to figure out what the algorithm\nteaches us about e,",
    "start": "4492590",
    "end": "4500610"
  },
  {
    "text": "and also what the tree\nproperty tells us. ",
    "start": "4500610",
    "end": "4508040"
  },
  {
    "text": "So let's combine\nall our knowledge. So first of all, we\nknow that the algorithm,",
    "start": "4508040",
    "end": "4513470"
  },
  {
    "text": "from its definition,\nimplies that as together with e, actually has no cycle.",
    "start": "4513470",
    "end": "4524370"
  },
  {
    "text": "That's how we select\nthe n plus 1 edge. There's no-- all\nselected edged together",
    "start": "4524370",
    "end": "4532710"
  },
  {
    "text": "should not contain a cycle. That's the definition\nof the algorithm. We know that T star is a tree.",
    "start": "4532710",
    "end": "4539430"
  },
  {
    "text": "And this implies that if\nyou look at the graph that",
    "start": "4539430",
    "end": "4545750"
  },
  {
    "text": "has the edges, has the\nvertices V together with E star with edge e, then\nthis must contain a cycle.",
    "start": "4545750",
    "end": "4556250"
  },
  {
    "text": " Now this property I will\nnot prove right now,",
    "start": "4556250",
    "end": "4562626"
  },
  {
    "text": "but it is pretty\nstraightforward. It's a one line proof\nactually in the book. So you can look it up. So it simply states that\nif you have a tree, if you",
    "start": "4562626",
    "end": "4570050"
  },
  {
    "text": "add another edge, an edge that\nis not contained in E star,",
    "start": "4570050",
    "end": "4575500"
  },
  {
    "text": "then we will create a cycle. So now we can combine these\ntwo statements together",
    "start": "4575500",
    "end": "4582780"
  },
  {
    "text": "and conclude that, well,\nif S with e has no cycle,",
    "start": "4582780",
    "end": "4590500"
  },
  {
    "text": "but E star with e has a cycle,\nand S is contained in E star,",
    "start": "4590500",
    "end": "4596940"
  },
  {
    "text": "well there's only\none possibility. And that is that this cycle\nmust have an edge, e prime, that",
    "start": "4596940",
    "end": "4612420"
  },
  {
    "text": "is in E star minus S. Because if it would\nnot have such an edge,",
    "start": "4612420",
    "end": "4619630"
  },
  {
    "text": "then all the edges of the cycle\nmust be located in S-- in S",
    "start": "4619630",
    "end": "4628440"
  },
  {
    "text": "together with E. But S\ntogether with E has no cycle. So that's not possible. So this cycle must\nhave and edge e",
    "start": "4628440",
    "end": "4634460"
  },
  {
    "text": "prime that is outside\nS, but still in E star. So we can find one over here.",
    "start": "4634460",
    "end": "4642000"
  },
  {
    "text": "e prime can be this\nparticular edge. So e prime is in E star.",
    "start": "4642000",
    "end": "4648820"
  },
  {
    "text": "But it is not already\nselected in S.",
    "start": "4648820",
    "end": "4653980"
  },
  {
    "text": "So now we are going\nto do a trick.  The idea is to\nswap e and e prime.",
    "start": "4653980",
    "end": "4663560"
  },
  {
    "text": "So that's the main idea. So let's first write down what\nwe know about the weight of e",
    "start": "4663560",
    "end": "4671620"
  },
  {
    "text": "prime and e. So since the algorithm,\nwell, could have selected e",
    "start": "4671620",
    "end": "4684370"
  },
  {
    "text": "or e prime-- it did\nselect e, right? But it could have\nalso selected e prime,",
    "start": "4684370",
    "end": "4689670"
  },
  {
    "text": "because e prime does not\ncreate a cycle with S.",
    "start": "4689670",
    "end": "4695150"
  },
  {
    "text": "That's what we have seen here. So this really implies\ntherefore that the weight of e",
    "start": "4695150",
    "end": "4707920"
  },
  {
    "text": "is at most the\nweight of e prime.",
    "start": "4707920",
    "end": "4715520"
  },
  {
    "text": "So why is this? Because the algorithm always\nchooses the minimum weight. And it can choose between e\nor e prime, but it chose e.",
    "start": "4715520",
    "end": "4723515"
  },
  {
    "text": "So the weight of e must be less\nthan the weight of e prime. So that's what we know also.",
    "start": "4723515",
    "end": "4729619"
  },
  {
    "text": "So now let's swap\ne and e prime in T. And then we're almost\ndone with this proof,",
    "start": "4729620",
    "end": "4735900"
  },
  {
    "text": "because that will be the tree\nof which we will prove that it",
    "start": "4735900",
    "end": "4742295"
  },
  {
    "text": "is a minimum spanning tree. ",
    "start": "4742295",
    "end": "4750870"
  },
  {
    "text": "So the key idea is to swap e and\ne prime in T. How do we do it?",
    "start": "4750870",
    "end": "4762510"
  },
  {
    "text": "Well, let T double\nstar be equal to V with the edge set\nE double star where",
    "start": "4762510",
    "end": "4772080"
  },
  {
    "text": "E double star is really equal\nto, well, the original set E",
    "start": "4772080",
    "end": "4778530"
  },
  {
    "text": "star. But we take out of this e prime. So this one is taken out of\nthe minimum spanning tree.",
    "start": "4778530",
    "end": "4786330"
  },
  {
    "text": "And we add e in here. ",
    "start": "4786330",
    "end": "4792309"
  },
  {
    "text": "Now we want to prove\nthat this particular T double star is a minimum\nspanning tree that fits our lemma.",
    "start": "4792310",
    "end": "4799810"
  },
  {
    "text": "So what do we know? We know that T double\nstar is acyclic.",
    "start": "4799810",
    "end": "4805366"
  },
  {
    "start": "4805366",
    "end": "4810500"
  },
  {
    "text": "And why is this? Well, we actually removed e\nprime from the only cycle-- so",
    "start": "4810500",
    "end": "4825500"
  },
  {
    "text": "look up here also-- the\nonly cycle in E star",
    "start": "4825500",
    "end": "4833000"
  },
  {
    "text": "together with e. So it's acyclic.",
    "start": "4833000",
    "end": "4839110"
  },
  {
    "text": "T double star is also connected.  And why is that?",
    "start": "4839110",
    "end": "4845620"
  },
  {
    "text": "Well, since e prime is\nremoved-- but it was on a cycle.",
    "start": "4845620",
    "end": "4852440"
  },
  {
    "text": "So it remains connected. ",
    "start": "4852440",
    "end": "4858679"
  },
  {
    "text": "And finally, we also know\nthat T double star actually",
    "start": "4858680",
    "end": "4864300"
  },
  {
    "text": "contains all the vertices in\nG. So all these three together",
    "start": "4864300",
    "end": "4875530"
  },
  {
    "text": "with prove that T double\nstar is a spanning tree of G,",
    "start": "4875530",
    "end": "4882829"
  },
  {
    "text": "because it's acyclic, connected,\ncontains all the vertices. Is it a minimum\nweight spanning tree?",
    "start": "4882830",
    "end": "4889780"
  },
  {
    "text": "Now we are really almost done,\nbecause-- let me write it out",
    "start": "4889780",
    "end": "4894840"
  },
  {
    "text": "here. We know that the\nweight of T double star",
    "start": "4894840",
    "end": "4902980"
  },
  {
    "text": "is at most the weight of T star.",
    "start": "4902980",
    "end": "4908270"
  },
  {
    "text": "Why is this? Well, we showed just\nnow that the weight of e",
    "start": "4908270",
    "end": "4913570"
  },
  {
    "text": "is at most the\nweight of e prime. So we have exchanged\ne and e prime. So that means that the\nweight of T double star",
    "start": "4913570",
    "end": "4920750"
  },
  {
    "text": "is at most that of\nthe weight of T star. We also know that T star\nis a minimum spanning tree.",
    "start": "4920750",
    "end": "4932750"
  },
  {
    "text": "So if you combine\nthese two together, then we know that the weight of\nT double star cannot get less",
    "start": "4932750",
    "end": "4940290"
  },
  {
    "text": "than the minimum\nweight possibility. So it also has a minimum weight. So T double star is a\nminimum spanning tree.",
    "start": "4940290",
    "end": "4950940"
  },
  {
    "text": "So now we're done\nbecause in this case, we have constructed\na T double star such",
    "start": "4950940",
    "end": "4957720"
  },
  {
    "text": "that S together with E is\na subset of E double star.",
    "start": "4957720",
    "end": "4964720"
  },
  {
    "text": "And that means that we have\nshown that our induction",
    "start": "4964720",
    "end": "4970630"
  },
  {
    "text": "step is true. We have shown that\nPn plus 1 holds. So now we finally have figured\nout that the lemma is true.",
    "start": "4970630",
    "end": "4978040"
  },
  {
    "text": "And now we showed already how\nto use the lemma in our proof",
    "start": "4978040",
    "end": "4985080"
  },
  {
    "text": "for this particular theorem. So this is the end\nof this lecture.",
    "start": "4985080",
    "end": "4991030"
  },
  {
    "text": "And tomorrow, you will actually\ngo again over this proof because it's rather complex.",
    "start": "4991030",
    "end": "4996830"
  },
  {
    "text": "And then hopefully you\nreally get into all the different proof techniques. OK. Thank you.",
    "start": "4996830",
    "end": "5003510"
  },
  {
    "start": "5003510",
    "end": "5005802"
  }
]