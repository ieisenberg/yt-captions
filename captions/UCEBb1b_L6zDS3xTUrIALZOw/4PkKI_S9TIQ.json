[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "Let's wrap up our discussion of system-level\ninterconnect by considering how best to connect",
    "start": "1020",
    "end": "6319"
  },
  {
    "text": "N components that need to send messages to\none another, e.g., CPUs on a multicore chip.",
    "start": "6319",
    "end": "13670"
  },
  {
    "text": "Today such chips have a handful of cores,\nbut soon they may have 100s or 1000s of cores.",
    "start": "13670",
    "end": "19520"
  },
  {
    "text": "We'll build our communications network using\npoint-to-point links.",
    "start": "19520",
    "end": "23390"
  },
  {
    "text": "In our analysis, each point-to-point link\nis counted at a cost of 1 hardware unit.",
    "start": "23390",
    "end": "28890"
  },
  {
    "text": "Sending a message across a link requires one\ntime unit.",
    "start": "28890",
    "end": "32960"
  },
  {
    "text": "And we'll assume that different links can\noperate in parallel, so more links will mean",
    "start": "32960",
    "end": "36980"
  },
  {
    "text": "more message traffic.",
    "start": "36980",
    "end": "38640"
  },
  {
    "text": "We'll do an asymptotic analysis of the throughput\n(total messages per unit time), latency (worst-case",
    "start": "38640",
    "end": "46570"
  },
  {
    "text": "time to deliver a single message), and hardware\ncost.",
    "start": "46570",
    "end": "49899"
  },
  {
    "text": "In other words, we'll make a rough estimate\nhow these quantities change as N grows.",
    "start": "49899",
    "end": "57289"
  },
  {
    "text": "Note that in general the throughput and hardware\ncost are proportional to the number of point-to-point",
    "start": "57290",
    "end": "62480"
  },
  {
    "text": "links.",
    "start": "62480",
    "end": "63700"
  },
  {
    "text": "Our baseline is the backplane bus discussed\nearlier, where all the components share a",
    "start": "63700",
    "end": "68240"
  },
  {
    "text": "single communication channel.",
    "start": "68240",
    "end": "70749"
  },
  {
    "text": "With only a single channel, bus throughput\nis 1 message per unit time and a message can",
    "start": "70749",
    "end": "76600"
  },
  {
    "text": "travel between any two components in one time\nunit.",
    "start": "76600",
    "end": "80200"
  },
  {
    "text": "Since each component has to have an interface\nto the shared channel, the total hardware",
    "start": "80200",
    "end": "84729"
  },
  {
    "text": "cost is O(n).",
    "start": "84729",
    "end": "87170"
  },
  {
    "text": "In a ring network each component sends its\nmessages to a single neighbor and the links",
    "start": "87170",
    "end": "92078"
  },
  {
    "text": "are arranged so that its possible to reach\nall components.",
    "start": "92079",
    "end": "95529"
  },
  {
    "text": "There are N links in total, so the throughput\nand cost are both O(n).",
    "start": "95529",
    "end": "102450"
  },
  {
    "text": "The worst case latency is also O(n) since\na message might have to travel across N-1",
    "start": "102450",
    "end": "107959"
  },
  {
    "text": "links to reach the neighbor that's immediately\nupstream.",
    "start": "107959",
    "end": "112009"
  },
  {
    "text": "Ring topologies are useful when message latency\nisn't important or when most messages are",
    "start": "112009",
    "end": "117229"
  },
  {
    "text": "to the component that's immediately downstream,\ni.e., the components form a processing pipeline.",
    "start": "117229",
    "end": "123479"
  },
  {
    "text": "The most general network topology is when\nevery component has a direct link to every",
    "start": "123479",
    "end": "128280"
  },
  {
    "start": "124000",
    "end": "124000"
  },
  {
    "text": "other component.",
    "start": "128280",
    "end": "130000"
  },
  {
    "text": "There are O(N**2) links so the throughput\nand cost are both O(N**2).",
    "start": "130000",
    "end": "135280"
  },
  {
    "text": "And the latency is 1 time unit since each\ndestination is directly accessible.",
    "start": "135280",
    "end": "141970"
  },
  {
    "text": "Although expensive, complete graphs offer\nvery high throughput with very low latencies.",
    "start": "141970",
    "end": "148200"
  },
  {
    "text": "A variant of the complete graph is the crossbar\nswitch where a particular row and column can",
    "start": "148200",
    "end": "154050"
  },
  {
    "text": "be connected to form a link between particular\nA and B components",
    "start": "154050",
    "end": "158490"
  },
  {
    "text": "with the restriction that each row and each\ncolumn can only carry 1 message during each",
    "start": "158490",
    "end": "163260"
  },
  {
    "text": "time unit.",
    "start": "163260",
    "end": "164930"
  },
  {
    "text": "Assume that the first row and first column\nconnect to the same component, and so on,",
    "start": "164930",
    "end": "169329"
  },
  {
    "text": "i.e., that the example crossbar switch is\nbeing used to connect 4 components.",
    "start": "169330",
    "end": "174580"
  },
  {
    "text": "Then there are O(n) messages delivered each\ntime unit, with a latency of 1.",
    "start": "174580",
    "end": "180430"
  },
  {
    "text": "There are N**2 switches in the crossbar, so\nthe cost is O(N**2) even though there are",
    "start": "180430",
    "end": "185659"
  },
  {
    "text": "only O(n) links.",
    "start": "185660",
    "end": "188470"
  },
  {
    "text": "In mesh networks, components are connected\nto some fixed number of neighboring components,",
    "start": "188470",
    "end": "193410"
  },
  {
    "start": "189000",
    "end": "189000"
  },
  {
    "text": "in either 2 or 3 dimensions.",
    "start": "193410",
    "end": "196160"
  },
  {
    "text": "Hence the total number of links is proportional\nto the number of components, so both throughput",
    "start": "196160",
    "end": "201530"
  },
  {
    "text": "and cost are O(n).",
    "start": "201530",
    "end": "204080"
  },
  {
    "text": "The worst-case latencies for mesh networks\nare proportional to length of the sides, so",
    "start": "204080",
    "end": "208670"
  },
  {
    "text": "the latency is O(sqrt n) for 2D meshes and\nO(cube root n) for 3D meshes.",
    "start": "208670",
    "end": "215360"
  },
  {
    "text": "The orderly layout, constant per-node hardware\ncosts, and modest worst-case latency make",
    "start": "215360",
    "end": "221140"
  },
  {
    "text": "2D 4-neighbor meshes a popular choice for\nthe current generation of experimental multi-core",
    "start": "221140",
    "end": "227210"
  },
  {
    "text": "processors.",
    "start": "227210",
    "end": "228930"
  },
  {
    "start": "228000",
    "end": "228000"
  },
  {
    "text": "Hypercube and tree networks offer logarithmic\nlatencies, which for large N may be faster",
    "start": "228930",
    "end": "234540"
  },
  {
    "text": "than mesh networks.",
    "start": "234540",
    "end": "236680"
  },
  {
    "text": "The original CM-1 Connection Machine designed\nin the 80's used a hypercube network to connect",
    "start": "236680",
    "end": "242349"
  },
  {
    "text": "up to 65,536 very simple processors, each\nconnected to 16 neighbors.",
    "start": "242350",
    "end": "250300"
  },
  {
    "text": "Later generations incorporated smaller numbers\nof more sophisticated processors, still connected",
    "start": "250300",
    "end": "255600"
  },
  {
    "text": "by a hypercube network.",
    "start": "255600",
    "end": "258150"
  },
  {
    "text": "In the early 90's the last generation of Connection\nMachines used a tree network, with the clever",
    "start": "258150",
    "end": "263910"
  },
  {
    "text": "innovation that the links towards the root\nof the tree had a higher message capacity.",
    "start": "263910",
    "end": "269509"
  },
  {
    "text": "Here's a summary of the theoretical latencies\nwe calculated for the various topologies.",
    "start": "269509",
    "end": "274970"
  },
  {
    "text": "As a reality check, it's important to realize\nthat the lower bound on the worst-case distance",
    "start": "274970",
    "end": "279360"
  },
  {
    "text": "between components in our 3-dimensional world\nis O(cube root of N).",
    "start": "279360",
    "end": "283460"
  },
  {
    "text": "In the case of a 2D layout, the worst-case\ndistance is O(sqrt N).",
    "start": "283460",
    "end": "289470"
  },
  {
    "text": "Since we know that the time to transmit a\nmessage is proportional to the distance traveled,",
    "start": "289470",
    "end": "294210"
  },
  {
    "text": "we should modify our latency calculations\nto reflect this physical constraint.",
    "start": "294210",
    "end": "300229"
  },
  {
    "text": "Note that the bus and crossbar involve N connections\nto a single link, so here the lower-bound",
    "start": "300229",
    "end": "306009"
  },
  {
    "text": "on the latency needs to reflect the capacitive\nload added by each connection.",
    "start": "306009",
    "end": "311699"
  },
  {
    "text": "The winner?",
    "start": "311699",
    "end": "313130"
  },
  {
    "text": "Mesh networks avoid the need for longer wires\nas the number of connected components grows",
    "start": "313130",
    "end": "318279"
  },
  {
    "text": "and appear to be an attractive alternative\nfor high-capacity communication networks connecting",
    "start": "318279",
    "end": "323569"
  },
  {
    "text": "1000's of processors.",
    "start": "323569",
    "end": "326400"
  },
  {
    "start": "326000",
    "end": "326000"
  },
  {
    "text": "Summarizing our discussion:\npoint-to-point links are in common use today",
    "start": "326400",
    "end": "330259"
  },
  {
    "text": "for system-level interconnect, and as a result\nour systems are faster, more reliable, more",
    "start": "330259",
    "end": "335720"
  },
  {
    "text": "energy-efficient and smaller than ever before.",
    "start": "335720",
    "end": "339189"
  },
  {
    "text": "Multi-signal parallel buses are still used\nfor very-high-bandwidth connections to memories,",
    "start": "339189",
    "end": "344740"
  },
  {
    "text": "with a lot of very careful engineering to\navoid the electrical problems observed in",
    "start": "344740",
    "end": "349918"
  },
  {
    "text": "earlier bus implementations.",
    "start": "349919",
    "end": "353819"
  },
  {
    "text": "Wireless connections are in common use to\nconnect mobile devices to nearby components",
    "start": "353819",
    "end": "358479"
  },
  {
    "text": "and there has been interesting work on how\nto allow mobile devices to discover what peripherals",
    "start": "358479",
    "end": "363490"
  },
  {
    "text": "are nearby and enable them to connect automatically.",
    "start": "363490",
    "end": "367819"
  },
  {
    "text": "The upcoming generation of multi-core chips\nwill have 10's to 100's of processing cores.",
    "start": "367819",
    "end": "372439"
  },
  {
    "text": "There is a lot ongoing research to determine\nwhich communication topology would offer the",
    "start": "372439",
    "end": "377729"
  },
  {
    "text": "best combination of high communication bandwidth\nand low latency.",
    "start": "377729",
    "end": "383169"
  },
  {
    "text": "The next ten years will be an interesting\ntime for on-chip network engineers!",
    "start": "383169",
    "end": "387459"
  }
]