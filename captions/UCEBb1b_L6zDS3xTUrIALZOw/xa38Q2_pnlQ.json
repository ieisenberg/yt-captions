[
  {
    "text": "The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13350"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu.",
    "start": "13350",
    "end": "18400"
  },
  {
    "start": "18400",
    "end": "26689"
  },
  {
    "text": "HARI BALAKRISHNAN: So this is\nactually almost near the end. So this is actually the last\nlecture on transport protocols.",
    "start": "26690",
    "end": "33740"
  },
  {
    "text": "And then on\nWednesday, my plan is to talk about how\nmany of the things",
    "start": "33740",
    "end": "39020"
  },
  {
    "text": "we have studied in this\nclass apply to the internet. It will be a history lesson\nabout communication networks.",
    "start": "39020",
    "end": "45840"
  },
  {
    "text": "And I'll talk in specific terms\nabout two interesting problems. One of them is a\nproblem we'll start",
    "start": "45840",
    "end": "51980"
  },
  {
    "text": "on today, which is how you\npick these window sizes. And I'll talk about\nhow TCP does this. And it's one of the\npretty amazing result",
    "start": "51980",
    "end": "60710"
  },
  {
    "text": "that was only invented in\nthe mid-1980s or late 1980s. And the second thing\nI want to talk about, when I talk about this history\nof the internet from, say, 1960",
    "start": "60710",
    "end": "68840"
  },
  {
    "text": "to today, I'll talk\nabout how people can hijack other\npeople's routes and be",
    "start": "68840",
    "end": "75649"
  },
  {
    "text": "able to attract traffic\nthat doesn't actually belong to them. So apparently, now\nthere are people",
    "start": "75650",
    "end": "81259"
  },
  {
    "text": "who are doing it illegally. But apparently, now\nsome governments are also doing\nthis sort of thing.",
    "start": "81260",
    "end": "86800"
  },
  {
    "text": "So it's an interesting\nthing to understand, how it is that some of the\nrouting protocols we studied are not secure.",
    "start": "86800",
    "end": "92910"
  },
  {
    "text": "So I'll do that on Wednesday. And then we'll\nwrap up next week. So today, the plan\nis to continue",
    "start": "92910",
    "end": "99770"
  },
  {
    "text": "to talk about\ntransport protocols, in particular, about\nsliding windows. So just to refresh\neveryone's memory,",
    "start": "99770",
    "end": "105290"
  },
  {
    "text": "the problem is that you have\na best effort network, where packets could be lost,\npackets could be reordered,",
    "start": "105290",
    "end": "110900"
  },
  {
    "text": "packets could be duplicated,\nand delays in the network are variable. And what we would like to\nprovide to applications, like,",
    "start": "110900",
    "end": "118190"
  },
  {
    "text": "for example, your web browser\nor your web client or server,",
    "start": "118190",
    "end": "124910"
  },
  {
    "text": "is an abstraction where the\napplication just writes data into some layer, and the\napplication on the other side",
    "start": "124910",
    "end": "130909"
  },
  {
    "text": "reads data from a layer,\nand this transport layer deals with providing in\norder reliable delivery.",
    "start": "130910",
    "end": "138050"
  },
  {
    "text": "So we looked at the first\nversion of that protocol, which is stop and wait. And it had a few\nnice ideas in it.",
    "start": "138050",
    "end": "143780"
  },
  {
    "text": "The first-- all simple ideas-- the first is to use\nsequence number,",
    "start": "143780",
    "end": "149000"
  },
  {
    "text": "and then to have\nacknowledgments, and then to retransmit\nafter a timeout.",
    "start": "149000",
    "end": "156694"
  },
  {
    "text": " And I didn't actually\ntalk about how",
    "start": "156695",
    "end": "162409"
  },
  {
    "text": "to do adaptive timers and the\nlow pass exponentially weighted moving average filter. But we started that recitation.",
    "start": "162410",
    "end": "168739"
  },
  {
    "text": "And if I have time, I'll\ncome back to that today. But my assumption is that you've\nalready seen how to do that.",
    "start": "168740",
    "end": "176310"
  },
  {
    "text": "But then we concluded that the\nthroughput of the stop and wait protocol is not very high.",
    "start": "176310",
    "end": "182790"
  },
  {
    "text": "It's sometimes a good idea. For example, to get reliable\ndelivery between this access point here and your\ncomputer right now,",
    "start": "182790",
    "end": "190320"
  },
  {
    "text": "a stop and wait protocol\nis perfectly reasonable. We'll understand why later on.",
    "start": "190320",
    "end": "195350"
  },
  {
    "text": "But the short answer why is\nbecause the round-trip time between this access point here\nand your laptop is quite small.",
    "start": "195350",
    "end": "205310"
  },
  {
    "text": "And because it's a really\nsmall round-trip time, you're able to get one\npacket per round-trip time--",
    "start": "205310",
    "end": "210590"
  },
  {
    "text": "or in [INAUDIBLE]\npacket losses, it's less than one packet\nper round-trip time, but roughly about one\npacket per round-trip time.",
    "start": "210590",
    "end": "216790"
  },
  {
    "text": "But the round-trip time is\non the order of microseconds. One packet per round-trip\ntime can give you a throughput",
    "start": "216790",
    "end": "225860"
  },
  {
    "text": "that's quite large. And therefore, if the link\nspeed is 10 megabits per second, and you're able to send\n1,000-byte packet in, say,",
    "start": "225860",
    "end": "234349"
  },
  {
    "text": "20 microseconds, if\nyou take the ratio, that's probably going to be\nbigger than the link speed. And therefore,\nyou're going to get",
    "start": "234350",
    "end": "240558"
  },
  {
    "text": "of the order of the link speed. And therefore, you're not\ngoing to underutilize the link.",
    "start": "240558",
    "end": "246230"
  },
  {
    "text": "But now, if the round-trip\ntime were 100 milliseconds, and you were able to send\njust one packet every 100",
    "start": "246230",
    "end": "251360"
  },
  {
    "text": "milliseconds, it would be slow. And to solve that problem,\nwe looked at this idea of a sliding window.",
    "start": "251360",
    "end": "258880"
  },
  {
    "text": "This is just pipelining. It just says, rather than\nhave one packet unacknowledged at any point in\ntime, we're going",
    "start": "258880",
    "end": "265000"
  },
  {
    "text": "to have a value w that the\nsender decides, decides",
    "start": "265000",
    "end": "270700"
  },
  {
    "text": "upon this value. And the semantics\nof a window are that we're going to have\nw unacknowledged packets",
    "start": "270700",
    "end": "283379"
  },
  {
    "text": "in the system between the\nsender and the receiver. Now, technically, it's\nat most w packets. Because from time to time,\nyou might have transients,",
    "start": "283380",
    "end": "290699"
  },
  {
    "text": "where you have less than\nw packets, because you're about to send the next packet. Or if you get toward\nthe end of the file,",
    "start": "290700",
    "end": "297870"
  },
  {
    "text": "and you run out of\ndata to send, you're clearly going to have\nfewer than w packets. So the technical definition of\na window, a fixed-size window,",
    "start": "297870",
    "end": "304740"
  },
  {
    "text": "says that if the window\nis w, then the semantics are that we will have no more\nthan w unacknowledged packets",
    "start": "304740",
    "end": "312840"
  },
  {
    "text": "in the system. Now, that's not the\nonly possible definition of the window, but that's our\ncurrent operating definition",
    "start": "312840",
    "end": "318767"
  },
  {
    "text": "of the window. So then the rules at the\ncenter are very simple.",
    "start": "318767",
    "end": "324080"
  },
  {
    "text": "When you get an acknowledgment\nfrom the receiver, as long as it's\nan acknowledgment for a packet that you have\nsent, and that packet has not",
    "start": "324080",
    "end": "332060"
  },
  {
    "text": "previously been\nacknowledged, then you now know that packet has\nbeen acknowledged.",
    "start": "332060",
    "end": "337610"
  },
  {
    "text": "So you remove it from your\nlist of knowledge packets, and you send a new packet. The packet you send,\nthe new packet you send,",
    "start": "337610",
    "end": "343520"
  },
  {
    "text": "is the smallest sequence number\nthat you haven't sent so far. OK? It's the very simple rule.",
    "start": "343520",
    "end": "350060"
  },
  {
    "text": "And separately,\nthere's a calculation of the timeout, an exponential\nmoving average filter that",
    "start": "350060",
    "end": "356705"
  },
  {
    "text": "calculates the average\nvalue of that timeout, the smooth estimate of the\ntimeout, a similar calculation",
    "start": "356705",
    "end": "362870"
  },
  {
    "text": "that finds the\ndeviation from the mean. And you pick a return\nspecial timeout that is some number of\ndeviations away from the mean,",
    "start": "362870",
    "end": "371120"
  },
  {
    "text": "for example, four times\nthe smoothed estimate. If that timer fires,\nand you haven't",
    "start": "371120",
    "end": "376310"
  },
  {
    "text": "received an acknowledgment,\nyou retransmit the packet. It's a very simple idea. So I'm going to show\nnow what happens",
    "start": "376310",
    "end": "382280"
  },
  {
    "text": "in some pictures with\nthe sliding window, when you have packet loss.",
    "start": "382280",
    "end": "387450"
  },
  {
    "text": "So it's the same picture\nas the last time, except now we have a packet--",
    "start": "387450",
    "end": "393700"
  },
  {
    "text": "packet 2 is lost. The sender doesn't know\nthat it's lost yet. So packet 1 goes here.",
    "start": "393700",
    "end": "399460"
  },
  {
    "text": "Packet 2 is lost. This side was supposed\nto be packet 3. The sent-- packet 4 is\nsent, and packet 5 is sent.",
    "start": "399460",
    "end": "406389"
  },
  {
    "text": "And the window size\nin this example is 5. So now, when the first packet\ngets its acknowledgment,",
    "start": "406390",
    "end": "413410"
  },
  {
    "text": "the window slides\nto the right by 1. And at this point,\nwe send packet 6.",
    "start": "413410",
    "end": "419110"
  },
  {
    "text": "And the window is now packet\n2 to 6, the sent packet 6. And now, in the meantime,\nwhat's going to happen",
    "start": "419110",
    "end": "426010"
  },
  {
    "text": "is, when packet--\npacket 2 doesn't reach, but packet 3 reaches. when packet 3 reaches, 3\ngets an acknowledgment.",
    "start": "426010",
    "end": "432130"
  },
  {
    "text": "The receiver says\nthat it's received 3. When it receives 3, what's the\nnext packet that's transmitted?",
    "start": "432130",
    "end": "440150"
  },
  {
    "text": "The packet that's\ntransmitted is 7. Now, let me ask you\na question here.",
    "start": "440150",
    "end": "447100"
  },
  {
    "text": "The sender got packet\nA1 and packet A3-- sorry, acknowledgment A1\nand acknowledgment A3.",
    "start": "447100",
    "end": "454129"
  },
  {
    "text": "Now, it the sender\nwere calculating the expected next\nacknowledgment, it knows that after\nA1, it should get A2,",
    "start": "454130",
    "end": "461870"
  },
  {
    "text": "and it now got A3. So why doesn't it just\nre-send packet 3 right now?",
    "start": "461870",
    "end": "468350"
  },
  {
    "text": " Yeah? AUDIENCE: [INAUDIBLE]",
    "start": "468350",
    "end": "473843"
  },
  {
    "text": "HARI BALAKRISHNAN: It\ncould have been delayed. Now, yes, it could\nhave been delayed.",
    "start": "473843",
    "end": "478910"
  },
  {
    "text": "But if it were delayed,\nwouldn't 3, packet 3, have also been delayed?",
    "start": "478910",
    "end": "484858"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: Why not? AUDIENCE: [INAUDIBLE]",
    "start": "484858",
    "end": "490188"
  },
  {
    "text": "HARI BALAKRISHNAN: All\npackets are delayed. So the question is,\nwhat is it about-- the delay is one\npart of the answer,",
    "start": "490188",
    "end": "495400"
  },
  {
    "text": "but what is it specifically\nabout that delay that has caused this to-- I mean, if a packet\ngets delayed, and packets are\nsitting in a queue,",
    "start": "495400",
    "end": "501550"
  },
  {
    "text": "if the first packet in\nthe queue was delayed, then the remaining\npackets are also going to get delayed,\nbecause they're sitting behind that\npacket in the queue.",
    "start": "501550",
    "end": "509110"
  },
  {
    "text": "Yes, sir? AUDIENCE: Does it depend\non the size of the packet? HARI BALAKRISHNAN:\nWell, so far, let's assume that you have a network\nwhere packets are delayed,",
    "start": "509110",
    "end": "516719"
  },
  {
    "text": "and delays are variable. And you have a switch, right? And the switch\nhas a queue in it.",
    "start": "516720",
    "end": "523860"
  },
  {
    "text": "And let's say that you\nhave-- in this example, you have packet 1 and 2 and 3. But in fact, packet\n2 was lost, and you",
    "start": "523860",
    "end": "529740"
  },
  {
    "text": "don't know that, this packet 3. That's one case. But in the other case, if packet\n2 were not actually lost--",
    "start": "529740",
    "end": "536910"
  },
  {
    "text": "if packet 2 were lost, and you\ngot an acknowledgment for 1 and an acknowledgment for 3,\nif packet 2 were legitimately",
    "start": "536910",
    "end": "544310"
  },
  {
    "text": "lost, then it's certainly\ncorrect behavior for the sender to send,\nwhen it receives A3,",
    "start": "544310",
    "end": "549450"
  },
  {
    "text": "to retransmit packet 2. So clearly, you're\ngoing after a case here, where 2 exists,\nbut wasn't lost.",
    "start": "549450",
    "end": "557100"
  },
  {
    "text": "In other words, if the sender\nwere to retransmit packet 3--",
    "start": "557100",
    "end": "564154"
  },
  {
    "text": "oh, sorry, packet 2\nwhen it receives A3,",
    "start": "564154",
    "end": "569589"
  },
  {
    "text": "she said that that's wrong,\nbecause it could have gotten delayed. But what kind of\ndelay would delay",
    "start": "569590",
    "end": "575139"
  },
  {
    "text": "packet 2 but not packet 3? Or what kind of\ndelay equivalently would delay A2 but not A3?",
    "start": "575140",
    "end": "583820"
  },
  {
    "text": "If it's sitting\nbehind the same queue, and the queue is serviced\nin that order, I mean, if this packet was delayed, this\npackage would also be delayed.",
    "start": "583820",
    "end": "592200"
  },
  {
    "text": "And this packet's behind\nthis packet in the queue. So what else could it be? Yeah? AUDIENCE: [INAUDIBLE]",
    "start": "592200",
    "end": "601110"
  },
  {
    "text": "HARI BALAKRISHNAN: Yeah. So the word I'm looking\nfor is that packets could get reordered in the network.",
    "start": "601110",
    "end": "606160"
  },
  {
    "text": "In fact, the\nreordering could happen even if there were\nno variable delays, like, no queuing\ndelays in the network.",
    "start": "606160",
    "end": "611890"
  },
  {
    "text": "I mean, you could\njust have a switch that you have a switch here. It could be that packet\n2 gets sent that way,",
    "start": "611890",
    "end": "618130"
  },
  {
    "text": "and packet 3 gets sent this way. Here's a very concrete\nexample of how this would",
    "start": "618130",
    "end": "623440"
  },
  {
    "text": "happen, from your previous lab. It could be that the network\nhad a certain set of routes, and packets were\ngoing along this path.",
    "start": "623440",
    "end": "631810"
  },
  {
    "text": "And then maybe there\nwas a failure before, and a new link showed up. Or the failure healed.",
    "start": "631810",
    "end": "638440"
  },
  {
    "text": "And the routing protocol\nconverged to pick this path, going forward.",
    "start": "638440",
    "end": "643450"
  },
  {
    "text": "And this new packet 3,\nthat showed up after 2, gets sent along this path. And it could easily be\nthe case that this path",
    "start": "643450",
    "end": "648997"
  },
  {
    "text": "has a lot shorter delay to the\ndestination than that path. And therefore, what would happen\nis that the receiver, packet 3",
    "start": "648997",
    "end": "656590"
  },
  {
    "text": "would arrive before packet 2. So in other words, if I had a\nnetwork where no packets ever",
    "start": "656590",
    "end": "662830"
  },
  {
    "text": "got reordered, no\nacknowledgments got-- no data packets\ngot reordered, and no ACKs got\nreordered, then, in fact,",
    "start": "662830",
    "end": "668653"
  },
  {
    "text": "it was perfectly good\nbehavior for the sender, at this point, when\nit observes A3, to go ahead and resend packet 2.",
    "start": "668653",
    "end": "675670"
  },
  {
    "text": "Because I'm guaranteeing\nto you that there's no reordering in the network. But in general, the networks and\npacket switch networks, I mean,",
    "start": "675670",
    "end": "681880"
  },
  {
    "text": "they get a lot of\ntheir robustness to failure and\nresilience to failure because they send\npackets any which way.",
    "start": "681880",
    "end": "689020"
  },
  {
    "text": "Their only job is to get\npackets to the destination with as high a\nlikelihood as they can,",
    "start": "689020",
    "end": "695708"
  },
  {
    "text": "which means packets are\nallowed to get reordered. And therefore, it's not\ncorrect for packet 2",
    "start": "695708",
    "end": "700930"
  },
  {
    "text": "to get retransmitted\nwhen you get A3. OK? So let's keep going.",
    "start": "700930",
    "end": "706510"
  },
  {
    "text": "So what is the\nnext packet that's going to be sent, when you\nget A3, in this picture?",
    "start": "706510",
    "end": "711820"
  },
  {
    "text": "It's 7. Because the sender's\nrule is very simple. Have I seen the ACK before? No.",
    "start": "711820",
    "end": "716860"
  },
  {
    "text": "Is this ACK corresponding to a\npacket that I've sent before? Remember, we need that\ncheck, because it's possible that a flaky--",
    "start": "716860",
    "end": "722740"
  },
  {
    "text": "there's some bug on\nthe receiver side. So is it is an ACK\nthat corresponds to a packet I've sent before?",
    "start": "722740",
    "end": "728330"
  },
  {
    "text": "Yes. Send the next\nin-sequence packet. So it sends packet 7. At this point, we're going to\nlose the beautiful animation.",
    "start": "728330",
    "end": "734650"
  },
  {
    "text": "Because each of\nthese things takes an endless amount of time. So I just produced\nthe full picture.",
    "start": "734650",
    "end": "741610"
  },
  {
    "text": "I just wish I had the\npatience to sit and do the full animation. But I ran out of patience.",
    "start": "741610",
    "end": "748690"
  },
  {
    "text": "So anyway, you sent\npacket 7 at this point. And then, when you receive\nA4, you send packet 8.",
    "start": "748690",
    "end": "754449"
  },
  {
    "text": "When you receive A5,\nyou send packet 9; A6, you send packet 10. Now, let me ask this question.",
    "start": "754450",
    "end": "760810"
  },
  {
    "text": "At this point in time, when you\nreceive this acknowledgment, A5, and you sent packet\n9, what is the window?",
    "start": "760810",
    "end": "768297"
  },
  {
    "text": "That is, what is the set\nof packets in the window? ",
    "start": "768297",
    "end": "775330"
  },
  {
    "text": "The window is 5,\nthe window size, but the window size corresponds\nto some list of packets that are in the window.",
    "start": "775330",
    "end": "781360"
  },
  {
    "text": "What is that set of packets\nor that list of packets? Yeah?",
    "start": "781360",
    "end": "786500"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN:\n2, 7, 8, 9, 10. This is important. This is 2, 7, 8, 9, 10. These packets are\nnot in sequence.",
    "start": "786500",
    "end": "792830"
  },
  {
    "text": "It's very tempting to say,\nthe windows [INAUDIBLE] five packets. So if I've sent out 10, the\nwindow must be 10, 9, 8, 7, 6.",
    "start": "792830",
    "end": "800510"
  },
  {
    "text": "Well, that's not true. The window just says,\nhere's the number of unacknowledged packets.",
    "start": "800510",
    "end": "806000"
  },
  {
    "text": "The number of unacknowledged\npackets is 5, in this case.",
    "start": "806000",
    "end": "811160"
  },
  {
    "text": "All right, let's keep going. When 10 arrives, when\n10 is sent out here,",
    "start": "811160",
    "end": "816530"
  },
  {
    "text": "and then at some\nlater point in time, we get an acknowledgment\nfor 7, we send out 11.",
    "start": "816530",
    "end": "822650"
  },
  {
    "text": "When we get 8, we send out 12. At this point in time, the\nwindow is 12, 11, 10 9, and 2.",
    "start": "822650",
    "end": "828980"
  },
  {
    "text": "At some point, the\ncenter times out. And the timeout is picked\nto be conservative.",
    "start": "828980",
    "end": "835130"
  },
  {
    "text": "That's why we take\nthe smooth average. We take the deviation. Because we don't actually\nwant to transmit a packet",
    "start": "835130",
    "end": "840620"
  },
  {
    "text": "that hasn't genuinely been lost. The reason for\nthat is oftentimes,",
    "start": "840620",
    "end": "847910"
  },
  {
    "text": "when you start seeing\nweird behavior like this, like a presumed\nmissing packet, you're not actually sure\nif it's missing",
    "start": "847910",
    "end": "854090"
  },
  {
    "text": "or if it's just delayed, as was\npointed out before, because it took a different route.",
    "start": "854090",
    "end": "860060"
  },
  {
    "text": "Something strange is\ngoing on in the network. And causing\nretransmission to happen",
    "start": "860060",
    "end": "866870"
  },
  {
    "text": "of a packet that hasn't\nactually been lost makes things worse, because it\nadds more load onto the system",
    "start": "866870",
    "end": "873158"
  },
  {
    "text": "right about the time when\nthere's something fishy going on in the network. So the last thing\nyou want to do, when something is under stress,\nis to add more stress to it.",
    "start": "873158",
    "end": "880160"
  },
  {
    "text": "That's why the timeouts\nare conservative. Any time the sender, in\nany protocol like this,",
    "start": "880160",
    "end": "886106"
  },
  {
    "text": "retransmits a packet that\nis not actually lost, that's considered a\nspurious retransmission.",
    "start": "886106",
    "end": "892940"
  },
  {
    "text": "It's considered a retransmission\nthat is just not a good thing. Now, actually, our protocol,\nas we've described,",
    "start": "892940",
    "end": "899339"
  },
  {
    "text": "it has some wonderful\nnice properties. And I'll show later on--\nmaybe you can read about this in the book--",
    "start": "899340",
    "end": "904940"
  },
  {
    "text": "that it actually is the\nbest possible protocol you can come up with in\nan asymptomatic sense. In other words,\nno other protocol,",
    "start": "904940",
    "end": "911584"
  },
  {
    "text": "if you ran it for a long\ntime, would actually get higher throughput in\na network that had losses. So it has some nice properties.",
    "start": "911585",
    "end": "917420"
  },
  {
    "text": "But it has this\none bad property, which is that, in\nfact, this protocol, in the way these\nacknowledgments are structured,",
    "start": "917420",
    "end": "925069"
  },
  {
    "text": "ends up with a lot of\nspurious retransmissions. Or they could end up with a lot\nof spurious retransmissions.",
    "start": "925070",
    "end": "930860"
  },
  {
    "text": "Can you kind of see\nwhy this protocol could be that we follow this\ndiscipline extremely nicely, that timeouts are conservative.",
    "start": "930860",
    "end": "938540"
  },
  {
    "text": "So the only timeout,\nwhen we are really, really sure when a packet-- we don't get an acknowledgment,\nis when we time out,",
    "start": "938540",
    "end": "945350"
  },
  {
    "text": "and we wait a long time. But the protocol could still\nhave spurious retransmissions. Can anyone see why there's\na very peculiar behavior",
    "start": "945350",
    "end": "952040"
  },
  {
    "text": "of this property of\nthis protocol that comes from the way in which\nthese acknowledgments work? ",
    "start": "952040",
    "end": "961304"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: Yeah. So this protocol has\na peculiar problem, which is that all packets and\nacknowledgments are essentially",
    "start": "961304",
    "end": "969129"
  },
  {
    "text": "the same. They contain the\nsame information. If you lose a packet or\nyou lose an acknowledgment",
    "start": "969130",
    "end": "975130"
  },
  {
    "text": "for that packet, the sender\ncan't tell the difference. ",
    "start": "975130",
    "end": "981529"
  },
  {
    "text": "Now, this is, therefore,\nnot necessarily the best protocol, in the sense\nthat, if you have a path--",
    "start": "981530",
    "end": "987500"
  },
  {
    "text": "here is an extreme case. So I have a path where\nthere's no packet losses going from me to you,\nand I'm sending data to you.",
    "start": "987500",
    "end": "992839"
  },
  {
    "text": "And coming back, the\npacket loss rate is 25%. This protocol has this\nunfortunate property",
    "start": "992840",
    "end": "999259"
  },
  {
    "text": "that I believe that 25% of my\ntransmissions are lost to you. In fact, you've got every\nsingle packet I've sent.",
    "start": "999260",
    "end": "1006400"
  },
  {
    "text": "It's just that I don't\nsee the acknowledgments for those specific packets. And therefore, I'm going to\nretransmit all those packets",
    "start": "1006400",
    "end": "1012280"
  },
  {
    "text": "to you, leading to\nspurious retransmissions. So we don't have to worry\nabout it for the lab",
    "start": "1012280",
    "end": "1018610"
  },
  {
    "text": "or for the class, but\nas a design problem, can you invent a protocol\nthat fix this problem?",
    "start": "1018610",
    "end": "1024300"
  },
  {
    "text": " Can you modify this\nprotocol, or come up",
    "start": "1024300",
    "end": "1030199"
  },
  {
    "text": "with an idea of your own,\nwhich has the property that-- pick the design point that is\nthe sender-to-receiver path",
    "start": "1030200",
    "end": "1037339"
  },
  {
    "text": "is generally loss-free. But let's say that the\nreceiver-to-send path has a high loss.",
    "start": "1037339",
    "end": "1042722"
  },
  {
    "text": "And by the way, this\nis not hypothetical. This is what happens in\nwireless networks a lot. Because that base station\nsitting in some cell tower that",
    "start": "1042722",
    "end": "1048890"
  },
  {
    "text": "has a huge amount of power-- it's powered in-- it consumes\nprobably kilowatts these days. So they can blast at whatever is\nthe maximum allowed by the FCC.",
    "start": "1048890",
    "end": "1056502"
  },
  {
    "text": "And your poor,\nlittle, dinky phone is sending acknowledgments. And the thing is running\nout of battery all the time. So they're carefully\ntrying to figure out,",
    "start": "1056503",
    "end": "1062640"
  },
  {
    "text": "what's the minimum power\nat which I can transmit? So in fact, these asymmetric\nconditions are not unrealistic.",
    "start": "1062640",
    "end": "1067970"
  },
  {
    "text": "They're quite realistic. So if I ran this protocol\non a network like that, it would be probably\na bad thing.",
    "start": "1067970",
    "end": "1073800"
  },
  {
    "text": "So what would you\ndo to the protocol? Yes? What? AUDIENCE: [INAUDIBLE]",
    "start": "1073800",
    "end": "1079460"
  },
  {
    "text": "HARI BALAKRISHNAN: Send multiple\nacknowledgments-- yeah, you could send multiple\nacknowledgments to every time. So you'd be doubling.",
    "start": "1079460",
    "end": "1084680"
  },
  {
    "text": "Yeah, that's a little bit-- but it's the right kind of idea. You want some sort\nof redundancy.",
    "start": "1084680",
    "end": "1089760"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: Yeah.",
    "start": "1089760",
    "end": "1095180"
  },
  {
    "text": "That's actually not a bad idea. In a sense, you're sending\nmultiple acknowledgments, but you're not just\nblindly sending",
    "start": "1095180",
    "end": "1101299"
  },
  {
    "text": "multiple acknowledgment. But any time you send\nan acknowledgment, you could also say-- sending the list of all\npackets you've received so far",
    "start": "1101300",
    "end": "1108470"
  },
  {
    "text": "is a huge amount. Because if I send you a\ngigabyte movie, or something, I mean, by the\nend of that movie, you're just sending me a\nlot of acknowledgments.",
    "start": "1108470",
    "end": "1114820"
  },
  {
    "text": "So you don't quite\nwant to do that. But remember, the\nreceiver has some idea. If it knew the\nwindow size, it would have some idea of what the\nnumber of things at the center.",
    "start": "1114820",
    "end": "1124400"
  },
  {
    "text": "You could do something even\nsimpler than all of that. One thing you could do is\nthat the receiver, when",
    "start": "1124400",
    "end": "1129471"
  },
  {
    "text": "it acknowledged the\npacket, wouldn't just acknowledge packet 7,\nwhen it got packet 7, but it might be able to send\na cumulative acknowledgment.",
    "start": "1129472",
    "end": "1136580"
  },
  {
    "text": "In other words, it\ncould say, that when I send an acknowledgment,\nI guarantee",
    "start": "1136580",
    "end": "1141679"
  },
  {
    "text": "to you that everything I've\nreceived up to this point-- I'm sorry. I guarantee to you that all\npackets up to that point",
    "start": "1141680",
    "end": "1148160"
  },
  {
    "text": "I have received. So if I tell you that\nmy acknowledgment is 17, I guarantee you that\nthere's nothing before 17",
    "start": "1148160",
    "end": "1154789"
  },
  {
    "text": "that I've not received. And then I could, in addition,\nin the acknowledgment, tell you a little bit about\nsome of the later packets I've",
    "start": "1154790",
    "end": "1160790"
  },
  {
    "text": "received or some of the later\npackets that might be missing. So you can make this\nprotocol have a little bit more redundancy.",
    "start": "1160790",
    "end": "1166160"
  },
  {
    "text": "And if you do that, and\nyou apply almost everything else I've taught,\nyou get TCP, which is",
    "start": "1166160",
    "end": "1172070"
  },
  {
    "text": "an extremely popular protocol. But that's about the only\ndifference of significance between our protocol and TCP.",
    "start": "1172070",
    "end": "1179179"
  },
  {
    "text": "Now, interestingly,\nour protocol, when you actually\nhave loss rates",
    "start": "1179180",
    "end": "1185198"
  },
  {
    "text": "in the forward and\nreverse directions that are roughly the\nsame, our protocol actually does a little better\nthan what TCP happens to do.",
    "start": "1185198",
    "end": "1191930"
  },
  {
    "text": "But TCP is good at dealing\nwith the reverse path having a higher degree of packet loss.",
    "start": "1191930",
    "end": "1198780"
  },
  {
    "text": "OK. So the other question I want to\nask people here, at this point,",
    "start": "1198780",
    "end": "1206650"
  },
  {
    "text": "is let's say that you have\na receiver that's running on an extremely simple device. So you don't want to\nhave a lot of storage.",
    "start": "1206650",
    "end": "1215270"
  },
  {
    "text": "Now, why would you need storage,\nbefore I get to that question? Let's take this picture here.",
    "start": "1215270",
    "end": "1220390"
  },
  {
    "text": "So packet 2 hasn't\nyet been received. But in the meantime,\nthe receiver has gotten packets 3 and 4\nand 5, all the way up to 12.",
    "start": "1220390",
    "end": "1229648"
  },
  {
    "text": "So what does the\nreceiver have to do? Well, the receiver, remember,\nbefore it delivers it to the application, it has\nto hold on to those packets.",
    "start": "1229648",
    "end": "1237040"
  },
  {
    "text": "It can't deliver packet 3 to\nthe application and packet 4 to the application. Because the guarantee that\nthe receiver is giving",
    "start": "1237040",
    "end": "1243837"
  },
  {
    "text": "is that all packets\nwill be delivered in exactly the same order\nin which they were sent. So the receiver has got\nto hold onto those packets",
    "start": "1243838",
    "end": "1250660"
  },
  {
    "text": "until packet 2 shows up.  Does that make sense?",
    "start": "1250660",
    "end": "1255910"
  },
  {
    "text": "OK. How big can that\nreceiver's buffer become? How big do you need to make it? Like, if you were implementing\nthis on a computer,",
    "start": "1255910",
    "end": "1263120"
  },
  {
    "text": "if you want to\nallocate memory for it, how big do you need to make it? ",
    "start": "1263120",
    "end": "1271180"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: What? AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: Big enough\nto handle the timeout-- good. How big can the timeout be?",
    "start": "1271180",
    "end": "1276700"
  },
  {
    "start": "1276700",
    "end": "1284450"
  },
  {
    "text": "Well, the timeout can\nbe some finite number. But think about what happens. Think about the timeout happens. You retransmit packet 2.",
    "start": "1284450",
    "end": "1291470"
  },
  {
    "text": "And packet 2 is lost again. Now, in the meantime, the\nprotocol is going to continue.",
    "start": "1291470",
    "end": "1296920"
  },
  {
    "text": "Because all these\nother packets are going to keep getting\nacknowledgments, and they're going to\nkeep causing the sender to keep sending packets.",
    "start": "1296920",
    "end": "1302880"
  },
  {
    "text": "So if packet 2's\nretransmission were lost, we're going to be\nat this point here. We're still going to be\nsending, at this point",
    "start": "1302880",
    "end": "1309670"
  },
  {
    "text": "in time, packet\n13 and whatever-- 13 and 14 and 15 and\n16, and so forth, right?",
    "start": "1309670",
    "end": "1316510"
  },
  {
    "text": "Now, packet 2 could\njust keep getting lost. I mean, it may happen\nwith low probability, but there's a probability\nthat it'll happen.",
    "start": "1316510",
    "end": "1324260"
  },
  {
    "text": "So how big does the\nreceiver's buffer have to be in this\nimplementation, in the worst case? ",
    "start": "1324260",
    "end": "1335177"
  },
  {
    "text": "Well, let's say that you don't\nknow how big the file is. It's a continuous stream\nof packets that are sent.",
    "start": "1335177",
    "end": "1342220"
  },
  {
    "text": "I mean, is that a bound? In the worst case,\nis that a real bound on the size of the buffer?",
    "start": "1342220",
    "end": "1347500"
  },
  {
    "text": "Or can it grow to be as\nbig as the entire stream that you're sending? It can grow to be\nreally, really big.",
    "start": "1347500",
    "end": "1354580"
  },
  {
    "text": "Now, this is a\npotential problem. Because it can keep growing\nand growing and growing.",
    "start": "1354580",
    "end": "1359860"
  },
  {
    "text": "At some point, you're\ngoing to run out. You might run out of space. When you start to\nrun out of space, it's tempting to just\nthrow things out.",
    "start": "1359860",
    "end": "1367525"
  },
  {
    "text": "So let's say that the\nreceiver implements it. Somebody implements this\nprotocol and just says, I'm going to just\nhave 100 packets.",
    "start": "1367525",
    "end": "1373450"
  },
  {
    "text": "The sender is running\nwith a window size of 5. I'm just going to have a buffer\nof 100 packets, which says,",
    "start": "1373450",
    "end": "1381010"
  },
  {
    "text": "the maximum number of packets\nI'm going to hold in my buffer, before I start discarding\nlater packets, is 100.",
    "start": "1381010",
    "end": "1391700"
  },
  {
    "text": "Does this protocol work? Is it correct if I do that? Yes? AUDIENCE: [INAUDIBLE]\nlike a receiver",
    "start": "1391700",
    "end": "1397712"
  },
  {
    "text": "just never acknowledges\n[INAUDIBLE] receives it [INAUDIBLE].",
    "start": "1397712",
    "end": "1402765"
  },
  {
    "text": "HARI BALAKRISHNAN: OK, but\nwhat if I acknowledge a packet as soon as I get it? OK, if you acknowledge a\npacket as soon as you get it,",
    "start": "1402765",
    "end": "1409220"
  },
  {
    "text": "the receiver's discipline, the\nguarantee it should provide, is if it acknowledges\na packet, then",
    "start": "1409220",
    "end": "1414440"
  },
  {
    "text": "it's told the sender that\nit's got the packet, which means the sender will\nnever retransmit it, which means it shouldn't\nthrow the packet away.",
    "start": "1414440",
    "end": "1421910"
  },
  {
    "text": "So as long as the receiver\nonly throws out packets that it doesn't\nacknowledge, you're OK.",
    "start": "1421910",
    "end": "1429405"
  },
  {
    "text": "Does that make sense? So the discipline is it's just\nlike writing a legal contract, right? That's what protocols are.",
    "start": "1429405",
    "end": "1434799"
  },
  {
    "text": "It's just a bunch\nof legal contracts, and you try to make them\nas simple as possible. And you try hard, and you\nend up with 200 pages.",
    "start": "1434800",
    "end": "1440320"
  },
  {
    "text": "But that's what lawyers also\nsay-- yeah, it's really simple. But then you've got\nall these clauses. But the reality\nis that you've got",
    "start": "1440320",
    "end": "1445930"
  },
  {
    "text": "to deal with all these\n[INAUDIBLE] cases. So protocols are nothing\nmore than contracts that both sides agree upon. And the contract here\nfrom the receiver",
    "start": "1445930",
    "end": "1452500"
  },
  {
    "text": "is actually pretty simple. It says, if I send\nyou an acknowledgment, it means that I'm not\nthrowing the packet away. ",
    "start": "1452500",
    "end": "1460120"
  },
  {
    "text": "What happens if I treat this\nprotocol to do a little bit differently at the receiver? When I get a packet,\nif it's in order,",
    "start": "1460120",
    "end": "1467590"
  },
  {
    "text": "I deliver it to the application. And after I deliver\nit to the application, I send an acknowledgment.",
    "start": "1467590",
    "end": "1474930"
  },
  {
    "text": "OK? So in other words, I only send\nan acknowledgment to the sender after it's delivered\nup to the application.",
    "start": "1474930",
    "end": "1481370"
  },
  {
    "text": "Otherwise, I don't. What happens to this\nprotocol if I do that? Does it perform the\nsame as what I describe?",
    "start": "1481370",
    "end": "1488200"
  },
  {
    "text": "And remember, there's\na subtle difference. The only difference\nis, in this protocol as I've described it, the\nreceiver gets a packet,",
    "start": "1488200",
    "end": "1493730"
  },
  {
    "text": "sends an acknowledgment,\nand then holds on to it in a buffer, if the packet's\nnot the next packet in order.",
    "start": "1493730",
    "end": "1501640"
  },
  {
    "text": "The modification I'm proposing\nis the receiver gets a packet, and only when it delivers\nit up to the application,",
    "start": "1501640",
    "end": "1508780"
  },
  {
    "text": "does it send an acknowledgment. Otherwise, it doesn't\nsend acknowledgment.",
    "start": "1508780",
    "end": "1514870"
  },
  {
    "text": "Yes? AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: Is it\njust like stop and wait? AUDIENCE: I think so,\nbecause [INAUDIBLE]..",
    "start": "1514870",
    "end": "1523112"
  },
  {
    "text": "HARI BALAKRISHNAN: But if\npackets are not being lost, it's doing a lot better\nthan stop and wait, right?",
    "start": "1523112",
    "end": "1528649"
  },
  {
    "text": "If packets are not\ngetting lost, it's doing-- would you agree that if\npackets are not lost, it does better\nthan stop and wait?",
    "start": "1528650",
    "end": "1535520"
  },
  {
    "text": "In fact, if packets\nare not lost, is there any difference\nbetween my protocol and this [INAUDIBLE] modified? No.",
    "start": "1535520",
    "end": "1540960"
  },
  {
    "text": "OK. But yet, you had a good thought. It looks like stop and wait. When does it look\nlike stop and wait? AUDIENCE: [INAUDIBLE]",
    "start": "1540960",
    "end": "1546650"
  },
  {
    "text": "HARI BALAKRISHNAN: Yeah. So that modification is,\nwhen packets are lost, it looks like stop and wait. Now, this is not a\nmere academic thing.",
    "start": "1546650",
    "end": "1552650"
  },
  {
    "text": "So it turns out that\nthere was a period of time in the '90s, where somebody in\nLinux TCP had the bright idea--",
    "start": "1552650",
    "end": "1558260"
  },
  {
    "text": "it seemed like a bright idea--\nthat that's what they would do. So for a period of time,\nthere was a Linux TCP,",
    "start": "1558260",
    "end": "1564140"
  },
  {
    "text": "where they said, well,\nit's all very complicated. Because what would happen was\nthat sometimes, the machine would crash.",
    "start": "1564140",
    "end": "1569570"
  },
  {
    "text": "And the sender thought that the\npacket had been acknowledged, but it hadn't actually\nbeen delivered up to the application. So let's just make it so\nthe packets get delivered",
    "start": "1569570",
    "end": "1576350"
  },
  {
    "text": "to the application, and only\nwhen the application does the read-- for those of you who've\ndone this sort of thing--",
    "start": "1576350",
    "end": "1581510"
  },
  {
    "text": "from the socket buffer, and it's\nbeen out in the application, and out of the\noperating system, that's when we'll send\nthe acknowledgment.",
    "start": "1581510",
    "end": "1587558"
  },
  {
    "text": "And you [? read, ?] seemed OK. People said, that\nseems reasonable. And Linux, the way it\nseems, things seem to work,",
    "start": "1587558",
    "end": "1592730"
  },
  {
    "text": "as people try out\na lot of stuff. And then I suggest,\nfrom time to time, somebody declares that\nsomething is right.",
    "start": "1592730",
    "end": "1598550"
  },
  {
    "text": "So anyway, they tried this out. And it actually\ndidn't work as well. And the reason for\nthat is, if you",
    "start": "1598550",
    "end": "1603650"
  },
  {
    "text": "don't run on a high enough\npacket loss rate network, then what could happen is\nthat you may get stuck.",
    "start": "1603650",
    "end": "1609710"
  },
  {
    "text": "And it's very hard to notice\nthese performance problems. Correctness problems\nare one thing, because the other side stops.",
    "start": "1609710",
    "end": "1616370"
  },
  {
    "text": "It stops working. And you can corner it down. But this simple tweak, that\nlooks perfectly reasonable,",
    "start": "1616370",
    "end": "1622872"
  },
  {
    "text": "is actually a\nperformance problem. And it doesn't show\nup all the time. It actually shows up\nonly when the packet loss rate is reasonably high.",
    "start": "1622873",
    "end": "1629150"
  },
  {
    "text": "So these are all\nexamples of reasons why these protocols are\nnot completely obvious and require a fair amount\nof care to get it to work.",
    "start": "1629150",
    "end": "1638992"
  },
  {
    "text": "Are there any questions\nabout any of the stuff?  Is this all clear?",
    "start": "1638992",
    "end": "1646360"
  },
  {
    "text": "OK. What I want to do now is to\nshow a picture of something called a sequence plot,\nwhich is a very useful tool",
    "start": "1646360",
    "end": "1652990"
  },
  {
    "text": "in understanding how these\nprotocols actually work. So what you do to produce\none of these plots is you run your protocol.",
    "start": "1652990",
    "end": "1660010"
  },
  {
    "text": "And you plot out--\nat the sender, you plot out the times at\nwhich the sender sent out",
    "start": "1660010",
    "end": "1665679"
  },
  {
    "text": "every sequence number, every\ntime it transmitted a packet. And you plot that out\nas a function of time.",
    "start": "1665680",
    "end": "1673420"
  },
  {
    "text": "The y-axis is the\nsequence number. The x-axis is time. And similarly, every\ntime the sender",
    "start": "1673420",
    "end": "1679390"
  },
  {
    "text": "gets an acknowledgment, you plot\nthat out on the trace as well. So you look at these two traces.",
    "start": "1679390",
    "end": "1684710"
  },
  {
    "text": "OK, this is a trace of packet\ntransmissions, data packet transmissions, and this is a\ntrace of ACK packet receptions.",
    "start": "1684710",
    "end": "1690730"
  },
  {
    "text": "And you look at this picture. Now, the moment you get\na picture like this,",
    "start": "1690730",
    "end": "1696297"
  },
  {
    "text": "there's a few things you\ncan immediately conclude. The first thing you\ncan conclude is, that if I look at the distance\nbetween the data and the ACK,",
    "start": "1696297",
    "end": "1703942"
  },
  {
    "text": "when there are no\nlosses happening, if I look at that distance,\nthat tells me the window size. Because that's the\nnumber of packets.",
    "start": "1703942",
    "end": "1709997"
  },
  {
    "text": "Because the last acknowledgment,\nevery time an acknowledgment happens, you send\nout a new packet. Therefore, the distance in\nsequence numbers between--",
    "start": "1709998",
    "end": "1718675"
  },
  {
    "text": "in one of these vertical\nslices, when there are no packet losses, is the window size. ",
    "start": "1718675",
    "end": "1725350"
  },
  {
    "text": "You can also read off the\ntypical round-trip time of the connection. Because the round-trip\ntime is the time between when a packet,\ndata packet, was sent",
    "start": "1725350",
    "end": "1731760"
  },
  {
    "text": "and when you got an\nacknowledgment for it. So you can read\nthat off as well. Those two pictures, there's an\neasy way for you in your lab",
    "start": "1731760",
    "end": "1739830"
  },
  {
    "text": "9 to produce these pictures. So if you're running into\nthings where things look slow,",
    "start": "1739830",
    "end": "1745140"
  },
  {
    "text": "things look bad, you should just\nput up one of these pictures, and then it'll\nusually become pretty",
    "start": "1745140",
    "end": "1750300"
  },
  {
    "text": "apparent what's going on. What may happen is\nthat initially, things look like this. And all of a\nsudden, things stop.",
    "start": "1750300",
    "end": "1755399"
  },
  {
    "text": "And you can start\nto see, well, I'm not getting\nacknowledgments, or I'm not sending data the right way. And these are very useful to\nunderstand what is going on.",
    "start": "1755400",
    "end": "1761435"
  },
  {
    "text": "And generally\nspeaking, these are useful to uncover performance\nissues rather than correctness.",
    "start": "1761435",
    "end": "1767555"
  },
  {
    "text": "I mean, correctness,\nusually, you can iron out before\nyou get to this stage.",
    "start": "1767555",
    "end": "1773080"
  },
  {
    "text": "The retransmission\ntimeout is the time between when you send\na packet and when you send the retransmission\nfor the packet.",
    "start": "1773080",
    "end": "1778382"
  },
  {
    "text": "In this particular picture,\nthe deviation from the mean was small. And that's why the\nretransmission timeout",
    "start": "1778382",
    "end": "1784750"
  },
  {
    "text": "is only a little bit bigger\nthan the mean round-trip time. Every time you see a packet\nthat's off of that sequence",
    "start": "1784750",
    "end": "1791820"
  },
  {
    "text": "[INAUDIBLE]---- so you\nsee packets here. The pluses are data packets. And then you see\nsomething going normally.",
    "start": "1791820",
    "end": "1796950"
  },
  {
    "text": "And then you see a lower\nsequence number retransmitted, sent here. That's a retransmission.",
    "start": "1796950",
    "end": "1802500"
  },
  {
    "text": "So you see, normally, the new\npackets are all sent there. But the retransmissions\nshow up before. So these are examples\nof retransmissions,",
    "start": "1802500",
    "end": "1809399"
  },
  {
    "text": "and these are\nexamples of packets that were retransmitted more\nthan once, because they're timing out multiple times.",
    "start": "1809400",
    "end": "1815409"
  },
  {
    "text": "Yes? AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: Yeah. So the window size-- what's the\ndefinition of the window size?",
    "start": "1815410",
    "end": "1822933"
  },
  {
    "text": "The maximum number of\nunacknowledged packets. So the maximum number of\nunacknowledged packets, when there are no packet\nlosses that have happened,",
    "start": "1822933",
    "end": "1829799"
  },
  {
    "text": "is the difference between the\nlast packet you transmitted and the last\nacknowledgment you got.",
    "start": "1829800",
    "end": "1835335"
  },
  {
    "text": "Because every time you\ngot an acknowledgment, you send a new packet. And initially, you\nsend out w packets.",
    "start": "1835335",
    "end": "1841300"
  },
  {
    "text": "So if you continue that, so\nyou initially send 1 to 5, then you send 2 to 6, 3 to 7. And the last ACK you had was\n2, when you sent out 3 to 7.",
    "start": "1841300",
    "end": "1849960"
  },
  {
    "text": "So that distance tells\nyou the window size. I might be off by 1. It's probably the\nlast packet you",
    "start": "1849960",
    "end": "1856670"
  },
  {
    "text": "sent minus the last\nacknowledgment you got plus 1, is the window size, or minus\n1, something like that.",
    "start": "1856670",
    "end": "1864742"
  },
  {
    "text": "You've got to get that\nright on the quiz. Fortunately, I don't have\nto get it right here. [LAUGHTER]",
    "start": "1864742",
    "end": "1872315"
  },
  {
    "text": " And then, some of these\nthings here are later x's. And these are\nacknowledgments that show up.",
    "start": "1872315",
    "end": "1877570"
  },
  {
    "text": "So these are packets that got\nretransmitted multiple times. These are\nacknowledgments that are for these retransmitted packets.",
    "start": "1877570",
    "end": "1883930"
  },
  {
    "text": "And I say most probably, because\nI can't actually be sure. In principle, it could be\nthat this acknowledgment here",
    "start": "1883930",
    "end": "1889870"
  },
  {
    "text": "is for this packet, is\nfor this data packet, that was actually originally\ntransmitted over here,",
    "start": "1889870",
    "end": "1896530"
  },
  {
    "text": "rather than for\nthis retransmission. It's, in principle, possible\nthat this acknowledgment was sent by the receiver\nupon the reception",
    "start": "1896530",
    "end": "1903790"
  },
  {
    "text": "of a packet over here. It's just that it's unlikely. It's more likely\nthat it was this, because that's the\nround-trip time that's",
    "start": "1903790",
    "end": "1909070"
  },
  {
    "text": "consistent with that RTT. But you can't actually be sure. All you know is that this was\nan acknowledgment for that data",
    "start": "1909070",
    "end": "1915550"
  },
  {
    "text": "packet. But most likely, it was\nfor the retransmission. OK, so these sequence\ntraces are generally pretty",
    "start": "1915550",
    "end": "1921490"
  },
  {
    "text": "helpful and useful\nin understanding the performance of\ntransport protocols, particularly sliding\nwindow protocols.",
    "start": "1921490",
    "end": "1930030"
  },
  {
    "text": "So any questions? OK. So now I'm going to turn\nto the last remaining",
    "start": "1930030",
    "end": "1936330"
  },
  {
    "text": "issue for these transport\nprotocols, which is analogous to we did a calculation of\nthe throughput of the stop",
    "start": "1936330",
    "end": "1944220"
  },
  {
    "text": "and wait protocol. I want to look at the throughput\nof the sliding window protocol. OK. And I want to explain that\nby first actually explaining",
    "start": "1944220",
    "end": "1952200"
  },
  {
    "text": "what the problem is. And then I want to\ngo back and tell you about a very beautiful result,\nvery widely applicable result,",
    "start": "1952200",
    "end": "1959430"
  },
  {
    "text": "applies to everything from\nnetworking to how long you're going to wait to get\nserved at a restaurant, called",
    "start": "1959430",
    "end": "1966660"
  },
  {
    "text": "Little's Law. It's a remarkable result, very\nsimple, and widely applicable.",
    "start": "1966660",
    "end": "1972150"
  },
  {
    "text": "Everybody should know it. So the question here is,\nwhat's the throughput of sliding window? ",
    "start": "1972150",
    "end": "1986150"
  },
  {
    "text": "And in particular, if\nI had run a protocol in a network that looks like\nthis-- so I have a sender.",
    "start": "1986150",
    "end": "1992600"
  },
  {
    "text": "I have a receiver. There's some network\npath in between.",
    "start": "1992600",
    "end": "1998750"
  },
  {
    "text": "And of course, this has\na bunch of switches here. And I want to know what is the\nthroughput of the protocol.",
    "start": "1998750",
    "end": "2004350"
  },
  {
    "text": "And what I would like\na few to tell you what the throughput is in terms of.",
    "start": "2004350",
    "end": "2009690"
  },
  {
    "text": "So the sender has a window size\nw, according to this protocol. For now, we'll assume that\nthere's no packet loss.",
    "start": "2009690",
    "end": "2018120"
  },
  {
    "text": "That is, acknowledgment\ndata packets are not lost, and acknowledgments\nare not lost. If I have time\ntoday, I'll come back",
    "start": "2018120",
    "end": "2024330"
  },
  {
    "text": "to explaining what\nhappens with packet loss. Otherwise, we'll pick it\nup in recitation tomorrow, or I'll point you to\nthe place in the book.",
    "start": "2024330",
    "end": "2030640"
  },
  {
    "text": "It's just a simple\ncalculation that expands. The more important part is\nwhen there are no losses.",
    "start": "2030640",
    "end": "2036910"
  },
  {
    "text": "Now, I'll also\nassume that there's links of different rates here.",
    "start": "2036910",
    "end": "2043710"
  },
  {
    "text": "And one of these links on\nthe path between sender and receiver is the link\nthat is the bottleneck link.",
    "start": "2043710",
    "end": "2052427"
  },
  {
    "text": "In other words, no matter\nwhat you do or who you bribe, you cannot send packets faster\nthan the speed of that link.",
    "start": "2052427",
    "end": "2058408"
  },
  {
    "text": "For simplicity, I'll assume\nthat there's one bottleneck. The general results\napply, even though there",
    "start": "2058409",
    "end": "2063540"
  },
  {
    "text": "are multiple bottlenecks. But I'll assume that there's\nsome bottleneck here. And I'll assume that its\nrate as c packets per second.",
    "start": "2063540",
    "end": "2071638"
  },
  {
    "text": " And I will assume here,\nthat because there's",
    "start": "2071639",
    "end": "2078119"
  },
  {
    "text": "a bottleneck, in\ngeneral, packets may show up faster than\nthe bottleneck can handle.",
    "start": "2078120",
    "end": "2084750"
  },
  {
    "text": "And if they do,\nthey sit in a queue. ",
    "start": "2084750",
    "end": "2090300"
  },
  {
    "text": "And because I've\nconstructed the problems so packets don't\nget lost, the queue can have an arbitrary length.",
    "start": "2090300",
    "end": "2095489"
  },
  {
    "text": "It could be potentially--\nit could grow unbounded. Though, in reality, it\nwon't, because the sender has a fixed window size of w.",
    "start": "2095489",
    "end": "2103140"
  },
  {
    "text": "Now, all of this\nanalysis and calculation will apply when there are many,\nmany people transmitting data, sharing this bottleneck.",
    "start": "2103140",
    "end": "2109682"
  },
  {
    "text": "So you can have multiple set\nsenders to multiple receivers, and they'll all share\nthis link in some way.",
    "start": "2109682",
    "end": "2114829"
  },
  {
    "text": "And for now, today,\nall I'll assume is that there's one\nuser of the network. It's not hard to extend the same\ncalculation to multiple users.",
    "start": "2114830",
    "end": "2123780"
  },
  {
    "text": "And the question is,\nwhat is the throughput in terms of the window size and\nin terms of these other things?",
    "start": "2123780",
    "end": "2131240"
  },
  {
    "text": "Now, in order to\nanswer this question, it'll turn out that\nthe throughput depends",
    "start": "2131240",
    "end": "2137290"
  },
  {
    "text": "on the window size, and\nalso on the round-trip time, and also on the loss\nrate, and also on--",
    "start": "2137290",
    "end": "2144430"
  },
  {
    "text": "in a certain mode,\nit will depend on c. It can't exceed c. OK?",
    "start": "2144430",
    "end": "2150579"
  },
  {
    "text": "But in order to\nunderstand how to solve these kinds of\nquestions, there's a more general result\nthat's more widely applicable, called Little's Law,\nwhich I want to tell you about.",
    "start": "2150580",
    "end": "2158410"
  },
  {
    "text": "So Little's Law applies\nto any queuing system. It applies to any system where\nthere's some big black box",
    "start": "2158410",
    "end": "2164470"
  },
  {
    "text": "here, and the black box has\na queue sitting inside it,",
    "start": "2164470",
    "end": "2171550"
  },
  {
    "text": "and the queue\ndrains at some rate. So you have a\nqueue sitting here. Things arrive into the queue.",
    "start": "2171550",
    "end": "2179589"
  },
  {
    "text": "I'll call that the\narrival process, which I'll represent by A.\nAnd then things come out",
    "start": "2179590",
    "end": "2187000"
  },
  {
    "text": "of the queue, according\nto some service process, which I'll represent\nby S. By the way,",
    "start": "2187000",
    "end": "2196570"
  },
  {
    "text": "Little is a professor at MIT. I think he wrote this\nresult, this law.",
    "start": "2196570",
    "end": "2201670"
  },
  {
    "text": "Well, I don't think he\ncalled it Little's Law, but other people did. ",
    "start": "2201670",
    "end": "2207910"
  },
  {
    "text": "So he did this work,\nI think, in the 1950s. And what's beautiful\nabout this result",
    "start": "2207910",
    "end": "2213369"
  },
  {
    "text": "is that it relates\nthree parameters. It relates the--",
    "start": "2213370",
    "end": "2219280"
  },
  {
    "text": "I'll call it N. It relates N,\nthe average number of items that you have in this\nsystem, in the queue,",
    "start": "2219280",
    "end": "2225670"
  },
  {
    "text": "or in this black box. It relates that to\nthe service rate and to the average delay\nexperienced by an item that",
    "start": "2225670",
    "end": "2234789"
  },
  {
    "text": "sits inside this black box. So let me relate\nthe three again. It relates N, which is\nthe average number, to D,",
    "start": "2234790",
    "end": "2248590"
  },
  {
    "text": "which is the average delay-- so I'm going to put a bar above\nthe fact that it's an average--",
    "start": "2248590",
    "end": "2255280"
  },
  {
    "text": "to lambda, which is\nthe average rate.",
    "start": "2255280",
    "end": "2262510"
  },
  {
    "text": "Now, the result applies\nto a stable system. What that means is it\napplies to a system where the queue doesn't\ngrow unbounded to infinity.",
    "start": "2262510",
    "end": "2270107"
  },
  {
    "text": "In other words, it\napplies to a system where the service rate-- if\nthe arrivals are persistently",
    "start": "2270107",
    "end": "2275109"
  },
  {
    "text": "bigger than the service, then\nit doesn't matter what you do. The queue is going\nto grow to infinity, and the delay is going\nto grow to infinity,",
    "start": "2275110",
    "end": "2281890"
  },
  {
    "text": "and N is going to\ngrow to infinity. So you're going to get\na relationship that's not of much practical use.",
    "start": "2281890",
    "end": "2288490"
  },
  {
    "text": "But otherwise, if the\nrate at which things come out of the system, in\na stable system, is lambda--",
    "start": "2288490",
    "end": "2293723"
  },
  {
    "text": "which, if it's a\nstable system, the rate at which things enter the\nsystem can't exceed it either. But it relates the\nservice rate lambda",
    "start": "2293723",
    "end": "2301900"
  },
  {
    "text": "for a stable system that doesn't\ngrow unbounded to N entity. OK?",
    "start": "2301900",
    "end": "2307920"
  },
  {
    "text": "So let me give this\nfirst by example. How many of you guys\nhave used the food truck?",
    "start": "2307920",
    "end": "2314700"
  },
  {
    "text": "All right, so last week, I\ndid a little experiment there. And I found that--\nthis is all real data.",
    "start": "2314700",
    "end": "2320670"
  },
  {
    "text": "I found that, at least\nthe [? Thai ?] truck,",
    "start": "2320670",
    "end": "2326309"
  },
  {
    "text": "they seem to take about 20\nseconds per person, on average.",
    "start": "2326310",
    "end": "2331810"
  },
  {
    "text": "OK? ",
    "start": "2331810",
    "end": "2338778"
  },
  {
    "text": "And when I showed\nup there-- and this wasn't an average calculation. But I showed up there, and\nthere were 20 people ahead of me in the line.",
    "start": "2338778",
    "end": "2344030"
  },
  {
    "start": "2344030",
    "end": "2352195"
  },
  {
    "text": "And the question,\nof course, is I don't care how many\npeople there are in line. What I care about is, how\nlong do I have to wait?",
    "start": "2352195",
    "end": "2358490"
  },
  {
    "text": "Assuming that the\nrandom sample I did was the average, which who\nknows if it was or not,",
    "start": "2358490",
    "end": "2364720"
  },
  {
    "text": "looking at these two numbers,\nwhat's the waiting time? In other words, what's D? ",
    "start": "2364720",
    "end": "2372060"
  },
  {
    "text": "10 minutes? Is it? I didn't wait 10 minutes. How do you get 10?",
    "start": "2372060",
    "end": "2377394"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: I see. It might be. So I got 30. So I had it as 20. All right, it might be 10.",
    "start": "2377394",
    "end": "2382560"
  },
  {
    "text": "Why is it 10?  How do you conclude\nthat it was 10?",
    "start": "2382560",
    "end": "2388200"
  },
  {
    "text": " Who said 10? AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: Why? AUDIENCE: Well, so it'd be like,\n[? if you have ?] 30 people,",
    "start": "2388200",
    "end": "2395592"
  },
  {
    "text": "then you have [INAUDIBLE]\n[? per person ?] [INAUDIBLE].. HARI BALAKRISHNAN: Yeah.",
    "start": "2395592",
    "end": "2400599"
  },
  {
    "text": "Right. So what this says--\nwhat you did was you just said that D must be\nequal to N over lambda, right?",
    "start": "2400600",
    "end": "2407250"
  },
  {
    "text": "Or N is lambda\ntimes D. So if you say that it's 20 seconds per\nperson, is 3 people per minute.",
    "start": "2407250",
    "end": "2413950"
  },
  {
    "text": "So what you do is you do 30\npeople divided by 3 per minute. And so you get 10 minutes.",
    "start": "2413950",
    "end": "2419240"
  },
  {
    "text": " So that's about right. That is exactly right.",
    "start": "2419240",
    "end": "2424869"
  },
  {
    "text": "So Little's Law just tells\nyou that the average number of items in a system-- this\nis all applicable to various",
    "start": "2424870",
    "end": "2431640"
  },
  {
    "text": "conditions on stable\nsystems, and so forth-- it says the average number of\nitems, or packets, or people,",
    "start": "2431640",
    "end": "2437790"
  },
  {
    "text": "or whatever, is equal to the\nproduct of the rate at which the system is servicing them\nmultiplied by the average delay",
    "start": "2437790",
    "end": "2445260"
  },
  {
    "text": "that they experience. So knowing two of them, you\ncan calculate the third. And what's truly, truly\nremarkable about the result",
    "start": "2445260",
    "end": "2451650"
  },
  {
    "text": "is that it applies to anything\nthat you do in the system. Packets could arrive,\nor jobs could arrive,",
    "start": "2451650",
    "end": "2457500"
  },
  {
    "text": "or people could arrive, in\nsome arbitrary distribution. They could be serviced according\nto some completely arbitrary",
    "start": "2457500",
    "end": "2462720"
  },
  {
    "text": "distribution. They don't have to be serviced\nin the order in which they arrive. They could be shuffled around.",
    "start": "2462720",
    "end": "2467790"
  },
  {
    "text": "You could make it so\npeople who come in last get serviced first. You could do whatever, and\nthe result still applies.",
    "start": "2467790",
    "end": "2474220"
  },
  {
    "text": "Yes? AUDIENCE: [INAUDIBLE]\ndelay [INAUDIBLE]?? ",
    "start": "2474220",
    "end": "2481403"
  },
  {
    "text": "HARI BALAKRISHNAN: No. Well, I kind of cheated\nhere a little bit. This is 20 seconds per person. But whenever I tell you a number\nlike that, what this really",
    "start": "2481403",
    "end": "2488710"
  },
  {
    "text": "says, that this is\n3 people per minute. ",
    "start": "2488710",
    "end": "2493850"
  },
  {
    "text": "So it looks like a\ndelay, but this is really an inverse of a\nrate in the way--",
    "start": "2493850",
    "end": "2500020"
  },
  {
    "text": "this is the inverse of the rate\nin the way I've described it. I mean, it's\nintuitive to say they",
    "start": "2500020",
    "end": "2506109"
  },
  {
    "text": "take 20 seconds per person. But when I tell you that it\ntakes 20 seconds per packet or 20 seconds per person,\nit looks like a delay.",
    "start": "2506110",
    "end": "2512860"
  },
  {
    "text": "But it's really a rate. So it's important. That's a good question. Yeah, so this is a rate. So this is inverse time.",
    "start": "2512860",
    "end": "2520117"
  },
  {
    "text": "And this is whatever\nquantity you're dealing with. So if you then take the ratio\nof N to lambda, you get time. ",
    "start": "2520117",
    "end": "2527900"
  },
  {
    "text": "OK, so why is Little's Law true? So here's a very simple\npictorially proof of Little's Law.",
    "start": "2527900",
    "end": "2533960"
  },
  {
    "text": "And it applies under\nspecific conditions. But it turns out\nthese conditions are good enough for our use.",
    "start": "2533960",
    "end": "2539880"
  },
  {
    "text": "So let's say we draw a\npicture like this of a queue. So I'm going to assume that\npackets enter the queue and leave the queue. Now, the fact that there's\na single queue, versus",
    "start": "2539880",
    "end": "2546830"
  },
  {
    "text": "not a queue, doesn't matter. It's any black box. So p.packets could\nget-- or information or messages or items could\nget sent from the sender.",
    "start": "2546830",
    "end": "2555440"
  },
  {
    "text": "They enter a black box, and they\nget stuck out at the receiver. And the thing applies\nto that as well.",
    "start": "2555440",
    "end": "2562200"
  },
  {
    "text": "So let me plot the\nnumber of packets in the queue, or the number\nof items in the queue, as a function of time.",
    "start": "2562200",
    "end": "2567900"
  },
  {
    "text": "So I'm going to assume here that\ncapital T is extremely long. Whenever I deal\nwith rates, I have",
    "start": "2567900",
    "end": "2573380"
  },
  {
    "text": "to look at what happens\nover a long period of time, and then I can calculate a rate. So you can see that\nwhat I've done here",
    "start": "2573380",
    "end": "2579740"
  },
  {
    "text": "is, that every time a packet\narrives or an item arrives, the queue increments by 1. So you can see that the\ny-axis, the height of each",
    "start": "2579740",
    "end": "2587480"
  },
  {
    "text": "of those little\nsnippets here is 1. And then every time it\nleaves, it drops by 1. So you get-- in a\nparticular execution",
    "start": "2587480",
    "end": "2594230"
  },
  {
    "text": "of whatever the\nqueue does, you get a trace that looks like this. Now, of course, in a\ndifferent execution,",
    "start": "2594230",
    "end": "2599898"
  },
  {
    "text": "the details might be different. But if you do it for\na long enough time, you're going to sample all\nthe possible evolutions",
    "start": "2599898",
    "end": "2607340"
  },
  {
    "text": "of this thing, or at\nleast enough of it, so you can make\nmeaningful statements. So whenever a packet arrives,\nI've shown it in a color.",
    "start": "2607340",
    "end": "2613310"
  },
  {
    "text": "And I think I've matched the\ncolor up against whenever that packet leaves. But in fact, the\nresult applies--",
    "start": "2613310",
    "end": "2618320"
  },
  {
    "text": "this particular example is\na first-in, first-out queue. So packets leave in the\nsame order they were sent.",
    "start": "2618320",
    "end": "2624090"
  },
  {
    "text": "But that doesn't\nhave to be true. So let me label these\npackets as shown here.",
    "start": "2624090",
    "end": "2631019"
  },
  {
    "text": "Now, what I'm going\nto try to do is to relate the rate at which\npackets have entered or left the queue to the number\nof items in the queue",
    "start": "2631020",
    "end": "2638840"
  },
  {
    "text": "and the average\ndelay experienced by each item in the queue,\nin this pictorially proof.",
    "start": "2638840",
    "end": "2645860"
  },
  {
    "text": "So the way you do\nthat is everything has to do with the\nfact that there are two different\nways of looking at the area under this curve.",
    "start": "2645860",
    "end": "2652310"
  },
  {
    "text": "And there's two different ways. One of them relates to\nthe rate, and the other relates to the average delay.",
    "start": "2652310",
    "end": "2658550"
  },
  {
    "text": "And then we're going to say, all\nright, the area under the curve is the same, and\ntherefore, we're",
    "start": "2658550",
    "end": "2663950"
  },
  {
    "text": "going to equate two numbers. So the first thing\nI'm going to do is I'm going to divide this\nup, the area under the curve,",
    "start": "2663950",
    "end": "2670160"
  },
  {
    "text": "and divide it up into rectangles\nlike this and associate with each rectangle\na packet, or an item.",
    "start": "2670160",
    "end": "2675810"
  },
  {
    "text": "So I'm going to say\nthat A showed up here, and it left at that point. So this entire\nperiod of time here",
    "start": "2675810",
    "end": "2682550"
  },
  {
    "text": "corresponds to packet\nA sitting in the queue. This entire period of\ntime corresponds to B. A",
    "start": "2682550",
    "end": "2688790"
  },
  {
    "text": "left at this point in time. So now my queue\nwas three packets, and they're B, C, D. And\nthen, at this point in time, E",
    "start": "2688790",
    "end": "2694809"
  },
  {
    "text": "showed up. So we now have C\nand D sitting here. But now E showed up, and then\nF showed up, and so forth.",
    "start": "2694810",
    "end": "2700137"
  },
  {
    "text": "So you agree that I\ncan divide this up into rectangles and associate\nwith each little rectangle, whose height is 1,\na particular packet.",
    "start": "2700137",
    "end": "2707442"
  },
  {
    "text": "And that is the same\npacket in the queue. So the height represents\na particular packet, and I associate every little\npiece of this queue picture",
    "start": "2707442",
    "end": "2715040"
  },
  {
    "text": "with a given packet. Now, let's assume that we run\nthis experiment for a long time",
    "start": "2715040",
    "end": "2722180"
  },
  {
    "text": "T, capital T. And P packets were\nforwarded through the system.",
    "start": "2722180",
    "end": "2728040"
  },
  {
    "text": "So what is the rate?  AUDIENCE: [INAUDIBLE]",
    "start": "2728040",
    "end": "2735047"
  },
  {
    "text": "HARI BALAKRISHNAN: P\npackets per T seconds-- so the rate is clearly\nlambda is P over T. Right? This is easy.",
    "start": "2735047",
    "end": "2740810"
  },
  {
    "text": "OK. Great.  Now, let's assume that\nthe area under the curve",
    "start": "2740810",
    "end": "2748530"
  },
  {
    "text": "is A. This is the entire\narea under the curve here. Now, this is an area\nunder the curve of N of T,",
    "start": "2748530",
    "end": "2756060"
  },
  {
    "text": "which is the number of\npackets, as a function of T. So if I take this area under\nthe curve, which is the same--",
    "start": "2756060",
    "end": "2764172"
  },
  {
    "text": "if you think of it\nin continuous domain, it's the integral of N of T-- and I divide by T,\nI get that number.",
    "start": "2764173",
    "end": "2770110"
  },
  {
    "text": "Right? You agree that the mean\nnumber of packets in the queue is the integral of\nN of T, which is",
    "start": "2770110",
    "end": "2776490"
  },
  {
    "text": "the number of packets in the\nqueue at any point in time. If I take that integral,\nand I divide by capital T,",
    "start": "2776490",
    "end": "2781680"
  },
  {
    "text": "I get the mean number\nof packets in the queue. All it says is this is the total\nnumber of packets in the queue",
    "start": "2781680",
    "end": "2787740"
  },
  {
    "text": "over-- aggregated across all time. Therefore, to find the\naverage, I take the integral,",
    "start": "2787740",
    "end": "2793020"
  },
  {
    "text": "and I divide by T. That's\nthe definition of the mean. All right, so now\nwe have two things.",
    "start": "2793020",
    "end": "2799300"
  },
  {
    "text": "We have the rate\nis P over T. And we have that the mean number\nof packets in the queue is A over T, where A is\nthe area under the curve.",
    "start": "2799300",
    "end": "2807510"
  },
  {
    "text": "Now, to complete the puzzle,\nwhat we have to observe is, that if you look at the\nsame area under the curve,",
    "start": "2807510",
    "end": "2813398"
  },
  {
    "text": "you can look at it in two ways. The one way to look at\nit is the mean number of packets in the queue\nis some line through here,",
    "start": "2813398",
    "end": "2818619"
  },
  {
    "text": "which is the area under\nthat curve divided by T. But each of these things\naccounts for a certain delay.",
    "start": "2818620",
    "end": "2825270"
  },
  {
    "text": "And the mean delay\nexperienced by the packet is simply the area\nunder this entire curve,",
    "start": "2825270",
    "end": "2832290"
  },
  {
    "text": "but it's divided into all of the\npackets that ever got forwarded through the system.",
    "start": "2832290",
    "end": "2837369"
  },
  {
    "text": "So through this\nexperiment, P packets got forwarded by the system. And the area under\nthe curve also",
    "start": "2837370",
    "end": "2842700"
  },
  {
    "text": "represents a total\naggregate delay. Because if I look at\nit with this axis here, that's the total time.",
    "start": "2842700",
    "end": "2848740"
  },
  {
    "text": "So that's the total time spent. And if I take this entire\narea under the curve,",
    "start": "2848740",
    "end": "2854160"
  },
  {
    "text": "and I look at that\narea under the curve, and I divide by the number\nof packets that I sent, that gives me the average\ntime that a given packet spent",
    "start": "2854160",
    "end": "2863190"
  },
  {
    "text": "in the queue, which means that\nthe mean delay is A over P. So if I take A over P and\nmultiply it by P over T, what",
    "start": "2863190",
    "end": "2873360"
  },
  {
    "text": "I get is A over T,\nwhich is equal to N. And that's Little's Law.",
    "start": "2873360",
    "end": "2880932"
  },
  {
    "text": "So now we're going to\napply Little's Law. I mean, it's actually\na very intuitive idea. It just says, that if I\ntake the rate, average rate,",
    "start": "2880932",
    "end": "2887613"
  },
  {
    "text": "and the average delay,\nand I multiply the two, I get the average number\nthat's sitting in the system. So in order to\ncomplete the picture",
    "start": "2887613",
    "end": "2893640"
  },
  {
    "text": "for the throughput of this\nsliding window protocol, what we're going to do is\nto apply Little's Law",
    "start": "2893640",
    "end": "2898740"
  },
  {
    "text": "in a couple of different ways. We're going to say, that if\nthe window size is w in that protocol, and the\nround-trip time is RTT--",
    "start": "2898740",
    "end": "2910226"
  },
  {
    "text": "that's the time between\nwhen I send a packet and get an acknowledgment back-- I first apply Little's Law.",
    "start": "2910227",
    "end": "2916060"
  },
  {
    "text": "So now I have a big black box. I send out packets. And every time I receive\nan acknowledgment,",
    "start": "2916060",
    "end": "2921900"
  },
  {
    "text": "I send out another packet. And I never send out\nmore than w packets.",
    "start": "2921900",
    "end": "2927299"
  },
  {
    "text": "So the average delay\nbetween when I send a packet and when I get an\nacknowledgment for it is RTT.",
    "start": "2927300",
    "end": "2934290"
  },
  {
    "text": "So that's the D in the\nLittle's Law formula. The number of things\nthat I have sitting",
    "start": "2934290",
    "end": "2939850"
  },
  {
    "text": "in this black box inside\nthe network, the number of outstanding things\nthat I have that are waiting to be processed, is w.",
    "start": "2939850",
    "end": "2946950"
  },
  {
    "text": "And therefore, the rate\nis, by Little's Law, N over D, which is w over RTT.",
    "start": "2946950",
    "end": "2952970"
  },
  {
    "text": " So therefore, the\nthroughput of this protocol",
    "start": "2952970",
    "end": "2959490"
  },
  {
    "text": "is simply equal to w over RTT. ",
    "start": "2959490",
    "end": "2968210"
  },
  {
    "text": "So if I increase w, I\nget higher throughput. So if I draw this as a\nfunction of the window size w,",
    "start": "2968210",
    "end": "2977210"
  },
  {
    "text": "I look at the throughput here. I get a linear\nincrease like that.",
    "start": "2977210",
    "end": "2983793"
  },
  {
    "text": "Now, the problem with this is,\nof course, you look at this and go, well, the best way\nto get higher and higher and higher throughput is to\nkeep increasing the window size.",
    "start": "2983793",
    "end": "2991050"
  },
  {
    "text": "So what happens if I-- does\nthis keep going on forever, that all I have to do is to\nkeep increasing the window size,",
    "start": "2991050",
    "end": "2997230"
  },
  {
    "text": "and then I'm getting\ninfinite throughput? ",
    "start": "2997230",
    "end": "3002940"
  },
  {
    "text": "That's clearly not happening. So what happens? Why is it that it's completely\ntrue that w over RTT",
    "start": "3002940",
    "end": "3008400"
  },
  {
    "text": "is the throughput. So why is it that I can't just\nkeep increasing the window size and get infinite throughput?",
    "start": "3008400",
    "end": "3015446"
  },
  {
    "text": " Yeah? AUDIENCE: [INAUDIBLE] HARI BALAKRISHNAN: Well, it's\ntrue you're bounded by c.",
    "start": "3015447",
    "end": "3022690"
  },
  {
    "text": "But yet, this formula is true. Right? It's true that there's\nsome round-trip time. So what's really\ngoing on, of course,",
    "start": "3022690",
    "end": "3028760"
  },
  {
    "text": "is that if you increase\nthe window size more than a certain amount,\nall that's going to happen is the packets are going to\nget stuck in this queue here.",
    "start": "3028760",
    "end": "3037330"
  },
  {
    "text": "And they're going to start\ndraining at some rate, c packets per second. But they're just\ngoing to get stuck at the back end of the queue.",
    "start": "3037330",
    "end": "3044048"
  },
  {
    "text": "When they get stuck at\nthe back end of the queue, the RTT is no longer fixed. The RTT now also starts going.",
    "start": "3044048",
    "end": "3050660"
  },
  {
    "text": "So in other words,\nthe throughput is always this formula. But initially, when the packets\nare no longer in the queue--",
    "start": "3050660",
    "end": "3057160"
  },
  {
    "text": "until a certain point,\ninitially, you said one packet. It goes through. You have a window\nof two packets. They go through,\nand you get ACKs.",
    "start": "3057160",
    "end": "3062440"
  },
  {
    "text": "Three packets, they go\nthrough and get ACKs. At some point in time, they\nstart to fill up the queue. And when they start to fill\nup the queue, w keeps growing.",
    "start": "3062440",
    "end": "3070780"
  },
  {
    "text": "But RTT keeps growing. And what ends up happening is\nthis ratio doesn't exceed c. So you end up with throughput\nthat looks like that.",
    "start": "3070780",
    "end": "3078730"
  },
  {
    "text": "And the point at which\nthis happens here, this point here is\nactually a product",
    "start": "3078730",
    "end": "3084220"
  },
  {
    "text": "of the minimum RTT\nof the system, which is the round-trip time in\nthe absence of any queuing.",
    "start": "3084220",
    "end": "3091240"
  },
  {
    "text": "I'm going to call that RTT min. And that depends\non the propagation delay and the\ntransmission delay,",
    "start": "3091240",
    "end": "3097270"
  },
  {
    "text": "but not on the queuing delay. If there's no\nqueues, and there's a certain minimum\nround-trip time-- like, it takes 100 milliseconds to\ngo to California and back,",
    "start": "3097270",
    "end": "3103822"
  },
  {
    "text": "or whatever. Now, when queues start to grow,\nthat RTT starts increasing. But until that point happens,\nthe round-trip time is RTT min.",
    "start": "3103822",
    "end": "3111920"
  },
  {
    "text": "And if I take that, and\nI multiply that by c, that's the critical\nwindow size up",
    "start": "3111920",
    "end": "3117970"
  },
  {
    "text": "to which point there are\nno queue packets that build up in the queue. But after that, packets start\nto build up in the queue.",
    "start": "3117970",
    "end": "3123830"
  },
  {
    "text": "And there's a name given to this\nproduct of the bottleneck link speed, or bandwidth,\nand RTT min.",
    "start": "3123830",
    "end": "3131260"
  },
  {
    "text": "It's called the\nbandwidth delay product. It's the product of the\nbandwidth and the delay,",
    "start": "3131260",
    "end": "3137470"
  },
  {
    "text": "where the delay is the\nminimum round-trip time. And if I were to\ndraw an analogous picture of the actual\nround-trip time",
    "start": "3137470",
    "end": "3145510"
  },
  {
    "text": "as a function of\nthe window size, initially, when the\nwindow size is small, the round-trip time is\nRTT min, with some value.",
    "start": "3145510",
    "end": "3153440"
  },
  {
    "text": "And then, at this\npoint in time-- I want to mimic\nthis thing here-- you get to this point in time,\nwhich is the bandwidth delay",
    "start": "3153440",
    "end": "3159950"
  },
  {
    "text": "product. And then the round-trip\ntime starts to grow. So this is the actual delay. ",
    "start": "3159950",
    "end": "3167440"
  },
  {
    "text": "And so you look at this picture. And a well-designed,\nwell-running protocol will run with a window\nsize roughly around here,",
    "start": "3167440",
    "end": "3173529"
  },
  {
    "text": "where it gets the highest\npossible throughput at the lowest possible delay. But sometimes, you might end\nup running with a bigger window",
    "start": "3173530",
    "end": "3179710"
  },
  {
    "text": "size. You're not going to get\nany faster throughput, but what you would see is\nincreasingly higher delay.",
    "start": "3179710",
    "end": "3186190"
  },
  {
    "text": "Now, in real networks,\ndesigning protocols that run at this\nnice, sweet spot is an extremely\nchallenging problem.",
    "start": "3186190",
    "end": "3192180"
  },
  {
    "text": "I'll get back to this\nproblem on Wednesday and talk about how\npeople work on it. It's still a somewhat\nopen problem.",
    "start": "3192180",
    "end": "3198111"
  },
  {
    "text": "In fact, it's still\nan open problem in things like cellular\nwireless networks. So I'll come back to this point.",
    "start": "3198112",
    "end": "3203270"
  },
  {
    "text": "But the main point\nhere is this idea of a bandwidth delay product.",
    "start": "3203270",
    "end": "3206880"
  }
]