[
  {
    "text": " The following\ncontent is provided by MIT OpenCourseWare under\na Creative Commons license.",
    "start": "0",
    "end": "6340"
  },
  {
    "text": "Additional information\nabout our license and MIT OpenCourseWare\nin general is available at ocw.mit.edu.",
    "start": "6340",
    "end": "13090"
  },
  {
    "start": "13090",
    "end": "31991"
  },
  {
    "text": "PROFESSOR: OK.  Welcome.",
    "start": "31991",
    "end": "37160"
  },
  {
    "text": "Welcome to the second discussion\nof networks and the second",
    "start": "37160",
    "end": "43690"
  },
  {
    "text": "to last talk of\nlecture of this course. There's a very important\nset of lectures",
    "start": "43690",
    "end": "51160"
  },
  {
    "text": "after that from the students\nI'm looking forward to. So last time we talked\nabout the use of computers",
    "start": "51160",
    "end": "60880"
  },
  {
    "text": "to model various complicated\nsystems in mainly cellular systems, ranging\nfrom highly cooperative, even",
    "start": "60880",
    "end": "71200"
  },
  {
    "text": "bistable bifurcation so that\nwhere a cell makes a decision,",
    "start": "71200",
    "end": "76840"
  },
  {
    "text": "a discussion of chromosome copy\nnumber and its implications and a large chunk of time on\nflux balance optimization where",
    "start": "76840",
    "end": "85750"
  },
  {
    "text": "we can look at many\nof these things from the standpoint\nof optimization.",
    "start": "85750",
    "end": "90880"
  },
  {
    "text": "Now, today, to paraphrase\na famous local politician,",
    "start": "90880",
    "end": "97869"
  },
  {
    "text": "we will ask not what\ncomputers can do for biology, but what biology can\ndo for computers.",
    "start": "97870",
    "end": "104290"
  },
  {
    "text": "And of course we'll\ngo back and forth and try to look at what\nthis interesting dynamic",
    "start": "104290",
    "end": "112750"
  },
  {
    "text": "between the experimental\nand the computational side. And so how can biology\naid algorithm development,",
    "start": "112750",
    "end": "120130"
  },
  {
    "text": "to return the favor\nand aid biology? But not only\nalgorithm development",
    "start": "120130",
    "end": "125439"
  },
  {
    "text": "to not only inspiring\nalgorithm development, but actually implementing\nhardware and software",
    "start": "125440",
    "end": "133330"
  },
  {
    "text": "in biological systems. We'll talk about that. And ranging from molecular\ncomputing to cellular computing",
    "start": "133330",
    "end": "142870"
  },
  {
    "text": "and then back to inspiring\nalgorithms again.",
    "start": "142870",
    "end": "147970"
  },
  {
    "text": "So slide 3, what is it that\nwe're really talking about, that computation\nneeds in terms of aid?",
    "start": "147970",
    "end": "155920"
  },
  {
    "text": "How do we get-- what are the real issues here? And we've mentioned a couple\nof times in the course,",
    "start": "155920",
    "end": "161260"
  },
  {
    "text": "probably initially,\nwhen we were talking about dynamic\nprogramming and related topics, of how a problem\nin computer science scales.",
    "start": "161260",
    "end": "169570"
  },
  {
    "text": "Typically, you'll\nhave one key input, size in, and then the running\ntime or sometimes the memory",
    "start": "169570",
    "end": "178210"
  },
  {
    "text": "has an upper bound which\nwe've been referring to as the order of some\nfunction of that end",
    "start": "178210",
    "end": "184209"
  },
  {
    "text": "or end as the length of a string\nor the size of the problem.",
    "start": "184210",
    "end": "189710"
  },
  {
    "text": "There are other symbols that\nare slightly more rarely used. There's in addition to the upper\nbound, there's lower bound.",
    "start": "189710",
    "end": "197230"
  },
  {
    "text": "Sometimes you can get an\nexact bound or equal bound. And how does this\nplay out when you",
    "start": "197230",
    "end": "202569"
  },
  {
    "text": "have specific instances of n? Now of course, this when\nyou say this something is on the order of or upper\nbound of a function of n,",
    "start": "202570",
    "end": "211090"
  },
  {
    "text": "you don't always necessarily\ndescribe the constants. But to give you a\nballpark, when you have n ranging from 1 to\n1,000 and the polynomial",
    "start": "211090",
    "end": "220240"
  },
  {
    "text": "ranging from linear to\nquadratic to 10th power,",
    "start": "220240",
    "end": "226090"
  },
  {
    "text": "and then the exponential\nor factorial.",
    "start": "226090",
    "end": "231340"
  },
  {
    "text": "And you can see that\nfor very small n, you can get cases where\na polynomial performance",
    "start": "231340",
    "end": "239709"
  },
  {
    "text": "computation time can be longer\nthan an exponential computation time. So exponential isn't\nnecessarily bad news,",
    "start": "239710",
    "end": "247070"
  },
  {
    "text": "depending on the\nsize of your problem. But it gets to be bad\nnews very quickly. As N increases, you quickly\nget over large numbers",
    "start": "247070",
    "end": "256750"
  },
  {
    "text": "on the far right hand side\nthat are computationally intractable with\nany known computer.",
    "start": "256750",
    "end": "264190"
  },
  {
    "text": "So we mentioned\ncomputational complexity is one of the various\ndefinitions of complexity",
    "start": "264190",
    "end": "270190"
  },
  {
    "text": "at the beginning of course. This is not the\none we chose to be closest to the definition\nof living complexity.",
    "start": "270190",
    "end": "276280"
  },
  {
    "text": "But it's one that's very\nfrequently used in the computer science field. I just want to introduce\na few of the terms",
    "start": "276280",
    "end": "281922"
  },
  {
    "text": "here just so you've heard\nthem in this context. We have-- and it basically\nrefers to the issues brought up",
    "start": "281922",
    "end": "290020"
  },
  {
    "text": "in the previous slide of whether\nit takes, whether it's scales by a polynomial, which\nis generally desirable,",
    "start": "290020",
    "end": "295330"
  },
  {
    "text": "or whether it's scales\nexponentially or worse. And so we have P\nare problems that we",
    "start": "295330",
    "end": "302410"
  },
  {
    "text": "can solve in polynomial\ndeterministic time. Deterministic is just\ndescribed the fact",
    "start": "302410",
    "end": "308240"
  },
  {
    "text": "that the algorithms will do\nthe same thing time after time, which is the typical computer\nthat we feel comfortable using.",
    "start": "308240",
    "end": "316210"
  },
  {
    "text": "And an example of\nproblems in the P class, the dynamic programming, which\nwe've used numerous times.",
    "start": "316210",
    "end": "324070"
  },
  {
    "text": "It scales polynomial\nand the polynomial just depends on the problem slightly\nfrom square to the sixth power",
    "start": "324070",
    "end": "329770"
  },
  {
    "text": "we've seen. NP has a number of\nsubsets, but overall, it",
    "start": "329770",
    "end": "336040"
  },
  {
    "text": "means it's not the\ndeterministic polynomial time to get the solutions. The solutions are checkable\nin polynomial time,",
    "start": "336040",
    "end": "343690"
  },
  {
    "text": "but are generally felt\nto not be currently",
    "start": "343690",
    "end": "351430"
  },
  {
    "text": "feasible in polynomial time for\nthe determination as opposed to checking. An example of this were\nactually the inventors",
    "start": "351430",
    "end": "360070"
  },
  {
    "text": "of various encryption\nschemes such as RSA.",
    "start": "360070",
    "end": "365200"
  },
  {
    "text": "The R and the S and the A,\nreferring to the last names of the authors. In a certain sense,\nthey're banking",
    "start": "365200",
    "end": "371560"
  },
  {
    "text": "on the difficulty of cracking\nthese codes in polynomial time.",
    "start": "371560",
    "end": "379419"
  },
  {
    "text": "You can use the\ncodes if you know it. You can check it,\nthat is to say, but you can't crack it,\nunless someone comes through",
    "start": "379420",
    "end": "387200"
  },
  {
    "text": "with breakthrough\non the NP problems. Because if you\nsolve one of them, you can solve all of them.",
    "start": "387200",
    "end": "392950"
  },
  {
    "text": "And then they're\nsubsets of this. This is a little less critical\nfor today's discussion. But there's NP complete,\nan example of which",
    "start": "392950",
    "end": "400480"
  },
  {
    "text": "is the traveling salesman. Can you get through\nall the vertices on the trip with a mileage\nbelow some threshold.",
    "start": "400480",
    "end": "410860"
  },
  {
    "text": "And an MP hard version\nof that same thing is what's the minimum\nmileage that you can get, not just less than x,\nbut how much less than x?",
    "start": "410860",
    "end": "420010"
  },
  {
    "text": "And the worst case scenario is\nundecidable, where you really, even given an unlimited\namount of time and space,",
    "start": "420010",
    "end": "427120"
  },
  {
    "text": "you can't tell whether it is. And the classic one is the\nprogram halting problem where you don't know whether\nyour program is going to halt",
    "start": "427120",
    "end": "433509"
  },
  {
    "text": "and probably all of you\nhave run into that problem. I'm just being funny.",
    "start": "433510",
    "end": "439070"
  },
  {
    "text": "So but I mean, it is a real--\nthe program halting problem is a serious\nmathematical construct.",
    "start": "439070",
    "end": "445840"
  },
  {
    "text": "OK.  How do we deal with this? How do we start\nthinking about ways",
    "start": "445840",
    "end": "453022"
  },
  {
    "text": "that we've dealt with\nit before and ways that biology could change\nthe landscape a little bit?",
    "start": "453023",
    "end": "459880"
  },
  {
    "text": "Usually, what we do when we're\nfaced with an NP hard problem",
    "start": "459880",
    "end": "465040"
  },
  {
    "text": "is cheat in some way or another. You redefine the problem,\nso it's in class P,",
    "start": "465040",
    "end": "471490"
  },
  {
    "text": "sometimes sacrificing something. So you might have-- if you're interested\nin tertiary structure,",
    "start": "471490",
    "end": "477160"
  },
  {
    "text": "you may be defined\nas a secondary. And we showed that secondary\nstructure for RNase",
    "start": "477160",
    "end": "483180"
  },
  {
    "text": "can be solved with the\ndynamic programming algorithm with N\nsquared or worst, N to the the sixth algorithm.",
    "start": "483180",
    "end": "490540"
  },
  {
    "text": "Whether that is as precise\nas the most precise tertiary",
    "start": "490540",
    "end": "495940"
  },
  {
    "text": "structure that one could get\ngiven infinite exponential time",
    "start": "495940",
    "end": "501160"
  },
  {
    "text": "is an open question. Probably not. ",
    "start": "501160",
    "end": "510190"
  },
  {
    "text": "If N is a small enough, we\nshowed that exponential times can be reasonable.",
    "start": "510190",
    "end": "515690"
  },
  {
    "text": "And so you just do\nan exhaustive search. Or if you can't\ndo that, then you use some clever heuristic\nway of pruning things.",
    "start": "515690",
    "end": "524260"
  },
  {
    "text": "And that's in a\ncertain sense, that's what most of the\napproximations are.",
    "start": "524260",
    "end": "530420"
  },
  {
    "text": "So what can biology do? We'll talk about three\nexamples in today.",
    "start": "530420",
    "end": "535640"
  },
  {
    "text": "One is DNA computing. One is genetic algorithms\nand neural networks.",
    "start": "535640",
    "end": "540790"
  },
  {
    "text": "The first one in a certain-- none of these really\nactually solve the problem.",
    "start": "540790",
    "end": "547339"
  },
  {
    "text": "The first one is a\nway of just obtaining a lot more raw computing power. I'll show you a\nquote where they say",
    "start": "547340",
    "end": "554200"
  },
  {
    "text": "they've solved an\nNP complete problem, but it's in the\nsame sense that you can solve any exponential\nproblem by brute force.",
    "start": "554200",
    "end": "561189"
  },
  {
    "text": "That's not really\nfinessing it out of NP and into P.\nGenetic algorithms",
    "start": "561190",
    "end": "566860"
  },
  {
    "text": "and neural networks are\ndefinitely heuristics. They're beautifully inspired by\ntwo of the greatest algorithms",
    "start": "566860",
    "end": "574810"
  },
  {
    "text": "in the history of life on\nEarth and that is evolution",
    "start": "574810",
    "end": "579910"
  },
  {
    "text": "and complex brain networks. And we'll get--",
    "start": "579910",
    "end": "585820"
  },
  {
    "text": "And so genetic\nalgorithms is based on the adaptation that\noccurs during evolution",
    "start": "585820",
    "end": "591670"
  },
  {
    "text": "and recombination\nand mutagenesis. And neural network is\nalso about adaptation,",
    "start": "591670",
    "end": "596710"
  },
  {
    "text": "but this is on the\ntime scale of learning. So we'll first\ndedicate ourselves",
    "start": "596710",
    "end": "603940"
  },
  {
    "text": "to molecular computing\nand associated just kind",
    "start": "603940",
    "end": "609040"
  },
  {
    "text": "of put it in the context of\nnanocomputing in general. And you can see all the\nissues in computing, not just",
    "start": "609040",
    "end": "615460"
  },
  {
    "text": "the math module. So all the steps are assembly\nof the requisite hardware.",
    "start": "615460",
    "end": "625630"
  },
  {
    "text": "This is some kind of factory\noperation, typically. Then there's some of input\nmodule, some hardware",
    "start": "625630",
    "end": "632530"
  },
  {
    "text": "and software that's required\nfor getting the data in. Then there's some\nsort of memory. And then there's a central\nprocessor, might have math",
    "start": "632530",
    "end": "640900"
  },
  {
    "text": "components and output. This is from our first lecture,\nassembly input, memory process,",
    "start": "640900",
    "end": "646780"
  },
  {
    "text": "and output. And what we want\nto do with biology is we want to harvest\nthings from genomics",
    "start": "646780",
    "end": "653800"
  },
  {
    "text": "and from just biological\nresearch in general, use to design better\ncomputers either in silico",
    "start": "653800",
    "end": "660250"
  },
  {
    "text": "or in a biological,\nbiochemical sense. And then, harness evolution,\neither to make devices or as",
    "start": "660250",
    "end": "668889"
  },
  {
    "text": "part of algorithm development. We have-- different people\nhave different opinions",
    "start": "668890",
    "end": "679990"
  },
  {
    "text": "about how much\nlonger Moore's law, the scaling for large scale\nintegrated circuits or curves",
    "start": "679990",
    "end": "689200"
  },
  {
    "text": "files version that goes back to\n1900s, about doubling every two years, the ability to calculate,\ncalculations per second,",
    "start": "689200",
    "end": "700190"
  },
  {
    "text": "per 1,000 [INAUDIBLE]. There might be\nanother decade left in the silicone, a large\nscale integrated circuit.",
    "start": "700190",
    "end": "707720"
  },
  {
    "text": "That's what some people say,\nor maybe more, maybe less. So there are three\nreal options here",
    "start": "707720",
    "end": "714350"
  },
  {
    "text": "for that next step,\nelectronic nanocomputing,",
    "start": "714350",
    "end": "724279"
  },
  {
    "text": "optical nanocomputing,\nmolecular nanocomputing and you could add to this\nquantum computing, so maybe",
    "start": "724280",
    "end": "729320"
  },
  {
    "text": "four different options\nfor beating Moore's law or extending Moore's\nlaw, depending on how you look at it.",
    "start": "729320",
    "end": "735060"
  },
  {
    "text": "So let's just walk through\nthem quickly, one at a time. Optical computing you can\nthink of as already here",
    "start": "735060",
    "end": "742130"
  },
  {
    "text": "in a sense in that our\noptical fiber networks have very fast switches\nthat are required",
    "start": "742130",
    "end": "747830"
  },
  {
    "text": "for a good deal of\nour fastest internet. ",
    "start": "747830",
    "end": "753290"
  },
  {
    "text": "And there are various\ndemonstrations where you can do optical\ncomputing for many of the tasks, not just\nthe data transfer.",
    "start": "753290",
    "end": "761690"
  },
  {
    "text": "And just like many\nother things, there's a desire to shrink\nthis down for cost",
    "start": "761690",
    "end": "767300"
  },
  {
    "text": "of manufacturing and quality. And so forth. The advantages of optical over\nelectronic, typical computers",
    "start": "767300",
    "end": "777080"
  },
  {
    "text": "is that they are, for a\ngiven set of operations,",
    "start": "777080",
    "end": "783080"
  },
  {
    "text": "there's the general\nsentiment that it might be lower heat generation.",
    "start": "783080",
    "end": "788270"
  },
  {
    "text": "It goes at the speed\nof light, rather than the slightly lower\nthan speed of light",
    "start": "788270",
    "end": "793910"
  },
  {
    "text": "that typically comes into\nactual implementations in electronic circuits.",
    "start": "793910",
    "end": "799339"
  },
  {
    "text": "And here's two examples taken\nfrom the literature of getting",
    "start": "799340",
    "end": "804440"
  },
  {
    "text": "natural sort of\nself-assembly, just as we've seen in many\nbiological systems, we get self-assembly of\nmembranes, self-assembly",
    "start": "804440",
    "end": "811610"
  },
  {
    "text": "of multi-protein complexes. Here you have, you want to\nmake particular kind of size",
    "start": "811610",
    "end": "818930"
  },
  {
    "text": "of optical particles that\nhave the right rank of index",
    "start": "818930",
    "end": "826339"
  },
  {
    "text": "and spacing and\nshape and so forth. And you can use self-assembly\nhere for that thing.",
    "start": "826340",
    "end": "832130"
  },
  {
    "text": "These are examples of where\nwe're getting in the nanometer range here. This is a 5 micron\nscale object here.",
    "start": "832130",
    "end": "839960"
  },
  {
    "start": "839960",
    "end": "846070"
  },
  {
    "text": "I've chosen this\nparticular example, there are a number of examples\nof electronic nanocomputing",
    "start": "846070",
    "end": "852670"
  },
  {
    "text": "where the electronics is getting\ndown to the size of molecules. Here the molecule\nchosen is a polymer",
    "start": "852670",
    "end": "859990"
  },
  {
    "text": "of carbon, not a\nhydrocarbon, but carbon. It's like the buckyballs\nwhich is carbon-60",
    "start": "859990",
    "end": "866320"
  },
  {
    "text": "or graphite rolled up in\nthe tubes, these nanotubes, can be used as transistor like\nelements in very tiny circuits.",
    "start": "866320",
    "end": "875560"
  },
  {
    "text": "This is just a schematic. This isn't actually\na micrograph, right. And here are four\ncircuits that kind of",
    "start": "875560",
    "end": "881650"
  },
  {
    "text": "reflect what might\nbe your first four projects in an introductory\nelectronics course,",
    "start": "881650",
    "end": "889120"
  },
  {
    "text": "ignoring the fact that you\nmight not use nanotubes. But you would have voltage\nin and voltage out.",
    "start": "889120",
    "end": "895930"
  },
  {
    "text": "In other words, this is\na transistor like circuit or an inverter like circuit\nin the upper left hand",
    "start": "895930",
    "end": "901570"
  },
  {
    "text": "corner of slide 10. And the nanotube here is\nin the middle in series",
    "start": "901570",
    "end": "907960"
  },
  {
    "text": "with a resistor going from\nhigh voltage to the ground at the lower part and the\nvoltage in essentially",
    "start": "907960",
    "end": "915220"
  },
  {
    "text": "modulates the voltage out\nin the nonlinear curve. And you can see this highly\ncooperative curve just",
    "start": "915220",
    "end": "921268"
  },
  {
    "text": "like the ones that\nwe've been talking about in a number of other\nbiological and physical systems.",
    "start": "921268",
    "end": "927290"
  },
  {
    "text": "The upper right,\nyou have a NOR gate. Almost every circuit can be\nmade by combinations simply",
    "start": "927290",
    "end": "932680"
  },
  {
    "text": "by [? not ?] [? OARS. ?] This is\nan inverter plus an [? OAR. ?]",
    "start": "932680",
    "end": "939250"
  },
  {
    "text": "And so you can see that there\nnow have two inputs on the left and right in 1 and 2.",
    "start": "939250",
    "end": "944710"
  },
  {
    "text": "And they can have\nstates 1-1, 1-0, 0-1, 0-0, going from left to right.",
    "start": "944710",
    "end": "950030"
  },
  {
    "text": "And you can see\nonly when they're both 0, does the whole circuit\nnow, output go down to 0",
    "start": "950030",
    "end": "956050"
  },
  {
    "text": "for low voltage for output. So input, the three\npossible input combinations",
    "start": "956050",
    "end": "962110"
  },
  {
    "text": "and the last one\ngets the [? low. ?] And this is all done\nthis is all done with these kind of\nmolecular scale nanotubes.",
    "start": "962110",
    "end": "970030"
  },
  {
    "text": "Here's a RAM, required two\nnanotubes in order to store, whether it's either where you\nflip it from open to flip it",
    "start": "970030",
    "end": "978670"
  },
  {
    "text": "from low to high. And the last example,\nin the lower right, you now need 3 nanotubes.",
    "start": "978670",
    "end": "984160"
  },
  {
    "text": "You see, we worked our way up\nin complexity from 1 to 2 to 3. And you need 3 in order to\nget a ring oscillator use.",
    "start": "984160",
    "end": "990100"
  },
  {
    "text": "I mean, that's the way\nyou would think about. Most easily think\nabout it, where we have the first one's output\naffecting the second one.",
    "start": "990100",
    "end": "998600"
  },
  {
    "text": "The second one affecting\nthe third and third one looping back to the first. And the result of this\nas you get a series",
    "start": "998600",
    "end": "1004890"
  },
  {
    "text": "of peaks and troughs\nhere, which you used for synchronizing\ncircuits or generating",
    "start": "1004890",
    "end": "1010080"
  },
  {
    "text": "other useful\nsinusoidal processes.",
    "start": "1010080",
    "end": "1015450"
  },
  {
    "text": "Now that's one example-- so the optical electronic.",
    "start": "1015450",
    "end": "1021810"
  },
  {
    "text": "Molecular includes a number\nof different possibilities, including DNA which is what\nwe'll focus on, DNA computing.",
    "start": "1021810",
    "end": "1028680"
  },
  {
    "text": "And this was\nstarted by a person, a physicist famous for thinking\nout of the box quite a bit.",
    "start": "1028680",
    "end": "1035490"
  },
  {
    "text": "Feynman in 1959, when he\nwas still fairly young, gave a talk entitled There's\nPlenty of Room at the Bottom.",
    "start": "1035490",
    "end": "1042869"
  },
  {
    "text": "And by that he\nmeant that we can-- just as we can machine\nand manufacture objects",
    "start": "1042869",
    "end": "1052350"
  },
  {
    "text": "under fairly\nautomated fashion, we should be able to scale\nthat down to the point",
    "start": "1052350",
    "end": "1059580"
  },
  {
    "text": "where we're manipulating\nindividual atoms. And he couldn't think\nof any physical reason,",
    "start": "1059580",
    "end": "1065145"
  },
  {
    "text": "such as the uncertainty\nprinciple or anything like that, that would\nprevent one from doing that, manipulating individual atoms.",
    "start": "1065145",
    "end": "1070620"
  },
  {
    "text": "And many years later now, he's\nbeen proven right and that we are doing that, albeit not\nin any really high production",
    "start": "1070620",
    "end": "1077700"
  },
  {
    "text": "method. Drexler and his thesis\nand subsequently has championed, is probably\nthe right word, this notion",
    "start": "1077700",
    "end": "1087279"
  },
  {
    "text": "and given it the name\nnanotechnology and nanosystems and really fleshed\nout some of the things",
    "start": "1087280",
    "end": "1093510"
  },
  {
    "text": "that one might be\nable to do if you had a much higher throughput way\nof dealing with manufacturing",
    "start": "1093510",
    "end": "1100140"
  },
  {
    "text": "at atomic scale. However, even he did not\nreally connect all the dots",
    "start": "1100140",
    "end": "1105780"
  },
  {
    "text": "between where we are\nnow and where and how we get to the very\nfirst nano-assemblers",
    "start": "1105780",
    "end": "1111330"
  },
  {
    "text": "and nanotechnology. Since then, there's been kind\nof a Renaissance of interest",
    "start": "1111330",
    "end": "1116340"
  },
  {
    "text": "in this with a recognition that\nbiological systems actually are naturally doing nanotech\nscale, atomic manipulations.",
    "start": "1116340",
    "end": "1126660"
  },
  {
    "text": "And you've seen a few examples\nof that in this course. But the particular instance\nthat we'll use as a jumping off",
    "start": "1126660",
    "end": "1136650"
  },
  {
    "text": "point for discussion\nof all the steps that could be where biology\nand molecular mining",
    "start": "1136650",
    "end": "1146530"
  },
  {
    "text": "could give us new\ntools, whether it's from assembly inputs,\nmemory computation output.",
    "start": "1146530",
    "end": "1156430"
  },
  {
    "text": "We'll start with Len Adleman's\npace changing paper in 1994.",
    "start": "1156430",
    "end": "1165670"
  },
  {
    "text": "This is the A of the RSA that we\ntalked about a few minutes ago.",
    "start": "1165670",
    "end": "1172310"
  },
  {
    "text": "He was obviously a hardcore\nand is algorithmics expert",
    "start": "1172310",
    "end": "1180080"
  },
  {
    "text": "and decided in\n1994 to actually do",
    "start": "1180080",
    "end": "1185419"
  },
  {
    "text": "a paper that required\nnot only algorithmic, but a huge change in the way\nyou implemented the algorithms.",
    "start": "1185420",
    "end": "1191120"
  },
  {
    "text": "And then actually\nto go into the lab into a biochemical\nlaboratory which he was not previously trained.",
    "start": "1191120",
    "end": "1199130"
  },
  {
    "text": "And to author-- it's a\nsingle author paper that included such things as PCR.",
    "start": "1199130",
    "end": "1204650"
  },
  {
    "text": "That was in 1994. There was no literature on\nthe subject of DNA computers before that.",
    "start": "1204650",
    "end": "1210740"
  },
  {
    "text": "A mere six years later,\nthere were 520 references on the subject. So he obviously hit\nsome kind of nerve.",
    "start": "1210740",
    "end": "1217159"
  },
  {
    "text": "The first few years\nof that after that were mainly theoretical. But I'll show you some examples.",
    "start": "1217160",
    "end": "1222260"
  },
  {
    "text": "His paper had an experimental\ncomponent, and some others that I'll show you.",
    "start": "1222260",
    "end": "1229010"
  },
  {
    "text": "Since this course is really\nabout that interface, constantly checking the\ntheory with reality,",
    "start": "1229010",
    "end": "1235580"
  },
  {
    "text": "those are the ones that\nI'll emphasize here. So the question that he asked\nin 1994 and is still fresh today",
    "start": "1235580",
    "end": "1242420"
  },
  {
    "text": "is, is there a Hamiltonian\npath through all the nodes in a network? So we've been talking about\ninteresting biological",
    "start": "1242420",
    "end": "1250250"
  },
  {
    "text": "networks. But here, just in\nany network where the black nodes are\nconnected by directed edges",
    "start": "1250250",
    "end": "1257960"
  },
  {
    "text": "in this directed graph. You want to go from the\nstart, S, to the terminus T,",
    "start": "1257960",
    "end": "1263210"
  },
  {
    "text": "from 1 to 6, obeying the arrows\nand going through every point once.",
    "start": "1263210",
    "end": "1269120"
  },
  {
    "text": "How do you do this? And how do you do it in DNA? So an example of one here\nis going from S to 3 to 5",
    "start": "1269120",
    "end": "1276850"
  },
  {
    "text": "to 2 to 4 to T. So the way you do it,\nfirst in broad strokes,",
    "start": "1276850",
    "end": "1284705"
  },
  {
    "text": "you encode the graph, both\nthe nodes, black spots, and the edges into\nsingle-stranded DNA sequences.",
    "start": "1284705",
    "end": "1293779"
  },
  {
    "text": "Then you create\nall possible paths as by using\noverlapping sequences",
    "start": "1293780",
    "end": "1299510"
  },
  {
    "text": "to indicate which node is\nconnected to which other node by an edge in which direction.",
    "start": "1299510",
    "end": "1306660"
  },
  {
    "text": "So you can actually have\ndirectionality, just because DNA has directionality.",
    "start": "1306660",
    "end": "1312050"
  },
  {
    "text": "And you use DNA hybridization\nnow to do that step. Now, the first step is linear.",
    "start": "1312050",
    "end": "1317450"
  },
  {
    "text": "Encoding the graph is\nlinear with the number of points in the graph,\nthe number of places in the Hamiltonian path.",
    "start": "1317450",
    "end": "1325980"
  },
  {
    "text": "The second step\nis not something-- and that you would do by having\nyour computer program a DNA",
    "start": "1325980",
    "end": "1331400"
  },
  {
    "text": "synthesizer which is an\nautomated machine that we've described a couple of times.",
    "start": "1331400",
    "end": "1337760"
  },
  {
    "text": "But the second step\nis out of your hands. This is something that happens\nautomatically when you put DNA",
    "start": "1337760",
    "end": "1346370"
  },
  {
    "text": "in the solution. If you design these\nsequences carefully so they don't cross\nhybridize very much,",
    "start": "1346370",
    "end": "1351530"
  },
  {
    "text": "then the only way\nthey can assemble is the way you want it. Then, you finally determine\nwhere the solution exists,",
    "start": "1351530",
    "end": "1358160"
  },
  {
    "text": "and this is something which is\nalmost constant in complexity. So the entire thing\nscales very gracefully",
    "start": "1358160",
    "end": "1365240"
  },
  {
    "text": "instead of scaling exponentially\nas the Hamiltonian path problem normally would. This gives the appearance of\nscaling linearly in time, which",
    "start": "1365240",
    "end": "1375080"
  },
  {
    "text": "is really one of the best case\nscenarios for polynomial time and certainly better\nthan exponential.",
    "start": "1375080",
    "end": "1381050"
  },
  {
    "text": "So how do we actually do that? That was broad strokes. This is a more detailed view. And you can see how this really\nseems like it's going to work.",
    "start": "1381050",
    "end": "1387500"
  },
  {
    "text": "You have each of the nodes\nencoded by sequences,",
    "start": "1387500",
    "end": "1394070"
  },
  {
    "text": "let's say, red and tan here\non the top left of slide 14.",
    "start": "1394070",
    "end": "1399950"
  },
  {
    "text": "And you have, if you want to\nconnect node 3 with node 4,",
    "start": "1399950",
    "end": "1405679"
  },
  {
    "text": "so that you take the right\nhand in, the 3 prime end which is sorta greenish tan.",
    "start": "1405680",
    "end": "1411050"
  },
  {
    "text": "And you connect it now\nto the other end of, that is to say the 5\nprime end of node 4",
    "start": "1411050",
    "end": "1417800"
  },
  {
    "text": "just below it, which is blue. So now you have this\nhybrid which is ordered.",
    "start": "1417800",
    "end": "1422970"
  },
  {
    "text": "So it's an arrow\ngoing from 3 to 4 and that edge has this\nparticular sequence",
    "start": "1422970",
    "end": "1429320"
  },
  {
    "text": "going from 5 prime to 3 prime. Now, in practice, you want the\nedges to be complementary, not identical to the nodes.",
    "start": "1429320",
    "end": "1435505"
  },
  {
    "text": "And so all the\nnodes are actually represented as reverse\nsequences in the lower left hand part of slide 14.",
    "start": "1435505",
    "end": "1442940"
  },
  {
    "text": "And so represent all the\nedges that connect nodes in this directional manner.",
    "start": "1442940",
    "end": "1449150"
  },
  {
    "text": "And then an example of\nhow you would connect three nodes, 3 to 4 to 5 by two\nconnecting directional edges,",
    "start": "1449150",
    "end": "1459380"
  },
  {
    "text": "3, 4, 4, 5 is shown here. All the nodes are in\nreverse compliments",
    "start": "1459380",
    "end": "1464720"
  },
  {
    "text": "and all the edges are\nin the forward direction as arbitrarily defined here.",
    "start": "1464720",
    "end": "1470120"
  },
  {
    "text": "And you can see how they\nstitch these together and you make firm connections\nthat are unambiguous,",
    "start": "1470120",
    "end": "1476270"
  },
  {
    "text": "non cross-reacting and have\na direct directionality. Now that you are starting\nto get the idea that now we",
    "start": "1476270",
    "end": "1483919"
  },
  {
    "text": "can encode this in DNA. But how are we going to\nactually do the computation and how are we going to\nfind out who the winner is?",
    "start": "1483920",
    "end": "1491480"
  },
  {
    "text": "So what is done, remember, we\nwant to create all the paths",
    "start": "1491480",
    "end": "1496610"
  },
  {
    "text": "and then to ask whether any of\nthem go through all the points? And then do any of them\ngo through all the points",
    "start": "1496610",
    "end": "1502280"
  },
  {
    "text": "exactly once? So the first thing is to\ncreate all the paths from start to terminus.",
    "start": "1502280",
    "end": "1508460"
  },
  {
    "text": "And by just throwing\nin this mixture of all the edges\nand all the nodes, you will create in\nprinciple all the paths.",
    "start": "1508460",
    "end": "1516020"
  },
  {
    "text": "Now you want to write, you\nwill go from the prefix of one into the suffix of the other in\nthe same way that illustrated",
    "start": "1516020",
    "end": "1523610"
  },
  {
    "text": "on the previous slide. And here are some examples\nof some of the paths, some are very short.",
    "start": "1523610",
    "end": "1528710"
  },
  {
    "text": "This only goes\nthrough the 1, 2 4, 6, only goes through 4 the nodes,\nthat's not all 6 of them.",
    "start": "1528710",
    "end": "1534929"
  },
  {
    "text": "The bottom one goes through\ntoo many nodes and some of them it's going through repetitively. But you get the idea is that\nyou can define the path in terms",
    "start": "1534930",
    "end": "1542953"
  },
  {
    "text": "of all these edges\nand the reverse complements which\nrepresent the nodes. But here's the actual\nalgorithm as encoded in DNA",
    "start": "1542953",
    "end": "1550850"
  },
  {
    "text": "and implemented by\npractical methods that a computer scientist\ncan do without too much help,",
    "start": "1550850",
    "end": "1560450"
  },
  {
    "text": "at least not enough help\nrequired for co-authorship. So we've already encoded the\ngraphs in the DNA sequences.",
    "start": "1560450",
    "end": "1568800"
  },
  {
    "text": "And this is done by automated\noligonucleotide synthesis. You create all the paths from\nST by PCR amplifying from the S",
    "start": "1568800",
    "end": "1575870"
  },
  {
    "text": "end of the oligo to the T end. So that means, the mere\nfact that they PCR amplify means they must contain node 1\nand 6, the start of terminus.",
    "start": "1575870",
    "end": "1585210"
  },
  {
    "text": "So that's good. Now, you want to get the\nones that visit every node, so by serial hybridization, you\ncan have nodes 2, 3, 4 and 5",
    "start": "1585210",
    "end": "1594710"
  },
  {
    "text": "immobilized. And you bind the PCR products\nto it, and you'll loop from 2",
    "start": "1594710",
    "end": "1599810"
  },
  {
    "text": "and then in series you bind\nto 3, loop from 3, bind to 4, loop for 4, 5. So now you know it has 1 in 6\nbecause that's the PCR primers.",
    "start": "1599810",
    "end": "1607400"
  },
  {
    "text": "It has 2, 3, 4 and 5\nbecause it balances them in series by hybridization. Then, but that,\nyou could get some",
    "start": "1607400",
    "end": "1615260"
  },
  {
    "text": "of those long paths that\nwent through multiple nodes multiple times.",
    "start": "1615260",
    "end": "1620900"
  },
  {
    "text": "If you want it to\nhave exactly N nodes, then what you do is sort\nof of electric [? thread ?] [? excising. ?] And here if\nyou have a calibration curve",
    "start": "1620900",
    "end": "1632450"
  },
  {
    "text": "as shown on the\nbottom of slide 16, we have known DNA size markers\nand known PCR products going,",
    "start": "1632450",
    "end": "1640309"
  },
  {
    "text": "showing you have one of\nthese DNA nodes, 2, 3,",
    "start": "1640310",
    "end": "1647540"
  },
  {
    "text": "all the way up to 6. And if you find a solution\nthat has all these properties, PCRs, does serial\nhybridization to all the nodes",
    "start": "1647540",
    "end": "1655250"
  },
  {
    "text": "and is the right length,\nsuch as the one in column 6,",
    "start": "1655250",
    "end": "1660290"
  },
  {
    "text": "then you know you've\ngot a solution. And that was Len\nAdleman's argument",
    "start": "1660290",
    "end": "1665310"
  },
  {
    "text": "that he had DNA\ncomputing working. Six years later, we now have,\nor as of six years later,",
    "start": "1665310",
    "end": "1672370"
  },
  {
    "text": "there were now over\n500 examples of this.",
    "start": "1672370",
    "end": "1677490"
  },
  {
    "text": "I'll show you this example\nas both as an introduction to the satisfiability\nproblem and also",
    "start": "1677490",
    "end": "1685559"
  },
  {
    "text": "as showing that you\ncan do RNA computing and that you can encode\ntwo-dimensional objects",
    "start": "1685560",
    "end": "1692909"
  },
  {
    "text": "and it illustrates\na number of things. The problem here is a test\nproblem, very simple test board.",
    "start": "1692910",
    "end": "1698020"
  },
  {
    "text": "It's not 8 by 8, but 3 by 3. And you've got an artificial\nnumber of knights here.",
    "start": "1698020",
    "end": "1705010"
  },
  {
    "text": "And those of you\nwho know chess know that these knights can attack\nin a curious combination",
    "start": "1705010",
    "end": "1710730"
  },
  {
    "text": "of straight and diagonal. And it doesn't really matter. The point is there are a\nvariety of arrangements",
    "start": "1710730",
    "end": "1717030"
  },
  {
    "text": "of any number of knights\nsuch that none of them can attack each other and\nthey're all kind of at peace",
    "start": "1717030",
    "end": "1722310"
  },
  {
    "text": "here. And that the object\nof this algorithm is to find those combinations.",
    "start": "1722310",
    "end": "1728130"
  },
  {
    "text": "And here's-- and you\ndo it by cloning. So that was something that was\nnot in the previous example.",
    "start": "1728130",
    "end": "1734639"
  },
  {
    "text": "By cloning, you can find\neach of the solutions. And you then determine\nwhat is present and sits along that clone.",
    "start": "1734640",
    "end": "1741059"
  },
  {
    "text": "It's kind of like haplotyping\nor splice form analysis. You can really only\nanalyze these things",
    "start": "1741060",
    "end": "1747690"
  },
  {
    "text": "by looking at the product\nof a single molecule. And that's what\ncloning is about, looking at, amplifying that\nsingle molecule up to the point",
    "start": "1747690",
    "end": "1754650"
  },
  {
    "text": "where you can analyze it. So that's one thing that's new. The other thing is new, is\nyou start with an RNA in order",
    "start": "1754650",
    "end": "1761610"
  },
  {
    "text": "that you can use this powerful\nmethod, this enzyme called RNase H which will--\nit has a property",
    "start": "1761610",
    "end": "1768270"
  },
  {
    "text": "that when you bind a\nDNA oligonucleotide to an RNA and their\ncomplementary RNase H",
    "start": "1768270",
    "end": "1776280"
  },
  {
    "text": "will destroy the\nRNA at that point, at the point of hybridization.",
    "start": "1776280",
    "end": "1781930"
  },
  {
    "text": "So it's a way of eliminating\nan entire molecule if it happens to have a\nparticular sequence in it.",
    "start": "1781930",
    "end": "1788350"
  },
  {
    "text": "And so one of the ways that\nyou can ask logical questions about each molecule in a large\ncomplex mixture of molecules",
    "start": "1788350",
    "end": "1796210"
  },
  {
    "text": "is using this RNase elimination. And in a way, it's a way of\ndesigning an infinite number",
    "start": "1796210",
    "end": "1802960"
  },
  {
    "text": "of restriction enzymes. The RNase plus the\nDNA oligonucleotide provides in a certain sense,\na custom restriction enzyme.",
    "start": "1802960",
    "end": "1811132"
  },
  {
    "text": "Any case, the other\nthing that's unusual here is the idea of using\nsplit and pool oligonucleotide synthesis.",
    "start": "1811133",
    "end": "1816460"
  },
  {
    "text": "We introduced this\nin the lecture where we were introducing drug\nprotein interaction and ways",
    "start": "1816460",
    "end": "1827230"
  },
  {
    "text": "of synthesizing drugs and other\nmolecules by Poole synthesis. And the idea behind split Poole\nsynthesis in this case is that",
    "start": "1827230",
    "end": "1836950"
  },
  {
    "text": "each of the squares in this 3\nby 3 matrix can have two states,",
    "start": "1836950",
    "end": "1842019"
  },
  {
    "text": "either has a knight\nor it doesn't. Each of those two states,\nyou can consider a 0 or 1. You can represent them as\ntwo different sequences.",
    "start": "1842020",
    "end": "1849900"
  },
  {
    "text": "Sequence A or sequence A\nprime, representing presence or absence of something.",
    "start": "1849900",
    "end": "1855380"
  },
  {
    "text": "And so you basically have 2-- you have 8 squares\nand so you have 2",
    "start": "1855380",
    "end": "1862000"
  },
  {
    "text": "to the 9th different\npossibilities. And so down below they\nsynthesized a set of polymers",
    "start": "1862000",
    "end": "1869470"
  },
  {
    "text": "where you have every possible\nbinary state for this 3 by 3 grid.",
    "start": "1869470",
    "end": "1875560"
  },
  {
    "text": "And that's done by--\nyou're synthesizing along and you come to where\nyou're going to synthesize either A or A prime.",
    "start": "1875560",
    "end": "1880720"
  },
  {
    "text": "You split it. Half of this pool gets a A. Half\nof it gets sequence A prime. Pull back the other half\ngets B, half gets B prime.",
    "start": "1880720",
    "end": "1888720"
  },
  {
    "text": "Pool them and split\nthem and C and C prime and so forth, all the way out. You really only\nneed nine of these. They did 10 for some\nreason or other.",
    "start": "1888720",
    "end": "1895309"
  },
  {
    "text": "But the point is to get\n2 to the ninth power, you need nine of these. And then as you can--",
    "start": "1895310",
    "end": "1901873"
  },
  {
    "text": "then you can read them\nout electrophoretically just as the electrophoretic\nreadout gave a sizing",
    "start": "1901873",
    "end": "1907750"
  },
  {
    "text": "in the first DNA\ncomputing, you can use it to get the sizes of these.",
    "start": "1907750",
    "end": "1913360"
  },
  {
    "text": "And you can see--\nyou could read out-- Here's two solutions, BEFH\nreferring to the squares on a 3",
    "start": "1913360",
    "end": "1918760"
  },
  {
    "text": "by 3 grid and EFC, these\nare both solutions. BEFH, the way of\nreading this off",
    "start": "1918760",
    "end": "1926140"
  },
  {
    "text": "this combinatorial\nsynthesis from the bottom is you've got A through I as the\npossible bit binary signatures.",
    "start": "1926140",
    "end": "1933370"
  },
  {
    "text": "And then you have two columns,\neither the 0 column or the 1, two states, the two sequences.",
    "start": "1933370",
    "end": "1939010"
  },
  {
    "text": "And as you PCR from\nthe end tag out to each",
    "start": "1939010",
    "end": "1944350"
  },
  {
    "text": "of these tags, A or A prime,\nB or B prime, and so forth. Then you get-- these are all-- you'll get this\ngraduated series.",
    "start": "1944350",
    "end": "1951034"
  },
  {
    "text": "It will tell you,\nyou've got a little-- you've got, A is in the 0 state. B is in the 1 state.",
    "start": "1951035",
    "end": "1957940"
  },
  {
    "text": "C and D are in the 0 state. E is in the 1 state so forth. And so I've circled B being\nin the 1 stage showing",
    "start": "1957940",
    "end": "1964660"
  },
  {
    "text": "that there's a\nKnight in position B. And you can go through the same\nthing for the other solutions.",
    "start": "1964660",
    "end": "1971290"
  },
  {
    "text": "Each of these to\ndevelop as a clone. And there's an and-- the neat thing about\nall these problems",
    "start": "1971290",
    "end": "1976630"
  },
  {
    "text": "is they have multiple\nrepresentations. You represent them in DNA. You represent them in data. You can represent them\nas a Boolean logical set",
    "start": "1976630",
    "end": "1984580"
  },
  {
    "text": "of operations where\nthese things represent ANDs and ORs at the bottom\nof the slide and so on.",
    "start": "1984580",
    "end": "1992120"
  },
  {
    "text": "And you will see that\nin the last examples where I've just kind\nof breezed through,",
    "start": "1992120",
    "end": "2000570"
  },
  {
    "text": "where that set of\nlogical operations is probably one of the\nfavorite points of attack",
    "start": "2000570",
    "end": "2008399"
  },
  {
    "text": "for DNA computing still today. So what are the problems\nand the advantages?",
    "start": "2008400",
    "end": "2014250"
  },
  {
    "text": "The problems are that yes,\nit is polynomial time. In fact, it's close to linear\ntime with a number of inputs",
    "start": "2014250",
    "end": "2021400"
  },
  {
    "text": "in. In terms of synthesis\nneeds, you know, your computer tells a\nsynthesizer what to make.",
    "start": "2021400",
    "end": "2027180"
  },
  {
    "text": "And then enzymes\nwill or hybridisation will do this highly parallel\nreaction independent of N.",
    "start": "2027180",
    "end": "2037470"
  },
  {
    "text": "So basically constant time. So it's linear\ntime for synthesis, constant time for the computing,\nand constant time for the",
    "start": "2037470",
    "end": "2045720"
  },
  {
    "text": "getting the answer right out. But you have\nexponential volumes. For example, a\nhundred-node graph,",
    "start": "2045720",
    "end": "2052500"
  },
  {
    "text": "we've been talking about the\nvarious graphs solutions might be 10 to the 30th molecules.",
    "start": "2052500",
    "end": "2057899"
  },
  {
    "text": "And if any of you\nhave ever tried to synthesize a mole or\n10 to the 24th molecules,",
    "start": "2057900",
    "end": "2064679"
  },
  {
    "text": "you realize it would bankrupt\nour planet to make 10 to the 30th molecules.",
    "start": "2064679",
    "end": "2070329"
  },
  {
    "text": "So in addition, the\nelementary steps are slow. It's highly parallel.",
    "start": "2070330",
    "end": "2076850"
  },
  {
    "text": "You can imagine having\ntrillions of molecules",
    "start": "2076850",
    "end": "2082190"
  },
  {
    "text": "computing in parallel,\nbut the elementary steps of hybridization and DNA\npolymerase or RNase H",
    "start": "2082190",
    "end": "2088370"
  },
  {
    "text": "and so forth, typically are\nin the millihertz range. That is to say, it might take\n1,000 seconds, rather than",
    "start": "2088370",
    "end": "2095000"
  },
  {
    "text": "gigahertz, which would be\na billionth of a second. So there might be a 10\nto the 12th gap in rate",
    "start": "2095000",
    "end": "2102260"
  },
  {
    "text": "of executing the commands,\nbut there's more, the hope is that\nthere's more than a 10",
    "start": "2102260",
    "end": "2107710"
  },
  {
    "text": "to the 12th advantage\nin parallelism. In addition, experimental errors\nmustn't be swept under the rug.",
    "start": "2107710",
    "end": "2115700"
  },
  {
    "text": "You've got issues with mismatch. There's a limit that\njust how cleverly you can design all these sequences.",
    "start": "2115700",
    "end": "2121010"
  },
  {
    "text": "As the graph gets\nbigger, you need to have more and more\nsequences involved.",
    "start": "2121010",
    "end": "2126494"
  },
  {
    "text": "And that means that\nyou're going to get more and more cross\nhybridization, incomplete cleavage,\nand so forth.",
    "start": "2126495",
    "end": "2132120"
  },
  {
    "text": "There are-- when this\nslide 18 says non-reusable, there are reusable forms.",
    "start": "2132120",
    "end": "2138109"
  },
  {
    "text": "And we'll get to those\nin just a minute. So those are the disadvantages. What are the promises or\nthe possible advantages?",
    "start": "2138110",
    "end": "2143840"
  },
  {
    "text": "High parallelism, could\nbe much more than the 10 to the 12th fold loss in speed.",
    "start": "2143840",
    "end": "2149329"
  },
  {
    "text": " When computer\nhardware and people",
    "start": "2149330",
    "end": "2158300"
  },
  {
    "text": "dream of the next\ngeneration of computers, they hope to get away from\nthe current record, which",
    "start": "2158300",
    "end": "2166130"
  },
  {
    "text": "is around 10 to the 9th\noperations per joule for conventional computers.",
    "start": "2166130",
    "end": "2172760"
  },
  {
    "text": "Maybe that's not a record but\nit's conventional computers. Closer to the 34 times 10 to\nthe 19th operations per joule",
    "start": "2172760",
    "end": "2179558"
  },
  {
    "text": "that you should be\nable to squeak out near the thermodynamic limit. And as it turns out, many DNA\nenzymes such as DNA polymerase",
    "start": "2179558",
    "end": "2186380"
  },
  {
    "text": "are already within\na factor of 10 of that goal, while\nconventional computers are off",
    "start": "2186380",
    "end": "2191390"
  },
  {
    "text": "by 10 factors of 10 or more. If one can quote, solve, or\none NP-complete solve problem,",
    "start": "2191390",
    "end": "2202060"
  },
  {
    "text": "you can get many. ",
    "start": "2202060",
    "end": "2208161"
  },
  {
    "text": "The improvements that we'll\njust kind of briefly talk about that keep people\nexcited about this",
    "start": "2208162",
    "end": "2214960"
  },
  {
    "text": "are that this is a\nnatural way of talking to biological problems. If there are biological\nproblems, you can--",
    "start": "2214960",
    "end": "2221275"
  },
  {
    "text": " It may be a smaller step\nto get to DNA computing,",
    "start": "2221275",
    "end": "2227150"
  },
  {
    "text": "and there are faster\nreadout methods just as there are faster and\nfaster computational methods.",
    "start": "2227150",
    "end": "2233140"
  },
  {
    "text": "And natural\nselection, evolution, is something that you can use on\nDNA computers, which so far has",
    "start": "2233140",
    "end": "2238390"
  },
  {
    "text": "not been extremely powerful\nin conventional computers,",
    "start": "2238390",
    "end": "2244990"
  },
  {
    "text": "although we'll talk about\ngenetic algorithms shortly. So one way of getting\nreuse is to have",
    "start": "2244990",
    "end": "2251200"
  },
  {
    "text": "a so-called sticker-based\nmodel or something where you're basically just\nusing the hybridization",
    "start": "2251200",
    "end": "2256690"
  },
  {
    "text": "properties without\nbeing destructive. And here's an example.",
    "start": "2256690",
    "end": "2262579"
  },
  {
    "text": "I'm not going to walk\nthrough it too much. I should point out the all in\nhere includes Adleman again.",
    "start": "2262580",
    "end": "2270490"
  },
  {
    "text": "And I'll have one more example\nof his work in just a moment",
    "start": "2270490",
    "end": "2275570"
  },
  {
    "text": "here. But there are\nexamples now of work",
    "start": "2275570",
    "end": "2281380"
  },
  {
    "text": "trying to consider seriously the\namount, the volumes of DNA that are needed and ways of dealing\nwith fault tolerance or error",
    "start": "2281380",
    "end": "2290710"
  },
  {
    "text": "reduction algorithms\nwhere you actually go through and consciously say,\nOK, if we had an error here,",
    "start": "2290710",
    "end": "2297820"
  },
  {
    "text": "how would we compensate for it? How would we dedicate a\nlittle more, a few more bits to take the next step?",
    "start": "2297820",
    "end": "2307130"
  },
  {
    "text": "So just like in the\nnight test problem we had a little bit\nbefore, the idea",
    "start": "2307130",
    "end": "2314320"
  },
  {
    "text": "of using ANDs and ORs\nof Boolean variables",
    "start": "2314320",
    "end": "2319420"
  },
  {
    "text": "these X's in slide 21 which\ncan have two states 0 or 1 similar to the Boolean variables\nthat we run across from time",
    "start": "2319420",
    "end": "2326380"
  },
  {
    "text": "to time in generative models. And you can have clauses,\nwhich are basically",
    "start": "2326380",
    "end": "2332619"
  },
  {
    "text": "logical operations on the\nset of Boolean variables. We have, NOTs and ORs and ANDs.",
    "start": "2332620",
    "end": "2341320"
  },
  {
    "text": "And this kind of problem\nis a very general problem, very interesting one. And it has been tackled\njust in very analogous ways",
    "start": "2341320",
    "end": "2348819"
  },
  {
    "text": "to the ways we've been talking\nabout the previous ones where you encode the\ngraph in DNA sequences,",
    "start": "2348820",
    "end": "2356319"
  },
  {
    "text": "thereby creating all the paths\nby hybridization or something like that. And then you read it out\nwith PCR and solid phase.",
    "start": "2356320",
    "end": "2374248"
  },
  {
    "text": "And you can say, you see\nhere's a quote where they say, here we solve a\nNP-complete problem. They have indeed solved one, but\nthey haven't really turned it",
    "start": "2374248",
    "end": "2384520"
  },
  {
    "text": "into a polynomial time problem. It's simply brute force it out. And this is the most\nrecent one, just",
    "start": "2384520",
    "end": "2391630"
  },
  {
    "text": "it came out in Science again,\nLen Adleman on it, and now up to 20 variables in\na three-set problem.",
    "start": "2391630",
    "end": "2398440"
  },
  {
    "text": " So that's all about computing. It may not-- since\nDNA is relatively slow",
    "start": "2398440",
    "end": "2406900"
  },
  {
    "text": "at computing per\nstep, highly parallel, it may not be the best of the\nvarious steps in computing",
    "start": "2406900",
    "end": "2412869"
  },
  {
    "text": "assembly, input, memory,\ncomputation, and output. So we'll explore some\nof the other ones,",
    "start": "2412870",
    "end": "2419320"
  },
  {
    "text": "in particular assembly. To a certain extent,\nassembling computers is slow and so it's something where\nmolecular assembly might",
    "start": "2419320",
    "end": "2428410"
  },
  {
    "text": "have some advantages. Now this particular example, I'm\ngoing to emphasize the assembly",
    "start": "2428410",
    "end": "2434500"
  },
  {
    "text": "aspect of it, but you can think\nof this as a way of mapping, these authors have\nmapped assembly",
    "start": "2434500",
    "end": "2442240"
  },
  {
    "text": "of an actual\ntwo-dimensional piling onto an abstract but important\nand powerful computer science",
    "start": "2442240",
    "end": "2452349"
  },
  {
    "text": "concept which is the\ngeneral Turing machine, a machine, kind of a tape-like\nstructure that can compute,",
    "start": "2452350",
    "end": "2458470"
  },
  {
    "text": "do any kind of\ngeneral computing, deterministic computing. And so they mapped a\nkind of a physical tiling",
    "start": "2458470",
    "end": "2466990"
  },
  {
    "text": "as you might have a periodic\nor a periodic mosaic of tiles",
    "start": "2466990",
    "end": "2472480"
  },
  {
    "text": "onto this computing\nmachine and onto this kind of logical operation, XOR\non a string of binary bits,",
    "start": "2472480",
    "end": "2481450"
  },
  {
    "text": "just as we had in the previous\ncouple of slides on the three stat problem.",
    "start": "2481450",
    "end": "2486490"
  },
  {
    "text": "I want to emphasize the\ngeometric, physical, version of it because we're trying\nto make a transition now",
    "start": "2486490",
    "end": "2492280"
  },
  {
    "text": "in this paper which combines\nthe DNA computing with DNA assembly.",
    "start": "2492280",
    "end": "2497750"
  },
  {
    "text": "Now up it, we have three\nmore or less equivalent ways of representing\nthe same sequences.",
    "start": "2497750",
    "end": "2503660"
  },
  {
    "text": "So these are called\ntriple crossovers, because you can see, let's\ntake a look at say Y2 here,",
    "start": "2503660",
    "end": "2511460"
  },
  {
    "text": "right in the middle\nof the slide. You can see that there are\nthese multiple crossovers where",
    "start": "2511460",
    "end": "2517819"
  },
  {
    "text": "you have a kind of a\nrecombination event where you've got two\ndouble-stranded DNA molecules",
    "start": "2517820",
    "end": "2524840"
  },
  {
    "text": "that are exchanging a strand. And this is not a natural\nhomologous recombination of N in the sense\nthey're non homologous,",
    "start": "2524840",
    "end": "2530720"
  },
  {
    "text": "and this thing is kind of\ntrapped in this crossover. And the crossover, when you\nhave multiple crossovers,",
    "start": "2530720",
    "end": "2537109"
  },
  {
    "text": "you can make a piece\nof DNA that now has more than just two ends. You can have\nmultiple sticky ends.",
    "start": "2537110",
    "end": "2542720"
  },
  {
    "text": "You can have, say in this\ncase, in the upper part, you can see four different\nends with 1, 2, 3,",
    "start": "2542720",
    "end": "2553780"
  },
  {
    "text": "4 crossover strands here. And each of these, you\ncan see on the far right,",
    "start": "2553780",
    "end": "2560830"
  },
  {
    "text": "a 5 base 3 prime overhang,\nand a 7 base 5 prime overhang and some flush ends\non the far left.",
    "start": "2560830",
    "end": "2568119"
  },
  {
    "text": "And so each of these\nthings has ability to stick to other\ntiling elements.",
    "start": "2568120",
    "end": "2574720"
  },
  {
    "text": "And you can see that you\ncan put together a fairly-- a two-dimensional\nstructure, which",
    "start": "2574720",
    "end": "2583300"
  },
  {
    "text": "can be as intricate as a mosaic. It does not have\nto repeat itself, or it can repeat\nitself if you want",
    "start": "2583300",
    "end": "2589900"
  },
  {
    "text": "to use visual tools\nsuch as Fourier",
    "start": "2589900",
    "end": "2595119"
  },
  {
    "text": "transforms to look at\na repeating structure. And you can see, you can\nengineer in restriction sites",
    "start": "2595120",
    "end": "2601180"
  },
  {
    "text": "to help you analyze the\nstructure on a gel-based assay",
    "start": "2601180",
    "end": "2606400"
  },
  {
    "text": "on the far left. We've seen enough gel-based\nassays tonight already, I won't belabor, we're not\ngoing to walk you through it.",
    "start": "2606400",
    "end": "2612393"
  },
  {
    "text": "But you can see that there's--\neven though this is not straight DNA as the previous\ntwo or three examples were,",
    "start": "2612393",
    "end": "2620170"
  },
  {
    "text": "this is a much more\ncomplicated branched structure. Nevertheless, you can turn\nit into a linear readout",
    "start": "2620170",
    "end": "2628150"
  },
  {
    "text": "with electrophoretic sizes. But you can also look at it as\na truly two or three-dimensional",
    "start": "2628150",
    "end": "2635020"
  },
  {
    "text": "object here. Here we use atomic-- they use atomic force\nmicroscopy where",
    "start": "2635020",
    "end": "2641829"
  },
  {
    "text": "a probe with a single\natom at its tip is responding to the force.",
    "start": "2641830",
    "end": "2649240"
  },
  {
    "text": "That allows that as\nyou touch an object, the feedback in the system\nwith a scanning tunneling",
    "start": "2649240",
    "end": "2658450"
  },
  {
    "text": "microscope, usually as\npart of the feedback, tells you that you just\ntouched the surface",
    "start": "2658450",
    "end": "2664053"
  },
  {
    "text": "and you've got to\nback off a little bit. And then just scan along and\njust profiling the surface.",
    "start": "2664053",
    "end": "2669710"
  },
  {
    "text": "And so here, with two\ndifferent tiling methods, this is more a repetitive\nrather than aperiodic tiling.",
    "start": "2669710",
    "end": "2676150"
  },
  {
    "text": "You can see that these\nlittle pink protrusions, you can engineer into\nthe tile, not just",
    "start": "2676150",
    "end": "2681880"
  },
  {
    "text": "the two-dimensional\nstickiness, sticky tags, but a third dimension,\nwhich is a bump, which",
    "start": "2681880",
    "end": "2688780"
  },
  {
    "text": "might be a stem\nloop as we've seen in other secondary structures.",
    "start": "2688780",
    "end": "2693970"
  },
  {
    "text": "There's engineering\ninto this DNA. So now that these\nbumps will stick up and be easy targets for the\natomic force microscope.",
    "start": "2693970",
    "end": "2700580"
  },
  {
    "text": "And here you have a\nbump every second tile, and that's on the left.",
    "start": "2700580",
    "end": "2707200"
  },
  {
    "text": "And on the right\nof slide 27, you have a more complicated\ntiling where you have four different\ntypes of tiles",
    "start": "2707200",
    "end": "2713500"
  },
  {
    "text": "and a bump every fourth one. And so you expect, you can\ncalculate from the Watson-Crick",
    "start": "2713500",
    "end": "2722320"
  },
  {
    "text": "model for DNA, or more\nadvanced models of DNA, even though this is a\nlattice of brain structures,",
    "start": "2722320",
    "end": "2730870"
  },
  {
    "text": "you can calculate, it should\nbe about 33 nanometers between the bumps. And that's what's observed. And 65 nanometers is\ncalculated and observed.",
    "start": "2730870",
    "end": "2738369"
  },
  {
    "text": "You can see the\nbigger lattice spacing in these admittedly somewhat\nfuzzy atomic force micrographs.",
    "start": "2738370",
    "end": "2745390"
  },
  {
    "text": "But you can see,\nyou get something, an experimental confirmation of\nthe two-dimensional structures",
    "start": "2745390",
    "end": "2751300"
  },
  {
    "text": "here. Now this is self-assembly\nnanofabrication.",
    "start": "2751300",
    "end": "2758250"
  },
  {
    "text": "And to some extent,\nit is inspired by and can be combined\nwith microfabrication.",
    "start": "2758250",
    "end": "2765910"
  },
  {
    "text": "This is something where\nyou basically use optics, you go to the limit of\ncurrent optical manufacturing",
    "start": "2765910",
    "end": "2772869"
  },
  {
    "text": "as a microfabrication where\nit's typically hard to get below say 100 nanometers or\nso in feature size.",
    "start": "2772870",
    "end": "2781119"
  },
  {
    "text": "Here you can see this is-- and this is the\nmicrofabrication used",
    "start": "2781120",
    "end": "2786460"
  },
  {
    "text": "to make your computer chips. But it's, in this\ncase, it's used",
    "start": "2786460",
    "end": "2792370"
  },
  {
    "text": "to actually make moving\nparts, parts that move relative to one another. And that motion actually\nhas useful applications.",
    "start": "2792370",
    "end": "2804170"
  },
  {
    "text": "The first such useful\napplication that I'm aware is putting these things\ninto air bag sensors.",
    "start": "2804170",
    "end": "2810370"
  },
  {
    "text": "And the idea is that when you're\ndriving your large automobile and run into a\neven larger object,",
    "start": "2810370",
    "end": "2817660"
  },
  {
    "text": "you suddenly decelerate, either\nby brakes or some other method. And when you do, this\nlittle bitty device,",
    "start": "2817660",
    "end": "2828550"
  },
  {
    "text": "a sensor inside your--\nsomewhere in your car, will shift one of its parts\nby at least 0.2 angstroms,",
    "start": "2828550",
    "end": "2836410"
  },
  {
    "text": "meaning a tenth of\nan atomic diameter. That doesn't seem\nlike very much. And it isn't.",
    "start": "2836410",
    "end": "2841870"
  },
  {
    "text": "It only causes 100 femtofarads,\nthat means 10 to the -13",
    "start": "2841870",
    "end": "2847720"
  },
  {
    "text": "farad capacitance change. But that's quite\nenough to signal",
    "start": "2847720",
    "end": "2854290"
  },
  {
    "text": "that a collision has\noccurred or will occur and with a very low\nfalse positive rate,",
    "start": "2854290",
    "end": "2861320"
  },
  {
    "text": "those of you who have\ndriven large automobiles know how infrequently the\nairbag opens up accidentally.",
    "start": "2861320",
    "end": "2867500"
  },
  {
    "text": "But when it does\ndeflect by 0.2 angstroms then it does open up the airbag. OK, so this is a payoff\nof microfabrication.",
    "start": "2867500",
    "end": "2875270"
  },
  {
    "text": "But now we want to\ncombine the nanosystems that we saw in the DNA\ncomputers and in the tiling",
    "start": "2875270",
    "end": "2881480"
  },
  {
    "text": "with microfabrication. And I picked this as just\none of the very few examples",
    "start": "2881480",
    "end": "2886579"
  },
  {
    "text": "where microfab meets\nnanofabrication. And we'll call it a\nnano-electromechanical system.",
    "start": "2886580",
    "end": "2892700"
  },
  {
    "text": "And here, so you've got\nthe microfabrication of both the posts upon\nwhich these things stand,",
    "start": "2892700",
    "end": "2900380"
  },
  {
    "text": "which is these nickel\ncolumns of 80 nanometers, and the little bars, metal bars,\nwhich can be as a micron range.",
    "start": "2900380",
    "end": "2913380"
  },
  {
    "text": "And you can see them visualized\non the left hand photograph where you have these\nbars at regular spacings,",
    "start": "2913380",
    "end": "2919640"
  },
  {
    "text": "and if you look at this\npublication or the webs that",
    "start": "2919640",
    "end": "2924859"
  },
  {
    "text": "go along with it, these\nlittle bars will spin around. And what they're spinning on\nis not a microfabricated motor,",
    "start": "2924860",
    "end": "2932000"
  },
  {
    "text": "but it is a nano biotech\nmotor, which and actually it's a protein that most people\ndidn't think of as a motor when",
    "start": "2932000",
    "end": "2939890"
  },
  {
    "text": "it was first discovered. It is the protein present\nin almost all organisms",
    "start": "2939890",
    "end": "2946370"
  },
  {
    "text": "that is responsible\nfor ATP generation. Usually, you think of this as\nmaking ATP for motors to use,",
    "start": "2946370",
    "end": "2952520"
  },
  {
    "text": "but this actually, since it\nis capable of rotary motion, does move this 1 micron\nbar around at the rate",
    "start": "2952520",
    "end": "2962150"
  },
  {
    "text": "that you would expect\nfor the nano-machine",
    "start": "2962150",
    "end": "2968539"
  },
  {
    "text": "to be generating torque.  So we're now, we've\ntalked about assembly.",
    "start": "2968540",
    "end": "2974870"
  },
  {
    "text": "That's an example of\nan output device, what sort of input\ndevices we have that will work at the\nsingle molecule level.",
    "start": "2974870",
    "end": "2983180"
  },
  {
    "text": "Here is, there\nare many examples. We've mentioned a few of\nthem in the sequencing,",
    "start": "2983180",
    "end": "2991310"
  },
  {
    "text": "genotyping lecture\nwhere we were talking about single fluorophores. Here, you can use another\naspect of biology,",
    "start": "2991310",
    "end": "3002560"
  },
  {
    "text": "which is the self-assembly of\nmembranes to make a very, very tight, low conductance seal\nwhich is only on the order of 2",
    "start": "3002560",
    "end": "3010960"
  },
  {
    "text": "nanometers thick, but it's\nenough to make a gigaohm seal, multi gigaohm seal.",
    "start": "3010960",
    "end": "3017020"
  },
  {
    "text": "And then you poke\na little hole in it with a single\nmolecule of a protein.",
    "start": "3017020",
    "end": "3022210"
  },
  {
    "text": "And there are growing ways to\ndo this on inorganic substrates as well.",
    "start": "3022210",
    "end": "3027890"
  },
  {
    "text": "So when you have a single\nprotein pore which itself might be a 1 nanometer\nopening, it will",
    "start": "3027890",
    "end": "3035410"
  },
  {
    "text": "allow in the presence\nof electric field, indicated by these negative\nand positive charges here, yellow negative and\npositive ions to go through",
    "start": "3035410",
    "end": "3043900"
  },
  {
    "text": "like sodium chloride. And they will go through it\nabout up to a million ions",
    "start": "3043900",
    "end": "3053350"
  },
  {
    "text": "per second, easily. And when you have\na larger molecule,",
    "start": "3053350",
    "end": "3058900"
  },
  {
    "text": "that's say, a polyanion\nin the electric field, it will slowly migrate\nthrough this pore.",
    "start": "3058900",
    "end": "3064960"
  },
  {
    "text": "And while it does so, it\nblocks the rapid movement of the smaller ions like sodium.",
    "start": "3064960",
    "end": "3071830"
  },
  {
    "text": "And you can record, the-- it doesn't necessarily\ncompletely block the channel.",
    "start": "3071830",
    "end": "3078099"
  },
  {
    "text": "You can record the rate at\nwhich sodium will go through and how it's influenced\nby the composition",
    "start": "3078100",
    "end": "3083620"
  },
  {
    "text": "of the polymer going through. And so here's an example\nof a bacterial protein.",
    "start": "3083620",
    "end": "3091630"
  },
  {
    "text": "This is [? Miller ?] et.\nall, referenced down below. A bacterial toxin, actually\nfrom staph, staphylococcus,",
    "start": "3091630",
    "end": "3102130"
  },
  {
    "text": "whose goal in life is\nto kill other organisms, it's not to provide a\nhandy conduit for RNA",
    "start": "3102130",
    "end": "3110980"
  },
  {
    "text": "to go through a cell. But nevertheless in this\nexperiment, when it does, when a nucleic acid\ndoes go through,",
    "start": "3110980",
    "end": "3118000"
  },
  {
    "text": "it blocks the little\nred water molecules and similar sized\nions are blocked.",
    "start": "3118000",
    "end": "3124180"
  },
  {
    "text": "And they're blocked\nin a way, which is sensitive to not\nonly the molecule,",
    "start": "3124180",
    "end": "3129760"
  },
  {
    "text": "but parts of the molecule. So you can see here,\nyou've got a molecule with a oligo(A) part\nand an oligo(C) part.",
    "start": "3129760",
    "end": "3138550"
  },
  {
    "text": "And you can actually\ndiscriminate between these, both in terms of the rate\nat which they go through,",
    "start": "3138550",
    "end": "3145359"
  },
  {
    "text": "each of the parts goes\nthrough, and the conductance. So if you look down in\nthe lower right hand part,",
    "start": "3145360",
    "end": "3151029"
  },
  {
    "text": "you'll see a 5 picoampere\nhere to the -12 ampere, 20 picoampere and\n120 picoampere levels",
    "start": "3151030",
    "end": "3157958"
  },
  {
    "text": "for these individual molecules. And each of these spikes\nis first the 830 half,",
    "start": "3157958",
    "end": "3165400"
  },
  {
    "text": "and then the C-70\nhalf going through. And you can see that the two\ndifferent conductance levels",
    "start": "3165400",
    "end": "3175150"
  },
  {
    "text": "that you get,\nreproducibly go, it's going through a typically in\none direction, first the A, then",
    "start": "3175150",
    "end": "3180400"
  },
  {
    "text": "the C, and different conductance\nlevels, different rates. And then 125 amperes is in\nbetween molecules where you're",
    "start": "3180400",
    "end": "3188230"
  },
  {
    "text": "getting the full conductance\ncapability, lots of sodium is going through.",
    "start": "3188230",
    "end": "3193480"
  },
  {
    "text": "And just like with other\nmethods that we've seen before,",
    "start": "3193480",
    "end": "3200780"
  },
  {
    "text": "the use of two\ndimensions helps get you better statistical resolution.",
    "start": "3200780",
    "end": "3206330"
  },
  {
    "text": "Here the two dimensions are the\nconductance and the time, time,",
    "start": "3206330",
    "end": "3211670"
  },
  {
    "text": "and the vertical\naxis and conductance on the horizontal axis. And you can see how you can\ndiscriminate different types",
    "start": "3211670",
    "end": "3219050"
  },
  {
    "text": "of polymers by this method. One molecule of time,\neach of these dots represents a single\nmolecular event.",
    "start": "3219050",
    "end": "3225800"
  },
  {
    "text": "And so we'll take a short break.",
    "start": "3225800",
    "end": "3231540"
  },
  {
    "text": "And then when we\ncome back, we'll talk about not\nmolecular computing, but designing cellular\ncomputers and revisit",
    "start": "3231540",
    "end": "3241800"
  },
  {
    "text": "some of these same themes. Thanks. ",
    "start": "3241800",
    "end": "3246000"
  }
]