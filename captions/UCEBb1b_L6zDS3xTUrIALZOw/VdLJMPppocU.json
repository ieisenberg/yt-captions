[
  {
    "text": "We are given a CBit module shown here.",
    "start": "1079",
    "end": "4630"
  },
  {
    "text": "This module takes corresponding bits of two\nunsigned binary numbers, A and B, along with",
    "start": "4630",
    "end": "11110"
  },
  {
    "text": "two Cin bits from higher-order\nCBit modules.",
    "start": "11110",
    "end": "16000"
  },
  {
    "text": "Its output bit R, is the appropriate bit of\nthe larger among A and B.",
    "start": "16000",
    "end": "21260"
  },
  {
    "text": "It also has two additional output bits Cout\nwhich indicate respectively if A>B or B>A",
    "start": "21260",
    "end": "30439"
  },
  {
    "text": "in the bits considered so far.",
    "start": "30439",
    "end": "33370"
  },
  {
    "text": "The propagation delay of each Cbit module\nis 4ns.",
    "start": "33370",
    "end": "39290"
  },
  {
    "text": "The CBit module is used to create a product\nMAXC which is a combinational device that",
    "start": "39290",
    "end": "45620"
  },
  {
    "text": "determines the maximum of its two 4-bit unsigned\nbinary inputs.",
    "start": "45620",
    "end": "50909"
  },
  {
    "text": "It is constructed using 4 CBit modules as\nshown here.",
    "start": "50909",
    "end": "56320"
  },
  {
    "text": "The first question we want to consider is\nwhat are the propagation delay and throughput",
    "start": "56320",
    "end": "61260"
  },
  {
    "text": "of this combinational circuit?",
    "start": "61260",
    "end": "64080"
  },
  {
    "text": "The propagation delay of a combinational circuit\nis the propagation delay along its longest",
    "start": "64080",
    "end": "69640"
  },
  {
    "text": "path from input to output.",
    "start": "69640",
    "end": "72330"
  },
  {
    "text": "In this case, the longest path is through\n4 CBit modules.",
    "start": "72330",
    "end": "77400"
  },
  {
    "text": "Since each CBit module has a propagation delay\nof 4 ns, the propagation delay of this combinational",
    "start": "77400",
    "end": "84630"
  },
  {
    "text": "circuit is 4 * 4 ns = 16 ns.",
    "start": "84630",
    "end": "91530"
  },
  {
    "text": "The throughput of a combinational circuit\nis 1 / Latency, so the throughput of this",
    "start": "91530",
    "end": "97900"
  },
  {
    "text": "circuit is 1 / (16 ns).",
    "start": "97900",
    "end": "103540"
  },
  {
    "text": "The next question we want to consider is what\ntwo bits would we expect to see coming out",
    "start": "103540",
    "end": "109380"
  },
  {
    "text": "of the (unused) Cout outputs from\nthe low-order CBit module if A3:0",
    "start": "109380",
    "end": "118570"
  },
  {
    "text": "and B3:0 are identical numbers.",
    "start": "118570",
    "end": "122220"
  },
  {
    "text": "The Cout[1] bit indicates whether\nA>B and the Cout[0] bit indicates",
    "start": "122220",
    "end": "130840"
  },
  {
    "text": "whether B>A.\nSince the numbers are identical neither of",
    "start": "130840",
    "end": "136010"
  },
  {
    "text": "these inequalities is true, so both Cout\nbits are 0.",
    "start": "136010",
    "end": "140870"
  },
  {
    "text": "Next, we want to pipeline this circuit for\nmaximum throughput.",
    "start": "140870",
    "end": "145590"
  },
  {
    "text": "We are given ideal pipeline registers for\nthis step.",
    "start": "145590",
    "end": "149700"
  },
  {
    "text": "Recall that ideal registers have a 0 propagation\ndelay and 0 setup time.",
    "start": "149700",
    "end": "155330"
  },
  {
    "text": "In order to pipeline this circuit for maximum\nthroughput, we want to add pipeline registers",
    "start": "155330",
    "end": "160760"
  },
  {
    "text": "that isolate each individual CBit to be in\nits own pipeline stage.",
    "start": "160760",
    "end": "165689"
  },
  {
    "text": "Recall, that when pipelining a circuit, we\nwant to add pipeline registers to all the",
    "start": "165690",
    "end": "171599"
  },
  {
    "text": "outputs, so we begin by adding a contour that\ngoes across all 4 outputs.",
    "start": "171599",
    "end": "177930"
  },
  {
    "text": "We now want to isolate the low order CBit\nmodule.",
    "start": "177930",
    "end": "181870"
  },
  {
    "text": "To do this we draw an additional contour that\ncrosses the outputs R3-R1, then passes between",
    "start": "181870",
    "end": "189750"
  },
  {
    "text": "the two low order CBit modules and finally\ncrosses the A0 and B0 inputs.",
    "start": "189750",
    "end": "197120"
  },
  {
    "text": "Remember that every time a contour crosses\na wire, it means that we are adding a pipeline",
    "start": "197120",
    "end": "202909"
  },
  {
    "text": "register.",
    "start": "202910",
    "end": "204210"
  },
  {
    "text": "So this first step added 6 pipeline registers,\none for each of R3, R2, and R1, another between",
    "start": "204210",
    "end": "213120"
  },
  {
    "text": "the two CBit modules and the last 2 on the\nA0 and B0 inputs.",
    "start": "213120",
    "end": "219879"
  },
  {
    "text": "Notice that regardless of which input to output\npath we look at the number of pipeline registers",
    "start": "219879",
    "end": "225930"
  },
  {
    "text": "along the path so far is 2.",
    "start": "225930",
    "end": "229439"
  },
  {
    "text": "We continue in this manner isolating each\nCbit module into its own pipeline stage.",
    "start": "229440",
    "end": "239880"
  },
  {
    "text": "Now that each CBit module has been placed\ninto its own pipeline stage, we can clock",
    "start": "239880",
    "end": "245069"
  },
  {
    "text": "this circuit for maximum througput.",
    "start": "245069",
    "end": "247959"
  },
  {
    "text": "Our clock period must allow for enough time\nfor the propagation delay of the pipeline",
    "start": "247959",
    "end": "252630"
  },
  {
    "text": "register, plus the propagation delay of the\nCbit module, plus the setup time of the next",
    "start": "252630",
    "end": "258989"
  },
  {
    "text": "pipeline register.",
    "start": "258989",
    "end": "260799"
  },
  {
    "text": "Since our pipeline registers are ideal, the\npropagation delay and the setup time of the",
    "start": "260799",
    "end": "265740"
  },
  {
    "text": "pipeline registers is 0, so the clock period\nis equal to the propagation delay of 1 CBit",
    "start": "265740",
    "end": "272800"
  },
  {
    "text": "module which is 4 ns.",
    "start": "272800",
    "end": "276099"
  },
  {
    "text": "The latency of this pipelined circuit is equal\nto the number of pipeline stages (4 in this",
    "start": "276099",
    "end": "281659"
  },
  {
    "text": "example) times the clock period time, so the\nlatency is 4 * 4 ns = 16 ns.",
    "start": "281659",
    "end": "292550"
  },
  {
    "text": "The throughput of a pipelined circuit is 1\ndivided by the clock period, so throughput",
    "start": "292550",
    "end": "299080"
  },
  {
    "text": "is 1 / (4 ns).",
    "start": "299080",
    "end": "302279"
  },
  {
    "text": "Our Cbit module can be used to create the\nMAX4X4 product which is a combinational circuit",
    "start": "302279",
    "end": "309379"
  },
  {
    "text": "capable of determining the maximum of four\n4-bit binary inputs.",
    "start": "309379",
    "end": "314580"
  },
  {
    "text": "Our first task here is to determine the combinational\nlatency and throughput of this new circuit.",
    "start": "314580",
    "end": "321228"
  },
  {
    "text": "Looking carefully at this circuit, we see\nthat the longest path through the circuit",
    "start": "321229",
    "end": "325680"
  },
  {
    "text": "begins at the upper left CBit module and ends\nat the bottom right CBit module.",
    "start": "325680",
    "end": "331039"
  },
  {
    "text": "Counting the number of CBit modules along\nthis path, we see that we need to cross 6",
    "start": "331039",
    "end": "336889"
  },
  {
    "text": "CBit modules.",
    "start": "336889",
    "end": "338110"
  },
  {
    "text": "This means that the latency of this circuit\nis L = 6 * propagation delay of a single CBit",
    "start": "338110",
    "end": "345189"
  },
  {
    "text": "module = 6 * 4 ns = 24 ns.",
    "start": "345189",
    "end": "351900"
  },
  {
    "text": "The throughput of a combinational circuit\nis equal to 1 / Latency = 1 / (24 ns).",
    "start": "351900",
    "end": "360909"
  },
  {
    "text": "Out final task is to pipeline this new circuit\nfor maximum througput.",
    "start": "360909",
    "end": "367009"
  },
  {
    "text": "We begin as we did before by adding a contour\nthat goes across all of our outputs.",
    "start": "367009",
    "end": "372919"
  },
  {
    "text": "Next we want to figure out how to add the\nremaining contours so that the clock period",
    "start": "372919",
    "end": "377069"
  },
  {
    "text": "of our pipelined circuit can be minimized.",
    "start": "377069",
    "end": "380379"
  },
  {
    "text": "The clock period must allow enough time for\nthe propagation delay of the pipeline register,",
    "start": "380379",
    "end": "385889"
  },
  {
    "text": "plus the propagation delay of any combinational\nlogic, plus the setup time of the next pipeline",
    "start": "385889",
    "end": "391680"
  },
  {
    "text": "register.",
    "start": "391680",
    "end": "393139"
  },
  {
    "text": "Since our pipeline registers are ideal, both\nthe propagation delay and the setup time of",
    "start": "393139",
    "end": "398210"
  },
  {
    "text": "the pipeline registers is 0, so our clock\nperiod is equal to the propagation delay of",
    "start": "398210",
    "end": "403839"
  },
  {
    "text": "the combinational logic between each pair\nof pipeline registers.",
    "start": "403839",
    "end": "408460"
  },
  {
    "text": "In order to minimize this, we would like the\nnumber of CBit modules between each pair of",
    "start": "408460",
    "end": "413349"
  },
  {
    "text": "pipeline registers to be at most 1.",
    "start": "413349",
    "end": "416710"
  },
  {
    "text": "This would make our period, T = 4 ns.",
    "start": "416710",
    "end": "420590"
  },
  {
    "text": "To achieve this, we can draw diagonal contours\nthrough our circuit.",
    "start": "420590",
    "end": "425039"
  },
  {
    "text": "Notice that these contours result in at most\n1 CBit module appearing between any pair of",
    "start": "425039",
    "end": "430830"
  },
  {
    "text": "pipeline registers while at the same time\nincluding as many CBit modules that can be",
    "start": "430830",
    "end": "436879"
  },
  {
    "text": "executed in parallel in a single pipeline\nstage.",
    "start": "436879",
    "end": "440990"
  },
  {
    "text": "The latter constraint will minimize our latency\nin addition to maximizing our throughput.",
    "start": "440990",
    "end": "448819"
  },
  {
    "text": "Notice that regardless of which input to output\npath you follow, at this stage you are crossing",
    "start": "448819",
    "end": "454659"
  },
  {
    "text": "3 pipeline registers.",
    "start": "454659",
    "end": "457659"
  },
  {
    "text": "We continue pipelining our circuit in this\nmanner until we have added enough pipeline",
    "start": "457659",
    "end": "462499"
  },
  {
    "text": "stages so that each stage passes through a\nsingle CBit module.",
    "start": "462499",
    "end": "468719"
  },
  {
    "text": "We now see that any path from input to output\npasses through 6 pipeline registers because",
    "start": "468719",
    "end": "474990"
  },
  {
    "text": "we have split our circuit into 6 pipeline\nstages in order to break up the longest path.",
    "start": "474990",
    "end": "480599"
  },
  {
    "text": "We can now clock this circuit with period\nT = 4 ns.",
    "start": "480599",
    "end": "485759"
  },
  {
    "text": "So the latency is the number of pipeline stages\ntimes the clock period which equals 6 * 4",
    "start": "485759",
    "end": "492919"
  },
  {
    "text": "ns = 24 ns.",
    "start": "492919",
    "end": "495929"
  },
  {
    "text": "The throughput of this circuit is 1 / clock\nperiod (T) = 1 /(4 ns).",
    "start": "495929",
    "end": "502719"
  }
]