[
  {
    "text": " The following\ncontent is provided under a Creative\nCommons license. Your support will help MIT\nOpenCourseWare continue",
    "start": "0",
    "end": "6859"
  },
  {
    "text": "to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6860",
    "end": "13320"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13320",
    "end": "21742"
  },
  {
    "text": "PROFESSOR: Are people\nunderstanding AVLs? ",
    "start": "21742",
    "end": "27600"
  },
  {
    "text": "That's good, because if\neveryone raised their hands, we'd be done and out of here. So we're not covering new\nmaterial in this recitation.",
    "start": "27600",
    "end": "34270"
  },
  {
    "text": "We're talking about AVLs\nagain, except this time you'll tell me\nhow we'll do them, and we'll look at\nthe code and see",
    "start": "34270",
    "end": "42140"
  },
  {
    "text": "how the theory matches the code. And I need one of these.",
    "start": "42140",
    "end": "47149"
  },
  {
    "text": "Thank you. ",
    "start": "47150",
    "end": "52343"
  },
  {
    "text": "So let's start simple. What's a BST? AUDIENCE: Binary search tree. ",
    "start": "52344",
    "end": "60110"
  },
  {
    "text": "PROFESSOR: OK,\nbinary search tree. It's binary because every\nnode has at most two children.",
    "start": "60110",
    "end": "66080"
  },
  {
    "text": "Why is it a search tree? AUDIENCE: It's easy to search. PROFESSOR: OK. Why is it easy to search?",
    "start": "66080",
    "end": "71279"
  },
  {
    "text": "AUDIENCE: Because you\nstart [INAUDIBLE], is my number greater than\nthis key or is it less than, and then you go from there.",
    "start": "71279",
    "end": "76409"
  },
  {
    "text": "PROFESSOR: OK. So if I would have to state\nthis as a formal rep invariant thing, what would I say it is\nso that I can do that operation?",
    "start": "76410",
    "end": "84016"
  },
  {
    "text": "AUDIENCE: Node at\nright is greater than node at key, which is\ngreater than node at left.",
    "start": "84016",
    "end": "90909"
  },
  {
    "text": "PROFESSOR: OK, excellent. So it turns out I can use\nthis argument recursively",
    "start": "90910",
    "end": "96190"
  },
  {
    "text": "to say that for a given\nnode, everything that is to the right of\nthat node is greater,",
    "start": "96190",
    "end": "104740"
  },
  {
    "text": "and everything that is\nto the left is smaller. ",
    "start": "104740",
    "end": "112450"
  },
  {
    "text": "And this allows us\nto do search quickly because if you're\nlooking for a key, say you have numbers in your\ntree and you're looking for 5.",
    "start": "112450",
    "end": "120480"
  },
  {
    "text": "If you arrive at a node whose\nvalue is 4, you go right. If you arrive at a node whose\nvalue is 7, you go left.",
    "start": "120480",
    "end": "127820"
  },
  {
    "text": "OK So what do we know\nhow to do on BSTs? What are the operations\nthat we know?",
    "start": "127820",
    "end": "134325"
  },
  {
    "text": "AUDIENCE: Minimum, maximum. PROFESSOR: Min, max. ",
    "start": "134325",
    "end": "142099"
  },
  {
    "text": "AUDIENCE: Left, right, parent. PROFESSOR: So those\nare for the node. I want the queries and the\nupdates for the BST type.",
    "start": "142100",
    "end": "150300"
  },
  {
    "text": "AUDIENCE: Insert and delete. PROFESSOR: OK.  Insert, Delete.",
    "start": "150300",
    "end": "159052"
  },
  {
    "text": "AUDIENCE: Next larger.  PROFESSOR: OK. ",
    "start": "159052",
    "end": "172340"
  },
  {
    "text": "And then in here, the S in BST. Someone give me the\nS so we can move on.",
    "start": "172340",
    "end": "177626"
  },
  {
    "text": "AUDIENCE: Find. PROFESSOR: Find,\nsearch, depending",
    "start": "177626",
    "end": "183254"
  },
  {
    "text": "on what code you're reading.  What's the running\ntime for these guys?",
    "start": "183254",
    "end": "191260"
  },
  {
    "text": "AUDIENCE: Order h. PROFESSOR: Excellent. So everything has the\nsame running time.",
    "start": "191260",
    "end": "196350"
  },
  {
    "text": "Nice and easy to remember. Order h. What's h?",
    "start": "196350",
    "end": "201635"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: OK. How do we define this height?",
    "start": "201636",
    "end": "207120"
  },
  {
    "text": "What's the height for this tree? AUDIENCE: [INAUDIBLE].",
    "start": "207120",
    "end": "212185"
  },
  {
    "text": " PROFESSOR: Good. What's the height for this tree?",
    "start": "212185",
    "end": "218880"
  },
  {
    "text": " What's the height for this tree?",
    "start": "218880",
    "end": "228883"
  },
  {
    "text": "AUDIENCE: Two.  PROFESSOR: So now for\na more general case,",
    "start": "228883",
    "end": "235020"
  },
  {
    "text": "where this is the height, and\nthe height of my left subtree",
    "start": "235020",
    "end": "240320"
  },
  {
    "text": "is hl. The height of my\nright subtree is hr. What's h?",
    "start": "240320",
    "end": "246672"
  },
  {
    "text": "AUDIENCE: It's the maximum\nof hr times hl plus 1. ",
    "start": "246672",
    "end": "256785"
  },
  {
    "text": "PROFESSOR: Nice save. I heard a \"plus 1\"\nsomewhere there. ",
    "start": "256785",
    "end": "262290"
  },
  {
    "text": "Very good. This is r. ",
    "start": "262290",
    "end": "268870"
  },
  {
    "text": "So if we look at the\nfirst part of the code, lines one through eight,\nlines seven and eight",
    "start": "268870",
    "end": "275840"
  },
  {
    "text": "implement the definition\nthat we talked about here. So in our Python\nimplementation, each node",
    "start": "275840",
    "end": "281440"
  },
  {
    "text": "knows the height of the\ntree that he's the root of. ",
    "start": "281440",
    "end": "287639"
  },
  {
    "text": "And since we're\nstoring that, we need to update it every once in\nawhile when we make changes to the tree, like\nwhen we insert nodes.",
    "start": "287640",
    "end": "294870"
  },
  {
    "text": "And the way we do that\nis update height, which uses the formula that\nwe came up with here.",
    "start": "294870",
    "end": "299970"
  },
  {
    "text": "Now, there is a hack on\nlines two, three, four, five. Can anyone tell me\nwhat the hack is?",
    "start": "299970",
    "end": "306750"
  },
  {
    "start": "306750",
    "end": "320989"
  },
  {
    "text": "AUDIENCE: The negative 1. PROFESSOR: OK. How does that work? Why do I need it? ",
    "start": "320989",
    "end": "327780"
  },
  {
    "text": "AUDIENCE: That's so if\nyou're at the root node, you can still\ncalculate the height.",
    "start": "327780",
    "end": "333510"
  },
  {
    "text": "PROFESSOR: Depends on how\nthe root node looks like. AUDIENCE: If it has no children.",
    "start": "333510",
    "end": "340039"
  },
  {
    "text": "PROFESSOR: That's a leaf. AUDIENCE: Yes. PROFESSOR: OK. So if I'm in this case or\nin this case, what's hl,",
    "start": "340039",
    "end": "347390"
  },
  {
    "text": "what's hr? In this case, I have\nthis node of height zero, so I can make a small mistake\nhere and it'll save me,",
    "start": "347390",
    "end": "355400"
  },
  {
    "text": "but here, I have no\nchildren, so hl and hr have to be set in such a way that\nthis formula evaluates to 0.",
    "start": "355400",
    "end": "364560"
  },
  {
    "text": "If I set them to minus 1,\nI'll have minus 1, minus 1. The maximum is minus\n1 plus 1 equals 0.",
    "start": "364560",
    "end": "371756"
  },
  {
    "text": "AUDIENCE: It's just to\ncheck the nodes for AVLs. PROFESSOR: We use that\nto update the height.",
    "start": "371756",
    "end": "378090"
  },
  {
    "text": "For AVLs, we need\nto know the height of a node instantaneously. We can't afford to\ngo down the tree",
    "start": "378090",
    "end": "383199"
  },
  {
    "text": "and compute the height\nevery time we need it, so every node gets\nto store its height.",
    "start": "383200",
    "end": "389750"
  },
  {
    "text": "There's a small field in each\nnode that has the height. So we need to update that\nevery once in awhile when",
    "start": "389750",
    "end": "395010"
  },
  {
    "text": "we do insertions and deletions. This is how we update\nit, and in order to update it for this case,\nwhere we're at a leaf,",
    "start": "395010",
    "end": "402320"
  },
  {
    "text": "we have to say that the\nheight of a non-existing tree is minus 1.",
    "start": "402320",
    "end": "407516"
  },
  {
    "text": "Of course, in theory\nand in real life, there are no non-existing\ntrees, so this is a clever hack",
    "start": "407516",
    "end": "412540"
  },
  {
    "text": "to reduce code size. So we said binary search trees\nwould look something like this.",
    "start": "412540",
    "end": "420220"
  },
  {
    "start": "420220",
    "end": "436408"
  },
  {
    "text": "Is this guy an AVL? ",
    "start": "436408",
    "end": "444050"
  },
  {
    "text": "Does anyone think it's an a AVL? Does anyone think\nit's not an AVL?",
    "start": "444050",
    "end": "451660"
  },
  {
    "text": "Can one of you tell me why? AUDIENCE: The tree with 5\nas its root is not balanced.",
    "start": "451660",
    "end": "459300"
  },
  {
    "text": " PROFESSOR: So this guy\nhere is not balanced.",
    "start": "459300",
    "end": "465695"
  },
  {
    "text": "Why is it not balanced? AUDIENCE: Because it has two on\nits right and zero on its left,",
    "start": "465695",
    "end": "473790"
  },
  {
    "text": "so the difference\nis greater than 1. ",
    "start": "473790",
    "end": "480214"
  },
  {
    "text": "PROFESSOR: You're saying\nthat there's something here that's two, and something\nhere that's-- OK, so height.",
    "start": "480214",
    "end": "488100"
  },
  {
    "text": "So then it's almost like that. It's 1 here and minus 1 here.",
    "start": "488100",
    "end": "497770"
  },
  {
    "text": "So the reason I\nasked you to clarify is that first you\nsaid two and zero, and that's the\nnode count, and AVL",
    "start": "497770",
    "end": "503940"
  },
  {
    "text": "doesn't care about node count. AVL cares about height. So for example, if I\nhave something like this,",
    "start": "503940",
    "end": "515948"
  },
  {
    "text": "this is a happy AVL. Three nodes, here one node here. The difference in node\ncount is greater than 1,",
    "start": "515949",
    "end": "522460"
  },
  {
    "text": "but the difference\nin height is 1. Therefore, this is a good AVL. So what's a rep\ninvariant for an AVL?",
    "start": "522460",
    "end": "529360"
  },
  {
    "start": "529360",
    "end": "536024"
  },
  {
    "text": "AUDIENCE: The height of the\nleft subtree for every node is within 1 of the height\nof the right subtree.",
    "start": "536024",
    "end": "542950"
  },
  {
    "text": "PROFESSOR: Excellent.  AVL. The core property is\nthat for every node,",
    "start": "542950",
    "end": "555050"
  },
  {
    "text": "the left height and the right\nheight differ by at most 1.",
    "start": "555050",
    "end": "560850"
  },
  {
    "text": "What else? If we want to be\ncompletely rigorous, what else do we have to say?",
    "start": "560850",
    "end": "566140"
  },
  {
    "text": " It's a BST. ",
    "start": "566140",
    "end": "574170"
  },
  {
    "text": "So an AVL is a\nspecial kind of BST, and that's why when\nwe write the AVL code, we inherit from the BST and\nwe use some of its methods",
    "start": "574170",
    "end": "583029"
  },
  {
    "text": "heavily.  Why do we like AVLs?",
    "start": "583030",
    "end": "588759"
  },
  {
    "text": "What's so good about them? AUDIENCE: It's faster because\nit ensures the minimal height",
    "start": "588760",
    "end": "596140"
  },
  {
    "text": "of the entire tree because most\nof our complexities are o of h, so it would have to be smaller.",
    "start": "596140",
    "end": "602670"
  },
  {
    "text": "PROFESSOR: So we\ncare about this. In a regular binary tree,\nthe worst case that you have is this.",
    "start": "602670",
    "end": "612560"
  },
  {
    "text": "Ignoring this part, this is a\nworst case binary search tree where it's basically a\nlist, so height is order n.",
    "start": "612560",
    "end": "619880"
  },
  {
    "text": "In an AVL, you're\nsaying it's better. So the reason why we\ncare about AVLs is",
    "start": "619880",
    "end": "629480"
  },
  {
    "text": "that height is order of log n.",
    "start": "629480",
    "end": "636570"
  },
  {
    "text": "Now, did people understand from\nlecture why that's the case? ",
    "start": "636570",
    "end": "642840"
  },
  {
    "text": "Can anyone tell me\nwhy that's the case? AUDIENCE: Well, it's\njust like every level",
    "start": "642840",
    "end": "649587"
  },
  {
    "text": "you go down, if you split off\nthat many times, of course",
    "start": "649588",
    "end": "655715"
  },
  {
    "text": "it's log n. If you have n nodes and\nthey're filled up to the edge,",
    "start": "655715",
    "end": "663690"
  },
  {
    "text": "there's going to\nbe log n of them. AUDIENCE: It's close to a\nfull binary tree, right?",
    "start": "663690",
    "end": "669230"
  },
  {
    "text": "PROFESSOR: For some\ndefinition of \"close.\" So here's what I\nuse to remember, and I think I can persuade you\nthat the height is log n using",
    "start": "669230",
    "end": "678810"
  },
  {
    "text": "the argument that\nI'll show you here. Let's start building\na tree this way. Let's say I have a\nfixed height, and I",
    "start": "678810",
    "end": "685750"
  },
  {
    "text": "want to have as few\nnodes as possible. If I have a tree with a big\nheight and very few nodes,",
    "start": "685750",
    "end": "693279"
  },
  {
    "text": "h is going to be bad when you\nwrite it as a function of n.",
    "start": "693280",
    "end": "698740"
  },
  {
    "text": "So those trees are unbalanced. Big height, small\nnumber of nodes. So say we're trying to build\nan AVL with the smallest",
    "start": "698740",
    "end": "706000"
  },
  {
    "text": "number of nodes\nand a fixed height. What if the height is 0? What does that tree look like?",
    "start": "706000",
    "end": "712660"
  },
  {
    "text": "It's not too complicated, right? This is an AVL of height 0.",
    "start": "712660",
    "end": "718610"
  },
  {
    "text": "It's the only possible\nAVL of height 0. Now, what if we're trying\nto build an AVL of height 1",
    "start": "718610",
    "end": "724260"
  },
  {
    "text": "that has as few\nnodes as possible? ",
    "start": "724260",
    "end": "730550"
  },
  {
    "text": "This is what it\nlooks like, right? Height 0, height 1.",
    "start": "730550",
    "end": "736510"
  },
  {
    "text": "I could add another\nnode here, but I don't want to because I want\nas few nodes as possible. Now, what if I tried to\nbuild an AVL of height 2",
    "start": "736510",
    "end": "743720"
  },
  {
    "text": "that has as few\nnodes as possible?  Can I do this?",
    "start": "743720",
    "end": "749010"
  },
  {
    "text": " AUDIENCE: So at the worst\ncase, you have h minus 1",
    "start": "749010",
    "end": "754352"
  },
  {
    "text": "and then h minus 2 there. PROFESSOR: OK. You're moving ahead.",
    "start": "754353",
    "end": "759840"
  },
  {
    "text": "You're forcing me to move\nfaster, but you're right. And the reason is\nthis is unbalanced.",
    "start": "759840",
    "end": "765320"
  },
  {
    "text": "The height at the left has\nto be the height of the right plus or minus 1. Can't be anything else.",
    "start": "765320",
    "end": "771680"
  },
  {
    "text": "So at the very least, I have to\nbuild a tree of height 0 here, and I know that the\nbest tree of height",
    "start": "771680",
    "end": "777240"
  },
  {
    "text": "0 that I have is this guy. ",
    "start": "777240",
    "end": "783770"
  },
  {
    "text": "Cool. So for height 3, I\nwould have to do this. And then you're saying, what\nwould I use at the left?",
    "start": "783770",
    "end": "791168"
  },
  {
    "text": "AUDIENCE: You'd use whatever\nheight's on the right minus 2. The height on the\nright minus 1 per side.",
    "start": "791168",
    "end": "798444"
  },
  {
    "text": "PROFESSOR: So on the\nright, I have a height 2. On the left, I have a height 1. ",
    "start": "798444",
    "end": "806360"
  },
  {
    "text": "If I want to go up to height\n4, I do the same thing. So if I want to\nbuild an AVL tree",
    "start": "806360",
    "end": "813470"
  },
  {
    "text": "with as few nodes as\npossible and height h, I start with the root,\nthen at the right,",
    "start": "813470",
    "end": "818960"
  },
  {
    "text": "I build an AVL tree of height\nh minus 1, and at the left, an AVL tree of height h minus 2.",
    "start": "818960",
    "end": "825970"
  },
  {
    "text": "And if these have the\nminimum number of nodes, then it turns out\nthat the whole thing",
    "start": "825970",
    "end": "831040"
  },
  {
    "text": "has the minimum number of nodes. I don't want to build a\ntree where the heights are equal because that would\nmean more nodes here,",
    "start": "831040",
    "end": "837500"
  },
  {
    "text": "so this is the best I can do. This is the best way I\ncan build a tall tree with as few nodes as possible.",
    "start": "837500",
    "end": "843345"
  },
  {
    "start": "843345",
    "end": "850449"
  },
  {
    "text": "Suppose I want to write\nthe number of nodes as a function of height. You're telling me what it is.",
    "start": "850450",
    "end": "856970"
  },
  {
    "text": "When I was here, you were\ngiving me the answer for this. So suppose I have\na height, and I",
    "start": "856970",
    "end": "862940"
  },
  {
    "text": "want to know how many nodes\nI have in my tree that has a minimum number of nodes. What is it?",
    "start": "862940",
    "end": "868657"
  },
  {
    "text": "AUDIENCE: It's N h minus 1,\nand then plus N h minus 2.",
    "start": "868657",
    "end": "879635"
  },
  {
    "text": " There might be a constant.",
    "start": "879635",
    "end": "885649"
  },
  {
    "text": "PROFESSOR: There\nmight be a constant. ",
    "start": "885649",
    "end": "890950"
  },
  {
    "text": "N h minus 1 is this tree,\nN h minus 2 is this tree, so what's the constant?",
    "start": "890950",
    "end": "896399"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: Yep. This guy. AUDIENCE: Doesn't he\nhave height 0, though?",
    "start": "896399",
    "end": "904355"
  },
  {
    "text": "AUDIENCE: We're talking\nnumber of nodes. AUDIENCE: Oh. Number of nodes, yeah. ",
    "start": "904355",
    "end": "910919"
  },
  {
    "text": "PROFESSOR: I'm not\ngoing to solve this now. We learned how to solve\nrecurrences a long time ago, so I'll pretend I still\nremember how to do that,",
    "start": "910919",
    "end": "916878"
  },
  {
    "text": "and I will tell you\nthat the solution looks something like this. N of h is roughly 5, which is\nthe magic number that we talked",
    "start": "916879",
    "end": "925079"
  },
  {
    "text": "about in lecture--\nroughly, which means there might be some things\nthere that I forgot-- to the h.",
    "start": "925080",
    "end": "934880"
  },
  {
    "text": "What really matters is that\nit's an exponential in h. If you look at these guys,\nthis is close to the Fibonacci",
    "start": "934880",
    "end": "940830"
  },
  {
    "text": "number formula except\nthere's a plus 1 here. So these guys are bigger\nthan the Fibonacci numbers.",
    "start": "940830",
    "end": "948350"
  },
  {
    "text": "This is definitely\nbigger than whatever the formula for\nFibonacci numbers is, which is 5 to the h minus\nsomething over something.",
    "start": "948350",
    "end": "958160"
  },
  {
    "text": "What really matters is the\nminimum number of nodes in an AVL of height h is an\nexponential as a function of h.",
    "start": "958160",
    "end": "966240"
  },
  {
    "text": "If you invert that, you\nget that the maximum height for a tree with N nodes\nis log N. This is a way",
    "start": "966240",
    "end": "980160"
  },
  {
    "text": "to construct an AVL that\nshows you that the height has to be logarithmic as long\nas we can keep this rep",
    "start": "980160",
    "end": "987400"
  },
  {
    "text": "invariant true. AUDIENCE: I have a question. I didn't quite follow how you\ngot h minus 2 and h minus 1",
    "start": "987400",
    "end": "995884"
  },
  {
    "text": "there. PROFESSOR: Here, here, here? AUDIENCE: There. The tree down.",
    "start": "995884",
    "end": "1003110"
  },
  {
    "text": "This one? This one? AUDIENCE: This one, yeah. PROFESSOR: OK. So suppose I'm at height 4 here.",
    "start": "1003110",
    "end": "1009029"
  },
  {
    "text": " What's the best way to\nconstruct an AVL that",
    "start": "1009030",
    "end": "1016790"
  },
  {
    "text": "has as few nodes as\npossible but height 4? If this guy has\nto be at height 4,",
    "start": "1016790",
    "end": "1021990"
  },
  {
    "text": "then it has to have a child at\nheight 3, at least one child. Otherwise, it's not\ngoing to be height 4.",
    "start": "1021990",
    "end": "1028880"
  },
  {
    "text": "Now, I need to build something\nhere that has height 3. What should I build?",
    "start": "1028880",
    "end": "1034000"
  },
  {
    "text": "The best AVL tree that I know\nthat has height 3, right? I have to get to height 3\nusing as few nodes as possible,",
    "start": "1034000",
    "end": "1040939"
  },
  {
    "text": "so I'm going to use this guy\nbecause it has as few nodes as possible and it has height 3.",
    "start": "1040940",
    "end": "1046230"
  },
  {
    "text": "So this covers my right side. Now, for my left side, what\nam I going to use here?",
    "start": "1046230",
    "end": "1055429"
  },
  {
    "text": "Another AVL tree that has as\nfew nodes as possible, right? So I'm definitely keeping that.",
    "start": "1055430",
    "end": "1061809"
  },
  {
    "text": "But what's going to\nbe the height of that? AUDIENCE: So we want the\ndifference to be less than",
    "start": "1061810",
    "end": "1067753"
  },
  {
    "text": "or equal to 1? PROFESSOR: Yeah. Otherwise, it's not an AVL. AUDIENCE: So it\nwould be of height 4.",
    "start": "1067753",
    "end": "1075330"
  },
  {
    "text": "PROFESSOR: So I know for sure\nthat this guy has height 4. The difference has\nto be plus, minus 1.",
    "start": "1075330",
    "end": "1080445"
  },
  {
    "text": "AUDIENCE: So it would be 2. PROFESSOR: 2, 3, 4. I know for sure I\ndon't want it to be 4,",
    "start": "1080446",
    "end": "1086362"
  },
  {
    "text": "and now I have to\nchoose between 2 and 3. A tree of height 2\nwill have fewer nodes than a tree of\nheight 3, so that's",
    "start": "1086362",
    "end": "1091770"
  },
  {
    "text": "why we're doing it this way. So to build a tree of height\n4, build a tree of height 3,",
    "start": "1091770",
    "end": "1097870"
  },
  {
    "text": "build a tree of height\n2, connect them together. That's how we get to\nthis, and then this.",
    "start": "1097870",
    "end": "1104000"
  },
  {
    "text": "Cool.  Do people remember how to\ndo insertions and deletions",
    "start": "1104000",
    "end": "1109659"
  },
  {
    "text": "in a regular binary tree? ",
    "start": "1109660",
    "end": "1115080"
  },
  {
    "text": "Yes? ",
    "start": "1115080",
    "end": "1120419"
  },
  {
    "text": "How do I insert 6.5\nhere in this one? ",
    "start": "1120420",
    "end": "1127360"
  },
  {
    "text": "AUDIENCE: You take 6.5, you're\nlike, oh, it's greater than 4, then you move to 5. Then you're like, oh,\nit's greater than 5.",
    "start": "1127360",
    "end": "1133410"
  },
  {
    "text": "Go to 6. Oh, it's less than 6, and\nthen it goes to the left of 6. I mean-- sorry.",
    "start": "1133410",
    "end": "1139586"
  },
  {
    "text": "I meant left of 7. PROFESSOR: OK. So it's bigger than--",
    "start": "1139586",
    "end": "1144788"
  },
  {
    "text": "AUDIENCE: Testing you all, guys. Oh yeah. 6.5 is bigger than 6, so\nthen it goes to the left of 7",
    "start": "1144788",
    "end": "1152168"
  },
  {
    "text": "because it's less than 7. ",
    "start": "1152168",
    "end": "1158000"
  },
  {
    "text": "PROFESSOR: I thought I had my\nexample wrong for a second. AUDIENCE: I'm just tired. PROFESSOR: Me too,\nso don't scare me.",
    "start": "1158000",
    "end": "1167059"
  },
  {
    "text": "All right. So suppose we have heights\nstored in the nodes here,",
    "start": "1167060",
    "end": "1172740"
  },
  {
    "text": "because we want to\ndo that for AVLs. We'll figure out why in a bit.",
    "start": "1172740",
    "end": "1179960"
  },
  {
    "text": "The height of this guy used\nto be 0, 1, 2, 3, right?",
    "start": "1179960",
    "end": "1185520"
  },
  {
    "text": "0, 1, 2, 3.",
    "start": "1185520",
    "end": "1190649"
  },
  {
    "text": "What happened when\nI added this node?  AUDIENCE: You added 1 to\neverything [INAUDIBLE].",
    "start": "1190649",
    "end": "1197924"
  },
  {
    "text": "PROFESSOR: Yeah. So I went down on\nmy insertion path to find out where to insert\na node, and then I added it.",
    "start": "1197924",
    "end": "1204960"
  },
  {
    "text": " I just chose my\ncase conveniently, but in some cases,\nall the heights",
    "start": "1204960",
    "end": "1211809"
  },
  {
    "text": "of the nodes on that\npath have changed. So in an AVL,\nafter we insert, we",
    "start": "1211810",
    "end": "1218090"
  },
  {
    "text": "have to make sure\nthat the height of every node on\nthe path is updated. Does this make sense?",
    "start": "1218090",
    "end": "1224600"
  },
  {
    "text": "So the heights\nwill be 1, 2, 3, 4.",
    "start": "1224600",
    "end": "1230500"
  },
  {
    "text": " So the way we\nimplemented the AVLs is that we do regular\ninsertions and deletions,",
    "start": "1230500",
    "end": "1238690"
  },
  {
    "text": "and then at the end, we say,\nwell it used to be an AVL. Now we added or\nremoved the node,",
    "start": "1238690",
    "end": "1243860"
  },
  {
    "text": "so it might be a\nslightly unbalanced AVL, which means it's not an AVL.",
    "start": "1243860",
    "end": "1249340"
  },
  {
    "text": "And we have the\nrebalance procedure. So if you look at on the\nsecond page of the code,",
    "start": "1249340",
    "end": "1256042"
  },
  {
    "text": "insert and delete are\nreally tiny, lines 20 to 22 and 24 to 28.",
    "start": "1256042",
    "end": "1261380"
  },
  {
    "text": "And they're really tiny\nbecause they call the old code and then they call Rebalance.",
    "start": "1261380",
    "end": "1266500"
  },
  {
    "text": "So all the magic in an\nAVL is in Rebalance. The first thing that\nRebalance does, if you see,",
    "start": "1266500",
    "end": "1273649"
  },
  {
    "text": "it has a while loop there, and\nthe first thing that it does in the while loop is it updates\nthe height, and this is why.",
    "start": "1273650",
    "end": "1280150"
  },
  {
    "text": "The height might have\nchanged after the insert, so any decision based on\nthe old height is bad.",
    "start": "1280150",
    "end": "1285210"
  },
  {
    "text": " That's why we have that there. ",
    "start": "1285210",
    "end": "1292900"
  },
  {
    "text": "Make sense so far? ",
    "start": "1292900",
    "end": "1298610"
  },
  {
    "text": "So if you look at rebalance,\ndon't try to understand it quite yet, but\nwhat it does is it",
    "start": "1298610",
    "end": "1304529"
  },
  {
    "text": "calls Rotate Left\nand Rotate Right. Well, Left Rotate, Right Rotate. ",
    "start": "1304530",
    "end": "1311190"
  },
  {
    "text": "All the magic is in Rebalance,\nand the tools that it uses are Left Rotate\nand Right Rotate.",
    "start": "1311190",
    "end": "1316929"
  },
  {
    "text": "Now, I'm going to show you\nwhat a rotation is supposed to do in-- and the children\nof these nodes are a, b, c, d.",
    "start": "1316930",
    "end": "1336950"
  },
  {
    "text": "Also, this node is hanging\noff of something here, e.",
    "start": "1336950",
    "end": "1343860"
  },
  {
    "text": "If I want to do a\nRight Rotate here, so if I want to rotate the tree\nlike this, then after rotating,",
    "start": "1343860",
    "end": "1353360"
  },
  {
    "text": "it's going to look like this. ",
    "start": "1353360",
    "end": "1371860"
  },
  {
    "text": "So notice that c got moved\nfrom B to A, but it got",
    "start": "1371860",
    "end": "1377240"
  },
  {
    "text": "moved in such a way that the\nwhole thing is still a BST. These guys show up in the\nsame order as children,",
    "start": "1377240",
    "end": "1383049"
  },
  {
    "text": "and these guys show\nup in the same order, so search will still work.",
    "start": "1383050",
    "end": "1388403"
  },
  {
    "text": "This is how it's supposed\nto look like as a picture. Let's try to write the\npseudocode for achieving this.",
    "start": "1388404",
    "end": "1393830"
  },
  {
    "text": " AUDIENCE: First, you\nidentify the parent node.",
    "start": "1393830",
    "end": "1401159"
  },
  {
    "text": "Step one. PROFESSOR: Well,\nlet's say we have it.",
    "start": "1401160",
    "end": "1406320"
  },
  {
    "text": "AUDIENCE: I mean from B.\nYou say, A is my parent. That's now going to\nbecome my right child.",
    "start": "1406320",
    "end": "1412477"
  },
  {
    "text": "PROFESSOR: OK. ",
    "start": "1412477",
    "end": "1418060"
  },
  {
    "text": "So what do you want to change? By the way, this whole thing\nhas to happen in constant time,",
    "start": "1418060",
    "end": "1424400"
  },
  {
    "text": "so we're not allowed to go\nanywhere inside here, here, here, or here. We're allowed to\nchange these links,",
    "start": "1424400",
    "end": "1429870"
  },
  {
    "text": "but if you go\ninside and try to do more complicated\nrestructuring, that's going to block the running time.",
    "start": "1429870",
    "end": "1435297"
  },
  {
    "text": "We're only allowed\nto change the links that you see on the board. AUDIENCE: I know in the BST, not\nBST node but BST, the delete,",
    "start": "1435297",
    "end": "1444149"
  },
  {
    "text": "if you're deleting the root,\nthey make up the pseudoroot. PROFESSOR: Let's\nnot worry about it.",
    "start": "1444150",
    "end": "1450440"
  },
  {
    "text": "So Delete already did\nthat magic for you, right? So the pseudoroot would be\nhere, so this node has a root.",
    "start": "1450440",
    "end": "1456221"
  },
  {
    "text": "We're happy. AUDIENCE: That's not\nwhat I'm talking about. I'm saying that you could do\nthe same with B because you're",
    "start": "1456221",
    "end": "1461720"
  },
  {
    "text": "going to have to break a\nlink with lowercase c onto B in order to flip it.",
    "start": "1461720",
    "end": "1468520"
  },
  {
    "text": "So I'm saying you could have\na placer, some sort of place to put it so you don't lose it.",
    "start": "1468520",
    "end": "1475607"
  },
  {
    "text": "PROFESSOR: OK. Let's see if we do that. AUDIENCE: The new right\nchild of B will be A,",
    "start": "1475607",
    "end": "1484649"
  },
  {
    "text": "and the new left child of A will\nbe C, and the new parent of c",
    "start": "1484650",
    "end": "1490840"
  },
  {
    "text": "is A. PROFESSOR: OK,\nlet's move slower. I have to write them down. So the new right child of B is?",
    "start": "1490840",
    "end": "1499131"
  },
  {
    "text": "AUDIENCE: Is A.\nAlso, you probably should do temp\nvariables to store them.",
    "start": "1499131",
    "end": "1505601"
  },
  {
    "text": "AUDIENCE: I don't\nthink you have to. You can just swap the one\nconnection and swap the other.",
    "start": "1505601",
    "end": "1512432"
  },
  {
    "text": " PROFESSOR: Let's do it\nwithout worrying about temps, and then we can figure\nout temps later.",
    "start": "1512432",
    "end": "1519150"
  },
  {
    "text": "So B's right becomes A. So\nit's going to be like this.",
    "start": "1519150",
    "end": "1526000"
  },
  {
    "text": " Let me erase this\nconfusing error.",
    "start": "1526000",
    "end": "1532090"
  },
  {
    "text": " AUDIENCE: And A's\nleft child is c.",
    "start": "1532090",
    "end": "1538785"
  },
  {
    "start": "1538785",
    "end": "1545420"
  },
  {
    "text": "PROFESSOR: A's left child is c.",
    "start": "1545420",
    "end": "1552250"
  },
  {
    "text": "OK. AUDIENCE: C's parent is A. PROFESSOR: C's parent\nis A. OK, very good.",
    "start": "1552250",
    "end": "1562980"
  },
  {
    "text": "So I changed the child,\nthen I changed the parent so that they would match up. ",
    "start": "1562980",
    "end": "1570160"
  },
  {
    "text": "So if B's right is A, then\nwhat should I do with-- AUDIENCE: A's parent is B.",
    "start": "1570160",
    "end": "1579264"
  },
  {
    "text": "PROFESSOR: Always\ndo them in pairs so you don't lose track of them. And?",
    "start": "1579264",
    "end": "1584516"
  },
  {
    "text": "AUDIENCE: B's parent is\ne and e's subchild is B.",
    "start": "1584516",
    "end": "1589592"
  },
  {
    "text": "PROFESSOR: Sorry. B's parent is e, right? AUDIENCE: Yeah. ",
    "start": "1589592",
    "end": "1596492"
  },
  {
    "text": "PROFESSOR: So B's\nparent is e, and-- AUDIENCE: e's left.",
    "start": "1596492",
    "end": "1602090"
  },
  {
    "text": "PROFESSOR: Child is-- AUDIENCE: B. PROFESSOR: Because I\ndrew it like this, right? But if I drew it like this?",
    "start": "1602090",
    "end": "1609940"
  },
  {
    "text": "AUDIENCE: e's-- PROFESSOR: It would have\nto be the right child, so we have to look\nat both cases.",
    "start": "1609940",
    "end": "1617930"
  },
  {
    "text": "AUDIENCE: If B is\ngreater than e, then it would be right child,\nand if B is less than e,",
    "start": "1617931",
    "end": "1624749"
  },
  {
    "text": "it would be left child. PROFESSOR: OK. So if B is greater than\ne, then e's right is B.",
    "start": "1624749",
    "end": "1638540"
  },
  {
    "text": "Otherwise, e's left is B, right?",
    "start": "1638540",
    "end": "1643680"
  },
  {
    "text": "Now, suppose comparisons\nare expensive and they don't want to do a\ncomparison to find this out. I want to play with\nthe tree instead.",
    "start": "1643680",
    "end": "1649415"
  },
  {
    "text": "What do I do? ",
    "start": "1649415",
    "end": "1657372"
  },
  {
    "text": "AUDIENCE: Can you see which\none A was before that? PROFESSOR: Yep.",
    "start": "1657372",
    "end": "1663670"
  },
  {
    "text": "AUDIENCE: If A used\nto be the right child, now B is the right child. PROFESSOR: Yeah. I haven't changed the child\nyet, so I can do that.",
    "start": "1663670",
    "end": "1671150"
  },
  {
    "text": "AUDIENCE: That's still a\ncomparison though, right? PROFESSOR: But now I'm doing\na pointer comparison and not",
    "start": "1671150",
    "end": "1676730"
  },
  {
    "text": "a key comparison. AUDIENCE: If e.r is A, then--",
    "start": "1676730",
    "end": "1682270"
  },
  {
    "text": "PROFESSOR: If e.right is A,\nthen it becomes B. Otherwise.",
    "start": "1682270",
    "end": "1688270"
  },
  {
    "text": " OK, this looks good.",
    "start": "1688270",
    "end": "1693707"
  },
  {
    "text": "So there's the issue\nof temp variables and assigning these\nin the right order so you don't have too many\ntemp variables and too",
    "start": "1693707",
    "end": "1699010"
  },
  {
    "text": "many lines of code, and the\nPython code in the handout takes care of that. But this is the\nlogic that you want.",
    "start": "1699010",
    "end": "1705380"
  },
  {
    "text": "So if you have to\nwrite it from scratch, you don't have to memorize that. Remember that you want\nto get from here to here,",
    "start": "1705380",
    "end": "1712760"
  },
  {
    "text": "and do exactly the thought\nprocess that we have here. What if I want to do a\nleft rotation instead",
    "start": "1712760",
    "end": "1722059"
  },
  {
    "text": "of a right rotation? AUDIENCE: You just have\nto change the r's to l's.",
    "start": "1722060",
    "end": "1729136"
  },
  {
    "text": "PROFESSOR: Very good. Copy, paste. Swap l's and r's and we're done. ",
    "start": "1729136",
    "end": "1737060"
  },
  {
    "text": "Why do we need rotations? ",
    "start": "1737060",
    "end": "1742902"
  },
  {
    "text": "AUDIENCE: To rebalance stuff. PROFESSOR: To rebalance stuff. OK. Why do we rebalance stuff?",
    "start": "1742902",
    "end": "1748069"
  },
  {
    "text": "AUDIENCE: Because you\ndon't want your code to crash when you add nodes\nthat are sequentially larger, and then you try to find\nsomething, and then it crashes.",
    "start": "1748069",
    "end": "1756042"
  },
  {
    "text": "PROFESSOR: OK. Why would it crash? AUDIENCE: Because\nthe recursion depth is exceeded because\nyou're going down",
    "start": "1756042",
    "end": "1761601"
  },
  {
    "text": "the line trying\nto find something, and you go down too far. PROFESSOR: OK. So pretending we don't have\na recursion depth issue,",
    "start": "1761602",
    "end": "1767650"
  },
  {
    "text": "then it's going to be slow. So you start from a nice AVL,\nand if you don't rebalance,",
    "start": "1767650",
    "end": "1773990"
  },
  {
    "text": "you get to a BST that's\nslow, slow, slow, and then you'll fail our\ntests and still get a 0.",
    "start": "1773990",
    "end": "1780240"
  },
  {
    "text": "Yes? AUDIENCE: But if you just\nhad a carrot-like tree,",
    "start": "1780240",
    "end": "1787559"
  },
  {
    "text": "or if you added, for instance,\n4, and then you added in 5, and then you added in 3,\nand then you added in 6,",
    "start": "1787560",
    "end": "1792960"
  },
  {
    "text": "and then you added in 2,\nyou'd just get a carrot. So then I feel like AVL\nwouldn't cover that case.",
    "start": "1792960",
    "end": "1802930"
  },
  {
    "text": "PROFESSOR: Let's do\nthem in sequence. ",
    "start": "1802930",
    "end": "1809500"
  },
  {
    "text": "So what are we inserting? So you said 4. AUDIENCE: So you start with\n4, and then you insert 5,",
    "start": "1809500",
    "end": "1815450"
  },
  {
    "text": "then you insert 3. PROFESSOR: Let's see. 4, 3.",
    "start": "1815450",
    "end": "1821402"
  },
  {
    "text": "AUDIENCE: Then you insert\n6, then you insert 2,",
    "start": "1821402",
    "end": "1828530"
  },
  {
    "text": "then you insert 7, and then 1.",
    "start": "1828530",
    "end": "1834150"
  },
  {
    "text": "AUDIENCE: You've\ngot to rotate that. AUDIENCE: Well, the thing is-- PROFESSOR: Well, is this an AVL? PROFESSOR: Well, it's balanced.",
    "start": "1834150",
    "end": "1840032"
  },
  {
    "text": "PROFESSOR: Is it? AUDIENCE: No, it's not. 5 is unhappy. ",
    "start": "1840032",
    "end": "1846200"
  },
  {
    "text": "AUDIENCE: That height\nof the tree is only one greater than the other height.",
    "start": "1846200",
    "end": "1851270"
  },
  {
    "text": "PROFESSOR: So the\nheight here is 1. What's the height here?",
    "start": "1851270",
    "end": "1856442"
  },
  {
    "text": "There's nothing here, so\nthe height is minus 1. ",
    "start": "1856442",
    "end": "1862200"
  },
  {
    "text": "AUDIENCE: I mean, but the\nother side of the tree. PROFESSOR: So if you're\nlooking at this guy,",
    "start": "1862200",
    "end": "1868820"
  },
  {
    "text": "things look balanced,\nbut in an AVL, this has to hold for every node.",
    "start": "1868820",
    "end": "1874572"
  },
  {
    "text": "If there's one node where\nthe heights are unbalanced, the whole thing is unbalanced. Otherwise, the construction\nthat we did before",
    "start": "1874572",
    "end": "1880350"
  },
  {
    "text": "wouldn't make sense. AUDIENCE: It's all [INAUDIBLE]\nwithin the [INAUDIBLE]. PROFESSOR: Yep. So now that we're going to\nlook at rebalancing, which",
    "start": "1880350",
    "end": "1887820"
  },
  {
    "text": "is the magic behind\nAVLs, we have to make sure that after we\nstart with something that's",
    "start": "1887820",
    "end": "1892919"
  },
  {
    "text": "slightly imbalanced, when\nwe rotate things around, we have to make sure that\neverything gets balanced at the end and happy, so that's\na good thing to keep in mind.",
    "start": "1892920",
    "end": "1902320"
  },
  {
    "text": "Good. Any other questions? ",
    "start": "1902320",
    "end": "1907880"
  },
  {
    "text": "AUDIENCE: Is it\nobvious that you can put any number of\nnodes in an AVL tree?",
    "start": "1907880",
    "end": "1913040"
  },
  {
    "text": "PROFESSOR: Point\nany number of nodes? AUDIENCE: Yeah. It's obvious that you can do\none node, or two nodes or three",
    "start": "1913040",
    "end": "1919513"
  },
  {
    "text": "nodes, but is it true that\nfor any number of nodes,",
    "start": "1919513",
    "end": "1925019"
  },
  {
    "text": "you can arrange\ninto an AVL tree? Does that make sense? PROFESSOR: Yeah. So if you want to have\nany number of nodes,",
    "start": "1925020",
    "end": "1933030"
  },
  {
    "text": "you call Insert, AVL Insert,\nand then you'll get an AVL. AUDIENCE: Right. But what I'm trying\nto say is, is it",
    "start": "1933030",
    "end": "1939100"
  },
  {
    "text": "possible to construct an\nAVL tree out of 13 nodes? PROFESSOR: Sure.",
    "start": "1939100",
    "end": "1944230"
  },
  {
    "text": "AUDIENCE: Or 17 nodes? AUDIENCE: Is there a limit for\nwhere that property will not fit? AUDIENCE: Right.",
    "start": "1944230",
    "end": "1949830"
  },
  {
    "text": "Is there some set of nodes-- PROFESSOR: I like this question. I like this question. So what would be the\nperfect binary search tree?",
    "start": "1949830",
    "end": "1959720"
  },
  {
    "text": " AUDIENCE: An element\nof log N height.",
    "start": "1959720",
    "end": "1964998"
  },
  {
    "text": "PROFESSOR: An element\nof log N height and the complete tree, so\nsomething that looks like this.",
    "start": "1964999",
    "end": "1974200"
  },
  {
    "start": "1974200",
    "end": "1980639"
  },
  {
    "text": "Where did we see\nthis thing before? AUDIENCE: In the heap. PROFESSOR: All right.",
    "start": "1980640",
    "end": "1986470"
  },
  {
    "text": "So a heap looks\nexactly like this, except the values inside don't\nfulfill the BST requirement.",
    "start": "1986470",
    "end": "1993620"
  },
  {
    "text": "Otherwise, we'd know how\nto build perfect BSTs. It so happens that we don't. But is this an AVL?",
    "start": "1993620",
    "end": "1999350"
  },
  {
    "start": "1999350",
    "end": "2005895"
  },
  {
    "text": "AUDIENCE: Yes. ",
    "start": "2005895",
    "end": "2011835"
  },
  {
    "text": "AUDIENCE: That\nexample or in general? PROFESSOR: Let's start\nwith that example. Is this an AVL? ",
    "start": "2011835",
    "end": "2021290"
  },
  {
    "text": "AUDIENCE: No. The node just to the\nleft of the root-- PROFESSOR: This guy?",
    "start": "2021290",
    "end": "2027250"
  },
  {
    "text": "AUDIENCE: No. That one's of height two,\nso it has height one. PROFESSOR: This is beautiful.",
    "start": "2027250",
    "end": "2033240"
  },
  {
    "text": "This is as good as it could get. This is an optimal\nbinary search tree. This is perfect.",
    "start": "2033240",
    "end": "2039190"
  },
  {
    "text": "It better match the\ndefinition of AVL, because otherwise, it would mean\nAVL doesn't like perfect trees.",
    "start": "2039190",
    "end": "2044270"
  },
  {
    "text": "So the good news is\nthat any complete tree is going to be an AVL\nbecause everything",
    "start": "2044270",
    "end": "2050158"
  },
  {
    "text": "is perfectly balanced or\nalmost perfectly balanced. The only thing that's not\ncomplete is the last level.",
    "start": "2050159",
    "end": "2058690"
  },
  {
    "text": "So all the paths from the\nroots to the last level are either height log N\nor height log N minus 1.",
    "start": "2058690",
    "end": "2065810"
  },
  {
    "text": "So wherever you do\nthe height comparison, you're going to get\na difference of 1,",
    "start": "2065810",
    "end": "2071219"
  },
  {
    "text": "and we can keep\nadding nodes to this. This is how I'd build a BST\nof as many nodes as we want.",
    "start": "2071219",
    "end": "2079179"
  },
  {
    "text": "AUDIENCE: I have a question. For the fixed heights, why\nwe try to minimize the nodes?",
    "start": "2079179",
    "end": "2086600"
  },
  {
    "text": "Wouldn't a better way to\nbuild a more efficient tree is to try to\nminimize the height?",
    "start": "2086600",
    "end": "2095120"
  },
  {
    "text": "So instead of adding nodes\nup, just fill in the tree?",
    "start": "2095120",
    "end": "2100205"
  },
  {
    "text": "PROFESSOR: Very good. So you're thinking of how to\nbuild an efficient tree, how to build a good tree.",
    "start": "2100205",
    "end": "2105870"
  },
  {
    "text": "Here, I'm trying to\nprove the property about the maximum\nheight of a tree.",
    "start": "2105870",
    "end": "2111480"
  },
  {
    "text": "So here I'm playing\ndevil's advocate. I'm thinking, what is\nthe worst case for AVLs? How do I make AVLs look\nas bad as possible?",
    "start": "2111480",
    "end": "2118720"
  },
  {
    "text": "That's why I started this way. So usually, we're\nthe good guy coding, but after you're\ndone coding and you",
    "start": "2118720",
    "end": "2124140"
  },
  {
    "text": "know how your algorithm runs, if\nyou want to have peace of mind and go to sleep well and\nget full points afterwards,",
    "start": "2124140",
    "end": "2130200"
  },
  {
    "text": "it sometimes helps to\nthink as devil's advocate. How would I break\nthis algorithm? What's the worst thing\nthat I could do to it?",
    "start": "2130200",
    "end": "2136410"
  },
  {
    "text": "And if you can find\nsomething that breaks it, well, you probably\nknow how to fix it.",
    "start": "2136410",
    "end": "2141559"
  },
  {
    "text": "If not, you can\nsleep well at night and know that your\nalgorithm is sound. ",
    "start": "2141560",
    "end": "2149349"
  },
  {
    "text": "AUDIENCE: In that example\non the board, where we said",
    "start": "2149350",
    "end": "2155216"
  },
  {
    "text": "the height of the tree on\nthe left side was h minus 1,",
    "start": "2155216",
    "end": "2160250"
  },
  {
    "text": "and then the other\nside had the h minus 2. ",
    "start": "2160250",
    "end": "2165990"
  },
  {
    "text": "For that h minus 2\ntree, every node in that",
    "start": "2165990",
    "end": "2171920"
  },
  {
    "text": "has to be h minus 2\nheight, every leaf. Is that what we're saying?",
    "start": "2171920",
    "end": "2177190"
  },
  {
    "text": "Otherwise, it falls apart\nbecause there would be one that's-- PROFESSOR: So we're saying\nthat the root of this tree",
    "start": "2177190",
    "end": "2182518"
  },
  {
    "text": "has to be h minus 2. And the way we do this\nis we copy this guy over,",
    "start": "2182518",
    "end": "2187970"
  },
  {
    "text": "so this guy's lopsided, too. So it's not every path to\nthe bottom, just one path.",
    "start": "2187970",
    "end": "2194105"
  },
  {
    "text": "AUDIENCE: OK. So it could be an incomplete. PROFESSOR: Yep. In that case, is that balanced?",
    "start": "2194105",
    "end": "2203020"
  },
  {
    "text": "PROFESSOR: So this was an\nAVL of height 2, right?",
    "start": "2203020",
    "end": "2208310"
  },
  {
    "text": "If I stick it here, it's still\ngoing to be an AVL of height 2. AUDIENCE: Right.",
    "start": "2208310",
    "end": "2213432"
  },
  {
    "text": "PROFESSOR: This thing\nwill have height 2. This thing will have height 3.",
    "start": "2213432",
    "end": "2218517"
  },
  {
    "text": "AUDIENCE: OK. So it's not everything\non the same level, necessarily, that needs\nto be of the same height.",
    "start": "2218518",
    "end": "2224784"
  },
  {
    "text": "It's only the children. PROFESSOR: Yep. So the two children, so two\nnodes on the same level,",
    "start": "2224784",
    "end": "2230339"
  },
  {
    "text": "might have their heights differ\nby one, but not more than one. If they could differ\nby more than one,",
    "start": "2230340",
    "end": "2235720"
  },
  {
    "text": "you could have a link list. Because they differ by one,\nthen it's sort of sane.",
    "start": "2235720",
    "end": "2240740"
  },
  {
    "text": "It's almost balanced. Good. I like the questions.",
    "start": "2240740",
    "end": "2246130"
  },
  {
    "text": "It means you guys are thinking. I really like it. Yeah? AUDIENCE: If they differ by one.",
    "start": "2246130",
    "end": "2251549"
  },
  {
    "text": "So you have an\nideal tree up there, and then you have the\nworst case possible. That wouldn't affect\nperformance at all, right,",
    "start": "2251550",
    "end": "2259079"
  },
  {
    "text": "if you have the worst case? PROFESSOR: So what we know\nwhat performance is we have this guarantee.",
    "start": "2259080",
    "end": "2265090"
  },
  {
    "text": "It's at worst a\nconstant times log n. This is constant times log n.",
    "start": "2265090",
    "end": "2270240"
  },
  {
    "text": "The constant happens to be 1. This is a constant times log n. The constant happens to be\nsomething bigger than 1.",
    "start": "2270240",
    "end": "2278515"
  },
  {
    "text": "I think it's somewhere\nbetween 2 and 3. AUDIENCE: That just\nvaries by the constant. PROFESSOR: Yeah.",
    "start": "2278515",
    "end": "2283856"
  },
  {
    "text": "And since we only care about\nasymptotics in this class, we're happy. But we don't know\nhow to build this.",
    "start": "2283856",
    "end": "2290760"
  },
  {
    "text": "This is just something pretty\nthat we draw on a board, but we don't have an algorithm\nthat efficiency builds",
    "start": "2290760",
    "end": "2295940"
  },
  {
    "text": "this out of a random series\nof insertions and deletions.",
    "start": "2295940",
    "end": "2301380"
  },
  {
    "text": "I hope we don't. Otherwise, I look bad. What do I want to delete?",
    "start": "2301380",
    "end": "2307360"
  },
  {
    "text": " AUDIENCE: Instead\nof a binary search",
    "start": "2307360",
    "end": "2314164"
  },
  {
    "text": "tree as the base\nof the AVL, if you wanted to have four\nchildren per node,",
    "start": "2314164",
    "end": "2319785"
  },
  {
    "text": "would this change\nthat much except you'd just have twice\nas many variables?",
    "start": "2319785",
    "end": "2326606"
  },
  {
    "text": "PROFESSOR: That's a\ngood exam question. ",
    "start": "2326606",
    "end": "2333510"
  },
  {
    "text": "So it turns out that\nthere's this tree called a B tree, which has\n1,000 or more nodes.",
    "start": "2333510",
    "end": "2341490"
  },
  {
    "text": "AUDIENCE: B tree? Doesn't that stand for binary? PROFESSOR: No. It's B. Just B. That's\nused for databases on disk.",
    "start": "2341490",
    "end": "2350972"
  },
  {
    "text": "So there, you want to make the\nheight as small as possible, because every time you get a\nnode, you do a disk access, and that's expensive.",
    "start": "2350972",
    "end": "2357140"
  },
  {
    "text": "But once you do a\ndisk access, the nodes can be as big as you want.",
    "start": "2357140",
    "end": "2362430"
  },
  {
    "text": "You can read a few bytes off the\ndisk at roughly the same cost as you can read a megabyte,\nso you're better off",
    "start": "2362430",
    "end": "2367869"
  },
  {
    "text": "reading a megabyte. I might be exaggerating a\nbit, but for a few kilobytes, that's true. So B trees have\nthousands of children,",
    "start": "2367870",
    "end": "2374560"
  },
  {
    "text": "and they keep them sorted. It's sort of like that,\nbut the fan out is huge.",
    "start": "2374560",
    "end": "2379630"
  },
  {
    "text": "And it turns out\neverything is still log n as long as the number of\nchildren you have is constant. AUDIENCE: But for this\nrotation thing, though.",
    "start": "2379630",
    "end": "2386434"
  },
  {
    "text": "PROFESSOR: Oh god, no. We don't have to rotate. It gets a lot more complicated.",
    "start": "2386434",
    "end": "2391640"
  },
  {
    "text": "We haven't gotten to\nrebalancing yet, right? Wait until you see how\nrebalancing looks like with two children,\nand then imagine",
    "start": "2391640",
    "end": "2397920"
  },
  {
    "text": "trying to figure out the\ncases for 1,000 children. That's not sane.",
    "start": "2397920",
    "end": "2403559"
  },
  {
    "text": "In B trees, they\nuse something else to make them balance\nthe right way. And of course, they're\nharder than this.",
    "start": "2403560",
    "end": "2411710"
  },
  {
    "text": "So let me try to get through\nrebalancing somewhat quickly. ",
    "start": "2411710",
    "end": "2425609"
  },
  {
    "text": "This is where I forget\nwhat I need to do. Rebalancing. ",
    "start": "2425610",
    "end": "2472980"
  },
  {
    "text": "So suppose we call\nRebalance on this guy,",
    "start": "2472980",
    "end": "2487450"
  },
  {
    "text": "and we know that the nodes\nhere have heights k minus 1, this is k minus 1\nor k, and this is k,",
    "start": "2487450",
    "end": "2493599"
  },
  {
    "text": "and I want to call\nRebalance here. Let's first figure out\nif it's an AVL tree",
    "start": "2493600",
    "end": "2499040"
  },
  {
    "text": "or if there's something\nwrong with it. What's the height here?",
    "start": "2499040",
    "end": "2504675"
  },
  {
    "text": "AUDIENCE: k plus 1. PROFESSOR: So no matter\nwhat the height is here, the height here\nhas to be k plus 1.",
    "start": "2504675",
    "end": "2511400"
  },
  {
    "text": "What's the height here? AUDIENCE: k plus 2.",
    "start": "2511400",
    "end": "2516570"
  },
  {
    "text": "PROFESSOR: OK. What else can you tell\nme about this node? ",
    "start": "2516570",
    "end": "2525160"
  },
  {
    "text": "If I call Check RI\non it, it's going to crash because the\nrep invariant for AVLs",
    "start": "2525160",
    "end": "2530440"
  },
  {
    "text": "does not hold here. This child at the\ntop of this tree will have height k minus 1. This will have height k plus 1.",
    "start": "2530440",
    "end": "2537250"
  },
  {
    "text": "The difference is more than 1. Not good. So this is unhappy.",
    "start": "2537250",
    "end": "2542544"
  },
  {
    "text": "How do we fix the situation?  AUDIENCE: Rotate\nleft around k plus 1.",
    "start": "2542544",
    "end": "2549200"
  },
  {
    "text": "PROFESSOR: All right. So it better be a rotation,\nbecause we spent so much figuring out how to rotate.",
    "start": "2549200",
    "end": "2556016"
  },
  {
    "text": "Let's see what happens\nif we rotate this way, and the way to\nkeep track of this is I'm going to label my nodes.",
    "start": "2556016",
    "end": "2561556"
  },
  {
    "text": " B, A, left child of A\nhas height k minus 1.",
    "start": "2561556",
    "end": "2573090"
  },
  {
    "text": "This guy is k minus 1. ",
    "start": "2573090",
    "end": "2580760"
  },
  {
    "text": "So what's the height of A now? AUDIENCE: k.",
    "start": "2580760",
    "end": "2586432"
  },
  {
    "text": "Oh wait, that's not a node. Just k minus 1 or k. PROFESSOR: So this is a\ntree of height k minus 1.",
    "start": "2586432",
    "end": "2593420"
  },
  {
    "text": "This is a height of\ntree k minus 1 or k. The height of this guy is?",
    "start": "2593420",
    "end": "2598640"
  },
  {
    "text": "AUDIENCE: k.  AUDIENCE: k plus 1.",
    "start": "2598640",
    "end": "2603920"
  },
  {
    "text": "PROFESSOR: Or k plus 1. The height of this\nguy is definitely k. The height of this\nguys is k or k plus 1.",
    "start": "2603920",
    "end": "2610665"
  },
  {
    "text": "Is that an AVL? Is it happy now? ",
    "start": "2610665",
    "end": "2617100"
  },
  {
    "text": "So this is the easy kind of\nrebalancing, one rotation and you're done. AUDIENCE: [INAUDIBLE]\nthe difference between k",
    "start": "2617100",
    "end": "2623334"
  },
  {
    "text": "minus 1 and k minus 1 over k? PROFESSOR: It's not\nk minus 1 over k. It's either k minus 1 or k. ",
    "start": "2623334",
    "end": "2630610"
  },
  {
    "text": "Bad notation.  Thank you for the question. You saved everyone\nfrom confusion.",
    "start": "2630610",
    "end": "2637220"
  },
  {
    "text": " No, there's no\nfractional heights.",
    "start": "2637220",
    "end": "2642370"
  },
  {
    "text": "Anything else? Thank you. That was good. ",
    "start": "2642370",
    "end": "2649461"
  },
  {
    "text": "All right. So this is easy, right? This is the easy rotation. Let's do the hard one now. ",
    "start": "2649461",
    "end": "2677670"
  },
  {
    "text": "What's the height here? AUDIENCE: k plus 1. ",
    "start": "2677670",
    "end": "2687112"
  },
  {
    "text": "PROFESSOR: What's\nthe height here? AUDIENCE: Plus 2.",
    "start": "2687112",
    "end": "2693580"
  },
  {
    "text": "PROFESSOR: AVL, not AVL? AUDIENCE: No. PROFESSOR: k minus\n1 on the left child,",
    "start": "2693580",
    "end": "2700810"
  },
  {
    "text": "k plus 1 on the right child. The difference is more than one. Not an AVL.",
    "start": "2700810",
    "end": "2706120"
  },
  {
    "text": "How do we fix this? ",
    "start": "2706120",
    "end": "2714131"
  },
  {
    "text": "AUDIENCE: Make a right\nrotation [INAUDIBLE]. PROFESSOR: Sorry? AUDIENCE: Make a right\nrotation on k first.",
    "start": "2714132",
    "end": "2721560"
  },
  {
    "text": "PROFESSOR: So make a\nright rotation where? AUDIENCE: On k\n[INAUDIBLE] plus 1. ",
    "start": "2721560",
    "end": "2730290"
  },
  {
    "text": "PROFESSOR: Let me\nbreak this up so we could see how that\nwould work out. ",
    "start": "2730290",
    "end": "2739280"
  },
  {
    "text": "So these two are k\nminus 1 and k minus 1, and these nodes are\nA, B, and C. So you're",
    "start": "2739280",
    "end": "2748140"
  },
  {
    "text": "saying do a right\nrotation here, right? Let's see what that gets us to.",
    "start": "2748140",
    "end": "2754940"
  },
  {
    "text": "So A is the same,\nand then here I'm going to have C instead of B,\nand B. The right child of B",
    "start": "2754940",
    "end": "2764140"
  },
  {
    "text": "is the same as it was before. The left child of\nB is k minus 1.",
    "start": "2764140",
    "end": "2774920"
  },
  {
    "text": "Then the left child of\nC is another k minus 1, and this guy is k minus 1.",
    "start": "2774920",
    "end": "2781510"
  },
  {
    "text": "OK, what's the height at B now? AUDIENCE: k. PROFESSOR: OK.",
    "start": "2781510",
    "end": "2787319"
  },
  {
    "text": "What's the height here? AUDIENCE: k plus 1.",
    "start": "2787320",
    "end": "2793140"
  },
  {
    "text": "PROFESSOR: And the height here? AUDIENCE: k plus 2. PROFESSOR: Is this an AVL?",
    "start": "2793140",
    "end": "2800110"
  },
  {
    "text": "So we're not done, but what's\nthe good news about this? AUDIENCE: Now you can\nrotate it left around C.",
    "start": "2800110",
    "end": "2807664"
  },
  {
    "text": "PROFESSOR: Yep. Exactly. That is this, and we know\nhow to fix this in one step.",
    "start": "2807664",
    "end": "2815980"
  },
  {
    "text": "You said exactly\nthe right thing. This is exactly what we do. First, rotate here so\nthat we get to that,",
    "start": "2815980",
    "end": "2823640"
  },
  {
    "text": "and then we're in\nthe happy case. So intuitively, the difference\nbetween the happy case",
    "start": "2823640",
    "end": "2828990"
  },
  {
    "text": "and the harder case that's\ngoing to be happy eventually is where the heavy\npath is, so where",
    "start": "2828990",
    "end": "2836860"
  },
  {
    "text": "you have the bigger height. In this case, k\nplus 2, k plus 1, k.",
    "start": "2836860",
    "end": "2844500"
  },
  {
    "text": "So the heavy path\nis this thing here. It's a straight line.",
    "start": "2844500",
    "end": "2850160"
  },
  {
    "text": "Because of that, we can\nrotate here and then redistribute the\nweights uniformly.",
    "start": "2850160",
    "end": "2856289"
  },
  {
    "text": "In this case, the\nheavy path is this. It's a zigzag, so one\nrotation won't fix it.",
    "start": "2856290",
    "end": "2864920"
  },
  {
    "text": "Instead, we do one\nrotation here so that we make the\nweights be distributed",
    "start": "2864920",
    "end": "2870570"
  },
  {
    "text": "in a straight line, and\nthen one rotation here, which makes\neverything look good. Yes?",
    "start": "2870570",
    "end": "2875979"
  },
  {
    "text": "AUDIENCE: So that's\njust a general pattern. And you redistribute\n[INAUDIBLE]? ",
    "start": "2875979",
    "end": "2882412"
  },
  {
    "text": "PROFESSOR: So the first thing\nwe do is say you're at a node and you need to rebalance. First thing, you\ncheck the heights and see if it's\nalready balanced.",
    "start": "2882412",
    "end": "2889980"
  },
  {
    "text": "If it's not balanced,\nsuppose your heavier node is on the right. Then you go and see if\nthe right child is heavier",
    "start": "2889980",
    "end": "2899260"
  },
  {
    "text": "or the left child is heavier. So you see if the height\ndistribution is a straight line",
    "start": "2899260",
    "end": "2904660"
  },
  {
    "text": "or is exact, and then\nyou decide whether you're going to do one rotation\nor two rotations. ",
    "start": "2904660",
    "end": "2911970"
  },
  {
    "text": "So this is all nice and\ngood except for one thing. The heights keep\nchanging here, and we're",
    "start": "2911970",
    "end": "2919105"
  },
  {
    "text": "storing the heights\nin each node. So if we're doing\nall this rotating",
    "start": "2919105",
    "end": "2924150"
  },
  {
    "text": "without updating the\nheights, then we're going to have something\nthat looks like an AVL",
    "start": "2924150",
    "end": "2929924"
  },
  {
    "text": "but doesn't keep track\nof the heights anymore, so eventually, we're going\nto make bad decisions.",
    "start": "2929924",
    "end": "2934980"
  },
  {
    "text": "So we need to\nupdate the heights. Where do we update the heights?",
    "start": "2934980",
    "end": "2940254"
  },
  {
    "text": "You can look at\nthe code and cheat or you can try to think and\ntell me the answer, either way.",
    "start": "2940254",
    "end": "2945457"
  },
  {
    "start": "2945457",
    "end": "2953570"
  },
  {
    "text": "So this only does\nrotates, right? If rotates would be able\nto update the heights,",
    "start": "2953570",
    "end": "2960649"
  },
  {
    "text": "everything would be good. I wouldn't have to\nworry about this. ",
    "start": "2960649",
    "end": "2966350"
  },
  {
    "text": "Pretend I hadn't deleted\nthe original case here, which I think was A, B,\nC, and then some children.",
    "start": "2966350",
    "end": "2978050"
  },
  {
    "text": "What heights changed here? ",
    "start": "2978050",
    "end": "2985950"
  },
  {
    "text": "When I did this rotation,\nwhat heights changed? AUDIENCE: B's height changed.",
    "start": "2985950",
    "end": "2993039"
  },
  {
    "text": "AUDIENCE: B, A, and\nC is greater than B.",
    "start": "2993040",
    "end": "2998320"
  },
  {
    "text": "PROFESSOR: B and potentially\nA. If I'm not sure, then I'm going to try to\nupdate the height anyway",
    "start": "2998320",
    "end": "3004300"
  },
  {
    "text": "to make sure that I\nhave the right height. After I do this, I have\nto update the height on B",
    "start": "3004300",
    "end": "3010789"
  },
  {
    "text": "and update the heights\non A. Is this correct? ",
    "start": "3010790",
    "end": "3021472"
  },
  {
    "text": "AUDIENCE: And B. PROFESSOR: And all the way up. Let's assume that happens. Does this look right?",
    "start": "3021472",
    "end": "3028242"
  },
  {
    "text": "AUDIENCE: Don't you also\nhave to update for C? PROFESSOR: For c. ",
    "start": "3028242",
    "end": "3034886"
  },
  {
    "text": "Did I change anything under c? AUDIENCE: I think he's\ntalking about capital C.",
    "start": "3034886",
    "end": "3040290"
  },
  {
    "text": "PROFESSOR: Oh,\ncapital C. Yeah, OK. ",
    "start": "3040290",
    "end": "3048800"
  },
  {
    "text": "So the children are the same. They were a and b before,\nthey're a and b afterwards,",
    "start": "3048800",
    "end": "3053900"
  },
  {
    "text": "so I don't have to\nworry about this guy. The heights here\nhaven't changed, so the height here\nhasn't changed.",
    "start": "3053900",
    "end": "3059705"
  },
  {
    "text": "But you're thinking\nof a problem, and that is good because\nthere is a problem here. ",
    "start": "3059705",
    "end": "3066251"
  },
  {
    "text": "AUDIENCE: What if there's a\nsubtree instead of small c? PROFESSOR: A subtree\ninstead of small c?",
    "start": "3066251",
    "end": "3073220"
  },
  {
    "text": "OK, so yeah, this is a subtree.  After rotating, this\nsubtree moves over here.",
    "start": "3073220",
    "end": "3079960"
  },
  {
    "text": " AUDIENCE: Wait. You have to update A\nfirst, and then update B.",
    "start": "3079960",
    "end": "3085580"
  },
  {
    "text": "PROFESSOR: OK. So the height starts\nfrom the bottom. The bottom height\nzero, the next one",
    "start": "3085580",
    "end": "3091260"
  },
  {
    "text": "up, the next one\nup, the next one up. Keep that in mind. Nothing changed below this guy,\nnothing changed below this guy,",
    "start": "3091260",
    "end": "3097640"
  },
  {
    "text": "nothing changed here, so I\ndon't have to update these. But when I compute the\nheight, update height",
    "start": "3097640",
    "end": "3104540"
  },
  {
    "text": "at the beginning of\nthe listing assumes that the height of the\nchildren is correct. So when I compute the\nheight of my mode,",
    "start": "3104540",
    "end": "3111116"
  },
  {
    "text": "the height of the children\nhas to be updated. So if I call Update\nHeight of B first, I already know that\nthis might have changed,",
    "start": "3111116",
    "end": "3116950"
  },
  {
    "text": "so whatever answer\nI get is bogus. So this doesn't work\nand I have to do this.",
    "start": "3116950",
    "end": "3123575"
  },
  {
    "start": "3123575",
    "end": "3133290"
  },
  {
    "text": "This is rotation. That's rebalancing. One more trick to rebalancing. So we talked about rebalancing\nthe subtree at one node.",
    "start": "3133290",
    "end": "3143200"
  },
  {
    "text": "What's missing\nfrom this picture? ",
    "start": "3143200",
    "end": "3149559"
  },
  {
    "text": "AUDIENCE: So you check\nit on all levels? PROFESSOR: Yeah. So I made some changes here. My tree might look happy\nstarting from here on,",
    "start": "3149560",
    "end": "3158830"
  },
  {
    "text": "but if I did an\ninsertion or a deletion, heights changed all\nthe way up, so I have to go all the way up and do\nmore rebalancings potentially.",
    "start": "3158830",
    "end": "3166635"
  },
  {
    "text": " And that's it. These are AVLs.",
    "start": "3166635",
    "end": "3172787"
  },
  {
    "text": "Any other questions? ",
    "start": "3172787",
    "end": "3178574"
  },
  {
    "text": "Did you guys get them? Do they make more sense now? AUDIENCE: Yes. PROFESSOR: OK. Good.",
    "start": "3178574",
    "end": "3184300"
  },
  {
    "text": "You'll have to play with\nthem on the next Pset. AUDIENCE: By \"play,\"\nwhat do you mean?",
    "start": "3184300",
    "end": "3190004"
  },
  {
    "text": "PROFESSOR: Well, you're not\nwriting it from scratch. You have to modify\nexisting code. AUDIENCE: What are we\ngoing to make it do?",
    "start": "3190004",
    "end": "3197614"
  },
  {
    "text": "PROFESSOR: So you'll have to\nkeep track of something other than heights. You'll have to keep\ntrack of a new value.",
    "start": "3197614",
    "end": "3202670"
  },
  {
    "text": "AUDIENCE: Oh, like the\nminimum or something? PROFESSOR: Or something, yeah. ",
    "start": "3202670",
    "end": "3207371"
  }
]