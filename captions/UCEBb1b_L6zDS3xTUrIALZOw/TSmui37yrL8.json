[
  {
    "start": "0",
    "end": "500"
  },
  {
    "text": "Using a D register as\nthe memory component",
    "start": "500",
    "end": "2960"
  },
  {
    "text": "in our sequential logic\nsystem works great!",
    "start": "2960",
    "end": "5694"
  },
  {
    "text": "At each rising\nedge of the clock,",
    "start": "5695",
    "end": "7070"
  },
  {
    "text": "the register loads\nthe new state,",
    "start": "7070",
    "end": "8880"
  },
  {
    "text": "which then appears at\nthe register’s output",
    "start": "8880",
    "end": "11280"
  },
  {
    "text": "as the current state for the\nrest of the clock period.",
    "start": "11280",
    "end": "15070"
  },
  {
    "text": "The combinational logic uses\nthe current state and the value",
    "start": "15070",
    "end": "18000"
  },
  {
    "text": "of the inputs to calculate\nthe next state and the values",
    "start": "18000",
    "end": "21020"
  },
  {
    "text": "for the outputs.",
    "start": "21020",
    "end": "23450"
  },
  {
    "text": "A sequence of rising\nclock edges and inputs",
    "start": "23450",
    "end": "25960"
  },
  {
    "text": "will produce a sequence\nof states, which",
    "start": "25960",
    "end": "28669"
  },
  {
    "text": "leads to a sequence of outputs.",
    "start": "28670",
    "end": "31360"
  },
  {
    "text": "In the next chapter we’ll\nintroduce a new abstraction,",
    "start": "31360",
    "end": "34160"
  },
  {
    "text": "finite state machines, that\nwill make it easy to design",
    "start": "34160",
    "end": "37260"
  },
  {
    "text": "sequential logic systems.",
    "start": "37260",
    "end": "39489"
  },
  {
    "text": "Let’s use the timing analysis\ntechniques we’ve learned",
    "start": "39490",
    "end": "42370"
  },
  {
    "text": "on the sequential logic\nsystem shown here.",
    "start": "42370",
    "end": "46070"
  },
  {
    "text": "The timing specifications for\nthe register and combinational",
    "start": "46070",
    "end": "49100"
  },
  {
    "text": "logic are as shown.",
    "start": "49100",
    "end": "51149"
  },
  {
    "text": "Here are the questions\nwe need to answer.",
    "start": "51150",
    "end": "54240"
  },
  {
    "text": "The contamination delay of\nthe combinational logic isn’t",
    "start": "54240",
    "end": "57020"
  },
  {
    "text": "specified.",
    "start": "57020",
    "end": "58590"
  },
  {
    "text": "What does it have to be\nin order for the system",
    "start": "58590",
    "end": "60780"
  },
  {
    "text": "to work correctly?",
    "start": "60780",
    "end": "62789"
  },
  {
    "text": "Well, we know that the\nsum of register and logic",
    "start": "62790",
    "end": "65860"
  },
  {
    "text": "contamination delays\nhas to be greater",
    "start": "65860",
    "end": "68290"
  },
  {
    "text": "than or equal to the hold\ntime of the register.",
    "start": "68290",
    "end": "71080"
  },
  {
    "text": "Using the timing\nparameters we do know along",
    "start": "71080",
    "end": "73750"
  },
  {
    "text": "with a little\narithmetic tells us",
    "start": "73750",
    "end": "75520"
  },
  {
    "text": "that the contamination\ndelay of the logic",
    "start": "75520",
    "end": "77659"
  },
  {
    "text": "has to be at least 1ns.",
    "start": "77660",
    "end": "81700"
  },
  {
    "text": "What is the minimum value\nfor the clock period tCLK?",
    "start": "81700",
    "end": "84360"
  },
  {
    "text": "The second timing inequality\nfrom the previous section",
    "start": "84360",
    "end": "88280"
  },
  {
    "text": "tells us that tCLK\nhas be greater",
    "start": "88280",
    "end": "90430"
  },
  {
    "text": "than than the sum of the\nregister and logic propagation",
    "start": "90430",
    "end": "93530"
  },
  {
    "text": "delays plus the setup\ntime of the register.",
    "start": "93530",
    "end": "97140"
  },
  {
    "text": "Using the known values\nfor these parameters",
    "start": "97140",
    "end": "99310"
  },
  {
    "text": "gives us a minimum\nclock period of 10ns.",
    "start": "99310",
    "end": "101560"
  },
  {
    "text": "What are the timing constraints\nfor the Input signal",
    "start": "101560",
    "end": "107030"
  },
  {
    "text": "relative to the rising\nedge of the clock?",
    "start": "107030",
    "end": "110460"
  },
  {
    "text": "For this we’ll need a diagram!",
    "start": "110460",
    "end": "113450"
  },
  {
    "text": "The Next State signal is\nthe input to the register",
    "start": "113450",
    "end": "116219"
  },
  {
    "text": "so it has to meet the setup\nand hold times as shown here.",
    "start": "116220",
    "end": "120870"
  },
  {
    "text": "Next we show the\nInput signal and how",
    "start": "120870",
    "end": "123330"
  },
  {
    "text": "the timing of its\ntransitions affect",
    "start": "123330",
    "end": "125240"
  },
  {
    "text": "to the timing of the\nNext State signal.",
    "start": "125240",
    "end": "127729"
  },
  {
    "text": "Now it’s pretty easy to figure\nout when Input has to be stable",
    "start": "127730",
    "end": "130679"
  },
  {
    "text": "before the rising clock edge,\ni.e., the setup time for Input.",
    "start": "130680",
    "end": "135359"
  },
  {
    "text": "The setup time for\nInput is the sum",
    "start": "135360",
    "end": "137410"
  },
  {
    "text": "of propagation\ndelay of the logic",
    "start": "137410",
    "end": "139510"
  },
  {
    "text": "plus the setup time\nfor the register, which",
    "start": "139510",
    "end": "142280"
  },
  {
    "text": "we calculate as 7ns.",
    "start": "142280",
    "end": "145569"
  },
  {
    "text": "In other words, if the Input\nsignal is stable at least 7ns",
    "start": "145570",
    "end": "149300"
  },
  {
    "text": "before the rising clock edge,\nthen Next State will be stable",
    "start": "149300",
    "end": "152820"
  },
  {
    "text": "at least 2ns before the rising\nclock edge and hence meet",
    "start": "152820",
    "end": "156780"
  },
  {
    "text": "the register’s\nspecified setup time.",
    "start": "156780",
    "end": "160840"
  },
  {
    "text": "Similarly, the\nhold time of Input",
    "start": "160840",
    "end": "163410"
  },
  {
    "text": "has to be the hold\ntime of the register",
    "start": "163410",
    "end": "165890"
  },
  {
    "text": "minus the contamination\ndelay of the logic, which",
    "start": "165890",
    "end": "169030"
  },
  {
    "text": "we calculate as 1ns.",
    "start": "169030",
    "end": "172560"
  },
  {
    "text": "In other words, if Input\nis stable at least 1ns",
    "start": "172560",
    "end": "175230"
  },
  {
    "text": "after the rising clock\nedge, then Next State",
    "start": "175230",
    "end": "178159"
  },
  {
    "text": "will be stable for another\n1ns, i.e., a total of 2ns",
    "start": "178160",
    "end": "181950"
  },
  {
    "text": "after the rising clock edge.",
    "start": "181950",
    "end": "184209"
  },
  {
    "text": "This meets the specified\nhold time of the register.",
    "start": "184210",
    "end": "188480"
  },
  {
    "text": "This completes our introduction\nto sequential logic.",
    "start": "188480",
    "end": "191900"
  },
  {
    "text": "Pretty much every\ndigital system out",
    "start": "191900",
    "end": "193810"
  },
  {
    "text": "there is a sequential\nlogic system",
    "start": "193810",
    "end": "196030"
  },
  {
    "text": "and hence is obeying the\ntiming constraints imposed",
    "start": "196030",
    "end": "199060"
  },
  {
    "text": "by the dynamic discipline.",
    "start": "199060",
    "end": "201190"
  },
  {
    "text": "So next time you see an ad\nfor a 1.7 GHz processor chip,",
    "start": "201190",
    "end": "205380"
  },
  {
    "text": "you’ll know where\nthe “1.7” came from!",
    "start": "205380",
    "end": "208850"
  }
]