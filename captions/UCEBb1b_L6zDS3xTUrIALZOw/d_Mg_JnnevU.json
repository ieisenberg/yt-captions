[
  {
    "text": "PROFESSOR: Good moRning. Again, we're left with\na little stub of chapter six to finish.",
    "start": "0",
    "end": "7020"
  },
  {
    "text": "This was our first chapter on\nbinary linear block codes. ",
    "start": "7020",
    "end": "12200"
  },
  {
    "text": "Very briefly, last time we\ndeveloped the family of RM, Reed-Muller codes, parameterized\nby R and M.",
    "start": "12200",
    "end": "20890"
  },
  {
    "text": "These are codes of length two\nto the M, and distance 2 to the M minus R for all reasonable\ncombinations of M",
    "start": "20890",
    "end": "27734"
  },
  {
    "text": "and R, integers. And the reason I do these first\nis because it gives us a nice big -- in fact,\ninfinite --",
    "start": "27735",
    "end": "34239"
  },
  {
    "text": "family of codes that kind\nof cover the waterfront. Let us see what we can\nreasonably get in terms of the",
    "start": "34240",
    "end": "40129"
  },
  {
    "text": "parameters n k d in codes. And, of course, n k t d tell us\nmost of what we know, want",
    "start": "40130",
    "end": "47510"
  },
  {
    "text": "to know about the performance\nof moderate complexity codes in terms of coding gain.",
    "start": "47510",
    "end": "54820"
  },
  {
    "text": "And it's easy to see that among\nthese codes, we have sequences in which the coding\ngain goes -- the nominal",
    "start": "54820",
    "end": "61390"
  },
  {
    "text": "coding gain goes to infinity. And we also know that there's\nat least one sequence, the",
    "start": "61390",
    "end": "66570"
  },
  {
    "text": "bi-orthogonal sequence, for\nwhich the effective coding gain completely closes the\ngap to the Shannon limit.",
    "start": "66570",
    "end": "74630"
  },
  {
    "text": "And in all likelihood, there\nare many such sequences, though I'm not aware of the\nactual result there.",
    "start": "74630",
    "end": "82140"
  },
  {
    "text": "So it seems like we might be\nalmost finished here, except I",
    "start": "82140",
    "end": "87960"
  },
  {
    "text": "asked about what possible fly\nthere could be in this ointment last time. And one of you alertly reported\nthat we still really",
    "start": "87960",
    "end": "96710"
  },
  {
    "text": "hadn't worried about decoding. And the implicit decoding\nalgorithm here is minimum",
    "start": "96710",
    "end": "102290"
  },
  {
    "text": "distance decoding. Exhaustive minimum distance\ndecoding. We basically have to compute the\nminimum distance to each",
    "start": "102290",
    "end": "108979"
  },
  {
    "text": "of the 2 to the k code words. And that's going to get a little\ntedious as soon as k",
    "start": "108980",
    "end": "114100"
  },
  {
    "text": "gets up to 16 or 107\nor whatever. So it was recognized pretty\nearly in the development of",
    "start": "114100",
    "end": "123220"
  },
  {
    "text": "coding theory that this was\nthe essential problem. The problem is not to construct\ncodes whose",
    "start": "123220",
    "end": "129340"
  },
  {
    "text": "performance under maximum\nlikelihood decoding is near that of the Shannon limit\n-- you can use random codes for that.",
    "start": "129340",
    "end": "136030"
  },
  {
    "text": "But in constructing these more\nalgebraically structured codes, what we're really trying\nto do is to facilitate",
    "start": "136030",
    "end": "143610"
  },
  {
    "text": "the decoding problem, which\nis the central problem. We need to find a\ndecoding method",
    "start": "143610",
    "end": "150170"
  },
  {
    "text": "that is actually feasible. And, of course, Shannon didn't\naddress that at all. He just addressed the ultimate\npotential of these codes with",
    "start": "150170",
    "end": "158540"
  },
  {
    "text": "the optimal decoding technique\nand didn't worry about its complexity.",
    "start": "158540",
    "end": "164200"
  },
  {
    "text": "All right. So I'd say the fundamental\nproblem here is decoding",
    "start": "164200",
    "end": "169560"
  },
  {
    "text": "complexity.  Now, one of the --",
    "start": "169560",
    "end": "175270"
  },
  {
    "text": "an awful lot of the early work\non coding was about binary codes, of course.",
    "start": "175270",
    "end": "181490"
  },
  {
    "text": "But it also considered them in\nthe context of binary decoding",
    "start": "181490",
    "end": "190070"
  },
  {
    "text": "algorithms. In other words, what's assumed\nis what you send as a series of bits and what you receive\nas a series of bits.",
    "start": "190070",
    "end": "196890"
  },
  {
    "text": "That's not the picture we have\nhere in this course, where what we receive is a series\nof real numbers.",
    "start": "196890",
    "end": "204050"
  },
  {
    "text": "Because we're going over a\ncontinuous additive white Gaussian noise channel. Of course, there are channels\nwhich are inherently digital,",
    "start": "204050",
    "end": "211750"
  },
  {
    "text": "at least by the time the coding\nengineer can get his hands on them. What he's presented with\nis a string of bits.",
    "start": "211750",
    "end": "218400"
  },
  {
    "text": "So it makes sense to consider\ncodes for bit error correction.",
    "start": "218400",
    "end": "225120"
  },
  {
    "text": "Classic codes of this type\nare, first of all, the repetition code. If I send this --",
    "start": "225120",
    "end": "231680"
  },
  {
    "text": "if I use the 7 1 7 code, the\nrepetition code of length 7, I'm going to be able to correct\nup to three errors.",
    "start": "231680",
    "end": "239370"
  },
  {
    "text": "Three bit errors. Because four bits are still\ngoing to be correct. In a majority vote, we'll\ndo the decoding.",
    "start": "239370",
    "end": "246480"
  },
  {
    "text": "Most of you have probably\nseen Hamming codes. These are codes with minimum\nHamming distance 3.",
    "start": "246480",
    "end": "252860"
  },
  {
    "text": "That means if you make one\nerror, you're still within the Hamming sphere of radius 1\naround the original code word.",
    "start": "252860",
    "end": "260239"
  },
  {
    "text": "That's disjoined from all the\nother Hamming spheres, and so in principle you ought to be\nable to do single error",
    "start": "260240",
    "end": "267670"
  },
  {
    "text": "correction with Hamming codes. And there are very simple\nalgorithms for doing that.",
    "start": "267670",
    "end": "274180"
  },
  {
    "text": "OK. But that may be what\nyou have to do. The final point of chapter six\nis that in the additive white",
    "start": "274180",
    "end": "282450"
  },
  {
    "text": "Gaussian noise context,\nthat's not what you want to do at all.",
    "start": "282450",
    "end": "288520"
  },
  {
    "text": "And I just want to say a few\nwords about that because this is one of the Achille's heels\nof a lot of classical coding",
    "start": "288520",
    "end": "295139"
  },
  {
    "text": "theory, which was addressed\nto the binary in, binary out situation.",
    "start": "295140",
    "end": "301340"
  },
  {
    "text": "So let's talk about the penalty for making hard decisions.",
    "start": "301340",
    "end": "306455"
  },
  {
    "start": "306455",
    "end": "312259"
  },
  {
    "text": "That is, by hard decision, we\nmean a binary decision. 0, 1, plus or minus 1. ",
    "start": "312260",
    "end": "321030"
  },
  {
    "text": "And I'll do this fairly quickly,\nbut in a way that I hope will stick.",
    "start": "321030",
    "end": "328390"
  },
  {
    "text": "Let me draw our block diagram\nof our coding scheme.",
    "start": "328390",
    "end": "333800"
  },
  {
    "text": "We've got a code. We've got an encoder,\nwhich basically",
    "start": "333800",
    "end": "342820"
  },
  {
    "text": "puts out a code word. An n-tuple in the code. I'm going to consider\nthe individual",
    "start": "342820",
    "end": "351060"
  },
  {
    "text": "elements of this n-tuple. They're just elements of the\nbinary field F2 And we go",
    "start": "351060",
    "end": "358810"
  },
  {
    "text": "through our standard 2-PAM map,\nwhich maps them to s of",
    "start": "358810",
    "end": "365680"
  },
  {
    "text": "xk, which is going\nto be in plus or minus alpha in general.",
    "start": "365680",
    "end": "371750"
  },
  {
    "text": "Just plus or minus 1. Doesn't matter up to scaling. In order to send them, we're\ngoing to send this sequence of",
    "start": "371750",
    "end": "379110"
  },
  {
    "text": "real numbers over the white\nGaussian noise channel.",
    "start": "379110",
    "end": "385539"
  },
  {
    "text": "And as a result, we're\ngoing to get out s -- let's call it a received\nsymbol --",
    "start": "385540",
    "end": "391780"
  },
  {
    "text": "rk, which is the transmitted\nsymbol plus some Gaussian",
    "start": "391780",
    "end": "397950"
  },
  {
    "text": "noise symbol, nk. This is a real number.",
    "start": "397950",
    "end": "403044"
  },
  {
    "text": " And then --",
    "start": "403045",
    "end": "408449"
  },
  {
    "text": "then what we do? Now we're into the decoder. This is what we received, so\nit's free to us to choose what",
    "start": "408450",
    "end": "414610"
  },
  {
    "text": "to do next.  I'm going to say observe, first\nof all, that without",
    "start": "414610",
    "end": "421590"
  },
  {
    "text": "loss of generality, we\ncan decompose rk",
    "start": "421590",
    "end": "427630"
  },
  {
    "text": "into a sign and magnitude. So this out here is going\nto be a sign of rk.",
    "start": "427630",
    "end": "437910"
  },
  {
    "text": "And this is going to be\nthe magnitude of rk.",
    "start": "437910",
    "end": "443160"
  },
  {
    "text": "And let me just give\nthis a name. Let me call this yk, and let\nme call this beta k.",
    "start": "443160",
    "end": "451120"
  },
  {
    "text": "OK. So what is this? This is in plus or minus 1, and\nthis is in the positive",
    "start": "451120",
    "end": "460000"
  },
  {
    "text": "reals, so the non-negative\nreals.  OK. And clearly, if I keep both of\nthese, I haven't lost any",
    "start": "460000",
    "end": "468020"
  },
  {
    "text": "information. This is just a way of\nrepresenting rk in sign and magnitude form.",
    "start": "468020",
    "end": "474289"
  },
  {
    "text": "Now, this is what's called\nthe hard decision. ",
    "start": "474290",
    "end": "481159"
  },
  {
    "text": "Actually, let me do\nthis differently. Let me pass this through the\ninverse to a 2-PAM map.",
    "start": "481160",
    "end": "491130"
  },
  {
    "text": "So out of this, I get a yk, which is in F2 OK.",
    "start": "491130",
    "end": "497539"
  },
  {
    "text": "Either of these -- the real sign or the binary\nhard decision --",
    "start": "497540",
    "end": "504680"
  },
  {
    "text": "could be considered to\nbe the hard decision. Now, what am I doing here? I'm saying, well, if you force\nme to make a guess on whether",
    "start": "504680",
    "end": "512719"
  },
  {
    "text": "this individual transmission was\nsending a 0 or 1, this is the most obvious guess.",
    "start": "512720",
    "end": "519050"
  },
  {
    "text": "If I send -- here's minus 1, here's our minus\nalpha, here's plus 1 --",
    "start": "519050",
    "end": "530100"
  },
  {
    "text": "if I sent a plus 1, then my\nmaximum likelihood per bit",
    "start": "530100",
    "end": "535399"
  },
  {
    "text": "decision would be to decide\nthe plus 1 was sent. If I get a positive sign in --",
    "start": "535400",
    "end": "542940"
  },
  {
    "text": "what I'm really mapping here is\nrk, and minus 1 if I get a negative side.",
    "start": "542940",
    "end": "548100"
  },
  {
    "text": "So that's what's called\na hard decision. I'm going to decide right here\nwhat I think it was, what it most likely was.",
    "start": "548100",
    "end": "553570"
  },
  {
    "text": "And this is the best\nway to do it. Just take the sign. This here is a real valued\nweight, often called the",
    "start": "553570",
    "end": "562740"
  },
  {
    "text": "reliability, which is\nhelpful to retain.",
    "start": "562740",
    "end": "570235"
  },
  {
    "text": "That's the main point\nof what I'm going to talk to you about.",
    "start": "570235",
    "end": "575550"
  },
  {
    "text": "If this is 0 -- that means what we received\nwas right on this boundary",
    "start": "575550",
    "end": "580899"
  },
  {
    "text": "between the positive and\nnegative side -- then the reliability is 0.",
    "start": "580900",
    "end": "586980"
  },
  {
    "text": "In likelihood terms, that means\nit's equally likely that what was sent was a plus\n1 or a minus 1.",
    "start": "586980",
    "end": "592540"
  },
  {
    "text": "So in some sense, we get\nno information when the reliability is 0.",
    "start": "592540",
    "end": "597900"
  },
  {
    "text": "Fails to discriminate between\nplus 1 and minus 1. The larger this is, the further\nwe get out here.",
    "start": "597900",
    "end": "603880"
  },
  {
    "text": "Or symmetrically, the further\nwe get out here, the more certain we are that in that\nparticular symbol, neither a",
    "start": "603880",
    "end": "612000"
  },
  {
    "text": "plus or a minus was sent. OK And it actually tuRns out,\nif you work out the Gaussian",
    "start": "612000",
    "end": "618500"
  },
  {
    "text": "numbers, that beta k is the\nlog likelihood ratio up to",
    "start": "618500",
    "end": "624750"
  },
  {
    "text": "scale of the more likely\nversus the log of the likelihood, or the more likely\nversus the less likely symbol.",
    "start": "624750",
    "end": "632920"
  },
  {
    "text": "So it has a minimum of 0. The bigger it is, the\nmore reliable. So it's natural to call\nit the reliability.",
    "start": "632920",
    "end": "638630"
  },
  {
    "text": " OK. An awful lot of traditional\nalgebraic decoding neglects",
    "start": "638630",
    "end": "648470"
  },
  {
    "text": "this channel down here. It just says, OK, let's take\nthese hard decisions and try",
    "start": "648470",
    "end": "653879"
  },
  {
    "text": "to decode them. If you've previously had a\ncoding class, then that's probably what they did.",
    "start": "653880",
    "end": "660000"
  },
  {
    "text": "Or they assumed a context in\nwhich this was never available in the first place.",
    "start": "660000",
    "end": "665900"
  },
  {
    "text": "And my only point here, my main\npoint, is that that's a very bad thing to do.",
    "start": "665900",
    "end": "673149"
  },
  {
    "text": "How can we evaluate that? Suppose we just take this top\nchannel and don't look at the",
    "start": "673150",
    "end": "680959"
  },
  {
    "text": "reliability. Then basically we have the\nchannel model becomes a binary symmetric channel.",
    "start": "680960",
    "end": "686550"
  },
  {
    "text": "We have bits in, bits out, and\nwe have probably one minus p",
    "start": "686550",
    "end": "695640"
  },
  {
    "text": "that if we send a\n0 we get a 0. And since it's symmetric,\nthe same probability --",
    "start": "695640",
    "end": "701829"
  },
  {
    "text": "if we send a 1, we get a 1 -- and a probability p of\nmaking an error. So we get the traditional\nmemoryless binary symmetric",
    "start": "701830",
    "end": "708880"
  },
  {
    "text": "channel model. We can compute the capacity of\nthis model and compare it to",
    "start": "708880",
    "end": "714290"
  },
  {
    "text": "the capacity of the additive\nwhite Gaussian channel --",
    "start": "714290",
    "end": "719589"
  },
  {
    "text": "this model. And depending on the signal to\nnoise ratio, from a capacity",
    "start": "719590",
    "end": "725930"
  },
  {
    "text": "calculation, we find that\nthere is of the order of 2 or 3 dB loss.",
    "start": "725930",
    "end": "734880"
  },
  {
    "text": "Well, as we go on in this\ncourse, we're going to find that 1 dB is a very worthwhile\ncoding game.",
    "start": "734880",
    "end": "741250"
  },
  {
    "text": "So to throw away 2 or 3 dB just\nby throwing away this information, is a\nbad thing to do.",
    "start": "741250",
    "end": "748810"
  },
  {
    "text": " I can make this point in a\ndifferent way by simply",
    "start": "748810",
    "end": "759970"
  },
  {
    "text": "looking at what's the optimum\ndecision rule.",
    "start": "759970",
    "end": "765649"
  },
  {
    "text": "For say, let me take very simple\ncode, just the 2-1-2 repetition code.",
    "start": "765650",
    "end": "771170"
  },
  {
    "text": "That's just 0,0,1,1. This is the code where you\neither send plus, plus, plus",
    "start": "771170",
    "end": "778720"
  },
  {
    "text": "alpha, plus alpha, or minus\nalpha, minus alpha.",
    "start": "778720",
    "end": "784910"
  },
  {
    "text": "And what's the decision\nregion? It's obviously this\n45 degree line.",
    "start": "784910",
    "end": "792570"
  },
  {
    "text": "And what is this squared\ndistance to any decision region? It's 2 alpha squared, right?",
    "start": "792570",
    "end": "799935"
  },
  {
    "text": " So basically, the probability\nof making an error is the",
    "start": "799935",
    "end": "806560"
  },
  {
    "text": "probability that the noise\nvariable has a magnitude in this dimension, and in this\ndirection, greater than the",
    "start": "806560",
    "end": "814980"
  },
  {
    "text": "square root of 2\nalpha squared. You've been through all those\ncalculation several times now.",
    "start": "814980",
    "end": "822320"
  },
  {
    "text": "All right. So this is -- if I keep\nreliability info -- in other",
    "start": "822320",
    "end": "827710"
  },
  {
    "text": "words, if I keep the full\nreceived signal -- if I",
    "start": "827710",
    "end": "833150"
  },
  {
    "text": "discard reliability, then\nbasically what can I get out?",
    "start": "833150",
    "end": "842200"
  },
  {
    "text": "Then my y, as I say, is in\n0, 0, 0, 1, 1, 0, 1, 1.",
    "start": "842200",
    "end": "847760"
  },
  {
    "text": " There are only four possible\nthings I can see in two",
    "start": "847760",
    "end": "854000"
  },
  {
    "text": "transmissions through\nthis channel. They're all binary two-tuples.",
    "start": "854000",
    "end": "859649"
  },
  {
    "text": "And what does that mean? That means if my actual r is\nin this quadrant, then I'm",
    "start": "859650",
    "end": "869870"
  },
  {
    "text": "going to make a hard decision\nof 0 and 0 both times. So I'm going to say I'm\nin this quadrant.",
    "start": "869870",
    "end": "877280"
  },
  {
    "text": "And likewise, I'm basically\ngoing to decide which of these four quadrants I'm in, and\nthat's all the information the",
    "start": "877280",
    "end": "884230"
  },
  {
    "text": "decoder is going to have.  So here I am at this\npoint here.",
    "start": "884230",
    "end": "891370"
  },
  {
    "text": "Now the decoder simply knows,\nvia these two bits, which quadrant you're in.",
    "start": "891370",
    "end": "897980"
  },
  {
    "text": "Now, it has to decide\nwhich of these two code words were sent. What's its maximum likelihood\ndecision rule given just this",
    "start": "897980",
    "end": "906040"
  },
  {
    "text": "information? ",
    "start": "906040",
    "end": "911709"
  },
  {
    "text": "AUDIENCE: 0, 0, [INAUDIBLE] 0, 0, [INAUDIBLE] 1, 1, 1, 1, 1.",
    "start": "911710",
    "end": "917276"
  },
  {
    "text": "And in the other\ncase, any one. PROFESSOR: OK. That's correct. So clearly, if you land\nin this quadrant,",
    "start": "917276",
    "end": "922550"
  },
  {
    "text": "you decide 0, 0.",
    "start": "922550",
    "end": "928200"
  },
  {
    "text": "Now, if you land down\nhere, you decide 1, 1 in this quadrant.",
    "start": "928200",
    "end": "934190"
  },
  {
    "text": "And what am I going to\ndo here or here? Actually, here the evidence\nis totally balanced.",
    "start": "934190",
    "end": "940360"
  },
  {
    "text": "I have nothing that tells\nme whether to go one way or another. I could make an arbitrary\ndecision in the hope of",
    "start": "940360",
    "end": "946990"
  },
  {
    "text": "minimizing my error\nprobability. Flip a coin. But whichever decision I make,\nwhat I'm going to find is that",
    "start": "946990",
    "end": "956496"
  },
  {
    "text": "there's a probability of error\nthat -- there's a certain",
    "start": "956496",
    "end": "962620"
  },
  {
    "text": "noise, namely the noise that\ntakes me from here to this decision boundary that is\ngoing to cause an error.",
    "start": "962620",
    "end": "969130"
  },
  {
    "text": "Or if I decide the other way, it\nwould be the one that goes from here to here. So I'm going to be stuck.",
    "start": "969130",
    "end": "974920"
  },
  {
    "text": "There are going to be certain\nnoise variables of length,",
    "start": "974920",
    "end": "980440"
  },
  {
    "text": "now, merely alpha, or square\ndistance alpha squared, that",
    "start": "980440",
    "end": "986790"
  },
  {
    "text": "are going to cause me to make a\ndecision error, ultimately. Regardless of how I set up\nthis final block here.",
    "start": "986790",
    "end": "996709"
  },
  {
    "text": "Decoder. Whatever rule I give to this\ndecoder, it's only going to",
    "start": "996710",
    "end": "1002649"
  },
  {
    "text": "take, worst case, a noise of\nsquared magnitude alpha",
    "start": "1002650",
    "end": "1008730"
  },
  {
    "text": "squared to cause an error. AUDIENCE:\n[UNINTELLIGIBLE PHRASE] ",
    "start": "1008730",
    "end": "1015561"
  },
  {
    "text": "PROFESSOR: That's right. I shouldn't have thrown\nthis away. That's the elementary point\nI'm trying to make here.",
    "start": "1015561",
    "end": "1023250"
  },
  {
    "text": "All right. AUDIENCE:\n[UNINTELLIGIBLE PHRASE] the distance, d_min is\ndifferent, essentially.",
    "start": "1023250",
    "end": "1030432"
  },
  {
    "text": "I mean, we can put\nit that way. PROFESSOR: That's where I'm\ngoing, is that the effective",
    "start": "1030432",
    "end": "1036020"
  },
  {
    "text": "minimum squared distance here\nis 2 alpha squared. And this is what shows up in\nour union-bound estimate in",
    "start": "1036020",
    "end": "1041529"
  },
  {
    "text": "all of our -- we do this kind of minimum\ndistance decoding. But if I throw away this\nimportant information, then my",
    "start": "1041530",
    "end": "1050080"
  },
  {
    "text": "effective minimum\nsquared distance is only alpha squared. That is the bottom line here.",
    "start": "1050080",
    "end": "1055490"
  },
  {
    "text": "In dB terms, how much\nof a cost is that? 3 dB, right?",
    "start": "1055490",
    "end": "1061630"
  },
  {
    "text": "So I've cost myself a factor\nof 2 in noise margin. So 3 dB loss.",
    "start": "1061630",
    "end": "1068200"
  },
  {
    "text": " Because of lack of time, I won't\ngo through the argument",
    "start": "1068200",
    "end": "1080720"
  },
  {
    "text": "in the notes, which shows that,\nin fact, exactly the",
    "start": "1080720",
    "end": "1085809"
  },
  {
    "text": "same thing occurs for any -- whenever the minimum Hamming\ndistance is even here in this",
    "start": "1085810",
    "end": "1091220"
  },
  {
    "text": "code that I started from,\nyou lose precisely 3 dB. It's not quite as clean an\nargument when the minimum",
    "start": "1091220",
    "end": "1098850"
  },
  {
    "text": "Hamming distance is odd. Then you lose up to 3 dB, and\nit goes to 3 dB as the",
    "start": "1098850",
    "end": "1104789"
  },
  {
    "text": "distance increases. But there's a very, pretty\nelementary geometric argument",
    "start": "1104790",
    "end": "1111029"
  },
  {
    "text": "that hard decisions, again, cost\nyou 3 dB loss, which is consistent with what\nthe capacity",
    "start": "1111030",
    "end": "1116810"
  },
  {
    "text": "calculation gives you.  All right.",
    "start": "1116810",
    "end": "1122320"
  },
  {
    "text": "Well, obviously the reason we\ndid this is we were trying to",
    "start": "1122320",
    "end": "1127440"
  },
  {
    "text": "simplify things. What would be the first step to\nunsimplify things and get",
    "start": "1127440",
    "end": "1134840"
  },
  {
    "text": "some of this loss back? ",
    "start": "1134840",
    "end": "1143200"
  },
  {
    "text": "Let me suggest that what this\namounts to is a two-level quantization of the received\nreal number rk.",
    "start": "1143200",
    "end": "1152240"
  },
  {
    "text": "What's the next number\nhigher than 2? Integer. AUDIENCE: 3.",
    "start": "1152240",
    "end": "1157340"
  },
  {
    "text": "PROFESSOR: 3. All right. How about a 3 level\nquantization here?",
    "start": "1157340",
    "end": "1163860"
  },
  {
    "text": "OK. So what we're talking about is\na highly quantized magnitude",
    "start": "1163860",
    "end": "1171880"
  },
  {
    "text": "where instead of just making a\ndecision boundary here, which",
    "start": "1171880",
    "end": "1181480"
  },
  {
    "text": "is effectively what we did for\n2 level quantization, let's make some null zone here between\nsome threshold plus t",
    "start": "1181480",
    "end": "1193620"
  },
  {
    "text": "and some threshold minus t. And we'll say, in this region,\nthe received symbol is",
    "start": "1193620",
    "end": "1202920"
  },
  {
    "text": "unreliable. OK. That's called an erasure. So we make a quantized\nmagnitude where rk --",
    "start": "1202920",
    "end": "1211640"
  },
  {
    "start": "1211640",
    "end": "1218700"
  },
  {
    "text": "doesn't fit so neatly here. Let me just say this quantized\nmagnitude is going to give me",
    "start": "1218700",
    "end": "1226020"
  },
  {
    "text": "out something which is either\ngoing to be minus 1, a 0, or plus 1.",
    "start": "1226020",
    "end": "1231299"
  },
  {
    "text": "It's going to be three levels,\nthis is minus 1, 0, plus 1.",
    "start": "1231300",
    "end": "1237440"
  },
  {
    "text": "Or I don't want the\nminus 1 there. The reliability is either a\nfixed reliability, or it's 0.",
    "start": "1237440",
    "end": "1244817"
  },
  {
    "text": "OK. ",
    "start": "1244817",
    "end": "1251870"
  },
  {
    "text": "So now I've got a channel model\nthat looks like this. If you work it out, it's called\nthe binary erasure",
    "start": "1251870",
    "end": "1262690"
  },
  {
    "text": "channel with errors. All transitions are possible. I can send a 0,1.",
    "start": "1262690",
    "end": "1268010"
  },
  {
    "text": "I can receive, let's call it,\na 0, a 1, or a question mark",
    "start": "1268010",
    "end": "1273500"
  },
  {
    "text": "for -- this is called\nan erasure. ",
    "start": "1273500",
    "end": "1278650"
  },
  {
    "text": "And this is 1 minus p minus q,\nand this is p and this is q symmetrically, for some p and\nq, which you can evaluate.",
    "start": "1278650",
    "end": "1290080"
  },
  {
    "text": "And let's choose this threshold\nt to optimize things",
    "start": "1290080",
    "end": "1295440"
  },
  {
    "text": "and get the maximum capacity. Now if you do the capacity\ncalculation, you'll find",
    "start": "1295440",
    "end": "1300530"
  },
  {
    "text": "there's only 1 to 1.5 dB loss. Again, depending on the\nsignal to noise ratio.",
    "start": "1300530",
    "end": "1307530"
  },
  {
    "text": "So in effect, you've already\nbought back, just with this very simple method, half of the\nloss that you inflicted on",
    "start": "1307530",
    "end": "1318970"
  },
  {
    "text": "yourself by making\nhard decisions. So making erasures is a good\nfirst step towards correcting",
    "start": "1318970",
    "end": "1328929"
  },
  {
    "text": "this problem. And let's think about it again\nfor this simple code.",
    "start": "1328930",
    "end": "1335520"
  },
  {
    "text": "Suppose I establish these\nthresholds at",
    "start": "1335520",
    "end": "1342780"
  },
  {
    "text": "plus t and minus t. Plus t and minus t. So now when I consider the\nproblem that the decoder has,",
    "start": "1342780",
    "end": "1353889"
  },
  {
    "text": "I have nine possible regions,\nall right, each with three possible decisions in\ntwo dimensions.",
    "start": "1353890",
    "end": "1364370"
  },
  {
    "text": "And so what's my decision\nrule going to be now? ",
    "start": "1364370",
    "end": "1370820"
  },
  {
    "text": "For this 0, 0 decision, I'm\ngoing to include, of course, this region.",
    "start": "1370820",
    "end": "1376290"
  },
  {
    "text": "But now if I land in this\nregion, that means one of the",
    "start": "1376290",
    "end": "1381750"
  },
  {
    "text": "received symbols was erased,\nbut the other one gave me a definite indication. So the weight of evidence\nstill goes up here.",
    "start": "1381750",
    "end": "1389019"
  },
  {
    "text": "And similarly, like so. So my decision region for 0 --",
    "start": "1389020",
    "end": "1396380"
  },
  {
    "text": "definitely for 0, 0\nis this region. And my decision region\ndefinitely for 1, 1 is the",
    "start": "1396380",
    "end": "1406900"
  },
  {
    "text": "symmetric region. And, of course, I still have\nthree regions where I really",
    "start": "1406900",
    "end": "1412590"
  },
  {
    "text": "can't say anything. This is two erasures. This is 0, 1 -- two conflicting pieces\nof evidence.",
    "start": "1412590",
    "end": "1418559"
  },
  {
    "text": "This is 1, 0 -- two conflicting pieces of evidence. So I still have to flip\na coin out in here.",
    "start": "1418560",
    "end": "1428130"
  },
  {
    "text": "But how I improve things, that's\nmeasured by what's the",
    "start": "1428130",
    "end": "1433550"
  },
  {
    "text": "minimum distance to --  what's the minimum size of\nerror it takes to make a",
    "start": "1433550",
    "end": "1441769"
  },
  {
    "text": "decision error. And that's going to be either\nthis length or this length.",
    "start": "1441770",
    "end": "1448549"
  },
  {
    "text": "You see that? Just pretty clear,\nintuitively? ",
    "start": "1448550",
    "end": "1454220"
  },
  {
    "text": "So the game here is we first of\nall choose t so that these two lengths are the same.",
    "start": "1454220",
    "end": "1461110"
  },
  {
    "text": "That's done by squeezing t. You see these go in opposite\ndirections as t is raised or lowered.",
    "start": "1461110",
    "end": "1467540"
  },
  {
    "text": "So we find the t such that\nthese two are the same. Having equalized t, we find some\nvalue for the effective",
    "start": "1467540",
    "end": "1477049"
  },
  {
    "text": "minimum squared distance, which\nis between alpha squared and 2 alpha squared. As I remember, this somehow\ngains about 1.5 dB.",
    "start": "1477050",
    "end": "1490310"
  },
  {
    "text": "The moral is about the same. You can get about half of your\nloss back by using erasures.",
    "start": "1490310",
    "end": "1495880"
  },
  {
    "text": "And again, this holds for any\ncode which has an even minimum Hamming distance, if\nyou can accept",
    "start": "1495880",
    "end": "1502059"
  },
  {
    "text": "this method of analysis. All right. So a first step, even if you\nwant to stay in the binary",
    "start": "1502060",
    "end": "1510870"
  },
  {
    "text": "world, is to allow yourself\nto use erasures as well. That will claw back half of the\nloss that you might have",
    "start": "1510870",
    "end": "1520169"
  },
  {
    "text": "incurred by using\nhard decisions. And, of course, even better\nwould be to use a more highly",
    "start": "1520170",
    "end": "1525520"
  },
  {
    "text": "quantized reliability and\nsomehow have a decoding algorithm that can use\nsoft decisions.",
    "start": "1525520",
    "end": "1533420"
  },
  {
    "text": "Soft decisions are decisions\nthat have reliability metrics attached to them.",
    "start": "1533420",
    "end": "1539900"
  },
  {
    "text": "And in the early\ndays of coding, people evaluated capacity.",
    "start": "1539900",
    "end": "1546190"
  },
  {
    "text": "They evaluated this\nsort of thing. And it was pretty generally\nagreed that eight level",
    "start": "1546190",
    "end": "1555780"
  },
  {
    "text": "quantization was going to be\npractically good enough. 16 levels, certainly\ngood enough.",
    "start": "1555780",
    "end": "1560950"
  },
  {
    "text": "Nowadays you typically\ngo up to 64 levels. You might go up to much higher\nnumbers if you have little",
    "start": "1560950",
    "end": "1567130"
  },
  {
    "text": "other things to worry\nabout like timing recovery and so forth. But if you're purely in a\nsynchronized, symbol by symbol",
    "start": "1567130",
    "end": "1574620"
  },
  {
    "text": "transmission, then three or\nfour bits of reliability information are going\nto be enough.",
    "start": "1574620",
    "end": "1581210"
  },
  {
    "text": "So from an engineering\npoint of view, that's a good way to go. Now, of course, you're going to\nneed a decoding algorithm",
    "start": "1581210",
    "end": "1588820"
  },
  {
    "text": "that can use soft decisions. So as we go along, I'm going to\ntalk about error correcting",
    "start": "1588820",
    "end": "1596029"
  },
  {
    "text": "decoding algorithms that are not\nmuch, because correcting",
    "start": "1596030",
    "end": "1601200"
  },
  {
    "text": "errors only is a very bad\nthing to do here. Errors and erasure. Correcting decoding algorithms,\nwhich are fairly",
    "start": "1601200",
    "end": "1608420"
  },
  {
    "text": "easy in algebraic\ncode context. And then finally soft decision\ndecoding algorithms, which is",
    "start": "1608420",
    "end": "1617169"
  },
  {
    "text": "the kind we really want\non this channel. We really want to use\nthe soft decisions. We can't afford these\nhuge losses.",
    "start": "1617170",
    "end": "1624070"
  },
  {
    "text": "We can't even afford 1 to\n1 and a 1/2 dB loss. OK, so there's more set on\nthis in the last part of",
    "start": "1624070",
    "end": "1634690"
  },
  {
    "text": "chapter six, but that's\nall the time I want to spend on it in class. Does anyone have\nany questions?",
    "start": "1634690",
    "end": "1640100"
  },
  {
    "text": "yes? AUDIENCE: [INAUDIBLE] transformation before we do\nthe quantization, can we change the shape of the\n[UNINTELLIGIBLE]",
    "start": "1640100",
    "end": "1646754"
  },
  {
    "text": "regions such that we can\nfurther improve the [INAUDIBLE PHRASE]",
    "start": "1646754",
    "end": "1653007"
  },
  {
    "text": "improve the decoding? PROFESSOR: Well, that's\nan interesting idea.",
    "start": "1653007",
    "end": "1658500"
  },
  {
    "text": "But think about it from\nan information theoretic point of view.",
    "start": "1658500",
    "end": "1663570"
  },
  {
    "text": "Can you actually get more\ninformation by introducing a one-to-one transformation,\nwhether it's linear or",
    "start": "1663570",
    "end": "1671140"
  },
  {
    "text": "nonlinear, whatever? AUDIENCE: The point is, the\noriginal quantization is based",
    "start": "1671140",
    "end": "1678809"
  },
  {
    "text": "on a straight line,\n[INAUDIBLE PHRASE]. [UNINTELLIGIBLE PHRASE].",
    "start": "1678810",
    "end": "1684176"
  },
  {
    "text": " PROFESSOR: You want to put a\ncurved line on this plane? AUDIENCE: [INAUDIBLE].",
    "start": "1684176",
    "end": "1689842"
  },
  {
    "text": "PROFESSOR: OK. That's going to imply decisions\nthat are not symbol",
    "start": "1689842",
    "end": "1694850"
  },
  {
    "text": "by symbol decisions. That's going to imply that you\nneed to save r1 and r 2 in",
    "start": "1694850",
    "end": "1702200"
  },
  {
    "text": "order even to just decide where\nyou're in this and then go through some kind of\nquantization on the plane.",
    "start": "1702200",
    "end": "1710250"
  },
  {
    "text": "And once you've got r1 and r2\nand you're trying to draw crazy boundaries, I suggest it's\ngoing to be simpler to",
    "start": "1710250",
    "end": "1715610"
  },
  {
    "text": "just compute the Euclidean\ndistance to each of these points, which results in\nthis decision region.",
    "start": "1715610",
    "end": "1728922"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE PHRASE]. ",
    "start": "1728922",
    "end": "1735880"
  },
  {
    "text": "PROFESSOR: OK. I don't see the rationale for\nit yet, but there's been a million innovations in this\nbusiness, and you",
    "start": "1735880",
    "end": "1741570"
  },
  {
    "text": "might have a good idea. ",
    "start": "1741570",
    "end": "1749059"
  },
  {
    "text": "Any other comments? I really appreciate comments\nthat go anywhere.",
    "start": "1749060",
    "end": "1755242"
  },
  {
    "text": "I like to address them now\nwhen they're ripe. ",
    "start": "1755242",
    "end": "1761950"
  },
  {
    "text": "OK.  So let's go on to chapter\nseven and eight.",
    "start": "1761950",
    "end": "1768519"
  },
  {
    "text": "[UNINTELLIGIBLE] here. ",
    "start": "1768520",
    "end": "1775660"
  },
  {
    "text": "Chapters seven and eight\nare closely related.",
    "start": "1775660",
    "end": "1781770"
  },
  {
    "text": "This is really my bow to\nalgebraic coding theory. ",
    "start": "1781770",
    "end": "1789580"
  },
  {
    "text": "I expect that if any of you\nhave had a close course in",
    "start": "1789580",
    "end": "1798799"
  },
  {
    "text": "coding before, that it\nwas primarily on algebraic coding theory.",
    "start": "1798800",
    "end": "1804336"
  },
  {
    "text": "How many of you have\nhad a course in coding theory before? One, two, three.",
    "start": "1804336",
    "end": "1810980"
  },
  {
    "text": "Not so many. Was it on algebraic\ncoding theory? Yes? AUDIENCE: I [UNINTELLIGIBLE]\ntwo, one",
    "start": "1810980",
    "end": "1816390"
  },
  {
    "text": "engineering and one algebraic. PROFESSOR: Excuse me? AUDIENCE: Two -- one for --\nactually, two algebraic and one out of kind of this stuff.",
    "start": "1816390",
    "end": "1823420"
  },
  {
    "text": "PROFESSOR: OK. Well, you're a ringer then. What was the one\non this stuff? AUDIENCE: It was out\nof Wicker's book.",
    "start": "1823420",
    "end": "1829106"
  },
  {
    "text": "PROFESSOR: Out of? AUDIENCE: Wicker's book. PROFESSOR: Wicker's book\non turbo codes. AUDIENCE: No, the data\nstorage one.",
    "start": "1829106",
    "end": "1834862"
  },
  {
    "text": "PROFESSOR: Data storage. OK. I don't know that book. But it talks about sophisticated\nsoft decision",
    "start": "1834862",
    "end": "1843640"
  },
  {
    "text": "type coding, and so forth. What was the course you took? AUDIENCE: Algebra. PROFESSOR: Algebraic.",
    "start": "1843640",
    "end": "1849330"
  },
  {
    "text": "OK.  All right. Well, let me just make a broad\nbrush comment, which may or",
    "start": "1849330",
    "end": "1858910"
  },
  {
    "text": "may not be supported\nby your previous exposure to coding theory. Which is that for many, many\nyears, when people said coding",
    "start": "1858910",
    "end": "1868280"
  },
  {
    "text": "theory, they meant algebraic\ncoding theory, coding theory of block codes that are\nconstructed by algebraic",
    "start": "1868280",
    "end": "1874800"
  },
  {
    "text": "techniques like Reed-Muller\ncodes, like Reed-Solomon codes, BCH codes,\ncyclic codes.",
    "start": "1874800",
    "end": "1882320"
  },
  {
    "text": "And if you said, I want to\nleaRn some coding theory, asked your graduate student to\ngo buy a textbook for you,",
    "start": "1882320",
    "end": "1889210"
  },
  {
    "text": "it's probably going to\nbe a textbook on algebraic coding theory. Meanwhile, there was a bunch\nof us who were off actually",
    "start": "1889210",
    "end": "1898520"
  },
  {
    "text": "trying to construct codes\nfor real channels. And conceRning with really how\ncomplex this is to implement,",
    "start": "1898520",
    "end": "1908130"
  },
  {
    "text": "and what kind of performance\ncan we really get. And we hardly ever used\nalgebraic codes.",
    "start": "1908130",
    "end": "1916640"
  },
  {
    "text": "Initially, we used convolutional\ncodes with various kinds of decoding\nalgorithms, threshold",
    "start": "1916640",
    "end": "1922970"
  },
  {
    "text": "decoding, sequential decoding,\nthe Viterbi algorithm.",
    "start": "1922970",
    "end": "1928000"
  },
  {
    "text": "And these get more and more\nelaborate, and then finally the big step, well, the big\nstep was to capacity",
    "start": "1928000",
    "end": "1937530"
  },
  {
    "text": "approaching codes. Which now people are starting to\ncall modeRn coding theory.",
    "start": "1937530",
    "end": "1944110"
  },
  {
    "text": "Long, random-like codes\nthat have an iterative decoding algorithm. And that's what we'll\nget to towards",
    "start": "1944110",
    "end": "1950179"
  },
  {
    "text": "the end of this course. So from an engineers point of\nview, to some extent, of all",
    "start": "1950180",
    "end": "1958050"
  },
  {
    "text": "this work on n k d and algebraic\ndecoding algorithms and so forth was a massive\ndistraction.",
    "start": "1958050",
    "end": "1966675"
  },
  {
    "text": "It really missed the point. Sometimes because it assumed\nhard decisions.",
    "start": "1966675",
    "end": "1973510"
  },
  {
    "text": "Or after assuming hard\ndecisions, it assumed bounded distance decoding algorithms.",
    "start": "1973510",
    "end": "1979140"
  },
  {
    "text": "But it was all -- from Shannon's perspective, it\nwas too deterministic, too",
    "start": "1979140",
    "end": "1984630"
  },
  {
    "text": "constructed, too structured. You want more random elements\nin your coding scheme.",
    "start": "1984630",
    "end": "1991260"
  },
  {
    "text": "However, two things: one, this\ntheory is a beautiful theory,",
    "start": "1991260",
    "end": "1997700"
  },
  {
    "text": "both the mathematical theory\nof finite fields and the coding theory, particularly of\nReed-Solomon codes, which are",
    "start": "1997700",
    "end": "2007770"
  },
  {
    "text": "uniquely the greatest\naccomplishment of algebraic coding theory, and which have\nproved to be very useful.",
    "start": "2007770",
    "end": "2015220"
  },
  {
    "text": "And B, Reed-Solomon codes are\nsomething that as engineers,",
    "start": "2015220",
    "end": "2024140"
  },
  {
    "text": "ought to be part of your tool\nkit, and you will find very useful a variety\nof situations.",
    "start": "2024140",
    "end": "2029549"
  },
  {
    "text": "So the objective of this part of\nthe course is, within some",
    "start": "2029550",
    "end": "2035360"
  },
  {
    "text": "proportion within the overall\nscheme of the course, to give you exposure to this\nlovely theory.",
    "start": "2035360",
    "end": "2042430"
  },
  {
    "text": "You can leaRn all about it just\nby reading a book or two.",
    "start": "2042430",
    "end": "2047470"
  },
  {
    "text": "Probably less than one book. And to give you some exposure\nto Reed-Solomon codes, which",
    "start": "2047470",
    "end": "2053310"
  },
  {
    "text": "have been used in practice. ",
    "start": "2053310",
    "end": "2059908"
  },
  {
    "text": "For more than 20 years, the\ndeep space standard was a concatenated code.",
    "start": "2059909",
    "end": "2065370"
  },
  {
    "text": "That means a sequence of two\ncodes, of which the inner code was a convolutional code\ndecoded by the Viterbi",
    "start": "2065370",
    "end": "2072520"
  },
  {
    "text": "algorithm, which we'll talk\nabout after this. And then the outer code, the\ncode that cleans up errors",
    "start": "2072520",
    "end": "2078989"
  },
  {
    "text": "made by the inner code, was a\nReed-Solomon code of length",
    "start": "2078989",
    "end": "2084530"
  },
  {
    "text": "255 over the finite field\nwith 256 elements. And that's the dynamite\ncombination that dominated the",
    "start": "2084530",
    "end": "2094610"
  },
  {
    "text": "power-limited coding world\nfor at least 20 years. So you ought to know,\nas a minimum, about",
    "start": "2094610",
    "end": "2099840"
  },
  {
    "text": "Reed-Solomon codes. So that's my objective\nin going through",
    "start": "2099840",
    "end": "2105040"
  },
  {
    "text": "these next two chapters. However, because these have\nnot basically been on the",
    "start": "2105040",
    "end": "2110660"
  },
  {
    "text": "winning path to get to the\nShannon limit, I'm trying to",
    "start": "2110660",
    "end": "2116049"
  },
  {
    "text": "limit it to three weeks max. And therefore, that means that\nthe presentation is going to",
    "start": "2116050",
    "end": "2123190"
  },
  {
    "text": "be a lot faster than what\nyou're used to. I'll probably do as much in\nthese three weeks as most",
    "start": "2123190",
    "end": "2130390"
  },
  {
    "text": "people do in a term in\nan entire algebraic coding theory course. That's an exaggeration --",
    "start": "2130390",
    "end": "2136990"
  },
  {
    "text": "people do a lot more -- but I\ntry to at least hit all the main points that you\nneed to know. So I apologize in advance if it\nseems that now we're on a",
    "start": "2136990",
    "end": "2146000"
  },
  {
    "text": "very fast moving train. But you ought to know\nthis stuff. You ought not to spend\ntoo much time on it.",
    "start": "2146000",
    "end": "2152599"
  },
  {
    "text": "I'm trying to reconcile those\ntwo points of view. Any questions or comments?",
    "start": "2152600",
    "end": "2159930"
  },
  {
    "text": "All right. Let's go.  Chapter seven.",
    "start": "2159930",
    "end": "2167240"
  },
  {
    "text": "We go through a series\nof algebraic objects.",
    "start": "2167240",
    "end": "2173865"
  },
  {
    "text": " First, the integers,\nthen groups.",
    "start": "2173865",
    "end": "2181100"
  },
  {
    "text": "You certainly ought to know --\nyou do know about integers. You ought to know about groups,\nat least a little bit.",
    "start": "2181100",
    "end": "2186460"
  },
  {
    "text": " Let's see. What's next? Then fields, particularly\nfinite.",
    "start": "2186460",
    "end": "2195415"
  },
  {
    "text": " Then polynomials over fields,\nparticularly finite.",
    "start": "2195415",
    "end": "2207670"
  },
  {
    "text": "And then finally, from this we\nactually get to construct",
    "start": "2207670",
    "end": "2214130"
  },
  {
    "text": "finite fields.  And these are all things that\nyou'll encounter again and",
    "start": "2214130",
    "end": "2223180"
  },
  {
    "text": "again, have encountered. I think you've probably\nencountered everything except possibly for groups\nand finite fields.",
    "start": "2223180",
    "end": "2230809"
  },
  {
    "text": "You certainly encountered\npolynomials over real and complex fields.",
    "start": "2230810",
    "end": "2236410"
  },
  {
    "text": "And so in some sense, this is\na broadening of what you already know. ",
    "start": "2236410",
    "end": "2246720"
  },
  {
    "text": "So I assume we start with the\nintegers for two reasons.",
    "start": "2246720",
    "end": "2252599"
  },
  {
    "text": " One is you already know about\nthe factorization properties",
    "start": "2252600",
    "end": "2259820"
  },
  {
    "text": "of the integers. We're going to -- that leads to a little bit of\nnumber theory, which we're",
    "start": "2259820",
    "end": "2266990"
  },
  {
    "text": "going to use when we talk about\ngroups, finite groups,",
    "start": "2266990",
    "end": "2272250"
  },
  {
    "text": "cyclic groups. So this is just to remind\nyou, but it's also to put up a template.",
    "start": "2272250",
    "end": "2279440"
  },
  {
    "text": "And we're going to find the\nalgebraic properties of polynomials are very,\nvery similar to",
    "start": "2279440",
    "end": "2285830"
  },
  {
    "text": "those of the integers. This is because they're\nboth rings. They're both in fact principal\nideal domains.",
    "start": "2285830",
    "end": "2291420"
  },
  {
    "text": "They're Euclidean domains. They both have a Euclidean\ndivision algorithm as their key mathematical property.",
    "start": "2291420",
    "end": "2298230"
  },
  {
    "text": "And so pretty much any time you\nwant to develop a result about the polynomials, you can\nstart from the comparable",
    "start": "2298230",
    "end": "2306680"
  },
  {
    "text": "results that you know about the\nintegers and just change the notation. And you'll have a sketch of\nthe proof for polynomials.",
    "start": "2306680",
    "end": "2316320"
  },
  {
    "text": "So it's important to remind\nourselves about the integers first.",
    "start": "2316320",
    "end": "2323590"
  },
  {
    "text": "Now, when I say the\nfactorization properties of the integers, I'm not talking\nabout anything more complicated than what you\nleaRned in grade school.",
    "start": "2323590",
    "end": "2331400"
  },
  {
    "text": "I just want to introduce\na few terms. We have the notion\nof divisors.",
    "start": "2331400",
    "end": "2340670"
  },
  {
    "text": "a divides b means that a times\nsome quotient equals b.",
    "start": "2340670",
    "end": "2349684"
  },
  {
    "text": "I could be talking about plus or\nminus, positive or negative",
    "start": "2349685",
    "end": "2356400"
  },
  {
    "text": "integers here. Everything divides 0.  OK.",
    "start": "2356400",
    "end": "2362120"
  },
  {
    "text": "We have the idea of units,\nwhich are the invertible",
    "start": "2362120",
    "end": "2369620"
  },
  {
    "text": "integers under multiplication. And what are those? ",
    "start": "2369620",
    "end": "2378460"
  },
  {
    "text": "Which integers have a\nmultiplicative inverse? ",
    "start": "2378460",
    "end": "2384980"
  },
  {
    "text": "[UNINTELLIGIBLE] any of them? AUDIENCE: [INAUDIBLE PHRASE]. PROFESSOR: [INAUDIBLE]. All right.",
    "start": "2384980",
    "end": "2390420"
  },
  {
    "text": " That's a little exercise that\nshows you that, in general,",
    "start": "2390420",
    "end": "2397530"
  },
  {
    "text": "the invertible elements of any\nset that has an operation like multiplication form a group.",
    "start": "2397530",
    "end": "2406190"
  },
  {
    "text": "[INAUDIBLE] group thing, these\nclearly form a group under multiplication that's\nisomorphic",
    "start": "2406190",
    "end": "2411320"
  },
  {
    "text": "to the binary group. Well, in fact, we've already\nbeen using it -- F2.",
    "start": "2411320",
    "end": "2416380"
  },
  {
    "text": "OK. So we have units, and whenever\nwe talk about the divisors,",
    "start": "2416380",
    "end": "2421620"
  },
  {
    "text": "factorization, primes,\nso forth, the units are a nuisance. Because we can always multiply\nthings by units and it doesn't",
    "start": "2421620",
    "end": "2429790"
  },
  {
    "text": "affect factorization\nproperties. This is [UNINTELLIGIBLE] a\nlittle bit more out there.",
    "start": "2429790",
    "end": "2435810"
  },
  {
    "start": "2435810",
    "end": "2441515"
  },
  {
    "text": "What I eventually want\nto get to is -- skipping a few things that\nare said in the notes --",
    "start": "2441515",
    "end": "2449510"
  },
  {
    "text": "is unique factorization. ",
    "start": "2449510",
    "end": "2455900"
  },
  {
    "text": "Maybe before that I should\ndefine primes:",
    "start": "2455900",
    "end": "2465520"
  },
  {
    "text": "are positive integers. The reason we stay positive\nis, again --",
    "start": "2465520",
    "end": "2470861"
  },
  {
    "text": "of course, we could have a\nnegative prime integer, but let's pick a unique\nrepresentative of two units.",
    "start": "2470862",
    "end": "2477230"
  },
  {
    "text": " Positive integers -- I should've said in the notes\ngreater than 1, we don't",
    "start": "2477230",
    "end": "2484330"
  },
  {
    "text": "consider 1 to be a prime --  that have no non-trivial\ndivisors.",
    "start": "2484330",
    "end": "2494515"
  },
  {
    "start": "2494515",
    "end": "2501940"
  },
  {
    "text": "And, of course, every integer\nhas trivial divisors. ",
    "start": "2501940",
    "end": "2509790"
  },
  {
    "text": "Namely, plus or minus 1 and\nplus or minus itself.",
    "start": "2509790",
    "end": "2515460"
  },
  {
    "text": "Let me give this a name. i. Not a very good name. How about n?",
    "start": "2515460",
    "end": "2521390"
  },
  {
    "text": " So if we have any integer n,\nit's divisible by plus or minus one, plus or minus n --",
    "start": "2521390",
    "end": "2528940"
  },
  {
    "text": "that doesn't count. So a prime is an integer that\ndoesn't have any other",
    "start": "2528940",
    "end": "2535119"
  },
  {
    "text": "divisors than these\ntrivial ones. And then I want to get to unique\nfactorization, which",
    "start": "2535120",
    "end": "2542610"
  },
  {
    "text": "I'll just state, not prove. ",
    "start": "2542610",
    "end": "2548240"
  },
  {
    "text": "Which is that every integer\nis equal to a",
    "start": "2548240",
    "end": "2561760"
  },
  {
    "text": "unique product of primes. ",
    "start": "2561760",
    "end": "2570366"
  },
  {
    "text": "And we always have to\nadd up to units. We can add as many plus or minus\n1's to the product as we",
    "start": "2570366",
    "end": "2577860"
  },
  {
    "text": "want, as long as we have\nan even number of them. And we'll have another\nfactorization, so here, we",
    "start": "2577860",
    "end": "2584200"
  },
  {
    "text": "want to exclude the units. And then we have unique\nfactorization.",
    "start": "2584200",
    "end": "2591730"
  },
  {
    "text": "OK. This is all grade school\nstuff, high school stuff maybe.",
    "start": "2591730",
    "end": "2597020"
  },
  {
    "text": " Again, when I go through\npolynomials, you'll see there",
    "start": "2597020",
    "end": "2603750"
  },
  {
    "text": "is a set of concept\nexactly like this. Now, where we want to get to\nis mod-n arithmetic, which",
    "start": "2603750",
    "end": "2615540"
  },
  {
    "text": "again, you all know\nabout, I assume. This is based on the fact --",
    "start": "2615540",
    "end": "2622300"
  },
  {
    "text": "we can think of it as being\nbased on Euclidean division algorithm, which basically\nproves that given any two",
    "start": "2622300",
    "end": "2631940"
  },
  {
    "text": "integers m and n, we can write m\nas some qn plus r where 0 is",
    "start": "2631940",
    "end": "2646280"
  },
  {
    "text": "less than or equal to r, less\nthan or equal to n minus 1, and is called the remainder\nof m, modulo n.",
    "start": "2646280",
    "end": "2653470"
  },
  {
    "text": " And how is this proved? Let's say these are both\npositive integers.",
    "start": "2653470",
    "end": "2660330"
  },
  {
    "text": "Say m is a big integer,\nn is a small integer. We just keep subtracting integer\nmultiples of n from m",
    "start": "2660330",
    "end": "2669599"
  },
  {
    "text": "until we -- you know, the remainder will\nstart decreasing until we get the remainder in this range, and\nit's obvious that we can",
    "start": "2669600",
    "end": "2676780"
  },
  {
    "text": "always get a remainder\nthat's in that range. And further, that this\ndecomposition is unique under",
    "start": "2676780",
    "end": "2683839"
  },
  {
    "text": "this restriction on r. ",
    "start": "2683840",
    "end": "2689870"
  },
  {
    "text": "All right. So we write the m is congruent\nor equivalent to r mod n.",
    "start": "2689870",
    "end": "2703080"
  },
  {
    "text": "That means it differs from r by\na multiple of n where r is",
    "start": "2703080",
    "end": "2710260"
  },
  {
    "text": "unique and r is in the set 0, 1,\nup through n minus 1, which",
    "start": "2710260",
    "end": "2718000"
  },
  {
    "text": "we say are the residue\nclasses mod n. It has to be one of\nthose n things.",
    "start": "2718000",
    "end": "2723970"
  },
  {
    "text": "OK?  No one is having the slightest\ntrouble with this, right? Boring.",
    "start": "2723970",
    "end": "2729285"
  },
  {
    "text": "You've seen it all before. I hope. ",
    "start": "2729285",
    "end": "2734700"
  },
  {
    "text": "OK.  So now you ask, suppose m equals\nr mod-n, and some other",
    "start": "2734700",
    "end": "2752289"
  },
  {
    "text": "w equals s mod-n. What is m plus w mod-n, and you\nquickly prove that it's",
    "start": "2752290",
    "end": "2767230"
  },
  {
    "text": "equal to r plus s mod-n. ",
    "start": "2767230",
    "end": "2773530"
  },
  {
    "text": "By transferring, by just\nchecking the properties of ordinary arithmetic, you can use\nthis kind of expression: m",
    "start": "2773530",
    "end": "2781140"
  },
  {
    "text": "must equal something\ntimes n plus r. w must equal something\ntimes n plus s.",
    "start": "2781140",
    "end": "2788670"
  },
  {
    "text": "So if we add m plus w, we're\ngoing to get something times n plus r plus s.",
    "start": "2788670",
    "end": "2794860"
  },
  {
    "text": "And that is, by definition,\ngoing to be r plus s mod-n.",
    "start": "2794860",
    "end": "2801070"
  },
  {
    "text": "So we get a well-defined\naddition rule for these residues, for the elements of\nthis set of n residues Rn, or",
    "start": "2801070",
    "end": "2810589"
  },
  {
    "text": "remainders. OK, so addition is\nwell-defined.",
    "start": "2810590",
    "end": "2815980"
  },
  {
    "text": "And similarly, multiplication\nis well-defined. mw mod-n, again, you can prove\n-- and this is done",
    "start": "2815980",
    "end": "2824950"
  },
  {
    "text": "in the notes --  that if mw mod-n can be\nfound by taking rs and",
    "start": "2824950",
    "end": "2834930"
  },
  {
    "text": "reducing it, mod-n. Maybe I should have congruent\nsigns here, but I",
    "start": "2834930",
    "end": "2840650"
  },
  {
    "text": "won't worry about it. So this is mod-n, addition\nand multiplication.",
    "start": "2840650",
    "end": "2854150"
  },
  {
    "text": "So what this says is that Rn,\ncombined with this mod-n",
    "start": "2854150",
    "end": "2859930"
  },
  {
    "text": "addition operation, which in the\nnotes I write in that way, and this mod-n multiplication\noperation --",
    "start": "2859930",
    "end": "2867885"
  },
  {
    "text": " this is a well-defined set of n\nelements with a well-defined",
    "start": "2867885",
    "end": "2876190"
  },
  {
    "text": "addition operation and\na well-defined multiplication operation.",
    "start": "2876190",
    "end": "2881464"
  },
  {
    "text": "And I don't prove any properties\nabout it here, but I come back to prove that this\nhas almost all of the",
    "start": "2881464",
    "end": "2890160"
  },
  {
    "text": "properties that we\nwant of a field. In fact, if n is a prime, it\ndoes have the properties that",
    "start": "2890160",
    "end": "2897849"
  },
  {
    "text": "we want of a field. So we'll later prove that the\nfinite field with p elements",
    "start": "2897850",
    "end": "2905910"
  },
  {
    "text": "is simply rp with mod-p addition\nand multiplication.",
    "start": "2905910",
    "end": "2915720"
  },
  {
    "text": "And, of course, for the\nparticular case p equals 2, we already have a lot of experience\nwith this.",
    "start": "2915720",
    "end": "2921510"
  },
  {
    "text": "That's how we get the\nbinary field. We just take the 0 and 1,\nconsidered as residues mod-2.",
    "start": "2921510",
    "end": "2928340"
  },
  {
    "text": "And then the field addition and\nmultiplication operations",
    "start": "2928340",
    "end": "2935630"
  },
  {
    "text": "give us something that\nsatisfies the axioms of the field.",
    "start": "2935630",
    "end": "2941960"
  },
  {
    "text": "We'll find that works for every\nprime, and it doesn't work for non-primes.",
    "start": "2941960",
    "end": "2947085"
  },
  {
    "text": "Can anyone quickly see why this\nisn't going to work for non-primes? ",
    "start": "2947085",
    "end": "2955010"
  },
  {
    "text": "Suppose n equals 6. ",
    "start": "2955010",
    "end": "2961270"
  },
  {
    "text": "Anyone quickly see why this set\nunder these two operations",
    "start": "2961270",
    "end": "2968400"
  },
  {
    "text": "isn't going to be a field? This, of course, assumes that\nyou know what a field is, which we haven't actually\nsaid yet.",
    "start": "2968400",
    "end": "2976280"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: Excuse me? AUDIENCE: [INAUDIBLE]. PROFESSOR: There's no inverse.",
    "start": "2976280",
    "end": "2983200"
  },
  {
    "text": "In a field, every non-zero\nelement has to have an inverse, just like in the\nreal and complex field.",
    "start": "2983200",
    "end": "2992740"
  },
  {
    "text": "But in the integers mod-6, 3\ntimes 2 is equal to 6, which",
    "start": "2992740",
    "end": "3000290"
  },
  {
    "text": "is equal to 0. So there are two non-zero\nelements that multiplied",
    "start": "3000290",
    "end": "3006079"
  },
  {
    "text": "together give 0. And that means that neither 3\nnor 2 can possibly have a",
    "start": "3006080",
    "end": "3011170"
  },
  {
    "text": "multiplicative inverse. So that's why you have\nto have a prime.",
    "start": "3011170",
    "end": "3017910"
  },
  {
    "text": "This doesn't happen, of course,\nif n were a prime.",
    "start": "3017910",
    "end": "3023490"
  },
  {
    "text": "OK. So that's just a little warm\nup to remind you what mod-n arithmetic is like.",
    "start": "3023490",
    "end": "3029780"
  },
  {
    "text": "And in particular, this is going\nto be the key element of a lot of proofs --",
    "start": "3029780",
    "end": "3037350"
  },
  {
    "text": "the Euclidean division\nalgorithm -- both for integers and\nfor polynomials.",
    "start": "3037350",
    "end": "3043140"
  },
  {
    "start": "3043140",
    "end": "3049000"
  },
  {
    "text": "OK. So that, I hope, was review. ",
    "start": "3049000",
    "end": "3057040"
  },
  {
    "text": "Now we're going to talk\nabout groups. ",
    "start": "3057040",
    "end": "3062280"
  },
  {
    "text": "So let's do it. ",
    "start": "3062280",
    "end": "3068220"
  },
  {
    "text": "How many of you feel you\nknow what a group is? ",
    "start": "3068220",
    "end": "3074690"
  },
  {
    "text": "Less than half the class. OK. Well, we've been talking about\ngroups so far here, but let's",
    "start": "3074690",
    "end": "3086020"
  },
  {
    "text": "take a little bit more of\nan axiomatic approach. In the notes, I actually give\ntwo possible sets of axioms",
    "start": "3086020",
    "end": "3093270"
  },
  {
    "text": "for a group. Let me start with\na standard one. You've heard of something called\nthe group property in",
    "start": "3093270",
    "end": "3099710"
  },
  {
    "text": "this course. ",
    "start": "3099710",
    "end": "3105450"
  },
  {
    "text": "Well, first of all, what am I\ntalking about when I'm talking about a group? I'm talking about a set, g,\nand I'm also talking about",
    "start": "3105450",
    "end": "3114670"
  },
  {
    "text": "some operation on that set,\nwhich I'll use the mod addition circle-plus as\nthe group property.",
    "start": "3114670",
    "end": "3124370"
  },
  {
    "text": " Even if it's multiplication or\nmatrix inversion or -- no, it",
    "start": "3124370",
    "end": "3132650"
  },
  {
    "text": "couldn't be matrix inversion. What this means is that if we\ntake any two elements of the",
    "start": "3132650",
    "end": "3141800"
  },
  {
    "text": "group, then a plus b\nis well-defined.",
    "start": "3141800",
    "end": "3147430"
  },
  {
    "text": " So you can think there's\na table.",
    "start": "3147430",
    "end": "3154849"
  },
  {
    "text": "Here are the elements\nof the group. a, b, c, d, e. a, b, c, d, e.",
    "start": "3154850",
    "end": "3161860"
  },
  {
    "text": "And at this point, all we\nknow is that we can fill out the table.",
    "start": "3161860",
    "end": "3168579"
  },
  {
    "text": "We get something that\ngoes in all here.  All right?",
    "start": "3168580",
    "end": "3174200"
  },
  {
    "text": "So that defines the group. AUDIENCE: [INAUDIBLE PHRASE]. PROFESSOR: That means if I\ngive a and b, then the",
    "start": "3174200",
    "end": "3182500"
  },
  {
    "text": "quantity a plus b is -- I can tell you what c is. There's a unique element in\neach of the cells of this",
    "start": "3182500",
    "end": "3190059"
  },
  {
    "text": "addition table, or\nthe group table. ",
    "start": "3190060",
    "end": "3195970"
  },
  {
    "text": "OK. Group property, also called\nclosure, is the obvious one.",
    "start": "3195970",
    "end": "3205540"
  },
  {
    "text": " What's an elementary condition\nof what all these sums have to",
    "start": "3205540",
    "end": "3211770"
  },
  {
    "text": "be for this to be a group? ",
    "start": "3211770",
    "end": "3222460"
  },
  {
    "text": "Have to be all in the group. ",
    "start": "3222460",
    "end": "3229349"
  },
  {
    "text": "If I say I have a group that\nconsists of 1,2,3,4,5, 1,2,3,4,5 and my group\noperation is ordinary",
    "start": "3229350",
    "end": "3239819"
  },
  {
    "text": "addition, then I can certainly\nfill out the table. And I get 2,3,4,5,6 --",
    "start": "3239820",
    "end": "3246820"
  },
  {
    "text": "whoops. Yeah, that's the element that's\nnot in the group. So in order to have a\ngroup, I want a --",
    "start": "3246820",
    "end": "3258790"
  },
  {
    "text": "I mean, it's a plus b is in\nthe group, all a and b.",
    "start": "3258790",
    "end": "3263870"
  },
  {
    "text": " So the group is closed\nunder addition.",
    "start": "3263870",
    "end": "3270640"
  },
  {
    "text": "This was the property we used to\ndefine linearity for binary linear block codes.",
    "start": "3270640",
    "end": "3277150"
  },
  {
    "text": "The sum of any two n-tuples\nhad to be another n-tuple in the code. ",
    "start": "3277150",
    "end": "3287260"
  },
  {
    "text": "We have the associativity\noperation.",
    "start": "3287260",
    "end": "3293920"
  },
  {
    "text": "This is a requirement on the\nbinary operation, really.",
    "start": "3293920",
    "end": "3303744"
  },
  {
    "text": "a plus b plus c has got to be\nequal to a plus b plus c.",
    "start": "3303745",
    "end": "3310190"
  },
  {
    "text": "In other words, you can get\nrid of the parentheses.",
    "start": "3310190",
    "end": "3315869"
  },
  {
    "text": "And this, an expression like\nthat, is meaningful. It doesn't matter how you group,\nwhether you add these",
    "start": "3315870",
    "end": "3323980"
  },
  {
    "text": "two things first and then that,\nor add these two things first and then that. ",
    "start": "3323980",
    "end": "3332390"
  },
  {
    "text": "Maybe now is a good time to\ntalk about the special",
    "start": "3332390",
    "end": "3338299"
  },
  {
    "text": "property, which is\nnot an axiom. So let me call it x abelian, or\nthe commutative property.",
    "start": "3338300",
    "end": "3347036"
  },
  {
    "start": "3347036",
    "end": "3352700"
  },
  {
    "text": "This is true if a plus\nb is equal to b",
    "start": "3352700",
    "end": "3359589"
  },
  {
    "text": "plus a, all a, b group.",
    "start": "3359590",
    "end": "3365692"
  },
  {
    "text": "Now this is, of course, true\nfor ordinary addition and ordinary multiplication.",
    "start": "3365692",
    "end": "3371339"
  },
  {
    "text": "It's not true for matrix\nmultiplication. Say if I have a group of\nmatrices, then in general, ab",
    "start": "3371340",
    "end": "3377960"
  },
  {
    "text": "is not equal to ba. So for some groups this\nholds, for some groups it doesn't hold.",
    "start": "3377960",
    "end": "3383350"
  },
  {
    "text": " In this course, almost without\nexception, every group we're",
    "start": "3383350",
    "end": "3391130"
  },
  {
    "text": "going to talk about is\nan abelian group. That means that in adding\nthings up, the",
    "start": "3391130",
    "end": "3396450"
  },
  {
    "text": "order doesn't matter. So if that were true, then it in\na plus b plus c, that means",
    "start": "3396450",
    "end": "3403170"
  },
  {
    "text": "that's the same as c plus\nb plus a, or c plus a plus b, or whatever. All the properties that\nyou're accustomed to",
    "start": "3403170",
    "end": "3408910"
  },
  {
    "text": "from ordinary addition. But this is not one of the group\naxioms, and, of course,",
    "start": "3408910",
    "end": "3413940"
  },
  {
    "text": "there are non-abelian groups. The smallest non-abelian group\nhas size 6, and is the",
    "start": "3413940",
    "end": "3420520"
  },
  {
    "text": "permutation group on\nthree elements. So small groups are all --",
    "start": "3420520",
    "end": "3427549"
  },
  {
    "text": "size 5 or less are\nall abelian. Because that's the only way\nwe can do the group table.",
    "start": "3427550",
    "end": "3434019"
  },
  {
    "text": "All right. So that's terminology\nat this point. It's not part of the axiom. But that's the reason that I use\na symbol that looks like a",
    "start": "3434020",
    "end": "3442040"
  },
  {
    "text": "plus, is I'm pretty much always\nthinking an abelian group, and I don't want to\ntrouble you with thinking",
    "start": "3442040",
    "end": "3447700"
  },
  {
    "text": "about non-abelian groups. OK. Then we have the identity\nproperty.",
    "start": "3447700",
    "end": "3455230"
  },
  {
    "text": " There is an identity, which,\nin an abelian group, is",
    "start": "3455230",
    "end": "3462770"
  },
  {
    "text": "always called -- ordinarily called 0.",
    "start": "3462770",
    "end": "3468300"
  },
  {
    "text": "In an additive group it's\nalways called 0. So I'll call it 0. In more abstract treatments,\nit's called 1 or E for --",
    "start": "3468300",
    "end": "3477930"
  },
  {
    "text": "what does E stand for? Eigen something. There's a 0 in g such that\n0 plus a equals --",
    "start": "3477930",
    "end": "3490020"
  },
  {
    "text": "or a plus 0 -- is always equal to a. The 0 is the null operator on\nany element of the group.",
    "start": "3490020",
    "end": "3499381"
  },
  {
    "text": "If you add 0 to anything, you\nget what you started with. ",
    "start": "3499382",
    "end": "3506890"
  },
  {
    "text": "Clearly, we have such a thing\nin ordinary addition. Suppose I was talking in\nthe real numbers under",
    "start": "3506890",
    "end": "3514470"
  },
  {
    "text": "multiplication, is that\na group, you guess? ",
    "start": "3514470",
    "end": "3522875"
  },
  {
    "text": "It's actually not. Suppose I talk about the\nnon-zero real numbers under",
    "start": "3522875",
    "end": "3528859"
  },
  {
    "text": "multiplication. Is that a group?  Yes, and its identity is 1.",
    "start": "3528860",
    "end": "3537700"
  },
  {
    "text": "1 as the thing that if you\nmultiply it by anything, it leaves what you started with.",
    "start": "3537700",
    "end": "3544809"
  },
  {
    "text": "There's the inverse, which we\ndon't have in the reals under multiplication.",
    "start": "3544810",
    "end": "3552190"
  },
  {
    "text": "For all a and g, there exists\nsomething called minus a --",
    "start": "3552190",
    "end": "3561619"
  },
  {
    "text": "or a to the minus 1 in\nmultiplicative notation -- in g such that a plus\nminus a equals 0.",
    "start": "3561620",
    "end": "3577034"
  },
  {
    "text": "That's an additive inverse. So in the real numbers, the\ninverse of a is minus a.",
    "start": "3577034",
    "end": "3585636"
  },
  {
    "text": "In the integers, the\ninverse of a is minus a under addition. In the non-zero real numbers\nunder multiplication, every",
    "start": "3585636",
    "end": "3594900"
  },
  {
    "text": "non-zero real number does have\na multiplicative inverse, which is called 1 over\na, or a minus 1.",
    "start": "3594900",
    "end": "3604410"
  },
  {
    "text": "That's why we have\nto exclude 0. 0 does not an inverse. ",
    "start": "3604410",
    "end": "3610850"
  },
  {
    "text": "So a good example to think\nabout is r-star, which is",
    "start": "3610850",
    "end": "3616740"
  },
  {
    "text": "non-zero reals under ordinary\nmultiplication, is a group.",
    "start": "3616740",
    "end": "3628310"
  },
  {
    "text": "Is it an abelian group? Is ab equal to ba?",
    "start": "3628310",
    "end": "3634746"
  },
  {
    "text": "Yeah. So this is an infinite\nabelian group. ",
    "start": "3634746",
    "end": "3653878"
  },
  {
    "text": "All right. OK.",
    "start": "3653878",
    "end": "3659755"
  },
  {
    "text": "I want to show that\nthe axioms lead to",
    "start": "3659755",
    "end": "3665440"
  },
  {
    "text": "a permutation property. ",
    "start": "3665440",
    "end": "3675640"
  },
  {
    "text": "Because this is something\nthat's going to come up again and again. ",
    "start": "3675640",
    "end": "3680840"
  },
  {
    "text": "One way of saying this is if I\nhave, if a plus b equals c --",
    "start": "3680840",
    "end": "3688430"
  },
  {
    "text": "suppose I write down that\nsymbolic equation -- then I can solve for any\none of the three",
    "start": "3688430",
    "end": "3705670"
  },
  {
    "text": "given the other two. ",
    "start": "3705670",
    "end": "3711686"
  },
  {
    "text": "How would I do that? If I'm given a and b, obviously,\nthat tells me c from the table. If I'm given a and c, then a\nis equal to c minus b --",
    "start": "3711686",
    "end": "3721890"
  },
  {
    "text": "I'm sorry -- b is equal\nto c minus a. ",
    "start": "3721890",
    "end": "3727410"
  },
  {
    "text": "I should say here, from this\ninverse, we're going to write b plus minus a in\na simpler form.",
    "start": "3727410",
    "end": "3737730"
  },
  {
    "text": "It's just b minus a. So the fact that we have an\ninverse sort of defines",
    "start": "3737730",
    "end": "3744700"
  },
  {
    "text": "another operation, which\nwe call subtraction,",
    "start": "3744700",
    "end": "3750589"
  },
  {
    "text": "which is not abelian. Not commutative. a minus b is not equal\nto b minus a.",
    "start": "3750590",
    "end": "3757660"
  },
  {
    "text": "But it's basically implicit\nin this that we subtract group elements. We can cancel group elements.",
    "start": "3757660",
    "end": "3763760"
  },
  {
    "text": "If you have a plus c equal\nto b plus c, then a must be equal to b. Because you can subtract\nc from both sides.",
    "start": "3763760",
    "end": "3770455"
  },
  {
    "start": "3770455",
    "end": "3776160"
  },
  {
    "text": "All right. OK. ",
    "start": "3776160",
    "end": "3781940"
  },
  {
    "text": "What does this mean that this\ngives us a constraint on the",
    "start": "3781940",
    "end": "3790130"
  },
  {
    "text": "addition table of a group? Suppose I take a four element\ngroup, g, and one of the",
    "start": "3790130",
    "end": "3802280"
  },
  {
    "text": "elements is going to be the zero\nelement, and the other let's just call a, b, c.",
    "start": "3802280",
    "end": "3807980"
  },
  {
    "text": "0, a, b, c. And I have a well-defined\naddition table, which",
    "start": "3807980",
    "end": "3814000"
  },
  {
    "text": "includes, in here, only\na 0, a, b, c. From the property of the\nidentity, I can fill in some",
    "start": "3814000",
    "end": "3822250"
  },
  {
    "text": "of these things.  And now what freedom do I have\nto fill in the rest?",
    "start": "3822250",
    "end": "3830210"
  },
  {
    "text": "How many group tables are\nthere of size four? ",
    "start": "3830210",
    "end": "3838490"
  },
  {
    "text": "Well, the main point that I want\nto make with permutation",
    "start": "3838490",
    "end": "3845490"
  },
  {
    "text": "property is that every row and\nevery column has to be a permutation of the four\nelements 0, a, b, c.",
    "start": "3845490",
    "end": "3852570"
  },
  {
    "text": " Why is that? Suppose I had another a\nin this column here.",
    "start": "3852570",
    "end": "3862980"
  },
  {
    "text": "Then I would have a plus 0 is\nequal to a, and also a plus c is equal to a.",
    "start": "3862980",
    "end": "3870210"
  },
  {
    "text": "But that would imply that c\nequals 0, which it isn't.",
    "start": "3870210",
    "end": "3875839"
  },
  {
    "text": "All right. So in order to be able to solve\nthis equation, this has to be something different\nfrom a, and likewise.",
    "start": "3875840",
    "end": "3884850"
  },
  {
    "text": "Since I have, in this case, a\nfinite group, I basically just have to write the group elements\ndown here again in",
    "start": "3884850",
    "end": "3891990"
  },
  {
    "text": "some order.  It tuRns out that for four\nelements, there are exactly",
    "start": "3891990",
    "end": "3898780"
  },
  {
    "text": "two ways of doing that,\ngenerically.",
    "start": "3898780",
    "end": "3904170"
  },
  {
    "text": "One is sort of the\ncyclic group. I'm sorry -- a, b, c, 0, a, c, 0, a, b.",
    "start": "3904170",
    "end": "3916690"
  },
  {
    "text": "That's one way of filling out\nthe table such that each row",
    "start": "3916690",
    "end": "3921810"
  },
  {
    "text": "is a permutation\nof 0, a, b, c. Each column is a permutation\nof 0, a, b, c.",
    "start": "3921810",
    "end": "3928060"
  },
  {
    "text": "So that's a legitimate\ngroup table. Let me just, for your interest,\nshow you that that's",
    "start": "3928060",
    "end": "3934920"
  },
  {
    "text": "not the only one. We could also do 0, a,\nb, c, 0, a, b, c.",
    "start": "3934920",
    "end": "3942950"
  },
  {
    "text": "If I write 0 here, then\nI've got to write c there and b there. Got to write c here\nand b there.",
    "start": "3942950",
    "end": "3951790"
  },
  {
    "text": "And then down here, the only\nchoice I have is this.",
    "start": "3951790",
    "end": "3957350"
  },
  {
    "text": "This is called the cyclic\ngroup of four elements.",
    "start": "3957350",
    "end": "3962400"
  },
  {
    "text": "This is called the\nKlein four group. And this is all there is.",
    "start": "3962400",
    "end": "3967500"
  },
  {
    "text": "Both of them tuRn out to be\nabelian if you check it out. And basically, this permutation\nproperty restricts",
    "start": "3967500",
    "end": "3976780"
  },
  {
    "text": "these to be the possible groups\nof size four, abelian or non-abelian, just to\nsatisfy the axiom.",
    "start": "3976780",
    "end": "3983800"
  },
  {
    "text": " I actually prove in the notes\nthat if you replace axioms a",
    "start": "3983800",
    "end": "3993840"
  },
  {
    "text": "and b with the permutation\nproperty, you get another",
    "start": "3993840",
    "end": "4003020"
  },
  {
    "text": "equivalent set of axioms\nfor a group.",
    "start": "4003020",
    "end": "4010830"
  },
  {
    "text": "So the permutation of properties\nis very basic.",
    "start": "4010830",
    "end": "4017340"
  },
  {
    "text": "All you need is -- for a set and a binary operation\nto form a group, all",
    "start": "4017340",
    "end": "4023070"
  },
  {
    "text": "you need is identity,\nassociativity, and the permutation property for\nthe group table,",
    "start": "4023070",
    "end": "4030800"
  },
  {
    "text": "the addition table. Simple proof of that\nin the notes. ",
    "start": "4030800",
    "end": "4038190"
  },
  {
    "text": "But this observation\nis going to be important as we go forward.",
    "start": "4038190",
    "end": "4044720"
  },
  {
    "text": "It's a fundamental thing\nwe're going to use. So you see a group can't\njust be anything. It already has very definite\nrestrictions on it.",
    "start": "4044720",
    "end": "4053609"
  },
  {
    "text": " All right.",
    "start": "4053610",
    "end": "4058840"
  },
  {
    "text": "Anything else I want\nto say right here? OK, subtraction, cancellation.",
    "start": "4058840",
    "end": "4065026"
  },
  {
    "text": " OK, I guess we can go into\nthe next property,",
    "start": "4065026",
    "end": "4081400"
  },
  {
    "text": "which is cyclic groups. And I'm only going to talk about\nfinite cyclic groups, or",
    "start": "4081400",
    "end": "4089830"
  },
  {
    "text": "finite groups in general. Now, a cyclic group\nis probably the simplest kind of group.",
    "start": "4089830",
    "end": "4095890"
  },
  {
    "start": "4095890",
    "end": "4102139"
  },
  {
    "text": "Let me first put up the\ncanonical cyclic group, which",
    "start": "4102140",
    "end": "4118589"
  },
  {
    "text": "is the integers mod-n, which\nmeans the set of residues",
    "start": "4118590",
    "end": "4132909"
  },
  {
    "text": "mod-n and the mod-n addition\noperation. ",
    "start": "4132910",
    "end": "4140439"
  },
  {
    "text": "Which is written just as Zn -- there are various notations\nfor it.",
    "start": "4140439",
    "end": "4147028"
  },
  {
    "text": "But this, of course, we'll\njust write it as Zn.",
    "start": "4147029",
    "end": "4153028"
  },
  {
    "text": "The integers mod-n.  Does this form a group?",
    "start": "4153029",
    "end": "4160350"
  },
  {
    "text": "Let's check the axioms.  Certainly, let's take\nthe original axioms.",
    "start": "4160350",
    "end": "4169439"
  },
  {
    "text": "So the Rn is closed under\naddition mod-n. If we add two elements, we're\ngoing to get another element.",
    "start": "4169439",
    "end": "4177830"
  },
  {
    "text": "The mod-n addition operation\nis associative. In fact, it's abelian. a plus b plus c is b plus c plus\na -- it doesn't matter",
    "start": "4177830",
    "end": "4185509"
  },
  {
    "text": "what order, from the\nsame property for ordinary addition. Is there an identity in here?",
    "start": "4185510",
    "end": "4191969"
  },
  {
    "text": "Yes. The 0 is one of the elements\nhere and acts as the identity. 0 plus anything mod-n is equal\nto the same thing mod-n.",
    "start": "4191970",
    "end": "4201120"
  },
  {
    "text": "And is there an inverse? OK. ",
    "start": "4201120",
    "end": "4208430"
  },
  {
    "text": "Let's explicitly write out Rn\nas 0, 1 up to n minus 1.",
    "start": "4208430",
    "end": "4215155"
  },
  {
    "text": " And then I claim that if I take\nany of these i, then n",
    "start": "4215155",
    "end": "4226080"
  },
  {
    "text": "minus i is its inverse. n minus i is in the right\nrange if not zero.",
    "start": "4226080",
    "end": "4235270"
  },
  {
    "text": "The inverse of 0 is 0. The inverse of i between 1 and\nn minus 1 is going to be n",
    "start": "4235270",
    "end": "4241800"
  },
  {
    "text": "minus i because if I add\ni to n minus i -- is equal to n, take mod-n,\nthat's equal to 0.",
    "start": "4241800",
    "end": "4249730"
  },
  {
    "text": "So every element has the\nadditive inverse.",
    "start": "4249730",
    "end": "4255050"
  },
  {
    "text": "And so the group table has a\nvery boring form, which does",
    "start": "4255050",
    "end": "4261460"
  },
  {
    "text": "satisfy the permutation\nproperty. If I take Z5, for instance.",
    "start": "4261460",
    "end": "4266910"
  },
  {
    "text": " 0,1,2,3,4. 0 plus anything looks\nlike that. 1 times anything is\njust 1,2,3,4 and 1",
    "start": "4266910",
    "end": "4276250"
  },
  {
    "text": "plus 4 is 0 mod 5. 2,3,4,0,1, and so forth.",
    "start": "4276250",
    "end": "4291400"
  },
  {
    "text": "3, 4, 0, 1, 2, 4, 0, 1, 2, 3. Each row or column is just a\ncyclic shift to the previous row or column.",
    "start": "4291400",
    "end": "4296455"
  },
  {
    "text": "Just fill it out. And does it satisfy the\npermutation property? Yes, it does.",
    "start": "4296455",
    "end": "4303070"
  },
  {
    "text": "This one here, for instance, you\ncan recognize as a cyclic",
    "start": "4303070",
    "end": "4309400"
  },
  {
    "text": "group table. And so, apart from relabeling,\nthis is the group table of Z4.",
    "start": "4309400",
    "end": "4315929"
  },
  {
    "text": "Or we take a, b, c\nequal to 1, 2, 3.",
    "start": "4315930",
    "end": "4321840"
  },
  {
    "text": "If two groups have the same\ngroup table up to relabelling, they're said to be isomorphic.",
    "start": "4321840",
    "end": "4328719"
  },
  {
    "text": "OK? That's an important\nconcept in math. And all it means is the two\ngroups act the same, except",
    "start": "4328720",
    "end": "4336679"
  },
  {
    "text": "that we've changed the names\nof the group elements. ",
    "start": "4336680",
    "end": "4343690"
  },
  {
    "text": "OK. So what I'm going to show\nis that all cyclic --",
    "start": "4343690",
    "end": "4351710"
  },
  {
    "text": "this group is sort of cyclic\nbecause, as you see in the",
    "start": "4351710",
    "end": "4357020"
  },
  {
    "text": "notes, we can think of adding\n1 as just being",
    "start": "4357020",
    "end": "4362830"
  },
  {
    "text": "cycling around a circle. ",
    "start": "4362830",
    "end": "4368140"
  },
  {
    "text": "In this case, with\n5 points on it. And adding 2 is going two\nsteps around the circle.",
    "start": "4368140",
    "end": "4375280"
  },
  {
    "text": "And the elements on the\ncircle are the group elements 0, 1, 2, 3, 4. ",
    "start": "4375280",
    "end": "4382159"
  },
  {
    "text": "And then we get to 5. We identify that with 0. So we close the loop.",
    "start": "4382160",
    "end": "4388139"
  },
  {
    "text": "One we identify with 6. This with 7. This with 8.",
    "start": "4388140",
    "end": "4393270"
  },
  {
    "text": "Up to as many as you like. So that's the intuition\nwhy these are called cyclic groups.",
    "start": "4393270",
    "end": "4399000"
  },
  {
    "text": "The addition operation cycles\nrather than being on a line,",
    "start": "4399000",
    "end": "4404640"
  },
  {
    "text": "as it would be with the ordinary\nintegers, where we go infinitely in either\ndirection. ",
    "start": "4404640",
    "end": "4411880"
  },
  {
    "text": "So the formal definition of a\ncyclic group is that g has a",
    "start": "4411880",
    "end": "4429150"
  },
  {
    "text": "single generator. ",
    "start": "4429150",
    "end": "4442570"
  },
  {
    "text": "Call it a little g. And -- am I running over?",
    "start": "4442570",
    "end": "4449120"
  },
  {
    "text": "Close to. Is that really right? I only have five minutes left.",
    "start": "4449120",
    "end": "4454480"
  },
  {
    "text": "We're not going to go at\nthe speed I had hoped. g is --",
    "start": "4454480",
    "end": "4459810"
  },
  {
    "text": "what does that mean? If we know that g contains g,\nand this is never going to be",
    "start": "4459810",
    "end": "4466210"
  },
  {
    "text": "equal to 0, then we know that\ng contains two elements at least: 0 and g.",
    "start": "4466210",
    "end": "4473480"
  },
  {
    "text": "And by the group axioms, g\ncontains g, g plus g, g",
    "start": "4473480",
    "end": "4485090"
  },
  {
    "text": "plus g plus g -- we can keep adding them. I'm going to call these the\ninteger multiples of g.",
    "start": "4485090",
    "end": "4493340"
  },
  {
    "text": "So this will be 1g, 2g, 3g.",
    "start": "4493340",
    "end": "4498940"
  },
  {
    "text": "That's what I mean when\nI write an integer in front of g -- I mean g plus itself, the\ninteger number of times.",
    "start": "4498940",
    "end": "4506560"
  },
  {
    "text": "And all those things, by the\ngroup properties, have to be in the group. All right?",
    "start": "4506560",
    "end": "4512680"
  },
  {
    "text": " Again, restrict this\nto finite. It's a finite cyclic group.",
    "start": "4512680",
    "end": "4518985"
  },
  {
    "text": " Then at some point,\nI have to --",
    "start": "4518985",
    "end": "4524960"
  },
  {
    "text": "this is all the elements\nof the group.  So at some point, I have\nto come along and",
    "start": "4524960",
    "end": "4531500"
  },
  {
    "text": "say that ng is 0. If just by --",
    "start": "4531500",
    "end": "4537760"
  },
  {
    "text": "when I say generator, the\nset generated by g is just 1g, 2g, 3g.",
    "start": "4537760",
    "end": "4544110"
  },
  {
    "text": "And that's got to be all the\nelements of the group, so n times g has got to be 0. ",
    "start": "4544110",
    "end": "4552559"
  },
  {
    "text": "And that means, without putting\ntoo fine a point on",
    "start": "4552560",
    "end": "4559130"
  },
  {
    "text": "it, that if n were 5, for\ninstance, the group has to consist of 0g, 1g, 2g, 3g, 4g,\nand then 5g is equal to 0.",
    "start": "4559130",
    "end": "4571719"
  },
  {
    "text": "So we call this 0g or 5g. ",
    "start": "4571720",
    "end": "4577820"
  },
  {
    "text": "And furthermore, the addition\ntable of the group, we can,",
    "start": "4577820",
    "end": "4582975"
  },
  {
    "text": "you know -- however, if we add 2 g's to 3\ng's, we're going to 5 g's,",
    "start": "4582976",
    "end": "4588380"
  },
  {
    "text": "which is 0. All right? So 2g plus 3g has got to\nbe 5 g's, which is 0g.",
    "start": "4588380",
    "end": "4595150"
  },
  {
    "text": " So this is what the addition\ntable of the",
    "start": "4595150",
    "end": "4601570"
  },
  {
    "text": "group has to look like. It's exactly the same, except\nwe just make a one-to-one",
    "start": "4601570",
    "end": "4607510"
  },
  {
    "text": "correspondence like that.",
    "start": "4607510",
    "end": "4613639"
  },
  {
    "text": "So the conclusion is a\nfinite cyclic group",
    "start": "4613640",
    "end": "4631250"
  },
  {
    "text": "with n elements -- I'll write the size of g by this\nabsolute value thing --",
    "start": "4631250",
    "end": "4638425"
  },
  {
    "start": "4638425",
    "end": "4644020"
  },
  {
    "text": "is isomorphic to the\nintegers mod-n --",
    "start": "4644020",
    "end": "4651770"
  },
  {
    "text": "this canonical cyclic group\nthat we started with -- must be isomorphic to Zn with\nthe isomorphism being given by",
    "start": "4651770",
    "end": "4663340"
  },
  {
    "text": "the one-to-one correspondence. ",
    "start": "4663340",
    "end": "4673090"
  },
  {
    "text": "i_g in the group corresponds\nto simply i in Zn, or 0 is",
    "start": "4673090",
    "end": "4683139"
  },
  {
    "text": "less than or equal to\ni is less than or equal to n minus 1. ",
    "start": "4683140",
    "end": "4690389"
  },
  {
    "text": "The addition rule is\nexactly the same. OK, so this is a pretty\nsweeping conclusion.",
    "start": "4690390",
    "end": "4698920"
  },
  {
    "text": "It says that really the only\nfinite cyclic group up to relabeling is Zn.",
    "start": "4698920",
    "end": "4705990"
  },
  {
    "text": "OK, so if you understand Zn,\nyou understand all finite cyclic groups. Just in a general group, we're\ngoing to have some element",
    "start": "4705990",
    "end": "4714120"
  },
  {
    "text": "which basically represents 1,\ncalled g, and its integer multiples, which represent\n2, 3, 4, and so forth.",
    "start": "4714120",
    "end": "4723470"
  },
  {
    "text": "But we can operate with\na group just as though it was Zn.",
    "start": "4723470",
    "end": "4730140"
  },
  {
    "text": "So it's easy to understand\nfinite cyclic groups. They all just look like this.",
    "start": "4730140",
    "end": "4736469"
  },
  {
    "text": "Question? Yeah. AUDIENCE: Is the generator\nunique? PROFESSOR: No, it's not.",
    "start": "4736470",
    "end": "4743955"
  },
  {
    "text": "No, it's not. Next time we'll start\nto talk about subgroups of Zn, for instance.",
    "start": "4743955",
    "end": "4752370"
  },
  {
    "text": " In the set of Z5 --",
    "start": "4752370",
    "end": "4761690"
  },
  {
    "text": "well, let me take this. All right. In Z5 --",
    "start": "4761690",
    "end": "4767610"
  },
  {
    "text": "let me not even do that. In Z5, 1 is the generator, but\nbecause 5 is a prime, 2 is a",
    "start": "4767610",
    "end": "4775160"
  },
  {
    "text": "generator, too. All right? Another way of writing.",
    "start": "4775160",
    "end": "4780610"
  },
  {
    "text": "Let's take a generator\nequals 2 in Z5. Then g equals 2, 2g equals 4.",
    "start": "4780610",
    "end": "4790370"
  },
  {
    "text": "3g equals 6, equals 1 mod-5. 4g equals 3.",
    "start": "4790370",
    "end": "4796360"
  },
  {
    "text": "And 5g, of course, equals\n5, which equals zero.",
    "start": "4796360",
    "end": "4801949"
  },
  {
    "text": "So 2 is also a generator. And, in fact, 3 and 4\nare also generators.",
    "start": "4801950",
    "end": "4807989"
  },
  {
    "text": "There are four generators. This is getting us right\ninto the number theory. ",
    "start": "4807990",
    "end": "4813940"
  },
  {
    "text": "OK. So no, g does not\nhave to be 1. g is just something that if\nyou take all its integer",
    "start": "4813940",
    "end": "4821869"
  },
  {
    "text": "multiples, you generate\nthe group. OK, I guess we stop there, and\nwe'll resume next time.",
    "start": "4821870",
    "end": "4831630"
  },
  {
    "start": "4831630",
    "end": "4843635"
  }
]