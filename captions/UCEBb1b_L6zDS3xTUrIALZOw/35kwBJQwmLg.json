[
  {
    "start": "4970",
    "end": "4970"
  },
  {
    "text": "In this video we\nwill try to segment",
    "start": "4970",
    "end": "7850"
  },
  {
    "text": "an MRI brain image of\na healthy patient using",
    "start": "7850",
    "end": "10700"
  },
  {
    "text": "hierarchical clustering.",
    "start": "10700",
    "end": "12860"
  },
  {
    "text": "Make sure that you are\nin the directory where",
    "start": "12860",
    "end": "14790"
  },
  {
    "text": "you saved the healthy.csv file.",
    "start": "14790",
    "end": "17340"
  },
  {
    "text": "We will be following\nthe exact same steps",
    "start": "17340",
    "end": "19730"
  },
  {
    "text": "we did in the previous video.",
    "start": "19730",
    "end": "21960"
  },
  {
    "text": "First, read in the data, and\ncall the data frame healthy.",
    "start": "21960",
    "end": "25609"
  },
  {
    "text": "Use the read.csv function to\nread in the healthy data set.",
    "start": "25610",
    "end": "29800"
  },
  {
    "text": "And remember that this\nhealthy data set consists",
    "start": "29800",
    "end": "31800"
  },
  {
    "text": "of a matrix of intensity\nvalues, so let's set the header",
    "start": "31800",
    "end": "36220"
  },
  {
    "text": "to false.",
    "start": "36220",
    "end": "38740"
  },
  {
    "text": "And now let's create\nthe healthy matrix using",
    "start": "38740",
    "end": "41610"
  },
  {
    "text": "the as.matrix function,\nwhich takes as an input",
    "start": "41610",
    "end": "45210"
  },
  {
    "text": "the healthy data frame.",
    "start": "45210",
    "end": "46170"
  },
  {
    "text": "And now let's\noutput the structure",
    "start": "48850",
    "end": "50570"
  },
  {
    "text": "of the healthy matrix.",
    "start": "50570",
    "end": "53030"
  },
  {
    "text": "And then we realize\nthat we have 566",
    "start": "53030",
    "end": "56989"
  },
  {
    "text": "by 646 pixel resolution\nfor our image.",
    "start": "56990",
    "end": "60760"
  },
  {
    "text": "So this MRI image is\nconsiderably larger",
    "start": "60760",
    "end": "64430"
  },
  {
    "text": "than the little flower\nimage that we saw,",
    "start": "64430",
    "end": "66690"
  },
  {
    "text": "and we worked with in\nthe previous two videos.",
    "start": "66690",
    "end": "70170"
  },
  {
    "text": "To see the MRI image, we\ncan use the image function",
    "start": "70170",
    "end": "73619"
  },
  {
    "text": "in R, which takes as an\ninput the healthy matrix.",
    "start": "73620",
    "end": "77360"
  },
  {
    "text": "And then let's\nturn our axes off.",
    "start": "77360",
    "end": "80560"
  },
  {
    "text": "And then use the\ngrey-scale color scheme.",
    "start": "80560",
    "end": "82810"
  },
  {
    "text": "So the color is equal to\ngrey, which shades a sequence",
    "start": "82810",
    "end": "86399"
  },
  {
    "text": "of values going from zero to\none, with the length of 256.",
    "start": "86400",
    "end": "91970"
  },
  {
    "text": "And now going to\nour graphics window,",
    "start": "91970",
    "end": "94450"
  },
  {
    "text": "we see that what we have\nis the T2-weighted MRI",
    "start": "94450",
    "end": "97680"
  },
  {
    "text": "imaging of a top\nsection of the brain.",
    "start": "97680",
    "end": "99880"
  },
  {
    "text": "And it shows\ndifferent substances,",
    "start": "99880",
    "end": "101630"
  },
  {
    "text": "such as the gray matter,\nthe white matter,",
    "start": "101630",
    "end": "104110"
  },
  {
    "text": "and the cerebrospinal fluid.",
    "start": "104110",
    "end": "107039"
  },
  {
    "text": "Now let us see if we can\nisolate these substances",
    "start": "107039",
    "end": "109190"
  },
  {
    "text": "via hierarchical clustering.",
    "start": "109190",
    "end": "112500"
  },
  {
    "text": "We first need to convert the\nhealthy matrix to a vector,",
    "start": "112500",
    "end": "114840"
  },
  {
    "text": "and let's call it\nhealthy vector.",
    "start": "114840",
    "end": "118320"
  },
  {
    "text": "And that is equal to S dot\nvector of the healthy matrix.",
    "start": "118320",
    "end": "122800"
  },
  {
    "text": "And now the first\nstep in performing",
    "start": "125320",
    "end": "127230"
  },
  {
    "text": "hierarchical clustering is\ncomputing the distance matrix.",
    "start": "127230",
    "end": "130669"
  },
  {
    "text": "So let's type distance equals\ndist of healthy vector.",
    "start": "130669",
    "end": "137060"
  },
  {
    "text": "And let's specify the\nmethod to be euclidean.",
    "start": "137060",
    "end": "139069"
  },
  {
    "text": "Oh, R gives us an error\nthat seems to tell us that",
    "start": "143530",
    "end": "147140"
  },
  {
    "text": "our vector is huge, and R\ncannot allocate enough memory.",
    "start": "147140",
    "end": "151110"
  },
  {
    "text": "Well let us see how\nbig is our vector.",
    "start": "151110",
    "end": "153740"
  },
  {
    "text": "So we're going to go\nand use the structure",
    "start": "153740",
    "end": "156930"
  },
  {
    "text": "function over the\nhealthy vector,",
    "start": "156930",
    "end": "159349"
  },
  {
    "text": "and let's see what we obtain.",
    "start": "159350",
    "end": "163170"
  },
  {
    "text": "Hm.",
    "start": "163170",
    "end": "163690"
  },
  {
    "text": "The healthy vector\nhas 365,636 elements.",
    "start": "163690",
    "end": "169070"
  },
  {
    "text": "Let's call this number n.",
    "start": "169070",
    "end": "170450"
  },
  {
    "text": "And remember, from\nour previous video,",
    "start": "170450",
    "end": "173800"
  },
  {
    "text": "that for R to calculate\nthe pairwise distances,",
    "start": "173800",
    "end": "176579"
  },
  {
    "text": "it would actually need to\ncalculate n*(n-1)/2 and then",
    "start": "176579",
    "end": "183819"
  },
  {
    "text": "store them in the\ndistance matrix.",
    "start": "183820",
    "end": "186010"
  },
  {
    "text": "Let's see how big\nthis number is.",
    "start": "186010",
    "end": "188799"
  },
  {
    "text": "Wow.",
    "start": "188800",
    "end": "189600"
  },
  {
    "text": "Of course R would complain.",
    "start": "189600",
    "end": "191820"
  },
  {
    "text": "It's 67 billion\nvalues that we're",
    "start": "191820",
    "end": "194320"
  },
  {
    "text": "asking R to store in a matrix.",
    "start": "194320",
    "end": "197430"
  },
  {
    "text": "The bad news now is that\nwe cannot use hierarchical",
    "start": "197430",
    "end": "200930"
  },
  {
    "text": "clustering.",
    "start": "200930",
    "end": "202439"
  },
  {
    "text": "Is there any other solution?",
    "start": "202440",
    "end": "204610"
  },
  {
    "text": "Well, we have seen\nin lecture two",
    "start": "204610",
    "end": "206750"
  },
  {
    "text": "that another clustering\nmethod is k-means.",
    "start": "206750",
    "end": "210300"
  },
  {
    "text": "Let us review it\nfirst, and see if it",
    "start": "210300",
    "end": "212160"
  },
  {
    "text": "could work on our\nhigh resolution image.",
    "start": "212160",
    "end": "215620"
  },
  {
    "text": "The k-means clustering\nalgorithm aims",
    "start": "215620",
    "end": "217799"
  },
  {
    "text": "at partitioning the\ndata into k clusters,",
    "start": "217800",
    "end": "220720"
  },
  {
    "text": "in a way that each\ndata point belongs",
    "start": "220720",
    "end": "222829"
  },
  {
    "text": "to the cluster whose mean\nis the nearest to it.",
    "start": "222829",
    "end": "226209"
  },
  {
    "text": "Let's go over the\nalgorithm step-by-step.",
    "start": "226210",
    "end": "229740"
  },
  {
    "text": "In this example we\nhave five data points.",
    "start": "229740",
    "end": "232560"
  },
  {
    "text": "The first step is to specify\nthe number of clusters.",
    "start": "232560",
    "end": "235610"
  },
  {
    "text": "And suppose we wish to find\ntwo clusters, so set k=2.",
    "start": "235610",
    "end": "240410"
  },
  {
    "text": "Then we start by randomly\ngrouping the data",
    "start": "240410",
    "end": "242990"
  },
  {
    "text": "into two clusters.",
    "start": "242990",
    "end": "244450"
  },
  {
    "text": "For instance, three\npoints in the red cluster,",
    "start": "244450",
    "end": "247140"
  },
  {
    "text": "and the remaining two\npoints in the grey cluster.",
    "start": "247140",
    "end": "250569"
  },
  {
    "text": "The next step is to compute\nthe cluster means or centroids.",
    "start": "250570",
    "end": "254360"
  },
  {
    "text": "Let's first compute the\nmean of the red cluster,",
    "start": "254360",
    "end": "257310"
  },
  {
    "text": "and then the mean of the grey\ncluster is simply the midpoint.",
    "start": "257310",
    "end": "261120"
  },
  {
    "text": "Now remember that the\nk-means clustering algorithm",
    "start": "261120",
    "end": "264010"
  },
  {
    "text": "tries to cluster points\naccording to the nearest mean.",
    "start": "264010",
    "end": "267790"
  },
  {
    "text": "But this red point over here\nseems to be closer to the mean",
    "start": "267790",
    "end": "271260"
  },
  {
    "text": "of the grey cluster, then to\nthe mean of the red cluster",
    "start": "271260",
    "end": "274290"
  },
  {
    "text": "to which it was assigned\nin the previous step.",
    "start": "274290",
    "end": "277530"
  },
  {
    "text": "So intuitively, the next\nstep in the k-means algorithm",
    "start": "277530",
    "end": "280850"
  },
  {
    "text": "is to re-assign the data points\nto the closest cluster mean.",
    "start": "280850",
    "end": "285220"
  },
  {
    "text": "As a result, now this red point\nshould be in the grey cluster.",
    "start": "285220",
    "end": "289920"
  },
  {
    "text": "Now that we moved one point\nfrom the red cluster over",
    "start": "289920",
    "end": "292710"
  },
  {
    "text": "to the grey cluster, we\nneed to update the means.",
    "start": "292710",
    "end": "295900"
  },
  {
    "text": "This is exactly the next step\nin the k-means algorithm.",
    "start": "295900",
    "end": "299139"
  },
  {
    "text": "So let's recompute the\nmean of the red cluster,",
    "start": "299140",
    "end": "303340"
  },
  {
    "text": "and then re-compute the\nmean of the grey cluster.",
    "start": "303340",
    "end": "306970"
  },
  {
    "text": "Now we go back to Step 4.",
    "start": "306970",
    "end": "309340"
  },
  {
    "text": "Is there any point\nhere that seems",
    "start": "309340",
    "end": "311060"
  },
  {
    "text": "to be cluster to a cluster mean\nthat it does not belong to?",
    "start": "311060",
    "end": "314850"
  },
  {
    "text": "If so, we need to re-assign\nit to the other cluster.",
    "start": "314850",
    "end": "318700"
  },
  {
    "text": "However, in this\ncase, all points",
    "start": "318700",
    "end": "320500"
  },
  {
    "text": "are closest to their cluster\nmean, so the algorithm is done,",
    "start": "320500",
    "end": "324000"
  },
  {
    "text": "and we can stop.",
    "start": "324000",
    "end": "326310"
  },
  {
    "text": "In the next video, we will\nimplement the k-means algorithm",
    "start": "326310",
    "end": "328800"
  },
  {
    "text": "in R to try to segment\nthe MRI brain image.",
    "start": "328800",
    "end": "332470"
  }
]