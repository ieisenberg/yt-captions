[
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "5928"
  },
  {
    "start": "5928",
    "end": "13045"
  },
  {
    "text": "YAEL KALAI: OK. So should we continue? AUDIENCE: [INAUDIBLE]",
    "start": "13045",
    "end": "18140"
  },
  {
    "text": "YAEL KALAI: OK. So where are we? So we did a little\ndetour to zero knowledge,",
    "start": "18140",
    "end": "24680"
  },
  {
    "text": "and we even showed a\nzero-knowledge proof. Now, I know I did it\nvery, very hand-wavy. I actually didn't plan to\nreally teach zero knowledge,",
    "start": "24680",
    "end": "31770"
  },
  {
    "text": "even though it's hard not to\nbecause it's so beautiful. But what I did want to--",
    "start": "31770",
    "end": "37070"
  },
  {
    "text": "the reason I'm\npointing out this-- I mean, we will use it. We will touch zero knowledge\nsome more next time.",
    "start": "37070",
    "end": "43890"
  },
  {
    "text": "But this protocol is at\nleast a soundness 1/2. Now let's see what happens if\nwe apply Fiat-Shamir to it.",
    "start": "43890",
    "end": "52860"
  },
  {
    "text": "And let's say we apply even the\nrandom oracle model, Fiat Shamir in the random oracle model. Because remember, we started\nby asking-- the Fiat-Shamir,",
    "start": "52860",
    "end": "60590"
  },
  {
    "text": "is it sound? We don't know. And then we said, you know what? But if instead of\nactually a hash function, you use random oracle-- like,\na completely random function--",
    "start": "60590",
    "end": "69840"
  },
  {
    "text": "then of course it\nshould be sound. Because, intuitively,\nwhat does it matter if the prover is\ntalking with the verifier",
    "start": "69840",
    "end": "76520"
  },
  {
    "text": "or is talking with\nthe hash function? So if it was sound when he\nwas talking to the verifier--",
    "start": "76520",
    "end": "82469"
  },
  {
    "text": "the verifier sends\nhim random bits-- it should be sound when you're\ntalking to the hash function because the hash function\nalso sends a random bit--",
    "start": "82470",
    "end": "90409"
  },
  {
    "text": "almost, almost true, but not. Why? Let's look at this example.",
    "start": "90410",
    "end": "96020"
  },
  {
    "text": "I'm going to tell you\nhow I can easily cheat in the random oracle model. So I have a G. It's\nnot in the language.",
    "start": "96020",
    "end": "102990"
  },
  {
    "text": "It does not have a\nHamiltonian cycle. What I'm going to do-- I'm going to hope for the best.",
    "start": "102990",
    "end": "110689"
  },
  {
    "text": "What do I mean,\nhope for the best? I'm going to guess your b. I'm going to say, you know what?",
    "start": "110690",
    "end": "116040"
  },
  {
    "text": "Let me try to guess what\nthe b of the hash function's going to be. I don't know. It's a random function.",
    "start": "116040",
    "end": "121530"
  },
  {
    "text": "Let me guess it's 0. So because it's 0, I\nknow I'm going to be asked to open on the cycle.",
    "start": "121530",
    "end": "128199"
  },
  {
    "text": "So I'm going to commit\nto a random cycle. This is some string, alpha.",
    "start": "128199",
    "end": "134049"
  },
  {
    "text": "I'm going to go to my hash\nfunction, give him x and alpha, my G and alpha. And I get back a bit b.",
    "start": "134050",
    "end": "140190"
  },
  {
    "text": "If it's 0, huh. I open, I'm happy. If it's not 0, I'll try again.",
    "start": "140190",
    "end": "147510"
  },
  {
    "text": "Again, I'm going to\nchoose a random-- I can always choose\n0, or I can just choose kind of a random bit.",
    "start": "147510",
    "end": "154239"
  },
  {
    "text": "If it's 1, I'm going to-- I can commit to the all 0's. Because anyway, I\njust need to open 0's.",
    "start": "154240",
    "end": "160960"
  },
  {
    "text": "I'll just commit to the all 0's. And then when you\nopen, I give you pi, and I'll open the\nnon-edges, seeing it's 0.",
    "start": "160960",
    "end": "167880"
  },
  {
    "text": "The point is I can rerun you. In the actual protocol, yeah,\nwith probability 1/2, I win.",
    "start": "167880",
    "end": "179070"
  },
  {
    "text": "But I can't tell\nyou, OK, let's try. Oh, didn't work,\nlet me try again.",
    "start": "179070",
    "end": "184835"
  },
  {
    "text": "You say no, you failed. You don't get to try again. I know that if you try again,\nagain, eventually, you'll win.",
    "start": "184835",
    "end": "191140"
  },
  {
    "text": "So you got one try. But with a random oracle, I have\nthe oracle, so I can abuse it.",
    "start": "191140",
    "end": "197950"
  },
  {
    "text": "So I can try many, many times. And that's how I break.",
    "start": "197950",
    "end": "203250"
  },
  {
    "text": "OK, so what did we learn? Let's go back to the\nrandom oracle model.",
    "start": "203250",
    "end": "209520"
  },
  {
    "text": "So first, it's not\nsecure or not sound",
    "start": "209520",
    "end": "219090"
  },
  {
    "text": "if the protocol has\nnon-negligible soundness.",
    "start": "219090",
    "end": "228396"
  },
  {
    "text": " If you can cheat with\nprobability non-negligible,",
    "start": "228396",
    "end": "236900"
  },
  {
    "text": "you're going to try,\ntry, try until it works. And then you present\nthat as a proof.",
    "start": "236900",
    "end": "244930"
  },
  {
    "text": "So that was Leo's question. And the answer is,\nit's not sound.",
    "start": "244930",
    "end": "250069"
  },
  {
    "text": "OK. So then you say, fine. Is it sound if the protocol\nhas negligible soundness?",
    "start": "250070",
    "end": "260709"
  },
  {
    "text": "And the answer is no. OK, so also not\nsound if protocol",
    "start": "260709",
    "end": "268300"
  },
  {
    "text": "has negligible soundness. ",
    "start": "268300",
    "end": "274620"
  },
  {
    "text": "OK. That seems a bit sad, but let\nme give you the counterexample.",
    "start": "274620",
    "end": "280630"
  },
  {
    "text": "So let's go back to our\nbeautiful zero-knowledge",
    "start": "280630",
    "end": "285850"
  },
  {
    "text": "protocol here. And it has only soundness 1/2. That was kind of the\ncomplaint, right?",
    "start": "285850",
    "end": "291830"
  },
  {
    "text": "Fine. Let me make the soundness\nnegligible, even 2 to the minus lambda for you.",
    "start": "291830",
    "end": "297520"
  },
  {
    "text": "OK, how? Let's repeat it\nsequentially lambda times. OK, so we have a G. I send you\na commitment of, supposedly,",
    "start": "297520",
    "end": "307780"
  },
  {
    "text": "a random cycle. You send me a bit,\nI open accordingly. But then you're like, OK,\nOK, wait, I'm not convinced.",
    "start": "307780",
    "end": "313700"
  },
  {
    "text": "Let's try again. Fine. I send you another commitment. You send me another random bit. I reveal.",
    "start": "313700",
    "end": "320680"
  },
  {
    "text": "Then you say, no, no,\nno, still not happy. Let's do it again. And we do it lambda times.",
    "start": "320680",
    "end": "326830"
  },
  {
    "text": "Now if all the time, every\nsingle time, I'm accepted,",
    "start": "326830",
    "end": "333310"
  },
  {
    "text": "you're pretty convinced. Now, the probability that I\ncan cheat is 1/2 to the lambda because every time\nwith probability 1/2,",
    "start": "333310",
    "end": "338587"
  },
  {
    "text": "you catch me if I did\nall of them correctly. So it's very negligible. It's exponentially small.",
    "start": "338587",
    "end": "344710"
  },
  {
    "text": "Now, I want to argue, I can\ncheat in the random oracle model. How? Exactly the same thing.",
    "start": "344710",
    "end": "350450"
  },
  {
    "text": "How do I cheat? First, do not have alpha 1, beta\n1, gamma 1, alpha 2, beta 2,",
    "start": "350450",
    "end": "357270"
  },
  {
    "text": "gamma 2, alpha 3, da, da, da. Let's start. I'm the cheating prover.",
    "start": "357270",
    "end": "363680"
  },
  {
    "text": "I try. I guess b1 is going to be 0. Alpha 1, no, fine.",
    "start": "363680",
    "end": "369420"
  },
  {
    "text": "I work hard, I get my\nalpha 1, beta 1, gamma 1. Good. Now alpha 2-- same thing.",
    "start": "369420",
    "end": "375260"
  },
  {
    "text": "I guess beta 2. But I keep the first transcript. I don't toss it away. I keep the first transcript.",
    "start": "375260",
    "end": "380930"
  },
  {
    "text": "And then I guess beta 2. If I guess correctly, good. If I didn't, I'm going\nto redo, da, da, da.",
    "start": "380930",
    "end": "386760"
  },
  {
    "text": "And after a constant\nnumber of times, I'm going to get the second\ntranscript-- probably after twice, but whatever.",
    "start": "386760",
    "end": "392550"
  },
  {
    "text": "And then I always\nkeep the first-- I don't know-- as many\ntranscripts as I had,",
    "start": "392550",
    "end": "399690"
  },
  {
    "text": "and I extend it. So I can convince you. Yeah?",
    "start": "399690",
    "end": "405180"
  },
  {
    "text": "AUDIENCE: What if I do\nparallel repetition things? YAEL KALAI: Ah, very\ngood, very good. So the question is, what\nabout parallel repetition?",
    "start": "405180",
    "end": "413450"
  },
  {
    "text": "OK. Yeah? AUDIENCE: This\ngradual thing is fine if you hash the entire\nprevious transcript.",
    "start": "413450",
    "end": "419539"
  },
  {
    "text": "Like-- AUDIENCE: No, because\nyou can just-- YAEL KALAI: No. AUDIENCE: No? AUDIENCE: You can\njust get a new-- YAEL KALAI: Good. AUDIENCE: --commitment\nuntil you're happy.",
    "start": "419540",
    "end": "425160"
  },
  {
    "text": "AUDIENCE: Ah,\nthat's [INAUDIBLE]. YAEL KALAI: [LAUGHS] Yeah. So let me emphasize, actually--",
    "start": "425160",
    "end": "432200"
  },
  {
    "text": "it's a good point\nthat you're making. Note, when we apply Fiat-Shamir,\nI'm applying the hash.",
    "start": "432200",
    "end": "443280"
  },
  {
    "text": "And what I said is, oh, I\ndo the same exact attack. I get one protocol.",
    "start": "443280",
    "end": "448980"
  },
  {
    "text": "Like, I get one transcript,\nanother, da, da, da, lambda transcript, and I'm done. Note that every time, I hash\neverything from the beginning.",
    "start": "448980",
    "end": "457260"
  },
  {
    "text": "Like, the hash is an alpha\n1, beta 1, gamma 1, alpha 2, beta 2-- but so what?",
    "start": "457260",
    "end": "463070"
  },
  {
    "text": "I'm fine. Let's say I get the first-- let's say three\ntranscripts worked out.",
    "start": "463070",
    "end": "469230"
  },
  {
    "text": "So I have alpha 1, beta 1, gamma\n1, alpha 2, beta, and alpha 3. Now I'm in the fourth. I guess beta 4.",
    "start": "469230",
    "end": "476720"
  },
  {
    "text": "I choose alpha 4 accordingly. I hash everything\nfrom the beginning, like the Fiat-Shamir hash,\nand I hope to see my beta 4.",
    "start": "476720",
    "end": "483680"
  },
  {
    "text": "I see it, I'm happy. I can compute gamma\n4, and I continue. I don't see it, I\ntry alpha 3 again.",
    "start": "483680",
    "end": "491120"
  },
  {
    "text": "I don't hash my first two that\nI already did successfully. I, every time, extend. And the point is, I can always\nextend in constant overhead",
    "start": "491120",
    "end": "499307"
  },
  {
    "text": "kind of thing. Yeah? AUDIENCE: Shouldn't that be\nhard for this bounded power?",
    "start": "499307",
    "end": "504530"
  },
  {
    "text": "YAEL KALAI: So the runtime-- no. OK, so the question-- look,\nhow long does it take-- I'm a bounded, cheating prover.",
    "start": "504530",
    "end": "509940"
  },
  {
    "text": "How long does it take me? Every transcript, it takes me--",
    "start": "509940",
    "end": "515089"
  },
  {
    "text": " on average, I do constant number\nof tries, an average of two",
    "start": "515090",
    "end": "521419"
  },
  {
    "text": "tries. So it's actually\nquite efficient. I can generate my\ntranscript quite fast.",
    "start": "521419",
    "end": "528540"
  },
  {
    "text": "Because how do I generate it? Again, I have G.\nIt may not have.",
    "start": "528540",
    "end": "533920"
  },
  {
    "text": "It may have, it may not. It doesn't have a\nHamiltonian cycle. I don't even know if it\nhas a Hamiltonian cycle, neither do I care, because\nI'm never going to use it.",
    "start": "533920",
    "end": "540670"
  },
  {
    "text": "What do I do?  I guess beta 1 randomly.",
    "start": "540670",
    "end": "547779"
  },
  {
    "text": "Very efficiently, I commit. Because if it's 0, I just\ncommit to a random cycle.",
    "start": "547780",
    "end": "553300"
  },
  {
    "text": "If it's 1, I commit to all 0's. That's very easy. And then I apply the hash. With probability 1/2, I got\nthe beta 1 that I chose.",
    "start": "553300",
    "end": "561339"
  },
  {
    "text": "And then I can very easily\ncompute my answer, gamma 1,",
    "start": "561340",
    "end": "566800"
  },
  {
    "text": "which is just a trivial opening. And I only need to repeat it--",
    "start": "566800",
    "end": "572220"
  },
  {
    "text": "like, it's only bad\nwith probability 1/2. So, overall, I won't need\nto repeat the same one too",
    "start": "572220",
    "end": "577410"
  },
  {
    "text": "many times. AUDIENCE: So that's where\nthe non-soundness comes from,",
    "start": "577410",
    "end": "584250"
  },
  {
    "text": "from possibly equal\nsign [INAUDIBLE]? YAEL KALAI: That is where? AUDIENCE: It's [INAUDIBLE]-- YAEL KALAI: That's\nwhy this is not sound.",
    "start": "584250",
    "end": "590948"
  },
  {
    "text": "Exactly. So I have negligible soundness,\nbut still it's not sound. Exactly. ",
    "start": "590948",
    "end": "598079"
  },
  {
    "text": "OK, so this is bad. But that's the only time\nwhen it's not sound.",
    "start": "598080",
    "end": "603250"
  },
  {
    "text": "That's it. Everything else is sound. So that goes to the question\nabout parallel repetition. So now let me actually\ngive you the theorem.",
    "start": "603250",
    "end": "611850"
  },
  {
    "text": "Let's see. ",
    "start": "611850",
    "end": "641070"
  },
  {
    "text": "So the theorem is that the\nFiat-Shamir paradigm is sound--",
    "start": "641070",
    "end": "654610"
  },
  {
    "text": "finally is sound-- in the random\noracle model if the underlying",
    "start": "654610",
    "end": "663940"
  },
  {
    "text": "protocol is--",
    "start": "663940",
    "end": "669340"
  },
  {
    "text": "first, it has negligible\nsoundness and constant round.",
    "start": "669340",
    "end": "680730"
  },
  {
    "start": "680730",
    "end": "686709"
  },
  {
    "text": "So if it has\nnegligible soundness and it has constant number\nof rounds, then it's sound.",
    "start": "686710",
    "end": "695360"
  },
  {
    "text": "Before, I got\nnegligible soundness by repeating-- getting\nmany, many, many rounds.",
    "start": "695360",
    "end": "700425"
  },
  {
    "text": " Yeah? AUDIENCE: In public\n[INAUDIBLE]--",
    "start": "700425",
    "end": "705640"
  },
  {
    "text": "YAEL KALAI: Oh. AUDIENCE: --we run-- YAEL KALAI: Yeah. Otherwise, you\ncan't even apply-- if the public coin.",
    "start": "705640",
    "end": "713890"
  },
  {
    "text": "Yeah. If it's not public coin, you\ncan't even-- like, completeness, it doesn't hold.",
    "start": "713890",
    "end": "719110"
  },
  {
    "text": "So I'm always talking about\npublic coin protocols.",
    "start": "719110",
    "end": "724990"
  },
  {
    "text": "But let me say, this is\nnot a characterization. This is not an if and only if. We do have protocols\nwith many rounds",
    "start": "724990",
    "end": "734020"
  },
  {
    "text": "for which the random\noracle model does apply-- in particular, GKR.",
    "start": "734020",
    "end": "740200"
  },
  {
    "text": "So GKR is many rounds. So can we reduce\ninteraction in GKR? And the answer is, yes,\nwe can, even though it",
    "start": "740200",
    "end": "747220"
  },
  {
    "text": "has many, many rounds. And the reason why we can do\nit is because it's sound also--",
    "start": "747220",
    "end": "754870"
  },
  {
    "text": "or, more generally, if the\nunderlying protocol has what's",
    "start": "754870",
    "end": "769190"
  },
  {
    "text": "called round-by-round soundness. I'll define it later,\nmaybe not today.",
    "start": "769190",
    "end": "775435"
  },
  {
    "start": "775435",
    "end": "782120"
  },
  {
    "text": "And any such protocol has\nround-by-round soundness. But this is more general.",
    "start": "782120",
    "end": "788509"
  },
  {
    "text": "And GKR has\nround-by-round soundness. So this is kind\nof in parentheses",
    "start": "788510",
    "end": "793670"
  },
  {
    "text": "because we're not going\nto talk about it today. Maybe we will.",
    "start": "793670",
    "end": "799230"
  },
  {
    "text": "We'll see. OK, but let me first prove this.",
    "start": "799230",
    "end": "805580"
  },
  {
    "text": "OK. So why is it--",
    "start": "805580",
    "end": "811524"
  },
  {
    "text": "let me do it here. ",
    "start": "811525",
    "end": "822950"
  },
  {
    "text": "OK.  So let's do the proof.",
    "start": "822950",
    "end": "829279"
  },
  {
    "text": "So take a protocol, a\npublic coin protocol with constant number of rounds\nthat has negligible soundness.",
    "start": "829280",
    "end": "835529"
  },
  {
    "text": "And I'm going to\nprove to you that it's sound in the random oracle\nwhen I apply Fiat-Shamir on the random oracle model.",
    "start": "835530",
    "end": "841819"
  },
  {
    "text": "OK, So fix any protocol. ",
    "start": "841820",
    "end": "849920"
  },
  {
    "text": "Let's call it P, V. Let's\nbegin-- let's assume-- just for simplicity of notation.",
    "start": "849920",
    "end": "855840"
  },
  {
    "text": "You'll see how it extends-- that it's three messages. So suppose PV has three messages\nand negligible soundness.",
    "start": "855840",
    "end": "872010"
  },
  {
    "text": " We'll later see how to\nextend it to more rounds.",
    "start": "872010",
    "end": "879899"
  },
  {
    "text": "So P, V-- let's say\nthere are some x. The question is in\nthe language or not.",
    "start": "879900",
    "end": "885779"
  },
  {
    "text": "And they both have-- so before the hash,\nthere's like, alpha. He gets back a random beta.",
    "start": "885780",
    "end": "892720"
  },
  {
    "text": "He gets back gamma. And he chooses to accept or not. OK.",
    "start": "892720",
    "end": "897820"
  },
  {
    "text": "Now suppose there exists a\npoly-size adversary P* that",
    "start": "897820",
    "end": "912270"
  },
  {
    "text": "cheats. I want to argue\nthat then it means I can cheat in the original,\ninteractive protocol. So suppose there's P* and x not\nin L such that the probability",
    "start": "912270",
    "end": "927810"
  },
  {
    "text": "that P* with H and V with H--",
    "start": "927810",
    "end": "934720"
  },
  {
    "text": "this is kind of\nthe Fiat-Shamir--  it accepts with probability\nat least, let's say, epsilon.",
    "start": "934720",
    "end": "944670"
  },
  {
    "text": "I'm going to argue that then I\ncan cheat in the original scheme",
    "start": "944670",
    "end": "950820"
  },
  {
    "text": "with probability a little less\nthan epsilon but not too small. ",
    "start": "950820",
    "end": "957290"
  },
  {
    "text": "OK. So if there exists a\ncheating prover that can cheat in the\nFiat-Shamir version,",
    "start": "957290",
    "end": "962350"
  },
  {
    "text": "but in the random\noracle model, then I can use them to cheat\nin the original scheme. ",
    "start": "962350",
    "end": "970259"
  },
  {
    "text": "OK, so how? So first, note, because we're\na negligible probability,",
    "start": "970260",
    "end": "975970"
  },
  {
    "text": "this is large. So beta is public coin. It's random in-- I don't know-- let's call it k.",
    "start": "975970",
    "end": "981420"
  },
  {
    "text": "But k's super-logarithmic. Because there are only\npolynomially many options,",
    "start": "981420",
    "end": "986920"
  },
  {
    "text": "on one of them, I can cheat. So this is not\nstatistical sound--",
    "start": "986920",
    "end": "993750"
  },
  {
    "text": "sorry. Erase what I said. Let me try again. So these protocols-- on\none of them, I can cheat.",
    "start": "993750",
    "end": "1005130"
  },
  {
    "text": "Like, for any\nalpha, I can always find a beta for\nwhich I can cheat. Otherwise, if I can't\ncheat on any beta,",
    "start": "1005130",
    "end": "1010290"
  },
  {
    "text": "there's no point in doing\ninteraction to begin with. I'll just give you\nalpha and a fixed bit.",
    "start": "1010290",
    "end": "1016890"
  },
  {
    "text": "I'll give you gamma,\nand that's it. So in these protocols,\nthere's always betas for which I can cheat on.",
    "start": "1016890",
    "end": "1023390"
  },
  {
    "text": "And therefore, because I\nhave negligible soundness, beta must come from a\nsuper-polynomial universe.",
    "start": "1023390",
    "end": "1029310"
  },
  {
    "text": "If it's only polynomial,\nthen I can play the same game that I did before, kind\nof hope to succeed.",
    "start": "1029310",
    "end": "1035339"
  },
  {
    "text": "It's like a-- too bad. In Hebrew, we have a very\ngood saying for this.",
    "start": "1035339",
    "end": "1040980"
  },
  {
    "text": "Like, when you cheat, the hope\nof not being caught-- there's a word for it.",
    "start": "1040980",
    "end": "1046010"
  },
  {
    "text": "[LAUGHTER] But yeah, Americans are too-- they don't cheat, so they\ndon't have words for this.",
    "start": "1046010",
    "end": "1051740"
  },
  {
    "text": "AUDIENCE: Would be\nlike a con or some-- YAEL KALAI: What? AUDIENCE: Like a con? It would be like-- YAEL KALAI: Is that a word?",
    "start": "1051740",
    "end": "1057100"
  },
  {
    "text": "OK. AUDIENCE: Yeah. YAEL KALAI: Con? AUDIENCE: As in a\nconfidence man or like-- YAEL KALAI: Oh, I see.",
    "start": "1057100",
    "end": "1062220"
  },
  {
    "text": "AUDIENCE: --you are\nlying to someone. YAEL KALAI: Exactly. AUDIENCE: Like-- YAEL KALAI: Yeah. AUDIENCE: Could not be con. YAEL KALAI: Exactly, exactly.",
    "start": "1062220",
    "end": "1067500"
  },
  {
    "text": "Yeah. OK. So suppose there exists--",
    "start": "1067500",
    "end": "1072593"
  },
  {
    "text": "AUDIENCE: Fake it\ntil you make it. YAEL KALAI: Fake it til\nyou make it, exactly. Totally. [LAUGHTER] OK, so suppose there\nexists a cheating prover.",
    "start": "1072593",
    "end": "1080490"
  },
  {
    "text": "Now, how does he cheat? Let's see what this prover does. This prover gives-- so this\nprover outputs some alpha, beta,",
    "start": "1080490",
    "end": "1092799"
  },
  {
    "text": "and gamma, like a transcript. And this beta is\nhash of x and alpha.",
    "start": "1092800",
    "end": "1102179"
  },
  {
    "text": "That's how he cheats. That's a valid transcript. That's a transcript that will-- and such that the\noriginal verifier accepts.",
    "start": "1102180",
    "end": "1110500"
  },
  {
    "text": "So in the Fiat-Shamir, the\nprover, he just outputs this. And the verifier checks that\nbeta is indeed H of x and alpha",
    "start": "1110500",
    "end": "1118630"
  },
  {
    "text": "and that this is a\nvalid transcript. OK. Now, the cheating prover,\nhe sends oracle queries",
    "start": "1118630",
    "end": "1128580"
  },
  {
    "text": "to his hash function. Now, this prover is bounded. He's polynomially bounded.",
    "start": "1128580",
    "end": "1135210"
  },
  {
    "text": "Let's say he sends-- so suppose that P* sends q\nqueries to the oracle, to H.",
    "start": "1135210",
    "end": "1158530"
  },
  {
    "text": "He's bounded, so he\nruns in poly time. So what does he do? He has oracle access. He is trying to cheat for an x.",
    "start": "1158530",
    "end": "1165669"
  },
  {
    "text": "Now, he can ask his\noracle, OK, here's alpha 1. Give me beta 1. Here's alpha 2.",
    "start": "1165670",
    "end": "1171230"
  },
  {
    "text": "Give me beta 2. He says at most\npolynomially many queries because he's\npolynomially bounded.",
    "start": "1171230",
    "end": "1176799"
  },
  {
    "text": "So there's some polynomial,\nq, queries that he sends to h.",
    "start": "1176800",
    "end": "1182720"
  },
  {
    "text": "And let's denote them by\nalpha 1 up to alpha q. ",
    "start": "1182720",
    "end": "1189440"
  },
  {
    "text": "OK. Now, first thing, note\nthat the probability",
    "start": "1189440",
    "end": "1194860"
  },
  {
    "text": "that he succeeds in\ngenerating alpha, beta, gamma so that alpha is not one of\nthe queries is negligible.",
    "start": "1194860",
    "end": "1204280"
  },
  {
    "text": "If he didn't ask, he\ndoesn't know what beta is. The only way he gives\nbeta, which is the right H,",
    "start": "1204280",
    "end": "1210350"
  },
  {
    "text": "is by asking. He has no idea what beta is. And so if he didn't ask, he can\nguess with probability, like,",
    "start": "1210350",
    "end": "1216760"
  },
  {
    "text": "1/2 to the k. OK. ",
    "start": "1216760",
    "end": "1223030"
  },
  {
    "text": "Let me-- maybe I'll go\nhere, continue here. So first thing, note, the\nprobability that alpha,",
    "start": "1223030",
    "end": "1235509"
  },
  {
    "text": "beta, gamma are\naccepting with x--",
    "start": "1235510",
    "end": "1241330"
  },
  {
    "text": "so meaning the\nverifier accepts them-- and alpha is not alpha 1 up to--",
    "start": "1241330",
    "end": "1250070"
  },
  {
    "text": "it's not one of them-- this probability is negligible. ",
    "start": "1250070",
    "end": "1256510"
  },
  {
    "text": "And this is because k--  yeah, it's something\nlike, 1/2 to the k.",
    "start": "1256510",
    "end": "1263340"
  },
  {
    "text": "AUDIENCE: The x\nover [INAUDIBLE]? YAEL KALAI: What? AUDIENCE: x alpha-- YAEL KALAI: Ah, sorry, alpha q.",
    "start": "1263340",
    "end": "1268810"
  },
  {
    "text": "And, sorry, what did you say? AUDIENCE: Like, x alpha has\nto be one of the queries, not just alpha. YAEL KALAI: Oh, no.",
    "start": "1268810",
    "end": "1276429"
  },
  {
    "text": "Sorry. Oh, x alpha, yeah. Right. But alpha needs to be\none of the alpha 1's.",
    "start": "1276430",
    "end": "1282350"
  },
  {
    "text": "Sorry, yeah. So, OK, he sends kind of x comma\nalpha 1 up to x comma alpha k.",
    "start": "1282350",
    "end": "1290310"
  },
  {
    "text": "That's kind of what he sends. I mean, he can send\nother ones but then--",
    "start": "1290310",
    "end": "1295799"
  },
  {
    "text": "AUDIENCE: They shouldn't help. YAEL KALAI: Yeah, it\nshouldn't help him. So, OK, it should be one of the\nqueries he asks, first of all.",
    "start": "1295800",
    "end": "1301880"
  },
  {
    "text": "Because if he didn't ask that,\nhe has no idea what the beta is. So he guesses the beta correctly\nwith probability 1/2 to the k.",
    "start": "1301880",
    "end": "1308220"
  },
  {
    "text": "That's negligible. OK. So this means that if he\nsucceeds with probability",
    "start": "1308220",
    "end": "1313280"
  },
  {
    "text": "epsilon that's non-negligible\nalmost with this probability, or with probability\nepsilon minus negligible,",
    "start": "1313280",
    "end": "1319010"
  },
  {
    "text": "he doesn't only succeed,\nbut he succeeds with alpha that he queried. ",
    "start": "1319010",
    "end": "1326419"
  },
  {
    "text": "So now, because I know that\nhe succeeds with alpha that he",
    "start": "1326420",
    "end": "1332420"
  },
  {
    "text": "queried, I'm going\nto use him to cheat in the interactive protocol.",
    "start": "1332420",
    "end": "1338059"
  },
  {
    "text": "Again, note, I'm really abusing\nthe random oracle model.",
    "start": "1338060",
    "end": "1343100"
  },
  {
    "text": "Because I'm assuming\nthat the verifier, really, the only way he\ninteracts with the oracle",
    "start": "1343100",
    "end": "1348470"
  },
  {
    "text": "is by kind of queries,\nand I know the queries. And I can use it to cheat.",
    "start": "1348470",
    "end": "1355100"
  },
  {
    "text": "So let me now construct P**\nthat cheats in the interactive,",
    "start": "1355100",
    "end": "1370730"
  },
  {
    "text": "in the interactive protocol. OK. How do I cheat in the\ninteractive protocol?",
    "start": "1370730",
    "end": "1377275"
  },
  {
    "start": "1377275",
    "end": "1383240"
  },
  {
    "text": "OK. So first, I'm going to give the\nsame x-- with x, the same x.",
    "start": "1383240",
    "end": "1390570"
  },
  {
    "text": "So this P* succeeded with\nsome x in the language. I'll use the same x. Now, first thing I\nneed-- so here I am, P**.",
    "start": "1390570",
    "end": "1398450"
  },
  {
    "text": "I'm ready to go. Here's x, V. I need to\nstart sending alpha.",
    "start": "1398450",
    "end": "1404330"
  },
  {
    "text": "What do I do? Which alpha do I send? Now, what do I know? I know that-- I want\nto use this guy.",
    "start": "1404330",
    "end": "1411360"
  },
  {
    "text": "I can't cheat. I'm going to use him. He's the cheater. I'm going to use him. What do I know about him?",
    "start": "1411360",
    "end": "1417150"
  },
  {
    "text": "I know he cheated with\nalpha, beta, and gamma. And one of these alphas\nhe used as a query.",
    "start": "1417150",
    "end": "1426980"
  },
  {
    "text": "OK, which one? I don't know. But here's what I'm going to do. I'm going to guess randomly.",
    "start": "1426980",
    "end": "1432049"
  },
  {
    "text": "And what's the saying again? You fake it til you make it.",
    "start": "1432050",
    "end": "1437730"
  },
  {
    "text": "[LAUGHTER] I'm going to guess\nrandomly and hope.",
    "start": "1437730",
    "end": "1442742"
  },
  {
    "text": "So what I'm going to\ndo, I'm going to guess-- so what does P* do?",
    "start": "1442742",
    "end": "1449690"
  },
  {
    "text": "First, I'm going to\nguess a random i in q.",
    "start": "1449690",
    "end": "1456679"
  },
  {
    "text": "So just the index,\nwhich-- so I know he's going to make q queries. I don't know yet which queries.",
    "start": "1456680",
    "end": "1462400"
  },
  {
    "text": "But let's say I have a\nbound on his runtime. So I have a bound. So P* there runs in time\nat most q, let's say.",
    "start": "1462400",
    "end": "1470790"
  },
  {
    "text": "So he makes at most q\nqueries to the oracle. That, I know.",
    "start": "1470790",
    "end": "1476160"
  },
  {
    "text": "I'm going to choose\na random index. Like, suppose we have random\nquery of one of-- the i-th query",
    "start": "1476160",
    "end": "1483240"
  },
  {
    "text": "to his oracle. And what I'm going to do, I'm\ngoing to send here alpha i.",
    "start": "1483240",
    "end": "1490255"
  },
  {
    "text": "Now, what is alpha i? I don't know what alpha i is. But don't worry. What I'm going to do-- I am going to simulate\nthe oracle for him.",
    "start": "1490255",
    "end": "1498419"
  },
  {
    "text": "So I'm going to pretend\nI'm the random oracle. OK. I'm going to start by saying,\nOK, P*, I'm going to use you.",
    "start": "1498420",
    "end": "1504539"
  },
  {
    "text": "Let's start. You gave me x. Send me alpha. Generate this.",
    "start": "1504540",
    "end": "1509760"
  },
  {
    "text": "Generate alpha, beta, gamma. Now, what does P* do\nwhen he generates? He's like, OK, let me think. Alpha 1, I'll give\nhim a random beta 1.",
    "start": "1509760",
    "end": "1518670"
  },
  {
    "text": "Alpha 2-- or x,\nalpha 2, I'm going to give him a random beta 2. Alpha 3, random.",
    "start": "1518670",
    "end": "1524310"
  },
  {
    "text": "Alpha 4, random-- until alpha i. Once I get alpha i, I'm happy. I'm like, ah, alpha i.",
    "start": "1524310",
    "end": "1531240"
  },
  {
    "text": "I'm ready, alpha i. I get a random beta back.",
    "start": "1531240",
    "end": "1538380"
  },
  {
    "text": "What do I do? I tell him, oh, your answer\nfrom the oracle is beta.",
    "start": "1538380",
    "end": "1544174"
  },
  {
    "text": " OK, so I'm simulating\nP*'s oracle.",
    "start": "1544175",
    "end": "1553170"
  },
  {
    "text": "And I'm behaving like I'm the\noracle sitting on top of P* It",
    "start": "1553170",
    "end": "1558180"
  },
  {
    "text": "gives me alpha 1. And then, sure, here's a beta 1. That's your answer. Alpha 2, beta 2. Alpha 3, beta--\nalpha i for random i.",
    "start": "1558180",
    "end": "1565740"
  },
  {
    "text": "It's beta. Now he gives me gamma. OK. Now he gives the answer.",
    "start": "1565740",
    "end": "1572220"
  },
  {
    "text": "And I continue. Alpha i plus 1, random. Alpha i plus 2, random,\nrandom, random, random. OK.",
    "start": "1572220",
    "end": "1578200"
  },
  {
    "text": "At the end, he gives\nme a transcript. But with probability 1/q,\nit's with my alpha i.",
    "start": "1578200",
    "end": "1585400"
  },
  {
    "text": "If he use both my\nalpha i, hooray. I'm going to give the gamma i. ",
    "start": "1585400",
    "end": "1592870"
  },
  {
    "text": "If it's not my alpha i, I'm--",
    "start": "1592870",
    "end": "1598700"
  },
  {
    "text": "well-- going to try again. I mean, then I fail. So what is the probability--\nso that's my protocol.",
    "start": "1598700",
    "end": "1606380"
  },
  {
    "text": "So if he didn't cheat with\na gamma i with the alpha i-- if this alpha is not alpha\ni, I'm going to lose.",
    "start": "1606380",
    "end": "1614350"
  },
  {
    "text": "I'm going to say,\nsorry, I failed. What is the probability-- ",
    "start": "1614350",
    "end": "1624320"
  },
  {
    "text": "so guess, and then simulate\nthe oracle for P* randomly,",
    "start": "1624320",
    "end": "1642190"
  },
  {
    "text": "except for alpha i--",
    "start": "1642190",
    "end": "1648090"
  },
  {
    "text": " I simulate via the verifier. For alpha i, answer with beta.",
    "start": "1648090",
    "end": "1659440"
  },
  {
    "text": "That's all. And then if alpha,\nbeta, gamma is such",
    "start": "1659440",
    "end": "1667300"
  },
  {
    "text": "that alpha equals\nalpha i, then-- ",
    "start": "1667300",
    "end": "1677230"
  },
  {
    "text": "let's call this gamma--\nthen send gamma. ",
    "start": "1677230",
    "end": "1683470"
  },
  {
    "text": "That's the protocol. That's the cheating prover. That's P**.",
    "start": "1683470",
    "end": "1689110"
  },
  {
    "text": "Now, what is the probability\nthat P** is accepted?",
    "start": "1689110",
    "end": "1695559"
  },
  {
    "text": " Again, what does P** do?",
    "start": "1695560",
    "end": "1702620"
  },
  {
    "text": "P stars accept with\nprobability epsilon. So with probability epsilon,\nhe gives me alpha, beta, gamma.",
    "start": "1702620",
    "end": "1708720"
  },
  {
    "text": " But he chooses alpha. ",
    "start": "1708720",
    "end": "1716450"
  },
  {
    "text": "He chooses this after\nquerying the oracle q times with different alphas.",
    "start": "1716450",
    "end": "1723622"
  },
  {
    "text": "Let's say with all of\nthem, he uses the same x. Otherwise, he's stupid. But whatever. It doesn't really matter.",
    "start": "1723622",
    "end": "1730250"
  },
  {
    "text": "We established that, except\nnegligible probability, one of these alpha\nis in the i-th query.",
    "start": "1730250",
    "end": "1737770"
  },
  {
    "text": " So what is the probability\nthat I succeed?",
    "start": "1737770",
    "end": "1744832"
  },
  {
    "text": "AUDIENCE: That\nprobability q [INAUDIBLE]. YAEL KALAI: Very nice. Great. So the probability--\nI'm out of space.",
    "start": "1744832",
    "end": "1750690"
  },
  {
    "text": "So the probability that\nP** is accepted is at least",
    "start": "1750690",
    "end": "1758539"
  },
  {
    "text": "the probability that\nP* accepted over q.",
    "start": "1758540",
    "end": "1763760"
  },
  {
    "text": "He's accepted if he\nchose alpha i correctly. But it's random. One of them, he cheated with,\nand I choose it randomly--",
    "start": "1763760",
    "end": "1768780"
  },
  {
    "text": "so with probability\nat least 1/q-- and minus the negligible,\nwhich is minus 1/2 to the k,",
    "start": "1768780",
    "end": "1778550"
  },
  {
    "text": "which is kind of the probability\nthat he didn't even guess-- the alpha is kind of-- he just\ndidn't use one of the queries.",
    "start": "1778550",
    "end": "1786150"
  },
  {
    "text": "But that's really small,\nso it's still pretty big. So there is a loss. There is a loss of q.",
    "start": "1786150",
    "end": "1791230"
  },
  {
    "text": " But q's polynomial.",
    "start": "1791230",
    "end": "1797940"
  },
  {
    "text": "And if alpha is non-negligible,\nthan alpha over q's also non-negligible. And that's a contradiction.",
    "start": "1797940",
    "end": "1803640"
  },
  {
    "start": "1803640",
    "end": "1809220"
  },
  {
    "text": "Any questions? Yeah? AUDIENCE: So the [INAUDIBLE]\nproof where we actually",
    "start": "1809220",
    "end": "1814567"
  },
  {
    "text": "use the random oracle model\nalready, where we couldn't just put in another hash function,\nis like, that top line there?",
    "start": "1814567",
    "end": "1822424"
  },
  {
    "text": " YAEL KALAI: Yes, it's\nthis top line there. But also, the fact that we\ncan say that there exists",
    "start": "1822425",
    "end": "1835200"
  },
  {
    "text": "alpha 1 up to alpha q-- the fact that we're\nable to observe",
    "start": "1835200",
    "end": "1842640"
  },
  {
    "text": "what he knows about the hash\nis in the random oracle model.",
    "start": "1842640",
    "end": "1849285"
  },
  {
    "text": "So the proofs in the\nrandom oracle model, it really means one\nneeds to be careful.",
    "start": "1849285",
    "end": "1854730"
  },
  {
    "text": "Because people want to-- ",
    "start": "1854730",
    "end": "1861270"
  },
  {
    "text": "OK. The intuition behind\nthe random oracle model is to say, what do we need\nfrom the hash function?",
    "start": "1861270",
    "end": "1867760"
  },
  {
    "text": "We want it to look random. Because the verifier's\nmessage are random,",
    "start": "1867760",
    "end": "1873130"
  },
  {
    "text": "we want also to look random. And now, OK, because we look-- and that was kind\nof the motivation",
    "start": "1873130",
    "end": "1878970"
  },
  {
    "text": "for this random oracle model. And then it's tempting\nto say, so now all we",
    "start": "1878970",
    "end": "1885090"
  },
  {
    "text": "need is a hash function that\nkind of behaves randomly. Let's try to use, I\ndon't know, like, people",
    "start": "1885090",
    "end": "1890490"
  },
  {
    "text": "say-- like pseudorandom\nfunctions, which were not defined here. Whatever. OK, but you can.",
    "start": "1890490",
    "end": "1895900"
  },
  {
    "text": "But who knows what the-- how will you prove soundness?",
    "start": "1895900",
    "end": "1901900"
  },
  {
    "text": "This proof-- unless, really,\nthe prover, what it does is really just\nruns the function.",
    "start": "1901900",
    "end": "1909090"
  },
  {
    "text": "If the cheating prover, all he\ndoes-- he gets the function. He's like, ah, this\nreally looks like crap. I don't know what to do.",
    "start": "1909090",
    "end": "1914990"
  },
  {
    "text": "I'll just feed him inputs,\nsee what output I get. That's the only thing I can do. Then this proof in the random\noracle model makes sense.",
    "start": "1914990",
    "end": "1921990"
  },
  {
    "text": "But as long as he can do\nanything else besides, like, blindly feed an input and an\noutput, I don't have a proof.",
    "start": "1921990",
    "end": "1929582"
  },
  {
    "text": "Yeah? AUDIENCE: What if you\nhave one with [INAUDIBLE]? YAEL KALAI: Oh, 1/2 to the k? Yeah, the only reason I added\nthis negligible fraction here",
    "start": "1929582",
    "end": "1937440"
  },
  {
    "text": "is, there's 1/2 to the k\nprobability-- which is tiny-- that P* star is accepted\nwith none of the alphas.",
    "start": "1937440",
    "end": "1946390"
  },
  {
    "text": "So maybe he just chose alpha\nthat was not queried at all. But he managed to\nchoose beta randomly,",
    "start": "1946390",
    "end": "1953127"
  },
  {
    "text": "which happens with\nprobability 1/2 to the k. Because beta should be H.\nAnd if he didn't ask H,",
    "start": "1953127",
    "end": "1959909"
  },
  {
    "text": "then he doesn't know what\nbeta is, and beta is random. But there is that probability\nthat he chooses alpha",
    "start": "1959910",
    "end": "1965049"
  },
  {
    "text": "that's not one of the q. So here, if he\nchooses one of the q, I guess the one he chooses\ncorrectly with probability 1/q,",
    "start": "1965050",
    "end": "1972899"
  },
  {
    "text": "so I get epsilon over q. But I guess I should put here--",
    "start": "1972900",
    "end": "1978045"
  },
  {
    "text": "yeah.  But if he chooses randomly,\nthen I'm out of luck.",
    "start": "1978045",
    "end": "1987620"
  },
  {
    "text": "Yeah? AUDIENCE: How do we know q? YAEL KALAI: Good. How do I know q?",
    "start": "1987620",
    "end": "1992738"
  },
  {
    "text": "Very good question. I actually don't know q. And the q even can be\na little bit adaptive.",
    "start": "1992738",
    "end": "2000700"
  },
  {
    "text": "So maybe this cheating prover\nhe gets, he sends alpha 1. And depending on\nbeta 1 that he gets,",
    "start": "2000700",
    "end": "2007840"
  },
  {
    "text": "he decides how many\nqueries he wants to-- and maybe he's very happy with\nhis beta 1, and he's done.",
    "start": "2007840",
    "end": "2014700"
  },
  {
    "text": "And maybe he's very\nunhappy and sends another. So the number of\nq can be adaptive.",
    "start": "2014700",
    "end": "2020950"
  },
  {
    "text": "But since P* is fixed and I\nknow it's polynomial time--",
    "start": "2020950",
    "end": "2026529"
  },
  {
    "text": "so let's say the runtime of\nP* is lambda to the third. I know that he cannot ask more\nthan lambda to the third query,",
    "start": "2026530",
    "end": "2033190"
  },
  {
    "text": "because each query takes\none unit time to ask. So I can upper bound the number\nof queries by the runtime of P*",
    "start": "2033190",
    "end": "2044630"
  },
  {
    "text": "star. So really, the probability\nthat is accepted--",
    "start": "2044630",
    "end": "2050830"
  },
  {
    "text": "if I have no idea what q\nis and in the worst case, it's the runtime, it's epsilon\nover the runtime of P*--",
    "start": "2050830",
    "end": "2057510"
  },
  {
    "text": "which that, I know. Because I'm giving P*,\nlet's say, as a circuit. ",
    "start": "2057510",
    "end": "2064109"
  },
  {
    "text": "AUDIENCE: Wouldn't you have a\ncircuit that doesn't halt or--",
    "start": "2064110",
    "end": "2070110"
  },
  {
    "text": "YAEL KALAI: No. I'm promised that\nP*'s polynomial size. I know it halts. So my contradiction\nassumption is as follows.",
    "start": "2070110",
    "end": "2079830"
  },
  {
    "text": "Suppose there\nexists a poly size. Poly size-- I don't know--\nlambda to the third size P*.",
    "start": "2079830",
    "end": "2086919"
  },
  {
    "text": "Now, I know that P* asks at most\nlambda to the third queries.",
    "start": "2086920",
    "end": "2094530"
  },
  {
    "text": " AUDIENCE: [INAUDIBLE]",
    "start": "2094530",
    "end": "2101165"
  },
  {
    "text": "YAEL KALAI: I think of the\ncircuit of P* as being a circuit that has kind of H gates,\nlike random oracle gates.",
    "start": "2101165",
    "end": "2109390"
  },
  {
    "text": "So you can feed it, like,\nalpha or x and alpha. And out comes-- and\nit's like one gate.",
    "start": "2109390",
    "end": "2114560"
  },
  {
    "text": "It's like one time unit. But he cannot have more than\nlambda to the third of them",
    "start": "2114560",
    "end": "2120430"
  },
  {
    "text": "because that's the\nsize of the circuit. AUDIENCE: OK. So you could necessarily\nnot have loops or--",
    "start": "2120430",
    "end": "2129023"
  },
  {
    "text": "YAEL KALAI: No, it doesn't-- no, no, no. It doesn't have loops. Yeah, no. ",
    "start": "2129023",
    "end": "2135790"
  },
  {
    "text": "The runtime is fixed. It can compute at most\nlambda to the third gates.",
    "start": "2135790",
    "end": "2142790"
  },
  {
    "text": "It has lambda to the\nthird gates in it. AUDIENCE: Right. I see. ",
    "start": "2142790",
    "end": "2153048"
  },
  {
    "text": "YAEL KALAI: So any\nother questions? ",
    "start": "2153048",
    "end": "2158950"
  },
  {
    "text": "OK. This was three rounds.",
    "start": "2158950",
    "end": "2163990"
  },
  {
    "text": "What about more? So what if you have, I\ndon't know, c rounds?",
    "start": "2163990",
    "end": "2174340"
  },
  {
    "text": "What happens then? Any guess in how the\nprobability decays",
    "start": "2174340",
    "end": "2180910"
  },
  {
    "text": "with the number of rounds? Yeah? AUDIENCE: Epsilon\nover G to the c/2?",
    "start": "2180910",
    "end": "2186290"
  },
  {
    "text": "YAEL KALAI: Exactly. Yeah, exactly. So it's going to be--\nif you have c rounds-- or c messages from the\nverifier, let's say--",
    "start": "2186290",
    "end": "2194350"
  },
  {
    "text": "if you have c message\nfrom the verifier, it's going to be something\nlike epsilon over q to the c.",
    "start": "2194350",
    "end": "2200650"
  },
  {
    "text": "And to see why-- it's really the same argument. What we need to do is\nsuppose that in each round,",
    "start": "2200650",
    "end": "2211870"
  },
  {
    "text": "P* sends at most q queries. So maybe he sends q queries\nof the form alpha 1,",
    "start": "2211870",
    "end": "2220760"
  },
  {
    "text": "like x comma alpha 1. And then he sends q queries\nof the form x alpha beta.",
    "start": "2220760",
    "end": "2227340"
  },
  {
    "text": "And then he sends-- sorry-- x alpha, beta, gamma. And then he sends q queries\nof the form x, alpha--",
    "start": "2227340",
    "end": "2234900"
  },
  {
    "text": "so for each partial\ntranscript, he has q queries.",
    "start": "2234900",
    "end": "2240020"
  },
  {
    "text": "Now, if you have\nc rounds, you need to guess correctly for\neach partial transcript",
    "start": "2240020",
    "end": "2248300"
  },
  {
    "text": "the correct i. I'm going to guess that-- so\nI'm not going to write it down",
    "start": "2248300",
    "end": "2253640"
  },
  {
    "text": "because it's really the same,\nbut let me just say it in words. P**, what he does is, for\nevery round of the verifier,",
    "start": "2253640",
    "end": "2263490"
  },
  {
    "text": "he guesses the index\nof the query of--",
    "start": "2263490",
    "end": "2269100"
  },
  {
    "text": "he gets the index of the query\nto the hash function, which is",
    "start": "2269100",
    "end": "2276830"
  },
  {
    "text": "going to be used in the proof. So he's going to guess. And here, we said you guess i.",
    "start": "2276830",
    "end": "2282990"
  },
  {
    "text": "Now we're actually going\nto guess i1 up to ic. ",
    "start": "2282990",
    "end": "2291230"
  },
  {
    "text": "OK. For each message\nof the verifier, we're going to guess an index.",
    "start": "2291230",
    "end": "2296400"
  },
  {
    "text": "And now we again just emulate\nP*, exactly as before.",
    "start": "2296400",
    "end": "2302099"
  },
  {
    "text": "So how do I emulate? I go to P*. He asks me just alpha 1-- like,\nif he asks me just of the form",
    "start": "2302100",
    "end": "2309890"
  },
  {
    "text": "for the first message-- like\nalpha 1, alpha 2, alpha 3-- I give him random, random,\nrandom, random, random",
    "start": "2309890",
    "end": "2316339"
  },
  {
    "text": "until he asks for alpha\ni, and then I give beta i.",
    "start": "2316340",
    "end": "2324170"
  },
  {
    "text": "Now, in between, he\nmay ask for bigger. He may ask all of a sudden for\nx comma alpha, beta, gamma--",
    "start": "2324170",
    "end": "2333004"
  },
  {
    "text": "oh, random, then random. I give everything random. But the first\npoint, I get alpha,",
    "start": "2333004",
    "end": "2339920"
  },
  {
    "text": "the i-th query for the first-- corresponding to the\ntranscript, the first message.",
    "start": "2339920",
    "end": "2347510"
  },
  {
    "text": "Then I'm like, aha,\nI got it, alpha i. Thank you very much. I put my alpha i. I get beta.",
    "start": "2347510",
    "end": "2353730"
  },
  {
    "text": "I enter beta as the\nanswer from the oracle.",
    "start": "2353730",
    "end": "2359150"
  },
  {
    "text": "And now I'm happy. Now I start counting. Like, for i2, I start\ncounting, how many messages",
    "start": "2359150",
    "end": "2366740"
  },
  {
    "text": "are the form alpha,\nbeta, and some gamma? Alpha, beta, gamma 1.",
    "start": "2366740",
    "end": "2372330"
  },
  {
    "text": "Alpha beta, gamma 2. Alpha, beta-- until I get to i2. All of them, I answer randomly.",
    "start": "2372330",
    "end": "2378560"
  },
  {
    "text": "And any other queries for that\nI don't know what from-- random. Once I get to alpha, beta,\ngamma i2-- like, the i2--",
    "start": "2378560",
    "end": "2389680"
  },
  {
    "text": "I'm happy. I run here. I put my gamma, I get a\ndelta, I answer with delta.",
    "start": "2389680",
    "end": "2395430"
  },
  {
    "text": "Now I start counting, how many\nqueries of the form alpha, beta, gamma, delta?",
    "start": "2395430",
    "end": "2401580"
  },
  {
    "text": "Epsilon. Sorry, epsilon's\nfixed-- next one. I count until I get i3.",
    "start": "2401580",
    "end": "2408599"
  },
  {
    "text": "And the i3 of them, I\ngive the answer, give-- I just do it for as\nmany rounds as needed.",
    "start": "2408600",
    "end": "2415060"
  },
  {
    "text": "But for me to be solving, I\nneed to make all these guesses correctly. And each guess is going\nto be probability q.",
    "start": "2415060",
    "end": "2422069"
  },
  {
    "text": "So that's why the\nprobability decays a lot.",
    "start": "2422070",
    "end": "2428160"
  },
  {
    "text": "Yeah? AUDIENCE: So does that mean\nthat the number of rounds is not security parameters?",
    "start": "2428160",
    "end": "2433660"
  },
  {
    "text": "You're still secure? YAEL KALAI: Yeah. Good, good, good-- no, it's not. OK. If the number is log,\nit's almost secure.",
    "start": "2433660",
    "end": "2439569"
  },
  {
    "text": "But then the probability\nis q to the log. q is not 2.",
    "start": "2439570",
    "end": "2444840"
  },
  {
    "text": "So you'll get a\nlittle negligible. So it will be negligible,\nbut not too negligible.",
    "start": "2444840",
    "end": "2452410"
  },
  {
    "text": "It's going to be\nkind quasi-poly, like 1 over quasi poly. So if you have a log rounds,\nif you happen to know that",
    "start": "2452410",
    "end": "2465000"
  },
  {
    "text": "the original interactive\nprotocol has soundness less than quasi-poly, like\nsubexponential--",
    "start": "2465000",
    "end": "2472119"
  },
  {
    "text": "let's say you have the guarantee\nthat a cheating prover cannot cheat except with 1 over\nsubexponential probability.",
    "start": "2472120",
    "end": "2479070"
  },
  {
    "text": "Then log rounds will be good. So the number of rounds,\nc, this is really",
    "start": "2479070",
    "end": "2486420"
  },
  {
    "text": "your probability of cheating. And as long as your interactive\nprotocol has the guarantee that",
    "start": "2486420",
    "end": "2494820"
  },
  {
    "text": "you cannot cheat with\nthis probability, then you have a proof.",
    "start": "2494820",
    "end": "2500590"
  },
  {
    "text": "Yeah. Yeah? AUDIENCE: Would you\nreplace the formula q to the power of c with P\nover c to the power of c",
    "start": "2500590",
    "end": "2507069"
  },
  {
    "text": "so you distribute q queries? YAEL KALAI: Good, good, good. Yeah, so the question\nwas, can we maybe",
    "start": "2507070",
    "end": "2514150"
  },
  {
    "text": "replace this by q over\nc to the power of c because q is the total\nnumber of queries?",
    "start": "2514150",
    "end": "2520059"
  },
  {
    "text": "The thing is-- so, OK,\nI'll tell you the--",
    "start": "2520060",
    "end": "2527350"
  },
  {
    "text": "it's not that simple. Because we don't know\nexactly how many--",
    "start": "2527350",
    "end": "2533240"
  },
  {
    "text": "so suppose the prover,\ntotal, asks q queries. We don't know how\nmany queries he--",
    "start": "2533240",
    "end": "2538730"
  },
  {
    "text": "maybe he has all of them on the\nfirst message and then just one. And it can be adaptive.",
    "start": "2538730",
    "end": "2544340"
  },
  {
    "text": "It can depend on his answers. Maybe he asks alpha 1. He gets beta 1. He's happy. He's not going to ask again.",
    "start": "2544340",
    "end": "2550040"
  },
  {
    "text": "And all the answers are going\nto be in the second messages. Or maybe he sends\nalpha 1, beta 1.",
    "start": "2550040",
    "end": "2556940"
  },
  {
    "text": "He's so unhappy, all the q\ngoes for the first message. So how do you choose the i?",
    "start": "2556940",
    "end": "2563821"
  },
  {
    "text": "AUDIENCE: Now they\nchoose [INAUDIBLE]. YAEL KALAI: How do you choose-- for me, I said, let's\nchoose them randomly.",
    "start": "2563821",
    "end": "2569145"
  },
  {
    "text": "AUDIENCE: Oh, I see. YAEL KALAI: But you may\nbe able to do better. One can think, can you\ndo better than this?",
    "start": "2569145",
    "end": "2576170"
  },
  {
    "text": "Possibly. Because you're saying, forget\nabout the end, end, end.",
    "start": "2576170",
    "end": "2581890"
  },
  {
    "text": "The end, it's not going to-- most of them, you won't\ngo all the way to the end, so you can probably choose\nit more from the beginning.",
    "start": "2581890",
    "end": "2590260"
  },
  {
    "text": "Probably, you can\nimprove on this. I didn't do the calculations. Because usually, we don't\nreally care about constants.",
    "start": "2590260",
    "end": "2598966"
  },
  {
    "text": "But you're saying-- oh? AUDIENCE: [INAUDIBLE] because\nif you make c equal to q, then it's going\nto be [INAUDIBLE].",
    "start": "2598966",
    "end": "2606490"
  },
  {
    "text": "YAEL KALAI: That's why\nit's not true in general. In general, you can't. But you probably can\nimprove it a little bit,",
    "start": "2606490",
    "end": "2612945"
  },
  {
    "text": "you know what I mean?  Yeah, maybe you\nwant to choose it",
    "start": "2612945",
    "end": "2618790"
  },
  {
    "text": "in a different distribution,\nnot randomly, eh-- more towards the beginning\nbecause most of them",
    "start": "2618790",
    "end": "2624230"
  },
  {
    "text": "are not going to be at the end. But yeah, there are probably\noptimizations that can be done.",
    "start": "2624230",
    "end": "2630109"
  },
  {
    "text": "Great, great questions.  Any other question?",
    "start": "2630110",
    "end": "2637940"
  },
  {
    "text": "OK. So let's see. So maybe I will do then--",
    "start": "2637940",
    "end": "2643069"
  },
  {
    "text": "I'm debating if to go to the\nsoundness in the standard model or to do the round by round.",
    "start": "2643070",
    "end": "2648980"
  },
  {
    "text": "You know what? I'll do the round-by-round\nsoundness because I want to--",
    "start": "2648980",
    "end": "2654230"
  },
  {
    "text": "AUDIENCE: So this says Kilian. YAEL KALAI: Oh, good. Yeah, Thank you. OK, good.",
    "start": "2654230",
    "end": "2659430"
  },
  {
    "text": "So what did we-- thank you. What did we prove? We proved that the random\noracle model is sound.",
    "start": "2659430",
    "end": "2665400"
  },
  {
    "text": "The Fiat-Shamir applied\nto the random oracle is sound if you\nhave constant number of rounds and negligible error.",
    "start": "2665400",
    "end": "2673130"
  },
  {
    "text": "Now, Kilian-Micali protocol\nhas constant number of rounds-- four, to be precise--",
    "start": "2673130",
    "end": "2679220"
  },
  {
    "text": "and negligible error\nif you take the P, c, P with negligible error,\nwhich you can by--",
    "start": "2679220",
    "end": "2684740"
  },
  {
    "text": "we have P, c, P's\nwith negligible error. You put it in and\nyou have four round, negligible error You apply\nFiat-Shamir in the random oracle",
    "start": "2684740",
    "end": "2691630"
  },
  {
    "text": "model. It's sound. So Fiat-Shamir is sound\nin the random oracle",
    "start": "2691630",
    "end": "2697700"
  },
  {
    "text": "model for Kilian-Micali. That's great.",
    "start": "2697700",
    "end": "2703160"
  },
  {
    "text": "As I said, we don't\nhave-- so now you can ask, do we have a proof\nof Fiat-Shamir",
    "start": "2703160",
    "end": "2710330"
  },
  {
    "text": "for Kilian-Micali in\nthe standard model? OK, random oracle\nmodel, we have. How about standard model?",
    "start": "2710330",
    "end": "2716750"
  },
  {
    "text": "And this is important\nbecause, for a long time, people believed that if we have\na proof in the random oracle",
    "start": "2716750",
    "end": "2725840"
  },
  {
    "text": "model, it means there must be\nsome hash function for which",
    "start": "2725840",
    "end": "2731120"
  },
  {
    "text": "this protocol is sound. Namely, the belief was, if\nyou have a proof in the random",
    "start": "2731120",
    "end": "2737000"
  },
  {
    "text": "oracle model, and then if\nyou use it with Fiat-Shamir, something goes wrong--\nlike, someone breaks it--",
    "start": "2737000",
    "end": "2744180"
  },
  {
    "text": "we need to blame\nthe hash function. It's that you used a bad hash\nfunction for Fiat-Shamir.",
    "start": "2744180",
    "end": "2749390"
  },
  {
    "text": "OK. So typically, when Fiat-Shamir's\nused in practice-- it's used, let's say with SHA-256. That's a standard, off-the-shelf\nhash function that's used.",
    "start": "2749390",
    "end": "2758140"
  },
  {
    "text": "And now if someone ever\nbreaks your protocol, the conclusion was, SHA-256\nis not a good hash function.",
    "start": "2758140",
    "end": "2766570"
  },
  {
    "text": "Use another hash function.  However, this protocol is\nan example of a protocol--",
    "start": "2766570",
    "end": "2775750"
  },
  {
    "text": "it's very natural. It's great. It was invented not as a\ncounterexample for Fiat-Shamir.",
    "start": "2775750",
    "end": "2784710"
  },
  {
    "text": "And it's secure in the\nrandom oracle model. So Fiat-Shamir is secure in the\nrandom oracle for this protocol.",
    "start": "2784710",
    "end": "2790990"
  },
  {
    "text": "Yet, there are hash\nfunctions contrived--",
    "start": "2790990",
    "end": "2796530"
  },
  {
    "text": "but there are contrived\nhash function such that this protocol is\ninsecure no matter which--",
    "start": "2796530",
    "end": "2804810"
  },
  {
    "text": "it's not secure\nin the Fiat-Shamir for any explicit hash\nfunction that you use.",
    "start": "2804810",
    "end": "2810540"
  },
  {
    "text": "It's a good random oracle\nmodel, but it's not secure with any actual\nfunction family. ",
    "start": "2810540",
    "end": "2818100"
  },
  {
    "text": "So what we learned from this\nis, the random oracle model is a nice sanity check, but\nit's really not a proof.",
    "start": "2818100",
    "end": "2826733"
  },
  {
    "text": "I mean, we knew it's not a\nproof but it doesn't even guarantee-- it doesn't guarantee\nthat there exists a proof.",
    "start": "2826733",
    "end": "2834150"
  },
  {
    "text": "It's just a minimal\nsanity check. Yet, let me tell\nyou, in practice--",
    "start": "2834150",
    "end": "2842280"
  },
  {
    "text": "actually, that's\nhow people check that things are secure in\nthe random oracle model.",
    "start": "2842280",
    "end": "2847420"
  },
  {
    "text": "If it verifies this\ncheck, they use it. And, as far as I\nknow, things never broke because of the random\noracle model being insecure.",
    "start": "2847420",
    "end": "2856660"
  },
  {
    "text": "So it's more of a theoretical\nkind of interesting thing.",
    "start": "2856660",
    "end": "2864160"
  },
  {
    "text": "But actually, in practice\nit's not an issue. Yeah? AUDIENCE: Has anyone tried\nto break the random oracle's",
    "start": "2864160",
    "end": "2870060"
  },
  {
    "text": "[INAUDIBLE]? YAEL KALAI: OK. The question-- is\nanybody trying to break? The answer is--",
    "start": "2870060",
    "end": "2876150"
  },
  {
    "text": " OK. Things are broken all the time.",
    "start": "2876150",
    "end": "2882670"
  },
  {
    "text": "Things are hacked and\nbroken all the time. It's very rare that what's\nbroken is actually the crypto.",
    "start": "2882670",
    "end": "2889810"
  },
  {
    "text": "It's not the crypto\nthat's broken. But people do try to break-- for example, one thing\nthat, often, people break--",
    "start": "2889810",
    "end": "2895840"
  },
  {
    "text": "they use to break is-- our cryptography\nuses randomness. We use randomness in our crypto.",
    "start": "2895840",
    "end": "2903160"
  },
  {
    "text": "And in practice, people\ndon't use-- like, we keys. We assume our secret\nkeys are random.",
    "start": "2903160",
    "end": "2909240"
  },
  {
    "text": "But in practice, where do\nyou get this randomness? And often, the implementations\nare not done well.",
    "start": "2909240",
    "end": "2915520"
  },
  {
    "text": "And somehow, guess what? Things turned out not to be\nrandom or not random enough,",
    "start": "2915520",
    "end": "2920839"
  },
  {
    "text": "and then things are attacked. So things are attacked a\nlot, actually, in practice. There's a lot of breaches,\nsecurity breaches.",
    "start": "2920840",
    "end": "2928040"
  },
  {
    "text": "But it's very rare that\nit's in the crypto itself.",
    "start": "2928040",
    "end": "2933740"
  },
  {
    "text": "Now, why is it not\nthat in the crypto? One would believe that just\nbecause the crypto's actually",
    "start": "2933740",
    "end": "2939310"
  },
  {
    "text": "secure and it's implementation\nthat are the problem. And how many people are\ntrying to attack the crypto?",
    "start": "2939310",
    "end": "2946520"
  },
  {
    "text": "It's very hard to say. But my guess is\nthat-- and let me say, there's a lot of people\nwho are working really hard to attack the crypto.",
    "start": "2946520",
    "end": "2952460"
  },
  {
    "text": "But these are done\nbehind sealed doors so--",
    "start": "2952460",
    "end": "2958050"
  },
  {
    "text": "I remember, though, there's\na fantastic guy [INAUDIBLE]",
    "start": "2958050",
    "end": "2963340"
  },
  {
    "text": "a student in our\ncommunity called-- his name is Joe Killion. And he was a professor,\nand he moved to NSA.",
    "start": "2963340",
    "end": "2971630"
  },
  {
    "text": "And I remember\nonce I asked him-- a long time after he was\nalready at NSA, I asked him, so,",
    "start": "2971630",
    "end": "2980740"
  },
  {
    "text": "do you guys know how to factor? [LAUGHTER] And he told me--\nhis answer was, no,",
    "start": "2980740",
    "end": "2986539"
  },
  {
    "text": "the worst part about my job-- I'm not allowed even to\njoke about these things.",
    "start": "2986540",
    "end": "2991690"
  },
  {
    "text": "So the answer is, we don't know.",
    "start": "2991690",
    "end": "2997614"
  },
  {
    "text": "AUDIENCE: You don't\nknow if they don't know. YAEL KALAI: Yeah, exactly. [LAUGHTER] OK. Any other questions?",
    "start": "2997614",
    "end": "3004950"
  },
  {
    "text": "Yeah? AUDIENCE: This is\njust kind of general. But in general, do\nyou think private--",
    "start": "3004950",
    "end": "3010359"
  },
  {
    "text": "like, the NSA and\nprivate cryptography is further than what\nis publicly known or--",
    "start": "3010360",
    "end": "3018420"
  },
  {
    "text": "YAEL KALAI: The question\nwas, do I have a guess? AUDIENCE: Yeah. YAEL KALAI: And\nso I do not know. So let me rephrase.",
    "start": "3018420",
    "end": "3024570"
  },
  {
    "text": "Your question is,\ndo I have a guess as to if the NSA\nknows more than we do?",
    "start": "3024570",
    "end": "3030970"
  },
  {
    "text": "My guess would be yes, because-- they know everything we know\nbecause we don't hide anything.",
    "start": "3030970",
    "end": "3036580"
  },
  {
    "text": "And-- [LAUGHTER] And they have smart people. So why won't they\nknow a little more?",
    "start": "3036580",
    "end": "3044650"
  },
  {
    "text": "Do they know how to factor? That, I don't know. Is their world hugely\ndifferent than ours?",
    "start": "3044650",
    "end": "3051140"
  },
  {
    "text": "That, I don't know. But I'm sure they probably have\nsomething better than we do.",
    "start": "3051140",
    "end": "3057637"
  },
  {
    "text": "And we've seen it in history. Like, I think even-- AUDIENCE: RSA. YAEL KALAI: --RSA was\ninvented, but actually, it was privately known before.",
    "start": "3057637",
    "end": "3063380"
  },
  {
    "text": "So we know examples,\nso probably today too. But I wish I--",
    "start": "3063380",
    "end": "3069510"
  },
  {
    "text": "it would be nice to know. Yeah? AUDIENCE: Do people publish\nnegative reports saying, like, we tried to break\nthis random oracle protocol",
    "start": "3069510",
    "end": "3078430"
  },
  {
    "text": "with SHA-256 and [INAUDIBLE]? YAEL KALAI: That's\nanother thing. No. People don't tend to\npublish their failures.",
    "start": "3078430",
    "end": "3086960"
  },
  {
    "text": "So it's very hard to know-- going back to your question. How much do people-- when we say, look,\nthere's no break.",
    "start": "3086960",
    "end": "3093500"
  },
  {
    "text": "OK, what does that mean? Are there no-- it means\nwe don't know of a break.",
    "start": "3093500",
    "end": "3099115"
  },
  {
    "text": "It doesn't mean\nthere's no break. We don't know of a break. OK. How much did we as a\ncommunity try to break?",
    "start": "3099115",
    "end": "3104141"
  },
  {
    "text": "It's very hard to know. Because, like exactly-- your\nquestion was a very good one.",
    "start": "3104142",
    "end": "3109190"
  },
  {
    "text": "People don't say-- they don't\nreport how many hours they tried to break and fail. So we don't know.",
    "start": "3109190",
    "end": "3117140"
  },
  {
    "text": "Yeah. Yeah? AUDIENCE: If you\ndo break something, are you not supposed to\npublish it and you're supposed to-- until they edit it\nprivately and then wait, like,",
    "start": "3117140",
    "end": "3124280"
  },
  {
    "text": "six months and then-- because it might be dangerous. YAEL KALAI: Oh, oh. You're saying, if\nyou do break, maybe you need to be\ncareful to publish it.",
    "start": "3124280",
    "end": "3131150"
  },
  {
    "text": "Yeah, yeah. AUDIENCE: Maybe people break\nsomething all the time, but no one ever--",
    "start": "3131150",
    "end": "3136478"
  },
  {
    "text": "YAEL KALAI: Never know. [LAUGHTER] AUDIENCE: [INAUDIBLE] YAEL KALAI: Yeah. I actually don't-- so that's\nnot the art I kind of do.",
    "start": "3136478",
    "end": "3148050"
  },
  {
    "text": "I don't usually break schemes. I like to construct things. I don't work on trying to break.",
    "start": "3148050",
    "end": "3154410"
  },
  {
    "text": "But I know from folks here\nthat do more security work,",
    "start": "3154410",
    "end": "3161450"
  },
  {
    "text": "people get in trouble for\npublishing and breaking things.",
    "start": "3161450",
    "end": "3166500"
  },
  {
    "text": "And I don't know. We talk to them. They always mention the word\njail in their conversations. It's like, wow, OK.",
    "start": "3166500",
    "end": "3172940"
  },
  {
    "text": "Try to stay out of jail. Try to stay out of jail. You're like, OK, no. And here, in theory land, it's\npretty easy to stay out of jail.",
    "start": "3172940",
    "end": "3181220"
  },
  {
    "text": "They don't run after us. So yeah. But yeah, this can be\na dangerous business.",
    "start": "3181220",
    "end": "3190210"
  },
  {
    "text": " Any other questions?",
    "start": "3190210",
    "end": "3195710"
  },
  {
    "text": "OK. So I'm trying to think if\nI want to-- maybe I'll end",
    "start": "3195710",
    "end": "3202730"
  },
  {
    "text": "with round-by-round soundness. It's not as interesting, but let\nme just say a few words on it",
    "start": "3202730",
    "end": "3208940"
  },
  {
    "text": "just so I can check the box. I think it's in-- AUDIENCE: I have a question. YAEL KALAI: Yeah? AUDIENCE: So what\nwas the verdict on the zero-knowledge proof?",
    "start": "3208940",
    "end": "3215040"
  },
  {
    "text": "You cannot do it in parallel? YAEL KALAI: Good, OK. So the question was--",
    "start": "3215040",
    "end": "3220220"
  },
  {
    "text": "going back to the\nzero knowledge. OK, so zero knowledge, if\nyou repeat it sequentially,",
    "start": "3220220",
    "end": "3227300"
  },
  {
    "text": "it still stays zero knowledge. It still stays zero\nknowledge because-- exactly the same reason as before.",
    "start": "3227300",
    "end": "3233330"
  },
  {
    "text": "Each time-- I mean,\nI can simulate. Essentially, I can simulate\nthis transcript exactly the way",
    "start": "3233330",
    "end": "3239090"
  },
  {
    "text": "I can attack it in the\nrandom oracle model.",
    "start": "3239090",
    "end": "3244580"
  },
  {
    "text": "So, remember, what is the\ndefinition of zero knowledge, which I believe I erased? ",
    "start": "3244580",
    "end": "3250579"
  },
  {
    "text": "Look at this. I didn't. OK. So I want to say, for\nany cheating verifier,",
    "start": "3250580",
    "end": "3256140"
  },
  {
    "text": "you can simulate the transcript. If I repeat it in parallel, I\ncan simulate the transcript. How? I commit.",
    "start": "3256140",
    "end": "3261680"
  },
  {
    "text": "I'm the simulator. I'm going to simulate\na transcript for you-- at least, a physical transcript\nwith a commitment as a safe.",
    "start": "3261680",
    "end": "3269480"
  },
  {
    "text": "I commit. I fake it till I make it. I guess beta 1.",
    "start": "3269480",
    "end": "3276020"
  },
  {
    "text": "I commit. I hope V*. And then I compute V*'s\nanswer on my commitment,",
    "start": "3276020",
    "end": "3285410"
  },
  {
    "text": "hope it's beta 1. If it's beta 1, I can open. And I continue. If it's not beta 1, I try again.",
    "start": "3285410",
    "end": "3291810"
  },
  {
    "text": "And that's how I simulate\nthe protocol exactly as I cheat in the\nrandom oracle model.",
    "start": "3291810",
    "end": "3297770"
  },
  {
    "text": "What happens when\nthings are sequential--  when things are\nparallel, sorry--",
    "start": "3297770",
    "end": "3303960"
  },
  {
    "text": "when things are parallel? Now, in the parallel\nworld, you get alpha 1 up to alpha lambda,\nso lambda parallel partition",
    "start": "3303960",
    "end": "3312950"
  },
  {
    "text": "of the commitments. So you commit all the\nmatrix, all the commitments.",
    "start": "3312950",
    "end": "3318410"
  },
  {
    "text": "Alpha 1, you commit, you commit. You do it in parallel. You get all the beta\n1 up to beta lambda--",
    "start": "3318410",
    "end": "3325140"
  },
  {
    "text": "tells you if to open\nwith respect to 0 or 1. And then you need to do\nall the openings, gamma 1",
    "start": "3325140",
    "end": "3330450"
  },
  {
    "text": "up to gamma lambda. Ah. AUDIENCE: The thing that\nhelped you simulate--",
    "start": "3330450",
    "end": "3336250"
  },
  {
    "text": "YAEL KALAI: Wow. AUDIENCE: --also helped\nyou break the model. YAEL KALAI: Exactly.",
    "start": "3336250",
    "end": "3341910"
  },
  {
    "text": " The thing that helps me\nsimulate is exactly the break",
    "start": "3341910",
    "end": "3347550"
  },
  {
    "text": "of the random oracle model. Exactly, exactly. Now, what happens if\nI do it in parallel?",
    "start": "3347550",
    "end": "3354060"
  },
  {
    "text": "If I do it in\nparallel, it's not-- OK. If V* was honest, was\ncompletely honest, then yes,",
    "start": "3354060",
    "end": "3361645"
  },
  {
    "text": "I'll just simulate\neach one separately. Because I can do the same thing. I just choose each one randomly,\nsimulate each one randomly,",
    "start": "3361645",
    "end": "3369390"
  },
  {
    "text": "simulate. The thing is, V*\nmay be malicious. Here's a really problematic V*.",
    "start": "3369390",
    "end": "3374890"
  },
  {
    "text": "Suppose V* is such that I\ngive him all the commitment. So it's digital. So I told you in a safe,\nbut actually, there's",
    "start": "3374890",
    "end": "3381600"
  },
  {
    "text": "cryptography going on in there. Let me just gloss\nover the crypto. The safe is going to be\ndigital, so there's just bits.",
    "start": "3381600",
    "end": "3390359"
  },
  {
    "text": "And now suppose V* chooses beta\nand some function of alpha. He applies some-- he's\na cheating verifier.",
    "start": "3390360",
    "end": "3397960"
  },
  {
    "text": "He wants to learn. His goal is to learn. And how does he learn? He gets all these things.",
    "start": "3397960",
    "end": "3403210"
  },
  {
    "text": "He applies some f, some function\nf, to all of them together. Think of it like a\nrandom function--",
    "start": "3403210",
    "end": "3409480"
  },
  {
    "text": "I don't know-- and gets\nbeta 1 up to beta lambda. And that's what he sends me.",
    "start": "3409480",
    "end": "3414839"
  },
  {
    "text": "That's the cheating prover. Now, how do I simulate this? ",
    "start": "3414840",
    "end": "3422400"
  },
  {
    "text": "I can guess beta 1\nand try to get this. I can't guess all the\nbetas at the same time.",
    "start": "3422400",
    "end": "3429180"
  },
  {
    "text": "The thing is, I can\ntry to guess beta 1, give a commitment here,\nhope for the best.",
    "start": "3429180",
    "end": "3434230"
  },
  {
    "text": "But the problem is,\nif I do alpha 2, the beta 1 may change because\nthe betas are a function of all the alphas together.",
    "start": "3434230",
    "end": "3441130"
  },
  {
    "text": "It's really not clear\nhow to simulate this. OK. So the question holds.",
    "start": "3441130",
    "end": "3446650"
  },
  {
    "text": "Is this zero knowledge? And this was an open problem\nfor a very, very long time,",
    "start": "3446650",
    "end": "3452960"
  },
  {
    "text": "over 20 years. We had no idea. People really tried.",
    "start": "3452960",
    "end": "3458500"
  },
  {
    "text": "This we know because people did\npublish some partial results. And everybody worked on\nit for a very long time.",
    "start": "3458500",
    "end": "3468280"
  },
  {
    "text": "We shared our frustration. And then in 2019--",
    "start": "3468280",
    "end": "3473390"
  },
  {
    "text": "actually, here at MIT-- and be within in\nour neighborhood--",
    "start": "3473390",
    "end": "3478420"
  },
  {
    "text": "a bunch of people-- I'm going to tell you\nabout it-- actually proved that this is\nnot zero knowledge,",
    "start": "3478420",
    "end": "3488079"
  },
  {
    "text": "not parallel zero knowledge. And the interesting\nthing-- the way they proved that it's\nnot zero knowledge",
    "start": "3488080",
    "end": "3493510"
  },
  {
    "text": "is actually by proving\nthat the Fiat-Shamir is",
    "start": "3493510",
    "end": "3498520"
  },
  {
    "text": "sound for this protocol,\nwhich is very weird. [LAUGHTER]",
    "start": "3498520",
    "end": "3504849"
  },
  {
    "text": "So what they proved is\nthat this protocol-- this is a three-round protocol.",
    "start": "3504850",
    "end": "3513460"
  },
  {
    "text": "You can apply Fiat-Shamir to it. What they proved is if you--\nso there was a question.",
    "start": "3513460",
    "end": "3520750"
  },
  {
    "text": "Is Fiat-Shamir sound\nin the standard model? Is it sound? Is it sound? Nobody knew. They gave kind of a\nbreakthrough result",
    "start": "3520750",
    "end": "3527020"
  },
  {
    "text": "showing it's sound in\nthe random oracle model. So that's what I'm going\nto show you next time. Next time, we're going to prove\nthat this protocol is actually",
    "start": "3527020",
    "end": "3537280"
  },
  {
    "text": "sound if you apply\nFiat-Shamir to it.",
    "start": "3537280",
    "end": "3543310"
  },
  {
    "text": "The interesting thing is, the\nfact that it's sound if you apply Fiat-Shamir shows--",
    "start": "3543310",
    "end": "3550579"
  },
  {
    "text": "so we're going to\nshow this is sound. So of course it's sound.",
    "start": "3550580",
    "end": "3556260"
  },
  {
    "text": "If you just do parallel\npartition, you'll get soundness. But it's also sound with--\nthere exists a hash function--",
    "start": "3556260",
    "end": "3565740"
  },
  {
    "text": "so there exists a hash function\nsuch that even this hash,",
    "start": "3565740",
    "end": "3572430"
  },
  {
    "text": "under a standard cryptographic\nassumption known as learning with error-- we'll\ntalk about later--",
    "start": "3572430",
    "end": "3578450"
  },
  {
    "text": "almost learning with error\nwith circular security. Never mind. There's a standard\ncryptographic assumption",
    "start": "3578450",
    "end": "3584190"
  },
  {
    "text": "so that under that assumption,\nthere exists a hash family such",
    "start": "3584190",
    "end": "3589940"
  },
  {
    "text": "that this protocol\nis Fiat-Shamir sound.",
    "start": "3589940",
    "end": "3617210"
  },
  {
    "text": "So it's sounds even after you\napply the Fiat-Shamir paradigm",
    "start": "3617210",
    "end": "3622520"
  },
  {
    "text": "to it. Yeah? AUDIENCE: So you're talking\nabout the Hamiltonian path in NP. Is that specific protocol? YAEL KALAI: Yeah.",
    "start": "3622520",
    "end": "3628190"
  },
  {
    "text": "AUDIENCE: And not just\nany zero knowledge? YAEL KALAI: No,\nnot any, not any.",
    "start": "3628190",
    "end": "3633390"
  },
  {
    "text": "There may be zero\nknowledge protocols that you can repeat in\nparallel and zero knowledge--",
    "start": "3633390",
    "end": "3639170"
  },
  {
    "text": "yeah, sorry. Let me clarify. I'm not saying that any\nzero-knowledge protocol,",
    "start": "3639170",
    "end": "3646047"
  },
  {
    "text": "if you repeat it in parallel,\nit's not zero knowledge anymore. I'm not saying that. I'm saying that this specific\nprotocol for graph Hamiltonian,",
    "start": "3646047",
    "end": "3655950"
  },
  {
    "text": "if you repeat this\nprotocol in parallel, it's not going to be zero knowledge.",
    "start": "3655950",
    "end": "3661550"
  },
  {
    "text": "And the reason it's not going to\nbe zero knowledge, which-- this should be really like, what?",
    "start": "3661550",
    "end": "3667200"
  },
  {
    "text": "You should not understand\nwhat I'm saying. Or at least, it\ntakes time to absorb.",
    "start": "3667200",
    "end": "3672520"
  },
  {
    "text": "Or at least, to me, it\ntook time to absorb. The reason it's\nnot zero knowledge",
    "start": "3672520",
    "end": "3678420"
  },
  {
    "text": "is because, actually,\nthis protocol is secure",
    "start": "3678420",
    "end": "3684869"
  },
  {
    "text": "if you apply the Fiat-Shamir--\nit's sound if you apply the Fiat-Shamir paradigm to it.",
    "start": "3684870",
    "end": "3690150"
  },
  {
    "text": "And this is what\nwe'll see next time. So this is weird. Yeah?",
    "start": "3690150",
    "end": "3695280"
  },
  {
    "text": "AUDIENCE: Is this because\nit's not simulatable? Like, you can generate\nit in that order? YAEL KALAI: Exactly, exactly.",
    "start": "3695280",
    "end": "3700329"
  },
  {
    "text": "So why is it not zero knowledge? So what does it mean\nto be zero Knowledge.",
    "start": "3700330",
    "end": "3707640"
  },
  {
    "text": "What's the definition\nof zero knowledge? Zero knowledge says, for\nany V*, you can simulate.",
    "start": "3707640",
    "end": "3714090"
  },
  {
    "text": "But now I'll be the V*\nthat you cannot simulate. My V* star--",
    "start": "3714090",
    "end": "3719619"
  },
  {
    "text": "I'm going to be\na Fiat-Shamir V*. I'm going to compute my beta. I'm V*. I want to learned something.",
    "start": "3719620",
    "end": "3725827"
  },
  {
    "text": "My goal is to learned something. So I don't want to be\nable to simulate you. Then I didn't learn anything. My goal's just to learn.",
    "start": "3725827",
    "end": "3732190"
  },
  {
    "text": "So how do I learn? I'm going to choose my\nbetas as a Fiat-Shamir.",
    "start": "3732190",
    "end": "3737650"
  },
  {
    "text": "I'm going to use the\nFiat-Shamir hash. So you told me it's sound. There's some hash\nfamily that it's sound.",
    "start": "3737650",
    "end": "3743610"
  },
  {
    "text": "Great. I'm going to choose a random\nhash key from this family. And my beta is going\nto be hash of alpha.",
    "start": "3743610",
    "end": "3751710"
  },
  {
    "text": "Now you're saying\nyou can simulate me. For any x, you can\nsimulate to me.",
    "start": "3751710",
    "end": "3757210"
  },
  {
    "text": "If you can simulate\nme for any x, then you should be able\nalso to simulate me",
    "start": "3757210",
    "end": "3762780"
  },
  {
    "text": "for x in the language and\nfor x outside the language. Because you don't know which\nis in and which is out. You're poly bounded.",
    "start": "3762780",
    "end": "3769350"
  },
  {
    "text": "So I want to argue\nthere is no simulator. Let me actually say this slowly.",
    "start": "3769350",
    "end": "3774730"
  },
  {
    "text": "So I'm not going to do this\nround-by-round soundness today. It's not that interesting.",
    "start": "3774730",
    "end": "3779970"
  },
  {
    "text": "But it will come maybe\nto haunt us later. But let me-- it's nicer to do.",
    "start": "3779970",
    "end": "3788349"
  },
  {
    "text": "And we'll just end with that. We have a couple minutes left. We'll just end with that. OK.",
    "start": "3788350",
    "end": "3793812"
  },
  {
    "text": "So, again, next time, we'll\nsee that parallel repetition",
    "start": "3793812",
    "end": "3800130"
  },
  {
    "text": "of this specific protocol\nwith a specific commitment-- with a specific digital safe--",
    "start": "3800130",
    "end": "3807599"
  },
  {
    "text": "is sound when you apply\nthe Fiat-Shamir to it. Now here's the claim.",
    "start": "3807600",
    "end": "3814025"
  },
  {
    "start": "3814025",
    "end": "3819720"
  },
  {
    "text": "Fiat-Shamir soundness implies\nthat it's not zero knowledge.",
    "start": "3819720",
    "end": "3831040"
  },
  {
    "text": " And let me argue that. Let me argue that.",
    "start": "3831040",
    "end": "3836170"
  },
  {
    "text": "So here's the proof.  Suppose it's zero knowledge.",
    "start": "3836170",
    "end": "3841890"
  },
  {
    "text": "OK, so suppose it's wrong. Suppose I'm going to\nget a contradiction. So suppose there exists\na simulator, a PPT.",
    "start": "3841890",
    "end": "3850870"
  },
  {
    "text": "There is an efficient\nsimulator such that-- I'm just copying the definition. Suppose it's zero knowledge.",
    "start": "3850870",
    "end": "3857240"
  },
  {
    "text": "It means that there is an\nefficient simulator such that for any poly size V*, for\nany cheating verifier,",
    "start": "3857240",
    "end": "3870010"
  },
  {
    "text": "and for every x in the\nlanguage, you can simulate.",
    "start": "3870010",
    "end": "3876360"
  },
  {
    "text": "OK. So for every V*,\nfor every x, Sim-- what does Sim do?",
    "start": "3876360",
    "end": "3881950"
  },
  {
    "text": "Sim-- an input x, outputs\nalpha, beta, gamma",
    "start": "3881950",
    "end": "3889420"
  },
  {
    "text": "that are accepted\nwith respect to x. ",
    "start": "3889420",
    "end": "3896218"
  },
  {
    "text": "Because the prover's accepted. He's honest. So the prover is\nalways accepted. You're talking with an honest\nprover that has a witness.",
    "start": "3896218",
    "end": "3903133"
  },
  {
    "text": " So he should also accept.",
    "start": "3903133",
    "end": "3909640"
  },
  {
    "text": "They're indistinguishable. Real and ideal are-- ",
    "start": "3909640",
    "end": "3915063"
  },
  {
    "text": "the real view should be-- this\nis from the simulated view. The real view outputs\nsomething that's accepted,",
    "start": "3915063",
    "end": "3920210"
  },
  {
    "text": "so the simulator should output\nsomething that's accepted. OK.",
    "start": "3920210",
    "end": "3925330"
  },
  {
    "text": "So first, I want to argue, this\nimplies that also for x not",
    "start": "3925330",
    "end": "3932890"
  },
  {
    "text": "in L-- or for random,\nI should say-- or there exists, at least-- ",
    "start": "3932890",
    "end": "3939609"
  },
  {
    "text": "such that Sim and x also\noutputs alpha, beta, gamma",
    "start": "3939610",
    "end": "3950392"
  },
  {
    "text": "that are accepted. So this is accepted. Let me write--",
    "start": "3950392",
    "end": "3955690"
  },
  {
    "text": "I'll write it like-- and so\nthis should also be accepted. Why? ",
    "start": "3955690",
    "end": "3961970"
  },
  {
    "text": "Why? So I want to argue if, for\nevery x in the language,",
    "start": "3961970",
    "end": "3967340"
  },
  {
    "text": "this efficient simulator\nwith oracle access to an efficient verifier\noutputs an expected transcript,",
    "start": "3967340",
    "end": "3975950"
  },
  {
    "text": "there must be at least\none x not in the language so that he outputs\nsomething that's accepting.",
    "start": "3975950",
    "end": "3981230"
  },
  {
    "text": "Because he can't distinguish\nin the language-- it's hard problem,\nand he's efficient. If all the time that it's in the\nlanguage, he outputs accepting,",
    "start": "3981230",
    "end": "3989058"
  },
  {
    "text": "and all the time\nnot in the language, then the simulator\nbroke your language. He broke NP.",
    "start": "3989058",
    "end": "3995060"
  },
  {
    "text": "OK, so that can't be. So there exists x\nnot in the language for which he manages to\ngenerate a transcript that",
    "start": "3995060",
    "end": "4004420"
  },
  {
    "text": "breaks the Fiat-Shamir. Because what does V* do? V*, this means that this\nis hash of x in alpha.",
    "start": "4004420",
    "end": "4019840"
  },
  {
    "text": "That's my V*. My V* applies the Fiat-Shamir. ",
    "start": "4019840",
    "end": "4026890"
  },
  {
    "text": "OK. The V* that I'm interested\nin is the Fiat-Shamir V*.",
    "start": "4026890",
    "end": "4033160"
  },
  {
    "text": "We assumed that the Fiat-Shamir\nis sound with respect to some H.",
    "start": "4033160",
    "end": "4041589"
  },
  {
    "text": "This V* is going to use that H.\nHe's going to choose a random",
    "start": "4041590",
    "end": "4046860"
  },
  {
    "text": "hash key. And that's how he\nchooses the beta. Or a random hash key is fixed.",
    "start": "4046860",
    "end": "4054420"
  },
  {
    "text": "That's it. That's the hash key. It's fixed. Now Sim has to\nuse that hash key. Because otherwise,\nyou can distinguish.",
    "start": "4054420",
    "end": "4061100"
  },
  {
    "text": " So he broke the Fiat-Shamir.",
    "start": "4061100",
    "end": "4068500"
  },
  {
    "text": "That means he cannot simulate. There's no simulator. A simulator will\nbreak the Fiat-Shamir.",
    "start": "4068500",
    "end": "4075049"
  },
  {
    "text": "So it's an interesting--  It was a weird\nstate of the world.",
    "start": "4075050",
    "end": "4080960"
  },
  {
    "text": "Because people\nbelieved, in some sense, that parallel\nzero-knowledge should hold.",
    "start": "4080960",
    "end": "4086220"
  },
  {
    "text": "Why not, eh? You can't learn. What can you learn? Try to learn, eh. But people also learned\nthat Fiat-Shamir is true.",
    "start": "4086220",
    "end": "4092160"
  },
  {
    "text": "But these two are not-- you can't believe both.",
    "start": "4092160",
    "end": "4097818"
  },
  {
    "text": "And it wasn't clear which\none is the right thing. And so now we know-- at\nleast, for this protocol--",
    "start": "4097819",
    "end": "4103368"
  },
  {
    "text": "Fiat-Shamir is true, and\nit's not zero knowledge. Yeah? AUDIENCE: So actually,\nthere is something stronger,",
    "start": "4103369",
    "end": "4108645"
  },
  {
    "text": "like that any non-interactive\nproof cannot be zero knowledge. Is that basically with--",
    "start": "4108645",
    "end": "4113960"
  },
  {
    "text": "YAEL KALAI: Any interactive\nproof which Fiat-Shamir holds cannot be zero knowledge. Exactly.",
    "start": "4113960",
    "end": "4118969"
  },
  {
    "text": "Yeah. AUDIENCE: OK. Because yeah, if you use\na specific instantiation, like hash then it's basically\ncalling him hash [INAUDIBLE].",
    "start": "4118970",
    "end": "4128741"
  },
  {
    "text": "YAEL KALAI: Exactly, exactly. AUDIENCE: There's no interaction\nthat breaks zero knowledge. YAEL KALAI: Yeah. Exactly.",
    "start": "4128742",
    "end": "4134000"
  },
  {
    "text": "AUDIENCE: That's\nwhat the proof I see. YAEL KALAI: Yeah, yeah, yeah. OK, we're out of time.",
    "start": "4134000",
    "end": "4139839"
  }
]