[
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "6266"
  },
  {
    "start": "6266",
    "end": "12059"
  },
  {
    "text": "BERTHOLD HORN: So we've\ntalked about edge detection.",
    "start": "12060",
    "end": "17340"
  },
  {
    "text": "And we've talked\nabout finding objects",
    "start": "17340",
    "end": "22800"
  },
  {
    "text": "in two dimensional images. And, in particular, we\ndiscussed the Pad Quick patent,",
    "start": "22800",
    "end": "30510"
  },
  {
    "text": "which provides an\nefficient way of doing that by building a model based\non some training image",
    "start": "30510",
    "end": "39030"
  },
  {
    "text": "and then using probes to\ncollect evidence about a match",
    "start": "39030",
    "end": "45090"
  },
  {
    "text": "and building a score\nand then looking for extrema in that\nmultidimensional score surface,",
    "start": "45090",
    "end": "54480"
  },
  {
    "text": "where the multiple\ndimensions were the pose-- translation, and rotation,\nscaling, et cetera.",
    "start": "54480",
    "end": "61410"
  },
  {
    "text": "And it was a great\nimprovement over what",
    "start": "61410",
    "end": "67230"
  },
  {
    "text": "came before, which\nwas blob analysis, binary template matching,\nnormalized correlation,",
    "start": "67230",
    "end": "77880"
  },
  {
    "text": "half transform. Well, now we're going to\ntalk about another patent",
    "start": "77880",
    "end": "84040"
  },
  {
    "text": "in that category of\nfinding things in images. And also, here the emphasis\nis more on inspection.",
    "start": "84040",
    "end": "92230"
  },
  {
    "text": "That is-- if you\nread the abstract, it's all about inspection. But, actually, the\npatent also deals",
    "start": "92230",
    "end": "98950"
  },
  {
    "text": "with position and orientation. And what's different\nfrom the previous one",
    "start": "98950",
    "end": "104380"
  },
  {
    "text": "is that the previous one\nquantized the pose space",
    "start": "104380",
    "end": "109570"
  },
  {
    "text": "in order to do a\ncomplete search. And this one assumes\nyou've already got a rough idea of\nwhere things are.",
    "start": "109570",
    "end": "117040"
  },
  {
    "text": "And it's just going\nto improve them. So there's an\nincremental adjustment that will give you a\nvery accurate position.",
    "start": "117040",
    "end": "125170"
  },
  {
    "text": "And you'll be happy\nto know we're not going to go through\nthis in as much detail,",
    "start": "125170",
    "end": "130270"
  },
  {
    "text": "particularly because\nquite a bit of it is based on what\nwe've already done.",
    "start": "130270",
    "end": "136540"
  },
  {
    "text": "So there it is. This one's called PatMax. And Bill Silver says that\nwas motivated by two ideas.",
    "start": "136540",
    "end": "147070"
  },
  {
    "text": "The one was that we're\nmaximizing some kind of energy. It's an iterative approach.",
    "start": "147070",
    "end": "152920"
  },
  {
    "text": "It's a least squares\napproach in a way. And each step, which\nis called an attraction",
    "start": "152920",
    "end": "161500"
  },
  {
    "text": "step in the patent,\nimproves the fit. And then you stop when\nthe fit is good enough.",
    "start": "161500",
    "end": "167800"
  },
  {
    "text": "Or in the preferred embodiment,\nyou stop after four steps.",
    "start": "167800",
    "end": "172960"
  },
  {
    "text": "So that's the idea here. And the other motivation for\nusing that Max was Maxwell.",
    "start": "172960",
    "end": "182349"
  },
  {
    "text": "So he knew about\nelectromagnetics. And his intuition\nfor this approach",
    "start": "182350",
    "end": "192910"
  },
  {
    "text": "was based on forces\nbetween magnetics--",
    "start": "192910",
    "end": "199420"
  },
  {
    "text": "well electrostatic components\nand, in particular, dipoles.",
    "start": "199420",
    "end": "207400"
  },
  {
    "text": "And, well, it turns out that\nintuition is completely wrong",
    "start": "207400",
    "end": "212780"
  },
  {
    "text": "because those do not have the\nproperties he wants in here.",
    "start": "212780",
    "end": "218520"
  },
  {
    "text": "And, in fact, a much better\nanalogy would be springs-- mechanical analog.",
    "start": "218520",
    "end": "224570"
  },
  {
    "text": "So the idea is if you're trying\nto fit two things together and you can identify\ncorresponding parts,",
    "start": "224570",
    "end": "230330"
  },
  {
    "text": "imagine connecting\nthem with a spring, that they'll attract each other. And what the system\nwill do after a while",
    "start": "230330",
    "end": "237230"
  },
  {
    "text": "is minimize the energy. It'll rotate and\ntranslate and do whatever so that the springs\nare as least extended",
    "start": "237230",
    "end": "246500"
  },
  {
    "text": "from their rest position. And we'll explore that\na little bit further. But in the patent, it's\nall about fields and stuff",
    "start": "246500",
    "end": "254030"
  },
  {
    "text": "like that. So the usual stuff-- application, dates,\nand prior patents,",
    "start": "254030",
    "end": "262580"
  },
  {
    "text": "and the inventors, and the\nsignee, and references.",
    "start": "262580",
    "end": "270199"
  },
  {
    "text": "And you'll see here the\nfirst reference is Hough. That's the one we\ntalked about last time.",
    "start": "270200",
    "end": "275970"
  },
  {
    "text": "And then there's a\nwhole abstract, which is mostly about inspection.",
    "start": "275970",
    "end": "282020"
  },
  {
    "text": "But, really, the patent is a\nlarge part about alignment.",
    "start": "282020",
    "end": "291060"
  },
  {
    "text": "And here are more patterns\nand other publications. And if you read through them,\nyou'll see that some of them",
    "start": "291060",
    "end": "298020"
  },
  {
    "text": "are from the old AI Lab. And here's figure one.",
    "start": "298020",
    "end": "304470"
  },
  {
    "text": "So figure one looks a\nlittle bit like a figure we've seen before. There's a training image.",
    "start": "304470",
    "end": "309480"
  },
  {
    "text": "And there's some\ntraining process, which generates a pattern. We called that a model before.",
    "start": "309480",
    "end": "315690"
  },
  {
    "text": "So they purposefully changed the\nterminology to avoid confusion.",
    "start": "315690",
    "end": "320800"
  },
  {
    "text": "So what we call probes before\nare now called dipoles.",
    "start": "320800",
    "end": "326659"
  },
  {
    "text": "But they are the same thing. They're a position and a\ndirection and a weight. So training in the\nprevious patent",
    "start": "326660",
    "end": "335120"
  },
  {
    "text": "meant that we created a model. And the model\nconsists of probes. And the probes are\ncreated by each detection.",
    "start": "335120",
    "end": "343500"
  },
  {
    "text": "So that's training. And similarly,\nhere, training here",
    "start": "343500",
    "end": "348620"
  },
  {
    "text": "is going to be an edge\ndetection process that produces edge dipoles and a\nfield, a two-dimensional vector",
    "start": "348620",
    "end": "357200"
  },
  {
    "text": "field. And that's training. ",
    "start": "357200",
    "end": "363750"
  },
  {
    "text": "Then you have a runtime image. And at runtime, you're\nperforming a attraction process",
    "start": "363750",
    "end": "372870"
  },
  {
    "text": "that iteratively finds\na good pose, assuming",
    "start": "372870",
    "end": "378630"
  },
  {
    "text": "that you have a starting pose. So this one assumes that you\nalready have done something",
    "start": "378630",
    "end": "384750"
  },
  {
    "text": "to get an approximation. For example, you\ncould run Pad Quick. And why iterative?",
    "start": "384750",
    "end": "395480"
  },
  {
    "text": "Well, because it's formulated\nas a least squares problem.",
    "start": "395480",
    "end": "401630"
  },
  {
    "text": "And if we're lucky, the\nleast squares problem has a closed form solution. And in this course, we try\nand set things up that way.",
    "start": "401630",
    "end": "408270"
  },
  {
    "text": "But in the real world, that's\ntypically not the case. And then you solve\nit iteratively.",
    "start": "408270",
    "end": "413630"
  },
  {
    "text": "And so you stop\niterations when you think you have a good enough answer.",
    "start": "413630",
    "end": "420320"
  },
  {
    "text": "So you have a starting pose\nand you have the final pose.",
    "start": "420320",
    "end": "425360"
  },
  {
    "text": "There's also a thing\ncalled a client map. So little detail--\nif you want to work",
    "start": "425360",
    "end": "432680"
  },
  {
    "text": "in a Cartesian\ncoordinate system, well, your pixel positions\nmay not be on a square grid.",
    "start": "432680",
    "end": "444569"
  },
  {
    "text": "So the client map basically\nmaps whatever you've got onto a nice square grid.",
    "start": "444570",
    "end": "451620"
  },
  {
    "text": "And that's important\nbecause a lot of cameras do not have equal\nspacing in x and y.",
    "start": "451620",
    "end": "459350"
  },
  {
    "text": "And then there's\nan RMS error, which you can use to decide whether\nit's a good fit or not.",
    "start": "459350",
    "end": "464729"
  },
  {
    "text": "And since this is\nabout inspection, there are two more\nmeasures which",
    "start": "464730",
    "end": "471349"
  },
  {
    "text": "you can use to decide\nwhether or not the object is",
    "start": "471350",
    "end": "476480"
  },
  {
    "text": "in good shape or not. And we get out\nevaluated things, which",
    "start": "476480",
    "end": "481880"
  },
  {
    "text": "are used in inspection\nin this diagram. OK, let's go on to the next one.",
    "start": "481880",
    "end": "487280"
  },
  {
    "text": "So when I first saw\nthis figure I thought, oh, OK, they forgot to actually\nput anything into this figure.",
    "start": "487280",
    "end": "494000"
  },
  {
    "text": "But that's to illustrate\nthe client map. So suppose your camera has\npixels that are rectangular.",
    "start": "494000",
    "end": "500750"
  },
  {
    "text": "Then you need to map from\nthat to a square pixel array. So just minor detail.",
    "start": "500750",
    "end": "508780"
  },
  {
    "text": "OK, so this is the training. We have a training image. We do the feature\ndetection, edge detection.",
    "start": "508780",
    "end": "516190"
  },
  {
    "text": "There are a bunch\nof parameters that control that, such as the\nresolution you're working at, how far are you\ngoing to downsample?",
    "start": "516190",
    "end": "523630"
  },
  {
    "text": "And it produces a\nfield dipole list, which are basically the\nprobes that we talked about",
    "start": "523630",
    "end": "529360"
  },
  {
    "text": "in the other patent-- position, direction, and\na weight, and maybe more.",
    "start": "529360",
    "end": "535600"
  },
  {
    "text": "But more importantly,\nit produces a field. So the idea is going to\nbe that when you put down",
    "start": "535600",
    "end": "543190"
  },
  {
    "text": "the runtime image, it's\ngoing to have features",
    "start": "543190",
    "end": "548440"
  },
  {
    "text": "that you would like to align\nwith features of the training image.",
    "start": "548440",
    "end": "554410"
  },
  {
    "text": "And they are going to\nbe attracted by features of the training image. So you're going to have\nthis vector field, which",
    "start": "554410",
    "end": "561490"
  },
  {
    "text": "basically tells you how hard to\npull to try and get alignment.",
    "start": "561490",
    "end": "566529"
  },
  {
    "text": "And this is going to happen\nfor all of the features. So there are going to be a\nlot of competing pools, which",
    "start": "566530",
    "end": "572890"
  },
  {
    "text": "hopefully overall produce\nsome coherent result. If your image is\nover to the right,",
    "start": "572890",
    "end": "580240"
  },
  {
    "text": "those field values\nwill be negative and will pull\nthings to the left--",
    "start": "580240",
    "end": "586779"
  },
  {
    "text": "some kind of translation. If your image is\nrotated, then they're going to be field\nvalues that have",
    "start": "586780",
    "end": "595029"
  },
  {
    "text": "directions that are different\nin different quadrants. And overall, will\nhave a talk that",
    "start": "595030",
    "end": "600220"
  },
  {
    "text": "will improve the alignment. So that's the\npurpose of the field.",
    "start": "600220",
    "end": "605380"
  },
  {
    "text": "And that's going to be something\nthat's on the pixel grid. That is going to be--",
    "start": "605380",
    "end": "611230"
  },
  {
    "text": "that's new. That wasn't in the previous one. And that also brings\nup another point,",
    "start": "611230",
    "end": "617210"
  },
  {
    "text": "which is that the pose\nin the previous patent was a mapping from\nthe model to the image",
    "start": "617210",
    "end": "623770"
  },
  {
    "text": "because the model\nhad the probes in it and you plonk the probes\ndown on the runtime image.",
    "start": "623770",
    "end": "629260"
  },
  {
    "text": "Here, we're going to go\nthe other way around. We're going to run feature\ndetection on the runtime image",
    "start": "629260",
    "end": "634480"
  },
  {
    "text": "and map it back to the field. Why? Well, because mapping a\ndiscrete number of things",
    "start": "634480",
    "end": "642940"
  },
  {
    "text": "is much cheaper than\ntransforming a whole image. So in the previous\ncase, we didn't want",
    "start": "642940",
    "end": "648640"
  },
  {
    "text": "to take the runtime image-- and you can rotate\nit and translate it",
    "start": "648640",
    "end": "654130"
  },
  {
    "text": "and make a new image. But, of course, that's a\nvery expensive process. So instead, we took the\ndiscrete thing, the model,",
    "start": "654130",
    "end": "661060"
  },
  {
    "text": "and we mapped it on top of that. Here, we're going the other way. We're having discrete result\nedges from the runtime image.",
    "start": "661060",
    "end": "670450"
  },
  {
    "text": "And we're going to map\nit on top of this field. Now we could, of course, rotate,\ntranslate, scale the field.",
    "start": "670450",
    "end": "676720"
  },
  {
    "text": "But again, that would\nbe very expensive. So the pose here is the other\nway around but the same idea--",
    "start": "676720",
    "end": "684610"
  },
  {
    "text": "mostly translation,\nrotation, and scaling, although they allow for\nother things as well.",
    "start": "684610",
    "end": "691150"
  },
  {
    "text": "OK, the part that's\nnew and interesting is how the field is generated.",
    "start": "691150",
    "end": "697360"
  },
  {
    "text": "And we'll go into\nthat in some detail. There are many steps. And, essentially, the idea\nis to produce something",
    "start": "697360",
    "end": "707810"
  },
  {
    "text": "that will draw you\ntowards the alignment where things in\nthe runtime image",
    "start": "707810",
    "end": "715310"
  },
  {
    "text": "match up with things\nin the training image. This should look very familiar.",
    "start": "715310",
    "end": "722000"
  },
  {
    "text": "That's low level. That's our edge detection\nstuff with some small changes--",
    "start": "722000",
    "end": "728780"
  },
  {
    "text": "left out the\n[INAUDIBLE] thing here. Just assume that you have some\nCartesian to polar conversion--",
    "start": "728780",
    "end": "734899"
  },
  {
    "text": "and then added\nparameters that control the process, because\nin different steps",
    "start": "734900",
    "end": "741230"
  },
  {
    "text": "of the computation, you\nmight want to change things, like how much you\nsubsample the image,",
    "start": "741230",
    "end": "747839"
  },
  {
    "text": "what kind of low-pass\nfilter you use, what method you use for peak\ndetection and interpolation.",
    "start": "747840",
    "end": "753800"
  },
  {
    "text": "But other than that, that's\njust the same old story. ",
    "start": "753800",
    "end": "760700"
  },
  {
    "text": "So in the training image,\nwe compute these dipoles-- field dipoles they're called.",
    "start": "760700",
    "end": "767329"
  },
  {
    "text": "And as I said, they're\njust really edge fragments. And this is the data\nstructure for them.",
    "start": "767330",
    "end": "777050"
  },
  {
    "text": "And there are flags that\ntell you whether you're",
    "start": "777050",
    "end": "782810"
  },
  {
    "text": "near a corner of the object. There are flags\nwhere the contrast",
    "start": "782810",
    "end": "788630"
  },
  {
    "text": "is positive or negative. And there's a\ngradient direction. And, optionally, there's a\nlink to the next field dipole.",
    "start": "788630",
    "end": "800250"
  },
  {
    "text": "So this has to do with\nthe initialization.",
    "start": "800250",
    "end": "805340"
  },
  {
    "text": "So what you do is you have\nthis array, which is going to contain the vector field. And the vectors don't\ncover the whole array.",
    "start": "805340",
    "end": "815140"
  },
  {
    "text": "And the reason is that when you\nget very far away from an edge, it's very unlikely\nthat it really",
    "start": "815140",
    "end": "821889"
  },
  {
    "text": "has anything to do with-- so here you've got an\nedge in the runtime image. And there's a edge in the\ntraining image that's far away.",
    "start": "821890",
    "end": "831400"
  },
  {
    "text": "Your belief that those\ntwo belong together is reduced when\nthey're far away.",
    "start": "831400",
    "end": "836920"
  },
  {
    "text": "So at some point, you just\ncut off and say, forget it. And so there's a part\nof the vector field",
    "start": "836920",
    "end": "845180"
  },
  {
    "text": "which is going to contain\nthese special markers saying terra incognita-- we don't\nknow what's going on here.",
    "start": "845180",
    "end": "852110"
  },
  {
    "text": "So don't have that contribute\nas evidence to the score.",
    "start": "852110",
    "end": "857620"
  },
  {
    "text": "And so you start off, basically,\nby wiping out the whole array and setting that special\nvalue everywhere.",
    "start": "857620",
    "end": "863930"
  },
  {
    "text": "So if you don't get\nto impose a value, that's because you were\ntoo far away from an edge.",
    "start": "863930",
    "end": "870310"
  },
  {
    "text": " And a lot of this low\nlevel stuff is the same.",
    "start": "870310",
    "end": "879060"
  },
  {
    "text": "This, you may remember,\nis all about linking them up into chains and then\nremoving the weak chains--",
    "start": "879060",
    "end": "885300"
  },
  {
    "text": "short weak chains. And so here we have the starting\nvalues imposed on that field.",
    "start": "885300",
    "end": "897070"
  },
  {
    "text": "So we've now taken the pixels\nin the field that directly",
    "start": "897070",
    "end": "902410"
  },
  {
    "text": "correspond to edge points that\nwe know about, field dipoles.",
    "start": "902410",
    "end": "907420"
  },
  {
    "text": "And we've given them a value. And the value corresponds\nto the distance",
    "start": "907420",
    "end": "912579"
  },
  {
    "text": "from the edge and the direction. ",
    "start": "912580",
    "end": "918540"
  },
  {
    "text": "So it's not just an\narray of numbers. There's a direction\nto them and a length. So each of them is\na little two vector.",
    "start": "918540",
    "end": "926640"
  },
  {
    "text": "And so each of these squares\nthat's been filled in has associated with it\none of these field values",
    "start": "926640",
    "end": "936060"
  },
  {
    "text": "that tells you how far\naway you are from the edge. So that's initialization.",
    "start": "936060",
    "end": "942600"
  },
  {
    "text": "And now you have to\nfill in the rest of it. So for squares that are\nanywhere near an edge,",
    "start": "942600",
    "end": "948629"
  },
  {
    "text": "like within four pixels or\nwhatever the threshold is that you pick, you have to\nsomehow figure out how far",
    "start": "948630",
    "end": "955470"
  },
  {
    "text": "away they are from the edge. This is very\nsimilar to something that's used often in machine\nvision called the distance",
    "start": "955470",
    "end": "961440"
  },
  {
    "text": "map, which is a little simpler. So a distance map\nis just an array",
    "start": "961440",
    "end": "966690"
  },
  {
    "text": "that tells you for\nevery pixel how far away it is from an edge.",
    "start": "966690",
    "end": "972620"
  },
  {
    "text": "This is different because\nyou actually give not just the distance but the direction.",
    "start": "972620",
    "end": "977660"
  },
  {
    "text": "But the way you fill\nit in is very similar. So it's an iterative process. You seed it.",
    "start": "977660",
    "end": "983360"
  },
  {
    "text": "You put in the\nactual edge points. And then you go one pixel away--",
    "start": "983360",
    "end": "989510"
  },
  {
    "text": "all the pixels\nthat touch a pixel that's already been filled in. And the question then is, well,\nwhat value do you put there?",
    "start": "989510",
    "end": "998300"
  },
  {
    "text": "Now, if we were using Manhattan\ndistance, where it's just the sum of x and y\ndistances, then you",
    "start": "998300",
    "end": "1005529"
  },
  {
    "text": "could do this accurately. You can always accurately\ncompute incrementally how far",
    "start": "1005530",
    "end": "1013510"
  },
  {
    "text": "something is away from an edge. But since we're using\nEuclidean distance, which",
    "start": "1013510",
    "end": "1018580"
  },
  {
    "text": "makes more sense here,\nthat's actually not trivial. And since in addition,\nwe're using direction, that",
    "start": "1018580",
    "end": "1026109"
  },
  {
    "text": "makes it more complicated also. So here are examples that\nexplain how you compute it.",
    "start": "1026109",
    "end": "1032030"
  },
  {
    "text": "So up there, there's\nan edge, 906.",
    "start": "1032030",
    "end": "1037150"
  },
  {
    "text": "And we've already\nfilled in 901-- that square.",
    "start": "1037150",
    "end": "1042819"
  },
  {
    "text": "We know the vector\nthat goes over to 906. And now we're looking at the\nblock 900 and saying, OK,",
    "start": "1042819",
    "end": "1051380"
  },
  {
    "text": "what do we fill in here? And we should fill in\nsomething because we're touching a pixel that\nhas been filled in--",
    "start": "1051380",
    "end": "1060100"
  },
  {
    "text": "namely 902. And so we can start off with\nthe value of 902 and adjust it.",
    "start": "1060100",
    "end": "1067750"
  },
  {
    "text": "And you can see there's\na bit of geometry there. We can actually figure out\nwhat that distance, 912,",
    "start": "1067750",
    "end": "1074980"
  },
  {
    "text": "is if we know what the distance\n904 is and that angle and so on.",
    "start": "1074980",
    "end": "1080380"
  },
  {
    "text": "I'll bore you the trigonometry. But it's pretty straightforward. Same over there-- we have that\npixel now touching on a corner.",
    "start": "1080380",
    "end": "1090190"
  },
  {
    "text": "But that's still\nconsidered connected. So one of them has\nbeen filled in, namely the pixel 932\nhas a vector, 934,",
    "start": "1090190",
    "end": "1101800"
  },
  {
    "text": "that goes to the edge. And now we're filling\nin the pixel 930 by extending the distance that\nwe have from the other pixel",
    "start": "1101800",
    "end": "1112900"
  },
  {
    "text": "and so on. And so that's the process.",
    "start": "1112900",
    "end": "1117960"
  },
  {
    "text": "And we iterate a number of times\nuntil we decide that now we're",
    "start": "1117960",
    "end": "1124350"
  },
  {
    "text": "so far from the edge that\nit's probably not a good idea to consider these\nedges to match.",
    "start": "1124350",
    "end": "1131700"
  },
  {
    "text": "So we're sort of building-- one way of visualizing\nit, if we forget about the fact that the\nvectors, is as a kind",
    "start": "1131700",
    "end": "1139140"
  },
  {
    "text": "of groove along each edge. So it goes up as you\ngo away from the edge.",
    "start": "1139140",
    "end": "1145860"
  },
  {
    "text": "That's the distance map. So the distance map is this\nterrain, which at any place",
    "start": "1145860",
    "end": "1151530"
  },
  {
    "text": "tells you how far you\nare from the edge. And now when you plunk down an\nedge from the runtime image,",
    "start": "1151530",
    "end": "1158429"
  },
  {
    "text": "you want it to, by\ngravity, get pushed down, to run down the slope.",
    "start": "1158430",
    "end": "1164220"
  },
  {
    "text": "Now, with one edge,\nof course, it'll just run through the bottom. But with lots of\nedges, they're all going to have their own\nlocal influence of where",
    "start": "1164220",
    "end": "1172080"
  },
  {
    "text": "they should go. And hopefully, it'll\nbe somewhat connected",
    "start": "1172080",
    "end": "1177780"
  },
  {
    "text": "so that you end up with\nthe whole system settling into a lower energy state.",
    "start": "1177780",
    "end": "1183120"
  },
  {
    "text": "And this is just slightly\nmore sophisticated because we actually have a\ndirection not just a height.",
    "start": "1183120",
    "end": "1189615"
  },
  {
    "text": " And then it gets\nmore interesting when we get to\nplaces where there's",
    "start": "1189615",
    "end": "1198149"
  },
  {
    "text": "a collision, where we\nhave information from more than one neighboring pixel.",
    "start": "1198150",
    "end": "1203909"
  },
  {
    "text": "And if they are\nsimilar enough, then you can take some kind\nof weighted average,",
    "start": "1203910",
    "end": "1212310"
  },
  {
    "text": "try and improve the\nresult. It's always noisy.",
    "start": "1212310",
    "end": "1217590"
  },
  {
    "text": "So if you get more\nthan one answer, you can improve things\nby combining them.",
    "start": "1217590",
    "end": "1222930"
  },
  {
    "text": "But when the angles\nget too large, then you have to say,\nwell, that's not--",
    "start": "1222930",
    "end": "1229590"
  },
  {
    "text": "there's a problem. We're at a corner. So here's an example of the\nfirst step after seeding.",
    "start": "1229590",
    "end": "1236370"
  },
  {
    "text": "So we've seeded it with the\nedges that are in there. And now we've extended it\nby going one pixel away",
    "start": "1236370",
    "end": "1242700"
  },
  {
    "text": "from those seeds. And each of those\nvectors is the force. And it tells you how far you are\nfrom the edge and the direction",
    "start": "1242700",
    "end": "1253760"
  },
  {
    "text": "to the edge. And in the process,\nwe'll end up looking",
    "start": "1253760",
    "end": "1260809"
  },
  {
    "text": "at points on the\nedge that are not the original points\nfrom edge detection,",
    "start": "1260810",
    "end": "1265820"
  },
  {
    "text": "just as in the other\ncase, we started off with points on a grid that were\nproduced by that edge detection",
    "start": "1265820",
    "end": "1272909"
  },
  {
    "text": "step. But then we interpolated\nour own points because we wanted\na certain number",
    "start": "1272910",
    "end": "1278510"
  },
  {
    "text": "of points per unit distance. They're not necessarily\nbased on the pixel spacing. Similarly here, the\ntips of these arrows",
    "start": "1278510",
    "end": "1286160"
  },
  {
    "text": "don't point at the\noriginal edge pixels. They point somewhere else. And we record that.",
    "start": "1286160",
    "end": "1292200"
  },
  {
    "text": "Now, for some purposes,\nthe vector field is the force, is all you use.",
    "start": "1292200",
    "end": "1298970"
  },
  {
    "text": "But they also\noptionally allow you to record more information, such\nas what is the closest field",
    "start": "1298970",
    "end": "1308240"
  },
  {
    "text": "dipole. So then you have\noptions on matching.",
    "start": "1308240",
    "end": "1315370"
  },
  {
    "text": "Now, here there are\nno conflicts yet. And now we've taken\nthe next step.",
    "start": "1315370",
    "end": "1323020"
  },
  {
    "text": "We've moved outwards-- again,\none pixel from where we were. And we filled in\nanother bunch of pixels",
    "start": "1323020",
    "end": "1329470"
  },
  {
    "text": "now with longer\nvectors, larger force. Because we are further\naway from the destination,",
    "start": "1329470",
    "end": "1335620"
  },
  {
    "text": "there should be a larger pull. It's a little bit like a spring. We're pulling more when the\nmatch is over a bigger gap.",
    "start": "1335620",
    "end": "1345040"
  },
  {
    "text": "And the x marks the first\nplace where there's a conflict, because we could have\nextended this vector here",
    "start": "1345040",
    "end": "1354700"
  },
  {
    "text": "to fill in this pixel. Or we could have\nextended this one. And they obviously have\nvery different ideas",
    "start": "1354700",
    "end": "1362530"
  },
  {
    "text": "about where the edges. And so we mark that\nas a corner position, which will then be\nnot contributing",
    "start": "1362530",
    "end": "1369820"
  },
  {
    "text": "to the process later. So you don't want to just\nblindly use this map.",
    "start": "1369820",
    "end": "1376930"
  },
  {
    "text": "You want additional information. And that additional information\ncould be a contrast direction.",
    "start": "1376930",
    "end": "1383960"
  },
  {
    "text": "So that's the simplest one. Or you might actually look at\nthe directions of the vectors.",
    "start": "1383960",
    "end": "1389840"
  },
  {
    "text": "How close is the\nruntime gradient match up with the direction\nof the vector in the field?",
    "start": "1389840",
    "end": "1397940"
  },
  {
    "text": "Or how close is the\ndirection of the gradient in the runtime\nimage with the nearest field",
    "start": "1397940",
    "end": "1405230"
  },
  {
    "text": "dipole gradient, because\nwhen you get over here, that direction may be\ndifferent from this one.",
    "start": "1405230",
    "end": "1411030"
  },
  {
    "text": "So they leave open\nall of these options.",
    "start": "1411030",
    "end": "1416360"
  },
  {
    "text": "And the process is\ngoing to be the same. You're trying to minimize\nthe energy in the system.",
    "start": "1416360",
    "end": "1421470"
  },
  {
    "text": "And you can see\nhow this is better model with the mechanical\nsystem where you have springs.",
    "start": "1421470",
    "end": "1427270"
  },
  {
    "text": "So suppose you know that\nthere's a runtime typo here",
    "start": "1427270",
    "end": "1433510"
  },
  {
    "text": "that matches this model dipole.",
    "start": "1433510",
    "end": "1439690"
  },
  {
    "text": "Then you can think of as\nbeing a spring between the two with zero rest length.",
    "start": "1439690",
    "end": "1446230"
  },
  {
    "text": "So that when you pull it\nout, it'll want to shorten.",
    "start": "1446230",
    "end": "1451390"
  },
  {
    "text": "And so the minimum energy\nstate is the solution.",
    "start": "1451390",
    "end": "1457450"
  },
  {
    "text": "The one thing to keep\nin mind is that as we've mentioned many, many times. With an edge, often,\nwe know accurately",
    "start": "1457450",
    "end": "1465370"
  },
  {
    "text": "how things work in one\ndirection and not the other. So over here when we're talking\nabout a match with an edge,",
    "start": "1465370",
    "end": "1473769"
  },
  {
    "text": "we can't really say that we\nare matching a particular point on the edge.",
    "start": "1473770",
    "end": "1479350"
  },
  {
    "text": "We just know that it's\nmatching that edge. And so the idea of the spring\nisn't also completely accurate.",
    "start": "1479350",
    "end": "1488870"
  },
  {
    "text": "What we'd really want is a\nslightly more sophisticated model that has a little carriage\nthat can run along the edge.",
    "start": "1488870",
    "end": "1496360"
  },
  {
    "text": "So there's a spring, yes. But we don't really care where\nthe other end of it goes.",
    "start": "1496360",
    "end": "1503200"
  },
  {
    "text": "So we could have a\nlittle mechanical device that can slide along the edge. And so that mechanical\nanalog is basically",
    "start": "1503200",
    "end": "1512170"
  },
  {
    "text": "the actual algorithm,\nnot dipoles and electrostatic fields\nand stuff like that,",
    "start": "1512170",
    "end": "1520360"
  },
  {
    "text": "even though that's the\nlanguage used in the patent. OK, so we talked about how\nto get the training image.",
    "start": "1520360",
    "end": "1528139"
  },
  {
    "text": "Now we use it. We have the runtime image. We do the feature detection\non the runtime image.",
    "start": "1528140",
    "end": "1535580"
  },
  {
    "text": "That produces an\nimage dipole list. We plunk it down on\ntop of the field.",
    "start": "1535580",
    "end": "1541880"
  },
  {
    "text": "And that creates many,\nmany little forces--",
    "start": "1541880",
    "end": "1547280"
  },
  {
    "text": "one for every feature\nthat we detected. And they are going\nto adjust the pose.",
    "start": "1547280",
    "end": "1555020"
  },
  {
    "text": "Now, in the simplest case,\nif we only have translation, it's easy to visualize this.",
    "start": "1555020",
    "end": "1561320"
  },
  {
    "text": "If the runtime image is off to\nthe right of the model image, it's going to get\npulled back to the left",
    "start": "1561320",
    "end": "1567980"
  },
  {
    "text": "because all of the springs\nare extend it to the right. So that's very\neasy to visualize.",
    "start": "1567980",
    "end": "1573080"
  },
  {
    "text": "If it's rotated, it's a little\nbit harder to visualize. But again, you're stretching\nthe springs out now",
    "start": "1573080",
    "end": "1579470"
  },
  {
    "text": "tangent to a circle\nrather than radially. And they're all pulling\nin the same direction,",
    "start": "1579470",
    "end": "1585600"
  },
  {
    "text": "either clockwise\nor anti-clockwise. And so the equilibrium\nposition is when you've let it that\nmechanical system go and adjust",
    "start": "1585600",
    "end": "1597500"
  },
  {
    "text": "itself. We can think of size\nin a similar way, where",
    "start": "1597500",
    "end": "1602750"
  },
  {
    "text": "if the size is wrong-- suppose\nthat the runtime image is bigger than the model image.",
    "start": "1602750",
    "end": "1607940"
  },
  {
    "text": "Well, all of the\nsprings are going to be stretched outwards\nand by an amount that increases with radius.",
    "start": "1607940",
    "end": "1615049"
  },
  {
    "text": "And, again, that system\nwill adjust itself by scaling the transformation\nuntil those springs are",
    "start": "1615050",
    "end": "1624410"
  },
  {
    "text": "relaxed. And I guess in this\npatent, the emphasis is on what do you do then.",
    "start": "1624410",
    "end": "1631460"
  },
  {
    "text": "And you compute\nclutter and coverage, which are measures of how\ngood the runtime image matches",
    "start": "1631460",
    "end": "1637429"
  },
  {
    "text": "the model and how good the\nmodel matches the runtime image. And there are various ways\nof evaluating the result.",
    "start": "1637430",
    "end": "1647450"
  },
  {
    "text": "Ideally, the coverage will be\n100% and the clutter will be 0. ",
    "start": "1647450",
    "end": "1655240"
  },
  {
    "text": "OK, this is more about how the\nimage dipole gets attracted to the pattern boundary.",
    "start": "1655240",
    "end": "1661855"
  },
  {
    "start": "1661855",
    "end": "1671750"
  },
  {
    "text": "So, overall, we're setting up\na large least square system.",
    "start": "1671750",
    "end": "1678110"
  },
  {
    "text": "So we're saying that\neach runtime dipole",
    "start": "1678110",
    "end": "1683900"
  },
  {
    "text": "has a certain force exerted\non it in a certain direction. And we are going to move all\nof them in a systematic way",
    "start": "1683900",
    "end": "1693410"
  },
  {
    "text": "to try and reduce the\ntension, to reduce the energy in the system. And, typically, the\nmovement allowed",
    "start": "1693410",
    "end": "1701600"
  },
  {
    "text": "will be translation, rotation,\nand scaling in this case. So if you write it all out,\nit's a huge least square system.",
    "start": "1701600",
    "end": "1711620"
  },
  {
    "text": "And there's no\nclosed form solution. But there's a natural\nway of computing it",
    "start": "1711620",
    "end": "1719090"
  },
  {
    "text": "which involves a\nbunch of accumulators. So let's see if we get there.",
    "start": "1719090",
    "end": "1727030"
  },
  {
    "text": "This goes on and\non for a long time. So this is the\naccumulator array,",
    "start": "1727030",
    "end": "1736270"
  },
  {
    "text": "which is basically the upper\ntriangle of a symmetric matrix.",
    "start": "1736270",
    "end": "1743110"
  },
  {
    "text": "So with a symmetric\nmatrix, we only need to keep the diagonal\nand everything to one side.",
    "start": "1743110",
    "end": "1748480"
  },
  {
    "text": "And these are sums of-- so W is the weight. We already talked\nabout assigning weights",
    "start": "1748480",
    "end": "1755050"
  },
  {
    "text": "based on various\nproperties that might indicate whether a match is\nparticularly good or not.",
    "start": "1755050",
    "end": "1761980"
  },
  {
    "text": "And then positions\nin the image-- and so these are all what\nwe call moments, things",
    "start": "1761980",
    "end": "1769180"
  },
  {
    "text": "like the integral of something\ntimes x to the i times y to the j.",
    "start": "1769180",
    "end": "1774340"
  },
  {
    "text": "So you can see that we\nneed quite a bunch of them. I forget.",
    "start": "1774340",
    "end": "1779500"
  },
  {
    "text": "I think the matrix is 6 by 6. It depends on how many\ndegrees of freedom you allow. If you allow translation,\nrotation, and scaling,",
    "start": "1779500",
    "end": "1786910"
  },
  {
    "text": "it's, I guess, 4. But if you allow for all 6\nof the general affine linear",
    "start": "1786910",
    "end": "1793840"
  },
  {
    "text": "transformation, then it'll be 6.  And so you run\nthrough the image.",
    "start": "1793840",
    "end": "1801665"
  },
  {
    "text": "And, of course, you can\nactually do it in parallel, if you're so inclined\nbecause they don't interact. You're just collecting evidence\neverywhere and adding it up.",
    "start": "1801665",
    "end": "1809610"
  },
  {
    "text": "And it produces\nan overall force. And then you adjust.",
    "start": "1809610",
    "end": "1815070"
  },
  {
    "text": "So, again, as I\nmentioned, I'm not going to go into as much detail\nhere as in the other patent.",
    "start": "1815070",
    "end": "1823230"
  },
  {
    "text": "So these are simple cases. So the top one here\nis translation only.",
    "start": "1823230",
    "end": "1829620"
  },
  {
    "text": "And this one is\ntranslation and rotation. Don't be scared by tensor.",
    "start": "1829620",
    "end": "1837299"
  },
  {
    "text": "As far as the\npatent is concerned, the tensor is just a\nmultidimensional array, including array with one\ndimension or two dimensions",
    "start": "1837300",
    "end": "1848320"
  },
  {
    "text": "and so on. So it builds up to allow more\nand more degrees of freedom",
    "start": "1848320",
    "end": "1859170"
  },
  {
    "text": "and emotional results. And that's not the end\nof it, because it's assuming-- it's locally\nlinearized about",
    "start": "1859170",
    "end": "1865950"
  },
  {
    "text": "the current operating point. So you don't get\nthe final solution to the least squares problem.",
    "start": "1865950",
    "end": "1872100"
  },
  {
    "text": "But you get a large improvement. And in the preferred\nembodiment, after four steps,",
    "start": "1872100",
    "end": "1878160"
  },
  {
    "text": "it's good enough. But of course, you\ncan use any criteria you like for termination.",
    "start": "1878160",
    "end": "1883920"
  },
  {
    "text": " Let's see if there are\nany others here that--",
    "start": "1883920",
    "end": "1890140"
  },
  {
    "text": "here's an interesting detail. There's a doubly linked list. So the field dipoles\nmake it easy to move",
    "start": "1890140",
    "end": "1897809"
  },
  {
    "text": "in either direction\nalong the edge because they are represented\nin the W linked list.",
    "start": "1897810",
    "end": "1902955"
  },
  {
    "text": " So here's multiscale.",
    "start": "1902955",
    "end": "1908200"
  },
  {
    "text": "So for speed, it's good to work\nat low resolution and get an--",
    "start": "1908200",
    "end": "1915909"
  },
  {
    "text": "so you have a starting pose. And then you get a low\nresolution pose at high speed",
    "start": "1915910",
    "end": "1923710"
  },
  {
    "text": "using a low resolution\ntrained patent. And then you use that\nas a starting pose",
    "start": "1923710",
    "end": "1929170"
  },
  {
    "text": "for the high resolution stage. So they only show\ntwo stages of this.",
    "start": "1929170",
    "end": "1936669"
  },
  {
    "text": "You could do more. And also in this\ncase, you don't need",
    "start": "1936670",
    "end": "1942700"
  },
  {
    "text": "as high quality starting\npose as you do if you just have one stage of this process.",
    "start": "1942700",
    "end": "1948039"
  },
  {
    "start": "1948040",
    "end": "1953850"
  },
  {
    "text": "Lots of flow charts. Let's see. Was there anything in here\nI wanted to point out?",
    "start": "1953850",
    "end": "1960690"
  },
  {
    "text": "This is fun to\nread because you're thinking of an image\nof, I don't know, a printed circuit\nboard or something.",
    "start": "1960690",
    "end": "1967320"
  },
  {
    "text": "\"Digital images are\nformed by many devices and used for many\npractical purposes. Devices include TV\ncameras operating on",
    "start": "1967320",
    "end": "1973649"
  },
  {
    "text": "visible or infrared light,\nline scan sensors, flying spot scanners, electron microscope,\nX-ray devices, including",
    "start": "1973650",
    "end": "1980010"
  },
  {
    "text": "CT scanners, magnetic\nresonance images, and others are found in\nindustrial automation,",
    "start": "1980010",
    "end": "1986520"
  },
  {
    "text": "medical diagnosis, satellite\nimaging,\" blah, blah, blah. So that's just the lawyer trying\nto generalize this as much",
    "start": "1986520",
    "end": "1992970"
  },
  {
    "text": "as possible. So if afterwards\nyou say, oh, but I didn't use it for looking at\na conveyor belt, they can say,",
    "start": "1992970",
    "end": "1999160"
  },
  {
    "text": "well, it doesn't say you\nneed to restrict it to that. And it explains the problems\nwith previous methods",
    "start": "1999160",
    "end": "2008750"
  },
  {
    "text": "and why this is the best\nthing since sliced bread. And then it gives\nall the details.",
    "start": "2008750",
    "end": "2014865"
  },
  {
    "text": "And then finally you\nget to the claims. Let's just take a quick\nlook of the claims. ",
    "start": "2014865",
    "end": "2021380"
  },
  {
    "text": "Oh, here we go. What is claimed is geometric\npattern matching method for refining an estimate\nof a true pose of an object",
    "start": "2021380",
    "end": "2028519"
  },
  {
    "text": "in a runtime image,\nthe method comprising-- and then it has these parts--",
    "start": "2028520",
    "end": "2033950"
  },
  {
    "text": "generating a low-resolution\nmodel pattern and so on. It's interesting how this\nfirst claim doesn't actually",
    "start": "2033950",
    "end": "2040700"
  },
  {
    "text": "say much at all\nabout the method. So it doesn't give details. So it's very broad.",
    "start": "2040700",
    "end": "2046310"
  },
  {
    "text": "And it's likely to be\nknocked down if there ever was a dispute because receiving\na runtime image-- well, just",
    "start": "2046310",
    "end": "2056000"
  },
  {
    "text": "about anything is going to\nreceive a runtime image. Using a low-resolution\nmodel pattern,",
    "start": "2056000",
    "end": "2061219"
  },
  {
    "text": "blah, blah, blah--\nwell, multiscale. Everyone does\nmultiscale-- and so on.",
    "start": "2061219",
    "end": "2066230"
  },
  {
    "text": "So this is very, very general,\ntrying to cover everything. And the downside of it is that\nif someone ever challenges it,",
    "start": "2066230",
    "end": "2074030"
  },
  {
    "text": "it's probably going to\nbe covered by prior art. And that's why you have\nall the dependent claims.",
    "start": "2074030",
    "end": "2079349"
  },
  {
    "text": "So claim one is very general. If you're lucky, it'll\ncover everything. But there's a good chance\nof being knocked down.",
    "start": "2079350",
    "end": "2085820"
  },
  {
    "text": "So then you have\nclaim two, which is dependent on\nclaim one, and also includes producing a\nlow-resolution error value,",
    "start": "2085820",
    "end": "2092989"
  },
  {
    "text": "producing a low-resolution\naggregate clutter value, and producing a low-resolution\naggregate coverage value.",
    "start": "2092989",
    "end": "2098859"
  },
  {
    "text": "So those are all the\nvalues used in inspection. And then three is\ndependent on one",
    "start": "2098860",
    "end": "2105590"
  },
  {
    "text": "wherein the\nlow-resolution error value is a low-resolution\nroot-mean-square error value.",
    "start": "2105590",
    "end": "2110819"
  },
  {
    "text": "So you could use sum of\nabsolute values instead. But this one specifically\nsays root-mean-square.",
    "start": "2110820",
    "end": "2117080"
  },
  {
    "text": "And then four depends\non two and so on. And this one has an\ninordinate number of claims.",
    "start": "2117080",
    "end": "2123020"
  },
  {
    "text": "It' goes all the way down to 55. But that's probably all we\nwant to know about that,",
    "start": "2123020",
    "end": "2132550"
  },
  {
    "text": "unlike the Pad Quick-- so Pad Quick, it searched\na complete polar space,",
    "start": "2132550",
    "end": "2139540"
  },
  {
    "text": "admittedly at low resolution. So it didn't need to\nhave a first guess.",
    "start": "2139540",
    "end": "2145270"
  },
  {
    "text": "This one does require\na first guess. And it has a capture range. That is there's a\nregion in polar space",
    "start": "2145270",
    "end": "2152530"
  },
  {
    "text": "where, if you plunk down the\ninitial value of somewhere in that region, it will end up\ngiving you the result you want.",
    "start": "2152530",
    "end": "2162400"
  },
  {
    "text": "Then we mentioned that the pose\nhere is the other way around. And that's for\ncomputational reasons.",
    "start": "2162400",
    "end": "2169150"
  },
  {
    "text": "We don't want to\ntransform a whole array of either gray values, edge\nvalues, or whatever, or fields.",
    "start": "2169150",
    "end": "2177220"
  },
  {
    "text": "So it's the other way\naround from Pad Quick.",
    "start": "2177220",
    "end": "2182950"
  },
  {
    "text": "And if you read it,\nthere's a repeated emphasis",
    "start": "2182950",
    "end": "2189609"
  },
  {
    "text": "on how they're trying\nto avoid thresholding. They're trying to\navoid quantization",
    "start": "2189610",
    "end": "2197109"
  },
  {
    "text": "at the pixel level. So everything is subpixel. And I think part of\nthat is to illustrate",
    "start": "2197110",
    "end": "2204880"
  },
  {
    "text": "the quality of the\nresult you can expect and partly to avoid prior art\nbecause the prior art was all",
    "start": "2204880",
    "end": "2212200"
  },
  {
    "text": "pretty much pixel\nbased and wasn't accurate to subpixel accuracy.",
    "start": "2212200",
    "end": "2218420"
  },
  {
    "text": "Then there's a\nphysical analog, which, as I mentioned, calling these\nthings dipoles is misguided.",
    "start": "2218420",
    "end": "2225260"
  },
  {
    "text": "I mean, do you know what the\nlaw is between two dipoles? I mean, it's a mess\nbecause it depends on",
    "start": "2225260",
    "end": "2233060"
  },
  {
    "text": "not just the\nseparation between them but the angle and\norientation in free space.",
    "start": "2233060",
    "end": "2239030"
  },
  {
    "text": "Plus, forget dipoles. Think of just\nelectrostatic charges. Well, if you bring\nthem together,",
    "start": "2239030",
    "end": "2245309"
  },
  {
    "text": "you have an infinite\namount of energy. There's a singularity. And so, wait, we're bringing\nthese things together,",
    "start": "2245310",
    "end": "2251780"
  },
  {
    "text": "the runtime edges on top\nof the training edges? So there's a singularity. So that doesn't work.",
    "start": "2251780",
    "end": "2257180"
  },
  {
    "text": "But the mechanical\nanalog works very well. It's exactly what\nthey implemented.",
    "start": "2257180",
    "end": "2263359"
  },
  {
    "text": "And it involves springs\nwith that one little change that the springs have to be--\none end of the spring has to be",
    "start": "2263360",
    "end": "2270140"
  },
  {
    "text": "able to slide on the edge. So let's see.",
    "start": "2270140",
    "end": "2275460"
  },
  {
    "text": "Description not tied\nto the pixel grid. And I guess we've been over\nwhat exactly the field is",
    "start": "2275460",
    "end": "2285690"
  },
  {
    "text": "and the optional\nadditional items. OK, then how it use\nstarting evidence--",
    "start": "2285690",
    "end": "2293080"
  },
  {
    "text": "so we collect evidence, as\nbefore, about whether this is a good alignment or not.",
    "start": "2293080",
    "end": "2300829"
  },
  {
    "text": "And they have different\nways of assigning weights and that there's this\nkind of threshold.",
    "start": "2300830",
    "end": "2307700"
  },
  {
    "text": "If you're too far\naway from the edge, then you don't know\nwhat's going on.",
    "start": "2307700",
    "end": "2313310"
  },
  {
    "text": "And there's a kind of\nunpleasant discontinuity",
    "start": "2313310",
    "end": "2318580"
  },
  {
    "text": "there, where you\npull the spring out. And up to a certain\nseparation, it",
    "start": "2318580",
    "end": "2323973"
  },
  {
    "text": "gets stronger and\nstronger and stronger. And then suddenly, it breaks. So that is one reason that\nyou can't find a closed form",
    "start": "2323973",
    "end": "2334089"
  },
  {
    "text": "solution, because it's\na nonlinear problem. It's not a simple linear\nleast squares problem.",
    "start": "2334090",
    "end": "2339500"
  },
  {
    "text": "And so they don't\nreally address that. There's some argument about\nsome kind of fuzzy logic thing,",
    "start": "2339500",
    "end": "2350450"
  },
  {
    "text": "but it's not really pursued. And apparently, in practice,\nit's not a big issue.",
    "start": "2350450",
    "end": "2357590"
  },
  {
    "text": "Now, this maximum distance that\nyou allow for the separation",
    "start": "2357590",
    "end": "2367190"
  },
  {
    "text": "should depend on how close\nyou are to the answer. And so it should depend on\nwhat stage of the iteration",
    "start": "2367190",
    "end": "2373330"
  },
  {
    "text": "you're at. So as you iterate, you\nget closer and closer to having the runtime image\naligned with the model image.",
    "start": "2373330",
    "end": "2380000"
  },
  {
    "text": "And so at some point, it just\nshould be pretty well aligned.",
    "start": "2380000",
    "end": "2386670"
  },
  {
    "text": "And so you can cut\noff at a lower value. So the field is a fixed thing. And it has a cut off.",
    "start": "2386670",
    "end": "2393109"
  },
  {
    "text": "But then during\nthe iteration, you can additionally\nthrow out matches",
    "start": "2393110",
    "end": "2398180"
  },
  {
    "text": "that have too large a distance\nbetween the runtime edge.",
    "start": "2398180",
    "end": "2404839"
  },
  {
    "text": "the",
    "start": "2404840",
    "end": "2410000"
  },
  {
    "text": "Talks lead to rotation. Forces lead to translation.",
    "start": "2410000",
    "end": "2415740"
  },
  {
    "text": "So the matching,\nthe inspection-- it's kind of a weird pattern\nin that the abstract is",
    "start": "2415740",
    "end": "2421760"
  },
  {
    "text": "all about inspection. But then you read\nthe specification, it's all about figuring out\nwhat the transformation is.",
    "start": "2421760",
    "end": "2427910"
  },
  {
    "text": "So the inspection part, sort\nof tagged on at the end,",
    "start": "2427910",
    "end": "2433250"
  },
  {
    "text": "is based on two things. The one missing features. There are things that are in\nthe trained image that have",
    "start": "2433250",
    "end": "2439490"
  },
  {
    "text": "no match in the runtime image-- and on extra features, things\nthat are in the runtime image",
    "start": "2439490",
    "end": "2445280"
  },
  {
    "text": "that are not in the pattern. And depending on\nwhat you are doing, one of those two\nmeasures will help",
    "start": "2445280",
    "end": "2452300"
  },
  {
    "text": "you decide whether the object\npasses the inspection or not. There's also the\nnotion of clutter,",
    "start": "2452300",
    "end": "2458900"
  },
  {
    "text": "which are image dipoles\nwith low weight, presumably things due to the\nbackground texture and so on.",
    "start": "2458900",
    "end": "2465740"
  },
  {
    "text": " Multiscale-- blah, blah, blah.",
    "start": "2465740",
    "end": "2471753"
  },
  {
    "text": "We've seen that. OK, the only part\nwe really haven't-- well, we have sort\nof gone through it in the diagrams, which is\nthe generation of the field.",
    "start": "2471753",
    "end": "2481040"
  },
  {
    "text": "Let's talk a little\nbit about that. And let me start off by talking\nabout the simplified version,",
    "start": "2481040",
    "end": "2489130"
  },
  {
    "text": "where we just have distance. So what does that look like?",
    "start": "2489130",
    "end": "2500850"
  },
  {
    "text": " So suppose that I\nhave a single point.",
    "start": "2500850",
    "end": "2507869"
  },
  {
    "text": "And there's no\ndirectionality to it. Then distance field,\nof course, is just",
    "start": "2507870",
    "end": "2513030"
  },
  {
    "text": "a set of concentric circles. ",
    "start": "2513030",
    "end": "2520370"
  },
  {
    "text": "And then suppose\nthat I have a circle. So I have some edge that\ngoes around in a circle.",
    "start": "2520370",
    "end": "2527510"
  },
  {
    "text": "Well, then, of course,\nthe distance field is just a bunch of\ncircles, except now we're",
    "start": "2527510",
    "end": "2534200"
  },
  {
    "text": "going inwards as well.  And then if I have an edge,\nit's going to look like that.",
    "start": "2534200",
    "end": "2548000"
  },
  {
    "text": "And it gets interesting\nwhen I have a corner. So if I have a corner-- ",
    "start": "2548000",
    "end": "2567160"
  },
  {
    "text": "and then on the interior-- ",
    "start": "2567160",
    "end": "2574079"
  },
  {
    "text": "so in computing this, everything\nis nice and cozy, except right",
    "start": "2574080",
    "end": "2581670"
  },
  {
    "text": "in the corner. Different things happen there. And so that's a\npotential problem",
    "start": "2581670",
    "end": "2588240"
  },
  {
    "text": "with straightforward simple\nmethods of filling this in.",
    "start": "2588240",
    "end": "2593650"
  },
  {
    "text": "Now, we are not working\nin the continuous world. So we're working in\na discrete world. ",
    "start": "2593650",
    "end": "2601260"
  },
  {
    "text": "And so we have to figure out\nhow to propagate these values.",
    "start": "2601260",
    "end": "2606410"
  },
  {
    "text": "And, as I mentioned, if we\nwere working with Manhattan distance, it would\nbe simple because we can add up the changes in\nx and the changes in y.",
    "start": "2606410",
    "end": "2614720"
  },
  {
    "text": "And we'd always have\nan accurate result. So if this one is\none of the features,",
    "start": "2614720",
    "end": "2622040"
  },
  {
    "text": "then this is one away. That's one away. That's two away. ",
    "start": "2622040",
    "end": "2635349"
  },
  {
    "text": "So Manhattan distance\nis very easy. Euclidean is not.",
    "start": "2635350",
    "end": "2640510"
  },
  {
    "text": "And there's actually\na whole bunch of papers on how to do Euclidean\nin an approximate way that's",
    "start": "2640510",
    "end": "2650560"
  },
  {
    "text": "still good enough and\nis also very fast. I mean, you can always do it\nthe slow way by, basically--",
    "start": "2650560",
    "end": "2660860"
  },
  {
    "text": "if you add a pixel, look\nat all of the other pixels and see which one is the\nclosest and calculate",
    "start": "2660860",
    "end": "2667240"
  },
  {
    "text": "the square root of the delta x\nsquared plus delta y squared. But, of course,\nthat's very expensive.",
    "start": "2667240",
    "end": "2672370"
  },
  {
    "text": "What you want to do\nis incrementally, as you fill in this\ndistance field,",
    "start": "2672370",
    "end": "2677859"
  },
  {
    "text": "just add another\nlayer of pixels to it. So we won't talk about those.",
    "start": "2677860",
    "end": "2684190"
  },
  {
    "text": "But just to know that that's\none of those problems, like, what's a good\nway of sorting?",
    "start": "2684190",
    "end": "2691030"
  },
  {
    "text": "There's this problem of\nwhat's a good way of computing the distance transform. ",
    "start": "2691030",
    "end": "2698990"
  },
  {
    "text": "And, as I mentioned, in our\ncase, we actually have vectors. And the figures in the\npatent make it pretty clear",
    "start": "2698990",
    "end": "2708540"
  },
  {
    "text": "what to do. I mean, the equations are messy. But the figures pretty\nclearly tell you what to do.",
    "start": "2708540",
    "end": "2715360"
  },
  {
    "text": "OK. Then we have all of these\nlittle local forces. And we talked about\nadding them up.",
    "start": "2715360",
    "end": "2722110"
  },
  {
    "text": "So one thing we can do is-- ",
    "start": "2722110",
    "end": "2734200"
  },
  {
    "text": "so the Fi's are forces\nat individual dipoles",
    "start": "2734200",
    "end": "2740770"
  },
  {
    "text": "in the runtime image. And the Wi's are weights. And the weights can\nbe all sorts of things",
    "start": "2740770",
    "end": "2747090"
  },
  {
    "text": "according to the patent. They can be predefined. They can depend on the\nmagnitude of the gradient.",
    "start": "2747090",
    "end": "2753110"
  },
  {
    "text": "So you believe things that\nhave a strong gradient more than things that\ndon't and so on. They can depend on how well\nthe runtime gradient lines up",
    "start": "2753110",
    "end": "2763990"
  },
  {
    "text": "with the field vector. They can depend on how well\nthe runtime gradient lines",
    "start": "2763990",
    "end": "2770049"
  },
  {
    "text": "up with the nearest\nfield dipole and so on. So lots of versions.",
    "start": "2770050",
    "end": "2776230"
  },
  {
    "text": "But in general, you want\nto do something like this. And so that's pretty obvious. We're basically just taking a\nweighted sum of these forces.",
    "start": "2776230",
    "end": "2784600"
  },
  {
    "text": "And this is going to\nprovide the translation. So we move the\nalignment based on that.",
    "start": "2784600",
    "end": "2795710"
  },
  {
    "text": "And then what about rotation? Well, very similar. We just take a torque\naround some center.",
    "start": "2795710",
    "end": "2804470"
  },
  {
    "start": "2804470",
    "end": "2816210"
  },
  {
    "text": "So that's going to\ngive us a rotation. ",
    "start": "2816210",
    "end": "2822070"
  },
  {
    "text": "And so I can just\nconveniently take the cross product of the\nvector from some center--",
    "start": "2822070",
    "end": "2830890"
  },
  {
    "text": "the rotation is going\nto be about some center. Most conveniently, it's\nthe center of the image.",
    "start": "2830890",
    "end": "2836050"
  },
  {
    "text": "So ri is measured from there. And this is the\ntorque that's exerted by all of those springs.",
    "start": "2836050",
    "end": "2842440"
  },
  {
    "text": "And that will tend to make\nthe runtime image move.",
    "start": "2842440",
    "end": "2848170"
  },
  {
    "text": "So this is a little\nbit funny because-- ",
    "start": "2848170",
    "end": "2854260"
  },
  {
    "text": "no, it shouldn't be-- it's not a vector. So torque is a scalar,\nwhich is rotating.",
    "start": "2854260",
    "end": "2859660"
  },
  {
    "text": "It's one degree of freedom. But over here, we've got the\ncross product of two vectors.",
    "start": "2859660",
    "end": "2865250"
  },
  {
    "text": "So what's going on there? Well, being a little\nsloppy with a notation,",
    "start": "2865250",
    "end": "2871480"
  },
  {
    "text": "but the cross product\nof those two-- they're both in the plane. And so their cross product\nis going to be sticking out",
    "start": "2871480",
    "end": "2877630"
  },
  {
    "text": "of the plane. So if I want it to be\npedantic, I could say that.",
    "start": "2877630",
    "end": "2884200"
  },
  {
    "text": "Take the z component-- there's only a z component.",
    "start": "2884200",
    "end": "2889420"
  },
  {
    "text": "But make it into a\nscalar, basically. And then we can have\nscaling, I suppose,",
    "start": "2889420",
    "end": "2896710"
  },
  {
    "text": "although that's less common. ",
    "start": "2896710",
    "end": "2914869"
  },
  {
    "text": "So that's-- if you want\nto reference the patent, I guess that's figure 21 and 22.",
    "start": "2914870",
    "end": "2923060"
  },
  {
    "text": "And may the force be with you. Sorry, I couldn't resist that.",
    "start": "2923060",
    "end": "2929660"
  },
  {
    "text": "OK, nearest boundary\npoint, alignment, energy minimization-- yeah.",
    "start": "2929660",
    "end": "2936940"
  },
  {
    "text": "OK. So we'll have a couple\nof little sidebars here.",
    "start": "2936940",
    "end": "2942090"
  },
  {
    "text": "One of them is\ndistance to a line. And we already mentioned that. But since it comes up so much,\nI want to go over that again.",
    "start": "2942090",
    "end": "2951470"
  },
  {
    "text": " It depends, of course, on\nyour notation for a line.",
    "start": "2951470",
    "end": "2958789"
  },
  {
    "text": "So, once again, let me\npropagandize my favorite.",
    "start": "2958790",
    "end": "2964060"
  },
  {
    "start": "2964060",
    "end": "2974640"
  },
  {
    "text": "OK, so first of all, we can\nrotate into a coordinate system",
    "start": "2974640",
    "end": "2981279"
  },
  {
    "text": "that's lined up with the line. So we get x prime is x plus\ntheta plus y sine theta.",
    "start": "2981280",
    "end": "2989260"
  },
  {
    "text": "And then y prime is-- ",
    "start": "2989260",
    "end": "2995940"
  },
  {
    "text": "so that's step one. And then step two is let's\nmove the origin to there.",
    "start": "2995940",
    "end": "3001130"
  },
  {
    "text": "So we'll call this x double\nprime and y double prime.",
    "start": "3001130",
    "end": "3006250"
  },
  {
    "text": "So x double prime\nis just x prime. And y double prime\nis y prime minus rho.",
    "start": "3006250",
    "end": "3015750"
  },
  {
    "text": "So y double prime is\nminus x sine theta plus y",
    "start": "3015750",
    "end": "3022860"
  },
  {
    "text": "plus theta minus rho. And the line is the locus\nof y double prime equals 0.",
    "start": "3022860",
    "end": "3033800"
  },
  {
    "text": "That's by construction. And so we can write the\nequation of the line",
    "start": "3033800",
    "end": "3040420"
  },
  {
    "text": "as x sine theta minus y\ncos theta plus rho is 0.",
    "start": "3040420",
    "end": "3046180"
  },
  {
    "text": " And that parameterization\ndoesn't have any singularities.",
    "start": "3046180",
    "end": "3055369"
  },
  {
    "text": "It doesn't blow up\nwhen the line is going straight up or\nstraight across or anything.",
    "start": "3055370",
    "end": "3060900"
  },
  {
    "text": "It's not redundant. It has two parameters,\nrho and theta, which is what you need\nbecause the family of lines",
    "start": "3060900",
    "end": "3069830"
  },
  {
    "text": "in the plane is a\ntwo parameter family. And it's pretty handy.",
    "start": "3069830",
    "end": "3077140"
  },
  {
    "text": "For example, suppose that we\nwant to do some line fitting. So suppose in our image we\nhave a bunch of edge points.",
    "start": "3077140",
    "end": "3088109"
  },
  {
    "text": "And we're trying to\nfind with high accuracy a line that fits them very well.",
    "start": "3088110",
    "end": "3095230"
  },
  {
    "text": "So what we could do is minimize\nsigma of the distance squared.",
    "start": "3095230",
    "end": "3100690"
  },
  {
    "text": "So what are our parameters\nfor our rho and theta?",
    "start": "3100690",
    "end": "3107289"
  },
  {
    "text": " Because by using this\nnotation, this is the distance.",
    "start": "3107289",
    "end": "3118140"
  },
  {
    "text": "Well, or maybe negative. But we're taking the square. So who cares? ",
    "start": "3118140",
    "end": "3133250"
  },
  {
    "text": "And, of course, it's\na calculus problem. So we take the derivative\nand set it equal to 0.",
    "start": "3133250",
    "end": "3139880"
  },
  {
    "text": "And let's start with d rho. Then we're going\nto get 2 times--",
    "start": "3139880",
    "end": "3147230"
  },
  {
    "start": "3147230",
    "end": "3154730"
  },
  {
    "text": "so forget the 2. And now the sine theta we can\nbring outside the summation.",
    "start": "3154730",
    "end": "3163030"
  },
  {
    "text": "Sine theta sigma x minus cos\ntheta sigma yi plus rho sigma",
    "start": "3163030",
    "end": "3173380"
  },
  {
    "text": "1. And if we have n points,\nwe can divide through by n.",
    "start": "3173380",
    "end": "3180140"
  },
  {
    "text": "And then we get-- ",
    "start": "3180140",
    "end": "3191859"
  },
  {
    "text": "right? Because the stigma of 1 is n. And so if you divide\nby n, we just get 1.",
    "start": "3191860",
    "end": "3198569"
  },
  {
    "text": "And so what does this say? So x-bar is the average, is 1/n. ",
    "start": "3198570",
    "end": "3206300"
  },
  {
    "text": "And, of course, y-bar\ncorrespondingly. ",
    "start": "3206300",
    "end": "3211930"
  },
  {
    "text": "And so this says that there's\na relationship between--",
    "start": "3211930",
    "end": "3218470"
  },
  {
    "text": "so it doesn't give us rho yet. It doesn't give us theta. But there's a strong\nrelationship between them.",
    "start": "3218470",
    "end": "3224840"
  },
  {
    "text": "And this is that the line has\nto go through the centroid,",
    "start": "3224840",
    "end": "3231730"
  },
  {
    "text": "because if I plug in-- ",
    "start": "3231730",
    "end": "3239790"
  },
  {
    "text": "if I plug in the coordinates\nof the centroid, x-bar, y-bar, I get 0.",
    "start": "3239790",
    "end": "3245340"
  },
  {
    "text": "And that's the definition\nof points on the line-- so the centroid is on the line.",
    "start": "3245340",
    "end": "3251850"
  },
  {
    "text": "So at that point, I\nmight do a sensible thing",
    "start": "3251850",
    "end": "3256970"
  },
  {
    "text": "of moving all my\ncoordinates to the centroid. ",
    "start": "3256970",
    "end": "3265990"
  },
  {
    "text": "So I know that's going\nto be important point. So I can subtract that out.",
    "start": "3265990",
    "end": "3272849"
  },
  {
    "text": "And then if I-- so I'm still trying to\nminimize this thing here.",
    "start": "3272850",
    "end": "3278210"
  },
  {
    "start": "3278210",
    "end": "3293109"
  },
  {
    "text": "And if you plug in-- ",
    "start": "3293110",
    "end": "3298410"
  },
  {
    "text": "so turn this the\nother way around. ",
    "start": "3298410",
    "end": "3309170"
  },
  {
    "text": "OK, so now I go\ninto this equation. And I plug in-- for xi and yi, I plug\nin these expressions.",
    "start": "3309170",
    "end": "3317660"
  },
  {
    "text": "Then it turns out that\nthe centroid cancels out because we have this property.",
    "start": "3317660",
    "end": "3323390"
  },
  {
    "text": "We're going to get x-bar\nsine theta minus y-bar cosine",
    "start": "3323390",
    "end": "3329240"
  },
  {
    "text": "theta plus rho. And we know that's 0. So we can get rid of that.",
    "start": "3329240",
    "end": "3334490"
  },
  {
    "text": "OK, so now we're ready to\ndo the final step, which is to take the derivative\nwith respect to theta",
    "start": "3334490",
    "end": "3341510"
  },
  {
    "text": "and set that equal to 0. And let's see.",
    "start": "3341510",
    "end": "3347440"
  },
  {
    "text": "After we gather terms-- ",
    "start": "3347440",
    "end": "3366460"
  },
  {
    "text": "so that's-- what we're going to\nget is 2 times this expression",
    "start": "3366460",
    "end": "3371700"
  },
  {
    "text": "times it's derivative. And if you multiply all\nthat out, you get this.",
    "start": "3371700",
    "end": "3377790"
  },
  {
    "text": "And, well, that's going to-- so what's this?",
    "start": "3377790",
    "end": "3383190"
  },
  {
    "text": "This is one half sine 2 theta. And this, of course,\nis cos 2 theta.",
    "start": "3383190",
    "end": "3390680"
  },
  {
    "text": "So I have an expression\nthat involves sine of twice the angle and\ncosine of twice the angle.",
    "start": "3390680",
    "end": "3396670"
  },
  {
    "text": "So I basically can do an atan2-- atan2-- of--",
    "start": "3396670",
    "end": "3410130"
  },
  {
    "text": " OK, so that's the sine. So that's going to be this one.",
    "start": "3410130",
    "end": "3416220"
  },
  {
    "text": "2 times sigma xi yi comma sigma.",
    "start": "3416220",
    "end": "3422240"
  },
  {
    "start": "3422240",
    "end": "3429160"
  },
  {
    "text": "So we use atan2 so we don't\nhave the ambiguity about which quadrant we're in.",
    "start": "3429160",
    "end": "3435240"
  },
  {
    "text": "And we don't have\nthings blowing up-- no, sorry. That looks kind of a mess.",
    "start": "3435240",
    "end": "3440450"
  },
  {
    "text": "But, obviously, this is\nthe sine part, if you like. And this is the cosine\npart of the tangent.",
    "start": "3440450",
    "end": "3447319"
  },
  {
    "text": "So we just take\nthose two quantities. And the E square\nsolution has the benefit",
    "start": "3447320",
    "end": "3455700"
  },
  {
    "text": "that it's independent of\ncoordinate system choice. What do I mean by that? It means if I have a\ndifferent coordinate system,",
    "start": "3455700",
    "end": "3462690"
  },
  {
    "text": "different position, different\nrotations, of course I'm going to get a\ndifferent answer. But in that coordinate system,\nthat will be the same line.",
    "start": "3462690",
    "end": "3471190"
  },
  {
    "text": " Why do I make a fuss of that? Well, because that's not true\nif you fit y equals mx plus c.",
    "start": "3471190",
    "end": "3480820"
  },
  {
    "text": "Now, there are circumstances\nwhere fitting y equals mx plus c makes sense\nif you happen to not",
    "start": "3480820",
    "end": "3487540"
  },
  {
    "text": "have an error in x,\nif you assume that all the error in fitting is in y.",
    "start": "3487540",
    "end": "3492970"
  },
  {
    "text": "So x is some quantity you\nhave complete control over. Y is something you measure.",
    "start": "3492970",
    "end": "3498430"
  },
  {
    "text": "Then fitting y equals\nmx plus c makes sense. But here we're talking\nabout image coordinates. There's nothing different about\nx and y or different rotations",
    "start": "3498430",
    "end": "3506950"
  },
  {
    "text": "and so on. So that's a method that\ncould be used, for example,",
    "start": "3506950",
    "end": "3514490"
  },
  {
    "text": "in some of the patent\nwork we've talked about where we're\ndealing with edges",
    "start": "3514490",
    "end": "3520809"
  },
  {
    "text": "and we're trying to combine\nshort edge fragments into longer edge fragments.",
    "start": "3520810",
    "end": "3527170"
  },
  {
    "text": " So let's look at--",
    "start": "3527170",
    "end": "3532790"
  },
  {
    "text": "why don't we look\nat another patent? So the last one in\nthis series is, again,",
    "start": "3532790",
    "end": "3539970"
  },
  {
    "text": "kind of a subsidiary deal.  it has to do with the\nmultiscale business,",
    "start": "3539970",
    "end": "3552630"
  },
  {
    "text": "namely, how do we efficiently-- ",
    "start": "3552630",
    "end": "3562809"
  },
  {
    "text": "so we keep on talking\nabout the multiple scales. ",
    "start": "3562810",
    "end": "3572200"
  },
  {
    "text": "But how do we\nefficiently do that? Because, potentially, the\ncomputation is very expensive.",
    "start": "3572200",
    "end": "3582770"
  },
  {
    "text": "OK, so let's-- ",
    "start": "3582770",
    "end": "3597190"
  },
  {
    "text": "OK, right, because\nconvolution is expensive. If we have a picture\nwith n pixels",
    "start": "3597190",
    "end": "3604809"
  },
  {
    "text": "and we have a kernel\nwith m pixels, then computing the\nconvolution is something",
    "start": "3604810",
    "end": "3610120"
  },
  {
    "text": "the order of n times m. So with 10 million pixels\nor whatever, if you kernel",
    "start": "3610120",
    "end": "3617050"
  },
  {
    "text": "is reasonably large, it's\ngoing to take a very long time. So there's a lot of interest\nin finding shortcuts,",
    "start": "3617050",
    "end": "3625030"
  },
  {
    "text": "finding tricks that\nmake that job easier. And here's one.",
    "start": "3625030",
    "end": "3630819"
  },
  {
    "text": "So, again, the last\none we're going to look at from Bill\nSilver at Cognex.",
    "start": "3630820",
    "end": "3638050"
  },
  {
    "text": "And this is about, basically,\nefficiently computing filters",
    "start": "3638050",
    "end": "3644260"
  },
  {
    "text": "for doing multiscale. And so the picture here is-- ",
    "start": "3644260",
    "end": "3650950"
  },
  {
    "text": "nth order piecewise\npolynomial kernel. So the trick here is we're\ngoing to approximate whatever",
    "start": "3650950",
    "end": "3657250"
  },
  {
    "text": "kernel you like with\nsomething that's a spline-- piecewise polynomial.",
    "start": "3657250",
    "end": "3662770"
  },
  {
    "text": "And it's an nth order spline. And we then take the n\nplus first difference.",
    "start": "3662770",
    "end": "3669920"
  },
  {
    "text": "So if you think about\nit, each of those pieces is nth order polynomial.",
    "start": "3669920",
    "end": "3675650"
  },
  {
    "text": "And if you take the n plus\nfirst derivative, you get what? ",
    "start": "3675650",
    "end": "3682690"
  },
  {
    "text": "Take a second--\norder polynomial, take the second\nderivative-- you get-- ",
    "start": "3682690",
    "end": "3693650"
  },
  {
    "text": "0. OK. And why is that good?",
    "start": "3693650",
    "end": "3699320"
  },
  {
    "text": "Well, it's easy to\nconvolve with 0. So what's the trick? Well, the thing is that\nwe you splice together",
    "start": "3699320",
    "end": "3709630"
  },
  {
    "text": "the polynomials, you may have\na discontinuity, not perhaps",
    "start": "3709630",
    "end": "3716440"
  },
  {
    "text": "in the value but perhaps in\nthe derivative, or maybe not in the value and the derivative\nbut in the second derivative",
    "start": "3716440",
    "end": "3723080"
  },
  {
    "text": "and so on. The result is that it's sparse.",
    "start": "3723080",
    "end": "3728890"
  },
  {
    "text": "No matter what you do, maybe\na little complicated at those transitions.",
    "start": "3728890",
    "end": "3734269"
  },
  {
    "text": "But large parts of it are 0. So if you do the\nconvolution, your kernel",
    "start": "3734270",
    "end": "3740049"
  },
  {
    "text": "has very small support. And so it's very efficient. It's very cheap to compute.",
    "start": "3740050",
    "end": "3745450"
  },
  {
    "text": "So let's see. What do we got? Filter parameters-- so you\ncan pick different filters",
    "start": "3745450",
    "end": "3751660"
  },
  {
    "text": "based on this. Then you get your signal. And this is the 1D version.",
    "start": "3751660",
    "end": "3757599"
  },
  {
    "text": "You sample it. You convolve it with\nthat now sparse function. But then you have to undo that.",
    "start": "3757600",
    "end": "3764540"
  },
  {
    "text": "And so you do the\nn plus first sum, which is the inverse of the\nn plus first difference.",
    "start": "3764540",
    "end": "3772300"
  },
  {
    "text": "And finally you normalize. And there's your\nfiltered signal. So that's the basic idea.",
    "start": "3772300",
    "end": "3779330"
  },
  {
    "text": "Now, there's some\nthings hidden in there that are pretty\nimportant-- first of all, that the\nn plus first sum",
    "start": "3779330",
    "end": "3785349"
  },
  {
    "text": "is the inverse of the n\nplus first difference. But that sort of makes\nsense because one--",
    "start": "3785350",
    "end": "3792470"
  },
  {
    "text": "if you keep on-- left to right--\nadding things up, that's the exact inverse\nof stepping through",
    "start": "3792470",
    "end": "3799490"
  },
  {
    "text": "and subtracting neighbors\nin either order. So it makes sense\non one difference.",
    "start": "3799490",
    "end": "3807553"
  },
  {
    "text": "And then you can\nconvince yourself that, well, these\noperations commute.",
    "start": "3807553",
    "end": "3812960"
  },
  {
    "text": "So if I have-- let's call them D and\nS. So let's suppose",
    "start": "3812960",
    "end": "3819490"
  },
  {
    "text": "that this is the identity. And then what we want\nto convince ourselves",
    "start": "3819490",
    "end": "3824619"
  },
  {
    "text": "that this is also the identity-- D times D, S times S. So we take two differences.",
    "start": "3824620",
    "end": "3829930"
  },
  {
    "text": "And then we take two sums. Well, because these\noperations commute,",
    "start": "3829930",
    "end": "3835180"
  },
  {
    "text": "I can write this as DS DS. I switch these around. And, of course, I know\nthat this is the identity.",
    "start": "3835180",
    "end": "3841380"
  },
  {
    "text": "And that's the identity. And I'm done. And that generalizes to n plus\n1 differences and n plus 1 sums.",
    "start": "3841380",
    "end": "3851700"
  },
  {
    "text": "So that's one idea in there that\nwe can sparsify a convolution",
    "start": "3851700",
    "end": "3858079"
  },
  {
    "text": "and make it cheaper and that\nwe can undo that sparsification by taking sums.",
    "start": "3858080",
    "end": "3864290"
  },
  {
    "text": "And if you go\nthrough the algebra of figuring out how\nmany operations, you always come out--\nwell, pretty much always",
    "start": "3864290",
    "end": "3871640"
  },
  {
    "text": "come out ahead. That's one idea. The other idea is that we're\nkind of mixing up convolutions",
    "start": "3871640",
    "end": "3878720"
  },
  {
    "text": "and differentiation. And that's a slightly\nmore subtle point.",
    "start": "3878720",
    "end": "3885260"
  },
  {
    "text": "But we can think of\nintegration and differentiation as convolutions.",
    "start": "3885260",
    "end": "3890329"
  },
  {
    "text": "So let's think\nabout integration. So what would you convolve\nwith to get an integral?",
    "start": "3890330",
    "end": "3899359"
  },
  {
    "start": "3899360",
    "end": "3907800"
  },
  {
    "text": "Instead of ones, right? But all the way from minus\ninfinity to plus infinity or-- ",
    "start": "3907800",
    "end": "3917319"
  },
  {
    "text": "so when we compute\nthe integral-- so we have f of x.",
    "start": "3917320",
    "end": "3922330"
  },
  {
    "text": "And we want the integral of f\nof x at some particular place-- let's say x prime.",
    "start": "3922330",
    "end": "3928750"
  },
  {
    "text": "Then we're integrating from\nminus infinity up to x prime. And we're ignoring\nthe rest of f of x.",
    "start": "3928750",
    "end": "3936490"
  },
  {
    "text": "So that's a little bit like\ntaking a step function, multiplying by a step function--",
    "start": "3936490",
    "end": "3943340"
  },
  {
    "text": "well, flipped, right? Because we're\nmultiplying by this",
    "start": "3943340",
    "end": "3953190"
  },
  {
    "text": "and then adding the result. So we'll talk about\nthat a little bit more. So without that being\nmentioned in the patent,",
    "start": "3953190",
    "end": "3959500"
  },
  {
    "text": "it's depending\ncritically on the fact that derivative operators can\nbe treated as convolutions--",
    "start": "3959500",
    "end": "3968680"
  },
  {
    "text": "not convolutions\nwith real functions because we need\nimpulses and stuff.",
    "start": "3968680",
    "end": "3974740"
  },
  {
    "text": "But if we allow impulses\nand distributions instead",
    "start": "3974740",
    "end": "3979990"
  },
  {
    "text": "of functions, then\nwe can treat them. And once we do that, we have\nall of the power of convolution",
    "start": "3979990",
    "end": "3985900"
  },
  {
    "text": "and all of the nice\nproperties of convolution. So, for example,\nconvolutions commute.",
    "start": "3985900",
    "end": "3991000"
  },
  {
    "text": "Why is that? Well, because the Fourier\ntransform of convolution, as you may remember--",
    "start": "3991000",
    "end": "3996880"
  },
  {
    "text": "603-- is the product in\nthe transform space, right? And products commute.",
    "start": "3996880",
    "end": "4003420"
  },
  {
    "text": "So if convolution converts\ninto a product and the product commutes, that must mean that\nthat deconvolution commutes.",
    "start": "4003420",
    "end": "4013680"
  },
  {
    "text": "Similarly, associativity-- if\nI've got A times B times C,",
    "start": "4013680",
    "end": "4019500"
  },
  {
    "text": "I can think of that either as\nmultiplying A times B first and then taking the result\nand multiplying by C.",
    "start": "4019500",
    "end": "4025230"
  },
  {
    "text": "Or I can think of it as\nmultiplying B by C first and then multiplying A by that.",
    "start": "4025230",
    "end": "4030520"
  },
  {
    "text": "Well, since, again, the\ntransform of convolution is multiplication, the same\nmust apply to convolution.",
    "start": "4030520",
    "end": "4038880"
  },
  {
    "text": "So we can switch things around,\nwhich is what I did over here. Well, no. Here, I used commutivity.",
    "start": "4038880",
    "end": "4045420"
  },
  {
    "text": "But we're are also going\nto need associativity. So we can associate\nin convolution,",
    "start": "4045420",
    "end": "4052020"
  },
  {
    "text": "which is going to\nbe very powerful, and allow us to switch things\naround between the signal",
    "start": "4052020",
    "end": "4059040"
  },
  {
    "text": "and the filter and so on. OK, so let's continue with this. So that's the same picture.",
    "start": "4059040",
    "end": "4065070"
  },
  {
    "text": "The patent examiner\njust liked that and put it on the first page. And let's look at\nwhat we have here.",
    "start": "4065070",
    "end": "4073170"
  },
  {
    "text": "So the sort of\nsmooth curve up here",
    "start": "4073170",
    "end": "4079950"
  },
  {
    "text": "could be a kernel for some\nsort of smoothing filter, perhaps an attempt to roughly\nlow-pass filter a signal",
    "start": "4079950",
    "end": "4088740"
  },
  {
    "text": "or approximate a\nGaussian or something. But it turns out that this\nis composed of segments",
    "start": "4088740",
    "end": "4097528"
  },
  {
    "text": "that are each quadratic. And so now we take\na difference--",
    "start": "4097529",
    "end": "4103679"
  },
  {
    "text": "or in the continuous\nword, derivative. And what do we get?",
    "start": "4103680",
    "end": "4108998"
  },
  {
    "text": "Are these straight lines? Why are they straight lines? Because this was second order. So if we take a derivative,\nit'll be first order.",
    "start": "4108998",
    "end": "4117479"
  },
  {
    "text": "But it's not sparse. We're not done. So now I repeat that.",
    "start": "4117479",
    "end": "4122520"
  },
  {
    "text": "We take another derivative. And because this is just a\nramp, we get a constant value.",
    "start": "4122520",
    "end": "4128349"
  },
  {
    "text": "And then this is\na ramp going down. So we get a constant value\non second derivative.",
    "start": "4128350",
    "end": "4133930"
  },
  {
    "text": "And that's a ramp--\nget a constant value on third derivative. We're not done yet.",
    "start": "4133930",
    "end": "4139229"
  },
  {
    "text": "Remember n plus first. So we have to do\none more derivative. Well, what's the\nderivative of a constant?",
    "start": "4139229",
    "end": "4145560"
  },
  {
    "text": "It's 0. So all along these long\nstretches, potentially-- I mean, this is--",
    "start": "4145560",
    "end": "4151439"
  },
  {
    "text": "in order to fit into\nthe figure, they've made it relatively compact. But you could imagine we could\ndo this over a longer extent.",
    "start": "4151439",
    "end": "4160680"
  },
  {
    "text": "All of these areas,\nwe get nothing. We get 0, which is what we want. It makes it sparse.",
    "start": "4160680",
    "end": "4166350"
  },
  {
    "text": "But at the transitions,\nat the places where these quadratic things\nwere spliced together,",
    "start": "4166350",
    "end": "4172410"
  },
  {
    "text": "we do get a result.\nAnd, amazingly,",
    "start": "4172410",
    "end": "4178500"
  },
  {
    "text": "there are only two\nnon-zero values. There's only that\nvalue in that value. So instead of having to\nconvolve with something",
    "start": "4178500",
    "end": "4185399"
  },
  {
    "text": "that 20 non-zero values,\nwe convolve involved",
    "start": "4185399",
    "end": "4193380"
  },
  {
    "text": "with 2, which is really cheap. Plus, they're the\nsame magnitude. So we don't even\nhave to multiply. We just subtract.",
    "start": "4193380",
    "end": "4201390"
  },
  {
    "text": "But then we don't get\nthe answer we want. We get the third difference\nof the answer we want.",
    "start": "4201390",
    "end": "4207369"
  },
  {
    "text": "So now we take the\nresult. And we just left to right sum it up--",
    "start": "4207370",
    "end": "4212400"
  },
  {
    "text": "once, twice, three times. Just like first difference\nis such a simple operation,",
    "start": "4212400",
    "end": "4220410"
  },
  {
    "text": "this is also a simple operation. We start with 0 at the left. And we just keep on\nadding the values",
    "start": "4220410",
    "end": "4226170"
  },
  {
    "text": "and writing them into an array. And then we do that with\nthat new array-- same thing.",
    "start": "4226170",
    "end": "4232000"
  },
  {
    "text": "And then we do with\nthe results of that. And if we've done it\nthree times, we're done.",
    "start": "4232000",
    "end": "4237360"
  },
  {
    "text": "So there's a certain\ncost to that. But it's nothing compared to the\ncost of doing the convolution",
    "start": "4237360",
    "end": "4243719"
  },
  {
    "text": "with the original function\nthat had large support, had",
    "start": "4243720",
    "end": "4248760"
  },
  {
    "text": "non-zero values for many points. So this is kind of a textbook\nexample of this method",
    "start": "4248760",
    "end": "4254850"
  },
  {
    "text": "because it's giving us\na very high compression. The result after taking the\nthird difference is very small.",
    "start": "4254850",
    "end": "4265920"
  },
  {
    "text": "Let's see-- first,\nsecond, third. Yeah, third difference. OK, so that's the basic idea.",
    "start": "4265920",
    "end": "4274380"
  },
  {
    "text": "And here's another one. Oh, wait is that the same one? Yes, that's the same one.",
    "start": "4274380",
    "end": "4282570"
  },
  {
    "text": "And so here's the\ncircuit for doing that. So here's the\none-dimensional function.",
    "start": "4282570",
    "end": "4290100"
  },
  {
    "text": "Think of it as a\nrow in the image. And there's a sampling\noperator, which",
    "start": "4290100",
    "end": "4295500"
  },
  {
    "text": "picks out every fifth value-- four of them. And those are the results\nof that third difference",
    "start": "4295500",
    "end": "4306989"
  },
  {
    "text": "of the convolution function. And then we convolve-- sorry, I think I screwed up here\nbecause there's non-zero values",
    "start": "4306990",
    "end": "4315540"
  },
  {
    "text": "at the end as well. So there's this value\nhere and that value.",
    "start": "4315540",
    "end": "4320650"
  },
  {
    "text": "So there are actually\nfour non-zero values in this example. And two of them are magnitude\nthree, and two of them",
    "start": "4320650",
    "end": "4328920"
  },
  {
    "text": "are magnitude one. So that's why we're\nreading our four values. And the outer ones are\nmultiplied by plus n minus 1.",
    "start": "4328920",
    "end": "4336060"
  },
  {
    "text": "The inner ones are multiplied\nby plus or minus 3. And we add them up. And that produces a new\none-dimensional stream",
    "start": "4336060",
    "end": "4343950"
  },
  {
    "text": "of numbers. And then we push it\nthrough three accumulators. And out comes the\nresult. Let's see.",
    "start": "4343950",
    "end": "4352280"
  },
  {
    "text": "And so that's just a picture\nof a accumulator, where we keep the old value and\nwe add in the new value.",
    "start": "4352280",
    "end": "4359239"
  },
  {
    "text": "I'm not sure why we\nneed a diagram for that. And that's the actual\nconvolution operation.",
    "start": "4359240",
    "end": "4367250"
  },
  {
    "text": "And then we can-- often we want to\ncontrol the bandwidth. We want to control\nhow much we reduce",
    "start": "4367250",
    "end": "4376600"
  },
  {
    "text": "the resolution of the image. Well, here we can do that\nvery simply by changing",
    "start": "4376600",
    "end": "4381610"
  },
  {
    "text": "the spacing between those\nfour non-zero values. So we can stretch out\nthat spline horizontally",
    "start": "4381610",
    "end": "4388060"
  },
  {
    "text": "or compress it just by\nchanging S. And so here we're",
    "start": "4388060",
    "end": "4393100"
  },
  {
    "text": "looking at the ith\npixel and the i minus S",
    "start": "4393100",
    "end": "4399070"
  },
  {
    "text": "plus 1 pixel and the i\nminus twice S plus 1 pixel and the i minus 3\ntimes S plus 1 pixel.",
    "start": "4399070",
    "end": "4405860"
  },
  {
    "text": "So we can change the\nscale very easily. And notice there's no change\nin the amount of computation,",
    "start": "4405860",
    "end": "4414250"
  },
  {
    "text": "whereas if you were using\nthe full original spline, or whatever it's\nan approximation",
    "start": "4414250",
    "end": "4420850"
  },
  {
    "text": "of, like a Gaussian, then as\nyou increase the size, of course the computation goes up.",
    "start": "4420850",
    "end": "4427300"
  },
  {
    "text": "So here, since we're\nonly doing any work where the parts of the spine spliced\ntogether, that doesn't change.",
    "start": "4427300",
    "end": "4436880"
  },
  {
    "text": "So we can easily control\nthe filter parameter.",
    "start": "4436880",
    "end": "4442300"
  },
  {
    "text": "Here's another one. Let's goes through this one. So this one-- we have\nthis curve up here",
    "start": "4442300",
    "end": "4450699"
  },
  {
    "text": "that's, I think, a\nparabola upside down. We take the first difference--",
    "start": "4450700",
    "end": "4456910"
  },
  {
    "text": "so the second order is first\ndifference is first order. And we get this line.",
    "start": "4456910",
    "end": "4462320"
  },
  {
    "text": "And then we take the\nsecond difference, and because this has a\nconstant slope, of course,",
    "start": "4462320",
    "end": "4468139"
  },
  {
    "text": "we get a constant value\nfor the second difference. We're still not done because\nit's still not sparse.",
    "start": "4468140",
    "end": "4473800"
  },
  {
    "text": "We take the third difference. And, of course, we get\n0 all the way in here. Now, this time,\nthe ends are more",
    "start": "4473800",
    "end": "4480350"
  },
  {
    "text": "complicated because\nthe discontinuity-- there's a discontinuity not\njust in higher derivative",
    "start": "4480350",
    "end": "4487110"
  },
  {
    "text": "but in the first derivative. It's continuous in the\nfunction itself at the ends.",
    "start": "4487110",
    "end": "4493010"
  },
  {
    "text": "But the first derivative\nhas a discontinuity. And that means that the second\nand third derivative are",
    "start": "4493010",
    "end": "4498710"
  },
  {
    "text": "going to be more complicated. So we have these\nspikes at the end.",
    "start": "4498710",
    "end": "4504540"
  },
  {
    "text": "And there are two\nnon-zero values in each of these\nspikes at the two ends. So it's just\nanother example of--",
    "start": "4504540",
    "end": "4514010"
  },
  {
    "text": "so if, for example, you\ndecide that the Gaussian is a good filter for\nyou to use because",
    "start": "4514010",
    "end": "4520760"
  },
  {
    "text": "of its whatever\ntransformed properties, then you can fit a spine to it.",
    "start": "4520760",
    "end": "4526250"
  },
  {
    "text": "And instead of doing the\nexpensive computation-- or suppose that\nyou say, OK, I know",
    "start": "4526250",
    "end": "4533390"
  },
  {
    "text": "that the ideal low-pass\nfilter has a sync function in the spatial domain.",
    "start": "4533390",
    "end": "4541050"
  },
  {
    "text": "Well, the sync function, for\na start, goes on forever. So that's going to be a problem. But also, it doesn't have\na [INAUDIBLE] support.",
    "start": "4541050",
    "end": "4548360"
  },
  {
    "text": "It's non-zero almost everywhere. So I can fit a spline to it. And we'll be doing that.",
    "start": "4548360",
    "end": "4554730"
  },
  {
    "text": "And that's a particular--\nof importance for us because we want to\nwork multiple scales.",
    "start": "4554730",
    "end": "4562739"
  },
  {
    "text": "So we have to subsample. Nyquist tells us--\nas does Shannon and whoever invented it first.",
    "start": "4562740",
    "end": "4569389"
  },
  {
    "text": "It wasn't Nyquist-- that\nwe have to be careful that the sampling produces\naliasing artifacts",
    "start": "4569390",
    "end": "4577880"
  },
  {
    "text": "unless we've cut out the high\nfrequency content before we sampled. And so we have to be able\nto at least approximately",
    "start": "4577880",
    "end": "4586580"
  },
  {
    "text": "low-pass filter our images. And so, how do you do that? Well, you can convolve\nwith the sync function.",
    "start": "4586580",
    "end": "4593210"
  },
  {
    "text": "But that's very expensive to\neven approximate directly. If we can approximate\nthe sync function",
    "start": "4593210",
    "end": "4599870"
  },
  {
    "text": "with one of these\nsplines, then we can make that\nreasonable premise.",
    "start": "4599870",
    "end": "4608300"
  },
  {
    "text": "I'm not sure there's-- OK, there are more examples.",
    "start": "4608300",
    "end": "4613340"
  },
  {
    "text": "It doesn't have\nto be just a lump. So here we have a\nfunction that has a positive and a negative peak.",
    "start": "4613340",
    "end": "4619700"
  },
  {
    "text": "Maybe that's an approximation\nto a first derivative operator.",
    "start": "4619700",
    "end": "4624740"
  },
  {
    "text": "And again, we take\nthe first derivative. We get the ramps,\nsecond derivative.",
    "start": "4624740",
    "end": "4630530"
  },
  {
    "text": "We get constant,\nthird derivative. We get zeros and with something\nat each of the transitions",
    "start": "4630530",
    "end": "4636830"
  },
  {
    "text": "where the spines\nare stuck together. And we reduce the\ncomputation dramatically",
    "start": "4636830",
    "end": "4645440"
  },
  {
    "text": "because, in this\ncase, we have one, two, three non-zero values.",
    "start": "4645440",
    "end": "4652016"
  },
  {
    "text": "Oh, and there's is-- OK, five. Five non-zero values. ",
    "start": "4652017",
    "end": "4659860"
  },
  {
    "text": "And this is just\nabout clever details on how to do the\nsampling efficiently.",
    "start": "4659860",
    "end": "4666040"
  },
  {
    "text": "And that's in the y direction. Now, we can do the same\nin the x direction. We can do the same\nin the y direction.",
    "start": "4666040",
    "end": "4671710"
  },
  {
    "text": "And the idea would be that\nwe run the convolution in the x direction.",
    "start": "4671710",
    "end": "4677950"
  },
  {
    "text": "And then we produce a new image. And then we run the\nconvolution in the y direction",
    "start": "4677950",
    "end": "4684130"
  },
  {
    "text": "and produce the final result. And that's one way to proceed.",
    "start": "4684130",
    "end": "4689170"
  },
  {
    "text": "What this diagram\nshows is that you can do better by combining\nthose two operations.",
    "start": "4689170",
    "end": "4697780"
  },
  {
    "text": "So you do still need\nsome intermediate memory. But you don't need enough\nmemory for a whole image.",
    "start": "4697780",
    "end": "4703780"
  },
  {
    "text": "You only need a\nmemory large enough for the convolution in\nthe other direction.",
    "start": "4703780",
    "end": "4708800"
  },
  {
    "text": "So here we go through\nthe y convolution using the methods we just described. And we keep a few rows.",
    "start": "4708800",
    "end": "4715210"
  },
  {
    "text": "And then we run\nthe x convolution on that, each of these rows.",
    "start": "4715210",
    "end": "4723730"
  },
  {
    "text": "And so that kind of brings\nup another issue, which is it",
    "start": "4723730",
    "end": "4730370"
  },
  {
    "text": "seems very efficient\nto do 1D convolutions. But to 2D convolutions\nare expensive.",
    "start": "4730370",
    "end": "4736290"
  },
  {
    "text": "And so there's an\nopen problem, which is can you use this\nclever idea of sparsifying",
    "start": "4736290",
    "end": "4743780"
  },
  {
    "text": "the convolution in 2D. And I don't know-- might\nbe a thesis topic in there.",
    "start": "4743780",
    "end": "4749239"
  },
  {
    "text": "But what you can do, meantime,\nis say, in some cases, maybe",
    "start": "4749240",
    "end": "4755030"
  },
  {
    "text": "we can approximate\na 2D convolution by a cascade of a 1D convolution\nin x and a 1D convolution in y.",
    "start": "4755030",
    "end": "4763100"
  },
  {
    "text": "And we look at that as well. ",
    "start": "4763100",
    "end": "4770369"
  },
  {
    "text": "And it goes into why\nthis is important. It talks about the Canny\nedge operator and other edge",
    "start": "4770370",
    "end": "4777620"
  },
  {
    "text": "operators and multiscale\nand blah, blah, blah. This is much shorter\nthan the other patents.",
    "start": "4777620",
    "end": "4785370"
  },
  {
    "text": "But it's pretty much just\nusing what I describe.",
    "start": "4785370",
    "end": "4790740"
  },
  {
    "text": "Just for fun, let's\nlook at the claims. A method for\ndigitally processing a one-dimensional\nsignal, the method",
    "start": "4790740",
    "end": "4798078"
  },
  {
    "text": "convolving the\none-dimensional signal with the function that is the n\nplus first difference of an nth order discrete piecewise\npolynomial kernel so as",
    "start": "4798078",
    "end": "4806040"
  },
  {
    "text": "to provide a second one\ndimensional digital signal, n being at least two and so on.",
    "start": "4806040",
    "end": "4811510"
  },
  {
    "text": "And then perform discrete\nintegration n plus 1 times to produce the final result.",
    "start": "4811510",
    "end": "4818010"
  },
  {
    "text": "OK. So there's some\nsort of things we need to fill in there that\nwe haven't talked about.",
    "start": "4818010",
    "end": "4823890"
  },
  {
    "text": " You may be wondering\nwhy I brought this.",
    "start": "4823890",
    "end": "4829860"
  },
  {
    "text": "So this is a calcite crystal-- please don't drop-- which\nis almost optical quality.",
    "start": "4829860",
    "end": "4838800"
  },
  {
    "text": "And I got this in one\nof those crystal shops. You know how crystals\nwork on your mind.",
    "start": "4838800",
    "end": "4844949"
  },
  {
    "text": "You buy this and you become\nfamous or rich or something. But this is used in optics.",
    "start": "4844950",
    "end": "4850890"
  },
  {
    "text": "And the reason is that\nit's birefringent. If you look through\nit at some surface,",
    "start": "4850890",
    "end": "4858210"
  },
  {
    "text": "you will see two\ncopies of the picture. And why are the two copies?",
    "start": "4858210",
    "end": "4864540"
  },
  {
    "text": "Well, as you know, materials\nhave refractive index, which causes light rays to\nbe deflected by Snell's law.",
    "start": "4864540",
    "end": "4871380"
  },
  {
    "text": "Well, this material\nis unusual in that it has two refractive indices\ndepending on the polarization.",
    "start": "4871380",
    "end": "4877800"
  },
  {
    "text": "So since light in the room is\nsort of randomly polarized-- there are both types around.",
    "start": "4877800",
    "end": "4885420"
  },
  {
    "text": "Both are deflected but\nby different degrees. So you get two\ncopies of everything as you move the crystal.",
    "start": "4885420",
    "end": "4892330"
  },
  {
    "text": "So why is that relevant? Well that's a trick\nthat's used in cameras.",
    "start": "4892330",
    "end": "4897869"
  },
  {
    "text": "So in cameras, we have a problem\nwith aliasing because we're sampling and we can't\nguarantee that the image has",
    "start": "4897870",
    "end": "4908400"
  },
  {
    "text": "been low-pass filtered. And so one of the\ntricks that's used is to have a very, very thin\nlayer of this material, which",
    "start": "4908400",
    "end": "4917430"
  },
  {
    "text": "causes two copies of the image\nto appear very close together, a few microns apart.",
    "start": "4917430",
    "end": "4923040"
  },
  {
    "text": "And that's not a\nperfect low-pass filter. But it suppresses high\nfrequency content.",
    "start": "4923040",
    "end": "4929790"
  },
  {
    "text": "And together with\nother items, it overall makes the sampling better.",
    "start": "4929790",
    "end": "4935949"
  },
  {
    "text": "Now, if you are willing\nto pay and take a chance,",
    "start": "4935950",
    "end": "4941310"
  },
  {
    "text": "you can send your fancy\nschmancy digital SLR camera to a place that will remove\nthis filter because--",
    "start": "4941310",
    "end": "4948940"
  },
  {
    "text": "geez, it's removing my\nhigh frequency content. I want higher resolution.",
    "start": "4948940",
    "end": "4954030"
  },
  {
    "text": "And, yes, you do that. And your camera has,\napparently, higher resolution.",
    "start": "4954030",
    "end": "4960220"
  },
  {
    "text": "But then heaven forbid you look\nat something like your jersey",
    "start": "4960220",
    "end": "4966630"
  },
  {
    "text": "pullover or something\nwith a fine pattern on it. And all of a sudden, you'll\nsee all this interference,",
    "start": "4966630",
    "end": "4973560"
  },
  {
    "text": "moire patterns. So, yes, it's cutting\nhigh frequency content.",
    "start": "4973560",
    "end": "4979619"
  },
  {
    "text": "But there's a good reason for\ncutting the high frequency content. And, for example,\nwhen you're brought",
    "start": "4979620",
    "end": "4986340"
  },
  {
    "text": "in front of a television\ncamera, in the old days, they used to tell you\nnot to wear a striped tie",
    "start": "4986340",
    "end": "4992190"
  },
  {
    "text": "or to wear a dress that has\nnarrow, closely spaced stripes because you're going to end\nup not just with aliasing",
    "start": "4992190",
    "end": "4999420"
  },
  {
    "text": "of the kind we usually\nsee, but it's going to mess up with a color as well. So you're going to get funny\ncolored stripes and so on.",
    "start": "4999420",
    "end": "5005510"
  },
  {
    "text": "And since then, they've\nimproved the low-pass filtering before sampling so that this is\nnot such a big issue anymore.",
    "start": "5005510",
    "end": "5012950"
  },
  {
    "text": "But you can find a lot\nof videos of lectures at MIT where someone didn't\npay attention to this.",
    "start": "5012950",
    "end": "5019220"
  },
  {
    "text": "And instead of watching\nwhat's going on, you're watching the person's\nshirt change colors and shapes.",
    "start": "5019220",
    "end": "5026750"
  },
  {
    "text": "OK, so anyway, we'll talk\nabout that next time, about what has to be\ndone in the camera",
    "start": "5026750",
    "end": "5034010"
  },
  {
    "text": "to suppress these\naliasing effects. And that's the material\nthat we use there.",
    "start": "5034010",
    "end": "5041800"
  },
  {
    "start": "5041800",
    "end": "5048000"
  }
]