[
  {
    "text": " PROFESSOR: All right,\nlet's get started.",
    "start": "0",
    "end": "5620"
  },
  {
    "text": "We are continuing our\ntheme of folding polygons into convex polyhedra.",
    "start": "5620",
    "end": "14520"
  },
  {
    "text": "Let's do a quick\nreminder, we're talking about gluing up the boundary\nof a polygon to itself.",
    "start": "14520",
    "end": "22845"
  },
  {
    "start": "22845",
    "end": "29029"
  },
  {
    "text": "And we were representing that\nwith gluing trees last time.",
    "start": "29030",
    "end": "35640"
  },
  {
    "text": "So I want to do an actual\nexample of a gluing tree. So this is how you\nmake a cube out of a cross, my favorite example.",
    "start": "35640",
    "end": "42975"
  },
  {
    "text": " And a valid gluing,\nit's an Alexandroff",
    "start": "42975",
    "end": "49400"
  },
  {
    "text": "gluing because it\nhas no crossing, so its topologically a sphere. Everything is glued\nto everything.",
    "start": "49400",
    "end": "54410"
  },
  {
    "text": "And it never glues more\nthan 360 degrees of material to any point. In fact, it's going to\nbe 270 at every point,",
    "start": "54410",
    "end": "62180"
  },
  {
    "text": "because that's the curvature\nof every vertex of a cube. And the gluing tree was, if we\nsort of turned this inside out",
    "start": "62180",
    "end": "71927"
  },
  {
    "text": "and think of the polygon as\nbeing on the outside instead of the inside, it's really\nhard to see here how to convert",
    "start": "71927",
    "end": "77650"
  },
  {
    "text": "that into a gluing tree,\nthough you can do it. It's the way that\nthese arrows nest.",
    "start": "77650",
    "end": "83057"
  },
  {
    "text": "But it's a little easier\nto think of on the sphere or on the polyhedron, because\nthen turning inside out is just upside down.",
    "start": "83057",
    "end": "88670"
  },
  {
    "text": "It's not a big deal. So if we look at where\nthe cut are on the cube,",
    "start": "88670",
    "end": "98042"
  },
  {
    "text": "it looks something like this. That should be a cross. This is the top\nof the cross, this",
    "start": "98042",
    "end": "103290"
  },
  {
    "text": "is the bottom of the cross. It goes around the back side. So then the gluing tree is\nessentially this doubled.",
    "start": "103290",
    "end": "110640"
  },
  {
    "text": "If we walk around the\noutside of the cuts, that is the gluing tree. So I can see, there's this\nsegment, then this segment,",
    "start": "110640",
    "end": "119680"
  },
  {
    "text": "then that segment. Then we're back here,\nthen we go up one, two,",
    "start": "119680",
    "end": "129789"
  },
  {
    "text": "and then we turn around. That's a leaf, and so it's\ngoing to look like this weird h",
    "start": "129789",
    "end": "135000"
  },
  {
    "text": "shape. And these are vertices. ",
    "start": "135000",
    "end": "146290"
  },
  {
    "text": "That's right, all of\nthese should be vertices. And locally you can see, ah,\nthis is a 90 degree angle.",
    "start": "146290",
    "end": "152819"
  },
  {
    "text": "This is actually the\ntop of the cross, remember the polygon\nis now out here. That's going to\nbe the top across.",
    "start": "152820",
    "end": "158340"
  },
  {
    "text": "This is where it turns,\nit gets a little confusing because of the\nway I've drawn it. Here's the bottom of the cross. Those parts are easy to see.",
    "start": "158340",
    "end": "163806"
  },
  {
    "text": "The rest is little awkward. But for algorithms,\nthis is a great way to think about things.",
    "start": "163806",
    "end": "168860"
  },
  {
    "text": "And also for proving bounds\nand how many different ways to fold, it's really useful\nto think about gluing trees.",
    "start": "168860",
    "end": "174300"
  },
  {
    "text": "Of course, all of these\nviews are equivalent, but a lot of things will\nbe easier to analyze here.",
    "start": "174300",
    "end": "179840"
  },
  {
    "text": "So, clear? Let me first tell you what\nwe're going to prove today.",
    "start": "179840",
    "end": "187860"
  },
  {
    "text": "We're going to do combinatorial\nbounds and algorithms",
    "start": "187860",
    "end": "195760"
  },
  {
    "text": "for all of this.  And let's see.",
    "start": "195760",
    "end": "201790"
  },
  {
    "text": "So I want general gluings,\ngeneral situation,",
    "start": "201790",
    "end": "208370"
  },
  {
    "text": "edge-to-edge gluings, and a\nparticular kind of polygon",
    "start": "208370",
    "end": "215390"
  },
  {
    "text": "called bounded sharpness. ",
    "start": "215390",
    "end": "224120"
  },
  {
    "text": "And then I want two columns. ",
    "start": "224120",
    "end": "229610"
  },
  {
    "text": "The first question is, how\nmany gluings are there? And whenever we get a bound\non the number of gluings, we're also going to get\nan enumeration algorithm.",
    "start": "229610",
    "end": "236680"
  },
  {
    "text": " Remember, there are three goals. The first goal was decision.",
    "start": "236680",
    "end": "241786"
  },
  {
    "text": "Is there any folding? Second goal was enumeration,\ngive me all the foldings.",
    "start": "241786",
    "end": "247069"
  },
  {
    "text": "And third goal was\ncounting, I think. How many different\nsolutions are there?",
    "start": "247070",
    "end": "252985"
  },
  {
    "text": "For [INAUDIBLE], this is mainly\nabout decision and enumeration.",
    "start": "252985",
    "end": "259290"
  },
  {
    "text": "And this number\nof gluings, that's the combinatorial problem. So it turns out, for\neverything the we'll do,",
    "start": "259290",
    "end": "265490"
  },
  {
    "text": "these two have the same answer. So I'm going to put\nit in one column. But sometimes for\na decision, you can do it a little faster\nthan enumerating them.",
    "start": "265490",
    "end": "273740"
  },
  {
    "text": "In particular, because\nthe number of gluings can be exponential.",
    "start": "273740",
    "end": "280394"
  },
  {
    "text": "We saw last time that it\ncould actually be infinite. I'm going to fix\nthat, don't worry. We'll make it finite.",
    "start": "280394",
    "end": "285700"
  },
  {
    "text": "And then the right\nbound is exponential. There's upper and lower\nbounds of two to the theta n.",
    "start": "285700",
    "end": "290760"
  },
  {
    "text": " And also here, bounded\nsharpness is interesting",
    "start": "290760",
    "end": "300106"
  },
  {
    "text": "because it's polynomial.  And so this is also polynomial.",
    "start": "300106",
    "end": "305889"
  },
  {
    "start": "305890",
    "end": "318600"
  },
  {
    "text": "The one result here that\nis not tight is this one. It's an open question whether\nfor the general setup, the most",
    "start": "318600",
    "end": "326089"
  },
  {
    "text": "interesting scenario,\njust give you a polygon, is there any gluing? The best algorithm we\nknow is exponential,",
    "start": "326089",
    "end": "332860"
  },
  {
    "text": "even to decide whether\nthere's a gluing. So I put a star\nthere to say that. It is not tight.",
    "start": "332860",
    "end": "338179"
  },
  {
    "text": "The open problem is, can\nyou do it in polynomial? I suspect yes, but we worked on\nit a long time ago and failed.",
    "start": "338179",
    "end": "346090"
  },
  {
    "text": "For the special case of\nedge-to-edge gluings, which is when you only glue\nwhole edges of the polygons",
    "start": "346090",
    "end": "351630"
  },
  {
    "text": "to other whole edges, there is\na n to the order one algorithm.",
    "start": "351630",
    "end": "358682"
  },
  {
    "text": "You can think of this as\nan edge-to-edge gluing if you imagine this\nas being two edges. If I actually draw\na vertex there,",
    "start": "358682",
    "end": "364449"
  },
  {
    "text": "then this is an\nedge-to-edge gluing. And then there's a polynomial\nalgorithm to tell you, is there any folding?",
    "start": "364450",
    "end": "369550"
  },
  {
    "text": " If you want to list all\nof the gluings though,",
    "start": "369550",
    "end": "374705"
  },
  {
    "text": "you need exponential\ntime because there can be exponentially many. But everything except\nthis one result",
    "start": "374705",
    "end": "381250"
  },
  {
    "text": "is the best you could hope for. Bounded sharpness\nis a natural sense in which this exponential\nis kind of cheating.",
    "start": "381250",
    "end": "389310"
  },
  {
    "text": "Let's see, let me tell you\nabout bounded sharpness. ",
    "start": "389310",
    "end": "402419"
  },
  {
    "text": "I want to bound how sharp an\nangle can be in a polygon.",
    "start": "402420",
    "end": "407610"
  },
  {
    "text": "This is a really sharp angle. If every angle-- is that\nactually the sharpness I want?",
    "start": "407610",
    "end": "420120"
  },
  {
    "text": "Actually, no. Sorry, I'm getting\ninside out already.",
    "start": "420120",
    "end": "426470"
  },
  {
    "text": "Actually, what I care\nabout are reflex vertices. ",
    "start": "426470",
    "end": "432990"
  },
  {
    "text": "I don't want to have a\nsuper big angles here. So if every angle\nis at least 360",
    "start": "432990",
    "end": "440410"
  },
  {
    "text": "minus some epsilon--\nfor a constant epsilon--",
    "start": "440410",
    "end": "449910"
  },
  {
    "text": "then I call my polygon\nbounded sharpness.  If your polygon has\nbounded sharpness,",
    "start": "449910",
    "end": "457160"
  },
  {
    "text": "we get a polynomial bound\non the number of gluings and a polynomial algorithm\nto list all the gluings.",
    "start": "457160",
    "end": "462940"
  },
  {
    "text": "This is really the sense in\nwhich this is all practical. Give me a polygon that's going\nto have some sharpest angle,",
    "start": "462940",
    "end": "469930"
  },
  {
    "text": "call that the bound. If epsilon gets really tiny, if\nyour reflex angles get really",
    "start": "469930",
    "end": "475790"
  },
  {
    "text": "close to 360, then\nthis bound will go up. But as long as you're not\ntoo extreme, you're all set.",
    "start": "475790",
    "end": "484340"
  },
  {
    "text": " I mean less than or\nequal to, yes, thank you.",
    "start": "484340",
    "end": "491850"
  },
  {
    "text": " Yeah, that would\nbe a weird polygon",
    "start": "491850",
    "end": "497015"
  },
  {
    "text": "if all the angles were so big. I think that doesn't exist. So for example, convex polygons\nalways have bounded sharpness.",
    "start": "497015",
    "end": "504539"
  },
  {
    "text": "Epsilon is 180 in\nthat situation. So, that's good.",
    "start": "504540",
    "end": "510390"
  },
  {
    "text": " I told you about\nedge-to-edge gluings.",
    "start": "510390",
    "end": "515870"
  },
  {
    "text": "Just glue whole\nedges to whole edges. What I haven't really told you\nis how we made this finite,",
    "start": "515870",
    "end": "521049"
  },
  {
    "text": "so let me go to that. And when I say\ngluings here, I really mean a combinatorial\ntype of gluing,",
    "start": "521049",
    "end": "532579"
  },
  {
    "text": "because we had rolling belts. So there were infinitely\nmany actual gluings,",
    "start": "532580",
    "end": "539796"
  },
  {
    "text": "but I'm going to\nthink of most of those as being the same thing and\njust distinguish essentially what the gluing tree looks\nlike combinatorially.",
    "start": "539796",
    "end": "547490"
  },
  {
    "text": "So let me define that. The first part is what I call\nthe abstract gluing tree.",
    "start": "547490",
    "end": "555190"
  },
  {
    "text": " So this is just what the\npicture looks like in general.",
    "start": "555190",
    "end": "562070"
  },
  {
    "text": "So for example, the one\nover there-- the cube-- combinatorially the\ntree looks like this.",
    "start": "562070",
    "end": "571010"
  },
  {
    "text": "It has four leaves and a kind\nof wishbone configuration. So I'm not trying to measure\nthe lengths or anything, just",
    "start": "571010",
    "end": "578150"
  },
  {
    "text": "that's the abstract\npicture, no metric.",
    "start": "578150",
    "end": "583580"
  },
  {
    "text": "And then the second\npart is I'm going to specify which polygon\nvertices and edges are where.",
    "start": "583580",
    "end": "596330"
  },
  {
    "start": "596330",
    "end": "622310"
  },
  {
    "text": "And I'm going to specify that\nat things called junctions. So in particular, at\nleaves I want to say,",
    "start": "622310",
    "end": "629230"
  },
  {
    "text": "oh this is vertex one. At places like this, where\nthree edges come together,",
    "start": "629230",
    "end": "636339"
  },
  {
    "text": "I want to specify for each\none, oh this is vertex two, this is edge eight, this\nis vertex 10, whatever.",
    "start": "636340",
    "end": "644594"
  },
  {
    "text": "I'm making up these numbers. They don't necessarily\ncorrespond, but they should appear in order\nbecause this is the polygon",
    "start": "644594",
    "end": "649880"
  },
  {
    "text": "after all, just\nwarped inside out. ",
    "start": "649880",
    "end": "655670"
  },
  {
    "text": "Also this one. Also, I didn't really draw\nthis picture big enough,",
    "start": "655670",
    "end": "661330"
  },
  {
    "text": "but if I have two parts\nof the gluing tree where a vertex glues\nagainst something--",
    "start": "661330",
    "end": "666790"
  },
  {
    "text": "it could be another vertex\nor it could be an edge-- I also consider those junctions.",
    "start": "666790",
    "end": "672250"
  },
  {
    "text": "So junctions are going\nto be all the vertices-- the only exception is when\nthere's an edge gluing",
    "start": "672250",
    "end": "677850"
  },
  {
    "text": "to an edge, I don't\nconsider that a junction because there's going to\nbe fairly many of those. I want there to be finite.",
    "start": "677850",
    "end": "683260"
  },
  {
    "text": "So everything of\ndegree one, everything of degree three or\nmore, for degree two there has to be at\nleast one vertex.",
    "start": "683260",
    "end": "690890"
  },
  {
    "text": "So degree not equal to 2,\nor at least one vertex.",
    "start": "690890",
    "end": "700940"
  },
  {
    "text": "Those are junctions. For each I'm going to\nmark where they are. That's part of my abstract\ngluing tree, specifying where",
    "start": "700940",
    "end": "707930"
  },
  {
    "text": "the junctures are, how\nthey're configured. And then for each\none, wherever there's part of the polygon\ncoming together,",
    "start": "707930",
    "end": "714370"
  },
  {
    "text": "I specify which vertex\nor edge is coming there. Now when I specify\nan edge, I don't say what point on the edge,\nbecause that could be infinite.",
    "start": "714370",
    "end": "721340"
  },
  {
    "text": "There could be a whole range\nof points, there could be. We'll worry about that later.",
    "start": "721340",
    "end": "726990"
  },
  {
    "text": "I just specify that\nedge eight is there. So this is what I call\ncombinatorial type of gluing.",
    "start": "726990",
    "end": "732840"
  },
  {
    "text": "And in this case, there are\nonly finitely many gluings, finitely many types, but\nit can be exponential.",
    "start": "732840",
    "end": "740070"
  },
  {
    "text": "It's still big, just\nnot quite as big. ",
    "start": "740070",
    "end": "753620"
  },
  {
    "text": "So just to get\nwarmed up a little, let's prove this exponential\nupper bound that is only 2",
    "start": "753620",
    "end": "759790"
  },
  {
    "text": "to the order n. That will in\nparticular convince you that there's only\nfinitely many of these,",
    "start": "759790",
    "end": "764995"
  },
  {
    "text": "although I think that's probably\nobvious that it's finite. It's conceivable it could\nbe more than exponential.",
    "start": "764995",
    "end": "770020"
  },
  {
    "start": "770020",
    "end": "775220"
  },
  {
    "text": "This is not a particularly\nexciting bound, but we're going to use\na lot of the same ideas in the other proofs, in\nparticular this one which",
    "start": "775220",
    "end": "783170"
  },
  {
    "text": "is more interesting. ",
    "start": "783170",
    "end": "789700"
  },
  {
    "text": "I want to look at\nleaves of my tree.",
    "start": "789700",
    "end": "795380"
  },
  {
    "text": "And we have to remember back\nto the previous lecture, who",
    "start": "795380",
    "end": "800630"
  },
  {
    "text": "can be at the leaves? Well, if could be a vertex\nor it could be an edge.",
    "start": "800630",
    "end": "806880"
  },
  {
    "text": "When it was an edge, we\ncalled it a fold point. When we folded in the\nmiddle of an edge-- so here's an edge of\nthe polygon and I end up",
    "start": "806880",
    "end": "815390"
  },
  {
    "text": "subdividing it and gluing\nthe edge onto itself-- right there is 180 degrees\nof curvature.",
    "start": "815390",
    "end": "821710"
  },
  {
    "text": "Total amount of\ncurvature is 720, therefore I only\nhave-- I can't count,",
    "start": "821710",
    "end": "827370"
  },
  {
    "text": "I'm jetlagged-- four of them. At most four fold points. Everybody else is a vertex.",
    "start": "827370",
    "end": "834560"
  },
  {
    "text": "So if I have n vertices, I\nhave at most n plus 4 leaves. ",
    "start": "834560",
    "end": "843879"
  },
  {
    "text": "That's already feeling good. I pull a rabbit out\nof a hat and tell you that if I have only\nn plus 4 leaves,",
    "start": "843880",
    "end": "851060"
  },
  {
    "text": "there are 2 to the order n\ntrees on that many leaves. ",
    "start": "851060",
    "end": "860970"
  },
  {
    "text": "Actually, I should be\na little more careful. If I can bound the number\nof nodes in the tree,",
    "start": "860970",
    "end": "868560"
  },
  {
    "text": "then I'll get an exponential\nbound on the number of trees. And that will be part one,\nthe abstract gluing tree.",
    "start": "868560",
    "end": "874039"
  },
  {
    "text": "But right now I have a bound on\nthe number of leaves, not the number of nodes. And there's a difference\nhere, because if you",
    "start": "874039",
    "end": "879720"
  },
  {
    "text": "have a tree which has\na whole bunch of degree 2 vertices, then that would be\nbad, because I only have two",
    "start": "879720",
    "end": "892769"
  },
  {
    "text": "leaves I have\narbitrarily many nodes. But every time I have one\nof these degree 2 nodes,",
    "start": "892770",
    "end": "900190"
  },
  {
    "text": "we already threw away\nthe degree 2 nodes that had no vertices at them, because\nthere are infinitely many",
    "start": "900190",
    "end": "905579"
  },
  {
    "text": "of those and those don't count. So once we throw that away,\nthe only degree two junctions",
    "start": "905579",
    "end": "912339"
  },
  {
    "text": "are the ones that have a vertex,\nwhich is why-- these dots are supposed to be the actual\nvertices of the polygon. So it might be an edge here,\nit might be an edge there.",
    "start": "912340",
    "end": "919530"
  },
  {
    "text": "There's at least one\nvertex at each of them. So the total number of nodes\nhere is indeed order n.",
    "start": "919530",
    "end": "925459"
  },
  {
    "text": "I mean, it's probably actually\nat most n plus 4 again. But if we're sloppy you say,\nwell the number of leaves",
    "start": "925460",
    "end": "931470"
  },
  {
    "text": "is at most n plus 4. The number of degree\n2 nodes is at most n.",
    "start": "931470",
    "end": "937310"
  },
  {
    "text": "Then there could be\nsome degree three nodes. It's also at most\nn plus 4 in total, or n is all I care about.",
    "start": "937310",
    "end": "944470"
  },
  {
    "text": "You could be more\ncareful and figure out what the consonant is. But we get from this,\nthis is order n nodes.",
    "start": "944470",
    "end": "951690"
  },
  {
    "text": " And once you have that the tree\nhas a linear number of nodes,",
    "start": "951690",
    "end": "957470"
  },
  {
    "text": "I'll tell you this is one of\nthe [? Kadhalan ?] problems, that there's only 2\nthe order n such trees.",
    "start": "957470",
    "end": "963470"
  },
  {
    "text": "But that's only part one\nof the combinatorial type of the gluing. We also have to worry about\nwhich vertices are where.",
    "start": "963470",
    "end": "970579"
  },
  {
    "text": " I want to show that that\nis only exponential.",
    "start": "970580",
    "end": "975980"
  },
  {
    "start": "975980",
    "end": "984149"
  },
  {
    "text": "So imagine at this\npoint you've fixed the combinatorial\nstructure of the tree,",
    "start": "984150",
    "end": "990910"
  },
  {
    "text": "but you have no\nidea what's what. So in particular,\nat these points--",
    "start": "990910",
    "end": "997430"
  },
  {
    "text": "and maybe also you've\ndefined some degree 2 junctions, which you\nknow are supposed",
    "start": "997430",
    "end": "1003340"
  },
  {
    "text": "to have at least one vertex--\nthe first thing I want",
    "start": "1003340",
    "end": "1008410"
  },
  {
    "text": "to specify is, for each\nof these little dots that come together-- these are the\njunctions-- is it a vertex,",
    "start": "1008410",
    "end": "1016910"
  },
  {
    "text": "or is it an edge? So that's just binary\ninformation for each one. I'll fill it in, say\nif it's a vertex,",
    "start": "1016910",
    "end": "1023220"
  },
  {
    "text": "I'll leave it open\nif it's an edge. In fact, I know that at\nmost one edge comes together",
    "start": "1023220",
    "end": "1028990"
  },
  {
    "text": "at any point. Otherwise, you'd have too\nmuch material glued there. So maybe it looks\nsomething like this.",
    "start": "1028990",
    "end": "1035975"
  },
  {
    "text": "It could be a fold point,\nmaybe another fold point. ",
    "start": "1035975",
    "end": "1042640"
  },
  {
    "text": "Something like that. So that coloring, black\nand white, there's only 2 to the order and such colorings.",
    "start": "1042640",
    "end": "1050030"
  },
  {
    "text": "Call it a vertex edge\ncoloring, because again there's",
    "start": "1050030",
    "end": "1056240"
  },
  {
    "text": "order n dots. Each one, there's two choices,\nblack or white, vertex or edge.",
    "start": "1056240",
    "end": "1061870"
  },
  {
    "text": " And now what we\nreally care about",
    "start": "1061870",
    "end": "1067720"
  },
  {
    "text": "is where the vertices,\nbecause remember, this is the polygon in order.",
    "start": "1067720",
    "end": "1073330"
  },
  {
    "text": "So if I could tell you, let's\nsay which vertex is vertex one? Maybe this vertex is vertex one.",
    "start": "1073330",
    "end": "1080990"
  },
  {
    "text": "Then I know this is vertex two,\nI know this is vertex three, I know this is edge\nthree or whichever",
    "start": "1080990",
    "end": "1086309"
  },
  {
    "text": "edge connects V3 three and V4. This is also edge\nthree, and so on.",
    "start": "1086310",
    "end": "1091690"
  },
  {
    "text": "I could just walk around\nand label them in order. All I needed to do is\nknow where vertex one is.",
    "start": "1091690",
    "end": "1098380"
  },
  {
    "text": "There's only n\npossibilities for that. ",
    "start": "1098380",
    "end": "1108040"
  },
  {
    "text": "There's n filled circles, which\nare where the vertices are. One of them is V1, so there's\nonly n choices for it.",
    "start": "1108040",
    "end": "1114910"
  },
  {
    "text": "You multiply all of these\nthings together, n times 2",
    "start": "1114910",
    "end": "1120340"
  },
  {
    "text": "to the order n, times\n2 to the order n, that result is 2 to\nthe some other order n. ",
    "start": "1120340",
    "end": "1127320"
  },
  {
    "text": "That's total number of choices. So that's a rough\nbut fine upper bound.",
    "start": "1127320",
    "end": "1135059"
  },
  {
    "text": "I'm not going to try\nto tune this constant. I guess it would\nbe an open problem to get a really good\nbound on the constant. I'm not sure if even\none has been worked out,",
    "start": "1135059",
    "end": "1141840"
  },
  {
    "text": "but what I will show you is\nthat this is pretty much tight, so you can't hope to do\nmuch better than this",
    "start": "1141840",
    "end": "1147140"
  },
  {
    "text": "because there's a 2 to\nthe omega n lower bound on the number of gluings.",
    "start": "1147140",
    "end": "1154455"
  },
  {
    "text": " And that is this crazy example.",
    "start": "1154455",
    "end": "1161169"
  },
  {
    "text": "I'll draw it also on the board. It's a little tricky to draw.",
    "start": "1161170",
    "end": "1166410"
  },
  {
    "text": "It's a very spiky star,\nsomething like that.",
    "start": "1166410",
    "end": "1172500"
  },
  {
    "text": "So I have e points, and n\nspikes, n convex corners.",
    "start": "1172500",
    "end": "1185090"
  },
  {
    "text": "The convex angle,\nI think, is alpha. Let me match the notation. Yes, convex angle is alpha.",
    "start": "1185090",
    "end": "1192059"
  },
  {
    "text": "The reflex angle here is\nbeta, but otherwise it's completely symmetric. So all the reflex\nangles are beta,",
    "start": "1192060",
    "end": "1199530"
  },
  {
    "text": "all the convex angles are alpha. I have n spikes. I want these points--\nit's hard to draw,",
    "start": "1199530",
    "end": "1209730"
  },
  {
    "text": "but I want them to be very,\nvery close to the center. Take the limit.",
    "start": "1209730",
    "end": "1214919"
  },
  {
    "text": "In the limit, alpha is 0. So alpha is going to be some\nvery tiny amount epsilon.",
    "start": "1214920",
    "end": "1223835"
  },
  {
    "text": "Beta.  What's the limit of beta?",
    "start": "1223835",
    "end": "1230690"
  },
  {
    "text": "180, 360? No, it's not 360. That's what's important.",
    "start": "1230690",
    "end": "1236159"
  },
  {
    "text": " 360 times 1 minus\n1 over n, yeah.",
    "start": "1236160",
    "end": "1244520"
  },
  {
    "text": "It's like 360 minus 360 over n. ",
    "start": "1244520",
    "end": "1251050"
  },
  {
    "text": "Believe it or not,\nthis is a big number, in that it doesn't\ndepend on epsilon.",
    "start": "1251050",
    "end": "1256380"
  },
  {
    "text": "So it's going to be, what,\na little bit smaller-- going to be some\nminus epsilon prime.",
    "start": "1256380",
    "end": "1262140"
  },
  {
    "text": "But I really don't care\nabout the epsilons. They're kind of irrelevant. Let me just cross them out,\nbut they're really there.",
    "start": "1262140",
    "end": "1270140"
  },
  {
    "text": "So alpha is basically 0, beta\nis a chunk less than 360.",
    "start": "1270140",
    "end": "1277180"
  },
  {
    "text": "What this means is in the limit\nI can take one of these alphas and glue it into\none of the betas,",
    "start": "1277180",
    "end": "1285147"
  },
  {
    "text": "and it will still\nbe less than 360. In fact I could\nglue n of the alpha. I could glue all of these\nspikes into one of these gaps.",
    "start": "1285147",
    "end": "1294017"
  },
  {
    "text": "Remember, the limiting\npicture looks like this. ",
    "start": "1294017",
    "end": "1299062"
  },
  {
    "text": "That's maybe more convincing. It doesn't look that way here. This is nothing. Of course, I can fit arbitrarily\nmany of them into this gap",
    "start": "1299062",
    "end": "1307379"
  },
  {
    "text": "and it will still\nsum to less than 360. So this is kind of the key\nto why this example works.",
    "start": "1307380",
    "end": "1314200"
  },
  {
    "text": " I've got tons a room for alphas\nin the complement of betas.",
    "start": "1314200",
    "end": "1320740"
  },
  {
    "text": " Now, I would like to make\nthis not only an exponential",
    "start": "1320740",
    "end": "1329390"
  },
  {
    "text": "lower bound on the\ngeneral case, but also on the edge-to-edge\ncase, because that's a little bit stronger to say\neven edge-to-edge gluings there",
    "start": "1329390",
    "end": "1336460"
  },
  {
    "text": "can be exponentially many. To do that, I'm going to\ntake the midpoint of one",
    "start": "1336460",
    "end": "1341860"
  },
  {
    "text": "of the edges, call\nthat a vertex, and take the perimeter antipode,\nwhich is like here hopefully,",
    "start": "1341860",
    "end": "1349590"
  },
  {
    "text": "more or less. So I want the left parameter\nand the right perimeter to be equal, also\ncall that a vertex.",
    "start": "1349590",
    "end": "1355929"
  },
  {
    "text": "And now one thing we know how\nto do is perimeter halving. Now, we were only supposed to\ndo perimeter halving on convex polygons, but it turns out it\nwill work on this polygon too.",
    "start": "1355930",
    "end": "1363850"
  },
  {
    "text": "So I'm going to glue this\nhalf edge to this half edge, then I'm going to glue this\nedge to this edge, then",
    "start": "1363850",
    "end": "1368950"
  },
  {
    "text": "this one to this one, and so on. So just do that gluing.",
    "start": "1368950",
    "end": "1374550"
  },
  {
    "text": "And the only thing\nto worry about is that you glue\ntwo betas together.",
    "start": "1374550",
    "end": "1380350"
  },
  {
    "text": "That would be more than 360. Anything else, beta to any\nnumber of alpha's is OK.",
    "start": "1380350",
    "end": "1385679"
  },
  {
    "text": "At this point it is really\nhelpful to draw a gluing tree, so let me do that.",
    "start": "1385680",
    "end": "1390830"
  },
  {
    "start": "1390830",
    "end": "1405409"
  },
  {
    "text": "So gluing tree for\nperimeter halving is path.",
    "start": "1405410",
    "end": "1410560"
  },
  {
    "text": "And do I give these guys\nnames, probably x and y? Yeah, that's what\nI would call them,",
    "start": "1410560",
    "end": "1417110"
  },
  {
    "text": "so naturally that's\nwhat I called them. We have x over here,\nwe have y over here.",
    "start": "1417110",
    "end": "1424350"
  },
  {
    "text": "And then we have the\nperimeter in between. So let's just\ncheck what happens. Here we get an\nalpha on one side--",
    "start": "1424350",
    "end": "1431090"
  },
  {
    "text": "I'm going to say the right\nside is the bottom, let's say. I'm not going to try\nto think about it.",
    "start": "1431090",
    "end": "1436430"
  },
  {
    "text": "So there's an alpha,\nand that meets a beta. And then it just\nalternates from there.",
    "start": "1436430",
    "end": "1442320"
  },
  {
    "text": "There's an alpha, it meets a\nbeta, but on the other side. And a beta meets\nan alpha and so on.",
    "start": "1442320",
    "end": "1449400"
  },
  {
    "text": "At the end, it's probably the\nreverse, like alpha, beta.",
    "start": "1449400",
    "end": "1454940"
  },
  {
    "text": "I've drawn it up\nhere at the very top. The alpha's red, betas are black\nso you can distinguish them.",
    "start": "1454940",
    "end": "1463559"
  },
  {
    "text": "But that's clearly an OK gluing\nbecause it's just one alpha gluing to one beta. We know we can glue tons\nof alphas into one beta.",
    "start": "1463560",
    "end": "1471040"
  },
  {
    "text": "That's one gluing. The fun part is that\nthere are exponentially many of these gluings which look\nlike this, where you take some",
    "start": "1471040",
    "end": "1478500"
  },
  {
    "text": "of the betas and turn\nthem into leaves, kind of squeeze them out.",
    "start": "1478500",
    "end": "1485610"
  },
  {
    "text": "And the result is that\nyou get two alphas gluing to a beta, which is fine.",
    "start": "1485610",
    "end": "1490720"
  },
  {
    "text": "The beta glues to\nitself, which is fine. I mean, it's a vertex. It's comforting that it\nhas an angle almost 360.",
    "start": "1490720",
    "end": "1498059"
  },
  {
    "text": "Therefore, there's very little\ncurvature out at that leaf, but we don't really\nneed to check that. It is just necessary\nfor this to work.",
    "start": "1498060",
    "end": "1506060"
  },
  {
    "text": "Of course, beta is less\nthan 360 by itself. Here's an example where I\nsqueezed two of the betas",
    "start": "1506060",
    "end": "1512720"
  },
  {
    "text": "right next to each\nother, then three alpha's come together and\nglue to a beta.",
    "start": "1512720",
    "end": "1518130"
  },
  {
    "text": "But what's nice is we don't\nhave to think about the polygon. We just think about\nthe gluing tree. And we say, well if\nI pull this down-- so",
    "start": "1518130",
    "end": "1528450"
  },
  {
    "text": "I end up with\nthat-- that's going to be just fine as long as\nI also pull one on the top.",
    "start": "1528450",
    "end": "1534550"
  },
  {
    "text": "I have to squeeze the\nsame number of betas on the top and the\nbottom, otherwise these links won't match up.",
    "start": "1534550",
    "end": "1539820"
  },
  {
    "text": "As long as I do that,\nI get a valid gluing. So what I'm going to do,\nI have n betas total.",
    "start": "1539820",
    "end": "1549990"
  },
  {
    "text": "So I have n over\n2 betas on the top",
    "start": "1549990",
    "end": "1555300"
  },
  {
    "text": "and n over 2 betas\non the bottom. I'm going to squeeze n over\n4 on the top and n over 4",
    "start": "1555300",
    "end": "1568020"
  },
  {
    "text": "on the bottom, so half of them. ",
    "start": "1568020",
    "end": "1576160"
  },
  {
    "text": "That way the lengths\nwill match up, and I happen to know there's\na lot of ways to do this.",
    "start": "1576160",
    "end": "1582130"
  },
  {
    "text": "The actual number is n over\n2 choose n over 4 for the top",
    "start": "1582130",
    "end": "1587620"
  },
  {
    "text": "and the same for the bottom. So it's this\nsquared, and I'm just going to tell you that\nis 2 to the theta n.",
    "start": "1587620",
    "end": "1593960"
  },
  {
    "text": " Actually, I think you\ncan be pretty precise.",
    "start": "1593960",
    "end": "1602090"
  },
  {
    "text": "Can you? I've forgotten. Isn't n choose n over\n2-- it's very close to 2",
    "start": "1602090",
    "end": "1610410"
  },
  {
    "text": "to the n over 2, I believe. Is that right?",
    "start": "1610410",
    "end": "1615660"
  },
  {
    "text": "But not exactly, yeah. All right, I'm\ngoing to be sloppy. It's 2 to the theta n.",
    "start": "1615660",
    "end": "1621760"
  },
  {
    "text": "You could figure out what\nthe constant is there. I think I have a bound\nwritten down, maybe.",
    "start": "1621760",
    "end": "1629450"
  },
  {
    "text": "Oh, it is the power of 2, yeah. It is equal, I believe,\naccording to my notes.",
    "start": "1629450",
    "end": "1634674"
  },
  {
    "text": " So this is going\nto be 2 to the n",
    "start": "1634675",
    "end": "1641470"
  },
  {
    "text": "over 4 squared, which is\n2 to the n over 2 exactly. ",
    "start": "1641470",
    "end": "1650250"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE]? ",
    "start": "1650250",
    "end": "1657260"
  },
  {
    "text": "PROFESSOR: I only am allowed\nto squeeze betas, not alphas. But I can do whatever pattern I\nwant on the top and separately",
    "start": "1657260",
    "end": "1662650"
  },
  {
    "text": "any pattern I want\non the bottom. Because what's key\nis by squeezing betas I preserve the parity,\nbecause when I squeeze away",
    "start": "1662650",
    "end": "1671350"
  },
  {
    "text": "a beta I bring two\nalphas together. So the parity and who's matching\nwhom on the top and the bottom is always the same.",
    "start": "1671350",
    "end": "1676880"
  },
  {
    "text": "And the beta on\nthe top will always be matching some number\nof alpha's on the bottom, and vice versa.",
    "start": "1676880",
    "end": "1681887"
  },
  {
    "text": "So it doesn't matter what\npattern I do on the top, or what pattern I\ndo on the bottom. It just matters they\nhave the same length,",
    "start": "1681887",
    "end": "1687110"
  },
  {
    "text": "so I arbitrarily chose\nthem to both be n over 4. Well, it wasn't\narbitrary, but I chose it to be that\nbecause I knew there",
    "start": "1687110",
    "end": "1692789"
  },
  {
    "text": "would be a lot of those choices. There are more, of course. Really I should sum this\nover all choices of n over 4,",
    "start": "1692790",
    "end": "1698679"
  },
  {
    "text": "but this is good enough. That summation would not\nimprove the bound by much. ",
    "start": "1698680",
    "end": "1710870"
  },
  {
    "text": "So that's sort of the bad news. These are really nasty polygons. They have exponentially\nmany gluings.",
    "start": "1710870",
    "end": "1715960"
  },
  {
    "text": "For fun, we actually\ndid this for small n.",
    "start": "1715960",
    "end": "1723640"
  },
  {
    "text": "It's been a while. This was some time ago\nthat we made all these. I think it actually\nwas before 2002,",
    "start": "1723640",
    "end": "1730259"
  },
  {
    "text": "but that was when\nthe paper appeared. So here is a four\nstar, and these",
    "start": "1730260",
    "end": "1736390"
  },
  {
    "text": "are I think all of\nthe possible gluings. Maybe just some of\nthem, it's been awhile,",
    "start": "1736390",
    "end": "1741650"
  },
  {
    "text": "I could think about it.  Not drawn as gluing trees\nhere, but drawn as actual",
    "start": "1741650",
    "end": "1747940"
  },
  {
    "text": "gulings on the polygon. Here instead of\ndrawing the gluings on the outside, which\nis how they happen",
    "start": "1747940",
    "end": "1753279"
  },
  {
    "text": "in the gluing three, I've\ndrawn them on the inside, just because it's\neasier to draw. And then we built\nthem in the same way",
    "start": "1753280",
    "end": "1758530"
  },
  {
    "text": "that I built one like I showed\nyou last time, where we just took a polygon, started\ntaping edges together,",
    "start": "1758530",
    "end": "1764030"
  },
  {
    "text": "and these are the\nroughly taped versions. And then you guess where\nthe crease signs are,",
    "start": "1764030",
    "end": "1770122"
  },
  {
    "text": "and then you can draw\nthe crease lines on here. And two of them\nare drawn sort of worked out where exactly\nthe crease lines have to be,",
    "start": "1770122",
    "end": "1776350"
  },
  {
    "text": "according to getting all\nthe edge links to match. And then you can\nmake your polygons.",
    "start": "1776350",
    "end": "1781600"
  },
  {
    "text": "That is n equals 4,\nthen we did n equals 8.",
    "start": "1781600",
    "end": "1787082"
  },
  {
    "text": "I guess we want n to be\neven here for convenience.  And there's more, although\nstill not a huge number.",
    "start": "1787082",
    "end": "1794740"
  },
  {
    "text": "I think these are the top sides\nand these are the bottom sides.",
    "start": "1794740",
    "end": "1801410"
  },
  {
    "text": "And you can see, in some\ncases it was a little tricky to tell where the creases\nare, because they were almost flat or possibly\nactually exactly flat.",
    "start": "1801410",
    "end": "1808130"
  },
  {
    "text": "Like here they are flat. But it's a fun exercise. You can, whenever you\nhave these gluings,",
    "start": "1808130",
    "end": "1814097"
  },
  {
    "text": "reconstruct the polyhedra. Of course now that we have\nalgorithms for Alexandroff's theorem, we could try plugging\nthese into the programs",
    "start": "1814097",
    "end": "1821230"
  },
  {
    "text": "and they should give us exact 3D\npolyhedra, from which we could",
    "start": "1821230",
    "end": "1826290"
  },
  {
    "text": "figure out where the\ncrease lines are. It would be a fun, small,\nmini-project, I guess,",
    "start": "1826290",
    "end": "1832639"
  },
  {
    "text": "to do that. This is all from ages ago. ",
    "start": "1832640",
    "end": "1837800"
  },
  {
    "text": "At this point I want to move\non to this result, which",
    "start": "1837800",
    "end": "1844140"
  },
  {
    "text": "is the good news. This is sort of bad news\nthat there are exponentially many different gluings.",
    "start": "1844140",
    "end": "1849910"
  },
  {
    "text": "It's not so bad in that at\nleast we can enumerate them in the same amount of time. We'll get to that later.",
    "start": "1849910",
    "end": "1854934"
  },
  {
    "text": "While we're in the\ncombinatorial streak, I want to prove\nthat there's only a polynomial number\nof combinatorially",
    "start": "1854934",
    "end": "1860790"
  },
  {
    "text": "distinct gluings for\nbounded sharpness polygons. So of course, this\nstar polygon does not",
    "start": "1860790",
    "end": "1867050"
  },
  {
    "text": "have bounded sharpness. We set beta to be very,\nvery close to 360.",
    "start": "1867050",
    "end": "1874160"
  },
  {
    "text": "It may be worth talking\nabout this a little bit, because it wasn't exactly 360.",
    "start": "1874160",
    "end": "1881019"
  },
  {
    "text": "It was bounded away from 360 by\nthis value of 360 divided by n. Now I said that\nwas a big number,",
    "start": "1881020",
    "end": "1886910"
  },
  {
    "text": "because it was much,\nmuch bigger than alpha. Bigger than n times\nalpha even, because I",
    "start": "1886910",
    "end": "1892780"
  },
  {
    "text": "can make alpha very close to 0. But it is not what we\ncall bounded sharpness. Bounded sharpness was 360\nminus a constant-- I really",
    "start": "1892780",
    "end": "1901120"
  },
  {
    "text": "shouldn't have called it\nepsilon because it's confusing. Let me call it gamma just\ngot another Greek letter.",
    "start": "1901120",
    "end": "1907539"
  },
  {
    "text": " Gamma is not arbitrarily small. It is a constant value, whereas\nover here it's not constant.",
    "start": "1907540",
    "end": "1916780"
  },
  {
    "text": "It's a constant divided\nby n, that's sub-constant. So this is not bounded\nsharpness, just to check.",
    "start": "1916780",
    "end": "1923740"
  },
  {
    "text": "But if we have all the\nreflex angles, at most 360 minus an actual\nconstant bigger than 0,",
    "start": "1923740",
    "end": "1930409"
  },
  {
    "text": "then we can get a\npolynomial bound on the number of combinatorially\ndistinct gluings.",
    "start": "1930410",
    "end": "1935740"
  },
  {
    "text": "So let me show that to you. ",
    "start": "1935740",
    "end": "1963494"
  },
  {
    "text": "Here's the cool thing\nabout bounded sharpness. ",
    "start": "1963494",
    "end": "1973190"
  },
  {
    "text": "How many leaves can\nthe gluing tree have? Each leaf is either an edge,\nlike it's a fold point.",
    "start": "1973190",
    "end": "1981150"
  },
  {
    "text": "In that case, the\ncurvature is 180 degrees. Or it's a vertex.",
    "start": "1981150",
    "end": "1987309"
  },
  {
    "text": "If it's a vertex, the\ncurvature at that point is 360 minus the\nangle at that point.",
    "start": "1987310",
    "end": "1996094"
  },
  {
    "text": "360 minus the angle,\nlet's call it alpha.",
    "start": "1996094",
    "end": "2002020"
  },
  {
    "text": "Now, we know that every\nangle alpha is at most 360 minus gamma.",
    "start": "2002020",
    "end": "2007040"
  },
  {
    "text": "So if this is going to be\nat least 360 minus gamma,",
    "start": "2007040",
    "end": "2015470"
  },
  {
    "text": "which is just gamma.  So every vertex, every\nleaf of the tree,",
    "start": "2015470",
    "end": "2023539"
  },
  {
    "text": "has curvature at least gamma. Gamma is a constant. Total curvature is 720, exactly.",
    "start": "2023540",
    "end": "2038450"
  },
  {
    "text": "Therefore, the number\nof leaves is at most 720",
    "start": "2038450",
    "end": "2045149"
  },
  {
    "text": "over gamma, which is a constant. ",
    "start": "2045150",
    "end": "2052879"
  },
  {
    "text": "That's going to help. We don't have to worry\nabout trees with n leaves.",
    "start": "2052880",
    "end": "2058625"
  },
  {
    "text": "We only have to\nworry about trees with 20 leaves, some\nconstant number of leaves.",
    "start": "2058625",
    "end": "2063679"
  },
  {
    "text": "Again, as the bound on sharpness\ngoes down, the number of leaves will go up in this\ninverse proportional way,",
    "start": "2063679",
    "end": "2071560"
  },
  {
    "text": "but it's a constant. So at least for part\none, we're golden.",
    "start": "2071560",
    "end": "2077399"
  },
  {
    "text": "I mean, the number\nof gluing trees, I said over here-- where is it?",
    "start": "2077400",
    "end": "2083060"
  },
  {
    "text": "If I have n nodes\nin my tree, I'll only have 2 to\nthe order n trees.",
    "start": "2083060",
    "end": "2088899"
  },
  {
    "text": "So if I can reduce the\nnumber of nodes in my tree, I will reduce the number\nof trees correspondingly. ",
    "start": "2088900",
    "end": "2096940"
  },
  {
    "text": "If there's only a\nconstant number of nodes, there will be a constant\nnumber of trees. It doesn't matter that a\nconstant gets exponentiated,",
    "start": "2096940",
    "end": "2103880"
  },
  {
    "text": "it'll still be constant. So that's good news,\nexcept we bounded again the number of leaves,\nnot the number of nodes.",
    "start": "2103880",
    "end": "2111410"
  },
  {
    "text": "So we have to be a\nlittle bit careful, because in particular we can\nhave degree 2 junctions, which",
    "start": "2111410",
    "end": "2123240"
  },
  {
    "text": "are real junctions--\nthey might look like this where a vertex comes to an edge. There's got to be\nabout n of those,",
    "start": "2123240",
    "end": "2130100"
  },
  {
    "text": "because the vertices\nhave to be somewhere. We're saying there aren't\nvery many at the leaves.",
    "start": "2130100",
    "end": "2136150"
  },
  {
    "text": "And therefore, at the degree\nthree and higher junctions, there can't be very many. Maybe I haven't said\nthis, but if you",
    "start": "2136150",
    "end": "2142100"
  },
  {
    "text": "have a tree with\nL leaves, you'll only have at most L internal\nnodes, branching nodes.",
    "start": "2142100",
    "end": "2149210"
  },
  {
    "text": "But degree two nodes, there\ncould be arbitrarily many. So what we come to is, if\nI have L leaves in a tree,",
    "start": "2149210",
    "end": "2159510"
  },
  {
    "text": "then I'll only get 2\nto the order L gluings. This is what we need to prove. ",
    "start": "2159510",
    "end": "2168621"
  },
  {
    "text": "It will tell us\nthat in particular, if we have a constant\nnumber of leaves, as comes from the\nbounded sharpens case,",
    "start": "2168622",
    "end": "2174730"
  },
  {
    "text": "I will get-- constant\nnumber of gluings? That's not right.",
    "start": "2174730",
    "end": "2180480"
  },
  {
    "text": "There's some polynomial\non n times 2 to the order L. Ah, that's why.",
    "start": "2180480",
    "end": "2191280"
  },
  {
    "text": " I should look at my\nnotes occasionally.",
    "start": "2191280",
    "end": "2198060"
  },
  {
    "text": "The right bound to\nn to the order L. In fact, what I wrote\nis an open problem.",
    "start": "2198060",
    "end": "2203210"
  },
  {
    "text": "I think maybe it's n to the\norder 1 times 2 to the order L.",
    "start": "2203210",
    "end": "2208420"
  },
  {
    "text": "This is what you'd call a fixed\nparameter tractable bound, but no such upper\nbound is known.",
    "start": "2208420",
    "end": "2213760"
  },
  {
    "text": "That might be fun to work\non in the problem session. It might not be difficult,\njust at the time I didn't know those\nbounds were important.",
    "start": "2213760",
    "end": "2220000"
  },
  {
    "text": " So we still have\nto prove this, n",
    "start": "2220000",
    "end": "2225720"
  },
  {
    "text": "to the order L. This is the\npart where my notes are wrong.",
    "start": "2225720",
    "end": "2235840"
  },
  {
    "start": "2235840",
    "end": "2241207"
  },
  {
    "text": "Here's the idea, we have\na small number of leaves, we're worried about\nthese degree 2 junctions. But I claim, actually\nthere isn't a lot going on.",
    "start": "2241207",
    "end": "2250420"
  },
  {
    "text": " Because one of the\ngreat things we can do,",
    "start": "2250420",
    "end": "2255550"
  },
  {
    "text": "over here we said for\nevery dot, was it a vertex or was it an edge? ",
    "start": "2255550",
    "end": "2262640"
  },
  {
    "text": "We can't afford that anymore,\nbecause there's n dots still. We can't afford\n2 to the order n.",
    "start": "2262640",
    "end": "2268880"
  },
  {
    "text": "Where we can afford it is at\nthe leaves, because there's only L of those, and at\nthe branching nodes.",
    "start": "2268880",
    "end": "2275220"
  },
  {
    "text": "So everything except\nthese degree 2 problems we could specify.",
    "start": "2275220",
    "end": "2280580"
  },
  {
    "text": "And really we could\nspecify anything we want. So yeah, we could specify, is\nit a vertex or is it an edge?",
    "start": "2280580",
    "end": "2287040"
  },
  {
    "text": "But we could make\nlife even easier-- hm,",
    "start": "2287040",
    "end": "2292644"
  },
  {
    "text": "I have an idea for\nsolving this open problem. Do I want to solve it right now? Yeah, let's do it.",
    "start": "2292644",
    "end": "2298520"
  },
  {
    "text": " Let me think for a second.",
    "start": "2298520",
    "end": "2305126"
  },
  {
    "text": "I think that's going to work. OK, cool, cool. I needed to rewrite\nthese notes anyway,",
    "start": "2305126",
    "end": "2311240"
  },
  {
    "text": "so I might as well\nprove a stronger result. All right, so let\nme draw a picture.",
    "start": "2311240",
    "end": "2316600"
  },
  {
    "start": "2316600",
    "end": "2322287"
  },
  {
    "text": "There's branching nodes, and I\nsurely draw one of these longer so I can say, oh there's some\ndegree two junctions here.",
    "start": "2322287",
    "end": "2327300"
  },
  {
    "text": "Those are annoying,\nignore those. For everything else-- the\nleaves and the branching",
    "start": "2327300",
    "end": "2332950"
  },
  {
    "text": "nodes-- I'm going to specify\nthe same binary thing. Is it a vertex,\nor is it an edge?",
    "start": "2332950",
    "end": "2338990"
  },
  {
    "text": "But now there's only\norder L of them. There's L leaves, so there's at\nmost L minus 1 internal nodes.",
    "start": "2338990",
    "end": "2345609"
  },
  {
    "text": "Each of them has some\ndegree, but the total number of these dots will be order\nL if I ignore the degree 2.",
    "start": "2345610",
    "end": "2354510"
  },
  {
    "text": "So that's 2 to the order\nL vertex edge colorings,",
    "start": "2354510",
    "end": "2363320"
  },
  {
    "text": "just like before\nexcept now with L,",
    "start": "2363320",
    "end": "2370570"
  },
  {
    "text": "of leaves and branching nodes.",
    "start": "2370570",
    "end": "2377420"
  },
  {
    "text": "Oh, I see the problem. Darn it. ",
    "start": "2377420",
    "end": "2384730"
  },
  {
    "text": "What I'd like to do is mimic\nthe same proof and say, well choose where V1 is and then\njust label them around.",
    "start": "2384730",
    "end": "2393140"
  },
  {
    "text": "There's a problem\nwith that, though. Say V1 is here. ",
    "start": "2393141",
    "end": "2398460"
  },
  {
    "text": "Where's V2? Well, maybe this is an\nedge, maybe this is an edge. This, I have no idea.",
    "start": "2398460",
    "end": "2403960"
  },
  {
    "text": "Is it an edge? Is it a vertex? I can't tell. At degree 2 junctions,\nI have a problem.",
    "start": "2403960",
    "end": "2411230"
  },
  {
    "text": "That's kind of annoying. To fix that-- and so this is\nstill going to be open, alas.",
    "start": "2411230",
    "end": "2418670"
  },
  {
    "text": "To fix that I need to-- I\nreally want to know which dot",
    "start": "2418670",
    "end": "2423869"
  },
  {
    "text": "is which vertex for\nreasons to be determined. But in particular, that\nis part of number two.",
    "start": "2423870",
    "end": "2430750"
  },
  {
    "text": " So I'm just going to give\nup and say, well there's",
    "start": "2430750",
    "end": "2441460"
  },
  {
    "text": "2n different things that they\ncould be, n vertices and edges. ",
    "start": "2441460",
    "end": "2448940"
  },
  {
    "text": "Do I want to do it that way? Maybe n choose order L. I'm\njust going to write down",
    "start": "2448940",
    "end": "2457830"
  },
  {
    "text": "wherever I have a filled dot--\nI guess this one is not filled. Maybe this one's filled, filled.",
    "start": "2457830",
    "end": "2464191"
  },
  {
    "text": "I just going to write down,\nwhat is the vertex number there? This is maybe V3, V5,\nV20, V21, whatever,",
    "start": "2464191",
    "end": "2477480"
  },
  {
    "text": "for each of the filled\ndots among the vertices that I can see, ignoring again\nthe degree two junctions.",
    "start": "2477480",
    "end": "2483850"
  },
  {
    "text": "There's order L of them. I just going to for each one\npick out one of the labels.",
    "start": "2483850",
    "end": "2491041"
  },
  {
    "text": "Again, the order is\ndetermined, so this is the right number of them. And this is n to\nthe order L at most.",
    "start": "2491041",
    "end": "2500270"
  },
  {
    "text": "So this is where I'm\nbeing a bit wasteful. It would be interesting\nto try to get around that. ",
    "start": "2500270",
    "end": "2507300"
  },
  {
    "text": "This was actual\nvertex labelings. ",
    "start": "2507300",
    "end": "2516040"
  },
  {
    "text": "So now, among the\nvertices I can see-- the degree three\njunctions, and the leaves,",
    "start": "2516040",
    "end": "2522490"
  },
  {
    "text": "and higher degree\njunctions-- I know which vertices are glued there. I can also figure out\nwhich edges are glued there",
    "start": "2522490",
    "end": "2530325"
  },
  {
    "text": "by similar labeling, although\nI don't think I actually care. No, I probably care, because\nit's part of number 2.",
    "start": "2530325",
    "end": "2539610"
  },
  {
    "text": "So I do have to also label\nthe open circles which edge is there.",
    "start": "2539610",
    "end": "2545150"
  },
  {
    "text": "But a similar bound holds. What's left? ",
    "start": "2545150",
    "end": "2553560"
  },
  {
    "text": "What's left are the\ndegree 2 vertices. I don't know\nanything about them. ",
    "start": "2553560",
    "end": "2560690"
  },
  {
    "text": "This is particularly tricky\nwhen I have some edge here.",
    "start": "2560690",
    "end": "2567329"
  },
  {
    "text": "But let's first\nthink about the case where I have a\nvertex, add a leaf,",
    "start": "2567330",
    "end": "2573990"
  },
  {
    "text": "and I have these\ndegree two junctions. And I don't know which edge\nis here, which vertex is here.",
    "start": "2573990",
    "end": "2581391"
  },
  {
    "text": "In this case, because\neverything's small, I might be able to figure out. But here, where's the\nV3 to V4 transition?",
    "start": "2581392",
    "end": "2587960"
  },
  {
    "text": "Could be here, or\nit could be here. It could be here.",
    "start": "2587960",
    "end": "2593039"
  },
  {
    "text": "I can't afford to figure it out. Fortunately, I don't\nhave to figure it out.",
    "start": "2593040",
    "end": "2600720"
  },
  {
    "text": "It's not so obvious. From this picture you\ncan't see what's going on, but this came from a polygon.",
    "start": "2600720",
    "end": "2606520"
  },
  {
    "text": "This is an actual vertex,\nthis is an actual vertex. So this edge length is the\ntotal perimeter from V3 to V5",
    "start": "2606520",
    "end": "2617450"
  },
  {
    "text": "along the polygon. I know how long that is.",
    "start": "2617450",
    "end": "2623040"
  },
  {
    "text": "So also if that was\ngoing clockwise from V3",
    "start": "2623040",
    "end": "2628760"
  },
  {
    "text": "around the polygon--\nactually, that's probably counter-clockwise\nin the polygon because everything's inside out. If I go the other way--\nlet's be relative-- from V3,",
    "start": "2628760",
    "end": "2637255"
  },
  {
    "text": "I can measure out\nthe same length. So in fact, I have\nsome polygon-- maybe",
    "start": "2637255",
    "end": "2642520"
  },
  {
    "text": "it looks like this, whatever. I go from V3 to V5, and I\nmeasure out that length.",
    "start": "2642520",
    "end": "2651270"
  },
  {
    "text": "And I go the other\nway from V3, and I know this is getting\nglued to that.",
    "start": "2651270",
    "end": "2657910"
  },
  {
    "text": "So I know where the vertices\nare from the lengths.",
    "start": "2657910",
    "end": "2663770"
  },
  {
    "text": "I can figure out exactly\nwhat this picture must be when I have-- in\nthis case, I happen to maybe get a vertex\ngoing to another vertex.",
    "start": "2663770",
    "end": "2670230"
  },
  {
    "text": "In general, probably get some\nvertex gluing to some edge, and maybe vice versa.",
    "start": "2670230",
    "end": "2675992"
  },
  {
    "text": "But if I can figure out\nexactly what that pattern is, I can figure out the\nlabel of these guys,",
    "start": "2675992",
    "end": "2682660"
  },
  {
    "text": "because I know exactly\nwhat's happening there. So that's good. If it's a vertex to vertex edge\nin the gluing tree like this,",
    "start": "2682660",
    "end": "2694920"
  },
  {
    "text": "I can figure out everything\nbetween that pair. ",
    "start": "2694920",
    "end": "2708485"
  },
  {
    "text": "Is that enough? Almost. ",
    "start": "2708486",
    "end": "2717800"
  },
  {
    "text": "So if I have a leaf where\nthis is a vertex, which I was usually denoting\nby a filled circle,",
    "start": "2717800",
    "end": "2726260"
  },
  {
    "text": "I have various\ndegree 2 junctions which I ignore until I get\nto a degree three or higher",
    "start": "2726260",
    "end": "2731500"
  },
  {
    "text": "junction. Now at this place,\neven just looking",
    "start": "2731500",
    "end": "2737420"
  },
  {
    "text": "at this dot and this dot,\nI know at least one of them must be a vertex. Because I can't glue two edges\ntogether plus other stuff.",
    "start": "2737420",
    "end": "2745440"
  },
  {
    "text": "I can glue at most one edge. So maybe this one's an\nedge, like in the picture that we did before. But one of them\nhas to be a vertex.",
    "start": "2745440",
    "end": "2751830"
  },
  {
    "text": "And then I can figure out\nexactly what's happening there, because I have this\nvertex to vertex thing. And I know the labels.",
    "start": "2751830",
    "end": "2757770"
  },
  {
    "text": "I know this is V5 and\nthis is V13, whatever. I know exactly what's\nhappening on the right side, I",
    "start": "2757770",
    "end": "2764050"
  },
  {
    "text": "measure backwards, I\nknow exactly what's happening on the left side\nand who's going to what. So that determines everything.",
    "start": "2764050",
    "end": "2770350"
  },
  {
    "text": "The problem is when\nI have an edge here,",
    "start": "2770350",
    "end": "2775910"
  },
  {
    "text": "because then I don't know\nwhere it is along the edge. I can't measure lengths\nanymore, somewhere",
    "start": "2775910",
    "end": "2780917"
  },
  {
    "text": "in the middle of the edge.  And indeed, if I have\nsomething like this,",
    "start": "2780917",
    "end": "2793010"
  },
  {
    "text": "where all of these angles--\nI mean this for example is in a convex polygon, this\ncould be a perimeter halving--",
    "start": "2793010",
    "end": "2801030"
  },
  {
    "text": "and it's not determined\nwhat's happening here because this is a rolling belt.",
    "start": "2801030",
    "end": "2806860"
  },
  {
    "text": "I'll show you how\nundetermined it is. Suppose you have a bunch\nof vertices like this,",
    "start": "2806860",
    "end": "2812109"
  },
  {
    "text": "and then some\nvertices like this.",
    "start": "2812110",
    "end": "2818690"
  },
  {
    "text": "Depending on where I\nbend around for E5, these guys could be here.",
    "start": "2818690",
    "end": "2824950"
  },
  {
    "text": "They could be here,\nor here, or here. They could be in the\nmiddle straddling this.",
    "start": "2824950",
    "end": "2832720"
  },
  {
    "text": "In fact, there are about\nn squared different places where these guys could be,\nrelative to these guys.",
    "start": "2832720",
    "end": "2840780"
  },
  {
    "text": "Because there's going to be n\ntransitions from-- if this is n and this is n-- n transitions\nfrom this versus that guy,",
    "start": "2840780",
    "end": "2848500"
  },
  {
    "text": "then n transitions from\nthese versus that guy, n transitions versus that\nguy, total of about n squared.",
    "start": "2848500",
    "end": "2855529"
  },
  {
    "text": "Actually if this is n and this\nis n, it's exactly n squared. So we're not quite\ndone, but I claim",
    "start": "2855530",
    "end": "2861690"
  },
  {
    "text": "that there's really only\norder n squared left. It's always from\nthe rolling belts. We know from last time there's\nat most three rolling belts,",
    "start": "2861690",
    "end": "2871370"
  },
  {
    "text": "so at most quadratic per belt. So total outcome is\npolynomial for what's",
    "start": "2871370",
    "end": "2879660"
  },
  {
    "text": "left, what we haven't specified,\nfor how the degree 2 vertices behave. These are all\ndegree 2 junctions.",
    "start": "2879660",
    "end": "2885710"
  },
  {
    "text": "It's here, or they're\nhere, we don't know. So if you want to get the full\nspecification of what's where,",
    "start": "2885710",
    "end": "2893040"
  },
  {
    "text": "you do all this work. And then for the\ndegree two junctions, you have to deal with\nthe rolling belts.",
    "start": "2893040",
    "end": "2898712"
  },
  {
    "text": "The way to prove\nthis is say, well, if I have a leaf that's a\nvertex, I can get rid of it and induct.",
    "start": "2898712",
    "end": "2904510"
  },
  {
    "text": "In the end, I'll have\nat most four leaves because there's at\nmost four fold points. So I have a constant\nnumber of leaves.",
    "start": "2904510",
    "end": "2912810"
  },
  {
    "text": "You look at each\nbelt, each of them is quadratic and polynomial.",
    "start": "2912810",
    "end": "2920020"
  },
  {
    "text": "If you work out the\nbounds here-- we've tried to be a little\nmore precise-- you could prove an overall\nbound of n to the 2L minus 2",
    "start": "2920020",
    "end": "2929880"
  },
  {
    "text": "for L leaves.  And we have slightly better\nbounds for L equals 4",
    "start": "2929880",
    "end": "2936330"
  },
  {
    "text": "and L equals 3, but\nthat's pretty good.",
    "start": "2936330",
    "end": "2942370"
  },
  {
    "text": "But the proof I gave is\nat least n to the order L. We could n to the order L\ncount different things here,",
    "start": "2942370",
    "end": "2949770"
  },
  {
    "text": "and then some N to the\nconstant at the end. ",
    "start": "2949770",
    "end": "2958200"
  },
  {
    "text": "This ends the\ncombinatorial part. Now we're going to\nget to algorithms. So we've proved all\nof these things.",
    "start": "2958200",
    "end": "2965420"
  },
  {
    "text": "Exponential upper\nand lower bounds for the general case\nand edge-to-edge case, and polynomial for\nbounded sharpness,",
    "start": "2965420",
    "end": "2972800"
  },
  {
    "text": "or when you have a reasonable\nnumber of leaves in your tree. ",
    "start": "2972800",
    "end": "3008300"
  },
  {
    "text": "I'm going to start with this\nedge-to-edge gluing algorithm.",
    "start": "3008300",
    "end": "3014940"
  },
  {
    "start": "3014940",
    "end": "3032140"
  },
  {
    "text": "This is going to use a technique\ncalled dynamic programming,",
    "start": "3032140",
    "end": "3039349"
  },
  {
    "text": "which some of you have seen\nbefore, some of you haven't. It's a very simple idea.",
    "start": "3039350",
    "end": "3045190"
  },
  {
    "text": "You take your\nproblem that you want to solve-- which is\nI have a polygon-- and you split it up\ninto sub-problems.",
    "start": "3045190",
    "end": "3052146"
  },
  {
    "text": "You solve each of\nthe sub-problems, and one of the sub-problems\nis actually the whole problem,",
    "start": "3052146",
    "end": "3057570"
  },
  {
    "text": "and then you're done. In our case, a\nsub-problem is going to be some sub-chain\nfrom one vertex",
    "start": "3057570",
    "end": "3065950"
  },
  {
    "text": "to another vertex\nof the polygon. ",
    "start": "3065950",
    "end": "3075680"
  },
  {
    "text": "So I have some\npolygon, and I just look at some interval of\nthe boundary from VI to VJ.",
    "start": "3075680",
    "end": "3086059"
  },
  {
    "text": "And the idea is, well suppose\nthat VI is glued to VJ.",
    "start": "3086060",
    "end": "3091730"
  },
  {
    "text": "How many different\nways, or how should I glue the part in between? ",
    "start": "3091730",
    "end": "3098540"
  },
  {
    "text": "How should I glue\nthis into itself? Because there's no\ncrossings, there's going to be no gluings\nfrom inside to outside.",
    "start": "3098540",
    "end": "3105900"
  },
  {
    "text": "So that's the sub-problem. And of course if I say from\nthe interval from V1 to V1,",
    "start": "3105900",
    "end": "3113700"
  },
  {
    "text": "that is the entire problem. Of course V1 is glued to V1. So in particular, the\nV1 to V1 sub-problem",
    "start": "3113700",
    "end": "3122980"
  },
  {
    "text": "is what we want to solve. So this is our goal.",
    "start": "3122980",
    "end": "3128549"
  },
  {
    "text": "So I'm going to tell\nyou how to solve all of these sub-problems,\nand therefore how to solve what we\nactually want to solve.",
    "start": "3128549",
    "end": "3133960"
  },
  {
    "text": "That's dynamic programming. So let's try to solve one of\nthese sub-problems, VI to VJ.",
    "start": "3133960",
    "end": "3142992"
  },
  {
    "text": "How are we going to solve it?  So I'm going to draw a picture.",
    "start": "3142992",
    "end": "3151900"
  },
  {
    "text": "It looks like this. This is now thinking\nabout the gluing tree, so the polygon's on\nthe outside here.",
    "start": "3151900",
    "end": "3159070"
  },
  {
    "text": "That's one of the main reasons\ngluing trees were developed, just to describe this algorithm. This algorthim's\nactually quite old,",
    "start": "3159070",
    "end": "3165540"
  },
  {
    "text": "1996 by [INAUDIBLE]\nand [INAUDIBLE]. The edge-to-edge case was\nbefore I joined this group.",
    "start": "3165540",
    "end": "3171970"
  },
  {
    "text": "And then later together\nwe did the general case, unbounded sharpness, which\nis what we'll do next.",
    "start": "3171970",
    "end": "3177145"
  },
  {
    "text": " So this is at the\nheart of everything. So we have VO to\nVJ glued together.",
    "start": "3177145",
    "end": "3184170"
  },
  {
    "text": "We want to know how to\nglue together the rest. Well, maybe some vertices\nget glued in here in addition",
    "start": "3184170",
    "end": "3191290"
  },
  {
    "text": "to VI and VJ, maybe not. Let's think about what\ngets glued to this edge.",
    "start": "3191290",
    "end": "3198609"
  },
  {
    "text": "There's the edge\nfrom VI to VI plus 1. And this is an edge-to-edge\ngluing, so what gets glued there\nis an actual edge.",
    "start": "3198610",
    "end": "3205280"
  },
  {
    "text": " What edge could it be? Some edge over here, I\ndon't know which one.",
    "start": "3205280",
    "end": "3213256"
  },
  {
    "text": "The power of the\ndynamic programming is you don't need to know. It's some edge, VK, VK\nplus 1 gets glued there.",
    "start": "3213256",
    "end": "3221490"
  },
  {
    "text": " There's only one of them,\nit's out there somewhere.",
    "start": "3221490",
    "end": "3227710"
  },
  {
    "text": "It has to have\nmatching edge length, but there could be many\nchoices, all of which have matching edge length. Maybe all the edge\nlengths are the same,",
    "start": "3227710",
    "end": "3234220"
  },
  {
    "text": "but there's at most n\nchoices for that edge.",
    "start": "3234220",
    "end": "3245550"
  },
  {
    "text": "It's actually at most J\nminus I choices plus 1. But there's at most\nn edges in here,",
    "start": "3245550",
    "end": "3252715"
  },
  {
    "text": "so there's at most n\ndifferent possibilities. Just try them all. Think about all of them.",
    "start": "3252716",
    "end": "3258640"
  },
  {
    "text": "I haven't said here whether\nI'm doing-- or I have? I guess I've been pointing here. I really want to do both of\nthese algorithms at once,",
    "start": "3258640",
    "end": "3265170"
  },
  {
    "text": "but I'll start with this\none, which is just find all the gluings in\nexponential time, which is optimal in the worst\ncase because there",
    "start": "3265170",
    "end": "3271880"
  },
  {
    "text": "can be exponentially\nmany outputs. ",
    "start": "3271880",
    "end": "3277329"
  },
  {
    "text": "So try all n choices\nfor VK VK plus 1. What happens when\nI do one of them?",
    "start": "3277330",
    "end": "3283410"
  },
  {
    "text": "I might choose one of them. ",
    "start": "3283410",
    "end": "3289570"
  },
  {
    "text": "Well, the new picture will\nbe-- so the topological picture",
    "start": "3289570",
    "end": "3300190"
  },
  {
    "text": "is I still have VI glued to VJ. ",
    "start": "3300190",
    "end": "3306000"
  },
  {
    "text": "Then I also have here VK and\nVI plus 1 glued together.",
    "start": "3306000",
    "end": "3313020"
  },
  {
    "text": "And I have VI also\nglued to VK plus 1.",
    "start": "3313020",
    "end": "3318339"
  },
  {
    "text": "Now it's possible\nactually VK plus 1 and VJ are the same thing, in which\ncase there's no loop here. And that's the case\nwhen no extra vertex",
    "start": "3318339",
    "end": "3324530"
  },
  {
    "text": "got glued in there. But this is the\ngeneric situation. If this is link 0, then\nthese guys are the same.",
    "start": "3324530",
    "end": "3333140"
  },
  {
    "text": "So really what I have now are\ntwo different sub-problems. There's this thing, which\nis VI plus 1, dot, dot, VK.",
    "start": "3333140",
    "end": "3341520"
  },
  {
    "text": "And there's this one which\nis VK plus 1 dot, dot, VJ. ",
    "start": "3341520",
    "end": "3348760"
  },
  {
    "text": "The idea with the\nsub-problems is to solve the\nsub-problems in order by increasing chain length.",
    "start": "3348760",
    "end": "3354540"
  },
  {
    "text": "So start with very short ones. And I saw longer and longer\nones using the previous results.",
    "start": "3354540",
    "end": "3359860"
  },
  {
    "text": "If I've already\ncomputed the answers to VK plus 1 to VJ\nbecause that is smaller",
    "start": "3359860",
    "end": "3364975"
  },
  {
    "text": "than the original--\nlook, there's two edges fewer at least. This thing is at least 2\nsmaller than the original chain",
    "start": "3364976",
    "end": "3371130"
  },
  {
    "text": "because here's two edges. So I wanted to solve VI to VJ. I guessed what VK\nto VK plus 1 was,",
    "start": "3371130",
    "end": "3377690"
  },
  {
    "text": "meaning I tried all the\npossibilities for each one. I say, well what are all\nthe possibilities for this? What are all the\npossibilities for this?",
    "start": "3377690",
    "end": "3384620"
  },
  {
    "text": "Take the cross-product. Just multiply those\nsets together. Those are all the\npossible gluings.",
    "start": "3384620",
    "end": "3390750"
  },
  {
    "text": "And then I sum that. I take all the options for\nall the different values of K.",
    "start": "3390750",
    "end": "3398380"
  },
  {
    "text": "And that's it. That output is all\nthe possible gluings.",
    "start": "3398380",
    "end": "3404024"
  },
  {
    "text": "So this should actually\ngive another way to prove that the number\nof different gluings is only exponential, but this is\njust for the edge-to-edge case.",
    "start": "3404024",
    "end": "3411960"
  },
  {
    "text": " Maybe I should write that down.",
    "start": "3411960",
    "end": "3418270"
  },
  {
    "text": "So we have for each\nchoice of K output--",
    "start": "3418270",
    "end": "3430020"
  },
  {
    "text": "let's say, and for each\nsolution to the smaller",
    "start": "3430020",
    "end": "3438660"
  },
  {
    "text": "sub-problem VK plus 1 to VJ. And then for each solution\nto VK plus 1 to VK output.",
    "start": "3438660",
    "end": "3456187"
  },
  {
    "text": "This is very simple. This is just a product\nover various things. There's only order\nn choices here.",
    "start": "3456187",
    "end": "3465609"
  },
  {
    "text": "This thing, it depends\nhow many solutions there are to those sub-problems, but\nit's the product of the two.",
    "start": "3465610",
    "end": "3471859"
  },
  {
    "text": "And then that's\nthe total output.",
    "start": "3471860",
    "end": "3476970"
  },
  {
    "text": "Believe me, this runs\nin exponential time. That's not very hard to prove. What's interesting\nis we can make",
    "start": "3476970",
    "end": "3483100"
  },
  {
    "text": "the same algorithm with\na little bit of tweaking get a polynomial time\ndecision algorithm.",
    "start": "3483100",
    "end": "3489280"
  },
  {
    "text": " That's cool. How do we make it a\npolynomial decision algorithm?",
    "start": "3489280",
    "end": "3498170"
  },
  {
    "text": "I can't afford to store every\nsolution for every sub-problem because there can be\nexponentially many.",
    "start": "3498170",
    "end": "3503220"
  },
  {
    "text": "So I only get to store one\nsolution for every sub-problem. ",
    "start": "3503220",
    "end": "3509280"
  },
  {
    "text": "So this is the great idea. ",
    "start": "3509280",
    "end": "3516369"
  },
  {
    "text": "Let's say for each sub-problem,\nlet's say VI to VK only store",
    "start": "3516370",
    "end": "3535830"
  },
  {
    "text": "the solution that\nminimizes the amount",
    "start": "3535830",
    "end": "3541990"
  },
  {
    "text": "of stuff glued into VI VJ. ",
    "start": "3541990",
    "end": "3550260"
  },
  {
    "text": "So the sum of the\nangles glued at VI,",
    "start": "3550260",
    "end": "3557440"
  },
  {
    "text": "which is the same thing as\nVJ because they are already glued together.",
    "start": "3557440",
    "end": "3564270"
  },
  {
    "text": "That's what we were told. So I had many choices here. I had all the choices for\nK. I had all the choices",
    "start": "3564270",
    "end": "3571080"
  },
  {
    "text": "for up here. I had all the\nchoices for up here. Well actually now I'm just going\nto think about one choice up here, which is what\nis the choice that",
    "start": "3571080",
    "end": "3578190"
  },
  {
    "text": "minimizes the angle glued here? And what is the\nchoice over here that minimizes the angle glued there?",
    "start": "3578190",
    "end": "3584650"
  },
  {
    "text": "Why the minimum? Because some of these are wrong. I should actually say\noutput if it's Alexandroff.",
    "start": "3584650",
    "end": "3592269"
  },
  {
    "text": "We only want to output\nAlexandroff gluings. We only want to\noutput gluings where the total sum of the angles\nis less than or equal to 360.",
    "start": "3592270",
    "end": "3598530"
  },
  {
    "text": "I need to check\nthat for every one. If I want to have the most\nchance of it being Alexandroff,",
    "start": "3598530",
    "end": "3606260"
  },
  {
    "text": "if I got the least possible\nangle glued here and glued here, that's my best\nhope of it working.",
    "start": "3606260",
    "end": "3611530"
  },
  {
    "text": "Now I still have flexibility,\nwhich is I get to choose k. There's still n choices\nfor k, but everything else",
    "start": "3611530",
    "end": "3617579"
  },
  {
    "text": "is determined at that point. Once I fix K I see, well\ndoes this work, yes or no?",
    "start": "3617580",
    "end": "3623730"
  },
  {
    "text": "If it works, that\ngives me one candidate for how much material\ngets glued here. It could be a lot,\ncould be a little.",
    "start": "3623730",
    "end": "3630260"
  },
  {
    "text": "I try for all K, I\ntake the smallest one. So it's the same loop, except\nthere's no four loops here.",
    "start": "3630260",
    "end": "3637010"
  },
  {
    "text": "It's just for every\nchoice of K, I look at the solution to VK plus\n1 to VJ, the solution for VI",
    "start": "3637010",
    "end": "3642490"
  },
  {
    "text": "plus 1 to VK. If it's Alexandroff,\nI don't output it. But I check, is it the best\nsolution so far in terms",
    "start": "3642490",
    "end": "3650710"
  },
  {
    "text": "of the total angle\nglued of VI and VJ. I keep looping until I\nfind the very best one,",
    "start": "3650710",
    "end": "3657720"
  },
  {
    "text": "and I output that one. That would be the\nsolution that I store.",
    "start": "3657720",
    "end": "3663550"
  },
  {
    "text": "The result is, the running\ntime is actually polynomial,",
    "start": "3663550",
    "end": "3668700"
  },
  {
    "text": "because the number of\nsub-problems-- a sub-problem is determined by two vertices.",
    "start": "3668700",
    "end": "3674880"
  },
  {
    "text": "There's only n of\nthese, n of these. So the number of\nsub-problems is n squared.",
    "start": "3674880",
    "end": "3681040"
  },
  {
    "text": "For each sub-problem I need to\nlook at order n choices for K.",
    "start": "3681040",
    "end": "3688540"
  },
  {
    "text": "And so the total\nrunning time is n squared times n,\nwhich is n cubed.",
    "start": "3688540",
    "end": "3697950"
  },
  {
    "text": "And that will tell\nyou if there's any hope of anything\nworking, if there's any gluing this will find\none, because it's always",
    "start": "3697950",
    "end": "3706980"
  },
  {
    "text": "trying to minimize the angles\nthat get glued together",
    "start": "3706980",
    "end": "3713842"
  },
  {
    "text": "That's is edge-to-edge. ",
    "start": "3713842",
    "end": "3720030"
  },
  {
    "text": "Now we can generalize. It's a little bit\nmessy, but we can generalize to arbitrary gluings.",
    "start": "3720030",
    "end": "3727060"
  },
  {
    "start": "3727060",
    "end": "3732770"
  },
  {
    "text": "Let me sketch a little\nbit how that goes. ",
    "start": "3732770",
    "end": "3742029"
  },
  {
    "text": "So we've seen now this result\nfor algorithms and this result",
    "start": "3742030",
    "end": "3747450"
  },
  {
    "text": "for algorithms. And now I'm going to tell\nyou about this result. I wish there was a result\nhere to tell you about,",
    "start": "3747450",
    "end": "3753170"
  },
  {
    "text": "but there isn't. So this last part that I did\nwhere the decision algorithm is very efficient, we don't\nknow how to generalize that",
    "start": "3753170",
    "end": "3759160"
  },
  {
    "text": "to the general case,\narbitrary gluings. This only works\nfor edge-to-edge. We assumed a whole\nedge, VK VK plus 1",
    "start": "3759160",
    "end": "3766060"
  },
  {
    "text": "was glued to VI VI plus 1. But the enumeration\npart where we said,",
    "start": "3766060",
    "end": "3772190"
  },
  {
    "text": "oh just give me\nall the solutions, that we can get to work. It's just slightly\nmore complicated.",
    "start": "3772190",
    "end": "3778250"
  },
  {
    "text": "Let me tell you how it\ngets more complicated.",
    "start": "3778250",
    "end": "3784770"
  },
  {
    "text": "So one difference is that there\nare more kinds of sub-problems,",
    "start": "3784770",
    "end": "3790930"
  },
  {
    "text": "this is the heart\nof the problem. We have the VI to VJ sub-problem\njust like before, that's easy.",
    "start": "3790930",
    "end": "3798510"
  },
  {
    "text": "And then we have the\nVI to EJ sub-problem.",
    "start": "3798510",
    "end": "3803550"
  },
  {
    "text": "So this one was VI was glued to\nVJ, very clear what that means.",
    "start": "3803550",
    "end": "3808830"
  },
  {
    "text": "Here we have VI is\nglued to an edge EJ. ",
    "start": "3808830",
    "end": "3816190"
  },
  {
    "text": "The trouble with that is we\ndon't know where on the edge it's glued.",
    "start": "3816190",
    "end": "3821200"
  },
  {
    "text": "It's somewhere on the edge. This is where\nthings get trickier.",
    "start": "3821200",
    "end": "3828200"
  },
  {
    "text": "And there's also\nthe symmetric case, of course, where it's EI to VJ. But we don't really\nneed to worry about",
    "start": "3828200",
    "end": "3833430"
  },
  {
    "text": "that, it's symmetric. ",
    "start": "3833430",
    "end": "3842670"
  },
  {
    "text": "So what does a\nsolution look like? ",
    "start": "3842670",
    "end": "3849310"
  },
  {
    "text": "So before, a solution\nwas an entire gluing. Now, because the\ngluings can be infinite.",
    "start": "3849310",
    "end": "3855602"
  },
  {
    "text": "There can be infinitely\nmany different gluings. I can't actually list\nevery one explicitly. I've actually got to\nexplain ranges of gluings",
    "start": "3855602",
    "end": "3862140"
  },
  {
    "text": "if I have any hope of\ncapturing all of them. So what a solution\nis going to look like",
    "start": "3862140",
    "end": "3868049"
  },
  {
    "text": "is the combinatorial type of the\ngluing, which was this stuff.",
    "start": "3868050",
    "end": "3880226"
  },
  {
    "text": "You have an abstract\ngluing tree, you get which vertices\nglue to what edges. So you have pretty\nmuch the whole picture,",
    "start": "3880226",
    "end": "3885930"
  },
  {
    "text": "just not exactly where each\nvertex is glued to which edge. Then I also will tell\nyou a total angle",
    "start": "3885930",
    "end": "3895010"
  },
  {
    "text": "of material glued at VI so far.",
    "start": "3895010",
    "end": "3905822"
  },
  {
    "text": "In both these cases,\nI want to know how much stuff in\nmy gluing at VI",
    "start": "3905822",
    "end": "3911320"
  },
  {
    "text": "so I can tell whether\nit's Alexandroff. And then in the case where I\nglue a vertex to an edge, what",
    "start": "3911320",
    "end": "3922760"
  },
  {
    "text": "I'm going to do is\ngive you an interval. ",
    "start": "3922760",
    "end": "3928535"
  },
  {
    "text": "The Interval's always\ngoing to be starting at 0, and going to some\nvalue x. x is less than",
    "start": "3928535",
    "end": "3938260"
  },
  {
    "text": "or equal to the length\nof the edge, VJ. ",
    "start": "3938260",
    "end": "3946510"
  },
  {
    "text": "And this is the interval along\nthe edge where VI can glue. ",
    "start": "3946510",
    "end": "3953510"
  },
  {
    "text": "So I'm going to tell\nyou an actual interval here from the edge EJ.",
    "start": "3953510",
    "end": "3960320"
  },
  {
    "text": "As long as you glue VI\nto somewhere between there and there,\nthis stuff works. Whatever I specified\nworks over there.",
    "start": "3960320",
    "end": "3966980"
  },
  {
    "text": "You can't go beyond some point. ",
    "start": "3966980",
    "end": "3975897"
  },
  {
    "text": "That will turn out to be enough. ",
    "start": "3975897",
    "end": "3992420"
  },
  {
    "text": "So while there's the VI to VJ\ncase, it's less interesting.",
    "start": "3992420",
    "end": "3999750"
  },
  {
    "text": "Let's think about now if\nI want to actually solve the VI to EJ case.",
    "start": "3999750",
    "end": "4010075"
  },
  {
    "text": " What could happen?",
    "start": "4010075",
    "end": "4015130"
  },
  {
    "text": "Before there was\nonly one-- we looked at what glues VI to VI\nplus 1 and it was one edge.",
    "start": "4015130",
    "end": "4022200"
  },
  {
    "text": "It was a little\neasier to think about. Let's not think\nabout the whole edge, but let's think about locally\nwhat happens just after VI.",
    "start": "4022200",
    "end": "4031410"
  },
  {
    "text": "Something gets glued there. Now it could be EJ\nactually gets glued there. It could be we continue gluing.",
    "start": "4031410",
    "end": "4037290"
  },
  {
    "text": "That's kind of like\nzipping, although not exactly what we were\ncalling zipping before. Here I call it\nzipping, good choice.",
    "start": "4037290",
    "end": "4047200"
  },
  {
    "text": "So one option is that you\nzip for a little while. Now, how long would you zip?",
    "start": "4047200",
    "end": "4052440"
  },
  {
    "text": "A couple options. You zip until you\nhit a vertex, you can't stop in the\nmiddle of two edges.",
    "start": "4052440",
    "end": "4058240"
  },
  {
    "text": "So maybe you hit a\nvertex here first, maybe you hit a\nvertex here first, and the next vertex\nhere is farther away.",
    "start": "4058240",
    "end": "4064519"
  },
  {
    "text": "So there's two pictures. Let me draw the two pictures. It could be hit you\nhit VI plus 1 first.",
    "start": "4064520",
    "end": "4071205"
  },
  {
    "start": "4071205",
    "end": "4076320"
  },
  {
    "text": "So here's EJ. It could be you hit\nthe vertex of EJ first.",
    "start": "4076320",
    "end": "4084020"
  },
  {
    "start": "4084020",
    "end": "4091330"
  },
  {
    "text": "In this case, you\nget a sub-problem which is VI plus 1 to EJ.",
    "start": "4091330",
    "end": "4096549"
  },
  {
    "text": "These are glued to each other. In this case, you get\nthis vertex, which I think",
    "start": "4096550",
    "end": "4101560"
  },
  {
    "text": "is VJ gets glued to the\nedge EI, which is just",
    "start": "4101560",
    "end": "4108830"
  },
  {
    "text": "the symmetric case I\nwas talking about here. Edge EI is glued to Vertex VJ.",
    "start": "4108830",
    "end": "4117318"
  },
  {
    "text": "So those are smaller\nsub-problems. You solve those, and\nthen from that you will see whether this\nactually gives you",
    "start": "4117319",
    "end": "4122630"
  },
  {
    "text": "a solution to the\noriginal sub-problem you wanted to solve. That's the zip case.",
    "start": "4122630",
    "end": "4128670"
  },
  {
    "text": "There's another case\nwhich we call tug. ",
    "start": "4128670",
    "end": "4135689"
  },
  {
    "text": "In the tug case-- so\nthat was supposing, we'll maybe nothing\nelse gets glued in here.",
    "start": "4135689",
    "end": "4143589"
  },
  {
    "text": "But maybe another vertex gets\nglued in there, that's the tug. To pick a vertex, I pull it in.",
    "start": "4143590",
    "end": "4149750"
  },
  {
    "text": "So in that case we get\na picture like this.",
    "start": "4149750",
    "end": "4157149"
  },
  {
    "text": " So here's EJ, here's\nVI, and now there's",
    "start": "4157149",
    "end": "4164880"
  },
  {
    "text": "some other vertex VK\nthat gets glued in there. Which vertex? I don't know, try them all.",
    "start": "4164880",
    "end": "4172252"
  },
  {
    "text": "Just like before,\nbefore we were choosing an edge that gets glued in. Now it's not necessarily\na whole edge, but if there's any\nvertex that glues in,",
    "start": "4172252",
    "end": "4181020"
  },
  {
    "text": "pick who's the next one. And now I get a sub-problem\nhere which is VI to VK.",
    "start": "4181020",
    "end": "4186930"
  },
  {
    "text": "I get a sub-problem\nhere which is VK to EJ.",
    "start": "4186930",
    "end": "4193210"
  },
  {
    "text": "I solve each of those, I\ntake the cross-product, I do that for all values\nof K just like I did here,",
    "start": "4193210",
    "end": "4201679"
  },
  {
    "text": "except the labels have\nchanged a little bit, and I find all the outputs. And again, you can show that\nit's exponential time at most.",
    "start": "4201680",
    "end": "4209390"
  },
  {
    "text": "So that's an algorithm. Now, it's exponential time,\nbut really it's not so bad",
    "start": "4209390",
    "end": "4219750"
  },
  {
    "text": "because it's at most\ncubic like we had before. But we're doing\nextra work, which",
    "start": "4219750",
    "end": "4226360"
  },
  {
    "text": "is something like the\nnumber of gluings dealt",
    "start": "4226360",
    "end": "4231900"
  },
  {
    "text": "with at each stage\nper sub-problem.",
    "start": "4231900",
    "end": "4237590"
  },
  {
    "text": "Now, it's not just the\nnumber of actual solutions, because we generate\nall possible solutions",
    "start": "4237590",
    "end": "4244150"
  },
  {
    "text": "and then check whether\nthey're Alexandroff. So if you have some example that\nhappens to be unique in the way",
    "start": "4244150",
    "end": "4250940"
  },
  {
    "text": "that it glues up, this bound\nwill not actually be very good. It's still going to\nconsider lots of options.",
    "start": "4250940",
    "end": "4256120"
  },
  {
    "text": "But in the case of\nbounded sharpness,",
    "start": "4256120",
    "end": "4262730"
  },
  {
    "text": "where the number of gluings\nis only polynomial-- and it's polynomial\nfor a strong reason that the trees can't\nget very complicated--",
    "start": "4262730",
    "end": "4270320"
  },
  {
    "text": "then we can actually turn this\ninto a polynomial algorithm. This will be n cubed\ntimes that bound.",
    "start": "4270320",
    "end": "4275880"
  },
  {
    "text": "As long as your polygon\nis bounded sharpness, you can show that at every stage\nof course the number of gluings",
    "start": "4275880",
    "end": "4281730"
  },
  {
    "text": "will also be polynomial. And so then even the\nnumber of gluings you have to consider and\ncheck will be polynomial.",
    "start": "4281730",
    "end": "4287773"
  },
  {
    "text": "So the whole thing will\nbe polynomial time, that is this result\nand this result.",
    "start": "4287773",
    "end": "4293720"
  },
  {
    "text": " So if your polygon is\nvaguely reasonable,",
    "start": "4293720",
    "end": "4299042"
  },
  {
    "text": "this is actually a\nreally good algorithm. This algorithm has\nbeen implemented by two groups, one\n[INAUDIBLE] in mathematica",
    "start": "4299042",
    "end": "4305990"
  },
  {
    "text": "and another [INAUDIBLE],\nwhich sadly is not-- his implementation\nused to be on the web, I can't find it anymore.",
    "start": "4305990",
    "end": "4313400"
  },
  {
    "text": "But you get either\nimplementation, plug-in your\npolygon, and it just lists all the possible gluings.",
    "start": "4313400",
    "end": "4320850"
  },
  {
    "text": "So that's all the\ntheory for today. Now I want to show you a whole\nbunch of gluings for fun.",
    "start": "4320850",
    "end": "4326110"
  },
  {
    "text": "Once you have all the stuff,\nwe have these programs, you get to play. So our first play is not that.",
    "start": "4326110",
    "end": "4336890"
  },
  {
    "text": "That was the last play. First thing, we saw this before. I'll just remind you\nwhat it looks like",
    "start": "4336890",
    "end": "4343090"
  },
  {
    "text": "and tell you a little bit\nabout what's going on here. So this was the cube.",
    "start": "4343090",
    "end": "4348660"
  },
  {
    "text": "And then it's eventually\ngoing to fold into a cross. The real study here is\nfor the Latin Cross-- which is the picture\nI keep drawing",
    "start": "4348660",
    "end": "4355710"
  },
  {
    "text": "at the beginning of lecture and\nwhich will now be unfolded-- what other convex polyhedra\ncan you glue that polygon into?",
    "start": "4355710",
    "end": "4364280"
  },
  {
    "text": "So it's like you're not\ntold what the creases are. You just want to look at\ngluings, the resulting creases.",
    "start": "4364280",
    "end": "4370940"
  },
  {
    "text": "This is one convex\npolyhedron you can make. This is something that can\ncome from Alexandroff's theorem",
    "start": "4370940",
    "end": "4376190"
  },
  {
    "text": "that you actually get a flat,\ndoubly-covered convex polygon. It's technically a polyhedron,\naccording to Alexandroff.",
    "start": "4376190",
    "end": "4383320"
  },
  {
    "text": "These are all edge-to-edge\ngluings if the length two edges are actually subdivided\ninto two length one edges.",
    "start": "4383320",
    "end": "4391070"
  },
  {
    "text": "And this video only enumerates\nthe edge-to-edge gluings, because at this point we only\nhad the edge-to-edge algorithm.",
    "start": "4391070",
    "end": "4397355"
  },
  {
    "text": "I forget, this video\nis '98, I think. This algorithm was in '96, so\nthey had just implemented that.",
    "start": "4397355",
    "end": "4403690"
  },
  {
    "text": "And then that's when I joined. I was just starting out as\na grad student and said, OK let's make a video.",
    "start": "4403690",
    "end": "4409030"
  },
  {
    "text": "That would be cool. So I think there's one more. And this is the only\none where we actually",
    "start": "4409030",
    "end": "4415410"
  },
  {
    "text": "have the animations. This octahedron, this\nwas tricky to find, beceause at this\npoint there were",
    "start": "4415410",
    "end": "4420880"
  },
  {
    "text": "no algorithms for\nAlexandroff's theorem. So we found it by taking\na piece of cardboard,",
    "start": "4420880",
    "end": "4426080"
  },
  {
    "text": "gluing it up,\ngetting a protractor, and measuring all\nthe dihedral angles, and then typing them in.",
    "start": "4426080",
    "end": "4431600"
  },
  {
    "text": "And Lo and behold,\nin that animation they don't perfectly close\nup, but it's very close,",
    "start": "4431600",
    "end": "4438090"
  },
  {
    "text": "up to the measurement\nerror of the protractor. So for edge-to-edge\ngluings, there are exactly five\nconvex polyhedra",
    "start": "4438090",
    "end": "4443642"
  },
  {
    "text": "you can make from that cross. ",
    "start": "4443642",
    "end": "4448729"
  },
  {
    "text": "But if you allow\nnon-edge-to-edge gluings-- and so some years later when\nwe came up with that algorithm and implemented it, we\ndiscovered there are 85 gluings",
    "start": "4448729",
    "end": "4456710"
  },
  {
    "text": "of the cross. This is only six of them. We're going to do it\nstarting with the cube,",
    "start": "4456710",
    "end": "4462260"
  },
  {
    "text": "and then we're going to go\nin increasing order of faces. So there's two flat,\ndoubly-covered quadrilaterals.",
    "start": "4462260",
    "end": "4470000"
  },
  {
    "text": "They're different. Then there is a bunch of\ntetrahedra that you can make.",
    "start": "4470000",
    "end": "4475030"
  },
  {
    "text": "None of them are regular. One of them was edge-to-edge,\nI think it might be this one.",
    "start": "4475030",
    "end": "4480540"
  },
  {
    "text": "I think there's some more\ntetrahedra at the top there. The blue labels here\nsay what they are.",
    "start": "4480540",
    "end": "4486389"
  },
  {
    "text": "For each one of\nthese we taped up the-- we knew what\nthe gluing was. We taped it up, and\nthen we played with it",
    "start": "4486390",
    "end": "4493512"
  },
  {
    "text": "until we figured out,\nthis must be the creases. Then we actually drew\nin that create pattern, folded it up, and verified\nthat is the right answer.",
    "start": "4493512",
    "end": "4500192"
  },
  {
    "text": "Because again, at this\npoint no algorithm for Alexandroff's theorem. More tetrahedra.",
    "start": "4500192",
    "end": "4505199"
  },
  {
    "text": "Here we get to the\nfive-sided polyhedra. I think this one is edge-to-edge\nand is in the video.",
    "start": "4505200",
    "end": "4510730"
  },
  {
    "text": "It's a little hard to\ntell from the-- actually, you can tell from the pictures. Here there's two sevens.",
    "start": "4510730",
    "end": "4517240"
  },
  {
    "text": "That means seven glued to seven. That means this is a\nfold point, this edge is glued to that edge. Over here, every edge\nhas only one label,",
    "start": "4517240",
    "end": "4524050"
  },
  {
    "text": "where again this is\nconsidered two edges. So this was the\nedge-to-edge gluing. ",
    "start": "4524050",
    "end": "4532490"
  },
  {
    "text": "I think a couple more slides. We get another\npentahedron and then starting to get hexahedra other\nthan the cube, lots of them.",
    "start": "4532490",
    "end": "4542989"
  },
  {
    "text": "Then we start getting octahedra. The last one in the\nvideo was octahedron. It's not this one, this\none has some fold points.",
    "start": "4542990",
    "end": "4551141"
  },
  {
    "text": "It must be-- these\nare all octahedra, so it's one of these.",
    "start": "4551141",
    "end": "4556272"
  },
  {
    "text": "This guy. Of course, it's hard to\ntell from a static image, but yeah, obviously that was\nthe octahedron from the video.",
    "start": "4556272",
    "end": "4564910"
  },
  {
    "text": "And that is all. So actually, there's only\n23 distinct polyhedra you can make, but you can\nmake them out of 85 gluings.",
    "start": "4564910",
    "end": "4572680"
  },
  {
    "text": "So 85 gluings. If one of them is symmetric,\nthe cube is symmetric.",
    "start": "4572680",
    "end": "4578329"
  },
  {
    "text": "So that's one. And then the other\n84, there's everything and its reflectional\ninverse, because this polygon",
    "start": "4578330",
    "end": "4585170"
  },
  {
    "text": "is symmetric. So it's 84 divided by 2,\nwhich is 42, a good number.",
    "start": "4585170",
    "end": "4591860"
  },
  {
    "text": "42 actual honest\ngluings plus the cube.",
    "start": "4591860",
    "end": "4597679"
  },
  {
    "text": "But those 42 gluings,\na lot of them generate the same\npolyhedron, because there's only 23 distinct\npolyhedra in the end.",
    "start": "4597680",
    "end": "4604710"
  },
  {
    "text": "I don't have it here,\nit's on my web page. You could look up\nall 85, and it says which ones are the\nsame as which ones.",
    "start": "4604710",
    "end": "4610000"
  },
  {
    "text": "And it was a real surprise\nwhen we were building them. It was like, wait\nthis looks identical to this other\npolyhedron, and it's glued in a very different way.",
    "start": "4610000",
    "end": "4616280"
  },
  {
    "text": "Sort of an extrasymmetry\nof that polyhedron, as opposed to the cross itself. It was pretty cool. ",
    "start": "4616280",
    "end": "4623510"
  },
  {
    "text": "An interesting\nthing to note here is that we only bisect\nthe edges, right?",
    "start": "4623510",
    "end": "4633810"
  },
  {
    "text": "There's a lot of\nedge-to-edge stuff, and then some of the\nedges get cut in half.",
    "start": "4633810",
    "end": "4638890"
  },
  {
    "text": "And in this case actually, they\nlook mostly like fold points, but that's not always the case.",
    "start": "4638890",
    "end": "4644170"
  },
  {
    "text": "It turns out, if you have a\npolygon were all the edge links are the same like this and\nyou look at non-edge-to-edge",
    "start": "4644170",
    "end": "4653600"
  },
  {
    "text": "gluings, and there\nare no rolling belts-- because if there's\nrolling belts, it's infinite because you're\nnot going to have anything like",
    "start": "4653600",
    "end": "4659370"
  },
  {
    "text": "this. Then it suffices to\nsubdivide every edge in half.",
    "start": "4659370",
    "end": "4666889"
  },
  {
    "text": "And then every non-edge-to-edge\ngluing will become an edge-to-edge gluing. This is called the [INAUDIBLE]\nhalf-length theorem",
    "start": "4666890",
    "end": "4675740"
  },
  {
    "text": "in our book. It was proved by\nthis guy [INAUDIBLE], who was one of the\nimplementers of the algorithms",
    "start": "4675740",
    "end": "4681070"
  },
  {
    "text": "for enumerating\nall these gluings. And he proved it afterward. The code doesn't actually\nexploit that fact,",
    "start": "4681070",
    "end": "4686100"
  },
  {
    "text": "but it's kind of neat. All you have to worry\nabout are half edges in this case where all the\nedge links are the same.",
    "start": "4686100",
    "end": "4692900"
  },
  {
    "text": "All right, that's a cross. And it's kind of\nmaybe even surprising that there's only finitely\nmany different gluings,",
    "start": "4692900",
    "end": "4698810"
  },
  {
    "text": "but there's no way to\nget a rolling belt here. Let's look at-- oh, here\nare all the polyhedra",
    "start": "4698810",
    "end": "4704795"
  },
  {
    "text": "in a pretty 3D form. Here is a polygon\nwhich is convex.",
    "start": "4704795",
    "end": "4711240"
  },
  {
    "text": "It is the equilateral triangle. And so, no surprise, there\na rolling belts here. But here's the picture of\nhow all the rolling belts fit",
    "start": "4711240",
    "end": "4718449"
  },
  {
    "text": "together. In principle, you can\nextract this picture from this algorithm.",
    "start": "4718450",
    "end": "4724159"
  },
  {
    "text": "Although combined with an\nalgorithm for Alexandroff's theorem, that's the tricky part. So you have some\nvery simple gluings,",
    "start": "4724160",
    "end": "4730150"
  },
  {
    "text": "like could could fold\nthe triangle in half, get this doubly-covered\ntriangle, you can make a\nregular tetrahedron, or you can fold the triangle\ninto a flat doubly-covered",
    "start": "4730150",
    "end": "4737230"
  },
  {
    "text": "rectangle like at the top. And then there are\nrolling belts in between. So this is one\nrolling belt, this",
    "start": "4737230",
    "end": "4743170"
  },
  {
    "text": "is another possible\nrolling belt, another possible rolling\nbelt each with a gluing tree. They're not all drawn here.",
    "start": "4743170",
    "end": "4748730"
  },
  {
    "text": "And this is sort of\nthe topology of all of the possible gluings you\ncould make, which is nice.",
    "start": "4748730",
    "end": "4755720"
  },
  {
    "text": "So a triangle is\nrelatively simple. The square is a little messier.",
    "start": "4755720",
    "end": "4764740"
  },
  {
    "text": "There's again a bunch of\nparticularly nice gluings like the [INAUDIBLE], the\nfolding in half one way,",
    "start": "4764740",
    "end": "4774390"
  },
  {
    "text": "folding in half the other\nway, making a letter, and some tetrahedra that\nare just drawn here.",
    "start": "4774390",
    "end": "4782340"
  },
  {
    "text": "They're in the middle. And then there's these\ncrazy rolling belts for how they fit together. So this is in unit square\nall the different gluings.",
    "start": "4782340",
    "end": "4791100"
  },
  {
    "text": "And one of the fun things,\nsome of them are octahedra, I have a list here.",
    "start": "4791100",
    "end": "4799929"
  },
  {
    "text": "But I don't know actually\nwhich one of these belts has the octahedra. It might be a couple of them.",
    "start": "4799930",
    "end": "4805540"
  },
  {
    "text": "And it turns out, for octahedra\nthey actually figured out an algorithm just for octahedra\nto solve Alexandroff's theorem.",
    "start": "4805540",
    "end": "4813469"
  },
  {
    "text": "This is again before\nAlexandroff theorem algorithms. And they wanted to compute, well\nif I take all these polyhdra,",
    "start": "4813470",
    "end": "4819710"
  },
  {
    "text": "which one has the\nmaximum volume? So if I take a\nsquare paper, what's the maximum volume\nshape you can make?",
    "start": "4819710",
    "end": "4826560"
  },
  {
    "text": "And there it is. It's kind of fun.",
    "start": "4826560",
    "end": "4833949"
  },
  {
    "text": "One of those octahedra. And this is a prettier picture\nof-- so here they actually",
    "start": "4833950",
    "end": "4841010"
  },
  {
    "text": "computed all the polyhedra. Obviously not all\ninfinitely many of them, but various snapshots\nalong each rolling belt.",
    "start": "4841010",
    "end": "4848360"
  },
  {
    "text": "And each of these\nrolling belts corresponds to one of the circles over here. ",
    "start": "4848360",
    "end": "4856400"
  },
  {
    "text": "And that's it. Any questions? So that's the end\nof fun with gluings.",
    "start": "4856400",
    "end": "4863250"
  },
  {
    "text": "We'll look at other kinds of\ngluing problems next class. ",
    "start": "4863250",
    "end": "4870338"
  }
]