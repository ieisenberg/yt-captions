[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6050"
  },
  {
    "text": "continue to offer high-quality\neducational resources for free. To make a donation or to\nview additional materials",
    "start": "6050",
    "end": "12690"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "12690",
    "end": "25715"
  },
  {
    "text": "PROFESSOR: All right. Welcome back. Today is probably our\nlast lecture about 3SAT, but this time it's about\nplanar 3SAT, which we've",
    "start": "25715",
    "end": "34680"
  },
  {
    "text": "sort of alluded to in the past. And we saw a version\nof what you might",
    "start": "34680",
    "end": "40310"
  },
  {
    "text": "call planar 3SAT with planar\nCircuitSAT last class. But planar 3SAT is a very\nuseful special case of 3SAT.",
    "start": "40310",
    "end": "49400"
  },
  {
    "text": "It is just like\n3SAT, but you also",
    "start": "49400",
    "end": "54850"
  },
  {
    "text": "are told that the bipartite\ngraph, let's say of variables",
    "start": "54850",
    "end": "69630"
  },
  {
    "text": "versus clauses is\na planar graph. ",
    "start": "69630",
    "end": "78360"
  },
  {
    "text": "So the idea is you have\nsome vertices representing",
    "start": "78360",
    "end": "87410"
  },
  {
    "text": "variables. v for variable here. And then you separately\nhave some clauses.",
    "start": "87410",
    "end": "92615"
  },
  {
    "text": " I guess I should really\nhave more variables.",
    "start": "92615",
    "end": "102162"
  },
  {
    "text": "You have an edge between a\nvariable and a clause whenever",
    "start": "102162",
    "end": "109490"
  },
  {
    "text": "that clause includes\nthat variable, either in positive\nor negative form. So maybe some of\nthese edges, I'll",
    "start": "109490",
    "end": "114890"
  },
  {
    "text": "draw a red to\nindicate, actually, that's v bar that is\nincluded in this clause.",
    "start": "114890",
    "end": "121640"
  },
  {
    "text": "So this clause is\nvi or vj bar or vk.",
    "start": "121640",
    "end": "130110"
  },
  {
    "text": "And so on. And this graph should be planar,\nshouldn't have any crossings. ",
    "start": "130110",
    "end": "137999"
  },
  {
    "text": "Something like that would be\na valid input to planar 3SAT.",
    "start": "137999",
    "end": "143611"
  },
  {
    "text": "Question. AUDIENCE: So if\nyou're given the fact that a particular\nbipartite graph is planar,",
    "start": "143611",
    "end": "153826"
  },
  {
    "text": "is there a polynomial operation\nto find a planar arrangement? PROFESSOR: Yes.",
    "start": "153826",
    "end": "159079"
  },
  {
    "text": "Deciding whether\na graph is planar and finding a planar embedding\nwhen it is is linear time. So here I'm just saying it's\ngiven as a planar graph,",
    "start": "159080",
    "end": "166697"
  },
  {
    "text": "but not with an embedding. So we're going to use the\nembeddings in our reduction. Yeah, good point. So we do actually\nneed the ability",
    "start": "166697",
    "end": "172040"
  },
  {
    "text": "to draw these things\nwithout crossings. Good. So first thing I'm going to\ndo is prove that this is hard.",
    "start": "172040",
    "end": "179390"
  },
  {
    "text": "And usually I don't prove\nbase problems are hard, but this is a sufficiently\nsophisticated base problem.",
    "start": "179390",
    "end": "185599"
  },
  {
    "text": "I mean, we do lots of\nreductions from planar 3SAT. But the proof is\nactually from 3SAT, and I think it's a\nrepresentative example of how",
    "start": "185600",
    "end": "192340"
  },
  {
    "text": "to build a crossover in\nthis kind of setting, and what kind of\nextra properties you can get out of it.",
    "start": "192340",
    "end": "198430"
  },
  {
    "text": "So here it is. This is the proof\nin a single diagram.",
    "start": "198430",
    "end": "205200"
  },
  {
    "text": "So the notation here is that\nthe little green circles are clauses. And the bigger circles\nare the variables.",
    "start": "205200",
    "end": "212070"
  },
  {
    "text": "Purple circles are variables. So the idea is it in\nyour initial instance-- so we're going to\nreduce from 3SAT.",
    "start": "212070",
    "end": "218430"
  },
  {
    "text": "We're given an\narbitrary 3SAT instance. So that has a corresponding\nbipartite graph.",
    "start": "218430",
    "end": "224340"
  },
  {
    "text": "Variables versus clauses. Just not planar. So consider any drawing. Actually, we'll look at a\nspecific drawing in a moment.",
    "start": "224340",
    "end": "230311"
  },
  {
    "text": "But it's going to have\nsome crossings like this. This is a clause-variable\nconnection, another one. They cross here. We're going to replace that\nwith this picture, which",
    "start": "230311",
    "end": "238580"
  },
  {
    "text": "is technically not 3SAT, because\nthere's a four-variable clause in the center. But we can fix that.",
    "start": "238580",
    "end": "244400"
  },
  {
    "text": "That's not too hard. Let me first convince\nyou-- and this'll take a little while-- that\nthis is equivalent to this.",
    "start": "244400",
    "end": "251930"
  },
  {
    "text": "So the ultimate\nclaim-- so there's four Greek letters in the\ncenter as extra variables.",
    "start": "251930",
    "end": "257648"
  },
  {
    "text": "The main claim is that\na1 equals a2 equals a. And b1 equals b2 equals b.",
    "start": "257649",
    "end": "264979"
  },
  {
    "text": "If that's true, then, of\ncourse, this connection simulates that connection.",
    "start": "264980",
    "end": "270010"
  },
  {
    "text": "And that connection\nsimulates this connection. And the claim is as\nlong as you satisfy that, you can always set\nthe stuff in the middle",
    "start": "270010",
    "end": "276750"
  },
  {
    "text": "to be happy. So those are the only\nconstraints, basically. So let's start with\nover here and down here.",
    "start": "276750",
    "end": "287060"
  },
  {
    "text": "These little sort of length two\npaths-- sorry, so the coloring",
    "start": "287060",
    "end": "292150"
  },
  {
    "text": "is similar to what\nI did on the board. The red are negative\nconnections, meaning that clause has not\na and this clause has not a2.",
    "start": "292150",
    "end": "299080"
  },
  {
    "text": "And the blue connections\nare positive connections. So when you have this sort of\nalternating four-cycle here,",
    "start": "299080",
    "end": "306419"
  },
  {
    "text": "you can read that\nas not a or a2, which is the same as\nsaying a implies a2.",
    "start": "306420",
    "end": "312030"
  },
  {
    "text": "And also, a2 implies a. That means they\nhave the same value. a if and only if a2.",
    "start": "312030",
    "end": "317040"
  },
  {
    "text": "Or I'll just write equality\nof their truth values. Same thing here. So that part is just\nto get warmed up.",
    "start": "317040",
    "end": "326380"
  },
  {
    "text": "Now the fun part\nis on the inside. And I think the next\nstep is to think",
    "start": "326380",
    "end": "331950"
  },
  {
    "text": "about these sort of\ntriangles in the corner. If you stare at them\nfor a little while,",
    "start": "331950",
    "end": "339099"
  },
  {
    "text": "you get these kinds\nof constraints. So let's work through this one. You'll see there's a certain\nsymmetry among what the alpha,",
    "start": "339100",
    "end": "346259"
  },
  {
    "text": "beta, gamma, deltas are. They're going to be all\nsort of all patterns of a2",
    "start": "346260",
    "end": "353220"
  },
  {
    "text": "possibly complemented, anded\nwith b2 possibly complemented. So these are supposed to be\nthe four cases of a versus b.",
    "start": "353220",
    "end": "360905"
  },
  {
    "text": "The trick is that some of them\nare 2's and some of them are 1's. So that's what makes it\na little bit annoying.",
    "start": "360905",
    "end": "367159"
  },
  {
    "text": "It would be nice to make\nit perfectly symmetric, but that would, in terms\nof these labels-- but that",
    "start": "367160",
    "end": "373440"
  },
  {
    "text": "would destroy planarity. So this is the planar version. So let's look at this.",
    "start": "373440",
    "end": "380300"
  },
  {
    "text": "We have, for example,\nnot alpha or b2.",
    "start": "380300",
    "end": "386409"
  },
  {
    "text": "So alpha implies b2. Also, alpha implies a2. So if alpha is true, then\nthey must both be true.",
    "start": "386410",
    "end": "394729"
  },
  {
    "text": "And conversely, I want\na2 and b2 to imply alpha. Right. So if these are both\ntrue, then this guy's",
    "start": "394730",
    "end": "401740"
  },
  {
    "text": "unsatisfied from\nthose two red clauses. So alpha must be true. Good. So it works in both directions. You get equality.",
    "start": "401740",
    "end": "407230"
  },
  {
    "text": "It's exactly the same in\neach of these four corners, just the coloring is different.",
    "start": "407230",
    "end": "412250"
  },
  {
    "text": "And you're connected\nto a different b. So here if you reflect, you're\nconnected to b1 instead of b2. And there's a complement\nhere basically",
    "start": "412250",
    "end": "418990"
  },
  {
    "text": "because these two colors\nswitched from here. So it's exactly\nthe same argument,",
    "start": "418990",
    "end": "425319"
  },
  {
    "text": "but you just imagine\nflipping the value of b1. And then reflect over here. Switch the value of the a's.",
    "start": "425320",
    "end": "432060"
  },
  {
    "text": "Reflect over here, switch\nthe coloring of the b's. So that's what's\nhappening in the corners.",
    "start": "432060",
    "end": "438550"
  },
  {
    "text": "And at this point, I had to\ndraw a table of all the cases. Oh, sorry.",
    "start": "438550",
    "end": "443830"
  },
  {
    "text": "This is a little bit about\nwhat happens in the center. So of course, the center clause\nsays that at least one of these",
    "start": "443830",
    "end": "449220"
  },
  {
    "text": "is true. We want exactly one to be\ntrue, because exactly one of these cases should happen.",
    "start": "449220",
    "end": "454280"
  },
  {
    "text": "But that's a weak constraint. And then we also\nhave some constraints like if alpha is true, then this\nis not satisfied from alpha.",
    "start": "454280",
    "end": "467009"
  },
  {
    "text": "And similarly, this. And therefore,\nbeta must be false. So if alpha is true, then\nbeta and delta are false.",
    "start": "467010",
    "end": "473430"
  },
  {
    "text": "I think that's\nactually all you need. I think these might\nnot be necessary. But they make for a\nnice symmetric diagram.",
    "start": "473430",
    "end": "479500"
  },
  {
    "text": "And they don't hurt. So now I drew a table-- there\nmay be a more direct argument--",
    "start": "479500",
    "end": "486326"
  },
  {
    "text": "of all the possible\nsettings a2 and b2, and what you can\nderive from that.",
    "start": "486326",
    "end": "492110"
  },
  {
    "text": "And everything except this\npart is really easy to derive, assuming I can remember\nwhat I did last night.",
    "start": "492110",
    "end": "498920"
  },
  {
    "text": "So let's say a2\nand b2 are false. I claim alpha is false,\nbecause we have this equation.",
    "start": "498920",
    "end": "505990"
  },
  {
    "text": "That's easy. And in general, you can\ncompute alpha directly, because it's just a\nfunction of a2 and b2. It's the end function.",
    "start": "505990",
    "end": "512349"
  },
  {
    "text": "So that's good. What about beta? I claim if alpha is false here,\nthen in this particular case--",
    "start": "512350",
    "end": "522429"
  },
  {
    "text": "well, OK. Here's one thing we wrote. Alpha implies not\nbeta and not gamma. So in this last row,\nif alpha is true,",
    "start": "522429",
    "end": "529370"
  },
  {
    "text": "we know that beta\nand gamma are false. That's good. We hope also that beta\nand delta are false.",
    "start": "529370",
    "end": "537000"
  },
  {
    "text": "We hope also that\ngamma is false. But I don't think we\nneed that, because if you",
    "start": "537000",
    "end": "543710"
  },
  {
    "text": "look at this equation\non delta, which we know is 0, that must mean that\none of these two things is 0.",
    "start": "543710",
    "end": "554000"
  },
  {
    "text": "But b2 is true. Sorry. I'm going to use true\nand 1 interchangeably, and 0 and false for\nwhatever reason today.",
    "start": "554000",
    "end": "561630"
  },
  {
    "text": "So this needs to be\n0, but this is 1. So this must be 0, which\nmeans that a1 is 1.",
    "start": "561630",
    "end": "569690"
  },
  {
    "text": "And symmetrically on the top,\nthis is a symmetric between a and b. So up here, you\nknow that a2 is 1.",
    "start": "569690",
    "end": "579040"
  },
  {
    "text": "And therefore, b1 bar must be 0. So b1 must be 1.",
    "start": "579040",
    "end": "584480"
  },
  {
    "text": "So we transfer the information. And the only other thing\nto check in all these cases is that actually\neverything is satisfied.",
    "start": "584480",
    "end": "590518"
  },
  {
    "text": "But that's sort of boring. I want to do the\nother direction, which is that you are\nforced to communicate",
    "start": "590518",
    "end": "596150"
  },
  {
    "text": "the copies of a and\nthe copies of b. So that was the last row. I think the first\nrow should also be easy for a slightly\ndifferent reason.",
    "start": "596150",
    "end": "603970"
  },
  {
    "text": "So a2 and b2 are false. ",
    "start": "603970",
    "end": "610830"
  },
  {
    "text": "Alpha is false. Beta is false. That's as far as\nwe've gotten so far.",
    "start": "610830",
    "end": "616810"
  },
  {
    "text": "Let's see. Delta is a1 bar and b2, right?",
    "start": "616810",
    "end": "624440"
  },
  {
    "text": " Right. Because b2 is false, we\nknow that delta is false.",
    "start": "624440",
    "end": "631835"
  },
  {
    "text": "So it doesn't matter what a1 is. So it's sort of the\nreverse direction. And similarly, we\nshould be able to-- oh,",
    "start": "631835",
    "end": "639490"
  },
  {
    "text": "because from this, we know\nat least one of them is true, at least one of the\nGreek letters is true, then we've got three down.",
    "start": "639490",
    "end": "645410"
  },
  {
    "text": "So it must be\ngamma that is true. And once you know\ngamma is true, you know exactly what a1 and b1 are. So that's another good case.",
    "start": "645410",
    "end": "652510"
  },
  {
    "text": "These are slightly\nmore annoying, at least as far as I could see. Maybe there's a\ncleaner argument.",
    "start": "652510",
    "end": "658090"
  },
  {
    "text": "So let's say they're\nsymmetric, though. So let's do the second row. So a2 is 0.",
    "start": "658090",
    "end": "664000"
  },
  {
    "text": "b2 is 0. I think just like\nthis argument, we get that beta is 0,\nbecause beta involves a2.",
    "start": "664000",
    "end": "673470"
  },
  {
    "text": "We know a2 is 0, so beta\nequals 0, just like this case, actually.",
    "start": "673470",
    "end": "679010"
  },
  {
    "text": "OK. So that's good for that. I think it's harder\nto figure out delta. ",
    "start": "679010",
    "end": "686700"
  },
  {
    "text": "Or here's one way to argue it. Suppose that gamma were 1. It should be 0, because\ngamma's supposed to be only 1",
    "start": "686700",
    "end": "694700"
  },
  {
    "text": "in this situation. If it's 1, then I claim that\nalpha 1 and beta 1 must be 0.",
    "start": "694700",
    "end": "703290"
  },
  {
    "text": "That's from this equation. And then we should\nget a contradiction. Help me find the contradiction.",
    "start": "703290",
    "end": "709530"
  },
  {
    "text": "AUDIENCE: Delta becomes 1. PROFESSOR: Delta becomes 1. AUDIENCE: And then the clause\nbetween gamma and delta is--",
    "start": "709530",
    "end": "715920"
  },
  {
    "text": "PROFESSOR: And then\nthis is unhappy. Good. OK. So we do need a couple other\nconstraints like this one.",
    "start": "715920",
    "end": "721960"
  },
  {
    "text": "Cool. So that's the idea. Therefore, gamma is 0. And then by that,\ndelta must be 1.",
    "start": "721960",
    "end": "728690"
  },
  {
    "text": "And then we're happy again. OK? So that's the idea\nin a nutshell.",
    "start": "728690",
    "end": "734490"
  },
  {
    "text": "There's maybe other\nways to see it. And this is an old proof\nby Lichtenstein in 1982.",
    "start": "734490",
    "end": "740930"
  },
  {
    "text": "It's a cool paper. It has a lot of results in it. We'll be covering a\nfew different results. But at this point,\nwe have shown this.",
    "start": "740930",
    "end": "748320"
  },
  {
    "text": "You just apply this\nto each crossing. Eventually you get a\nplanar bipartite graph",
    "start": "748320",
    "end": "754100"
  },
  {
    "text": "that's satisfiable if and only\nif the original is a planar 3SAT is NP-hard.",
    "start": "754100",
    "end": "759150"
  },
  {
    "text": "Question? So many questions. AUDIENCE: I guess this\nis probably silly. But [INAUDIBLE]\n3SAT, every clause",
    "start": "759150",
    "end": "765543"
  },
  {
    "text": "had to have three variables. PROFESSOR: Yes. OK. Right. AUDIENCE: Two or four. PROFESSOR: I cheated\na little bit here.",
    "start": "765544",
    "end": "771630"
  },
  {
    "text": "OK. Yeah. Some have two.  So for that, I need to be able\nto construct the value false.",
    "start": "771630",
    "end": "780790"
  },
  {
    "text": "And some have four. The four, I believe\nthe claim is you",
    "start": "780790",
    "end": "786440"
  },
  {
    "text": "can take a little\nclause like this and convert it into a clause\nwith another variable.",
    "start": "786440",
    "end": "797310"
  },
  {
    "text": "AUDIENCE: And one of\nthe two edges connecting the variables [INAUDIBLE]. PROFESSOR: Right. ",
    "start": "797310",
    "end": "804130"
  },
  {
    "text": "Like this? ",
    "start": "804130",
    "end": "810720"
  },
  {
    "text": "So the claim is this four-way\nclause to the 4SAT clause is equivalent to these\ntwo 3SAT clauses.",
    "start": "810720",
    "end": "816570"
  },
  {
    "text": "Let's call this new variable x. ",
    "start": "816570",
    "end": "825500"
  },
  {
    "text": "So the idea is x is\ngoing to represent whether the left side satisfies\nthe clause or the right side",
    "start": "825500",
    "end": "830640"
  },
  {
    "text": "satisfies the clause. If x is 1, then it\nsatisfies this for free.",
    "start": "830640",
    "end": "836055"
  },
  {
    "text": "But it doesn't satisfy this\none, so at least one of these must be satisfied. On the other hand, if x is 0,\nthen it satisfies this one.",
    "start": "836055",
    "end": "845470"
  },
  {
    "text": "And so at least one of these\ntwo should be satisfied. OK? So that's a reduction from\n4SAT to 3SAT, so to speak.",
    "start": "845470",
    "end": "854360"
  },
  {
    "text": "Now, I didn't create\nany degree-two clauses, but I have tons of degree-two\nclauses over there.",
    "start": "854360",
    "end": "861050"
  },
  {
    "text": "AUDIENCE: Just use\nparallel edges. PROFESSOR: Just\nuse parallel edges. So you could just repeat the\nsame variable in the clause",
    "start": "861050",
    "end": "870000"
  },
  {
    "text": "multiple times. That sounds good. I don't know if there's an easy\nway to avoid multiple edges.",
    "start": "870000",
    "end": "875339"
  },
  {
    "text": "I think it's a little tricky. You can't construct false\nin the CircuitSAT sense, because everything you\nbuild should be satisfiable.",
    "start": "875340",
    "end": "882542"
  },
  {
    "text": "So you have to be\na little careful. But it might be possible\nto pair them up, because there should be an\neven number of those guys.",
    "start": "882542",
    "end": "893772"
  },
  {
    "text": "And so maybe you pair them up\nand connect them in some way. But let's just allow\nmultiple edges here. Yeah?",
    "start": "893772",
    "end": "899715"
  },
  {
    "text": "AUDIENCE: In the original\ninstance of 3SAT, does it allow two clauses\nwith two variables?",
    "start": "899715",
    "end": "906990"
  },
  {
    "text": "For getting planar? PROFESSOR: Yeah. I mean, in general, this would\nwork for any kind of SAT,",
    "start": "906990",
    "end": "912580"
  },
  {
    "text": "any kind of CNF-SAT. We're not relying on three-ness\nat all in this picture.",
    "start": "912580",
    "end": "918199"
  },
  {
    "text": "But it's not going to\nsplit things up, of course. AUDIENCE: But the\ndefinition of 3SAT has three distinct\nvariables in each clause.",
    "start": "918199",
    "end": "924010"
  },
  {
    "text": "PROFESSOR: There are\na couple definitions. One has exactly\nthree, but we never, I think, specify that\nthey are distinct.",
    "start": "924010",
    "end": "931131"
  },
  {
    "text": "I think that is hard when\nthey're all distinct. But I don't know the\nreduction offhand.",
    "start": "931132",
    "end": "936740"
  },
  {
    "text": "I think the way we define\nit is there's exactly three, but we didn't say\nany uniqueness.",
    "start": "936740",
    "end": "941750"
  },
  {
    "text": "So let's say that. And then we're still\nhappy here, because we can duplicate variables.",
    "start": "941750",
    "end": "947488"
  },
  {
    "text": "Yeah? AUDIENCE: Why did we include the\na equals a2, and b equals b2?",
    "start": "947488",
    "end": "953899"
  },
  {
    "text": "PROFESSOR: I think it's\nfor the next slide. [LAUGHTER] The next claim is that not only\nis that bipartite graph planar,",
    "start": "953900",
    "end": "964760"
  },
  {
    "text": "but it also remains planar if\nwe connect all the variables together in a cycle.",
    "start": "964760",
    "end": "981930"
  },
  {
    "start": "981930",
    "end": "994740"
  },
  {
    "text": "So let's say we number\nthe variables 1 through n. It doesn't matter\nhow you number them. Well, in a certain sense.",
    "start": "994740",
    "end": "1001120"
  },
  {
    "text": "You can restrict to\ninstances of 3SAT that this cycle plus the\nvariable clause adjacency graph",
    "start": "1001120",
    "end": "1011940"
  },
  {
    "text": "is together planar. OK? So that's less clear here.",
    "start": "1011940",
    "end": "1022150"
  },
  {
    "text": "But let me prove it. This is proved in\nthe same paper. So here's a top-level diagram\nof what we're trying to do.",
    "start": "1022150",
    "end": "1032430"
  },
  {
    "text": "So we have clauses on one hand. Let's put them\nall on the y-axis. We have variables\non the other hand.",
    "start": "1032430",
    "end": "1037750"
  },
  {
    "text": "These are the original variables\nin the original 3SAT instance. Put them on the x-axis.",
    "start": "1037750",
    "end": "1043060"
  },
  {
    "text": "Then draw all the connections\nin the bipartite graph. And furthermore, draw this\ncycle on the vertices down here.",
    "start": "1043060",
    "end": "1050434"
  },
  {
    "text": "OK? And obviously, we\nput them in the order that they appear in the cycle. Otherwise we're making\nour lives harder.",
    "start": "1050434",
    "end": "1057980"
  },
  {
    "text": "And here is that\ncrossover gadget. This is how it's\noriginally drawn. In this case, it's already\nbeen expanded in the center",
    "start": "1057980",
    "end": "1065580"
  },
  {
    "text": "into that picture over there. This is where I got\nthat reduction from. And then there's no\ncolor here, but you'll",
    "start": "1065580",
    "end": "1072409"
  },
  {
    "text": "notice the curvy line is an\nattempt to connect together",
    "start": "1072410",
    "end": "1077800"
  },
  {
    "text": "all of the variables that\nappear in the crossover gadget in linear order without\nintroducing any crossings.",
    "start": "1077800",
    "end": "1086419"
  },
  {
    "text": "So that diagram is still planar\nwhen we add all of those edges.",
    "start": "1086420",
    "end": "1091790"
  },
  {
    "text": "And so what this says\nis that if we-- we're trying to build a\nglobal cycle that",
    "start": "1091790",
    "end": "1097590"
  },
  {
    "text": "connects all the variables. So obviously, we have\nthis for these variables, but we need to add\ninto this cycle",
    "start": "1097590",
    "end": "1103410"
  },
  {
    "text": "all the variables that appear\nin all these crossings. And so what this says is if\nwe are coming in either here",
    "start": "1103410",
    "end": "1109020"
  },
  {
    "text": "or here into a1, we\ncan follow this path and then leave either\nhere or here on a2.",
    "start": "1109020",
    "end": "1115899"
  },
  {
    "text": "OK? And because the diagram\nis symmetric, also, if you're coming into\nb1, you can end up in b2.",
    "start": "1115900",
    "end": "1123620"
  },
  {
    "text": "And I'm guessing this\nis why we separate b2. The reason we separated\nb2 from b in general",
    "start": "1123620",
    "end": "1131889"
  },
  {
    "text": "is to basically add\nthis connection, so we can separate this\ngadget from this gadget.",
    "start": "1131890",
    "end": "1137970"
  },
  {
    "text": "So just showing that we\ncan copy and extend things. It may not be necessary,\nbut it definitely matches this diagram.",
    "start": "1137970",
    "end": "1144330"
  },
  {
    "text": "OK. So this diagram is\nthis diagram, but where every intersection plus a few\nextra places, like over here,",
    "start": "1144330",
    "end": "1151210"
  },
  {
    "text": "we add these little diamonds. The diamonds\nindicate that gadget. Then sorry there's no\ncolor, but in curved lines",
    "start": "1151210",
    "end": "1159240"
  },
  {
    "text": "is the attempt to connect\nall the variables together in one single path. Question. AUDIENCE: So what are the\nextra crossover gadgets",
    "start": "1159240",
    "end": "1166110"
  },
  {
    "text": "that don't cross anything over? PROFESSOR: They're just\nto do this path thing. So what are they?",
    "start": "1166110",
    "end": "1172280"
  },
  {
    "text": "I mean, they are\nexactly this gadget, just there's no\nconnection on the left. AUDIENCE: So they're a crossover\nof the path on the variables.",
    "start": "1172280",
    "end": "1178320"
  },
  {
    "text": "Is that right? PROFESSOR: Yeah. So instead of going\nstraight here, you just put a crossover\ngadget in the middle.",
    "start": "1178320",
    "end": "1183679"
  },
  {
    "text": "You can still go through. You're copying some\narbitrary information here to some arbitrary\ninformation here.",
    "start": "1183680",
    "end": "1189030"
  },
  {
    "text": "So you don't preserve the\nnumber of solutions, let's say. But who cares? The reason for that is so\nthat we can take this path,",
    "start": "1189030",
    "end": "1197500"
  },
  {
    "text": "connect to this vertex,\nand then get out over here. AUDIENCE: Yeah, that's\nwhat I meant by crossing. PROFESSOR: So that we can\ndo this kind of loop thing.",
    "start": "1197500",
    "end": "1207090"
  },
  {
    "text": "So how do we follow the path? I mean, we basically do\nit in scan-line order. It's like some\nprinters used to do",
    "start": "1207090",
    "end": "1213716"
  },
  {
    "text": "this, where they\nprint back and forth, left and right, line printers. So we come in here.",
    "start": "1213717",
    "end": "1219010"
  },
  {
    "text": "I don't know quite why they draw\nit coming in the middle here. But it's essentially\ncoming to this vertex.",
    "start": "1219010",
    "end": "1224409"
  },
  {
    "text": "Then ending on this\nvertex on the left side. Then going into this vertex,\nwhich brings us to here.",
    "start": "1224410",
    "end": "1231523"
  },
  {
    "text": "Let's say coming on the top. Doesn't matter. And then we go to the right\ntill we get to the end. Here we add an extra crossover,\nso we can basically cross over",
    "start": "1231524",
    "end": "1239140"
  },
  {
    "text": "this line with our path. And add another one. And whenever we visit an\nintersection, we can just go.",
    "start": "1239140",
    "end": "1245600"
  },
  {
    "text": "And then we go to the\nnext line and so on. We clear? Then at the very end, we're\neither on the right or left,",
    "start": "1245600",
    "end": "1251559"
  },
  {
    "text": "depending on parity. Probably we want\nto be on the right. So if we're on the left, we'll\njust add extra crossovers here",
    "start": "1251560",
    "end": "1258000"
  },
  {
    "text": "to end up on the right. Then we can go through all\nthese variables in reverse order and then come back up here.",
    "start": "1258000",
    "end": "1264049"
  },
  {
    "text": "So that will be one non-crossing\npath in this planar embedding. Therefore, we've\nconstructed a new formula",
    "start": "1264050",
    "end": "1272179"
  },
  {
    "text": "where the bipartite graph\nplus the path through all the variables is planar. And so this new version\nof planar 3SAT is hard.",
    "start": "1272180",
    "end": "1279230"
  },
  {
    "text": "This version is usually\ncalled planar 3SAT, but if you want to distinguish\nit, you could call it planar 3SAT with a\nvariable cycle or something.",
    "start": "1279230",
    "end": "1287893"
  },
  {
    "text": "Yeah? AUDIENCE: Why is it\nthat we care about this? PROFESSOR: Why do you care? Aha.",
    "start": "1287893",
    "end": "1293550"
  },
  {
    "text": "We'll get to that\na little bit later. Well, we've seen a lot\nof proofs, actually, where you visit a variable\nand make a choice,",
    "start": "1293550",
    "end": "1301500"
  },
  {
    "text": "and then visit the next variable\nand make a choice, and so on. And when you make a choice, you\ngo visit the clauses and things",
    "start": "1301500",
    "end": "1307790"
  },
  {
    "text": "like that. So when we're reducing\nfrom planar 3SAT, it's often handy to have\nthis traversable path.",
    "start": "1307790",
    "end": "1314080"
  },
  {
    "text": "If we have a robot or\nsomebody moving around, then we can guarantee\nplanarity of that motion still.",
    "start": "1314080",
    "end": "1322620"
  },
  {
    "text": "And the connections\nbetween the variables don't have to cross anything. In general, our goal here is\nto avoid crossover gadgets",
    "start": "1322620",
    "end": "1329050"
  },
  {
    "text": "when we're reducing from\n3SAT to something else. So this gives you kind\nof a generic crossover,",
    "start": "1329050",
    "end": "1335080"
  },
  {
    "text": "so that as long as you can\ndo variables and clauses more or less independently and\nyou can build connections,",
    "start": "1335080",
    "end": "1340841"
  },
  {
    "text": "then you don't have to worry\nabout the connections crossing. Yeah? AUDIENCE: When you're\ngiven this bipartite graph,",
    "start": "1340841",
    "end": "1345950"
  },
  {
    "text": "how do you actually tell whether\nan edge is negated or not? ",
    "start": "1345950",
    "end": "1353950"
  },
  {
    "text": "PROFESSOR: You're still\ngiven a formula, let's say. And then you're just\ntold this extra fact",
    "start": "1353950",
    "end": "1359704"
  },
  {
    "text": "that the bipartite graph plus\nthis path and the variables, in that order, is planar.",
    "start": "1359704",
    "end": "1364880"
  },
  {
    "text": "AUDIENCE: The\nvariable nodes, you have one for every variable\nand its first negation? Or do you just--",
    "start": "1364880",
    "end": "1370070"
  },
  {
    "text": "PROFESSOR: No. Sorry. There's only vertices for\nvariables and for clauses, not for literals.",
    "start": "1370070",
    "end": "1377130"
  },
  {
    "text": "But the next version is\nactually about that case. ",
    "start": "1377130",
    "end": "1383890"
  },
  {
    "text": "The next one is-- so the\nidea, if you were just",
    "start": "1383890",
    "end": "1392629"
  },
  {
    "text": "given the bipartite\ngraph, you'd have to be told the coloring\nof the edges here to know which literal\nyou're talking about.",
    "start": "1392629",
    "end": "1398690"
  },
  {
    "text": " But also, the problem\nremains planar",
    "start": "1398690",
    "end": "1404590"
  },
  {
    "text": "if we use literals\ninstead of variables.",
    "start": "1404590",
    "end": "1421720"
  },
  {
    "text": "So if you were wondering\nabout that version, that will also be planar.",
    "start": "1421720",
    "end": "1427540"
  },
  {
    "text": "It doesn't follow immediately. But the idea is\nsuppose we have vi. So in the regular\nbipartite graph,",
    "start": "1427540",
    "end": "1434930"
  },
  {
    "text": "we have some positive edges and\nwe have some negative edges. Instead, I want to represent\nthat as vi and vi bar.",
    "start": "1434930",
    "end": "1447990"
  },
  {
    "text": "And the positive\nconnections are over here. The negative connections\nare over here. Now I don't need\nthe two coloring, because I have the labels\nto tell me which is which.",
    "start": "1447990",
    "end": "1455260"
  },
  {
    "text": "And furthermore, I can add\nthis edge connecting them. That will still be planar. So just split vi into two parts.",
    "start": "1455260",
    "end": "1461990"
  },
  {
    "text": "What this tells me is that\nthe positive connections to vi appear as a contiguous chunk.",
    "start": "1461990",
    "end": "1467780"
  },
  {
    "text": "And the negative connections\nappear as a contiguous chunk. So it's not like alternating\nwhite, red, white, red.",
    "start": "1467780",
    "end": "1472920"
  },
  {
    "text": "So far, it is if you\nlook at the reduction. But we can fix that.",
    "start": "1472920",
    "end": "1479200"
  },
  {
    "text": "OK.  So I just want to add, with an\nedge between the xi and xi bar.",
    "start": "1479200",
    "end": "1490460"
  },
  {
    "text": "Yeah? AUDIENCE: When you say you\nadd an edge between them, what does that mean? Because all the\nedges are supposed to be in between\nliterals and clauses.",
    "start": "1490460",
    "end": "1497220"
  },
  {
    "text": "PROFESSOR: Well, I mean, the\ngraph already wasn't bipartite. ",
    "start": "1497220",
    "end": "1502429"
  },
  {
    "text": "We start with a bipartite graph\nbetween variables and literals. Then we also add the\nedges between variables",
    "start": "1502430",
    "end": "1507680"
  },
  {
    "text": "and their complements. And then we also add a cycle\namong all the variables,",
    "start": "1507680",
    "end": "1514310"
  },
  {
    "text": "among all the\nliterals, let's say. So I guess this could be part\nof the cycle, for example.",
    "start": "1514310",
    "end": "1520830"
  },
  {
    "text": "And that graph, which is not\nbipartite, must be planar. That's the constraint. The claim is that all\nsuch problems are NP-hard.",
    "start": "1520830",
    "end": "1528090"
  },
  {
    "text": "In general, we want to\nmake as small a problem as we can, as special a\ncase as we can NP-hard,",
    "start": "1528090",
    "end": "1534330"
  },
  {
    "text": "because then we're reducing. We have more structure\nthat we get to exploit. This is a special case of this\nis a special case of this.",
    "start": "1534330",
    "end": "1542310"
  },
  {
    "text": "So the more we can\nconfine it, the better. Cool. So this is proved also in\nthe Lichtenstein paper.",
    "start": "1542310",
    "end": "1548900"
  },
  {
    "text": "Although, we'll see a\ncleaner proof in a moment, so I won't cover this\nin too much detail. But the idea is this.",
    "start": "1548900",
    "end": "1557650"
  },
  {
    "text": "So we're taking\neach variable, we're replacing it with a\nbig cycle like this.",
    "start": "1557650",
    "end": "1564199"
  },
  {
    "text": "I think it's the same kind\nof trick as over here. It doesn't matter.",
    "start": "1564199",
    "end": "1570260"
  },
  {
    "text": "All these a's should be the\nsame or sort of alternating. And we're connecting\nthe negative side--",
    "start": "1570260",
    "end": "1575380"
  },
  {
    "text": "so this is really two\nvertices connected by an edge. But I draw it like\nthat to make clear that that represents the same\nvariable to literals of it.",
    "start": "1575380",
    "end": "1584470"
  },
  {
    "text": "And do this thing. And then this is the path.",
    "start": "1584470",
    "end": "1589680"
  },
  {
    "text": "So suppose the path used\nto go through this way. Then the path now bisects.",
    "start": "1589680",
    "end": "1595840"
  },
  {
    "text": "And you see that all\nof the positive copies are on one side, and negative\ncopies are on the other side.",
    "start": "1595840",
    "end": "1602632"
  },
  {
    "text": "That's the idea. We will see another proof\nof a stronger statement, so I think let's\nnot worry about this",
    "start": "1602632",
    "end": "1609250"
  },
  {
    "text": "too much unless\nthere are questions. ",
    "start": "1609250",
    "end": "1617260"
  },
  {
    "text": "Here's the stronger statement. ",
    "start": "1617260",
    "end": "1662970"
  },
  {
    "text": "So in general, the\nvariable cycle--",
    "start": "1662970",
    "end": "1670000"
  },
  {
    "text": "so I'm going to not subdivide\ninto literals for the moment. But we could put that back.",
    "start": "1670000",
    "end": "1676190"
  },
  {
    "text": "So here's the variable cycle. This decomposes the\nplane at two regions--",
    "start": "1676190",
    "end": "1681370"
  },
  {
    "text": "the interior and the exterior. Or course, I could\nflip the edge, and it doesn't matter which\none's interior and exterior. But there are two regions.",
    "start": "1681370",
    "end": "1687780"
  },
  {
    "text": "And what I'm going to\nrequire is that every clause that I draw here should have\nentirely positive connections",
    "start": "1687780",
    "end": "1696730"
  },
  {
    "text": "on this side. And every clause\nthat I draw out here",
    "start": "1696730",
    "end": "1702320"
  },
  {
    "text": "should have entirely\nnegative connections. ",
    "start": "1702320",
    "end": "1708150"
  },
  {
    "text": "OK? This is monotone 3SAT again. So this implies monotone.",
    "start": "1708150",
    "end": "1714450"
  },
  {
    "text": " We know monotone 3SAT is hard. Now we're claiming that\nplanar monotone 3SAT",
    "start": "1714450",
    "end": "1721230"
  },
  {
    "text": "is hard when all the\npositive clauses are on one side of the\nvariable cycle,",
    "start": "1721230",
    "end": "1727210"
  },
  {
    "text": "and all the negative clauses\nare on the other side. This is really helpful.",
    "start": "1727210",
    "end": "1732454"
  },
  {
    "text": "I haven't yet given\nthis problem a name, because it has a name that\nuses another word, which I should first introduce.",
    "start": "1732454",
    "end": "1737970"
  },
  {
    "text": "So that's the next page. ",
    "start": "1737970",
    "end": "1751539"
  },
  {
    "text": "That word is\n\"rectilinear.\" so this is a relatively simple\nmodification to what we",
    "start": "1751539",
    "end": "1758520"
  },
  {
    "text": "have already. I want the variables\nto live on the x-axis.",
    "start": "1758520",
    "end": "1764690"
  },
  {
    "text": "You can think of them\nas horizontal segments on the x-axis. I prefer this drawing.",
    "start": "1764690",
    "end": "1771430"
  },
  {
    "text": "So imagine each variable is like\na little horizontal segment, or in this case, a box.",
    "start": "1771430",
    "end": "1776500"
  },
  {
    "text": "And the clauses are\nhorizontal segments. And then they're connected\nby vertical segments",
    "start": "1776500",
    "end": "1781540"
  },
  {
    "text": "between the clause\nand the variable. And all of the clauses\nthat are above the x-axis",
    "start": "1781540",
    "end": "1787690"
  },
  {
    "text": "should be all positive. All the clauses that\nare below the x-axis should be all negative. That would be planar\nmonotone rectilinear 3SAT,",
    "start": "1787690",
    "end": "1794740"
  },
  {
    "text": "and I jumped the gun. Planar rectilinear has\nno such constraint. Each of these could be\npositive or negative.",
    "start": "1794740",
    "end": "1800170"
  },
  {
    "text": "OK. So variables are segments.",
    "start": "1800170",
    "end": "1806150"
  },
  {
    "text": "All right. So each variable is a\nsegment on the x-axis. ",
    "start": "1806150",
    "end": "1813630"
  },
  {
    "text": "And each clause is another\nhorizontal segment,",
    "start": "1813630",
    "end": "1824180"
  },
  {
    "text": "plus vertical connections\nto the three variables",
    "start": "1824180",
    "end": "1831570"
  },
  {
    "text": "that it includes in\npositive or negative form. ",
    "start": "1831570",
    "end": "1839580"
  },
  {
    "text": "OK. And then planar monotone\nrectilinear 3SAT",
    "start": "1839580",
    "end": "1854220"
  },
  {
    "text": "is a special case\nof monotone 3SAT, where all positive\nclauses are above the line",
    "start": "1854220",
    "end": "1869390"
  },
  {
    "text": "and conversely, above x-axis.",
    "start": "1869390",
    "end": "1874970"
  },
  {
    "text": "Every clause above the x-axis\nshould be all positive. And every clause below the\nx-axis should be all negative.",
    "start": "1874970",
    "end": "1883810"
  },
  {
    "start": "1883810",
    "end": "1893050"
  },
  {
    "text": "OK. So I guess this one you\ncould call monotone planar 3SAT without rectilinear.",
    "start": "1893050",
    "end": "1898340"
  },
  {
    "text": "But of course, rectilinear\ndoesn't change much. I didn't say why, but if\nyou have a planar drawing",
    "start": "1898340",
    "end": "1906770"
  },
  {
    "text": "like we had before, this is\njust a particularly nice way to make that drawing.",
    "start": "1906770",
    "end": "1912390"
  },
  {
    "text": "To go here, I just used the fact\nthat there are no crossings. And I stretched out the\nvariables to decent lengths,",
    "start": "1912390",
    "end": "1918580"
  },
  {
    "text": "so that clauses can\njust go straight down. You can prove any planar graph\ncan be drawn in this way.",
    "start": "1918580",
    "end": "1926920"
  },
  {
    "text": "Any planar graph that has the\nvi cycle and has some degree-- three vertices that\nconnect to variables.",
    "start": "1926920",
    "end": "1933690"
  },
  {
    "text": "They have to nest in\nthis way, because if you think of a clause,\nthey could either be in this pocket or outside\nof it, or down in this region.",
    "start": "1933690",
    "end": "1942540"
  },
  {
    "text": "And so you can just\nfigure out how big this thing needs to be, and then\nmake the next one a little bit bigger.",
    "start": "1942540",
    "end": "1948200"
  },
  {
    "text": "And so you can\nrepresent the nesting in this nice orthogonal,\nor rectilinear structure. Rectilinear just means\nhorizontal and vertical lines.",
    "start": "1948200",
    "end": "1955909"
  },
  {
    "text": "Cool? So that's planar rectilinear\n3SAT first observed by Knuth and Raghunathan.",
    "start": "1955910",
    "end": "1964270"
  },
  {
    "text": "Now we want to-- let's\nprove that planar monotone rectilinear 3SAT is also hard.",
    "start": "1964270",
    "end": "1969890"
  },
  {
    "text": "Question. AUDIENCE: Wait. If rectilinearity just is a\nnice way to draw the graph, can we use the fact that it's\nrectilinear in our reductions?",
    "start": "1969890",
    "end": "1977380"
  },
  {
    "text": "I mean, is that going\nto help us any more? PROFESSOR: The rectilinear\nhelps us mainly when we're reducing to a\nproblem that lives on a grid.",
    "start": "1977380",
    "end": "1984600"
  },
  {
    "text": "It's just a convenient\nway of thinking about it. It doesn't directly help us. I mean, it's a linear\ntime reduction.",
    "start": "1984600",
    "end": "1990890"
  },
  {
    "text": "I mean, all of these\nare reductions, so of course, none of\nthem help us in theory. But the cleaner you can\nmake the problem-- I mean,",
    "start": "1990890",
    "end": "1997899"
  },
  {
    "text": "this looks pretty. And we'll see, I\nthink at the end of class, a proof that\ndirectly mimics this structure.",
    "start": "1997900",
    "end": "2003550"
  },
  {
    "text": "So that's the only reason. You could, of course,\nas a first step, say, hey, draw it rectilinearly. But this saves you that step.",
    "start": "2003550",
    "end": "2012130"
  },
  {
    "text": "Cool. All right. So planar monotone\nrectilinear 3SAT.",
    "start": "2012130",
    "end": "2018009"
  },
  {
    "text": " Here's an explicit example.",
    "start": "2018010",
    "end": "2023365"
  },
  {
    "text": "Although it's not\ngoing to be modified, it's just another example\nof planar rectilinear 3SAT",
    "start": "2023365",
    "end": "2028480"
  },
  {
    "text": "without the monotone. You see there's negations\nabove, lack of negations below. And here is the\ntrick to fix things.",
    "start": "2028480",
    "end": "2035285"
  },
  {
    "text": " So suppose you have a\nvariable xi on the x-axis,",
    "start": "2035285",
    "end": "2041250"
  },
  {
    "text": "you have a clause above\nit that uses that variable in the wrong orientation. So of course, or the\nreflective picture.",
    "start": "2041250",
    "end": "2047825"
  },
  {
    "text": "But let's say it's above. It's U is negated. So in general, we have a\nbunch of connections up. We have a bunch of\nconnections down.",
    "start": "2047825",
    "end": "2054610"
  },
  {
    "text": "This one is somewhere\nin the middle. These bold lines are\njust to distinguish these are the ones to the right,\nthese are the ones to the left.",
    "start": "2054610",
    "end": "2061666"
  },
  {
    "text": "They don't mean\nnegation, necessarily. Because this one\nshould be negated. OK. So we're just going to\nreplace it like this.",
    "start": "2061666",
    "end": "2069060"
  },
  {
    "text": "This is the trick that we\nsaw in the right and bottom corner of the crossover gadget. We're going to duplicate\nxi, way except we'll",
    "start": "2069060",
    "end": "2075908"
  },
  {
    "text": "negate it at the same time. So the other one had a negation\nhere and one negation here, not here.",
    "start": "2075909",
    "end": "2082079"
  },
  {
    "text": "This xi or a, together with\nxi bar or a bar-- again, these are 2SAT clauses.",
    "start": "2082080",
    "end": "2087980"
  },
  {
    "text": "You have to duplicate\nan edge to make it 3SAT. That forces xi to\nbe not a, I think.",
    "start": "2087980",
    "end": "2096239"
  },
  {
    "text": "Maybe I even have\nthat as a fate. OK, xi is not equal to a. Similarly, a does not equal\nb, which means b equals xi.",
    "start": "2096239",
    "end": "2104369"
  },
  {
    "text": "OK? So we just duplicated xi to be\nused in all the old scenarios. And maybe these guys\nstill all go down.",
    "start": "2104370",
    "end": "2110720"
  },
  {
    "text": "We could move some of them\nover here if we wanted to. The ones to the left\nhave to be over here. The ones to the right\nhave to be over here.",
    "start": "2110720",
    "end": "2117120"
  },
  {
    "text": "This one gets to use\na negated copy of xi. So boom, one negation down.",
    "start": "2117120",
    "end": "2123870"
  },
  {
    "text": "One negation that was\non the wrong side. Repeat this n times.",
    "start": "2123870",
    "end": "2129816"
  },
  {
    "text": "Where you have a negation\nyou're not supposed to and everywhere you don't\nhave a negation that you're supposed to, apply this trick.",
    "start": "2129816",
    "end": "2136005"
  },
  {
    "text": "You'll increase the\nnumber of variables by some constant factor. And now you're in\nthe monotone case.",
    "start": "2136006",
    "end": "2142090"
  },
  {
    "text": "So that's actually really easy. It's our first proof that\nmonotone 3SAT is hard. But it's a pretty easy one.",
    "start": "2142090",
    "end": "2147650"
  },
  {
    "text": "Yeah? AUDIENCE: Can we use\na similar construction to recover splitting the\nvariables into literals?",
    "start": "2147650",
    "end": "2153210"
  },
  {
    "text": " PROFESSOR: Oh, to do this? AUDIENCE: Yeah.",
    "start": "2153210",
    "end": "2159230"
  },
  {
    "text": "Because we dropped that when\nwe moved over here, right? AUDIENCE: But you said\nit was just [INAUDIBLE].",
    "start": "2159230",
    "end": "2164960"
  },
  {
    "text": "PROFESSOR: Well, we sort of did. No, actually, this is supposed\nto be a generalization of this, because you could just\nsplit apart-- I mean, you",
    "start": "2164960",
    "end": "2171910"
  },
  {
    "text": "can carve vi in half\nto the positive side and the negative side. And all the negative\nsides are below,",
    "start": "2171910",
    "end": "2178200"
  },
  {
    "text": "and all the positive\nsides are above. So yeah, we could\nalready do that. ",
    "start": "2178200",
    "end": "2186450"
  },
  {
    "text": "Right. Because this was not\nabout having them-- it was about having the vertices\nlabeled as literals instead of",
    "start": "2186450",
    "end": "2194445"
  },
  {
    "text": "as variables. So we don't need to explicitly\nsay that this one does not equal that one. That's already in the problem.",
    "start": "2194445",
    "end": "2200410"
  },
  {
    "text": "So we can combine all of\nthe things I've said so far. That may not always be the case,\nbut so far, we can combine all.",
    "start": "2200410",
    "end": "2206810"
  },
  {
    "text": "Yeah? AUDIENCE: Silly question. If we're carving them into\npositive side of the variable on one side and negative\non the other side,",
    "start": "2206810",
    "end": "2212170"
  },
  {
    "text": "wouldn't that make\nall the connections below that positive\nconnections instead of negative connections?",
    "start": "2212170",
    "end": "2217270"
  },
  {
    "text": "PROFESSOR: Sorry. I don't mean split it in\nthe way of that diagram. I mean that we\ncould, in this sense,",
    "start": "2217270",
    "end": "2223480"
  },
  {
    "text": "we could have vertices\nrepresent a positive vi and a negative vi, and\nhave the connections.",
    "start": "2223480",
    "end": "2229077"
  },
  {
    "text": "This was saying that\nwe could separate the positive connections\nfrom the negative ones. And I'm just saying we\nalready have that here.",
    "start": "2229077",
    "end": "2235300"
  },
  {
    "text": "This is a stronger property\nto say that they're also all in the same direction. If you just had this\nproperty, then you",
    "start": "2235300",
    "end": "2240710"
  },
  {
    "text": "could have some white\nhere and some white here, and red here and red here. But this is saying you\ncan get them all aligned",
    "start": "2240710",
    "end": "2246920"
  },
  {
    "text": "in the right direction. Yeah. In fact, if we look\nat this diagram,",
    "start": "2246920",
    "end": "2258992"
  },
  {
    "text": "maybe you didn't\nunderstand this diagram, but it has the same issue.",
    "start": "2258992",
    "end": "2264359"
  },
  {
    "text": "Or this is exactly\nthat kind of picture. So here we have a5. The positive is over here,\nthe negative is over here.",
    "start": "2264360",
    "end": "2270330"
  },
  {
    "text": "Here we have a4. The negative is there,\nand the positive is there. So this was getting\nthe weaker property.",
    "start": "2270330",
    "end": "2276284"
  },
  {
    "text": "Again, you don't have\nto worry about it, because we got the stronger one. But that's just to\nshow that there's",
    "start": "2276284",
    "end": "2282650"
  },
  {
    "text": "a difference between the two. Good.",
    "start": "2282650",
    "end": "2287859"
  },
  {
    "text": "So that was planar\nmonotone rectilinear 3SAT.",
    "start": "2287860",
    "end": "2293840"
  },
  {
    "text": "OK. I have a governor\ngeneral's warning.",
    "start": "2293840",
    "end": "2300474"
  },
  {
    "start": "2300475",
    "end": "2306070"
  },
  {
    "text": "So here's another problem. Suppose we have\nthe variable cycle. ",
    "start": "2306070",
    "end": "2315290"
  },
  {
    "text": "And I say, well, every\nclause is inside the cycle. And you are free to have\npositive and negative",
    "start": "2315290",
    "end": "2322990"
  },
  {
    "text": "connections. ",
    "start": "2322990",
    "end": "2329260"
  },
  {
    "text": "It's going to get hard. OK. Something like that. And it's planar.",
    "start": "2329260",
    "end": "2336000"
  },
  {
    "text": "That problem is\npolynomially solvable. So I'll rephrase this.",
    "start": "2336000",
    "end": "2342440"
  },
  {
    "text": "If all the clauses are on one\nside, of the variable cycle,",
    "start": "2342440",
    "end": "2362140"
  },
  {
    "text": "then that version of 3SAT\nis polynomially solvable. And the intuition is that\nthis kind of nesting structure",
    "start": "2362140",
    "end": "2369799"
  },
  {
    "text": "is essentially a tree. If you look at what\nnests inside of what,",
    "start": "2369800",
    "end": "2375335"
  },
  {
    "text": "what clauses fall\nunderneath other clauses, that is a nesting relation,\nwhich corresponds to a tree.",
    "start": "2375335",
    "end": "2382460"
  },
  {
    "text": "And then you just do dynamic\nprogramming over the tree. That's easy. The sort of surprising\nthing is that just",
    "start": "2382460",
    "end": "2388930"
  },
  {
    "text": "having two of these trees, one\non the inside of the cycle, one on the outside, is enough\nto make the problem hard.",
    "start": "2388930",
    "end": "2394214"
  },
  {
    "text": "That's a typical\nthing, actually, because the trees interdigitate. They have no real\nrelation to each other,",
    "start": "2394215",
    "end": "2400240"
  },
  {
    "text": "and there's no way to\nkeep track of both of them simultaneously with the dynamic\nprogram unless P equals mp.",
    "start": "2400240",
    "end": "2405500"
  },
  {
    "text": " OK.",
    "start": "2405500",
    "end": "2410580"
  },
  {
    "text": "So that's one gotcha\nto be careful of. So when you're doing\nyour reductions, you have to worry about things\nabove the line and things",
    "start": "2410580",
    "end": "2416380"
  },
  {
    "text": "below the line.  Also, here's a\nspecial case of this.",
    "start": "2416380",
    "end": "2423640"
  },
  {
    "start": "2423640",
    "end": "2441950"
  },
  {
    "text": "Suppose I phrase the\nfollowing problem. I want the bipartite graph\non variables versus clauses,",
    "start": "2441950",
    "end": "2447690"
  },
  {
    "text": "plus the cycle v1\nthrough vn back to v1, plus another cycle on the\nclause's c1 to cn and back",
    "start": "2447690",
    "end": "2456460"
  },
  {
    "text": "to c1. I want that whole\ngraph to be planar. OK?",
    "start": "2456460",
    "end": "2463070"
  },
  {
    "text": "If you think about\nthat for a second, that would imply all the\nclauses are on one side of the variable cycle.",
    "start": "2463070",
    "end": "2468442"
  },
  {
    "text": "And so we're in this\ncase, which is easy. So this is a special\ncase of that case. Now, this one I mentioned,\nbecause if this were hard,",
    "start": "2468442",
    "end": "2475650"
  },
  {
    "text": "life would be so easy. It's not so life isn't easy. But you already knew that.",
    "start": "2475650",
    "end": "2481140"
  },
  {
    "text": "Recall, say, proving\npush-1 is hard in 2D. Well, first we did it in 3D and\nthen we had a crossover gadget.",
    "start": "2481140",
    "end": "2488389"
  },
  {
    "text": "And most of the work was\nin the crossover gadget. The base proof was\ntrivial or very easy. ",
    "start": "2488389",
    "end": "2496180"
  },
  {
    "text": "So we can get all of these\nconnections between variables and clauses to be planar. We can get all of these\nconnections, the variables",
    "start": "2496180",
    "end": "2502870"
  },
  {
    "text": "in a line, to be\nplanar together, all of those things together. But we cannot also have a path\nconnecting all the clauses",
    "start": "2502870",
    "end": "2511040"
  },
  {
    "text": "together. Even a path. So I said a path here,\nwhich is what we want.",
    "start": "2511040",
    "end": "2518839"
  },
  {
    "text": "So that's annoying,\nbecause if we could make all of\nthese things planar, we wouldn't have to worry\nabout these crossovers.",
    "start": "2518840",
    "end": "2524839"
  },
  {
    "text": "Same thing with all the Nintendo\nproofs, like Super Mario Brothers again. The player is going from\none variable to the next,",
    "start": "2524840",
    "end": "2533170"
  },
  {
    "text": "so you need those edges\nconnecting all the variables in a path. You need the edges\nconnecting the clauses",
    "start": "2533170",
    "end": "2538850"
  },
  {
    "text": "in a path for the final check. So planar 3SAT\nbasically doesn't buy you anything in these proofs.",
    "start": "2538850",
    "end": "2544550"
  },
  {
    "text": "Now, if we could somehow avoid\nadding these connections, everything else could be planar.",
    "start": "2544550",
    "end": "2550000"
  },
  {
    "text": "That's sort of the\npoint of planar 3SAT. So if you can avoid\nthese things-- and there are a lot of games\nwhere that would happen.",
    "start": "2550000",
    "end": "2555898"
  },
  {
    "text": "Just you have to\nget a point here, and it's just added\nto your total score in some Never Never\nLand not in the plane,",
    "start": "2555898",
    "end": "2562440"
  },
  {
    "text": "then life would be much easier,\nbecause you wouldn't need a crossover gadget,\nbecause you can just",
    "start": "2562440",
    "end": "2569570"
  },
  {
    "text": "reduce from planar 3SAT. OK? That should give\nyou some intuition",
    "start": "2569570",
    "end": "2575160"
  },
  {
    "text": "why we care about\nplanar 3SAT, but also why we didn't use it\nfor those problems. As far as we know,\nthere's no way",
    "start": "2575160",
    "end": "2581200"
  },
  {
    "text": "to use planar 3SAT and make a\nsimpler Super Mario Brothers proof or whatever. ",
    "start": "2581200",
    "end": "2588660"
  },
  {
    "text": "OK. So next topic.",
    "start": "2588660",
    "end": "2594030"
  },
  {
    "start": "2594030",
    "end": "2605000"
  },
  {
    "text": "We will see some\nplanar 3SAT proofs,",
    "start": "2605000",
    "end": "2610350"
  },
  {
    "text": "reductions from planar 3SAT. But let me first tell you\nabout other versions of 3SAT. Remember there are three\nmain versions-- planar 3SAT,",
    "start": "2610350",
    "end": "2616078"
  },
  {
    "text": "planar 1-in-3SAT, and-- sorry. There are three versions\nof 3SAT-- 3SAT, 1-in-3SAT,",
    "start": "2616078",
    "end": "2621550"
  },
  {
    "text": "and Not All Equal SAT. Turns out 1-in-3SAT is hard\nwhen its graphs are planar.",
    "start": "2621550",
    "end": "2627760"
  },
  {
    "text": "Not All Equal SAT is easy\nwhen graphs are planar. So I will show you both.",
    "start": "2627760",
    "end": "2633130"
  },
  {
    "text": "AUDIENCE: For this\neasy case, do you have to have both the\nvariables in the cycle and a clauses in a cycle?",
    "start": "2633131",
    "end": "2638279"
  },
  {
    "text": "Or is it just like seeing the\nclauses in a path or cycle immediately triggers\nthis easy condition?",
    "start": "2638280",
    "end": "2644410"
  },
  {
    "text": "PROFESSOR: So I don't know. I think if the\nclauses are in a path",
    "start": "2644410",
    "end": "2649569"
  },
  {
    "text": "and the variables are\nnot connected at all, it should still be hard. But I couldn't find\na proof of that.",
    "start": "2649570",
    "end": "2655359"
  },
  {
    "text": "It's just a vague recollection. So I'm pretty sure if\nvariables are in a path and clauses are in a path,\nthen that's enough to be toast.",
    "start": "2655360",
    "end": "2662890"
  },
  {
    "text": "But all I proved here was cycle. But I think a path is enough. It will still\nbehave like a tree.",
    "start": "2662890",
    "end": "2669466"
  },
  {
    "text": "Mm. Maybe not. I'm not sure. Yeah. So it's a good question.",
    "start": "2669466",
    "end": "2676030"
  },
  {
    "text": "All right. Let's do planar 1-in-3SAT. So it's pretty much\nthe same thing.",
    "start": "2676030",
    "end": "2681440"
  },
  {
    "text": "I won't duplicate\nall of the text here. We take the bipartite graph\nof variables versus clauses.",
    "start": "2681440",
    "end": "2688520"
  },
  {
    "text": "And we also add\na path, or cycle, connecting all the variables.",
    "start": "2688520",
    "end": "2695849"
  },
  {
    "text": "And that graph should be planar. And otherwise, it's\n1-in-3SAT, exactly 1-in-3SAT.",
    "start": "2695850",
    "end": "2703579"
  },
  {
    "text": "So here's the proof. It's one of the easiest\nproofs we'll cover.",
    "start": "2703580",
    "end": "2708902"
  },
  {
    "text": "Suppose you have a clause. ",
    "start": "2708902",
    "end": "2714470"
  },
  {
    "text": "It's a reduction from planar\n3SAT to planar 1-in-3SAT.",
    "start": "2714470",
    "end": "2720260"
  },
  {
    "text": "OK? So this is also our first\nproof of 1-in-3SAT being hard. We are going to take\na regular 3SAT clause",
    "start": "2720260",
    "end": "2728579"
  },
  {
    "text": "and turn it into three\n1-in-3SAT clauses. And that transformation\npreserves planarity, so done.",
    "start": "2728580",
    "end": "2735929"
  },
  {
    "text": "So all of our proofs\nare going to just keep building up in this way. We've already proved\nthis problem's hard when the graph is planar.",
    "start": "2735929",
    "end": "2742099"
  },
  {
    "text": "So let's do this. At least one of\nthem should be 1. We don't want them all to be 0.",
    "start": "2742100",
    "end": "2747241"
  },
  {
    "text": "So let's try when they're all 0,\nsee if something should break. Let's say this variable\nis 0, easier to reach.",
    "start": "2747241",
    "end": "2752730"
  },
  {
    "text": "So that makes this\nguy satisfied,",
    "start": "2752730",
    "end": "2758380"
  },
  {
    "text": "which means both of\nthese must be false. This variable's\njust hanging out. It's just to make\neverything degree three.",
    "start": "2758380",
    "end": "2764180"
  },
  {
    "text": "So if this is 0, this\nis 1, so this must be 0.",
    "start": "2764180",
    "end": "2769680"
  },
  {
    "text": "So this is 0. This is 0. That means exactly one\nof these should be 1.",
    "start": "2769680",
    "end": "2774720"
  },
  {
    "text": "If cp is 1, obviously,\nwe're happy. But this will end up\nforcing this guy to be 0. Or sorry. Actually, it'll leave this\nguy free to do whatever.",
    "start": "2774720",
    "end": "2782660"
  },
  {
    "text": "So if this is 0, 0, 0,\nthen this must be 1.",
    "start": "2782660",
    "end": "2788650"
  },
  {
    "text": "This is 1. This is 1. Therefore, both of these are 0. If zr bar is 0, that\nmust mean this one is 1.",
    "start": "2788650",
    "end": "2795780"
  },
  {
    "text": "So if both of these were 0,\nit forced this guy to be a 1. If this was 0 and this is\n1, for example, this is 1.",
    "start": "2795780",
    "end": "2803175"
  },
  {
    "text": " Then this must be 0/ OK.",
    "start": "2803175",
    "end": "2809020"
  },
  {
    "text": "This is 0. But we're free to set\neither one of these to 1. So zr is free, which\nis what we want to do.",
    "start": "2809020",
    "end": "2815420"
  },
  {
    "text": "We're simulating regular 3SAT. If this is 1, then\nboth of these guys should be able to do\nwhatever they want. And that's what these\nguys let you do.",
    "start": "2815420",
    "end": "2823150"
  },
  {
    "text": "They're free floating. This guy can toggle if\nit's not constrained to be the only guy that's 1.",
    "start": "2823150",
    "end": "2828940"
  },
  {
    "text": "Yeah? AUDIENCE: What's the\ndashed line represent? PROFESSOR: Dashed line is\nthe outline of the gadget.",
    "start": "2828940",
    "end": "2836102"
  },
  {
    "text": "It's just saying you replace\nthat blob with this blob. I mean, slightly\nmore formally, I",
    "start": "2836102",
    "end": "2842945"
  },
  {
    "text": "think it's saying\nsomething like, if you contract this to a\npoint or if you contract this to a point, then it's\nexactly the same diagram.",
    "start": "2842945",
    "end": "2848910"
  },
  {
    "text": "So it's one way to\nargue you preserve planarity, something like that. ",
    "start": "2848910",
    "end": "2855150"
  },
  {
    "text": "So ignore it, basically. Now, I guess you\nwould have to argue",
    "start": "2855150",
    "end": "2860309"
  },
  {
    "text": "that you can still have a path\nthat visits all the variables. Another question? AUDIENCE: Yeah.",
    "start": "2860310",
    "end": "2866173"
  },
  {
    "text": "What's preventing you from\nsetting all three to false? PROFESSOR: That is one\nof the cases I just did.",
    "start": "2866174",
    "end": "2872590"
  },
  {
    "text": "If these two are false,\nthen these have to be true. No, sorry.",
    "start": "2872590",
    "end": "2878520"
  },
  {
    "text": "These have to be 0. So these are both 0. And then this has to\nbe a 1 or satisfy this.",
    "start": "2878520",
    "end": "2884030"
  },
  {
    "text": " It's easy to get confused,\nbecause that one is 3SAT, this one is 1-in-3SAT.",
    "start": "2884030",
    "end": "2890130"
  },
  {
    "text": "So these all have\nexactly 1 constraints. OK. Now, this proof has negations.",
    "start": "2890130",
    "end": "2896960"
  },
  {
    "text": "And you may recall\nthat monotone-- I'm going to switch to saying\npositive 1-in-3SAT where you",
    "start": "2896960",
    "end": "2903150"
  },
  {
    "text": "have no negations is also hard. So we can also define\nplanar positive 1-in-3SAT.",
    "start": "2903150",
    "end": "2912980"
  },
  {
    "start": "2912980",
    "end": "2920170"
  },
  {
    "text": "This is also hard by a slightly\nmore complicated proof, more recent proof also.",
    "start": "2920170",
    "end": "2927000"
  },
  {
    "text": "Surprisingly, this planar\nmonotone rectilinear 3SAT, or just planar monotone\n3SAT, is also very recent.",
    "start": "2927000",
    "end": "2934289"
  },
  {
    "text": "I think 2010. So a lot of these\njust fell recently but are a natural culmination\nof all these simplifications.",
    "start": "2934290",
    "end": "2942270"
  },
  {
    "text": "So this is a version\nthat-- well, these are some gadgets, actually. This is one way to force\nthe two variables to have",
    "start": "2942270",
    "end": "2949010"
  },
  {
    "text": "opposite values and force\nthe two variables to have equal values, using--\nI guess this is really",
    "start": "2949010",
    "end": "2956340"
  },
  {
    "text": "planar positive\nrectilinear 1-in-3SAT.",
    "start": "2956340",
    "end": "2961730"
  },
  {
    "text": "It's the 1-in-3SAT\nversion of this problem. So again, variables\nare on the x-axis. Everything above is\nimplicitly all positive.",
    "start": "2961730",
    "end": "2967569"
  },
  {
    "text": "Everything below is\nimplicitly all negative. Oh, sorry. Here, everything\nis all positive.",
    "start": "2967570",
    "end": "2973056"
  },
  {
    "text": "Yeah? AUDIENCE: Another\nnice thing to note about that particular\nconstruction is that each of the variables\nin the clauses are unique,",
    "start": "2973056",
    "end": "2979860"
  },
  {
    "text": "so it's exactly 3. And they're all\nunique, which someone was asking about before.",
    "start": "2979860",
    "end": "2985514"
  },
  {
    "text": "PROFESSOR: Good. So in this construction,\n1-in-3SAT, all of the clauses",
    "start": "2985514",
    "end": "2991660"
  },
  {
    "text": "do not repeat any variables. Exactly three\ndistinct guys, yeah. AUDIENCE: So to be clear,\nthis problem is hard,",
    "start": "2991660",
    "end": "3000250"
  },
  {
    "text": "but in this terminology, planar\npositive rectilinear 3SAT,",
    "start": "3000250",
    "end": "3006780"
  },
  {
    "text": "not 1-in-3SAT, is easy. Because if everything was\non one side of the line--",
    "start": "3006780",
    "end": "3013420"
  },
  {
    "text": "PROFESSOR: I mean,\npositive 3SAT is easy. You set all the\nvariables to true.",
    "start": "3013420",
    "end": "3020372"
  },
  {
    "text": "AUDIENCE: I'm confused. Positive means that-- PROFESSOR: Positive is sort\nof the 1-in-3SAT version of monotone.",
    "start": "3020372",
    "end": "3025910"
  },
  {
    "text": "So 3SAT monotone\nmeans every clause is all positive or all negative. In 1-in-3SAT, you just\nneed everything positive.",
    "start": "3025910",
    "end": "3034070"
  },
  {
    "text": "And it's still hard. But with 3SAT, that\ndoesn't work, because you can set everything to true. 1-in-3SAT requires\nsome false things.",
    "start": "3034070",
    "end": "3043090"
  },
  {
    "text": "So it's sort of the analog. This is sometimes called planar\nmonotone rectilinear 1-in-3SAT.",
    "start": "3043090",
    "end": "3049650"
  },
  {
    "text": "But to avoid confusion, because\nthey are somewhat different, I'm calling it positive. I think this paper\nactually calls it positive,",
    "start": "3049650",
    "end": "3056550"
  },
  {
    "text": "which makes me happy. Anyway, you can check these\ngadgets that they force.",
    "start": "3056550",
    "end": "3061560"
  },
  {
    "text": "In particular here, you're\nbasically forcing a to b 0 by this little construction.",
    "start": "3061560",
    "end": "3066880"
  },
  {
    "text": "You can see as 1. Therefore, this clause\nforces exactly one of these",
    "start": "3066880",
    "end": "3072520"
  },
  {
    "text": "to be true, the\nother to be false. So it forces them\nto be different. You repeat that twice,\nyou get equality. Then you do this.",
    "start": "3072520",
    "end": "3078250"
  },
  {
    "text": " First, you get rid\nof all negations,",
    "start": "3078250",
    "end": "3084670"
  },
  {
    "text": "because you have\nthis way to force two things to be different. These Xed out ones\nare the red lines.",
    "start": "3084670",
    "end": "3090110"
  },
  {
    "text": "Those are connected\nto negated copies. You just duplicate the\nvariable in negated form",
    "start": "3090110",
    "end": "3095849"
  },
  {
    "text": "and then use a wire there. So this wire\nbecomes that one. x2 is different from x1.\nx3 is different from x2.",
    "start": "3095850",
    "end": "3102150"
  },
  {
    "text": "So it's equal to x1. Same trick we saw before. Now you have no negations. So now this type of\nclause is a 3SAT clause.",
    "start": "3102150",
    "end": "3110340"
  },
  {
    "text": "It's a little weird. Right of the arrows, these\nare 1-in-3SAT clauses. Left of the arrows are\nregular 3SAT clauses.",
    "start": "3110340",
    "end": "3116020"
  },
  {
    "text": "So we replace this\nwith this construction. ",
    "start": "3116020",
    "end": "3122834"
  },
  {
    "text": "It's sort of like the\nold one but a little bit spread out, with\nthe duplications, with these equal gadgets.",
    "start": "3122834",
    "end": "3128885"
  },
  {
    "text": "We get a copy of x over here. That's so that if we have\nmore connections below, we can easily access x still.",
    "start": "3128885",
    "end": "3137570"
  },
  {
    "text": "And yeah. These 1-in-3 gadgets\nconstrain this.",
    "start": "3137570",
    "end": "3145717"
  },
  {
    "text": "Yeah, there is an equal gadget-- AUDIENCE: The equals\nand not equals are not part of the\nproblem, they're just referring to\nthe earlier gadget. PROFESSOR: No.",
    "start": "3145717",
    "end": "3150946"
  },
  {
    "text": "Right. That's shorthand\nfor these gadgets. So you would plug in\neach of those things into those little pictures.",
    "start": "3150946",
    "end": "3157640"
  },
  {
    "text": "Yeah.  OK. So let's skip those details.",
    "start": "3157640",
    "end": "3163070"
  },
  {
    "text": "But you get that planar positive\nrectilinear 1-in-3SAT is hard.",
    "start": "3163070",
    "end": "3168840"
  },
  {
    "text": "And that was 2008. Cool. ",
    "start": "3168840",
    "end": "3176640"
  },
  {
    "text": "Let's do planar\nNot All Equal 3SAT.",
    "start": "3176640",
    "end": "3186589"
  },
  {
    "text": " This is polynomial. Important thing to remember--\nin the planar world,",
    "start": "3186590",
    "end": "3193020"
  },
  {
    "text": "you have to be careful\nwith all sorts of things. It would be nice to have\na Schaefer-type dichotomy",
    "start": "3193020",
    "end": "3199400"
  },
  {
    "text": "theorem for planar graphs, but I\ndon't know of any such theorem. So meanwhile, this is the\nsort of main characterization.",
    "start": "3199400",
    "end": "3206465"
  },
  {
    "text": "You have those three\nstandard problems. This one falls in\nthe planar case. Same setup.",
    "start": "3206465",
    "end": "3211980"
  },
  {
    "text": "We have Not All Equal\nclauses and the connections between those and the\nvariables negated or not.",
    "start": "3211980",
    "end": "3218720"
  },
  {
    "text": "Even when you allow negations,\nthis problem is polynomial. The fun thing is the proof of\nthis theorem is a reduction,",
    "start": "3218720",
    "end": "3226889"
  },
  {
    "text": "and it looks exactly\nlike a hardness proof. I mean-- [LAUGHS]\nIt just happens to be from this problem to a\nknown polynomial time problem,",
    "start": "3226889",
    "end": "3235329"
  },
  {
    "text": "namely, planar max cut. So we're going to\nreduce to-- this",
    "start": "3235330",
    "end": "3240810"
  },
  {
    "text": "is one of the few times we will\nreduce to something-- planar",
    "start": "3240810",
    "end": "3246370"
  },
  {
    "text": "max cut. So max cut is I\ngive you a graph, and I want to color the\nvertices two different colors.",
    "start": "3246370",
    "end": "3253340"
  },
  {
    "text": "Think of them as the\ntwo sides of a cut. Say red and blue. And I want to\nmaximize the number of edges that are red, blue.",
    "start": "3253340",
    "end": "3261510"
  },
  {
    "text": "So I want to maximize the number\nof, here, white-black edges,",
    "start": "3261510",
    "end": "3267280"
  },
  {
    "text": "bichromatic edges. That's max cut. In general graphs, that's\nNP-hard, but in planar graphs, it's easy, because if you\nlook at the dual graph",
    "start": "3267280",
    "end": "3275460"
  },
  {
    "text": "and then solve the Chinese\npostman tour problem, which is the shortest path that\nvisits all of the edges at least",
    "start": "3275460",
    "end": "3280670"
  },
  {
    "text": "once, which you can\ndo in polynomial time by perfect matching and a\nbipartite null in a cleek.",
    "start": "3280670",
    "end": "3286930"
  },
  {
    "text": "Anyway, you do that. And then all the edges that\nyou double are not in the cut,",
    "start": "3286930",
    "end": "3292740"
  },
  {
    "text": "I think. And all the edges that you\ndon't double in that tour are in the max cut.",
    "start": "3292740",
    "end": "3300089"
  },
  {
    "text": "Fun fact. So this is a known fact. Planar max cut is easy.",
    "start": "3300090",
    "end": "3305970"
  },
  {
    "text": "So if we reduce from planar\nNot Equal 3SAT to max cut, the problem is easy. And here's the proof.",
    "start": "3305970",
    "end": "3311850"
  },
  {
    "text": "It's got a variable gadget and\na Not All Equal clause gadget. So we want to represent\nNot All Equal.",
    "start": "3311850",
    "end": "3320369"
  },
  {
    "text": "And so the idea is we're\ngoing to represent a variable with this alternating chain.",
    "start": "3320370",
    "end": "3325550"
  },
  {
    "text": "And if you want to maximize\nthe number of red-blue edges, you should alternate, because\nthis have even length. If you don't alternate\nanywhere, you're",
    "start": "3325550",
    "end": "3331761"
  },
  {
    "text": "going to not get as many edges. In general, we'll say,\nwell, the target cut size you're trying to\nget, the decision problem",
    "start": "3331761",
    "end": "3338340"
  },
  {
    "text": "is, is there a cut of\nsize at least something? The something is going to\nbe, in particular, it's going to be a sum of\nthings, but for this gadget,",
    "start": "3338340",
    "end": "3344921"
  },
  {
    "text": "it is two times the\nnumber of occurrences that the variable would\nsay, or basically the length",
    "start": "3344921",
    "end": "3350510"
  },
  {
    "text": "of this cycle. We'll just make the\ncycle big enough, so we get lots of copies of\nxi, lots of copies of xi bar.",
    "start": "3350510",
    "end": "3357930"
  },
  {
    "text": "So this is one possible setting. If blue means true, this is like\nsaying that we set xi to true.",
    "start": "3357930",
    "end": "3364370"
  },
  {
    "text": "We could do the reverse. We could set xi to false\nand set xi bar to true.",
    "start": "3364370",
    "end": "3369910"
  },
  {
    "text": "But they have to be opposites. So now we have-- this is\nbasically a split gadget. We have several copies\nof xi and xi bar.",
    "start": "3369910",
    "end": "3379060"
  },
  {
    "text": "Then we're going to connect them\nwith this Not All Equal clause, which is just a triangle.",
    "start": "3379060",
    "end": "3384330"
  },
  {
    "text": "And the idea is if these\nare-- so this is really a negated version of xi,\nbut it doesn't matter.",
    "start": "3384330",
    "end": "3391259"
  },
  {
    "text": "If you negate all the variables,\nthey'll still be not all equal. And exactly when\nthey're not all equal, we get two points\nout of this gadget.",
    "start": "3391260",
    "end": "3399040"
  },
  {
    "text": "Well, we also have to\nget the three points from these connections. That forces this alternation. So we say the target\nin this gadget",
    "start": "3399040",
    "end": "3405650"
  },
  {
    "text": "is to get a cut of size 5. We want five red-blue edges. That's the most you could hope\nfor because of an odd cycle",
    "start": "3405650",
    "end": "3412210"
  },
  {
    "text": "here. And if you get the sum of all\nthese cut sizes, in total,",
    "start": "3412210",
    "end": "3417770"
  },
  {
    "text": "you must have Not All\nEqual in every clause. So that's simulating\nNot All Equal-- planar",
    "start": "3417770",
    "end": "3425000"
  },
  {
    "text": "Not All Equal 3SAT. This also preserves planarity. And we just contract\nthe variable to a point, the\nclauses to a point.",
    "start": "3425000",
    "end": "3430650"
  },
  {
    "text": "And it is the bipartite graph\nof the Not All Equal picture. And we've simulated that planar\nNot All Equal 3SAT instance",
    "start": "3430650",
    "end": "3437390"
  },
  {
    "text": "with planar max cut,\nwhich here, we actually have a polynomial algorithm.",
    "start": "3437390",
    "end": "3442450"
  },
  {
    "text": "So that gives us a\npolynomial algorithm for planar Not All Equal 3SAT. So that's kind of fun.",
    "start": "3442450",
    "end": "3448280"
  },
  {
    "text": "Similar style.  Yeah.",
    "start": "3448280",
    "end": "3454200"
  },
  {
    "text": "Good.  So many problems.",
    "start": "3454200",
    "end": "3459580"
  },
  {
    "start": "3459580",
    "end": "3483600"
  },
  {
    "text": "So I guess now we're going\nto do some reductions",
    "start": "3483600",
    "end": "3489190"
  },
  {
    "text": "from various planar 3SAT\nthings to problems you might care a little bit more about.",
    "start": "3489190",
    "end": "3495690"
  },
  {
    "text": "I'm going to\nstart-- I mean, it's sort of a vague\ntransition, because these, you could think of just more\nproblems of the same type.",
    "start": "3495690",
    "end": "3502120"
  },
  {
    "text": "X3C is something we talked about\nin the context of 3PARTITION. This was exact cover\nwith sets of size 3.",
    "start": "3502120",
    "end": "3510040"
  },
  {
    "text": "I think Exact Cover\nwith sets of size 3. So this was-- you could\nthink of it as a hyper-graph.",
    "start": "3510040",
    "end": "3516574"
  },
  {
    "text": "Or you could think of\nit as a bipartite graph. You have sets of size 3\nwhich cover variables.",
    "start": "3516574",
    "end": "3523290"
  },
  {
    "text": "You want every variable to\nbe covered exactly once. ",
    "start": "3523290",
    "end": "3529720"
  },
  {
    "text": "But you can only\nchoose sets of size 3. Yeah. So this is closely related,\nI guess, to planar 1-in-3SAT.",
    "start": "3529720",
    "end": "3541250"
  },
  {
    "text": "Here, each of these\nthings could have arbitrary degree--\neach element can",
    "start": "3541250",
    "end": "3546480"
  },
  {
    "text": "appear in many different sets. Whereas over-- and you're\ncovering these with these.",
    "start": "3546480",
    "end": "3553410"
  },
  {
    "text": "I think this is the reverse\nsetup, where every-- let's see.",
    "start": "3553410",
    "end": "3561109"
  },
  {
    "text": " The clauses, again, have\nto be exactly covered",
    "start": "3561110",
    "end": "3566230"
  },
  {
    "text": "by these things. And these things\nhave arbitrary size.",
    "start": "3566230",
    "end": "3574266"
  },
  {
    "text": "So these are the things\nthat you're choosing. I'm choosing to make\nthis variable true, which covers this guy.",
    "start": "3574266",
    "end": "3579389"
  },
  {
    "text": "These have arbitrary size here. The thing that I'm\nchoosing has size 3. OK? So it's sort of the dual of--",
    "start": "3579389",
    "end": "3585447"
  },
  {
    "text": "AUDIENCE: What are you choosing? PROFESSOR: --of\nplanar 1-in-3SAT. So the goal-- maybe I should\nwrite down the problem again.",
    "start": "3585447",
    "end": "3595059"
  },
  {
    "text": "You're given three sets. These are sets of size 3. And you want to choose,\nlet's say, k of them.",
    "start": "3595060",
    "end": "3603819"
  },
  {
    "text": " Actually, it would be choose\nn/3 of them that are disjoint.",
    "start": "3603820",
    "end": "3612765"
  },
  {
    "text": " And therefore, every\nelement-- they're n elements--",
    "start": "3612765",
    "end": "3618510"
  },
  {
    "text": "every element is covered exactly\nonce by exactly one 3SAT.",
    "start": "3618510",
    "end": "3623570"
  },
  {
    "text": "So it's, I think,\nsort of complementary to planar 1-in-3SAT. The planar version is that\nthis bipartite graph is planar.",
    "start": "3623570",
    "end": "3631349"
  },
  {
    "text": "And Dyer and Freeze,\nthis is same people that approved one of these\nmany problems is hard.",
    "start": "3631350",
    "end": "3640240"
  },
  {
    "text": "I think the-- I'll look back. ",
    "start": "3640240",
    "end": "3647890"
  },
  {
    "text": "Planar 1-in-3SAT. So no surprise. So we're going to reduce\nfrom planar 1-in-3SAT",
    "start": "3647890",
    "end": "3654864"
  },
  {
    "text": "to this problem, prove\nthat this is hard. And here's a very simple proof. They make it more complicated.",
    "start": "3654864",
    "end": "3660940"
  },
  {
    "text": "But for starters,\nlet's make a variable by this kind of\neven cycle trick.",
    "start": "3660940",
    "end": "3667740"
  },
  {
    "text": "And the picture here is that\nthe big circles are 3SATs, the dots are the elements\nyou're trying to cover.",
    "start": "3667740",
    "end": "3673970"
  },
  {
    "text": "And every element should\nbe covered exactly by exactly one set. So this looks good, because\nthere are exactly two ways",
    "start": "3673970",
    "end": "3680380"
  },
  {
    "text": "to solve this thing. You could choose these guys\nand cover those points exactly",
    "start": "3680380",
    "end": "3685490"
  },
  {
    "text": "once, in which case, this\nis covered, this is covered, and this is covered. But these other\nguys are uncovered.",
    "start": "3685490",
    "end": "3691840"
  },
  {
    "text": "Those are going to\nattach to other gadgets. Or you could do the reverse. So that's going to correspond\nto a true or false setting.",
    "start": "3691840",
    "end": "3699590"
  },
  {
    "text": "And I think-- this is\nnot in their paper, but I think this would be a\nclause for exactly one 3SAT.",
    "start": "3699590",
    "end": "3706040"
  },
  {
    "text": "Just connect-- you\ncould have even negated",
    "start": "3706040",
    "end": "3711870"
  },
  {
    "text": "versions of your variables. But let's say we have all\npositive planar 1-in-3SAT.",
    "start": "3711870",
    "end": "3717430"
  },
  {
    "text": "3, So I'll just\ntake a positive copy of xi, a positive copy\nof xj from somewhere,",
    "start": "3717430",
    "end": "3722800"
  },
  {
    "text": "and then just bring them\ntogether at a common dot. Then that point\nshould be covered by exactly one of them, which\nmeans exactly one of those",
    "start": "3722800",
    "end": "3730073"
  },
  {
    "text": "is true. Done. Very easy. Now, they want to\nprove more things,",
    "start": "3730073",
    "end": "3735310"
  },
  {
    "text": "so they end up using-- I think\nI will just show you for fun. They end up using a more\ncomplicated clause and a more",
    "start": "3735310",
    "end": "3744520"
  },
  {
    "text": "complicated way to connect\nthese things into the clause, because they want to prove\nanother problem hard,",
    "start": "3744520",
    "end": "3753400"
  },
  {
    "text": "which is planar\nthree-dimensional matching.",
    "start": "3753400",
    "end": "3759597"
  },
  {
    "text": "Three-dimensional matching\nwas a generalization of numerical three-dimensional\nmatching, which was",
    "start": "3759597",
    "end": "3765780"
  },
  {
    "text": "closely related to 3PARTITION. In general,\nthree-dimensional matching,",
    "start": "3765780",
    "end": "3772170"
  },
  {
    "text": "it's like this problem. But you also have\nthe extra information that for every set of size\n3, one of these is red,",
    "start": "3772170",
    "end": "3779279"
  },
  {
    "text": "another one is blue,\nanother one is yellow. This paper uses the\nadditive primary colors.",
    "start": "3779280",
    "end": "3786260"
  },
  {
    "text": "I don't know why. It could be green if you prefer. So there are three\ntypes of elements.",
    "start": "3786260",
    "end": "3792840"
  },
  {
    "text": "And you're told that every\nset has one of each type. So that's extra information\nthat's useful in some proofs.",
    "start": "3792840",
    "end": "3799790"
  },
  {
    "text": "So this is a better\nconstruction, because it's going to end\nup being three-colorable.",
    "start": "3799790",
    "end": "3806400"
  },
  {
    "text": "Yeah. I don't know how much you\ncare about this reduction. I think I will skip the\ndetails, although I spent",
    "start": "3806400",
    "end": "3814100"
  },
  {
    "text": "a lot of time understanding it. The rough idea is that\nthese connectors-- there's",
    "start": "3814100",
    "end": "3820207"
  },
  {
    "text": "a positive and a negative\nversion, because they're worried about negations. But these connections\nwill attach",
    "start": "3820207",
    "end": "3826190"
  },
  {
    "text": "to these three terminals\nfor one variable, these three terminals\nfor another, and these three for another. And just by a counting\nargument in here,",
    "start": "3826190",
    "end": "3833530"
  },
  {
    "text": "there is 1, 2, 3, 4, 5,\n6, 7, 8, 9 of these guys.",
    "start": "3833530",
    "end": "3840290"
  },
  {
    "text": "And there are however many--\nI guess I should really be counting the black dots. 1, 2, 3, 4, 5, 6, 7, 8,\n9, 11, 12 points here.",
    "start": "3840290",
    "end": "3851360"
  },
  {
    "text": "So the best you can do is\nto choose three of the sets",
    "start": "3851360",
    "end": "3857210"
  },
  {
    "text": "inside that will cover\nall of the black dots except for three of them.",
    "start": "3857210",
    "end": "3862230"
  },
  {
    "text": "And so from that, you\nget exactly one 1SAT. Exactly one of these should be\ncovered from somewhere else.",
    "start": "3862230",
    "end": "3868196"
  },
  {
    "text": "That would correspond\nto this situation where you cover\nthese three points as opposed to this situation,\nwhere none of them get covered.",
    "start": "3868196",
    "end": "3874370"
  },
  {
    "text": "That's like these guys. And then you can\nalways satisfy the rest by adding three in there. So that's roughly how\nthat clause works.",
    "start": "3874370",
    "end": "3882869"
  },
  {
    "text": "Then that picture\nis three-colorable. And this way, you can color\nall the dots with three colors.",
    "start": "3882870",
    "end": "3890449"
  },
  {
    "text": "And it pretty much works. The variable\nalternates red, yellow. So we always get blue\nconnections, which is good.",
    "start": "3890449",
    "end": "3896570"
  },
  {
    "text": "So we can attach to\nanything, except that the way that we attach is like this. And these are three\ncolors which match here.",
    "start": "3896570",
    "end": "3905400"
  },
  {
    "text": "And in this case, these\nthree colors match here. But you might want to\nattach here, for example.",
    "start": "3905400",
    "end": "3910510"
  },
  {
    "text": "So you need another connector,\nwhich is slightly different.",
    "start": "3910510",
    "end": "3915530"
  },
  {
    "text": "This does exactly\nthe same thing, but now this color\npattern matches here, but in negated form.",
    "start": "3915530",
    "end": "3922020"
  },
  {
    "text": "And if you switch these two\ncolors, it matches here,",
    "start": "3922020",
    "end": "3928510"
  },
  {
    "text": "I think when it's upside-down. So there's this version, and\nthere's the reflected version. And then there's also this\ncoloring of the same gadget.",
    "start": "3928510",
    "end": "3937130"
  },
  {
    "text": "And so you do all these things. You know what you're\nsupposed to connect, and so you just choose one\nof these three gadgets,",
    "start": "3937130",
    "end": "3942253"
  },
  {
    "text": "and it connects to one of\nthe three appropriate places. That's their proof. It was fun to read.",
    "start": "3942253",
    "end": "3947480"
  },
  {
    "text": "And that proves that planar\nthree-dimensional matching is hard. OK. Plus, in their\ndiagrams, oh, they",
    "start": "3947480",
    "end": "3954426"
  },
  {
    "text": "have dashed lines through\neverything in order to illustrate that you\ncan have one path that visits all of the elements,\njust like in planar 3SAT.",
    "start": "3954426",
    "end": "3961495"
  },
  {
    "text": "So also, both planar\nthree-dimensional matching and planar exact cover by 3SATs,\nyou can have one cycle",
    "start": "3961495",
    "end": "3971512"
  },
  {
    "text": "that visits every element.  Yeah.",
    "start": "3971512",
    "end": "3978119"
  },
  {
    "text": "Cool. Here's another\nrelatively simple proof. This is in the original\nLichtenstein paper,",
    "start": "3978120",
    "end": "3984260"
  },
  {
    "text": "so this is one of their\nmotivations for planar 3SAT. Planar vertex cover. So what's vertex cover?",
    "start": "3984260",
    "end": "3992190"
  },
  {
    "text": "You're given a graph. You want to choose\na set of vertices that cover all of the edges.",
    "start": "3992190",
    "end": "3997810"
  },
  {
    "text": "So for example, if\nyou have a triangle, and I choose this vertex,\nit covers this edge, and it covers this edge.",
    "start": "3997810",
    "end": "4003470"
  },
  {
    "text": "I have one edge uncovered. So I'm going to add\nthis one and cover that. So I don't require\nexactly one cover.",
    "start": "4003470",
    "end": "4009440"
  },
  {
    "text": "Just every edge has to be\ncovered by at least one of its endpoints. So you can think of it as\nan oar of its two endpoints.",
    "start": "4009440",
    "end": "4017970"
  },
  {
    "text": "OK. But this problem is NP-hard\neven for planar graphs. And here's one way to do.",
    "start": "4017970",
    "end": "4023710"
  },
  {
    "text": "This is like the whole\nproof in one little picture. You have a variable\ngadget, which, again, is just a even cycle.",
    "start": "4023710",
    "end": "4032040"
  },
  {
    "text": "And in an even cycle,\nthe vertex cover-- let's say this has size k.",
    "start": "4032040",
    "end": "4038350"
  },
  {
    "text": "And I give you the budget of\nonly k/2 for your vertex cover, then you have to alternate. So either these three guys\nare in your vertex cover,",
    "start": "4038350",
    "end": "4045090"
  },
  {
    "text": "or these three guys are. This proof actually\nlooks the same as the last one we saw, right?",
    "start": "4045090",
    "end": "4050119"
  },
  {
    "text": "Then those things are just\nconnected to triangles. Same deal here. I'm going to give\nyou a budget of two",
    "start": "4050120",
    "end": "4055900"
  },
  {
    "text": "for this clause, because to\ncover all three of these edges, you need at least two vertices,\nlike we did over there.",
    "start": "4055900",
    "end": "4062480"
  },
  {
    "text": "And if you're going to get\naway with only two-- so if I choose, for\nexample, these two, that also covers this edge\nand this edge for free.",
    "start": "4062480",
    "end": "4070020"
  },
  {
    "text": "But it does not cover this edge. This would be the one edge\nnot covered by the clause alone if you only\nget a budget of two.",
    "start": "4070020",
    "end": "4075640"
  },
  {
    "text": "And that's the\none that better be covered by this\nside, which means this variable is set to true. And in general, at least\none of these three things",
    "start": "4075640",
    "end": "4082200"
  },
  {
    "text": "better be covered. Otherwise you won't\nhave enough budget to finish that triangle clause.",
    "start": "4082200",
    "end": "4087620"
  },
  {
    "text": "Question? AUDIENCE: So the hexagon\nversus square here is just to give you\nmore connection points",
    "start": "4087620",
    "end": "4093370"
  },
  {
    "text": "into other clauses? PROFESSOR: Yeah. Just make these\ncycles big enough to connect up to all the\nthings you need it in. So if you have ni\noccurrences, you're",
    "start": "4093370",
    "end": "4100339"
  },
  {
    "text": "going to do, like,\n2 ni or something. ",
    "start": "4100340",
    "end": "4105969"
  },
  {
    "text": "Cool. So that's planar vertex cover. And because this reduction\npreserved planarity,",
    "start": "4105970",
    "end": "4111939"
  },
  {
    "text": "we get planar\nvertex cover's hard, because planar 3SAT is hard. Here we didn't need\nany connections",
    "start": "4111939",
    "end": "4117848"
  },
  {
    "text": "between the variables. Here's one where we\ndo need connections between the variables. So this is planar-directed\nHamiltonian cycle.",
    "start": "4117848",
    "end": "4126970"
  },
  {
    "text": "So I think you all know\nwhat Hamiltonian cycle is. And you're given a\ndirected graph here.",
    "start": "4126970",
    "end": "4132089"
  },
  {
    "text": "You want to find one path that\nvisits every vertex exactly once. Don't care about edges.",
    "start": "4132090",
    "end": "4137149"
  },
  {
    "text": "So we can do a\nsimilar kind of thing. The proof is a little bit--\nbut checking this works is",
    "start": "4137149",
    "end": "4142614"
  },
  {
    "text": "a little bit more annoying. But here's Lichtenstein's\nidea for variable.",
    "start": "4142615",
    "end": "4148262"
  },
  {
    "text": "Essentially, a wire.  The graph is directed here. So we get to say there's\nan incoming edge here.",
    "start": "4148262",
    "end": "4155723"
  },
  {
    "text": "Then you get a choice. So which way it'll go. But then you basically\nhave to alternate. Because of these\nvertices in the middle,",
    "start": "4155724",
    "end": "4162080"
  },
  {
    "text": "you've got to visit all of them. And the only way to do\nthat is to alternate. So you get this\nalternating pattern,",
    "start": "4162080",
    "end": "4167520"
  },
  {
    "text": "which means if you look at\nthese edges, a1 and a1 bar, exactly one of these is in.",
    "start": "4167520",
    "end": "4173430"
  },
  {
    "text": "And then the opposite\nof these are in. The variable here is called a. So there's many instances of a.",
    "start": "4173430",
    "end": "4180528"
  },
  {
    "text": "And these are going to\nbe in-- they're going to be both in or both out.",
    "start": "4180529",
    "end": "4185630"
  },
  {
    "text": "And then these are going to be\nboth out or both in and so on. So because I have\nto zigzag, I made",
    "start": "4185630",
    "end": "4191568"
  },
  {
    "text": "a bunch of copies, ni\ncopies of the variable a. But you're free to choose\none setting or the other.",
    "start": "4191569",
    "end": "4198460"
  },
  {
    "text": "And then the clause is just\ngoing to be a single vertex. And the idea is if we want b\nbar to satisfy this clause,",
    "start": "4198460",
    "end": "4207616"
  },
  {
    "text": "we're going to add\nin those two edges. So instead of going straight\nhere, you could have done this and grabbed the clause for free.",
    "start": "4207617",
    "end": "4213620"
  },
  {
    "text": "You don't have to. But this is going to\nget grabbed if and only if exactly-- at\nleast one of these",
    "start": "4213620",
    "end": "4220692"
  },
  {
    "text": "chooses the appropriate edge. If you're using\nthis edge, there's no way to cover this clause. But if using this\nedge, you can do that.",
    "start": "4220692",
    "end": "4227010"
  },
  {
    "text": "You have to check that you\ncan't let go from here to there to over here. That's what this\nfigure is about.",
    "start": "4227010",
    "end": "4232469"
  },
  {
    "text": "So basically, if you're\nalternating here, you switch sides, and then\nyou're alternating here,",
    "start": "4232470",
    "end": "4238300"
  },
  {
    "text": "this guy is uncovered. And apparently, this\nproof works even when the graph is undirected,\nbut that's even less clear.",
    "start": "4238300",
    "end": "4244590"
  },
  {
    "text": "We'll see other\nHamiltonian cycle proofs that are stronger than this. But it's a nice illustration.",
    "start": "4244590",
    "end": "4249650"
  },
  {
    "text": "Here we're using that we\ncan connect all the vertices together. That's what these\nconnections are in the cycle.",
    "start": "4249650",
    "end": "4256980"
  },
  {
    "text": "So there's this big\nvertex loop on the outside taking these gadgets,\nand pasting them together",
    "start": "4256980",
    "end": "4262300"
  },
  {
    "text": "in a big loop, because we want\nan overall Hamiltonian cycle. Because we know that preserves\nlinearity, life is good.",
    "start": "4262300",
    "end": "4270340"
  },
  {
    "text": "OK. So there'll be some\nclauses inside the cycle, some clauses outside the cycle. But that doesn't matter.",
    "start": "4270340",
    "end": "4276500"
  },
  {
    "text": "OK. That's planar-directed\nHamiltonian cycle. ",
    "start": "4276500",
    "end": "4282310"
  },
  {
    "text": "Time for a Nikoli game. I bumped into this slide\nthat I made a while ago.",
    "start": "4282310",
    "end": "4288060"
  },
  {
    "text": "So for fun, these are\nall the Nikoli games I know that have been proved\nhard except the one I'm going to talk about.",
    "start": "4288060",
    "end": "4294180"
  },
  {
    "text": "These are the references. We covered one of them,\nright, the Light Up.",
    "start": "4294180",
    "end": "4300119"
  },
  {
    "text": "But there's a lot. And lots of papers proving them. So here's a relatively new game.",
    "start": "4300120",
    "end": "4306580"
  },
  {
    "text": "It came out a couple\nyears ago in Nikoli land, although it was\ninvented before that. Shakashaka, which is\nlike a shaking sound.",
    "start": "4306580",
    "end": "4314800"
  },
  {
    "text": "So we have a square grid, blank\nsquares, and obstacle squares.",
    "start": "4314800",
    "end": "4320359"
  },
  {
    "text": "The obstacle squares, some of\nthem have numbers, some of them are wild cards. And what you're allowed to do\nfor a blank square-- or some",
    "start": "4320359",
    "end": "4330720"
  },
  {
    "text": "of the blank squares,\nyou can fill in one half. So you have like\nfour different halves",
    "start": "4330720",
    "end": "4336540"
  },
  {
    "text": "of the square you can choose. There they are-- this one, this\none, this one, and this one. And you can fill it in\nhalf black, half white.",
    "start": "4336540",
    "end": "4343730"
  },
  {
    "text": "So you cut along a\ndiagonal, and then you choose one of the two\nhalves to fill in black. You don't have to.",
    "start": "4343730",
    "end": "4349455"
  },
  {
    "text": "You could just leave it white. And when you have\na numbered square,",
    "start": "4349455",
    "end": "4355020"
  },
  {
    "text": "then the number of filled things\nmust be exactly that number. So here, there's one adjacent\nto it, and nothing down here.",
    "start": "4355020",
    "end": "4362150"
  },
  {
    "text": "This guy has exactly two\nhalf-filled squares next to it. This one has exactly one.",
    "start": "4362150",
    "end": "4367380"
  },
  {
    "text": "This one has exactly\nzero half-filled squares. Think of blank squares as zeros\nand these as counting as one.",
    "start": "4367380",
    "end": "4376530"
  },
  {
    "text": "Plus, the goal is that the\nregions you make-- this would all be easy\nso far, I think.",
    "start": "4376530",
    "end": "4382296"
  },
  {
    "text": "But the extra constraint is\nthat all the regions you make must be rectangles. OK?",
    "start": "4382296",
    "end": "4387720"
  },
  {
    "text": "This is a 45-degree-rotated\nrectangle. This is a regular rectangle. So you can use either one.",
    "start": "4387720",
    "end": "4393730"
  },
  {
    "text": "So it's a funny constraint. It's actually quite\na fun game to play. You're not allowed to\nfill in a square 100%.",
    "start": "4393730",
    "end": "4399970"
  },
  {
    "text": "That one was already filled. That's the rules. Here's a reduction\nfrom planar 3SAT.",
    "start": "4399970",
    "end": "4406840"
  },
  {
    "text": "Pretty simple. Looks a lot like\nMinesweeper, in some sense, a little bit thickened.",
    "start": "4406840",
    "end": "4412640"
  },
  {
    "text": "But this is a\nwire, because the 1 says that one of the two\nsides is half-filled.",
    "start": "4412640",
    "end": "4418610"
  },
  {
    "text": "Once that's half-filled, you\nhave to make this a rectangle. You can't just leave\nit as a pentagon. So you've got to fill that\nin to a rotated square.",
    "start": "4418610",
    "end": "4425829"
  },
  {
    "text": "But because of the 1, this\nmust be an empty square. So it alternates. You can do this or this.",
    "start": "4425830",
    "end": "4431130"
  },
  {
    "text": "OK. You can easily split just\nby connecting those things in the obvious way. You can do 90-degree turns.",
    "start": "4431130",
    "end": "4437210"
  },
  {
    "text": "No problem.  Here's a slightly more\nsophisticated-- slightly more",
    "start": "4437210",
    "end": "4444790"
  },
  {
    "text": "sophisticated gadget. You can think of\nthis as a terminator. It would be hard to just\nstop this somewhere.",
    "start": "4444790",
    "end": "4452072"
  },
  {
    "text": "Well, maybe you could\njust go all black. I think that's OK as well.",
    "start": "4452072",
    "end": "4457560"
  },
  {
    "text": "This could also be a terminator. You can also think\nof this as a negator.",
    "start": "4457560",
    "end": "4463510"
  },
  {
    "text": "Of course, also, the\nsplitter's like a negator. This guide's just\nprobably not so necessary.",
    "start": "4463510",
    "end": "4468770"
  },
  {
    "text": "Let's get to Clause. So Clause is bringing\nthree things together",
    "start": "4468770",
    "end": "4473889"
  },
  {
    "text": "with one of these blocks. But we do it in a funny way. There's no 1's here or here. So we end up with\nthis L blank shape.",
    "start": "4473890",
    "end": "4479960"
  },
  {
    "text": "Everything else is\nnow drawn as black. That's just obstacles. So this is not\nhappy the way it is.",
    "start": "4479960",
    "end": "4486050"
  },
  {
    "text": "There's lots of\nways to resolve it. The one case where\nwe can't resolve it is when all of these wires\nare 0's, because there's",
    "start": "4486050",
    "end": "4497360"
  },
  {
    "text": "already stuff here, and\nstuff here, and stuff here, so we can't put anything here. Can't put anything\nhere, or here, or here,",
    "start": "4497360",
    "end": "4503360"
  },
  {
    "text": "because of those 1's. Then you're forced to have\nthe L shape, and you're toast. In every other case,\nwe can decompose",
    "start": "4503360",
    "end": "4510429"
  },
  {
    "text": "into sometimes a big rectangle,\nsometimes little squares, sometimes rotated squares. But that's OK.",
    "start": "4510430",
    "end": "4515810"
  },
  {
    "text": "So this is a\nregular 3SAT clause. The one thing that's\nmissing at this point",
    "start": "4515810",
    "end": "4522680"
  },
  {
    "text": "is a parity shift gadget,\nbecause a lot of these gadgets have very specific lengths,\nmodular 3 or whatever.",
    "start": "4522680",
    "end": "4530880"
  },
  {
    "text": "So it turns out this is a\nway to shift things slightly. It can be filled in two ways.",
    "start": "4530880",
    "end": "4537750"
  },
  {
    "text": "You can fill in all of\nthese guys like that and make this giant\nrotated square.",
    "start": "4537750",
    "end": "4544880"
  },
  {
    "text": "Or if these are not allowed\nbecause these are here, then you can do\nthis weird filling.",
    "start": "4544880",
    "end": "4550512"
  },
  {
    "text": "You end up with a rectangle\nthere, and two rotated squares, another rectangle.",
    "start": "4550512",
    "end": "4555659"
  },
  {
    "text": "And you count the total length. This is length 4, whereas most\nof the things are length 2?",
    "start": "4555659",
    "end": "4562387"
  },
  {
    "text": "AUDIENCE: 3 [INAUDIBLE]. PROFESSOR: 3. OK. So that makes me happy.",
    "start": "4562387",
    "end": "4568032"
  },
  {
    "text": "Shift the parity. And that is Shakashaka. Here's an overall\npicture where we actually",
    "start": "4568032",
    "end": "4573690"
  },
  {
    "text": "plugged some gadgets together. That was fun. ",
    "start": "4573690",
    "end": "4579370"
  },
  {
    "text": "So I think I have one\nmore proof to just sketch.",
    "start": "4579370",
    "end": "4586450"
  },
  {
    "text": "So this is a problem of\nso-called fixed-angle chains. So you have this\nforced 90-degree angle.",
    "start": "4586450",
    "end": "4592320"
  },
  {
    "text": "We had a similar thing\nwith the Hamiltonian path with cubes and\nelastics between them. You could twist one\nedge around the other,",
    "start": "4592320",
    "end": "4600380"
  },
  {
    "text": "one block around the other, but\nyou couldn't adjust this angle. OK? So the problem is I give\nyou such a chain, which",
    "start": "4600380",
    "end": "4606492"
  },
  {
    "text": "is specified by lengths\nand then 90-degree angles. So it can be-- you don't know\nwhether the 90-degree angle goes up or down.",
    "start": "4606492",
    "end": "4612869"
  },
  {
    "text": "And you want to just put it into\nthe plane without crossings. And this is an old\nproof from 2000.",
    "start": "4612870",
    "end": "4619030"
  },
  {
    "text": "The problem is weakly NP-hard. It's basically a\npartition proof, so it is a partition proof.",
    "start": "4619030",
    "end": "4624489"
  },
  {
    "text": "You get to choose, for\neach of these things, whether it goes left or right. And you need to line\nup this with that.",
    "start": "4624490",
    "end": "4630260"
  },
  {
    "text": "Otherwise you get collisions. You would just need to argue. This outer structure has a\nunique embedding, roughly.",
    "start": "4630260",
    "end": "4636260"
  },
  {
    "text": "Unique enough. It always looks like that. So we proved a few years ago\nthat it is strongly NP-hard.",
    "start": "4636260",
    "end": "4644179"
  },
  {
    "text": "And I will just\nsketch the proof, because it's fun and cool. So here's the rough idea.",
    "start": "4644180",
    "end": "4650060"
  },
  {
    "text": "Imagine this is like\na piece of wire. And you can flip it up or down.",
    "start": "4650060",
    "end": "4655610"
  },
  {
    "text": "All the angles stay 90 degrees. These are the down-case. Here are some example up-cases. One of them's going to\nrepresent false, the other true.",
    "start": "4655610",
    "end": "4662740"
  },
  {
    "text": "Question? AUDIENCE: What's the difference\nbetween this and the Carpenter Ruler problem? PROFESSOR: Which Carpenter?",
    "start": "4662740",
    "end": "4667810"
  },
  {
    "text": "AUDIENCE: Like you have\nto fold the ruler to fit. PROFESSOR: Oh, to fit\ninside a given length. ",
    "start": "4667810",
    "end": "4674954"
  },
  {
    "text": "Well, the goal is different. Here, the goal is to draw it\nin the plane without crossings. Before, the goal was to draw it\nin the plane with minimum span.",
    "start": "4674954",
    "end": "4683600"
  },
  {
    "text": " To fit inside box. Yeah. I mean, this proof is\npretty much the same.",
    "start": "4683600",
    "end": "4689790"
  },
  {
    "text": "This proof will be\ntotally different. That problem was also\nonly weakly hard. There was a pseudo\npoly-algorithm.",
    "start": "4689790",
    "end": "4695060"
  },
  {
    "text": "This problem is\nstrongly NP-hard. There is no pseudo\npoly-algorithm unless P equals np. So just a slightly\ndifferent goal.",
    "start": "4695060",
    "end": "4701314"
  },
  {
    "text": "That one was more\none-dimensional. This is going to be much\nmore two-dimensional That's the other difference. OK.",
    "start": "4701314",
    "end": "4706360"
  },
  {
    "text": "So this is our some\nkind of variable gadget. This is the variables gadget.",
    "start": "4706360",
    "end": "4712645"
  },
  {
    "text": "All n variables are\nrepresented here. This represents one variable. At this point, I only have\none copy of each variable,",
    "start": "4712645",
    "end": "4718230"
  },
  {
    "text": "because there's no\nconstraint between these. Each of them can\nindependently flip up or down. Next, we have a clause.",
    "start": "4718230",
    "end": "4724120"
  },
  {
    "text": "This is where things get fun. So there's some infrastructure,\nbut the main action is here.",
    "start": "4724120",
    "end": "4731239"
  },
  {
    "text": "Each of these is\nsort of independently pop in or outable. It's like some kind\nof pleated form.",
    "start": "4731240",
    "end": "4737810"
  },
  {
    "text": "It can either pleat back and\nforth, like it's doing here, where it pleats in and\nout and out and in. And that gets this\nto this position.",
    "start": "4737810",
    "end": "4746119"
  },
  {
    "text": "With a slightly\ndifferent pleating, it ends up in this position. Or a slightly\ndifferent pleating, where they're all out, you\nend up in this position.",
    "start": "4746120",
    "end": "4753700"
  },
  {
    "text": "And notice this structure. So I'll go through it again.",
    "start": "4753700",
    "end": "4758930"
  },
  {
    "text": "Here's the left one. And then the middle one.",
    "start": "4758930",
    "end": "4764409"
  },
  {
    "text": "And then the last one. What ends up happening is\nthat these pegs, in order",
    "start": "4764410",
    "end": "4769510"
  },
  {
    "text": "to avoid hitting that peg, I\noccupy either P1 or P2 or P3.",
    "start": "4769510",
    "end": "4776699"
  },
  {
    "text": "So I'll go through\nit one more time. Here it's hitting P1,\nbecause this basically pushes this thing down.",
    "start": "4776700",
    "end": "4783575"
  },
  {
    "text": "Whereas the other\nones can be up-- this is up and up and up and up. Or if we shift it\ninto the middle,",
    "start": "4783576",
    "end": "4790390"
  },
  {
    "text": "then this one has to be down. But this guy can be up\nand avoid P1 but hit P2.",
    "start": "4790390",
    "end": "4796040"
  },
  {
    "text": "Or this one's down, these\nare up, and we hit P3. We want to avoid\ncollisions, so we",
    "start": "4796040",
    "end": "4802739"
  },
  {
    "text": "have to collide with\nexactly one of these things, or at least one\nof them, I guess.",
    "start": "4802740",
    "end": "4808790"
  },
  {
    "text": "So that's the sort of picture. This is a bunch\nof those clauses.",
    "start": "4808790",
    "end": "4814710"
  },
  {
    "text": "There's one here, there's one\nhere, and there's one here.",
    "start": "4814710",
    "end": "4821427"
  },
  {
    "text": "Look familiar? This is planar monotone\nrectilinear 3SAT, I think.",
    "start": "4821427",
    "end": "4828079"
  },
  {
    "text": " So far so good,\nexcept this chain is separate from\nthis one, so we're",
    "start": "4828080",
    "end": "4834380"
  },
  {
    "text": "going to connect them together.  Is a little more, I think.",
    "start": "4834380",
    "end": "4839550"
  },
  {
    "text": "Yeah. Connect them together. So now it is one big chain. What I ended up doing,\nthere's still this big thing",
    "start": "4839550",
    "end": "4846340"
  },
  {
    "text": "to represent the\nentire variable. But I basically made a\nwhole bunch of copies of it, so that I could\nattach things here.",
    "start": "4846340",
    "end": "4854070"
  },
  {
    "text": "But for example, when this\nis up, all of these guys have to simultaneously be up. So it forces all the\ncopies of the variable",
    "start": "4854070",
    "end": "4861980"
  },
  {
    "text": "here to be one way or the other. This is one variable,\nthis is another variable, this is another variable,\nand this is another variable,",
    "start": "4861980",
    "end": "4867960"
  },
  {
    "text": "just like before. So same thing, but now I can\nconnect them all together. Up here, these are all the\nnegative, I think, clauses.",
    "start": "4867960",
    "end": "4876829"
  },
  {
    "text": "Doesn't matter. And then down here, you put\nall the positive clauses. And that's the proof. Question. AUDIENCE: --all those\nthree dots in a row?",
    "start": "4876830",
    "end": "4883263"
  },
  {
    "text": "Like, it seems to me that if\nyou have two dots [INAUDIBLE] straight line, they might as\nwell just merge into one dot.",
    "start": "4883263",
    "end": "4888940"
  },
  {
    "text": "PROFESSOR: I think the\nidea is, yeah, this could be a single line. We subdivide it just to point\nout that you can attach things",
    "start": "4888940",
    "end": "4894970"
  },
  {
    "text": "to it. Yeah. There's extra dots, but just\nfor consistency's sake, I guess.",
    "start": "4894970",
    "end": "4901260"
  },
  {
    "text": "So now everywhere here, you\ncan attach one of the clauses. And that way, they\nall kind of hold",
    "start": "4901260",
    "end": "4906700"
  },
  {
    "text": "to the same infrastructure. Yeah. Clear?",
    "start": "4906700",
    "end": "4911830"
  },
  {
    "text": "[LAUGHS] So obviously, you get\npretty complicated pictures in the end. But this is a proof\nthat clearly benefited",
    "start": "4911830",
    "end": "4917980"
  },
  {
    "text": "from the rectilinear aspect\nand the monotone aspect that all the true thing-- we\ncould not get some true above",
    "start": "4917980",
    "end": "4924920"
  },
  {
    "text": "and some true below. They all wanted to\ngo the same way. And the rectilinear\nwas nice, so we could draw this all\non a horizontal line",
    "start": "4924920",
    "end": "4931570"
  },
  {
    "text": "and only have to worry\nabout vertical connections between the top and the bottom. So that gets to\nyour question about, why do we need rectilinear?",
    "start": "4931570",
    "end": "4939570"
  },
  {
    "text": "But there you go. So that was just a few\nexamples of planar 3SAT.",
    "start": "4939570",
    "end": "4945310"
  },
  {
    "text": "But in general, the idea\nis that a lot of 3SAT-- or many 3SAT proofs\nget easier when you use",
    "start": "4945310",
    "end": "4951320"
  },
  {
    "text": "the appropriate planar version. You just have to be careful\nof ones that are not hard. As long as you\navoid that and you",
    "start": "4951320",
    "end": "4958130"
  },
  {
    "text": "have the right sort\nof graph setup, you don't have to add\ntoo many extra edges. Then you'll have\nplanarity and not",
    "start": "4958130",
    "end": "4964110"
  },
  {
    "text": "have to worry about crossovers. And crossover, it\nwouldn't have a clue how to do a crossover\nin a problem like this.",
    "start": "4964110",
    "end": "4970839"
  },
  {
    "text": "And other times, it just makes\nyour life a little bit easier, because you skip one gadget. But that is planar 3SAT.",
    "start": "4970839",
    "end": "4978130"
  },
  {
    "start": "4978130",
    "end": "4982885"
  }
]