[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13350"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at NCAA ocw.mit.edu.",
    "start": "13350",
    "end": "20579"
  },
  {
    "start": "20579",
    "end": "26648"
  },
  {
    "text": "GEORGE VERGHESE: I\nwanted to give you an overview of what the system\nis that we're talking about, the communication network.",
    "start": "26648",
    "end": "34490"
  },
  {
    "start": "29000",
    "end": "29000"
  },
  {
    "text": "We have a source that's trying\nto communicate to a receiver. We've talked about converting--",
    "start": "34490",
    "end": "41160"
  },
  {
    "text": "well, we'll talk\nsome more, actually-- about converting the source\ninformation to binary digits.",
    "start": "41160",
    "end": "48363"
  },
  {
    "text": "And then where we've\nspent a lot of time is talking about\nsource coding, which is trying to extract the\nredundancy in the message",
    "start": "48363",
    "end": "54920"
  },
  {
    "text": "that you want to send so that\nbasically every binary digit you then put on the channel\ncarries as much information as",
    "start": "54920",
    "end": "61940"
  },
  {
    "text": "possible. So now I'm going to really\nstop making a distinction between bits and binary digits.",
    "start": "61940",
    "end": "67010"
  },
  {
    "text": "I'll just say bits when I\nmight mean binary digits. But once you're\ninto the system here and you've done\nyour source coding,",
    "start": "67010",
    "end": "73580"
  },
  {
    "text": "a binary digit carries\na bit of information, in general, if you've\ndone a good job of extracting the redundancy.",
    "start": "73580",
    "end": "79472"
  },
  {
    "text": "So we're talking\nabout a bit stream here that you're trying to\nget across to the other end. At the other end, the\nbitstream is received.",
    "start": "79472",
    "end": "86539"
  },
  {
    "text": "There's the decoding\nstep, which is what we've seen with Huffman\nor LZW, the decoding end.",
    "start": "86540",
    "end": "92450"
  },
  {
    "text": "And then you do\nwhatever it is you're going to do in the application. So we've really\nsaid all we're going",
    "start": "92450",
    "end": "99110"
  },
  {
    "text": "to say about the source\ncoding and decoding, and the rest of what we're going\nto do is focus on what happens",
    "start": "99110",
    "end": "105770"
  },
  {
    "text": "inside here.  Now what happens inside\nthere at some stage",
    "start": "105770",
    "end": "113799"
  },
  {
    "start": "111000",
    "end": "111000"
  },
  {
    "text": "involves a physical\ncommunication link. So you might be talking\nbitstreams at either end,",
    "start": "113800",
    "end": "120937"
  },
  {
    "text": "but somehow you've got\nto deal with the fact that most of these\nchannels, most of the channels of interest,\nthey're physical channels,",
    "start": "120937",
    "end": "127300"
  },
  {
    "text": "they work with continuous\nvalued, continuous time quantities. For instance, the\nvoltage on a cable",
    "start": "127300",
    "end": "134230"
  },
  {
    "text": "might be used to\ntransmit information, light on the fiber,\nelectromagnetic waves through space, acoustic\nwaves in air or water--",
    "start": "134230",
    "end": "141990"
  },
  {
    "text": "in fact acoustic waves\nin air is something you see a lot of when you\ncome to the later labs--",
    "start": "141990",
    "end": "147010"
  },
  {
    "text": "indentations on\nvinyl or plastic. Let's see, that's\nrecords or CD's.",
    "start": "147010",
    "end": "155380"
  },
  {
    "text": "And that actually\nbrings up a point. We don't often think of\nstorage as being communication, but storage is\nreally communication",
    "start": "155380",
    "end": "162280"
  },
  {
    "text": "with potentially a very long\ntime delay in the channel. You put something on\nthe storage medium,",
    "start": "162280",
    "end": "167980"
  },
  {
    "text": "and then weeks or months or\nyears or centuries later, you're trying to extract\nthat information.",
    "start": "167980",
    "end": "173410"
  },
  {
    "text": "So we can still think of all\nof this as a communication channel, and indeed,\ndecoding ideas",
    "start": "173410",
    "end": "179320"
  },
  {
    "text": "are essential to making\nCDS work, to having a CD resistant to scratches\nand thumbprints, and everything",
    "start": "179320",
    "end": "186520"
  },
  {
    "text": "else that, all the\nother indignities that they're subject to-- magnetization. So all of these\nphysical modalities",
    "start": "186520",
    "end": "193810"
  },
  {
    "text": "that are used to\ntranslate information. Here's one you may not\nhave thought about,",
    "start": "193810",
    "end": "200120"
  },
  {
    "start": "199000",
    "end": "199000"
  },
  {
    "text": "mud pulse telemetry. So when you're\ndrilling for oil, you'd",
    "start": "200120",
    "end": "207739"
  },
  {
    "text": "like to get information from\nthe drill bit at the bottom. And normal electronics\ndoesn't work",
    "start": "207740",
    "end": "213590"
  },
  {
    "text": "too well, because the\ntemperatures are fiercely hot down there. You need that information to\nhelp you steer the drill bit,",
    "start": "213590",
    "end": "219890"
  },
  {
    "text": "to get information about\nwhat sort of rock you're going through, and all of that. So they actually seriously\ndo use pressure pulses",
    "start": "219890",
    "end": "228110"
  },
  {
    "text": "and in the slurry that's cooling\nthe drill bit to try and convey information back to the top.",
    "start": "228110",
    "end": "234180"
  },
  {
    "text": "So they'll modulate\nthe pressure down at the end of the drill\nbit, and hope that you",
    "start": "234180",
    "end": "239750"
  },
  {
    "text": "can detect it at the top. One word over there\nthat stands out",
    "start": "239750",
    "end": "245360"
  },
  {
    "text": "is they talk about\ndigital information. So even in the context of\ncommunicating through mud,",
    "start": "245360",
    "end": "251330"
  },
  {
    "text": "they're thinking\nabout how to actually have bits that they communicate\non this analog channel. So this is very\nmuch in the flavor",
    "start": "251330",
    "end": "257690"
  },
  {
    "text": "of what we're trying to do. We're trying to communicate\ndigital information, this is sequences of numbers or\nsequences of signs or symbols,",
    "start": "257690",
    "end": "265760"
  },
  {
    "text": "but we're trying to do it\nover a physical channel that takes continuous valued,\ncontinuous time, waveforms.",
    "start": "265760",
    "end": "272270"
  },
  {
    "text": "So that's really some of\nwhat we'll be talking about. So the kind of link that we\nhave starts off with bits.",
    "start": "272270",
    "end": "284020"
  },
  {
    "start": "276000",
    "end": "276000"
  },
  {
    "text": "But in the middle, has to\ndeal with the physical link on which you have signals. We'll refer to these\ncontinuous time waveforms.",
    "start": "284020",
    "end": "290542"
  },
  {
    "text": "They're not always\ncontinuous time. You could sample them and\nget discrete time waveforms, as well. But the signals that you\nsee in the physical medium",
    "start": "290542",
    "end": "297310"
  },
  {
    "text": "will refer to-- the quantities you see\nin the physical medium will refer to as signals. You need some way to map\nthe bits to the signals.",
    "start": "297310",
    "end": "304492"
  },
  {
    "text": "You've got a bit\nsequence, you need to convert it to a continuous\ntime waveform in some fashion. And then at the other end,\nto recover the bitstream.",
    "start": "304492",
    "end": "312470"
  },
  {
    "text": "And you might do that by\nsome sampling and processing, and then a translation\nprocess back.",
    "start": "312470",
    "end": "320812"
  },
  {
    "text": "The little lightning\nthere is meant to suggest that you're\nsubject to all sorts of noise and disturbances when you're\non that physical link.",
    "start": "320812",
    "end": "327290"
  },
  {
    "text": "So that's something that's\ncritical to the design of the system. You have to design\nyour overall system",
    "start": "327290",
    "end": "332480"
  },
  {
    "text": "so that your robust to\nperturbations in that middle",
    "start": "332480",
    "end": "337660"
  },
  {
    "text": "section. So the particular application\nis dealing with your specifics",
    "start": "337660",
    "end": "346449"
  },
  {
    "text": "and with producing\na bitstream that's got the redundancy\nmapped out of it.",
    "start": "346450",
    "end": "352060"
  },
  {
    "text": "At this point, it\ndoesn't matter to me for communication across the\nchannel what that bitstream is",
    "start": "352060",
    "end": "357980"
  },
  {
    "text": "or where it came from. I'm just trying to do a\ngood job of delivering it to the other end where\nthe user can extract that.",
    "start": "357980",
    "end": "365889"
  },
  {
    "text": "Now here's the funny thing. We've just done a lot of\nwork to extract redundancy",
    "start": "365890",
    "end": "371740"
  },
  {
    "text": "from the messages here. We're going to put\nredundancy back in.",
    "start": "371740",
    "end": "376990"
  },
  {
    "text": "Because the way you guard\nagainst disturbances in the channel is by\nintroducing redundancy.",
    "start": "376990",
    "end": "382970"
  },
  {
    "text": "You need to give\nyourself a little room to recognize that something bad\nhas happened to your signal,",
    "start": "382970",
    "end": "389233"
  },
  {
    "text": "or something bad has happened to\nthe data you're sending across, and then to recover from it. So we will actually\nbe talking about how",
    "start": "389233",
    "end": "395289"
  },
  {
    "text": "to reintroduce redundancy,\nbut this is introducing it now in a bitstream where the binary\ndigits are essentially equally",
    "start": "395290",
    "end": "402190"
  },
  {
    "text": "likely. You pulled out all the\napplication-specific knowledge, and used it to do\nthe source coding.",
    "start": "402190",
    "end": "408820"
  },
  {
    "text": "Now you've just got a\nstream of zeros and ones, each one carrying a bit of\ninformation, presumably.",
    "start": "408820",
    "end": "415180"
  },
  {
    "text": "And now you want to\nprotect it for transport across the channel, and\nyou're going to do that by putting in additional bits.",
    "start": "415180",
    "end": "421629"
  },
  {
    "text": "So you're going to introduce\nbits in a structured way to provide some redundancy. So we'll be talking about\nthat in more detail.",
    "start": "421630",
    "end": "429919"
  },
  {
    "text": "So this is the\nsingle link picture. When you've got a network,\nit's a little different.",
    "start": "429920",
    "end": "437310"
  },
  {
    "start": "434000",
    "end": "434000"
  },
  {
    "text": "So I haven't shown all\nthe other links here, but you should imagine a\nnetwork with many possible paths",
    "start": "437310",
    "end": "443840"
  },
  {
    "text": "from a source to a destination. Some of these links\nmight come down, and so you'll want to\nfind an alternative path.",
    "start": "443840",
    "end": "450403"
  },
  {
    "text": "Some of these links\nmight be busy, and you want to find\nan alternative path. So there's a whole\nnetwork of links in here.",
    "start": "450403",
    "end": "456880"
  },
  {
    "text": "In this setting, it turns out\nthat the good way to do this is to break up your bitstream\ninto what are called packets.",
    "start": "456880",
    "end": "465790"
  },
  {
    "text": "These are maybe 1,000\nbits or 4,000 bits,",
    "start": "465790",
    "end": "470950"
  },
  {
    "text": "or whatever your protocol is. They're broken up into\npackets of chunks of bits,",
    "start": "470950",
    "end": "478840"
  },
  {
    "text": "and then treated as packets for\ntransport along the network. So the point is that one\npacket to a given user",
    "start": "478840",
    "end": "484833"
  },
  {
    "text": "might travel one\nparticular route, but another packet might\ntravel another route. And then these get reassembled\nat the destination.",
    "start": "484833",
    "end": "492080"
  },
  {
    "text": "So you think in\nterms of packets when you think in terms of\nrooting on the network. This idea of packet\ncommunication, by the way,",
    "start": "492080",
    "end": "499130"
  },
  {
    "text": "there's a name\nassociated with that, which is Kleinrock, again,\na PhD student at MIT in the same golden years that\nI keep referring back to.",
    "start": "499130",
    "end": "508270"
  },
  {
    "text": "But it's a very broad area. So you've got the packets. Those arrive at the links.",
    "start": "508270",
    "end": "516610"
  },
  {
    "text": "They're actually\nswitches here that decide which of the links\nemanating from the switches you want to send the packet on.",
    "start": "516610",
    "end": "522070"
  },
  {
    "text": "So, again, imagine\nall the links. I haven't drawn them in. So the packet gets treated as a\nunit for shipping on the links.",
    "start": "522070",
    "end": "529389"
  },
  {
    "text": "But once you've committed\nto a particular link, it's like transmitting\non a single link, again.",
    "start": "529390",
    "end": "535899"
  },
  {
    "text": "So you've got to go\nthrough your packets to bits to signal to bits\nto packets transformation.",
    "start": "535900",
    "end": "546060"
  },
  {
    "text": "So it's not that there's a\nparticular transformation in going from packets\nto bits, you're just viewing it differently. You're not treating\nit as a packet,",
    "start": "546060",
    "end": "554320"
  },
  {
    "text": "you're looking in on each bit. You're looking to code each\nbit on an analog signal, get it across the\nphysical medium.",
    "start": "554320",
    "end": "560490"
  },
  {
    "text": " So that's really\nthe key to this.",
    "start": "560490",
    "end": "565730"
  },
  {
    "text": "What we end up doing\nis coding, or mapping, or the word modulating is used,\nand we'll see more of that.",
    "start": "565730",
    "end": "572149"
  },
  {
    "text": "We modulate the desired\nsequence onto a continuous time waveform. So what you might imagine\nis, you could have a sequence",
    "start": "572150",
    "end": "583100"
  },
  {
    "text": "01101, and what you're going\nto do with your mapping is try and generate a\ncontinuous time waveform,",
    "start": "583100",
    "end": "590180"
  },
  {
    "text": "which in some fashion\ncodes that sequence. And it could be very simple. It could be a\nvoltage level of 0,",
    "start": "590180",
    "end": "597230"
  },
  {
    "text": "held for some interval of\ntime to represent the 1-- sorry, to represent the\n0, held for some time",
    "start": "597230",
    "end": "605509"
  },
  {
    "text": "again to represent the second\nsymbol, which is, again, a 1.",
    "start": "605510",
    "end": "612140"
  },
  {
    "text": "And then you come back\ndown to 0, back to 1 again. So it could be as\nsimple as this.",
    "start": "612140",
    "end": "617569"
  },
  {
    "text": " OK, so this is now-- you can think of\nit as some voltage.",
    "start": "617570",
    "end": "625240"
  },
  {
    "text": "We use the word voltage\na lot, but we just mean an analog signal. We'll use the word\nvoltage, we're thinking of voltage\non a cable, but it",
    "start": "625240",
    "end": "631053"
  },
  {
    "text": "could be any analog signal. So this is really the\ndigital signaling end of it.",
    "start": "631053",
    "end": "636940"
  },
  {
    "text": "So you take the bit\nsequence represented now on, coded onto a continuous\ntime waveform,",
    "start": "636940",
    "end": "643029"
  },
  {
    "text": "or modulated onto a\ncontinuous time waveform. We'll see richer uses of\nthat word as we progress.",
    "start": "643030",
    "end": "650530"
  },
  {
    "text": "The particular scheme\nI've shown here is what you'd call a bi-level\nsignaling scheme, the two",
    "start": "650530",
    "end": "655750"
  },
  {
    "text": "voltage levels that you use. We refer to that also\nas bipolar signaling,",
    "start": "655750",
    "end": "661180"
  },
  {
    "text": "although sometimes\nthat's restricted to the case where the two\nvoltage levels are opposite",
    "start": "661180",
    "end": "666880"
  },
  {
    "text": "in sign. So you can imagine a\nsignaling scheme that uses this for 0, this for 1.",
    "start": "666880",
    "end": "672970"
  },
  {
    "text": " So this could be\na bipolar scheme.",
    "start": "672970",
    "end": "677990"
  },
  {
    "start": "677990",
    "end": "683130"
  },
  {
    "text": "And then this\ncontinuous time waveform gets put on the physical\nchannel, presumably gets distorted, it gets\nsome noise added to it.",
    "start": "683130",
    "end": "692590"
  },
  {
    "text": "So at the other end, you get\nsome approximation to this. And then you've got to\nreconstruct the bit sequence.",
    "start": "692590",
    "end": "698190"
  },
  {
    "text": "You might do that by\nsampling this and processing the samples, and then taking\nsome measure of the waveform.",
    "start": "698190",
    "end": "704490"
  },
  {
    "text": "We'll see more of that later,\nyou'll do that in lab 2, in labs, as well.",
    "start": "704490",
    "end": "710680"
  },
  {
    "text": "So in some fashion,\nyou recover from this your estimate of\nthe bit sequence. But you can imagine, the\namount of waveform like this",
    "start": "710680",
    "end": "717210"
  },
  {
    "text": "goes through a physical\nchannel with distortion, noise, and then re-sampling\nand processing and so on, you are\nlikely to get errors back",
    "start": "717210",
    "end": "725370"
  },
  {
    "text": "at the receiving end. Ideally, you would get exactly\nthis waveform at the receiving",
    "start": "725370",
    "end": "730920"
  },
  {
    "text": "end, you'd have no\ntrouble distinguishing between the samples\nof the two levels, and you could reconstruct\nthe bit sequence.",
    "start": "730920",
    "end": "736904"
  },
  {
    "start": "736905",
    "end": "745190"
  },
  {
    "start": "742000",
    "end": "742000"
  },
  {
    "text": "Now we are going to, in the\nmiddle section of this course, say a lot more about the\nsignals aspect of it.",
    "start": "745190",
    "end": "752040"
  },
  {
    "text": "But for us now, it's\nactually helpful to stick to thinking in terms of bits. ",
    "start": "752040",
    "end": "765030"
  },
  {
    "text": "So we've got bits in, bits out. Somewhere in here,\nwe've got signals",
    "start": "765030",
    "end": "770510"
  },
  {
    "text": "in the physical\nchannel, signals, noise,",
    "start": "770510",
    "end": "775760"
  },
  {
    "text": "physical channel. ",
    "start": "775760",
    "end": "781540"
  },
  {
    "text": "And then we've\ngot whatever it is that does the transformation\nfrom bits to--",
    "start": "781540",
    "end": "787389"
  },
  {
    "text": "so this is some kind\nof a transformer, let's say, from bits to signals\nand from signals to bits.",
    "start": "787390",
    "end": "792460"
  },
  {
    "text": " But let's look at an abstraction\nthat's end to end here,",
    "start": "792460",
    "end": "798810"
  },
  {
    "text": "bits to bits. OK what's coming in as\na bitstream, what you're receiving is a bitstream.",
    "start": "798810",
    "end": "806600"
  },
  {
    "text": "There's an idealization of\nthis channel that's used a lot, and that's referred to as\nthe binary symmetric channel.",
    "start": "806600",
    "end": "812510"
  },
  {
    "text": "And what that says is,\nyou got a 1 coming in,",
    "start": "812510",
    "end": "817530"
  },
  {
    "text": "that's most likely going\nto be received as 1, but there's some chance it's\ngoing to be received as a 0.",
    "start": "817530",
    "end": "825600"
  },
  {
    "text": "And let's put\nprobabilities here. I think the notes use epsilon. I seem to have used p,\nlittle p, on my slide,",
    "start": "825600",
    "end": "833943"
  },
  {
    "text": "so let me stick to little p.  So a 1 coming in is\ntransformed in error",
    "start": "833943",
    "end": "843810"
  },
  {
    "text": "to a 0 with some\nsmall probability, presumably small, with\n1 minus p it's intact,",
    "start": "843810",
    "end": "849060"
  },
  {
    "text": "and then the same\nthing on the side. A 0 comes in with some\nprobability, comes out as a 0,",
    "start": "849060",
    "end": "858030"
  },
  {
    "text": "but with some probability it\nactually gets flipped to 1.",
    "start": "858030",
    "end": "864190"
  },
  {
    "text": "Now, we use the\nword symmetric here to say that we're assuming\nidentical probabilities of going 1 to 0, 0 to 1.",
    "start": "864190",
    "end": "870640"
  },
  {
    "text": "You can easily imagine\nan unsymmetrical channel where you have different\nprobabilities in the two directions, but we'll stick\nto the symmetric case.",
    "start": "870640",
    "end": "877900"
  },
  {
    "text": "Binary, of course, because we're\ndealing with binary sequences of the two ends.",
    "start": "877900",
    "end": "884020"
  },
  {
    "text": "And what we're imagining is that\nthis is a memory-less channel. In other words, I can\nlook at this transmission by transmission.",
    "start": "884020",
    "end": "889699"
  },
  {
    "text": "So a bit comes in, this is\nhow the output is determined. And then the next bit comes\nin, and it knows nothing.",
    "start": "889700",
    "end": "895720"
  },
  {
    "text": "There's no memory\nin the system, it knows nothing\nabout what decision was made in the previous case. Now you can imagine more\ncomplicated channel models",
    "start": "895720",
    "end": "902170"
  },
  {
    "text": "with memory, but this is\na good starting point. So that's the binary\nsymmetric channel.",
    "start": "902170",
    "end": "907300"
  },
  {
    "start": "907300",
    "end": "913570"
  },
  {
    "text": "So question now, if we wanted to\nget a bitstream over reliably,",
    "start": "913570",
    "end": "921130"
  },
  {
    "text": "any ideas on how\nwe can counteract the effect of this p,\nprobability of flipping?",
    "start": "921130",
    "end": "927890"
  },
  {
    "text": "Yeah? AUDIENCE: You could have\nlike a range [INAUDIBLE]..",
    "start": "927890",
    "end": "934130"
  },
  {
    "text": "GEORGE VERGHESE:\nWell, at this point I'm back to the ones and zeros. There's no signals. The signals are in here.",
    "start": "934130",
    "end": "939990"
  },
  {
    "text": "So what you're\nthinking of maybe is, how do I reliably\nmap bits to signals? And what you're saying is, you\ncan design your signaling here",
    "start": "939990",
    "end": "948170"
  },
  {
    "text": "in a way that reduces the p. The p that I'm thinking\nof here is the end",
    "start": "948170",
    "end": "953450"
  },
  {
    "text": "to end error probability. If I designed the inner part\nbetter, I might lower the p.",
    "start": "953450",
    "end": "959360"
  },
  {
    "text": "But for a given p,\nis there something that I could be doing to\nimprove my chances of getting the bit across correctly?",
    "start": "959360",
    "end": "965510"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE] GEORGE VERGHESE: OK,\nso the suggestion",
    "start": "965510",
    "end": "971570"
  },
  {
    "text": "is that we introduce redundancy\nby just repeating it. So send the 1, repeat the 1.",
    "start": "971570",
    "end": "976820"
  },
  {
    "text": "Repeat it many times\nif you need to. And so what would you suggest\nthat the receiver should do if you do a\nrepetition like this?",
    "start": "976820",
    "end": "984750"
  },
  {
    "text": "How should the receiver decide? If I send five ones\nin a row-- yeah?",
    "start": "984750",
    "end": "990079"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] GEORGE VERGHESE: I'm\nsorry, say that again?",
    "start": "990080",
    "end": "995322"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] ",
    "start": "995322",
    "end": "1002405"
  },
  {
    "text": "GEORGE VERGHESE: You're\ntalked about requesting a-- I'm not hearing well what you-- AUDIENCE: [INAUDIBLE]",
    "start": "1002405",
    "end": "1009626"
  },
  {
    "start": "1009626",
    "end": "1015519"
  },
  {
    "text": "GEORGE VERGHESE: OK, so\nyou're using the word request. You're talking\nabout the receiver sending something\nback to the sender.",
    "start": "1015520",
    "end": "1022450"
  },
  {
    "text": "But if we're with this\nchannel and the sender has to make its own\ndecisions about how to get things across without\na possibility of feedback.",
    "start": "1022450",
    "end": "1030394"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] ",
    "start": "1030394",
    "end": "1038767"
  },
  {
    "text": "GEORGE VERGHESE: OK, so I\nthink I understand a bit now. So if you're repeating this,\nthe chance of more than half",
    "start": "1038768",
    "end": "1044709"
  },
  {
    "text": "of them being wrong\nis very small. I think that was the idea\nthat you had, as well. So repetition is likely\nto reduce the chances",
    "start": "1044710",
    "end": "1051897"
  },
  {
    "text": "that you go wrong here if\nyou use a majority rule. Majority rule would\nbe a simple rule.",
    "start": "1051897",
    "end": "1056990"
  },
  {
    "text": "Send five repetitions, and if\nonly two are flipped, well,",
    "start": "1056990",
    "end": "1063250"
  },
  {
    "text": "you just decide in\nfavor of the majority. Because it's more likely\nthat none or one or two are",
    "start": "1063250",
    "end": "1068320"
  },
  {
    "text": "flipped than that three or\nfour or five are flipped. So that's the idea. So this is what's called\na replication code,",
    "start": "1068320",
    "end": "1075850"
  },
  {
    "text": "and actually, it\ncan work very well. ",
    "start": "1075850",
    "end": "1081120"
  },
  {
    "start": "1078000",
    "end": "1078000"
  },
  {
    "text": "So what you see on\nthe horizontal axis is the replication factor.",
    "start": "1081120",
    "end": "1087020"
  },
  {
    "text": "You can replicate it 5\ntimes, 10 times, 15 times, and here is the\nprobability of error.",
    "start": "1087020",
    "end": "1092390"
  },
  {
    "text": "And it actually goes down. And you can do the computation. This is actually a fairly\nsimple computation,",
    "start": "1092390",
    "end": "1099380"
  },
  {
    "text": "you're basically\ndoing coin tosses and seeing what's the\nprobability that more than half of the coins I flip\ncome up one way.",
    "start": "1099380",
    "end": "1108180"
  },
  {
    "text": "And you're counting\nthat to decide how the majority rule works. I'm sorry, for the epsilon\nhere, it's supposed to be the p.",
    "start": "1108180",
    "end": "1116620"
  },
  {
    "text": "OK, so is this good? Good enough?",
    "start": "1116620",
    "end": "1122030"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE]",
    "start": "1122030",
    "end": "1127210"
  },
  {
    "text": " GEORGE VERGHESE:\nThe more you send,",
    "start": "1127210",
    "end": "1133630"
  },
  {
    "text": "the more you're wasting\ntime on that one bit. So this is the point, that\nyou can do the replication",
    "start": "1133630",
    "end": "1139960"
  },
  {
    "text": "and reduce your\nprobability of error, but what's the information\nyou're getting across? You're doing all of this to get\nthat one bit across reliably,",
    "start": "1139960",
    "end": "1147460"
  },
  {
    "text": "but you've got a lot\nof bits backing up, waiting to get across. So the code rate, the rate at\nwhich information gets across",
    "start": "1147460",
    "end": "1156280"
  },
  {
    "text": "is a 1 over n if you're\ndoing n replications. If you're doing n replications,\nit's only 1 over n.",
    "start": "1156280",
    "end": "1162380"
  },
  {
    "text": " The rate at which you're getting\ninformation across in terms",
    "start": "1162380",
    "end": "1168040"
  },
  {
    "text": "of bits is 1 over n. So you're dropping the\nprobability of error, but you're also dropping\nthe transmission rate.",
    "start": "1168040",
    "end": "1175230"
  },
  {
    "text": "So this is really unacceptable. It turns out, though, that\nwe can do a lot better.",
    "start": "1175230",
    "end": "1181029"
  },
  {
    "text": "We can do a lot better. What I'm going to do\nnow is say a little bit",
    "start": "1181030",
    "end": "1186850"
  },
  {
    "text": "about what Shannon\nhad to say about it. I hope you'll allow me to teach\nyou about something that we're",
    "start": "1186850",
    "end": "1193340"
  },
  {
    "text": "not going to test you\non just so you can learn a little bit about this, and\nthen I'll get back to stuff that we will test you on.",
    "start": "1193340",
    "end": "1198769"
  },
  {
    "text": "OK, is that all right? I know you didn't pay for\nthis, but we'll do it anyway.",
    "start": "1198770",
    "end": "1206490"
  },
  {
    "text": "So here's Shannon,\ndefining something that the thermodynamics\npeople and so on",
    "start": "1206490",
    "end": "1211800"
  },
  {
    "text": "didn't really think to do. They may have done\nit indirectly, but it didn't arise in\nwhere they were working",
    "start": "1211800",
    "end": "1216960"
  },
  {
    "text": "with entropy, and all of that. Shannon defined something\ncalled a mutual information,",
    "start": "1216960",
    "end": "1222360"
  },
  {
    "text": "given by this symbol. X and Y are random\nvariables, random quantities.",
    "start": "1222360",
    "end": "1228480"
  },
  {
    "text": "What we know about H of\nx is the entropy in X, so it's our uncertainty\nabout X. It's",
    "start": "1228480",
    "end": "1233940"
  },
  {
    "text": "the expected information when\nyou're told something about X.",
    "start": "1233940",
    "end": "1239129"
  },
  {
    "text": "This symbol denotes\nthe uncertainty in X, given information about Y.\nSo it's the conditional entropy",
    "start": "1239130",
    "end": "1246180"
  },
  {
    "text": "here. And so what this is\nasking is, how much is our uncertainty about X reduced\nby having information, having",
    "start": "1246180",
    "end": "1253578"
  },
  {
    "text": "a measurement of Y?  That's very relevant to a\nchannel where the input is X",
    "start": "1253578",
    "end": "1259970"
  },
  {
    "text": "and the output is\nY. We're saying, we see the output\nof the channel, we want to infer what\nhappened to the input, what",
    "start": "1259970",
    "end": "1266269"
  },
  {
    "text": "the input sent. The mutual information between\nthese two random variables surely has to be important.",
    "start": "1266270",
    "end": "1271560"
  },
  {
    "text": "So what's the reduction\nand uncertainty that results from having\na measurement of Y?",
    "start": "1271560",
    "end": "1277280"
  },
  {
    "text": "That's a question\nof interest not just in communications as\nsuch, but in all sorts",
    "start": "1277280",
    "end": "1282290"
  },
  {
    "text": "of inference questions. OK, I'm going to have\na slide of equations. They might look scary,\nbut actually they're",
    "start": "1282290",
    "end": "1288890"
  },
  {
    "start": "1287000",
    "end": "1287000"
  },
  {
    "text": "very simple, given what\nyou already know how to do. First, I have to\ndefine for you what I mean by conditional entropy.",
    "start": "1288890",
    "end": "1295770"
  },
  {
    "text": "So I'm saying it's the\nentropy of X conditioned on having a particular\nmeasurement of Y.",
    "start": "1295770",
    "end": "1301200"
  },
  {
    "text": "So suppose you know that Y takes\nthe value of little y sub j. You use the same formula\nthat we've used for entropy,",
    "start": "1301200",
    "end": "1308470"
  },
  {
    "text": "except your\nprobabilities are all now probabilities conditioned\non that information. So instead of just p of xi,\nyou have p of xi given yj.",
    "start": "1308470",
    "end": "1317580"
  },
  {
    "text": "So it's the same formula. But if you've been\ngiven information, then you have to\ncondition on it.",
    "start": "1317580",
    "end": "1323440"
  },
  {
    "text": "So that's the definition. This is the conditional entropy\ngiven a specific value for y.",
    "start": "1323440",
    "end": "1329840"
  },
  {
    "text": "But if all I tell you is\nI'm going to be giving you a value for Y and I haven't\ntold you the value yet,",
    "start": "1329840",
    "end": "1335320"
  },
  {
    "text": "what's the conditional entropy? Then what you want to do is\naverage over all possible Y's that you might get.",
    "start": "1335320",
    "end": "1340520"
  },
  {
    "text": "So you're going to take\nthis conditional entropy for the given Y, and then\ntake the weighted average of the probabilities.",
    "start": "1340520",
    "end": "1346673"
  },
  {
    "text": "So that's how you\ncompute this quantity, and it's quite straightforward. It's not very different\nfrom what you have. ",
    "start": "1346673",
    "end": "1354309"
  },
  {
    "text": "And then if you put in what\nyou know about how joint probabilities and conditional\nprobabilities worked--",
    "start": "1354310",
    "end": "1359600"
  },
  {
    "text": "this was the definition of\nconditional probability that we had in, I think,\nthe first lecture--",
    "start": "1359600",
    "end": "1365379"
  },
  {
    "text": "you discover that actually\nthe joint entropy of these two",
    "start": "1365380",
    "end": "1371260"
  },
  {
    "text": "random variables can be\nfactored in two particular ways. And that allows you to deduce\nthat the mutual information is",
    "start": "1371260",
    "end": "1377440"
  },
  {
    "text": "symmetric. In other words, the mutual\ninformation between X and Y is the same as the mutual\ninformation between Y an X.",
    "start": "1377440",
    "end": "1383740"
  },
  {
    "text": "So there's no\ndifference in that. That might be a\nlittle surprising given that we were thinking of\nX as the input to the channel",
    "start": "1383740",
    "end": "1390400"
  },
  {
    "text": "and Y is the output\nof the channel, but it turns out\nthat that's the case. ",
    "start": "1390400",
    "end": "1397363"
  },
  {
    "text": "So let's actually compute it\nfor the channel that we know. This is the binary\nsymmetric channel. Let's compute the\nmutual information",
    "start": "1397363",
    "end": "1405640"
  },
  {
    "text": "between the input and output for\nthe binary symmetric channel. So here is the definition IXY.",
    "start": "1405640",
    "end": "1412645"
  },
  {
    "text": "We've just shown that it doesn't\nmatter which order you take it in, and it turns out the\ncomputation is easier if you flip the order.",
    "start": "1412645",
    "end": "1418360"
  },
  {
    "text": "So I'm going to write\nthis as uncertainty in Y minus the uncertainty in\nY given the measurement of H--",
    "start": "1418360",
    "end": "1424540"
  },
  {
    "text": "of X, sorry. So I'm going to compute\nit in that fashion.",
    "start": "1424540",
    "end": "1431200"
  },
  {
    "text": "What's the uncertainty in Y? ",
    "start": "1431200",
    "end": "1445400"
  },
  {
    "text": "Actually, I should\nprobably have said here that, let's assume\nX takes 0 and 1--",
    "start": "1445400",
    "end": "1451460"
  },
  {
    "text": "I might be wrong\nin saying that this doesn't depend on the\ndistribution of the input. Let's assume 0 and 1 are\nequally likely at the input.",
    "start": "1451460",
    "end": "1461750"
  },
  {
    "text": "If the 0 and 1 are equally\nlikely at the input, what's the uncertainty in Y?",
    "start": "1461750",
    "end": "1467170"
  },
  {
    "text": " There's a little\nbit of uncertainty.",
    "start": "1467170",
    "end": "1473450"
  },
  {
    "text": "It's equally likely\nto be a 0 or 1. I had actually written\nthat assumption in,",
    "start": "1473450",
    "end": "1478610"
  },
  {
    "text": "and then I took it out, but I\nthink I'm wrong in saying that. So here we have the 1\nfor the uncertainty in Y.",
    "start": "1478610",
    "end": "1484700"
  },
  {
    "text": "What about the\nuncertainty in Y given X? So I give you a particular\nvalue for X. Let's",
    "start": "1484700",
    "end": "1490220"
  },
  {
    "text": "say X is equal to 1. So I give you a\nparticular value for X.",
    "start": "1490220",
    "end": "1495429"
  },
  {
    "text": "What's the uncertainty in Y? Well, Y is 0 with\nprobability little p,",
    "start": "1495430",
    "end": "1503059"
  },
  {
    "text": "and it's 1 with\nprobability 1 minus p. And that's really the\nbinary entropy function",
    "start": "1503060",
    "end": "1508789"
  },
  {
    "text": "that we had drawn last time. So you can actually work\nout all these pieces",
    "start": "1508790",
    "end": "1513900"
  },
  {
    "text": "and discover-- let's see, here\nis the binary entropy function. Just to remind you,\nthis is for a coin toss.",
    "start": "1513900",
    "end": "1519840"
  },
  {
    "start": "1517000",
    "end": "1517000"
  },
  {
    "text": "If something can be 1\nwith probability p, 0 with probability 1 minus\np or the other way around,",
    "start": "1519840",
    "end": "1525120"
  },
  {
    "text": "the entropy associated\nwith that is H of p.",
    "start": "1525120",
    "end": "1530430"
  },
  {
    "text": "And we have 1 minus H of p\nfor the mutual information between the input and output\nof the binary channel.",
    "start": "1530430",
    "end": "1536370"
  },
  {
    "text": "So here's what 1 minus\nH of p looks like. All right, so what's\na low-noise channel?",
    "start": "1536370",
    "end": "1542820"
  },
  {
    "text": "A low-noise channel is one\nwith a very small value of p. And what this says is that\nthe mutual information",
    "start": "1542820",
    "end": "1548790"
  },
  {
    "text": "between the input and output\nis on the order of one bit. So if you're told\nwhat Y is, you've",
    "start": "1548790",
    "end": "1555570"
  },
  {
    "text": "got a very good idea what X is. That makes sense, because\nit's a low-noise channel. But if you get to a\nchannel that has around",
    "start": "1555570",
    "end": "1561930"
  },
  {
    "text": "the 0.5 probability\nof flipping the bit, then the mutual\ninformation is very small.",
    "start": "1561930",
    "end": "1569600"
  },
  {
    "text": "So it doesn't reflect\nwhat you'd like to see. Here's another notion,\nwhich is entirely",
    "start": "1569600",
    "end": "1576100"
  },
  {
    "start": "1575000",
    "end": "1575000"
  },
  {
    "text": "Shannon, which is the\nidea of channel capacity. And what he's saying\nnow is in order",
    "start": "1576100",
    "end": "1582760"
  },
  {
    "text": "to characterize the\nchannel, rather than the input or the\noutput, let's ask what the maximum\nmutual information",
    "start": "1582760",
    "end": "1588430"
  },
  {
    "text": "is over all possible\ndistributions that you might have\nfor X. So I'm not going to specify X being 0\nand 1 with equal probability.",
    "start": "1588430",
    "end": "1596410"
  },
  {
    "text": " If you go through\nthat computation, you find that it's exactly\nthe shape that we had before.",
    "start": "1596410",
    "end": "1605080"
  },
  {
    "text": "It's exactly, for the binary\nsymmetric channel, that happens to be exactly this curve.",
    "start": "1605080",
    "end": "1610429"
  },
  {
    "text": "So the channel capacity for\nthe binary channel is exactly-- for the binary\nsymmetric channel--",
    "start": "1610430",
    "end": "1616730"
  },
  {
    "text": "is exactly this curve. So that gives us an idea\nof the maximum information",
    "start": "1616730",
    "end": "1622100"
  },
  {
    "text": "that you could be transmitting\nacross the channel. Now that's just the\ndefinition, but it turns out",
    "start": "1622100",
    "end": "1629500"
  },
  {
    "text": "to have some very practical\nimplications for how fast and how accurately you can\ntransmit data on a channel.",
    "start": "1629500",
    "end": "1636490"
  },
  {
    "text": "And here's Shannon's\nresult. What he says is that you can theoretically\ntransmit information",
    "start": "1636490",
    "end": "1644090"
  },
  {
    "text": "at an average rate below\nthe channel capacity",
    "start": "1644090",
    "end": "1649340"
  },
  {
    "text": "with arbitrarily low error. So that's the shocking\nthing, that as long",
    "start": "1649340",
    "end": "1654860"
  },
  {
    "text": "as you stay below\nchannel capacity, you can transmit with\narbitrary low error.",
    "start": "1654860",
    "end": "1660200"
  },
  {
    "text": "If you try and get\nto rates above that,",
    "start": "1660200",
    "end": "1665990"
  },
  {
    "text": "you're going to\nrun into trouble. You can't get that probability\nof error to vanish.",
    "start": "1665990",
    "end": "1672230"
  },
  {
    "text": "Now, how do you do this? Well, the prescription is take\nlong strings of that input",
    "start": "1672230",
    "end": "1677510"
  },
  {
    "text": "message stream, take k bits\nof that input message stream, code it onto it n larger\nthan k code words,",
    "start": "1677510",
    "end": "1685820"
  },
  {
    "text": "send that through the channel. If n is very large\nand k is very large,",
    "start": "1685820",
    "end": "1692520"
  },
  {
    "text": "the rate at which you're\ntransmitting is k over n, you can transmit\nat a rate k over n that lives below C with as\nlow an error as you want.",
    "start": "1692520",
    "end": "1702085"
  },
  {
    "text": "The way to make\nthe error smaller is to take longer\nand longer blocks. ",
    "start": "1702085",
    "end": "1707910"
  },
  {
    "text": "This was kind of\nan existence proof. He didn't actually show\nyou specific instructions,",
    "start": "1707910",
    "end": "1714309"
  },
  {
    "text": "necessarily, in that proof for\nhow to introduce the redundancy to make this happen.",
    "start": "1714310",
    "end": "1719620"
  },
  {
    "text": "But it was actually\na result that said, you can't be satisfied\nwith the replication code. You can do a lot better, and\nhow much better you can do",
    "start": "1719620",
    "end": "1727170"
  },
  {
    "text": "is indicated by that\nchannel capacity. OK, let's come back\nto testable stuff.",
    "start": "1727170",
    "end": "1733420"
  },
  {
    "text": "We're going to actually design\nways to introduce redundancy, motivated by this\n[? Shannon ?] result,",
    "start": "1733420",
    "end": "1740190"
  },
  {
    "text": "for very practical settings. And a key notion\nwe're going to use is that of the Hamming\ndistance between two strings.",
    "start": "1740190",
    "end": "1749370"
  },
  {
    "text": "So the Hamming distance-- you've seen this in some\nrecitations-- basically, the Hamming distance\nbetween two strings",
    "start": "1749370",
    "end": "1764490"
  },
  {
    "text": "is just a number of positions\nin which the two strings differ from each other. so the Hamming distance here\nbetween these two strings,",
    "start": "1764490",
    "end": "1773340"
  },
  {
    "text": "let's say string 1, string\n2, is what, 1, 2, 3.",
    "start": "1773340",
    "end": "1790830"
  },
  {
    "text": "These strings differ\nin three positions. Another way to think\nof it is, how many bits do I have to flip in one\nto get the other one?",
    "start": "1790830",
    "end": "1798750"
  },
  {
    "text": "So how many hops does\nit take, in some sense, to get from one to the other?",
    "start": "1798750",
    "end": "1805030"
  },
  {
    "text": "All right, so here's how the\nnotion of adding redundancy",
    "start": "1805030",
    "end": "1816960"
  },
  {
    "start": "1812000",
    "end": "1812000"
  },
  {
    "text": "comes in. Suppose we have a 0\nor a 1 to send across.",
    "start": "1816960",
    "end": "1822500"
  },
  {
    "text": "This is our bit for\nthat transmission. What we're going to do is\nactually code it not as 0 and 1, but as 00 and 11.",
    "start": "1822500",
    "end": "1829640"
  },
  {
    "text": " If we've got just a\nsingle bit corrupted,",
    "start": "1829640",
    "end": "1835169"
  },
  {
    "text": "we go to something\nthat's not a code word. We go from 11 01 or to 10,\nor we go from 00 to 01 or 10.",
    "start": "1835170",
    "end": "1843720"
  },
  {
    "text": "We receive something\nthat's not a code word. That allows us to detect\nthat an error was made.",
    "start": "1843720",
    "end": "1850490"
  },
  {
    "text": "So what we've essentially\ndone is, in Hamming distance, we've introduced some distance\nbetween the code words",
    "start": "1850490",
    "end": "1859310"
  },
  {
    "text": "that we're using to\ntransmit on the channel. It takes two hops to get from\none code word to the other.",
    "start": "1859310",
    "end": "1866270"
  },
  {
    "text": "There's a Hamming\ndistance of two. And, therefore, if you\nonly have a single bit error when you transmit\non the channel,",
    "start": "1866270",
    "end": "1872270"
  },
  {
    "text": "you're not going to get all\nthe way to another code word. You won't be at any\ncode word you recognize, and you'll know that\nyou made an error.",
    "start": "1872270",
    "end": "1878510"
  },
  {
    "text": "So this is an example of how you\nstart to introduce redundancy in the stream so that you can\ndetect and perhaps even correct",
    "start": "1878510",
    "end": "1886820"
  },
  {
    "text": "errors. Here's another example. Now this is-- these, by the way,\nare still looking replication",
    "start": "1886820",
    "end": "1893669"
  },
  {
    "text": "codes because to send a 0,\nwe're repeating 0 three times, and to send a 1, we're\nrepeating 1 one time.",
    "start": "1893670",
    "end": "1900432"
  },
  {
    "text": "But we're going to do more\nelaborate versions of this that are not replication codes. But imagine now I've drawn\nthe corners of a cube.",
    "start": "1900432",
    "end": "1909180"
  },
  {
    "text": "Each circle here across an\nedge is Hamming distance 1 from the adjacent one.",
    "start": "1909180",
    "end": "1915810"
  },
  {
    "text": "Right So to go from\nthe sequence that I'm using to represent\nto 0 to the sequence",
    "start": "1915810",
    "end": "1921990"
  },
  {
    "text": "that I use to represent a 1,\nI've got to do 1, 2, 3 hops,",
    "start": "1921990",
    "end": "1927059"
  },
  {
    "text": "there's a Hamming\ndistance of 3 there. So if I had only a\nsingle bit error,",
    "start": "1927060",
    "end": "1934160"
  },
  {
    "text": "is it possible\nfor me to correct? If I know that my errors are\nlimited to single bit errors,",
    "start": "1934160",
    "end": "1939649"
  },
  {
    "text": "can I correct when I\nreceive an incorrect string?  If I start with 000 and I\nhave a single bit error,",
    "start": "1939650",
    "end": "1947410"
  },
  {
    "text": "I can only go to these\nadjacent vertices. And those are not going to be\nconfused with vertices that are",
    "start": "1947410",
    "end": "1953860"
  },
  {
    "text": "one step adjacent to the 111. So I'll know that\nI've made an error,",
    "start": "1953860",
    "end": "1959200"
  },
  {
    "text": "and I'll know to\ncorrect it back to 000, provided I know that only\none error has been made.",
    "start": "1959200",
    "end": "1965289"
  },
  {
    "text": "Now, I might just assume that\nonly one error has been made. And so once in a while,\nI'll think I'm correcting,",
    "start": "1965290",
    "end": "1970299"
  },
  {
    "text": "but I'll be getting\nsomething wrong. And that has to be contended\nwith and calculated,",
    "start": "1970300",
    "end": "1975730"
  },
  {
    "text": "but this is the basic idea. ",
    "start": "1975730",
    "end": "1982760"
  },
  {
    "text": "More generally what\nwe're thinking about is taking key, message bits. ",
    "start": "1982760",
    "end": "1994030"
  },
  {
    "text": "So this corresponds to 2\nto the k possible messages. ",
    "start": "1994030",
    "end": "2000390"
  },
  {
    "text": "We're going to embed this\nin ended code words where",
    "start": "2000390",
    "end": "2013770"
  },
  {
    "text": "n is greater than k. So if you imagine\na generalization of this picture, what we've\ngot is a hypercube with 2",
    "start": "2013770",
    "end": "2023610"
  },
  {
    "text": "to the n possible nodes,\ncorresponding to all the possible combinations here.",
    "start": "2023610",
    "end": "2029280"
  },
  {
    "start": "2029280",
    "end": "2036990"
  },
  {
    "text": "We're going to assign 2 to the\nk of those nodes to code words, and the rest will be\nleft free to just leave",
    "start": "2036990",
    "end": "2043730"
  },
  {
    "text": "some space between\nthe code words. ",
    "start": "2043730",
    "end": "2049510"
  },
  {
    "text": "the rate of the code\nthen, the rate of the code is, how many message bits\nare you're getting across",
    "start": "2049510",
    "end": "2054879"
  },
  {
    "text": "on average per transmission? And so the rate is\ngoing to be k over n.",
    "start": "2054880",
    "end": "2061570"
  },
  {
    "text": "Because for every n\nbits that you send, you're getting across\nk bits of information. This k message bits and\nevery n transmitted bits.",
    "start": "2061570",
    "end": "2068560"
  },
  {
    "start": "2068560",
    "end": "2074169"
  },
  {
    "text": "So here is the general statement\nin terms of Hamming distance",
    "start": "2074170",
    "end": "2084989"
  },
  {
    "start": "2075000",
    "end": "2075000"
  },
  {
    "text": "and what you can\ndo with the code. So first of all, I've\ngot a set of code words. What's really important is\nwhat's the minimum Hamming",
    "start": "2084989",
    "end": "2095579"
  },
  {
    "text": "distance between my code words. ",
    "start": "2095580",
    "end": "2104605"
  },
  {
    "text": "Because that's the point\nof greatest vulnerability. That's where I'm most\nlikely to get confused.",
    "start": "2104605",
    "end": "2109609"
  },
  {
    "text": "So if you give me a\nset of code words, I can look at the\nHamming distance between any two of them. I've got to search\nall these pairs",
    "start": "2109610",
    "end": "2115345"
  },
  {
    "text": "and find out which is the\nminimum Hamming distance. That's the point of\nmaximum vulnerability,",
    "start": "2115345",
    "end": "2120560"
  },
  {
    "text": "and this is what we're\ncalling d, little d. ",
    "start": "2120560",
    "end": "2127000"
  },
  {
    "text": "So the picture I\nlike to think about is I've got some\nvalid code word here.",
    "start": "2127000",
    "end": "2132460"
  },
  {
    "text": " I've got some other\nvalid code word here.",
    "start": "2132460",
    "end": "2138810"
  },
  {
    "start": "2138810",
    "end": "2145690"
  },
  {
    "text": "And if I told you\nthat over all the code words in my set, the\nminimum Hamming distance",
    "start": "2145690",
    "end": "2152530"
  },
  {
    "text": "I find is 3, what that means\nis I've got to do three hops to get to the\nother code word.",
    "start": "2152530",
    "end": "2162680"
  },
  {
    "text": "This hop means I've changed\n1 bit in the valid code word to get to some other\nsequence, not a code word.",
    "start": "2162680",
    "end": "2169070"
  },
  {
    "text": "And then 1 bit to\nget to this one, and 1 more bit to\nget to this one, and this is now another\nvalid code word.",
    "start": "2169070",
    "end": "2175910"
  },
  {
    "text": "OK, so if I say the\nminimum Hamming distance is 3, that means that you\nwill find a pair of words with these three hops to get\nyou from one to the other.",
    "start": "2175910",
    "end": "2183859"
  },
  {
    "start": "2183860",
    "end": "2193610"
  },
  {
    "text": "How many errors can you\ndetect with a code like this? ",
    "start": "2193610",
    "end": "2198930"
  },
  {
    "text": "So you send a valid code\nword across the channel, bits get flipped, up to\nhow many errors could",
    "start": "2198930",
    "end": "2205700"
  },
  {
    "text": "you detect without being fooled? If I tell you this is less\nthan or equal to e errors,",
    "start": "2205700",
    "end": "2213470"
  },
  {
    "text": "how large can e be\nto guarantee that you won't get a transmission of one\nvalid code word that ends up",
    "start": "2213470",
    "end": "2222320"
  },
  {
    "text": "as another valid code word? Yeah? AUDIENCE: [INAUDIBLE] GEORGE VERGHESE: Sorry? AUDIENCE: [INAUDIBLE]",
    "start": "2222320",
    "end": "2228930"
  },
  {
    "text": "GEORGE VERGHESE: I'm\ntalking not about correction but about detection of an error.",
    "start": "2228930",
    "end": "2234532"
  },
  {
    "text": "How many errors could you detect\nin this kind of a picture? ",
    "start": "2234532",
    "end": "2240240"
  },
  {
    "text": "So I can afford to have\none error, two errors, and the third hour will bring\nme to about valid code word,",
    "start": "2240240",
    "end": "2245480"
  },
  {
    "text": "and I won't know that\nI've made an error. So if you want to look at how\nmany errors you can detect,",
    "start": "2245480",
    "end": "2250970"
  },
  {
    "text": "it's what's given by the\nupper one there, d minus 1. So if the minimum\nHamming distance is d,",
    "start": "2250970",
    "end": "2257290"
  },
  {
    "text": "you can detect up\nto d minus 1 hours. What about correction? ",
    "start": "2257290",
    "end": "2265920"
  },
  {
    "text": "How many errors could\nyou correct here? Can you correct any errors here? Up to one, right?",
    "start": "2265920",
    "end": "2272315"
  },
  {
    "text": "And then you can look\nat this more generally, and you see the general\nformula is d minus 1 over 2,",
    "start": "2272315",
    "end": "2277760"
  },
  {
    "text": "the floor of that. So that tells you how many\nerror you can correct. So the minimum Hamming distance\nis actually a key thing.",
    "start": "2277760",
    "end": "2287160"
  },
  {
    "text": " Now, how do you\nbuild codes which have desired characteristics?",
    "start": "2287160",
    "end": "2293840"
  },
  {
    "start": "2288000",
    "end": "2288000"
  },
  {
    "text": "For instance, suppose you\nwant to send 4 bit messages. So k equals 4. You want to have single\nerror correction.",
    "start": "2293840",
    "end": "2301125"
  },
  {
    "text": "So that means you want this\nkind of a picture here. You need Hamming\ndistance 3, at least.",
    "start": "2301125",
    "end": "2306350"
  },
  {
    "text": "How will you produce a code? All right, so this is not\nan obvious thing at all.",
    "start": "2306350",
    "end": "2312220"
  },
  {
    "text": "Here's an example of one that\nsatisfies the construction. You need to actually\nexpand to sending 7 bits,",
    "start": "2312220",
    "end": "2319960"
  },
  {
    "text": "so n is equal to 7. How many messages do we have? We have 16 messages, so that\ncorresponds to a k of 4,",
    "start": "2319960",
    "end": "2328320"
  },
  {
    "text": "2 to the 4 is 16. So we've got 16\ndifferent messages. We could have counted\nthose messages with 4 bits,",
    "start": "2328320",
    "end": "2334690"
  },
  {
    "text": "but we're going to\nadd in redundancy to get 7 bits per message,\nresulting in these code words.",
    "start": "2334690",
    "end": "2340660"
  },
  {
    "text": "These code words,\nthis set of code words has the property that the\nminimum Hamming distance is 3.",
    "start": "2340660",
    "end": "2346513"
  },
  {
    "text": "So you can correct up\nto a single error, here. ",
    "start": "2346513",
    "end": "2351700"
  },
  {
    "text": "But it takes-- in principle,\nit takes a search, and it's not\nnecessarily easy to do.",
    "start": "2351700",
    "end": "2358160"
  },
  {
    "start": "2358000",
    "end": "2358000"
  },
  {
    "text": "But we'll see how to\ndo that efficiently. All right. Let me show you how-- and\nthis is something that",
    "start": "2358160",
    "end": "2364690"
  },
  {
    "text": "you're probably\nquite familiar with-- how by making n equals k\nplus 1, you can already--",
    "start": "2364690",
    "end": "2371020"
  },
  {
    "text": " suppose I choose\nn equals k plus 1,",
    "start": "2371020",
    "end": "2378440"
  },
  {
    "text": "which means I'm taking the\nmessage bit and adding 1 bit. We're going to add what's\ncalled a parity bit.",
    "start": "2378440",
    "end": "2386970"
  },
  {
    "text": "And you can do this in different\nways, but we're going to do-- let's see-- what I'm going\nto do with this is guarantee",
    "start": "2386970",
    "end": "2396080"
  },
  {
    "text": "that the minimum distance\nbetween valid code words is at least 2.",
    "start": "2396080",
    "end": "2401210"
  },
  {
    "start": "2401210",
    "end": "2408320"
  },
  {
    "text": "So let's see how to do that. And there'll be some computation\nin not just the parity calculations, but\nother stuff we'll do",
    "start": "2408320",
    "end": "2414200"
  },
  {
    "text": "that builds on computations\nof zeros and ones. The computations are what\nyou've probably seen elsewhere",
    "start": "2414200",
    "end": "2421130"
  },
  {
    "text": "with Boolean algebra. This is what's called\ncomputation in Galois field 2.",
    "start": "2421130",
    "end": "2426440"
  },
  {
    "text": "So GF2 is another\nsymbol you'll see. 0 plus 0 is a 0, 1 plus 0 or\n0 plus 1 is 1, 1 plus 1 is 0.",
    "start": "2426440",
    "end": "2433970"
  },
  {
    "text": "So this is like an exclusive\nor addition, and multiplication works in the usual fashion.",
    "start": "2433970",
    "end": "2440910"
  },
  {
    "text": "So all our computations\nare with zeros and ones, and you want to keep that in\nmind as we go through this.",
    "start": "2440910",
    "end": "2446520"
  },
  {
    "start": "2446000",
    "end": "2446000"
  },
  {
    "text": "So here's what we do for a\nsimple way to add redundancy.",
    "start": "2446520",
    "end": "2454420"
  },
  {
    "text": "We'll take the message\nand not a single bit to make the total number of\nones in the resulting code word",
    "start": "2454420",
    "end": "2462580"
  },
  {
    "text": "even. So this is what's\ncalled even parity. You can have the opposite\nchoice of odd parity.",
    "start": "2462580",
    "end": "2468490"
  },
  {
    "text": "So if you now\nreceive a code word with an odd number of ones,\nyou know you've made a mistake.",
    "start": "2468490",
    "end": "2474430"
  },
  {
    "text": " How do I know that\nthe minimum Hamming distance is 2 in this case?",
    "start": "2474430",
    "end": "2480510"
  },
  {
    "start": "2480510",
    "end": "2487080"
  },
  {
    "text": "I have to be able to produce\nfor you some other code word that I've had with two hops.",
    "start": "2487080",
    "end": "2492799"
  },
  {
    "text": " Any ideas there?",
    "start": "2492800",
    "end": "2498880"
  },
  {
    "text": "So I give you a code word,\nwhich is the original message word with a parity bit.",
    "start": "2498880",
    "end": "2504579"
  },
  {
    "text": "Can I make two bit flips in\nthat and get a new code word,",
    "start": "2504580",
    "end": "2512470"
  },
  {
    "text": "I mean, a valid code word? Because then I'd have\nHamming distance 2, right?",
    "start": "2512470",
    "end": "2519403"
  },
  {
    "text": "Can you think of what to do? Yeah? AUDIENCE: If you flip\na 1 to 0 or 0 to 1,",
    "start": "2519403",
    "end": "2525374"
  },
  {
    "text": "then n equals [INAUDIBLE]. GEORGE VERGHESE:\nBut that's not yet",
    "start": "2525374",
    "end": "2530860"
  },
  {
    "text": "given me-- so the suggestion\nwas flip one of the bits. AUDIENCE: So then\nfor the second one, you'll either still have an\nodd number or [? even. ?]",
    "start": "2530860",
    "end": "2538450"
  },
  {
    "text": "GEORGE VERGHESE: So if you\nflip, for instance an easy way to see this is flip\none of the message bits and flip the party\nbit, for instance.",
    "start": "2538450",
    "end": "2544494"
  },
  {
    "text": " No that doesn't do it, does it?",
    "start": "2544495",
    "end": "2551200"
  },
  {
    "text": "Because then you've changed\ntwo 0's to 2 or two 1's to a 0, and your parity is wrong, then.",
    "start": "2551200",
    "end": "2559117"
  },
  {
    "text": "So you can have a two\nbit error that ends up not being detected, but\nall single bit errors will get detected.",
    "start": "2559117",
    "end": "2565270"
  },
  {
    "text": "That, again, correlates\nwith the fact that we set the minimum\nHamming distance at 2. The number of errors you\ncan detect is d minus 1.",
    "start": "2565270",
    "end": "2572560"
  },
  {
    "text": "That's 1.  And the number of\nerrors you can correct,",
    "start": "2572560",
    "end": "2579280"
  },
  {
    "text": "well, it's d minus 1 divided\nby 2, the floor of that, and you can't\ncorrect any errors. ",
    "start": "2579280",
    "end": "2593069"
  },
  {
    "start": "2593000",
    "end": "2593000"
  },
  {
    "text": "All right, now we're going to\nbe building more elaborate codes than parity or replication.",
    "start": "2593070",
    "end": "2600260"
  },
  {
    "text": "These are going to be\ncalled linear block codes. ",
    "start": "2600260",
    "end": "2622569"
  },
  {
    "text": "And there are different\nways to set this up. Here's one way to think of it. If you're comfortable with\nthe matrix multiplication,",
    "start": "2622570",
    "end": "2630600"
  },
  {
    "text": "here's one way to think of it. And we're going to be\nusing this actually. So if you aren't already\ncomfortable with matrix",
    "start": "2630600",
    "end": "2636320"
  },
  {
    "text": "multiplication, maybe you\nshould get comfortable soon. What we have is a vector here,\nwhich has our message in it.",
    "start": "2636320",
    "end": "2647200"
  },
  {
    "text": "So we stick our\nmessage in there. This is just a bunch\nof zeros and ones.",
    "start": "2647200",
    "end": "2653460"
  },
  {
    "text": "I've got a matrix here, which\nI call a generator matrix, generator matrix.",
    "start": "2653460",
    "end": "2658890"
  },
  {
    "start": "2658890",
    "end": "2664410"
  },
  {
    "text": "And this is a matrix of zeros\nand ones, as well, and so on.",
    "start": "2664410",
    "end": "2680869"
  },
  {
    "text": "So we've got things in there. How do I generate my code words?",
    "start": "2680870",
    "end": "2687300"
  },
  {
    "text": "I just put in my message,\ncarry out this multiplication, and see what I get\nfor a code word.",
    "start": "2687300",
    "end": "2692720"
  },
  {
    "text": "So for instance, if\nI my message is 1 and all 0's, what's\nmy code word?",
    "start": "2692720",
    "end": "2700210"
  },
  {
    "text": "Well, I take this\nand I multiply it all the way through the matrix. Because of the special structure\nhere, all of these are zeros,",
    "start": "2700210",
    "end": "2706990"
  },
  {
    "text": "so the rows below the first\none don't matter at all. What I get for a\ncode word is 0101101.",
    "start": "2706990",
    "end": "2714910"
  },
  {
    "text": "In other words, I get\nthe first row of g.  If I had a 1 and a 1 with\n00, I'm going to get the sum",
    "start": "2714910",
    "end": "2724220"
  },
  {
    "text": "of the first two rows of g. And all of these computations\nare done with the modulo 2",
    "start": "2724220",
    "end": "2730310"
  },
  {
    "text": "arithmetic, so in GF2.  So this is one way to think\nof what a linear code is.",
    "start": "2730310",
    "end": "2737320"
  },
  {
    "text": "Another way to think of it is,\nevery bit in your code word is a linear combination of\nthe bits in the message.",
    "start": "2737320",
    "end": "2746520"
  },
  {
    "text": "It's just that you\nhave more bits here, so you're taking multiple\nlinear combinations of the bits in the message to get the\nbits in the code word.",
    "start": "2746520",
    "end": "2756190"
  },
  {
    "text": "So this is a highly\nstructured kind of code. And the key fact about this is\nthat the sum of any two code",
    "start": "2756190",
    "end": "2763359"
  },
  {
    "text": "words is also a code word. And we'll leave you to\nlook at that in recitation. So it's true that any\ncode word generated",
    "start": "2763360",
    "end": "2771000"
  },
  {
    "text": "this way plus any\nother code word generated this way will give you\na code word generated this way.",
    "start": "2771000",
    "end": "2777260"
  },
  {
    "text": "can, you deduce from that that\nthe code word of all 0's has to be in any linear code?",
    "start": "2777260",
    "end": "2782540"
  },
  {
    "text": " Why is it true that\nevery linear code has",
    "start": "2782540",
    "end": "2793450"
  },
  {
    "text": "to have the all zero code word? In this instance--\nwell, you can see",
    "start": "2793450",
    "end": "2808920"
  },
  {
    "text": "it has to have the\nall zero code word. Why am I doing that? ",
    "start": "2808920",
    "end": "2817660"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] GEORGE VERGHESE: Yeah, so\nclearly from this picture,",
    "start": "2817660",
    "end": "2824713"
  },
  {
    "text": "if your input is\nall zeros, you've got to have the zero code word. Can you tell me\nfrom this statement",
    "start": "2824713",
    "end": "2830295"
  },
  {
    "text": "that the sum of any two code\nwords has to be a code word? Can you deduce from\nthat the all zero code",
    "start": "2830295",
    "end": "2835490"
  },
  {
    "text": "word has to be in there? AUDIENCE: So that's\n[INAUDIBLE] subtraction.",
    "start": "2835490",
    "end": "2840922"
  },
  {
    "text": "GEORGE VERGHESE:\nSubtraction or addition. So suppose I take a code\nword and add it to itself.",
    "start": "2840922",
    "end": "2846359"
  },
  {
    "text": "What do I get? In GFW, if I take a code\nword and add it to itself,",
    "start": "2846360",
    "end": "2853500"
  },
  {
    "text": "I get the all zero code word. So the all zeros has\nto always be in there. If you don't have the\nall zeros code word,",
    "start": "2853500",
    "end": "2860310"
  },
  {
    "text": "you know you don't\nhave a linear code. ",
    "start": "2860310",
    "end": "2866550"
  },
  {
    "start": "2863000",
    "end": "2863000"
  },
  {
    "text": "Now it turns out that\nfor a linear code, it's easy to determine the\nminimum distance between--",
    "start": "2866550",
    "end": "2872310"
  },
  {
    "text": "the minimum Hamming distance\nbetween words, which we saw was crucial to establishing\nwhat the error correction",
    "start": "2872310",
    "end": "2877799"
  },
  {
    "text": "or detection properties were. If you've got a linear code to\ndetermine the minimum distance",
    "start": "2877800",
    "end": "2883170"
  },
  {
    "text": "between words, you only have\nto look for the distance-- the minimum distance between\nthe zero code word and all",
    "start": "2883170",
    "end": "2889440"
  },
  {
    "text": "the other code words. So it turns out that\nin a linear code, the minimum distance that you\nfind between any two code words",
    "start": "2889440",
    "end": "2897660"
  },
  {
    "text": "is the same as the\nminimum distance you'll find between the zero code\nword and any other code word.",
    "start": "2897660",
    "end": "2903180"
  },
  {
    "text": "Now what's the distance\nbetween the zero code word and some other code word? It's just the number of ones\nin that other code word.",
    "start": "2903180",
    "end": "2910200"
  },
  {
    "text": "So all you have to\ndo for a linear code to determine the minimum\nHamming distance is look at all the\nnon-zero code words",
    "start": "2910200",
    "end": "2916200"
  },
  {
    "text": "and see which one has the\nminimum number of ones. So let's see, it's not obvious\nthat these are necessarily",
    "start": "2916200",
    "end": "2928260"
  },
  {
    "text": "linear codes, but\nthey turn out to be.",
    "start": "2928260",
    "end": "2937170"
  },
  {
    "text": "In this particular case,\nhere's a code with n equals 3. We've got only two\nmessages being sent,",
    "start": "2937170",
    "end": "2945309"
  },
  {
    "text": "so what's the value of k? Two messages means k equals\n1, because 2 to the k",
    "start": "2945310",
    "end": "2951000"
  },
  {
    "text": "is the number of messages. So n is 3, k is 1, and the\nminimum Hamming distance",
    "start": "2951000",
    "end": "2958380"
  },
  {
    "text": "is 3, which is the\nweight of the-- smallest weight you find\namong the non-zero words.",
    "start": "2958380",
    "end": "2964920"
  },
  {
    "text": "Here's another instance. This is again a linear code. Well, is it a linear code? Yeah.",
    "start": "2964920",
    "end": "2971339"
  },
  {
    "text": "The minimum weight you see among\nthe non-zero code words is 2, so the Hamming distance is 2. So the way we denote this\ncode is the value of n",
    "start": "2971340",
    "end": "2979800"
  },
  {
    "text": "is 4, because there are\nfour different code words-- sorry, the four\ndifferent bits here.",
    "start": "2979800",
    "end": "2987210"
  },
  {
    "text": "4 bits, sorry, in\nthe code words. It's not four\ndifferent code words. 2 is the value of k,\nbecause 2 to the 2--",
    "start": "2987210",
    "end": "2994900"
  },
  {
    "text": "4 is the number of\nmessages that you have. And the minimum\nHamming distance is 2.",
    "start": "2994900",
    "end": "3000315"
  },
  {
    "text": "So with each of those,\nyou can actually compute the associated rate. ",
    "start": "3000315",
    "end": "3009590"
  },
  {
    "text": "And just to wind up, these\nare not linear codes.",
    "start": "3009590",
    "end": "3015170"
  },
  {
    "text": "How do we know they're\nnot linear codes? Well, some two of\nthem, and you'll",
    "start": "3015170",
    "end": "3020550"
  },
  {
    "text": "discover that in\nsome instances, you don't get the remaining\none in the set.",
    "start": "3020550",
    "end": "3026280"
  },
  {
    "text": "This is the code set\nthat I put up earlier. It turns out to\nbe a linear code.",
    "start": "3026280",
    "end": "3031950"
  },
  {
    "text": "So if I claim that\nit's a linear code, can you tell me what the\nminimum Hamming distance is between code words here?",
    "start": "3031950",
    "end": "3037559"
  },
  {
    "text": " 3. You find a code word\nhere of weight 3,",
    "start": "3037560",
    "end": "3045282"
  },
  {
    "text": "and you don't find any code\nwords-- here also another one-- you don't find any code\nwords of weight less than 3.",
    "start": "3045282",
    "end": "3050500"
  },
  {
    "text": " All right, so this is\nenough to get you going.",
    "start": "3050500",
    "end": "3058330"
  },
  {
    "text": "We'll quit with this, you'll\ncontinue in recitation, and we'll pick it up again\nin lecture next time.",
    "start": "3058330",
    "end": "3063880"
  },
  {
    "text": "Thank you. ",
    "start": "3063880",
    "end": "3069000"
  }
]