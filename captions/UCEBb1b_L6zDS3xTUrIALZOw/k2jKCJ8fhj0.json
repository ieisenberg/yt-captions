[
  {
    "start": "0",
    "end": "71736"
  },
  {
    "text": "PROFESSOR: All right. Let's get started. So we're continuing on\nthe theme of linkages.",
    "start": "71736",
    "end": "77920"
  },
  {
    "text": "And just a brief recollection\nfrom last time-- and also changing definitions\na little bit and throwing away some\ndetails we won't need-- we",
    "start": "77920",
    "end": "84860"
  },
  {
    "text": "have the idea of a graph, which\nis just vertices and edges. And then if we\nadded edge lengths,",
    "start": "84860",
    "end": "91540"
  },
  {
    "text": "if we put a number\non each of the edges, we've got what we\ncall the linkage. And then if we actually embed\nthat picture into the plane,",
    "start": "91540",
    "end": "99600"
  },
  {
    "text": "or into 3D, or whatever\nspace we're working in, into d-dimensional\nspace, then we",
    "start": "99600",
    "end": "105280"
  },
  {
    "text": "call that a configuration\nof the linkage. And in general, there might\nbe many configurations of one linkage.",
    "start": "105280",
    "end": "111039"
  },
  {
    "text": "If it's going to\nfold or move around, there is infinitely many\nconfigurations of a linkage.",
    "start": "111040",
    "end": "117060"
  },
  {
    "text": "And what today is\nabout is basically when there's only one configuration,\nversus when there's many,",
    "start": "117060",
    "end": "122560"
  },
  {
    "text": "at least locally. So this is the\nconcept of rigidity. ",
    "start": "122560",
    "end": "132220"
  },
  {
    "text": "So if we have some\nlinkage configuration--",
    "start": "132220",
    "end": "139170"
  },
  {
    "text": "some configuration\nof some linkage--",
    "start": "139170",
    "end": "145599"
  },
  {
    "text": "then we call it\nflexible if it can move from that configuration\nin a non-trivial way.",
    "start": "145600",
    "end": "153540"
  },
  {
    "start": "153540",
    "end": "159969"
  },
  {
    "text": "So we want a non-trivial\nmotion starting from that configuration.",
    "start": "159970",
    "end": "165930"
  },
  {
    "text": " And you'll notice that in my\ndefinition of linkage here,",
    "start": "165930",
    "end": "174380"
  },
  {
    "text": "I did not specify that\nsome of the vertices could be pinned to the\nplane or pinned to 3D, because we needed\nthat a lot last time.",
    "start": "174380",
    "end": "181239"
  },
  {
    "text": "A bunch of our gadgets had fixed\nvertices-- pinned vertices.",
    "start": "181240",
    "end": "187940"
  },
  {
    "text": "I'm going to throw that\naway, and the price I pay is that whatever\nlinkage I build can float around in my space.",
    "start": "187940",
    "end": "194280"
  },
  {
    "text": "And so I need to add this\nnon-trivial specification to say that it's not\njust a rigid motion.",
    "start": "194280",
    "end": "204020"
  },
  {
    "text": "It's not just a translation\nand/or rotation. ",
    "start": "204020",
    "end": "210239"
  },
  {
    "text": "That's rigid motion. So you ignore translations\nand rotations, for example, by pinning.",
    "start": "210240",
    "end": "215601"
  },
  {
    "text": "But you can also\njust see-- what are all the motions I\ncan do from here? If it's just in 2D,\nif it's just the three",
    "start": "215601",
    "end": "223319"
  },
  {
    "text": "dimensions of I can\ntranslate in two ways, and I can rotate in one way,\nthen we don't call it flexible,",
    "start": "223320",
    "end": "229600"
  },
  {
    "text": "we call it rigid. ",
    "start": "229600",
    "end": "239950"
  },
  {
    "text": "And today is all about\ndistinguishing rigid scenarios from flexible scenarios.",
    "start": "239950",
    "end": "245239"
  },
  {
    "text": "And yesterday-- or\nlast class-- was all about making things\nflexible, and making things flexible in\nan interesting way",
    "start": "245240",
    "end": "251770"
  },
  {
    "text": "so that we computed\nsome polynomial. Today, we're really\ninterested in the case where we can make things rigid.",
    "start": "251770",
    "end": "256950"
  },
  {
    "text": "There are some places,\nsome situations, where you want\nthings to not move,",
    "start": "256950",
    "end": "262079"
  },
  {
    "text": "like you're building a building. Unless you're really\ncool and you're making a reconfigurable\nbuilding, you want it to not move.",
    "start": "262079",
    "end": "268730"
  },
  {
    "text": "You want it to be rigid. And so some classic examples\nof this are the truss.",
    "start": "268730",
    "end": "274449"
  },
  {
    "text": "This is a standard planar\ntruss of some nearby bridge. I have another truss\nfor the architects.",
    "start": "274450",
    "end": "281670"
  },
  {
    "text": "It's an octet truss-- or at\nleast various sections of it",
    "start": "281670",
    "end": "288420"
  },
  {
    "text": "in the Brussels airport. You see these a lot in airports,\nespecially in ceilings. And trusses all over the\nplace, especially in bridges.",
    "start": "288420",
    "end": "294510"
  },
  {
    "text": "And they are rigid linkages. You've got vertices,\nyou've got edges.",
    "start": "294510",
    "end": "301440"
  },
  {
    "text": "In principle, they\ncould hinge there, though they're not usually\ndesigned to allow hinging. But the point is even if\nthey are allowed to hinge,",
    "start": "301440",
    "end": "307460"
  },
  {
    "text": "it will be a rigid 3D\nlinkage configuration. And these are very\nsimple examples",
    "start": "307460",
    "end": "313580"
  },
  {
    "text": "we would like to generalize to\nunderstand the general picture.",
    "start": "313580",
    "end": "319949"
  },
  {
    "text": "Turns out, the\ngeneral picture in 3D is not really well understood. It's quite complicated. But in 2D, which is what\nwe'll be working in today,",
    "start": "319950",
    "end": "327009"
  },
  {
    "text": "there's a very good answer,\nand it's very clean, and you can characterize\nall the good rigid 2D structures to some extent.",
    "start": "327010",
    "end": "333700"
  },
  {
    "text": " Let me elaborate a little bit.",
    "start": "333700",
    "end": "341170"
  },
  {
    "text": "One annoying thing\nabout rigidity is that it depends on the\nconfiguration, not just",
    "start": "341170",
    "end": "355230"
  },
  {
    "text": "the linkage or the graph. ",
    "start": "355230",
    "end": "360939"
  },
  {
    "text": "So let me draw you a picture.  Suppose we have a\nrigified square.",
    "start": "360940",
    "end": "367514"
  },
  {
    "text": "I'm going to work\nin two dimensions. Add some triangles. So this thing is rigid.",
    "start": "367515",
    "end": "372580"
  },
  {
    "text": "A bunch of triangles\nin the plane. And let's say I do\nthat, verses-- and I'm",
    "start": "372580",
    "end": "380920"
  },
  {
    "text": "going to allow crossings here. It doesn't really\nmatter too much. ",
    "start": "380920",
    "end": "397490"
  },
  {
    "text": "If I draw this right-- and\nI've done a little better. It's easier when I have\na grid-- my graph paper.",
    "start": "397490",
    "end": "403949"
  },
  {
    "text": "In this situation,\nthe configuration should be rigid, because\nthis part is rigid, and these three\nbars are held taut,",
    "start": "403950",
    "end": "412860"
  },
  {
    "text": "because these vertices\nare effectively pinned to the rest\nof this framework. And this is at full length.",
    "start": "412860",
    "end": "418050"
  },
  {
    "text": "You can't really hinge here. Whereas if I flip this triangle\nthrough that vertical line,",
    "start": "418050",
    "end": "425780"
  },
  {
    "text": "flip that over, I\nget this triangle. And I did the same thing\nfor the other triangle. I didn't have to. But now, suddenly-- and you\ncan't do that by a motion.",
    "start": "425780",
    "end": "433090"
  },
  {
    "text": "But if I consider this\nother configuration where that's the case,\nthen suddenly these guys, which have exactly the same\nlengths as they did before,",
    "start": "433090",
    "end": "440990"
  },
  {
    "text": "have some slack, and\nnow you can think of this as a quadrilateral\nwhich can flex separately.",
    "start": "440990",
    "end": "446880"
  },
  {
    "text": "So this guy's flexible,\nand this guy's rigid. ",
    "start": "446880",
    "end": "452939"
  },
  {
    "text": "This is annoying,\nbecause we'd like to-- think of a truss,\nor something like this.",
    "start": "452940",
    "end": "463086"
  },
  {
    "text": "You don't think about\nexactly how it's drawn. You just think, oh, well,\nthere's this structure. It's got vertices. It's like squares\nwith diagonals.",
    "start": "463086",
    "end": "469870"
  },
  {
    "text": "Does it work if\nthey're skewed squares? ",
    "start": "469870",
    "end": "475030"
  },
  {
    "text": "This presumably works. We think, oh,\ntriangles are rigid. It shouldn't matter\nexactly how they're drawn.",
    "start": "475030",
    "end": "480762"
  },
  {
    "text": "And it turns out,\nmost of the time, it doesn't matter\nhow they're drawn. This is kind of a\nvery special case, and I want to\nformalize that notion",
    "start": "480762",
    "end": "487850"
  },
  {
    "text": "of \"special case\" and\n\"most of the time.\" Because in particular, if I\ngave you a particular linkage",
    "start": "487850",
    "end": "497919"
  },
  {
    "text": "configuration, and I\nask you, is it rigid? ",
    "start": "497920",
    "end": "511250"
  },
  {
    "text": "As I mentioned in the last\nclass, this is coNP-hard. ",
    "start": "511250",
    "end": "518070"
  },
  {
    "text": "So almost certainly\nthere's no good algorithm to tell you whether\na given linkage configuration like this--\nversus this-- is rigid.",
    "start": "518070",
    "end": "526590"
  },
  {
    "text": "That's disconcerting,\nbecause I want to have a good\ncharacterization of rigidity. And this is true, even\nin two dimensions.",
    "start": "526590",
    "end": "532658"
  },
  {
    "text": " So we're going to change\nthe problem a little bit",
    "start": "532658",
    "end": "537810"
  },
  {
    "text": "so suddenly it becomes easy. We're going to be a\nlittle bit less precise. We're not going be able to\ndistinguish between this",
    "start": "537810",
    "end": "544775"
  },
  {
    "text": "and this, but almost\nall the time-- like if this thing just\nhad a little bit of slack, it would be flexible. So we're going to ignore\nthe fact that occasionally",
    "start": "544775",
    "end": "551860"
  },
  {
    "text": "this thing is taut, and most\nof the time, this picture would be flexible most\nof the ways you draw it.",
    "start": "551860",
    "end": "558410"
  },
  {
    "text": " All right.",
    "start": "558410",
    "end": "564740"
  },
  {
    "text": "This is the idea of\ngeneric rigidity. ",
    "start": "564740",
    "end": "575899"
  },
  {
    "text": "We've talked about\ngeneric situations before in a single\nvertex piece patterns. We said, well,\ngenerically, no two angles",
    "start": "575900",
    "end": "582730"
  },
  {
    "text": "are ever going to be\nthe same if we just sort of perturb\neverything a little bit. We're going to take\nthe same idea here.",
    "start": "582730",
    "end": "588569"
  },
  {
    "text": "And so, for example,\nno two edge lengths are going to be\nthe same, but we're going to assume a lot more\nthan that to make life easier.",
    "start": "588570",
    "end": "595690"
  },
  {
    "text": " The general goal is to\nthink about the graph-- not",
    "start": "595690",
    "end": "603810"
  },
  {
    "text": "the linkage, and not\nthe configuration. ",
    "start": "603810",
    "end": "610990"
  },
  {
    "text": "I want to say that\nrigidity is usually a property of the graph. ",
    "start": "610990",
    "end": "622730"
  },
  {
    "text": "Most the time, it doesn't matter\nwhat your edge lengths are, it doesn't matter\nexactly how you draw it, it just matters how\nthings are connected.",
    "start": "622730",
    "end": "628920"
  },
  {
    "text": "Are they triangles? What is that\ncombinatorial structure?",
    "start": "628920",
    "end": "634149"
  },
  {
    "text": "The geometry falls out of it. I need one term so I can talk\nabout graphs in a realization.",
    "start": "634150",
    "end": "641150"
  },
  {
    "start": "641150",
    "end": "648460"
  },
  {
    "text": "This is just shorthand. It'll make my life a lot easier. It's a configuration of\na linkage of the graph.",
    "start": "648460",
    "end": "656130"
  },
  {
    "text": " We have three levels.",
    "start": "656130",
    "end": "661834"
  },
  {
    "text": "The graph, which is just the\ncombinatorial infrastructure, linkage, where you add\nthe edge lengths, and then a configuration\nwhere you draw it.",
    "start": "661834",
    "end": "667410"
  },
  {
    "text": "I'm going to jump all\nthe way to the end and say, if I\nstart with a graph, I want to go all the\nway to a configuration.",
    "start": "667410",
    "end": "672630"
  },
  {
    "text": "That's a realization. And so you can think\nof a realization as just some mapping.",
    "start": "672630",
    "end": "678600"
  },
  {
    "text": "It looks exactly\nlike a configuration. Just forget about\nthe edge lengths. You can put the vertices\nwherever you want,",
    "start": "678600",
    "end": "685100"
  },
  {
    "text": "because you haven't\nsaid what the edge lengths are supposed to be. So by taking a graph and\ndrawing it in the plane--",
    "start": "685100",
    "end": "691210"
  },
  {
    "text": "this is going to be our\nsituation-- you can compute what the edge lengths\nbecome, and then see, does it flex given\nthose edge lengths?",
    "start": "691210",
    "end": "697321"
  },
  {
    "text": "So as soon as you\ndraw in the plane, the edge lengths become fixed. But before that, they're\nfree to be whatever you want.",
    "start": "697321",
    "end": "702570"
  },
  {
    "text": "You just embed every\nvertex into the plane, and you get a realization. And now I want to\ndefine the notion",
    "start": "702570",
    "end": "708620"
  },
  {
    "text": "of a generic realization. And this is a subtle notion, and\nit's a little tricky to define.",
    "start": "708620",
    "end": "718470"
  },
  {
    "text": "So I'm going to\ngive the intuition. And I will give a definition--\nwe'll see another definition next class, in fact.",
    "start": "718470",
    "end": "723535"
  },
  {
    "text": " But it's a pretty intuitive\nnotion, especially",
    "start": "723535",
    "end": "732530"
  },
  {
    "text": "the way I'll be using it. I want to somehow\navoid things that are rare-- degenerate\nsituations.",
    "start": "732530",
    "end": "738680"
  },
  {
    "text": "And mathematically, that means\nlower dimensional situations. In general, a\nrealization-- remember,",
    "start": "738680",
    "end": "745430"
  },
  {
    "text": "we can think of it as a point\nin d times n dimensional space.",
    "start": "745430",
    "end": "754720"
  },
  {
    "text": "If n is a number vertices,\nd is the dimension of space that they live in. Then we could just write\ndown the coordinates",
    "start": "754720",
    "end": "760870"
  },
  {
    "text": "of every vertex separately. And the realization\nspace is just that. You can do whatever you want.",
    "start": "760870",
    "end": "766005"
  },
  {
    "text": " So we would like to throw away\nlower dimensional subspaces",
    "start": "766005",
    "end": "773740"
  },
  {
    "text": "of that that just\nmake our life easier. So for example, I'd like to say\nno three points are co-linear.",
    "start": "773740",
    "end": "781000"
  },
  {
    "text": " So if I take three\npoints in the plane,",
    "start": "781000",
    "end": "788060"
  },
  {
    "text": "it's pretty unlikely they\nlie on a common line. It happens with probability\nzero if I had random points.",
    "start": "788060",
    "end": "793990"
  },
  {
    "text": "Even if I didn't\nhave random points, I just take arbitrary\npoints and then perturb them a tiny bit in a random\nneighborhood-- little epsilon",
    "start": "793991",
    "end": "801270"
  },
  {
    "text": "disk-- then with probability\nzero, they will be aligned. So I can say a whole bunch of\nthings like this, maybe no four",
    "start": "801270",
    "end": "808550"
  },
  {
    "text": "points con-cyclic, which\nmeans lies in a common circle.",
    "start": "808550",
    "end": "815000"
  },
  {
    "text": "You know, Latin.  In 3D, you'd assume no\nfour points are coplanar.",
    "start": "815000",
    "end": "823000"
  },
  {
    "text": "All these sorts of things. In general, what\nwe can throw away",
    "start": "823000",
    "end": "828560"
  },
  {
    "text": "is any non-trivial\nrational algebraic--",
    "start": "828560",
    "end": "837445"
  },
  {
    "text": "how many adjectives\ncan I get in here? I think that's all\nof them-- equation. ",
    "start": "837445",
    "end": "849230"
  },
  {
    "text": "You can, for example,\nwrite the fact that three points\nlie in a common line as a polynomial with\ninteger coefficients--",
    "start": "849230",
    "end": "855880"
  },
  {
    "text": "or definitely\nrational coefficients. And generally, you take\nany polynomial you want, it explains some\ngeometric property.",
    "start": "855880",
    "end": "862220"
  },
  {
    "text": "If it has rational coefficients,\nand it's nontrivial, meaning that it's not always\ntrue-- so sometimes it's true,",
    "start": "862220",
    "end": "868300"
  },
  {
    "text": "sometimes it's false. That's all I mean\nhere-- then you can just-- suppose\nthat doesn't happen.",
    "start": "868300",
    "end": "875160"
  },
  {
    "text": "Because if you have\nan equation, that describes a lower\ndimensional space. You start with d\ntimes n dimensions.",
    "start": "875160",
    "end": "880320"
  },
  {
    "text": "If you add a constraint on the\ncoordinates of some vertices-- over here we have\nall the coordinates",
    "start": "880320",
    "end": "887770"
  },
  {
    "text": "of all the vertices. That's what we're thinking of. You take any\npolynomial over those. If that holds, then\nthat was degenerate,",
    "start": "887770",
    "end": "893370"
  },
  {
    "text": "and you can throw that away. And it may sound weird,\nbecause there are infinitely many of these equations,\nbut for the mathematicians,",
    "start": "893370",
    "end": "900190"
  },
  {
    "text": "they're only countably many. So if you take these spaces,\nyou take a whole bunch",
    "start": "900190",
    "end": "905250"
  },
  {
    "text": "of lower dimensional spaces\ntimes countable number, it's still lower dimensional. And so you can afford to\nthrow away all this stuff.",
    "start": "905250",
    "end": "911114"
  },
  {
    "text": "If that doesn't make sense,\ndon't worry about it. I will tell you various\ntimes when we're just assuming that we're generic.",
    "start": "911114",
    "end": "916959"
  },
  {
    "text": "It'll seem like magic,\nbecause whenever I get into a situation I\ndon't like, I'll just say, oh, but that's not generic. And we move on.",
    "start": "916960",
    "end": "922560"
  },
  {
    "text": "But this is the formal\nversion that makes that safe. We'll see another version\nthat's a little more intuitive",
    "start": "922560",
    "end": "928709"
  },
  {
    "text": "next time. But we need other concepts. So this it implies that\ndegenerate situations",
    "start": "928710",
    "end": "935424"
  },
  {
    "text": "are lower dimensional. ",
    "start": "935424",
    "end": "940860"
  },
  {
    "text": "And what other good\nfacts do we have? So lower dimensional\nmeans this is",
    "start": "940860",
    "end": "946650"
  },
  {
    "text": "going to happen with\nprobability zero, if you perturb your\nvertices a little bit. ",
    "start": "946650",
    "end": "954129"
  },
  {
    "text": "So in particular,\nthis scenario-- this is sort of the generic picture,\nwhere there's some slack here.",
    "start": "954130",
    "end": "960609"
  },
  {
    "text": "This is extremely rare,\nbecause in particular, we have four points co-linear. And that's not going to\nhappen in a generic situation.",
    "start": "960609",
    "end": "967210"
  },
  {
    "text": "So we would say that this\ngraph-- a bunch of triangles, plus these three bars\nconnecting the endpoints--",
    "start": "967210",
    "end": "972590"
  },
  {
    "text": "is generically flexible. Most of the time,\nit will be flexible.",
    "start": "972590",
    "end": "978040"
  },
  {
    "text": "And fun fact is\nthat for any graph--",
    "start": "978040",
    "end": "989732"
  },
  {
    "text": "and this is not\nobvious, but it's true-- it's either generically\nrigid or generically flexible.",
    "start": "989732",
    "end": "1004915"
  },
  {
    "start": "1004915",
    "end": "1014579"
  },
  {
    "text": "Generically rigid means that all\ngeneric realizations are rigid.",
    "start": "1014580",
    "end": "1019610"
  },
  {
    "start": "1019610",
    "end": "1029480"
  },
  {
    "text": "And generically flexible\nmeans all generic realizations",
    "start": "1029480",
    "end": "1036148"
  },
  {
    "text": "are flexible. I'm going to start abbreviating,\nbecause these adjectives get really long, especially\nwith the adverb form.",
    "start": "1036149",
    "end": "1045880"
  },
  {
    "text": "So when I said\nrigidity is usually a property of the graph,\nthis is what I meant.",
    "start": "1045880",
    "end": "1052660"
  },
  {
    "text": "Either you take all the generic\nrealizations of your graph, and they're either all\nrigid or all flexible. There's going to be the lower\ndimensional subsets where",
    "start": "1052660",
    "end": "1059721"
  },
  {
    "text": "maybe it's the other way around. I'll give you some\nexamples of that. ",
    "start": "1059721",
    "end": "1066049"
  },
  {
    "text": "So here-- what the\nheck did I draw?",
    "start": "1066050",
    "end": "1074680"
  },
  {
    "text": "That's funny. One of the edges moved on me. ",
    "start": "1074680",
    "end": "1080780"
  },
  {
    "text": "If I take a picture\nlike this-- OK, this is flexible, because\nI have a quadrilateral here",
    "start": "1080780",
    "end": "1087888"
  },
  {
    "text": "that can flex independent\nof the triangles. But suppose I add a bar between\nthis vertex and this vertex",
    "start": "1087889",
    "end": "1093830"
  },
  {
    "text": "which somehow connects the two\nsides of that quadrilateral. When this special\ncase, the way I",
    "start": "1093830",
    "end": "1100945"
  },
  {
    "text": "drew, where these triangles\nare identical and this is a nice rectangle,\nthis thing is flexible. ",
    "start": "1100945",
    "end": "1108419"
  },
  {
    "text": "You take this triangle, and\nI want to flex the quad,",
    "start": "1108420",
    "end": "1114290"
  },
  {
    "text": "so if I rotate the whole thing\nlike this-- I think it works.",
    "start": "1114290",
    "end": "1119930"
  },
  {
    "text": " It twists at the same time.",
    "start": "1119930",
    "end": "1126117"
  },
  {
    "text": "Yeah, it's a little hard to see. But because these\nguys are all parallel, this thing can keep them\nall parallel, I think,",
    "start": "1126117",
    "end": "1132711"
  },
  {
    "text": "and keep all the\ndistances the same. AUDIENCE: All of them are\nparallel and the same length? PROFESSOR: All parallel\nand the same length.",
    "start": "1132711",
    "end": "1138334"
  },
  {
    "text": "It's necessary for this to work. But you take a generic drawing--\nif I perturb this at all, it will be rigid.",
    "start": "1138334",
    "end": "1144610"
  },
  {
    "text": "so this is rarely flexible,\nbut generically it's rigid.",
    "start": "1144610",
    "end": "1154273"
  },
  {
    "text": "And I have an example\nof the reverse. ",
    "start": "1154274",
    "end": "1167289"
  },
  {
    "text": "The way I've drawn this, where\nall these guys in extension meet up, and all these guys\nare parallel, and so on,",
    "start": "1167290",
    "end": "1175200"
  },
  {
    "text": "you can check--\nit's a little hard to see-- but it's rarely rigid.",
    "start": "1175200",
    "end": "1180659"
  },
  {
    "text": "In this case it's rigid, but\ngenerically, it's flexible. ",
    "start": "1180660",
    "end": "1189380"
  },
  {
    "text": "I wouldn't take this on faith. For me to check this, I had\nto constructed in Cinderella,",
    "start": "1189380",
    "end": "1195190"
  },
  {
    "text": "and then see that it moves. And when these things\nare almost parallel, it moves just a little bit. And you can see that\nin the limit, when",
    "start": "1195190",
    "end": "1201075"
  },
  {
    "text": "all these things line up\nnicely, it doesn't move at all. The point is that there\nare these exceptions.",
    "start": "1201075",
    "end": "1207150"
  },
  {
    "text": "That's all you need to believe. But most the time, we're\ngoing to get the right answer. And so, the rest\nof this class is",
    "start": "1207150",
    "end": "1213370"
  },
  {
    "text": "about characterizing when\na graph is generically rigid or generically flexible. It's a nice problem,\nbecause it just depends on the\ncombinatorial structure,",
    "start": "1213370",
    "end": "1219790"
  },
  {
    "text": "but occasionally, it will\ngive the wrong answer. If you've set things up\nwith very special geometry, it might be the\nother way around.",
    "start": "1219790",
    "end": "1225990"
  },
  {
    "text": "Question? AUDIENCE: Is it fair to think\nthe rigidity is happening right before it no longer works?",
    "start": "1225990",
    "end": "1233420"
  },
  {
    "text": "PROFESSOR: Yeah. Right. The rigidity is kind\nof happening right before it breaks. In some sense, there is a\nnontrivial motion there,",
    "start": "1233420",
    "end": "1240130"
  },
  {
    "text": "it just happens\nto be super short. It's hard to define\nthat formally, but intuitively, that's\nwhat's happening.",
    "start": "1240130",
    "end": "1246580"
  },
  {
    "text": "And you can think of this thing\nas being a little bit wobbly,",
    "start": "1246580",
    "end": "1251710"
  },
  {
    "text": "but not technically flexible. There's actually a formal\nnotion of wobbly in the rigidity literature, which we probably\nwill talk about next class.",
    "start": "1251710",
    "end": "1262539"
  },
  {
    "text": "Would this be wobbly? Probably. I'd have to think about it. Wobbly is a computable notion.",
    "start": "1262540",
    "end": "1268909"
  },
  {
    "text": "It's nice. So rigidity theory is\nactually pretty old. In the mechanical, structural\nengineering worlds,",
    "start": "1268910",
    "end": "1276150"
  },
  {
    "text": "it goes back to Cremona\nIn the 17th, 18th century.",
    "start": "1276150",
    "end": "1281910"
  },
  {
    "text": "The mathematics\neven is pretty old. The next big theorem we'll\ntalk about is from 1911.",
    "start": "1281910",
    "end": "1288520"
  },
  {
    "text": "It's probably one of the\nearliest formal mathematical treatments, and it started to\naddress exactly this issue.",
    "start": "1288520",
    "end": "1295280"
  },
  {
    "text": "In two dimensions,\nwhich graphs are rigid, which are flexible\nin the generic sense?",
    "start": "1295280",
    "end": "1300420"
  },
  {
    "text": "It's become pretty popular and\ninteresting in the last 10, 20 years, and a\nlot more action--",
    "start": "1300420",
    "end": "1309730"
  },
  {
    "text": "a lot more theorems and whatnot. Today we're going to talk\nmostly about old things.",
    "start": "1309730",
    "end": "1315560"
  },
  {
    "text": "Next class we'll do some newer\nthings in the rigidity world. I got interested in rigidity\nbecause it turned out",
    "start": "1315560",
    "end": "1321870"
  },
  {
    "text": "to be really important\nfor folding linkages. Not just telling whether\na linkage is rigid,",
    "start": "1321870",
    "end": "1327560"
  },
  {
    "text": "which is important for things\nlike building rigid structures, but for actually folding\nthings and showing",
    "start": "1327560",
    "end": "1333820"
  },
  {
    "text": "that you can fold the linkage\nfrom any configuration to any other. Turns out rigidity is\nreally useful for that.",
    "start": "1333820",
    "end": "1340410"
  },
  {
    "text": "And that's not at all obvious. It's kind of a surprise,\nand a fun surprise.",
    "start": "1340410",
    "end": "1346679"
  },
  {
    "text": "We'll be talking\nabout that next class. Today, sort of classic\nstuff-- understanding when 2D graphs are rigid.",
    "start": "1346680",
    "end": "1353820"
  },
  {
    "text": "I'll give you an idea\nwhy 3D is much harder.  OK, we need one more notion.",
    "start": "1353820",
    "end": "1362270"
  },
  {
    "text": "This is a real long-winded\nthing-- minimally generically rigid graph.",
    "start": "1362270",
    "end": "1372440"
  },
  {
    "text": " So the new addition\nhere is minimally. This is going to be some\ngenerically rigid graph,",
    "start": "1372440",
    "end": "1384710"
  },
  {
    "text": "and it also has\nthe property that removing any edge makes the\ngraph generically flexible.",
    "start": "1384710",
    "end": "1393220"
  },
  {
    "start": "1393220",
    "end": "1399072"
  },
  {
    "text": "So it's minimal in\nthe sense that I can't get rid of any edges and\nstill be generically rigid.",
    "start": "1399072",
    "end": "1404550"
  },
  {
    "text": "So the idea is,\nlet's characterize minimally generically\nrigid graphs. If I can characterize those,\nthen the generically rigid ones",
    "start": "1404550",
    "end": "1411020"
  },
  {
    "text": "are just those plus\nsome more edges. You could throw in\nextra edges-- it only makes things more rigid. It's more constraints.",
    "start": "1411020",
    "end": "1417029"
  },
  {
    "text": "But I'm really interested\nin the boundary between generically region\nand generically flexible,",
    "start": "1417030",
    "end": "1422180"
  },
  {
    "text": "and this is exactly the\nboundary on the rigid side-- just barely rigid. ",
    "start": "1422180",
    "end": "1428980"
  },
  {
    "text": "So first thing-- if you've\ndone structural engineering,",
    "start": "1428980",
    "end": "1435320"
  },
  {
    "text": "this will start to\nlook familiar-- is how many edges should a\nminimally generically rigid",
    "start": "1435320",
    "end": "1443950"
  },
  {
    "text": "graph have? And we can think of this in\na very intuitive way, which",
    "start": "1443950",
    "end": "1448980"
  },
  {
    "text": "is-- let's see. If I don't have any\nedges, every vertex",
    "start": "1448980",
    "end": "1455120"
  },
  {
    "text": "can float around separately. So the number of\ndegrees of freedom-- the dimensionality of my\nrealization space, in fact--",
    "start": "1455120",
    "end": "1462660"
  },
  {
    "text": "is in two dimensions\ntwo times m. I'm going to do to 2D first.",
    "start": "1462660",
    "end": "1468090"
  },
  {
    "text": "Every vertex has two\ndegrees of freedom. Now I would like to reduce the\nnumber of degrees of freedom",
    "start": "1468090",
    "end": "1473690"
  },
  {
    "text": "to what number?  AUDIENCE: Zero.",
    "start": "1473690",
    "end": "1479190"
  },
  {
    "text": "PROFESSOR: Zero. It's often a good answer, but\nsadly not the right one here. AUDIENCE: Two. PROFESSOR: Two.",
    "start": "1479190",
    "end": "1484470"
  },
  {
    "text": "Close. AUDIENCE: Three. PROFESSOR: Three. Right guess. We'll just keep trying\nall the integers.",
    "start": "1484470",
    "end": "1490055"
  },
  {
    "text": " I mentioned this at\nthe very beginning that if the best\nwe could hope for",
    "start": "1490055",
    "end": "1495889"
  },
  {
    "text": "is that there are three\ndegrees of freedom, we'll never be able to get\nrid of the two translation degrees and the one rotation\ndegree in two dimensions.",
    "start": "1495889",
    "end": "1503029"
  },
  {
    "text": "In general, it is d\ntimes d plus 1 over 2 is the number of dimensions of\nrigid motions in d dimensions.",
    "start": "1503030",
    "end": "1512130"
  },
  {
    "text": "And here we start with dn. So that's in d dimensions.",
    "start": "1512130",
    "end": "1517220"
  },
  {
    "text": "This is really how many\nedges you should have, because if I have\nexactly 2n minus 3 edges,",
    "start": "1517220",
    "end": "1523150"
  },
  {
    "text": "I will have started with\n2n degrees of freedom. Every edge that I\nadd is one equation,",
    "start": "1523150",
    "end": "1528230"
  },
  {
    "text": "so it should reduce\nmy dimension by one in the generic sense--\nit's a generic case--",
    "start": "1528230",
    "end": "1533580"
  },
  {
    "text": "and the best I can hope for\nis to get down to three. If you put in more edges,\nyou won't get any more rigid. I mean, you'll still be rigid,\nbut if I want the minimal case,",
    "start": "1533580",
    "end": "1541580"
  },
  {
    "text": "this is really the\nbest I should hope for. And this is just a rough sketch. This is proved more\nformally in the notes here,",
    "start": "1541580",
    "end": "1548530"
  },
  {
    "text": "but this really\nis a formal thing. Again, if you take some\npolynomial equation,",
    "start": "1548530",
    "end": "1553800"
  },
  {
    "text": "most of the time\nit's going to define a space that is one\ndimension lower.",
    "start": "1553800",
    "end": "1560370"
  },
  {
    "text": "So in the generic situation,\nevery equation you add will remove exactly\none degree of freedom.",
    "start": "1560370",
    "end": "1566062"
  },
  {
    "text": "There are rare scenarios\nwhere it doesn't remove any, and they're rare scenarios\nwhere it removes more than one,",
    "start": "1566062",
    "end": "1571467"
  },
  {
    "text": "and I have some\npictures of them here. But most of the\ntime, this is right. And we are in the\ngeneric case, so most",
    "start": "1571467",
    "end": "1577630"
  },
  {
    "text": "the time is all we need. So this gives us an idea. And about how many people have\nheard of 2n minus 3 before",
    "start": "1577630",
    "end": "1585690"
  },
  {
    "text": "in this structural\nengineering context? A few. And sometimes, people\nend the story there.",
    "start": "1585690",
    "end": "1591770"
  },
  {
    "text": "But this is not enough\nto be generically rigid. This is a necessary condition,\nbut it's not sufficient. ",
    "start": "1591770",
    "end": "1599200"
  },
  {
    "text": "And you can check\nall these examples. It should match up. I haven't checked them myself. ",
    "start": "1599200",
    "end": "1617830"
  },
  {
    "text": "All right. Let's start\ncharacterizing this thing. ",
    "start": "1617830",
    "end": "1631640"
  },
  {
    "text": "We're going to see two\ncharacterizations of minimally generically rigid graphs.",
    "start": "1631640",
    "end": "1637620"
  },
  {
    "text": "First one is very intuitive,\nnice to work with by hand, but doesn't-- at least\nas far as I can tell,",
    "start": "1637620",
    "end": "1643493"
  },
  {
    "text": "it doesn't turn\ninto an algorithm. I think we've tried in\npast years, but it has not.",
    "start": "1643494",
    "end": "1650370"
  },
  {
    "text": "And the other one\nis more algorithmic, but a little bit hard to intuit.",
    "start": "1650370",
    "end": "1655750"
  },
  {
    "start": "1655750",
    "end": "1673380"
  },
  {
    "text": "So this is what both\ntheorems look like. A graph is minimally\ngenerically rigid in 2D if and only if-- for Henneberg,\nthis is from the 1911 result--",
    "start": "1673380",
    "end": "1685120"
  },
  {
    "text": "it can be built. ",
    "start": "1685120",
    "end": "1705276"
  },
  {
    "text": "Oh, by the way. Maybe the reason people\nhaven't seen 2n minus three is because they're\nused to the 3D case. There it's 2n minus 6.",
    "start": "1705276",
    "end": "1710910"
  },
  {
    "text": "How many people have\nseen 3n minus 6? Same people. All right. Thought I'd try.",
    "start": "1710910",
    "end": "1717390"
  },
  {
    "text": "All right. You guys should take\nstructural engineering. ",
    "start": "1717390",
    "end": "1728370"
  },
  {
    "text": "So this is the form\nof the theorem. The idea is we're starting\nwith a single edge connecting",
    "start": "1728370",
    "end": "1733600"
  },
  {
    "text": "two vertices, which is\nminimally generically rigid. All it can do is\nrotate and translate.",
    "start": "1733600",
    "end": "1738960"
  },
  {
    "text": "And the claim is whatever\nyou want to build, I can build it using just\ntwo types of operations.",
    "start": "1738960",
    "end": "1746990"
  },
  {
    "text": "First type is I take something\nthat I've already built. I add one new vertex,\nand I attach it",
    "start": "1746990",
    "end": "1754840"
  },
  {
    "text": "to two existing vertices. So everything in\nthe circle is old,",
    "start": "1754840",
    "end": "1760890"
  },
  {
    "text": "and the new thing is that\nvertex and those two guys. AUDIENCE: Everything\nis old and rigid.",
    "start": "1760890",
    "end": "1767283"
  },
  {
    "text": "PROFESSOR: Yeah. This is something\nthat you could already build from this-- I\nmean, in particular, that will be minimally\ngenerically rigid.",
    "start": "1767284",
    "end": "1773530"
  },
  {
    "text": "But that's not what\nwe're saying right now. You start from the edge, and\nyou just keep doing this. So I can turn it into a\ntriangle, for example.",
    "start": "1773530",
    "end": "1781030"
  },
  {
    "text": "Just keep taking things that\nI already know how to build, add one vertex and two edges.",
    "start": "1781030",
    "end": "1786730"
  },
  {
    "text": "The other type of\noperation, I take something I've already built. I take three of the\nvertices in there,",
    "start": "1786730",
    "end": "1795220"
  },
  {
    "text": "and there's already an edge\nbetween them-- at least one.",
    "start": "1795220",
    "end": "1801010"
  },
  {
    "text": "There might be more. And I add three edges\nconnecting to a new vertex,",
    "start": "1801010",
    "end": "1808360"
  },
  {
    "text": "and I delete that old edge. So I add three, I remove one.",
    "start": "1808360",
    "end": "1817130"
  },
  {
    "text": "Either I add two\nand remove zero, or I add three and remove one. This should make\nsense, because if we're",
    "start": "1817130",
    "end": "1822550"
  },
  {
    "text": "going to get about\ntwo edges per vertex, this is just the starting case.",
    "start": "1822550",
    "end": "1828070"
  },
  {
    "text": "If I want two edges\nper vertex, I really should only be adding two edges\nfor every vertex that I add.",
    "start": "1828070",
    "end": "1834238"
  },
  {
    "text": "So these are two\nthings you could do. And you could imagine\na more complicated ones where I add four\nedges, remove two.",
    "start": "1834239",
    "end": "1839410"
  },
  {
    "text": "You don't have to\nworry about that. You only have to worry\nabout these two scenarios. That's enough to\nbuild everything.",
    "start": "1839410",
    "end": "1844970"
  },
  {
    "text": " Maybe we can do an example\nbefore we prove this theorem.",
    "start": "1844970",
    "end": "1856270"
  },
  {
    "text": "I'm not going to\nprove all the parts. I'm going to give a sketch. ",
    "start": "1856270",
    "end": "1863960"
  },
  {
    "text": "In particular, to prove\nit, I need technology that we'll develop next class. So it's a little hard to\ndo in a self-contained way.",
    "start": "1863960",
    "end": "1871250"
  },
  {
    "text": "But let's start with\nan easy example. ",
    "start": "1871250",
    "end": "1878637"
  },
  {
    "text": "You may remember this one. When I drew everything\nparallel and the triangles were identical, then\nthis thing was flexible.",
    "start": "1878637",
    "end": "1885360"
  },
  {
    "text": "But most of the time,\ngenerically, this is rigid, and we can prove that by\ndoing these operations.",
    "start": "1885360",
    "end": "1891365"
  },
  {
    "text": " So somehow I start with an edge.",
    "start": "1891365",
    "end": "1897900"
  },
  {
    "text": "I have to do operations\nto end up here. That's a little hard to-- yeah. Question. AUDIENCE: Does the\nremoved edge have",
    "start": "1897900",
    "end": "1904322"
  },
  {
    "text": "to be between two of\nthe three vertices? PROFESSOR: The removed edge\nhas to be among those three",
    "start": "1904322",
    "end": "1909620"
  },
  {
    "text": "vertices. And there might\nbe more than one. You would just\nremove one of them. You get to remove\nwhichever one you want.",
    "start": "1909620",
    "end": "1915390"
  },
  {
    "text": "Good question. So if we were lucky\nand adventurous,",
    "start": "1915390",
    "end": "1922540"
  },
  {
    "text": "we could just try going here\nand hope that we end up there. But we don't want to draw all\nthe possible things we could",
    "start": "1922540",
    "end": "1929054"
  },
  {
    "text": "make, because\nthat's all minimally generically rigid graphs. It's a lot easier\nto think backwards,",
    "start": "1929054",
    "end": "1934830"
  },
  {
    "text": "as often the case in puzzles. If I want to make this, what was\nthe last operation that I did?",
    "start": "1934830",
    "end": "1943000"
  },
  {
    "text": "It must have been\none of these two. And every vertex here\nhas degree three, has three incident edges.",
    "start": "1943000",
    "end": "1949210"
  },
  {
    "text": "So probably it was\na Type II operation. So there's going to be\na Type II operation that",
    "start": "1949210",
    "end": "1954530"
  },
  {
    "text": "results in this thing. Let's say, I don't\nknow, this vertex. And here I still have to\nbe a little bit lucky,",
    "start": "1954530",
    "end": "1959990"
  },
  {
    "text": "but it's not quite as lucky. OK so I'm going to\ntry not to cheat here.",
    "start": "1959990",
    "end": "1970590"
  },
  {
    "text": "So we remove that\nvertex, and we also remove some edge\namong these guys.",
    "start": "1970590",
    "end": "1976500"
  },
  {
    "text": "So I'm going to guess\nthat I removed that edge.",
    "start": "1976500",
    "end": "1981531"
  },
  {
    "text": "I think that'll work. I have to be careful. I could have removed this edge.",
    "start": "1981531",
    "end": "1988082"
  },
  {
    "text": "There are two cases.  I'll explain later what\nwe need to check here.",
    "start": "1988082",
    "end": "1994490"
  },
  {
    "text": "Well, now I see a\nnice Type I operation. I'll just get rid\nof that vertex.",
    "start": "1994490",
    "end": "2000500"
  },
  {
    "text": "Good. So Type I operation. I'm left with this, and I see\ntwo more Type I operations.",
    "start": "2000500",
    "end": "2009430"
  },
  {
    "text": "I'll do them one at a time. ",
    "start": "2009430",
    "end": "2018840"
  },
  {
    "text": "Ta da. I think that's right. We can play it forwards\njust to double check, but I started with an edge.",
    "start": "2018840",
    "end": "2024704"
  },
  {
    "text": "I added one vertex connected\nto the existing two. I added another vertex\nconnecting to two existing.",
    "start": "2024704",
    "end": "2030080"
  },
  {
    "text": "I added another vertex\nconnected to two existing. And then the tricky one--\nI added this vertex here,",
    "start": "2030080",
    "end": "2035650"
  },
  {
    "text": "I connected it to these three,\nand I removed this edge. So because this works\nforwards, this theorem",
    "start": "2035650",
    "end": "2042610"
  },
  {
    "text": "tells us that graph is\nminimally generically rigid. Now we have a way to test. Now, the algorithm\nis a little tricky,",
    "start": "2042610",
    "end": "2048399"
  },
  {
    "text": "because I had a choice here. In this case, it didn't matter. In the notes, there's\nan example where",
    "start": "2048400",
    "end": "2053462"
  },
  {
    "text": "if you do the wrong\nchoice-- you go backwards and you add in the wrong\nedge-- it doesn't work.",
    "start": "2053463",
    "end": "2059344"
  },
  {
    "text": "You don't become minimally\ngenerically rigid, essentially because one part\ngets too many edges, and another part has too few.",
    "start": "2059344",
    "end": "2065770"
  },
  {
    "text": "Here, I got it balanced,\nand it worked out. And when you're good\nat visualizing these, this is an easy way-- like\non your problem set two--",
    "start": "2065770",
    "end": "2072169"
  },
  {
    "text": "this is an easy way to check,\nto prove to me that things are minimally generically rigid. Just have to be\na little careful.",
    "start": "2072170",
    "end": "2078469"
  },
  {
    "text": "If you fail, and you fail to\nget back to start in this way, that doesn't tell you much.",
    "start": "2078469",
    "end": "2084339"
  },
  {
    "text": "You just may have messed up. You may have made the\nwrong choice along the way. But when it works,\nyou know that it",
    "start": "2084340",
    "end": "2090190"
  },
  {
    "text": "works, because you\ncan play it forwards. AUDIENCE: [INAUDIBLE] ",
    "start": "2090190",
    "end": "2099244"
  },
  {
    "text": "PROFESSOR: Yeah. By forward, I mean starting\nfrom the single edge and following the arrows in\nthe way that they're pointing.",
    "start": "2099244",
    "end": "2105260"
  },
  {
    "text": "So going backwards is a little\nbit of a lucky black art, whatever. But once you succeed, you\ncan play it forwards and say,",
    "start": "2105260",
    "end": "2112109"
  },
  {
    "text": "oh yeah, that clearly works. Another question. AUDIENCE: Do you know if it\nmatters whether you do Type I",
    "start": "2112110",
    "end": "2118103"
  },
  {
    "text": "or Type II operations\nfirst, if you have choices? PROFESSOR: Does it matter\nType I versus Type II? I don't think it matters in\ngeneral, just with Type II,",
    "start": "2118103",
    "end": "2125530"
  },
  {
    "text": "you have to be careful. Type one, I like\nto do immediately, because there's no choice. You just do them.",
    "start": "2125530",
    "end": "2131420"
  },
  {
    "text": "Type Is are always safe. Type II, it depends which edge. And I should call these\nanti-type II operations",
    "start": "2131420",
    "end": "2137010"
  },
  {
    "text": "when you go backwards. Anti-Type II, it depends\nwhich edge you add.",
    "start": "2137010",
    "end": "2142050"
  },
  {
    "text": "So I like to do Type Is\nwhenever I have the chance. ",
    "start": "2142050",
    "end": "2147530"
  },
  {
    "text": "All right. Let me sketch a proof\nof this theorem.",
    "start": "2147530",
    "end": "2152680"
  },
  {
    "start": "2152680",
    "end": "2168790"
  },
  {
    "text": "There are two directions\nwe need to prove. We need to prove that if\nwe build such a thing,",
    "start": "2168790",
    "end": "2175240"
  },
  {
    "text": "it is minimally\ngenerically rigid. I'm going to start with that. And the other one\nwe need to show is that everything can\nbe built in this way.",
    "start": "2175240",
    "end": "2182180"
  },
  {
    "text": "The first direction\nis not too hard, although it's still not trivial.",
    "start": "2182180",
    "end": "2187330"
  },
  {
    "text": "And this direction works\nin any dimension, in fact. It doesn't need to\nbe two dimensional.",
    "start": "2187330",
    "end": "2192760"
  },
  {
    "text": "It's the other\ndirection that's harder. ",
    "start": "2192760",
    "end": "2204680"
  },
  {
    "text": "So let's suppose I have a\ngenerically rigid graph,",
    "start": "2204680",
    "end": "2210150"
  },
  {
    "text": "and I do a Type I operation.  And I get a graph call G prime.",
    "start": "2210150",
    "end": "2216890"
  },
  {
    "start": "2216890",
    "end": "2224200"
  },
  {
    "text": "I claim that the resulting\ngraph will also be generically rigid and vice versa.",
    "start": "2224200",
    "end": "2230490"
  },
  {
    "text": "So doing a Type I operation does\nnot affect generic rigidity. This may be obvious, but\nlet me explain it to you.",
    "start": "2230490",
    "end": "2241380"
  },
  {
    "text": "There's again two directions\nyou need to prove. And let's start with-- which\none do I start with?-- this way.",
    "start": "2241380",
    "end": "2248480"
  },
  {
    "text": " So I want to show that if\nthe new graph is rigid,",
    "start": "2248480",
    "end": "2256230"
  },
  {
    "text": "than the old graph is rigid. An easier way to\nthink about that is if the old graph\nis flexible, then",
    "start": "2256230",
    "end": "2263370"
  },
  {
    "text": "the new graph\nshould be flexible. Hm. That sounds all right. So I have G flexible\ngenerically.",
    "start": "2263370",
    "end": "2273260"
  },
  {
    "text": "I want to show that\nG prime is flexible. So here's G-- what I called old\nbefore-- and it flexes somehow.",
    "start": "2273260",
    "end": "2283890"
  },
  {
    "text": "And now I have this\nguy that I add on. These bars are rigid, but it\ncan come along for the ride.",
    "start": "2283890",
    "end": "2291900"
  },
  {
    "text": "If I move these two\npoints somewhat, I'll still be able\nto draw this guy.",
    "start": "2291900",
    "end": "2297119"
  },
  {
    "text": "It is defined by the\nintersection of two circles, one circle centered here,\nanother circle centered here.",
    "start": "2297120",
    "end": "2305655"
  },
  {
    "text": "Those two circles actually\nintersect in two points. But if I move these\nguys continuously,",
    "start": "2305655",
    "end": "2310760"
  },
  {
    "text": "this guy can track continuously\nalong the intersection of those two circles, except\nin one special case, which",
    "start": "2310760",
    "end": "2319660"
  },
  {
    "text": "is when the three\npoints are collinear. So if this is the old,\nand here's my new guy,",
    "start": "2319660",
    "end": "2325410"
  },
  {
    "text": "and this is taut, and these\nguys move away from each other, then this guy fails to exist.",
    "start": "2325410",
    "end": "2331070"
  },
  {
    "text": "Boom. But that's not generic. So here's where I\nget these genericity.",
    "start": "2331070",
    "end": "2336599"
  },
  {
    "text": "This in particular would\nhave three points collinear. So that's forbidden. So in a generic situation-- and\nI should be putting generically",
    "start": "2336600",
    "end": "2344310"
  },
  {
    "text": "here-- if I can generically\nflex the original graph, I'll still be able\nto generically flex",
    "start": "2344310",
    "end": "2349740"
  },
  {
    "text": "after I add the vertex. Cool. That's pretty easy. ",
    "start": "2349740",
    "end": "2356355"
  },
  {
    "text": "The other direction-- I\nmean, it's almost the same. So now if I have\nG rigid, I claim",
    "start": "2356355",
    "end": "2362609"
  },
  {
    "text": "that G prime is generically\nrigid-- I should be putting generic everywhere here-- for\nessentially the same reason.",
    "start": "2362610",
    "end": "2372060"
  },
  {
    "text": "If I can't move these\nvertices-- this vertex is again defined by the\nintersection of two circles. It could be here or\nhere, but we're only",
    "start": "2372060",
    "end": "2378700"
  },
  {
    "text": "thinking about\ncontinuous motions. Motion means continuous. I can't instantaneously\njump over here.",
    "start": "2378700",
    "end": "2384260"
  },
  {
    "text": "I have to stay right there. These guys don't move-- and I\nmean that in a relative sense. Of course, they can\ntranslate and rotate--",
    "start": "2384260",
    "end": "2390890"
  },
  {
    "text": "but if they don't move\naway from each other, this guy can't do\nanything interesting.",
    "start": "2390890",
    "end": "2397970"
  },
  {
    "text": "So if the original thing is\nrigid, the new thing is rigid. I'll start going a little\nfaster, but that's the idea.",
    "start": "2397970",
    "end": "2406190"
  },
  {
    "text": "This is a start, but\nwhat we really care about is minimal generic rigidity. ",
    "start": "2406190",
    "end": "2429650"
  },
  {
    "text": "And this is also if and only if. If your original graph is\nminimally generically rigid,",
    "start": "2429650",
    "end": "2436650"
  },
  {
    "text": "then your new graph\nfrom a Type I operation will also be minimally\ngenerically rigid, and vice versa.",
    "start": "2436650",
    "end": "2442330"
  },
  {
    "text": "So minimality is also preserved. So this is a super\nsafe operation.",
    "start": "2442330",
    "end": "2448410"
  },
  {
    "text": "I won't prove this. But it's almost the same\nproof, except instead of thinking about G, you\nthink about G minus 1 edge,",
    "start": "2448410",
    "end": "2454659"
  },
  {
    "text": "because that's what you worry\nabout in the minimal situation. We've already shown that\nthe generic rigidity part is preserved\nin either direction,",
    "start": "2454659",
    "end": "2461710"
  },
  {
    "text": "doing Type I or anti-Type I.\nBut for minimality right here,",
    "start": "2461710",
    "end": "2468310"
  },
  {
    "text": "we want to think about\nremoving any edge, and whether that gives\ngeneric flexibility. So we just do the same thing,\nbut with G minus e, and G prime",
    "start": "2468310",
    "end": "2475730"
  },
  {
    "text": "minus e, where e is\nsomewhere in the old part. And it's the same argument. ",
    "start": "2475730",
    "end": "2484109"
  },
  {
    "text": "And so you'd write\nsubstitute all instances of G with G minus e.",
    "start": "2484110",
    "end": "2491010"
  },
  {
    "text": "That's pretty old and geeky. Probably no one knows what that\nmeans, but you get the idea.",
    "start": "2491010",
    "end": "2498595"
  },
  {
    "text": "All right. Now, we get to\nType II operations.",
    "start": "2498595",
    "end": "2503980"
  },
  {
    "text": "It's a little more subtle. if I said this with Type\nII, it would be false. So life it's harder.",
    "start": "2503980",
    "end": "2510109"
  },
  {
    "text": "And this is all about the fact\nthat anti-Type II operations are not unique, and you've got\nto be careful in how you do it.",
    "start": "2510110",
    "end": "2516581"
  },
  {
    "text": "It does work in one direction. ",
    "start": "2516581",
    "end": "2523160"
  },
  {
    "text": "If the input is minimally\ngenerically rigid, then the new one will be. ",
    "start": "2523160",
    "end": "2540070"
  },
  {
    "text": "But it doesn't work in\nthe other direction. Now at this point, I'm\nnot going to prove this. This is actually a\nlot harder to prove.",
    "start": "2540070",
    "end": "2546490"
  },
  {
    "text": "At least, I don't know of a\nsimple, straightforward proof like this one, where\nyou just construct it. The easy way I know how to\nprove it uses next class.",
    "start": "2546490",
    "end": "2555610"
  },
  {
    "text": "So we're not going\nto bother proving it. It should be intuitive enough. Certainly in thinking\nabout degrees of freedom",
    "start": "2555610",
    "end": "2561720"
  },
  {
    "text": "it's correct, but you've got\nto be more careful than that. ",
    "start": "2561720",
    "end": "2567281"
  },
  {
    "text": "I want to talk more about\nthe reverse direction. ",
    "start": "2567281",
    "end": "2573054"
  },
  {
    "text": "At this point, by\nthe way, we have proved one direction\nof our big theorem.",
    "start": "2573054",
    "end": "2578602"
  },
  {
    "text": "We've proved that if you can\nbuild something with these two operations, it is minimally\ngenerically rigid,",
    "start": "2578602",
    "end": "2584070"
  },
  {
    "text": "because when we start\nout with an edge, this is the base case\nof our induction.",
    "start": "2584070",
    "end": "2589470"
  },
  {
    "text": "This guy is minimally\ngenerically rigid. And then every operation\nI do, I know I'm safe,",
    "start": "2589470",
    "end": "2594559"
  },
  {
    "text": "because I start with G being\nminimally generically rigid. If I do a Type I\noperation, it will still be minimally generically rigid,\nand same thing for Type II",
    "start": "2594560",
    "end": "2602420"
  },
  {
    "text": "operations. So in that direction,\nwe're golden. But I'd really like\nto know, is there",
    "start": "2602420",
    "end": "2609910"
  },
  {
    "text": "some converse of three,\nthis third property? And I will tell you a converse\nof the third property.",
    "start": "2609910",
    "end": "2617450"
  },
  {
    "text": "Suppose I have a minimally\ngenerically rigid graph G",
    "start": "2617450",
    "end": "2625640"
  },
  {
    "text": "prime. And I'm not assuming that it's\nmade from a Type II operation yet.",
    "start": "2625640",
    "end": "2631460"
  },
  {
    "text": "But suppose it has\na degree-3 vertex-- vertex with three\nincident edges.",
    "start": "2631460",
    "end": "2637175"
  },
  {
    "start": "2637175",
    "end": "2642290"
  },
  {
    "text": "Then G prime is the result\nof a Type II operation",
    "start": "2642290",
    "end": "2658330"
  },
  {
    "text": "of some minimally generically\nrigid graph G. So this is",
    "start": "2658330",
    "end": "2673920"
  },
  {
    "text": "saying that there is hope\nin working backwards.",
    "start": "2673920",
    "end": "2679450"
  },
  {
    "text": "Here I had two choices\nof Type II operations. I think in this case, it\ndidn't actually matter, but in general, it matters\nwhich one you choose.",
    "start": "2679450",
    "end": "2686330"
  },
  {
    "text": "And this is saying\nthere is a choice, there is an anti-Type II\noperation, a backwards II",
    "start": "2686330",
    "end": "2694140"
  },
  {
    "text": "operation, that\nresults in something that is minimally\ngenerically rigid. And if it's minimally\ngenerically rigid,",
    "start": "2694140",
    "end": "2700310"
  },
  {
    "text": "by induction, I\ncan keep going on. And so eventually I\nwill get back to start. And this is what we\nneed to show in order",
    "start": "2700310",
    "end": "2707780"
  },
  {
    "text": "to believe one half\nof this theorem that if your thing is\nminimally generically rigid, there is a way to\nbuild it like this.",
    "start": "2707780",
    "end": "2716030"
  },
  {
    "text": "And the way you build it is if\nthere's a Type I operation-- anti-Type I operation do that. If there's an anti-Type II\noperation, do the right one.",
    "start": "2716030",
    "end": "2725320"
  },
  {
    "text": "Let the right one in. Do the right instance of an\nanti-Type II operation that",
    "start": "2725320",
    "end": "2730429"
  },
  {
    "text": "gives you something that's\nminimally generically rigid. If you preserve minimal\ngeneric rigidity, you know you can keep going,\nbecause you have a smaller",
    "start": "2730429",
    "end": "2736850"
  },
  {
    "text": "graph And so by induction\nyou can keep going. ",
    "start": "2736850",
    "end": "2743000"
  },
  {
    "text": "I'm not going to\nprove four either, because it again uses technology\nwe haven't yet developed.",
    "start": "2743000",
    "end": "2749075"
  },
  {
    "text": " But there's one more\npart of this theorem that we haven't proved.",
    "start": "2749075",
    "end": "2756820"
  },
  {
    "text": "This sounds great. We do anti-type I operations. When can we do those?",
    "start": "2756820",
    "end": "2762589"
  },
  {
    "text": "We can do those when we\nhave a vertex of degree-2. Then we can get rid of it.",
    "start": "2762590",
    "end": "2768530"
  },
  {
    "text": "And what property\nfour over there says that if I have a vertex of\ndegree-3, I can get rid of it,",
    "start": "2768530",
    "end": "2774250"
  },
  {
    "text": "and add some edge to compensate. But what if I don't have any\nvertices of degree-2 or 3?",
    "start": "2774250",
    "end": "2780619"
  },
  {
    "text": "That would suck. ",
    "start": "2780620",
    "end": "2793150"
  },
  {
    "text": "So this is now the other\nhalf of this theorem. ",
    "start": "2793150",
    "end": "2802310"
  },
  {
    "text": "All right. Well, we know by\nthe thing I just erased that the number\nof edges is 2n minus 3.",
    "start": "2802310",
    "end": "2810580"
  },
  {
    "text": "So just to recall,\nwe're assuming now we have something that's\nminimally generically rigid. We already did a degree\nof freedom analysis",
    "start": "2810580",
    "end": "2817220"
  },
  {
    "text": "to show the number edges\nmust be 2n minus 3. Now, we need to somehow find\neither an anti-Type I operation",
    "start": "2817220",
    "end": "2823465"
  },
  {
    "text": "or an anti-Type II\noperation so that we can go all the way\nto a single edge and find a Henneberg\nconstruction.",
    "start": "2823466",
    "end": "2828845"
  },
  {
    "start": "2828845",
    "end": "2835719"
  },
  {
    "text": "Any suggestions?  People know graph theory? ",
    "start": "2835719",
    "end": "2846378"
  },
  {
    "text": "All right. On the one hand,\nwe have the number of edges, and the\nother hand, we care about the degrees of vertices.",
    "start": "2846378",
    "end": "2853369"
  },
  {
    "text": "Anyone know a relation\nbetween those two things? ",
    "start": "2853370",
    "end": "2858830"
  },
  {
    "text": "Yeah. AUDIENCE: Two. Every edge contributes\ntwo to the total Henneberg",
    "start": "2858830",
    "end": "2864529"
  },
  {
    "text": "[INAUDIBLE]. PROFESSOR: If I take\nthe sum of the degrees of the vertices-- sum\nover all vertices--",
    "start": "2864529",
    "end": "2874520"
  },
  {
    "text": "this is really intuitive. I add up how many edges are\nincident to this vertex, then I add up how many edges\nare incident to this vertex,",
    "start": "2874520",
    "end": "2881809"
  },
  {
    "text": "then I add up how many edges\nare incident to this vertex. I count every edge twice,\nbecause it has two ends.",
    "start": "2881810",
    "end": "2887560"
  },
  {
    "text": "So some of the degrees is\ntwice the number of edges. I'll write that this way. E is the set of edges\nthat's the size of that.",
    "start": "2887560",
    "end": "2895940"
  },
  {
    "text": "This is called the\nhandshaking lemma. It says if everyone in this\nroom shakes hands with everyone else-- if I go around and\nshake hands with everybody--",
    "start": "2895940",
    "end": "2903032"
  },
  {
    "text": "the total number\nof handshakes will be twice the number of pairs\nof people that shook hands.",
    "start": "2903032",
    "end": "2911500"
  },
  {
    "text": "No. If we do some set\nof handshakes-- so that's the graph scenario.",
    "start": "2911500",
    "end": "2917540"
  },
  {
    "text": "So some of us shake\nhands, and I count how many handshakes\nI did, and everybody",
    "start": "2917540",
    "end": "2923440"
  },
  {
    "text": "counts how many handshakes\nthey did, we add them all up, it will be exactly twice the\nnumber of actual handshakes that took place.",
    "start": "2923440",
    "end": "2929599"
  },
  {
    "text": "That's this statement. That's why it's called\nthe handshaking lemma.",
    "start": "2929600",
    "end": "2934920"
  },
  {
    "text": "This is good news, because we\nknow this number is 4n minus 6",
    "start": "2934920",
    "end": "2940160"
  },
  {
    "text": "here. So what could these\ndegrees look like?",
    "start": "2940160",
    "end": "2945410"
  },
  {
    "text": "There's n of them. Number of vertices is n. That's the neat definition of n.",
    "start": "2945410",
    "end": "2951930"
  },
  {
    "text": "So on average what\ncould these degrees be? They have to be less than four.",
    "start": "2951930",
    "end": "2957396"
  },
  {
    "text": "The average degree has\nto be at least a little",
    "start": "2957396",
    "end": "2963080"
  },
  {
    "text": "bit less than four,\nbecause in summation, you get 4n minus a little bit.",
    "start": "2963080",
    "end": "2968537"
  },
  {
    "text": "So the average degree\nin the summation must be a little\nbit less than four. Now, some of them are bigger,\nsome of them are smaller.",
    "start": "2968537",
    "end": "2973859"
  },
  {
    "text": "But if the average is less\nthan four, then in particular, there must be one\nguy less than four.",
    "start": "2973860",
    "end": "2979570"
  },
  {
    "text": "Some vertex has\ndegree less than four.",
    "start": "2979570",
    "end": "2987660"
  },
  {
    "text": "So it could either be\nzero, one, two, or three. Two and three, we're OK.",
    "start": "2987660",
    "end": "2993640"
  },
  {
    "text": "One can't happen,\nbecause we are supposed to be minimally\ngenerically rigid.",
    "start": "2993640",
    "end": "2998700"
  },
  {
    "text": "If I have a degree1\nvertex and some stuff, this guy can spin around. It's not minimally\ngenerically rigid.",
    "start": "2998700",
    "end": "3004600"
  },
  {
    "text": "If I have a degree-0\nvertex, it can float around. It's not minimally\ngenerically rigid, assuming you have\nmore than one vertex.",
    "start": "3004600",
    "end": "3011160"
  },
  {
    "text": "So I guess this is\nthe situation where you have more than\none vertex, otherwise",
    "start": "3011160",
    "end": "3016369"
  },
  {
    "text": "you can't build it\nfrom a single edge. Assuming you have-- so I should\nput n greater than one here.",
    "start": "3016370",
    "end": "3022430"
  },
  {
    "text": " So then you get a degree2\nvertex or a degree-3 vertex.",
    "start": "3022430",
    "end": "3028660"
  },
  {
    "text": "You use either property\ntwo or property four",
    "start": "3028660",
    "end": "3034450"
  },
  {
    "text": "to make an anti-Type I or\nanti-Type II operation. You'll still have a minimally\ngenerically rigid graph.",
    "start": "3034450",
    "end": "3040830"
  },
  {
    "text": "You keep going. By the end, you'll\nhave a single edge. That's the only case\nwhen you get stuck,",
    "start": "3040830",
    "end": "3046750"
  },
  {
    "text": "because actually-- see, I lied. Here, I have two\ndegree-1 vertices. That's the only situation where\nyou can have degree-1 vertices.",
    "start": "3046750",
    "end": "3055400"
  },
  {
    "text": "And that's when you get stuck. You have two degree-1 vertices,\nbut then I have an edge.",
    "start": "3055400",
    "end": "3060910"
  },
  {
    "text": "I'm done.  Questions?",
    "start": "3060910",
    "end": "3067630"
  },
  {
    "text": "Obviously, I elided a\ncouple of key details here, but other than that, it's\npretty straightforward.",
    "start": "3067630",
    "end": "3073801"
  },
  {
    "text": "Yeah. AUDIENCE: What if you have\nmore edges than you need? PROFESSOR: If I have\nmore edges than you need,",
    "start": "3073801",
    "end": "3080230"
  },
  {
    "text": "then this does not\ncapture such structures. This is just about\nminimal generic rigidity.",
    "start": "3080230",
    "end": "3088160"
  },
  {
    "text": "But if I have some graph\nthat is generically rigid, it will be a graph I can build\nthis way, plus more edges.",
    "start": "3088160",
    "end": "3095830"
  },
  {
    "text": "Now, how to identify what edges\nI should remove so that I could do this Henneberg construction\nis unclear at this point,",
    "start": "3095830",
    "end": "3103050"
  },
  {
    "text": "and that's the purpose\nof the next theorem. So good question. ",
    "start": "3103050",
    "end": "3121550"
  },
  {
    "text": "It turns out there's\nan algorithm, which given a generically rigid\ngraph, will tell you which edges you can\nthrow away, so that you",
    "start": "3121550",
    "end": "3129260"
  },
  {
    "text": "get a minimally\ngenerically rigid graph. And that algorithm uses\nthe following theorem.",
    "start": "3129260",
    "end": "3136190"
  },
  {
    "text": "This one is from the '70s\nby a guy named Laman.",
    "start": "3136190",
    "end": "3149089"
  },
  {
    "text": "It starts the same\nas Henneberg above. Graph is minimally\ngenerically rigid in 2D",
    "start": "3149090",
    "end": "3163950"
  },
  {
    "text": "if and only if it\nhas 2n minus 3 edges.",
    "start": "3163950",
    "end": "3173844"
  },
  {
    "text": "And again, I'm assuming\nthe number of vertices is bigger than one. ",
    "start": "3173844",
    "end": "3180121"
  },
  {
    "text": "So far, this is just our regular\ndegree or freedom analysis. But I said this wasn't enough. You something else.",
    "start": "3180121",
    "end": "3185262"
  },
  {
    "text": "Here's the something else. ",
    "start": "3185262",
    "end": "3190296"
  },
  {
    "text": "If I take a subset of\nvertices-- and let's say there's k of them--\nthen that induces",
    "start": "3190296",
    "end": "3203359"
  },
  {
    "text": "at most 2k minus 3 edges. ",
    "start": "3203360",
    "end": "3209071"
  },
  {
    "text": "So this-- again, minimal\ngeneric rigidity. I'm still not directly\ntalking about the bigger case. We'll worry about that later.",
    "start": "3209071",
    "end": "3215169"
  },
  {
    "text": "So there's the fewest\npossible edges. That means 2n minus 3. But now, essentially\nwhat I want to say",
    "start": "3215169",
    "end": "3221090"
  },
  {
    "text": "is that there aren't too\nmany edges in any one place, and therefore the edges\nare well distributed.",
    "start": "3221090",
    "end": "3226830"
  },
  {
    "text": "So if I take some subset of the\nvertices-- so here's my graph, and I take some crazy subset--\nany blob the vertices I want,",
    "start": "3226830",
    "end": "3235330"
  },
  {
    "text": "I look at what are\nall the edges inside between vertices in that set?",
    "start": "3235330",
    "end": "3241270"
  },
  {
    "text": "I don't want to have too many. I don't want to have more than\nwhat I should-- 2k minus 3 if there's k vertices in here.",
    "start": "3241270",
    "end": "3247609"
  },
  {
    "text": "If I had more--\nfor example, that's minimally generically rigid.",
    "start": "3247610",
    "end": "3253080"
  },
  {
    "text": "If I did that anywhere\nin the graph-- this has 2n minus 2 edges.",
    "start": "3253080",
    "end": "3259240"
  },
  {
    "text": "It's too many. Or 2k minus 2 edges. K is four here. If I put that in some bigger\ngraph and the bigger graph",
    "start": "3259240",
    "end": "3266220"
  },
  {
    "text": "has 2n minus 3, and I\nwasted an edge here, that means somewhere\nelse, it will be flexible.",
    "start": "3266220",
    "end": "3271430"
  },
  {
    "text": "So it's a bit of\na weird condition. You might think this should say\ngreater than or equal to be. It'd be more intuitive. That would be wrong.",
    "start": "3271430",
    "end": "3277345"
  },
  {
    "text": "The theorem isn't true when you\nput greater than or equal to, because you could\nchoose vertices that have no edges between them.",
    "start": "3277345",
    "end": "3283500"
  },
  {
    "text": "There's going to\nbe a lot of them. But if you make sure there\naren't too many anywhere, then it turns out it will\nbe just right everywhere.",
    "start": "3283500",
    "end": "3291436"
  },
  {
    "text": "It's like three little\nbears or something. So some generalized version\nof three little bears.",
    "start": "3291436",
    "end": "3298370"
  },
  {
    "text": "K little bears. [LAUGHTER] All right. So this is a very cool theorem.",
    "start": "3298370",
    "end": "3304630"
  },
  {
    "text": "It's not obviously algorithmic,\nbecause it says, oh, you just check every subset of k\nvertices for all values of k.",
    "start": "3304630",
    "end": "3311080"
  },
  {
    "text": "There's exponentially\nmany subsets. It's not a good\nalgorithm by itself, but it turns out you can\nmake it into an algorithm.",
    "start": "3311080",
    "end": "3317220"
  },
  {
    "text": "I'll talk about\nthat in a moment. First, we're going\nto prove the theorem. ",
    "start": "3317220",
    "end": "3323769"
  },
  {
    "text": "OK, I have to speed up a little. All right.",
    "start": "3323769",
    "end": "3328770"
  },
  {
    "text": "Let me sketch this proof. It's really easy,\nbecause we already have this great characterization\nof minimally generically",
    "start": "3328770",
    "end": "3334650"
  },
  {
    "text": "rigid graphs. It's just things you can\nbuild by Type I and Type II operations.",
    "start": "3334650",
    "end": "3339740"
  },
  {
    "text": "So if I want to show\nthe forward direction, that if I have a minimally\ngeneric thing-- i.e.",
    "start": "3339740",
    "end": "3346359"
  },
  {
    "text": "It can be built this way--\nthen it has 2n minus 3 edges. Well, that we already know.",
    "start": "3346360",
    "end": "3353430"
  },
  {
    "text": "And then the other thing is\nthat every subset of k vertices has at most 2k minus\n3 edges among them.",
    "start": "3353430",
    "end": "3360960"
  },
  {
    "text": "So think about it here. So maybe this is my graph.",
    "start": "3360960",
    "end": "3367010"
  },
  {
    "text": "It's produced by a Type\nI operation at the end. Well, it takes some\nsubset of the vertices.",
    "start": "3367010",
    "end": "3374580"
  },
  {
    "text": "Either the subset contains\nthis vertex, or it doesn't. If it doesn't\ncontain this vertex,",
    "start": "3374580",
    "end": "3380080"
  },
  {
    "text": "then it's a subset\njust in the old graph. And by induction,\nmy theorem will hold, because that's\na smaller graph.",
    "start": "3380080",
    "end": "3385920"
  },
  {
    "text": "If it's a subset that\nincludes this guy, then it's whatever the\nsubset contains over here,",
    "start": "3385920",
    "end": "3393330"
  },
  {
    "text": "plus 2 edges minus 1 vertex. And that just works out. Over here, there's going\nto be k minus 1 vertices,",
    "start": "3393330",
    "end": "3400300"
  },
  {
    "text": "so it'll be two times k\nminus 1 minus 3 at most. We add two edges,\nwe add one vertex.",
    "start": "3400300",
    "end": "3405640"
  },
  {
    "text": "That's exactly\nwhat this predicts. You should add two\nedges for every vertex. So that's fine.",
    "start": "3405640",
    "end": "3410830"
  },
  {
    "text": "The Type II, same deal. But in general, I'm\nadding three edges,",
    "start": "3410830",
    "end": "3416480"
  },
  {
    "text": "removing one, and\nadding one vertex. And that's again true in the\nsubsets, not just overall.",
    "start": "3416480",
    "end": "3423370"
  },
  {
    "text": "I take a subset containing\nthis guy or not. You have to check all\nthe cases, depending on whether it contains\nthis guy or this guy",
    "start": "3423370",
    "end": "3429480"
  },
  {
    "text": "or this guy, or not. But in all cases, this\ninequality still holds.",
    "start": "3429480",
    "end": "3435430"
  },
  {
    "text": "How's that? ",
    "start": "3435430",
    "end": "3441230"
  },
  {
    "text": "It's a bunch of case work, but\nall really straightforward, so believe me.",
    "start": "3441230",
    "end": "3447530"
  },
  {
    "text": "The hard part is\nthe other direction. If I'm told that this is true--\nall the subsets don't have",
    "start": "3447530",
    "end": "3454740"
  },
  {
    "text": "too many edges-- then I claim I\ncan actually build it this way, or I claim that somehow it's\nminimally generically rigid.",
    "start": "3454740",
    "end": "3461860"
  },
  {
    "text": "And we are, in fact, going\nto build it using Henneberg constructions, using\nthese properties that we proved-- one,\ntwo, three, four.",
    "start": "3461860",
    "end": "3470671"
  },
  {
    "text": "All right. So what do we know? We know that there\nare 2n minus 3 edges. Hey, I already have\na great argument",
    "start": "3470671",
    "end": "3477250"
  },
  {
    "text": "for when the number of\nedges is 2n minus 3. I do the handshaking lemma, and\nI know that the sum of degrees is 4n minus 6.",
    "start": "3477250",
    "end": "3482340"
  },
  {
    "text": "Therefore, I know the average\ndegree is less than four. Great. Problem solved. Therefore, I know\nthere's a vertex",
    "start": "3482340",
    "end": "3494380"
  },
  {
    "text": "of degree less than four. It could be zero,\none two, or three.",
    "start": "3494380",
    "end": "3500500"
  },
  {
    "text": "Can it be zero?  Hope not.",
    "start": "3500500",
    "end": "3507045"
  },
  {
    "text": "How do I prove it's not zero? I know how to prove\nit's not one, think.",
    "start": "3507045",
    "end": "3512315"
  },
  {
    "start": "3512315",
    "end": "3517569"
  },
  {
    "text": "I have to cheat here. Aha. Right, right. OK, good. Duh.",
    "start": "3517570",
    "end": "3523970"
  },
  {
    "text": "All right. Number of edges is 2n minus 3. Suppose my graph\nlooked like this,",
    "start": "3523970",
    "end": "3529187"
  },
  {
    "text": "where there's no edges\nincident to this guy. Well, how many edges\ndoes this have? 2n minus 3 still.",
    "start": "3529187",
    "end": "3534730"
  },
  {
    "text": "I didn't remove any. So I've got n minus 1 vertices,\nyet I have 2n minus 3 edges? That ain't right.",
    "start": "3534730",
    "end": "3541170"
  },
  {
    "text": "So that can't happen. Similarly here, if I\nhave one edge here,",
    "start": "3541170",
    "end": "3547630"
  },
  {
    "text": "then the number of\nedges inside this blob-- everything except that one\nvertex-- would be 2n minus 2,",
    "start": "3547630",
    "end": "3553970"
  },
  {
    "text": "I guess. But it should really have at\nmost 2 times n minus 1 minus 3,",
    "start": "3553970",
    "end": "3562040"
  },
  {
    "text": "which is 2n minus 4. Sorry, I did this wrong.",
    "start": "3562040",
    "end": "3569460"
  },
  {
    "text": "2n minus 3. This should be 4. This should be 5. I'll get it right eventually.",
    "start": "3569460",
    "end": "3576450"
  },
  {
    "text": "So if I remove one edge from\n2n minus 3, I get 2n minus 4. I had the sign error.",
    "start": "3576450",
    "end": "3581590"
  },
  {
    "text": "But I'm supposed to have\n2 times n minus 1-- that's the number vertices over here--\nminus 3, which is 2n minus 5.",
    "start": "3581590",
    "end": "3587890"
  },
  {
    "text": "So I have the wrong\nnumber of edges. In fact, it should equal. Whatever. At most, at most.",
    "start": "3587890",
    "end": "3594822"
  },
  {
    "text": "We know in every\nsubset-- here, I'm taking a subset of\nn minus 1 vertices. I have at most 2k minus 3. Here k is n minus 1.",
    "start": "3594822",
    "end": "3601380"
  },
  {
    "text": "So I can't have degree-1,\nI can't have degree-0. Therefore, in fact, it's\neither degree2 or 3.",
    "start": "3601380",
    "end": "3608039"
  },
  {
    "text": " If it's degree-2, I'm done.",
    "start": "3608040",
    "end": "3616130"
  },
  {
    "text": "I'm happy. If it's degree--2, then I\ndo an anti-Type I operation.",
    "start": "3616130",
    "end": "3623785"
  },
  {
    "start": "3623785",
    "end": "3629680"
  },
  {
    "text": "So that's this scenario. If I have any degree-2\nVertex, I remove it.",
    "start": "3629680",
    "end": "3635070"
  },
  {
    "text": " And I want to\ninduct on the rest. Now, what do I need to induct?",
    "start": "3635070",
    "end": "3641170"
  },
  {
    "text": "I need to know that\nthis property still holds on my smaller graph.",
    "start": "3641170",
    "end": "3647570"
  },
  {
    "text": "When I remove this vertex,\nI want the remaining graph to still have this property.",
    "start": "3647570",
    "end": "3652970"
  },
  {
    "text": "Does it have 2n minus 3\nedges, for the new value of n, n being n minus 1 now? Yeah, because I\nremoved two edges.",
    "start": "3652970",
    "end": "3659260"
  },
  {
    "text": "I removed one vertex. So it still has the\nright number of edges. We've already checked that. And I need to check that\nevery subset of the vertices",
    "start": "3659260",
    "end": "3666530"
  },
  {
    "text": "over here has at most\n2k minus 3 edges. That's still true,\nbecause before I",
    "start": "3666530",
    "end": "3671720"
  },
  {
    "text": "had to consider all subsets\ncontaining this one or not. Now I'm just looking at\nsubsets that don't contain it.",
    "start": "3671720",
    "end": "3677150"
  },
  {
    "text": "So I still have the\nLaman conditions holding for the\nsmaller graph in here.",
    "start": "3677150",
    "end": "3685930"
  },
  {
    "text": "Therefore, I can\ninduct, and we're done.",
    "start": "3685930",
    "end": "3693099"
  },
  {
    "text": "And we're done because then\nwe conclude that the smaller graph is minimally\ngenerically rigid. And then property two tells\nus that this thing's minimally",
    "start": "3693100",
    "end": "3701026"
  },
  {
    "text": "generically rigid, and then\nI add this vertex, two edges, it'll still be minimally\ngenerically rigid. And that's what I\nwanted to conclude",
    "start": "3701026",
    "end": "3707500"
  },
  {
    "text": "in the left\nimplication direction. The hard case is degree three.",
    "start": "3707500",
    "end": "3712730"
  },
  {
    "text": " Again, there's more than\none Type II operation.",
    "start": "3712730",
    "end": "3718610"
  },
  {
    "text": "I already wave my\nhands, claiming that there is an operation you\ncan do so that the result is",
    "start": "3718610",
    "end": "3726130"
  },
  {
    "text": "minimally generically rigid. ",
    "start": "3726130",
    "end": "3732579"
  },
  {
    "text": "But is that enough? I have to think about\nit for a second. It's minimally\ngenerically rigid.",
    "start": "3732580",
    "end": "3738045"
  },
  {
    "start": "3738045",
    "end": "3743880"
  },
  {
    "text": "Ah, it's not enough. It's annoying. That's what I thought.",
    "start": "3743880",
    "end": "3748970"
  },
  {
    "text": "I'm not surprised,\nbut I'm re-surprised. Whatever.  For this theory\nproperty to hold,",
    "start": "3748970",
    "end": "3755690"
  },
  {
    "text": "I need that the graph I have\nis minimally generically rigid. That's what I want to prove. I don't know that that's true.",
    "start": "3755690",
    "end": "3762890"
  },
  {
    "text": "So I can't use property four. Sucks to be me. ",
    "start": "3762890",
    "end": "3768419"
  },
  {
    "text": "I'm trying to prove the graph\nis minimally generically rigid. All I have is degree-3 vertex,\nand I have Laman's condition.",
    "start": "3768419",
    "end": "3774109"
  },
  {
    "text": "I don't know whether property\nfour applies to my scenario. So we've got to do work.",
    "start": "3774110",
    "end": "3782029"
  },
  {
    "text": "And wow. ",
    "start": "3782030",
    "end": "3791480"
  },
  {
    "text": "See what I can do to this proof. ",
    "start": "3791480",
    "end": "3815050"
  },
  {
    "text": "In the degree-3 case, I want to\nfind an anti-Type II operation. ",
    "start": "3815050",
    "end": "3821170"
  },
  {
    "text": "Presumably they're out\nthere, but I need a good one. For me, good means it should\npreserve the Laman condition.",
    "start": "3821170",
    "end": "3828049"
  },
  {
    "text": "So after I do the anti-Type\nII, after I delete those three edges, delete the vertex,\nadd one edge back,",
    "start": "3828050",
    "end": "3834690"
  },
  {
    "text": "I want this to still hold.  Now, there's\nessentially two things",
    "start": "3834690",
    "end": "3840750"
  },
  {
    "text": "that could go wrong\nfor this to still hold. One is you go to add an\nedge, and it's already there.",
    "start": "3840750",
    "end": "3847240"
  },
  {
    "text": "If it's already there, you\ncan't really add it again, and then the number of\nedges will be wrong.",
    "start": "3847240",
    "end": "3852680"
  },
  {
    "text": "You always want to have\n2n minus 3 as you go down. If I try to add an edge\nand it doesn't work out-- because the whole point is\nI'm supposed to remove three,",
    "start": "3852680",
    "end": "3859230"
  },
  {
    "text": "add one. If I don't actually\nsucceed in adding one, it'll be the wrong number. So first thing you\nneed to check is",
    "start": "3859230",
    "end": "3865700"
  },
  {
    "text": "that-- so I take\nthis degree-3 vertex. Here it is.",
    "start": "3865700",
    "end": "3871040"
  },
  {
    "text": "Now it's all about its\nneighbors, these three guys. If all three of those exist,\nI would be in trouble.",
    "start": "3871040",
    "end": "3878510"
  },
  {
    "text": "Fortunately, that can't happen. This is the picture I\ndrew that cannot happen. This is over-braced. There's too many edges here.",
    "start": "3878510",
    "end": "3884510"
  },
  {
    "text": "This is a subset\nof four vertices. It has more than\n2k minus 3 edges. So by Laman's condition,\nthis can't hold.",
    "start": "3884510",
    "end": "3890869"
  },
  {
    "text": "Some edge must be missing. That's the one we'll target. So at least there's an\nedge that's missing.",
    "start": "3890870",
    "end": "3897565"
  },
  {
    "text": "That's property one. There's another thing that\ncould go wrong, though,",
    "start": "3897565",
    "end": "3902840"
  },
  {
    "text": "which is I go to\nadd in this edge, and somehow the other part\nof the condition-- the subset",
    "start": "3902840",
    "end": "3908570"
  },
  {
    "text": "property-- doesn't hold. Now, what could that\npossibly look like?",
    "start": "3908570",
    "end": "3913747"
  },
  {
    "text": "It would have to be\na subset of vertices. ",
    "start": "3913747",
    "end": "3920120"
  },
  {
    "text": "It should at least contain\nthese two vertices. Actually, it probably\nshouldn't contain this one.",
    "start": "3920120",
    "end": "3928030"
  },
  {
    "text": "This requires some thinking. I mean, if it contained\nthis one, it's no big deal.",
    "start": "3928030",
    "end": "3933310"
  },
  {
    "text": "I mean, it's got do one\nmore vertex, two more edges. Who cares. ",
    "start": "3933310",
    "end": "3940250"
  },
  {
    "text": "But if you just look at\none of these subsets, then in this subset,\nyou're adding an edge.",
    "start": "3940250",
    "end": "3946140"
  },
  {
    "text": "That's in general a bad idea,\nbecause if it had exactly 2k minus 3 before and\nnow I add an edge,",
    "start": "3946140",
    "end": "3951900"
  },
  {
    "text": "it'll have too many edges. That would be bad. So somehow I want to\nsay there's some place I can add an edge where there\nwas slack, where there",
    "start": "3951900",
    "end": "3960940"
  },
  {
    "text": "were less than 2k minus 3 edges. And so when I add\nthis in, I'm OK.",
    "start": "3960940",
    "end": "3968369"
  },
  {
    "text": "It's a little tricky to argue. What we do is\nsuppose-- we're going",
    "start": "3968370",
    "end": "3973700"
  },
  {
    "text": "to argue by contradiction. If this is impossible-- so\nI'm going to try for these two vertices, then I'll try\nit for these two vertices,",
    "start": "3973700",
    "end": "3980303"
  },
  {
    "text": "then I'll try for these\ntwo-- three choices. If they all fail, I claim\nthere's a contradiction.",
    "start": "3980303",
    "end": "3987309"
  },
  {
    "text": "And I will try to\nsketch this for you. So let's say there are Si-- I\nhave some subset of vertices",
    "start": "3987310",
    "end": "3994170"
  },
  {
    "text": "Si-- and i is one,\ntwo, or three.",
    "start": "3994170",
    "end": "3999880"
  },
  {
    "text": "And this will turn out\nto be the bad case. Suppose that it contains--\nI didn't give these labels.",
    "start": "3999880",
    "end": "4008900"
  },
  {
    "text": "This is V, V1, V2, V3.",
    "start": "4008900",
    "end": "4014510"
  },
  {
    "text": "So it's going to\ncontain Vi plus 1 and Vi plus 2-- those are the\nother two vertices from i--",
    "start": "4014510",
    "end": "4025030"
  },
  {
    "text": "but not V. Not the vertex that\nI added, because that turns out not to matter.",
    "start": "4025030",
    "end": "4031130"
  },
  {
    "text": "And suppose that it induces\nexactly 2k-- what's k here?",
    "start": "4031130",
    "end": "4038170"
  },
  {
    "text": "Size of Si-- minus 3 edges.",
    "start": "4038170",
    "end": "4047885"
  },
  {
    "text": "It has Si edges. If it has exactly 2Si minus 3\nedges, I can't add another one.",
    "start": "4047885",
    "end": "4053480"
  },
  {
    "text": "And if this is true for\nthis pair and for this pair and for this pair,\nthen I'm screwed.",
    "start": "4053480",
    "end": "4058600"
  },
  {
    "text": "So suppose that it's true for\nall three pairs of these Sis. ",
    "start": "4058600",
    "end": "4065660"
  },
  {
    "text": "Fun fact. Let's look at all of the\nedges among S1 and S2.",
    "start": "4065660",
    "end": "4071825"
  },
  {
    "text": "Let's start combining these\nsets in different ways. ",
    "start": "4071825",
    "end": "4080114"
  },
  {
    "text": "Speed through this a little. ",
    "start": "4080114",
    "end": "4085380"
  },
  {
    "text": "Something called\ninclusion-exclusion principle, which is I have these\ntwo sets S1 and S2.",
    "start": "4085380",
    "end": "4091760"
  },
  {
    "text": "They might overlap, who knows. But if I count all the edges\nin both of them together,",
    "start": "4091760",
    "end": "4098979"
  },
  {
    "text": "that's kind of like counting all\nthe edges in here-- all of Si-- and counting all\nthe edges in S2--",
    "start": "4098979",
    "end": "4104587"
  },
  {
    "text": "and then removing the\nintersection because I double-counted there. AUDIENCE: It's like probability. PROFESSOR: It's\nlike probability.",
    "start": "4104587",
    "end": "4110299"
  },
  {
    "text": "This is inclusion-exclusion. It exists all over the place. Usually it's combinatorics. ",
    "start": "4110300",
    "end": "4116659"
  },
  {
    "text": "But it's not quite\naccurate here, and that's why there's a\ngreater than or equal to. Because we're counting\nedges not vertices,",
    "start": "4116660",
    "end": "4122849"
  },
  {
    "text": "it's a little messier,\nbecause there's some edges you miss, like\nan edge from this vertex over to this vertex.",
    "start": "4122849",
    "end": "4129149"
  },
  {
    "text": "You'll still count twice. But hey, it's close enough. Greater than or equal to.",
    "start": "4129149",
    "end": "4134710"
  },
  {
    "text": "OK? Now, I claim this thing should\nonly have one vertex in it.",
    "start": "4134710",
    "end": "4142754"
  },
  {
    "text": "How the heck could I claim that? Well, let's suppose that it\nhas at least two vertices. ",
    "start": "4142754",
    "end": "4148950"
  },
  {
    "text": "And then I'm going to\nget a contradiction. So I guess I really mean\nthis-- that Si intersects S2.",
    "start": "4148950",
    "end": "4158000"
  },
  {
    "text": "I claim these intersections\nhave to be pretty tiny. The reason is, if\nit weren't, what do I know about the\nedges induced by S1?",
    "start": "4158000",
    "end": "4165399"
  },
  {
    "text": "Well, it's a subset, so it\nsatisfies the 2K minus 3 property. So it's going to be greater\nthan or equal to, right?",
    "start": "4165399",
    "end": "4172382"
  },
  {
    "text": " Actually, I'd already assumed\nthe number of edges induced",
    "start": "4172383",
    "end": "4178600"
  },
  {
    "text": "here is exactly twice\nthe Sis minus 3. So this will be exactly\nequal to 2 times S1 minus 3.",
    "start": "4178600",
    "end": "4186660"
  },
  {
    "text": "It's 2 times S2 minus 3, and\nthen the same thing there.",
    "start": "4186660",
    "end": "4192460"
  },
  {
    "text": "OK? But this is some subset. As long as it has at\nleast two vertices-- yeah,",
    "start": "4192460",
    "end": "4199870"
  },
  {
    "text": "this should be k\ngreater than or one. Things don't quite\nwork with one vertex, because then it says\n2 times 1 minus 3.",
    "start": "4199870",
    "end": "4205580"
  },
  {
    "text": "It should have negative 1 edges. Ain't so. It's got zero edges. So you need more than one\nvertex for this to apply.",
    "start": "4205580",
    "end": "4213630"
  },
  {
    "text": "But now I have some subset. It has at least two\nvertices, let's say. So it has at most\n2k minus 3 edges.",
    "start": "4213630",
    "end": "4220239"
  },
  {
    "text": "So this is going to\nbe at most-- it's",
    "start": "4220240",
    "end": "4225787"
  },
  {
    "text": "confusing because\neverything's backwards.  Well, it's going to be\nanother two times the size",
    "start": "4225787",
    "end": "4233310"
  },
  {
    "text": "of this thing minus 3. So I'm just going to\ncollect them all together. We have S1, we have S2, and\nthe one that we just added",
    "start": "4233310",
    "end": "4241050"
  },
  {
    "text": "was S1 intersect S2 minus 9.",
    "start": "4241050",
    "end": "4246780"
  },
  {
    "text": "It's three 3s. ",
    "start": "4246780",
    "end": "4252177"
  },
  {
    "text": "But this thing--\nand I got it wrong. There's a sign error.",
    "start": "4252178",
    "end": "4257485"
  },
  {
    "text": "I got two sign errors. There's a minus here. There's 2k minus 3.",
    "start": "4257485",
    "end": "4263280"
  },
  {
    "text": "And so this is going\nto be two negative 3s, then there's going to be\na negative negative 3.",
    "start": "4263280",
    "end": "4268889"
  },
  {
    "text": "2 wrongs make a right. It should be 3 in the end. ",
    "start": "4268890",
    "end": "4274710"
  },
  {
    "text": "OK. Now, this thing. What's that? ",
    "start": "4274710",
    "end": "4281928"
  },
  {
    "text": "AUDIENCE: The union. PROFESSOR: It's the\nsize of the union. Here it's exact,\nbecause we're counting vertices instead of edges.",
    "start": "4281928",
    "end": "4289650"
  },
  {
    "text": "It's this plus this\nminus the intersection from double counting. Huh. So two times that size minus 3.",
    "start": "4289650",
    "end": "4298082"
  },
  {
    "text": "Hmm. So I looked at the edges\ninduced by the union. I got those at\nleast to k minus 3.",
    "start": "4298082",
    "end": "4305940"
  },
  {
    "text": "So what--?  Right.",
    "start": "4305940",
    "end": "4311150"
  },
  {
    "text": "It doesn't sound like\na contradiction yet. We want it to be\nat most 2k minus 3 but I think there's a\nproperty I didn't prove yet.",
    "start": "4311150",
    "end": "4321670"
  },
  {
    "text": "Great. All right. So what. Let's look back at this picture. ",
    "start": "4321670",
    "end": "4335480"
  },
  {
    "text": "So if I take S1 union S2,\nS1 hits these two guys-- 2",
    "start": "4335480",
    "end": "4341290"
  },
  {
    "text": "and 3-- S2 hits these\ntwo guys-- 1 and 3. In their union, they're\ngoing to hit all three.",
    "start": "4341290",
    "end": "4348290"
  },
  {
    "text": "So the set is going\nto look like this. It's going to contain V1, V2,\nV3, but not V. Interesting.",
    "start": "4348290",
    "end": "4357054"
  },
  {
    "text": " I know that if I\nput V in, I still",
    "start": "4357055",
    "end": "4362579"
  },
  {
    "text": "have at most 2k minus 3 edges. If I remove V, I remove\none vertex and three edges.",
    "start": "4362580",
    "end": "4368690"
  },
  {
    "text": "Three edges for\nthe price of one. Or for the price\nof two, I guess. Normally if I remove a vertex,\nI should remove only two edges.",
    "start": "4368690",
    "end": "4375409"
  },
  {
    "text": "If I cut out V, I\nremove three edges. Therefore, this\nset that includes V1, V2, V3 has to have slack.",
    "start": "4375410",
    "end": "4383570"
  },
  {
    "text": "It can't have 2k minus 3 edges,\nbecause-- this should be OK.",
    "start": "4383570",
    "end": "4388780"
  },
  {
    "text": "The bigger set should\nbe at most 2k minus 3. When I remove a vertex\nand remove three edges,",
    "start": "4388780",
    "end": "4394580"
  },
  {
    "text": "there's going to be too\nfew edges over here. Two few edges is OK. It would be strictly\nless than 2k minus 3,",
    "start": "4394580",
    "end": "4400510"
  },
  {
    "text": "and here I'm claiming\nit's at least 2k minus 3. That's a contradiction. ",
    "start": "4400510",
    "end": "4410670"
  },
  {
    "text": "Now, it turns out, I'm\nnot done, because I was in two levels\nof contradiction. So what this contradicts\nis this assumption",
    "start": "4410670",
    "end": "4417586"
  },
  {
    "text": "that there are at least two\nvertices in the intersection. Now, I know there can't be two\nvertices in the intersection. It's got to be fewer.",
    "start": "4417586",
    "end": "4423570"
  },
  {
    "text": "Could be zero, but\nit can't really be zero, because S2\nand S2 both contain V3.",
    "start": "4423570",
    "end": "4432760"
  },
  {
    "text": "So it's got to be exactly one. In fact-- it's the crazy proof.",
    "start": "4432760",
    "end": "4438119"
  },
  {
    "text": "When I read this,\nI was like, really? It works, though. You can do all of them.",
    "start": "4438120",
    "end": "4444240"
  },
  {
    "text": "This is going to equal exactly\nV1 and S1 intersect S3.",
    "start": "4444240",
    "end": "4449972"
  },
  {
    "text": "You can do this for any pair. So this is going to be V2. So all these intersections\nhave size one,",
    "start": "4449972",
    "end": "4456040"
  },
  {
    "text": "and we know what it is. So what? ",
    "start": "4456040",
    "end": "4466640"
  },
  {
    "text": "Well, now if I take the\nunion of all of them--",
    "start": "4466640",
    "end": "4478230"
  },
  {
    "text": "there's only this sharing. There's only three shared guys. So I get twice the\nsize of all them, which",
    "start": "4478230",
    "end": "4485360"
  },
  {
    "text": "is S1 plus S2 plus S3 minus 3.",
    "start": "4485360",
    "end": "4493304"
  },
  {
    "text": " Not twice. Sorry, just that.",
    "start": "4493305",
    "end": "4500520"
  },
  {
    "text": "Who cares. Take all the edges\ninduced by those guys. ",
    "start": "4500520",
    "end": "4509290"
  },
  {
    "text": "At the very least, that's\ngoing to be-- good.",
    "start": "4509290",
    "end": "4516250"
  },
  {
    "text": "Now I see.  I think that'd\nactually be equal.",
    "start": "4516250",
    "end": "4523150"
  },
  {
    "text": "But the point is they\ndon't share any edges. Because they only\nshare a single vertex, there's no room to\nshare any edges.",
    "start": "4523150",
    "end": "4528940"
  },
  {
    "text": "So these guys should be\nprobably equal to each other. Edges induced by all\nof them versus edges",
    "start": "4528940",
    "end": "4534329"
  },
  {
    "text": "induced by each of\nthem individually. Here the whole is equal\nto the sum of the parts.",
    "start": "4534330",
    "end": "4540050"
  },
  {
    "text": "And this is going to be\n2 times number of S1s plus number of S2s plus\nnumber of S3s minus 9.",
    "start": "4540050",
    "end": "4549385"
  },
  {
    "text": " This should be equal.",
    "start": "4549385",
    "end": "4555130"
  },
  {
    "text": "We assumed that\nthey were exactly the right number of edges. ",
    "start": "4555130",
    "end": "4561530"
  },
  {
    "text": "So this is the usual problem. ",
    "start": "4561530",
    "end": "4567570"
  },
  {
    "text": "This can't happen by the\nsame argument we did here. If we include V1, V2, V3\nand we don't include V,",
    "start": "4567570",
    "end": "4574170"
  },
  {
    "text": "we've got to have too few edges. And here we're saying we have\nexactly the right number. Can't happen.",
    "start": "4574170",
    "end": "4581705"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: It's a\nslight discrepancy between the 9 and the 3.",
    "start": "4581705",
    "end": "4588199"
  },
  {
    "text": "Sorry, question? AUDIENCE: [INAUDIBLE]. PROFESSOR: There's no 2 here. Here I'm counting vertices,\nhere I'm counting edges.",
    "start": "4588200",
    "end": "4595900"
  },
  {
    "text": "So I get a 2 here. This thing is equal\nto this thing plus 3.",
    "start": "4595900",
    "end": "4607200"
  },
  {
    "start": "4607200",
    "end": "4613400"
  },
  {
    "text": "Ah, algebra. I multiply the 2 by the 3. I get 6. It cancels with the 9. I get minus 3.",
    "start": "4613400",
    "end": "4619241"
  },
  {
    "text": "So this says I should have\nexactly the right number-- twice the size of\nthe set minus 3. That can't happen.",
    "start": "4619242",
    "end": "4624410"
  },
  {
    "text": "I have to have at\nleast one fewer. That's what we argued. It's messy. You should read the notes.",
    "start": "4624410",
    "end": "4629460"
  },
  {
    "text": "But that proves Laman's theorem. Now, in the remaining\nfour minutes,",
    "start": "4629460",
    "end": "4635185"
  },
  {
    "text": "I want to tell you\ntwo more cool things. Three more cool things. Great.",
    "start": "4635185",
    "end": "4641960"
  },
  {
    "text": "All right. First thing is you can turn\nthis into an algorithm.",
    "start": "4641960",
    "end": "4647360"
  },
  {
    "text": "How do you turn it\ninto an algorithm? It's a crazy idea. Roughly speaking,\nin every vertex,",
    "start": "4647360",
    "end": "4653389"
  },
  {
    "text": "you imagine there's two little\npebbles sitting on the vertex. And then there's a bunch of\nedges incident to that vertex.",
    "start": "4653390",
    "end": "4660670"
  },
  {
    "text": "You can assign each of these\npebbles to one of those edges. Something like that.",
    "start": "4660670",
    "end": "4666829"
  },
  {
    "text": "You get to choose each, but\nI only have two of them. I do that for every vertex.",
    "start": "4666830",
    "end": "4673909"
  },
  {
    "text": "So something like that. If I can cover all\nthe edges-- there's a slight extra\ncondition-- but if I",
    "start": "4673910",
    "end": "4681300"
  },
  {
    "text": "can cover all the edge in\nthis way, I claim I'm rigid.",
    "start": "4681300",
    "end": "4686739"
  },
  {
    "text": "Well, not cover all the edges. If I can get all the\npebbles off the vertices without them hitting each\nother, then I'm rigid.",
    "start": "4686740",
    "end": "4696030"
  },
  {
    "text": "I might have more extra\nedges that aren't covered. Those are the extra edges. You should throw them away. That's over-bracing.",
    "start": "4696030",
    "end": "4701510"
  },
  {
    "text": "It's too much to be rigid. But if I can get all\nthese pebbles off somehow,",
    "start": "4701510",
    "end": "4706770"
  },
  {
    "text": "then I have roughly the right\nnumber of edges for vertices. And while it's not\nobvious, it turns out",
    "start": "4706770",
    "end": "4712110"
  },
  {
    "text": "you will satisfy Laman's\ncondition in that situation. And so it turns out to just\nbe a graph searching problem.",
    "start": "4712110",
    "end": "4717599"
  },
  {
    "text": "You have to push\nthe pebbles around in order to get them\noff the vertices. You don't have a lot of choices\nwhere the pebbles can go.",
    "start": "4717600",
    "end": "4725400"
  },
  {
    "text": "And it turns out to be basically\nm calls to path connectivity",
    "start": "4725400",
    "end": "4734600"
  },
  {
    "text": "operations. So I've just given two graphs. So I'm given a\nconnected graph, which",
    "start": "4734600",
    "end": "4740140"
  },
  {
    "text": "is the ways that I can\nmove the pebbles around. I just want to know, can\nI do a chain reaction",
    "start": "4740140",
    "end": "4745330"
  },
  {
    "text": "of pebble twitches till I\nget this one moved away? So it's just a\ndepth first search.",
    "start": "4745330",
    "end": "4751920"
  },
  {
    "text": "Whatever. So this cost linear time. I think we could probably\nget away with n operations",
    "start": "4751920",
    "end": "4758320"
  },
  {
    "text": "each linear time\nin number of edges. So the total amount\nof time is number",
    "start": "4758320",
    "end": "4764545"
  },
  {
    "text": "of vertices times\nnumber of edges. M is the number of edges.",
    "start": "4764545",
    "end": "4769550"
  },
  {
    "text": "Polynomial time. Life is good. Open problem. Can you do better? But that's been around\nfor a long time.",
    "start": "4769550",
    "end": "4774960"
  },
  {
    "text": "We've tried it before. Seems quite challenging. Bigger open problem.",
    "start": "4774960",
    "end": "4780190"
  },
  {
    "text": "What about 3D? In 3D, there these annoying\nsituations, like this one.",
    "start": "4780190",
    "end": "4787450"
  },
  {
    "start": "4787450",
    "end": "4792460"
  },
  {
    "text": "Two tetrahedra\nglued along a face. ",
    "start": "4792460",
    "end": "4802510"
  },
  {
    "text": "Take two-- we call this a\nbanana-- take two bananas. Joined them at vertices,\nthe opposing vertices.",
    "start": "4802510",
    "end": "4809300"
  },
  {
    "text": "This thing is flexible, right? You just rotate through here. It's generically flexible.",
    "start": "4809300",
    "end": "4815110"
  },
  {
    "text": "It doesn't matter how I draw it. You can rotate\nthrough that axis. But it has 2n minus 6\nedges, and every subset",
    "start": "4815110",
    "end": "4821080"
  },
  {
    "text": "has at most 3n minus 6 edges. So Laman doesn't hold. Does the generalized version\nof Henneberg's theorem hold?",
    "start": "4821080",
    "end": "4827740"
  },
  {
    "text": "We don't know. I think maybe yes. If you want to work\non 3D rigidity-- which is a little scary, because a\nlot of people worked on it--",
    "start": "4827740",
    "end": "4836080"
  },
  {
    "text": "I think Henneberg might\nbe a good way to go. It might not lead\nto an algorithm, but at least you might get\na nice characterization.",
    "start": "4836080",
    "end": "4841335"
  },
  {
    "text": " It'd be fun. I think Henneberg would\nmake a great puzzle.",
    "start": "4841335",
    "end": "4847510"
  },
  {
    "text": "By working forward not backward,\nit's quite challenging. Other fun things. ",
    "start": "4847510",
    "end": "4855159"
  },
  {
    "text": "Let me tell you briefly\nabout polyhedra. Polyhedra are fun, and they\nexist in three dimensions.",
    "start": "4855160",
    "end": "4863400"
  },
  {
    "text": "Here's a polyhedron. It's a convex polygon-- it's\nBuckminster Fuller Geodesic",
    "start": "4863400",
    "end": "4869430"
  },
  {
    "text": "Dome in Montreal--\nand it's convex.",
    "start": "4869430",
    "end": "4876940"
  },
  {
    "text": "It's made of triangles. Is that rigid? It looks like it. Hasn't fallen down yet-- it's\nbeen there for 40 years now.",
    "start": "4876940",
    "end": "4886290"
  },
  {
    "text": "Indeed, you can prove\nthat thing is rigid, and this is the basis\nfor geodesic domes.",
    "start": "4886290",
    "end": "4892210"
  },
  {
    "text": "Turns out, if you have a convex\npolyhedron-- so 3D I said is really hard. But this does not look\nlike a convex polyhedron.",
    "start": "4892210",
    "end": "4898940"
  },
  {
    "text": "So what if you had a 3D linkage\nthat is the surface of a convex",
    "start": "4898940",
    "end": "4904469"
  },
  {
    "text": "polyhedron and every\nface is a triangle? ",
    "start": "4904470",
    "end": "4909860"
  },
  {
    "text": "I mean, ignoring the\nfloor for a little bit, but you can deal with that too. Every face here is a triangle.",
    "start": "4909860",
    "end": "4915530"
  },
  {
    "text": "It may be easier to\nsee in this diagram. So it's a linkage. It's a bunch of triangles.",
    "start": "4915530",
    "end": "4922660"
  },
  {
    "text": "That thing willl be\ngenerically rigid. And even rigid-- never\nmind generically.",
    "start": "4922660",
    "end": "4928100"
  },
  {
    "text": "You can prove this\nthing is rigid, and it was proved, roughly\nspeaking, by Alexandrov,",
    "start": "4928100",
    "end": "4936890"
  },
  {
    "text": "let's say, or Den--\nthe early to mid 1900s.",
    "start": "4936890",
    "end": "4944310"
  },
  {
    "text": "That's cool. And that doesn't mean that there\naren't other configurations.",
    "start": "4944310",
    "end": "4950770"
  },
  {
    "text": "So here's a convex\npolyhedron, and you could triangulate\nthe sides also. And there's a non-convex\nrealization of that.",
    "start": "4950770",
    "end": "4958880"
  },
  {
    "text": "But as long as you stay\nconvex, and if you move-- this requires a big jump. And you can show that if you\nhave a convex polyhedron,",
    "start": "4958880",
    "end": "4965700"
  },
  {
    "text": "in order for it to flex\ncontinuously, well, it can't. In order to flex at\nall, it has to jump",
    "start": "4965700",
    "end": "4971850"
  },
  {
    "text": "into a non-convex state. But there's a fun\nthing that happens when you look at\nnon-convex polyhedra.",
    "start": "4971850",
    "end": "4977281"
  },
  {
    "text": "And it's really hard to see\nthis polyhedron, this dent on the backside, but you can\ncut this out and make one.",
    "start": "4977281",
    "end": "4983590"
  },
  {
    "text": "And it's a non-convex\npolyhedron, and it does have\na continuous flex.",
    "start": "4983590",
    "end": "4988820"
  },
  {
    "text": "It's a flexible linkage. It's triangulated,\nbut it's not convex,",
    "start": "4988820",
    "end": "4994930"
  },
  {
    "text": "and so Alexandrov's\ntheorem doesn't apply. And you can move\nit continuously.",
    "start": "4994930",
    "end": "5001660"
  },
  {
    "text": "It's a flexible linkage. Fun fact-- when it moves,\nthe volume stays constant.",
    "start": "5001660",
    "end": "5007599"
  },
  {
    "text": "It's called the\nbellow's theorem-- it was open for many years--\nby Connelly and others.",
    "start": "5007600",
    "end": "5013230"
  },
  {
    "text": "And so in fact, you take any--\nnot just this polyhedron-- you take any polyhedron\nthat can flex--",
    "start": "5013230",
    "end": "5019915"
  },
  {
    "text": "it has to be non-convex--\nits volume will stay constant throughout the whole motion. So if you've ever\nplayed with the bellows,",
    "start": "5019915",
    "end": "5027470"
  },
  {
    "text": "you may think this is not\ntrue, because bellows pump air in and out somehow.",
    "start": "5027470",
    "end": "5033750"
  },
  {
    "text": "And the theorem is well, you\ncan't build a bellows out of linkages. ",
    "start": "5033750",
    "end": "5039400"
  },
  {
    "text": "You could maybe build\nbellows out a paper, or a flexible material, but\nif you cannot triangulate that",
    "start": "5039400",
    "end": "5046560"
  },
  {
    "text": "surface, you cannot\nmake it a metal bellows. Never mind if they\nexist in reality. They are theoretically\nimpossible to build.",
    "start": "5046560",
    "end": "5055550"
  },
  {
    "text": "I don't know-- are\nthere metal bellows? That's it. And next time, we will talk\nabout more rigidity and things",
    "start": "5055550",
    "end": "5062890"
  },
  {
    "text": "called tensegrities,\nwhich even more exciting. And we'll see how this ties\ninto actually getting things to fold from point A to point\nB, not just do they fold at all.",
    "start": "5062890",
    "end": "5070909"
  },
  {
    "text": "It's all related. ",
    "start": "5070910",
    "end": "5078272"
  }
]