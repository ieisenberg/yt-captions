[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6680"
  },
  {
    "text": "continue to offer high-quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6680",
    "end": "13670"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13670",
    "end": "22387"
  },
  {
    "text": "MARTEN VAN DIJK: So\ntoday, we're going to talk about\ncommunication networks.",
    "start": "22387",
    "end": "28029"
  },
  {
    "text": "Communication networks\nis a great application of graph theory. So what we're going\nto study is, how",
    "start": "28030",
    "end": "34910"
  },
  {
    "text": "do you route packets\nthrough networks? So you have the internet,\nwhich is a chaotic network.",
    "start": "34910",
    "end": "40899"
  },
  {
    "text": "It's not organized. We are interested in\nhighly structured networks",
    "start": "40900",
    "end": "46269"
  },
  {
    "text": "and you can find\nthem, for example, in parallel computers, where\nyou want to route the data flow.",
    "start": "46270",
    "end": "53980"
  },
  {
    "text": "You can find them in certain\ntelephone switches networks",
    "start": "53980",
    "end": "61170"
  },
  {
    "text": "and so on. So we are going to talk about\na few very special ones,",
    "start": "61170",
    "end": "66920"
  },
  {
    "text": "binary trees, and then\nslowly we will figure out what all these performance\nmeasures really mean.",
    "start": "66920",
    "end": "72960"
  },
  {
    "text": "This one has to do with latency. We have switches, their\nsize, the number of them, congestion, and then\nwe will slowly get down",
    "start": "72960",
    "end": "80860"
  },
  {
    "text": "to Benes network, which is\na really beautiful network with beautiful parameters.",
    "start": "80860",
    "end": "86770"
  },
  {
    "text": "And we are going to prove those. So let's start off with the\nfirst one, the complete binary",
    "start": "86770",
    "end": "95620"
  },
  {
    "text": "tree, and let me\ndraw it for you. ",
    "start": "95620",
    "end": "104399"
  },
  {
    "text": "In this network,\nwe will have a root",
    "start": "104400",
    "end": "109930"
  },
  {
    "text": "and let me just draw it\nfirst We have vertices that",
    "start": "109930",
    "end": "117410"
  },
  {
    "text": "represent here the switches. So these circles-- let me\nexplain it over here-- actually",
    "start": "117410",
    "end": "124370"
  },
  {
    "text": "represent a switch. And the idea is that these\nactually direct packets",
    "start": "124370",
    "end": "135040"
  },
  {
    "text": "through the network. ",
    "start": "135040",
    "end": "141660"
  },
  {
    "text": "And these packets are\nfixed-size packets of data, so like, I don't\nknow, say 4,000 bytes or bits",
    "start": "141660",
    "end": "150870"
  },
  {
    "text": "or whatever the network\nwants you to comply to. So these are fixed-size\npieces of data.",
    "start": "150870",
    "end": "158090"
  },
  {
    "text": "So what we want is we want to\nbe able from every terminal-- and the terminal I will\ndenote by a square--",
    "start": "158090",
    "end": "165500"
  },
  {
    "text": "from every terminal,\nI want to be able to reach any\nother terminal.",
    "start": "165500",
    "end": "173030"
  },
  {
    "text": "So what is a terminal? A terminal is like a computer\nor something like that.",
    "start": "173030",
    "end": "178610"
  },
  {
    "text": "It's actually the source\nand the destination of data.",
    "start": "178610",
    "end": "185030"
  },
  {
    "start": "185030",
    "end": "192880"
  },
  {
    "text": "So what we are looking\nfor is how can we route-- how we can find\na network of switches",
    "start": "192880",
    "end": "199960"
  },
  {
    "text": "that are connected through\nwires, fibers, or-- yeah? What's the question? AUDIENCE: Can you\nmove down a bit",
    "start": "199960",
    "end": "205566"
  },
  {
    "text": "the top of the-- how\nit's getting cut off? No, the-- That one. MARTEN VAN DIJK: Oh, sorry.",
    "start": "205566",
    "end": "210835"
  },
  {
    "text": "AUDIENCE: All right. Thank you. MARTEN VAN DIJK:\nSo what we want is we want to route packets\nthat's come from any terminal",
    "start": "210835",
    "end": "219670"
  },
  {
    "text": "to any other terminal. That is what our goal is\nand we want to make sure",
    "start": "219670",
    "end": "224730"
  },
  {
    "text": "that that is efficient. So the first one is\nthis binary tree.",
    "start": "224730",
    "end": "229790"
  },
  {
    "text": "And let's see how this may work.",
    "start": "229790",
    "end": "235170"
  },
  {
    "text": "We may have switches\nthat actually have",
    "start": "235170",
    "end": "246060"
  },
  {
    "text": "inputs coming from terminals. ",
    "start": "246060",
    "end": "256910"
  },
  {
    "text": "And the switches may\nalso output to terminals, so here at the bottom.",
    "start": "256910",
    "end": "262260"
  },
  {
    "text": "At this site, we have\na similar structure. this is the root of the tree.",
    "start": "262260",
    "end": "267510"
  },
  {
    "text": "We have another\nswitch over here. We go down, we go up here,\nand once more, like this.",
    "start": "267510",
    "end": "275260"
  },
  {
    "text": "And again, we have-- oops. We have input coming in\nor an output coming out",
    "start": "275260",
    "end": "283430"
  },
  {
    "text": "to their respective terminals. ",
    "start": "283430",
    "end": "289120"
  },
  {
    "text": "So what is happening\nhere is that I would like to have an\ninput-- say input zero wants",
    "start": "289120",
    "end": "299570"
  },
  {
    "text": "to travel all the\nway over to say, the output that is\npresent over here. So let me label these.",
    "start": "299570",
    "end": "305800"
  },
  {
    "text": "So we have the output zero,\ninput one, output one,",
    "start": "305800",
    "end": "314169"
  },
  {
    "text": "input two and output two,\ninput three, and output four.",
    "start": "314170",
    "end": "323940"
  },
  {
    "text": "So well, I can definitely\nreach every single output",
    "start": "323940",
    "end": "329100"
  },
  {
    "text": "from any input so that's great. So this looks like something\nthat you are familiar with,",
    "start": "329100",
    "end": "334540"
  },
  {
    "text": "right? It's just a tree. ",
    "start": "334540",
    "end": "340910"
  },
  {
    "text": "It's a directed\ngraph, but these edges go in both directions, right? So I have an edge that goes from\nhere to here and back from here",
    "start": "340910",
    "end": "348620"
  },
  {
    "text": "to here. So this is the kind of\nlayout that you could try out",
    "start": "348620",
    "end": "353840"
  },
  {
    "text": "first to see whether\nthis type of network would lead to good performance. So let's have a look at\nthe different parameters",
    "start": "353840",
    "end": "361720"
  },
  {
    "text": "and see how well this behaves. So here, we have\na few parameters",
    "start": "361720",
    "end": "367160"
  },
  {
    "text": "that we will be talking about.  So first of all, let's\ntalk about the latency",
    "start": "367160",
    "end": "376389"
  },
  {
    "text": "in this particular network. So how are we going\nto measure this?",
    "start": "376390",
    "end": "381680"
  },
  {
    "text": "Well, we're going to\nlook at this graph and we're going to measure\nit by the number of wires that you need to go through\nfrom an input to an output.",
    "start": "381680",
    "end": "390837"
  },
  {
    "text": "So let me write this down.  So the latency is the time\nthat is required for a packet",
    "start": "390837",
    "end": "408520"
  },
  {
    "text": "to travel from an\ninput to an output.",
    "start": "408520",
    "end": "418240"
  },
  {
    "start": "418240",
    "end": "425830"
  },
  {
    "text": "And how are we going\nto measure this? Well, we're just\ngoing to measure this by the number of wires\nthat we need to go through.",
    "start": "425830",
    "end": "433010"
  },
  {
    "text": "So this you have seen before. We can measure this\nby the diameter of that particular graph.",
    "start": "433010",
    "end": "439330"
  },
  {
    "text": "So here, we will define\nit for a network. So the diameter of\na network is going",
    "start": "439330",
    "end": "448420"
  },
  {
    "text": "to be the length of the\nshortest path between the input",
    "start": "448420",
    "end": "466700"
  },
  {
    "text": "and output that\nare furthest apart.",
    "start": "466700",
    "end": "476950"
  },
  {
    "text": "So let's have a look\nat the graph above.",
    "start": "476950",
    "end": "482050"
  },
  {
    "text": "So for example, we can clearly\nsee that, for example, input",
    "start": "482050",
    "end": "487270"
  },
  {
    "text": "and output-- so say,\ninput zero and output one are connected by just going\nup one step over here,",
    "start": "487270",
    "end": "500600"
  },
  {
    "text": "but just going up\nfrom here to here. Then, this switch forwards\nthe packet to this switch.",
    "start": "500600",
    "end": "507880"
  },
  {
    "text": "This switch reroutes it,\nforwards it over here, and then it goes back to\nthe output, output one.",
    "start": "507880",
    "end": "514760"
  },
  {
    "text": "So for example, this particular\npath only has 1, 2, 3, 4 edges.",
    "start": "514760",
    "end": "520770"
  },
  {
    "text": "And what we are interested in\nis sort of the worst-case time",
    "start": "520770",
    "end": "526900"
  },
  {
    "text": "that it requires to go\nfrom an input to an output. So that means that we are\ninterested in a diameter.",
    "start": "526900",
    "end": "532020"
  },
  {
    "text": "And a diameter is in this\ncase, well, the shortest path that you can find from an input\nto an output that are furthest",
    "start": "532020",
    "end": "541560"
  },
  {
    "text": "apart. So what are those who\nare furthest apart? Well, of course, you would\nlike to go through here, right?",
    "start": "541560",
    "end": "546780"
  },
  {
    "text": "So if I connect the input\nzero to say, output four, I will need to go all the\nway up through the route",
    "start": "546780",
    "end": "554450"
  },
  {
    "text": "down to the output. And how many edges\ndo we see here? 1, 2, 3, 4, 5, 6--\nso in this example,",
    "start": "554450",
    "end": "563530"
  },
  {
    "text": "we have a diameter\nthat is equal to six.",
    "start": "563530",
    "end": "568820"
  },
  {
    "text": "And in general, if you are\nlooking at n times n networks,",
    "start": "568820",
    "end": "575480"
  },
  {
    "text": "what does it mean? n is the number of inputs and n\nis also the number of outputs.",
    "start": "575480",
    "end": "581390"
  },
  {
    "text": "So in this case, we have\na four times-- well, this is actually\nthree over here--",
    "start": "581390",
    "end": "588759"
  },
  {
    "text": "we have four inputs\nand four outputs. So this particular example\ndepicted on the board",
    "start": "588760",
    "end": "594779"
  },
  {
    "text": "is a four times four network. So if you generalize this\nfor any size binary tree,",
    "start": "594780",
    "end": "603730"
  },
  {
    "text": "say, an n times n\nnetwork, then what's",
    "start": "603730",
    "end": "609190"
  },
  {
    "text": "the diameter of such\na general network? Well, if we have n\ninputs and n outputs,",
    "start": "609190",
    "end": "616980"
  },
  {
    "text": "well, we have to\ngo all the way up through towards the root\nand all the way down.",
    "start": "616980",
    "end": "622269"
  },
  {
    "text": "So we actually count the\nlength of a leaf to the root here twice.",
    "start": "622270",
    "end": "628940"
  },
  {
    "text": "So in general, we have a\ndiameter that looks like this. It's 2 times 1 plus\nthe logarithm of n.",
    "start": "628940",
    "end": "639740"
  },
  {
    "text": "So in this lecture, we will have\nn is going to be a power of 2,",
    "start": "639740",
    "end": "648550"
  },
  {
    "text": "just to make\ncalculations simple. And the logarithm is\nalways to the base two.",
    "start": "648550",
    "end": "656170"
  },
  {
    "text": "So this is a diameter of\na general binary tree.",
    "start": "656170",
    "end": "661329"
  },
  {
    "text": "And well, what are\nthe other parameters? So that does not look too bad.",
    "start": "661330",
    "end": "667320"
  },
  {
    "text": "It's logarithmic in answer. That sounds pretty good. What about the switch sizes?",
    "start": "667320",
    "end": "674010"
  },
  {
    "text": "Well, how do I measure those? It's like the number of\ninputs that get into it and the number of\noutputs that get out.",
    "start": "674010",
    "end": "680240"
  },
  {
    "text": "So in this case, I will\nhave 1, 2 inputs that go into this switch and there\nare two outputs coming out.",
    "start": "680240",
    "end": "688149"
  },
  {
    "text": "So this is what we call\na two times two switch. So this will be a\ntwo times two switch.",
    "start": "688150",
    "end": "693600"
  },
  {
    "text": "But if you look at\nthis one, for example, we see one, two, three outgoing\nedges and three ingoing edges.",
    "start": "693600",
    "end": "701950"
  },
  {
    "text": "So this is actually a\nthree times three switch. And in a general\nbinary tree, we will",
    "start": "701950",
    "end": "709970"
  },
  {
    "text": "see that all these intermediate\nnodes over here, they are all three times\nthree switches. So approximately\nhalf of the switches",
    "start": "709970",
    "end": "720149"
  },
  {
    "text": "are actually three\ntimes three switches. So that's the switch size.",
    "start": "720150",
    "end": "725485"
  },
  {
    "text": " Now, you may say,\nwell, why don't I",
    "start": "725485",
    "end": "733680"
  },
  {
    "text": "use a larger-sized switch? That would help me a lot, right? If I could use, say, a four\ntimes four switch, then",
    "start": "733680",
    "end": "744400"
  },
  {
    "text": "I would be able to have\nmore inputs coming in, more outputs coming\nout, and I can actually",
    "start": "744400",
    "end": "750770"
  },
  {
    "text": "maybe use a ternary tree\nrather than a binary tree. In a binary tree,\nevery note at the level",
    "start": "750770",
    "end": "757260"
  },
  {
    "text": "has two children, right? But we could design\na tree that has at every level three children.",
    "start": "757260",
    "end": "764070"
  },
  {
    "text": "So then, they can use\nfour times four switches. But if you do that, then\nthe path from the leaf",
    "start": "764070",
    "end": "771220"
  },
  {
    "text": "up to the root is\ngetting shorter and the diameter gets smaller. So if I increase the\nswitch size-- so rather",
    "start": "771220",
    "end": "778936"
  },
  {
    "text": "than three times three,\nwe look at four times four or five times five, six\ntimes six and so on-- then the diameter will\nactually reduce.",
    "start": "778936",
    "end": "787410"
  },
  {
    "text": "So what about having a monster\nswitch, like I have just one",
    "start": "787410",
    "end": "793170"
  },
  {
    "text": "switch and I have my\ninput zero all the way up to input n minus 1 and\nthen I have my outputs",
    "start": "793170",
    "end": "802060"
  },
  {
    "text": "on the other side? ",
    "start": "802060",
    "end": "808960"
  },
  {
    "text": "Well, of course, the\nswitch size is n times n",
    "start": "808960",
    "end": "814180"
  },
  {
    "text": "but the diameter\nis nothing, right? ",
    "start": "814180",
    "end": "820400"
  },
  {
    "text": "The diameter is reduced to one. You can immediately go\nfrom an input to an output through the switch.",
    "start": "820400",
    "end": "825490"
  },
  {
    "text": "But this, of course,\nconceals the problem. So what we are interested\nin is, well, we're",
    "start": "825490",
    "end": "830510"
  },
  {
    "text": "actually really\ninterested in how to solve the problem of\nrouting all these inputs",
    "start": "830510",
    "end": "836900"
  },
  {
    "text": "to these outputs using\nsmaller switches of size three",
    "start": "836900",
    "end": "843860"
  },
  {
    "text": "times three or two times two. What we're really\ninterested in is, what is the internal structure\nin this monster switch?",
    "start": "843860",
    "end": "851800"
  },
  {
    "text": "I sort of have concealed the\nproblem by just saying, oh, I've got a big switch. But what we want\nto solve today is",
    "start": "851800",
    "end": "860190"
  },
  {
    "text": "how do we do the routing in this\ncase within the monster switch?",
    "start": "860190",
    "end": "865640"
  },
  {
    "text": "So we want to use just\nsmall switch sizes",
    "start": "865640",
    "end": "870780"
  },
  {
    "text": "and build up a network\nusing these smaller ones, like three times three switches\nor two times two switches.",
    "start": "870780",
    "end": "877045"
  },
  {
    "text": " Now, so that brings us\nto yet another parameter,",
    "start": "877045",
    "end": "889990"
  },
  {
    "text": "because here, we'd like to\ncount the number or smaller switches that we\nuse and that relates to the cost of the network,\nthe amount of hardware",
    "start": "889990",
    "end": "898570"
  },
  {
    "text": "that you need to put into it. So in this example, we\nhave the switch count.",
    "start": "898570",
    "end": "906144"
  },
  {
    "text": " Well, it's pretty simple, right? It's 1, 2, 3, 4, 5, 6, 7--\nwe have seven switches.",
    "start": "906145",
    "end": "916920"
  },
  {
    "text": "And in general, if we\nhave n inputs-- so 1,",
    "start": "916920",
    "end": "923959"
  },
  {
    "text": "2, 3, 4 inputs-- then\nthe number of switches that we use in the binary\ntree is 2 times the number",
    "start": "923960",
    "end": "930220"
  },
  {
    "text": "of inputs minus 1. So let's write that down.",
    "start": "930220",
    "end": "936589"
  },
  {
    "text": "So over here, we would\nhave 2 times n minus 1, which is the number of\nswitches that you actually use.",
    "start": "936590",
    "end": "942330"
  },
  {
    "text": " So how can you\nsee that actually?",
    "start": "942330",
    "end": "947360"
  },
  {
    "text": "So in general, we have 1 plus 2\nplus 4 plus 8 and so on plus n.",
    "start": "947360",
    "end": "957310"
  },
  {
    "text": "And it's a power of 2,\naccording to our assumptions. And if you add them all\nup, I think you'll-- well,",
    "start": "957310",
    "end": "964690"
  },
  {
    "text": "you can check for yourself that\nthis is actually equal to 2 times n minus 1. ",
    "start": "964690",
    "end": "971440"
  },
  {
    "text": "So now, we have the switches. So so far, this looks\npretty good, actually. We use small switch sizes.",
    "start": "971440",
    "end": "978060"
  },
  {
    "text": "The number of switches\nis linear in n. The diameter is logarithmic\nin n so that sounds good.",
    "start": "978060",
    "end": "984430"
  },
  {
    "text": "So what about congestion? Do you any idea-- what's\nthe problem with this graph?",
    "start": "984430",
    "end": "990850"
  },
  {
    "text": "What is the big,\nbig problem here? What can happen in a very\nsort of worst-case scenario",
    "start": "990850",
    "end": "999040"
  },
  {
    "text": "where the packets get routed\nfrom inputs to the outputs? If they need to go\nto certain locations,",
    "start": "999040",
    "end": "1006400"
  },
  {
    "text": "then they all may have to\ntravel through the root. So you get congestion over here.",
    "start": "1006400",
    "end": "1012620"
  },
  {
    "text": "We don't like that. So this root is actually\nthen overloaded. Actually, you can\nalready see that say,",
    "start": "1012620",
    "end": "1019640"
  },
  {
    "text": "this particular switch-- if this\nswitch fails, then actually, we will have two disjoint trees\nthat cannot even communicate",
    "start": "1019640",
    "end": "1028089"
  },
  {
    "text": "to one another. So this brings us to\nthe idea of congestion.",
    "start": "1028089",
    "end": "1035349"
  },
  {
    "text": "And in order to\ndefine it better, you will need a few definitions. ",
    "start": "1035349",
    "end": "1044209"
  },
  {
    "text": "So to start, we will\ndefine a permutation",
    "start": "1044210",
    "end": "1051640"
  },
  {
    "text": "and we will use this to\nstipulate the requirement",
    "start": "1051640",
    "end": "1058670"
  },
  {
    "text": "that we want on how inputs\nand outputs are related to another, which input needs\nto communicate to which output.",
    "start": "1058670",
    "end": "1068470"
  },
  {
    "text": "So permutation is a function\npi from the set 0 to n minus 1",
    "start": "1068470",
    "end": "1080010"
  },
  {
    "text": "to the same set. And it is such\nthat no two numbers",
    "start": "1080010",
    "end": "1095880"
  },
  {
    "text": "are mapped to more than once.",
    "start": "1095880",
    "end": "1101210"
  },
  {
    "text": "So no two numbers are\nmapped to the same value. ",
    "start": "1101210",
    "end": "1111790"
  },
  {
    "text": "So what we really want--\nto put it in mathematics, we want that pi of i is\nonly equal to pi of j",
    "start": "1111790",
    "end": "1121600"
  },
  {
    "text": "if and only if i is equal to j. So let's have an example to plug\ninto that picture over there.",
    "start": "1121600",
    "end": "1132480"
  },
  {
    "text": "So a first example could be\npi of i equals, say, n minus 1",
    "start": "1132480",
    "end": "1142600"
  },
  {
    "text": "minus i. This is a proper permutation. No two numbers map\nto the same value.",
    "start": "1142600",
    "end": "1148170"
  },
  {
    "text": "Another one could be the\nidentity permutation, like you map i to the same i.",
    "start": "1148170",
    "end": "1155730"
  },
  {
    "text": "So that's another example. Now, how do we use\npermutations to go towards the idea of congestion?",
    "start": "1155730",
    "end": "1162310"
  },
  {
    "text": "So permutation can be used\nto formulate the permutation routing problem. ",
    "start": "1162310",
    "end": "1169860"
  },
  {
    "text": "And the permutation routing\nproblem is defined like this.",
    "start": "1169860",
    "end": "1176620"
  },
  {
    "start": "1176620",
    "end": "1182170"
  },
  {
    "text": "It's defined as follows. What we want is\nthat for each i, we",
    "start": "1182170",
    "end": "1189210"
  },
  {
    "text": "want to direct the packet at\ninput i to output pi of i.",
    "start": "1189210",
    "end": "1204940"
  },
  {
    "text": "So you want to do\nthat for all i. So let's have a look at this\nparticular example, where we",
    "start": "1204940",
    "end": "1211320"
  },
  {
    "text": "look at identity permutation. So if you do that, we can\neasily route this, right?",
    "start": "1211320",
    "end": "1219149"
  },
  {
    "text": "So I want to send a packet\nfrom input zero to output zero. So I can simply go\ninto this direction.",
    "start": "1219150",
    "end": "1227040"
  },
  {
    "text": "I just go towards\nthis switch and it gets routed back to this one. I can go like this and\nthis one can go like this",
    "start": "1227040",
    "end": "1238169"
  },
  {
    "text": "and this one goes like that. Now, if you look at\nthe other permutation, the picture looks\nvery different.",
    "start": "1238170",
    "end": "1245340"
  },
  {
    "text": "Now, we want to route\ninput zero to output three.",
    "start": "1245340",
    "end": "1253200"
  },
  {
    "text": "In order to do this,\nI will actually need to go all the way through\nhere and then all the way down",
    "start": "1253200",
    "end": "1264659"
  },
  {
    "text": "to this particular output. And now, the picture gets into a\nbig mess because for input one,",
    "start": "1264660",
    "end": "1272410"
  },
  {
    "text": "we have to go to output two. So for input one, well, we\ngo all the way like this,",
    "start": "1272410",
    "end": "1280500"
  },
  {
    "text": "we again go through\nthe root, and then we go down to this\nparticular output.",
    "start": "1280500",
    "end": "1288740"
  },
  {
    "text": "And as you can see,\nfor input two, well, we need to connect\nto output one.",
    "start": "1288740",
    "end": "1294710"
  },
  {
    "text": "So again, we go all the way\nup and we go all the way down. And for this one, we will\nagain go all the way up and all",
    "start": "1294710",
    "end": "1302560"
  },
  {
    "text": "the way down to input zero. So now, you can see that this\nparticular switch over here",
    "start": "1302560",
    "end": "1308950"
  },
  {
    "text": "has to serve packets\nfrom all the inputs.",
    "start": "1308950",
    "end": "1315110"
  },
  {
    "text": "All the four packets\nhave to travel through this\nparticular node here.",
    "start": "1315110",
    "end": "1320160"
  },
  {
    "text": "So this leads us to the\nfollowing definition of congestion.",
    "start": "1320160",
    "end": "1325309"
  },
  {
    "text": "So the congestion--\noh, before we continue,",
    "start": "1325310",
    "end": "1334940"
  },
  {
    "text": "let me first define a path. So for i, we direct a packet\nat input i to output pi of i.",
    "start": "1334940",
    "end": "1343300"
  },
  {
    "text": "And the path that\ncorresponds to this route is actually denoted as follows.",
    "start": "1343300",
    "end": "1351400"
  },
  {
    "text": "So the path taken is\ndenoted by P i pi i.",
    "start": "1351400",
    "end": "1368260"
  },
  {
    "text": "So now, we can\ndefine the congestion of a set of such paths. So the congestion of the\npath corresponding to P zero",
    "start": "1368260",
    "end": "1380750"
  },
  {
    "text": "to P pi zero and so on\nand we go all the way up to the n minus 1\ninput that needs to be",
    "start": "1380750",
    "end": "1388590"
  },
  {
    "text": "mapped to pi of n minus 1. So the congestion is now\ndefined as the largest",
    "start": "1388590",
    "end": "1403910"
  },
  {
    "text": "number of paths that pass\nthrough a single switch.",
    "start": "1403910",
    "end": "1423650"
  },
  {
    "text": "So in our example, we saw that\nin the case of the blue arrows",
    "start": "1423650",
    "end": "1430330"
  },
  {
    "text": "here for the\nidentity permutation, well, this switch only\nneeds to transmit one packet",
    "start": "1430330",
    "end": "1438320"
  },
  {
    "text": "and all those\nactually zero packets. So actually, the congestion\nhere is equal to 1.",
    "start": "1438320",
    "end": "1451080"
  },
  {
    "text": "And for this\nparticular permutation, well, we had to direct all\nthe packets through the root",
    "start": "1451080",
    "end": "1458260"
  },
  {
    "text": "and it's the most\naccessed switch. And that switch has\ncongestion four, right?",
    "start": "1458260",
    "end": "1464830"
  },
  {
    "text": "So the congestion over\nhere is equal to 4.",
    "start": "1464830",
    "end": "1471850"
  },
  {
    "text": " Now, this does not look so\ngood because for a binary tree,",
    "start": "1471850",
    "end": "1479080"
  },
  {
    "text": "we always have this\nvulnerable root that is right here in the center\nconnecting the left side",
    "start": "1479080",
    "end": "1485380"
  },
  {
    "text": "to the right side. So we can always find a\npermutation-- actually, this permutation over\nhere-- that leads",
    "start": "1485380",
    "end": "1490680"
  },
  {
    "text": "to this worst-case congestion. So what we're interested in\nis the maximum congestion,",
    "start": "1490680",
    "end": "1499470"
  },
  {
    "text": "which is sort of the\nworst-case scenario. And we'll define it as follows.",
    "start": "1499470",
    "end": "1509150"
  },
  {
    "text": "The maximum\ncongestion is actually equal to the maximum\nover all permutations pi.",
    "start": "1509150",
    "end": "1516450"
  },
  {
    "text": "So this is kind of the\nworst-case routing problem that I can imagine and\nit may occur in practice.",
    "start": "1516450",
    "end": "1523179"
  },
  {
    "text": "So in the worst case, how\ncan I solve it the best?",
    "start": "1523180",
    "end": "1528950"
  },
  {
    "text": "So I want to find the\nminimum of the congestion",
    "start": "1528950",
    "end": "1537440"
  },
  {
    "text": "of a path over here\nand the minimum",
    "start": "1537440",
    "end": "1549009"
  },
  {
    "text": "is over these types of paths. So actually, this\nis our solution",
    "start": "1549010",
    "end": "1554840"
  },
  {
    "text": "to this routing problem. We want to find the\nbest kind of solution for this worst-case\nscenario-- so",
    "start": "1554840",
    "end": "1565950"
  },
  {
    "text": "the minimum over all\nsolutions for these paths",
    "start": "1565950",
    "end": "1578750"
  },
  {
    "text": "So well, for this\nparticular tree structure,",
    "start": "1578750",
    "end": "1585420"
  },
  {
    "text": "this permutation is really\nthe worst-case scenario that you can have because\nevery packet needs to be routed",
    "start": "1585420",
    "end": "1593150"
  },
  {
    "text": "through the center over here. And it means that our maximum\ncongestion for an arbitrary",
    "start": "1593150",
    "end": "1599519"
  },
  {
    "text": "tree is actually equal to n. ",
    "start": "1599520",
    "end": "1604960"
  },
  {
    "text": "So that looks really\nbad, actually. So we don't like this at all.",
    "start": "1604960",
    "end": "1613649"
  },
  {
    "text": "So let's find out where we\ncan do a little bit better and we come to look at\nthe two-dimensional array",
    "start": "1613650",
    "end": "1621350"
  },
  {
    "text": "and see what that\nwould lead up to. And its structure is as follows.",
    "start": "1621350",
    "end": "1629755"
  },
  {
    "text": " We essentially have\ninputs on the left",
    "start": "1629755",
    "end": "1637950"
  },
  {
    "text": "and the outputs\nare on the bottom and they are in\na grid structure.",
    "start": "1637950",
    "end": "1643280"
  },
  {
    "text": "So we have input zero, input\none, input two, input three.",
    "start": "1643280",
    "end": "1650700"
  },
  {
    "text": "They all connect\nto their terminals.  We have switches, four of\nthose, and they are all",
    "start": "1650700",
    "end": "1664810"
  },
  {
    "text": "connected in this grid.  And at the very bottom, we will\nhave the outputs, the output",
    "start": "1664810",
    "end": "1675415"
  },
  {
    "text": "terminals. ",
    "start": "1675415",
    "end": "1688580"
  },
  {
    "text": "So this is output\nzero and here, we will have output one, output\ntwo, and output three.",
    "start": "1688580",
    "end": "1697720"
  },
  {
    "start": "1697720",
    "end": "1703000"
  },
  {
    "text": "So notice that my circle\nstart to resemble my squares, but these are all the switches\nright here in the center.",
    "start": "1703000",
    "end": "1710630"
  },
  {
    "text": "So how does this work? Well, do we have a\nbetter parameter?",
    "start": "1710630",
    "end": "1717300"
  },
  {
    "text": "So let's look at it together. So we need to\nfirst of all figure out what the diameter is.",
    "start": "1717300",
    "end": "1723390"
  },
  {
    "text": "So what's the diameter of\nthis particular network? So what's the shortest path\nbetween the furthest input",
    "start": "1723390",
    "end": "1734750"
  },
  {
    "text": "and output? So if you look at\nthat, we can see",
    "start": "1734750",
    "end": "1739880"
  },
  {
    "text": "that if I go all\nthe way from here and I go all the way\ndown to this corner,",
    "start": "1739880",
    "end": "1745050"
  },
  {
    "text": "that looks like the\nlargest path and I need to cross all these wires.",
    "start": "1745050",
    "end": "1751530"
  },
  {
    "text": "And in general, for\nany n, we will have that the diameter is 2 times n.",
    "start": "1751530",
    "end": "1760760"
  },
  {
    "text": "Now, what about the switch size? It looks a little\nbit smaller, right? Because over here, we had\nthree inputs coming in",
    "start": "1760760",
    "end": "1767530"
  },
  {
    "text": "and three outputs coming\nout but over here, we see that every\nsingle switch is only",
    "start": "1767530",
    "end": "1773030"
  },
  {
    "text": "two inputs and two outputs. So that makes the\nsize two times two.",
    "start": "1773030",
    "end": "1778440"
  },
  {
    "text": " Now, the number of switches\nis pretty bad, right,",
    "start": "1778440",
    "end": "1784590"
  },
  {
    "text": "because we have n\nsquared switches. So that's really horrible.",
    "start": "1784590",
    "end": "1790790"
  },
  {
    "text": "That's a lot. We would like to do much better. And what about the congestion?",
    "start": "1790790",
    "end": "1796269"
  },
  {
    "text": "Do you have any idea\nwhat the congestion could be in this particular case? We will prove a theorem on that.",
    "start": "1796270",
    "end": "1803019"
  },
  {
    "text": " For any permutation,\nis there a way to route",
    "start": "1803020",
    "end": "1811990"
  },
  {
    "text": "the inputs to the outputs in\nsuch a way that the switches get almost not congested?",
    "start": "1811990",
    "end": "1817790"
  },
  {
    "text": "So in the binary tree,\nwe had a congestion of n, which is linear\nin the switches.",
    "start": "1817790",
    "end": "1823080"
  },
  {
    "text": "But over here, we\ncan do much better. We will show that the\ncongestion of an n-input array",
    "start": "1823080",
    "end": "1845210"
  },
  {
    "text": "is actually equal to 2. So that's great. So I'll prove it in\na moment, but that",
    "start": "1845210",
    "end": "1852230"
  },
  {
    "text": "looks really fantastic. And so it's way better\nthan the binary tree.",
    "start": "1852230",
    "end": "1858929"
  },
  {
    "text": "Now, this is really not so good\nand this is also much larger, but still-- we will\nstart to think next",
    "start": "1858930",
    "end": "1869440"
  },
  {
    "text": "after we show this\nparticular property how to combine these two and\nsee how we can come up",
    "start": "1869440",
    "end": "1875770"
  },
  {
    "text": "with another network that's\nable to combine in some ways these two properties.",
    "start": "1875770",
    "end": "1882130"
  },
  {
    "text": "And maybe we can find a\ngood solution that way. It turns out we will not\nimmediately be able to do that.",
    "start": "1882130",
    "end": "1887440"
  },
  {
    "text": "We will need to\nmake another step and come to the last network. It really has good parameters.",
    "start": "1887440",
    "end": "1894330"
  },
  {
    "text": "So what about the theorem? So if you prove this,\nwell, how do we start?",
    "start": "1894330",
    "end": "1900930"
  },
  {
    "text": "You just start with\nany permutation. If I want to prove something\nabout the congestion,",
    "start": "1900930",
    "end": "1906710"
  },
  {
    "text": "it's defined as the maximum\nof all permutations. So let's take one of them\nand see what we can prove.",
    "start": "1906710",
    "end": "1913670"
  },
  {
    "start": "1913670",
    "end": "1927359"
  },
  {
    "text": "So let us define the paths\nfor this permutation. So what we really want to do\nis we take any permutation",
    "start": "1927359",
    "end": "1934530"
  },
  {
    "text": "and we want to find a really\ngood solution for the routing. If that gives us a very low\ncongestion, we are very happy.",
    "start": "1934530",
    "end": "1942500"
  },
  {
    "text": "So the way to do this is well,\nmaybe you have an idea already.",
    "start": "1942500",
    "end": "1948270"
  },
  {
    "text": "So how would I route this? So I want to connect\nan input i, say, 1, 2,",
    "start": "1948270",
    "end": "1954900"
  },
  {
    "text": "output two, for example. How can I do this? Any suggestions?",
    "start": "1954900",
    "end": "1961640"
  },
  {
    "text": "So of course, I\ncould go any path, but somehow, I want to have\nsome uniform structure that",
    "start": "1961640",
    "end": "1968000"
  },
  {
    "text": "hopefully helps me to prove that\nthe congestion in every switch is very small. So how could I think about this?",
    "start": "1968000",
    "end": "1976520"
  },
  {
    "text": "Well, if I make sure\nthat, say, a packet that",
    "start": "1976520",
    "end": "1983100"
  },
  {
    "text": "goes from one to\noutput two is only going to be participating\nin the wires",
    "start": "1983100",
    "end": "1989400"
  },
  {
    "text": "off the i-th throw\nand the P-i-th column,",
    "start": "1989400",
    "end": "1995510"
  },
  {
    "text": "then I know that every wire will\nonly get traveled over twice",
    "start": "1995510",
    "end": "2004120"
  },
  {
    "text": "by a packet. This could either be a packet\nthat goes into this direction",
    "start": "2004120",
    "end": "2009160"
  },
  {
    "text": "or-- so a switch will be\naccessed at most twice. A switch can either receive\na packet from this direction",
    "start": "2009160",
    "end": "2016160"
  },
  {
    "text": "or receive a packet\nfrom the upper part.",
    "start": "2016160",
    "end": "2022140"
  },
  {
    "text": "So that will be a\nreally good idea. So let's define that. So we say that in our solution,\nwe will design it such",
    "start": "2022140",
    "end": "2032460"
  },
  {
    "text": "that the path from\ninput i is actually going to be rightward\nto column pi i",
    "start": "2032460",
    "end": "2048138"
  },
  {
    "text": "and then downward to the\noutput-- so downward to output",
    "start": "2048139",
    "end": "2059250"
  },
  {
    "text": "by i. So this is a really good\nsolution to the routing problem",
    "start": "2059250",
    "end": "2068870"
  },
  {
    "text": "because now, we can continue\nour proof as follows. We just say, well, if you\nlook at the switch in row i",
    "start": "2068870",
    "end": "2083440"
  },
  {
    "text": "and column pi i, well,\nthis one actually",
    "start": "2083440",
    "end": "2090969"
  },
  {
    "text": "transmits at most two packets\nbecause a packet can only",
    "start": "2090969",
    "end": "2103260"
  },
  {
    "text": "come from the left or it's\ngoing to go from the top.",
    "start": "2103260",
    "end": "2110880"
  },
  {
    "text": "So either one of the two--\nat most, those two packets will go through the switch.",
    "start": "2110880",
    "end": "2117990"
  },
  {
    "text": "So this shows that we have\na congestion of at most two",
    "start": "2117990",
    "end": "2124050"
  },
  {
    "text": "for any permutation. And in order to prove\nequality, because that's really what the theorem\nsays, we also have",
    "start": "2124050",
    "end": "2130060"
  },
  {
    "text": "to show that there\nexists a permutation that achieves a congestion of two.",
    "start": "2130060",
    "end": "2136300"
  },
  {
    "text": "And that is pretty\nstraightforward. We can, for example use\na specific permutation",
    "start": "2136300",
    "end": "2143310"
  },
  {
    "text": "that maps zero to zero and\nmaps n minus 1 to n minus 1.",
    "start": "2143310",
    "end": "2151980"
  },
  {
    "text": "Well, for this\nparticular permutation, when we look at the\npicture over here,",
    "start": "2151980",
    "end": "2157500"
  },
  {
    "text": "we see that input zero\nneeds to go to output zero.",
    "start": "2157500",
    "end": "2163630"
  },
  {
    "text": "We also see that this\nlowest input, input three,",
    "start": "2163630",
    "end": "2169369"
  },
  {
    "text": "needs to travel all\nthe way up to here. But it's clear that the packet\nthat needs to go over here",
    "start": "2169370",
    "end": "2175570"
  },
  {
    "text": "needs to travel through that\nswitch in the lower left bottom",
    "start": "2175570",
    "end": "2183140"
  },
  {
    "text": "corner. And the input three also\nneeds to travel through that. So here, we clearly see that we\nyou have a congestion of two.",
    "start": "2183140",
    "end": "2192510"
  },
  {
    "text": "So now, the proof is\ncomplete because we have shown this upper bound. So for any permutation, the\ncongestion is at most two",
    "start": "2192510",
    "end": "2201170"
  },
  {
    "text": "and we see that this\nspecific permutation achieves",
    "start": "2201170",
    "end": "2208170"
  },
  {
    "text": "this congestion. So this is the\nend of this proof. So that's great.",
    "start": "2208170",
    "end": "2214070"
  },
  {
    "text": "So now, what we'd\nlike to do is we'd like to combine\nthese two networks and see what we can\nlearn from both.",
    "start": "2214070",
    "end": "2221339"
  },
  {
    "text": "So now, we'll be taking out\na lot of chalk over here.",
    "start": "2221340",
    "end": "2229910"
  },
  {
    "text": "So the idea is to construct\na butterfly network and I will draw it in\nsuch a way that you can",
    "start": "2229910",
    "end": "2239930"
  },
  {
    "text": "see the recursive structure. ",
    "start": "2239930",
    "end": "2245619"
  },
  {
    "text": "The idea is to do\nthe following thing.",
    "start": "2245620",
    "end": "2254630"
  },
  {
    "text": "So let me see how I\ncan do this the best. So I will just do the top line\nfirst and I have the spacing.",
    "start": "2254630",
    "end": "2265240"
  },
  {
    "text": "So we have input zero, a\nterminal, we have a switch,",
    "start": "2265240",
    "end": "2270710"
  },
  {
    "text": "we have a switch, we have\na switch, and another one,",
    "start": "2270710",
    "end": "2278230"
  },
  {
    "text": "and here, we have\nthe output zero. So the whole idea\nis that I'm going",
    "start": "2278230",
    "end": "2286859"
  },
  {
    "text": "to combine every two outputs\nby using a small butterfly",
    "start": "2286860",
    "end": "2293800"
  },
  {
    "text": "structure. So we have two, output three,\noutput four-- actually,",
    "start": "2293800",
    "end": "2306949"
  },
  {
    "text": "I need a little bit more space. ",
    "start": "2306949",
    "end": "2313001"
  },
  {
    "text": "Do it once more, output\none, two, three, four, five,",
    "start": "2313001",
    "end": "2326460"
  },
  {
    "text": "six, and a last one, seven. This is going to be\npretty tight on the board.",
    "start": "2326460",
    "end": "2331900"
  },
  {
    "text": "So what's happening is this. So these are all connected,\nof course, to switches.",
    "start": "2331900",
    "end": "2337670"
  },
  {
    "text": "The switches output those. ",
    "start": "2337670",
    "end": "2345540"
  },
  {
    "text": "And the idea is that we create\nthe following structure.",
    "start": "2345540",
    "end": "2351490"
  },
  {
    "text": "This switch can either\nforward it over here or it can cross it over\nto this particular line.",
    "start": "2351490",
    "end": "2357430"
  },
  {
    "text": "And this switch can either\nforward it or cross it over to this line. So this is a very small\nbutterfly structure.",
    "start": "2357430",
    "end": "2364180"
  },
  {
    "text": "Here, we have two\ninputs and two outputs. And we will repeat this\nprocess and we'll do the same",
    "start": "2364180",
    "end": "2371340"
  },
  {
    "text": "on each of these other levels. So we forward those or\nwe cross them, like this.",
    "start": "2371340",
    "end": "2384160"
  },
  {
    "text": " And now that we have constructed\nall these smaller butterfly",
    "start": "2384160",
    "end": "2393190"
  },
  {
    "text": "structures, we can start\nto combine two butterfly structures together\nin the bigger one.",
    "start": "2393190",
    "end": "2399020"
  },
  {
    "text": "So here, we had two\noutputs that we combined in a butterfly structure. Now, we use two\nbutterfly structures",
    "start": "2399020",
    "end": "2404700"
  },
  {
    "text": "that we put into\na bigger version.",
    "start": "2404700",
    "end": "2409930"
  },
  {
    "text": "So how do we do this? Well, we have that the\nupper half over here",
    "start": "2409930",
    "end": "2416130"
  },
  {
    "text": "can either forward those\npackets or cross them over",
    "start": "2416130",
    "end": "2421299"
  },
  {
    "text": "to the bottom part\nbutterfly structure. So for these, we can either\nforward them straight on",
    "start": "2421300",
    "end": "2430880"
  },
  {
    "text": "or we can go to\nthe top butterfly.",
    "start": "2430880",
    "end": "2436289"
  },
  {
    "text": "So you see that these two\ninputs, these two switches, either can forward packets\nto this sub-butterfly network",
    "start": "2436290",
    "end": "2446329"
  },
  {
    "text": "or to the top butterfly network. Now, we'll continue this\nprocess and for these, you'll",
    "start": "2446330",
    "end": "2454840"
  },
  {
    "text": "do the same. So we can either go\nstraight or we go down.",
    "start": "2454840",
    "end": "2461490"
  },
  {
    "text": "And over here, we\ncan go straight or we can go to the\ntop butterfly network.",
    "start": "2461490",
    "end": "2468320"
  },
  {
    "text": "Well, now we have the final part\nwhere we combine essentially",
    "start": "2468320",
    "end": "2475520"
  },
  {
    "text": "these two butterfly networks. We have two butterfly networks\ncreated here now composed again",
    "start": "2475520",
    "end": "2483109"
  },
  {
    "text": "of smaller ones\nand these two are being composed to this\nbigger butterfly network. Again, we take\nthese four switches.",
    "start": "2483110",
    "end": "2492410"
  },
  {
    "text": "They can route their\npackets forward to the top butterfly sub-network\nor to the bottom one.",
    "start": "2492410",
    "end": "2500250"
  },
  {
    "text": "So they can either\ngo straight ahead or this one can connect\nto the first over here,",
    "start": "2500250",
    "end": "2508480"
  },
  {
    "text": "this one to the second, to the\nthird, and this to the fourth. And in the same style, these can\nforward them straight like this",
    "start": "2508480",
    "end": "2519500"
  },
  {
    "text": "and then go up like this.",
    "start": "2519500",
    "end": "2529760"
  },
  {
    "text": "And these are all connected\nbecause in this example, let's just have an\neight by eight network,",
    "start": "2529760",
    "end": "2535300"
  },
  {
    "text": "butterfly network. We have input zero to seven.",
    "start": "2535300",
    "end": "2541790"
  },
  {
    "start": "2541790",
    "end": "2552820"
  },
  {
    "text": "So this is the\nbutterfly network. In a way, what you\ncan see here is you can see sort of the\ntwo-dimensional structure,",
    "start": "2552820",
    "end": "2558950"
  },
  {
    "text": "like we have rows and columns. At the same time, we can also\nsee this binary sort of tree",
    "start": "2558950",
    "end": "2566329"
  },
  {
    "text": "feeling we get from it, which\nis that a switch can forward",
    "start": "2566330",
    "end": "2571860"
  },
  {
    "text": "sort of its packets to\neither, say, the top butterfly",
    "start": "2571860",
    "end": "2578040"
  },
  {
    "text": "or the bottom butterfly. So there's a split in two. The same for this one, right?",
    "start": "2578040",
    "end": "2583270"
  },
  {
    "text": "This one goes either to\nthis butterfly network or it goes to this\nbutterfly network.",
    "start": "2583270",
    "end": "2589850"
  },
  {
    "text": "So you have this tree\nstructure sort of embedded in this\ntwo-dimensional structure.",
    "start": "2589850",
    "end": "2596000"
  },
  {
    "text": "So what are the\nproperties of this one? So let me first define in\nmore formal mathematics",
    "start": "2596000",
    "end": "2608690"
  },
  {
    "text": "how the switches\nroute their packets, so how the connections are.",
    "start": "2608690",
    "end": "2615630"
  },
  {
    "text": "So in order to do that, we are\ngoing to label each switch. ",
    "start": "2615630",
    "end": "2622720"
  },
  {
    "text": "And the idea is that we're\ngoing to label it by its row and by its column.",
    "start": "2622720",
    "end": "2628480"
  },
  {
    "text": "So we will have--\nthe columns are",
    "start": "2628480",
    "end": "2633580"
  },
  {
    "text": "numbered by level zero, level\none, level two, level three,",
    "start": "2633580",
    "end": "2641530"
  },
  {
    "text": "yes? And the rows are\nthese integers, but we",
    "start": "2641530",
    "end": "2646625"
  },
  {
    "text": "are going to represent\nthem by binary numbers. So zero would be 000, 001,\n010, 011-- oops-- 100, 101,",
    "start": "2646625",
    "end": "2662210"
  },
  {
    "text": "and then we got 110 and 111.",
    "start": "2662210",
    "end": "2669320"
  },
  {
    "text": "So for example, this particular\nswitch would be labeled by these three bits, 001,\nand the integer number, 1.",
    "start": "2669320",
    "end": "2678040"
  },
  {
    "text": "This one would be 011 and its\ncolumn is indexed by integer 2.",
    "start": "2678040",
    "end": "2688520"
  },
  {
    "text": "So a switch is\nuniquely identified",
    "start": "2688520",
    "end": "2704010"
  },
  {
    "text": "by its row and column.",
    "start": "2704010",
    "end": "2709130"
  },
  {
    "text": " We will have b1\nup to b logarithm",
    "start": "2709130",
    "end": "2718820"
  },
  {
    "text": "of n, which are\nthe number of bits to represent the row in\ndigits, and to finally",
    "start": "2718820",
    "end": "2725670"
  },
  {
    "text": "have an integer l and this\nwe will call the level.",
    "start": "2725670",
    "end": "2731299"
  },
  {
    "text": "So this particular switch either\ndirects or routes a packet",
    "start": "2731300",
    "end": "2737480"
  },
  {
    "text": "to the switch that is\nindexed by b one up to--",
    "start": "2737480",
    "end": "2743790"
  },
  {
    "text": "and then we get b, l plus 1\nand we take its complement. So instead of if b,\nl plus n would be 1,",
    "start": "2743790",
    "end": "2751570"
  },
  {
    "text": "we would have a 0 here. If it would be a 0, we\nwill have a 1 over here. ",
    "start": "2751570",
    "end": "2758370"
  },
  {
    "text": "But we repeat all the other\nbits and we get to b log n.",
    "start": "2758370",
    "end": "2765030"
  },
  {
    "text": "And it routes us back\nto the next level. So we will have l plus 1.",
    "start": "2765030",
    "end": "2771480"
  },
  {
    "text": "Another possibility because\nthere are two outgoing edges is if we have just b1 and\nwe just copy b, l plus 1,",
    "start": "2771480",
    "end": "2783570"
  },
  {
    "text": "essentially. We route a packet\nstraightforward. We don't do anything special.",
    "start": "2783570",
    "end": "2789329"
  },
  {
    "text": "We get b log n over here\nand then to the next level. So for example, let's see where\nwe can see how this works.",
    "start": "2789330",
    "end": "2797980"
  },
  {
    "text": "So for example, take\nthis particular switch. We have 010.",
    "start": "2797980",
    "end": "2805980"
  },
  {
    "text": "So it can either go straight\non to the next level. It would go to 010 but\nthen instead of level one,",
    "start": "2805980",
    "end": "2812299"
  },
  {
    "text": "we have level two, which is\nthe right edge over there.",
    "start": "2812300",
    "end": "2818070"
  },
  {
    "text": "The other one is if\nthis one goes up, well, we will need to switch the\nfirst bit over here, a 1.",
    "start": "2818070",
    "end": "2834120"
  },
  {
    "text": "We swap it into 0 and then we\ngo to the three zeros over here and we go to the\nnext level and that",
    "start": "2834120",
    "end": "2841120"
  },
  {
    "text": "would be this particular rule. So what we can do here is\nto-- so when we see this,",
    "start": "2841120",
    "end": "2849650"
  },
  {
    "text": "we can start to figure out\nhow we can direct inputs to outputs.",
    "start": "2849650",
    "end": "2856040"
  },
  {
    "text": "So let's do this. ",
    "start": "2856040",
    "end": "2865410"
  },
  {
    "text": "So suppose I want to route a\npacket from a certain input,",
    "start": "2865410",
    "end": "2875950"
  },
  {
    "text": "one of these, all the way to\none of the outputs over here.",
    "start": "2875950",
    "end": "2884430"
  },
  {
    "text": "So the way to do\nthis is as follows.",
    "start": "2884430",
    "end": "2889900"
  },
  {
    "text": "We can just start-- for example,\nI want to go from switch x1",
    "start": "2889900",
    "end": "2895609"
  },
  {
    "text": "up to x log n comma 0.",
    "start": "2895610",
    "end": "2901120"
  },
  {
    "text": "So I start completely\nat the left over here and I want to go somewhere\nof my choice to the right.",
    "start": "2901120",
    "end": "2908780"
  },
  {
    "text": "So I want to somehow move all\nthe way to some other row, y1",
    "start": "2908780",
    "end": "2916660"
  },
  {
    "text": "indexed by y by the bit\npattern, y1 up to y log n, but now at the very last\nlevel, which is log n.",
    "start": "2916660",
    "end": "2926670"
  },
  {
    "text": "Well, how do I do it? Well, this switch, I can\nuse that rule up there and simply change x1 to y1.",
    "start": "2926670",
    "end": "2935380"
  },
  {
    "text": "I can either leave x1 as it\nis if it's the same as y1 or I can swap it\nto its complement",
    "start": "2935380",
    "end": "2941840"
  },
  {
    "text": "if that's the value of y1. So what I can do is I can\njust simply route it to y1.",
    "start": "2941840",
    "end": "2950540"
  },
  {
    "text": "And then, I leave all\nthe other bits the same, which are x2, x3, all\nthe way up to x log n.",
    "start": "2950540",
    "end": "2959940"
  },
  {
    "text": "And we will have\nreached the first level.",
    "start": "2959940",
    "end": "2967310"
  },
  {
    "text": "Now, this one can go\nto-- well, now I'm going to swap the second bit\ninto the bit of my choice.",
    "start": "2967310",
    "end": "2974420"
  },
  {
    "text": "So I leave all the other\nbits the same, y1 the same, x3, all the others the same.",
    "start": "2974420",
    "end": "2979470"
  },
  {
    "text": "I just swap x2 into y2. So we leave all those equal\nand we go to the second level.",
    "start": "2979470",
    "end": "2990099"
  },
  {
    "text": "And then, we go all the\nway to the final level and we one by one\nswap all these bits.",
    "start": "2990100",
    "end": "2996933"
  },
  {
    "text": "So let's have an example.  Suppose I want to\nconnect, let's say,",
    "start": "2996934",
    "end": "3004030"
  },
  {
    "text": "this one to for\nexample, well, let's say",
    "start": "3004030",
    "end": "3010960"
  },
  {
    "text": "this particular output. So what's the\nbinary for this one?",
    "start": "3010960",
    "end": "3019570"
  },
  {
    "text": "This is actually 101. So if the first bit is\ndifferent, I need to cross.",
    "start": "3019570",
    "end": "3029029"
  },
  {
    "text": "And otherwise, I need\nto pass straight on. So let's do this.",
    "start": "3029030",
    "end": "3035260"
  },
  {
    "text": "So over here, I'm in 011. I need to go to 101 so we need\nto change the zero into a one.",
    "start": "3035260",
    "end": "3042110"
  },
  {
    "text": "So I need to go down. I need to cross. ",
    "start": "3042110",
    "end": "3051150"
  },
  {
    "text": "Now, if I look at\nthe second bit, I also need to change\nit to a zero so again,",
    "start": "3051150",
    "end": "3060190"
  },
  {
    "text": "I need to cross,\nwhich is over here. Now, the third bit is equal\nto 1 and it's the same.",
    "start": "3060190",
    "end": "3070240"
  },
  {
    "text": "So now, I can go straight ahead. I do not cross and I\nend up at this output.",
    "start": "3070240",
    "end": "3078280"
  },
  {
    "text": "So what did I do? For every bit that\nis different, I cross and for the bits that are the\nsame, I go straight ahead.",
    "start": "3078280",
    "end": "3085480"
  },
  {
    "text": "So this is how I can route\npackets from one input to another output. ",
    "start": "3085480",
    "end": "3094859"
  },
  {
    "text": "So let's look at the parameters. First of all, if you\nlook at the diameter,",
    "start": "3094860",
    "end": "3103810"
  },
  {
    "text": "well, it turns out that\nthat's approximately equal to the number of levels,\nwhich is the logarithm of n.",
    "start": "3103810",
    "end": "3111800"
  },
  {
    "text": "And to be precise, it's\nactually equal to 2 plus the logarithm of n.",
    "start": "3111800",
    "end": "3117599"
  },
  {
    "text": "So that's great. That's a good scaling. Again, it's back to\nthe logarithm of n. So we have the best of\nthese two parameters.",
    "start": "3117600",
    "end": "3126410"
  },
  {
    "text": "The switches that we see have\ntwo inputs and two outputs. So we again have a\ntwo times two switch.",
    "start": "3126410",
    "end": "3135710"
  },
  {
    "text": "The number of\nswitches is the number of rows times the\nnumber of columns. The number of columns is the\nlogarithm of n and number",
    "start": "3135710",
    "end": "3142790"
  },
  {
    "text": "of rows is equal to n. And to make it a\nlittle bit, precise,",
    "start": "3142790",
    "end": "3147910"
  },
  {
    "text": "it's 1 plus the logarithm of n. So that's somewhere\nin between those two. But if you're thinking\nabout it, it's",
    "start": "3147910",
    "end": "3154520"
  },
  {
    "text": "much better than n squared. It's almost linear except\nfor a logarithmic factor.",
    "start": "3154520",
    "end": "3160510"
  },
  {
    "text": "For the congestion--\nand we are not going to talk about it here,\nbut you have a problem set",
    "start": "3160510",
    "end": "3166200"
  },
  {
    "text": "assignment that will\nask you to solve this-- is that\nactually, the congestion",
    "start": "3166200",
    "end": "3174160"
  },
  {
    "text": "is the square root of n or it's\nequal to the square root of n",
    "start": "3174160",
    "end": "3179650"
  },
  {
    "text": "over 2, depending on\nwhether n is an even power or n is an odd power.",
    "start": "3179650",
    "end": "3186355"
  },
  {
    "text": "Now, we're not going\nto prove that here because we want to step forward\nto this particular network. It's very exciting.",
    "start": "3186355",
    "end": "3192620"
  },
  {
    "text": "And you will prove this\nin your problem set. So this one is somewhere\nin between, somewhere",
    "start": "3192620",
    "end": "3198750"
  },
  {
    "text": "in between these two extremes. Now, it will be really\nfantastic if we can somehow",
    "start": "3198750",
    "end": "3205100"
  },
  {
    "text": "transform this network\nwith a trick to, again, have a really\ngreat congestion",
    "start": "3205100",
    "end": "3211310"
  },
  {
    "text": "of just a constant, like two\nor three or whatever or maybe",
    "start": "3211310",
    "end": "3216550"
  },
  {
    "text": "even one. So for this particular\nnetwork, in the 1960s,",
    "start": "3216550",
    "end": "3222780"
  },
  {
    "text": "Benes, a Bell Labs\nresearcher, had the great idea to use a butterfly network\nand attach to it, again,",
    "start": "3222780",
    "end": "3231490"
  },
  {
    "text": "a butterfly network,\nback to back sort of. So what was his idea?",
    "start": "3231490",
    "end": "3238160"
  },
  {
    "text": "His idea was to\ndo the following. So the butterfly network\nas we have it right now",
    "start": "3238160",
    "end": "3250500"
  },
  {
    "text": "is this particular\npart over here. And the idea is now to start\nup mixing all those outputs",
    "start": "3250500",
    "end": "3260300"
  },
  {
    "text": "that we got here together\nagain using a similar rule. So what do we do?",
    "start": "3260300",
    "end": "3265990"
  },
  {
    "text": "We are going to\nessentially repeat",
    "start": "3265990",
    "end": "3276270"
  },
  {
    "text": "this particular\nstructure on this side. So how do we do it?",
    "start": "3276270",
    "end": "3283090"
  },
  {
    "text": "Well, we go either\nstraightforward",
    "start": "3283090",
    "end": "3288850"
  },
  {
    "text": "or we start to mix them again. So it's like this output,\nthis particular switch,",
    "start": "3288850",
    "end": "3295150"
  },
  {
    "text": "can either go straight\nahead or can cross to the lower part over here.",
    "start": "3295150",
    "end": "3301940"
  },
  {
    "text": "It goes over here and\nthis one goes over. So as you can see, we\nhave repeated this part.",
    "start": "3301940",
    "end": "3308240"
  },
  {
    "text": "It's exactly the same as\nthis structure over here. We'll do the same for this part.",
    "start": "3308240",
    "end": "3319820"
  },
  {
    "text": "So we can either cross or\nwe can go straight ahead.",
    "start": "3319820",
    "end": "3324910"
  },
  {
    "text": "Oh, we also have, of\ncourse, that these switches can go straight ahead\nor can cross to the top.",
    "start": "3324910",
    "end": "3331470"
  },
  {
    "text": "I forgot about that. So we have this--\noops-- as well.",
    "start": "3331470",
    "end": "3337079"
  },
  {
    "text": "So as you can see, this\nparticular structure repeats itself\nagain and we slowly start to build up in mixing\nall the outputs again",
    "start": "3337080",
    "end": "3345820"
  },
  {
    "text": "or the possibility, at least,\nto route them to any other row.",
    "start": "3345820",
    "end": "3354510"
  },
  {
    "text": "So how do we do this? Well, we continue this\nparticular structure now over here. So all these can either\ngo straight ahead.",
    "start": "3354510",
    "end": "3361850"
  },
  {
    "start": "3361850",
    "end": "3367435"
  },
  {
    "text": "That's a possibility.  Or they can go all down.",
    "start": "3367435",
    "end": "3375330"
  },
  {
    "text": " So this switch can\neither go straight ahead",
    "start": "3375330",
    "end": "3380849"
  },
  {
    "text": "or can go to the lower half. And for these, we have\na similar structure.",
    "start": "3380850",
    "end": "3386610"
  },
  {
    "text": "We can either go straight ahead\nor such a switch can cross over",
    "start": "3386610",
    "end": "3393340"
  },
  {
    "text": "to the top over here. ",
    "start": "3393340",
    "end": "3402180"
  },
  {
    "text": "So that's this. So this is Benes network and\nthen over here, of course, we have the outputs, zero, one,\nand all the way down to seven.",
    "start": "3402180",
    "end": "3419970"
  },
  {
    "start": "3419970",
    "end": "3431340"
  },
  {
    "text": "So as you can see over\nhere, the structure again has a recursive nature to it.",
    "start": "3431340",
    "end": "3437980"
  },
  {
    "text": "You can see that this big\nBenes network over here",
    "start": "3437980",
    "end": "3444340"
  },
  {
    "text": "consists of two\nsmaller ones that are right here in the\nmiddle, this one that",
    "start": "3444340",
    "end": "3450390"
  },
  {
    "text": "goes all the way up to\nhere-- so maybe I should put a color boundary around it.",
    "start": "3450390",
    "end": "3457290"
  },
  {
    "text": "Let me check I want\nto do this-- right.",
    "start": "3457290",
    "end": "3464280"
  },
  {
    "text": "So this particular\npart, is again",
    "start": "3464280",
    "end": "3472150"
  },
  {
    "text": "a Benes network and the top\npart in the same picture,",
    "start": "3472150",
    "end": "3478809"
  },
  {
    "text": "the top subnetwork is also\na Benes network, this part.",
    "start": "3478810",
    "end": "3485800"
  },
  {
    "start": "3485800",
    "end": "3493300"
  },
  {
    "text": "And if you look\nwithin those, we again see a top part\nand a bottom part.",
    "start": "3493300",
    "end": "3500599"
  },
  {
    "text": "And over here, we see a top\npart and also a bottom part.",
    "start": "3500600",
    "end": "3505830"
  },
  {
    "text": "So you see this recursive\nnature again reappearing.",
    "start": "3505830",
    "end": "3511500"
  },
  {
    "text": "It turns out that\nwith this trick, we can completely\neliminate congestion",
    "start": "3511500",
    "end": "3516619"
  },
  {
    "text": "and we can get it to only one,\nwhich is really surprising. And that what we're\ngoing to prove here.",
    "start": "3516620",
    "end": "3522800"
  },
  {
    "text": "So this is a great\ninvention at the time. It's really, really beautiful.",
    "start": "3522800",
    "end": "3528869"
  },
  {
    "text": "So let me put in the\nother parameters. So they stay\napproximately the same",
    "start": "3528870",
    "end": "3534079"
  },
  {
    "text": "up to that the diameter\nis about twice as large because we added another\nsort of whole butterfly",
    "start": "3534080",
    "end": "3540850"
  },
  {
    "text": "structure to it. The switch size stays the same.",
    "start": "3540850",
    "end": "3545960"
  },
  {
    "text": "We, again, have about\ntwo times more switches",
    "start": "3545960",
    "end": "3551190"
  },
  {
    "text": "so they sort of stay about the\nsame up to a linear factor, like a constant factor.",
    "start": "3551190",
    "end": "3558380"
  },
  {
    "text": "And the congestion, however,\ncompletely dropped down to one. So that's what we're\ngoing to prove now.",
    "start": "3558380",
    "end": "3564490"
  },
  {
    "text": "And in order to\nget some intuition, well, let me first\nwrite down the theorem. ",
    "start": "3564490",
    "end": "3572329"
  },
  {
    "text": "Actually, let me\nput this over here. ",
    "start": "3572330",
    "end": "3583840"
  },
  {
    "text": "So in order to get\nsome insight into this,",
    "start": "3583840",
    "end": "3594530"
  },
  {
    "text": "we are going to use\nthis recursive nature. So we're going to use\ninduction and we're going to say, oh,\nfor any permutation,",
    "start": "3594530",
    "end": "3603099"
  },
  {
    "text": "I can find really good routing\nfor say, this red subnetwork and for this blue subnetwork.",
    "start": "3603100",
    "end": "3609869"
  },
  {
    "text": "So I know that. So what I need to do is, if I\nhave my bigger Benes network,",
    "start": "3609870",
    "end": "3617960"
  },
  {
    "text": "like this one, I would\nneed to somehow map these inputs-- I\nneed to route them",
    "start": "3617960",
    "end": "3625329"
  },
  {
    "text": "to either the top and the bottom\nsubnetwork, one of the two, in such a way that\nthere will be absolutely",
    "start": "3625330",
    "end": "3632840"
  },
  {
    "text": "no congestion, because\nwe want to keep this one. So a switch should only\nsee one packet coming in.",
    "start": "3632840",
    "end": "3639300"
  },
  {
    "text": "So that means, for example--\nand we'll come back to that-- that for example,\nfor this switch, it should not receive a\npacket from both this input",
    "start": "3639300",
    "end": "3647260"
  },
  {
    "text": "and from this input. So the intuition that\nwe are going to create is we're going to list our\nconstraints, the constraints",
    "start": "3647260",
    "end": "3658510"
  },
  {
    "text": "that we need to satisfy, like\nthe zero and the fourth input should not both be mapped to\nthis top subnetwork and so on.",
    "start": "3658510",
    "end": "3667950"
  },
  {
    "text": "So we will get into\nthat and then we will gain a lot of intuition\non how to solve this.",
    "start": "3667950",
    "end": "3675100"
  },
  {
    "text": "So what's the theorem? So the theorem is that the\ncongestion of the n-input Benes",
    "start": "3675100",
    "end": "3692970"
  },
  {
    "text": "network is actually equal to 1.",
    "start": "3692970",
    "end": "3701109"
  },
  {
    "text": "And we will prove this for\nn equal to a power of 2.",
    "start": "3701110",
    "end": "3706320"
  },
  {
    "text": "We have assumed\nthat at the start that we had with all the\nother networks, as well.",
    "start": "3706320",
    "end": "3714280"
  },
  {
    "text": "And in this case, we\nwill use induction on a.",
    "start": "3714280",
    "end": "3720340"
  },
  {
    "text": "So that's the\nmethod that we will do because that's also\nthe recursive structure",
    "start": "3720340",
    "end": "3726790"
  },
  {
    "text": "of the Benes network itself. So we will use\ninduction on a and we",
    "start": "3726790",
    "end": "3737930"
  },
  {
    "text": "are going to define the\ninduction hypothesis simply as, \"The theorem is true for a.\"",
    "start": "3737930",
    "end": "3754210"
  },
  {
    "text": "Now, let us do the base case. We always start\nwith the base case and that should be pretty\neasy because this is",
    "start": "3754210",
    "end": "3761140"
  },
  {
    "text": "the most basic Benes network. So n equals 2 to the power of 1.",
    "start": "3761140",
    "end": "3768630"
  },
  {
    "text": "We essentially have two inputs,\nan input zero and an input one.",
    "start": "3768630",
    "end": "3777210"
  },
  {
    "text": "They are connected to these\nswitches over here that can either forward them\nor can cross them over",
    "start": "3777210",
    "end": "3785010"
  },
  {
    "text": "and then they go\ndirectly to the output. Notice that in\nthis case, we just",
    "start": "3785010",
    "end": "3790250"
  },
  {
    "text": "have the most elementary\nbutterfly network. It's the same. So we have output\nzero and output one.",
    "start": "3790250",
    "end": "3799160"
  },
  {
    "text": "So this corresponds\nin this picture to these little small\nthings over here,",
    "start": "3799160",
    "end": "3805090"
  },
  {
    "text": "this one and this one\nand this one over here and the fourth one over here.",
    "start": "3805090",
    "end": "3812440"
  },
  {
    "text": "So now, let's take\nany permutation. We want to show that we\ncan route it in such a way that there's only a\ncongestion of one.",
    "start": "3812440",
    "end": "3820910"
  },
  {
    "text": "So let's do this. ",
    "start": "3820910",
    "end": "3831970"
  },
  {
    "text": "So there are essentially\nonly two permutations. Either zero is mapped\nto zero and one is mapped to one or\nzero is mapped to one",
    "start": "3831970",
    "end": "3839650"
  },
  {
    "text": "and one is mapped to zero.  So in both cases, we\ncan just route them",
    "start": "3839650",
    "end": "3847690"
  },
  {
    "text": "through their own switches. So we have that either pi\nof 0 equals 0 and pi of 1",
    "start": "3847690",
    "end": "3857869"
  },
  {
    "text": "equals 1, in which case we just\ndirect them straight through",
    "start": "3857870",
    "end": "3863460"
  },
  {
    "text": "and we go straight through\nand every switch only sees a packet once. So for this particular\npermutation,",
    "start": "3863460",
    "end": "3870309"
  },
  {
    "text": "we have a congestion of one. Now, the other permutation\nthat we can have",
    "start": "3870310",
    "end": "3876160"
  },
  {
    "text": "is if zero is mapped to one\nand if one is mapped to zero. Well, in that\ncase, we just route",
    "start": "3876160",
    "end": "3884109"
  },
  {
    "text": "this cross over\nto the bottom row and here we go from this\nswitch to the top row.",
    "start": "3884110",
    "end": "3891650"
  },
  {
    "text": "Again, every switch\nonly sees a packet once. So in this case, in the\nbase case, we are done.",
    "start": "3891650",
    "end": "3898460"
  },
  {
    "text": "We are happy. We have shown that the\ncongestion is equal to one. So now, it gets\nto the harder part",
    "start": "3898460",
    "end": "3907060"
  },
  {
    "text": "because for the\ninductive step, we are going to assume,\nof course, that it",
    "start": "3907060",
    "end": "3915559"
  },
  {
    "text": "holds true for a\nsmaller Benes network. So we assume that P a\nis true and well, let's",
    "start": "3915560",
    "end": "3929329"
  },
  {
    "text": "try to gain some insight here. So we know from our\ninduction hypothesis,",
    "start": "3929330",
    "end": "3937600"
  },
  {
    "text": "within each subnetwork, we\ncan solve any routing problem",
    "start": "3937600",
    "end": "3943830"
  },
  {
    "text": "with congestion one and for\nthis subnetwork, the same. That's our induction hypothesis.",
    "start": "3943830",
    "end": "3949990"
  },
  {
    "text": "So how do we go ahead? We need to somehow\nmap these inputs",
    "start": "3949990",
    "end": "3955779"
  },
  {
    "text": "according to the\npermutation of our choice. So that could be for\nsome input zero goes",
    "start": "3955780",
    "end": "3961110"
  },
  {
    "text": "to output five or input one\ngoes to output two, et cetera.",
    "start": "3961110",
    "end": "3966580"
  },
  {
    "text": "So somehow, we need\nto choose where we are going to map this\nparticular input to.",
    "start": "3966580",
    "end": "3974119"
  },
  {
    "text": "So packet zero that\ncomes from this input should either go\nto the red network",
    "start": "3974120",
    "end": "3981110"
  },
  {
    "text": "or it should go to\nthe blue network. And for each of these inputs,\nwe can make such a choice.",
    "start": "3981110",
    "end": "3987999"
  },
  {
    "text": "But we have to be\nvery smart about it because we need to\navoid any congestion.",
    "start": "3987999",
    "end": "3993040"
  },
  {
    "text": "So the intuition\nis that we're going to set up a constraint graph,\na graph that represents all",
    "start": "3993040",
    "end": "4004170"
  },
  {
    "text": "the constraints that we\nneed to satisfy in order to achieve congestion of one.",
    "start": "4004170",
    "end": "4009990"
  },
  {
    "text": "So let's do an\nexample so that we can figure out what's going on. Actually, let me\nput it over here.",
    "start": "4009990",
    "end": "4016829"
  },
  {
    "text": " So just take an\nexample permutation",
    "start": "4016830",
    "end": "4021970"
  },
  {
    "text": "and we'll go\nthrough this example and then see how\nthe proof works. ",
    "start": "4021970",
    "end": "4029240"
  },
  {
    "text": "So let's as an example\nhave pi of zero maps to one, pi of one maps to\nfive, pi of two goes to four,",
    "start": "4029240",
    "end": "4042710"
  },
  {
    "text": "input three goes to\nseven, four maps to three,",
    "start": "4042710",
    "end": "4050826"
  },
  {
    "text": "five to six, six to\nzero, and seven to two.",
    "start": "4050826",
    "end": "4057492"
  },
  {
    "text": "So this is just an\narbitrary permutation. ",
    "start": "4057492",
    "end": "4064430"
  },
  {
    "text": "So what do we see? We want to make sure that, for\nexample, this switch is only",
    "start": "4064430",
    "end": "4070820"
  },
  {
    "text": "seeing one packet. So it cannot see a packet both\ncoming from input zero as well",
    "start": "4070820",
    "end": "4077490"
  },
  {
    "text": "as from input four. I cannot see that. I do not want that to happen.",
    "start": "4077490",
    "end": "4082540"
  },
  {
    "text": "Similarly, for\nthis one, I do not want to see a packet coming\nfrom one or one from five.",
    "start": "4082540",
    "end": "4089550"
  },
  {
    "text": "So let me define a constraint\ngraph that sort of represents this. So the constraint graph\nthat we are interested in",
    "start": "4089550",
    "end": "4102028"
  },
  {
    "text": "is defined as follows. ",
    "start": "4102029",
    "end": "4107479"
  },
  {
    "text": "If two packets must pass\nthrough different networks,",
    "start": "4107479",
    "end": "4124359"
  },
  {
    "text": "subnetworks-- so in our case,\nthe red and blue subnetwork--",
    "start": "4124359",
    "end": "4136568"
  },
  {
    "text": "then we'll actually have\nan edge between those two. So then, there is an\nedge between them.",
    "start": "4136569",
    "end": "4150470"
  },
  {
    "text": "So for this example, we're\ngoing to set up this constraint graph. ",
    "start": "4150470",
    "end": "4173600"
  },
  {
    "text": "So I was just talking about\nthis particular switch. It cannot see one coming from\nfour and a packet from zero.",
    "start": "4173600",
    "end": "4181020"
  },
  {
    "text": "So what he have, we have an\nedge between zero and four.",
    "start": "4181020",
    "end": "4187140"
  },
  {
    "text": "In the same way, we have\nan edge from one to five.",
    "start": "4187140",
    "end": "4192539"
  },
  {
    "text": "Why? Because a packet that comes\nfrom input one and a packet that",
    "start": "4192539",
    "end": "4197735"
  },
  {
    "text": "comes from input five cannot\nboth be routed through the switch because then the\nswitch would see two packets",
    "start": "4197735",
    "end": "4205370"
  },
  {
    "text": "and then the congestion would\nnot be one, but two, right? So one and five also\nhave an edge in between.",
    "start": "4205370",
    "end": "4211735"
  },
  {
    "text": " And in the same way, we have\ntwo and six and seven and three.",
    "start": "4211735",
    "end": "4220760"
  },
  {
    "text": "So two and six is this\nconstraint, like two and six",
    "start": "4220760",
    "end": "4228519"
  },
  {
    "text": "over here. And three and seven is\nthe other constraint. So if I have those constraints\nin place, well then,",
    "start": "4228520",
    "end": "4236470"
  },
  {
    "text": "I know that the routing\nthat goes from level zero",
    "start": "4236470",
    "end": "4241540"
  },
  {
    "text": "to level one will not\nviolate my congestion of one.",
    "start": "4241540",
    "end": "4246580"
  },
  {
    "text": "So that's great. Then, I hope to be able to\nuse the induction hypothesis and I get a proper routing\nwithin the red subnetwork",
    "start": "4246580",
    "end": "4254159"
  },
  {
    "text": "and one within the blue network. And then, I need to map\nall these to these outputs.",
    "start": "4254160",
    "end": "4260770"
  },
  {
    "text": "So I also have constraints\non these outputs because, well, For example,\ntake this particular switch.",
    "start": "4260770",
    "end": "4269489"
  },
  {
    "text": "It should not see a packet\ncoming from this particular one and one from this one.",
    "start": "4269490",
    "end": "4275219"
  },
  {
    "text": "So how do I code that up? ",
    "start": "4275220",
    "end": "4283950"
  },
  {
    "text": "So let me first write\nout what we did here and then we'll do the same\nfor the last level over there.",
    "start": "4283950",
    "end": "4292090"
  },
  {
    "text": "So-- oh no, that's\nnot really necessary. ",
    "start": "4292090",
    "end": "4301770"
  },
  {
    "text": "So at the output\nside over here, we have similar constraints\nas we did over here. And in this particular\nexample, just as an example,",
    "start": "4301770",
    "end": "4311800"
  },
  {
    "text": "suppose we look\nat the packet that is destined for output zero.",
    "start": "4311800",
    "end": "4324826"
  },
  {
    "text": "Well, what is this packet? Well, I know that's\npi of 6 is equal to 0,",
    "start": "4324827",
    "end": "4330620"
  },
  {
    "text": "according to my example. So packet six is destined\nfor this particular output",
    "start": "4330620",
    "end": "4336530"
  },
  {
    "text": "zero over here and goes\nthrough this particular switch.",
    "start": "4336530",
    "end": "4343539"
  },
  {
    "text": "So this packet and\nalso the packet",
    "start": "4343540",
    "end": "4359890"
  },
  {
    "text": "for output four, which is if\nyou look at the mapping, pi of 2",
    "start": "4359890",
    "end": "4366820"
  },
  {
    "text": "is equal to 4. So that's packet number two. Well, both of these packets\ncannot pass through the same",
    "start": "4366820",
    "end": "4375679"
  },
  {
    "text": "subnetwork. ",
    "start": "4375680",
    "end": "4386990"
  },
  {
    "text": "So why is this? So let's look at this\nparticular example. So output zero, well,\ncomes from packet six,",
    "start": "4386990",
    "end": "4398680"
  },
  {
    "text": "somewhere over there. Now suppose packet six was\nrouted through the red network",
    "start": "4398680",
    "end": "4405780"
  },
  {
    "text": "and at the same moment\nalso, output four-- the packet that is destined\nfor output four, which",
    "start": "4405780",
    "end": "4411990"
  },
  {
    "text": "is packet number two--\nsuppose packet two was also going through the red network.",
    "start": "4411990",
    "end": "4420010"
  },
  {
    "text": "Well, then I notice that\nboth of these packets",
    "start": "4420010",
    "end": "4426719"
  },
  {
    "text": "must arrive at this particular\nswitch in order for one to be routed to output\nzero and the other one",
    "start": "4426720",
    "end": "4434639"
  },
  {
    "text": "to be routed to output four. So in order to avoid congestion\nin this particular switch",
    "start": "4434640",
    "end": "4441470"
  },
  {
    "text": "over here, we need\nto have a constraint. The constraint says that the\npacket for packets two and six,",
    "start": "4441470",
    "end": "4451150"
  },
  {
    "text": "that those two cannot go\nthrough the same subnetwork. So essentially have\nanother edge over here--",
    "start": "4451150",
    "end": "4458199"
  },
  {
    "text": "we already had the constraint\nbut it's just the same edge.",
    "start": "4458200",
    "end": "4463640"
  },
  {
    "text": "So let's look at the other\nconstraints that we have. ",
    "start": "4463640",
    "end": "4473770"
  },
  {
    "text": "Well, let's look at\na different example. So for example, if I\nlook at this switch,",
    "start": "4473770",
    "end": "4481110"
  },
  {
    "text": "well, if a packet\ngoes through here that needs to end up\nat one and a packet",
    "start": "4481110",
    "end": "4489110"
  },
  {
    "text": "that's goes to five, if\nthose two packets are routed",
    "start": "4489110",
    "end": "4494500"
  },
  {
    "text": "through the same\nred subnetwork, they have to end up here in order to\ngo to both here and to there.",
    "start": "4494500",
    "end": "4500910"
  },
  {
    "text": "So we have congestion of two. So what are those packets? Well, what does pi map\nto to one and five?",
    "start": "4500910",
    "end": "4509809"
  },
  {
    "text": "Let's look over here. We see that pi 0 is equal\nto 1 and pi 1 is equal to 5.",
    "start": "4509810",
    "end": "4519250"
  },
  {
    "text": "So packets zero and one are\nactually mapped to output one and five and\nthey should not go",
    "start": "4519250",
    "end": "4525710"
  },
  {
    "text": "both through the\nsame subnetwork. So we have another\nedge over here.",
    "start": "4525710",
    "end": "4532132"
  },
  {
    "text": "And now, we can continue this\nand we have five and seven. So just have a look over there.",
    "start": "4532132",
    "end": "4537990"
  },
  {
    "text": "See, five and seven, they map\nto the outputs two and six. Again, we have two and six.",
    "start": "4537990",
    "end": "4544650"
  },
  {
    "text": "If they are both mapped to\nthe same network, this one, for example, then I\nwill have a problem.",
    "start": "4544650",
    "end": "4551260"
  },
  {
    "text": " So the other edge is over here.",
    "start": "4551260",
    "end": "4557950"
  },
  {
    "text": " So what did we do here? We started to write out the\nconstraints on this side",
    "start": "4557950",
    "end": "4565810"
  },
  {
    "text": "and we wrote out the\nconstraints on this side. So I only looked at\nthe red subnetwork.",
    "start": "4565810",
    "end": "4572770"
  },
  {
    "text": "That's what I realize now. I could also have looked\nat the blue network. So let's do that also just\nto make the picture complete.",
    "start": "4572770",
    "end": "4579389"
  },
  {
    "text": "So for example, let's look\nat this particular example. The packet six and\ntwo should not both",
    "start": "4579390",
    "end": "4586769"
  },
  {
    "text": "be routed through\nthe blue network because then they\nwould both have",
    "start": "4586770",
    "end": "4592150"
  },
  {
    "text": "to go through this\nswitch, one going up to output zero and one going\nto the right to output four.",
    "start": "4592150",
    "end": "4600300"
  },
  {
    "text": "So in order to avoid\ncongestion at all costs, we have this constraint graph.",
    "start": "4600300",
    "end": "4605949"
  },
  {
    "text": "So now, we come to\nthe key insight. And the key insight is to use\na two-coloring of this graph.",
    "start": "4605950",
    "end": "4613030"
  },
  {
    "text": " So the key insight\nis a two-coloring",
    "start": "4613030",
    "end": "4627110"
  },
  {
    "text": "of the constraint\ngraph, which will",
    "start": "4627110",
    "end": "4632949"
  },
  {
    "text": "lead to a best solution\nfor the routing problem.",
    "start": "4632950",
    "end": "4639130"
  },
  {
    "text": "So let's do this. So we will color this one blue.",
    "start": "4639130",
    "end": "4645220"
  },
  {
    "text": "As you can see, this\nis an even cycle, blue, red, blue, red,\nand blue and red.",
    "start": "4645220",
    "end": "4657030"
  },
  {
    "text": "We will make this one\nblue and this one red. Well, it turns out that we can\nnow start our routing process.",
    "start": "4657030",
    "end": "4667170"
  },
  {
    "text": "So for example, actually,\nI will draw a new graph",
    "start": "4667170",
    "end": "4672660"
  },
  {
    "text": "to make that really clear. ",
    "start": "4672660",
    "end": "4683640"
  },
  {
    "text": "So I have my blue and\nmy red chalk over here to demonstrate what I mean.",
    "start": "4683640",
    "end": "4689215"
  },
  {
    "text": " So what do I do? I have zero, one, two, three,\nfour, five, six, and seven.",
    "start": "4689215",
    "end": "4699969"
  },
  {
    "text": "I have the switches that\ncorrespond to those. ",
    "start": "4699970",
    "end": "4706390"
  },
  {
    "text": "Well, if it's colored red-- so\nzero over here is colored red--",
    "start": "4706390",
    "end": "4713660"
  },
  {
    "text": "I will direct it to\nthe red subnetwork. So where is this red subnetwork?",
    "start": "4713660",
    "end": "4718810"
  },
  {
    "text": "It's really contained over\nhere and the blue one--",
    "start": "4718810",
    "end": "4728800"
  },
  {
    "text": "so this is the red one and\nthe blue one is right here.",
    "start": "4728800",
    "end": "4733851"
  },
  {
    "start": "4733852",
    "end": "4742120"
  },
  {
    "text": "And over here, we have the\noutputs ranging from zero, one,",
    "start": "4742120",
    "end": "4749320"
  },
  {
    "text": "two, all the way to seven.",
    "start": "4749320",
    "end": "4754920"
  },
  {
    "text": "So input zero is colored red. We go straight ahead. We want to go to\nthe red network.",
    "start": "4754920",
    "end": "4760550"
  },
  {
    "text": "Input one is colored blue. It goes, therefore,\nto the blue network.",
    "start": "4760550",
    "end": "4767000"
  },
  {
    "text": "So this is the only\nway how to do it. Input two is colored red. Go straight ahead.",
    "start": "4767000",
    "end": "4773070"
  },
  {
    "text": "Input three is also colored red. Go straight ahead. Input five-- oh, input\nfour is colored blue--",
    "start": "4773070",
    "end": "4782179"
  },
  {
    "text": "goes to the blue network. Input five goes up\nto the red network",
    "start": "4782180",
    "end": "4788619"
  },
  {
    "text": "and input six goes straight\nahead to the blue network. It's colored blue and input\nseven is also colored blue.",
    "start": "4788620",
    "end": "4797280"
  },
  {
    "text": "Let's look at the outputs. So for example, well, let's\nhave a look at output zero.",
    "start": "4797280",
    "end": "4806445"
  },
  {
    "text": " so output zero-- which packet\nis mapped to output zero?",
    "start": "4806445",
    "end": "4815650"
  },
  {
    "text": "It's packet number six. So six was mapped\ninto the blue network",
    "start": "4815650",
    "end": "4823829"
  },
  {
    "text": "and then it needs to be\nmapped to output zero. So there's only\none edge that goes",
    "start": "4823830",
    "end": "4829380"
  },
  {
    "text": "from the blue network\nto output zero, which is this particular one.",
    "start": "4829380",
    "end": "4836600"
  },
  {
    "text": "And then somehow,\nthis one needs to be mapped to this one over here.",
    "start": "4836600",
    "end": "4842489"
  },
  {
    "text": "Now, we can continue like this. Output one should receives\na packet from-- let's look",
    "start": "4842490",
    "end": "4847860"
  },
  {
    "text": "at the permutation-- from five. No, sorry, output one--\npi of 0 is equal to 1",
    "start": "4847860",
    "end": "4855210"
  },
  {
    "text": "so packet zero needs to go\nto this particular output. Now, packet zero is\nin the red network",
    "start": "4855210",
    "end": "4862260"
  },
  {
    "text": "so there's only one edge that\ngoes from the red network to this output.",
    "start": "4862260",
    "end": "4867590"
  },
  {
    "text": "So we need to have a\nconnection over here. Now, we can continue this\nand note and demonstrate--",
    "start": "4867590",
    "end": "4875450"
  },
  {
    "text": "and you can test\nit for yourself, too-- that output\nfour needs to receive a packet from the red network.",
    "start": "4875450",
    "end": "4881889"
  },
  {
    "text": "Actually, it should be this\nparticular one, which happens to be packet number two.",
    "start": "4881890",
    "end": "4887580"
  },
  {
    "text": "And then, we have\nthis one, right?",
    "start": "4887580",
    "end": "4892790"
  },
  {
    "text": "So let me just finish it. We have this and we have these\ntwo and we have this one.",
    "start": "4892790",
    "end": "4907350"
  },
  {
    "text": "We have this one and\nwe have this one.",
    "start": "4907350",
    "end": "4913970"
  },
  {
    "text": "This one goes straight ahead. This one goes all the way up and\nthis one goes all the way up.",
    "start": "4913970",
    "end": "4921920"
  },
  {
    "text": "So what do we see? We see that packets over\nhere, that these switches only",
    "start": "4921920",
    "end": "4928750"
  },
  {
    "text": "see a packet once\nand these ones, as well, these ones also\nand these ones also.",
    "start": "4928750",
    "end": "4934100"
  },
  {
    "text": "So we have directed the\npackets, routed the packets",
    "start": "4934100",
    "end": "4939890"
  },
  {
    "text": "to the red and the blue\nsubnetworks in such a way that the congestion at the last\nlevel and at the first level",
    "start": "4939890",
    "end": "4949920"
  },
  {
    "text": "is still equal to one. Now, we use our\ninduction hypothesis and we conclude that we\ncan map the route that's",
    "start": "4949920",
    "end": "4959323"
  },
  {
    "text": "going to have a routing\nfrom packets from here to here such that the congestion\nwithin the subnetworks",
    "start": "4959324",
    "end": "4964690"
  },
  {
    "text": "is only one, so within the\nblue as well as in the red.",
    "start": "4964690",
    "end": "4970930"
  },
  {
    "text": "So this is the insight into\nhow this works and I notice I am running out of time.",
    "start": "4970930",
    "end": "4976949"
  },
  {
    "text": "So the formal proof we will have\nto postpone until recitation, but that's actually\nreally a very simple thing",
    "start": "4976950",
    "end": "4985890"
  },
  {
    "text": "to do that right now. So just keep this\nkey insight and then",
    "start": "4985890",
    "end": "4991300"
  },
  {
    "text": "you can easily\nprove the theorem. But this is the real insight.",
    "start": "4991300",
    "end": "4998820"
  },
  {
    "text": "Thank you. ",
    "start": "4998820",
    "end": "5004989"
  }
]