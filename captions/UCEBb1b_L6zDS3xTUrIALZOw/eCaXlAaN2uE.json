[
  {
    "text": " The following\ncontent is provided under a Creative\nCommons license. Your support will help MIT\nOpenCourseWare continue",
    "start": "0",
    "end": "6890"
  },
  {
    "text": "to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6890",
    "end": "13349"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13350",
    "end": "23170"
  },
  {
    "text": "PROFESSOR: I hope you're\nall recovered from the quiz. Our apologies for\nhard questions,",
    "start": "23170",
    "end": "30380"
  },
  {
    "text": "but it's just the first quiz. We have a lot more fun\nthings to do in 006.",
    "start": "30380",
    "end": "37535"
  },
  {
    "text": "So today's lecture today's\nlecture is a light lecture, I would even call it a\nrecreational mathematics",
    "start": "37535",
    "end": "43720"
  },
  {
    "text": "lecture. And so, thanks for coming. I'll make it worth\nyour while, all right?",
    "start": "43720",
    "end": "49340"
  },
  {
    "text": "So we're going to talk\nabout irrationals. The motivation behind\nthis is really that every",
    "start": "49340",
    "end": "55250"
  },
  {
    "text": "once in awhile we are going\nto have a situation where we want to compute with numbers\nthat are much longer than 64",
    "start": "55250",
    "end": "65910"
  },
  {
    "text": "bits, which is really the word\nlength in standard computer these days. It used to be 8 bits\nback in the day.",
    "start": "65910",
    "end": "73909"
  },
  {
    "text": "For most of my adult\nlife it was 32 bits.",
    "start": "73910",
    "end": "79070"
  },
  {
    "text": "And recently Intel and AMD\nhave gone to 64-bit processors. But 64 bits ain't\nnear enough if you",
    "start": "79070",
    "end": "87170"
  },
  {
    "text": "want to do what's called high\nprecision computation, you want to find precisely the\nweight of a neutrino,",
    "start": "87170",
    "end": "94790"
  },
  {
    "text": "if you're a physicist,\nfor example. And that, you're talking\nabout literally a hundred",
    "start": "94790",
    "end": "102680"
  },
  {
    "text": "decimal digits,\nwhich is obviously much more than 64 bits. And that's just one example.",
    "start": "102680",
    "end": "109690"
  },
  {
    "text": "So what happens if you want to\ncompute the square root of 2",
    "start": "109690",
    "end": "114820"
  },
  {
    "text": "to a million digits, or\npi to 10 million digits?",
    "start": "114820",
    "end": "120370"
  },
  {
    "text": "How do you do that\non a computer? So that's what we're going\nto do for this module, which",
    "start": "120370",
    "end": "126280"
  },
  {
    "text": "is a short module on numerics. We'll have a lecture today\nand another one on Tuesday",
    "start": "126280",
    "end": "132900"
  },
  {
    "text": "telling you about techniques\nthat use, among other things, Newton's method to compute\nirrational numbers, as one",
    "start": "132900",
    "end": "141740"
  },
  {
    "text": "example, to arbitrary precision\nAnd for your problem set",
    "start": "141740",
    "end": "147560"
  },
  {
    "text": "you are you going to look at\ndifferent application that corresponds to encryption,\nRSA encryption,",
    "start": "147560",
    "end": "155210"
  },
  {
    "text": "where you have to\nwork with primes. These are now integers,\nbut you work with primes",
    "start": "155210",
    "end": "160760"
  },
  {
    "text": "that are thousands of\nbits long, so again, much more than 64 bits.",
    "start": "160760",
    "end": "166159"
  },
  {
    "text": "And so you have to\nthink about how you're going to multiply numbers\nthat are thousands of bits long, how you're going to divide\nnumbers that are thousands",
    "start": "166160",
    "end": "173368"
  },
  {
    "text": "of bits long, and that's really\nthe purpose of this module. So let's start off by\ntalking about irrationals.",
    "start": "173368",
    "end": "179879"
  },
  {
    "start": "179880",
    "end": "184970"
  },
  {
    "text": "And Pythagoras, whom I'm\nsure you've all heard of",
    "start": "184970",
    "end": "192440"
  },
  {
    "text": "is credited with the discovery\nthat a square's diagonal",
    "start": "192440",
    "end": "199740"
  },
  {
    "text": "and its side are\nincommensurable. So you can't really express\nthe ratio as a rational number,",
    "start": "199740",
    "end": "209510"
  },
  {
    "text": "as a ratio of integers. Now it turns out that the\nBabylonians and the Indians",
    "start": "209510",
    "end": "214540"
  },
  {
    "text": "knew this way before\nPythagoras, but he gets credit for the\nPythagoras theorem.",
    "start": "214540",
    "end": "220230"
  },
  {
    "text": "And there's also a\nGreek philosopher, in fact, maybe he was first\na philosopher and then",
    "start": "220230",
    "end": "225799"
  },
  {
    "text": "a mathematician, and he\nthe espoused a philosophy",
    "start": "225800",
    "end": "231410"
  },
  {
    "text": "that, I guess, is called\nPythagorean mysticism, that said that all is number, so\nthe world is about numbers.",
    "start": "231410",
    "end": "239730"
  },
  {
    "text": "And he worshipped numbers, his\nfollowers worshipped numbers. ",
    "start": "239730",
    "end": "250790"
  },
  {
    "text": "And the problem here was\nthat he didn't really",
    "start": "250790",
    "end": "256739"
  },
  {
    "text": "like the square root of 2\nbecause he couldn't express it as a number, of what he thought\nof as a number, which was 1, 2,",
    "start": "256740",
    "end": "265330"
  },
  {
    "text": "3, et cetera, integers,\nwhole numbers. So he called this\nratio speechless,",
    "start": "265330",
    "end": "275051"
  },
  {
    "text": "something that he\nreally couldn't explain.  And irrationals were\nactually considered a threat",
    "start": "275051",
    "end": "282400"
  },
  {
    "text": "to the mystics because\nthey couldn't really explain what square\nroot of 2 was. They'd try and measure\nit, and they would come up",
    "start": "282400",
    "end": "289290"
  },
  {
    "text": "with the right answer because\nthe next time around it would be a little bit\ndifferent If they did things",
    "start": "289290",
    "end": "295139"
  },
  {
    "text": "a little more precisely,\nor not so precisely. And it bothered them no end.",
    "start": "295140",
    "end": "300680"
  },
  {
    "text": "And so they tried to find\npatterns in irrationals because they considered\nthem a threat.",
    "start": "300680",
    "end": "307030"
  },
  {
    "text": "And they obviously\ndidn't find patterns, but imagine if we could\nactually find patterns.",
    "start": "307030",
    "end": "314820"
  },
  {
    "text": "I mean, that would\nbe a really big deal, it would be better than p equals\nnp, if you know what I mean.",
    "start": "314820",
    "end": "321909"
  },
  {
    "text": "If you don't it doesn't matter.  So that's another of motivation\nfor high precision arithmetic.",
    "start": "321909",
    "end": "331210"
  },
  {
    "text": "Let's try and find\npatterns in irrationals if you go to millions\nand trillions of digits,",
    "start": "331210",
    "end": "336419"
  },
  {
    "text": "maybe it's just a matter of time\nbefore we discover that there's",
    "start": "336420",
    "end": "341530"
  },
  {
    "text": "no such thing as\nirrational numbers. Who knows? So let's do that for the\nrest of this lecture.",
    "start": "341530",
    "end": "347500"
  },
  {
    "text": "Let's try and\nfigure out how we're going to compute irrational\nnumbers, or things like square root of 2,\nto arbitrary precision.",
    "start": "347500",
    "end": "355199"
  },
  {
    "text": "So we can go play around,\nand we'll give you some code, and you can play with it. So if you look at\nsquare root of 2--",
    "start": "355200",
    "end": "361550"
  },
  {
    "text": "I'll just put this up\nhere-- so it's 1.414,",
    "start": "361550",
    "end": "370870"
  },
  {
    "text": "you probably all know that. Then it's 213,562,373,095,048\net cetera.",
    "start": "370870",
    "end": "388300"
  },
  {
    "text": "I mean, I don't see\na pattern there. I see a zero, a\ncouple of zeroes here.",
    "start": "388300",
    "end": "394729"
  },
  {
    "text": "It's hard to imagine--\nyou'd probably want to think of a computer\nprogram that generates",
    "start": "394730",
    "end": "400919"
  },
  {
    "text": "square root of 2, and then\nmaybe a different computer program that's\nlooking for patterns. ",
    "start": "400920",
    "end": "408550"
  },
  {
    "text": "So let's not worry about\nthe square root of 2. I want to digress a little bit. I did say this was a bit of\na recreational mathematics",
    "start": "408550",
    "end": "415639"
  },
  {
    "text": "lecture. And let's talk about something\ncompletely different, which are Catalan numbers.",
    "start": "415640",
    "end": "421880"
  },
  {
    "text": "So these are really my\nfavorite numbers in the world.",
    "start": "421880",
    "end": "427680"
  },
  {
    "text": "And people like primes, some\npeople like irrationals, I like Catalan numbers.",
    "start": "427680",
    "end": "433979"
  },
  {
    "text": "Catalan numbers are-- they\nshow up all over the place. ",
    "start": "433980",
    "end": "441010"
  },
  {
    "text": "How many of you know\nwhat Catalan numbers are? Oh good. Excellent. So Catalan numbers have\na recursive definition.",
    "start": "441010",
    "end": "451320"
  },
  {
    "text": "You can think of them as\nrepresenting the cardinality",
    "start": "451320",
    "end": "456990"
  },
  {
    "text": "of the set p of balanced\nparentheses strings.",
    "start": "456990",
    "end": "465479"
  },
  {
    "text": "And we're going to\nrecursively define these strings as follows. We're going to have\nlambda belonging",
    "start": "465480",
    "end": "472030"
  },
  {
    "text": "to p where lambda\nis the empty string. ",
    "start": "472030",
    "end": "482009"
  },
  {
    "text": "And that's rule one. Rule two is if alpha\nand beta belong",
    "start": "482010",
    "end": "493290"
  },
  {
    "text": "to p then I'm going to put\na paren, open paren, alpha,",
    "start": "493290",
    "end": "500130"
  },
  {
    "text": "close paren, and then beta. And that belongs to p.",
    "start": "500130",
    "end": "505310"
  },
  {
    "text": "So you iteratively or\nrecursively apply this rule",
    "start": "505310",
    "end": "510520"
  },
  {
    "text": "over and over, and\nyou start getting strings that are balanced.",
    "start": "510520",
    "end": "516330"
  },
  {
    "text": "So this is balanced. Now that's not\nbalanced, this is not",
    "start": "516330",
    "end": "521760"
  },
  {
    "text": "balanced, and so\non and so forth.",
    "start": "521760",
    "end": "526870"
  },
  {
    "text": "Obviously things\nget more complicated in terms of the parentheses\nif when you have more brackets",
    "start": "526870",
    "end": "535660"
  },
  {
    "text": "or parentheses. And so, the nice thing\nabout this definition is that you can get every\nnon-empty balanced paren",
    "start": "535660",
    "end": "552770"
  },
  {
    "text": "string, via rule two, from\na unique alpha, beta pair.",
    "start": "552770",
    "end": "570500"
  },
  {
    "text": "So as an example,\nsuppose you want to generate the string\nthat looks like this--",
    "start": "570500",
    "end": "576254"
  },
  {
    "text": "So that's a little more\ncomplicated than the strings that we have looked\nat so far-- then you obtain that by having alpha\nbe this simple string.",
    "start": "576254",
    "end": "592600"
  },
  {
    "text": "And then you put the brackets\naround that, and then your beta corresponds to this.",
    "start": "592600",
    "end": "599560"
  },
  {
    "text": "So now alpha and beta\nwere previously generated, so if you applied rule\ntwo to the empty string,",
    "start": "599560",
    "end": "607570"
  },
  {
    "text": "with alpha being\nthe empty string and beta being the empty string,\nthen you get this thing here.",
    "start": "607570",
    "end": "613860"
  },
  {
    "text": "And obviously you could\nget beta by setting",
    "start": "613860",
    "end": "619180"
  },
  {
    "text": "alpha to be the empty string and\nbeta to be this string that you just generated, and\nso on and so forth.",
    "start": "619180",
    "end": "625370"
  },
  {
    "text": "So you just keep going and the\nstrings get longer and longer. The cardinality of the set\ngets bigger and bigger.",
    "start": "625370",
    "end": "631550"
  },
  {
    "text": "And those of the\nCatalan numbers. OK And so, this is a\nnon-trivial question,",
    "start": "631550",
    "end": "640560"
  },
  {
    "text": "which is I'd like to\nenumerate the Catalan numbers, and compute, and get\nan analytical form",
    "start": "640560",
    "end": "648240"
  },
  {
    "text": "for the cardinality of the set. And that's really what\nthe Catalan number is. It's a cardinality of the set.",
    "start": "648240",
    "end": "655180"
  },
  {
    "text": "And so cn is the number of\nbalanced parentheses strings",
    "start": "655180",
    "end": "668730"
  },
  {
    "text": "with exactly n pairs\nof parentheses.",
    "start": "668730",
    "end": "676130"
  },
  {
    "start": "676130",
    "end": "682100"
  },
  {
    "text": "And I have c0 equals 1,\nwhich is my base case. ",
    "start": "682100",
    "end": "690430"
  },
  {
    "text": "And that's just setting--\nit's an empty string. I'm going to say that\nempty string is a string,",
    "start": "690430",
    "end": "697190"
  },
  {
    "text": "and that's just setting\nup the base case. And now I want an\nequation for cn plus 1.",
    "start": "697190",
    "end": "705325"
  },
  {
    "text": " And I need to use\nthe fact that I",
    "start": "705325",
    "end": "710700"
  },
  {
    "text": "can get cn plus 1, a\nparticular strain that belongs",
    "start": "710700",
    "end": "715790"
  },
  {
    "text": "to this set, where I have n plus\n1 parenthesis in a unique way",
    "start": "715790",
    "end": "722930"
  },
  {
    "text": "from a string I've previously\ngenerated that was part of either the set that\nhad n parentheses--",
    "start": "722930",
    "end": "732830"
  },
  {
    "text": "or it was combined using\nstrings, where alpha was",
    "start": "732830",
    "end": "737930"
  },
  {
    "text": "in some set that was\nmaybe generated awhile back with a small\nn, or something",
    "start": "737930",
    "end": "744290"
  },
  {
    "text": "significantly smaller than\nn, and another thing that was generated, beta,\nthat was generated later,",
    "start": "744290",
    "end": "750660"
  },
  {
    "text": "or maybe at the same\ntime, et cetera. So can someone tell me what an\nequation would be for cn plus 1",
    "start": "750660",
    "end": "760050"
  },
  {
    "text": "based on the cis\nthat are less than n? ",
    "start": "760050",
    "end": "773970"
  },
  {
    "text": "So what about c1? Maybe I'll ask-- what about c1?",
    "start": "773970",
    "end": "779186"
  },
  {
    "text": "What's c1? 1. c1 is 1 because all I have\nis this string, that's",
    "start": "779186",
    "end": "789450"
  },
  {
    "text": "the only balanced string. Now I have c0 and c1.",
    "start": "789450",
    "end": "794940"
  },
  {
    "text": "What's an equation for\nc2 in terms of numbers. I want a number for\nc2 based on c0 and c1.",
    "start": "794940",
    "end": "804850"
  },
  {
    "text": "Someone? Yeah. AUDIENCE: C0 plus c1. PROFESSOR: c0 plus c1?",
    "start": "804850",
    "end": "810900"
  },
  {
    "text": " No, not quite right. ",
    "start": "810900",
    "end": "818960"
  },
  {
    "text": "How many strings do I have?  c0 plus c1.",
    "start": "818960",
    "end": "824850"
  },
  {
    "text": "Yeah, actually you're right. Well, the number is right\nbut the equation is wrong.",
    "start": "824850",
    "end": "830620"
  },
  {
    "text": "It's not quite that. You get a-- Yup. AUDIENCE: So when something\nlike c-- c1 times c1 plus c1.",
    "start": "830620",
    "end": "841570"
  },
  {
    "text": "PROFESSOR: c1 times c1 plus c1? AUDIENCE: Yeah. PROFESSOR: I think\nyou want to use a c0. AUDIENCE: OK. c0.",
    "start": "841570",
    "end": "847620"
  },
  {
    "text": "PROFESSOR: c0 Well, that's\nnot quite right either. Someone else.",
    "start": "847620",
    "end": "853210"
  },
  {
    "text": "Yeah. OK. You. AUDIENCE: c0 times c1\nplus c1 [INAUDIBLE]. PROFESSOR: c0\ntimes c1-- c2 would",
    "start": "853210",
    "end": "861362"
  },
  {
    "text": "be c0 times c1 plus c1 times c0. OK. And if you're setting the\nalpha-- So here's the thing,",
    "start": "861362",
    "end": "869550"
  },
  {
    "text": "you set the alpha, and\nyou choose the alpha, and then you choose the beta.",
    "start": "869550",
    "end": "874667"
  },
  {
    "text": "And there's a couple\nof different ways that you could choose the alpha. You could choose\nthe alpha from-- you",
    "start": "874667",
    "end": "880300"
  },
  {
    "text": "could make it a\nstring that's empty, or you could make\nit the one string that you've generated\nso far, which is the standard simple\nstring, the non-empty,",
    "start": "880300",
    "end": "889140"
  },
  {
    "text": "the non-trivial balanced string. And you could do that in\na couple different ways with alpha.",
    "start": "889140",
    "end": "895040"
  },
  {
    "text": "And that's why you have\ntwo terms over there. So the number, in terms of\nall of the equations I got,",
    "start": "895040",
    "end": "903079"
  },
  {
    "text": "they all came out\nto be the same. It's 2, and that's correct. ",
    "start": "903080",
    "end": "908480"
  },
  {
    "text": "But this is the equation for it. And so now, tell me\nwhat a general equation",
    "start": "908480",
    "end": "914150"
  },
  {
    "text": "is for cn plus 1\nbased on what we've",
    "start": "914150",
    "end": "919500"
  },
  {
    "text": "learned so far for\nthe c2 equation? Yeah, back to you.",
    "start": "919500",
    "end": "925170"
  },
  {
    "text": "AUDIENCE: So c0 times\ncn plus c1 times cn minus 1 all the way to\ncn times [INAUDIBLE].",
    "start": "925170",
    "end": "932589"
  },
  {
    "text": "PROFESSOR: Perfect. Good. That deserves a cushion. ",
    "start": "932589",
    "end": "940165"
  },
  {
    "text": "That wasn't me, it was you. And put it right\nthere, breadbasket. ",
    "start": "940165",
    "end": "949180"
  },
  {
    "text": "So cn plus 1 equals sigma,\nso you give me a summation,",
    "start": "949180",
    "end": "957060"
  },
  {
    "text": "k equals 0 through n,\nck, cn minus k where",
    "start": "957060",
    "end": "965497"
  },
  {
    "text": "n is greater than or equal to 0. ",
    "start": "965497",
    "end": "971570"
  },
  {
    "text": "And you can figure this out,\nit's not particularly important as to exactly why this is true.",
    "start": "971570",
    "end": "980760"
  },
  {
    "text": "You can think about it offline. But the interesting thing is\nthat this is a generator of,",
    "start": "980760",
    "end": "985860"
  },
  {
    "text": "obviously, and it's\ngoing to give you a nice looking set of numbers.",
    "start": "985860",
    "end": "992330"
  },
  {
    "text": "And I came in early and wrote\nthat the Catalan in numbers",
    "start": "992330",
    "end": "1000650"
  },
  {
    "text": "up on the board going from\nc0, c1, c2, et cetera, just",
    "start": "1000650",
    "end": "1007520"
  },
  {
    "text": "in case-- just in case you ever\nsee these numbers in real life,",
    "start": "1007520",
    "end": "1012930"
  },
  {
    "text": "or when you're writing\ncomputer programs. Or you're driving on the road,\nthe next time you see a license plate 4862, turn around and\ntell your mom or dad, hey,",
    "start": "1012930",
    "end": "1021290"
  },
  {
    "text": "that's the Catalan number. And maybe she'll be impressed. ",
    "start": "1021290",
    "end": "1027505"
  },
  {
    "text": "This, of course,\nyou're not going to see on a license\nplate, but you can always make up a bumper\nsticker or something,",
    "start": "1027505",
    "end": "1034280"
  },
  {
    "text": "and you can have\nthe c17 as being a bumper sticker on your car. I mean, that's the kind\nof thing that I'd do.",
    "start": "1034280",
    "end": "1040000"
  },
  {
    "text": " Anyway, so it's just in\ncase you see these numbers--",
    "start": "1040000",
    "end": "1047410"
  },
  {
    "text": "we might come back to this a\nlittle bit later in the class, but-- AUDIENCE: 42 is on that list.",
    "start": "1047410",
    "end": "1052430"
  },
  {
    "text": "PROFESSOR: 42 is on that list. Yeah, it has to be. 42 is on every list.",
    "start": "1052430",
    "end": "1057580"
  },
  {
    "text": "42 is the answer\nto every question. I am glad you guys didn't\nput 42 down in the answer",
    "start": "1057580",
    "end": "1063320"
  },
  {
    "text": "to every quiz question. It doesn't quite work\nall the time, all right,",
    "start": "1063320",
    "end": "1068730"
  },
  {
    "text": "but most of the time\n42 is a good answer. Most of the time.",
    "start": "1068730",
    "end": "1074450"
  },
  {
    "text": "OK good. So let's get down to business.",
    "start": "1074450",
    "end": "1080210"
  },
  {
    "text": "So we talked about Catalan\nnumbers as a digression. If you see them you'll\nrecognize them, I think.",
    "start": "1080210",
    "end": "1087260"
  },
  {
    "text": "Let's talk about how\nwe could compute. Let's go back to\nirrationals and talk about how we could\ncompute square root of 2",
    "start": "1087260",
    "end": "1093789"
  },
  {
    "text": "and other things to\narbitrary precision. So what I want to do is to\ntalk about Newton's method.",
    "start": "1093790",
    "end": "1099090"
  },
  {
    "start": "1099090",
    "end": "1106860"
  },
  {
    "text": "And Newton's method is\nsomething you probably learned about in middle\nschool, high school.",
    "start": "1106860",
    "end": "1112510"
  },
  {
    "text": " And let's say you\nhave a function",
    "start": "1112510",
    "end": "1118900"
  },
  {
    "text": "y equals f of x where\nthis is x and that's",
    "start": "1118900",
    "end": "1124650"
  },
  {
    "text": "y, the coordinate axes. And we want to try and find\nthe root of fx equals 0",
    "start": "1124650",
    "end": "1138377"
  },
  {
    "text": "through successive\napproximation. ",
    "start": "1138378",
    "end": "1152550"
  },
  {
    "text": "For example, we might have f\nof x equals x squared minus a.",
    "start": "1152550",
    "end": "1158790"
  },
  {
    "text": "And if a is 2 then you're\ntrying to use Newton's method to find the root,\nand you're going",
    "start": "1158790",
    "end": "1164800"
  },
  {
    "text": "to end up trying to compute\nsquare root of 2 or plus minus square root\nof 2, in this case.",
    "start": "1164800",
    "end": "1171690"
  },
  {
    "text": "But you can go for\na particular root, and you're try and\nconverge to that.",
    "start": "1171690",
    "end": "1177929"
  },
  {
    "text": "So the way Newton's method\nworks is it tries, geometrically",
    "start": "1177930",
    "end": "1184380"
  },
  {
    "text": "speaking, it tries\nto find tangents-- and a different color\nchalk would be useful here",
    "start": "1184380",
    "end": "1191000"
  },
  {
    "text": "but I don't seem to see\none-- So what would happen is, let's say you\nare sitting out here,",
    "start": "1191000",
    "end": "1197210"
  },
  {
    "text": "and it's successive\napproximation method, so this would give you x of i.",
    "start": "1197210",
    "end": "1205200"
  },
  {
    "text": "And now you want to\ncompute x of i plus 1. And what you're going\nto do is draw a tangent,",
    "start": "1205200",
    "end": "1211890"
  },
  {
    "text": "like so, and find the\nintercept onto the x-axis,",
    "start": "1211890",
    "end": "1218540"
  },
  {
    "text": "the x-intercept. And that is going to\nbe your xi plus 1.",
    "start": "1218540",
    "end": "1225720"
  },
  {
    "text": "And you have to write an\nequation for that tangent. And this is, I guess,\ntrying to figure",
    "start": "1225720",
    "end": "1232540"
  },
  {
    "text": "out how much of middle school\nmath or high school math that you remember. What is the equation\nfor that tangent?",
    "start": "1232540",
    "end": "1241870"
  },
  {
    "text": "Anybody? ",
    "start": "1241870",
    "end": "1248520"
  },
  {
    "text": "The equation for that tangent? What do you do in order\nto compute that tangent? Give me a name.",
    "start": "1248520",
    "end": "1254215"
  },
  {
    "text": "AUDIENCE: Derivative? PROFESSOR: Derivative. Thank you. So what's the equation\nfor that tangent?",
    "start": "1254215",
    "end": "1259380"
  },
  {
    "text": "y equals-- Someone?",
    "start": "1259380",
    "end": "1269602"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE] PROFESSOR: It's a good\nthink your middle school, high school teachers\naren't here. ",
    "start": "1269602",
    "end": "1276140"
  },
  {
    "text": "Not you. You already got a cushion. Someone else. ",
    "start": "1276140",
    "end": "1283470"
  },
  {
    "text": "Someone else. All right. I'll start giving\nyou some hints here. ",
    "start": "1283470",
    "end": "1290540"
  },
  {
    "text": "f of xi plus-- plus--",
    "start": "1290540",
    "end": "1297745"
  },
  {
    "text": "ALL: f prime. PROFESSOR: f prime xi. Thank you. Thank you. All right. You get a cushion. I'm getting them.",
    "start": "1297745",
    "end": "1305371"
  },
  {
    "text": "Whatever it takes. Here you go. Yeah.",
    "start": "1305371",
    "end": "1311016"
  },
  {
    "text": "That was left-handed,\nby the way. I'm actually\nright-handed, as you know. So what do we have here?",
    "start": "1311016",
    "end": "1317900"
  },
  {
    "text": "So we have f prime xi. Now come on, let's\nfinish it, finish it.",
    "start": "1317900",
    "end": "1323190"
  },
  {
    "text": "AUDIENCE: Times i minus xi. PROFESSOR: Times xi is xi. Thank you. OK. So now I get it.",
    "start": "1323190",
    "end": "1329190"
  },
  {
    "text": "You thought this was\ntoo simple a question. You guys were insulted\nby the question. So that's why you didn't tell\nme what it was At least, that's",
    "start": "1329190",
    "end": "1336730"
  },
  {
    "text": "what I'm going to pretend\nto make myself feel better.",
    "start": "1336730",
    "end": "1341780"
  },
  {
    "text": "So y equals f of\nxi plus f prime xi, which is the derivative\nof f evaluated at xi times",
    "start": "1341780",
    "end": "1351990"
  },
  {
    "text": "x minus xi, that's the\nequation for the line. And that's essentially\nwhat we have",
    "start": "1351990",
    "end": "1358260"
  },
  {
    "text": "to do to compute things\nlike square root of 2, which is iteratively applied\nNewton's method.",
    "start": "1358260",
    "end": "1365220"
  },
  {
    "text": "The only problem is this\nis all good in theory",
    "start": "1365220",
    "end": "1370630"
  },
  {
    "text": "that we can do-- take that\nequation turn it into xi",
    "start": "1370630",
    "end": "1376980"
  },
  {
    "text": "plus 1 equals xi minus f of\nxi divided by f prime of xi.",
    "start": "1376980",
    "end": "1383642"
  },
  {
    "text": " And if you end up doing f of x\nequals x squared minus a, then",
    "start": "1383642",
    "end": "1393870"
  },
  {
    "text": "you have xi plus 1\nequals xi minus xi",
    "start": "1393870",
    "end": "1403030"
  },
  {
    "text": "squared minus a divided by 2xi,\nwhich is the derivative of x squared minus a evaluated at xi.",
    "start": "1403030",
    "end": "1412049"
  },
  {
    "text": "And finally you get\nthis equation, xi plus a divided by\nxi divided by 2.",
    "start": "1412050",
    "end": "1419850"
  },
  {
    "text": "So it's fairly straightforward. xi plus 1 equals xi plus a\ndivided by xi divided by 2.",
    "start": "1419850",
    "end": "1426060"
  },
  {
    "text": "And if you look\nat this, remember that a is typically\na small number.",
    "start": "1426060",
    "end": "1431179"
  },
  {
    "text": "I mean, it's two, in\nthis case, if you're computing square root of 2. it may even be an\ninteger, maybe a fraction.",
    "start": "1431180",
    "end": "1438730"
  },
  {
    "text": "But you have to do\na division here. And remember that since\nwe want to compute things to millions of digits,\npotentially, these numbers,",
    "start": "1438730",
    "end": "1447090"
  },
  {
    "text": "the xi numbers, are going\nto have millions of digits. And so if you end up\nrunning this Newton method",
    "start": "1447090",
    "end": "1455620"
  },
  {
    "text": "on a equals 2, then\nif I simulate what",
    "start": "1455620",
    "end": "1462710"
  },
  {
    "text": "happens without worrying\nabout the implementation, and this is what you'll get.",
    "start": "1462710",
    "end": "1468090"
  },
  {
    "start": "1468090",
    "end": "1473299"
  },
  {
    "text": "You have x0-- you start with x0\nequals 1 with a bunch of zeros.",
    "start": "1473300",
    "end": "1480260"
  },
  {
    "text": "xi equals 1.5 with a\nbunch of zeros, et cetera.",
    "start": "1480260",
    "end": "1487740"
  },
  {
    "text": "And then, x2 equals\n1.41666 et cetera.",
    "start": "1487740",
    "end": "1495370"
  },
  {
    "text": "That goes on. And we're not talking\nabout fractions here,",
    "start": "1495370",
    "end": "1500600"
  },
  {
    "text": "we're talking about\nfloating point numbers that",
    "start": "1500600",
    "end": "1505919"
  },
  {
    "text": "are integers with a certain\namount of precision. So you've decided that\nyou want to compute this",
    "start": "1505920",
    "end": "1511160"
  },
  {
    "text": "to d digits of precision\nwhere d may be a million. And so, really, here you would\nhave a representation that's",
    "start": "1511160",
    "end": "1517620"
  },
  {
    "text": "a million digits\nlong that where, basically, everything is zero,\nand here everything but one",
    "start": "1517620",
    "end": "1522799"
  },
  {
    "text": "is 0, or maybe a couple\nif you count the 1 here. And here you have\nall these sixes here,",
    "start": "1522800",
    "end": "1528789"
  },
  {
    "text": "and so on and so forth. And you keep going, and you\nget x2 equals 1.414215686.",
    "start": "1528790",
    "end": "1542687"
  },
  {
    "text": "And I want to write\none more because I want to point out\nsomething that's important. 1.414213562.",
    "start": "1542687",
    "end": "1554610"
  },
  {
    "text": "And what's nice about\nthis, if you go compare it with what you have\nup there, is that you",
    "start": "1554610",
    "end": "1561160"
  },
  {
    "text": "have quadratic convergence\nusing the Newton's method. And what do I mean by that?",
    "start": "1561160",
    "end": "1567970"
  },
  {
    "text": "Well, quadratic convergence\nis a nice property. ",
    "start": "1567970",
    "end": "1573800"
  },
  {
    "text": "It's much better than\nlinear convergence. Linear convergence\nwould mean that you get an extra digit of\nprecision for every iteration.",
    "start": "1573800",
    "end": "1584250"
  },
  {
    "text": "So in this case, actually,\na quadratic is better. Usually we think of\nquadratic algorithms, and we are going to throw up.",
    "start": "1584250",
    "end": "1590330"
  },
  {
    "text": "But linear algorithms\nis what we like. But in this case it's\nactually a good thing.",
    "start": "1590330",
    "end": "1596020"
  },
  {
    "text": "You have this extended this\nquadratic rate of convergence where the number of\ndigits that are correct",
    "start": "1596020",
    "end": "1602880"
  },
  {
    "text": "doubles with every\niteration, as you can see. So here you have-- you\nstart with, roughly,",
    "start": "1602880",
    "end": "1610299"
  },
  {
    "text": "if you rounded this\nup you would get 5. So you're saying that that's\none digit of precision",
    "start": "1610300",
    "end": "1616670"
  },
  {
    "text": "in terms of the decimal. And then, now you're\ntalking about 41421356,",
    "start": "1616670",
    "end": "1630160"
  },
  {
    "text": "so that's 1, 2,\n3, 4, 5, 6, 7, 8, so that's eight digits of\nprecision here, four here,",
    "start": "1630160",
    "end": "1636460"
  },
  {
    "text": "and so on and so forth. So that's nice. That's why the Newton's\nmethod is actually used in practice because the\nnumber of digits doubles.",
    "start": "1636460",
    "end": "1646919"
  },
  {
    "text": " This is a precision. ",
    "start": "1646920",
    "end": "1653160"
  },
  {
    "text": "So now you don't get too\nscared about calculating things that are a million because\nyou kind of go and say, whoa,",
    "start": "1653160",
    "end": "1659307"
  },
  {
    "text": "I mean, that's not\nso bad, that's only a logarithmic number\nof integrations. And it's not like you have to\nrun for a million iterations.",
    "start": "1659307",
    "end": "1666420"
  },
  {
    "text": "You go 2, 4, 8, 16, and now\nthat exponential helps you,",
    "start": "1666420",
    "end": "1671790"
  },
  {
    "text": "the geometric series helps you. So that's the nice thing\nabout the Newton's method.",
    "start": "1671790",
    "end": "1677880"
  },
  {
    "text": "Haven't quite told\nyou how we are going to compute the\nmost important thing here",
    "start": "1677880",
    "end": "1684649"
  },
  {
    "text": "with respect to a divided by xi. So this is just additions. You can imagine that if\nyou have long numbers",
    "start": "1684650",
    "end": "1692580"
  },
  {
    "text": "you'd end up doing addition\nfairly straightforwardly because you only have to\nworry about one carry,",
    "start": "1692580",
    "end": "1700220"
  },
  {
    "text": "and so you go off. And I'm sure you've\nadded up numbers that are in tens, if not\nhundreds, of digits long",
    "start": "1700220",
    "end": "1706460"
  },
  {
    "text": "but I'm guessing\nyou haven't manually multiplied numbers that are\nhundreds of digits long.",
    "start": "1706460",
    "end": "1714330"
  },
  {
    "text": "And if you have\nI'd be impressed, though I won't\nbelieve your result. But that's something that is\nkind of a painful thing to do.",
    "start": "1714330",
    "end": "1724380"
  },
  {
    "text": "And so that's why\nwe need computers. And that's multiplication\nand-- has anybody",
    "start": "1724380",
    "end": "1730049"
  },
  {
    "text": "divided a hundred-digit number\nby another 50-digit number? No.",
    "start": "1730050",
    "end": "1735870"
  },
  {
    "text": "So you need computers. So we've got to be able\nto do that division there, a divided by xi,\nusing computers.",
    "start": "1735870",
    "end": "1744220"
  },
  {
    "text": "And so that's really the purpose\nof this and the next lecture If you're only going\nto do a high precision multiplication here.",
    "start": "1744220",
    "end": "1750140"
  },
  {
    "text": "And try see what an algorithm\nwould be for high precision multiplication because\nwhat we're going to do",
    "start": "1750140",
    "end": "1755820"
  },
  {
    "text": "is, essentially, take the\nreciprocal of one over xi",
    "start": "1755820",
    "end": "1761559"
  },
  {
    "text": "and then multiply that by a. And we need-- division is going\nto require multiplication.",
    "start": "1761560",
    "end": "1767510"
  },
  {
    "text": "You don't really\nsee a multiplication there other than\na times 1 over xi. And you can say, well, do we\nreally need multiplication?",
    "start": "1767510",
    "end": "1774150"
  },
  {
    "text": "Well, the answer is\nthe division algorithm that is used in practice in\nmost division algorithms have",
    "start": "1774150",
    "end": "1781010"
  },
  {
    "text": "multiplication as a subroutine. So we're going to have to\nfigure out high precision",
    "start": "1781010",
    "end": "1786290"
  },
  {
    "text": "multiplication first--\nIt's a little bit easier than division-- and use it as\na subroutine for high precision",
    "start": "1786290",
    "end": "1792899"
  },
  {
    "text": "division, which\nwe'll do next time. So now we're sort of back\nin 006 land, if you will.",
    "start": "1792900",
    "end": "1799610"
  },
  {
    "text": "We have a problem that is\nhigh precision multiplication, and we want to find\nan algorithm for it.",
    "start": "1799610",
    "end": "1805770"
  },
  {
    "text": "And there's the\nvanilla algorithm that is going to take\ncertain amounts of time,",
    "start": "1805770",
    "end": "1810950"
  },
  {
    "text": "asymptotically\nspeaking, and then there is better and better algorithms. As you can imagine,\nmultiplication",
    "start": "1810950",
    "end": "1816325"
  },
  {
    "text": "is just such a\nfundamental operation that people have\nlooked at trying",
    "start": "1816325",
    "end": "1821720"
  },
  {
    "text": "to reduce the complexity of\nhigh precision multiplication. So if you have n bits-- So\nwhat is the standard algorithm",
    "start": "1821720",
    "end": "1827899"
  },
  {
    "text": "for multiplication take if\nyou have n bits of precision? AUDIENCE: N squared.",
    "start": "1827900",
    "end": "1833650"
  },
  {
    "text": "PROFESSOR: n squared. But you can do better. And the people are work on it.",
    "start": "1833650",
    "end": "1838840"
  },
  {
    "text": "You can do fast\nFourier transforms. We won't quite do that here. If you take 6.046 you'll\nprobably learn about that.",
    "start": "1838840",
    "end": "1845970"
  },
  {
    "text": "But we'll do a\ncouple of algorithms that are better than the\norder n squared method,",
    "start": "1845970",
    "end": "1850977"
  },
  {
    "text": "and we'll do one of those today. ",
    "start": "1850977",
    "end": "1859650"
  },
  {
    "text": "So the way they're going\nto work with integers-- one little point that I need to\nmake before we move ahead here",
    "start": "1859650",
    "end": "1870710"
  },
  {
    "text": "is, generally, we going to\nsay, for the purposes of 006,",
    "start": "1870710",
    "end": "1876860"
  },
  {
    "text": "that we know the digits of\nprecision up front because we",
    "start": "1876860",
    "end": "1883100"
  },
  {
    "text": "want d digits of precision,\nmaybe it's 42, maybe it's 125.",
    "start": "1883100",
    "end": "1888240"
  },
  {
    "text": "In the case of our problem\nset in RSA we going to have it 1,024-bit numbers, maybe 2,048.",
    "start": "1888240",
    "end": "1894310"
  },
  {
    "text": "So we know d beforehand. And so what we want\nis an integer, which",
    "start": "1894310",
    "end": "1903480"
  },
  {
    "text": "is 10 raised to d times the\nsquare root of 2, a floor,",
    "start": "1903480",
    "end": "1909020"
  },
  {
    "text": "and which is essentially the\nsame as that, 2 times 10 raised",
    "start": "1909020",
    "end": "1917890"
  },
  {
    "text": "to 2 d. So we're going to treat\nthese as integers, so we don't want to worry\nabout decimal points and things like that.",
    "start": "1917890",
    "end": "1923360"
  },
  {
    "text": "All of these things are\ngoing to be integers. And there's no problem here. We can still use\nNewton's method.",
    "start": "1923360",
    "end": "1928690"
  },
  {
    "start": "1928690",
    "end": "1935970"
  },
  {
    "text": "It just works on integers. And let's take a\nlook at how we would",
    "start": "1935970",
    "end": "1941240"
  },
  {
    "text": "apply Newton's method\nin standard form.",
    "start": "1941240",
    "end": "1948370"
  },
  {
    "start": "1948370",
    "end": "1955360"
  },
  {
    "text": "And we won't to\nreally get to the part",
    "start": "1955360",
    "end": "1960870"
  },
  {
    "text": "where we're going to go from\ndivision to multiplication today, as I said,\nwe're just going",
    "start": "1960870",
    "end": "1966090"
  },
  {
    "text": "to look at how you can\nmultiply two numbers. So I didn't mean\nto say that we're",
    "start": "1966090",
    "end": "1971533"
  },
  {
    "text": "going to look at\nNewton's method. We're going to look at high\nprecision multiplication, and then, eventually,\nwe're going to use that to build\nNewton's method",
    "start": "1971533",
    "end": "1979889"
  },
  {
    "text": "which requires the division. ",
    "start": "1979890",
    "end": "1988800"
  },
  {
    "text": "So I have two n-digit\nnumbers, and the radix",
    "start": "1988800",
    "end": "2003400"
  },
  {
    "text": "could be-- the base\ncould be 2, 10.",
    "start": "2003400",
    "end": "2008620"
  },
  {
    "text": "Normally, it doesn't\nreally matter. 0 less than x, less than\ny, strictly less than r",
    "start": "2008620",
    "end": "2018320"
  },
  {
    "text": "raised to n. That's standard for the ranges.",
    "start": "2018320",
    "end": "2024450"
  },
  {
    "text": "And what I have\nhere is-- the way I'm going to do this is use\nour favorite strategy, which",
    "start": "2024450",
    "end": "2029460"
  },
  {
    "text": "is divide and conquer, because\nI have n, which is large, need to break things\ndown, break it into n",
    "start": "2029460",
    "end": "2036700"
  },
  {
    "text": "by two-digit multiplications. And when, finally,\nI break things down,",
    "start": "2036700",
    "end": "2041789"
  },
  {
    "text": "I get down to 64 bits, I\njust run one instruction on my computer to multiply\nthe 64-bit numbers.",
    "start": "2041790",
    "end": "2050030"
  },
  {
    "text": "And the standard machines, you\nwould get 128 bits of result back when you multiply\n64-bit numbers.",
    "start": "2050030",
    "end": "2056772"
  },
  {
    "text": "So in some sense\nyou only go down-- you don't go down to 1\nbit, you go down to 64",
    "start": "2056772",
    "end": "2062129"
  },
  {
    "text": "and your machine does the rest. So what we have here\nis you set x to be x1",
    "start": "2062130",
    "end": "2069888"
  },
  {
    "text": "where x1 is the high half, r\nraised to n over 2 plus x0.",
    "start": "2069889",
    "end": "2076419"
  },
  {
    "text": "So x1 is the more significant\nhalf and x0 is the low half.",
    "start": "2076420",
    "end": "2084079"
  },
  {
    "text": " And the same thing for y.",
    "start": "2084080",
    "end": "2090570"
  },
  {
    "text": "y1, whoops, r raised\nto n over 2 plus y0. ",
    "start": "2090570",
    "end": "2098750"
  },
  {
    "text": "Now the ranges change. x0 and x1 are smaller, so that's\nwhat you have for x0 and x1.",
    "start": "2098750",
    "end": "2107839"
  },
  {
    "start": "2107840",
    "end": "2114780"
  },
  {
    "text": "Same thing for y0 and y1. So that's a fairly\nstraightforward decomposition",
    "start": "2114780",
    "end": "2123220"
  },
  {
    "text": "of this multiplication\noperation. And again, if you do things\nin a straightforward way",
    "start": "2123220",
    "end": "2130700"
  },
  {
    "text": "you will create a recursive\nmultiply, as I'll write here.",
    "start": "2130700",
    "end": "2138050"
  },
  {
    "text": "And what you do is you say\nlet z0 equal x0 times y0,",
    "start": "2138050",
    "end": "2150110"
  },
  {
    "text": "z two equals x2 times\ny2, and-- I missed z1,",
    "start": "2150110",
    "end": "2163260"
  },
  {
    "text": "but z1 equals x0, y1 plus x1 y0.",
    "start": "2163260",
    "end": "2169500"
  },
  {
    "text": " And I have, overall,\nz equals y equals",
    "start": "2169500",
    "end": "2177070"
  },
  {
    "text": "x1 y1 times r raised to n\nplus x0 y1 plus x1 y0 times",
    "start": "2177070",
    "end": "2187600"
  },
  {
    "text": "r raised to n over\n2 plus x0 y0 zero.",
    "start": "2187600",
    "end": "2194440"
  },
  {
    "text": "And this part here was\nz0, this part here was z1,",
    "start": "2194440",
    "end": "2202770"
  },
  {
    "text": "and this part here was z2. And if you look at, it you need\nfour multiplies, 1, 2, 3, 4.",
    "start": "2202770",
    "end": "2214250"
  },
  {
    "text": "And you need four\nmultiplies of n by two-- n by two-digit numbers.",
    "start": "2214250",
    "end": "2223725"
  },
  {
    "text": " And by now, after you have\nprepared for quiz two,",
    "start": "2223725",
    "end": "2231270"
  },
  {
    "text": "I will just say that it would\ntake theta n square time",
    "start": "2231270",
    "end": "2239975"
  },
  {
    "text": "because you're\nrecursive equation is tn equals 4t of n over 2 plus\nthe linear time that you take",
    "start": "2239975",
    "end": "2255990"
  },
  {
    "text": "for addition. So this is tn equals 4t\nof n over 2 plus theta n.",
    "start": "2255990",
    "end": "2269209"
  },
  {
    "text": "And you're assuming\nthat the additions here take linear time. So that's how you get your\ntheta n square algorithm.",
    "start": "2269209",
    "end": "2275470"
  },
  {
    "text": "And we're not happy with that. We'd like to do better.",
    "start": "2275470",
    "end": "2280750"
  },
  {
    "text": "And so how do you do better? Well, there's many\nways of doing better.",
    "start": "2280750",
    "end": "2287309"
  },
  {
    "text": "The simplest way off fairly,\nsubstantially lowering",
    "start": "2287310",
    "end": "2293330"
  },
  {
    "text": "the complexity is\ndue to a gentleman",
    "start": "2293330",
    "end": "2299390"
  },
  {
    "text": "by the name of Karatsuba. ",
    "start": "2299390",
    "end": "2309300"
  },
  {
    "text": "This is one of\nthose things where if you were born\nearly enough you get your name on an algorithm.",
    "start": "2309300",
    "end": "2315869"
  },
  {
    "text": "And what happens here is, using\nthe z's that I have out there,",
    "start": "2315870",
    "end": "2322430"
  },
  {
    "text": "you essentially say, look,\nI know z0 equals x0 and y0, I'm going to go\nahead and multiply.",
    "start": "2322430",
    "end": "2329210"
  },
  {
    "text": "z2 equals x2 and y2,\ngo ahead and do that.",
    "start": "2329210",
    "end": "2334750"
  },
  {
    "text": "And now I'm going to write\nz1 as x0 plus x1 times y0",
    "start": "2334750",
    "end": "2343520"
  },
  {
    "text": "plus y1 minus z0 minus z2. So you're actually\ncomputing z0 and z2 first,",
    "start": "2343520",
    "end": "2351420"
  },
  {
    "text": "and then using\nthem to compute z1.",
    "start": "2351420",
    "end": "2356470"
  },
  {
    "text": "So someone tell me why\nthis is interesting? And just take it all the way to\nthe complexity of an algorithm.",
    "start": "2356470",
    "end": "2365030"
  },
  {
    "text": "Explain to me why\nthis is interesting and why Karatsuba's algorithm\nhas-- I'll give it away--",
    "start": "2365030",
    "end": "2372060"
  },
  {
    "text": "a lower complexity\nthan theta n square? But tell me what it is.",
    "start": "2372060",
    "end": "2377220"
  },
  {
    "text": "Someone? Someone other than you.  Someone way at the back.",
    "start": "2377220",
    "end": "2383185"
  },
  {
    "text": " Yup. Out there.",
    "start": "2383185",
    "end": "2388609"
  },
  {
    "text": "AUDIENCE: It's n to\nthe log base 2 of 3. PROFESSOR: n raised to-- AUDIENCE: Log base 2--",
    "start": "2388610",
    "end": "2393930"
  },
  {
    "text": "PROFESSOR: --log base 2 of 3. That's exactly right. And now, why did you get that? Explain to me how you got there. AUDIENCE: If you're\nusing three products--",
    "start": "2393930",
    "end": "2399670"
  },
  {
    "text": "PROFESSOR: That's right. So first insight\nis that we're only doing three\nmultiplications here.",
    "start": "2399670",
    "end": "2405230"
  },
  {
    "text": "Additions are easy. And we're doing three\nmultiplications as opposed to four.",
    "start": "2405230",
    "end": "2412300"
  },
  {
    "text": "So tell me how that\nequation changed, of tn. tn equals--",
    "start": "2412300",
    "end": "2417510"
  },
  {
    "text": "AUDIENCE: 3 [INAUDIBLE]. PROFESSOR: 3 times t of\nn over 2 plus theta n",
    "start": "2417510",
    "end": "2423550"
  },
  {
    "text": "because you're doing three\nmultiplications rather than four. Multiplications are the\ncomplicated operation.",
    "start": "2423550",
    "end": "2429030"
  },
  {
    "text": "Divisions are even\nmore complicated, but additions are easy, and you\ncould do those in linear time",
    "start": "2429030",
    "end": "2434170"
  },
  {
    "text": "for n-digit numbers. And so, if you do that and\nthen you go off and you say,",
    "start": "2434170",
    "end": "2439480"
  },
  {
    "text": "well, that tells\nus that tn equals theta of n raised to log two\nof three, which is, by the way,",
    "start": "2439480",
    "end": "2450010"
  },
  {
    "text": "theta of n raised to\n1.58, roughly speaking. And I do not want to compute\nthat to arbitrary precision,",
    "start": "2450010",
    "end": "2457220"
  },
  {
    "text": "though I could. But that goes on and on. Why don't you grab\nthis after you're done. But that just goes on and on.",
    "start": "2457220",
    "end": "2463100"
  },
  {
    "text": "1.58 is a rough approximation. That's an irrational\nnumber too, assuming",
    "start": "2463100",
    "end": "2469940"
  },
  {
    "text": "you think that\nirrational numbers exist. That's an irrational number. So good, that's\nreally all I had.",
    "start": "2469940",
    "end": "2478970"
  },
  {
    "text": "By the way, it's 1.58490625. I really should have\nwritten that down.",
    "start": "2478970",
    "end": "2484860"
  },
  {
    "text": "1.58-- in the context\nof this lecture I think it's\nimportant that we get",
    "start": "2484860",
    "end": "2490950"
  },
  {
    "text": "at least a few\ndigits a precision. ",
    "start": "2490950",
    "end": "2496740"
  },
  {
    "text": "Now you can imagine that you\ncould do it better than this. And it turns out that--\nwe'll talk a little bit",
    "start": "2496740",
    "end": "2503390"
  },
  {
    "text": "about this next time-- But you\ncan imagine breaking this up into not n over two chunks,\nbut n over three chunks.",
    "start": "2503390",
    "end": "2510960"
  },
  {
    "text": "Why don't I just break\nup x into the top third, the middle third, and\nthen the bottom third,",
    "start": "2510960",
    "end": "2517279"
  },
  {
    "text": "and then try and see\nif I can get away with fewer than eight\nmultiplications?",
    "start": "2517280",
    "end": "2522760"
  },
  {
    "text": "Because the original\nthing would have taken eight, and if I\ncan do less than eight, maybe I can reduce\nthat 1.58 number.",
    "start": "2522760",
    "end": "2530952"
  },
  {
    "text": "So that's a little\nbit of a preview for what we'll do next time. But what I'd like\nto do is do a demo.",
    "start": "2530952",
    "end": "2538480"
  },
  {
    "text": "And I want you to run\nthat-- it's out there so blank that out for a second.",
    "start": "2538480",
    "end": "2545920"
  },
  {
    "text": "What I'd like to do is really\nlook at a different problem",
    "start": "2545920",
    "end": "2551299"
  },
  {
    "text": "than square root of 2, and\nshow you a demo of code that Victor wrote that computes\nthis particular quantity that,",
    "start": "2551300",
    "end": "2562810"
  },
  {
    "text": "you would argue, is irrational,\nto arbitrary digits.",
    "start": "2562810",
    "end": "2568060"
  },
  {
    "text": "Though we'll probably only go\nup to about a thousand today. And if we just look at-- root\n2 is kind of boring, right?",
    "start": "2568060",
    "end": "2574580"
  },
  {
    "text": "It's been around for a while. Let's go back and remember\nhigh school geometry.",
    "start": "2574580",
    "end": "2582530"
  },
  {
    "text": "So I think your\nhigh school teachers would like this lecture.",
    "start": "2582530",
    "end": "2588240"
  },
  {
    "text": "Nice little review. So what is that about? That's supposed to be a circle,\nI think, as you've forgotten.",
    "start": "2588240",
    "end": "2594840"
  },
  {
    "text": "That's supposed to be a circle. And the circle here is\na really big circle.",
    "start": "2594840",
    "end": "2602910"
  },
  {
    "text": "It's a trillion units long.  I'm into big numbers\ntoday, big numbers.",
    "start": "2602910",
    "end": "2611770"
  },
  {
    "text": "And the center of the\ncircle is c, c for center.",
    "start": "2611770",
    "end": "2617840"
  },
  {
    "text": "That is what's called a radius,\nin case you'd forgotten. ",
    "start": "2617840",
    "end": "2623410"
  },
  {
    "text": "And that's b. And this is also a\nradius, and that's a.",
    "start": "2623410",
    "end": "2630160"
  },
  {
    "text": "And what I'm going\nto do is I'm going-- I want to make a drop a little,\nI guess, perpendicular down,",
    "start": "2630160",
    "end": "2641450"
  },
  {
    "text": "which is one unit high. So the way that\nthis is structured",
    "start": "2641450",
    "end": "2646589"
  },
  {
    "text": "is that this is one unit\nhigh, this obviously is-- someone tell\nme what that is, CB.",
    "start": "2646590",
    "end": "2653241"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. PROFESSOR: Half a trillion. That's half a trillion.",
    "start": "2653241",
    "end": "2658509"
  },
  {
    "text": "And obviously, CA\nis half a trillion. And if I call this\nD, somebody who",
    "start": "2658510",
    "end": "2664900"
  },
  {
    "text": "remembers high school or\nmiddle school geometry give me an equation for AD.",
    "start": "2664900",
    "end": "2671130"
  },
  {
    "text": "And that's definitely\nworth a cushion. so what's an\nequation for AD guys?",
    "start": "2671130",
    "end": "2677859"
  },
  {
    "text": "Yeah. Go ahead. AUDIENCE: The radius,\nhalf-trillion minus the square",
    "start": "2677860",
    "end": "2683710"
  },
  {
    "text": "root of-- PROFESSOR: Square\nroot of-- Yeah? AUDIENCE: Minus the square root\nof [INAUDIBLE] square minus 1?",
    "start": "2683710",
    "end": "2692104"
  },
  {
    "text": "PROFESSOR: Perfect, perfect. OK good. So AD equals AC\nminus CD, and that",
    "start": "2692104",
    "end": "2697870"
  },
  {
    "text": "is going to be half a\ntrillion-- that is 500 billion, a little bit less\nthan bailout money,",
    "start": "2697870",
    "end": "2704560"
  },
  {
    "text": "but it's close-- 500 thousand\nminus square root of 500--",
    "start": "2704560",
    "end": "2714466"
  },
  {
    "text": "this, when you start\nsquaring this, of course, is not even real,\nreal big money.",
    "start": "2714466",
    "end": "2719730"
  },
  {
    "text": "But 500 thousand\nsquared minus 1.",
    "start": "2719730",
    "end": "2725400"
  },
  {
    "text": "So forget the\nsquare root of two. You can put the screen down. ",
    "start": "2725400",
    "end": "2732110"
  },
  {
    "text": "So is it on, the projector? AUDIENCE: It's on, it\njust needs a [INAUDIBLE]. PROFESSOR: OK. You can turn that on.",
    "start": "2732110",
    "end": "2738416"
  },
  {
    "text": "AUDIENCE: Rolling.  PROFESSOR: So what\nwe're going to do is, I'm just going to\nshow you the digits",
    "start": "2738416",
    "end": "2746530"
  },
  {
    "text": "of this crazy quantity being\ncomputed to tens of thousands",
    "start": "2746530",
    "end": "2755350"
  },
  {
    "text": "of digits. And you argue that this\nis it something clearly that isn't a perfect square.",
    "start": "2755350",
    "end": "2761930"
  },
  {
    "text": "You took a perfect square,\nsubtracted 1 from it, and so you have an\nirrational quantity that is going to go on and on.",
    "start": "2761930",
    "end": "2768720"
  },
  {
    "text": "And let's see what that\nnumber-- what it looks like. OK? ",
    "start": "2768720",
    "end": "2783630"
  },
  {
    "text": "Get out of the way.  I hope you can\nsee from the back.",
    "start": "2783630",
    "end": "2789690"
  },
  {
    "text": " AUDIENCE: Oh man, really? ",
    "start": "2789690",
    "end": "2798650"
  },
  {
    "text": "PROFESSOR: Looking pretty good\nso far, looking pretty good. AUDIENCE: That's crazy. ",
    "start": "2798650",
    "end": "2807640"
  },
  {
    "text": "PROFESSOR: Somebody see\nthe numbers somewhere else? Have you see these\nnumbers before?",
    "start": "2807640",
    "end": "2813970"
  },
  {
    "text": "Like 20 minutes ago, like\nright in front of you?",
    "start": "2813970",
    "end": "2819240"
  },
  {
    "text": "OK All right. So I think that's a\ngood place to stop.",
    "start": "2819240",
    "end": "2825990"
  },
  {
    "text": "If you want an\nexplanation for this I think you can go\nto section tomorrow.",
    "start": "2825990",
    "end": "2831990"
  },
  {
    "text": "I'm going to use a some\nattendance tomorrow. All right. Happy to answer questions\nabout the rest of the lecture,",
    "start": "2831990",
    "end": "2840609"
  },
  {
    "text": "and thanks for coming.",
    "start": "2840610",
    "end": "2843060"
  }
]