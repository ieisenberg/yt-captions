[
  {
    "start": "5150",
    "end": "5150"
  },
  {
    "text": "OK, so now we know what CP\nis, we can go ahead and build",
    "start": "5150",
    "end": "9700"
  },
  {
    "text": "one last tree using\ncross validation.",
    "start": "9700",
    "end": "13100"
  },
  {
    "text": "So we need to make sure\nfirst we have the required",
    "start": "13100",
    "end": "15190"
  },
  {
    "text": "libraries installed and in use.",
    "start": "15190",
    "end": "18710"
  },
  {
    "text": "So the first package\nis the \"caret\" package.",
    "start": "18710",
    "end": "22840"
  },
  {
    "text": "And the second we need\nis the \"e1071\" package.",
    "start": "25720",
    "end": "32189"
  },
  {
    "text": "OK.",
    "start": "32189",
    "end": "33730"
  },
  {
    "text": "So we need to tell the\ncaret package how exactly we",
    "start": "33730",
    "end": "37300"
  },
  {
    "text": "want to do our parameter tuning.",
    "start": "37300",
    "end": "39730"
  },
  {
    "text": "There are actually quite\na few ways of doing it.",
    "start": "39730",
    "end": "42290"
  },
  {
    "text": "But we're going to restrict\nourselves in this course",
    "start": "42290",
    "end": "44520"
  },
  {
    "text": "to just 10-fold\ncross validation,",
    "start": "44520",
    "end": "46720"
  },
  {
    "text": "as was explained in the lecture.",
    "start": "46720",
    "end": "48880"
  },
  {
    "text": "So let's say\ntr.control=trainControl(method=\"cv\",",
    "start": "48880",
    "end": "50960"
  },
  {
    "text": "number=10).",
    "start": "50960",
    "end": "51460"
  },
  {
    "text": "OK, that was easy enough.",
    "start": "65260",
    "end": "67470"
  },
  {
    "text": "Now we need to tell caret\nwhich range of CP parameters",
    "start": "67470",
    "end": "71280"
  },
  {
    "text": "to try out.",
    "start": "71280",
    "end": "72770"
  },
  {
    "text": "Now remember that CP\nvaries between 0 and 1.",
    "start": "72770",
    "end": "76890"
  },
  {
    "text": "It's likely for\nany given problem",
    "start": "76890",
    "end": "78600"
  },
  {
    "text": "that we don't need to\nexplore the whole range.",
    "start": "78600",
    "end": "81500"
  },
  {
    "text": "I happen to know,\nby the fact that I",
    "start": "81500",
    "end": "83530"
  },
  {
    "text": "made this presentation ahead\nof time, that the value of CP",
    "start": "83530",
    "end": "87090"
  },
  {
    "text": "we're going to\npick is very small.",
    "start": "87090",
    "end": "89700"
  },
  {
    "text": "So what I want to do is make\na grid of CP values to try.",
    "start": "89700",
    "end": "96159"
  },
  {
    "text": "And it will be over\nthe range of 0 to 0.01.",
    "start": "96160",
    "end": "113400"
  },
  {
    "text": "OK, so how does what I\nwrote feed into that?",
    "start": "113400",
    "end": "117170"
  },
  {
    "text": "Well, 1 times 0.001\nis obviously 0.001.",
    "start": "117170",
    "end": "124240"
  },
  {
    "text": "And 10 times 0.001\nis obviously 0.01.",
    "start": "124240",
    "end": "130810"
  },
  {
    "text": "0 to 5, or 0 to 10,\nmeans the numbers",
    "start": "130810",
    "end": "135300"
  },
  {
    "text": "0, 1, 2, 3, 4 5, 6, 7, 8, 9, 10.",
    "start": "135300",
    "end": "139140"
  },
  {
    "text": "So 0 to 10 times 0.001 is\nthose numbers scaled by 0.001.",
    "start": "139140",
    "end": "150680"
  },
  {
    "text": "So those are the values\nof CP that caret will try.",
    "start": "150680",
    "end": "155650"
  },
  {
    "text": "So let's store the results of\nthe cross validation fitting",
    "start": "155650",
    "end": "160150"
  },
  {
    "text": "in a variable called tr.",
    "start": "160150",
    "end": "162370"
  },
  {
    "text": "And we'll use the\ntrain function.",
    "start": "162370",
    "end": "165530"
  },
  {
    "text": "Predicting MEDV is the LAT,\nLON, CRIM, zoning, industry,",
    "start": "165530",
    "end": "179120"
  },
  {
    "text": "Charles River, pollution,\nrooms, age, distance,",
    "start": "179120",
    "end": "189610"
  },
  {
    "text": "distance from highways, tax,\nand pupil-teacher ratio.",
    "start": "189610",
    "end": "196850"
  },
  {
    "text": "OK, we're using\nthe train data set.",
    "start": "196850",
    "end": "202840"
  },
  {
    "text": "We're using trees\n(rpart), our train control",
    "start": "202840",
    "end": "209269"
  },
  {
    "text": "is what we just made\nbefore, and our tuning grid",
    "start": "209270",
    "end": "214460"
  },
  {
    "text": "is the other thing we just\nmade, which we called CP grid.",
    "start": "214460",
    "end": "220540"
  },
  {
    "text": "And it whirrs away.",
    "start": "220540",
    "end": "221700"
  },
  {
    "text": "And what its doing there is it's\ntrying all the different values",
    "start": "221700",
    "end": "224370"
  },
  {
    "text": "of CP that we asked it to.",
    "start": "224370",
    "end": "227060"
  },
  {
    "text": "So we can see what it's\ndone but typing tr.",
    "start": "227060",
    "end": "231239"
  },
  {
    "text": "You can see it tried 11\ndifferent values of CP.",
    "start": "231240",
    "end": "235600"
  },
  {
    "text": "And it decided that CP equals\n0.001 was the best because it",
    "start": "235600",
    "end": "241800"
  },
  {
    "text": "had the best RMSE--\nRoot Mean Square Error.",
    "start": "241800",
    "end": "247380"
  },
  {
    "text": "And it was 5.03 for 0.001.",
    "start": "247380",
    "end": "251970"
  },
  {
    "text": "You see it's pretty insensitive\nto a particular value of CP.",
    "start": "251970",
    "end": "257739"
  },
  {
    "text": "So it's maybe not too important.",
    "start": "257740",
    "end": "260690"
  },
  {
    "text": "It's interesting though\nthat the numbers are so low.",
    "start": "260690",
    "end": "263260"
  },
  {
    "text": "I tried it for a much\nlarger range of CP values,",
    "start": "263260",
    "end": "266420"
  },
  {
    "text": "and the best solutions are\nalways very close to 0.",
    "start": "266420",
    "end": "271930"
  },
  {
    "text": "So it wants us to build\na very detail-rich tree.",
    "start": "271930",
    "end": "275659"
  },
  {
    "text": "So let's see what the tree that\nthat value of CP corresponds to",
    "start": "275659",
    "end": "279659"
  },
  {
    "text": "is.",
    "start": "279659",
    "end": "280159"
  },
  {
    "text": "So we can get that from going\nbest.tree=tr$finalModel.",
    "start": "280159",
    "end": "282430"
  },
  {
    "text": "And we can plot that tree.",
    "start": "296100",
    "end": "298620"
  },
  {
    "text": "So that's the model that\ncorresponds to 0.001.",
    "start": "298620",
    "end": "304160"
  },
  {
    "text": "Plot it.",
    "start": "304160",
    "end": "307310"
  },
  {
    "text": "Wow, OK, so that's a\nvery detailed tree.",
    "start": "307310",
    "end": "311020"
  },
  {
    "text": "You see that it looks pretty\nmuch like the same tree we",
    "start": "311020",
    "end": "313319"
  },
  {
    "text": "had before, initially.",
    "start": "313320",
    "end": "315300"
  },
  {
    "text": "But then it starts to get much\nmore detailed at the bottom.",
    "start": "315300",
    "end": "317879"
  },
  {
    "text": "And in fact if you\ncan see close enough,",
    "start": "317880",
    "end": "319980"
  },
  {
    "text": "there's actually latitude\nand longitude in there",
    "start": "319980",
    "end": "321980"
  },
  {
    "text": "right down at the\nbottom as well.",
    "start": "321980",
    "end": "324140"
  },
  {
    "text": "So maybe the tree\nis finally going",
    "start": "324140",
    "end": "326650"
  },
  {
    "text": "to be a linear regression model.",
    "start": "326650",
    "end": "329460"
  },
  {
    "text": "Well, we can test that out\nsame way as we did before.",
    "start": "329460",
    "end": "331990"
  },
  {
    "text": "best.tree.pred=predict(best.tree,\nnewdata=test).",
    "start": "331990",
    "end": "334030"
  },
  {
    "text": "best.tree.sse, the\nSum of Squared Errors,",
    "start": "343070",
    "end": "348140"
  },
  {
    "text": "is the sum of the best\ntree's predictions",
    "start": "348140",
    "end": "354320"
  },
  {
    "text": "minus the true values squared.",
    "start": "354320",
    "end": "361160"
  },
  {
    "text": "That number is 3,675.",
    "start": "361160",
    "end": "367410"
  },
  {
    "text": "So if you can remember\nfrom the last video,",
    "start": "367410",
    "end": "370150"
  },
  {
    "text": "the tree from the previous video\nactually only got something",
    "start": "370150",
    "end": "375889"
  },
  {
    "text": "in the 4,000s.",
    "start": "375890",
    "end": "376530"
  },
  {
    "text": "So not very good.",
    "start": "376530",
    "end": "377370"
  },
  {
    "text": "So we have actually improved.",
    "start": "377370",
    "end": "378580"
  },
  {
    "text": "This tree is better\non the testing set",
    "start": "378580",
    "end": "380939"
  },
  {
    "text": "than the original\ntree we created.",
    "start": "380940",
    "end": "383390"
  },
  {
    "text": "But, you may also remember\nthat a linear regression",
    "start": "383390",
    "end": "386280"
  },
  {
    "text": "model did actually\nbetter than that still.",
    "start": "386280",
    "end": "389510"
  },
  {
    "text": "The linear regression SSE\nwas more around 3,030.",
    "start": "389510",
    "end": "394720"
  },
  {
    "text": "So the best tree is not as good\nas a linear regression model.",
    "start": "394720",
    "end": "399390"
  },
  {
    "text": "But cross validation\ndid improve performance.",
    "start": "399390",
    "end": "403930"
  },
  {
    "text": "So the takeaway is,\nI guess, that trees",
    "start": "403930",
    "end": "406979"
  },
  {
    "text": "aren't always the best method\nyou have available to you.",
    "start": "406980",
    "end": "410040"
  },
  {
    "text": "But you should always\ntry cross validating",
    "start": "410040",
    "end": "413960"
  },
  {
    "text": "them to get as much performance\nout of them as you can.",
    "start": "413960",
    "end": "417330"
  },
  {
    "text": "And that's the end of the\npresentation Thank you.",
    "start": "417330",
    "end": "421000"
  }
]