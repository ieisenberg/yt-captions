[
  {
    "start": "0",
    "end": "7660"
  },
  {
    "text": "PROFESSOR: This is Dr.\n[? MATLAB, ?] lecture",
    "start": "7660",
    "end": "9556"
  },
  {
    "text": "5, scripts and functions.",
    "start": "9556",
    "end": "13349"
  },
  {
    "text": "The previous lecture we\nsaw the function FtoC that",
    "start": "13350",
    "end": "17090"
  },
  {
    "text": "converts Fahrenheit to Celsius.",
    "start": "17090",
    "end": "20461"
  },
  {
    "text": "Let's take another\nlook at that function.",
    "start": "20461",
    "end": "22169"
  },
  {
    "start": "22169",
    "end": "25592"
  },
  {
    "text": "Here it is.",
    "start": "25592",
    "end": "26720"
  },
  {
    "text": "It's a very simple function.",
    "start": "26720",
    "end": "29130"
  },
  {
    "text": "I've changed it\naround a little bit,",
    "start": "29130",
    "end": "30699"
  },
  {
    "text": "but it accepts Fer as input.",
    "start": "30700",
    "end": "32960"
  },
  {
    "text": "Cel is output.",
    "start": "32960",
    "end": "34690"
  },
  {
    "text": "And this is how we write it.",
    "start": "34690",
    "end": "37550"
  },
  {
    "text": "I could have, of course,\nwritten this as a script.",
    "start": "37550",
    "end": "39660"
  },
  {
    "text": "And it would have been\na much worse idea.",
    "start": "39660",
    "end": "44000"
  },
  {
    "text": "Let's try it as a script.",
    "start": "44000",
    "end": "45160"
  },
  {
    "text": "I'll comment this out.",
    "start": "45160",
    "end": "46785"
  },
  {
    "text": "And I'll comment this out.",
    "start": "46785",
    "end": "48250"
  },
  {
    "text": "And now if I save it, I can\nchange directory to Scripts.",
    "start": "48250",
    "end": "55920"
  },
  {
    "text": "I can say Fer equals 80\nand now call my FtoC.",
    "start": "55920",
    "end": "63774"
  },
  {
    "text": "And now if I look at Cel,\nit equals the answer.",
    "start": "63775",
    "end": "67840"
  },
  {
    "text": "The problem with this--",
    "start": "67840",
    "end": "70159"
  },
  {
    "text": "there are several\nproblems with this.",
    "start": "70160",
    "end": "72660"
  },
  {
    "text": "One is that I need to\nunderstand the inner working,",
    "start": "72660",
    "end": "75370"
  },
  {
    "text": "my inner notation of the\nscript in order to use it.",
    "start": "75370",
    "end": "79870"
  },
  {
    "text": "I need to know that\nFer is an input.",
    "start": "79870",
    "end": "82000"
  },
  {
    "text": "I need to know that\nCel is the output.",
    "start": "82000",
    "end": "84520"
  },
  {
    "text": "So I need to know that\nbefore I call the script,",
    "start": "84520",
    "end": "86520"
  },
  {
    "text": "I have to assign 80 into Fer.",
    "start": "86520",
    "end": "90539"
  },
  {
    "text": "After I call the script, I\nget the answer inside Cel.",
    "start": "90540",
    "end": "93876"
  },
  {
    "text": "I need to know all of that.",
    "start": "93876",
    "end": "95000"
  },
  {
    "text": "And of course,\nmost functions are",
    "start": "95000",
    "end": "96375"
  },
  {
    "text": "going to be much\nmore complicated",
    "start": "96375",
    "end": "98120"
  },
  {
    "text": "than this one-liner.",
    "start": "98120",
    "end": "100950"
  },
  {
    "text": "Another problem is that,\nobviously since it requires",
    "start": "100950",
    "end": "104180"
  },
  {
    "text": "me to write into Fer\nand write into Cel,",
    "start": "104180",
    "end": "107210"
  },
  {
    "text": "it will overwrite Fer and Cel.",
    "start": "107210",
    "end": "110049"
  },
  {
    "text": "And particularly, it\nwill overwrite Cel.",
    "start": "110050",
    "end": "112320"
  },
  {
    "text": "So if I have an important number\nin Cel and now I call FtoC,",
    "start": "112320",
    "end": "122630"
  },
  {
    "text": "this important number\nis overwritten.",
    "start": "122630",
    "end": "125240"
  },
  {
    "text": "There's nothing I\ncan do about it.",
    "start": "125240",
    "end": "127850"
  },
  {
    "text": "Except for changing\nthis script, there's",
    "start": "127850",
    "end": "130580"
  },
  {
    "text": "no way I can make it\nnot overwrite Cel.",
    "start": "130580",
    "end": "132890"
  },
  {
    "start": "132890",
    "end": "135510"
  },
  {
    "text": "Now most functions\nhave all kinds",
    "start": "135510",
    "end": "137670"
  },
  {
    "text": "of intermediary variables.",
    "start": "137670",
    "end": "141030"
  },
  {
    "text": "So ind1 and there's\nsome assignment",
    "start": "141030",
    "end": "144510"
  },
  {
    "text": "that goes into it\nthere, and another one,",
    "start": "144510",
    "end": "149909"
  },
  {
    "text": "and so on, which are\nneeded for the calculation.",
    "start": "149910",
    "end": "153549"
  },
  {
    "text": "These are of course fake ones,\nbut imagine that you had these",
    "start": "153549",
    "end": "156090"
  },
  {
    "text": "and now you would call these.",
    "start": "156090",
    "end": "158069"
  },
  {
    "text": "Sorry, you would\ncall FtoC again.",
    "start": "158070",
    "end": "161270"
  },
  {
    "text": "You would be littered\nby these variables",
    "start": "161270",
    "end": "167070"
  },
  {
    "text": "that you don't know\nwhere they came from.",
    "start": "167070",
    "end": "170222"
  },
  {
    "text": "You don't care about\nthem because they're",
    "start": "170222",
    "end": "171930"
  },
  {
    "text": "some partial result\ninside the script.",
    "start": "171930",
    "end": "174209"
  },
  {
    "text": "And also they might\nhave overwritten one",
    "start": "174210",
    "end": "176520"
  },
  {
    "text": "of your variables.",
    "start": "176520",
    "end": "177270"
  },
  {
    "text": "So this could be\nreally a disaster.",
    "start": "177270",
    "end": "179790"
  },
  {
    "text": "This is where\nscoping is important.",
    "start": "179790",
    "end": "182700"
  },
  {
    "text": "When you put this\ninside a function,",
    "start": "182700",
    "end": "184590"
  },
  {
    "text": "even if you keep all\nthe littering the same,",
    "start": "184590",
    "end": "188099"
  },
  {
    "text": "now you call this function--",
    "start": "188100",
    "end": "190365"
  },
  {
    "text": "let's clear my variables first.",
    "start": "190365",
    "end": "193000"
  },
  {
    "text": "Let's look who's here.",
    "start": "193000",
    "end": "194640"
  },
  {
    "text": "No one's here.",
    "start": "194640",
    "end": "197300"
  },
  {
    "text": "And now I'm going to\ncall FtoC with 80.",
    "start": "197300",
    "end": "201800"
  },
  {
    "text": "Again the answer, and the\nonly variable that exists,",
    "start": "201800",
    "end": "205310"
  },
  {
    "text": "is this automatic\nvariable called ans.",
    "start": "205310",
    "end": "208010"
  },
  {
    "text": "Ans is an automatic\nvariable that",
    "start": "208010",
    "end": "210110"
  },
  {
    "text": "is generated when a\nvalue is returned,",
    "start": "210110",
    "end": "213230"
  },
  {
    "text": "but it's not assigned.",
    "start": "213230",
    "end": "214790"
  },
  {
    "text": "So for example, if I do 1\nplus 2, there is also an ans.",
    "start": "214790",
    "end": "218409"
  },
  {
    "text": "And ans equals 3.",
    "start": "218410",
    "end": "220370"
  },
  {
    "text": "This is useful if, for example--",
    "start": "220370",
    "end": "222090"
  },
  {
    "text": "notice that here I forgot\nto actually assign this",
    "start": "222090",
    "end": "224894"
  },
  {
    "text": "into a variable.",
    "start": "224894",
    "end": "225560"
  },
  {
    "text": "So I can now save it by\nsaying, x equals ans.",
    "start": "225560",
    "end": "229330"
  },
  {
    "text": "And now my answer\nis saved into x.",
    "start": "229330",
    "end": "232680"
  },
  {
    "text": "Again, using functions does\nnot litter my work space",
    "start": "232680",
    "end": "237109"
  },
  {
    "text": "with partial results.",
    "start": "237110",
    "end": "240270"
  },
  {
    "text": "You see ind1, ind2 are\ncontained inside this function,",
    "start": "240270",
    "end": "243460"
  },
  {
    "text": "and we do not see them outside.",
    "start": "243460",
    "end": "246510"
  },
  {
    "text": "And they make it unnecessary\nto know the inner workings",
    "start": "246510",
    "end": "250974"
  },
  {
    "text": "of the function.",
    "start": "250974",
    "end": "251640"
  },
  {
    "text": "I don't need to know what\nthe inner name of the input",
    "start": "251640",
    "end": "254910"
  },
  {
    "text": "variable is and what the inner\nname of the output variable is.",
    "start": "254910",
    "end": "257730"
  },
  {
    "text": "I just need to know that FtoC\naccepts an input variable",
    "start": "257730",
    "end": "262170"
  },
  {
    "text": "and returns a value.",
    "start": "262170",
    "end": "263800"
  },
  {
    "text": "I don't need to know the\nname of those variables.",
    "start": "263800",
    "end": "266108"
  },
  {
    "start": "266108",
    "end": "270700"
  },
  {
    "text": "Scope also allows\nus to write what's",
    "start": "270700",
    "end": "272770"
  },
  {
    "text": "called recursive functions.",
    "start": "272770",
    "end": "275395"
  },
  {
    "text": "A classic example of\nrecursive function",
    "start": "275395",
    "end": "279190"
  },
  {
    "text": "is the function that creates\nthe Fibonacci sequence.",
    "start": "279190",
    "end": "281390"
  },
  {
    "text": "So let's try this.",
    "start": "281390",
    "end": "282320"
  },
  {
    "start": "282320",
    "end": "285610"
  },
  {
    "text": "We already had one Fibonacci\nso let's do Fibbo2.",
    "start": "285610",
    "end": "288110"
  },
  {
    "start": "288110",
    "end": "291780"
  },
  {
    "text": "And it accepts an n.",
    "start": "291780",
    "end": "294740"
  },
  {
    "text": "The base case, of course.",
    "start": "294740",
    "end": "295960"
  },
  {
    "start": "295960",
    "end": "300220"
  },
  {
    "text": "We need to return a value.",
    "start": "300220",
    "end": "301670"
  },
  {
    "start": "301670",
    "end": "305420"
  },
  {
    "text": "And if it's not less\nthan three, then",
    "start": "305420",
    "end": "307130"
  },
  {
    "text": "we need to return the sum of the\ntwo lower Fibbonacci numbers.",
    "start": "307130",
    "end": "314570"
  },
  {
    "start": "314570",
    "end": "318350"
  },
  {
    "text": "This is a horrible way of\ncreating the Fibonacci sequence",
    "start": "318350",
    "end": "322090"
  },
  {
    "text": "because it involves an\nexponentially large amount",
    "start": "322090",
    "end": "324820"
  },
  {
    "text": "of function calls.",
    "start": "324820",
    "end": "327710"
  },
  {
    "text": "But it works.",
    "start": "327710",
    "end": "329000"
  },
  {
    "text": "And the reason it works is\nbecause the Fibbo in here,",
    "start": "329000",
    "end": "332810"
  },
  {
    "text": "the variables\ninside it, are also",
    "start": "332810",
    "end": "335780"
  },
  {
    "text": "disconnected from the Fibbo\nhere and the Fibbo here.",
    "start": "335780",
    "end": "339080"
  },
  {
    "text": "All these functions are\ncalled one inside the other,",
    "start": "339080",
    "end": "342180"
  },
  {
    "text": "but they don't\noverwrite the variables.",
    "start": "342180",
    "end": "345020"
  },
  {
    "text": "So the v inside\nthe inner Fibbo is",
    "start": "345020",
    "end": "347240"
  },
  {
    "text": "different from the v inside\nthe outer Fibbo and so on.",
    "start": "347240",
    "end": "351620"
  },
  {
    "text": "So let me save this.",
    "start": "351620",
    "end": "352810"
  },
  {
    "start": "352810",
    "end": "371125"
  },
  {
    "text": "OK, so this works.",
    "start": "371125",
    "end": "372540"
  },
  {
    "text": "Now notice that if I try it\nwith 25, it takes a bit of time.",
    "start": "372540",
    "end": "377290"
  },
  {
    "text": "And 35 is almost\ntoo long to run.",
    "start": "377290",
    "end": "379540"
  },
  {
    "text": "I'm not going to even\nwait for this to run.",
    "start": "379540",
    "end": "382030"
  },
  {
    "text": "This is calling 2 to the power\n35 function calls, which is",
    "start": "382030",
    "end": "385382"
  },
  {
    "text": "a little bit too many for me.",
    "start": "385382",
    "end": "386590"
  },
  {
    "text": "And I'm going to cancel\nit-- ctrl c, cancel.",
    "start": "386590",
    "end": "389760"
  },
  {
    "text": "And you can see here--",
    "start": "389760",
    "end": "391660"
  },
  {
    "text": "let me show you the trace--",
    "start": "391660",
    "end": "393870"
  },
  {
    "text": "all the function calls\nwhen it was stopped.",
    "start": "393870",
    "end": "397790"
  },
  {
    "text": "It was stopped here.",
    "start": "397790",
    "end": "399000"
  },
  {
    "text": "But this was called\nfrom this line,",
    "start": "399000",
    "end": "400472"
  },
  {
    "text": "and this was called\nfrom this line,",
    "start": "400472",
    "end": "401930"
  },
  {
    "text": "and this was called from here.",
    "start": "401930",
    "end": "403324"
  },
  {
    "text": "This is all the same line\ncalling itself over and over",
    "start": "403325",
    "end": "405680"
  },
  {
    "text": "again, each time lowering n\nby 1, until eventually n is 2.",
    "start": "405680",
    "end": "411470"
  },
  {
    "text": "And then it can\nreturn the value.",
    "start": "411470",
    "end": "413232"
  },
  {
    "start": "413232",
    "end": "420847"
  },
  {
    "text": "It's that it keeps forgetting\nthe value of the Fibonacci",
    "start": "420847",
    "end": "423180"
  },
  {
    "text": "sequence when it needs it again.",
    "start": "423180",
    "end": "425520"
  },
  {
    "text": "To fix that, let us keep a\nvariable that will actually",
    "start": "425520",
    "end": "429449"
  },
  {
    "text": "hold the Fibonacci sequence.",
    "start": "429450",
    "end": "432260"
  },
  {
    "text": "So we initialize it with 1 1,\nwhich is the starting point.",
    "start": "432260",
    "end": "435060"
  },
  {
    "text": "And now we will\ncall a helper file--",
    "start": "435060",
    "end": "437580"
  },
  {
    "start": "437580",
    "end": "444948"
  },
  {
    "text": "helper function, that is.",
    "start": "444949",
    "end": "445990"
  },
  {
    "start": "445990",
    "end": "449130"
  },
  {
    "text": "And we will return the\nvalue that is needed.",
    "start": "449130",
    "end": "454410"
  },
  {
    "text": "The helper function will\nguarantee that Fn is defined.",
    "start": "454410",
    "end": "459070"
  },
  {
    "text": "Let's see how we do this.",
    "start": "459070",
    "end": "461800"
  },
  {
    "text": "Here is the helper function.",
    "start": "461800",
    "end": "463080"
  },
  {
    "text": "It doesn't have any return\nvalue, but it has an input.",
    "start": "463080",
    "end": "467129"
  },
  {
    "text": "And all it does is checks if\nthe number of elements in F",
    "start": "467130",
    "end": "473320"
  },
  {
    "text": "is less than 10.",
    "start": "473320",
    "end": "474360"
  },
  {
    "text": "And if it is, then it\ncalculates the required one.",
    "start": "474360",
    "end": "478629"
  },
  {
    "text": "So first it calls\nhelper with n minus 1,",
    "start": "478630",
    "end": "485020"
  },
  {
    "text": "and then it says that Fn equals\nFn minus 1, plus Fn minus 2.",
    "start": "485020",
    "end": "494655"
  },
  {
    "text": "And then it's done.",
    "start": "494655",
    "end": "496630"
  },
  {
    "text": "So the helper\nfunction guarantees",
    "start": "496630",
    "end": "498220"
  },
  {
    "text": "that the Fibonacci\nsequence is updated up",
    "start": "498220",
    "end": "500740"
  },
  {
    "text": "to n, this variable F, and then\nwe just return the one we need.",
    "start": "500740",
    "end": "506560"
  },
  {
    "text": "So by this way,\nthis assignment only",
    "start": "506560",
    "end": "509580"
  },
  {
    "text": "happens once for every n,\nwhich makes it linear and end.",
    "start": "509580",
    "end": "514339"
  },
  {
    "text": "Now we don't need\nall of this stuff.",
    "start": "514340",
    "end": "516580"
  },
  {
    "text": "The only thing we do\nneed is this final end.",
    "start": "516580",
    "end": "518960"
  },
  {
    "text": "Let me show you here.",
    "start": "518960",
    "end": "520520"
  },
  {
    "text": "We want this function here.",
    "start": "520520",
    "end": "524940"
  },
  {
    "text": "Sorry, we need another end.",
    "start": "524940",
    "end": "526410"
  },
  {
    "text": "We want this function here to\nbe embedded inside this function",
    "start": "526410",
    "end": "532670"
  },
  {
    "text": "because what that\ndoes is it makes",
    "start": "532670",
    "end": "534800"
  },
  {
    "text": "this variable F visible\nboth for this function",
    "start": "534800",
    "end": "538384"
  },
  {
    "text": "and for this function.",
    "start": "538384",
    "end": "539300"
  },
  {
    "text": "So this F and this F\nare the same variable.",
    "start": "539300",
    "end": "541350"
  },
  {
    "text": "And the hover text says so--",
    "start": "541350",
    "end": "545691"
  },
  {
    "text": "the scope of variable F\nspans multiple functions.",
    "start": "545692",
    "end": "551254"
  },
  {
    "text": "So let's see how that works.",
    "start": "551254",
    "end": "552420"
  },
  {
    "text": "I'll save it.",
    "start": "552420",
    "end": "554740"
  },
  {
    "text": "We call Fibbo2 is 3 and\nthe answer is correct.",
    "start": "554740",
    "end": "559000"
  },
  {
    "text": "4, 5, and 35--",
    "start": "559000",
    "end": "562670"
  },
  {
    "text": "no problem, 45--\nno problem, 55--",
    "start": "562670",
    "end": "566750"
  },
  {
    "text": "no problem.",
    "start": "566750",
    "end": "569500"
  },
  {
    "text": "This is a simple\nexample of what's",
    "start": "569500",
    "end": "571120"
  },
  {
    "text": "called dynamic programming.",
    "start": "571120",
    "end": "573940"
  },
  {
    "text": "And this is a way of reducing\nan exponential recursive",
    "start": "573940",
    "end": "578710"
  },
  {
    "text": "implementation\ninto a linear one.",
    "start": "578710",
    "end": "582000"
  },
  {
    "text": "Now, you can have more\nthan one input variable,",
    "start": "582000",
    "end": "585890"
  },
  {
    "text": "and you can have\nmore than one output.",
    "start": "585890",
    "end": "588510"
  },
  {
    "text": "But I suggest that you\ninvestigate that on your own.",
    "start": "588510",
    "end": "592880"
  }
]