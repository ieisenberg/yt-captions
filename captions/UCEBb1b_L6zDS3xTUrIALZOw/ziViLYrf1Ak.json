[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6060"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or to\nview additional materials",
    "start": "6060",
    "end": "12690"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "12690",
    "end": "26650"
  },
  {
    "text": "ERIK DEMAINE: Welcome\nback to 6.890. Today will be our last lecture\nabout pure 3SAT, so to speak,",
    "start": "26650",
    "end": "33160"
  },
  {
    "text": "and we'll be focusing\nin particular on circuit SAT today. But before we get started\nwith more reductions,",
    "start": "33160",
    "end": "39620"
  },
  {
    "text": "I want to highlight two styles\nof 3SAT proofs that we've seen.",
    "start": "39620",
    "end": "46390"
  },
  {
    "text": "This is orthogonal to\nthe circuit perspective versus logic perspective. ",
    "start": "46390",
    "end": "54109"
  },
  {
    "text": "And I think it's interesting\nto highlight the two different approaches. So approach one I'm going\nto call dual rail logic.",
    "start": "54110",
    "end": "64449"
  },
  {
    "text": "These are not the usual names. We're making up names here. There aren't really names for\nthese types of reductions.",
    "start": "64450",
    "end": "71140"
  },
  {
    "text": "And the other type I'm\ngoing to call binary logic. ",
    "start": "71140",
    "end": "78180"
  },
  {
    "text": "These names come from actual\ncircuit stuff, real hardware.",
    "start": "78180",
    "end": "85590"
  },
  {
    "text": "So for example, all the\nNintendo proofs we saw are in the style of what\nI would call dual rail",
    "start": "85590",
    "end": "91780"
  },
  {
    "text": "logic because the\nvariables have two outputs. And the idea is that\nthis one is activated",
    "start": "91780",
    "end": "98119"
  },
  {
    "text": "when x is set to true. This one is activated\nwhen not x is set to true or x is set to false.",
    "start": "98120",
    "end": "105049"
  },
  {
    "text": "Never should both of\nthem be activated. So you have a separate\nrail, separate line for the true case,\nand a separate line",
    "start": "105050",
    "end": "111180"
  },
  {
    "text": "for the false case. And this is usually called the\nvariable gadget that does that.",
    "start": "111180",
    "end": "117520"
  },
  {
    "start": "117520",
    "end": "131430"
  },
  {
    "text": "And I'm going to make up\nsome more terminology. I'll call this semi-wires\nto distinguish from wires.",
    "start": "131430",
    "end": "141050"
  },
  {
    "text": "So over here in the\nbinary logic case,",
    "start": "141050",
    "end": "148560"
  },
  {
    "text": "this is sort of a\nhalf of a distinction. It's a semi-distinction. ",
    "start": "148560",
    "end": "160380"
  },
  {
    "text": "This is my attempt to\nunify things slightly. ",
    "start": "160380",
    "end": "170140"
  },
  {
    "text": "So the idea is that these\nsemi-wires, either they get activated, or they\ndon't get activated at all.",
    "start": "170140",
    "end": "177020"
  },
  {
    "text": "In the unactivated case,\nnothing happens to them. So they're not\nreally interesting.",
    "start": "177020",
    "end": "183360"
  },
  {
    "text": "In the binary logic\ncase, the idea is that the wire gadget is\nactive in all situations,",
    "start": "183360",
    "end": "188649"
  },
  {
    "text": "but it can be active\nin two different ways. You can either set\nit to the true state or you can set it\nto the false state,",
    "start": "188649",
    "end": "194240"
  },
  {
    "text": "and it represents both\nsort of in one wire. Now, this distinction is going\nto get a little bit of egg.",
    "start": "194240",
    "end": "200640"
  },
  {
    "text": "But we saw an example\nof this kind of proof when we were talking\nabout crease pattern,",
    "start": "200640",
    "end": "205849"
  },
  {
    "text": "flat foldability,\nand p hardness. The wire was the\npleat, and the pleat",
    "start": "205850",
    "end": "211130"
  },
  {
    "text": "could be folded one\nway or the other. But either way, the\ninformation is right here,",
    "start": "211130",
    "end": "216370"
  },
  {
    "text": "and the same wire gets\nput into this gadget whether you're true or false.",
    "start": "216370",
    "end": "222400"
  },
  {
    "text": "Whereas over here you're\nconnecting to this clause only the true half wire or\nsemi-wire goes to this clause.",
    "start": "222400",
    "end": "231060"
  },
  {
    "text": "The false one goes to this\nclause and to this clause. So there's a\ndistinction between here",
    "start": "231060",
    "end": "237720"
  },
  {
    "text": "where the wire's\nbeen split in half, and here where it's\nall in one place, and the wire goes to the gadget\nwhether it's a true or false.",
    "start": "237720",
    "end": "245961"
  },
  {
    "text": "I think that's what\nI wanted to say. My main intent here is to\nhighlight what kind of gadgets",
    "start": "245961",
    "end": "252830"
  },
  {
    "text": "you need. So we have a wire\ngadget on this side,",
    "start": "252830",
    "end": "258320"
  },
  {
    "text": "a variable gadget on this side. For binary logic you also need\na splitter or a split gadget",
    "start": "258320",
    "end": "267879"
  },
  {
    "text": "to make copies of the wire. ",
    "start": "267880",
    "end": "274080"
  },
  {
    "text": "So the idea is you\nhave one wire coming in, there's some magic\nsplit gadget which makes two wires or three\nwires, whatever, coming out.",
    "start": "274080",
    "end": "282370"
  },
  {
    "text": "So then you can repeat\nsplit however many times that variable occurs.",
    "start": "282370",
    "end": "287600"
  },
  {
    "text": "You can make a copy. In the non-monotone\nversions of 3SAT",
    "start": "287600",
    "end": "293800"
  },
  {
    "text": "you may also need a\nnegation or not gadget.",
    "start": "293800",
    "end": "300800"
  },
  {
    "text": "If you need negation, then\nyou'll need a negation gadget. In some cases you also\nneed a terminator gadget",
    "start": "300800",
    "end": "309000"
  },
  {
    "text": "in this perspective. ",
    "start": "309000",
    "end": "315060"
  },
  {
    "text": "A terminator gadget is just the\nend of a wire, you might say.",
    "start": "315060",
    "end": "323160"
  },
  {
    "text": "So if you want to\njust not use a wire, then you would put\na terminator gadget.",
    "start": "323160",
    "end": "328240"
  },
  {
    "text": "And the idea of the terminator\ngadget is it leaves it free, leaves the wire free to\nchoose true or false.",
    "start": "328240",
    "end": "334520"
  },
  {
    "text": "Now, sometimes you can get away\nwithout a terminator gadget. For example, if each\nof your variables",
    "start": "334520",
    "end": "340420"
  },
  {
    "text": "occurs exactly four times, then\nyou can just use two splitters, make four copies, and\nthen connect those",
    "start": "340420",
    "end": "346610"
  },
  {
    "text": "directly to the clauses,\nmaybe with some negations. So in that case, you\nwouldn't need a terminator.",
    "start": "346610",
    "end": "352340"
  },
  {
    "text": "Over here we're\nusing a terminator in a certain sense, which\nis the edge of the paper. If a wire goes to the edge\nof the paper it becomes free.",
    "start": "352340",
    "end": "359380"
  },
  {
    "text": "So that's sort of the\nterminator gadget here. Though we didn't\nmake explicit, it was part of this overall plan.",
    "start": "359380",
    "end": "365435"
  },
  {
    "text": " In both cases, in one\nand two, you probably",
    "start": "365435",
    "end": "375710"
  },
  {
    "text": "need something\nlike a turn gadget",
    "start": "375710",
    "end": "381789"
  },
  {
    "text": "and maybe a crossover gadget. ",
    "start": "381790",
    "end": "390070"
  },
  {
    "text": "We've seen these\nin various forms. In this case, the turn\ngadget was very explicit.",
    "start": "390070",
    "end": "396210"
  },
  {
    "text": "I mean it was also a\nsplitter and also in negator, but in particular,\nit changed the angle, and we needed that in order\nto take this truth value",
    "start": "396210",
    "end": "403469"
  },
  {
    "text": "and send it up to clause\nand aim everything right.",
    "start": "403470",
    "end": "408936"
  },
  {
    "text": "And in general,\nif you were doing any kind of embedding\ninto two dimensions, you're probably\ngoing to need a turn gadget so you can move your\nwires or semi-wires around.",
    "start": "408936",
    "end": "418480"
  },
  {
    "text": "A lot of the time people\nmight call this also a wire, so that's why. But I think it's\nuseful to have a word",
    "start": "418480",
    "end": "424720"
  },
  {
    "text": "to distinguish these kinds\nof wires which are only active or inactive, versus\nthe wires which are always",
    "start": "424720",
    "end": "430650"
  },
  {
    "text": "active but in two\npossible states.  Hopefully that clarifies or\nmakes more explicit the types",
    "start": "430650",
    "end": "439169"
  },
  {
    "text": "of proofs we've seen so far. Now, today we're going to\ndo a couple of circuit SAT",
    "start": "439170",
    "end": "445700"
  },
  {
    "text": "proofs, which all of this\napplies to circuit SAT proofs, as well as SAT and 1\nand 3SAT and that'll",
    "start": "445700",
    "end": "451290"
  },
  {
    "text": "equals SAT, that'll equal 3SAT. Circuit SAT you're\ngoing to have-- I",
    "start": "451290",
    "end": "457060"
  },
  {
    "text": "guess in principle you\ncould do it dual rail logic or binary logic,\nalthough usually we probably think of them in\nthis capacity in binary logic.",
    "start": "457060",
    "end": "467040"
  },
  {
    "text": "And you're going to have wires. You still need\nsplits because you need to be able to take\nthe output of a gate",
    "start": "467040",
    "end": "473300"
  },
  {
    "text": "and send it to\nmultiple other gates. In addition to a\nnot gadget, you're",
    "start": "473300",
    "end": "478480"
  },
  {
    "text": "going to want some other\nuniversal logic gate.",
    "start": "478480",
    "end": "484350"
  },
  {
    "text": "So we're going to talk\nabout that in a bit after we see some examples. ",
    "start": "484350",
    "end": "490729"
  },
  {
    "text": "Our first example is\ncalled Akari or Light Up.",
    "start": "490730",
    "end": "496530"
  },
  {
    "text": "This is another Nikoli puzzle\nlike Sudoku and Numberlink",
    "start": "496530",
    "end": "503010"
  },
  {
    "text": "we saw last time. So here's a sample input\nand a sample output.",
    "start": "503010",
    "end": "509440"
  },
  {
    "text": "Ignore the black dots there. So you're given a grid.",
    "start": "509440",
    "end": "515240"
  },
  {
    "text": "There's blank\nsquares and there's obstacle squares where you're\nnot allowed to put anything. Some of the obstacle squares may\nhave a number between 0 and 4",
    "start": "515240",
    "end": "523110"
  },
  {
    "text": "on them. And that number represents how\nmany, among the four neighbors, edge neighbors of that\nsquare, how many of them",
    "start": "523110",
    "end": "530570"
  },
  {
    "text": "should have a light? These blue circles are lights. OK, so like this one has zero\nlights in those four positions,",
    "start": "530570",
    "end": "538590"
  },
  {
    "text": "this one has two, this one has\nfour, that's forced, and so on. A lot of the cells are free,\nbut whether you're lit or not.",
    "start": "538590",
    "end": "546680"
  },
  {
    "text": "And then the rules\nare so you can think of a light\nas a rook in chess,",
    "start": "546680",
    "end": "552050"
  },
  {
    "text": "so it can see everything\nhorizontally in the same row, up to obstacles, and in the\nsame column up to obstacles.",
    "start": "552050",
    "end": "557790"
  },
  {
    "text": "So this guy, for example, lights\nthis portion and this portion. This guy lights that portion,\nand the thing here, and so on.",
    "start": "557790",
    "end": "567650"
  },
  {
    "text": "And the goal is, first of all,\nto light the entire board, so that's why it's all green,\nit's all lit in that way.",
    "start": "567650",
    "end": "575480"
  },
  {
    "text": "And no two lights should like\neach other, because then it's too bright I guess. I don't know.",
    "start": "575480",
    "end": "581580"
  },
  {
    "text": "So no two rooks can\nattack each other would be another perspective.",
    "start": "581580",
    "end": "588290"
  },
  {
    "text": "I think those are the rules. So you've got to satisfy\nthe number constraint. You can only place lights\nin the blank squares.",
    "start": "588290",
    "end": "595290"
  },
  {
    "text": "You have to light everything,\nand they can't see each other. So this is a valid solution. This is puzzle one on\nthe Nikoli website,",
    "start": "595290",
    "end": "602490"
  },
  {
    "text": "and there's a ton more\nif you want to play. AUDIENCE: So you're\nsaying they can't be in the same NOR column?",
    "start": "602490",
    "end": "608039"
  },
  {
    "text": "PROFESSOR: I mean they\ncan be in the same column, but they have to be\nseparated by an obstacle. So they can't see each other\nwithin a sort of sub-column",
    "start": "608039",
    "end": "615850"
  },
  {
    "text": "or within a sub-row as\ngiven by the obstacles. Cool.",
    "start": "615850",
    "end": "621110"
  },
  {
    "text": "So that's the\nproblem, and now we're going to prove that\nit's NP-complete.",
    "start": "621110",
    "end": "626120"
  },
  {
    "text": "This is the nice proof\nbecause it's relatively simple and it illustrates a kind\nof circuit SAT and style",
    "start": "626120",
    "end": "632180"
  },
  {
    "text": "reduction. So for starters, and I\nwould say most SAT proofs,",
    "start": "632180",
    "end": "638030"
  },
  {
    "text": "a good starting point\nis a wire gadget. You want to think about can\nI make some construction that has ideally exactly\ntwo solutions, one",
    "start": "638030",
    "end": "645280"
  },
  {
    "text": "to represent true, one\nto represent false. So here are a variety\nof ways to do wires.",
    "start": "645280",
    "end": "651839"
  },
  {
    "text": "And this is a fairly\nflexible kind of game. The basic one looks like this. Most of things are going to be\nobstacles to tie it down, make",
    "start": "651840",
    "end": "659120"
  },
  {
    "text": "it easy to separate gadgets. But here we have two\nblanks squares, a one, two blank squares, a\none, two blank squares.",
    "start": "659120",
    "end": "665450"
  },
  {
    "text": "That's sort of a\nsimple kind of wire because you know from this one,\neither x or x prime is a light.",
    "start": "665450",
    "end": "672830"
  },
  {
    "text": "Exactly one of them is. So that forces alternation. Done.",
    "start": "672830",
    "end": "678579"
  },
  {
    "text": "Why? Because if we choose x, we can't\nchoose x prime because then they're in the same sub-row\nand all the way down the chain.",
    "start": "678580",
    "end": "684690"
  },
  {
    "text": "So in general, if\nx is true, the idea is that the x's are the lights. If x is false, then the\nx primes are the lights.",
    "start": "684690",
    "end": "692250"
  },
  {
    "text": "Now, that's a basic wire. But part of the wires\nwe need a turn gadget.",
    "start": "692250",
    "end": "697339"
  },
  {
    "text": "So this is a 90 degree turn. Just check that\nthis is still lit.",
    "start": "697340",
    "end": "703500"
  },
  {
    "text": "If these guys could not see each\nother, I think this is black. It's also OK.",
    "start": "703500",
    "end": "708710"
  },
  {
    "text": "The alternation's\nforced by the one. But some flexibility. And let's see.",
    "start": "708710",
    "end": "717130"
  },
  {
    "text": "The other fun thing you could\ndo is spread out the x and x prime. If you put a bunch\nof zeroes here to force that there's\nno lights here,",
    "start": "717130",
    "end": "723370"
  },
  {
    "text": "because this has to be\nlit again, one of these has to be active, and the\nones force an alternation.",
    "start": "723370",
    "end": "728399"
  },
  {
    "text": "So this is helpful because if\nour wires just look like this,",
    "start": "728400",
    "end": "733480"
  },
  {
    "text": "and this will come\nup again today, then you're forced to be\ncongruent to zero mod three.",
    "start": "733480",
    "end": "739880"
  },
  {
    "text": "First your width has\nto be a multiple of 3. And this can be an issue. If you have a bunch of gadgets\neach of the different sizes--",
    "start": "739880",
    "end": "747290"
  },
  {
    "text": "maybe one is 5 by\n5, another 3 by 3, and other fun\nprime numbers, then you might have trouble\nactually getting gadgets",
    "start": "747290",
    "end": "754120"
  },
  {
    "text": "to meet edge on. Maybe there's a\ngap of one or two or something\nbetween the gadgets.",
    "start": "754120",
    "end": "759519"
  },
  {
    "text": "But if you have a\nset up where you can adjust the wire lengths to\nbe any integer, that's good.",
    "start": "759520",
    "end": "767589"
  },
  {
    "text": "You can do this\nmost of the time, but then when you're\ngetting close to the gate, if you're off by\none or two or three,",
    "start": "767590",
    "end": "773080"
  },
  {
    "text": "you just make it a little bit\nlonger and you're all set. AUDIENCE: The unfilled\none can also just",
    "start": "773080",
    "end": "780340"
  },
  {
    "text": "have a crossover gadget then? PROFESSOR: Ah, sorry? AUDIENCE: Since\nyou have nothing-- it's very natural to have a\ncrossover gadget by putting",
    "start": "780340",
    "end": "788377"
  },
  {
    "text": "two of them orthongonal. PROFESSOR: Oh yeah. You can make a crossover\ngadget easy in this set up. I think that is a future slide.",
    "start": "788377",
    "end": "793820"
  },
  {
    "text": " So we'll do crossover in a bit. Let's start with-- yeah, you\ncan very easily do crossover.",
    "start": "793820",
    "end": "802770"
  },
  {
    "text": "We won't need a crossover here. That's what I mean. So we definitely need\nsplitting, though.",
    "start": "802770",
    "end": "809092"
  },
  {
    "text": "In general, whenever\nyou have wires you've got to be\nable to make copies, because if your variable\nonly appears in two places,",
    "start": "809092",
    "end": "814700"
  },
  {
    "text": "3SAT is easy, our circuit\nSAT is probably easy.",
    "start": "814700",
    "end": "819800"
  },
  {
    "text": "So here is a splitter. This is the main mechanism.",
    "start": "819800",
    "end": "826990"
  },
  {
    "text": "I guess these ones and this two. So these ones force\nan alternation between here and here.",
    "start": "826990",
    "end": "832850"
  },
  {
    "text": "These have to be\nopposites of each other. And then the two-- so if\nboth of the x's are present,",
    "start": "832850",
    "end": "840350"
  },
  {
    "text": "if this is absent,\nthen these two have to be present by the ones. And so by this two,\nthat's all there is,",
    "start": "840350",
    "end": "846040"
  },
  {
    "text": "and therefore this is absent. So these guys have\nto be the same. These guys have to be opposite. And conversely, if this\nis present by these ones,",
    "start": "846040",
    "end": "854230"
  },
  {
    "text": "these have to be\nabsent, and by this two, this has to be present. So this is almost\nsort of a-- well,",
    "start": "854230",
    "end": "860356"
  },
  {
    "text": "you could also\nput some ones here I guess if you felt like it. Anyway, if you think\nabout the parity",
    "start": "860356",
    "end": "867510"
  },
  {
    "text": "here, when we're represent a\nsignal coming into a gadget,",
    "start": "867510",
    "end": "872810"
  },
  {
    "text": "there's x on the left\nand x prime on the right. So that means coming out here\nthere's not x prime on the left",
    "start": "872810",
    "end": "880350"
  },
  {
    "text": "and x on the right, so this\nactually a negated copy of x. And up here with some turns,\nwe have a regular copy",
    "start": "880350",
    "end": "887600"
  },
  {
    "text": "of x and a regular copy of x. This is actually a fairly\ncommon thing that happens. When you try to split maybe\nyou also get a negated copy,",
    "start": "887600",
    "end": "893310"
  },
  {
    "text": "or instead you get\na negated copy. This is actually\ngreat because it kills two birds with one stone.",
    "start": "893310",
    "end": "898685"
  },
  {
    "text": "You could use this\nas a splitter. It kind of makes 3D\ncopies of your signal. But you could also use it\njust as a negation gadget, as",
    "start": "898685",
    "end": "906480"
  },
  {
    "text": "a not gate. I think I have a slide\nof those done explicitly.",
    "start": "906480",
    "end": "913079"
  },
  {
    "text": "Yeah. So here we're effectively\nusing a terminator gadget. We're saying, well, we could\nthrow away this negated copy",
    "start": "913080",
    "end": "920368"
  },
  {
    "text": "because we already have\ntwo positive copies and that's enough\nfor a splitter. So if we just end this wire\nhere, great, we've got a split.",
    "start": "920369",
    "end": "928980"
  },
  {
    "text": "Or if we throw away the\ntwo copies of x and we just want the negated copy of x,\nthen ends up looking like this.",
    "start": "928980",
    "end": "936850"
  },
  {
    "text": "So we get a split\ngadget and a not gate essentially for\nfree out of this.",
    "start": "936850",
    "end": "942280"
  },
  {
    "text": "You could just\npresent this gadget and say, oh, I also\nhave terminators, and then you know\nthat you get these.",
    "start": "942280",
    "end": "948209"
  },
  {
    "text": "But for fun, he drew them\nand I'll show you them. I won't show you them\nin future proofs.",
    "start": "948210",
    "end": "955340"
  },
  {
    "text": "Cool. So let's see, what do we have? We've got a wire. We've got a split. We've got a not.",
    "start": "955340",
    "end": "960900"
  },
  {
    "text": "We've got a terminator. We need some kind of clause\nor some kind of logic gate.",
    "start": "960900",
    "end": "967759"
  },
  {
    "text": "And then possibly we\nalso need a crossover. We have turns. ",
    "start": "967760",
    "end": "974970"
  },
  {
    "text": "Next up is a gate. It's sort of a mega gate.",
    "start": "974970",
    "end": "980220"
  },
  {
    "text": "I'm guessing McPhail tried\nvarious little configurations and then found one that\ndid interesting things.",
    "start": "980220",
    "end": "986890"
  },
  {
    "text": "It actually does two\ninteresting things at once. So we have x coming in on\nthe left and y coming in",
    "start": "986890",
    "end": "993709"
  },
  {
    "text": "on the right, so both of\nthem have this x prime and y prime, then negated copies.",
    "start": "993710",
    "end": "999780"
  },
  {
    "text": "And then we've got\nsome fun stuff in here. So let's start with\nmaybe the bottom,",
    "start": "999780",
    "end": "1005430"
  },
  {
    "text": "which is supposed to\nbe an OR of x and y. So let's say that they are\nboth false, for example.",
    "start": "1005430",
    "end": "1011832"
  },
  {
    "text": "And in general, we're going to\nhave to check all the cases, but I won't do all of them. So let's say this is absent.",
    "start": "1011832",
    "end": "1017710"
  },
  {
    "text": "This is absent, meaning the\nit's lit from the other end. AUDIENCE: If it's false it\nmeans that x prime is present. ERIK DEMAINE: Oh, right.",
    "start": "1017710",
    "end": "1022980"
  },
  {
    "text": "Sorry. If they're both false-- I\nthough it was good-- then both of these are present,\nand therefore, we're",
    "start": "1022980",
    "end": "1030799"
  },
  {
    "text": "going to get hopefully\nthat this one's absent because the OR of false\nand false is false.",
    "start": "1030800",
    "end": "1036280"
  },
  {
    "text": "So the claim would\nbe that A prime and B prime must be activated.",
    "start": "1036280",
    "end": "1041560"
  },
  {
    "text": "AUDIENCE: If they\nweren't then you couldn't light both A and B. ERIK DEMAINE: Right. These are at best OR'd together.",
    "start": "1041560",
    "end": "1049230"
  },
  {
    "text": "At most, one of\nthese is present. These regions both\nneed to be lit. So we're going to need\nat least one of them",
    "start": "1049230",
    "end": "1059010"
  },
  {
    "text": "to be on, but once\none of them is on, we know that z is absent, and\nthen the other one must be on.",
    "start": "1059010",
    "end": "1064580"
  },
  {
    "text": "Right, this too. Good. And then we should\nup here get x NOR.",
    "start": "1064580",
    "end": "1073410"
  },
  {
    "text": "So when these were\nboth false and present, these were present,\nthese are absent,",
    "start": "1073410",
    "end": "1079970"
  },
  {
    "text": "and therefore, this is present. And the x OR of zero\nand zero is zero.",
    "start": "1079970",
    "end": "1085310"
  },
  {
    "text": "The x NOR is 1, so that's good. So in general, you\ncheck all the cases",
    "start": "1085310",
    "end": "1090730"
  },
  {
    "text": "and confirm this is the case. Again, by putting terminators on\nhere, we can get either x OR y,",
    "start": "1090730",
    "end": "1096470"
  },
  {
    "text": "or x NOR-- x NOR\ny-- it sounds funny.",
    "start": "1096470",
    "end": "1102820"
  },
  {
    "text": "That's great.  This is the one that\nwe really care about.",
    "start": "1102820",
    "end": "1109580"
  },
  {
    "text": "The OR gate-- well, so\ndifferent answers to this. But you should know, and we'll\ntalk more about this later,",
    "start": "1109580",
    "end": "1120370"
  },
  {
    "text": "NAND-- or let's say\nNAND gate is universal.",
    "start": "1120370",
    "end": "1126800"
  },
  {
    "text": " And a NOR gate by\nitself is universal.",
    "start": "1126800",
    "end": "1132565"
  },
  {
    "text": " They're just good\nthings you should know.",
    "start": "1132565",
    "end": "1137929"
  },
  {
    "text": "They go back at least 50 years.  AUDIENCE: What does\nuniversal mean?",
    "start": "1137930",
    "end": "1144360"
  },
  {
    "text": "ERIK DEMAINE: So universal\nmeans that from those-- if you're just given\na bunch of NANDs, then you can construct\nany logical get you want.",
    "start": "1144360",
    "end": "1153019"
  },
  {
    "text": "I will talk about\nthat more in a moment. So this OR is\nparticularly interesting because we already have\nNOT, and so from OR and NOT",
    "start": "1153020",
    "end": "1160929"
  },
  {
    "text": "we can make NOR-- it's\njust the NOT of the OR. And so from that, we should\nbe able to make anything.",
    "start": "1160930",
    "end": "1167220"
  },
  {
    "text": "Which is great,\nexcept for one thing which is the crossover gadget. So in the case of Light\nUp, crossover gadget",
    "start": "1167220",
    "end": "1173809"
  },
  {
    "text": "is easy to construct. But because we have\nx OR anyway, we",
    "start": "1173810",
    "end": "1179220"
  },
  {
    "text": "can use this fun fact that--\nthis is the symbol for x OR. If you have x OR gadgets, you\ncan make a crossover gadget",
    "start": "1179220",
    "end": "1189029"
  },
  {
    "text": "for free. So this communicates\nx to x, y to y. There's four cases.",
    "start": "1189030",
    "end": "1194620"
  },
  {
    "text": "I won't check all of them. But that's cool\nbecause we have x NOR, we can negate it and get x OR.",
    "start": "1194620",
    "end": "1201420"
  },
  {
    "text": "And then we can take three of\nthem, plugging them together, and we get a rather\ncomplicated crossover gadget",
    "start": "1201420",
    "end": "1207919"
  },
  {
    "text": "if I expanded it out. There is a simpler one, but\nwe don't care about simplicity here. These are just constants, and\nwe just care about polynomial.",
    "start": "1207920",
    "end": "1215160"
  },
  {
    "text": "So that's Light\nUp as empty heart. AUDIENCE: Do we need\ncrossover gadgets",
    "start": "1215160",
    "end": "1220986"
  },
  {
    "text": "in general for circuit SAT? Is planner circuit SAT hard? ERIK DEMAINE: Please wait.",
    "start": "1220986",
    "end": "1226900"
  },
  {
    "text": "Yeah. This is something-- well, yeah. I want to talk about that\nafter the next example.",
    "start": "1226900",
    "end": "1232110"
  },
  {
    "text": "AUDIENCE: OK. ERIK DEMAINE: Which we'll get\nto an answer to that question. Which as far as I know hasn't\nbeen explicitly raised before,",
    "start": "1232110",
    "end": "1237929"
  },
  {
    "text": "but the answer is basically, you\ndon't need crossover gadgets,",
    "start": "1237930",
    "end": "1243230"
  },
  {
    "text": "and for all the\ncases I can think. So that was Light Up is NP hard.",
    "start": "1243230",
    "end": "1250540"
  },
  {
    "text": "It's also in NP because a\ncertificate is just where do you put the lights. There's only polynomial\nnumber of places to put them,",
    "start": "1250540",
    "end": "1256919"
  },
  {
    "text": "and checking it is easy. Cool. So NP-complete. Oh, here's for fun an\noverall construction,",
    "start": "1256920",
    "end": "1263690"
  },
  {
    "text": "which McPhail worked out. So putting all the pieces\ntogether and possibly using-- I",
    "start": "1263690",
    "end": "1269690"
  },
  {
    "text": "think here there's\nmaybe no crossovers.  So in general, with Circuit\nSAT you can construct sort",
    "start": "1269690",
    "end": "1277290"
  },
  {
    "text": "of any Boolean formula\nyou want once you have a universal set of gates.",
    "start": "1277290",
    "end": "1283050"
  },
  {
    "text": "But yeah, you can work\nthrough details here. It's easy to convert\nbetween AND and OR",
    "start": "1283050",
    "end": "1289570"
  },
  {
    "text": "just by negating the\ninputs by De Morgan. So you've got x OR y is NOT\nx and NOT y or vice versa.",
    "start": "1289570",
    "end": "1300520"
  },
  {
    "text": "So as long as\nyou've got NOT an OR you can construct AND and\nvice versa by negating things",
    "start": "1300520",
    "end": "1305899"
  },
  {
    "text": "appropriately. So that's what he's doing here\nfor getting some ORs and so on.",
    "start": "1305900",
    "end": "1313800"
  },
  {
    "text": "And because there's\ntwo copies of x-- well, x is sort of getting split here.",
    "start": "1313800",
    "end": "1319220"
  },
  {
    "text": "I guess you didn't\nhave to split x. You could just connect directly. This is a pretty nice\nclean construction.",
    "start": "1319220",
    "end": "1324970"
  },
  {
    "text": "It could actually make decent\nresize puzzles with it. AUDIENCE: So you end up with\nthe wire carrying the formula",
    "start": "1324970",
    "end": "1331448"
  },
  {
    "text": "just by doing all\nthese combinations? ERIK DEMAINE: Right. AUDIENCE: And then\nwhat do you do? ERIK DEMAINE: Ah, good point. Thank you.",
    "start": "1331448",
    "end": "1337070"
  },
  {
    "text": "There was one more point to this\npicture, which is this zero. This should be an OR of x\nfalse, and this OR or this AND",
    "start": "1337070",
    "end": "1346750"
  },
  {
    "text": "and blah, blah, blah,\nwhich is this thing. AUDIENCE: So if that\nwire's carrying true,",
    "start": "1346750",
    "end": "1352490"
  },
  {
    "text": "then you don't need to put\na light next to the zero, otherwise you would\nhave to, and that means the puzzle can't be solved. ERIK DEMAINE: Right.",
    "start": "1352490",
    "end": "1358253"
  },
  {
    "text": "So for this puzzle\nto be solvable, we better not put\na light here, which means it has to be here, which\ncorresponds to this formula",
    "start": "1358253",
    "end": "1364540"
  },
  {
    "text": "being true, I think, if\nI got that parity right. Or either way. You could put a one there and\nforce there to be a light.",
    "start": "1364540",
    "end": "1373679"
  },
  {
    "text": "So this makes the puzzle\nfeasible if and only if this formula's feasible. Because the wires\nare unconstrained,",
    "start": "1373680",
    "end": "1378810"
  },
  {
    "text": "except by setting this\nthing equal to one. So this is a special kind of\nterminator, you might say.",
    "start": "1378810",
    "end": "1386590"
  },
  {
    "text": "A true terminator. You want to force the thing\nto be true in the end. That's usually\npretty easy to do.",
    "start": "1386590",
    "end": "1391785"
  },
  {
    "text": "Terminator's usually one\nof the simplest gadgets to worry about. But yeah, you do need it. For circuit SAT you\nneed-- let's add that.",
    "start": "1391785",
    "end": "1399019"
  },
  {
    "start": "1399020",
    "end": "1405160"
  },
  {
    "text": "Circuit SAT you need let's\nsay a true terminator. There are other ways\nyou could do it.",
    "start": "1405160",
    "end": "1410920"
  },
  {
    "start": "1410920",
    "end": "1417040"
  },
  {
    "text": "Cool. Other questions about Akari?",
    "start": "1417040",
    "end": "1422150"
  },
  {
    "text": "All right. So our next topic\nis Mine Sweeper. This is from our poster. We did Super Mario\nBrothers, and Bruce Lee",
    "start": "1422150",
    "end": "1428060"
  },
  {
    "text": "did Rush Hour, so Mine Sweeper's\nthe last one on the poster. Let's prove it hard.",
    "start": "1428060",
    "end": "1434950"
  },
  {
    "text": "We're actually going to cover\ntwo proofs about Mine Sweeper, because there are sort of\ntwo natural problems you",
    "start": "1434950",
    "end": "1440180"
  },
  {
    "text": "might ask about it. The first problem\nis consistency.",
    "start": "1440180",
    "end": "1445530"
  },
  {
    "text": "So this is I give\nyou a set up, I'm going to give you a partially\nsolved board that you're not",
    "start": "1445530",
    "end": "1451379"
  },
  {
    "text": "given the x levels. So just a regular\ninstance of Mine Sweeper. Maybe you're told where\nsome of the bombs are.",
    "start": "1451380",
    "end": "1459610"
  },
  {
    "text": "It won't actually matter,\nbecause all the bombs that I'll draw here are\ndrivable from this-- I should mention the\nrules of Mine Sweeper",
    "start": "1459610",
    "end": "1466230"
  },
  {
    "text": "just in case you haven't played. Anyone not played Mine Sweeper? I'm not willing to admit it.",
    "start": "1466230",
    "end": "1472020"
  },
  {
    "text": "The numbers here representing,\namong all your vertex neighbors, all eight neighbors,\nhow many of them are bombs.",
    "start": "1472020",
    "end": "1478664"
  },
  {
    "text": "You don't want to click on the\nbombs because then you die. So your goal is from\nthis partial information, these blank squares\nrepresent zeros.",
    "start": "1478664",
    "end": "1485114"
  },
  {
    "text": "From this partial\ninformation, you want to figure out\nwhere the bombs must be. And here's a very\nfamiliar looking wire.",
    "start": "1485114",
    "end": "1494050"
  },
  {
    "text": " We can't just have obstacles\nthat are wild cards.",
    "start": "1494050",
    "end": "1500860"
  },
  {
    "text": "So we have to put\nnumbers if we don't want there to be bombs there. That makes the gadgets quite\na bit trickier to work with.",
    "start": "1500860",
    "end": "1506930"
  },
  {
    "text": "But this looks pretty similar. We've got these ones,\nwhich force an alternation. Exactly one of these two is\na bomb, so if x is present,",
    "start": "1506930",
    "end": "1514900"
  },
  {
    "text": "x prime is absent\nand vice versa. And then this one forces--\nI guess actually this one",
    "start": "1514900",
    "end": "1520610"
  },
  {
    "text": "forces these to be opposite. So that forces the\nalternation down the line.",
    "start": "1520610",
    "end": "1525690"
  },
  {
    "text": "So again, there are exactly\ntwo solutions to this wire gadget for where\nthe bombs could be.",
    "start": "1525690",
    "end": "1531660"
  },
  {
    "text": "And so the Mine Sweeper\nconsistency problem is I give you some picture\ninvolving these things,",
    "start": "1531660",
    "end": "1536840"
  },
  {
    "text": "and I want to know is\nthere a solution-- is there a placement of the\nbombs that satisfies",
    "start": "1536840",
    "end": "1542640"
  },
  {
    "text": "all of these constraints? Now, you might ask why is that\nthe problem we care about?",
    "start": "1542640",
    "end": "1550640"
  },
  {
    "text": "And one reason if you're\nplaying Mine Sweeper, you'd like to know, for\nexample, could there",
    "start": "1550640",
    "end": "1556570"
  },
  {
    "text": "be a bomb at this position? So could there be a\nbomb at this position?",
    "start": "1556570",
    "end": "1562080"
  },
  {
    "text": "I could solve that\nproblem, potentially, if I could solve Mine Sweeper\nconsistency by saying,",
    "start": "1562080",
    "end": "1569950"
  },
  {
    "text": "let's put a bomb there as part\nof the partial information. Is that consistent\nwith everything else? So add a bomb to the\npartial information.",
    "start": "1569950",
    "end": "1577310"
  },
  {
    "text": "Is that a consistent\nconfiguration? So if I could solve Mine\nSweeper consistency,",
    "start": "1577310",
    "end": "1582429"
  },
  {
    "text": "I could play Mine\nSweeper very well by just testing which\nare bombable positions. If they're not, possible\nto be a bomb there.",
    "start": "1582430",
    "end": "1587970"
  },
  {
    "text": "Actually click there\nand get more information and cook until done. Now, maybe you could solve\nMine Sweeper in a different way",
    "start": "1587970",
    "end": "1593919"
  },
  {
    "text": "than using consistency. But one way to solve it\nwould be consistency. Question? AUDIENCE: By consistency you\ndon't mean unique solution.",
    "start": "1593920",
    "end": "1601299"
  },
  {
    "text": "ERIK DEMAINE: I do not mean\nunique solution, right. Yeah. So when you actually\nwant to solve the game, you'd like there to\nbe a unique solution.",
    "start": "1601300",
    "end": "1607210"
  },
  {
    "text": "That's a problem we\nwill get to in a moment. AUDIENCE: So a blank\nboard, unfilled information is consistent.",
    "start": "1607210",
    "end": "1613799"
  },
  {
    "text": "ERIK DEMAINE: Yes. Completely blank\nboard is consistent. And it wouldn't be interesting.",
    "start": "1613800",
    "end": "1619380"
  },
  {
    "text": "As you're playing,\nyou imagine you've gathered some information,\nyou add a bomb. You want to say is\nthis consistent.",
    "start": "1619380",
    "end": "1624955"
  },
  {
    "text": "It says yes, like\nyou're in a blank board. And you're like could\nthere be a bomb here. Of course there could be.",
    "start": "1624956",
    "end": "1630059"
  },
  {
    "text": "Then that's not a safe move. So if you could solve this,\nyou could identify safe moves.",
    "start": "1630060",
    "end": "1636250"
  },
  {
    "text": "Turns out you can't solve it,\nso it doesn't directly help you. Yeah. AUDIENCE: So there doesn't\nalways exist a safe move.",
    "start": "1636250",
    "end": "1643282"
  },
  {
    "text": "ERIK DEMAINE: There doesn't\nalways exist a safe move. AUDIENCE: What good\nis it, kind of,",
    "start": "1643282",
    "end": "1648910"
  },
  {
    "text": "to know whether [INAUDIBLE]. ERIK DEMAINE: Yeah. I would say consistency\nis the wrong problem to solve for Mine Sweeper.",
    "start": "1648910",
    "end": "1656130"
  },
  {
    "text": "But it was the first\nproblem solved. The gadgets are\nrelatively easy, which is",
    "start": "1656130",
    "end": "1662290"
  },
  {
    "text": "going to be fairly complicated. And then we'll get to the\nright problem for if you wanted to solve the puzzle.",
    "start": "1662290",
    "end": "1667959"
  },
  {
    "text": "At this point it's an\ninteresting question. You just want to know\nis it consistent. Did the computer cheat would\nbe one other perspective.",
    "start": "1667959",
    "end": "1674057"
  },
  {
    "text": "Or you could imagine some\nadversarial Mine Sweeper where you only decide the\nbombs as the person is playing. ",
    "start": "1674057",
    "end": "1682210"
  },
  {
    "text": "So here, just even telling\nwhether your opponent is cheating is hard.",
    "start": "1682210",
    "end": "1688410"
  },
  {
    "text": "So that's another perspective. Let's finish this proof.",
    "start": "1688410",
    "end": "1693920"
  },
  {
    "text": "We have a terminator, which\nis actually a little bit tricky here. You can't just end with\nones because that would",
    "start": "1693920",
    "end": "1699680"
  },
  {
    "text": "force this guy to be a bomb. So you end with\nthese threes, which force-- these guys are already\nbombs because of this picture,",
    "start": "1699680",
    "end": "1706970"
  },
  {
    "text": "and then exactly one of those\nwill still have to be a bomb. And then we have a splitter.",
    "start": "1706970",
    "end": "1712289"
  },
  {
    "text": "It's a similar picture to Akari. We have this two, which\nforces exactly to two of these",
    "start": "1712290",
    "end": "1718030"
  },
  {
    "text": "to be present, and these\nones force alternation. ",
    "start": "1718030",
    "end": "1723090"
  },
  {
    "text": "Now, I'm orienting these\narrows for the splitter and defining true to be when\nthe pointy end of the arrow",
    "start": "1723090",
    "end": "1734400"
  },
  {
    "text": "is present. So that means this is\nactually a negated copy, and these are unnegated copies.",
    "start": "1734400",
    "end": "1741509"
  },
  {
    "text": "But that's only from\nthe orientation. This gadget's actually\nsymmetric, fourfold. But if you put these\narrows in, which",
    "start": "1741509",
    "end": "1748370"
  },
  {
    "text": "you would do if you were\nactually following a circuit, their circuits are directed\nacyclic graphs remember.",
    "start": "1748370",
    "end": "1753830"
  },
  {
    "text": "So this is negation, which is\ngood because it gives us a NOT, it also gives us a split. You can also end these\ntwo things and get a turn.",
    "start": "1753830",
    "end": "1761830"
  },
  {
    "text": "So great, three gadgets in one. ",
    "start": "1761830",
    "end": "1766870"
  },
  {
    "text": "So we already have NOT. This is another way to do NOT. And it's interesting here\nbecause with Akari we",
    "start": "1766870",
    "end": "1774770"
  },
  {
    "text": "could stretch wires to any\nlength, any integer length that's sufficiently long.",
    "start": "1774770",
    "end": "1781360"
  },
  {
    "text": "Here, we're forced in this\nmodulo three picture, normally. But when we do something\nlike a negation",
    "start": "1781360",
    "end": "1787890"
  },
  {
    "text": "here we get kind of messed up. We're no longer in the\nsame position modulo three. We should be off\nby one I believe.",
    "start": "1787890",
    "end": "1796790"
  },
  {
    "text": "So the idea is if you do\ntwo negations in a row, then you can end up\nshifting by exactly two",
    "start": "1796790",
    "end": "1804840"
  },
  {
    "text": "and still have the same signal. So you can see here\nwe have xx bar,",
    "start": "1804840",
    "end": "1811220"
  },
  {
    "text": "but down here we have it\nshifted two positions over.",
    "start": "1811220",
    "end": "1817980"
  },
  {
    "text": "Or I guess it's more impressive\nover here, so x bar x. And normally this would repeat\nin this kind of pattern.",
    "start": "1817980",
    "end": "1824799"
  },
  {
    "text": " So it actually shifted\nby one position.",
    "start": "1824800",
    "end": "1830031"
  },
  {
    "text": "Good. That's actually what I want. So see the pattern here, here,\nhere, here, and shift by one.",
    "start": "1830031",
    "end": "1839549"
  },
  {
    "text": "Yeah, or two the\nother direction. OK, so that's good. That lets me adjust\nmy wire length.",
    "start": "1839550",
    "end": "1846460"
  },
  {
    "text": "These are also often\ncalled shift gadgets. They just let you shift by one.",
    "start": "1846460",
    "end": "1851700"
  },
  {
    "text": "And whenever you have gadgets\nthat force certain modulo constraints, just having\nthe ability to add one is great because then you can\nbreak all switch constraints.",
    "start": "1851700",
    "end": "1858429"
  },
  {
    "text": "You no longer have to\nlive in a mod three grid, whatever, if you don't want to. So this is important.",
    "start": "1858430",
    "end": "1864330"
  },
  {
    "text": "In general-- I'll add\nit to the list here.",
    "start": "1864330",
    "end": "1869370"
  },
  {
    "text": "When you're dealing\nwith wires you may need some kind\nof shift gadget that lets you fix parity issues,\nor in this case, a mod three",
    "start": "1869370",
    "end": "1878820"
  },
  {
    "text": "parity. OK, here is a more\ncomplicated gadget,",
    "start": "1878820",
    "end": "1884550"
  },
  {
    "text": "which I will not go through. It looks scary. It's not actually\na ton going on. It's a lot of gadgets\nwe've already seen.",
    "start": "1884550",
    "end": "1891470"
  },
  {
    "text": "It uses a slight-- I've\nmentioned a turn gadget. This is another\nway to do a turn. There's a few redundant\ngadgets in this paper",
    "start": "1891470",
    "end": "1898190"
  },
  {
    "text": "because it's fun\nto make gadgets, so I want to have more.",
    "start": "1898190",
    "end": "1903279"
  },
  {
    "text": "So there's, for example,\njust a turn gadget here. There's a splitter here. Another turn gadget. This is reflectionally\nsymmetric around the x-axis.",
    "start": "1903280",
    "end": "1912240"
  },
  {
    "text": "There's basically\njust a turn here, so x is just getting copied\nand negated into here.",
    "start": "1912240",
    "end": "1918250"
  },
  {
    "text": "z is getting copied\nand negated into here.  This is the output value,\nwhich is getting copied around",
    "start": "1918250",
    "end": "1927090"
  },
  {
    "text": "into here. And then a little bit of\nmagic happens here and here to get these to interact\nin the right way.",
    "start": "1927090",
    "end": "1932180"
  },
  {
    "text": "And it's essentially\njust checking cases to see that this computes\nan AND of these two inputs.",
    "start": "1932180",
    "end": "1939330"
  },
  {
    "text": " But a little bit complicated.",
    "start": "1939330",
    "end": "1944642"
  },
  {
    "text": "AUDIENCE: Is coming\nup with these gadgets harder than checking them? ERIK DEMAINE: Good question.",
    "start": "1944642",
    "end": "1950960"
  },
  {
    "text": "It's unclear. Often when you're\ndesigning things, you have a lot more control,\nand it could potentially be easier to design hard\nproblems than to check them.",
    "start": "1950960",
    "end": "1959990"
  },
  {
    "text": "Because we know it's\nNP-complete to check this, in a certain sense. I mean, of course, in this\ncase there's only four cases,",
    "start": "1959990",
    "end": "1967190"
  },
  {
    "text": "so it's not really that hard. But yeah, when you're\ndesigning things you have in mind a certain\nconnectivity structure,",
    "start": "1967190",
    "end": "1973594"
  },
  {
    "text": "and then it's a matter\nof getting things to resolve in the grid and not\nhave things overlapping and so on, which is a different\nkind of constraint.",
    "start": "1973594",
    "end": "1982450"
  },
  {
    "text": "I might say it's a more fun one. I would call designing these\npuzzles meta puzzles, and to me that's more fun.",
    "start": "1982450",
    "end": "1988020"
  },
  {
    "text": "But of course, I'm a\ntheoretical computer scientist. That's why we're here.",
    "start": "1988020",
    "end": "1993909"
  },
  {
    "text": "Anyway, fun to\nanswer that question. ",
    "start": "1993910",
    "end": "1999720"
  },
  {
    "text": "So here's a fun thing. I hadn't seen this paper\nbefore by Goldschlager in 1977.",
    "start": "1999720",
    "end": "2006355"
  },
  {
    "text": "They were worried about\np completeness, which we haven't talked about yet. But in particular, they\ngave these two pictures.",
    "start": "2006355",
    "end": "2012200"
  },
  {
    "text": "This one we've seen. If you have an x OR gadget,\nyou can construct a crossover.",
    "start": "2012200",
    "end": "2019480"
  },
  {
    "text": "Now, we don't have an\nXOR gadget in this case, but we have an AND\ngadget or a NAND gadget.",
    "start": "2019480",
    "end": "2024920"
  },
  {
    "text": "This is the funny way of\nwriting NAND, NOT of an AND. And if you have NAND gadgets\nyou can construct an XOR.",
    "start": "2024920",
    "end": "2032240"
  },
  {
    "text": "So if you plug this picture\ninto each of these three pictures you get a kind of\nugly thing, but it's planar",
    "start": "2032240",
    "end": "2039270"
  },
  {
    "text": "and it implements a crossover. Which means if you have NAND,\nyou get planarity for free.",
    "start": "2039270",
    "end": "2045640"
  },
  {
    "text": "So I'm going to call\nthis planar circuit SAT.",
    "start": "2045640",
    "end": "2052530"
  },
  {
    "start": "2052530",
    "end": "2059870"
  },
  {
    "text": "It's like catch, this, I\nthink is also a made-up term. I haven't seen it\nin the literature. Because it's a little bit\nvague what it could mean.",
    "start": "2059870",
    "end": "2067510"
  },
  {
    "text": "But let's say we're\ngiven a planar directed",
    "start": "2067510",
    "end": "2074230"
  },
  {
    "text": "acyclic circuit. ",
    "start": "2074230",
    "end": "2080719"
  },
  {
    "text": "And let's say all\ngates are NAND.",
    "start": "2080719",
    "end": "2087885"
  },
  {
    "text": " Then this is NP-complete. ",
    "start": "2087885",
    "end": "2098604"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE].  ERIK DEMAINE: Ah, right. Sorry.",
    "start": "2098604",
    "end": "2104090"
  },
  {
    "text": "And at the end you\nwant it to be true. Thank you. So you have let's say the\nsources are unconstrained.",
    "start": "2104090",
    "end": "2111293"
  },
  {
    "text": " So those represent\nthe variables.",
    "start": "2111293",
    "end": "2118410"
  },
  {
    "text": "And there's a sync,\nwhich is set to one. And we could say\nthere's just one sync.",
    "start": "2118410",
    "end": "2124710"
  },
  {
    "text": "So you have some\nstarting points. Those are completely free\nto choose true or false.",
    "start": "2124710",
    "end": "2131500"
  },
  {
    "text": "And then at the end\nyou have a sync. I guess it just has one thing\nprobably coming into it.",
    "start": "2131500",
    "end": "2137580"
  },
  {
    "text": "Wouldn't make sense otherwise. And we set this to be one. So that's just like\nsatisfying formula,",
    "start": "2137580",
    "end": "2143330"
  },
  {
    "text": "but drawn as a Boolean\ncircuit, and it's planar.",
    "start": "2143330",
    "end": "2148530"
  },
  {
    "text": "Now, we're going to see\nmore versions of planar SAT next class, but this one\nas far as I know is newish.",
    "start": "2148530",
    "end": "2155050"
  },
  {
    "text": "It's essentially\nargued in this paper. Say, hey look--\nthis paper was not talking about NP-completeness,\nbut the K paper says,",
    "start": "2155050",
    "end": "2164450"
  },
  {
    "text": "hey, we've got these\ntwo things, so as long as you have NAND you've\ngot crossovers for free.",
    "start": "2164450",
    "end": "2169559"
  },
  {
    "text": "So you don't have to worry about\nplanarity, which is good news. So no crossover gadget needed.",
    "start": "2169560",
    "end": "2175680"
  },
  {
    "text": "There is one. It's actually not that\nhard in Mine Sweeper, but it's nicer when you\ndon't have to do it.",
    "start": "2175680",
    "end": "2181740"
  },
  {
    "text": "Questions? I guess I did talk\nabout termination. ",
    "start": "2181740",
    "end": "2187960"
  },
  {
    "text": "We do need a true\nterminator here because we're doing circuit SAT. That's really easy.",
    "start": "2187960",
    "end": "2193490"
  },
  {
    "text": "In fact, this would do it. Just ending with all\nones means, in fact, if there's zeroes out here, that\nmeans this has to be a bomb.",
    "start": "2193490",
    "end": "2201790"
  },
  {
    "text": "And so that sets it to one. So there's a true terminator\nfor Mine Sweeper consistency.",
    "start": "2201790",
    "end": "2208070"
  },
  {
    "text": "But as we've seen\nin various ways, Mine Sweeper consistency\nis probably not",
    "start": "2208070",
    "end": "2213190"
  },
  {
    "text": "what we want to\nactually play the game.",
    "start": "2213190",
    "end": "2218490"
  },
  {
    "text": "The algorithm I\ngave you is one way to think about playing the\ngame where you add a thing",
    "start": "2218490",
    "end": "2224250"
  },
  {
    "text": "and you check for consistency. That's also a little\nbit weird where you're assuming that\nthe input is consistent,",
    "start": "2224250",
    "end": "2231156"
  },
  {
    "text": "and then you add\none bomb and you want to see whether that\nmakes it inconsistent. That's a special case\nof this instance.",
    "start": "2231156",
    "end": "2236340"
  },
  {
    "text": "Maybe not as hard as\nthe general picture. Everything was consistent\nup until the moment you added one new bomb information.",
    "start": "2236340",
    "end": "2243140"
  },
  {
    "text": "These pictures don't\nlook exactly like that. Another thing I want to\npoint out in these gadgets",
    "start": "2243140",
    "end": "2251200"
  },
  {
    "text": "is let's say the number of x\nand x bars is not the same.",
    "start": "2251200",
    "end": "2257210"
  },
  {
    "text": "Maybe this negation, this\nequal numbers of x and x bars over here, but\nthere's one extra x bar.",
    "start": "2257210",
    "end": "2263770"
  },
  {
    "text": "What that means is\nlocal to this picture, the number of bombs\nthat get used varies.",
    "start": "2263770",
    "end": "2271810"
  },
  {
    "text": "There's either one, two, three,\nfour bombs if you choose x, or there's five bombs\nif you choose x bar.",
    "start": "2271810",
    "end": "2277960"
  },
  {
    "text": "And one of the minor\nthings in Mine Sweeper is that the total number of\nbombs is given to you as input.",
    "start": "2277960",
    "end": "2284830"
  },
  {
    "text": "So that actually also\nkind of messes things up. Anyway, luckily, this\nproblem was solved.",
    "start": "2284830",
    "end": "2290970"
  },
  {
    "text": "It was actually independently\nsolved by multiple people. It's claimed in Bob Hearn's\nPhD thesis, though never",
    "start": "2290970",
    "end": "2299619"
  },
  {
    "text": "got fully written up. And then it got published, so no\nreason to write it up anymore.",
    "start": "2299620",
    "end": "2305230"
  },
  {
    "text": "So here is their proof. Both this proof and\nthe previous one appeared in Mathematical\nIntelligencer.",
    "start": "2305230",
    "end": "2312650"
  },
  {
    "text": "So they draw the gadgets\nslightly differently, and so far everything\nlooks about the same. They're not going to use a phase\nchanger in this form at least.",
    "start": "2312650",
    "end": "2321370"
  },
  {
    "text": "So they're going to draw\nthe wire gadget like this, and the idea is that\nyou would copy it, you get things mod\nthree, that will turn out",
    "start": "2321370",
    "end": "2328130"
  },
  {
    "text": "to be OK for them. But what they really want\nis that in each diagram there are equal number\nof x and x bars.",
    "start": "2328130",
    "end": "2334210"
  },
  {
    "text": "Why? And also what are they proving? So this is what they call the\nMine Sweeper inference problem.",
    "start": "2334210",
    "end": "2342799"
  },
  {
    "text": " But it's also what you might\njust call Mine Sweeper.",
    "start": "2342800",
    "end": "2351090"
  },
  {
    "text": "I want to solve this puzzle. What does it mean\nto solve the puzzle? Well, it means you're given\nthis partial information.",
    "start": "2351090",
    "end": "2356728"
  },
  {
    "text": "You want to know am I done? Did I solve it? Can I solve it? Can I figure out where\nall the bombs are?",
    "start": "2356728",
    "end": "2362330"
  },
  {
    "text": "This is like there\nbeing a unique solution. So I want to conclude\nthat, OK, I can figure out",
    "start": "2362330",
    "end": "2370410"
  },
  {
    "text": "where all the bombs are. So can you figure\neverything out?",
    "start": "2370410",
    "end": "2377400"
  },
  {
    "start": "2377400",
    "end": "2387839"
  },
  {
    "text": "So again, the reduction is from\nsomething like circuit SAT.",
    "start": "2387840",
    "end": "2393230"
  },
  {
    "text": "It's going to be a reduction\nfrom circuit unSAT. ",
    "start": "2393230",
    "end": "2404820"
  },
  {
    "text": "Unsatisfiability. So satisfiability you\nwant to set the variables",
    "start": "2404820",
    "end": "2410569"
  },
  {
    "text": "so that the outcome is true. You might say, well, I could\ntry to set the variables",
    "start": "2410570",
    "end": "2415730"
  },
  {
    "text": "so the outcome is false. That's the same problem. That won't change. Just put a NOT at the end.",
    "start": "2415730",
    "end": "2421910"
  },
  {
    "text": "Unsatisfiability means that you\ncannot satisfy this formula. There's no way to set\nthe variables to make",
    "start": "2421910",
    "end": "2429020"
  },
  {
    "text": "the output true. There does not exist\nchoices for the x ANDs, such",
    "start": "2429020",
    "end": "2439410"
  },
  {
    "text": "that some f of xi's equals 1.",
    "start": "2439410",
    "end": "2446420"
  },
  {
    "text": "If we do some-- who knows,\nthis is called De Morgan? Probably not. ",
    "start": "2446420",
    "end": "2466650"
  },
  {
    "text": "Another fun fact is\nNOT there exists, NOT is the same thing as\nfor all or however you",
    "start": "2466650",
    "end": "2474280"
  },
  {
    "text": "want to write it. So if we put this\nnegation over to here, this turns into\nuniversal quantifiers.",
    "start": "2474280",
    "end": "2481730"
  },
  {
    "text": "These are extensial\nquantifiers to for alls. So this is quite a\ndifferent problem.",
    "start": "2481730",
    "end": "2487000"
  },
  {
    "text": "3SAT is about do there exist\nsettings for these n variables such that this comes\nout to be true.",
    "start": "2487000",
    "end": "2493359"
  },
  {
    "text": "Now we're saying no matter\nhow you set the variables, this comes out to be\ntrue or false I guess.",
    "start": "2493360",
    "end": "2500019"
  },
  {
    "text": "But again, that doesn't matter. You can just put the negation\ninside f if you wanted to. So the key difference\nhere is we switched",
    "start": "2500019",
    "end": "2505770"
  },
  {
    "text": "the quantify direction. This is such a big difference\nthat this problem is not NP-complete, unless\nNP equals coNP.",
    "start": "2505770",
    "end": "2512829"
  },
  {
    "text": "This problem is coNP complete. ",
    "start": "2512830",
    "end": "2523869"
  },
  {
    "text": "Recall coNP are the problems\nwhere you can always given",
    "start": "2523870",
    "end": "2529830"
  },
  {
    "text": "no certificate. Whenever the answer is no,\nI can give you a short proof that the answer is no. How would I tell you that the\nanswer to this question is no?",
    "start": "2529830",
    "end": "2538060"
  },
  {
    "text": "I would give you a\nsatisfying assignment. I'd give you xa to xn,\nwhere f ends up being 1,",
    "start": "2538060",
    "end": "2543599"
  },
  {
    "text": "then you know this is not true. It's very hard to\nprove yes here. I mean you might have to check\nall possible exponentially many",
    "start": "2543600",
    "end": "2550960"
  },
  {
    "text": "assignments to the xi's. Of course, we don't know\nwhether that's possible. That's coNP completeness.",
    "start": "2550960",
    "end": "2556650"
  },
  {
    "text": "It's the same NP versus\np problem, but negated.",
    "start": "2556650",
    "end": "2563119"
  },
  {
    "text": "Cool. So claim is Mine Sweeper\ninference is coNP-complete. And in general, the\nproper statement",
    "start": "2563120",
    "end": "2569620"
  },
  {
    "text": "is Mine Sweeper\nis coNP-complete. Mine Sweeper consistency\nis NP-complete,",
    "start": "2569620",
    "end": "2576530"
  },
  {
    "text": "but Mine Sweeper the game,\nI want to solve the game, is coNP-complete. Cool?",
    "start": "2576530",
    "end": "2581540"
  },
  {
    "text": "This will be one of the few\ncases where coNP arises for us. ",
    "start": "2581540",
    "end": "2587941"
  },
  {
    "text": "Yeah. AUDIENCE: Where does\ncoNP lie on this? We don't know? ERIK DEMAINE: In my\none-dimensional diagram,",
    "start": "2587941",
    "end": "2593660"
  },
  {
    "text": "you can think of NP and coNP\nlying in the same space, but maybe like in a\nparallel universe. ",
    "start": "2593660",
    "end": "2601210"
  },
  {
    "text": "I think. People always draw\nthis picture, NP, coNP.",
    "start": "2601210",
    "end": "2610340"
  },
  {
    "text": "P is here, and this\nis NP intersect coNP. And some people think that's\nthe same thing as P. Who knows.",
    "start": "2610340",
    "end": "2618140"
  },
  {
    "text": "So there are parallel universes,\none about positive problems, one about negative problems.",
    "start": "2618140",
    "end": "2625240"
  },
  {
    "text": "But in some sense,\nequal complexity. In this class we\nthink about reductions",
    "start": "2625240",
    "end": "2630880"
  },
  {
    "text": "as being one call reductions. You take your\nproblem, you map it so that the output when\nyou solve this new problem",
    "start": "2630880",
    "end": "2637080"
  },
  {
    "text": "has exactly the same solution\nto the original problem. If you instead think about\nmulti-call reductions",
    "start": "2637080",
    "end": "2643079"
  },
  {
    "text": "where you can make calls to an\noracle that solved the target problem multiple times and\nthen do stuff with it--",
    "start": "2643080",
    "end": "2648450"
  },
  {
    "text": "you could, for example,\ncall that thing, then negate the answer\nand return that. In that universe NP and\ncoNP become the same thing.",
    "start": "2648450",
    "end": "2657279"
  },
  {
    "text": "Or NP-completeness\nand coNP-completeness, which are about reductions,\nbecome the same thing. So that's the only\nthing holding them apart",
    "start": "2657280",
    "end": "2663900"
  },
  {
    "text": "is that we're not allowed\nto negate the answer. So I view them as\nalmost the same, but obviously they're different\nand you have to distinguish one",
    "start": "2663900",
    "end": "2670960"
  },
  {
    "text": "from the other. But in terms of difficulty\nthey're about the same. The difference between NP\nand coNP versus p space",
    "start": "2670960",
    "end": "2676010"
  },
  {
    "text": "is totally different, or x\ntime, or the other things in my one-dimensional diagram.",
    "start": "2676010",
    "end": "2681470"
  },
  {
    "text": "Yeah? AUDIENCE: Would p equals\nNP imply p equals coNP? ERIK DEMAINE: If p\nequals NP, then I'm",
    "start": "2681470",
    "end": "2686820"
  },
  {
    "text": "pretty sure NP equals coNP,\nbecause in polynomial time",
    "start": "2686820",
    "end": "2694590"
  },
  {
    "text": "you can do-- yeah. p is\nclosed under a complement, because you can solve\nthe problem then negate.",
    "start": "2694590",
    "end": "2700090"
  },
  {
    "text": "So I should say NP and\ncoNP are different. But NP-complete and\ncoNP-complete are very close,",
    "start": "2700090",
    "end": "2705650"
  },
  {
    "text": "let's say. There's sort of dual-- for\nevery problem over here, the corresponding problem\nover here is like the hardest,",
    "start": "2705650",
    "end": "2712789"
  },
  {
    "text": "and they're sort of\nsymmetric or something. ",
    "start": "2712790",
    "end": "2718470"
  },
  {
    "text": "All right. Phew. Back to Mine Sweeper. So here is the\ncoNP-completeness.",
    "start": "2718470",
    "end": "2726130"
  },
  {
    "text": "We have wires just\nlike before, but I'm drawing them differently. Because part of the\nissue here is we",
    "start": "2726130",
    "end": "2733190"
  },
  {
    "text": "are told how many\nbombs there are, and we don't want that\ninformation to help us. So we want every diagram\nto have an equal number",
    "start": "2733190",
    "end": "2740470"
  },
  {
    "text": "of, say, x and x bars. So if we set it with\nx or set it with x bar, we use exactly the\nsame number of bombs,",
    "start": "2740470",
    "end": "2746790"
  },
  {
    "text": "Which means knowing what\ngadgets are glued together we can just add up how\nmany bombs each one has.",
    "start": "2746790",
    "end": "2752410"
  },
  {
    "text": "That will be the total number\nof bombs given to the puzzle. And that shouldn't give\nyou any extra information",
    "start": "2752410",
    "end": "2757920"
  },
  {
    "text": "because all of these\npictures will have equal number of x's and x bars. So here we have wire,\nterminator, and turn.",
    "start": "2757920",
    "end": "2766830"
  },
  {
    "text": "Pretty similar to\nbefore, but now checking that everything has equal\nnumber of x's and x bars.",
    "start": "2766830",
    "end": "2772090"
  },
  {
    "text": "I think this turn,\nfor example-- no, that one happens to be balanced.",
    "start": "2772090",
    "end": "2777330"
  },
  {
    "text": "Some of these gadgets\nare not balanced. This one almost certainly. OK.",
    "start": "2777330",
    "end": "2783360"
  },
  {
    "text": "So in this case, they construct\na NOT gate and an OR gate.",
    "start": "2783360",
    "end": "2790150"
  },
  {
    "text": "And then they also\nbuild a shifter. This is a different\nkind of shifter. ",
    "start": "2790150",
    "end": "2797540"
  },
  {
    "text": "It still has width and multiple\nof 3, but we're taking the wire and shifting it\nperpendicular by one unit.",
    "start": "2797540",
    "end": "2803990"
  },
  {
    "text": "With turns you can simulate\nthe other type of shifter, but this turns out to be\nthe only one that they need.",
    "start": "2803990",
    "end": "2809440"
  },
  {
    "text": "So let's talk about\nthat first, let's say. So if x is set by this two and\nthis bomb, this one is not set.",
    "start": "2809440",
    "end": "2820270"
  },
  {
    "text": "This four already\nhas three of them, so it effectively becomes a one. So then these two have to\nbe opposites from each.",
    "start": "2820270",
    "end": "2825890"
  },
  {
    "text": "This is sort of where\nthe shift happens. And then because we have to\ndeal with these bombs that",
    "start": "2825890",
    "end": "2831725"
  },
  {
    "text": "are left over. Let's put some more in. And then this is five, so\nthere's already four here,",
    "start": "2831725",
    "end": "2837550"
  },
  {
    "text": "and so that forces\nan alternation there. So same idea, but\nwith some bombs added in to fill the\nspace, let's say.",
    "start": "2837550",
    "end": "2846562"
  },
  {
    "text": "Got to do a one here, and\na one here, a one there.",
    "start": "2846562",
    "end": "2851620"
  },
  {
    "text": "This is a problem. I can't put a one here. That would force this\nguy to be present. So that's probably why\nthat bomb is there,",
    "start": "2851620",
    "end": "2858245"
  },
  {
    "text": "because we don't want to\nhave to say how many bombs are adjacent to this corner. With regular wires you\ndon't have corners.",
    "start": "2858245",
    "end": "2863790"
  },
  {
    "text": "Good. But when you're doing a shift\nyou have sort of corner. Same thing with the turn\ngadget that we already saw.",
    "start": "2863790",
    "end": "2870640"
  },
  {
    "text": "OK. I think NOT is also\npretty intelligible, but it's fairly complicated.",
    "start": "2870640",
    "end": "2875910"
  },
  {
    "text": "It essentially involves making\nanother copy of the signal just so we get an equal\nnumber of x's and x bars.",
    "start": "2875910",
    "end": "2883590"
  },
  {
    "text": "Because we saw in the previous\nreduction with a NOT gate, we had this one isolated guy.",
    "start": "2883590",
    "end": "2888720"
  },
  {
    "text": "That would be like this one. And so if you just have\nthis picture, yeah, it would negate things.",
    "start": "2888720",
    "end": "2895089"
  },
  {
    "text": "And again, this is\ndesigned to be mod three, so there's three, six-- that's\nhard to do-- nine, 12, 15.",
    "start": "2895090",
    "end": "2903929"
  },
  {
    "text": "So things are nicely aligned\non the mod three boundary, but they end up with\nthese three dudes.",
    "start": "2903929",
    "end": "2909160"
  },
  {
    "text": "They end up flipping the signal. Here's x, here's also x,\nwhich is like the reverse because it's on the left.",
    "start": "2909160",
    "end": "2914220"
  },
  {
    "text": " But this would have an unequal\nnumber of x's and x bars.",
    "start": "2914220",
    "end": "2919310"
  },
  {
    "text": "There's too many\nx's in this row. So we end up splitting off a\nnegated copy here, basically,",
    "start": "2919310",
    "end": "2925510"
  },
  {
    "text": "to balance things out. And now if you count\nall the x's and x bars they should be equal.",
    "start": "2925510",
    "end": "2930600"
  },
  {
    "text": "Cool. And then they build an OR gate. So it's again, looks\nfairly complicated.",
    "start": "2930600",
    "end": "2938480"
  },
  {
    "text": "Probably pretty\nsimple in essence, but I don't feel like\nchecking all those cases. What is annoying is that this\nthing is not mod three aligned.",
    "start": "2938480",
    "end": "2947825"
  },
  {
    "text": "Mod three aligned\nwould be here or here, with the output always\nin the middle finger.",
    "start": "2947825",
    "end": "2954030"
  },
  {
    "text": "But instead it's here. And so they used the\nshift gadget over here to offset that by\none, and similarly",
    "start": "2954030",
    "end": "2959780"
  },
  {
    "text": "in all three pictures. And then you get an OR\ngate with proper alignment.",
    "start": "2959780",
    "end": "2964970"
  },
  {
    "text": "Everything works\nout in mod three. OK. Cool.",
    "start": "2964970",
    "end": "2971630"
  },
  {
    "text": "So we have NOT and we have\nOR, therefore we have NOR, and therefore we can build\nany logical gate we want.",
    "start": "2971630",
    "end": "2980980"
  },
  {
    "text": "An so we have turns, we\nhave shifts that we need, we have NOT, we have--\ndid we do split?",
    "start": "2980980",
    "end": "2988035"
  },
  {
    "text": "I think we did split\non the previous-- nope, we didn't do split. OK, then let's do split.",
    "start": "2988035",
    "end": "2994810"
  },
  {
    "text": "So we need to copy our wires. This is a more complicated\nversion of the previous split.",
    "start": "2994810",
    "end": "3001990"
  },
  {
    "text": "Again, with an extra\nthing thrown in. Like this is not needed. You don't have to put this here,\nbut it adds an extra x bar.",
    "start": "3001990",
    "end": "3009790"
  },
  {
    "text": "So there's actually\ntwo of those things. And so together that offsets\nall the extra x copies",
    "start": "3009790",
    "end": "3016150"
  },
  {
    "text": "that are on the inside. And so that forces, again,\nequal number of bombs, whether it's x or x bar chosen.",
    "start": "3016150",
    "end": "3023700"
  },
  {
    "text": "So we can just\ncount how many bombs are needed in this picture.",
    "start": "3023700",
    "end": "3029410"
  },
  {
    "text": "Cool. This is, again, a\nsymmetric version. So if you're thinking of,\nlet's say, this as the input,",
    "start": "3029410",
    "end": "3036850"
  },
  {
    "text": "and these two as the output,\nthan negation happened. So if you don't want\nnegation to happen,",
    "start": "3036850",
    "end": "3042800"
  },
  {
    "text": "just put a big NOT gate there.  And in this case they\ngive a crossover gadget.",
    "start": "3042800",
    "end": "3049992"
  },
  {
    "text": "In particular\nbecause it's not that hard to give a crossover gadget,\nbut it's also not necessary.",
    "start": "3049992",
    "end": "3056329"
  },
  {
    "text": "So you could do\ncrossover explicitly, but in fact, I just looked\non Wikipedia earlier today.",
    "start": "3056330",
    "end": "3066170"
  },
  {
    "text": "We already know that planar\ncircuit SAT with NAND gates is hard. So can we build NAND?",
    "start": "3066170",
    "end": "3072294"
  },
  {
    "text": "And so I looked up in Wikipedia,\nhow you build NAND out of NORs. And the answer is this. And that's planar.",
    "start": "3072294",
    "end": "3077790"
  },
  {
    "text": "So we're done. You take this picture, you plug\nit into each of these guys. And you take that\npicture and you plug it",
    "start": "3077790",
    "end": "3084520"
  },
  {
    "text": "into each of these guys. Make sure to preserve\nplanarity all the way through. It does.",
    "start": "3084520",
    "end": "3089869"
  },
  {
    "text": "And then from-- I should know\nthat's you construct NAND out of NOR. It's exactly from De Morgan law,\nbecause this is just negation.",
    "start": "3089870",
    "end": "3100820"
  },
  {
    "text": "So cool thing is all\nthese constructions preserve planarity\nwhich means we can add to our definition\nof planar circuit SAT.",
    "start": "3100820",
    "end": "3106740"
  },
  {
    "text": "All gates are NAND\nor all gates are NOR.",
    "start": "3106740",
    "end": "3113369"
  },
  {
    "text": " This is nice because when you're\nsolving next p set or whatever,",
    "start": "3113370",
    "end": "3121619"
  },
  {
    "text": "you can just take\nplanar circuit SAT, if you happen to construct\na NAND gate you're done.",
    "start": "3121620",
    "end": "3127980"
  },
  {
    "text": "If you happen to construct\nan OR gate you're done. No crossover needed. You'll still need turns,\nand maybe a shift,",
    "start": "3127980",
    "end": "3134950"
  },
  {
    "text": "and maybe a terminator. You won't need NOT if\nyou build NAND or NOR.",
    "start": "3134950",
    "end": "3140990"
  },
  {
    "text": "You'll need a split, but you\ndon't need a crossover anymore. This is cool. As far as I know a new result,\nbut I mean obviously implicit",
    "start": "3140990",
    "end": "3148240"
  },
  {
    "text": "in all of these things. Yeah. AUDIENCE: Do you know if there's\nany sub-problem, I guess,",
    "start": "3148240",
    "end": "3154900"
  },
  {
    "text": "is that where you don't\nhave universal gates and you can't be planar\nand get it so hard?",
    "start": "3154900",
    "end": "3163059"
  },
  {
    "text": "So maybe you can-- ERIK DEMAINE: Oh, interesting. AUDIENCE: You can\nsplit wires and you have a variable that has the\nnegation of it coming out,",
    "start": "3163060",
    "end": "3170542"
  },
  {
    "text": "but that's all you can do. No other NOT gates. ",
    "start": "3170542",
    "end": "3176930"
  },
  {
    "text": "ERIK DEMAINE: My guess is\nthat all such problems are polynomially solvable,\nbut maybe that's something we could think about.",
    "start": "3176930",
    "end": "3181965"
  },
  {
    "text": " Certainly plausible\nthat you don't need to be able to construct\nall Boolean formulas in order",
    "start": "3181965",
    "end": "3188710"
  },
  {
    "text": "to be hard. But my vague sense/experience\nplaying around",
    "start": "3188710",
    "end": "3194380"
  },
  {
    "text": "with weird other\ngates, most of them are all equivalent to\nsplits if they're not universal-- something\nlike a split.",
    "start": "3194380",
    "end": "3201990"
  },
  {
    "text": "Maybe with some like\nfive operand operator, you could do something cool. But usually they degenerate\nto other split-like things",
    "start": "3201990",
    "end": "3210490"
  },
  {
    "text": "or clause-like things. But if you don't have both, you\ndon't get enough to be hard.",
    "start": "3210490",
    "end": "3216880"
  },
  {
    "text": "We should prove a\ntheorem like that, but I would guess that you\nneed something like this.",
    "start": "3216880",
    "end": "3222529"
  },
  {
    "text": "Now these are not the\nonly universal gate sets. I think in a moment I will\nhave a-- if you are curious",
    "start": "3222530",
    "end": "3230170"
  },
  {
    "text": "about more of what\nuniversal gate sets are, these are usually\ncalled functionally complete or functional\ncompleteness.",
    "start": "3230170",
    "end": "3236266"
  },
  {
    "text": "If you look at\nthat on Wikipedia, this is an excerpt\nfrom Wikipedia, you see NAND and NOR are\nthe only, among arity two",
    "start": "3236266",
    "end": "3243140"
  },
  {
    "text": "operators, so you have\ntwo inputs, one output. NAND and NOR are\nthe only things that by themselves are universal.",
    "start": "3243140",
    "end": "3249630"
  },
  {
    "text": "But once you allow two different\ngates you can do other things. So these are\nparticularly interesting.",
    "start": "3249630",
    "end": "3255740"
  },
  {
    "text": "This is false I think. It's called [INAUDIBLE], and\nthis is called top, it's true.",
    "start": "3255740",
    "end": "3263310"
  },
  {
    "text": "And so these are slightly\nunusual ways for me to think about writing them. Here we have, of\ncourse, AND and NOT.",
    "start": "3263310",
    "end": "3270960"
  },
  {
    "text": "But this is right\nimplication, which is like not the left\nthing or the right thing.",
    "start": "3270960",
    "end": "3277230"
  },
  {
    "text": "We talked about\nthat in the past. That by itself is not\nenough, because you can just follow implication chains. But if you also have\nfalse, that is universal.",
    "start": "3277230",
    "end": "3285876"
  },
  {
    "text": "So that's kind of funny. And this is XOR I think.",
    "start": "3285876",
    "end": "3292690"
  },
  {
    "text": "XOR is the same as saying that\nthe two things are different. And this is XNOR.",
    "start": "3292690",
    "end": "3298462"
  },
  {
    "text": "So those by themselves\nare not universal, but if you have some other\nkind of one-way implication, then that gives you\nany logical formulas.",
    "start": "3298462",
    "end": "3305890"
  },
  {
    "text": "Now, whether these in the planar\nversion are hard, I don't know. But I know that Ds in the\nplanar version are hard.",
    "start": "3305890",
    "end": "3313370"
  },
  {
    "text": "OK, back to Mine Sweeper. They drew a picture of how\neverything fits together, so it's maybe nice to\nhave the big picture.",
    "start": "3313370",
    "end": "3320141"
  },
  {
    "text": "But let's in particular\nthink about what the decision question is and make sure--\nI mean I claim this is coNP",
    "start": "3320142",
    "end": "3326005"
  },
  {
    "text": "and then we're doing unSATs, but\nwe should actually check that. At this point we've just\nsimulated a circuit. We haven't thought about what\nwe're trying to solve overall.",
    "start": "3326005",
    "end": "3333490"
  },
  {
    "text": "Now, we want to know whether\nwe can derive everything. So we compute our formula\nand then the output is here.",
    "start": "3333490",
    "end": "3341712"
  },
  {
    "text": "And at this point\nthere's just a terminal there saying I don't\nknow what it is. Different from the\nprevious proof.",
    "start": "3341712",
    "end": "3347805"
  },
  {
    "text": "The previous proof said that\nshould be one at the end, and then you have to figure\nout how to fill in the things.",
    "start": "3347805",
    "end": "3353460"
  },
  {
    "text": "Now we're saying, I\ndon't know what's there. Can you figure out what's there?",
    "start": "3353460",
    "end": "3359200"
  },
  {
    "text": "And if it's the case\nthat no matter how you set the variables\nyou always get false,",
    "start": "3359200",
    "end": "3366280"
  },
  {
    "text": "then you know what\nthis wire looks like. You know that it's false. And in fact, you can\nfigure out everything.",
    "start": "3366280",
    "end": "3372260"
  },
  {
    "text": "If you know what\nall the XI's are you can just run\nthrough the circuit. So you can figure out\nthe entire diagram.",
    "start": "3372260",
    "end": "3379200"
  },
  {
    "text": "But in general, just\nasking the question, can I figure out this square? Is there a bomb or not?",
    "start": "3379200",
    "end": "3384860"
  },
  {
    "text": "In order for there\nnot to be a bomb, you would have to\nsolve this problem.",
    "start": "3384860",
    "end": "3390800"
  },
  {
    "text": "You need to determine\nthat no matter how you set the things\nyou end up with a zero.",
    "start": "3390800",
    "end": "3396020"
  },
  {
    "text": "Or the adjacent position\nit would be the opposite. So conversely, what I\nreally care about-- that",
    "start": "3396020",
    "end": "3402010"
  },
  {
    "text": "was the wrong direction. I'm given a circuit\nunSAT instance. I want to turn it into\na Mine Sweeper instance.",
    "start": "3402010",
    "end": "3408235"
  },
  {
    "text": "So I do that, and then the\nquestion is-- get this right--",
    "start": "3408235",
    "end": "3415410"
  },
  {
    "text": "can you derive whether there\nis a bomb in this square? Can you determine that there\nmust be a bomb in this square,",
    "start": "3415410",
    "end": "3423270"
  },
  {
    "text": "for example? That would be a slightly\ncleaner version. And that will be true, if and\nonly if no matter what you do,",
    "start": "3423270",
    "end": "3432089"
  },
  {
    "text": "there's a bomb in that square. Which is like saying\nno matter what you do, this formula comes out to zero.",
    "start": "3432090",
    "end": "3438210"
  },
  {
    "text": "So any kind of inference\nquestion like that is going to require you\nto solve this problem,",
    "start": "3438210",
    "end": "3445550"
  },
  {
    "text": "or rather, this\nproblem can be reduced to any inference\nproblem like that.",
    "start": "3445550",
    "end": "3450819"
  },
  {
    "text": "It's easy to get backwards here,\nso hope I got it all right. And that's coNP completeness.",
    "start": "3450820",
    "end": "3457349"
  },
  {
    "text": "Reductions look\nthe same for coNP. We just start with\ndifferent problems. ",
    "start": "3457350",
    "end": "3465320"
  },
  {
    "text": "Cool. So that was Mine Sweeper\nand functional completeness.",
    "start": "3465320",
    "end": "3472380"
  },
  {
    "text": "I have one more-- well,\nsort of two more proofs. Only one that I will talk\nabout in detail for Candy Crush",
    "start": "3472380",
    "end": "3479829"
  },
  {
    "text": "and soon enough, Bejeweled.",
    "start": "3479830",
    "end": "3484850"
  },
  {
    "text": "But let's think about Candy\nCrush is the modern version. I'm guessing you've all\nplayed, but in case not,",
    "start": "3484850",
    "end": "3491510"
  },
  {
    "text": "please don't play. It's very addictive. But on the slides\nwe're allowed to.",
    "start": "3491510",
    "end": "3496850"
  },
  {
    "text": "So you have a grid of\ncolors, colored candies.",
    "start": "3496850",
    "end": "3502540"
  },
  {
    "text": "And a move in this game\nis to take two candies and switch their order.",
    "start": "3502540",
    "end": "3509190"
  },
  {
    "text": "I guess in this picture\nI did these two. If you switch these two\nyou get this picture.",
    "start": "3509190",
    "end": "3514380"
  },
  {
    "text": "And the mechanics of the\ngame, the physics or whatever, is whenever you have\nthree or more candies",
    "start": "3514380",
    "end": "3520950"
  },
  {
    "text": "of the same color in a row\nor column, or in a row, then they disappear.",
    "start": "3520950",
    "end": "3527040"
  },
  {
    "text": "And anything above them falls. So like this red\ncandy ends up there. In this case, there were\nno more candies above.",
    "start": "3527040",
    "end": "3532640"
  },
  {
    "text": "In the real game usually there's\nalways more candies above. But if we're in a small game\nthis won't-- if we're in a big",
    "start": "3532640",
    "end": "3539210"
  },
  {
    "text": "game and looking\nat a small window, we know everything\nabout what will fall. AUDIENCE: Do you need to\nmake them fall or do they",
    "start": "3539210",
    "end": "3546356"
  },
  {
    "text": "automatically fall\nonce you get-- ERIK DEMAINE: They\nautomatically fall. Yeah, so they are\nforced to fall.",
    "start": "3546356",
    "end": "3551700"
  },
  {
    "text": "It's all I get to\ndo is make this move and then stuff happens. So I make this move\nand then anything",
    "start": "3551700",
    "end": "3557050"
  },
  {
    "text": "that-- any three in a\nrows or more disappear. And then if that makes\nmore three in a rows",
    "start": "3557050",
    "end": "3562120"
  },
  {
    "text": "they will disappear and so on. And my hands are\noff at that point. Once the chain\nreactions are finished--",
    "start": "3562120",
    "end": "3568640"
  },
  {
    "text": "not all games work this\nway, but Candy Crush happens to work this way. Once these things are finished,\nthen I can do another exchange.",
    "start": "3568640",
    "end": "3574750"
  },
  {
    "text": "And when I do an exchange\nI must make three in a row. I can't just swap\nthese two guys.",
    "start": "3574750",
    "end": "3580895"
  },
  {
    "text": "It's not interesting. AUDIENCE: What if it's like a\nT pattern or like non-linear? ",
    "start": "3580895",
    "end": "3587342"
  },
  {
    "text": "ERIK DEMAINE: Yeah, OK. In this picture\nwe'll never have Ts. It will always be three in a\nrow, and never a four in a row.",
    "start": "3587342",
    "end": "3592360"
  },
  {
    "text": "With four in a row, magical\nstriped candies happen and you don't want to know.",
    "start": "3592360",
    "end": "3597980"
  },
  {
    "text": "So potentially you can get up to\nfive in a row with these rows, but in these reductions\nthat won't happen.",
    "start": "3597980",
    "end": "3603859"
  },
  {
    "text": "So we don't care what\nthe rules say there. We're only going to\nget three in a rows. There is a weird\ncatch in this proof.",
    "start": "3603860",
    "end": "3611130"
  },
  {
    "text": "I'm going to mention two proofs\nfrom 2014, so all very recent. I guess the game isn't that old.",
    "start": "3611130",
    "end": "3617810"
  },
  {
    "text": "And in this proof we're going\nto assume if-- in general, there may be multiple three\nin a rows at once.",
    "start": "3617810",
    "end": "3625400"
  },
  {
    "text": "And the proof is going to assume\nthat they are resolved bottom to top, so you do the\nbottom-most one first, things",
    "start": "3625400",
    "end": "3631890"
  },
  {
    "text": "fall, then you do the next one,\nthings fall, do the next one, things fall. That's not how the\nactual game works.",
    "start": "3631890",
    "end": "3638099"
  },
  {
    "text": "In the game, they all\ndisappear simultaneously and then stuff falls.",
    "start": "3638100",
    "end": "3643840"
  },
  {
    "text": "OK, but ignore that\nfor the moment. The next proof will\nchange the model. OK, this is a much easier\none to think about and draw",
    "start": "3643840",
    "end": "3649620"
  },
  {
    "text": "the pictures. So in that model, here's\na variable gadget.",
    "start": "3649620",
    "end": "3655310"
  },
  {
    "text": "The starting point's the\nsame, picture top and bottom. And the idea is\neither you exchange these two to make\nthree, or you exchange",
    "start": "3655310",
    "end": "3662920"
  },
  {
    "text": "these two to make three. And the consequence is either\nthe right column falls by three or the middle column\nfalls by three.",
    "start": "3662920",
    "end": "3669559"
  },
  {
    "text": "And that's all you can\ndo local to this gadget. So that's easy. Things are going to get messier. ",
    "start": "3669560",
    "end": "3677619"
  },
  {
    "text": "OK, so you have this picture,\nvariable gadget for XI. Above it I'm going to make\none of these two gadgets.",
    "start": "3677620",
    "end": "3685360"
  },
  {
    "text": "Actually, both of them,\nbut one at a time. So in fact, it will\nactually look kind of like this, stacked on\ntop of the variable which",
    "start": "3685360",
    "end": "3691380"
  },
  {
    "text": "is down here. So variables down here. Either the center column falls\nor the right column falls.",
    "start": "3691380",
    "end": "3698414"
  },
  {
    "text": "Now, the idea is this is\ngoing to eventually connect to a clause, and this\nvariable-- I should",
    "start": "3698415",
    "end": "3703650"
  },
  {
    "text": "say this is not for\ncircuit SAT, this is from 3SAT-- regular old 3SAT. So that variable\nappears in a clause",
    "start": "3703650",
    "end": "3711252"
  },
  {
    "text": "either in positive\nform or negative form. Positive, use this gadget. Negative, use this gadget. So in the positive case,\nif this falls by three",
    "start": "3711252",
    "end": "3720540"
  },
  {
    "text": "we get this picture, and\nthen these disappear, and so this guy falls one more.",
    "start": "3720540",
    "end": "3726520"
  },
  {
    "text": "And the idea is that's going\nto trigger something off to the right. That will be next slide.",
    "start": "3726520",
    "end": "3732059"
  },
  {
    "text": "That will be the wire gadget. If the center column fell by\nthree, nothing would happen.",
    "start": "3732060",
    "end": "3738029"
  },
  {
    "text": "The purples-- so I\nshould mention how these gadgets are constructed. There's a four color sort\nof checkerboard pattern",
    "start": "3738030",
    "end": "3745890"
  },
  {
    "text": "in odd rows. It's alternating orange,\ngreen, orange, green. In even rows it's alternating\nred, yellow, red, yellow.",
    "start": "3745890",
    "end": "3752539"
  },
  {
    "text": "And then in a few places we're\ngoing to put the purple ones, because purple's best. And all the action is going\nto be in the purple candies.",
    "start": "3752540",
    "end": "3760940"
  },
  {
    "text": "These guys are just out\nthere-- and the real game has six colors. We're only using five of them. So cool.",
    "start": "3760940",
    "end": "3767203"
  },
  {
    "text": "These guys are\njust sort of filler to make sure nothing\nelse happens. But still things fall vertically\nin a nice controlled way.",
    "start": "3767204",
    "end": "3775730"
  },
  {
    "text": "OK, so if these fall\nby three, the purples don't align so nothing happens.",
    "start": "3775730",
    "end": "3782210"
  },
  {
    "text": "In this case, if the\ncenter one falls by three we get alignment, and\nthat falls by one.",
    "start": "3782210",
    "end": "3787660"
  },
  {
    "text": "So great. Also note, these gadgets\nstack somewhat nicely.",
    "start": "3787660",
    "end": "3796430"
  },
  {
    "text": "In that other than this\nthree gap-- in reality, more candies will fill in here.",
    "start": "3796430",
    "end": "3801760"
  },
  {
    "text": "I drew it this way\nso you could see how much the columns actually fall. Remember, this all sort\nof happens in one move.",
    "start": "3801760",
    "end": "3808490"
  },
  {
    "text": "So this falls, these clear,\nthen this will clear, and stuff happens.",
    "start": "3808490",
    "end": "3815240"
  },
  {
    "text": "It's annoying. So, so far everything's\ngood because each of these has fallen by one in addition\nto the original three.",
    "start": "3815240",
    "end": "3824550"
  },
  {
    "text": "But in this case, this\nfollows by an extra one, and I think you need to\nadd an extra candy here.",
    "start": "3824550",
    "end": "3831914"
  },
  {
    "text": "I'm a little unclear in the\ndetails on how to do that. It's mentioned in the\npaper, but without details.",
    "start": "3831915",
    "end": "3838540"
  },
  {
    "text": "Anyway, in the end we\nwill have a bunch of these stacked on top of each other. Each time the variable\noccurs in various clauses",
    "start": "3838540",
    "end": "3845085"
  },
  {
    "text": "we're going to\nhave some positive and some negative ones. And we want the same variable\ntrigger-- ah, that's right.",
    "start": "3845085",
    "end": "3851190"
  },
  {
    "text": "There will be-- well, OK. Yeah. I'm going to leave it like that.",
    "start": "3851190",
    "end": "3857270"
  },
  {
    "text": "So at this point we have\na purple thing triggering something to the right.",
    "start": "3857270",
    "end": "3863280"
  },
  {
    "text": "So now I'm going to show\nyou how that part works. This is the wire. So the wire itself is like this. And the idea is that when\nthere's a purple one here,",
    "start": "3863280",
    "end": "3869610"
  },
  {
    "text": "a chain reaction happens. And it happens in this way. As soon as there's a purple\ncandy here, this clears,",
    "start": "3869610",
    "end": "3877849"
  },
  {
    "text": "which makes these\ntwo fall by one, which clears that, which\nmakes this fall by one, and triggers the next thing.",
    "start": "3877850",
    "end": "3885790"
  },
  {
    "text": "This one, some stacking happens.",
    "start": "3885790",
    "end": "3891330"
  },
  {
    "text": "Let's see. So overall, I think this one\nis actually better behaved.",
    "start": "3891330",
    "end": "3896910"
  },
  {
    "text": "This falls by one\nhere and then two. So overall these\ncolumns fell by two.",
    "start": "3896910",
    "end": "3902870"
  },
  {
    "text": "This column has\nfallen so far by one, but it's about to\nfall by a second one, because this will always\ntrigger something.",
    "start": "3902870",
    "end": "3909140"
  },
  {
    "text": "And so these do stack\nnicely, because you always clear exactly two columns. The worry is that the gadget\nabove it will be skewed.",
    "start": "3909140",
    "end": "3916490"
  },
  {
    "text": " Let me give you one\nmore gadget, then I'll tell you-- no,\nactually, I think",
    "start": "3916490",
    "end": "3923370"
  },
  {
    "text": "at this point I should tell\nyou how things fit together, which is this picture.",
    "start": "3923370",
    "end": "3929060"
  },
  {
    "start": "3929060",
    "end": "3935450"
  },
  {
    "text": "So we have variables down\nhere in the lower left.",
    "start": "3935450",
    "end": "3941765"
  },
  {
    "start": "3941765",
    "end": "3947960"
  },
  {
    "text": "Then let's worry about\none thing at a time. ",
    "start": "3947960",
    "end": "3955140"
  },
  {
    "text": "These are the\nconnection gadgets. ",
    "start": "3955140",
    "end": "3960460"
  },
  {
    "text": "I don't think I\ntold you their name. But they are your\nconnector gadgets.",
    "start": "3960460",
    "end": "3966380"
  },
  {
    "text": "This is making a 90 degree turn. From the falling\naction we're going to get a purple in a\nparticular position, which",
    "start": "3966380",
    "end": "3972710"
  },
  {
    "text": "causes rightward motion. And then the wires that you\nsaw basically go in some angle",
    "start": "3972710",
    "end": "3981759"
  },
  {
    "text": "off to the right. ",
    "start": "3981760",
    "end": "3987924"
  },
  {
    "text": "I want these all to\nbe non-intersecting. ",
    "start": "3987924",
    "end": "3993410"
  },
  {
    "text": "And there's sort of two of them. There's going to be the true\ncase and the false case.",
    "start": "3993410",
    "end": "4001490"
  },
  {
    "text": "And then way over\nhere somewhere, we're going to have a clause\nwhere these wires all attach.",
    "start": "4001490",
    "end": "4011930"
  },
  {
    "text": "And then above it\nwe're going to have a reward where you get tons\nof points, and et cetera.",
    "start": "4011930",
    "end": "4021540"
  },
  {
    "text": "So let me tell you\nwhat happens next. ",
    "start": "4021540",
    "end": "4027760"
  },
  {
    "text": "It's a fun way to\ndraw the picture. So above these we'll have\nsome other connections.",
    "start": "4027760",
    "end": "4034420"
  },
  {
    "text": " I should not do it\nin the same pattern.",
    "start": "4034420",
    "end": "4039480"
  },
  {
    "text": "I should not do it like that. Yeah, sure. Connection, connection. ",
    "start": "4039480",
    "end": "4047890"
  },
  {
    "text": "OK, again, diagonal lines. Great.",
    "start": "4047890",
    "end": "4053270"
  },
  {
    "text": "Not quite diagonal. It's an angle. We have a clause. Everything connects up. Above the clause is a reward.",
    "start": "4053270",
    "end": "4060730"
  },
  {
    "text": " And then I move boards,\nand that's the picture.",
    "start": "4060730",
    "end": "4071360"
  },
  {
    "text": "And above the\nvariables, we just keep adding more connections\nconnected to some clauses.",
    "start": "4071360",
    "end": "4077510"
  },
  {
    "text": "And there's not just three\nvariables, of course. There's n variables down here,\nand we use some, three of them,",
    "start": "4077510",
    "end": "4084910"
  },
  {
    "text": "and then connect\nthat off to a clause. And they're all just stacked--\nI happen to draw the clauses",
    "start": "4084910",
    "end": "4090360"
  },
  {
    "text": "one on top of the other. That shouldn't happen. So there's some\nextra space here. This is more over to the right.",
    "start": "4090360",
    "end": "4097239"
  },
  {
    "text": "So that none of them will\ninteract with each other. That's the goal. ",
    "start": "4097240",
    "end": "4103670"
  },
  {
    "text": "Except there's some issues,\nlike notice this wire gadget,",
    "start": "4103670",
    "end": "4109689"
  },
  {
    "text": "notice dual rail logic. Either this is active\nor this is active.",
    "start": "4109689",
    "end": "4114825"
  },
  {
    "text": "And we hope that\nnot both of them are active, although that\ncan actually happen here. I'll get to that.",
    "start": "4114825",
    "end": "4120350"
  },
  {
    "text": "So when this activates,\nnotice this goes on top of a variable gadget.",
    "start": "4120350",
    "end": "4127299"
  },
  {
    "text": "Now, a wire by itself\nis kind of good. We've seen it removes two\nthings from every spot.",
    "start": "4127300",
    "end": "4132410"
  },
  {
    "text": "So things don't shift too much. And furthermore, we should\nhope that either this activates",
    "start": "4132410",
    "end": "4140149"
  },
  {
    "text": "or this activates. So this will shift by\na consistent amount in either case. But the wire may get messed up\nbecause the variable actually",
    "start": "4140149",
    "end": "4150109"
  },
  {
    "text": "removes three things\nfrom one of the columns. So we need a better wire\ngadget, which looks like this.",
    "start": "4150109",
    "end": "4161130"
  },
  {
    "text": "This is a super wire gadget. It's really cool. It works no matter how\nyou use it, kind of.",
    "start": "4161130",
    "end": "4167399"
  },
  {
    "text": "So this is what it\nlooks like in general. And this is regular use. So as before, if\nwe trigger this,",
    "start": "4167399",
    "end": "4174528"
  },
  {
    "text": "then this triggers, and this guy\nfalls by one, just like before. But now also, if there's\na variable down here",
    "start": "4174529",
    "end": "4181449"
  },
  {
    "text": "and this column falls\nby three-- or sorry. If this column falls by\nthree, so the same picture,",
    "start": "4181450",
    "end": "4187500"
  },
  {
    "text": "the things fell by three,\nstill everything works out. These two fall.",
    "start": "4187500",
    "end": "4194389"
  },
  {
    "text": "These two fall but they\nmeet a different dude. But there were a bunch of guys\nto meet up with, so it's fine.",
    "start": "4194390",
    "end": "4200380"
  },
  {
    "text": "And I clearly drew the\noutput in the wrong place.",
    "start": "4200380",
    "end": "4205620"
  },
  {
    "text": "The output should\nbe here I think. Yeah. So in this picture\nthe output was here,",
    "start": "4205620",
    "end": "4211600"
  },
  {
    "text": "also it shifted by one. In this picture the output\nis here, not up there. So in both cases it triggers.",
    "start": "4211600",
    "end": "4218340"
  },
  {
    "text": "And finally if the middle\ncolumn fell by three before this gadget\nactivated, then this,",
    "start": "4218340",
    "end": "4224840"
  },
  {
    "text": "again, triggers this time\nwith this guy being different. Instead of this one matching,\nthis one's matching.",
    "start": "4224840",
    "end": "4231360"
  },
  {
    "text": "That still triggers these guys\nand this is still the output. So this is a\ndifferent wire gadget",
    "start": "4231360",
    "end": "4238374"
  },
  {
    "text": "that works in three\ndifferent scenarios, depending on what\nhappened below it. So that's good news. That lets us do\nthis type of wire.",
    "start": "4238374",
    "end": "4247590"
  },
  {
    "text": "And in general, we're going\nto have a chain reaction all the way down here until we\nget to the clause from bottom",
    "start": "4247590",
    "end": "4256090"
  },
  {
    "text": "to top. And this we'll resolve. And let me show you the clause.",
    "start": "4256090",
    "end": "4262996"
  },
  {
    "text": "I think details are\na little bit messy. There's a little\nlocking mechanism here.",
    "start": "4262996",
    "end": "4270340"
  },
  {
    "text": "But basically the idea is\nall of these things come in, x1, x1 bar, x2, x2 bar.",
    "start": "4270340",
    "end": "4276570"
  },
  {
    "text": "All of the half\nwires or semi-wires. And so we expect one\nof these to activate.",
    "start": "4276570",
    "end": "4284270"
  },
  {
    "text": "Maybe you don't do that,\nbut that would be weird, and you won't end up\nsatisfying the clause.",
    "start": "4284270",
    "end": "4290190"
  },
  {
    "text": "So if this one activates, then\nthese align, and you're happy.",
    "start": "4290190",
    "end": "4296310"
  },
  {
    "text": "In general, if you can\nget this column to fall, you're going to be happy,\nbecause above this thing is this reward gadget.",
    "start": "4296310",
    "end": "4302090"
  },
  {
    "text": "And if this column falls by\none, you get a million points. And every clause has its own\nreward of a million points,",
    "start": "4302090",
    "end": "4309270"
  },
  {
    "text": "and million here is like\nn squared or something. So you really want to get these.",
    "start": "4309270",
    "end": "4314634"
  },
  {
    "text": "And the only way to do it\nis to satisfy the clauses. The only way to\nget all the point is satisfy all the clauses.",
    "start": "4314634",
    "end": "4321010"
  },
  {
    "text": "Now, the goal in this\ngame, I didn't mention, is to maximize the number\nof points you can get",
    "start": "4321010",
    "end": "4327800"
  },
  {
    "text": "for a given number of moves. Usually in Candy Crush you\nhave a limited number of moves.",
    "start": "4327800",
    "end": "4333640"
  },
  {
    "text": "So the idea is you're just going\nto have enough moves to set each of the variables right. If you end up setting one\nof the wires directly--",
    "start": "4333640",
    "end": "4340250"
  },
  {
    "text": "you can trigger any wire\nby doing a little flip. You can say I'll\ntrigger this one wire. But that will satisfy,\nat most, one clause.",
    "start": "4340250",
    "end": "4347470"
  },
  {
    "text": "Whereas if you do\nit on a variable, you're going to satisfy\na bunch of clauses, and that's clearly better.",
    "start": "4347470",
    "end": "4353760"
  },
  {
    "text": "So that's a bit of an\nargument you need to make. It doesn't help enough.",
    "start": "4353760",
    "end": "4359120"
  },
  {
    "text": "You could even set this wire\nand this wire, an xy or an x bar wire.",
    "start": "4359120",
    "end": "4364360"
  },
  {
    "text": "But the claim is\nthat will never buy you as much as setting\nan entire variable,",
    "start": "4364360",
    "end": "4374139"
  },
  {
    "text": "and here's the reason why. I drew this picture\nsimply to say for every clause we're going\nto have this picture connected",
    "start": "4374140",
    "end": "4381470"
  },
  {
    "text": "to some variables. In fact, every time\nyou have a clause, you make a million\ncopies of the clause.",
    "start": "4381470",
    "end": "4388110"
  },
  {
    "text": "And million is like n. So that it's really\nworth setting the var-- every variable appears\nin millions of clauses.",
    "start": "4388110",
    "end": "4395654"
  },
  {
    "text": "So you really want\nto set the variables. If you just satisfy\none measly clause and get one measly million\npoints, it's not worth it.",
    "start": "4395654",
    "end": "4402470"
  },
  {
    "text": "But if you can get a million\ntimes a million points, whoa, a trillion points.",
    "start": "4402470",
    "end": "4409430"
  },
  {
    "text": "So that's why you should\nonly set variables, not set wires directly. OK. ",
    "start": "4409430",
    "end": "4417540"
  },
  {
    "text": "I think I have roughly\ncovered this proof, except I didn't go up the chain. Here, setting x1 bar doesn't\ndo much except setting one",
    "start": "4417540",
    "end": "4426044"
  },
  {
    "text": "or the other of these ends up\nshifting all of these things by one, which ends of\nclearing this, which shifts",
    "start": "4426044",
    "end": "4431150"
  },
  {
    "text": "all of these columns by one. And basically things look\nreally spread out here,",
    "start": "4431150",
    "end": "4436370"
  },
  {
    "text": "but as you work\nyour way up, they're coming more and\nmore into alignment. The idea is as long as things\nresolve from bottom to top,",
    "start": "4436370",
    "end": "4443630"
  },
  {
    "text": "you-- it doesn't-- then first\nyou figure out whether x1",
    "start": "4443630",
    "end": "4451215"
  },
  {
    "text": "satisfies the clause. If it doesn't, it\nsets things up for x2. And then maybe x2\nsatisfies the clause.",
    "start": "4451215",
    "end": "4456369"
  },
  {
    "text": "If it doesn't, it sets\nthings up for x3 here. They're spread out even more. But by the time you've\ndone these things below,",
    "start": "4456370",
    "end": "4462360"
  },
  {
    "text": "that thing will be ready. ",
    "start": "4462360",
    "end": "4467470"
  },
  {
    "text": "So that was the first proof. The second proof--\nsorry, before interlude.",
    "start": "4467470",
    "end": "4474660"
  },
  {
    "text": "Candy Crush is based\non a variety of games. Most famous is Bejeweled,\nbut there is a long history",
    "start": "4474660",
    "end": "4480590"
  },
  {
    "text": "of-- even Tetris is in there. There's a long history\nof match three games.",
    "start": "4480590",
    "end": "4486610"
  },
  {
    "text": "And pretty much all of\nthese are NP-complete. I don't know the\ndetails of all of them, but there's this paper by three\nauthors a little bit later",
    "start": "4486610",
    "end": "4494300"
  },
  {
    "text": "in the year that proves\nbasically all of these games are NP-complete, even when\nyou're not given a move limit.",
    "start": "4494300",
    "end": "4500692"
  },
  {
    "text": "So this is interesting. And Bejeweled, the goal is\njust to maximize your score. You don't necessarily have a\nlimit on the number of moves,",
    "start": "4500692",
    "end": "4506386"
  },
  {
    "text": "unlike Candy Crush. And also in some levels\ncandy Crush is like that.",
    "start": "4506386",
    "end": "4511889"
  },
  {
    "text": "So here it was very crucial\nthat we only had enough moves to trigger all the variables. We didn't want to be\nable to do other things.",
    "start": "4511890",
    "end": "4518852"
  },
  {
    "text": "So here's a different\nproof, and I'm just going to give the high\nlevel picture, basically.",
    "start": "4518852",
    "end": "4524737"
  },
  {
    "text": "This is cool, because\neven just figuring out whether you get this one\ngem, this one candy is hard.",
    "start": "4524737",
    "end": "4531400"
  },
  {
    "text": "In order to do so,\nyou have to line up all of these things\nfor each clause.",
    "start": "4531400",
    "end": "4537070"
  },
  {
    "text": "And here's the reduction\nfrom exactly one of 3SAT. So only if exactly\none of the variables",
    "start": "4537070",
    "end": "4543480"
  },
  {
    "text": "get set correctly does this\nshift to the right level, and only when all of these are\nshifted to the right level can",
    "start": "4543480",
    "end": "4549200"
  },
  {
    "text": "you trigger this wire to go all\nthe way here and get that guy. And it's the only\nway to get that guy. You can't do it directly.",
    "start": "4549200",
    "end": "4554780"
  },
  {
    "text": "It can only be triggered\nfrom the left-hand side. And there's also a\nsequencer over here, which forces all\nof the variables",
    "start": "4554780",
    "end": "4560350"
  },
  {
    "text": "to get set before this happens. So it's a little tricky,\nbecause you don't want it to be,",
    "start": "4560350",
    "end": "4566720"
  },
  {
    "text": "you could say half of them,\nand then trigger this, and then things happen to\nalign in a cheating way.",
    "start": "4566720",
    "end": "4572220"
  },
  {
    "text": "The details are complicated,\nbut they actually implemented their reduction.",
    "start": "4572220",
    "end": "4578290"
  },
  {
    "text": "So this is it. Now, as it says here, there are\n4,000 rows above and 2,000 rows",
    "start": "4578290",
    "end": "4585290"
  },
  {
    "text": "below. So it's a large construction. And this is for this formula.",
    "start": "4585290",
    "end": "4590560"
  },
  {
    "text": "[LAUGHTER] I can clean it up a little\nbit, remove the-- again,",
    "start": "4590560",
    "end": "4597440"
  },
  {
    "text": "there's a background\ncheckerboard pattern here. So if I generate instance then\nthings are little bit cleaner.",
    "start": "4597440",
    "end": "4604730"
  },
  {
    "text": "And I think highlighted in red\nare the moves you can make. So here's the first variable. You could either-- let's\ndo the simple one first--",
    "start": "4604730",
    "end": "4611790"
  },
  {
    "text": "move this guy with this one, and\nthen trigger, trigger, trigger. All this happens without\nyou able to do anything.",
    "start": "4611790",
    "end": "4619210"
  },
  {
    "text": "And that will move\nsome stuff up top. Or we can move this one\nhere, and then this is fun.",
    "start": "4619210",
    "end": "4630460"
  },
  {
    "text": "The variable goes\ndown and it just keeps-- it goes down, basically,\nto where the x1 bar is,",
    "start": "4630460",
    "end": "4637580"
  },
  {
    "text": "down here, and then it triggers\nthat guy, and maybe that guy also.",
    "start": "4637580",
    "end": "4643310"
  },
  {
    "text": "And that one. And-- [LAUGHTER]",
    "start": "4643310",
    "end": "4648670"
  },
  {
    "text": "Just lots of stuff happens. Anyway, eventually\nwe'll get down to x2 and we'll be able to set\nit one way or the other.",
    "start": "4648670",
    "end": "4655639"
  },
  {
    "text": "So the details are obviously\na little bit complicated, but clearly they've\nbeen explicitly worked out because they can\neven play the game, which",
    "start": "4655640",
    "end": "4661608"
  },
  {
    "text": "is pretty awesome. Anyway, and they also\nhave the greatest URL, candycrush.isnphard.com.",
    "start": "4661608",
    "end": "4668142"
  },
  {
    "text": "We should try to get other\nthings not as nphard.com.",
    "start": "4668142",
    "end": "4673410"
  },
  {
    "text": "That is Candy\nCrush and Bejeweled and all of its\nfriends are NP hard.",
    "start": "4673410",
    "end": "4679117"
  },
  {
    "text": "That's it, unless\nthere are questions.  So we've just started to\nscratch the surface on the idea",
    "start": "4679117",
    "end": "4687949"
  },
  {
    "text": "that planar graphs are\nhard, and next class we'll see planar versions of\n3SAT and one and 3SAT. If we weren't using here, this\nis using a non-planar thing.",
    "start": "4687950",
    "end": "4696780"
  },
  {
    "text": "So that helps with a lot\nof proofs, especially ones that happen in the plane.",
    "start": "4696780",
    "end": "4702320"
  },
  {
    "text": "So we've seen it with\nplanar circuit SAT. But next we'll do planar and\n3SAT, planar one and 3SAT,",
    "start": "4702320",
    "end": "4707440"
  },
  {
    "text": "planar not all equal SAT,\nthose kinds of things. And again, be able to avoid\ncrossovers, which is nice.",
    "start": "4707440",
    "end": "4714600"
  },
  {
    "text": "Cool. ",
    "start": "4714600",
    "end": "4719757"
  }
]