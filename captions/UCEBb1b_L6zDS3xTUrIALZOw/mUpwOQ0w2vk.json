[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6330"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6330",
    "end": "13320"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu.",
    "start": "13320",
    "end": "18450"
  },
  {
    "start": "18450",
    "end": "48636"
  },
  {
    "start": "47000",
    "end": "100000"
  },
  {
    "text": "ALAN OPPENHEIM: Last\ntime we introduced the notion of digital\nnetworks and the general topic",
    "start": "48636",
    "end": "54940"
  },
  {
    "text": "of digital network theory. There, of course, are\nlots of directions",
    "start": "54940",
    "end": "60550"
  },
  {
    "text": "that that discussion\ncan proceed in, but during this\nset of lectures, we won't be talking in any more\ndetail about the general issues",
    "start": "60550",
    "end": "69580"
  },
  {
    "text": "of digital network theory. In this lecture and\nthe next lecture,",
    "start": "69580",
    "end": "74600"
  },
  {
    "text": "I would like to consider, in\nparticular, some of the more common structures that\nare used for implementing",
    "start": "74600",
    "end": "83560"
  },
  {
    "text": "digital filters-- first for the case of infinite\nimpulse response filters,",
    "start": "83560",
    "end": "89030"
  },
  {
    "text": "which we'll discuss in this\nlecture, and then in the next lecture some of the more common\nstructures for finite impulse",
    "start": "89030",
    "end": "98259"
  },
  {
    "text": "response digital filters. To begin the discussion, let's\nconsider the most general form,",
    "start": "98260",
    "end": "107829"
  },
  {
    "start": "100000",
    "end": "446000"
  },
  {
    "text": "once again, for the\ntransfer function of a digital filter\nwhere we are assuming",
    "start": "107830",
    "end": "115570"
  },
  {
    "text": "that the system function H of\nz is a rational function in z to the minus 1.",
    "start": "115570",
    "end": "122338"
  },
  {
    "text": "We recall from our\nprevious discussions that a rational transfer\nfunction of this form",
    "start": "122338",
    "end": "130000"
  },
  {
    "text": "corresponds to a linear\nconstant coefficient difference equation, and in particular,\nthe difference equation",
    "start": "130000",
    "end": "137020"
  },
  {
    "text": "corresponding to\nthis system function is the difference equation\nthat I've indicated here.",
    "start": "137020",
    "end": "143440"
  },
  {
    "text": "The coefficients in the\nnumerator corresponding to the polynomial\nthat represents",
    "start": "143440",
    "end": "149770"
  },
  {
    "text": "the 0's of the\ntransfer function are identical to the\ncoefficients applied",
    "start": "149770",
    "end": "156310"
  },
  {
    "text": "to the delayed\nvalues of the input,",
    "start": "156310",
    "end": "161950"
  },
  {
    "text": "and the coefficients in the\ndenominator corresponding to the coefficients for\nthe polynomial representing",
    "start": "161950",
    "end": "168910"
  },
  {
    "text": "the poles are the\nsame coefficients, which, in the\ndifference equation,",
    "start": "168910",
    "end": "174280"
  },
  {
    "text": "correspond to the\nweights applied to delayed values of the output.",
    "start": "174280",
    "end": "180560"
  },
  {
    "text": "So this is the general\nform of a transfer function for assuming that the system\nis representable by a linear",
    "start": "180560",
    "end": "187480"
  },
  {
    "text": "constant coefficient\ndifference equation, and the difference equation\ncorresponding to this transfer",
    "start": "187480",
    "end": "194290"
  },
  {
    "text": "function is as I've\nindicated here. Incidentally, let me stress as\nI indicated in the last lecture",
    "start": "194290",
    "end": "203440"
  },
  {
    "text": "that our assumption will be\nthroughout these discussions that we are discussing--\nconsidering a causal system.",
    "start": "203440",
    "end": "213909"
  },
  {
    "text": "In other words, the\nregion of convergence that we would associate\nwith this transfer function",
    "start": "213910",
    "end": "219120"
  },
  {
    "text": "is the region of\nconvergence that would correspond to a causal system. In other words, the\nregion of convergence",
    "start": "219120",
    "end": "225420"
  },
  {
    "text": "is outside the outermost pole. There are a variety of ways in\nwhich we can rewrite a transfer",
    "start": "225420",
    "end": "235230"
  },
  {
    "text": "function of this form. One possible way of writing\nthis transfer function",
    "start": "235230",
    "end": "240780"
  },
  {
    "text": "is as I've indicated\nat the bottom. That is an expression\ncorresponding",
    "start": "240780",
    "end": "247260"
  },
  {
    "text": "to the product of\ntwo functions-- the first representing\nthe polynomial",
    "start": "247260",
    "end": "253019"
  },
  {
    "text": "for the 0's, and the\nsecond representing the polynomial for the poles.",
    "start": "253020",
    "end": "259528"
  },
  {
    "text": "What this suggests is\nthat we can imagine implementing this system by\nimplementing a system which",
    "start": "259529",
    "end": "267030"
  },
  {
    "text": "realizes this transfer\nfunction, and cascading that--",
    "start": "267030",
    "end": "272090"
  },
  {
    "text": "the cascade leading\nto the product of the system functions-- cascading that with a system\nthat implements this system",
    "start": "272090",
    "end": "279509"
  },
  {
    "text": "function. What that corresponds\nto in the implementation",
    "start": "279510",
    "end": "285150"
  },
  {
    "text": "of the difference\nequation is first implementing in terms of\nmultipliers, delays, and adders",
    "start": "285150",
    "end": "291000"
  },
  {
    "text": "as we talked about last time-- implementing first\nthe linear combination",
    "start": "291000",
    "end": "296789"
  },
  {
    "text": "of the weighted\ndelayed input values,",
    "start": "296790",
    "end": "302830"
  },
  {
    "text": "and then using that as\nthe input to a system which implements the weighted\ndelayed output values.",
    "start": "302830",
    "end": "310600"
  },
  {
    "text": "So implementing this system\nfunction with this function",
    "start": "310600",
    "end": "317370"
  },
  {
    "text": "first in cascade with this\ncorresponds to implementing",
    "start": "317370",
    "end": "322710"
  },
  {
    "text": "this difference\nequation where we can imagine denoting this\nfirst sum as x1 of n--",
    "start": "322710",
    "end": "336840"
  },
  {
    "text": "implementing x1 of n-- implementing the\nfunction x1 of n,",
    "start": "336840",
    "end": "342449"
  },
  {
    "text": "and then using that as the\ninput to a system which is represented by the\ndifference equation y of n",
    "start": "342450",
    "end": "348720"
  },
  {
    "text": "equals x1 of n plus this sum. Carrying that out, the\ndigital network that results",
    "start": "348720",
    "end": "361250"
  },
  {
    "text": "is as I've indicated\nhere, where we have, first of all, the\nlinear combination",
    "start": "361250",
    "end": "368990"
  },
  {
    "text": "of weighted delayed\ninput values. So here is x of n, x of n\nminus 1, x of n minus 2,",
    "start": "368990",
    "end": "378229"
  },
  {
    "text": "down through x of\nn minus capital N, where I'm assuming\nin drawing this",
    "start": "378230",
    "end": "384530"
  },
  {
    "text": "that capital M is\nequal to capital N. This first block then implements\nthis summation to form x1 of n,",
    "start": "384530",
    "end": "396680"
  },
  {
    "text": "and then the second system\nwhich this has cascaded with",
    "start": "396680",
    "end": "402500"
  },
  {
    "text": "has as an input\nx1 of n and added to it weighted delayed\nvalues of the output.",
    "start": "402500",
    "end": "409199"
  },
  {
    "text": "So here is y of\nn, y of n minus 1, down through y of\nn minus capital N.",
    "start": "409200",
    "end": "415250"
  },
  {
    "text": "We see the coefficients a1,\na2, through a sub capital N. Clearly in this implementation\nthis block corresponds",
    "start": "415250",
    "end": "425450"
  },
  {
    "text": "to implementing the\nzeros of the system, and this block corresponds\nto implementing",
    "start": "425450",
    "end": "432080"
  },
  {
    "text": "the poles of the system. So as we've factored the\ntransfer function into the 0's",
    "start": "432080",
    "end": "439340"
  },
  {
    "text": "followed by the poles,\nwe have this system implementing the 0's followed\nby this system implementing",
    "start": "439340",
    "end": "445910"
  },
  {
    "text": "the poles. Well, this, of course,\nis one implementation of the difference equation,\nbut in fact, there",
    "start": "445910",
    "end": "454340"
  },
  {
    "text": "are a variety of ways in which\nwe can manipulate the transfer function, or, equivalently,\nin which we can manipulate",
    "start": "454340",
    "end": "461990"
  },
  {
    "text": "the difference equation, which\nwill lead to other structures for implementing the system\nbesides the structure",
    "start": "461990",
    "end": "469490"
  },
  {
    "text": "that I've indicated here. Well, let's consider one simple\nway of manipulating this system",
    "start": "469490",
    "end": "476330"
  },
  {
    "text": "to generate another structure. We recognize this as\ntwo systems in cascade.",
    "start": "476330",
    "end": "484220"
  },
  {
    "text": "They both implement linear\nshift invariant systems, and we know that two\nlinear shift invariant",
    "start": "484220",
    "end": "490680"
  },
  {
    "text": "systems in cascade can be\ncascaded in either order without affecting\nthe overall transfer",
    "start": "490680",
    "end": "497270"
  },
  {
    "text": "function of the system. So we can imagine just\nsimply breaking the system",
    "start": "497270",
    "end": "502880"
  },
  {
    "text": "at this point,\ninterchanging the order in which these two\nsystems are cascaded,",
    "start": "502880",
    "end": "508550"
  },
  {
    "text": "and obviously what\nthat leads to is a second implementation of\nthe same difference equation.",
    "start": "508550",
    "end": "514469"
  },
  {
    "text": "That implementation\nin particular, whereas this one has the zeros\nfirst followed by the poles--",
    "start": "514470",
    "end": "520640"
  },
  {
    "text": "interchanging the\norder of those two will result in the\npoles implemented first,",
    "start": "520640",
    "end": "526050"
  },
  {
    "text": "followed by the\n0's, and the system that results is what I've\nindicated on this next view",
    "start": "526050",
    "end": "533660"
  },
  {
    "text": "graph. So this system is\nidentical to the other one.",
    "start": "533660",
    "end": "539030"
  },
  {
    "text": "It's clearly identical in\nterms of the overall transfer function, and what\nI've done simply",
    "start": "539030",
    "end": "544460"
  },
  {
    "text": "is just to interchange the order\nin which the 0's and the poles",
    "start": "544460",
    "end": "550220"
  },
  {
    "text": "are implemented. Well, that manipulation\nthat is breaking that system",
    "start": "550220",
    "end": "557080"
  },
  {
    "text": "and interchanging the order in\nwhich the systems are cascaded can be interpreted in terms\nof either a manipulation",
    "start": "557080",
    "end": "564280"
  },
  {
    "text": "on the transfer function or a\nmanipulation on the difference equation, and to indicate\nwhat that corresponds",
    "start": "564280",
    "end": "571360"
  },
  {
    "text": "to let's return to the\ngeneral difference equation",
    "start": "571360",
    "end": "580050"
  },
  {
    "text": "as we had it on the\nfirst view graph-- the transfer\nfunction, where now,",
    "start": "580050",
    "end": "585990"
  },
  {
    "text": "rather than cascading this\nsystem first and this system second, we've simply\ninterchanged the order in which",
    "start": "585990",
    "end": "593220"
  },
  {
    "text": "those two systems are cascaded. That's interpreting\nthis operation in terms of the transfer function.",
    "start": "593220",
    "end": "600660"
  },
  {
    "text": "To interpret it in terms\nof the difference equation is slightly more involved,\nbut basically and very quickly",
    "start": "600660",
    "end": "609180"
  },
  {
    "text": "what it involves is first\nimplementing the difference equation in which we consider\nthat the input is just x of n",
    "start": "609180",
    "end": "618000"
  },
  {
    "text": "rather than a weighted sum of\ndelayed x of n's to implement",
    "start": "618000",
    "end": "624060"
  },
  {
    "text": "to implement the output y1 of n. And then since the input is,\nin fact, a linear combination",
    "start": "624060",
    "end": "631350"
  },
  {
    "text": "of weighted delayed inputs,\nthe corresponding output is the same linear combination\nof weighted delayed outputs.",
    "start": "631350",
    "end": "638190"
  },
  {
    "text": "That essentially is derived\nfrom using properties of linear shift\ninvariant systems",
    "start": "638190",
    "end": "643890"
  },
  {
    "text": "that we talked about and\nsome of the early lectures. Well, returning to\nthe network that",
    "start": "643890",
    "end": "653350"
  },
  {
    "start": "647000",
    "end": "756000"
  },
  {
    "text": "resulted by interchanging the\norder of these two systems, one",
    "start": "653350",
    "end": "660009"
  },
  {
    "text": "of the questions we\ncan ask, of course, is whether there\nis any advantage",
    "start": "660010",
    "end": "665019"
  },
  {
    "text": "to implementing this system\nrather than implementing the first system\nthat we derived.",
    "start": "665020",
    "end": "670750"
  },
  {
    "text": "And in answering that,\none thing that we notice about this system is that\nthere are two parallel branches",
    "start": "670750",
    "end": "678160"
  },
  {
    "text": "here with corresponding delays.",
    "start": "678160",
    "end": "683420"
  },
  {
    "text": "Now, what does that mean? Well, if we consider this\noutput to be y1 of n--",
    "start": "683420",
    "end": "689779"
  },
  {
    "text": "it's the y1 of n that we had\ndefined in the previous slide-- the value appearing\nhere is y1 of n minus 1,",
    "start": "689780",
    "end": "697140"
  },
  {
    "text": "but the value appearing\nhere is y1 of n minus 1. The value appearing here is y1\nof n minus 2 and appearing here",
    "start": "697140",
    "end": "704790"
  },
  {
    "text": "is y1 of n minus 2. And in fact, following this\nchain down, what we observe",
    "start": "704790",
    "end": "711180"
  },
  {
    "text": "is that the output of this\ndelay is exactly the same as the output of this delay.",
    "start": "711180",
    "end": "717780"
  },
  {
    "text": "Well, if that's the case,\nthen in fact there obviously, if we think about\nan implementation,",
    "start": "717780",
    "end": "723660"
  },
  {
    "text": "is no reason to separately\nstore this delayed output",
    "start": "723660",
    "end": "729420"
  },
  {
    "text": "and this delayed output\nsince they're the same. In other words, we can\ncollapse these delays together,",
    "start": "729420",
    "end": "736470"
  },
  {
    "text": "and the network\nthat results when we do that is the network that\nI indicate here, where all",
    "start": "736470",
    "end": "745440"
  },
  {
    "text": "that I've done in going from\nthe previous network to this one is simply collapse\nthe delays together,",
    "start": "745440",
    "end": "752520"
  },
  {
    "text": "taking advantage of the\nfact that their outputs were identical. Now, in drawing a\nnetwork, of course,",
    "start": "752520",
    "end": "759990"
  },
  {
    "text": "it doesn't particularly\nmatter whether we conserve z to the minus 1's or\nequivalently whether we",
    "start": "759990",
    "end": "767520"
  },
  {
    "text": "collapse a network when we\ncan take advantage of the fact that the output of two\ndelays is the same,",
    "start": "767520",
    "end": "774090"
  },
  {
    "text": "but clearly in terms\nof implementation of a digital filter either\nin terms of a program",
    "start": "774090",
    "end": "779940"
  },
  {
    "text": "or in terms of special\npurpose hardware, obviously clearly there's\nan advantage to reducing",
    "start": "779940",
    "end": "788399"
  },
  {
    "text": "the number of delay registers\nthat are required, because you see each z to the\nminus 1 that appears",
    "start": "788400",
    "end": "795600"
  },
  {
    "text": "in the structure requires\nin the implementation a register to store the value--",
    "start": "795600",
    "end": "803590"
  },
  {
    "text": "in other words, to hold\nit for the next iteration. So in this structure, as\nit's implemented here,",
    "start": "803590",
    "end": "811240"
  },
  {
    "text": "we have n delay\nregisters, where again I'm assuming that capital M was\nequal to capital N. There are",
    "start": "811240",
    "end": "820120"
  },
  {
    "text": "N delay registers, whereas\nin the first network that we generated--",
    "start": "820120",
    "end": "825310"
  },
  {
    "text": "the network corresponding to the\n0's first and then the poles-- the there were two\nM delay registers.",
    "start": "825310",
    "end": "832150"
  },
  {
    "text": " In general, a digital\nfilter structure",
    "start": "832150",
    "end": "839100"
  },
  {
    "start": "833000",
    "end": "932000"
  },
  {
    "text": "that has the minimum\nnumber of delay registers-- and you can\nshow that the minimum number required is the\ngreater of M or N,",
    "start": "839100",
    "end": "847050"
  },
  {
    "text": "or since we're\nconsidering M equal to N, the minimum number\nis N. The structure",
    "start": "847050",
    "end": "854010"
  },
  {
    "text": "that has only that\nminimum number and no more is\ngenerally referred to as a canonic structure.",
    "start": "854010",
    "end": "861220"
  },
  {
    "text": "So the structure that\nI've indicated here is a canonic structure.",
    "start": "861220",
    "end": "866490"
  },
  {
    "text": "It has the minimum\nnumber of delays, but in fact, it's not the\nonly canonic structure.",
    "start": "866490",
    "end": "873720"
  },
  {
    "text": "There are a large variety\nof canonic structures, and in fact, there's\na canonic structure",
    "start": "873720",
    "end": "880740"
  },
  {
    "text": "that is similar to\nthe first structure that we derived in the\nsense that it also has--",
    "start": "880740",
    "end": "888150"
  },
  {
    "text": "is implemented with the 0's\nfirst, followed by the poles. Let me remind you again that\nthis system as it's implemented",
    "start": "888150",
    "end": "896490"
  },
  {
    "text": "is basically a cascade\nof the system poles. Those are the a's--",
    "start": "896490",
    "end": "903600"
  },
  {
    "text": "or the polynomial\nthat this implements corresponds to the poles-- followed by an implementation of\nthe 0's, and it's the b's that",
    "start": "903600",
    "end": "912389"
  },
  {
    "text": "control the 0's. Well, to generate\nanother canonic structure",
    "start": "912390",
    "end": "917700"
  },
  {
    "text": "we can take advantage\nof a theorem that, in fact, is a very\npowerful theorem in dealing",
    "start": "917700",
    "end": "925290"
  },
  {
    "text": "with filter structures-- the theorem, which\nis referred to as the transposition theorem.",
    "start": "925290",
    "end": "932399"
  },
  {
    "start": "932000",
    "end": "993000"
  },
  {
    "text": "What the transposition\ntheorem says is that, if we have a network\nthat implements a transfer",
    "start": "932400",
    "end": "942570"
  },
  {
    "text": "function, and if we simply\nreverse the direction of all",
    "start": "942570",
    "end": "948140"
  },
  {
    "text": "of the branches in the\nnetwork and we interchange",
    "start": "948140",
    "end": "953690"
  },
  {
    "text": "the input and the\noutput, then the transfer function that results\nis exactly the same.",
    "start": "953690",
    "end": "962660"
  },
  {
    "text": "So it says take the network,\nreverse the direction of the branches, put the\ninput where the output was,",
    "start": "962660",
    "end": "969640"
  },
  {
    "text": "take the output\nwhere the input was, and what you find is that the\ntransfer function of the system",
    "start": "969640",
    "end": "976930"
  },
  {
    "text": "is exactly the same. Well, let me illustrate\nthis theorem. We won't incidentally\nprove the theorem,",
    "start": "976930",
    "end": "984180"
  },
  {
    "text": "although in the notes in the\ntext at the end of the chapter there, in fact, is a proof\nof the transposition theorem,",
    "start": "984180",
    "end": "993509"
  },
  {
    "start": "993000",
    "end": "1163000"
  },
  {
    "text": "but let me illustrate the\ntransposition theorem-- first with a simple\nexample that makes it",
    "start": "993510",
    "end": "999060"
  },
  {
    "text": "appear to be a trivial\ntheorem, and then with another example\nthat suggests",
    "start": "999060",
    "end": "1005060"
  },
  {
    "text": "that perhaps the theorem is less\nobvious than it would at first appear.",
    "start": "1005060",
    "end": "1010320"
  },
  {
    "text": "Well, to illustrate the\ntransposition theorem, let's begin with\na simple network--",
    "start": "1010320",
    "end": "1015810"
  },
  {
    "text": "just a simple first\norder network, two coefficient branches\nand a delay branch.",
    "start": "1015810",
    "end": "1023160"
  },
  {
    "text": "The transposition theorem\nsays that we want first of all",
    "start": "1023160",
    "end": "1029309"
  },
  {
    "text": "to reverse the direction\nof all of the branches.",
    "start": "1029310",
    "end": "1034990"
  },
  {
    "text": "So this branch gets\nturned around, again, with a gain of unity. This branch gets turned\naround with a gain of c.",
    "start": "1034990",
    "end": "1042390"
  },
  {
    "text": "This branch gets turned\naround with a gain of a. The delay branch\nis turned around.",
    "start": "1042390",
    "end": "1049140"
  },
  {
    "text": "This branch, which has a gain\nof unity, is turned around. Put the input where the output\nwas, and take the output",
    "start": "1049140",
    "end": "1058620"
  },
  {
    "text": "from where the input was. So the transpose of this\nnetwork is the network",
    "start": "1058620",
    "end": "1066950"
  },
  {
    "text": "that I've indicated here,\nand now of course we",
    "start": "1066950",
    "end": "1071980"
  },
  {
    "text": "can redraw this\nnetwork by putting the input on the left hand\nside and taking the output",
    "start": "1071980",
    "end": "1079899"
  },
  {
    "text": "on the right hand side. That is taking the\nsame network and just flipping it over-- flipping\nit over because we tend",
    "start": "1079900",
    "end": "1086020"
  },
  {
    "text": "to have a convention that\nthe input is coming in from the left and the output\nis going out at the right.",
    "start": "1086020",
    "end": "1092320"
  },
  {
    "text": "If we do that, just\ntaking this network and simply flipping\nit over, we have",
    "start": "1092320",
    "end": "1097840"
  },
  {
    "text": "x of n coming in\nthrough a unity gain. This delay has now ended\nup on the left hand side,",
    "start": "1097840",
    "end": "1105380"
  },
  {
    "text": "and you can verify in\na straightforward way that these branches are\nnow correct if we just take",
    "start": "1105380",
    "end": "1110500"
  },
  {
    "text": "this network and flip it over. And is it true that the transfer\nfunction of this network",
    "start": "1110500",
    "end": "1117670"
  },
  {
    "text": "is identical to the transfer\nfunction of this network? Well, you should be able\nto see by inspection",
    "start": "1117670",
    "end": "1124530"
  },
  {
    "text": "that in fact it is true. In fact, if you compare\nthis network to this one, what's the only difference?",
    "start": "1124530",
    "end": "1130750"
  },
  {
    "text": "The only difference is that this\ndelay, instead of being here, ended up on the other side of\nthe coefficient multiplier.",
    "start": "1130750",
    "end": "1138809"
  },
  {
    "text": "And obviously since\nthese two in cascade implement a times\nz to the minus 1,",
    "start": "1138810",
    "end": "1144610"
  },
  {
    "text": "it doesn't matter whether\nI do the multiplication by a first and then\ndelay or the reverse.",
    "start": "1144610",
    "end": "1151170"
  },
  {
    "text": "So applying the transposition\ntheorem to this simple example,",
    "start": "1151170",
    "end": "1158320"
  },
  {
    "text": "we see that obviously\nfor this example the transposition theorem works. Well, let's try it on a slightly\nmore complicated example",
    "start": "1158320",
    "end": "1170730"
  },
  {
    "start": "1163000",
    "end": "1444000"
  },
  {
    "text": "not to verify that it works,\nbut just again to emphasize how the transposition\nis implemented.",
    "start": "1170730",
    "end": "1178380"
  },
  {
    "text": "Here I have an example in which\nI have a canonic first order",
    "start": "1178380",
    "end": "1185260"
  },
  {
    "text": "system. This implements\none 0 and one pole. Here is the\nimplementation of the pole",
    "start": "1185260",
    "end": "1192419"
  },
  {
    "text": "and the implementation of the 0. This, in fact, is the\nfirst order counterpart",
    "start": "1192420",
    "end": "1198250"
  },
  {
    "text": "of the canonic structure that I\nshowed several view graphs ago.",
    "start": "1198250",
    "end": "1203350"
  },
  {
    "text": "And so it's one pole,\nand that's implemented through this loop,\none 0, and that's",
    "start": "1203350",
    "end": "1209350"
  },
  {
    "text": "implemented through this loop. And these, of course,\nare unity gain",
    "start": "1209350",
    "end": "1214440"
  },
  {
    "text": "since I put no\namplitude on them. And now to apply the\ntransposition theorem",
    "start": "1214440",
    "end": "1219600"
  },
  {
    "text": "to this network, again, we\ninterchange the-- we reverse the direction of\nall of the arrows,",
    "start": "1219600",
    "end": "1227130"
  },
  {
    "text": "and you can see that I've done\nthat in all of these branches. The delay is likewise reversed.",
    "start": "1227130",
    "end": "1233590"
  },
  {
    "text": "The a is reversed,\nand the b is reversed. I put the input in\nwhere the output was.",
    "start": "1233590",
    "end": "1241600"
  },
  {
    "text": "I take the output out\nwhere the input was, and then the\ntransposition theorem",
    "start": "1241600",
    "end": "1247420"
  },
  {
    "text": "says that this first\norder system implements exactly the same transfer\nfunction as this first order",
    "start": "1247420",
    "end": "1255280"
  },
  {
    "text": "system does. Well, again, we can redraw\nthis by taking again the input",
    "start": "1255280",
    "end": "1263020"
  },
  {
    "text": "at the left hand\nside, the output at the right hand side that\ncorresponds to just taking",
    "start": "1263020",
    "end": "1268270"
  },
  {
    "text": "this and flipping it over. In fact, I could do that\nby taking the view graph and just flipping it\nover, and the result then,",
    "start": "1268270",
    "end": "1276460"
  },
  {
    "text": "just flipping this\nover, is the system that I've indicated here--",
    "start": "1276460",
    "end": "1282700"
  },
  {
    "text": "x of n in at the left\nhand side, y of n out at the right hand side. And now in comparing\nthese two there",
    "start": "1282700",
    "end": "1290260"
  },
  {
    "text": "are some changes\nthat took place. In particular, we notice\nthat the direction of the delayed\nbranch is reversed.",
    "start": "1290260",
    "end": "1300290"
  },
  {
    "text": "Furthermore, whereas this system\nimplemented the pole first followed by the 0, this\nsystem implements the 0 first,",
    "start": "1300290",
    "end": "1310419"
  },
  {
    "text": "followed by the pole. Is this still a\ncanonic structure? Well, of course it's\na canonic structure",
    "start": "1310420",
    "end": "1316200"
  },
  {
    "text": "because it only has one\ndelay, and obviously, in fact,",
    "start": "1316200",
    "end": "1321389"
  },
  {
    "text": "transposing a network\ncouldn't possibly affect the number of\ndelays in the network",
    "start": "1321390",
    "end": "1327250"
  },
  {
    "text": "so that, if we begin\nwith a canonic structure and apply the transposition\ntheorem to it, we must end up with a\ncanonic structure also.",
    "start": "1327250",
    "end": "1335670"
  },
  {
    "text": "Well, it shouldn't be obvious-- or, at least it isn't\nobvious to me by inspection--",
    "start": "1335670",
    "end": "1341100"
  },
  {
    "text": "that this system and this\nsystem have the same transfer function, but in\nfact you can verify",
    "start": "1341100",
    "end": "1347850"
  },
  {
    "text": "that in a very simple\nand straightforward way by simply calculating what the\ntransfer functions of these two",
    "start": "1347850",
    "end": "1354450"
  },
  {
    "text": "systems are. Well, returning then to the\ngeneral canonic structure",
    "start": "1354450",
    "end": "1363240"
  },
  {
    "text": "that we had, we can generate\na second canonic structure",
    "start": "1363240",
    "end": "1370840"
  },
  {
    "text": "by applying the transposition\ntheorem to this structure.",
    "start": "1370840",
    "end": "1376720"
  },
  {
    "text": "That is reversing the\ndirections of all of the arrows, putting the input in here, and\ntaking the output out there,",
    "start": "1376720",
    "end": "1384310"
  },
  {
    "text": "and then to keep our convention\nof the input in at the left, the output out at\nthe right, flip",
    "start": "1384310",
    "end": "1389440"
  },
  {
    "text": "that over to generate a second\ncanonic structure, which is the transpose\nof this structure.",
    "start": "1389440",
    "end": "1396980"
  },
  {
    "text": "And if we do that, the\ntwo changes to focus on",
    "start": "1396980",
    "end": "1402429"
  },
  {
    "text": "is that the direction of the\ndelayed branches is reversed, and furthermore, the system\nwill implement the 0's first,",
    "start": "1402430",
    "end": "1410780"
  },
  {
    "text": "followed by the poles. In fact, the\nnetwork that results",
    "start": "1410780",
    "end": "1416860"
  },
  {
    "text": "is what I've indicated here.",
    "start": "1416860",
    "end": "1422390"
  },
  {
    "text": "This is then the transposed\nversion of the structure",
    "start": "1422390",
    "end": "1427790"
  },
  {
    "text": "that I just showed on\nthe last view graph.",
    "start": "1427790",
    "end": "1433070"
  },
  {
    "text": "The 0's are implemented here. The poles are implemented\nhere, and the direction of the delayed\nbranches is reversed,",
    "start": "1433070",
    "end": "1440090"
  },
  {
    "text": "but again, this is a\ncanonic form structure. So some structures are\ncanonic form, and some aren't.",
    "start": "1440090",
    "end": "1449240"
  },
  {
    "start": "1444000",
    "end": "1546000"
  },
  {
    "text": "The first one, in\nfact, that we developed wasn't canonic form in the\nsense that it had more delays",
    "start": "1449240",
    "end": "1454760"
  },
  {
    "text": "than were absolutely necessary. The last two structures\nthat we've shown are canonic form structures\nin that they have",
    "start": "1454760",
    "end": "1462500"
  },
  {
    "text": "the minimum number of delays. All of these\nstructures are referred",
    "start": "1462500",
    "end": "1467750"
  },
  {
    "text": "to as direct form structures-- direct form because\nthey are structures",
    "start": "1467750",
    "end": "1476120"
  },
  {
    "text": "that involve as\ncoefficients in them the same coefficients that\nare present in the difference",
    "start": "1476120",
    "end": "1485300"
  },
  {
    "text": "equation describing\nthe overall system. Recall again that these were the\ncoefficients in the difference",
    "start": "1485300",
    "end": "1491960"
  },
  {
    "text": "equation which were applied\nto the delayed values of the input, and these were the\ncoefficients in the difference",
    "start": "1491960",
    "end": "1498679"
  },
  {
    "text": "equation that were applied to\ndelayed values of the output. And this structure and\nthe other structures",
    "start": "1498680",
    "end": "1506929"
  },
  {
    "text": "involving the\ncoefficients in that form are often referred to as\ndirect form structures.",
    "start": "1506930",
    "end": "1515320"
  },
  {
    "text": "Well, these structures are fine\nfor implementing the difference equation, although there\nare other structures--",
    "start": "1515320",
    "end": "1523060"
  },
  {
    "text": "actually there are essentially\nan infinite variety of structures, but there are\nsome other structures that",
    "start": "1523060",
    "end": "1529000"
  },
  {
    "text": "in some situations are better\nto use than the direct form",
    "start": "1529000",
    "end": "1535660"
  },
  {
    "text": "structures, and two\nof the more common, which I'd like to introduce\nnow, are the cascade structure",
    "start": "1535660",
    "end": "1542890"
  },
  {
    "text": "and the parallel structure. The cascade structure\nis developed basically",
    "start": "1542890",
    "end": "1553360"
  },
  {
    "start": "1546000",
    "end": "1650000"
  },
  {
    "text": "by factoring the transfer\nfunction of the system into a product of second\norder sections or second order",
    "start": "1553360",
    "end": "1561040"
  },
  {
    "text": "factors. In particular, we have,\nagain, the general form of the transfer function--",
    "start": "1561040",
    "end": "1567520"
  },
  {
    "text": "H of z as the numerator\npolynomial for the 0's, a denominator polynomial\nfor the poles.",
    "start": "1567520",
    "end": "1575830"
  },
  {
    "text": "We can factor the\nnumerator polynomial into a product of first order\npolynomials and the denominator",
    "start": "1575830",
    "end": "1582330"
  },
  {
    "text": "polynomial into a product\nof first order polynomials. In general, of course, these\nfactors will be complex,",
    "start": "1582330",
    "end": "1590160"
  },
  {
    "text": "and these factors\nwill be complex. We can combine together the\ncomplex conjugate 0 pairs",
    "start": "1590160",
    "end": "1598020"
  },
  {
    "text": "and the complex\nconjugate pole pairs so that in fact as a\ngeneral cascade form",
    "start": "1598020",
    "end": "1604200"
  },
  {
    "text": "it's often convenient to think\nof a factorization of each of these polynomials into\nsecond order polynomials rather",
    "start": "1604200",
    "end": "1612570"
  },
  {
    "text": "than first order polynomials. Carrying that out, we end\nup with a representation",
    "start": "1612570",
    "end": "1619260"
  },
  {
    "text": "of the transfer function in a\nform as I've indicated here--",
    "start": "1619260",
    "end": "1625110"
  },
  {
    "text": "a second order numerator\npolynomial and a second order denominator polynomial,\nand, of course,",
    "start": "1625110",
    "end": "1631860"
  },
  {
    "text": "it's the product\nof these that we use to implement\nthis overall transfer",
    "start": "1631860",
    "end": "1637140"
  },
  {
    "text": "function with some\nconstant multiplier out in front, which is required\nessentially because we've",
    "start": "1637140",
    "end": "1644610"
  },
  {
    "text": "normalized these polynomials\nto have a leading coefficient of unity.",
    "start": "1644610",
    "end": "1650610"
  },
  {
    "start": "1650000",
    "end": "1812000"
  },
  {
    "text": "Well, first of all, why\nmight we want to do this?",
    "start": "1650610",
    "end": "1656070"
  },
  {
    "text": "There actually are a variety\nof reasons for perhaps wanting to consider an implementation\nof the transfer function",
    "start": "1656070",
    "end": "1663390"
  },
  {
    "text": "in terms of a cascade\nof lower order systems than the general\nn-th order system.",
    "start": "1663390",
    "end": "1671039"
  },
  {
    "text": "One of the more\ncommon reasons, which I'll have more to\nsay about actually at the end of the\nnext lecture, but I'd",
    "start": "1671040",
    "end": "1678269"
  },
  {
    "text": "like to at least\nallude to it now, is the fact that any time\nwe implement a system",
    "start": "1678270",
    "end": "1685110"
  },
  {
    "text": "on a digital computer or with\nspecial purpose hardware we're faced with the problem that\nthese coefficients can't",
    "start": "1685110",
    "end": "1694020"
  },
  {
    "text": "be represented exactly. If we have, let's say, an\n18 bit fixed point register,",
    "start": "1694020",
    "end": "1699870"
  },
  {
    "text": "we're restricted to\ntruncating or rounding these coefficients to 18 bits.",
    "start": "1699870",
    "end": "1706110"
  },
  {
    "text": "If we implement a filter and\nspecial purpose hardware, we might want the\ncoefficient registers",
    "start": "1706110",
    "end": "1711780"
  },
  {
    "text": "to be as low as 4, or\n5, or 6, or 10 bits. Obviously, the more\nbits, the more expensive",
    "start": "1711780",
    "end": "1719010"
  },
  {
    "text": "the hardware implementation is. And the statement which\nI'll make and justify",
    "start": "1719010",
    "end": "1726030"
  },
  {
    "text": "in a little more detail at\nthe end of the next lecture is that, if I implement\nthe poles of the system",
    "start": "1726030",
    "end": "1734460"
  },
  {
    "text": "through a high order polynomial,\nerrors in the coefficients",
    "start": "1734460",
    "end": "1740669"
  },
  {
    "text": "lead to large errors in\nthe pole locations as compared with an implementation\nof the poles in terms",
    "start": "1740670",
    "end": "1748530"
  },
  {
    "text": "of low order polynomials. That is, basically\nthe sensitivity of pole locations to\nerrors in the coefficients",
    "start": "1748530",
    "end": "1756840"
  },
  {
    "text": "is higher the higher the\norder of the polynomial. Consequently, if that indeed\nis an issue for the filter",
    "start": "1756840",
    "end": "1765120"
  },
  {
    "text": "implementation,\nthen it is better to implement a system as\na cascade of lower order",
    "start": "1765120",
    "end": "1774000"
  },
  {
    "text": "systems or lower\norder polynomials then as one large\nhigh order polynomial.",
    "start": "1774000",
    "end": "1781080"
  },
  {
    "text": "So factoring this\ntransfer function into a cascade of second order\nsections, what this leads",
    "start": "1781080",
    "end": "1790230"
  },
  {
    "text": "to is an implementation\nof the system as a cascade of second order\nsystems, and we, again,",
    "start": "1790230",
    "end": "1798960"
  },
  {
    "text": "have the choice of\nimplementing each second order section in a variety\nof ways corresponding",
    "start": "1798960",
    "end": "1805830"
  },
  {
    "text": "to the various direct forms that\nwe've talked about previously. One implementation, which\nis a canonic direct form,",
    "start": "1805830",
    "end": "1818280"
  },
  {
    "text": "is the implementation\nthat I indicate here, where this is alpha 1,1,\nthe coefficient alpha 1,1,",
    "start": "1818280",
    "end": "1828030"
  },
  {
    "text": "the coefficient beta 1,1. It's a little hard to see where\neach of these coefficients goes, but this is a canonic\nform implementation of a second",
    "start": "1828030",
    "end": "1838350"
  },
  {
    "text": "order section that has\ntwo poles and two 0's. So as I've implemented it, I've\nimplemented it with the poles",
    "start": "1838350",
    "end": "1846180"
  },
  {
    "text": "first, followed by\nthe 0's, and then this is one second order piece that's\nin cascade with the next pole 0",
    "start": "1846180",
    "end": "1855570"
  },
  {
    "text": "pair, with the next\npole 0 pair, et cetera. So this is a cascade of\nsecond order sections,",
    "start": "1855570",
    "end": "1863970"
  },
  {
    "text": "and, of course, I can generate\nother cascade forms was",
    "start": "1863970",
    "end": "1868980"
  },
  {
    "text": "one possibility by just simply\napplying the transposition theorem to this cascade, and\nbasically what would result",
    "start": "1868980",
    "end": "1877830"
  },
  {
    "text": "is that each of\nthese delay branches would be reversed in\ndirection, and the 0's",
    "start": "1877830",
    "end": "1883980"
  },
  {
    "text": "would be implemented first,\nfollowed by the poles. Generally what's meant though\nby the cascade structure,",
    "start": "1883980",
    "end": "1889930"
  },
  {
    "text": "and you can see again that\nthere are a variety of cascade structures depending\non how you choose",
    "start": "1889930",
    "end": "1895260"
  },
  {
    "text": "to implement the pole 0 pairs-- what is generally meant\nby the cascade structure or a cascade structure is an\nimplementation of the transfer",
    "start": "1895260",
    "end": "1904410"
  },
  {
    "text": "function is a cascade\nof second order sections where the second order\nsections can be implemented",
    "start": "1904410",
    "end": "1911130"
  },
  {
    "text": "in a variety of ways. Another structure which is like\nthe cascade structure in that",
    "start": "1911130",
    "end": "1922130"
  },
  {
    "start": "1914000",
    "end": "2279000"
  },
  {
    "text": "it implements the poles in\nterms of low order sections, but is different in\nthe way effectively",
    "start": "1922130",
    "end": "1928880"
  },
  {
    "text": "that it realizes the zeros is\nthe so-called parallel form structure.",
    "start": "1928880",
    "end": "1935840"
  },
  {
    "text": "And the parallel form structure\ncan be implemented by--",
    "start": "1935840",
    "end": "1942403"
  },
  {
    "text": "can be derived by\nexpanding the transfer",
    "start": "1942404",
    "end": "1948170"
  },
  {
    "text": "function of the system in\nterms of a partial fraction expansion.",
    "start": "1948170",
    "end": "1953960"
  },
  {
    "text": "That is, we can expand this\ntransfer function in terms of--",
    "start": "1953960",
    "end": "1959960"
  },
  {
    "text": "and let's assume first\nof all the capital M is less than capital\nN. If capital M were less",
    "start": "1959960",
    "end": "1965570"
  },
  {
    "text": "than capital N, we\ncan expand this simply as a sum of residues together\nwith first order poles,",
    "start": "1965570",
    "end": "1975920"
  },
  {
    "text": "or in general since\nthe poles are complex, we can imagine factoring this\nin terms of first order terms",
    "start": "1975920",
    "end": "1984620"
  },
  {
    "text": "corresponding to the real\npoles, and then second order",
    "start": "1984620",
    "end": "1989740"
  },
  {
    "text": "terms where we combine together\nfirst order terms which are complex conjugates so\nthat we have second order",
    "start": "1989740",
    "end": "1996549"
  },
  {
    "text": "terms of this form. If capital M is\nless than capital N,",
    "start": "1996550",
    "end": "2002289"
  },
  {
    "text": "those are the only\ntwo kinds of terms that would result in a\npartial fraction expansion.",
    "start": "2002290",
    "end": "2008289"
  },
  {
    "text": "If capital M is greater\nthan or equal to capital N, then we'll have additional\nterms corresponding simply",
    "start": "2008290",
    "end": "2016660"
  },
  {
    "text": "to weighted powers\nof z to the minus 1. Now, as in the cascade form,\ngenerally the parallel form",
    "start": "2016660",
    "end": "2025900"
  },
  {
    "text": "structure is\nconsidered to be one where even if we\nhave real poles we",
    "start": "2025900",
    "end": "2033309"
  },
  {
    "text": "combine two of the\nreal poles together to implement the system in\nterms of second order sections.",
    "start": "2033310",
    "end": "2039250"
  },
  {
    "text": "If we do that, then the parallel\nform expansion for the transfer function is what\nI've indicated here,",
    "start": "2039250",
    "end": "2047240"
  },
  {
    "text": "where combining two terms\nof this form together, or, equivalently, looking\nat expansions of this form,",
    "start": "2047240",
    "end": "2055669"
  },
  {
    "text": "we have a numerator polynomial\nimplementing a single 0",
    "start": "2055670",
    "end": "2060940"
  },
  {
    "text": "and a denominator polynomial\nimplementing two poles. And then depending on whether\nM is greater than capital N",
    "start": "2060940",
    "end": "2068500"
  },
  {
    "text": "or not, there might\nbe additional terms involving simple weighted\nvalues of z to the minus--",
    "start": "2068500",
    "end": "2076030"
  },
  {
    "text": "weighted powers of\nz to the minus 1. Let me stress that there are\nsome differences between this",
    "start": "2076030",
    "end": "2083620"
  },
  {
    "text": "and the cascade form obviously. One of the differences\nis that the sections used",
    "start": "2083620",
    "end": "2088899"
  },
  {
    "text": "for implementing the\nfilter consist of one 0 plus two poles,\nand then the output",
    "start": "2088900",
    "end": "2098770"
  },
  {
    "text": "is formed not as a cascade\nof sections of that type, but as a sum of the outputs of\nsections of that type since H",
    "start": "2098770",
    "end": "2107885"
  },
  {
    "text": "of z here is expressed as a\nsum of second order sections, whereas in the\ncascade form it is",
    "start": "2107885",
    "end": "2114130"
  },
  {
    "text": "expressed as a product\nof second order sections. Well, the general filter\nstructure that results I've",
    "start": "2114130",
    "end": "2123990"
  },
  {
    "text": "indicated here for\nthe case in which we have three second\norder sections,",
    "start": "2123990",
    "end": "2129640"
  },
  {
    "text": "and again, I'm assuming that\ncapital M is equal to capital N so that we have one branch,\nwhich is just simply",
    "start": "2129640",
    "end": "2137250"
  },
  {
    "text": "a coefficient branch. If capital M was one\nmore than capital N, we would have in addition\nto that one delay branch.",
    "start": "2137250",
    "end": "2145570"
  },
  {
    "text": "And then we have\nsecond order sections as I've indicated here,\nbut the second order",
    "start": "2145570",
    "end": "2152160"
  },
  {
    "text": "sections implement only a\nsingle 0 and a pair of poles--",
    "start": "2152160",
    "end": "2157589"
  },
  {
    "text": "a single 0 and a pair of poles. Now, why might you want\nto use a parallel form",
    "start": "2157590",
    "end": "2166060"
  },
  {
    "text": "implementation instead of a\ncascade form implementation?",
    "start": "2166060",
    "end": "2171730"
  },
  {
    "text": "Well, there actually\nare several reasons. One of the most common,\nin fact, though,",
    "start": "2171730",
    "end": "2177520"
  },
  {
    "text": "is that sometimes in applying\nfilter design techniques",
    "start": "2177520",
    "end": "2182950"
  },
  {
    "text": "the filter design\nparameters are automatically",
    "start": "2182950",
    "end": "2189040"
  },
  {
    "text": "generated in a parallel form. That is, rather\nthan being generated",
    "start": "2189040",
    "end": "2194110"
  },
  {
    "text": "either as a ratio of polynomials\nor as poles and 0's, it might be generated in terms\nof residues and poles.",
    "start": "2194110",
    "end": "2201640"
  },
  {
    "text": "In that case, of course,\nit's very straightforward to go to a parallel form\nimplementation rather than",
    "start": "2201640",
    "end": "2208089"
  },
  {
    "text": "a cascade form implementation. Basically the difference\nbetween the two forms",
    "start": "2208090",
    "end": "2213550"
  },
  {
    "text": "is that the cascade\nform implements in terms of low order sections\npoles and 0's of the system,",
    "start": "2213550",
    "end": "2222640"
  },
  {
    "text": "whereas the parallel form\nimplementation is effectively",
    "start": "2222640",
    "end": "2228339"
  },
  {
    "text": "an implementation of the\nsystem in terms of the poles. The poles are controlled in\nthe same way as they were",
    "start": "2228340",
    "end": "2234400"
  },
  {
    "text": "in the cascade structure, but\npoles and residues rather than poles and 0's.",
    "start": "2234400",
    "end": "2241690"
  },
  {
    "text": "Again, with the\nparallel form structure, we can generate other\nparallel form structures by considering other ways of\nimplementing the second order",
    "start": "2241690",
    "end": "2249849"
  },
  {
    "text": "sections. One possibility is to apply\nthe transposition theorem, and in fact, there are other\nimplementations of second order",
    "start": "2249850",
    "end": "2256930"
  },
  {
    "text": "sections, and so we can\ntalk about a variety of parallel form structures,\nbut generally when",
    "start": "2256930",
    "end": "2264609"
  },
  {
    "text": "we refer to a parallel form or\nthe parallel form structures, we generally mean a\nparallel realization",
    "start": "2264610",
    "end": "2271360"
  },
  {
    "text": "of poles in terms of\nsecond order sections and a weighting applied that\ncorrespond to the residues.",
    "start": "2271360",
    "end": "2277059"
  },
  {
    "text": " Now, the topic of\ndigital filter structures",
    "start": "2277060",
    "end": "2284420"
  },
  {
    "start": "2279000",
    "end": "2408000"
  },
  {
    "text": "is, in fact, a very\ncomplicated topic. There are a lot of\nother filter structures",
    "start": "2284420",
    "end": "2291710"
  },
  {
    "text": "which can be used for\nimplementing recursive filters, or non-recursive filters, or\na finite impulse response,",
    "start": "2291710",
    "end": "2299540"
  },
  {
    "text": "or infinite impulse response. There are structures referred\nto as continued fraction",
    "start": "2299540",
    "end": "2305180"
  },
  {
    "text": "structures. There are structures referred\nto as interpolation structures. There are structures referred\nto as lattice structures,",
    "start": "2305180",
    "end": "2311930"
  },
  {
    "text": "and ladder\nstructures, et cetera. There are a large variety\nof structures, and in fact,",
    "start": "2311930",
    "end": "2318060"
  },
  {
    "text": "one of the very important\nissues currently is the design",
    "start": "2318060",
    "end": "2323120"
  },
  {
    "text": "and development of\nstructures and the comparison of structures in particular\nfocusing on the trade-offs--",
    "start": "2323120",
    "end": "2330260"
  },
  {
    "text": "that is, the advantages\nand disadvantages-- between various structures. The structures that\nI've introduced here--",
    "start": "2330260",
    "end": "2336859"
  },
  {
    "text": "that is, the direct form,\nthe canonic form, cascade, and parallel-- are the most common\nstructures which are used.",
    "start": "2336860",
    "end": "2346100"
  },
  {
    "text": "They, in fact, tend\nto hold up very well and seem to be for\na variety of reasons",
    "start": "2346100",
    "end": "2353270"
  },
  {
    "text": "some of the more\nadvantageous structures. While I've presented this\ndiscussion from a general point",
    "start": "2353270",
    "end": "2362240"
  },
  {
    "text": "of view and tended to focus\non infinite impulse response transfer functions,\nobviously these structures",
    "start": "2362240",
    "end": "2370790"
  },
  {
    "text": "can be applied to finite impulse\nresponse or infinite impulse response systems.",
    "start": "2370790",
    "end": "2377600"
  },
  {
    "text": "In the next lecture,\nI'd like to continue the discussion of structures\nby focusing specifically",
    "start": "2377600",
    "end": "2385550"
  },
  {
    "text": "on finite impulse\nresponse systems and directing our attention to\nsome specific structures that",
    "start": "2385550",
    "end": "2394400"
  },
  {
    "text": "apply only to find\nan impulse response and take advantage of\nsome particular aspects",
    "start": "2394400",
    "end": "2400460"
  },
  {
    "text": "of finite impulse\nresponse systems. Thank you. ",
    "start": "2400460",
    "end": "2408303"
  }
]