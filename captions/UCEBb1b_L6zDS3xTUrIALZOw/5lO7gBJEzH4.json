[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": " PROFESSOR: Today, we are\ntalking about the local behavior",
    "start": "0",
    "end": "6850"
  },
  {
    "text": "of a crease pattern. So you take some crease\npattern for some flat folding--",
    "start": "6850",
    "end": "13240"
  },
  {
    "text": "we're thinking about\nflat foldability. This is a foldability question. I give you a crease\npattern like this.",
    "start": "13240",
    "end": "18293"
  },
  {
    "text": "I want to know, does it fold\nflat, like this one does. And we're studying\nwhat happens locally",
    "start": "18293",
    "end": "25660"
  },
  {
    "text": "right around a single vertex. So I didn't mention\ngraph terminology.",
    "start": "25660",
    "end": "30869"
  },
  {
    "text": "It's probably useful\nto mention that. These corners-- where all the\nedges come together-- those are vertices.",
    "start": "30870",
    "end": "36270"
  },
  {
    "text": "These triangles-- or in\ngeneral, some regions divided by the\ncreases-- we call faces. ",
    "start": "36270",
    "end": "44060"
  },
  {
    "text": "If we just sort of imagine\ncutting a little disk around that vertex and\nseeing how it behaves,",
    "start": "44060",
    "end": "50769"
  },
  {
    "text": "we get a nice circular piece of\npaper with some crease pattern. And we want to understand when\nthose things fold flat and when",
    "start": "50770",
    "end": "58000"
  },
  {
    "text": "they don't. Sometimes they do,\nsometimes they don't. This is kind of like a one\ndimensional folding problem.",
    "start": "58000",
    "end": "65700"
  },
  {
    "text": "So let me write some\nstuff about that. ",
    "start": "65700",
    "end": "76130"
  },
  {
    "start": "69000",
    "end": "492000"
  },
  {
    "text": "So we get what we call single\nvertex crease patterns. ",
    "start": "76130",
    "end": "90860"
  },
  {
    "text": "So something like--\nthis is the example I have made-- just\nsomething like that.",
    "start": "90860",
    "end": "97659"
  },
  {
    "text": "That should be flat foldable.  So we think of having\na disk of paper.",
    "start": "97660",
    "end": "108270"
  },
  {
    "text": "It doesn't really\nmatter, but it's going to be easier\nto reason about and think about a disk of paper.",
    "start": "108270",
    "end": "113790"
  },
  {
    "text": "Really, we just mean some small\nregion around that vertex. There's obviously one vertex\nin the crease pattern.",
    "start": "113790",
    "end": "119800"
  },
  {
    "text": "Let's say we have n creases\nemanating from one vertex.",
    "start": "119800",
    "end": "125416"
  },
  {
    "start": "125416",
    "end": "136510"
  },
  {
    "text": "This pattern is\ngoing to be defined by some sequence of angles.",
    "start": "136510",
    "end": "141640"
  },
  {
    "start": "141640",
    "end": "158560"
  },
  {
    "text": "In general, theta\n1 up to theta n. If there are n creases, there\nwill be n angles between them,",
    "start": "158560",
    "end": "166060"
  },
  {
    "text": "say in clockwise order. And let's see.",
    "start": "166060",
    "end": "173000"
  },
  {
    "text": "When we fold this thing\nflat-- like in this picture--",
    "start": "173000",
    "end": "180330"
  },
  {
    "text": "we take this disk. We fold it along all\nof those creases.",
    "start": "180330",
    "end": "186330"
  },
  {
    "text": "What I'd like to\nfocus on is what happens to the\nboundary of the paper. So there's this outer circle.",
    "start": "186330",
    "end": "191870"
  },
  {
    "text": "The boundary is a circle. And locally, if you look\nat one of these creases, it's like folding the\ncircle in half onto itself.",
    "start": "191870",
    "end": "199950"
  },
  {
    "text": "And when you make all of these\ncreases, if you're successful, you end up folding the circle\nonto a portion of the circle.",
    "start": "199950",
    "end": "207715"
  },
  {
    "text": "So if you look at\nthis boundary-- which is a little hard to see. Why don't I trace it?",
    "start": "207716",
    "end": "212959"
  },
  {
    "text": "It's going to do\nsomething like this. ",
    "start": "212960",
    "end": "223400"
  },
  {
    "text": "So this is what the 3D\nthing looks like blown up a little bit-- and I changed\nthe angles a little bit.",
    "start": "223400",
    "end": "230851"
  },
  {
    "text": "But this is what a flat\nfolding would look like. And I'm really just\nfocusing on how the circle maps\naround this circle.",
    "start": "230851",
    "end": "240270"
  },
  {
    "text": "So a flat folding of a disk also\nfolds a circle onto a circle.",
    "start": "240270",
    "end": "248826"
  },
  {
    "text": "So we have a flat folding on one\nof these single vertex crease",
    "start": "248826",
    "end": "254630"
  },
  {
    "text": "patterns, we get a folding\nof a circle onto a circle.",
    "start": "254630",
    "end": "268250"
  },
  {
    "text": "This is nice, because\ncircles are one dimensional. And last class, we talked about\nfolding one dimensional line",
    "start": "268250",
    "end": "274710"
  },
  {
    "text": "segments. A circle is just a little\nbit more complicated. It's different topology.",
    "start": "274710",
    "end": "279740"
  },
  {
    "text": "But we can use a lot\nof the same mindset, at least, as we did for folding\nline segments onto the line.",
    "start": "279740",
    "end": "286180"
  },
  {
    "text": "In particular, you can see,\nyeah, this is kind of circular. But you could also imagine\nunrolling it a little bit",
    "start": "286180",
    "end": "293860"
  },
  {
    "text": "and making it straight. Something like this. So that it lies on\na straight line,",
    "start": "293860",
    "end": "300310"
  },
  {
    "text": "if you just unroll that circle. So you also get a folding\nof a circle in some sense",
    "start": "300310",
    "end": "306870"
  },
  {
    "text": "onto a line by unrolling. ",
    "start": "306870",
    "end": "314720"
  },
  {
    "text": "Now, at this point, I want to\nmention a slight issue here. ",
    "start": "314720",
    "end": "320960"
  },
  {
    "text": "I mean for this\nunrolling to work-- if you're taking a circle\nlike this-- in particular,",
    "start": "320960",
    "end": "329500"
  },
  {
    "text": "you must make at least one\nfold for this to be possible. Because right now, if I\nhaven't folded anything,",
    "start": "329500",
    "end": "335080"
  },
  {
    "text": "I just have a big circle,\nI can't unroll circle onto a line. I haven't collapsed it. Yet here, I've made\nit small enough",
    "start": "335080",
    "end": "341970"
  },
  {
    "text": "that it only occupies a\nportion of the entire circle. And so I can unroll it. So this is true, as long as\nI make at least one fold.",
    "start": "341970",
    "end": "349139"
  },
  {
    "text": " OK. Technically, I need to\nassume another thing, which",
    "start": "349140",
    "end": "355840"
  },
  {
    "text": "is that this thing came\nfrom a flat piece of paper. I said there were these angles.",
    "start": "355840",
    "end": "361640"
  },
  {
    "text": "And what I intended to mean is\nthat the sum of those angles",
    "start": "361640",
    "end": "366790"
  },
  {
    "text": "is 360 degrees, as it is\nin a flat piece of paper.",
    "start": "366790",
    "end": "373190"
  },
  {
    "text": "But I'm not always going\nto require this assumption. It's what we care\nabout for thinking about a crease pattern\nof a flat piece of paper",
    "start": "373190",
    "end": "380556"
  },
  {
    "text": "and we look at each vertex. This will be true. But when we reason about these\nsingle vertex crease patterns,",
    "start": "380556",
    "end": "387789"
  },
  {
    "text": "it's really useful to think\nabout, sort of in the middle, this could get smaller.",
    "start": "387790",
    "end": "393130"
  },
  {
    "text": "So for example, you have\na pattern like this. Let's say I just take these\ntwo creases on the bottom",
    "start": "393130",
    "end": "398880"
  },
  {
    "text": "and I fold a crimp. Because I know a cramp is\nkind of a good thing to do. So now I have what's\ncalled a cone of paper.",
    "start": "398880",
    "end": "406539"
  },
  {
    "text": "The sum of the angles--\nthere's two angles here, this one and this one. Each one looks like\n270-- no, not 270, 135?",
    "start": "406540",
    "end": "415920"
  },
  {
    "text": "In total, it's 270. So the total angle there\nis now less than 360. This is what we\ncall a convex cone.",
    "start": "415920",
    "end": "423660"
  },
  {
    "text": "So if you relax this\nconstraint to allow less than",
    "start": "423660",
    "end": "429640"
  },
  {
    "text": "or equal to 360, then\nwe get a convex cone. ",
    "start": "429640",
    "end": "436729"
  },
  {
    "text": "And today, I only want to talk\nabout flat paper and convex cones. We need this for the\ninduction, essentially--",
    "start": "436730",
    "end": "441990"
  },
  {
    "text": "for proving things\nabout the flat case. In the textbook-- if you look\nat this chapter on single vertex",
    "start": "441990",
    "end": "447740"
  },
  {
    "text": "crease patterns-- we\nalso prove or study the case where the sum of the\nangles is greater than 360,",
    "start": "447740",
    "end": "453170"
  },
  {
    "text": "which you could never\nmake from flat paper. But hey, it's fun\nto think about. It's a natural generalization.",
    "start": "453170",
    "end": "458740"
  },
  {
    "text": "And all the things\nthat we do here, you can generalize\nto that situation. It's just a little bit harder.",
    "start": "458740",
    "end": "463970"
  },
  {
    "start": "463970",
    "end": "471780"
  },
  {
    "text": "So what does it take to\nfold a circle onto a line?",
    "start": "471780",
    "end": "477420"
  },
  {
    "text": "In this situation\nof a convex cone, where we make at least\none fold, our folding",
    "start": "477420",
    "end": "482454"
  },
  {
    "text": "is going to lie along a\nportion of the circle. We can unroll it\na little bit, get something lying on\na straight line.",
    "start": "482454",
    "end": "488270"
  },
  {
    "text": " It's kind of like folding a line\nsegment onto a straight line,",
    "start": "488270",
    "end": "496479"
  },
  {
    "start": "492000",
    "end": "714000"
  },
  {
    "text": "if it was flat folding of one\ndimensional pieces of paper. ",
    "start": "496480",
    "end": "508220"
  },
  {
    "text": "But there's a lot\nof differences. I mean, they are similar. But a lot of the things\nwe proved last time",
    "start": "508220",
    "end": "514469"
  },
  {
    "text": "do not hold in the\ncase of circular paper. So I have a bunch of them here.",
    "start": "514470",
    "end": "520400"
  },
  {
    "text": "So one problem-- you\nmay recall before, if we had a line segment and\nwe put an arbitrary crease",
    "start": "520400",
    "end": "525650"
  },
  {
    "text": "pattern, then we could just\nassign a mountain valley assignment, alternating\nmountain valley.",
    "start": "525650",
    "end": "531089"
  },
  {
    "text": "And that would always\nfold flat, no collisions. OK. In this world of having a\ncircular piece of paper,",
    "start": "531090",
    "end": "538480"
  },
  {
    "text": "that's no longer true. For example, if you have\nthis kind of crease pattern",
    "start": "538480",
    "end": "544570"
  },
  {
    "text": "on a circle or in\nthe disk, it would look like this,\nthose two creases.",
    "start": "544570",
    "end": "549880"
  },
  {
    "text": "You can't fold that thing flat. It's not going to work. We'll see exactly what\nyou need to forbid",
    "start": "549880",
    "end": "556300"
  },
  {
    "text": "for that to make sense. Another example is\nsomething like this.",
    "start": "556300",
    "end": "565500"
  },
  {
    "start": "565500",
    "end": "571720"
  },
  {
    "text": "I mean, if I tried to draw this\nin the line, what's happening is I have a short segment and\nthen I have a long segment.",
    "start": "571720",
    "end": "578550"
  },
  {
    "text": "So the problem is\nthose ends don't meet. But even when the ends\nmeet-- like in this picture, imagine these are\nvertically aligned--",
    "start": "578550",
    "end": "585660"
  },
  {
    "text": "if I do this alternating\nmountain valley pattern-- mountain valley assignment--\nI can't join these ends",
    "start": "585660",
    "end": "592010"
  },
  {
    "text": "and make a circle, because that\nwould collide with everything. So this thing actually\ndoes have a flat folding",
    "start": "592010",
    "end": "599220"
  },
  {
    "text": "starting from a circle. And I'm not going to try\nto un-map it to a circle. It does fold, but not like that.",
    "start": "599220",
    "end": "605170"
  },
  {
    "text": " Not with that alternating\nmountain valley pattern.",
    "start": "605170",
    "end": "611620"
  },
  {
    "text": "There are other annoying things. Let me tell you one\nmore on the proof side.",
    "start": "611620",
    "end": "619660"
  },
  {
    "text": "Last time, we had\na lemma that said,",
    "start": "619660",
    "end": "626149"
  },
  {
    "text": "if your crease\npattern is mingling-- which still is a\nmeaningful notion here-- then you have a crimp, or\nan end fold in that case.",
    "start": "626150",
    "end": "634336"
  },
  {
    "text": "Here, of course, we\ndon't have any end folds. Here, we also do not\nget this implication. Mingling does not imply\nthe existence of a crimp.",
    "start": "634336",
    "end": "640450"
  },
  {
    "text": "And where the proof breaks\ndown is if you have-- so if you remember, our\nparentheses from last time--",
    "start": "640450",
    "end": "648720"
  },
  {
    "text": "we had this kind of pattern. And we said, well, you\nkeep going and either",
    "start": "648720",
    "end": "656420"
  },
  {
    "text": "on the left side, you have\na beginning open paren or on the right side you have\na closing round parenthesis.",
    "start": "656420",
    "end": "662406"
  },
  {
    "text": "In either case, you've\ngot an end fold. Now, this can actually\nhappen in a circle. And so you have\nnothing you can do.",
    "start": "662406",
    "end": "667949"
  },
  {
    "text": "So you could have this pattern. There would be no crimp. And probably, in that case,\nyou would not be flat foldable,",
    "start": "667949",
    "end": "674699"
  },
  {
    "text": "but in particular,\nthis implication fails. So we have to do more work. But we're going to get\nthe same kind of result",
    "start": "674700",
    "end": "681280"
  },
  {
    "text": "that, in linear\ntime, we can tell whether one of these\nthings folds flat. ",
    "start": "681280",
    "end": "688219"
  },
  {
    "text": "So that's good news. So last time, telling whether\na crease pattern folded flat",
    "start": "688219",
    "end": "697890"
  },
  {
    "text": "was trivial. The answer was always yes. And now, it's not so trivial. So let's start\nwith characterizing",
    "start": "697890",
    "end": "702910"
  },
  {
    "text": "crease patterns that fold flat. Then we will go to mountain\nvalley patterns that fold flat. ",
    "start": "702910",
    "end": "736766"
  },
  {
    "start": "714000",
    "end": "899000"
  },
  {
    "text": "It'd be great if I\ncould just say that, but I mean here, of\ncourse, single vertex. ",
    "start": "736766",
    "end": "746040"
  },
  {
    "text": "So I give you one of\nthese sequence of angles. Let's say it sums\nto 360 or less.",
    "start": "746040",
    "end": "752050"
  },
  {
    "text": "When is it going to\nbe flat foldable? And the answer is very simple. ",
    "start": "752050",
    "end": "759620"
  },
  {
    "text": "Let me write it down. ",
    "start": "759620",
    "end": "773970"
  },
  {
    "text": "This thing is going to be\nflat foldable if and only if the sum of the odd\nangles is equal to the sum",
    "start": "773970",
    "end": "788424"
  },
  {
    "text": "of the even angles. ",
    "start": "788424",
    "end": "796130"
  },
  {
    "text": "And, yeah, I'm implicitly\nassuming and requiring here that n is even.",
    "start": "796130",
    "end": "802290"
  },
  {
    "text": "That's something we'll prove. So n is actually even and\nminus 1 is going be odd.",
    "start": "802290",
    "end": "807760"
  },
  {
    "text": "And if you happen\nto have started with a flat piece of paper--\nfor the sum of all these things",
    "start": "807760",
    "end": "813720"
  },
  {
    "text": "is 360-- then of course, if\nyou have them evenly divided, this sum will be 180 degrees.",
    "start": "813720",
    "end": "820950"
  },
  {
    "text": "But if you started with the\nconvex cone, it'll be smaller. ",
    "start": "820950",
    "end": "828370"
  },
  {
    "text": "For this reason, a lot of\npeople-- or some people call this the 180 degree\nproperty, or the pie property--",
    "start": "828370",
    "end": "833850"
  },
  {
    "text": "if you like to think in\nradians instead of degrees. And we can do a\nlittle example here.",
    "start": "833850",
    "end": "840779"
  },
  {
    "text": "This guy-- this crease pattern--\nhas a 90 degree angle here.",
    "start": "840780",
    "end": "848480"
  },
  {
    "text": "And it has a 90 degree\nangle down here. So the sum of those two is 180. Those are alternating angles,\ndifferent parity classes.",
    "start": "848480",
    "end": "856209"
  },
  {
    "text": "This is 45. This is the complement, 135.",
    "start": "856210",
    "end": "861740"
  },
  {
    "text": "And those also sum\nto 180, of course. One does only if the other does. So it's flat foldable.",
    "start": "861740",
    "end": "867760"
  },
  {
    "text": "We're golden. Something like this\nis bad, because I",
    "start": "867760",
    "end": "873140"
  },
  {
    "text": "mean it's an even number. But the odd angles do not equal\nthe sum of the even angles.",
    "start": "873140",
    "end": "879240"
  },
  {
    "text": "One's clearly bigger. And this is a general property. This is also called\nKawasaki's theorem",
    "start": "879240",
    "end": "885000"
  },
  {
    "text": "or Kawasaki-Justin's theorem. They proved it in 1989.",
    "start": "885000",
    "end": "890920"
  },
  {
    "text": "This is pretty\nmuch the beginning of origami mathematics.",
    "start": "890920",
    "end": "896050"
  },
  {
    "text": "So let's prove it. There's two things to prove. One is that any flat\nfoldable crease pattern",
    "start": "896050",
    "end": "902390"
  },
  {
    "start": "899000",
    "end": "1154000"
  },
  {
    "text": "has this property,\nwhich is pretty easy. And the other, which\nis a little bit harder, is that if you\nhave this property, you really are flat foldable.",
    "start": "902390",
    "end": "908760"
  },
  {
    "text": "That's the full\ncharacterization. ",
    "start": "908760",
    "end": "914090"
  },
  {
    "text": "So let's start with\nthe easy direction. If you're flat foldable,\nyou must have that sum.",
    "start": "914090",
    "end": "919930"
  },
  {
    "text": " OK.",
    "start": "919930",
    "end": "925100"
  },
  {
    "text": "So it's all about thinking\nwhat happens at a crease. So we're thinking\nabout the boundary",
    "start": "925100",
    "end": "930920"
  },
  {
    "text": "of this piece of paper. We're thinking about the circle. And what's happening on\nthe circle as you travel,",
    "start": "930920",
    "end": "940260"
  },
  {
    "text": "say counterclockwise\nfor some amount of time, that would\nbe first angle.",
    "start": "940260",
    "end": "945450"
  },
  {
    "text": "Then you make a fold. It's either a\nmountain or valley. At this point, we don't care. Either way, you turn around--\nmaybe you turn around this way,",
    "start": "945450",
    "end": "952250"
  },
  {
    "text": "or you turn around this way. But in terms as your\ntravel along a circle-- so we went theta 1\ncounterclockwise.",
    "start": "952250",
    "end": "959170"
  },
  {
    "text": "Now we're going to\ngo theta 2 clockwise; then we're going to go theta\n3 counterclockwise, and so on.",
    "start": "959170",
    "end": "965459"
  },
  {
    "text": "We keep alternating\nback and forth. It's much easier to\nthink drawn a line. So we go to the right, theta 1.",
    "start": "965460",
    "end": "972759"
  },
  {
    "text": "Then we go to the left, theta 2. Then we go to the\nright, theta 3.",
    "start": "972760",
    "end": "981040"
  },
  {
    "text": "And I don't know about\nthe layering here. I'm just drawing it in\nterms of horizontal travel. The y-coordinate means nothing.",
    "start": "981040",
    "end": "986710"
  },
  {
    "text": " In order for this thing\nto be a flat folding--",
    "start": "986710",
    "end": "994050"
  },
  {
    "text": "to be a valid folding\nof a circle of paper-- these guys have to have\nthe same x-coordinate.",
    "start": "994050",
    "end": "1001150"
  },
  {
    "text": "So I don't know-- I mean,\nthe y-coordinates, they also have to work out. But we're not thinking\nabout the y-coordinates.",
    "start": "1001150",
    "end": "1006238"
  },
  {
    "text": "We're just thinking\nabout x travel. We've got to get\nback to where we started if we're\nfolding a circle.",
    "start": "1006238",
    "end": "1011770"
  },
  {
    "text": "That's it. So how much total travel\ndo we do, in a sign sense?",
    "start": "1011770",
    "end": "1017170"
  },
  {
    "text": "How much do we go right? Well, we go theta\n1 to the right. Then we go theta 2\nto the left, which is like going negative\ntheta 2 to the right.",
    "start": "1017170",
    "end": "1025030"
  },
  {
    "text": "And then we go through\ntheta 3 to the right. Then we go negative\ntheta 4 to the right.",
    "start": "1025030",
    "end": "1030470"
  },
  {
    "text": "And you add up this alternating\nsummation that must equal 0. ",
    "start": "1030470",
    "end": "1037959"
  },
  {
    "text": "The other thing that I should\nsay is that n has to be even.",
    "start": "1037960",
    "end": "1043619"
  },
  {
    "text": "This is maybe obvious\nat this point. But we're supposed to alternate.",
    "start": "1043619",
    "end": "1048840"
  },
  {
    "text": "Every time we hit a crease,\nwe have to change direction. And so in the end, it's\nimportant that after theta 4,",
    "start": "1048840",
    "end": "1056390"
  },
  {
    "text": "we change direction\nto visit theta 1. If they were aligned-- like\nif theta 4 went over here",
    "start": "1056390",
    "end": "1063490"
  },
  {
    "text": "and then theta 5 went\nlike that, and there was an odd number of\ncreases, this would be bad.",
    "start": "1063490",
    "end": "1070232"
  },
  {
    "text": "Even though they're lined\nup, there's no crease here. You just went straight\nfrom theta 5 theta 1.",
    "start": "1070232",
    "end": "1075419"
  },
  {
    "text": "You're supposed to change\ndirection every crease. So also, n is even to\nalternate directions.",
    "start": "1075419",
    "end": "1082549"
  },
  {
    "start": "1082550",
    "end": "1089650"
  },
  {
    "text": "Question? AUDIENCE: Oh, no. You already-- PROFESSOR: All right, good.",
    "start": "1089650",
    "end": "1094670"
  },
  {
    "text": "Clear? This is pretty easy, once you\nrealize the angles correspond to x-coordinates in\nthis linear space.",
    "start": "1094670",
    "end": "1100820"
  },
  {
    "start": "1100820",
    "end": "1106470"
  },
  {
    "text": "So why is this enough? In order to show\nthat this property is enough for flat\nfoldability, we need",
    "start": "1106470",
    "end": "1113610"
  },
  {
    "text": "to actually worry about the\nstacking order of these edges. We need to worry about\nthe y-coordinates. We need to make sure that\nthey can avoid collision",
    "start": "1113610",
    "end": "1120309"
  },
  {
    "text": "with some mountain\nvalley assignment. The good news is we're free\nto use whatever mountains and valleys we want. We can stack things\nhowever we want.",
    "start": "1120309",
    "end": "1126030"
  },
  {
    "text": "We just need to find\nsome valid state. And our intuition, from\nthe one dimensional case, was we should try alternating\nmountains and valleys.",
    "start": "1126030",
    "end": "1133790"
  },
  {
    "text": "That seemed like a good thing. It avoided collisions for\nan open piece of paper-- for a line segment.",
    "start": "1133790",
    "end": "1140220"
  },
  {
    "text": "Of course, we know\nthat's not enough. Here-- somewhere--\nI drew this example.",
    "start": "1140220",
    "end": "1146700"
  },
  {
    "text": "So it's alternating\nin the middle, and then that last\ncrease is a problem.",
    "start": "1146700",
    "end": "1152309"
  },
  {
    "text": "But that's all we need to fix. It turns out it's not so hard. So we have a nice circle.",
    "start": "1152310",
    "end": "1160460"
  },
  {
    "start": "1154000",
    "end": "1434000"
  },
  {
    "text": "What I'd like to do\nis cut that circle. So here, I sort of cut\nit and thought about it as a line segment and\nthen I wanted to rejoin.",
    "start": "1160460",
    "end": "1167740"
  },
  {
    "text": "OK. I'm going to be careful\nabout where I cut it. ",
    "start": "1167740",
    "end": "1189284"
  },
  {
    "text": "OK, I want to cut at an\nextreme left or extreme right. It doesn't matter. We can see here the cut\nended up being in the middle.",
    "start": "1189284",
    "end": "1195799"
  },
  {
    "text": "That's bad. So how do I fix it? ",
    "start": "1195800",
    "end": "1201530"
  },
  {
    "text": "What does extreme mean? How do I tell--\ngiven a circle, it's a little hard to say\nwhat extreme means, because it's circular.",
    "start": "1201530",
    "end": "1207760"
  },
  {
    "text": "But if I take a\npicture like this, I've already drawn it\nwith nice x-coordinates-- I don't know about the\ny-coordinates yet-- I say,",
    "start": "1207760",
    "end": "1213330"
  },
  {
    "text": "oh that's bad. My cut point ended\nup being non-extreme. Well, this is extreme.",
    "start": "1213330",
    "end": "1218440"
  },
  {
    "text": "So cut here instead. So what that means is\nredraw this picture",
    "start": "1218440",
    "end": "1224809"
  },
  {
    "text": "with this being the cut point. So maybe, this is the beginning. So we go like that again\nand now we wrap around.",
    "start": "1224810",
    "end": "1233470"
  },
  {
    "text": "So now we have this segment. And now we have this segment. And lo and behold,\nit remained extreme.",
    "start": "1233470",
    "end": "1240430"
  },
  {
    "text": "And this is always true. You can do this sort\nof cut and rejoin the ends that were\nmessed up before.",
    "start": "1240430",
    "end": "1246392"
  },
  {
    "text": "And you'll preserve\nthe x-coordinates. The x-coordinates\naren't changing when you do this kind\nof transformation. So there's a clear leftmost\nand there's a clear rightmost.",
    "start": "1246392",
    "end": "1254029"
  },
  {
    "text": "You pick either one,\nyou cut there instead. And now we have\nthis nice property that it's easy to join\nthe ends, because it's",
    "start": "1254030",
    "end": "1261330"
  },
  {
    "text": "as far left as you can go. There can't be anything\nthat penetrates, because that would\nbe farther left. ",
    "start": "1261330",
    "end": "1268820"
  },
  {
    "text": "Let me write down some\nwords corresponding to that. So once we cut at\nthis extreme crease,",
    "start": "1268820",
    "end": "1275770"
  },
  {
    "text": "you can fold this\n1D segment just",
    "start": "1275770",
    "end": "1282310"
  },
  {
    "text": "like we used to be able to.  So we can fold it flat\nusing the accordion fold,",
    "start": "1282310",
    "end": "1291549"
  },
  {
    "text": "alternating mountain and valley. We know that works.",
    "start": "1291550",
    "end": "1296730"
  },
  {
    "text": "And then all we need to show\nis that the two ends can join. ",
    "start": "1296730",
    "end": "1304510"
  },
  {
    "text": "Those ends are the two\ncopies of the cut crease",
    "start": "1304510",
    "end": "1314819"
  },
  {
    "text": "that we did in this first step. ",
    "start": "1314819",
    "end": "1320190"
  },
  {
    "text": "We need two things. One is that they are\naligned and that's",
    "start": "1320190",
    "end": "1325670"
  },
  {
    "text": "where we need this condition--\nthat the sum of the odd angles equals the sum of even angles,\nwhich is the same as saying",
    "start": "1325670",
    "end": "1332980"
  },
  {
    "text": "the alternating sum\nis equal to zero. That tells us that\nwhatever we do, the x-coordinates are\nlined up at the end.",
    "start": "1332980",
    "end": "1340650"
  },
  {
    "text": "So they are aligned by the\nassumption that we made here. And you can join\nwithout crossing.",
    "start": "1340650",
    "end": "1351220"
  },
  {
    "text": " So this is a statement\nabout y-coordinates.",
    "start": "1351220",
    "end": "1357240"
  },
  {
    "text": "And we know it's OK, because\nit's at the left extreme. So by this choice\nof the proper cut,",
    "start": "1357240",
    "end": "1363292"
  },
  {
    "text": "there could be other things\nthat come right to the boundary here, but that's considered OK. That's not crossing,\nthat just touching.",
    "start": "1363292",
    "end": "1370399"
  },
  {
    "text": "Nothing can go farther\nleft because it was the left extreme. ",
    "start": "1370400",
    "end": "1376504"
  },
  {
    "text": "That's the end of the proof. Any questions about that? That's Kawasaki's\ntheorem-- Kawasaki-Justin.",
    "start": "1376504",
    "end": "1385060"
  },
  {
    "text": "I would mention just for fun--\nthis is sort of classic-- if you allow one of\nthese-- a non-convex cone,",
    "start": "1385060",
    "end": "1395410"
  },
  {
    "text": "where you have more than\n360 degrees of material-- this statement is not true.",
    "start": "1395410",
    "end": "1400550"
  },
  {
    "text": "And there's one other\nsituation which can happen, which is that the alternating\nsum of angles is not zero,",
    "start": "1400550",
    "end": "1406530"
  },
  {
    "text": "but it's plus or minus\n360 degrees, which is fun. And you can see examples\nof that in the book.",
    "start": "1406530",
    "end": "1412550"
  },
  {
    "text": " All right.",
    "start": "1412550",
    "end": "1417670"
  },
  {
    "text": "So obviously, if\nyou want to tell whether a crease pattern-- or a\nsingle vertex is flat foldable, you just compute this\nthing in linear time",
    "start": "1417670",
    "end": "1424410"
  },
  {
    "text": "and you know yes or no. So crease patterns\nare pretty easy-- just",
    "start": "1424410",
    "end": "1431289"
  },
  {
    "text": "have one extra condition. What about mountain\nvalley assignments? Last time, we looked at\nmountain valley assignments",
    "start": "1431290",
    "end": "1438100"
  },
  {
    "start": "1434000",
    "end": "1751000"
  },
  {
    "text": "and we showed that crimps\nand end folds were always enough to fold any mountain\nvalley assignment that's",
    "start": "1438100",
    "end": "1443380"
  },
  {
    "text": "out there. That will continue\nto be true here, except now we don't\nhave end folds.",
    "start": "1443380",
    "end": "1449460"
  },
  {
    "text": "Now, it's crimps all the way. What does it mean? ",
    "start": "1449460",
    "end": "1456750"
  },
  {
    "text": "So that is the flat foldable\nmountain valley patterns.",
    "start": "1456750",
    "end": "1465725"
  },
  {
    "start": "1465725",
    "end": "1474267"
  },
  {
    "text": "We're going to prove\nthat crimps are enough, but before we get\nthere, I need a bunch of sort of warm up facts about\nvalid mountain valley patterns.",
    "start": "1474267",
    "end": "1483570"
  },
  {
    "text": "The first thing is just\ncounting mountains and valleys.",
    "start": "1483570",
    "end": "1489529"
  },
  {
    "text": "So even if you play with a\nsimple example like this one, you see it as three\nmountains and one valley",
    "start": "1489530",
    "end": "1496420"
  },
  {
    "text": "or three valleys\nand one mountain. In fact, if you have\na degree 4 vertex,",
    "start": "1496420",
    "end": "1502525"
  },
  {
    "text": "with four creases\nemanating from that point, those are your only choices. You could try, for example,\nmaking it all valleys,",
    "start": "1502525",
    "end": "1509769"
  },
  {
    "text": "and it-- I mean,\nyou can't do it. It's hard to demonstrate.",
    "start": "1509770",
    "end": "1516110"
  },
  {
    "text": "You could try making it two\nmountains and two valleys. Maybe I try to do\nmountain mountain here",
    "start": "1516110",
    "end": "1521330"
  },
  {
    "text": "and then somehow this is going\nto be valley valley there. It's no good.",
    "start": "1521330",
    "end": "1526740"
  },
  {
    "text": "But what's happening here is\nthat the number of mountains",
    "start": "1526740",
    "end": "1533620"
  },
  {
    "text": "and the number valleys\nmust differ by exactly two.",
    "start": "1533620",
    "end": "1539455"
  },
  {
    "text": "It doesn't matter who's bigger. So the difference could be\nplus 2 or minus 2, because you can always flip over and negate\nthat difference, swapping",
    "start": "1539455",
    "end": "1547879"
  },
  {
    "text": "mountains for valleys. But they always have to\ndiffer by exactly two. ",
    "start": "1547880",
    "end": "1554590"
  },
  {
    "text": "Why is that? Well, this is--\nyeah, we're again",
    "start": "1554590",
    "end": "1561580"
  },
  {
    "text": "going to think of a\npicture like this. We have horizontal travel\naccording to the theta i's.",
    "start": "1561580",
    "end": "1567140"
  },
  {
    "text": "We're also going to think\nabout the vertical picture. If this thing is flat\nfoldable-- so I'm assuming,",
    "start": "1567140",
    "end": "1572900"
  },
  {
    "text": "it's flat foldable--\nthen this must happen. This is called Maekawa's\ntheorem, by the way.",
    "start": "1572900",
    "end": "1579850"
  },
  {
    "text": "It was proved by Jun Maekawa\nin 1986-- a little earlier.",
    "start": "1579850",
    "end": "1589740"
  },
  {
    "text": "Also proved by Jacques\nJustin around the same time-- back before we were good at\ninternet and communication",
    "start": "1589740",
    "end": "1597480"
  },
  {
    "text": "and whatnot. And there were little pockets\nof mathematical origamists",
    "start": "1597480",
    "end": "1602650"
  },
  {
    "text": "and they found each\nother basically in '89, when there was the-- '89\nwas the first origami science",
    "start": "1602650",
    "end": "1611730"
  },
  {
    "text": "math and education\nconference-- started bringing these people together. The last one was this summer.",
    "start": "1611730",
    "end": "1617270"
  },
  {
    "text": " Right. So why is this true? ",
    "start": "1617270",
    "end": "1626819"
  },
  {
    "text": "I don't know. A flat folding looks\nlike something. It has no crossings.",
    "start": "1626819",
    "end": "1631980"
  },
  {
    "text": "It has-- the horizontal\ntravel, we understand. It ends up back\nwhere it started.",
    "start": "1631980",
    "end": "1637810"
  },
  {
    "text": "There's also some notion of\nlayers and vertical travel, which is a little\ntricky to think about.",
    "start": "1637810",
    "end": "1643450"
  },
  {
    "text": "But the one thing that's\neasy to think about-- I mean, this forms\nessentially a polygon. It's like a really\nsquashed polygon.",
    "start": "1643451",
    "end": "1649080"
  },
  {
    "text": "And these vertical segments are\nactually really just points. OK, imagine.",
    "start": "1649080",
    "end": "1655190"
  },
  {
    "text": "That's just where\nyou turn around. So it's like a polygon,\njust stretched or squashed",
    "start": "1655190",
    "end": "1661420"
  },
  {
    "text": "down onto a line. And we know some\nthings about polygons.",
    "start": "1661420",
    "end": "1666470"
  },
  {
    "text": "OK, as an end\nvertex polygon-- you know that the sum of\nthe interior angles is-- whatever it is.",
    "start": "1666470",
    "end": "1671664"
  },
  {
    "text": "I always get confused\nwith that formula. So I don't like\nto think about it. But one thing we-- an\neasier way to think",
    "start": "1671664",
    "end": "1676770"
  },
  {
    "text": "about that same statement\nis just think about how much turning the polygon does. So you start here, you\nturn right 180 degrees,",
    "start": "1676770",
    "end": "1684480"
  },
  {
    "text": "you turn left 180 degrees,\nyou turn left 180, right 180, right 180, right 180.",
    "start": "1684480",
    "end": "1690630"
  },
  {
    "text": "How much is it in total? Oh gosh, do I have to add? No. It's so simple.",
    "start": "1690630",
    "end": "1696250"
  },
  {
    "text": "It's 360. Right? Just, if you think about\nif you're going around in a circle, any polygon-- not\njust flat-- but anything in two",
    "start": "1696250",
    "end": "1703779"
  },
  {
    "text": "dimensions, the total amount\nof turning you do is 360. Or if you count backwards,\nit's negative 360.",
    "start": "1703780",
    "end": "1710960"
  },
  {
    "text": "So this is the key--\nsomething you should all know about polygons. If you look at sum of the turn\nangles-- how much turning you",
    "start": "1710960",
    "end": "1717740"
  },
  {
    "text": "do at each vertex--\nthat will always be plus or minus\n360 in any polygon.",
    "start": "1717740",
    "end": "1722885"
  },
  {
    "text": " This is equivalent to the sum\nof the interior angles being,",
    "start": "1722885",
    "end": "1729880"
  },
  {
    "text": "whatever, pi times n minus\n2, which I don't remember. But this is much\neasier to remember.",
    "start": "1729880",
    "end": "1736659"
  },
  {
    "text": "And it's useful, because we\ncan map mountains and valleys to left and right turns.",
    "start": "1736660",
    "end": "1742040"
  },
  {
    "text": "As I said, every time\nthis is a valley, it was a left turn by 180.",
    "start": "1742040",
    "end": "1748750"
  },
  {
    "text": "Every time it was a mountain,\nit was a right turn by 180. So valleys, mountains,\nright turns--",
    "start": "1748750",
    "end": "1772790"
  },
  {
    "start": "1751000",
    "end": "2307000"
  },
  {
    "text": "so I'm going to think\nof that as negative 180. Now, of course technically, it\ncould be the other way around. It could be this is\nnegative, this is positive.",
    "start": "1772790",
    "end": "1779368"
  },
  {
    "text": "But I already have a\nplus and minus here. So it's symmetric. So if we sum up the\nturn angles-- which",
    "start": "1779368",
    "end": "1786380"
  },
  {
    "text": "we know is supposed to\nbe plus or minus 360-- the sum of the turn angles\nis going to be-- we're",
    "start": "1786380",
    "end": "1797360"
  },
  {
    "text": "going to have 180 for\neach valley, so 180",
    "start": "1797360",
    "end": "1803090"
  },
  {
    "text": "times the number of valleys. And we're going to have\nnegative 180 for each mountain.",
    "start": "1803090",
    "end": "1809370"
  },
  {
    "start": "1809370",
    "end": "1815860"
  },
  {
    "text": "And so the 180's factor out. ",
    "start": "1815860",
    "end": "1830740"
  },
  {
    "text": "And this thing is supposed to\nequal 360-- plus or minus 360.",
    "start": "1830740",
    "end": "1836080"
  },
  {
    "text": "How could that be? Well, the number of valleys\nminus number of mountains should be either 2-- for\nplus 360-- or negative 2--",
    "start": "1836080",
    "end": "1841809"
  },
  {
    "text": "for minus 360. So that proves the theorem. ",
    "start": "1841810",
    "end": "1849250"
  },
  {
    "text": "And that's why, in a degree\n4 vertex, one of them has to be 3, the\nother one has to be 1.",
    "start": "1849250",
    "end": "1854860"
  },
  {
    "text": "There's no other option,\nbecause the total number is 4. It's the only way to\nget the difference to be plus or minus 2.",
    "start": "1854860",
    "end": "1862260"
  },
  {
    "text": "So that's kind of nice. But it's not enough,\nunfortunately. If I gave you a mountain\nvalley pattern that",
    "start": "1862260",
    "end": "1868280"
  },
  {
    "text": "satisfies this\ncondition, it still might not be flat foldable.",
    "start": "1868280",
    "end": "1874120"
  },
  {
    "text": "That's maybe no surprise. It's not like we had\nsuch a simple test for the one dimensional\ncase, which should be easier.",
    "start": "1874120",
    "end": "1880669"
  },
  {
    "text": "We had to give an algorithm. We said repeatedly\ncrimp and end fold. If you get stuck,\nthe answer is no.",
    "start": "1880670",
    "end": "1885910"
  },
  {
    "text": "If you don't get stuck,\nyou folded it great. ",
    "start": "1885910",
    "end": "1903280"
  },
  {
    "text": "I love this eraser--\nincreases entropy. ",
    "start": "1903280",
    "end": "1911110"
  },
  {
    "text": "Let me tell you one case\nthat is easy to think about. Because it's nice.",
    "start": "1911110",
    "end": "1916340"
  },
  {
    "text": "It reduces directly to\nthe one dimensional case. And that's what I\ncall the generic case. ",
    "start": "1916340",
    "end": "1926380"
  },
  {
    "text": "Generic is this very convenient\nterm we use in mathematics. It's actually really\ntricky to define.",
    "start": "1926380",
    "end": "1932450"
  },
  {
    "text": "So I'd like to not\ndefine it, if I can. But maybe I should. ",
    "start": "1932450",
    "end": "1942320"
  },
  {
    "text": "The simple version, which\nis not quite enough, is to say that all of the\nangles in the crease pattern are different.",
    "start": "1942320",
    "end": "1948991"
  },
  {
    "text": "OK, here, for example,\ntwo of them are the same. There's two 90 degree angles. This is not generic. It's just easier to draw.",
    "start": "1948991",
    "end": "1955030"
  },
  {
    "text": "But in general, I\nmean, you imagine, you just draw some random thing. None of those lengths\nare going to be the same.",
    "start": "1955030",
    "end": "1961080"
  },
  {
    "text": "Yeah, the alternating\nsum is zero. But that's it. And that's what I--\nthe generic case",
    "start": "1961080",
    "end": "1966790"
  },
  {
    "text": "is that is the only thing that\nholds true about these angles. You can take the\nalternating sum.",
    "start": "1966790",
    "end": "1972670"
  },
  {
    "text": "That equals zero. If you take some alternating sum\nof some subset of the angles, that will not equal zero.",
    "start": "1972670",
    "end": "1978190"
  },
  {
    "text": "If you take a random example,\nthis is going to be true. OK, just bear with me. Suppose never any two\nangles are the same.",
    "start": "1978190",
    "end": "1986760"
  },
  {
    "text": "Then look at the\nglobally smallest crease, so globally smallest theta.",
    "start": "1986760",
    "end": "1993230"
  },
  {
    "start": "1993230",
    "end": "1998380"
  },
  {
    "text": "Say it's theta i. So the picture is theta i,\ntheta i minus 1, theta i plus 1.",
    "start": "1998380",
    "end": "2007961"
  },
  {
    "text": "And what do we know\nif it's globally smallest and none of\nthe values are equal? Then we know that\nthese two are bigger.",
    "start": "2007961",
    "end": "2018034"
  },
  {
    "text": "No big surprise. Think about what happens if\nthis is small, these are bigger,",
    "start": "2018035",
    "end": "2024780"
  },
  {
    "text": "and you try to make these both\nvalleys or both mountains, that's, of course, bad.",
    "start": "2024780",
    "end": "2030200"
  },
  {
    "text": "This is one of the\nsituations we had in the one dimensional case.",
    "start": "2030200",
    "end": "2036380"
  },
  {
    "text": "I mean, really,\nthis is a circle, but I can think just locally\nabout what's happening here. So in this situation, one\nof these must be a mountain",
    "start": "2036380",
    "end": "2043990"
  },
  {
    "text": "and the other must be a valley. I don't know which\norder they are, but I know they're different.",
    "start": "2043990",
    "end": "2050040"
  },
  {
    "text": "And then I know I can\napply one of these crimps.",
    "start": "2050040",
    "end": "2055669"
  },
  {
    "text": "Incidentally, the word crimp,\nJason Koo was asking about, like, why do you call\nit crimp and not pleat?",
    "start": "2055670",
    "end": "2062120"
  },
  {
    "text": "Probably, I should\ncall it pleat. But it's crimp in my mind. It's been crimp in\nmy mind since 1998",
    "start": "2062120",
    "end": "2067980"
  },
  {
    "text": "when we wrote the 1D paper. It was before I knew the word\npleat, so that's my excuse.",
    "start": "2067980",
    "end": "2073480"
  },
  {
    "text": "So pleat or crimp,\ntake your pick. Crimp is usually\nmany pleats together. That's crimping. ",
    "start": "2073480",
    "end": "2081190"
  },
  {
    "text": "Cool. So crimps, we kind of like. Why do we like crimps? ",
    "start": "2081190",
    "end": "2088820"
  },
  {
    "text": "We proved, in the one\ndimensional case last time, that if you make a crimp\nand your original thing",
    "start": "2088820",
    "end": "2094320"
  },
  {
    "text": "was flat foldable, the new\nthing will be flat foldable. Good news is, that\nis still true.",
    "start": "2094320",
    "end": "2099679"
  },
  {
    "text": "I told you, all these\nthings were no longer true in the circular case. It's still true in\nthe circular case.",
    "start": "2099679",
    "end": "2106500"
  },
  {
    "text": "Should I tell you-- Let me just remind you-- the\nsame proof works-- remind you what the proof looked like.",
    "start": "2106500",
    "end": "2111619"
  },
  {
    "text": "We had a crimp, and we're\nhoping to fold that first.",
    "start": "2111620",
    "end": "2116900"
  },
  {
    "text": "We know at some point,\nthese creases get folded. But there may be\nother junk in here, or maybe other junk in here.",
    "start": "2116900",
    "end": "2123110"
  },
  {
    "text": "We'd like to get\nrid of that junk. And so what we did\nis move this junk up to here, which was always safe.",
    "start": "2123110",
    "end": "2128360"
  },
  {
    "text": "We moved this junk down to here. And that was still a folded\nstate-- a flat folded state.",
    "start": "2128360",
    "end": "2135598"
  },
  {
    "text": "OK, remember all this stuff. Therefore, we could have\nfolded the crimp first.",
    "start": "2135598",
    "end": "2141190"
  },
  {
    "text": "And then we have a flat folding\nin this situation, where this paper is effectively\nglued together, which means,",
    "start": "2141190",
    "end": "2148220"
  },
  {
    "text": "it was safe to fold this\ncrimp and glue these together and never\ntouch them again. So that is still true\nin the circular case.",
    "start": "2148220",
    "end": "2154620"
  },
  {
    "text": "That proof didn't really assume\nanything about the paper. Would even work for\nlike tree shaped paper or something weird.",
    "start": "2154620",
    "end": "2162670"
  },
  {
    "text": "So if we can find a crimp, which\nwe can in the generic case, then you just make a crimp,\nmake a crimp, repeat.",
    "start": "2162670",
    "end": "2168690"
  },
  {
    "text": "If you ever get stuck, you know\nthat the original thing was not flat foldable, because the thing\nyou have is not flat foldable. ",
    "start": "2168690",
    "end": "2175810"
  },
  {
    "text": "Why? If there's no cramp\nin the generic case, that means you have two valleys\naround the smallest angle,",
    "start": "2175810",
    "end": "2181740"
  },
  {
    "text": "and that's clearly bad.  So-- I'm not writing\na lot of details here.",
    "start": "2181740",
    "end": "2188610"
  },
  {
    "text": "Is that clear? If I have an angle\nthat's surrounded by strictly larger\nangles, I know",
    "start": "2188610",
    "end": "2194911"
  },
  {
    "text": "there must be one\nmountain and one valley. Then I can safely make\na crimp and repeat. The trouble comes in when\nthese angles are equal.",
    "start": "2194911",
    "end": "2203500"
  },
  {
    "text": "We never had to\nthink about angles being equal in the\none dimensional case. It didn't matter much.",
    "start": "2203500",
    "end": "2209090"
  },
  {
    "text": "We just said, oh, you know,\nit's safe to make a crimp, as long as this was greater\nthan or equal to this",
    "start": "2209090",
    "end": "2215490"
  },
  {
    "text": "and this was greater\nthan or equal to this. That is still true; it's\nsafe to make a crimp. But how do we know\nthat there is a crimp?",
    "start": "2215490",
    "end": "2221700"
  },
  {
    "text": "How do we know that there's a\nmountain followed by valley? We don't. I mean, if they're equal,\nthis would be all right.",
    "start": "2221700",
    "end": "2231400"
  },
  {
    "text": "That's two valleys is valid if\nthese three angles are equal. But I claim still somewhere\nthere's got to be a crimp.",
    "start": "2231400",
    "end": "2237144"
  },
  {
    "text": "There's no longer a notion of\nthe globally smallest angle, because some of them are equal. We've got to find that\ncrimp, but it's out there.",
    "start": "2237144",
    "end": "2244769"
  },
  {
    "text": "So we just need to\nprove that it exists. ",
    "start": "2244770",
    "end": "2277960"
  },
  {
    "text": "So to do that, we're going\nto generalize this theorem-- Meakawa-Justin-- that number\nof mountains minus number",
    "start": "2277960",
    "end": "2285440"
  },
  {
    "text": "of valleys is plus or minus 2. That's true, and\nit's a statement about the sum of all the\nangles-- all of the creases.",
    "start": "2285440",
    "end": "2293710"
  },
  {
    "text": "What I'd like is something\na little bit more localized. And in particular,\nwe're going to think about when I have a whole\nbunch of angles that are equal,",
    "start": "2293710",
    "end": "2302282"
  },
  {
    "text": "how many mountains and\nvalleys can there be in there. ",
    "start": "2302282",
    "end": "2307480"
  },
  {
    "start": "2307000",
    "end": "2662000"
  },
  {
    "text": "So it's what I\ncall local counts. ",
    "start": "2307480",
    "end": "2315170"
  },
  {
    "text": "So while everything I said\nso far is pretty classic, this result was proved\nin 2001 by Tom Hall,",
    "start": "2315170",
    "end": "2321560"
  },
  {
    "text": "so much more recent,\nover a decade later. ",
    "start": "2321560",
    "end": "2328579"
  },
  {
    "text": "So let's think about\nk equal angles. ",
    "start": "2328580",
    "end": "2338640"
  },
  {
    "text": "And I want that to be a maximal\nsequence of equal angles, so the ones right after and\nright before are different.",
    "start": "2338640",
    "end": "2345559"
  },
  {
    "text": "And furthermore,\nI'm going to assume that they're bigger--\nstrictly larger angles.",
    "start": "2345560",
    "end": "2360520"
  },
  {
    "text": " OK, so something like that.",
    "start": "2360520",
    "end": "2368710"
  },
  {
    "text": "A bunch of equal\nangles-- k of them-- bigger angles on either side.",
    "start": "2368710",
    "end": "2373960"
  },
  {
    "text": "This almost always exists. I should mention-- so I'm\ngoing to say something about this situation.",
    "start": "2373960",
    "end": "2379930"
  },
  {
    "text": "But this situation should exist,\nbecause I take the smallest angle out there and then\nI see how many friends",
    "start": "2379930",
    "end": "2385630"
  },
  {
    "text": "it has that are all equal. If it's the smallest angle--\nor it's one of the smallest angles-- then the\nones surrounding",
    "start": "2385630",
    "end": "2392900"
  },
  {
    "text": "it are going to be bigger--\nunless all the angles are equal.",
    "start": "2392900",
    "end": "2398466"
  },
  {
    "text": "So there's one case, which\nwe'll worry about later. It's very easy. All the angles are equal.",
    "start": "2398466",
    "end": "2404197"
  },
  {
    "text": "In fact, I could tell you\nhow to worry about that. If all the angles are\nequal, then everything",
    "start": "2404197",
    "end": "2411279"
  },
  {
    "text": "is crimpable as long as we can\nfind a switch between mountain and valley-- somewhere. And because the number\nof mountains and valleys",
    "start": "2411279",
    "end": "2418100"
  },
  {
    "text": "is plus or minus 2, there's\ngot to be-- so they're almost in equal balance-- there's\ngot to be a valley.",
    "start": "2418100",
    "end": "2425960"
  },
  {
    "text": "It can't be all valleys,\ncan't be all mountains. So somewhere,\nthere's a transition between mountain and valley.",
    "start": "2425960",
    "end": "2431180"
  },
  {
    "text": "So you get a crimp out of that. But otherwise, if they're\nnot all equal-- let's",
    "start": "2431180",
    "end": "2437110"
  },
  {
    "text": "think about k equal angles\nsurrounded by two larger guys.",
    "start": "2437110",
    "end": "2443230"
  },
  {
    "text": "Forgot how technical this is. All right. Then I want to look at\nthe number of mountains",
    "start": "2443230",
    "end": "2452770"
  },
  {
    "text": "and the number valleys among\nthese k plus one creases,",
    "start": "2452770",
    "end": "2458020"
  },
  {
    "text": "so within that range. ",
    "start": "2458020",
    "end": "2464130"
  },
  {
    "text": "It's going to be 0, if k is odd. ",
    "start": "2464130",
    "end": "2470160"
  },
  {
    "text": "And it's going to be plus\nor minus 1, if k is even. ",
    "start": "2470160",
    "end": "2477140"
  },
  {
    "text": "It's not plus or minus 2. Intuitively, plus or minus 2 is\nwhen you go all the way around. Here, we're just\nlooking at a segment--",
    "start": "2477140",
    "end": "2484579"
  },
  {
    "text": "a portion of the entire circle. Remember, this is actually\na circle somewhere.",
    "start": "2484580",
    "end": "2490730"
  },
  {
    "text": "And this corresponds\nto, in the odd case, you're going to be going in\nthe same direction afterwards.",
    "start": "2490730",
    "end": "2498280"
  },
  {
    "text": "In the even case,\nyou're going to have turned around but\nnot a full circle. So it's going to\nbe plus or minus 1.",
    "start": "2498280",
    "end": "2503890"
  },
  {
    "text": "There's a lot of\nways to prove this. One way is to think\nabout convex cones.",
    "start": "2503890",
    "end": "2510770"
  },
  {
    "text": "So if k is even, and you\nfold this thing-- let's see,",
    "start": "2510770",
    "end": "2520570"
  },
  {
    "text": "one, two, three, four,\nfive, six-- equal angles.",
    "start": "2520570",
    "end": "2526409"
  },
  {
    "text": "And then there's\nthe two longer guys. They may not be the\nsame length, but that's what you get in the even case.",
    "start": "2526409",
    "end": "2533660"
  },
  {
    "text": "So what I'd like to do is\njust, in order to just reduce to things that we've already\nthought about-- I mean,",
    "start": "2533660",
    "end": "2540280"
  },
  {
    "text": "you could talk about\nturn angles again, or you could just say, hey,\nI know Maekawa's theorem. So as long as I could make\nthis into a circle, which",
    "start": "2540280",
    "end": "2548100"
  },
  {
    "text": "I can do by adding\nthat stuff, now I have a nice circular--\nit's a flat folded state.",
    "start": "2548100",
    "end": "2554619"
  },
  {
    "text": "There's no crossings\nhere, presumably because this did something. I don't actually know\nthat it's zigzagging.",
    "start": "2554620",
    "end": "2561001"
  },
  {
    "text": "It might do other stuff. But it's not going to\ncross what I just added. So the number of mountains\nminus number of valleys,",
    "start": "2561001",
    "end": "2567320"
  },
  {
    "text": "in total here, must\nbe plus or minus 2. I only added one\ncrease-- this one.",
    "start": "2567320",
    "end": "2575160"
  },
  {
    "text": "So that's going to make\nit either plus or minus 1 or plus or minus 3. If you think about\nit a little bit,",
    "start": "2575160",
    "end": "2580760"
  },
  {
    "text": "it has to be plus or minus 1. And hopefully, that's\nwhat I wrote here, yes. ",
    "start": "2580760",
    "end": "2586760"
  },
  {
    "text": "Because I mean, really, we're\nthinking about turn angles again, I'm afraid. Can't totally reduce it.",
    "start": "2586760",
    "end": "2593330"
  },
  {
    "text": "We just turned around here. And we were about to\nfinish the circle, which would make it plus or minus 2.",
    "start": "2593330",
    "end": "2598960"
  },
  {
    "text": "Before we finish the circle,\nit's plus or minus 1. k is odd.",
    "start": "2598960",
    "end": "2604160"
  },
  {
    "text": " Again, this might go\nlike that, whatever.",
    "start": "2604160",
    "end": "2611080"
  },
  {
    "text": "But, because it's an\nodd number, these guys are going in the same direction. And so the total turn\nangle here must be 0.",
    "start": "2611080",
    "end": "2619120"
  },
  {
    "text": "And one way to see that is to\nextend it into a full polygon.",
    "start": "2619120",
    "end": "2624240"
  },
  {
    "text": "You know that it's plus or\nminus 2 for this whole thing. And I added two guys\nin the same direction.",
    "start": "2624240",
    "end": "2632100"
  },
  {
    "text": "If I remove them, it's going\nto go down to plus or minus 0. ",
    "start": "2632100",
    "end": "2639929"
  },
  {
    "text": "That was a bit hand wavy. But do you buy that? ",
    "start": "2639929",
    "end": "2645823"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]\nplus or minus 0? PROFESSOR: Plus or\nminus 0 is 0, yeah.",
    "start": "2645823",
    "end": "2651492"
  },
  {
    "text": "You went from 2 down\nto zero, because you remove two identical guys. ",
    "start": "2651492",
    "end": "2658730"
  },
  {
    "text": "So let me tie this all\ntogether, because there's so many little cases.",
    "start": "2658730",
    "end": "2664255"
  },
  {
    "start": "2664255",
    "end": "2674630"
  },
  {
    "text": "So I want to know what\nmountain valley patterns are flat foldable, single\nvertex, m/v patterns.",
    "start": "2674630",
    "end": "2689005"
  },
  {
    "start": "2689005",
    "end": "2696630"
  },
  {
    "text": "I claim there is a crimp.",
    "start": "2696630",
    "end": "2704710"
  },
  {
    "text": "If it's flat foldable,\nthere has to be a crimp that you can find to do. Remember, a crimp\nwas where this length",
    "start": "2704710",
    "end": "2714329"
  },
  {
    "text": "was less than or equal to\nthis length and less than or equal to this length.",
    "start": "2714330",
    "end": "2720250"
  },
  {
    "text": "And one of these was m. One of them was v. That was\nthe definition of a crimp. I claim such a\nthing always exists.",
    "start": "2720250",
    "end": "2726090"
  },
  {
    "text": "The proof is two parts. If all the angles are equal,\nwe know that these conditions",
    "start": "2726090",
    "end": "2739310"
  },
  {
    "text": "are always satisfied,\nbecause everything is equal. So we just need to\nfind an m followed by v",
    "start": "2739310",
    "end": "2745180"
  },
  {
    "text": "or a v followed by an m. And by Maekawa's theorem, we\nknow it's not all m's or all",
    "start": "2745180",
    "end": "2752731"
  },
  {
    "text": "v's. So somewhere, there has to be\na transition from m to v's. ",
    "start": "2752731",
    "end": "2764150"
  },
  {
    "text": "So just use that lemma\ntheorem or the count property.",
    "start": "2764150",
    "end": "2769579"
  },
  {
    "text": "Otherwise, if they're\nnot all equal, then I can apply this\nlocal counts result,",
    "start": "2769580",
    "end": "2776250"
  },
  {
    "text": "take the smallest angle-- take\none instance of the smallest angle. There could be many of them.",
    "start": "2776250",
    "end": "2781770"
  },
  {
    "text": "Find all of its neighboring\nfriends that are equal. Then I know that the next\nangles before and after",
    "start": "2781770",
    "end": "2787620"
  },
  {
    "text": "have to be strictly bigger. Then I know that the number of\nmountains and valleys in here--",
    "start": "2787620",
    "end": "2793770"
  },
  {
    "text": "if I look at the\ndifference and it's 0, that means the\nnumber of mountains equals the number of valleys.",
    "start": "2793770",
    "end": "2798970"
  },
  {
    "text": "Therefore, there's\nat least one of each. And therefore, there's a\ntransition from mountain to valley in there.",
    "start": "2798970",
    "end": "2804250"
  },
  {
    "text": "Because the transition\nfrom mountain to valley-- like right here,\nthat's a valid crimp. This guy's bigger;\nthis guy's equal.",
    "start": "2804250",
    "end": "2812160"
  },
  {
    "text": "This would also be\na fine transition, because everybody's equal. This would also be\na fine transition. Any transition from\nmountain to valley in here,",
    "start": "2812160",
    "end": "2818890"
  },
  {
    "text": "I've got a crimp. The even case is a little-- I\ngot to think a little bit more.",
    "start": "2818890",
    "end": "2824480"
  },
  {
    "text": "k is even. k plus 1, which is the number\nof creases here, is odd.",
    "start": "2824480",
    "end": "2832140"
  },
  {
    "text": "And the difference between\nmountains and valleys among those k plus one\ncreases is plus or minus 1. Think about it for second.",
    "start": "2832140",
    "end": "2837990"
  },
  {
    "text": "That means there's, again, at\nleast one mountain and at least one valley. Because k, to be even,\nhas to be at least 2.",
    "start": "2837990",
    "end": "2846089"
  },
  {
    "text": "We've got to have at\nleast three things. So there's going to be at\nleast one of one and two of the other, in fact.",
    "start": "2846090",
    "end": "2851486"
  },
  {
    "text": "And I just need one mountain and\none valley somewhere in there. And then I know there has to\nbe a transition from mountain to valley. ",
    "start": "2851486",
    "end": "2859190"
  },
  {
    "text": "Otherwise, use local counts. ",
    "start": "2859190",
    "end": "2865890"
  },
  {
    "text": "And in either case, we\nget either a mountain",
    "start": "2865890",
    "end": "2876200"
  },
  {
    "text": "to valley transition or a\nvalley to mountain transition.",
    "start": "2876200",
    "end": "2883460"
  },
  {
    "text": "And I get it in such a way\nthat these inequalities on the lengths hold.",
    "start": "2883460",
    "end": "2888939"
  },
  {
    "text": "So in other words,\nthat it's a crimp. ",
    "start": "2888939",
    "end": "2895590"
  },
  {
    "text": "Therefore, any flat foldable,\nsingle vertex, mountain valley pattern has a crimp. Make it.",
    "start": "2895590",
    "end": "2901590"
  },
  {
    "text": "And as I was arguing\nhere, just like last time, that crimp will still--\nafter you do the crimp,",
    "start": "2901590",
    "end": "2907750"
  },
  {
    "text": "you'll still be flat\nfoldable, so repeat. Cook until done is\nhow I like to put it.",
    "start": "2907750",
    "end": "2914100"
  },
  {
    "text": "Question. AUDIENCE: What about the trivial\ncase of just folding a circle in half? PROFESSOR: The trivial case\nof folding a circle in half.",
    "start": "2914100",
    "end": "2919930"
  },
  {
    "text": "All right. That's a good question. It's kind of a technicality. ",
    "start": "2919930",
    "end": "2925650"
  },
  {
    "text": "One version would be to\nsay, that's zero vertices. That doesn't count. And we're thinking\nabout one vertex.",
    "start": "2925650",
    "end": "2930760"
  },
  {
    "text": "And as soon as\nyou think about it as one vertex, which is\nfine, then you actually have two creases there.",
    "start": "2930760",
    "end": "2938510"
  },
  {
    "text": "So it's two creases. And hopefully, this works. Oh, I see what you're saying. It's not a crimp.",
    "start": "2938510",
    "end": "2944890"
  },
  {
    "text": "That's a good point. AUDIENCE: But then\nit's flat foldable. PROFESSOR: It is flat foldable,\nand yet, there's no crimp.",
    "start": "2944890",
    "end": "2950850"
  },
  {
    "text": "Damn it. All right. Sorry? AUDIENCE: But it follows\nMaekawa's, right?",
    "start": "2950850",
    "end": "2957080"
  },
  {
    "text": "PROFESSOR: Yeah. So I made a slight mistake here. I said if all the\nangles are equal,",
    "start": "2957080",
    "end": "2962720"
  },
  {
    "text": "then Maekawa says there's\nat least one of each. That's not true when n equals 2. Then there's two of one\nand zero of the other.",
    "start": "2962720",
    "end": "2970450"
  },
  {
    "text": "As long as you have more than\ntwo creases, then this is true.",
    "start": "2970450",
    "end": "2976060"
  },
  {
    "text": "That's enough. So you have to handle\nthis as a special case. AUDIENCE: At the end\nof your algorithm, you're always left\nwith two of the same--",
    "start": "2976060",
    "end": "2983396"
  },
  {
    "text": "PROFESSOR: That's true. This is an important\nspecial case to remember, because this will be\nthe final picture.",
    "start": "2983396",
    "end": "2990210"
  },
  {
    "text": "After you do a sequence of\ncrimps, this is the good case. If your thing is\nflat foldable, you",
    "start": "2990210",
    "end": "2996340"
  },
  {
    "text": "will always end up with that. AUDIENCE: That's a\ncase where everything is the same, smallest.",
    "start": "2996340",
    "end": "3002905"
  },
  {
    "text": "PROFESSOR: It's another example\nwhere all the angles are equal. So that's why this\nis the situation.",
    "start": "3002905",
    "end": "3009130"
  },
  {
    "text": "It's either Maekawa and\nyou get a cramp here, because n is greater than 2.",
    "start": "3009130",
    "end": "3016500"
  },
  {
    "text": "And here, I should say,\nif n is greater than 2, then this is true.",
    "start": "3016500",
    "end": "3021740"
  },
  {
    "text": "Of course the n equals 2\ncase, it looks like that. And it had better be both\nvalleys or both mountains. Otherwise, it's not going\nto be flat foldable.",
    "start": "3021740",
    "end": "3028119"
  },
  {
    "text": "I forgot about that. I should add it in the notes. But it's in the textbook, right. AUDIENCE: At the end\nof the algorithm, it's not going to be a circle.",
    "start": "3028120",
    "end": "3034255"
  },
  {
    "text": "It's going to be a cone. PROFESSOR: That's true. It won't actually\nlook like this. At the end of the algorithm,\nit's going to be a cone.",
    "start": "3034255",
    "end": "3041329"
  },
  {
    "text": "The two angles will be equal,\nbecause of Kawasaki's theorem. And they should still be both\nmountains or both valleys.",
    "start": "3041330",
    "end": "3048700"
  },
  {
    "text": "But it's going to be--\nwe can see it right here. So I apply my crimp,\nand now I have a cone,",
    "start": "3048700",
    "end": "3054522"
  },
  {
    "text": "and there's two angles. There's one here, which\nhas been fused together. And there's one here,\nwhich is the original.",
    "start": "3054522",
    "end": "3061670"
  },
  {
    "text": "They're equal. And it's two mountains\nor two valleys, if I turned it upside down.",
    "start": "3061670",
    "end": "3067290"
  },
  {
    "text": "And then it finishes. So that's the algorithm\nin action-- two steps. First you find this crimp here.",
    "start": "3067290",
    "end": "3073146"
  },
  {
    "text": "This is actually the\nglobally smallest angle. It's surrounded\nby bigger angles. So it's really easy. Then I have a cone with\ntwo equal angles, which",
    "start": "3073146",
    "end": "3081359"
  },
  {
    "text": "is what has to\nhappen at the end. And then I'm done.",
    "start": "3081360",
    "end": "3087241"
  },
  {
    "text": "Good? AUDIENCE: Is that the\nonly way to do it? PROFESSOR: This is\nwhat always happens.",
    "start": "3087241",
    "end": "3094430"
  },
  {
    "text": "Oh, is this the only way\nto flat fold these things? No. There are other--\nyes, one of the two.",
    "start": "3094430",
    "end": "3102290"
  },
  {
    "start": "3102290",
    "end": "3113060"
  },
  {
    "text": "I think it depends\nwhat you're counting. If you're counting mountain\nvalley assignments-- I mean,",
    "start": "3113060",
    "end": "3119430"
  },
  {
    "text": "if you just want to know,\ncan every mountain valley assignment be\nfolded by crimping. Then the answer is yes.",
    "start": "3119430",
    "end": "3124770"
  },
  {
    "text": "That's what we proved. But if you want to get\nevery possible folded state, crimps are not\ngoing to be enough.",
    "start": "3124770",
    "end": "3130110"
  },
  {
    "text": "The reason they're not enough is\nbecause we're using this thing. So, hey, here's some\nhypothetical folded state.",
    "start": "3130110",
    "end": "3135569"
  },
  {
    "text": "We can rip it out and make\nthe crimp has been done. But then there's a\nfolded state you're not able to reach by crimping.",
    "start": "3135570",
    "end": "3141970"
  },
  {
    "text": "We need to work that into an\nactual example, where crimping forbids you from reaching\nsome folded state. But I'm pretty sure one\nexists because of this.",
    "start": "3141970",
    "end": "3148868"
  },
  {
    "text": "AUDIENCE: Could that\nbe more like spirals? PROFESSOR: Yeah, maybe some\nkind of spiraling thing. AUDIENCE: Well, layering\ntakes into account--",
    "start": "3148868",
    "end": "3155101"
  },
  {
    "text": "PROFESSOR: Right. What we're missing here is\ngetting all the possible layer stacking orders. So we're just trying to match\na mountain valley assignment.",
    "start": "3155102",
    "end": "3163290"
  },
  {
    "text": "We're not going to match\na target layer ordering, because we simplified\nthe layer orders in order",
    "start": "3163290",
    "end": "3168360"
  },
  {
    "text": "to make crimps possible. So crimps won't get you\nsome of the folded states.",
    "start": "3168360",
    "end": "3175980"
  },
  {
    "text": "But one thing you can\nplay with over here--",
    "start": "3175980",
    "end": "3184730"
  },
  {
    "text": "that has been played\nwith by Tom Hall-- is if I give you\na crease pattern,",
    "start": "3184730",
    "end": "3195440"
  },
  {
    "start": "3187000",
    "end": "3492000"
  },
  {
    "text": "how many flat foldable\nmountain valley assignments does it have? OK, we have this nice linear\ntime algorithm to tell you",
    "start": "3195440",
    "end": "3202730"
  },
  {
    "text": "whether a particular\none is doable. How many are there? And there is-- if\nyou work through all",
    "start": "3202730",
    "end": "3210460"
  },
  {
    "text": "of the things I've shown you\nin a little bit more detail, you can recover-- this\nwas finding a crimp.",
    "start": "3210460",
    "end": "3216055"
  },
  {
    "text": "But you can actually\nlook at what are all the crimps\nthat are possible and actually count how\nmany different ways",
    "start": "3216055",
    "end": "3223340"
  },
  {
    "text": "there are to fold. How many crimps you can do. And then given those\ncrimps, how many crimps you can go after that. And in the same linear\ntime kind of algorithm,",
    "start": "3223340",
    "end": "3231050"
  },
  {
    "text": "you can figure out how many\ndifferent mountain valley patterns are flat foldable. That takes a little\nbit more care.",
    "start": "3231050",
    "end": "3237119"
  },
  {
    "text": "I will tell you the extremes. ",
    "start": "3237120",
    "end": "3242859"
  },
  {
    "text": "How small could the number of\nflat foldable mountain valley",
    "start": "3242860",
    "end": "3248300"
  },
  {
    "text": "assignments be for a\ngiven crease pattern? Well, do you have\nany guesses when?",
    "start": "3248300",
    "end": "3254226"
  },
  {
    "text": "When do I have the least\nchoice of where to make crimps? ",
    "start": "3254226",
    "end": "3264140"
  },
  {
    "text": "Yeah. AUDIENCE: We have three angles. PROFESSOR: For general n. Sorry.",
    "start": "3264140",
    "end": "3269680"
  },
  {
    "text": "But, yeah, three angles\nor, I guess, two angles. We really can't do any--\nI don't have any choice.",
    "start": "3269680",
    "end": "3274980"
  },
  {
    "text": "But for general n,\nhow should I disperse the theta i's in\norder to make there",
    "start": "3274980",
    "end": "3280630"
  },
  {
    "text": "be very few possible crimps? AUDIENCE: When there are\nonly two transitions. PROFESSOR: When there\nare only two transitions",
    "start": "3280630",
    "end": "3286706"
  },
  {
    "text": "between mountains and valleys. All the mountains are together. All the valleys are together. That's right, if I was asking\na question about mountains",
    "start": "3286706",
    "end": "3293460"
  },
  {
    "text": "and valleys. But I was asking a\nquestion about theta i's. So I want to count how many\nmountain valley patterns there",
    "start": "3293460",
    "end": "3299510"
  },
  {
    "text": "are-- mountain valley\nassignments that are flat foldable for\na given crease pattern.",
    "start": "3299510",
    "end": "3310453"
  },
  {
    "text": "AUDIENCE: So if you\nhave a bunch of angles, consecutive theta\ni's are increasing? PROFESSOR: All the angles\nare consecutive increasing.",
    "start": "3310453",
    "end": "3317300"
  },
  {
    "text": "Yeah, that pretty much works. In fact, what I need\nis the generic case, where all angles are\ndifferent and they never",
    "start": "3317300",
    "end": "3324950"
  },
  {
    "text": "become equal by folding,\nwhich is what generic means. So then there was only\nreally one crimp I could do,",
    "start": "3324950",
    "end": "3331130"
  },
  {
    "text": "which is the globally\nsmallest angle. So actually, I still\nhave two choices.",
    "start": "3331130",
    "end": "3336590"
  },
  {
    "text": "I could do mountain then\nvalley or valley then mountain. But I only have two\nchoices for that crimp.",
    "start": "3336590",
    "end": "3342100"
  },
  {
    "text": "Then I will have two\nchoices for the next crimp, two choices for the next crimp. In general, I get 2 to the\nn possible mountain valley",
    "start": "3342100",
    "end": "3351920"
  },
  {
    "text": "assignments for\nthe generic case. ",
    "start": "3351920",
    "end": "3359500"
  },
  {
    "text": "OK, what about,\nwhat's the opposite, where I get as much\nchoice as possible? AUDIENCE: Isn't 2 to the n every\nmountain valley assignment?",
    "start": "3359500",
    "end": "3369070"
  },
  {
    "text": "PROFESSOR: Yes, 2 to the\nn-- no-- 2 to the n over 2.",
    "start": "3369070",
    "end": "3374401"
  },
  {
    "text": "Thank you. Right. There are 2 to the n conceivable\nmountain valley assignments. It can't be that big.",
    "start": "3374401",
    "end": "3379440"
  },
  {
    "text": "Every time I do a crimp, I\neat two creases, not one. That's what I forgot. Good.",
    "start": "3379440",
    "end": "3385089"
  },
  {
    "text": "It's still pretty big though. It's like square root of\nall the possible things you could imagine are\nindeed feasible.",
    "start": "3385090",
    "end": "3392220"
  },
  {
    "text": "What, from 2 to the n\nto 2 to the n over 2. When would I get the\nmost choice in crimping?",
    "start": "3392220",
    "end": "3397578"
  },
  {
    "text": "AUDIENCE: All angles are equal. PROFESSOR: All angles are equal. That's the opposite extreme. And in this case--\na little messier.",
    "start": "3397578",
    "end": "3404270"
  },
  {
    "start": "3404270",
    "end": "3425300"
  },
  {
    "text": "When all the angles are\nequal, the only property you need-- and you can\nsee that from the proof-- the only property you\nneed is that the number",
    "start": "3425300",
    "end": "3431780"
  },
  {
    "text": "mountains minus\nthe number valleys is plus or minus\n2, and n is even.",
    "start": "3431780",
    "end": "3437430"
  },
  {
    "text": "As long as you have\nthat, we showed here, you're going to\nhave-- on alternation",
    "start": "3437430",
    "end": "3442822"
  },
  {
    "text": "from mountain valley-- that's\na valid crimp, because all the angles are equal. And you keep going. So it's just, how do you\ndisperse that many-- how",
    "start": "3442822",
    "end": "3451890"
  },
  {
    "text": "do I disperse n over\n2 minus 1 mountains",
    "start": "3451890",
    "end": "3456960"
  },
  {
    "text": "among n different positions. That's what this represents. And positions, how do I pick\nn over 2 minus 1 of them",
    "start": "3456960",
    "end": "3463420"
  },
  {
    "text": "to be mountains. Or it could be n over 2\nminus 1 of them are valleys. And that's this factor of 2.",
    "start": "3463420",
    "end": "3469430"
  },
  {
    "text": "So it could have more\nmountains or more valleys. And then you somehow\nplace those among those. And if you don't\nknow this notation,",
    "start": "3469430",
    "end": "3476430"
  },
  {
    "text": "that's just what it means. If you want to know\nusing other notation,",
    "start": "3476430",
    "end": "3482170"
  },
  {
    "text": "it's like this, n over\n2 minus 1 factorial, over 2 plus 1 factorial.",
    "start": "3482170",
    "end": "3488750"
  },
  {
    "text": "If you don't know factorials,\nI'll tell you about them later.",
    "start": "3488750",
    "end": "3494160"
  },
  {
    "start": "3492000",
    "end": "3600000"
  },
  {
    "text": "Cool. So that's kind of the end of\nthe single vertex situation. ",
    "start": "3494160",
    "end": "3502020"
  },
  {
    "text": "Yeah, I think I'll mention one\ninteresting open question here, which I would love to\nexplore maybe in our problem session-- which looks like it'll\nbe Mondays at 5:00, I think.",
    "start": "3502020",
    "end": "3511980"
  },
  {
    "text": " This is one vertex, and we\nwent through all this work",
    "start": "3511980",
    "end": "3517440"
  },
  {
    "text": "to solve a single\nvertex situation. And it's interesting,\nas we'll see, to think about locally\nhow each vertex behaves.",
    "start": "3517440",
    "end": "3525460"
  },
  {
    "text": "But you would think, if\nyou have a crease pattern with two vertices, it\nshouldn't be that much harder.",
    "start": "3525460",
    "end": "3531280"
  },
  {
    "text": "So here we have linear time. How quickly can you tell\nwhether a two vertex crease pattern is flat foldable?",
    "start": "3531280",
    "end": "3536920"
  },
  {
    "text": "As far as I know, no one\nhas looked at that problem. Surely, we can do\nit in quadratic time",
    "start": "3536920",
    "end": "3542390"
  },
  {
    "text": "but maybe even\nlinear time, I think. It can't be that hard, I think.",
    "start": "3542390",
    "end": "3548300"
  },
  {
    "text": "In general, if I have a\nsmall number of vertices-- say k vertices-- much\nsmaller than n creases,",
    "start": "3548300",
    "end": "3556420"
  },
  {
    "text": "is there-- for the\nalgorithms people-- is there fixed parameter\ntractable algorithm in k? Or can I get something--\neven getting something like n",
    "start": "3556420",
    "end": "3563850"
  },
  {
    "text": "to some function of\nk, would be progress. I think this should be doable.",
    "start": "3563850",
    "end": "3569190"
  },
  {
    "text": "But ideally, we\nget a running time that's exponential\nin k and linear in n.",
    "start": "3569190",
    "end": "3575800"
  },
  {
    "text": "That would be my hope. Why do I say it has\nto be exponential? Because in general,\nif I give you",
    "start": "3575800",
    "end": "3581460"
  },
  {
    "text": "a crease pattern with n\nvertices-- lots of vertices-- this problem is\nNP-complete, which is-- there's not going\nto be a polynomial time",
    "start": "3581460",
    "end": "3588410"
  },
  {
    "text": "algorithm for it. Nothing good. We will prove that\nnext Wednesday.",
    "start": "3588410",
    "end": "3593609"
  },
  {
    "text": "So I'll hold off on\nthat a little bit. But for two vertices,\nhow hard could it be?",
    "start": "3593610",
    "end": "3598930"
  },
  {
    "text": " All right. ",
    "start": "3598930",
    "end": "3623860"
  },
  {
    "text": "I want to talk about\none related topic. And then we will go\nto origami design and do a little bit\non the tree method.",
    "start": "3623860",
    "end": "3630960"
  },
  {
    "text": "But before we get\nthere, I want to talk about local foldability,\nwhich is a cool topic.",
    "start": "3630960",
    "end": "3641799"
  },
  {
    "text": "People tend to forget about it. I really like it. I think it would make\na cool project also. It's a nice algorithm.",
    "start": "3641800",
    "end": "3647510"
  },
  {
    "text": "It goes back to Bern\nand Hayes, 1996. So it's also right\nat the beginning",
    "start": "3647510",
    "end": "3652680"
  },
  {
    "text": "of origami mathematics. And it's this idea,\nall right, I give you",
    "start": "3652680",
    "end": "3657850"
  },
  {
    "text": "a crease pattern now\narbitrarily many vertices. And if I ask you,\ndoes it fold flat?",
    "start": "3657850",
    "end": "3663910"
  },
  {
    "text": "That's NP-complete--\nintractable-- same paper. But what if I ask you just\nto give me a mountain valley",
    "start": "3663910",
    "end": "3669730"
  },
  {
    "text": "assignment that might fold flat? Well, that's also NP-complete.",
    "start": "3669730",
    "end": "3675710"
  },
  {
    "text": "But if you actually\nwant it to fold flat, this is really the same problem. But if I ask you, give me a\nmountain valley assignment,",
    "start": "3675710",
    "end": "3683480"
  },
  {
    "text": "so that if I checked\nevery vertex according to this algorithm, at least\nevery vertex folds flat.",
    "start": "3683480",
    "end": "3689081"
  },
  {
    "text": "That would seem nice. Definitely, I have to find a\nmountain valley assignment that",
    "start": "3689082",
    "end": "3694500"
  },
  {
    "text": "satisfies these\nconditions, that as I do successive crimps,\nevery vertex-- if I cut out",
    "start": "3694500",
    "end": "3699819"
  },
  {
    "text": "the vertex separately,\nit would fold flat. This is the notion\nof local foldability. And there's a linear\ntime algorithm",
    "start": "3699820",
    "end": "3706370"
  },
  {
    "text": "to give you a mountain valley\nassignment that ought to work, in that at each vertex it works. It still may not work globally\nfor some other reason.",
    "start": "3706370",
    "end": "3713750"
  },
  {
    "text": " But it's pretty good.",
    "start": "3713750",
    "end": "3719277"
  },
  {
    "text": "I think this would be,\nactually, pretty practical. I think in a lot of real\nworld origami settings--",
    "start": "3719277",
    "end": "3725440"
  },
  {
    "text": "when you're doing\nflat folding anyway-- locally foldable is going to be\nenough to be globally foldable.",
    "start": "3725440",
    "end": "3733430"
  },
  {
    "text": "That's a guess. I don't know if it's true. ",
    "start": "3733430",
    "end": "3742520"
  },
  {
    "text": "Consistent mountain\nvalley assignment,",
    "start": "3742520",
    "end": "3748290"
  },
  {
    "text": "if there is one, so that each\nvertex locally folds flat.",
    "start": "3748290",
    "end": "3764510"
  },
  {
    "start": "3764510",
    "end": "3785470"
  },
  {
    "text": "Let me try to concoct a\nsmall example that's relevant",
    "start": "3785470",
    "end": "3791230"
  },
  {
    "text": "here-- got to think.",
    "start": "3791230",
    "end": "3801609"
  },
  {
    "start": "3801610",
    "end": "3811890"
  },
  {
    "text": "Yes, I think that works. All right, here we go. I think this is in the textbook. I remember drawing it\nin the past three years",
    "start": "3811890",
    "end": "3821140"
  },
  {
    "text": "ago or whatever. So here's a crease pattern\non a square or whatever.",
    "start": "3821140",
    "end": "3826958"
  },
  {
    "text": "AUDIENCE: The top\none should have-- PROFESSOR: Yes, it\nshould have this. Thank you.",
    "start": "3826958",
    "end": "3833720"
  },
  {
    "text": "So this satisfies\nKawasaki's theorem-- that was the hard part--\nbecause these angles sum to 180.",
    "start": "3833720",
    "end": "3839350"
  },
  {
    "text": "And it's symmetric all around. OK, these angles\nare the smallest.",
    "start": "3839350",
    "end": "3845080"
  },
  {
    "text": "They are 60 degrees. This is an equilateral triangle. So we have this-- not\nquite the generic case,",
    "start": "3845080",
    "end": "3851420"
  },
  {
    "text": "but we have the\nsmallest angle is surrounded by two larger angles. Therefore, one of\nthese is a mountain;",
    "start": "3851420",
    "end": "3857840"
  },
  {
    "text": "the other is a valley. That means that\nthese two creases have to have different\nassignments-- I'm",
    "start": "3857840",
    "end": "3864080"
  },
  {
    "text": "going to write a not equal sign. One of these is a mountain,\nand the other is a valley. They can't be the same. Also, these two\ncannot be the same.",
    "start": "3864080",
    "end": "3871170"
  },
  {
    "text": "Also, these two\ncannot be the same. That's not possible. Because I've got three,\nit has to alternate.",
    "start": "3871170",
    "end": "3877640"
  },
  {
    "text": "You can alternate three times. You can only alternative\nat even number of times. Two of these are mountains.",
    "start": "3877640",
    "end": "3883960"
  },
  {
    "text": "One is valley. And then you've got a problem. OK, so this thing is\nnot flat foldable. And this algorithm\nwill tell you that.",
    "start": "3883960",
    "end": "3890224"
  },
  {
    "text": "Because it will say,\nhey, I can't even find a mountain\nvalley assignment that could possibly\nfold each vertex flat.",
    "start": "3890224",
    "end": "3897420"
  },
  {
    "text": "So this is a nice algorithm. At least, it will detect\nannoying situations like that.",
    "start": "3897420",
    "end": "3906700"
  },
  {
    "text": "So in order to solve\nthis, we're going to use-- and I'm just going to sketch\nhow this algorithm works--",
    "start": "3906700",
    "end": "3913810"
  },
  {
    "text": "we're going to use this\ncharacterization and this idea that we can really find all\npossible mountain valley",
    "start": "3913810",
    "end": "3919040"
  },
  {
    "text": "assignments just by trying all\nthe possible crimp sequences. Now, there are\nexponentially many.",
    "start": "3919040",
    "end": "3924050"
  },
  {
    "text": "So it's not like I'm actually\ngoing to try them all. But I need to explore that\nspace of candidate crimps",
    "start": "3924050",
    "end": "3930045"
  },
  {
    "text": "and see what happens. ",
    "start": "3930045",
    "end": "3936849"
  },
  {
    "text": "So the idea is kind of crazy.",
    "start": "3936850",
    "end": "3943300"
  },
  {
    "text": "The beginning of\nthe algorithm is fold each vertex flat-- somehow.",
    "start": "3943300",
    "end": "3948570"
  },
  {
    "text": "I don't care how. Just pick a crimp, do it. Pick a crimp, do it--\nseparately for each vertex.",
    "start": "3948570",
    "end": "3954400"
  },
  {
    "text": "They're not going\nto be compatible. And don't look at the mountain\nvalley assignment you get. But look at the crimping\nsequence you get.",
    "start": "3954400",
    "end": "3962460"
  },
  {
    "text": "So here, let's do\na little example-- a non-trivial example.",
    "start": "3962460",
    "end": "3968650"
  },
  {
    "text": "So here, we have the peace sign,\nand these two angles are equal. They're smallest. I could crimp this\nangle first, or I",
    "start": "3968650",
    "end": "3975442"
  },
  {
    "text": "could crimp this angle first. I have a choice. So I'll draw both of them. ",
    "start": "3975442",
    "end": "3983080"
  },
  {
    "text": "If I crimp this angle\nfirst, I know these guys are paired up in the sense\nthat they must be not equal--",
    "start": "3983080",
    "end": "3989810"
  },
  {
    "text": "one's mountain and one's valley. After I do that crimp-- just\nlike in the real example I had-- this angle\nwill equal that angle.",
    "start": "3989810",
    "end": "3998119"
  },
  {
    "text": "And these two guys must\nhave equal assignments. They must be both\nmountain or both valley.",
    "start": "3998120",
    "end": "4004480"
  },
  {
    "text": "In this situation,\nthese two guys are not equal, if I\ncrimp this pair first.",
    "start": "4004480",
    "end": "4011099"
  },
  {
    "text": "And these two guys must\nbe equal-- equal now in the sense of being\nmountain or valley.",
    "start": "4011100",
    "end": "4016500"
  },
  {
    "text": "OK, so there are still\nexponentially many possibilities in how to do this.",
    "start": "4016500",
    "end": "4021640"
  },
  {
    "text": "But just pick one-- pick one\nof these ways of pairing up. You're going to pair up\neach of the n creases",
    "start": "4021640",
    "end": "4027540"
  },
  {
    "text": "into n over 2 pairs. And they're going to have some\nnot equal and equal signs.",
    "start": "4027540",
    "end": "4034550"
  },
  {
    "text": "So now, if you imagine\nthe general picture, like here, for example, I\nmight get-- in this pattern,",
    "start": "4034550",
    "end": "4040630"
  },
  {
    "text": "I would be forced\nto get not equals and these guys paired up. And in general, I want to\nlook at these kinds of cycles.",
    "start": "4040630",
    "end": "4048575"
  },
  {
    "text": " If I come into a vertex--\nhere's a vertex--",
    "start": "4048575",
    "end": "4057150"
  },
  {
    "text": "it's paired up with somebody. So if I come in here,\nI can go out somewhere. And I come to this vertex,\nit's paired with somebody.",
    "start": "4057150",
    "end": "4065260"
  },
  {
    "text": "So I'm going to just-- I\ncan keep wandering around. And in general, there will\nbe a bunch of these paths",
    "start": "4065260",
    "end": "4071815"
  },
  {
    "text": "that you can follow. What could the paths do? They either close up on\nthemselves-- maybe things",
    "start": "4071815",
    "end": "4078349"
  },
  {
    "text": "are paired up in such a way\nthat you make a return trip.",
    "start": "4078350",
    "end": "4083660"
  },
  {
    "text": "Or it could be some other path. Let me draw a dotted path. It could come in\nhere, and maybe it",
    "start": "4083660",
    "end": "4090244"
  },
  {
    "text": "gets paired up with this guy. Maybe it goes off to infinity. It reaches the\nboundary of the paper.",
    "start": "4090245",
    "end": "4095267"
  },
  {
    "text": "Those are the two possibilities. You get paths, which\ngo off to the edge-- off to infinity on either end.",
    "start": "4095267",
    "end": "4100870"
  },
  {
    "text": "Or you could get cycles. The cycles are the problem. Because whenever I have a cycle,\nI have a parity constraint.",
    "start": "4100870",
    "end": "4109479"
  },
  {
    "text": "For example, when\nthey're all not equals, the length of the\ncycle must be even.",
    "start": "4109479",
    "end": "4116009"
  },
  {
    "text": "If there were-- what's\nthe general statement? It's like the\nparity of the cycle,",
    "start": "4116010",
    "end": "4122844"
  },
  {
    "text": "which is whether\nit's even or odd, should be equal to the parity of\nthe number of not equal signs.",
    "start": "4122844",
    "end": "4128718"
  },
  {
    "text": " Something like that.",
    "start": "4128719",
    "end": "4134584"
  },
  {
    "text": "I've got a sheet here. ",
    "start": "4134584",
    "end": "4143244"
  },
  {
    "text": "Great, I just said\n\"parity problems.\" It's something like that. It's either the\nparity of the cycle",
    "start": "4143244",
    "end": "4148970"
  },
  {
    "text": "should equal the parity\nof the number of equals or the parity of the\nnumber of not equals. I think, number of equals.",
    "start": "4148970",
    "end": "4155349"
  },
  {
    "text": "Anyway, one of the two. And you can just check. I mean, you're forced. If I say, OK, let's\nmake this mountain,",
    "start": "4155350",
    "end": "4162250"
  },
  {
    "text": "then this is either\nequals or not equals. It'll tell me whether this\nis mountain or valley. Just walk around the cycle. Either you get a\ncontradiction or you don't.",
    "start": "4162250",
    "end": "4168899"
  },
  {
    "text": "If you get a contradiction,\nwe have a problem. How could we possibly\nfix the problem?",
    "start": "4168899",
    "end": "4175080"
  },
  {
    "text": "Well, when we made-- you\nlook at each of these cramps.",
    "start": "4175080",
    "end": "4181395"
  },
  {
    "text": "I mean, in fact, you could\nlook at each of these vertices separately. But you think about one of\nthese crimps and say, well,",
    "start": "4181395",
    "end": "4186509"
  },
  {
    "text": "could I have done\nit another way? Sometimes, there are crimps\nthat have other equal choices.",
    "start": "4186510",
    "end": "4191911"
  },
  {
    "text": "Maybe, there are a\nbunch of equal angles. And I could have done\na different pairing. What happens when I try\na different pairing?",
    "start": "4191912",
    "end": "4199070"
  },
  {
    "text": "Well, instead of this\nbeing in one cycle and, let's say, this\nbeing in another cycle,",
    "start": "4199070",
    "end": "4207230"
  },
  {
    "text": "if I pair these guys\nup instead, I'll end up merging those two\ncycles into one bigger thing.",
    "start": "4207230",
    "end": "4213150"
  },
  {
    "text": "It could be a path or a cycle. And the algorithm says, just\nkeep doing those cycle merges.",
    "start": "4213150",
    "end": "4219850"
  },
  {
    "text": "And if you get stuck, your\nthing is not locally foldable. That's the hard part to prove.",
    "start": "4219850",
    "end": "4225829"
  },
  {
    "text": "Otherwise, you will find\none of these patterns that you can actually\nresolve mountains and valleys",
    "start": "4225830",
    "end": "4231460"
  },
  {
    "text": "all the way through. So let's say, so start with some\nfolding-- say local folding,",
    "start": "4231460",
    "end": "4251330"
  },
  {
    "text": "whatever. I'm going to say with some\npairing of creases at vertices.",
    "start": "4251330",
    "end": "4258864"
  },
  {
    "start": "4258865",
    "end": "4266460"
  },
  {
    "text": "And merge two paths or\ncycles whenever possible.",
    "start": "4266460",
    "end": "4289385"
  },
  {
    "text": " And when I say merge,\nI mean whenever",
    "start": "4289385",
    "end": "4297760"
  },
  {
    "text": "you have-- what are the possible\nthings you could possibly merge-- when you have at some\npoint during the algorithm",
    "start": "4297760",
    "end": "4303719"
  },
  {
    "text": "a bunch of equal angles, you\nhave a choice which of these you crimp. Obviously, the mountain valley\nassignment is not fixed.",
    "start": "4303720",
    "end": "4310320"
  },
  {
    "text": "You can crimp any of them. You picked one of\nthem, and it's sort",
    "start": "4310320",
    "end": "4315920"
  },
  {
    "text": "of merging whatever this\nthing is attached to, to whatever this\nthing is attached to.",
    "start": "4315920",
    "end": "4321380"
  },
  {
    "text": "If there's something else that's\ndisconnected from that thing, I want you to instead\nmerge two of them that",
    "start": "4321380",
    "end": "4329090"
  },
  {
    "text": "combines two different\nconnected components-- two paths or cycles. Merging means I decrease\nthe total number",
    "start": "4329090",
    "end": "4334949"
  },
  {
    "text": "of paths or cycles. I combine two into one. Whenever that's possible, do it. You can prove that\nif you have parity",
    "start": "4334950",
    "end": "4341580"
  },
  {
    "text": "problem in the\nmerge thing, you had to have had a parity\nproblem originally. And merging can only\nfix parity problems.",
    "start": "4341580",
    "end": "4349260"
  },
  {
    "text": "That's the claim, and that's\nwhat I will not prove. Once you know that-- and it\ndoesn't matter in what order",
    "start": "4349260",
    "end": "4354469"
  },
  {
    "text": "or how you choose to merge-- you\njust merge as much as possible. And either the resulting\nthing is OK or not.",
    "start": "4354470",
    "end": "4362229"
  },
  {
    "text": "And accordingly, you will\ntell whether this thing is locally foldable. Sorry, I want to move\non to other things.",
    "start": "4362229",
    "end": "4368699"
  },
  {
    "text": "But I think this would be a fun\nthing to actually implement. It's an easy algorithm. And it's, I think, a pretty good\ntest it for problems like this",
    "start": "4368700",
    "end": "4381000"
  },
  {
    "text": "that prevent flat foldability. ",
    "start": "4381000",
    "end": "4393510"
  },
  {
    "text": "So let's move on from\nfoldability to origami design. ",
    "start": "4393510",
    "end": "4401690"
  },
  {
    "text": "So a bit of a big transition. And we're going to talk\nabout origami design",
    "start": "4401690",
    "end": "4406880"
  },
  {
    "text": "a lot more next class also\nbut just start it off today.",
    "start": "4406880",
    "end": "4414920"
  },
  {
    "text": "And the particular\nalgorithm for origami design I want to talk about is\ncalled the tree method.",
    "start": "4414920",
    "end": "4421850"
  },
  {
    "text": "This is probably\nthe oldest algorithm for origami design,\nin that people",
    "start": "4421850",
    "end": "4427940"
  },
  {
    "text": "have been thinking about it and\ndeveloping it for many years through this period called\nthe Bug Wars, when people were",
    "start": "4427940",
    "end": "4434140"
  },
  {
    "text": "trying to design more and\nmore complicated insects. It's like, well, I can make\nan insect with six legs.",
    "start": "4434140",
    "end": "4440139"
  },
  {
    "text": "Oh yeah, well I can make\na spider with eight legs. Oh yeah, well I can make\nan insect-- a beetle that",
    "start": "4440140",
    "end": "4447659"
  },
  {
    "text": "has wings and horns and there's\nthorns on the horns-- you know, all these crazy things.",
    "start": "4447660",
    "end": "4452780"
  },
  {
    "text": "During that time,\nthere were a lot of people thinking\nabout how do I make more and more\ncomplicated-- especially, more",
    "start": "4452780",
    "end": "4459949"
  },
  {
    "text": "limbs in my creatures\nand very precise arrangements of those\nlimbs, let's say.",
    "start": "4459950",
    "end": "4465950"
  },
  {
    "text": "And that is what the tree\nmethod deals with and was really formalized by Robert Lang,\nwho published a paper in '96,",
    "start": "4465950",
    "end": "4475420"
  },
  {
    "text": "describing it as a sort\nof complete algorithm. And it's still\nnot known for sure",
    "start": "4475420",
    "end": "4482940"
  },
  {
    "text": "that that algorithm\nalways works. But that's what\nwe've been working on-- me and Marty and Rob Lang--\nfor the last four years or so.",
    "start": "4482940",
    "end": "4492260"
  },
  {
    "text": "And soon, we will\npublish that thing and prove that this\nthing always works. But I'm going to describe the\nalgorithm without the proof",
    "start": "4492260",
    "end": "4499020"
  },
  {
    "text": "that it works. And what it does--\nI'll tell you its goal",
    "start": "4499020",
    "end": "4505862"
  },
  {
    "text": "from a mathematical perspective. ",
    "start": "4505862",
    "end": "4518260"
  },
  {
    "text": "So it's interested in\npractical origami design. So we're going to start from\na square piece of paper. It would also work\nfor triangular pieces",
    "start": "4518260",
    "end": "4524619"
  },
  {
    "text": "of paper or anything convex. But squares are what\npeople usually care about.",
    "start": "4524620",
    "end": "4531124"
  },
  {
    "text": "Sometimes it's used\nfor rectangles also. ",
    "start": "4531124",
    "end": "4566510"
  },
  {
    "text": "The idea is I give to\nyou a stick figure. ",
    "start": "4566510",
    "end": "4573110"
  },
  {
    "text": "So that's formally,\nit's a tree-- a graph without any cycles. It's a metric tree, meaning\nthat I put lengths on the edges.",
    "start": "4573110",
    "end": "4581409"
  },
  {
    "text": "I know this length-- this\nedge length-- is maybe twice as long as this one. So I really draw it with\nedge lengths in mind.",
    "start": "4581410",
    "end": "4588380"
  },
  {
    "text": "Then what I want\nyou to do is find some folding of a\npiece of paper--",
    "start": "4588380",
    "end": "4598820"
  },
  {
    "text": "I should really be looking\nat what I'm trying to match. So here, here, this\ngoes down, such",
    "start": "4598820",
    "end": "4626140"
  },
  {
    "text": "that I want to find some folding\nof a square paper-- in fact, the smallest square\npossible, so that when",
    "start": "4626140",
    "end": "4632920"
  },
  {
    "text": "I project-- like\nthis-- vertically,",
    "start": "4632920",
    "end": "4639100"
  },
  {
    "text": "the projection of that folding\nis exactly that metric tree.",
    "start": "4639100",
    "end": "4646270"
  },
  {
    "text": "And this is called a\nuniaxial-- this thing is called a uniaxial base. Let me tell you a little bit\nwhy it's called a uniaxial base.",
    "start": "4646270",
    "end": "4653699"
  },
  {
    "text": " We're thinking about what\nare called origami bases.",
    "start": "4653700",
    "end": "4660219"
  },
  {
    "text": "These there like the\nbeginning of origami models. And most classic\norigami models--",
    "start": "4660220",
    "end": "4666290"
  },
  {
    "text": "like more than 60 years ago--\nstart from one of these bases.",
    "start": "4666290",
    "end": "4671980"
  },
  {
    "text": "You've got waterbomb base on\nthe top left, preliminary base,",
    "start": "4671980",
    "end": "4678780"
  },
  {
    "text": "fish base, bird base\nwindmill base, and frog base.",
    "start": "4678780",
    "end": "4685556"
  },
  {
    "text": "I can't remember them all. I have a little example here. This is the waterbomb base.",
    "start": "4685557",
    "end": "4690750"
  },
  {
    "text": "So it's just very\nsimple crease pattern. And why this is useful\nis, it gives you",
    "start": "4690750",
    "end": "4697700"
  },
  {
    "text": "sort of four flaps of\npaper to work with. Maybe you make one\nof them the head",
    "start": "4697700",
    "end": "4703640"
  },
  {
    "text": "and the other two wings\nand the back one a tail, if you're making a crane. If doesn't actually\nstart not from this space",
    "start": "4703640",
    "end": "4709880"
  },
  {
    "text": "but from the other one. But the same idea. If you're folding a\ncrane, one of these",
    "start": "4709880",
    "end": "4715990"
  },
  {
    "text": "would be the head, the\nother tail, and two wings. This is great if you're\nmaking a four flap animal.",
    "start": "4715990",
    "end": "4721869"
  },
  {
    "text": "And if you think\nabout its projection-- and it's easier to think\nabout in this other picture--",
    "start": "4721870",
    "end": "4729520"
  },
  {
    "text": "the projection of this\nthing is a four limbed star.",
    "start": "4729520",
    "end": "4734710"
  },
  {
    "text": "You can see it's a plus sign. All of them are the same length. And so this is\nactually something you can get out of\nthe tree method.",
    "start": "4734710",
    "end": "4741610"
  },
  {
    "text": "You just give that\nas your input. You will get this 3D thing\nand this crease pattern",
    "start": "4741610",
    "end": "4747870"
  },
  {
    "text": "as your origami-- as the output.",
    "start": "4747870",
    "end": "4754060"
  },
  {
    "text": "Let me show you the\nprogram in action. So Robert Lang\nimplemented this thing. It's called tree maker.",
    "start": "4754060",
    "end": "4760110"
  },
  {
    "text": "It's freely available, open\nsource, all that good stuff. ",
    "start": "4760110",
    "end": "4768540"
  },
  {
    "text": "And I'm not an expert at\nusing it, so bear with me. But if we wanted to say,\nI would like that star.",
    "start": "4768540",
    "end": "4779970"
  },
  {
    "text": "OK, now, I drew it obviously\nnot with all the lengths equal, but it's ignoring the\nlengths that I drew.",
    "start": "4779970",
    "end": "4785090"
  },
  {
    "text": "And they're actually\nspecified here. So all the lengths here\nare supposed to be 1. And then I say, OK, optimize.",
    "start": "4785090",
    "end": "4791500"
  },
  {
    "text": "And then make a crease pattern. And then show me\nthe crease pattern. And there it is, exactly\nthe crease pattern",
    "start": "4791500",
    "end": "4798059"
  },
  {
    "text": "I made, although actually I can\nsee from the mountain valley assignment-- because\nthis is not really-- this is not flat origami.",
    "start": "4798060",
    "end": "4804450"
  },
  {
    "text": "It made it this way. So it's flat. Of course, the projection is\nthe same-- still four limbs.",
    "start": "4804450",
    "end": "4809619"
  },
  {
    "text": " And so it's dashes for valleys\nand solid lines for mountains.",
    "start": "4809620",
    "end": "4817330"
  },
  {
    "text": "But you can make\nanything you want. So let's say we want to\nmake-- I don't know-- a lizard",
    "start": "4817330",
    "end": "4825130"
  },
  {
    "text": "or something. So the blue lines are the tree. ",
    "start": "4825130",
    "end": "4837820"
  },
  {
    "text": "So here's-- can I do this? Yes, there we go. So here, I have a forearm,\na head, a foreleg,",
    "start": "4837820",
    "end": "4846380"
  },
  {
    "text": "another forearm, a body segment,\ntail, and two hind legs.",
    "start": "4846380",
    "end": "4851489"
  },
  {
    "text": "Maybe I want to make that. So I say optimize and then\nmake a crease pattern, and then",
    "start": "4851490",
    "end": "4858630"
  },
  {
    "text": "boom. You fold that, and it will\nhave exactly that projection. And assuming it did a\nreasonable job at computation,",
    "start": "4858630",
    "end": "4864750"
  },
  {
    "text": "this will be the best\nway to fold this thing. And it's the\nsmallest square that matches exactly that shape.",
    "start": "4864750",
    "end": "4870670"
  },
  {
    "text": "You get the best scale\nfactor between the size of your piece of paper\nand the target shape.",
    "start": "4870670",
    "end": "4877570"
  },
  {
    "text": "But actually, doing\nthat optimization-- the first step I\ndid-- is NP-complete. So it's not going\nto do it perfectly,",
    "start": "4877570",
    "end": "4882985"
  },
  {
    "text": "and we'll prove that Wednesday. But the heuristics\nare pretty good. AUDIENCE: It finds a local.",
    "start": "4882985",
    "end": "4888756"
  },
  {
    "text": "PROFESSOR: It finds\na local minimum, and often it finds\na pretty good one. And sometimes you can coax it\nto find better ones, but, yeah.",
    "start": "4888756",
    "end": "4896000"
  },
  {
    "text": "It's not perfect, but\nhey, it's NP-complete. So you can't do it. This actually shows you what it\nwould look like in x-ray view.",
    "start": "4896000",
    "end": "4903360"
  },
  {
    "text": " And then you can say,\noh, that was nice,",
    "start": "4903360",
    "end": "4910100"
  },
  {
    "text": "but let's-- where is\nmy-- yeah, that was good.",
    "start": "4910100",
    "end": "4915980"
  },
  {
    "text": "But maybe I really\nwanted the head segment to be shorter length of 0.5.",
    "start": "4915980",
    "end": "4923660"
  },
  {
    "text": "And then I wanted the\ntail to be really long. And then you can optimize that\nand find a crease pattern.",
    "start": "4923660",
    "end": "4932240"
  },
  {
    "text": "And it'll complain. Because it's having trouble. Oh, dear. ",
    "start": "4932240",
    "end": "4938150"
  },
  {
    "text": "Demo effect. I should have tried\nthis example before. It's not-- oh, gosh.",
    "start": "4938150",
    "end": "4943935"
  },
  {
    "text": "It's one of these annoying ones. I should say-- I should add\nsome feature like maybe a strain",
    "start": "4943935",
    "end": "4962710"
  },
  {
    "text": "split something, add a\nlittle bit, maybe do that",
    "start": "4962710",
    "end": "4968180"
  },
  {
    "text": "and-- there we go.",
    "start": "4968180",
    "end": "4974150"
  },
  {
    "text": "I cheated, and I'll explain\nhow I cheated last time. But if sometimes the\nparticular method",
    "start": "4974150",
    "end": "4980380"
  },
  {
    "text": "fails but you can fix it by\nadding in another tiny limb off the edge somewhere--\nand of course, you",
    "start": "4980380",
    "end": "4987949"
  },
  {
    "text": "can then get rid of that at\nthe end when you're folding, it only makes the\nproblem slightly harder. And it'll still find a folding.",
    "start": "4987950",
    "end": "4994050"
  },
  {
    "text": "But we'll talk about\nthat next time. And I'm way out of time,\nso we will stop there.",
    "start": "4994050",
    "end": "5001320"
  },
  {
    "start": "5001320",
    "end": "5003224"
  }
]