[
  {
    "text": " [MUSIC PLAYING - \"JESU, JOY OF\nMAN'S DESIRING\" BY JOHANN SEBASTIAN BACH] ",
    "start": "0",
    "end": "17260"
  },
  {
    "text": "PROFESSOR: Well, up 'til now, I\nsuppose, we've been learning about a lot of techniques for\norganizing big programs,",
    "start": "17260",
    "end": "26690"
  },
  {
    "text": "symbolic manipulation a bit,\nsome of the technology that",
    "start": "26690",
    "end": "33180"
  },
  {
    "text": "you use for establishing\nlanguages, one in terms of another, which is used for\norganizing very large",
    "start": "33180",
    "end": "39340"
  },
  {
    "text": "programs. In fact, the nicest\nprograms I know look more like a pile of languages than like\na decomposition of a problem",
    "start": "39340",
    "end": "47310"
  },
  {
    "text": "into parts. Well, I suppose at this point,\nthere are still, however, a",
    "start": "47310",
    "end": "52880"
  },
  {
    "text": "few mysteries about how this\nsort of stuff works. And so what we'd like to do now\nis diverge from the plan",
    "start": "52880",
    "end": "62410"
  },
  {
    "text": "of telling you how to organize\nbig programs, and rather tell you something about the\nmechanisms by which these",
    "start": "62410",
    "end": "69869"
  },
  {
    "text": "things can be made to work. The main reason for this is\ndemystification, if you will,",
    "start": "69870",
    "end": "78652"
  },
  {
    "text": "that we have a lot of mysteries\nleft, like exactly how it is the case that a\nprogram is controlled, how a",
    "start": "78652",
    "end": "87260"
  },
  {
    "text": "computer knows what the next\nthing to do is, or something like that.",
    "start": "87260",
    "end": "92430"
  },
  {
    "text": "And what I'd like to do now is\nmake that clear to you, that even if you've never played\nwith a physical computer",
    "start": "92430",
    "end": "98580"
  },
  {
    "text": "before, the mechanism is really\nvery simple, and that",
    "start": "98580",
    "end": "104660"
  },
  {
    "text": "you can understand it completely\nwith no trouble. So I'd like to start by\nimagining that we--",
    "start": "104660",
    "end": "111390"
  },
  {
    "text": "well, the way we're going to do\nthis, by the way, is we're going to take some very simple\nLisp programs, very simple",
    "start": "111390",
    "end": "117320"
  },
  {
    "text": "Lisp programs, and transform\nthem into hardware. I'm not going to worry about\nsome intermediate step of",
    "start": "117320",
    "end": "125260"
  },
  {
    "text": "going through some existing\ncomputer machine language and then showing you how that\ncomputer works, because that's",
    "start": "125260",
    "end": "130959"
  },
  {
    "text": "not as illuminating. So what I'm really going to\nshow you is how a piece of",
    "start": "130960",
    "end": "136310"
  },
  {
    "text": "machinery can be built to do a\njob that you have written down as a program.",
    "start": "136310",
    "end": "142040"
  },
  {
    "text": "That program is, in fact, a\ndescription of a machine. We're going to start with a very\nsimple program, proceed",
    "start": "142040",
    "end": "148599"
  },
  {
    "text": "to show you some simple\nmechanisms, proceed to a few more complicated programs, and\nthen later show you a not very",
    "start": "148600",
    "end": "156660"
  },
  {
    "text": "complicated program, how the\nevaluator transforms into a piece of hardware. And of course at that point,\nyou have made the universal",
    "start": "156660",
    "end": "163390"
  },
  {
    "text": "transition and can execute any\nprogram imaginable with a piece of well-defined\nhardware.",
    "start": "163390",
    "end": "168799"
  },
  {
    "text": " Well, let's start up now, give\nyou a real concrete feeling",
    "start": "168800",
    "end": "174319"
  },
  {
    "text": "for this sort of thing. Let's start with a very\nsimple program.",
    "start": "174320",
    "end": "179600"
  },
  {
    "text": "Here's Euclid's algorithm.  It's actually a little\nbit more modern",
    "start": "179600",
    "end": "186140"
  },
  {
    "text": "than Euclid's algorithm. Euclid's algorithm for computing\nthe greatest common divisor of two numbers was\ninvented 350 BC, I think.",
    "start": "186140",
    "end": "194299"
  },
  {
    "text": "It's the oldest known\nalgorithm. ",
    "start": "194300",
    "end": "199320"
  },
  {
    "text": "But here we're going to talk\nabout GCD of A and B, the Greatest Common Divisor or two\nnumbers, A and B. And the",
    "start": "199320",
    "end": "207380"
  },
  {
    "text": "algorithm is extremely simple. If B is 0, then the result is\ngoing to be A. Otherwise, the",
    "start": "207380",
    "end": "218170"
  },
  {
    "text": "result is the GCD of B and the\nremainder when A is divided by",
    "start": "218170",
    "end": "232989"
  },
  {
    "text": "B.",
    "start": "232990",
    "end": "238530"
  },
  {
    "text": "So this we have here is a very\nsimple iterative process. This a simple recursive\nprocedure, recursively defined",
    "start": "238530",
    "end": "245550"
  },
  {
    "text": "procedure, recursive definition,\nwhich yields an iterative process. And the way it works is that\nevery step, it determines",
    "start": "245550",
    "end": "253840"
  },
  {
    "text": "whether B was zero. And if B is 0, we got the answer\nin A. Otherwise, we",
    "start": "253840",
    "end": "261660"
  },
  {
    "text": "make another step where A is\nthe old B, and B is the remainder of the old A divided\nby the old B. Very simple.",
    "start": "261660",
    "end": "271110"
  },
  {
    "text": "Now this, I've already told you\nsome of the mechanism by just saying it that way. I set it in time.",
    "start": "271110",
    "end": "276360"
  },
  {
    "text": "I said there are certain steps,\nand that, in fact, one of the things you can see here\nis that one of the reasons why",
    "start": "276360",
    "end": "282509"
  },
  {
    "text": "this is iterative is nothing is\nneeded of the last step to get the answer.",
    "start": "282510",
    "end": "289490"
  },
  {
    "text": "All of the information that's\nneeded to run this algorithm is in A and B. It has two\nwell-defined state variables.",
    "start": "289490",
    "end": "297540"
  },
  {
    "text": " So I'm going to define a machine\nfor you that can",
    "start": "297540",
    "end": "304370"
  },
  {
    "text": "compute you GCDs. Now let's see. Every computer that's ever\nbeen made that's a",
    "start": "304370",
    "end": "310010"
  },
  {
    "text": "single-process computer, as\nopposed to a multiprocessor of some sort, is made according\nto the same plan.",
    "start": "310010",
    "end": "317840"
  },
  {
    "text": "The plan is the computer has two\nparts, a part called the datapaths, and a part called\nthe controller.",
    "start": "317840",
    "end": "325910"
  },
  {
    "text": "The datapaths correspond to a\ncalculator that you might have. It contains certain\nregisters that remember",
    "start": "325910",
    "end": "331580"
  },
  {
    "text": "things, and you've all\nused calculators. It has some buttons on\nit and some lights.",
    "start": "331580",
    "end": "337030"
  },
  {
    "text": "And so by pushing the various\nbuttons, you can cause operations to happen inside\nthere among the registers, and",
    "start": "337030",
    "end": "342080"
  },
  {
    "text": "some of the results\nto be displayed. That's completely mechanical. You could imagine that box has\nno intelligence in it.",
    "start": "342080",
    "end": "350900"
  },
  {
    "text": "Now it might be very impressive\nthat it can produce the sine of a number, but that\nat least is apparently",
    "start": "350900",
    "end": "357669"
  },
  {
    "text": "possibly mechanical. At least, I could open that\nup in the same way I'm about to open GCD.",
    "start": "357670",
    "end": "362690"
  },
  {
    "text": "So this may have a whole\ncomputer inside of it, but that's not interesting. Addition is certainly simple.",
    "start": "362690",
    "end": "368200"
  },
  {
    "text": "That can be done without\nany further mechanism. Now also, if we were to look\nat the other half, the",
    "start": "368200",
    "end": "375080"
  },
  {
    "text": "controller, that's a part\nthat's dumb, too. It pushes the buttons.",
    "start": "375080",
    "end": "380350"
  },
  {
    "text": "It pushes them according to the\nsequence, which is written down on a piece of paper,\nand observes the lights.",
    "start": "380350",
    "end": "386290"
  },
  {
    "text": "And every so often, it comes to\na place in a sequence that says, if light A is on,\ndo this sequence.",
    "start": "386290",
    "end": "392370"
  },
  {
    "text": "Otherwise, do that sequence. And thereby, there's no\ncomplexity there either.",
    "start": "392370",
    "end": "397949"
  },
  {
    "text": "Well, let's just draw that and\nsee what we feel about that. So for computing GCDs, what I\nwant you to think about is",
    "start": "397950",
    "end": "408270"
  },
  {
    "text": "that there are these\nregisters. A register is a place where I\nstore a number, in this case. And this one's called a.",
    "start": "408270",
    "end": "416810"
  },
  {
    "text": "And then there's another\none for storing b. ",
    "start": "416810",
    "end": "423170"
  },
  {
    "text": "Now we have to see what things\nwe can do with these registers, and they're not\nentirely obvious what you can do with them.",
    "start": "423170",
    "end": "429840"
  },
  {
    "text": "Well, we have to see\nwhat things we need to do with them. We're looking at the problem\nwe're trying to solve. One of the important things\nfor designing a computer,",
    "start": "429840",
    "end": "437100"
  },
  {
    "text": "which I think most designers\ndon't do, is you study the problem you want to solve and\nthen use what you learn from",
    "start": "437100",
    "end": "443910"
  },
  {
    "text": "studying the problem you want\nto solve to put in the mechanisms needed to solve\nit in the computer you're building, no more no less.",
    "start": "443910",
    "end": "452140"
  },
  {
    "text": "Now it may be that the problem\nyou're trying to solve is everybody's problem, in which\ncase you have to build in a",
    "start": "452140",
    "end": "457200"
  },
  {
    "text": "universal interpreter\nof some language. But you shouldn't put any more\nin than required to build the",
    "start": "457200",
    "end": "462580"
  },
  {
    "text": "universal interpreter\nof some language. We'll worry about that\nin a second. OK, going back to\nhere, let's see.",
    "start": "462580",
    "end": "469930"
  },
  {
    "text": "What do we have to\nbe able to do? Well, somehow, we have to be\nable to get B into A. We have",
    "start": "469930",
    "end": "476580"
  },
  {
    "text": "to be able to get the old value\nof B into the value of A. So we have to have some path\nby which stuff can flow,",
    "start": "476580",
    "end": "483340"
  },
  {
    "text": "whatever this information\nis, from b to a. I'm going to draw that with by\nan arrow saying that it is",
    "start": "483340",
    "end": "490520"
  },
  {
    "text": "possible to move the contents\nof b into a, replacing the value of a. And there's a little button\nhere which you push which",
    "start": "490520",
    "end": "497660"
  },
  {
    "text": "allows that to happen. That's what the little\nx is here.",
    "start": "497660",
    "end": "503069"
  },
  {
    "text": "Now it's also the case that I\nhave to be able to compute the remainder of a and b. Now that may be a complicated\nmess.",
    "start": "503070",
    "end": "508860"
  },
  {
    "text": "On the other hand, I'm going\nto make it a small box. If we have to, we may open up\nthat box and look inside and",
    "start": "508860",
    "end": "514890"
  },
  {
    "text": "see what it is. So here, I'm going to have a\nlittle box, which I'm going to draw this way, which we'll\ncall the remainder.",
    "start": "514890",
    "end": "526440"
  },
  {
    "text": "And it's going to take in a.  That's going to take in b.",
    "start": "526440",
    "end": "534370"
  },
  {
    "text": "And it's going to put out\nsomething, the remainder of a",
    "start": "534370",
    "end": "539660"
  },
  {
    "text": "divided by b. Another thing we have to see\nhere is that we have to be able to test whether\nb is equal to 0.",
    "start": "539660",
    "end": "548000"
  },
  {
    "text": "Well, that means somebody's\ngot to be looking at-- a thing that's looking\nat the value of b.",
    "start": "548000",
    "end": "553390"
  },
  {
    "text": "I have a light bulb here which\nlights up if b equals 0. ",
    "start": "553390",
    "end": "561110"
  },
  {
    "text": "That's its job. And finally, I suppose, because\nof the fact that we",
    "start": "561110",
    "end": "567250"
  },
  {
    "text": "want the new value of a to be\nthe old value of b, and simultaneously the new value of\nb to be something I've done",
    "start": "567250",
    "end": "573820"
  },
  {
    "text": "with a, and if I plan to make\nmy machine such that everything happens one at a\ntime, one motion at a time,",
    "start": "573820",
    "end": "581620"
  },
  {
    "text": "and I can't put two numbers in\na register, then I have to have another place to put one\nwhile I'm interchanging. ",
    "start": "581620",
    "end": "589534"
  },
  {
    "text": "OK? I can't interchange the two\nthings in my hands, unless I either put two in one hand and\nthen pull it back the other",
    "start": "589534",
    "end": "594730"
  },
  {
    "text": "way, or unless I put one down,\npick it up, and put the other one, like that, unless I'm a\njuggler, which I'm not, as you",
    "start": "594730",
    "end": "602930"
  },
  {
    "text": "can see, in which case I have a possibility of timing errors.",
    "start": "602930",
    "end": "608850"
  },
  {
    "text": "In fact, much of the type of\ncomputer design people do involves timing errors, of some\npotential timing errors,",
    "start": "608850",
    "end": "615260"
  },
  {
    "text": "which I don't much like. So for that reason, I have to\nhave a place to put the second",
    "start": "615260",
    "end": "622500"
  },
  {
    "text": "one of them down. So I have a place called t,\nwhich is a register just for temporary, t, with\na button on it.",
    "start": "622500",
    "end": "630470"
  },
  {
    "text": "And then I'll take the result of\nthat, since I have to take that and put into b, over here,\nwe'll take the result of",
    "start": "630470",
    "end": "635640"
  },
  {
    "text": "that and go like this,\nand a button here. ",
    "start": "635640",
    "end": "642430"
  },
  {
    "text": "So that's the datapaths\nof a GCD machine.",
    "start": "642430",
    "end": "647600"
  },
  {
    "text": "Now what's the controller? Controller's a very\nsimple thing, too. The machine has a state.",
    "start": "647600",
    "end": "653710"
  },
  {
    "text": "The way I like to visualize that\nis that I've got a maze.",
    "start": "653710",
    "end": "659010"
  },
  {
    "text": "And the maze has a\nbunch of places connected by directed arrows.",
    "start": "659010",
    "end": "664430"
  },
  {
    "text": "And what I have is a marble,\nwhich represents the state of the controller.",
    "start": "664430",
    "end": "670740"
  },
  {
    "text": "The marble rolls around\nin the maze. Of course, this analogy breaks\ndown for energy reasons.",
    "start": "670740",
    "end": "677149"
  },
  {
    "text": "I sometimes have to pump the\nmarble up to the top, because it's going to otherwise be a\nperpetual motion machine. But not worrying about\nthat, this is",
    "start": "677150",
    "end": "684270"
  },
  {
    "text": "not a physical analogy. This marble rolls around. And every time it rolls around\ncertain bumpers, like in a",
    "start": "684270",
    "end": "690180"
  },
  {
    "text": "pinball machine, it pushes\none of these buttons. And every so often, it comes\nto a place, which is a",
    "start": "690180",
    "end": "696810"
  },
  {
    "text": "division, where it has\nto make a choice. And there's a flap, which\nis controlled by this.",
    "start": "696810",
    "end": "702360"
  },
  {
    "text": " So that's a really mechanical\nway of thinking about it.",
    "start": "702360",
    "end": "708820"
  },
  {
    "text": "Of course, controllers these\ndays, are not built that way in real computers. They're built with\na little bit of",
    "start": "708820",
    "end": "714090"
  },
  {
    "text": "ROM and a state register. But there was a time, like the\nDEC PDP-6, where that's how",
    "start": "714090",
    "end": "719726"
  },
  {
    "text": "you built the controller\nof a machine. There was a bit that ran around\nthe delay line, and it",
    "start": "719726",
    "end": "726800"
  },
  {
    "text": "triggered things\nas it went by. And it would come back\nto the beginning and get fed round again.",
    "start": "726800",
    "end": "731990"
  },
  {
    "text": "And of course, there were all\nsorts of great bugs you could have like two bits going\naround, two marbles.",
    "start": "731990",
    "end": "737670"
  },
  {
    "text": "And then the machine has\nlost its marbles. That happens, too. Oh, well. So anyway, for this machine,\nwhat I have",
    "start": "737670",
    "end": "744570"
  },
  {
    "text": "to do is the following. I'm going to start\nmy maze here. ",
    "start": "744570",
    "end": "750520"
  },
  {
    "text": "And the first thing I've got\nto do, in a notation which many of you are familiar with,\nis b equal to zero, a test.",
    "start": "750520",
    "end": "761540"
  },
  {
    "text": "And there's a possibility,\neither yes, in which case I'm done. ",
    "start": "761540",
    "end": "769790"
  },
  {
    "text": "Otherwise, if no, then\nI'm going have to roll over some bumpers. I'm going to do it in\nthe following order.",
    "start": "769790",
    "end": "777420"
  },
  {
    "text": "I want to do this interchange\ngame.",
    "start": "777420",
    "end": "784050"
  },
  {
    "text": "Now first, since I need both a\nand b, but then the first-- and this is not necessary-- I want to collect this.",
    "start": "784050",
    "end": "791070"
  },
  {
    "text": "This is the thing that's\ngoing to go into b. So I'm going to say, take this,\nwhich depends upon both a and b, and put the remainder\ninto here.",
    "start": "791070",
    "end": "799149"
  },
  {
    "text": "So I'm going to push this button\nfirst. Then, I'm going to transfer b to a, push that\nbutton, and then I transfer",
    "start": "799150",
    "end": "806460"
  },
  {
    "text": "the temporary into b,\npush that button.",
    "start": "806460",
    "end": "812030"
  },
  {
    "text": "So a very sequential machine,\nit's very inefficient.",
    "start": "812030",
    "end": "817750"
  },
  {
    "text": "But that's fine right now. We're going to name the buttons,\nt gets remainder. ",
    "start": "817750",
    "end": "826750"
  },
  {
    "text": "a gets b. And b gets t.",
    "start": "826750",
    "end": "835470"
  },
  {
    "text": "And then I'm going to go around\nhere and it's to go back to start.",
    "start": "835470",
    "end": "841620"
  },
  {
    "text": "And if you look, what\nare we seeing here? We're seeing the various-- what I really have is some sort\nof mechanical connection,",
    "start": "841620",
    "end": "847400"
  },
  {
    "text": "where t gets r controls\nthis thing.",
    "start": "847400",
    "end": "853620"
  },
  {
    "text": " And I have here that a gets b\ncontrols this fellow over",
    "start": "853620",
    "end": "860910"
  },
  {
    "text": "here, and this fellow\nover here.",
    "start": "860910",
    "end": "868120"
  },
  {
    "text": "Boy, that's absolutely\npessimal, the inverse of optimal. Every line heads across every\nother line the way I drew it.",
    "start": "868120",
    "end": "874590"
  },
  {
    "text": " I suppose this goes\nhere, b gets t.",
    "start": "874590",
    "end": "881149"
  },
  {
    "text": " Now I'd like to run\nthis machine.",
    "start": "881150",
    "end": "888040"
  },
  {
    "text": "But before I run the machine,\nI want to write down a description of this controller,\njust so you can see that these things, of\ncourse, as usual, can be",
    "start": "888040",
    "end": "894160"
  },
  {
    "text": "written down in some nice\nlanguage, so that we don't have to always draw these\ndiagrams. One of the problems with diagrams is that they\ntake up a lot of space.",
    "start": "894160",
    "end": "900710"
  },
  {
    "text": "And for a machine this small,\nit takes two blackboards. For a machine that's the\nevaluator machine, I have trouble putting it into\nthis room, even though",
    "start": "900710",
    "end": "908320"
  },
  {
    "text": "it isn't very big. So I'm going to make a little\nlanguage for this that's just a description of that,\nsaying define a",
    "start": "908320",
    "end": "917529"
  },
  {
    "text": "machine we'll call GCD.",
    "start": "917530",
    "end": "924420"
  },
  {
    "text": "Of course, once we have\nsomething like this, we have a simulator for it. And the reason why we want to\nbuild a language in this form,",
    "start": "924420",
    "end": "929629"
  },
  {
    "text": "is because all of a sudden\nwe can manipulate these expressions that I'm\nwriting down. And then of course I can write\nthings that can algebraically",
    "start": "929630",
    "end": "935970"
  },
  {
    "text": "manipulate these things,\nsimulate them, all that sort of things that I might want to\ndo, perhaps transform them as",
    "start": "935970",
    "end": "941255"
  },
  {
    "text": "a layout, who knows. Once I have a nice\nrepresentation of registers,",
    "start": "941255",
    "end": "948185"
  },
  {
    "text": "it has certain registers, which\nwe can call A, B, and T.",
    "start": "948185",
    "end": "956326"
  },
  {
    "text": "And there's a controller. ",
    "start": "956326",
    "end": "962190"
  },
  {
    "text": "Actually, a better language,\nwhich would be more explicit, would be one which named\nevery button also and",
    "start": "962190",
    "end": "969440"
  },
  {
    "text": "said what it did. Like, this button causes the\ncontents of T to go to the contents of B. Well I don't want\nto do that, because it's",
    "start": "969440",
    "end": "976310"
  },
  {
    "text": "actually harder to read\nto do that, and it takes up more space. So I'm going to have that in\nthe instructions written in",
    "start": "976310",
    "end": "981710"
  },
  {
    "text": "the controller. It's going to be implicit\nwhat the operations are. They can be deduced by reading\nthese and collecting together",
    "start": "981710",
    "end": "989990"
  },
  {
    "text": "all the different things\nthat can be done. Well, let's just look at\nwhat these things are.",
    "start": "989990",
    "end": "995482"
  },
  {
    "text": "There's a little loop that we\ngo around which says branch,",
    "start": "995482",
    "end": "1002550"
  },
  {
    "text": "this is the representation of\nthe little flap that decides which way you go here, if 0\nfetch of B, the contents of B,",
    "start": "1002550",
    "end": "1018010"
  },
  {
    "text": "and if the contents of\nB is 0, then go to a place called done.",
    "start": "1018010",
    "end": "1023639"
  },
  {
    "text": "Now, one thing you're seeing\nhere, this looks very much like a traditional computer\nlanguage. And what you're seeing here\nis things like labels that",
    "start": "1023640",
    "end": "1033099"
  },
  {
    "text": "represent places in a sequence\nwritten down as a sequence. The reason why they're needed\nis because over here, I've",
    "start": "1033099",
    "end": "1041699"
  },
  {
    "text": "written something with loops. But if I'm writing English text,\nor something like that, it's hard to refer to a place.",
    "start": "1041700",
    "end": "1048580"
  },
  {
    "text": "I don't have arrows. Arrows are represented by giving\nnames to the places where the arrows terminate, and\nthen referring to them by",
    "start": "1048580",
    "end": "1055679"
  },
  {
    "text": "those names. Now this is just an encoding. There's nothing magical about\nthings like that.",
    "start": "1055680",
    "end": "1063150"
  },
  {
    "text": "Next thing we're going to do is\nwe're going to say, how do we do T gets R? Oh, that's easy enough,\nassign.",
    "start": "1063150",
    "end": "1069029"
  },
  {
    "text": " We assign to T the remainder.",
    "start": "1069030",
    "end": "1076400"
  },
  {
    "text": "Assign is the name\nof the button.",
    "start": "1076400",
    "end": "1081470"
  },
  {
    "text": "That's the button-pusher. Assign to T the remainder, and\nhere's the representation of the operation, when we divide\nthe fetch of A by the fetch of",
    "start": "1081470",
    "end": "1097550"
  },
  {
    "text": "B.",
    "start": "1097550",
    "end": "1103478"
  },
  {
    "text": "And we're also going to assign\nto A the fetch of B, assign to",
    "start": "1103478",
    "end": "1115560"
  },
  {
    "text": "B the result of getting the\ncontents of T. And now I have",
    "start": "1115560",
    "end": "1130140"
  },
  {
    "text": "to refer to the beginning\nhere. I see, why don't I call that\nloop like I have here?",
    "start": "1130140",
    "end": "1135760"
  },
  {
    "start": "1135760",
    "end": "1145390"
  },
  {
    "text": "So that's that reference\nto that arrow. And when we're done,\nwe're done. We go to here, which is\nthe end of the thing.",
    "start": "1145390",
    "end": "1154340"
  },
  {
    "text": "So here's just a written\nrepresentation of this fragment of machinery that\nwe've drawn here.",
    "start": "1154340",
    "end": "1161659"
  },
  {
    "text": "Now the next thing I'd like\nto do is run this. I want us to feel it running.",
    "start": "1161660",
    "end": "1167620"
  },
  {
    "text": "Never done this before,\nyou got to do it once. So let's take a particular\nproblem.",
    "start": "1167620",
    "end": "1173100"
  },
  {
    "text": "Suppose we want to compute\nthe GCD of a equals 30",
    "start": "1173100",
    "end": "1178580"
  },
  {
    "text": "and b equals 42. I have no idea what\nthat is right now.",
    "start": "1178580",
    "end": "1185860"
  },
  {
    "text": "But a 30 and b is 42. So that's how I start\nthis thing up.",
    "start": "1185860",
    "end": "1192410"
  },
  {
    "text": "Well, what's the first\nthing I do? I say is B equal to 0, no.",
    "start": "1192410",
    "end": "1197590"
  },
  {
    "text": "Then assign to T the remainder\nof the fetch of A and the fetch of B. Well the remainder\nof 30 when divided by",
    "start": "1197590",
    "end": "1205640"
  },
  {
    "text": "42 is itself 30.",
    "start": "1205640",
    "end": "1211130"
  },
  {
    "text": "Push that button. Now the marble has\nrolled to here.",
    "start": "1211130",
    "end": "1217100"
  },
  {
    "text": "A gets B. That pushes\nthis button. So 42 moves into here.",
    "start": "1217100",
    "end": "1226360"
  },
  {
    "text": "B gets C. Push that button. The 30 goes here.",
    "start": "1226360",
    "end": "1232225"
  },
  {
    "text": "Let met just interchange them. Now let's see, go back\nto the beginning.",
    "start": "1232225",
    "end": "1238280"
  },
  {
    "text": "B 0, no. T gets the remainder. I suppose the remainder when\ndividing 42 by 30 is 12.",
    "start": "1238280",
    "end": "1247240"
  },
  {
    "text": "I push that one. Next thing I do is allow the\n30 to go to here, push this",
    "start": "1247240",
    "end": "1254360"
  },
  {
    "text": "one, allow the 12\nto go to here. ",
    "start": "1254360",
    "end": "1259549"
  },
  {
    "text": "Go around this thing. Is that done? No. How about--",
    "start": "1259550",
    "end": "1265080"
  },
  {
    "text": "so now I have to find out the\nremainder of 30 divided by 12. And I believe that's 6.",
    "start": "1265080",
    "end": "1272419"
  },
  {
    "text": "So 6 goes here on this\nbutton push. Then the next thing I push\nis this one, which the",
    "start": "1272420",
    "end": "1278550"
  },
  {
    "text": "12 goes into here.",
    "start": "1278550",
    "end": "1283730"
  },
  {
    "text": "Then I push this button. The 6 gets into here. ",
    "start": "1283730",
    "end": "1289850"
  },
  {
    "text": "Is 6 equal to 0? No. OK. So then at that point, the next\nthing to do is divide it.",
    "start": "1289850",
    "end": "1298380"
  },
  {
    "text": "Ooh, this has got a\nremainder of 0. Looks like we're almost done. Move the 6 over here next.",
    "start": "1298380",
    "end": "1304360"
  },
  {
    "text": " 0 over here. Is the answer 0?",
    "start": "1304360",
    "end": "1310200"
  },
  {
    "text": "Yes. B is 0, therefore the\nanswer is in A. The answer is 6.",
    "start": "1310200",
    "end": "1316610"
  },
  {
    "text": "And indeed that's right, because\nif we look at the original problem, what we have\nis 30 is 2 times 3 times 5,",
    "start": "1316610",
    "end": "1327060"
  },
  {
    "text": "and 42 is 2 times 3 times 7. So the greatest common divisor\nis 2 times 3, which is 6.",
    "start": "1327060",
    "end": "1335090"
  },
  {
    "text": " Now normally, we write one other\nlittle line here, just",
    "start": "1335090",
    "end": "1340780"
  },
  {
    "text": "to make it a little bit clearer,\nwhich is that we leave in a connection saying\nthat this light is the guy",
    "start": "1340780",
    "end": "1349760"
  },
  {
    "text": "that that flap looks at.  Of course, any real machine\nhas a lot more complicated",
    "start": "1349760",
    "end": "1358440"
  },
  {
    "text": "things in it than what\nI've just shown you. Let's look for a second at\nthe first still store.",
    "start": "1358440",
    "end": "1367980"
  },
  {
    "text": "Wow. Well you see, for example, one\nthing we might want to do is worry about the operations\nthat are of IO form.",
    "start": "1367980",
    "end": "1376840"
  },
  {
    "text": "And we may have to collect\nsomething from the outside.",
    "start": "1376840",
    "end": "1381980"
  },
  {
    "text": "So a state machine that we might\nhave, the controller may have to, for example, get a\nvalue from something and put",
    "start": "1381980",
    "end": "1391190"
  },
  {
    "text": "register a to load it up. I have to master load up\nregister b with another value.",
    "start": "1391190",
    "end": "1397070"
  },
  {
    "text": "And then later, when I'm done,\nI might want to print the answer out. And of course, that might be\neither simple or complicated.",
    "start": "1397070",
    "end": "1406250"
  },
  {
    "text": "I'm writing, assuming print\nis very simple, and read is very simple. But in fact, in the real\nworld, those are very",
    "start": "1406250",
    "end": "1411700"
  },
  {
    "text": "complicated operations, usually\nmuch, much larger and more complicated than the thing\nyou're doing as your",
    "start": "1411700",
    "end": "1417080"
  },
  {
    "text": "problem you're trying\nto solve.  On the other hand, I can\nremember a time when, I",
    "start": "1417080",
    "end": "1425060"
  },
  {
    "text": "remember using IBM 7090 computer\nof sorts, where things like read and write of\na single object, a single",
    "start": "1425060",
    "end": "1433600"
  },
  {
    "text": "number, a number, is a primitive\noperation of the IO controller.",
    "start": "1433600",
    "end": "1439065"
  },
  {
    "text": "OK? And so we have that kind\nof thing in there. And in such a machine, well,\nwhat are we really doing?",
    "start": "1439065",
    "end": "1448360"
  },
  {
    "text": "We're just saying that there's\na source over here called \"read,\" which is an operation\nwhich always has a value.",
    "start": "1448360",
    "end": "1454660"
  },
  {
    "text": "We have to think about this as\nalways having a value which can be gated into either\nregister a or b.",
    "start": "1454660",
    "end": "1461660"
  },
  {
    "text": "And print is some sort of thing\nwhich when you gate it appropriately, when you push the\nbutton on it, will cause a",
    "start": "1461660",
    "end": "1467410"
  },
  {
    "text": "print of the value that's\ncurrently in register a. Nothing very exciting.",
    "start": "1467410",
    "end": "1473050"
  },
  {
    "text": "So that's one sort of thing you\nmight want to have. But these are also other\nthings that are a little bit worrisome.",
    "start": "1473050",
    "end": "1478320"
  },
  {
    "text": "Like I've used here some\ncomplicated mechanisms. What you see here\nis remainder.",
    "start": "1478320",
    "end": "1483850"
  },
  {
    "text": "What is that? That may not be so obvious\nhow to compute. It may be something which when\nyou open it up, you get a",
    "start": "1483850",
    "end": "1489860"
  },
  {
    "text": "whole machine. OK? In fact, that's true. For example, if I write down the\nprogram for remainder, the",
    "start": "1489860",
    "end": "1499570"
  },
  {
    "text": "simplest program for it is\nby repeated subtraction. Because of course, division\ncan be done by repeated",
    "start": "1499570",
    "end": "1506380"
  },
  {
    "text": "subtraction of numbers,\nof integers. So the remainder of N divided by\nD is nothing more than if N",
    "start": "1506380",
    "end": "1530270"
  },
  {
    "text": "is less than D, then the result\nis N. Otherwise, it's the remainder when we subtract\nD from N with respect to D,",
    "start": "1530270",
    "end": "1548350"
  },
  {
    "text": "when divided by D. Gee,\nthis looks just like the GCD program.",
    "start": "1548350",
    "end": "1556890"
  },
  {
    "text": "Of course, it's not a very nice\nway to do remainders. You'd really want to use\nsomething like binary notation and shift and things like that\nin a practical computer.",
    "start": "1556890",
    "end": "1565550"
  },
  {
    "text": "But the point of that is that\nif I open this thing up, I might find inside of\nit a computer.",
    "start": "1565550",
    "end": "1571880"
  },
  {
    "text": "Oh, we know how to do that. We just made one. And it could be another\nthing just like this.",
    "start": "1571880",
    "end": "1577400"
  },
  {
    "text": "On the other hand, we might want\nto make a more efficient or better-structured machine,\nor maybe make use of some of",
    "start": "1577400",
    "end": "1582810"
  },
  {
    "text": "the registers more than once,\nor some horrible mess like that that hardware designers\nlike to do, and for very good reasons.",
    "start": "1582810",
    "end": "1589250"
  },
  {
    "text": "So for example, here's a machine\nthat you see, which you're not supposed to\nbe able to read.",
    "start": "1589250",
    "end": "1595050"
  },
  {
    "text": "It's a little bit complicated. But what it is is the\nintegration of the remainder",
    "start": "1595050",
    "end": "1601830"
  },
  {
    "text": "into the GCD machine. And it takes, in fact,\nno more registers. There are three registers\nin the datapaths.",
    "start": "1601830",
    "end": "1608360"
  },
  {
    "text": "OK? But now there's a subtractor. There are two things\nthat are tested. Is b equal to 0, or\nis t less than b?",
    "start": "1608360",
    "end": "1617250"
  },
  {
    "text": "And then the controller, which\nyou see over here, is not much more complicated. But it has two loops in it, one\nof which is the main one",
    "start": "1617250",
    "end": "1627039"
  },
  {
    "text": "for doing the GCD, and one of\nwhich is the subtraction loop for doing the remainder\nsub-operation.",
    "start": "1627040",
    "end": "1634030"
  },
  {
    "text": "And there are ways, of course,\nof, if you think about it, taking the remainder program.",
    "start": "1634030",
    "end": "1639919"
  },
  {
    "text": "If I take remainder, as you see\nover there, as a lambda expression, substitute it in for\nremainder over here in the",
    "start": "1639920",
    "end": "1645920"
  },
  {
    "text": "GCD program, then do some\nsimplification by substituting a and b for remainder\nin there, then I",
    "start": "1645920",
    "end": "1654670"
  },
  {
    "text": "can unwind this loop. And I can get this piece of\nmachinery by basically, a",
    "start": "1654670",
    "end": "1661660"
  },
  {
    "text": "little bit of algebraic\nsimplification on the lambda expressions. ",
    "start": "1661660",
    "end": "1668549"
  },
  {
    "text": "So I suppose you've seen\nyour first very simple machines now. Are there any questions? ",
    "start": "1668550",
    "end": "1682700"
  },
  {
    "text": "Good. This looks easy, doesn't it? ",
    "start": "1682700",
    "end": "1690200"
  },
  {
    "text": "Thank you. I suppose, take a break. [MUSIC PLAYING - \"JESU, JOY OF\nMAN'S DESIRING\" BY JOHANN SEBASTIAN BACH] ",
    "start": "1690200",
    "end": "1727310"
  },
  {
    "text": "PROFESSOR: Well, let's see. Now you know how to make an\niterative procedure, or a",
    "start": "1727310",
    "end": "1732750"
  },
  {
    "text": "procedure that yields\nan iterative process, turn into a machine.",
    "start": "1732750",
    "end": "1737770"
  },
  {
    "text": "I suppose the next thing we\nwant to do is worry about things that reveal recursive\nprocesses. So let's play with a simple\nfactorial procedure.",
    "start": "1737770",
    "end": "1744695"
  },
  {
    "start": "1744695",
    "end": "1750893"
  },
  {
    "text": "We define factorial of N to be\nif n is 1, the result is 1,",
    "start": "1750894",
    "end": "1764690"
  },
  {
    "text": "using 1 right now to decrease\nthe amount of work I have to do to simulate it, else it's\ntimes N factorial N minus 1.",
    "start": "1764690",
    "end": "1773940"
  },
  {
    "start": "1773940",
    "end": "1782519"
  },
  {
    "text": "And what's different with this\nprogram, as you know, is that after I've computed factorial\nof N minus 1 here, I have to",
    "start": "1782520",
    "end": "1791049"
  },
  {
    "text": "do something to the result. I have to multiply it by N. So the only way I can visualize\nwhat this machine is",
    "start": "1791050",
    "end": "1800160"
  },
  {
    "text": "doing, because of the fact-- think of it this way, that I\nhave a machine out here which",
    "start": "1800160",
    "end": "1805320"
  },
  {
    "text": "somehow needs a factorial\nmachine in order to compute its answer. But this machine, the outer\nmachine, has to exist before",
    "start": "1805320",
    "end": "1812549"
  },
  {
    "text": "and after the factorial machine,\nwhich is inside. Whereas in the iterative case,\nthe outer machine doesn't need",
    "start": "1812550",
    "end": "1820080"
  },
  {
    "text": "to exist after the inner machine\nis running, because",
    "start": "1820080",
    "end": "1825169"
  },
  {
    "text": "you never need to go\nback to the outer machine to do anything. So here we have a problem where\nwe have a machine which",
    "start": "1825170",
    "end": "1831200"
  },
  {
    "text": "has the same machine\ninside of it, an infinitely large machine. ",
    "start": "1831200",
    "end": "1840390"
  },
  {
    "text": "And it's got other things\ninside of it, like a multiplier, which takes some\ninputs, and there's a minus 1",
    "start": "1840390",
    "end": "1847240"
  },
  {
    "text": "box, and things like that. You can imagine that's\nwhat it looks like.",
    "start": "1847240",
    "end": "1854370"
  },
  {
    "text": "But the important thing is that\nhere I have something that happens before and after,\nin the outer machine, the",
    "start": "1854370",
    "end": "1860360"
  },
  {
    "text": "execution of the\ninner machine. So this machine has\nto have a life.",
    "start": "1860360",
    "end": "1865570"
  },
  {
    "text": "It has to exist on both times\nsides of this machine.",
    "start": "1865570",
    "end": "1873490"
  },
  {
    "text": "So somehow, I have to have a\nplace to store the things that this thing needs to run.",
    "start": "1873490",
    "end": "1880030"
  },
  {
    "text": "Infinite objects don't exist\nin the real world. What we have to do is arrange\nan illusion that we have an",
    "start": "1880030",
    "end": "1887020"
  },
  {
    "text": "infinite object, we\nhave an infinite amount of hardware somewhere. Now of course, illusion's\nall that really matters.",
    "start": "1887020",
    "end": "1896279"
  },
  {
    "text": "If we can arrange that every\ntime you look at some infinite object, the part of it that\nyou look at is there, then",
    "start": "1896280",
    "end": "1904800"
  },
  {
    "text": "it's as infinite as\nyou need it to be. And of course, one of the things\nwe might want to do,",
    "start": "1904800",
    "end": "1909830"
  },
  {
    "text": "just look at this thing over\nhere, is the organization that we've had so far involves having\na part of the machine,",
    "start": "1909830",
    "end": "1921390"
  },
  {
    "text": "which is the controller, which\nsits right over here, which is perfectly finite and\nvery simple.",
    "start": "1921390",
    "end": "1929170"
  },
  {
    "text": "We have some datapaths,\nwhich consist of registers and operators. And what I propose to do here is\ndecompose the machine into",
    "start": "1929170",
    "end": "1936190"
  },
  {
    "text": "two parts, such that there is a\npart which is fundamentally finite, and some part where a\ncertain amount of infinite",
    "start": "1936190",
    "end": "1942770"
  },
  {
    "text": "stuff can be kept. On the other hand this is very\nsimple and really isn't infinite, but it's\njust very large.",
    "start": "1942770",
    "end": "1949430"
  },
  {
    "text": "But it's so simple that it could\nbe cheaply reproduced in such large amounts, we call it\nmemory, that we can make a",
    "start": "1949430",
    "end": "1957549"
  },
  {
    "text": "structure called a stack out of\nit which will allow us to, in fact, simulate the existence\nof an infinite",
    "start": "1957550",
    "end": "1963279"
  },
  {
    "text": "machine which is made\nout of a recursive nest of many machines.",
    "start": "1963280",
    "end": "1968340"
  },
  {
    "text": "And the way it's going to work\nis that we're going to store in this place called the stack\nthe information required after",
    "start": "1968340",
    "end": "1976290"
  },
  {
    "text": "the inner machine runs to resume\nthe operation of the outer machine.",
    "start": "1976290",
    "end": "1981650"
  },
  {
    "text": " So it will remember the\nimportant things about the",
    "start": "1981650",
    "end": "1986760"
  },
  {
    "text": "life of the outer machine that\nwill be needed for this computation. Since, of course, these machines\nare nested in a",
    "start": "1986760",
    "end": "1995380"
  },
  {
    "text": "recursive manner, then in fact\nthe stack will only be accessed in a manner which is\nthe last thing that goes in is",
    "start": "1995380",
    "end": "2005330"
  },
  {
    "text": "the first thing that\ncomes out.  So we'll only need to access\nsome little part",
    "start": "2005330",
    "end": "2011510"
  },
  {
    "text": "of this stack memory. OK, well, let's do it.",
    "start": "2011510",
    "end": "2016810"
  },
  {
    "text": "I'm going to build you a\ndatapath now, and I'm going to write the controller. And then we're going\nto execute this to",
    "start": "2016810",
    "end": "2022090"
  },
  {
    "text": "see how you do it. So the factorial machine\nisn't so bad.",
    "start": "2022090",
    "end": "2027900"
  },
  {
    "text": "It's going to have a register\ncalled the value, where the answer is going to be stored,\nand a registered called N,",
    "start": "2027900",
    "end": "2039890"
  },
  {
    "text": "which is where the number I'm\ntaking factorial will be stored, factorial of. And it will be necessary in some\ninstances to connect VAL",
    "start": "2039890",
    "end": "2049780"
  },
  {
    "text": "to N. In fact, one nice case of this\nis if I just said over here,",
    "start": "2049780",
    "end": "2056388"
  },
  {
    "text": "N, because that would be\nright for N equal 1N. And I could just move\nthe answer over there if that's important.",
    "start": "2056389",
    "end": "2063908"
  },
  {
    "text": "I'm not worried about\nthat right now. And there are things I have\nto be able to do.",
    "start": "2063909",
    "end": "2069060"
  },
  {
    "text": "Like I have to be able to, as\nwe see here, multiply N by something in VAL, because\nVAL is the result",
    "start": "2069060",
    "end": "2076349"
  },
  {
    "text": "of computing factorial. And I have to put the result\nback into VAL.",
    "start": "2076350",
    "end": "2081429"
  },
  {
    "text": "So here we can see that the\nresult of computing a factorial is N times the result",
    "start": "2081429",
    "end": "2088069"
  },
  {
    "text": "of computing a factorial. VAL will be the representation\nof the answer of the inner factorial.",
    "start": "2088070",
    "end": "2095199"
  },
  {
    "text": "And so I'm going to have to have\na multiplier here, which",
    "start": "2095199",
    "end": "2102525"
  },
  {
    "text": "is going to sample the value of\nN and the value of VAL and",
    "start": "2102525",
    "end": "2109349"
  },
  {
    "text": "put the result back into\nVAL like that.",
    "start": "2109350",
    "end": "2117170"
  },
  {
    "text": "I'm also going to have to be\nable to see if N is 1. So I need a light bulb.",
    "start": "2117170",
    "end": "2122230"
  },
  {
    "start": "2122230",
    "end": "2128200"
  },
  {
    "text": "And I suppose the other thing\nI'm going to need to have is a way of decrementing N. So I'm\ngoing to have a decrementer,",
    "start": "2128200",
    "end": "2138260"
  },
  {
    "text": "which takes N and is going to\nput back the result into N.",
    "start": "2138260",
    "end": "2146620"
  },
  {
    "text": "That's pretty much what\nI need in my machine. Now, there's a little\nbit else I need.",
    "start": "2146620",
    "end": "2151985"
  },
  {
    "text": "It's a little bit more\ncomplicated, because I'm also going to need a way to store, to\nsave away, the things that",
    "start": "2151985",
    "end": "2158925"
  },
  {
    "text": "are going to be needed for\nresuming the computation of a factorial after I've done\na sub-factorial.",
    "start": "2158925",
    "end": "2166250"
  },
  {
    "text": "What's that? One thing I need is N. So I'm going to build here\na thing called a stack.",
    "start": "2166250",
    "end": "2171870"
  },
  {
    "text": " The stack is a bunch of stuff\nthat I'm going to write in",
    "start": "2171870",
    "end": "2184130"
  },
  {
    "text": "sequentially.  I don't how long it is. The longer it is, the better\nmy illusion of infinity.",
    "start": "2184130",
    "end": "2192890"
  },
  {
    "text": "And I'm going to have to have a\nway of getting stuff out of N and into the stack\nand vice versa.",
    "start": "2192890",
    "end": "2199515"
  },
  {
    "text": "So I'm going to need a\nconnection like this, which is",
    "start": "2199515",
    "end": "2204740"
  },
  {
    "text": "two-way, whereby I can save\nthe value of N and then",
    "start": "2204740",
    "end": "2212500"
  },
  {
    "text": "restore it some other time\nthrough that connection. This is the stack.",
    "start": "2212500",
    "end": "2218100"
  },
  {
    "text": "I also need a way of remembering\nwhere I was in the computation of factorial\nin the outer program.",
    "start": "2218100",
    "end": "2228530"
  },
  {
    "text": "Now in the case of\nthis machine, it isn't very much a problem.",
    "start": "2228530",
    "end": "2234090"
  },
  {
    "text": "Factorial always returns, has to\ngo back to the place where we multiply by N, except for the\nlast time, when it has to",
    "start": "2234090",
    "end": "2241650"
  },
  {
    "text": "return to whatever needs\nthe factorial or go to done or stop. However, in general, I'm going\nto have to remember where I",
    "start": "2241650",
    "end": "2248244"
  },
  {
    "text": "have been, because I might have\ncomputed factorial from somewhere else. I have to go back to that place\nand continue there.",
    "start": "2248245",
    "end": "2256070"
  },
  {
    "text": "So I'm going to have to have\nsome way of taking the place where the marble is in the\nfinite state controller, the",
    "start": "2256070",
    "end": "2261500"
  },
  {
    "text": "state of the controller,\nand storing that in the stack as well.",
    "start": "2261500",
    "end": "2267400"
  },
  {
    "text": "And I'm going to have to have\nways of restoring that back to the state of the-- the marble. So I have to have something that\nmoves the marble to the",
    "start": "2267400",
    "end": "2273570"
  },
  {
    "text": "right place. Well, we're going to have a\nplace which is the marble now. And it's called the continue\nregister, called continue,",
    "start": "2273570",
    "end": "2289220"
  },
  {
    "text": "which is the place to\nput the marble next time I go to continue.",
    "start": "2289220",
    "end": "2294260"
  },
  {
    "text": "That's what that's for. And so there's got to be some\npath from that into the controller. ",
    "start": "2294260",
    "end": "2302910"
  },
  {
    "text": "I also have to have some way of\nsaving that on the stack.",
    "start": "2302910",
    "end": "2309074"
  },
  {
    "text": "And I have to have some way\nof setting that up to have various constants, a certain\nfixed number of constants.",
    "start": "2309074",
    "end": "2316860"
  },
  {
    "text": "And that's very easy\nto arrange. So let's have some\nconstants here. We'll call this one\nafter-fact. ",
    "start": "2316860",
    "end": "2327430"
  },
  {
    "text": "And that's a constant which\nwe'll get into the continue register, and also another\none called fact-done.",
    "start": "2327430",
    "end": "2334010"
  },
  {
    "start": "2334010",
    "end": "2345210"
  },
  {
    "text": "So this is the machine\nI want to build. That's its datapaths, at least.\nAnd it mixes a little",
    "start": "2345210",
    "end": "2350809"
  },
  {
    "text": "with the controller here,\nbecause of the fact that I have to remember where\nI was and restore myself to that place.",
    "start": "2350810",
    "end": "2357300"
  },
  {
    "text": "But let's write the program\nnow which represents the controller. I'm not going to write the\ndefine machine thing and the",
    "start": "2357300",
    "end": "2362760"
  },
  {
    "text": "register list, because that's\nnot very interesting. I'm just going to write down the\nsequence of instructions",
    "start": "2362760",
    "end": "2368019"
  },
  {
    "text": "that constitute the\ncontroller. So we have assign, to set\nup, continue to done.",
    "start": "2368020",
    "end": "2381510"
  },
  {
    "text": " We have a loop which says branch\nif equal 1 fetch N, if",
    "start": "2381510",
    "end": "2401150"
  },
  {
    "text": "N is 1, then go to the base\nstep of the induction, the",
    "start": "2401150",
    "end": "2406299"
  },
  {
    "text": "simple case. Otherwise, I have to remember\nthe things that are necessary to perform a sub-factorial.",
    "start": "2406300",
    "end": "2414265"
  },
  {
    "text": "I'm going to go over here,\nand I have to perform a sub-factorial. So I have to remember what's\nneeded after I will",
    "start": "2414265",
    "end": "2421750"
  },
  {
    "text": "be done with that. See, I'm about to do\nsomething terrible. I'm about to change the value of\nN. But this guy has to know",
    "start": "2421750",
    "end": "2429430"
  },
  {
    "text": "the old value of N. But\nin order to make the sub-factorial work, I have to\nchange the value of N. So I",
    "start": "2429430",
    "end": "2435790"
  },
  {
    "text": "have to remember\nthe old value. And I also have to remember\nwhere I've been.",
    "start": "2435790",
    "end": "2440850"
  },
  {
    "text": "So I save up continue. ",
    "start": "2440850",
    "end": "2447705"
  },
  {
    "text": "And this is an instruction\nthat says, put something in the stack.",
    "start": "2447705",
    "end": "2453580"
  },
  {
    "text": "Save the contents of the\ncontinuation register, which in this case is done, because\nlater I'm going to change",
    "start": "2453580",
    "end": "2459830"
  },
  {
    "text": "that, too, because I\nneed to go back to after-fact, as well. We'll see that.",
    "start": "2459830",
    "end": "2465040"
  },
  {
    "text": "We save N, because I'm going\nto need that for later.",
    "start": "2465040",
    "end": "2470380"
  },
  {
    "text": "Assign to N the decrement of\nfetch N. Assign continue,",
    "start": "2470380",
    "end": "2491422"
  },
  {
    "text": "we're going to look at this now,\nto after, we'll call it.",
    "start": "2491422",
    "end": "2497690"
  },
  {
    "text": "That's a good name for this, a\nlittle bit easier and shorter, and fits in here. ",
    "start": "2497690",
    "end": "2512772"
  },
  {
    "text": "Now look what I'm doing here. I'm saying, if the answer\nis 1, I'm done.",
    "start": "2512772",
    "end": "2520065"
  },
  {
    "text": "I'm going to have to just\nget the answer. Otherwise, I'm going to save the\ncontinuation, save N, make",
    "start": "2520065",
    "end": "2526160"
  },
  {
    "text": "N one less than N, remember\nI'm going to come back to someplace else, and\ngo back and start doing another factorial.",
    "start": "2526160",
    "end": "2531780"
  },
  {
    "text": " However, I've got a different\nmachine [? in me ?] now. N is 1, and continue\nis something else.",
    "start": "2531780",
    "end": "2538380"
  },
  {
    "text": " N is N minus 1.",
    "start": "2538380",
    "end": "2543589"
  },
  {
    "text": "Now after I'm done with\nthat, I can go there.",
    "start": "2543590",
    "end": "2548660"
  },
  {
    "text": "I will restore the old value of\nN, which is the opposite of",
    "start": "2548660",
    "end": "2554130"
  },
  {
    "text": "this save over here. I will restore the\ncontinuation.",
    "start": "2554130",
    "end": "2559610"
  },
  {
    "start": "2559610",
    "end": "2569660"
  },
  {
    "text": "I will then go to here. I will assign to the VAL\nregister the product",
    "start": "2569660",
    "end": "2583310"
  },
  {
    "text": "of N and fetch VAL. ",
    "start": "2583310",
    "end": "2593519"
  },
  {
    "text": "VAL fetch product assign.",
    "start": "2593520",
    "end": "2599790"
  },
  {
    "text": "And then I will be done. I will have my answer to the\nsub-factorial in VAL.",
    "start": "2599790",
    "end": "2606569"
  },
  {
    "text": "At that point, I'm going to\nreturn by going to the place where the continuation\nis pointing.",
    "start": "2606570",
    "end": "2613640"
  },
  {
    "text": "That says, go to\nfetch continue. ",
    "start": "2613640",
    "end": "2625870"
  },
  {
    "text": "And then I have finally\na base step, which is the immediate answer. Assign to VAL fetch N, and\ngo to fetch continue.",
    "start": "2625870",
    "end": "2642570"
  },
  {
    "start": "2642570",
    "end": "2652670"
  },
  {
    "text": "And then I'm done. ",
    "start": "2652670",
    "end": "2658640"
  },
  {
    "text": "Now let's see how this executes\non a very simple case, because then we'll see\nthe use of this stack to do",
    "start": "2658640",
    "end": "2665570"
  },
  {
    "text": "the job we need. This is statically what it's\ndoing, but we have look dynamically at this.",
    "start": "2665570",
    "end": "2671340"
  },
  {
    "text": "So let's see. First thing we do is\ncontinue gets done.",
    "start": "2671340",
    "end": "2676730"
  },
  {
    "text": "The way that happened\nis I pushed this. Let's call that done\nthe way I have it. ",
    "start": "2676730",
    "end": "2686390"
  },
  {
    "text": "I push that button. Done goes into there. Now I also have to set\nthis thing up to",
    "start": "2686390",
    "end": "2692550"
  },
  {
    "text": "have an initial value. Let's consider a factorial\nof three, a simple case.",
    "start": "2692550",
    "end": "2700192"
  },
  {
    "text": "And we're going to start\nout with our stack growing over here.",
    "start": "2700192",
    "end": "2705900"
  },
  {
    "text": "Stacks have their own little\ninternal state saying where they are, where the next place\nI'm going to write is.",
    "start": "2705900",
    "end": "2712770"
  },
  {
    "text": "So now we say, is N 1? The answer is no. So now I'm going to save\ncontinue, bang.",
    "start": "2712770",
    "end": "2719066"
  },
  {
    "text": "Now that done goes in here. And this moves to here, the next\nplace I'm going to write.",
    "start": "2719066",
    "end": "2726660"
  },
  {
    "text": "Save N 3. OK? Assign to N the decrement\nof N. That means",
    "start": "2726660",
    "end": "2734240"
  },
  {
    "text": "I've pushed this button. This becomes 2. ",
    "start": "2734240",
    "end": "2740400"
  },
  {
    "text": "Assign to continue aft. So I've pushed that button. Aft goes in here. ",
    "start": "2740400",
    "end": "2749140"
  },
  {
    "text": "OK, now go to loop, bang,\nso up to here.",
    "start": "2749140",
    "end": "2754829"
  },
  {
    "text": "Is N 1? No. So I have to save continue. What's continue?",
    "start": "2754830",
    "end": "2760600"
  },
  {
    "text": "Continue is aft. Push this button. So this moves to here. ",
    "start": "2760600",
    "end": "2768490"
  },
  {
    "text": "I have to save N.\nN is over here. I got to 2. Push that button.",
    "start": "2768490",
    "end": "2773655"
  },
  {
    "text": "So a 2 gets written there. And then this thing\nmoves down here.",
    "start": "2773655",
    "end": "2780060"
  },
  {
    "text": "OK, save N. Assign N to\nthe decrement of N. This becomes a 1.",
    "start": "2780060",
    "end": "2785464"
  },
  {
    "text": " Assign continue to aft.",
    "start": "2785464",
    "end": "2791369"
  },
  {
    "text": "A-F-T gets written\nthere again. Go to loop.",
    "start": "2791370",
    "end": "2796520"
  },
  {
    "text": "Is N equal to 1? Oh, yes, the answer is 1. OK, go to base step.",
    "start": "2796520",
    "end": "2804160"
  },
  {
    "text": "Assign to VAL fetch of N. Bang,\n1 gets put in there.",
    "start": "2804160",
    "end": "2811099"
  },
  {
    "text": "Go to fetch continue. So we look in continue. Basically, I'm pushing a button\nover here that goes to the controller.",
    "start": "2811100",
    "end": "2817130"
  },
  {
    "text": "The continue becomes aft, and\nall of a sudden, the program's running here.",
    "start": "2817130",
    "end": "2822640"
  },
  {
    "text": "I now have to restore the outer\nversion of factorial. So we go here. We say, restore N. So restore\nN means take the contents",
    "start": "2822640",
    "end": "2832410"
  },
  {
    "text": "that's here. Push this button, and it goes\ninto here, 2, and the",
    "start": "2832410",
    "end": "2839190"
  },
  {
    "text": "pointer moves up. Restore continue, pretty easy.",
    "start": "2839190",
    "end": "2844810"
  },
  {
    "text": "Go push this button. And then aft gets written\nin here again.",
    "start": "2844810",
    "end": "2851280"
  },
  {
    "text": "That means this thing\nmoves up. I've gotten rid of something\nelse on my stack. ",
    "start": "2851280",
    "end": "2862240"
  },
  {
    "text": "Right, then I go to here, which\nsays, assign to VAL the product of N an VAL.",
    "start": "2862240",
    "end": "2867849"
  },
  {
    "text": "So I push this button\nover here, bang. 2 times 1 gives me a 2,\nget written there.",
    "start": "2867850",
    "end": "2875920"
  },
  {
    "text": "Go to fetch continue. Continue is aft. I go to aft.",
    "start": "2875920",
    "end": "2881290"
  },
  {
    "text": "Aft says restore N. Do your\nrestore N, means I take the",
    "start": "2881290",
    "end": "2886640"
  },
  {
    "text": "value over here, which is 3,\npush this up to here, and move it into here, N. Now it's\npushing that button.",
    "start": "2886640",
    "end": "2897715"
  },
  {
    "text": "The next thing I do is\nrestore continue. Continue is now going\nto become done.",
    "start": "2897715",
    "end": "2902829"
  },
  {
    "text": "So this moves up here when\nI push this button. Done may or may be there\nanymore, I'm not interested,",
    "start": "2902830",
    "end": "2910470"
  },
  {
    "text": "but it certainly is here. ",
    "start": "2910470",
    "end": "2915800"
  },
  {
    "text": "Next thing I do is assign to VAL\nthe product of the fetch of N and the fetch of VAL.",
    "start": "2915800",
    "end": "2921440"
  },
  {
    "text": "That's pushing this button\nover here, bang. 2 times 3 is 6.",
    "start": "2921440",
    "end": "2926520"
  },
  {
    "text": "So I get a 6 over here. ",
    "start": "2926520",
    "end": "2932020"
  },
  {
    "text": "And go to fetch continue,\nwhoops, I go to done, and I'm done. And my answer is 6, as you can\nsee in the VAL register.",
    "start": "2932020",
    "end": "2938950"
  },
  {
    "text": "And in fact, the stack\nis in the state it originally was in. ",
    "start": "2938950",
    "end": "2947734"
  },
  {
    "text": "Now there's a bit of discipline\nin using these things like stacks that we\nhave to be careful of.",
    "start": "2947735",
    "end": "2953620"
  },
  {
    "text": "And we'll see that in\nthe next segment. But first I want to ask\nif there are any questions for this. ",
    "start": "2953620",
    "end": "2968560"
  },
  {
    "text": "Are there any questions? Yes, Ron. AUDIENCE: What happens when you\nroll off the end of the stack with--",
    "start": "2968560",
    "end": "2973640"
  },
  {
    "text": "PROFESSOR: What do you\nmean, roll off of? AUDIENCE: Well, the\nlargest number-- a larger starting point of N\nrequires more memory, correct?",
    "start": "2973640",
    "end": "2978860"
  },
  {
    "text": "PROFESSOR: Oh, yes. Well, I need to have a\nlong enough stack. You say, what if I violate\nmy illusion? AUDIENCE: Yes.",
    "start": "2978860",
    "end": "2984550"
  },
  {
    "text": "PROFESSOR: Well, then the\nmagic doesn't work. The truth of the matter is that\nevery machine is finite.",
    "start": "2984550",
    "end": "2991640"
  },
  {
    "text": "And for a procedure like this,\nthere's a limit to the number of sub-factorials\nI could have.",
    "start": "2991640",
    "end": "2999950"
  },
  {
    "text": "Remember when we were doing the\ny-operator a while ago, we pointed out that there was a\nsequence of exponentiation",
    "start": "2999950",
    "end": "3005750"
  },
  {
    "text": "procedures, each of which was\na little better than the previous one. Well, we're now seeing\nhow we implement that mathematical idea.",
    "start": "3005750",
    "end": "3013090"
  },
  {
    "text": "The limiting process is only\nso good as as far as you take the limit. If you think about it,\nwhat am I using here?",
    "start": "3013090",
    "end": "3019420"
  },
  {
    "text": "I'm using about two pieces of\nmemory for every recursion of",
    "start": "3019420",
    "end": "3026339"
  },
  {
    "text": "this process. If we try to compute factorial\nof 10,000, that's",
    "start": "3026340",
    "end": "3031920"
  },
  {
    "text": "not a lot of memory. On the other hand, it's\nan awful big number. So the question is, is that a\nvaluable thing in this case.",
    "start": "3031920",
    "end": "3039180"
  },
  {
    "text": "But it really turns out not to\nbe a terrible limit, because memory is el cheapo, and people\nare pretty expensive.",
    "start": "3039180",
    "end": "3045085"
  },
  {
    "text": " OK, thank you, let's\ntake a break.",
    "start": "3045085",
    "end": "3051049"
  },
  {
    "text": "[MUSIC PLAYING - \"JESU, JOY OF\nMAN'S DESIRING\" BY JOHANN SEBASTIAN BACH] ",
    "start": "3051050",
    "end": "3115176"
  },
  {
    "text": "PROFESSOR: Well, let's see. What I've shown you now is how\nto do a simple iterative",
    "start": "3115176",
    "end": "3122770"
  },
  {
    "text": "process and a simple\nrecursive process. I just want to summarize the\ndesign of simple machines for",
    "start": "3122770",
    "end": "3129760"
  },
  {
    "text": "specific applications by showing\nyou a little bit more complicated design, that of\na thing that does doubly",
    "start": "3129760",
    "end": "3135869"
  },
  {
    "text": "recursive Fibonacci, because\nit will indicate to us, and we'll understand, a bit about\nthe conventions required for",
    "start": "3135870",
    "end": "3142869"
  },
  {
    "text": "making stacks operate\ncorrectly. So let's see. I'm just going to write down,\nfirst of all, the program I'm",
    "start": "3142870",
    "end": "3148830"
  },
  {
    "text": "going to translate. ",
    "start": "3148830",
    "end": "3154150"
  },
  {
    "text": "I need a Fibonacci procedure,\nit's very simple, which says,",
    "start": "3154150",
    "end": "3161190"
  },
  {
    "text": "if N is less than 2, the result\nis N, otherwise it's",
    "start": "3161190",
    "end": "3170390"
  },
  {
    "text": "the sum of Fib of N minus\n1 and Fib of N minus 2.",
    "start": "3170390",
    "end": "3179964"
  },
  {
    "start": "3179965",
    "end": "3187240"
  },
  {
    "text": "That's the plan I have here. And we're just going\nto write down the controller for such a machine.",
    "start": "3187240",
    "end": "3193069"
  },
  {
    "text": "We're going to assume that there\nare registers, N, which holds the number we're taking\nFibonacci of, VAL, which is",
    "start": "3193070",
    "end": "3200510"
  },
  {
    "text": "where the answer is going to get\nput, and continue, which is the thing that's linked to\nthe controller, like before.",
    "start": "3200510",
    "end": "3206809"
  },
  {
    "text": "But I'm not going to draw\nanother physical datapath, because it's pretty much\nthe same as the",
    "start": "3206810",
    "end": "3212994"
  },
  {
    "text": "last one you've seen. And of course, one of the most\namazing things about computation is that after a\nwhile, you build up a little",
    "start": "3212995",
    "end": "3220700"
  },
  {
    "text": "more features and a few more\nfeatures, and all of the sudden, you've got everything\nyou need. So it's remarkable that it just\ngets there so fast. I",
    "start": "3220700",
    "end": "3228290"
  },
  {
    "text": "don't need much more to make\na universal computer. But in any case, let's look\nat the controller for the",
    "start": "3228290",
    "end": "3233630"
  },
  {
    "text": "Fibonacci thing. First thing I want to do is\nstart the thing up by assign",
    "start": "3233630",
    "end": "3241680"
  },
  {
    "text": "to continue a place called done,\ncalled Fib-done here.",
    "start": "3241680",
    "end": "3250230"
  },
  {
    "text": " So that means that somewhere\nover here, I'm going to have a",
    "start": "3250230",
    "end": "3256630"
  },
  {
    "text": "label, Fib-done, which is the\nplace where I go when I want the machine to stop.",
    "start": "3256630",
    "end": "3264120"
  },
  {
    "text": "That's what that is. And I'm going to\nmake up a loop. ",
    "start": "3264120",
    "end": "3271109"
  },
  {
    "text": "It's a place I'm going to go\nto in order to start up computing a Fib. Whatever is in N at this point,\nFibonacci will be",
    "start": "3271110",
    "end": "3278210"
  },
  {
    "text": "computed of, and we will return\nto the place specified by continue. ",
    "start": "3278210",
    "end": "3286070"
  },
  {
    "text": "So what you're going to see\nhere at this place, what I want here is the contract that\nsays, I'm going to write this",
    "start": "3286070",
    "end": "3292650"
  },
  {
    "text": "with a comment syntax, the\ncontract is N contains arg,",
    "start": "3292650",
    "end": "3300230"
  },
  {
    "text": "the argument. Continue is the recipient.",
    "start": "3300230",
    "end": "3309325"
  },
  {
    "text": " And that's where it is. ",
    "start": "3309325",
    "end": "3317370"
  },
  {
    "text": "At this point, if I ever go to\nthis place, I'm expecting this to be true, the argument for\ncomputing the Fibonacci.",
    "start": "3317370",
    "end": "3324819"
  },
  {
    "text": "Now the next thing I want\nto do is to branch. ",
    "start": "3324820",
    "end": "3330220"
  },
  {
    "text": "And if N is less than 2--  by the way, I'm using what\nlooks like Lisp syntax.",
    "start": "3330220",
    "end": "3338730"
  },
  {
    "text": "This is not Lisp. This does not run. What I'm writing here does not\nrun as a simple Lisp program.",
    "start": "3338730",
    "end": "3346120"
  },
  {
    "text": "This is a representation\nof another language. The reason I'm using the syntax\nof parentheses and so",
    "start": "3346120",
    "end": "3352030"
  },
  {
    "text": "on is because I tend to use\na Lisp system to write an interpreter for this which\nallows me to simulate the",
    "start": "3352030",
    "end": "3359380"
  },
  {
    "text": "machine I'm trying to build. I don't want to confuse\nthis to think that",
    "start": "3359380",
    "end": "3365170"
  },
  {
    "text": "this is Lisp code. It's just I'm using a lot\nof the pieces of Lisp. I'm embedding a language in\nLisp, using Lisp as pieces to",
    "start": "3365170",
    "end": "3372880"
  },
  {
    "text": "make my process of making\nmy simulator easy. So I'm inheriting from Lisp\nall of its properties.",
    "start": "3372880",
    "end": "3378900"
  },
  {
    "text": "Fetch of N 2, I want\nto go to a place called immediate answer.",
    "start": "3378900",
    "end": "3385984"
  },
  {
    "text": "It's the base step. ",
    "start": "3385985",
    "end": "3393150"
  },
  {
    "text": "Now, that's somewhere over\nhere, just above done. And we'll see it later.",
    "start": "3393150",
    "end": "3399330"
  },
  {
    "text": "Now, in the general case, which\nis the part I'm going to write down now, let's\njust do it.",
    "start": "3399330",
    "end": "3404859"
  },
  {
    "text": "Well, first of all, I'm\ngoing to have to call Fibonacci twice. In each case--",
    "start": "3404860",
    "end": "3411299"
  },
  {
    "text": "well, in one case at least, I'm\ngoing to have to know what to do to come back and\ndo the next one.",
    "start": "3411300",
    "end": "3416309"
  },
  {
    "text": "I have to remember, have I done\nthe first Fib, or have I",
    "start": "3416310",
    "end": "3421600"
  },
  {
    "text": "done the second one? Do I have to come back to the\nplace where I do the second",
    "start": "3421600",
    "end": "3426630"
  },
  {
    "text": "Fib, or do I have to come\nback to the place where I do the add? ",
    "start": "3426630",
    "end": "3432140"
  },
  {
    "text": "In the first case, over the\nfirst Fibonacci, I'm going to need the value of N for\ncomputing for the second one. ",
    "start": "3432140",
    "end": "3440010"
  },
  {
    "text": "So I have to store some\nof these things up. So first I'm going\nto save continue.",
    "start": "3440010",
    "end": "3445820"
  },
  {
    "text": "That's who needs the answer. ",
    "start": "3445820",
    "end": "3451319"
  },
  {
    "text": "And the reason I'm doing that is\nbecause I'm about to assign continue to the place\nwhich is the place I",
    "start": "3451320",
    "end": "3462870"
  },
  {
    "text": "want to go to after.  Let's call it Fib-N-minus-1,\nbig long name,",
    "start": "3462870",
    "end": "3472510"
  },
  {
    "text": "classic Lisp name. ",
    "start": "3472510",
    "end": "3477700"
  },
  {
    "text": "Because I'm going to compute\nthe first Fib of N minus 1, and then after that, I\nwant to come back and do something else.",
    "start": "3477700",
    "end": "3483960"
  },
  {
    "text": "That's the place I want to go\nto after I've done the first Fibonacci calculation.",
    "start": "3483960",
    "end": "3491106"
  },
  {
    "text": "And I want to do a save of N,\nbecause I'm going to need it later, after that.",
    "start": "3491106",
    "end": "3499130"
  },
  {
    "text": "Now I'm going to, at this point,\nget ready to do the Fibonacci of N minus 1. So assign to N the difference\nof the fetch of N and 1.",
    "start": "3499130",
    "end": "3513950"
  },
  {
    "text": " Now I'm ready to go back\nto doing the Fib loop.",
    "start": "3513950",
    "end": "3520270"
  },
  {
    "start": "3520270",
    "end": "3527630"
  },
  {
    "text": "Have I satisfied my contract? And the answer is yes. N contains N minus 1, which\nis what I need.",
    "start": "3527630",
    "end": "3537210"
  },
  {
    "text": "Continue contains a place I want\nto go to when I'm done with calculating N minus 1.",
    "start": "3537210",
    "end": "3544100"
  },
  {
    "text": "So I've satisfied\nthe contract. And therefore, I can write\ndown here a label,",
    "start": "3544100",
    "end": "3551579"
  },
  {
    "text": "after-Fib-N-minus-1. ",
    "start": "3551580",
    "end": "3560490"
  },
  {
    "text": "Now what am I going\nto do here? Here's a place where I now\nhave to get ready to do",
    "start": "3560490",
    "end": "3565660"
  },
  {
    "text": "Fib of N minus 2.  But in order to do a Fib of N\nminus 2, look, I don't know.",
    "start": "3565660",
    "end": "3571780"
  },
  {
    "text": "I've clobbered my N over here. And presumably my N is counted\ndown all the way to 1 or 0 or something at this point.",
    "start": "3571780",
    "end": "3579780"
  },
  {
    "text": "So I don't know what the value\nof N in the N register is. I want the value of N that was\non the stack that I saved over",
    "start": "3579780",
    "end": "3585640"
  },
  {
    "text": "here so that could restore\nit over here. I saved up the value of N, which\nis this value of N at",
    "start": "3585640",
    "end": "3593880"
  },
  {
    "text": "this point, so that I could\nrestore it after computing Fib of N minus 1, so that I could\ncount that down to N minus 2",
    "start": "3593880",
    "end": "3599360"
  },
  {
    "text": "and then compute Fib\nof N minus 2. So let's restore that. ",
    "start": "3599360",
    "end": "3608830"
  },
  {
    "text": "Restore of N. Now I'm about to do something\nwhich is superstitious, and we",
    "start": "3608830",
    "end": "3616200"
  },
  {
    "text": "will remove it shortly. I am about to finish the\nsequence of doing the",
    "start": "3616200",
    "end": "3622390"
  },
  {
    "text": "subroutine call, if you will. I'm going to say, well, I also\nsaved up the continuation,",
    "start": "3622390",
    "end": "3628510"
  },
  {
    "text": "since I'm going to\nrestore it now. But actually, I don't have\nto, because I'm not going to need it.",
    "start": "3628510",
    "end": "3634609"
  },
  {
    "text": "We'll fix that in a second. So we'll do a restore of\ncontinue, which is what I",
    "start": "3634610",
    "end": "3646590"
  },
  {
    "text": "would in general need to do. And we're just going to see\nwhat you would call in the compiler world a peephole\noptimization, which says,",
    "start": "3646590",
    "end": "3652540"
  },
  {
    "text": "whoops, you didn't\nhave to do that. OK, so the next thing I see\nhere is that I have to get",
    "start": "3652540",
    "end": "3659720"
  },
  {
    "text": "ready now to do Fibonacci\nof N minus 2. But I don't have to\nsave N anymore.",
    "start": "3659720",
    "end": "3665050"
  },
  {
    "text": "The reason why I don't have to\nsave N anymore is because I don't need N after I've done Fib\nof N minus 2, because the next thing I do is add.",
    "start": "3665050",
    "end": "3673540"
  },
  {
    "text": "So I'm just going to set\nup my N that way. Assign N minus difference\nof fetch N and 2.",
    "start": "3673540",
    "end": "3688990"
  },
  {
    "text": " Now I have to finish the\nsetup for calling",
    "start": "3688990",
    "end": "3695440"
  },
  {
    "text": "Fibonacci of N minus 2. Well, I have to save up continue\nand assign continue,",
    "start": "3695440",
    "end": "3708329"
  },
  {
    "text": "continue, to the place which is\nafter Fib N 2, that place",
    "start": "3708330",
    "end": "3723050"
  },
  {
    "text": "over here somewhere. However, I've got to\nbe very careful.",
    "start": "3723050",
    "end": "3728650"
  },
  {
    "text": "The old value, the value of Fib\nof N minus 1, I'm going to need later.",
    "start": "3728650",
    "end": "3735300"
  },
  {
    "text": "The value of Fibonacci of N\nminus 1, I'm going to need. And I can't clobber it, because\nI'm going to have to",
    "start": "3735300",
    "end": "3741880"
  },
  {
    "text": "add it to the value of\nFib of N minus 2. That's in the value register,\nso I'm going to save it.",
    "start": "3741880",
    "end": "3747720"
  },
  {
    "text": "So I have to save this right\nnow, save up VAL.",
    "start": "3747720",
    "end": "3753780"
  },
  {
    "text": "And now I can go off to my\nsubroutine, go to Fib loop.",
    "start": "3753780",
    "end": "3759547"
  },
  {
    "text": " Now before I go any further\nand finish this program, I",
    "start": "3759547",
    "end": "3769460"
  },
  {
    "text": "just want to look at this\nsegment so far and see, oh yes, there's a sequence of\ninstructions here, if you",
    "start": "3769460",
    "end": "3775520"
  },
  {
    "text": "will, that I can do\nsomething about.",
    "start": "3775520",
    "end": "3781580"
  },
  {
    "text": "Here I have a restore of\ncontinue, a save of continue, and then an assign of continue,\nwith no other",
    "start": "3781580",
    "end": "3789200"
  },
  {
    "text": "references to continue\nin between.  The restore followed\nby the save",
    "start": "3789200",
    "end": "3795520"
  },
  {
    "text": "leaves the stack unchanged.  The only difference is that I\nset the continue register to a",
    "start": "3795520",
    "end": "3801250"
  },
  {
    "text": "value, which is the value\nthat was on the stack. Since I now clobber that value,\nas in it was never",
    "start": "3801250",
    "end": "3807360"
  },
  {
    "text": "referenced, these instructions\nare unnecessary. So we will remove these.",
    "start": "3807360",
    "end": "3815390"
  },
  {
    "text": " But I couldn't have seen\nthat unless I had written them down.",
    "start": "3815390",
    "end": "3821460"
  },
  {
    "text": " Was that really true? Well, I don't know.",
    "start": "3821460",
    "end": "3828610"
  },
  {
    "text": "OK, so we've now gone\noff to compute Fibonacci of N minus 2.",
    "start": "3828610",
    "end": "3833660"
  },
  {
    "text": "So after that, what are\nwe going to do?",
    "start": "3833660",
    "end": "3845069"
  },
  {
    "text": "Well, I suppose the first\nthing we have to do-- we've got two things. We've got a thing in\nthe value register which is now valuable.",
    "start": "3845070",
    "end": "3850920"
  },
  {
    "text": "We also have a thing on the\nstack that can be restored into the value register. And what I have to be careful\nwith now is I want to shuffle",
    "start": "3850920",
    "end": "3857630"
  },
  {
    "text": "this right so I can\ndo the multiply. Now there are various\nconventions I might use, but I'm going to be very picky and\nsay, I'm only going to restore",
    "start": "3857630",
    "end": "3864510"
  },
  {
    "text": "into a register I've\nsaved from. If that's the case, I have\nto do a shuffle here.",
    "start": "3864510",
    "end": "3870020"
  },
  {
    "text": "It's the same problem with how\nmany hands I have. So I'm going to assign to N, because\nI'm not going to need N",
    "start": "3870020",
    "end": "3877800"
  },
  {
    "text": "anymore, N is useless, the\ncurrent value of VAL, which",
    "start": "3877800",
    "end": "3885440"
  },
  {
    "text": "was the value of Fib\nof N minus 2. ",
    "start": "3885440",
    "end": "3892950"
  },
  {
    "text": "And I'm going to restore\nthe value register now. ",
    "start": "3892950",
    "end": "3901849"
  },
  {
    "text": "This restore matches this\nsave. And if you're very careful and examine very\ncarefully what goes on,",
    "start": "3901850",
    "end": "3909820"
  },
  {
    "text": "restores and saves are\nalways matched. Now there's an outstanding save,\nof course, that we have",
    "start": "3909820",
    "end": "3915660"
  },
  {
    "text": "to get rid of soon. And so I restored the\nvalue register. Now I restore the continue one,\nwhich matches this one,",
    "start": "3915660",
    "end": "3934850"
  },
  {
    "text": "dot, dot, dot, dot, dot, dot,\ndot, down to here, restoring",
    "start": "3934850",
    "end": "3941300"
  },
  {
    "text": "that continuation. That continuation is a\ncontinuation of Fib of N,",
    "start": "3941300",
    "end": "3946600"
  },
  {
    "text": "which is the problem I was\ntrying to solve, a major problem I'm trying to solve. So that's the guy I have to go\nback to who wants Fib of N. I",
    "start": "3946600",
    "end": "3952670"
  },
  {
    "text": "saved them all the way up here\nwhen I realized N was not less than 2. And so I had to do a complicated\noperation.",
    "start": "3952670",
    "end": "3960840"
  },
  {
    "text": "Now I've got everything\nI need to do it. So I'm going to restore that,\nassign to VAL the sum of fetch",
    "start": "3960840",
    "end": "3977470"
  },
  {
    "text": "VAL and fetch of N, and\ngo to continue.",
    "start": "3977470",
    "end": "3988335"
  },
  {
    "start": "3988335",
    "end": "3998260"
  },
  {
    "text": "So now I've returned from\ncomputing Fibonacci of N, the",
    "start": "3998260",
    "end": "4005750"
  },
  {
    "text": "general case. Now what's left is we have to\nfix up a few details, like",
    "start": "4005750",
    "end": "4011230"
  },
  {
    "text": "there's the base case of this\ninduction, immediate answer,",
    "start": "4011230",
    "end": "4023750"
  },
  {
    "text": "which is nothing more than\nassign to VAL fetch of N,",
    "start": "4023750",
    "end": "4033710"
  },
  {
    "text": "because N was less than 2, and\ntherefore, the answer is N in our original program, and\nreturn continue--",
    "start": "4033710",
    "end": "4046095"
  },
  {
    "start": "4046095",
    "end": "4051460"
  },
  {
    "text": "bobble, bobble almost-- and finally Fib done. ",
    "start": "4051460",
    "end": "4063460"
  },
  {
    "text": "So that's a fairly complicated\nprogram. And the reason I wanted you see\nto that is because I want you to see the particular\nflavors of stack discipline",
    "start": "4063460",
    "end": "4071740"
  },
  {
    "text": "that I was obeying. It was first of all, I don't\nwant to take anything that I'm",
    "start": "4071740",
    "end": "4077240"
  },
  {
    "text": "not going to need later. I was being very careful. And it's very important.",
    "start": "4077240",
    "end": "4083940"
  },
  {
    "text": "And there are all sorts of other\ndisciplines people make with frames and things like that\nof some sort, where you",
    "start": "4083940",
    "end": "4090520"
  },
  {
    "text": "save all sorts of junk you're\nnot going to need later and restore it because, in some\nsense, it's easier to do that.",
    "start": "4090520",
    "end": "4095830"
  },
  {
    "text": "That's going to lead to various\ndisasters, which we'll see a little later.",
    "start": "4095830",
    "end": "4101739"
  },
  {
    "text": "It's crucial to say exactly\nwhat you're going to need later. ",
    "start": "4101740",
    "end": "4106899"
  },
  {
    "text": "It's an important idea. And the responsibility of that\nis whoever saves something is",
    "start": "4106899",
    "end": "4114020"
  },
  {
    "text": "the guy who restores it,\nbecause he needs it. And in such discipline, you\ncan see what things are",
    "start": "4114020",
    "end": "4120130"
  },
  {
    "text": "unnecessary, operations\nthat are unimportant.",
    "start": "4120130",
    "end": "4126940"
  },
  {
    "text": "Now, one other thing I want to\ntell you about that's very simple is that, of course, the\npicture you see is not the",
    "start": "4126940",
    "end": "4134120"
  },
  {
    "text": "whole picture. Supposing I had systems that\nhad things like other operations, CAR, CDR, cons,\nbuilding a vector and",
    "start": "4134120",
    "end": "4146080"
  },
  {
    "text": "referencing the nth element of\nit, or things like that. Well, at this level of detail,\nwhatever it is, we can",
    "start": "4146080",
    "end": "4154229"
  },
  {
    "text": "conceptualize those\nas primitive operations in the datapath. In other words, we could say\nthat some machine that, for",
    "start": "4154229",
    "end": "4161020"
  },
  {
    "text": "example, has the append machine,\nwhich has to do cons of the CAR of x with the append\nof the CDR of x and y,",
    "start": "4161020",
    "end": "4169870"
  },
  {
    "text": "well, gee, that's exactly\nthe same as the factorial structure. Well, it's got about\nthe same structure.",
    "start": "4169870",
    "end": "4176132"
  },
  {
    "text": "And what do we have? We have some sort of things in\nit which may be registers, x",
    "start": "4176133",
    "end": "4181589"
  },
  {
    "text": "and y, and then x has to somehow\nmove to y sometimes, x has to get the value of y.",
    "start": "4181590",
    "end": "4186939"
  },
  {
    "text": "And then we may have\nto be able to do something which is a cons. I don't remember if I need to\nlike this is in this system,",
    "start": "4186939",
    "end": "4197760"
  },
  {
    "text": "but cons is sort of like\nsubtract or add or something. It combines two things,\nproducing a thing which is the",
    "start": "4197760",
    "end": "4203800"
  },
  {
    "text": "cons, which we may then\nthink goes into there. And then maybe a thing called\nthe CAR, which will produce--",
    "start": "4203800",
    "end": "4214920"
  },
  {
    "text": "I can get the CAR\nor something. And maybe I can get the CDR\nof something, and so on.",
    "start": "4214920",
    "end": "4220150"
  },
  {
    "text": "But we shouldn't be too afraid\nof saying things this way, because the worst that could\nhappen is if we open up cons,",
    "start": "4220150",
    "end": "4227330"
  },
  {
    "text": "what we're going to find\nis some machine. And cons may in fact overlap\nwith CAR and CDR, and it",
    "start": "4227330",
    "end": "4233750"
  },
  {
    "text": "always does, in the same way\nthat plus and minus overlap, and really the same business.",
    "start": "4233750",
    "end": "4241210"
  },
  {
    "text": "Cons, CAR, and CDR are going to\noverlap, and we're going to find a little controller, a\nlittle datapath, which may",
    "start": "4241210",
    "end": "4248630"
  },
  {
    "text": "have some registers in it,\nsome stuff like that. And maybe inside it, there may\nalso be an infinite part, a",
    "start": "4248630",
    "end": "4256650"
  },
  {
    "text": "part that's semi-infinite or\nsomething, which is a lot of very uniform stuff, which\nwe'll call memory.",
    "start": "4256650",
    "end": "4262030"
  },
  {
    "text": " And I wouldn't be so horrified\nif that were the way it works.",
    "start": "4262030",
    "end": "4269329"
  },
  {
    "text": "In fact, it does, and we'll\ntalk about that later. So are there any questions?",
    "start": "4269330",
    "end": "4274570"
  },
  {
    "start": "4274570",
    "end": "4284340"
  },
  {
    "text": "Gee, what an unquestioning\naudience.  Suppose I tell you a horrible\npile of lies.",
    "start": "4284340",
    "end": "4290330"
  },
  {
    "start": "4290330",
    "end": "4299690"
  },
  {
    "text": "OK. Well, thank you. Let's take our break. [MUSIC PLAYING - \"JESU, JOY OF\nMAN'S DESIRING\" BY JOHANN",
    "start": "4299690",
    "end": "4307230"
  },
  {
    "text": "SEBASTIAN BACH] ",
    "start": "4307230",
    "end": "4316124"
  }
]