[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6360"
  },
  {
    "text": "continue to offer high-quality\neducational resources for free. To make a donation or\nview additional materials",
    "start": "6360",
    "end": "13349"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "13350",
    "end": "21257"
  },
  {
    "text": "LING REN: All right. Let's get started. Today's topic would be\ndistributed algorithms.",
    "start": "21257",
    "end": "28250"
  },
  {
    "text": "We will look at\ntwo new algorithms. But they are similar to what\nyou have seen in the lectures.",
    "start": "28250",
    "end": "35210"
  },
  {
    "text": "So it will also be a review\nof some concepts in lectures. ",
    "start": "35210",
    "end": "52250"
  },
  {
    "text": "So our first example\nwould be, again, [INAUDIBLE], the\nsimplest example.",
    "start": "52250",
    "end": "59390"
  },
  {
    "start": "59390",
    "end": "65670"
  },
  {
    "text": "But this time, the network\nand topology would be a ring.",
    "start": "65670",
    "end": "71729"
  },
  {
    "start": "71730",
    "end": "81810"
  },
  {
    "text": "So in the lectures,\nthe example we see is a click, meaning they\nare fully connected.",
    "start": "81810",
    "end": "88570"
  },
  {
    "text": "Right. Every node can talk\nto every other node. There, if you remember,\nour solution for everyone",
    "start": "88570",
    "end": "96240"
  },
  {
    "text": "to generate a UID\nor a random number. And if you are the maximum, then\nyou output, you're the leader",
    "start": "96240",
    "end": "105259"
  },
  {
    "text": "You can do that because, yeah,\nyou are connected to everybody. So you immediately know\nwhat random number everybody",
    "start": "105260",
    "end": "112000"
  },
  {
    "text": "generates. And you can compare whether\nyou are the largest. Now, the idea is the\nsame if we have a ring.",
    "start": "112000",
    "end": "120830"
  },
  {
    "text": "So you want everyone to\ngenerate a ID or random number. I'll just say ID from now on.",
    "start": "120830",
    "end": "127550"
  },
  {
    "text": "And you want to collect\neveryone else ID so that you know\nwhether your ID is",
    "start": "127550",
    "end": "133840"
  },
  {
    "text": "the largest among all of them. OK. ",
    "start": "133840",
    "end": "144754"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]  LING REN: Pardon?",
    "start": "144754",
    "end": "150187"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]  LING REN: OK. The question is where did\nthe comparison happen?",
    "start": "150188",
    "end": "159270"
  },
  {
    "text": "So we first need\nsome way to pass the numbers around\nsuch that everyone",
    "start": "159270",
    "end": "164810"
  },
  {
    "text": "has everyone else's number. Right. You have the number\nof everyone, then you can compare whether\nthe largest equals yours.",
    "start": "164810",
    "end": "172791"
  },
  {
    "text": "OK. If the largest equals\nyours, then you know you are the largest. And you're going to\noutput, I'm the leader.",
    "start": "172791",
    "end": "181130"
  },
  {
    "text": "OK. So the difficulty is just\nhow to pass the numbers around so that everyone\nsees everyone else's number.",
    "start": "181130",
    "end": "188220"
  },
  {
    "text": " Any ideas? Simple solution.",
    "start": "188220",
    "end": "193519"
  },
  {
    "start": "193520",
    "end": "219755"
  },
  {
    "text": "Well, there's not\nmuch you can do. You are just connect to your\ntwo neighbors, the left one and the right one. ",
    "start": "219755",
    "end": "234800"
  },
  {
    "text": "So how do you propagate\nthe information? ",
    "start": "234800",
    "end": "246134"
  },
  {
    "text": "Go ahead. AUDIENCE: You can take\nthe maximum of your ID and neighbor's IDs and\nkind of broadcast that.",
    "start": "246134",
    "end": "254579"
  },
  {
    "text": "LING REN: OK. So what does\nbroadcast mean here? AUDIENCE: Like\ntell your neighbors what the largest of\nyour value [INAUDIBLE]",
    "start": "254579",
    "end": "261720"
  },
  {
    "text": "LING REN: OK. And yes. Let me call them A, B, C, E,\nF. Then, yes, C can tell D",
    "start": "261720",
    "end": "272650"
  },
  {
    "text": "or can tell B, but\nhow does C tell E? ",
    "start": "272650",
    "end": "281498"
  },
  {
    "text": "AUDIENCE: It waited around to\nI guess propagate the maximum.",
    "start": "281498",
    "end": "287267"
  },
  {
    "text": "LING REN: Yep. So it would be just,\nsay, everyone talks",
    "start": "287267",
    "end": "293970"
  },
  {
    "text": "to its right neighbor. And then B has A's IDs, C\nthese B's ID, D has C's ID, and then continue and\npass around next time.",
    "start": "293970",
    "end": "302360"
  },
  {
    "text": " So just to make\nit perfect clear.",
    "start": "302360",
    "end": "308260"
  },
  {
    "text": "Say they generate some\nrandom IDs that's 5, 10, 20.",
    "start": "308260",
    "end": "315280"
  },
  {
    "text": "And then in the next round,\nA would send its ID to B, B would send its ID to C,\nC would send its ID to D.",
    "start": "315280",
    "end": "322470"
  },
  {
    "text": "And in the next round, B would\npass this information along to C. And C would pass\nthe information to D.",
    "start": "322470",
    "end": "328930"
  },
  {
    "text": "And just continue. And eventually everyone will\nhave everyone else's ID.",
    "start": "328930",
    "end": "336240"
  },
  {
    "text": "So how many rounds do we need? ",
    "start": "336240",
    "end": "351790"
  },
  {
    "text": "If they are in\nnodes in the system.",
    "start": "351790",
    "end": "358001"
  },
  {
    "text": "AUDIENCE: I think probably\nin just one direction or two neighbors. LING REN: I think you\ncan do it either way.",
    "start": "358001",
    "end": "365189"
  },
  {
    "text": "If you propagate both ways,\nit probably 2x faster, yeah. AUDIENCE: [INAUDIBLE]",
    "start": "365190",
    "end": "371390"
  },
  {
    "text": "LING REN: Yeah, correct. It's just O(n). But to keep it simple,\nlet's say we just",
    "start": "371390",
    "end": "376810"
  },
  {
    "text": "propagate in one direction. That's also fine. Still O(n). So how many messages\nare sent in total?",
    "start": "376810",
    "end": "385983"
  },
  {
    "text": "AUDIENCE: n squared. LING REN: Pardon? AUDIENCE: n squared. LING REN: n squared.",
    "start": "385983",
    "end": "391399"
  },
  {
    "text": "Yep.  Is that obvious to everyone?",
    "start": "391399",
    "end": "397660"
  },
  {
    "text": "OK. Give an explanation. AUDIENCE: Yeah, at\neach round everyone sends a message\nto its neighbors.",
    "start": "397660",
    "end": "404900"
  },
  {
    "text": "LING REN: Yeah. Yeah. Every round, everyone\nsends a message.",
    "start": "404900",
    "end": "410350"
  },
  {
    "text": "Or you can think of every\nmessage as propagated n times. And there are n\nmessages in total.",
    "start": "410350",
    "end": "418699"
  },
  {
    "text": "OK. Yeah. That's definitely a solution.",
    "start": "418700",
    "end": "424180"
  },
  {
    "text": "Well, you can imagine, it's\nprobably the naive solution. And can we do better than that?",
    "start": "424180",
    "end": "429220"
  },
  {
    "start": "429220",
    "end": "434566"
  },
  {
    "text": "AUDIENCE: In this case,\nare we assuming they know that there are n of them? ",
    "start": "434566",
    "end": "441380"
  },
  {
    "text": "LING REN: OK. Good question. So if they know\nthere are n of them, yep, then they know\nhow to terminate.",
    "start": "441380",
    "end": "447530"
  },
  {
    "text": "So your question is how\nto terminate, right? If they don't, eventually\nyou will receive your own ID",
    "start": "447530",
    "end": "455070"
  },
  {
    "text": "on the other side. If we keep sending\nleft, eventually you will receive it\non the left port.",
    "start": "455070",
    "end": "460600"
  },
  {
    "text": "And, yeah, that's an\nindication of termination. ",
    "start": "460600",
    "end": "467498"
  },
  {
    "text": "Question? AUDIENCE: Are we\nassuming the trajectory that these are unique? LING REN: Yeah. We usually assume that, yeah.",
    "start": "467498",
    "end": "475480"
  },
  {
    "text": "Either it's a unique\nuser-- sorry, UID. What does U stand\nfor by the way?",
    "start": "475480",
    "end": "482260"
  },
  {
    "text": "Or if you generate random\nnumbers in a large range, it's very unlikely\nthat they collide.",
    "start": "482260",
    "end": "488180"
  },
  {
    "start": "488180",
    "end": "500560"
  },
  {
    "text": "OK. So can we do better than that? ",
    "start": "500560",
    "end": "517990"
  },
  {
    "text": "You have some idea? AUDIENCE: Once\nsomething [INAUDIBLE]",
    "start": "517990",
    "end": "527560"
  },
  {
    "text": "where you only pass it\nto the one that's bigger. LING REN: Hm-mm.",
    "start": "527560",
    "end": "532870"
  },
  {
    "text": "OK. I think you have two ideas. And binary search, we'll\nsee how that works later.",
    "start": "532870",
    "end": "538080"
  },
  {
    "text": "So you said only forward\nsomething that's larger? 0 AUDIENCE: Yeah, like only\nforward things are larger.",
    "start": "538080",
    "end": "544746"
  },
  {
    "text": " LING REN: OK, yeah,\nthat's on the right track.",
    "start": "544746",
    "end": "549930"
  },
  {
    "text": "So one obvious\nthing we can do is that so we actually don't care\nwhat all the IDs are, right.",
    "start": "549930",
    "end": "558920"
  },
  {
    "text": "We only care whether a\ncertain ID's the largest. So for example, in this case,\nwhen A send its ID 5 to B,",
    "start": "558920",
    "end": "569060"
  },
  {
    "text": "B knows this 5\nwon't be the leader. All right. Because 5 is too small. It's even smaller than his ID.",
    "start": "569060",
    "end": "576220"
  },
  {
    "text": "So we can choose to\ndrop this message. There's no point in passing\nthat message further.",
    "start": "576220",
    "end": "584720"
  },
  {
    "text": "Same thing for this message. C knows that 10 is too small. And it doesn't have\nto pass it along.",
    "start": "584720",
    "end": "593980"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]  LING REN: Oh, the ID?",
    "start": "593980",
    "end": "599940"
  },
  {
    "text": "It's just the integer each\nnode chooses at random. See.",
    "start": "599940",
    "end": "606210"
  },
  {
    "text": "Yeah, the only purpose of\nthe ID is to break symmetry. So, yeah.",
    "start": "606210",
    "end": "611720"
  },
  {
    "text": "Like we have seen the lecture,\nif they don't do this, if they don't have\nany unique identifier,",
    "start": "611720",
    "end": "617284"
  },
  {
    "text": "they won't be able\nto select the leader.  And when they have\na unique number,",
    "start": "617284",
    "end": "625120"
  },
  {
    "text": "then they can select, yeah,\nthe largest one or smallest one in some way.",
    "start": "625120",
    "end": "630209"
  },
  {
    "text": " OK. Does this optimization\nmake sense?",
    "start": "630210",
    "end": "637190"
  },
  {
    "text": "We can cut [INAUDIBLE]\nmessages that",
    "start": "637190",
    "end": "642650"
  },
  {
    "text": "have no chance of\nbecoming the leader. AUDIENCE: What is the\nupper bound of it?",
    "start": "642650",
    "end": "649031"
  },
  {
    "text": "Is it still n squared? LING REN: Correct. Yeah. That's a very good question and\nvery good answer, by the way.",
    "start": "649031",
    "end": "657300"
  },
  {
    "text": "But how effective is this? Well in average case, we may\nbe able to drop some messages.",
    "start": "657300",
    "end": "664509"
  },
  {
    "text": "But there pathological\ncase where it actually doesn't help at all. Say this is the ID we choose.",
    "start": "664510",
    "end": "672530"
  },
  {
    "text": "Then when there's\n20, it send around. B cannot drop it. Right, because it\nmay be the largest.",
    "start": "672530",
    "end": "680320"
  },
  {
    "text": "And when this 10 is sent\nto C, C cannot drop it. And when 20 comes along,\nit also cannot drop it.",
    "start": "680320",
    "end": "686130"
  },
  {
    "text": "So no node can drop any message. Its worst case is\nstill n square.",
    "start": "686130",
    "end": "692584"
  },
  {
    "start": "692585",
    "end": "711770"
  },
  {
    "text": "OK. So let's think about the\nbinary search equivalent, yeah,",
    "start": "711770",
    "end": "718320"
  },
  {
    "text": "or how to binary\nsearch in this case. ",
    "start": "718320",
    "end": "727968"
  },
  {
    "text": "AUDIENCE: So binary\nis [INAUDIBLE] what? LING REN: Yeah, good question. It's not very obvious\nbinary searching to what.",
    "start": "727968",
    "end": "735920"
  },
  {
    "text": " I Yeah, just some\nbinary idea that",
    "start": "735920",
    "end": "743529"
  },
  {
    "text": "will give us a n log end bound. So actually this is\nthe better logarithm.",
    "start": "743530",
    "end": "749640"
  },
  {
    "text": "But once you have a\nlog n, you can probably get-- OK, go ahead. AUDIENCE: How about\nkind of merging,",
    "start": "749640",
    "end": "755360"
  },
  {
    "text": "like instead of finding\nthe [INAUDIBLE], finding like log maximum,\nthen [INAUDIBLE].",
    "start": "755360",
    "end": "763355"
  },
  {
    "text": "LING REN: Yeah. That's on the right track, yeah. AUDIENCE: Like clusters\nof some [INAUDIBLE]. ",
    "start": "763355",
    "end": "770615"
  },
  {
    "text": "LING REN: Yeah. That's definitely\nthe right idea. Let's detail it a little bit.",
    "start": "770615",
    "end": "778411"
  },
  {
    "text": "How do you carry it out? ",
    "start": "778411",
    "end": "796274"
  },
  {
    "text": "Hm-mm. AUDIENCE: Divide the two parts. ",
    "start": "796274",
    "end": "804209"
  },
  {
    "text": "Like kind of the [INAUDIBLE]. LING REN: And, OK,\nso then it's let",
    "start": "804210",
    "end": "809440"
  },
  {
    "text": "them select their leader\nrespectively and compare which one is larger.",
    "start": "809440",
    "end": "815710"
  },
  {
    "text": "It's interesting thought. ",
    "start": "815710",
    "end": "828975"
  },
  {
    "text": "AUDIENCE: First,\nfor example, A, B finds the maximum\nbetween these two, the C, D finds the maximum\nE [INAUDIBLE] maximum.",
    "start": "828975",
    "end": "837885"
  },
  {
    "text": "Kind of merging, considering\nthem as one node.  LING REN: I think\nthe first difficulty",
    "start": "837885",
    "end": "844460"
  },
  {
    "text": "I see is that if\nyou cut it by half, it's no longer a ring, right. ",
    "start": "844460",
    "end": "853149"
  },
  {
    "text": "AUDIENCE: Also they can't\ncut themselves in half. LING REN: Yeah. Yeah.",
    "start": "853149",
    "end": "858190"
  },
  {
    "text": "Correct. Yeah, yeah. ",
    "start": "858190",
    "end": "883952"
  },
  {
    "text": "Yeah, it's definitely\nnot an easy problem, not a easy algorithm.",
    "start": "883952",
    "end": "889240"
  },
  {
    "start": "889240",
    "end": "894370"
  },
  {
    "text": "And the idea is to, well,\nyou had the right idea.",
    "start": "894370",
    "end": "901330"
  },
  {
    "text": "That we want to--\nwhat's the word?",
    "start": "901330",
    "end": "907380"
  },
  {
    "text": "Let the weak candidates\nshut up early. ",
    "start": "907380",
    "end": "912630"
  },
  {
    "text": "So what I mean by that is say\nwe have several round, so this B",
    "start": "912630",
    "end": "917790"
  },
  {
    "text": "and A and C. We will that B\nonly propagate to A and C first.",
    "start": "917790",
    "end": "925690"
  },
  {
    "text": "If B is the local maximum\namong A, B, C, then B will try to talk further.",
    "start": "925690",
    "end": "932389"
  },
  {
    "text": " Increase its range. If B is not the local maximum\nof A, B, C, then, yeah,",
    "start": "932390",
    "end": "940140"
  },
  {
    "text": "it can be quiet. Doesn't need to send\nmessages anymore. If B succeeds in the\nnext round, then you",
    "start": "940140",
    "end": "946550"
  },
  {
    "text": "go further increase its range\nto try to talk to more people. ",
    "start": "946550",
    "end": "955670"
  },
  {
    "text": "OK. So how does it work in detail? ",
    "start": "955670",
    "end": "960910"
  },
  {
    "text": "Well so in round I,\nwe will let a node",
    "start": "960910",
    "end": "967949"
  },
  {
    "text": "send this message up\nto 2 raised to I hops. ",
    "start": "967950",
    "end": "976190"
  },
  {
    "text": "In this case, is 1 and in\nnext round is 2 and then 4. ",
    "start": "976190",
    "end": "984089"
  },
  {
    "text": "If at any point some mode\nlike along this range",
    "start": "984090",
    "end": "989460"
  },
  {
    "text": "decides that you are\nnot the local maximum, then they will reply\nthat, yeah, you no longer",
    "start": "989460",
    "end": "997790"
  },
  {
    "text": "need to send messages anymore. If this message successfully\nreaches this endpoint",
    "start": "997790",
    "end": "1005360"
  },
  {
    "text": "that 2 raised to I hops,\nthen this guy will respond. And this guy, if it still thinks\nyou are the local maximum,",
    "start": "1005360",
    "end": "1012889"
  },
  {
    "text": "then it will respond the message\nwhile saying, yeah, continue. ",
    "start": "1012890",
    "end": "1023250"
  },
  {
    "text": "OK. And if the sender receives the\ncontinue message on both sides,",
    "start": "1023250",
    "end": "1031189"
  },
  {
    "text": "then they it continue\ninto the next round. Otherwise, it will go inactive. ",
    "start": "1031190",
    "end": "1040272"
  },
  {
    "text": "Is the algorithm clear? ",
    "start": "1040272",
    "end": "1055580"
  },
  {
    "text": "AUDIENCE: If the problem\nreaches the next maximum, like next the node each\nhas to send a message.",
    "start": "1055581",
    "end": "1061728"
  },
  {
    "text": "LING REN: Say that again. AUDIENCE: Like after receiving\nlike don't sending it,",
    "start": "1061729",
    "end": "1067180"
  },
  {
    "text": "like do you have to\nchoose one node, which has to send the message? LING REN: Oh, OK. In the first round, everyone\nsend their messages.",
    "start": "1067180",
    "end": "1074110"
  },
  {
    "text": "OK. Then some of them\nwill go inactive because they learn\nthey are not maximum.",
    "start": "1074110",
    "end": "1079929"
  },
  {
    "text": "And the remaining,\nthe surviving ones, will, yeah, continue\nsending messages.",
    "start": "1079930",
    "end": "1085350"
  },
  {
    "text": "And then, yeah, half\nof them probably will die in the next round. And the surviving ones\nkeep sending messages.",
    "start": "1085350",
    "end": "1090785"
  },
  {
    "text": " Make sense? ",
    "start": "1090785",
    "end": "1101038"
  },
  {
    "text": "AUDIENCE: How do you\nreturn messages through I? Like if you [INAUDIBLE] its\nneighbor and not the node that",
    "start": "1101038",
    "end": "1106906"
  },
  {
    "text": "do either. LING REN: Yeah. So we will send the\nmessage of this form,",
    "start": "1106906",
    "end": "1112340"
  },
  {
    "text": "say, well, some message. ",
    "start": "1112340",
    "end": "1119200"
  },
  {
    "text": "And then we will send the\nhop and the direction, either left or right.",
    "start": "1119200",
    "end": "1127260"
  },
  {
    "text": "And this hop will\ninitially be set to 2 raised to I,\nthe number of round.",
    "start": "1127260",
    "end": "1136150"
  },
  {
    "text": "Then when this guy\nreceives the message, it will increment the hop\ncount and pass it along.",
    "start": "1136150",
    "end": "1145420"
  },
  {
    "text": "And every node when\nforwarding the message will decrease the that h by 1.",
    "start": "1145420",
    "end": "1152220"
  },
  {
    "text": "And finally when it reaches\nhere, that number becomes 0. And when a node sees a\nmessage with 0 hop count,",
    "start": "1152220",
    "end": "1163020"
  },
  {
    "text": "it's going to reverse it, send\nit in the other direction. And, again, set it\nback to 2 raised to I.",
    "start": "1163020",
    "end": "1176220"
  },
  {
    "text": "This message I should say ID. ",
    "start": "1176220",
    "end": "1184770"
  },
  {
    "text": "And at certain\npoint, a certain node may decide this ID's too small.",
    "start": "1184770",
    "end": "1190920"
  },
  {
    "text": "It doesn't have a chance. Then the I can directly send\nit in the opposite direction,",
    "start": "1190920",
    "end": "1196710"
  },
  {
    "text": "replying a message saying,\nyeah, you are too small. ",
    "start": "1196710",
    "end": "1202610"
  },
  {
    "text": "OK. So any more questions\non the algorithm itself?",
    "start": "1202610",
    "end": "1209200"
  },
  {
    "text": "If not, what's the next step? ",
    "start": "1209200",
    "end": "1216424"
  },
  {
    "text": "AUDIENCE: Time. LING REN: Yeah, time complexity. I already claimed it's n log n. Is it?",
    "start": "1216425",
    "end": "1221799"
  },
  {
    "start": "1221800",
    "end": "1227800"
  },
  {
    "text": "This is round. This is message. ",
    "start": "1227800",
    "end": "1233900"
  },
  {
    "text": "This is also message complexity.  OK.",
    "start": "1233900",
    "end": "1239320"
  },
  {
    "text": "So why is it n log n? ",
    "start": "1239320",
    "end": "1275190"
  },
  {
    "text": "AUDIENCE: The log n [INAUDIBLE]. LING REN: Hm-mm. So we have a certain\nnumber of rounds.",
    "start": "1275190",
    "end": "1282054"
  },
  {
    "text": "So how many rounds do we have? ",
    "start": "1282055",
    "end": "1288530"
  },
  {
    "text": "AUDIENCE: Two. LING REN: Yeah, maybe. But, yeah, I'll just say log n.",
    "start": "1288530",
    "end": "1293936"
  },
  {
    "text": "OK.  Because you are increasing\nyour hop length.",
    "start": "1293936",
    "end": "1302810"
  },
  {
    "text": "And we're going to compute\nlike how many nodes are still",
    "start": "1302810",
    "end": "1308250"
  },
  {
    "text": "active each around and how many\nmessages are sent in the round.",
    "start": "1308250",
    "end": "1315490"
  },
  {
    "text": "So, well, the number\nof nodes active",
    "start": "1315490",
    "end": "1322630"
  },
  {
    "text": "will just be this number\nif we start from 0.",
    "start": "1322630",
    "end": "1327651"
  },
  {
    "text": "Why? Because the first time\neveryone is active. In the next time, only 1/3\nof them will be active.",
    "start": "1327651",
    "end": "1336210"
  },
  {
    "text": "But we said we are conservative\nhere at we put 1/2. Right. Next round is actually 1/5.",
    "start": "1336210",
    "end": "1343490"
  },
  {
    "text": " If it's local maximum,\nit means like these two",
    "start": "1343490",
    "end": "1349350"
  },
  {
    "text": "and those two will go inactive. But we put this\nas a upper bound.",
    "start": "1349350",
    "end": "1359200"
  },
  {
    "text": "So this is the number of\nnodes that are still active.",
    "start": "1359200",
    "end": "1364659"
  },
  {
    "text": "And they will send the\nmessage up to this many hops.",
    "start": "1364660",
    "end": "1372890"
  },
  {
    "text": " OK.",
    "start": "1372890",
    "end": "1378710"
  },
  {
    "text": "And there are two directions. ",
    "start": "1378710",
    "end": "1386460"
  },
  {
    "text": "And you send a message back. And then, yeah-- sorry,\nsend the message forward",
    "start": "1386460",
    "end": "1391760"
  },
  {
    "text": "and someone will reply. But in the end, this is n log n.",
    "start": "1391760",
    "end": "1398615"
  },
  {
    "start": "1398615",
    "end": "1404117"
  },
  {
    "text": "Yeah, and I think\nI got 8n log n. So my recitation note says\nit's 4 log n, not entirely sure",
    "start": "1404117",
    "end": "1412664"
  },
  {
    "text": "what's going on. Yeah. But you can double check\nwhether this is correct or the recitation\nnote is correct.",
    "start": "1412664",
    "end": "1418169"
  },
  {
    "start": "1418170",
    "end": "1438728"
  },
  {
    "text": "AUDIENCE: What is I again? LING REN: I's the number\nof round in the I-th round.",
    "start": "1438728",
    "end": "1444789"
  },
  {
    "text": "Yeah. This many nodes\nare still active. And each of them will send\na message of this many hops.",
    "start": "1444790",
    "end": "1451020"
  },
  {
    "start": "1451020",
    "end": "1468090"
  },
  {
    "text": "And I didn't mention\nwhether the network is synchronous or asynchronous. And it turns out\nit doesn't care.",
    "start": "1468090",
    "end": "1475180"
  },
  {
    "text": "Some of them can work for both\nsynchronous and asynchronous. Apparently, it works for\nsynchronous networks.",
    "start": "1475180",
    "end": "1480960"
  },
  {
    "text": "If it's asynchronous,\nthen what changes is that different nodes\nare in different rounds.",
    "start": "1480960",
    "end": "1489620"
  },
  {
    "text": "A certain node may be far\nahead than the others. But it's fine. Eventually, they will converge\nto the correct result. OK.",
    "start": "1489620",
    "end": "1499659"
  },
  {
    "text": "So let's look at\nthe second problem. ",
    "start": "1499660",
    "end": "1507330"
  },
  {
    "text": "Well, problem's\ndefined even simpler. We just want to count how\nmany nodes are out there.",
    "start": "1507330",
    "end": "1515139"
  },
  {
    "text": "We want the algorithm to\nwork both synchronously and asynchronously. ",
    "start": "1515140",
    "end": "1523559"
  },
  {
    "text": "By that I just mean\nwe have a network. ",
    "start": "1523560",
    "end": "1533130"
  },
  {
    "text": "Well, say you have a\nlot of nodes after that. Just want to count how\nmany nodes are there",
    "start": "1533130",
    "end": "1539440"
  },
  {
    "text": "in this network. ",
    "start": "1539440",
    "end": "1545440"
  },
  {
    "text": "So I'll give you, say, one\nminutes to let's first come up with a high-level plan. ",
    "start": "1545440",
    "end": "1556350"
  },
  {
    "text": "Is the problem clear? AUDIENCE: In the worst\ncase, [INAUDIBLE].",
    "start": "1556350",
    "end": "1562471"
  },
  {
    "text": "The worst case. LING REN: OK. I haven't defined that. Let's not worry about\ncomplexity now for now.",
    "start": "1562471",
    "end": "1571460"
  },
  {
    "text": "The complexity will\ndepend on number of nodes and the number of\nedges, E. Let's just",
    "start": "1571460",
    "end": "1582330"
  },
  {
    "text": "get it functionally correct. ",
    "start": "1582330",
    "end": "1673070"
  },
  {
    "text": "OK. Anyone share a\nhigh-level strategy? ",
    "start": "1673070",
    "end": "1681130"
  },
  {
    "text": "Go ahead. AUDIENCE: So each\nnode will start like IDs of the other\ndevices [INAUDIBLE].",
    "start": "1681130",
    "end": "1691148"
  },
  {
    "text": "So basically like it's going\nto send propagates [INAUDIBLE] sets of each node.",
    "start": "1691149",
    "end": "1698023"
  },
  {
    "start": "1698023",
    "end": "1703424"
  },
  {
    "text": "LING REN: On what edge? AUDIENCE: Furthest one. LING REN: Yeah. It wasn't on both edges?",
    "start": "1703424",
    "end": "1710274"
  },
  {
    "text": "AUDIENCE: Itself first. LING REN: OK. So then maybe send the 1 here\nand send the 1 here there.",
    "start": "1710274",
    "end": "1718029"
  },
  {
    "text": "Then this node will think it\nhas a children, it as a child, right, which is this one.",
    "start": "1718030",
    "end": "1723059"
  },
  {
    "text": "Let's just say this\nis the entire network. And what message does\nit send to this guy?",
    "start": "1723060",
    "end": "1730772"
  },
  {
    "text": "AUDIENCE: Reinforced it. ",
    "start": "1730772",
    "end": "1737450"
  },
  {
    "text": "LING REN: Well, you\nprobably need send two here because you have one and this\nis possibly its child, right.",
    "start": "1737450",
    "end": "1744480"
  },
  {
    "text": "But then we're double\ncounting this node. See the problem? ",
    "start": "1744480",
    "end": "1753442"
  },
  {
    "text": "AUDIENCE: Do nodes have\ntheir IDs, like unique IDs? LING REN: Oh, yeah. They have their IDs.",
    "start": "1753442",
    "end": "1758460"
  },
  {
    "text": "AUDIENCE: We can't send\nthe IDs instead of the IDs through the end node. LING REN: OK. ",
    "start": "1758460",
    "end": "1766300"
  },
  {
    "text": "We are going to\nsend all the IDs. AUDIENCE: Yeah, neighbors. ",
    "start": "1766300",
    "end": "1783497"
  },
  {
    "text": "And after n steps, it's going\nto have the [INAUDIBLE].",
    "start": "1783497",
    "end": "1789268"
  },
  {
    "text": "LING REN: OK. Yeah, that's an\ninteresting thought. And then you may\nstill need the root.",
    "start": "1789269",
    "end": "1796260"
  },
  {
    "text": "And that will have\neveryone's ID.",
    "start": "1796260",
    "end": "1801750"
  },
  {
    "text": "And then see how many\nunique I's are there. ",
    "start": "1801750",
    "end": "1807600"
  },
  {
    "text": "OK. Interesting. Does this algorithm work? Yeah, I don't see any problem.",
    "start": "1807600",
    "end": "1813789"
  },
  {
    "start": "1813790",
    "end": "1822376"
  },
  {
    "text": "OK. But let me still repeat\nwhat our algorithm",
    "start": "1822376",
    "end": "1828650"
  },
  {
    "text": "is because it's closer\nto what's in the lecture.",
    "start": "1828650",
    "end": "1834900"
  },
  {
    "text": "So we're going to find a\nspanning tree of this network.",
    "start": "1834900",
    "end": "1842305"
  },
  {
    "text": " A spanning tree\nmeans, well, like I",
    "start": "1842305",
    "end": "1847720"
  },
  {
    "text": "have to cut one of these edges. ",
    "start": "1847720",
    "end": "1852840"
  },
  {
    "text": "If I have a tree, then I\ncan have every child report to its parent.",
    "start": "1852840",
    "end": "1858610"
  },
  {
    "text": "Like how many offsprings,\nincluding myself do I have.",
    "start": "1858610",
    "end": "1865130"
  },
  {
    "text": "And this node will sum\nup all its children",
    "start": "1865130",
    "end": "1871510"
  },
  {
    "text": "and report to its parent. ",
    "start": "1871510",
    "end": "1878370"
  },
  {
    "text": "Does everyone get that? So first, we'll find\na spanning tree.",
    "start": "1878370",
    "end": "1883549"
  },
  {
    "start": "1883550",
    "end": "1889466"
  },
  {
    "text": "And second, we'll have\nchild reports to parent.",
    "start": "1889466",
    "end": "1897153"
  },
  {
    "start": "1897154",
    "end": "1910790"
  },
  {
    "text": "AUDIENCE: How can we\nfind the spanning tree? LING REN: Good question. So in the lecture, we\nhave seen algorithm",
    "start": "1910790",
    "end": "1919770"
  },
  {
    "text": "that find BFS spanning tree\nfor synchronous networks.",
    "start": "1919770",
    "end": "1932105"
  },
  {
    "text": " OK. This is review of the lecture.",
    "start": "1932105",
    "end": "1937380"
  },
  {
    "text": " How does it work? ",
    "start": "1937380",
    "end": "1955289"
  },
  {
    "text": "Each node will, say, we\nneed to first choose a root. And our root will just send\na message to its neighbor",
    "start": "1955290",
    "end": "1963350"
  },
  {
    "text": "and, yeah, saying, you are\nmy child, you are my child, you are my child.",
    "start": "1963350",
    "end": "1969000"
  },
  {
    "text": "And then every node upon\nreceiving this message from the parent will\nsearch among its neighbors.",
    "start": "1969000",
    "end": "1980724"
  },
  {
    "text": "All right. So the neighbors that\nhaven't got a parent will acknowledge this\nsender as the parent.",
    "start": "1980724",
    "end": "1988515"
  },
  {
    "text": " OK. That's a little messy.",
    "start": "1988515",
    "end": "1993910"
  },
  {
    "start": "1993910",
    "end": "2007650"
  },
  {
    "text": "So this node will\nsearch to the leaf node.",
    "start": "2007650",
    "end": "2013380"
  },
  {
    "text": "But then it will also try\nto search for this guy. But this guy already had\na parent, then, yeah,",
    "start": "2013380",
    "end": "2018630"
  },
  {
    "text": "it will say I already got a\nparent and blah, blah, blah.",
    "start": "2018630",
    "end": "2024210"
  },
  {
    "text": "This will give us a\nBFS spanning tree. What does it mean? It's a spanning\ntree found by BFS.",
    "start": "2024210",
    "end": "2030075"
  },
  {
    "text": " Does it work for\nasynchronous network? ",
    "start": "2030075",
    "end": "2039680"
  },
  {
    "text": "Go ahead. AUDIENCE: This version doesn't. But there's a\ndifferent version that contains an edge for\nrelaxation technique.",
    "start": "2039680",
    "end": "2045110"
  },
  {
    "text": "LING REN: Yeah. Correct. And so why does this version not\nwork for a synchronous network?",
    "start": "2045110",
    "end": "2050930"
  },
  {
    "text": "AUDIENCE: Because\ndifferent nodes can be on a different\nround number so that a longer path could\nend up going to the node even.",
    "start": "2050931",
    "end": "2058270"
  },
  {
    "text": "LING REN: Yeah, exactly. So let me give a\nconcrete example. What does asynchronous\nnetwork mean?",
    "start": "2058270",
    "end": "2065080"
  },
  {
    "text": "Is that, well, messages\ntravel at different speed. Say this link for some\nreason is temporarily down.",
    "start": "2065080",
    "end": "2072760"
  },
  {
    "text": "And this node doesn't receive\nthe message from the root. And then this message\ntravels very fast.",
    "start": "2072760",
    "end": "2081210"
  },
  {
    "text": "And this message also\ntravels very fast. So this message may\nreach this node earlier.",
    "start": "2081210",
    "end": "2087480"
  },
  {
    "text": "And then this node will think\nof it as a child of this node. OK.",
    "start": "2087480",
    "end": "2092850"
  },
  {
    "text": "And then this message\ncomes along, finally. But this node says, yeah,\nI already have a parent.",
    "start": "2092850",
    "end": "2098490"
  },
  {
    "text": "And I'm going to reject you. AUDIENCE: So it still\nmakes a spanning tree? LING REN: Yes.",
    "start": "2098490",
    "end": "2104220"
  },
  {
    "text": "Good point. This is not a BFS spanning tree\nbut it's still a spanning tree. All right.",
    "start": "2104220",
    "end": "2109870"
  },
  {
    "text": "So in our problem, we're\ntotally fine with it. ",
    "start": "2109870",
    "end": "2116340"
  },
  {
    "text": "Yeah. But you do have to know if\nyou really want a BFS spanning tree in an asynchronous\nnetwork, then",
    "start": "2116340",
    "end": "2122580"
  },
  {
    "text": "you have to like record the\ndistance and do the relaxation and so on and so forth. ",
    "start": "2122580",
    "end": "2129229"
  },
  {
    "text": "OK. So we will just use this\nalgorithm, the BFS spanning tree algorithm, just\nrun it asynchronously.",
    "start": "2129229",
    "end": "2137139"
  },
  {
    "text": "It doesn't find the\nBFS spanning tree but it finds some spanning tree. ",
    "start": "2137139",
    "end": "2146990"
  },
  {
    "text": "OK. How does this algorithm work? ",
    "start": "2146990",
    "end": "2156290"
  },
  {
    "text": "We will have several variables. The first one is parent.",
    "start": "2156290",
    "end": "2161510"
  },
  {
    "text": "We will initialize to\nthis undefined single. ",
    "start": "2161510",
    "end": "2173900"
  },
  {
    "text": "OK. Then every node will pass\naround this search message.",
    "start": "2173900",
    "end": "2180349"
  },
  {
    "text": "I'll use a slightly\nmore shorthand notation than from the lecture. ",
    "start": "2180350",
    "end": "2192746"
  },
  {
    "text": "OK. Let's say the code I\nwrote is for a process u.",
    "start": "2192746",
    "end": "2198920"
  },
  {
    "text": " OK.",
    "start": "2198920",
    "end": "2204880"
  },
  {
    "text": "If we receive a message,\na search message, from v",
    "start": "2204880",
    "end": "2211410"
  },
  {
    "text": "to u, that means u-- sorry, v\nis trying to become a parent.",
    "start": "2211410",
    "end": "2221135"
  },
  {
    "text": "OK.  And if I do not\nhave a parent yet,",
    "start": "2221135",
    "end": "2231529"
  },
  {
    "text": "I should set the\nparent to v. OK.",
    "start": "2231530",
    "end": "2245310"
  },
  {
    "text": "So what's the next step? ",
    "start": "2245310",
    "end": "2258990"
  },
  {
    "text": "Now, we got this search\nmessage from our parent. And we have to pass it along. ",
    "start": "2258990",
    "end": "2269687"
  },
  {
    "text": "AUDIENCE: Should we\nsend it to the like add your child [INAUDIBLE]. LING REN: Oh, yeah.",
    "start": "2269687",
    "end": "2274829"
  },
  {
    "text": "Great.  Yeah, we first need to\nrespond by saying, OK,",
    "start": "2274830",
    "end": "2283310"
  },
  {
    "text": "I'll use a shorter notation. Send these a cue that\nthat's the message that will",
    "start": "2283310",
    "end": "2292860"
  },
  {
    "text": "be sent to v at some point.  The message we send is parent 1.",
    "start": "2292860",
    "end": "2301330"
  },
  {
    "text": "Parent 2. This is a response to v saying,\nyeah, you are my parent.",
    "start": "2301330",
    "end": "2310107"
  },
  {
    "text": " OK. Then else, we also have to\nrespond by saying parent 0.",
    "start": "2310107",
    "end": "2330720"
  },
  {
    "text": "You are not my parent because I\nalready got some other parent. OK. Missing a step here.",
    "start": "2330720",
    "end": "2336474"
  },
  {
    "start": "2336474",
    "end": "2343590"
  },
  {
    "text": "If we receive a search message. Go ahead. AUDIENCE: We send messages\nto all the other nodes.",
    "start": "2343590",
    "end": "2348935"
  },
  {
    "text": "LING REN: Yeah. We need to pass it to all\nmy potential children.",
    "start": "2348935",
    "end": "2357170"
  },
  {
    "text": "So I use this comma u,\nmeaning the neighbors of u.",
    "start": "2357170",
    "end": "2366049"
  },
  {
    "text": "And then I'll send\nthem a message. ",
    "start": "2366050",
    "end": "2371959"
  },
  {
    "text": "What message?  Search. ",
    "start": "2371959",
    "end": "2387041"
  },
  {
    "text": "OK. ",
    "start": "2387041",
    "end": "2399465"
  },
  {
    "text": "OK. So, well, naturally since\nwe have a search message",
    "start": "2399465",
    "end": "2406000"
  },
  {
    "text": "and we know how to\ndeal with it, now we are sending this parent message\nwith better deal with it. Right.",
    "start": "2406000",
    "end": "2411940"
  },
  {
    "text": "So then the next\nchunk of code should be if we receive this parent\nmessage, I'll say parent b,",
    "start": "2411940",
    "end": "2425030"
  },
  {
    "text": "meaning this message comes\nwith either true or false. ",
    "start": "2425030",
    "end": "2432590"
  },
  {
    "text": "I received this message\nfrom some node w.",
    "start": "2432590",
    "end": "2437854"
  },
  {
    "text": "OK. I'm still u here. Because I just send all\nthe message to all the w's,",
    "start": "2437854",
    "end": "2443910"
  },
  {
    "text": "to all my neighbors, and they\nshould give me a response. ",
    "start": "2443910",
    "end": "2455430"
  },
  {
    "text": "OK. If b is 1 that means\nthis particular w",
    "start": "2455430",
    "end": "2463530"
  },
  {
    "text": "take me as its parent. Make sense?",
    "start": "2463530",
    "end": "2469360"
  },
  {
    "text": "OK. So I'd better have a\nlist of my children. I want to keep track of that.",
    "start": "2469360",
    "end": "2476500"
  },
  {
    "text": "How?  We will create a new\nvariable for children.",
    "start": "2476500",
    "end": "2485480"
  },
  {
    "text": "It's going to be\ninitialized to what? ",
    "start": "2485480",
    "end": "2492099"
  },
  {
    "text": "Yeah, empty set. ",
    "start": "2492100",
    "end": "2497730"
  },
  {
    "text": "And now if this b\nis 1, then I'm going to put w in this children list.",
    "start": "2497730",
    "end": "2505182"
  },
  {
    "text": " OK.",
    "start": "2505182",
    "end": "2511170"
  },
  {
    "text": "I'm leaving some space\nhere because our root",
    "start": "2511170",
    "end": "2521700"
  },
  {
    "text": "should be slightly different. So every other node will\nsend search messages when it receive\na search message.",
    "start": "2521700",
    "end": "2527954"
  },
  {
    "text": "We need someone to initiate.  Make sense?",
    "start": "2527954",
    "end": "2534130"
  },
  {
    "text": "So if u equals root,\nwe say the root is v0.",
    "start": "2534130",
    "end": "2540799"
  },
  {
    "start": "2540800",
    "end": "2546460"
  },
  {
    "text": "So two things should happen. First, we should set its\nparent to some special value.",
    "start": "2546460",
    "end": "2554260"
  },
  {
    "text": "Just say root. ",
    "start": "2554260",
    "end": "2560049"
  },
  {
    "text": "And then I should copy\nthis blob of code to here. ",
    "start": "2560050",
    "end": "2578163"
  },
  {
    "text": "OK. It's a little crowded but\nI hope it's still legible.",
    "start": "2578163",
    "end": "2584720"
  },
  {
    "start": "2584720",
    "end": "2594930"
  },
  {
    "text": "OK. This is already almost\nthe correct algorithm, except that we don't\nknow how to terminate.",
    "start": "2594930",
    "end": "2602020"
  },
  {
    "text": "If we wait long\nenough, then everyone will receive all the responses\nand everyone will know",
    "start": "2602020",
    "end": "2609109"
  },
  {
    "text": "its parent and this child list. But how do we terminate? ",
    "start": "2609110",
    "end": "2618322"
  },
  {
    "text": "AUDIENCE: After n rounds. LING REN: Yeah, that's one\nway to do, after n rounds. But the whole point is we\nare trying to find what n is.",
    "start": "2618322",
    "end": "2624710"
  },
  {
    "text": "We don't know how\nmany nodes are there. AUDIENCE: If we receive\nreject for all, [INAUDIBLE].",
    "start": "2624710",
    "end": "2630920"
  },
  {
    "text": " LING REN: Say again. AUDIENCE: For all the search,\nif we receive a reject.",
    "start": "2630920",
    "end": "2640999"
  },
  {
    "text": "LING REN: Oh, yeah. If you receive a response,\neither parent 0 or parent 1",
    "start": "2640999",
    "end": "2646850"
  },
  {
    "text": "from all your neighbors, then\nyour job is pretty much done. But the others have not.",
    "start": "2646850",
    "end": "2654813"
  },
  {
    "text": "All right. So you send a message very fast. They responded to you. And they are still\nworking very hard.",
    "start": "2654813",
    "end": "2662930"
  },
  {
    "text": "OK. So then we need to use the\ntechnique from the lecture that's called converge cast.",
    "start": "2662930",
    "end": "2671050"
  },
  {
    "text": "So everyone will send a\ndone signal when it is done",
    "start": "2671050",
    "end": "2676430"
  },
  {
    "text": "and all its children\nare also done.  OK.",
    "start": "2676430",
    "end": "2681904"
  },
  {
    "text": " To do that, I'm going to define\na new variable called searched.",
    "start": "2681904",
    "end": "2690150"
  },
  {
    "text": "Searched means\nsomeone has responded. OK. In this case, w has responded.",
    "start": "2690150",
    "end": "2698670"
  },
  {
    "text": "I'll put it into\nthe search the list, no matter whether it accepts\nme as parent or reject.",
    "start": "2698670",
    "end": "2705001"
  },
  {
    "text": "OK. Then naturally I need to\ndefine this variable here. ",
    "start": "2705001",
    "end": "2724699"
  },
  {
    "text": "OK. As a last step, If we search the\nlist equals my neighbor list,",
    "start": "2724699",
    "end": "2738310"
  },
  {
    "text": "that means everyone\nhas responded",
    "start": "2738310",
    "end": "2743660"
  },
  {
    "text": "and all my children\nare done, then",
    "start": "2743660",
    "end": "2751630"
  },
  {
    "text": "I need a new\nvariable called done. That's another list tracking who\nhas finished and who has not.",
    "start": "2751630",
    "end": "2763388"
  },
  {
    "text": " OK. AUDIENCE: So what's\nthe first one?",
    "start": "2763388",
    "end": "2769599"
  },
  {
    "text": "LING REN: Say again. AUDIENCE: What\nwas the first one? LING REN: This one? Searched means\nsomeone has responded",
    "start": "2769600",
    "end": "2776974"
  },
  {
    "text": "to the search message. OK. Done means all its\nchildren are done.",
    "start": "2776975",
    "end": "2785170"
  },
  {
    "text": "I haven't write how\ndone is defined. Give me a minute. In this case, I'm going to\nsend my parent a message.",
    "start": "2785170",
    "end": "2794779"
  },
  {
    "text": "This is the step\nof converge cast. What do I send? I'm going to send them I'm done.",
    "start": "2794780",
    "end": "2800590"
  },
  {
    "start": "2800590",
    "end": "2808318"
  },
  {
    "text": "OK. Then whenever we\ncreate a message, we should deal\nwith that message.",
    "start": "2808318",
    "end": "2816440"
  },
  {
    "text": "If we receive a message\nI'm done, what do we do?",
    "start": "2816440",
    "end": "2822821"
  },
  {
    "text": "OK. From w, then we're going\nto mark that node as done.",
    "start": "2822821",
    "end": "2831480"
  },
  {
    "start": "2831480",
    "end": "2846030"
  },
  {
    "text": "OK. There's this other point. So someone has to\ninitiate the done signal.",
    "start": "2846030",
    "end": "2852450"
  },
  {
    "text": "That's going to be\nour leaves, right. Because when this\ncondition check, they don't have any children.",
    "start": "2852450",
    "end": "2858510"
  },
  {
    "text": "Their children\nlist is empty set. And their done list\nis also empty set. But they're going to send\nthe I'm done signal first.",
    "start": "2858510",
    "end": "2865580"
  },
  {
    "text": "And then in the\nmedian nodes, we'll send a done signal when\nall its children are done.",
    "start": "2865580",
    "end": "2872281"
  },
  {
    "text": "All right. So this is the\nconverged cast version. Only gives us a\ntermination point",
    "start": "2872281",
    "end": "2880930"
  },
  {
    "text": "of our spanning tree search. We haven't count the number\nof nodes in the network.",
    "start": "2880930",
    "end": "2888089"
  },
  {
    "text": " But that's a small modification.",
    "start": "2888090",
    "end": "2895330"
  },
  {
    "text": "We're just going to include that\nnumber in the I'm done signal. So then I need to define\nanother variable called",
    "start": "2895330",
    "end": "2904190"
  },
  {
    "text": "total that's initialized to 0. This variable will\nattract how many",
    "start": "2904190",
    "end": "2911040"
  },
  {
    "text": "nodes do I have in\nmy subtree, including me and all my children.",
    "start": "2911040",
    "end": "2916720"
  },
  {
    "text": " Then when I send\nthe I'm done signal,",
    "start": "2916720",
    "end": "2923040"
  },
  {
    "text": "I'm going to send this-- sorry. That's not right way.",
    "start": "2923040",
    "end": "2930700"
  },
  {
    "text": "When I'm sending\nthe I'm done signal, I'm going to send my total\nnumber of offspring with it.",
    "start": "2930700",
    "end": "2937980"
  },
  {
    "text": "And when I receive,\none of my children",
    "start": "2937980",
    "end": "2943330"
  },
  {
    "text": "reports that I do\nhave t children.  I need to increment my\ntotal by that amount.",
    "start": "2943330",
    "end": "2952070"
  },
  {
    "start": "2952070",
    "end": "2961601"
  },
  {
    "text": "OK. I made a mistake again. Should be total plus 1.",
    "start": "2961601",
    "end": "2968060"
  },
  {
    "text": "Right. Because I'm counting\nall my children and then I should include myself. ",
    "start": "2968060",
    "end": "2983426"
  },
  {
    "text": "So that's the\ncomplete algorithm. ",
    "start": "2983426",
    "end": "2989370"
  },
  {
    "text": "Yeah. One purpose is just to create\na different angle to look at distributed algorithm.",
    "start": "2989370",
    "end": "2995070"
  },
  {
    "text": "Usually just draw\nthat network graphs. But sometimes it's\nhelpful to think about how",
    "start": "2995070",
    "end": "3000980"
  },
  {
    "text": "the code actually works.  OK.",
    "start": "3000980",
    "end": "3006203"
  },
  {
    "text": " That's all for today.",
    "start": "3006203",
    "end": "3012170"
  },
  {
    "start": "3012170",
    "end": "3018221"
  }
]