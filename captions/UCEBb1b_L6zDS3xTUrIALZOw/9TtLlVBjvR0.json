[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "start": "0",
    "end": "6470"
  },
  {
    "text": "SRINI DEVADAS: Good\nmorning, everyone. Thanks for making it here\nthrough the snow and sleet.",
    "start": "6470",
    "end": "11650"
  },
  {
    "text": "You will be, quote\nunquote, rewarded with a cool little puzzle that\nhas both recreational value as",
    "start": "11650",
    "end": "23260"
  },
  {
    "text": "well as a deep connection to the\nmost popular sorting algorithm,",
    "start": "23260",
    "end": "28480"
  },
  {
    "text": "or at least the most commonly\nused sorting algorithm, called quicksort. And so what we have\nup here is what",
    "start": "28480",
    "end": "36269"
  },
  {
    "start": "33000",
    "end": "325000"
  },
  {
    "text": "I call the disorganized\nhandyman puzzle. This is not a puzzle\nof my invention,",
    "start": "36270",
    "end": "41550"
  },
  {
    "text": "but I called it this because\nI think at some point when I read this, it\nwas a carpenter who",
    "start": "41550",
    "end": "50200"
  },
  {
    "text": "had a bunch of nuts\nand bolts in his bag,",
    "start": "50200",
    "end": "56620"
  },
  {
    "text": "and they were all mixed up. So rather than having these\nnuts attached to the bolts,",
    "start": "56620",
    "end": "66650"
  },
  {
    "text": "he was disorganized and the\nnuts and bolts were separate. And then they all got\nmixed up together in a bag,",
    "start": "66650",
    "end": "74670"
  },
  {
    "text": "OK? Now, obviously, all puzzles\nare a little bit contrived.",
    "start": "74670",
    "end": "80310"
  },
  {
    "text": "And so we're going\nto assume here that there's 100 different\nnuts and 100 associated bolts.",
    "start": "80310",
    "end": "87990"
  },
  {
    "text": "And these 200 objects are all\nmixed up into this one bag",
    "start": "87990",
    "end": "94729"
  },
  {
    "text": "that the carpenter is carrying. And not only that,\neach of the bolts",
    "start": "94730",
    "end": "101820"
  },
  {
    "text": "is unique in terms of its size. And as I mentioned, there is\nan associated nut associated",
    "start": "101820",
    "end": "110250"
  },
  {
    "text": "with each unique bolt. And\nso, as you can imagine,",
    "start": "110250",
    "end": "116550"
  },
  {
    "text": "the goal of this puzzle\nis going to be finding the most efficient\nway of creating",
    "start": "116550",
    "end": "126150"
  },
  {
    "text": "some organization in\nthis bag by attaching",
    "start": "126150",
    "end": "131730"
  },
  {
    "text": "each nut to the corresponding\nbolt, or vice versa. And you can assume that\nthere's no ambiguity because",
    "start": "131730",
    "end": "140280"
  },
  {
    "text": "of the uniqueness of\nthe nuts and the bolts. And there's 100 pairs\nwaiting to be discovered.",
    "start": "140280",
    "end": "147450"
  },
  {
    "text": "And you can try to\nmake that process as efficient as possible. As with all of the puzzles\nthat we look at here,",
    "start": "147450",
    "end": "155910"
  },
  {
    "text": "there's going to be naive slash\nstraightforward way of doing this. You're going to go ahead and\nfigure that out pretty quickly.",
    "start": "155910",
    "end": "164250"
  },
  {
    "text": "We're going to analyze\nthe complexity of that, or how long it takes for\na specific example of 100",
    "start": "164250",
    "end": "172140"
  },
  {
    "text": "nuts and 100 bolts,\nand then we're going to scratch our heads and\ntry and do better, all right?",
    "start": "172140",
    "end": "177847"
  },
  {
    "text": "And as I mentioned,\nobviously, there's going to be some programming\nassociated with this. And we're not going to\nrepresent nuts and bolts",
    "start": "177847",
    "end": "185190"
  },
  {
    "text": "in programs or codes. We're going to switch gears and\ntalk about sorting once we're",
    "start": "185190",
    "end": "192269"
  },
  {
    "text": "done with this puzzle. Good. The only way that\nyou or the carpenter,",
    "start": "192270",
    "end": "200460"
  },
  {
    "text": "if you're the\ncarpenter's helper, have of checking to see that\na nut attaches to a bolt",
    "start": "200460",
    "end": "210000"
  },
  {
    "text": "is to try it out. And the nuts and bolts are\ndifferent enough in size",
    "start": "210000",
    "end": "217080"
  },
  {
    "text": "that even if you had\nyour eyes closed or it was a dark room, if the\nnut attaches to the bolt,",
    "start": "217080",
    "end": "223410"
  },
  {
    "text": "it would screw on perfectly. If the bolt is smaller than the\nnut, it would just go through",
    "start": "223410",
    "end": "231360"
  },
  {
    "text": "and it would be obvious that the\nbolt is smaller than the nut.",
    "start": "231360",
    "end": "236670"
  },
  {
    "text": "And if the nut is\nsmaller than the bolt, it would also be obvious\nbecause the bolt won't",
    "start": "236670",
    "end": "241690"
  },
  {
    "text": "go through it, which\nmakes perfect sense from a physical\nstandpoint, right? And you all tried this before.",
    "start": "241690",
    "end": "248140"
  },
  {
    "text": "We've had-- maybe\nnot all of you, but I've certainly had\noccasion to discover",
    "start": "248140",
    "end": "254400"
  },
  {
    "text": "pairs of nuts and bolts, though\nit was never 100 of them.",
    "start": "254400",
    "end": "260350"
  },
  {
    "text": "So that's kind of a little\nbit contrived, as I said. All right, good. So the setup is clear?",
    "start": "260350",
    "end": "266275"
  },
  {
    "text": "We're good on the setup? Excellent. So what is the straightforward\nway of doing this? ",
    "start": "266275",
    "end": "274230"
  },
  {
    "text": "Someone. Yeah, Fadi back there. AUDIENCE: So like\nchoose a nut by random and try every\ndifferent bolt in turn.",
    "start": "274230",
    "end": "280949"
  },
  {
    "text": "SRINI DEVADAS: Right, we\ncould choose a nut at random, try every different bolt,\nor choose a bolt at random and try every different nut.",
    "start": "280950",
    "end": "288000"
  },
  {
    "text": "And we're guaranteed, in this\ncase, that there is a pairing. And so after we do that, we can\nput this paired nut and bolt",
    "start": "288000",
    "end": "296729"
  },
  {
    "text": "aside and we've shrunk\nthe problem down to one",
    "start": "296730",
    "end": "302700"
  },
  {
    "text": "less than the original problem. If I started out with 100 pairs\nthat are not paired together,",
    "start": "302700",
    "end": "309690"
  },
  {
    "text": "but there's 100\nnuts and 100 bolts, then I get one pair\nwhich is a correct pair,",
    "start": "309690",
    "end": "316110"
  },
  {
    "text": "and I have 99 nuts\nleft and 99 bolts left. And I keep going. Perfectly reasonable\nway of doing things.",
    "start": "316110",
    "end": "323020"
  },
  {
    "text": "And let me show you\nhow that would work. These slides were made by\nmy daughters many years ago",
    "start": "323020",
    "end": "330680"
  },
  {
    "text": "you know, back when\nthey listened to me. I have a fat chance of getting\nthem to do any work for me",
    "start": "330680",
    "end": "335850"
  },
  {
    "text": "anymore. But they are busier than they\nwere, I guess, years ago.",
    "start": "335850",
    "end": "341260"
  },
  {
    "text": "At least they pretend to be. And there you go. You end up, in this particular\nexample, which obviously",
    "start": "341260",
    "end": "348970"
  },
  {
    "text": "has many fewer than\n100 nuts and bolts, you end up checking this.",
    "start": "348970",
    "end": "355150"
  },
  {
    "text": "And in the worst case,\nhow many comparisons would I have had to do if I\nhad 100 nuts and 100 bolts?",
    "start": "355150",
    "end": "366170"
  },
  {
    "text": "In the worst case,\nI would have to-- AUDIENCE: Do all 100. SRINI DEVADAS: I\nhave to do all 100, because I might just\nhave gotten unlucky.",
    "start": "366170",
    "end": "372570"
  },
  {
    "text": "Like I said, we're not\neyeballing this at all. You could probably prune\nthe search a little bit",
    "start": "372570",
    "end": "380020"
  },
  {
    "text": "with respect to putting aside-- not having to do an\nexact comparison.",
    "start": "380020",
    "end": "385490"
  },
  {
    "text": "But let's just say\nthat even looking at a nut, as opposed\nto even touching it",
    "start": "385490",
    "end": "390650"
  },
  {
    "text": "with the bolt that\nyou've chosen, is, in fact, a comparison. You're just eyeballing it\nas opposed to physically",
    "start": "390650",
    "end": "396852"
  },
  {
    "text": "touching the bolt\nand nut together, and we're going to\ncall that a comparison. And if you do that, and if\nyou make that assumption, then",
    "start": "396852",
    "end": "403070"
  },
  {
    "text": "obviously, you're going to\nhave to look at all 100 nuts if you have a random bolt,\nin the worst case, OK?",
    "start": "403070",
    "end": "410630"
  },
  {
    "text": "You might get lucky. On an average, it\nmight be only 50. We're not going to do that\ntype of analysis here.",
    "start": "410630",
    "end": "418569"
  },
  {
    "text": "So that's good. And what is the complexity\nin terms of the growth rate",
    "start": "418570",
    "end": "426980"
  },
  {
    "text": "of this particular algorithm? If I had N nuts\nand bolts, then I",
    "start": "426980",
    "end": "438050"
  },
  {
    "text": "do N comparisons in the worst\ncase, to find the first pair.",
    "start": "438050",
    "end": "454800"
  },
  {
    "text": "And when I say first pair,\nI mean the correct pairing that's associated with\nthe nut and the bolt.",
    "start": "454800",
    "end": "462000"
  },
  {
    "text": "And what happens-- yeah,\nKevin, you have a question? AUDIENCE: Wouldn't it\nbe less than N squared, because once you find each\npair, you have one less?",
    "start": "462000",
    "end": "469729"
  },
  {
    "text": "SRINI DEVADAS:\nThat's exactly right. It's absolutely less than N\nsquare in terms of numerics.",
    "start": "469730",
    "end": "478370"
  },
  {
    "text": "The growth rate is a slightly\ndifferent question, right? It's related, obviously.",
    "start": "478370",
    "end": "484650"
  },
  {
    "text": "And so if you do this and\nyou get the first pair,",
    "start": "484650",
    "end": "490639"
  },
  {
    "text": "you now have a problem that\nis of size N minus 1, right?",
    "start": "490640",
    "end": "495710"
  },
  {
    "text": "And so in this case,\nhow many comparisons am I going to make when\nI have N minus 1 nuts and N minus 1 bolts,\nin the worst case?",
    "start": "495710",
    "end": "503830"
  },
  {
    "text": "I'm going to do N minus\n1 comparisons, right? ",
    "start": "503830",
    "end": "509790"
  },
  {
    "text": "And then I keep going down. And you could argue\nthat at the very end,",
    "start": "509790",
    "end": "518029"
  },
  {
    "text": "when I have two nuts and\ntwo bolts, one comparison, if I assume that this was a\nperfect set of nuts and bolts,",
    "start": "518030",
    "end": "529140"
  },
  {
    "text": "that we had all pairs\nright at the beginning, you could argue that that\nsmall problem corresponding",
    "start": "529140",
    "end": "536880"
  },
  {
    "text": "to two nuts and bolts can be\nsolved using one comparison. And you immediately know which\nnut pairs with which bolt,",
    "start": "536880",
    "end": "547350"
  },
  {
    "text": "and the other one as well. But let's call it a\nconfirmation comparison, and essentially say you need two\ncomparisons here and one here.",
    "start": "547350",
    "end": "558870"
  },
  {
    "text": "You can obviously shave a\nnumber a little bit out of this.",
    "start": "558870",
    "end": "565320"
  },
  {
    "text": "But this goes back to-- Kevin is right. It's less than N square if\nyou look at it numerically.",
    "start": "565320",
    "end": "572580"
  },
  {
    "text": "But the growth rate is\nN square, because we know that N plus N\nminus 1 plus N minus 2,",
    "start": "572580",
    "end": "581255"
  },
  {
    "text": "dot dot dot, 2 plus 1 is N\ntimes N plus 1 divided by 2.",
    "start": "581255",
    "end": "587690"
  },
  {
    "text": "And sure, you could\ntake this 1 off and this would become N\ntimes N minus 1 divided by 2,",
    "start": "587690",
    "end": "594530"
  },
  {
    "text": "but that growth\nrate is N square. Grows as N square.",
    "start": "594530",
    "end": "602100"
  },
  {
    "text": "So if you had 100 nuts\nand hundreds bolts, you're talking about something\nof the order of 5,000",
    "start": "602100",
    "end": "609410"
  },
  {
    "text": "comparisons if you want\nto do it numerically. And it grows as N squared.",
    "start": "609410",
    "end": "614420"
  },
  {
    "text": "If you had 1,000,\nthen it would be 1,000 times 1,000,\nwhich is 1 million,",
    "start": "614420",
    "end": "620149"
  },
  {
    "text": "divided by 2, that's 500,000. So that is astronomical\nin terms of its growth.",
    "start": "620150",
    "end": "625759"
  },
  {
    "text": "You don't want to do that. Obviously a contrived problem,\nbut N square in general,",
    "start": "625760",
    "end": "632120"
  },
  {
    "text": "when you talk\nabout manual labor, is generally not very good.",
    "start": "632120",
    "end": "637790"
  },
  {
    "text": "So we'd like to improve this. And we've been talking\nabout recursion.",
    "start": "637790",
    "end": "643450"
  },
  {
    "text": "We've been talking about\ndivide and conquer. This is not divide and\nconquer in the true sense",
    "start": "643450",
    "end": "648770"
  },
  {
    "text": "in that you're going to a\nsmaller problem, admittedly.",
    "start": "648770",
    "end": "654740"
  },
  {
    "text": "But recall I said,\ndivide and conquer is usually used when\nyou break the problem",
    "start": "654740",
    "end": "659960"
  },
  {
    "text": "up into fractional pieces,\nwhich means in mergesort,",
    "start": "659960",
    "end": "667220"
  },
  {
    "text": "for example, we took-- or the tiling puzzle, we took\ncourtyard and we broke it up",
    "start": "667220",
    "end": "674660"
  },
  {
    "text": "into four courtyards. So essentially, we\nhad four quarters in the case of\nthe tiling puzzle.",
    "start": "674660",
    "end": "681139"
  },
  {
    "text": "We had two halves in\nthe case of mergesort. Here we are solving,\nbasically, one nut and bolt",
    "start": "681140",
    "end": "690980"
  },
  {
    "text": "in the original puzzle. And then we're going\nfrom N to N minus 1, and so there's many\nmore steps, right?",
    "start": "690980",
    "end": "698882"
  },
  {
    "start": "698000",
    "end": "832000"
  },
  {
    "text": "The one thing to remember when\nyou think about complexity is that when you go N to N\ndivided by 2 to N divided by 4,",
    "start": "698882",
    "end": "708044"
  },
  {
    "text": "and then you keep going,\nand you go all the way down to 1, this, of course,\nwhen you go like this,",
    "start": "708044",
    "end": "715100"
  },
  {
    "text": "there's a linear\nnumber of steps. But when you do\nthat, how many steps",
    "start": "715100",
    "end": "721100"
  },
  {
    "text": "do you have to get all\nthe way to 1 in relation-- if you start with N, how\nmany steps do you have?",
    "start": "721100",
    "end": "728180"
  },
  {
    "text": " If this were 64--",
    "start": "728180",
    "end": "734840"
  },
  {
    "text": "or let's just take\na simpler one. If this were 4, how\nmany steps would I have?",
    "start": "734840",
    "end": "740620"
  },
  {
    "text": "I would have two steps. If this were 8, I'd\nhave three steps. And so what's that formula?",
    "start": "740620",
    "end": "745810"
  },
  {
    "text": "AUDIENCE: Logarithm. SRINI DEVADAS: Logarithm. Log to the base 2, right? So that's the power\nof fractional sizes.",
    "start": "745810",
    "end": "753980"
  },
  {
    "text": "And this is actually a\nvery fundamental notion that is going to appear\nover and over if you",
    "start": "753980",
    "end": "760940"
  },
  {
    "text": "do any algorithms work or\ntake any algorithms classes. That divide and conquer\nis very efficient,",
    "start": "760940",
    "end": "769250"
  },
  {
    "text": "because the number of\nsteps in order to get down to small problems\nis relatively small.",
    "start": "769250",
    "end": "777050"
  },
  {
    "text": "It's a logarithm. Now, if you broke this\nup into three parts",
    "start": "777050",
    "end": "784160"
  },
  {
    "text": "and you went to\nN/3, et cetera, then this would be log to\nthe base something else,",
    "start": "784160",
    "end": "789560"
  },
  {
    "text": "log to the base 3. So log to the base 2 came\nbecause we broke it up and we went down\nto half the size.",
    "start": "789560",
    "end": "798219"
  },
  {
    "text": "Now remember, of\ncourse, I mean, it's not that the complexity\nhere is just logarithmic. It's that you do\nhave two problems.",
    "start": "798219",
    "end": "804890"
  },
  {
    "text": " This is a function of the\nparticular specific algorithm",
    "start": "804890",
    "end": "813380"
  },
  {
    "text": "that corresponds to\ndivide and conquer. But in the case\nof mergesort, it's not that we just\nwent from N to N/2--",
    "start": "813380",
    "end": "819820"
  },
  {
    "text": "well, we went from N to N/2,\nbut there were two N/2 size problems.",
    "start": "819820",
    "end": "825250"
  },
  {
    "text": "But the beauty of\ndivide and conquer is if I magically broke\nup the N sized problem--",
    "start": "825250",
    "end": "842880"
  },
  {
    "text": "and let's go back\nto nuts and bolts-- into two problems\nof size N/2, so",
    "start": "842880",
    "end": "855570"
  },
  {
    "text": "each problem has N/2 nuts\nand N/2 bolts, each problem--",
    "start": "855570",
    "end": "861900"
  },
  {
    "text": "I'll repeat that-- N/2 nuts\nand N/2 bolts, then if I used--",
    "start": "861900",
    "end": "867960"
  },
  {
    "text": "and this is magical, right? I don't quite know\nhow to do that yet. But if I did that, then think\nabout what happens with respect",
    "start": "867960",
    "end": "876360"
  },
  {
    "text": "to these comparisons. So I said when N was 100,\nI needed 5,000 comparisons",
    "start": "876360",
    "end": "886730"
  },
  {
    "text": "for this naive algorithm. But now if I did this and I\ngot two N/2's, then I have 50,",
    "start": "886730",
    "end": "894760"
  },
  {
    "text": "so I call that M equals 50. And then I have another\none which is M equals 50. And so roughly how\nmany comparisons would",
    "start": "894760",
    "end": "900880"
  },
  {
    "text": "I need if I had, as problem of\nsize 50, 50 nuts and 50 bolts, using our original\nnaive strategy?",
    "start": "900880",
    "end": "908600"
  },
  {
    "text": "Roughly? AUDIENCE: 1200 SRINI DEVADAS: 1,225, right?",
    "start": "908600",
    "end": "913740"
  },
  {
    "text": "Roughly. And this would be 1,225. And so, so that is 2,500.",
    "start": "913740",
    "end": "919530"
  },
  {
    "text": "So of course, I haven't quite\ntold you how to do this.",
    "start": "919530",
    "end": "924680"
  },
  {
    "text": "This is still magic. But I was upfront about it. But clearly, I've\ngotten an improvement",
    "start": "924680",
    "end": "930899"
  },
  {
    "text": "if I have this magic, OK? And so let's talk about that. Let's turn this nuts and\nbolts puzzle, or the solution",
    "start": "930900",
    "end": "939950"
  },
  {
    "text": "to this puzzle, and try\nand figure out a divide and conquer strategy\nwhich is distinctly",
    "start": "939950",
    "end": "944960"
  },
  {
    "text": "different from the brute\nforce strategy that just reduced by one, all right? Now, we'll-- this\nis just going on.",
    "start": "944960",
    "end": "959070"
  },
  {
    "text": "So the comparisons in the\nworst case is what I just said. And it grows as N square. So big O N square means\nit just grows as N square.",
    "start": "959070",
    "end": "967190"
  },
  {
    "text": "That's asymptotic notation\nthat we won't go into, but you understand\nwhat that means now.",
    "start": "967190",
    "end": "974810"
  },
  {
    "start": "974000",
    "end": "1194000"
  },
  {
    "text": "So if I do a\nstraightforward divide and conquer, like I\ndid with mergesort,",
    "start": "974810",
    "end": "980720"
  },
  {
    "text": "where I just took the\narray and I split it in half, if I take\nthese nuts and bolts",
    "start": "980720",
    "end": "987050"
  },
  {
    "text": "and I separate the nuts out,\nand I put 50 on this side, 50 on the other side,\ntake the bolts,",
    "start": "987050",
    "end": "993320"
  },
  {
    "text": "put 50 on this side and\n50 on the other side, is that going to work? No, that's not going to work.",
    "start": "993320",
    "end": "998780"
  },
  {
    "text": "And the reason is if I do this\narbitrary partition, then--",
    "start": "998780",
    "end": "1004330"
  },
  {
    "text": "and let's say that I take\nthis, and the two of you get together, you're\nfriends and partners,",
    "start": "1004330",
    "end": "1009940"
  },
  {
    "text": "and you say, let's do this in\nparallel and save some time, you're still going\nto be counting the number of comparisons.",
    "start": "1009940",
    "end": "1016600"
  },
  {
    "text": "And so, obviously,\nyou also would like to reduce the\nnumber of comparisons. But you can't even use a\nhelper here in the sense",
    "start": "1016600",
    "end": "1023740"
  },
  {
    "text": "that if you split\nthis up-- obviously, this was not 50 and 50,\nbut three nuts and three",
    "start": "1023740",
    "end": "1029349"
  },
  {
    "text": "bolts on one side and four\nand four on the other side. As you can see\nfrom this example,",
    "start": "1029349",
    "end": "1035319"
  },
  {
    "text": "you had a situation where the\nmatching nut was in one pile",
    "start": "1035319",
    "end": "1042849"
  },
  {
    "text": "on the left for a bolt that\nwas on the right-hand side. And that could happen\nnot just for one,",
    "start": "1042849",
    "end": "1049840"
  },
  {
    "text": "which would kill the\nprocess, but could happen for many nut-bolt pairs.",
    "start": "1049840",
    "end": "1055220"
  },
  {
    "text": "So we can't do that. We cannot use the\nstraightforward divide and conquer approach.",
    "start": "1055220",
    "end": "1061020"
  },
  {
    "text": "So this comes to the\nfirst interesting question that we have here, which is, how\ndo we exploit the fact that all",
    "start": "1061020",
    "end": "1070694"
  },
  {
    "text": "of you are going to help me? So I'm the disorganized\ncarpenter or handyman. ",
    "start": "1070694",
    "end": "1076480"
  },
  {
    "text": "And I'd like to break this\nup, first into two piles, such",
    "start": "1076480",
    "end": "1083020"
  },
  {
    "text": "that I can go off and send\none or more of you off and say, OK, I can guarantee\nthat this is a subproblem,",
    "start": "1083020",
    "end": "1093700"
  },
  {
    "text": "in the sense that the\noriginal problem had all of the bolts that\nmatched all of the nuts that",
    "start": "1093700",
    "end": "1098830"
  },
  {
    "text": "were in my pile. I want to break it up\ninto two problems in-- this is the magic that we have.",
    "start": "1098830",
    "end": "1105620"
  },
  {
    "text": "We need to figure\nout this magic-- such that if I give you\n50 nuts and 50 bolts,",
    "start": "1105620",
    "end": "1111730"
  },
  {
    "text": "and I keep 50 nuts\nand 50 bolts, that you can solve that problem.",
    "start": "1111730",
    "end": "1117320"
  },
  {
    "text": "It is a problem. I mean, there's a\nmatching there, right? For those 50 nuts, you have\nthe 50 bolts in your pile.",
    "start": "1117320",
    "end": "1123610"
  },
  {
    "text": "Same thing with me. So how do I do that? ",
    "start": "1123610",
    "end": "1130680"
  },
  {
    "text": "Yeah, go ahead, Josh. AUDIENCE: I have a question. Can you compare the size\nof nuts to each other?",
    "start": "1130680",
    "end": "1135940"
  },
  {
    "text": "SRINI DEVADAS: No, you cannot. Yeah, good question. So the only thing you\ncan do is you have a nut",
    "start": "1135940",
    "end": "1143910"
  },
  {
    "text": "and you have a bolt,\nand if it goes through, then the nut is bigger.",
    "start": "1143910",
    "end": "1149790"
  },
  {
    "text": "If it doesn't, then\nthe bolt is bigger. And then if it fits exactly,\nyou have a match, all right?",
    "start": "1149790",
    "end": "1155880"
  },
  {
    "text": "Great, so yeah,\ngo ahead, Ganatra. AUDIENCE: So once\nyou get one to fit, you can use that to sort of\nlike order the other ones.",
    "start": "1155880",
    "end": "1164370"
  },
  {
    "text": "Because it fits in\nperfectly, right, it fits, so all the ones that-- you\njust go through all of them,",
    "start": "1164370",
    "end": "1169510"
  },
  {
    "text": "and if it goes\nthrough just the hole, then you know\nthose are smaller-- well, they're bigger.",
    "start": "1169510",
    "end": "1175950"
  },
  {
    "text": "And then if it\ndoesn't fit through, then you know that those-- SRINI DEVADAS: Right, great. Excellent. So Ganatra has discovered\nthis notion of pivoting.",
    "start": "1175950",
    "end": "1186810"
  },
  {
    "text": "And pivoting is\nessentially something that is best described here in\nthe animation that gives you",
    "start": "1186810",
    "end": "1196320"
  },
  {
    "text": "a divide and conquer strategy. Now, I answered Josh's question,\nand that was a key question.",
    "start": "1196320",
    "end": "1203040"
  },
  {
    "text": "And I'm not going to violate\nthe answer to that question by using some other strategy\nthat does not correspond",
    "start": "1203040",
    "end": "1213480"
  },
  {
    "text": "to this nut-bolt check, right? So the only thing I\ncan do in this puzzle",
    "start": "1213480",
    "end": "1218730"
  },
  {
    "text": "is a nut-bolt check. But I do get three\npotential possibilities",
    "start": "1218730",
    "end": "1224650"
  },
  {
    "text": "whenever I do a nut-bolt check. I do get the information\nabout a perfect match,",
    "start": "1224650",
    "end": "1230840"
  },
  {
    "text": "whether the nut is smaller,\nor whether the nut is bigger. And that's all I need in\norder to do pivoting, right?",
    "start": "1230840",
    "end": "1237550"
  },
  {
    "text": "And so what's going to\nhappen here is I go ahead and I choose an arbitrary\nbolt. And I don't even",
    "start": "1237550",
    "end": "1248580"
  },
  {
    "text": "actually need to find the match\nbefore I start this process. So it's a small variant\non what Ganatra said,",
    "start": "1248580",
    "end": "1255450"
  },
  {
    "text": "but it's really a\npretty small variant. And when I see that\nthis is not a match,",
    "start": "1255450",
    "end": "1262680"
  },
  {
    "text": "and in fact, the nut is\nbigger, then I put the nut on the right-hand side pile.",
    "start": "1262680",
    "end": "1269540"
  },
  {
    "text": "When I see that\nthe nut is smaller, then I put the nut in\nthe left-hand side pile.",
    "start": "1269540",
    "end": "1275309"
  },
  {
    "text": "And I see a match, I\njust put that aside. I don't put it in\neither of the piles, because I'm going to\nactually-- it turns out",
    "start": "1275310",
    "end": "1282570"
  },
  {
    "text": "I'm not going to get a pile\nof 50 and 50, or in this case,",
    "start": "1282570",
    "end": "1287590"
  },
  {
    "text": "I'm actually going to get\nsomething like three and three, because I'm going to\nget one match out of it.",
    "start": "1287590",
    "end": "1292950"
  },
  {
    "text": "So in general, I'm\nnot necessarily",
    "start": "1292950",
    "end": "1298350"
  },
  {
    "text": "going to get equal size piles. So that's actually a\nlittle bit of an issue, and we'll get back\nto that maybe later.",
    "start": "1298350",
    "end": "1305700"
  },
  {
    "text": "But I will get a\nmatching, and I'll get a pile on the left that\nis the perfect problem,",
    "start": "1305700",
    "end": "1313680"
  },
  {
    "text": "perfect subproblem. There I can hand it\noff to any of you and you can go off and\nsolve it and it will work.",
    "start": "1313680",
    "end": "1319650"
  },
  {
    "text": "And I'll get a pile on the\nright, same thing for that. So this was a match,\nbut I don't stop.",
    "start": "1319650",
    "end": "1325950"
  },
  {
    "text": "I don't put the nut in\neither of the two piles. It's just going\nto stay up there. And then I keep going.",
    "start": "1325950",
    "end": "1332820"
  },
  {
    "text": "And I make up my right\npile and my left pile.",
    "start": "1332820",
    "end": "1340019"
  },
  {
    "text": "Now, I'm not quite done yet. What do I do now? Yeah, back there.",
    "start": "1340020",
    "end": "1345645"
  },
  {
    "text": "AUDIENCE: You would test\nevery screw into that nut to see which one-- SRINI DEVADAS: That's right.",
    "start": "1345645",
    "end": "1350720"
  },
  {
    "text": "So remember, I kept the-- ",
    "start": "1350720",
    "end": "1355789"
  },
  {
    "text": "I guess you used a\ndifferent term here. You used-- I said\nbolt, you said screw.",
    "start": "1355790",
    "end": "1362570"
  },
  {
    "text": "That's fine. But we're talking\nabout a nut here. So let's go with the nut. And this nut that\nI put aside, I'm",
    "start": "1362570",
    "end": "1369260"
  },
  {
    "text": "going to now compare that, not\nwith this pivot bolt that I picked, which is now set aside\nand never have used that again,",
    "start": "1369260",
    "end": "1378770"
  },
  {
    "text": "but I'm going to put\nthat aside, and I'm going to compare each of the\nbolts with this pivot nut",
    "start": "1378770",
    "end": "1387901"
  },
  {
    "text": "that I have. So the pivot bolt was\npicked and I discover",
    "start": "1387901",
    "end": "1395370"
  },
  {
    "text": "the associated pivot nut. And now I'm going to use\nthat pivot nut, which",
    "start": "1395370",
    "end": "1403170"
  },
  {
    "text": "is the nut that I have up\nhere, the light green one,",
    "start": "1403170",
    "end": "1409820"
  },
  {
    "text": "and then I'm going\nto do the same thing. And all of this does not violate\nthe answer to Josh's question.",
    "start": "1409820",
    "end": "1418600"
  },
  {
    "text": "And it's going to do\nexactly the right thing in terms of giving\nme two piles that",
    "start": "1418600",
    "end": "1427970"
  },
  {
    "text": "are beautiful problems that\nare going to be solvable.",
    "start": "1427970",
    "end": "1434990"
  },
  {
    "text": "There's nothing that's stopping\nme from repeating this process.",
    "start": "1434990",
    "end": "1440690"
  },
  {
    "start": "1436000",
    "end": "1542000"
  },
  {
    "text": "When we talk about\ndivide and conquer, usually we talk about\nrecursion, and we talk about repeatedly\ndoing divide and conquer.",
    "start": "1440690",
    "end": "1447680"
  },
  {
    "text": "Then I wrote this up here in\nterms of the N size problem",
    "start": "1447680",
    "end": "1453710"
  },
  {
    "text": "turned into two N/2 problems. Well, each of those\nN/2 problems I could turn into\ntwo N/4 problems,",
    "start": "1453710",
    "end": "1460309"
  },
  {
    "text": "so I could have four N/4's,\nand so on and so forth. And so I could clearly do that.",
    "start": "1460310",
    "end": "1465450"
  },
  {
    "text": "And especially if\nN is large, then I want to get a reduction\nin comparisons.",
    "start": "1465450",
    "end": "1471500"
  },
  {
    "text": "And get this to\ngrow, by the way. And we won't do this analysis. But rather than\ngrowing as N square,",
    "start": "1471500",
    "end": "1479549"
  },
  {
    "text": "you'd like it to\ngrow as N log N.",
    "start": "1479550",
    "end": "1487450"
  },
  {
    "text": "And that's kind of the\nasymptotic analysis",
    "start": "1487450",
    "end": "1494120"
  },
  {
    "text": "that you'll have to do if\nyou take a class like 6006. But the general sense that\nyou should take away from this",
    "start": "1494120",
    "end": "1501830"
  },
  {
    "text": "is that you're going to have\na logarithmic number of steps. And obviously, that doesn't\nimply a logarithmic number",
    "start": "1501830",
    "end": "1507680"
  },
  {
    "text": "of comparisons, because the\nnumber of subproblems in each of those steps is doubling. Initially, you had a problem,\nthen you have two subproblems,",
    "start": "1507680",
    "end": "1515390"
  },
  {
    "text": "and then you have\nfour subproblems. Each of them are small\nin size, but together,",
    "start": "1515390",
    "end": "1522380"
  },
  {
    "text": "assuming these problems\nare N/2 and N/2, then",
    "start": "1522380",
    "end": "1527390"
  },
  {
    "text": "you can get something that's\nsubstantially smaller than N square, namely N log N, OK?",
    "start": "1527390",
    "end": "1533690"
  },
  {
    "text": "And you can do that numerically. And I don't want to\nget into that too much, but be happy to talk to you\nabout this after lecture",
    "start": "1533690",
    "end": "1540380"
  },
  {
    "text": "or during office hours. There's a couple of caveats.",
    "start": "1540380",
    "end": "1546370"
  },
  {
    "start": "1542000",
    "end": "1647000"
  },
  {
    "text": "One of them is there's\nno guarantee here if I pick a random pivot\nbolt that I'm actually",
    "start": "1546370",
    "end": "1553510"
  },
  {
    "text": "going to get N/2 and N/2. It's going to be\none less than that.",
    "start": "1553510",
    "end": "1559929"
  },
  {
    "text": "Maybe it'd be in over\nN/2 and N over 2 minus 1. I could get something-- if\nI picked a large pivot bolt,",
    "start": "1559930",
    "end": "1567250"
  },
  {
    "text": "I might get a very skewed\npair of piles, right?",
    "start": "1567250",
    "end": "1573010"
  },
  {
    "text": "One of them could\nhave 80 in them-- 80 nuts and bolts in\nthem, and the other one could have 20 nuts\nand bolts in them, OK?",
    "start": "1573010",
    "end": "1579880"
  },
  {
    "text": "So that's something\nto worry about. We won't worry about that.",
    "start": "1579880",
    "end": "1585280"
  },
  {
    "text": "But we'll talk about\nit when we move to sorting, which is\nwhat we're going to do in just a couple of minutes.",
    "start": "1585280",
    "end": "1591980"
  },
  {
    "text": "So people buy the solution\nto the nuts and bolts puzzle. Clearly, it's going to\ngive you some efficiency.",
    "start": "1591980",
    "end": "1597520"
  },
  {
    "text": "If you pick a\nmiddling size bolt, maybe you can eyeball that. It's a little bit of a violation\nof what we've talked about,",
    "start": "1597520",
    "end": "1605980"
  },
  {
    "text": "but you could clearly-- I mean, let's assume\nthat you can make out the difference between\nsomething that's as",
    "start": "1605980",
    "end": "1612220"
  },
  {
    "text": "thick as this and that finger. And then you pick\nsomething in the middle. And then you can\nget two large piles",
    "start": "1612220",
    "end": "1619360"
  },
  {
    "text": "that are roughly equal in size\nfrom the original really large pile. And at least at\nthe beginning, you",
    "start": "1619360",
    "end": "1625330"
  },
  {
    "text": "could probably\nget, in the context of this puzzle, piles that\nare roughly similar in size.",
    "start": "1625330",
    "end": "1631605"
  },
  {
    "text": "And after that,\nit doesn't really matter once you've\nbroken things up. So N is not 100, but N\nis more like 5 or 10.",
    "start": "1631605",
    "end": "1638407"
  },
  {
    "text": "At that point, it doesn't really\nmatter what strategy you use, because the numbers aren't\nreally different, regardless",
    "start": "1638407",
    "end": "1644770"
  },
  {
    "text": "of the strategy. So good, all right. So I promised you a\nrelationship to sorting.",
    "start": "1644770",
    "end": "1651870"
  },
  {
    "start": "1647000",
    "end": "1853000"
  },
  {
    "text": "And obviously, we want to\ndo some programming here. And it turns out\nthat just like we",
    "start": "1651870",
    "end": "1659310"
  },
  {
    "text": "had mergesort,\nwhich was a divide and conquer out\nalgorithm, it turns out this pivoting strategy turns\ninto a strategy for divide",
    "start": "1659310",
    "end": "1669360"
  },
  {
    "text": "and conquer that is quite\ndifferent from mergesort, but is equally applicable\nto sorting numbers.",
    "start": "1669360",
    "end": "1677490"
  },
  {
    "text": "And so let me remind\nyou what mergesort was. And then I'm going\nto contrast mergesort",
    "start": "1677490",
    "end": "1684420"
  },
  {
    "text": "with quicksort, which is a\npivot-based sorting algorithm.",
    "start": "1684420",
    "end": "1689910"
  },
  {
    "text": "So forget about nuts and bolts. We're now down to boring\nnumbers, integers.",
    "start": "1689910",
    "end": "1697090"
  },
  {
    "text": "And we want to just sort these\nnumbers in ascending order. So if I have a bunch\nof numbers and I",
    "start": "1697090",
    "end": "1715640"
  },
  {
    "text": "want to sort these in ascending\norder, mergesort would say,",
    "start": "1715640",
    "end": "1720800"
  },
  {
    "text": "I'm going to go ahead and\nbreak it up into halves.",
    "start": "1720800",
    "end": "1728090"
  },
  {
    "text": "And let's just do one\nlevel of recursion. With all of these things\nyou can always do more, but these problems\naren't large enough",
    "start": "1728090",
    "end": "1734810"
  },
  {
    "text": "that you really want to\ndo that in this example. And the important thing is\nyou just broke it into half.",
    "start": "1734810",
    "end": "1741920"
  },
  {
    "text": "But it was easy. The split was easy. You slice the list, splice\nthe list, what have you.",
    "start": "1741920",
    "end": "1749030"
  },
  {
    "text": "And you assume that\nsomehow you can sort this in ascending order.",
    "start": "1749030",
    "end": "1754870"
  },
  {
    "text": "And in this case, you\nneed to go to that.",
    "start": "1754870",
    "end": "1761580"
  },
  {
    "text": "And then you sort this\nin ascending order. So you go like that.",
    "start": "1761580",
    "end": "1766680"
  },
  {
    "text": "And then you need to do a merge. And we used what we call the\ntwo finger algorithm to do",
    "start": "1766680",
    "end": "1772880"
  },
  {
    "text": "the merge that\nessentially says, I'm going to assume that\nthis array is sorted",
    "start": "1772880",
    "end": "1778850"
  },
  {
    "text": "and this array is\nsorted, and I'm going to put pointers up at the\nbeginning of these two arrays.",
    "start": "1778850",
    "end": "1788210"
  },
  {
    "text": "And I'm going to do comparisons. And I'm essentially\ngoing to assume that I have a blank array of\nsize six, blank list of size",
    "start": "1788210",
    "end": "1799490"
  },
  {
    "text": "six. And I'm going to be writing\ninto this blank array",
    "start": "1799490",
    "end": "1805220"
  },
  {
    "text": "the result of the comparison\nthat is, which one is less in the comparisons.",
    "start": "1805220",
    "end": "1810950"
  },
  {
    "text": "So I'm going to get minus 31. And then I compare\n0 with minus 4, and I'm going to get minus\n4, 0, et cetera, et cetera.",
    "start": "1810950",
    "end": "1819139"
  },
  {
    "text": "So that was our merge. And the important\nthing to remember is that our merge algorithm\nhad an easy divide step,",
    "start": "1819140",
    "end": "1828169"
  },
  {
    "text": "and it had a more\ndifficult step that corresponded to taking the\nsubarrays that were sorted,",
    "start": "1828170",
    "end": "1836420"
  },
  {
    "text": "and the work was\nall in the merge, putting the things together. Because the divide,\nobviously, is just like chop.",
    "start": "1836420",
    "end": "1844080"
  },
  {
    "text": "Now, as you can see\nfrom the nuts and bolts, division was non-trivial, right?",
    "start": "1844080",
    "end": "1851060"
  },
  {
    "text": "Division required pivoting. But there was no real\nmerge after that.",
    "start": "1851060",
    "end": "1856850"
  },
  {
    "start": "1853000",
    "end": "2272000"
  },
  {
    "text": "And one side handed off,\nlet's say, to Ganatra these 50 nuts and bolts after\nI did the work in pivoting.",
    "start": "1856850",
    "end": "1864620"
  },
  {
    "text": "And I kept 50 nuts\nand bolts as well. We were done. I mean, maybe I wanted\nthe nuts and bolts back.",
    "start": "1864620",
    "end": "1871760"
  },
  {
    "text": "I don't want him to\nrun away with it. But it wasn't like I\nhad to process anything",
    "start": "1871760",
    "end": "1876980"
  },
  {
    "text": "that he gave me back, right? If he paired them\nup, then I didn't have to process that, right? So this is mergesort.",
    "start": "1876980",
    "end": "1884788"
  },
  {
    "text": " The quicksort algorithm, which\nI'll now describe to you,",
    "start": "1884788",
    "end": "1894120"
  },
  {
    "text": "is divide and conquer,\ntwo-way divide and conquer, same as mergesort, but it\nkind of flips the work.",
    "start": "1894120",
    "end": "1902340"
  },
  {
    "text": "And it does more work up\nfront before the division, and then this little\nor no work at the end.",
    "start": "1902340",
    "end": "1909760"
  },
  {
    "text": "So what happens here is-- the way we're going to\nthink about quicksort",
    "start": "1909760",
    "end": "1915059"
  },
  {
    "text": "is we're going to\nchoose a pivot. You can have some array here.",
    "start": "1915060",
    "end": "1920890"
  },
  {
    "text": "And I can go ahead and just\ncall these a, b, c, d, e, f, g. And I'm going to choose a pivot.",
    "start": "1920890",
    "end": "1929419"
  },
  {
    "text": "And in the code that\nI'm going to show you, we're just going to go ahead\nand choose the last element.",
    "start": "1929420",
    "end": "1935460"
  },
  {
    "text": "We assume that this\nis in random order. We're going to choose the\nlast element of this array as the pivot.",
    "start": "1935460",
    "end": "1942000"
  },
  {
    "text": "And what did we do with\nthe pivot back in our nuts and bolts example?",
    "start": "1942000",
    "end": "1947110"
  },
  {
    "text": "We-- someone, what did\nwe do with the pivot? ",
    "start": "1947110",
    "end": "1954640"
  },
  {
    "text": "Yeah, go ahead. AUDIENCE: We spliced around it. SRINI DEVADAS: Yeah, you just\nbasically spliced around it. You compared it with--",
    "start": "1954640",
    "end": "1960779"
  },
  {
    "text": "we took the pivot bolt, and\nin this case of the puzzle, you compared it with the nuts. Here we don't have nuts and\nbolts, we just have numbers.",
    "start": "1960780",
    "end": "1967273"
  },
  {
    "text": "And so you're going\nto take that pivot and you're to start comparing\nit with the other numbers. And you're exactly right in that\nwe're going to get to the point",
    "start": "1967274",
    "end": "1974350"
  },
  {
    "text": "where we have to\nsplice round it, which isn't your\nstandard Python splicing,",
    "start": "1974350",
    "end": "1980230"
  },
  {
    "text": "because that requires\ncontiguous locations. But what you want to do is\nyou want to get to a situation",
    "start": "1980230",
    "end": "1986770"
  },
  {
    "text": "where you have something\nlike this, where you have g somewhere in the\nmiddle and all elements",
    "start": "1986770",
    "end": "1993160"
  },
  {
    "text": "less than g are to the left. And let's assume they're\nall unique elements. All elements greater than\ng are to the right, OK?",
    "start": "1993160",
    "end": "2001980"
  },
  {
    "text": "So this is exactly\npivoting around g. So it's referred to\nas pivoting around g.",
    "start": "2001980",
    "end": "2014390"
  },
  {
    "text": "Now, the nice thing\nhere, when you do this, is that you can go off and\nyou can fix the location of g.",
    "start": "2014390",
    "end": "2024530"
  },
  {
    "text": "In fact, g's location,\njust like the pair,",
    "start": "2024530",
    "end": "2029630"
  },
  {
    "text": "the nut-bolt pair was\ncorresponding to the pivot nut,",
    "start": "2029630",
    "end": "2034900"
  },
  {
    "text": "and the pivot bolt was\ndetermined during the pivoting step. And you never had\nto check whether--",
    "start": "2034900",
    "end": "2042420"
  },
  {
    "text": "you never had to\ndiscover that pair again. You can put that pair aside. The location of g,\nthe pivot chosen,",
    "start": "2042420",
    "end": "2049330"
  },
  {
    "text": "in the final sorted\narray, is determined by this pivoting step, OK?",
    "start": "2049330",
    "end": "2055989"
  },
  {
    "text": "That makes sense? And so this location,\nwhatever that index is,",
    "start": "2055989",
    "end": "2061330"
  },
  {
    "text": "it might be right in the middle. It might be a little bit skewed. But that location is determined.",
    "start": "2061330",
    "end": "2066750"
  },
  {
    "text": "And if you did this with roughly\nequal piles, if you will, or equal sides, if there\nwere 100 elements here,",
    "start": "2066750",
    "end": "2075090"
  },
  {
    "text": "you might see 50-odd here\nand 40-odd over there. Now, of course, if g happened\nto be the largest number,",
    "start": "2075090",
    "end": "2082619"
  },
  {
    "text": "then g would be all\nthe way to the right. So there's that to worry about.",
    "start": "2082620",
    "end": "2087669"
  },
  {
    "text": " But this is the divide step.",
    "start": "2087670",
    "end": "2093810"
  },
  {
    "text": "So the divide step\nis the pivoting step. And then you can go off and\nsort each of those sublists.",
    "start": "2093810",
    "end": "2107000"
  },
  {
    "text": "Because those less\nthan g are not necessarily in ascending order.",
    "start": "2107000",
    "end": "2113060"
  },
  {
    "text": "You just dumped them. There's still work to be done. And then the greater\nthan g, likewise. They're not necessarily\nin ascending order.",
    "start": "2113060",
    "end": "2119819"
  },
  {
    "text": "But you know that there's\n42 elements corresponding to less than g, and you\ncan go sort that array.",
    "start": "2119820",
    "end": "2125937"
  },
  {
    "text": "And those are going\nto be the first 42 elements of your final array. And the g is going to\nbe at the 43rd position.",
    "start": "2125937",
    "end": "2134456"
  },
  {
    "text": "And then the ones that are\ngreater than g are going to be to the right of that. All make sense?",
    "start": "2134456",
    "end": "2140300"
  },
  {
    "text": "Yeah, go ahead, Fadi. AUDIENCE: So like if we were\nvery unlucky and at each step, we just picked the largest\nnumber, the largest",
    "start": "2140300",
    "end": "2146555"
  },
  {
    "text": "number, the largest\nnumber, then it's got to be N squared, correct? SRINI DEVADAS: That's right. So that's pathological. Now, it turns out that,\namazingly, in order",
    "start": "2146555",
    "end": "2154130"
  },
  {
    "text": "to avoid that\nsituation when people use quicksort in practice, which\nis essentially this algorithm",
    "start": "2154130",
    "end": "2160579"
  },
  {
    "text": "that I describe, they take\nthe array that they're given and they actually randomize it.",
    "start": "2160580",
    "end": "2166130"
  },
  {
    "text": "They actually make it-- they shake it up. It's like you get\nthese nuts and bolts,",
    "start": "2166130",
    "end": "2172185"
  },
  {
    "text": "and you want to close\nyour eyes and you want to pick up a nut\nthat's middling in size, and maybe all the small\nones are up at the top",
    "start": "2172185",
    "end": "2178544"
  },
  {
    "text": "and the big ones are\ndown at the bottom. You want things in\nthe middle, so you go, you shake, shake, shake. You randomize.",
    "start": "2178544",
    "end": "2184179"
  },
  {
    "text": "And then go stick\nyour hand in About. Halfway through the\npile and pick up a nut, or pick up a bolt, right?",
    "start": "2184179",
    "end": "2189410"
  },
  {
    "text": "That's kind of\nwhat happens here. So quicksort, it turns out-- and I'll just say this, and\nif this doesn't make sense,",
    "start": "2189410",
    "end": "2196160"
  },
  {
    "text": "ask me later. But it should give\nyou some intuition. The randomized quicksort, where\nyou have this random input,",
    "start": "2196160",
    "end": "2206720"
  },
  {
    "text": "and you have some probabilistic\nguarantee that you're picking a pivot that is middling\nin size in terms of an integer",
    "start": "2206720",
    "end": "2213920"
  },
  {
    "text": "size, is going to be\nN log N in complexity. But the worst case\ncomplexity of quicksort",
    "start": "2213920",
    "end": "2220910"
  },
  {
    "text": "is exactly as you\nsaid, it's N square. But that's really not\nsomething that you",
    "start": "2220910",
    "end": "2227569"
  },
  {
    "text": "need to understand deeply\nto understand, well, either the puzzle or the\nrest of this lecture.",
    "start": "2227570",
    "end": "2234800"
  },
  {
    "text": "You do get a sense of-- as long as you have a sense\nof if you pick something in the middle and these piles\nare roughly equal in size,",
    "start": "2234800",
    "end": "2241400"
  },
  {
    "text": "I'm going to get\nsome improvement. The guarantee that\nthe piles are roughly equal in size, all the way down\nto the depths of recursion,",
    "start": "2241400",
    "end": "2249950"
  },
  {
    "text": "is a difficult one to achieve\nin a deterministic way. But it's not hard to achieve\nin a probablistic way",
    "start": "2249950",
    "end": "2257779"
  },
  {
    "text": "by doing this randomization. You had another question? Yeah. AUDIENCE: So then why do we\nuse this more than mergesort,",
    "start": "2257780",
    "end": "2263235"
  },
  {
    "text": "which is like-- SRINI DEVADAS: Ah,\nthat's exactly-- so that is the rest of the lecture,\nwhich is only 10 minutes left.",
    "start": "2263235",
    "end": "2268300"
  },
  {
    "text": "But OK, so that's the\nrest of the lecture. So one of the things\nthat I said here,",
    "start": "2268300",
    "end": "2275810"
  },
  {
    "start": "2272000",
    "end": "2317000"
  },
  {
    "text": "I said a blank list of size six. So what mergesort requires,\nin order for mergesort",
    "start": "2275810",
    "end": "2283480"
  },
  {
    "text": "to be efficient, you\nneeded auxiliary storage that corresponded to\nthe size of the list.",
    "start": "2283480",
    "end": "2290750"
  },
  {
    "text": "Because right at the\nfirst level of recursion, when you got two arrays\nthat were N/2 and N/2,",
    "start": "2290750",
    "end": "2297140"
  },
  {
    "text": "and they were both sorted,\nand you had to merge the two together to create the\nfinal result corresponding",
    "start": "2297140",
    "end": "2303080"
  },
  {
    "text": "to the sorted\narray, you ended up requiring storage\nthat was N in size",
    "start": "2303080",
    "end": "2309140"
  },
  {
    "text": "in order to actually do\nthis two finger algorithm and compare the minus\n31's with the zeros",
    "start": "2309140",
    "end": "2315050"
  },
  {
    "text": "and then write them\ninto this array. Now, the obvious way of\ntaking this and going to here",
    "start": "2315050",
    "end": "2324800"
  },
  {
    "text": "is code that I'm going to show\nyou that is easy to write. And it requires a\nblank list as well.",
    "start": "2324800",
    "end": "2335516"
  },
  {
    "text": "I mean, the easy\nway to do that-- and I'll just show you the\ncode, because it's easier to show you the code as\nopposed to waving my hands here",
    "start": "2335516",
    "end": "2346039"
  },
  {
    "text": "and potentially\nconfusing people. But let me show you first the\nquicksort divide and conquer,",
    "start": "2346040",
    "end": "2353600"
  },
  {
    "text": "which is absolutely trivial. I mean, just like mergesort was. But pivot partition\nis this step here.",
    "start": "2353600",
    "end": "2362660"
  },
  {
    "text": "This is the pivoting step. And this is what\nthat procedure does.",
    "start": "2362660",
    "end": "2368630"
  },
  {
    "text": "So we'll get to that\nin just a second. But the rest of it is simply\nI'm going to go ahead,",
    "start": "2368630",
    "end": "2374420"
  },
  {
    "text": "and once I do the\npivot partition, I have something\nthat looks like this. And then I just go off\nand run quicksort on this",
    "start": "2374420",
    "end": "2381290"
  },
  {
    "text": "and quicksort on that. And I'm doing that\non the array itself. It's just like I\nhave this array,",
    "start": "2381290",
    "end": "2387980"
  },
  {
    "text": "and I'm just saying I'm\ngoing to call quicksort with the indices\nthat are associated",
    "start": "2387980",
    "end": "2393559"
  },
  {
    "text": "with the beginning and\nthe end of this array. And then I'm going\nto call quicksort with the indices that begin\nwith the beginning and the end",
    "start": "2393560",
    "end": "2400460"
  },
  {
    "text": "of this array. And that same array is going\nto be my final output, right?",
    "start": "2400460",
    "end": "2407960"
  },
  {
    "text": "So everything is done-- the term that's used\nhere is \"in place.\"",
    "start": "2407960",
    "end": "2413570"
  },
  {
    "text": "So in place sorting\nand insertion sort, which is also N square,\nand a few other things are in place sorting algorithms,\nwhich essentially say, look,",
    "start": "2413570",
    "end": "2421099"
  },
  {
    "text": "I need to sort all\nof you in some way, perhaps by age or something.",
    "start": "2421100",
    "end": "2428240"
  },
  {
    "text": "And I don't want\nanother room, right? I don't want to say,\nwho's the youngest here,",
    "start": "2428240",
    "end": "2433430"
  },
  {
    "text": "and then go over to\nthat room, and then who's the next youngest and go\nover to the room, et cetera. I just want you to start\nswapping positions here.",
    "start": "2433430",
    "end": "2440265"
  },
  {
    "text": "And we're all going\nto be in this room, and somehow we're\ngoing to get sorted. So that's in place. And when I have an array\nthat corresponds to integers,",
    "start": "2440265",
    "end": "2449030"
  },
  {
    "text": "I don't want another\nblank list or blank array and use that storage. And so that answers\nyour question",
    "start": "2449030",
    "end": "2455869"
  },
  {
    "text": "at the top level as to\nwhy quicksort is used. And it's used because the\nmemory requirements of quicksort",
    "start": "2455870",
    "end": "2461780"
  },
  {
    "text": "are substantially\nless than the memory requirements of mergesort. And in fact, you can\ndo this pivoting step",
    "start": "2461780",
    "end": "2469279"
  },
  {
    "start": "2465000",
    "end": "2557000"
  },
  {
    "text": "using one integer as storage.",
    "start": "2469280",
    "end": "2474375"
  },
  {
    "text": "You need the original\narray, of course, but you needed that to\nstore all of the numbers. And the auxiliary storage, the\nextra storage that you need,",
    "start": "2474375",
    "end": "2481849"
  },
  {
    "text": "is exactly the storage\nfor one integer where you store the pivot, OK? And I'm going to show\nyou the naive way, which",
    "start": "2481850",
    "end": "2488200"
  },
  {
    "text": "is the regular quicksort. And that is a trivial\npivot partition.",
    "start": "2488200",
    "end": "2494690"
  },
  {
    "text": "It's not the clever one,\nwhich essentially says, look, I'm going to\ngo ahead and I'm going to create a new array.",
    "start": "2494690",
    "end": "2501350"
  },
  {
    "text": "In fact, I have two arrays\nthat are less and more, or two lists. Together the sizes\nof less and more",
    "start": "2501350",
    "end": "2507829"
  },
  {
    "text": "are going to be the size of\nthe original, maybe minus 1. I'm adding to less\nand adding to more,",
    "start": "2507830",
    "end": "2514940"
  },
  {
    "text": "depending on whether the\nelement is less than the pivot or greater than the pivot. And then I'm good.",
    "start": "2514940",
    "end": "2520490"
  },
  {
    "text": "So there's that algorithm,\nwhich would just be, oh yeah, I'm going to create\na new list here.",
    "start": "2520490",
    "end": "2526010"
  },
  {
    "text": "And I'm going to compare a to g. And then I'm going to compare\nb to g, et cetera, et cetera.",
    "start": "2526010",
    "end": "2531740"
  },
  {
    "text": "So this does not\ngive you anything. This is an\nuninteresting algorithm. I'm sorry.",
    "start": "2531740",
    "end": "2537830"
  },
  {
    "text": "Implementation-- this is an\nuninteresting implementation, OK? It is much more--",
    "start": "2537830",
    "end": "2543410"
  },
  {
    "text": " you need to be\nmuch more clever--",
    "start": "2543410",
    "end": "2550620"
  },
  {
    "text": "I don't need this anymore-- to do this in place.",
    "start": "2550620",
    "end": "2556260"
  },
  {
    "text": "So what I want to do is I'm\ngoing to take an example here.",
    "start": "2556260",
    "end": "2565770"
  },
  {
    "start": "2557000",
    "end": "3421000"
  },
  {
    "text": "I want to take this array.",
    "start": "2565770",
    "end": "2573503"
  },
  {
    "start": "2573503",
    "end": "2580329"
  },
  {
    "text": "And I'm going to not\ntalk about the recursive sorting or anything like\nthat, because that's easy.",
    "start": "2580330",
    "end": "2585940"
  },
  {
    "text": "We kind of know how to do that. What I want to do is I want\nto choose this as the pivot.",
    "start": "2585940",
    "end": "2592460"
  },
  {
    "text": "And I want to\ntranslate that somehow into the final\npivoted output, which",
    "start": "2592460",
    "end": "2603800"
  },
  {
    "text": "is going to be 0,\nminus 31, 1, 2, 65, 99.",
    "start": "2603800",
    "end": "2617560"
  },
  {
    "text": " Oops, I have\nsomething wrong here.",
    "start": "2617560",
    "end": "2627165"
  },
  {
    "text": "So this should be\nthe other way around. 83, right? OK. Mm, bug. ",
    "start": "2627165",
    "end": "2638190"
  },
  {
    "text": "Oh, I'm sorry, I'm sorry. This is fine. This is fine. I just need it-- I don't need it to be sorted. OK, good.",
    "start": "2638190",
    "end": "2643530"
  },
  {
    "text": "Whew. All right. I just thought I found\nthe first bug in my book.",
    "start": "2643530",
    "end": "2650920"
  },
  {
    "text": "So there's probably\nmany bugs in the book, but I don't want to know.",
    "start": "2650920",
    "end": "2656000"
  },
  {
    "text": " So I don't need\nthis to be sorted.",
    "start": "2656000",
    "end": "2662569"
  },
  {
    "text": "Yeah, so there's\na 0, a minus 31. So the key is that\nI've discovered this.",
    "start": "2662570",
    "end": "2667680"
  },
  {
    "text": "And everything to the left\nof that is less than 1. And everything to the right\nof that is greater than 1.",
    "start": "2667680",
    "end": "2673109"
  },
  {
    "text": "And that's the only\nrequirement that I have. And as I said, I mean, I\nsaid this to begin with",
    "start": "2673110",
    "end": "2679020"
  },
  {
    "text": "and then I forgot, I\nsaid we're not going to worry about the recursion. So clearly, I have\nto do more work here",
    "start": "2679020",
    "end": "2685619"
  },
  {
    "text": "with respect to taking\nthis set of numbers and sorting them in\nascending order, et cetera.",
    "start": "2685620",
    "end": "2692640"
  },
  {
    "text": "But what I've done here is I\nknow that 1 is fixed in place, and 1 will never move.",
    "start": "2692640",
    "end": "2699690"
  },
  {
    "text": "And I just have to turn\nthis into minus 31 and 0. And I have to do\nsome reordering here.",
    "start": "2699690",
    "end": "2705090"
  },
  {
    "text": "But 1 is fixed in place. Now, the algorithm that\nI'm going to show you,",
    "start": "2705090",
    "end": "2710879"
  },
  {
    "text": "I'm going to show you the code. And it's probably\ncode that you won't",
    "start": "2710879",
    "end": "2716410"
  },
  {
    "text": "be able to parse, at least\nin minutes or seconds.",
    "start": "2716410",
    "end": "2724049"
  },
  {
    "text": "And this code is\nin place pivoting. It's clever code.",
    "start": "2724050",
    "end": "2731310"
  },
  {
    "text": "And what it does is it has\none additional variable",
    "start": "2731310",
    "end": "2737610"
  },
  {
    "text": "worth of storage that we're\ngoing to call the pivot.",
    "start": "2737610",
    "end": "2742800"
  },
  {
    "text": "So you see the\nvariable pivot there. And just using that one\nadditional integer storage,",
    "start": "2742800",
    "end": "2751859"
  },
  {
    "text": "it manages to transform this\narray using a linear number",
    "start": "2751860",
    "end": "2757590"
  },
  {
    "text": "of steps into this array. So you can see that\nthis is non-trivial.",
    "start": "2757590",
    "end": "2763380"
  },
  {
    "text": "And I need to move from\nhere to there without having this extra storage. If you had extra storage,\nit would be easy.",
    "start": "2763380",
    "end": "2769141"
  },
  {
    "text": "We know how to do that. But if you didn't,\nyou need this code that has an outer while loop.",
    "start": "2769141",
    "end": "2775019"
  },
  {
    "text": "You see while not done. And then it's got two\ninner while loops in it. And it's got a couple of\ncounters, couple of pointers",
    "start": "2775020",
    "end": "2781590"
  },
  {
    "text": "I should say, to indices. And you go left and right, and\nyou magically get this answer.",
    "start": "2781590",
    "end": "2789150"
  },
  {
    "text": "But there's no magic here,\nbecause we have the code up and we can run it. And computers aren't\nsmart, so clearly,",
    "start": "2789150",
    "end": "2797430"
  },
  {
    "text": "that code is doing\nsomething clever, and we just need to\nunderstand that, all right? So I'm going to-- in the couple of\nminutes I have left,",
    "start": "2797430",
    "end": "2803562"
  },
  {
    "text": "this is the last\nthing I want to do is I want to tell you\nhow this code works.",
    "start": "2803562",
    "end": "2808590"
  },
  {
    "text": "And it's really pretty code. And it's clever code. So what I have is I have two\npointers, top and bottom.",
    "start": "2808590",
    "end": "2819430"
  },
  {
    "text": "So I'm going to, essentially,\nsay that top is-- bottom is 0.",
    "start": "2819430",
    "end": "2825700"
  },
  {
    "text": "Initially, it's minus 1, but\nwe go ahead and increment it. And top is 8. And so how many--",
    "start": "2825700",
    "end": "2833130"
  },
  {
    "text": "I have 9-- 1, 2, 3,\n4, 5, 6, 7, 8, 9.",
    "start": "2833130",
    "end": "2840869"
  },
  {
    "text": "So top is pointing to the pivot. So this is pointing to\npivot, which top is 8.",
    "start": "2840870",
    "end": "2846990"
  },
  {
    "text": "And bottom is pointing\nto the first element. So these two while\nloops are essentially",
    "start": "2846990",
    "end": "2854250"
  },
  {
    "text": "going from the left of the\narray and going this way",
    "start": "2854250",
    "end": "2860160"
  },
  {
    "text": "from the right of the array. So what we're going to do--",
    "start": "2860160",
    "end": "2865800"
  },
  {
    "text": "and don't worry about exactly\nhow the code does this. I'm going to show you the\nway this array is transformed",
    "start": "2865800",
    "end": "2872130"
  },
  {
    "text": "and the way these\npointers are changed. And then you'll get a sense\nof how this code works.",
    "start": "2872130",
    "end": "2880200"
  },
  {
    "text": "And obviously,\nthis transformation happens in one of\nthose while loops. So we have the pivot\ncorresponding to 1.",
    "start": "2880200",
    "end": "2888270"
  },
  {
    "text": "And bottom equals\n0 and top equals 8. What I'm going to\ndo is I'm going to start moving leftward from--",
    "start": "2888270",
    "end": "2899609"
  },
  {
    "text": "this would be the\nsecond inner while loop. I'm going to start moving-- ",
    "start": "2899610",
    "end": "2909718"
  },
  {
    "text": "oh, I'm sorry. I'll start with bottom.",
    "start": "2909718",
    "end": "2915832"
  },
  {
    "text": "I'm going to increment--\nbottom is initially minus 1. I increment it to 0. And I start moving rightward\nfrom the left of the list",
    "start": "2915832",
    "end": "2927849"
  },
  {
    "text": "and try and find an element\nthat is greater than 1.",
    "start": "2927850",
    "end": "2933490"
  },
  {
    "text": "And that is immediate. I realize that 4 is\ngreater than 1, OK?",
    "start": "2933490",
    "end": "2939460"
  },
  {
    "text": "So when I realize that\n4 is greater than 1, I'm going to copy over 4.",
    "start": "2939460",
    "end": "2945670"
  },
  {
    "text": "And this is doesn't mean that\nI'm copying the entire array. I'm just going to copy over 4. But I'm writing what the array\nlooks like, because that's",
    "start": "2945670",
    "end": "2952960"
  },
  {
    "text": "important, over to here. And you might say--",
    "start": "2952960",
    "end": "2958860"
  },
  {
    "text": "pivot equals 1. You might say, oh, but I\noverwrote the location 1.",
    "start": "2958860",
    "end": "2963910"
  },
  {
    "text": "And I'm like, don't\nworry about it. I do have 1 stored in my pivot.",
    "start": "2963910",
    "end": "2970569"
  },
  {
    "text": "So my pivot has 1 in it. So I haven't lost anything here. It's not like I threw\naway any locations.",
    "start": "2970570",
    "end": "2977350"
  },
  {
    "text": "I do have that extra location. So I did this rightward\nmove going from the left.",
    "start": "2977350",
    "end": "2984100"
  },
  {
    "text": "Now I'm going to go\nleftward from the right.",
    "start": "2984100",
    "end": "2992890"
  },
  {
    "text": "And I'm going to look for\nsomething that is less than 1 and I'm going to\ntry and move it.",
    "start": "2992890",
    "end": "2998140"
  },
  {
    "text": "So basically, what\nthis algorithm does is it tries to find\nthings that are--",
    "start": "2998140",
    "end": "3004230"
  },
  {
    "text": "if a is greater than g, it\nmoves a to the rightmost part",
    "start": "3004230",
    "end": "3009349"
  },
  {
    "text": "of the array.  And the same thing,\nif d is less than g,",
    "start": "3009349",
    "end": "3014450"
  },
  {
    "text": "then it moves it to the\nleft part of the array. So depending on whether\nthe comparison to g",
    "start": "3014450",
    "end": "3021420"
  },
  {
    "text": "is greater or less,\nyou want to end up in the edges of the array. And you're going to try and\nget the edges of the array",
    "start": "3021420",
    "end": "3027480"
  },
  {
    "text": "to be correct in the sense\nthat they have elements on the left that are\nless than the pivot,",
    "start": "3027480",
    "end": "3033294"
  },
  {
    "text": "and the elements\non the right that are greater than the pivot. And you're trying to\nget to the middle.",
    "start": "3033294",
    "end": "3038850"
  },
  {
    "text": "And when your two\npointers converge, your top and bottom pointers\nconverge, you're done.",
    "start": "3038850",
    "end": "3045060"
  },
  {
    "text": "So let's do a couple more\nsteps and close this lecture. So I did the right step.",
    "start": "3045060",
    "end": "3053520"
  },
  {
    "text": "Now I'm going rightward. And now I'm going\nto go leftward. What is the first element\nthat is less than 1--",
    "start": "3053520",
    "end": "3061740"
  },
  {
    "text": " no, less, than 1.",
    "start": "3061740",
    "end": "3066960"
  },
  {
    "text": "0, right? Yes, but I'm going this way. AUDIENCE: oh!",
    "start": "3066960",
    "end": "3072990"
  },
  {
    "text": "SRINI DEVADAS: Yeah, I'm going-- I'm glad you pointed that out. I needed to make sure.",
    "start": "3072990",
    "end": "3079740"
  },
  {
    "text": "So I went rightward\nthe first time, and I want to go\nleftward this time.",
    "start": "3079740",
    "end": "3085130"
  },
  {
    "text": "So this would be-- so I\ncome here and I see 0. When I see 0, what\nI'm going to do",
    "start": "3085130",
    "end": "3091470"
  },
  {
    "text": "is I'm going to\ntransform the array. I'll write this out to\nmake sure I get this right.",
    "start": "3091470",
    "end": "3098060"
  },
  {
    "text": "And so right now I have 4,\n65 to minus 31, 0, et cetera.",
    "start": "3098060",
    "end": "3108180"
  },
  {
    "text": "And I'm going to go this\nway, and I'm going to put-- when I see the 0, I'm going\nto copy over 0 over here",
    "start": "3108180",
    "end": "3118290"
  },
  {
    "text": "and leave the 0 in\nhere for a second.",
    "start": "3118290",
    "end": "3124570"
  },
  {
    "text": "And there's no problem here,\nbecause 4 was copied over here.",
    "start": "3124570",
    "end": "3129590"
  },
  {
    "text": "And so now I overwrote 4 with 0. OK, now you kind of see,\nmaybe get some sense",
    "start": "3129590",
    "end": "3135444"
  },
  {
    "text": "of how this algorithm works. This is the first interesting\nstep where I took 0,",
    "start": "3135444",
    "end": "3141050"
  },
  {
    "text": "and because 0 is less\nthan 1, as I mentioned, I want to jam it all\nthe way to the left.",
    "start": "3141050",
    "end": "3146200"
  },
  {
    "text": "Just put it all the\nway to the left. And I'm cool with losing\n4, because 4 is being put",
    "start": "3146200",
    "end": "3151540"
  },
  {
    "text": "all the way to the right, OK? Now, at this point,\nmy bottom and top",
    "start": "3151540",
    "end": "3157690"
  },
  {
    "text": "are going to get modified. My bottom is still\n0, but the top is 4,",
    "start": "3157690",
    "end": "3165819"
  },
  {
    "text": "because I moved-- top was 8, and\nI decremented top all the way to the point where it became 4.",
    "start": "3165820",
    "end": "3171940"
  },
  {
    "text": "And I realized that\n0 was less than 1. And then I copied over that\nvalue over to the bottom.",
    "start": "3171940",
    "end": "3179540"
  },
  {
    "text": "You can kind of see\nthe code up there. This is actually an\noutput of that code.",
    "start": "3179540",
    "end": "3185350"
  },
  {
    "text": "And I put a 0 in here. So that's what my\ncounters look like. And it's only a\ncouple of more steps.",
    "start": "3185350",
    "end": "3191920"
  },
  {
    "text": "We're going to go now go right. And I'm going to go do this\nagain, except that 0 is already",
    "start": "3191920",
    "end": "3198130"
  },
  {
    "text": "taken care of, so now I see 65. Clearly I'm going to\nhave a situation where",
    "start": "3198130",
    "end": "3208270"
  },
  {
    "text": "if I go this way, 65 is\ngreater than the pivot, so I'm going to go\n0, 65, 2, minus 31.",
    "start": "3208270",
    "end": "3219670"
  },
  {
    "text": "And because 65 is\ngreater than the pivot, I'm going to write it into what\nthe top was, which obviously",
    "start": "3219670",
    "end": "3226580"
  },
  {
    "text": "got copied over that way. So I'm going to have 65 in\nhere, 99, 83, 782, and 4.",
    "start": "3226580",
    "end": "3234820"
  },
  {
    "text": "So now after this\nstep, bottom equals 1.",
    "start": "3234820",
    "end": "3240370"
  },
  {
    "text": "And the reason for that was\n65 was in the location on 1, and top equals 4.",
    "start": "3240370",
    "end": "3247730"
  },
  {
    "text": "And then the next\none, someone want to tell me what the\nnext one is going to be?",
    "start": "3247730",
    "end": "3253550"
  },
  {
    "text": "If I go leftward. I'm going to start\nfrom here, top was 4. So I was pointing at 65.",
    "start": "3253550",
    "end": "3260690"
  },
  {
    "text": "And I'm looking for something\nthat when I go this way,",
    "start": "3260690",
    "end": "3273050"
  },
  {
    "text": "I saw 65 greater than 1. Now I'm looking for something\nthat is less than 1.",
    "start": "3273050",
    "end": "3278690"
  },
  {
    "text": "And minus 31 is less\nthan 1, correct? When I go this way, I'm looking\nfor something that's less than.",
    "start": "3278690",
    "end": "3283880"
  },
  {
    "text": "So given that it's minus 31,\nI'm going to copy over minus 31 to what top was pointing to.",
    "start": "3283880",
    "end": "3290630"
  },
  {
    "text": "So I have minus 31, 2, minus\n31, 65, 99, 28, 782, and 4.",
    "start": "3290630",
    "end": "3300890"
  },
  {
    "text": "And at this point, I'm\ngoing to have bottom equals 1 and top equals 3.",
    "start": "3300890",
    "end": "3308750"
  },
  {
    "text": "Keep going one more, and I get\nto the point where I see 2.",
    "start": "3308750",
    "end": "3316420"
  },
  {
    "text": "2 is greater than 1. 0 and minus 31 are less than 1. And so I take 2 and\nI copy it over here.",
    "start": "3316420",
    "end": "3323770"
  },
  {
    "start": "3323770",
    "end": "3331220"
  },
  {
    "text": "And now at this point,\nwhen I do an increment, I realize that bottom\nis 2 and top is 3.",
    "start": "3331220",
    "end": "3341819"
  },
  {
    "text": "And in the very next step,\nbottom will equal top. And I'm sitting up\nhere, and so I copy--",
    "start": "3341820",
    "end": "3348359"
  },
  {
    "text": "I make two-- I'd write the pivot\ninto the location that",
    "start": "3348360",
    "end": "3353400"
  },
  {
    "text": "corresponds to the bottom\nafter top got decremented.",
    "start": "3353400",
    "end": "3358950"
  },
  {
    "text": "And in that case, both\nbottom and top are 2. And that index, 0, 1, and 2,\nthe pivot gets written into it.",
    "start": "3358950",
    "end": "3366090"
  },
  {
    "text": "And so that's\nexactly what I had, which I wrote right\nat the beginning. So I would say this is probably\nthe most complicated code",
    "start": "3366090",
    "end": "3376859"
  },
  {
    "text": "from a control flow standpoint\nthat I've ever shown you. This algorithm is an in\nplace algorithm that does not",
    "start": "3376860",
    "end": "3384510"
  },
  {
    "text": "require any extra storage. And that's exactly\nwhy it's so popular. People are sorting billions\nof elements in lists,",
    "start": "3384510",
    "end": "3393420"
  },
  {
    "text": "and you can't use\ngigabytes of storage during the sorting process. And what this clever\nstrategy tells you is you",
    "start": "3393420",
    "end": "3401339"
  },
  {
    "text": "don't need all of that storage. You can do things in place. And as long as you choose\nthe pivot reasonably well,",
    "start": "3401340",
    "end": "3406710"
  },
  {
    "text": "you get your average\ncase N log N complexity, which is the same as the worst\ncase complexity of mergesort.",
    "start": "3406710",
    "end": "3412620"
  },
  {
    "text": "So you've got to be a little\nbit careful with that. ",
    "start": "3412620",
    "end": "3421389"
  }
]