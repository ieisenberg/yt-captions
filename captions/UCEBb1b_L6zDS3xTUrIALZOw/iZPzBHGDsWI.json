[
  {
    "start": "0",
    "end": "122000"
  },
  {
    "text": "[SQEAKING] [RUSTLING]  [CLICKING]",
    "start": "0",
    "end": "5444"
  },
  {
    "start": "5445",
    "end": "25270"
  },
  {
    "text": "MICHAEL SIPSER:\nWelcome, everyone, back to theory of computation.",
    "start": "25270",
    "end": "31150"
  },
  {
    "text": "So we are now at\nlecture number 15. And this is an\nimportant lecture.",
    "start": "31150",
    "end": "40282"
  },
  {
    "text": "Well, all of our\nlectures are important, but this is going to introduce\none of the major topics",
    "start": "40283",
    "end": "49420"
  },
  {
    "text": "that we're going to see\ngoing on in various forms through the rest of\nthe semester, which",
    "start": "49420",
    "end": "55329"
  },
  {
    "text": "is the notion of a\ncomplete problem. In this case, it's going to\nbe an NP complete problem. And I think some of you have\nprobably heard of that concept",
    "start": "55330",
    "end": "64040"
  },
  {
    "text": "already. Maybe you've seen it in\nsome courses or other, but we're going to do that in\na rather careful and formal way",
    "start": "64040",
    "end": "71080"
  },
  {
    "text": "over the next\ncouple of lectures. So we are following up on\nour previous discussions",
    "start": "71080",
    "end": "78790"
  },
  {
    "text": "about complexity,\ntime complexity. We defined the time and not\ndeterministic time complexity",
    "start": "78790",
    "end": "86470"
  },
  {
    "text": "classes, as you may\nremember, the classes P and NP, talked about\nthe P versus NP problem,",
    "start": "86470",
    "end": "95430"
  },
  {
    "text": "looked at some\ninteresting algorithms for showing problems in P\ncalled dynamic programming.",
    "start": "95430",
    "end": "100470"
  },
  {
    "text": "And we started to move\ntoward our discussion of NP completeness with the\nintroduction of polynomial time",
    "start": "100470",
    "end": "106860"
  },
  {
    "text": "reducibility, which is\nrelated to some of the earlier reducibility notions\nthat we discussed",
    "start": "106860",
    "end": "113197"
  },
  {
    "text": "in the computability section. ",
    "start": "113197",
    "end": "124710"
  },
  {
    "start": "122000",
    "end": "415000"
  },
  {
    "text": "Quick review-- what it means\nfor one problem to be polynomial",
    "start": "124710",
    "end": "132069"
  },
  {
    "text": "time reducible to another-- this follows our pattern\nof reducibility concepts,",
    "start": "132070",
    "end": "139150"
  },
  {
    "text": "where if a problem is\nreducible to another problem,",
    "start": "139150",
    "end": "144459"
  },
  {
    "text": "and that other\nproblem is solvable, then the first\nproblem is solvable. So if a problem is reducible\nto an easy problem,",
    "start": "144460",
    "end": "150459"
  },
  {
    "text": "that problem\nbecomes [INAUDIBLE].. And the kind of\nreduction that we're",
    "start": "150460",
    "end": "155590"
  },
  {
    "text": "going to be looking at here\nare the mapping reductions, but now where the reductions are\ncomputable in polynomial time.",
    "start": "155590",
    "end": "162500"
  },
  {
    "text": "And so we had this\nresult we mentioned last time, that, if A is\npolynomial time reducible to B,",
    "start": "162500",
    "end": "169030"
  },
  {
    "text": "and B is in P, then\nA is also in P. So that's going to be critically\nimportant for the whole",
    "start": "169030",
    "end": "180580"
  },
  {
    "text": "of discussion that's coming.  Our intuition about P and\nNP, repeating that here--",
    "start": "180580",
    "end": "189400"
  },
  {
    "text": "the NP problems are the ones\nwhere you can verify membership easily, as opposed to being\nable to test membership easily.",
    "start": "189400",
    "end": "200530"
  },
  {
    "text": "Those are the problems\nthat are in P. The verification\ntypically requires some kind of a certificate\nthat establishes",
    "start": "200530",
    "end": "210250"
  },
  {
    "text": "a proof that the input is\na member of that language. ",
    "start": "210250",
    "end": "217459"
  },
  {
    "text": "And the big question\nof the field, which remains an\nunsolved problem,",
    "start": "217460",
    "end": "222800"
  },
  {
    "text": "is whether P equals NP. It's called the P\nversus NP question. And we don't know the answer--",
    "start": "222800",
    "end": "228270"
  },
  {
    "text": "so whether there are problems\nthat are in NP solvable",
    "start": "228270",
    "end": "233300"
  },
  {
    "text": "in non-deterministic\npolynomial time-- typically these are problems\nthat involve searching-- whether they can be\nsolved in polynomial time,",
    "start": "233300",
    "end": "240260"
  },
  {
    "text": "typically without the searching. And if P were equal\nto NP, then you",
    "start": "240260",
    "end": "246775"
  },
  {
    "text": "could always\neliminate searching. And if P were different\nfrom NP, then there were cases where\nyou need to search.",
    "start": "246775",
    "end": "252260"
  },
  {
    "text": "And we don't know\nthe answer to that. So in the direction of\nexploring this question",
    "start": "252260",
    "end": "262360"
  },
  {
    "text": "and its ramifications,\nwe introduced this problem called SAT. These are the Boolean formulas,\nwhich have an assignment that",
    "start": "262360",
    "end": "274120"
  },
  {
    "text": "makes them evaluate to true. So we call those\nsatisfiable formulas.",
    "start": "274120",
    "end": "280090"
  },
  {
    "text": "And we mentioned, but\nhave not yet proven--",
    "start": "280090",
    "end": "285760"
  },
  {
    "text": "and we will not prove until\nthe next lecture on Tuesday-- that there is this theorem,\na very remarkable theorem",
    "start": "285760",
    "end": "293560"
  },
  {
    "text": "that says that, if you have-- take the satisfiability problem,\nand if it is solvable quickly,",
    "start": "293560",
    "end": "300610"
  },
  {
    "text": "then all of the NP problems\nare solvable quickly. So if SAT is in P,\nthen P equals NP.",
    "start": "300610",
    "end": "306669"
  },
  {
    "text": "So in a sense, SAT\nis kind of no the-- ",
    "start": "306670",
    "end": "313900"
  },
  {
    "text": "it's sort of the\nsuper NP problem, in the sense that all of the\ndifficulty of any NP problem",
    "start": "313900",
    "end": "322060"
  },
  {
    "text": "is embedded within SAT. So if SAT becomes easy, then\nall of the other NP problems",
    "start": "322060",
    "end": "327610"
  },
  {
    "text": "become easy. And we'll eventually\nprove that, but right now we're setting up the terminology\nto allow us to do that.",
    "start": "327610",
    "end": "338449"
  },
  {
    "text": "So anyway, we'll get there. So the key ingredient for\nproving this Cook-Levin theorem",
    "start": "338450",
    "end": "348340"
  },
  {
    "text": "is polynomial time reducibility. What we're going to show\nis that every problem in NP",
    "start": "348340",
    "end": "355150"
  },
  {
    "text": "can be polynomial\ntime reduced to SAT. So every NP problem can be\nconverted into a SAT problem.",
    "start": "355150",
    "end": "363669"
  },
  {
    "text": "And so working toward\nthat-- because when you think about it, there are\ninfinitely many primes in NP,",
    "start": "363670",
    "end": "369960"
  },
  {
    "text": "and being able to show that all\nof them are reducible to SAT",
    "start": "369960",
    "end": "376259"
  },
  {
    "text": "is, in a sense, kind of-- you\nhave to prove a higher level theorem. It's not just a\nsingle reduction.",
    "start": "376260",
    "end": "382050"
  },
  {
    "text": "We're exhibiting a\nschema of reductions, which shows that all of these\nproblems can be reduced to SAT.",
    "start": "382050",
    "end": "388440"
  },
  {
    "text": "And developing our intuition\ntoward that direction,",
    "start": "388440",
    "end": "395910"
  },
  {
    "text": "we're going to look at some\nspecific polynomial time reductions today.",
    "start": "395910",
    "end": "401590"
  },
  {
    "text": "And we'll start out with a\nreduction between two problems",
    "start": "401590",
    "end": "407070"
  },
  {
    "text": "we have not yet seen-- one of them called 3SAT and\nthe other one called clique. So on this slide, we're going\nto introduce those two problems.",
    "start": "407070",
    "end": "416100"
  },
  {
    "start": "415000",
    "end": "541000"
  },
  {
    "text": "So remembering, again,\nabout Boolean formulas, we're going to consider\na special class",
    "start": "416100",
    "end": "424630"
  },
  {
    "text": "of Boolean formulas, restricted\nform of Boolean form formulas called conjunctive normal form.",
    "start": "424630",
    "end": "431680"
  },
  {
    "text": "And so this formula\nhere in particular is in that conjunctive\nnormal form.",
    "start": "431680",
    "end": "437620"
  },
  {
    "text": "So just remember-- I was explaining some\nof this to someone else",
    "start": "437620",
    "end": "444600"
  },
  {
    "text": "earlier this morning,\nshowing some of these slides, and it was pointed out\nthat not all of you may be familiar with these\nthe Boolean operations of",
    "start": "444600",
    "end": "453599"
  },
  {
    "text": "and and or. So this is the or symbol here. This is the and symbol here.",
    "start": "453600",
    "end": "459120"
  },
  {
    "text": " Hopefully you've seen just the\nconcept of Booelan and and or.",
    "start": "459120",
    "end": "466220"
  },
  {
    "text": "Or is, in a sense, a\nlittle bit like a union. And it's like an intersection. And the symbols here are a\nlittle bit similar to the union",
    "start": "466220",
    "end": "474889"
  },
  {
    "text": "and the intersection-- union and intersection\nsymbols themselves.",
    "start": "474890",
    "end": "480320"
  },
  {
    "text": "The V shape is a little bit\nlike a pointy union symbol an the upside down V\nshape is a little like",
    "start": "480320",
    "end": "487880"
  },
  {
    "text": "a pointy intersection symbol. If you haven't seen those-- seen that connection\nbefore, maybe it's",
    "start": "487880",
    "end": "493759"
  },
  {
    "text": "interesting to observe that. But anyway, what\nmakes this formula",
    "start": "493760",
    "end": "501199"
  },
  {
    "text": "be in conjunctive normal form? Well, conjunctive\nnormal formulas",
    "start": "501200",
    "end": "507830"
  },
  {
    "text": "are organized in a certain way. They have these\ngroups called clauses",
    "start": "507830",
    "end": "514490"
  },
  {
    "text": "within the parentheses\nthat are anded together, that are connected by\nthese and operations.",
    "start": "514490",
    "end": "522349"
  },
  {
    "text": "And within those groups,\nwhich are called clauses, the elements are ORed together.",
    "start": "522350",
    "end": "533160"
  },
  {
    "text": "Those elements are going\nto be either variables or variables with negation,\nnegated variables.",
    "start": "533160",
    "end": "542020"
  },
  {
    "start": "541000",
    "end": "638000"
  },
  {
    "text": "So just to repeat that, these-- well, just to state, those\nvariables or negated variables",
    "start": "542020",
    "end": "550440"
  },
  {
    "text": "are going to be called\nliterals, and the ORs",
    "start": "550440",
    "end": "556710"
  },
  {
    "text": "of a bunch of literals are\ngoing to be called clauses. This is just the standard\nterminology in the field.",
    "start": "556710",
    "end": "563630"
  },
  {
    "text": "OK? So a literal is a variable\nor a negated variable",
    "start": "563630",
    "end": "570260"
  },
  {
    "text": "and a clause is an\nor of literals-- just a definition.",
    "start": "570260",
    "end": "576633"
  },
  {
    "text": "All right, so we have a\nbunch of these clauses here. Each of the clauses has\nan or of literals in it.",
    "start": "576633",
    "end": "583510"
  },
  {
    "text": "Now, a Chomsky-- Chomsky-- conjunctive\nnormal form formula--",
    "start": "583510",
    "end": "590580"
  },
  {
    "text": "I guess they're both CNFs-- but conjunctive\nnormal form formula is one that's written as\nan and of these clauses.",
    "start": "590580",
    "end": "600630"
  },
  {
    "text": "So we take these clauses,\nwhich themselves are ORs-- we and them together,\nwe get a formula",
    "start": "600630",
    "end": "606120"
  },
  {
    "text": "that's conjunctive normal form. Conjunctive stands\nfor and, I think. Conjunction is an and.",
    "start": "606120",
    "end": "611310"
  },
  {
    "text": " And then a 3CNF is a CNF where\neach clause has exactly three",
    "start": "611310",
    "end": "621140"
  },
  {
    "text": "literals. So for example, this\nparticular formula is a CNF,",
    "start": "621140",
    "end": "627589"
  },
  {
    "text": "but it's not a 3CNF, because it\nhas at least two clauses which violate the condition of\nthree literals per clause.",
    "start": "627590",
    "end": "634820"
  },
  {
    "text": "This one is OK, obviously-- this first clause. And a 3SAT problem--",
    "start": "634820",
    "end": "641993"
  },
  {
    "text": "so this is the first\nof the two problems we're going to be\ntalking about-- the 3SAT problem is the\nsatisfiability problem",
    "start": "641993",
    "end": "650860"
  },
  {
    "text": "restricted to these\n3CNF formulas. So this is the collection of--",
    "start": "650860",
    "end": "657140"
  },
  {
    "text": "set of 3CNF formulas\nwhich are satisfiable. So you can think of it as kind\nof a special case of the SAT",
    "start": "657140",
    "end": "665170"
  },
  {
    "text": "problem, where we only\ncare about formulas of the special kind. ",
    "start": "665170",
    "end": "671649"
  },
  {
    "text": "This being a special\ncase, you might imagine that this might be\nan easier problem to solve, but in general, it turns out\nnot to be, as we will see.",
    "start": "671650",
    "end": "680079"
  },
  {
    "text": "Solving this special\ncase is just as hard as hard as solving the general\ncase for satisfiability.",
    "start": "680080",
    "end": "685720"
  },
  {
    "text": " Now let's turn to the second\nof these two languages",
    "start": "685720",
    "end": "692220"
  },
  {
    "text": "up in the headline,\nthe clique problem.",
    "start": "692220",
    "end": "697449"
  },
  {
    "text": "So for that we-- going to turn to graph theory. So we're going to\nconsider graphs, points",
    "start": "697450",
    "end": "705480"
  },
  {
    "text": "and lines-- connecting them. And we will say that\na clique in a graph",
    "start": "705480",
    "end": "712230"
  },
  {
    "text": "is a collection of nodes-- collection of the points\nthat are all pairwise connected by lines.",
    "start": "712230",
    "end": "718500"
  },
  {
    "text": "And a k-clique is one where\nyou have k such nodes. So here we have a three clique,\nfour clique, and a five clique.",
    "start": "718500",
    "end": "728300"
  },
  {
    "text": "And then the clique\nproblem is to try to find cliques of a certain\nspecified size embedded",
    "start": "728300",
    "end": "736610"
  },
  {
    "text": "within a given graph. ",
    "start": "736610",
    "end": "741670"
  },
  {
    "text": "You're going to\nbe given a graph, and it targets clique sized\nk, and you want to know,",
    "start": "741670",
    "end": "746860"
  },
  {
    "text": "is there a subset of the\nnodes in the graph of size k",
    "start": "746860",
    "end": "752050"
  },
  {
    "text": "that are all connected\nto one another? That's the clique problem.",
    "start": "752050",
    "end": "757740"
  },
  {
    "text": "So obviously, the clique\nproblem, just as with the satisfiability problem,\nis a decidable problem.",
    "start": "757740",
    "end": "765380"
  },
  {
    "text": "You can just try every\npossible subset of k nodes and see whether it\nconstitutes a clique.",
    "start": "765380",
    "end": "772640"
  },
  {
    "text": "But that's, in general, going\nto be an exponential algorithm. If you have-- k\nis a large value--",
    "start": "772640",
    "end": "780080"
  },
  {
    "text": "it might be half the size of\nthe graph-- you might be looking for a very large clique. Then you have to try many,\nmany subsets in order",
    "start": "780080",
    "end": "786920"
  },
  {
    "text": "to see whether any one\nof them is a clique. It's also going to be and-- I hope you get this intuition--\nthis is a problem that's in NP.",
    "start": "786920",
    "end": "795260"
  },
  {
    "text": "The clique problem\nis an NP problem, because you can easily verify\nthat a graph has a k-clique",
    "start": "795260",
    "end": "803870"
  },
  {
    "text": "just by exhibiting the clique. OK. Now, so the language here is\nyou've given a graph and a k,",
    "start": "803870",
    "end": "815380"
  },
  {
    "text": "and you want to know, does\nthe graph contain a k-clique? And what we're going to show\nis that these two problems",
    "start": "815380",
    "end": "821080"
  },
  {
    "text": "are connected, that the 3SAT\nproblem on the clique problem are related, in that you can\nreduce in polynomial time 3SAT",
    "start": "821080",
    "end": "829959"
  },
  {
    "text": "to clique. ",
    "start": "829960",
    "end": "837140"
  },
  {
    "text": "Just standing back at it-- back for a minute, it\nseems kind of surprising.",
    "start": "837140",
    "end": "843290"
  },
  {
    "text": "There's no real reason--  no obvious reason\nwhy there should",
    "start": "843290",
    "end": "849850"
  },
  {
    "text": "be a connection between\nthree 3SAT and clique. They look very different\nfrom one another. But we do give that--",
    "start": "849850",
    "end": "855760"
  },
  {
    "text": "we will give that reduction. That implies that,\nif you can find",
    "start": "855760",
    "end": "862240"
  },
  {
    "text": "a way of solving the\nclique problem quickly, that'll give you a way\nof solving the 3SAT problem quickly.",
    "start": "862240",
    "end": "868240"
  },
  {
    "text": "And that's going to be\nthe whole point of this. So we're going to show\nthis over the next slide",
    "start": "868240",
    "end": "874390"
  },
  {
    "text": "or two, this polynomial\ntime reduction. I'm going to walk\nthrough it slowly,",
    "start": "874390",
    "end": "880810"
  },
  {
    "text": "but this is one where it's\nreally important to try to get a sense of\nhow it's working,",
    "start": "880810",
    "end": "888580"
  },
  {
    "text": "because this is\nthe kind of thing that we're going to\nbe doing a lot of, and you're going to be asked\nto do it also on the homework",
    "start": "888580",
    "end": "893727"
  },
  {
    "text": "and possibly on the final exam. I hate to use that as the\nmotivating force here, but at least it might be one\nmotivation for some of you,",
    "start": "893727",
    "end": "900880"
  },
  {
    "text": "that you have to understand how\nto do this kind of a reduction. ",
    "start": "900880",
    "end": "907825"
  },
  {
    "text": "I think, at a high\nlevel, what's going on is we're showing how to\nrecode a Boolean formula",
    "start": "907825",
    "end": "915160"
  },
  {
    "text": "satisfiability problem\ninto the problem of testing whether a graph has a clique. ",
    "start": "915160",
    "end": "923280"
  },
  {
    "text": "Oh, let's see if we\nhave any questions here that are coming up in the chat. ",
    "start": "923280",
    "end": "936740"
  },
  {
    "text": "OK, so this is an\ninteresting question here. Can we always convert\na Boolean formula",
    "start": "936740",
    "end": "946500"
  },
  {
    "text": "into conjunctive normal\nform, first of all? Yes. The answer is you can always\nconvert a Boolean formula",
    "start": "946500",
    "end": "954360"
  },
  {
    "text": "into an equivalent one in CNF. But in general, that\nmight make the formula",
    "start": "954360",
    "end": "962910"
  },
  {
    "text": "exponentially larger. So just the mere fact that\nyou can convert formulas",
    "start": "962910",
    "end": "970180"
  },
  {
    "text": "into conjunctive\nnormal form doesn't mean that solving\nconjunctive normal form",
    "start": "970180",
    "end": "981090"
  },
  {
    "text": "formulas for testing\nsatisfiability of the CNF formulas is going to be as hard\nas testing the general case,",
    "start": "981090",
    "end": "988769"
  },
  {
    "text": "because just the conversion\nmight be exponential. There's something more--\nlittle bit more complicated",
    "start": "988770",
    "end": "996240"
  },
  {
    "text": "going on than that. ",
    "start": "996240",
    "end": "1005020"
  },
  {
    "text": "Let me just see here. ",
    "start": "1005020",
    "end": "1010360"
  },
  {
    "text": "If phi is a satisfiable with\nformula which is not in CNF, can be--",
    "start": "1010360",
    "end": "1016300"
  },
  {
    "text": "so a similar question-- so\nthe questions that I'm getting are about converting\nformulas to CNF.",
    "start": "1016300",
    "end": "1025780"
  },
  {
    "text": "So yeah, you can do it, but not\nin polynomial time, in general, because the resulting formula\nyou get might be much larger--",
    "start": "1025780",
    "end": "1032859"
  },
  {
    "start": "1032859",
    "end": "1038230"
  },
  {
    "text": "if you're looking for\nan equivalent formula. If you're not looking for an\nequivalent formula, then--",
    "start": "1038230",
    "end": "1043900"
  },
  {
    "text": "of course, then, depending\nupon what you're looking for, you might be able to\nfind something smaller. ",
    "start": "1043900",
    "end": "1054690"
  },
  {
    "text": "This is, I guess, a\ngood basic question. Why is clique in NP?",
    "start": "1054690",
    "end": "1061380"
  },
  {
    "text": "Doesn't verifying\nthat you have a clique require going through\nall the possible cliques? ",
    "start": "1061380",
    "end": "1068610"
  },
  {
    "text": "You have to understand\nwhat verifying means. Verifying means you\ncan verify something",
    "start": "1068610",
    "end": "1073830"
  },
  {
    "text": "if you're given a certificate. In the case of a clique-- the clique problem-- the\ncertificate is the clique.",
    "start": "1073830",
    "end": "1083289"
  },
  {
    "text": "So once you have\nthe certificate, you can do the verification\nin polynomial time. Finding the certificate, of\ncourse, might be difficult.",
    "start": "1083290",
    "end": "1091500"
  },
  {
    "text": "So you only think\nof NP in the context of having that certificate. So in a case for\ncompositeness, the certificate",
    "start": "1091500",
    "end": "1098247"
  },
  {
    "text": "might be the factor. ",
    "start": "1098247",
    "end": "1105010"
  },
  {
    "text": "There are problems sometimes\nwhere what the certificate is is not necessarily obvious.",
    "start": "1105010",
    "end": "1111190"
  },
  {
    "text": "But there can be a certificate\nfor showing that the input is",
    "start": "1111190",
    "end": "1117629"
  },
  {
    "text": "in the language. In the ones that\nwe've done so far, maybe you can argue\nthat the certificate is sort of an obvious thing,\nbut it's not always",
    "start": "1117630",
    "end": "1124260"
  },
  {
    "text": "an obvious thing. OK. Why don't we move on then?",
    "start": "1124260",
    "end": "1130929"
  },
  {
    "text": "So let's see, how do we do\nthis polynomial time reduction from 3SAT to clique?",
    "start": "1130930",
    "end": "1137310"
  },
  {
    "start": "1136000",
    "end": "1383000"
  },
  {
    "text": "OK, here we go. ",
    "start": "1137310",
    "end": "1143157"
  },
  {
    "text": "So I'm just going\nto give a reduction. That's what the\ndefinition means. I'm going to give a way\nof converting formulas",
    "start": "1143157",
    "end": "1150500"
  },
  {
    "text": "to pairs, a G and a k,\nwhere the formula's going",
    "start": "1150500",
    "end": "1156110"
  },
  {
    "text": "to be satisfiability if and only\nif the graph has a k-clique. ",
    "start": "1156110",
    "end": "1162610"
  },
  {
    "text": "OK, so let's a little\nbit do it by example. And in order to do that--",
    "start": "1162610",
    "end": "1169610"
  },
  {
    "text": "so here's going to\nbe a formula now. It's in 3CNF. That's what I need in order\nto be doing this reduction.",
    "start": "1169610",
    "end": "1175600"
  },
  {
    "text": "I'm converting 3CNF formulas\ninto clique problems. ",
    "start": "1175600",
    "end": "1182570"
  },
  {
    "text": "We to have a little\nbit understand what it means when we say--",
    "start": "1182570",
    "end": "1188110"
  },
  {
    "text": "we talk about the satisfiability\nof a formula like this, because it's going to be\nhelpful in doing the reduction.",
    "start": "1188110",
    "end": "1194049"
  },
  {
    "text": "Obviously, satisfiability\nmeans that the-- you can find an assignment\nto the variables. So you're going to set\neach of these variables--",
    "start": "1194050",
    "end": "1200380"
  },
  {
    "text": "A, B, and C, and so\non-- to true or false, and you want to make the whole\nformula evaluate the true.",
    "start": "1200380",
    "end": "1206139"
  },
  {
    "text": "But what does that\nactually mean?  It means that, because of the\nstructure of the formula, that",
    "start": "1206140",
    "end": "1214180"
  },
  {
    "text": "making this formula true\ncorresponds to making each clause true--",
    "start": "1214180",
    "end": "1219340"
  },
  {
    "text": " because the clauses\nare all anded together,",
    "start": "1219340",
    "end": "1226340"
  },
  {
    "text": "so the only way for\nthe formula to be true is to make each clause true. And to make a clause true,\nyou have to make at least one",
    "start": "1226340",
    "end": "1234170"
  },
  {
    "text": "of the literals true. So it's another way of thinking\nabout satisfying this formula.",
    "start": "1234170",
    "end": "1243820"
  },
  {
    "text": "Satisfying these [INAUDIBLE]\nsatisfying assignment makes at least one true\nliteral in every clause.",
    "start": "1243820",
    "end": "1251380"
  },
  {
    "text": "It's really important to\nthink about it that way,",
    "start": "1251380",
    "end": "1256730"
  },
  {
    "text": "because that's\nwhat's going to be the basis for doing\nthis reduction",
    "start": "1256730",
    "end": "1263807"
  },
  {
    "text": "and all of the reductions. It's what makes 3SAT\neasy to think about, in terms of its satisfiability.",
    "start": "1263807",
    "end": "1270140"
  },
  {
    "text": "If you had a general\nsatisfiability problem and you had a\nsatisfiability both formula,",
    "start": "1270140",
    "end": "1275610"
  },
  {
    "text": "there's no obvious way of seeing\nwhat the satisfying assignment looks like, but here we\nunderstand what it looks like.",
    "start": "1275610",
    "end": "1281690"
  },
  {
    "text": "It has that very special\nform, making one true literal in every clause-- at least one\ntrue literal in every clause.",
    "start": "1281690",
    "end": "1290179"
  },
  {
    "text": "So now we're going\nto do the reduction. So I'm going to take\nfrom this formula-- ",
    "start": "1290180",
    "end": "1298070"
  },
  {
    "text": "I know, for some of you,\nyou're going to be chafing. Why am I going slowly? But I want to make\nsure that we're",
    "start": "1298070",
    "end": "1304407"
  },
  {
    "text": "all together and understanding\nwhat the rules of the game are and what we're trying to do. ",
    "start": "1304407",
    "end": "1312000"
  },
  {
    "text": "We're trying to\nconvert this formula into a graph and a number.",
    "start": "1312000",
    "end": "1318170"
  },
  {
    "text": "So right now my job is,\nto do this reduction, is to exhibit that graph.",
    "start": "1318170",
    "end": "1325160"
  },
  {
    "text": "So I'm going to do\nthat and two steps. First, I'm going to tell you\nwhat the nodes of the graph are. Then I'll tell you what the\nedges of that graph [AUDIO OUT]",
    "start": "1325160",
    "end": "1333980"
  },
  {
    "text": "Finally, I'll tell you\nwhat the number k is. That's the way this\npolynomial time",
    "start": "1333980",
    "end": "1340230"
  },
  {
    "text": "reduction is going to work. And we have to also observe at\nthe very end that the reduction",
    "start": "1340230",
    "end": "1347390"
  },
  {
    "text": "that I'm given-- giving you, this procedure\nfor building this graph can be done in polynomial\ntime, but that, I",
    "start": "1347390",
    "end": "1354050"
  },
  {
    "text": "think-- you'll\nsee, once I'm done, that that's pretty obvious. OK, so first, as I\npromised, the nodes--",
    "start": "1354050",
    "end": "1361880"
  },
  {
    "text": "so the nodes of\nthis graph are going to correspond to the\nliterals of the formula.",
    "start": "1361880",
    "end": "1367790"
  },
  {
    "text": "Every literal is going to\nbecome a node in the graph, and it's going to be labeled\nwith the name of that literal.",
    "start": "1367790",
    "end": "1376460"
  },
  {
    "text": "Every node is going\nto be labeled an a, a b, or c bar, and so on. So here it goes.",
    "start": "1376460",
    "end": "1382160"
  },
  {
    "text": " So those are the\nnodes of the graph",
    "start": "1382160",
    "end": "1388370"
  },
  {
    "start": "1383000",
    "end": "1706000"
  },
  {
    "text": "G, one for each literal in the\nformula, labeled as promised.",
    "start": "1388370",
    "end": "1396770"
  },
  {
    "text": "Now I have to tell you\nwhat the edges look like. ",
    "start": "1396770",
    "end": "1403400"
  },
  {
    "text": "I'm going to tell you what the\nedges are by first telling you what they are not. I'm going to first\nexplain to you",
    "start": "1403400",
    "end": "1409640"
  },
  {
    "text": "what the forbidden\nedges are, what edges I'm going to\npromise not to include.",
    "start": "1409640",
    "end": "1416480"
  },
  {
    "text": "And then the ones\nthat I will include are going to be all the others. So what are going to\nbe the forbidden edges?",
    "start": "1416480",
    "end": "1423700"
  },
  {
    "text": "First of all, the\nforbidden edges are going to be of two types.",
    "start": "1423700",
    "end": "1430010"
  },
  {
    "text": "One is the edges between\nnodes that come from literals",
    "start": "1430010",
    "end": "1435820"
  },
  {
    "text": "in the same clause. So I would just call that\nno edges within a clause.",
    "start": "1435820",
    "end": "1442060"
  },
  {
    "text": "So for example,\nthese three nodes will not be connected\nto one another. And I'm going to\nindicate that by writing",
    "start": "1442060",
    "end": "1448330"
  },
  {
    "text": "red dashed lines, which means\nthere's not an edge there.",
    "start": "1448330",
    "end": "1454029"
  },
  {
    "text": "Those are forbidden\nfrom having an edge. So these three have no\nedge, and the same thing",
    "start": "1454030",
    "end": "1459870"
  },
  {
    "text": "for every other triple of three\nnodes that come from clauses.",
    "start": "1459870",
    "end": "1466780"
  },
  {
    "text": "Those are no edges there. And there's one other category\nof edge that I'm forbidding,",
    "start": "1466780",
    "end": "1473559"
  },
  {
    "text": "and that are edges that can-- that go between inconsistent\nlabels, and the nodes",
    "start": "1473560",
    "end": "1480400"
  },
  {
    "text": "with inconsistent labels. So for example,\nbetween a and a bar-- those are inconsistent.",
    "start": "1480400",
    "end": "1487570"
  },
  {
    "text": "Nothing's wrong\nwith a going a to d. Those are not inconsistent. Those are just different labels. Or going from a\nto a-- that's OK.",
    "start": "1487570",
    "end": "1494590"
  },
  {
    "text": "But from a to a bar--\nthat's not allowed. So that's going to be\nanother forbidden edge--",
    "start": "1494590",
    "end": "1501190"
  },
  {
    "text": "or for example, a to a bar here,\na bar to a, or for example,",
    "start": "1501190",
    "end": "1506419"
  },
  {
    "text": "from this c bar to c-- forbidden. OK? So you imagine, you're\ngoing to write down",
    "start": "1506420",
    "end": "1512380"
  },
  {
    "text": "all of those forbidden edges. ",
    "start": "1512380",
    "end": "1518180"
  },
  {
    "text": "Those are all of\nthe forbidden edges, and then, after\ntaking those away,",
    "start": "1518180",
    "end": "1524960"
  },
  {
    "text": "you're going to be putting in\nall the other edges possible. So for example-- let me\njust gray those out so they",
    "start": "1524960",
    "end": "1532310"
  },
  {
    "text": "don't interfere\nwith the picture-- from a to d, there's going to be\nan edge, because those are not",
    "start": "1532310",
    "end": "1541140"
  },
  {
    "text": "forbidden. a to a-- not forbidden,\nbecause they-- ",
    "start": "1541140",
    "end": "1548700"
  },
  {
    "text": "they're in different clauses\nand they're not inconsistent. They're consistent\nwith one another.",
    "start": "1548700",
    "end": "1555040"
  },
  {
    "text": "So here are a whole\nbunch of others. I'm not showing them all. It becomes very messy. But here are all of the other\nedges between nodes which are--",
    "start": "1555040",
    "end": "1563100"
  },
  {
    "text": " where they're not forbidden.",
    "start": "1563100",
    "end": "1569409"
  },
  {
    "text": "OK? And that's the graph. That's G. G is all those\nnodes and those edges which",
    "start": "1569410",
    "end": "1578549"
  },
  {
    "text": "are not forbidden. And I just have to\ntell you what k is. k is going to be the\nnumber of clauses.",
    "start": "1578550",
    "end": "1588150"
  },
  {
    "text": "That's going to be the\nsize of the clique I'm looking for in this graph G\nthat I just spelled out for you.",
    "start": "1588150",
    "end": "1595430"
  },
  {
    "text": "And I'm going to claim that\nthis graph here that I just described will have a k-clique.",
    "start": "1595430",
    "end": "1603470"
  },
  {
    "text": "k is the number of clauses\nexactly when phi was satisfied.",
    "start": "1603470",
    "end": "1610419"
  },
  {
    "text": "It's kind of cool. If phi is satisfiability, then\nthere will be a k-clique here.",
    "start": "1610420",
    "end": "1617260"
  },
  {
    "text": "And if phi was not\nsatisfiability-- no k-clique. We're going to prove that as\na claim on the next slide.",
    "start": "1617260",
    "end": "1626370"
  },
  {
    "text": "OK, so k is the\nnumber of clauses. All right? Any questions on\nthat construction?",
    "start": "1626370",
    "end": "1633769"
  },
  {
    "text": "So I've done with\nthe construction. What's left is to argue\nwhy the construction works. ",
    "start": "1633770",
    "end": "1645940"
  },
  {
    "text": "So far, so good-- let's move on. OK. ",
    "start": "1645940",
    "end": "1655450"
  },
  {
    "text": "So here is that very\nsame construction. I eliminated the\nred forbidden edges.",
    "start": "1655450",
    "end": "1660520"
  },
  {
    "text": "These are the ones\nthat were remaining, plus anything else\nthat was not forbidden.",
    "start": "1660520",
    "end": "1666009"
  },
  {
    "text": "That was the same formula that\nI had from the previous slide. Now I want to claim that that\nformula is satisfiability",
    "start": "1666010",
    "end": "1674590"
  },
  {
    "text": "exactly when G has a k-clique. Now, why in the world is that?",
    "start": "1674590",
    "end": "1679890"
  },
  {
    "text": "So this is an if and only if. It's proved in both directions. And this is going to be\nthe typical kind of thing",
    "start": "1679890",
    "end": "1686943"
  },
  {
    "text": "that you're going to want to\ndo when you're exhibiting a-- ",
    "start": "1686943",
    "end": "1693799"
  },
  {
    "text": "one of these reductions,\nwhich is you're going to have an\nopportunity to do that. And we'll do that\ntoo in our examples.",
    "start": "1693800",
    "end": "1702815"
  },
  {
    "text": " OK, so now what\nI want to show is",
    "start": "1702815",
    "end": "1711410"
  },
  {
    "start": "1706000",
    "end": "1838000"
  },
  {
    "text": "that, if phi is\nsatisfiable-- so let's",
    "start": "1711410",
    "end": "1716440"
  },
  {
    "text": "prove the forward direction--\nif phi is satisfiable, then G has a k-clique. ",
    "start": "1716440",
    "end": "1723419"
  },
  {
    "text": "OK, so first of all,\nif phi is satisfiable, that means it has a\nsatisfying assignment.",
    "start": "1723420",
    "end": "1731580"
  },
  {
    "text": "Now, here's a common confusion. I'm not sure whether\nit's helpful to sprinkle the confusions alone\nwith the discussion,",
    "start": "1731580",
    "end": "1738790"
  },
  {
    "text": "but in case you're worried,\nyou might ask, well, how do I find that\nsatisfying assignment?",
    "start": "1738790",
    "end": "1744330"
  },
  {
    "text": "I thought that was\nexponentially hard to do.",
    "start": "1744330",
    "end": "1750120"
  },
  {
    "text": "This is a proof. This is not an algorithm. We're just trying to\nargue the correctness",
    "start": "1750120",
    "end": "1755950"
  },
  {
    "text": "of this construction. So there's no longer\nany concern about how to find an assignment.",
    "start": "1755950",
    "end": "1761362"
  },
  {
    "text": "I'm just saying, if there\nis an assignment-- if there is a satisfying\nassignment, then something will happen something.",
    "start": "1761362",
    "end": "1767320"
  },
  {
    "text": "Then something will\nhappen-- in particular, then we will show\nthat G has a k-clique.",
    "start": "1767320",
    "end": "1773900"
  },
  {
    "text": "So let's say phi is satisfiable,\nso it has some assignment.",
    "start": "1773900",
    "end": "1779080"
  },
  {
    "text": "Let's take that\nsatisfying assignment. And remember that, in\nany satisfying assignment",
    "start": "1779080",
    "end": "1787470"
  },
  {
    "text": "to a formula in CNF, that\nmakes at least one literal true",
    "start": "1787470",
    "end": "1793830"
  },
  {
    "text": "in every clause.  So let's just pick one of those.",
    "start": "1793830",
    "end": "1800260"
  },
  {
    "text": "There might be\nseveral clauses which have multiple true literals. In that case, just pick\none of them arbitrarily.",
    "start": "1800260",
    "end": "1808230"
  },
  {
    "text": " I don't have this indicated\non this diagram here,",
    "start": "1808230",
    "end": "1813890"
  },
  {
    "text": "but imagine maybe, in the\nvery first clause, a was true; in the second clause, b was\ntrue; in the third clause,",
    "start": "1813890",
    "end": "1822799"
  },
  {
    "text": "e complement-- e bar\nwas true, not e-- e bar was true, which\nmeans e itself was false,",
    "start": "1822800",
    "end": "1830390"
  },
  {
    "text": "but e bar was true. And that's the way each\nof those clauses, in turn, got to be true in this\nparticular satisfying",
    "start": "1830390",
    "end": "1837620"
  },
  {
    "text": "assignment-- because you're going to pick\none true literal every clause. And now, from that choice of\nliterals-- one per clause--",
    "start": "1837620",
    "end": "1851260"
  },
  {
    "text": "I'm going to look at the\ncorresponding nodes in G, and I'm going to claim that\nthose nodes taken together",
    "start": "1851260",
    "end": "1859600"
  },
  {
    "text": "form a k-clique. ",
    "start": "1859600",
    "end": "1866240"
  },
  {
    "text": "OK, so first of all, do they\nhave the right number of nodes? Well, sure, because I'm\npicking one node per clique.",
    "start": "1866240",
    "end": "1875630"
  },
  {
    "text": "I already said k is\nthe number of cliques, so I'm getting exactly k nodes. So I have at least the\nright number of nodes.",
    "start": "1875630",
    "end": "1884510"
  },
  {
    "text": "But how do I know they're\nall connected to one another, those nodes that I just picked?",
    "start": "1884510",
    "end": "1892150"
  },
  {
    "text": "Well, they're all\nconnected to each other because I'm going to say-- well, because there were no\nforbidden edges among them.",
    "start": "1892150",
    "end": "1900820"
  },
  {
    "text": "And remember that we put in\nall possible edges except for the forbidden ones.",
    "start": "1900820",
    "end": "1907110"
  },
  {
    "text": "So how do I know there\nare no forbidden edges? Well, what were the rules\nfor being forbidden?",
    "start": "1907110",
    "end": "1912260"
  },
  {
    "text": "It means they-- two nodes\nin the same clique-- in the same clause.",
    "start": "1912260",
    "end": "1918830"
  },
  {
    "text": "Well, I'm picking\none node per clause, so I can never be having two\nnodes from the same clause.",
    "start": "1918830",
    "end": "1925730"
  },
  {
    "text": "So I'm never going\nto run into trouble with the first condition\nof being forbidden.",
    "start": "1925730",
    "end": "1931082"
  },
  {
    "text": "So what's the second\npossibility for being forbidden, is that I'm picking two nodes\nwhich are inconsistent--",
    "start": "1931082",
    "end": "1937030"
  },
  {
    "text": "well, how do I know\nthat I didn't end up with two nodes with\ninconsistent labels?",
    "start": "1937030",
    "end": "1943460"
  },
  {
    "text": "That would be bad, because\nthen they would have a forbidden edge, and what-- my result would not be a clique.",
    "start": "1943460",
    "end": "1951180"
  },
  {
    "text": "How do I know I didn't\nend up picking-- ",
    "start": "1951180",
    "end": "1956990"
  },
  {
    "text": "in this group I pick a, and\nin this group I pick a bar?",
    "start": "1956990",
    "end": "1962450"
  },
  {
    "text": "Well, because they all came\nfrom the same assignment. ",
    "start": "1962450",
    "end": "1968840"
  },
  {
    "text": "They were all true\nliberals in clauses. It's not possible that a\nwas true in this clause",
    "start": "1968840",
    "end": "1974870"
  },
  {
    "text": "and a bar is true\nin that clause, because if a is true here,\na bar's got to be false. It can't be the true\nliteral in this clause.",
    "start": "1974870",
    "end": "1982170"
  },
  {
    "text": "So I cannot have any\ninconsistent nodes appearing",
    "start": "1982170",
    "end": "1989570"
  },
  {
    "text": "among the nodes of my clique. And so they're not\nin the same clause.",
    "start": "1989570",
    "end": "1995480"
  },
  {
    "text": "They're not inconsistent,\nso the edge has to be there. And that's going to be true\nfor every pair of nodes",
    "start": "1995480",
    "end": "2001389"
  },
  {
    "text": "in that clique-- in that group of nodes, and\nthat's why it's a clique. ",
    "start": "2001390",
    "end": "2007490"
  },
  {
    "text": "So that proves one direction. Now we still have to\nprove the other direction, because we have to say,\nwell, if G has a k-clique,",
    "start": "2007490",
    "end": "2014170"
  },
  {
    "text": "how do we know that\nphi is satisfied? So that's the reverse. So let's just take any\nk-clique that's in G.",
    "start": "2014170",
    "end": "2022140"
  },
  {
    "text": "And how do I know I can get from\nthat, a satisfying assignment to the formula? ",
    "start": "2022140",
    "end": "2035010"
  },
  {
    "text": "Good-- getting some good\nquestions here in the chat. But let me just move on.",
    "start": "2035010",
    "end": "2042960"
  },
  {
    "text": "So proving the reverse-- the reverse direction,\nassuming we have a k-clique--",
    "start": "2042960",
    "end": "2049770"
  },
  {
    "text": "take any such k-clique. Now, first of all,\nyou observe that it's got to have one node\nin every clause.",
    "start": "2049770",
    "end": "2056865"
  },
  {
    "text": " It can't have two nodes\nin the same clause",
    "start": "2056865",
    "end": "2062408"
  },
  {
    "text": "or zero nodes in a clause. First of all, it can't have\ntwo nodes in the same clause.",
    "start": "2062409",
    "end": "2069050"
  },
  {
    "text": "Why? Well, because those nodes are\nnever connected to one another. So they cannot be both\nin the same clique,",
    "start": "2069050",
    "end": "2075738"
  },
  {
    "text": "because all the nodes in the\ninner clique are connected to one another.",
    "start": "2075738",
    "end": "2080908"
  },
  {
    "text": "By the way we constructed G,\nnodes from the same clause are not connected, so they cannot\nappear in a clique together.",
    "start": "2080909",
    "end": "2088810"
  },
  {
    "text": "So there's going\nto be at most one node from every clause\nappearing in this clique, but--",
    "start": "2088810",
    "end": "2097230"
  },
  {
    "text": "appearing in this clique. But we also have-- we\nknow we have k nodes, so that means, if there\nis at most one per clause,",
    "start": "2097230",
    "end": "2107089"
  },
  {
    "text": "and we only have k clauses,\nthat means every clause has got to have one.",
    "start": "2107090",
    "end": "2112510"
  },
  {
    "text": "If some clause is\nmissing a node, then there's got to be some\nother clause that has two.",
    "start": "2112510",
    "end": "2118860"
  },
  {
    "text": "So we know that every-- that this clique that\nG has exactly one",
    "start": "2118860",
    "end": "2127530"
  },
  {
    "text": "node in every clause. So how do we get from that\nsatisfying assignment?",
    "start": "2127530",
    "end": "2133950"
  },
  {
    "text": "So what we're going to do is\ntake the corresponding literals",
    "start": "2133950",
    "end": "2139550"
  },
  {
    "text": "that correspond to that one\nnode in that was in the clique,",
    "start": "2139550",
    "end": "2146120"
  },
  {
    "text": "take those liberals and set\nthose literals to be true, which means setting the\nvariable to be true or setting--",
    "start": "2146120",
    "end": "2156049"
  },
  {
    "text": "if the literal was a\nbar, then setting a to be false, because you\nwant a bar to be true. You want to set the\nliterals to be true.",
    "start": "2156050",
    "end": "2164190"
  },
  {
    "text": "Well, now we're setting-- there's one node\nin each clause-- we're setting one literal--",
    "start": "2164190",
    "end": "2171055"
  },
  {
    "text": "the corresponding\nliteral-- true, so that's going to set one\ntrue literal in every clause.",
    "start": "2171055",
    "end": "2176359"
  },
  {
    "text": "So that means it's\ngoing to be satisfying. There's one thing that one\nhas to really be careful here",
    "start": "2176360",
    "end": "2182360"
  },
  {
    "text": "to double check-- to make sure that we're\ndoing this consistently, that we're not being asked to\nset a true and also a bar true,",
    "start": "2182360",
    "end": "2192170"
  },
  {
    "text": "because then that\nwould not be possible. But a and a bar are not\nconnected, so it's--",
    "start": "2192170",
    "end": "2199970"
  },
  {
    "text": "we're never going to be trying\nto set both a and a bar true. If we're going to be\ntrying to set a true, we're never going to\ntry to set a bar true,",
    "start": "2199970",
    "end": "2206690"
  },
  {
    "text": "because those are not-- a and a bar cannot be\nin the same clique. They're not connected\nto each other.",
    "start": "2206690",
    "end": "2213329"
  },
  {
    "text": "OK? So that is the argument. And lastly, I claim--",
    "start": "2213330",
    "end": "2220078"
  },
  {
    "text": "we're not going to look\nat this in detail-- that it's kind of obvious\nthat this reduction can be done in polynomial time.",
    "start": "2220078",
    "end": "2226069"
  },
  {
    "text": "Namely, if I give\nyou that formula, you can write out\nthat graph in-- pretty easily.",
    "start": "2226070",
    "end": "2231830"
  },
  {
    "text": "There's no hard work to be\ndone in writing out that graph or counting up the\nnumber of clauses.",
    "start": "2231830",
    "end": "2238700"
  },
  {
    "text": "So that's the proof that I\ncan reduce 3SAT to clique.",
    "start": "2238700",
    "end": "2244490"
  },
  {
    "text": "And it tells you also that, if\nI could solve clique quickly, then I can solve 3SAT quickly.",
    "start": "2244490",
    "end": "2251150"
  },
  {
    "text": "And this is the whole\npoint, because I can convert now clique\nproblems to 3SAT problems.",
    "start": "2251150",
    "end": "2259820"
  },
  {
    "text": "No. I'm sorry. I got it backwards--\nconvert 3SAT problems to clique problems. So if I can solve clique easily,\nthen I can solve 3SAT easily.",
    "start": "2259820",
    "end": "2268760"
  },
  {
    "text": "I just showed a way of\nconverting these formulas to graphs. So that says, if I can\nsolve the graphs easily,",
    "start": "2268760",
    "end": "2276320"
  },
  {
    "text": "then I can solve\nthe formulas easily. OK, why don't we turn to\nsome-- oh, question, check-in.",
    "start": "2276320",
    "end": "2282440"
  },
  {
    "text": "But we can now also-- I'll launch a\ncheck-in, but we'll--",
    "start": "2282440",
    "end": "2288740"
  },
  {
    "text": "let's just see. I'm seeing many,\nmany questions here,",
    "start": "2288740",
    "end": "2293855"
  },
  {
    "text": "which are actually what\nmy check-in is about.  I'll turn it back to you guys.",
    "start": "2293855",
    "end": "2300090"
  },
  {
    "start": "2300090",
    "end": "2305570"
  },
  {
    "text": "OK, so where did we\nuse the fact that we",
    "start": "2305570",
    "end": "2313130"
  },
  {
    "text": "have three literals per clause? Does this thing just work\neven if we had any number",
    "start": "2313130",
    "end": "2320810"
  },
  {
    "text": "of literals per clause? What do you think? ",
    "start": "2320810",
    "end": "2327320"
  },
  {
    "text": "We got a tight race here. ",
    "start": "2327320",
    "end": "2341070"
  },
  {
    "text": "Truth is losing\nout, unfortunately. All right. Oh, it's really\nclose, but still--",
    "start": "2341070",
    "end": "2347200"
  },
  {
    "text": "OK.  One more-- OK,\nit's neck and neck.",
    "start": "2347200",
    "end": "2353485"
  },
  {
    "text": " OK, almost done--",
    "start": "2353485",
    "end": "2358519"
  },
  {
    "text": "10 seconds-- are we done here?",
    "start": "2358520",
    "end": "2365630"
  },
  {
    "text": "OK, that's it-- ending polling. ",
    "start": "2365630",
    "end": "2382260"
  },
  {
    "text": "Yes, truth has won out. Thank God.",
    "start": "2382260",
    "end": "2387570"
  },
  {
    "text": "Yeah, it works for\nany size clause. We didn't use the\nfact that it's a 3CNF. It could have been\nany number here.",
    "start": "2387570",
    "end": "2395880"
  },
  {
    "text": "Well, we've got a-- I guess it's a plurality\nhere, though, not a majority.",
    "start": "2395880",
    "end": "2403020"
  },
  {
    "text": "Where did we use 3 in\nany of these argument? I didn't mention it. Maybe you were imagining that\nit's going to be part of it,",
    "start": "2403020",
    "end": "2409559"
  },
  {
    "text": "but 3 does not come into\nthis discussion at all. If you think about how\nit's-- why it's working,",
    "start": "2409560",
    "end": "2416640"
  },
  {
    "text": "even if we had-- one of these clauses\nhad 10 literals in it,",
    "start": "2416640",
    "end": "2421800"
  },
  {
    "text": "as long as k is the\nnumber of clauses, and we don't connect\nany variable--",
    "start": "2421800",
    "end": "2428100"
  },
  {
    "text": "any literals internal to a\nclause, this whole argument is going to still work.",
    "start": "2428100",
    "end": "2433200"
  },
  {
    "text": "So please check that make. Sure you understand\nwhat's going on, because I can see that\na good chunk of you",
    "start": "2433200",
    "end": "2439020"
  },
  {
    "text": "have not got this right. ",
    "start": "2439020",
    "end": "2444119"
  },
  {
    "text": "So I got a good question here. What if it's only\njust one big clause-- so it's like the whole\nformula's just one big OR.",
    "start": "2444120",
    "end": "2451350"
  },
  {
    "text": "So what does happen\nin that case? Good question--\nso in that case-- ",
    "start": "2451350",
    "end": "2460530"
  },
  {
    "text": "suppose there's one big\nclause with 100 literals. That's the whole formula. It's just a big OR.",
    "start": "2460530",
    "end": "2465998"
  },
  {
    "text": "So we know the formula's going\nto be satisfiable, by the way, obviously. So if you look at\nthe corresponding G,",
    "start": "2465998",
    "end": "2473670"
  },
  {
    "text": "it's going to have 100\nnodes, because there's one for every literal. None of them are going to\nbe connected to each other,",
    "start": "2473670",
    "end": "2480630"
  },
  {
    "text": "because they're all\nin the same clause. So it looks like we're going\nto be in tough shape trying",
    "start": "2480630",
    "end": "2486600"
  },
  {
    "text": "to find a clique there, because\nthere's no edges at all. Everything's forbidden. But what is k? k is going\nto be 1 in that case,",
    "start": "2486600",
    "end": "2494010"
  },
  {
    "text": "because there's only one clause. And kind of a degenerate case,\nbut a clique with just one--",
    "start": "2494010",
    "end": "2504030"
  },
  {
    "text": "just a single node is--\ncounts as a one clique, because it's just one node.",
    "start": "2504030",
    "end": "2509748"
  },
  {
    "text": "There's no need for\nany edges at all. It still counts as a clique. So it'll still work out.",
    "start": "2509748",
    "end": "2516670"
  },
  {
    "text": "Let's see. What else here? That was kind of a fun\nquestion that you asked me. Thank you. ",
    "start": "2516670",
    "end": "2524880"
  },
  {
    "text": "There are a lot of questions.  I think we're actually\npretty near the break also.",
    "start": "2524880",
    "end": "2531690"
  },
  {
    "text": "We'll just see. Yeah. ",
    "start": "2531690",
    "end": "2540089"
  },
  {
    "text": "Oh, many, many questions here-- so I think I'm going to\nstart the clock going down",
    "start": "2540090",
    "end": "2546300"
  },
  {
    "text": "for our, coffee break and I will\ntake some of these questions.",
    "start": "2546300",
    "end": "2552210"
  },
  {
    "text": "I'll try to answer some of\nthese questions-- oops-- try to answer some of\nthese questions afterward.",
    "start": "2552210",
    "end": "2561290"
  },
  {
    "start": "2561000",
    "end": "2958000"
  },
  {
    "text": " All right. ",
    "start": "2561290",
    "end": "2570160"
  },
  {
    "text": "Good-- all right.  So I got a question\nabout making sure",
    "start": "2570160",
    "end": "2577110"
  },
  {
    "text": "why nodes don't have\ninconsistent labels, if I understand the\nquestion correctly. ",
    "start": "2577110",
    "end": "2586940"
  },
  {
    "text": "So I never put edges between\nnodes with inconsistent labels. That's the rule. That's my construction.",
    "start": "2586940",
    "end": "2592610"
  },
  {
    "text": "I get to say how the\nconstruction works. So those two nodes with\ninconsistent labels",
    "start": "2592610",
    "end": "2598760"
  },
  {
    "text": "can never be in the same\nclique, because there's no edge between them.",
    "start": "2598760",
    "end": "2605208"
  },
  {
    "text": "So I'm not sure that\nanswered the question there, but that was-- let's see.",
    "start": "2605208",
    "end": "2611089"
  },
  {
    "text": "So we're getting\nanother question here. Since any Boolean formula\ncan be converted to CNF,",
    "start": "2611090",
    "end": "2618620"
  },
  {
    "text": "does that mean-- is SAT polynomial time\nreducible to clique as w-- ",
    "start": "2618620",
    "end": "2630900"
  },
  {
    "text": "[INAUDIBLE] time\nreducible to clique, but not for the reason that\nany Boolean formula can be converted to CNF, because\nthat conversion is going to be",
    "start": "2630900",
    "end": "2641860"
  },
  {
    "text": "an exponential\nconversion in general-- the conversion to CNF. So you have to be careful\nabout what we mean by converting a formula to CNF.",
    "start": "2641860",
    "end": "2649025"
  },
  {
    "text": " So also getting question-- what\nhappens in the case of 1SAT?",
    "start": "2649025",
    "end": "2655020"
  },
  {
    "text": "Well, we didn't really\ntalk about 1SAT. So the question is,\nsuppose there's only",
    "start": "2655020",
    "end": "2660260"
  },
  {
    "text": "a single literal per clause. That's an interesting--\nanother sort of edge case here.",
    "start": "2660260",
    "end": "2667620"
  },
  {
    "text": "What happens under\nthose circumstances? So there's only a single\nliteral per clause.",
    "start": "2667620",
    "end": "2673365"
  },
  {
    "text": " So you have to work\nout what happens.",
    "start": "2673365",
    "end": "2679180"
  },
  {
    "text": "But in that case,\nall the clauses just",
    "start": "2679180",
    "end": "2686490"
  },
  {
    "text": "have one literal in\nthem, and now they have-- ",
    "start": "2686490",
    "end": "2705000"
  },
  {
    "text": "when you have a 1CNF, so there's\nonly one literally per clause,",
    "start": "2705000",
    "end": "2713570"
  },
  {
    "text": "the only way that\ncan be satisfiable is you have to make\neach literal true, because there's\nno ORing anymore.",
    "start": "2713570",
    "end": "2719359"
  },
  {
    "text": "So every literal has to\nbe true in the assignment. So that means you can never\nhave any consistent literals.",
    "start": "2719360",
    "end": "2725810"
  },
  {
    "text": "And that's the only case\nwhen you would not have an edge, because you're not--",
    "start": "2725810",
    "end": "2730984"
  },
  {
    "text": "the forbidden\ncondition won't happen because you don't have more\nthan one node per clause.",
    "start": "2730985",
    "end": "2737120"
  },
  {
    "text": "Every clause is going to have\njust a single node in it. So it really comes\ndown to whether or not",
    "start": "2737120",
    "end": "2742940"
  },
  {
    "text": "you have an\ninconsistently labeled-- inconsistent clauses.",
    "start": "2742940",
    "end": "2748200"
  },
  {
    "text": "I didn't explain that\nsuper well, but it's-- the argument still\nworks, though. You should check\nit for yourself.",
    "start": "2748200",
    "end": "2754035"
  },
  {
    "text": " So this is a basic question. How do we see that F\nis polynomial time?",
    "start": "2754035",
    "end": "2759860"
  },
  {
    "text": "I'm not sure I want to spend\na lot of discussion on that.",
    "start": "2759860",
    "end": "2765140"
  },
  {
    "text": "The conversion from the\nformula to the graph is kind",
    "start": "2765140",
    "end": "2770720"
  },
  {
    "text": "of a one-to-one-- every literal becomes a node.",
    "start": "2770720",
    "end": "2776660"
  },
  {
    "text": "The rule for when edges\nare present-- it's a very simple rule.",
    "start": "2776660",
    "end": "2781940"
  },
  {
    "text": "I'm not sure what more to say. It seems pretty clear\nthat the conversion--",
    "start": "2781940",
    "end": "2787040"
  },
  {
    "text": "that reduction is\npolynomial time computable. If you wrote a\nprogram to do that, it would operate very quickly.",
    "start": "2787040",
    "end": "2795050"
  },
  {
    "text": "Is it possible for G to have\na k plus n clique, where n is greater than 0? Does that matter?",
    "start": "2795050",
    "end": "2801650"
  },
  {
    "text": "If you think about it, the\nbiggest possible clique that this graph G\ncould have is k.",
    "start": "2801650",
    "end": "2808070"
  },
  {
    "text": "It could never have more\nthan a bigger clique, because two nodes in the same\nclause are never connected.",
    "start": "2808070",
    "end": "2818220"
  },
  {
    "text": "You only have k clauses. So the answer is no,\nyou cannot have a--",
    "start": "2818220",
    "end": "2824599"
  },
  {
    "text": "bigger than a k-clique-- just not going to happen. Does each clause need to have\nthe same number of literals?",
    "start": "2824600",
    "end": "2831200"
  },
  {
    "text": "I don't see why. ",
    "start": "2831200",
    "end": "2837460"
  },
  {
    "text": "So question is, why are\nwe worrying about 3SAT, since it didn't\nseem to matter here?",
    "start": "2837460",
    "end": "2843680"
  },
  {
    "text": "There are other examples\nwhere it does matter. I'm actually not sure\nif we'll see one or not,",
    "start": "2843680",
    "end": "2849049"
  },
  {
    "text": "but there are cases\nwhere it does matter. Let me just see if there's\nany quick questions here.",
    "start": "2849050",
    "end": "2855460"
  },
  {
    "text": " Somebody's saying,\ndoes-- do we have",
    "start": "2855460",
    "end": "2862589"
  },
  {
    "text": "to worry about there being a\npolynomial number of literals? So you have to think about\nwhat that question means.",
    "start": "2862590",
    "end": "2868500"
  },
  {
    "text": "The size of the input, which\nincludes all of the literals, is n.",
    "start": "2868500",
    "end": "2874750"
  },
  {
    "text": "So there's going to be,\nat most, n literals, because that's the size\nof the input, at most,",
    "start": "2874750",
    "end": "2882850"
  },
  {
    "text": "in literals appearing. So you don't have to worry\nabout that being polynomial,",
    "start": "2882850",
    "end": "2889920"
  },
  {
    "text": "because-- by the way, we're defining\nthe size of the input is going to be, at\nmost, n literals.",
    "start": "2889920",
    "end": "2896839"
  },
  {
    "text": "I hope that's clear.  OK.",
    "start": "2896840",
    "end": "2902085"
  },
  {
    "text": " OK, so this is a good question.",
    "start": "2902085",
    "end": "2907640"
  },
  {
    "text": "When we talk about\npolynomial time, it's polynomial in\nthe representation of the input, which is--",
    "start": "2907640",
    "end": "2915650"
  },
  {
    "text": "if you want to think\nabout it in terms of bits, that's fine-- or whatever. It's not going to matter if\nyou use some larger alphabet.",
    "start": "2915650",
    "end": "2921589"
  },
  {
    "text": "But the number of symbols\nyou need in your fixed size alphabet, the number\nof symbols you",
    "start": "2921590",
    "end": "2927350"
  },
  {
    "text": "need to write down\nthat input in whatever your reasonable encoding\nis is going to be n.",
    "start": "2927350",
    "end": "2932390"
  },
  {
    "text": "And it's going to be\npolynomial in n, polynomial in that length of the input.",
    "start": "2932390",
    "end": "2939019"
  },
  {
    "text": "So another question is,\ndoes SAT reduce the 3SAT? Yes. That we will see. SAT actually does polynomial\ntime reduce to 3SAT.",
    "start": "2939020",
    "end": "2946190"
  },
  {
    "text": "Not by converting to\nan equivalent formula, but by some more-- somewhat more involved\nargument than that.",
    "start": "2946190",
    "end": "2952828"
  },
  {
    "text": "OK, why don't we move on? Some of these are going to\ncome out anyway in the lecture. ",
    "start": "2952828",
    "end": "2959290"
  },
  {
    "start": "2958000",
    "end": "3101000"
  },
  {
    "text": "OK, so now let's talk\nabout NP completeness, because we've kind\nof set things up. We're not going to prove\nthat the basic theorem,",
    "start": "2959290",
    "end": "2966220"
  },
  {
    "text": "the Cook-Levin theorem\nabout NP completeness, but at least we'll be able\nto make the definition.",
    "start": "2966220",
    "end": "2972095"
  },
  {
    "text": "OK, here is our definition of\nwhat it means for a problem to be NP complete. ",
    "start": "2972095",
    "end": "2980860"
  },
  {
    "text": "So a language B is\ncalled the NP complete",
    "start": "2980860",
    "end": "2987000"
  },
  {
    "text": "if it has two properties. Number one is that it\nhas to be a member of NP,",
    "start": "2987000",
    "end": "2993320"
  },
  {
    "text": "and number two-- every language in NP\nhas the polynomial time reduce to that\nlanguage-- to that NP",
    "start": "2993320",
    "end": "3001299"
  },
  {
    "text": "complete language in order\nfor it to be NP complete. So simple picture-- has\nto be in NP and everything",
    "start": "3001300",
    "end": "3011460"
  },
  {
    "text": "an NP reduces to it. And so that's kind of\nthe magical property",
    "start": "3011460",
    "end": "3017200"
  },
  {
    "text": "that we claim that SAT has. sat, for one thing,\nis obviously in NP.",
    "start": "3017200",
    "end": "3022600"
  },
  {
    "text": "And as we-- the\nCook-Levin theorem shows-- or will show-- everything\nin NP is reducible to SAT,",
    "start": "3022600",
    "end": "3030700"
  },
  {
    "text": "so SAT's going to be our\nfirst example of an NP complete problem. ",
    "start": "3030700",
    "end": "3042200"
  },
  {
    "text": "And we're going to get\nwhat we claimed also for SAT-- that, if SAT or\nany other NP complete problem",
    "start": "3042200",
    "end": "3049700"
  },
  {
    "text": "turns out to be solvable\nin polynomial time, then every NP problem is\nsolvable in polynomial time.",
    "start": "3049700",
    "end": "3056060"
  },
  {
    "text": "And that's immediate,\nbecause everything is reducible in polynomial time\nto the NP complete problem.",
    "start": "3056060",
    "end": "3062400"
  },
  {
    "text": "So if you can do it easily,\nyou can do everything easily just by going through\nthe reduction.",
    "start": "3062400",
    "end": "3068890"
  },
  {
    "text": "OK. So the Cook-Levin\ntheorem, as I mentioned, is that SAT is NP complete.",
    "start": "3068890",
    "end": "3073960"
  },
  {
    "text": "And we're going to actually\nprove it next lecture, but let's assume for the\nremainder of this lecture",
    "start": "3073960",
    "end": "3079570"
  },
  {
    "text": "that we know it to be true. So I'll use the terminology\nof problems being NP complete,",
    "start": "3079570",
    "end": "3085210"
  },
  {
    "text": "assuming that we know-- that we have SAT as NP complete.",
    "start": "3085210",
    "end": "3091140"
  },
  {
    "text": "OK? So we're going to be\nusing some of the things that we're proving next\nlecture just in the terminology",
    "start": "3091140",
    "end": "3098790"
  },
  {
    "text": "that we're going to\nbe talking today. OK, so here's the picture. ",
    "start": "3098790",
    "end": "3104670"
  },
  {
    "text": "Here's the class NP. And everything in NP is\npolynomial time reducible",
    "start": "3104670",
    "end": "3110730"
  },
  {
    "text": "to SAT. SAT itself is a\nmember of NP, but I didn't want to show it that way\nbecause it makes the picture",
    "start": "3110730",
    "end": "3115800"
  },
  {
    "text": "kind of hard to display.",
    "start": "3115800",
    "end": "3121740"
  },
  {
    "text": "So just from the perspective of\nthe reduction, everything in NP is polynomial time\nreducible to SAT.",
    "start": "3121740",
    "end": "3128700"
  },
  {
    "text": "We'll show that next lecture. Another thing that\nwe'll show next lecture is that SAT, in turn,\nis polynomial time",
    "start": "3128700",
    "end": "3135960"
  },
  {
    "text": "reducible to 3SAT. So 3SAT, as you remember,\nare just those problems",
    "start": "3135960",
    "end": "3142400"
  },
  {
    "text": "that are in conjunct-- are in 3CNF. And then what we show today is\nthat 3SAT is polynomial time",
    "start": "3142400",
    "end": "3151910"
  },
  {
    "text": "reducible to clique. So now, taking the assumption\nthat SAT is NP complete--",
    "start": "3151910",
    "end": "3160390"
  },
  {
    "text": "so everything is polynomial\ntime reduce both the SAT, which is, in turn, polynomial time\nreducible to 3SAT, and in turn,",
    "start": "3160390",
    "end": "3167500"
  },
  {
    "text": "reducible to clique. These reductions, as we've\nseen before, composed.",
    "start": "3167500",
    "end": "3172660"
  },
  {
    "text": " You can just apply one reduction\nfunction after the next.",
    "start": "3172660",
    "end": "3180960"
  },
  {
    "text": "If each one individually\nis polynomial, the whole thing as a combination\nis going to be polynomial.",
    "start": "3180960",
    "end": "3187240"
  },
  {
    "text": "So now we know\nthat 3SAT is going to be also NP complete, because\nwe can reduce anything in NP",
    "start": "3187240",
    "end": "3195150"
  },
  {
    "text": "to SAT, and then\nto 3SAT, and then we get a reduction\ndirectly to 3SAT by composing those\ntwo reductions--",
    "start": "3195150",
    "end": "3201420"
  },
  {
    "text": "and then, furthermore,\nat the clique. So now we're-- have several\nNP complete problems.",
    "start": "3201420",
    "end": "3206529"
  },
  {
    "text": "And moving beyond that, we have\nthe HAMPATH problem, which we are going to talk about next.",
    "start": "3206530",
    "end": "3212980"
  },
  {
    "text": "And we'll show another\nreduction in addition to the one we just\nshowed to clique, now one",
    "start": "3212980",
    "end": "3219420"
  },
  {
    "text": "going from 3SAT to HAMPATH. OK.",
    "start": "3219420",
    "end": "3224430"
  },
  {
    "text": "So in general, I think\nthe takeaway message is that, to show some\nlanguage is NP complete,",
    "start": "3224430",
    "end": "3231839"
  },
  {
    "text": "you want to show that\n3SAT is polynomial time reducible to it. ",
    "start": "3231840",
    "end": "3242250"
  },
  {
    "text": "OK, some good\nquestions coming in-- I'll try to answer those. So you're going to take\n3SAT and reduce to C.",
    "start": "3242250",
    "end": "3250310"
  },
  {
    "text": "That's the most typical case. There's going to be\nother examples too, we might start with\nanother problem",
    "start": "3250310",
    "end": "3256640"
  },
  {
    "text": "that you've already shown\nto be in NP complete, and reduce it to your language. So it doesn't have to start with\n3SAT, though often, it does.",
    "start": "3256640",
    "end": "3265670"
  },
  {
    "text": " Why is this concept important?",
    "start": "3265670",
    "end": "3273070"
  },
  {
    "start": "3268000",
    "end": "3599000"
  },
  {
    "text": "So I would say there\nare two reasons. And this is going\nto get a little bit at some of the chat questions.",
    "start": "3273070",
    "end": "3280390"
  },
  {
    "text": "First of all, if you're faced\nwith some new computational problem-- you've got some\nrobotics problem that you want",
    "start": "3280390",
    "end": "3288839"
  },
  {
    "text": "to solve in your thesis, and\nyou need some algorithm about whether the robot\narm can do such--",
    "start": "3288840",
    "end": "3295320"
  },
  {
    "text": "move in a certain such a\nway, and involves searching-- possibly searching through\na space of different kinds",
    "start": "3295320",
    "end": "3301380"
  },
  {
    "text": "of motions, and\nyou want to know-- I'd like to find a\npolynomial algorithm",
    "start": "3301380",
    "end": "3306510"
  },
  {
    "text": "to solve that problem. I'm using this as an example\nbecause this actually did happen to one of\nthe former students",
    "start": "3306510",
    "end": "3312600"
  },
  {
    "text": "from this class, who\nwas working in robotics, and they actually end up proving\nthat the problem that they were",
    "start": "3312600",
    "end": "3317940"
  },
  {
    "text": "trying to solve is NP complete. ",
    "start": "3317940",
    "end": "3323180"
  },
  {
    "text": "So that's useful\ninformation, because even",
    "start": "3323180",
    "end": "3329230"
  },
  {
    "text": "though knowing a\nproblem is NP complete doesn't guarantee\nthat it's not in P--",
    "start": "3329230",
    "end": "3334809"
  },
  {
    "text": "because conceivably,\nP equals NP-- what it does tell you--",
    "start": "3334810",
    "end": "3339820"
  },
  {
    "text": "if you have a problem\nthat's NP complete and it does turn out to\nbe in P, then P equals NP.",
    "start": "3339820",
    "end": "3345069"
  },
  {
    "text": "So there would be tremendous\nsurprising consequences of your problem, if it was known\nto be NP complete, ending up",
    "start": "3345070",
    "end": "3353950"
  },
  {
    "text": "in P. So generally,\npeople take a proof of NP completeness as\npowerful evidence",
    "start": "3353950",
    "end": "3359680"
  },
  {
    "text": "that the problem is not in\nP. Even though it's not quite a proof, it's powerful\nevidence that it's not in P.",
    "start": "3359680",
    "end": "3365140"
  },
  {
    "text": "And so you might as\nwell give up working on trying to find a\npolynomial algorithm for it, because if you do, you\ndon't have to worry",
    "start": "3365140",
    "end": "3372400"
  },
  {
    "text": "about robotics anymore. You're going to become famous\nas a So I wouldn't worry about--",
    "start": "3372400",
    "end": "3379850"
  },
  {
    "text": "so if you throw\nproblem's NP complete, you can pretty much assume-- almost certainly not\nin P. Now, there's",
    "start": "3379850",
    "end": "3386900"
  },
  {
    "text": "another reason related to-- for the theorists to be--\ncare about NP completeness, and that is, if you're trying to\nprove P is different from NP--",
    "start": "3386900",
    "end": "3396710"
  },
  {
    "text": "or P equals NP, as one of the\nchat questions is raising-- ",
    "start": "3396710",
    "end": "3403850"
  },
  {
    "text": "order to prove P different from\nNP, the most likely approach is you pick some\n[? pre ?] problem in NP",
    "start": "3403850",
    "end": "3411480"
  },
  {
    "text": "and show it's not in P. That's what it would mean\nfor them to be different.",
    "start": "3411480",
    "end": "3417280"
  },
  {
    "text": "You're going to\npick some NP problem and show it's not a P problem. ",
    "start": "3417280",
    "end": "3423250"
  },
  {
    "text": "Well, one thing would\nbe terrible is possibly,",
    "start": "3423250",
    "end": "3428735"
  },
  {
    "text": "P is different from NP, and\nyou pick the wrong problem. Suppose I'd spent all\nmy time trying to show--",
    "start": "3428735",
    "end": "3437940"
  },
  {
    "text": "back 20 years ago,\nI'm working really hard trying to show\ncomposites is not",
    "start": "3437940",
    "end": "3443290"
  },
  {
    "text": "in P, which is-- would have\nbeen perfectly reasonable to do,",
    "start": "3443290",
    "end": "3448950"
  },
  {
    "text": "because composites is\nan NP, and it was not known to be in P 20 years ago.",
    "start": "3448950",
    "end": "3454993"
  },
  {
    "text": "And then I invested\ntons of effort to try to prove-- because I\nlike number theory or God knows what-- to prove that\ncomposites is not in P.",
    "start": "3454993",
    "end": "3462410"
  },
  {
    "text": "And then, turns\nout, composites was in P. It was the\nwrong problem to pick, even though P might\nbe different from NP.",
    "start": "3462410",
    "end": "3468040"
  },
  {
    "text": "But what NP complete\nis guarantees is that, if you work on a\nproblem, which is NP complete, you can't pick\nthe wrong problem,",
    "start": "3468040",
    "end": "3474730"
  },
  {
    "text": "because if any problem\nis in NP, and not in P, an NP complete problem is going\nto be an example of that--",
    "start": "3474730",
    "end": "3483420"
  },
  {
    "text": "because if the NP complete\nproblems in P, everything in NP is in P. So if NP is\ndifferent from P, you",
    "start": "3483420",
    "end": "3489369"
  },
  {
    "text": "know the complete\nproblems are not in P, so you might as well\nwork on one of those. So those are two ways in which\nNP completeness has turned out",
    "start": "3489370",
    "end": "3497340"
  },
  {
    "text": "to be-- is an important concept. OK, so here's a check-in. ",
    "start": "3497340",
    "end": "3506240"
  },
  {
    "text": "You guys are getting-- maybe you're getting-- starting\nto think the way I think. You're getting-- some--",
    "start": "3506240",
    "end": "3511310"
  },
  {
    "text": "at least one of you asked\nthis question in the chat. Which language\nare we've probably seen is most analogous to SAT--",
    "start": "3511310",
    "end": "3520240"
  },
  {
    "text": "ATM, ETM, or 0 to\nthe k, 1 to the k? ",
    "start": "3520240",
    "end": "3526690"
  },
  {
    "text": "Obviously, this is\nmaybe subjective. You may have your\nown interpretation of what that means. There's, in a sense,\nperhaps no right answer,",
    "start": "3526690",
    "end": "3534190"
  },
  {
    "text": "but what do you think? ",
    "start": "3534190",
    "end": "3540440"
  },
  {
    "text": "OK, that's it.  I don't know how in\nthe world that you",
    "start": "3540440",
    "end": "3546750"
  },
  {
    "text": "could see this problem as\nanalogous to 0 to the k, 1 to the k, but OK.",
    "start": "3546750",
    "end": "3551970"
  },
  {
    "text": "I'm sure you have your reason. Yes, this is a lot like ATM.",
    "start": "3551970",
    "end": "3557700"
  },
  {
    "text": "Why? well, because for one thing,\nwe showed in a homework problem that all Turing\nrecognizable languages",
    "start": "3557700",
    "end": "3565590"
  },
  {
    "text": "are reducible to ATM-- mapping reducible to ATM. So that's a little bit like\nthe notion of completeness",
    "start": "3565590",
    "end": "3571829"
  },
  {
    "text": "that we have for satisfiability,\nbecause all NP problems are",
    "start": "3571830",
    "end": "3577290"
  },
  {
    "text": "going to be\nreducible to the SAT. And the other thing too\nis that, once we start--",
    "start": "3577290",
    "end": "3586130"
  },
  {
    "text": "we want to show other\nproblems are undecidable, we reduced ATM to them. And that's also very similar.",
    "start": "3586130",
    "end": "3591839"
  },
  {
    "text": "We're going to be\nreducing SAT or 3SAT-- so it's indirectly from SAT--",
    "start": "3591840",
    "end": "3597140"
  },
  {
    "text": "to other problems\nin order to show that there shouldn't\nNP complete, so that they're hard-- that they're hard, in a sense.",
    "start": "3597140",
    "end": "3604109"
  },
  {
    "text": "And so in both those\nways, ATM and SAT are kind of playing\nsimilar roles.",
    "start": "3604110",
    "end": "3610820"
  },
  {
    "text": "One key difference,\nhowever, between ATM and SAT is in that for ATM, we can\nprove that it's undecidable,",
    "start": "3610820",
    "end": "3620990"
  },
  {
    "text": "but for SAT, we don't\nknow how to prove it's outside of P. Those would\nbe the analogous situations.",
    "start": "3620990",
    "end": "3630520"
  },
  {
    "text": "And so the story for\nSAT, which is easily",
    "start": "3630520",
    "end": "3636690"
  },
  {
    "text": "solved by a diagonalization\nargument for ATM-- there's reasons to believe--\nthat we will see later--",
    "start": "3636690",
    "end": "3643600"
  },
  {
    "text": "that the diagonalization is\nnot going to work to prove SAT outside of P. And besides\nthat, we don't really",
    "start": "3643600",
    "end": "3651520"
  },
  {
    "text": "have any good methods. So anyway, let's move on.",
    "start": "3651520",
    "end": "3660680"
  },
  {
    "text": "Why is ETM less analogous? Because the ATM was the first\nproblem we showed undecidable,",
    "start": "3660680",
    "end": "3667720"
  },
  {
    "text": "and SAT is the first\nproblem that we're going to be showing NP complete. I guess that would be my answer.",
    "start": "3667720",
    "end": "3675650"
  },
  {
    "text": "OK, let's continue. So let's show now that\nHAMPATH is NP complete,",
    "start": "3675650",
    "end": "3682329"
  },
  {
    "text": "assuming that we know SAT\nor 3SAT is NP complete. So we're going to give a\nreduction from 3SAT to HAMPATH.",
    "start": "3682330",
    "end": "3691660"
  },
  {
    "text": "That's what this is about. It's just like what we did for\nclique, but now for HAMPATH. ",
    "start": "3691660",
    "end": "3698070"
  },
  {
    "text": "And this is going\nto be very typical. In these reductions,\ntypically what",
    "start": "3698070",
    "end": "3703700"
  },
  {
    "text": "happens is that you're trying\nto simulate a formula--",
    "start": "3703700",
    "end": "3710849"
  },
  {
    "text": "Boolean formula for\nsatisfiability-- from the satisfiability\nperspective. You're trying to\nsimulate that formula",
    "start": "3710850",
    "end": "3716820"
  },
  {
    "text": "with some sort of structures\ninside the target language, which would be HAMPATH.",
    "start": "3716820",
    "end": "3723619"
  },
  {
    "text": "The lingo that people\nuse is that you're going to build\ngadgets to simulate",
    "start": "3723620",
    "end": "3728810"
  },
  {
    "text": "the structures in the formula-- namely, the variables, the\nliterals, and the clauses.",
    "start": "3728810",
    "end": "3734494"
  },
  {
    "text": " OK, these are going to be\nsubstructures of the graph,",
    "start": "3734495",
    "end": "3743510"
  },
  {
    "text": "in this case, that\nyou're building. We'll see what that means. So let's take a formula\nhere and let's, again,",
    "start": "3743510",
    "end": "3752420"
  },
  {
    "text": "try to imagine how\nwe would reduce that to the HAMPATH problem. So the reduction would\nproduce a graph--",
    "start": "3752420",
    "end": "3759370"
  },
  {
    "text": "no, it would produce an HAMPATH\ninstance-- so a G, s, and t. Want to know, is there a\nHamiltonian path from s",
    "start": "3759370",
    "end": "3765260"
  },
  {
    "text": "to t in the graph? And this is going to\nbe not the whole graph,",
    "start": "3765260",
    "end": "3770800"
  },
  {
    "text": "but this is going to be a\nsubstructure in that graph. The next slide is going to\nhave the global structure of the graph.",
    "start": "3770800",
    "end": "3777177"
  },
  {
    "text": "But here, this is going\nto be a key element, and we're going to call\nthat the variable gadget.",
    "start": "3777177",
    "end": "3782325"
  },
  {
    "text": " OK, what does it look like? I don't know if you\ncan see it on your--",
    "start": "3782325",
    "end": "3789750"
  },
  {
    "text": "clearly enough,\nbut these edges--",
    "start": "3789750",
    "end": "3795540"
  },
  {
    "text": "so there are four\noutside nodes here. The edges connecting them are\nall kind of pointed downward. And then there were these\nhorizontal nodes here,",
    "start": "3795540",
    "end": "3802970"
  },
  {
    "text": "and there are edges\nconnecting them both left to right and to left. ",
    "start": "3802970",
    "end": "3809060"
  },
  {
    "text": "There's a row of these\nhorizontal nodes. OK, so you get the picture\nof what this looks like?",
    "start": "3809060",
    "end": "3815138"
  },
  {
    "text": "You have to look carefully\nto see the arrowheads. I maybe should have made\nthose a little bigger.",
    "start": "3815138",
    "end": "3820240"
  },
  {
    "text": " Whoops-- so now, if we're trying\nto get from this node to that",
    "start": "3820240",
    "end": "3830640"
  },
  {
    "text": "node-- imagine now you're trying\nto build a Hamiltonian path, because this is going to\nbe a part of that graph G",
    "start": "3830640",
    "end": "3839470"
  },
  {
    "text": "that I'm constructing. Now, remember, for\nthem-- for there to be a Hamiltonian\ngraph, that means",
    "start": "3839470",
    "end": "3845740"
  },
  {
    "text": "you have to go through\nevery node in the graph.",
    "start": "3845740",
    "end": "3851660"
  },
  {
    "text": "So if I want to get from\ns to t, the only way",
    "start": "3851660",
    "end": "3857359"
  },
  {
    "text": "I'm going to be able to go-- to\nhit these horizontal nodes here",
    "start": "3857360",
    "end": "3863120"
  },
  {
    "text": "is by picking them up\nas I go from s to t.",
    "start": "3863120",
    "end": "3872620"
  },
  {
    "text": "So the only possibility is--\nif you think about it, is-- would be for the sequence to\ngo like this, if you can--",
    "start": "3872620",
    "end": "3883490"
  },
  {
    "text": "if that comes through for you. So the path would go\nfrom s to this node, and then through these hops of--",
    "start": "3883490",
    "end": "3891290"
  },
  {
    "text": "along these horizontal nodes,\nand then down to the bottom node here.",
    "start": "3891290",
    "end": "3896330"
  },
  {
    "text": "So that's one way that you can\nget from here down to there and pick up all the other\nnodes along the way, which",
    "start": "3896330",
    "end": "3902330"
  },
  {
    "text": "is-- they're not going to\nhave any other possibility-- possible ways of\ngetting to them. So I'm going to\ncall that a zig-zag.",
    "start": "3902330",
    "end": "3910345"
  },
  {
    "text": "OK? But there's another\nway to get from s to the bottom node,\nwhich is going to be",
    "start": "3910345",
    "end": "3918540"
  },
  {
    "text": "by doing sort of the dual-- going to the right, then\ngoing out to the left,",
    "start": "3918540",
    "end": "3924740"
  },
  {
    "text": "and then down to the bottom. I'm going to call\nthat a zig-zig-- ",
    "start": "3924740",
    "end": "3935589"
  },
  {
    "text": "and with a little\ndiagram here just to summarize what it means. And this is the classic\nthing for a variable gadget,",
    "start": "3935590",
    "end": "3944800"
  },
  {
    "text": "because it's a\nstructure that when you're trying to think about how\nthe object that you're asking",
    "start": "3944800",
    "end": "3952840"
  },
  {
    "text": "whether it exists or not-- the Hamiltonian path-- how\nit relates to that object, it's going to have two\npossibilities, which",
    "start": "3952840",
    "end": "3959140"
  },
  {
    "text": "are going to correspond\nto the variable being set true or false in the formula.",
    "start": "3959140",
    "end": "3964549"
  },
  {
    "text": "So we're showing\nhow to set the-- simulate the variable in\nthis HAMPATH instance.",
    "start": "3964550",
    "end": "3972164"
  },
  {
    "text": " So setting the variable\nis going to correspond",
    "start": "3972165",
    "end": "3977680"
  },
  {
    "text": "to constructing the path.",
    "start": "3977680",
    "end": "3982910"
  },
  {
    "text": "OK? Now, we also have to make sure\nnot only that the variable gets",
    "start": "3982910",
    "end": "3987920"
  },
  {
    "text": "set to true or false, but that\nit gets a set of true and false in a way that makes this a\nsatisfying assignment-- namely,",
    "start": "3987920",
    "end": "3995029"
  },
  {
    "text": "that we get one true\nliteral in every clause. So I'm going to add\nanother gadget here called",
    "start": "3995030",
    "end": "4000830"
  },
  {
    "text": "a clause gadget, which\nis just a single node. ",
    "start": "4000830",
    "end": "4007520"
  },
  {
    "text": "And visiting that\nnode here is going to correspond to\nsatisfying that clause,",
    "start": "4007520",
    "end": "4015063"
  },
  {
    "text": "to having a true\nliteral in that clause. ",
    "start": "4015063",
    "end": "4020140"
  },
  {
    "text": "I'm going to have\n[? enabled ?] a detour from these horizontal nodes\nout to this clause gadget.",
    "start": "4020140",
    "end": "4028090"
  },
  {
    "text": "So here it is. Here's that detour. As I'm going from left to\nright, I can-- instead of",
    "start": "4028090",
    "end": "4036589"
  },
  {
    "text": "doing a single jump\nhere, I could branch out and visit that clause\nnode, and then come back,",
    "start": "4036590",
    "end": "4043490"
  },
  {
    "text": "and pick up my left to right\npath, as I was doing before.",
    "start": "4043490",
    "end": "4048665"
  },
  {
    "text": " I hope you're seeing\nthe big picture,",
    "start": "4048665",
    "end": "4055910"
  },
  {
    "text": "because this has to\nbe a Hamiltonian path. It has to hit every node. That's one of the requirements.",
    "start": "4055910",
    "end": "4062410"
  },
  {
    "text": "This is going to be one\nof the nodes in my graph. The path has got\nto hit that node. The only way it's going to\nbe able to hit that node",
    "start": "4062410",
    "end": "4069310"
  },
  {
    "text": "is by taking a detour off of\nthis horizontal path here.",
    "start": "4069310",
    "end": "4075120"
  },
  {
    "text": "But notice-- and\nthis is the key--",
    "start": "4075120",
    "end": "4080270"
  },
  {
    "text": "if I'm doing a zig-zag, then I\ncan make the detour and visit that clause gadget--",
    "start": "4080270",
    "end": "4086080"
  },
  {
    "text": "that clause node. But if I'm doing a zag-zig, the\nway this detour is structured",
    "start": "4086080",
    "end": "4092880"
  },
  {
    "text": "does not allow me\nto visit that node, because if I'm going\nfrom to right left here,",
    "start": "4092880",
    "end": "4100170"
  },
  {
    "text": "by the time I get to\nthis outgoing edge-- now I want to come back--",
    "start": "4100170",
    "end": "4106920"
  },
  {
    "text": "that note has\nalready been taken. It only works if\nI'm going zag-zig,",
    "start": "4106920",
    "end": "4113240"
  },
  {
    "text": "if I'm going from\nright to left-- left to right. If I'm going from left to\nright, then I can do it,",
    "start": "4113240",
    "end": "4119131"
  },
  {
    "text": "but if I'm going\nright to left, no.  If you think of left--",
    "start": "4119132",
    "end": "4125089"
  },
  {
    "text": "the left to right\ndirection as true, that's going to correspond\nto that variable appearing in the positive\nway in that clause,",
    "start": "4125090",
    "end": "4132680"
  },
  {
    "text": "but not in the negative way. The negative way-- I\nwould reverse in and out",
    "start": "4132680",
    "end": "4138560"
  },
  {
    "text": "of the detour, flip\nthat around so now I could only do the detour\nwhen I'm going right to left,",
    "start": "4138560",
    "end": "4146140"
  },
  {
    "text": "instead of left to right. I hope you get the picture. This is how the\nstructure is working. Now what's only left for me\nto do is put it all together.",
    "start": "4146140",
    "end": "4153080"
  },
  {
    "text": "But this slide contains the\nguts of what's happening.",
    "start": "4153080",
    "end": "4160150"
  },
  {
    "text": "Is there any question that I\ncan answer for you on this? ",
    "start": "4160150",
    "end": "4168493"
  },
  {
    "text": "Let's move on to the next slide,\nand then, as questions come up, you can be typing them in, and\nwe can maybe answer it there.",
    "start": "4168493",
    "end": "4174490"
  },
  {
    "text": "OK, so here is the big picture. So imagine we have that\nformula that we're start--",
    "start": "4174490",
    "end": "4182637"
  },
  {
    "text": "we're reducing that formula. ",
    "start": "4182638",
    "end": "4194890"
  },
  {
    "text": "And let's say it has m\nvariables and k clauses. I'm going to call them\nclause c1, c2, up to ck--",
    "start": "4194890",
    "end": "4202290"
  },
  {
    "text": "here, the m variables\nappearing either positively or negated in that formula.",
    "start": "4202290",
    "end": "4211170"
  },
  {
    "text": "And this is the way the\nglobal structure of G is going to look like. Now, I'm getting\na question here. What do those horizontal\nnodes-- what role do they play?",
    "start": "4211170",
    "end": "4220140"
  },
  {
    "text": "Those nodes are there to\nallow me to visit those clause",
    "start": "4220140",
    "end": "4226440"
  },
  {
    "text": "nodes, the nodes which represent\nthe clause gadgets, which I'm going to place over here.",
    "start": "4226440",
    "end": "4231540"
  },
  {
    "start": "4231540",
    "end": "4239070"
  },
  {
    "text": "This is almost a whole of G.\nI'm just missing a few edges, but these are all\nthe nodes of G.",
    "start": "4239070",
    "end": "4245060"
  },
  {
    "text": "So remember, I'm\ntrying to find out, is there a Hamiltonian\npath from s to t?",
    "start": "4245060",
    "end": "4252080"
  },
  {
    "text": "Now, if I didn't have to\nworry about these nodes, the answer would be just yes.",
    "start": "4252080",
    "end": "4257090"
  },
  {
    "text": " In fact, there would be many\nHamiltonian paths from s to t,",
    "start": "4257090",
    "end": "4262530"
  },
  {
    "text": "because I can do a\nzig-zag or a zig-zag through each of these\nvariable gadgets,",
    "start": "4262530",
    "end": "4267630"
  },
  {
    "text": "and that would take me from\ns to t, and I'd be good. It's just the c nodes, these\nnodes-- these ci nodes--",
    "start": "4267630",
    "end": "4276099"
  },
  {
    "text": "I have to hit them too. So they're going to be-- ",
    "start": "4276100",
    "end": "4284110"
  },
  {
    "text": "visiting them is going to be\nenabled by detours from here. So let me just try to show\nyou what that looks like.",
    "start": "4284110",
    "end": "4290300"
  },
  {
    "text": "So I'm going to magnify little\npieces here from these gadgets",
    "start": "4290300",
    "end": "4295360"
  },
  {
    "text": "here and show you how these\nguys are connected up. So here is the x1 gadget.",
    "start": "4295360",
    "end": "4303970"
  },
  {
    "text": "So x1 appears positively in c1. Here's x1 and c1.",
    "start": "4303970",
    "end": "4310239"
  },
  {
    "text": "And so that means, when\nI'm going left to right, I'm going to be a\npossibility of visiting c1.",
    "start": "4310240",
    "end": "4317155"
  },
  {
    "text": " But now, let's look\nwhat happens with--",
    "start": "4317155",
    "end": "4323980"
  },
  {
    "start": "4323980",
    "end": "4331150"
  },
  {
    "text": "which was the next\none I had here? ",
    "start": "4331150",
    "end": "4336380"
  },
  {
    "text": "OK. ",
    "start": "4336380",
    "end": "4343500"
  },
  {
    "text": "Right. So the next one is-- oh, yeah. So x1 appears positively in c1.",
    "start": "4343500",
    "end": "4349350"
  },
  {
    "text": "That's why I have the\nconnection like this. Now, x1 appears negated in\nc2, so I only want to do--",
    "start": "4349350",
    "end": "4362430"
  },
  {
    "text": "enable the detour\nto visit c2 when I'm going to left, as\nopposed to left to right.",
    "start": "4362430",
    "end": "4369940"
  },
  {
    "text": "So this set of\nhorizontal nodes is only",
    "start": "4369940",
    "end": "4376860"
  },
  {
    "text": "going to allow me to take\na detour either out to c1 or out to c2, but not to\nboth, because the Hamiltonian",
    "start": "4376860",
    "end": "4385150"
  },
  {
    "text": "path is either going to go\nleft or right or to left. It can't do both, when it's\ngoing through the x1 gadget.",
    "start": "4385150",
    "end": "4394040"
  },
  {
    "text": "You need to-- [INAUDIBLE] I'll try\nto help you through it, but you have to try to think\nabout why it's working.",
    "start": "4394040",
    "end": "4401600"
  },
  {
    "text": "Let's think together. So x2 also appears in c1,\nbut now it appears negated.",
    "start": "4401600",
    "end": "4411980"
  },
  {
    "text": "So I'm going to have edges\nfrom this x2 gadget--",
    "start": "4411980",
    "end": "4418010"
  },
  {
    "text": "oops-- the x2 gadget, but\nnow look at the-- look",
    "start": "4418010",
    "end": "4423349"
  },
  {
    "text": "at how I've arranged\nthat detour. I can leave on the\nleft leftward side",
    "start": "4423350",
    "end": "4429140"
  },
  {
    "text": "and return on the\nright side, which means I can only do that\ndetour when I'm going to left.",
    "start": "4429140",
    "end": "4437000"
  },
  {
    "text": " And that's because\nx2 is negated in c1.",
    "start": "4437000",
    "end": "4443030"
  },
  {
    "text": " Maybe it's a lot here, if\nyou're not quite getting it,",
    "start": "4443030",
    "end": "4449680"
  },
  {
    "text": "but the point is, let's say,\ntry to quickly prove-- so that's the whole construction. You just do that for\nevery single appearance",
    "start": "4449680",
    "end": "4457780"
  },
  {
    "text": "of the literal in a clause. You're going to add\nthese detours, which allow you possibly to\ngo visit the clause.",
    "start": "4457780",
    "end": "4468860"
  },
  {
    "text": "So the forward direction is-- why is this true?",
    "start": "4468860",
    "end": "4474080"
  },
  {
    "text": "So you take any satisfying\nassignment, as I suggested, make the corresponding\nzig-zags or zag-zigs",
    "start": "4474080",
    "end": "4480090"
  },
  {
    "text": "through the variable\ngadgets from s to t, and then take the detours\nto visit the clause nodes.",
    "start": "4480090",
    "end": "4486550"
  },
  {
    "text": " The reverse direction\nactually is slightly trickier.",
    "start": "4486550",
    "end": "4494230"
  },
  {
    "text": "We're not going to have time to\ngo through the subtlety of it, but what you want\nto make sure here",
    "start": "4494230",
    "end": "4501780"
  },
  {
    "text": "is that you don't have a weird\npath occurring, because I'm",
    "start": "4501780",
    "end": "4508619"
  },
  {
    "text": "going to start with\na Hamiltonian path now and build an assignment. And we want to make sure that\nthe path that I'm constructing",
    "start": "4508620",
    "end": "4517050"
  },
  {
    "text": "doesn't go from one--\nfrom this horizontal nodes to a closed node, and then\nback to somebody else's",
    "start": "4517050",
    "end": "4526140"
  },
  {
    "text": "horizontal nodes, and is kind\nof a hodgepodge of things which",
    "start": "4526140",
    "end": "4531570"
  },
  {
    "text": "don't make any sense in trying\nto reconstruct a satisfying assignment. What you really\nwant to have happen",
    "start": "4531570",
    "end": "4537030"
  },
  {
    "text": "is the Hamiltonian path\nshould have clear zig-zags and zags-zigs that\nallow you to decide",
    "start": "4537030",
    "end": "4543630"
  },
  {
    "text": "how to set the variables. And so that's the role of\nthese little nodes here.",
    "start": "4543630",
    "end": "4548760"
  },
  {
    "text": "These are spacers that separate\nthe detours from one another, and that force a visit\nto the clause node",
    "start": "4548760",
    "end": "4559260"
  },
  {
    "text": "to come back to the same\nplace from which it left.",
    "start": "4559260",
    "end": "4565280"
  },
  {
    "text": "Otherwise, you would never\nbe able to visit those spacer nodes. You have to look in\nthe book for that,",
    "start": "4565280",
    "end": "4571860"
  },
  {
    "text": "but there is a little\nbit of a detail that you have to go through. You have to show it must\nbe zig-zags and zag-zigs,",
    "start": "4571860",
    "end": "4578449"
  },
  {
    "text": "and then you get the\ncorresponding truth assignment, and it must satisfy\nphi for all paths.",
    "start": "4578450",
    "end": "4584180"
  },
  {
    "text": "OK. Again, the reduction is\npolynomial time computable. I'm not going to\nsay more about that.",
    "start": "4584180",
    "end": "4590602"
  },
  {
    "text": "We're a little bit low on time. Last check-in-- would\nthis construction still",
    "start": "4590602",
    "end": "4597770"
  },
  {
    "text": "work if G was undirected? Suppose I just eliminated all\nthe directions from the edges,",
    "start": "4597770",
    "end": "4605440"
  },
  {
    "text": "made them lines,\ninstead of arrows. Would that now show that the\nundirected Hamiltonian path",
    "start": "4605440",
    "end": "4611170"
  },
  {
    "text": "problem is NP complete? Let me see.",
    "start": "4611170",
    "end": "4617540"
  },
  {
    "text": "OK, what do the c\nnodes represent here? There's one c node\nfor every clause.",
    "start": "4617540",
    "end": "4624780"
  },
  {
    "text": "So there are k clauses named c1\nto ck, and there are k c nodes.",
    "start": "4624780",
    "end": "4632039"
  },
  {
    "text": "These are the so-called\nclause gadgets, which are going to\nforce there to be",
    "start": "4632040",
    "end": "4638830"
  },
  {
    "text": "one true literal in every clause\nfor the satisfying assignment.",
    "start": "4638830",
    "end": "4645880"
  },
  {
    "start": "4645880",
    "end": "4653665"
  },
  {
    "text": "You have to look at it, or maybe\nwe can spend a little bit more time explaining it, but\nthat's what the purpose is.",
    "start": "4653665",
    "end": "4659800"
  },
  {
    "start": "4659800",
    "end": "4664880"
  },
  {
    "text": "Does that mean we need\nonly two inside nodes? ",
    "start": "4664880",
    "end": "4671000"
  },
  {
    "text": "So the horizontal nodes--\ndo we only need two of them? You won't be able to reuse these\nnodes for multiple detours.",
    "start": "4671000",
    "end": "4680230"
  },
  {
    "text": "For one thing, once\nyou've gone to a detour, you come back to the node\nnext over, and so you better",
    "start": "4680230",
    "end": "4686770"
  },
  {
    "text": "not overlay multiple detours.  And also, you need to keep\nthem separated from each other.",
    "start": "4686770",
    "end": "4696930"
  },
  {
    "text": "Don't forget, this\nnode x1 can appear in many, many different\nclauses, so you",
    "start": "4696930",
    "end": "4704900"
  },
  {
    "text": "would need to have possibly\nmany of these horizontal nodes.",
    "start": "4704900",
    "end": "4711085"
  },
  {
    "text": " So someone now says 2k\ninside nodes would suffice.",
    "start": "4711085",
    "end": "4718580"
  },
  {
    "text": "Probably 2k-- I would\nsay 3k, just to be safe for the spacer nodes. You need to look carefully\nat the argument, which",
    "start": "4718580",
    "end": "4725150"
  },
  {
    "text": "is laid out in the textbook. You may not actually\nneed the spacer nodes, but then it makes the\nargument just more ugly.",
    "start": "4725150",
    "end": "4732860"
  },
  {
    "text": "So the way the\nconstruction is done is you have 3k inside nodes.",
    "start": "4732860",
    "end": "4738155"
  },
  {
    "text": " OK. Again, several\nquestions like that--",
    "start": "4738155",
    "end": "4746190"
  },
  {
    "text": "the graph would start looking\nmessy if x9 was in c1.",
    "start": "4746190",
    "end": "4751590"
  },
  {
    "text": "Yeah, if x9 down here was in c1? Yeah, it would be messy.",
    "start": "4751590",
    "end": "4757140"
  },
  {
    "text": "It's OK. Messy is allowed. All right, I think we're--",
    "start": "4757140",
    "end": "4762210"
  },
  {
    "text": "let's end the polling. Are you all in? All right-- share results.",
    "start": "4762210",
    "end": "4769420"
  },
  {
    "text": "Yes. The answer's no. The construction depends\non this being directed.",
    "start": "4769420",
    "end": "4776440"
  },
  {
    "text": "You can see that all over\nthe place, but for one thing, the whole point of these detours\nis the directions of the edges.",
    "start": "4776440",
    "end": "4787150"
  },
  {
    "text": "And so without that,\nthis construction is going to be just a bunch of--",
    "start": "4787150",
    "end": "4793150"
  },
  {
    "text": "is not going to mean anything. It's not going to\nprove anything. It's probably\nalways going to be--",
    "start": "4793150",
    "end": "4799080"
  },
  {
    "text": "have a Hamiltonian path\nwithout the directions. So I think we're out of time.",
    "start": "4799080",
    "end": "4804745"
  },
  {
    "text": " A quick review-- these are\nthe topics we've covered.",
    "start": "4804745",
    "end": "4812160"
  },
  {
    "text": "I think we're out of time,\nso I should let you go. But I'll stick around for a\nfew minutes, in case any of you",
    "start": "4812160",
    "end": "4819438"
  },
  {
    "text": "have any questions. But I need to run off at 4:00\nmyself for another meeting, so I don't have\nmuch that much time.",
    "start": "4819438",
    "end": "4825347"
  },
  {
    "text": "Clarify my comment about\npicking the wrong problem to tackle P versus NP, when I\nused composites as an example--",
    "start": "4825347",
    "end": "4834440"
  },
  {
    "text": "if I worked hard to prove\nthat composites is not in P as a way of proving that\nthere is some NP language which",
    "start": "4834440",
    "end": "4841010"
  },
  {
    "text": "is not in P, that would\nhave been a mistake, because composites\nis in P. I would",
    "start": "4841010",
    "end": "4848719"
  },
  {
    "text": "have been working hard to\nprove something which we now know was false. So we don't want to spend time\nworking on the wrong language.",
    "start": "4848720",
    "end": "4856755"
  },
  {
    "text": " But the nice thing about\nNP complete languages is that we have a guarantee\nthat, if P's different from NP,",
    "start": "4856755",
    "end": "4864840"
  },
  {
    "text": "that that language is\nnot in P. Are there problems that are not\nin P that are in NP,",
    "start": "4864840",
    "end": "4870730"
  },
  {
    "text": "but are not NP complete? Oh, that's a good question.  Are there problems in\nbetween P and NP complete?",
    "start": "4870730",
    "end": "4880300"
  },
  {
    "text": "So NP complete is sort of like\nthe hardest problems in NP, and the P problems are\nobviously the easy problems",
    "start": "4880300",
    "end": "4886330"
  },
  {
    "text": "that are in NP. Is everything either\nNP complete or in P? ",
    "start": "4886330",
    "end": "4893800"
  },
  {
    "text": "So for one thing, there\nare problems that are not known to be in either category.",
    "start": "4893800",
    "end": "4899050"
  },
  {
    "text": " So we'll discuss some of those\nin due course, but one of them",
    "start": "4899050",
    "end": "4905740"
  },
  {
    "text": "is the graph\nisomorphism problem, testing two graphs-- if they're\nreally just permutations of one",
    "start": "4905740",
    "end": "4911140"
  },
  {
    "text": "another. It's clearly a problem in\nNP, but not known to be in P. So there are\nproblems that are not",
    "start": "4911140",
    "end": "4918070"
  },
  {
    "text": "known to be either\nNP complete or in P, so there are problems\nthat might be in between.",
    "start": "4918070",
    "end": "4923800"
  },
  {
    "text": "But then there was\nanother theorem out there, which says that,\nif you assume that P is differ",
    "start": "4923800",
    "end": "4929020"
  },
  {
    "text": "from NP, then you can construct\nproblems which are in between, which are neither NP complete\nnor in P. They're NP, problems",
    "start": "4929020",
    "end": "4938110"
  },
  {
    "text": "but they're not NP complete,\nnot in P. So those problems",
    "start": "4938110",
    "end": "4943210"
  },
  {
    "text": "themselves are perhaps\nsomewhat artificial, but they at least\nprove the point that it is possible to have\nthese intermediate problems.",
    "start": "4943210",
    "end": "4950260"
  },
  {
    "text": " Oh, so somebody's asking,\nisn't factorization one.",
    "start": "4950260",
    "end": "4956530"
  },
  {
    "text": "Not [? known-- ?] for the\ncase of factorization--",
    "start": "4956530",
    "end": "4961900"
  },
  {
    "text": "or you have to make a language\nout of that, by the way. ",
    "start": "4961900",
    "end": "4966940"
  },
  {
    "text": "But it's a because\nfactorization's a function,",
    "start": "4966940",
    "end": "4976130"
  },
  {
    "text": "so we won't really want to\nbe talking about languages. As the homework suggests, NP\nand P are classes of languages,",
    "start": "4976130",
    "end": "4983060"
  },
  {
    "text": "but OK, that's a\nseparate note there. Factorization is not known.",
    "start": "4983060",
    "end": "4991739"
  },
  {
    "text": "Factorization could be in P\nand it could be NP complete. Both of those are not ruled out.",
    "start": "4991740",
    "end": "5000659"
  },
  {
    "text": "So I think most\npeople would probably venture to guess that\nit's a problem that's in the in-between state, that's\nneither P nor NP complete,",
    "start": "5000660",
    "end": "5008489"
  },
  {
    "text": "but not known. ",
    "start": "5008490",
    "end": "5014510"
  },
  {
    "text": "Who first thought of this\nreduction from 3SAT to HAMPATH? It's so clever.",
    "start": "5014510",
    "end": "5019820"
  },
  {
    "text": "Well, it wasn't me. ",
    "start": "5019820",
    "end": "5026630"
  },
  {
    "text": "I think that is due\nto Dick Karp, who was one of my professors\nat Berkeley, where",
    "start": "5026630",
    "end": "5031820"
  },
  {
    "text": "I was a graduate student. That was done\nbefore I got there. It was around 1971 when--",
    "start": "5031820",
    "end": "5037880"
  },
  {
    "text": "so there were two famous papers. There's the Cook paper. There's also the Levin paper. That was in Russian.",
    "start": "5037880",
    "end": "5043430"
  },
  {
    "text": "That took a while for people to\ndiscover out here in the West. But the Cook paper was 1971, and\nvery quickly followed after--",
    "start": "5043430",
    "end": "5050240"
  },
  {
    "text": "he just showed SAT\nis NP complete, but after that, Karp was--",
    "start": "5050240",
    "end": "5058910"
  },
  {
    "text": "he had a paper\ncalled \"Reducibility Among Combinatorial\nProblems,\" and he had a list of about\n20 problems that he",
    "start": "5058910",
    "end": "5065659"
  },
  {
    "text": "showed were NP complete-- by reduction from SAT--",
    "start": "5065660",
    "end": "5071240"
  },
  {
    "text": "include clique, include HAMPATH,\nand a bunch of other things. ",
    "start": "5071240",
    "end": "5076970"
  },
  {
    "text": "And that was also a\nvery famous paper. Both of those are--",
    "start": "5076970",
    "end": "5081980"
  },
  {
    "text": "people often talk\nabout Cook-Karp as, together, they really\nshow the importance",
    "start": "5081980",
    "end": "5090094"
  },
  {
    "text": "of NP completeness and the\nwhole notion of NP completeness. ",
    "start": "5090095",
    "end": "5097370"
  },
  {
    "text": "Yeah, 21 problems, so-- yeah, so Karp proved 21\nwhen problems were NP complete in 1972.",
    "start": "5097370",
    "end": "5103830"
  },
  {
    "text": "So that was shortly\nafter Cook showed that SAT was NP complete.",
    "start": "5103830",
    "end": "5109350"
  },
  {
    "text": "Incidentally, I think the\nterminology NP complete wasn't around until a little later.",
    "start": "5109350",
    "end": "5116310"
  },
  {
    "text": "And that might have been--\nmight be due to Knuth. I'm not sure. I remember he did a\nbig poll of people",
    "start": "5116310",
    "end": "5123000"
  },
  {
    "text": "about what should be the right\nlanguage to use for that term, and I think he came up with it.",
    "start": "5123000",
    "end": "5128699"
  },
  {
    "text": " All right, I'm going\nto head off, guys. Nice seeing you all--",
    "start": "5128700",
    "end": "5135650"
  },
  {
    "text": "so until Thursday--\noh, until Tuesday. Bye bye. ",
    "start": "5135650",
    "end": "5152462"
  }
]