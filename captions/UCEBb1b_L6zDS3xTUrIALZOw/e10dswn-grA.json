[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6050"
  },
  {
    "text": "continue to offer high-quality\neducational resources for free. To make a donation or to\nview additional materials",
    "start": "6050",
    "end": "12690"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu. ",
    "start": "12690",
    "end": "26170"
  },
  {
    "text": "PROFESSOR: Welcome\nback to 6.890. Today, we will do many more\nhardness proofs, mostly",
    "start": "26170",
    "end": "31880"
  },
  {
    "text": "of games and puzzles and some\ngraph theoretic problems, all",
    "start": "31880",
    "end": "36950"
  },
  {
    "text": "reducing from 3SAT. We're going to continue where\nwe left off last time, which was with this picture,\nwhich also comes",
    "start": "36950",
    "end": "44190"
  },
  {
    "text": "from lecture 1, which is how to\nprove Super Mario Brothers is NP-hard. We had two main gadgets,\nthe variable gadget,",
    "start": "44190",
    "end": "50960"
  },
  {
    "text": "which forces your player to\nchoose going left or right, and the clause\ngadget, which could",
    "start": "50960",
    "end": "58330"
  },
  {
    "text": "be visited in three different\nways in order to enable it. These each contained\nan invincibility star,",
    "start": "58330",
    "end": "65069"
  },
  {
    "text": "so that if later, you come\nthrough to traverse the gadget, you can get through all\nthese fire bars if and only",
    "start": "65069",
    "end": "70270"
  },
  {
    "text": "if there was at\nleast one star there. So that was a\nregular 3SAT clause.",
    "start": "70270",
    "end": "75284"
  },
  {
    "text": "And then, there's the\nconnectivity in between. And so in particular, you\nneed a crossover gadget with this set-up.",
    "start": "75284",
    "end": "80520"
  },
  {
    "text": "But the general idea\nis you visit variable, visit all the clauses\nthat are in it that include that literal-- you\nget to choose only one-- then",
    "start": "80520",
    "end": "87619"
  },
  {
    "text": "you go to the next\nvariable, next variable. And then, you traverse\nall the clauses and you can get to\nfinish if and only if the 3SAT formula\nwas satisfiable.",
    "start": "87619",
    "end": "96240"
  },
  {
    "text": "This is a general\nconstruction or approach for platform video games.",
    "start": "96240",
    "end": "101550"
  },
  {
    "text": "That's what we were presenting\nit as in a recent paper. I thought I'd show you a few\nother Nintendo games you can",
    "start": "101550",
    "end": "109380"
  },
  {
    "text": "prove hard with this technique. This is the clause gadget\nfor Super Mario World.",
    "start": "109380",
    "end": "115900"
  },
  {
    "text": "So in Super Mario\nWorld, there are these great question-mark blocks\nand in particular, POW blocks,",
    "start": "115900",
    "end": "122979"
  },
  {
    "text": "which go back to the\noriginal Mario Brothers without the \"Super.\" How many people\nplayed Mario Brothers?",
    "start": "122980",
    "end": "129449"
  },
  {
    "text": "Really old-school,\npre-Super Mario. And anyway, it doesn't matter\nexactly where it comes from.",
    "start": "129449",
    "end": "135240"
  },
  {
    "text": "It does something completely\ndifferent in Super Mario World, which is turns all\ncoins into things",
    "start": "135240",
    "end": "141510"
  },
  {
    "text": "you can walk on for 10 seconds. But you can't normally\nhit a question-mark block",
    "start": "141510",
    "end": "146630"
  },
  {
    "text": "except from the bottom. There's no way to do that here. But if you can visit one\nof these three places,",
    "start": "146630",
    "end": "151840"
  },
  {
    "text": "you can send one of these\nturtle shells flying and it will hit this and bring\nthe POW block off and then",
    "start": "151840",
    "end": "157849"
  },
  {
    "text": "disappear, so that later when\nyou try to traverse this clause gadget, if there's a POW\nblock, you can turn these",
    "start": "157850",
    "end": "163100"
  },
  {
    "text": "into solid things for\nlong enough to get across but no longer than that. So in the next gadget, you need\nanother POW block, and so on.",
    "start": "163100",
    "end": "170660"
  },
  {
    "text": "So that's clause gadget\nfor Super Mario World. The other gadgets\nare pretty similar,",
    "start": "170660",
    "end": "176300"
  },
  {
    "text": "so I'll just show you that one. AUDIENCE: Does the\nstar trick not work? PROFESSOR: I guess you could\nalso do the star trick,",
    "start": "176300",
    "end": "183400"
  },
  {
    "text": "but I think we drew this figure\nbefore we did the star trick. So we thought, oh,\nthis is cooler. ",
    "start": "183400",
    "end": "191579"
  },
  {
    "text": "Now, one thing I thought\nI'd mention briefly is some fun glitches you can\ndo in the real Super Mario",
    "start": "191580",
    "end": "198480"
  },
  {
    "text": "Brothers, as\nimplemented on the ROMs. You can do these crazy things\nlike jump off of walls.",
    "start": "198480",
    "end": "205711"
  },
  {
    "text": "You're not supposed\nto be able to do this and this level would be\nunsolvable in the way you would normally think about\nSuper Mario Brothers,",
    "start": "205712",
    "end": "212430"
  },
  {
    "text": "but there happens to be this\nfun subpixel resolution. I think this is\nusually very hard to do",
    "start": "212430",
    "end": "219340"
  },
  {
    "text": "with a real controller,\nbut much easier to do when you can slow things\ndown 100 times and every frame,",
    "start": "219340",
    "end": "225780"
  },
  {
    "text": "you have a choice of whether\nto push a particular button. That's called tool-assisted\nspeed runs, usually.",
    "start": "225780",
    "end": "231370"
  },
  {
    "text": " I don't know if you consider\nthis real Super Mario",
    "start": "231370",
    "end": "236720"
  },
  {
    "text": "Brothers or not. It depends on your\nnotion of reality, whether you're more of a\nmathematician or a gamer, I guess.",
    "start": "236720",
    "end": "242680"
  },
  {
    "text": "But you can try to modify\nthe gadget so that wall jumping doesn't help you.",
    "start": "242680",
    "end": "248099"
  },
  {
    "text": "So you could imagine trying\nto jump up these walls. But if there's things in\nthe way, it prevents it. So if you just add that\nto every vertical tunnel,",
    "start": "248100",
    "end": "254850"
  },
  {
    "text": "that will prevent going\nback up the tunnels, which is important for the\nvariable gadgets. We don't want to be able\nto reverse our decision",
    "start": "254850",
    "end": "261600"
  },
  {
    "text": "and later choose the\nopposite variable setting. Here's another fun set of cheats\nwhere you jump through walls.",
    "start": "261600",
    "end": "271260"
  },
  {
    "text": "This one is apparently somewhat\ndoable on a real controller, but still quite challenging.",
    "start": "271260",
    "end": "278729"
  },
  {
    "text": "I think that one of\nthe general ideas is the collision detection\nis not super good in the game",
    "start": "278730",
    "end": "285050"
  },
  {
    "text": "as implemented. So if you get just\nthe right geometry, you can walk through the walls.",
    "start": "285050",
    "end": "291410"
  },
  {
    "text": "There's instructions for you. So this is obviously problematic\nbecause all of our gadgets",
    "start": "291410",
    "end": "297940"
  },
  {
    "text": "involve walls. So if you can walk through\nthem, not very interesting. So a general approach is to\njust add lots of monsters",
    "start": "297940",
    "end": "307020"
  },
  {
    "text": "into the walls. So even if you could walk\nthrough, you become small Mario and then that's not an option.",
    "start": "307020",
    "end": "313145"
  },
  {
    "text": "I should say these have\nnot been thoroughly tested, so it's plausible you can walk\nthrough the wall in such a way that maybe you kill the monster\nor there may be other glitches",
    "start": "313145",
    "end": "321120"
  },
  {
    "text": "that we don't know about. And so you might consider\nthis a work in progress. But generally, I would believe\nyou can modify the proof",
    "start": "321120",
    "end": "328930"
  },
  {
    "text": "to work on real Super Mario\nBrothers as implemented in real physics, of course,\ngeneralized to an n by n screen",
    "start": "328930",
    "end": "335470"
  },
  {
    "text": "and so on. What exactly you call\n\"real\" is challenging there.",
    "start": "335470",
    "end": "341780"
  },
  {
    "text": "But that's Super Mario\nBrothers-- just some more fun stuff in the paper.",
    "start": "341780",
    "end": "348100"
  },
  {
    "text": "Let me talk a little bit\nabout Legend of Zelda. This is what it looks like,\nin case you've never seen it. And this is the original\nLegend of Zelda.",
    "start": "348100",
    "end": "355406"
  },
  {
    "text": "You're a little character. You can walk around. And this is what I would say is\na typical block-pushing puzzle",
    "start": "355407",
    "end": "361169"
  },
  {
    "text": "in Legend of Zelda, which\nis try all the blocks and hope that one\nof then pushes.",
    "start": "361170",
    "end": "367190"
  },
  {
    "text": "And I have to say, I\nwatched an entire-- I don't know how long it was--\nfive hours of walkthrough",
    "start": "367190",
    "end": "374530"
  },
  {
    "text": "of Legend of Zelda\nwanting to find whether there are\nany more complicated block-pushing puzzles. I swear I remember a slightly\nmore complicated one,",
    "start": "374530",
    "end": "381260"
  },
  {
    "text": "but I could not find it. It's possible it skipped in\nthis particular walkthrough.",
    "start": "381260",
    "end": "386850"
  },
  {
    "text": "Well, it just takes a long time. But you get it. All right, we're almost done. You get an idea of\nwhat the game is like.",
    "start": "386850",
    "end": "394520"
  },
  {
    "text": "You've got a sword, whatever. That won't be particularly\nrelevant to our reductions. There will be no monsters\nin our reductions.",
    "start": "394520",
    "end": "399893"
  },
  {
    "text": "In this case, I think you just\nhave to wait a really long time or possibly kill the\nhand that comes out. Then, you can push that block.",
    "start": "399893",
    "end": "406110"
  },
  {
    "text": "He actually tried to\npush it in the beginning, but it wouldn't move. Anyway, that's Legend of Zelda. ",
    "start": "406110",
    "end": "413476"
  },
  {
    "text": "Here's a slightly\nmore interesting one. This is what I remember. Normally, you push one,\ntwo, three, and then you push this to the side.",
    "start": "413476",
    "end": "418860"
  },
  {
    "text": "In this particular case, blocks\nare not pushable sideways, which is really annoying. So you actually have to\nsolve it a different way.",
    "start": "418860",
    "end": "425301"
  },
  {
    "text": "If you watch this video, at this\npoint, he's like, oh, my god. This was the simplest\nblock-pushing puzzle ever",
    "start": "425301",
    "end": "432150"
  },
  {
    "text": "and I solved it. Yea! It's after half an hour\nof trying other things.",
    "start": "432150",
    "end": "439000"
  },
  {
    "text": "That's the joy of Legend\nof Zelda, very fun puzzles, so to speak.",
    "start": "439000",
    "end": "444720"
  },
  {
    "text": "So the point is, you have\nblock-pushing puzzles. We already know-- oh, sorry. Here's one more, I guess. These are in Legend of\nZelda-- A Link to the Past.",
    "start": "444720",
    "end": "452270"
  },
  {
    "text": "So it has a slightly\nmore com-- there's an actual slightly nontrivial\nblock-pushing puzzle.",
    "start": "452270",
    "end": "457480"
  },
  {
    "text": "But in general, we\nknow push-one is hard. Most versions of Legend of Zelda\nare slightly more restrictive",
    "start": "457480",
    "end": "465320"
  },
  {
    "text": "than push-one. I would call them\n\"push-once\" blocks, where you can only\npush one at a time.",
    "start": "465320",
    "end": "471980"
  },
  {
    "text": "That's your strength. But also, you can only\npush a block once. You can never push\nit a second time or push it back or do\nanything like that.",
    "start": "471980",
    "end": "478510"
  },
  {
    "text": "And with some slight-- this\nis the gadget we saw before. With some slight tweaks,\nyou can make the locks still",
    "start": "478510",
    "end": "484680"
  },
  {
    "text": "work when you're only allowed\nto push each block once. So that proves that most\nversions of Legend of Zelda",
    "start": "484680",
    "end": "491740"
  },
  {
    "text": "are at least NP-hard, because\nthey include block pushing. But it would be\nnice to understand",
    "start": "491740",
    "end": "499900"
  },
  {
    "text": "other senses in which\nthese kinds of games are hard without\nusing block pushing. So here's another feature\ncalled the hookshot.",
    "start": "499900",
    "end": "509370"
  },
  {
    "text": "So you select it\nand then if there's an object on the other side,\nyou can hookshot to that side.",
    "start": "509370",
    "end": "514690"
  },
  {
    "text": "So you can't walk\nover the cavern, but you can hookshot across. Here it is again. As long as there's an\nobject over there--",
    "start": "514690",
    "end": "520719"
  },
  {
    "text": "you can also pick up\nobjects and destroy them. So does that make it hard\nwith no pushing blocks?",
    "start": "520720",
    "end": "527440"
  },
  {
    "text": "Well, a little bit\nof pushing blocks. Here's a simple proof\nusing that structure.",
    "start": "527440",
    "end": "533140"
  },
  {
    "text": "So here's a variable. I go from top to bottom. You see over here a\ntreasure chest or something",
    "start": "533140",
    "end": "538850"
  },
  {
    "text": "that you can hookshot onto\nto go over the cavern. And here, you have a choice. You can go left or\nyou can go right,",
    "start": "538850",
    "end": "544120"
  },
  {
    "text": "but then you can't back up,\nbecause there's no object here to hookshot onto. You can only do it orthogonally.",
    "start": "544120",
    "end": "550560"
  },
  {
    "text": "Here's a clause. If you come down any\none of these paths, then you can push\nthis block one step.",
    "start": "550560",
    "end": "555970"
  },
  {
    "text": "And then, you'll be able\nto hookshot from the right to get onto this platform and\nthen continue to the left.",
    "start": "555970",
    "end": "562690"
  },
  {
    "text": "And a crossover is really\neasy in this world. So you could come up with\nlots of different NP-hardness",
    "start": "562690",
    "end": "568210"
  },
  {
    "text": "proofs. So this is a fun one\nfor A Link to the Past, which is the first game\nthat has that hookshot.",
    "start": "568210",
    "end": "574839"
  },
  {
    "text": "This is Metroid. If you've never played,\nmost of the time you spend going up and\ndown elevator shafts.",
    "start": "574840",
    "end": "580900"
  },
  {
    "text": "And there are these monsters\nwhich you can shoot. And then, there's\nalso this ability to become a one-by-one block\ninstead of a two-by-one block",
    "start": "580900",
    "end": "588290"
  },
  {
    "text": "and roll through small things. When you're in that position,\nin a certain part of the game,",
    "start": "588290",
    "end": "593300"
  },
  {
    "text": "you are not allowed to shoot. So that's the situation\nwe're going to imagine.",
    "start": "593300",
    "end": "599490"
  },
  {
    "text": "So here is a clause\nin a crossover. The variable gadget\nis the same as Mario. You fall left or fall right.",
    "start": "599490",
    "end": "605550"
  },
  {
    "text": "You can't go back up, because\nyou have a limited jump height. So let's do the clause first.",
    "start": "605550",
    "end": "611510"
  },
  {
    "text": "There are three different\nways to visit it. When you're setting your\nvariables, if you can get here,",
    "start": "611510",
    "end": "616980"
  },
  {
    "text": "you can aim upwards and just\nshoot all of these things. It would take a few\nminutes, but you'd get rid of all these guys.",
    "start": "616980",
    "end": "622730"
  },
  {
    "text": "These guys just walk\naround constantly. And then, to\ntraverse, you're going to be coming through\nhere in ball mode.",
    "start": "622730",
    "end": "629040"
  },
  {
    "text": "There's no way\nto-- I guess, here, you could briefly stand up,\nbut you can't shoot down in original Metroid. So you want to roll\nover here, but you",
    "start": "629040",
    "end": "635425"
  },
  {
    "text": "would take too much damage. You maybe only have\none hit point left, so if there's any\nof these guys left,",
    "start": "635425",
    "end": "640690"
  },
  {
    "text": "you have to visit at\nleast one of these to kill all the monsters\nand then get through. That's clause.",
    "start": "640690",
    "end": "646420"
  },
  {
    "text": "Crossover is a little\nmore challenging. In this case, we set things up--\nthe idea is you come in here",
    "start": "646420",
    "end": "653350"
  },
  {
    "text": "and you want to leave out there. So it's uni-directional. You can't go up in this gadget.",
    "start": "653350",
    "end": "659510"
  },
  {
    "text": "And the idea is\nthere's a little gap and it's moving this way as\nthe monsters move around.",
    "start": "659510",
    "end": "665330"
  },
  {
    "text": "So you wait for the\ngap to come here. Then, you go down\nand then, you're basically forced in timing\nwhen you fall down this cavern.",
    "start": "665330",
    "end": "673650"
  },
  {
    "text": "And it's set up so that by the\ntime this thing gets to here,",
    "start": "673650",
    "end": "679330"
  },
  {
    "text": "these guys will have\ncome to the other side. Then, you have to\nroll to the right in order to avoid taking\ndamage from these guys who",
    "start": "679330",
    "end": "685400"
  },
  {
    "text": "are going around the\nother way and similarly in the other direction. So you have to get the timing\nright and we haven't exactly",
    "start": "685400",
    "end": "692710"
  },
  {
    "text": "tested this yet, but it should\nbe approximately correct. And that will force a crossover.",
    "start": "692710",
    "end": "698670"
  },
  {
    "text": "Should be a simpler way, but\nthat's the best crossover we have currently. So Metroid is NP.",
    "start": "698670",
    "end": "705350"
  },
  {
    "text": "Here, we actually\nclaim NP-completeness, because there isn't too\nmuch state to the game.",
    "start": "705350",
    "end": "711800"
  },
  {
    "text": "So the issue here is the\nlength of a solution polynomial length. If it is, then it's\nin NP and NP-complete.",
    "start": "711800",
    "end": "720100"
  },
  {
    "text": "And here, you can kill\neach monster only once. So that's the idea for--\nand the amount of state",
    "start": "720100",
    "end": "727912"
  },
  {
    "text": "you have is just your position\nand what items you currently have. So you should be able\nto solve this in NP",
    "start": "727912",
    "end": "733024"
  },
  {
    "text": "and that sort of\nsettles the complexity. Most of these other problems\ncould potentially be harder than NP and we have\nsome other results",
    "start": "733024",
    "end": "739540"
  },
  {
    "text": "like that, which\nwe may get to when we're talking about PSPACE. But today is about NP.",
    "start": "739540",
    "end": "744706"
  },
  {
    "text": "Here's Donkey Kong Country. If you haven't played,\nthis is a speed run",
    "start": "744706",
    "end": "749820"
  },
  {
    "text": "and you can kill\nmonsters by rolling. Most of the time, you're\njumping and collecting bananas.",
    "start": "749820",
    "end": "757410"
  },
  {
    "text": "There are these bees\nthat if you touch them, you die or you sort of\nhave two hit points.",
    "start": "757410",
    "end": "763796"
  },
  {
    "text": "And then, there\nare these barrels you can pick up-- that's a\ngiant bee-- you can pick up certain barrels and then\nthrow them at a monster",
    "start": "763796",
    "end": "770079"
  },
  {
    "text": "and, in this case,\ndamage, usually kill them. Then, there are\nthese other types of barrels that\nwhen you touch them,",
    "start": "770080",
    "end": "775309"
  },
  {
    "text": "they shoot you in a\npredefined direction and let you collect\nlots of bananas. So those are the rules of\nDonkey Kong in a nutshell,",
    "start": "775309",
    "end": "783620"
  },
  {
    "text": "in a banana shell. AUDIENCE: In a banana peel? PROFESSOR: Sorry, in a\nbanana peel, thank you.",
    "start": "783620",
    "end": "789560"
  },
  {
    "text": "So here's a simple\ncrossover with that setup. You just have these\nbarrels that shoot you",
    "start": "789560",
    "end": "794890"
  },
  {
    "text": "in a predefined\ndirection and force you to go through\nthis intersection without any choice. When you're being\nshot, you cannot move.",
    "start": "794890",
    "end": "802080"
  },
  {
    "text": "So that's easy. Again, variables\nthe same as Mario, you fall left or fall right.",
    "start": "802080",
    "end": "807560"
  },
  {
    "text": "And a clause-- it's a little\nhard to see with the background here, but there's a\nlittle ledge here.",
    "start": "807560",
    "end": "813220"
  },
  {
    "text": "And you can come down this\nway, pick up this barrel, and throw it over here.",
    "start": "813220",
    "end": "819230"
  },
  {
    "text": "And it will eventually\nhit this bee, so that later, you can\ntraverse this gadget",
    "start": "819230",
    "end": "825390"
  },
  {
    "text": "without dying from the bee. So not drawn is a platform\nthat you need to-- or maybe",
    "start": "825390",
    "end": "830850"
  },
  {
    "text": "you're falling all the\nway through these things if you set up all the\nclauses vertically. And if there's any bee left,\nyou will die, otherwise not,",
    "start": "830850",
    "end": "837669"
  },
  {
    "text": "and so you have to\nvisit at least one of these three barrels\nto kill the bee. ",
    "start": "837669",
    "end": "844050"
  },
  {
    "text": "And I think this is a\nmechanism to prevent you from carrying this barrel\nanywhere else, like climbing up",
    "start": "844050",
    "end": "850340"
  },
  {
    "text": "or something. Anyway, that's\nDonkey Kong Country. I think there's\none more, Pokemon.",
    "start": "850340",
    "end": "858019"
  },
  {
    "text": "I'm kind of embarrassed. I've never actually\nplayed a Pokemon game. I don't know if I\nshould admit this, but I need to sit down and\nplay them all some weekend.",
    "start": "858020",
    "end": "867870"
  },
  {
    "text": "I did watch Twitch\nplay it for a while. AUDIENCE: Going back\nto the previous slide, in some of the other gadgets,\nif we satisfied a clause,",
    "start": "867870",
    "end": "878649"
  },
  {
    "text": "there was no way to--\nthere was a barrier",
    "start": "878650",
    "end": "884340"
  },
  {
    "text": "between setting the\nclause and going through the rest of that thing.",
    "start": "884340",
    "end": "889580"
  },
  {
    "text": "So potentially, you could\nget to the last clause here, kill the bee, and just\nwalk forward without-- can",
    "start": "889580",
    "end": "896480"
  },
  {
    "text": "we with the rest of the stuff? PROFESSOR: Good question.",
    "start": "896480",
    "end": "902890"
  },
  {
    "text": "Yeah, I think\nprobably the right way to set this up-- I'm not quite\nsure how to do it directly",
    "start": "902890",
    "end": "907970"
  },
  {
    "text": "from the drawing, but an easy\nway to do it would be there's no floor below here.",
    "start": "907970",
    "end": "913440"
  },
  {
    "text": "And at the end, when you\nsolved all the things, there is one of\nthese barrels that shoots you straight to the left\nuntil you get to the finish.",
    "start": "913440",
    "end": "921264"
  },
  {
    "text": "AUDIENCE: Ah. PROFESSOR: So if you tried\nto exit the clause early, you would just\nfall to your death, because there's only one barrel\nshooting way over on the right.",
    "start": "921264",
    "end": "928500"
  },
  {
    "text": "That would be one solution. I forget exactly\nwhat's in the paper, but it wouldn't surprise\nme if it's that. Yeah, good question.",
    "start": "928500",
    "end": "934320"
  },
  {
    "text": "You definitely don't want\nto be able to just visit the last clause, kill\nthe guy, and then exit. That would be cheating.",
    "start": "934320",
    "end": "942174"
  },
  {
    "text": "But in these proofs,\nthat's always what you have to worry about\nis this type of cheating. Other questions?",
    "start": "942174",
    "end": "948380"
  },
  {
    "text": "Cool. Pokemon time-- so Pokemon is\na somewhat complicated game.",
    "start": "948380",
    "end": "958387"
  },
  {
    "text": "It's a lot of different\nabilities and so on. So we had to abstract things\naway and in these pictures, there are two types\nof-- I haven't",
    "start": "958387",
    "end": "965630"
  },
  {
    "text": "defined any of the rules yet. You are a little person\nwalking around here.",
    "start": "965630",
    "end": "970900"
  },
  {
    "text": "You're carrying\nPokemon, whatever. And there are these\ncharacters called trainers and the red trainers\nare called \"weak\" trainers.",
    "start": "970900",
    "end": "980770"
  },
  {
    "text": "These are people\nthat when you visit, they just sort of deactivate. You beat them. And then, there's blue trainers.",
    "start": "980770",
    "end": "986373"
  },
  {
    "text": "We'll call them\n\"strong\" trainers. Those are ones that no\nmatter when or how you try to play them, you always die.",
    "start": "986374",
    "end": "992920"
  },
  {
    "text": "And so you fail, so you never\nwant to visit a blue trainer. Now, trainers have two\nkinds of-- let's talk",
    "start": "992920",
    "end": "999900"
  },
  {
    "text": "about variables maybe. This is an easy situation. So a variable, you want\nto come in the \"in\"",
    "start": "999900",
    "end": "1006429"
  },
  {
    "text": "and either leave in the\n\"false\" or leave in the \"true.\" And there are two ways\nto activate a trainer. One is to walk into their\nfield of view, which are",
    "start": "1006429",
    "end": "1013940"
  },
  {
    "text": "drawn with these rectangles. If you walk to this position,\nthe trainer will walk to you",
    "start": "1013940",
    "end": "1019070"
  },
  {
    "text": "and then you fight the trainer. And because it's\nred, you'll win.",
    "start": "1019070",
    "end": "1024099"
  },
  {
    "text": "And so in that case,\nthe trainers moved here. Trainers are obstacles, so you\ncan't get to the true anymore.",
    "start": "1024099",
    "end": "1029900"
  },
  {
    "text": "You have to go around to false. The other way you\ncan visit a trainer is to talk to them from\nthe side or from behind.",
    "start": "1029900",
    "end": "1036160"
  },
  {
    "text": "So you can walk here, talk\nto the trainer, beat them, then they deactivate. Then, you can walk this way.",
    "start": "1036160",
    "end": "1041599"
  },
  {
    "text": "And you can only\nfight them once. Then, it's over. They won't move anymore. So that forces you\nto do true or false",
    "start": "1041599",
    "end": "1047275"
  },
  {
    "text": "and then commit\nto that decision.  And these are obviously\nobstacles that are immovable.",
    "start": "1047275",
    "end": "1054530"
  },
  {
    "text": "All right. So the idea with the\nclause is the following.",
    "start": "1054530",
    "end": "1061090"
  },
  {
    "text": "When you're traversing\nthe clause at the end, you want to walk\nthrough here and leave.",
    "start": "1061090",
    "end": "1066110"
  },
  {
    "text": "And the worry is this position. If this trainer can come\nto you, you will die.",
    "start": "1066110",
    "end": "1074740"
  },
  {
    "text": "So that will be possible\nexactly when all of these guys",
    "start": "1074740",
    "end": "1081460"
  },
  {
    "text": "are out of the way. When will they come\nout of the way? When you walk through\nthem-- and none of them have been activated yet.",
    "start": "1081460",
    "end": "1087050"
  },
  {
    "text": "So then, they will\nwalk one space to you. You'll win, but it's temporary. You win the battle, lose the\nwar, because when you get here,",
    "start": "1087050",
    "end": "1094420"
  },
  {
    "text": "then this guy can walk through. But these serve as\nobstacles otherwise. So if you can come\ndown one of these paths",
    "start": "1094420",
    "end": "1101820"
  },
  {
    "text": "and visit the trainer\nearly, then later when you come through, they\nwill not move toward you. They will stay an obstacle for\nthis guy in, so this guy cannot",
    "start": "1101820",
    "end": "1108870"
  },
  {
    "text": "walk to you. This is just to make a barrier. And then, you can get through.",
    "start": "1108870",
    "end": "1116200"
  },
  {
    "text": "Crossover, you get\nthe idea, right? We could try to walk through\nit, but it's definitely",
    "start": "1116200",
    "end": "1122860"
  },
  {
    "text": "complicated. In general, we want to go from\nx to x prime or y to y prime. Again, it's directional.",
    "start": "1122860",
    "end": "1128941"
  },
  {
    "text": "And now that I know the\nright color assignment-- red is weak-- I would guess\nthis guy is an obstacle.",
    "start": "1128941",
    "end": "1138750"
  },
  {
    "text": "But as soon as you go this way,\nthis guy moves out of the way. So it kind of closes off\ntrying to return this way.",
    "start": "1138750",
    "end": "1145010"
  },
  {
    "text": "So once you come\nthrough here, this would be a problem to come back. So that kind of cuts\nyou off from going back",
    "start": "1145010",
    "end": "1150879"
  },
  {
    "text": "and it's kind of\nlike the crossover we saw with push-one\n2D, I believe.",
    "start": "1150880",
    "end": "1158139"
  },
  {
    "text": "Then, you probably go here. A similar thing happens.",
    "start": "1158140",
    "end": "1163980"
  },
  {
    "text": "This guy will approach, come to\nyou, and then you can escape.",
    "start": "1163980",
    "end": "1171020"
  },
  {
    "text": "When you get here, this guy\nwill come all the way down. Oh, that looks bad. AUDIENCE: Can you [INAUDIBLE]?",
    "start": "1171020",
    "end": "1176966"
  },
  {
    "text": "PROFESSOR: Yeah, so\nprobably we should have talked to him early. So then, we can come through\nhere without any trouble,",
    "start": "1176967",
    "end": "1182510"
  },
  {
    "text": "succeed in getting\ndown to y prime. You have to check that\nyou can't get to x prime. This looks like an impossible\nnexus to get through,",
    "start": "1182510",
    "end": "1188930"
  },
  {
    "text": "but these guys can walk through. That's the reason\nthey're there instead of just being obstacles. ",
    "start": "1188930",
    "end": "1196380"
  },
  {
    "text": "Left to right should be-- sorry? AUDIENCE: They can only see\nyou five or six tiles away. PROFESSOR: This is a\ngeneralized Pokemon.",
    "start": "1196380",
    "end": "1203920"
  },
  {
    "text": "Yeah, it would be nice. Obviously, this is a\nbounded visibility. It would be nice to\nget that down smaller,",
    "start": "1203920",
    "end": "1212710"
  },
  {
    "text": "but at least this shows\nconstant visibility is enough, because these gadgets\nare all local.",
    "start": "1212710",
    "end": "1219180"
  },
  {
    "text": "It would maybe also be nice. Are they all the\nsame visibility? AUDIENCE: Yeah, it's just\nsome fixed amount of tiles.",
    "start": "1219180",
    "end": "1224604"
  },
  {
    "text": "PROFESSOR: So it would be nice\nif they were also all the same. That does not currently hold,\nbut it wouldn't surprise me",
    "start": "1224604",
    "end": "1233360"
  },
  {
    "text": "if that-- well, yeah, tricky. All right.",
    "start": "1233360",
    "end": "1238660"
  },
  {
    "text": "I'll just mention for a\nlittle bit of Pokemon cred, this is one paragraph\nof our paper",
    "start": "1238660",
    "end": "1245549"
  },
  {
    "text": "where we construct the weak\nand the strong trainers",
    "start": "1245550",
    "end": "1254070"
  },
  {
    "text": "using exactly the setup that's\navailable in various Pokemon games. I believe in every\nsingle game there",
    "start": "1254070",
    "end": "1262160"
  },
  {
    "text": "are enough abilities that you\ncan set up so that you either force the bad guy to all\nhe can do is self-destruct",
    "start": "1262160",
    "end": "1269080"
  },
  {
    "text": "or all he can do is kill you and\nyou lose, that sort of thing.",
    "start": "1269080",
    "end": "1274140"
  },
  {
    "text": "But it requires some\nPokemon expertise which Alan Guo had in this case.",
    "start": "1274140",
    "end": "1280520"
  },
  {
    "text": "He's a PhD student\nin C-Cell here. ",
    "start": "1280520",
    "end": "1285710"
  },
  {
    "text": "Any other questions\nabout Nintendo games before we move on? AUDIENCE: This is a common\nsort of Pokemon specific.",
    "start": "1285710",
    "end": "1292180"
  },
  {
    "text": "In Generation One, moves\ncan miss with a one and two [INAUDIBLE] even if\ntheir accuracy is 100%.",
    "start": "1292180",
    "end": "1299344"
  },
  {
    "text": "Are you good with this?  AUDIENCE: It's self-destructing.",
    "start": "1299344",
    "end": "1305272"
  },
  {
    "text": "AUDIENCE: [INAUDIBLE]. AUDIENCE: The self-destruct\nmeans he doesn't die. AUDIENCE: No, the\nself-destruct doesn't matter whether he does damage, right?",
    "start": "1305272",
    "end": "1311679"
  },
  {
    "text": "It's just\nself-destruct, you die. AUDIENCE: I think self-destruct,\nthe death doesn't actually",
    "start": "1311680",
    "end": "1317050"
  },
  {
    "text": "happen if the attack misses. Can you? PROFESSOR: No, it does. It does. AUDIENCE: Really? OK. PROFESSOR: Yeah, it does.",
    "start": "1317050",
    "end": "1324370"
  },
  {
    "text": "We'll have to go play.  All right. The next game I'm\ngoing to talk about",
    "start": "1324370",
    "end": "1330290"
  },
  {
    "text": "is a sort of physical game\nthat you play on usually a go board with go stones.",
    "start": "1330290",
    "end": "1335970"
  },
  {
    "text": "So they're white stones\nand black stones. It was invented by\nthis guy, John Conway.",
    "start": "1335970",
    "end": "1341600"
  },
  {
    "text": "And so if you've ever played\nConway's Game of Life, that's a zero-player game. This is an actual two-player\ngame and quite challenging.",
    "start": "1341600",
    "end": "1348270"
  },
  {
    "text": "Here's the general idea. There's a right player trying\nto get the white ball-- that's",
    "start": "1348270",
    "end": "1353820"
  },
  {
    "text": "the \"football.\" This is philosophers'\nfootball, if you will. You're trying to get this\nball over to that goal",
    "start": "1353820",
    "end": "1360200"
  },
  {
    "text": "and the left player's trying to\nget the ball to the right goal. Then, there are these black\npieces, which are called \"men.\"",
    "start": "1360200",
    "end": "1365480"
  },
  {
    "text": "Those are the players of\nthe game, so to speak. And there are two types\nof moves in this game.",
    "start": "1365480",
    "end": "1371240"
  },
  {
    "text": "One move you can do is just\nplace a black stone anywhere on the board that's\ncurrently empty.",
    "start": "1371240",
    "end": "1377759"
  },
  {
    "text": "And the other type of move\nis the more complicated one. This is called\n\"kicking the ball.\" You can take the\nwhite piece and you",
    "start": "1377759",
    "end": "1384420"
  },
  {
    "text": "can jump it over a string\nof consecutive black pieces. Those pieces are\nimmediately removed,",
    "start": "1384420",
    "end": "1390130"
  },
  {
    "text": "so this gray shading\nmeans they've been removed from the board. But in the same move, you\ncan do several such jumps.",
    "start": "1390130",
    "end": "1397059"
  },
  {
    "text": "So I can jump here. Then, I can jump here. Then, I can jump here.",
    "start": "1397060",
    "end": "1402580"
  },
  {
    "text": "Then, I can jump here. And everything I jump\nover-- in this case, I won. If I'm the right player,\nI got to that position.",
    "start": "1402580",
    "end": "1409850"
  },
  {
    "text": "So this is why\nthe right player-- from the original\nposition, maybe they wanted to place this stone\nbecause that would enable",
    "start": "1409850",
    "end": "1416130"
  },
  {
    "text": "in their next move-- you\ncan't place a black stone and then jump. You can do one or the other. So you could try to\nplace this position,",
    "start": "1416130",
    "end": "1423040"
  },
  {
    "text": "place this stone hoping\nthat in your next turn, you'll be able to do\nthis jump and win.",
    "start": "1423040",
    "end": "1428580"
  },
  {
    "text": "But instead from this position,\nthe left player could say, oh, well, I'll just add this\nstone and then in my next move,",
    "start": "1428580",
    "end": "1436750"
  },
  {
    "text": "I'll be able to jump\nto the right side. And that's, I\nthink, unblockable. So left wins.",
    "start": "1436750",
    "end": "1443945"
  },
  {
    "text": "Yea!  So that's the setup.",
    "start": "1443945",
    "end": "1449190"
  },
  {
    "text": "This is a fairly\ncomplicated game. You can get to the same\nposition multiple times",
    "start": "1449190",
    "end": "1455530"
  },
  {
    "text": "and so it's actually open\nhow hard this game is. I think there's an\nupper bound of it",
    "start": "1455530",
    "end": "1460810"
  },
  {
    "text": "being solvable in exponential\ntime, so it's in EXP. AUDIENCE: What do you\nmean by \"solvable?\" PROFESSOR: So given\na position, you",
    "start": "1460810",
    "end": "1467450"
  },
  {
    "text": "want to know whether\nleft or right will win from this position. AUDIENCE: Is it possible\nthat it doesn't terminate?",
    "start": "1467450",
    "end": "1473340"
  },
  {
    "text": "PROFESSOR: I could be a\ntie is the right answer. So that's tricky.",
    "start": "1473340",
    "end": "1478940"
  },
  {
    "text": "There is a piece-base hardness\nresult relatively recent, but an old result of\nours with David Eppstein",
    "start": "1478940",
    "end": "1485860"
  },
  {
    "text": "is that just determining\nwhether you can win in one move is NP-complete.",
    "start": "1485860",
    "end": "1491809"
  },
  {
    "text": "So that's a relatively\nclean thing. You don't have to worry\nabout non-termination or that sort of thing. It's just one player's move.",
    "start": "1491810",
    "end": "1498480"
  },
  {
    "text": "Here, everything is reversed. ",
    "start": "1498480",
    "end": "1503830"
  },
  {
    "text": "The ball is black in this case. I'm not sure if there's a\nconsistent notion, anyway.",
    "start": "1503830",
    "end": "1509950"
  },
  {
    "text": "And this is actually a\nreduction all on one slide. It's pretty simple. So this is what we call\nthe mate in one problem.",
    "start": "1509950",
    "end": "1516704"
  },
  {
    "text": "And you can take lots\nof different games and make them really\nclean, well-defined puzzles if you just ask, can\nI win in one move?",
    "start": "1516704",
    "end": "1523070"
  },
  {
    "text": "Even games that involve cards\nand randomness and weird stuff. And one movie usually\ndoesn't involve those at all.",
    "start": "1523070",
    "end": "1529450"
  },
  {
    "text": "Anyway, here, we're getting rid\nof the loopiness of the game and not having to\nworry about that.",
    "start": "1529450",
    "end": "1534580"
  },
  {
    "text": "So there's sort of two\nparts to this proof, the variable traversal\nand the clause traversal. But here, we have a kind\nof very different way",
    "start": "1534580",
    "end": "1541420"
  },
  {
    "text": "of connecting things together. We have a giant\nmatrix, if you will. We're starting up\nhere and we have",
    "start": "1541420",
    "end": "1548130"
  },
  {
    "text": "a choice whether-- if we\nwant to set x1 to true, we're just going to go to the\nright by a sequence of jumps.",
    "start": "1548130",
    "end": "1554350"
  },
  {
    "text": "We jump here, then\nhere, then here. Every time we stop,\nwe have no choice. If we want to keep\ngoing, our goal",
    "start": "1554350",
    "end": "1561800"
  },
  {
    "text": "is to get to somewhere, one\nof the edges of the board,",
    "start": "1561800",
    "end": "1566830"
  },
  {
    "text": "I think the bottom edge. Bottom edge is the one\nthat's hard to get to.",
    "start": "1566830",
    "end": "1572534"
  },
  {
    "text": "So every time we jump\nto the right here, we don't have a choice. We have to keep\njumping to the right. But over here, we have a choice.",
    "start": "1572534",
    "end": "1578530"
  },
  {
    "text": "We could go down and then jump\nto the right and get over here and that will do different\nthings in the middle.",
    "start": "1578530",
    "end": "1584610"
  },
  {
    "text": "In general, that is\nour setting of x1. Then, we're going to do\nthe same thing coming back for x2 of two choices.",
    "start": "1584610",
    "end": "1590630"
  },
  {
    "text": "Then, the same thing\ngoing back for x3 and then we get to this corner. So that's forced other\nthan these two choices,",
    "start": "1590630",
    "end": "1597780"
  },
  {
    "text": "binary choices. Now, we have our first clause.",
    "start": "1597780",
    "end": "1603230"
  },
  {
    "text": "Let's say x1 negated or\nx2 negated or x3 negated. We want one of those\nthings to be true.",
    "start": "1603230",
    "end": "1609830"
  },
  {
    "text": "And so the idea is we're\ngoing to choose whichever one has been set correctly and\nthen we will go up that channel",
    "start": "1609830",
    "end": "1617089"
  },
  {
    "text": "and get to the top. Again, it's pretty\nmuch symmetric. So every time we jump\nover a bunch of pieces,",
    "start": "1617089",
    "end": "1622100"
  },
  {
    "text": "whenever we stop, we\ncan't go left or right. We have to keep going up. So we have to make\nit all the way.",
    "start": "1622100",
    "end": "1628060"
  },
  {
    "text": "In fact, each of these columns\nwill be completely filled except for one\nintersection, which is",
    "start": "1628060",
    "end": "1634140"
  },
  {
    "text": "the thing that makes it false. So here, we want x2 to be false.",
    "start": "1634140",
    "end": "1639590"
  },
  {
    "text": "So if we happen to follow the\ntrue path where x2 is true, we won't make it because\nthis piece will already",
    "start": "1639590",
    "end": "1646840"
  },
  {
    "text": "have been removed when\nwe came through here. And so if we try to take this\npath, we'll get stuck here. There won't be any\npiece above us.",
    "start": "1646840",
    "end": "1654780"
  },
  {
    "text": "As long as that didn't happen,\nas long as this row was not chosen, then we can\ntake this column",
    "start": "1654780",
    "end": "1660830"
  },
  {
    "text": "and just make it all\nthe way up to the top. So we're going to be able to\ntake one of these three paths if and only if at least one\nof these things is true.",
    "start": "1660830",
    "end": "1668140"
  },
  {
    "text": "That's the first clause. Then, we do the same thing\nfor the second clause. And if all of the\nclauses are true,",
    "start": "1668140",
    "end": "1673860"
  },
  {
    "text": "we will be able to\nget here and then we can jump down and\nget to the finish line",
    "start": "1673860",
    "end": "1679010"
  },
  {
    "text": "and win in one move, one move. So mate in one is NP-complete.",
    "start": "1679010",
    "end": "1687559"
  },
  {
    "text": "I have one other example\nof a mate in one result. It's actually not a hardness\nresult, but it's kind of fun, so I thought I would talk about\na non-hardness result for once,",
    "start": "1687560",
    "end": "1695150"
  },
  {
    "text": "which is checkers. Checkers is another\ngame where in one move, you can do a lot of jumps. Especially if you\nhave a king, then you",
    "start": "1695150",
    "end": "1702010"
  },
  {
    "text": "can potentially win by killing\na lot of pieces all at once. And this is considered\nback in 1978.",
    "start": "1702010",
    "end": "1708860"
  },
  {
    "text": "This is the same\npaper that proves checkers is\nEXPTIME-complete, which we will get to at some point.",
    "start": "1708860",
    "end": "1715569"
  },
  {
    "text": "But for now, let's think\nabout the mate in one problem. This turns out to be\neasy, unlike phutball.",
    "start": "1715569",
    "end": "1721780"
  },
  {
    "text": "So checkers-- I assume\nyou've all played checkers.",
    "start": "1721780",
    "end": "1726820"
  },
  {
    "text": "You can only move diagonally\non the black squares. So you can recast that\ninto an orthogonal problem",
    "start": "1726820",
    "end": "1734420"
  },
  {
    "text": "where the pieces can only\nmove orthogonally up or right or vice versa,\nexcept king pieces.",
    "start": "1734420",
    "end": "1740797"
  },
  {
    "text": "They can just move orthogonally. And the interesting part\nis when you can jump over a piece of another color. So if there was a black piece\nhere, this one can jump over.",
    "start": "1740797",
    "end": "1749809"
  },
  {
    "text": "And in general, if you have a\nsequence of jumps you can make, then you can do all\nof them at once.",
    "start": "1749810",
    "end": "1755412"
  },
  {
    "text": "So the problem looks\nsomething like this. If you have a black piece and\nlet's say a black to move,",
    "start": "1755412",
    "end": "1761290"
  },
  {
    "text": "if there are a bunch of white\npieces, you can jump over them. And the key thing\nto notice-- again,",
    "start": "1761290",
    "end": "1767370"
  },
  {
    "text": "as soon as you jump over\na piece, it disappears. So you can reuse\nit in the same move or I guess you can't\nreuse it in general.",
    "start": "1767370",
    "end": "1774390"
  },
  {
    "text": "The key thing is that the jumps\npreserve the parity, the even or oddness of both\nyour x-coordinate",
    "start": "1774390",
    "end": "1780220"
  },
  {
    "text": "and your y-coordinate. So you're moving around\non this reduced grid. And so you can take\na picture like this",
    "start": "1780220",
    "end": "1785830"
  },
  {
    "text": "and turn it into a graph\nwhere the potential positions for you, which are drawn\nwith this kind of pattern,",
    "start": "1785830",
    "end": "1792810"
  },
  {
    "text": "same parity of rows and columns.",
    "start": "1792810",
    "end": "1798150"
  },
  {
    "text": "You could make those the\nvertices of your graph. And then, there's\nan edge between them if there's a white stone\nin between that you",
    "start": "1798150",
    "end": "1804480"
  },
  {
    "text": "could jump over. So then, given this\ngraph, the question is, can you visit all of\nthe edges of the graph",
    "start": "1804480",
    "end": "1810440"
  },
  {
    "text": "with a single path? And that is the Euler tour\nproblem or the Euler path problem. And it's easy to solve\nthat in polynomial time.",
    "start": "1810440",
    "end": "1817769"
  },
  {
    "text": "You look for\nodd-degree vertices. There should be at most two of\nthem and you better be at one of them.",
    "start": "1817770",
    "end": "1823870"
  },
  {
    "text": "Or there's zero of them. Then, you're happy. So that's how to\nsolve mate in one in checkers, in case you ever\nget to those difficult checkers",
    "start": "1823870",
    "end": "1831340"
  },
  {
    "text": "endgames. And now, you can decide how\nto win or not in one move.",
    "start": "1831340",
    "end": "1836930"
  },
  {
    "text": "Two moves is left to you. All right. So next topic is\ncalled cryptarithms.",
    "start": "1836930",
    "end": "1845760"
  },
  {
    "text": "This comes from the\nrecreational math world and they're kind of fun. You've probably seen this or\nyou may have seen this one",
    "start": "1845760",
    "end": "1852261"
  },
  {
    "text": "if you've seen any cryptarithm. It's a classic. It goes back to 1979 from\nthis book by Madachy.",
    "start": "1852261",
    "end": "1858310"
  },
  {
    "text": "And the idea is this is\nan arithmetic formula, SEND plus MORE equals MONEY.",
    "start": "1858310",
    "end": "1864070"
  },
  {
    "text": "And each of these letters\nrepresents a digit zero through nine. And so these two M's represent\nthe same digit and so on.",
    "start": "1864070",
    "end": "1873200"
  },
  {
    "text": "Two n's represent\nthe same digits. Those two O's represent\nthe same digit. And furthermore, M is different\nfrom O is differ from R.",
    "start": "1873200",
    "end": "1880390"
  },
  {
    "text": "So it's a bijection\nbetween the letters that appear in this puzzle and some\nsubset of zero through nine.",
    "start": "1880390",
    "end": "1887340"
  },
  {
    "text": "And it actually has\na unique solution. This is it. You could verify it,\nbut I'll leave it as a puzzle so don't look at\nthat too long, in case you",
    "start": "1887340",
    "end": "1893980"
  },
  {
    "text": "want to solve it. It is doable, but\nthe tricky part are things like the carries\nin the addition, which",
    "start": "1893980",
    "end": "1899560"
  },
  {
    "text": "make it not just a simple\nlinear system to solve. And in fact, these puzzles,\ngeneralized to an arbitrary",
    "start": "1899560",
    "end": "1906820"
  },
  {
    "text": "base, are NP-complete. If you do it in base\n10, then there's only at most 10 factorial\npossible solutions.",
    "start": "1906820",
    "end": "1914900"
  },
  {
    "text": "So that's constant and\nthat's considered fast. And indeed, in\nreal computers, you can solve 10\nfactorial reasonably.",
    "start": "1914900",
    "end": "1923370"
  },
  {
    "text": "So for generalized\nbase, here is a proof. This is actually\nDavid Eppstein, who",
    "start": "1923370",
    "end": "1928630"
  },
  {
    "text": "was a co-author in\nthe previous result. This is his first theory\npaper, \"SIGACT News.\"",
    "start": "1928630",
    "end": "1934100"
  },
  {
    "text": "And it proved that it's\nstrongly NP-complete, meaning even if the\nbase is polynomial,",
    "start": "1934100",
    "end": "1940130"
  },
  {
    "text": "the problem is NP-hard. And it looks really messy, but\nactually, it's fairly simple.",
    "start": "1940130",
    "end": "1947010"
  },
  {
    "text": "So let me start\nwith this gadget. This is an easy one.",
    "start": "1947010",
    "end": "1953110"
  },
  {
    "text": "So there's no notion of\nzero or one in this gadget, but zero is just a letter\nand one is just a letter.",
    "start": "1953110",
    "end": "1959870"
  },
  {
    "text": "But with this gadget\nin place, 0 is 0 and 1 is 1, because 0's\nthe only possible digit when",
    "start": "1959870",
    "end": "1968270"
  },
  {
    "text": "you add it with yourself,\nyou get it again. It is the identity\nin additive ring.",
    "start": "1968270",
    "end": "1974340"
  },
  {
    "text": "So that forces 0 to be 0. And then, here, we're\nadding p with p.",
    "start": "1974340",
    "end": "1981632"
  },
  {
    "text": "P are just arbitrary things. We sort of don't\ncare what they are. We get something q. And over here, we add\n0 to 0 and we get 1.",
    "start": "1981632",
    "end": "1989307"
  },
  {
    "text": "That's only going to\nbe possible if there was a carry in this column. And carries can be only 1. They can be 0 or 1.",
    "start": "1989307",
    "end": "1994860"
  },
  {
    "text": "So that forces--\nwe know it's not 0 because 1 is different from 0. Therefore, 1 is 1.",
    "start": "1994860",
    "end": "2000640"
  },
  {
    "text": "The symbol 1 is the value\none, the number one. All right. So that gives us\nsome infrastructure.",
    "start": "2000640",
    "end": "2006340"
  },
  {
    "text": "And the zeroes are\nreally helpful, because it lets us space\nout gadgets and guarantee that there's no\ncarry between them.",
    "start": "2006340",
    "end": "2011990"
  },
  {
    "text": "This is supposed to\nbe a variable gadget. There's vi and there's vi bar.",
    "start": "2011990",
    "end": "2018179"
  },
  {
    "text": "So let's see what happens. Let's do the vi part first. So this formula says\nthat bi equals twice ai.",
    "start": "2018180",
    "end": "2028549"
  },
  {
    "text": "And there's guaranteed to\nbe no carry because of this. Now, this is a little tricky. We add yi to yi until we get zi.",
    "start": "2028550",
    "end": "2034750"
  },
  {
    "text": "So there may be a\ncarry or not here. Then, we add bi to\nbi and we get vi.",
    "start": "2034750",
    "end": "2041409"
  },
  {
    "text": "So vi is going to be 2\ntimes bi plus either 0 or 1.",
    "start": "2041410",
    "end": "2047780"
  },
  {
    "text": "That's going to be\nour binary choice. We can set up the yi's\nto either carry or not.",
    "start": "2047780",
    "end": "2053090"
  },
  {
    "text": "We'll call that C.\nIn this formulation, C is the carry in\nthat operation.",
    "start": "2053090",
    "end": "2058950"
  },
  {
    "text": " And bi is 2 times ai.",
    "start": "2058950",
    "end": "2065379"
  },
  {
    "text": "So this is 4 times ai\nplus C, which is 0 or 1.",
    "start": "2065380",
    "end": "2070440"
  },
  {
    "text": "And what we're going to\nthink about is modulo four. This is congruent\nto C. So we're going",
    "start": "2070440",
    "end": "2077850"
  },
  {
    "text": "to treat all of our variable\nassignments modulo four and they're always\ngoing to be 0 or 1.",
    "start": "2077850",
    "end": "2083290"
  },
  {
    "text": "vi became this and the claim\nis that this part makes vi bar the opposite.",
    "start": "2083290",
    "end": "2089940"
  },
  {
    "text": "And you can work\nthrough the arithmetic as I did in the notes. You end up vi bar has to be 4\ntimes something, which is Ci.",
    "start": "2089940",
    "end": "2100905"
  },
  {
    "text": "So we don't care what that is. We'll set it at the very\nend, plus 3C plus 1.",
    "start": "2100905",
    "end": "2108600"
  },
  {
    "text": "C is 1, this is 4,\nand this becomes 0. If C is 0, this becomes 1 mod 4.",
    "start": "2108600",
    "end": "2117410"
  },
  {
    "text": "So in general, it's\n1 minus C. It's the opposite choice from what\nvi was that becomes vi bar.",
    "start": "2117410",
    "end": "2124000"
  },
  {
    "text": "So that's cool. We've got vi. We've got vi bar. We can duplicate our\nvariables for free, because we can just\nuse that same letter",
    "start": "2124000",
    "end": "2130780"
  },
  {
    "text": "vi in many different\nplaces and then we just need a clause gadget.",
    "start": "2130780",
    "end": "2136540"
  },
  {
    "text": "And so the work is\nsimilar kind of tricks.",
    "start": "2136540",
    "end": "2142380"
  },
  {
    "text": "We add fi to itself, we get gi. We add gi to itself, we get hi.",
    "start": "2142380",
    "end": "2148200"
  },
  {
    "text": "So at this point, we have 4\ntimes fi plus possibly one",
    "start": "2148200",
    "end": "2153640"
  },
  {
    "text": "carry. This wi might carry or not. So we get hi is 4\ntimes fi plus 0 or 1.",
    "start": "2153640",
    "end": "2169059"
  },
  {
    "text": "Then, we add hi to\n1 and we get ti, plus there might be a\ncarry from this column.",
    "start": "2169060",
    "end": "2177230"
  },
  {
    "text": "So that's ti is going to be hi\nplus 1 plus a potential carry.",
    "start": "2177230",
    "end": "2185960"
  },
  {
    "text": "hi is this thing, so we end up\nwith 4 times fi plus 1 plus 0",
    "start": "2185960",
    "end": "2194520"
  },
  {
    "text": "or 1 or 2, depending on how many\ncarries we've had total, which",
    "start": "2194520",
    "end": "2199770"
  },
  {
    "text": "is 4 times fi plus 1 or 2 or 3.",
    "start": "2199770",
    "end": "2206480"
  },
  {
    "text": "And modulo four, that\nis one or two or three. This is going to be the\nnumber of true variables",
    "start": "2206480",
    "end": "2211660"
  },
  {
    "text": "in our clause, because in the\nend, we just add vi plus vb. We get this thing. We add vc for our three\nvariables, a, b, and c.",
    "start": "2211660",
    "end": "2220640"
  },
  {
    "text": "We get ti. And ti was that thing. So if we just think about things\nmodulo four, that means va",
    "start": "2220640",
    "end": "2230460"
  },
  {
    "text": "plus vb plus vc should\nbe 1, 2, or 3 mod four.",
    "start": "2230460",
    "end": "2236320"
  },
  {
    "text": "Now, the reason we have this\njunk-- and the junk's-- well, OK. There's the not\nmodulo four part,",
    "start": "2236320",
    "end": "2243050"
  },
  {
    "text": "the part when you divide by 4. That's sort of tricky. But at this point, at least,\nyou should be convinced",
    "start": "2243050",
    "end": "2248140"
  },
  {
    "text": "that if there's a solution\nto this problem, then there must be a solution to\nthe original 3SAT instance.",
    "start": "2248140",
    "end": "2256200"
  },
  {
    "text": "The reverse is less clear. If you have a solution\nto the 3SAT instance, you have to be able to set\nall these variables to make",
    "start": "2256200",
    "end": "2261339"
  },
  {
    "text": "everything work out. That's a little more tedious. For fun, and this\nis an old proof 1987",
    "start": "2261339",
    "end": "2268570"
  },
  {
    "text": "and I was just looking\nat it again today, I think, or I think\nit was yesterday.",
    "start": "2268570",
    "end": "2274360"
  },
  {
    "text": "I think I can simplify\nit a little bit. Instead of using\nregular 3SAT where",
    "start": "2274360",
    "end": "2279390"
  },
  {
    "text": "you have all these choices, one,\ntwo, or three things are true, if you use exactly\none 3SAT, one in 3SAT,",
    "start": "2279390",
    "end": "2285440"
  },
  {
    "text": "it should be a lot easier. So gadgets are smaller. With one in 3SAT, we\ndon't need negation.",
    "start": "2285440",
    "end": "2292010"
  },
  {
    "text": "So I just need\nthe vi part, which we did explicitly over here. So that's kind of nifty.",
    "start": "2292010",
    "end": "2299300"
  },
  {
    "text": "And for exactly\none 3SAT, we don't need to have all those carries. We just need to build\nfour times something--",
    "start": "2299300",
    "end": "2307310"
  },
  {
    "text": "sorry, that should be fi here. We add fi to itself. We add gi to itself.",
    "start": "2307310",
    "end": "2312859"
  },
  {
    "text": "So here, we have 4 times fi. And then, we add 1. So this ti will be one mod four.",
    "start": "2312860",
    "end": "2320905"
  },
  {
    "text": "And then, we add\nthe variables up and we should get\nexactly one mod four. Now, admittedly, I haven't\nchecked the second half",
    "start": "2320905",
    "end": "2326430"
  },
  {
    "text": "of the proof with\nthis construction, but it seems\nplausible this would be a somewhat simpler proof.",
    "start": "2326430",
    "end": "2332370"
  },
  {
    "text": "So it shows you the power of all\nthe different versions of 3SAT we saw last class. ",
    "start": "2332370",
    "end": "2340150"
  },
  {
    "text": "Now, I can tell you a little\nbit about the other direction. ",
    "start": "2340150",
    "end": "2350214"
  },
  {
    "text": "I have some of the\ndetails written down here. So the other\ndirection is we need",
    "start": "2350214",
    "end": "2355280"
  },
  {
    "text": "to check if there's a satisfying\nassignment to 3SAT or one in 3SAT, that we can\nactually construct",
    "start": "2355280",
    "end": "2360740"
  },
  {
    "text": "these numbers that the\nbase is only polynomial. The trickiest part is to\nget all of these numbers",
    "start": "2360740",
    "end": "2368270"
  },
  {
    "text": "to be distinct from each other.  AUDIENCE: What base do you do?",
    "start": "2368270",
    "end": "2374720"
  },
  {
    "text": "PROFESSOR: The base will\nbe something like n cubed, it turns out.",
    "start": "2374720",
    "end": "2379950"
  },
  {
    "text": "And I'll tell you, one\ntrick is we have all these ai's, bi's, and ci's.",
    "start": "2379950",
    "end": "2385387"
  },
  {
    "text": "We can guarantee they are all\ndifferent from each other, that all the a's are different\nfrom all the b's are different from all the c's by saying all\na's-- let me get this right--",
    "start": "2385387",
    "end": "2395610"
  },
  {
    "text": "all a's will be 2,\n34, 66, or 98 mod 128.",
    "start": "2395610",
    "end": "2401510"
  },
  {
    "text": "And in general, those\nare particular numbers set up to make this\nconstruction work out.",
    "start": "2401510",
    "end": "2408010"
  },
  {
    "text": "I didn't check them\nall but I believe them. In general, we're going to\ndistinguish all the letters",
    "start": "2408010",
    "end": "2413680"
  },
  {
    "text": "by what they are mod 128. So given a number\nbetween zero and 127,",
    "start": "2413680",
    "end": "2419670"
  },
  {
    "text": "there's a unique letter of\nthe regular English letter alphabet, the a's, the b's,\nthe y's, the z's, and so on",
    "start": "2419670",
    "end": "2426900"
  },
  {
    "text": "that it is assigned to. And I'll tell you in particular,\nthe vi's and the vi bars",
    "start": "2426900",
    "end": "2433450"
  },
  {
    "text": "are going to be, I\nthink, 8 or 9 mod 128.",
    "start": "2433450",
    "end": "2441770"
  },
  {
    "text": "And the 8 is if\nit's false and the 9",
    "start": "2441770",
    "end": "2447365"
  },
  {
    "text": "is if it's true, because\nremember, modulo 4, we want this to be zero\nand we want this to be one.",
    "start": "2447365",
    "end": "2452610"
  },
  {
    "text": "So there's a bunch\nof choices like that. Some of them are unique. We can always\nguarantee-- I forget which ones-- the ci's are\nall something mod 128.",
    "start": "2452610",
    "end": "2460420"
  },
  {
    "text": "So the mod 128\nwill tell you sort of what letter of\nthe English alphabet it is and then it's\na matter of deciding",
    "start": "2460420",
    "end": "2467110"
  },
  {
    "text": "the high-order bits, your\nnumber divided by 128 and take the floor. What that is we set to\nmake everybody distinct.",
    "start": "2467110",
    "end": "2476690"
  },
  {
    "text": "And the heart of the\nproof, I will say, is to make sure that the\nvi's are all different.",
    "start": "2476690",
    "end": "2484705"
  },
  {
    "text": " Or let's say that the\nti's are different.",
    "start": "2484705",
    "end": "2491369"
  },
  {
    "text": "So we have the variables here. We're adding them up and\nwe get ti and we need all",
    "start": "2491370",
    "end": "2499110"
  },
  {
    "text": "of the ti's-- there's\none ti per clause. We need them all\nto be different, which means no matter which\ntriple of vi's we get,",
    "start": "2499110",
    "end": "2506990"
  },
  {
    "text": "we should get a different\nsum of the triples. So this is a problem of\nset vi and vi prime divided",
    "start": "2506990",
    "end": "2517490"
  },
  {
    "text": "by 128 so that vi plus vj\nplus vk are all distinct.",
    "start": "2517490",
    "end": "2530070"
  },
  {
    "start": "2530070",
    "end": "2535856"
  },
  {
    "text": "And at this point,\nEppstein says, oh, there's a result by Bose\nand Chowla from 1959 the says you can always choose these\nguys-- if there's n of them",
    "start": "2535856",
    "end": "2544299"
  },
  {
    "text": "that you need to choose, then\nn-cubed different integers suffice to make this true.",
    "start": "2544300",
    "end": "2549970"
  },
  {
    "text": "That's if you know the\nliterature super well, but there's an easy proof\nthat polynomials enough here.",
    "start": "2549970",
    "end": "2556569"
  },
  {
    "text": "And those of you\nwho are in 6.851 should be able to construct\none, because this is essentially",
    "start": "2556570",
    "end": "2561960"
  },
  {
    "text": "fusion trees. But in general, imagine that\nyou've chosen by induction",
    "start": "2561960",
    "end": "2574570"
  },
  {
    "text": "I'll call them v less than i. And let's ignore the primes. Let's just say we've\nconstructed all the things up",
    "start": "2574570",
    "end": "2580770"
  },
  {
    "text": "to the vi minus 1. And now, we want\nto choose vi and it",
    "start": "2580770",
    "end": "2587450"
  },
  {
    "text": "needs to avoid certain values.",
    "start": "2587450",
    "end": "2592780"
  },
  {
    "text": "I think if it avoids vj plus\nvk minus vl minus vm minus vp",
    "start": "2592780",
    "end": "2602900"
  },
  {
    "text": "for all j, k, l,\nm, p less than i,",
    "start": "2602900",
    "end": "2611359"
  },
  {
    "text": "then no triple should\nsum to any other triple, because if we\nadd-- I think maybe",
    "start": "2611360",
    "end": "2618790"
  },
  {
    "text": "I have the signs slightly off. So I wanted to do this.",
    "start": "2618790",
    "end": "2627250"
  },
  {
    "text": "Yeah, so this is one more plus. So suppose I had an\nequation like this.",
    "start": "2627250",
    "end": "2633170"
  },
  {
    "text": "I claim that's bad because\nif I move these guys over to the left-hand side, that's\na triple of v's that sums",
    "start": "2633170",
    "end": "2639220"
  },
  {
    "text": "to another triple of v's. So as long as I choose\nmy new value v-- sorry,",
    "start": "2639220",
    "end": "2644230"
  },
  {
    "text": "this should vi. That's the one I'm choosing. As long as I choose vi to be\ndifferent from all such sums",
    "start": "2644230",
    "end": "2654539"
  },
  {
    "text": "and they're only less than\nn to the fifth such sums, because there are only n\nof these different things,",
    "start": "2654540",
    "end": "2661720"
  },
  {
    "text": "then I'm OK. And so by the\npigeonhole principle, as long as I have\na range that is at least n to the\nfifth in size, then",
    "start": "2661720",
    "end": "2669349"
  },
  {
    "text": "I can always choose vi to\navoid all those conflicts. So that's a really easy proof\nthat n to the fifth is enough.",
    "start": "2669350",
    "end": "2675460"
  },
  {
    "text": "In fact, n cubed is enough,\nbut this is a hardness proof. All we need is strong hardness. We just need n cubed.",
    "start": "2675460",
    "end": "2681560"
  },
  {
    "text": "That's just fine\nor n to the fifth. Any polynomial would be OK.",
    "start": "2681560",
    "end": "2687350"
  },
  {
    "text": "So that's a sketch of\nthe reverse direction for this proof. There are some more\ndetails to make sure everything adds up right\nmod 128 and that you",
    "start": "2687350",
    "end": "2694050"
  },
  {
    "text": "can make all the ai's\ndifferent and so on, but the hard part is the\nvi's, which seems believable.",
    "start": "2694050",
    "end": "2700911"
  },
  {
    "text": "Questions about cryptarithms? ",
    "start": "2700912",
    "end": "2709460"
  },
  {
    "text": "Cool. Next is an origami proof. So here's the\nmotivating problem.",
    "start": "2709460",
    "end": "2716660"
  },
  {
    "text": "I give you some\ncrease pattern, which is just a graph drawn in\na plane, no crossings, and all the edges are\nstraight segments.",
    "start": "2716660",
    "end": "2723170"
  },
  {
    "text": "And you want to fold\nit into a flat origami or a flat folded state would\nbe the more technical term.",
    "start": "2723170",
    "end": "2730079"
  },
  {
    "text": "So this is an example of what's\ncalled an origami tessellation. But in general, what\nyou're allowed to do,",
    "start": "2730080",
    "end": "2735460"
  },
  {
    "text": "the red lines here\nmean that you fold as a mountain by 180\ndegrees and the blue lines",
    "start": "2735460",
    "end": "2741850"
  },
  {
    "text": "mean you fold a\nvalley 180 degrees. So they're specifying\nthe relative orientation. But in flat-folding,\nyou're only allowed",
    "start": "2741850",
    "end": "2747786"
  },
  {
    "text": "to go plus or minus 180. And then, it has to exist.",
    "start": "2747786",
    "end": "2753770"
  },
  {
    "text": "Now, the rules for\npaper are twofold. One is that it doesn't stretch. It's an isometric mapping\nof the piece of paper.",
    "start": "2753770",
    "end": "2760050"
  },
  {
    "text": "Each of these little\npolygons is just rotated, translated, reflected\npossibly over here.",
    "start": "2760050",
    "end": "2766850"
  },
  {
    "text": "They fit together, so\nyou don't tear the paper. They fit together\nat all the creases and there are no\ncrossings, because paper",
    "start": "2766850",
    "end": "2774180"
  },
  {
    "text": "can't intersect itself. So the geometry is basically\ndetermined if you say,",
    "start": "2774180",
    "end": "2781279"
  },
  {
    "text": "OK, I'm going to view\nthis panel as being fixed. It doesn't move. Then, this one is just\ngoing to be a reflection",
    "start": "2781280",
    "end": "2786830"
  },
  {
    "text": "through this line flipped over. And in general, all of\nthese other polygons just have to be reflections,\nbecause every time you",
    "start": "2786830",
    "end": "2792630"
  },
  {
    "text": "fold on a line-- and\nthe rules of the game here is you have to fold\neverywhere there's a crease.",
    "start": "2792630",
    "end": "2798140"
  },
  {
    "text": "You can figure out this polygon\nwill end up here relative to some original polygon.",
    "start": "2798140",
    "end": "2804839"
  },
  {
    "text": "So you can figure out\npretty much what this looks like as an x-ray diagram. And the hard part becomes\nhow are layers stacked.",
    "start": "2804840",
    "end": "2812910"
  },
  {
    "text": "Is this one on top\nof this one or is this one on top of that one? That's why the problem\nis NP-complete is",
    "start": "2812910",
    "end": "2819039"
  },
  {
    "text": "that last step, deciding which\nlayers are on top of the other. In general, whenever two layers\nof paper partially overlap,",
    "start": "2819040",
    "end": "2824750"
  },
  {
    "text": "you have to decide which\nis on top of the other. And then, there's some\nobvious constraints like-- let me get my hands\noriented-- this is OK",
    "start": "2824750",
    "end": "2833300"
  },
  {
    "text": "but this is not OK. If there's one\ncrease of paper here",
    "start": "2833300",
    "end": "2838430"
  },
  {
    "text": "and another crease\nof paper here, then these locally intersect. So this is OK. This is OK.",
    "start": "2838430",
    "end": "2844510"
  },
  {
    "text": "This is not OK. That's the rules. We don't need to know\nthose rules super precisely",
    "start": "2844510",
    "end": "2849680"
  },
  {
    "text": "to understand this\nproof fairly intuitively because everything's going\nto be small and quite local.",
    "start": "2849680",
    "end": "2855490"
  },
  {
    "text": "The basic idea is the following. You take a piece of\npaper and you fold it",
    "start": "2855490",
    "end": "2863200"
  },
  {
    "text": "along two parallel lines. So fold along this line\nand then along this line.",
    "start": "2863200",
    "end": "2870780"
  },
  {
    "text": " And this is called a pleat and\nthere are two ways to do it.",
    "start": "2870780",
    "end": "2876907"
  },
  {
    "text": "You could do one\nmountain, one valley, or you could do the other one\nmountain and the other one valley.",
    "start": "2876907",
    "end": "2881990"
  },
  {
    "text": "You can't make them both\nmountains because then, you'd locally intersect yourself. So it could be this\nway or it could",
    "start": "2881990",
    "end": "2889080"
  },
  {
    "text": "be the other way I just had it. It's a little tedious.",
    "start": "2889080",
    "end": "2894590"
  },
  {
    "text": "And so you have to\nmake that choice. Which one is a mountain? Which one is a valley? ",
    "start": "2894590",
    "end": "2901190"
  },
  {
    "text": "That's going to be\nour true signal. We're going to consider one\noption true, the other option false.",
    "start": "2901190",
    "end": "2906440"
  },
  {
    "text": "And as a point of\nnotation, we're going to have an arrow\nin every one of these--",
    "start": "2906440",
    "end": "2912500"
  },
  {
    "text": "we call them wire gadgets. In general, wires are how\nwe have truth settings.",
    "start": "2912500",
    "end": "2919210"
  },
  {
    "text": "And so relative to the\norientation of this arrow, if it's valley on\nthe left-- blue",
    "start": "2919210",
    "end": "2924750"
  },
  {
    "text": "is valley because I guess\nrivers are in valleys-- then we'll consider it true.",
    "start": "2924750",
    "end": "2930400"
  },
  {
    "text": "If there's blue on the right,\nwe'll consider it false. Question? AUDIENCE: Just a\nquestion about the SAT. Once you draw all the\nred and blue lines,",
    "start": "2930400",
    "end": "2937140"
  },
  {
    "text": "there's just one unique answer? PROFESSOR: No, the answer's\nnot necessarily unique,",
    "start": "2937140",
    "end": "2942620"
  },
  {
    "text": "but there will be a\nunique yes or no answer. Either it will be\nflat-foldable or not,",
    "start": "2942620",
    "end": "2947747"
  },
  {
    "text": "but there actually may\nbe many flat foldings consistent with a given\nmountain-valley assignment in general.",
    "start": "2947747",
    "end": "2953100"
  },
  {
    "text": "So we're not worrying\nabout that too much here. We're just worrying about\nwhether it is feasible,",
    "start": "2953100",
    "end": "2958370"
  },
  {
    "text": "whether there's some ordering\nthat makes things work out.",
    "start": "2958370",
    "end": "2963520"
  },
  {
    "text": "So the idea is this\ncould be your variable. Some reductions have\nvariable gadgets. Some don't. This one is just\ngoing to have a wire.",
    "start": "2963520",
    "end": "2969780"
  },
  {
    "text": "The idea is if you\nsay, well, there's a pleat over here\nin the paper, then it could be pleated\none way or the other.",
    "start": "2969780",
    "end": "2975360"
  },
  {
    "text": "And that serves as\na variable, as you make one choice or the other.",
    "start": "2975360",
    "end": "2980520"
  },
  {
    "text": "What we'd like is to take that\ntruth value and duplicate it, make many copies. But that's not the next gadget.",
    "start": "2980520",
    "end": "2986730"
  },
  {
    "text": "The next gadget is a not\nall equal clause gadget. So this is going\nto be a reduction from not all equal 3SAT.",
    "start": "2986730",
    "end": "2993099"
  },
  {
    "text": "And I have the gadget\npre-folded here.",
    "start": "2993100",
    "end": "2998180"
  },
  {
    "text": "So this is what in origami world\nis called a triangular twist. It's a slightly weird\ntriangular twist,",
    "start": "2998180",
    "end": "3004160"
  },
  {
    "text": "in that this is 35\ndegrees instead of 30",
    "start": "3004160",
    "end": "3010130"
  },
  {
    "text": "being the usual one. And so it's just a\nlittle bit larger and that causes a problem. So this is an example of a valid\nflat-folding of that gadget.",
    "start": "3010130",
    "end": "3020860"
  },
  {
    "text": "And if you look at the three\npleats that are coming in, notice the arrows\nare all pointing in.",
    "start": "3020860",
    "end": "3025920"
  },
  {
    "text": "So it's sort of symmetric. It's going to be one\nof the valid ones.",
    "start": "3025920",
    "end": "3031829"
  },
  {
    "text": "So I guess it's actually\nwritten on the diagram here. This one is considered\ntrue because there's a valley on your right,\nthis one is considered false",
    "start": "3031830",
    "end": "3041790"
  },
  {
    "text": "because there's a\nvalley on your-- oh I'm so confused-- on\nyour right, and this one",
    "start": "3041790",
    "end": "3051320"
  },
  {
    "text": "is considered true\nbecause there's a valley on your left-- oh,\nsorry, false because there's a valley on your right.",
    "start": "3051320",
    "end": "3057446"
  },
  {
    "text": "If you're walking\ndown the arrow, then the right-hand\nside has a valley. And so this happens to\nfold because they're not",
    "start": "3057446",
    "end": "3063830"
  },
  {
    "text": "all the same. If you tried to make\nthem all the same, which should be like\nreversing the true,",
    "start": "3063830",
    "end": "3071090"
  },
  {
    "text": "it's going to look something\nlike this, which is actually",
    "start": "3071090",
    "end": "3080960"
  },
  {
    "text": "easier to see back here. So now, they're all trying\nto fold the same way. But the problem is on this side.",
    "start": "3080960",
    "end": "3088319"
  },
  {
    "text": "These guys will all come\nand intersect in the center. And I think we\nhave a diagram Here",
    "start": "3088320",
    "end": "3094859"
  },
  {
    "text": "And in x-ray, this\nis what must happen. And there's this little area of\nintersection where you cannot",
    "start": "3094860",
    "end": "3100070"
  },
  {
    "text": "resolve which of these three\nthings are on top of each other because this one wants be on\ntop of this one who wants to be on top of this one who wants\nto be on top of this one.",
    "start": "3100070",
    "end": "3107020"
  },
  {
    "text": "So there's a cycle\nof constraints. No one can be on top of each\nother in this little region. Then, in the regular\ntriangle twist,",
    "start": "3107020",
    "end": "3113330"
  },
  {
    "text": "this is a point and\neverything's fine. But the way these\nangles are set up, there's this area of overlap.",
    "start": "3113330",
    "end": "3118339"
  },
  {
    "text": "And in that one\nsituation, you're toast So if they're all\ntrue-- but of course, everything symmetric.",
    "start": "3118340",
    "end": "3123550"
  },
  {
    "text": "If you flip it over, then it's\nthe same if they're all false. So you forbid all true. You forbid all false. Everything else will work\nso this is not all equal.",
    "start": "3123550",
    "end": "3131380"
  },
  {
    "text": "This will be\nflat-foldable locally if and only if those variable\nassignments are not all equal.",
    "start": "3131380",
    "end": "3138720"
  },
  {
    "text": "Now, we need a couple more\ngadgets for this to work. One is the ability\nto duplicate a signal",
    "start": "3138720",
    "end": "3144680"
  },
  {
    "text": "and the other is a crossover. So here, this is a proof by\nBurn and Hayes, by the way.",
    "start": "3144680",
    "end": "3150440"
  },
  {
    "text": "This is, I think, the\nfirst or second paper in computational origami. So it got things off\nto an exciting start.",
    "start": "3150440",
    "end": "3157140"
  },
  {
    "text": "This is a\nsplitter/negation gadget. This is what it folds like.",
    "start": "3157140",
    "end": "3162920"
  },
  {
    "text": "It looks a little bit weird\nbecause my paper's a little bit small, but the point\nis there's essentially",
    "start": "3162920",
    "end": "3170290"
  },
  {
    "text": "only one way to fold this. And if you take 6,849, you'll\nknow this little local analysis that forces different mountains\nand valleys to be the same.",
    "start": "3170290",
    "end": "3177910"
  },
  {
    "text": "For example, these\ntwo have to be opposite, which forces\nif this is a true, this one must be a false.",
    "start": "3177910",
    "end": "3183760"
  },
  {
    "text": "So that's your negation. And also from a local\nanalysis of this vertex, if this one is true,\nthis one must be true.",
    "start": "3183760",
    "end": "3191799"
  },
  {
    "text": "And it works and it also\nworks in the inverse setup. That's always going to be true.",
    "start": "3191800",
    "end": "3198090"
  },
  {
    "text": "A natural reason for us to\nbe using not all equal 3SAT here is there's\nreally no preference between true and false.",
    "start": "3198090",
    "end": "3204030"
  },
  {
    "text": "They're not really\na logical notion. It's more like red and blue,\nliterally red and blue.",
    "start": "3204030",
    "end": "3210630"
  },
  {
    "text": "So not all equal is the one\nthat's nice and symmetric. It has no preference\nbetween red and blue. And so we're seeing that here.",
    "start": "3210630",
    "end": "3216250"
  },
  {
    "text": "Because everything's\ninvertible, we want that symmetry\nbetween red and blue. So that would be\none reason to guest not all equal 3SAT is\na good choice here,",
    "start": "3216250",
    "end": "3224390"
  },
  {
    "text": "at least for that wire. So cool, if we have a\nsignal, we can make a copy. We also get two copies.",
    "start": "3224390",
    "end": "3232020"
  },
  {
    "text": "One of them happens\nto be negated with this particular choice\nof arrow orientation. If we oriented the\narrow the other way,",
    "start": "3232020",
    "end": "3238570"
  },
  {
    "text": "you could call\nthat a copy, but we don't want to take a\nwire that's pointing backwards because we need to\nattach this to something else.",
    "start": "3238570",
    "end": "3246060"
  },
  {
    "text": "These all have very\nparticular angles, but it turns out\nthat will be OK. One more gadget is\na crossover gadget.",
    "start": "3246060",
    "end": "3252819"
  },
  {
    "text": "This is very simple. It is just one-- this is\nnot the pre-folded one-- you do one pleat and then\nyou do the other pleat.",
    "start": "3252820",
    "end": "3261274"
  },
  {
    "text": "And you can see from\nthe crease pattern, you have to do this pleat\nand then do this pleat. But it's completely independent.",
    "start": "3261274",
    "end": "3266619"
  },
  {
    "text": "I could do each\npleat either way. It doesn't affect the other one. So that's crossover, done, easy.",
    "start": "3266620",
    "end": "3271900"
  },
  {
    "text": "This works with pretty\nmuch any angles. And then, it's just a matter\nof checking that you can",
    "start": "3271900",
    "end": "3277050"
  },
  {
    "text": "fit all the gadgets together. This is something\nwe did in our book to get a picture of\nhow everything works.",
    "start": "3277050",
    "end": "3283765"
  },
  {
    "text": "But in general, the idea is\non the left side of the page, we have all of our variables. Those are just wires so they\ncan go one way or the other.",
    "start": "3283765",
    "end": "3290619"
  },
  {
    "text": "So the idea is here is x2. I just want to bend it so\nit's pointing downwards",
    "start": "3290620",
    "end": "3295670"
  },
  {
    "text": "so I'm going to use the\nsplitter/negation gadget. So we get this copy\nof x2 just going off.",
    "start": "3295670",
    "end": "3302060"
  },
  {
    "text": "It's going to go up to the\ntop of the page, no big deal. Just throw it away. Then, we're going\nto go over here.",
    "start": "3302060",
    "end": "3307370"
  },
  {
    "text": "Something happens to cross\nus, but we don't care. Now, what I would\nlike to do-- looks",
    "start": "3307370",
    "end": "3312420"
  },
  {
    "text": "like this clause involves x2. So I'm going to do this funny\nkind of turnaround thingy",
    "start": "3312420",
    "end": "3319859"
  },
  {
    "text": "which will end up making a\ncopy of this variable pointing straight up and also will make\na copy of the variable pointing",
    "start": "3319860",
    "end": "3326380"
  },
  {
    "text": "in this direction. And so in general, I'm\ngoing to keep doing that. And whenever I need\na copy, I'll just",
    "start": "3326380",
    "end": "3331810"
  },
  {
    "text": "use an appropriate parity of\nturns to get a positive copy. So this is negated and then\nthis is a copy of the negation",
    "start": "3331810",
    "end": "3341295"
  },
  {
    "text": "and then we flip it\none, two, three times. So in the end, it\nshould be positive. So this is the\ntricky part to check.",
    "start": "3341295",
    "end": "3347470"
  },
  {
    "text": "Here, we have a not all\nequal 3SAT clause where three things come together. And that's going to be\nfoldable if and only",
    "start": "3347470",
    "end": "3353911"
  },
  {
    "text": "if the three variables\nthat we're combining have a reasonable assignment. And then, we just have\nto copy all these things",
    "start": "3353911",
    "end": "3359990"
  },
  {
    "text": "and get them to meet all at\nthose nexuses at the top. So definitely tricky\nto make sure this works",
    "start": "3359990",
    "end": "3366880"
  },
  {
    "text": "to guarantee all\nthe coordinates can be encoded with a\npolynomial number of bits. And therefore, this is a\nstrongly NP-hard proof.",
    "start": "3366880",
    "end": "3375720"
  },
  {
    "text": "But I'm going to wave my\nhands of those details.  Questions?",
    "start": "3375720",
    "end": "3382780"
  },
  {
    "text": "If it's any consolation,\nthe original proof also waves its hand\nat these details. AUDIENCE: If you have a\nfold pattern like this,",
    "start": "3382780",
    "end": "3388550"
  },
  {
    "text": "can you tell what order you\nwould need to do the folds in? PROFESSOR: There's no such thing\nas order of the folds here.",
    "start": "3388550",
    "end": "3394000"
  },
  {
    "text": "All of the folds would be folded\nsimultaneously, more or less. AUDIENCE: Instantaneously. PROFESSOR: Instantaneously,\nto make it even more precise.",
    "start": "3394000",
    "end": "3400726"
  },
  {
    "text": "So here, it was\nreally a question of whether there is\na flat-folded state. We're not worried about\nthe motion to get there. That's another topic\nwhich you should take 8.49",
    "start": "3400726",
    "end": "3407660"
  },
  {
    "text": "if you're curious about. But these kinds of patterns,\nyou can't do one thing because there's no pleat\nthat goes all the way.",
    "start": "3407660",
    "end": "3415011"
  },
  {
    "text": "And that's life, unlike\nthe folding problem we saw two classes ago, the map\nfolding where we were doing one",
    "start": "3415011",
    "end": "3422500"
  },
  {
    "text": "and then the other. In the notion of simple\nfolds, there's an ordering, but in general origami,\nthere is no ordering.",
    "start": "3422500",
    "end": "3427560"
  },
  {
    "text": " Cool. Good, that is origami stuff.",
    "start": "3427560",
    "end": "3437100"
  },
  {
    "text": "The next topic is a more graph\ntheoretic basic question, but it will also\nrelate to a puzzle.",
    "start": "3437100",
    "end": "3444670"
  },
  {
    "text": "And this is the idea of\nvertex disjoint paths. This is in Jason\nLynch's early work,",
    "start": "3444670",
    "end": "3449960"
  },
  {
    "text": "before he was born, no relation. 1975, so early days of\nNP-completeness-- this problem,",
    "start": "3449960",
    "end": "3460230"
  },
  {
    "text": "vertex disjoint paths in a\ngraph is proved NP-complete. So the problem is, I give you\na bunch of terminal pairs, v1,",
    "start": "3460230",
    "end": "3469990"
  },
  {
    "text": "v1 prime, v2, v2 prime,\nand so on, c1, c1 prime, a bunch of pairs of vertices.",
    "start": "3469990",
    "end": "3475980"
  },
  {
    "text": "And I want to connect\nthe pairs by paths. So I want to find a path\nfrom v1 to v1 prime and so",
    "start": "3475980",
    "end": "3482220"
  },
  {
    "text": "on so that those paths\nare all vertex disjoint. Here's the hardness proof.",
    "start": "3482220",
    "end": "3488130"
  },
  {
    "text": "Super simple-- this is one of\nthe easiest 3SAT reductions. This is not the\nend of their paper.",
    "start": "3488130",
    "end": "3493900"
  },
  {
    "text": "They do more interesting\nthings, which I will get to, but first, let's\nunderstand this one. So this is a graph and I've\ndrawn it in a funny way.",
    "start": "3493900",
    "end": "3502890"
  },
  {
    "text": "These are vertices. These are vertices. These are not vertices. Those are just in the\nplane, they happen to cross,",
    "start": "3502890",
    "end": "3508900"
  },
  {
    "text": "but there's no vertex there. So it's just a straight\npath all the way through. Kind of similar to what we\ndid with phutball-- the idea",
    "start": "3508900",
    "end": "3517619"
  },
  {
    "text": "is that from v1 to v1\nprime, there are two paths, at least if you stay here.",
    "start": "3517620",
    "end": "3522850"
  },
  {
    "text": "You could try to go into a\nclause path and wreak havoc, but I think you will\nbe doomed, I hope.",
    "start": "3522850",
    "end": "3529080"
  },
  {
    "text": "So the idea is v1, maybe\nyou choose the blue path. That will prevent c3 from\nusing that path because there's",
    "start": "3529080",
    "end": "3536146"
  },
  {
    "text": "an intersection here. It won't prevent anybody\nelse because there's no other vertices here. So I use the blue path,\nc3 cannot use that path.",
    "start": "3536146",
    "end": "3544420"
  },
  {
    "text": "If I use the red path,\nc1 can't use this one. c2 can't use this one. So again, we are\nblocking the thing",
    "start": "3544420",
    "end": "3550770"
  },
  {
    "text": "that it would be setting false. So that means, let's say red--\nI forget in this picture-- let's",
    "start": "3550770",
    "end": "3556960"
  },
  {
    "text": "say red is true. Then, c1 has v1 bar in it.",
    "start": "3556960",
    "end": "3564690"
  },
  {
    "text": "c1 is happy if you\nchoose the blue path but it's not happy if\nyou choose the red path. Now, c1 to c1 prime\nonly has to be happy",
    "start": "3564690",
    "end": "3572880"
  },
  {
    "text": "if one of these three things\nare happy and that's 3SAT. At least one of the things\nshould be set correctly.",
    "start": "3572880",
    "end": "3578770"
  },
  {
    "text": "Then, there is a path\nfrom c1 to c1 prime. Otherwise, there'll be\nvertex intersections. You won't have vertex\ndisjoint paths.",
    "start": "3578770",
    "end": "3585630"
  },
  {
    "text": "So in a graph, done. Now, let's make it a planar\ngraph, where things get fun.",
    "start": "3585630",
    "end": "3592250"
  },
  {
    "text": "So this is the original gadget. I've stared at it\nfor many hours, but it's actually\npretty simple after you",
    "start": "3592250",
    "end": "3599530"
  },
  {
    "text": "stare at it for enough hours. Let me try to\nconvince you of that.",
    "start": "3599530",
    "end": "3605250"
  },
  {
    "text": "So I'm going to follow the\nsame kind of outline here, but we have to get rid of these.",
    "start": "3605250",
    "end": "3611285"
  },
  {
    "text": "These are fine. Those are intersections. But these crossovers, we need\nto build a crossover gadget.",
    "start": "3611285",
    "end": "3617410"
  },
  {
    "text": "So the idea is\ninstead of v1 to v1 prime being a single path--\nthat's going to be a problem.",
    "start": "3617410",
    "end": "3624290"
  },
  {
    "text": "Instead of that, I'm going\nto have it be several paths and they're going to\nbe nested brackets.",
    "start": "3624290",
    "end": "3630540"
  },
  {
    "text": " Chalk-- this is the kind\nof thing we're imagining.",
    "start": "3630540",
    "end": "3648120"
  },
  {
    "text": "We have some vertex pairs\nwhich can connect like this.",
    "start": "3648120",
    "end": "3654120"
  },
  {
    "text": "And there are two ways\nto connect them in what will end up being the diagram. We could connect them like this.",
    "start": "3654120",
    "end": "3662625"
  },
  {
    "start": "3662625",
    "end": "3667750"
  },
  {
    "text": "Notice I'm still connecting the\nsame pairs if I do it right. ",
    "start": "3667750",
    "end": "3674510"
  },
  {
    "text": "And the whites do not\nintersect each other. They're vertex disjoint. The reds do not\nintersect each other.",
    "start": "3674510",
    "end": "3679589"
  },
  {
    "text": "They're vertex disjoint. But if you tried to\nswitch from white to red, you'd get intersections. ",
    "start": "3679590",
    "end": "3685960"
  },
  {
    "text": "There's exactly\ntwo settings here. So this is a wire. Once I choose over\nhere white or red,",
    "start": "3685960",
    "end": "3692740"
  },
  {
    "text": "all the others are\nforced to alternate. Oh, sorry. Once I choose up\nor down, the rest",
    "start": "3692740",
    "end": "3698470"
  },
  {
    "text": "are forced to\nalternate up or down. If I choose white here,\nthey're all white. If I choose red,\nthey're all red.",
    "start": "3698470",
    "end": "3704059"
  },
  {
    "text": "This is independent\nfor each variable, so independent for each wire. So that's what's going on\nhere and if you look closely",
    "start": "3704060",
    "end": "3709470"
  },
  {
    "text": "at the bold lines, you've got\na bracket here from v1 to x1.",
    "start": "3709470",
    "end": "3714599"
  },
  {
    "text": "Then, you've got a bracket\nhere from x2 to x3, then a bracket here from x4.",
    "start": "3714600",
    "end": "3719660"
  },
  {
    "text": "But in general, there would be\nlots of those brackets going all the way down the picture.",
    "start": "3719660",
    "end": "3726340"
  },
  {
    "text": "And the cool thing about\nthis is you get the ability to crossover,\nbecause now if I just",
    "start": "3726340",
    "end": "3732840"
  },
  {
    "text": "restrict this picture--\nit's hard to see-- if I just restrict to the white part,\nyou can go from top to bottom.",
    "start": "3732840",
    "end": "3739580"
  },
  {
    "text": "You just need an\nappropriate kind of zigzag. That will let you go from\nup here to down there",
    "start": "3739580",
    "end": "3746740"
  },
  {
    "text": "without intersections\nand that's what's happening with this line. It's going over, around\nthe brackets, and down.",
    "start": "3746740",
    "end": "3755119"
  },
  {
    "text": "And so the c1 to c1 prime\ncan remain a single path. It can always get through.",
    "start": "3755120",
    "end": "3761050"
  },
  {
    "text": "If you have this\ngadget, then you can have an intersection\nwith no trouble. But v1 is still\ncommunicating information",
    "start": "3761050",
    "end": "3767900"
  },
  {
    "text": "down the line of one setting\nor the other, 0 or 1.",
    "start": "3767900",
    "end": "3773319"
  },
  {
    "text": "There's some details to check\nthere, but that's the idea.",
    "start": "3773320",
    "end": "3778880"
  },
  {
    "text": "And that's the end\nof the Lynch paper. Now, we were looking at\nthis earlier this year",
    "start": "3778880",
    "end": "3786480"
  },
  {
    "text": "and we can prove an even\nstronger result, which is what you might call\nplanar vertex disjoint",
    "start": "3786480",
    "end": "3792020"
  },
  {
    "text": "paths in a rectangle.  So the idea is you\nhave a rectangle",
    "start": "3792020",
    "end": "3798345"
  },
  {
    "text": "of one-by-one squares. Each one-by-one square could be\na terminal and a terminal pair",
    "start": "3798345",
    "end": "3805405"
  },
  {
    "text": "or it could just\nbe a blank space so you can route paths through. And my goal is to find vertex\ndisjoint paths connecting",
    "start": "3805405",
    "end": "3813910"
  },
  {
    "text": "all the terminal pairs. But furthermore, I want\nevery square of the grid to be occupied by a path.",
    "start": "3813910",
    "end": "3821000"
  },
  {
    "text": "So it's not quite\nHamiltonian path. It's like you have a bunch\nof paths that collectively",
    "start": "3821000",
    "end": "3827190"
  },
  {
    "text": "fill the entire grid. Why? It's motivated by a puzzle,\nbut it's natural enough.",
    "start": "3827190",
    "end": "3832890"
  },
  {
    "text": "This is a more\nspecialized version. So this is also\nNP-hard and we're going to mimic the same proof.",
    "start": "3832890",
    "end": "3838810"
  },
  {
    "text": "And this, for\nexample, is a gadget to do, say, this little picture\nwhere you have two choices.",
    "start": "3838810",
    "end": "3845260"
  },
  {
    "text": "So maybe the v1 dot\nis actually here and the idea is you could\neither follow this path",
    "start": "3845260",
    "end": "3850620"
  },
  {
    "text": "or you can follow this path. And what's also drawn here are\nlots of other terminal pairs.",
    "start": "3850620",
    "end": "3856880"
  },
  {
    "text": "These are what you might\ncall adjacent terminal pairs, what you might also\ncall obstacles.",
    "start": "3856880",
    "end": "3862870"
  },
  {
    "text": "Because the paths have\nto be vertex disjoint, no path can go\nthrough a terminal.",
    "start": "3862870",
    "end": "3869000"
  },
  {
    "text": "Any of these dots\nserve as obstacles so we effectively simulate this\nblank space that you're not allowed to touch.",
    "start": "3869000",
    "end": "3874759"
  },
  {
    "text": " Now, the fun part is\nmaybe those terminal",
    "start": "3874760",
    "end": "3880050"
  },
  {
    "text": "pairs are connected by\nthe single edge that joins them and doesn't\nget in the way. But there are\nother possibilities",
    "start": "3880050",
    "end": "3886140"
  },
  {
    "text": "drawn with these blue lines. So instead of going\nhere, I could do this. Instead of going here, I\ncould do this and this.",
    "start": "3886140",
    "end": "3893007"
  },
  {
    "text": "And then, if you\nlook at this picture, every pixel has a path\nthrough it in this case.",
    "start": "3893007",
    "end": "3901090"
  },
  {
    "text": "And then, here's\nthe other case again and now I'll fill these\ntwo pixels with this pair.",
    "start": "3901090",
    "end": "3907240"
  },
  {
    "text": "And now, every pixel\nhas a path through it. That's my goal is to\nmake sure every pixel has a path through it.",
    "start": "3907240",
    "end": "3912520"
  },
  {
    "text": "So we're just trying\nto preserve all of the solutions\nwe have here but with the additional\nconstraint that all of the-- because we already\nknow this is simulating 3SAT.",
    "start": "3912520",
    "end": "3920540"
  },
  {
    "text": "We already know it's hard. We just now want to have\nthis extra constraint that every pixel has\na path through it",
    "start": "3920540",
    "end": "3926600"
  },
  {
    "text": "and that we live in a rectangle. So this looks good. As you might imagine, there's\na little bit of finesse",
    "start": "3926600",
    "end": "3933790"
  },
  {
    "text": "to make these gadgets work. You notice some of these guys\nare oriented horizontally. Some of them are\noriented vertically.",
    "start": "3933790",
    "end": "3939401"
  },
  {
    "text": "That's to make it\nwork, but this is easy. What you're about\nto see is less easy.",
    "start": "3939401",
    "end": "3947170"
  },
  {
    "text": "So let's do the crossover\ngadget, because that's the heart of everything. And when we were\nstarting on this--",
    "start": "3947170",
    "end": "3953090"
  },
  {
    "text": "I think this was in\nMay-- I was very happy when I could finally\ndraw this picture.",
    "start": "3953090",
    "end": "3960354"
  },
  {
    "text": "Sorry, this is actually\nthe final gadget which works but you can see\nthe same kind of picture.",
    "start": "3960354",
    "end": "3967010"
  },
  {
    "text": "I've got a bracket here that\ncorresponds to this bracket here and there's\nanother bracket here. I've just rounded it\nto integer coordinates",
    "start": "3967010",
    "end": "3974090"
  },
  {
    "text": "and made sure that everything\nelse can be filled in. Easy, right? ",
    "start": "3974090",
    "end": "3982020"
  },
  {
    "text": "In the sake of education, let\nme show you all the things that went wrong in this proof. Because it was only\na few months ago,",
    "start": "3982020",
    "end": "3987420"
  },
  {
    "text": "I mostly remember\neverything that went wrong, which was a lot.",
    "start": "3987420",
    "end": "3992450"
  },
  {
    "text": "So this was an early\nversion of the gadget, not actually the first one\nbut it serves its purpose.",
    "start": "3992450",
    "end": "3998960"
  },
  {
    "text": "So here, we have\nthe two settings. It's corresponding to\nthese two settings, the up and the down setting, the\ntrue and the false setting.",
    "start": "3998960",
    "end": "4005710"
  },
  {
    "text": "We've got this path coming\nthrough in both cases. It takes a slightly\ndifferent path over here.",
    "start": "4005710",
    "end": "4012620"
  },
  {
    "text": "The brackets are flipped. So the first thing\nI want to point out are these circled nodes.",
    "start": "4012620",
    "end": "4019310"
  },
  {
    "text": "The obvious way to\ndraw this picture is with all of the\nterminals in the center row.",
    "start": "4019310",
    "end": "4025298"
  },
  {
    "text": "That would be reasonable. They're not drawn that way here\nbecause imagine at this point, we're down here and we have\nthis big path over here.",
    "start": "4025299",
    "end": "4032900"
  },
  {
    "text": "Then, there'll be\nthree pixels here which somehow have to be filled. And that is trouble\nbecause three is odd.",
    "start": "4032900",
    "end": "4041740"
  },
  {
    "text": "So this is what you\nmight call issue one. Wherever you have\nempty space, any group",
    "start": "4041740",
    "end": "4047550"
  },
  {
    "text": "should have even area because\nif you look at two guys that are adjacent and you replace\nthem with some other path,",
    "start": "4047550",
    "end": "4056890"
  },
  {
    "text": "together, that forms a polygon. And in the square grid\nevery polygon has even area.",
    "start": "4056890",
    "end": "4062590"
  },
  {
    "text": "So you will never fill\nexactly three spaces. So the major revolution which\nI spent many hours figuring out",
    "start": "4062590",
    "end": "4070400"
  },
  {
    "text": "is if I just move these\npoints up one spot, everything just works. I was so happy. So I figured, OK, proof's done.",
    "start": "4070400",
    "end": "4076700"
  },
  {
    "text": "I drew these two figures\nand forgot about it. Then, a couple months later,\nwe want to write the paper",
    "start": "4076700",
    "end": "4084250"
  },
  {
    "text": "and then we get to issue two. So issue two is\nwell, this is great. This works fine if the\nclause path is present.",
    "start": "4084250",
    "end": "4094590"
  },
  {
    "text": "If the clause chooses\nthis vertical path, this will fill everything. This will fill everything.",
    "start": "4094590",
    "end": "4099720"
  },
  {
    "text": "But what if the\nclause path is absent? Clause has three choices. It may not choose\nthis vertical path.",
    "start": "4099720",
    "end": "4105920"
  },
  {
    "text": "So then, somehow, this stuff\nhas to be covered using all the extra filler stuff.",
    "start": "4105920",
    "end": "4113700"
  },
  {
    "text": "And here, I couldn't\nquite figure out how to fill these things. Well, maybe I should add a\ncouple more rows in the middle.",
    "start": "4113700",
    "end": "4121470"
  },
  {
    "text": "That didn't seem to help. I thought this one was OK. It looks fine until I\nnotice that well, either I",
    "start": "4121470",
    "end": "4129540"
  },
  {
    "text": "connect these two dots\nby a length two path or I connect it by this path. But in that case, this\npixel is uncovered by paths.",
    "start": "4129540",
    "end": "4139950"
  },
  {
    "text": "And this is bad, because there's\nexactly one such pixel, which means I have another\nparity problem again.",
    "start": "4139950",
    "end": "4146350"
  },
  {
    "text": "So I think what we\nended up doing--",
    "start": "4146350",
    "end": "4151528"
  },
  {
    "text": "and when you're really doing\nit, you don't immediately realize it's a parity problem.",
    "start": "4151529",
    "end": "4156630"
  },
  {
    "text": "I tried trying to fix\nthis many, many times and every single time, I\nhad one pixel uncovered. Oh, bet there's a theorem here.",
    "start": "4156630",
    "end": "4162620"
  },
  {
    "text": "And then, I proved, oh, yeah,\nit's got to change parity. So what we ended up doing\nwas adding a row down here.",
    "start": "4162620",
    "end": "4169670"
  },
  {
    "text": "Make this path slightly longer. That adds exactly\none uncovered pixel so it should fix\nthe parity problem.",
    "start": "4169670",
    "end": "4175810"
  },
  {
    "text": "Many hours later, we\ncame up with this. So this is good.",
    "start": "4175810",
    "end": "4182500"
  },
  {
    "text": "Every pixel is covered\nin all four cases. The bottom row is that\nthe clause path is in",
    "start": "4182500",
    "end": "4190528"
  },
  {
    "text": "and the top row is the\nclause path is out. And as you can see, lots\nof careful orientations",
    "start": "4190529",
    "end": "4196580"
  },
  {
    "text": "of these little terminal pairs\nto make sure in all cases, you can cover everything. This was frustrating\nbecause you'd fix one",
    "start": "4196580",
    "end": "4202500"
  },
  {
    "text": "and then you switch\nto the other layer and say, oh, I broke\nthis other one. I rotated these guys and now,\nit's not possible to do this,",
    "start": "4202500",
    "end": "4209150"
  },
  {
    "text": "so you better-- and\nit would be like, you'd rotate this and then\nrotate that and rotate this. And luckily, no bad\ncycles happened.",
    "start": "4209150",
    "end": "4216250"
  },
  {
    "text": "You could always resolve it. And so finally, we\ngot this picture, except for issue three, which\nis another parity problem.",
    "start": "4216250",
    "end": "4226070"
  },
  {
    "text": "I was blown away. It was like every day, there\nwas another parity problem. Of course, the deadline\nis tomorrow at this point.",
    "start": "4226070",
    "end": "4234159"
  },
  {
    "text": "Luckily, I started\nthree days ahead so there were\nexactly three issues.",
    "start": "4234160",
    "end": "4240530"
  },
  {
    "text": "So remember this gadget,\nwhich was the choice. I didn't say this is\na variable choice.",
    "start": "4240530",
    "end": "4245695"
  },
  {
    "text": "You have two choices. If you want a clause choice,\nyou connect two of these gadgets together and then you\nhave three different paths",
    "start": "4245695",
    "end": "4251370"
  },
  {
    "text": "you might follow. If you stare at this\nenough-- and I just wanted to make sure, OK,\ncan I plug these together?",
    "start": "4251370",
    "end": "4257500"
  },
  {
    "text": "I thought, OK, I'll just copy\nand paste and lay things out and I had a parity problem. I was like, oh, man,\nwhat's going on?",
    "start": "4257500",
    "end": "4264120"
  },
  {
    "text": "Well, if you look here,\nthis is at one column and this is a column\nfour positions over.",
    "start": "4264120",
    "end": "4270870"
  },
  {
    "text": "So in particular,\nthe two choices here have the same parity. I think it's mod 2 not mod\n4 but I could double-check.",
    "start": "4270870",
    "end": "4278920"
  },
  {
    "text": "And you just cannot build this\nif you want these things to be an odd distance\napart because parity.",
    "start": "4278920",
    "end": "4286219"
  },
  {
    "text": "So then, you look at\nthis gadget and you realize it has an odd\nnumber of columns.",
    "start": "4286220",
    "end": "4293070"
  },
  {
    "text": "We've made it an\neven number of rows when we added that\nlast row but now it has an odd number of\ncolumns, which is kind of weird",
    "start": "4293070",
    "end": "4300150"
  },
  {
    "text": "but that's life. So we need to make it even.",
    "start": "4300150",
    "end": "4305630"
  },
  {
    "text": "And so I think if\nyou focus right here, we add another column.",
    "start": "4305630",
    "end": "4311210"
  },
  {
    "text": "It's now right here so\nwhere there used to be two, now there are three. We have this little trick\nto fill things in and not",
    "start": "4311210",
    "end": "4317600"
  },
  {
    "text": "too much changed. I think I also\ncleaned up the gadget or removed a couple extra\ncolumns on the right, but the key thing was\nto add a new column that",
    "start": "4317600",
    "end": "4325150"
  },
  {
    "text": "fixed the parity. Now, the number\nof columns is even and now, I have to prove this. But it's pretty easy to check.",
    "start": "4325150",
    "end": "4333040"
  },
  {
    "text": "You can combine these gadgets\ntogether and they match up. And then, if you\nhave blank space,",
    "start": "4333040",
    "end": "4339550"
  },
  {
    "text": "it's also even by even and so\nit always has a perfect matching and so you can fill in any\nblank space with extra pairs.",
    "start": "4339550",
    "end": "4346960"
  },
  {
    "text": " Those are the gadgets\nexcept there's one more",
    "start": "4346960",
    "end": "4355480"
  },
  {
    "text": "issue I haven't mentioned. AUDIENCE: Yeah, there's\na parity problem with your parity problems. There's only an\nodd number of them.",
    "start": "4355480",
    "end": "4360640"
  },
  {
    "text": "PROFESSOR: Only an odd\nnumber of parity problems-- luckily, the next problem\nis not a parity problem or unluckily-- I don't know.",
    "start": "4360640",
    "end": "4367040"
  },
  {
    "text": "And this wasn't\nreally a problem. I knew it was going to happen. I just had to draw the figure\nbut it's good for an exercise.",
    "start": "4367040",
    "end": "4373720"
  },
  {
    "text": "Think about what could\npossibly be missing. We spent all this time\ndoing crossover gadgets",
    "start": "4373720",
    "end": "4379949"
  },
  {
    "text": "but there's also the case\nwhere the wires cross and we actually want\nthe vertical wire",
    "start": "4379950",
    "end": "4385060"
  },
  {
    "text": "to block the horizontal\nwire in a particular choice. This is actually\nreally easy to do.",
    "start": "4385060",
    "end": "4390550"
  },
  {
    "text": "So here's the gadget\nI was just showing you without all the stuff filled in. Those are just the\nterminal pairs.",
    "start": "4390550",
    "end": "4395599"
  },
  {
    "text": "And this guy goes to the left. This guy goes to here. This guy goes to the right.",
    "start": "4395600",
    "end": "4401770"
  },
  {
    "text": "If you just add in an extra\npair here or an extra pair here,",
    "start": "4401770",
    "end": "4407000"
  },
  {
    "text": "you will block blue or\nred, correspondingly. So if we go to the\nprevious slide here, blue goes through this\nposition but red does not.",
    "start": "4407000",
    "end": "4415370"
  },
  {
    "text": "And down here, blue does\nnot go through this position but red does.",
    "start": "4415370",
    "end": "4421850"
  },
  {
    "text": "And so if you add in\nthis extra little pair, you will force red or\nblue at that intersection.",
    "start": "4421850",
    "end": "4427659"
  },
  {
    "text": "And that was the little\nsquares in the overall diagram. So if you choose\nthis vertical path, you force the horizontal\npath to be the other thing.",
    "start": "4427660",
    "end": "4437100"
  },
  {
    "text": "That's the proof. I hope there are no more\nissues but it was exciting.",
    "start": "4437100",
    "end": "4445070"
  },
  {
    "text": "So just to give you a\nflavor for parity issues, there are all over the\nplace, especially when you're on a grid. Be careful of them.",
    "start": "4445070",
    "end": "4451780"
  },
  {
    "text": "That's the life lesson.  I'll tell you a little bit\nabout where this kind of problem",
    "start": "4451780",
    "end": "4458890"
  },
  {
    "text": "comes from. The earliest reference we know\nis by Sam Loyd, a famous puzzle designer. In 1897, he posed this puzzle,\nan incredibly complicated",
    "start": "4458890",
    "end": "4468100"
  },
  {
    "text": "puzzle, lots of stuff in it. And then, I think\nthe next issue, he published the\nsolution, which is this.",
    "start": "4468100",
    "end": "4475939"
  },
  {
    "text": "Hopefully, I\nremember the problem. So you have these\nhouses and you'll notice each house faces an exit.",
    "start": "4475939",
    "end": "4484640"
  },
  {
    "text": "And what you'd like\nis for each house to be connected by a\npathway to the exit.",
    "start": "4484640",
    "end": "4492394"
  },
  {
    "text": "But if you just did that, they\nwould intersect each other. So you want vertex\ndisjoint paths in the grid from the houses\nto the exit that they face.",
    "start": "4492394",
    "end": "4500120"
  },
  {
    "text": "So that is a terminal pair\nvertex disjoint path problem. Now, he didn't specify\nthat those paths should",
    "start": "4500120",
    "end": "4507880"
  },
  {
    "text": "fill the entire grid\nbut they almost do. Other than this\nlittle corner, they",
    "start": "4507880",
    "end": "4513390"
  },
  {
    "text": "do and a few little\ncorners at the extremes. And you can fix it. Instead of going\nlike this, you can",
    "start": "4513390",
    "end": "4518730"
  },
  {
    "text": "go zig, zig, zig, zig, and\nzig, zig, zig, zig, zig and make it into a solution\nto the problem I just said.",
    "start": "4518730",
    "end": "4529000"
  },
  {
    "text": "So that's 1897. In modern terms, this is known\nas the Numberlink puzzle.",
    "start": "4529000",
    "end": "4536220"
  },
  {
    "text": "Nikoli is a famous\nJapanese puzzle publisher. These are two Nikoli books\nthat we got in our last trip",
    "start": "4536220",
    "end": "4544900"
  },
  {
    "text": "to Japan a couple months ago. These are both for\nthe Numberlink puzzle. So you turn to an arbitrary\npage and you have some picture",
    "start": "4544900",
    "end": "4554490"
  },
  {
    "text": "like this, which\nhere's an example. You have pairs. You have a bunch of\nnumbers and blank spaces.",
    "start": "4554490",
    "end": "4561050"
  },
  {
    "text": "The idea is that there's\nexactly two of each number. Those are your terminal pairs. You want to find vertex\ndisjoint paths that connect them",
    "start": "4561050",
    "end": "4568335"
  },
  {
    "text": "and in the back,\nthere's solutions if you can't solve one. They have easy ones,\nmedium ones, hard ones.",
    "start": "4568335",
    "end": "4577060"
  },
  {
    "text": "So how hard is it? NP-hard because this is exactly\nthe problem we were just solving, if you want\nto find vertex disjoint",
    "start": "4577060",
    "end": "4584170"
  },
  {
    "text": "paths in the grid. There is this issue\nof whether you",
    "start": "4584170",
    "end": "4589340"
  },
  {
    "text": "are specified as one\nof the constraints that you must\nvisit every square.",
    "start": "4589340",
    "end": "4596030"
  },
  {
    "text": "But do a quick visual scan\nhere-- in every solution",
    "start": "4596030",
    "end": "4603369"
  },
  {
    "text": "that I see, every square\nhappens to be filled. Now, that might be the\nway that they designed",
    "start": "4603370",
    "end": "4610410"
  },
  {
    "text": "the puzzles, the only way to\nsolve them is for every square to be filled or it might\nbe that's a constraint to the puzzle.",
    "start": "4610410",
    "end": "4615813"
  },
  {
    "text": "And different write-ups\nsuggest different ways. But what we proved is,\nboth ways, it's hard. Whether you give that as a\nspecification or you make",
    "start": "4615813",
    "end": "4623740"
  },
  {
    "text": "it possible to do, it is\nNP-hard because we started from a reduction that didn't\nhave to fill every pixel",
    "start": "4623740",
    "end": "4630070"
  },
  {
    "text": "and we turned it\ninto one that could fill every pixel if you wanted. Yeah? AUDIENCE: There's a sense\nin which these puzzles are",
    "start": "4630070",
    "end": "4637330"
  },
  {
    "text": "sparser, in terms of\nthe number of vertices than your reduction. Is it possible that you\ncould define it in such a way",
    "start": "4637330",
    "end": "4645277"
  },
  {
    "text": "that these are unsolvable? PROFESSOR: It's an\ninteresting question. So our reduction has most of\nthe cells filled with numbers.",
    "start": "4645277",
    "end": "4656640"
  },
  {
    "text": "These you could say, if you\nhave an n by n grid, maybe these only have order\nn numbers, whereas we",
    "start": "4656640",
    "end": "4661890"
  },
  {
    "text": "have order n squared numbers. That would be interesting. I don't know the complexity. The one thing that's known\nis for one terminal pair,",
    "start": "4661890",
    "end": "4669429"
  },
  {
    "text": "it's polynomial time. I think even two terminal\npairs is an open problem.",
    "start": "4669430",
    "end": "4675590"
  },
  {
    "text": "So you need to solve that\nbefore you could solve n terminal pairs for an n by n.",
    "start": "4675590",
    "end": "4681739"
  },
  {
    "text": "So I don't know how many people\nworked on two terminal pairs. I've thought about\nit a little bit. It seems very difficult.",
    "start": "4681739",
    "end": "4688099"
  },
  {
    "text": "Anyway, a little\nmore to this story. ",
    "start": "4688100",
    "end": "4693454"
  },
  {
    "text": "In fact, we first\nencountered Numberlink in the form of an Android\ngame called Flow Free, which some of you may have played.",
    "start": "4693454",
    "end": "4699010"
  },
  {
    "text": "It became popular for\na few months there but it is exactly Numberlink\nas I have defined it.",
    "start": "4699010",
    "end": "4705670"
  },
  {
    "text": "And once you know\nthat, then there's also Number Link and a\nzillion other clones.",
    "start": "4705670",
    "end": "4711580"
  },
  {
    "text": "And I don't think Nikoli\npublishes any of these. But it's all from\n1897, so unclear what the copyright is here.",
    "start": "4711580",
    "end": "4718937"
  },
  {
    "text": "But in particular,\nNumber Link I like. It has the nicest GUI. But in the beginning\ntutorial, it",
    "start": "4718937",
    "end": "4724760"
  },
  {
    "text": "says, well, there's actually\ntwo modes you can play. There's zigzag mode, where\nyou can draw paths however you want. That's what I've been\ntalking about because",
    "start": "4724760",
    "end": "4731680"
  },
  {
    "text": "graphed theoretically,\nthat's the natural thing. Then, there's this other\nmodes called classic mode",
    "start": "4731680",
    "end": "4737060"
  },
  {
    "text": "where if you draw\na complicated path, it gets-- \"autoshrinked\"\nis the general term.",
    "start": "4737060",
    "end": "4746020"
  },
  {
    "text": "Now, again, it's hard to\nhave an authority here in what are the\nrules of Number Link? But one definition\nis you consider",
    "start": "4746020",
    "end": "4753440"
  },
  {
    "text": "all possible paths\nbetween these pairs that have the same topology. ",
    "start": "4753440",
    "end": "4760442"
  },
  {
    "text": "You can try to go this way or\nyou could try to go this way. Here, you have these two\nguys on your right-hand side. Here, you have them\non the left-hand side.",
    "start": "4760442",
    "end": "4766980"
  },
  {
    "text": "In general, that's called a\nhomotopy type of that path. Consider all paths with\nthe same homotopy type.",
    "start": "4766980",
    "end": "4773960"
  },
  {
    "text": "Your path should be shortest\namong all such paths. That is one notion\nof autoshrinked.",
    "start": "4773960",
    "end": "4780503"
  },
  {
    "text": "I don't know if that's the\nofficial one, but it is a-- AUDIENCE: That has to do\nwith the order in which you set the things.",
    "start": "4780503",
    "end": "4786340"
  },
  {
    "text": "PROFESSOR: This description\nsuggests a particular order. So you'd also maybe\nneed a proper ordering.",
    "start": "4786340",
    "end": "4792504"
  },
  {
    "text": "Yeah? AUDIENCE: So the\n1 to the 1 here, there's multiple ways--\nwell, the other way,",
    "start": "4792504",
    "end": "4798713"
  },
  {
    "text": "there's multiple ways to get\nthrough that square grid, I think. You can go down and all the\nway around or you could go--",
    "start": "4798713",
    "end": "4803949"
  },
  {
    "text": "PROFESSOR: Right. These would both\nbe the same length. And I think those are\nboth considered valid, although you'd have to\nplay in this particular--",
    "start": "4803950",
    "end": "4809400"
  },
  {
    "text": "AUDIENCE: So it wouldn't\nchange either of those.It would take the one you chose. PROFESSOR: Right. So you still have\nsome flexibility.",
    "start": "4809400",
    "end": "4814580"
  },
  {
    "text": "There are multiple shortest\npaths in this world, because we're Manhattan metric. So this raises the issue\nof classic Number Link.",
    "start": "4814580",
    "end": "4824092"
  },
  {
    "text": "And most of the puzzles--\nI think all the puzzles-- I haven't checked every\nsingle one-- actually follow these rules.",
    "start": "4824092",
    "end": "4830079"
  },
  {
    "text": "But again, I'm not clear\nwhat the rules actually are, whether they\nrequire this or this.",
    "start": "4830080",
    "end": "4835840"
  },
  {
    "text": "But luckily, there's another\npaper the covers that case. It's in Japanese but it\nconsiders the classic mode,",
    "start": "4835840",
    "end": "4850050"
  },
  {
    "text": "where you have to do some kind\nof locally shortest paths. And the gadgets critically\nexploit that feature.",
    "start": "4850050",
    "end": "4857059"
  },
  {
    "text": "It's a reduction\nfrom planar 3SAT. We might look at it when\nwe get to planar 3SAT, which is the next class or two.",
    "start": "4857060",
    "end": "4863300"
  },
  {
    "text": "Or not-- there's a ton\nof planar 3SAT proofs. But anyway, that's\nbeen covered already. The actual order of events\nis we proved our result",
    "start": "4863300",
    "end": "4870080"
  },
  {
    "text": "and then we're like, uh\noh, this is Numberlink. Uh oh, Numberlink is\nNP-complete and that was known a few years ago. Oh, good thing it's a\ndifferent game that we studied.",
    "start": "4870080",
    "end": "4878270"
  },
  {
    "text": "So there are two versions\nof Numberlink now. They're both hard. So that's the good news\nand that's all for today.",
    "start": "4878270",
    "end": "4885590"
  },
  {
    "text": "This is the Super Mario\nBrothers edition of 6.890. ",
    "start": "4885590",
    "end": "4898435"
  }
]