[
  {
    "text": " The following content is provided under a\nCreative Commons license. Your support will help MIT OpenCourseWare continue to offer\nhigh quality educational resources for free.",
    "start": "0",
    "end": "10680"
  },
  {
    "text": "To make a donation or view additional materials\nfrom hundreds of MIT courses, visit MIT OpenCourseWare at ocw.mit.edu.",
    "start": "10680",
    "end": "21320"
  },
  {
    "text": "PROFESSOR: All right. Good morning, everyone.\nLet's get started. So we're going to start",
    "start": "21320",
    "end": "29800"
  },
  {
    "text": "6.046 in earnest today. We're going to start\nwith our first module on divide and conquer.",
    "start": "29810",
    "end": "38000"
  },
  {
    "text": "You've all seen divide and conquer algorithms\nbefore. Merge sort is a classic divide and",
    "start": "38000",
    "end": "44149"
  },
  {
    "text": "conquer algorithm. I'm going to spend just\na couple minutes talking about the paradigm,",
    "start": "44149",
    "end": "50468"
  },
  {
    "text": "give you a slightly more general setting than\nmerge sort. And then we'll get into two really",
    "start": "50469",
    "end": "55680"
  },
  {
    "text": "cool divide and conquer problems in the sense\nthat these are problems for which divide and",
    "start": "55680",
    "end": "64059"
  },
  {
    "text": "conquer works very well-- mainly, convex hall\nand median finding.",
    "start": "64059",
    "end": "70149"
  },
  {
    "text": "So before I get started on the material, let\nme remind you that you should be signing up",
    "start": "70149",
    "end": "76340"
  },
  {
    "text": "for a recitation section on Stellar. And please\ndo that even if you don't plan on attending",
    "start": "76340",
    "end": "82779"
  },
  {
    "text": "sections. Because we need that so we can assign\nyour problem sets to be graded, OK?",
    "start": "82779",
    "end": "90139"
  },
  {
    "text": "So that's our way of partitioning problem\nsets as well. And then the other thing is",
    "start": "90139",
    "end": "96310"
  },
  {
    "text": "problem set one is going to go out today.\nAnd that it's a one week problem set.",
    "start": "96310",
    "end": "102258"
  },
  {
    "text": "All problem sets are going to be a week in\nduration. Please read these problem sets the",
    "start": "102259",
    "end": "109479"
  },
  {
    "text": "day that they come out. Spend 5, 10 minutes\nreading them. Some things are going to look like they're\nmagic, that they're-- how could I possibly",
    "start": "109479",
    "end": "119700"
  },
  {
    "text": "prove this? If you think about it for a bit,\nit'll become obvious. We promise you that.",
    "start": "119700",
    "end": "125959"
  },
  {
    "text": "But get started early. Don't get started at\n7:00 PM when we have 11:59 PM deadline on",
    "start": "125959",
    "end": "132459"
  },
  {
    "text": "Thursday, all right? That four hours or five\nhours of time may not be enough to go from",
    "start": "132459",
    "end": "139110"
  },
  {
    "text": "magical to obvious, OK? So let's get started with the paradigm associated\nwith divide and conquer. It's just a beautiful",
    "start": "139110",
    "end": "151930"
  },
  {
    "text": "notion that you can break up the problem into\nsmaller parts and somehow compose the solutions",
    "start": "151930",
    "end": "161159"
  },
  {
    "text": "to the smaller parts. And of course, the details\nare going to be what's important when we take",
    "start": "161159",
    "end": "167689"
  },
  {
    "text": "a particular problem instance. But let's say we're given a problem of size\nn. We're going to divide it into a sub problems--",
    "start": "167689",
    "end": "179900"
  },
  {
    "text": "I'll put that in quotes so you know it's a\nsymbol-- a sub problems of size n over b.",
    "start": "179900",
    "end": "193459"
  },
  {
    "text": "And here, a is an integer. And a is going to be greater than or equal\nto 1. It could be two. It could be three.",
    "start": "193459",
    "end": "202609"
  },
  {
    "text": "It could be four. This is the generalization I alluded to. And\nb does not have to be two or even an integer.",
    "start": "202609",
    "end": "212549"
  },
  {
    "text": "But it has to be strictly greater than one. Otherwise, there's no notion of divide and\nconquer. You're not breaking things up into",
    "start": "212549",
    "end": "220519"
  },
  {
    "text": "smaller problems. So b should be strictly\ngreater than one. So that's the general setting.",
    "start": "220519",
    "end": "228549"
  },
  {
    "text": "And then you'll solve each sub problem recursively.\nAnd the idea here is that once the sub problems",
    "start": "228549",
    "end": "238379"
  },
  {
    "text": "become really small, they become constant\nsize, it's relatively easy to solve them.",
    "start": "238379",
    "end": "246249"
  },
  {
    "text": "You can just do exhaustive search. If you have 10 elements and you're doing effectively\na cubic search, well, 10 cubed is 1,000. That's",
    "start": "246249",
    "end": "256738"
  },
  {
    "text": "a constant. You're in great shape as long\nas the constants are small enough.",
    "start": "256738",
    "end": "262449"
  },
  {
    "text": "And so you're going to recurse until these\nproblems get small. And then typically-- this",
    "start": "262449",
    "end": "268849"
  },
  {
    "text": "is not true for all divide and conquer approaches.\nBut for most of them, and certainly the ones",
    "start": "268849",
    "end": "275590"
  },
  {
    "text": "we're going to cover today, the smarts is\ngoing to be in the combination step-- when",
    "start": "275590",
    "end": "282370"
  },
  {
    "text": "you combine these problems, the solutions\nof these sub problems, into the overall solution.",
    "start": "282370",
    "end": "301960"
  },
  {
    "text": "And so that's the story. Typically, what happens in terms of efficiency\nis that you can write a recurrence that's",
    "start": "301960",
    "end": "312530"
  },
  {
    "text": "associated with this divide and conquer algorithm.\nAnd you say t of n, which is a running time,",
    "start": "312530",
    "end": "322849"
  },
  {
    "text": "for a problem of size n is going to be a times\ntfn over b-- and this is a recurrence-- plus",
    "start": "322849",
    "end": "332879"
  },
  {
    "text": "the work that you need to do for the merge\noperational or the combine. This is the same",
    "start": "332879",
    "end": "341729"
  },
  {
    "text": "as merge. And so you get a recurrence. And you're not\nquite done yet in terms of the analysis. Because",
    "start": "341729",
    "end": "353129"
  },
  {
    "text": "once you have the recurrence, you do have\nto solve the recurrence. And it's usually not that hard and certainly it's not going\nto be particularly difficult for the divide",
    "start": "353129",
    "end": "361430"
  },
  {
    "text": "and conquer examples that we're going to look,\nat least today. But we also have this theorem that's called\nthe master theorem that is essentially something",
    "start": "361430",
    "end": "373270"
  },
  {
    "text": "where you can fairly mechanically plug in\nthe a's and the b's and whatever you have",
    "start": "373270",
    "end": "381659"
  },
  {
    "text": "there-- maybe it's theta n, maybe it's theta\nn square-- and get the solution to the recurrence.",
    "start": "381659",
    "end": "387199"
  },
  {
    "text": "I'm actually not going to do that today. But\nyou'll hear once again about the massive theorem",
    "start": "387199",
    "end": "394419"
  },
  {
    "text": "tomorrow in section. And it's a fairly straightforward\ntemplate that you can use for most of the",
    "start": "394419",
    "end": "402379"
  },
  {
    "text": "divide and conquer examples we're going to\nlook at in 046 with one exception that we'll",
    "start": "402379",
    "end": "408280"
  },
  {
    "text": "look at in median finding today that will\nsimply give you the solution to the recurrence, OK?",
    "start": "408280",
    "end": "413919"
  },
  {
    "text": "So you've see most of these things before.\nThat's a little bit of setup. And so let's dive right in into convex hull, which is my\nfavorite problem when it comes to using divide",
    "start": "413919",
    "end": "431080"
  },
  {
    "text": "and conquer. So convex hull, I got a little prop here which\nwill save me from writing on the board and",
    "start": "431080",
    "end": "439509"
  },
  {
    "text": "hopefully be more understandable. But the\nidea here is that in this case, we have a",
    "start": "439509",
    "end": "448330"
  },
  {
    "text": "two dimensional problem with a bunch of points\nin a two dimensional plane. You can certainly",
    "start": "448330",
    "end": "455830"
  },
  {
    "text": "do convex hull for three dimensions, many\ndimensions. And convexity is something that",
    "start": "455830",
    "end": "463460"
  },
  {
    "text": "is a fundamental notion in optimization. And maybe we'll get to that in 6046 in advanced\ntopics, maybe not. But in the context of today's",
    "start": "463460",
    "end": "472400"
  },
  {
    "text": "lecture, what we're interested in doing is\nessentially finding an envelope or a hull",
    "start": "472400",
    "end": "478729"
  },
  {
    "text": "associated with a collection of points on\na two dimensional plane. And this hull obviously",
    "start": "478729",
    "end": "485490"
  },
  {
    "text": "is going to be something, as you can guess,\nthat encloses all of these points, OK?",
    "start": "485490",
    "end": "494849"
  },
  {
    "text": "So what I have here, if I make this string\ntaut enough-- this is not working so well,",
    "start": "494849",
    "end": "503250"
  },
  {
    "text": "but I think you get the picture. All right,\nso that's not a convex hull. This is not a",
    "start": "503250",
    "end": "515159"
  },
  {
    "text": "convex hull for the reason that I have a bunch\nof points outside of the hull.",
    "start": "515159",
    "end": "520419"
  },
  {
    "text": "All right, so let me just-- that is a convex\nhull. And now if I start stretching like that",
    "start": "520419",
    "end": "533120"
  },
  {
    "text": "or like this or like that, that's still a\nconvex hull, OK? So that's the game.",
    "start": "533120",
    "end": "539940"
  },
  {
    "text": "We have to find an algorithm. And we look\nat a couple of different ones that will find",
    "start": "539940",
    "end": "548400"
  },
  {
    "text": "all of these segments that are associated\nwith this convex hull, OK? So this is a segment",
    "start": "548400",
    "end": "554390"
  },
  {
    "text": "that's part of the convex hull. That's a segment that's part of the convex\nhull. If, in fact, I had something like this--",
    "start": "554390",
    "end": "563570"
  },
  {
    "text": "and this was stretched out-- because I have\nthose two points outside the convex hull,",
    "start": "563570",
    "end": "568710"
  },
  {
    "text": "this may still be a segment that's part of\nthe electronics hall but this one is not,",
    "start": "568710",
    "end": "575970"
  },
  {
    "text": "right? So that's-- the game here is to find\nthese segments. So if you're going to working",
    "start": "575970",
    "end": "581480"
  },
  {
    "text": "with segments or tangents-- they're going\nto be used synonymously-- all of the tangents",
    "start": "581480",
    "end": "591339"
  },
  {
    "text": "or segments associated with the entirety of\nthe convex hull and we have to discover them. And only input that we have is the set of\npointx-- xiy coordinates.",
    "start": "591340",
    "end": "601780"
  },
  {
    "text": "And there's just a variety of algorithms that\nyou can use to do this. The one that I wish",
    "start": "601780",
    "end": "608200"
  },
  {
    "text": "I had time to explain but I'll just mention\nis what's called a gift wrapping algorithm.",
    "start": "608200",
    "end": "614330"
  },
  {
    "text": "You might not have done this, but I guarantee\nyou I said you probably have taken a misshapen",
    "start": "614330",
    "end": "622070"
  },
  {
    "text": "gift, right, and tried to wrap it in gift\nwrapping paper. And when you're doing that, you're essentially--\nif you're doing it right you're essentially",
    "start": "622070",
    "end": "630250"
  },
  {
    "text": "trying to find the convex hull of this three\ndimensional structure. You're trying to tighten it up. You're trying to find the minimum amount\nof gift wrapping paper.",
    "start": "630250",
    "end": "639750"
  },
  {
    "text": "I'm not sure if you've ever thought about\nminimizing gift wrapping paper, but you should have. And that's the convex hull of this three\ndimensional shape. But we'll stick to two",
    "start": "639750",
    "end": "650029"
  },
  {
    "text": "dimensions because we'll have to draw things\non the board. So let me just spec this out",
    "start": "650030",
    "end": "656710"
  },
  {
    "text": "a bit. I've been given endpoints in a plane. And\nthose set of points are s, xi, yi such that",
    "start": "656710",
    "end": "672910"
  },
  {
    "text": "i equals 1, 2 to n. And we're just going to\nassume here, just to make things easy because",
    "start": "672910",
    "end": "681199"
  },
  {
    "text": "we don't want to have segments that are null\nor segments that are a little bit different",
    "start": "681200",
    "end": "688610"
  },
  {
    "text": "because they're discontinuous. But we're going\nto assume that no two have the same x-coordinate.",
    "start": "688610",
    "end": "697269"
  },
  {
    "text": "This is just a matter of convenience. And\nno two have the same y-coordinate.\nAnd then finally, no three in a line.",
    "start": "697270",
    "end": "716020"
  },
  {
    "text": "Because we want to be able to look at pairs\nof points and find these segments. And it",
    "start": "716020",
    "end": "721840"
  },
  {
    "text": "just gets kind of inconvenient. You have to\ndo special cases if there of them are on a",
    "start": "721840",
    "end": "728070"
  },
  {
    "text": "line. And so the convex hull itself is the\nsmallest polygon containing all points in",
    "start": "728070",
    "end": "749700"
  },
  {
    "text": "s. And we're going to call that ch of s--\nconvex hull of s.",
    "start": "749700",
    "end": "756810"
  },
  {
    "text": "STUDENT: Smallest convex polygon. PROFESSOR: The smallest convex polygon--\nthank you. And so just as an example on the",
    "start": "756810",
    "end": "775520"
  },
  {
    "text": "board, when you have something like this,\nyou're going to have your convex hull being",
    "start": "775520",
    "end": "782660"
  },
  {
    "text": "that. This one is inside of it.",
    "start": "782660",
    "end": "787690"
  },
  {
    "text": "These two points are inside of it. And all\nthe other ones form the hull. And so we might",
    "start": "787690",
    "end": "793490"
  },
  {
    "text": "have p, q, r, s, t, u. And v and x are inside\nof the hull. They're not part of the specification",
    "start": "793490",
    "end": "805750"
  },
  {
    "text": "of ch of s, which I haven't quite told you\nhow we're going to specify that. But the way you're going to specify that is\nsimply by representing it as a sequence of",
    "start": "805750",
    "end": "818290"
  },
  {
    "text": "points that are on the boundary on the hull\nin clockwise order. And you can think of this",
    "start": "818290",
    "end": "834389"
  },
  {
    "text": "as being a doubly linked list in terms of\nthe data structure that you'd use if you coded",
    "start": "834390",
    "end": "840160"
  },
  {
    "text": "this up. So in this case, it would be p to\nq to r to s.",
    "start": "840160",
    "end": "851079"
  },
  {
    "text": "You're going to start with t in this case.\nIt's a doubly linked list. So you could conceivably",
    "start": "851080",
    "end": "858800"
  },
  {
    "text": "start with anything. But that's the representation\nof the convex hull.",
    "start": "858800",
    "end": "866120"
  },
  {
    "text": "And we're going to use clockwise just because\nwe want to be clear on as to what order we're",
    "start": "866120",
    "end": "873890"
  },
  {
    "text": "enumerating these points. It's going to become\nimportant when we do the divide and conquer algorithm. So let's say that we didn't care\nabout divide and conquer just for the heck",
    "start": "873890",
    "end": "886170"
  },
  {
    "text": "of it and I gave you a bunch of points over\nhere.",
    "start": "886170",
    "end": "897610"
  },
  {
    "text": "Can you think of a simple-- forget efficiency\nfor just a couple of minutes. Can you think",
    "start": "897610",
    "end": "907510"
  },
  {
    "text": "of a simple algorithm that would generate\nthe segments of the convex hull? For example,",
    "start": "907510",
    "end": "918720"
  },
  {
    "text": "I do not want to generate this segment vx. If I think of a segment as being something\nthat is defined by two points, then I don't",
    "start": "918720",
    "end": "927890"
  },
  {
    "text": "want to generate the segment vx because clearly\nthe segment is not part of the convex hull. But whereas the segment pq, qr, rs, et cetera,\nthey're all part of the convex hull, right?",
    "start": "927890",
    "end": "938820"
  },
  {
    "text": "So what is the obvious brute force algorithm,\nforgetting efficiency, that given this set",
    "start": "938820",
    "end": "946360"
  },
  {
    "text": "of points will generate one by one the segments\nof the convex hull?",
    "start": "946360",
    "end": "953670"
  },
  {
    "text": "Anybody? Did you have your head up? No? Go\nahead. Yep.",
    "start": "953670",
    "end": "961550"
  },
  {
    "text": "STUDENT: Draw the line and check how many other lines intersect with it. PROFESSOR: Draw the line and check how many\nlines it intersects with.",
    "start": "961550",
    "end": "969860"
  },
  {
    "text": "STUDENT: Yeah. PROFESSOR: Is there-- I think you got-- you\ndraw the line. That's good, right?",
    "start": "969860",
    "end": "975180"
  },
  {
    "text": "STUDENT: [LAUGHS]\nAUDIENCE: [LAUGHING] PROFESSOR: Well-- but you want to do a little\nmore. Yeah, go ahead.",
    "start": "975180",
    "end": "983670"
  },
  {
    "text": "STUDENT: For every pair of points you see, make a half-plane and see where they complete all of their other points. [INAUDIBLE]",
    "start": "983670",
    "end": "991260"
  },
  {
    "text": "PROFESSOR: Ah, so that's good. That's good.\nThat's good. All right, so the first person who breaks\nthe ice here always gets a Frisbee. Sorry",
    "start": "991260",
    "end": "1001420"
  },
  {
    "text": "man. At least I only hit the lecturer-- no\nliability considerations here. OK, now I'm",
    "start": "1001420",
    "end": "1007180"
  },
  {
    "text": "getting scared. Right, so I think there's a certain amount\nof when I throw this, am I going to choke",
    "start": "1007180",
    "end": "1015250"
  },
  {
    "text": "or not, right? But it's going to get higher\nwhen one of you guys in the back answers a",
    "start": "1015250",
    "end": "1021450"
  },
  {
    "text": "question. So you're exactly right. And you draw a line. And then you just look\nat it. And you look at the half plane.",
    "start": "1021450",
    "end": "1030127"
  },
  {
    "text": "And if all the points are to one side, it\nis a segment of the convex hull. If they're",
    "start": "1030128",
    "end": "1037869"
  },
  {
    "text": "not, it's not a segment-- beautiful. All right,\nare we done? Can we go and enjoy the good",
    "start": "1037869",
    "end": "1043029"
  },
  {
    "text": "weather outside? No, we've got ways to go here. So this is\nnot the segment whereas one-- let me draw",
    "start": "1043029",
    "end": "1051110"
  },
  {
    "text": "that. I should draw these in a dotted way. This is not a segment. This is not a segment.\nThis is a segment.",
    "start": "1051110",
    "end": "1061480"
  },
  {
    "text": "And I violated my rule of these three not\nbeing in a straight line. So I'll move this over here. And then that's a segment and so\non and so forth, OK? Right?",
    "start": "1061480",
    "end": "1071640"
  },
  {
    "text": "STUDENT: It's no longer a side with the ones below it. PROFESSOR: I'm sorry? STUDENT: It would have to go directly to the bottom one from the left one.",
    "start": "1071640",
    "end": "1078580"
  },
  {
    "text": "PROFESSOR: Oh, you're right. That's a good\npoint. That's an excellent point. SO what happened here was when I moved that\nout-- exactly right. Thank you. This is good.",
    "start": "1078580",
    "end": "1088340"
  },
  {
    "text": "So when I moved this out here, what happened\nwas-- and I drew this-- well, this one here,",
    "start": "1088340",
    "end": "1096700"
  },
  {
    "text": "my convex hull, changed. The problem specification\nchanged on me. It was my fault. But then what",
    "start": "1096700",
    "end": "1103230"
  },
  {
    "text": "would happen, of course, is as I move this,\nthat would become the segment that was part of the convex hull, OK?",
    "start": "1103230",
    "end": "1110388"
  },
  {
    "text": "So sorry to confuse people. But what we have\nhere in terms of an algorithm, if I leave",
    "start": "1110389",
    "end": "1116240"
  },
  {
    "text": "the points the same, works perfectly well.\nSo let me just leave the points the same and",
    "start": "1116240",
    "end": "1123679"
  },
  {
    "text": "just quickly recap, which is, I'm going to\ntake a pair of points. And I'm going to draw-- and let me just draw\nthis in a dotted fashion first. And I'm going",
    "start": "1123679",
    "end": "1134200"
  },
  {
    "text": "to say that's the segment. And I'm going to\ntake a look at that line and say this breaks up the plane into two half planes. Are all\nabout points on one side?",
    "start": "1134200",
    "end": "1144778"
  },
  {
    "text": "And if the answer is yes, I'm going to go\nahead and, boom, say that is a segment of",
    "start": "1144779",
    "end": "1149799"
  },
  {
    "text": "my convex hull. If the answers is no, like\nin this case, I'm going to drop that segment,",
    "start": "1149799",
    "end": "1156110"
  },
  {
    "text": "OK? So now let's talk about complexity. Let's say that there are n points here. And\nhow many segments do I have? I have O n square",
    "start": "1156110",
    "end": "1169990"
  },
  {
    "text": "theta n square segments. And what is the complexity of the test? What\nis the complexity of the test that's associated",
    "start": "1170000",
    "end": "1178398"
  },
  {
    "text": "with, once I've drawn the segments, deciding\nwhether the segment is going to be a tangent which is part of the convex hull or not? What\nis the complexity?",
    "start": "1178399",
    "end": "1185490"
  },
  {
    "text": "STUDENT: O n. PROFESSOR: O n-- exactly right. So on test\ncomplexity-- and so we got over theta n cubed",
    "start": "1185490",
    "end": "1199679"
  },
  {
    "text": "complexity, OK? So it makes sense to do divide\nand conquer if you can do better than this.",
    "start": "1199680",
    "end": "1205059"
  },
  {
    "text": "Because this is a really simple algorithm.\nThe good news is we will be able to do better",
    "start": "1205059",
    "end": "1210230"
  },
  {
    "text": "than that. And now that we have a particular\nalgorithm-- I'm not quite ready to show you",
    "start": "1210230",
    "end": "1218990"
  },
  {
    "text": "that yet. Now that we have a particular algorithm, we\ncan think about how we can improve things.",
    "start": "1218990",
    "end": "1226590"
  },
  {
    "text": "And of course we're going to use divide and\nconquer. So let's go ahead and do that. And",
    "start": "1226590",
    "end": "1234210"
  },
  {
    "text": "so generally, the divide and conquer, as I\nmentioned before, in most cases, the division",
    "start": "1234210",
    "end": "1240908"
  },
  {
    "text": "is pretty straightforward. And that's the case here as well. All the\nfun is going to be in the merge step. Right,",
    "start": "1240909",
    "end": "1250629"
  },
  {
    "text": "so what we're going to do, as you can imagine,\nis we're going to take these points. And we're going to break them up. And the\nway we're going to break them up is by dividing",
    "start": "1250629",
    "end": "1259690"
  },
  {
    "text": "them into half lengths. We're going to just\ndraw a line. And we're going to say everything to the left\nof the line is one sub problem, everything",
    "start": "1259690",
    "end": "1267980"
  },
  {
    "text": "to the right of the line is another sub problem,\ngo off and find the convex hull for each of",
    "start": "1267980",
    "end": "1274440"
  },
  {
    "text": "the sub problems. If you have two points,\nyou're done, obviously. It's trivial.",
    "start": "1274440",
    "end": "1280508"
  },
  {
    "text": "And at some point, you can say I'm just going\nto deal with brute force. If we can go down to order n cubed, if n is small, I can just\napply that algorithm. So it doesn't even have",
    "start": "1280509",
    "end": "1290789"
  },
  {
    "text": "to be the base case of n equals 1 or n equals\n2. That's a perfectly fine thing to do.",
    "start": "1290789",
    "end": "1296059"
  },
  {
    "text": "But you could certainly go with n equals 10,\nas I mentioned before, and run this brute force algorithm. And so at that point, you\nknow that you can get down to small enough",
    "start": "1296059",
    "end": "1304360"
  },
  {
    "text": "size sub problems for which you can find the\nconvex hull efficiently. And then you've got",
    "start": "1304360",
    "end": "1310778"
  },
  {
    "text": "these two convex hulls which are clearly on\ntwo different half planes because that's the",
    "start": "1310779",
    "end": "1317539"
  },
  {
    "text": "way you defined them. And now you've got to merge them. And that's\nwhere all the fun is, OK? So let's just write",
    "start": "1317539",
    "end": "1324820"
  },
  {
    "text": "this out again. You're going to sort the points by x-coordinates.\nAnd we're going to do this once and for all.",
    "start": "1324820",
    "end": "1337850"
  },
  {
    "text": "We don't have to keep sorting here because\nwe're just going to be partitioning based on x-coordinates.",
    "start": "1337850",
    "end": "1342929"
  },
  {
    "text": "And we can keep splitting based on x-coordinates\nbecause we want to generate these half-lengths, right? So if we can do those once and for\nall-- and for the input set S, we're going",
    "start": "1342929",
    "end": "1361639"
  },
  {
    "text": "to divide into the left half A and right half\nB by the x-coordinates. And then we're going",
    "start": "1361640",
    "end": "1380200"
  },
  {
    "text": "to compute CH of A and CH of B recursively.",
    "start": "1380200",
    "end": "1388700"
  },
  {
    "text": "And then we're going to combine. So the only\ndifference here from what we had before is",
    "start": "1388700",
    "end": "1394398"
  },
  {
    "text": "the specification of the division. It looked\npretty generic. It's similar to the paradigm that I wrote\nbefore. But I've specified exactly how I'm",
    "start": "1394399",
    "end": "1403769"
  },
  {
    "text": "going to break this up. So let's start with\nthe merge operation. We're going to spend",
    "start": "1403769",
    "end": "1414419"
  },
  {
    "text": "most of our time specing that. And again, there's many ways you could do\nthe merge. And we want the most efficient",
    "start": "1414419",
    "end": "1422908"
  },
  {
    "text": "way. That's obviously going to determine complexity.\nSo, big question-- how to merge.",
    "start": "1422909",
    "end": "1436139"
  },
  {
    "text": "So what I have here, if I look at the merge\nstep, is I've created my two sub problems",
    "start": "1436139",
    "end": "1443169"
  },
  {
    "text": "corresponding to these two half planes. And\nwhat I have here is-- let's say I've generated,",
    "start": "1443169",
    "end": "1451240"
  },
  {
    "text": "at this point, a convex hull associated with\neach of these sub problems. So what I have",
    "start": "1451240",
    "end": "1458820"
  },
  {
    "text": "here is a1, a2. I'm going to go clockwise to specify the convex\nhull. And the other thing that I'm going to",
    "start": "1458820",
    "end": "1470249"
  },
  {
    "text": "do is in the sub problem case, my starting\npoint is going to be for the left sub problem,",
    "start": "1470249",
    "end": "1479350"
  },
  {
    "text": "the coordinate that has the highest x value,\nOK? So that's a1 in this case-- the highest",
    "start": "1479350",
    "end": "1487158"
  },
  {
    "text": "x value going over. x is increasing to the\nright. And for the right half of the problem, it's\ngoing to be the coordinate that has the lowest",
    "start": "1487159",
    "end": "1498999"
  },
  {
    "text": "x value. And I'm going to go clockwise in\nboth of these cases. So when you see an ordering",
    "start": "1498999",
    "end": "1507009"
  },
  {
    "text": "associated with the subscripts for these points,\nstart with a1 or b1 and then go clockwise.",
    "start": "1507009",
    "end": "1514970"
  },
  {
    "text": "And that's how we number this-- so just notational,\nnothing profound here.",
    "start": "1514970",
    "end": "1520158"
  },
  {
    "text": "So I got these two convex hulls-- these sub\nhulls, if you will. And what I need to do",
    "start": "1520159",
    "end": "1526519"
  },
  {
    "text": "now is merge them together. And you can obviously\nlook at this and it's kind of obvious what",
    "start": "1526519",
    "end": "1532850"
  },
  {
    "text": "the overall convex hull is, right? But the key thing is, I'm going to have to\nlook at each of the pairs of points that are",
    "start": "1532850",
    "end": "1546778"
  },
  {
    "text": "associated with this and that and try to generate\nthe tangents, the new tangents, that are not",
    "start": "1546779",
    "end": "1556490"
  },
  {
    "text": "part of the sub hulls, but they're part of\nthe overall hull, right? So in this case,",
    "start": "1556490",
    "end": "1564169"
  },
  {
    "text": "you can imagine an algorithm that is going\nto kind of do what this brute force algorithm",
    "start": "1564169",
    "end": "1571600"
  },
  {
    "text": "does except that it's looking at a point from\nhere and a point from here.",
    "start": "1571600",
    "end": "1580879"
  },
  {
    "text": "So you could imagine that I'm going to do\na pairwise generation of segments. And then",
    "start": "1580879",
    "end": "1588529"
  },
  {
    "text": "I'm going to check to see whether these segments\nare actually tangents that are part of the overall convex hull or not. So what I would\ndo here is I'd look at this.",
    "start": "1588529",
    "end": "1598240"
  },
  {
    "text": "And is that going to be part of the overall\nhull? No, and precisely why not? Someone tell",
    "start": "1598240",
    "end": "1605820"
  },
  {
    "text": "me why this segment a1 b1 is not part of the\noverall hull? Yeah, go ahead.",
    "start": "1605820",
    "end": "1613620"
  },
  {
    "text": "STUDENT: If we were to draw a line through the whole thing there would be one on both sides. PROFESSOR: Exactly right-- that's exactly\nright. So here you go. So that's not part",
    "start": "1613620",
    "end": "1623700"
  },
  {
    "text": "of it. Now, if I look at this-- well, same\nreason that's not part of it.",
    "start": "1623700",
    "end": "1630248"
  },
  {
    "text": "In this case-- and this is a fairly obvious\nexample. I'm going to do something that's slightly less obvious in case you get your\nhopes up that we have this trivial algorithm,",
    "start": "1630249",
    "end": "1639509"
  },
  {
    "text": "OK? This is looking good, right? That's supposed\nto be a straight line, by the way.",
    "start": "1639509",
    "end": "1647820"
  },
  {
    "text": "So a4 b2-- I mean, that's looking good, right?\nBecause all the points are on one side. So",
    "start": "1647820",
    "end": "1653220"
  },
  {
    "text": "a4 b2 is our upper tangent. Right, so our\nupper tangent is something that we're going",
    "start": "1653220",
    "end": "1661669"
  },
  {
    "text": "to define as-- if I look at each of these\nthings, I'm going to say they have a yij.",
    "start": "1661669",
    "end": "1669248"
  },
  {
    "text": "OK, what is yij? yij is the y-coordinate.\nof the segment that I'm looking at, the ij",
    "start": "1669249",
    "end": "1679669"
  },
  {
    "text": "segment. So this yij is for ai and bj. So what I have\nhere is y42 out here. And this is-- for the",
    "start": "1679669",
    "end": "1689970"
  },
  {
    "text": "upper tangent, yij is going to be maximum,\nright? Because that's essentially something",
    "start": "1689970",
    "end": "1696398"
  },
  {
    "text": "which would ensure me that there are no points\nhigher than that, right? So if I go up all the way and I find this\nthat has the maximum yij, that is going to",
    "start": "1696399",
    "end": "1706759"
  },
  {
    "text": "be my upper tangent. Because only for that\nwill I have no points ahead of that, OK? So",
    "start": "1706759",
    "end": "1712580"
  },
  {
    "text": "yij is upper tangent. This is going to be maximum. And I'm not going\nto write this down, but it makes sense that",
    "start": "1712580",
    "end": "1721799"
  },
  {
    "text": "the lower tangent is going to have the lowest\nyij. Are we all good here? Yeah, question.",
    "start": "1721799",
    "end": "1730479"
  },
  {
    "text": "STUDENT: So I am just wondering, I couldn't hear\nwhat she said why we moved out a1 b1.",
    "start": "1730480",
    "end": "1735660"
  },
  {
    "text": "PROFESSOR: OK, so good. Let me-- that reason\nwe moved out a1 b1 is because if I just drew",
    "start": "1735660",
    "end": "1742379"
  },
  {
    "text": "a1 b1 like this-- and I'm extrapolating this.\nThis is again supposed to be a straight line.",
    "start": "1742379",
    "end": "1749450"
  },
  {
    "text": "Then you clearly see that there are points\non either side of the a1 b1 segment when you look at the overall problem, correct? You\nsee that on a1 b1, b2 is on this side, b3",
    "start": "1749450",
    "end": "1760860"
  },
  {
    "text": "is on this side if I just extend this line\nall the way to infinity in both directions. And that violates the requirement that the\nsegment be part of the overall hull, OK?",
    "start": "1760860",
    "end": "1772059"
  },
  {
    "text": "That make sense? Good. So, everybody with\nme? So clearly, there's a trivial merge algorithm\nhere. And the trivial merge algorithm is to",
    "start": "1772059",
    "end": "1785580"
  },
  {
    "text": "look at not every pair of points-- every ab\npair, right? Every aibj pair.",
    "start": "1785580",
    "end": "1795039"
  },
  {
    "text": "And so what is the complexity of doing that?\nIf I have n total points, the complexity would",
    "start": "1795039",
    "end": "1804258"
  },
  {
    "text": "be-- would be in square, right? Because maybe\nI'd have half here and half here, ignore constants.",
    "start": "1804259",
    "end": "1810769"
  },
  {
    "text": "And you could say, well, it's going to be\nn squared divided by 4, but that's theta n",
    "start": "1810769",
    "end": "1816110"
  },
  {
    "text": "squared. So there's an obvious merge algorithm\nthat is theta n square looking at all pairs",
    "start": "1816110",
    "end": "1830190"
  },
  {
    "text": "of points. And when I mean all pairs of points,\nI mean like an a and a b.",
    "start": "1830190",
    "end": "1838758"
  },
  {
    "text": "Because I want to pick a pair when I go left\nof that dividing line and then right of the",
    "start": "1838759",
    "end": "1844720"
  },
  {
    "text": "dividing line. But either way, it's theta\nn square, OK? So now you look at that and you go, huh. Can I do a better?",
    "start": "1844720",
    "end": "1853879"
  },
  {
    "text": "What if I just went for the highest a point\nand the highest b point and I just, no, that's",
    "start": "1853879",
    "end": "1862179"
  },
  {
    "text": "it? I'm done-- constant time. Wouldn't that\nbe wonderful? Yeah, wonderful, but incorrect,",
    "start": "1862179",
    "end": "1868600"
  },
  {
    "text": "OK? Right, so what is an example. And so\nthis is something that I spent a little bit",
    "start": "1868600",
    "end": "1874559"
  },
  {
    "text": "of time last night concocting. So I'm like\nyou guys too. I do my problem set the night",
    "start": "1874559",
    "end": "1881658"
  },
  {
    "text": "before. Well, don't do as I do. Do as I say. But I've\ndone this before. So that's the difference.",
    "start": "1881659",
    "end": "1895539"
  },
  {
    "text": "But this particular example is new. So what\nI have here is I'm going to show you why there's",
    "start": "1895539",
    "end": "1902358"
  },
  {
    "text": "not a trivial algorithm, OK, that-- I got\nto get these angles right-- that you can't",
    "start": "1902359",
    "end": "1914809"
  },
  {
    "text": "just pick the highest points and keep going,\nright?",
    "start": "1914809",
    "end": "1920758"
  },
  {
    "text": "And then that would be constant time. So that's\nmy a over here. And let's assume that I have",
    "start": "1920759",
    "end": "1926470"
  },
  {
    "text": "my dividing line like that. And then what\nI'm going to do here-- and I hope I get this right-- is I'm going to have something like\nthis, like that.",
    "start": "1926470",
    "end": "1937960"
  },
  {
    "text": "And then I'm going to have b1 here clockwise--\nso b2, b3, and b4. So as you can see here,",
    "start": "1937960",
    "end": "1950408"
  },
  {
    "text": "if I look at a4-- a little adjustment necessary.\nOK, so if I look at that, a4 to b1 versus--",
    "start": "1950409",
    "end": "1969389"
  },
  {
    "text": "I mean, just eyeball it. A3 to b1-- right, is a4 to b1 going to be\nthe upper tangent? No, right? So now a3 is",
    "start": "1969389",
    "end": "1978669"
  },
  {
    "text": "lower than a4. You guys see that? And b1 is lower than b2, right? So it's clear\nthat if I just took a4 to b2 that it will",
    "start": "1978669",
    "end": "1988320"
  },
  {
    "text": "not be an upper tangent. Everybody see that? Yep, all right, good. So we can't have a constant\ntime algorithm. We have theta and square in",
    "start": "1988320",
    "end": "1999590"
  },
  {
    "text": "the back. So it is there something-- maybe\ntheta n? How would we do this merge and find the upper\ntangent by being a little smarter about searching",
    "start": "1999590",
    "end": "2014429"
  },
  {
    "text": "for pairs of points that give us this maximum\nyij? I mean, the goal here is simple. At some",
    "start": "2014429",
    "end": "2023570"
  },
  {
    "text": "level, if you looked at the brute force, I\nwould generate each of these things. I would find the yj intercepts associated\nwith this line. And I just pick the maximum.",
    "start": "2023570",
    "end": "2033340"
  },
  {
    "text": "And the constant time algorithm doesn't work. The theta n squared algorithm definitely works.\nBut we don't like it. So there has to be something",
    "start": "2033340",
    "end": "2041730"
  },
  {
    "text": "in between. So, any ideas? Yeah, back there. STUDENT: So... I had a question. [INAUDIBLE]",
    "start": "2041730",
    "end": "2054000"
  },
  {
    "text": "PROFESSOR: No, you're just finding-- no, you're\nmaximizing the yij. So for once you have this",
    "start": "2054000",
    "end": "2059138"
  },
  {
    "text": "segment-- so the question was, isn't the obvious\nmerge algorithm theta n cubed, right? And",
    "start": "2059139",
    "end": "2065929"
  },
  {
    "text": "my answer is no, because the theta n extra\nfactor came from the fact that you had to",
    "start": "2065940",
    "end": "2071668"
  },
  {
    "text": "check every point, every endpoint, to see\non which side of the plane it was. Whereas",
    "start": "2071668",
    "end": "2076739"
  },
  {
    "text": "here, what I'm doing is I've got this one\nline here that is basically y equals 0, if you like, or y equals some-- I'm sorry, x\nequals 0 or x equals some value.",
    "start": "2076739",
    "end": "2087908"
  },
  {
    "text": "And I just need to, once I have the equation\nfor the line associated with a4 b1 or a4 b2,",
    "start": "2087909",
    "end": "2095270"
  },
  {
    "text": "I just have to find the intercept of it, which\nis constant time, right? And then once I find",
    "start": "2095270",
    "end": "2100500"
  },
  {
    "text": "the intercept of it, I just maximize that\nintercept to get my yij. So I'm good, OK?",
    "start": "2100500",
    "end": "2106750"
  },
  {
    "text": "So it's only theta n squared, right? Good\nquestion. So this is actually quite-- very,",
    "start": "2106750",
    "end": "2115230"
  },
  {
    "text": "very, very clever. This particular algorithm is called the two\nfinger algorithm. And I do have multiple fingers,",
    "start": "2115230",
    "end": "2122370"
  },
  {
    "text": "but it's going to work a lot better if I borrow\nEric's finger. And we're going to demonstrate",
    "start": "2122370",
    "end": "2127790"
  },
  {
    "text": "to you the two finger algorithm for merging\nthese two convex hulls. And then we'll talk",
    "start": "2127790",
    "end": "2136300"
  },
  {
    "text": "about the complexity of it. And my innovation again last night was to\nturn this from a two-finger algorithm. Not",
    "start": "2136300",
    "end": "2144470"
  },
  {
    "text": "only did I have the bright idea of using Eric--\nI decided it was going to become the two finger an string algorithm. So this is wild.",
    "start": "2144470",
    "end": "2152720"
  },
  {
    "text": "This is my contribution to 046 lore-- come\non. So the way the two finger algorithm works--",
    "start": "2152720",
    "end": "2164420"
  },
  {
    "text": "this pseudo code should be incomprehensible.\nIf you just look at it and you go, what, right?",
    "start": "2164420",
    "end": "2170220"
  },
  {
    "text": "But this demo is going to clear everything\nup. Right so here's what you do. So now we're going to do a demo of the merge algorithm\nthat is a clever merge algorithm than the",
    "start": "2170220",
    "end": "2182150"
  },
  {
    "text": "one that uses order n square time. And it's\ncorrect. It's going to get you the correct",
    "start": "2182150",
    "end": "2189069"
  },
  {
    "text": "upper tangent and what we are starting at\nhere is with Erik’s left finger on A1, which",
    "start": "2189070",
    "end": "2197290"
  },
  {
    "text": "is defined to be the point that's closest\nto the vertical line that you see here, the",
    "start": "2197290",
    "end": "2205400"
  },
  {
    "text": "one that has the highest x-coordinate. And\nmy finger is on B1, which is the point that",
    "start": "2205400",
    "end": "2210579"
  },
  {
    "text": "has the smallest X-coordinate on the right\nhand side sub-hull. And what we do is we compute,",
    "start": "2210580",
    "end": "2218760"
  },
  {
    "text": "for the segment A1 B1, we compute by Yij,\nin this case Y11, which is the intercept on",
    "start": "2218760",
    "end": "2226460"
  },
  {
    "text": "the vertical line that you see here that Erik\njust marked with a red dot. And you can look",
    "start": "2226460",
    "end": "2233730"
  },
  {
    "text": "at the pseudocode over on, to my right if\nI face the board. And what happens now is",
    "start": "2233730",
    "end": "2239960"
  },
  {
    "text": "I'm going to move clockwise, and I'm going\nto go from B1 to B4. And what happened here?",
    "start": "2239960",
    "end": "2246730"
  },
  {
    "text": "Did the Yij increase or decrease? Well, as\nyou can see it decreased. And so I'm going",
    "start": "2246730",
    "end": "2254010"
  },
  {
    "text": "to go back to B1. And we're not quite done\nwith this step here. Erik’s going to go",
    "start": "2254010",
    "end": "2260930"
  },
  {
    "text": "counterclockwise over to A4. And we're going\nto check again, yeah, keep the string taught,",
    "start": "2260930",
    "end": "2267359"
  },
  {
    "text": "check again whether Yij increased or decreased\nand as is clear from here Yij increased. So",
    "start": "2267360",
    "end": "2273440"
  },
  {
    "text": "now we move to this point. And as of this\nmoment we think that A4 B1 has the highest",
    "start": "2273440",
    "end": "2280700"
  },
  {
    "text": "Yij. But we have a while loop. We’re going\nto have to continue with this while loop, and now what happens is, I’m going to go\nfrom B1 clockwise again to B4. And when this",
    "start": "2280700",
    "end": "2293369"
  },
  {
    "text": "happens, did Yij increase or decrease? Well\nit decreased. So I'm going to go back to B1",
    "start": "2293370",
    "end": "2299570"
  },
  {
    "text": "and Erik now is going to go counterclockwise\nto A3. And as you can see Y31 increased a",
    "start": "2299570",
    "end": "2312430"
  },
  {
    "text": "little bit, so we're going to now stop this\niteration of the algorithm and we're at A3",
    "start": "2312430",
    "end": "2319349"
  },
  {
    "text": "B1, which we think at this point is our upper\ntangent, but let's check that. Start over",
    "start": "2319350",
    "end": "2326860"
  },
  {
    "text": "again on my side B1 to B4, what happened?\nWell Yij decreased. So I'm going to go back",
    "start": "2326860",
    "end": "2334750"
  },
  {
    "text": "to B1. And then Erik’s going to try. He’s\ngoing conterclockwise, he's going to go A3 to A2 and, well, big decrease in Yij. Now\nErik goes back to A3. At this point we've",
    "start": "2334750",
    "end": "2348760"
  },
  {
    "text": "tried both moves, my clockwise move and Erik’s\ncounterclockwise move. My move from B1 to",
    "start": "2348760",
    "end": "2357040"
  },
  {
    "text": "B4 and Erik’s move from A3 to A2. So we've\nconverged, we're out of the while loop, A3",
    "start": "2357040",
    "end": "2364890"
  },
  {
    "text": "B1 for this example is our upper tangent.\nAll right. You can have your finger back Erik.",
    "start": "2364890",
    "end": "2374010"
  },
  {
    "text": "So the reason this works is because we have\na convex hull here and a convex hull here.",
    "start": "2374010",
    "end": "2382810"
  },
  {
    "text": "We are starting with the points that are closest\nto each other in terms of A1 being the closest",
    "start": "2382810",
    "end": "2391100"
  },
  {
    "text": "to this vertical line, B1 being the closest\nto this vertical line, and we are moving upward",
    "start": "2391100",
    "end": "2398240"
  },
  {
    "text": "in both directions because I went clockwise\nand Erik went counterclockwise. And that's",
    "start": "2398240",
    "end": "2404570"
  },
  {
    "text": "the intuition of why this algorithm works.\nWe're not going to do a formal proof of this algorithm, but the monotonicity property corresponding\nto the convexity of this subhull and the convexity",
    "start": "2404570",
    "end": "2417490"
  },
  {
    "text": "of the subhull essentially can give you a\nformal proof of correctness of this algorithm,",
    "start": "2417490",
    "end": "2424100"
  },
  {
    "text": "but as I said we won't cover that in 046.\nSo all that remains now is to look at our",
    "start": "2424100",
    "end": "2431010"
  },
  {
    "text": "pseudocode which matches the execution that\nyou just saw and talk about the complexity",
    "start": "2431010",
    "end": "2437850"
  },
  {
    "text": "of the pseudocode. So what is the complexity of this algorithm?\nIt's order n, right? So what has happening",
    "start": "2437850",
    "end": "2446300"
  },
  {
    "text": "here, if you look at this while loop, is that\nwhile I have two counters, I'm essentially",
    "start": "2446300",
    "end": "2451970"
  },
  {
    "text": "looking at two operations per loop. And either one of those counters is guaranteed\nto increment through the loop. And so since",
    "start": "2451970",
    "end": "2463860"
  },
  {
    "text": "I have in this case p points, in one case\np plus q equals n-- so let's say I had p points",
    "start": "2463860",
    "end": "2471750"
  },
  {
    "text": "here and I have q points here. And got p plus\nq equals n.",
    "start": "2471750",
    "end": "2479500"
  },
  {
    "text": "And I got a theta n merge simply because I'm\ngoing to be running through and incrementing--",
    "start": "2479500",
    "end": "2489250"
  },
  {
    "text": "as long as I'm in the loop, I'm going to be\nincrementing either the i or the j. And the",
    "start": "2489250",
    "end": "2495430"
  },
  {
    "text": "maximum they can go to are p and q before\nI bounce out of the loop or before they rotate",
    "start": "2495430",
    "end": "2501829"
  },
  {
    "text": "around. And so that's why this is theta n. And so\nyou put it all together in terms of what the",
    "start": "2501830",
    "end": "2510780"
  },
  {
    "text": "merge corresponds to in terms of complexity\nand put that together with the overall divide",
    "start": "2510780",
    "end": "2517190"
  },
  {
    "text": "and conquer. We have a case where this is\nlooking like a recurrence that you've seen",
    "start": "2517190",
    "end": "2526270"
  },
  {
    "text": "many a time t of n. I've broken it up into two sub problems. So\nI have 2. And I could certainly choose this",
    "start": "2526270",
    "end": "2537890"
  },
  {
    "text": "l over here that's my line l to be such that\nI have a good partition between the two sets",
    "start": "2537890",
    "end": "2547750"
  },
  {
    "text": "of points. Now, if I choose l to be all the way on the\nright hand side, then I have this large sub",
    "start": "2547750",
    "end": "2553210"
  },
  {
    "text": "problem-- makes no sense whatsoever. So what\nI can do-- there's nothing that's stopping",
    "start": "2553210",
    "end": "2558359"
  },
  {
    "text": "me when I've sorted these points by the x-coordinates\nto do the division such that there's exactly",
    "start": "2558360",
    "end": "2566610"
  },
  {
    "text": "the same number, assuming an even number of\npoints n, exactly the same number on the left",
    "start": "2566610",
    "end": "2572140"
  },
  {
    "text": "hand side or the right hand side. But I can\nget that right roughly certainly within one",
    "start": "2572140",
    "end": "2577339"
  },
  {
    "text": "very easily. So that's where the n over 2 comes from, OK?\nIn the next problem that we'll look at, the",
    "start": "2577340",
    "end": "2584510"
  },
  {
    "text": "median finding problem, we'll find that trying\nto get the sub problems to be of roughly equal",
    "start": "2584510",
    "end": "2589540"
  },
  {
    "text": "size is actually a little difficult, OK? But\nI want to point out that in this particular",
    "start": "2589540",
    "end": "2594620"
  },
  {
    "text": "case, it's easy to get sub problems that are\nhalf the size because you've done the sorting.",
    "start": "2594620",
    "end": "2600970"
  },
  {
    "text": "And then you just choose the line, the vertical\nline such that you've got a bunch of points",
    "start": "2600970",
    "end": "2606970"
  },
  {
    "text": "that are on either side. And then in terms\nof the merge operation, we have 2t n over",
    "start": "2606970",
    "end": "2613320"
  },
  {
    "text": "2 plus theta n. People recognize this recurrence?\nIt's the old merge sort recurrence.",
    "start": "2613320",
    "end": "2621310"
  },
  {
    "text": "So we did all of this in-- well, it's not\nmerge sort. Clearly the algorithm is not merge sort. We got the same recurrence.",
    "start": "2621310",
    "end": "2628339"
  },
  {
    "text": "And so this is theta n log n-- so a lot better\nthan theta nq. And there's no convex hull",
    "start": "2628340",
    "end": "2636960"
  },
  {
    "text": "algorithm that's in the general case better\nthan this. Even the gift wrapping algorithm",
    "start": "2636960",
    "end": "2642849"
  },
  {
    "text": "that I mentioned to you, with the right data\nstructures, it gets down to that in terms of theta n log n, but no better.",
    "start": "2642850",
    "end": "2651010"
  },
  {
    "text": "OK, so good. That's pretty much what I had\nhere. Again, like I said, happy to answer",
    "start": "2651010",
    "end": "2657890"
  },
  {
    "text": "questions about the correctness of this loop\nalgorithm for merge later. Any other questions",
    "start": "2657890",
    "end": "2665750"
  },
  {
    "text": "associated with this? STUDENT: Question. Yeah, back there. STUDENT: If the input is recorded by x coordinates, can you do better than [INAUDIBLE]?",
    "start": "2665750",
    "end": "2673940"
  },
  {
    "text": "PROFESSOR: No, you can't, because-- I mean,\nthe n log n for the pre-sorting, I mean, there's",
    "start": "2673940",
    "end": "2681099"
  },
  {
    "text": "another theta n log n for the sorting at the\ntop level. And we didn't actually use that,",
    "start": "2681100",
    "end": "2688120"
  },
  {
    "text": "right? So the question was, can we do better\nif the input was pre sorted?",
    "start": "2688120",
    "end": "2694010"
  },
  {
    "text": "And I actually did not even use the complexity\nof the sort. We just matched it in this case.",
    "start": "2694010",
    "end": "2700920"
  },
  {
    "text": "So theta n log n-- and then you can imagine\nmaybe that you could do a theta n sort if these points were small enough and you rounded\nthem up and you could use a bucket sort or",
    "start": "2700920",
    "end": "2709859"
  },
  {
    "text": "a counting sort and lower that. So this theta n log n is kind of fundamental\nto the divide and conquer algorithm. The only",
    "start": "2709860",
    "end": "2717720"
  },
  {
    "text": "way you can improve that is by making a merge\nprocess that's even faster. And we obviously",
    "start": "2717720",
    "end": "2723530"
  },
  {
    "text": "tried to cook up a theta one merge process.\nBut that didn't work out, OK?",
    "start": "2723530",
    "end": "2729470"
  },
  {
    "text": "STUDENT: But are there algorithms that [INAUDIBLE] ? PROFESSOR: First-- if you assume certain things\nabout the input, you're absolutely, right?",
    "start": "2729470",
    "end": "2738920"
  },
  {
    "text": "So one thing you'll discover in algorithms\nin 6046 as well is that we're never satisfied.",
    "start": "2738930",
    "end": "2745540"
  },
  {
    "text": "OK, so I just said, oh, you can't do better\nthan theta n log n. But that's in the general case. And I think\nI mentioned that. You're on the right track.",
    "start": "2745540",
    "end": "2754619"
  },
  {
    "text": "If the input is pre sorted, you can take that\naway-- no, it doesn't help in that particular",
    "start": "2754620",
    "end": "2760440"
  },
  {
    "text": "instance if you have general settings. But\nif you-- the two dimensional case-- if the",
    "start": "2760440",
    "end": "2769109"
  },
  {
    "text": "hull, all the segments have a certain characteristic--\nnot quite planar, but something that's a little",
    "start": "2769110",
    "end": "2777140"
  },
  {
    "text": "more stringent than that-- you could imagine\nthat you can do improvements. I don't know if any compelling special case input for convex\nhull from which you can do better than theta",
    "start": "2777140",
    "end": "2787750"
  },
  {
    "text": "n log n. But that's a fine exercise for you, which\nis in what cases, given some structure on",
    "start": "2787750",
    "end": "2794520"
  },
  {
    "text": "the points, can I do better than theta n log\nn? So that's something that keeps coming up in the algorithm literature, if you can use\nthat, OK? Yeah, back there-- question.",
    "start": "2794520",
    "end": "2805890"
  },
  {
    "text": "STUDENT: Where's your [INAUDIBLE] step? You also have to figure out which lines to remove from each of your two...",
    "start": "2805890",
    "end": "2813000"
  },
  {
    "text": "PROFESSOR: Ah, good point. And you're exactly,\nabsolutely right. And I just realized that",
    "start": "2813000",
    "end": "2818560"
  },
  {
    "text": "I skipped that step, right? Thank you so much. So the question was, how\ndo I remove the lines? And it's actually fairly",
    "start": "2818560",
    "end": "2825360"
  },
  {
    "text": "straightforward. Let's keep this up here. And we don't need\nthis incomprehensible pseudo code, right?",
    "start": "2825360",
    "end": "2833720"
  },
  {
    "text": "So let's erase that. And thank you for asking that question. So\nit's a little simple cut and paste approach",
    "start": "2833720",
    "end": "2844060"
  },
  {
    "text": "where let's say that I find the upper tangent\nai bj. And I find the lower tangent.",
    "start": "2844060",
    "end": "2859440"
  },
  {
    "text": "Let's call it ak bm. And in this particular\ninstance, what do I have? I have a1, a2, a3,",
    "start": "2859440",
    "end": "2871430"
  },
  {
    "text": "a4 as being one of my sub hulls. And then\nI have b1, b2, b3, b4 as the other one.",
    "start": "2871430",
    "end": "2880849"
  },
  {
    "text": "Now, what did we determine to be the upper\ntangent? Was it a3 b1? Right, a3 b1?",
    "start": "2880850",
    "end": "2890830"
  },
  {
    "text": "So a3 b1 was my upper tangent. And I guess\nit was a1-- a1 b4? A1 b4 was my lower tangent.",
    "start": "2890830",
    "end": "2907370"
  },
  {
    "text": "So the big question is, now that I've found\nthese two, how do I generate the collect representation",
    "start": "2907370",
    "end": "2914580"
  },
  {
    "text": "of the overall convex hull? And so it turns\nout that you have to do this-- and then the",
    "start": "2914580",
    "end": "2920990"
  },
  {
    "text": "complexity of this is important as well. And\nyou need to do what's called a cut and paste",
    "start": "2920990",
    "end": "2926660"
  },
  {
    "text": "that's associated with this where we're going\nto just look at this and that. So if we're going to have these two things,\nthen we've got to generate a list of points.",
    "start": "2926660",
    "end": "2934740"
  },
  {
    "text": "Now, clearly a4 is not going to be part of\nthat, right? A4 is not going to be part of",
    "start": "2934740",
    "end": "2940200"
  },
  {
    "text": "the overall hull. What is it that we want? We want something\nlike a1, a2, a3, b1, b2, b3, b4, right? But",
    "start": "2940200",
    "end": "2951880"
  },
  {
    "text": "there's a point that we have to discard here.\nAgree? And so the way we do this is very mechanical.\nThat's the good news here. I mean, you don't",
    "start": "2951880",
    "end": "2962780"
  },
  {
    "text": "have to look at it pictorially. I just made that up looking at-- eyeballing\nit. Clearly, a computer doesn't have eyeballs,",
    "start": "2962780",
    "end": "2970840"
  },
  {
    "text": "right? And so what we're going to do is we're\ngoing to say the first link-- in general,",
    "start": "2970840",
    "end": "2977430"
  },
  {
    "text": "the first link is ai to bj. Because that's my upper tangent, OK? And in\nthis case, it's going to be a3 d1, OK? And",
    "start": "2977430",
    "end": "2989940"
  },
  {
    "text": "then I'm going to go down the b list until\nyou see bm, which is the lower tangent.",
    "start": "2989940",
    "end": "3008819"
  },
  {
    "text": "You're on the b list. So you're looking for\nthe lower tangent point. And then you're going to jump until you see bm. You link it to ak,\nOK?",
    "start": "3008820",
    "end": "3020240"
  },
  {
    "text": "You link it to ak and continue until you return\nto ai. And then you have your circular",
    "start": "3020240",
    "end": "3034310"
  },
  {
    "text": "list, OK? So what you see here is you have\na3 here. So I'm going to go ahead and write",
    "start": "3034310",
    "end": "3042910"
  },
  {
    "text": "out the execution of what I just wrote here.",
    "start": "3042910",
    "end": "3047980"
  },
  {
    "text": "So I have a3. And I'm going to go jump over\nto b1. So I'm going to write down b1. Then",
    "start": "3047980",
    "end": "3054500"
  },
  {
    "text": "I'm going to along the b's until I get to\nb4. In this case, I'm going to include all of\nthe b's. So I got b1, b2, b3, b4. And then",
    "start": "3054500",
    "end": "3065440"
  },
  {
    "text": "I'm going to jump from b4 to a1 because that's\npart of my lower tangent.",
    "start": "3065440",
    "end": "3073810"
  },
  {
    "text": "And I got a1 here, a2. And then I'm back to\na3, which is great. Because then I'm done,",
    "start": "3073810",
    "end": "3085250"
  },
  {
    "text": "OK? And so exactly what I said happened, thank\ngoodness, which is we dropped a4 but we kept",
    "start": "3085250",
    "end": "3092050"
  },
  {
    "text": "all the other points. Does that answer your\nquestion? Good.",
    "start": "3092050",
    "end": "3098300"
  },
  {
    "text": "What is the complexity of cut and paste? It's\norder n. I'm just walking through these lists.",
    "start": "3098300",
    "end": "3104520"
  },
  {
    "text": "So there's no hidden complexity here, OK?\nGood, good-- thank you. You definitely deserve",
    "start": "3104520",
    "end": "3110730"
  },
  {
    "text": "a Frisbee. In fact, you deserve two, right? Where are\nyou? I-- oh, could you stand up?",
    "start": "3110730",
    "end": "3119400"
  },
  {
    "text": "Yeah, right-- two colors. All right. Oh, so\nhe-- well, you can give it to him if you like.",
    "start": "3119400",
    "end": "3129569"
  },
  {
    "text": "So good, thank you. So are we done? Are we done with convex hull?\nOK, good. So let's go on and do median finding.",
    "start": "3129570",
    "end": "3140759"
  },
  {
    "text": "Very different-- very different set of issues\nhere.",
    "start": "3140760",
    "end": "3145960"
  },
  {
    "text": "Still on divide and conquer, but a very different\nset of issues. The specification here is,",
    "start": "3145960",
    "end": "3157960"
  },
  {
    "text": "of course, straightforward. You can think\nof it as I just want a better algorithm than",
    "start": "3157960",
    "end": "3164210"
  },
  {
    "text": "sorting and looking for the median at the\nparticular position-- in over two position,",
    "start": "3164210",
    "end": "3171480"
  },
  {
    "text": "for example. Let's say n is odd. And it's\nfloor of n over 2. You can find that median.",
    "start": "3171480",
    "end": "3181680"
  },
  {
    "text": "Right, so it's pretty easy if you can do sorting.\nBut we're never satisfied with using a standard",
    "start": "3181680",
    "end": "3190300"
  },
  {
    "text": "algorithm. If we think that we can do better\nthan that. So the whole game here is going to be I'm going to find the median.",
    "start": "3190300",
    "end": "3198970"
  },
  {
    "text": "And I want to do it in better than theta n\nlog n time. OK, so that's what median finding",
    "start": "3198970",
    "end": "3212910"
  },
  {
    "text": "is all about. You're going to use divide and\nconquer for this. And so in general, we're going to define,\ngiven a set of n numbers, define rank of x",
    "start": "3212910",
    "end": "3233880"
  },
  {
    "text": "as the numbers in the set that are greater\nthan-- I'm sorry, less than or equal to x.",
    "start": "3233880",
    "end": "3246509"
  },
  {
    "text": "I mean, you could have defined it differently.\nWe're going to go with less than or equal to. So in general, the rank, of course, is something\nthat could be used very easily to find the",
    "start": "3246510",
    "end": "3258570"
  },
  {
    "text": "median. So if you want to find the element\nof rank n plus 1 divided by 2 floor, that's",
    "start": "3258570",
    "end": "3268930"
  },
  {
    "text": "what we call the lower median. And n plus\n1 divided by 2 ceiling is the upper median.",
    "start": "3268930",
    "end": "3278650"
  },
  {
    "text": "And they may be the same if n is odd.",
    "start": "3278650",
    "end": "3283730"
  },
  {
    "text": "But that's what we want. So you can think\nof it as it's not median finding, but finding elements with a certain rank. And we want\nto do this in linear time, OK?",
    "start": "3283730",
    "end": "3295200"
  },
  {
    "text": "So we're going to apply divide and conquer\nhere. And as always, the template can be instantiated.",
    "start": "3295200",
    "end": "3305400"
  },
  {
    "text": "And the devil is in the details of either\ndivision or merge.",
    "start": "3305400",
    "end": "3311779"
  },
  {
    "text": "And we had most of our fun with convex hull\non the merge operation. It turns out most",
    "start": "3311780",
    "end": "3319460"
  },
  {
    "text": "of the fun here with respect to median finding\nis in the divide, OK? So what I want is the",
    "start": "3319460",
    "end": "3332770"
  },
  {
    "text": "definition of a select routine that takes\na set of numbers s.",
    "start": "3332770",
    "end": "3338780"
  },
  {
    "text": "And this is the rank. So I want a rank i.\nAnd that i might be n over 2-- well, floor",
    "start": "3338780",
    "end": "3349340"
  },
  {
    "text": "of n plus 1 over 2, whatever? And so what does the divide and conquer look\nlike? Well, the first thing you need to do",
    "start": "3349340",
    "end": "3356500"
  },
  {
    "text": "is divide. And as of now, we're just going\nto say you're going to pick some element x",
    "start": "3356500",
    "end": "3364920"
  },
  {
    "text": "belonging to s. And this choice is going to be crucial. But\nat this point, I'm not ready to specify this",
    "start": "3364920",
    "end": "3370230"
  },
  {
    "text": "choice yet, OK? So we're going to have to\ndo this cleverly. And then what we're going",
    "start": "3370230",
    "end": "3375640"
  },
  {
    "text": "to do is we're going to compute on k, which\nis the rank of x, and generate two sub arrays",
    "start": "3375640",
    "end": "3390220"
  },
  {
    "text": "such that I want to find the fifth highest\nelement. I want to find the median element.",
    "start": "3390220",
    "end": "3395680"
  },
  {
    "text": "I want to find the 10th highest element. So\nI have to keep track of what happens in the",
    "start": "3395680",
    "end": "3400910"
  },
  {
    "text": "sub problems. Because the sub problems are\ngoing to determine, depending on how many",
    "start": "3400910",
    "end": "3406990"
  },
  {
    "text": "elements are inside those sub problems, which\nI can only determine after I've solved those",
    "start": "3406990",
    "end": "3412700"
  },
  {
    "text": "sub problems. I'm going to have to collect\nthat information and put it together in the merge operation.",
    "start": "3412700",
    "end": "3419080"
  },
  {
    "text": "So if I want to find the 10th highest element\nand I've broken it up relatively arbitrarily,",
    "start": "3419080",
    "end": "3425700"
  },
  {
    "text": "it's quite possible that the 10th highest\nelement is going to be discovered in the left one or the right one. And I have to show that\nit's the 10th highest. And it might be that",
    "start": "3425700",
    "end": "3435150"
  },
  {
    "text": "there's four elements in the left and five\non the right that are-- let's see.",
    "start": "3435150",
    "end": "3444089"
  },
  {
    "text": "If I defined the rank as less than or equal\nto x, there's four on the left and five on the right that are smaller. And that's why\nthis is the 10th highest element. And that's",
    "start": "3444090",
    "end": "3454680"
  },
  {
    "text": "essentially what we have to look at. So b\nand c are going to correspond to the sub arrays",
    "start": "3454680",
    "end": "3464329"
  },
  {
    "text": "that you can clearly eliminate one of them.",
    "start": "3464330",
    "end": "3469600"
  },
  {
    "text": "You can count the number of elements in b,\ncount the number of elements in c. And you",
    "start": "3469600",
    "end": "3475350"
  },
  {
    "text": "can eliminate one of them in this recursion\nas you're discovering this element with the",
    "start": "3475350",
    "end": "3483810"
  },
  {
    "text": "correct rank-- in this case, i. So let me\nwrite the rest of this out and make sure we're",
    "start": "3483810",
    "end": "3489320"
  },
  {
    "text": "all on the same page. What I have here pictorially is I've generated\nb here and c. So this is all of b and that's",
    "start": "3489320",
    "end": "3503570"
  },
  {
    "text": "all of c. I have k minus 1 elements here in\nb.",
    "start": "3503570",
    "end": "3510970"
  },
  {
    "text": "And let's say I have n minus k elements in\nc. And I'm going to do-- essentially take--",
    "start": "3510970",
    "end": "3524170"
  },
  {
    "text": "once I've selected a particular element, I'm\ngoing to look at all of the elements that are less than it and put it into the array\nb. I'm going to look at all the elements that",
    "start": "3524170",
    "end": "3532510"
  },
  {
    "text": "are better than it. Let's assume all elements are unique. I'm\ngoing to put all of them into c. And I'm going",
    "start": "3532510",
    "end": "3538830"
  },
  {
    "text": "to recur on b and c. Those two are my sub\nproblems.",
    "start": "3538830",
    "end": "3546030"
  },
  {
    "text": "But what I have to do is once I recur and\nI discover the ranks of the sub problems,",
    "start": "3546030",
    "end": "3557120"
  },
  {
    "text": "I have to put them together. So what I have\nhere is if k equals i-- so I computed the",
    "start": "3557120",
    "end": "3563300"
  },
  {
    "text": "rank and I realized that if k equals-- equals\ni, I should say-- if k equals i, then I'm",
    "start": "3563300",
    "end": "3572430"
  },
  {
    "text": "going to just return x. I'm done at this point. I got lucky. I picked an element x and it\nmagically ended up having the correct rank,",
    "start": "3572430",
    "end": "3582610"
  },
  {
    "text": "OK? Not always going to happen. And so in\nother case, if k is greater than i, then going",
    "start": "3582610",
    "end": "3593030"
  },
  {
    "text": "to return select bi.",
    "start": "3593030",
    "end": "3601540"
  },
  {
    "text": "So what I've done here is if k is greater\nthan i, then I'm going to say, oh, so now",
    "start": "3601540",
    "end": "3607670"
  },
  {
    "text": "I'm going to have to find the element in b.\nI know that it's going to be in b because k is greater than i. And I've got to find\nthe exact position depending on what i is",
    "start": "3607670",
    "end": "3615740"
  },
  {
    "text": "over here. But it's going to be somewhere\nbetween 1 and k minus 1.",
    "start": "3615740",
    "end": "3623530"
  },
  {
    "text": "And then the last case is if k is less than\ni, then this is a little more tricky. I'm",
    "start": "3623530",
    "end": "3634350"
  },
  {
    "text": "going to turn on c of i minus k, OK? So what\nhappens here is that my k is-- the rank for",
    "start": "3634350",
    "end": "3647080"
  },
  {
    "text": "the x that I looked at over here is less than\ni. So I know that I'm going to find this element\nthat I'm looking for in c. But if I just look",
    "start": "3647080",
    "end": "3657110"
  },
  {
    "text": "at c, I don't want to look at c and look for\nan element of rank i within c, right? That",
    "start": "3657110",
    "end": "3665050"
  },
  {
    "text": "doesn't make sense because I'm looking for\nan element of rank i in the overall array that was given to me.",
    "start": "3665050",
    "end": "3671299"
  },
  {
    "text": "So I have to subtract out the k elements that\ncorrespond to x and all of the k minus 1 elements",
    "start": "3671300",
    "end": "3678730"
  },
  {
    "text": "that are in b to go figure out exactly what\nposition or rank I'm looking for in the sub",
    "start": "3678730",
    "end": "3685450"
  },
  {
    "text": "array corresponding to c, OK? So, people buy\nthat. So that's just a small, little thing",
    "start": "3685450",
    "end": "3691829"
  },
  {
    "text": "that you have to keep in mind as you do this. So that's pretty straightforward, looking\npretty good. And you say, well, am I done",
    "start": "3691830",
    "end": "3701480"
  },
  {
    "text": "here? And as you can imagine, the answer is\nno, because we haven't specified this value.",
    "start": "3701480",
    "end": "3709750"
  },
  {
    "text": "Now, can someone tell me, at least from an\nefficiency standpoint, what might happen,",
    "start": "3709750",
    "end": "3719070"
  },
  {
    "text": "what we're looking for here? As you can imagine,\nwe want to improve on theta n log n. And so",
    "start": "3719070",
    "end": "3724790"
  },
  {
    "text": "you could you say, well, I'm happy with theta\nn. That theta n complexity algorithm is better",
    "start": "3724790",
    "end": "3730070"
  },
  {
    "text": "than a theta n log n complexity algorithm,\nwhich is kind of in the bag. Because we know how to sort and we know how\nto index. So we want a theta n algorithm.",
    "start": "3730070",
    "end": "3738340"
  },
  {
    "text": "Now, if you take this and if I just picked,\nlet's say, the biggest element-- I kept picking",
    "start": "3738340",
    "end": "3748880"
  },
  {
    "text": "x to be n or n minus 1 or just picked a constant\nvalue. I picked x to be in the middle.",
    "start": "3748880",
    "end": "3756559"
  },
  {
    "text": "I picked the index. I can always pick an element\nbased on its index. I can always go for the",
    "start": "3756560",
    "end": "3762130"
  },
  {
    "text": "middle one. So what is the worst case complexity of this\nalgorithm? If I don't specify or I give you",
    "start": "3762130",
    "end": "3771339"
  },
  {
    "text": "this arbitrary selection corresponding to\nx belonging to s, what is the worst case complexity of this algorithm? Yeah, go ahead.",
    "start": "3771340",
    "end": "3779299"
  },
  {
    "text": "STUDENT: N squared. PROFESSOR: N squared-- why is that? STUDENT: Because if you [INAUDIBLE] take like the least element.",
    "start": "3779300",
    "end": "3784359"
  },
  {
    "text": "PROFESSOR: Yep. STUDENT: How do you compare like N o against the other analysis? PROFESSOR: Exactly right. That's exactly right.\nSo what happens is that you're doing a bunch",
    "start": "3784360",
    "end": "3792560"
  },
  {
    "text": "of work here with this theta n work. Right here, this is theta n work, OK? So given\nthat you're doing theta n work here, you have",
    "start": "3792560",
    "end": "3801650"
  },
  {
    "text": "to be really careful as to how you pick the\nx element. So what might happen is that you",
    "start": "3801650",
    "end": "3807930"
  },
  {
    "text": "end up picking the x over here. And given the particular rank you're looking\nfor, you have to now-- you're left with a",
    "start": "3807930",
    "end": "3814740"
  },
  {
    "text": "large array that has n minus 1 elements in\nthe worst case. You started with n. You did",
    "start": "3814740",
    "end": "3820160"
  },
  {
    "text": "not go to n over 2 and n over 2, which is\nwhat divide and conquer is all about-- even",
    "start": "3820160",
    "end": "3825460"
  },
  {
    "text": "n over b, OK? You went to n minus 1. And then you go to\nn minus 2. And you go to n minus 3 because",
    "start": "3825460",
    "end": "3832200"
  },
  {
    "text": "you're constantly picking-- this is worst\ncase analysis. You're constantly picking these sub arrays to be extremely unbalanced.",
    "start": "3832200",
    "end": "3839990"
  },
  {
    "text": "So when the sub arrays are extremely unbalanced,\nyou end up doing theta n work in each",
    "start": "3839990",
    "end": "3845440"
  },
  {
    "text": "level of the recursion. And those theta n's,\nbecause you're going down all the way from",
    "start": "3845440",
    "end": "3850980"
  },
  {
    "text": "n to one, are going to be theta n square when\nyou keep doing that, OK? So thanks for that",
    "start": "3850980",
    "end": "3858600"
  },
  {
    "text": "analysis. And so this is theta n squared if you have\na batch selection. So we won't talk about",
    "start": "3858600",
    "end": "3872170"
  },
  {
    "text": "randomized algorithms, but the problem with\nrandomized algorithms is that the analysis",
    "start": "3872170",
    "end": "3878520"
  },
  {
    "text": "will be given a probability distribution.\nAnd it'll be expected time.",
    "start": "3878520",
    "end": "3885140"
  },
  {
    "text": "What we want here is a deterministic algorithm\nthat is guaranteed to run in worst case theta",
    "start": "3885140",
    "end": "3891890"
  },
  {
    "text": "n. So we want a deterministic way of picking\nx belonging to s such that all of this works",
    "start": "3891890",
    "end": "3900740"
  },
  {
    "text": "out and when we get our recurrence and we\nsolve it, somehow magically we're getting fully balanced partitions-- firmly balanced\nsub problems in the sense that it's not n",
    "start": "3900740",
    "end": "3912860"
  },
  {
    "text": "minus 1 and 1. It's something like-- it could\neven be n over 10 and 9n over 10. But as long as you guarantee that, you're\nshaking things down geometrically. And the",
    "start": "3912860",
    "end": "3922320"
  },
  {
    "text": "asymptotics is going to work out. but the\ndeterminism is what we need.",
    "start": "3922320",
    "end": "3928320"
  },
  {
    "text": "And so we're going to pick x cleverly. And\nwe don't want the rank x to be extreme.",
    "start": "3928320",
    "end": "3942190"
  },
  {
    "text": "So this is not the only way you could do it,\nbut this is really very clever.",
    "start": "3942190",
    "end": "3949000"
  },
  {
    "text": "There's a deterministic way. And you're going\nto see some arbitrary constants here. And",
    "start": "3949000",
    "end": "3957880"
  },
  {
    "text": "we'll talk about them once I've described\nit. But what we're going to do is we're going",
    "start": "3957880",
    "end": "3963910"
  },
  {
    "text": "to arrange s into columns of size 5, right? We're going to take this single array. And\nwe're going to make it a two dimensional array",
    "start": "3963910",
    "end": "3972130"
  },
  {
    "text": "where the number of rows is five and the number\nof columns that you have is n over 5-- the",
    "start": "3972130",
    "end": "3980039"
  },
  {
    "text": "ceiling in this case. And then we're going\nto sort it each column, big elements on top.",
    "start": "3980040",
    "end": "3995570"
  },
  {
    "text": "And we're going to do this in linear time. And you might say, how did that happen? Well,\nthere's only five elements. So it's linear.",
    "start": "3995570",
    "end": "4004460"
  },
  {
    "text": "You could do whatever you wanted. You could\ndo n raised to four. But it's five raised to four and it's constants.\nDon't you love theory? So then we're going",
    "start": "4004460",
    "end": "4015230"
  },
  {
    "text": "to find what we're going to call the median\nof medians. So I'm going to explain this. This works for\narbitrary rank, but it's a little easier to",
    "start": "4015230",
    "end": "4024380"
  },
  {
    "text": "focus in on the median to just explain the\nparticular example. Because as you can see,",
    "start": "4024380",
    "end": "4029789"
  },
  {
    "text": "there's an intricacy here associated with\nthe break up.",
    "start": "4029790",
    "end": "4038090"
  },
  {
    "text": "And so here we go. I'm going to draw out a\npicture. And we're going to try and argue",
    "start": "4038090",
    "end": "4043890"
  },
  {
    "text": "that this deterministic strategy that I'll\nspecify gives you fairly balanced partitions",
    "start": "4043890",
    "end": "4052559"
  },
  {
    "text": "in all cases, OK? So what we see here is we see-- pictorially,\nyou see columns of length five. Each of these",
    "start": "4052560",
    "end": "4067270"
  },
  {
    "text": "dots corresponds to a number. This one dimensional\narray got turned into a two dimensional right.",
    "start": "4067270",
    "end": "4080640"
  },
  {
    "text": "So I got four full columns. And it's suddenly\npossible, given n, that my fifth column is",
    "start": "4080640",
    "end": "4088010"
  },
  {
    "text": "not full, right? So that's certainly possible.\nSo that's why I have that up here. It so what",
    "start": "4088010",
    "end": "4096298"
  },
  {
    "text": "I've here is I'm going to lay them out this\nway. And I'm going to look at that. I'm going to\nlook at the middle elements of each of these",
    "start": "4096299",
    "end": "4111889"
  },
  {
    "text": "n over five columns. That's exactly what I'm\ngoing to look at. Now, if I look at what I",
    "start": "4111889",
    "end": "4121548"
  },
  {
    "text": "want, what I want over here is this x. If\nI want to find--",
    "start": "4121549",
    "end": "4128178"
  },
  {
    "text": "I'm going to find the median of medians. So\nis x. Now, it is true the first that",
    "start": "4128179",
    "end": "4139109"
  },
  {
    "text": "these columns-- I'm just putting that up here\nimagining that that's x. That's not guaranteed to be x because the\ncolumns themselves aren't-- well, these columns",
    "start": "4139109",
    "end": "4152567"
  },
  {
    "text": "are sorted. And what I'm going to have to\nguarantee, of course, is that when I go find",
    "start": "4152568",
    "end": "4158848"
  },
  {
    "text": "this median of medians is that it ends up\nbeing something that gives me balanced partitions.",
    "start": "4158849",
    "end": "4165749"
  },
  {
    "text": "So maybe say a little bit more before I explain\nwhat's going on.",
    "start": "4165749",
    "end": "4172749"
  },
  {
    "text": "Each of these columns is sorted. And s is\narranged into columns of size 5 like I just",
    "start": "4172749",
    "end": "4178960"
  },
  {
    "text": "said here. These are the medians, OK? If I\nlook at determining the medians and I say",
    "start": "4178960",
    "end": "4191258"
  },
  {
    "text": "that once I've determined this x, which I've\ndiscovered that it's the median, then this",
    "start": "4191259",
    "end": "4197448"
  },
  {
    "text": "is right there in the middle. There's going\nto be a bunch of columns to the left of it, a bunch of elements to the left of it, and\na bunch of elements to the right of it.",
    "start": "4197449",
    "end": "4204239"
  },
  {
    "text": "And in this case, I have five columns. I could\nhave had more. It happens to be the third one.",
    "start": "4204239",
    "end": "4209880"
  },
  {
    "text": "So the idea is that once I find this median\nof medians, which corresponds to this x number,",
    "start": "4209880",
    "end": "4215908"
  },
  {
    "text": "I can say that all of the columns-- these\nall correspond to columns that have their",
    "start": "4215909",
    "end": "4223999"
  },
  {
    "text": "median element greater than x. These correspond\nto columns that have their median element",
    "start": "4223999",
    "end": "4229070"
  },
  {
    "text": "less than x, OK? So what I have here in this\npicture is that these elements here are going",
    "start": "4229070",
    "end": "4239158"
  },
  {
    "text": "to be greater than x. And these elements here are going to be less\nthan x. So let me clear. What's happened here",
    "start": "4239159",
    "end": "4256440"
  },
  {
    "text": "is we've not only sorted all of the columns\nsuch that you have large elements up here.",
    "start": "4256440",
    "end": "4267659"
  },
  {
    "text": "Each of these five columns have been sorted\nthat way. On top of that, I've discovered the particular column that corresponds to\nthe medians of medians. And this is my x over",
    "start": "4267659",
    "end": "4279928"
  },
  {
    "text": "here. And it may be the case that these columns\naren't sorted. This one may be larger than",
    "start": "4279929",
    "end": "4285198"
  },
  {
    "text": "that or vice versa-- same thing over there.\nI have no idea. But it's guaranteed that once I find this\nmedian that I do know all of the columns that",
    "start": "4285199",
    "end": "4296118"
  },
  {
    "text": "have elements in this position that are less\nthan this x. And I know columns that in this",
    "start": "4296119",
    "end": "4304550"
  },
  {
    "text": "position have elements that are greater than\nx, OK? Yep. STUDENT: Shouldn't the two elements below x also be computed [INAUDIBLE] less than x.",
    "start": "4304550",
    "end": "4316200"
  },
  {
    "text": "PROFESSOR: You're exactly right. I would have\nprobably been able to get the same asymptotic",
    "start": "4316200",
    "end": "4324579"
  },
  {
    "text": "complexity if I dropped those because I had\na constant number. But you're absolutely exactly right.",
    "start": "4324579",
    "end": "4330198"
  },
  {
    "text": "So the point that-- the question was-- I just\nredrew it. These two are clearly less than",
    "start": "4330199",
    "end": "4335429"
  },
  {
    "text": "x as well because they're part of the sorting.\nAnd that's essentially I have here.",
    "start": "4335429",
    "end": "4341610"
  },
  {
    "text": "Now, my goal here-- and you can kind of see\nfrom here as to where we're headed. What I've",
    "start": "4341610",
    "end": "4346678"
  },
  {
    "text": "down here by this process of sorting each\ncolumn and finding the median of medians is",
    "start": "4346679",
    "end": "4351780"
  },
  {
    "text": "that I found this median of medians such that\nthere's a bunch of columns on the left. And",
    "start": "4351780",
    "end": "4357760"
  },
  {
    "text": "roughly half of those elements in those columns\nare less than x. And there are a bunch of columns on the right.\nAnd roughly half of those columns have elements",
    "start": "4357760",
    "end": "4367739"
  },
  {
    "text": "that are greater than x. So what I now have\nto do is to do a little bit of math to show",
    "start": "4367739",
    "end": "4374030"
  },
  {
    "text": "you exactly what the recurrence is. And let\nme do that over here. So that's the last thing that we have to do.\nI probably won't solve the recurrence, but",
    "start": "4374030",
    "end": "4383550"
  },
  {
    "text": "that can wait until tomorrow. The recurrence\nwill be something that's not particularly",
    "start": "4383550",
    "end": "4390469"
  },
  {
    "text": "difficult to solve. So I want to now make\na more quantitative argument that the variable",
    "start": "4390469",
    "end": "4403670"
  },
  {
    "text": "being n as to how many elements are guaranteed\nto be greater than x.",
    "start": "4403670",
    "end": "4413300"
  },
  {
    "text": "And essentially what I'm saying, which is\nI'm writing out what I have on that picture",
    "start": "4413300",
    "end": "4418519"
  },
  {
    "text": "there, half of the n over 5 groups contribute\nat least three elements greater than x except",
    "start": "4418519",
    "end": "4442030"
  },
  {
    "text": "for one group with possibly less than five\nelements, which is the one that I have all",
    "start": "4442030",
    "end": "4450558"
  },
  {
    "text": "the way to the right, and one group that contains\nx.\nSo for all the other columns, I'm going to",
    "start": "4450559",
    "end": "4467550"
  },
  {
    "text": "get three elements that are greater than x.\nAnd so if you write that out, this says there",
    "start": "4467550",
    "end": "4475618"
  },
  {
    "text": "are at least three n over 10, because I have\nhalf of all of those groups, minus 2.",
    "start": "4475619",
    "end": "4487199"
  },
  {
    "text": "And I'm not counting perfectly accurately\nhere, but I have an at least. So this should",
    "start": "4487199",
    "end": "4493239"
  },
  {
    "text": "all be fine. 3n over 1d-- 3 times n over 10\nminus 2 elements are strictly greater than",
    "start": "4493239",
    "end": "4502219"
  },
  {
    "text": "x. And that comes from that picture. I'm going to be able to say the same thing\nfor less than x as well. I can't count the",
    "start": "4502219",
    "end": "4514639"
  },
  {
    "text": "one. Depending on how things go, maybe I could\nhave played around and subtracted 1 instead",
    "start": "4514639",
    "end": "4520960"
  },
  {
    "text": "of a 2 in the latter case. But I'm just being conservative here. It is\nclear that I'm going to have a bunch of columns",
    "start": "4520960",
    "end": "4528829"
  },
  {
    "text": "that are full columns, that are going to be\ncontributing three elements that are greater",
    "start": "4528829",
    "end": "4534789"
  },
  {
    "text": "than x. And in this case, I have, well, two\nof them here for the less than x. And I got one for the greater than x. So that's\nall that I'm seeing over here with respect",
    "start": "4534789",
    "end": "4544550"
  },
  {
    "text": "to the balance of the partitions. And it turns\nout that's enough.",
    "start": "4544550",
    "end": "4549800"
  },
  {
    "text": "It turns out all I have to do with this observation\nis to go off and run the recurrence. And we're",
    "start": "4549800",
    "end": "4557948"
  },
  {
    "text": "going to get an efficient algorithm. Yep.",
    "start": "4557949",
    "end": "4564160"
  },
  {
    "text": "STUDENT: Should it not be like greater than or equal to, because there's... [INAUDIBLE] PROFESSOR: No, there's nothing that's equal.",
    "start": "4564160",
    "end": "4571240"
  },
  {
    "text": "STUDENT: So you are saying, that's all you need. PROFESSOR: Yeah. Yeah, I assume that-- so,\nconvenience, yeah. There's always a little",
    "start": "4571240",
    "end": "4576840"
  },
  {
    "text": "bit of convenience thrown in here. We will assume that the a has unique elements.\nSo there's nothing that's x, OK? Good.",
    "start": "4576849",
    "end": "4587989"
  },
  {
    "text": "So the recurrence, once you do that, is t\nof n equals-- we're going to just say it's",
    "start": "4587989",
    "end": "4598190"
  },
  {
    "text": "order one for n less than or equal to 140.\nWhere did that come from? Well, like 140.",
    "start": "4598190",
    "end": "4608510"
  },
  {
    "text": "It's just a large number. It came from the\nfact that you're going to see 10 minus 3,",
    "start": "4608510",
    "end": "4613630"
  },
  {
    "text": "which is 7. And then you want to multiply\nthat by 2. So some reasonably large number-- we're going\nto go off and we're going to assume that's",
    "start": "4613630",
    "end": "4621619"
  },
  {
    "text": "a constant. So you could sort those 140 numbers\nand find the median or whatever rank. It's",
    "start": "4621619",
    "end": "4628400"
  },
  {
    "text": "all constant time once you get down to the\nbase case. So you just want it to be large enough such\nthat you could break it up and you have something",
    "start": "4628400",
    "end": "4634658"
  },
  {
    "text": "interesting going on with respect to the number\nof columns. So don't worry much about that",
    "start": "4634659",
    "end": "4639679"
  },
  {
    "text": "number. The key thing here is the recurrence,\nall right? And this is what we have spent the rest of\nour time on. And I'll just write this out",
    "start": "4639679",
    "end": "4651980"
  },
  {
    "text": "and explain where these numbers came from.\nSo that's our recurrence for n less than or",
    "start": "4651980",
    "end": "4667179"
  },
  {
    "text": "equal to 140. And else, you're going to do this. So what\nis going on here? What are all of these components",
    "start": "4667179",
    "end": "4674590"
  },
  {
    "text": "corresponding to this recurrence? Really quickly, this is simply something that\nsays I'm finding the median of medians. I'm",
    "start": "4674590",
    "end": "4685300"
  },
  {
    "text": "finding some element that has a certain rank.\nSo this median of medians is going to be running",
    "start": "4685300",
    "end": "4691170"
  },
  {
    "text": "on n over 5 columns. So I've got this-- there\nare n over 5 columns here.",
    "start": "4691170",
    "end": "4697579"
  },
  {
    "text": "And I'm going to be calling this algorithm\nrecursively, the median finding algorithm,",
    "start": "4697579",
    "end": "4704150"
  },
  {
    "text": "to do that-- finding the median of medians.\nThis thing over here is-- I'm going to be",
    "start": "4704150",
    "end": "4715260"
  },
  {
    "text": "discarding at least regardless of what I do.\nBecause I have these two statements here,",
    "start": "4715260",
    "end": "4723038"
  },
  {
    "text": "I take the overall n. And I'm going to discard. In my paradigm over here, I'm either going\nto go with b or I'm either going to go with",
    "start": "4723039",
    "end": "4731848"
  },
  {
    "text": "c depending on what I'm looking for. And given\nthat b and c are not completely unbalanced,",
    "start": "4731849",
    "end": "4737889"
  },
  {
    "text": "I'm going to be discarding 3n over 10 minus\n6 elements, which simply corresponds to me",
    "start": "4737889",
    "end": "4746349"
  },
  {
    "text": "ignoring the ceiling here and multiplying\nthe 3 out. So that's 3n over 10 minus 6.",
    "start": "4746349",
    "end": "4752150"
  },
  {
    "text": "So then I have 7n over 10 plus 6. That's the\nmaximum size partition that I'm going to recur",
    "start": "4752150",
    "end": "4758999"
  },
  {
    "text": "on. It's only going to be exactly one of them,\nas you can see from that. It's either else. It's not recurring on both\nof them. It's recurring on one of them. So",
    "start": "4758999",
    "end": "4766570"
  },
  {
    "text": "that's where the 7n over 10 plus 6 comes from.\nAnd then you ask where does this theta n come",
    "start": "4766570",
    "end": "4772098"
  },
  {
    "text": "from. Well, the theta n comes from the fact that\nI do have to do some sorting. It's constant",
    "start": "4772099",
    "end": "4778780"
  },
  {
    "text": "time sorting for every column, OK? Because\nit's only five elements.",
    "start": "4778780",
    "end": "4784078"
  },
  {
    "text": "So I'm going to do constant time sorting.\nBut there's order n columns. Because it's--",
    "start": "4784079",
    "end": "4789099"
  },
  {
    "text": "then it's n over 5 columns. So this is the sorting of all of the columns,\nall right? So that's it. And I'll just leave",
    "start": "4789099",
    "end": "4800679"
  },
  {
    "text": "you with-- you cannot apply the master theorem\nfor solving this particular recurrence. But",
    "start": "4800679",
    "end": "4808659"
  },
  {
    "text": "if you make the observation-- and you'll see\nthis in section. You make the observation that n over 5 plus\n7n over 10 is actually less than n. So you",
    "start": "4808659",
    "end": "4819409"
  },
  {
    "text": "get 0.2n here and 0.7n there. That's actually\nless than n. This thing runs in linear time. And you'll\nsee that in section tomorrow. So this whole",
    "start": "4819409",
    "end": "4828070"
  },
  {
    "text": "thing is theta n time. See you next time.",
    "start": "4828070",
    "end": "4833250"
  }
]