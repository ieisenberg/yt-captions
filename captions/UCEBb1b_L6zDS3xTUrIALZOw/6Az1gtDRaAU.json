[
  {
    "start": "0",
    "end": "183000"
  },
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "8432"
  },
  {
    "start": "8432",
    "end": "25230"
  },
  {
    "text": "MICHAEL SIPSER: OK, everybody. Let's begin.  Welcome back.",
    "start": "25230",
    "end": "31850"
  },
  {
    "text": "Good to see you\nall here on Zoom. So we're going to\npick up with what",
    "start": "31850",
    "end": "38420"
  },
  {
    "text": "we had been\ndiscussing last week, which was an introduction\nto NP-completeness.",
    "start": "38420",
    "end": "50550"
  },
  {
    "text": "So we're following on our\ndescription of time complexity.",
    "start": "50550",
    "end": "56010"
  },
  {
    "text": "We started talking\nabout the time complexity classes, the class\nP, the nondeterministic classes,",
    "start": "56010",
    "end": "64159"
  },
  {
    "text": "the class NP, P versus\nNP problem, and then leading to this discussion\nof NP-completeness.",
    "start": "64160",
    "end": "70193"
  },
  {
    "text": "And today we're going\nto prove the big theorem in the field, which really\nkind of got things going back",
    "start": "70193",
    "end": "75890"
  },
  {
    "text": "in the early 1970s\nby Cook and Levin that there was actually\nan NP-complete problem,",
    "start": "75890",
    "end": "82850"
  },
  {
    "text": "that SAT in particular is\nan NP-complete problem. And then we'll also talk about\n3SAT, which is a useful tool.",
    "start": "82850",
    "end": "89060"
  },
  {
    "text": " Just to remember, we had this\nnotion of NP-completeness.",
    "start": "89060",
    "end": "97760"
  },
  {
    "text": "A language is NP-complete\nif it's in NP. And everything else in NP\nis polynomial time reducible",
    "start": "97760",
    "end": "103670"
  },
  {
    "text": "to it. And if an NP-complete\nproblem turns out to have a polynomial\ntime solution,",
    "start": "103670",
    "end": "110729"
  },
  {
    "text": "then every NP-problem has\na polynomial time solution. And that's part of the\nimportance of NP-completeness,",
    "start": "110730",
    "end": "117420"
  },
  {
    "text": "because since we consider it\nunlikely that P equals NP,",
    "start": "117420",
    "end": "124619"
  },
  {
    "text": "and that there probably are\nsome problems that are an NP, but are not solvable\nin polynomial time.",
    "start": "124620",
    "end": "132660"
  },
  {
    "text": "That would imply that\nan NP-complete problem would have that property.",
    "start": "132660",
    "end": "137680"
  },
  {
    "text": "And so proving a problem\nbeing NP-complete is evidence, very\nstrong evidence,",
    "start": "137680",
    "end": "143610"
  },
  {
    "text": "that it doesn't have a\npolynomial time solution. And so therefore it's\ncalled intractable.",
    "start": "143610",
    "end": "149140"
  },
  {
    "text": "It's a very difficult problem.  So the way we are going\nto typically show problems",
    "start": "149140",
    "end": "159280"
  },
  {
    "text": "NP-complete is by reducing\na known-- a previously known NP-complete\nproblem to that problem.",
    "start": "159280",
    "end": "166390"
  },
  {
    "text": "Often it's 3SAT, as we've seen\nin several examples already, or it could be\nsome other example.",
    "start": "166390",
    "end": "173030"
  },
  {
    "text": "So let's just survey briefly\nthe things that we've already-- languages that we've already\nseen, which are NP-complete.",
    "start": "173030",
    "end": "181939"
  },
  {
    "text": "So we have the\nlanguages SAT, which has a direct reduction\nfrom every NP problem.",
    "start": "181940",
    "end": "187220"
  },
  {
    "start": "183000",
    "end": "495000"
  },
  {
    "text": "And so we're going to show\nthat today, that every NP",
    "start": "187220",
    "end": "197630"
  },
  {
    "text": "language is polynomial time\nreducible to SAT, which is, in turn, reducible to 3SAT.",
    "start": "197630",
    "end": "203790"
  },
  {
    "text": "And we showed\npreviously that 3SAT is reducible to\nCLIQUE and HAMPATH.",
    "start": "203790",
    "end": "210530"
  },
  {
    "text": " And in recitation,\nif you went to that,",
    "start": "210530",
    "end": "217330"
  },
  {
    "text": "they showed that the SUBSET-SUM\nproblem and the undirected HAMPATH problems are also\nreducible from previously",
    "start": "217330",
    "end": "225670"
  },
  {
    "text": "shown-- well, either from\n3SAT, or in the case",
    "start": "225670",
    "end": "230680"
  },
  {
    "text": "of the undirected\nHAMPATH problem, it's reducible from\nthe HAMPATH problem. And the conclusion, once we have\nthese two blue reducibilities",
    "start": "230680",
    "end": "243190"
  },
  {
    "text": "shown, then we know that all of\nthese problems are NP-complete. ",
    "start": "243190",
    "end": "250150"
  },
  {
    "text": "So the class NP\nbasically breaks down into the NP-complete\nproblems, P problems, problems",
    "start": "250150",
    "end": "256739"
  },
  {
    "text": "that are in P, and then\nthere might be problems in between as well. So there are some\nproblems that are not",
    "start": "256740",
    "end": "262230"
  },
  {
    "text": "known to be in either category. And in fact, there's\nan old theorem which shows that if P\nis different from NP,",
    "start": "262230",
    "end": "268560"
  },
  {
    "text": "then there are\nactually problems that are in the intermediate state. And of course, it's\npossible that P equals NP,",
    "start": "268560",
    "end": "278530"
  },
  {
    "text": "and then everything\ncollapses down to be the same with the\ntiny exception of the sigma",
    "start": "278530",
    "end": "284230"
  },
  {
    "text": "star and empty set languages,\nwhich can never be complete. ",
    "start": "284230",
    "end": "290620"
  },
  {
    "text": "OK. So that's our quick review. Here is a check-in\nthat I'm going",
    "start": "290620",
    "end": "295960"
  },
  {
    "text": "to use to get us ready\nfor the big proof that we're going to be\nspending most of the lecture",
    "start": "295960",
    "end": "302050"
  },
  {
    "text": "on about showing\nSAT is NP-complete, but just to define a\nlittle notation, which",
    "start": "302050",
    "end": "307930"
  },
  {
    "text": "you might have-- maybe\nyou've seen already. But I'm going to do it in\nthe form of a check-in.",
    "start": "307930",
    "end": "314449"
  },
  {
    "text": "So I'm sure you've\nall seen the big sum notation using a big\nsigma to represent a sum",
    "start": "314450",
    "end": "323440"
  },
  {
    "text": "over some set of possibilities.",
    "start": "323440",
    "end": "329410"
  },
  {
    "text": "Just as there is the big\nsigma notation, we have-- you can have other\noperations that",
    "start": "329410",
    "end": "335110"
  },
  {
    "text": "apply to a set of elements. So in this case, we're going\nto be seeing the big end AND",
    "start": "335110",
    "end": "342550"
  },
  {
    "text": "and the big OR operation-- it's going to--\nnotation, which is going to allow us to talk about\ntaking the AND of many things",
    "start": "342550",
    "end": "352540"
  },
  {
    "text": "or the OR of many\nthings, because we're going to be building\nthese Boolean formulas. And so ANDs and ORs are going\nto be the operations that we're",
    "start": "352540",
    "end": "360910"
  },
  {
    "text": "going to be focusing on. And so just as an\nexample just to make sure",
    "start": "360910",
    "end": "365950"
  },
  {
    "text": "we're all understanding\nthis notation, if you have two strings x\nand y written out in terms",
    "start": "365950",
    "end": "375550"
  },
  {
    "text": "of their individual symbols. So they're both of length n. So x is x1 to xn. Y is y1 to yn.",
    "start": "375550",
    "end": "382150"
  },
  {
    "text": "And now I write the\nfollowing expression. The big AND for i ranging\nbetween 1 and n of xi",
    "start": "382150",
    "end": "392260"
  },
  {
    "text": "equal to yi. If that big AND is true, what\ndoes it tell us about x and y?",
    "start": "392260",
    "end": "397810"
  },
  {
    "text": "And I'm just going to offer\nyou two possibilities, that either x and y agree\non some symbol or are equal,",
    "start": "397810",
    "end": "404979"
  },
  {
    "text": "namely that they\nagree on every symbol. And so let's just pull\nthat up as a quick poll",
    "start": "404980",
    "end": "412300"
  },
  {
    "text": "to get us going here.  I just want to make sure\nyou understand the notation",
    "start": "412300",
    "end": "418560"
  },
  {
    "text": "because we're going\nto be using that a lot in describing the polynomial\ntime reduction from languages",
    "start": "418560",
    "end": "428640"
  },
  {
    "text": "in NP to the SAT language. OK. I think most of you\nhave got the idea.",
    "start": "428640",
    "end": "435930"
  },
  {
    "text": "So let's finish this up quick. ",
    "start": "435930",
    "end": "442139"
  },
  {
    "text": "So another 15\nseconds, please, just to give you a chance\nto participate. ",
    "start": "442140",
    "end": "451680"
  },
  {
    "text": "OK. We're going to close this poll. Last chance, last call.",
    "start": "451680",
    "end": "458430"
  },
  {
    "text": "All right. So yes, the big AND--",
    "start": "458430",
    "end": "463470"
  },
  {
    "text": "as most of you can see, the\nbig AND says that x1 equals y1,",
    "start": "463470",
    "end": "470160"
  },
  {
    "text": "and x2 equals y2, and x3\nequals y3 so they're all--",
    "start": "470160",
    "end": "477050"
  },
  {
    "text": "every symbol in x is equal to\nthe corresponding symbol in y. If we had a big OR\ninstead of a big AND,",
    "start": "477050",
    "end": "484219"
  },
  {
    "text": "then A would be\nthe correct answer, because then just there\nwould be some place where they agree instead of every\nplace where they agree.",
    "start": "484220",
    "end": "491120"
  },
  {
    "text": " So let's then start to\nlaunch into this big theorem.",
    "start": "491120",
    "end": "500794"
  },
  {
    "start": "495000",
    "end": "832000"
  },
  {
    "text": " The proof itself is\na mass of details",
    "start": "500795",
    "end": "507880"
  },
  {
    "text": "with one underlying idea. And in fact, it's an\nidea we've seen before.",
    "start": "507880",
    "end": "513159"
  },
  {
    "text": "But let's-- before we\nget ahead of ourselves, let's just understand\nwhat we're trying to do.",
    "start": "513159",
    "end": "518809"
  },
  {
    "text": "So we want to show that this\nlanguage SAT is NP-complete.",
    "start": "518809",
    "end": "523900"
  },
  {
    "text": "We remember what SAT is. It's Boolean formulas\nthat are satisfiable. ",
    "start": "523900",
    "end": "530500"
  },
  {
    "text": "So we already showed that the\nSAT prob-- so being NP-complete means it has these two features.",
    "start": "530500",
    "end": "536430"
  },
  {
    "text": "It's in NP, and everything\nin NP is reducible to it. So first of all, SAT is in\nNP, as we've already seen.",
    "start": "536430",
    "end": "543840"
  },
  {
    "text": "The witness that shows\nthe formula is satisfiable is simply the\nsatisfying assignment",
    "start": "543840",
    "end": "549449"
  },
  {
    "text": "that evaluates to true. So now we're going to pick\nsome language in NP, A,",
    "start": "549450",
    "end": "556649"
  },
  {
    "text": "and show that A is polynomial\ntime reducible to SAT. ",
    "start": "556650",
    "end": "563350"
  },
  {
    "text": "So this is going to apply\nto any language A in NP. So let A be some language in NP.",
    "start": "563350",
    "end": "568480"
  },
  {
    "text": "It's decided by some\nnondeterministic Turing machine M in time n to the k.",
    "start": "568480",
    "end": "573900"
  },
  {
    "text": "That's what it\nmeans to be an NP. I'm going to be ignoring\nthe constant factors when",
    "start": "573900",
    "end": "579300"
  },
  {
    "text": "we could carry that\nthroughout the proof. It just would make\nthe description a little more\ncumbersome and wouldn't",
    "start": "579300",
    "end": "586470"
  },
  {
    "text": "change any of the ideas. So let's just say it's M\nruns in time n to the k,",
    "start": "586470",
    "end": "591660"
  },
  {
    "text": "and recognizes or decides\nthis language in A.",
    "start": "591660",
    "end": "597660"
  },
  {
    "text": "So it's a\nnondeterministic machine.",
    "start": "597660",
    "end": "602940"
  },
  {
    "text": "So we've got to give\na polynomial time reduction from A to SAT. That's what I have to\ndemonstrate to you.",
    "start": "602940",
    "end": "610930"
  },
  {
    "text": "So what does that\nreduction look like? It's going to map strings,\nwhich may or may not",
    "start": "610930",
    "end": "616260"
  },
  {
    "text": "be in A, to formulas, which\nmay or may not be satisfied.",
    "start": "616260",
    "end": "621730"
  },
  {
    "text": "That's what the\nreduction has got to do. So saying that out\nmore formally is it's",
    "start": "621730",
    "end": "631720"
  },
  {
    "text": "going to take some\nstring w and map it to a formula we'll\ncall phi sub M, w,",
    "start": "631720",
    "end": "636910"
  },
  {
    "text": "where M is the machine that\ndecides A and w is the input.",
    "start": "636910",
    "end": "645769"
  },
  {
    "text": "So f is going to map w\nto this formula, where the string is in the language\nexactly when the formula is",
    "start": "645770",
    "end": "653300"
  },
  {
    "text": "satisfied. And the formula is going\nto depend upon M and w. That's why it just has--\nit's written in this way.",
    "start": "653300",
    "end": "660310"
  },
  {
    "text": "So we've seen that\nkind of thing before. So basically, my job--",
    "start": "660310",
    "end": "665760"
  },
  {
    "text": "we have this language\nA that's in NP. And now we have some string\nw, which might be in A,",
    "start": "665760",
    "end": "673650"
  },
  {
    "text": "or maybe not is in A. And I have\nto quickly in polynomial time",
    "start": "673650",
    "end": "679510"
  },
  {
    "text": "now produce a formula which is\ngoing to be satisfiable exactly when the string w is in A.",
    "start": "679510",
    "end": "690639"
  },
  {
    "text": "So how is that\nformula going to work? How can I produce\nsuch a formula? Which I mean, of course, I don't\nknow whether w is in A or not,",
    "start": "690640",
    "end": "699190"
  },
  {
    "text": "because I'm just the\npolynomial time reduction. And A is an NP language.",
    "start": "699190",
    "end": "705460"
  },
  {
    "text": "So polynomial time\nprobably is not enough to solve\nwhether w is in A.",
    "start": "705460",
    "end": "710740"
  },
  {
    "text": "So I've got to do that mapping\nwithout knowing the answer.",
    "start": "710740",
    "end": "717800"
  },
  {
    "text": "And the idea is that-- and this is where we've seen\nthings like this before--",
    "start": "717800",
    "end": "723290"
  },
  {
    "text": "the formula we're\ngoing to construct simulates the machine on w.",
    "start": "723290",
    "end": "728615"
  },
  {
    "text": " So in some way it's going\nto do that simulation.",
    "start": "728615",
    "end": "734540"
  },
  {
    "text": "The trick is figuring out\nhow to-- what that means. But the interpretation\nof that formula",
    "start": "734540",
    "end": "742910"
  },
  {
    "text": "is that in a sense describes,\nsays, in my informal language,",
    "start": "742910",
    "end": "748009"
  },
  {
    "text": "that M accepts w. Very much like-- there's a lot\nof parallel here between this",
    "start": "748010",
    "end": "758820"
  },
  {
    "text": "construction and, for\nexample, the construction, the PCP construction,\nwhere we made an instant--",
    "start": "758820",
    "end": "766589"
  },
  {
    "text": "given a machine and\nan input, we made",
    "start": "766590",
    "end": "771600"
  },
  {
    "text": "a set of those dominoes,\nwhere finding a match forced you to\nsimulate the machine.",
    "start": "771600",
    "end": "776930"
  },
  {
    "text": "Here finding a\nsatisfying assignment is going to force you\nto simulate the machine. ",
    "start": "776930",
    "end": "785329"
  },
  {
    "text": "So the satisfying\nassignment is going to be a computation\nhistory for M on w.",
    "start": "785330",
    "end": "791780"
  },
  {
    "text": "And I'm just going to\nwrite that computation history in a particular way. So it's going to have a somewhat\ndifferent encoding, which",
    "start": "791780",
    "end": "798230"
  },
  {
    "text": "is going to help us to visualize\nwhat's going on better. ",
    "start": "798230",
    "end": "804080"
  },
  {
    "text": "So that's the approach. That's the basic idea\nof what we're trying",
    "start": "804080",
    "end": "809960"
  },
  {
    "text": "to-- what we're going to do. So I'm happy to take\na minute if you have any questions about this part.",
    "start": "809960",
    "end": "815779"
  },
  {
    "text": "But otherwise, I'll\njust move on to start doing the actual construction\nof what the formula looks like.",
    "start": "815780",
    "end": "823160"
  },
  {
    "text": "How is it going to do that? How is that formula\ngoing to work? OK. So no questions.",
    "start": "823160",
    "end": "828950"
  },
  {
    "text": "Hopefully, we are all together.",
    "start": "828950",
    "end": "834530"
  },
  {
    "start": "832000",
    "end": "1032000"
  },
  {
    "text": "So first of all, let me\ndescribe what my computation",
    "start": "834530",
    "end": "840820"
  },
  {
    "text": "history is going to look like. And the situation\nis a little bit different than what we\nhad before because when",
    "start": "840820",
    "end": "848751"
  },
  {
    "text": "we were talking about the\nPost correspondence problem we had a deterministic machine. And now our machine\nis nondeterministic.",
    "start": "848752",
    "end": "857240"
  },
  {
    "text": "So we're going to\ncall the object-- instead of an accepting\ncomputation or a computation",
    "start": "857240",
    "end": "864920"
  },
  {
    "text": "history, we're just\ngoing to-- we're going to call it a tableau, or\nsometimes an accepting tableau if you want to emphasize\nthe accepting nature of it.",
    "start": "864920",
    "end": "872720"
  },
  {
    "text": "But generally, we're just\ngoing to call it a tableau. So a tableau is really an\naccepting computation history",
    "start": "872720",
    "end": "880970"
  },
  {
    "text": "for the machine on\nan accepting branch",
    "start": "880970",
    "end": "888519"
  },
  {
    "text": "of its nondeterministic\ncomputation. So if M accepts w, it's got\nto have some accepting branch,",
    "start": "888520",
    "end": "899600"
  },
  {
    "text": "and the tableau is going to be\nthe sequence of configurations",
    "start": "899600",
    "end": "904790"
  },
  {
    "text": "that the machine goes through\non that accepting branch. If there are several\naccepting branches,",
    "start": "904790",
    "end": "909920"
  },
  {
    "text": "there may be several tableaus. There will be several tableaus. So there's going\nto be one tableau",
    "start": "909920",
    "end": "915770"
  },
  {
    "text": "for each accepting branch of\nthe machine's computation on w.",
    "start": "915770",
    "end": "921900"
  },
  {
    "text": "If the machine does not accept\nw, there won't be any tableaus. And so the whole\npoint is that we're",
    "start": "921900",
    "end": "929490"
  },
  {
    "text": "going to make our formula\nrepresent the statement",
    "start": "929490",
    "end": "935779"
  },
  {
    "text": "that there is a tableau. And satisfying that\nformula is going",
    "start": "935780",
    "end": "941350"
  },
  {
    "text": "to correspond to filling out the\nsymbols in the tableau to make",
    "start": "941350",
    "end": "946750"
  },
  {
    "text": "it a tableau. So here is a tableau. So a tableau is just, again, an\naccepting computation history",
    "start": "946750",
    "end": "955959"
  },
  {
    "text": "on some branch, some accepting\nbranch of the machine's computation.",
    "start": "955960",
    "end": "962290"
  },
  {
    "text": "The rows are the-- instead of writing the\ncomputation history out linearly, we're going to\nrepresent it in a table form",
    "start": "962290",
    "end": "971170"
  },
  {
    "text": "where each configuration is\ngoing to be on a separate row.",
    "start": "971170",
    "end": "976790"
  },
  {
    "text": "Now, the dimensions\nof that table are going to be n to\nthe k by n to the k,",
    "start": "976790",
    "end": "983079"
  },
  {
    "text": "because the machine runs\nfor n to the k steps.",
    "start": "983080",
    "end": "990500"
  },
  {
    "text": "So there's going to-- if\nthere's an accepting branch, it's going to accept within\nthat number of steps.",
    "start": "990500",
    "end": "996610"
  },
  {
    "text": "And we'll have enough\nrows here to write down all of the configurations that\nthe machine goes through one",
    "start": "996610",
    "end": "1002400"
  },
  {
    "text": "after the next, row by\nrow, each one having a configuration in it.",
    "start": "1002400",
    "end": "1009020"
  },
  {
    "text": "And then at the bottom,\nthere'll be an accept. Minor detail, if the\nmachine accepts earlier,",
    "start": "1009020",
    "end": "1015990"
  },
  {
    "text": "we'll just say the\nmachine stays in the-- once it enters an\naccept, the machine",
    "start": "1015990",
    "end": "1021300"
  },
  {
    "text": "does not change\nfrom that point on. So the rule of the machine\nis nothing changes. And it just remains in the same\nconfiguration from that point",
    "start": "1021300",
    "end": "1028829"
  },
  {
    "text": "on.  So important to understand what\nwe're-- if you're not following",
    "start": "1028829",
    "end": "1039140"
  },
  {
    "start": "1032000",
    "end": "1437000"
  },
  {
    "text": "what I mean by a tableau,\nyou're doomed for this lecture. So it makes sense for\nyou to ask a question",
    "start": "1039140",
    "end": "1049430"
  },
  {
    "text": "to understand what\nwe mean by tableau. So just a few more\nelements here.",
    "start": "1049430",
    "end": "1056220"
  },
  {
    "text": "So this is going to be the\nstart configuration for M on w. This would be an\naccepting configuration here down at the very last row.",
    "start": "1056220",
    "end": "1064370"
  },
  {
    "text": "And you might imagine-- I think I've filled out\nsome hypothetical first step",
    "start": "1064370",
    "end": "1073270"
  },
  {
    "text": "of the machine after the start\nwhere maybe the machine was--",
    "start": "1073270",
    "end": "1078700"
  },
  {
    "text": "when it's in-- remember how\nwe encoded our configurations. So this is the machine\nis in state q0,",
    "start": "1078700",
    "end": "1085990"
  },
  {
    "text": "looking at the w, the first\nsymbol of the input, w1. And maybe when it's in q0\nlooking at that first symbol,",
    "start": "1085990",
    "end": "1094510"
  },
  {
    "text": "it moves to state q7,\nand goes right, and then changes that w1 to an A. And\nso now here is the head shown",
    "start": "1094510",
    "end": "1104960"
  },
  {
    "text": "moved one position to the\nright in the new state q7. I mean, of course,\nthat depends on what",
    "start": "1104960",
    "end": "1110570"
  },
  {
    "text": "the machine is designed to do,\nwhat the transition function is. But this possibly\nis what happens.",
    "start": "1110570",
    "end": "1119429"
  },
  {
    "text": "So does the-- OK, so good. Does the tableau trace\nall steps of all branches?",
    "start": "1119430",
    "end": "1124820"
  },
  {
    "text": "No. The tableau corresponds\nto one accepting branch.",
    "start": "1124820",
    "end": "1131660"
  },
  {
    "text": "Each different\naccepting branch is going to have its own tableau. So there might be several\ndifferent ways of filling out",
    "start": "1131660",
    "end": "1137419"
  },
  {
    "text": "that second row even. Of course, the first row is\ngoing to be-- in any tableau, it's got to be the same.",
    "start": "1137420",
    "end": "1144020"
  },
  {
    "text": "Once I know w-- here I've written down-- maybe I should\nunpack this for you.",
    "start": "1144020",
    "end": "1150169"
  },
  {
    "text": "It's in the start state here,\nthen here are the first-- here are n symbols of\nw, w's of length n.",
    "start": "1150170",
    "end": "1156680"
  },
  {
    "text": "So there's w1, w2, up to wn. And then I'm padding out\nthe rest with blanks.",
    "start": "1156680",
    "end": "1163179"
  },
  {
    "text": "So I should have said that, too. But OK. So I want to make my table\nn to the k by n to the k",
    "start": "1163180",
    "end": "1169390"
  },
  {
    "text": "because that's going to\nbe enough to represent the entire--",
    "start": "1169390",
    "end": "1175600"
  },
  {
    "text": "all of these configurations of\nM running for most n to the k",
    "start": "1175600",
    "end": "1181750"
  },
  {
    "text": "steps, because the machine,\neven if it sends its head",
    "start": "1181750",
    "end": "1187660"
  },
  {
    "text": "moving to the right as\nfast as it possibly can, it's never going to have--",
    "start": "1187660",
    "end": "1193540"
  },
  {
    "text": "it's never going to\ngo outside this box",
    "start": "1193540",
    "end": "1199100"
  },
  {
    "text": "if it only runs for\nn to the k steps. So this is going\nto be big enough to represent the entire\ncomputation of M.",
    "start": "1199100",
    "end": "1205385"
  },
  {
    "text": "So it means running\nfor n to the k time. And the input w is of length n.",
    "start": "1205385",
    "end": "1213010"
  },
  {
    "text": "All right. What is k? So k is the running\ntime of the machine. So we assumed from the previous\nslide that M runs in time n",
    "start": "1213010",
    "end": "1221720"
  },
  {
    "text": "to the k.  OK. ",
    "start": "1221720",
    "end": "1231700"
  },
  {
    "text": "So a good question here. How can the tableau\nbe a square table if we have a low number\nof computation histories,",
    "start": "1231700",
    "end": "1237550"
  },
  {
    "text": "but a lot of tape? Well, the low number computation\nhistory, that's a problem.",
    "start": "1237550",
    "end": "1244250"
  },
  {
    "text": "You're not saying that well. You know, each\ncomputation history",
    "start": "1244250",
    "end": "1249500"
  },
  {
    "text": "is in a different table. So this, I'm representing a\nsingle computation history here.",
    "start": "1249500",
    "end": "1254700"
  },
  {
    "text": "There may be-- there are going\nto be many configurations. So I can't have a small\nnumber of configurations",
    "start": "1254700",
    "end": "1261640"
  },
  {
    "text": "using a lot of tape,\nbecause I can only use one more cell, one\nadditional tape cell each time",
    "start": "1261640",
    "end": "1269019"
  },
  {
    "text": "I-- each additional\nstep of the machine. ",
    "start": "1269020",
    "end": "1274360"
  },
  {
    "text": "Yeah. So there's really no\ndifference between this. If you want to think of this\nas a computation history, that's fine.",
    "start": "1274360",
    "end": "1280120"
  },
  {
    "text": "This is really just the\nstandard terminology that's used when you're proving\nthis particular theorem.",
    "start": "1280120",
    "end": "1286957"
  },
  {
    "text": "Typically people talk\nabout it as a tableau, but it's really just\na computation history. ",
    "start": "1286957",
    "end": "1295450"
  },
  {
    "text": "The q state-- I mean, the question about\nwhat are these states' q, this is the way we\nrepresent configurations.",
    "start": "1295450",
    "end": "1302679"
  },
  {
    "text": "So this means the\nmachine is in a state. They're not all going\ndown the diagonal.",
    "start": "1302680",
    "end": "1308470"
  },
  {
    "text": "The states are going to zigzag\nhere through this picture here, depending upon how the\nhead of the machine moves.",
    "start": "1308470",
    "end": "1316290"
  },
  {
    "text": "So you have to go\nback and review how we represent the\nconfigurations of the machine. Remember the configuration\nis a snapshot of the machine",
    "start": "1316290",
    "end": "1323610"
  },
  {
    "text": "at a given point.  How do we know that M\nruns in polynomial time?",
    "start": "1323610",
    "end": "1329620"
  },
  {
    "text": "We're assuming M\nruns in polynomial. We started off with a\nlanguage that's in NP.",
    "start": "1329620",
    "end": "1336039"
  },
  {
    "text": "So it's a nondeterministic\npolynomial time machine, and we're picking one\nbranch that accepts",
    "start": "1336040",
    "end": "1343570"
  },
  {
    "text": "and writing down all the\nsequence of configurations the machine goes through. Let's move on. And maybe ask more questions\nas they come to you,",
    "start": "1343570",
    "end": "1351730"
  },
  {
    "text": "and I'll pick out some\nto answer if that's going to be helpful to others. ",
    "start": "1351730",
    "end": "1361490"
  },
  {
    "text": "So we're going to now\nconstruct this formula",
    "start": "1361490",
    "end": "1371100"
  },
  {
    "text": "to say that M accepts w. Again, that was what we-- that's our goal. And it says that a\ntableau for M on w exists.",
    "start": "1371100",
    "end": "1378855"
  },
  {
    "text": " And basically what\nthat means is we",
    "start": "1378855",
    "end": "1384740"
  },
  {
    "text": "want to say that it starts\nright, it ends right, and everything in\nbetween is right,",
    "start": "1384740",
    "end": "1391130"
  },
  {
    "text": "and then we're going to need\nsome other stuff to talk about how we're going to be\nencoding those symbols using",
    "start": "1391130",
    "end": "1396620"
  },
  {
    "text": "Boolean variables. So those are going\nto be the four parts. Here's the start. It starts right.",
    "start": "1396620",
    "end": "1402050"
  },
  {
    "text": "Here it ends right. Here it moves right. And here it talks about\nthe encoding of the symbols",
    "start": "1402050",
    "end": "1407390"
  },
  {
    "text": "into Boolean variables. So those are the four\nparts of this formula",
    "start": "1407390",
    "end": "1413899"
  },
  {
    "text": "that I'm going to describe.  I hope you got your\nquestion answered",
    "start": "1413900",
    "end": "1420960"
  },
  {
    "text": "as to why the total number\nof columns is n to the k, because it's just big\nenough to fit the entire--",
    "start": "1420960",
    "end": "1427110"
  },
  {
    "text": "all configurations\nthat the machine is running for at\nmost n to the k steps, which is\nwhat we're assuming.",
    "start": "1427110",
    "end": "1433420"
  },
  {
    "text": " OK. So now just getting\nback to that,",
    "start": "1433420",
    "end": "1440409"
  },
  {
    "start": "1437000",
    "end": "1464000"
  },
  {
    "text": "I'm going to describe these\ndifferent components now on separate slides. ",
    "start": "1440410",
    "end": "1448029"
  },
  {
    "text": "Let me start out with this\ncomponent phi cell, which is sort of the most\nfundamental one",
    "start": "1448030",
    "end": "1453077"
  },
  {
    "text": "because it talks\nabout how we're going to be encoding those symbols\nof the tableau into the Boolean",
    "start": "1453077",
    "end": "1460660"
  },
  {
    "text": "variables.  So again, here's kind of the\npicture to have in mind of this",
    "start": "1460660",
    "end": "1468130"
  },
  {
    "start": "1464000",
    "end": "1777000"
  },
  {
    "text": "tableau, this n to the\nk by n to the k table, representing some accepting\nbranch of the machine's",
    "start": "1468130",
    "end": "1478679"
  },
  {
    "text": "computation if there is one. And so now let me draw\none of the cells here.",
    "start": "1478680",
    "end": "1488950"
  },
  {
    "text": "I'm going to magnify it. So this is the i, j cell here.",
    "start": "1488950",
    "end": "1495799"
  },
  {
    "text": "And I'm going to-- there are going\nto be a collection",
    "start": "1495800",
    "end": "1502520"
  },
  {
    "text": "of Boolean variables associated\nwith each one of the cells. So each one of\nthe cells is going",
    "start": "1502520",
    "end": "1508700"
  },
  {
    "text": "to have a bunch of\nvariables all to itself. And those are going to be\nbasically indicator variables.",
    "start": "1508700",
    "end": "1516010"
  },
  {
    "text": "They're going to\nindicate which symbol that cell gets to have in it.",
    "start": "1516010",
    "end": "1524110"
  },
  {
    "text": "So again, picture here-- in this tableau,\nwe don't know how",
    "start": "1524110",
    "end": "1529992"
  },
  {
    "text": "it's going to get filled out. But however it gets filled\nout, each one of these cells gets some symbol.",
    "start": "1529992",
    "end": "1536125"
  },
  {
    "text": " And that symbol could\neither be a tape alphabet symbol, or a symbol\nrepresenting a state.",
    "start": "1536125",
    "end": "1544529"
  },
  {
    "text": "That's the way we do\nour configurations. So it could be a\ntape alphabet symbol here showing the magnification.",
    "start": "1544530",
    "end": "1553080"
  },
  {
    "text": "Maybe it's the tape\nalphabet symbol, which represents the blank symbol. Or maybe it's\nrepresents some state.",
    "start": "1553080",
    "end": "1560440"
  },
  {
    "text": " Now, how am I going to\nencode that with variables?",
    "start": "1560440",
    "end": "1567200"
  },
  {
    "text": "So this-- let me-- this is the collection\nof variables",
    "start": "1567200",
    "end": "1572280"
  },
  {
    "text": "that's going to apply to the\nentire formula phi sub M, w. ",
    "start": "1572280",
    "end": "1580270"
  },
  {
    "text": "Each cell is-- so\neach cell i, j is going to have a\nset of variables,",
    "start": "1580270",
    "end": "1587620"
  },
  {
    "text": "one for each\npossible symbol sigma",
    "start": "1587620",
    "end": "1593500"
  },
  {
    "text": "that's in the configuration\nalphabet, namely a tape",
    "start": "1593500",
    "end": "1599080"
  },
  {
    "text": "symbol or a state symbol. ",
    "start": "1599080",
    "end": "1607450"
  },
  {
    "text": "So I'm going to have-- well, maybe this will become\nclear as I'm writing it.",
    "start": "1607450",
    "end": "1612940"
  },
  {
    "text": "So if I turn the variable x\ni, j, sigma equal to true,",
    "start": "1612940",
    "end": "1621940"
  },
  {
    "text": "that's just a way of saying\nthat cell i, j contains a sigma. So if I have x i, j, a, that\nmeans the symbol contains an a.",
    "start": "1621940",
    "end": "1632460"
  },
  {
    "text": "So I'm going to illustrate\nthat now for you. So imagine you have\nlights representing all",
    "start": "1632460",
    "end": "1639390"
  },
  {
    "text": "the different x i, j's\nfor the different sigmas.",
    "start": "1639390",
    "end": "1645765"
  },
  {
    "text": "Didn't say that well. So we're in cell i, j. So these are all\nx i, j variables.",
    "start": "1645765",
    "end": "1652520"
  },
  {
    "text": "They're all x i,\nj sigma variables for the different sigmas\nthat can go in this cell.",
    "start": "1652520",
    "end": "1660900"
  },
  {
    "text": "So all different\npossible sigmas. So this is gamma union Q.",
    "start": "1660900",
    "end": "1667860"
  },
  {
    "text": "So now if I have an A\nhere in that cell, so then",
    "start": "1667860",
    "end": "1678270"
  },
  {
    "text": "the variable x i, j, a is true.",
    "start": "1678270",
    "end": "1683520"
  },
  {
    "text": "And just helping\nyou visualize that, that's going to correspond\nto turning the light on.",
    "start": "1683520",
    "end": "1688717"
  },
  {
    "text": "There's going to be\na light associated with each one of\nthese variables. And it's going to be turned\non when that variable is true.",
    "start": "1688717",
    "end": "1695660"
  },
  {
    "text": "Similarly, if I have\nthe blank symbol is the thing that\ngoes in that cell,",
    "start": "1695660",
    "end": "1702429"
  },
  {
    "text": "then that variable\ngets turned on. I hope you can see it. Maybe it's a little bit\nsmall on your screen.",
    "start": "1702430",
    "end": "1708820"
  },
  {
    "text": "The x i, j blank,\na variable is true. And similarly, if it's q7 here,\nthe x i, j q7 variable is true.",
    "start": "1708820",
    "end": "1719550"
  },
  {
    "text": "So that's the way we're\ngoing to be encoding the contents of these\ncells using these indicator",
    "start": "1719550",
    "end": "1726720"
  },
  {
    "text": "variables. And now we have to start making\nsome Boolean logic to make sure",
    "start": "1726720",
    "end": "1734490"
  },
  {
    "text": "that those variables reasonably\nrepresent the cell con--",
    "start": "1734490",
    "end": "1741140"
  },
  {
    "text": "the contents of these cells. So for example, what\nwould be the first thing that comes to your mind?",
    "start": "1741140",
    "end": "1747380"
  },
  {
    "text": "Well, we better not\nhave two lights going on in any one of the\ncells, because then we",
    "start": "1747380",
    "end": "1753260"
  },
  {
    "text": "have two symbols in that cell. And that's not allowed. Each cell is going-- we want\neach cell to have exactly one symbol.",
    "start": "1753260",
    "end": "1758900"
  },
  {
    "text": "And that corresponds\nto each cell having exactly one of its\nlights turned on, or equivalently,\neach cell should",
    "start": "1758900",
    "end": "1765799"
  },
  {
    "text": "have exactly one of\nthe variables be true. That's the very first\npart of the formula",
    "start": "1765800",
    "end": "1771740"
  },
  {
    "text": "is just going to say that. So let me show you\nwhat that looks like. ",
    "start": "1771740",
    "end": "1778840"
  },
  {
    "start": "1777000",
    "end": "2579000"
  },
  {
    "text": "So here we're talking\nabout this phi cell. It says that there's exactly\none light on per cell,",
    "start": "1778840",
    "end": "1784720"
  },
  {
    "text": "or in other words,\nexactly one of the x i, j sigmas is true for each i, j.",
    "start": "1784720",
    "end": "1789742"
  },
  {
    "start": "1789742",
    "end": "1796149"
  },
  {
    "text": "So this is how I'm going\nto actually express that using my Boolean formula. ",
    "start": "1796150",
    "end": "1804657"
  },
  {
    "text": "I'm sort of color coding\nthe different parts of the formula, which I'm\nwriting out to you here in English. So first, I want to say this.",
    "start": "1804657",
    "end": "1811080"
  },
  {
    "text": "So in every cell, there's at\nleast one light that's on, and there's at most\none light that's on.",
    "start": "1811080",
    "end": "1816600"
  },
  {
    "text": " So here's the green part. This is going to say at\nleast one light is on.",
    "start": "1816600",
    "end": "1823029"
  },
  {
    "text": "So I'm going to say that\nby taking all of the var-- all of the symbols that\ncan appear in that cell,",
    "start": "1823030",
    "end": "1831910"
  },
  {
    "text": "and taking an OR over all of\nthose different associated",
    "start": "1831910",
    "end": "1837040"
  },
  {
    "text": "variables. So it's either got\nthe first symbol on, or the second symbol is\nthere, or dot dot dot,",
    "start": "1837040",
    "end": "1844180"
  },
  {
    "text": "or the last symbol is there. One of those has\ngot to be there. I'm going to write this\nusing my big OR notation.",
    "start": "1844180",
    "end": "1852790"
  },
  {
    "text": "So for sigma appearing in\nthis set of possibilities,",
    "start": "1852790",
    "end": "1858570"
  },
  {
    "text": "one of those variables\nhas got to be on at least. That's what this\nbig OR tells you.",
    "start": "1858570",
    "end": "1865409"
  },
  {
    "text": "Now we want to make sure that\nthere's at most one that's on. So that there are not--",
    "start": "1865410",
    "end": "1871380"
  },
  {
    "text": "there's at least one on, but\nthere are not two that are on. So I'm going to have an\nadditional part of the formula",
    "start": "1871380",
    "end": "1879660"
  },
  {
    "text": "here, which says-- and I hope you can read this. It's a little small.",
    "start": "1879660",
    "end": "1886860"
  },
  {
    "text": "If I have two different\nsymbols, sigma and tau,",
    "start": "1886860",
    "end": "1893740"
  },
  {
    "text": "that are configuration-- possible configuration symbols,\nwhere sigma and tau are not",
    "start": "1893740",
    "end": "1899830"
  },
  {
    "text": "equal. So that's I'm\nreading it out to you if it's too small\nfor your screen.",
    "start": "1899830",
    "end": "1904990"
  },
  {
    "text": "Then I'm going to say\nit's not possible. So I have the negation of x\ni, j sigma, and x i, j tau.",
    "start": "1904990",
    "end": "1912490"
  },
  {
    "text": "So saying it another\nway, it's not the case that that cell contains both\nsigma and tau for any two",
    "start": "1912490",
    "end": "1921700"
  },
  {
    "text": "symbols sigma and tau as\nlong as they're different.",
    "start": "1921700",
    "end": "1926789"
  },
  {
    "text": "And we want to take these two\nformulas and add them together. And this tells me\nin the cell i, j,",
    "start": "1926790",
    "end": "1935150"
  },
  {
    "text": "there's exactly one of\nthe variables is true. Exactly one of the lights is on. And that's going\nto represent which",
    "start": "1935150",
    "end": "1942200"
  },
  {
    "text": "symbol goes into that cell. And then I want to take the\nAND over all possible cells",
    "start": "1942200",
    "end": "1948640"
  },
  {
    "text": "to make sure that I'm going\nto now apply that everywhere. And so now I do an AND for i\nand j ranging between 1 and n",
    "start": "1948640",
    "end": "1957919"
  },
  {
    "text": "to the k to apply this logic\nthroughout the picture. ",
    "start": "1957920",
    "end": "1965550"
  },
  {
    "text": "Yeah. Sigma unions--\nasking sigma union Q contains the input, output, yes.",
    "start": "1965550",
    "end": "1971690"
  },
  {
    "text": "This is not a sigma. This is a gamma. Gamma is the tape alphabet. This is any symbol, including\nan input symbol, from sigma",
    "start": "1971690",
    "end": "1980990"
  },
  {
    "text": "is going to be in gamma. So this is any symbol\ncan appear on the tape. ",
    "start": "1980990",
    "end": "1990350"
  },
  {
    "text": "And this expression here, that\nis the expression phi sub cell.",
    "start": "1990350",
    "end": "1997429"
  },
  {
    "text": "So here's a little\ncheck-in for you. But maybe before we\njump into the check-in, let's just make sure--",
    "start": "1997430",
    "end": "2003429"
  },
  {
    "text": "it may be better to\ntake some questions, and then we can ask\nthe check-in for you.",
    "start": "2003430",
    "end": "2011818"
  },
  {
    "text": "Do you understand? I mean, if you're\nnot getting this,",
    "start": "2011818",
    "end": "2017390"
  },
  {
    "text": "you should try to figure\nout how to get it, because this is really\njust the foundation.",
    "start": "2017390",
    "end": "2025990"
  },
  {
    "text": "It only gets more-- it is not a very\ncomplicated proof once you sort of get the\nidea of what's going on,",
    "start": "2025990",
    "end": "2031212"
  },
  {
    "text": "but if you're not\ngetting this part, you won't be able\nto get the rest. ",
    "start": "2031212",
    "end": "2041309"
  },
  {
    "text": "OK. I have no idea what the--\nwhat that means, but I'll read it out to you guys. This looks like a one-hot tensor\nencoding, same from common--",
    "start": "2041310",
    "end": "2049940"
  },
  {
    "text": "same form commonly used in ML. OK.",
    "start": "2049940",
    "end": "2054980"
  },
  {
    "text": "It's just an indicate-- I would just call them\nindicator variables. ",
    "start": "2054980",
    "end": "2063419"
  },
  {
    "text": "Why is it sigma union\nQ for the big AND here? ",
    "start": "2063420",
    "end": "2070179"
  },
  {
    "text": "Sigma union Q? You mean gamma union Q? [GASPING] This is wrong.",
    "start": "2070179",
    "end": "2076929"
  },
  {
    "text": "OK. Now I understand why\neverybody is upset. This should be a\ngamma, not a sigma.",
    "start": "2076929",
    "end": "2084000"
  },
  {
    "text": "There's a boo-boo. Sorry about that. I don't know if I can\nfix that without breaking the whole slide, so I'm\nnot going to even try.",
    "start": "2084000",
    "end": "2091460"
  },
  {
    "text": "This symbol here should\nbe gamma, not sigma. It's a typo.",
    "start": "2091460",
    "end": "2096547"
  },
  {
    "text": "Thanks for catching that. ",
    "start": "2096548",
    "end": "2104800"
  },
  {
    "text": "Yes. So the question is-- OK. So phi sub cell is just\ntrying to make sure",
    "start": "2104800",
    "end": "2117240"
  },
  {
    "text": "that the encoding represents\nsetting a bunch of symbols into the tableau.",
    "start": "2117240",
    "end": "2123300"
  },
  {
    "text": "Not-- so each cell is\ngoing to have one symbol exactly, not two, not zero.",
    "start": "2123300",
    "end": "2129810"
  },
  {
    "text": "So that's what phi sub-- if you've satisfied, if\nyou've set the variables to satisfy phi sub\ncell, then there's",
    "start": "2129810",
    "end": "2137099"
  },
  {
    "text": "going to be one\nsymbol on in each-- one symbol in each\nof those cells.",
    "start": "2137100",
    "end": "2143370"
  },
  {
    "text": "Now, another question,\nthis is not a CNF. No, this is not a CNF. That's the second half\nof-- that's going to be--",
    "start": "2143370",
    "end": "2150540"
  },
  {
    "text": "I hope we don't run out of time. But I have a way of converting\ngeneral SAT formulas to CNFs",
    "start": "2150540",
    "end": "2158670"
  },
  {
    "text": "and preserving satisfiability. So we're going to do\nthat reduction afterward. ",
    "start": "2158670",
    "end": "2168210"
  },
  {
    "text": "Here's a little check\nto see if you understand at some level what's going on.",
    "start": "2168210",
    "end": "2173580"
  },
  {
    "text": " How many variables does\nthis formula actually have?",
    "start": "2173580",
    "end": "2182020"
  },
  {
    "text": " Is order n? Order n square?",
    "start": "2182020",
    "end": "2187370"
  },
  {
    "text": "n to the k? Remember, k is the running\ntime of the machine.",
    "start": "2187370",
    "end": "2192579"
  },
  {
    "text": "Or n to the 2k? What do you think? So I mean, for how\nmany variables.",
    "start": "2192580",
    "end": "2200619"
  },
  {
    "text": "I mean that in all of\nphi sub M. How many",
    "start": "2200620",
    "end": "2206200"
  },
  {
    "text": "variables do we have all\ntogether in this formula if that's what the question is.",
    "start": "2206200",
    "end": "2211510"
  },
  {
    "start": "2211510",
    "end": "2216680"
  },
  {
    "text": "And here are the variables. So describing them\nhere-- x i, j, sigma.",
    "start": "2216680",
    "end": "2222529"
  },
  {
    "text": "OK. I'm going to close this. So pick something.",
    "start": "2222530",
    "end": "2228270"
  },
  {
    "text": "All right. Ending polling, 1, 2, 3. OK.",
    "start": "2228270",
    "end": "2234730"
  },
  {
    "text": "Yeah. ",
    "start": "2234730",
    "end": "2241430"
  },
  {
    "text": "OK. That's a good question. So first of all,\nthe correct answer is, in fact, D. It's\norder n to the 2k.",
    "start": "2241430",
    "end": "2249280"
  },
  {
    "text": "Now, I'm getting\nsome questions about, what about the size\nof gamma and Q?",
    "start": "2249280",
    "end": "2257359"
  },
  {
    "text": "Well, those are\ngoing to be fixed. They depend only on the machine,\nbut they don't depend on n.",
    "start": "2257360",
    "end": "2265819"
  },
  {
    "text": "So thinking about it\nfunctionally in terms of n, that's going to be a\nconstant multiplier.",
    "start": "2265820",
    "end": "2274320"
  },
  {
    "text": "And so it's going to be\nabsorbed within the big O.",
    "start": "2274320",
    "end": "2279560"
  },
  {
    "text": "So that's why we have-- these are constant\nrelative to n.",
    "start": "2279560",
    "end": "2285958"
  },
  {
    "text": "These are fixed. ",
    "start": "2285958",
    "end": "2291380"
  },
  {
    "text": "There are not n to the\nk possible symbols. There's a fixed\nnumber of symbols. It depends only on the machine.",
    "start": "2291380",
    "end": "2296675"
  },
  {
    "text": " So we're looking at\na particular machine,",
    "start": "2296675",
    "end": "2302410"
  },
  {
    "text": "and what happens when\nyou look at large inputs. ",
    "start": "2302410",
    "end": "2311250"
  },
  {
    "text": "So why is D and not C? Well, don't forget--\nhow big is this table? ",
    "start": "2311250",
    "end": "2318670"
  },
  {
    "text": "This is n to the\nk by n to the k. So there are n to the 2k cells,\nn to the k quantity squared,",
    "start": "2318670",
    "end": "2325300"
  },
  {
    "text": "or n to the 2k cells here. And so there's a\ncollection of variables",
    "start": "2325300",
    "end": "2331810"
  },
  {
    "text": "for each cell, some fixed number\nof variables for each cell. So that's why its\norder n to the 2k. ",
    "start": "2331810",
    "end": "2340360"
  },
  {
    "text": "Good. So let's move on. I think we're\nactually-- hold on.",
    "start": "2340360",
    "end": "2347200"
  },
  {
    "text": "So we have one more\nslide, and I think then we have a break after.",
    "start": "2347200",
    "end": "2352660"
  },
  {
    "text": "So now let's next talk about\nconstructing two more pieces",
    "start": "2352660",
    "end": "2360640"
  },
  {
    "text": "of the phi sub M, w formula. So we already got\nphi sub cell done.",
    "start": "2360640",
    "end": "2368560"
  },
  {
    "text": "Let's look at phi sub\nstart and phi sub accept. And phi start is\ngoing to tell us",
    "start": "2368560",
    "end": "2376940"
  },
  {
    "text": "that the start configuration\nhas exactly these symbols.",
    "start": "2376940",
    "end": "2382540"
  },
  {
    "text": "And phi accept tells us that the\nbottom configuration contains",
    "start": "2382540",
    "end": "2391390"
  },
  {
    "text": "an accepting state somewhere. So how are we going\nto write that down? Well, first of all, I'm going\nto write these down just cell",
    "start": "2391390",
    "end": "2399890"
  },
  {
    "text": "by cell. So first of all, phi start\nis going to say the cell 1, 1 contains a q0.",
    "start": "2399890",
    "end": "2407869"
  },
  {
    "text": "I mean, I know what the\nstart configuration should be, because thinking of me, or\nthink of us as the reduction,",
    "start": "2407870",
    "end": "2419250"
  },
  {
    "text": "the reduction is\ngiven M. It's given w. So it knows what\nthe start state is. It knows what the\nsymbols of w are.",
    "start": "2419250",
    "end": "2428340"
  },
  {
    "text": "So it knows what that\nstart configuration is. It's just q0 followed\nby the n symbols",
    "start": "2428340",
    "end": "2435630"
  },
  {
    "text": "of w followed by blanks. So it wants the very first\ncell in the left-hand corner",
    "start": "2435630",
    "end": "2444360"
  },
  {
    "text": "here to be a q0, the start state\nof the machine, which it knows. So it's going to say x sub 1,\n1, q0, that has to be turned on.",
    "start": "2444360",
    "end": "2455200"
  },
  {
    "text": "So it's going to be AND of\na bunch of variables here. And in order to satisfy phi sub\nstart, all of those variables",
    "start": "2455200",
    "end": "2463170"
  },
  {
    "text": "have to be set to true. So that means we have to\nhave a q0 in that cell.",
    "start": "2463170",
    "end": "2469860"
  },
  {
    "text": "So now we're going to\ndo the next cell here. The 1, 2, the next cell of\nthe start configuration.",
    "start": "2469860",
    "end": "2477829"
  },
  {
    "text": "So phi start is\ngoing to have x 1, 2. So that's the next place.",
    "start": "2477830",
    "end": "2483664"
  },
  {
    "text": "It contains w1. And so on. x 1, 3 contains w2,\nall the way up to wn,",
    "start": "2483665",
    "end": "2492790"
  },
  {
    "text": "and then there's going to be\na bunch of additional parts",
    "start": "2492790",
    "end": "2500010"
  },
  {
    "text": "which say that we have\nblanks in the rest, just spelling out exactly all\nof the symbols in that top row.",
    "start": "2500010",
    "end": "2508750"
  },
  {
    "text": "Because that's what\nthe phi start formula,",
    "start": "2508750",
    "end": "2517170"
  },
  {
    "text": "or sub formula of\nthe overall formula we're making looks like.",
    "start": "2517170",
    "end": "2523860"
  },
  {
    "text": "Now let's take a\nlook at phi accept. Phi accept, because\nI'm just looking",
    "start": "2523860",
    "end": "2529589"
  },
  {
    "text": "for q accept to appear\nsomewhere in that bottom row,",
    "start": "2529590",
    "end": "2536350"
  },
  {
    "text": "I'm going to do that\nin terms of an OR. So here is-- the variables\nnow, notice, have n to the k",
    "start": "2536350",
    "end": "2543930"
  },
  {
    "text": "because it's the last\nrow in the table. So row n to the k here.",
    "start": "2543930",
    "end": "2550460"
  },
  {
    "text": "And then I'm going to vary\nj from 1 to n to the k. So j, the column\nnumber, is going",
    "start": "2550460",
    "end": "2555740"
  },
  {
    "text": "to range from 1 to n to the k. And I'm looking\nfor that to accept. So x n to the k j, where\nj's vary, and q accept.",
    "start": "2555740",
    "end": "2564440"
  },
  {
    "text": "One of those has to be true. One of those has\nto be turned on. And so that's why it's a big OR.",
    "start": "2564440",
    "end": "2572560"
  },
  {
    "text": "And that's my phi accept piece.",
    "start": "2572560",
    "end": "2580033"
  },
  {
    "start": "2579000",
    "end": "2986000"
  },
  {
    "text": "And now we'll take\na little break. And feel free to ask\nme some more questions. Let me just start our clock.",
    "start": "2580033",
    "end": "2586135"
  },
  {
    "start": "2586135",
    "end": "2595370"
  },
  {
    "text": "Go grab yourself some coffee,\nor ask me some questions. I'm happy to answer them.",
    "start": "2595370",
    "end": "2602759"
  },
  {
    "text": "Why don't we check that q\naccept only appears once?",
    "start": "2602760",
    "end": "2607920"
  },
  {
    "text": "Is it possible for q\naccept to appear twice? That's a great question. ",
    "start": "2607920",
    "end": "2614589"
  },
  {
    "text": "So that would definitely\nbe a broken configuration if that happened,\nbecause a configuration",
    "start": "2614590",
    "end": "2619740"
  },
  {
    "text": "can have-- must have exactly\none state symbol appearing.",
    "start": "2619740",
    "end": "2624960"
  },
  {
    "text": "The way we're going to enforce\nthat is with the phi move",
    "start": "2624960",
    "end": "2630540"
  },
  {
    "text": "part of the formula,\nwhich we haven't seen yet. So phi move is\ngoing to guarantee that the machine is\nacting correctly,",
    "start": "2630540",
    "end": "2637500"
  },
  {
    "text": "so that all of the\nrows of the tableau are all legal configurations,\nand they all legally follow",
    "start": "2637500",
    "end": "2644460"
  },
  {
    "text": "from the previous. So really, in a sense,\nthe hard-- heavy lifting is coming in phi move, but\nit's really not that bad.",
    "start": "2644460",
    "end": "2651960"
  },
  {
    "start": "2651960",
    "end": "2658670"
  },
  {
    "text": "Somebody says, out of\ncuriosity, how close is this intuition proof\nto the actual proof? This is the actual proof.",
    "start": "2658670",
    "end": "2664920"
  },
  {
    "text": "There's no-- I'm\nnot hiding anything. I mean, we're being\na little loose here,",
    "start": "2664920",
    "end": "2671250"
  },
  {
    "text": "but you can turn this-- we're not cutting\nany corners here. This is exactly\nhow the proof goes.",
    "start": "2671250",
    "end": "2678569"
  },
  {
    "text": "And so not-- you're\ngetting the real deal here.",
    "start": "2678570",
    "end": "2684030"
  },
  {
    "text": "Somebody wanted to see the\nprevious slide, so here we are. Whoops.",
    "start": "2684030",
    "end": "2689340"
  },
  {
    "text": "Is there something\nyou want to ask? ",
    "start": "2689340",
    "end": "2694990"
  },
  {
    "text": "So phi cell says there's\nexactly one symbol per cell.",
    "start": "2694990",
    "end": "2702240"
  },
  {
    "text": "And the variables are set in\na way in terms of thinking of them as indicator variables. There's exactly one variable\nset to true in each cell.",
    "start": "2702240",
    "end": "2711160"
  },
  {
    "text": "So there's exactly\none symbol per cell. That's what phi cell tells you.",
    "start": "2711160",
    "end": "2716460"
  },
  {
    "text": "If you don't have that,\nthen you have a mess. So you've got to\nstart with that. And then with the--\nother things are",
    "start": "2716460",
    "end": "2722320"
  },
  {
    "text": "going to be\nadditional conditions, which when satisfied are\ngoing to enforce the rest of the properties that we want.",
    "start": "2722320",
    "end": "2729370"
  },
  {
    "text": "Why would the proof fail if\nwe replace n to the k with 2 to the n to the k? ",
    "start": "2729370",
    "end": "2736920"
  },
  {
    "text": "So OK. I presume where does-- we'll\njust use the polynomial running",
    "start": "2736920",
    "end": "2743300"
  },
  {
    "text": "time of the machine of M,\nthe nondeterministic machine.",
    "start": "2743300",
    "end": "2748430"
  },
  {
    "text": "I mean, if you had\nan enormous tab-- we have to show ultimately\nthat this reduction is",
    "start": "2748430",
    "end": "2753650"
  },
  {
    "text": "a polynomial time reduction. And that's going to depend\non how big the tableau is, because that's going to tell\nus how big the formula we're",
    "start": "2753650",
    "end": "2760585"
  },
  {
    "text": "producing is, phi sub M, w. If phi sub M, w is\nexponentially big, we don't have a prayer of being\nable to output that formula",
    "start": "2760585",
    "end": "2767750"
  },
  {
    "text": "in polynomial time.  If there were less\nthan n to the k steps,",
    "start": "2767750",
    "end": "2774650"
  },
  {
    "text": "do we repeat the\nlast configuration? Yeah, that's what I said. If the machine ends early,\nthe last configuration",
    "start": "2774650",
    "end": "2781160"
  },
  {
    "text": "just stays there. So we're going to modify the\ndefinition of the machine slightly so it just stays.",
    "start": "2781160",
    "end": "2789599"
  },
  {
    "text": "Yeah. ",
    "start": "2789600",
    "end": "2795090"
  },
  {
    "text": "OK. ",
    "start": "2795090",
    "end": "2806880"
  },
  {
    "text": "Yeah. Let me not take\nthe other-- there's a bunch of other\nquestions, some of them a little on the technical side.",
    "start": "2806880",
    "end": "2814160"
  },
  {
    "text": "Let me-- maybe I'll\ntry to address them as they come along if it\nturns out to work to do that.",
    "start": "2814160",
    "end": "2821339"
  },
  {
    "text": "So the break is over. Why don't we-- is it possible\nthat the encoding configuration",
    "start": "2821340",
    "end": "2830460"
  },
  {
    "text": "will not fit in n to the k? ",
    "start": "2830460",
    "end": "2835950"
  },
  {
    "text": "So the question is,\nis there a possibility that the encoding\nof the configuration won't fit in n to the k? If the machine runs\nfor n to the k steps,",
    "start": "2835950",
    "end": "2843960"
  },
  {
    "text": "the configuration has to\nfit within n to the k, because it can't use anything\nmore within n to the k steps.",
    "start": "2843960",
    "end": "2851109"
  },
  {
    "text": "So think about it. But no. The answer is the\nconfigurations--",
    "start": "2851110",
    "end": "2856690"
  },
  {
    "text": "if the machine runs\nin time n to the k, that whole tableau is\nbig enough to write down",
    "start": "2856690",
    "end": "2863500"
  },
  {
    "text": "the entire computation history. All right, so let's continue.",
    "start": "2863500",
    "end": "2868609"
  },
  {
    "text": "Phi sub move, this\nis, in a sense,",
    "start": "2868610",
    "end": "2873860"
  },
  {
    "text": "the part which is going\nto tell us that we started right, we ended right.",
    "start": "2873860",
    "end": "2882079"
  },
  {
    "text": "Phi cell says every cell\ncontains one symbol. And now we have to say that\nthe whole interior is correct.",
    "start": "2882080",
    "end": "2890750"
  },
  {
    "text": "How are we going to do that? So these are the parts\nwe've already done. And the way I'm\ngoing to describe",
    "start": "2890750",
    "end": "2896950"
  },
  {
    "text": "that is in terms of these\nkind of little windows I'm calling neighborhoods.",
    "start": "2896950",
    "end": "2902870"
  },
  {
    "text": "So imagine here we have a 2 by\n3 rectangle, which I'm going",
    "start": "2902870",
    "end": "2908630"
  },
  {
    "text": "to call a 2 by 3 neighborhood. And what I'm going to argue,\nbut I'm not going to prove here.",
    "start": "2908630",
    "end": "2915363"
  },
  {
    "text": "I'm just going to\nreally state it, but it's really just a sort\nof more or less obvious fact.",
    "start": "2915363",
    "end": "2921280"
  },
  {
    "text": "But the proof-- the book has\nthe formal proof, that if any--",
    "start": "2921280",
    "end": "2927070"
  },
  {
    "text": "every one of these\nhere is legitimate, is legal according to\nthe rules of the machine,",
    "start": "2927070",
    "end": "2932680"
  },
  {
    "text": "if every single--\nimagine you have these-- oops. Let me put myself back on\nhere so you can see me.",
    "start": "2932680",
    "end": "2939670"
  },
  {
    "text": " If you have here\nevery 2 by 3 window,",
    "start": "2939670",
    "end": "2952040"
  },
  {
    "text": "you can take this\nas a window, and you slide that over the entire\npicture of the tableau.",
    "start": "2952040",
    "end": "2959530"
  },
  {
    "text": "And everything here\nlooks OK as far as the running of the machine. So I'll say what that\nmeans in a second.",
    "start": "2959530",
    "end": "2966700"
  },
  {
    "text": "But if everything looks\nlocally fine everywhere, then the whole tableau\nhas to be a valid tableau",
    "start": "2966700",
    "end": "2974650"
  },
  {
    "text": "in terms of the rules of M.",
    "start": "2974650",
    "end": "2979789"
  },
  {
    "text": "Maybe it's easier\nif I describe what I mean by these being legal. ",
    "start": "2979790",
    "end": "2987000"
  },
  {
    "text": "So these neighborhoods,\nthese 2 by 3 neighborhoods",
    "start": "2987000",
    "end": "2992520"
  },
  {
    "text": "are legal if they're consistent\nwith M's transition function. So I'm going to\ndescribe rather than--",
    "start": "2992520",
    "end": "2998400"
  },
  {
    "text": "I mean, to do this\nformally, I would have to go through a\nprocess that we went--",
    "start": "2998400",
    "end": "3003470"
  },
  {
    "text": "like what we did when we\nwent through the construction for the Post\ncorrespondence problem,",
    "start": "3003470",
    "end": "3009470"
  },
  {
    "text": "and say if the machine moves\nleft, this thing happens. If it moves right, that's-- I think that it's\nnot really necessary.",
    "start": "3009470",
    "end": "3015690"
  },
  {
    "text": "You can kind of get\nthe idea very clearly by doing it at a little\nbit of a higher level. ",
    "start": "3015690",
    "end": "3023180"
  },
  {
    "start": "3022000",
    "end": "3145000"
  },
  {
    "text": "So let's look at what I mean\nby a legal neighborhood. So a legal neighborhood is\na setting of the values,",
    "start": "3023180",
    "end": "3029860"
  },
  {
    "text": "the six values of this\n2 by 3 neighborhood,",
    "start": "3029860",
    "end": "3034990"
  },
  {
    "text": "in a way which doesn't\nviolate M's rules. So for example, if M, when\nit's in state q7 reading of b,",
    "start": "3034990",
    "end": "3047520"
  },
  {
    "text": "goes into state\nq3 and moves left, then this would be a legal\nneighborhood, because it",
    "start": "3047520",
    "end": "3056680"
  },
  {
    "text": "shows the head moving\nleft, the b becoming a c.",
    "start": "3056680",
    "end": "3062130"
  },
  {
    "text": "So reading a b,\nI should also say that it converts that b to a c.",
    "start": "3062130",
    "end": "3067210"
  },
  {
    "text": "And we just head\nleft into state q3. So this would be a\nlegal neighborhood if that's the way--",
    "start": "3067210",
    "end": "3072540"
  },
  {
    "text": "so being legal depends upon\nthe transition function",
    "start": "3072540",
    "end": "3078120"
  },
  {
    "text": "of the machine. So given the\ntransition function, that's going to tell you which\nare the legal neighborhoods.",
    "start": "3078120",
    "end": "3084460"
  },
  {
    "text": "So another legal neighborhood--\nthis would always be a legal neighborhood--\nis that if nothing changes.",
    "start": "3084460",
    "end": "3089770"
  },
  {
    "text": "So that means the head of the\nmachine was somewhere else. And so whatever was on\nthe tape in this step",
    "start": "3089770",
    "end": "3098890"
  },
  {
    "text": "is going to be the same stuff\nin those places one step later. ",
    "start": "3098890",
    "end": "3107150"
  },
  {
    "text": "Here's another possible\nlegal neighborhood.",
    "start": "3107150",
    "end": "3112210"
  },
  {
    "text": "If the head suddenly\nappears on one of the cells",
    "start": "3112210",
    "end": "3120050"
  },
  {
    "text": "either in the left\nor the right, that would correspond to the machine\nmoving its head from somewhere",
    "start": "3120050",
    "end": "3128720"
  },
  {
    "text": "off the neighborhood into the\nneighborhood in that step.",
    "start": "3128720",
    "end": "3134460"
  },
  {
    "text": "So this could be a\nlegal neighborhood, provided the machine\nactually does move its head left\ninto a state q5",
    "start": "3134460",
    "end": "3141020"
  },
  {
    "text": "at some point under\nsome conditions.",
    "start": "3141020",
    "end": "3146090"
  },
  {
    "start": "3145000",
    "end": "3599000"
  },
  {
    "text": "And here is another kind of\na weird legal neighborhood. If you have a, b, c, and\nthen the a changes to a d,",
    "start": "3146090",
    "end": "3152810"
  },
  {
    "text": "that could also be\na legal neighborhood if the machine transition\nfunction allows",
    "start": "3152810",
    "end": "3159270"
  },
  {
    "text": "an a to get converted\nto a d when there is some machine-- when there\nis some state reading that a,",
    "start": "3159270",
    "end": "3164670"
  },
  {
    "text": "and that state also\nmoves its head left. So it doesn't move\ninto this picture.",
    "start": "3164670",
    "end": "3169785"
  },
  {
    "text": "So those are examples\nof legal neighborhoods. Let me show you some\nillegal neighborhoods. Just I'm doing this-- this is\nkind of a proof by example now.",
    "start": "3169785",
    "end": "3177030"
  },
  {
    "text": "This is perhaps the\nmost intuitive part. But I claim that this is easy\nto turn this into something",
    "start": "3177030",
    "end": "3183210"
  },
  {
    "text": "airtight and formal. So this would be\nclearly illegal.",
    "start": "3183210",
    "end": "3188330"
  },
  {
    "text": "If you have a piece of the\ntape in the previous step where",
    "start": "3188330",
    "end": "3195680"
  },
  {
    "text": "it's a, b, c, and then\nsuddenly the b changes to a d. The symbol on the tape\nchanges out of nowhere",
    "start": "3195680",
    "end": "3203030"
  },
  {
    "text": "without having a head\nnearby to a different-- to something else.",
    "start": "3203030",
    "end": "3208369"
  },
  {
    "text": "That could never happen. So that would be illegal. Another thing that\nwould be illegal is if a state\nappears from nowhere.",
    "start": "3208370",
    "end": "3215200"
  },
  {
    "text": "That could never happen. Or if it just disappears. That could never happen.",
    "start": "3215200",
    "end": "3220640"
  },
  {
    "text": "And here's another--\nhere's an interesting one. If a state becomes two states. ",
    "start": "3220640",
    "end": "3229059"
  },
  {
    "text": "Don't forget the machine\nis nondeterministic. So the machine in\nprinciple could move its head left on one\nbranch and move its head right",
    "start": "3229060",
    "end": "3236710"
  },
  {
    "text": "on a different branch,\nbut those would have to be in different tableaus. They can't be in\nthe same tableau,",
    "start": "3236710",
    "end": "3242350"
  },
  {
    "text": "because that doesn't\ncorrespond to any of the threads of the\ncomputation, those with multiple threads.",
    "start": "3242350",
    "end": "3248410"
  },
  {
    "text": "And I say this because if you\nthink about my claim, which",
    "start": "3248410",
    "end": "3254720"
  },
  {
    "text": "is going to put down over\nhere, that if every 2 by 3 neighborhood is legal, then\nthe tableau overall corresponds",
    "start": "3254720",
    "end": "3261980"
  },
  {
    "text": "to a computation history. This illustrates why it's\nnot enough to have a 2",
    "start": "3261980",
    "end": "3268890"
  },
  {
    "text": "by 2 neighborhood, where\nyou really need the 2 by 3. Because if this was a\n2 by 2 neighborhood,",
    "start": "3268890",
    "end": "3276210"
  },
  {
    "text": "if you just look at these four-- this leftmost 2 by 2, that could\nbe a legal neighborhood if it",
    "start": "3276210",
    "end": "3286859"
  },
  {
    "text": "was a 2 by 2, if the rules of\nthe machine allowed for that. And the right four box--",
    "start": "3286860",
    "end": "3294000"
  },
  {
    "text": "right four cells could also\nbe a legal neighborhood. So you could have\nsomething that looks",
    "start": "3294000",
    "end": "3299490"
  },
  {
    "text": "OK from the perspective\nof 2 by 2 neighborhoods, but globally, in terms\nof the overall tableau,",
    "start": "3299490",
    "end": "3305790"
  },
  {
    "text": "it's completely nonsensical\nbecause it has multiple hits. ",
    "start": "3305790",
    "end": "3311369"
  },
  {
    "text": "But if you have a 2\nby 3 neighborhood, it's big enough to prevent\nthis situation from occurring.",
    "start": "3311370",
    "end": "3317619"
  },
  {
    "text": "And then you can\ncheck the details. And I think it's very\nplausible that it guarantees",
    "start": "3317620",
    "end": "3325619"
  },
  {
    "text": "that the overall\ntableau is legitimate if all of the 2 by 3\nneighborhoods are legal.",
    "start": "3325620",
    "end": "3334650"
  },
  {
    "text": "And so that's what we're\ngoing to turn into a Boolean",
    "start": "3334650",
    "end": "3339869"
  },
  {
    "text": "expression. We're going to say for\neach cell that the set--",
    "start": "3339870",
    "end": "3346380"
  },
  {
    "text": "for each neighborhood-- so\nhere's a neighborhood at the i, j location. I'm calling this\nposition here sort",
    "start": "3346380",
    "end": "3353790"
  },
  {
    "text": "of the home location\nfor that neighborhood. ",
    "start": "3353790",
    "end": "3360066"
  },
  {
    "text": "For each neighborhood,\nit has to be set to one of the legal possibilities.",
    "start": "3360066",
    "end": "3367480"
  },
  {
    "text": "And there's, again, only\na fixed number of those because there's a fixed\nnumber of possible symbols",
    "start": "3367480",
    "end": "3373150"
  },
  {
    "text": "that can appear in those cells. So this is that fixed number\nto the sixth power at most.",
    "start": "3373150",
    "end": "3379569"
  },
  {
    "text": "And I'm going to say that\nthe cell in the upper left, which would be\nthis one, is in r.",
    "start": "3379570",
    "end": "3387880"
  },
  {
    "text": "And this one here is an s. And this one is a t. And this one is a v, if\nyou just trace down what",
    "start": "3387880",
    "end": "3393609"
  },
  {
    "text": "the indices are telling you. It says that that piece of the\ntape, that piece of the tableau",
    "start": "3393610",
    "end": "3400120"
  },
  {
    "text": "here is set according to one\nof the possible legal settings.",
    "start": "3400120",
    "end": "3406550"
  },
  {
    "text": "And we're just going to OR over\nall of those possible fixed number of legal settings.",
    "start": "3406550",
    "end": "3412579"
  },
  {
    "text": "And then I take an AND over\nall possible tape cells,",
    "start": "3412580",
    "end": "3417890"
  },
  {
    "text": "over all possible neighborhoods.  And so that's going\nto be my phi move.",
    "start": "3417890",
    "end": "3424350"
  },
  {
    "text": " And that's it. ",
    "start": "3424350",
    "end": "3430420"
  },
  {
    "text": "OK. Let's see. Can I explain again the\nthird example of illegal? So this one over here, I\npresume, I'm being asked about.",
    "start": "3430420",
    "end": "3439020"
  },
  {
    "text": "Well, if the machine is\nin a state q7 reading a c,",
    "start": "3439020",
    "end": "3445700"
  },
  {
    "text": "the head has to move\neither left or right. So at the next\nconfiguration, there's",
    "start": "3445700",
    "end": "3453570"
  },
  {
    "text": "got to be a state symbol\nappearing either in this cell or in this cell.",
    "start": "3453570",
    "end": "3459970"
  },
  {
    "text": "And here the tape-- the head has basically\njust vanished with nowhere",
    "start": "3459970",
    "end": "3466120"
  },
  {
    "text": "to-- it's gone. That could not happen\naccording to the rules",
    "start": "3466120",
    "end": "3472862"
  },
  {
    "text": "of the machine the way we\ntalk about Turing machines. So that's not possible. So this would be an\nillegal neighborhood.",
    "start": "3472862",
    "end": "3482530"
  },
  {
    "text": "You want to prevent\nany of the bad stuff from happening anywhere in here. So only good stuff can\nbe happening locally.",
    "start": "3482530",
    "end": "3489070"
  },
  {
    "text": "And that guarantees the\noverall picture is OK. ",
    "start": "3489070",
    "end": "3496720"
  },
  {
    "text": "Do we have to check\nthat the head doesn't leave the tableau from the\nleft most to right right? Yeah, there are some little\ndetails here like that.",
    "start": "3496720",
    "end": "3503675"
  },
  {
    "text": "So the question is, do I\nhave to make sure that the-- yeah, you probably need to mark.",
    "start": "3503675",
    "end": "3509470"
  },
  {
    "text": "I think the book probably\ndoes this correctly. You may have to mark\nthe left and right ends",
    "start": "3509470",
    "end": "3514480"
  },
  {
    "text": "to make sure that-- I mean, the right\nend is not a problem, because the machine can\nnever go off the right end.",
    "start": "3514480",
    "end": "3525690"
  },
  {
    "text": "And if you design the\nmachine so that it never moves its head off the left\nend either, which you can do,",
    "start": "3525690",
    "end": "3531198"
  },
  {
    "text": "then you wouldn't have to\nworry about that possibility. But otherwise, you would have to\nput some sort of delimiter here",
    "start": "3531198",
    "end": "3536940"
  },
  {
    "text": "to enforce the head not\nmoving off the left end. So there are some\ndetails like that, too.",
    "start": "3536940",
    "end": "3543030"
  },
  {
    "text": " There will be two\nheads in the same row. No, this can-- I don't know\nwhat you-- somebody says,",
    "start": "3543030",
    "end": "3550020"
  },
  {
    "text": "there will be two\nheads in the same row. Please elaborate, because\nthis is designed not to allow",
    "start": "3550020",
    "end": "3556710"
  },
  {
    "text": "two heads in the same row.  Could I go over the\nOR for legal again?",
    "start": "3556710",
    "end": "3563510"
  },
  {
    "text": "OK. The OR, the big OR here, what\nI have in mind is I take--",
    "start": "3563510",
    "end": "3570560"
  },
  {
    "text": "there's going to be-- first\nof all, I look at the machine and I look at the\ntransition function.",
    "start": "3570560",
    "end": "3575580"
  },
  {
    "text": "And based on that, I write down\nthe list of all the legal 2",
    "start": "3575580",
    "end": "3581900"
  },
  {
    "text": "by 3 neighborhoods. So all the settings which\ncorrespond to legal 2 by 3 neighborhoods.",
    "start": "3581900",
    "end": "3587090"
  },
  {
    "text": "There's going to be some\nfixed number of those. 100.",
    "start": "3587090",
    "end": "3592400"
  },
  {
    "text": "There's 100 possible legal\nneighborhoods of which I've written down here four.",
    "start": "3592400",
    "end": "3597820"
  },
  {
    "text": "But maybe there's\nsome number, say 100. So now there's going to\nbe an OR over those 100",
    "start": "3597820",
    "end": "3603730"
  },
  {
    "text": "different possibilities. It's either going to be\nthis legal neighborhood, or some other\nlegal neighborhood, or some other\nlegal neighborhood.",
    "start": "3603730",
    "end": "3610090"
  },
  {
    "text": "And for each one of those\nlegal neighborhoods, I'm going to say, well, the\nvariables are set according",
    "start": "3610090",
    "end": "3616940"
  },
  {
    "text": "to that legal neighborhood, or\nthe variables are set according to the next legal neighborhood,\nor the variables are",
    "start": "3616940",
    "end": "3623975"
  },
  {
    "text": "set according to the\nnext legal neighborhood, and do that 100 times. One of those has got to end up--",
    "start": "3623975",
    "end": "3630530"
  },
  {
    "text": "I mean it's an OR, so\none of them has to work. Otherwise, the formula fails. And it will be\nfalse, because you're",
    "start": "3630530",
    "end": "3636520"
  },
  {
    "text": "going to AND that over\nall of the neighborhoods in the picture. ",
    "start": "3636520",
    "end": "3646630"
  },
  {
    "text": "Is it possible to have\na head on the far left of the configuration and\none on the far right? ",
    "start": "3646630",
    "end": "3655240"
  },
  {
    "text": "You mean a head over here\nand a head over there? I mean, how'd the\nhead get there?",
    "start": "3655240",
    "end": "3660480"
  },
  {
    "text": "It can't happen. You know, the head has to\ncome from a head above it.",
    "start": "3660480",
    "end": "3668970"
  },
  {
    "text": "If you're going to be\nworrying about the details of the boundaries here,\nall that's fixable.",
    "start": "3668970",
    "end": "3676980"
  },
  {
    "text": "So let's not lose\nsight of the main idea. I mean, if you\nunderstand the main idea,",
    "start": "3676980",
    "end": "3683260"
  },
  {
    "text": "you can fix the little details. So I want to make sure you\nunderstand the main idea of what's happening.",
    "start": "3683260",
    "end": "3689700"
  },
  {
    "text": "So let's finish up this proof.  So in summary, we gave a\nreduction from 8 to SAT.",
    "start": "3689700",
    "end": "3698950"
  },
  {
    "text": "This is what we needed. It was in those four pieces.",
    "start": "3698950",
    "end": "3703960"
  },
  {
    "text": "And you really\njust need to argue that that formula we're\nbuilding is not too big.",
    "start": "3703960",
    "end": "3709740"
  },
  {
    "text": "And it's going to be basically\nthe size of the tableau if you look at what\nwe constructed.",
    "start": "3709740",
    "end": "3714960"
  },
  {
    "text": "The number of variables\nis roughly the size of the tableau. And the amount of logic that\nwe're putting into the formula",
    "start": "3714960",
    "end": "3720540"
  },
  {
    "text": "is also going to\nbe a fixed amount of logic independent\nof n for each",
    "start": "3720540",
    "end": "3725730"
  },
  {
    "text": "of the variables\nin that tableau. And somebody asked me about the\nsize-- how big the indices are.",
    "start": "3725730",
    "end": "3731849"
  },
  {
    "text": " The indices for the x i\nvalue, the i and j values,",
    "start": "3731850",
    "end": "3742060"
  },
  {
    "text": "technically, they're going\nto be numbers between 1 and n to the k. So you're going to have\nto write those down.",
    "start": "3742060",
    "end": "3747860"
  },
  {
    "text": "And so that's going to be a\nslight additional logarithmic cost to write those things down. It's not really that\ninteresting a point.",
    "start": "3747860",
    "end": "3754000"
  },
  {
    "text": " And so the overall\nf is going to be",
    "start": "3754000",
    "end": "3759490"
  },
  {
    "text": "computable in polynomial time\nbecause the output is not very big. And it's also not complicated\nto write the output down.",
    "start": "3759490",
    "end": "3766590"
  },
  {
    "text": "So that's the end of the proof. I can take a couple\nof questions.",
    "start": "3766590",
    "end": "3774579"
  },
  {
    "text": "Why can't we just check\nthat the whole-- this is a good question. Why can't we just check\nthat the whole row is legal? ",
    "start": "3774580",
    "end": "3785200"
  },
  {
    "text": "You can check that a row\nactually is a configuration. But to check that the row\nfollows from the previous row,",
    "start": "3785200",
    "end": "3795390"
  },
  {
    "text": "ultimately, the operation\nof a Turing machine is a local thing.",
    "start": "3795390",
    "end": "3800820"
  },
  {
    "text": "I mean, the way it moves from\none configuration to the next",
    "start": "3800820",
    "end": "3806730"
  },
  {
    "text": "depends locally on\nhow where the head is. And so really, that's\njust another way of--",
    "start": "3806730",
    "end": "3814200"
  },
  {
    "text": "the way I'm saying it\nis just really checking the whole configuration,\nbut just doing it locally.",
    "start": "3814200",
    "end": "3819482"
  },
  {
    "text": "I don't know if that's\nsatisfying to you. ",
    "start": "3819482",
    "end": "3824700"
  },
  {
    "text": "Why don't I move\non because I just want to make sure\nwe have enough time to get to the very last\npart, which is a little bit--",
    "start": "3824700",
    "end": "3830400"
  },
  {
    "text": "I'm afraid, a little technical. So we're going to kind of\nshift gears now and talk",
    "start": "3830400",
    "end": "3836310"
  },
  {
    "text": "about reducing SAT to 3SAT. And let's see how it goes.",
    "start": "3836310",
    "end": "3847010"
  },
  {
    "text": "I don't always have\nthe most success with presenting\nthis little piece, because it's slightly\na technical argument.",
    "start": "3847010",
    "end": "3853190"
  },
  {
    "text": "But if you don't\nget it, don't worry. Just you have to\naccept that it's true.",
    "start": "3853190",
    "end": "3858772"
  },
  {
    "text": "But I'd like to\nshow it to you just to make the whole presentation\ncomplete in that sense.",
    "start": "3858772",
    "end": "3867420"
  },
  {
    "text": "So I'm going to give a reduction\nthat maps general formulas",
    "start": "3867420",
    "end": "3873240"
  },
  {
    "text": "to 3CNF formulas. So that's how we\nmap SAT to 3SAT.",
    "start": "3873240",
    "end": "3880099"
  },
  {
    "text": "If you remember 3SAT\nis satisfiability but for three CNFs.",
    "start": "3880100",
    "end": "3885140"
  },
  {
    "text": "So a conjunctive normal form\nin the form of those clauses, which are ANDed together.",
    "start": "3885140",
    "end": "3890420"
  },
  {
    "text": "And each clause is an OR of a\nbunch of literals, which are variables or negated variables.",
    "start": "3890420",
    "end": "3898080"
  },
  {
    "text": "So I want to convert phi to phi\nprime, which is 3CNF formula,",
    "start": "3898080",
    "end": "3904220"
  },
  {
    "text": "but preserve the satisfiability. And phi prime is not going to\nbe logically equivalent to phi,",
    "start": "3904220",
    "end": "3910460"
  },
  {
    "text": "because I could do that, too. I can convert any formula to\na logically equivalent CNF",
    "start": "3910460",
    "end": "3917480"
  },
  {
    "text": "formula. Maybe not even a\n3CNF, but yeah, you won't be able to get a\n3CNF, but you can get a CNF.",
    "start": "3917480",
    "end": "3923870"
  },
  {
    "text": "But it might be\nexponentially larger. And that's not good enough. I have to do the reduction\nin polynomial time.",
    "start": "3923870",
    "end": "3930270"
  },
  {
    "text": "So I can't generate\na much larger formula that's exponentially larger. And so I'm going to do that by\nadding additional variables.",
    "start": "3930270",
    "end": "3940650"
  },
  {
    "text": "So it won't be\nlogically equivalent because the new formula\nis going to have additional variables in it.",
    "start": "3940650",
    "end": "3946510"
  },
  {
    "text": "I'm going to kind\nof do it by example. And we'll see how that goes.",
    "start": "3946510",
    "end": "3951840"
  },
  {
    "text": "So here's phi, which\nis not in 3CNF. It's not even in\nCNF, because it's",
    "start": "3951840",
    "end": "3959730"
  },
  {
    "text": "got ORs of ANDs\nappearing, which is not allowed to happen in a CNF.",
    "start": "3959730",
    "end": "3967600"
  },
  {
    "text": "So how are we going\nto convert that into a 3CNF formula\npreserving the satisfiability?",
    "start": "3967600",
    "end": "3974980"
  },
  {
    "text": "And just working it\nthrough with this example, I hope to at least give\nyou some idea of how you",
    "start": "3974980",
    "end": "3980140"
  },
  {
    "text": "do the conversion in general. So first of all, I'm going\nto represent this formula as a tree using its\nnatural tree structure.",
    "start": "3980140",
    "end": "3989100"
  },
  {
    "text": "So you understand. So a AND B becomes a\nAND b written as a tree.",
    "start": "3989100",
    "end": "3994910"
  },
  {
    "text": "And then I OR that with c. So I get the tree structure\nhere in sort of the natural way.",
    "start": "3994910",
    "end": "4001310"
  },
  {
    "text": "And I'm going to label all of\nthese intermediate nodes, which are associated now\nwith operations.",
    "start": "4001310",
    "end": "4009400"
  },
  {
    "text": "And I'm assuming also that the\nformula is fully parenthesized",
    "start": "4009400",
    "end": "4015760"
  },
  {
    "text": "so that each operation\nI'm only thinking about is applying just the two--\nit's a binary operation.",
    "start": "4015760",
    "end": "4022600"
  },
  {
    "text": "And let's ignore negations for\nthe minute, because negations, you can always push those\nthrough down to the leaves.",
    "start": "4022600",
    "end": "4028220"
  },
  {
    "text": "But it's just going to\nmake it too complicated. So negations turn out\nnot to be a problem.",
    "start": "4028220",
    "end": "4033415"
  },
  {
    "text": " So there's only\ngoing to be negations at the level of the\ninputs, not at the negation",
    "start": "4033415",
    "end": "4042609"
  },
  {
    "text": "operations in the middle. So we have this\ntree structure here. And now I'm going to use\nthese two logical facts.",
    "start": "4042610",
    "end": "4051579"
  },
  {
    "text": "And I don't know if-- you've probably all seen\nANDs and ORs, I hope.",
    "start": "4051580",
    "end": "4056740"
  },
  {
    "text": "Otherwise, it's going\nto be really tough. But there's also other\nlogical operators, such as the\nimplication operator,",
    "start": "4056740",
    "end": "4063849"
  },
  {
    "text": "where you have A implies B\nsort of as a logical operation.",
    "start": "4063850",
    "end": "4072500"
  },
  {
    "text": "And so this requires that if\nA is true, then B is true.",
    "start": "4072500",
    "end": "4078590"
  },
  {
    "text": " However, if A is false,\nB can be anything.",
    "start": "4078590",
    "end": "4087380"
  },
  {
    "text": "And similarly if B is\ntrue, A can be anything. ",
    "start": "4087380",
    "end": "4092569"
  },
  {
    "text": "The only thing that's\nprohibited is that if A is true and B is false. That's the only thing\nthat would be invalid.",
    "start": "4092570",
    "end": "4100568"
  },
  {
    "text": "And so if you think\nabout it, that's going to be equivalent to\nsaying that either A is false",
    "start": "4100569",
    "end": "4106180"
  },
  {
    "text": "or B is true. One of those has to be. And that's going to be\nlogically equivalent to saying",
    "start": "4106180",
    "end": "4112750"
  },
  {
    "text": "that A implies B. Another logical equivalence\nmay be more familiar to you.",
    "start": "4112750",
    "end": "4119410"
  },
  {
    "text": "It's just simply\nDe Morgan's law, which says that if you have\nthe not of A AND B, that's",
    "start": "4119410",
    "end": "4127210"
  },
  {
    "text": "equivalent to saying the\nnot of A or the not of B.",
    "start": "4127210",
    "end": "4134750"
  },
  {
    "text": "I'm going to make\nuse of both of these. Now, here, I want to--",
    "start": "4134750",
    "end": "4141660"
  },
  {
    "text": "I ran out of room on this slide. So I'm going to take myself\nout of the picture here for a minute. ",
    "start": "4141660",
    "end": "4148930"
  },
  {
    "text": "I had no place else to put this. So here we have-- if you're going to\nthink of the AND",
    "start": "4148930",
    "end": "4154979"
  },
  {
    "text": "in terms of its truth\ntable, so here's a and b in terms of a and b.",
    "start": "4154979",
    "end": "4162000"
  },
  {
    "text": "So 1 and 1 is 1, but all\nother settings of a and b",
    "start": "4162000",
    "end": "4167790"
  },
  {
    "text": "yield 0 for the AND. And I'm going to\nrepresent those-- ",
    "start": "4167790",
    "end": "4175299"
  },
  {
    "text": "if you imagine a and b\nis going to be called c. I'm going to represent\nthis information",
    "start": "4175300",
    "end": "4181240"
  },
  {
    "text": "with four small formulas, which\ntaken together, you AND them",
    "start": "4181240",
    "end": "4188620"
  },
  {
    "text": "together, are going to force\nc to have the correct behavior associated with a AND b.",
    "start": "4188620",
    "end": "4194195"
  },
  {
    "start": "4194196",
    "end": "4200610"
  },
  {
    "text": "So if a AND b are\nboth 1, then c is 1. If a is 0 and b is 1,\nthen it forces c to be 0.",
    "start": "4200610",
    "end": "4214260"
  },
  {
    "text": "And similarly, every other\nsetting besides a AND b being true, for C to\nbe false, which is what",
    "start": "4214260",
    "end": "4224520"
  },
  {
    "text": "you want when you have AND. So I'm going to write\nthis expression here down with z1 being in the place of\nc by just taking those four",
    "start": "4224520",
    "end": "4235460"
  },
  {
    "text": "expressions and\nANDing them together. So this is exactly those same\nfour expressions written out",
    "start": "4235460",
    "end": "4241190"
  },
  {
    "text": "linearly. Now I want to do the\nsame thing for z2, but now that's written\nin terms of an OR.",
    "start": "4241190",
    "end": "4248148"
  },
  {
    "text": "So there's a slightly\ndifferent truth table here up in this corner. ",
    "start": "4248148",
    "end": "4255030"
  },
  {
    "text": "So now if either one is\n1, we get a 1 result. And so now if a AND b are\ntrue, you get c is true.",
    "start": "4255030",
    "end": "4266380"
  },
  {
    "text": "However, if a is\ntrue and b is false, that still implies c is true.",
    "start": "4266380",
    "end": "4272210"
  },
  {
    "text": "So I'm going to write down\nthose rules for specifying",
    "start": "4272210",
    "end": "4280340"
  },
  {
    "text": "how z2 must be set. And each one of\nthese things is going",
    "start": "4280340",
    "end": "4287150"
  },
  {
    "text": "to get converted into clauses,\nthree clauses with three literals, using these\nrules over here.",
    "start": "4287150",
    "end": "4296790"
  },
  {
    "text": "So I'm going to do\nthat for each zi. And lastly, to make sure the\nwhole thing is satisfied,",
    "start": "4296790",
    "end": "4302429"
  },
  {
    "text": "which means there's\nan output of one here, I'm going to have one\nclause associated, which",
    "start": "4302430",
    "end": "4307849"
  },
  {
    "text": "says that z4, the output, is 1. Now, I can convert all of those\nwhen I have a AND b implies c.",
    "start": "4307850",
    "end": "4317950"
  },
  {
    "text": "That's logically equivalent\nto not a OR not b OR c.",
    "start": "4317950",
    "end": "4323147"
  },
  {
    "text": "And the way you can\nsee that is really by repeated application\nof these rules here.",
    "start": "4323147",
    "end": "4328780"
  },
  {
    "text": "We're running a\nlittle low on time. So maybe you'll just have\nto check this offline.",
    "start": "4328780",
    "end": "4334300"
  },
  {
    "text": "But quickly, a AND b implies\nc using the first equivalence",
    "start": "4334300",
    "end": "4341389"
  },
  {
    "text": "is the not of this\npart, OR C. And then I can use De Morgan to\nconvert that not of an AND",
    "start": "4341390",
    "end": "4350420"
  },
  {
    "text": "to an OR of the nots. And then I can remove\nthe parentheses",
    "start": "4350420",
    "end": "4356810"
  },
  {
    "text": "because OR is associative. And so I get a clause,\nwhich is what I need.",
    "start": "4356810",
    "end": "4363770"
  },
  {
    "text": "So each one of these guys is\nreally equivalent to a clause. And so I just get\na bunch of clauses.",
    "start": "4363770",
    "end": "4369038"
  },
  {
    "text": "And actually,\ntechnically, this needs to be three, a copy\nof three things here.",
    "start": "4369038",
    "end": "4375410"
  },
  {
    "text": "It should be z4 OR z4\nOR z4, which is a lot.",
    "start": "4375410",
    "end": "4382910"
  },
  {
    "text": "So check-in--\n[INAUDIBLE] I realize my check-in is broken, because\nI only realized that last point",
    "start": "4382910",
    "end": "4388910"
  },
  {
    "text": "just now as I was talking. So the actual value\nthat you get in terms",
    "start": "4388910",
    "end": "4396140"
  },
  {
    "text": "of-- oh, no, the number\nof clauses is correct. No, I take it back. This is fine.",
    "start": "4396140",
    "end": "4401820"
  },
  {
    "text": "So if you understood\nwhat I was saying, hopefully, you can see\nhow big the formula",
    "start": "4401820",
    "end": "4407960"
  },
  {
    "text": "phi prime is in terms of the\nnumber of operations in phi.",
    "start": "4407960",
    "end": "4413840"
  },
  {
    "text": "So let's see how\nmany people get that. I acknowledge this may be a\nlittle on the technical side.",
    "start": "4413840",
    "end": "4421820"
  },
  {
    "text": "OK. I'm going to close\nit, close it down. Please enter your value.",
    "start": "4421820",
    "end": "4427040"
  },
  {
    "text": " OK.",
    "start": "4427040",
    "end": "4432670"
  },
  {
    "text": "Yeah, the correct\nanswer is 4k plus 1, because each one\nof these operations",
    "start": "4432670",
    "end": "4442940"
  },
  {
    "text": "is going to end up being\na row in this picture.  Each operation is going to have\na variable associated to it.",
    "start": "4442940",
    "end": "4450040"
  },
  {
    "text": "It's going to become\na row in this picture. And so then each row is going\nto have four clauses, which",
    "start": "4450040",
    "end": "4460060"
  },
  {
    "text": "define what you need--\nset what you need in order",
    "start": "4460060",
    "end": "4466090"
  },
  {
    "text": "to force that variable to have\nthe right value corresponding to that operation.",
    "start": "4466090",
    "end": "4471850"
  },
  {
    "text": " And so then you need-- and\nyou need one extra clause here",
    "start": "4471850",
    "end": "4478219"
  },
  {
    "text": "for saying that this whole\nthing evaluates to true. ",
    "start": "4478220",
    "end": "4485630"
  },
  {
    "text": "So that's all I\nwanted to do today.",
    "start": "4485630",
    "end": "4490730"
  },
  {
    "text": "We proved those\ntwo main theorems. And now we know that there\nare NP-complete problems.",
    "start": "4490730",
    "end": "4495750"
  },
  {
    "text": "And all of the other problems\nthat we can get from-- by reductions from\nthese problems",
    "start": "4495750",
    "end": "4502550"
  },
  {
    "text": "are also going to be NP-complete\nas long as they're in NP. So that's it.",
    "start": "4502550",
    "end": "4509030"
  },
  {
    "text": "Feel free to put some\nquestions into the chat, or move on to whatever else\nyou're going to be doing next.",
    "start": "4509030",
    "end": "4517580"
  },
  {
    "text": "So a good question here\nis, why is phi prime not logically equivalent\nwith this construction? It can't be\nlogically equivalent.",
    "start": "4517580",
    "end": "4524780"
  },
  {
    "text": "Logically equivalent\nmeans that it gives you exactly the same function. If you set the variables\nin the same way,",
    "start": "4524780",
    "end": "4531020"
  },
  {
    "text": "you get the same\nresult coming out. Well, phi prime has more\nvariables than phi does.",
    "start": "4531020",
    "end": "4537700"
  },
  {
    "text": "So it wouldn't even\nmake sense to talk about logical equivalence\nbecause they're two functions on different\nnumbers of variables.",
    "start": "4537700",
    "end": "4544070"
  },
  {
    "text": "So in that sense, it\ndoesn't really make sense. What you could say is\nthat for every setting",
    "start": "4544070",
    "end": "4550390"
  },
  {
    "text": "of the overlapping\nvariables, so the variables that appear in both\nphi and phi prime--",
    "start": "4550390",
    "end": "4556070"
  },
  {
    "text": "so those are the original\nvariables of phi-- there's going to exist some\nsetting of new variables, which",
    "start": "4556070",
    "end": "4562900"
  },
  {
    "text": "is going to make the-- ",
    "start": "4562900",
    "end": "4571997"
  },
  {
    "text": "there's going to\nbe-- there will exist some setting of the\nnew variables which will make the two\nformulas agree,",
    "start": "4571997",
    "end": "4577659"
  },
  {
    "text": "but that's not the definition\nof logical equivalence. ",
    "start": "4577660",
    "end": "4583970"
  },
  {
    "text": "So why-- going back to the\nproof, the satisfiability proof and the legal\nneighborhoods, could I",
    "start": "4583970",
    "end": "4590840"
  },
  {
    "text": "go over why the number of legal\nneighborhoods is polynomial. The number of\nlegal neighborhoods",
    "start": "4590840",
    "end": "4596389"
  },
  {
    "text": "is not only polynomial. It's constant. It depends only on the machine.",
    "start": "4596390",
    "end": "4602610"
  },
  {
    "text": "It does not depend on M.\nBecause each cell can have",
    "start": "4602610",
    "end": "4609840"
  },
  {
    "text": "at most some fixed number of-- can have the number\nof tape symbols",
    "start": "4609840",
    "end": "4615210"
  },
  {
    "text": "plus the number\nof state symbols. That depends on\nthe machine only. So now we have six tape cells\nfor the six cells in a 2",
    "start": "4615210",
    "end": "4626340"
  },
  {
    "text": "by 3 neighborhood. So you're going to have that\nnumber to the sixth power. But still, it's a constant\nto the sixth power.",
    "start": "4626340",
    "end": "4631900"
  },
  {
    "text": "It's still a constant. It doesn't depend on M.\nSo it's not a question of even being polynomial.",
    "start": "4631900",
    "end": "4638340"
  },
  {
    "text": "It's a constant value. It's a constant\nmultiplier if you want to think about it in terms\nof the size of the formula",
    "start": "4638340",
    "end": "4646290"
  },
  {
    "text": "that's going to result. Don't forget we're trying\nto make a formula which is--",
    "start": "4646290",
    "end": "4656310"
  },
  {
    "text": "the reduction has\nto be polynomial. It's a polynomial\ntime reduction.",
    "start": "4656310",
    "end": "4661800"
  },
  {
    "text": "So that means that\nas n increases, the time to calculate\nthe reduction increases",
    "start": "4661800",
    "end": "4667770"
  },
  {
    "text": "as a polynomial. But we're fixing M.\nSo M does not change.",
    "start": "4667770",
    "end": "4678090"
  },
  {
    "text": "So therefore anything\nthat depends on M only is just going to be a constant\nimpact on the formula.",
    "start": "4678090",
    "end": "4683760"
  },
  {
    "text": "It's not going to be-- it doesn't depend on M. OK, everybody.",
    "start": "4683760",
    "end": "4690980"
  },
  {
    "text": "Bye bye. See you. ",
    "start": "4690980",
    "end": "4707000"
  }
]