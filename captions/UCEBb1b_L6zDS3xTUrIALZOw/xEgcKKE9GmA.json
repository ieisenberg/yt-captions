[
  {
    "start": "0",
    "end": "487000"
  },
  {
    "start": "0",
    "end": "20560"
  },
  {
    "text": "We started last\ntime on protection. ",
    "start": "20560",
    "end": "28254"
  },
  {
    "text": "You remember the model\nthat we're considering? We've got some client\ncommunicating over the Internet",
    "start": "28254",
    "end": "35140"
  },
  {
    "text": "with some server. And we said that there are\nthree main technical problems",
    "start": "35140",
    "end": "40710"
  },
  {
    "text": "that we're going\nto look to address. There is the problem\nof authentication,",
    "start": "40710",
    "end": "48970"
  },
  {
    "text": "the problem of authorization and\nthe problem of confidentiality.",
    "start": "48970",
    "end": "57930"
  },
  {
    "start": "57930",
    "end": "65689"
  },
  {
    "text": "Today what we're\ngoing to do is we're going to talk mostly about\nthis issue of authentication, but I want to just return\nto some of the details",
    "start": "65689",
    "end": "72684"
  },
  {
    "text": "that we were talking\nabout at the end of class last time so that you guys\nall get the important bits out",
    "start": "72684",
    "end": "78960"
  },
  {
    "text": "of our discussion\nof the RSA protocol. Remember, last time\nwe started talking",
    "start": "78960",
    "end": "84630"
  },
  {
    "text": "about these are the main\nrequirements of a protection",
    "start": "84630",
    "end": "90369"
  },
  {
    "text": "system. And we drew a diagram that\nsaid that at the top level",
    "start": "90370",
    "end": "95950"
  },
  {
    "text": "we want to have an\napplication that is protected. Underneath that\nwe're going to have a set of security primitives. And then, underlying\nall of this,",
    "start": "95950",
    "end": "102450"
  },
  {
    "text": "we're going to\nhave cryptography. Cryptography is going to be\nsort of the essential technique that we use to\nenable protection.",
    "start": "102450",
    "end": "110540"
  },
  {
    "text": "We talked briefly about\nseveral different types",
    "start": "110540",
    "end": "116700"
  },
  {
    "text": "of cryptography. Remember, we had\nour model where we have A is sending through\nsome box which takes the data",
    "start": "116700",
    "end": "125259"
  },
  {
    "text": "and transforms it using some\ncryptographic transform. And then that cryptographically\ntransformed data gets",
    "start": "125260",
    "end": "132390"
  },
  {
    "text": "transmitted and then is reverse\ntransformed or untransformed",
    "start": "132390",
    "end": "138350"
  },
  {
    "text": "at the other side and it\ncomes out to the receiver.",
    "start": "138350",
    "end": "143550"
  },
  {
    "text": "What cryptography\ndoes is we said that we want this open model\nwhere there is some key k1 here",
    "start": "143550",
    "end": "150980"
  },
  {
    "text": "and some key k2\nhere that are used",
    "start": "150980",
    "end": "156159"
  },
  {
    "text": "to decide how this\ntransform operator works and this untransform operator\nworks on the other side.",
    "start": "156160",
    "end": "161840"
  },
  {
    "text": "We talked about a shared key\ncase where k1 is equal to k2.",
    "start": "161840",
    "end": "169890"
  },
  {
    "text": "And the appendix A of\nthe chapter in the notes goes over a shared key\nprotocol called DES",
    "start": "169890",
    "end": "176189"
  },
  {
    "text": "that is fairly commonly used. The basic idea behind\nshared key cryptography",
    "start": "176190",
    "end": "181590"
  },
  {
    "text": "is typically that both\nsides have this key and we're going to transform the\ndata by combining the message",
    "start": "181590",
    "end": "191030"
  },
  {
    "text": "stream that is coming\nfrom A together with the key in some\nway, say, for example, by xoring the data in\nmany different ways",
    "start": "191030",
    "end": "198880"
  },
  {
    "text": "or permuting the data\naround and then xoring it with the key in some\ncombination of ways.",
    "start": "198880",
    "end": "205340"
  },
  {
    "text": "That's sort of what\nthe DES protocol does. It's just multiple\nrounds, basically, of permuting and xoring the\ndata over and over again.",
    "start": "205340",
    "end": "211910"
  },
  {
    "text": "The idea is that if an\nattacker doesn't know the key, it's very hard for them\nto reverse this process",
    "start": "211910",
    "end": "217850"
  },
  {
    "text": "without having the\nkey, but if you know the key it's relatively\neasy to reverse the process. We also talked a little bit\nabout public key cryptography",
    "start": "217850",
    "end": "228200"
  },
  {
    "text": "where k1 is not equal to k2. ",
    "start": "228200",
    "end": "235230"
  },
  {
    "text": "In this case, we started\ntalking about this protocol RSA which is an example\nof a public key protocol.",
    "start": "235230",
    "end": "241635"
  },
  {
    "text": " If you remember,\nRSA has some set",
    "start": "241635",
    "end": "249140"
  },
  {
    "text": "of rules for actually doing\nthe transformation of data. The basic idea is\nthat we're going",
    "start": "249140",
    "end": "254930"
  },
  {
    "text": "to get a private\nkey and a public key here, which is going to\nconsist of this prime number",
    "start": "254930",
    "end": "261319"
  },
  {
    "text": "plus the product of\nthese two prime numbers and this private key k\nwhich is going to consist of the other prime number\nand the product of these two",
    "start": "261320",
    "end": "267310"
  },
  {
    "text": "things. Now we have this way in which\nwe can transform the data. What this transform box does\nis simply raise the message",
    "start": "267310",
    "end": "273700"
  },
  {
    "text": "to the power of e modulo n and\nwe have the reverse transform. This is just a specific\nmathematical operation.",
    "start": "273700",
    "end": "281509"
  },
  {
    "text": "The reason that this\nmathematical operation works is that the intuition is that\nit is relatively easy to take",
    "start": "281510",
    "end": "288300"
  },
  {
    "text": "something to an exponent. I can take a number\nand exponentiate it without doing very much work. But in order for an attacker\nto compromise this system, that",
    "start": "288300",
    "end": "296669"
  },
  {
    "text": "is in order to\ndiscover, for example, what the private key is, in\nthis case, what this value d is,",
    "start": "296670",
    "end": "307300"
  },
  {
    "text": "given just the public key\nwhich consists of e and n, the attacker is going to be able\nto factor this number n, which",
    "start": "307300",
    "end": "318510"
  },
  {
    "text": "turns out to be very\ndifficult to do. Essentially, breaking\nthis cryptographic system comes down to be able to\nfactor a very large number.",
    "start": "318510",
    "end": "325590"
  },
  {
    "text": "And that turns out to be,\ncomputationally, very, very difficult to do. So that's sort of the\nintuition behind the protection",
    "start": "325590",
    "end": "330673"
  },
  {
    "text": "of this scheme. The nice thing\nabout RSA is it has, in most public key\ncryptographic protocols",
    "start": "330673",
    "end": "337350"
  },
  {
    "text": "is that they have this property\nthat the reverse is also true. So I can transform\nusing exponentiation",
    "start": "337350",
    "end": "345620"
  },
  {
    "text": "with the public key\nor the private key and I can reverse transform\nusing the opposite.",
    "start": "345620",
    "end": "352452"
  },
  {
    "text": "If I transform with\nthe public key, I can reverse transform with\nthe private key and vise versa. So we are going to exploit\nthis property a lot",
    "start": "352452",
    "end": "358479"
  },
  {
    "text": "when we're talking about\nthis kind of cryptography.",
    "start": "358480",
    "end": "363590"
  },
  {
    "text": "Just to sort of point\nout that this is hard, this is an estimate from\nthe RSA Security Company about how many compute\nyears on modern computers",
    "start": "363590",
    "end": "372320"
  },
  {
    "text": "it would take to factor an\nRSA key of a given link. So the bottom is the key\nlink in bytes on the x-axis",
    "start": "372320",
    "end": "379240"
  },
  {
    "text": "and then the y-axis is the\nmachine years to factor. If the machine years\nto factor was 1,000,",
    "start": "379240",
    "end": "386740"
  },
  {
    "text": "that means it would take 1,000\nmachines working together one year to do this or one\nmachine 1,000 years to do it.",
    "start": "386740",
    "end": "392840"
  },
  {
    "text": "So you see that the y-axis\nhere is going up exponentially. So to factor a 500 byte\nkey is not that hard.",
    "start": "392840",
    "end": "405389"
  },
  {
    "text": "It takes maybe a few months\nof compute time to do it. To factor a 2,000\nbyte key takes this a ridiculously long time, ten\nto the 16th years it is going",
    "start": "405390",
    "end": "413632"
  },
  {
    "text": "to take to factor this thing. So there is just no way that,\nat least modern computers, are ever going to be\nable to actually perform",
    "start": "413632",
    "end": "420150"
  },
  {
    "text": "this factoring using currently\nknown algorithms for factoring. It is, of course,\npossible that somebody",
    "start": "420150",
    "end": "425449"
  },
  {
    "text": "will develop a very\nfast factoring algorithm or that there will be some\nfundamental breakthrough like quantum computing that\nwill make it possible to factor",
    "start": "425450",
    "end": "433310"
  },
  {
    "text": "very large numbers. But, at this point, this is\nsort of the estimate of how long it would take to do this.",
    "start": "433310",
    "end": "438590"
  },
  {
    "text": "So, by using long keys, you\ncan be sort of guaranteed that somebody won't be able to\nactually factor this number.",
    "start": "438590",
    "end": "445630"
  },
  {
    "text": "So by using a\nfactoring-based attack on RSA",
    "start": "445630",
    "end": "450950"
  },
  {
    "text": "that sort of won't be able\nto break it in this way.",
    "start": "450950",
    "end": "456820"
  },
  {
    "text": "The largest RSA number that\nhas been factored to date is some 500 odd byes,\nsomething like 520 bytes,",
    "start": "456820",
    "end": "463530"
  },
  {
    "text": "so RSA has challenges\nfor the largest numbers that can be factored. So we're sort of just\nbarely on this curve",
    "start": "463530",
    "end": "471837"
  },
  {
    "text": "is where the largest\nnumbers that have been factored to date. And these are typically\nsome collection of machines on the Internet.",
    "start": "471837",
    "end": "477166"
  },
  {
    "text": "Somebody gets 1,000\nmachines on the Internet and they chew on this problem. I think, in this case, it took\n1,000 machines three months",
    "start": "477166",
    "end": "482880"
  },
  {
    "text": "to find a factor of\nthis 500 byte key.",
    "start": "482880",
    "end": "490660"
  },
  {
    "start": "487000",
    "end": "840000"
  },
  {
    "text": "This is the basic idea now. What we're going to do is use\nthese cryptography algorithms,",
    "start": "490660",
    "end": "501290"
  },
  {
    "text": "this math to build up\na set of primitives that we can use to actually\naccomplish our security",
    "start": "501290",
    "end": "506600"
  },
  {
    "text": "goals that we want. And I put these on the\nboard briefly last time. But I didn't talk\nat all about what",
    "start": "506600",
    "end": "511868"
  },
  {
    "text": "the actual functionality is. And we're going to spend a\nlot of time talking about two of these primitives\ntoday, and then we'll",
    "start": "511868",
    "end": "518178"
  },
  {
    "text": "talk about a few more\nof them next time. ",
    "start": "518179",
    "end": "528937"
  },
  {
    "text": "We have two sets of\nprimitives in particular that we are interested in. ",
    "start": "528937",
    "end": "535550"
  },
  {
    "text": "One set is called\nsign and verify. And the other set is\ncalled encrypt or decrypt.",
    "start": "535550",
    "end": "543600"
  },
  {
    "text": " And we're going to use sign\nand verify basically as a way",
    "start": "543600",
    "end": "550600"
  },
  {
    "text": "to achieve authentications. Remember, authentication\nis the process of verifying that a message\nactually came from who",
    "start": "550600",
    "end": "556070"
  },
  {
    "text": "it was supposed to come from. And we're going to use\nencrypt and decrypt in order",
    "start": "556070",
    "end": "561832"
  },
  {
    "text": "to provide confidentiality to\nguaranty that somebody who we don't want to be able to read a\nmessage, somebody who shouldn't",
    "start": "561832",
    "end": "567540"
  },
  {
    "text": "be able to read a message can,\nin fact, not read that message. Let me just illustrate\na simple example.",
    "start": "567540",
    "end": "577490"
  },
  {
    "text": "Suppose we're using\na public key system,",
    "start": "577490",
    "end": "583089"
  },
  {
    "text": "we can say suppose\nwe use something like RSA to encode a\nmessage m with some key,",
    "start": "583090",
    "end": "593270"
  },
  {
    "text": "say we're sending a\nmessage from A to B, we use it to encode some\nkey, say, kA private.",
    "start": "593270",
    "end": "603860"
  },
  {
    "text": "What this notation\nmeans is that whoever has A's private key encodes\nthat message or transforms",
    "start": "603860",
    "end": "611280"
  },
  {
    "text": "that message using a\ncryptographic protocol using, say, for example, kA private.",
    "start": "611280",
    "end": "617220"
  },
  {
    "text": "What this says is\nAlice, perhaps as A, runs her RSA algorithm\non the message",
    "start": "617220",
    "end": "623120"
  },
  {
    "text": "and generates some\nencoded thing.  This is an encryption.",
    "start": "623120",
    "end": "633704"
  },
  {
    "text": " We're going to use this\nencoding with the private key",
    "start": "633705",
    "end": "639000"
  },
  {
    "text": "to sign a message. When Alice encodes this\nwith her private key",
    "start": "639000",
    "end": "645580"
  },
  {
    "text": "what that means is that somebody\nwho has Alice's public key can decode this,\nbecause we said if you",
    "start": "645580",
    "end": "651710"
  },
  {
    "text": "encode with the private key\nsomebody with the public key can decode. ",
    "start": "651710",
    "end": "659710"
  },
  {
    "text": "For example, if she\nsends this to Bob, Bob is going to be\nable to decode this. At first that seems like, well,\nwhat good does that do us?",
    "start": "659710",
    "end": "666190"
  },
  {
    "text": "Bob can read this message. But the thing is\nif Bob can decode this, what he knows, with\nvery high certainty is",
    "start": "666190",
    "end": "673610"
  },
  {
    "text": "that the person who\nencoded this message had access to A's private key. If he is willing to trust that,\nin fact, the only person who",
    "start": "673610",
    "end": "680320"
  },
  {
    "text": "has access to A's\nprivate key is A herself, then he can be\nreasonably confident",
    "start": "680320",
    "end": "685450"
  },
  {
    "text": "that this message came from A. You guys all sort of\nsee how that works.",
    "start": "685450",
    "end": "691870"
  },
  {
    "text": "What we say is that\nAlice signs this message. And, by signing\nthis message, she",
    "start": "691870",
    "end": "698550"
  },
  {
    "text": "is able to sort of give\nBob some confidence that this message, in\nfact, came from her.",
    "start": "698550",
    "end": "703560"
  },
  {
    "text": " We can also do\nthe opposite thing",
    "start": "703560",
    "end": "709390"
  },
  {
    "text": "where, say, for example, Alice\nis sending a message to Bob. She can take m and\nsign it with kB public.",
    "start": "709390",
    "end": "718225"
  },
  {
    "text": " Sorry, she can encrypt\nit with kB public.",
    "start": "718225",
    "end": "724950"
  },
  {
    "text": "She is going to use\nthe RSA algorithm. She is going to\nencrypt this message. And, when she\nencrypts this message,",
    "start": "724950",
    "end": "730421"
  },
  {
    "text": "she is going to basically\nuse the RSA algorithm using kB public. And what is going\nto happen is now",
    "start": "730421",
    "end": "735700"
  },
  {
    "text": "she is going to be reasonably\nassured that this message is going to be able to\nonly be read by Bob",
    "start": "735700",
    "end": "740850"
  },
  {
    "text": "because only Bob presumably\nhas his own private key. ",
    "start": "740850",
    "end": "747300"
  },
  {
    "text": "What I've shown here makes\nthis look very simple. I sort of said it as\nthough we're simply taking this message and running\nthe basic RSA algorithm,",
    "start": "747300",
    "end": "755050"
  },
  {
    "text": "as I showed it, on the\nmessage in order to do sign and in order to encrypt. It turns out that actually\ngetting sign and encrypt",
    "start": "755050",
    "end": "762620"
  },
  {
    "text": "to work property requires\nsome fairly sophisticated sort",
    "start": "762620",
    "end": "768380"
  },
  {
    "text": "of reasoning about\nthe RSA algorithm. For example, when you're\nencrypting something,",
    "start": "768380",
    "end": "773730"
  },
  {
    "text": "if the message is very\nsmall, it turns out that if you encrypt a small\nmessage simply using the RSA",
    "start": "773730",
    "end": "779410"
  },
  {
    "text": "algorithm as I presented it that\nit's relatively easy to break the RSA algorithm. The RSA algorithm becomes\nvulnerable with very small",
    "start": "779410",
    "end": "785640"
  },
  {
    "text": "messages. That means the encryption\nprocess actually needs to pad out the\nmessage to some longer link.",
    "start": "785640",
    "end": "791080"
  },
  {
    "text": "It needs to put unused bytes\nat the end of every message in order for it to be secure. These sign and encrypt\nalgorithms themselves sort of",
    "start": "791080",
    "end": "799500"
  },
  {
    "text": "have to do some additional\nwork on top of the basic RSA algorithm in order to be secure. And that additional\nwork is sort of",
    "start": "799500",
    "end": "806150"
  },
  {
    "text": "beyond the scope of this class. It requires a certain degree\nof mathematical sophistication that we are not going\nto rely on here.",
    "start": "806150",
    "end": "811899"
  },
  {
    "text": "You can go take an extra\nclass about cryptography and learn about how these sign\nand encrypt algorithms actually",
    "start": "811899",
    "end": "817810"
  },
  {
    "text": "work, but the basic idea is\nthat you can sort of grasp it by just seeing RSA.",
    "start": "817810",
    "end": "824870"
  },
  {
    "text": "These things are hard to build. ",
    "start": "824870",
    "end": "835540"
  },
  {
    "text": "Now that we have sort\nof quickly reviewed the basics of\nprotection and we've",
    "start": "835540",
    "end": "840960"
  },
  {
    "start": "840000",
    "end": "1045000"
  },
  {
    "text": "seen the sign and verify and\nencrypt and decrypt primitives,",
    "start": "840960",
    "end": "849706"
  },
  {
    "text": "now what I want to do\nis to talk a little bit about how we can actually\nstart building up, solving",
    "start": "849706",
    "end": "855470"
  },
  {
    "text": "this problem of\nauthenticating a user. When we authenticate a user\nwe have two objectives.",
    "start": "855470",
    "end": "863810"
  },
  {
    "text": "One thing we're\ntrying to achieve",
    "start": "863810",
    "end": "873160"
  },
  {
    "text": "is to determine who\nis making a request. ",
    "start": "873160",
    "end": "884390"
  },
  {
    "text": "In practice, it's\ngoing to turn out, in fact, that we\nmay not officially be able to say exactly the\nspecific person who is being",
    "start": "884390",
    "end": "891790"
  },
  {
    "text": "able to make the request. We may only be able to say that\nthe same principle or person",
    "start": "891790",
    "end": "902660"
  },
  {
    "text": "or computer as before\nis making the request, or the same principle who had\nsome special privileged piece",
    "start": "902660",
    "end": "910820"
  },
  {
    "text": "of information that\nthe person before had is making this request. We may not be able\nto actually associate",
    "start": "910820",
    "end": "917460"
  },
  {
    "text": "this with a physical\nperson, but at least we're going to be able to know that\nwe've seen somebody who had",
    "start": "917460",
    "end": "923220"
  },
  {
    "text": "this same information before. We're trying to\nmake sure that this is sort of consistent\nwith a series of requests",
    "start": "923220",
    "end": "928300"
  },
  {
    "text": "that we've seen in the past. A simple example is I lot onto\nAmazon, I create a password.",
    "start": "928300",
    "end": "935680"
  },
  {
    "text": "Now, anybody who I\ngive that password to can log onto Amazon. And all the system\ncan say is that it",
    "start": "935680",
    "end": "941250"
  },
  {
    "text": "knows that whoever it is\nwho is accessing definitely has my password\ninformation and sort of it",
    "start": "941250",
    "end": "949680"
  },
  {
    "text": "doesn't know officially\nthat it is actually the same physical person.",
    "start": "949680",
    "end": "954810"
  },
  {
    "text": "The other thing, though, that\nwe want authentication to do is to tell us basically that\nthe message that was sent",
    "start": "954810",
    "end": "969830"
  },
  {
    "text": "is equal to the message\nthat was received. ",
    "start": "969830",
    "end": "975659"
  },
  {
    "text": "We want it to be the case\nthat if Alice sends a message to Bob, that when Bob\nreceives that message, we want him to\nhave some assurance",
    "start": "975659",
    "end": "981460"
  },
  {
    "text": "that, in fact, that message was\nactually the message that Alice tried to send. And we're going\nto talk about how",
    "start": "981460",
    "end": "988329"
  },
  {
    "text": "this is sort of going to relate\nto the problem of integrity that we talked about before,\nverifying that a message hasn't",
    "start": "988330",
    "end": "993350"
  },
  {
    "text": "been corrupted in transmission. But this is actually\na harder requirement because we might need\nto not only worry",
    "start": "993350",
    "end": "998650"
  },
  {
    "text": "about sort of random bits being\nflipped by the communication channel but we need to worry\nabout some malicious person",
    "start": "998650",
    "end": "1004279"
  },
  {
    "text": "coming in and physically\nactively modifying the bytes of the message. ",
    "start": "1004280",
    "end": "1011290"
  },
  {
    "text": "Authentication is\nsort of the first step that we need to have\nin any secure system because authentication\nis going to be the key.",
    "start": "1011290",
    "end": "1018300"
  },
  {
    "text": "We have to authenticate\na user before we can authorize the user. Before we can say, yes,\nthis user is allowed,",
    "start": "1018300",
    "end": "1023310"
  },
  {
    "text": "we have to figure\nout who the user is. And, similarly, we can use\nauthentication, this process",
    "start": "1023310",
    "end": "1029640"
  },
  {
    "text": "of figuring out who\na user is to help us to build up audit trails. Remember we said\naudit trails are something that is important.",
    "start": "1029640",
    "end": "1035119"
  },
  {
    "text": "Once we figure\nout who a user is, we can keep logs of which\nuser it was that connected to our machine. ",
    "start": "1035119",
    "end": "1044510"
  },
  {
    "text": "Let's look at a simple model\nof how authentication works.",
    "start": "1044510",
    "end": "1049880"
  },
  {
    "start": "1045000",
    "end": "1145000"
  },
  {
    "start": "1049880",
    "end": "1055572"
  },
  {
    "text": "The idea is as follows. We have our principle,\nsay, for example, a user who is sending a\nrequest to some server.",
    "start": "1055572",
    "end": "1070940"
  },
  {
    "text": " And this request might be\nsomething, for example,",
    "start": "1070940",
    "end": "1080390"
  },
  {
    "text": "like buy Apple stock. ",
    "start": "1080390",
    "end": "1086710"
  },
  {
    "text": "And the server's\njob is to determine whether this request is actually\nauthentic, whether it actually",
    "start": "1086710",
    "end": "1092149"
  },
  {
    "text": "came from the user it\nclaims to come from and whether the message\nthat was received is actually the\nmessage that was sent.",
    "start": "1092150",
    "end": "1098040"
  },
  {
    "text": " The way it's going\nto do this is we're going to introduce something\nwe call a guard that",
    "start": "1098040",
    "end": "1106240"
  },
  {
    "text": "is at the front end\nof this server that takes in all the\nincoming requests and is in charge of\nauthenticating them.",
    "start": "1106240",
    "end": "1111779"
  },
  {
    "text": "And then this guard is going\nto dispatch results off to any of the services\nthat the server provides.",
    "start": "1111780",
    "end": "1120309"
  },
  {
    "text": "It is going to say\nif the request is authentic it is going to invoke\nthe service that we need.",
    "start": "1120310",
    "end": "1126980"
  },
  {
    "text": "In other words, this guard\nis the type of mediator that sits in between all the\nrequests between the principle and the service that\nit is trying to access",
    "start": "1126980",
    "end": "1133780"
  },
  {
    "text": "and the guard is going\nto be the thing that does all of our authentication.",
    "start": "1133780",
    "end": "1150410"
  },
  {
    "start": "1145000",
    "end": "1905000"
  },
  {
    "text": "Now the question is what is it\nexactly that the guard does? What are the processes\nthat the guard",
    "start": "1150410",
    "end": "1156110"
  },
  {
    "text": "has to go through in order\nto authenticate a user? And, before we talk about the\nspecific technical solution,",
    "start": "1156110",
    "end": "1163299"
  },
  {
    "text": "I want to sort about two\nthings that are really going on when you're\ntrying to figure out",
    "start": "1163300",
    "end": "1169992"
  },
  {
    "text": "who it is that is requesting\nand whether you're going to allow that person\nto do what they want to do. ",
    "start": "1169992",
    "end": "1177200"
  },
  {
    "text": "So the issue is,\nessentially, as follows. There is this question\nabout is the computer that",
    "start": "1177200",
    "end": "1186470"
  },
  {
    "text": "is making this request actually\nhave the appropriate keys to make this request? Does it have the\nappropriate password",
    "start": "1186470",
    "end": "1192010"
  },
  {
    "text": "to be allowed to\nmake this request? Then there is this\nother question which is do I trust this user? Is this somebody who I\nwant using my service?",
    "start": "1192010",
    "end": "1200450"
  },
  {
    "text": "Suppose that I go to E*Trade\nand say I want to buy Apple.",
    "start": "1200450",
    "end": "1205610"
  },
  {
    "text": "How does E*Trade decide\nwhether or not it trusts me, whether I'm somebody who is\nallowed to buy Apple stock from them or not?",
    "start": "1205610",
    "end": "1211070"
  },
  {
    "text": "So they have some\nprocess for doing that. You have this mechanical\nprocess of authentication. ",
    "start": "1211070",
    "end": "1220279"
  },
  {
    "text": "And then we have this sort\nof psychological process of determining whether or\nnot you trust somebody.",
    "start": "1220280",
    "end": "1228160"
  },
  {
    "text": "So this authentication is\ngoing to be a technical thing",
    "start": "1228160",
    "end": "1233880"
  },
  {
    "text": "and we are going to describe\nthis as being psychological. What these things are connected\nby is some notion of a name.",
    "start": "1233880",
    "end": "1250070"
  },
  {
    "text": "What the authentication\nsays is, for example, Sam wants to buy Apple. It determines that I am,\nin fact, the person who",
    "start": "1250070",
    "end": "1257600"
  },
  {
    "text": "is making the\nrequest, that it is able to verify that I am\nthe one who is actually",
    "start": "1257600",
    "end": "1264240"
  },
  {
    "text": "making the request. What trust is\nresponsible of doing is determining whether or\nnot Sam should actually be",
    "start": "1264240",
    "end": "1269456"
  },
  {
    "text": "allowed to make this request. And this is not something\nthat we necessarily have a technical solution to.",
    "start": "1269456",
    "end": "1274659"
  },
  {
    "text": " Different computer systems\nhave different ways of determining whether or not\nthey should trust each other.",
    "start": "1274660",
    "end": "1281640"
  },
  {
    "text": "For example, when you go\nto a service on the Web,",
    "start": "1281640",
    "end": "1286817"
  },
  {
    "text": "you make a decision about\nwhether you trust that service based on some sort\nof way that you",
    "start": "1286817",
    "end": "1292009"
  },
  {
    "text": "have of evaluating the service. Maybe your Mom told you that\nE*Trade is the best place to buy stocks on\nthe Internet with.",
    "start": "1292009",
    "end": "1298450"
  },
  {
    "text": "You trust your Mom and so,\ntherefore, you trust E*Trade. Or maybe you saw an\nadvertisement for E*Trade and you think any company that\nhas enough money to advertise",
    "start": "1298450",
    "end": "1306500"
  },
  {
    "text": "on the side of the freeway\nmust be a trustworthy company and, therefore, I trust you.",
    "start": "1306500",
    "end": "1311700"
  },
  {
    "text": "Similarly, E*Trade, presumably\ndetermines that they trust you based on, well, one\nthing they might do is,",
    "start": "1311700",
    "end": "1317890"
  },
  {
    "text": "you might give them a\nbank account number, and your bank might say, yes,\nthis person has enough money to make this request.",
    "start": "1317890",
    "end": "1323210"
  },
  {
    "text": "That is a way that they might\ndecide that they trust you. Alternatively, E*Trade\ngives out loans,",
    "start": "1323210",
    "end": "1329549"
  },
  {
    "text": "so maybe they go talk to\nyour credit reporting agency, and the credit reporting\nagency says, yeah,",
    "start": "1329550",
    "end": "1335279"
  },
  {
    "text": "this guy is trustworthy. He has a high credit\nscore so, therefore,",
    "start": "1335280",
    "end": "1341556"
  },
  {
    "text": "E*Trade will let you borrow\n$1,000 to invest in the stock market or something. ",
    "start": "1341556",
    "end": "1347250"
  },
  {
    "text": "This issue of trust\nis one that we don't have a\ntechnical solution to, but it is absolutely\nan essential part of authenticating and\nauthorizing a user",
    "start": "1347250",
    "end": "1354528"
  },
  {
    "text": "to use a computer system. So it's worth just\nbearing this in mind that any time you're\nbuilding a computer",
    "start": "1354529",
    "end": "1360150"
  },
  {
    "text": "system you need\nto think about how it is that you determine whether\na user is trustworthy or not.",
    "start": "1360150",
    "end": "1365896"
  },
  {
    "text": "And this goes both ways, both\nfor the user of the system, how do they determine\nthat you're trustworthy, and for the system,\nhow do you determine",
    "start": "1365896",
    "end": "1371690"
  },
  {
    "text": "that the users are trustworthy? ",
    "start": "1371690",
    "end": "1378230"
  },
  {
    "text": "Now the key problem is\nfocusing on this sort of authentication problem. What is the technical\nmeat of how we're actually",
    "start": "1378230",
    "end": "1386072"
  },
  {
    "text": "going to authenticate a user? ",
    "start": "1386072",
    "end": "1399730"
  },
  {
    "text": "One of these problems\nis determining that this message that\nwas sent was actually the message that was received.",
    "start": "1399730",
    "end": "1405869"
  },
  {
    "text": "Here is a simply proposal\nthat I might have which is I might compute\none of these CRC checks.",
    "start": "1405869",
    "end": "1413472"
  },
  {
    "text": "These checksums that\nwe talked about when we were talking about networking\nthat we used to determine whether or not the message has\nbeen corrupted in transmission.",
    "start": "1413472",
    "end": "1421370"
  },
  {
    "text": "It turns out that is\nnot going to work. You might also think\nthe way that you are going to insure that\nthe person who is requesting",
    "start": "1421370",
    "end": "1428360"
  },
  {
    "text": "the message is actually\nwho they claim to be is, for example, using\nour encryption primitive.",
    "start": "1428360",
    "end": "1437390"
  },
  {
    "text": "If we had a one time\npad available to us, we might encrypt\nthe entire stream of data that is going across.",
    "start": "1437390",
    "end": "1442990"
  },
  {
    "text": "And then we would\nthink well, there is no way that somebody\non the other end, unless they are\nauthorized to read this, will actually be\nable to read it.",
    "start": "1442990",
    "end": "1450230"
  },
  {
    "text": "And, therefore, this is going to\ngive us some guaranty about who is making the request. Neither of these things quite\nworks, and let me explain why.",
    "start": "1450230",
    "end": "1457430"
  },
  {
    "text": " Integrity, in the sense that we\nstudied it previously in 6.033,",
    "start": "1457430",
    "end": "1463600"
  },
  {
    "text": "is not equal to authenticity,\nis not equal to confidentiality.",
    "start": "1463600",
    "end": "1471263"
  },
  {
    "start": "1471263",
    "end": "1477840"
  },
  {
    "text": "And the reason is as follows. Let's just look at\na simple example. Suppose there is\nAlice who is sending",
    "start": "1477840",
    "end": "1485530"
  },
  {
    "text": "a message to some server,\nand suppose this server",
    "start": "1485530",
    "end": "1491390"
  },
  {
    "text": "is something where\nAlice doesn't really mind if her request\nis seen in public but she wants to make sure that\nthe server actually receives",
    "start": "1491390",
    "end": "1501897"
  },
  {
    "text": "the request that she made. So she cares about it\nbeing the right request, but she doesn't care about\nit being a secret request.",
    "start": "1501897",
    "end": "1507700"
  },
  {
    "text": "Maybe Alice says I want to\ndonate $100 to Save the Whales.",
    "start": "1507700",
    "end": "1518850"
  },
  {
    "text": "She says I don't\ncare if anybody knows that I want to save the whales. That's a noble and\nrespectful cause.",
    "start": "1518850",
    "end": "1525540"
  },
  {
    "text": "In fact, I am proud of the fact\nthat I want to save the whales. So anybody who wants to\ncan look at this message.",
    "start": "1525540",
    "end": "1531169"
  },
  {
    "text": "But I really only want to\ngive Save the Whales $100. I want to make sure\nthat somebody doesn't mess with this message and some\nSave the Whale activist doesn't",
    "start": "1531170",
    "end": "1539000"
  },
  {
    "text": "change this message to\nbe $10,000 so that I don't lose a bunch of money.",
    "start": "1539000",
    "end": "1545400"
  },
  {
    "text": "Let's look at some\ntechniques that we might use to sort of guaranty\nthat this is the case.",
    "start": "1545400",
    "end": "1551000"
  },
  {
    "text": "One thing we might do is, for\nexample, use a one time pad.",
    "start": "1551000",
    "end": "1557550"
  },
  {
    "text": "Suppose Alice and the server\nshare a random bit string. Alice might encode, might xor\nthe message that she transmits,",
    "start": "1557550",
    "end": "1567210"
  },
  {
    "text": "and then the server\nmight apply the xor again with the same bit string\nand get the message back.",
    "start": "1567210",
    "end": "1572530"
  },
  {
    "text": " The problem with\nthis is that this",
    "start": "1572530",
    "end": "1578640"
  },
  {
    "text": "doesn't prevent some\nmalicious user or Lucifer from coming into\nthe middle of this",
    "start": "1578640",
    "end": "1584539"
  },
  {
    "text": "and interfering with this byte\nstring as it is transmitted. Even though Lucifer cannot\nactually look at the message, he can manipulate the byes\nto his heart's content.",
    "start": "1584540",
    "end": "1591603"
  },
  {
    "text": "And he may get lucky and change\nthe bytes so that it says something like donate some\ndifferent amount of money",
    "start": "1591603",
    "end": "1597040"
  },
  {
    "text": "to save the whales or he may\njust garble Alice's requests so it cannot be processed. So one time pad is\nnot going to work.",
    "start": "1597040",
    "end": "1605590"
  },
  {
    "text": "Now, the other alternative\nI said we can talk about would be something\nlike using a CRC.",
    "start": "1605590",
    "end": "1612750"
  },
  {
    "text": "What Alice would do is send\nm followed by the CRC of m.",
    "start": "1612750",
    "end": "1619430"
  },
  {
    "text": "The problem with this\nis that now Lucifer can look at this\nmessage as it comes across the wire\nand the checksum,",
    "start": "1619430",
    "end": "1624919"
  },
  {
    "text": "and he can simply\nchange the message to say whatever he wants and\nthen recomputed the checksum. So the checksums, as we have\ntalked about them so far,",
    "start": "1624920",
    "end": "1631950"
  },
  {
    "text": "are good for handling the\ncase of non-malicious attacks or non-malicious problems\nlike a byte gets changed",
    "start": "1631950",
    "end": "1638380"
  },
  {
    "text": "in transmission or there is\nsome error in transmission, but they don't solve this\nproblem of preventing somebody",
    "start": "1638380",
    "end": "1644692"
  },
  {
    "text": "from tampering with\nthe message and being able to detect when that\ntampering also effects the CRC.",
    "start": "1644692",
    "end": "1650570"
  },
  {
    "text": " If you think about\nthis for a minute,",
    "start": "1650570",
    "end": "1656680"
  },
  {
    "text": "the property that\nwe want sort of feels like some combination\nof these two things. Basically, what we want is some\nchecksum-like operation such",
    "start": "1656680",
    "end": "1668100"
  },
  {
    "text": "that we know that the only\nperson who could have possibly",
    "start": "1668100",
    "end": "1673309"
  },
  {
    "text": "written this checksum was\nsomebody who access to some key",
    "start": "1673310",
    "end": "1678540"
  },
  {
    "text": "that Alice has like\nAlice's private key. We want a checksum that\nis dependent on a key,",
    "start": "1678540",
    "end": "1692040"
  },
  {
    "text": "and we want this\nchecksum to have some fairly strong properties. We want this checksum to\nbe resistant to these kinds",
    "start": "1692040",
    "end": "1699070"
  },
  {
    "text": "of attacks that we talked\nabout Lucifer applying. In particular, we\nwant the checksum",
    "start": "1699070",
    "end": "1705010"
  },
  {
    "text": "to be resistant to Lucifer\nmodifying the message. So the checksum should\ndetect that this message was",
    "start": "1705010",
    "end": "1711770"
  },
  {
    "text": "modified, if it was modified.  We also want it to be able to\ndetect other transformations",
    "start": "1711770",
    "end": "1720170"
  },
  {
    "text": "of the message. For example, suppose that rather\nthan modifying m, changing",
    "start": "1720170",
    "end": "1725720"
  },
  {
    "text": "something, Lucifer just reorders\nsome of the words in it, keeps exactly the same\ncharacters and exactly",
    "start": "1725720",
    "end": "1731310"
  },
  {
    "text": "the same length but just\nswitches some things around. ",
    "start": "1731310",
    "end": "1736942"
  },
  {
    "text": "And there are other\nkinds of things that we might want to be\nable to resist as well. For example, taking\nexactly the same message",
    "start": "1736942",
    "end": "1743452"
  },
  {
    "text": "and sticking a little bit of\nextra data onto the end of it, appending something\nto the message. There is a bunch of\ndifferent sort of properties",
    "start": "1743452",
    "end": "1749620"
  },
  {
    "text": "that we want whatever\nthis thing is that is going to allow us to\ndo authentication to have.",
    "start": "1749620",
    "end": "1756690"
  },
  {
    "text": "Let's look at the\nsort of model for how our basic authentication\nsystem is going to work.",
    "start": "1756690",
    "end": "1763412"
  },
  {
    "text": "It is really pretty\nstraightforward and is going to rely\non using our sign and verify primitives\nthat I am erasing.",
    "start": "1763412",
    "end": "1769680"
  },
  {
    "start": "1769680",
    "end": "1775760"
  },
  {
    "text": "The idea is as follows. We have Alice over here\nthat is sending a message. ",
    "start": "1775760",
    "end": "1782400"
  },
  {
    "text": "That message is going\nto go into our sign cryptographic primitive,\nit's going to be transformed",
    "start": "1782400",
    "end": "1788470"
  },
  {
    "text": "and is going to come over\nhere to our verify box, and then it is going to\ncome out on the other side",
    "start": "1788470",
    "end": "1795810"
  },
  {
    "text": "at the server. ",
    "start": "1795810",
    "end": "1801260"
  },
  {
    "text": "And the sign is going to have\nsome k1 that gets fed into it and verify is going to have\nsome k2 that gets fed into it.",
    "start": "1801260",
    "end": "1807700"
  },
  {
    "text": "And the idea is that in\naddition to signing the message we are also going to\ntransmit the message itself.",
    "start": "1807700",
    "end": "1813860"
  },
  {
    "text": "So this is going to be sort\nof like this idea of putting a CRC on a message,\nbut this thing that we are going to do\nwhen we sign is going",
    "start": "1813860",
    "end": "1819904"
  },
  {
    "text": "to provide this sort of better\nproperties than the basic CRC did. The idea is this is a small\nbit of additional information",
    "start": "1819904",
    "end": "1826260"
  },
  {
    "text": "that gets transmitted with the\nmessage that allows the server to be confident that, in\nfact, the message that",
    "start": "1826260",
    "end": "1831270"
  },
  {
    "text": "was transmitted came from\nAlice and that it has not been corrupted along the way. ",
    "start": "1831270",
    "end": "1845720"
  },
  {
    "text": "This is the basic idea now k1\ncomes in, it gets transmitted,",
    "start": "1845720",
    "end": "1853522"
  },
  {
    "text": "goes through the verify\nbox, and the verify box reports yes or no, this message\nwas correct or was not correct.",
    "start": "1853522",
    "end": "1858799"
  },
  {
    "text": "And the server also has\naccess to the message. If the server gets yes\nin the message then it continues to process it.",
    "start": "1858800",
    "end": "1867590"
  },
  {
    "text": "And we have two kinds of ways\nof doing authentification that correspond to shared key\nand public key cryptography.",
    "start": "1867590",
    "end": "1874570"
  },
  {
    "text": "If k1 is equal to k2 we say that\nthis little bit of information",
    "start": "1874570",
    "end": "1881287"
  },
  {
    "text": "that we have transmitted is a\nMAC, a message authenticator. ",
    "start": "1881287",
    "end": "1886950"
  },
  {
    "text": "When you are using shared\nkey cryptography that is the bit of additional\ninformation that gets transmitted.",
    "start": "1886950",
    "end": "1893360"
  },
  {
    "text": "And when k1 is not\nequal to k2, that is if we're using\npublic key cryptography, we call this bit of additional\ninformation a signature.",
    "start": "1893360",
    "end": "1902440"
  },
  {
    "text": " To give you a very\nsimple example",
    "start": "1902440",
    "end": "1908290"
  },
  {
    "start": "1905000",
    "end": "2080000"
  },
  {
    "text": "of what a signature might\nconsist of, suppose we have a message m. In public key\ncryptography, a simple kind",
    "start": "1908290",
    "end": "1914970"
  },
  {
    "text": "of signature that\nyou can compute is to take the hash of m.",
    "start": "1914970",
    "end": "1920630"
  },
  {
    "text": "And then take that\nthing and encode it",
    "start": "1920630",
    "end": "1926260"
  },
  {
    "text": "with Alice's private key. This is a simple\nkind of a signature",
    "start": "1926260",
    "end": "1933590"
  },
  {
    "text": "that we might\nattach to a message. And this has the\nproperties we want, which is that we believe that\nonly Alice could have actually",
    "start": "1933590",
    "end": "1943734"
  },
  {
    "text": "encoded this message because\nwe belief that only Alice has access to her private key. And so when somebody uses\nthe public key to decode this",
    "start": "1943734",
    "end": "1952560"
  },
  {
    "text": "they get something back which\nis a hash of the message.",
    "start": "1952560",
    "end": "1962720"
  },
  {
    "text": "And we call this a\ncryptographically secure hash. ",
    "start": "1962720",
    "end": "1969530"
  },
  {
    "text": "It is some way of combining\nthe bits of the message",
    "start": "1969530",
    "end": "1979070"
  },
  {
    "text": "together such that when the\nserver computes the hash of m, the probability that it\nmatches this hash that",
    "start": "1979070",
    "end": "1986299"
  },
  {
    "text": "was in the signature\nthat Alice sent, they will match if the\nmessages are the same.",
    "start": "1986300",
    "end": "1993500"
  },
  {
    "text": "And, if the hash was computed\non a different message than the message that\nthe server receives, the probability\nis very, very low",
    "start": "1993500",
    "end": "2000150"
  },
  {
    "text": "that these two messages\nare, in fact, the same. So they say it has a low\ncollision probability. It's very unlikely that some\nm prime that is not equal to m",
    "start": "2000150",
    "end": "2009140"
  },
  {
    "text": "has the same hash as m. That's what a cryptographically\nsecure hash provides us.",
    "start": "2009140",
    "end": "2014289"
  },
  {
    "text": "And, again, cryptographically\nsecure hashes are another kind of sort\nof mathematical technique.",
    "start": "2014290",
    "end": "2019940"
  },
  {
    "text": "There is a set of algorithms\nfor driving these things. The appendix talks about\na common one which is used",
    "start": "2019940",
    "end": "2025909"
  },
  {
    "text": "called sha-1. And sha-1, it turns\nout, has recently been shown to have some higher\nprobability of collisions",
    "start": "2025910",
    "end": "2033080"
  },
  {
    "text": "than was previously thought. And there is a new\nprotocol called sha-256 which is still\nbelieved to be secure. But sha-1, the S-H-A, which\nstands for secure hash,",
    "start": "2033080",
    "end": "2041649"
  },
  {
    "text": "is one that is very commonly\nused in the world today.",
    "start": "2041650",
    "end": "2047830"
  },
  {
    "text": "So this is a simple\nexample of a signature and it allows basically\nfor the server to verify one by decoding the\nmessage with Alice's public key",
    "start": "2047830",
    "end": "2056869"
  },
  {
    "text": "that the message\nactually came from Alice, and this hash allows it\nto be reasonably assured",
    "start": "2056870",
    "end": "2061940"
  },
  {
    "text": "that the message has\nnot been tampered with. If the message had been tampered\nwith the hash wouldn't match,",
    "start": "2061940",
    "end": "2068550"
  },
  {
    "text": "and if this signature had\nbeen tampered with then the receiver wouldn't have\nbeen able to decode this thing",
    "start": "2068550",
    "end": "2074399"
  },
  {
    "text": "and get something back\nthat made any sense. Or, again, the hash\nprobably wouldn't match.",
    "start": "2074400",
    "end": "2080440"
  },
  {
    "start": "2080000",
    "end": "2270000"
  },
  {
    "text": "This is the basic solution\nfor doing authentication.",
    "start": "2080440",
    "end": "2085513"
  },
  {
    "text": " This screen is too low.",
    "start": "2085513",
    "end": "2094629"
  },
  {
    "text": "Now that we've sort\nof seen a method",
    "start": "2094630",
    "end": "2100140"
  },
  {
    "text": "for authenticating\na message, there are sort of a bunch of little\ndetails that we left hanging.",
    "start": "2100140",
    "end": "2105292"
  },
  {
    "text": "In particular, one of the\ndetails that we haven't yet addressed is, suppose we are\nusing some public key based",
    "start": "2105292",
    "end": "2112700"
  },
  {
    "text": "mechanism like this,\nI haven't yet told you or we haven't talked about\nhow it is that somebody",
    "start": "2112700",
    "end": "2119020"
  },
  {
    "text": "would learn Alice's public key? We sort of just\nassumed that whoever is receiving the message\nis able to figure out",
    "start": "2119020",
    "end": "2125820"
  },
  {
    "text": "what Alice's public key is. And one thing you could imagine\nis that Alice goes around",
    "start": "2125820",
    "end": "2130839"
  },
  {
    "text": "and physically meets\neverybody who she would ever want to give a key\nto and she hands",
    "start": "2130840",
    "end": "2136000"
  },
  {
    "text": "them a slip of paper that has\nher public key written on it. But, obviously, one, that's not\nhow the Internet works clearly",
    "start": "2136000",
    "end": "2141680"
  },
  {
    "text": "because we have some\ncryptographic protocols that allow us, we don't\nhave to meet everybody and we can still get established\nsecure communication channels.",
    "start": "2141680",
    "end": "2148961"
  },
  {
    "text": "And, two, that just doesn't\nsound very scalable. It doesn't sound like\na great solution. ",
    "start": "2148961",
    "end": "2155450"
  },
  {
    "text": "This is the key\ndistribution problem. This is going to apply\nmostly for the case",
    "start": "2155450",
    "end": "2161450"
  },
  {
    "text": "of public key cryptography. In the case of shared\nkey cryptography,",
    "start": "2161450",
    "end": "2170423"
  },
  {
    "text": "this method I am going\nto show you in a minute is not going to\napply necessarily to shared key cryptography,\nbut I will show you",
    "start": "2170424",
    "end": "2175928"
  },
  {
    "text": "a way in which we can use\npublic key cryptography to sort of bootstrap or to\nexchange a shared key which",
    "start": "2175928",
    "end": "2182600"
  },
  {
    "text": "we can then use over our\ncommunication channel. This is the key\ndistribution problem",
    "start": "2182600",
    "end": "2187660"
  },
  {
    "text": "for public key\ncryptographic systems. ",
    "start": "2187660",
    "end": "2199170"
  },
  {
    "text": "One solution, if Alice cannot\nphysically meet with Bob, one thing that you might imagine\ndoing is you could just have",
    "start": "2199170",
    "end": "2206570"
  },
  {
    "text": "Alice send a message to Bob\nsaying here is my public key.",
    "start": "2206570",
    "end": "2215870"
  },
  {
    "text": "Or, better yet, Alice's public\nkey is, A's public key is X.",
    "start": "2215870",
    "end": "2227150"
  },
  {
    "text": "But this isn't a\nvery good approach because how does B\nactually know that this was Alice that sent this message?",
    "start": "2227150",
    "end": "2233090"
  },
  {
    "text": "This could have been some\nLucifer who said, oh, by the way, Alice's key is this. And now B thinks that Alice's\nkey is, in fact, Lucifer's key.",
    "start": "2233090",
    "end": "2240680"
  },
  {
    "text": "And now Lucifer can\ndecode any message that B wants to send to A. So this isn't really\na very good approach",
    "start": "2240680",
    "end": "2246980"
  },
  {
    "text": "because if A just, sort\nof out of the blue, blurts out to be\nmy key is this then",
    "start": "2246980",
    "end": "2253400"
  },
  {
    "text": "it doesn't have any way of\nactually knowing that this was, in fact, A who\nreported this key.",
    "start": "2253400",
    "end": "2258450"
  },
  {
    "text": "That doesn't solve our problem. Instead, we are going to use a\ntechnique called certificates. ",
    "start": "2258450",
    "end": "2267470"
  },
  {
    "text": "Certificates work like this. ",
    "start": "2267470",
    "end": "2273508"
  },
  {
    "text": "The idea with\ncertificates is that we are going to introduce\na third-party who I have shown here as Charles.",
    "start": "2273509",
    "end": "2279329"
  },
  {
    "text": "Let's suppose that Alice and\nBob know and trust Charles. So they have already somehow\nexchanged information",
    "start": "2279330",
    "end": "2286000"
  },
  {
    "text": "with Charles, exchanged\nkeys with him. The idea is now suppose Alice\nwants to send a message to Bob.",
    "start": "2286000",
    "end": "2298809"
  },
  {
    "text": "What she does is she\nsends this message, and she signs the message\nusing her private key.",
    "start": "2298810",
    "end": "2306359"
  },
  {
    "text": "That is what this S\nparentheses m kApriv means. Now what Bob is going\nto do is say, well, I",
    "start": "2306360",
    "end": "2312710"
  },
  {
    "text": "don't know who this Alice is. And rather than\nsimply asking Alice for her public key, which\nwe have already said",
    "start": "2312710",
    "end": "2318840"
  },
  {
    "text": "is not a very good\nidea, what Bob does is he asks Charles\nfor her public key because he trusts Charles and\nhe knows that Charles probably",
    "start": "2318840",
    "end": "2324789"
  },
  {
    "text": "knows something about Alice. And what Charles responds\nwith is Alice's public key,",
    "start": "2324790",
    "end": "2330839"
  },
  {
    "text": "as well as he needs to\nmake sure that he, himself, signs this message with his own\nprivate key so that somebody",
    "start": "2330840",
    "end": "2338471"
  },
  {
    "text": "else cannot intercept the\nmessage as it is coming back and overwrite it. He put his signature\non this message",
    "start": "2338471",
    "end": "2346730"
  },
  {
    "text": "that he sends back with\nAlice's public key in it. Now Bob has Alice's\npublic key, and he can go ahead and\ndecode this message,",
    "start": "2346730",
    "end": "2354010"
  },
  {
    "text": "he can go ahead and verify\nthis message that Alice tried to send to him.",
    "start": "2354010",
    "end": "2359289"
  },
  {
    "text": "So, in this, we call\nthis Charles here, sometimes it is called a\nCA, a certificate authority.",
    "start": "2359290",
    "end": "2366650"
  },
  {
    "text": "And the idea is that these\nCAs, a small number of CAs",
    "start": "2366650",
    "end": "2374670"
  },
  {
    "text": "can service a very\nlarge number of users. So rather than having to\nhave every user exchange keys",
    "start": "2374670",
    "end": "2380250"
  },
  {
    "text": "with every other\nuser, each user just exchanges keys with a few\ncertificate authorities. And then, those certificate\nauthorities, sort of act",
    "start": "2380250",
    "end": "2386456"
  },
  {
    "text": "like these hubs that\npropagate keys out into the rest of the users.",
    "start": "2386456",
    "end": "2393339"
  },
  {
    "text": " This is a very\nsimple way in which you might be able to\ndisseminate a public key.",
    "start": "2393340",
    "end": "2400106"
  },
  {
    "text": "We will talk a little\nbit later on about sort of a more formal\nway of reasoning",
    "start": "2400106",
    "end": "2405350"
  },
  {
    "text": "about how public\nkeys are disseminated and how these kinds of\nwebs of trust are built up, but this is just a\nsimple way to sort",
    "start": "2405350",
    "end": "2412130"
  },
  {
    "text": "of start thinking about\nhow public keys might be disseminated automatically\nover the Internet.",
    "start": "2412130",
    "end": "2417330"
  },
  {
    "start": "2417330",
    "end": "2422390"
  },
  {
    "text": "What I want to do now\nis just briefly turn, with the last few\nminutes, to this question of how we actually establish\na secure communication",
    "start": "2422390",
    "end": "2433710"
  },
  {
    "text": "channel between two parties. This is going to\nget at our property,",
    "start": "2433710",
    "end": "2439600"
  },
  {
    "text": "the sort of establishing a\nconfidential communication channel. We are going to talk\na little bit about how we establish confidentiality.",
    "start": "2439600",
    "end": "2445204"
  },
  {
    "text": " And so the idea is\nthat we want to find",
    "start": "2445205",
    "end": "2459477"
  },
  {
    "text": "some way that we can encrypt the\ncommunication between our two parties. And what we are going to\ndo is first authenticate",
    "start": "2459477",
    "end": "2465260"
  },
  {
    "text": "the user using a\ntechnique like this, and then what we\nare going to do is",
    "start": "2465260",
    "end": "2477780"
  },
  {
    "text": "use public key to authenticate.",
    "start": "2477780",
    "end": "2484610"
  },
  {
    "text": "This is establishing a\nsecure communication channel.",
    "start": "2484610",
    "end": "2493380"
  },
  {
    "text": "We are going to use public\nkey to authenticate.",
    "start": "2493380",
    "end": "2498609"
  },
  {
    "text": "But what often\nhappens in practice in the Internet is that you\nuse public key to authenticate,",
    "start": "2498610",
    "end": "2504265"
  },
  {
    "text": "and then what you\nare going to do is use a shared key\ncryptography protocol to actually encrypt\nthe information that",
    "start": "2504266",
    "end": "2509780"
  },
  {
    "text": "is flowing back and forth\nbetween the two parties. And the reason for that is\nif you sort of looked at,",
    "start": "2509780",
    "end": "2514890"
  },
  {
    "text": "even though I said that these\npublic key methods like RSA, it's easier to exponentiate\nthan it is to factor.",
    "start": "2514890",
    "end": "2522530"
  },
  {
    "text": "It turns out that\nexponentiation in RSA is still relatively expensive\nbecause exponentiation requires, these keys\nare very long, they",
    "start": "2522530",
    "end": "2528952"
  },
  {
    "text": "are thousands of\nbytes long, so you are taking these long\nmessages and taking them to very large powers.",
    "start": "2528952",
    "end": "2534700"
  },
  {
    "text": "Doing that is\ncomputationally expensive. You get these very big\nnumbers that computers are not terribly good at handling. And so it has a big\nimpact on performance",
    "start": "2534700",
    "end": "2541440"
  },
  {
    "text": "if you use public key\ncryptography all the time. Instead, often\ntimes what is done",
    "start": "2541440",
    "end": "2546450"
  },
  {
    "text": "is we use public key\ncryptography to sort of, as I said, bootstrap the\nprocess of exchanging a shared",
    "start": "2546450",
    "end": "2552160"
  },
  {
    "text": "key between two servers. That is what we\nare going to see. We are going to see how we\ncan then exchange a shared",
    "start": "2552160",
    "end": "2563190"
  },
  {
    "text": "key which we can then use\nto encrypt the communication between two parties.",
    "start": "2563190",
    "end": "2568820"
  },
  {
    "text": " This is a little\npuzzle for you guys.",
    "start": "2568820",
    "end": "2574059"
  },
  {
    "start": "2570000",
    "end": "2765000"
  },
  {
    "text": "What I am going to put up\nnow is a broken protocol",
    "start": "2574060",
    "end": "2579272"
  },
  {
    "text": "and see if you can figure out,\nin the next few minutes, how it is broken. It is not very broken but it is\nbroken in kind of a subtle way.",
    "start": "2579272",
    "end": "2587049"
  },
  {
    "text": "This is a protocol\ncalled Denning-Sacco. And when it was\noriginally proposed, the original proposers of it\nactually got it wrong, too.",
    "start": "2587050",
    "end": "2592860"
  },
  {
    "text": "And they presumably thought\nabout it for a while before they got it wrong. This is meant to\nbe an illustration that designing cryptographic\nprotocols is hard",
    "start": "2592860",
    "end": "2599420"
  },
  {
    "text": "and it needs to be\nsomething that you need to think about very carefully. Here is the protocol. Suppose that Alice wants to send\na message between Alice and Bob",
    "start": "2599420",
    "end": "2608390"
  },
  {
    "text": "and we have our\ncertificate authority. Alice says to the\ncertificate authority, I would like to do some\ncommunication with Bob.",
    "start": "2608390",
    "end": "2617450"
  },
  {
    "text": "And my name is Alice. What Bob sends back is\none of these certificates,",
    "start": "2617450",
    "end": "2626160"
  },
  {
    "text": "a signed message that has\nAlice's public key in it and Bob's public key.",
    "start": "2626160",
    "end": "2631460"
  },
  {
    "text": "We call these signed\nmessages certificates. These come from the\ncertificate authority. And they basically are a\nway that if Alice trusts",
    "start": "2631460",
    "end": "2638570"
  },
  {
    "text": "the certificate authority she\ncan decode Bob's public key",
    "start": "2638570",
    "end": "2645116"
  },
  {
    "text": "and be reasonably\nassured that this is, in fact, Bob's public key. She is also going to get\na certificate for herself",
    "start": "2645116",
    "end": "2653220"
  },
  {
    "text": "that she can send\nto Bob so that Bob doesn't have to go contact the\ncertificate authority again. She is going to\nsend this thing that",
    "start": "2653220",
    "end": "2658920"
  },
  {
    "text": "has been signed the\ncertificate authority which is going to allow Bob\nto authenticate her.",
    "start": "2658920",
    "end": "2664780"
  },
  {
    "text": "So she does that. What she sends to Bob\nis her own certificate",
    "start": "2664780",
    "end": "2671410"
  },
  {
    "text": "which is this little thing\nshown here on the left. And then she also sends to\nBob a proposed shared key.",
    "start": "2671410",
    "end": "2686350"
  },
  {
    "text": "This is kAB. And she signs that proposed\nkey with her own private key. When she signs this key\nwith her private key",
    "start": "2686350",
    "end": "2692810"
  },
  {
    "text": "that means that\nBob can be assured that this is an authentic\nmessage, in fact, from Alice.",
    "start": "2692810",
    "end": "2698240"
  },
  {
    "text": "And then she encrypts\nit with Bob's public key so that only Bob can be\nthe one who can decode it.",
    "start": "2698240",
    "end": "2706830"
  },
  {
    "text": "So only Bob will actually\nsee the contents, see what this key is.",
    "start": "2706830",
    "end": "2712850"
  },
  {
    "text": "And these Ts that I have shown\nhere are simply timestamps, and I will explain\nto you why those are important in a minute. We need timestamps that go\nalong with these things.",
    "start": "2712850",
    "end": "2720520"
  },
  {
    "text": "So this proposed key\nhas been both signed with her private\nkey and encrypted",
    "start": "2720520",
    "end": "2725640"
  },
  {
    "text": "with Bob's public key. And now Bob can go ahead and\nsend messages back to Alice.",
    "start": "2725640",
    "end": "2731130"
  },
  {
    "text": "And he can encrypt those\nmessages using kAB, using a shared key encryption\nmechanism which, as we said,",
    "start": "2731130",
    "end": "2738170"
  },
  {
    "text": "is more efficient. So these guys can exchange\na bunch of information with each other in this way. ",
    "start": "2738170",
    "end": "2748280"
  },
  {
    "text": "This is an example of a\ncryptographic protocol. I said there was a bug. Let's try and debug\nit a little bit.",
    "start": "2748280",
    "end": "2753540"
  },
  {
    "text": "And, to get at that,\nlet's talk about what some of the properties of\ncryptographic protocols",
    "start": "2753540",
    "end": "2768160"
  },
  {
    "start": "2765000",
    "end": "2805000"
  },
  {
    "text": "that we would like. One property we would like\nis what is called freshness. ",
    "start": "2768160",
    "end": "2774810"
  },
  {
    "text": "What freshness means is\nthat I am reasonably assured that this message is recent. It came from recent history.",
    "start": "2774810",
    "end": "2781040"
  },
  {
    "text": "And this is what we\nneed the timestamps for. We need to make sure that this\nmessage is, in fact, a message",
    "start": "2781040",
    "end": "2787340"
  },
  {
    "text": "that is relatively new. It is not an old message that\nI generated before that is now",
    "start": "2787340",
    "end": "2792770"
  },
  {
    "text": "being sent back to me again. That is what we are going to\nuse the timestamps here for.",
    "start": "2792770",
    "end": "2798340"
  },
  {
    "text": "We also want to make sure that\nthe message is appropriate. ",
    "start": "2798340",
    "end": "2804890"
  },
  {
    "text": "And, by appropriate, I am\nactually the intended recipient",
    "start": "2804890",
    "end": "2811460"
  },
  {
    "start": "2805000",
    "end": "2890000"
  },
  {
    "text": "of this message and the\nsender of this message is actually who the sender of\nthis message claimed to be.",
    "start": "2811460",
    "end": "2817710"
  },
  {
    "text": "This message actually\nshould be applied right now. This message makes sense.",
    "start": "2817710",
    "end": "2823025"
  },
  {
    "text": "And then, finally, the\nthird property we want is something called\nforward secrecy. What this says is\nessentially we should",
    "start": "2823025",
    "end": "2833840"
  },
  {
    "text": "be able to change the\ncryptographic keys that we are using at some\npoint in the future. Say, for example, if our\nkeys become compromised, we",
    "start": "2833840",
    "end": "2841466"
  },
  {
    "text": "should be able to\nchange the keys and our method should\ncontinue to work. This approach is\npretty clearly true.",
    "start": "2841466",
    "end": "2849590"
  },
  {
    "text": "Alice could request a new key. And then you could imagine\nsome way in which Alice could",
    "start": "2849590",
    "end": "2856420"
  },
  {
    "text": "create a new key and\nsend that new key to Bob and we can sort of\nstart all over again.",
    "start": "2856420",
    "end": "2862450"
  },
  {
    "text": "The two properties that\nare really interesting are this freshness property and\nthis appropriateness property, and they are the two\nproperties that I",
    "start": "2862450",
    "end": "2869099"
  },
  {
    "text": "want to talk about\na little bit more. And if you think about\nwhat the kinds of attacks are that somebody could\napply on this thing,",
    "start": "2869099",
    "end": "2874530"
  },
  {
    "text": "well, one attack\nthey could apply would be an attack on\nthe sort of cryptographic transform itself.",
    "start": "2874530",
    "end": "2880079"
  },
  {
    "text": "A brute force attack where\nyou try and factor the keys, we said that is hard. Another attack that\nthey could apply",
    "start": "2880080",
    "end": "2887120"
  },
  {
    "text": "would be a so-called\nreplay attack. There is a crypto attack\nand so-called replay attack.",
    "start": "2887120",
    "end": "2897350"
  },
  {
    "start": "2890000",
    "end": "2970000"
  },
  {
    "text": " This is that somebody\nmight sort of",
    "start": "2897350",
    "end": "2902494"
  },
  {
    "text": "reuse a message that they saw\ntransmitted over the network before. Some Eve or Lucifer\nmight overhear a message",
    "start": "2902494",
    "end": "2908520"
  },
  {
    "text": "and then might try and\nresend that message in order to get the server\nto do something. Suppose there is a message\nthat tells the server",
    "start": "2908520",
    "end": "2914249"
  },
  {
    "text": "to take some action in the\noutside world, open a door, so you might save up a message\nthat somebody else had sent",
    "start": "2914249",
    "end": "2920880"
  },
  {
    "text": "before that said open the door. And then you might\nresend it in order to get the door open when\nyou wanted it to open.",
    "start": "2920880",
    "end": "2927341"
  },
  {
    "text": "We want to prevent that. And we are going to use\ntimestamps to do this. And getting the\ntimestamps to work out is a little bit tricky.",
    "start": "2927341",
    "end": "2932420"
  },
  {
    "text": "If the sender and the\nreceiver have perfectly synchronized clocks,\nyou might just say as long as the timestamp\nis within the first few",
    "start": "2932420",
    "end": "2939500"
  },
  {
    "text": "milliseconds that is fine. But if that is not\ntrue then you need to do something a little\nbit more sophisticated.",
    "start": "2939500",
    "end": "2945000"
  },
  {
    "text": "There is a protocol\ncalled Kerberos that works this out in detail. And that, again, is\ndescribed in the notes. But the idea is just you put\nthe timestamp in every message",
    "start": "2945000",
    "end": "2952390"
  },
  {
    "text": "that you send. And then when you\nsign the message, when the person on the other\nend decodes that message,",
    "start": "2952390",
    "end": "2958850"
  },
  {
    "text": "they know that this\nmessage was generated as of a particular time. But the third kind of attack\nwe might be worried about",
    "start": "2958850",
    "end": "2965730"
  },
  {
    "text": "is a so-called\nimpersonation attack.",
    "start": "2965730",
    "end": "2971180"
  },
  {
    "start": "2970000",
    "end": "3103000"
  },
  {
    "text": "And this is the attack that\nthis protocol is susceptible to. Does anybody see what the\nbug in this protocol is?",
    "start": "2971180",
    "end": "2985490"
  },
  {
    "start": "2985490",
    "end": "2993807"
  },
  {
    "text": "STUDENT: Charles\ndoes not authenticate that Alice is Alice. Charles does not authenticate?",
    "start": "2993807",
    "end": "2999110"
  },
  {
    "text": "Well, Alice does send\nthis key that says --",
    "start": "2999110",
    "end": "3006470"
  },
  {
    "text": "Charles doesn't actually care\nbecause all Charles saw was a message that said I want\nAlice's public key and B's",
    "start": "3006470",
    "end": "3018140"
  },
  {
    "text": "public key. There is nothing wrong with\nthat message getting corrupted. Alice might get something\nback, but if it comes back",
    "start": "3018140",
    "end": "3025327"
  },
  {
    "text": "it has been signed with\nCharles' private key and so she will know exactly\nwhat it was that was in there. STUDENT: Only Alice knows\nCharles private key?",
    "start": "3025327",
    "end": "3033570"
  },
  {
    "text": "I mean can't someone else\nimpersonate Alice and do that whole process and then\nbe seen as Alice by Bob?",
    "start": "3033570",
    "end": "3042060"
  },
  {
    "text": "But notice that the\nkey has been signed with Alice's private key.",
    "start": "3042060",
    "end": "3047569"
  },
  {
    "text": "This proposed key\nhas been signed with Alice's private key. STUDENT: Alice is sending\nsomething encoded in Charles'",
    "start": "3047570",
    "end": "3054940"
  },
  {
    "text": "private key, is that right? No. Well, all this means\nis that the thing that",
    "start": "3054940",
    "end": "3061160"
  },
  {
    "text": "is encoded with Charles'\nprivate key, Bob is going to be able to\ndecode that thing using Charles' public key.",
    "start": "3061160",
    "end": "3066800"
  },
  {
    "text": "And he is going to\nhave some assurance, in fact, about what\nAlice's public key is.",
    "start": "3066800",
    "end": "3074200"
  },
  {
    "text": "I think that is OK. Anybody else want\nto take a guess? OK. Well, since we\nare out of time, I",
    "start": "3074200",
    "end": "3080234"
  },
  {
    "text": "will talk about this the\nfirst thing next time and will show you what the\nproblem with this protocol is. I will see you on Monday.",
    "start": "3080234",
    "end": "3086319"
  },
  {
    "text": "One announcement\nbefore you guys go. I have a little\ngift for you guys which is that we are going to\ncancel class next Wednesday",
    "start": "3086320",
    "end": "3092269"
  },
  {
    "text": "before the design\nproject is due. So there is no class\nnext Wednesday, but there is class on Monday\nso make sure you come here.",
    "start": "3092270",
    "end": "3098930"
  },
  {
    "start": "3098930",
    "end": "3105087"
  }
]